{
  "metadata": {
    "timestamp": 1736561733359,
    "page": 348,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rendrjs/rendr",
      "stars": 4083,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0673828125,
          "content": "node_modules\ntmp\nnpm-debug.log\ncoverage\n*.sw?\n.DS_Store\nruntime.json\n"
        },
        {
          "name": ".jshintignore",
          "type": "blob",
          "size": 0.01953125,
          "content": "node_modules/\ntest/\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.140625,
          "content": "{\n  \"undef\": true,\n  \"eqnull\": true,\n  \"asi\": true,\n  \"expr\" : true,\n  \"node\": true,\n  \"browser\": true,\n  \"globals\": {\n    \"rendr\": false\n  }\n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "examples\nnode_modules\ntest\ntmp\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.11328125,
          "content": "language: node_js\nnode_js:\n  - \"0.12\"\n  - \"0.10\"\nnotifications:\n  email: false\nafter_success:\n  - npm run coveralls\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.5390625,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion.\n\nExamples of unacceptable behavior by participants include the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. Project maintainers who do not follow the Code of Conduct may be removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.1.0, available at [http://contributor-covenant.org/version/1/1/0/](http://contributor-covenant.org/version/1/1/0/)"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 10.7373046875,
          "content": "# 1.1.4\n* Bug fix for views being attached async vs in series\n* Bug fix for possible XSS issue on client-side routing\n\n# 1.1.3\n* Bug fixes for AMD environments\n\n# 1.1.2\n* Bug fix for broken build, companion dependency was incorrect.\n\n# 1.1.1\n* added lazy loading callback handlers\n* support for xhr timeouts\n* added a code of conduct\n\n# 1.1.0\n## 2015-06-11\n* update to backbone 1.2.1 and all it's goodness, older versions of lodash *will break* with this change set. lodash.mixin should allow for a fix\n* add x-http-method-override to allow for the 'emulateHTTP' property in backbone.\n\n# 1.0.5\n## 2015-05-15\n* bug fix for require js race condition when rendering views\n* lazy loading now takes fetch_options to set any of the fetchOptions, same object as in the controller\n* lazy loading now takes fetch_spec to allow for multiple models / collections to be loaded for a view on the client-side, this spec is the same as a controllers fetch spec.\n\n# 1.0.4\n## 2015-05-8\n* Routes can specify custom headers\n* Allows for a custom layout filename\n* Bugfix: Case where some views were rendered twice\n* Allow for custom template finder, option for the app\n* allows readFromCache to be set to true / false in the fetch spec\n* Pass a templateEngine to the template adapter, at the application level.\n* Dependency updates\n\n# 1.0.3\n## 2015-03-27\n* Bug fix for Require.js  Needs to statically analyze the include in shared/app.js for the router.\n\n# 1.0.2\n## 2015-03-26\n* Fixes / Updates to make Rendr work with require.js\n* added ability to pass in template adapter instance\n * move towards pulling the view layer out\n * allows watchify / browserify to rebuild single files rather than the entire package\n\n# 1.0.1\n## 2015-02-26\n* upgrade dependencies\n * express\n * underscore\n * rendr-handlebars\n * chai\n * sinon-chai\n* fix a few cases where `window.$` was being accessed instead of `Backbone.$`\n* fix for collection store when lazy-loading a collection (two collections were in the store, now only one)\n* fix for restAdapter that was putting `?` when req.query was an empty object\n\n# 1.0.0\n## 2015-02-11\n* upgrade to express 4.11.0\n  * added `errorhandler` instead of using the express.errorHandler that is deprecated\n* *breaking* dropped node 0.8 support\n* *breaking* dropped express 3.x support\n* added support for node 0.12\n* removed noop definition in favor of _.noop\n* *breaking* removed postInitialization callbacks\n* fixed issue with collection where a re-fetch call will override parameters with an empty object\n* v8 runtime optimizations\n* fixed the way view keeps track of it's childViews\n* updated all devDependencies\n* updated request to use latest version - security fix\n* added .jshint\n* moved from `qs` to `qs2` to support `q[]=1&q[]=2` parameters for arrays by default\n* *breaking* removed `match` function from the server\n* *breaking* removed `checkFresh` - changed to use `expireSeconds` for the store so the store can check instead\n\n# 0.5.2\n## 2015-01-9\n* parseModelAndCollection optionally parses sub-models / sub-collections\n* fix for the re-rendering the view on a `refresh` event when the view is hydrated\n* upgrade to dev dependency for rendr-handlebars to 0.2.2\n* parse collections into an instance of a collection if it isn't already\n\n# 0.5.1\n## 2014-12-11\n* Changed how views are attached to the document, now calls the `render` method when given the appropriate flag.\n* Added tests around base/view.js\n* Added a `clear` method to the model and collection stores\n* Fixed model collection from the store, will no longer create new instances of the model\n* Added the ability to pass a JSON object to `fetch_params` when lazy loading views. This way we can pass multiple parameters to those models / collections.\n* Upgraded `qs` dependency\n* Fixed query string attribute when loading collections, now will properly send data on client and server.\n* Fix in the view's parse options to not override the model / collection attribute after they've been re-inflated.\n* Added fix for the `parse` method to allow for sub-models / sub-collections\n* Upgrade to Backbone 1.1.2\n* Added support for nested params in ServerRouter\n\n# 0.5.0\n## 2014-02-25\n* [deprecation] use `initialize` instead of `postInitialize`\n* Fix serverSide redirectTo with rootPath != default.\n* [breaking] Removed use of `options.emulateJSON` and `options.data` in `clientSync`\n* [breaking] Removed `addApiParams` from `syncer`\n* Many more tests.\n* [breaking] Moved `AppView` to `client/` from `shared/`.\n* [breaking] Added support for AMD (RequireJS), which resulted in many methods\n  becoming asynchronous instead of synchronous (`Fetcher`, `BaseView`,\n  `ModelUtils`, etc.\n* [breaking] Removed global `entryPath`; no longer referencing `rendr` as a\n  global.\n* [breaking] Refactored server code to greatly reduce amount of boilerplate\n  needed to set up a Rendr app. Rendr now owns its own Express app, which can\n  be mounted on existing Express apps as a simple middleware.\n* [breaking] `server/server.js` now exports a class constructor rather than a\n  singleton.\n* [breaking] Removed unused `ServerRouter#stashError()` method.\n* [breaking] `modelUtils` object is now `ModelUtils` class.\n* Added `DataAdapter` base class and fleshed-out `RestAdapter`, which is the\n  default `DataAdapter` used by a Rendr server.\n* More flexibility with placement Rendr app files within an Express project.\n  app, and support for multiple Rendr apps in a single Express app.\n* Support passing `appAttributes` to `initApp` middleware as either object or\n  function, which takes `req` and `res` as arguments.\n* Added `viewing` property to `BaseView` for better introspection of current\n  view state.\n* Fix bug where collection params weren't properly passed to collections upon\n  view hydration.\n* Attach `req` to `App` instance on the server-side.\n* Switched default CommonJS packaging to Browserify from Stitch.\n* Added `examples/` dir, deprecating separate `rendr-app-template` project.\n* Fix bug where resources fetched by the `Fetcher` using spec keys other than\n  `model` or `collection` would be not hydrated properly by `BaseView`.\n* Don't intercept clicked links if 'shift' or 'meta' keys pressed.\n* Make it easier to use custom `AppView` class.\n* Add support for RegExp routes.\n* Only attempt to use `pushState` to redirect if the path matches one of the\n  app's routes.\n* Trigger `action:error` event in `ClientRouter` if there was an error caught\n  while running a controller's action.\n* Allow customizing the app's root path.\n* Added better support for `options.error` callback for `Backbone.sync()` in\n  the client-side.\n* Automatically add `X-Forwarded-For` header in `apiProxy` middleware.\n* Support using functions for `BaseView#id`, `BaseView#className`, and\n  `BaseView#tagName`.\n* Support passing `options.status` to `ServerRouter#redirectTo()`.\n* Use `sanitizer` module instead of un-maintained `validator` module for XSS\n  protection.\n* Update versions of dependencies: `underscore`, `qs`, `request`.\n* Much more unit tests.\n* Added Istanbul code coverage tool.\n\n# 0.4.10\n## 2013-08-02\n* Increment to bump `rendr-handlebars` version.\n\n# 0.4.9\n## 2013-07-27\n* Support multiple layout templates.\n\n# 0.4.8\n## 2013-07-26\n* Use `rendr-handlebars` module instead of `handlebars` module and utilize new\n  `templateAdapter` semantics (thanks @hurrymaplelad).\n* Fix XSS vulnerability in `ServerRouter#escapeParams()`.\n* Fix bug in `ServerRouter#getParams()`.\n* Change `viewEngine` module to be a class constructor `ViewEngine`.\n* Make sure to pass `app` instance to collections in `Fetcher#hydrate()`.\n\n# 0.4.7\n## 2013-06-27\n* Fix for allowing port in absolute model URL.\n* Style tweaks for comments, binding to a context in `this.on`-type events.\n* Added `Fetcher.prototype.needsFetch` method, for custom model caching logic\n  in controllers.\n* Fix for `syncer.checkFresh` (thanks @eleventigers).\n* Fix for view path on Windows (thanks @vincejl).\n* README updates (thanks @jacoblwe20).\n* Performance improvment by caching Express router in `ServerRouter` instead of\n  rebuilding it between requests (@jlogsdon).\n\n# 0.4.6\n## 2013-06-01\n* Support specifying multiple API hosts for models & controllers (thanks @technicolorenvy!).\n* Support subdirectories for views & templates, and allow omitting view path in controllers,\n  in which case view path defaults to \":controller/:action\" (thanks @technicolorenvy!).\n\n# 0.4.5\n## 2013-05-27\n* Use ES5 native methods instead of Underscore methods: `Array.prototype.map`,\n  `Function.prototype.bind`, `Object.create`, etc.  NOTE: For IE<=8 compatibility,\n  include `es5-shim` and `es5-sham` from [kriskowal/es5-shim](https://github.com/kriskowal/es5-shim)\n  as client-side dependencies in your app.\n* Windows-compatible `postinstall` script.\n* Customize Handlebars `each` helper to pass through `_app`, `_view`, etc. into\n  the child context, allowing cleaner `{{#each}} {{view \"my_view\"}} {{/each}}` semantics.\n* Allow passing absolute URLs for models and collections, which will bypass the API proxy\n  in the client-side.\n\n# 0.4.4\n## 2013-05-06\n* In BaseView::getAttributes(), call toString() on model.id, for better support of Mongoose.\n* In BaseView::getAttributes(), support custom this.model.idAttribute.\n* Remove reference to `global.isServer` in BaseView; easier to standalone test.\n* Default `replace: false` in ClientRouter::redirectTo().\n\n# 0.4.3\n## 2013-04-30\n* Support `redirect` option in routes file.\n\n# 0.4.1\n## 2013-04-29\n* Allow accessing `this.parentView` in `BaseView` during rendering.\n\n# 0.4.0\n## 2013-04-29\n* Converted all CoffeeScript files to JavaScript.\n\n# 0.3.4\n## 2013-04-25\n* No more globals for Backbone, _, Handlebars.\n\n# 0.3.3\n## 2013-04-25\n* Updating to handlebars@0.1.10 to get bundled runtime file.\n\n# 0.3.2\n## 2013-04-19\n* Ensuring that `ModelStore` passes `app` to models when instantiating them.\n\n# 0.3.1\n## 2013-04-18\n* Added `apiProxy` middleware, pulled from `rendr-app-template`.\n\n# 0.3.0\n## 2013-04-18\n* Breaking change: Renamed `dataAdapter.makeRequest` to `dataAdapter.request`.\n\n# 0.2.4\n## 2013-04-17\n* Removing bundled jQuery. App should provide its own.\n\n# 0.2.3\n## 2013-04-17\n* Allow passing `{pushState: false}` to `ClientRouter::redirectTo()` to do a\n  full-page redirect.\n\n# 0.2.2\n## 2013-04-08\n* Fixed bug where status code of CRUD errors were not properly passed down from `syncer`.\n\n# 0.2.1\n## 2013-04-07\n* Fixed bug where models within collection wouldn't have `this.app` set after view hydration.\n* Converted `fetcher` object to `Fetcher` class. Prefer to access it via `app.fetcher`.\n\n# 0.2.0\n## 2013-04-05\n* Breaking change: Passing real `req` as first argument to `dataAdapter.makeRequest`.\n* Fixing bug in ClientRouter when no querystring.\n* Also return `@collection.meta` and `@collection.params` in `BaseView::getTemplateData()`.\n* Support passing three args to `App::fetch()`.\n\n# 0.1.1\n## 2013-04-01\n* ClientRouter params include querystring params, just like ServerRouter.\n\n# 0.1.0\n## 2013-04-01\n* Initial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (c) 2013-2015 Airbnb\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.55859375,
          "content": "[![travis-ci status](https://secure.travis-ci.org/rendrjs/rendr.png)](http://travis-ci.org/#!/rendrjs/rendr/builds)\n[![Dependency Status](https://david-dm.org/rendrjs/rendr.png)](https://david-dm.org/rendrjs/rendr)\n[![Coverage Status](https://coveralls.io/repos/rendrjs/rendr/badge.png)](https://coveralls.io/r/rendrjs/rendr)\n\n<img src=\"http://cl.ly/image/272q3f1u313b/Rendr-logotype.png\" width=\"395\" height=\"100\">\n\nRendr is a small library that allows you to run your [Backbone.js](http://backbonejs.org/) apps seamlessly on both the client and the server. Allow your web server to serve fully-formed HTML pages to any deep link of your app, while preserving the snappy feel of a traditional Backbone.js client-side MVC app.\n\n## Documentation\n\nThe documentation website is: [rendrjs.github.io](http://rendrjs.github.io).  If you have any feedback or changes for the documentation please create an [issue](https://github.com/rendrjs/rendrjs.github.io/issues).  The documentation is easy to submit changes to as well!  Simply create a fork and use the Github Markdown editor to make and preview any changes, then open just open a Pull Request.\n\n## Reporting problems and getting help\n\nPlease use the [issue tracker][issues] to report bugs. For support with using\nrendr, try asking in the [Google group][ggroup] or join #rendr on\nirc.freenode.org.\n\n[ggroup]: https://groups.google.com/forum/#!forum/rendrjs\n[issues]: https://github.com/rendrjs/rendr/issues\n\n\n## Getting Started\n\nTo see how to use Rendr to build a simple web app, check out the [examples](https://github.com/rendrjs/rendr-examples) repository for a number of different ways to set up a Rendr app.\n\nCheck out the [blog post](http://nerds.airbnb.com/weve-launched-our-first-nodejs-app-to-product) for a more thorough introduction to Rendr.\n\n## The Premise\n\nOur hypothesis is that there has to be a better way to build rich web apps today. In the last few years, we've seen more of the application moved to the client-side, with JavaScript representations of views, templates, and models. This can result in interactive, native-style apps, but it also poses challenges. SEO, performance, and maintainability become issues with splitting up your app into two distinct codebases, often in different languages.\n\n\n## The Goals\n\nRendr is intended to be a building block along the way to this envisioned future of web apps that can be run on either side of the wire according to the needs of your application.\n\nSome specific design goals:\n\n* Write application logic agnostic to environment\n* Minimize `if (server) {...} else {...}`\n* Talk to RESTful API\n* Library, not a framework\n* Hide complexity in library\n* No server-side DOM\n* Simple Express middleware\n\n## What's Included\n\nRendr does not attempt to be a fully-fledged, batteries-included application framework. Instead, it follows Backbone's lead by imposing minimal structure, allowing the developer to use the library in the most appropriate way for their application.\n\n## Base classes\n\n### `BaseView`\n\nInherits from `Backbone.View`.\n\n#### Public methods\n\n#### `view.initialize()`\n*Environment: shared.*\n\nThis is where you put any initialization logic.\n\n#### `view.preRender()`\n*Environment: shared.*\n\n#### `view.render()`\n*Environment: client.*\n\nYou should never have to override `view.render()` unless you're doing something really custom. Instead, you should be able to do anything you need using `view.postRender()`,\n\n#### `view.postRender()`\n*Environment: client.*\n\nHere is where you'd put any initialization code that needs to access the DOM. This is a good place for jQuery plugins, sliders, etc.\n\n#### `view.getTemplateData()`\n*Environment: shared.*\n\nThe default implementation returns something reasonable: essentially `view.model.toJSON()` or `{models: view.collection.toJSON()}`. This method is easy to override in order to pass custom data to the template, or to decorate the model data.\n\n```js\nvar MyView = BaseView.extend({\n  getTemplateData: function() {\n    // Get `super`.\n    var data = BaseView.prototype.getTemplateData.call(this);\n    return _.extend({}, data, {\n      someOtherProperty: 'something custom'\n    });\n  }\n});\n```\n\n#### Methods you can override for custom view behaviors\n\n#### `view.getTemplate()`\n*Environment: shared.*\n\nYou should never need to touch this, unless you're heavily customizing the view. Return a function that gets executed with a single `data` object as an argument.\n\n#### `view.getTemplateName()`\n*Environment: shared.*\n\nYou'll probably never touch this unless you're heavily customizing the view. This defaults to `view.constructor.id`. You can return a string to render a different template. This is used by the default implementation of `view.getTemplate()`.\n\n#### `view.getInnerHtml()`\n*Environment: shared.*\n\n#### `view.getHtml()`\n*Environment: shared.*\n\n#### `view.getAttributes()`\n*Environment: shared.*\n\nGets HTML attributes for outer DOM element. Used by `view.getHtml()`.\n\n### `BaseModel`\n\nInherits from `Backbone.Model`.\n\n### `BaseCollection`\n\nInherits from `Backbone.Collection`.\n\n### `BaseApp`\n\nInherits from `Backbone.Model`.\n\n### `BaseAppView`\n\nInherits from `BaseView`. You can change your main content container from this view by changing the `contentEl` key in the `options` object when extending `BaseAppView`\n\n```js\nvar AppView = BaseAppView.extend({\n  options : {\n    contentEl : \"#mainContent\"\n  }\n})\n```\n\n### `BaseRouter`\n\n### `ClientRouter`\n\nInherits from `BaseRouter`.\n\n### `ServerRouter`\n\nInherits from `BaseRouter`.\n\n\n## Rendr Options\n\n\n### Server Config\n\n####Example\n\n```\nvar config = {\n  dataAdapterConfig: {\n    'default': {\n      host: 'api.github.com',\n      protocol: 'https'\n    }\n  },\n\n  apiPath: '/api',\n  appData: { myAttr: 'value'},\n  dataAdapter: myDataAdapterInstance,\n  defaultEngine: 'js',\n  entryPath: process.cwd() + '/myapp'\n  errorHandler: function (err, req, res, next){},\n  notFoundHandler: function (req, res, next){},\n  viewsPath: \"/app/views\",\n};\nrendr.createServer(config);\n\n```\n\nEither a ``dataAdapter`` or ``dataAdapterConfig`` must be present.\n\n\n- ``dataAdapterConfig`` - This is the standard way of configuring Rendr's built in  DataAdapter.  See [DataAdapter Config](#dataadapter-config)\n\n\n- ``dataAdapter`` - Allows you to override the default DataAdapter and provide your own.  The ``dataAdapterConfig`` will be ignored.\n\n    **Default:**  [RestAdapter](https://github.com/rendrjs/rendr/blob/master/server/data_adapter/rest_adapter.js) which enables Rendr to speak basic REST using HTTP & JSON.  This is good for consuming an     existing RESTful API that exists externally to your Node app.\n\n\n---\n\n- ``apiPath`` *Optional* - Root of the API proxy's virtual path. Anything after this root will be followed by a ``-``. Example: ``/api/-/path/to/resource``. Allows the proxy to intercept API routes. Can also be a full path to a remote API ``http://api.myserver``\n\n    **Default:** ``api``\n\n- ``appData`` *Optional* - Pass any data that needs to be accessible by the client. Accessible from within your Handlebars context ``app.attributes.myAttr``, and also within your views and models ```this.app.attributes.myAttr```.\n\n\n- ``defaultEngine`` *Optional* - Tell the ViewEngine to load different file types. Example: ``coffee``\n\n    **Default:** ``js``\n\n- ``entryPath`` *Optional* - Root path of your app.\n\n    **Default:** ``process.cwd() + '/'`` - Current working directory of the node process\n\n- ``errorHandler`` *Optional* Callback for [Express.js errors](http://expressjs.com/guide/error-handling).\n\n   **Example** ``function (err, req, res, next) { }``\n\n\n- ``notFoundHandler`` *Optional* - Callback for [Express.js not found errors](http://expressjs.com/guide/error-handling)\n\n   **Example** ``function (req, res, next) { }``\n\n- ``viewEngine`` *Optional* - Provides a way to set a custom [Express.js view engine](http://expressjs.com/api.html#app.engine)\n\n    **Default:** ``new ViewEngine()`` - Rendr provides a built in [ViewEngine](https://github.com/rendrjs/rendr/blob/master/server/viewEngine.js) that hooks to [Template Adapters](#template-adapters).  See [rendr-handlebars](https://github.com/rendrjs/rendr-handlebars).\n\n- ``viewsPath`` *Optional* - Override where your views are stored. Path is relative to ``entryPath``.\n\n    **Default:** ``app/views``\n\n\n### DataAdapter Config\n\nThis configuration is passed to the current DataAdapter, which by default is the [RestAdapter](https://github.com/rendrjs/rendr/blob/master/server/data_adapter/rest_adapter.js).\n\n\n####Example\n\n**Simple**\n\n```js\nvar dataAdapterConfig = {\n  host: 'api.github.com',\n  protocol: 'https'\n};\n\n```\n\n**Multiple**\n\n```js\nvar dataAdapterConfig = {\n  'default': {\n    host: 'api.github.com',\n    protocol: 'https'\n  },\n  'travis-ci': {\n    host: 'api.travis-ci.org',\n    protocol: 'https'\n  }\n};\n\n```\n\nExample of how a Backbone model can be configured to select one of the DataAdapter configs.\n\n*Note: This example assumes you are using the [RestAdapter](https://github.com/rendrjs/rendr/blob/master/server/data_adapter/rest_adapter.js).*\n\n```js\nmodule.exports = Base.extend({\n  url: '/repos/:owner/:name',\n  api: 'travis-ci'\n});\nmodule.exports.id = 'Build';\n```\n\n### Adding middleware to Rendr's Express\n\n\nYou can optionally add any custom middleware that has to access `req.rendrApp` but should run before\nthe Rendr routes by calling configure after createServer.\n\n```js\nrendr.createServer(config);\nrendr.configure(function(expressApp) {\n\n    expressApp.use(...)\n\n})\n```\n\n### Template Adapters\n\nProvides a way for Rendr to utilize custom html template engines (see also Template Engines section below).  Rendr's [ViewEngine](https://github.com/rendrjs/rendr/blob/master/server/viewEngine.js) will delegate to the [Template Adapter](https://github.com/rendrjs/rendr-handlebars/blob/master/index.js). You can build your own to provide your template engine of choice (i.e. Jade, Underscore templates, etc).\n\n####Available Template Adapters\n\n- [rendr-handlebars](https://github.com/rendrjs/rendr-handlebars) - [Handlebars.js](https://github.com/wycats/handlebars.js) support.  This is the default adapter.\n\n- [rendr-emblem](https://github.com/modalstudios/rendr-emblem) - [Emblem.js](https://github.com/machty/emblem.js/) with [Handlebars.js](https://github.com/wycats/handlebars.js) fallback support.\n\n\n####Using Custom Adapters\n\nYou can tell Rendr which Template Adapter to use.  This represents the node-module that contains the adapter.\n\n```js\n// /app/app.js\n\nmodule.exports = BaseApp.extend({\n  defaults: {\n    templateAdapter: 'rendr-emblem'\n  }\n\n});\n\n```\n\n### Template Engines\n\nWhile Template Adapters provide the layer of abstraction that allow you to use your favorite template engine in a Rendr app, the Template Engine option itself will tell the app which version to use exactly. \nThe default is set to be Handlebars, which is currently supported by the Rendr-handlebars adapter until version 2.0.0.\n**When setting up your Rendr app, you'll need to add your Template Engine of choice to package.json.**\n \nE.g.\n \n```js\n// /package.json\n\n\"dependencies\": {\n  ...\n  \"express\": \"^4.12.0\",\n  \"handlebars\": \"^2.0.0\"\n  \"qs2\": \"~0.6.6\",\n  ...\n},\n  \n```\n\n####Using Custom Template Engines\n\nYou can tell Rendr which Template Engine to use.  This represents the node-module that contains the engine.\n\n```js\n// /app/app.js\n\nmodule.exports = BaseApp.extend({\n  defaults: {\n    templateEngine: 'handlebars'\n  }\n\n});\n\n```\n\n### Express middleware\n\nThere are a few middleware functions included. Use some or all of these, or use your own.\n\n\n### `initApp`\n\n## What's Not Included\n\n### Express app\n\nRather than owning your entire Express app, Rendr simply provides some useful middleware that you can mount into your existing Express app.\n\n## Notes\n\nRendr uses the native ECMAScript 5 methods `Array.prototype.map`, `Function.prototype.bind`, `Object.create`, etc. If you plan to support older browsers, such as IE<=8, you should include the lovely [es5-shim](https://github.com/kriskowal/es5-shim) (and es5-sham) libraries as client-side dependencies.\n\n## Contributing\n\nWe'd love to see what the community can come up with! There are no doubt a number of developers who are tackling this same problem, and we can learn from each other. If you have a bug fix or feature proposal, submit a pull request with a clear description of the change, plus tests.\n\nRendr was originally developed by [@braitz](https://github.com/braitz) and [@spikebrehm](https://github.com/spikebrehm), and now has a healthy list of [contributors](https://github.com/rendrjs/rendr/graphs/contributors).\n\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\n\n## License\n\nMIT\n\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/rendrjs/rendr/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.169921875,
          "content": "if (!this.window) {\n  var Server = require('./server/server')\n\n  exports.Server = Server\n\n  exports.createServer = function(options) {\n    return new Server(options);\n  };\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1396484375,
          "content": "{\n  \"name\": \"rendr\",\n  \"version\": \"1.1.4\",\n  \"description\": \"Render your Backbone.js apps on the client and the server.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"mocha -R spec ./test --recursive\",\n    \"coverage\": \"istanbul cover _mocha -- -R spec ./test --recursive\",\n    \"coveralls\": \"npm run-script coverage && cat ./coverage/lcov.info | coveralls\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/rendrjs/rendr.git\"\n  },\n  \"dependencies\": {\n    \"async\": \"~0.9.0\",\n    \"backbone\": \"^1.2.1\",\n    \"debug\": \"*\",\n    \"errorhandler\": \"~1.3.5\",\n    \"express\": \"^4.12.3\",\n    \"qs2\": \"~0.6.6\",\n    \"request\": \"^2.55.0\",\n    \"sanitizer\": \"~0.1\",\n    \"underscore\": \"^1.8.3\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"^2.3.0\",\n    \"coveralls\": \"~2.11.2\",\n    \"handlebars\": \"^2.0.0\",\n    \"istanbul\": \"~0.3.13\",\n    \"jquery\": \"^2.1.4\",\n    \"jsdom\": \"^3.1.0\",\n    \"mocha\": \"*\",\n    \"proxyquire\": \"^1.4.0\",\n    \"rendr-handlebars\": \"^2.0.1\",\n    \"sinon\": \"~1.14.1\",\n    \"sinon-chai\": \"^2.7.0\"\n  },\n  \"keywords\": [\n    \"Backbone\",\n    \"view\",\n    \"web\",\n    \"rendr\",\n    \"render\"\n  ],\n  \"author\": \"Spike Brehm <ocelot@gmail.com>\",\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "shared",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}