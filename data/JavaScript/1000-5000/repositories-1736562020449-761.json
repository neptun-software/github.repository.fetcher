{
  "metadata": {
    "timestamp": 1736562020449,
    "page": 761,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "addyosmani/basket.js",
      "stars": 3359,
      "defaultBranch": "gh-pages",
      "files": [
        {
          "name": ".bowerrc",
          "type": "blob",
          "size": 0.037109375,
          "content": "{\n  \"directory\": \"bower_components\"\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1845703125,
          "content": "# editorconfig.org\nroot = true\n\n[*]\nindent_style = tab\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "* text=auto\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "node_modules\nbower_components\n_site\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.3798828125,
          "content": "{\n\t\"bitwise\": true,\n\t\"browser\": true,\n\t\"camelcase\": true,\n\t\"curly\": true,\n\t\"eqeqeq\": true,\n\t\"esnext\": true,\n\t\"expr\": true,\n\t\"immed\": true,\n\t\"indent\": 4,\n\t\"latedef\": true,\n\t\"newcap\": true,\n\t\"noarg\": true,\n\t\"node\": true,\n\t\"noempty\": true,\n\t\"nonstandard\": true,\n\t\"quotmark\": \"single\",\n\t\"regexp\": true,\n\t\"smarttabs\": true,\n\t\"strict\": true,\n\t\"trailing\": true,\n\t\"undef\": true,\n\t\"unused\": true\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1025390625,
          "content": "sudo: false\nlanguage: node_js\nnode_js:\n  - 'iojs'\n  - '0.12'\n  - '0.10'\nbranches:\n  only:\n    - gh-pages\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 2.048828125,
          "content": "module.exports = function( grunt ) {\n\t'use strict';\n\n\tgrunt.initConfig({\n\t\tpkg: grunt.file.readJSON('package.json'),\n\t\tconcat: {\n\t\t\toptions: {\n\t\t\t\tbanner: '/*!\\n' +\n\t\t\t\t\t'* <%= pkg.name %>\\n' +\n\t\t\t\t\t'* v<%= pkg.version %> - ' +\n\t\t\t\t\t'<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n\t\t\t\t\t'<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\\\n\" : \"\" %>' +\n\t\t\t\t\t'* (c) <%= pkg.author.name %>;' +\n\t\t\t\t\t' <%= _.pluck(pkg.licenses, \"type\").join(\", \") %> License\\n' +\n\t\t\t\t\t'* Created by: <%= _.pluck(pkg.maintainers, \"name\").join(\", \") %>\\n' +\n\t\t\t\t\t'* Contributors: <%= _.pluck(pkg.contributors, \"name\").join(\", \") %>\\n' +\n\t\t\t\t\t'* Uses rsvp.js, https://github.com/tildeio/rsvp.js\\n' +\n\t\t\t\t\t'*/',\n\t\t\t\tstripBanners: true\n\t\t\t},\n\t\t\tdist: {\n\t\t\t\tsrc: ['lib/basket.js'],\n\t\t\t\tdest: 'dist/basket.js'\n\t\t\t}\n\t\t},\n\t\tuglify: {\n\t\t\toptions: {\n\t\t\t\treport: 'gzip',\n\t\t\t\tbanner: '<%= concat.options.banner %>'\n\t\t\t},\n\t\t\tdist: {\n\t\t\t\toptions: {\n\t\t\t\t\tsourceMap: 'dist/basket.min.map'\n\t\t\t\t},\n\t\t\t\tfiles: {\n\t\t\t\t\t'dist/basket.min.js': ['dist/basket.js']\n\t\t\t\t}\n\t\t\t},\n\t\t\tfull: {\n\t\t\t\toptions: {\n\t\t\t\t\tsourceMap: 'dist/basket.full.map'\n\t\t\t\t},\n\t\t\t\tfiles: {\n\t\t\t\t\t'dist/basket.full.min.js': ['bower_components/rsvp/rsvp.min.js', 'dist/basket.js']\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tqunit: {\n\t\t\tall: {\n\t\t\t\toptions: {\n\t\t\t\t\turls: ['http://localhost:8080/test/index.html']\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\tscripts: {\n\t\t\t\tfiles: '<%= jshint.all %>',\n\t\t\t\ttasks: ['test']\n\t\t\t}\n\t\t},\n\t\tconnect: {\n\t\t\tserver: {\n\t\t\t\toptions: {\n\t\t\t\t\tbase: '.',\n\t\t\t\t\tport: 8080\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tjshint: {\n\t\t\toptions: {\n\t\t\t\tjshintrc: '.jshintrc'\n\t\t\t},\n\t\t\tall: ['Gruntfile.js', 'lib/basket.js', 'test/tests.js']\n\t\t}\n\t});\n\n\tgrunt.loadNpmTasks('grunt-contrib-concat');\n\tgrunt.loadNpmTasks('grunt-contrib-jshint');\n\tgrunt.loadNpmTasks('grunt-contrib-uglify');\n\tgrunt.loadNpmTasks('grunt-contrib-qunit');\n\tgrunt.loadNpmTasks('grunt-contrib-connect');\n\tgrunt.loadNpmTasks('grunt-contrib-watch');\n\n\t// Dev - default\n\tgrunt.registerTask('default', ['test']);\n\n\t// Release\n\tgrunt.registerTask('release', ['test', 'concat', 'uglify']);\n\n\t//Tests\n\tgrunt.registerTask('test', ['jshint', 'connect', 'qunit']);\n};\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "safe: true\nmarkdown: redcarpet\n"
        },
        {
          "name": "_includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "asset",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.23828125,
          "content": "{\n  \"name\": \"basket.js\",\n  \"main\": \"dist/basket.js\",\n  \"ignore\": [\n    \"_*\",\n    \".*\",\n    \"asset\",\n    \"lib\",\n    \"media\",\n    \"test\",\n    \"Gruntfile.js\",\n    \"index.md\",\n    \"package.json\"\n  ],\n  \"dependencies\": {\n    \"rsvp\": \"~3.0.16\"\n  }\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.md",
          "type": "blob",
          "size": 4.548828125,
          "content": "---\nlayout: default\n---\n\n### Introduction\n\nbasket.js is a small JavaScript library supporting localStorage caching of scripts. If script(s) have previously been saved locally, they will simply be loaded and injected into the current document. If not, they will be XHR'd in for use right away, but cached so that no additional loads are required in the future.\n\n### Why localStorage?\n\n[Tests](http://www.stevesouders.com/blog/2011/03/28/storager-case-study-bing-google/) by Google and Bing have shown that there are performance benefits to caching assets in localStorage (especially on mobile) when compared to simply reading and writing from the standard browser cache. This project is currently working on replicating these tests in the public so that we have definitive statistics on whether this is true.\n\nDevelopers have also been wondering why we opted for localStorage as opposed to alternatives such as IndexedDB. Jens Arps has shown that IDB is at present [significantly slower](http://jsperf.com/indexeddb-vs-localstorage/2) than localStorage for reading and writing assets. Other developers exploring this space have also shown that localStorage works just fine for caching data (it's actually significantly [faster](http://www.webdirections.org/blog/localstorage-perhaps-not-so-harmful/) in Safari at the moment than any other browser).\n\nWe believe that in time, once implementers have optimized localStorage, it will become more feasible to use cross-browser. In the mean time, we are also exploring solutions such as the [FileSystem API](http://www.html5rocks.com/en/tutorials/file/filesystem/) as a storage mechanism for caching scripts locally.\n\n### Project History\n\nThis project was created as a response to a [tweet](https://twitter.com/#!/souders/statuses/166928191649357824) by Steve Souders asking that the jQuery project consider caching jQuery in localStorage for performance reasons. Intrigued by the idea, we began exploring a minimalistic solution to it (just for the sake of experimentation).\n\nYou may remember Souders previously did research and a [write-up](http://www.stevesouders.com/blog/2011/03/28/storager-case-study-bing-google/) on search engines making use of localStorage caching back in 2011. His conclusions were:\n\n**Bing and Google Search make extensive use of localStorage for stashing SCRIPT blocks that are used on subsequent page views. None of the other top sites from my previous post use localStorage in this way. Are Bing and Google Search onto something? Yes, definitely.**\n\nTo help provide a more general solution for this problem, we put together a script loader that treats localStorage as a cache.\n\n### Compatibility\n\nbasket.js supports locally caching scripts in any browser with [localStorage capabilities](http://caniuse.com/#search=localstorage).\n\n### About localStorage\n\n[localStorage](http://diveintohtml5.info/storage.html) is a simple API within modern browsers to allow web developers to store small amounts of data within the user's browser.\n\nThe HTML5 spec suggests storage quota with a limit of 5MB for localStorage but browsers can implement their own quota if they wish. If the quota is exceeded the browser may fail to store items in the cache. If this happens, basket.js will remove entries from the cache beginning with the oldest and try again. Some browsers like Opera will ask the user about increasing the quota when it exceeds a set threshold.\n\nTo free space basket.js will only remove cached scripts that it placed in localStorage itself. The data stored by other code in same origin will not be touched.\n\n{% include api.md %}\n\n### The Future\n\nWe are currently investigating a number of different features we would like to bring to the project, as well as looking to produce some high-quality [performance benchmarks](https://github.com/addyosmani/basket.js/issues/24) (compared to IndexedDB, Browser cache and more). To find out more, check out [what we're working on](https://github.com/addyosmani/basket.js/issues).\n\n### Team, License &amp; Contribution Guide\n\nbasket.js is released under an [MIT License](http://en.wikipedia.org/wiki/MIT_License) and is currently maintained by [Addy Osmani](https://github.com/addyosmani), [Sindre Sorhus](https://github.com/sindresorhus), [Mat Scales](https://github.com/wibblymat) and [Andrée Hansson](https://github.com/peol). We would also like to extend our thanks to [Rick Waldron](https://github.com/rwldrn) for the optimizations he suggested for improving the project.\n\nFor more information on our style-guide and how to get involved with basket.js, please see the README in our project [repo](http://github.com/addyosmani/basket.js).\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) Basket.js team\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.51953125,
          "content": "{\n  \"name\": \"basket.js\",\n  \"version\": \"0.5.2\",\n  \"description\": \"A script-loader that handles caching scripts in localStorage where supported\",\n  \"keywords\": [\n    \"script\",\n    \"loader\",\n    \"localstorage\",\n    \"caching\",\n    \"asset\",\n    \"loader\",\n    \"preload\",\n    \"javascript\",\n    \"js\"\n  ],\n  \"homepage\": \"http://addyosmani.github.com/basket.js\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"Addy Osmani\",\n    \"email\": \"addyosmani@gmail.com\",\n    \"url\": \"addyosmani.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"Addy Osmani\"\n    },\n    {\n      \"name\": \"Sindre Sorhus\",\n      \"email\": \"sindresorhus@gmail.com\",\n      \"url\": \"sindresorhus.com\"\n    },\n    {\n      \"name\": \"Andrée Hansson\",\n      \"email\": \"peolanha@gmail.com\",\n      \"url\": \"andreehansson.se\"\n    },\n    {\n      \"name\": \"Mat Scales\",\n      \"email\": \"mat@wibbly.org.uk\",\n      \"url\": \"github.com/wibblymat\"\n    }\n  ],\n  \"contributors\": [\n    {\n      \"name\": \"Ironsjp\"\n    },\n    {\n      \"name\": \"Mathias Bynens\"\n    },\n    {\n      \"name\": \"Rick Waldron\"\n    },\n    {\n      \"name\": \"Felipe Morais\"\n    }\n  ],\n  \"main\": \"lib/basket\",\n  \"repository\": \"addyosmani/basket.js\",\n  \"scripts\": {\n    \"dev\": \"grunt\",\n    \"test\": \"bower install && grunt test\"\n  },\n  \"devDependencies\": {\n    \"bower\": \"1.x\",\n    \"grunt\": \"^0.4.0\",\n    \"grunt-cli\": \"^0.1.13\",\n    \"grunt-contrib-concat\": \"^0.5.0\",\n    \"grunt-contrib-connect\": \"^0.9.0\",\n    \"grunt-contrib-jshint\": \"^0.11.0\",\n    \"grunt-contrib-qunit\": \"^0.5.1\",\n    \"grunt-contrib-uglify\": \"^0.7.0\",\n    \"grunt-contrib-watch\": \"^0.6.1\"\n  }\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 3.669921875,
          "content": "[![basket.js logo](media/logo_src.png)](http://addyosmani.github.io/basket.js/)\n\n> [Basket.js](http://addyosmani.github.io/basket.js/) is a script and resource loader for caching and loading scripts using localStorage\n\n\n\n\n##Introduction for the Non-Developer\n\nModern web applications will typically make use of more than one JavaScript or CSS framework. As the number of scripts add up, so does the number of HTTP requests. This leads to increased page load times and reduced performance. [Basket.js](http://addyosmani.github.io/basket.js/) is a project dedicated to aleviating this problem. \n\nBasket.js loads your site's scripts into a page and saves them in localStorage so they can be reused after the session until they are expired. It also checks to see if the scripts are already in localStorage, and if not, loads them. This prevents unneccessary reloading of scripts and can improve load time and website performance.\n\n\n\n\n[![Build Status](https://travis-ci.org/addyosmani/basket.js.svg?branch=gh-pages)](https://travis-ci.org/addyosmani/basket.js)\n\n\n## Resources\n\n### Examples\n\n* [Load RequireJS modules with Basket.js](https://github.com/andrewwakeling/requirejs-basketjs/blob/master/basket-loader.js)\n* [Loading CSS with Basket.js](https://github.com/andrewwakeling/basket-css-example)\n\n### Articles\n\n* [Basket.js: A JavaScript Loader With LocalStorage-based script caching](http://badassjs.com/post/40850339601/basket-js-a-javascript-loader-with-localstorage-based)\n* [basket.js caches scripts with HTML5 localStorage](http://ahmadassaf.com/blog/web-development/scripts-plugins/basket-js-caches-scripts-with-html5-localstorage/)\n* [Basket.js for improved script caching](http://t3n.de/news/basketjs-performance-localstorage-515119/)\n* [How to Improve Loading Time with basket.js](http://www.sitepoint.com/how-to-improve-loading-time-with-basket-js/)\n\n\n## Contribute\n\n### Style Guide\n\nThis project follows the [Idiomatic](https://github.com/rwaldron/idiomatic.js) guide to writing JavaScript - a concise extension to the jQuery Core Style [guidelines](http://contribute.jquery.org/style-guide/js/), with the exception of multiple var statements. Please ensure any pull requests follow these closely.\n\n\n### Unit Tests\n\nWe are also attempting to get as much unit test coverage as possible. For this reason, please add unit tests for any new or changed functionality and remember to lint and test your code using [grunt](http://gruntjs.com).\n\n*Also, please don't edit files in the \"dist\" subdirectory as they are generated via grunt. You'll find source code in the \"lib\" subdirectory!*\n\n### Building\n\nTo build the project, you will first need to install the necessary dependencies (such as [RSVP](https://github.com/tildeio/rsvp.js)) using [npm](https://www.npmjs.com/) and [Bower](http://bower.io).\n\nRun:\n\n```sh\n$ npm install & bower install\n```\n\nin the project root to get everything you need. Next, to actually build the project you will need [Grunt](http://gruntjs.com).\n\nRun:\n\n```sh\n$ grunt release\n```\n\nto generate a new release, otherwise just running `grunt test` will run the unit tests.\n\n\n## Team\n\n| ![Addy Osmani avatar](http://www.gravatar.com/avatar/96270e4c3e5e9806cf7245475c00b275.png?s=60) | ![Sindre Sorhus avatar](http://www.gravatar.com/avatar/d36a92237c75c5337c17b60d90686bf9.png?s=60) | ![Andrée Hansson avatar](http://www.gravatar.com/avatar/9a22324229aebc599d46dacab494ce77.png?s=60) | ![Mat Scales avatar](http://www.gravatar.com/avatar/c2b874c38990ed90a0ed15ac33bda00f.png?s=60) |\n|---|---|---|---|\n| [Addy Osmani](https://github.com/addyosmani) | [Sindre Sorhus](https://github.com/sindresorhus) | [Andrée Hansson](https://github.com/peol) | [Mat Scales](https://github.com/wibblymat) |\n\n\n## License\n\nMIT © Basket.js team\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}