{
  "metadata": {
    "timestamp": 1736562176126,
    "page": 999,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vuejs-templates/pwa",
      "stars": 3043,
      "defaultBranch": "development",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "node_modules\n.DS_Store\ndocs/_book\n"
        },
        {
          "name": "LICENCE",
          "type": "blob",
          "size": 1.0654296875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013-present, Yuxi (Evan) You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9638671875,
          "content": "## Maintenance Mode\n**The code in this repo is in maintenance mode, with limited plans for future changes. Our focus moving forward is adding PWA support to [Vue CLI 3.0](https://github.com/vuejs/vue-cli/blob/dev/README.md), using its new [`pwa` plugin](https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-pwa). We encourage this work to be used for new projects as it is being actively developed. If you have issues with the current codebase, give the new version a spin and let us know what you think.**\n\n# vue-pwa-boilerplate\n\n> A full-featured [PWA](https://developers.google.com/web/progressive-web-apps/) template with webpack, hot-reload, lint-on-save, unit testing & css extraction.\n\n## Documentation\n\n- This template builds on top of the main webpack template, so please refer to the [webpack template docs](http://vuejs-templates.github.io/webpack).\n\n- Check out the [official Vue.js guide](http://vuejs.org/guide/) for general information about Vue that is not specific to this template.\n\n## Usage\n\nThis is a project template for [vue-cli](https://github.com/vuejs/vue-cli). **It is recommended to use npm 3+ or [yarn](https://yarnpkg.com) for a more efficient dependency tree.**\n\n```bash\n$ npm install -g vue-cli\n$ vue init pwa my-project\n$ cd my-project\n$ npm install\n$ npm run dev\n```\n\nThis will scaffold the project using the `master` branch. If you wish to use the latest version of the PWA template, do the following instead:\n\n``` bash\n$ vue init pwa#development my-project\n```\n\n:warning: **The `development` branch is not considered stable and can contain bugs or not build at all, so use at your own risk.**\n\nIf port 8080 is already in use on your machine you must change the port number in `/config/index.js`. Otherwise `npm run dev` will fail.\n\n## What's not Included\n\n* You should configure your web server to add HTTP headers to prevent caching of critical service worker files.\nIf you don't do this, [browsers might cache the content for up to 24 hours](https://stackoverflow.com/questions/38843970/service-worker-javascript-update-frequency-every-24-hours/38854905#38854905).\nIn addition, you should add HTTP headers to prevent the contents of the static folder to be cached unintentionally long.\n\nSee [\"Configuring your Web server to prevent caching\"](docs/prevent_caching.md) in the docs for more information.\n\n## What's Included\n\n* Service Worker precaching of application shell + static assets (prod)\n* Script (async chunk) preloading using `<link rel=\"preload\">`\n* Web Application Manifest + favicons\n* Mobile-friendly meta-viewport\n* Lighthouse score of 90+/100\n\n- `npm run dev`: first-in-class development experience.\n  - Webpack + `vue-loader` for single file Vue components.\n  - State preserving hot-reload\n  - State preserving compilation error overlay\n  - Lint-on-save with ESLint\n  - Source maps\n\n- `npm run build`: Production ready build.\n  - JavaScript minified with [UglifyJS v3](https://github.com/mishoo/UglifyJS2/tree/harmony).\n  - HTML minified with [html-minifier](https://github.com/kangax/html-minifier).\n  - CSS across all components extracted into a single file and minified with [cssnano](https://github.com/ben-eb/cssnano).\n  - All static assets compiled with version hashes for efficient long-term caching, and a production `index.html` is auto-generated with proper URLs to these generated assets.\n  - Use `npm run build --report`to build with bundle size analytics.\n  - Generates a Service Worker for offline caching your static assets using [sw-precache-webpack-plugin](https://www.npmjs.com/package/sw-precache-webpack-plugin)\n\n- `npm run unit`: Unit tests run in PhantomJS with [Karma](http://karma-runner.github.io/0.13/index.html) + [Mocha](http://mochajs.org/) + [karma-webpack](https://github.com/webpack/karma-webpack).\n  - Supports ES2015+ in test files.\n  - Supports all webpack loaders.\n  - Easy mock injection.\n\n- `npm run e2e`: End-to-end tests with [Nightwatch](http://nightwatchjs.org/).\n  - Run tests in multiple browsers in parallel.\n  - Works with one command out of the box:\n    - Selenium and chromedriver dependencies automatically handled.\n    - Automatically spawns the Selenium server.\n\n### Fork It And Make Your Own\n\nYou can fork this repo to create your own boilerplate, and use it with `vue-cli`:\n\n```bash\nvue init username/repo my-project\n```\n\n## Contributing\n\nThis project is a modified copy of the [`vue-webpack-boilerplate`](https://github.com/vuejs-templates/webpack) template.\n\nWhile we welcome contributions from the community, please note that changes to configuration that is shared between this project and `vue-webpack-boilerplate` should be made against `vue-webpack-boilerplate` *first*.\n\nOnce the [upstream](https://stackoverflow.com/a/2739476/385997) PR is merged, please file an additional PR against this project making the equivalent changes. This will help ensure that the shared configuration does not diverge too much.\n\nAny changes that are specific to this project—related to service workers, or other PWA functionality—do not need an equivalent upstream PR.\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 0.2900390625,
          "content": "machine:\n  node:\n    version: stable\n\ndependencies:\n  pre:\n    - sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list'\n    - sudo apt-get update\n    - sudo apt-get install google-chrome-stable\n\ntest:\n  override:\n    - bash test.sh\n"
        },
        {
          "name": "deploy-docs.sh",
          "type": "blob",
          "size": 0.1552734375,
          "content": "cd docs\nrm -rf _book\ngitbook build\ncd _book\ngit init\ngit add -A\ngit commit -m 'update book'\ngit push -f git@github.com:vuejs-templates/pwa.git master:gh-pages\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "meta.js",
          "type": "blob",
          "size": 2.564453125,
          "content": "module.exports = {\n  \"helpers\": {\n    \"if_or\": function (v1, v2, options) {\n      if (v1 || v2) {\n        return options.fn(this);\n      }\n\n      return options.inverse(this);\n    }\n  },\n  \"prompts\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"message\": \"Project name\"\n    },\n    \"short_name\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"message\": \"Project short name: fewer than 12 characters to not be truncated on homescreens (default: same as name)\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"message\": \"Project description\",\n      \"default\": \"A Vue.js project\"\n    },\n    \"author\": {\n      \"type\": \"string\",\n      \"message\": \"Author\"\n    },\n    \"build\": {\n      \"type\": \"list\",\n      \"message\": \"Vue build\",\n      \"choices\": [\n        {\n          \"name\": \"Runtime + Compiler: recommended for most users\",\n          \"value\": \"standalone\",\n          \"short\": \"standalone\"\n        },\n        {\n          \"name\": \"Runtime-only: about 6KB lighter min+gzip, but templates (or any Vue-specific HTML) are ONLY allowed in .vue files - render functions are required elsewhere\",\n          \"value\": \"runtime\",\n          \"short\": \"runtime\"\n        }\n      ]\n    },\n    \"router\": {\n      \"type\": \"confirm\",\n      \"message\": \"Install vue-router?\"\n    },\n    \"lint\": {\n      \"type\": \"confirm\",\n      \"message\": \"Use ESLint to lint your code?\"\n    },\n    \"lintConfig\": {\n      \"when\": \"lint\",\n      \"type\": \"list\",\n      \"message\": \"Pick an ESLint preset\",\n      \"choices\": [\n        {\n          \"name\": \"Standard (https://github.com/feross/standard)\",\n          \"value\": \"standard\",\n          \"short\": \"Standard\"\n        },\n        {\n          \"name\": \"Airbnb (https://github.com/airbnb/javascript)\",\n          \"value\": \"airbnb\",\n          \"short\": \"Airbnb\"\n        },\n        {\n          \"name\": \"none (configure it yourself)\",\n          \"value\": \"none\",\n          \"short\": \"none\"\n        }\n      ]\n    },\n    \"unit\": {\n      \"type\": \"confirm\",\n      \"message\": \"Setup unit tests with Karma + Mocha?\"\n    },\n    \"e2e\": {\n      \"type\": \"confirm\",\n      \"message\": \"Setup e2e tests with Nightwatch?\"\n    }\n  },\n  \"filters\": {\n    \".eslintrc.js\": \"lint\",\n    \".eslintignore\": \"lint\",\n    \"config/test.env.js\": \"unit || e2e\",\n    \"test/unit/**/*\": \"unit\",\n    \"build/webpack.test.conf.js\": \"unit\",\n    \"test/e2e/**/*\": \"e2e\",\n    \"src/router/**/*\": \"router\"\n  },\n  \"completeMessage\": \"To get started:\\n\\n  {{^inPlace}}cd {{destDirName}}\\n  {{/inPlace}}npm install\\n  npm run dev\\n\\nDocumentation can be found at https://vuejs-templates.github.io/webpack\"\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.337890625,
          "content": "{\n  \"name\": \"vue-cli-template-pwa\",\n  \"version\": \"2.1.0\",\n  \"license\": \"MIT\",\n  \"description\": \"A full-featured Webpack setup with hot-reload, lint-on-save, unit testing & css extraction.\",\n  \"scripts\": {\n    \"docs\": \"cd docs && gitbook serve\",\n    \"docs:deploy\": \"bash ./deploy-docs.sh\"\n  },\n  \"devDependencies\": {\n    \"vue-cli\": \"^2.8.1\"\n  }\n}\n"
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.107421875,
          "content": "set -e\n\nyes \"\" | ./node_modules/.bin/vue init . test\n\ncd test\nnpm install\nnpm run lint\nnpm test\nnpm run build\n"
        }
      ]
    }
  ]
}