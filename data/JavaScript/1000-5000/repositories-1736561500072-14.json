{
  "metadata": {
    "timestamp": 1736561500072,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "transcranial/keras-js",
      "stars": 4964,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc.js",
          "type": "blob",
          "size": 0.5615234375,
          "content": "const envOpts = {}\n\nif (process.env.BABEL_ENV === 'node') {\n  envOpts.targets = { node: 9 }\n  envOpts.modules = 'commonjs'\n}\n\nif (process.env.BABEL_ENV === 'browser') {\n  envOpts.targets = { browsers: ['>0.5%'] }\n  envOpts.modules = false\n  envOpts.useBuiltIns = 'entry'\n}\n\nconst config = {\n  comments: false,\n  presets: [['@babel/env', envOpts]],\n  plugins: [\n    ['babel-plugin-inline-import', { extensions: ['.glsl'] }],\n    'lodash',\n    '@babel/proposal-class-properties',\n    ['@babel/proposal-object-rest-spread', { useBuiltIns: true }]\n  ]\n}\n\nmodule.exports = config\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.3271484375,
          "content": "module.exports = {\n  env: {\n    browser: true,\n    node: true,\n    mocha: true,\n    es6: true\n  },\n  parser: 'babel-eslint',\n  plugins: ['html'],\n  rules: {\n    'no-console': 0\n  },\n  globals: {\n    KerasJS: true,\n    TEST_DATA: true,\n    testGlobals: true,\n    chai: true,\n    performance: true\n  },\n  extends: 'eslint:recommended'\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03515625,
          "content": "notebooks/* linguist-generated=true\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2265625,
          "content": ".DS_Store\nnode_modules/\nnpm-debug.log\nnpm-debug.log*\nyarn.lock\nyarn-error.log\n\n# jupyter\nnotebooks/**/.ipynb_checkpoints/\n\n# babel compiled dir\nlib/\n\n# demos data\ndemos/data/\n\n# python\n__pycache__/\n*.pyc\n\n# assets\nassets/logo.idraw\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.197265625,
          "content": ".git/\n.vscode/\nassets/\ndemos/\nnode_modules/\nnotebooks/\nproto/\nsrc/\ntest/\n.babelrc.js\n.eslintrc.js\n.gitattributes\n.gitignore\n.npmignore\n.prettierignore\n.prettierrc\nindex.html\nwebpack.config.js\nyarn.lock\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "src/proto.js\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.138671875,
          "content": "printWidth: 120\ntabWidth: 2\nuseTabs: false\nsemi: false\nsingleQuote: true\ntrailingComma: \"none\"\nbracketSpacing: true\njsxBracketSameLine: false\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2017 L. Leon Chen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.2822265625,
          "content": "<p align=\"center\">\n  <strong>**This project is no longer active. Please check out <a href=\"http://js.tensorflow.org\">TensorFlow.js</a>.**<br/>The <a href=\"https://transcranial.github.io/keras-js\">Keras.js demos</a> still work but is no longer updated.</strong>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://transcranial.github.io/keras-js\">\n    <img src=\"https://cdn.rawgit.com/transcranial/keras-js/73aa4cca/assets/logo.svg\" width=\"300px\" />\n  </a>\n</p>\n\n<p align=\"center\">\n  <strong>Run Keras models in the browser, with GPU support using WebGL</strong>\n</p>\n\n<div align=\"center\">\n  <h3>\n    <a href=\"https://transcranial.github.io/keras-js\">Interactive Demos</a>\n    <span> | </span>\n    <a href=\"https://transcranial.github.io/keras-js-docs\">Documentation</a>\n  </h3>\n</div>\n\n<br/>\n\n---\n\nRun [Keras](https://github.com/keras-team/keras) models in the browser, with GPU support provided by WebGL 2. Models can be run in Node.js as well, but only in CPU mode. Because Keras abstracts away a number of frameworks as backends, the models can be trained in any backend, including TensorFlow, CNTK, etc.\n\nLibrary version compatibility: Keras 2.1.2\n\n## [Interactive Demos](https://transcranial.github.io/keras-js)\n\n<p align=\"center\">\n  <a href=\"https://transcranial.github.io/keras-js\"><img src=\"demos/assets/mnist-cnn.png\" height=\"120\" width=\"auto\" /></a>\n  <a href=\"https://transcranial.github.io/keras-js\"><img src=\"demos/assets/resnet50.png\" height=\"120\" width=\"auto\" /></a>\n  <a href=\"https://transcranial.github.io/keras-js\"><img src=\"demos/assets/inception-v3.png\" height=\"120\" width=\"auto\" /></a>\n  <a href=\"https://transcranial.github.io/keras-js\"><img src=\"demos/assets/imdb-bidirectional-lstm.png\" height=\"120\" width=\"auto\" /></a>\n</p>\n\nCheck out the `demos/` directory for real examples running Keras.js in VueJS.\n\n- Basic Convnet for MNIST\n- Convolutional Variational Autoencoder, trained on MNIST\n- Auxiliary Classifier Generative Adversarial Networks (AC-GAN) on MNIST\n- 50-layer Residual Network, trained on ImageNet\n- Inception v3, trained on ImageNet\n- DenseNet-121, trained on ImageNet\n- SqueezeNet v1.1, trained on ImageNet\n- Bidirectional LSTM for IMDB sentiment classification\n\n## [Documentation](https://transcranial.github.io/keras-js-docs)\n\n[MIT License](https://github.com/transcranial/keras-js/blob/master/LICENSE)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.6357421875,
          "content": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n  <title>Keras.js - Run Keras models in the browser</title>\n  <meta name=\"description\" content=\"\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n</head>\n\n<body>\n  <div id=\"root\"></div>\n  <script src=\"dist/keras.min.js\"></script>\n  <script src=\"demos/dist/bundle.min.js\"></script>\n</body>\n\n</html>\n"
        },
        {
          "name": "notebooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.7880859375,
          "content": "{\n  \"name\": \"keras-js\",\n  \"version\": \"1.0.3\",\n  \"description\": \"Run Keras models in the browser, with GPU support using WebGL\",\n  \"main\": \"lib/index.js\",\n  \"unpkg\": \"dist/keras.min.js\",\n  \"scripts\": {\n    \"watch\": \"NODE_ENV=development BABEL_ENV=browser webpack --watch --config webpack.config.js\",\n    \"build:browser\": \"rm -rf dist; NODE_ENV=production BABEL_ENV=browser webpack --config webpack.config.js\",\n    \"build:node\": \"rm -rf lib; NODE_ENV=production BABEL_ENV=node babel src --out-dir lib\",\n    \"build\": \"npm run build:browser && npm run build:node\",\n    \"server\": \"http-server . -c-1 -p 3000\",\n    \"demos:watch\": \"cd demos; NODE_ENV=development BABEL_ENV=browser webpack --watch --config webpack.config.js\",\n    \"demos:build\": \"cd demos; rm -rf dist; NODE_ENV=production BABEL_ENV=browser webpack --config webpack.config.js\",\n    \"proto2js\": \"pbjs --target static-module --wrap es6 proto/model.proto > src/proto.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/transcranial/keras-js.git\"\n  },\n  \"keywords\": [\"keras\", \"deep\", \"learning\", \"neural\", \"networks\", \"javascript\", \"webgl\", \"webgl2\", \"gpu\"],\n  \"author\": \"Leon Chen <leon@md.ai>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/transcranial/keras-js/issues\"\n  },\n  \"homepage\": \"https://github.com/transcranial/keras-js#readme\",\n  \"dependencies\": {\n    \"@babel/polyfill\": \"7.0.0-beta.39\",\n    \"axios\": \"^0.17.1\",\n    \"bluebird\": \"^3.5.1\",\n    \"cwise\": \"^1.0.10\",\n    \"eventemitter3\": \"^3.0.1\",\n    \"lodash\": \"^4.17.5\",\n    \"ndarray\": \"^1.0.18\",\n    \"ndarray-blas-level2\": \"^1.1.0\",\n    \"ndarray-concat-rows\": \"^1.0.1\",\n    \"ndarray-gemm\": \"^1.0.0\",\n    \"ndarray-ops\": \"^1.2.2\",\n    \"ndarray-resample\": \"^1.0.1\",\n    \"ndarray-squeeze\": \"^1.0.2\",\n    \"ndarray-tile\": \"^1.0.3\",\n    \"ndarray-unpack\": \"^1.0.0\",\n    \"ndarray-unsqueeze\": \"^1.0.3\",\n    \"performance-now\": \"^2.1.0\",\n    \"protobufjs\": \"^6.8.4\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"7.0.0-beta.39\",\n    \"@babel/core\": \"7.0.0-beta.39\",\n    \"@babel/plugin-proposal-class-properties\": \"7.0.0-beta.39\",\n    \"@babel/plugin-proposal-object-rest-spread\": \"7.0.0-beta.39\",\n    \"@babel/preset-env\": \"7.0.0-beta.39\",\n    \"babel-eslint\": \"^8.2.1\",\n    \"babel-loader\": \"8.0.0-beta.0\",\n    \"babel-plugin-inline-import\": \"^2.0.6\",\n    \"babel-plugin-lodash\": \"^3.3.2\",\n    \"blueimp-load-image\": \"^2.18.0\",\n    \"chroma-js\": \"^1.3.6\",\n    \"css-loader\": \"^0.28.9\",\n    \"eslint\": \"^4.17.0\",\n    \"eslint-loader\": \"^1.9.0\",\n    \"eslint-plugin-html\": \"^4.0.2\",\n    \"http-server\": \"^0.11.1\",\n    \"postcss-cssnext\": \"^3.1.0\",\n    \"postcss-import\": \"^11.0.0\",\n    \"postcss-loader\": \"^2.1.0\",\n    \"style-loader\": \"^0.20.1\",\n    \"vue\": \"^2.5.13\",\n    \"vue-loader\": \"^14.1.1\",\n    \"vue-router\": \"^3.0.1\",\n    \"vue-template-compiler\": \"^2.5.13\",\n    \"vuetify\": \"^0.17.7\",\n    \"webpack\": \"^3.10.0\"\n  }\n}\n"
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 1.013671875,
          "content": "const path = require('path')\nconst webpack = require('webpack')\n\nconst config = {\n  entry: path.resolve(__dirname, 'src/index'),\n  resolve: { extensions: ['.js'] },\n  output: { path: path.resolve(__dirname, 'dist'), filename: 'keras.min.js', library: 'KerasJS', libraryTarget: 'umd' },\n  module: {\n    rules: [{ test: /\\.js$/, loader: 'babel-loader', exclude: /node_modules/ }]\n  },\n  node: {\n    fs: 'empty'\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  config.plugins = [\n    new webpack.DefinePlugin({ 'process.env.NODE_ENV': JSON.stringify('production') }),\n    // scope hoisting\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    // uglify: unused needs to be set to false or else library will not work properly\n    new webpack.optimize.UglifyJsPlugin({\n      compress: { warnings: false, unused: false },\n      output: { comments: false }\n    })\n  ]\n} else {\n  config.devtool = 'eval'\n  config.plugins = [new webpack.DefinePlugin({ 'process.env.NODE_ENV': JSON.stringify('development') })]\n}\n\nmodule.exports = config\n"
        }
      ]
    }
  ]
}