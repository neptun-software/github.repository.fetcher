{
  "metadata": {
    "timestamp": 1736561910611,
    "page": 605,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "github-tools/github",
      "stars": 3617,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.244140625,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 3\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nmax_line_length = 120\n\n[{*.yml,package.json}]\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc.yaml",
          "type": "blob",
          "size": 0.8818359375,
          "content": "---\n   extends:\n      - eslint:recommended\n      - google\n   parserOptions:\n      ecmaVersion: 6\n      sourceType: module\n   rules:\n      arrow-parens: [error, always]\n      eqeqeq: error\n      guard-for-in: error\n      indent: [error, 3, {SwitchCase: 1}]\n      max-len: [error, {code: 120, ignoreTrailingComments: true}]\n      no-bitwise: warn\n      no-extend-native: error\n      no-useless-constructor: off\n      no-var: error\n      padded-blocks: off\n      quotes: [error, single, {avoidEscape: true}]\n      require-jsdoc:\n         - error\n         - require:\n            FunctionDeclaration: false\n            ClassDeclaration: true\n            MethodDefinition: true\n      spaced-comment: error\n      valid-jsdoc: [error, {requireParamDescription: true}]\n\n   env:\n      es6: true\n      node: true\n      browser: true\n   # globals:\n   #    require: false\n   #    define: false\n   #    escape: false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.107421875,
          "content": ".sass-cache/\n_site/\ndocs/\ndist/\ncoverage/\nnode_modules/\n.nyc_output/\n/out/\n.DS_Store\nnpm-debug.log\nsauce.json\n"
        },
        {
          "name": ".jsdoc.json",
          "type": "blob",
          "size": 0.5,
          "content": "{\n    \"tags\": {\n        \"dictionaries\": [\"jsdoc\"]\n    },\n    \"source\": {\n        \"include\": [\"lib/\", \"package.json\", \"README.md\"],\n        \"includePattern\": \".js$\",\n        \"excludePattern\": \"(node_modules/|docs)\"\n    },\n    \"plugins\": [\n        \"plugins/markdown\"\n    ],\n    \"templates\": {\n        \"cleverLinks\": false,\n        \"monospaceLinks\": true\n    },\n    \"opts\": {\n        \"destination\": \"./docs/\",\n        \"encoding\": \"utf8\",\n        \"recurse\": true,\n        \"template\": \"./node_modules/minami\"\n    }\n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0673828125,
          "content": "docs/\ncoverage/\nnode_modules/\nlib/\n.nyc_output/\n.DS_Store\nsauce.json\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5458984375,
          "content": "sudo: false\nlanguage: node_js\nnode_js:\n- '11'\n- '10'\n- '8'\ncache:\n  directories:\n  - node_modules\nbefore_install: npm install -g npm@latest\nbefore_script:\n- npm run lint\nscript:\n- npm run test-coverage\nafter_success:\n- npm run codecov\nbefore_deploy:\n- npm run build\ndeploy:\n  provider: npm\n  skip_cleanup: true\n  on:\n    tags: true\n  email: clayreimann@gmail.com\n  api_key:\n    secure: WnLh1m02aF7NvFNILCZ8KsjPuDeSddQI87y8dwAixStr2FhQyz8FIKZN2Qj1N1Q9ZJvBETe5HWs1c9yOjTKBkD0d/eU2hlpnB9WXEFRJVDjiUuMnpAMMvuqTZwYg6kXq5N+of95PX58AYiBiV/qwsdUr/MgjEEYLt5UZgRYQRvE=\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.708984375,
          "content": "# Change Log\n\n## 2.4.0 - 2016/09/16\n### Features\n* add `Issue.createLabel`\n* add `Repository.createKey`\n* add `Repository.deleteKey`\n* add `Repository.getBranch`\n* add `Repository.listKeys`\n* add `Repository.getKey`\n* add `Repository.updatePullRequest`\n* deprecate `Repository.updatePullRequst`\n\n### Fixes\n* Request URL for deleting a hook (`Repository.deleteHook`)\n\n## 2.3.0 - 2016/06/17\n### Features\n* add `Repository.mergePullRequest`\n* add `Repository.updatePullRequest`\n* add `Repository.listPullRequestFiles`\n* add `Repository.getReadme`\n\n## 2.2.0 - 2016/05/27\n### Features\n* add `Issue.listIssueEvents`\n\n### Fixes\n* Search returns results again\n\n## 2.1.0 - 2016/05/26\n### Features\nTeam API\n* `Organization.createTeam`\n* `Organization.getTeams`\n* `Team.getTeam`\n* `Team.listRepos`\n* `Team.editTeam`\n* `Team.listMembers`\n* `Team.getMembership`\n* `Team.addMembership`\n* `Team.isManagedRepo`\n* `Team.manageRepo`\n* `Team.unmanageRepo`\n* `Team.deleteTeam`\n\n## 2.0.0\n### Breaking\n* `Repository#move` has a new argument list\nUser\n* `getRepos` → `listRepos`\n* `getOrgs` → `listOrgs`\n* `getGists` → `listGists`\n* `getNotifications` → `listNotifications`\n* `getStarredRepos` → `listStarredRepos`\n\n### Fixes\n* `Repository`: `move` now works\n* `User`: `listRepos`\n\n## 1.2.1\n### Fixes\n* `Repository`: Replace invalid references to `postTree` with `createTree`\n\n## 1.2.0 - 2016/05/11\n### Features\n* Search API now returns all pages of results\n* Added `Repository.listReleases`\n\nAdded functions for querying organization membership\n* `Organization.listMembers`\n* `Organization.isMember`\n\nAdded functions for issue comments\n* `Issue.listComments`\n* `Issue.getComment`\n* `Issue.editComment`\n* `Issue.deleteComment`\n\n### Fixes\n* all functions now return a Promise\n\n## 1.1.0 - 2016/05/03\n### Features\nAdded methods for commenting on Gists:\n* `Gist.listComments`\n* `Gist.getComment`\n* `Gist.editComment`\n* `Gist.deleteComment`\n* `Gist.createComment`\n\n### Fixes\n* `Repository.deleteFile` now correctly returns a promise.\n\n## 1.0.0 - 2016/04/27\nComplete rewrite in ES2015.\n\n* Promise-ified the API\n* Auto-generation of documentation\n* Modularized codebase\n* Refactored tests to run primarily in mocha\n\n### Breaking changes\nMost of the breaking changes are just methods that got renamed. The changes to `User` and `Organization` are deeper\nchanges that now scope a particular `User` or `Organization` to the entity they were instantiated with. You will need\nseparate `User`s to query data about different user accounts.\n\n* `Github.getOrg` → `Github.getOrganization` and requires an organization name.\n* `Github.getUser` now requires a username.\n* `Issue.comment` → `Issue.createIssueComment`\n* `Issue.create` → `Issue.createIssue`\n* `Issue.edit` → `Issue.editIssue`\n* `Issue.get` → `Issue.getIssue`\n* `Issue.list` → `Issue.listIssues`\n* `Repository.branch` → `Repository.createBranch`\n* `Repository.collaborators` → `Repository.getCollaborators`\n* `Repository.compare` → `Repository.compareBranches`\n* `Repository.contents` → `Repository.getContents` and now takes an argument for the content type\n* `Repository.delete` has been removed.\n* `Repository.editHook` → `Repository.updateHook`\n* `Repository.editRelease` → `Repository.updateRelease`\n* `Repository.getCommit` no longer takes a branch as the first argument\n* `Repository.getPull` → `Repository.getPullRequest`\n* `Repository.getRef` now returns the `refspec` from GitHub's API.\n* `Repository.getSha` now returns the same data as GitHub's API. If the reqeusted object is not a directory then the\n   response will contain a property `SHA`, and if the reqeusted object is a directory then the contents of the directory\n   are `stat`ed.\n* `Repository.getStatuses` → `Repository.listStatuses`\n* `Repository.listPulls` → `Repository.listPullRequests`\n* `Repository.postBlob` → `Repository.createBlob`\n* `Repository.postTree` → `Repository.createTree`\n* `Repository.read` remove in favor of `Repository.getContents`\n* `Repository.remove` → `Repository.deleteFile`\n* `Repository.show` → `Repository.getDetails`\n* `Repository.write` → `Repository.writeFile`\n* `Search.code` → `Search.forCode`\n* `Search.issues` → `Search.forIssues`\n* `Search.repositories` → `Search.forRepositories`\n* `Search.users` → `Search.forUsers`\n* The Search API no longer takes a string, it now takes an object with properties `q`, `sort`, and `order` to make the\n   parts of the query easier to grok and to better match GitHub's API.\n* `User.gists` → `User.getGists`\n* `User.notifications` → `User.getNotifications`\n* `User.orgRepos` → `Organization.getRepos`\n* `User.orgs` → `User.getOrgs`\n* `User.repos` → `User.getRepos`\n* `User.show` → `User.getProfile` and no longer takes filtering options\n* `User.userStarred` → `User.getStarredRepos`\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.25390625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at . All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.46875,
          "content": "Copyright (c) 2012 Michael Aufreiter, Development Seed\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n- Neither the name \"Development Seed\" nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.0966796875,
          "content": "# Maintainers wanted\n[Apply within](https://github.com/github-tools/github/issues/539)\n\n# Github.js\n\n[![Downloads per month](https://img.shields.io/npm/dm/github-api.svg?maxAge=2592000)][npm-package]\n[![Latest version](https://img.shields.io/npm/v/github-api.svg?maxAge=3600)][npm-package]\n[![Gitter](https://img.shields.io/gitter/room/github-tools/github.js.svg?maxAge=2592000)][gitter]\n[![Travis](https://img.shields.io/travis/github-tools/github.svg?maxAge=60)][travis-ci]\n[![Codecov](https://img.shields.io/codecov/c/github/github-tools/github.svg?maxAge=2592000)][codecov]\n\n`Github.js` provides a minimal higher-level wrapper around Github's API.\n\n## Usage\n\n```javascript\n/*\n   Data can be retrieved from the API either using callbacks (as in versions < 1.0)\n   or using a new promise-based API. The promise-based API returns the raw Axios\n   request promise.\n */\nimport GitHub from 'github-api';\n\n// unauthenticated client\nconst gh = new GitHub();\nlet gist = gh.getGist(); // not a gist yet\ngist.create({\n   public: true,\n   description: 'My first gist',\n   files: {\n      \"file1.txt\": {\n         content: \"Aren't gists great!\"\n      }\n   }\n}).then(function({data}) {\n   // Promises!\n   let createdGist = data;\n   return gist.read();\n}).then(function({data}) {\n   let retrievedGist = data;\n   // do interesting things\n});\n```\n\n```javascript\nvar GitHub = require('github-api');\n\n// basic auth\nvar gh = new GitHub({\n   username: 'FOO',\n   password: 'NotFoo'\n   /* also acceptable:\n      token: 'MY_OAUTH_TOKEN'\n    */\n});\n\nvar me = gh.getUser(); // no user specified defaults to the user for whom credentials were provided\nme.listNotifications(function(err, notifications) {\n   // do some stuff\n});\n\nvar clayreimann = gh.getUser('clayreimann');\nclayreimann.listStarredRepos(function(err, repos) {\n   // look at all the starred repos!\n});\n```\n\n## API Documentation\n\n[API documentation][docs] is hosted on github pages, and is generated from JSDoc; any contributions\nshould include updated JSDoc.\n\n## Installation\n`Github.js` is available from `npm` or [unpkg][unpkg].\n\n```shell\nnpm install github-api\n```\n\n```html\n<!-- just github-api source (5.3kb) -->\n<script src=\"https://unpkg.com/github-api/dist/GitHub.min.js\"></script>\n\n<!-- standalone (20.3kb) -->\n<script src=\"https://unpkg.com/github-api/dist/GitHub.bundle.min.js\"></script>\n```\n\n## Compatibility\n`Github.js` is tested on node's LTS and current versions.\n\n[codecov]: https://codecov.io/github/github-tools/github?branch=master\n[docs]: http://github-tools.github.io/github/\n[gitter]: https://gitter.im/github-tools/github\n[npm-package]: https://www.npmjs.com/package/github-api/\n[unpkg]: https://unpkg.com/github-api/\n[travis-ci]: https://travis-ci.org/github-tools/github\n\n## Contributing\n\nWe welcome contributions of all types! This section will guide you through setting up your development environment.\n\n### Setup\n\n1. [Install Node](https://nodejs.org/en/) version 8,10 or 11. It can often help to use a Node version switcher such as [NVM](https://github.com/nvm-sh/nvm).\n2. Fork this repo to your GitHub account.\n3. Clone the fork to your development machine (`git clone https://github.com/{YOUR_USERNAME}/github`).\n4. From the root of the cloned repo, run `npm install`.\n5. Email jaredrewerts@gmail.com with the subject **GitHub API - Personal Access Token Request**\n\nA personal access token for our test user, @github-tools-test, will be generated for you.\n\n6. Set the environment variable `GHTOOLS_USER` to `github-tools-test`.\n\n`export GHTOOLS_USER=github-tools-test`\n\n7. Set the environment variable `GHTOOLS_PASSWORD` to the personal access token that was generated for you.\n\n`export GHTOOLS_PASSWORD={YOUR_PAT}`\n\n**NOTE** Windows users can use [this guide](http://www.dowdandassociates.com/blog/content/howto-set-an-environment-variable-in-windows-command-line-and-registry/) to learn about setting environment variables on Windows.\n\n### Tests\n\nThe main way we write code for `github-api` is using test-driven development. We use Mocha to run our tests. Given that the bulk of this library is just interacting with GitHub's API, nearly all of our tests are integration tests. \n\nTo run the test suite, run `npm run test`.\n"
        },
        {
          "name": "gulpfile.babel.js",
          "type": "blob",
          "size": 2.1650390625,
          "content": "import gulp from 'gulp';\nimport eslint from 'gulp-eslint';\nimport babel from 'gulp-babel';\nimport rename from 'gulp-rename';\n\nimport browserify from 'browserify';\nimport buffer from 'vinyl-buffer';\nimport del from 'del';\nimport source from 'vinyl-source-stream';\nimport sourcemaps from 'gulp-sourcemaps';\nimport uglify from 'gulp-uglify';\n\nconst ALL_SOURCES = [\n   '*.js',\n   'lib/*.js',\n   'test/*.js',\n];\n\ngulp.task('lint', function() {\n   return gulp.src(ALL_SOURCES)\n      .pipe(eslint())\n      .pipe(eslint.format())\n      .pipe(eslint.failAfterError())\n      ;\n});\n\ngulp.task('clean', function() {\n   return Promise.all([del('dist/'), del('coverage/')]);\n});\n\ngulp.task('build', [\n   'build:bundled:min',\n   'build:external:min',\n   'build:bundled:debug',\n   'build:external:debug',\n   'build:components',\n]);\n\nconst bundledConfig = {\n   debug: true,\n   entries: 'lib/GitHub.js',\n   standalone: 'GitHub',\n};\nconst externalConfig = {\n   debug: true,\n   entries: 'lib/GitHub.js',\n   standalone: 'GitHub',\n   external: [\n      'axios',\n      'js-base64',\n      'es6-promise',\n      'debug',\n      'utf8',\n   ],\n   bundleExternal: false,\n};\ngulp.task('build:bundled:min', function() {\n   return buildBundle(bundledConfig, '.bundle.min.js', true);\n});\ngulp.task('build:external:min', function() {\n   return buildBundle(externalConfig, '.min.js', true);\n});\ngulp.task('build:bundled:debug', function() {\n   return buildBundle(bundledConfig, '.bundle.js', false);\n});\ngulp.task('build:external:debug', function() {\n   return buildBundle(externalConfig, '.js', false);\n});\ngulp.task('build:components', function() {\n   return gulp.src('lib/*.js')\n      .pipe(sourcemaps.init())\n      .pipe(babel())\n      .pipe(sourcemaps.write('.'))\n      .pipe(gulp.dest('dist/components'))\n      ;\n});\n\nfunction buildBundle(options, extname, minify) {\n   let stream = browserify(options)\n      .transform('babelify')\n      .bundle()\n      .pipe(source('GitHub.js'))\n      .pipe(buffer())\n      .pipe(sourcemaps.init({\n         loadMaps: true,\n      }));\n\n   if (minify) {\n      stream = stream.pipe(uglify());\n   }\n\n   return stream.pipe(rename({extname}))\n      .pipe(sourcemaps.write('.'))\n      .pipe(gulp.dest('dist'))\n      ;\n}\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mocha.opts",
          "type": "blob",
          "size": 0.056640625,
          "content": "--compilers js:babel-register\n--timeout 20000\n--slow 5000\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.6259765625,
          "content": "{\n  \"name\": \"github-api\",\n  \"version\": \"3.4.0\",\n  \"license\": \"BSD-3-Clause-Clear\",\n  \"description\": \"A higher-level wrapper around the Github API.\",\n  \"main\": \"dist/components/GitHub.js\",\n  \"contributors\": [\n    \"Ændrew Rininsland <aendrew.rininsland@thetimes.co.uk> (http://www.aendrew.com)\",\n    \"Aurelio De Rosa <a.derosa@audero.it> (http://www.audero.it/)\",\n    \"Clay Reimann <clayreimann@gmail.com> (http://clayreimann.me)\",\n    \"Michael Aufreiter (http://substance.io)\",\n    \"Mathieu Dutour <mathieu@dutour.me> (https://github.com/mathieudutour)\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"scripts\": {\n    \"clean\": \"gulp clean\",\n    \"build\": \"gulp build\",\n    \"test\": \"mocha --opts ./mocha.opts test/*.spec.js\",\n    \"test-coverage\": \"NODE_ENV=test nyc mocha --opts ./mocha.opts test/*.spec.js\",\n    \"test-verbose\": \"DEBUG=github* npm test\",\n    \"lint\": \"gulp lint\",\n    \"make-docs\": \"node_modules/.bin/jsdoc -c .jsdoc.json --verbose\",\n    \"release\": \"./release.sh\",\n    \"codecov\": \"nyc report --reporter=text-lcov > coverage.lcov && codecov\"\n  },\n  \"babel\": {\n    \"presets\": [\n      \"es2015\"\n    ],\n    \"plugins\": [\n      [\n        \"add-module-exports\",\n        \"transform-es2015-modules-umd\"\n      ]\n    ],\n    \"env\": {\n      \"development\": {\n        \"sourceMaps\": \"inline\"\n      },\n      \"test\": {\n        \"plugins\": [\n          \"istanbul\"\n        ]\n      }\n    }\n  },\n  \"nyc\": {\n    \"sourceMap\": false,\n    \"instrument\": false\n  },\n  \"files\": [\n    \"dist/*\"\n  ],\n  \"dependencies\": {\n    \"axios\": \"^0.21.1\",\n    \"debug\": \"^2.2.0\",\n    \"js-base64\": \"^2.1.9\",\n    \"utf8\": \"^2.1.1\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.7.7\",\n    \"babel-plugin-add-module-exports\": \"^0.2.1\",\n    \"babel-plugin-istanbul\": \"3.0.0\",\n    \"babel-plugin-transform-es2015-modules-umd\": \"^6.5.0\",\n    \"babel-preset-es2015\": \"^6.5.0\",\n    \"babel-register\": \"^6.7.2\",\n    \"babelify\": \"^7.3.0\",\n    \"browserify\": \"^13.0.0\",\n    \"codecov\": \"^1.0.1\",\n    \"del\": \"^2.2.0\",\n    \"eslint-config-google\": \"^0.7.0\",\n    \"eslint-plugin-mocha\": \"^4.7.0\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-babel\": \"^6.1.2\",\n    \"gulp-eslint\": \"^3.0.1\",\n    \"gulp-jscs\": \"^4.0.0\",\n    \"gulp-jscs-stylish\": \"^1.3.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sourcemaps\": \"^2.2.0\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"jsdoc\": \"^3.4.0\",\n    \"minami\": \"^1.1.1\",\n    \"mocha\": \"^3.1.2\",\n    \"must\": \"^0.13.1\",\n    \"nock\": \"^9.0.2\",\n    \"nyc\": \"9.0.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/github-tools/github.git\"\n  },\n  \"keywords\": [\n    \"github\",\n    \"api\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/github-tools/github/issues\"\n  }\n}\n"
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 0.74609375,
          "content": "#!/bin/bash\n# This is the automated release script\n\n# guard against stupid\nif [ -z \"$1\" ]; then\n   echo \"You must specify a new version level: [patch, minor, major]\";\n   exit 1;\nfi\n\n# make sure all our dependencies are installed so we can publish docs\nnpm install\n\n# try to build to make sure we don't publish something really broken\nnpm run build\n\n# bump the version\necho \"npm version $1\"\nnpm version $1\ngit push\ngit push --tags\n\n# start from a clean state\nrm -rf docs/ out/\nmkdir out\n\n# build the docs\nnpm run make-docs\nVERSION=`ls docs/github-api`\n\n# switch to gh-pages and add the docs\nmv docs/github-api/* out/\nrm -rf docs/\n\ngit checkout gh-pages\nmv out/* docs/\necho $VERSION >> _data/versions.csv\ngit add .\ngit commit -m \"adding docs for v$VERSION\"\ngit push\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}