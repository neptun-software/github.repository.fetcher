{
  "metadata": {
    "timestamp": 1736561925516,
    "page": 626,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hootsuite/grid",
      "stars": 3571,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "node_modules/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0380859375,
          "content": "language: node_js\nnode_js:\n  - 6\n  - 4\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.060546875,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.154296875,
          "content": "# DEPRECATED \nThis project is no longer maintained, please consider using [react-grid-layout](https://github.com/react-grid-layout/react-grid-layout) instead.\n\nGridList [![Build Status](https://travis-ci.org/hootsuite/grid.svg?branch=master)](https://travis-ci.org/hootsuite/grid)\n====\nDrag and drop library for a two-dimensional resizable and responsive list of\nitems\n\n**Demo: http://hootsuite.github.io/grid/**\n\nThe GridList library is split into two roles:\n\n1. An agnostic [**GridList class**](#gridlist-class) that manages the\ntwo-dimensional positions from a list of items within a virtual matrix.\n2. A [**jQuery plugin**](#fngridlist) built on top of the GridList class\nthat translates the generic items positions into responsive DOM elements with\ndrag and drop capabilities.\n\n## GridList class\n\nJump to:\n\n- [**API**](#api)\n- [**Primitives**](#primitives)\n\n### API\n\n#### new GridList(items, options)\n\n```js\nvar myGrid = new GridList(items, {\n  direction: 'horizontal',\n  lanes: 3\n});\n```\n\nThe first constructor parameter is an array of [items](#primitives) to populate\nthe grid with.\n\n Supported options:\n\n - **direction** - Can be `'horizontal'` or `'vertical'`. Defaults to\n   `'horizontal'`. This sets how the grid can expand e.g. for 'horizontal' the\n   grid will stretch towards the right to accommodate all the items. For\n   'vertical', it will stretch towards the bottom.\n - **lanes** - Number of fixed rows or columns, depending on the\n   direction.\n\n#### generateGrid()\n\n```js\nmyGrid.generateGrid();\n```\n\nBuild the grid structure from scratch, using the positions of the given\nitems. If items lack positional attributes (x and y), they will be misplaced,\npossibly overlapping. If you want to build a grid around a list of items that\nonly have their size attributes defined (w and h), and rely on the library to\nposition them two-dimensionally, use [_resizeGrid._](#resizegridrows)\n\n#### resizeGrid(lanes)\n\n```js\nmyGrid.resizeGrid(4);\n```\n\n(Re)generate positions for the items inside a grid instance for a given number\nof rows/columns. This method has two major use-cases:\n\n1. Items are being represented two-dimensionally for the first time.\n2. Items already have 2d positions but need to be represented on a different\ngrid size, maintaining as much as possible of their previous order.\n\nPositions inside the grid are generated left-to-right, top-to-bottom. So when\nlooking for a new position inside the grid the topmost row from the leftmost\ncolumn is chosen.\n\n#### moveItemToPosition(item, position)\n\n```js\n// Move item from [0, 0] to [1, 1]\nvar carefreeItem = myGrid.grid[0][0];\nmyGrid.moveItemToPosition(carefreeItem, [1, 1]);\n```\n\nHere are things that happen when moving an item inside the grid:\n\n1. The item's previous position is cleared inside the [2d grid](#gridlistgrid),\n2. The position inside the [item object](#item) is updated,\n3. The item's new position is marked inside the 2d grid and\n4. Collisions are handled if the moved item overlaps with other item(s) from\nthe grid.\n\nCollisions can be solved in two ways. First, an attempt to resolve them\n_locally_ is made, meaning that the moved item tries to swap position with\nthe overlapped item(s). This is the preferred _fair trade._ If this doesn't\nwork out and after swapping we still have collisions inside the grid, the\nentire grid will be [regenerated](#resizegridrows), starting with the moved\nitem fixed in its new position. In the latter case, all the items around and\nto the right of the moved item might have their position slightly altered.\n\n#### resizeItem(item, size)\n\n```js\n// Resize item from position [0, 0] to span over 3 columns\nvar growthItem = myGrid.grid[0, 0];\n\nmyGrid.resizeItem(growthItem, {w: 3});\nconsole.log(growthItem.w); // will output \"3\"\n\nmyGrid.resizing(growthItem, {h: 2});\nconsole.log(growthItem.h); // will output \"2\"\n```\n\nResizing an item is very similar to moving its position, in the sense that\n[grid](#gridlistgrid) cells will be repopulated and collisions will be handled\nafterwards. See [moveItemToPosition.](#moveitemtopositionitem-position)\n\n\n### Primitives\n\n#### Item\n\nThe item is the building block of GridList, and is a plain JavaScript object.\nThe primary function of the GridList is to position such items\ntwo-dimentionally. Which brings us to the composition of an item: **w** and\n**h** for size, **x** and **y** for position. E.g.\n\n```js\n{w: 3, h: 1, x: 0, y: 1}\n```\n\nNote that x and y (**column** and **row**) are abstract coords inside the grid,\nthey are integer values starting from 0. Naturally, w and h (**width** and\n**height**) also take up space in the same coordinate system, which reveals the\nsmallest unit of a grid: the **cell.** You could say, for example, that the\nfeatured item above takes up three grid cells.\n\n#### gridList.items\n\nA GridList instance works around an array of items. The items array is the\nfirst parameter of the class constructor and is always visible under the\n`.items` property. Here's a list of items for a grid with three 1x1 items on a\ncolumn with three rows:\n\n```js\n[{w: 1, h: 1, x: 0, y: 0},\n {w: 1, h: 1, x: 0, y: 1},\n {w: 1, h: 1, x: 0, y: 2}]\n```\n\n#### gridList.grid\n\nSeeing how JavaScript doesn't support multidimensional arrays, the 2d grid\ninside GridList is represented by an array for columns, with each array entry\ncontaining another array with cells for each row. __The cell is simply a pointer\nto an item that occupies it, or a *null* reference if no item is sitting on\nthat cell's position.__ Note that more cells can point to the same item\nreference, because items occupy `w * h` cells. Here's a grid\npseudo-representation:\n\n| col1 | col2 | col3 | col4 |\n| :--: | :--: | :--: | :--: |\n| 1    | 2    |      |      |\n| 1    | 3    | 4    | 4    |\n| 1    |      | 4    | 4    |\n\nHaving the grid in a two-dimensional data structure, we can fetch item\nreferences directly by targeting any of the cells they cover inside the grid.\nE.g.\n\n```js\nmyGrid.grid[1][0] // reference to item #2\nmyGrid.grid[1][1] // reference to item #3\nmyGrid.grid[2][1] // reference to item #4\nmyGrid.grid[3][2] // still reference to item #4\n```\n\nPS. This grid would be generated by these items:\n\n```js\n[{w: 1, h: 3, x: 0, y: 0},\n {w: 1, h: 1, x: 1, y: 0},\n {w: 1, h: 1, x: 1, y: 1},\n {w: 2, h: 2, x: 2, y: 1}]\n```\n\n## $.fn.gridList\n\n```js\n$('.my-list').gridList({\n  direction: 'horizontal',\n  lanes: 3\n});\n```\n\nThe jQuery plugin has two main functions:\n\n- Render the GridList on top of a list of **DOM elements.** The list items are\nexpected to have `data-w` and `data-h` attributes, and optionally `data-x` and\n`data-y` (if their positions have been previously generated and persisted)\n- **Drag and drop** capabilities\n\nThe function takes an optional argument with options that will be passed to the\ndraggables when constructing them.\n\n```js\n$('.my-list').gridList({lanes: 3}, {handle: '.title'});\n```\n\nSee [jQuery UI Draggable API](https://api.jqueryui.com/draggable/) for details on all\nthe available options.\n\nThe rendered list is **responsive** to its parent container, meaning that the\nwidth and height of the items are calculated based on the container height\ndivided by the number of grid rows.\n\n## FAQ: Why not [gridster](https://github.com/ducksboard/gridster.js)?\n\n- Their README reads Ducksboard is no longer active in their development. There\n  are a few notable forks but it's hard to assert their\n  [reliability.](https://github.com/dustmoo/gridster.js/issues)\n- gridster works vertically while our solution works both vertically and\n  horizontally.\n- Our lib contains over 5 times fewer code.\n- gridster collisions are [very\n  basic](https://github.com/ducksboard/gridster.js/issues/54), we pushed towards\n  better UX and found alternative ways for dealing with collisions.\n- We wanted out-of-the-box responsiveness, and the entire grid system was build\n  fluid, relative to any parent container.\n- We needed the grid logic to be a DOM-less lib outside the jQuery plugin. This\n  allows us to compute grid positions on the server-side and run kick-ass fast\n  tests with Node.\n- Another more particular thing we needed was widgets that had height=0, which\n  means they stretch on however many rows a grid has. We show timelines like\n  this. It also works for width=0.\n\n*Please check [demo page](http://hootsuite.github.io/grid/) or code directly for\ninvestigating these assumptions.*\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.3935546875,
          "content": "{\n  \"name\": \"grid-list\",\n  \"homepage\": \"https://github.com/hootsuite/grid\",\n  \"description\": \"Drag and drop library for a two-dimensional resizable and responsive list of items\",\n  \"main\": \"src/gridList.js\",\n  \"keywords\": [\n    \"grid\",\n    \"drag and drop\",\n    \"resizable\",\n    \"reponsive\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"ignore\": [\n    \"node_modules\",\n    \"demo\",\n    \"spec\",\n    \"index.html\"\n  ]\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 1.177734375,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Grid Demo</title>\n  <link rel=\"stylesheet\" href=\"demo/style.css\" />\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js\"></script>\n  <script src=\"spec/fixtures.js\"></script>\n  <script src=\"src/gridList.js\"></script>\n  <script src=\"src/jquery.gridList.js\"></script>\n  <script src=\"demo/load.js\"></script>\n</head>\n<body>\n  <div class=\"header\">\n    <a href=\"#remove-row\" class=\"button remove-row\">-</a>\n    <a href=\"#add-row\" class=\"button add-row\">+</a>\n    <p>\n      <a class=\"github-button\" href=\"https://github.com/hootsuite/grid\" data-style=\"mega\" data-count-href=\"/hootsuite/grid/stargazers\" data-count-api=\"/repos/hootsuite/grid#stargazers_count\" data-count-aria-label=\"# stargazers on GitHub\" aria-label=\"Star hootsuite/grid on GitHub\">GitHub</a>\n    </p>\n  </div>\n  <div class=\"grid-container\">\n    <ul id=\"grid\" class=\"grid\">\n      <li class=\"position-highlight\">\n        <div class=\"inner\"></div>\n      </li>\n    </ul>\n  </div>\n  <script async defer id=\"github-bjs\" src=\"https://buttons.github.io/buttons.js\"></script>\n</body>\n</html>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.5166015625,
          "content": "{\n  \"name\": \"grid-list\",\n  \"version\": \"0.4.1\",\n  \"description\": \"Drag and drop library for a two-dimensional resizable and responsive list of items\",\n  \"keywords\": [\n    \"grid\",\n    \"drag and drop\",\n    \"resizable\",\n    \"reponsive\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"jasmine-node\": \"~1.13.1\"\n  },\n  \"main\": \"src/gridList.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/hootsuite/grid.git\"\n  },\n  \"scripts\": {\n    \"test\": \"jasmine-node --verbose spec\"\n  }\n}\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}