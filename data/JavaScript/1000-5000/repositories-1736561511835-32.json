{
  "metadata": {
    "timestamp": 1736561511835,
    "page": 32,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DavidAnson/markdownlint",
      "stars": 4911,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.166015625,
          "content": "coverage\ndemo/markdown-it.min.js\ndemo/markdownlint-browser.js\ndemo/markdownlint-browser.min.js\nnode_modules\n!test/node_modules\nnpm-debug.log\ntest-repos\n.DS_Store\n.vscode\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 1.0947265625,
          "content": "{\n  \"code-block-style\": {\n    \"style\": \"fenced\"\n  },\n  \"code-fence-style\": {\n    \"style\": \"backtick\"\n  },\n  \"emphasis-style\": {\n    \"style\": \"asterisk\"\n  },\n  \"extended-ascii\": {\n    \"ascii-only\": true\n  },\n  \"fenced-code-language\": {\n    \"allowed_languages\": [\n      \"bash\",\n      \"html\",\n      \"javascript\",\n      \"json\",\n      \"markdown\",\n      \"text\"\n    ],\n    \"language_only\": true\n  },\n  \"heading-style\": {\n    \"style\": \"atx\"\n  },\n  \"hr-style\": {\n    \"style\": \"---\"\n  },\n  \"line-length\": {\n    \"strict\": true,\n    \"code_blocks\": false\n  },\n  \"link-image-style\": {\n    \"collapsed\": false,\n    \"shortcut\": false,\n    \"url_inline\": false\n  },\n  \"no-duplicate-heading\": {\n    \"siblings_only\": true\n  },\n  \"ol-prefix\": {\n    \"style\": \"ordered\"\n  },\n  \"proper-names\": {\n    \"code_blocks\": false,\n    \"names\": [\n      \"Cake.Markdownlint\",\n      \"CommonMark\",\n      \"JavaScript\",\n      \"Markdown\",\n      \"markdown-it\",\n      \"markdownlint\",\n      \"Node.js\"\n    ]\n  },\n  \"reference-links-images\": {\n    \"shortcut_syntax\": true\n  },\n  \"strong-style\": {\n    \"style\": \"asterisk\"\n  },\n  \"ul-style\": {\n    \"style\": \"dash\"\n  }\n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.1552734375,
          "content": ".eslintignore\n.github\n.markdownlint.json\n.npmrc\n.vscode\ncoverage\ndemo/*\ndoc-build\neslint.config.mjs\nexample\nnpm-debug.log\nschema/*.mjs\nscripts\ntest\ntest-repos\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.056640625,
          "content": "engine-strict=true\nignore-scripts=true\npackage-lock=false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.9482421875,
          "content": "# Changelog\n\n## 0.37.3\n\n- Tweak `package.json` dependencies to work with `pnpm`\n\n## 0.37.2\n\n- Add subpath imports for overriding default bundler behavior\n- Improve MD032\n\n## 0.37.1\n\n- Add support for \"browser\" condition (as used by webpack)\n\n## 0.37.0\n\n- Convert module to ECMAScript (breaking change)\n  - <https://nodejs.org/docs/latest/api/esm.html>\n  - <https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c>\n- Convert module to named exports (breaking change)\n\n## 0.36.1\n\n- Fix behavior of MD054\n\n## 0.36.0\n\n- Improve MD051\n- Move `applyFix` and `applyFixes` from helpers to core\n- Make `micromark` parser available to custom rules\n- Introduce `./micromark` helpers exports\n- Update custom/rule documentation\n- Improve performance\n- Update dependencies\n\n## 0.35.0\n\n- Add MD058/blanks-around-tables\n- Use `micromark` in MD001/MD003/MD009/MD010/MD013/MD014/MD019/MD021/MD023/\n  MD024/MD025/MD039/MD042/MD043\n- Improve MD018/MD020/MD031/MD034/MD044\n- `markdown-it` parser no longer invoked by default\n- Add strict version of JSON schema\n- Improve performance\n- Update dependencies\n\n## 0.34.0\n\n- Use `micromark` in MD027/MD028/MD036/MD040/MD041/MD046/MD048\n- Improve MD013/MD034/MD049/MD050/MD051\n- Update custom rule requirements and documentation\n- Improve various TypeScript declarations\n- Update dependencies\n\n## 0.33.0\n\n- Add MD055/table-pipe-style, MD056/table-column-count\n- Improve MD005/MD007/MD024/MD026/MD038\n- Incorporate `micromark-extension-directive`\n- Improve JSON schema, document validation\n- Reduce size of browser script\n- Update dependencies\n\n## 0.32.1\n\n- Fix behavior of MD054\n\n## 0.32.0\n\n- Remove deprecated MD002/MD006\n- Remove rule aliases for \"header\"\n- Add MD054/link-image-style\n- Use `micromark` in MD005/MD007/MD030\n- Improve MD022/MD026/MD034/MD037/MD038/MD045/MD051\n- Improve JSON schema and related examples\n- Provide type declaration for Configuration object\n- Remove support for end-of-life Node version 16\n- Update dependencies\n\n## 0.31.1\n\n- Improve MD032/MD034\n- Update dependencies\n\n## 0.31.0\n\n- Improve MD032/MD037/MD043/MD044/MD051/MD052\n- Improve performance\n- Update dependencies\n\n## 0.30.0\n\n- Use `micromark` in MD022/MD026/MD032/MD037/MD045/MD051\n- Incorporate `micromark-extension-math` for math syntax\n- Allow custom rules to override information URL\n- Update dependencies\n\n## 0.29.0\n\n- Update `micromark` parser dependencies for better performance\n- Use `micromark` in MD049/MD050\n- Improve MD034/MD037/MD044/MD049/MD050\n- Support multiple parsers in demo page\n- Remove support for end-of-life Node version 14\n- Update dependencies\n\n## 0.28.2\n\n- Update dependencies for CVE-2023-2251\n\n## 0.28.1\n\n- Update dependencies\n\n## 0.28.0\n\n- Introduce `micromark` parser for better positional data (internal only)\n- Use `micromark` in MD013/MD033/MD034/MD035/MD038/MD044/MD052/MD053\n- Simplify file-based test cases\n- Unify browser script for demo page\n- Update dependencies\n\n## 0.27.0\n\n- Improve MD011/MD013/MD022/MD031/MD032/MD033/MD034/MD040/MD043/MD051/MD053\n- Generate/separate documentation\n- Improve documentation\n- Update dependencies\n\n## 0.26.2\n\n- Improve MD037/MD051/MD053\n\n## 0.26.1\n\n- Improve MD051\n\n## 0.26.0\n\n- Add MD051/MD052/MD053 for validating link fragments & reference\n  links/images & link/image reference definitions (MD053 auto-fixable)\n- Improve MD010/MD031/MD035/MD039/MD042/MD044/MD049/MD050\n- Add `markdownlint-disable-line` inline comment\n- Support `~` paths in `readConfig/Sync`\n- Add `configParsers` option\n- Remove support for end-of-life Node version 12\n- Default `resultVersion` to 3\n- Update browser script to use ES2015\n- Simplify JSON schema\n- Address remaining CodeQL issues\n- Improve performance\n- Update dependencies\n\n## 0.25.1\n\n- Update dependencies for CVE-2022-21670\n\n## 0.25.0\n\n- Add MD049/MD050 for consistent emphasis/strong style (both auto-fixable)\n- Improve MD007/MD010/MD032/MD033/MD035/MD037/MD039\n- Support asynchronous custom rules\n- Improve performance\n- Improve CI process\n- Reduce dependencies\n- Update dependencies\n\n## 0.24.0\n\n- Remove support for end-of-life Node version 10\n- Add support for custom file system module\n- Improve MD010/MD011/MD037/MD043/MD044\n- Improve TypeScript declaration file and JSON schema\n- Update dependencies\n\n## 0.23.1\n\n- Work around lack of webpack support for dynamic calls to `require`(`.resolve`)\n\n## 0.23.0\n\n- Add comprehensive example `.markdownlint.jsonc`/`.markdownlint.yaml` files\n- Add fix information for MD004/ul-style\n- Improve MD018/MD019/MD020/MD021/MD037/MD041\n- Improve HTML comment handling\n- Update test runner and test suite\n- Update dependencies\n\n## 0.22.0\n\n- Allow `extends` in config to reference installed packages by name\n- Add `markdownlint-disable-next-line` inline comment\n- Support JSON front matter\n- Improve MD009/MD026/MD028/MD043\n- Update dependencies (including `markdown-it` to v12)\n\n## 0.21.1\n\n- Improve MD011/MD031\n- Export `getVersion` API\n\n## 0.21.0\n\n- Lint concurrently for better performance (async only)\n- Add Promise-based APIs\n- Update TypeScript declaration file\n- Hide `toString` on `LintResults`\n- Add ability to fix in browser demo\n- Allow custom rules in `.markdownlint.json` schema\n- Improve MD042/MD044\n- Improve documentation\n- Update dependencies\n\n## 0.20.4\n\n- Fix regression in MD037\n- Improve MD034/MD044\n- Improve documentation\n\n## 0.20.3\n\n- Fix regression in MD037\n- Improve MD044\n- Add automatic regression testing\n\n## 0.20.2\n\n- Fix regression in MD037\n- Improve MD038\n\n## 0.20.1\n\n- Fix regression in MD037\n\n## 0.20.0\n\n- Add `markdownlint-configure-file` inline comment\n- Reimplement MD037\n- Improve MD005/MD007/MD013/MD018/MD029/MD031/MD034/MD038/MD039\n- Improve HTML comment handling\n- Update dependencies\n\n## 0.19.0\n\n- Remove support for end-of-life Node version 8\n- Add fix information for MD005/list-indent\n- Improve MD007/MD013/MD014\n- Deprecate MD006/ul-start-left\n- Add rationale for every rule\n- Update test runner and code coverage\n- Add more JSDoc comments\n- Update dependencies\n\n## 0.18.0\n\n- Add MD048/code-fence-style\n- Add fix information for MD007/ul-indent\n- Add `markdownlint-disable-file`/`markdownlint-enable-file` inline comments\n- Add type declaration file (.d.ts) for TypeScript dependents\n- Update schema\n- Improve MD006/MD007/MD009/MD013/MD030\n- Update dependencies\n\n## 0.17.2\n\n- Improve MD020/MD033/MD044\n\n## 0.17.1\n\n- Fix handling of front matter by fix information\n\n## 0.17.0\n\n- Add `resultVersion` 3 to support fix information for default and custom rules\n- Add fix information for 24 rules\n- Update newline handling to match latest CommonMark specification\n- Improve MD014/MD037/MD039\n- Update dependencies\n\n## 0.16.0\n\n- Add custom rule sample for linting code\n- Improve MD026/MD031/MD033/MD038\n- Update dependencies\n\n## 0.15.0\n\n- Add `markdownlint-capture`/`markdownlint-restore` inline comments\n- Improve MD009/MD013/MD026/MD033/MD036\n- Update dependencies\n\n## 0.14.2\n\n- Improve MD047\n- Add `handleRuleFailures` option\n\n## 0.14.1\n\n- Improve MD033\n\n## 0.14.0\n\n- Remove support for end-of-life Node version 6\n- Introduce `markdownlint-rule-helpers`\n- Add MD046/MD047\n- Improve MD033/MD034/MD039\n- Improve custom rule validation and in-browser demo\n- Update dependencies\n\n## 0.13.0\n\n- Improve MD013/MD022/MD025/MD029/MD031/MD032/MD037/MD041\n- Deprecate MD002\n- Improve Pandoc YAML support\n- Update dependencies\n\n## 0.12.0\n\n- Add `information` link for custom rules\n- Add `markdownItPlugins` for extensibility\n- Improve MD023/MD032/MD038\n- Update dependencies\n\n## 0.11.0\n\n- Improve MD005/MD024/MD029/MD038\n- Improve custom rule example\n- Add `CONTRIBUTING.md`\n- Update dependencies\n\n## 0.10.0\n\n- Add support for non-JSON configuration files\n- Pass file/string name to custom rules\n- Update dependencies\n\n## 0.9.0\n\n- Remove support for end-of-life Node versions 0.10/0.12/4\n- Change \"header\" to \"heading\" per spec (non-breaking)\n- Improve MD003/MD009/MD041\n- Handle uncommon line-break characters\n- Refactor for ES6\n- Update dependencies\n\n## 0.8.1\n\n- Update item loop to be iterative\n- Improve MD014\n- Update dependencies\n\n## 0.8.0\n\n- Add support for using and authoring custom rules\n- Improve MD004/MD007/MD013\n- Add `engines` to `package.json`\n- Refactor\n- Update dependencies\n\n## 0.7.0\n\n- `resultVersion` defaults to 2 (breaking change)\n- Add MD045\n- Improve MD029\n- Remove `trimLeft`/`trimRight`\n- Split rules\n- Refactor\n- Update dependencies\n\n## 0.6.4\n\n- Improve MD029/MD042\n- Update dependencies\n\n## 0.6.3\n\n- Improve highlighting for MD020\n\n## 0.6.2\n\n- Improve MD013/MD027/MD034/MD037/MD038/MD041/MD044\n- Update dependencies\n\n## 0.6.1\n\n- Update `markdown-it` versioning\n- Exclude demo/test from publishing\n\n## 0.6.0\n\n- `resultVersion` defaults to 1 (breaking change)\n- Ignore HTML comments\n- TOML front matter\n- Fixes for MD044\n- Update dependencies\n\n## 0.5.0\n\n- Add shareable configuration\n- Add `noInlineConfig` option\n- Add `README.md` links\n- Fix MD030\n- Improve MD009/MD041\n- Update dependencies\n\n## 0.4.1\n\n- Fixes for MD038/front matter\n- Improvements to MD044\n- Update dependencies\n\n## 0.4.0\n\n- Add MD044\n- Enhance MD013/MD032/MD041/MD042/MD043\n- Fix for MD038\n- Update dependencies\n\n## 0.3.1\n\n- Fix regressions in MD032/MD038\n- Update dependencies\n\n## 0.3.0\n\n- More detailed error reporting with `resultVersion`\n- Enhance MD010/MD012/MD036\n- Fixes for MD027/MD029/MD030\n- Include JSON schema dependencies\n\n## 0.2.0\n\n- Add MD042/MD043\n- Enhance MD002/MD003/MD004/MD007/MD011/MD025/MD041\n- Update dependencies\n\n## 0.1.1\n\n- Fix bug handling HTML in tables\n- Reference `markdownlint-cli`\n\n## 0.1.0\n\n- Add aliases\n- Exceptions for MD033\n- Exclusions for MD013\n- Update dependencies\n\n## 0.0.8\n\n- Support disabling/enabling rules inline\n- Improve code fence\n- Update dependencies\n\n## 0.0.7\n\n- Add MD041\n- Improve MD003\n- Ignore front matter\n- Update dependencies\n\n## 0.0.6\n\n- Improve performance\n- Simplify in-browser\n- Update dependencies\n\n## 0.0.5\n\n- Add `strings` option to enable file-less scenarios\n- Add in-browser demo\n\n## 0.0.4\n\n- Add tests MD033-MD040\n- Update dependencies\n\n## 0.0.3\n\n- Add synchronous API\n- Improve documentation and code\n\n## 0.0.2\n\n- Improve documentation, tests, and code\n\n## 0.0.1\n\n- Initial release\n- Includes tests MD001-MD032\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.0380859375,
          "content": "# Contributing\n\nInterested in contributing? Great! Here are some suggestions to make it a good\nexperience:\n\nStart by [opening an issue](https://github.com/DavidAnson/markdownlint/issues),\nwhether to identify a problem or outline a change. That issue should be used to\ndiscuss the situation and agree on a plan of action before writing code or\nsending a pull request. Maybe the problem isn't really a problem, or maybe there\nare more things to consider. If so, it's best to realize that before spending\ntime and effort writing code that may not get used.\n\nMatch the coding style of the files you edit. Although everyone has their own\npreferences and opinions, a pull request is not the right forum to debate them.\n\nDo not add new [`dependencies` to `package.json`][dependencies]. The Markdown\nparsers [`markdown-it`][markdown-it] and [`micromark`][micromark] are the\nproject's only dependencies.\n\nPackage versions for `dependencies` and `devDependencies` should be specified\nexactly (also known as \"pinning\"). The short explanation is that doing otherwise\neventually leads to inconsistent behavior and broken functionality. (See [Why I\npin dependency versions in Node.js packages][version-pinning] for a longer\nexplanation.)\n\nIf developing a new rule, start by creating a [custom rule][custom-rules] in its\nown project. Once written, published, and tested in real world scenarios, open\nan issue to consider adding it to this project. For rule ideas, see [issues\ntagged with the `new rule` label][new-rule].\n\nAdd tests for all new/changed functionality. Test positive and negative\nscenarios. Try to break the new code now, or else it will get broken later.\n\nRun tests before sending a pull request via `npm test` in the [usual\nmanner][npm-scripts]. Tests should all pass on all platforms. The test runner is\n[AVA][ava] and test cases are located in `test/markdownlint-test*.js`. When\nrunning tests, `test/*.md` files are enumerated, linted, and fail if any\nviolations are missing a corresponding `{MD###}` marker in the test file. For\nexample, the line `### Heading {MD001}` is expected to trigger the rule `MD001`.\nFor cases where the marker text can not be present on the same line, the syntax\n`{MD###:#}` can be used to include a line number. If `some-test.md` needs custom\nconfiguration, a `some-test.json` is used to provide a custom `options.config`\nfor that scenario. Tests run by `markdownlint-test-scenarios.js` use [AVA's\nsnapshot feature][ava-snapshots]. To update snapshots (for example, after\nmodifying a test file), run `npm run update-snapshots` and include the updated\nfiles with the pull request.\n\nLint before sending a pull request by running `npm run lint`. There should be no\nissues.\n\nRun a full continuous integration pass before sending a pull request via `npm\nrun ci`. Code coverage should always be 100%. As part of a continuous\nintegration run, generated files may get updated and fail the run - commit them\nto the repository and rerun continuous integration.\n\nPull requests should contain a single commit. If necessary, squash multiple\ncommits before creating the pull request and when making changes. (See [Git\nTools - Rewriting History][rewriting-history] for details.)\n\nOpen pull requests against the `next` branch. That's where the latest changes\nare staged for the next release. Include the text \"(fixes #??)\" at the end of\nthe commit message so the pull request will be associated with the relevant\nissue. End commit messages with a period (`.`). Once accepted, the tag `fixed in\nnext` will be added to the issue. When the commit is merged to the main branch\nduring the release process, the issue will be closed automatically. (See\n[Closing issues using keywords][closing-keywords] for details.)\n\nPlease refrain from using slang or meaningless placeholder words. Sample content\ncan be \"text\", \"code\", \"heading\", or the like. Sample URLs should use\n[example.com][example-com] which is safe for this purpose. Profanity is not\nallowed.\n\nIn order to maintain the permissive MIT license this project uses, all\ncontributions must be your own and released under that license. Code you add\nshould be an original work and should not be copied from elsewhere. Taking code\nfrom a different project, Stack Overflow, or the like is not allowed. The use of\ntools such as GitHub Copilot, ChatGPT, LLMs (large language models), etc. that\nincorporate code from other projects is not allowed.\n\nThank you!\n\n[ava]: https://github.com/avajs/ava\n[ava-snapshots]: https://github.com/avajs/ava/blob/main/docs/04-snapshot-testing.md\n[closing-keywords]: https://help.github.com/articles/closing-issues-using-keywords/\n[custom-rules]: doc/CustomRules.md\n[dependencies]: https://docs.npmjs.com/files/package.json#dependencies\n[example-com]: https://en.wikipedia.org/wiki/Example.com\n[markdown-it]: https://www.npmjs.com/package/markdown-it\n[micromark]: https://www.npmjs.com/package/micromark\n[new-rule]: https://github.com/DavidAnson/markdownlint/labels/new%20rule\n[npm-scripts]: https://docs.npmjs.com/misc/scripts\n[rewriting-history]: https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History\n[version-pinning]: https://dlaa.me/blog/post/versionpinning\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) David Anson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 35.833984375,
          "content": "# markdownlint\n\n> A Node.js style checker and lint tool for Markdown/CommonMark files.\n\n[![npm version][npm-image]][npm-url]\n[![License][license-image]][license-url]\n\n## Install\n\n```bash\nnpm install markdownlint --save-dev\n```\n\n## Overview\n\nThe [Markdown][markdown] markup language is designed to be easy to read, write,\nand understand. It succeeds - and its flexibility is both a benefit and a\ndrawback. Many styles are possible, so formatting can be inconsistent; some\nconstructs don't work well in all parsers and should be avoided.\n\n`markdownlint` is a [static analysis][static-analysis] tool for\n[Node.js][nodejs] with a library of rules to enforce standards and consistency\nfor Markdown files. It was inspired by - and heavily influenced by - Mark\nHarrison's [markdownlint][markdownlint-ruby] for Ruby. The initial rules, rule\ndocumentation, and test cases came from that project.\n\n`markdownlint` uses the [`micromark`][micromark] parser and honors the\n[CommonMark][commonmark] specification for Markdown. It additionally supports\npopular [GitHub Flavored Markdown (GFM)][gfm] syntax like autolinks and tables\nas well as directives, footnotes, and math syntax - all implemented by\n[`micromark` extensions][micromark-extensions].\n\n[commonmark]: https://commonmark.org/\n[gfm]: https://github.github.com/gfm/\n[markdown]: https://en.wikipedia.org/wiki/Markdown\n[markdownlint-ruby]: https://github.com/markdownlint/markdownlint\n[micromark]: https://github.com/micromark/micromark\n[micromark-extensions]: https://github.com/micromark/micromark?tab=readme-ov-file#list-of-extensions\n[nodejs]: https://nodejs.org/\n[static-analysis]: https://en.wikipedia.org/wiki/Static_program_analysis\n\n### Related\n\n- CLI\n  - [markdownlint-cli][markdownlint-cli] command-line interface for Node.js\n    ([works with pre-commit][markdownlint-cli-precommit])\n  - [markdownlint-cli2][markdownlint-cli2] command-line interface for Node.js\n    ([works with pre-commit][markdownlint-cli2-precommit])\n- GitHub\n  - [GitHub Action for markdownlint-cli2][markdownlint-cli2-action]\n  - [GitHub Super-Linter Action][super-linter]\n  - [GitHub Actions problem matcher for\n    markdownlint-cli][markdownlint-problem-matcher]\n- Editor\n  - [vscode-markdownlint extension for VS Code][vscode-markdownlint]\n  - [Sublime Text markdownlint for Sublime Text][sublimelinter]\n  - [coc-markdownlint extension for Vim/Neovim][coc]\n- Tooling\n  - [eslint-plugin-markdownlint for the ESLint analyzer][eslint-plugin]\n  - [grunt-markdownlint for the Grunt task runner][grunt-markdownlint]\n  - [Cake.Markdownlint addin for Cake build automation system][cake]\n  - [Lombiq Node.js Extensions for MSBuild (.NET builds)][nodejs-extensions]\n- Ruby\n  - [markdownlint/mdl gem for Ruby][rubygems-mdl]\n\n[cake]: https://github.com/cake-contrib/Cake.Markdownlint\n[coc]: https://github.com/fannheyward/coc-markdownlint\n[eslint-plugin]: https://github.com/paweldrozd/eslint-plugin-markdownlint\n[grunt-markdownlint]: https://github.com/sagiegurari/grunt-markdownlint\n[markdownlint-cli]: https://github.com/igorshubovych/markdownlint-cli\n[markdownlint-cli-precommit]: https://github.com/igorshubovych/markdownlint-cli#use-with-pre-commit\n[markdownlint-cli2]: https://github.com/DavidAnson/markdownlint-cli2\n[markdownlint-cli2-action]: https://github.com/marketplace/actions/markdownlint-cli2-action\n[markdownlint-cli2-precommit]: https://github.com/DavidAnson/markdownlint-cli2#pre-commit\n[markdownlint-problem-matcher]: https://github.com/xt0rted/markdownlint-problem-matcher\n[nodejs-extensions]: https://github.com/Lombiq/NodeJs-Extensions\n[rubygems-mdl]: https://rubygems.org/gems/mdl\n[sublimelinter]: https://github.com/jonlabelle/SublimeLinter-contrib-markdownlint\n[super-linter]: https://github.com/super-linter/super-linter\n[vscode-markdownlint]: https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint\n\n### References\n\nThe following specifications are considered authoritative in cases of ambiguity:\n\n- [CommonMark](https://spec.commonmark.org/current/)\n- [GitHub Flavored Markdown Spec](https://github.github.com/gfm/)\n\n## Demonstration\n\n[`markdownlint` demo](https://dlaa.me/markdownlint/), an interactive, in-browser\nplayground for learning and exploring.\n\n## Rules / Aliases\n\n<!-- markdownlint-disable line-length -->\n\n- **[MD001](doc/md001.md)** *heading-increment* - Heading levels should only increment by one level at a time\n- **[MD003](doc/md003.md)** *heading-style* - Heading style\n- **[MD004](doc/md004.md)** *ul-style* - Unordered list style\n- **[MD005](doc/md005.md)** *list-indent* - Inconsistent indentation for list items at the same level\n- **[MD007](doc/md007.md)** *ul-indent* - Unordered list indentation\n- **[MD009](doc/md009.md)** *no-trailing-spaces* - Trailing spaces\n- **[MD010](doc/md010.md)** *no-hard-tabs* - Hard tabs\n- **[MD011](doc/md011.md)** *no-reversed-links* - Reversed link syntax\n- **[MD012](doc/md012.md)** *no-multiple-blanks* - Multiple consecutive blank lines\n- **[MD013](doc/md013.md)** *line-length* - Line length\n- **[MD014](doc/md014.md)** *commands-show-output* - Dollar signs used before commands without showing output\n- **[MD018](doc/md018.md)** *no-missing-space-atx* - No space after hash on atx style heading\n- **[MD019](doc/md019.md)** *no-multiple-space-atx* - Multiple spaces after hash on atx style heading\n- **[MD020](doc/md020.md)** *no-missing-space-closed-atx* - No space inside hashes on closed atx style heading\n- **[MD021](doc/md021.md)** *no-multiple-space-closed-atx* - Multiple spaces inside hashes on closed atx style heading\n- **[MD022](doc/md022.md)** *blanks-around-headings* - Headings should be surrounded by blank lines\n- **[MD023](doc/md023.md)** *heading-start-left* - Headings must start at the beginning of the line\n- **[MD024](doc/md024.md)** *no-duplicate-heading* - Multiple headings with the same content\n- **[MD025](doc/md025.md)** *single-title/single-h1* - Multiple top-level headings in the same document\n- **[MD026](doc/md026.md)** *no-trailing-punctuation* - Trailing punctuation in heading\n- **[MD027](doc/md027.md)** *no-multiple-space-blockquote* - Multiple spaces after blockquote symbol\n- **[MD028](doc/md028.md)** *no-blanks-blockquote* - Blank line inside blockquote\n- **[MD029](doc/md029.md)** *ol-prefix* - Ordered list item prefix\n- **[MD030](doc/md030.md)** *list-marker-space* - Spaces after list markers\n- **[MD031](doc/md031.md)** *blanks-around-fences* - Fenced code blocks should be surrounded by blank lines\n- **[MD032](doc/md032.md)** *blanks-around-lists* - Lists should be surrounded by blank lines\n- **[MD033](doc/md033.md)** *no-inline-html* - Inline HTML\n- **[MD034](doc/md034.md)** *no-bare-urls* - Bare URL used\n- **[MD035](doc/md035.md)** *hr-style* - Horizontal rule style\n- **[MD036](doc/md036.md)** *no-emphasis-as-heading* - Emphasis used instead of a heading\n- **[MD037](doc/md037.md)** *no-space-in-emphasis* - Spaces inside emphasis markers\n- **[MD038](doc/md038.md)** *no-space-in-code* - Spaces inside code span elements\n- **[MD039](doc/md039.md)** *no-space-in-links* - Spaces inside link text\n- **[MD040](doc/md040.md)** *fenced-code-language* - Fenced code blocks should have a language specified\n- **[MD041](doc/md041.md)** *first-line-heading/first-line-h1* - First line in a file should be a top-level heading\n- **[MD042](doc/md042.md)** *no-empty-links* - No empty links\n- **[MD043](doc/md043.md)** *required-headings* - Required heading structure\n- **[MD044](doc/md044.md)** *proper-names* - Proper names should have the correct capitalization\n- **[MD045](doc/md045.md)** *no-alt-text* - Images should have alternate text (alt text)\n- **[MD046](doc/md046.md)** *code-block-style* - Code block style\n- **[MD047](doc/md047.md)** *single-trailing-newline* - Files should end with a single newline character\n- **[MD048](doc/md048.md)** *code-fence-style* - Code fence style\n- **[MD049](doc/md049.md)** *emphasis-style* - Emphasis style\n- **[MD050](doc/md050.md)** *strong-style* - Strong style\n- **[MD051](doc/md051.md)** *link-fragments* - Link fragments should be valid\n- **[MD052](doc/md052.md)** *reference-links-images* - Reference links and images should use a label that is defined\n- **[MD053](doc/md053.md)** *link-image-reference-definitions* - Link and image reference definitions should be needed\n- **[MD054](doc/md054.md)** *link-image-style* - Link and image style\n- **[MD055](doc/md055.md)** *table-pipe-style* - Table pipe style\n- **[MD056](doc/md056.md)** *table-column-count* - Table column count\n- **[MD058](doc/md058.md)** *blanks-around-tables* - Tables should be surrounded by blank lines\n\n<!-- markdownlint-restore -->\n\nSee [Rules.md](doc/Rules.md) for more details.\n\n### Custom Rules\n\nIn addition to built-in rules, custom rules can be used to address\nproject-specific requirements. To find community-developed rules use\n[keyword `markdownlint-rule` on npm][markdownlint-rule].\nTo implement your own rules, refer to [CustomRules.md](doc/CustomRules.md).\n\n[markdownlint-rule]: https://www.npmjs.com/search?q=keywords:markdownlint-rule\n\n## Tags\n\nTags group related rules and can be used to enable/disable multiple\nrules at once.\n\n- **`accessibility`** - `MD045`\n- **`atx`** - `MD018`, `MD019`\n- **`atx_closed`** - `MD020`, `MD021`\n- **`blank_lines`** - `MD012`, `MD022`, `MD031`, `MD032`, `MD047`\n- **`blockquote`** - `MD027`, `MD028`\n- **`bullet`** - `MD004`, `MD005`, `MD007`, `MD032`\n- **`code`** - `MD014`, `MD031`, `MD038`, `MD040`, `MD046`, `MD048`\n- **`emphasis`** - `MD036`, `MD037`, `MD049`, `MD050`\n- **`hard_tab`** - `MD010`\n- **`headings`** - `MD001`, `MD003`, `MD018`, `MD019`, `MD020`, `MD021`,\n  `MD022`, `MD023`, `MD024`, `MD025`, `MD026`, `MD036`, `MD041`, `MD043`\n- **`hr`** - `MD035`\n- **`html`** - `MD033`\n- **`images`** - `MD045`, `MD052`, `MD053`, `MD054`\n- **`indentation`** - `MD005`, `MD007`, `MD027`\n- **`language`** - `MD040`\n- **`line_length`** - `MD013`\n- **`links`** - `MD011`, `MD034`, `MD039`, `MD042`, `MD051`, `MD052`, `MD053`,\n  `MD054`\n- **`ol`** - `MD029`, `MD030`, `MD032`\n- **`spaces`** - `MD018`, `MD019`, `MD020`, `MD021`, `MD023`\n- **`spelling`** - `MD044`\n- **`table`** - `MD055`, `MD056`, `MD058`\n- **`ul`** - `MD004`, `MD005`, `MD007`, `MD030`, `MD032`\n- **`url`** - `MD034`\n- **`whitespace`** - `MD009`, `MD010`, `MD012`, `MD027`, `MD028`, `MD030`,\n  `MD037`, `MD038`, `MD039`\n\n## Configuration\n\nText passed to `markdownlint` is parsed as Markdown, analyzed, and any\nissues reported. Two kinds of text are ignored by most rules:\n\n- [HTML comments](https://www.w3.org/TR/html5/syntax.html#comments)\n- [Front matter](https://jekyllrb.com/docs/frontmatter/) (see\n  `options.frontMatter` below)\n\nRules can be enabled, disabled, and configured via `options.config`\n(described below) to define the expected behavior for a set of inputs.\nTo enable or disable rules at a particular location within a file, add\none of these markers to the appropriate place (HTML comments don't\nappear in the final markup):\n\n- Disable all rules: `<!-- markdownlint-disable -->`\n- Enable all rules: `<!-- markdownlint-enable -->`\n- Disable all rules for the current line: `<!-- markdownlint-disable-line -->`\n- Disable all rules for the next line: `<!-- markdownlint-disable-next-line -->`\n- Disable one or more rules by name: `<!-- markdownlint-disable MD001 MD005 -->`\n- Enable one or more rules by name: `<!-- markdownlint-enable MD001 MD005 -->`\n- Disable one or more rules by name for the current line:\n  `<!-- markdownlint-disable-line MD001 MD005 -->`\n- Disable one or more rules by name for the next line:\n  `<!-- markdownlint-disable-next-line MD001 MD005 -->`\n- Capture the current rule configuration: `<!-- markdownlint-capture -->`\n- Restore the captured rule configuration: `<!-- markdownlint-restore -->`\n\nFor example:\n\n```markdown\n<!-- markdownlint-disable-next-line no-space-in-emphasis -->\nspace * in * emphasis\n```\n\nOr:\n\n```markdown\nspace * in * emphasis <!-- markdownlint-disable-line no-space-in-emphasis -->\n```\n\nOr:\n\n```markdown\n<!-- markdownlint-disable no-space-in-emphasis -->\nspace * in * emphasis\n<!-- markdownlint-enable no-space-in-emphasis -->\n```\n\nTo temporarily disable rule(s), then restore the former configuration:\n\n```markdown\n<!-- markdownlint-capture -->\n<!-- markdownlint-disable -->\nany violations you want\n<!-- markdownlint-restore -->\n```\n\nThe initial configuration is captured by default (as if every document\nbegan with `<!-- markdownlint-capture -->`), so the pattern above can\nbe expressed more simply:\n\n```markdown\n<!-- markdownlint-disable -->\nany violations you want\n<!-- markdownlint-restore -->\n```\n\nChanges take effect starting with the line a comment is on, so the following\nhas no effect:\n\n```markdown\nspace * in * emphasis <!-- markdownlint-disable --> <!-- markdownlint-enable -->\n```\n\nTo apply changes to an entire file regardless of where the comment is located,\nthe following syntax is supported:\n\n- Disable all rules: `<!-- markdownlint-disable-file -->`\n- Enable all rules: `<!-- markdownlint-enable-file -->`\n- Disable one or more rules by name: `<!-- markdownlint-disable-file MD001 -->`\n- Enable one or more rules by name: `<!-- markdownlint-enable-file MD001 -->`\n\nThis can be used to \"hide\" `markdownlint` comments at the bottom of a file.\n\nIn cases where it is desirable to change the configuration of one or\nmore rules for a file, the following more advanced syntax is supported:\n\n- Configure: `<!-- markdownlint-configure-file { options.config JSON } -->`\n\nFor example:\n\n```markdown\n<!-- markdownlint-configure-file { \"hr-style\": { \"style\": \"---\" } } -->\n```\n\nor\n\n```markdown\n<!-- markdownlint-configure-file\n{\n  \"hr-style\": {\n    \"style\": \"---\"\n  },\n  \"no-trailing-spaces\": false\n}\n-->\n```\n\nThese changes apply to the entire file regardless of where the comment is\nlocated. Multiple such comments (if present) are applied top-to-bottom. By\ndefault, content of `markdownlint-configure-file` is assumed to be JSON, but\n[`options.configParsers`](#optionsconfigparsers) can be used to support\nalternate formats.\n\n## API\n\n### Linting\n\nAsynchronous API via `import { lint } from \"markdownlint/async\"`:\n\n```javascript\n/**\n * Lint specified Markdown files.\n *\n * @param {Options | null} options Configuration options.\n * @param {LintCallback} callback Callback (err, result) function.\n * @returns {void}\n */\nfunction lint(options, callback) { ... }\n```\n\nSynchronous API via `import { lint } from \"markdownlint/sync\"`:\n\n```javascript\n/**\n * Lint specified Markdown files.\n *\n * @param {Options | null} options Configuration options.\n * @returns {LintResults} Results object.\n */\nfunction lint(options) { ... }\n```\n\nPromise API via `import { lint } from \"markdownlint/promise\"`:\n\n```javascript\n/**\n * Lint specified Markdown files.\n *\n * @param {Options | null} options Configuration options.\n * @returns {Promise<LintResults>} Results object.\n */\nfunction lint(options) { ... }\n```\n\n#### options\n\nType: `Object`\n\nConfigures the function. All properties are optional, but at least one\nof `files` or `strings` should be set to provide input.\n\n##### options.config\n\nType: `Object` mapping `String` to `Boolean | Object`\n\nConfigures the rules to use.\n\nObject keys are rule names/aliases; object values are the rule's configuration.\nThe value `false` disables a rule, `true` enables its default configuration,\nand passing an object value customizes that rule. Setting the special `default`\nrule to `true` or `false` includes/excludes all rules by default. In the absence\nof a configuration object, all rules are enabled. Enabling or disabling a tag\nname (ex: `whitespace`) affects all rules having that tag.\n\nThe `default` rule is applied first, then keys are processed in order from top\nto bottom with later values overriding earlier ones. Keys (including rule names,\naliases, tags, and `default`) are not case-sensitive.\n\nExample:\n\n```json\n{\n  \"default\": true,\n  \"MD003\": { \"style\": \"atx_closed\" },\n  \"MD007\": { \"indent\": 4 },\n  \"no-hard-tabs\": false,\n  \"whitespace\": false\n}\n```\n\nSee [.markdownlint.jsonc](schema/.markdownlint.jsonc) and/or\n[.markdownlint.yaml](schema/.markdownlint.yaml) for an example\nconfiguration object with all properties set to the default value.\n\nSets of rules (known as a \"style\") can be stored separately and loaded\nas [JSON](https://en.wikipedia.org/wiki/JSON).\n\nExample of referencing a built-in style from JavaScript:\n\n```javascript\nconst options = {\n  \"files\": [ \"...\" ],\n  \"config\": require(\"style/relaxed.json\")\n};\n```\n\nExample doing so from `.markdownlint.json` via `extends` (more on this below):\n\n```json\n{\n  \"extends\": \"markdownlint/style/relaxed\"\n}\n```\n\nSee the [style](style) directory for more samples.\n\nSee [markdownlint-config-schema.json](schema/markdownlint-config-schema.json)\nfor the [JSON Schema](https://json-schema.org/) of the `options.config`\nobject.\n\nSee [ValidatingConfiguration.md](schema/ValidatingConfiguration.md) for ways to\nuse the JSON Schema to validate configuration.\n\nFor more advanced scenarios, styles can reference and extend other styles.\nThe `readConfig` and `readConfigSync` functions can be used to read such\nstyles.\n\nFor example, assuming a `base.json` configuration file:\n\n```json\n{\n  \"default\": true\n}\n```\n\nAnd a `custom.json` configuration file:\n\n```json\n{\n  \"extends\": \"base.json\",\n  \"line-length\": false\n}\n```\n\nThen code like the following:\n\n```javascript\nconst options = {\n  \"config\": markdownlint.readConfigSync(\"./custom.json\")\n};\n```\n\nMerges `custom.json` and `base.json` and is equivalent to:\n\n```javascript\nconst options = {\n  \"config\": {\n    \"default\": true,\n    \"line-length\": false\n  }\n};\n```\n\n##### options.configParsers\n\nType: *Optional* `Array` of `Function` taking (`String`) and returning `Object`\n\nArray of functions to parse the content of `markdownlint-configure-file` blocks.\n\nAs shown in the [Configuration](#configuration) section, inline comments can be\nused to customize the [configuration object](#optionsconfig) for a document. By\ndefault, the `JSON.parse` built-in is used, but custom parsers can be specified.\nContent is passed to each parser function until one returns a value (vs.\nthrowing an exception). As such, strict parsers should come before flexible\nones.\n\nFor example:\n\n```javascript\n[ JSON.parse, require(\"toml\").parse, require(\"js-yaml\").load ]\n```\n\n##### options.customRules\n\nType: `Array` of `Object`\n\nList of custom rules to include with the default rule set for linting.\n\nEach array element should define a rule. Rules are typically exported\nby another package, but can be defined locally.\n\nExample:\n\n```javascript\nconst extraRules = require(\"extraRules\");\nconst options = {\n  \"customRules\": [ extraRules.one, extraRules.two ]\n};\n```\n\nSee [CustomRules.md](doc/CustomRules.md) for details about authoring\ncustom rules.\n\n##### options.files\n\nType: `Array` of `String`\n\nList of files to lint.\n\nEach array element should be a single file (via relative or absolute path);\n[globbing](https://en.wikipedia.org/wiki/Glob_%28programming%29) is the\ncaller's responsibility.\n\nExample: `[ \"one.md\", \"dir/two.md\" ]`\n\n##### options.frontMatter\n\nType: `RegExp`\n\nMatches any [front matter](https://jekyllrb.com/docs/frontmatter/)\nfound at the beginning of a file.\n\nSome Markdown content begins with metadata; the default `RegExp` for\nthis option ignores common forms of \"front matter\". To match differently,\nspecify a custom `RegExp` or use the value `null` to disable the feature.\n\nThe default value:\n\n```javascript\n/((^---[^\\S\\r\\n\\u2028\\u2029]*$[\\s\\S]+?^---\\s*)|(^\\+\\+\\+[^\\S\\r\\n\\u2028\\u2029]*$[\\s\\S]+?^(\\+\\+\\+|\\.\\.\\.)\\s*)|(^\\{[^\\S\\r\\n\\u2028\\u2029]*$[\\s\\S]+?^\\}\\s*))(\\r\\n|\\r|\\n|$)/m\n```\n\nIgnores [YAML](https://en.wikipedia.org/wiki/YAML),\n[TOML](https://en.wikipedia.org/wiki/TOML), and\n[JSON](https://en.wikipedia.org/wiki/JSON) front matter such as:\n\n```text\n---\nlayout: post\ntitle: Title\n---\n```\n\nNote: Matches must occur at the start of the file.\n\n##### options.fs\n\nType: `Object` implementing the [file system API][node-fs-api]\n\nIn advanced scenarios, it may be desirable to bypass the default file system\nAPI. If a custom file system implementation is provided, `markdownlint` will use\nthat instead of using `node:fs`.\n\nNote: The only methods called are `readFile` and `readFileSync`.\n\n[node-fs-api]: https://nodejs.org/api/fs.html\n\n##### options.handleRuleFailures\n\nType: `Boolean`\n\nCatches exceptions thrown during rule processing and reports the problem\nas a rule violation.\n\nBy default, exceptions thrown by rules (or the library itself) are unhandled\nand bubble up the stack to the caller in the conventional manner. By setting\n`handleRuleFailures` to `true`, exceptions thrown by failing rules will\nbe handled by the library and the exception message logged as a rule violation.\nThis setting can be useful in the presence of (custom) rules that encounter\nunexpected syntax and fail. By enabling this option, the linting process\nis allowed to continue and report any violations that were found.\n\n##### options.markdownItPlugins\n\nType: `Array` of `Array` of `Function` and plugin parameters\n\nSpecifies additional [`markdown-it` plugins][markdown-it-plugin] to use when\nparsing input. Plugins can be used to support additional syntax and features for\nadvanced scenarios. *Deprecated.*\n\n[markdown-it-plugin]: https://www.npmjs.com/search?q=keywords:markdown-it-plugin\n\nEach item in the top-level `Array` should be of the form:\n\n```javascript\n[ require(\"markdown-it-plugin\"), plugin_param_0, plugin_param_1, ... ]\n```\n\n> Note that `markdown-it` plugins are only called when the `markdown-it` parser\n> is invoked. None of the built-in rules use the `markdown-it` parser, so\n> `markdown-it` plugins will only be invoked when one or more\n> [custom rules][custom-rules] that use the `markdown-it` parser are present.\n\n[custom-rules]: #custom-rules\n\n##### options.noInlineConfig\n\nType: `Boolean`\n\nDisables the use of HTML comments like `<!-- markdownlint-enable -->` to toggle\nrules within the body of Markdown content.\n\nBy default, properly-formatted inline comments can be used to create exceptions\nfor parts of a document. Setting `noInlineConfig` to `true` ignores all such\ncomments.\n\n##### options.resultVersion\n\nType: `Number`\n\nSpecifies which version of the `result` object to return (see the \"Usage\"\nsection below for examples).\n\nPassing a `resultVersion` of `0` corresponds to the original, simple format\nwhere each error is identified by rule name and line number. *Deprecated*\n\nPassing a `resultVersion` of `1` corresponds to a detailed format where each\nerror includes information about the line number, rule name, alias, description,\nas well as any additional detail or context that is available. *Deprecated*\n\nPassing a `resultVersion` of `2` corresponds to a detailed format where each\nerror includes information about the line number, rule names, description, as\nwell as any additional detail or context that is available. *Deprecated*\n\nPassing a `resultVersion` of `3` corresponds to the detailed version `2` format\nwith additional information about how to fix automatically-fixable errors. In\nthis mode, all errors that occur on each line are reported (other versions\nreport only the first error for each rule). This is the default behavior.\n\n##### options.strings\n\nType: `Object` mapping `String` to `String`\n\nMap of identifiers to strings for linting.\n\nWhen Markdown content is not available as files, it can be passed as\nstrings. The keys of the `strings` object are used to identify each\ninput value in the `result` summary.\n\nExample:\n\n```json\n{\n  \"readme\": \"# README\\n...\",\n  \"changelog\": \"# CHANGELOG\\n...\"\n}\n```\n\n#### callback\n\nType: `Function` taking (`Error`, `Object`)\n\nStandard completion callback.\n\n#### result\n\nType: `Object`\n\nCall `result.toString()` for convenience or see below for an example of the\nstructure of the `result` object. Passing the value `true` to `toString()`\nuses rule aliases (ex: `no-hard-tabs`) instead of names (ex: `MD010`).\n\n### Config\n\nThe `options.config` configuration object is simple and can be stored in a file\nfor readability and easy reuse. The `readConfig` and `readConfigSync` functions\nload configuration settings and support the `extends` keyword for referencing\nother files (see above).\n\nBy default, configuration files are parsed as JSON (and named\n`.markdownlint.json`). Custom parsers can be provided to handle other formats\nlike JSONC, YAML, and TOML.\n\nAsynchronous API via `import { readConfig } from \"markdownlint/async\"`:\n\n```javascript\n/**\n * Read specified configuration file.\n *\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[] | ReadConfigCallback} [parsers] Parsing function(s).\n * @param {Object} [fs] File system implementation.\n * @param {ReadConfigCallback} [callback] Callback (err, result) function.\n * @returns {void}\n */\nfunction readConfig(file, parsers, fs, callback) { ... }\n```\n\nSynchronous API via `import { readConfig } from \"markdownlint/sync\"`:\n\n```javascript\n/**\n * Read specified configuration file.\n *\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[]} [parsers] Parsing function(s).\n * @param {Object} [fs] File system implementation.\n * @returns {Configuration} Configuration object.\n */\nfunction readConfig(file, parsers, fs) { ... }\n```\n\nPromise API via `import { readConfig } from \"markdownlint/promise\"`:\n\n```javascript\n/**\n * Read specified configuration file.\n *\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[]} [parsers] Parsing function(s).\n * @param {Object} [fs] File system implementation.\n * @returns {Promise<Configuration>} Configuration object.\n */\nfunction readConfig(file, parsers, fs) { ... }\n```\n\n#### file\n\nType: `String`\n\nLocation of configuration file to read.\n\nThe `file` is resolved relative to the current working directory. If an\n`extends` key is present once read, its value will be resolved as a path\nrelative to `file` and loaded recursively. Settings from a file referenced by\n`extends` are applied first, then those of `file` are applied on top (overriding\nany of the same keys appearing in the referenced file). If either the `file` or\n`extends` path begins with the `~` directory, it will act as a placeholder for\nthe home directory.\n\n#### parsers\n\nType: *Optional* `Array` of `Function` taking (`String`) and returning `Object`\n\nArray of functions to parse configuration files.\n\nThe contents of a configuration file are passed to each parser function until\none of them returns a value (vs. throwing an exception). Consequently, strict\nparsers should come before flexible parsers.\n\nFor example:\n\n```javascript\n[ JSON.parse, require(\"toml\").parse, require(\"js-yaml\").load ]\n```\n\n#### fs\n\nType: *Optional* `Object` implementing the [file system API][file-system-api]\n\n[file-system-api]: https://nodejs.org/api/fs.html\n\nIn advanced scenarios, it may be desirable to bypass the default file system\nAPI. If a custom file system implementation is provided, `markdownlint` will use\nthat instead of invoking `node:fs`.\n\nNote: The only methods called are `readFile`, `readFileSync`, `access`, and\n`accessSync`.\n\n#### callback\n\nType: `Function` taking (`Error`, `Object`)\n\nStandard completion callback.\n\n#### result\n\nType: `Object`\n\nConfiguration object.\n\n### Fixing\n\nRules that can be fixed automatically include a `fixInfo` property which is\noutlined in the [documentation for custom rules](doc/CustomRules.md#authoring).\nTo apply fixes consistently, the `applyFix`/`applyFixes` methods may be used via\n`import { applyFix, applyFixes } from \"markdownlint\"`:\n\n```javascript\n/**\n * Applies the specified fix to a Markdown content line.\n *\n * @param {string} line Line of Markdown content.\n * @param {RuleOnErrorFixInfo} fixInfo RuleOnErrorFixInfo instance.\n * @param {string} [lineEnding] Line ending to use.\n * @returns {string | null} Fixed content or null if deleted.\n */\nfunction applyFix(line, fixInfo, lineEnding = \"\\n\") { ... }\n\n/**\n * Applies as many of the specified fixes as possible to Markdown content.\n *\n * @param {string} input Lines of Markdown content.\n * @param {RuleOnErrorInfo[]} errors RuleOnErrorInfo instances.\n * @returns {string} Fixed content.\n */\nfunction applyFixes(input, errors) { ... }\n```\n\nInvoking `applyFixes` with the results of a call to lint can be done like so:\n\n```javascript\nimport { applyFixes } from \"markdownlint\";\nimport { lint as lintSync } from \"markdownlint/sync\";\n\nconst results = lintSync({ \"strings\": { \"content\": original } });\nconst fixed = applyFixes(original, results.content);\n```\n\n### Miscellaneous\n\nTo get the [semantic version][semver] of the library, the `getVersion` method\ncan be used:\n\n```javascript\n/**\n * Gets the (semantic) version of the library.\n *\n * @returns {string} SemVer string.\n */\nfunction getVersion() { ... }\n```\n\nInvoking `getVersion` is simple:\n\n```javascript\nimport { getVersion } from \"markdownlint\";\n\n// Displays the library version\nconsole.log(getVersion());\n```\n\n[semver]: https://semver.org\n\n## Usage\n\nInvoke `lint` and use the `result` object's `toString` method:\n\n```javascript\nimport { lint as lintAsync } from \"markdownlint/async\";\n\nconst options = {\n  \"files\": [ \"good.md\", \"bad.md\" ],\n  \"strings\": {\n    \"good.string\": \"# good.string\\n\\nThis string passes all rules.\",\n    \"bad.string\": \"#bad.string\\n\\n#This string fails\\tsome rules.\"\n  }\n};\n\nlintAsync(options, function callback(error, results) {\n  if (!error && results) {\n    console.log(results.toString());\n  }\n});\n```\n\nOutput:\n\n```text\nbad.string: 3: MD010/no-hard-tabs Hard tabs [Column: 19]\nbad.string: 1: MD018/no-missing-space-atx No space after hash on atx style heading [Context: \"#bad.string\"]\nbad.string: 3: MD018/no-missing-space-atx No space after hash on atx style heading [Context: \"#This string fails        some rules.\"]\nbad.string: 1: MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: \"#bad.string\"]\nbad.md: 3: MD010/no-hard-tabs Hard tabs [Column: 17]\nbad.md: 1: MD018/no-missing-space-atx No space after hash on atx style heading [Context: \"#bad.md\"]\nbad.md: 3: MD018/no-missing-space-atx No space after hash on atx style heading [Context: \"#This file fails      some rules.\"]\nbad.md: 1: MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: \"#bad.md\"]\n```\n\nOr as a synchronous call:\n\n```javascript\nimport { lint as lintSync } from \"markdownlint/sync\";\n\nconst results = lintSync(options);\nconsole.log(results.toString());\n```\n\nTo examine the `result` object directly via a `Promise`-based call:\n\n```javascript\nimport { lint as lintPromise } from \"markdownlint/promise\";\n\nconst results = await lintPromise(options);\nconsole.dir(results, { \"colors\": true, \"depth\": null });\n```\n\nOutput:\n\n```json\n{\n  \"good.md\": [],\n  \"bad.md\": [\n    { \"lineNumber\": 3,\n      \"ruleNames\": [ \"MD010\", \"no-hard-tabs\" ],\n      \"ruleDescription\": \"Hard tabs\",\n      \"ruleInformation\": \"https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/md010.md\",\n      \"errorDetail\": \"Column: 17\",\n      \"errorContext\": null,\n      \"errorRange\": [ 17, 1 ] },\n    { \"lineNumber\": 1,\n      \"ruleNames\": [ \"MD018\", \"no-missing-space-atx\" ],\n      \"ruleDescription\": \"No space after hash on atx style heading\",\n      \"ruleInformation\": \"https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/md018.md\",\n      \"errorDetail\": null,\n      \"errorContext\": \"#bad.md\",\n      \"errorRange\": [ 1, 2 ] },\n    { \"lineNumber\": 3,\n      \"ruleNames\": [ \"MD018\", \"no-missing-space-atx\" ],\n      \"ruleDescription\": \"No space after hash on atx style heading\",\n      \"ruleInformation\": \"https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/md018.md\",\n      \"errorDetail\": null,\n      \"errorContext\": \"#This file fails\\tsome rules.\",\n      \"errorRange\": [ 1, 2 ] },\n    { \"lineNumber\": 1,\n      \"ruleNames\": [ \"MD041\", \"first-line-heading\", \"first-line-h1\" ],\n      \"ruleDescription\": \"First line in a file should be a top-level heading\",\n      \"ruleInformation\": \"https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/md041.md\",\n      \"errorDetail\": null,\n      \"errorContext\": \"#bad.md\",\n      \"errorRange\": null }\n  ]\n}\n```\n\nIntegration with the [gulp](https://gulpjs.com/) build system is\nstraightforward: [`gulpfile.cjs`](example/gulpfile.cjs).\n\nIntegration with the [Grunt](https://gruntjs.com/) build system is similar:\n[`Gruntfile.cjs`](example/Gruntfile.cjs).\n\n## Browser\n\n`markdownlint` also works in the browser.\n\nGenerate normal and minified scripts with:\n\n```bash\nnpm run build-demo\n```\n\nThen reference the `markdownlint-browser` script:\n\n```html\n<script src=\"demo/markdownlint-browser.min.js\"></script>\n```\n\nAnd call it like so:\n\n```javascript\nconst options = {\n  \"strings\": {\n    \"content\": \"Some Markdown to lint.\"\n  }\n};\n\nconst results = globalThis.markdownlint.lintSync(options).toString();\n```\n\n## Examples\n\nFor ideas how to integrate `markdownlint` into your workflow, refer to the\nfollowing projects or one of the tools in the [Related section](#related):\n\n- [.NET Documentation][dot-net-doc] ([Search repository][dot-net-doc-search])\n- [ally.js][ally-js] ([Search repository][ally-js-search])\n- [Apache Airflow][airflow] ([Search repository][airflow-search])\n- [Boostnote][boostnote] ([Search repository][boostnote-search])\n- [CodiMD][codimd] ([Search repository][codimd-search])\n- [Electron][electron] ([Search repository][electron-search])\n- [ESLint][eslint] ([Search repository][eslint-search])\n- [Garden React Components][garden] ([Search repository][garden-search])\n- [MDN Web Docs][mdn] ([Search repository][mdn-search])\n- [MkDocs][mkdocs] ([Search repository][mkdocs-search])\n- [Mocha][mocha] ([Search repository][mocha-search])\n- [Pi-hole documentation][pi-hole] ([Search repository][pi-hole-search])\n- [Reactable][reactable] ([Search repository][reactable-search])\n- [V8][v8] ([Search repository][v8-search])\n- [webhint][webhint] ([Search repository][webhint-search])\n- [webpack][webpack] ([Search repository][webpack-search])\n- [WordPress][wordpress] ([Search repository][wordpress-search])\n\nFor more advanced integration scenarios:\n\n- [GitHub Docs content linter][content-linter]\n- [GitHub's `markdownlint-github` repository][markdownlint-github]\n\n[ally-js]: https://allyjs.io/\n[ally-js-search]: https://github.com/medialize/ally.js/search?q=markdownlint\n[airflow]: https://airflow.apache.org\n[airflow-search]: https://github.com/apache/airflow/search?q=markdownlint\n[boostnote]: https://boostnote.io/\n[boostnote-search]: https://github.com/BoostIO/Boostnote/search?q=markdownlint\n[codimd]: https://github.com/hackmdio/codimd\n[codimd-search]: https://github.com/hackmdio/codimd/search?q=markdownlint\n[content-linter]: https://docs.github.com/en/contributing/collaborating-on-github-docs/using-the-content-linter\n[dot-net-doc]: https://docs.microsoft.com/en-us/dotnet/\n[dot-net-doc-search]: https://github.com/dotnet/docs/search?q=markdownlint\n[electron]: https://www.electronjs.org\n[electron-search]: https://github.com/electron/electron/search?q=markdownlint\n[eslint]: https://eslint.org/\n[eslint-search]: https://github.com/eslint/eslint/search?q=markdownlint\n[garden]: https://zendeskgarden.github.io/react-components/\n[garden-search]: https://github.com/zendeskgarden/react-components/search?q=markdownlint\n[markdownlint-github]: https://github.com/github/markdownlint-github\n[mdn]: https://developer.mozilla.org/\n[mdn-search]: https://github.com/mdn/content/search?q=markdownlint\n[mkdocs]: https://www.mkdocs.org/\n[mkdocs-search]: https://github.com/mkdocs/mkdocs/search?q=markdownlint\n[mocha]: https://mochajs.org/\n[mocha-search]: https://github.com/mochajs/mocha/search?q=markdownlint\n[pi-hole]: https://docs.pi-hole.net\n[pi-hole-search]: https://github.com/pi-hole/docs/search?q=markdownlint\n[reactable]: https://glittershark.github.io/reactable/\n[reactable-search]: https://github.com/glittershark/reactable/search?q=markdownlint\n[v8]: https://v8.dev/\n[v8-search]: https://github.com/v8/v8.dev/search?q=markdownlint\n[webhint]: https://webhint.io/\n[webhint-search]: https://github.com/webhintio/hint/search?q=markdownlint\n[webpack]: https://webpack.js.org/\n[webpack-search]: https://github.com/webpack/webpack.js.org/search?q=markdownlint\n[wordpress]: https://wordpress.org/gutenberg/\n[wordpress-search]: https://github.com/WordPress/gutenberg/search?q=markdownlint\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for more information.\n\n## Releasing\n\nSee [ReleaseProcess.md](doc/ReleaseProcess.md) for more information.\n\n## History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n[npm-image]: https://img.shields.io/npm/v/markdownlint.svg\n[npm-url]: https://www.npmjs.com/package/markdownlint\n[license-image]: https://img.shields.io/npm/l/markdownlint.svg\n[license-url]: https://opensource.org/licenses/MIT\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc-build",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint.config.mjs",
          "type": "blob",
          "size": 4.4248046875,
          "content": "import js from \"@eslint/js\";\nimport eslintPluginJsdoc from \"eslint-plugin-jsdoc\";\nimport eslintPluginNode from \"eslint-plugin-n\";\nimport eslintPluginRegexp from \"eslint-plugin-regexp\";\nimport eslintPluginStylistic from \"@stylistic/eslint-plugin\";\nimport eslintPluginUnicorn from \"eslint-plugin-unicorn\";\n\nexport default [\n  js.configs.all,\n  eslintPluginJsdoc.configs[\"flat/recommended\"],\n  eslintPluginNode.configs[\"flat/recommended\"],\n  eslintPluginRegexp.configs[\"flat/recommended\"],\n  eslintPluginStylistic.configs.customize({\n    \"arrowParens\": true,\n    \"braceStyle\": \"1tbs\",\n    \"commaDangle\": \"never\",\n    \"jsx\": false,\n    \"quoteProps\": \"always\",\n    \"quotes\": \"double\",\n    \"semi\": true\n  }),\n  eslintPluginUnicorn.configs[\"flat/all\"],\n  {\n    \"ignores\": [\n      \"demo/markdown-it.min.js\",\n      \"demo/markdownlint-browser.js\",\n      \"demo/markdownlint-browser.min.js\",\n      \"example/typescript/type-check.js\",\n      \"test-repos/**\"\n    ]\n  },\n  {\n    \"linterOptions\": {\n      \"reportUnusedDisableDirectives\": true\n    },\n    \"rules\": {\n      \"@stylistic/array-bracket-spacing\": [ \"error\", \"always\" ],\n      \"@stylistic/indent\": [ \"error\", 2 ],\n      \"@stylistic/indent-binary-ops\": [ \"off\" ],\n      \"@stylistic/operator-linebreak\": [ \"error\", \"after\" ],\n      \"@stylistic/padded-blocks\": \"off\",\n      \"@stylistic/space-before-function-paren\": [ \"error\", \"never\" ],\n      \"capitalized-comments\": \"off\",\n      \"complexity\": \"off\",\n      \"func-style\": \"off\",\n      \"id-length\": \"off\",\n      \"jsdoc/tag-lines\": [ \"error\", \"never\", { \"startLines\": 1 } ],\n      \"logical-assignment-operators\": \"off\",\n      \"max-depth\": \"off\",\n      \"max-lines-per-function\": \"off\",\n      \"max-lines\": \"off\",\n      \"max-params\": \"off\",\n      \"max-statements\": \"off\",\n      \"multiline-comment-style\": [ \"error\", \"separate-lines\" ],\n      \"no-empty-function\": \"off\",\n      \"no-implicit-coercion\": \"off\",\n      \"no-magic-numbers\": \"off\",\n      \"no-param-reassign\": \"off\",\n      \"no-plusplus\": \"off\",\n      \"no-ternary\": \"off\",\n      \"no-undef-init\": \"off\",\n      \"no-undefined\": \"off\",\n      \"no-useless-assignment\": \"off\",\n      \"object-shorthand\": \"off\",\n      \"one-var\": \"off\",\n      \"prefer-arrow-callback\": \"off\",\n      \"prefer-destructuring\": \"off\",\n      \"prefer-named-capture-group\": \"off\",\n      \"prefer-template\": \"off\",\n      \"require-unicode-regexp\": \"off\",\n      \"sort-imports\": \"off\",\n      \"sort-keys\": \"off\",\n      \"unicorn/better-regex\": \"off\",\n      \"unicorn/consistent-function-scoping\": \"off\",\n      \"unicorn/filename-case\": \"off\",\n      \"unicorn/no-array-callback-reference\": \"off\",\n      \"unicorn/no-keyword-prefix\": \"off\",\n      \"unicorn/no-new-array\": \"off\",\n      \"unicorn/no-null\": \"off\",\n      \"unicorn/no-useless-undefined\": \"off\",\n      \"unicorn/prefer-at\": \"off\",\n      \"unicorn/prefer-string-raw\": \"off\",\n      \"unicorn/prefer-string-replace-all\": \"off\",\n      \"unicorn/prefer-string-slice\": \"off\",\n      \"unicorn/prefer-switch\": \"off\",\n      \"unicorn/prevent-abbreviations\": \"off\",\n      \"unicorn/switch-case-braces\": [ \"error\", \"avoid\" ],\n      \"vars-on-top\": \"off\"\n    },\n    \"settings\": {\n      \"jsdoc\": {\n        \"preferredTypes\": {\n          \"object\": \"Object\"\n        }\n      }\n    }\n  },\n  {\n    \"files\": [\n      \"**/*.js\",\n      \"**/*.cjs\"\n    ],\n    \"languageOptions\": {\n      \"sourceType\": \"commonjs\",\n      \"globals\": {\n        \"module\": \"readonly\",\n        \"require\": \"readonly\"\n      }\n    }\n  },\n  {\n    \"files\": [\n      \"demo/default.js\"\n    ],\n    \"languageOptions\": {\n      \"globals\": {\n        \"alert\": \"readonly\",\n        \"document\": \"readonly\",\n        \"navigator\": \"readonly\",\n        \"window\": \"readonly\"\n      }\n    },\n    \"rules\": {\n      \"jsdoc/require-jsdoc\": \"off\",\n      \"n/no-unsupported-features/node-builtins\": \"off\",\n      \"no-invalid-this\": \"off\",\n      \"no-shadow\": \"off\",\n      \"no-var\": \"off\",\n      \"unicorn/prefer-module\": \"off\",\n      \"unicorn/prefer-query-selector\": \"off\"\n    }\n  },\n  {\n    \"files\": [\n      \"example/*.cjs\"\n    ],\n    \"languageOptions\": {\n      \"sourceType\": \"commonjs\"\n    },\n    \"rules\": {\n      \"n/no-missing-require\": \"off\",\n      \"no-console\": \"off\",\n      \"no-invalid-this\": \"off\"\n    }\n  },\n  {\n    \"files\": [\n      \"example/standalone.mjs\"\n    ],\n    \"rules\": {\n      \"no-console\": \"off\",\n      \"no-constant-condition\": \"off\"\n    }\n  },\n  {\n    \"files\": [\n      \"test/rules/**/*.js\",\n      \"test/rules/**/*.cjs\"\n    ],\n    \"languageOptions\": {\n      \"sourceType\": \"commonjs\"\n    },\n    \"rules\": {\n      \"unicorn/prefer-module\": \"off\"\n    }\n  }\n];\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 7.4658203125,
          "content": "{\n  \"name\": \"markdownlint\",\n  \"version\": \"0.37.3\",\n  \"description\": \"A Node.js style checker and lint tool for Markdown/CommonMark files.\",\n  \"type\": \"module\",\n  \"exports\": {\n    \".\": \"./lib/exports.mjs\",\n    \"./async\": \"./lib/exports-async.mjs\",\n    \"./promise\": \"./lib/exports-promise.mjs\",\n    \"./sync\": \"./lib/exports-sync.mjs\",\n    \"./helpers\": \"./helpers/helpers.cjs\",\n    \"./style/all\": \"./style/all.json\",\n    \"./style/cirosantilli\": \"./style/cirosantilli.json\",\n    \"./style/prettier\": \"./style/prettier.json\",\n    \"./style/relaxed\": \"./style/relaxed.json\"\n  },\n  \"imports\": {\n    \"#node-imports\": {\n      \"markdownlint-imports-browser\": \"./lib/node-imports-browser.mjs\",\n      \"markdownlint-imports-node\": \"./lib/node-imports-node.mjs\",\n      \"browser\": \"./lib/node-imports-browser.mjs\",\n      \"default\": \"./lib/node-imports-node.mjs\"\n    }\n  },\n  \"types\": \"./lib/types.d.mts\",\n  \"author\": \"David Anson (https://dlaa.me/)\",\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/DavidAnson/markdownlint\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/DavidAnson/markdownlint.git\"\n  },\n  \"bugs\": \"https://github.com/DavidAnson/markdownlint/issues\",\n  \"funding\": \"https://github.com/sponsors/DavidAnson\",\n  \"scripts\": {\n    \"build-config\": \"npm run build-config-schema && npm run build-config-example\",\n    \"build-config-example\": \"node schema/build-config-example.mjs\",\n    \"build-config-schema\": \"node schema/build-config-schema.mjs\",\n    \"build-declaration\": \"tsc --allowJs --checkJs --declaration --emitDeclarationOnly --module nodenext --outDir dts --rootDir . --target es2015 lib/exports.mjs lib/exports-async.mjs lib/exports-promise.mjs lib/exports-sync.mjs lib/markdownlint.mjs && node scripts/index.mjs copy dts/lib/exports.d.mts lib/exports.d.mts && node scripts/index.mjs copy dts/lib/exports-async.d.mts lib/exports-async.d.mts && node scripts/index.mjs copy dts/lib/exports-promise.d.mts lib/exports-promise.d.mts && node scripts/index.mjs copy dts/lib/exports-sync.d.mts lib/exports-sync.d.mts && node scripts/index.mjs copy dts/lib/markdownlint.d.mts lib/markdownlint.d.mts && node scripts/index.mjs remove dts\",\n    \"build-demo\": \"node scripts/index.mjs copy node_modules/markdown-it/dist/markdown-it.min.js demo/markdown-it.min.js && cd demo && webpack --no-stats\",\n    \"build-docs\": \"node doc-build/build-rules.mjs\",\n    \"build-example\": \"npm install --no-save --ignore-scripts grunt grunt-cli gulp through2\",\n    \"ci\": \"npm-run-all --continue-on-error --parallel lint serial-config-docs serial-declaration-demo test-cover && git diff --exit-code\",\n    \"clone-test-repos-apache-airflow\": \"cd test-repos && git clone https://github.com/apache/airflow apache-airflow --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-dotnet-docs\": \"cd test-repos && git clone https://github.com/dotnet/docs dotnet-docs --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-electron-electron\": \"cd test-repos && git clone https://github.com/electron/electron electron-electron --depth 1 --no-tags --quiet && cd electron-electron && npm install --ignore-scripts @electron/lint-roller typescript@4\",\n    \"clone-test-repos-eslint-eslint\": \"cd test-repos && git clone https://github.com/eslint/eslint eslint-eslint --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-mdn-content\": \"cd test-repos && git clone https://github.com/mdn/content mdn-content --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-mkdocs-mkdocs\": \"cd test-repos && git clone https://github.com/mkdocs/mkdocs mkdocs-mkdocs --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-mochajs-mocha\": \"cd test-repos && git clone https://github.com/mochajs/mocha mochajs-mocha --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-pi-hole-docs\": \"cd test-repos && git clone https://github.com/pi-hole/docs pi-hole-docs --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-v8-v8-dev\": \"cd test-repos && git clone https://github.com/v8/v8.dev v8-v8-dev --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-webhintio-hint\": \"cd test-repos && git clone https://github.com/webhintio/hint webhintio-hint --depth 1 --no-tags --quiet\",\n    \"clone-test-repos-webpack-webpack-js-org\": \"cd test-repos && git clone https://github.com/webpack/webpack.js.org webpack-webpack-js-org --depth 1 --no-tags --quiet\",\n    \"clone-test-repos\": \"mkdir test-repos && cd test-repos && npm run clone-test-repos-apache-airflow && npm run clone-test-repos-dotnet-docs && npm run clone-test-repos-electron-electron && npm run clone-test-repos-eslint-eslint && npm run clone-test-repos-mdn-content && npm run clone-test-repos-mkdocs-mkdocs && npm run clone-test-repos-mochajs-mocha && npm run clone-test-repos-pi-hole-docs && npm run clone-test-repos-v8-v8-dev && npm run clone-test-repos-webhintio-hint && npm run clone-test-repos-webpack-webpack-js-org\",\n    \"declaration\": \"npm run build-declaration && npm run test-declaration\",\n    \"example\": \"cd example && node standalone.mjs && grunt markdownlint --force && gulp markdownlint\",\n    \"lint\": \"eslint --max-warnings 0\",\n    \"lint-test-repos\": \"ava --timeout=10m test/markdownlint-test-repos-*.mjs\",\n    \"serial-config-docs\": \"npm run build-config && npm run build-docs\",\n    \"serial-declaration-demo\": \"npm run build-declaration && npm-run-all --continue-on-error --parallel build-demo test-declaration\",\n    \"test\": \"ava --timeout=30s test/markdownlint-test.mjs test/markdownlint-test-config.mjs test/markdownlint-test-custom-rules.mjs test/markdownlint-test-fixes.mjs test/markdownlint-test-helpers.mjs test/markdownlint-test-micromark.mjs test/markdownlint-test-result-object.mjs test/markdownlint-test-scenarios.mjs helpers/test.cjs\",\n    \"test-cover\": \"c8 --100 npm test\",\n    \"test-declaration\": \"cd example/typescript && tsc --module commonjs && tsc --module nodenext && node type-check.js\",\n    \"test-extra\": \"ava --timeout=10m test/markdownlint-test-extra-parse.mjs test/markdownlint-test-extra-type.mjs\",\n    \"update-snapshots\": \"ava --update-snapshots test/markdownlint-test-custom-rules.mjs test/markdownlint-test-micromark.mjs test/markdownlint-test-scenarios.mjs\",\n    \"update-snapshots-test-repos\": \"ava --timeout=10m --update-snapshots test/markdownlint-test-repos-*.mjs\",\n    \"upgrade\": \"npx --yes npm-check-updates --upgrade\"\n  },\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"dependencies\": {\n    \"markdown-it\": \"14.1.0\",\n    \"micromark\": \"4.0.1\",\n    \"micromark-core-commonmark\": \"2.0.2\",\n    \"micromark-extension-directive\": \"3.0.2\",\n    \"micromark-extension-gfm-autolink-literal\": \"2.1.0\",\n    \"micromark-extension-gfm-footnote\": \"2.1.0\",\n    \"micromark-extension-gfm-table\": \"2.1.0\",\n    \"micromark-extension-math\": \"3.1.0\",\n    \"micromark-util-types\": \"2.0.1\"\n  },\n  \"devDependencies\": {\n    \"@eslint/js\": \"9.17.0\",\n    \"@stylistic/eslint-plugin\": \"2.12.1\",\n    \"ajv\": \"8.17.1\",\n    \"ava\": \"6.2.0\",\n    \"c8\": \"10.1.3\",\n    \"character-entities\": \"2.0.2\",\n    \"eslint\": \"9.17.0\",\n    \"eslint-plugin-jsdoc\": \"50.6.1\",\n    \"eslint-plugin-n\": \"17.15.1\",\n    \"eslint-plugin-regexp\": \"2.7.0\",\n    \"eslint-plugin-unicorn\": \"56.0.1\",\n    \"gemoji\": \"8.1.0\",\n    \"globby\": \"14.0.2\",\n    \"js-yaml\": \"4.1.0\",\n    \"json-schema-to-typescript\": \"15.0.3\",\n    \"jsonc-parser\": \"3.3.1\",\n    \"markdown-it-for-inline\": \"2.0.1\",\n    \"markdown-it-sub\": \"2.0.0\",\n    \"markdown-it-sup\": \"2.0.0\",\n    \"markdownlint-rule-extended-ascii\": \"0.1.0\",\n    \"nano-spawn\": \"0.2.0\",\n    \"npm-run-all\": \"4.1.5\",\n    \"terser-webpack-plugin\": \"5.3.11\",\n    \"toml\": \"3.0.0\",\n    \"typescript\": \"5.7.2\",\n    \"webpack\": \"5.97.1\",\n    \"webpack-cli\": \"6.0.1\"\n  },\n  \"keywords\": [\n    \"markdown\",\n    \"lint\",\n    \"md\",\n    \"CommonMark\",\n    \"markdownlint\"\n  ]\n}\n"
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "style",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}