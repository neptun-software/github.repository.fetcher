{
  "metadata": {
    "timestamp": 1736561610738,
    "page": 161,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "NekR/offline-plugin",
      "stars": 4514,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.541015625,
          "content": "# Test against this version of Node.js\nenvironment:\n  matrix:\n    # node.js\n    - nodejs_version: \"6\"\n    - nodejs_version: \"8\"\n    - nodejs_version: \"10\"\n\n# Install scripts. (runs after repo cloning)\ninstall:\n  # Get the latest stable version of Node.js or io.js\n  - ps: Install-Product node $env:nodejs_version\n  # install modules\n  - npm install\n\n# Post-install test scripts.\ntest_script:\n  # Output useful info for debugging.\n  - node --version\n  - npm --version\n  # run tests\n  - npm test\n\n# Don't actually build.\nbuild: off\n\ncache:\n  - node_modules"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0791015625,
          "content": "node_modules/\n__output/\n/__*\n.DS_Store\n.idea\nnpm-debug.log\n/tests/browser/**/www\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.60546875,
          "content": "sudo: false\nlanguage: node_js\nnode_js:\n  - \"6\"\n  - \"8\"\n  - \"10\"\nenv:\n  - TEST_METHOD=ci_fixtures WEBPACK_VERSION=2\n  - TEST_METHOD=ci_fixtures WEBPACK_VERSION=3\n  # webpack 4.26 switched to terser-webpack-plugin\n  - TEST_METHOD=ci_fixtures WEBPACK_VERSION=4.25\n  # Some later webpack version has different output format than 25 and 26\n  - TEST_METHOD=ci_fixtures WEBPACK_VERSION=4.26\nmatrix:\n  include:\n    - node_js: \"8\"\n      env: TEST_METHOD=ci_browser\nbefore_script:\n  - if [ \"$WEBPACK_VERSION\" ]; then npm i webpack@$WEBPACK_VERSION; fi\nscript: npm run test:\"$TEST_METHOD\"\ncache:\n  directories:\n    - \"node_modules\""
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.2529296875,
          "content": "# CHANGELOG\n\n:information_source: For all later changes, please see https://github.com/NekR/offline-plugin/releases\n\n### 4.8.1\n\n* Fix TypeScript typings\n\n### 4.8.0\n\n* [Internals]: Async `waitUntil` is now a thing (polyfilled)\n* Added `TypeScript` definitions\n* RegExp support in cache paths [#205](https://github.com/NekR/offline-plugin/pull/205)\n* Added `ServiceWorker.minify` option to force to minify [#204](https://github.com/NekR/offline-plugin/pull/204) &  [#206](https://github.com/NekR/offline-plugin/pull/206)\n* Allow ServiceWorker to be installed on any local IP (`127.*.*.*`) [#251](https://github.com/NekR/offline-plugin/pull/251)\n* Ship `ServiceWorker.minify` option which controls if ServiceWorker's code will be minified or not\n\n### 4.7.0\n\n* ServiceWorker can now be registered at `127.0.0.1` [#188](https://github.com/NekR/offline-plugin/pull/188)\n* New `ServiceWorker.navigateFallbackForRedirects` option which is `true` by default (compatibility reasons) [#230](https://github.com/NekR/offline-plugin/pull/230)\n* Fixed new security restriction introduced in browsers regardless navigation requests and redirects [#231](https://github.com/NekR/offline-plugin/issues/231)\n\n### 4.6.2\n\n* Wrap `applicationCache.update()` with `try..catch` #189\n\n### 4.6.1\n\n* Fixed syntax error in `runtime-template.js`\n\n### 4.6.0\n\n* Fixed compatibility with `hard-source-webpack-plugin` #148\n* Added `autoUpdate` option and `runtime.update()` method #169\n\n### 4.5.5\n\n* Fix `request.headers` typo in `validatePrefetch` which was preventing setting custom headers for prefetch requests\n\n### 4.5.4\n\n* Use `compilation.errors` instead of `callback(new Error('...'))` when runtime is missing\n\n### 4.0.0 - 4.5.3\n\n* `relativePaths` is now automatically set to `false` when `publicPath` is used\n* `publicPath` now uses `webpack.config.js`'s `output.publicPath` by default (when not set in `OfflinePlugin` itself)\n* Added `AppCache.output` which is replacement for `AppCache.directory`. The last is deprecated now\n* Added `ServiceWorker.publicPath` and `AppCache.publicPath`\n* Added `:externals:` keyword for caches. When used, keyword is replaced with URLs listed in `externals` option\n* `caches: 'all'` is now equivalent of `caches: { main: [':rest:', ':externals:'] }`. In other words, `externals` URLs are now included in `caches` by default\n* Default options of `offline-plugin` are now exposed as `require('offline-plugin').defaultOptions`\n* `ignoreSearch` isn't applied to assets added with `externals` anymore. i.e. full URLs with `?query` can now be added to the caches\n* Added `responseStrategy` option. Thanks to [@MoOx](https://github.com/MoOx). [#112](https://github.com/NekR/offline-plugin/pull/112)\n* Added `ServiceWorker.cacheName` option. Useful (but very dangerous) when you need to run more than one project on the same domain\n* Make `updateStrategy` default to `'changed'`\n* Added `ServiceWorker.prefetchRequest` option\n* Plugin now outputs its version to generated `ServiceWorker`/`AppCache` files\n* Implemented `cacheMaps` option\n* Made AppCache to not include cross origin URLs by default (because they don't work there on HTTPS). Could be returned back with `AppCache.includeCrossOrigin = true`\n* Dropped Node 0.10, Node 0.12 and IO.js support\n* Updated `minimatch` to 3.*\n* Add AppVeyor CI tests\n\n\n### 3.4.0\n\n* Added `ServiceWorker.navigateFallbackURL` option (see #71)\n* Added warning about development mode in `runtime.js` when used without `OfflinePlugin` in `webpack.config.js` (see #74)\n\n### 3.3.0\n\n* Fixed absolute URLs being prefixed with relative path when `relativePaths: true` is used ([#39](https://github.com/NekR/offline-plugin/issues/39), [#60](https://github.com/NekR/offline-plugin/issues/60))\n* Added `scope` option to ServiceWorker ([#19](https://github.com/NekR/offline-plugin/issues/19)). See [ServiceWorker.register](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register) docs.\n\n### 3.0.0 - 3.2.0\n\n* All assets are now requested cache-bust query parameter (`__uncache=${ Date.now() }`)\n* Assets matching in caches now ignores search (query) path of URLs\n* Rename `scope` option to `publicPath` (`scope` is deprecated now and will produce warnings upon use)\n* Make `publicPath: ''` (empty string) by default\n* Make `relativePaths: true` by default\n* Cache sections `'additional'` and `'optional'` are now allowed only when `updateStrategy` option is set to `'changed'`\n* `changed` is now default `updateStrategy` and `hash` strategy is gone. `offline-plugin` now uses webpack's build hashes to apply `change` update strategy even when generate file names are the same. [Issue 6](https://github.com/NekR/offline-plugin/issues/6). More details about change in docs.\n* Any of `updateStrategy` is now using `version` option for its version tag\n* `version` now is not set by default and returns (when not set, e.g. default) compilation hash for `updateStrategy: 'changed'` and `version` for `updateStrategy: 'all'`\n* `version` now has interpolation value, use `[hash]` to insert compilation hash to your version string\n* `install()` method signature now is `install(options)` (callbacks are removed)\n* Runtime events are not implemented for ServiceWorker (and some for AppCache): `onUpdating`, `onUpdateReady`, `onUpdated`, `onInstalled`.  \n  Example: `runtime.install({ onInstalled: () => ... })`\n* Added `applyUpdate()` method to runtime\n* Absolute URLs can now be specified in `caches` as any other assets (they are required to be marked as `externals`)\n* Added basic test and Travis CI\n\n### 2.2.0\n\n* Disallow pattern matching in `externals`\n\n### 2.1.0\n\n* Allow pattern matching in `externals`\n\n### 2.0.0\n\n* Added `relativePaths` option. When `true`, all generated paths are relative to `ServiceWorker` file or `AppCache` folder. Useful in cases when app isn't in the root of domain, e.g. Github Pages. Setting `scope` to `''` (empty string) is the same now as `relativePaths: true`.\n* Added `excludes` option to exclude assets from caches. Exclusion is global and is performed before any assets added to cache sections.\n* Not specified sections in caches now equals to empty selection. Previously, `:rest:` keyword was added automatically, now isn't.\n* ':rest:' keyword is now handled after all caches sections were handled. Previously it was handled immediately when found.\n* Plugin now throws an error when keyword `:rest:` is used more than once.\n* `ServiceWorker` generation now used Child Compilation instead weird hacks with entry injections.\n\n### 1.3.1\n\nImproved `ServiceWorker` entry generation: use `compilation.namedChunks` instead of `compilation.assets` to access service-entry and replace it. See #10 for more details.\n\n### 1.3\n\nAdded `FALLBACK` back section for `AppCache` and fixed generation of a `NETWORK` section.\n\n### 1.2\n\nRemove support of multi-stage caching from `AppCache`. Reason is that files cached in second manifest cannot be accessed from page cached by first one, since `NETWORK` section can only dictate to use _network_ (`*`) or _nothing_ (pretend offline), but not _fallback to browser defaults_. This means that any attempt to access files of second manifest goes to the network or fails immediately, instead of reading from cache.\n\n### 1.1\n\nFix `ServiceWorker` login to not cache `additional`'s section assets on `activate` event, instead, cache them without blocking any events. Other `ServiceWorker` logic fixes.\n\n### 1.0\n\nRelease\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1201171875,
          "content": "# Contributing to `offline-plugin`\n_(feel free to ask questions if you struggle anything trying this)_\n\n\n## Choosing a Branch\n\nTypically you want to send your PRs against `master` branch. Other branches such `v3`, `v4`, etc. are used for tracking previous major versions of `offline-plugin` and typically shouldn't be touched.\n\n## Installation / prepare\n\n* `npm install`\n* `npm run install:build-deps`\n\n## Development\n\nProject structure:\n\n* `src/` ES6 source code\n* `lib/` ES5 generated code, shouldn't be touched directly\n* `tpls/` tpls to generate dynamic files, e.g. `offline-plugin/runtime`\n\n\nBefore submitting a PR you have to run `npm run build` to transpile scripts from `src/` to `lib/` (also you can use `npm run watch`). Also make sure to run `npm test` before you perform any changes, to not break other things.\n\nIf you are adding a new feature, make sure to write tests for it\n\n## Writing tests\n\nTests are located in `tests/legacy/fixtures` folder. Right now it's only webpack generated code fixtures, no ServiceWorker tests yet. Just copy most similar to your case test (e.g. `basic`) and adopt it for the new feature.\n\n## Thank you!\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Arthur Stolyar <nekr.fabula@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.3720703125,
          "content": "﻿<div align=\"center\">\n  <a href=\"https://offline-plugin.now.sh/\"><img src=\"https://rawgit.com/NekR/offline-plugin/master/logo/logo.svg\" width=\"120\" alt=\"offline-plugin logo\"></a>\n\n  <h1><code>offline-plugin</code> for webpack</h1>\n\n  <a href=\"#backers\"><img src=\"https://opencollective.com/offline-plugin/backers/badge.svg\" alt=\"backers\" /></a>\n  <a href=\"#sponsors\"><img src=\"https://opencollective.com/offline-plugin/sponsors/badge.svg\" alt=\"sponsors\" /></a>\n  <a href=\"https://www.npmjs.com/package/offline-plugin\"><img src=\"https://img.shields.io/npm/v/offline-plugin.svg?maxAge=3600&v4\" alt=\"npm\"></a>\n  <a href=\"https://www.npmjs.com/package/offline-plugin\"><img src=\"https://img.shields.io/npm/dm/offline-plugin.svg?maxAge=3600\" alt=\"npm\"></a>\n</div>\n<br>\n\nThis plugin is intended to provide an offline experience for **webpack** projects. It uses **ServiceWorker**, and **AppCache** as a fallback under the hood. Simply include this plugin in your ``webpack.config``, and the accompanying runtime in your client script, and your project will become offline ready by caching all (or some) of the webpack output assets.\n\n<div align=\"center\">\n  <h1>Sponsors</h1>\n  \n  <a href=\"https://opencollective.com/offline-plugin/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/0/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/1/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/2/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/3/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/4/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/5/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/6/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/7/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/8/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/9/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/10/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/11/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/12/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/13/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/14/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/15/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/16/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/17/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/18/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/19/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/20/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/21/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/22/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/23/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/24/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/25/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/26/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/27/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/28/avatar.svg\"></a>\n  <a href=\"https://opencollective.com/offline-plugin/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/sponsor/29/avatar.svg\"></a>\n  \n  Become a sponsor and get your logo on our README on Github with a link to your site.<br>\n  <strong><a href=\"https://opencollective.com/offline-plugin#sponsor\">Become a sponsor</a></strong>\n</div>\n\n## Install\n\n`npm install offline-plugin [--save-dev]`\n\n## Setup\n\nFirst, instantiate the plugin in your `webpack.config`:\n\n```js\n// webpack.config.js example\n\nvar OfflinePlugin = require('offline-plugin');\n\nmodule.exports = {\n  // ...\n\n  plugins: [\n    // ... other plugins\n    // it's always better if OfflinePlugin is the last plugin added\n    new OfflinePlugin()\n  ]\n  // ...\n}\n```\n_(and optionally configure with [options](docs/options.md))_  \n\nThen, add the [runtime](docs/runtime.md) into your entry file (typically main entry):\n\n```js\nrequire('offline-plugin/runtime').install();\n```\n\nES6/Babel/TypeScript\n```js\nimport * as OfflinePluginRuntime from 'offline-plugin/runtime';\nOfflinePluginRuntime.install();\n```\n\n> For more details of usage with `TypeScript` see [here](docs/typescript.md)\n\n### `offline-plugin` isn't working?\n\n:information_source: **[Troubleshooting](docs/troubleshooting.md)** | **[FAQ](docs/FAQ.md)**\n\n## Docs\n\n* [Options](docs/options.md)\n* [Caches](docs/caches.md)\n* [Update process](docs/updates.md)\n* [Cache Maps](docs/cache-maps.md)\n* [Runtime API](docs/runtime.md)\n\n## Examples\n\n* [Single Page Application](docs/examples/SPA.md)\n\n## Articles\n\n* [Easy Offline First Apps With Webpack's Offline Plugin](https://dev.to/kayis/easy-offline-first-apps-with-webpacks-offline-plugin)\n* [Handling Client Side App Updates (with Service Workers)](https://zach.codes/handling-client-side-app-updates-with-service-workers/)\n\n## Options\n\nAll options are optional and `offline-plugin` can be used without specifying them.\n\n#### [See all available options here.](docs/options.md)\n\n## Who is using `offline-plugin`\n\n<div align=\"center\">\n  <strong>Demo:<br><a href=\"https://offline-plugin.now.sh/\"> Progressive Web App built with <code>offline-plugin</code></a></strong><br>\n  <div>(<a href=\"https://github.com/NekR/offline-plugin-pwa\"><i>source code</i></a>)</div>\n</div>\n\n### Projects\n\n* [React Boilerplate](https://github.com/mxstbr/react-boilerplate)\n* [Phenomic](https://phenomic.io)\n* [React, Universally](https://github.com/ctrlplusb/react-universally)\n\n### PWAs\n\n* [`offline-plugin` PWA](https://offline-plugin.now.sh/)\n* [Omroep West](https://m.omroepwest.nl/)\n* [Preact](https://preactjs.com/) ([source](https://github.com/developit/preact-www))\n* [CodePan](https://codepan.net) ([source](https://github.com/egoist/codepan))\n* [Offline Kanban](https://offline-kanban.herokuapp.com) ([source](https://github.com/sarmadsangi/offline-kanban))\n* [Online Board](https://onlineboard.sonnywebdesign.com/) ([source](https://github.com/andreasonny83/online-board))\n* [Fluid Outliner](https://fluid-notion.github.io/fluid-outliner/) ([source](https://github.com/fluid-notion/fluid-outliner))\n\n_If you are using `offline-plugin`, feel free to submit a PR to add your project to this list._\n\n## Like `offline-plugin`?\n\nSupport it by giving [feedback](https://github.com/NekR/offline-plugin/issues), [contributing](CONTRIBUTING.md), becoming a [backer/sponsor](https://opencollective.com/offline-plugin) or just by 🌟 starring the project!\n\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/offline-plugin#backer)]\n\n<a href=\"https://opencollective.com/offline-plugin/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/offline-plugin/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/offline-plugin/backer/29/avatar.svg\"></a>\n\n## Contribution\n\nSee [CONTRIBUTING](CONTRIBUTING.md)\n\n## License\n\n[MIT](LICENSE.md)  \n[Logo](logo/LICENSE.md)\n\n## CHANGELOG\n\n[CHANGELOG](CHANGELOG.md)\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 1.701171875,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Offline Plugin for Webpack</title>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/docute@4/dist/docute.css\">\n</head>\n<body>\n  <div id=\"docute\"></div>\n  <script src=\"https://unpkg.com/docute@4/dist/docute.js\"></script>\n  <script>\n  new Docute({\n    target: '#docute',\n    highlight: ['typescript'],\n    editLinkBase: 'https://github.com/NekR/offline-plugin/tree/master',\n    nav: [\n      {\n        title: 'Home',\n        link: '/'\n      },\n      {\n        title: 'GitHub',\n        link: 'https://github.com/NekR/offline-plugin'\n      }\n    ],\n    sidebar: [\n      {\n        title: 'Guide',\n        links: [\n          {\n            title: 'Options',\n            link: '/docs/options'\n          },\n          {\n            title: 'Caches',\n            link: '/docs/caches'\n          },\n          {\n            title: 'Update Process',\n            link: '/docs/updates',\n          },\n          {\n            title: 'Runtime API',\n            link: '/docs/runtime',\n          },\n          {\n            title: 'TypeScript',\n            link: '/docs/typescript',\n          },\n        ]\n      },\n      {\n        title: 'Examples',\n        links: [\n          {\n            title: 'SPA',\n            link: '/docs/examples/SPA'\n          }\n        ]\n      },\n      {\n        title: 'Misc',\n        links: [\n          {\n            title: 'Troubleshooting',\n            link: '/docs/troubleshooting'\n          },\n          {\n            title: 'FAQ',\n            link: '/docs/faq'\n          }\n        ]\n      }\n    ]\n  })\n  </script>\n</body>\n</html>"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.0947265625,
          "content": "{\n  \"name\": \"offline-plugin\",\n  \"version\": \"5.0.7\",\n  \"description\": \"offline-plugin for webpack\",\n  \"main\": \"lib/index.js\",\n  \"files\": [\n    \"lib/\",\n    \"tpls/\",\n    \"runtime.js\",\n    \"runtime.d.ts\"\n  ],\n  \"scripts\": {\n    \"test\": \"npm run test:fixtures\",\n    \"test:browser\": \"node tests/run-browser-tests.js\",\n    \"test:fixtures\": \"node tests/legacy/run && eslint -c configs/eslint.tests.json tests/legacy/fixtures\",\n    \"test:fixtures:fix\": \"node tests/legacy/run --fix\",\n    \"test:ci_fixtures\": \"npm run test:fixtures\",\n    \"test:ci_browser\": \"npm run install:browser-tests && npm run test:browser\",\n    \"test:ci_all\": \"npm run test:ci_fixtures && npm run test:ci_browser\",\n    \"build\": \"./node_modules/.bin/babel src/ -d lib/\",\n    \"watch\": \"npm run build -- --watch\",\n    \"install:build-deps\": \"node build/install-build-deps.js\",\n    \"install:browser-tests\": \"node build/install-browser-tests.js\",\n    \"tag\": \"git push && git push --tags\",\n    \"publish:latest\": \"npm publish\",\n    \"publish:next\": \"npm publish --tag=next\",\n    \"release:latest:patch\": \"npm version patch -m '[ci skip] Release %s' && npm run tag && npm run publish:latest\",\n    \"release:latest:minor\": \"npm version minor -m '[ci skip] Release %s' && npm run tag && npm run publish:latest\",\n    \"release:latest:major\": \"npm version major -m '[ci skip] Release %s' && npm run tag && npm run publish:latest\",\n    \"release:next:patch\": \"npm --no-git-tag-version version prepatch && npm run publish:next\",\n    \"release:next:minor\": \"npm --no-git-tag-version version preminor && npm run publish:next\",\n    \"release:next:major\": \"npm --no-git-tag-version version premajor && npm run publish:next\",\n    \"release:next:update\": \"npm --no-git-tag-version version prerelease && npm run publish:next\"\n  },\n  \"collective\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/offline-plugin\",\n    \"logo\": \"https://opencollective.com/offline-plugin/logo.txt?variant=binary&reverse=true\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/NekR/offline-plugin.git\"\n  },\n  \"author\": \"Arthur Stolyar <nekr.fabula@gmail.com>\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"deep-extend\": \"^0.5.1\",\n    \"ejs\": \"^2.3.4\",\n    \"loader-utils\": \"0.2.x\",\n    \"minimatch\": \"^3.0.3\",\n    \"slash\": \"^1.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/NekR/offline-plugin/issues\"\n  },\n  \"homepage\": \"https://github.com/NekR/offline-plugin\",\n  \"keywords\": [\n    \"webpack\",\n    \"plugin\",\n    \"offline\",\n    \"cache\",\n    \"caching\",\n    \"storage\",\n    \"service-worker\",\n    \"serviceworker\",\n    \"appcache\",\n    \"application cache\",\n    \"pwa\",\n    \"progressive web apps\",\n    \"app-shell\",\n    \"appshell\"\n  ],\n  \"devDependencies\": {\n    \"babel-eslint\": \"^9.0.0\",\n    \"chalk\": \"^1.1.3\",\n    \"cli-highlight\": \"^1.1.4\",\n    \"copy-webpack-plugin\": \"^4.2.0\",\n    \"del\": \"^2.2.2\",\n    \"diff\": \"^3.0.1\",\n    \"dir-compare\": \"^1.1.0\",\n    \"eslint\": \"^5.5.0\",\n    \"express\": \"^4.16.2\",\n    \"fs-extra\": \"^5.0.0\",\n    \"glob\": \"^7.1.2\",\n    \"mocha\": \"^4.0.1\",\n    \"webpack\": \"4.26.x\"\n  },\n  \"buildDependencies\": {\n    \"babel\": \"^5.8.38\"\n  },\n  \"testsBrowserDependencies\": {\n    \"puppeteer\": \"^1.1.1\"\n  }\n}\n"
        },
        {
          "name": "runtime.d.ts",
          "type": "blob",
          "size": 1.775390625,
          "content": "export interface InstallOptions {\n  /**\n   * Event called exactly once when ServiceWorker or AppCache is installed.\n   * Can be useful to display \"App is ready for offline usage\" message.\n   *\n   * @memberOf InstallOptions\n   */\n  onInstalled?: () => void;\n\n  /**\n   * Not supported for AppCache.\n   * Event called when update is found and browsers started updating process.\n   * At this moment, some assets are downloading.\n   *\n   * @memberOf InstallOptions\n   */\n  onUpdating?: () => void;\n\n  /**\n   * Event called when onUpdating phase finished.\n   * All required assets are downloaded at this moment and are ready to be updated.\n   * Call runtime.applyUpdate() to apply update.\n   *\n   * @memberOf InstallOptions\n   */\n  onUpdateReady?: () => void;\n\n  /**\n   * Event called when upUpdating phase failed by some reason.\n   * Nothing is downloaded at this moment and current update process\n   * in your code should be canceled or ignored.\n   *\n   * @memberOf InstallOptions\n   */\n  onUpdateFailed?: () => void;\n\n  /**\n   * Event called when update is applied,\n   * either by calling runtime.applyUpdate() or\n   * some other way by a browser itself.\n   *\n   * @memberOf InstallOptions\n   */\n  onUpdated?: () => void;\n}\n\n/**\n * Starts installation flow for ServiceWorker/AppCache\n * it's safe and must be called each time your page loads\n * (i.e. do not wrap it into any conditions).\n *\n * @param {InstallOptions} [options] The install options.\n *\n * @memberOf RuntimeStatic\n */\nexport function install(options?: InstallOptions): void;\n\n/**\n * Used to apply update for existing installation.\n * See InstallOptions.\n *\n * @memberOf RuntimeStatic\n */\nexport function applyUpdate(): void;\n\n/**\n * Performs check for updates of new ServiceWorker/AppCache.\n *\n * @memberOf RuntimeStatic\n */\nexport function update(): void;"
        },
        {
          "name": "runtime.js",
          "type": "blob",
          "size": 0.3701171875,
          "content": "var warn = \"offline-plugin: runtime was installed without OfflinePlugin being added to the webpack.config.js. See https://goo.gl/2Ca7NO for details.\";\n\nif (window.console) {\n  if (console.info) {\n    console.info(warn);\n  } else if (console.log) {\n    console.log(warn);\n  }\n}\n\nexports.install = function() {};\nexports.applyUpdate = function() {};\nexports.update = function() {};"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tpls",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}