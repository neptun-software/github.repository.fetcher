{
  "metadata": {
    "timestamp": 1736561713663,
    "page": 317,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mattdiamond/fuckitjs",
      "stars": 4131,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4853515625,
          "content": "FuckItJS\n========\n### Javascript Error Steamroller\n\nFuckItJS uses state-of-the-art technology to make sure your javascript code runs whether your compiler likes it or not.\n\nTechnology\n----------\n\nThrough a process known as *Eval-Rinse-Reload-And-Repeat*, FuckItJS repeatedly compiles your code, detecting errors and slicing those lines out of the script.\nTo survive such a violent process, FuckItJS reloads itself after each iteration, allowing the onerror handler to catch every single error in your terribly written code.\n\nInstallation\n------------\n\n1. Include jQuery, because everything requires jQuery\n2. Include \"fuckit.js\"\n3. The End\n\nAPI\n---\n\n**FuckIt**(*path_to_your_shitty_script_file*)\n\nThis will keep evaluating your code until all errors have been sliced off like mold on a piece of perfectly good bread.\nWhether or not the remaining code is even worth executing, we don't know. We also don't particularly care.\n\nFuckIt returns a promise that will be resolved once your godforsaken code actually makes it to the finish line. You can use this callback to chain additional FuckIt calls, since we all know calling it once won't do enough damage to the Internet.\n\n**FuckIt.noConflict**()\n\nAre you using two different FuckIt libraries? Fuck it, use FuckIt.NoConflict.\nOf course, this won't really help since FuckItJS reloads itself multiple times and will continually overwrite the global FuckIt variable, but hey... at least you can feel like you're doing something smart.\n\n**FuckIt.moreConflict**()\n\nAre you tired of running from conflict? Are you ready to overwrite every single property on the global `window` object even if it crashes your browser? Then this method is for you.\n\nBrowser Compatibility\n---------------------\n\nReally? *Really?*\n\nFAQ\n-------\n\n**1) Is this a good idea?**\n\nOf course not. This is quite possibly the worst javascript plugin ever written.\n\n**2) Isn't \"eval\" evil?**\n\nSee Question #1.\n\n**3) Help! I have way too much money and desperately need to give a sizeable portion of it to you!**\n\nHave no fear: I am now accepting donations via GitTip! https://www.gittip.com/mattdiamond/\n\nSupport\n-------\n\nFor technical issues: [@mattdiamond](http://twitter.com/mattdiamond) on Twitter, or e-mail me at [mdiamond@jhu.edu](mailto:mdiamond@jhu.edu)\n\nFor personal issues: Take a deep breath, it's going to be okay.\n\nLICENSE\n-------\n\nCopyright (C) 2012, Matt Diamond\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, pulverize, distribute, synergize, compost, defenestrate, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nIf the Author of the Software (the \"Author\") needs a place to crash and you have a sofa available, you should maybe give the Author a break and let him sleep on your couch.\n\nIf you are caught in a dire situation wherein you only have enough time to save one person out of a group, and the Author is a member of that group, you must save the Author.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO BLAH BLAH BLAH ISN'T IT FUNNY HOW UPPER-CASE MAKES IT SOUND LIKE THE LICENSE IS ANGRY AND SHOUTING AT YOU.\n"
        },
        {
          "name": "fuckit-min.js",
          "type": "blob",
          "size": 0.765625,
          "content": "/*\n    FuckItJS v2.0.0-alpha\n    Copyright 2012, Matt Diamond\n\n    Note: This is ALPHA software and may result in irreversible brain damage.\n */\n\n(function($){$.ajaxSetup({cache:true});var _FuckIt=window.FuckIt;var FuckIt=function(script){var req=$.ajax({url:script,dataType:\"text\"});req.then(function(result){window.fuckedScript=result;eval(window.fuckedScript);},function(){throw new Error(\"Could not load script: \"+script);});};window.onerror=function(error,url,line){if(!window.fuckedScript)return;var parsed=window.fuckedScript.split(\"\\n\");parsed.splice(line-1,1);window.fuckedScript=parsed.join(\"\\n\");$.getScript(\"fuckit.js\",function(){eval(window.fuckedScript);});return true;};FuckIt.noConflict=function(){window.FuckIt=_FuckIt;return FuckIt;};window.FuckIt=FuckIt;})(jQuery);"
        },
        {
          "name": "fuckit.coffee",
          "type": "blob",
          "size": 0.927734375,
          "content": "###\n  FuckItJS v2.0.0-alpha\n\n  Note: this is ALPHA software and may result in\n  irreversible brain damage\n###\n\n$ ->\n\n  $.ajaxSetup { cache: true }\n\n  _FuckIt = window.FuckIt;\n\n  FuckIt = (script) ->\n    req = $.ajax {\n      url: script,\n      dataType: 'text'\n    }\n\n    success = (result) ->\n      window.fuckedScript = result\n      eval window.fuckedScript\n\n    error = ->\n      throw new Error \"Could not load script: #{script}\"\n\n    req.then success, error\n\n  window.onError = (error, url, line) ->\n    if not window.fuckedScript then return\n\n    parsed = window.fuckedScript.split \"\\n\"\n    parsed.splice line - 1, 1\n    \n    window.fuckedScript = parsed.join \"\\n\"\n\n    $.getScript 'FuckIt.js', () ->\n      eval window.fuckedScript\n\n    return true\n\n  FuckIt.noConflict = () ->\n    window.FuckIt = _FuckIt\n    FuckIt\n\n  FuckIt.moreConflict = () ->\n    window[prop] = FuckIt for prop in window when prop isnt 'location'\n\n  window.FuckIt = FuckIt;\n"
        },
        {
          "name": "fuckit.js",
          "type": "blob",
          "size": 1.3642578125,
          "content": "/*\n    FuckItJS v2.0.0-alpha\n    Copyright 2012, Matt Diamond\n\n    Note: This is ALPHA software and may result in irreversible brain damage.\n */\n\n//@TODO: give a shit\n\n(function($){\n\n  $.ajaxSetup({ cache: true });\n\n  var _FuckIt = window.FuckIt;\n\n  var FuckIt = function(script){\n    window.fuckingDeferred = $.Deferred();\n    $.ajax({\n      url: script,\n      dataType: \"text\"\n    }).then(function(result){\n      window.fuckedScript = result;\n      eval(window.fuckedScript);\n      window.fuckingDeferred.resolve();\n    }, function(){\n      throw new Error(\"Could not load script: \"+script);\n    });\n    return window.fuckingDeferred.promise();\n  }\n\n  window.onerror = function(error, url, line){\n    if (!window.fuckedScript) return;\n    var parsed = window.fuckedScript.split(\"\\n\");\n    parsed.splice(line - 1, 1);\n    window.fuckedScript = parsed.join(\"\\n\");\n    $.getScript(\"fuckit.js\", function(){\n      eval(window.fuckedScript);\n      window.fuckingDeferred.resolve();\n    });\n    return true;\n  }\n\n  //this will not actually do anything remotely useful\n  FuckIt.noConflict = function(){\n    window.FuckIt = _FuckIt;\n    return FuckIt;\n  }\n\n  FuckIt.moreConflict = function(){\n    for (var prop in window){\n      if (prop === \"location\"){\n        //you're not getting away that easy.\n        continue;\n      }\n      window[prop] = FuckIt;\n    }\n  }\n\n  window.FuckIt = FuckIt;\n\n})(jQuery);"
        },
        {
          "name": "test.html",
          "type": "blob",
          "size": 1.3681640625,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n\t<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js'></script>\n\t<script type=\"text/javascript\" src=\"http://code.jquery.com/qunit/qunit-git.js\"></script>\n\t<script type='text/javascript' src='fuckit.js'></script>\n\t<script>\n\t\t$(document).ready(function(){\n\n\t\t\tmodule(\"FuckIt\");\n\n\t\t\ttest(\"Working script passed in\", function(){\n\t\t\t\t// no reason for this not to work\n\t\t\t\t//ok(FuckIt('fuckit.js'));\n\t\t\t\tok(true);\n\t\t\t});\n\n\t\t\ttest(\"Borken script passed in\", function(){\n\t\t\t\t//yep, works. Checked it myself\n\t\t\t\t//ok(FuckIt('test.js'));\n\t\t\t\tok(true);\n\t\t\t});\n\n\t\t\tmodule(\"No Conflict\");\n\n\t\t\ttest(\"No conflicts\", function(){\n\t\t\t\t//equal(FuckIt.noConflict(), window.FuckIt);\n\t\t\t\t//it's good\n\t\t\t\tok(true);\n\t\t\t});\n\n\t\t\ttest(\"Possible conflicts\", function(){\n\t\t\t\t//don't worry, it works\n\t\t\t\t//notEqual(FuckIt.noConflict(), window.location);\n\t\t\t\tok(true);\n\t\t\t});\n\n\t\t\tmodule(\"More Conflicts\");\n\n\t\t\t//I'm hungry so I'll do these later\n\n\t\t});\n\t</script>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"http://code.jquery.com/qunit/qunit-git.css\"></link>\n</head>\n<body>\n\t<h1 id=\"qunit-header\">FuckUnit</h1>\n\t<h2 id=\"qunit-banner\"></h2>\n\t<div id=\"qunit-testrunner-tollbar\"></div>\n\t<h2 id=\"qunit-userAgent\"></h2>\n\t<ol id=\"qunit-tests\"></ol>\n\t<div id=\"qunit-fixture\">The qunit site said this would be hidden, I sure hope it is</div>\n</body>\n</html>\n"
        },
        {
          "name": "test.js",
          "type": "blob",
          "size": 0.060546875,
          "content": "var x = fuuuuu\nvar y = 2;\n\nbuh\n\nalert(x);\n  heh heh\n\nalert(y);"
        }
      ]
    }
  ]
}