{
  "metadata": {
    "timestamp": 1736562039416,
    "page": 791,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "json-schema-faker/json-schema-faker",
      "stars": 3310,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.361328125,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.js]\ntrim_trailing_whitespace = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ninsert_final_newline = true\n\n[{Makefile,todo}]\nindent_style = tab\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "src/web\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 1.1865234375,
          "content": "{\n  \"env\": {\n    \"es6\": true,\n    \"browser\": true\n  },\n  \"extends\": \"airbnb-base\",\n  \"plugins\": [\n    \"svelte3\"\n  ],\n  \"overrides\": [\n    {\n      \"files\": [\"*.svelte\"],\n      \"processor\": \"svelte3/svelte3\"\n    }\n  ],\n  \"parserOptions\": {\n    \"ecmaVersion\": 2021,\n    \"sourceType\": \"module\"\n  },\n  \"rules\" : {\n    \"max-len\": [\"error\", {\n      \"code\": 150\n    }],\n    \"arrow-parens\": [\"error\", \"as-needed\"],\n    \"indent\": 0,\n    \"strict\": 0,\n    \"prefer-const\": 0,\n    \"no-console\": 0,\n    \"no-labels\": 0,\n    \"no-unused-labels\": 0,\n    \"no-restricted-syntax\": 0,\n    \"no-multi-assign\": 0,\n    \"prefer-destructuring\": 0,\n    \"function-paren-newline\": 0,\n    \"global-require\": 0,\n    \"prefer-spread\": 0,\n    \"prefer-rest-params\": 0,\n    \"prefer-arrow-callback\": 0,\n    \"arrow-body-style\": 0,\n    \"object-curly-newline\": 0,\n    \"no-restricted-globals\": 0,\n    \"consistent-return\": 0,\n    \"no-param-reassign\": 0,\n    \"no-underscore-dangle\": 0,\n    \"no-multiple-empty-lines\": 0,\n    \"import/first\": 0,\n    \"import/extensions\": 0,\n    \"import/no-unresolved\": 0,\n    \"import/no-dynamic-require\": 0,\n    \"import/no-mutable-exports\": 0,\n    \"import/no-extraneous-dependencies\": 0,\n    \"import/prefer-default-export\": 0\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0712890625,
          "content": "lib/** -diff\ndist/** -diff binary\nlocale/* -diff\npackage-lock.json -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.296875,
          "content": ".env\n\n# IDEs\n.idea\n.vscode\ncache.json\n\n*~\n*.log\n*.tgz\n*.todo\n.nyc_output\n.DS_Store\ndist\nbuild\ncoverage\ngenerated\nnode_modules\npackage-lock.json\n\n### Vim ###\n# swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-v][a-z]\n[._]sw[a-p]\n# session\nSession.vim\n# temporary\n.netrwhist\n*~\n# auto-generated tag files\ntags\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.150390625,
          "content": ".*\n*~\n*.log\n*.tgz\n*.json\n.DS_Store\nbuild-dist.js\nbower.json\ntslint.json\n/ts\n/docs\n/spec\n/build\n/package\n/reports\n/coverage\n/generated\n/node_modules\n/logo\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 4.62890625,
          "content": "v0.5.0-rc16\n  date: 2018-10-01\n  changes:\n    - Upgrade build scripts\n    - Dropped cleanup() calls\n    - Dropped TypeScript from sources\n    - Fixed several fixes and added new options\n    - Deprecate `jsf()` calls, use `jsf.generate()`\n    - Add support for `$id` and `const` keywords\n    - Add few common formats from draft-06\nv0.5.0-rc15\n  date: 2018-04-07\n  changes:\n    - Introduced option: \"optionalsProbability\".\nv0.5.0-rc1\n  date: 2017-04-10\n  changes:\n    - Improve dist and sources; see #133\n    - Drop external generators' dependencies; see #164\n    - Use ES6 module syntax w/ Rollup for better bundles\n    - Try custom formats before built-in ones; fix #88\n    - Avoid extreme future dates for built-in datetime format; fix #180\n    - Apply common constraints, see #153\n    - Normalize general strategy for custom generators; see #251\n    - Rewrite container for handling keywords; fix #169\n    - Hack thunk() method for picking random oneOf/anyOf values; see #239\n    - Fast clean(); fixing prune strategy, see #238 #232 #227 #243\n    - Allow generation of numbers with fractional part. (#249)\n    - Allow for a fallback if format is not recognized. (#250)\n    - Use json-schema-ref-parser for dereferencing\nv0.4.0\n  date: ?\n  changes:\n    - dropped support for node.js: 0.10, 0.12, io.js\n    - added support for node.js: 5, 6, 7\nv0.3.7\n  date: 2016-10-31\n  changes:\n    - falsy defaults bugfix (thx to @AndreSteenveld)\n    - allow setting a maxLength and maxItems to limit generation\n    - improved number/object generation compliance with JSON Schema spec\n    - apply suggested max traversal depth implementation\nv0.3.6\n  date: 2016-08-01\n  changes:\n    - typecast to string bug fixed\nv0.3.5\n  date: 2016-08-01\n  changes:\n    - non-required attributes missing in objects bug fixed\n    - force typecast when external generator returns unexpected value\n    - unit tests added\n    - schema tests added\n    - dependency update\nv0.3.2\n  date: ?\n  changes:\n    - unit tests added\nv0.3.1\n  date: 2016-04-15\n  changes:\n    - several bugfixes\n    - brief architecture overview added\nv0.3.0\n  date: 2016-04-07\n  changes:\n    - codebase migrated to TypeScript\n    - huge refactoring\n    - inline code docs + module separation\nv0.2.16\n  date: 2016-04-06\n  changes:\n    - minor bugfixes\n    - dependency update\nv0.2.15\n  date: 2016-03-22\n  changes:\n    - faker.js 3.1.0 version bump\nv0.2.14\n  date: 2016-03-22\n  changes:\n    - support for faker.js 3.1.0\nv0.2.13\n  date: 2016-03-21\n  changes:\n    - quick-fix after 0.2.12 - rolling back faker & chance optional dependencies\nv0.2.12\n  date: 2016-03-21\n  changes:\n    - inline code docs + module separation\n    - lowering semver version range for faker.js and chance.js\nv0.2.11:\n  date: 2016-02-13\n  changes:\n    - dependency update\nv0.2.10:\n  date: 2016-02-04\n  changes:\n    - fixed faker/chance as dependencies (before next minor version)\nv0.2.9:\n  date: 2016-02-04\n  changes:\n    - jsf added to cdnjs (with locales)\n    - switching from grunt-parts to npm-scripts\n    - solve issues related with: recursion, bundling and dependencies\nv0.2.8:\n  date: 2016-01-29\n  changes:\n    - exporting `jsf` object inside distribution files\nv0.2.7:\n  date: 2016-01-28\n  changes:\n    - distribution files added (browserify)\nv0.2.6:\n  date: 2015-12-30\n  changes:\n    - dependency update\nv0.2.5:\n  date: 2015-11-26\n  changes:\n    - mixins should be arrays\nv0.2.4:\n  date: 2015-11-25\n  changes:\n    - Call reduce() on each resolved reference\nv0.2.3:\n  date: 2015-11-25\n  changes:\n    - references fixes\n    - minor fixes\nv0.2.2:\n  date: 2015-10-09\n  changes:\n    - linting\n    - dereferencing update\nv0.2.1:\n  date: 2015-09-12\n  changes:\n    - docs update\n    - logo added\n    - underscores allowed\n    - straight approach to sub-schema containers\n    - inferred types update\nv0.2.0:\n  date: 2015-07-15\n  changes:\n    - docs update\nv0.1.13:\n  date: 2015-06-25\n  changes:\n    - extending chance.js\nv0.1.12:\n  date: 2015-06-11\n  changes:\n    - max issues solved\nv0.1.11:\n  date: 2015-06-08\n  changes:\n    - docs update\n    - test specs\n    - contributing guidelines\n    - inferred types\nv0.1.10:\n  date: 2015-05-21\n  changes:\n    - missing attributes bug-fix\nv0.1.9:\n  date: 2015-05-14\n  changes:\n    - `customize` replaced with `extend`\n    - docs improved\nv0.1.8:\n  date: 2015-05-13\n  changes:\n    - extending jsf dependencies (faker, chance)\n    - max 5 items in array bug fixed\nv0.1.7:\n  date: 2015-05-12\n  changes:\n    - extending jsf dependencies (faker, chance)\n    - contribution guide added, readme extended\nv0.1.6:\n  date: 2015-05-05\nv0.1.5:\n  date: 2015-01-20\nv0.1.4:\n  date: 2015-01-17\nv0.1.3:\n  date: 2014-12-23\nv0.1.2:\n  date: 2014-12-15\nv0.1.1:\n  date: 2014-12-05\nv0.1.0:\n  date: 2014-11-28\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.40234375,
          "content": "   652  Alvaro Cabrera <pateketrueke@gmail.com>\n   165  Tomasz Ducin <tomasz.ducin@gmail.com>\n     4  Nathan Broadbent <ndbroadbent@users.noreply.github.com>\n     4  Jonathan Montane <jonmontane@gmail.com>\n     4  Jeremy Whitlock <jwhitlock@apache.org>\n     2  DrHinke <0xBADBAC0N@users.noreply.github.com>\n     2  Greg Venech <greg.venech@gmail.com>\n     2  Peter Dave Hello <PeterDaveHello@users.noreply.github.com>\n     2  Peter Waldschmidt <peter@waldschmidt.com>\n     2  Arjan van der Leden <arjan.vander.leden@stepup.nl>\n     1  Pavan Kumar Sunkara <pavan.sss1991@gmail.com>\n     1  Raynos <raynos2@gmail.com>\n     1  omerts <omerts3@gmail.com>\n     1  Alex Lockwood <alex.lockwood@gmail.com>\n     1  oprogramador <uomodislesia@gmail.com>\n     1  Andre Steenveld <andre.steenveld@gmail.com>\n     1  Bitdeli Chef <chef@bitdeli.com>\n     1  Bobby Brennan <bobby.brennan@gmail.com>\n     1  C. Corey Capel <corey@capelio.com>\n     1  Clément VILLAIN <choclatefr@gmail.com>\n     1  Everett Griffiths <everett@fireproofsocks.com>\n     1  Felipe Cardona <felipe.cardona@chromeriver.com>\n     1  Javier Cejudo <javier@javiercejudo.com>\n     1  Jeremy Pridemore <jeremy.pridemore@gmail.com>\n     1  Jonathan Montane <JonathanMontane@users.noreply.github.com>\n     1  Kyle Fuller <kyle@fuller.li>\n     1  Manuel de la Torre <manuelmhtr@gmail.com>\n     1  Micha Moskovic <michamos@gmail.com>\n     1  Máté Farkas <mate.farkas@balabit.com>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2021 Alvaro Cabrera\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.0849609375,
          "content": "# current working directory\nPWD=$(shell pwd)\n\n# defaults\nsrc := dist\ntarget := gh-pages\nmessage := Release: $(shell date)\n\n# environment vars\nPORT ?= 8080\nNODE_ENV ?= development\nVERSION ?= $(shell cat package.json | jq .version | xargs)\n\nifneq ($(wildcard .env),)\ninclude .env\nendif\n\n# export vars\n.EXPORT_ALL_VARIABLES:\n\n# targets\n.PHONY: ? deps purge web clean deploy\n\n# utils\ndefine iif\n\t@(($(1) > /dev/null 2>&1) && printf \"\\r* $(2)\\n\") || printf \"\\r* $(3)\\n\"\nendef\n\n# display all targets-with-help in this file\n?: Makefile\n\t@awk -F':.*?##' '/^[a-z\\\\%!:-]+:.*##/{gsub(\"%\",\"*\",$$1);gsub(\"\\\\\\\\\",\":*\",$$1);printf \"\\033[36m%8s\\033[0m %s\\n\",$$1,$$2}' $<\n\nci: clean deps\n\t@npm test\n\t@npm run test:e2e\n\t@npm run test:integration\nifneq ($(CI),)\n\t@npm run codecov\nendif\n\nlib: deps ## Build library output only\n\t@npm run build -- -fymain -yshared\n\ndev: deps ## Watch and start development server\n\t@npm run watch\n\ntest: deps ## Run tests like if we're in CI ;-)\n\t@npm run test:schema\n\nbuild: deps ## Build scripts for dist\n\t@npm run build\n\nwatch: deps ## Build scripts for dist\n\t@npm run build -- -xweb --watch\n\nweb: deps ## Build artifact for production envs\n\t@(git worktree remove $(src) --force > /dev/null 2>&1) || true\n\t@git worktree add $(src) $(target)\n\t@cd $(src) && rm -rf *\n\t@cp -r public/* $(src)\n\t@npm run build\n\nclean: ## Remove cache and generated artifacts\n\t@$(call iif,rm -r $(src),Built artifacts were deleted,Artifacts already deleted)\n\t@$(call iif,unlink cache.json,Cache file was deleted,Cache file already deleted)\n\ndeploy: ## Push built artifacts to github!\n\t@cd $(src) && rm -rf js/lib lib\n\t@cd $(src) && git add . && git commit -m \"$(message)\"\n\t@git push origin $(target) -f\n\ndeps: ## Check for installed dependencies\n\t@(((ls node_modules | grep .) > /dev/null 2>&1) || npm i) || true\n\nprune: clean ## Remove all from node_modules/*\n\t@printf \"\\r* Removing all dependencies... \"\n\t@rm -rf node_modules/.{bin,cache}\n\t@rm -rf node_modules/*\n\t@echo \"OK\"\n\npublish: clean\n\t@make -s lib\n\nrelease:\nifneq ($(CI),)\n\t@echo '//registry.npmjs.org/:_authToken=$(NODE_AUTH_TOKEN)' > .npmrc\n\t@npm version $(USE_RELEASE_VERSION)\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1376953125,
          "content": "[![JSON Schema Faker logo](logo/JSF_logo.png)](https://github.com/json-schema-faker/json-schema-faker)\n\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=8MXLRJ7QQXGYY)\n[![OpenCollective](https://badgen.net/opencollective/backers/json-schema-faker)](https://opencollective.com/json-schema-faker)\n[![Build status](https://github.com/json-schema-faker/json-schema-faker/actions/workflows/testing.yml/badge.svg)](https://github.com/json-schema-faker/json-schema-faker/actions)\n[![NPM version](https://badge.fury.io/js/json-schema-faker.svg)](http://badge.fury.io/js/json-schema-faker)\n[![Coverage Status](https://codecov.io/github/json-schema-faker/json-schema-faker/coverage.svg?branch=master)](https://codecov.io/github/json-schema-faker/json-schema-faker?branch=master)\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/json-schema-faker/Lobby)\n\n[![Inline docs](https://inch-ci.org/github/json-schema-faker/json-schema-faker.svg?branch=master)](https://inch-ci.org/github/json-schema-faker/json-schema-faker)\n[![Typedoc](https://img.shields.io/badge/typedoc-provided-blue.svg)](http://json-schema-faker.github.io/json-schema-faker/)\n[![Known Vulnerabilities](https://snyk.io/test/github/json-schema-faker/json-schema-faker/badge.svg)](https://snyk.io/test/github/json-schema-faker/json-schema-faker)\n\n> Use [JSON Schema](http://json-schema.org/draft-04/json-schema-core.html) along with fake generators to provide consistent and meaningful fake data for your system.\n\n## What's next?\n\nBreaking-changes towards `v0.5.x` API:\n\n- **deprecated** &mdash; You will not longer be able to call `jsf()` and get a fully-dereferenced result. It will just generate given refs and inline ones, nothing else.\n  - `jsf.generate()` is the sync-version, with partial dereferencing through given refs, etc.\n  - `jsf.resolve()` is the async-version, with full dereferencing, given refs are also supported.\n- **deprecated** &mdash; TypeScript sources are not longer used, however `d.ts` definitions will be updated on time.\n\n> Usage info from README.md was moved to `docs/`, [read more](docs/).\n\n## Contributors\n\n<a href=\"https://github.com/json-schema-faker/json-schema-faker/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=json-schema-faker/json-schema-faker\" />\n</a>\n\n&mdash; **Artwork by [Ajay Karat](http://www.devilsgarage.com/)**\n\n> We are more than happy to welcome new contributors, our project is still being developed, but we need more feedback!\n>\n> Please see our [contribution guide](.github/CONTRIBUTING.md) to learn how.\n\n### We are looking for your help!\n\nWe have a [gitter room](https://gitter.im/json-schema-faker) for this project, if you want to contribute, talk about specific issues from the library, or you need help on json-schema topics just reach out to us!\n\nPlease take a look at [the technical documentation page](docs/).\n\n> If you think `json-schema-faker` is adding value on what you're doing please consider [buying me a coffee](http://ko-fi.com/pateketrueke).\n>\n> Also, you can support the project via [Open Collective](https://opencollective.com/json-schema-faker/donate).\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.d.cts",
          "type": "blob",
          "size": 3.166015625,
          "content": "import type { JsonValue, JsonObject } from 'type-fest';\nimport type { JSONSchema4, JSONSchema6, JSONSchema7 } from 'json-schema';\n\nexport type Schema = JSONSchema4 | JSONSchema6 | JSONSchema7;\n\nexport interface JSONSchemaFakerOptions {\n  defaultInvalidTypeProduct?: boolean;\n  defaultRandExpMax?: number;\n  pruneProperties?: string[];\n  ignoreProperties?: string[];\n  ignoreMissingRefs?: boolean;\n  failOnInvalidTypes?: boolean;\n  failOnInvalidFormat?: boolean;\n  alwaysFakeOptionals?: boolean;\n  optionalsProbability?: number | false;\n  fixedProbabilities?: boolean;\n  useExamplesValue?: boolean;\n  useDefaultValue?: boolean;\n  requiredOnly?: boolean;\n  omitNulls?: boolean;\n  minItems?: number;\n  maxItems?: number;\n  minLength?: number;\n  maxLength?: number;\n  resolveJsonPath?: boolean;\n  reuseProperties?: boolean;\n  sortProperties?: boolean;\n  fillProperties?: boolean;\n  replaceEmptyByRandomValue?: boolean;\n  random?: () => number | number;\n  minDateTime?: Date | string | number;\n  maxDateTime?: Date | string | number;\n  renderTitle?: boolean;\n  renderDescription?: boolean;\n  renderComment?: boolean;\n  refDepthMax?: number;\n  refDepthMin?: number;\n  maxRegexRetry?: number;\n}\n\nexport type JSONSchemaFakerRefs = Schema[] | { [k: string]: Schema };\n\nexport interface JSONSchemaFakerDefine {\n  (value: JsonValue, schema: JsonObject, property: string, rootSchema: Schema, propertyPath: string[]): JsonValue;\n}\n\nexport interface JSONSchemaFakerFormat {\n  (opts: { [k: string]: (value: Schema) => unknown }): void;\n  (name: string, callback: (value: Schema) => unknown): void;\n}\n\ndeclare function JSONSchemaFakerOption(opts: JSONSchemaFakerOptions): void;\ndeclare function JSONSchemaFakerOption(name: keyof JSONSchemaFakerOptions, value: any): void;\ndeclare namespace JSONSchemaFakerOption {\n  var getDefaults: () => JSONSchemaFakerOptions;\n}\n\ntype JSONSchemaFakerObject = {\n  VERSION: string;\n  format: JSONSchemaFakerFormat;\n  option: typeof JSONSchemaFakerOption;\n  generate: (schema: Schema, refs?: JSONSchemaFakerRefs) => JsonValue;\n  generateYAML: (schema: Schema, refs?: JSONSchemaFakerRefs) => string;\n  resolve: (schema: Schema, refs?: JSONSchemaFakerRefs, cwd?: string) => Promise<JsonValue>;\n  resolveYAML: (schema: Schema, refs?: JSONSchemaFakerRefs, cwd?: string) => Promise<string>;\n  random: {\n    date(step?: 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks' | 'months' | 'years'): number | Date;\n    pick(list: any[]): any;\n    shuffle(list: any[]): any[];\n    number(min?: number, max?: number, defMin?: number, defMax?: number, hasPrecision?: boolean): number;\n    randexp(expr: string): string;\n  };\n  extend: (name: string, cb: (generator: any) => any) => typeof JSONSchemaFaker;\n  define: (name: string, cb: JSONSchemaFakerDefine) => typeof JSONSchemaFaker;\n  reset: (name: string) => typeof JSONSchemaFaker;\n  locate: (name: string) => any;\n}\n\nexport declare const JSONSchemaFaker: JSONSchemaFakerObject;\n\n/** @deprecated The default export is deprecated; use the named export. See https://github.com/json-schema-faker/json-schema-faker/blob/master/docs/DEPRECATED.md */\ndeclare const jsf: JSONSchemaFakerObject & {\n  (schema: Schema, refs?: JSONSchemaFakerRefs, cwd?: string): JsonValue \n};\nexport default jsf;\n"
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 3.2001953125,
          "content": "import type { JsonValue, JsonObject } from 'type-fest';\nimport type { JSONSchema4, JSONSchema6, JSONSchema7 } from 'json-schema';\n\nexport type Schema = JSONSchema4 | JSONSchema6 | JSONSchema7;\n\nexport interface JSONSchemaFakerOptions {\n  defaultInvalidTypeProduct?: boolean;\n  defaultRandExpMax?: number;\n  pruneProperties?: string[];\n  ignoreProperties?: string[];\n  ignoreMissingRefs?: boolean;\n  failOnInvalidTypes?: boolean;\n  failOnInvalidFormat?: boolean;\n  alwaysFakeOptionals?: boolean;\n  optionalsProbability?: number | false;\n  fixedProbabilities?: boolean;\n  useExamplesValue?: boolean;\n  useDefaultValue?: boolean;\n  requiredOnly?: boolean;\n  omitNulls?: boolean;\n  minItems?: number;\n  maxItems?: number;\n  minLength?: number;\n  maxLength?: number;\n  resolveJsonPath?: boolean;\n  reuseProperties?: boolean;\n  sortProperties?: boolean;\n  fillProperties?: boolean;\n  replaceEmptyByRandomValue?: boolean;\n  random?: () => number | number;\n  minDateTime?: Date | string | number;\n  maxDateTime?: Date | string | number;\n  renderTitle?: boolean;\n  renderDescription?: boolean;\n  renderComment?: boolean;\n  refDepthMax?: number;\n  refDepthMin?: number;\n  maxRegexRetry?: number;\n}\n\nexport type JSONSchemaFakerRefs = Schema[] | { [k: string]: Schema };\n\nexport interface JSONSchemaFakerDefine {\n  (value: JsonValue, schema: JsonObject, property: string, rootSchema: Schema, propertyPath: string[]): JsonValue;\n}\n\nexport interface JSONSchemaFakerFormat {\n  (opts: { [k: string]: (value: Schema) => unknown }): void;\n  (name: string, callback: (value: Schema) => unknown): void;\n}\n\ndeclare function JSONSchemaFakerOption(opts: JSONSchemaFakerOptions): void;\ndeclare function JSONSchemaFakerOption<K extends keyof JSONSchemaFakerOptions>(name: K, value: JSONSchemaFakerOptions[K]): void;\ndeclare namespace JSONSchemaFakerOption {\n  var getDefaults: () => JSONSchemaFakerOptions;\n}\n\ntype JSONSchemaFakerObject = {\n  VERSION: string;\n  format: JSONSchemaFakerFormat;\n  option: typeof JSONSchemaFakerOption;\n  generate: (schema: Schema, refs?: JSONSchemaFakerRefs) => JsonValue;\n  generateYAML: (schema: Schema, refs?: JSONSchemaFakerRefs) => string;\n  resolve: (schema: Schema, refs?: JSONSchemaFakerRefs, cwd?: string) => Promise<JsonValue>;\n  resolveYAML: (schema: Schema, refs?: JSONSchemaFakerRefs, cwd?: string) => Promise<string>;\n  random: {\n    date(step?: 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks' | 'months' | 'years'): number | Date;\n    pick(list: any[]): any;\n    shuffle(list: any[]): any[];\n    number(min?: number, max?: number, defMin?: number, defMax?: number, hasPrecision?: boolean): number;\n    randexp(expr: string): string;\n  };\n  extend: (name: string, cb: (generator: any) => any) => typeof JSONSchemaFaker;\n  define: (name: string, cb: JSONSchemaFakerDefine) => typeof JSONSchemaFaker;\n  reset: (name: string) => typeof JSONSchemaFaker;\n  locate: (name: string) => any;\n}\n\nexport declare const JSONSchemaFaker: JSONSchemaFakerObject;\n\n/** @deprecated The default export is deprecated; use the named export. See https://github.com/json-schema-faker/json-schema-faker/blob/master/docs/DEPRECATED.md */\ndeclare const jsf: JSONSchemaFakerObject & {\n  (schema: Schema, refs?: JSONSchemaFakerRefs, cwd?: string): JsonValue \n};\nexport default jsf;\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.2822265625,
          "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Vite App</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <script type=\"module\" src=\"/main.js\"></script>\n  </body>\n</html>\n"
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.js",
          "type": "blob",
          "size": 0.1611328125,
          "content": "import { JSONSchemaFaker } from './dist/main.mjs';\n\ndocument.querySelector('#app').innerHTML = `\n  <code>const: ${JSONSchemaFaker.generate({ const: 42 })}</code>\n`;\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.80859375,
          "content": "{\n  \"name\": \"json-schema-faker\",\n  \"version\": \"0.5.8\",\n  \"description\": \"JSON-Schema + fake data generators\",\n  \"homepage\": \"http://json-schema-faker.js.org\",\n  \"types\": \"index.d.ts\",\n  \"type\": \"module\",\n  \"bin\": {\n    \"jsf\": \"bin/gen.cjs\"\n  },\n  \"main\": \"dist/index.cjs\",\n  \"module\": \"dist/main.mjs\",\n  \"unpkg\": \"dist/bundle.js\",\n  \"exports\": {\n    \".\": {\n      \"import\": {\n        \"types\": \"./index.d.ts\",\n        \"default\": \"./dist/main.mjs\"\n      },\n      \"require\": {\n        \"types\": \"./index.d.cts\",\n        \"default\": \"./dist/main.cjs\"\n      },\n      \"browser\": \"./dist/bundle.js\"\n    }\n  },\n  \"scripts\": {\n    \"dev\": \"npm run test:schema -- -w\",\n    \"test\": \"npm run test:ci -- && npm run test:schema\",\n    \"test:e2e\": \"testcafe chrome:headless tests/e2e/*.test.mjs --colors -a 'npx live-server dist/e2e --no-browser' --\",\n    \"test:ci\": \"npm run coverage:unit && npm run report -- -r lcov\",\n    \"test:all\": \"npm run test:unit && npm run test:schema\",\n    \"test:run\": \"_mocha --exit --colors --recursive --parallel --loader=testdouble --watch-files 'tests/**' --watch-files 'src/**' --watch-extensions js,json -bR spec\",\n    \"test:unit\": \"npm run test:run tests/unit --\",\n    \"test:schema\": \"npm run test:run tests/schema --\",\n    \"test:coverage\": \"npm run coverage:all && npm run report -- -r html\",\n    \"test:integration\": \"npm run test:run tests/integration --\",\n    \"coverage\": \"c8 --reporter=lcov -x '**/tests/**' -x '**/*.spec.mjs'\",\n    \"coverage:all\": \"npm run coverage -- npm run test:all\",\n    \"coverage:unit\": \"npm run coverage -- npm run test:unit\",\n    \"report\": \"c8 report\",\n    \"lint\": \"eslint --ext mjs,svelte src tests\",\n    \"_pretest\": \"npm run lint\",\n    \"_graphviz\": \"madge src --dot > structure.gv\",\n    \"mortero\": \"mortero -Ddist -spublic -X{_base,lib} -ecss.less\",\n    \"watch\": \"npm run mortero -- --platform browser -dw\",\n    \"build\": \"NODE_ENV=production npm run mortero -- -fS --no-minify --platform browser\",\n    \"pretest\": \"npm run lint && npm run build -- -ymain -yshared\",\n    \"copy:vendor\": \"concat -o dist/vendor.js node_modules/json-schema-ref-parser/dist/ref-parser.min.js node_modules/jsonpath-plus/dist/index-browser-umd.min.cjs\",\n    \"copy:bundle\": \"concat -o dist/bundle.js dist/vendor.js dist/main.iife.js\",\n    \"copy:wargs\": \"concat -o dist/wargs.cjs node_modules/wargs/dist/wargs.cjs\",\n    \"entry:cjs\": \"node patch.js\",\n    \"postbuild\": \"npm run copy:vendor && npm run entry:cjs && npm run copy:bundle && vite build --outDir dist/e2e\",\n    \"prebuild\": \"mkdir -p dist && npm run copy:wargs\",\n    \"codecov\": \"codecov -e TRAVIS_NODE_VERSION\"\n  },\n  \"mortero\": {\n    \"rename\": [\n      \"**/src/**:{filepath/1}\",\n      \"**/web/**:{filepath/1}\",\n      \"**/*.{cjs,mjs}.js:{filename}\"\n    ],\n    \"bundle\": [\n      \"**/main.*.js\",\n      \"**/shared.js\",\n      \"**/app.js\"\n    ],\n    \"external\": [\n      \"json-schema-ref-parser\",\n      \"jsonpath-plus\"\n    ],\n    \"options\": {\n      \"less\": {\n        \"plugins\": [\n          \"less-plugin-autoprefix\"\n        ]\n      }\n    }\n  },\n  \"author\": \"Alvaro Cabrera <pateketrueke@gmail.com> (https://soypache.co)\",\n  \"contributors\": [\n    \"Ajay Karat <info@devilsgarage.com> (http://devilsgarage.com/)\",\n    \"Tomasz Ducin <tomasz@ducin.it> (http://ducin.it)\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/json-schema-faker/json-schema-faker\"\n  },\n  \"bugs\": \"https://github.com/json-schema-faker/json-schema-faker/issues\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"json\",\n    \"jsonschema\",\n    \"fake\",\n    \"mocks\"\n  ],\n  \"files\": [\n    \"dist/*.*\",\n    \"index.d.ts\"\n  ],\n  \"dependencies\": {\n    \"json-schema-ref-parser\": \"^6.1.0\",\n    \"jsonpath-plus\": \"^10.1.0\"\n  },\n  \"devDependencies\": {\n    \"@faker-js/faker\": \"^7.6.0\",\n    \"@types/json-schema\": \"^7.0.9\",\n    \"ajv\": \"^6.12.6\",\n    \"ansi-regex\": \">=5.0.1\",\n    \"c8\": \"^7.12.0\",\n    \"chai\": \"^4.1.2\",\n    \"chance\": \"^1.0.9\",\n    \"clone\": \"^2.1.2\",\n    \"codecov\": \"^3.8.3\",\n    \"concat\": \"^1.0.3\",\n    \"eslint\": \"^7.27.0\",\n    \"eslint-config-airbnb-base\": \"^14.0.0\",\n    \"eslint-plugin-import\": \"^2.18.2\",\n    \"eslint-plugin-mocha\": \"^9.0.0\",\n    \"eslint-plugin-svelte3\": \"^3.2.0\",\n    \"eslint-utils\": \">=1.4.1\",\n    \"fs-extra\": \"^10.0.0\",\n    \"glob\": \"^7.1.2\",\n    \"glob-parent\": \">=5.1.2\",\n    \"is-my-json-valid\": \"^2.19.0\",\n    \"less\": \"^4.1.1\",\n    \"less-plugin-autoprefix\": \"^2.0.0\",\n    \"live-server\": \"^1.2.2\",\n    \"mocha\": \"^10.0.0\",\n    \"mockjs\": \"^1.1.0\",\n    \"mortero\": \"^0.0.115\",\n    \"nth-check\": \">=2.0.1\",\n    \"pug\": \"^3.0.2\",\n    \"randexp\": \"^0.5.3\",\n    \"seedrandom\": \"^3.0.1\",\n    \"semver\": \"^7.1.1\",\n    \"set-value\": \">=4.0.1\",\n    \"sinon\": \"^11.1.1\",\n    \"sinon-chai\": \"^3.7.0\",\n    \"smoo\": \"^0.0.14\",\n    \"svelte\": \"^3.59.2\",\n    \"testcafe\": \"^3.4.0\",\n    \"testdouble\": \"^3.16.6\",\n    \"tv4\": \"^1.3.0\",\n    \"type-fest\": \"^2.0.0\",\n    \"vite\": \"^5.0.2\",\n    \"wargs\": \"^0.10.0\",\n    \"yaml\": \"^1.10.2\",\n    \"yrv\": \"^0.0.47\",\n    \"z-schema\": \"^5.0.4\"\n  }\n}\n"
        },
        {
          "name": "patch.js",
          "type": "blob",
          "size": 0.6044921875,
          "content": "import { writeFileSync, readFileSync } from 'fs';\n\nlet cjs = readFileSync('dist/main.cjs').toString();\ncjs = cjs.replace(/module\\.exports = Object\\.assign/, '// $&');\n\nwriteFileSync('dist/main.cjs', cjs);\nwriteFileSync('dist/index.cjs', 'module.exports = require(\"./main.cjs\").default;\\n');\n\n// prefix was setting `location` and that caused redirections under browser-like environments\n// if you run this module on a browser-like environment that does not have `location` set it'll fail\n\nlet vendor = readFileSync('dist/vendor.js').toString();\nvendor = `!(()=>{${vendor}})()`;\n\nwriteFileSync('dist/vendor.js', vendor);\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}