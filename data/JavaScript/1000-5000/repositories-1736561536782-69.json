{
  "metadata": {
    "timestamp": 1736561536782,
    "page": 69,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stdlib-js/stdlib",
      "stars": 4781,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 27.7998046875,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2024 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n#/\n# Set the language for subsequent configuration.\n#\n# ## Notes\n#\n# -   `Cpp` applies to both C++ and C.\n#/\nLanguage: Cpp\n\n#/\n# Set the C++ standard.\n#/\nStandard: Auto\n\n#/\n# Enable formatting.\n#/\nDisableFormat: false\n\n#/\n# Set the column limit.\n#\n# ## Notes\n#\n# -   Intentionally set to a large number in order to prevent clang from introducing line breaks except in egregious situations.\n#/\nColumnLimit: 1024\n\n#/\n# Set the tab width.\n#/\nTabWidth: 4\n\n#/\n# Set the indentation width.\n#\n# @example\n# // Good...\n# double foo() {\n#     return 3.0;\n# }\n#\n# @example\n# // Bad...\n# double foo() {\n#   return 3.0;\n# }\n#/\nIndentWidth: 4\n\n#/\n# Always use tab characters for indentation.\n#/\nUseTab: ForIndentation\n\n#/\n# Always use `\\n` for line endings.\n#/\nLineEnding: LF\n\n#/\n# Always insert a newline at the end of a file if a newline is missing.\n#/\nInsertNewlineAtEOF: true\n\n#/\n# Disable horizontal alignment of arguments after an open bracket.\n#\n# @example\n# // Good...\n# someLongFunction( argument1, argument2 );\n#\n# @example\n# // Bad...\n# someLongFunction( argument1,\n#                   argument2 );\n#/\nAlignAfterOpenBracket: false\n\n#/\n# Align fields in an array of structs.\n#\n# @example\n# // Good...\n# struct test demo[] = {\n#    {  1,  2,  3 },\n#    { -1, -2, -3 }\n# }\n#/\nAlignArrayOfStructures: Right\n\n#/\n# Disable aligning consecutive assignments.\n#\n# @example\n# // Good...\n# double foo = 1;\n# float bar = 2;\n#\n# @example\n# // Bad...\n# double foo = 1;\n# float bar  = 2;\n#/\nAlignConsecutiveAssignments:\n  Enabled: false\n\n#/\n# Disable aligning consecutive bit fields.\n#\n# @example\n# // Good...\n# int aaaa: 1;\n# int b: 12;\n# int ccc: 8;\n#\n# @example\n# // Bad...\n# int aaaa : 1;\n# int b    : 12;\n# int ccc  : 8;\n#/\nAlignConsecutiveBitFields:\n  Enabled: false\n\n#/\n# Disable aligning consecutive declarations.\n#\n# @example\n# // Good...\n# double aaaa = 1;\n# float b = 2;\n# int c = 3;\n#\n# @example\n# // Bad...\n# double aaaa = 1;\n# float  b = 2;\n# int    c = 3;\n#/\nAlignConsecutiveDeclarations:\n  Enabled: false\n\n#/\n# Disable aligning consecutive macros.\n#\n# @example\n# // Good...\n# #define SHORT_NAME 1\n# #define LONGER_NAME 2\n# #define foo( x ) ( x * x )\n#\n# @example\n# // Bad...\n# #define SHORT_NAME  1\n# #define LONGER_NAME 2\n# #define foo( x )    ( x * x )\n#/\nAlignConsecutiveMacros:\n  Enabled: false\n\n#/\n# Disable aligning consecutive short case labels.\n#\n# @example\n# // Good...\n# switch ( level ) {\n# case 1: return \"foo\";\n# case 123: return \"bar\";\n# }\n#\n# @example\n# // Bad...\n# switch ( level ) {\n# case 1:   return \"foo\";\n# case 123: return \"bar\";\n# }\n#/\nAlignConsecutiveShortCaseStatements:\n  Enabled: false\n\n#/\n# Disable aligning consecutive TableGen DAGArg operator colons.\n#/\nAlignConsecutiveTableGenBreakingDAGArgColons:\n  Enabled: false\n\n#/\n# Disable aligning consecutive TableGen cond operator colons.\n#/\nAlignConsecutiveTableGenCondOperatorColons:\n  Enabled: false\n\n#/\n# Disable aligning consecutive TableGen definition colons.\n#/\nAlignConsecutiveTableGenDefinitionColons:\n  Enabled: false\n\n#/\n# Align backslashes in escaped newlines with the right-most column.\n#\n# @example\n# // Good...\n# #define A                                      \\\n#      int a;                                    \\\n#      int b;                                    \\\n#      int c;\n#\n# @example\n# // Bad...\n# #define A \\\n#      int a; \\\n#      int b; \\\n#      int c;\n#/\nAlignEscapedNewlines: DontAlign # NOTE: disabled due to very large column limit\n\n#/\n# Disable horizontally aligning operands.\n#\n# @example\n# // Good...\n# int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc;\n#\n# @example\n# // Bad...\n# int aaa = bbbbbbbbbbbbbbb +\n#           ccccccccccccccc;\n#\n# @example\n# // Bad...\n# int aaa = bbbbbbbbbbbbbbb\n#         + ccccccccccccccc;\n#/\nAlignOperands: DontAlign\n\n#/\n# Leave trailing comments as they are.\n#\n# @example\n# // Okay...\n# int a;   // Comment\n# int ab;  // Comment\n#\n# @example\n# // Okay...\n# int a; // Comment\n# int ab; // Comment\n#/\nAlignTrailingComments:\n  Kind: Leave\n\n#/\n# Disallow putting arguments onto the next line.\n#\n# @example\n# // Good...\n# foo( a, b, c, d );\n#\n# @example\n# // Bad...\n# foo(\n#      a, b, c, d );\n#/\nAllowAllArgumentsOnNextLine: false\n\n#/\n# Disallow putting all parameters of a function declaration onto the next line.\n#\n# @example\n# // Good...\n# void foo( int a, int b, int c, int d);\n#\n# @example\n# // Bad...\n# void foo( int a,\n#           int b,\n#           int c,\n#           int d );\n#/\nAllowAllParametersOfDeclarationOnNextLine: false\n\n#/\n# Disallow inserting a line break before a `noexcept` specifier.\n#/\nAllowBreakBeforeNoexceptSpecifier: Never\n\n#/\n# Disallow placing short blocks on a single line, except for empty blocks.\n#\n# @example\n# // Good...\n# while ( true ) {\n#     continue;\n# }\n#\n# @example\n# // Good...\n# while ( true ) {}\n#\n# @example\n# // Bad...\n# while ( true ) { continue; }\n#/\nAllowShortBlocksOnASingleLine: Empty\n\n#/\n# Disallow short case expressions on a single line.\n#\n# @example\n# // Good...\n# switch ( a ) {\n# case 1 ->\n#     1;\n# }\n#\n# @example\n# // Bad...\n# switch ( a ) {\n# case 1 -> 1;\n# }\n#/\nAllowShortCaseExpressionOnASingleLine: false\n\n#/\n# Disallow short case labels on a single line.\n#\n# @example\n# // Good...\n# switch ( a ) {\n# case 1:\n#     x = 1;\n#     break;\n# case 2:\n#     return;\n# }\n#\n# @example\n# // Bad...\n# switch ( a ) {\n# case 1: x = 1; break;\n# case 2: return;\n# }\n#/\nAllowShortCaseLabelsOnASingleLine: false\n\n#/\n# Disallow short compound requirement on a single line.\n#/\nAllowShortCompoundRequirementOnASingleLine: false\n\n#/\n# Disallow short enums on a single line.\n#\n# @example\n# // Good...\n# enum {\n#     A,\n#     B\n# } Foo;\n#\n# @example\n# // Bad...\n# enum { A, B } Foo;\n#/\nAllowShortEnumsOnASingleLine: false\n\n#/\n# Disallow short function declarations on a single line, except for empty functions.\n#\n# @example\n# // Good...\n# int f() {\n#     return 0;\n# }\n#\n# @example\n# // Good...\n# void f() {}\n#\n# @example\n# // Bad...\n# int f() { return 0; }\n#/\nAllowShortFunctionsOnASingleLine: Empty\n\n#/\n# Disallow short `if` statements being put on a single line.\n#\n# @example\n# // Good...\n# if ( a ) {\n#     return;\n# }\n#\n# @example\n# // Bad...\n# if ( a ) return;\n#/\nAllowShortIfStatementsOnASingleLine: Never\n\n#/\n# Disallow short lambda functions being put on a single line, except for empty lambda functions.\n#/\nAllowShortLambdasOnASingleLine: Empty\n\n#/\n# Disallow short loops on a single line.\n#\n# @example\n# // Good...\n# while ( true ) {\n#     continue;\n# }\n#\n# @example\n# // Bad...\n# while ( true ) continue;\n#/\nAllowShortLoopsOnASingleLine: false\n\n#/\n# Disable breaking before multiline string literals.\n#\n# @example\n# // Good...\n# a = \"bbbbb\" \"ccccc\";\n#\n# @example\n# // Bad...\n# a =\n#     \"bbbbb\"\n#     \"ccccc\"\n#/\nAlwaysBreakBeforeMultilineStrings: false\n\n#/\n# Pack function call arguments into the same line.\n#\n# @example\n# // Good...\n# f( a, b, c );\n#\n# @example\n# // Bad...\n# f( a,\n#    b,\n#    c );\n#/\nBinPackArguments: true\n\n#/\n# Pack function parameters into the same line.\n#\n# @example\n# // Good...\n# void f( int a, int b, int c );\n#\n# @example\n# // Bad...\n# void f( int a,\n#         int b,\n#         int c );\n#/\nBinPackParameters: true\n\n#/\n# Always include a space after the colon for bitfields.\n#\n# @example\n# // Good...\n# unsigned bf: 2;\n#\n# @example\n# // Bad...\n# unsigned bf : 2;\n#\n# @example\n# // Bad...\n# unsigned bf:2;\n#/\nBitFieldColonSpacing: After\n\n#/\n# Specify the number of columns to use to indent the contents of braced init lists.\n#\n# @example\n# // Good...\n# SomeArrayT a[ 3 ] = {\n#     {\n#         foo,\n#         bar\n#     }\n# };\n#/\nBracedInitializerIndentWidth: 4\n\n#/\n# Disable breaking between adjacent string literals.\n#\n# @example\n# // Good...\n# a = \"Code\" \"\\0\\52\\26\\55\\55\\0\" \"x013\" \"\\02\\xBA\";\n#\n# @example\n# // Bad...\n# a = \"Code\"\n#     \"\\0\\52\\26\\55\\55\\0\"\n#     \"x013\"\n#     \"\\02\\xBA\";\n#/\nBreakAdjacentStringLiterals: false\n\n#/\n# Always break after a group of C++11 attributes before variable or function declaration/definition names or before control statements.\n#\n# @example\n# // Good...\n# [[maybe_unused]]\n# const int i;\n#\n# @example\n# // Bad...\n# [[maybe_unused]] const int i;\n#/\nBreakAfterAttributes: Always\n\n#/\n# Disable breaking after a function declaration return type.\n#\n# @example\n# // Good...\n# int foo();\n#\n# @example\n# // Bad...\n# int\n# foo();\n#/\nBreakAfterReturnType: Automatic\n\n#/\n# Disable breaking before binary operators.\n#\n# @example\n# // Good...\n# int a = b + c;\n#\n# @example\n# // Bad...\n# int a = b\n#       + c\n#/\nBreakBeforeBinaryOperators: None\n\n#/\n# Always attach braces to surrounding context.\n#\n# @example\n# // Good...\n# int f( int a, int b ) {\n#     return a + b;\n# }\n#\n# @example\n# // Bad...\n# int f( int a, int b )\n# {\n#     return a + b;\n# }\n#/\nBreakBeforeBraces: Attach\n\n#/\n# Disallow breaking before concept declarations.\n#\n# @example\n# // Good...\n# template <typename T> concept C = ...;\n#\n# @example\n# // Bad...\n# template <typename T>\n# concept C = ...;\n#/\nBreakBeforeConceptDeclarations: Never\n\n#/\n# Only break before an inline ASM colon if the line length is longer than the column limit.\n#\n# @example\n# // Good...\n# asm volatile( \"string\", : : val );\n#\n# @example\n# // Bad...\n# asm volatile( \"string\",\n#               :\n#               : val );\n#/\nBreakBeforeInlineASMColon: OnlyMultiline\n\n#/\n# Always break before ternary operators if the line length is longer than the column limit.\n#\n# @example\n# // Good...\n# a = b ? c : d;\n#\n# @example\n# // Bad...\n# a = b ?\n#     c :\n#     d;\n#/\nBreakBeforeTernaryOperators: true\n\n#/\n# Never break binary operations.\n#\n# @example\n# // Good...\n# a = b + ( c*d ) + e;\n#\n# @example\n# // Bad...\n# a = b +\n#     ( c *\n#       d ) +\n#     e;\n#/\n# BreakBinaryOperations: Never # FIXME: available in clang-format v20\n\n#/\n# Break constructor initializers after the colon and commas.\n#\n# @example\n# // Okay...\n# Constructor():\n#    initializer1(),\n#    initializer2()\n#/\nBreakConstructorInitializers: AfterColon\n\n#/\n# Disallow breaking before function definition parameters.\n#\n# @example\n# // Good...\n# int foo( int a, int b ) {}\n#\n# @example\n# // Bad...\n# int foo(\n#     int a, int b ) {}\n#/\nBreakFunctionDefinitionParameters: false\n\n#/\n# Break an inheritance list after the colon and commas if the line length is longer than the column limit.\n#\n# @example\n# // Okay...\n# class Foo:\n#     Base 1,\n#     Base 2\n# {}\n#/\nBreakInheritanceList: AfterColon\n\n#/\n# Allow breaking string literals when formatting if the line length is longer than the column limit.\n#\n# @example\n# // Okay...\n# const char *x = \"aaaaaaa\"\n#                 \"bbbbbbb\"\n#/\nBreakStringLiterals: true\n\n#/\n# Never break before a template declaration.\n#\n# @example\n# // Good...\n# template <typename T> T foo() {}\n#\n# @example\n# // Bad...\n# template <typename T>\n# T foo() {}\n#/\nBreakTemplateDeclarations: No\n\n#/\n# Always require that consecutive namespace declarations be on separate lines.\n#\n# @example\n# // Good...\n# namespace Foo {\n#     namespace Bar {}\n# }\n#\n# @example\n# // Bad...\n# namespace Foo { namespace Bar {} }\n#/\nCompactNamespaces: false\n\n#/\n# Set the number of characters to use for indentation of constructor initializer and inheritance lists.\n#/\nConstructorInitializerIndentWidth: 4\n\n#/\n# Set the indentation width for line continuations.\n#/\nContinuationIndentWidth: 4\n\n#/\n# Disable formatting braced lists.\n#\n# @example\n# // Good...\n# new int[ 3 ]{ 1, 2, 3 }\n#\n# @example\n# // Bad...\n# new int[3]{1, 2, 3}\n#/\nCpp11BracedListStyle: false\n\n#/\n# Disable inferring pointer alignment in order to ensure consistent pointer and reference alignment styles.\n#/\nDerivePointerAlignment: false\n\n#/\n# Always remove empty lines after access modifiers.\n#\n# @example\n# // Good...\n# struct foo {\n#     private:\n#         int i;\n#\n#     public:\n#         foo() {}\n# }\n#\n# @example\n# // Bad...\n# struct foo {\n#     private:\n#\n#         int i;\n#\n#     public:\n#\n#         foo() {}\n# }\n#/\nEmptyLineAfterAccessModifier: Never\n\n#/\n# Always include empty lines before access modifiers.\n#\n# @example\n# // Good...\n# struct foo {\n#     private:\n#         int i;\n#\n#     public:\n#         foo() {}\n# }\n#\n# @example\n# // Bad...\n# struct foo {\n#     private:\n#         int i;\n#     public:\n#         foo() {}\n# }\n#/\nEmptyLineBeforeAccessModifier: Always\n\n#/\n# Always add a namespace comment for long namespaces.\n#\n# @example\n# // Okay...\n# namespace a {\n#     void foo();\n#     void bar();\n# } // namespace a\n#/\nFixNamespaceComments: true\n\n#/\n# Always preserve `#include` blocks and sort separately.\n#\n# @example\n# // Good...\n# #include \"b.h\"\n#\n# #include \"a.h\"\n# #include \"c.h\"\n# #include \"<stdint.h>\"\n#\n# @example\n# // Bad...\n# #include \"b.h\"\n#\n# #include \"<stdint.h>\"\n# #include \"c.h\"\n# #include \"a.h\"\n#/\nIncludeBlocks: Preserve\n\n#/\n# Define `#include` categories and assign ordering priorities.\n#\n# ## Notes\n#\n# -   The main header for a source file should automatically be assigned top priority.\n#/\nIncludeCategories:\n  # stdlib headers should always sorted to the top...\n  - Regex: '^\"(stdlib)/'\n    Priority: 2\n    CaseSensitive: true\n\n  # Vendor headers should always come after stdlib headers...\n  - Regex: '^((<|\")(node_api)/)'\n    Priority: 3\n\n  # Built-in headers (e.g., `<stdint.h>`) should always come at the end...\n  - Regex: '<[[:alnum:].]+>'\n    Priority: 4\n\n  # All other headers (e.g., those resolved using relative paths) should come first...\n  - Regex: '.*'\n    Priority: 1\n\n#/\n# Always indent access modifiers.\n#\n# @example\n# // Good...\n# class C {\n#     public:\n#         D();\n# }\n#\n# @example\n# // Bad...\n# class C {\n# public:\n#     D();\n# }\n#/\nIndentAccessModifiers: true\n\n#/\n# Disable indenting case label blocks.\n#\n# @example\n# // Okay...\n# switch ( foo ) {\n# case 1: {\n#     bar();\n# } break;\n# }\n#\n# @example\n# // Bad...\n# switch ( foo ) {\n# case 1:\n#     {\n#         bar();\n#     }\n#     break;\n# }\n#/\nIndentCaseBlocks: false\n\n#/\n# Disable indenting case labels one level from `switch` statement.\n#\n# @example\n# // Good...\n# switch ( foo ) {\n# case 1:\n#     bar();\n#     break;\n# }\n# @example\n# // Bad...\n# switch ( foo ) {\n#     case 1:\n#         bar();\n#         break;\n# }\n#/\nIndentCaseLabels: false\n\n#/\n# Disable indenting `extern` blocks.\n#\n# @example\n# // Good...\n# extern \"C\" {\n#\n# void foo();\n#\n# }\n#\n# @example\n# // Bad...\n# extern \"C\" {\n#\n#     void foo();\n#\n# }\n#/\nIndentExternBlock: NoIndent\n\n#/\n# Don't indent `goto` labels.\n#\n# @example\n# // Okay...\n# int f() {\n#     if ( foo() ) {\n# label1:\n#         bar();\n#     }\n# label2:\n#     return 1;\n# }\n#/\nIndentGotoLabels: false\n\n#/\n# Never indent preprocessor directives.\n#\n# @example\n# // Good...\n# #if FOO\n# #if BAR\n# #include <foo>\n# #endif\n# #endif\n#\n# @example\n# // Bad...\n# #if FOO\n#     #if BAR\n#         #include <foo>\n#     #endif\n# #endif\n#/\nIndentPPDirectives: None\n\n#/\n# Never indent a `requires` clause in C++.\n#\n# @example\n# // Good...\n# template <typename It>\n# requires Iterator<It>\n# void sort(It begin, It end) {\n#     //....\n# }\n#/\nIndentRequiresClause: false\n\n#/\n# Never indent long function names.\n#\n# @example\n# // Good...\n# LoooooooonnngReturnType LonnnnnnngFunctionDeclaration();\n#\n# @example\n# // Bad...\n# LoooooooonnngReturnType\n#     LonnnnnnngFunctionDeclaration();\n#/\nIndentWrappedFunctionNames: false\n\n#/\n# Never automatically insert brace after control statements in C++.\n#\n# ## Notes\n#\n# -   Setting this option to `true` can lead to incorrect code formatting due to incomplete semantic information.\n#/\nInsertBraces: false\n\n#/\n# Never insert trailing commas in container literals that wrap across multiple lines.\n#\n# @example\n# // Good...\n# int a[3] = {\n#     1,\n#     2,\n#     3\n# };\n#\n# @example\n# // Bad...\n# int a[3] = {\n#     1,\n#     2,\n#     3,\n# };\n#/\nInsertTrailingCommas: None\n\n#/\n# Never insert integer literal separators.\n#\n# @example\n# // Good...\n# int a = 1234;\n#\n# @example\n# // Bad...\n# int a = 1'234\n#/\nIntegerLiteralSeparator:\n  Binary: -1\n  Decimal: -1\n  Hex: -1\n\n#/\n# Remove unnecessary empty lines.\n#\n# @example\n# // Good...\n# if ( foo ) {\n#     bar();\n# }\n#\n# @example\n# // Bad...\n# if ( foo ) {\n#\n#     bar();\n# }\n#/\nKeepEmptyLines:\n  AtEndOfFile: false\n  AtStartOfBlock: false\n  AtStartOfFile: false\n\n#/\n# Remove form feed characters.\n#/\n# KeepFormFeed: false # FIXME: available in clang-format 20`\n\n#/\n# Align lambda function bodies relative to the outer scope.\n#\n# @example\n# // Okay...\n# someMethod( []( SomeReallyLongLambdaSignatureArgument foo ) {\n#     return;\n# });\n#/\nLambdaBodyIndentation: OuterScope\n\n#/\n# When guessing whether a `#include` is the \"main\" include, only consider includes which use quotes.\n#/\nMainIncludeChar: Quote\n\n#/\n# Limit the number of consecutive empty lines.\n#\n# @example\n# // Good...\n# int f() {\n#     int a = 1;\n#\n#     int b = bar( a );\n#\n#     return b;\n# }\n#\n# @example\n# // Bad...\n# int f() {\n#     int a = 1;\n#\n#\n#\n#     int b = bar( a );\n#\n#\n#     return b;\n# }\n#/\nMaxEmptyLinesToKeep: 1\n\n#/\n# Always indent namespaces.\n#\n# @example\n# // Good...\n# namespace out {\n#     namespace in {\n#         int i;\n#     }\n# }\n#\n# @example\n# // Bad...\n# namespace out {\n# namespace in {\n#     int i;\n# }\n# }\n#/\nNamespaceIndentation: All\n\n#/\n# Set the number of columns to use for indentation of preprocessor statements.\n#\n# @example\n# // Good...\n# #ifdef __linux__\n# #define FOO\n# #endif\n#\n# @example\n# // Bad...\n# #ifdef __linux__\n# #    define FOO\n# #endif\n#/\nPPIndentWidth: 0\n\n#/\n# Pack constructor initializers on the current line if they fit.\n#\n# @example\n# // Good...\n# Constructor(): a(), b(), c()\n#\n# @example\n# // Bad...\n# Constructor():\n#     : a(), b(),\n#       c()\n#/\nPackConstructorInitializers: CurrentLine\n\n#/\n# Define the penalty for breaking around an assignment operator.\n#/\nPenaltyBreakAssignment: 10\n\n#/\n# Define the penalty for breaking a function call after `call(`.\n#/\nPenaltyBreakBeforeFirstCallParameter: 11\n\n#/\n# Define the penalty for each line break introduced inside a comment.\n#/\nPenaltyBreakComment: 2\n\n#/\n# Define the penalty for breaking before the first `<<`.\n#/\nPenaltyBreakFirstLessLess: 10\n\n#/\n# Define the penalty for breaking after `(`.\n#/\nPenaltyBreakOpenParenthesis: 9\n\n#/\n# Define the penalty for breaking after `::`.\n#/\nPenaltyBreakScopeResolution: 5\n\n#/\n# Define the penalty for each line break introduced inside a string literal.\n#/\nPenaltyBreakString: 3\n\n#/\n# Define the penalty for breaking after template declaration.\n#/\nPenaltyBreakTemplateDeclaration: 11\n\n#/\n# Define the penalty for each character outside of the column limit.\n#/\nPenaltyExcessCharacter: 0\n\n#/\n# Define the penalty for each character of whitespace indentation.\n#/\nPenaltyIndentedWhitespace: 0\n\n#/\n# Define the penalty for putting the return type of a function on its own line.\n#/\nPenaltyReturnTypeOnItsOwnLine: 6\n\n#/\n# Define the pointer alignment style.\n#\n# @example\n# // Good...\n# int *a;\n#\n# @example\n# // Bad...\n# int* a;\n#/\nPointerAlignment: Right\n\n#/\n# Never change specifiers/qualifiers (e.g., const/volatile).\n#/\nQualifierAlignment: Leave\n\n#/\n# Define the reference alignment style.\n#\n# @example\n# // Good...\n# int &a;\n#\n# @example\n# // Bad...\n# int& a;\n#/\nReferenceAlignment: Right\n\n#/\n# Never reflow comments.\n#/\nReflowComments: false\n\n#/\n# Remove empty lines in unwrapped lines.\n#\n# @example\n# // Good...\n# int c = a + b;\n#\n# @example\n# // Bad...\n# int c\n#\n#     = a + b;\n#/\n# RemoveEmptyLinesInUnwrappedLines: true # FIXME: available in clang-format 20\n\n#/\n# Always replace multiple parentheses with single parentheses.\n#\n# ## Notes\n#\n# -   This option can lead to incorrect formatting due to incomplete semantic information.\n#\n# @example\n# // Good...\n# return ( ( a + b ) - ( c + d ) );\n#\n# @example\n# // Bad...\n# return ( ( a + b ) - ( ( c + d ) ) );\n#/\nRemoveParentheses: MultipleParentheses\n\n#/\n# Always remove semicolons after the closing braces of functions and constructors/destructors.\n#\n# ## Notes\n#\n# -   This option can lead to incorrect formatting due to incomplete semantic information.\n#\n# @example\n# // Good...\n# int foo() {\n#     return 2;\n# }\n#\n# @example\n# // Bad...\n# int foo() {\n#     return 2;\n# };\n#/\nRemoveSemicolon: true\n\n#/\n# Always position a `requires` clause on a single lie with everything else.\n#\n# @example\n# // Good...\n# template <typename T> requires C<T> struct Foo {}\n#\n# @example\n# // Bad...\n# template <typename T> requires C<T>\n# struct Foo {}\n#/\nRequiresClausePosition: SingleLine\n\n#/\n# Always align expression bodies with outer scope.\n#\n# @example\n# // Good...\n# template <typename T> concept C = requires(T t) {\n#     ...\n# }\n#\n# @example\n# // Bad...\n# template <typename T>\n# concept C = requires(T t) {\n#                 ...\n#             }\n#/\nRequiresExpressionIndentation: OuterScope\n\n#/\n# Include an empty line between definition blocks, including classes, structs, enums, and functions.\n#\n# @example\n# // Good...\n# #include \"foo.h\"\n#\n# struct Foo {\n#     int a, b, c;\n# }\n#\n# struct Bar {\n#     int x, y, z;\n# }\n#\n# @example\n# // Bad...\n# #include \"foo.h\"\n# struct Foo {\n#     int a, b, c;\n# }\n# struct Bar {\n#     int x, y, z;\n# }\n#/\nSeparateDefinitionBlocks: Always\n\n#/\n# Require that all namespaces have wrapped lines.\n#\n# @example\n# // Good...\n# namespace a {\n#     int foo;\n# } // namespace a\n#\n# @example\n# // Bad...\n# namespace a {\n#     int foo;\n# }\n#/\nShortNamespaceLines: 0\n\n#/\n# Avoid formatting a macro definition body.\n#/\nSkipMacroDefinitionBody: true\n\n#/\n# Sort includes in a case sensitive fashion.\n#/\nSortIncludes: CaseSensitive\n\n#/\n# Sort using declarations in lexicographic order.\n#/\nSortUsingDeclarations: Lexicographic\n\n#/\n# Never include a space after C style casts.\n#\n# @example\n# // Good...\n# (int)i;\n#\n# @example\n# // Bad...\n# (int) i;\n#/\nSpaceAfterCStyleCast: false\n\n#/\n# Never include a space after the logical not operator (!).\n#\n# @example\n# // Good...\n# !foo();\n#\n# @example\n# // Bad...\n# ! foo();\n#/\nSpaceAfterLogicalNot: false\n\n#/\n# Never include a space after the `template` keyword.\n#\n# @example\n# // Good...\n# template<int> void foo();\n#\n# @example\n# // Bad...\n# template <int> void foo();\n#/\nSpaceAfterTemplateKeyword: false\n\n#/\n# Rely on pointer alignment for determining spaces around pointer qualifiers.\n#\n# @example\n# // Okay...\n# void *const *x = NULL:\n#/\nSpaceAroundPointerQualifiers: Default\n\n#/\n# Always include spaces before assignment operators.\n#\n# @example\n# // Good...\n# int a = 5;\n#\n# @example\n# // Bad...\n# int a= 5;\n#/\nSpaceBeforeAssignmentOperators: true\n\n#/\n# Never include a space before a `case` colon.\n#\n# @example\n# // Good...\n# switch ( foo ) {\n# case 1:\n#     break;\n# }\n#\n# @example\n# // Bad...\n# switch ( foo ) {\n# case 1 :\n#     break;\n# }\n#/\nSpaceBeforeCaseColon: false\n\n#/\n# Never include a space before a C++ braced list.\n#\n# @example\n# // Good...\n# new int[ 3 ]{ 1, 2, 3 };\n#\n# @example\n# // Bad...\n# new int[ 3 ] { 1, 2, 3 };\n#/\nSpaceBeforeCpp11BracedList: false\n\n#/\n# Never include a space before a constructor initializer.\n#\n# @example\n# // Good...\n# Foo::Foo(): a( a ) {}\n#\n# @example\n# // Bad...\n# Foo::Foo() : a( a ) {}\n#/\nSpaceBeforeCtorInitializerColon: false\n\n#/\n# Never include a space before an inheritance colon.\n#\n# @example\n# // Good...\n# class Foo: Bar {}\n#\n# @example\n# // Bad...\n# class Foo : Bar {}\n#/\nSpaceBeforeInheritanceColon: false\n\n#/\n# Specify when to put a space before opening parentheses.\n#\n# @example\n# // Good...\n# if ( foo ) {\n#     bar();\n# }\n#\n# @example\n# // Bad...\n# if( foo ) {\n#     bar();\n# }\n#/\nSpaceBeforeParens: Custom\n\n#/\n# Define custom rules for when to put a space before opening parentheses.\n#/\nSpaceBeforeParensOptions:\n  #/\n  # Always put a space before opening parentheses in control statements.\n  #\n  # @example\n  # // Good...\n  # if ( foo ) {\n  #     bar();\n  # }\n  #\n  # @example\n  # // Bad...\n  # if( foo ) {\n  #     bar();\n  # }\n  #/\n  AfterControlStatements: true\n\n  #/\n  # Never put a space before opening parentheses in foreach macros.\n  #\n  # @example\n  # // Good...\n  # FOREACH(...)\n  #\n  # @example\n  # // Bad...\n  # FOREACH (...)\n  #/\n  AfterForeachMacros: false\n\n  #/\n  # Never put a space before opening parentheses and after a function declaration name.\n  #\n  # @example\n  # // Good...\n  # void f();\n  #\n  # @example\n  # // Bad...\n  # void f ();\n  #/\n  AfterFunctionDeclarationName: false\n\n  #/\n  # Never put a space before opening parentheses in `if` macros.\n  #\n  # @example\n  # // Good...\n  # IF(...)\n  #\n  # @example\n  # // Bad...\n  # IF (...)\n  #/\n  AfterIfMacros: false\n\n  #/\n  # Never put a space between opening parentheses and operator overloading.\n  #\n  # @example\n  # // Good...\n  # void operator++(int a);\n  #\n  # @example\n  # // Bad...\n  # void operator++ (int a);\n  #/\n  AfterOverloadedOperator: false\n\n  #/\n  # Always put a space between opening parentheses and `new`/`delete` operators.\n  #\n  # @example\n  # // Good...\n  # new ( buf ) T;\n  #\n  # @example\n  # // Bad...\n  # new( buf ) T;\n  #/\n  AfterPlacementOperator: true\n\n  #/\n  # Never put a space between opening parentheses and `requires` clauses.\n  #\n  # @example\n  # // Good...\n  # template<typename T> concept C = requires( T t ) {}\n  #\n  # @example\n  # // Bad...\n  # template<typename T> concept C = requires ( T t ) {}\n  #/\n  AfterRequiresInExpression: false\n\n  #/\n  # Never distinguish between empty and non-empty parentheses.\n  #\n  # @example\n  # // Good...\n  # f( a );\n  # g();\n  #\n  # @example\n  # // Bad...\n  # f ( a );\n  # g();\n  #/\n  BeforeNonEmptyParentheses: false\n\n#/\n# Never include a space before a range-based loop colon.\n#\n# @example\n# // Good...\n# for ( auto v: values ) {}\n#\n# @example\n# // Bad...\n# for (auto v : values ) {}\n#/\nSpaceBeforeRangeBasedForLoopColon: false\n\n#/\n# Never include a space before square brackets.\n#\n# @example\n# // Good...\n# int a[ 5 ];\n#\n# @example\n# // Bad...\n# int a [ 5 ];\n#/\nSpaceBeforeSquareBrackets: false\n\n#/\n# Never include a space in an empty block.\n#\n# @example\n# // Good...\n# void f() {}\n#\n# @example\n# // Bad...\n# void f() { }\n#/\nSpaceInEmptyBlock: false\n\n#/\n# Always include only one space before trailing line comments.\n#/\nSpacesBeforeTrailingComments: 1\n\n#/\n# Never include spaces in template argument lists.\n#\n# @example\n# // Good...\n# static_cast<int>( arg );\n#\n# @example\n# // Bad...\n# static_cast< int >( arg );\n#/\nSpacesInAngles: Never\n\n#/\n# Always include spaces inside container literals.\n#\n# @example\n# // Good...\n# int a[ 5 ] = { 1, 2, 3, 4, 5 };\n#\n# @example\n# // Bad...\n# int a[ 5 ] = {1, 2, 3, 4, 5};\n#/\nSpacesInContainerLiterals: true\n\n#/\n# Always require only one space at the start of a line comment.\n#\n# @example\n# // Good...\n#\n# @example\n# //    Bad...\n#/\nSpacesInLineCommentPrefix:\n  Minimum: 1\n  Maximum: -1\n\n#/\n# Specify when insert spaces inside parentheses.\n#\n# @example\n# // Good...\n# if ( foo ) {\n#     bar();\n# }\n#\n# @example\n# // Bad...\n# if (foo) {\n#     bar();\n# }\n#/\nSpacesInParens: Custom\n\n#/\n# Define custom rules for including spaces inside parentheses.\n#/\nSpacesInParensOptions:\n  #/\n  # Don't allow overriding rules by using double parentheses.\n  #/\n  ExceptDoubleParentheses: false\n\n  #/\n  # Always include spaces inside conditional statements.\n  #\n  # @example\n  # // Good...\n  # if ( foo ) {\n  #     bar();\n  # }\n  #\n  # @example\n  # // Bad...\n  # if (foo) {\n  #     bar();\n  # }\n  #/\n  InConditionalStatements: true\n\n  #/\n  # Never include spaces inside C-style casts.\n  #\n  # @example\n  # // Good...\n  # x = (double)y;\n  #\n  # @example\n  # // Bad...\n  # x = ( double )y;\n  #/\n  InCStyleCasts: false\n\n  #/\n  # Never include spaces inside empty parentheses.\n  #\n  # @example\n  # // Good...\n  # f();\n  #\n  # @example\n  # // Bad...\n  # f( );\n  #/\n  InEmptyParentheses: false\n\n  #/\n  # Always include spaces inside parentheses not covered by the other rules.\n  #\n  # @example\n  # // Okay...\n  # t f( Deleted & ) & = delete;\n  #/\n  Other: true\n\n#/\n# Always include spaces inside square brackets.\n#\n# @example\n# // Good...\n# int a[ 5 ];\n#\n# @example\n# // Bad...\n# int a[5];\n#/\nSpacesInSquareBrackets: true\n\n#/\n# Never break inside DAGArg.\n#/\nTableGenBreakInsideDAGArg: DontBreak\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 2.8544921875,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# After changing this file, check it via:\n#\n#   curl -X POST --data-binary @/path/to/.codecov.yml https://codecov.io/validate\n#\n# For general configuration information, see:\n#\n#   https://github.com/codecov/support/wiki/Codecov-Yaml\n\ncodecov:\n  # Default branch to show (if not set, inherited from repository settings):\n  branch: develop\n\n\ncoverage:\n  # Number of decimals to display in UI:\n  precision: 4\n\n  # How to round coverage percentages (up/down/nearest):\n  round: down\n\n  # Notification settings:\n  notify:\n    slack:\n      default:\n        url: \"secret:JUKJSnol70QPCceIZFokxa1sLK7E0GJrX4ytQfsvCulNLI8QRHVSTRIkntmcCGyON/dYPCc3caSlQKwh6hY5bCaAN3q9Iv3l1krivlvq1/4WsN3qFP/DnbbeFEYypBPeV8yJv0lvxAzD/GQTu+bz0jqrlZhH6Mbzh5hA3j5NkNg=\"\n        attachments: \"sunburst, diff\"\n\n  # Commit status settings:\n  status:\n    # Settings for the overall project:\n    project:\n      default:\n        # Enable posting a commit status:\n        enabled: yes\n\n        # Target coverage percentage for a commit (if \"auto\", must increase from parent commit):\n        target: auto\n\n        # Post an \"error\" commit status if a report is not uploaded for a given commit:\n        if_no_uploads: error\n\n        # Post an \"error\" if unable to find parent commit:\n        if_not_found: error\n\n        # If CI fails, report an \"error\" commit status:\n        if_ci_failed: error\n\n    # Settings for pull requests:\n    patch:\n      default:\n        # Enable posting a commit status:\n        enabled: yes\n\n        # Post an \"error\" commit status if a report is not uploaded for a given commit:\n        if_no_uploads: error\n\n        # Post an \"error\" if unable to find parent commit:\n        if_not_found: error\n\n        # If CI fails, report an \"error\" commit status:\n        if_ci_failed: error\n\n    # Settings for \"unexpected\" changes:\n    changes:\n      default:\n        # Enable posting a commit status:\n        enabled: yes\n\n        # Post an \"error\" commit status if a report is not uploaded for a given commit:\n        if_no_uploads: error\n\n        # Post an \"error\" if unable to find parent commit:\n        if_not_found: error\n\n        # If CI fails, report an \"error\" commit status:\n        if_ci_failed: error\n\n\n# Comment settings:\ncomment:\n  layout: \"header, diff, changes, sunburst, uncovered, tree\"\n  behavior: default\n"
        },
        {
          "name": ".commitlintrc.js",
          "type": "blob",
          "size": 0.783203125,
          "content": "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar config = require( './etc/commitlint/.commitlintrc.js' ); // eslint-disable-line node/no-unpublished-require\n\n\n// EXPORTS //\n\nmodule.exports = config;\n"
        },
        {
          "name": ".czrc",
          "type": "blob",
          "size": 0.0400390625,
          "content": "{\n\t\"path\": \"@commitlint/cz-commitlint\"\n}\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 3.7548828125,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# EditorConfig configuration file (see <http://editorconfig.org/>).\n\n# Indicate that this file is a root-level configuration file:\nroot = true\n\n# Set properties for all files:\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# Set properties for JavaScript files:\n[*.{js,js.txt}]\nindent_style = tab\n\n# Set properties for JavaScript ES module files:\n[*.{mjs,mjs.txt}]\nindent_style = tab\n\n# Set properties for JavaScript CommonJS files:\n[*.{cjs,cjs.txt}]\nindent_style = tab\n\n# Set properties for JSON files:\n[*.{json,json.txt}]\nindent_style = space\nindent_size = 2\n\n# Set properties for `cli_opts.json` files:\n[cli_opts.json]\nindent_style = tab\n\n# Set properties for TypeScript files:\n[*.ts]\nindent_style = tab\n\n# Set properties for Python files:\n[*.{py,py.txt}]\nindent_style = space\nindent_size = 4\n\n# Set properties for Julia files:\n[*.{jl,jl.txt}]\nindent_style = tab\n\n# Set properties for R files:\n[*.{R,R.txt}]\nindent_style = tab\n\n# Set properties for C files:\n[*.{c,c.txt}]\nindent_style = tab\n\n# Set properties for C header files:\n[*.{h,h.txt}]\nindent_style = tab\n\n# Set properties for C++ files:\n[*.{cpp,cpp.txt}]\nindent_style = tab\n\n# Set properties for C++ header files:\n[*.{hpp,hpp.txt}]\nindent_style = tab\n\n# Set properties for Fortran files:\n[*.{f,f.txt}]\nindent_style = space\nindent_size = 2\ninsert_final_newline = false\n\n# Set properties for shell files:\n[*.{sh,sh.txt}]\nindent_style = tab\n\n# Set properties for AWK files:\n[*.{awk,awk.txt}]\nindent_style = tab\n\n# Set properties for HTML files:\n[*.{html,html.txt}]\nindent_style = tab\ntab_width = 2\n\n# Set properties for XML files:\n[*.{xml,xml.txt}]\nindent_style = tab\ntab_width = 2\n\n# Set properties for CSS files:\n[*.{css,css.txt}]\nindent_style = tab\n\n# Set properties for Makefiles:\n[Makefile]\nindent_style = tab\n\n[*.{mk,mk.txt}]\nindent_style = tab\n\n# Set properties for Markdown files:\n[*.{md,md.txt}]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true # Note: this disables using two spaces to force a hard line break, which is permitted in Markdown. As we don't typically follow that practice (TMK), we should be safe to automatically trim.\n\n# Set properties for `usage.txt` files:\n[usage.txt]\nindent_style = space\nindent_size = 2\n\n# Set properties for `repl.txt` files:\n[repl.txt]\nindent_style = space\nindent_size = 4\n\n# Set properties for `package.json` files:\n[package.{json,json.txt}]\nindent_style = space\nindent_size = 2\n\n# Set properties for `datapackage.json` files:\n[datapackage.json]\nindent_style = space\nindent_size = 2\n\n# Set properties for `manifest.json` files:\n[manifest.json]\nindent_style = space\nindent_size = 2\n\n# Set properties for `tsconfig.json` files:\n[tsconfig.json]\nindent_style = space\nindent_size = 2\n\n# Set properties for LaTeX files:\n[*.{tex,tex.txt}]\nindent_style = tab\n\n# Set properties for LaTeX Bibliography files:\n[*.{bib,bib.txt}]\nindent_style = tab\n\n# Set properties for YAML files:\n[*.{yml,yml.txt}]\nindent_style = space\nindent_size = 2\n\n# Set properties for GYP files:\n[binding.gyp]\nindent_style = space\nindent_size = 2\n\n[*.gypi]\nindent_style = space\nindent_size = 2\n\n# Set properties for citation files:\n[*.{cff,cff.txt}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.771484375,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2018 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Files #\n#########\n!.*.js\n!.*.ts\n\n# Directories #\n###############\nbuild/\nreports/\n/dist/\n\n# Node.js #\n###########\n/node_modules/\n!/**/node_modules/*\n\n# Git #\n#######\n.git*\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.7353515625,
          "content": "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar eslint = require( './etc/eslint/.eslintrc.overrides.js' );\n\n\n// EXPORTS //\n\nmodule.exports = eslint;\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.8740234375,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Configuration file which assigns attributes to pathnames.\n#\n# [1]: https://git-scm.com/docs/gitattributes\n\n# Automatically normalize the line endings of any committed text files:\n* text=auto\n\n# Override line endings for certain files on checkout:\n*.crlf.csv text eol=crlf\n\n# Denote that certain files are binary and should not be modified:\n*.png binary\n*.jpg binary\n*.jpeg binary\n*.gif binary\n*.ico binary\n*.gz binary\n*.zip binary\n*.7z binary\n*.mp3 binary\n*.mp4 binary\n*.mov binary\n\n# Override what is considered \"vendored\" by GitHub's linguist:\n/lib/node_modules/** -linguist-vendored -linguist-generated\n\n# Configure directories which should *not* be included in GitHub language statistics:\n/deps/** linguist-vendored\n/dist/** linguist-generated\n/workshops/** linguist-vendored\n\nbenchmark/** linguist-vendored\ndocs/* linguist-documentation\netc/** linguist-vendored\nexamples/** linguist-documentation\nscripts/** linguist-vendored\ntest/** linguist-vendored\ntools/** linguist-vendored\n\n# Configure files which should *not* be included in GitHub language statistics:\nMakefile linguist-vendored\n*.mk linguist-vendored\n*.jl linguist-vendored\n*.py linguist-vendored\n*.R linguist-vendored\n\n# Configure files which should be included in GitHub language statistics:\ndocs/types/*.d.ts -linguist-documentation\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.322265625,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Files #\n#########\npackage.json.copy\n.stdlibrc\n\n# Directories #\n###############\nbuild/\ndownloads/\nreports/\ntmp/\n\n# Compiled source #\n###################\n*.com\n*.class\n*.dll\n*.o\n*.so\n*.slo\n*.lo\n*.obj\n*.dylib\n*.lai\n*.la\n*.a\n*.lib\n*.ko\n*.elf\n*.node\n\n# Precompiled headers #\n#######################\n*.gch\n*.pch\n\n# Executables #\n###############\n*.exe\n*.out\n*.app\n\n# Packages #\n############\n# It is better to unpack these files and commit the raw source\n# git has its own built in compression methods\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n\n# Logs and databases #\n######################\n*.log\n*.sql\n*.sqlite\n\n# OS generated files #\n######################\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\nThumbs.db\nDesktop.ini\n\n# Temporary files #\n###################\n*~\n\n# Node.js #\n###########\n/node_modules/\nlib/node_modules/**/node_modules/\ndocs/**/node_modules/\npids\n*.pid\n*.seed\nyarn.lock\npackage-lock.json\n\n# Typescript #\n##############\n*.tsbuildinfo\nlib/node_modules/**/tsconfig.json\nlib/node_modules/**/tslint.json\n\n# Matlab #\n##########\n*.asv\n*.mex*\n\n# Fortran #\n###########\n*.mod\n\n# R #\n#####\n.Rhistory\n.Rapp.history\n.Rproj.user/\n\n# Python #\n##########\n__pycache__/\n*.py[cod]\n*$py.class\n*.egg-info/\n\n# TeX #\n#######\n*.aux\n*.lof\n*.log\n*.lot\n*.fls\n*.out\n*.toc\n*.dvi\n*-converted-to.*\n*.bbl\n*.bcf\n*.blg\n*-blx.aux\n*-blx.bib\n*.brf\n*.run.xml\n*.fdb_latexmk\n*.synctex\n*.synctex.gz\n*.synctex.gz(busy)\n*.pdfsync\n*.alg\n*.loa\nacs-*.bib\n*.thm\n*.nav\n*.snm\n*.vrb\n*.acn\n*.acr\n*.glg\n*.glo\n*.gls\n*-concordance.tex\n*.tikz\n*-tikzDictionary\n*.idx\n*.ilg\n*.ind\n*.ist\n\n# Visual Studio #\n#################\n.vscode/\njsconfig.json\n\n# Sublime Text #\n################\n*.sublime-workspace\n*.sublime-project\n\n# Other editor files #\n######################\n.idea/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 7.8857421875,
          "content": "# This file maps author and committer names and email addresses to canonical\n# real names and email addresses. For more information, see the `git shortlog`\n# [man page][1].\n#\n# [1]: http://schacon.github.io/git/git-shortlog.html\n\n# Please keep this list sorted alphabetically.\n\n# A\n\nAayush Khanna <aayushiitbhu23@gmail.com> <96649223+aayush0325@users.noreply.github.com>\nAayush Khanna <aayushiitbhu23@gmail.com> aayush0325\n\nAbhijit Raut <abhijitmraut8010@gmail.com> <121740684+AbhijitRaut04@users.noreply.github.com>\nAbhijit Raut <abhijitmraut8010@gmail.com> AbhijitRaut04\n\nAdarsh Palaskar <adarshpalaskar99@gmail.com> <83298237+adarshpalaskar1@users.noreply.github.com>\nAdarsh Palaskar <adarshpalaskar99@gmail.com> adarshpalaskar1\n\nAditya Sapra <adityaework@gmail.com> <110766802+adityacodes30@users.noreply.github.com>\nAditya Sapra <adityaework@gmail.com> adityacodes30\n\nAhmed Atwa <Ahmedatwa866@yahoo.com> NightKnight\n\nAhmed Khaled <kahmd1444@gmail.com> Khaldon\n\nAhmed Kashkoush <ahmedkashkoush464@gmail.com> <89735230+ahmad-kashkoush@users.noreply.github.com>\nAhmed Kashkoush <ahmedkashkoush464@gmail.com> Ahmed_Kashkoush\n\nAman Bhansali <bhansali.1@iitj.ac.in> <92033532+aman-095@users.noreply.github.com>\nAman Bhansali <bhansali.1@iitj.ac.in> aman-095\n\nAmit Jimiwal <amitjimiwal45@gmail.com> <90555965+amitjimiwal@users.noreply.github.com>\nAmit Jimiwal <amitjimiwal45@gmail.com> drunken_devv\n\nAnudeep Sanapala <anudeep0306@gmail.com> <71971574+anudeeps0306@users.noreply.github.com>\nAnudeep Sanapala <anudeep0306@gmail.com> anudeeps0306\n\nAthan Reines <kgryte@gmail.com> kgryte\nAthan Reines <kgryte@gmail.com> Athan\n\n# B\n\nBruno Fenzl <brunofenzl@gmail.com> <bruno@brunofenzl.com>\n\n# C\n\nChinmay Joshi <86140365+JawHawk@users.noreply.github.com> Chinmay J\n\n# D\n\nDebashis Maharana <debashismaharana7854@gmail.com> <145602692+DevMhrn@users.noreply.github.com>\nDebashis Maharana <debashismaharana7854@gmail.com> DebashisMaharana\n\nDhruv Arvind Singh <154677013+DhruvArvindSingh@users.noreply.github.com> DhruvArvindSingh\nDhruv Arvind Singh <154677013+DhruvArvindSingh@users.noreply.github.com> Dhruv/\n\nDorrin Sotoudeh <dorrinsotoudeh123@gmail.com> <59933477+dorrin-sot@users.noreply.github.com>\nDorrin Sotoudeh <dorrinsotoudeh123@gmail.com> dorrin-sot\n\n# F\n\nFrank Kovacs <fran70kk@gmail.com> <fkovacs@andrew.cmu.edu>\n\n# G\n\nGittyHarsha <hnarayana788@gmail.com>\n\nGolden Kumar <103646877+AuenKr@users.noreply.github.com> Golden\nGolden Kumar <103646877+AuenKr@users.noreply.github.com> AuenKr\n\nGunj Joshi <gunjjoshi8372@gmail.com> GUNJ JOSHI\n\n# H\n\nHarshita Kalani <harshitakalani02@gmail.com> <95532771+HarshitaKalani@users.noreply.github.com>\n\n# J\n\nJaimin Godhani <112328542+Jai0401@users.noreply.github.com> Jai0401\n\nJames Gelok <jdgelok@gmail.com> James\n\nJaysukh Makvana <jaysukhmakvana2004@gmail.com> <111515433+Jaysukh-409@users.noreply.github.com>\n\nJordan Gallivan <115050475+Jordan-Gallivan@users.noreply.github.com> Jordan-Gallivan\n\n# K\n\nKaif Mohd <mdkaifprofession@gmail.com>\n\nKarthik Prakash <116057817+skoriop@users.noreply.github.com> skoriop\n\n# L\n\nLovelin Dhoni J B <100030865+lovelindhoni@users.noreply.github.com> Lovelin\n\n# M\n\nManvith M <148960168+manvith2003@users.noreply.github.com> Manvith\n\nMarcus Fantham <mfantham@users.noreply.github.com> Marcus\n\nMatt Cochrane <matthew.cochrane.eng@gmail.com> <mattisback@gmail.com>\n\nMihir Pandit <129577900+MSP20086@users.noreply.github.com> MSP20086\n\nMohammad Kaif <mdkaifprofession@gmail.com> <98884589+Kaif987@users.noreply.github.com>\nMohammad Kaif <mdkaifprofession@gmail.com> Kaif987\n\nMuhammad Haris <harriskhan047@outlook.com> <101793258+headlessNode@users.noreply.github.com>\nMuhammad Haris <harriskhan047@outlook.com> headlessNode\n\n# N\n\nNaresh Jagadeesan <naresh.naresh000@gmail.com> <37257700+Infinage@users.noreply.github.com>\n\nNaveen Kumar <stupiddint@gmail.com> naveen\n\nNishant Shinde <97207366+nishant-s7@users.noreply.github.com> nishant-s7\n\nNithin Katta <88046362+nithinkatta@users.noreply.github.com> KATTA NAGA NITHIN\n\n# O\n\nOri Miles <97595296+orimiles5@users.noreply.github.com> orimiles5\n\n# P\n\nPhilipp Burckhardt <pburckhardt@outlook.com> <1913638+Planeshifter@users.noreply.github.com>\nPhilipp Burckhardt <pburckhardt@outlook.com> Planeshifter\n\nPranav Goswami <goswami.4@iitj.ac.in> <85227306+Pranavchiku@users.noreply.github.com>\nPranav Goswami <goswami.4@iitj.ac.in> Pranav\n\nPranjal Jha <97080887+PraneGIT@users.noreply.github.com> PraneGIT\n\nPrashant Kumar Yadav <144602492+0PrashantYadav0@users.noreply.github.com> JoyBoy\n\nPratik Singh <97464067+Pratik772846@users.noreply.github.com> Pratik772846\n\nPratyush Kumar Chouhan <pratyushkumar0308@gmail.com> <98751013+bruno-noir@users.noreply.github.com>\nPratyush Kumar Chouhan <pratyushkumar0308@gmail.com> Pratyush\n\nPriyansh Prajapati <88396544+itsspriyansh@users.noreply.github.com> itsspriyansh\n\nPriyanshu Agarwal <113460573+AgPriyanshu18@users.noreply.github.com> AgPriyanshu18\n\nPushpendra Chandravanshi <pushpendrachandravanshi4@gmail.com> <56391001+Pushpendra766@users.noreply.github.com>\nPushpendra Chandravanshi <pushpendrachandravanshi4@gmail.com> Pushpendra766\n\n# R\n\nRaunak Kumar Gupta <raunakmodanwal321@gmail.com> <95216822+raunak-dev-edu@users.noreply.github.com>\nRaunak Kumar Gupta <raunakmodanwal321@gmail.com> raunak-dev-edu\n\nrei2hu <reimu@reimu.ws> <rei2hu@users.noreply.github.com>\n\nRejoan Sardar <119718513+Rejoan-Sardar@users.noreply.github.com> Rejoan-Sardar\n\nRicky Reusser <rsreusser@gmail.com> <rreusser@users.noreply.github.com>\nRicky Reusser <rsreusser@gmail.com> <572717+rreusser@users.noreply.github.com>\n\nRishav <115060907+rishav2404@users.noreply.github.com> RISHAV\n\nRobert Gislason <gztown2216@yahoo.com> rgizz\n\nRutam Kathale <138517416+performant23@users.noreply.github.com> performant23\n\nRyan Seal <splrk@users.noreply.github.com> Splrk\n\n# S\n\nSai Srikar Dumpeti <80447788+the-r3aper7@users.noreply.github.com> the-r3aper7\n\nSarthak Paandey <145528240+SarthakPaandey@users.noreply.github.com> SarthakPaandey\n\nShashank Shekhar Singh <shashankshekharsingh1205@gmail.com> <123410790+Shashankss1205@users.noreply.github.com>\nShashank Shekhar Singh <shashankshekharsingh1205@gmail.com> Shashankss1205\n\nShivam Ahir <11shivam00@gmail.com> Shivam\n\nShubham Mishra <shubh622005@gmail.com> <mishra.shubham5208@gmail.com>\nShubham Mishra <shubh622005@gmail.com> shubham\n\nSnehil Shah <snehilshah.989@gmail.com> <130062020+Snehil-Shah@users.noreply.github.com>\nSnehil Shah <snehilshah.989@gmail.com> Snehil-Shah\n\nSpandan Barve <contact@marsian.dev> <114365550+marsian83@users.noreply.github.com>\nSpandan Barve <contact@marsian.dev> marsian83\n\nstdlib-bot <noreply@stdlib.io> <82920195+stdlib-bot@users.noreply.github.com>\n\nStephannie Jiménez Gacha <steff456@hotmail.com> <steff456@users.noreply.github.com>\nStephannie Jiménez Gacha <steff456@hotmail.com> Stephannie Jimenez\nStephannie Jiménez Gacha <steff456@hotmail.com> Stephannie Jimenez Gacha\n\nSuraj Kumar <125961509+kumarsuraj212003@users.noreply.github.com> Suraj kuma\n\n# T\n\nTudor Pagu <104032457+tudor-pagu@users.noreply.github.com> tudor-pagu\n\nTufailahmed Bargir <142114244+Tufailahmed-Bargir@users.noreply.github.com> Tufailahmed-Bargir\n\n# U\n\nUtkarsh <http://utkarsh11105@gmail.com> <137638507+Ut-the-pro@users.noreply.github.com>\nUtkarsh <http://utkarsh11105@gmail.com> Ut-the-pro\n\nUtkarsh Raj <rajutkarsh2505@gmail.com> <49344502+rajutkarsh07@users.noreply.github.com>\nUtkarsh Raj <rajutkarsh2505@gmail.com> rajutkarsh07\nUtkarsh Raj <rajutkarsh2505@gmail.com> utkarsh_raj\n\n# V\n\nVaibhav Patel <98279986+noobCoderVP@users.noreply.github.com> ProCoderVP\n\nVarad Gupta <varadgupta21@gmail.com> <114755221+vr-varad@users.noreply.github.com>\nVarad Gupta <varadgupta21@gmail.com> vr-varad\n\nVivek Maurya <vm8118134@gmail.com> <155618190+vivekmaurya001@users.noreply.github.com>\nVivek Maurya <vm8118134@gmail.com> vivekmaurya001\n\n# Y\n\nYaswanth Kosuru <116426380+yaswanthkosuru@users.noreply.github.com> yaswanth\n\nYernar Yergaziyev <yernar.yergaziyev@erg.kz> <yernar707@users.noreply.github.com>\nYernar Yergaziyev <yernar.yergaziyev@erg.kz> <54137699+yernar707@users.noreply.github.com>\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 2.7685546875,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Files #\n#########\nCITATION.cff\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nCONTRIBUTORS\nFAQ.md\nTODO.md\nROADMAP.md\npackage.json.copy\n\n# TODO: once we start compiling native add-ons, we need to remove this exclusion...\nMakefile\n\n# Directories #\n###############\n.circleci/\n.github/\n.well-known/\n**/benchmark/\n**/build/\n**/dist/\n**/examples/\nreports/\nsupport/\n**/test/\n**/tmp/\nworkshops/\n\n# Ignore dev dependency directories:\n/deps/*\n/deps/checksums/*\n/deps/test/*\n\n!/deps/checksums/electron_*\n!/deps/checksums/openblas_*\n\n!/deps/test/electron*\n!/deps/test/openblas*\n\n# Only top-level directories:\n/etc/\n/docs/*\n!/docs/types/*\n/tools/\n\n# Compiled source #\n###################\n*.com\n*.class\n*.dll\n*.o\n*.so\n*.slo\n*.lo\n*.obj\n*.dylib\n*.lai\n*.la\n*.a\n*.lib\n*.ko\n*.elf\n*.node\n\n# Precompiled headers #\n#######################\n*.gch\n*.pch\n\n# Executables #\n###############\n*.exe\n*.out\n*.app\n\n# Packages #\n############\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n\n# Logs and databases #\n######################\n*.log\n*.sql\n*.sqlite\n\n# OS generated files #\n######################\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\nThumbs.db\nDesktop.ini\n\n# Temporary files #\n###################\n*~\n\n# Node.js #\n###########\n.npmignore\n**/node_modules/\n\n# TypeScript #\n##############\ntsconfig.json\ntslint.json\n*.tsbuildinfo\n\n# Matlab #\n##########\n*.asv\n*.mex*\n\n# Fortran #\n###########\n*.mod\n\n# R #\n#####\n.Rhistory\n.Rapp.history\n.Rproj.user/\n\n# Python #\n##########\n__pycache__/\n*.py[cod]\n*$py.class\n*.egg-info/\n.ipynb_checkpoints\nsetup.cfg\nsetup.py\n\n# TeX #\n#######\n*.aux\n*.lof\n*.log\n*.lot\n*.fls\n*.out\n*.toc\n*.dvi\n*-converted-to.*\n*.bbl\n*.bcf\n*.blg\n*-blx.aux\n*-blx.bib\n*.brf\n*.run.xml\n*.fdb_latexmk\n*.synctex\n*.synctex.gz\n*.synctex.gz(busy)\n*.pdfsync\n*.alg\n*.loa\nacs-*.bib\n*.thm\n*.nav\n*.snm\n*.vrb\n*.acn\n*.acr\n*.glg\n*.glo\n*.gls\n*-concordance.tex\n*.tikz\n*-tikzDictionary\n*.idx\n*.ilg\n*.ind\n*.ist\n\n# Git #\n#######\n.git*\n.mailmap\n\n# Visual Studio #\n#################\n.vscode/\njsconfig.json\n\n# Utilities #\n#############\n.jshintrc\n.jshintignore\n.eslintrc*\n.eslintignore\n\n.remarkignore\n\n.pylintrc\n.pycodestyle\n.pydocstyle\n\nappveyor.yml\nazure-pipelines.yml\ncircle.yml\n.codeclimate.yml\n.codecov.yml\n.travis.yml\n\n.editorconfig\n\n.rtlintrc\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.880859375,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Configuration for [npm][1].\n#\n# [1]: https://docs.npmjs.com/files/npmrc\n\n# Disable the creation of a lock file:\npackage-lock = false\nshrinkwrap = false\n\n# Disable automatically \"saving\" dependencies on install:\nsave = false\n\n# Do not generate provenance metadata:\nprovenance = false\n"
        },
        {
          "name": ".remarkignore",
          "type": "blob",
          "size": 0.837890625,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Directories #\n###############\nbuild/\ndownloads/\nreports/\ntmp/\n.git\n\n# Only the top-level node_modules directory:\n/node_modules/\n\n# Nested node_modules directories below the project node_modules directory:\nlib/node_modules/**/node_modules/\n"
        },
        {
          "name": ".rtlintrc",
          "type": "blob",
          "size": 0.994140625,
          "content": "{\n\t\"@stdlib/_tools/repl-txt/rules/doctest\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/code-semicolons\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/has-parameters-section\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/has-alias-signature\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/interface-spacing\": [ \"error\", 2 ],\n\t\"@stdlib/_tools/repl-txt/rules/line-length\": [ \"error\", 80 ],\n\t\"@stdlib/_tools/repl-txt/rules/match-signature\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/resolvable-aliases\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/section-order\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/section-heading-style\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/see-also\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/tag-description-style\": [ \"error\", {\n\t\t\"whitelist\": [\n\t\t\t\"ndarray\",\n\t\t\t\"p-value\",\n\t\t\t\"rehype\",\n\t\t\t\"remark\",\n\t\t\t\"stdlib\",\n\t\t\t\"x-axis\",\n\t\t\t\"y-axis\",\n\t\t\t\"x-coordinate\",\n\t\t\t\"y-coordinate\"\n\t\t]\n\t}],\n\t\"@stdlib/_tools/repl-txt/rules/tag-typedef-typos\": \"error\",\n\t\"@stdlib/_tools/repl-txt/rules/whitelisted-sections\": \"error\"\n}\n"
        },
        {
          "name": ".tours",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 4.11328125,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2021 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# After changing this file, check it on:\n#\n#   https://config.travis-ci.com/explore\n\n# Specify the programming language:\nlanguage: node_js\n\n# Specify the host operating system:\nos: linux\n\n# Specify the Linux distribution:\ndist: xenial\n\n# Specify the list of Node.js versions on which we want to build:\nnode_js:\n  # Node.js\n  - '16'\n\n# Specify which branches should trigger builds:\nbranches:\n  only:\n    - develop\n\n# Configure Git:\ngit:\n  # Set the clone depth, making sure to account for queued builds:\n  depth: 100\n\n# Compiling native modules for io.js v3.x.x or Node.js >=v4.0.0 requires a C++11 standard-compliant compiler. Specifically, either gcc >=4.8 or clang >=3.5. Electron requires a virtual display server (xvfb) on Linux.\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - binutils\n      - gcc-9\n      - gcc-9-multilib\n      - g++-9\n      - g++-9-multilib\n      - gfortran-9\n      - gfortran-9-multilib\n      - xvfb\n      - unzip\n\n# Specify environment variables:\nenv:\n  # Environment variables common to all jobs:\n  global:\n    - FC=gfortran\n    - FORTRAN_COMPILER=gfortran\n    - CC=gcc\n    - C_COMPILER=gcc\n    - CXX=g++\n    - CXX_COMPILER=g++\n    - LINKER=g++\n    - NODE_PATH=\"$TRAVIS_BUILD_DIR/lib/node_modules\"\n\n  # Environment variables used to construct the build matrix:\n  jobs:\n    - BUILD_TASK='test-npm-install'\n\n# Configure the build matrix:\njobs:\n  # Flag to immediately finish a build if any one of the jobs fails:\n  fast_finish: true\n\n# Define steps to be performed before running installation steps:\nbefore_install:\n  # Perform platform-specific initialization:\n  - mkdir -p $HOME/bin;\n    ln -s /usr/bin/gcc-9 $HOME/bin/gcc;\n    ln -s /usr/bin/g++-9 $HOME/bin/g++;\n    ln -s /usr/bin/gfortran-9 $HOME/bin/gfortran;\n\n  # Configure the virtual display server (needed for electron):\n  - export DISPLAY=':99.0'\n  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &\n\n  # Print debug info:\n  - echo \"$($CC --version)\"\n  - echo \"$($CXX --version)\"\n  - echo \"$($FC --version)\"\n\n  - git --version\n\n  - file $(which node)\n  - node --version\n  - node -p 'process.platform + \"@\" + process.arch'\n\n  - npm --version\n  - npm config get registry\n\n  # Run pre-install tasks:\n  - chmod +x ./tools/ci/travis/before_install\n  - \"./tools/ci/travis/before_install\"\n\n# Define installation steps:\ninstall:\n  # Run install tasks via `travis_retry` to address occasional `npm install` failures (see https://docs.travis-ci.com/user/common-build-problems/#travis_retry):\n  - \"travis_retry make FC=$FC FORTRAN_COMPILER=$FORTRAN_COMPILER install\"\n\n# Define the build steps:\nscript:\n  - chmod +x ./tools/ci/travis/script\n  - \"./tools/ci/travis/script $BUILD_TASK\"\n\n# Define the steps to run after completing the build steps:\nafter_script:\n  - chmod +x ./tools/ci/travis/after_script\n  - \"./tools/ci/travis/after_script\"\n\n# Define notifications:\nnotifications:\n  slack:\n    secure: YEAbWYmphiLPgeG1eTG07nulUlxI7s2qIGYECX0GM/OxtR+uQSQCKR5dBhW67ng1sILiUh3vy/elAbdtSKGNmue50MD5h1zY9l2CgYrspZ/b8Q0jryaYfxdkX4QKKj75dak5dD+Ax+tdUpCPQIXCyDN6xT7G7eSmHNeWL4IjCrNGy1T+pflp7QFHLia6CdxIlTj5PE8OoGwcMrPNIC3dmy+rFWxHMx+3GfZkd3UCgCwAmaYLgharQ5NJN3Ucuw/m+/TK8jxTqLoe4mroQDLfZIzgqkwE0Jty9hd/TxhMI8X8AWEfY8xTRKe3pN4fnv2W37ICG2Oru9FPJ8xb3yeJl7AMTHZSFeLTR2HJldQ7Y7u0HRFyqNxKVfzfX0hRhlHyV4REtXd3uJcHuiQqlYJHQHfQ0Z00eYIHolYnXAlO1s8OiW8L+6RYCy8VwgLMlM0o37PfcwWFpj1pZXx3ZjndBemRmS3lxyokp+bfwkVWRIdBC9b27HVTV8lDSPZCLcmuR3GaaE8WGFdyjGyKiEfjT4/utHMT7SenICkqiJNInX69os5M/TOqDESeI6g6t7cYCNEystL5+sAzwAxyud28m336F58nC1e8UiwyGF1Kv57i7Lvgtryn4MhGMEzLRmlnyMs0jlU3gH2VORL9Uoqc5FASN1+XJhsqWJ0dzzHHQKA=\n"
        },
        {
          "name": ".well-known",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.8037109375,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2018 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# CHANGELOG\n\n> Project changelog.\n\nSee [GitHub Releases][stdlib-github-releases] for the changelog.\n\n<section class=\"links\">\n\n[stdlib-github-releases]: https://github.com/stdlib-js/stdlib/releases\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.5712890625,
          "content": "cff-version: 1.2.0\ntitle: stdlib\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\n\ntype: software\n\nauthors:\n  - name: The Stdlib Authors\n    url: https://github.com/stdlib-js/stdlib/graphs/contributors\n\nrepository-code: https://github.com/stdlib-js/stdlib\nurl: https://stdlib.io\n\nabstract: |\n  Standard library for JavaScript and Node.js.\n\nkeywords:\n  - JavaScript\n  - Node.js\n  - TypeScript\n  - standard library\n  - scientific computing\n  - numerical computing\n  - statistical computing\n\nlicense: Apache-2.0 AND BSL-1.0\n\ndate-released: 2016\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 10.5810546875,
          "content": "<!--\n\n@license CC-BY-SA-4.0\n\n-->\n\n# Code of Conduct\n\n> A Code of Conduct to foster a more open, positive, welcoming, and friendly community.\n\nThis project is not simply a collection of technologies, but also a community.\n\nThis Code of Conduct outlines (1) our expectations for everyone who participates inside our community, (2) our expectations for everyone who participates outside our community when an individual is representing the project and/or our community (including, but not limited to, conferences, trade shows, other public events, mailing lists, social media, IRC channels, and GitHub repositories), and (3) the consequences for unacceptable behavior.\n\nAnyone who violates this Code of Conduct will be reprimanded and possibly banned from the community.\n\n## Scope\n\nWe expect all community participants, including paid and unpaid contributors, sponsors, users, and affiliated members, to abide by this Code of Conduct at **all** times in **all** community venues, online and in person, and in one-on-one communications.\n\nThis Code of Conduct covers the usage of the project, as well as the project website, project related events, and any other affiliated services. This Code of Conduct and its related policies also applies to behavior **outside** the scope of community activities, including but not limited to GitHub repositories, IRC channels, social media, mailing lists, and public events, when such behavior has the potential to adversely affect the safety and well-being of community members either through threats of violence or targeted harassment as pertains to gender identity, sexual orientation, ability, ethnicity, religion, age, physical appearance, body size, race, or other personal characteristics.\n\nThis Code of Conduct is in addition to, and does **not** in any way nullify or invalidate, any other terms or conditions related to use of the project.\n\nAny disputes involving definitions of contentious terms such as \"discriminatory\", \"hateful\", or \"confusing\" will be decided at the sole discretion of the project owners.\n\n## Expected Behavior\n\nWe are committed to providing a friendly, safe, and welcoming environment for all, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality, or other personal characteristic.\n\nWe ask that you respect that people have differences of opinion regarding technical choices, and that every design or implementation choice carries a trade-off and numerous costs. There is seldom a single right answer. A difference of technology preferences is **never** a license to be rude.\n\nThe following behaviors are **expected** of **all** community members:\n\n-   Be careful in the words you choose.\n-   Use welcoming and inclusive language.\n-   Refrain from demeaning, discriminatory, or harassing behavior and speech.\n-   Avoid sarcasm in **any** form. What is considered benign by you is seen as caustic by others. \n-   Be respectful of differing viewpoints and experiences.\n-   Resist the urge to be defensive if someone takes issue with something you said or did. Even if you feel misinterpreted or unfairly accused, in all likelihood, you probably could have communicated better. **Remember**: it is **your** responsibility to make fellow community members comfortable and feel respected.\n-   Keep unstructured critique to a minimum. If you have solid contribution ideas, make a fork, experiment, and evaluate accordingly.\n-   Gracefully accept constructive criticism.\n-   Attempt collaboration before conflict.\n-   Always be professional.\n-   Show empathy toward other community members.\n-   Focus on what is best for the community.\n\n## Unacceptable Behavior\n\nThe following behaviors are considered harassment, are unacceptable within our community, and will **not** be tolerated:\n\n-   Personal insults.\n-   Deliberate intimidation.\n-   Harmful or prejudicial verbal or written comments related to gender identity, sexual orientation, ability, ethnicity, religion, age, physical appearance, body size, race, or other personal characteristics.\n-   Deliberate \"outing\" of any aspect of a person's identity without their consent, except as necessary to protect others from intentional abuse.\n-   Unwelcome comments regarding a person's lifestyle choices and practices, including those related to food, health, parenting, drugs, and employment.\n-   Deliberate misgendering. This includes deadnaming or persistently using a pronoun that does not correctly reflect a person's gender identity.\n-   Posting or displaying sexually explicit or violent material.\n-   Posting or threatening to post personally identifying information (\"doxing\").\n-   Stalking or following (online or in person).\n-   Any spamming, trolling, flaming, baiting, or other attention-stealing behavior.\n-   Harassing photography or recording, including logging online activity for harassment purposes.\n-   Violence, threats of violence (physical or psychological), or violent language.\n-   Public or private harassment.\n-   Unwelcome sexual attention, including gratuitous or off-topic sexual images or behavior.\n-   Physical or simulated contact without consent or after a request to stop.\n-   Continued one-on-one communication after requests to cease.\n-   Publication of non-harassing private communication.\n-   Sustained disruption of discussion.\n-   Any other conduct which could reasonably be considered inappropriate in a professional setting.\n-   Advocating for, or encouraging, any of the above behavior, including but not limited to \"liking\", \"starring\", \"retweeting\", or any other form of promotion.\n\nNote that your free speech is not **our** problem. That this policy is a restrictive political stance is intentional. If you want different rules, go create a separate project.\n\n## Enforcement\n\nUnacceptable behavior from any community member, including users, sponsors, project owners, and those with decision-making authority, will **not** be tolerated. Anyone asked to stop unacceptable behavior is expected to comply **immediately**.\n\nIf an individual engages in unacceptable behavior, the project owners may take **any** action they deem appropriate, up to and including a temporary ban or permanent ban from the community without warning.\n\nNote that any individual found to have previously engaged in abusive behavior in **any** form inside **or** outside the community should expect **zero** tolerance for **any** violation of this Code of Conduct.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\nProject owners are held to a higher standard than other community members. If an owner creates an inappropriate situation, they should expect **much less** leeway than others.\n\n## Reporting\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the [reporting team][reporting]. In your report, please include\n\n-   Your contact information.\n-   Names (real, nicknames, or pseudonyms) of any individuals involved. If available, any additional witnesses.\n-   An account of what occurred, and if you believe the incident is ongoing.\n-   If available, a public record (e.g., a link to a mailing list archive, public IRC logger, Tweet, or issue thread).\n-   Any prior records of behavior either inside or outside the community which can be used to establish prior precedent.\n-   Any additional information that may be helpful.\n\nAll complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate. Complaint recipients are obligated to maintain confidentiality with regard to the reporter of an incident. \n\nIf an accused person is part of the reporting team, they will recuse themselves from handling your incident. If the reporter is a reporting team member, the complaint will be handled by a different member of the reporting team.\n\nNote that we reserve the right to reject any report we believe to have been made in bad faith. Reports intended to silence legitimate criticism or differences in opinion may be ignored without response.\n\nFurther details of specific enforcement policies may be posted separately.\n\n## Grievances\n\nPublicly complaining about repercussions is **not** tolerated. All complaints should be handled through **private** channels with project owners.\n\nIf you feel you have been falsely or unfairly accused of violating this Code of Conduct, you should contact the project owners. We will do our best to ensure that your grievance is handled appropriately.\n\nNote that we prioritize marginalized people's safety over privileged people's comfort. We will **not** act on complaints regarding:\n\n-   \"Reverse\"-isms, including \"reverse racism,\" \"reverse sexism,\" and \"cisphobia\"\n-   Reasonable communication of boundaries, such as \"leave me alone,\" \"go away,\" or \"I'm not discussing this with you.\"\n-   Refusal to explain or debate social justice concepts.\n-   Communicating in a \"tone\" you do not find congenial.\n-   Criticizing racist, sexist, cissexist, or otherwise oppressive behavior or assumptions.\n\n## Changes\n\nThis is a living document and may be updated over time. Refer to the [git history for this document][git-history] to view changes.\n\n## Attribution\n\nThis Code of Conduct borrows heavily from \n\n-   [npm Code of Conduct][npm-code-of-conduct]\n-   [#node.js IRC policy on trolling][nodejs-irc]\n-   Stumptown Syndicate [Citizen Code of Conduct][citizen-code-of-conduct]\n-   Geek Feminism [Code of Conduct][geek-feminism-code-of-conduct]\n-   [Contributor Covenant][contributor-covenant]\n-   [Open Code of Conduct][open-code-of-conduct]\n-   [The Rust Code of Conduct][rust-code-of-conduct]\n\n## License\n\nThis document may be reused under a [Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license][cc-by-sa-4.0].\n\n<section class=\"links\">\n\n[git-history]: https://github.com/stdlib-js/stdlib/commits/develop/CODE_OF_CONDUCT.md\n\n[npm-code-of-conduct]: https://docs.npmjs.com/policies/conduct\n\n[nodejs-irc]: https://blog.izs.me/2012/08/policy-on-trolling\n\n[citizen-code-of-conduct]: https://github.com/stumpsyn/policies/blob/7caa4699ba74e341a46b3266d4610af477ba2c3d/citizen_code_of_conduct.md\n\n[geek-feminism-code-of-conduct]: https://geekfeminismdotorg.wordpress.com/about/code-of-conduct/\n\n[contributor-covenant]: https://www.contributor-covenant.org/version/2/1/code_of_conduct/code_of_conduct.md\n\n[open-code-of-conduct]: https://github.com/todogroup/opencodeofconduct\n\n[rust-code-of-conduct]: https://www.rust-lang.org/policies/code-of-conduct\n\n[cc-by-sa-4.0]: https://creativecommons.org/licenses/by-sa/4.0/\n\n[reporting]: mailto:kgryte@gmail.com\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 22.3671875,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2018 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# Contribution Guidelines\n\n> Project contribution guidelines.\n\n## Introduction\n\nWoot woot! If you are new to stdlib, welcome! And thanks for your interest! While this guide focuses on technical development, if you are looking to contribute to the project but are non-technical, you can still contribute! For example, you can contribute by filing issues, writing RFCs (feature requests), updating documentation, providing build and infrastructure support, offering [funding][open-collective-stdlib], and helping market and promote the project, among other things. Every bit helps, and we are grateful for your time and effort!\n\n## Code of Conduct\n\n**Before** contributing, read the [Code of Conduct][stdlib-code-of-conduct], which details the _bare minimum_ behavior expectations that the project requires of its contributors.\n\n## Contributions\n\n### Issues\n\nWhen filing new [issues][stdlib-issues] and commenting on existing [issues][stdlib-issues] on this repository, please ensure that discussions are related to concrete technical issues. For general questions and help, consult the [FAQ][stdlib-faq] and visit the [Gitter][stdlib-gitter] channel.\n\n**Before** filing a potential bug report,\n\n-   Search for existing [issues][stdlib-issues] and [pull requests][stdlib-pull-requests].\n-   Try some debugging techniques to help isolate the problem, including logging inputs and outputs.\n\nIf the source of the problem is a third party package, file a bug report with the relevant package author, rather than on this repository.\n\nWe want to fix all issues as soon as possible; however, before fixing a bug, we need to reproduce and confirm the errant behavior. Accordingly, in order to help us reproduce bugs, we require that you provide a minimal reproduction. A minimal reproduction provides us with important information and helps us avoid having to ask follow-up questions and wait for your response.\n\nA minimal reproduction allows us to more quickly confirm a bug (or identify a potential coding problem) and confirm that we are fixing the right problem.\n\nWe require a minimal reproduction to save maintainers' time and ultimately to fix more bugs. Often, developers may find coding problems in their original code while preparing a minimal reproduction. We certainly understand that extracting essential bits of code from a larger codebase can be difficult, but we really need to isolate the problem before we can fix it.\n\nUnfortunately, we are not able to investigate or fix bugs without a minimal reproduction. If a bug report does not include a minimal reproduction, the issue will be automatically closed.\n\nWhen filing an [issue][stdlib-issues], provide the following, where possible:\n\n-   A description of the issue.\n-   Links to any related issues.\n-   The full error message, including the stacktrace.\n-   The sequence of steps required to reproduce the issue.\n-   A minimal working example (i.e., the smallest chunk of code that triggers the error.) Ideally, the code can be pasted into a REPL or run from a source file. If the code is larger than `100` lines, consider creating a [gist][github-gist].\n-   The expected results.\n-   List of affected environments (e.g., browser, browser version, `npm` version, Node.js version, operating system, and stdlib version).\n\nWhen pasting code blocks or output, use triple backticks to enable proper formatting. Surround inline code with single backticks. For other Markdown formatting tips and trips, see GitHub's [Markdown guide][github-markdown-guide].\n\nBe aware that the `@` symbol tags users on GitHub, so **always** surround package names with backticks (e.g., `@stdlib/utils/copy`).\n\n### Code\n\n> By contributing code to the project, you are agreeing to release it under the project [license][stdlib-license].\n\n**Before** contributing code, be sure to\n\n-   read and understand the [licensing terms][stdlib-license].\n-   read and understand the [style guides][stdlib-style-guides].\n-   read and understand the [doctest guide][stdlib-doctest].\n\nFor instructions on how to setup and configure your environment, be sure to\n\n-   read and follow the [development guide][stdlib-development].\n\nIf you have found a bug that you would like to fix,\n\n-   file an [issue][stdlib-issues] on the project GitHub issue [tracker][stdlib-issues] describing the bug as instructed [above](#issues).\n-   wait for feedback.\n-   submit a [pull request][stdlib-pull-requests] with your proposed changes.\n\nIf you want to contribute a new feature or a breaking change to stdlib, be sure to\n\n-   consult the [Gitter][stdlib-gitter] channel to discuss ideas and to gather feedback as to whether a feature would be better developed as an external package. Discussing the design upfront helps ensure that we're ready to accept to your work.\n-   write an RFC (request for comments) detailing the proposed change and submit as an issue on the project GitHub issue tracker.\n-   wait for RFC approval.\n-   submit a [pull request][stdlib-pull-requests], making sure to adhere to the guidance set forth in the RFC.\n\nIf you want to contribute a new package, be sure to\n\n-   read and follow the [package development guide][stdlib-packages].\n-   read and follow the [REPL text guide][stdlib-repl-text].\n\nIf you are unfamiliar with [Git][git], the version control system used by GitHub and this project,\n\n-   see the [Git][git] docs.\n-   try a tutorial, such as the [tutorial][github-git-tutorial] provided by GitHub.\n\nNext, take a look around the project, noting the style and organization of documentation, tests, examples, benchmarks, and source implementations. Consistency is highly **prioritized** within stdlib. Thus, the more you are able to match and adhere to project conventions and style, the more likely your contribution will be accepted. While we have done our best to automate linting and style guidelines, project automation is not perfect and cannot adequately capture the inevitable exceptions and nuance to many rules. In short, the more you study existing practice, the better prepared you will be to contribute to stdlib.\n\n#### Step 0: GitHub\n\nCreate a [GitHub account][github-signup]. The project uses GitHub exclusively for hosting source code, managing issues and pull requests, triggering continuous integration, and reporting.\n\n#### Step 1: Fork\n\n[Fork][github-fork] the repository on GitHub and clone the repository to your local machine.\n\n<!-- run-disable -->\n\n```bash\n$ git clone https://github.com/<username>/stdlib.git\n```\n\nwhere `<username>` is your GitHub username. When cloning, avoid cloning to a directory having spaces in its path. Because this project relies heavily on `make`, any spaces in the directory path will lead to errors and inevitable frustration.\n\n```text\n// Bad:\n/home/foo/bar/beep boop/stdlib\n\n// Good:\n/home/foo/bar/beep_boop/stdlib\n```\n\nThe repository has a large commit history, leading to slow download times. You can reduce the download time by limiting the clone [depth][git-clone-depth].\n\n<!-- run-disable -->\n\n```bash\n$ git clone --depth=<depth> https://github.com/<username>/stdlib.git\n```\n\nwhere `<depth>` refers to the number of commits you want to download (as few as `1` and as many as the entire project history). **However, you should be aware that limiting clone depth can cause difficulties later when attempting to rebase a pull request on the latest development branch.** For simple pull requests, limiting clone depth is likely to work out fine; however, for more complex pull requests, including those depending on upstream changes, limiting clone depth may be a source of Git errors (e.g., due to unrelated Git histories), and, thus, you may be forced to re-clone the repository and start over.\n\nIf you are behind a firewall, you may need to use the `https` protocol, rather than the `git` protocol.\n\n<!-- run-disable -->\n\n```bash\n$ git config --global url.\"https://\".insteadOf git://\n```\n\nOnce you have finished cloning the repository into the destination directory, you should see the folder `stdlib`. To proceed with configuring your environment, navigate to the project folder.\n\n<!-- run-disable -->\n\n```bash\n$ cd stdlib\n```\n\nAnd finally, add an `upstream` [remote][git-remotes] to allow syncing changes between this repository and your local version.\n\n<!-- run-disable -->\n\n```bash\n$ git remote add upstream git://github.com/stdlib-js/stdlib.git\n```\n\n#### Step 2: Initial Setup\n\nInstall dependencies.\n\n<!-- run-disable -->\n\n```bash\n$ make install\n```\n\nInitialize Git hooks to enable automated development processes to run prior to authoring commits and pushing changes.\n\n<!-- run-disable -->\n\n```bash\n$ make init\n```\n\nNote that `make init` only needs to be run once; however, we repeat it below as **not** running it is a common omission by new contributors.\n\n#### Step 3: Branch\n\nFor modifications intended to be included in stdlib, create a new local branch.\n\n<!-- run-disable -->\n\n```bash\n$ git checkout -b <branch>\n```\n\nwhere `<branch>` is the branch name. Both the `master` and `develop` branches for the main stdlib project are protected, and direct modifications to these branches will **not** be accepted. Instead, all contributions should be made on non-master and non-develop local branches, including documentation changes and other non-code modifications. See the project [branching guide][stdlib-branching] for additional guidance.\n\n#### Step 4: Write\n\nStart making your changes and/or implementing the new feature. Any text you write should follow the [text style guide][stdlib-style-guides-text], including comments and API documentation.\n\n#### Step 5: Commit\n\nEnsure that you have configured [Git][git] to know your name and email address.\n\n<!-- run-disable -->\n\n```bash\n$ git config --global user.name \"Jane Doe\"\n$ git config --global user.email \"jane.doe@example.com\"\n```\n\nAdd changed files and commit.\n\n<!-- run-disable -->\n\n```bash\n$ git add files/which/changed\n$ git commit\n```\n\nWhen writing commit messages, follow the Git [style guide][stdlib-style-guides-git]. Adherence to project commit conventions is necessary for project automation which automatically generates release notes and changelogs from commit messages.\n\n#### Step 6: Sync\n\nTo incorporate recent changes from the `upstream` repository during development, you should [rebase][git-rebase] your local branch, reapplying your local commits on top of the current upstream `HEAD`. This procedure is in contrast to performing a standard [merge][git-merge], which may interleave development histories. The rationale is twofold:\n\n1.  interleaved histories make [squashing][git-rewriting-history] commits more difficult.\n2.  a standard merge increases the risk of incomplete/broken commits appearing in the [Git][git] history.\n\nAn ideal commit history is one in which, at no point in time, is the project in a broken state. While not always possible (mistakes happen), striving for this ideal facilitates time travel and software archeology.\n\n<!-- run-disable -->\n\n```bash\n$ git fetch upstream\n$ git rebase upstream/develop\n```\n\n#### Step 7: Test\n\nTests should accompany **all** bug fixes and features. For guidance on how to write tests, consult existing tests within the project.\n\n**Before** submitting a [pull request][github-pull-request] to the `upstream` repository, ensure that all tests pass, including linting. To run tests locally, consult the guidance [below](#writing-tests).\n\nIf [Git][git] hooks have been enabled,\n\n<!-- run-disable -->\n\n```bash\n$ make init\n```\n\nlinting should be automatically triggered prior to each commit, and test execution should be automatically triggered prior to each push.\n\nAny [pull requests][github-pull-request] which include failing tests and/or lint errors will **not** be accepted.\n\n#### Step 8: Push\n\nPush your changes to your remote GitHub repository.\n\n<!-- run-disable -->\n\n```bash\n$ git push origin <branch>\n```\n\nwhere `<branch>` is the name of your branch.\n\n#### Step 9: Pull Request\n\nOnce your contribution is ready to be incorporated in the `upstream` repository, open a [pull request][github-pull-request] against the `develop` branch. One or more project contributors will review the contribution, provide feedback, and potentially request changes.\n\n> Receiving feedback is the most **important**, and often the most **valuable**, part of the submission process. Don't get disheartened!\n\nTo make changes to your [pull request][github-pull-request], make changes to your branch. Each time you push changes to your forked repository, GitHub will automatically update the [pull request][github-pull-request].\n\n<!-- run-disable -->\n\n```bash\n$ git add files/which/changed\n$ git commit\n$ git push origin <branch>\n```\n\nNote that, once a [pull request][github-pull-request] has been made (i.e., your local repository commits have been pushed to a remote server), you should **not** perform any further [rewriting][git-rewriting-history] of [Git][git] history. You can, however, use Git's [`squash!`][git-commit-squash] or [`fixup!`][git-commit-fixup] to convey that a commit is intended to be squashed into another commit. For example, to create a fix up on the last commit\n\n<!-- run-disable -->\n\n```bash\n$ git commit --fixup HEAD ...\n```\n\nor a specific commit\n\n<!-- run-disable -->\n\n```bash\n# Find the commit SHA:\n$ git log\n\n# Create a fix up:\n$ git commit --fixup <COMMIT_SHA> ...\n```\n\nAlternatively, you can also create a new commit with a commit message starting with `fixup! <commit header>` followed by the commit header of the commit being fixed up. For example,\n\n<!-- run-disable -->\n\n```bash\n$ git commit -m \"fixup! feat: add support for computing the absolute value\"\n```\n\nIf the history needs modification, a contributor will modify the history during the merge process. The rationale for **not** rewriting public history is that doing so invalidates the commit history for anyone else who has pulled your changes, thus imposing additional burdens on collaborators to ensure that their local versions match the modified history.\n\nIn the event that you need to pull in changes from the `upstream` repository after having pushed changes to your remote repository (e.g., to incorporate fixes unrelated to your work in order to address CI failures, etc), perform a standard [merge][git-merge].\n\n```bash\n$ git pull upstream develop\n```\n\n#### Step 10: Land\n\nAfter any changes have been resolved and continuous integration tests have passed, a contributor will approve a [pull request][github-pull-request] for inclusion in the project. Once merged, the [pull request][github-pull-request] will be updated with the merge commit, and the [pull request][github-pull-request] will be closed.\n\nNote that, in most cases during the merge process, multiple commits will be [squashed][git-rewriting-history] into a single commit.\n\n#### Step 11: Celebrate\n\n**Congratulations**! You are an official contributor to stdlib! Thank you for your hard work and patience!\n\n## Notes\n\n### GitHub\n\n-   When linking to specific lines of code in an issue or a pull request, hit the `y` key while viewing a file on GitHub. Doing so reloads the page with a URL that includes the specific version of the file you are viewing. This ensures that, when you refer to specific lines, these same lines can be easily viewed in the future, even if the content of the file changes.\n-   GitHub does not send notifications to project maintainers when you push a commit and update a [pull request][github-pull-request], so be sure to comment on the pull request thread to inform reviewers that you have made changes and request another review using the GitHub UI.\n\n### Writing Tests\n\n> By contributing tests to the project, you are agreeing to release it under the project [license][stdlib-license].\n\nThe project can **never** have enough tests. To address areas lacking sufficient test coverage,\n\n1.  View the latest [coverage report][stdlib-code-coverage].\n\n2.  Browse the source files and find untested functionality highlighted in red.\n\n3.  Locate the package containing the source file in your forked repository.\n\n4.  Add tests to the package test file(s).\n\n5.  To run package tests,\n\n    <!-- run-disable -->\n\n    ```bash\n    $ make TESTS_FILTER=\".*/<pattern>/.*\" test\n    ```\n\n    where `<pattern>` is a pattern matching a particular path. For example, to test the base math `sin` package\n\n    <!-- run-disable -->\n\n    ```bash\n    $ make TESTS_FILTER=\".*/math/base/special/sin/.*\" test\n    ```\n\n    where the pattern `.*/math/base/special/sin/.*` matches any test file whose absolute path contains `math/base/special/sin`.\n\n6.  To generate a test coverage report,\n\n    <!-- run-disable -->\n\n    ```bash\n    $ make TESTS_FILTER=\".*/<pattern>/.*\" test-cov\n    $ make view-cov\n    ```\n\n    which opens the coverage report in your default web browser.\n\n7.  Submit the test as a [pull request][github-pull-request].\n\nNote that, for contributions targeting C implementations, you'll need to first compile the native add-on which provides the bridge between JavaScript and C (assuming that the package has a native add-on binding).\n\n```bash\n$ make install-node-addons NODE_ADDONS_PATTERN=\"math/base/special/sin\"\n```\n\nwhere the pattern `math/base/special/sin` (note the differences from the filter pattern above!) matches any add-on whose absolute path contains `math/base/special/sin`.\n\nOnce the add-on is compiled, you can follow steps 5-7 above.\n\n### Writing Documentation\n\n> By contributing documentation to the project, you are agreeing to release it under the project [license][stdlib-license].\n\nProject documentation is localized within each package. Similar to code, you should modify documentation using [Git][git]. Provided you have followed the [development guide][stdlib-development] and enabled [Git][git] hooks,\n\n<!-- run-disable -->\n\n```bash\n$ make init\n```\n\nmodified Markdown files are automatically linted prior to each commit. Any changes to documentation files should be free of lint errors. If a [pull request][github-pull-request] includes lint errors, the pull request will **not** be accepted.\n\n### Continuous Integration\n\nOpening a [pull request][github-pull-request] automatically triggers a continuous integration build. Each pull request update queues an additional build. If a pull request has more than one build queued, only the most recent build in the queue is run.\n\nOnly a project administrator can manually trigger a build.\n\n## Developer's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n-   (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or\n-   (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or\n-   (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it.\n-   (d) I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.\n\n## Conclusion\n\nPhew. While the above may be a lot to remember, even for what seem like minor changes, eventually it becomes routine and part of the normal development flow. Part of the motivation for enforcing process is to ensure that all code contributions meet a certain quality threshold, thus helping reviewers focus less on non-substantive issues like style and failing tests and more on substantive issues such as contribution content and merit. Know that your patience, hard work, time, and effort are greatly appreciated!\n\n<section class=\"links\">\n\n[stdlib-code-of-conduct]: https://github.com/stdlib-js/stdlib/blob/develop/CODE_OF_CONDUCT.md\n\n[stdlib-license]: https://raw.githubusercontent.com/stdlib-js/stdlib/develop/LICENSE\n\n[stdlib-style-guides]: https://github.com/stdlib-js/stdlib/blob/develop/docs/style-guides\n\n[stdlib-style-guides-text]: https://github.com/stdlib-js/stdlib/blob/develop/docs/style-guides/text\n\n[stdlib-style-guides-git]: https://github.com/stdlib-js/stdlib/blob/develop/docs/style-guides/git\n\n[stdlib-doctest]: https://github.com/stdlib-js/stdlib/blob/develop/docs/doctest.md\n\n[stdlib-development]: https://github.com/stdlib-js/stdlib/blob/develop/docs/development.md\n\n[stdlib-branching]: https://github.com/stdlib-js/stdlib/blob/develop/docs/branching.md\n\n[stdlib-packages]: https://github.com/stdlib-js/stdlib/blob/develop/docs/packages.md\n\n[stdlib-repl-text]: https://github.com/stdlib-js/stdlib/blob/develop/docs/repl_text.md\n\n[stdlib-faq]: https://github.com/stdlib-js/stdlib/blob/develop/FAQ.md\n\n[stdlib-code-coverage]: https://codecov.io/github/stdlib-js/stdlib/branch/develop\n\n[stdlib-gitter]: https://gitter.im/stdlib-js/stdlib\n\n[stdlib-issues]: https://github.com/stdlib-js/stdlib/issues\n\n[stdlib-pull-requests]: https://github.com/stdlib-js/stdlib/pulls\n\n[open-collective-stdlib]: https://opencollective.com/stdlib\n\n[github-signup]: https://github.com/signup/free\n\n[github-pull-request]: https://help.github.com/articles/creating-a-pull-request/\n\n[github-gist]: https://gist.github.com/\n\n[github-markdown-guide]: https://guides.github.com/features/mastering-markdown/\n\n[github-fork]: https://help.github.com/articles/fork-a-repo/\n\n[github-git-tutorial]: http://try.github.io/levels/1/challenges/1\n\n[git]: http://git-scm.com/\n\n[git-clone-depth]: https://git-scm.com/docs/git-clone#git-clone---depthltdepthgt\n\n[git-remotes]: https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes\n\n[git-rebase]: https://git-scm.com/docs/git-rebase\n\n[git-merge]: https://git-scm.com/docs/git-merge\n\n[git-rewriting-history]: https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History\n\n[git-commit-squash]: https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---squashltcommitgt\n\n[git-commit-fixup]: https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---fixupamendrewordltcommitgt\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 6.298828125,
          "content": "# This file is generated by tools/scripts/update_contributors.\n#\n# Contributors listed in alphabetical order.\n\nAadish Jain <jain.aadishj@gmail.com>\nAayush Khanna <aayushiitbhu23@gmail.com>\nAbhijit Raut <abhijitmraut8010@gmail.com>\nAdarsh Palaskar <adarshpalaskar99@gmail.com>\nAditya Sapra <adityaework@gmail.com>\nAhmed Atwa <Ahmedatwa866@yahoo.com>\nAhmed Kashkoush <ahmedkashkoush464@gmail.com>\nAhmed Khaled <kahmd1444@gmail.com>\nAleksandr <112382387+alextes90@users.noreply.github.com>\nAli Salesi <ali_sal1381@yahoo.com>\nAman Bhansali <bhansali.1@iitj.ac.in>\nAmit Jimiwal <amitjimiwal45@gmail.com>\nAnudeep Sanapala <anudeep0306@gmail.com>\nAthan Reines <kgryte@gmail.com>\nAyaka <73595362+USERSATOSHI@users.noreply.github.com>\nBrendan Graetz <bguiz@users.noreply.github.com>\nBruno Fenzl <brunofenzl@gmail.com>\nBryan Elee <rxbryn@gmail.com>\nChinmay Joshi <86140365+JawHawk@users.noreply.github.com>\nChristopher Dambamuromo <chridam@gmail.com>\nDan Rose <danoftheroses@gmail.com>\nDaniel Killenberger <daniel.killenberger@gmail.com>\nDaniel Yu <40680511+Daniel777y@users.noreply.github.com>\nDebashis Maharana <debashismaharana7854@gmail.com>\nDesh Deepak Kant <118960904+DeshDeepakKant@users.noreply.github.com>\nDhruv Arvind Singh <154677013+DhruvArvindSingh@users.noreply.github.com>\nDivyansh Seth <59174836+sethdivyansh@users.noreply.github.com>\nDominic Lim <46486515+domlimm@users.noreply.github.com>\nDominik Moritz <domoritz@gmail.com>\nDorrin Sotoudeh <dorrinsotoudeh123@gmail.com>\nEuniceSim142 <77243938+EuniceSim142@users.noreply.github.com>\nFrank Kovacs <fran70kk@gmail.com>\nGolden Kumar <103646877+AuenKr@users.noreply.github.com>\nGunj Joshi <gunjjoshi8372@gmail.com>\nGururaj Gurram <143020143+gururaj1512@users.noreply.github.com>\nHarshaNP <96897754+GittyHarsha@users.noreply.github.com>\nHarshita Kalani <harshitakalani02@gmail.com>\nHridyanshu <124202756+HRIDYANSHU054@users.noreply.github.com>\nJaimin Godhani <112328542+Jai0401@users.noreply.github.com>\nJames Gelok <jdgelok@gmail.com>\nJaysukh Makvana <jaysukhmakvana2004@gmail.com>\nJenish Thapa <141203631+jenish-thapa@users.noreply.github.com>\nJithin KS <jithinks112@gmail.com>\nJoel Mathew Koshy <joelmathewkoshy@gmail.com>\nJoey Reed <joeyrreed@gmail.com>\nJordan Gallivan <115050475+Jordan-Gallivan@users.noreply.github.com>\nJoris Labie <joris.labie1@gmail.com>\nJustin Dennison <justin1dennison@gmail.com>\nKaran Anand <119553199+anandkaranubc@users.noreply.github.com>\nKarthik Prakash <116057817+skoriop@users.noreply.github.com>\nKohantika Nath <145763549+kohantikanath@users.noreply.github.com>\nKrishnendu Das <86651039+itskdhere@users.noreply.github.com>\nKshitij-Dale <152467202+Kshitij-Dale@users.noreply.github.com>\nLovelin Dhoni J B <100030865+lovelindhoni@users.noreply.github.com>\nManik Sharma <maniksharma.rke@gmail.com>\nManvith M <148960168+manvith2003@users.noreply.github.com>\nMarcus Fantham <mfantham@users.noreply.github.com>\nMatt Cochrane <matthew.cochrane.eng@gmail.com>\nMihir Pandit <129577900+MSP20086@users.noreply.github.com>\nMilan Raj <rajsite@users.noreply.github.com>\nMohammad Kaif <mdkaifprofession@gmail.com>\nMomtchil Momtchev <momtchil@momtchev.com>\nMuhammad Haris <harriskhan047@outlook.com>\nNaresh Jagadeesan <naresh.naresh000@gmail.com>\nNaveen Kumar <stupiddint@gmail.com>\nNeeraj Pathak <neerajrpathak710@gmail.com>\nNishant Shinde <97207366+nishant-s7@users.noreply.github.com>\nNithin Katta <88046362+nithinkatta@users.noreply.github.com>\nNourhan Hasan <109472010+TheNourhan@users.noreply.github.com>\nOgnjen Jevremović <ognjenjevremovic@users.noreply.github.com>\nOneday12323 <107678750+Oneday12323@users.noreply.github.com>\nOri Miles <97595296+orimiles5@users.noreply.github.com>\nPhilipp Burckhardt <pburckhardt@outlook.com>\nPrajwal Kulkarni <prajwalkulkarni76@gmail.com>\nPranav Goswami <goswami.4@iitj.ac.in>\nPranjal Jha <97080887+PraneGIT@users.noreply.github.com>\nPrashant Kumar Yadav <144602492+0PrashantYadav0@users.noreply.github.com>\nPratik Singh <97464067+Pratik772846@users.noreply.github.com>\nPratyush Kumar Chouhan <pratyushkumar0308@gmail.com>\nPriyansh Prajapati <88396544+itsspriyansh@users.noreply.github.com>\nPriyanshu Agarwal <113460573+AgPriyanshu18@users.noreply.github.com>\nPushpendra Chandravanshi <pushpendrachandravanshi4@gmail.com>\nRaunak Kumar Gupta <raunakmodanwal321@gmail.com>\nRejoan Sardar <119718513+Rejoan-Sardar@users.noreply.github.com>\nRicky Reusser <rsreusser@gmail.com>\nRidam Garg <67867319+RidamGarg@users.noreply.github.com>\nRishav <115060907+rishav2404@users.noreply.github.com>\nRobert Gislason <gztown2216@yahoo.com>\nRoman Stetsyk <25715951+romanstetsyk@users.noreply.github.com>\nRutam Kathale <138517416+performant23@users.noreply.github.com>\nRuthwik Chikoti <145591715+ruthwikchikoti@users.noreply.github.com>\nRyan Seal <splrk@users.noreply.github.com>\nRylan Yang <137365285+rylany27@users.noreply.github.com>\nSai Srikar Dumpeti <80447788+the-r3aper7@users.noreply.github.com>\nSarthak Paandey <145528240+SarthakPaandey@users.noreply.github.com>\nSaurabh Singh <saurabhsraghuvanshi@gmail.com>\nSeyyed Parsa Neshaei <spneshaei@users.noreply.github.com>\nShashank Shekhar Singh <shashankshekharsingh1205@gmail.com>\nShivam Ahir <11shivam00@gmail.com>\nShraddheya Shendre <shendreshraddheya@gmail.com>\nShubh Mehta <93862397+Shubh942@users.noreply.github.com>\nShubham Mishra <shubh622005@gmail.com>\nSivam Das <100067002+Sivam2313@users.noreply.github.com>\nSnehil Shah <snehilshah.989@gmail.com>\nSoumajit Chatterjee <121816890+soumajit23@users.noreply.github.com>\nSpandan Barve <contact@marsian.dev>\nStephannie Jiménez Gacha <steff456@hotmail.com>\nSuraj Kumar <125961509+kumarsuraj212003@users.noreply.github.com>\nTirtadwipa Manunggal <tirtadwipa.manunggal@gmail.com>\nTudor Pagu <104032457+tudor-pagu@users.noreply.github.com>\nTufailahmed Bargir <142114244+Tufailahmed-Bargir@users.noreply.github.com>\nUtkarsh <http://utkarsh11105@gmail.com>\nUtkarsh Raj <rajutkarsh2505@gmail.com>\nUtkershBasnet <119008923+UtkershBasnet@users.noreply.github.com>\nVaibhav Patel <98279986+noobCoderVP@users.noreply.github.com>\nVarad Gupta <varadgupta21@gmail.com>\nVinit Pandit <106718914+MeastroZI@users.noreply.github.com>\nVivek Maurya <vm8118134@gmail.com>\nXiaochuan Ye <tap91624@gmail.com>\nYaswanth Kosuru <116426380+yaswanthkosuru@users.noreply.github.com>\nYernar Yergaziyev <yernar.yergaziyev@erg.kz>\nolenkabilonizhka <62379231+olenkabilonizhka@users.noreply.github.com>\nrainn <88160429+AmCodesLame@users.noreply.github.com>\nrei2hu <reimu@reimu.ws>\n"
        },
        {
          "name": "CORE_CONTRIBUTORS.md",
          "type": "blob",
          "size": 1.8359375,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2022 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# Core Contributors\n\n> Core contributors of the stdlib project.\n\nFor information about the governance of the stdlib project, see [GOVERNANCE.md][stdlib-governance].\n\n## Core Contributors\n\n-   [kgryte][athan-reines-github] - **Athan Reines** &lt;[kgryte@gmail.com][athan-reines-email]&gt; (he/him)\n-   [Planeshifter][philipp-burckhardt-github] - **Philipp Burckhardt** &lt;[pburckhardt@outlook.com][philipp-burckhardt-email]&gt; (he/him)\n-   [gunjjoshi][gunj-joshi-github] - **Gunj Joshi** &lt;[gunjjoshi8372@gmail.com][gunj-joshi-email]&gt; (he/him)\n\n<details>\n<summary>Emeriti</summary>\n\n-   [rreusser][ricky-reusser-github] - **Ricky Reusser** &lt;[rsreusser@gmail.com][ricky-reusser-email]&gt; (he/him)\n\n</details>\n\n<section class=\"links\">\n\n[stdlib-governance]: https://github.com/stdlib-js/stdlib/blob/develop/GOVERNANCE.md\n\n[athan-reines-github]: https://github.com/kgryte\n\n[athan-reines-email]: mailto:kgryte@gmail.com\n\n[philipp-burckhardt-github]: https://github.com/Planeshifter\n\n[philipp-burckhardt-email]: mailto:pburckhardt@outlook.com\n\n[ricky-reusser-github]: https://github.com/rreusser\n\n[ricky-reusser-email]: mailto:rsreusser@gmail.com\n\n[gunj-joshi-github]: https://github.com/gunjjoshi\n\n[gunj-joshi-email]: mailto:gunjjoshi8372@gmail.com\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 74.1826171875,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2020 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n<!--lint disable no-heading-punctuation-->\n\n# Frequently Asked Questions\n\n> Common answers to common questions.\n\n-   [Why use this project?](#why-use)\n-   [What are the project's core values?](#core-values)\n-   [Why numerical computing in JavaScript?](#numerical-computing-in-javascript)\n-   [What are the use cases for numerical computing in JavaScript?](#use-cases)\n-   [Why not use R, Python, or Julia?](#other-languages)\n-   [Why not exclusively use native add-ons?](#native-add-ons)\n-   [What about WebAssembly?](#web-assembly)\n-   [Why reimplement and provide custom Math implementations?](#custom-math-implementations)\n-   [Why not change the ECMAScript specification to use better Math algorithms?](#ecmascript-math-specification)\n-   [What can be done at the standards level to better support numerical computing?](#ecmascript-recommendations)\n-   [Why reimplement module functionality already available on npm?](#reimplementing-existing-packages)\n-   [Why not submit improvements to existing libraries?](#contributing-to-existing-libraries)\n-   [Why not aggregate (curate) packages published to npm?](#why-not-curate)\n-   [Why are built-in JavaScript globals wrapped and imported as packages?](#globals-as-packages)\n-   [Backward compatibility?](#backward-compatibility)\n-   [Why use semicolons?](#semicolons)\n-   [Import support?](#import-support)\n-   [Promise support?](#promise-support)\n-   [ES2015 and beyond?](#es2015)\n-   [Why a monorepo?](#monorepo)\n-   [Why are library packages in a node_modules directory?](#lib-node-modules)\n-   [What is meant by saying the project is \"decomposable\"?](#decomposable-software)\n-   [How can I support the project?](#supporting)\n-   [Why contribute?](#why-contribute)\n-   [How can I contribute?](#contributing)\n\n<!-- <faq-questions> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"why-use\"></a>\n\n### Why use this project?\n\nThis project\n\n1.  provides high-quality, rigorous, and robust implementations with common licensing, documentation, tooling, and style.\n\n2.  provides peer-reviewed, portable JavaScript libraries.\n\n3.  provides modular, well-defined interfaces which may be forked, customized, and combined as needed.\n\n4.  provides implementations which work cross-platform (Windows and POSIX), cross-environment (Node.js and web browsers), and cross-context (command-line, REPL, and JavaScript applications).\n\n5.  provides accurate and performant algorithms and implementations for numerical and scientific computing.\n\n6.  increases productivity by:\n\n    -   deterring reinvention\n    -   accelerating initial development\n    -   reducing bugs\n    -   reducing long-term maintenance costs\n    -   reducing search, evaluation, and quality-control requirements\n\n7.  provides standard reference implementations.\n\n8.  establishes best practices.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"core-values\"></a>\n\n### What are the project's core values?\n\n-   **Thoroughness**: implementations should be thorough, including testing, benchmarking, and documentation. Algorithms should be researched, studied, and measured. Taking shortcuts is not acceptable. Attention to detail is highly prized. Code should be written well the first time.\n-   **Rigor**: development should be rigorous. High-quality code is expected, and authors are expected to strive for excellence.\n-   **Robustness**: implementations should demonstrate an exhaustive understanding of how they can fail.\n-   **Approachability**: user-facing APIs and underlying implementations should be approachable. Interfaces should embrace simplicity. Source code should use the simplest primitives. Documentation should be abundant.\n-   **Integrity**: all aspects of the project&mdash;documentation, testing, benchmarking, implementations, tooling&mdash;should form a consistent and coherent whole. Code should be of one voice and reflect a single purpose: to write high-quality software.\n\n<!-- TODO: once the project stabilizes, consider \"stability\"; e.g., backward compatibility support, etc -->\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"numerical-computing-in-javascript\"></a>\n\n### Why numerical computing in JavaScript?\n\n1.  **Speed**: JavaScript is fast for a dynamically compiled language. This is largely due to the need for browser vendors to run web applications as fast as possible, thus forcing vendors to make continuous performance improvements and create highly optimized runtime environments.\n2.  **Rendering Engine**: web browsers are performant, highly optimized view engines, supporting a range of rendering modes ([DOM][dom], [canvas][canvas], [WebGL][webgl]). The web browser has become the preferred medium for interactive graphics, with most major numerical computing platforms supporting some form of web browser rendering ([R][shiny], [Python][bokeh], [MATLAB][plotly]). Accordingly, if JavaScript is already being used to render data as a plot, supporting numerical manipulation of that data without requiring language context switching and the additional complexity of establishing bridges between different languages and platforms also makes sense.\n3.  **Community**: JavaScript has one of the [largest][stackoverflow-developer-survey] and most diverse developer [communities][stackoverflow-developer-survey]. Giving that community access to better and more intermediate tools for numerical computing enables more potential creative applications and use cases. And further, numerical computing has traditionally been the purview of companies selling expensive software only accessible to industry and large academic institutions. By creating free and open numerical computing tools in JavaScript, numerical computing is democratized and made accessible to a [community][module-counts] which has typically not had access to such tools.\n4.  **Ubiquity**: JavaScript is [ubiquitous][javascript-ubiquity], being supported on nearly any device with a web browser and, now, being pushed as a preferred scripting language in the Internet of Things (IoT) ([Cylon.js][cylon-js], [iot.js][iot-js], [JerryScript][jerryscript], [Johnny-Five][johnny-five]). Thus, if a numerical compute application can run in JavaScript, the broader the potential reach of that application.\n5.  **Distribution**: distributing a numerical compute application is considerably easier when compared to traditional numerical computation platforms. Because JavaScript is ubiquitous, the need for installing additional languages and tooling is often unnecessary. A web browser is frequently all that is required.\n6.  **Package Management**: Node.js package management is superior to anything available in other numerical computing environments. As developers who must manage Python [virtual environments][virtualenvs] or implement odd workarounds to support multiple versions of the same dependency can attest, the Node.js strategy makes dependency management trivial. And further, tight integration with [npm][npm] makes distribution even more frictionless. Frictionless is not a common adjective used in describing package management in other numerical computing environments.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"use-cases\"></a>\n\n### What are the use cases for numerical computing in JavaScript?\n\nFundamentally, the use cases for numerical and scientific computing in JavaScript are the same as for any other commonly used language for numerical and scientific computation, such as MATLAB, R, Python, and Julia. For example,\n\n-   perform some sort of statistical analysis, such as computing summary statistics or hypothesis testing.\n-   train and apply a statistical model (e.g., assign a probability as to whether `A` has characteristic `B` given an observation `Q`).\n-   cluster observations into a set of `N` distinct groups.\n-   determine the similarity of two or more datasets (i.e., can we reasonably distinguish `X` from `Y`?).\n-   assign a likelihood to unexpected events (i.e., all things being equal, how often should we expect to see a particular outcome were we to repeat our experiment hundreds, thousands or millions of times?).\n-   perform simulations involving alternative models (e.g., what would the data look like if we change model parameters `a` and `b`?).\n-   extract key \"features\" accounting for the most variation in observed values.\n-   translate text from one language to another.\n-   generate synthetic speech.\n-   rank documents according to their relevance (e.g., to build a search engine).\n-   recognize and classify objects in images (e.g., does image `I` contain a cat or a dog?).\n-   predict growth and financial returns.\n-   compute the trajectory of spacecraft and flying objects.\n-   determine optimal ticket prices and staffing requirements to maximize revenue.\n-   parse, transform, filter, and aggregate data.\n-   add, subtract, multiply, and divide numbers.\n\nIn addition to the above, JavaScript has additional use cases by virtue of its being the _lingua franca_ of the web.\n\n-   offline computation in web applications (i.e., an entirely client-side machine learning library does not require a network connection in order to execute commands as is the case, e.g., in the [Jupyter][jupyter] notebook computation model).\n-   rapid prototyping and visualization.\n-   interactive explanations.\n\nThe popularity of Node.js due to its ease-of-use and growing ubiquity in the HTTP networking stack affords Node.js additional use cases such as\n\n-   a rapidly prototyped and demo-able Node.js server endpoint which performs natural language processing (NLP) and uses the Amazon Alexa API for a chat bot.\n-   a serverless application which performs a machine learning computation without needing to install and bundle all of, e.g., Python, [NumPy][numpy], and [SciPy][scipy], thus saving time, money, and resources (all by virtue of Node.js' dominance in serverless cloud offerings, such as AWS Lambda, Google Cloud, and Microsoft Azure).\n-   browserless model computation done entirely in JavaScript.\n\nWhile other languages and platforms exist which _may_ be better suited for specific use cases, particularly those requiring bare metal performance or involving massive data sets, when considered in totality, the opinion of this project is that JavaScript (and Node.js) provides a comparable, if not better, environment for numerical and scientific computation than other competitor environments.  \n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"other-languages\"></a>\n\n### Why not use R, Python, or Julia?\n\nYou should use JavaScript because\n\n1.  **Language**: you like JavaScript.\n2.  **Simplicity**: you want to minimize language context-switching, reduce build system complexity, and use a smaller stack.\n3.  **Flexibility**: you want flexibility. With the exception of Python and few others, most languages commonly used for numerical computing are ill-suited for general purpose applications (e.g., MATLAB is never used to provide an authentication service). While specialization can mean better support for specialized syntax and libraries, specialization also correlates with reduced flexibility and fewer use cases.\n4.  **Parity**: you recognize that other languages, as languages, have no inherent advantage over JavaScript. With few exceptions, the same criticisms leveled against JavaScript as to why the language is not suitable for numerical computing (e.g., single-threaded, lacks native support for big integers, dynamically compiled, etc) are equally applicable to other languages, such as R and Python. That those languages have risen to prominence is more attributable to chance rather than to comparative advantage.\n5.  **Browsers**: you want to perform numerical computation in a web browser. JavaScript is, and will continue to be, the language of the Web.\n6.  **Forward Compatibility**: standards compliant code written now will work in the future. A key mandate when evolving the ECMAScript specification is that new language features must not break the web, thus ensuring that code written in the past continues to work in modern environments. This stands in contrast to language schisms like Python 2 and 3.\n7.  **Edge Computing**: you want to outsource server-side computation to client applications. A numerical compute-enabled client application can analyze data, train models, and generate predictions with shorter latency and lower server costs. Contrary to other languages and environments, a self-contained web application (similar in concept to a pre-compiled binary) which leverages JavaScript for numerical computation does not require persistent server infrastructure or containerization.\n8.  **Node.js**: you want to perform numerical computation in a Node.js application. Node.js is now regularly used by over [98%][node-fortune-500] of Fortune 500 companies (with accelerating industry adoption) and is well-suited for a wide range of applications (including numerical computing) due to its performance and flexibility.\n9.  **Community**: you want to leverage the continually growing JavaScript and Node.js community. JavaScript has one of the [largest][stackoverflow-developer-survey] and most diverse developer [ecosystems][stackoverflow-developer-survey]. Using JavaScript means greater access to help, expertise, and resources, including tutorials, workshops, and education materials.\n10. **Visualization**: you want tighter integration between computation and data visualization. Other languages require intermediary layers to translate computational results into visual artifacts. These layers often involve network requests, longer latency, and increased complexity. Using JavaScript for numerical computation removes the need for intermediaries, allowing immediate and more transparent integration between computation and visualization.\n11. **Mad science**: you are interested in mad science applications. Certain applications are only possible in JavaScript due to tight integration between the language and web APIs (e.g., client-based peer-to-peer distributed computing).\n12. **Future**: you want to be part of the future: a future where numerical and scientific computation in JavaScript is not only possible, but also inevitable. \n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"native-add-ons\"></a>\n\n### Why not exclusively use native add-ons?\n\nNative [add-ons][node-add-ons] have several disadvantages:\n\n1.  **Maintenance**: historically, native [add-ons][node-add-ons] have entailed considerable maintenance costs. Due to a rapidly changing V8 API and a V8 development approach which does not prioritize backward compatibility, each successive Node.js version required rewriting native [add-ons][node-add-ons] to accommodate breaking changes. To address initially this problem, the Native Abstractions for Node.js project ([NAN][node-nan]) provided a V8 API abstraction layer which [add-ons][node-add-ons] could target, thus allowing an [add-on][node-add-ons] to maintain compatibility between Node.js versions. While [NAN][node-nan] did reduce maintenance costs, costs were not entirely eliminated. [NAN][node-nan] has been superseded by an [ABI stable API][node-napi] (N-API), which provides a similar abstraction layer but also across VMs (e.g., V8 and Chakra). While N-API significantly reduces native add-on maintenance burden, that burden is not zero.\n2.  **Portability**: the primary means for building native [add-ons][node-add-ons] is [node-gyp][node-gyp], a tool which wraps [GYP][gyp] (a deprecated build tool formerly used by the Chromium team) and aims to provide a cross-platform approach for compiling Node.js native [add-ons][node-add-ons]. While [GYP][gyp] is suitable for many native [add-on][node-add-ons] use cases, the tool is less well-suited for building numerical and scientific computing libraries. In particular, [GYP][gyp] is primarily oriented toward compiling C/C++ libraries and applications. This orientation is problematic because numerical computing libraries often require the ability to not only compile C/C++, but also Fortran, CUDA, and other compiled languages. On Linux systems, [GYP][gyp] can leverage the GNU compiler toolchain, including [gfortran][gfortran]; however, [node-gyp][node-gyp]'s reliance on Microsoft Visual Studio (MSVS) [prevents][msvs-fortran-issue] compiling [add-ons][node-add-ons] containing Fortran code on Windows. Furthermore, building [add-ons][node-add-ons] on Windows requires installing Windows [build tools][node-windows-build-tools], and, currently, the [recommended][node-windows-build-tools] means of installation is not backward compatible with Node.js environments prior to version `4`. Lastly, while pre-building binaries is one way to circumvent compilation and portability issues, cross-compilation is neither straightforward nor foolproof and does not obviate the need for portable compilation (see debugging below). \n3.  **Web browsers**: native [add-ons][node-add-ons] are not compatible with or portable to web browsers. ([WebAssembly][wasm] will not change this fact.)\n4.  **Complexity**: compilation presupposes the existence of compilers (e.g., [gfortran][gfortran]) and other tooling in order to successfully compile, thus often requiring out-of-band installation, setup, and configuration. In short, compilation increases complexity and increases the risk that something can and will go wrong.\n5.  **Development**: native Node.js [add-ons][node-add-ons] require significant upfront development costs compared to porting implementations to JavaScript. Creating a native [add-on][node-add-ons] entails more than writing a simple wrapper around an existing C/C++ library; the process involves additional tooling, testing, and development procedures, all requiring time and effort. These costs are acutely apparent during iteration cycles targeting multiple platforms. In comparison, as a higher-level language, JavaScript facilitates faster development, has built-in portability, and has minimized performance costs.\n6.  **Bundling**: existing low-level C/C++ and Fortran numerical computing libraries are often large monoliths. Hence, writing a Node.js native [add-on][node-add-ons] which exposes a single function from one of these libraries requires linking to a much larger codebase, resulting in larger bundle sizes, increased network costs, and longer installation times. And while many systems may come with pre-installed numerical computing libraries (e.g., Apple Accelerate Framework), their existence is neither guaranteed nor is detecting their existence trivial.\n7.  **Debugging**: debugging and instrumentation require separate compilation pathways. JavaScript implementations have the luxury of abundant tooling for dynamic inspection and instrumentation. The same cannot be said for native [add-ons][node-add-ons].\n\nDespite the disadvantages articulated above, this project **does** include Node.js native [add-ons][node-add-ons] and will continue to do so. However, each [add-on][node-add-ons] must include a JavaScript fallback in order to address cross-platform portability. While beneficial, native [add-ons][node-add-ons] are only part of what must be a more comprehensive solution to providing numerical computing facilities to Node.js, JavaScript, and the Web.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"web-assembly\"></a>\n\n### What about WebAssembly?\n\n[WebAssembly][wasm] proposes to fundamentally change the web platform by providing a low-level compilation target, which, in the future, will allow any language to be compiled to run on the Web. Once [WebAssembly][wasm] is ubiquitously supported, web developers will be able to use, e.g., a numerical computation library from, not just JavaScript, but any language, including traditional languages, such as R, Python, Julia, and C/C++ (provided the library can compile). While the possibility of using libraries like [NumPy][numpy] and [scikit-learn][scikit-learn] on the Web is exciting, this is not viewed as an existential threat for the following reasons:\n\n1.  **Compilation**: as developers who have used [asm.js][asm] to compile C and C++ libraries to run on the Web can attest, the process is not as simple as defining input and output targets. Often pre-compiled code has to be massaged into a form suitable for compilation, which means work is involved, requiring both time and labor.\n2.  **Bundling**: page load times are, and will continue to be, important, especially for business critical applications. The JavaScript community has invested considerable time and effort to both developing tooling and improving the web platform to bundle only code which is actually used and needed. Libraries written in other languages (e.g., [NumPy][numpy]) are not as amenable to modular bundles. Lack of modularity combined with significant size renders many non-JavaScript libraries impractical for web applications.\n3.  **Timescale**: [WebAssembly][wasm] is not likely to be ubiquitous anytime soon (as of 2020, browser implementations widely exist, but development targeting [WebAssembly][wasm] is not widespread) and a need exists now for numerical computation libraries which work on the Web.\n4.  **Monoglot**: developers will still build JavaScript applications and most will, all things being equal, want to use a library written in the same idiom. Using a single language stack reduces cognitive overhead and simplifies application development.\n5.  **Legacy**: [WebAssembly][wasm] is unlikely to replace JavaScript, but, instead, serve a complementary role. JavaScript has a long and decorated history as part of the web platform. Relegating JavaScript to the dust bin would entail breaking the Web, an outcome which has been and will continue to be untenable, thus securing JavaScript's privileged status.\n6.  **Scripting**: [WebAssembly][wasm] does **not** eliminate the need for a scripting language. Even if lower level, performance critical math implementations are [WebAssembly][wasm] compiled C/C++ libraries, a dynamic, loosely typed, interpreted scripting language is still necessary. The iteration cycle when using compiled languages is simply too long when compared to dynamic languages, particularly within the context of interactive analysis. Accordingly, functionality is, and will continue to be, necessary in JavaScript, a scripting language to which, given the size and energy of its community, every other scripting language pales in comparison.\n\n<!-- see also https://www.quora.com/Will-WebAssembly-make-JavaScript-skills-more-or-less-valuable-in-the-future -->\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"custom-math-implementations\"></a>\n\n### Why reimplement and provide custom Math implementations?\n\n1.  [ECMA-262][ecma-262] does not mandate specific algorithms (only recommends `libm`). Accordingly, JavaScript implementors are free to choose any algorithm, which means that numerical computation results often differ across environments. This renders the standard JavaScript Math library not amenable to reproducible computation.\n2.  [ECMA-262][ecma-262] does not require a minimum [precision][mdn-math]. As a result, JavaScript implementors make non-transparent trade-offs between speed and accuracy, frequently favoring speed above all else. While traditional web applications may not require highly accurate Math results, many numerical computation applications do. And because the implementations are not transparent, debugging accuracy issues in numerical computation applications which use Math built-ins is considerably more difficult.\n3.  Because built-in Math functions are implementation dependent, numerical computation applications are **not** portable. By creating a set of standard Math implementations, we ensure that results on one platform are reproducible on every other platform.\n4.  Built-in math functions frequently have bugs (see [built_in_math_bugs.md][built-in-math-bugs]).\n5.  Built-in math functions are often buried deep in compiler code and written in languages other than JavaScript. By implementing Math functions purely in JavaScript, the hope is that the underlying algorithms are more transparent, approachable, forkable, and debuggable.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"ecmascript-math-specification\"></a>\n\n### Why not change the ECMAScript specification to use better Math algorithms?\n\nCommon arguments in support of changing the official ECMAScript specification:\n\n-   **standards**: everyone benefits from using common implementations.\n-   **network**: more and better built-ins translates to smaller bundles and thus decreased network costs.\n-   **evergreen**: improving built-ins means existing codebases using built-ins get \"upgraded\" (and patched) for free.\n\nOn the surface, the above arguments seem compelling. They fail, however, to recognize the rather messy reality of JavaScript applications and originate from a misunderstanding as to how JavaScript is implemented and practiced today.\n\nA central thesis of this project is as follows:\n\n> The standard Math library in JavaScript is fundamentally broken and cannot, and should not, be fixed by changing the official ECMAScript specification.\n\nThe reasons are as follows:\n\n<!--lint disable list-item-spacing-->\n\n1.  **underspecified standard**: the ECMAScript specification for the standard Math library is underspecified, but not without merit. Namely, underspecification allows those implementing the specification to make trade-offs between speed and accuracy. Were the specification to mandate a particular algorithm, e.g., for `Math.sin`, implementers would be locked into **always** using a particular implementation. Especially for special functions, different algorithms will yield different results under varying conditions. Thus, to change an underlying algorithm would mean to break backward compatibility. By not committing themselves to any hard backward compatibility constraints, implementors maintain a degree of flexibility, including the ability to use algorithms which cater to a particular user base (gaming versus numerical computing). In which case, underspecification has advantages.   \n\n2.  **cross-browser variability**: an underspecified standard, however, has disadvantages. Because implementors are free to choose underlying algorithms, relying exclusively on built-in Math functionality renders portability across more than one environment impossible. Even if all implementors happened to use the same underlying algorithm, a developer cannot, _a priori_, **guarantee** or assume that only one algorithm is implemented. The default assumption must be: _if more than one algorithm can exist, more than one algorithm will exist_.\n\n3.  **no single codebase**: unlike other standard libraries (e.g., Golang, Python, Julia, etc), JavaScript does not have a single shared codebase. Each browser manufacturer has their own implementation and independent codebase with varying architecture and organization. More fundamentally, a common _implementation_ does **not** exist; only common _interfaces_ exist. Thus, a developer wanting to write a numerical application must navigate and understand multiple sources of truth. Such expenditures incur significant overhead, especially when wanting to file issues, submit patches, or standardize a particular algorithm. For example, a patch in Chrome does not translate to a patch in all other web browsers. Because each implementor is free to erect a protected castle, those writing numerical algorithms are resigned to treating the standard Math library as a black box and must always cater to the lowest common denominator (which is often the empirically determined slowest and/or least precise algorithm).\n\n4.  **versioning**: a developer does not have the freedom to choose which version of a particular algorithm she is given. In an \"evergreen\" environment, her application is only guaranteed a consistent interface, not an underlying implementation. Each background update may influence results in subtle ways and introduce bugs and unforeseen variability. A developer relying exclusively on standard library built-ins cannot assume reproducibility upon relaunching a browser. Thus, not only is cross-browser portability problematic, but same-browser-different-version portability is problematic. \n\n5.  **required shims**: because no common codebase exists and implementors make mistakes, application developers are dependent on shims (i.e., libraries which ensure consistent implementations across browsers, provide missing built-in functionality, and patch bugs). The issue here, of course, is that, if an application developer must supply a shim, reduced network cost due to the presence of built-ins is non-existent: an implementation is sent over the network regardless in order to patch a possibly buggy environment. While a developer could use browser sniffing and HTTP2 to lazily load patches, such practices incur a performance cost. Accordingly, if an implementation is sent irrespective of whether an environment provides an implementation natively, why does an environment need to guarantee the existence of an implementation in the first place?\n\n6.  **globals**: standard library functions are unprotected globals (they need to be, or else how would shims work?). This means, however, that, not only must a numerical application developer worry about cross-browser and same-browser portability, but she must also worry about third party libraries overriding built-ins. Hence, a numerical application developer must always consider a JavaScript environment a hostile environment, leaving her no choice but to provide her own guarded implementations.\n\n7.  **testing**: while implementors can be reasonably trusted to implement a specification, implementors vary in their knowledge and ability to rigorously test numerical algorithms. Too often numerical tests fail to adequately cover input argument regimes and edge cases, and rarely do tests cross-compare against implementations in other platforms and environments. While outside developers are free to contribute tests to implementation codebases, the lack of a single codebase means that work must be duplicated across many other codebases.\n\n8.  **no golden algorithm**: those who advocate for standard algorithms assume that **a** standard algorithm is all that is needed. The reality, however, is that different applications require different algorithms. For example, many developers believe (incorrectly) that an environment only needs one pseudorandom number generator (PRNG). And if we only implemented the very best possible PRNG, our problems would be solved. Such a belief, however, is mistaken. Numerical applications, particularly simulations, often require more than one different type of PRNG (e.g., LCG versus Xorshift) in order to ensure that the results of a simulation are not an artifact of the PRNG itself. Furthermore, having a standardized, e.g., `Math.sin`, algorithm does **not** eliminate the need for other algorithms which compute sine. The \"optimal\" implementation depends on a variety of factors, including speed, precision, value range, and more. Ultimately, the individual best equipped to determine which algorithm is most appropriate for an application is the developer herself.\n\n9.  **timescale**: specifications and bug fixes are implemented over extended timescales. Historically, improving the standard Math library has been low priority (e.g., Mozilla first identified the need to improve `Math.random()` in 2006 and did not do so until 2015). Even if advocating for official inclusion in ECMAScript was believed desirable, the time involved to enact such implementation is not worth the effort: community solutions can simply move much faster in terms of development, testing, patching, and maintenance.\n\n10. **trust**: at a very fundamental level, trust is broken. This reason underscores all the others. JavaScript environments cannot, on their own, be relied upon to provide a single consistent solution to the Math problem.\n\n<!-- 1. __trust__: at a very fundamental level, trust is broken. This reason underscores all the others. A continued history of bugs, poor algorithms, insufficient testing, lack of IEEE 754 compliance, favoring speed at the cost of precision, insufficient domain knowledge, and carelessness with backward compatibility present an overwhelming case that JavaScript environments cannot, on their own, be relied upon to provide a single consistent solution to the Math problem. -->\n\n<!--lint enable list-item-spacing-->\n\nBased on the reasons above, Math is fundamentally broken at the standards and implementation levels. Nevertheless, based on the existence of solid low-level primitives, speed, and ecosystem, this project maintains that JavaScript **is** a viable platform for numerical and mathematical computing. The solution, however, does not entail standardization, but rather the development of independent community-driven solutions which can provide the kind of rigorous, robust, and performant numerical algorithms applications need.\n\n**Note**: To their credit, browser vendors have tried to improve and standardize their implementations. Their efforts to continue doing so are needed and important, but their improvement does **not** obviate the need for independent community-driven solutions.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"ecmascript-recommendations\"></a>\n\n### What can be done at the standards level to better support numerical computing?\n\nTo better support numerical computing, standards bodies can do the following:\n\n<!--\n\n1.  **64-bit integers**: add support for 64-bit integers. 64-bit integers (both signed and unsigned) are important for the following reasons:\n\n    -   **Bit manipulation**. Currently, the only way to manipulate the bits of a double-precision floating-point number is to use typed arrays (see [`toWords()`][@stdlib/math/base/utils/float64-to-words]), which is problematic because the process is, when compared to modern languages, [slow][@stdlib/math/base/special/frexp] and [inefficient][@stdlib/math/base/special/ldexp]. Modern languages with 64-bit integer support allow the bits of a double-precision floating-point number to be [reinterpreted][golang-float64bits] as a 64-bit integer, thus enabling easier manipulation, faster operations, and more efficient [code][golang-frexp]. This is especially important for low level implementations of transcendental [functions][@stdlib/math/base/special/exp10] where bit manipulation can lead to significant performance gains.\n    -   **Pseudorandom number generation**. Modern pseudorandom number generators (PRNGs) commonly use 64-bit integers. Hence, lack of native 64-bit integer support prevents implementing more robust PRNGs which have longer periods and better randomness qualities (e.g., [xorshift\\*][xorshift*], [PCG][pcg], and [Mersenne twister (64-bit)][mersenne-twister]).\n    -   **IDs**. In modern applications, 32-bit integer IDs are rarely enough. 32-bit integers have on the order of `10**9` unique values compared to `10**19` for 64-bit integers. With 64-bit integer support, additional efficient hashing and bit masking algorithms become feasible.\n\nNOTE: addressed by BigInt\n\n1.  **128-bit integers**: add support for 128-bit integers. 128-bit integers (both signed and unsigned) are important for the following reasons:\n\n    -   **Cryptography**. 128-bit integers are a common key size for [symmetric ciphers][symmetric-ciphers], and, importantly, 128-bit integers facilitate support for additional cryptographically secure pseudorandom number generators (CSPRNGs).\n    -   **Universally unique identifiers**. Universally unique identifiers ([UUIDs][uuid]) are stored as 128-bit values.\n    -   **Arbitrary-precision arithmetic**. [Arbitrary-precision arithmetic][arbitrary-precision-arithmetic] is beneficial for high precision applications and in preventing overflow, computing fundamental mathematical constants, and evaluating precision errors in fixed-precision calculations.\n\nNOTE: addressed by BigInt\n\n-->\n\n1.  **Large arrays**: add support for large arrays. Arrays are currently limited to [`2**32-1`][ecma-262-array-length] (approximately `4` billion) elements. Many applications will never reach this limit; however, as datasets continue to increase in size, the need for larger arrays will become more apparent. For example, consider a `100000 x 100000` dense matrix, which is not uncommon when working with sensor data and trying to find correlations. This matrix will have `10` billion elements. Given current length limitations, one cannot store this data contiguously in a plain JavaScript array, thus resulting in increased cache misses and decreased performance.\n\n    **Aside:** typed arrays and, more generally, array-like objects may have as many as [`2**53-1`][ecma-262-tolength] elements. In the case of typed arrays, however, one must allocate memory upon instantiation; thus, growing a typed array as needed, while possible, is neither straightforward nor efficient.\n\n1.  **Boolean arrays**: add support for `boolean` typed arrays. Similar in their nature to numerical typed arrays, `boolean` typed arrays would allow for more compact storage and efficient iteration for array masks which can be applied to, e.g., strided arrays.\n\n1.  **Typed objects**: add support for [typed objects][typed-objects-proposal]. Typed objects would facilitate efficient memory storage of data, which is critical for [performant][five-things-that-make-go-fast] numerical computations. In short,\n\n    -   typed objects allow compact data structures and avoid unnecessary indirection\n    -   typed objects enable better cache utilization\n    -   better cache utilization leads to better performance\n\n    Complex numbers are a prime example where typed objects would be immensely valuable. Particularly for complex vector arrays, the ability to access adjacent memory locations would result in significant performance benefits.\n\n1.  **Value types**: add support for [value types][typed-objects-explainer]. Value types allow for creating custom types and enabling compiler optimizations. As with [typed objects][typed-objects-proposal], complex numbers are a prime example where value types are valuable, due to value comparison via structural equivalence.\n\n1.  **Operator overloading**: add support for [operator overloading][operator-overloading]. Assuming [typed objects][typed-objects-proposal] and [value types][typed-objects-explainer], a natural extension is [operator overloading][operator-overloading]. Currently, element-wise vector operations and use cases such as matrix multiplication require either verbose OOP semantics (e.g., `M1.mul( M2 )` ) or functional equivalents requiring internal argument validation (e.g., `mul( M1, M2 )`. Contrast JavaScript to languages such as MATLAB or Julia which allow for compact expressions (e.g., `M1 .* M2`). Furthermore, operator overloading has a general appeal beyond vector and matrix operations, such as enabling cleaner `Date` arithmetic. The ability to write compact, and yet expressive, code would significantly broaden the appeal of JavaScript for numerical computing.\n\n    **Aside**: vector and matrix operations will require additional operators. For instance, when multiplying matrices, need to distinguish between element-wise multiplication versus the matrix product. In languages such as MATLAB and Julia, element-wise operators include a period (e.g., `M1 .* M2` versus `M1 * M2`).\n\n1.  **Big numbers**: add support for big [integers][julia-bigint], [rationals][golang-big], and [floats][julia-bigfloat]. In addition to cryptography and computing irrational numbers, arbitrary precision arithmetic is useful for algorithms involving double-precision floating-point numbers. Currently, lack of efficient, and relatively performant, big number support limits the scope and types of implemented algorithms, including for basic transcendental functions.\n\n1.  **SIMD**: add support for long SIMD. Currently, [proposals][ecmascript-simd] for [SIMD][ecmascript-simd] in JavaScript have focused on [short SIMD][mozilla-simd], which is well-suited for graphics applications. However, [short SIMD][mozilla-simd] is **not** particularly well-suited for large vector operations, which are common in numerical computing (e.g., BLAS).\n\n    **Aside:** JavaScript may never have native SIMD support. Instead, SIMD is currently only possible only via [WebAssembly][wasm]. Lack of native JavaScript SIMD support would be unfortunate, as plenty of applications exist (e.g., scripting for purposes of analysis and data manipulation), which would benefit from SIMD operations without requiring a context switch to a lower-level language and additional compilation steps.\n\n1.  **GPGPU**: provide better support for [GPGPU][gpgpu]. Currently, performing general purpose GPU (GPGPU) computing tasks within a browser is only possible via [WebGL][webgl] and awkward usage of shaders, which are designed for generating graphics, not generic number crunching. Additionally, synchronous data transfers between the main thread and the GPU are expensive, debugging support is limited, and reading floating-point textures is not possible without workarounds which encode floating-point numbers into integer outputs (RGBA). While [compute shaders][compute-shaders] and [Vulkan][vulkan] promise better GPGPU support, we are years away from realizing their proposed benefits via JavaScript. Once realized, however, embarrassingly parallel computation tasks and machine learning techniques such as neural networks become more viable and efficient.\n\n<!--\n\n1.  **Parallelism**: add support for lightweight threading (parallelism). Currently, [data parallelism][data-parallelism], i.e., the same operations performed on different subsets of the same data, is only achievable by manual data orchestration and task execution via either [web workers][mdn-web-workers] (browser) or [child processes][node-child-process] (Node.js). While [web workers][mdn-web-workers] support [Transferable Objects][mdn-transferable-objects] thus allowing shared memory access, the same is not true for Node.js. Particularly in Node.js, task parallelism is heavyweight and cumbersome, especially for use cases like parallel computation involving matrix elements (e.g., compare to MATLAB's [`parfor`][matlab-parfor]). The ability to easily distribute data to a worker pool (processors) would provide a significant performance boost to many data analysis tasks.\n\nNOTE: see https://nodejs.org/api/worker_threads.html\n\n-->\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"reimplementing-existing-packages\"></a>\n\n### Why reimplement module functionality already available on npm?\n\n-   **Consistency**: package structure, documentation, testing, and code style vary widely, often as artifacts of author taste and eccentricities. By adhering to a single style, library consumers can focus on implementation details, rather than continual and arbitrary style distractions.\n-   **Quality**: packages range from extremely high quality to extremely poor quality, with the distribution of packages skewed toward the latter end of the spectrum. Any reimplementation of existing package functionality is done to ensure the same high standard and quality across all project modules.\n-   **Control**: bringing functionality \"in-house\" enables control of release cycles, testing, distribution, interface design, and API changes. \n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"contributing-to-existing-libraries\"></a>\n\n### Why not submit improvements to existing libraries?\n\n-   **Rewrites**: often, the project's approach and implementation improvements would require a drastic shift in how existing libraries are written. In some cases, incorporating changes would require completely rewriting one or more libraries. And if a rewrite is necessary, a rewritten library differs from a separate implementation in name only.\n-   **Bandwidth**: the demands of the project mean that core project authors do not have the time or resources to both develop the project and actively contribute to any and all existing libraries which might benefit from this project's implementation improvements. In an ideal world, any insights, bug fixes, and improved algorithms included in this project would be pushed to external community libraries; however, the project lacks the bandwidth to do so. As this project is open source, authors of community libraries are encouraged to track project development. If someone wants to take this project's implementation improvements and incorporate them elsewhere, she is free to do so (_subject to the project license_), but this is **not** something the project can actively pursue.\n-   **Opportunity cost**: while the project may benefit from engaging with authors of existing libraries in terms of knowledge transfer and insight, such efforts entail risk (no guarantee efforts will lead to library inclusion or achieve intended aim) and real costs (allocated time), and, as such, the opportunity cost (along with maintenance burden) of _pushing_ changes to external community libraries is too great.\n-   **Priorities**: given the project's rather strong opinions, there exists a strong possibility of endless developer debate (and bikeshedding) when pushing changes to external community libraries. The more time spent in debate, the less time allocated to project development. In general, this project is biased toward focusing attention on those aspects over which project authors have most control and which can best facilitate development efficiency.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"why-not-curate\"></a>\n\n### Why not aggregate (curate) packages published to npm?\n\nThis project chose to centralize project development and to forgo aggregation/curation for the following reasons:\n\n-   **Security**: centralized development facilitates security patches and updates. In a distributed aggregation development model, patching security vulnerabilities is subject to increased lag and errors, both in terms of communication and resolution.\n-   **Control**: an aggregation model depends on a pull request development cycle, and the model's success depends on developer responsiveness. The latter is by no means guaranteed and resides outside the project's control.\n-   **Immediacy**: no additional tooling is needed for notification of source changes. As all development happens on a single source repository, changes are persisted in the commit history, facilitating code archeology and providing an embedded mechanism for both pushing and pulling change notifications.\n-   **History**: no additional tooling is needed to aggregate and compile a centralized history (changelog) for communicating changes included in a particular release. The ability to even generate a changelog in an aggregation model assumes codification and adoption of, e.g., a particular commit style, which, given significant variation in developer attitude, tastes, and willingness to adopt any one style, is unrealistic.\n-   **Search**: performing a code search is significantly more difficult in an aggregation model, especially given inevitable variation in style and naming conventions.\n-   **Continuous integration**: a centralized development model greatly facilitates testing whether changes in one part of the project affect other parts of the project. Feedback for external effects is more immediate and does not require propagation through a disperse network of curated libraries, each with independently managed build environments and configurations.\n-   **Testing**: a centralized development model better facilitates test coverage metrics, making a clearer delineation between project and external code.\n-   **Tooling**: an aggregation model cannot as readily leverage project tooling for testing, benchmarking, and documentation generation. Furthermore, requiring aggregated libraries to use project tooling would mean a significant amount of code redundancy, as each library would need to independently install and manage project tooling. Centralized development thus minimizes disk usage and redundancy.\n-   **Development efficiency**: centralized development enables efficiencies for refactoring and propagating changes which are not possible (without significant time and resources) in an aggregation model. While, in theory, a decentralized aggregation model distributes **initial** development work/costs across multiple developers, the model is not particularly efficient in distributing maintenance costs across those same (or even different) developers. While a centralized development model _may_ incur a greater **initial** development cost, maintenance costs (e.g., communication overhead, propagation of changes, et cetera) are considerably less. In short, centralized development helps unlock efficiencies of scale.\n-   **Operational efficiency**: from a practical standpoint, an aggregation model, by definition, means significantly longer installation times due to the need for the many HTTP requests which would be required to build an aggregated library.\n-   **Reproducibility**: in a centralized development model, project development always happens on (more or less) the \"latest\" code. In an aggregation model, which by definition involves dependencies, local development versions can vary significantly due to old/stale node modules and other dependencies. Accordingly, in a centralized model, reproducibility is streamlined (e.g., a `git pull` is faster than `npm clean && npm install`).\n-   **Source of truth**: a centralized development model allows operating on a single source of truth, while an aggregation model requires a search path involving two or more dispersed resources, thus incurring increased search and communication costs.\n-   **Integrity**: a centralized development model helps ensure project integrity. An aggregation model cannot guarantee that aggregated packages will not \"drift\" in terms of style, organization, tooling, and, most importantly, **quality**.\n\n**Aside**: in the long arc of history for this project, prior to the current project iteration, an aggregation model was both explored and even pursued. The reasons outlined above find their origin in that (often painful) experience.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"backward-compatibility\"></a>\n\n### Backward compatibility?\n\n#### Interfaces\n\nFrom time to time, interfaces may change in incompatible and breaking ways. Software evolves and such changes are part of the normal course of development. In compliance with [semantic versioning][semver], these changes will result in [major version][semver] changes. As long as your [package manager][npm] supports [semantic versioning][semver], libraries and applications which consume this project, or elements of this project, should not break and may independently upgrade whenever is most convenient.\n\n#### Engines\n\nThis project has every intent on maintaining backward compatibility with older Node.js engines, including those which have reached their end-of-life (EOL) and including those which are pre-ES2015 beginning with Node.js **v0.10.x**. Accordingly, interface changes and new features should **never** break this compatibility. The reasons for maintaining compatibility are as follows:\n\n1.  With regard to the Node.js [long-term release schedule][node-release], simply because a Node.js version has reached its end-of-life (EOL), this does not mean that a) the Node.js version is no longer used or b) library authors ought to stop supporting that version. As long as libraries use the simplest, lowest level abstraction, the question as to whether a library should support a legacy Node.js version should never arise. The only time where dropping legacy support may be justified is when supporting native [add-ons][node-add-ons], as maintenance costs can be significantly higher.\n2.  Functionality should not only enable the future, but also allow probing the past. In an ideal world, everyone would use the latest and greatest engine; however, in the real world, not everyone can. Legacy systems abound for very valid and practical reasons; that they will continue to exist is not going to change. To achieve the greatest possible reach, functionality should account for these environments. The best approach for doing so is to use the simplest possible primitives which are most likely to be supported across the widest range of environments.\n3.  Consumers should have control over their migration schedules. In general, library developers are far too quick to drop support for legacy environments, citing maintenance costs, often as a thinly veiled desire to force consumers to upgrade. This parental and cavalier attitude fails to acknowledge the practical realities that many consumers face when building real-world applications. Once real-world applications are deployed in production environments, they assume lives of their own, becoming critical zero downtime components without concern for a library author's desire for evolution. All too frequently, a developer's desire for modernity (and trendiness) creates needless downstream effects, especially in those instances where the cost of maintenance is effectively zero.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"globals-as-packages\"></a>\n\n### Why are built-in JavaScript globals wrapped and imported as packages?\n\nWe create packages which wrap built-in JavaScript globals for the following reasons:\n\n1.  **Polyfills**: as we target multiple platforms and strive for backward compatibility, wrapping globals as packages allows us to polyfill absent or defective implementations and ensure consistent behavior across environments.\n1.  **Documentation**: wrapping globals as packages allows us to ensure consistent and centralized documentation. Our preference is to minimize the amount of \"out-of-band\" resources consumers and developers alike must consult in order to effectively use and develop the project.\n1.  **Testing**: by applying the same approach to globals as we do to normal package development, such as unit testing and examples, we are able to track and monitor built-in implementations and detect abnormal behavior, thus serving as an early warning system and debugging tool.\n1.  **Mocking**: in addition to testing environment behavior, wrapping globals as packages facilitates project development and testing by allowing us to more easily mock built-ins (via dependency injection) and to eliminate unintended side-effects introduced by overwriting globals.\n1.  **Benchmarks**: applying the same approach to globals as we do to project-specific packages allows us to better organize benchmarks and to track environment performance. As with testing, monitoring the performance of built-ins provides an early warning system and aids in debugging performance related issues.\n\nIn general, a core belief of this project is that **all** functionality **should** be exposed in the form of packages. While we are aware that some may criticize this approach due to, e.g., \"unnecessary\" meta data, thus potentially affecting download times and bundle sizes, we are of the opinion that the benefits greatly outweigh any perceived disadvantages and that most, if not all, of the perceived disadvantages are actually advantages, especially when considering offline development and the affordances of modern tooling such as symbol resolution and inlining.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"semicolons\"></a>\n\n### Why use semicolons?\n\nFor the following reasons:\n\n1.  **Convention**: this project has historically used semicolons and has not found any reason compelling enough to stop doing so.\n2.  **Explicitness**: this project prefers explicitly terminating statements.\n3.  **Complexity**: while the [ECMAScript Specification][ecma-262-asi] provides rules governing automatic semicolon insertion ([ASI][ecma-262-asi]), structuring code around these rules increases cognitive overhead and does not provide significant tangible benefit (cumulative keystrokes aside). That workarounds must be employed to prevent [ASI][ecma-262-asi]-enabled errors (e.g., leading semicolons, etc) increases code complexity and imposes an unnecessary cost.\n4.  **Semantic meaning**: semicolons have semantic meaning within the project REPL. If a statement is not terminated by a semicolon, the REPL prints the statement's return value; otherwise, the REPL considers the statement silent. Such behavior is a common convention in other environments (e.g., MATLAB and Julia) and is especially convenient for silencing output involving large datasets.\n5.  **Consistency**: given that the project attaches additional meaning to semicolons, that library implementations should be \"silent\" is also a matter of consistency.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"import-support\"></a>\n\n### Import support?\n\nNot at this time. This stance may be reevaluated when the following conditions are met:\n\n1.  The specification has finalized.\n2.  The specification is widely and consistently implemented.\n3.  Node.js provides official support.\n4.  Inclusion maintains backward compatibility with earlier Node.js versions and non-ES2015 environments.\n5.  Inclusion does not require a transpiler toolchain.\n\n> **UPDATE**: work has begun to explore publishing a version of the project as a collection of ES modules.\n\n#### But what about tree shaking?\n\nTree shaking (i.e., removing unused symbols) treats the symptom, not the disease. A disciplined emphasis on modularity and crafting implementations which do one thing and do one thing well obviates the need for removing unused symbols.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"promise-support\"></a>\n\n### Promise support?\n\nPromise support is planned. Help providing promise support, including implementing a `Promise` polyfill for older environments, would be greatly appreciated.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"es2015\"></a>\n\n### ES2015 and beyond?\n\nOnly **if** three conditions are met:\n\n1.  ES2015+ features can be used **without** breaking backward compatibility.\n2.  ES2015+ features provide something which is absolutely needed but literally not possible in ES5 and earlier environments.\n3.  ES2015+ features can be polyfilled in older environments **without** transpilation.\n\nThe reasons are as follows:\n\n-   **Abstraction**: in general, the lower the abstraction, the less magic. Less magic means increased comprehensibility, a smaller surface area, and more control over performance and optimization. Many ES2015+ features are higher-order abstractions for things already possible in ES5. The preference of this project is to eschew higher-order abstractions for the simplest primitives and the greatest clarity.\n-   **Control**: unless a transpiler is developed in-house, transpilation requires third party tooling. Transpilers range from the good to the bad, with many generating unoptimized transpiled code. (And why would they? They are designed to be general tools.) Accordingly, efficiency and performance would reside outside the control of this project, which is not an acceptable cost.\n-   **Backward Compatibility**: the ability to probe the past is equally as valuable as the ability to build for the future.\n-   **Transparency**: source code matches distributed code. This one-to-one correspondence means a) easier debugging without maintenance overhead (e.g., source-maps) and b) individuals reading the source code can better form expectations as to how that code will execute in a deployed environment.\n-   **Simplicity**: any additional interface, syntax, or build step adds complexity.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"monorepo\"></a>\n\n### Why a monorepo?\n\n-   **Tooling**: a monorepo facilitates better and more extensive tooling related to actual development. A polyrepo approach requires more tooling orthogonal to development, such as tooling for aggregation and maintaining repository consistency.\n-   **Dependencies**: a monorepo enables easier management of project dependencies, particularly development dependencies related to testing and automation.\n-   **Coordination**: a monorepo facilitates coordination of changes across multiple modules and/or an entire project.\n-   **Issues**: a monorepo centralizes issues and bug reporting. Managing and tracking issues and bug reports across many repositories is time consuming and error prone.\n-   **Testing**: a monorepo drastically simplifies continuous, automated testing. Integration testing across multiple repositories requires extensive tooling, which distracts from core library development. Further, individual repositories are frequently tested only when a change happens to code within **that** repository, which means that bugs caused by changes to other project repositories are caught after-the-fact, rather than pro-actively via continuous testing.\n-   **Context**: a monorepo provides a single entry point and context by which new and existing users can access the project. In a polyrepo approach, new and existing users often lack the required context to understand how an individual repository fits within a larger project.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"lib-node-modules\"></a>\n\n### Why are library packages in a node_modules directory?\n\nThis project leverages the Node.js module resolution [algorithm][node-require] to resolve dependencies by name rather than by path. Hence, the project avoids relative require paths. For example,\n\n<!-- eslint-disable stdlib/require-file-extensions -->\n\n```javascript\nvar foo = require( './../../../../../@stdlib/foo' );\n```\n\nbecomes\n\n<!-- eslint-disable stdlib/require-file-extensions, stdlib/no-redeclare -->\n\n```javascript\nvar foo = require( '@stdlib/foo' );\n```\n\nIn general, far too many developers are oblivious to the module resolution [algorithm][node-require], often resorting to various unnecessary hacks, such as setting environment variables (e.g., `NODE_PATH`), using globals, creating symbolic links (symlink), using `require` wrappers, running startup scripts, or actually hacking `require` itself (see [here][modifying-node-path-hack] and [here][list-of-require-hacks] as representative references). A superior approach is to leverage the module resolution [algorithm][node-require] to scope internal packages to their relevant context. For example, consider the following application directory structure\n\n```text\n/\n  app/\n      index.js\n      a.js\n      b.js\n      node_modules/ # => local app dependencies\n          debug/\n              index.js\n          logger/\n              index.js\n      routes/\n          index.js\n          login/\n              index.js\n              login.js\n              post.js\n              onerror.js\n          logout/\n              index.js\n              logout.js\n              post.js\n              onerror.js\n          node_modules/ # => local routes dependencies\n              start/\n                  index.js\n              end/\n                  index.js\n              response-time/\n                  index.js\n      models/\n          index.js\n          c.js\n          d.js\n          user/\n              index.js\n              e.js\n              f.js\n              node_modules/ # => local user model dependencies\n                  foo/\n                      index.js\n                  bar/\n                      index.js\n          data/\n              index.js\n              g.js\n              h.js\n              i.js\n              node_modules/ # => local data model dependencies\n                  transform/\n                      index.js\n                  analyze/\n                      index.js\n                  morph/\n                      index.js\n          node_modules/ # => local models dependencies\n              db-connect/\n                  index.js\n              db-get/\n                  index.js\n              db-set/\n                  index.js\n              db-update/\n                  index.js\n              db-delete/\n                  index.js\n  node_modules/ # => external dependencies\n      beep/\n      boop/\n      bop/\n```\n\nwhere `g.js`\n\n<!-- eslint-disable -->\n\n```javascript\nvar beep = require( 'beep' );\nvar debug = require( 'debug' );\nvar get = require( 'db-get' );\nvar transform = require( 'transform' );\nvar h = require( './h.js' );\n\n// ...\n```\n\nBy leveraging `node_modules`, each local `node_modules` dependency\n\n1.  is scoped to its relevant context\n2.  does not pollute the top-level `node_modules` directory which contains external dependencies\n3.  allows modules within a scope to require the dependency by name rather than by relative path in a manner similar to `node_modules` dependencies in parent scopes (including external dependencies)\n4.  may be elevated to a higher scope without needing to update require paths\n\nIn short, the module resolution [algorithm][node-require] provides a simple and robust cross-platform solution for managing both external and local module dependencies.\n\n**Aside**: A common objection to the directory structure above is that tools often ignore anything within a `node_modules` folder (e.g., linters, unit test runners, etc). That this project is able to configure tools to recognize files within `node_modules` folders is evidence to the contrary. If a tool cannot be configured otherwise, that is a flaw in the tool, not in the approach.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"decomposable-software\"></a>\n\n### What is meant by saying the project is \"decomposable\"?\n\nThis project embraces the software design philosophy of **modular decomposition**; i.e., breaking a complex system into independent parts that are easier to design, understand, implement, and maintain. The project's approach draws inspiration from the Unix philosophy, component-based software engineering, and The Node Way.\n\nWhen we say that the project is _decomposable_, we mean that **every** package (both core library and tooling) developed within the project is designed and implemented such that each package can be consumed and understood _independently_ of the project. More concretely, every package is required to maintain resource **locality**, containing its own documentation, tests, benchmarks, and examples. Thus, each package can be understood to form a single coherent whole which, provided satisfaction of package dependencies, allows each package to exist independently.\n\nFrom a practical perspective,\n\n> you should **not** have to install the entire project in order to consume (or customize) only a single part.\n\nThe approach embraced by this project stands in contrast to more traditional standard library approaches, including those found in languages such as Python, R, and Julia, where, in order to use a single function, you need to bundle the entire runtime **and** every other standard library function. Instead, this project holds that you should be able to consume only what you need, when you need it, nothing more, nothing less.\n\nWhile development happens on a single repository (i.e., a monorepo), the larger aim is to facilitate project decomposition into individual repositories, thus allowing people to fork, customize, and recombine the varied project parts as necessary and, in effect, to easily build their own standard libraries. Accordingly, not only will the project be **decomposable**, but the project will be infinitely **composable** and, in perhaps more philosophical terms, fully support the duality of decomposition and composition.\n\n**Aside**: while project build scripts exist to publish each package independently and as separate repositories, the timeline for doing so is undetermined. The timeline is predicated on a fixed project namespace (meaning, once a package is independently published, we cannot revert this action). Upon reaching version `1.0`, the project will commit to a layout and organization and subsequently publish packages independently.\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"supporting\"></a>\n\n### How can I support the project?\n\nYou can support the project by\n\n-   contributing algorithms and implementations\n-   adding tests and benchmarks\n-   helping improve documentation and examples\n-   using the project and offering feedback\n-   filing bug reports and flagging performance regressions\n-   advocating for standards committees to add features at the specification level to better enable numerical computing in JavaScript\n-   helping promote the project on social media, at your company, and within your networks\n-   providing build and infrastructure support\n-   providing financial support ([Open Collective][open-collective-stdlib])\n\nIf you have additional ideas, get in touch, and we'll do our best to help!\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"why-contribute\"></a>\n\n### Why contribute?\n\nYou should contribute\n\n-   if you want to write high-quality software\n-   if you want to learn underlying algorithms\n-   if you want to learn how to write rigorous and robust implementations\n-   if you want to bring numerical and scientific computing to JavaScript and the Web\n-   if you want to be part of a dedicated, supportive, and inclusive community\n-   if you believe in what we are doing and want to be a part of it :)\n\nReach out, get in touch, and we'll be happy to get you started!\n\n<!-- </faq-question> -->\n\n<!-- <faq-question> -->\n\n* * *\n\n<a name=\"contributing\"></a>\n\n### How can I contribute?\n\nSee the [contributing guide][contributing-guide].\n\n<!-- </faq-question> -->\n\n<!-- </faq-questions> -->\n\n<!-- <definitions> -->\n\n[dom]: https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\n\n[canvas]: https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\n\n[webgl]: https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\n\n[gpgpu]: https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units\n\n[compute-shaders]: https://www.khronos.org/opengl/wiki/Compute_Shader\n\n[vulkan]: https://www.khronos.org/vulkan/\n\n[shiny]: http://shiny.rstudio.com/\n\n[bokeh]: http://bokeh.pydata.org/en/latest/\n\n[plotly]: https://plot.ly/matlab/\n\n[stackoverflow-developer-survey]: http://stackoverflow.com/research/developer-survey-2016\n\n[module-counts]: http://www.modulecounts.com/\n\n[node-fortune-500]: https://nodejs.org/en/blog/announcements/foundation-advances-growth/\n\n[javascript-ubiquity]: https://blog.codinghorror.com/javascript-the-lingua-franca-of-the-web/\n\n[cylon-js]: https://github.com/hybridgroup/cylon/\n\n[iot-js]: https://github.com/Samsung/iotjs\n\n[jerryscript]: https://github.com/Samsung/jerryscript\n\n[johnny-five]: https://github.com/rwaldron/johnny-five\n\n[virtualenvs]: http://docs.python-guide.org/en/latest/dev/virtualenvs/\n\n[npm]: https://www.npmjs.com/\n\n[mdn-math]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\n\n<!--\n[mdn-web-workers]: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\n\n[mdn-transferable-objects]: https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Transferable_objects\n-->\n\n[built-in-math-bugs]: https://github.com/stdlib-js/stdlib/blob/develop/docs/misc/built_in_math_bugs.md\n\n[contributing-guide]: https://github.com/stdlib-js/stdlib/blob/develop/CONTRIBUTING.md\n\n[wasm]: https://github.com/WebAssembly/spec/\n\n[asm]: http://asmjs.org/spec/latest/\n\n[gyp]: https://gyp.gsrc.io/\n\n[gfortran]: https://gcc.gnu.org/fortran/\n\n[msvs-fortran-issue]: https://github.com/nodejs/node-gyp/issues/1102\n\n[numpy]: https://numpy.org/\n\n[scipy]: https://www.scipy.org/scipylib/index.html\n\n[scikit-learn]: http://scikit-learn.org/stable/\n\n[jupyter]: http://jupyter.org/\n\n[semver]: http://semver.org/\n\n[node-release]: https://github.com/nodejs/Release\n\n[node-add-ons]: https://nodejs.org/api/addons.html\n\n[node-nan]: https://github.com/nodejs/nan\n\n[node-gyp]: https://github.com/nodejs/node-gyp\n\n[node-windows-build-tools]: https://github.com/felixrieseberg/windows-build-tools\n\n[node-napi]: https://github.com/nodejs/abi-stable-node/\n\n[node-require]: https://nodejs.org/api/modules.html\n\n<!--\n[node-child-process]: https://nodejs.org/api/child_process.html\n-->\n\n[modifying-node-path-hack]: https://lostechies.com/derickbailey/2014/02/20/how-i-work-around-the-require-problem-in-nodejs/\n\n[list-of-require-hacks]: https://gist.github.com/branneman/8048520\n\n[ecma-262]: http://www.ecma-international.org/publications/standards/Ecma-262.htm\n\n[ecma-262-array-length]: http://www.ecma-international.org/ecma-262/6.0/#sec-arraycreate\n\n[ecma-262-tolength]: http://www.ecma-international.org/ecma-262/6.0/#sec-tolength\n\n[ecma-262-asi]: https://www.ecma-international.org/ecma-262/5.1/#sec-7.9\n\n<!--\n[golang-frexp]: https://github.com/golang/go/blob/c007ce824d9a4fccb148f9204e04c23ed2984b71/src/math/frexp.go#L27\n\n[golang-float64bits]: https://github.com/golang/go/blob/964639cc338db650ccadeafb7424bc8ebb2c0f6c/src/math/unsafe.go#L17\n-->\n\n[golang-big]: https://golang.org/pkg/math/big/\n\n[julia-bigint]: http://docs.julialang.org/en/stable/stdlib/numbers/?highlight=bigfloat#Base.BigInt\n\n[julia-bigfloat]: http://docs.julialang.org/en/stable/stdlib/numbers/?highlight=bigfloat#Base.BigFloat\n\n<!--\n[@stdlib/math/base/special/frexp]: https://github.com/stdlib-js/stdlib/blob/0b1a64efef8859a17a60edb7ccaab62937b77a63/lib/node_modules/%40stdlib/math/base/special/frexp/lib/frexp.js#L67\n\n[@stdlib/math/base/special/ldexp]: https://github.com/stdlib-js/stdlib/blob/0b1a64efef8859a17a60edb7ccaab62937b77a63/lib/node_modules/%40stdlib/math/base/special/ldexp/lib/ldexp.js#L105\n\n[@stdlib/math/base/special/exp10]: https://github.com/stdlib-js/stdlib/blob/0b1a64efef8859a17a60edb7ccaab62937b77a63/lib/node_modules/%40stdlib/math/base/special/exp10/lib/exp10.js#L131\n\n[@stdlib/math/base/utils/float64-to-words]: https://github.com/stdlib-js/stdlib/blob/1db589dcd5a8f8c4e4ab3bae8e8c47bd0c0266e8/lib/node_modules/%40stdlib/math/base/utils/float64-to-words/lib/to_words.js\n\n[xorshift*]: https://en.wikipedia.org/wiki/Xorshift\n\n[pcg]: http://www.pcg-random.org/other-rngs.html\n\n[mersenne-twister]: https://en.wikipedia.org/wiki/Mersenne_Twister\n\n[uuid]: https://en.wikipedia.org/wiki/Universally_unique_identifier\n\n[symmetric-ciphers]: https://en.wikipedia.org/wiki/Symmetric-key_algorithm\n\n[arbitrary-precision-arithmetic]: https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic\n-->\n\n[mozilla-simd]: https://hacks.mozilla.org/2014/10/introducing-simd-js/\n\n[ecmascript-simd]: https://github.com/tc39/ecmascript_simd/\n\n[five-things-that-make-go-fast]: http://dave.cheney.net/2014/06/07/five-things-that-make-go-fast\n\n[typed-objects-proposal]: https://github.com/dslomov/typed-objects-es7\n\n[typed-objects-explainer]: https://github.com/nikomatsakis/typed-objects-explainer\n\n[operator-overloading]: https://en.wikipedia.org/wiki/Operator_overloading\n\n<!--\n[data-parallelism]: https://en.wikipedia.org/wiki/Data_parallelism\n\n[matlab-parfor]: https://www.mathworks.com/help/distcomp/parfor.html\n-->\n\n[open-collective-stdlib]: https://opencollective.com/stdlib\n\n<!-- </definitions> -->\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 15.443359375,
          "content": "<!--\n\n@license CC-BY-SA-4.0\n\n-->\n\n# Governance\n\n> Governance model describing project roles and responsibilities and the decision making process.\n\nThe purpose of this document is to formalize the governance process used by the stdlib project to clarify how decisions are made and how the various elements of our community interact, including the relationship between open source collaborative development and work that may be funded by for-profit or non-profit entities. This document establishes a decision-making process that takes into account feedback from all members of the community and strives to achieve consensus while avoiding any deadlocks.\n\nThis is a meritocratic, consensus-seeking community project. Anyone with an interest in the project can join the community, contribute to the project design, and participate in the decision making process. This document describes how that participation occurs and how to earn merit within the project community.\n\n## The Project\n\nThe stdlib Project (The Project) is an open source software project. Public Software developed by The Project is released under the Apache-2.0 (or similar) open source license, developed openly, and hosted on public GitHub repositories under the `stdlib-js` GitHub organization.\n\nThe Project is developed by a team of distributed developers called Contributors. Contributors are individuals who have contributed code, documentation, designs, or other work to The Project.\n\nThe Project Community consists of all Contributors and Users of The Project. Contributors work on behalf of and are responsible to the larger Project Community, and The Project strives to keep the barrier between Contributors and Users as low as possible.\n\n## Governance\n\nThis section describes the governance and leadership model of The Project. The core values of The Project's governance model are:\n\n-   Openness and Transparency\n-   Active Contribution\n-   Institutional Neutrality\n\n### Roles and Responsibilities\n\n#### Contributors\n\nContributors are Community members who have contributed code, documentation, designs, or other work to The Project. Anyone can be a Contributor. Contributors can be affiliated with any legal entity or none. Contributors participate in The Project by submitting, reviewing, and discussing GitHub Pull Requests and Issues and participating in open and public Project discussions on GitHub, mailing lists, and other channels.\n\n#### Core Contributors\n\nCore Contributors are Community members who have demonstrated their dedication to the continued development of The Project through ongoing engagement with the Community.\n\nBoth Core and non-Core Contributors may propose changes to The Project. The mechanism to propose such a change is a GitHub Issue. The mechanism to implement such a change is a GitHub Pull Request. Core Contributors may review and merge (land) Pull Requests.\n\nAt least one Core Contributor must approve a Pull Request before a Pull Request can land. Approving a Pull Request indicates that the Core Contributor accepts responsibility for the change. Approval must be from Core Contributors who are not authors of the change.\n\nIf a Core Contributor opposes a proposed change (lazy consensus), then the change cannot land. The exception is if the Technical Steering Committee (TSC) votes to approve the change despite the opposition. Usually, involving the TSC is unnecessary, and discussions or further changes result in Core Contributors removing their opposition.\n\nNew Core Contributors can be nominated by any existing Core Contributors. Once they have been nominated, current Core Contributors will hold a private vote. While the expectation is that most votes will be unanimous, a two-thirds majority of the cast votes is sufficient for a nomination to pass. Voting on Core Contributor nominations must be open for at least 1 week.\n\nThe TSC can remove inactive Core Contributors or provide them with _emeritus_ status. Emeriti may request that the TSC restore them to active status.\n\nA Core Contributor is automatically made emeritus (and removed from active Core Contributor status) if more than 18 months has passed since the Core Contributor authored or approved a Pull Request that has landed.\n\n##### Core Contributor Activities\n\n-   Helping users and novice Contributors\n-   Contributing code and documentation changes that improve The Project\n-   Reviewing and commenting on Issues and Pull Requests\n-   Participation in working groups\n-   Casting votes for and against merging a Pull Request\n-   Merging approved Pull Requests\n\n#### Technical Steering Committee\n\nA subset of the Core Contributors who have produced contributions that are substantial in quality and quantity, and sustained for over at least one year, forms the Technical Steering Committee (TSC). The overall role of the TSC is to ensure, with input from the Community, the long-term well-being of The Project, both technically and as a community.\n\nThe TSC has final authority over The Project, including:\n\n-   Technical direction\n-   Project governance and process (including this policy)\n-   Contribution policy\n-   Conduct guidelines\n-   GitHub repository hosting\n-   Development process and any coding standards\n-   Setting release dates\n-   Release quality standards\n-   Making decisions when Core Contributors are unable to reach consensus on an issue within a reasonable time frame\n-   Maintaining the list of Core Contributors\n\nTSC Members participate in all discussions, code review, and other everyday Project activities as peers with all other Contributors and the Community. In these activities, TSC Members do not have any special power or privilege through their membership on the TSC. However, because of the quality and quantity of their contributions and their expert knowledge of The Project Software and Services, TSC Members are expected to provide useful guidance, both technically and concerning Project direction, to potentially less experienced Contributors.\n\nThe TSC shall meet regularly using tools and enable participation by the community (e.g., weekly on a Google Hangout or through any other appropriate means selected by the TSC). The meeting shall be directed by the TSC Chairperson. Responsibility for directing individual meetings may be delegated by the TSC Chairperson to any other TSC Member. Minutes or an appropriate recording shall be taken and made available to the community through accessible public postings.\n\nThe TSC may, at its discretion, invite any number of non-voting observers to participate in the public portion of TSC discussions and meetings.\n\nTSC Members are expected to regularly participate in TSC activities.\n\n##### Membership\n\nThe TSC has no maximum size, and TSC membership is not time-limited. The size of the TSC is expected to vary in order to ensure adequate coverage of important areas of expertise, balanced with the ability to make decisions efficiently. The TSC must have at least two members.\n\nTo become eligible to join the TSC, an individual must be a Project Core Contributor who has produced contributions that are substantial in quality and quantity and sustained over at least one year. Potential TSC Members are nominated by existing TSC Members and become Members following a formal vote among existing TSC Members and confirmation that the potential TSC member is interested and willing to serve in that capacity.\n\nThe initial TSC is the set of existing Core Contributors who, as of late 2022, have been significantly active over the prior year.\n\nWhen considering potential TSC Members, the TSC will evaluate candidates based on a comprehensive review of their contributions. This will include, but is not limited to, code, code review, infrastructure, tooling, mailing list and chat participation, community help and building, education and outreach, and design. In general, the TSC should reflect a diverse array of backgrounds, viewpoints, and talents.\n\nThe TSC may add additional Members to the TSC by a standard TSC motion and vote. A TSC member may be removed from the TSC by voluntary resignation, by a standard TSC motion, or in accordance with the participation rules described below.\n\nThe TSC reserves the right to remove current TSC Members if they are deemed to be actively harmful to The Project's well-being and attempts at communication and conflict resolution have failed. Removal requires a standard TSC motion and a two-thirds majority of the cast votes by the TSC's remaining Members.\n\nChanges to TSC membership should be posted in the agenda and may be suggested as any other agenda item.\n\nA TSC Member is eligible for automatic removal from the TSC if, during a 6-month period, all of the following are true:\n\n-   They attend fewer than 25% of the regularly scheduled meetings.\n-   They do not participate in any TSC votes.\n\nBefore removal, an inactive TSC Member must be approached to confirm that they no longer wish to participate in the TSC. If they no longer wish to participate, they will be immediately removed from the TSC. If they plan to resume active participation in the TSC, they will be given a grace period of one year. If they don't return to active participation within that time period, they will be immediately removed from the TSC.\n\nAll former TSC Members can be considered for membership again at any time in the future, like any other Project Contributor.\n\nThe TSC Chairperson must be a TSC Member and is elected on an annual basis. The Chairperson shall be selected by TSC Members according to a simple majority vote. In the event of a tie, among the tied candidates, whoever has the most seniority as determined by earliest commit date shall be the Chairperson. A TSC Chairperson is not limited to a maximum number of terms as Chairperson.\n\n##### Decision Making Process\n\nDecision making should follow the [Apache Foundation voting process][apache-foundation-voting-process]. This is a formalized version of consensus in which `+1` votes indicate agreement, `-1` votes (lazy consensus) are vetoes (and must be accompanied with a rationale), `0` votes indicate ambivalence (i.e., do not agree but will not stand in the way), positive fractional votes indicate varying levels of support with possible reservations, and negative fractional votes indicate varying levels of disapproval without standing in the way in the event of consensus among other voting participants.\n\nThese numeric votes may be used informally as a way of getting a general sense of people's feeling on an issue, but should not normally be taken as formal votes. A formal vote only occurs if explicitly declared. When a formal vote is held, voting must be open for at least one week in order to give all interested TSC Members a chance to vote, regardless of their geographic location.\n\n##### Conflict of Interest\n\nTSC Members are expected to be employed at a wide range of companies, universities, and non-profit organizations. Because of this, TSC Members may have possible conflicts of interest. Such conflicts of interest include, but are not limited to:\n\n-   Financial interests, such as investments, employment, or contracting work outside of The Project that may influence their work on The Project.\n-   Access to proprietary information of their employer that could potentially leak into their work with The Project.\n\nAll TSC Members shall disclose to the rest of the TSC any conflict of interest they may have. Members with a conflict of interest in a particular issue may participate in TSC discussions on that issue but must recuse themselves from voting on the issue.\n\n#### Institutional Partners and Funding\n\nThe Technical Steering Committee (TSC) is the primary leadership for The Project. No outside institution, individual, or legal entity has the ability to own, control, usurp, or influence The Project other than by participating in The Project as Contributors and TSC Members. However, because institutions can be an important funding mechanism for The Project, formally acknowledging institutional participation in The Project is important. These are Institutional Partners.\n\nAn Institutional Contributor is any individual Project Contributor who contributes to The Project as part of their official duties at an Institutional Partner. Likewise, an Institutional TSC Member is any Project TSC Member who contributes to The Project as part of their official duties at an Institutional Partner.\n\nWith these definitions, an Institutional Partner is any recognized legal entity in the United States or elsewhere that employs at least one Institutional Contributor or Institutional TSC Member. Institutional Partners can be for-profit or non-profit entities.\n\nInstitutions become eligible to become an Institutional Partner by employing individuals who actively contribute to The Project as part of their official duties. Stated another way, the only way for an Institutional Partner to influence The Project is by actively contributing to the open development of The Project on equal terms with any other member of the community of Contributors and TSC Members. Merely using Project Software in institutional contexts does not allow an entity to become an Institutional Partner. Financial gifts do not enable an entity to become an Institutional Partner. Once an institution becomes eligible for Institutional Partnership, the TSC must nominate and approve the Partnership.\n\nIf an existing Institutional Partner stops having any contributing employees, then a one year grace period commences. At the end of this one year period, if an existing Institutional Partner continues not to have any contributing employees, then their Institutional Partnership will lapse and resuming the Partnership will require going through the normal process for new Partnerships.\n\nAn Institutional Partner is free to pursue funding for their work on The Project through any legal means. This could involve a non-profit organization raising money from private foundations and donors or a for-profit company building proprietary products and services that leverage Project Software and Services. Funding acquired by Institutional Partners to work on The Project is called Institutional Funding. However, no funding obtained by an Institutional Partner can override the TSC. If a Partner has funding to do Project work and the TSC decides to not pursue that work as a project, the Partner is free to pursue it on their own. However, in this situation, that part of the Partner’s work will not be under the umbrella of The Project and cannot use the Project trademarks in a way that suggests a formal relationship.\n\n## Changes\n\nThis is a living document and may be updated over time. Refer to the [git history for this document][stdlib-git-commit-log-governance] to view changes.\n\n## Attribution\n\nSubstantial portions of this document were adapted from the following governance models:\n\n-   [NumPy][numpy-governance]\n-   [Node.js][nodejs-governance]\n-   [Sckit-learn][scikit-learn-governance]\n\n## License\n\nThis document may be reused under a [Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license][cc-by-sa-4.0].\n\n<section class=\"links\">\n\n[apache-foundation-voting-process]: https://www.apache.org/foundation/voting.html\n\n[numpy-governance]: https://github.com/numpy/numpy/blob/6db3236cd81c107d752d8ef5fb411f26bf8b7255/doc/source/dev/governance/governance.rst\n\n[nodejs-governance]: https://github.com/nodejs/node/blob/0be1c5728173ea9ac42843058e26b6268568acf0/GOVERNANCE.md\n\n[scikit-learn-governance]: https://github.com/scikit-learn/scikit-learn/blob/0c8820b6e4f9c49f55e96fcbb297073a887eb37b/doc/governance.rst\n\n[cc-by-sa-4.0]: https://creativecommons.org/licenses/by-sa/4.0/\n\n[stdlib-git-commit-log-governance]: https://github.com/stdlib-js/stdlib/commits/develop/GOVERNANCE.md\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 23.392578125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by this\nlicense (the \"Software\") to use, reproduce, display, distribute, execute, and\ntransmit the Software, and to prepare derivative works of the Software, and to\npermit third-parties to whom the Software is furnished to do so, all subject to\nthe following:\n\nThe copyright notices in the Software and this entire statement, including the\nabove license grant, this restriction and the following disclaimer, must be\nincluded in all copies of the Software, in whole or in part, and all derivative\nworks of the Software, unless such copies or derivative works are solely in the\nform of machine-executable object code generated by a source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES\nOR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF\nOR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\nDEPENDENCIES\n\nThe library links against the following external libraries, which have their own\nlicenses:\n\n* OpenBLAS <https://raw.githubusercontent.com/xianyi/OpenBLAS/\ndef146efed8d5908ea04e22668feeab7099599a0/LICENSE>\n\nCopyright (c) 2011-2014, The OpenBLAS Project\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   1. Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and/or other materials provided with the\n      distribution.\n\n   3. Neither the name of the OpenBLAS project nor the names of\n      its contributors may be used to endorse or promote products\n      derived from this software without specific prior written\n      permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\nTHE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n* Electron <https://raw.githubusercontent.com/electron/electron/\nc4cfb3e7110266b9d7ad80e1ae097c4db564501c/LICENSE>\n\nCopyright (c) 2013-2017 GitHub Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n* Boost <http://www.boost.org/LICENSE_1_0.txt>\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n\n* Cephes <http://www.netlib.org/cephes/readme>\n\nCopyright (c) 1984-2000 Stephen L. Moshier\n\nSome software in this archive may be from the book _Methods and Programs for\nMathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989)\nor from the Cephes Mathematical Library, a commercial product. In either event,\nit is copyrighted by the author. What you see here may be used freely but it\ncomes with no support or guarantee.\n\nStephen L. Moshier\nmoshier@na-net.ornl.gov\n\n\n\nATTRIBUTION\n\nThe library contains implementations from the following external libraries,\nwhich have their own licenses:\n\n* FreeBSD <https://svnweb.freebsd.org/>\n\nCopyright (C) 1993-2004 by Sun Microsystems, Inc. All rights reserved.\n\nDeveloped at SunPro, a Sun Microsystems, Inc. business.\nPermission to use, copy, modify, and distribute this\nsoftware is freely granted, provided that this notice\nis preserved.\n\n\n* FDLIBM <http://www.netlib.org/fdlibm/>\n\nCopyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n\nDeveloped at SunPro, a Sun Microsystems, Inc. business.\nPermission to use, copy, modify, and distribute this\nsoftware is freely granted, provided that this notice\nis preserved.\n\n\n* Go <https://raw.githubusercontent.com/golang/go/master/LICENSE>\n\nCopyright (c) 2009 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n* SLATEC Common Mathematical Library <https://netlib.org/slatec/>\n\nPublic domain.\n\n\n* ESLint <https://raw.githubusercontent.com/eslint/eslint/master/LICENSE>\n\nCopyright JS Foundation and other contributors, https://js.foundation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n* StatsFuns.jl <https://raw.githubusercontent.com/JuliaStats/StatsFuns.jl/\ne66dd973650c375bc1739c820e5b96bb5bd000a8/LICENSE.md>\n\nCopyright (c) 2015: Dahua Lin.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n* SpecialFunctions.jl <https://raw.githubusercontent.com/JuliaMath/\nSpecialFunctions.jl/02a173fbe24a61c4b392aec17a9764ac5727feb1/LICENSE>\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Jeff Bezanson, Stefan Karpinski, Viral B. Shah, and others:\n\nhttps://github.com/JuliaMath/SpecialFunctions.jl/graphs/contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n* MT19937 <http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/\nmt19937ar.c>\n\nCopyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n 3. The names of its contributors may not be used to endorse or promote\n    products derived from this software without specific prior written\n    permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.48046875,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2017 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# VARIABLES #\n\n# Determine the filename:\nthis_file := $(lastword $(MAKEFILE_LIST))\n\n# Determine the absolute path of the Makefile (see http://blog.jgc.org/2007/01/what-makefile-am-i-in.html):\nthis_dir := $(dir $(CURDIR)/$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST)))\n\n# Remove the trailing slash:\nthis_dir := $(patsubst %/,%,$(this_dir))\n\n# Define the root project directory:\nROOT_DIR ?= $(this_dir)\n\n# Define the top-level directory containing source files:\nSRC_DIR ?= $(ROOT_DIR)/lib/node_modules\n\n# Define the root tools directory:\nTOOLS_DIR ?= $(ROOT_DIR)/tools\n\n# Define the directory containing tools which are Node.js packages:\nTOOLS_PKGS_DIR ?= $(SRC_DIR)/@stdlib/_tools\n\n# Define the directory containing the entry point for Makefile dependencies:\nTOOLS_MAKE_DIR ?= $(TOOLS_DIR)/make\n\n# Define the subdirectory containing Makefile dependencies:\nTOOLS_MAKE_LIB_DIR ?= $(TOOLS_MAKE_DIR)/lib\n\n# Define the root build directory:\nBUILD_DIR ?= $(ROOT_DIR)/build\n\n# Define the root directory for storing distributable files:\nDIST_DIR ?= $(ROOT_DIR)/dist\n\n# Define the root directory for storing temporary files:\nTMP_DIR ?= $(ROOT_DIR)/tmp\n\n# Define the root configuration directory:\nCONFIG_DIR ?= $(ROOT_DIR)/etc\n\n# Define the directories for writing reports, including code coverage:\nREPORTS_DIR ?= $(ROOT_DIR)/reports\nCOVERAGE_DIR ?= $(REPORTS_DIR)/coverage\nCOMPLEXITY_DIR ?= $(REPORTS_DIR)/complexity\n\n# Define the directory for workshops:\nWORKSHOPS_DIR ?= $(ROOT_DIR)/workshops\n\n# Define the directory for documentation:\nDOCS_DIR ?= $(ROOT_DIR)/docs\n\n# Define the directory for generated source code documentation:\nSRC_DOCS_DIR ?= $(BUILD_DIR)/docs\n\n# Define the directory for instrumented source code:\nCOVERAGE_INSTRUMENTATION_DIR ?= $(BUILD_DIR)/coverage\n\n# Define the top-level directory containing executables:\nLOCAL_BIN_DIR ?= $(ROOT_DIR)/bin\n\n# Define the top-level directory containing vendor dependencies:\nDEPS_DIR ?= $(ROOT_DIR)/deps\n\n# Define the path to the root `package.json`:\nROOT_PACKAGE_JSON ?= $(ROOT_DIR)/package.json\n\n# Define the top-level directory containing node module dependencies:\nNODE_MODULES ?= $(ROOT_DIR)/node_modules\n\n# Define the folder name convention for node module dependencies:\nNODE_MODULES_FOLDER ?= node_modules\n\n# Define the top-level directory containing node module executables:\nBIN_DIR ?= $(NODE_MODULES)/.bin\n\n# Define the folder name convention for source files:\nSOURCE_FOLDER ?= lib\n\n# Define the folder name convention for source files requiring compilation:\nSRC_FOLDER ?= src\n\n# Define the folder name convention for test files:\nTESTS_FOLDER ?= test\n\n# Define the folder name convention for test fixtures:\nTESTS_FIXTURES_FOLDER ?= $(TESTS_FOLDER)/fixtures\n\n# Define the folder name convention for examples files:\nEXAMPLES_FOLDER ?= examples\n\n# Define the folder name convention for examples fixtures:\nEXAMPLES_FIXTURES_FOLDER ?= $(EXAMPLES_FOLDER)/fixtures\n\n# Define the folder name convention for benchmark files:\nBENCHMARKS_FOLDER ?= benchmark\n\n# Define the folder name convention for benchmark fixtures:\nBENCHMARKS_FIXTURES_FOLDER ?= $(BENCHMARKS_FOLDER)/fixtures\n\n# Define the folder name convention for executables:\nBIN_FOLDER ?= bin\n\n# Define the folder name convention for documentation files:\nDOCUMENTATION_FOLDER ?= docs\n\n# Define the folder name convention for configuration files:\nCONFIG_FOLDER ?= etc\n\n# Define the folder name convention for build artifacts:\nBUILD_FOLDER ?= build\n\n# Define the folder name convention for distributable files:\nDIST_FOLDER ?= dist\n\n# Define the folder name convention for data files:\nDATA_FOLDER ?= data\n\n# Define the folder name convention for scripts:\nSCRIPTS_FOLDER ?= scripts\n\n# Define the folder name convention for temporary files:\nTMP_FOLDER ?= tmp\n\n# Define the folder name convention for TypeScript declaration files:\nTYPESCRIPT_DECLARATIONS_FOLDER ?= $(DOCUMENTATION_FOLDER)/types\n\n# Define the folder name convention for REPL tutorial files:\nTUTORIALS_FOLDER ?= $(DOCUMENTATION_FOLDER)/tutorials\n\n# Define filename extension conventions (keep in alphabetical order):\nAWK_FILENAME_EXT ?= awk\nBASH_FILENAME_EXT ?= sh\nBIBTEX_FILENAME_EXT ?= bib\nC_FILENAME_EXT ?= c\nC_HEADER_FILENAME_EXT ?= h\nCSL_FILENAME_EXT ?= csl\nCSS_FILENAME_EXT ?= css\nCSV_FILENAME_EXT ?= csv\nCPP_FILENAME_EXT ?= cpp\nCPP_HEADER_FILENAME_EXT ?= hpp\nFORTRAN_FILENAME_EXT ?= f\nGYP_FILENAME_EXT ?= gyp\nGYPI_FILENAME_EXT ?= gypi\nHTML_FILENAME_EXT ?= html\nJAVASCRIPT_FILENAME_EXT ?= js\nJPEG_FILENAME_EXT ?= jpg\nJSON_FILENAME_EXT ?= json\nJULIA_FILENAME_EXT ?= jl\nMAKEFILE_FILENAME_EXT ?= mk\nMARKDOWN_FILENAME_EXT ?= md\nNODEJS_NATIVE_ADDON_FILENAME_EXT ?= node\nPNG_FILENAME_EXT ?= png\nPYTHON_FILENAME_EXT ?= py\nR_FILENAME_EXT ?= R\nSHELL_FILENAME_EXT ?= sh\nSVG_FILENAME_EXT ?= svg\nTEXT_FILENAME_EXT ?= txt\nTYPESCRIPT_FILENAME_EXT ?= ts\nTYPESCRIPT_DECLARATION_FILENAME_EXT ?= d.$(TYPESCRIPT_FILENAME_EXT)\nWASM_FILENAME_EXT ?= wasm\nWAT_FILENAME_EXT ?= wat\nYAML_FILENAME_EXT ?= yml\n\n# Define Node paths:\nNODE_PATH ?= $(ROOT_DIR)/lib/node_modules\nNODE_PATH_BENCHMARK ?= $(NODE_PATH)\nNODE_PATH_EXAMPLES ?= $(NODE_PATH)\nNODE_PATH_REPL ?= $(NODE_PATH)\nNODE_PATH_TEST ?= $(NODE_PATH)\nNODE_PATH_WORKSHOPS ?= $(NODE_PATH)\n\n# Define Node environments:\nifdef NODE_ENV\n\tNODE_ENV_BENCHMARK := $(NODE_ENV)\n\tNODE_ENV_EXAMPLES := $(NODE_ENV)\n\tNODE_ENV_REPL := $(NODE_ENV)\n\tNODE_ENV_TEST := $(NODE_ENV)\n\tNODE_ENV_WORKSHOPS := $(NODE_ENV)\nelse\n\tNODE_ENV ?=\n\tNODE_ENV_BENCHMARK ?= benchmark\n\tNODE_ENV_EXAMPLES ?= examples\n\tNODE_ENV_REPL ?= repl\n\tNODE_ENV_TEST ?= test\n\tNODE_ENV_WORKSHOPS ?= workshop\nendif\n\n# Define command-line flags when invoking the Node executable:\nifdef NODE_FLAGS\n\tNODE_FLAGS_BENCHMARK := $(NODE_FLAGS)\n\tNODE_FLAGS_EXAMPLES := $(NODE_FLAGS)\n\tNODE_FLAGS_REPL := $(NODE_FLAGS)\n\tNODE_FLAGS_TEST := $(NODE_FLAGS)\n\tNODE_FLAGS_WORKSHOPS := $(NODE_FLAGS)\nelse\n\tNODE_FLAGS ?=\n\tNODE_FLAGS_BENCHMARK ?=\n\tNODE_FLAGS_EXAMPLES ?=\n\tNODE_FLAGS_REPL ?=\n\tNODE_FLAGS_TEST ?=\n\tNODE_FLAGS_WORKSHOPS ?=\nendif\n\n\n# DEPENDENCIES #\n\ninclude $(TOOLS_MAKE_DIR)/Makefile\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.04296875,
          "content": "Copyright (c) 2016-2025 The Stdlib Authors.\n"
        },
        {
          "name": "PRIVACY.md",
          "type": "blob",
          "size": 8.3359375,
          "content": "# Privacy Policy\n\nThis project tracks data about users of the project website, the project repository, and any other officially affiliated services.\n\nThis document tells you what data is tracked and how the data is used.\n\n## Definitions\n\n-   \"Project\" means the source repository and all officially affiliated services, including websites, applications, content, and products (\"Services\").\n-   \"Website\" is defined to comprise the main project website, officially affiliated websites, and the hosted (GitHub) source repository.\n-   \"We/Us\" refers to the principal body (project owners) governing the project.\n\n## Website\n\nThe website collects non-personally-identifying information of the sort that web browsers and servers typically make available, such as the browser type, language preference, referring site, and the date and time of each visitor request. The purpose in collecting non-personally-identifying information is to better understand how visitors use our Services. From time to time, we may release non-personally-identifying information in the aggregate, e.g., by publishing a report on usage trends.\n\nThe website also collects potentially personally-identifying information, such as Internet Protocol (IP) addresses. We may use this information to fight spam and other abuse. The website does not, however, use such information to identify its visitors and does not disclose such information, other than under the same circumstances that it uses and discloses personally-identifying information, as described below.\n\nThe website uses Google Analytics to monitor and analyze user behavior. This service provides information on users' demographics, age, location, and interest categories, when such information is available. This information is not used to identify individual users, but can, in some cases, be very specific. You can learn more about the information gathered and retained by this service at the [Google Analytics privacy policy][google-analytics-privacy-policy]. You can opt out of Google Analytics entirely with the [Google Analytics opt-out browser add-on][google-analytics-opt-out-browser-add-on].\n\n## Use of Personally-Identifying Information\n\nThe project will not rent or sell potentially personally-identifying and personally-identifying information to anyone. We may use personally-identifying information collected about you to provide you with tailored news, notes, and recommendations.\n\nIf you have supplied us with your email address, we may occasionally send you an email to tell you about new features, solicit feedback, or provide project updates. If you send us a request (e.g., via a support email or via one of our feedback mechanisms), we reserve the right to publish the request in order to help us clarify or respond to the request or to help us support other users.\n\nWe may be required to disclose personally-identifying information if legally compelled to by authorities. If we are going to share your information in response to legal process, we will give you advance notice so you can challenge the information's transfer (e.g., by seeking court intervention), unless we are prohibited from doing so by law or court order. We will object to requests for information about users of our Services that we believe to be improper.\n\nWe do not disclose your personal information to unaffiliated third parties who may want to offer you their own products and services unless you have requested or authorized us to do so.\n\n## Cookies\n\nA cookie is a string of information that a website stores on a visitor's computer and that the visitor's browser provides to the website each time the visitor returns.\n\nThe website may use cookies and other technologies, such as pixels and local storage, to help identify and track visitors and their usage of the website. Website visitors who do not wish to have cookies placed on their computers should set their browsers to refuse cookies before using the website.\n\nWe respect browser Do Not Track (\"DNT\") settings. If you have DNT enabled, we will not set cookies. Some third-party services, such as Google Analytics, may place their own cookies in your browser. This Privacy Policy covers the use of cookies by the project only and not the use of cookies by third parties.\n\n## Disclosure of Log Information\n\nAll user information is retained in raw form for such time as deemed appropriate by the project. Raw log data is not shared with third parties, but may be shared in aggregate. For example, we may publish blog posts or reports on website usage.\n\nWe also analyze log data for a variety of reasons, including counting unique visitors and debugging production problems. This helps us to better understand usage patterns and make project decisions.\n\n## Links to Other Websites\n\nThe project may contain links to other websites. Any personal information you provide on the linked pages is provided directly to that third party and is subject to that third party's privacy policy. Except as described above, we are not responsible for the content or privacy and security practices and policies of websites to which we link. Links from the project to third parties or to other sites are provided for your convenience. We encourage you to learn about their privacy and security practices and policies before providing them with personal information.\n\n## Data Storage\n\nThe project uses third-party vendors and hosting partners, such as Linode and Amazon, for hardware, software, networking, storage, and related technology needed to support the project.\n\n## Data Security\n\nThe website uses encryption (HTTPS/TLS) to protect transmitted data. However, no Internet data transmission is completely secure, and, thus, security is not guaranteed. You use the project and its Services at your own risk, and you are responsible for taking reasonable security measures.\n\n## Jurisdiction\n\nThe website is hosted in the United States. This Privacy Policy is intended to comply with privacy laws in the United States and may not comply with all privacy laws in other countries.\n\nIf you are a non-US user of the project, by using the project and providing us with data, you acknowledge, agree, and provide your consent that your personal information may be processed in the United States for the purposes identified in this Privacy Policy. In addition, such data may be stored on servers located outside your resident jurisdiction, which may have less stringent privacy practices than your own. By using the project and providing us with your data, you consent to the transfer of such data and any less stringent privacy practices.\n\n## Changes\n\nThis document is a living document which may be periodically updated at the project's sole discretion. Please refer to the [git history for this document][stdlib-git-commit-log-privacy-policy] to view the changes.\n\nWe encourage visitors to frequently check this document for any changes to our Privacy Policy. Your continued use of the website and the project after any change in this Privacy Policy will constitute your acceptance of such change.\n\n## Contact\n\nIf you have any questions or concerns about how we track user information, or how that information is used, please do not hesitate to contact us.\n\n## Attribution\n\nParts of this policy document were originally included in\n\n-   [WordPress.org Privacy Policy][wordpress-privacy-policy]\n-   [npm, Inc Privacy Policy][npm-privacy-policy]\n-   [Medium Privacy Policy][medium-privacy-policy]\n\nall of which were licensed under Creative Commons Attribution-ShareAlike licenses.\n\n## License\n\nThis document may be reused under a [Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license][cc-by-sa-4.0].\n\n## Copyright\n\nCopyright © The Stdlib [Authors][stdlib-authors].\n\n<section class=\"links\">\n\n[google-analytics-privacy-policy]: https://support.google.com/analytics/answer/2700409?hl=en&utm_id=ad\n\n[google-analytics-opt-out-browser-add-on]: https://support.google.com/analytics/answer/181881?hl=en&ref_topic=2919631\n\n[stdlib-git-commit-log-privacy-policy]: https://github.com/stdlib-js/stdlib/commits/develop/PRIVACY\n\n[wordpress-privacy-policy]: https://wordpress.org/about/privacy/\n\n[npm-privacy-policy]: https://docs.npmjs.com/policies/privacy\n\n[medium-privacy-policy]: https://github.com/Medium/medium-policy/blob/3c76f50e5e6a529c8352c85c9ed596ef95f863b7/privacy-policy.md\n\n[stdlib-authors]: https://github.com/stdlib-js/stdlib/graphs/contributors\n\n[cc-by-sa-4.0]: https://creativecommons.org/licenses/by-sa/4.0/\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 31.2080078125,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2018 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n<!-- lint disable first-heading-level -->\n\n<!-- Section to include announcements. If section is included, add a horizontal rule *after* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"announcement\">\n\n</section>\n\n<!-- /.announcement -->\n\n<!-- Section to include assets such as the project logo, etc. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"banner\">\n    <div class=\"image\" align=\"center\">\n        <br>\n        <br>\n        <a href=\"https://stdlib.io/\" />\n            <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@9f7d30f089ecc458a8b836a75afab75caf5c0b36/docs/assets/logo_banner.svg\" alt=\"stdlib logo\">\n        </a>\n        <br>\n        <br>\n        <br>\n        <br>\n    </div>\n</section>\n\n<!-- /.banner -->\n\n* * *\n\n<!-- Section to include introductory text. Make sure to keep an empty line after the intro `section` element and another before the `/section` close. -->\n\n<section class=\"intro\">\n\nWe believe in a future in which the web is a preferred environment for numerical computation. To help realize this future, we've built stdlib.\n\nstdlib ([/ˈstændərd lɪb/][ipa-english] \"standard lib\") is a standard library with an emphasis on numerical and scientific computation, written in JavaScript (and C) for execution in browsers and in Node.js. The library provides a collection of robust, high performance libraries for mathematics, statistics, data processing, streams, and more and includes many of the utilities you would expect from a standard library.\n\nWhat sets stdlib apart is its fully decomposable architecture, which allows you to swap out and mix and match APIs and functionality to cater to your exact preferences and use cases.\n\nWhen you use stdlib, you can be confident that you are using the most thorough, rigorous, well-written, studied, documented, tested, measured, and high-quality code available.\n\nWant to join us in bringing numerical computing to the web? **Start by starring the project.** :star2:\n\nExplore this GitHub repository for stdlib's source code and documentation. For guidance on developing stdlib, refer to the [development guide][stdlib-development].\n\nThank you for being a part of our community! Your support is invaluable to us!\n\n## Resources\n\n-   [**Installation**](#installation)\n-   [**Homepage**][stdlib-homepage]\n-   [**Documentation**][stdlib-documentation]\n-   [**Source code**][stdlib-source]\n-   [**Code coverage**][stdlib-code-coverage]\n-   [**FAQ**][stdlib-faq]\n\n### External Resources\n\n-   [**Google Calendar**][stdlib-public-calendar]: calendar of public events, including [open office hours][stdlib-office-hours].\n-   [**Open Collective**][open-collective-stdlib]: financially support the project.\n-   [**Twitter**][stdlib-twitter]: follow us on social media.\n-   [**Gitter**][stdlib-gitter]: chat with project maintainers and other community members.\n\n## Features\n\n-   150+ [special math functions][@stdlib/math/base/special].\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@203839353bc74297fe641207270f7917d2bda560/docs/assets/readme/base_special_math.png\" alt=\"Demo showcasing special math functions\">\n    </div>\n\n-   35+ [probability distributions][@stdlib/stats/base/dists], with support for evaluating probability density functions (PDFs), cumulative distribution functions (CDFs), quantiles, moments, and more.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@e13885087939c064c69aa43ee80ea52710de5591/docs/assets/readme/base_dists.png\" alt=\"Demo showcasing probability distributions\">\n    </div>\n\n-   40+ [seedable pseudorandom number generators][@stdlib/random/base] (PRNGs).\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@83dcd0fad98883320a8b1efc801b2fc1ed2a003d/docs/assets/readme/base_prngs.png\" alt=\"Demo showcasing PRNGs\">\n    </div>\n\n-   200+ general [utilities][@stdlib/utils] for data transformation, functional programming, and asynchronous control flow.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@e6eeea31e49d6db1b6f57ae59d2988d4b427e285/docs/assets/readme/utils.png\" alt=\"Demo showcasing general utilities\">\n    </div>\n\n-   200+ [assertion utilities][@stdlib/assert] for data validation and feature detection.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@6970c8b4eb546a10712734d225c15863db9b2c92/docs/assets/readme/assert.png\" alt=\"Demo showcasing assertion utilities\">\n    </div>\n\n-   50+ [sample datasets][@stdlib/datasets] for testing and development.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@f71a38e62247e31dc47d248f6f1b3e434abeb971/docs/assets/readme/datasets.png\" alt=\"Demo showcasing sample datasets\">\n    </div>\n\n-   A [plot API][@stdlib/plot/ctor] for data visualization and exploratory data analysis.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@39d75174b24ea2a84828d9624643776a164478e4/docs/assets/readme/plot.png\" alt=\"Demo showcasing plot API\">\n    </div>\n\n-   Native add-ons for interfacing with BLAS libraries, with pure JavaScript fallbacks.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@efede6af3ef957da08838903b0558441263adf85/docs/assets/readme/base_blas.png\" alt=\"Demo showcasing BLAS APIs\">\n    </div>\n\n-   A [benchmark framework][@stdlib/bench/harness] supporting TAP.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@4833049f8d1895585bd51ec6fa97b8ca0d37c6fb/docs/assets/readme/benchmark.gif\" alt=\"Demo showcasing benchmark framework\">\n    </div>\n\n-   REPL environment with integrated help and examples.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@3864ae6f86bbc215956c0e667d82d49a6eaca780/docs/assets/readme/repl.gif\" alt=\"Demo showcasing REPL environment\">\n    </div>\n\n-   Can be bundled using [Browserify][browserify], [Webpack][webpack], and other bundlers for use in web browsers.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@e54894a93697653dda22d11cd0aec1ccb292b7b8/docs/assets/readme/bundled.png\" alt=\"Demo showcasing browser support\">\n    </div>\n\n-   Every function is accompanied by [TypeScript][typescript] declaration files, ensuring type safety and facilitating intelligent code completion in IDEs.\n\n    <div class=\"image\" align=\"center\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@f5f1f915a7178d9bc76a95d34afd799e6092ec3a/docs/assets/readme/typescript.png\" alt=\"Demo showcasing TypeScript declaration files\" >\n    </div>\n\n* * *\n\n## Installation\n\nTo accommodate various use cases, stdlib can be used in multiple ways. The preferred method of use depends on your individual use case. We've provided some user stories to help you identify the best approach. 😃\n\nWhile this project's installation instructions defaults to using [npm][npm] for package management, installation via other package managers, such as [yarn][yarn], should be a matter of simply swapping out [npm][npm] commands with those of the relevant package manager.\n\n### User Stories\n\n-   I want to perform **data analysis** and **data science** tasks in JavaScript and Node.js, similar to how I might use Python, Julia, R, and MATLAB.\n\n    -   Install the entire project as a [command-line utility](#install_command_line_utility).\n\n-   I am building a **web application**.\n\n    -   I plan on using [Browserify][browserify], [Webpack][webpack], and other bundlers for use in web browsers.\n\n        -   Install [individual packages](#install_individual_packages). Installing the entire project is likely unnecessary and will lead to slower installation times.\n\n    -   I would like to **vendor** a custom bundle containing various stdlib functionality.\n\n        -   Follow the steps for creating [custom bundles](#install_custom_bundles).\n\n    -   I would like to include stdlib functionality by just using a `script` tag.\n\n        -   I would like to use ES Modules.\n\n            -   Use an individual package's ES Module [build](#install_env_builds_esm).\n\n        -   I would like to use a pre-built bundle (possibly via a CDN, such as [unpkg][unpkg] or [jsDelivr][jsdelivr]).\n\n            -   Install (or consume via a CDN) an individual package's pre-built UMD [browser bundle](#install_env_builds_umd).\n\n    -   I am interested in using a substantial amount of functionality found in a top-level stdlib namespace and don't want to separately install hundreds of individual packages (e.g., if building an on-line calculator application and wanting all of stdlib's math functionality).\n\n        -   Install one or more top-level [namespaces](#install_namespaces). Installing the entire project is likely unnecessary and will lead to slower installation times. Installing a top-level namespace is likely to mean installing functionality which will never be used; however, installing a top-level namespace is likely to be easier and less time-consuming than installing many individual packages separately.\n\n            When bundling, installing a top-level namespace should not be a concern, as individual functionality can still be independently required/imported. Project installation times may, however, be somewhat slower.\n\n-   I am building a [Node.js][node-js] **server application**.\n\n    -   I am interested in using various functionality found in stdlib.\n\n        -   Install [individual packages](#install_individual_packages). Installing the entire project is likely unnecessary and will lead to slower installation times.\n\n    -   I would like to **vendor** stdlib functionality and avoid dependency trees.\n\n        -   Install individual package UMD [bundles](#install_env_builds_nodejs).\n\n    -   I am interested in using a _substantial_ amount of functionality found in a top-level stdlib namespace and don't want to separately install hundreds of individual packages.\n\n        -   Install one or more top-level [namespaces](#install_namespaces). Installing the entire project is likely unnecessary and will lead to slower installation times. Installing a top-level namespace is likely to mean installing functionality which will never be used; however, installing a top-level namespace is likely to be easier and less time-consuming than installing many individual packages separately.\n\n-   I am using **Deno**.\n\n    -   Import [individual packages](#install_env_builds_deno) using pre-built Deno builds.\n\n-   I would like to use stdlib functionality in an [Observable][observable] notebook.\n\n    -   Consume a pre-built [browser bundles](#install_env_builds_umd) via a CDN, such as [unpkg][unpkg] or [jsDelivr][jsdelivr].\n\n-   I want to hack at stdlib, possibly even creating **customized** builds to link to platform-specific native libraries (such as Intel's MKL or some other numerical library).\n\n    -   Install the project as a [system library](#install_system_library) by cloning this repository and following the [installation][stdlib-development] instructions as described in the [development guide][stdlib-development].\n\n<a name=\"install_complete_library\"></a>\n\n### Complete Library\n\nTo install the entire project as a library or application dependency,\n\n<!-- run-disable -->\n\n```bash\n$ npm install @stdlib/stdlib\n```\n\nOnce installed, stdlib packages can be individually required/imported to minimize load times and decrease bundle sizes. For example, to use `require`\n\n```javascript\nvar ndarray = require( '@stdlib/ndarray/array' );\n\nvar arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );\n// returns <ndarray>\n```\n\nand to use `import`\n\n<!-- run-disable -->\n\n```javascript\nimport ndarray from '@stdlib/ndarray/array';\n\nvar arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );\n// returns <ndarray>\n```\n\n<a name=\"install_individual_packages\"></a>\n\n### Individual Packages\n\nstdlib is designed to allow decomposition of the main project into individual packages which can be independently consumed. Accordingly, users of the project can avoid installing all project functionality and only install the exact functionality they need.\n\nTo install individual packages, replace forward slashes `/` after `@stdlib/` with hyphens `-`. For example,\n\n<!-- run-disable -->\n\n```bash\n$ npm install @stdlib/ndarray-array\n```\n\nOnce installed, individual packages can be required/imported. For example, to use `require`\n\n```javascript\nvar ndarray = require( '@stdlib/ndarray-array' );\n\nvar arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );\n// returns <ndarray>\n```\n\nand to use `import`\n\n<!-- run-disable -->\n\n```javascript\nimport ndarray from '@stdlib/ndarray-array';\n\nvar arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );\n// returns <ndarray>\n```\n\n<a name=\"install_namespaces\"></a>\n\n### Namespaces\n\nstdlib is comprised of various top-level namespaces (i.e., collections of related functionality united by common themes). For example, to install all math functionality found in the top-level `math` namespace,\n\n<!-- run-disable -->\n\n```bash\n$ npm install @stdlib/math\n```\n\nOnce installed, packages within a top-level namespace can be individually required/imported to minimize load times and decrease bundle sizes. For example, to use `require`\n\n```javascript\nvar sin = require( '@stdlib/math/base/special/sin' );\n\nvar v = sin( 3.14 );\n// returns <number>\n```\n\nand to use `import`\n\n<!-- run-disable -->\n\n```javascript\nimport sin from '@stdlib/math/base/special/sin';\n\nvar v = sin( 3.14 );\n// returns <number>\n```\n\n**Note**: installing nested namespaces found within top-level namespaces (e.g., `math/base`) is **not** supported. Consider installing individual packages or the relevant top-level namespace.\n\n<a name=\"install_command_line_utility\"></a>\n\n### Command-line Utility\n\nTo install globally for use as a command-line utility and/or use the [REPL][@stdlib/repl],\n\n<!-- run-disable -->\n\n```bash\n$ npm install -g @stdlib/stdlib\n```\n\nwhich will expose the `stdlib` command. For example, to see available sub-commands\n\n<!-- run-disable -->\n\n```bash\n$ stdlib help\n```\n\nand to run the [REPL][@stdlib/repl]\n\n<!-- run-disable -->\n\n```bash\n$ stdlib repl\n```\n\n<a name=\"install_env_builds\"></a>\n\n### Environment Builds\n\n<a name=\"install_env_builds_esm\"></a>\n\n#### ES Modules\n\nTo use ES Modules via a `<script>` tag, use **ES Module builds** available in each package's repository via a dedicated `esm` branch (e.g., see the [`esm`][@stdlib/math-base-special-erf-esm] branch for [`@stdlib/math-base-special-erf`][@stdlib/math-base-special-erf-esm]). For example,\n\n<!-- run-disable -->\n\n```html\n<script type=\"module\">\nimport linspace from 'https://cdn.jsdelivr.net/gh/stdlib-js/array-base-linspace@esm/index.mjs';\nimport erf from 'https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-erf@esm/index.mjs';\n\nconst x = linspace( -10.0, 10.0, 100 );\n\nfor ( let i = 0; i < x.length; i++ ) {\n    console.log( 'x: %d, erf(x): %d', x[ i ], erf( x[ i ] ) );\n}\n</script>\n```\n\n<a name=\"install_env_builds_deno\"></a>\n\n#### Deno\n\nTo use individual packages in Deno, use **Deno builds** available in each package's repository via a dedicated `deno` branch (e.g., see the [`deno`][@stdlib/ndarray-array-deno] branch for [`@stdlib/ndarray-array`][@stdlib/ndarray-array-deno]). For example,\n\n<!-- run-disable -->\n\n```javascript\nimport ndarray from 'https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-array@deno/mod.js';\n\nvar arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );\n// returns <ndarray>\n````\n\n\n<a name=\"install_env_builds_jquery\"></a>\n\n#### jQuery-like Bundle\n\nFor those wanting a jQuery-like bundle, one can use pre-built distributable UMD bundles for use in browser environments or as shared (\"vendored\") libraries in server environments available in each package's repository via a dedicated `umd` branch. See sections [UMD](#install_env_builds_umd) and [Node.js](#install_env_builds_nodejs) for more details.\n\n<a name=\"install_env_builds_umd\"></a>\n\n#### UMD\n\nTo use UMD bundles either via a `<script>` tag or in [Observable][observable], use UMD **browser builds** available in each package's repository via a dedicated `umd` branch (e.g., see the [`umd`][@stdlib/math-base-special-erf-umd] branch for [`@stdlib/math-base-special-erf`][@stdlib/math-base-special-erf-umd]). For example,\n\n<!-- run-disable -->\n\n```html\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-linspace@umd/browser.js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-erf@umd/browser.js\"></script>\n<script type=\"text/javascript\">\n(function () {\n\nvar x = linspace( -10.0, 10.0, 100 );\n\nfor ( var i = 0; i < x.length; i++ ) {\n    console.log( 'x: %d, erf(x): %d', x[ i ], erf( x[ i ] ) );\n}\n\n})();\n</script>\n```\n\n<a name=\"install_env_builds_nodejs\"></a>\n\n#### Node.js\n\nTo **vendor** stdlib functionality and avoid installing dependency trees, use UMD **server builds** available in each package's repository via a dedicated `umd` branch (e.g., see the [`umd`][@stdlib/math-base-special-erf-umd] branch for [`@stdlib/math-base-special-erf`][@stdlib/math-base-special-erf-umd]). For example,\n\n<!-- run-disable -->\n\n```javascript\nvar linspace = require( '/path/to/vendor/umd/@stdlib/array-base-linspace' );\nvar erf = require( '/path/to/vendor/umd/@stdlib/math-base-special-erf' );\n\nvar x = linspace( -10.0, 10.0, 100 );\n\nfor ( var i = 0; i < x.length; i++ ) {\n    console.log( 'x: %d, erf(x): %d', x[ i ], erf( x[ i ] ) );\n}\n```\n\n<a name=\"install_custom_bundles\"></a>\n\n### Custom Bundles\n\nTo create a custom bundle based on project needs,\n\n1.  follow the [download][stdlib-development], [configuration][stdlib-development], and [installation][stdlib-development] instructions as described in the [development guide][stdlib-development].\n\n2.  navigate to the local installation directory.\n\n3.  run the following command to print help documentation for providing a list of stdlib package names to bundle\n\n    <!-- run-disable -->\n\n    ```bash\n    $ NODE_PATH=./lib/node_modules node ./bin/cli bundle-pkg-list -- -h\n    ```\n\n4.  modify and run the above command with the list of packages to bundle\n\n    <!-- run-disable -->\n\n    ```bash\n    $ NODE_PATH=./lib/node_modules node ./bin/cli bundle-pkg-list -- <pkg> <pkg> <pkg> ...\n    ```\n\n<!-- FIXME: the following is not possible atm as we don't publish `@stdlib/_tools` which is needed in order for the command-line utility to work!\n\nAlternatively, install stdlib as a command-line utility (as described above) and run the following command\n-->\n\n<!-- run-disable -->\n\n<!--\n```bash\n$ stdlib bundle-pkg-list -- <pkg> <pkg> <pkg> ...\n```\n-->\n\nUpon generating a bundle, the bundle can be loaded via a `<script>` tag as described above for pre-built distributable UMD bundles.\n\n<a name=\"install_system_library\"></a>\n\n### System Library\n\nTo install as a system library (e.g., for the purposes of creating custom builds), follow the [download][stdlib-development], [configuration][stdlib-development], and [installation][stdlib-development] instructions as described in the [development guide][stdlib-development].\n\n* * *\n\n## Prerequisites\n\nInstalling and running stdlib for use in [Node.js][node-js] **requires** the following prerequisites:\n\n-   [Node.js][node-js]: JavaScript runtime (version `>= 0.10`)\n-   [npm][npm]: package manager (version `> 2.7.0`; if Node `< 1.0.0`, version `> 2.7.0` and `< 4.0.0`; if Node `<= 10.x.x`, version `> 2.7.0` and `< 6.0.0`)\n\nMost functionality in stdlib is implemented in JavaScript and no further prerequisites are required to use stdlib (i.e., you can safely avoid installing any additional prerequisites); however, some implementations try to capture performance benefits by using [native bindings][node-js-add-ons] and/or [WebAssembly][webassembly]. While **not** required to run stdlib, as **every** stdlib implementation has a JavaScript fallback, the following dependencies are **required** for building native add-ons, including linking to BLAS and LAPACK libraries:\n\n-   [GNU make][make]: development utility and task runner\n-   [GNU bash][bash]: an sh-compatible shell\n-   [gcc & g++][gcc] or [Clang][clang]: C/C++ compilation and linking (g++ version `>= 4.8`; clang version `>= 3.5`, Xcode version `>=8.3.1` on OS X)\n-   [gfortran][gfortran]: Fortran compilation and linking (version `>= 4.8`)\n\nWhile **not** required to run stdlib, the following dependencies are **required** for automatically downloading external libraries:\n\n-   [curl][curl], [wget][wget], or [fetch][fetch] (FreeBSD): utilities for downloading remote resources\n\nThe following external libraries can be automatically downloaded and compiled from source using `make`:\n\n-   [OpenBLAS][openblas]: optimized BLAS library\n-   [Electron][electron]: framework for cross-platform desktop applications\n\n* * *\n\n## Contributing\n\nFirst time contributor?\n\n-   See the [contributing guidelines][stdlib-contributing].\n\nAlready an expert?\n\n-   Fork the repository.\n\n-   Clone the forked repository\n\n    ```bash\n    $ git clone --depth=1 https://github.com/<username>/stdlib.git\n    ```\n\n    where `<username>` is your GitHub username.\n\n-   Navigate to the `stdlib` directory\n\n    ```bash\n    $ cd stdlib\n    ```\n\n-   Install dependencies\n\n    ```bash\n    $ make install-node-modules\n    ```\n\n-   Initialize your stdlib development environment\n\n    ```bash\n    $ make init\n    ```\n\n<!-- Project sponsors. If sponsors are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n* * *\n\n<section class=\"sponsors\">\n\n## Sponsors\n\nstdlib development is generously supported by the following sponsors:\n\n<div class=\"image\" align=\"center\">\n    <br>\n    <a href=\"https://labs.quansight.org/\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@2719e1d3ecab2cc29985bca35fd33594e65adb55/docs/assets/sponsors/quansight_labs_logo.png\" alt=\"Quansight Labs\">\n    </a>\n    <br>\n    <br>\n</div>\n\nAre you interested in supporting stdlib? If so, join our [Open Collective][open-collective-stdlib]!\n\n</section>\n\n<!-- /.sponsors -->\n\n<!-- Project users. If users are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n* * *\n\n<section class=\"users\">\n\n## Users\n\nThe following organizations and key stakeholders trust and rely on stdlib:\n\n<div class=\"image\" align=\"center\">\n    <br>\n    <a href=\"https://www.cmu.edu/\">\n        <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@1c8c7dbc9d081eeb13e16c62764f27a65c6553f8/docs/assets/misc/cmu_logo.png\" alt=\"Carnegie Mellon University\">\n    </a>\n    <br>\n    <br>\n</div>\n\nDoes your organization use stdlib? If so, we'd love to hear from you!\n\n</section>\n\n<!-- /.users -->\n\n* * *\n\n## Governance\n\nFor information about the governance of the stdlib project, see [GOVERNANCE.md][stdlib-governance].\n\n## License\n\nSee [LICENSE][stdlib-license].\n\n## Copyright\n\nCopyright © 2016-2025. The Stdlib [Authors][stdlib-authors].\n\n</section>\n\n<!-- /.intro -->\n\n<!-- Project badges. If badges are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n* * *\n\n<section class=\"badges\">\n\n## Status\n\n#### Version\n\n<!-- lint disable no-paragraph-content-indent -->\n\n[![git tag][tag-image]][tag-url] [![NPM version][npm-image]][npm-url] [![Node.js version][node-image]][node-url]\n\n<!-- lint enable no-paragraph-content-indent -->\n\n<!-- #### Build -->\n\n<!-- TODO: distinguish between Linux and Windows code coverage -->\n\n<!-- lint disable table-pipe-alignment -->\n\n<!-- | OS         | Build (master)                                                                           | Coverage (master)                                                  | Build (develop)                                                                             | Coverage (develop)                                                    |\n| ---------- | ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------ | ------------------------------------------------------------------------------------------- | --------------------------------------------------------------------- |\n| Linux/OS X | [![Linux/OS X build status (master)][build-image-master]][build-url-master]              | [![coverage (master)][coverage-image-master]][coverage-url-master] | [![Linux/OS X build status (develop)][build-image-develop]][build-url-develop]              | [![coverage (develop)][coverage-image-develop]][coverage-url-develop] |\n| Windows    | [![Windows build status (master)][windows-build-image-master]][windows-build-url-master] | [![coverage (master)][coverage-image-master]][coverage-url-master] | [![Windows build status (develop)][windows-build-image-develop]][windows-build-url-develop] | [![coverage (develop)][coverage-image-develop]][coverage-url-develop] | -->\n\n<!-- lint enable table-pipe-alignment -->\n\n<!-- #### Dependencies -->\n\n<!-- lint disable no-paragraph-content-indent -->\n\n<!-- [![Dependencies][dependencies-image]][dependencies-url] [![DevDependencies][dev-dependencies-image]][dev-dependencies-url] -->\n\n<!-- lint enable no-paragraph-content-indent -->\n\n#### Community\n\n[![Chat][chat-image]][chat-url]\n\nHave something you want to discuss? In addition to the community chat, we hold regular [office hours][stdlib-office-hours] over video conferencing, which is a great opportunity to ask questions, share ideas, and engage directly with the stdlib team.\n\nYou can also subscribe to our [project calendar][stdlib-public-calendar] to stay informed about the latest public community events.\n\n</section>\n\n<!-- /.badges> -->\n\n<!-- Project acknowledgments. If section is included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<!-- * * *\n\n<section class=\"acknowledgments\">\n\n## Acknowledgments\n\n### Build Infrastructure\n\nTest and build infrastructure is generously provided by the following services:\n\n<div class=\"image\" align=\"center\">\n    <img src=\"https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@3de52540666d1635df046d7e5dd07a1fc5b87d85/docs/assets/misc/ci_logo_banner.svg\" alt=\"Continuous Integration Service Logos\">\n    <br>\n</div>\n\n</section> -->\n\n<!-- /.acknowledgments -->\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"links\">\n\n[npm-image]: https://img.shields.io/npm/v/@stdlib/stdlib.svg\n\n[npm-url]: https://npmjs.com/package/@stdlib/stdlib\n\n[tag-image]: https://img.shields.io/github/v/tag/stdlib-js/stdlib.svg\n\n[tag-url]: https://github.com/stdlib-js/stdlib/tags\n\n[node-image]: https://img.shields.io/node/v/@stdlib/stdlib.svg\n\n[node-url]: https://github.com/stdlib-js/stdlib\n\n<!-- [build-image-develop]: https://img.shields.io/travis/stdlib-js/stdlib/develop.svg\n\n[build-url-develop]: https://travis-ci.org/stdlib-js/stdlib\n\n[coverage-image-develop]: https://img.shields.io/codecov/c/github/stdlib-js/stdlib/develop.svg\n\n[coverage-url-develop]: https://codecov.io/github/stdlib-js/stdlib/branch/develop\n\n[dependencies-url]: https://socket.dev/npm/package/@stdlib/stdlib/dependencies\n\n[dev-dependencies-url]: https://socket.dev/npm/package/@stdlib/stdlib/dependencies -->\n\n[chat-image]: https://img.shields.io/gitter/room/stdlib-js/stdlib.svg\n\n[chat-url]: https://app.gitter.im/#/room/#stdlib-js_stdlib:gitter.im\n\n[make]: https://www.gnu.org/software/make/\n\n[bash]: https://www.gnu.org/software/bash/\n\n[curl]: https://curl.se/\n\n[wget]: https://www.gnu.org/software/wget/\n\n[fetch]: https://www.freebsd.org/cgi/man.cgi?fetch%281%29\n\n[node-js]: https://nodejs.org/en/\n\n[npm]: https://www.npmjs.com/\n\n[yarn]: https://yarnpkg.com/\n\n[gcc]: http://gcc.gnu.org/\n\n[clang]: https://clang.llvm.org/\n\n[gfortran]: https://gcc.gnu.org/fortran/\n\n[openblas]: https://github.com/xianyi/OpenBLAS\n\n[electron]: https://www.electronjs.org/\n\n[webassembly]: https://webassembly.org/\n\n[node-js-add-ons]: https://nodejs.org/api/addons.html\n\n[browserify]: https://github.com/substack/node-browserify\n\n[webpack]: https://webpack.js.org/\n\n[typescript]: https://www.typescriptlang.org/\n\n[unpkg]: https://unpkg.com/#/\n\n[jsdelivr]: https://www.jsdelivr.com/\n\n[observable]: https://observablehq.com/\n\n[ipa-english]: https://en.wikipedia.org/wiki/Help:IPA/English\n\n[stdlib-contributing]: https://github.com/stdlib-js/stdlib/blob/develop/CONTRIBUTING.md\n\n[stdlib-development]: https://github.com/stdlib-js/stdlib/blob/develop/docs/development.md\n\n[stdlib-authors]: https://github.com/stdlib-js/stdlib/graphs/contributors\n\n[stdlib-license]: https://raw.githubusercontent.com/stdlib-js/stdlib/develop/LICENSE\n\n[stdlib-governance]: https://raw.githubusercontent.com/stdlib-js/stdlib/develop/GOVERNANCE.md\n\n[stdlib-homepage]: https://stdlib.io\n\n[stdlib-documentation]: https://stdlib.io/docs/api\n\n[stdlib-faq]: https://github.com/stdlib-js/stdlib/blob/develop/FAQ.md\n\n[stdlib-source]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib\n\n[stdlib-code-coverage]: https://codecov.io/github/stdlib-js/stdlib/branch/develop\n\n[stdlib-public-calendar]: https://calendar.google.com/calendar/embed?src=a72677fe2820c833714b8b9a2aa87393f742bcaf0d0f6c9499eee6661795eae0%40group.calendar.google.com\n\n[stdlib-office-hours]: https://github.com/stdlib-js/meetings/issues?q=sort%3Aupdated-desc%20is%3Aissue%20is%3Aopen%20label%3A%22Office%20Hours%22\n\n[open-collective-stdlib]: https://opencollective.com/stdlib\n\n[stdlib-twitter]: https://twitter.com/stdlibjs\n\n[stdlib-gitter]: https://gitter.im/stdlib-js/stdlib\n\n[@stdlib/math/base/special]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/math/base/special\n\n[@stdlib/stats/base/dists]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/stats/base/dists\n\n[@stdlib/random/base]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/random/base\n\n[@stdlib/assert]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/assert\n\n[@stdlib/datasets]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/datasets\n\n[@stdlib/utils]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/utils\n\n[@stdlib/plot/ctor]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/plot/ctor\n\n[@stdlib/bench/harness]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/bench/harness\n\n[@stdlib/repl]: https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/repl\n\n[@stdlib/ndarray-array-deno]: https://github.com/stdlib-js/ndarray-array/tree/deno\n\n[@stdlib/math-base-special-erf-esm]: https://github.com/stdlib-js/math-base-special-erf/tree/esm\n\n[@stdlib/math-base-special-erf-umd]: https://github.com/stdlib-js/math-base-special-erf/tree/umd\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 2.912109375,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2019 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# Roadmap\n\n> Project roadmap.\n\n## Vision\n\nstdlib will deliver high-quality, performant libraries for numerical computation and become _the_ library for mathematical and scientific computation on the web.\n\n## Themes\n\nThe first major theme in support of this vision is multi-dimensional arrays. Development resources will be dedicated to building high-performance engines for matrix and tensor operations. This work will make stdlib the most complete and robust scientific library for use in both web browsers and Node.js.\n\nThe second major theme is native implementations for linear algebra. This will entail native bindings to hardware optimized linear algebra libraries for use in Node.js libraries and applications and WebAssembly implementations for use in web browsers. This work will make stdlib the most performant library for scientific computation on the web.\n\nThe third major theme is data visualization. Building on the first and second themes, data visualization facilities will demonstrate why JavaScript and Node.js are suitable platforms for numerical analysis and provide a foundation for more advanced user-facing data analysis applications.\n\nThe fourth major theme is automation. Automation is critical for the project's ability to scale and to streamline the development experience. This work will make stdlib one of the most innovative and developer friendly open source projects.\n\nLast, the final theme is documentation. Part of this effort will be continuing to build a web presence and demonstrating the need and importance for stdlib. This work will enable the project to grow and attract both users and contributors.   \n\n## Details\n\n### Multi-dimensional Arrays\n\n-   broadcasting semantics\n-   ndarray engine for element-wise operations\n-   ndarray engine for axis-wise operations\n-   add vectorized array APIs\n\n### Native Implementations\n\n-   BLAS bindings\n-   BLAS ports (JavaScript and C)\n-   LAPACK bindings\n-   LAPACK ports (JavaScript and C)\n\n### Data Visualization\n\n-   Additional chart types (bar, column, histogram)\n-   ASCII engine\n-   Canvas engine (including PNG output)\n\n### Automation\n\n-   Performance improvements to continuous integration environments\n-   Browser testing\n-   Package scaffolding tools\n-   Package decomposition (independent package publishing)\n\n### Documentation\n\n-   Website\n-   Source code (JSDoc)\n-   Blog posts\n-   Tutorials\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 12.16015625,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2023 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# Security\n\n> Policy for reporting security vulnerabilities.\n\nThe maintainers of stdlib take very seriously the security of stdlib and its open source code repositories as managed through GitHub. Keeping our users safe is a top priority, and we welcome the contributions of external security researchers.\n\nWe appreciate your efforts to responsibly disclose your findings, and we will make every effort to acknowledge your contributions.\n\n* * *\n\n## Scope\n\nIf you believe that you have found a security issue in any software, service, or website governed by stdlib, we encourage you to notify us.\n\nPlease note, however, that projects governed by stdlib sometimes do unsafe things by design. For example, the stdlib REPL supports executing arbitrary code, certain API implementations may use code generation for performance optimization, and stdlib \"base\" APIs may eschew input validation and sanitation based on the assumption that all input arguments are correct and can be trusted. In general, any unsafe behavior should be explicitly documented, and, if documented, the behavior is **not** considered a security issue.\n\nWhile there are no clearly delineated rules for determining whether a bug should be reported as a security issue or a \"regular\" issue, when in doubt, please err on the side of filing a security issue. If, after investigation, we subsequently determine that the issue is a regular issue, we will advise you to move the discussion to the [public issue tracker][stdlib-issues].\n\n### Threat model\n\nIn the stdlib threat model, certain elements, such as the underlying operating system, are considered trusted. Vulnerabilities that require the compromise of trusted elements are outside the scope of the stdlib threat model.\n\nExamples of trusted elements include the following:\n\n-   The developers using stdlib and the infrastructure on which stdlib is used.\n-   The operating system on which stdlib is used and its configuration, along with anything under control of the operating system.\n-   The code stdlib is asked to run, including JavaScript and native code. Any provided code inherits all the privileges of the execution user.\n-   The inputs provided to stdlib by the code it is asked to run. It is the responsibility of the consumer of stdlib to perform requisite input validations.\n\nstdlib strives to avoid APIs and internal implementations which make it easy for downstream code to use stdlib APIs incorrectly and thereby enable vulnerabilities. While we do not consider these vulnerabilities to be in stdlib itself, we do ask that they be reported privately to stdlib. Having this information allows us to improve stdlib APIs and issue fixes in either regular or security releases depending on how much risk they pose to the stdlib community.\n\nFor an issue to be considered a stdlib security vulnerability, the issue must be a vulnerability within the context of the stdlib threat model. Stated otherwise, the issue cannot assume that a trusted element (such as the operating system) has been compromised.\n\nBeing able to cause the following through control of untrusted elements is likely to be considered a vulnerability:\n\n-   Disclosure or loss of integrity or confidentiality of data protected through the correct use of stdlib APIs.\n-   The unavailability of the host JavaScript runtime (e.g., due to unbounded performance degradation).\n\n#### Examples of vulnerabilities\n\n##### Incorrect access of indexable resource\n\nstdlib provides APIs for accessing underlying memory, such as those for ndarray views which are backed by a binary buffer. If, for example, during correct usage of designated element accessors, a non-base ndarray API can be used to access memory which does not belong to an ndarray view (e.g., due to an index/pointer arithmetic bug), that is considered a vulnerability.\n\n#### Examples of non-vulnerabilities\n\n##### Prototype pollution attacks\n\nstdlib trusts inputs provided to it by downstream code. It is thus the responsibility of the downstream code to sanitize appropriately. Any scenario that requires control over user input is **not** considered a vulnerability.\n\n* * *\n\n## How to submit a report\n\nstdlib supports [privately reporting security vulnerabilities][github-security-advisories]. To report a security issue, please use the GitHub Security Advisory [\"Report a Vulnerability\"][stdlib-new-security-advisory] tab.\n\nWhen submitting a report,\n\n-   please provide detailed reports with reproducible steps and a clearly defined impact.\n-   submit only one vulnerability per report.\n-   do not engage in any form of social engineering (such as phishing, vishing, or smishing).\n-   do not attempt to show CI/CD vulnerabilities by creating new pull requests to any of stdlib's repositories. Doing so will result in a [content report][github-content-report] to GitHub as an unsolicited exploit. The proper way to provide such reports is by creating a new repository, configured in the same manner as the repository about which you would like to submit a report, and, with a pull request to your own repository, showing the proof-of-concept.\n\n**Please do NOT report security vulnerabilities through public GitHub issues, discussions, or pull requests, or any other public stdlib forum.**\n\n* * *\n\n## Process\n\nAfter submitting a private security vulnerability report, your report will normally be acknowledged within **5 business days**, and you will receive a more detailed response to your report within **10 business days** indicating the next steps in handling your submission. Note, however, that the timelines may extend when stdlib maintainers are away on holiday (particularly at the end of the year), handling personal emergencies, encountering unforeseen adverse global events, or dealing with other contingent circumstances affecting their ability to respond.\n\nAfter the initial reply to your report, stdlib maintainers will strive to keep you informed of progress made toward implementing a fix and making a full announcement. During the course of our investigation, we may ask for additional information or guidance concerning the reported issue.\n\nPlease note that it is of the utmost importance that you read carefully and follow the guidelines outlined in the stdlib security policy to ensure that the ecosystem as a whole is not disrupted due to improperly reporting vulnerabilities.\n\nstdlib does **not** support any reporting outside of the process outlined in this document.\n\n* * *\n\n## Disclosure policy\n\nOur disclosure policy is as follows:\n\n-   Once a security vulnerability is reported, the report is assigned a primary handler. This person will coordinate the fix and release process.\n\n-   The problem is then validated against the **latest** release version (e.g., if a package published to npm, the latest `<major>.<minor>.x` release). Due to limited maintainer bandwidth, security vulnerabilities discovered in older `<major>.x.x` release lines are considered out-of-scope and will not receive security updates. Users are advised that only vulnerabilities affecting the **latest** release line will receive patches.\n\n-   Depending on the outcome of validation, the primary handler will communicate to the individual who submitted the potential vulnerability one of the following possible responses:\n\n    -   **Acceptance**: what was reported is a considered a new vulnerability.\n    -   **Rejection**: what was reported is not considered a new vulnerability.\n    -   **Needs more information**: we need more information in order to evaluate what was reported.\n\n-   Once a vulnerability is accepted, code is then audited to find any potential similar problems.\n\n-   Fixes are subsequently prepared for the latest `<major>.<minor>.x` release line.\n\n-   After fix preparation, the primary handler will coordinate with stdlib maintainers to define a release date for the publication of the vulnerability.\n\n-   The changes are pushed to the affected public repositories and, where relevant, new builds are published to npm.\n\n-   The private security vulnerability report is then made public.\n\nNote that the above process can take time (up to and beyond **90** days depending on the complexity of the fix), especially when coordination is required with maintainers of other projects. We thus ask that you provide us with a reasonable amount of time to resolve reported vulnerabilities prior to any public disclosure or third party reporting. We will make every effort to handle the security report in as timely a manner as possible.\n\nWe further ask that you please allow us to follow the release process described above so that we can ensure that disclosures are handled in a consistent manner.\n\n* * *\n\n## Safe harbor\n\nstdlib supports safe harbor for security researchers who\n\n-   make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our services.\n-   only interact with accounts they own or with explicit permission of the account holder. Upon encountering Personally Identifiable Information (PII), researchers are asked to contact us immediately, to not proceed with access, and to immediately delete any locally stored information.\n-   provide us with a reasonable amount of time to resolve vulnerabilities prior to public or third party disclosure.\n\nWe will consider activities which are conducted in a manner consistent with the above policy to constitute authorized conduct and will not pursue civil action or initiate a complaint with law enforcement.\n\n**Please submit a vulnerability report before engaging in conduct which may be inconsistent with or unaddressed by the above policy.**\n\n* * *\n\n## Comments on this policy\n\nIf you have suggestions on how the stdlib security process could be improved, please submit a [pull request][stdlib] or [file an issue][stdlib-issues] to discuss.\n\nThank you for helping make stdlib safe for everyone! ❤️\n\n* * *\n\n## Attribution\n\nThis policy document draws from the following security policies:\n\n-   [npm][npm-security-policy]\n-   [Electron][electron-security-policy]\n-   [Node.js][nodejs-security-policy]\n-   [remark][remark-security-policy]\n-   [fastify][fastify-security-policy]\n\n## License\n\nThis document may be reused under a [Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license][cc-by-sa-4.0].\n\n## Copyright\n\nCopyright © The Stdlib [Authors][stdlib-authors].\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"links\">\n\n[github-security-advisories]: https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability\n\n[github-content-report]: https://docs.github.com/en/communities/maintaining-your-safety-on-github/reporting-abuse-or-spam#reporting-an-issue-or-pull-request\n\n[stdlib]: https://github.com/stdlib-js/stdlib\n\n[stdlib-issues]: https://github.com/stdlib-js/stdlib/issues\n\n[stdlib-new-security-advisory]: https://github.com/stdlib-js/stdlib/security/advisories/new\n\n[stdlib-authors]: https://github.com/stdlib-js/stdlib/graphs/contributors\n\n[npm-security-policy]: https://github.com/npm/cli/blob/86ac76caa4a8bd5d1acb1777befdbc4d9ebc8a1a/SECURITY.md\n\n[electron-security-policy]: https://github.com/electron/electron/blob/95d094d75bddb99c83d2902fbc9a4335632a41cf/SECURITY.md\n\n[nodejs-security-policy]: https://github.com/nodejs/node/blob/fa183786ef1dba08b960e7a64ec9b093a9b8b59d/SECURITY.md\n\n[remark-security-policy]: https://github.com/remarkjs/.github/blob/8070442fde16e2c81f80bd65caab6d3a8cc090f4/security.md\n\n[fastify-security-policy]: https://github.com/fastify/fastify/blob/e3a07eaa444d0e769802195816d4e1718c2fc9ea/SECURITY.md\n\n[cc-by-sa-4.0]: https://creativecommons.org/licenses/by-sa/4.0/\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 6.521484375,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2023 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# Support\n\n> How to get help with stdlib.\n\nThis document explains how to get help with stdlib. Please read through the following guidelines.\n\n> 👉 Note: before participating in our community, please read our [Code of Conduct][stdlib-code-of-conduct]. By interacting with this repository, organization, or community, you agree to abide by its terms.\n\n## Getting Help\n\nPlease seek support in the following ways:\n\n-   **Bugs**: if you have found a bug or would like to make a specific feature request, please file an issue on the stdlib [issue tracker][stdlib-issues].\n-   **Security vulnerabilities**: if you would like to report a security vulnerability, please consult the stdlib [security policy][stdlib-security] and follow requested steps for responsible [disclosure][stdlib-security].\n-   **Questions**: for general questions (i.e., concerns which are **not** bug reports or explicit feature requests), please ask on either [GitHub discussions][stdlib-discussions] or on [Gitter][stdlib-gitter].\n\nPlease do **not** file issues on the issue tracker seeking help or support debugging your application or open-source project when the encountered issues are specific to your project. You will have better luck in such instances seeking help from other users of stdlib via Stack Overflow or other non-stdlib affiliated public forums.\n\n* * *\n\n### Asking Quality Questions\n\nHelp us help you! Be sure to spend time framing questions and to provide links and other resources. Spending extra time at the outset can help save everyone time in the long run.\n\nWhen seeking help, you are encouraged to adhere to the following principles in order to increase the likelihood of receiving a successful response:\n\n-   **Read documentation and other guides** for the project to see if you can answer the question or figure out the issue on your own. Try locating an example project, and explore how the project works to see if you can answer your question.\n\n-   **Search for existing questions and answers** by consulting the stdlib [issue tracker][stdlib-issues], [discussions][stdlib-discussions], and [FAQ][stdlib-faq]. For debugging issues specific to your project or figuring out how to use stdlib in a manner unique to your application, search for answers and ask questions on Stack Overflow.\n\n-   **Try [\"rubber ducking\"][rubber-duck-debugging]** to see if verbalizing and discussing the problem helps reveal or challenge any of your current assumptions.\n\n-   **Ensure that you ask about your actual problem** and not your attempted solution (i.e., do not fall prey to the [XY problem][xy-problem]).\n\n-   **Define what you need help with** by asking the following questions:\n\n    -   Are you confronted with a concept that you do not understand? If so, consider engaging more deeply with project documentation and seeking out example projects from which you can learn.\n    -   What are you specifically wanting to do? The more specific you are, the more targeted your response.\n    -   What problem are you encountering? The more granular you are in terms of circumstances, the more quickly others can reproduce the issue.\n    -   What steps have you taken to try and fix the problem? If you have settled on a particular solution, explain why the other attempts have failed.\n\n-   **Provide sample code**, but do not attach your entire project for someone else to debug. Instead, provide a minimal reproducible example of the issue you are encountering.\n\n-   **Prefer providing code and error messages as text** rather than screenshots. While screenshots can be useful, maintainers will benefit from being to engage directly with important text, especially when attempting to reproduce the encountered issue.\n\n-   **Proofread and cross-check** your question to ensure that your question is communicated as clearly as possible.\n\n-   **Do not open duplicate issues** or litter an existing issue with separate \"+1\" comments. If you want to \"upvote\" an issue or comment, instead of posting a separate comment, use GitHub's built-in [reaction support][github-reactions] to record a 👍 emoji response.\n\n-   **Do not e-mail (or reach out to via social media) specific project authors or contributors** asking for help debugging your project or application. Please be respectful of maintainer time, and respect that maintainers are likely to have other obligations outside of stdlib.\n\n* * *\n\n## Contributing\n\nIf you are interested in contributing to stdlib, please see the stdlib [contributing guide][stdlib-contributing] for guidance on how to contribute.\n\n* * *\n\n## Attribution\n\nThis policy document draws from the following support documents:\n\n-   [remark][remark-support]\n\n## License\n\nThis document may be reused under a [Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license][cc-by-sa-4.0].\n\n## Copyright\n\nCopyright © The Stdlib [Authors][stdlib-authors].\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"links\">\n\n[stdlib-authors]: https://github.com/stdlib-js/stdlib/graphs/contributors\n\n[stdlib-code-of-conduct]: https://github.com/stdlib-js/stdlib/blob/develop/CODE_OF_CONDUCT.md\n\n[stdlib-discussions]: https://github.com/stdlib-js/stdlib/discussions\n\n[stdlib-gitter]: https://gitter.im/stdlib-js/stdlib\n\n[stdlib-issues]: https://github.com/stdlib-js/stdlib/issues\n\n[stdlib-security]: https://github.com/stdlib-js/stdlib/security\n\n[stdlib-faq]: https://github.com/stdlib-js/stdlib/blob/develop/FAQ.md\n\n[stdlib-contributing]: https://github.com/stdlib-js/stdlib/blob/develop/CONTRIBUTING.md\n\n[rubber-duck-debugging]: https://rubberduckdebugging.com/\n\n[xy-problem]: https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem/66378#66378\n\n[remark-support]: https://github.com/remarkjs/.github/blob/8070442fde16e2c81f80bd65caab6d3a8cc090f4/support.md\n\n[github-reactions]: https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\n\n[cc-by-sa-4.0]: https://creativecommons.org/licenses/by-sa/4.0/\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "TSC.md",
          "type": "blob",
          "size": 1.3701171875,
          "content": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2022 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n# Technical Steering Committee (TSC)\n\n> Members of the Technical Steering Committee.\n\nFor information about the governance of the stdlib project, see [GOVERNANCE.md][stdlib-governance].\n\n## Members\n\n-   [kgryte][athan-reines-github] - **Athan Reines** &lt;[kgryte@gmail.com][athan-reines-email]&gt; (he/him)\n-   [Planeshifter][philipp-burckhardt-github] - **Philipp Burckhardt** &lt;[pburckhardt@outlook.com][philipp-burckhardt-email]&gt; (he/him)\n\n<section class=\"links\">\n\n[stdlib-governance]: https://github.com/stdlib-js/stdlib/blob/develop/GOVERNANCE.md\n\n[athan-reines-github]: https://github.com/kgryte\n\n[athan-reines-email]: mailto:kgryte@gmail.com\n\n[philipp-burckhardt-github]: https://github.com/Planeshifter\n\n[philipp-burckhardt-email]: mailto:pburckhardt@outlook.com\n\n</section>\n\n<!-- /.links -->\n"
        },
        {
          "name": "azure-pipelines-disabled.yml",
          "type": "blob",
          "size": 4.404296875,
          "content": "#/\n# @license Apache-2.0\n#\n# Copyright (c) 2019 The Stdlib Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\n# Define the triggers which will cause a build to run:\ntrigger:\n\n  # Define branch triggers:\n  branches:\n\n    # List branches for which changes will trigger a build:\n    include:\n      - master\n      - develop\n\n  # Define path triggers:\n  paths:\n\n    # List paths for which changes should trigger a build:\n    include:\n      - bin\n      - data\n      - include\n      - lib\n      - src\n      - \"*.gyp\"\n      - \"*.gypi\"\n      - manifest.json\n\n    # List paths for which changes should *not* trigger a build:\n    exclude:\n      - benchmark\n      - docs\n      - etc\n      - examples\n      - snippets\n      - package.json\n      - datapackage.json\n      - \"*.md\"\n\n\n# Define pull request triggers which will cause a build to run:\npr:\n\n  # Define branch triggers:\n  branches:\n\n    # List branches against which PRs will trigger a build to run:\n    include:\n      - master\n      - develop\n\n\n  # Define path triggers:\n  paths:\n\n    # List paths for which changes should trigger a build:\n    include:\n      - bin\n      - data\n      - etc\n      - include\n      - lib\n      - src\n      - \"*.gyp\"\n      - \"*.gypi\"\n      - manifest.json\n\n    # List paths for which changes should *not* trigger a build:\n    exclude:\n      - benchmark\n      - docs\n      - examples\n      - snippets\n      - _tools\n      - package.json\n      - datapackage.json\n      - \"*.md\"\n\n\njobs:\n  - job: 'unit_tests_linux'\n\n    # Define a display name for use in the UI:\n    displayName: 'unit tests: linux'\n\n    # Define how long a job is allowed to run before timing out:\n    timeoutInMinutes: 360\n\n    # Define how long a job is allowed to cancel:\n    cancelTimeoutInMinutes: 5\n\n    # Specify the host environment:\n    pool:\n      vmImage: 'ubuntu-16.04'\n\n    # Define variable sets for parallel job execution:\n    strategy:\n\n      # Define the maximum number of parallel jobs:\n      maxParallel: 10\n\n      # Define variable sets which will be used to create separate jobs (one per variable set!):\n      matrix:\n        node_v16:\n          NODE_VERSION: '16'\n          NPM_VERSION: '>2.7.0'\n        node_v14:\n          NODE_VERSION: '14'\n          NPM_VERSION: '>2.7.0'\n        node_v12:\n          NODE_VERSION: '12'\n          NPM_VERSION: '>2.7.0'\n        node_v10:\n          NODE_VERSION: '10'\n          NPM_VERSION: '>2.7.0 <7.0.0'\n        node_v8:\n          NODE_VERSION: '8'\n          NPM_VERSION: '>2.7.0 <6.0.0'\n        node_v6:\n          NODE_VERSION: '6'\n          NPM_VERSION: '>2.7.0 <6.0.0'\n        node_v4:\n          NODE_VERSION: '4'\n          NPM_VERSION: '>2.7.0 <6.0.0'\n\n    steps:\n      # Configure clone settings:\n      - checkout: self\n        clean: false\n        fetchDepth: 100 # limit clone depth to the most recent 100 commits\n        lfs: false\n\n      # Install Node.js:\n      - task: NodeTool@0\n\n        # Define a UI display name:\n        displayName: 'Install Node.js'\n\n        # Define a task-specific timeout:\n        timeoutInMinutes: 5\n\n        # Define the Node.js version to install:\n        inputs:\n          versionSpec: '$(NODE_VERSION)'\n\n      # Update the npm client (older clients cannot handle scoped modules):\n      - task: Npm@1\n\n        # Define a UI display name:\n        displayName: 'Update npm'\n\n        # Define a task-specific timeout:\n        timeoutInMinutes: 5\n\n        # Update the global npm installation:\n        inputs:\n          command: custom\n          customCommand: 'install -g npm@\"$(NPM_VERSION)\"'\n\n\n      # Print debug information:\n      - task: bash@3\n\n        # Define a UI display name:\n        displayName: 'Debug info'\n\n        # Define a task-specific timeout:\n        timeoutInMinutes: 2\n\n        # Define the task inputs:\n        inputs:\n          targetType: inline\n          script: |\n            git --version\n            node --version\n            node -p 'process.platform + \"@\" + process.arch'\n            npm --version\n            npm config get registry\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 9.19140625,
          "content": "{\n  \"name\": \"@stdlib/stdlib\",\n  \"version\": \"0.3.2\",\n  \"description\": \"Standard library.\",\n  \"license\": \"Apache-2.0 AND BSL-1.0\",\n  \"author\": {\n    \"name\": \"The Stdlib Authors\",\n    \"url\": \"https://github.com/stdlib-js/stdlib/graphs/contributors\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"The Stdlib Authors\",\n      \"url\": \"https://github.com/stdlib-js/stdlib/graphs/contributors\"\n    }\n  ],\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/stdlib\"\n  },\n  \"bin\": {\n    \"stdlib\": \"./bin/cli\"\n  },\n  \"main\": \"./lib\",\n  \"browser\": {\n    \"process\": \"process/\"\n  },\n  \"directories\": {\n    \"doc\": \"./docs\",\n    \"example\": \"./examples\",\n    \"lib\": \"./lib\",\n    \"test\": \"./test\"\n  },\n  \"types\": \"./docs/types\",\n  \"scripts\": {\n    \"notes\": \"make notes\",\n    \"lint\": \"make lint\",\n    \"repl\": \"make repl\",\n    \"test\": \"make test\",\n    \"test-cov\": \"make test-cov\",\n    \"view-cov\": \"make view-cov\",\n    \"examples\": \"make examples\",\n    \"benchmark\": \"make benchmark\",\n    \"clean\": \"make clean\",\n    \"check-deps\": \"make check-deps\",\n    \"check-licenses\": \"make check-licenses\"\n  },\n  \"homepage\": \"https://github.com/stdlib-js/stdlib\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/stdlib-js/stdlib.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/stdlib-js/stdlib/issues\"\n  },\n  \"dependencies\": {\n    \"@stdlib/array\": \"^0.3.3\",\n    \"@stdlib/assert\": \"^0.3.3\",\n    \"@stdlib/bench\": \"^0.4.3\",\n    \"@stdlib/bigint\": \"^0.3.3\",\n    \"@stdlib/blas\": \"^0.3.3\",\n    \"@stdlib/boolean\": \"^0.3.3\",\n    \"@stdlib/buffer\": \"^0.3.3\",\n    \"@stdlib/cli\": \"^0.3.3\",\n    \"@stdlib/complex\": \"^0.3.3\",\n    \"@stdlib/console\": \"^0.3.3\",\n    \"@stdlib/constants\": \"^0.3.3\",\n    \"@stdlib/datasets\": \"^0.3.0\",\n    \"@stdlib/error\": \"^0.3.3\",\n    \"@stdlib/fs\": \"^0.3.3\",\n    \"@stdlib/function\": \"^0.3.3\",\n    \"@stdlib/iter\": \"^0.3.3\",\n    \"@stdlib/lapack\": \"^0.1.3\",\n    \"@stdlib/math\": \"^0.3.3\",\n    \"@stdlib/ml\": \"^0.3.3\",\n    \"@stdlib/namespace\": \"^0.3.3\",\n    \"@stdlib/napi\": \"^0.3.3\",\n    \"@stdlib/ndarray\": \"^0.3.3\",\n    \"@stdlib/net\": \"^0.3.3\",\n    \"@stdlib/nlp\": \"^0.3.3\",\n    \"@stdlib/number\": \"^0.3.3\",\n    \"@stdlib/object\": \"^0.3.3\",\n    \"@stdlib/os\": \"^0.3.3\",\n    \"@stdlib/plot\": \"^0.3.3\",\n    \"@stdlib/process\": \"^0.3.3\",\n    \"@stdlib/proxy\": \"^0.3.3\",\n    \"@stdlib/random\": \"^0.3.3\",\n    \"@stdlib/regexp\": \"^0.3.3\",\n    \"@stdlib/repl\": \"^0.3.3\",\n    \"@stdlib/simulate\": \"^0.3.3\",\n    \"@stdlib/slice\": \"^0.3.3\",\n    \"@stdlib/stats\": \"^0.3.3\",\n    \"@stdlib/streams\": \"^0.3.3\",\n    \"@stdlib/strided\": \"^0.3.3\",\n    \"@stdlib/string\": \"^0.3.3\",\n    \"@stdlib/symbol\": \"^0.3.3\",\n    \"@stdlib/time\": \"^0.3.3\",\n    \"@stdlib/types\": \"^0.4.3\",\n    \"@stdlib/utils\": \"^0.3.3\",\n    \"@stdlib/wasm\": \"^0.1.1\",\n    \"acorn\": \"^8.1.0\",\n    \"acorn-loose\": \"^8.0.2\",\n    \"acorn-walk\": \"^8.0.2\",\n    \"d3-format\": \"^1.0.0\",\n    \"d3-scale\": \"^1.0.0\",\n    \"d3-shape\": \"^1.0.0\",\n    \"d3-time-format\": \"^2.0.0\",\n    \"debug\": \"^2.6.9\",\n    \"glob\": \"^7.0.5\",\n    \"minimist\": \"^1.2.0\",\n    \"readable-stream\": \"^2.1.4\",\n    \"resolve\": \"^1.1.7\",\n    \"vdom-to-html\": \"^2.3.0\",\n    \"virtual-dom\": \"^2.1.1\"\n  },\n  \"optionalDependencies\": {\n    \"node-gyp\": \"^9.3.1\"\n  },\n  \"devDependencies\": {\n    \"0x\": \"^4.10.2\",\n    \"@cspell/eslint-plugin\": \"^8.8.0\",\n    \"@commitlint/cli\": \"^17.4.4\",\n    \"@commitlint/cz-commitlint\": \"^17.4.4\",\n    \"@conventional-commits/parser\": \"^0.4.1\",\n    \"@kaciras/deasync\": \"^1.0.1\",\n    \"@types/node\": \"^13.9.0\",\n    \"@typescript-eslint/parser\": \"^6.9.1\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.9.1\",\n    \"ajv\": \"^5.2.2\",\n    \"browser-pack-flat\": \"^3.0.0\",\n    \"browserify\": \"^17.0.0\",\n    \"bundle-collapser\": \"^1.3.0\",\n    \"c8\": \"^7.12.0\",\n    \"chai\": \"^3.5.0\",\n    \"cheerio\": \"^1.0.0-rc.12\",\n    \"commitizen\": \"^4.3.0\",\n    \"common-shakeify\": \"^0.6.0\",\n    \"conventional-changelog-conventionalcommits\": \"^5.0.0\",\n    \"doctrine\": \"^3.0.0\",\n    \"editorconfig-checker\": \"^6.0.0\",\n    \"envify\": \"^4.0.0\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-expect-type\": \"^0.2.3\",\n    \"eslint-plugin-import\": \"^2.29.0\",\n    \"eslint-plugin-jsdoc\": \"^46.8.2\",\n    \"exorcist\": \"^2.0.0\",\n    \"factor-bundle\": \"^2.5.0\",\n    \"gh-pages\": \"git+https://github.com/Planeshifter/gh-pages.git#main\",\n    \"inquirer\": \"^8.0.0\",\n    \"jscodeshift\": \"^0.15.0\",\n    \"jsdoc\": \"^3.4.0\",\n    \"lunr\": \"^2.3.9\",\n    \"mathjax-node\": \"^2.0.1\",\n    \"mathjax-node-sre\": \"^3.0.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"mustache\": \"^4.0.0\",\n    \"parse-link-header\": \"^1.0.1\",\n    \"plato\": \"^1.5.0\",\n    \"process\": \"^0.11.10\",\n    \"proxyquire\": \"^2.0.0\",\n    \"proxyquire-universal\": \"^2.0.0\",\n    \"proxyquireify\": \"^3.1.1\",\n    \"read-installed\": \"^4.0.3\",\n    \"rehype\": \"^9.0.0\",\n    \"rehype-highlight\": \"^3.0.0\",\n    \"remark\": \"^11.0.1\",\n    \"remark-cli\": \"^7.0.0\",\n    \"remark-frontmatter\": \"^1.2.0\",\n    \"remark-html\": \"^10.0.0\",\n    \"remark-lint\": \"^6.0.0\",\n    \"remark-lint-blockquote-indentation\": \"^1.0.0\",\n    \"remark-lint-checkbox-character-style\": \"^1.0.0\",\n    \"remark-lint-checkbox-content-indent\": \"^1.0.0\",\n    \"remark-lint-code-block-style\": \"^1.0.0\",\n    \"remark-lint-definition-case\": \"^1.0.0\",\n    \"remark-lint-definition-spacing\": \"^1.0.0\",\n    \"remark-lint-emphasis-marker\": \"^1.0.0\",\n    \"remark-lint-fenced-code-flag\": \"^1.0.0\",\n    \"remark-lint-fenced-code-marker\": \"^1.0.0\",\n    \"remark-lint-file-extension\": \"^1.0.0\",\n    \"remark-lint-final-definition\": \"^1.0.0\",\n    \"remark-lint-final-newline\": \"^1.0.0\",\n    \"remark-lint-first-heading-level\": \"^1.1.0\",\n    \"remark-lint-hard-break-spaces\": \"^1.0.1\",\n    \"remark-lint-heading-increment\": \"^1.0.0\",\n    \"remark-lint-heading-style\": \"^1.0.0\",\n    \"remark-lint-linebreak-style\": \"^1.0.0\",\n    \"remark-lint-link-title-style\": \"^1.0.0\",\n    \"remark-lint-list-item-bullet-indent\": \"^1.0.0\",\n    \"remark-lint-list-item-content-indent\": \"^1.0.0\",\n    \"remark-lint-list-item-indent\": \"^1.0.0\",\n    \"remark-lint-list-item-spacing\": \"^1.1.0\",\n    \"remark-lint-maximum-heading-length\": \"^1.0.0\",\n    \"remark-lint-maximum-line-length\": \"^1.0.0\",\n    \"remark-lint-no-auto-link-without-protocol\": \"^1.0.0\",\n    \"remark-lint-no-blockquote-without-marker\": \"^2.0.0\",\n    \"remark-lint-no-consecutive-blank-lines\": \"^1.0.0\",\n    \"remark-lint-no-duplicate-definitions\": \"^1.0.0\",\n    \"remark-lint-no-duplicate-headings\": \"^1.0.0\",\n    \"remark-lint-no-duplicate-headings-in-section\": \"^1.0.0\",\n    \"remark-lint-no-emphasis-as-heading\": \"^1.0.0\",\n    \"remark-lint-no-empty-url\": \"^1.0.1\",\n    \"remark-lint-no-file-name-articles\": \"^1.0.0\",\n    \"remark-lint-no-file-name-consecutive-dashes\": \"^1.0.0\",\n    \"remark-lint-no-file-name-irregular-characters\": \"^1.0.0\",\n    \"remark-lint-no-file-name-mixed-case\": \"^1.0.0\",\n    \"remark-lint-no-file-name-outer-dashes\": \"^1.0.1\",\n    \"remark-lint-no-heading-content-indent\": \"^1.0.0\",\n    \"remark-lint-no-heading-indent\": \"^1.0.0\",\n    \"remark-lint-no-heading-like-paragraph\": \"^1.0.0\",\n    \"remark-lint-no-heading-punctuation\": \"^1.0.0\",\n    \"remark-lint-no-html\": \"^1.0.0\",\n    \"remark-lint-no-inline-padding\": \"^1.0.0\",\n    \"remark-lint-no-literal-urls\": \"^1.0.0\",\n    \"remark-lint-no-missing-blank-lines\": \"^1.0.0\",\n    \"remark-lint-no-multiple-toplevel-headings\": \"^1.0.0\",\n    \"remark-lint-no-paragraph-content-indent\": \"^1.0.1\",\n    \"remark-lint-no-reference-like-url\": \"^1.0.0\",\n    \"remark-lint-no-shell-dollars\": \"^1.0.0\",\n    \"remark-lint-no-shortcut-reference-image\": \"^1.0.0\",\n    \"remark-lint-no-shortcut-reference-link\": \"^1.0.1\",\n    \"remark-lint-no-table-indentation\": \"^1.0.0\",\n    \"remark-lint-no-tabs\": \"^1.0.0\",\n    \"remark-lint-no-trailing-spaces\": \"^3.0.2\",\n    \"remark-lint-no-undefined-references\": \"^1.0.0\",\n    \"remark-lint-no-unused-definitions\": \"^1.0.0\",\n    \"remark-lint-ordered-list-marker-style\": \"^1.0.0\",\n    \"remark-lint-ordered-list-marker-value\": \"^1.0.0\",\n    \"remark-lint-rule-style\": \"^1.0.0\",\n    \"remark-lint-strong-marker\": \"^1.0.0\",\n    \"remark-lint-table-cell-padding\": \"^1.0.0\",\n    \"remark-lint-table-pipe-alignment\": \"^1.0.0\",\n    \"remark-lint-table-pipes\": \"^1.0.0\",\n    \"remark-lint-unordered-list-marker-style\": \"^1.0.0\",\n    \"remark-slug\": \"^5.0.0\",\n    \"remark-unlink\": \"^2.0.0\",\n    \"remark-validate-links\": \"^9.0.1\",\n    \"remark-vdom\": \"^8.0.0\",\n    \"semver\": \"^6.0.0\",\n    \"source-map-explorer\": \"^2.5.3\",\n    \"spdx-license-ids\": \"^3.0.0\",\n    \"tap-min\": \"git+https://github.com/Planeshifter/tap-min.git\",\n    \"tap-spec\": \"5.x.x\",\n    \"tap-summary\": \"^4.0.0\",\n    \"tap-xunit\": \"^2.2.0\",\n    \"tape\": \"git+https://github.com/kgryte/tape.git#fix/globby\",\n    \"to-vfile\": \"^6.0.0\",\n    \"typedoc\": \"git+https://github.com/kgryte/typedoc.git#0.16.11-patch\",\n    \"typescript\": \"4.3.5\",\n    \"uglify-js\": \"^3.17.4\",\n    \"uglifyify\": \"^5.0.0\",\n    \"unified-lint-rule\": \"^1.0.1\",\n    \"unist-util-visit\": \"^2.0.0\",\n    \"unist-util-visit-parents\": \"^3.1.1\",\n    \"yaml\": \"^1.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\",\n    \"npm\": \">2.7.0\"\n  },\n  \"os\": [\n    \"aix\",\n    \"darwin\",\n    \"freebsd\",\n    \"linux\",\n    \"macos\",\n    \"openbsd\",\n    \"sunos\",\n    \"win32\",\n    \"windows\"\n  ],\n  \"keywords\": [\n    \"stdlib\",\n    \"stdlib-js\",\n    \"stdlib.js\",\n    \"js-stdlib\",\n    \"stdlibjs\",\n    \"standard\",\n    \"std\",\n    \"library\",\n    \"lib\",\n    \"libstd\",\n    \"numerical\",\n    \"numeric\",\n    \"mathematical\",\n    \"mathematics\",\n    \"math\",\n    \"scientific\",\n    \"machine learning\",\n    \"machine-learning\",\n    \"ml\",\n    \"ndarray\",\n    \"numpy\",\n    \"scipy\"\n  ]\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 1.2177734375,
          "content": "{\n  \"compilerOptions\": {\n    \"allowJs\": true,\n    \"allowSyntheticDefaultImports\": false,\n    \"allowUnreachableCode\": false,\n    \"allowUnusedLabels\": false,\n    \"alwaysStrict\": true,\n    \"baseUrl\": \"lib/node_modules\",\n    \"checkJs\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"keyofStringsOnly\": false,\n    \"lib\": [\n      \"es6\"\n    ],\n    \"module\": \"commonjs\",\n    \"moduleResolution\": \"node\",\n    \"newLine\": \"lf\",\n    \"noEmit\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noImplicitAny\": true,\n    \"noImplicitReturns\": false,\n    \"noImplicitThis\": true,\n    \"noStrictGenericChecks\": false,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"paths\": {},\n    \"pretty\": true,\n    \"strictBindCallApply\": true,\n    \"strictFunctionTypes\": true,\n    \"strictNullChecks\": true,\n    \"suppressExcessPropertyErrors\": false,\n    \"suppressImplicitAnyIndexErrors\": false,\n    \"typeRoots\": [ \".\" ],\n    \"types\": []\n  },\n  \"include\": [\n    \"docs/types/index.d.ts\",\n    \"docs/types/test.ts\",\n    \"lib/node_modules/**/docs/types/index.d.ts\",\n    \"lib/node_modules/**/docs/types/test.ts\",\n    \"lib/node_modules/**/@stdlib/types/index.d.ts\",\n    \"lib/node_modules/**/@stdlib/types/test.ts\"\n  ],\n  \"exclude\": [\n    \"node_modules\"\n  ]\n}\n"
        }
      ]
    }
  ]
}