{
  "metadata": {
    "timestamp": 1736562080493,
    "page": 856,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kiliman/operator-mono-lig",
      "stars": 3224,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 2.4912109375,
          "content": "{\n  \"projectName\": \"operator-mono-lig\",\n  \"projectOwner\": \"kiliman\",\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"files\": [\"README.md\"],\n  \"imageSize\": 100,\n  \"commit\": true,\n  \"commitConvention\": \"none\",\n  \"contributors\": [\n    {\n      \"login\": \"kiliman\",\n      \"name\": \"Kiliman\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/47168?v=4\",\n      \"profile\": \"https://github.com/kiliman\",\n      \"contributions\": [\"code\", \"doc\", \"design\"]\n    },\n    {\n      \"login\": \"mskelton\",\n      \"name\": \"Mark Skelton\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/25914066?v=4\",\n      \"profile\": \"https://github.com/mskelton\",\n      \"contributions\": [\"design\"]\n    },\n    {\n      \"login\": \"drod3763\",\n      \"name\": \"Derick Rodriguez\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/7785716?v=4\",\n      \"profile\": \"https://github.com/drod3763\",\n      \"contributions\": [\"doc\"]\n    },\n    {\n      \"login\": \"amitkparekh\",\n      \"name\": \"Amit Parekh\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/7276308?v=4\",\n      \"profile\": \"https://github.com/amitkparekh\",\n      \"contributions\": [\"doc\", \"design\"]\n    },\n    {\n      \"login\": \"CandySunPlus\",\n      \"name\": \"NikSun\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/502700?v=4\",\n      \"profile\": \"https://github.com/CandySunPlus\",\n      \"contributions\": [\"design\"]\n    },\n    {\n      \"login\": \"Jakob6174\",\n      \"name\": \"Jakob Pearson\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/40262817?v=4\",\n      \"profile\": \"https://github.com/Jakob6174\",\n      \"contributions\": [\"code\"]\n    },\n    {\n      \"login\": \"Kilua99\",\n      \"name\": \"kilua99\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/44760686?v=4\",\n      \"profile\": \"https://github.com/Kilua99\",\n      \"contributions\": [\"doc\"]\n    },\n    {\n      \"login\": \"GlorifiedBicycle\",\n      \"name\": \"Reland Boyle\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/71753585?v=4\",\n      \"profile\": \"https://github.com/GlorifiedBicycle\",\n      \"contributions\": [\"doc\"]\n    },\n    {\n      \"login\": \"killua99\",\n      \"name\": \"Luigi\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/457822?v=4\",\n      \"profile\": \"http://killua.me/\",\n      \"contributions\": [\"doc\"]\n    },\n    {\n      \"login\": \"tweks\",\n      \"name\": \"Tomek Weksej\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/564556?v=4\",\n      \"profile\": \"https://github.com/tweks\",\n      \"contributions\": [\"code\"]\n    }\n  ],\n  \"contributorsPerLine\": 7\n}\n\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.240234375,
          "content": "module.exports = {\n  env: {\n    es6: true,\n    node: true,\n  },\n  extends: ['eslint:recommended', 'prettier'],\n  parserOptions: {\n    sourceType: 'module',\n  },\n  rules: {\n    'linebreak-style': ['error', 'unix'],\n    'no-console': 'off',\n  },\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "*\ttext=auto\n"
        },
        {
          "name": ".gitbook.yml",
          "type": "blob",
          "size": 0.0126953125,
          "content": "root: ./docs\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.056640625,
          "content": "build\nnode_modules\n.idea\n.vscode\n.DS_Store\npnpm-lock.yaml\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.0927734375,
          "content": "{\n  \"semi\": false,\n  \"singleQuote\": true,\n  \"trailingComma\": \"all\",\n  \"arrowParens\": \"avoid\"\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0654296875,
          "content": "MIT License\n\nCopyright (c) 2017 Michael Carter <kiliman@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.34765625,
          "content": "# Operator Mono Ligatures\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-6-orange.svg?style=flat-square)](#contributors-)\n\n<img src=\"./images/operator-mono-lig.png\" />\n\nThis project will generate new OpenType fonts for [Operator Mono](https://www.typography.com/fonts/operator/styles/) that includes ligatures similar to\nthose found in the popular [Fira Code](https://github.com/tonsky/FiraCode) font.\n\nThese ligatures were custom created using [Glyphs](https://glyphsapp.com/).\nThere are even italic versions of the ligatures.\n\n## 🎉 What's New in Version 2.5\n\n<img src=\"./images/new-ligatures-2.5.png\"/>\n\n## 🎉 What's New in Version 2\n\n<img src=\"./images/new-ligatures.png\"/>\n\nAll new redesigned ligatures with better hinting. Updated font generation to support advanced OpenType features\nlike those found in Fira Code. For example, the cursor now moves inside the ligature. It also handles repeating\ncharacters properly.\n\n<img src=\"./images/caret-position.gif\" />\n\n## 👀 <a href=\"https://htmlpreview.github.io/?https://github.com/kiliman/operator-mono-lig/blob/master/images/preview/normal/index.html\">Click here to see preview images of all ligatures</a>\n\nWith the awesome help from [Mark Skelton](https://github.com/mskelton), we now have the full set of ligatures for\nthe following fonts. Thanks Mark, and thanks to all of you who have been patiently waiting for these ligatures to be completed.\n\n- Operator Mono SSm Light/Light Italic\n- Operator Mono SSm Book/Book Italic\n- Operator Mono SSm Medium/Medium Italic\n- Operator Mono SSm Bold/Bold Italic\n- Operator Mono Light/Light Italic\n- Operator Mono Book/Book Italic\n\n## 🙏 Help Wanted\n\nAs noted above, v2 does not include all weights for Operator Mono. In order to update the other fonts, all the ligatures need to be redone. Unfortunately I just don't have the time to do that at the moment. If you have a Mac and are interested in helping, please let me know. I will even purchase a license to Gylphs Mini for you.\n\nYou can reach me at kiliman@gmail.com.\n\n## ☑️ Take the poll\n\nWhich font weight of Operator Mono do you use? Also note difference between Screen Smart (SSm) and regular version. This will help prioritize the order of development.\n\n[![](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20SSm%20Book)](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20SSm%20Book/vote)\n[![](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20SSm%20Medium)](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20SSm%20Medium/vote)\n[![](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20SSm%20Light)](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20SSm%20Light/vote)\n[![](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20Book)](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20Book/vote)\n[![](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20Medium)](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20Medium/vote)\n[![](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20Light)](https://api.gh-polls.com/poll/01C6T4C3FBG21KVS7FAW7Z09B2/Operator%20Mono%20Light/vote)\n\n> NOTE: Because _Operator Mono_ is not a free font, you must have the original font files. This utility\n> will merge the ligature definitions into a copy of the original font. The new font family is named _Operator Mono Lig_ so you can install it side-by-side with the original font.\n\n## Prerequisites\n\n- The original _Operator Mono_ font... of course.\n- Python (v2.7+)\n  - **NOTE**: For Mac, the default system Python v2.7 doesn't work. Make sure you install Python 3.\n- Node.js\n- Install _fonttools_ from https://github.com/fonttools/fonttools\n  - Windows/Linux: `pip install fonttools`\n    - **NOTE**: For Windows you should use a console with administrative permissions if your Python sit under `C:\\PythonX`\n    - **NOTE**: For Linux in WSL/WSL2, ensure that _fonttools_ is added to PATH after install. Alternatively, consider installing via `sudo apt install fonttools`.\n  - Mac: `pip3 install fonttools` (from Python 3)\n\n## Installation\n\nOnce all the prerequisites have been installed, clone this repo or download latest release from [Releases](https://github.com/kiliman/operator-mono-lig/releases) and unzip.\n\nNext, copy your _Operator Mono_ OpenType files into the `original` folder. **NOTE**: Filenames must not include spaces. It should look like:\n\n- OperatorMonoSSm-Book.otf\n- OperatorMonoSSm-BookItalic.otf\n- OperatorMono-Light.otf\n- OperatorMono-LightItalic.otf\n- etc.\n\nFinally, run the following commands to install npm dependencies and build the font files. The new font files will be placed in the `build` folder. You can now install these fonts on your system.\n\n```sh\nnpm install\n\n# Windows\nbuild\n\n# Linux/Mac\n./build.sh\n```\n\n### Docker\n\nIf you use Docker, you can also use the executable Docker image [here](https://github.com/drod3763/kiliman-operator-mono-lig-docker). It handles all the prerequisite installation for you, you just need to:\n\n1. Clone the repo [located here](https://github.com/drod3763/kiliman-operator-mono-lig-docker).\n1. Copy your _Operator Mono_ OpenType files into the `input` folder.\n1. From the command line run:\n   ```sh\n   docker-compose run --rm operator-mono-lig\n   ```\n\nThe image will build and execute the conversion. The new font files will be generated into the `build` folder.\n\n## Configure Your Code Editor\n\nYou can now select the newly generated font in your code editor. Make sure you enable font ligatures and set the desired font weight if using Windows. The code block below shows what this might look like if using VS Code.\n\n```json\n  \"editor.fontFamily\": \"OperatorMonoSSmLig-Book\",\n  \"editor.fontLigatures\": true,\n  // for Windows\n  \"editor.fontFamily\": \"Operator Mono SSm Lig\",\n  \"editor.fontLigatures\": true,\n  \"editor.fontWeight\": \"500\",   // adjust for desired weight\n```\n\n## 🔧 Customize the generated font\n\nBy default, all available ligatures will be added to the generated font. However, if you don't like a particular\nligature, or would prefer to use an alternate glyph, you can create a `profiles.ini` file in the `./original` folder\nto configure how the font should be built.\n\nYou can create one or more profiles. Each profile will have a set of directives. You can specify alternate glyphs for\na given ligature. You can also prevent a ligature from being added.\n\nEach profile will be listed with `[profile name]` (the first profile should be named default). The generated font will\ninclude the profile name. For example `[Go]` would generate the font: _Operator Mono Lig Go_. This way you can configure\na different set of ligatures for each language in your favorite code editor.\n\n```ini\n# name of profile (one or more sections, first should be name default)\n[default]\n# glyph=altglyph\ngreater_equal.liga=greater_equal.2.liga\n\n# do not include glyph (add ! prefix)\n!equal_equal.liga\n\n# another optional section (will create a font named Operator Mono Lig Go)\n[Go]\n... add custom directives for this font ...\n```\n\n## 😍 Thank You\n\nThanks to Hoefler&Co for making such an amazing font. It makes writing code truly pleasurable.\n\nThanks also to all of you for your kinds words of encouragement and feedback. I really\nappreciate it.\n\n## ✨ Contributors\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/kiliman\"><img src=\"https://avatars3.githubusercontent.com/u/47168?v=4?s=100\" width=\"100px;\" alt=\"Kiliman\"/><br /><sub><b>Kiliman</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=kiliman\" title=\"Code\">💻</a> <a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=kiliman\" title=\"Documentation\">📖</a> <a href=\"#design-kiliman\" title=\"Design\">🎨</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mskelton\"><img src=\"https://avatars3.githubusercontent.com/u/25914066?v=4?s=100\" width=\"100px;\" alt=\"Mark Skelton\"/><br /><sub><b>Mark Skelton</b></sub></a><br /><a href=\"#design-mskelton\" title=\"Design\">🎨</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/drod3763\"><img src=\"https://avatars2.githubusercontent.com/u/7785716?v=4?s=100\" width=\"100px;\" alt=\"Derick Rodriguez\"/><br /><sub><b>Derick Rodriguez</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=drod3763\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/amitkparekh\"><img src=\"https://avatars3.githubusercontent.com/u/7276308?v=4?s=100\" width=\"100px;\" alt=\"Amit Parekh\"/><br /><sub><b>Amit Parekh</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=amitkparekh\" title=\"Documentation\">📖</a> <a href=\"#design-amitkparekh\" title=\"Design\">🎨</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/CandySunPlus\"><img src=\"https://avatars0.githubusercontent.com/u/502700?v=4?s=100\" width=\"100px;\" alt=\"NikSun\"/><br /><sub><b>NikSun</b></sub></a><br /><a href=\"#design-CandySunPlus\" title=\"Design\">🎨</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Jakob6174\"><img src=\"https://avatars3.githubusercontent.com/u/40262817?v=4?s=100\" width=\"100px;\" alt=\"Jakob Pearson\"/><br /><sub><b>Jakob Pearson</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=Jakob6174\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Kilua99\"><img src=\"https://avatars.githubusercontent.com/u/44760686?v=4?s=100\" width=\"100px;\" alt=\"kilua99\"/><br /><sub><b>kilua99</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=Kilua99\" title=\"Documentation\">📖</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/GlorifiedBicycle\"><img src=\"https://avatars.githubusercontent.com/u/71753585?v=4?s=100\" width=\"100px;\" alt=\"Reland Boyle\"/><br /><sub><b>Reland Boyle</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=GlorifiedBicycle\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://killua.me/\"><img src=\"https://avatars.githubusercontent.com/u/457822?v=4?s=100\" width=\"100px;\" alt=\"Luigi\"/><br /><sub><b>Luigi</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=killua99\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/tweks\"><img src=\"https://avatars.githubusercontent.com/u/564556?v=4?s=100\" width=\"100px;\" alt=\"Tomek Weksej\"/><br /><sub><b>Tomek Weksej</b></sub></a><br /><a href=\"https://github.com/kiliman/operator-mono-lig/commits?author=tweks\" title=\"Code\">💻</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n"
        },
        {
          "name": "build.bat",
          "type": "blob",
          "size": 0.8212890625,
          "content": "@echo off\nsetlocal\n\nif not exist .\\build\\* mkdir build\n\nset flags=\nif \"%1\"==\"--italics-hack-off\" (\n\tset flags=%1\n\tshift\n)\nrem only build passed in font\nif not \"%1\"==\"\" (\n\tcall :build_font %1 %flags%\n\texit /b\n)\n\nrem build all fonts\nfor /d %%d in (.\\ligature\\*) do call :build_font %%~nd %flags%\nexit /b\n\n\n:build_font\nset lig=%1\nset flags=%2\nset otf=%lig:Lig-=-%\n\nif not exist .\\original\\%otf%.otf exit /b\nif not exist .\\ligature\\%lig%\\glyphs\\* exit /b\n\n@echo Building %lig%\nttx -f .\\original\\%otf%.otf\nnode index.js %otf% %flags%\nttx -f .\\build\\%lig%.ttx\nrem check if \"SSm\" is in name since the features are slightly different\n@echo.%lig% | findstr /C:\"SSm\" 1>nul\nif errorlevel 1 (\n\tset fea=\".\\features\\default.fea\"\n) else (\n\tset fea=\".\\features\\defaultSSm.fea\"\n)\nfonttools feaLib -v -o \".\\build\\%lig%.otf\" %fea% \".\\build\\%lig%.otf\"\n\nexit /b\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.810546875,
          "content": "#!/bin/bash\n\nmkdir -p build\n\nbuild_font() {\n    lig=\"$1\"\n    flags=\"$2\"\n    otf=${lig/Lig-/-}\n\n    if [ ! -e \"./original/$otf.otf\" ]\n    then\n        return\n    fi\n    if [ ! -e \"./ligature/$lig/glyphs\" ]\n    then\n        return\n    fi\n\n    echo Building \"$1\"\n    ttx -f \"./original/$otf.otf\"\n    node index.js \"$otf\" \"$flags\"\n\n    ttx -f \"./build/$1.ttx\"\n    if [[ $lig == *\"SSm\"* ]]; then\n        fea=\"./features/defaultSSm.fea\"\n    else\n        fea=\"./features/default.fea\"\n    fi\n    fonttools feaLib -v -o \"./build/$1.otf\" $fea \"./build/$1.otf\"\n}\n\nflags=\nif [ \"$1\" = \"--italics-hack-off\" ]\nthen\n    flags=$1\n    shift\nfi\nif [ -n \"$1\" ]\nthen\n    # build specified font\n    build_font \"$1\" \"$flags\"\nelse\n    # build all available fonts\n    for d in ./ligature/*/ ; do\n        build_font \"$(basename \"$d\")\" \"$flags\"\n    done\nfi\n"
        },
        {
          "name": "calt.js",
          "type": "blob",
          "size": 1.4208984375,
          "content": "const fs = require('fs')\n\nconst rules = [\n  '',\n  `\nlookup 1 {\n  sub 1 by glyph;\n} 1;`,\n  `\nlookup 1_2 {\n  ignore sub 1 1' 2;\n  ignore sub 1' 2 2;\n  sub 1.spacer 2' by glyph;\n  sub 1'       2  by 1.spacer;\n} 1_2;`,\n  `\nlookup 1_2_3 {\n  ignore sub 1 1' 2 3;\n  ignore sub 1' 2 3 3;\n  sub 1.spacer 2.spacer 3' by glyph;\n  sub 1.spacer 2'       3  by 2.spacer;\n  sub 1'       2        3  by 1.spacer;\n} 1_2_3;`,\n  `\nlookup 1_2_3_4 {\n  ignore sub 1 1' 2 3 4;\n  ignore sub 1' 2 3 4 4;\n  sub 1.spacer 2.spacer 3.spacer 4' by glyph;\n  sub 1.spacer 2.spacer 3'       4  by 3.spacer;\n  sub 1.spacer 2'       3        4  by 2.spacer;\n  sub 1'       2        3        4  by 1.spacer;\n} 1_2_3_4;`,\n]\n\nconst gencalt = ligatures => {\n  let calt = 'feature calt {\\n'\n  const ligs = {}\n\n  ligatures\n    .filter(l => !!l.name.match(/\\.liga$/) || l.name !== l.glyph)\n    .map(l => l.glyph)\n    .sort((a, b) => {\n      const length = b.split('_').length - a.split('_').length\n      if (length !== 0) return length\n      return a < b ? -1 : 1\n    })\n    .forEach(g => {\n      g.split('.')\n        .slice(0, 1)\n        .forEach(l => {\n          if (ligs[l]) return\n          ligs[l] = true\n          const c = l.split('_')\n          let rule = rules[c.length]\n          rule = rule\n            .replace(/\\d/g, m => c[parseInt(m) - 1])\n            .replace(/glyph/g, g)\n          calt += rule + '\\n'\n        })\n    })\n\n  return calt + '\\n} calt;\\n'\n}\n\nexports.gencalt = gencalt\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extract.bat",
          "type": "blob",
          "size": 0.220703125,
          "content": "@echo off\nsetlocal\n\nrem extract all fonts\nfor %%d in (.\\ligature_source\\*.otf) do call :extract_font %%~nd\nexit /b\n\n:extract_font\nset lig=%1\nset otf=%lig:Lig=%\n\nttx -f .\\ligature_source\\%lig%.otf\nnode extract.js %lig%\nexit /b\n"
        },
        {
          "name": "extract.js",
          "type": "blob",
          "size": 7.3076171875,
          "content": "const fs = require('fs');\nconst os = require('os');\nif (!os.EOL) {\n  os.EOL = process.platform === 'win32' ? '\\r\\n' : '\\n';\n}\nconst xpath = require('xpath');\nconst { DOMParser, XMLSerializer } = require('xmldom');\nconst format = require('xml-formatter');\nconst hash = require('hash.js');\n\nlet fontName;\n\nconst NodeType = {};\nNodeType.TEXT_NODE = 3;\n\nfunction main() {\n  fontName = process.argv[2];\n\n  const glyphsRegEx = getGlyphsRegEx('./ligature_source/glyphs');\n  const srcFileName = `./ligature_source/${fontName}.ttx`;\n\n  const folder = `./ligature/${fontName}`;\n  const fileName = `./${folder}/names.json`;\n  if (!fs.existsSync(fileName)) {\n    return 0;\n  }\n\n  console.log(`Reading file ${srcFileName}`);\n  const xml = fs.readFileSync(srcFileName, 'utf-8');\n  const dom = new DOMParser().parseFromString(xml);\n\n  extractAndWrite('config', extractConfig, dom);\n\n  extractCharStrings(dom, glyphsRegEx);\n\n  extractAndWrite('subrs', extractSubrs, dom);\n  extractAndWrite('gsubrs', extractGlobalSubrs, dom);\n\n  console.log('Done');\n}\n\nfunction getGlyphsRegEx(path) {\n  const glyphs = fs.readFileSync(path, 'utf-8');\n  const patterns = ['LIG'];\n\n  glyphs\n    .split(os.EOL)\n    .filter(line => line.length > 0)\n    .forEach(line => {\n      const pattern = line\n        .replace(/\\s*#.*/, '')\n        .replace(/[.]/g, '\\\\.')\n        .replace(/[*]/g, '.*');\n      if (pattern.length) {\n        patterns.push(pattern);\n      }\n    });\n  return new RegExp(`^(${patterns.join('|')})$`);\n}\n\nfunction extractAndWrite(name, func, dom) {\n  const newDom = func(dom);\n  console.log('Finished extracting ' + name);\n\n  const folder = `./ligature/${fontName}`;\n  const fileName = `./${folder}/${name}.xml`;\n  if (!fs.existsSync(folder)) {\n    fs.mkdirSync(folder);\n  }\n  fs.writeFileSync(fileName, format(serialize(newDom)));\n  console.log('Finished writing ' + name);\n}\n//const dump = dom => console.log(serialize(dom));\nconst serialize = dom => new XMLSerializer().serializeToString(dom);\n\nconst extractConfig = dom => {\n  const newDom = new DOMParser().parseFromString('<ttFont/>');\n  const head = xpath.select('/ttFont/head', dom, true);\n  const hhea = xpath.select('/ttFont/hhea', dom, true);\n\n  // remove elements that change after each save\n  // but we don't care about\n  head.removeChild(xpath.select('checkSumAdjustment', head, true));\n  head.removeChild(xpath.select('created', head, true));\n  head.removeChild(xpath.select('modified', head, true));\n\n  const bbox = extractFromPath('/ttFont/CFF/CFFFont/FontBBox', dom);\n  const widthX = extractFromPath(\n    '/ttFont/CFF/CFFFont/Private/nominalWidthX',\n    dom\n  );\n  newDom.documentElement.appendChild(head);\n  newDom.documentElement.appendChild(hhea);\n  newDom.documentElement.appendChild(bbox);\n  newDom.documentElement.appendChild(widthX);\n  return newDom;\n};\n\nconst extractFromPath = (path, dom) => {\n  const parentPath = path.substring(0, path.lastIndexOf('/'));\n  const childPath = parentPath.substring(path.indexOf('/', 1));\n  const elements = parentPath.split('/').slice(2);\n  let xml = '';\n  elements.forEach(e => (xml += `<${e}>`));\n  elements.reverse().forEach(e => (xml += `</${e}>`));\n\n  const newDom = new DOMParser().parseFromString(xml);\n  const node = xpath.select(path, dom, true);\n  const parentNode = xpath.select(childPath, newDom, true);\n  parentNode.appendChild(node);\n  return newDom.documentElement;\n};\n\nconst extractCharStrings = (dom, glyphsRegEx) => {\n  const charStrings = xpath.select(\n    '/ttFont/CFF/CFFFont/CharStrings/CharString',\n    dom\n  );\n\n  charStrings\n    .filter(node => glyphsRegEx.test(node.getAttribute('name')))\n    .forEach(node => writeGlyphData(dom, node));\n  console.log('Finished writing charstrings');\n};\n\nconst writeGlyphData = (dom, node) => {\n  const newDom = new DOMParser().parseFromString('<Glyph/>').documentElement;\n  const name = node.getAttribute('name');\n  newDom.setAttribute('name', name);\n\n  // get map and set code\n  const map = xpath.select(\n    `/ttFont/cmap/cmap_format_4/map[@name=\"${name}\"]`,\n    dom,\n    true\n  );\n  if (map) {\n    newDom.setAttribute('code', map.getAttribute('code'));\n  }\n\n  // get mtx\n  const mtx = xpath.select(`/ttFont/hmtx/mtx[@name=\"${name}\"]`, dom, true);\n  newDom.setAttribute('lsb', mtx.getAttribute('lsb'));\n  newDom.setAttribute('width', mtx.getAttribute('width'));\n\n  const charStringDom = dom.createElement('CharString');\n\n  const subrsDom = dom.createElement('Subrs');\n  const gsubrsDom = dom.createElement('GlobalSubrs');\n  newDom.appendChild(charStringDom);\n  newDom.appendChild(subrsDom);\n  newDom.appendChild(gsubrsDom);\n\n  const subrs = {\n    map: [],\n    fingerprints: [],\n    sourcePath: '/ttFont/CFF/CFFFont/Private/Subrs',\n    target: subrsDom\n  };\n  const gsubrs = {\n    map: [],\n    fingerprints: [],\n    sourcePath: '/ttFont/CFF/GlobalSubrs',\n    target: gsubrsDom\n  };\n\n  extractCharStringSubrs(dom, node, subrs, gsubrs, 8);\n\n  const outline = indentTextContent(node.childNodes[0].textContent, 8);\n  charStringDom.appendChild(dom.createTextNode(outline));\n\n  const folder = `./ligature/${fontName}/glyphs`;\n  const fileName = `./${folder}/${name}.xml`;\n  if (!fs.existsSync(folder)) {\n    fs.mkdirSync(folder);\n  }\n  fs.writeFileSync(fileName, format(serialize(newDom)));\n  console.log('* ' + name);\n};\n\nconst extractCharStringSubrs = (dom, node, subrs, gsubrs, indent) => {\n  // check for callsubr/callgsubr\n\n  const lines = node.childNodes[0].textContent.split(os.EOL);\n  const newLines = [];\n  let fingerprint = '';\n\n  lines.forEach(line => {\n    if (line.trim().length === 0) return;\n    const matches = line.match(/(.*?)(-?\\d+) (callsubr|callgsubr)$/);\n    if (matches != null) {\n      const { map, fingerprints, sourcePath, target } =\n        matches[3] === 'callsubr' ? subrs : gsubrs;\n      const index = matches[2];\n      const srcIndex = parseInt(index) + 107;\n      let newIndex = map[srcIndex];\n\n      if (!newIndex) {\n        // find subr in source dom and copy to target dom\n        const srcSubr = xpath.select(\n          `/${sourcePath}/CharString[@index=\"${srcIndex}\"]`,\n          dom,\n          true\n        );\n\n        // append subr to target dom and get new index\n        newIndex = xpath.select('count(CharString)', target, true);\n        map[srcIndex] = newIndex;\n\n        const clone = srcSubr.cloneNode(true);\n        clone.setAttribute('index', newIndex);\n        target.appendChild(clone);\n\n        // patch up source in case it also has any callsubrs\n        fingerprint = extractCharStringSubrs(dom, clone, subrs, gsubrs, 12);\n        fingerprints[newIndex] = fingerprint;\n      } else {\n        fingerprint = fingerprints[newIndex];\n      }\n\n      // rewrite line with fingerprint\n      line = `${matches[1]}{${fingerprint}} ${matches[3]}`;\n    }\n    newLines.push(line.trim());\n  });\n  const content = newLines.join('\\n');\n  fingerprint = hash\n    .sha256()\n    .update(content)\n    .digest('hex')\n    .substr(0, 8);\n  node.setAttribute('fingerprint', fingerprint);\n\n  node.childNodes[0].textContent = indentTextContent(content, indent);\n  return fingerprint;\n};\n\nconst indentTextContent = (text, indent) => {\n  return text\n    .split('\\n')\n    .map(line => ' '.repeat(indent) + line.trim())\n    .join('\\n')\n    .trim();\n};\n\nconst extractSubrs = dom => {\n  const subrs = xpath.select('/ttFont/CFF/CFFFont/Private/Subrs', dom, true);\n  return subrs;\n};\n\nconst extractGlobalSubrs = dom => {\n  const subrs = xpath.select('/ttFont/CFF/GlobalSubrs', dom, true);\n  return subrs;\n};\n\nmain();\n"
        },
        {
          "name": "extract.sh",
          "type": "blob",
          "size": 0.3291015625,
          "content": "#!/bin/bash\n\nextract_font() {\n    lig=\"$1\"\n\n    echo Extracting $1\n    ttx -f \"./ligature_source/$lig.otf\"\n    node extract.js $lig\n}\n\nif [ -n \"$1\" ]\nthen\n    # extract specified font\n    extract_font $1\nelse\n    # build all available fonts\n    for f in ./ligature_source/*.otf ; do\n        extract_font `basename \"${f%.*}\"`\n    done\nfi\n"
        },
        {
          "name": "features",
          "type": "tree",
          "content": null
        },
        {
          "name": "genpreview.js",
          "type": "blob",
          "size": 2.4677734375,
          "content": "const fs = require('fs')\nconst { createCanvas } = require('canvas')\n\nconst width = 64\nconst height = 48\nconst weight = 300\n\nconst map = {\n  ampersand: '&',\n  bar: '|',\n  colon: ':',\n  equal: '=',\n  exclam: '!',\n  greater: '>',\n  hyphen: '-',\n  less: '<',\n  plus: '+',\n  question: '?',\n  slash: '/',\n  underscore: '_',\n  w: 'w',\n}\n\nfunction generateLigaturePreview(style, filename) {\n  const ligature = filename.split('.').slice(0, 1)[0]\n  const chars = ligature.split('_')\n\n  const text = chars.reduce((t, c) => t + map[c], '')\n\n  const canvas = createCanvas(width, height)\n  const context = canvas.getContext('2d')\n\n  context.fillStyle = '#000'\n  context.fillRect(0, 0, width, height)\n\n  context.font = `${weight} ${style} 18pt \"Operator Mono SSm Lig\"`\n  context.textAlign = 'center'\n  context.fillStyle = '#fff'\n  context.text = text\n  context.fillText(text, 32, 32)\n\n  const buffer = canvas.toBuffer('image/png')\n  console.log(ligature)\n  fs.writeFileSync(`./images/preview/${style}/${ligature}.png`, buffer)\n\n  return { text, ligature, filename: `${ligature}.png` }\n}\n\nfunction generate(style, filenames) {\n  let html = `<html><head>\n  <style>\n    body { background-color: #000; color: #fff; font-family: sans-serif; margin: 16px;}\n    a { color: #fff; text-decoration: none; padding: 4px;}\n    a.active {color: #000; background-color: #fff;}\n    .container { display: grid;  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); }\n    .ligature { display: flex; flex-direction: column; align-items: center; margin: 8px; }\n  </style>\n  </head>\n  <body>\n    <h1>Operator Mono Ligatures</h1>\n    <a href=\"https://htmlpreview.github.io/?https://github.com/kiliman/operator-mono-lig/blob/master/images/preview/normal/index.html\" class=\"${\n      style === 'normal' ? 'active' : ''\n    }\">Normal</a> |\n    <a href=\"https://htmlpreview.github.io/?https://github.com/kiliman/operator-mono-lig/blob/master/images/preview/italic/index.html\" class=\"${\n      style === 'italic' ? 'active' : ''\n    }\">Italic</a>\n    <div class=\"container\">\n  `\n\n  filenames.forEach(f => {\n    const { ligature, filename } = generateLigaturePreview(style, f)\n    html += `<div class=\"ligature\"><img src=\"${filename}\"/><div>${ligature}</div></div>`\n  })\n\n  html += `</div></body></html>`\n\n  fs.writeFileSync(`./images/preview/${style}/index.html`, html)\n}\n\nconst filenames = fs\n  .readdirSync('./ligature/OperatorMonoSSmLig-Book/glyphs')\n  .filter(f => !!f.match(/[^\\d]\\.liga\\.xml$/))\n\ngenerate('normal', filenames)\ngenerate('italic', filenames)\n"
        },
        {
          "name": "genspacers.js",
          "type": "blob",
          "size": 1.0029296875,
          "content": "const fs = require('fs');\nconst lig = `<Glyph name=\"LIG\" lsb=\"0\" width=\"625\">\n<CharString>\n    endchar\n</CharString>\n<Subrs/>\n<GlobalSubrs/>\n</Glyph>`;\n\nfs.readdirSync('./ligature')\n  .filter((f) => !!f.match(/^OperatorMono/))\n  .forEach((f) => {\n    console.log(f);\n    fs.readdirSync(`./ligature/${f}/glyphs`)\n      .filter((g) => !!g.match(/\\.liga\\.xml$/))\n      .forEach((g) => {\n        console.log(g);\n        g.split('.')\n          .slice(0, 1)\n          .forEach((l) => {\n            l.split('_').forEach((c) => {\n              const path = `./ligature/${f}/glyphs/${c}.spacer.xml`;\n              const exists = fs.existsSync(path);\n              console.log(path, exists);\n              if (exists) return;\n\n              const width = !!f.match(/SSm/) ? 625 : 600;\n              const spacer = lig\n                .replace('LIG', `${c}.spacer`)\n                .replace('625', width);\n              console.log(f, c, width);\n              fs.writeFileSync(path, spacer);\n            });\n          });\n      });\n  });\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 13.580078125,
          "content": "// @ts-nocheck\nconst fs = require('fs');\nconst os = require('os');\nif (!os.EOL) {\n  os.EOL = process.platform === 'win32' ? '\\r\\n' : '\\n';\n}\n\nconst calt = require('./calt');\n\nconst xpath = require('xpath');\nconst { DOMParser, XMLSerializer } = require('xmldom');\nconst format = require('xml-formatter');\nlet fontName;\nlet ligFontName;\n\nconst regExWhitespace = /^\\s+$/;\nconst NodeType = {};\nNodeType.TEXT_NODE = 3;\n\nlet dom;\nlet italicsHack = false;\nfunction main() {\n  fontName = process.argv[2];\n  italicsHack =\n    fontName.includes('Italic') && process.argv[3] !== '--italics-hack-off';\n\n  ligFontName = fontName.split('-').join('Lig-');\n\n  const srcFileName = `./original/${fontName}.ttx`;\n  console.log(`Reading original font file ${srcFileName}`);\n  const xml = fs.readFileSync(srcFileName, 'utf-8');\n  dom = new DOMParser().parseFromString(xml);\n\n  const profiles = getProfiles();\n\n  // process settings (there may be more than one font to build)\n  profiles.forEach((profile) => buildFont(profile, { italicsHack }));\n\n  console.log('Done');\n}\n\nconst buildFont = (profile, options) => {\n  // add suffix to dstFileName if present\n  const dstFileName = `./build/${ligFontName}${profile.suffixWithLeadingHyphen}.ttx`;\n  console.log(\n    `Building ligature font file ${dstFileName} name = ${profile.name}`\n  );\n\n  const ligatures = sortLigatures(\n    fs\n      .readdirSync(`./ligature/${ligFontName}/glyphs`)\n      .filter((file) => /\\.xml$/.test(file))\n      .map((file) => file.replace('.xml', ''))\n  )\n    .filter((name) => !/\\d+\\.liga$/.test(name)) // skip alternates (ends with .#)\n    .filter((name) => filterLigatures(name, profile.ligatures))\n    .map((name) => mapLigatures(name, profile.ligatures))\n    .filter((entry) => filterGlyphsExists(entry));\n\n\n  processPatch('names', patchNames, dom, ligatures, profile);\n  processPatch('charstrings', patchCharStrings, dom, ligatures);\n  processPatch('glyphs', patchGlyphs, dom, ligatures);\n  processPatch('hmtx', patchHmtx, dom);\n\n    const feature = calt.gencalt(ligatures);\n    fs.writeFileSync('./features/calt.fea', feature);\n\n  console.log(`Writing ligature font file ${dstFileName}`);\n  fs.writeFileSync(dstFileName, format(serialize(dom)));\n};\n\nconst getProfiles = () => {\n  const profilePath = './original/profiles.ini';\n  // return default profiles if profile doesn't exist\n  if (!fs.existsSync(profilePath)) {\n    return [\n      {\n        name: 'default',\n        suffix: '',\n        suffixWithLeadingSpace: '',\n        suffixWithLeadingHyphen: '',\n        ligatures: [],\n      },\n    ];\n  }\n\n  const profiles = [];\n  let profile = null;\n\n  const content = fs.readFileSync(profilePath, 'utf-8');\n  content\n    .split(/\\r|\\r\\n|\\n/g)\n    .filter((line) => /^[#]/.test(line) === false && line.length > 0)\n    .forEach((line) => {\n      const ch = line.trim()[0];\n      if (ch === '[') {\n        let name = line.substr(1, line.indexOf(']') - 1);\n        profile = {\n          name,\n          suffix: name === 'default' ? '' : name,\n          suffixWithLeadingSpace: name === 'default' ? '' : ' ' + name,\n          suffixWithLeadingHyphen: name === 'default' ? '' : '-' + name,\n          ligatures: [],\n        };\n        profiles.push(profile);\n      } else {\n        if (!profile) {\n          throw new Error('You must provide a profile name in []');\n        }\n        profile.ligatures.push(line);\n      }\n    });\n\n  return profiles;\n};\n\nconst filterLigatures = (name, mappings) => {\n  // loop through mappings and return if name applies or not\n  // skip if setting is !name\n  return mappings.filter((entry) => entry === '!' + name).length === 0;\n};\n\nconst mapLigatures = (name, mappings) => {\n  let mapping = { name, glyph: name };\n  mappings.forEach((entry) => {\n    const [val1, val2] = entry.split('=');\n    // handle lig=altliga\n    if (val1 === name) {\n      mapping.glyph = val2;\n    } else if (val2 === name) {\n      mapping.name = val1;\n    }\n  });\n  return mapping;\n};\n\nconst filterGlyphsExists = ({ glyph }) => {\n  const exists = fs.existsSync(`./ligature/${ligFontName}/glyphs/${glyph}.xml`);\n  return exists;\n};\n\nconst sortLigatures = (ligatures) => {\n  // sort by most glyphs then alphabetically\n  const sorted = ligatures\n    .map((ligature) => {\n      return { count: ligature.split('_').length + 1, ligature: ligature };\n    })\n    .sort(\n      (a, b) =>\n        -compareProperty(a.count, b.count) || // sort by count descending\n        compareProperty(a.ligature, b.ligature) // then by ligature alphabetically\n    )\n    .map((entry) => entry.ligature);\n  return sorted;\n};\n\nconst compareProperty = (a, b) => {\n  if (typeof a === 'number') {\n    return a || b ? (!a ? -1 : !b ? 1 : a === b ? 0 : a < b ? -1 : 1) : 0;\n  } else {\n    return a || b ? (!a ? -1 : !b ? 1 : a.localeCompare(b)) : 0;\n  }\n};\n\nconst loadXml = (name) => {\n  const fileName = `./ligature/${ligFontName}/${name}.xml`;\n  const xml = fs.readFileSync(fileName, 'utf-8');\n  return new DOMParser().parseFromString(xml);\n};\n\nconst processPatch = (name, patchFunc, dom, ligatures, profile, options) => {\n  console.log(`Patching ${name}`);\n  patchFunc(dom, ligatures, profile, options);\n};\n\nconst PlatformId = {\n  mac: 1,\n  win: 3,\n};\n\nconst NameId = {\n  familyName: 1,\n  fontStyle: 2,\n  uniqueId: 3,\n  fullName: 4,\n  version: 5,\n  postscriptName: 6,\n  windowsFamilyName: 16,\n  fontStyleName: 17,\n};\n\nconst patchNames = (dom, ligatures, profile) => {\n  const names = JSON.parse(\n    fs.readFileSync(`./ligature/${ligFontName}/names.json`)\n  );\n\n  const [name, style] = names.fontName.split('-');\n  const [familyStyle, fullNameStyleTry] = names.fontStyle.split(' ');\n\n  let fullNameStyleTemp;\n  if (fullNameStyleTry) {\n    fullNameStyleTemp = fullNameStyleTry;\n  } else {\n    fullNameStyleTemp = '';\n  }\n\n  const fullNameStyle = fullNameStyleTemp;\n  const fontName = `${name}${profile.suffixWithLeadingHyphen}-${style}`;\n  const familyNamePlat = `${names.familyName}${profile.suffixWithLeadingSpace}`;\n  const familyName = `${familyNamePlat} ${familyStyle}`;\n  const fullName = `${familyName} ${fullNameStyle}`;\n  const uniqueId = `${names.foundry}: ${fullName}: ${names.version}`;\n  // patch CFFFont\n  const cffFont = xpath.select('/ttFont/CFF/CFFFont', dom, true);\n\n  cffFont.setAttribute('name', ligFontName);\n  setAttribute(cffFont, 'FullName', 'value', fullName);\n  setAttribute(cffFont, 'FamilyName', 'value', familyNamePlat);\n\n  // update existing names with new names\n  // mac family name does not include style\n  updateName(PlatformId.mac, NameId.familyName, familyNamePlat);\n  updateName(PlatformId.mac, NameId.fontStyle, names.fontStyle);\n  updateName(PlatformId.mac, NameId.uniqueId, uniqueId);\n  updateName(PlatformId.mac, NameId.fullName, fullName);\n  updateName(PlatformId.mac, NameId.postscriptName, fontName);\n  updateName(PlatformId.mac, NameId.windowsFamilyName, familyNamePlat);\n  updateName(PlatformId.mac, NameId.fontStyleName, names.fontStyle);\n\n  // windows family name includes style\n  updateName(PlatformId.win, NameId.familyName, familyName);\n  updateName(PlatformId.win, NameId.fontStyle, names.windowsFontStyle);\n  updateName(PlatformId.win, NameId.uniqueId, uniqueId);\n  updateName(PlatformId.win, NameId.fullName, fullName);\n  updateName(PlatformId.win, NameId.postscriptName, fontName);\n  updateName(PlatformId.win, NameId.windowsFamilyName, familyNamePlat);\n  updateName(PlatformId.win, NameId.fontStyleName, names.fontStyle);\n};\n\nconst updateName = (platformId, nameId, value) => {\n  // search for namerecord in target dom and replace with this one or append node\n  const target = xpath.select(\n    `/ttFont/name/namerecord[@nameID=\"${nameId}\" and @platformID=\"${platformId}\"]`,\n    dom,\n    true\n  );\n  if (target) {\n    target.childNodes[0].textContent = value;\n  }\n};\n\nconst patchGlyphs = (dom, ligatures) => {\n  // get number of glyphs in target dom\n  const targetGlyphs = xpath.select('/ttFont/GlyphOrder', dom, true);\n  const glyphsCount = xpath.select('count(GlyphID)', targetGlyphs, true);\n\n  // only import glyphs specified\n  let n = glyphsCount;\n  // get ligature glyphs\n  ligatures.forEach((ligature) => {\n    targetGlyphs.appendChild(\n      createElementWithAttributes('GlyphID', { id: n++, name: ligature.glyph })\n    );\n  });\n  // update glyph count\n  setAttribute(dom, '/ttFont/maxp/numGlyphs', 'value', n);\n};\n\nconst patchGsub = (dom, ligatures, options) => {\n  // don't patch if no ligatures other than LIG\n  if (ligatures.length <= 1) return;\n  gsub.initGsubTables(dom, options);\n\n  ligatures.forEach((ligature) => {\n    // build gsub tables\n    gsub.buildGsubTables(dom, ligature, options);\n  });\n  gsub.finalizeGsubTables();\n};\n\nconst patchHmtx = (dom) => {\n  const mtxCount = xpath.select('count(/ttFont/hmtx/mtx)', dom, true);\n  setAttribute(dom, '/ttFont/hhea/numberOfHMetrics', 'value', mtxCount);\n\n  const configDom = loadXml('config');\n  copyConfigAttribute(dom, configDom, '/ttFont/head/xMin', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/head/yMin', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/head/xMax', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/head/yMax', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/hhea/advanceWidthMax', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/hhea/xMaxExtent', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/CFF/CFFFont/FontBBox', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/head/macStyle', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/OS_2/fsSelection', 'value');\n  copyConfigAttribute(dom, configDom, '/ttFont/OS_2/usWeightClass', 'value');\n  copyConfigAttribute(\n    dom,\n    configDom,\n    '/ttFont/CFF/CFFFont/Private/nominalWidthX',\n    'value'\n  );\n};\n\nconst patchCharStrings = (dom, ligatures) => {\n  // patch CFFFont\n  const cffFont = xpath.select('/ttFont/CFF/CFFFont', dom, true);\n  const targetHmtx = xpath.select('/ttFont/hmtx', dom, true);\n  const targetCmaps = xpath.select('/ttFont/cmap/cmap_format_4', dom);\n  const targetCharStrings = xpath.select('CharStrings', cffFont, true);\n  const targetSubrs = xpath.select(\n    '/ttFont/CFF/CFFFont/Private/Subrs',\n    dom,\n    true\n  );\n  const targetGsubrs = xpath.select('/ttFont/CFF/GlobalSubrs', dom, true);\n  const fingerprints = {};\n  ligatures.forEach((ligature) => {\n    console.log(\n      `* ${ligature.name}${\n        ligature.name === ligature.glyph ? '' : ' => ' + ligature.glyph\n      }`\n    );\n    const glyphDom = loadXml(`glyphs/${ligature.glyph}`).documentElement;\n    const node = xpath.select('/Glyph/CharString', glyphDom, true);\n    node.setAttribute('name', ligature.glyph);\n\n    const subrs = {\n      sourcePath: '/Glyph/Subrs',\n      target: targetSubrs,\n    };\n    const gsubrs = {\n      sourcePath: '/Glyph/GlobalSubrs',\n      target: targetGsubrs,\n    };\n\n    patchCharStringSubrs(glyphDom, node, fingerprints, subrs, gsubrs);\n\n    targetCharStrings.appendChild(node);\n    targetHmtx.appendChild(\n      createElementWithAttributes('mtx', {\n        name: ligature.glyph,\n        width: glyphDom.getAttribute('width'),\n        lsb: glyphDom.getAttribute('lsb'),\n      })\n    );\n    const code = glyphDom.getAttribute('code');\n    if (code) {\n      Array.from(targetCmaps).forEach((node) => {\n        node.appendChild(\n          createElementWithAttributes('map', {\n            code,\n            name: ligature.glyph,\n          })\n        );\n      });\n    }\n  });\n};\n\nconst patchCharStringSubrs = (glyphDom, node, fingerprints, subrs, gsubrs) => {\n  // check for callsubr/callgsubr\n\n  const lines = node.childNodes[0].textContent.split(/\\r|\\r\\n|\\n/g);\n  const newLines = [];\n  lines.forEach((line) => {\n    if (line.trim().length === 0) return;\n    const matches = line.match(/(.*?)\\{([0-9a-z]+)\\} (callsubr|callgsubr)$/);\n    if (matches != null) {\n      const { sourcePath, target } = matches[3] === 'callsubr' ? subrs : gsubrs;\n      const fingerprint = matches[2];\n      let newIndex = fingerprints[fingerprint];\n      if (!newIndex) {\n        const srcSubr = xpath.select(\n          `/${sourcePath}/CharString[@fingerprint=\"${fingerprint}\"]`,\n          glyphDom,\n          true\n        );\n\n        // append subr to target dom and get new index\n        newIndex = xpath.select('count(CharString)', target, true);\n\n        const clone = srcSubr.cloneNode(true);\n        clone.setAttribute('index', newIndex);\n        target.appendChild(clone);\n\n        // add new index to map and rewrite call\n        newIndex = newIndex - 107;\n        fingerprints[fingerprint] = newIndex;\n\n        // patch up source in case it also has any callsubrs\n        patchCharStringSubrs(glyphDom, clone, fingerprints, subrs, gsubrs);\n      }\n\n      // rewrite line with new subr index\n      line = `${matches[1]}${newIndex} ${matches[3]}`;\n    }\n    newLines.push(line);\n  });\n  node.childNodes[0].textContent = newLines.join(os.EOL);\n};\n\nconst setAttribute = (parent, path, name, value) => {\n  var node = xpath.select(path, parent, true);\n  node.setAttribute(name, value);\n};\n\nconst copyConfigAttribute = (dom, configDom, path, name) => {\n  const value = xpath.select(path, configDom, true).getAttribute(name);\n  setAttribute(dom, path, name, value);\n};\n\nconst createElementWithAttributes = (tagName, attributes) => {\n  const element = dom.createElement(tagName);\n  Object.entries(attributes).forEach((attribute) => {\n    element.setAttribute(attribute[0], attribute[1]);\n  });\n  return element;\n};\n\n//const dump = dom => console.log(serialize(dom));\nconst serialize = (dom) =>\n  new XMLSerializer().serializeToString(dom, false, (node) => {\n    if (node.nodeType === NodeType.TEXT_NODE) {\n      if (regExWhitespace.test(node.data)) return null;\n      const data = node.data\n        .split(/\\r|\\r\\n|\\n/g)\n        .filter((s) => /\\S+/.test(s))\n        .map((s) => s.replace(/^\\s+/g, ''))\n        .join(os.EOL);\n\n      return node.ownerDocument.createTextNode(data);\n    }\n    return node;\n  });\n\nmain();\n"
        },
        {
          "name": "ligature",
          "type": "tree",
          "content": null
        },
        {
          "name": "ligature_source",
          "type": "tree",
          "content": null
        },
        {
          "name": "newligatures-2.5.js",
          "type": "blob",
          "size": 0.7001953125,
          "content": "// new ligatures v2.5\n\n- colon_colon                         ::\n- exclam_exclam                       !!\n- semicolon_semicolon                 ;;\n- less_less                           <<\n- greater_greater                     >>\n- hyphen_equal (minus_equal)          -=\n- asterisk_equal                      *=\n- slash_equal                         /=\n- less_slash_greater                  </>\n- less_less_equal                     <<=\n- quotedbl_quotedbl_quotedbl          \"\"\"\n- quotesingle_quotesingle_quotesingle '''\n\n// new powerline glyphs\n\n- E0A1 (Powerline LN)                  \n- E0A2 (Powerline lock)                \n- E0B1 (Powerline left soft divider)   \n- E0B3 (Powerline right soft divider)  \n"
        },
        {
          "name": "newligatures.go",
          "type": "blob",
          "size": 0.62890625,
          "content": "// new ligatures\nless_slash.liga             </\nslash_greater.liga          />\nunderscore_underscore.liga  __\ncolon_equal.liga            :=\nw_w_w.liga\t\t\t\t\t\t\t\t\twww\nless_hyphen_greater.liga\t\t<->\n\n// alternate ligature glyphs\ngreater_equal.2.liga     >=\nless_equal.2.liga        <=\nequal_equal.2.liga       ==  // extended equal with gap\nequal_equal_equal.2.liga === // extended equal with gap\n\n// non-ligature glyphs (not by default, use profiles.ini)\npercent=percent.alt      % \t// open vs closed circles\n\n// power line glyphs\nuniE0A0 \t\t\t// Powerline branch\nuniE0B0 \t \t// Powerline right triangle\nuniE0B2 \t \t// Powerline left triangle\n"
        },
        {
          "name": "original",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 48.4384765625,
          "content": "{\n  \"name\": \"operator-mono-lig\",\n  \"version\": \"2.5.2\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"operator-mono-lig\",\n      \"version\": \"2.5.2\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"hash.js\": \"^1.1.7\",\n        \"xml-formatter\": \"^2.6.1\",\n        \"xmldom\": \"^0.6.0\",\n        \"xpath\": \"^0.0.32\"\n      },\n      \"devDependencies\": {\n        \"all-contributors-cli\": \"^6.26.1\",\n        \"prettier\": \"^2.8.8\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.17.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.17.2.tgz\",\n      \"integrity\": \"sha512-hzeyJyMA1YGdJTuWU0e/j4wKXrU4OMFvY2MSlaI9B7VQb0r5cxTE3EAIS2Q7Tn2RIcDkRvTA/v2JsAEhxe99uw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.13.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/all-contributors-cli\": {\n      \"version\": \"6.26.1\",\n      \"resolved\": \"https://registry.npmjs.org/all-contributors-cli/-/all-contributors-cli-6.26.1.tgz\",\n      \"integrity\": \"sha512-Ymgo3FJACRBEd1eE653FD1J/+uD0kqpUNYfr9zNC1Qby0LgbhDBzB3EF6uvkAbYpycStkk41J+0oo37Lc02yEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.7.6\",\n        \"async\": \"^3.1.0\",\n        \"chalk\": \"^4.0.0\",\n        \"didyoumean\": \"^1.2.1\",\n        \"inquirer\": \"^7.3.3\",\n        \"json-fixer\": \"^1.6.8\",\n        \"lodash\": \"^4.11.2\",\n        \"node-fetch\": \"^2.6.0\",\n        \"pify\": \"^5.0.0\",\n        \"yargs\": \"^15.0.1\"\n      },\n      \"bin\": {\n        \"all-contributors\": \"dist/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"optionalDependencies\": {\n        \"prettier\": \"^2\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/async\": {\n      \"version\": \"3.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.3.tgz\",\n      \"integrity\": \"sha512-spZRyzKL5l5BZQrr/6m/SqFdBN0q3OCI0f9rjfBzCMBIP4p75P620rR3gTmaksNOhmzgdxcaxdNfMy6anrbM0g==\",\n      \"dev\": true\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/chardet\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz\",\n      \"integrity\": \"sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==\",\n      \"dev\": true\n    },\n    \"node_modules/cli-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"restore-cursor\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cli-width\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-3.0.0.tgz\",\n      \"integrity\": \"sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz\",\n      \"integrity\": \"sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^6.2.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/decamelize\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n      \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\",\n      \"dev\": true\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/external-editor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz\",\n      \"integrity\": \"sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chardet\": \"^0.7.0\",\n        \"iconv-lite\": \"^0.4.24\",\n        \"tmp\": \"^0.0.33\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/figures\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-3.2.0.tgz\",\n      \"integrity\": \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/hash.js\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz\",\n      \"integrity\": \"sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"node_modules/inquirer\": {\n      \"version\": \"7.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/inquirer/-/inquirer-7.3.3.tgz\",\n      \"integrity\": \"sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.1.0\",\n        \"cli-cursor\": \"^3.1.0\",\n        \"cli-width\": \"^3.0.0\",\n        \"external-editor\": \"^3.0.3\",\n        \"figures\": \"^3.0.0\",\n        \"lodash\": \"^4.17.19\",\n        \"mute-stream\": \"0.0.8\",\n        \"run-async\": \"^2.4.0\",\n        \"rxjs\": \"^6.6.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"through\": \"^2.3.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/json-fixer\": {\n      \"version\": \"1.6.13\",\n      \"resolved\": \"https://registry.npmjs.org/json-fixer/-/json-fixer-1.6.13.tgz\",\n      \"integrity\": \"sha512-DKQ71M+0uwAG3QsUkeVgh6XREw/OkpnTfHfM+sdmxRjHvYZ8PlcMVF4ibsHQ1ckR63NROs68qUr1I0u6yPVePQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.14.6\",\n        \"chalk\": \"^4.1.2\",\n        \"pegjs\": \"^0.10.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\n      \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\"\n    },\n    \"node_modules/mute-stream\": {\n      \"version\": \"0.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz\",\n      \"integrity\": \"sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==\",\n      \"dev\": true\n    },\n    \"node_modules/node-fetch\": {\n      \"version\": \"2.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz\",\n      \"integrity\": \"sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"whatwg-url\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"4.x || >=6.0.0\"\n      },\n      \"peerDependencies\": {\n        \"encoding\": \"^0.1.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"encoding\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/p-try\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pegjs\": {\n      \"version\": \"0.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/pegjs/-/pegjs-0.10.0.tgz\",\n      \"integrity\": \"sha1-z4uvrm7d/0tafvsYUmnqr0YQ3b0=\",\n      \"dev\": true,\n      \"bin\": {\n        \"pegjs\": \"bin/pegjs\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-5.0.0.tgz\",\n      \"integrity\": \"sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/prettier\": {\n      \"version\": \"2.8.8\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-2.8.8.tgz\",\n      \"integrity\": \"sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==\",\n      \"dev\": true,\n      \"bin\": {\n        \"prettier\": \"bin-prettier.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/prettier/prettier?sponsor=1\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.13.9\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz\",\n      \"integrity\": \"sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA==\",\n      \"dev\": true\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-main-filename\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz\",\n      \"integrity\": \"sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==\",\n      \"dev\": true\n    },\n    \"node_modules/restore-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"onetime\": \"^5.1.0\",\n        \"signal-exit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/run-async\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz\",\n      \"integrity\": \"sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/rxjs\": {\n      \"version\": \"6.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz\",\n      \"integrity\": \"sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"npm\": \">=2.0.0\"\n      }\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"node_modules/set-blocking\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\n      \"integrity\": \"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\",\n      \"dev\": true\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\",\n      \"dev\": true\n    },\n    \"node_modules/tmp\": {\n      \"version\": \"0.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz\",\n      \"integrity\": \"sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"os-tmpdir\": \"~1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6.0\"\n      }\n    },\n    \"node_modules/tr46\": {\n      \"version\": \"0.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz\",\n      \"integrity\": \"sha1-gYT9NH2snNwYWZLzpmIuFLnZq2o=\",\n      \"dev\": true\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz\",\n      \"integrity\": \"sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz\",\n      \"integrity\": \"sha1-JFNCdeKnvGvnvIZhHMFq4KVlSHE=\",\n      \"dev\": true\n    },\n    \"node_modules/whatwg-url\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz\",\n      \"integrity\": \"sha1-lmRU6HZUYuN2RNNib2dCzotwll0=\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tr46\": \"~0.0.3\",\n        \"webidl-conversions\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/which-module\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz\",\n      \"integrity\": \"sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n      \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/xml-formatter\": {\n      \"version\": \"2.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/xml-formatter/-/xml-formatter-2.6.1.tgz\",\n      \"integrity\": \"sha512-dOiGwoqm8y22QdTNI7A+N03tyVfBlQ0/oehAzxIZtwnFAHGeSlrfjF73YQvzSsa/Kt6+YZasKsrdu6OIpuBggw==\",\n      \"dependencies\": {\n        \"xml-parser-xo\": \"^3.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/xml-parser-xo\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/xml-parser-xo/-/xml-parser-xo-3.2.0.tgz\",\n      \"integrity\": \"sha512-8LRU6cq+d7mVsoDaMhnkkt3CTtAs4153p49fRo+HIB3I1FD1o5CeXRjRH29sQevIfVJIcPjKSsPU/+Ujhq09Rg==\",\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/xmldom\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/xmldom/-/xmldom-0.6.0.tgz\",\n      \"integrity\": \"sha512-iAcin401y58LckRZ0TkI4k0VSM1Qg0KGSc3i8rU+xrxe19A/BN1zHyVSJY7uoutVlaTSzYyk/v5AmkewAP7jtg==\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/xpath\": {\n      \"version\": \"0.0.32\",\n      \"resolved\": \"https://registry.npmjs.org/xpath/-/xpath-0.0.32.tgz\",\n      \"integrity\": \"sha512-rxMJhSIoiO8vXcWvSifKqhvV96GjiD5wYb8/QHdoRyQvraTpp4IEv944nhGausZZ3u7dhQXteZuZbaqfpB7uYw==\",\n      \"engines\": {\n        \"node\": \">=0.6.0\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz\",\n      \"integrity\": \"sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==\",\n      \"dev\": true\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"15.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz\",\n      \"integrity\": \"sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^6.0.0\",\n        \"decamelize\": \"^1.2.0\",\n        \"find-up\": \"^4.1.0\",\n        \"get-caller-file\": \"^2.0.1\",\n        \"require-directory\": \"^2.1.1\",\n        \"require-main-filename\": \"^2.0.0\",\n        \"set-blocking\": \"^2.0.0\",\n        \"string-width\": \"^4.2.0\",\n        \"which-module\": \"^2.0.0\",\n        \"y18n\": \"^4.0.0\",\n        \"yargs-parser\": \"^18.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"18.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz\",\n      \"integrity\": \"sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase\": \"^5.0.0\",\n        \"decamelize\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    }\n  },\n  \"dependencies\": {\n    \"@babel/runtime\": {\n      \"version\": \"7.17.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.17.2.tgz\",\n      \"integrity\": \"sha512-hzeyJyMA1YGdJTuWU0e/j4wKXrU4OMFvY2MSlaI9B7VQb0r5cxTE3EAIS2Q7Tn2RIcDkRvTA/v2JsAEhxe99uw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"regenerator-runtime\": \"^0.13.4\"\n      }\n    },\n    \"all-contributors-cli\": {\n      \"version\": \"6.26.1\",\n      \"resolved\": \"https://registry.npmjs.org/all-contributors-cli/-/all-contributors-cli-6.26.1.tgz\",\n      \"integrity\": \"sha512-Ymgo3FJACRBEd1eE653FD1J/+uD0kqpUNYfr9zNC1Qby0LgbhDBzB3EF6uvkAbYpycStkk41J+0oo37Lc02yEw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/runtime\": \"^7.7.6\",\n        \"async\": \"^3.1.0\",\n        \"chalk\": \"^4.0.0\",\n        \"didyoumean\": \"^1.2.1\",\n        \"inquirer\": \"^7.3.3\",\n        \"json-fixer\": \"^1.6.8\",\n        \"lodash\": \"^4.11.2\",\n        \"node-fetch\": \"^2.6.0\",\n        \"pify\": \"^5.0.0\",\n        \"prettier\": \"^2\",\n        \"yargs\": \"^15.0.1\"\n      }\n    },\n    \"ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-fest\": \"^0.21.3\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"async\": {\n      \"version\": \"3.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.3.tgz\",\n      \"integrity\": \"sha512-spZRyzKL5l5BZQrr/6m/SqFdBN0q3OCI0f9rjfBzCMBIP4p75P620rR3gTmaksNOhmzgdxcaxdNfMy6anrbM0g==\",\n      \"dev\": true\n    },\n    \"camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"dev\": true\n    },\n    \"chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      }\n    },\n    \"chardet\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz\",\n      \"integrity\": \"sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==\",\n      \"dev\": true\n    },\n    \"cli-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"restore-cursor\": \"^3.1.0\"\n      }\n    },\n    \"cli-width\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-3.0.0.tgz\",\n      \"integrity\": \"sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==\",\n      \"dev\": true\n    },\n    \"cliui\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz\",\n      \"integrity\": \"sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^6.2.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"decamelize\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n      \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",\n      \"dev\": true\n    },\n    \"didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\",\n      \"dev\": true\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n      \"dev\": true\n    },\n    \"external-editor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz\",\n      \"integrity\": \"sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==\",\n      \"dev\": true,\n      \"requires\": {\n        \"chardet\": \"^0.7.0\",\n        \"iconv-lite\": \"^0.4.24\",\n        \"tmp\": \"^0.0.33\"\n      }\n    },\n    \"figures\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-3.2.0.tgz\",\n      \"integrity\": \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"escape-string-regexp\": \"^1.0.5\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true\n    },\n    \"hash.js\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz\",\n      \"integrity\": \"sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==\",\n      \"requires\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"inquirer\": {\n      \"version\": \"7.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/inquirer/-/inquirer-7.3.3.tgz\",\n      \"integrity\": \"sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.1.0\",\n        \"cli-cursor\": \"^3.1.0\",\n        \"cli-width\": \"^3.0.0\",\n        \"external-editor\": \"^3.0.3\",\n        \"figures\": \"^3.0.0\",\n        \"lodash\": \"^4.17.19\",\n        \"mute-stream\": \"0.0.8\",\n        \"run-async\": \"^2.4.0\",\n        \"rxjs\": \"^6.6.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"through\": \"^2.3.6\"\n      }\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true\n    },\n    \"json-fixer\": {\n      \"version\": \"1.6.13\",\n      \"resolved\": \"https://registry.npmjs.org/json-fixer/-/json-fixer-1.6.13.tgz\",\n      \"integrity\": \"sha512-DKQ71M+0uwAG3QsUkeVgh6XREw/OkpnTfHfM+sdmxRjHvYZ8PlcMVF4ibsHQ1ckR63NROs68qUr1I0u6yPVePQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/runtime\": \"^7.14.6\",\n        \"chalk\": \"^4.1.2\",\n        \"pegjs\": \"^0.10.0\"\n      }\n    },\n    \"locate-path\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-locate\": \"^4.1.0\"\n      }\n    },\n    \"lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true\n    },\n    \"minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\n      \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\"\n    },\n    \"mute-stream\": {\n      \"version\": \"0.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz\",\n      \"integrity\": \"sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==\",\n      \"dev\": true\n    },\n    \"node-fetch\": {\n      \"version\": \"2.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz\",\n      \"integrity\": \"sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"whatwg-url\": \"^5.0.0\"\n      }\n    },\n    \"onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"mimic-fn\": \"^2.1.0\"\n      }\n    },\n    \"os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\",\n      \"dev\": true\n    },\n    \"p-limit\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-try\": \"^2.0.0\"\n      }\n    },\n    \"p-locate\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-limit\": \"^2.2.0\"\n      }\n    },\n    \"p-try\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n      \"dev\": true\n    },\n    \"path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true\n    },\n    \"pegjs\": {\n      \"version\": \"0.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/pegjs/-/pegjs-0.10.0.tgz\",\n      \"integrity\": \"sha1-z4uvrm7d/0tafvsYUmnqr0YQ3b0=\",\n      \"dev\": true\n    },\n    \"pify\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-5.0.0.tgz\",\n      \"integrity\": \"sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==\",\n      \"dev\": true\n    },\n    \"prettier\": {\n      \"version\": \"2.8.8\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-2.8.8.tgz\",\n      \"integrity\": \"sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==\",\n      \"dev\": true\n    },\n    \"regenerator-runtime\": {\n      \"version\": \"0.13.9\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz\",\n      \"integrity\": \"sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA==\",\n      \"dev\": true\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\n      \"dev\": true\n    },\n    \"require-main-filename\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz\",\n      \"integrity\": \"sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==\",\n      \"dev\": true\n    },\n    \"restore-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"onetime\": \"^5.1.0\",\n        \"signal-exit\": \"^3.0.2\"\n      }\n    },\n    \"run-async\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz\",\n      \"integrity\": \"sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==\",\n      \"dev\": true\n    },\n    \"rxjs\": {\n      \"version\": \"6.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz\",\n      \"integrity\": \"sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"tslib\": \"^1.9.0\"\n      }\n    },\n    \"safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"set-blocking\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\n      \"integrity\": \"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\",\n      \"dev\": true\n    },\n    \"signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n      \"dev\": true\n    },\n    \"string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^5.0.1\"\n      }\n    },\n    \"supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^4.0.0\"\n      }\n    },\n    \"through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\",\n      \"dev\": true\n    },\n    \"tmp\": {\n      \"version\": \"0.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz\",\n      \"integrity\": \"sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"os-tmpdir\": \"~1.0.2\"\n      }\n    },\n    \"tr46\": {\n      \"version\": \"0.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz\",\n      \"integrity\": \"sha1-gYT9NH2snNwYWZLzpmIuFLnZq2o=\",\n      \"dev\": true\n    },\n    \"tslib\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz\",\n      \"integrity\": \"sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==\",\n      \"dev\": true\n    },\n    \"type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true\n    },\n    \"webidl-conversions\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz\",\n      \"integrity\": \"sha1-JFNCdeKnvGvnvIZhHMFq4KVlSHE=\",\n      \"dev\": true\n    },\n    \"whatwg-url\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz\",\n      \"integrity\": \"sha1-lmRU6HZUYuN2RNNib2dCzotwll0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"tr46\": \"~0.0.3\",\n        \"webidl-conversions\": \"^3.0.0\"\n      }\n    },\n    \"which-module\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz\",\n      \"integrity\": \"sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=\",\n      \"dev\": true\n    },\n    \"wrap-ansi\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n      \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      }\n    },\n    \"xml-formatter\": {\n      \"version\": \"2.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/xml-formatter/-/xml-formatter-2.6.1.tgz\",\n      \"integrity\": \"sha512-dOiGwoqm8y22QdTNI7A+N03tyVfBlQ0/oehAzxIZtwnFAHGeSlrfjF73YQvzSsa/Kt6+YZasKsrdu6OIpuBggw==\",\n      \"requires\": {\n        \"xml-parser-xo\": \"^3.2.0\"\n      }\n    },\n    \"xml-parser-xo\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/xml-parser-xo/-/xml-parser-xo-3.2.0.tgz\",\n      \"integrity\": \"sha512-8LRU6cq+d7mVsoDaMhnkkt3CTtAs4153p49fRo+HIB3I1FD1o5CeXRjRH29sQevIfVJIcPjKSsPU/+Ujhq09Rg==\"\n    },\n    \"xmldom\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/xmldom/-/xmldom-0.6.0.tgz\",\n      \"integrity\": \"sha512-iAcin401y58LckRZ0TkI4k0VSM1Qg0KGSc3i8rU+xrxe19A/BN1zHyVSJY7uoutVlaTSzYyk/v5AmkewAP7jtg==\"\n    },\n    \"xpath\": {\n      \"version\": \"0.0.32\",\n      \"resolved\": \"https://registry.npmjs.org/xpath/-/xpath-0.0.32.tgz\",\n      \"integrity\": \"sha512-rxMJhSIoiO8vXcWvSifKqhvV96GjiD5wYb8/QHdoRyQvraTpp4IEv944nhGausZZ3u7dhQXteZuZbaqfpB7uYw==\"\n    },\n    \"y18n\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz\",\n      \"integrity\": \"sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"15.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz\",\n      \"integrity\": \"sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^6.0.0\",\n        \"decamelize\": \"^1.2.0\",\n        \"find-up\": \"^4.1.0\",\n        \"get-caller-file\": \"^2.0.1\",\n        \"require-directory\": \"^2.1.1\",\n        \"require-main-filename\": \"^2.0.0\",\n        \"set-blocking\": \"^2.0.0\",\n        \"string-width\": \"^4.2.0\",\n        \"which-module\": \"^2.0.0\",\n        \"y18n\": \"^4.0.0\",\n        \"yargs-parser\": \"^18.1.2\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"18.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz\",\n      \"integrity\": \"sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^5.0.0\",\n        \"decamelize\": \"^1.2.0\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6376953125,
          "content": "{\n  \"name\": \"operator-mono-lig\",\n  \"version\": \"2.5.2\",\n  \"description\": \"Patch Operator Mono font to include ligatures\",\n  \"repository\": \"github:kiliman/operator-mono-lig\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"contributors:add\": \"all-contributors add\",\n    \"contributors:generate\": \"all-contributors generate\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"kiliman@gmail.com\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"hash.js\": \"^1.1.7\",\n    \"xml-formatter\": \"^2.6.1\",\n    \"xmldom\": \"^0.6.0\",\n    \"xpath\": \"^0.0.32\"\n  },\n  \"devDependencies\": {\n    \"all-contributors-cli\": \"^6.26.1\",\n    \"prettier\": \"^2.8.8\"\n  }\n}\n"
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 26.970703125,
          "content": "lockfileVersion: '6.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\ndependencies:\n  canvas:\n    specifier: ^2.11.2\n    version: 2.11.2\n  hash.js:\n    specifier: ^1.1.7\n    version: 1.1.7\n  xml-formatter:\n    specifier: ^2.6.1\n    version: 2.6.1\n  xmldom:\n    specifier: ^0.6.0\n    version: 0.6.0\n  xpath:\n    specifier: ^0.0.32\n    version: 0.0.32\n\ndevDependencies:\n  all-contributors-cli:\n    specifier: ^6.26.1\n    version: 6.26.1\n  prettier:\n    specifier: ^2.8.8\n    version: 2.8.8\n\npackages:\n\n  /@babel/runtime@7.22.15:\n    resolution: {integrity: sha512-T0O+aa+4w0u06iNmapipJXMV4HoUir03hpx3/YqXXhu9xim3w+dVphjFWl1OH8NbZHw5Lbm9k45drDkgq2VNNA==}\n    engines: {node: '>=6.9.0'}\n    dependencies:\n      regenerator-runtime: 0.14.0\n    dev: true\n\n  /@mapbox/node-pre-gyp@1.0.11:\n    resolution: {integrity: sha512-Yhlar6v9WQgUp/He7BdgzOz8lqMQ8sU+jkCq7Wx8Myc5YFJLbEe7lgui/V7G1qB1DJykHSGwreceSaD60Y0PUQ==}\n    hasBin: true\n    dependencies:\n      detect-libc: 2.0.2\n      https-proxy-agent: 5.0.1\n      make-dir: 3.1.0\n      node-fetch: 2.7.0\n      nopt: 5.0.0\n      npmlog: 5.0.1\n      rimraf: 3.0.2\n      semver: 7.5.4\n      tar: 6.2.0\n    transitivePeerDependencies:\n      - encoding\n      - supports-color\n    dev: false\n\n  /abbrev@1.1.1:\n    resolution: {integrity: sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==}\n    dev: false\n\n  /agent-base@6.0.2:\n    resolution: {integrity: sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==}\n    engines: {node: '>= 6.0.0'}\n    dependencies:\n      debug: 4.3.4\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /all-contributors-cli@6.26.1:\n    resolution: {integrity: sha512-Ymgo3FJACRBEd1eE653FD1J/+uD0kqpUNYfr9zNC1Qby0LgbhDBzB3EF6uvkAbYpycStkk41J+0oo37Lc02yEw==}\n    engines: {node: '>=4'}\n    hasBin: true\n    dependencies:\n      '@babel/runtime': 7.22.15\n      async: 3.2.4\n      chalk: 4.1.2\n      didyoumean: 1.2.2\n      inquirer: 7.3.3\n      json-fixer: 1.6.15\n      lodash: 4.17.21\n      node-fetch: 2.7.0\n      pify: 5.0.0\n      yargs: 15.4.1\n    optionalDependencies:\n      prettier: 2.8.8\n    transitivePeerDependencies:\n      - encoding\n    dev: true\n\n  /ansi-escapes@4.3.2:\n    resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}\n    engines: {node: '>=8'}\n    dependencies:\n      type-fest: 0.21.3\n    dev: true\n\n  /ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  /ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n    dependencies:\n      color-convert: 2.0.1\n    dev: true\n\n  /aproba@2.0.0:\n    resolution: {integrity: sha512-lYe4Gx7QT+MKGbDsA+Z+he/Wtef0BiwDOlK/XkBrdfsh9J/jPPXbX0tE9x9cl27Tmu5gg3QUbUrQYa/y+KOHPQ==}\n    dev: false\n\n  /are-we-there-yet@2.0.0:\n    resolution: {integrity: sha512-Ci/qENmwHnsYo9xKIcUJN5LeDKdJ6R1Z1j9V/J5wyq8nh/mYPEpIKJbBZXtZjG04HiK7zV/p6Vs9952MrMeUIw==}\n    engines: {node: '>=10'}\n    dependencies:\n      delegates: 1.0.0\n      readable-stream: 3.6.2\n    dev: false\n\n  /async@3.2.4:\n    resolution: {integrity: sha512-iAB+JbDEGXhyIUavoDl9WP/Jj106Kz9DEn1DPgYw5ruDn0e3Wgi3sKFm55sASdGBNOQB8F59d9qQ7deqrHA8wQ==}\n    dev: true\n\n  /balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n    dev: false\n\n  /brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n    dev: false\n\n  /camelcase@5.3.1:\n    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}\n    engines: {node: '>=6'}\n    dev: true\n\n  /canvas@2.11.2:\n    resolution: {integrity: sha512-ItanGBMrmRV7Py2Z+Xhs7cT+FNt5K0vPL4p9EZ/UX/Mu7hFbkxSjKF2KVtPwX7UYWp7dRKnrTvReflgrItJbdw==}\n    engines: {node: '>=6'}\n    requiresBuild: true\n    dependencies:\n      '@mapbox/node-pre-gyp': 1.0.11\n      nan: 2.17.0\n      simple-get: 3.1.1\n    transitivePeerDependencies:\n      - encoding\n      - supports-color\n    dev: false\n\n  /chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n    dev: true\n\n  /chardet@0.7.0:\n    resolution: {integrity: sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==}\n    dev: true\n\n  /chownr@2.0.0:\n    resolution: {integrity: sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==}\n    engines: {node: '>=10'}\n    dev: false\n\n  /cli-cursor@3.1.0:\n    resolution: {integrity: sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==}\n    engines: {node: '>=8'}\n    dependencies:\n      restore-cursor: 3.1.0\n    dev: true\n\n  /cli-width@3.0.0:\n    resolution: {integrity: sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==}\n    engines: {node: '>= 10'}\n    dev: true\n\n  /cliui@6.0.0:\n    resolution: {integrity: sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==}\n    dependencies:\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wrap-ansi: 6.2.0\n    dev: true\n\n  /color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n    dependencies:\n      color-name: 1.1.4\n    dev: true\n\n  /color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n    dev: true\n\n  /color-support@1.1.3:\n    resolution: {integrity: sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==}\n    hasBin: true\n    dev: false\n\n  /concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n    dev: false\n\n  /console-control-strings@1.1.0:\n    resolution: {integrity: sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==}\n    dev: false\n\n  /debug@4.3.4:\n    resolution: {integrity: sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n    dependencies:\n      ms: 2.1.2\n    dev: false\n\n  /decamelize@1.2.0:\n    resolution: {integrity: sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /decompress-response@4.2.1:\n    resolution: {integrity: sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==}\n    engines: {node: '>=8'}\n    dependencies:\n      mimic-response: 2.1.0\n    dev: false\n\n  /delegates@1.0.0:\n    resolution: {integrity: sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==}\n    dev: false\n\n  /detect-libc@2.0.2:\n    resolution: {integrity: sha512-UX6sGumvvqSaXgdKGUsgZWqcUyIXZ/vZTrlRT/iobiKhGL0zL4d3osHj3uqllWJK+i+sixDS/3COVEOFbupFyw==}\n    engines: {node: '>=8'}\n    dev: false\n\n  /didyoumean@1.2.2:\n    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}\n    dev: true\n\n  /emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  /escape-string-regexp@1.0.5:\n    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}\n    engines: {node: '>=0.8.0'}\n    dev: true\n\n  /external-editor@3.1.0:\n    resolution: {integrity: sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==}\n    engines: {node: '>=4'}\n    dependencies:\n      chardet: 0.7.0\n      iconv-lite: 0.4.24\n      tmp: 0.0.33\n    dev: true\n\n  /figures@3.2.0:\n    resolution: {integrity: sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==}\n    engines: {node: '>=8'}\n    dependencies:\n      escape-string-regexp: 1.0.5\n    dev: true\n\n  /find-up@4.1.0:\n    resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}\n    engines: {node: '>=8'}\n    dependencies:\n      locate-path: 5.0.0\n      path-exists: 4.0.0\n    dev: true\n\n  /fs-minipass@2.1.0:\n    resolution: {integrity: sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==}\n    engines: {node: '>= 8'}\n    dependencies:\n      minipass: 3.3.6\n    dev: false\n\n  /fs.realpath@1.0.0:\n    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}\n    dev: false\n\n  /gauge@3.0.2:\n    resolution: {integrity: sha512-+5J6MS/5XksCuXq++uFRsnUd7Ovu1XenbeuIuNRJxYWjgQbPuFhT14lAvsWfqfAmnwluf1OwMjz39HjfLPci0Q==}\n    engines: {node: '>=10'}\n    dependencies:\n      aproba: 2.0.0\n      color-support: 1.1.3\n      console-control-strings: 1.1.0\n      has-unicode: 2.0.1\n      object-assign: 4.1.1\n      signal-exit: 3.0.7\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wide-align: 1.1.5\n    dev: false\n\n  /get-caller-file@2.0.5:\n    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}\n    engines: {node: 6.* || 8.* || >= 10.*}\n    dev: true\n\n  /glob@7.2.3:\n    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}\n    dependencies:\n      fs.realpath: 1.0.0\n      inflight: 1.0.6\n      inherits: 2.0.4\n      minimatch: 3.1.2\n      once: 1.4.0\n      path-is-absolute: 1.0.1\n    dev: false\n\n  /has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /has-unicode@2.0.1:\n    resolution: {integrity: sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==}\n    dev: false\n\n  /hash.js@1.1.7:\n    resolution: {integrity: sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==}\n    dependencies:\n      inherits: 2.0.4\n      minimalistic-assert: 1.0.1\n    dev: false\n\n  /https-proxy-agent@5.0.1:\n    resolution: {integrity: sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==}\n    engines: {node: '>= 6'}\n    dependencies:\n      agent-base: 6.0.2\n      debug: 4.3.4\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /iconv-lite@0.4.24:\n    resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      safer-buffer: 2.1.2\n    dev: true\n\n  /inflight@1.0.6:\n    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}\n    dependencies:\n      once: 1.4.0\n      wrappy: 1.0.2\n    dev: false\n\n  /inherits@2.0.4:\n    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}\n    dev: false\n\n  /inquirer@7.3.3:\n    resolution: {integrity: sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==}\n    engines: {node: '>=8.0.0'}\n    dependencies:\n      ansi-escapes: 4.3.2\n      chalk: 4.1.2\n      cli-cursor: 3.1.0\n      cli-width: 3.0.0\n      external-editor: 3.1.0\n      figures: 3.2.0\n      lodash: 4.17.21\n      mute-stream: 0.0.8\n      run-async: 2.4.1\n      rxjs: 6.6.7\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      through: 2.3.8\n    dev: true\n\n  /is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  /json-fixer@1.6.15:\n    resolution: {integrity: sha512-TuDuZ5KrgyjoCIppdPXBMqiGfota55+odM+j2cQ5rt/XKyKmqGB3Whz1F8SN8+60yYGy/Nu5lbRZ+rx8kBIvBw==}\n    engines: {node: '>=10'}\n    dependencies:\n      '@babel/runtime': 7.22.15\n      chalk: 4.1.2\n      pegjs: 0.10.0\n    dev: true\n\n  /locate-path@5.0.0:\n    resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}\n    engines: {node: '>=8'}\n    dependencies:\n      p-locate: 4.1.0\n    dev: true\n\n  /lodash@4.17.21:\n    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}\n    dev: true\n\n  /lru-cache@6.0.0:\n    resolution: {integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==}\n    engines: {node: '>=10'}\n    dependencies:\n      yallist: 4.0.0\n    dev: false\n\n  /make-dir@3.1.0:\n    resolution: {integrity: sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==}\n    engines: {node: '>=8'}\n    dependencies:\n      semver: 6.3.1\n    dev: false\n\n  /mimic-fn@2.1.0:\n    resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}\n    engines: {node: '>=6'}\n    dev: true\n\n  /mimic-response@2.1.0:\n    resolution: {integrity: sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==}\n    engines: {node: '>=8'}\n    dev: false\n\n  /minimalistic-assert@1.0.1:\n    resolution: {integrity: sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==}\n    dev: false\n\n  /minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n    dependencies:\n      brace-expansion: 1.1.11\n    dev: false\n\n  /minipass@3.3.6:\n    resolution: {integrity: sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==}\n    engines: {node: '>=8'}\n    dependencies:\n      yallist: 4.0.0\n    dev: false\n\n  /minipass@5.0.0:\n    resolution: {integrity: sha512-3FnjYuehv9k6ovOEbyOswadCDPX1piCfhV8ncmYtHOjuPwylVWsghTLo7rabjC3Rx5xD4HDx8Wm1xnMF7S5qFQ==}\n    engines: {node: '>=8'}\n    dev: false\n\n  /minizlib@2.1.2:\n    resolution: {integrity: sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==}\n    engines: {node: '>= 8'}\n    dependencies:\n      minipass: 3.3.6\n      yallist: 4.0.0\n    dev: false\n\n  /mkdirp@1.0.4:\n    resolution: {integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==}\n    engines: {node: '>=10'}\n    hasBin: true\n    dev: false\n\n  /ms@2.1.2:\n    resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}\n    dev: false\n\n  /mute-stream@0.0.8:\n    resolution: {integrity: sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==}\n    dev: true\n\n  /nan@2.17.0:\n    resolution: {integrity: sha512-2ZTgtl0nJsO0KQCjEpxcIr5D+Yv90plTitZt9JBfQvVJDS5seMl3FOvsh3+9CoYWXf/1l5OaZzzF6nDm4cagaQ==}\n    dev: false\n\n  /node-fetch@2.7.0:\n    resolution: {integrity: sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==}\n    engines: {node: 4.x || >=6.0.0}\n    peerDependencies:\n      encoding: ^0.1.0\n    peerDependenciesMeta:\n      encoding:\n        optional: true\n    dependencies:\n      whatwg-url: 5.0.0\n\n  /nopt@5.0.0:\n    resolution: {integrity: sha512-Tbj67rffqceeLpcRXrT7vKAN8CwfPeIBgM7E6iBkmKLV7bEMwpGgYLGv0jACUsECaa/vuxP0IjEont6umdMgtQ==}\n    engines: {node: '>=6'}\n    hasBin: true\n    dependencies:\n      abbrev: 1.1.1\n    dev: false\n\n  /npmlog@5.0.1:\n    resolution: {integrity: sha512-AqZtDUWOMKs1G/8lwylVjrdYgqA4d9nu8hc+0gzRxlDb1I10+FHBGMXs6aiQHFdCUUlqH99MUMuLfzWDNDtfxw==}\n    dependencies:\n      are-we-there-yet: 2.0.0\n      console-control-strings: 1.1.0\n      gauge: 3.0.2\n      set-blocking: 2.0.0\n    dev: false\n\n  /object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /once@1.4.0:\n    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}\n    dependencies:\n      wrappy: 1.0.2\n    dev: false\n\n  /onetime@5.1.2:\n    resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}\n    engines: {node: '>=6'}\n    dependencies:\n      mimic-fn: 2.1.0\n    dev: true\n\n  /os-tmpdir@1.0.2:\n    resolution: {integrity: sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /p-limit@2.3.0:\n    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}\n    engines: {node: '>=6'}\n    dependencies:\n      p-try: 2.2.0\n    dev: true\n\n  /p-locate@4.1.0:\n    resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}\n    engines: {node: '>=8'}\n    dependencies:\n      p-limit: 2.3.0\n    dev: true\n\n  /p-try@2.2.0:\n    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}\n    engines: {node: '>=6'}\n    dev: true\n\n  /path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /path-is-absolute@1.0.1:\n    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /pegjs@0.10.0:\n    resolution: {integrity: sha512-qI5+oFNEGi3L5HAxDwN2LA4Gg7irF70Zs25edhjld9QemOgp0CbvMtbFcMvFtEo1OityPrcCzkQFB8JP/hxgow==}\n    engines: {node: '>=0.10'}\n    hasBin: true\n    dev: true\n\n  /pify@5.0.0:\n    resolution: {integrity: sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==}\n    engines: {node: '>=10'}\n    dev: true\n\n  /prettier@2.8.8:\n    resolution: {integrity: sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==}\n    engines: {node: '>=10.13.0'}\n    hasBin: true\n    dev: true\n\n  /readable-stream@3.6.2:\n    resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}\n    engines: {node: '>= 6'}\n    dependencies:\n      inherits: 2.0.4\n      string_decoder: 1.3.0\n      util-deprecate: 1.0.2\n    dev: false\n\n  /regenerator-runtime@0.14.0:\n    resolution: {integrity: sha512-srw17NI0TUWHuGa5CFGGmhfNIeja30WMBfbslPNhf6JrqQlLN5gcrvig1oqPxiVaXb0oW0XRKtH6Nngs5lKCIA==}\n    dev: true\n\n  /require-directory@2.1.1:\n    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /require-main-filename@2.0.0:\n    resolution: {integrity: sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==}\n    dev: true\n\n  /restore-cursor@3.1.0:\n    resolution: {integrity: sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==}\n    engines: {node: '>=8'}\n    dependencies:\n      onetime: 5.1.2\n      signal-exit: 3.0.7\n    dev: true\n\n  /rimraf@3.0.2:\n    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}\n    hasBin: true\n    dependencies:\n      glob: 7.2.3\n    dev: false\n\n  /run-async@2.4.1:\n    resolution: {integrity: sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==}\n    engines: {node: '>=0.12.0'}\n    dev: true\n\n  /rxjs@6.6.7:\n    resolution: {integrity: sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==}\n    engines: {npm: '>=2.0.0'}\n    dependencies:\n      tslib: 1.14.1\n    dev: true\n\n  /safe-buffer@5.2.1:\n    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}\n    dev: false\n\n  /safer-buffer@2.1.2:\n    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}\n    dev: true\n\n  /semver@6.3.1:\n    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}\n    hasBin: true\n    dev: false\n\n  /semver@7.5.4:\n    resolution: {integrity: sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==}\n    engines: {node: '>=10'}\n    hasBin: true\n    dependencies:\n      lru-cache: 6.0.0\n    dev: false\n\n  /set-blocking@2.0.0:\n    resolution: {integrity: sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==}\n\n  /signal-exit@3.0.7:\n    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}\n\n  /simple-concat@1.0.1:\n    resolution: {integrity: sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==}\n    dev: false\n\n  /simple-get@3.1.1:\n    resolution: {integrity: sha512-CQ5LTKGfCpvE1K0n2us+kuMPbk/q0EKl82s4aheV9oXjFEz6W/Y7oQFVJuU6QG77hRT4Ghb5RURteF5vnWjupA==}\n    dependencies:\n      decompress-response: 4.2.1\n      once: 1.4.0\n      simple-concat: 1.0.1\n    dev: false\n\n  /string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  /string_decoder@1.3.0:\n    resolution: {integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==}\n    dependencies:\n      safe-buffer: 5.2.1\n    dev: false\n\n  /strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n    dependencies:\n      ansi-regex: 5.0.1\n\n  /supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n    dependencies:\n      has-flag: 4.0.0\n    dev: true\n\n  /tar@6.2.0:\n    resolution: {integrity: sha512-/Wo7DcT0u5HUV486xg675HtjNd3BXZ6xDbzsCUZPt5iw8bTQ63bP0Raut3mvro9u+CUyq7YQd8Cx55fsZXxqLQ==}\n    engines: {node: '>=10'}\n    dependencies:\n      chownr: 2.0.0\n      fs-minipass: 2.1.0\n      minipass: 5.0.0\n      minizlib: 2.1.2\n      mkdirp: 1.0.4\n      yallist: 4.0.0\n    dev: false\n\n  /through@2.3.8:\n    resolution: {integrity: sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==}\n    dev: true\n\n  /tmp@0.0.33:\n    resolution: {integrity: sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==}\n    engines: {node: '>=0.6.0'}\n    dependencies:\n      os-tmpdir: 1.0.2\n    dev: true\n\n  /tr46@0.0.3:\n    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}\n\n  /tslib@1.14.1:\n    resolution: {integrity: sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==}\n    dev: true\n\n  /type-fest@0.21.3:\n    resolution: {integrity: sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==}\n    engines: {node: '>=10'}\n    dev: true\n\n  /util-deprecate@1.0.2:\n    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n    dev: false\n\n  /webidl-conversions@3.0.1:\n    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}\n\n  /whatwg-url@5.0.0:\n    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}\n    dependencies:\n      tr46: 0.0.3\n      webidl-conversions: 3.0.1\n\n  /which-module@2.0.1:\n    resolution: {integrity: sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==}\n    dev: true\n\n  /wide-align@1.1.5:\n    resolution: {integrity: sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==}\n    dependencies:\n      string-width: 4.2.3\n    dev: false\n\n  /wrap-ansi@6.2.0:\n    resolution: {integrity: sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==}\n    engines: {node: '>=8'}\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n    dev: true\n\n  /wrappy@1.0.2:\n    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}\n    dev: false\n\n  /xml-formatter@2.6.1:\n    resolution: {integrity: sha512-dOiGwoqm8y22QdTNI7A+N03tyVfBlQ0/oehAzxIZtwnFAHGeSlrfjF73YQvzSsa/Kt6+YZasKsrdu6OIpuBggw==}\n    engines: {node: '>= 10'}\n    dependencies:\n      xml-parser-xo: 3.2.0\n    dev: false\n\n  /xml-parser-xo@3.2.0:\n    resolution: {integrity: sha512-8LRU6cq+d7mVsoDaMhnkkt3CTtAs4153p49fRo+HIB3I1FD1o5CeXRjRH29sQevIfVJIcPjKSsPU/+Ujhq09Rg==}\n    engines: {node: '>= 10'}\n    dev: false\n\n  /xmldom@0.6.0:\n    resolution: {integrity: sha512-iAcin401y58LckRZ0TkI4k0VSM1Qg0KGSc3i8rU+xrxe19A/BN1zHyVSJY7uoutVlaTSzYyk/v5AmkewAP7jtg==}\n    engines: {node: '>=10.0.0'}\n    dev: false\n\n  /xpath@0.0.32:\n    resolution: {integrity: sha512-rxMJhSIoiO8vXcWvSifKqhvV96GjiD5wYb8/QHdoRyQvraTpp4IEv944nhGausZZ3u7dhQXteZuZbaqfpB7uYw==}\n    engines: {node: '>=0.6.0'}\n    dev: false\n\n  /y18n@4.0.3:\n    resolution: {integrity: sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==}\n    dev: true\n\n  /yallist@4.0.0:\n    resolution: {integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==}\n    dev: false\n\n  /yargs-parser@18.1.3:\n    resolution: {integrity: sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==}\n    engines: {node: '>=6'}\n    dependencies:\n      camelcase: 5.3.1\n      decamelize: 1.2.0\n    dev: true\n\n  /yargs@15.4.1:\n    resolution: {integrity: sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==}\n    engines: {node: '>=8'}\n    dependencies:\n      cliui: 6.0.0\n      decamelize: 1.2.0\n      find-up: 4.1.0\n      get-caller-file: 2.0.5\n      require-directory: 2.1.1\n      require-main-filename: 2.0.0\n      set-blocking: 2.0.0\n      string-width: 4.2.3\n      which-module: 2.0.1\n      y18n: 4.0.3\n      yargs-parser: 18.1.3\n    dev: true\n"
        },
        {
          "name": "sample.go",
          "type": "blob",
          "size": 0.09765625,
          "content": "func main() {\n\tfor i := 0; i <= 9; i++ {\n\t\tf := count(fact(gen(i)))\n\t\tfmt.Println(i, \"! =\", f)\n\t}\n}\n"
        },
        {
          "name": "sample.html",
          "type": "blob",
          "size": 0.201171875,
          "content": "<style>\n  .block__element--modifier {\n    background-color: blue;\n    width: 100%;\n  }\n</style>\n\n<!-- html comment a => b && c++ -->\n\n<div class=\"header\">\n  <a href=\"http://localhost\">Click Here</a>\n</div>\n"
        },
        {
          "name": "sample.js",
          "type": "blob",
          "size": 0.734375,
          "content": "// @ts-nocheck\n\nconst func = (a, b, c, d, e, f, s, n) => {\n// this is a comment\n    if (a++ && b-- || c >= d || e <= f) {\n    }\n    if (s === 'string' && n !== 999) {\n    }\n    if (a == b && c != d)\n    a ?? b\n    a <- b <-- c <== d\n    a |> b\n    a <| b |> c -> d ==> e\n\n    // if (a++ && b-- || c >= d || e <= f) {\n    // }\n    // if (s === 'string' && n !== 999) {\n    // }\n    // if (a == b && c != d)\n    // a ?? b\n    // a <- b <-- c <== d\n    // a |> b\n    // a <| b |> c -> d ==> e\n\n  // italic ligatures\n  // != == >= <= -> => ==>\n  // === !== && || ++ --\n  // a <- b <-- c <== d\n  // a <| b |> c -> d ==> e\n  // a ?? b\n  // >=>  <=<\n  // <=>\n  // >>=  =<<\n\n    a >=> b <=< b\n    a <=> b\n    a >>=  =<<\n\n  }\n\n  <!-- test -->\n\n  :: << >> *= /=\n"
        }
      ]
    }
  ]
}