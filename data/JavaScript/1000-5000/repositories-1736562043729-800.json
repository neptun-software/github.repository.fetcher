{
  "metadata": {
    "timestamp": 1736562043729,
    "page": 800,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tmcw/big",
      "stars": 3294,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.2177734375,
          "content": "module.exports = {\n  env: {\n    browser: true,\n    es6: true\n  },\n  extends: \"eslint:recommended\",\n  parserOptions: {\n    ecmaVersion: 2018\n  },\n  rules: {\n    \"no-console\": 0,\n    \"prefer-const\": 0,\n    \"no-var\": 2\n  }\n};\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.111328125,
          "content": "# Change Log\n\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n\n# [3.6.0](https://github.com/tmcw/big/compare/v3.5.1...v3.6.0) (2019-02-22)\n\n\n### Bug Fixes\n\n* **package:** update marked to version 0.6.0 ([160f23e](https://github.com/tmcw/big/commit/160f23e))\n\n\n### Features\n\n* background image preloading ([9a3bb9e](https://github.com/tmcw/big/commit/9a3bb9e))\n\n\n\n<a name=\"3.5.1\"></a>\n## [3.5.1](https://github.com/tmcw/big/compare/v3.5.0...v3.5.1) (2018-11-04)\n\n\n### Bug Fixes\n\n* **package:** update get-port to version 4.0.0 ([#163](https://github.com/tmcw/big/issues/163)) ([69dfede](https://github.com/tmcw/big/commit/69dfede))\n* **package:** update marked to version 0.5.0 ([#166](https://github.com/tmcw/big/issues/166)) ([c9220b9](https://github.com/tmcw/big/commit/c9220b9))\n* **package:** update mustache to version 3.0.0 ([#170](https://github.com/tmcw/big/issues/170)) ([e05bc39](https://github.com/tmcw/big/commit/e05bc39))\n\n\n\n<a name=\"3.5.0\"></a>\n# [3.5.0](https://github.com/tmcw/big/compare/v3.4.1...v3.5.0) (2018-07-31)\n\n\n### Features\n\n* **compose:** Make theme configurable with a --theme or -t CLI flag ([8435450](https://github.com/tmcw/big/commit/8435450))\n\n\n\n<a name=\"3.4.1\"></a>\n## [3.4.1](https://github.com/tmcw/big/compare/v3.4.0...v3.4.1) (2018-07-20)\n\n\n### Bug Fixes\n\n* main export ([#162](https://github.com/tmcw/big/issues/162)) ([7dfd427](https://github.com/tmcw/big/commit/7dfd427))\n\n\n\n<a name=\"3.4.0\"></a>\n# [3.4.0](https://github.com/tmcw/big/compare/v3.3.0...v3.4.0) (2018-06-10)\n\n\n### Bug Fixes\n\n* **package:** update marked to version 0.4.0 ([#150](https://github.com/tmcw/big/issues/150)) ([1e2ede6](https://github.com/tmcw/big/commit/1e2ede6))\n\n\n### Features\n\n* **jump:** Better navigation in jump mode ([#151](https://github.com/tmcw/big/issues/151)) ([6491c07](https://github.com/tmcw/big/commit/6491c07)), closes [#138](https://github.com/tmcw/big/issues/138)\n\n\n\n<a name=\"3.3.0\"></a>\n# [3.3.0](https://github.com/tmcw/big/compare/v3.2.3...v3.3.0) (2018-05-29)\n\n\n### Features\n\n* Listen for connections on the specified port ([#156](https://github.com/tmcw/big/issues/156)) ([3d54f90](https://github.com/tmcw/big/commit/3d54f90))\n\n\n\n<a name=\"3.2.3\"></a>\n## [3.2.3](https://github.com/tmcw/big/compare/v3.2.2...v3.2.3) (2018-05-16)\n\n\n### Bug Fixes\n\n* Add page breaks in print mode ([#149](https://github.com/tmcw/big/issues/149)) ([f89c9fd](https://github.com/tmcw/big/commit/f89c9fd))\n\n\n\n<a name=\"3.2.2\"></a>\n## [3.2.2](https://github.com/tmcw/big/compare/v3.2.1...v3.2.2) (2018-05-12)\n\n\n### Bug Fixes\n\n* **package:** update cpy to version 7.0.0 ([#146](https://github.com/tmcw/big/issues/146)) ([d96a22c](https://github.com/tmcw/big/commit/d96a22c))\n\n\n\n<a name=\"3.2.1\"></a>\n## [3.2.1](https://github.com/tmcw/big/compare/v3.2.0...v3.2.1) (2018-04-15)\n\n\n### Bug Fixes\n\n* **package:** update cpy to version 6.0.0 ([#107](https://github.com/tmcw/big/issues/107)) ([22b2c41](https://github.com/tmcw/big/commit/22b2c41))\n* **package:** update ecstatic to version 3.0.0 ([#103](https://github.com/tmcw/big/issues/103)) ([d4612b4](https://github.com/tmcw/big/commit/d4612b4))\n* **package:** update ecstatic to version 3.1.1 ([#115](https://github.com/tmcw/big/issues/115)) ([e62bb04](https://github.com/tmcw/big/commit/e62bb04)), closes [#114](https://github.com/tmcw/big/issues/114)\n* Use event.key instead of event.which ([#131](https://github.com/tmcw/big/issues/131)) ([41e46d4](https://github.com/tmcw/big/commit/41e46d4)), closes [#129](https://github.com/tmcw/big/issues/129)\n\n\n\n<a name=\"3.2.0\"></a>\n# [3.2.0](https://github.com/tmcw/big/compare/v3.2.0-0...v3.2.0) (2017-08-04)\n\n\n\n<a name=\"3.2.0-0\"></a>\n# [3.2.0-0](https://github.com/tmcw/big/compare/v3.1.0...v3.2.0-0) (2017-08-04)\n\n\n### Features\n\n* command-line interface for generating presentations from markdown ([c5e3aa7](https://github.com/tmcw/big/commit/c5e3aa7))\n\n\n\n<a name=\"3.3.0-0\"></a>\n# [3.3.0-0](https://github.com/tmcw/big/compare/v3.1.0...v3.3.0-0) (2017-08-04)\n\n\n### Features\n\n* command-line interface for generating presentations from markdown ([c5e3aa7](https://github.com/tmcw/big/commit/c5e3aa7))\n\n\n\n<a name=\"3.1.0\"></a>\n# [3.1.0](https://github.com/tmcw/big/compare/v2.0.3...v3.1.0) (2017-06-01)\n\n\n### Bug Fixes\n\n* Remove unused groupEnd argument ([f37e9fd](https://github.com/tmcw/big/commit/f37e9fd))\n\n\n### Features\n\n* apply data-bodyclass also on print/jump views ([#80](https://github.com/tmcw/big/issues/80)) ([52e6a31](https://github.com/tmcw/big/commit/52e6a31))\n* Make it beautiful ([fd5d14f](https://github.com/tmcw/big/commit/fd5d14f))\n\n\n\n<a name=\"3.1.0-alpha.0\"></a>\n# [3.1.0-alpha.0](https://github.com/tmcw/big/compare/v2.0.3...v3.1.0-alpha.0) (2017-06-01)\n\n\n### Bug Fixes\n\n* Remove unused groupEnd argument ([f37e9fd](https://github.com/tmcw/big/commit/f37e9fd))\n\n\n### Features\n\n* apply data-bodyclass also on print/jump views ([#80](https://github.com/tmcw/big/issues/80)) ([52e6a31](https://github.com/tmcw/big/commit/52e6a31))\n* Make it beautiful ([97c5972](https://github.com/tmcw/big/commit/97c5972))\n\n\n\n## 3.0.0\n\n* **modes**: hit t, p, and j for talk, presentation, and jump modes\n* **tooling**: now has cli tools to init, serve, and offline-pack presentations\n* **breaking change**: background images are now specified with the data-background-image\n  property, rather than an img tag\n* **code style**: now uses normal style, longer, more commented code\n\n## 2.0.3\n\n* Nested `<div>` elements are now allowed in slides.\n\n## 2.0.2\n\n* Notes in `<notes>` are no longer included in the title of slides.\n\n## 2.0.1\n\n* Fixes an issue where clicking on a link in a slide advanced the slide\n  as well as clicked the link.\n\n## 2.0.0\n\n* [63](https://github.com/tmcw/big/pull/63): a big performance improvement!\n  Flipping between slides is now much faster.\n\n## 1.0.0\n\n* [50](https://github.com/tmcw/big/issues/50) Fixed IE9 and earlier support by accessing data attributes with `getAttribute`\n  rather than the `dataset` object.\n* [53](https://github.com/tmcw/big/issues/53) **Speakers notes**: adding\n  notes in a `<notes>` element will show those notes in your developer\n  console when you visit that slide.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.138671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at tom@macwright.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.515625,
          "content": "# Blue Oak Model License\n\nVersion 1.0.0\n\n## Purpose\n\nThis license gives everyone as much permission to work with\nthis software as possible, while protecting contributors\nfrom liability.\n\n## Acceptance\n\nIn order to receive this license, you must agree to its\nrules.  The rules of this license are both obligations\nunder that agreement and conditions to your license.\nYou must not do anything with this software that triggers\na rule that you cannot or will not follow.\n\n## Copyright\n\nEach contributor licenses you to do everything with this\nsoftware that would otherwise infringe that contributor's\ncopyright in it.\n\n## Notices\n\nYou must ensure that everyone who gets a copy of\nany part of this software from you, with or without\nchanges, also gets the text of this license or a link to\n<https://blueoakcouncil.org/license/1.0.0>.\n\n## Excuse\n\nIf anyone notifies you in writing that you have not\ncomplied with [Notices](#notices), you can keep your\nlicense by taking all practical steps to comply within 30\ndays after the notice.  If you do not do so, your license\nends immediately.\n\n## Patent\n\nEach contributor licenses you to do everything with this\nsoftware that would otherwise infringe any patent claims\nthey can license or become able to license.\n\n## Reliability\n\nNo contributor can revoke this license.\n\n## No Liability\n\n***As far as the law allows, this software comes as is,\nwithout any warranty or condition, and no contributor\nwill be liable to anyone for any damages related to this\nsoftware or this license, under any kind of legal claim.***\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.4609375,
          "content": "# Big\n\n<p align=\"center\">\n  <img width=\"540\" src='.github/logo.png' />\n</p>\n\n<p align=\"center\">\n  <strong>Big.</strong> The antidote to your presentation procrastination.\n</p>\n\nA presentation system that works great for creative, hurried people making focused presentations. Stop tweaking fonts and filling slides with text. Big is a configuration-free system that naturally encourages good style.\n\n- [Features](#features)\n- [Quickstart installation: Glitch](#quickstart-installation-glitch)\n- [Alternative method: Local installation](#alternative-method-local-installation)\n- [Writing a presentation](#writing-a-presentation)\n- [Giving presentations](#giving-presentations)\n- [Using Big](#using-big)\n  - [Layouts & Images](#layouts--images)\n  - [Customizing the aspect ratio](#customizing-the-aspect-ratio)\n  - [Avoiding line breaks](#avoiding-line-breaks)\n  - [Auto advancing slides](#auto-advancing-slides)\n  - [Showing code](#showing-code)\n  - [Backgrounds & body classes](#backgrounds--body-classes)\n  - [Themes](#themes)\n\n## Features\n\n- The entire system is about 16kb\n- Slide layouts based on CSS Grid\n- Speakers notes appear in your developer console, which you can put on your other screen\n- Themes are just CSS, and easy to make\n\n## Quickstart installation: Glitch\n\nThe absolute fastest way to get started is with Glitch. Just click the link below, and you’ll get the freshest version of Big, in a Glitch app that you can edit and publish.\n\n<!-- Remix Button --><a href=\"https://glitch.com/edit/#!/remix/tmcw-big\">  <img src=\"https://cdn.glitch.com/2bdfb3f8-05ef-4035-a06e-2043962a3a13%2Fremix%402x.png?1513093958726\" alt=\"remix this\" height=\"33\"></a>\n\nWith Glitch, your presentation will be online and open source by default. You can download it and continue to work on it offline, or if you want to start offline by default and have the files locally, follow the alternative method below 👇\n\n## Alternative method: Local installation\n\nIf you use NPM, the fastest way to get a copy of Big is this way:\n\n```bash\n$ npx degit tmcw/big\n```\n\nPreview the presentation locally by double-clicking on `index.html`. Create a repository with it to share the presentation with Github Pages, or post the files to any other hosting service. You’ll want to eventually use a real server instead of opening the file - to do that, install `serve` and run it:\n\n```bash\n$ npm install -g serve\n$ serve\n```\n\n## Writing a presentation\n\nBig presentations are webpages: slides are `div` elements, and any text styling or additional elements are addable by using HTML. The text in each div is sized to fit the screen. A slide can be as simple as:\n\n```html\n<div>Big</div>\n```\n\nIf you want speakers notes - notes that you can see on your laptop screen but aren't shown on the main projector - you can use a `<notes>` element:\n\n```html\n<div>\n  Citrus\n  <notes>Aren't oranges, lemons, and limes great?</notes>\n</div>\n```\n\nOpen your [developer console](http://debugbrowser.com/), and you'll see your speaker notes in it when you visit that slide! In most browsers, the console is detachable, so you can move it to a different screen or window when you're giving the presentation.\n\nThat's all you need to start writing presentations!\n\n## Giving presentations\n\nYou can advance slides the usual way, by clicking them. You can also use the left & right arrow keys, and the up and down arrow keys. On touch devices, you can navigate forward by tapping and also navigate forward and backwards by swiping.\n\n![](./.github/big-modes.png)\n\nBig also has three modes if you want to quickly jump to a slide, or print a presentation. You can switch between modes by hitting the `t`, `p`, and `j` keys.\n\n* **t**alk is the default mode. Slides are shown one at a time.\n* **p**rint: is useful for print output or as an overview: it'll include\n  two slides per printed page, and shows speakers notes along with slides\n* **j**ump: Shows many slides per page, useful for quickly finding a slide and 'jumping' to it. When you're in jump mode, you can use the arrow keys to quickly select a slide and hit Enter to jump to that slide, or click the\n  slide you want.\n\n## Using Big\n\nBig is designed to be simple, so if you just want to give a [Takahashi](https://en.wikipedia.org/wiki/Takahashi_method) style presentation with just text, you don't need to read any further! But it can also go far beyond the basics.\n\n### Layouts & Images\n\nLet's say you want to add some pictures to a presentation. If you just want the slide to _be_ an image, you can just make it the only thing on the slide:\n\n```html\n<div>\n  <img src='airplane.gif'/>\n</div>\n```\n\nAnd Big will appropriate size and place the image in the center.\n\nIf you want an image and text, you'll need a little more infrastructure: this is where _layouts_ come in. See, the idea of Big is that it sizes text as big as it can be. This has the effect that if you include something else on a slide, like an image, then it'll be squeezed out by ever-expanding text. So if you want to include an image and some text, you'll need to set some ground rules for how much space each is permitted to take up. Luckily, this also lets us do flexible layouts of image and text - you can choose how they're arranged, and they'll gleefully comply.\n\n```html\n<div\n  class='layout'\n  style='grid-template-columns: 1fr;grid-template-rows:75% 25%;'>\n  <img src='airplane.gif'/>\n  <div>A longer description!</div>\n</div>\n```\n\nSo you'll see that we have two new attributes for this laid-out slide:\n\n`class='layout'` triggers a few styles from `big.css` that give the slide [grid layout](https://developer.mozilla.org/en-US/docs/Web/CSS/grid), make its subsections [flexbox](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox), and tweaks how images work. For all slides that use layout, they'll use the layout class.\n\nThe second bit - the `style` attribute, is where the customization comes in. The MDN documentation for [grid-template-rows](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows) and [grid-template-columns](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns) is where to start if you want to learn this inside & out, but for those that tend to learn from examples, here are some!\n\n**50% / 50% split columns: picture on the left, text on the right**\n\n```html\n<div class=layout style='grid-template-columns: 50% 50%;'>\n  <img src='airplane.gif'/>\n  <div>A longer description!</div>\n</div>\n```\n\nGrids read from left to right, top to bottom, unless you customize that with extra CSS. You'll need to specify at least grid-template-columns or grid-template-rows to divide up a cell: if you specify columns, it'll be divided horizontally, if rows, vertically.\n\n**75% image on the top, 25% text on the bottom**\n\n```html\n<div class='layout' style='grid-template-rows:75% 25%;'>\n  <img src='airplane.gif'/>\n  <div>A longer description!</div>\n</div>\n```\n\nThis slide will be laid out vertically, with the image taking up 75% of the vertical space, text 25%.\n\n***Three rows of a 25% image and 75% text***\n\n```html\n<div\n  class=layout\n  style='grid-template-columns: 25% 75%;grid-template-rows:repeat(3, 30%);'>\n  <img src='airplane.gif'/>\n  <div>Yes</div>\n  <img src='airplane.gif'/>\n  <div>No</div>\n  <img src='airplane.gif'/>\n  <div>Just right, a lot of text goes here.</div>\n</div>\n```\n\n### Customizing the aspect ratio\n\nTo keep presentations uniform across devices, Big keeps the aspect ratio of presentations constant by default: by default, presentations are 4:3 aspect ratio.\n\nYou can customize the aspect ratio by setting a `BIG_ASPECT_RATIO` variable _before_ Big is included on a page:\n\n```html\n<script>BIG_ASPECT_RATIO=2;</script>\n<script src='big.js'></script>\n```\n\nYou can also turn this feature off, by setting `BIG_ASPECT_RATIO` to `false`, which will let presentations occupy the aspect ratio of the device they're displayed on:\n\n```html\n<script>BIG_ASPECT_RATIO=false;</script>\n<script src='big.js'></script>\n```\n\n### Avoiding line breaks\n\nBy default, Big will wrap lines of text. Sometimes you don't want this to happen, if you have some text that would look odd wrapped. In this case, you can use the `nowrap` class to keep some text from wrapping.\n\n```html\n<div>\n  beyond the <code>for</code> loop\n  <br />\n  <small class=nowrap>@tmcw / Tom MacWright</small>\n</div>\n```\n\n### Auto advancing slides\n\nSometimes you'll give presentations like [PechaKucha](https://en.wikipedia.org/wiki/PechaKucha) and [Ignite](https://en.wikipedia.org/wiki/Ignite_(event)) involve auto-advancing slides. You can achieve this by adding a `data-time-to-next` attributes to slides: this will cause  them to auto-advance after a specific number of seconds:\n\n```html\n<div data-time-to-next=20>\n  My sales pitch in 20 seconds\n</div>\n```\n\n### Showing code\n\nThere are many ways to do code highlighting in presentations. My personal\nphilosophy is that you should never show more than 8 lines of code\non a slide, and instead of using traditional semantic highlighting, you should\nmanually add emphasis to focus points in the code.\n\n```html\n<div>\n    problem one: make some animals rock\n    <pre>var animals = <em>['cats', 'dogs']</em>;</pre>\n</div>\n```\n\n```css\npre {\n  margin:0;\n  padding:0.2em;\n  background:#fff;\n  color:#000;\n  font-weight:normal;\n}\n\npre em {\n  color:#000;\n  background:yellow;\n}\n```\n\nBut if you want traditional code highlighting, you can include [highlight.js](https://highlightjs.org/) to do just that. You'll want to include [the library](https://highlightjs.org/download/), and use `hljs.initHighlightingOnLoad();` like [in their usage instructions](https://highlightjs.org/usage/).\n\n### Backgrounds & body classes\n\nYou might want to customize the class & style of the body element for a single slide. For example, maybe you want to change the background of the full page. You can do this with two attributes: `data-body-style` and `data-body-class`:\n\n```html\n<div data-body-style=\"background-image:url(airplane.gif)\">\n  <div>Slide will have an airplane background</div>\n</div>\n```\n\n### Themes\n\nBig presentations are hackable, so you can design yours from scratch, or by customizing one of the default themes, but there are also a few default themes so that you can get going with a solid aesthetic right off the bat.\n\nAt the very least, themes are CSS files. You can pick a theme by picking one in the `themes` directory. Bundled with Big are these themes:\n\n- **dark**: near-black background and near-white text, this one is my go-to for most presentations that rely on underpowered projectors.\n- **light**: like dark, but flipped.\n- **white**: instead of tastefully off-white and off-black, this theme uses stark, literal black & white colors.\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 1.8896484375,
          "content": "# Upgrading to Big 4\n\nChange for the better. Big 4 is a lot different.\n\n## No more NPM\n\nBig used to provide a bunch of utilities: big-compose so you could write presentations in Markdown, big-offline so you could make them work offline, big-init to start presentations, big-serve so you could serve them. I removed all of these.\n\n**I removed big-compose** because I never used it, and it was never possible to do everything in Markdown, especially not layouts. Big is opinionated software: in particular, my opinions, and those I acquire from smart people along the way. One of those opinions is that HTML’s a pretty good language and if you aren't writing a lot, it’s perfectly usable as a markup language for text.\n\n**big-offline** was cool, but I recommend using your browser’s “save webpage” feature instead, which produces a more efficient result and you already have in your web browser. I really recommend making your presentations work offline by default, too, by uploading images and keeping all your resources close.\n\n**big-serve** was just a HTTP server. I don't underestimate the difficulty of setting up an HTML server for a lot of folks, but those folks are better served by double-clicking the `index.html` file, and local servers are really good in other projects, like the `serve` module.\n\n**big-init** should just be a download. Now it is.\n\n## No more audio tracks\n\nIt was a really cool feature, but I have a suspicion – and hard data — that almost nobody used it. Big is about minimalism, and niche features cut against that.\n\n## No more Rubik font\n\nThe San Francisco font included with macOS is really good. Web fonts just rub me the wrong way, and I’ve tried really hard to avoid them in new projects – they’re big binary dependencies that make everything more complex. You can really use web fonts in your presentations, and please do if you find one you love, but it wasn’t a good default."
        },
        {
          "name": "big.css",
          "type": "blob",
          "size": 1.74609375,
          "content": "html {\n  height: 100%;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n}\n\nh1,\nh2,\nh3,\np {\n  margin: 0;\n}\n\nem {\n  font-style: normal;\n}\n\n.nowrap {\n  white-space: nowrap;\n}\n\n* {\n  box-sizing: border-box;\n}\n\ndiv.slide-container {\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\ndiv.slide {\n  cursor: pointer;\n  cursor: hand;\n}\n\ndiv.imageText {\n  text-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n}\n\n/* normally not good, but ok in context of full screen directional navigation */\n.talk-mode .slide:focus {\n  outline: 0;\n}\n\nbody.talk-mode {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\nbody.print-mode {\n  background: #fff;\n  color: #000;\n  font-weight: normal;\n  padding: 0px;\n}\n\nbody.print-mode div.sub-container {\n  padding: 10px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  break-inside: avoid;\n}\n\nul.notes-list {\n  display: inline-block;\n  float: left;\n  vertical-align: top;\n}\n\nbody.print-mode div.slide-container {\n  border: 1px solid #000;\n}\n\nbody.jump-mode {\n  padding: 10px;\n}\n\nbody.jump-mode div.sub-container {\n  display: inline-block;\n  vertical-align: top;\n  padding: 2px;\n}\n\nbody.jump-mode div.slide-container {\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  cursor: pointer;\n}\n\nbody.jump-mode div.slide-container:hover {\n  border: 1px solid rgba(255, 255, 255, 0.8);\n}\n\n.layout {\n  display: grid;\n}\n\n.layout div {\n  display: flex;\n  align-items: center;\n}\n\n.layout img {\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n}\n\ndiv.slide > img:only-child,\ndiv.slide > canvas:only-child,\ndiv.slide > video:only-child {\n  width: 100%;\n}\n"
        },
        {
          "name": "big.js",
          "type": "blob",
          "size": 7.0419921875,
          "content": "let ASPECT_RATIO = window.BIG_ASPECT_RATIO === undefined ? 1.6 : window.BIG_ASPECT_RATIO;\n\nfunction parseHash() {\n  return parseInt(window.location.hash.substring(1), 10);\n}\n\nfunction emptyNode(node) {\n  while (node.hasChildNodes()) node.removeChild(node.lastChild);\n}\n\nfunction ce(type, className = \"\") {\n  return Object.assign(document.createElement(type), { className });\n}\n\naddEventListener(\"load\", () => {\n  let slideDivs = Array.from(document.querySelectorAll(\"body > div\"));\n  let pc = document.body.appendChild(ce(\"div\", \"presentation-container\"));\n  slideDivs = slideDivs.map((slide, _i) => {\n    slide.setAttribute(\"tabindex\", 0);\n    slide.classList.add(\"slide\");\n    let sc = pc.appendChild(ce(\"div\", \"slide-container\"));\n    sc.appendChild(slide);\n    return Object.assign(sc, {\n      _notes: Array.from(slide.querySelectorAll(\"notes\"), noteElement => {\n        noteElement.parentNode.removeChild(noteElement);\n        return noteElement.innerHTML.trim();\n      }),\n      _i\n    });\n  });\n  let timeoutInterval,\n    { body } = document,\n    {\n      className: initialBodyClass,\n      style: { cssText: initialBodyStyle }\n    } = body,\n    big = (window.big = {\n      current: -1,\n      mode: \"talk\",\n      length: slideDivs.length,\n      forward,\n      reverse,\n      go\n    });\n\n  function forward() {\n    go(big.current + 1);\n  }\n\n  function reverse() {\n    go(big.current - 1);\n  }\n\n  function go(n, force) {\n    n = Math.max(0, Math.min(big.length - 1, n));\n    if (!force && big.current === n) return;\n    big.current = n;\n    let sc = slideDivs[n],\n      slideDiv = sc.firstChild;\n    if (sc._notes.length) {\n      console.group(n);\n      for (let note of sc._notes) console.log(\"%c%s\", \"padding:5px;font-family:serif;font-size:18px;line-height:150%;\", note);\n      console.groupEnd();\n    }\n    for (let slide of slideDivs) slide.style.display = slide._i === n ? \"\" : \"none\";\n    body.className = `talk-mode ${slideDiv.dataset.bodyClass || \"\"} ${initialBodyClass}`;\n    body.style.cssText = `${initialBodyStyle} ${slideDiv.dataset.bodyStyle || \"\"}`;\n    window.clearInterval(timeoutInterval);\n    if (slideDiv.dataset.timeToNext) timeoutInterval = window.setTimeout(forward, parseFloat(slideDiv.dataset.timeToNext) * 1000);\n    onResize();\n    if (window.location.hash !== n) window.location.hash = n;\n    document.title = slideDiv.textContent;\n  }\n\n  function resizeTo(sc, width, height) {\n    let slideDiv = sc.firstChild,\n      padding = Math.min(width * 0.04),\n      fontSize = height;\n    sc.style.width = `${width}px`;\n    sc.style.height = `${height}px`;\n    slideDiv.style.padding = `${padding}px`;\n    if (getComputedStyle(slideDiv).display === \"grid\") slideDiv.style.height = `${height - padding * 2}px`;\n    for (let step of [100, 50, 10, 2]) {\n      for (; fontSize > 0; fontSize -= step) {\n        slideDiv.style.fontSize = `${fontSize}px`;\n        if (\n          slideDiv.scrollWidth <= width &&\n          slideDiv.offsetHeight <= height &&\n          Array.from(slideDiv.querySelectorAll(\"div\")).every(elem => elem.scrollWidth <= elem.clientWidth && elem.scrollHeight <= elem.clientHeight)\n        ) {\n          break;\n        }\n      }\n      fontSize += step;\n    }\n  }\n\n  function onPrint() {\n    if (big.mode === \"print\") return;\n    body.className = `print-mode ${initialBodyClass}`;\n    body.style.cssText = initialBodyStyle;\n    emptyNode(pc);\n    for (let sc of slideDivs) {\n      let subContainer = pc.appendChild(ce(\"div\", \"sub-container\")),\n        sbc = subContainer.appendChild(ce(\"div\", sc.firstChild.dataset.bodyClass || \"\"));\n      sbc.appendChild(sc);\n      sbc.style.cssText = sc.dataset.bodyStyle || \"\";\n      sc.style.display = \"flex\";\n      resizeTo(sc, 512, 320);\n      if (sc._notes.length) continue;\n      let notesUl = subContainer.appendChild(ce(\"ul\", \"notes-list\"));\n      for (let note of sc._notes) {\n        let li = notesUl.appendChild(ce(\"li\"));\n        li.innerText = note;\n      }\n    }\n    big.mode = \"print\";\n  }\n\n  function onTalk(i) {\n    if (big.mode === \"talk\") return;\n    big.mode = \"talk\";\n    body.className = `talk-mode ${initialBodyClass}`;\n    emptyNode(pc);\n    for (let sc of slideDivs) pc.appendChild(sc);\n    go(i, true);\n  }\n\n  function onJump() {\n    if (big.mode === \"jump\") return;\n    big.mode = \"jump\";\n    body.className = \"jump-mode \" + initialBodyClass;\n    body.style.cssText = initialBodyStyle;\n    emptyNode(pc);\n    slideDivs.forEach(sc => {\n      let subContainer = pc.appendChild(ce(\"div\", \"sub-container\"));\n      subContainer.addEventListener(\"keypress\", e => {\n        if (e.key !== \"Enter\") return;\n        subContainer.removeEventListener(\"click\", onClickSlide);\n        e.stopPropagation();\n        e.preventDefault();\n        onTalk(sc._i);\n      });\n      let sbc = subContainer.appendChild(ce(\"div\", sc.firstChild.dataset.bodyClass || \"\"));\n      sbc.appendChild(sc);\n      sc.style.display = \"flex\";\n      sbc.style.cssText = sc.dataset.bodyStyle || \"\";\n      resizeTo(sc, 192, 120);\n      function onClickSlide(e) {\n        subContainer.removeEventListener(\"click\", onClickSlide);\n        e.stopPropagation();\n        e.preventDefault();\n        onTalk(sc._i);\n      }\n      subContainer.addEventListener(\"click\", onClickSlide);\n    });\n  }\n\n  function onClick(e) {\n    if (big.mode !== \"talk\") return;\n    if (e.target.tagName !== \"A\") go((big.current + 1) % big.length);\n  }\n\n  function onKeyDown(e) {\n    if (big.mode === \"talk\") {\n      switch (e.key) {\n        case \"ArrowLeft\":\n        case \"ArrowUp\":\n        case \"PageUp\":\n          return reverse();\n        case \"ArrowRight\":\n        case \"ArrowDown\":\n        case \"PageDown\":\n          return forward();\n      }\n    }\n    let m = { p: onPrint, t: onTalk, j: onJump }[e.key];\n    if (m) m(big.current);\n  }\n\n  function onResize() {\n    if (big.mode !== \"talk\") return;\n    let { clientWidth: width, clientHeight: height } = document.documentElement;\n    if (ASPECT_RATIO !== false) {\n      if (width / height > ASPECT_RATIO) width = Math.ceil(height * ASPECT_RATIO);\n      else height = Math.ceil(width / ASPECT_RATIO);\n    }\n    resizeTo(slideDivs[big.current], width, height);\n  }\n\n  window.matchMedia(\"print\").addListener(onPrint);\n  document.addEventListener(\"click\", onClick);\n  document.addEventListener(\"keydown\", onKeyDown);\n  document.addEventListener(\"touchstart\", e => {\n    if (big.mode !== \"talk\") return;\n    let { pageX: startingPageX } = e.changedTouches[0];\n    document.addEventListener(\n      \"touchend\",\n      e2 => {\n        let distanceTraveled = e2.changedTouches[0].pageX - startingPageX;\n        // Don't navigate if the person didn't swipe by fewer than 4 pixels\n        if (Math.abs(distanceTraveled) < 4) return;\n        if (distanceTraveled < 0) forward();\n        else reverse();\n      },\n      { once: true }\n    );\n  });\n  addEventListener(\"hashchange\", () => {\n    if (big.mode === \"talk\") go(parseHash());\n  });\n  addEventListener(\"resize\", onResize);\n  console.log(\"This is a big presentation. You can: \\n\\n* press j to jump to a slide\\n\" + \"* press p to see the print view\\n* press t to go back to the talk view\");\n  body.className = `talk-mode ${initialBodyClass}`;\n  go(parseHash() || big.current);\n});\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.40625,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" />\n  <title>Big</title>\n  <link href=\"big.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <script src=\"big.js\"></script>\n</head>\n<body class=\"light\">\n  <div>\n    Your presentation goes here\n    <notes>Speakers notes go here.</notes>\n  </div>\n</body>\n</html>\n"
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}