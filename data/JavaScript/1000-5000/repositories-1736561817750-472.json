{
  "metadata": {
    "timestamp": 1736561817750,
    "page": 472,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RoganDawes/P4wnP1_aloa",
      "stars": 3839,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.30078125,
          "content": "# changelog\n\n## v0.1.1-beta\n\n- fix #81: 100 percent CPU load in WiFI STA mode\n- fix: Italian layout `it`\n- fix: UK layout `gb`\n- fix: French layout `fr`\n- fix #38: file permission\n- added Finnish `fi` and Swedish `sv` layout (same)\n- added German(Switzerland) layout `ch`\n- added French(Belgian) layout `be`\n"
        },
        {
          "name": "DISCLAIMER.md",
          "type": "blob",
          "size": 0.578125,
          "content": "DISCLAIMER\n==========\n\n**P4wnP1 A.L.O.A.** is dedicated to penetration testers, redteamers and InfoSec personal.\nIt should be used for authorized testing and/or educational purposes only. \nThe only exception is using it against devices or a network, owned by yourself.\n\nI take no responsibility for the abuse of P4wnP1 A.L.O.A. or any information given in the \nrelated documents. \n\n**I DO NOT GRANT PERMISSIONS TO USE P4wnP1 A.L.O.A. TO BREAK THE LAW.**\n\nAs P4wnP1 A.L.O.A. is in alpha stage, it is likely that bugs occur.\nI disclaim any warranty for P4wnP1 A.L.O.A., it is provided \"as is\".\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.0458984375,
          "content": "SHELL := /bin/bash\nPATH := /usr/local/go/bin:$(PATH)\n\nall: compile\n\ntest:\n#\texport PATH=\"$$PATH:/usr/local/go/bin\" # put into ~/.profile\n\techo $(CURDIR)\n\techo $(HOME)\n\n# make dep runs without sudo\ndep:\n\t# sudo apt-get -y install git screen hostapd autossh bluez bluez-tools bridge-utils policykit-1 genisoimage iodine haveged\n\t# sudo apt-get -y install tcpdump\n\t# sudo apt-get -y install python-pip python-dev\n\n\t# before installing dnsmasq, the nameserver from /etc/resolv.conf should be saved\n\t# to restore after install (gets overwritten by dnsmasq package)\n\t# cp /etc/resolv.conf /tmp/backup_resolv.conf\n\t# sudo apt-get -y install dnsmasq\n\t# sudo /bin/bash -c 'cat /tmp/backup_resolv.conf > /etc/resolv.conf'\n\n\t# python dependencies for HIDbackdoor\n\t# sudo pip install pycrypto # already present on stretch\n\t# sudo pip install pydispatcher\n\n\t# install go\n\t# wget https://storage.googleapis.com/golang/go1.10.linux-armv6l.tar.gz\n\t# sudo tar -C /usr/local -xzf go1.10.linux-armv6l.tar.gz\n\n\texport PATH=\"$$PATH:/usr/local/go/bin\"\n\n\t# put into ~/.profile\n\t# ToDo: check if already present\n\t# echo \"export PATH=\\$$PATH:/usr/local/go/bin\" >> ~/.profile\n\t# sudo bash -c 'echo export PATH=\\$$PATH:/usr/local/go/bin >> ~/.profile'\n\n\t# install gopherjs\n\tgo install github.com/gopherjs/gopherjs\n\n\t# we don't need protoc + protoc-grpc-web, because the proto file is shipped pre-compiled\n\n\t# go dependencies for webapp (without my own)\n\t#go get google.golang.org/grpc\n\t#go get -u github.com/improbable-eng/grpc-web/go/grpcweb\n\t#go get -u github.com/gorilla/websocket\n\n# This target probably needs to be run at least once to get the dependencies on\n# the go path. But after that, you probably actually want to run:\n# $ cd build_support && ./build.sh && cd ..\n# instead, to build with the right GOOS and GOARCH settings.\ncompile:\n\tgo get github.com/mame82/P4wnP1_aloa/... # partially downloads again, but we need the library packages in go path to build\n\t# <--- second compilation, maybe -d flag on go get above is better\n\tenv GOBIN=$(CURDIR)/build go install ./cmd/... # compile all main packages to the build folder\n\n\t# compile the web app\n\t# ToDo: (check if dependencies have been fetched by 'go get', even with the build js tags)\n\t$(HOME)/go/bin/gopherjs get github.com/mame82/P4wnP1_aloa/web_client/...\n\t$(HOME)/go/bin/gopherjs build -m -o build/webapp.js web_client/*.go\n\ninstallkali:\n\t#apt-get -y install git screen hostapd autossh bluez bluez-tools bridge-utils policykit-1 genisoimage iodine haveged\n\t#apt-get -y install tcpdump\n\t#apt-get -y install python-pip python-dev\n\n\t# before installing dnsmasq, the nameserver from /etc/resolv.conf should be saved\n\t# to restore after install (gets overwritten by dnsmasq package)\n\t#cp /etc/resolv.conf /tmp/backup_resolv.conf\n\t#apt-get -y install dnsmasq\n\t#/bin/bash -c 'cat /tmp/backup_resolv.conf > /etc/resolv.conf'\n\n\t# python dependencies for HIDbackdoor\n\tsudo pip install pydispatcher\n\n\tcp build/P4wnP1_service /usr/local/bin/\n\tcp build/P4wnP1_cli /usr/local/bin/\n\tcp dist/P4wnP1.service /etc/systemd/system/P4wnP1.service\n\t# copy over keymaps, scripts and www data\n\tmkdir -p /usr/local/P4wnP1\n\tcp -R dist/keymaps /usr/local/P4wnP1/\n\tcp -R dist/scripts /usr/local/P4wnP1/\n\tcp -R dist/HIDScripts /usr/local/P4wnP1/\n\tcp -R dist/www /usr/local/P4wnP1/\n\tcp -R dist/db /usr/local/P4wnP1/\n\tcp -R dist/helper /usr/local/P4wnP1/\n\tcp -R dist/ums /usr/local/P4wnP1/\n\tcp -R dist/legacy /usr/local/P4wnP1/\n\tcp build/webapp.js /usr/local/P4wnP1/www\n\tcp build/webapp.js.map /usr/local/P4wnP1/www\n\n\t# careful testing\n\t#sudo update-rc.d dhcpcd disable\n\t#sudo update-rc.d dnsmasq disable\n\tsystemctl disable networking.service # disable network service, relevant parts are wrapped by P4wnP1 (boottime below 20 seconds)\n\n\t# enable service\n\tsystemctl enable haveged\n\tsystemctl enable avahi-daemon\n\tsystemctl enable P4wnP1.service\n\ninstall:\n\tcp build/P4wnP1_service /usr/local/bin/\n\tcp build/P4wnP1_cli /usr/local/bin/\n\tcp dist/P4wnP1.service /etc/systemd/system/P4wnP1.service\n\t# copy over keymaps, scripts and www data\n\tmkdir -p /usr/local/P4wnP1\n\tcp -R dist/keymaps /usr/local/P4wnP1/\n\tcp -R dist/scripts /usr/local/P4wnP1/\n\tcp -R dist/HIDScripts /usr/local/P4wnP1/\n\tcp -R dist/www /usr/local/P4wnP1/\n\tcp -R dist/db /usr/local/P4wnP1/\n\tcp dist/bin/* /usr/local/bin/\n\tcp build/webapp.js /usr/local/P4wnP1/www\n\tcp build/webapp.js.map /usr/local/P4wnP1/www\n\n\t# careful testing\n\t#sudo update-rc.d dhcpcd disable\n\t#sudo update-rc.d dnsmasq disable\n\t# systemctl disable networking.service # disable network service, relevant parts are wrapped by P4wnP1 (boottime below 20 seconds)\n\n\t# reinit service daemon\n\t# systemctl daemon-reload\n\t# enable service\n\t# systemctl enable haveged\n\t# systemctl enable P4wnP1.service\n\t# start service\n\t# service P4wnP1 start\n\nremove:\n\t# stop service\n\tservice P4wnP1 stop\n\t# disable service\n\tsystemctl disable P4wnP1.service\n\trm -f /usr/local/bin/P4wnP1_service\n\trm -f /usr/local/bin/P4wnP1_cli\n\trm -f /etc/systemd/system/P4wnP1.service\n\trm -R /usr/local/P4wnP1/    # this folder should be kept, if only an update should be applied\n\t# reinit service daemon\n\tsystemctl daemon-reload\n\n\t#sudo update-rc.d dhcpcd enable\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 86.146484375,
          "content": "# P4wnP1 A.L.O.A.\n\nP4wnP1 A.L.O.A. by MaMe82 is a framework which turns a Rapsberry Pi Zero W into a flexible, low-cost platform for \npentesting, red teaming and physical engagements ... or into \"A Little Offensive Appliance\".\n\n## 0. How to install\n\nThe latest image could be found under release tab.\n\nThe easiest way to access a fresh P4wnP1 A.L.O.A. installation is to use the web client via the spawned WiFi (the PSK\nis `MaMe82-P4wnP1`, the URL `http://172.24.0.1:8000`) or SSH (default password `toor`).\n\n## 1. Features\n\n### Plug&Play USB device emulation\n- USB functions:\n  - USB Ethernet (RNDIS and CDC ECM)\n  - USB Serial\n  - USB Mass Storage (Flashdrive or CD-Rom)\n  - HID Keyboard\n  - HID Mouse\n- runtime reconfiguration of USB stack (no reboot)\n- detection of connect/disconnect makes it possible to keep P4wnP1 A.L.O.A powered up (external supply) and trigger \naction if the emulated USB device is attached to a new host\n- no need to deal with different internal ethernet interfaces, as CDC ECM and RNDIS are connected to a virtual bridge\n- persistent store and load of configuration templates for USB settings\n \n### HIDScript\n- replacement for limited DuckyScript\n- sophisticated scripting language to automate keyboard and **mouse**\n- up to 8 HIDScript jobs could run in parallel (keep a job up to jiggle the mouse, while others are started on-demand to\ndo arbitrary mouse and keystroke injection seamlessly)\n- HIDScript is based on JavaScript, with common libraries available, which allows more complex scripts (function calls,\nusing `Math` for mouse calculations etc.)\n- keyboard\n  - based on UTF-8, so there's no limitation to ASCII characters\n  - could react on feedback from the hosts real keyboard by reading back LED state changes of NUMLOCK, CAPSLOCK and \n  SCROLLLOCK (if the target OS shares LED state across all connected keyboards, which isn't the case for OSX)\n  - take branching decisions in HIDScript, based on LED feedback\n- mouse\n  - relative movement (fast, but not precise)\n  - stepped relative movement (slower, but accurate ... moves mouse in 1 DPI steps) \n  - **absolute positioning** on Windows (pixel perfect if target's screen dimensions are known)\n- Keyboard and mouse are not only controlled by the same scripting language, both could be used in the same script. This\nallows combining them in order to achieve goals, which couldn't be achieved using only keyboard or mouse.\n- current language layouts: br, de, es, fr, gb, it, ru and us \n  \n### Bluetooth\n- full interface to Bluez stack (currently no support for remote device discovery/connect)\n- allows to run a Bluetooth Network Access Point (NAP)\n- customizable Pairing (PIN based legacy mode or SSP)\n- High Speed support (uses 802.11 frames to achieve WiFi like transfer rates)\n- Runtime reconfiguration of the Bluetooth stack\n- Note: PANU is possible, too, but currently not supported (no remote device connection)\n- persistent store and load of configuration templates for Bluetooth settings\n  \n### WiFi\n- modified Firmware (build with Nexmon framework)\n  - allows KARMA (spoof valid answers for Access Points probed by remote devices and allow association)\n  - broadcast additional Beacons, to emulate multiple SSIDs\n  - WiFi covert channel\n  - Note: Nexmon legacy monitor mode is included, but not supported by P4wnP1. Monitor mode is still buggy and likely to\n  crash the firmware if the configuration changes. \n- easy Access Point configuration\n- easy Station mode configuration (connect to existing AP)\n- failover mode (if it is not possible to connect to the target Access Point, bring up an own Access Point)\n- runtime reconfiguration of WiFi stack \n- persistent store and load of configuration templates for WiFi settings\n\n### Networking\n- easy ethernet interface configuration for\n  - bluetooth NAP interface\n  - USB interface (if RNDIS/CDC ECM is enabled)\n  - WiFi interface\n- supports dedicated DHCP server per interface\n- support for DHCP client mode\n- manual configuration\n- persistent store and load of configuration templates for each interface\n\n### Tooling\nNot much to say here, P4wnP1 A.L.O.A. is backed by KALI Linux, so everything should be right at your hands (or could be \ninstalled using apt)\n\n### Configuration and Control via CLI, remotely if needed\n- all features mentioned so far, can be configured using a CLI client\n- the P4wnP1 core service is a single binary, running as systemd unit which preserves runtime state\n- the CLI client interfaces with this service via RPC (gRPC to be specific) to change the state of the core\n- as the CLI uses a RPC approach, it could be used for **remote configuration**, too\n- if P4wnP1 is accessed via SSH, the CLI client is there, waiting for your commands (or your tab completion kung fu) \n- the CLI is written in Go (as most of the code) and thus **compiles for most major platforms and architectures**\n\nSo if you want to use a a batch file running on a remote Windows host to configure P4wnP1 ... no problem:\n1) compile the client for windows\n2) make sure you could connect to P4wnP1 somehow (Bluetooth, WiFi, USB)\n3) add the `host` parameter to your client commands\n4) ... and use the CLI as you would do with local access. \n\n### Configuration and Control via web client\n\nAlthough it wasn't planned initially, P4wnP1 A.L.O.A. can be configured using a webclient.\nEven though the client wasn't planned, it evolved to a nice piece of software. In fact it ended up as the main \nconfiguration tool for P4wnP1 A.L.O.A.\nThe webclient has capabilities, which couldn't be accessed from the CLI (templates storage, creation of \n\"TriggerActions\").\n\nThe core features:\n- should work on most major mobile and desktop browsers, with consistent look and feel (Quasar Framework)\n- uses gRPC via websockets (no RESTful API, no XHR, nearly same approach as CLI)\n- Thanks to this interface, the weblient does not rely on a request&reply scheme only, but receives \"push events\" from \nthe P4wnP1 core. This means:\n  - if you (or a script) changes the state of P4wnP1 A.L.O.A. these changes will be immediately reflected into the \n  webclient\n  - if you have multiple webclients running, changes of the core's state will be reflected from one client to all other\n  clients\n- includes a HIDScript editor, with \n  - syntax highlighting\n  - auto-complete (`CTRL+SPACE`)\n  - persistent storage & load for HIDScripts \n  - **on-demand execution** of HIDScript directly from the browser\n  - a HIDScript job manager (cancel running jobs, inspect job state and results)\n- includes an overview and editor for TriggerActions\n- full templating support for all features described so far\n- the WebClient is a Single Page Application, once loaded everything runs client side, only gRPC request are exchanged\n\n### Automation\nThe automation approach of the old P4wnP1 version (static bash scripts) couldn't be used anymore.\n\nThe automation approach of P4wnP1 A.L.O.A. had to fulfills these requirements:\n- easy to use and understand\n- usable from a webclient\n- be generic and flexible, at the same time\n- everything doable with the old \"bash script\" approach, should still be possible\n- able to access all subsystems (USB, WiFi, Bluetooth, Ethernet Interfaces, HIDScript ... )\n- modular, with reusable parts\n- ability to support (simple) logical tasks without writing additional code\n- **allow physical computing, by utilizing of the GPIO ports**\n\nWith introducing of the so called \"TriggerActions\" and by combining them with the templating system (persistent settings\nstorage for all sub systems) all the requirements could be satisfied. Details on TriggerActions could be find in the \nWorkFlow section.\n\n# Usage tutorial\n\n## 2. Workflow part 1 - HIDScript\n\nP4wnP1 A.L.O.A. doesn't use concepts like static configuration or payloads. In fact it has no static workflow at all.\n \nP4wnP1 A.L.O.A. is meant to be as flexible as possible, to allow using it in all possible scenarios (including the ones\nI couldn't think of while creating P4wnP1 A.L.O.A.).\n\nBut there are some basic concepts, I'd like to walk through in this section. As it is hard to explain everything without\ncreating a proper (video) documentation, I visit some common use cases and examples in order to explain what needs\nto be explained.\n\nNevertheless, it is unlikely that I'll have the time to provide a full-fledged documentation. **So I encourage everyone\nto support me with tutorials and ideas, which could be linked back into this README**\n\nNow let's start with one of the most basic tasks:\n\n### 2.1 Run a keystroke injection against a host, which has P4wnP1 attached via USB\n\nThe minimum configuration requirement to achieve this goal is:\n- The USB sub system is configured to emulate at least a keyboard\n- There is a way to access P4wnP1 (remotely), in order to initiate the keystroke injection\n\nThe default configuration of P4wnP1's (unmodified image) meets these requirements already:\n- the USB settings are initialized to provide **keyboard**, mouse and ethernet over USB (both, RNDIS and CDC ECM) \n- P4wnP1 could already be accessed remotely, using one of the following methods:\n\t- WiFi\n\t  - the Access Point name should be obvious\n\t  - the password is `MaMe82-P4wnP1`\n\t  - the IP of P4wnP1 is `172.24.0.1`\n\t- USB Ethernet\n\t  - the IP of P4wnP1 is `172.16.0.1`\n\t- Bluetooth\n\t   - device name `P4wnP1`\n\t   - PIN `1337`\n\t   - the IP is `172.26.0.1`\n       - Note: Secure Simple Pairing is OFF in order to force PIN Pairing. This again means, high speed mode is turned \n       off, too. So the bluetooth connection is very slow, which is less of a problem for SSH access, but requesting the\n       webclient could take up to 10 minutes (in contrast to some seconds with high speed enabled).\n- a SSH server is accessible from all the aforementioned IPs\n- The SSH user for KALI Linux is `root`, the default password is `toor`\n- The webclient could be reached over all three connections on port 8000 via HTTP\n\n*Note:\nDeploying a HTTPS connection is currently not in scope of the project. So please keep this in mind, if you handle \nsensitive data, like WiFi credentials, in the webclient. The whole project isn't built with security in mind (and it is \nunlikely that this will ever get a requirement). So please deploy appropriate measures (f.e. restricting access\nto webclient with iptables, if the Access Point is configured with Open Authentication; don't keep Bluetooth \nDiscoverability and Connectability enabled without PIN protection etc. etc.)*\n\nAt this point I assume:\n1) You have attached P4wnP1 to some target host via USB (the innermost of the Raspberry's micro USB ports is the one to \nuse)\n2) The USB host runs an application, which is able to receive the keystrokes and has the current keyboard input focus \n(f.e. a text editor)\n3) You are remotely connected to P4wnP1 via SSH (the best way is WiFi), preferably the SSH connection is running from\na different host, then the the one which has P4wnP1 A.L.O.A. attached over USB\n\nIn order to run the CLI client from the SSH session, issue the following command:\n```\nroot@kali:~# P4wnP1_cli \nThe CLI client tool could be used to configure P4wnP1 A.L.O.A.\nfrom the command line. The tool relies on RPC so it could be used \nremotely.\n\nVersion: v0.1.0-alpha1\n\nUsage:\n  P4wnP1_cli [command]\n\nAvailable Commands:\n  db          Database backup and restore\n  evt         Receive P4wnP1 service events\n  help        Help about any command\n  hid         Use keyboard or mouse functionality\n  led         Set or Get LED state of P4wnP1\n  net         Configure Network settings of ethernet interfaces (including USB ethernet if enabled)\n  system      system commands\n  template    Deploy and list templates\n  trigger     Fire a group send action or wait for a group receive trigger\n  usb         USB gadget settings\n  wifi        Configure WiFi (spawn Access Point or join WiFi networks)\n\nFlags:\n  -h, --help          help for P4wnP1_cli\n      --host string   The host with the listening P4wnP1 RPC server (default \"localhost\")\n      --port string   The port on which the P4wnP1 RPC server is listening (default \"50051\")\n\nUse \"P4wnP1_cli [command] --help\" for more information about a command.\n```\n\n\nThe help screen already shows, that the CLI client uses different commands to interact with the various subsystems of \nP4wnP1 A.L.O.A. Most of these commands have own sub-commands, again. The help for each command or sub-command could be \naccessed by appending `-h` to the CLI command:\n\n```\nroot@kali:~# P4wnP1_cli hid run -h\nRun script provided from standard input, commandline parameter or by path to script file on P4wnP1\n\nUsage:\n  P4wnP1_cli hid run [flags]\n\nFlags:\n  -c, --commands string      HIDScript commands to run, given as string\n  -h, --help                 help for run\n  -r, --server-path string   Load HIDScript from given path on P4wnP1 server\n  -t, --timeout uint32       Interrupt HIDScript after this timeout (seconds)\n\nGlobal Flags:\n      --host string   The host with the listening P4wnP1 RPC server (default \"localhost\")\n      --port string   The port on which the P4wnP1 RPC server is listening (default \"50051\")\n```\n\nNow, in order to type out \"Hello world\" to the USB host, the following CLI command could be used:\n\n`P4wnP1_cli hid run -c 'type(\"Hello world\")'`\n\nThe result output in the SSH session should look similar to this:\n\n```\nTempFile created: /tmp/HIDscript295065725\nStart appending to 'HIDscript295065725' in folder 'TMP'\nResult:\nnull\n```\n\nOn the USB host \"Hello World\" should have been typed to the application with keyboard focus.\n\n*If your SSH client runs on the USB host itself, the typed \"Hello world\" ends up somewhere between the resulting output \nof the CLI command (it doesn't belong to the output, but has been typed in between).*\n\n**Goal achieved. We injected keystrokes to the target.**\n \nMuch reading for a simple task like keystroke injection, but again, this section is meant to explain basic concepts.\n\n### 2.2 Moving on to more sophisticated language features of HIDScript\n\nIf you managed to run the \"Hello world\" keystroke injection, this is a good point to explore some additional HIDScript\nfeatures. \n\nWe already know the `type` command, but let's try and discuss some more sophisticated HIDScript commands: \n\n#### Pressing special keys and combinations\n\nThe `type` command supports pressing return, by encoding a \"new line\" character into the input string, like this:\n```\nP4wnP1_cli hid run -c 'type(\"line 1\\nline 2\\nline 3 followed by pressing RETURN three times\\n\\n\\n\")'\n```\n\nBut what about special keys or key combinations? \n\nThe `press` command comes to help!\n\nLet's use `press` to send CTRL+ALT+DELETE to the USB host:\n\n```\nP4wnP1_cli hid run -c 'press(\"CTRL ALT DELETE\")'\n```\n\n*Note: Two of keys have been modifiers (CTRL and ALT) and only one has been an actual key (DELETE)*\n\nLet's press the key 'A' without any modifier key:\n\n```\nP4wnP1_cli hid run -c 'press(\"A\")'\n```\n\nThe resulting output should be a lowercase 'a', because `press(\"A\")` interprets 'A' as key. The command `type(\"A\")`, \non the other hand, tries to press a key combination which should result in an uppercase 'A' output character.\n\nLet's combine a modifier and a non-modifier key, in order to produce an uppercase 'A' output character (mimic the \nbehavior of `type(\"A\"):\n\n```\nP4wnP1_cli hid run -c 'press(\"SHIFT A\")'\n```\n\nThis should have produced an uppercase A output.\n\nIt is important to understand, that `press` interprets the given its key arguments as keys, while type tries to find the\nappropriate key combinations to produce the intended output characters.   \n\nIn a last example, let's combine `press` and `type`.\n\n```\nP4wnP1_cli hid run -c 'type(\"before caps\\n\"); press(\"CAPS\"); type(\"after caps\\n\"); press(\"CAPS\");'\n```\n \nThe last command typed a string, toggled CAPSLOCK, typed another string and toggled CAPS lock again. \nIn result, CAPSLOCK should be in its initial state (toggled two times), but one of the strings is typed uppercase, the\nother lowercase although both strings have been given in lower case.\n\nAdditional notes on key presses with `press`: \n\nI don't want to dive into the depth of USB keyboard reports inner workings, but some things are worth mentioning to \npinpoint the limits and possibilities of the `press` command (which itself works based on raw keyboard reports):\n- a keyboard report can contain up to 8 modifier keys at once\n- the modifier keys are\n  - LEFT_CTRL\n  - RIGHT_CTRL\n  - LEFT_ALT\n  - RIGHT_ALT\n  - LEFT_SHIFT\n  - RIGHT_SHIFT\n  - LEFT_GUI\n  - RIGHT_GUI\n- P4wnP1 allows using aliases for common modifiers\n  - CTRL == CONTROL == LEFT_CTRL\n  - ALT == LEFT_ALT\n  - SHIFT == LEFT_SHIFT\n  - WIN == GUI == LEFT_GUI\n- in addition to the modifiers, `press` consumes up to six normal or special keys\n  - normal keys represent characters and special keys\n  - example of special keys: BACKSPACE, ENTER (== RETURN), F1 .. F12)\n  - the keys are language layout agnostic (`press(\"Z\")` results in USB_KEY_Z fo EN_US keyboard layout, but produces\n  USB_KEY_Y for a German layout. This corresponds to pressing the hardware key 'Z' on a German keyboard, which would \n  produce a USB_KEY_Y, too.)\n  - `/usr/local/P4wnP1/keymaps/common.json` holds a formatted JSON keymap with all possible keys (be careful not to \n  change the file) \n- **adding multiple keys to the a single `press` command, doesn't produce a key sequence.** All given given keys are \npressed at the same time and release at the same time.\n- `press` releases keys automatically, this means a sequence like \"hold ALT, press TAB, press TAB, release ALT\" \ncurrently isn't possible \n\n#### Keyboard layout\n\nThe HIDScript command to change the keyboard layout is `layout(<language map name>)`.\n\nThe following example switches keyboard layout to 'US' types something and switches the layout to 'German' before it\ngoes on typing:\n\n```\nP4wnP1_cli hid run -c 'layout(\"us\"); type(\"Typing with EN_US layout\\n\");layout(\"de\"); type(\"Typing with German layout supporting special chars üäö\\n\");'\n```\n \nThe output result of the command given above, depends on the target layout used by the USB host. \n\nOn a host with German keyboard layout the result looks like this:\n```\nTzping with EN?US lazout\nTyping with German layout supporting special chars üäö\n```\nOn a host with US keyboard layout it looks like this:\n```\nTyping with EN_US layout\nTzping with German lazout supporting special chars [';\n```\n\nPlease note, that the intended output is only achieved, if P4wnP1's keyboard layout aligns with the keyboard layout\nactually used by the USB host. \n\nThe `layout` command allows to align P4wwP1's internal layout to the one of the target USB host. \n\nBeing able to change the layout in the middle of a running HIDScript, could come in handy: Who knows, maybe you like to \nbrute force the target host's keyboard layout by issuing commands with changing layouts till one of the typed commands\nachieves the desired effect.\n\n**Important:** The layout has global effect. This means if multiple HIDScripts are running concurrently and one of the \nscripts sets a new layout, all other scripts are effected immediately, too.\n\n#### Typing speed\n\nBy default P4wnP1 injects keystrokes as fast as possible. Depending on your goal, this could be a bit too much (think of \ncounter measures which prevent keystroke injection based on behavior analysis of typing speed). HIDScript supports a \ncommand to change this behavior.\n\n`typingSpeed(delayMillis, jitterMillis)`\n\nThe first argument to the `typingSpeed` command represents a constant delay in milliseconds, which is applied between \ntwo keystrokes. The second argument is an additional jitter in milliseconds. It adds an additional random delay, which \nscales between 0 and the given jitter in milliseconds, to the static delay provided with the first argument.\n\nLet's try to use `typingSpeed` to slow down the typing:\n\n```\nP4wnP1_cli hid run -c 'typingSpeed(100,0); type(\"Hello world\")'\n```\n\nNext, instead of a constant delay, we try a random jitter:\n```\nP4wnP1_cli hid run -c 'typingSpeed(0,500); type(\"Writing with random jitter up to 500 milliseconds\")'\n```\n\nFinally, by combining and tuning both values, we could simulate natural typing speed:\n```\nP4wnP1_cli hid run -c 'typingSpeed(100,150); type(\"Writing with more natural speed\")'\n```\n\n**Important:** The typing speed has global effect. This means if multiple HIDScripts are running concurrently and one of\nthe scripts sets a new typing speed, all other scripts are effected immediately, too.\n\n#### Wait for LED report\n\nWaiting for LED report, or to be precise LED state changes, is one of the more sophisticated keyboard features of \nHIDScript. It could be very powerful but needs a bit of explanation.\n\nYou may have noticed that (depending on the USB host's OS) the keyboard state modifiers (NUM LOCK, SCROLL LOCK, \nCAPS LOCK) are shared across multiple connected keyboards. For example, if you connect two keyboards to a Windows host, \nand toggle CAPS LOCK on one of them, the CAPS LOCK LED changes on both keyboards. \n\nExactly this test could be used, to determine if the keyboard state modifiers are shared across all keyboards for a \ngiven OS. \n\nIn case a USB host supports this kind of state sharing (for example Windows does), P4wnP1's HIDScript language could \nmake use out of it.\n\nImagine the following scenario:\n\nP4wnP1 is connected to a USB host and you want to apply keystroke injection, but you don't want the HIDScript to \nrun the keystrokes immediately. Instead the HIDScript should sit and wait till you hit NUMLOCK, CAPSLOCK or SCROLLLOCK\non the host's real keyboard. Why? Maybe you're involved in an engagement, somebody walked in and you don't want that\nthis exact \"somebody\" could see how magically a huge amount of characters are typed into a console window which suddenly\npopped up. So you wait till \"somebody\" walks out, hit NUM LOCK and ultimately a console window pops up and a huge amount\nof characters are magically type ... I think you got it. \n\nThe described behavior could be achieved like this:\n\n```\nP4wnP1_cli hid run -c 'waitLED(NUM); type(\"A huge amount of characters\\n\")'\n```\n\nIf you tested the command above, typing should only start if NUM LOCK is pressed on the USB host's hardware keyboard, \nbut you might encounter cases where the keystrokes immediately are issued, even if NUM LOCK wasn't pressed (and the \nkeyboard LED hasn't hacnged).\n\nThis is intended behavior and the reason for this is another use case for the `waitLED` command:\n \nMaybe you have used other keyboard scripting languages and other USB devices capable of injecting keystrokes, before. \nMost of these devices share a common problem: You don't know when to start typing! \n\nIf you start typing immediately after the USB device is powered up, it is likely that the USB host hasn't finished \ndevice enumeration and thus hasn't managed to bring up the keyboard drivers. Ultimately your keystrokes are lost.\n\nTo overcome this you could add a delay before the keystroke injection starts. But how long should this delay be? Five \nseconds, 10 seconds, 30 seconds ? \n\nThe answer is: it depends! It depends on how fast the host is able to enumerate the device and bring up the keyboard \ndriver. In fact you couldn't know how long this takes, without testing against the actual target.\n\nBut as we have already learned, Operating Systems like Windows share the LED state across multiple keyboards.\nThis means if the NUMLOCK LED of the host keyboard is set to ON before you attach a second keyboard, the NUMLOCK LED \non this new keyboard has to be set to ON, too, once attached. If the NUM LOCK LED would have been set to OFF, anyways, \nthe newly attached keyboard receives the LED state (all LEDs off in this case). The interesting thing about this is,\nthat this \"LED update\" could only be send from the USB host to the attached keyboard, if the keyboard driver has \nfinished loading (sending LED state wouldn't be possible otherwise).\n\nIsn't that beautiful? The USB host tells us: \"I'm ready to receive keystrokes\". There is no need to play around with \ninitial delays. \n\nBut here is another problem: Assume we connect P4wnP1 to an USB host. We run a HIDScript starting with `waitLED` instead\nof a hand crafted delay. Typing starts after the `waitLED`, but nothing happens - our keystrokes are lost, anyways! Why? \nBecause, it is likely that we missed the LED state update, as it arrived before we even started our HIDScript. \n\nExactly this \"race condition\" is the reason why P4wnP1 preserves all recognized LED state changes, unless at least one \nHIDScript consumes them by calling `waitLED` (or `waitLEDRepeat`). This could result in the behavior describe earlier,\nwhere a `waitLED` returns immediately, even though no LED change occurred. We now know: The LED change indeed occurred, \nbut it could have happened much earlier (berfore we even started the HIDScript), because the state change was preserved.\nWe also know, that this behavior is needed to avoid missing LED state changes, in case `waitLED` is used to test for\n\"USB host's keyboard driver readiness\".\n\n*Note: It is worth mentioning, that `waitLED` returns ONLY if the received LED state differs from P4wnP1's internal \nstate. This means, even if we listen for a change on any LED with `waitLED(ANY)` it still could happen, that we receive \nan initial LED state from a USB host, which doesn't differ from P4wnP1's internal state. In this case `waitLED(ANY)` \nwould block forever (or till a real LED change happens).\nThis special case could be handled by calling `waitLED(ANY_OR_NONE)`, which returns as soon as a new LED state arrive,\neven if it doesn't result in a change.*\n\n**Enough explanation, let's get practical ... before we do so, we have to change the hardware setup a bit:**\n\nAttach an external power supply to the second USB port of the Raspberry Pi Zero (the outer one). This assures that\nP4wnP1 doesn't loose power when detached from the USB host, as it doesn't rely on bus power anymore. The USB port which\nshould be used to connect P4wnP1 to the target USB host is the inner most of the two ports.\n\nNow start the following HIDScript\n\n``` \nP4wnP1_cli hid run -c 'while (true) {waitLED(ANY);type(\"Attached\\n\");}'\n``` \n\nDetach P4wnP1 from the USB host (and make sure it is kept powered on)! Reattach it to the USB host ...\nEvery time you reattach P4wnP1 to the host, \"Attached\" should be typed out to the host.\n\nThis taught us 3 facts:\n1) `waitLED` could be used as initial command in scripts, to start typing as soon as the keyboard driver is ready\n2) `waitLED` isn't the perfect choice, to pause HID scripts until a LED changing key is pressed on the USB host, as \npreserved state changes could unblock the command in an unintended way\n3) Providing more complex HIDScript as parameter to the CLI isn't very convenient\n\nAs we still aren't done with the `waitLED` command, we take care of the third fact, now. Let us leave the CLI.\n\n- abort the P4wnP1 CLI with CTRL+C (in case the looping HIDScript is still running)\n- open a browser on the host yor have been using for the SSH connection to P4wnP1 (not the USB host)\n- the webclient could be accessed via the same IP as the SSH server, the port is 8000 (for WiFi \n`http://172.24.0.1:8000`)\n- navigate to the \"HIDScript\" tab in the now opened webclient\n- from there you could load and store HIDScripts (we don't do this for now, although `ms_snake.js` is a very good \nexample for the power of LED based triggers)\n\nReplace the script in the editor Window with the following one:\n\n``` \nreturn waitLED(ANY);\n``` \n\nAfter hitting a run button, the right side of the window should show a new running HID job. If you press the little \n\"info\" button to the right of the HIDScript job, you could see details, like its state (should be running), the job ID\nand the VM ID (this is the number of the JavaScript VM running this job. There are 8 of these VMs, so 8 HIDScripts could\nrun in parallel).\n\nNow, if any LED change is emitted from the USB host (by toggling NUM, CAPS or SCROLL) the HIDScript job should end. \nIt still could be found under \"Succeeded\" jobs.\n\nIf you press the little \"info\" button again, there should be an information about the result value (encoded as JSON),\nwhich looks something like this:\n\n```\n{\"ERROR\":false,\"ERRORTEXT\":\"\",\"TIMEOUT\":false,\"NUM\":true,\"CAPS\":false,\"SCROLL\":false,\"COMPOSE\":false,\"KANA\":false}\n```\n  \nSo the `waitLED` command returns a JavaScript object looking like this:\n\n```\n{\n\tERROR:\t\tfalse,\t// gets true if an error occurred (f.e. HIDScript was aborted, before waitLED could return)  \n\tERRORTEXT: \t\"\",\t\t// corresponding error string\n\tTIMEOUT:\tfalse,\t// gets true if waitLED timed out (more on this in a minute)\n\tNUM:\t\ttrue,   // gets true if NUM LED had changed before waitLED returned\n\tCAPS:\t\tfalse,  // gets true if CAPS LED had changed before waitLED returned\n\tSCROLL:\t\tfalse,  // gets true if SCROLL LED had changed before waitLED returned\n\tCOMPOSE:\tfalse,  // gets true if COMPOSE LED had changed before waitLED returned (uncommon)\n\tKANA:\t\tfalse   // gets true if KANA LED had changed before waitLED returned (uncommon)\n}\n```\n\nIn my case, `NUM` became true. In your case it maybe was `CAPS`. It doesn't matter which LED it was. \"hat does matter is \nthe fact, that the return value gives the opportunity to examine the LED change which makes the command return and thus\nit could be used to take branching decisions in your HIDScript (based on LED state changes issued from the USB host's\nreal keyboard).\n\nLet's try an example:\n\n```\nwhile (true) {\n result = waitLED(ANY);\n if (result.NUM) {\n   type(\"NUM has been toggled\\n\");\n }\n if (result.SCROLL) {\n   type(\"SCROLL has been toggled\\n\");\n }\n if (result.CAPS) {\n   break; //exit loop\n }\n}\n``` \n\nAssuming the given script is already running, pressing NUM on the USB host should result in typing out \"NUM has been \ntoggled\", while pressing SCROLL LOCK results in the typed text \"SCROLL has been toggled\". This behavior repeats, until\nCAPS LOCK is pressed and the resulting LED change aborts the loop and ends the HIDScript.\n\nPuhhh ... a bunch of text on this command for a single HIDScript command, but there still some things left.\n\nWe provided arguments like `NUM`, `ANY` or `ANY_OR_NONE` to the `waitLED` command, without further explanation.\n\nThe `waitLED` accepts up to two arguments: \n\nThe first argument, as you might have guessed, is a whitelist filter for the LEDs to watch. Valid arguments are:\n- `ANY` (react on a change to any of the LEDs)\n- `ANY_OR_NONE` (react on every new LED state, even if there's no change)\n- `NUM` (ignore all LED changes, except on the NUM LED)\n- `CAPS` (ignore all LED changes, except on the NUM CAPS)\n- `SCROLL` (ignore all LED changes, except on the NUM SCROLL)\n- multiple filters could be combined like this `CAPS | NUM`, `NUM | SCROLL`\n\nThe second argument, we haven't used so far, is a timeout duration in milliseconds. If no LED change occurred during \nthis timeout duration, `waitLED` returns and has `TIMEOUT: true` set in the resulting object (additionally `ERROR` is \nset to true and `ERRORTEXT` indicates a timeout).\n\nThe following command would wait for a change on the NUM LED, but aborts waiting after 5 seconds:\n\n```\nwaitLED(NUM,5000)\n```\n\nEven though `waitLED` is a very powerful command if used correctly, it hasn't helped to deal with our easy task of \nrobustly pausing a HIDScript till a state modifier key is pressed on the target USB host (remember: We wanted to pause\nexecution to assure the unwanted \"somebody\" walked out before typing starts, but `waitLED` occasionally returned early, \nbecause of preserved LED state changes).\n\nThis is where `waitLEDRepeat` joins the game and comes to rescue.\n\nPaste the following script into the editor and try to make the command return. Inspect the HIDScript results afterwards.\n```\nreturn waitLEDRepeat(ANY)\n```\n\nYou should quickly notice, that the same LED has to be changed multiple times frequently, in order to make the \n`waitLEDRepeat` command return. The `waitLEDRepeat` command wouldn't return if differing LEDs change state or if the \nLED changes on a single LED are occurring too slow. \n\nThe argument provided to `waitLEDRepeat` (which is `ANY` in the example) serves the exact same purpose as for `waitLED`. \nIt is a whitelist filter. For example `waitLEDRepeat(NUM)` would only return for changes of the NUM LOCK LED - no matter\nhow fast and often you'd hammer on the CAPS LOCK key, it wouldn't return unlees NUM LOCK is pressed frequently.\n\nBy default, one of the whitelisted LEDs has to change 3 times and the delay between two successive changes mustn't be\ngreater than 800 milliseconds in order to make `waitLEDRepeat` return. This behavior could tuned, by providing \nadditional arguments like shown in this example:\n\n```\nfilter = ANY;\t\t// same filters as for waitLED\nnum_changes = 5;\t// how often the SAME LED has to change, in order to return from waitLEDRepeat\nmax_delay = 800;\t// the maximum duration between two LED changes, which should be taken into acccount (milliseconds)\ntimeout = 10000;    // timeout in milliseconds\n\nwaitLEDRepeat(filter, num_changes, max_delay); \t\t\t//wait till a LED frequently changed 5 times, no timeout\nwaitLEDRepeat(filter, num_changes, max_delay, timeout); //wait till a LED frequently changed 5 times, abort after 10 seconds\n```\n\nSo that's how to interact with LED reports from an USB host in HIDScript.\n\n*Note: `waitLEDRepeat` doesn't differ from `waitLED`, when it comes to consumption of preserved LED state changes. \nAnyways, it is much harder to trigger it unintended.*\n \nSo `waitLEDRepeat` is the right choice, if the task is to pause HIDScripts till human interaction happens. Of course it \ncould be used for branching, too, as it provides the same return object as `waitLED` does. \n\nUp to this point we gained a good bit of knowledge about HIDScript (of course not about everything, we haven't even \nlooked into mouse control capabilities of this scripting language). Anyways, this tutorial is about P4wnP1 A.L.O.A. \nworkflow and basic concepts. So we don't look into other HIDScript features, for now, and move on.\n\nLet's summarize what we learned about P4wnP1's workflow and concepts so far:\n- we could start actions like keystroke injection from the CLI client, on-demand\n- we could use the webclient to achieve the same, while having additional control over HIDScript jobs\n- if we connect an external power supply to P4wnP1 A.L.O.A., we attach/detach to/from different USB hosts and already \nstarted HIDScripts go on working seamlessly \n- we could configure the USB stack exactly to our needs (and change its configuration at runtime, without rebooting \nP4wnP1)\n- we could write multi purpose HIDScripts, with complex logic based on JavaScript (with support for functions, loops, \nbranching etc. etc.)\n\n### 3. Workflow part 2 - Templating and TriggerActions\n\nBefore go on with the other major concepts of P4wnP1 A.L.O.A. let's refine our first goal, which was to \"run a keystroke \ninjection against a USB host\":\n\n- The new goal is to type \"Hello world\" into the editor of a Windows USB host (notepad.exe). \n- The editor should be opened by P4wnP1 (not manually by the user).\n- The editor should automatically be closed, when any of the keyboard LEDs of the USB host is toggled.\n- Everytime P4wnP1 is attached to the USB host, this behavior should repeat (with external power supply, no reboot of \nP4wnP1)\n- The process *should only run once*, unless P4wnP1 is re-attached to the USB host, even if successive keyboard LED \nchanges occur after the HIDScript has been started.\n- Even if P4wnP1 is rebooted, the same behavior should be recoverable without recreating detail of the setup from \nscratch, again.\n\nStarting notepad, typing \"Hello world\" and closing notepad after a LED change could be done with the things we learned \nso far. An according HIDScript could look something like this: \n\n```\n// Starting notepad\npress(\"WIN R\");         // Windows key + R, to open run dialog\ndelay(500);             // wait 500ms for the dialog to open\ntype(\"notepad.exe\\n\"); \t// type 'notepad.exe' to the run dialog, append a RETURN press\ndelay(2000);            // wait 2 seconds for notepad to come up\n\n// Type the message\ntype(\"Hello world\")     // Type \"Hello world\" to notepad\n\n// close notepad after LED change\nwaitLED(ANY);           // wait for a single LED change\npress(\"ALT F4\");        // ALT+F4 shortcut to close notepad\n\n//as we changed content, there will be a confirmation dialog before notepad exits\ndelay(500);             // wait for the confirmation dialog\npress(\"RIGHT\");         // move focus to next button (don't save) with RIGHT ARROW\npress(\"SPACEBAR\");      // confirm dialog with space\n```\n\nThe only thing new in this script is the `delay` command, which doesn't need much explanation. It delays execution for \nthe given amount of milliseconds. \n\nThe script could be pasted into the webclient HIDScript editor and started with \"run\" in order to test it.\n\nIt should work as intended, so we are nearly done. In order to be able reuse the script, even after a reboot, we store \nit persistently. This could be achieved by hitting the \"store\" button in the HIDScript tab of the webclient. After \nentering a name (we use `tutorial1` for now) and confirming the dialog, the HIDScript should have been stored. \nWe could check this, by hitting the \"Load & Replace\" button in the webclient. The stored script should occur in the list\nof stored scripts with the name `tutorial1.js` (the `.js` extension is appended automatically, if it hasn't been \nprovided in the \"store\" dialog, already).\n\n**Warning: If a name of an already existing file used in the store dialog, the respective file gets overwritten without \nasking for further confirmation.**\n\nLet's try to start the stored script using the CLI client from a SSH session, like this:\n```\nP4wnP1_cli hid run tutorial1.js\n```\n\nThis should have worked. This means, it is possible to start stored HIDScripts from all applications which support shell\ncommands or from a simple bash script, by using the P4wnP1 A.L.O.A. CLI client.\n\nIt would even be possible to start the script remotely from a CLI client compiled for Windows. Assuming the Windows host\nis able to reach P4wnP1 A.L.O.A. via WiFi and the IP of P4wnP1 is set to `172.24.0.1` the proper command would look like\nthis:\n```\nP4wnP1_cli.exe --host 172.24.0.1 hid run tutorial1.js\n```\n\n*Note: At the time of this writing, I haven't decided yet if P4wnP1 A.L.O.A. ships a CLI binary for each and every \npossible platform and architecture. But it is likely that precompiled versions for major platforms are provided. If\nnot - this isn't a big problem, as cross-compilation of the CLI client's Go code takes less than a minute.*\n\nThe next step is to allow the script to run again, every time P4wnP1 is re-attached to a USB host. A approach we already\nused to achieve such a behavior, was to wrap everything into a loop and prepend a `waitLED(ANY_OR_NONE)`. The\n`waitLED(ANY_OR_NONE)` assured tha the loop only continues, if the target USB host signals that the keyboard driver is \nready to receive input by sending an update of the global keyboard LED sate. An accordingly modified script could look \nlike this:\n\n```\nwhile (true) {\n  waitLED(ANY_OR_NONE);     // wait till keyboard driver sends the initial LED state\n  \n  // Starting notepad\n  press(\"WIN R\");           // Windows key + R, to open run dialog\n  delay(500);               // wait 500ms for the dialog to open\n  type(\"notepad.exe\\n\");    // type 'notepad.exe' to the run dialog, append a RETURN press\n  delay(2000);              // wait 2 seconds for notepad to come up\n\n  // Type the message\n  type(\"Hello world\")       // Type \"Hello world\" to notepad\n\n  // close notepad after LED change\n  waitLED(ANY);       // wait for a single LED change\n  press(\"ALT F4\");          // ALT+F4 shortcut to close notepad\n\n  //as we changed content, there will be a confirmation dialog before notepad exits\n  delay(500);               // wait for the confirmation dialog\n  press(\"RIGHT\");           // move focus to next button (don't save) with RIGHT ARROW\n  press(\"SPACEBAR\");        // confirm dialog with space \n}\n```\n\nThe script given above, indeed, would run, every time P4wnP1 is attached to an USB host. But the script isn't very \nrobust, because there's a second `waitLED` involved, which waits till notepad.exe should be is closed, again. \n\nDoing it like this involves several issues. For example if P4wnP1 is detached before the \"Hello world\" is typed out, the\nnow blocking `waitLED` would be the one before `press(\"ALT F4\")` and execution would continue at exact this point of\nthe HIDScript once P4wnP1 is attached to a (maybe different) USB host, again.\n\nA definitive kill criteria for the chosen approach is the following problem: The requirement that the script should be \nrun only once after attaching P4wnP1 to an USB host couldn't be met, as hitting NUM LOCK multiple times would restart \nthe script over and over.\n\nSo how do we solve this ?\n\n#### Let's introduce TriggerActions\n\nThe solution to the problem are so called \"TriggerActions\". As the name implies, this P4wnP1 A.L.O.A. workflow concept \nfires actions based on predefined triggers.\n\nTo get an idea of what I'm talking about, head over to the \"TRIGGER ACTIONS\" tab on the webclient. Depending on the \ncurrent setup, there may already exist TriggerActions. We don't care for existing TriggerActions, now.\n\nHit the \"ADD ONE\" button and a new TriggerActions should be added and instantly opened in edit mode. \nThe new TriggerAction is disabled by default and has to be enabled in order to make it editable. So we toggle the enable\nswitch.\n\nNow from the pull down menu called \"Trigger\" the option \"USB gadget connected to host\" should be selected. The action\nshould have a preset of \"write log entry\" selected. We leave it like this and hit the \"Update\" button. \n\nThe newly added TriggerAction should be visible in the TriggerActions overview now (the one with the highest ID) and \nshow a summary of the selected Trigger and selected Action in readable form.\n\nTo test if the newly defined TriggerAction works, navigate over to the \"Event Log\" tab of the webclient. \nMake sure you have the webclient opened via WiFi (not USB ethernet). Apply external power to P4wnP1, disconnect it from \nthe USB host and connect it again. A log message should be pushed to the client every time P4wnP1 is attached to a USB \nhost, immediately.\n\nIf you repeated this a few times, you maybe noticed that the \"USB gadget connected to host\" trigger fires very fast\n(or in an early stage of USB enumeration phase). To be more precise: When this trigger fires, it is known that P4wnP1 \nwas connected to a USB host, but there is no guarantee that the USB host managed to load all needed USB device drivers. \n**In fact it is very unlikely that the USB keyboard driver is loaded when the trigger fires. We have to keep this in \nmind.**\n\nBefore we move on with our task, we do an additional test. Heading back to the \"TriggerAction\" tab and we press the \nlittle blue button looking like a pen for our newly created TriggerAction. We end up in edit mode again.\n \nThis time, we enable the `One shot` option. Head back to the \"Event Log\" afterwards, and again, detach and re-attach \nP4wnP1 from the USB host. This time the TriggerAction should fire only once. No matter how often P4wnP1 is re-attached \nto the USB host afterwards, no new log message indicating a USB connect should be created. \n\nIt is worth mentioning that a \"One shot\" TriggerAction isn't deleted after the Trigger has fired. Instead the \nTriggerAction is disabled, again. Re-enabling allows reusing a TriggerAction without redefining it. Nothing gets lost \nuntil the red \"trash\" button is hit on a TriggerAction, which will delete the respective TriggerAction.\n\n**Warning: If the delete button for a TriggerAction is clicked, the TriggerAction is deleted permanently without further \nconfirmation.**\n\nAt this point let's do the obvious. We edit the created TriggerAction and select \"start a HIDScript\" instead of \"write\nlog entry\" for the action to execute. Additionally we disable \"one-shot\", again. A new input field called \"script name\" \nis shown. Clicking on this input field brings up a selection dialog for all stored HIDScripts, including our formerly \ncreated `tutorial1.js` HIDScript.\n\n*Before we test if this works, let me make a quick note on the action \"write log entry\": P4wnP1 A.L.O.A. doesn't keep \ntrack of Triggers which have already be fired. This means the log entries created by a \"write log entry\" action are \ndelivered to all listening client, but aren't stored by the P4wnP1 service (for various reasons). The webclient on the \nother hand stores the log entry until the the webclient itself is reloaded. The same applies to events, which are \nrelated to HIDScript jobs. If a HIDScript ends (with success or error), an event pushed to all currently open \nwebclients. In summary, each webclient has a runtime state, which holds more information than the core service, itself. \nIf the runtime state of the webclient grows to large (too much memory usage), one only needs to reload the client to \nclear \"historical\" sate information. If the core service would behave the same and store every historical information, \nit would run out of resources very soon. Thus this concept applies to most sub systems of P4wnP1 A.L.O.A.*\n\nNow back to our task. We have a TriggerAction ready, which should fire our HIDScript every time P4wnP1 is attached to \nan USB host. \n\nDepending on the target USB host, this works more or less reliably. In my test setup it didn't work at all and there's\na reason:\n \nLet's review the first few lines our HIDScript:\n\n```\n// Starting notepad\npress(\"WIN R\");         // Windows key + R, to open run dialog\ndelay(500);             // wait 500ms for the dialog to open\ntype(\"notepad.exe\\n\"); \t// type 'notepad.exe' to the run dialog, append a RETURN press\n... snip ...\n```\n\nRecalling the fact, that the \"USB gadget connected\" Trigger fires in early USB enumeration phase and the USB host's \nkeyboard driver hasn't necessarily been loaded, the problem becomes obvious. We have to prepend some kind of delay to \nthe script to assure the keyboard driver is up (otherwise our keystrokes would end up in nowhere).\n\nAs we already know that it isn't possible to predict the optimal delay, we go with the `waitLED(ANY_OR_NONE)` approach, \nexplained earlier. The new script looks like this:\n```\nwaitLED(ANY_OR_NONE);   //assure keyboard driver is ready\n\n// Starting notepad\npress(\"WIN R\");\t        // Windows key + R, to open run dialog\ndelay(500);             // wait 500ms for the dialog to open\ntype(\"notepad.exe\\n\"); \t// type 'notepad.exe' to the run dialog, append a RETURN press\ndelay(2000);            // wait 2 seconds for notepad to come up\n\n// Type the message\ntype(\"Hello world\")     // Type \"Hello world\" to notepad\n\n// close notepad after LED change\nwaitLEDRepeat(ANY);     // wait for a single LED change\npress(\"ALT F4\");        // ALT+F4 shortcut to close notepad\n\n//as we changed content, there will be a confirmation dialog before notepad exits\ndelay(500);             // wait for the confirmation dialog\npress(\"RIGHT\");         // move focus to next button (don't save) with RIGHT ARROW\npress(\"SPACEBAR\");      // confirm dialog with space\n```\n\nStoring the modified script under the exact same name (`tutorial1`) overwrites the former HIDScript without further\nconfirmation, as already pointed out. Thus there is no need to adjust our TriggerAction, as the HIDScript name the \nTriggerAction refers hasn't changed.\n\nWith this little change everything should work as intended and the script should trigger everytime we attach to an USB \nhost, but only run once.\n\nNow, if P4wnP1 is rebooted or looses power, our HIDScript would survive, because we have stored it persistently, but the\nTriggerAction would be gone. Needless to say, that TriggerActions could be stored persistently, too.\n\nThe \"store\" button in the \"TriggerAction\" tab works exactly like the one in the HIDScript editor. It should be noted\nthat *all currently active TriggerActions* will be stored if the \"store\" dialog is confirmed (including the disabled \nones).\nThe best practice is to delete all TriggerActions which don't belong to the task in current scope before storing (they \nshould have been stored earlier, if needed) and to only store the small set of TriggerActions relevant to the current \ntask, using a proper name. There are two options to load back stored TriggerActions to the active ones:\n - \"load & replace\" clears all active trigger actions and loads only the stored ones\n - \"load & add\" keeps the already active TriggerActions and adds in the stored ones. Thus \"load & add\" could be used to \n build a complex TriggerAction set out of smaller sets. The resulting set could then, again, be stored.\n \nFor now we should only store our single TriggerAction, which starts out HIDScript. The name we use to store is \n`tutorial1` again and won't conflict with the HIDScript called `tutorial1`.\n\nConfirm successful storing, by hitting the \"load&replace\" button in the \"TriggerAction\" tab. The stored TriggerAction \nset should be in the list and named `tutorial1`.\n\n**Warning: The TriggerAction \"load\" dialogs allow deleting stored TriggerActions by hitting the red \"trash\" button\nnext to each action. Hitting the button permanently deletes the respective TriggerAction set, without further \nconfirmation**\n\nAt this point we could safely delete our TriggerAction from the \"TriggerActions\" tab (!!not with the trash button from \none of the load dialogs!!).\n\nWith the TriggerAction deleted from the active ones, nothing happens if we detach and re-attach P4wnP1 from the USB \nhost.\n\nAnyways, the stored TriggerAction set `tutorial1` will persists reboots and could be reloaded at anytime. \n\nInstead of reloading the TriggerAction set from with the webclient, we try to accomplish that using the CLI client.\n\nLets take a quick look into the help screen of the `template deploy` sub-command:\n \n```\nroot@kali:~# P4wnP1_cli template deploy -h\nDeploy given gadget settings\n\nUsage:\n  P4wnP1_cli template deploy [flags]\n\nFlags:\n  -b, --bluetooth string         Deploy Bluetooth template\n  -f, --full string              Deploy full settings template\n  -h, --help                     help for deploy\n  -n, --network string           Deploy network settings template\n  -t, --trigger-actions string   Deploy trigger action template\n  -u, --usb string               Deploy USB settings template\n  -w, --wifi string              Deploy WiFi settings templates\n\nGlobal Flags:\n      --host string   The host with the listening P4wnP1 RPC server (default \"localhost\")\n      --port string   The port on which the P4wnP1 RPC server is listening (default \"50051\")\n\n``` \n\nThe usage screen shows, that TriggerAction Templates could be deployed with the `-t` flag. We run the following command,\nto restore the stored TriggerAction set:\n\n``` \nP4wnP1_cli template deploy -t tutorial1\n``` \n\nThe TriggerAction which fires out HIDScript on USB host connections is now loaded again and should be shown in the \nTriggerActions tab of the webclient. If P4wnP1 A.L.O.A. is attached to an USB host, the script should run again.\n\nStoring, loading and deploying of templates is one of the two main concepts behind P4wnP1's automation workflow, \nthe other one are the already known TriggerActions. It is worth mentioning, that not only TriggerAction sets could be\nstored and loaded as templates themselves, but that TriggerActions could be used to deploy already stored templates, if \nthat makes sense.\n\nRevisiting our tasks, it seems all defined requirements are met now:\n- we typed \"Hello world\" into the editor of a Windows USB host \n- the editor is opened by P4wnP1, not manually by the user\n- the editor is closed automatically, when one of the keyboard LEDs toggled once\n- every time P4wnP1 is attached to a USB host, this behavior repeats\n- the HIDScript runs only once, unless P4wnP1 is re-attached to the USB host, even if successive keyboard LED changes\noccur\n- if P4wnP1 is rebooted, the same behavior could be recovered by loading the stored TriggerAction set (which again \nrefers to the stored HIDScript). This could either be achieved with a single CLI command or with a simple \"load&add\" or\n\"load&replace\" from the webclient's trigger action tab.\n\nOnce more let us add additional goals:\n- it should be assured, that the USB configuration has the keyboard functionality enabled (the current setup doesn't do\nthis and the TriggerAction couldn't start the HIDScript in case the USB keyboard is disabled)\n- the created setup should applied at boot of P4wnP1 A.L.O.A., without the need of manually loading of the TriggerAction \nset. The setup has to survive a reboot of P4wnP1.\n\nTo achieve the two additional goals, we have to dive into a new topic and ...\n\n#### Introduce Master Templates and Startup Master Template\n\nBefore we look into Master Templates, we do something we haven't done, yet, because everything just worked as intended \nso far: We define a valid USB configurations, matching our task!\n\n- device serial number: 123456789\n- device product name: Auto Writer\n- device manufacturer: The Creator\n- Product ID: 0x9876\n- Vendor ID: 0x1D6B\n- enabled USB functions\n  - HID keyboard\n  - HID mouse\n  \nLet's take a look into the usage screen of the CLI command, which could bes used to deploy these settings, first:\n\n``` \nroot@kali:~# P4wnP1_cli usb set -h\nset USB Gadget settings\n\nUsage:\n  P4wnP1_cli usb set [flags]\n\nFlags:\n  -e, --cdc-ecm               Use the CDC ECM gadget function\n  -n, --disable               If this flag is set, the gadget stays inactive after deployment (not bound to UDC)\n  -h, --help                  help for set\n  -k, --hid-keyboard          Use the HID KEYBOARD gadget function\n  -m, --hid-mouse             Use the HID MOUSE gadget function\n  -g, --hid-raw               Use the HID RAW gadget function\n  -f, --manufacturer string   Manufacturer string (default \"MaMe82\")\n  -p, --pid string            Product ID (format '0x1347') (default \"0x1347\")\n  -o, --product string        Product name string (default \"P4wnP1 by MaMe82\")\n  -r, --rndis                 Use the RNDIS gadget function\n  -s, --serial                Use the SERIAL gadget function\n  -x, --sn string             Serial number (alpha numeric) (default \"deadbeef1337\")\n  -u, --ums                   Use the USB Mass Storage gadget function\n      --ums-cdrom             If this flag is set, UMS emulates a CD-Rom instead of a flashdrive (ignored, if UMS disabled)\n      --ums-file string       Path to the image or block device backing UMS (ignored, if UMS disabled)\n  -v, --vid string            Vendor ID (format '0x1d6b') (default \"0x1d6b\")\n\nGlobal Flags:\n      --host string   The host with the listening P4wnP1 RPC server (default \"localhost\")\n      --json          Output results as JSON if applicable\n      --port string   The port on which the P4wnP1 RPC server is listening (default \"50051\")\n``` \n\nThe command has a bunch of flags, but there exists a bunch of changeable USB settings, too. \nDeploying our defined USB setup could be done like this, using the CLI:\n\n```\nroot@kali:~# P4wnP1_cli usb set \\\n> --sn 123456789 \\\n> --product \"Auto Writer\" \\\n> --manufacturer \"The Creator\" \\\n> --pid \"0x9876\" \\\n> --vid \"0x1d6b\" \\\n> --hid-keyboard \\\n> --hid-mouse\nSuccessfully deployed USB gadget settings\nEnabled:      true\nProduct:      Auto Writer\nManufacturer: The Creator\nSerialnumber: 123456789\nPID:          0x9876\nVID:          0x1d6b\n\nFunctions:\n    RNDIS:        false\n    CDC ECM:      false\n    Serial:       false\n    HID Mouse:    true\n    HID Keyboard: true\n    HID Generic:  false\n    Mass Storage: false\n```\n\nThe result output of the (longish) command shows the resulting USB settings. Let us check the \"USB settings\" tab of the \nwebclient to confirm that they have been applied. All changes should be reflected, if nothing went wrong.\n\nAlthough it is perfectly possible to deploy a USB setup using the CLI, there are several benefits using the webclient \nin favor of the CLI. In this case:\n- changing the settings from the webclient is easier and more convenient\n- the webclient holds an internal settings state, this allows defining USB settings without actually deploying them (the\nCLI on the other hand, could only manipulate settings by deploying them. This, again, resets the while USB stack of \nP4wnP1 and all dependent functionality. F.e. already running HIDScript would be interrupted or USB network interfaces \nare redeployed \n- the current settings of the webclient could be stored to a persistent template, without deploying them upfront\n- the CLI client, (currently) isn't able to store USB settings\n\nIn our current case, it is obviously a better choice to use the webclient for the needed changes to the USB settings. \nThe good thing about the CLI approach (we already used here): As the CLI forced us to deploy the USB settings, we could\nconfirm that they are working, before we store them into a persistent template.\n\nLet's go on with storing the USB settings:\n\nAgain we hit the \"store\" button, this time in the \"USB settings\" tab. Once more we call the template `tutorial1` (there\nis no conflict with the TriggerAction template stored under the same name, because a different namespace is used for \nUSB settings).\n\n\nNow we have two new and persistently stored templates::\n1) a template for the TriggerAction set, named `tutorial1`\n2) a template for the USB settings, also name `tutorial1`\n\nAssuming the state (of current USB settings, TriggerActions or both) changed somehow, we could reload both of the \nstored settings at once, by issuing the following CLI command:\n\n```\nP4wnP1_cli template deploy --usb tutorial1 --trigger-actions tutorial1\n```\n\nThe command `P4wnP1 template deploy` could load a template for each of the sub systems of P4wnP1 A.L.O.A. in a single\nrun (for the network subsystem multiple templates could be loaded, one per each adapter). Deploying templates for\nvarious subsystems is considered a common task while working with P4wnP1 A.L.O.A., because in most cases it should be \nnecessary to reconfigure several subsystems to reach a single goal. To account for this, so called *Master Templates*\nhave been introduced.\n\nA Master Template could consist of:\n- a already stored TriggerAction set template\n- a already stored USB settings template\n- a already stored WiFi settings template\n- a already stored Bluetooth settings template\n- multiple stored Network settings templates (one per each adapter)\n\nA Master Templated could be defined, stored or loaded, using the \"Master Template Editor\" from the \"Generic Settings\"\ntab of the webclient. Using the webclient is a convenient way to define Master Templates, as it supports you by only\nallowing to select templates, which have been already stored for the respective sub systems (and currently the \nwebclient is the only way to define Master Templates).\n\nSo lets define a Master Template for our current task:\n1) Navigate to the \"Generic Settings\" tab of the webclient\n2) On the \"Master Template Editor\" click on the small button on the right to the \"TriggerActions Template\" field\n3) From the Dialog choose the `tutorial1` template and confirm with \"OK\" button\n4) If you selected the wrong template, re-open the dialog and select a different one or use the \"x\" icon on the right \nto \"TriggerAction Template\" to delete the current selection\n5) Repeat the steps for the \"USB Template\" selection, again choose `tutorial1` (which is a different template for\nthe USB sub system, although it shares the name with the one for the TriggerActions)\n6) Check that the correct templates have been selected for bot, USB and TriggerActions, and all other Templates are left \nempty\n7) Store the new Master Template, by hitting the \"Store\" button and providing the name `tutorial1`\n\nTo confirm if that the template has been stored, you could use the \"Load Stored\" button - the template should be listed\nin the selection. Cancel the \"Load Store\" dialog again.\n\nNow hit the \"Deploy Stored\" button, select the template named `startup` and confirm with \"OK\".\n\nIn contrast to the \"Load Stored\" function, which loads a stored template to the Master Template Editor, the \n\"Deploy Stored\" function applies all settings of a Master Template to the corresponding sub systems of P4wnP1, \nimmediately (without even loading them to the Master Template Editor).\n\nAs the `startup` Master Template overwrites the current WiFi settings, it could happen that you have lost the connection\nto the webclient and need to reconnect to the P4wnP1 WiFi network.\n\nOnce you've reconnected successfully and inspect the current USB settings and current TriggerActions, the settings we\nstored earlier have been overwritten by the sub settings of the `startup` Master Template.\n\nThere are two ways to deploy the `tutorial1` Master Template again:\n1) Deploying it using the \"Deploy Stored\" dialog from the \"Master Template Editor\" (as done with the `startup` Master \nTemplate a minute, ago)   \n2) Deploying it using the CLI client with `P4wnP1_cli template deploy --full tutorial1` (the `--full` flag is an alias \nfor Master Template)\n\nBeeing able to deploy the Master Template `tutorial1`, we already achieved one of our new goals:\n \nIt is assured, that the USB configuration has the keyboard functionality enabled when we load our keystroke injection\nsetup. \n\nA quick summary on how this works:\n- the Master Template `tutorial1` loads USB settings, called `tutorial1` which have\n  - USB keyboard and USB mouse enabled\n- the Master Template `tutorial1` loads a TriggerAction set with a single TriggerAction\n  - the TriggerAction starts the HID script `tutorial1.js` each time P4wnP1 gets attached to an USB host\n    - the HIDScript starts typing, once the `waitLED` trigger fires (keyboard driver ready) and ends after a successive\n    LED change \n \n\nThe only remaining goal is the following: The created setup should applied at boot of P4wnP1 A.L.O.A., without the need \nof manually loading of the TriggerAction set. The setup has to survive a reboot of P4wnP1.\n\nThis goal could be achieved pretty easy now. The \"Generic Settings\" tab of the webclient presents a card called\n*Startup Master Template*. Changing the Startup Master Template to `tutorial1` at this point would have immediate effect\nand it would likely *destroy the working boot configuration of P4wnP1 A.L.O.A.\". \n\n\n**Important: If a Master Template has sub templates left empty (f.e. if there is no Bluetooth template selected), the \nrespective sub system isn't reconfigured when the Master Template is loaded. While this comes in handy for runtime \nreconfiguration without resetting already running sub systems like the USB stack or WiFi stack if not needed, Master \nTemplates used as Startup Master Template leave sub systems without defined templates in an UNDEFINED STATE. If, for \nexample, no valid WiFi template is provided, it is unlikely that P4wnP1 A.L.O.A. will be reachable via WiFi after \nreboot**\n\nSo before deploying our new `tutorial1` Master Template as Startup Master Template, we assure proper settings are loaded \nfor the other subsystem. We do that like this:\n\n1) From the \"Master Template Editor\" hit the \"Load Stored\" button and reload the `tutorial1` template to the editor.\n2) The template should have `tutorial1` set for \"TriggerActions Template\" and for \"USB template\"\n3) For \"WiFi Template\" select the template named `startup` \n4) For \"Bluetooth Template\" select the template named `startup` \n5) For \"Network Templates\" select the templates named:\n    1) `bteth_startup` \n    2) `usbeth_startup`\n    3) `wlan0_startup_dhcp_server`\n6) Overwrite the `tutorial1` Master Template with the new settings (hit \"Store\", enter `tutorial1` and confirm with \n\"OK\")\n7) Double check that the changes have applied, by hitting \"Load Stored\", again, and selecting `tutorial1`. All \nsubsections of the loaded Master Template should look like described here.\n\nNow we are ready to deploy our new Master Template as Startup Master Template. After doing so we hit the \"reboot\" \nbutton.\n\nOnce rebooted, P4wnP1 A.L.O.A. should trigger the HIDScript automatically (and should still be reachable via WiFi, \nto allow reconfiguration)\n\n**Congratulations, all goals achieved**\n\nYou have learned about the very basic workflow concepts of P4wnP1 A.L.O.A.\n\n## 3. Where to go from here\n\nIt is currently not possible to provide a full documentations. So here are some comments on topics which haven't been \ntouched, yet, but are worth investigating.\n\n### BashScripts\n\nP4wnP1 allows running BashScripts from TriggerActions. The scripts which are usable from TriggerActions are homed at\n`/usr/local/P4wnP1/scripts`. If a script is called from a TriggerAction, several arguments (like the actual trigger) are\nhanded in via bash variables. The file `/usr/local/P4wnP1/scripts/trigger-aware.sh` provides a nice example of a bash\nscript which acts differently, depending on the calling trigger. It is worth having a look onto this script, as it uses\nall \"TriggerAction variables\" currently available.\n\n### GPIO\n\nThe community of the old P4wnP1 version occasionally came up with hardware mods or extensions of the Rapsberry PI and\nthe question how to integrate them. It isn't possible for me to provide a generic solution to this problem. Neither\nis it a good idea, to provide support for a very specific hardware extension, which is only used by a few people. With\nthe introduction of TriggerAction the idea came up, to support GPIO as both, Triggers via GPIO input and Actions issuing\nGPIO output. Although not planned for the first release, this feature has already been implemented. I still haven't\nhad the time to document it and it could easily happen that some things change. The functionality uses the \"periph.io\"\nlibrary with some minor extension (customized edge detection with custom de-bounce for GPIO, thanks to @marcaruel for \nexchange on this) \n\n### nexmon KARMA \n\nThe WiFi firmware included with P4wnP1 A.L.O.A. has been modified (utilizing nexmon framework) to support KARMA.\nThis feature hasn't made it into the core so far (needs some rework firmware-wise) and thus isn't available from \nwebclient or CLI. If you want to play around with the karma features, there is a legacy python CLI, which allows setting\nthe KARMA options on the fly. The python script could be found here:\n`/usr/local/P4wnP1/legacy/karmatool.py`\n\nTip: To get most out of the KARMA functionality, you should setup P4wnP1 A.L.O.A. to provide a WiFi Access Point without\nauthentication, otherwise it wouldn't make to much sense. For poor beacon flooding this isn't needed, but (static) \ncustom SSIDs for beaconing are limited in their number (saving resources on the WiFi chip)\n\nHelp screen of karmatool.py:\n\n```\nroot@kali:/usr/local/P4wnP1/legacy# ./karmatool.py \nFirmware in use seems to be KARMA capable\nFirmware configuration tool for KARMA modified nexmon WiFi firmware on Pi0W/Pi3 by MaMe82\n=========================================================================================\n\nRePo:       https://github.com/mame82/P4wnP1_nexmon_additions\nCreds to:   seemoo-lab for \"NEXMON\" project\n\nA hostapd based Access Point should be up and running, when using this tool\n(see the README for details).\n            \nUsage:      python karmatool.py [Arguments]\n\nArguments:\n   -h                   Print this help screen\n   -i                   Interactive mode\n   -d                   Load default configuration (KARMA on, KARMA beaconing off, \n                        beaconing for 13 common SSIDs on, custom SSIDs never expire)\n   -c                   Print current KARMA firmware configuration\n   -p 0/1               Disable/Enable KARMA probe responses\n   -a 0/1               Disable/Enable KARMA association responses\n   -k 0/1               Disable/Enable KARMA association responses and probe responses\n                        (overrides -p and -a)\n   -b 0/1               Disable/Enable KARMA beaconing (broadcasts up to 20 SSIDs\n                        spotted in probe requests as beacon)\n   -s 0/1               Disable/Enable custom SSID beaconing (broadcasts up to 20 SSIDs\n                        which have been added by the user with '--addssid=' when enabled)\n   --addssid=\"test\"     Add SSID \"test\" to custom SSID list (max 20 SSIDs)\n   --remssid=\"test\"     Remove SSID \"test\" from custom SSID list\n   --clearssids         Clear list of custom SSIDs\n   --clearkarma         Clear list of karma SSIDs (only influences beaconing, not probes)\n   --autoremkarma=600   Auto remove KARMA SSIDs from beaconing list after sending 600 beacons\n                        without receiving an association (about 60 seconds, 0 = beacon forever)\n   --autoremcustom=3000    Auto remove custom SSIDs from beaconing list after sending 3000\n                        beacons without receiving an association (about 5 minutes, 0 = beacon\n                        forever)\n   \nExample:\n   python karmatool.py -k 1 -b 0    Enables KARMA (probe and association responses)\n                                    But sends no beacons for SSIDs from received probes\n   python karmatool.py -k 1 -b 0    Enables KARMA (probe and association responses)\n                                    and sends beacons for SSIDs from received probes\n                                    (max 20 SSIDs, if autoremove isn't enabled)\n   \n   python karmatool.py --addssid=\"test 1\" --addssid=\"test 2\" -s 1\n                                    Add SSID \"test 1\" and \"test 2\" and enable beaconing for\n                                    custom SSIDs\n```\n \n\n### WiFi covert channel\n\nThe WiFi covert channel hasn't been ported to Go and isn't part of the P4wnP1 core. Anyways, the legacy functionality\nis provided. In order to make the covert channel run, several conditions have to be met:\n- a keystroke injection has to be applied to the target client to inject stage1\n- stage1 loads stage2 over a (simplified version) of the HID covert channel, thus a special USB HID device has to be \nprovided and a special HID covert channel server has to be started on P4wnP1, in order to provide stage2\n- a second server has to be started and interface the modified WiFi firmware, in order to manage client connecting\nin via the WiFi covert channel and provide interactive shell access to those clients (the server is a console \napplication which is meant to run in a terminal multiplexer, like `screen`)\n\nAll of the aforementioned conditions could be fulfilled using P4wnP1 A.L.O.A.'s feature set, if the needed components \n(HID stager, WiFi cover channel server, client agent to deliver) are provided.\n\nTo carry out such a task with P4wnP1 A.L.O.A. is a great example for its capabilities. Additionally it helps to\ndistinguish what P4wnP1 A.L.O.A. is meant to be and what is not meant to be.\n\nP4wnP1 A.L.O.A. is not meant to:\n- be a \"weaponized\" tool\n- provide RTR payloads, which could be carried out by everybody, without understanding what's going on or which risks\nare involved\n\nP4wnP1 A.L.O.A. is meant to:\n- be a flexible, low-cost, pocket sized platform\n- serve as enabler for tasks like the one described here\n- support prototyping, testing and carrying out all kinds of USB related tasks, commonly used during pentest or\nredteam engagements, without providing a finalized static solution\n\nIn set sense, the `/usr/local/P4wnP1/legacy` folder homes the needed external tools to run the WiFi covert channel\n(namely the WiFi server, the HID covert channel stager server and the WiFi covert channel client agent). Those \ncomponents could be considered as external parts (don't belong to P4wnP1 A.L.O.A. core).\n\nAdditionally P4wnP1 A.L.O.A. provides a configuration, which utilizes the given components to do the following things:\n- drive-by against Windows hosts in order to deliver in-memory client code to download stage2 via HID covert channel, \nbased on keystroke injection (HIDScript)\n- starting the keystroke injection, as soon as P4wnP1 is connected to a USB host (TriggerAction issuing HIDScript)\n- bring up the stager, which delivers the WiFi covert channel client agent via HID covert channel, as soon as the\nkeystroke injection starts (TriggerAction running a bash script, which again starts the external server)\n- bring up the WiFi covert channel server, when needed (same TriggerAction and BashScript)\n- deploy a USB setup which provides a USB keyboard (to allow keystroke injection) and an additional raw HID device \n(serves as covert channel for stage2 delivery) - the USB settings are stored in a settings template\n- deploy a WiFi setup, which allows remote access to P4wnP1, in order to allow interaction with the CLI frontend of\nthe WiFi covert channel server - the WiFi settings are stored in a settings template\n- provide a single point of entry, to deploy all the needed configurations at once (done by a Master Template, which\nconsists of proper WiFi settings, proper USB settings and the TriggerActions needed to start the HIDScript)\n\nThe Master Template is called \"wifi covert channel\". By deploying it from the \"generic settings\" tap of the webclient\n(\"DEPLOY STORED\" from the Master Template Editor) P4wnP1 A.L.O.A. is ready configured to execute all the describe steps.\n\nAs soon as it is re-attached to a USB host, it should start typing out stage1 and the according servers are started \ninternally.\nFrom a SSH session (for example over WiFi) the WiFi covert channel server could be accessed using `screen -d -r wifi_c2`\nto interact with clients, which connected back over the WiFi covert channel.\nAs the keystroke injection depends on the USB hosts language layout, the according HIDScript called \n`wifi_covert_channel.js` has a variable `language` which could be used to adjust the keyboard layout in use. \nAdditionally there is a variable called `hide` (false by default). If `hide` is set to true, the console Window on\nthe client gets hidden while stage1 is typed. This, again, pinpoints how complex tasks could be reduced to a simple bool\nvariable, thanks to HIDScript and the backing JavaScript engine. \n\nThe \"wifi covert channel\" demo provided with P4wnP1's Master Templates could be used as Startup Master Template, too, as\nWiFi access is still possible and thus the setup could be changed again, remotely at any time. \n\nThe involved BashScript, which is called from a TriggerAction is a good example how flexible the CLI client could get.\nAs the HID stager needs to know on which device file to listen (the one which represents the generic HID device), but\nthis information is only available at runtime (depends on enabled USB gadget functions), the script requests the CLI\nto report the correct HID device by running `hidraw=$(P4wnP1_cli usb get device raw)`.\n\nThe full BashScript is hosted in the folder `/usr/local/P4wnP1/scripts`, as all bash scripts which should be accessible\nfrom TriggerActions. \n\n### Bluetooth NAP\n\nP4wnP1 provides Bluetooth based network functionality over the Bluetooth Network Encapsulation Protocol (BNEP).\nThe currently most interesting feature is the Bluetooth Network Access Point (NAP), which allows IP based Bluetooth \nremote access to P4wnP1, for example from mobiles.\n\nIn order to use this feature some things should be known:\n- The bluetooth network interface, called `bteth` could be configured and templated like the other network interfaces \n(webclient or CLI)\n- In order to allow NAP access from an Android mobile (iPhone untested), the mobile not only needs to connect, but \nadditionally P4wnP1 has to hand out a proper IP for the default gateway on the `bteth` interface via DHCP. This is, \nbecause the mobile wants to use the NAP as gateway to the Internet (which would be the intended use). If the NAP itself\nwouldn't provide a gateway, the Android Mobile would do no further requests after the DHCP D.O.R.A. The easiest way to\novercome this, is to instruct the DHCP server to provide the IP of the `bteth` interface itself as default gateway \n(DHCP option 3). Even if there is no real upstream connection, this worked during my tests - as the mobile has to access\nthe gateway with layer3 communication in order to \"phone home\". Even if successive connectivity tests fail, the working\nlayer 3 connection persists. This allows, for example, SSH access via Bluetooth. With \"High Speed\" enabled, the \nwebclient works pretty nice, too.\n- In order to allow PIN based pairing Simple Secure Pairing (SSP) has to be disabled. If SSP is enabled, the running\nPairing agent confirms every passkey (which means even less security than with legacy PIN pairing, as every device is \nable to connect). Maybe a confirmation dialog for SSP based passkey pairing will be implemented for the CLI/webclient\nin future, but currently this is out of scope. I highly suggest to disable \"discoverable\" and \"bondable\" if SSP is in\nuse, as soon as the intended device has paired.\n- Another shortcoming of having SSP disabled, is that \"High Speed\" wouldn't be usable for bluetooth conections (or\nto enable High Speed, pairing has to be done with SSP). Without \"High Speed\" enabled (uses 802.11 frames for \ncommunication) it would take about 10 minutes to request the webclient, with high speed enabled it takes some seconds.\nUsing SSH and the CLI client over a NAP without \"High Speed\" should be fine, though.\n- The default Bluetooth network interface settings (`bteth_startup`) and the default Bluetooth settings (`startup`) \nshould allow \"Low Speed\" access over SSH with legacy PIN pairing. The PIN is `1337` and could be changed from the \nwebclient. \n\n### TriggerAction Groups\n\nThe TriggerActions come with a nice rooting capability called \"Groups\". I didn't managed to come up with a feature demo\nin time, but I'm planning to include an example for an LED based 4 bit binary counter (using GPIOs, a toggle switch\nand 4 LEDs).\n\nThe idea of groups is the following:\n\nConsider you want to have 4 TriggerActions (TAs) firing on the exact same Trigger (for example \"on attached to USB host\").\nYou could achieve this by creating 4 TAs, each with the Trigger \"on attached to USB host\".\n\nAlternatively, you could bring up a TriggerAction which sends the value `1` to a group named `\"connected\"` when the \n\"on attached to USB host\" occurs. Now you define your other 4 TriggerActions to fire when the value `1` is received on\na group named `\"connected\"`. The result would be the same and not make too much sense for now (in fact it needs one \nmore TriggerAction). The only positive effect, for now, is that the TriggerActions are slightly more readable, thanks\nto the group name, which could be chosen freely.\n\nNow the first advanced thing you could do, is to run the following CLI command:\n\n```\nP4wnP1_cli trigger send --group-name=connected --group-value=1\n```\n\nThis command would have the exatc same effect as the \"on attached to USB host\" host TriggerAction and all 4 other\nTAs, which are waiting for the value `1` to arrive on the group `connected` would fire. As you maybe remember, the\nCLI client could run remotely (from different platforms), so it could be used to Trigger command remotely.\n\nThe Trigger which reacts on \"Group channels\" is called \"value on group channel\". The more interesting trigger is called\n\"multiple values on group channel\". This \"multiple values\" trigger allows to listen for ordered sequences of values, or \none of multiple values or all values in an unordered sequence, before it fires.\n\nLet's say you qant to fire a BashScript, when these conditions are met:\n- The WiFi AP is up\n- P4wnP1 has been connected to a USB host\n\nYou could create TAs for both events like this:\n1) On \"WiFi AP up\" --> send value 1 to group \"conditions\"\n2) On \"attached to USB host\" --> send value 2 to group \"conditions\"\n\nNow you could deploy a third TriggerAction like this\n- On \"multiple values on group channel\"; values (1,2); type \"All (logical AND)\" --> start bash script\n\nIn this configuration, the bash script would only start if both \"condition\" Trigger have fired.\n\nIf \"exact ordered sequence\" would have been used, instead of \"All (logical AND)\" for the type, the bash script would\nonly start if the WiFi AP come up before the USB connected Trigger (not the otherway around). In combination with GPIO\ntriggers, this could for example be used, to trigger actions based on the input of a simple PIN pad.\n\nI'm sure you have some nice usage ideas for \"group\" channels.\n\nWorth mentioning:\n\nThe CLI client is able to do a blocking wait, till a dedicated value arrives on a \"group channel\", using a command like\nthis:\n\n```\nP4wnP1_cli trigger wait --group-name=waitgroup --group-value=1\n```\n\nThis could be used, to drive scripts from TriggerActions, utilizing the CLI (with their full power like GPIO).\n\n\nWork in progress, missing sections:\n- HIDScript Trigger variables (variables handed in to HIDScripts fired from TriggerActions)\n- HIDScript helpers (powershell functions)\n- HIDScript demo snake (mouse)\n- USB Mass storage (genimg helper)\n\n## 4. Rescue: Help, I can't reach P4wnP1 A.L.O.A. as i messed up the configuration\n \nP4wnP1 A.L.O.A. doesn't protect you from misconfiguration, which render it unusable (as a root console wouldn't protect\nyou from running `rm -rf /`).\n\nIn case you messed everything up, here some ideas how to fix things:\n\n### Database backup\n\nBefore you take critical changes to a still working P4wnP1 configuration, create a database backup. This could either be \ndone from the \"Generic Settings\" tab of the webclient or the the CLI, with the `P4wnP1_cli db backup` command.\nThe backup will be stored in the folder `/usr/local/P4wnP1/db` under the chosen name.\nThe \"restore\" function or `P4wnP1_cli db restore` command could be used to restore a given backup.\nA backup contains all stored templates (USB, WiFi, Network, Bluetooth, TriggerActions, MasterTemplates) and the Startup\nMaster Template which has been set. The backup doesn't include HIDScripts or BashScripts, as both are stored as files\nto allow easy editing.\n\n### I have no backup and messed everything\n\nWhen P4wnP1 A.L.O.A. starts, it checks if a database exists. If the database doesn't exist it fills a new database based\non an initial backup which ships with P4wnP1 A.L.O.A.\n\nThe initial backup is stored at `/usr/local/P4wnP1/db/init.db` and **should never be deleted or overwritten**.\n\nIn order to force P4wnP1 to re-create the actual database has to be deleted. This could be achieved by mounting the \nP4wnP1 A.L.O.A. SD card on a system which is capable of writing EXT partitions.\n\nOnce done, delete the folder `/usr/local/P4wnP1/store` from the SD card's root partition. This deletes the database and\nthus forces re-creation once P4wnP1 is booted, again \n\n### I have a backup, but can't access P4wnP1 to restore it\n\nIf you can't restore an existing database, because you have no access, you could still follow the steps from \"I have no \nbackup and messed everything\". In addition to deletion of the `/usr/local/P4wnP1/store` replace the \n`/usr/local/P4wnP1/db/init.db` file with the one from your backup (be sure to have a backup copy of init.db).\n\nThis should re-create your custom DB once P4wnP1 is rebooted.\n\n### I messed the Startup Master Template of my backup\n\nIf you have a backup for which the Startup Master Template doesn't work. You have to do some additional steps, as it\nisn't possible to change the Startup Template directly in a backup.\n\nFirst follow the steps from \"I have no backup and messed everything\" which re-create the initial P4wnP1 database.\nAfter a reboot of P4wnP1, you should be able to access P4wnP1's webclient remotely, again.\n\nMove on to the \"Generic Settings\" and restore your own backup (the one with the wrong Startup Master Template).\n\nThe \"Startup Master Template\" should show your \"broken\" Master Template as selected. If this isn't the case, reload\nthe browser tab hosting the webclient application.\n\nAgain, navigate to the \"Generic Settings\" tab and select a Startup Master Template which is known to work.\n\nAt this point you should be ready to reboot. \n\n### none of the above helped\n\nSorry, seems you have to recreate your P4wnP1 A.L.O.A. SD crad from a clean image.\n\n## 5. Credits\n\nUnder construction, random order\n\n- @JohanBrandhorst (close exchange on gRPC-web via gopherjs, ridiculous fast implementation of \n\"websocket for server streaming\", feature request)\n- @steevdave, @_binkybear (kali build scripts, discussion ongoing exchange)\n- @Re4sonKernel (Support on moving P4wnP1 kernel changes to a well maintained and popular repo, collaboration on Bluez\nfixes)\n- @SymbianSyMoh (Inspiration for HID attack re-trigger without reboot)\n- @quasarframework (could list this under 3rd party libs, but the work done here is insane; the look&feel of the \nP4wnP1 webclient is more or lees based on default components of this beautiful library)\n- @CyberArms (one of the most early P4wnP1 supporters, writer of the best tutorial and even books on such topics)\n- @LucaBongiorni (not only one of the earliest supporters, he does in hardware, what I'm only to do in software; he\ngives talks on the USB topic and honors Open Source solutions, all in all a great guy and an inspiration)\n- @evilsocket (his block pushed me towards Go, a great OSS developer, read his code and you know what I mean)\n- @RoganDawes and @Singe from @SensePost (inspiring guys)\n- @Swiftb0y (Early supporter, creator of the \"old\" P4wnP1 WiKi, early tester for ideas on P4wnP1 A.L.O.A.)\n- @marcaruel (discussion on GPIO edge detection using periph.io) \n\n## 6. ToDos and support\n\nThis isn't a full fledged ToDo list, but some milestones are left and I'd be happy to receive som community support on\nthis\n- Porting the full HID covert channel functionality to Go core (I'm on my own with that)\n- **add Bluetooth configuration command for CLI**\n- Create additional keyboard layouts (currently br, de, es, fr, gb, it, ru and us are supported) \n- extend Bluetooth functionality to allow connection to other discoverable devices (authentication and trust)\n- move WiFi KARMA functionality from dedicated python tool to P4wnP1 core (with webclient support))\n- Create full documentation for HIDScript (basically only the mouse part is missing)\n- Create full documentation for P4wnP1 (hoping for community)\n- Get rid of a remaining dependency on the docker netlink (see README of the `netlink` folder)\n\nNote on Bluetooth: \n\nP4wnP1 works with custom bindings to the Bluez API. Although the Bluez API supports Low Energy (GATT,\nemulating peripherals etc.) it isn't planned to integrate this functionality into P4wnP1 A.L.O.A. \n\nNote on Nexmon: \n\nP4wnP1 utilizes nexmon. Most people know nexmon as a firmware modification which allows enabling monitor\nmode and package injection for broadcom WiFi chips (including the BCM43430a1, which is used by the Raspberry Pi Zero W).\nBut nexmon is more, it is a framework which allows modifying ARM firmware blobs (after a bit of reversing), with patches\nwritten in high level C code. P4wnP1 uses this framework, to apply custom patches to the WiFi firmware, which enable\nhardware based KARMA support and firmware (as well as driver) support for the WiFi covert channel. It isn't the aim\nof this modifications to provide proper monitor mode or injection support for the built-in WiFi interface. Although, \nthe legacy nexmon monitor mode functionality is included in the current WiFi firmware, it is considered \"erroneous\", as\nit interferes with standard WiFi functionality used by P4wnP1 (crashes if the interface is used in station mode etc.). \n\n## 7. Copyright\n\n    P4wnP1 A.L.O.A.\n    Copyright (C) 2018 Marcus Mengs\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "b_proto.sh",
          "type": "blob",
          "size": 0.1845703125,
          "content": "#!/bin/bash\n# golang version\nprotoc -I proto/ proto/grpc.proto --go_out=plugins=grpc:proto\n\n# gopherjs version\nprotoc -I proto/ proto/grpc.proto --gopherjs_out=plugins=grpc:proto/gopherjs\n\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_support",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli_client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "common_web",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.2431640625,
          "content": "module github.com/mame82/P4wnP1_aloa\n\nrequire (\n\tgithub.com/AndreasBriese/bbloom v0.0.0-20180913140656-343706a395b7 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/dgraph-io/badger v1.5.5-0.20181020042726-fbb27786246d\n\tgithub.com/dgryski/go-farm v0.0.0-20180109070241-2de33835d102 // indirect\n\tgithub.com/godbus/dbus v4.1.0+incompatible\n\tgithub.com/golang/lint v0.0.0-20180702182130-06c8688daad7 // indirect\n\tgithub.com/golang/protobuf v1.5.2\n\tgithub.com/gopherjs/gopherjs v1.18.0-beta2\n\tgithub.com/gorilla/websocket v1.4.0 // indirect\n\tgithub.com/improbable-eng/grpc-web v0.0.0-20181111131931-77784bdb46c6\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/johanbrandhorst/protobuf v0.7.1\n\tgithub.com/mame82/hvue v0.0.0-20181029154725-6c76eb2e8ae9\n\tgithub.com/mame82/mblue-toolz v0.1.1\n\tgithub.com/mame82/mvuex v0.0.0-20181014150044-3964e4abefc6\n\tgithub.com/robertkrimen/otto v0.0.0-20180617131154-15f95af6e78d\n\tgithub.com/rs/cors v1.6.0 // indirect\n\tgithub.com/spf13/cobra v1.2.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2\n\tgolang.org/x/sys v0.0.0-20220412211240-33da011f77ad\n\tgoogle.golang.org/grpc v1.38.0\n\tgopkg.in/sourcemap.v1 v1.0.5 // indirect\n\tperiph.io/x/periph v3.3.0+incompatible\n)\n\ngo 1.13\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 64.814453125,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\ncloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\ncloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/AndreasBriese/bbloom v0.0.0-20180913140656-343706a395b7 h1:PqzgE6kAMi81xWQA2QIVxjWkFHptGgC547vchpUbtFo=\ngithub.com/AndreasBriese/bbloom v0.0.0-20180913140656-343706a395b7/go.mod h1:bOvUY6CB00SOBii9/FifXqc0awNKxLFCL/+pkDPuyl8=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bketelsen/crypt v0.0.4/go.mod h1:aI6NrJ0pMGgvZKL1iVgXLnfIFJtfV+bKCoqOes/6LfM=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd/v22 v22.3.2/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/badger v1.5.4 h1:gVTrpUTbbr/T24uvoCaqY2KSHfNLVGm0w+hbee2HMeg=\ngithub.com/dgraph-io/badger v1.5.4/go.mod h1:VZxzAIRPHRVNRKRo6AXrX9BJegn6il06VMTZVJYCIjQ=\ngithub.com/dgraph-io/badger v1.5.5-0.20181020042726-fbb27786246d h1:YFCfYk8kMkRVyXE/Dldb2utAE/A33Co6aKN7Mwlqig8=\ngithub.com/dgraph-io/badger v1.5.5-0.20181020042726-fbb27786246d/go.mod h1:VZxzAIRPHRVNRKRo6AXrX9BJegn6il06VMTZVJYCIjQ=\ngithub.com/dgryski/go-farm v0.0.0-20180109070241-2de33835d102 h1:afESQBXJEnj3fu+34X//E8Wg3nEbMJxJkwSc0tPePK0=\ngithub.com/dgryski/go-farm v0.0.0-20180109070241-2de33835d102/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.5.1 h1:mZcQUHVQUQWoPXXtuf9yuEXKudkV2sx1E06UadKWpgI=\ngithub.com/fsnotify/fsnotify v1.5.1/go.mod h1:T3375wBYaZdLLcVNkcVbzGHY7f1l/uK5T5Ai1i3InKU=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/godbus/dbus v4.1.0+incompatible h1:WqqLRTsQic3apZUK9qC5sGNfXthmPXzUZ7nQPrNITa4=\ngithub.com/godbus/dbus v4.1.0+incompatible/go.mod h1:/YcGZj5zSblfDWMMoOzV4fas9FZnQYTkDnsGvmh2Grw=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/lint v0.0.0-20180702182130-06c8688daad7/go.mod h1:tluoj9z5200jBnyusfRPU2LqT6J+DAorxEvtC7LHB+E=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/protobuf v1.2.0 h1:P3YflyNX/ehuJFLhxviNdFxQPkGK5cDcApsge1SqnvM=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\ngithub.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v1.18.0-beta2 h1:XrlcXRFO3uZY8dvqr61u0FeP4xC5SOWz9eO98u0amd0=\ngithub.com/gopherjs/gopherjs v1.18.0-beta2/go.mod h1:w5yUhU8/pTyZEIIyr7dbp6yXwAzdmTdrmd/NQESM8ag=\ngithub.com/gorilla/websocket v1.4.0 h1:WDFjx/TMzVgy9VdMMQi2K2Emtwi2QcUQsztZ/zLaH/Q=\ngithub.com/gorilla/websocket v1.4.0/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/hashicorp/consul/api v1.1.0/go.mod h1:VmuI/Lkw1nC05EYQWNKwWGbkg+FbDBtguAZLlVdkD9Q=\ngithub.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/improbable-eng/grpc-web v0.0.0-20181111131931-77784bdb46c6 h1:fiInNAWlGa8pfal31Ecx9XtI9VACwqsLLU1W3/X9nH8=\ngithub.com/improbable-eng/grpc-web v0.0.0-20181111131931-77784bdb46c6/go.mod h1:6hRR09jOEG81ADP5wCQju1z71g6OL4eEvELdran/3cs=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/johanbrandhorst/protobuf v0.7.1 h1:i1ItegxDXvyJDQbTraS2DpTxgUB0doNvSFueGhaEVsU=\ngithub.com/johanbrandhorst/protobuf v0.7.1/go.mod h1:B/uVA4AcXtCUytXZyu2PjnIQv85aXogvVWyHPPdkDBE=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/magiconair/properties v1.8.5/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/mame82/hvue v0.0.0-20181029154725-6c76eb2e8ae9 h1:gqXznww5PDcA+azaR7RGUMJ57rwphLlibC6mFoF4ygk=\ngithub.com/mame82/hvue v0.0.0-20181029154725-6c76eb2e8ae9/go.mod h1:j2gLMvH27z0yuHArILmmTwUqLhYF1nQFawGgxpYF4bs=\ngithub.com/mame82/mblue-toolz v0.1.0-alpha h1:We4TUn+EjLJBMe++1Ym630E5PLpfpWafegSPCrogJNo=\ngithub.com/mame82/mblue-toolz v0.1.0-alpha/go.mod h1:b7HQ2SWrrYqdxXKzabGkj+eG2OeT+8MvuAObGFrdcPQ=\ngithub.com/mame82/mblue-toolz v0.1.1 h1:0GCHauAnaqo31L3ZNxyDMEq85lZpyZs3I+uSIZpiUSc=\ngithub.com/mame82/mblue-toolz v0.1.1/go.mod h1:b7HQ2SWrrYqdxXKzabGkj+eG2OeT+8MvuAObGFrdcPQ=\ngithub.com/mame82/mvuex v0.0.0-20181014150044-3964e4abefc6 h1:IfM8qGxHPvDc3g9iRuOIUnA+L/PPuSmTOEf0b7UCgwM=\ngithub.com/mame82/mvuex v0.0.0-20181014150044-3964e4abefc6/go.mod h1:VmXWRleQqhrqzAW1EXVY0eO4mNIzIKRT4Srseo0km7c=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=\ngithub.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.1/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/neelance/astrewrite v0.0.0-20160511093645-99348263ae86 h1:D6paGObi5Wud7xg83MaEFyjxQB1W5bz5d0IFppr+ymk=\ngithub.com/neelance/astrewrite v0.0.0-20160511093645-99348263ae86/go.mod h1:kHJEU3ofeGjhHklVoIGuVj85JJwZ6kWPaJwCIxgnFmo=\ngithub.com/neelance/sourcemap v0.0.0-20200213170602-2833bce08e4c h1:bY6ktFuJkt+ZXkX0RChQch2FtHpWQLVS8Qo1YasiIVk=\ngithub.com/neelance/sourcemap v0.0.0-20200213170602-2833bce08e4c/go.mod h1:Qr6/a/Q4r9LP1IltGz7tA7iOK1WonHEYhu1HRBA7ZiM=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml v1.9.3/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pkg/errors v0.8.0 h1:WdK/asTD0HN+q6hsWO3/vpuAkAr+tw6aNJNDFFf0+qw=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1 h1:iURUrRGxPUNPdy5/HRSm+Yj6okJ6UtLINN0Q9M4+h3I=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/robertkrimen/otto v0.0.0-20180617131154-15f95af6e78d h1:1VUlQbCfkoSGv7qP7Y+ro3ap1P1pPZxgdGVqiTVy5C4=\ngithub.com/robertkrimen/otto v0.0.0-20180617131154-15f95af6e78d/go.mod h1:xvqspoSXJTIpemEonrMDFq6XzwHYYgToXWj5eRX1OtY=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rs/cors v1.6.0 h1:G9tHG9lebljV9mfp9SNPDL36nCDxmo3zTlAf1YgvzmI=\ngithub.com/rs/cors v1.6.0/go.mod h1:gFx+x8UowdsKA9AchylcLynDq+nNFfI8FkUZdN/jGCU=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shurcooL/go v0.0.0-20200502201357-93f07166e636/go.mod h1:TDJrrUr11Vxrven61rcy3hJMUqaf/CLWYhHNPmT14Lk=\ngithub.com/shurcooL/httpfs v0.0.0-20190707220628-8d4bc4ba7749 h1:bUGsEnyNbVPw06Bs80sCeARAlK8lhwqGyi6UT8ymuGk=\ngithub.com/shurcooL/httpfs v0.0.0-20190707220628-8d4bc4ba7749/go.mod h1:ZY1cvUeJuFPAdZ/B6v7RHavJWZn2YPVFQ1OSXhCGOkg=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/shurcooL/vfsgen v0.0.0-20200824052919-0d455de96546 h1:pXY9qYc/MP5zdvqWEUH6SjNiu7VhSjuVFTFiTcphaLU=\ngithub.com/shurcooL/vfsgen v0.0.0-20200824052919-0d455de96546/go.mod h1:TrYk7fJVaAttu97ZZKrO9UbRa8izdowaMIZcxYMbVaw=\ngithub.com/sirupsen/logrus v1.8.1 h1:dJKuHgqk1NNQlqoA6BTlM1Wf9DOH3NBjQyu0h9+AZZE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/spf13/afero v1.6.0/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v0.0.3 h1:ZlrZ4XsMRm04Fr5pSFxBgfND2EBVa1nLpiy1stUsX/8=\ngithub.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=\ngithub.com/spf13/cobra v1.2.1 h1:+KmjbUw1hriSNMF55oPrkZcb27aECyrj8V2ytv7kWDw=\ngithub.com/spf13/cobra v1.2.1/go.mod h1:ExllRjgxM/piMAM+3tAZvg8fsklGAf3tPfi+i8t68Nk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.3 h1:zPAT6CGy6wXeQ7NtTnaTerfKOsV6V6F8agHXFiazDkg=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.8.1/go.mod h1:o0Pch8wJ9BVSWGQMbra6iw0oQ5oktSIBaujf1rJH9Ns=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/visualfc/goembed v0.3.3 h1:pOL02L715tHKsLQVMcZz06tTzRDAHkJKJLRnCA22G9Q=\ngithub.com/visualfc/goembed v0.3.3/go.mod h1:jCVCz/yTJGyslo6Hta+pYxWWBuq9ADCcIVZBTQ0/iVI=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.1/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngo.etcd.io/etcd/api/v3 v3.5.0/go.mod h1:cbVKeC6lCfl7j/8jBhAK6aIYO9XOjdptoxU/nLQcPvs=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.0/go.mod h1:IJHfcCEKxYu1Os13ZdwCwIUTUVGYTSAM3YSwc9/Ac1g=\ngo.etcd.io/etcd/client/v2 v2.305.0/go.mod h1:h9puh54ZTgAKtEbut2oe9P4L/oqKCVB6xsXlzd7alYQ=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220411220226-7b82a4e95df4 h1:kUhD7nTDoI3fVd9G4ORWrbV5NY0liEs/Jg2pv5f+bBA=\ngolang.org/x/crypto v0.0.0-20220411220226-7b82a4e95df4/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20180702182130-06c8688daad7/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220106191415-9b9b3d81d5e3/go.mod h1:3p9vT2HGsQu2K1YbXdKPJLVgG5VJdoTa1poYQBtP1AY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181108082009-03003ca0c849 h1:FSqE2GGG7wzsYUsWiQ8MZrvEd1EOyU3NCF0AW3Wtltg=\ngolang.org/x/net v0.0.0-20181108082009-03003ca0c849/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2 h1:CIJ76btIcR3eFI5EgSo6k1qKw9KJexJuRLI9G7Hp5wE=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210402161424-2e8d93401602/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c h1:5KslGYwFpkhGh+Q16bwMP3cOontH8FOep7tGV86Y7SQ=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8 h1:YoY1wS6JYVRpIfFngRf2HHo9R9dAne3xbkGOQ5rJXjU=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210403161142-5e06dd20ab57/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211019181941-9d821ace8654/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220412211240-33da011f77ad h1:ntjMns5wyP/fN65tdBD4g8J5w8n015+iIIs9rtjXkY0=\ngolang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20220411215600-e5f449aeb171 h1:EH1Deb8WZJ0xc0WK//leUHXcX9aLE5SymusoTmMZye8=\ngolang.org/x/term v0.0.0-20220411215600-e5f449aeb171/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191112195655-aa38f8e97acc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.10 h1:QjFRCZxdOhBJ/UNgnBZLbNV13DlbnK0quyivTnXJM20=\ngolang.org/x/tools v0.1.10/go.mod h1:Uh6Zz+xoGYZom868N8YTex3t7RhtHDBrE8Gzo9bV56E=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\ngoogle.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\ngoogle.golang.org/api v0.44.0/go.mod h1:EBOGZqzyhtvMDoxwS97ctnh0zUmYY6CxqXsc1AvkYD8=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8 h1:Nw54tB0rB7hY/N0NQvRW8DG4Yk3Q6T9cu9RcFQDu1tc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c h1:wtujag7C+4D6KMoulW9YauvK2lgdvCMS260jsqqBXr0=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/grpc v1.16.0 h1:dz5IJGuC2BB7qXR5AyHNwAUBhZscK2xVez7mznh72sY=\ngoogle.golang.org/grpc v1.16.0/go.mod h1:0JHn/cJsOMiMfNA9+DeHDlAU7KAAB5GDlYFpa9MZMio=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.38.0 h1:/9BgsAsa5nWe26HqOlvlgJnqBuktYOLCgjCPqsa56W0=\ngoogle.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0 h1:bxAC2xTBsZGibn2RTntX0oH50xLsqy1OxA9tTL3p/lk=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/ini.v1 v1.62.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/sourcemap.v1 v1.0.5 h1:inv58fC9f9J3TK2Y2R1NPntXEn3/wjWHkonhIUODNTI=\ngopkg.in/sourcemap.v1 v1.0.5/go.mod h1:2RlvNNSMglmRrcvhfuzp4hQHwOtjxlbjX7UPY/GXb78=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nperiph.io/x/periph v3.3.0+incompatible h1:WN3YBKL9iJQpMGv8ATMPLspWcFciYbc3U8uXi5EpoGE=\nperiph.io/x/periph v3.3.0+incompatible/go.mod h1:EWr+FCIU2dBWz5/wSWeiIUJTriYv9v2j2ENBmgYyy7Y=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "hid",
          "type": "tree",
          "content": null
        },
        {
          "name": "mgenetlink",
          "type": "tree",
          "content": null
        },
        {
          "name": "mnetlink",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlink",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "rbuild_debug.sh",
          "type": "blob",
          "size": 0.462890625,
          "content": "#!/bin/bash\necho compiling ...\nenv GOOS=linux GOARCH=arm GOARM=6 go build -gcflags \"all=-N -l\" -o build/P4wnP1_service cmd/P4wnP1_service/P4wnP1_service.go\nenv GOOS=linux GOARCH=arm GOARM=6 go build -o build/P4wnP1_cli cmd/P4wnP1_cli/P4wnP1_cli.go\nenv GOOS=linux GOARCH=arm GOARM=6 go build -o /tmp/ntest ntest.go\n\necho uploading ...\nscp /tmp/ntest 172.16.0.1:~/P4wnP1/build\nscp build/P4wnP1_service 172.16.0.1:~/P4wnP1/build\nscp build/P4wnP1_cli 172.16.0.1:~/P4wnP1/build\n\n"
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "web_client",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}