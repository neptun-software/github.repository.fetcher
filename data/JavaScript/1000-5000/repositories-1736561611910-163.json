{
  "metadata": {
    "timestamp": 1736561611910,
    "page": 163,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "keithwhor/nodal",
      "stars": 4510,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": ".DS_Store\ndocs/\nnode_modules/\nnpm-debug.log\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.220703125,
          "content": "language: node_js\nnode_js:\n  - \"6.0.0\"\naddons:\n  postgresql: \"9.4\"\nbefore_script:\n  - psql -c 'create database travis_ci_test;' -U postgres\n  - psql -c 'create database travis_ci_test_readonly;' -U postgres\nenv: NODE_ENV=test\n"
        },
        {
          "name": "LEARN.md",
          "type": "blob",
          "size": 13.041015625,
          "content": "# Learn Nodal\n\nNodal follows MVC patterns you're probably familiar with from the simplicity\nof Django and Rails. If you need more in-depth help,\n[full API documentation is available here](http://www.nodaljs.com/static/docs/index.html). Otherwise,\nlet's get started!\n\n# Starting Your Project\n\nTo begin your project, first install the latest version of Node (4.x) from\n[nodejs.org](http://nodejs.org). Once you've completed that, open your\nterminal and run:\n\n```\nnpm install nodal -g\n```\n(If you get an error, run `sudo npm install nodal -g` or fix permissions permanently by [following these directions](https://docs.npmjs.com/getting-started/fixing-npm-permissions).\nIt will take a few seconds to finish. At this point, you have the Nodal\ncommand line tools available and you can really get started!\n\nNext, run:\n\n```\nnodal new\n```\n\nA few prompts will walk you through the project creation process. Once you're\ndone, visit your new project folder.\n\n# Starting Your Server\n\nBegin your Nodal server with:\n\n```\nnodal s\n```\n\nAnd voila! You'll notice the port that it's running on is `3000`. If you want to\nchange that, go to `config/secrets.json`:\n\n```json\n{\n\n  \"development\": {\n    \"port\": 3000,\n  },\n\n  \"production\": {\n    \"port\": \"{{= env.PORT }}\",\n  }\n\n}\n```\n\nAnd modify the `\"port\": 3000,` line to whatever you'd like. Wait - is this magic?\nNot really. **Every file in ./config/ will get loaded into a special Config object**.\nNamely, into `Nodal.my.Config.{filename}` assuming `const Nodal = require('nodal')`.\n\nRemember this! This is very important for setting environment variables. The\nvalues that are loaded are based on your environment, set by your `NODE_ENV` environment\nvariable (defaults to development).\n\nLet's see why the server is running on port 3000 by looking in `./cluster.js`...\n\n```javascript\nmodule.exports = (() => {\n\n  'use strict';\n\n  const Nodal = require('nodal');\n  const cluster = require('cluster');\n\n  if (cluster.isMaster) {\n\n    const daemon = Nodal.require('app/daemon.js');\n    daemon.start(Nodal.my.Config.secrets.PORT);\n\n  } else {\n\n    const app = new Nodal.Application();\n    app.listen(Nodal.my.Config.secrets.PORT);\n\n\n  }\n\n})();\n```\n\nNot so magic after all. We're telling the server daemon to start, and once it's running,\nto telling any application processes that spawn to listen on the provided port.\n\n# Routing\n\nYour server has started, but how do HTTP requests know where to go? Easy,\nlet's look in `./app/router.js`.\n\n```javascript\nmodule.exports = (function() {\n\n  'use strict';\n\n  const Nodal = require('nodal');\n  const router = new Nodal.Router();\n\n  /* Middleware */\n  /* executed *before* Controller-specific middleware */\n\n  const CORSMiddleware = Nodal.require('middleware/cors_middleware.js');\n  // const ForceWWWMiddleware = Nodal.require('middleware/force_www_middleware.js');\n  // const ForceHTTPSMiddleware = Nodal.require('middleware/force_https_middleware.js');\n\n  router.middleware.use(CORSMiddleware);\n  // router.middleware.use(ForceWWWMiddleware);\n  // router.middleware.use(ForceHTTPSMiddleware);\n\n  /* Renderware */\n  /* executed *after* Controller-specific renderware */\n\n  const GzipRenderware = Nodal.require('renderware/gzip_renderware.js')\n\n  router.renderware.use(GzipRenderware);\n\n  /* Routes */\n\n  const IndexController = Nodal.require('app/controllers/index_controller.js');\n  const StaticController = Nodal.require('app/controllers/static_controller.js');\n  const Error404Controller = Nodal.require('app/controllers/error/404_controller.js');\n\n  /* generator: begin imports */\n\n\n  /* generator: end imports */\n\n  router.route('/').use(IndexController);\n  router.route('/static/*').use(StaticController);\n\n  /* generator: begin routes */\n\n\n  /* generator: end routes */\n\n  router.route('/*').use(Error404Controller);\n\n  return router;\n\n})();\n```\n\nThings to make note of here: The design pattern for `module.exports = (function() { /*...*/ })()`\nwhere you export an IIFE is the standard in Nodal. The reason we do this is to encourage\nconsistency in understanding what's getting exported. A developer looking to quickly debug\ncan jump to the bottom of a file and look for the return statement to see what was\nactually exported.\n\nFirst we see Middleware and Renderware being added to the Controller. Middleware\nset on the router is executed *for every endpoint*, and happens *before*\nController-specific middleware. Renderware is similarly executed on every\nendpoint, but happens *after* Controller-specific renderware. The execution\nflow looks like this...\n\n```\nClient Request ->\nController#before ->\nRouter Middleware ->\nController Middleware ->\nController#get, put, post, del ->\nController Renderware ->\nRouter Renderware ->\nController#after ->\nServer Response\n```\n\nNext, **Controllers are all loaded very explicitly**. This follows Django's routing\nstyle. The router itself takes regex and will compare an incoming request to its\npattern in the order that they're added.\n\nAlso make note of the `/* generator: ... */` lines. These are used as boilerplate\nfor automatic controller importing / route addition from the command line file generators.\nYou should avoid removing these lines.\n\nWe see in the basic routing structure that we check to hit the index and the static\nfolder before going through generated routes (special cases) and finally fall\nback to a 404 if nothing is hit.\n\n# Controllers\n\nSo what exactly happens when you hit the index route? Exploring `./app/controllers/index_controller.js`\ngives us the answer.\n\n```javascript\nmodule.exports = (function() {\n\n  'use strict';\n\n  const Nodal = require('nodal');\n\n  class IndexController extends Nodal.Controller {\n\n    get() {\n\n      this.render(\n        Nodal.Template.generate('index.html').render(\n          this.params,\n          {\n            name: 'My Nodal Application'\n          }\n        )\n      );\n\n    }\n\n  }\n\n  return IndexController;\n\n})();\n```\n\nWhen the index route is hit, a new *instance* of `IndexController` is created.\nThis is given some special properties accessible from referring to the instance.\nWithin a method, `this.params` contains client request parameters (`this.params.query`,\n  `this.params.id`, `this.params.body`, `this.params.ip_address`, etc.) and\n  `this.app` refers to your main `Application` instance, incase you need\n  to access any \"global\" properties from it.\n\nWe can see here a `get()` method, which is called when an HTTP `GET` request\ncomes to the controller. Anything not specified will fall back to a\n`501 - Not Implemented` response. Available methods that can be triggered from\na route are:\n\n```javascript\nget()\npost()\nput()\ndel()\noptions()\n```\n\nOr, some CRUD-like equivalents:\n```javascript\nindex() // GET with no this.params.id\nshow() // GET with a this.params.id\ncreate() // POST\nupdate() // PUT\ndestroy() // DELETE\n```\n\nTo render a string from within a controller, use `this.render()`. It can also\nrender JSON automatically if you provide a serializable object. **For API-formatted\nresponses use:** `this.respond()`. Other ways to respond to requests are\navailable [in the API documentation](http://www.nodaljs.com/static/docs/index.html).\n\n## Using 'this' in Controllers\n\nPlease keep in mind that ES6 arrow functions (`fnAdd = (a, b) => a + b;`)\n*do not create a new context for* `this`. If you have nested callbacks\nin a Controller (quite common), it is a best practice to keep using anonymous\narrow functions to preserve your reference to the controller instance so responses\nare easy to send out. (No `self = this;` anti-patterns.)\n\n## Creating Controllers with the CLI\n\nCreate a new controller with the CLI using\n\n```\nnodal g:controller ControllerName\n```\n\nIt will then create `controller_name_controller.js` in the base `./controllers/` directory.\n\nIf you'd like to put it in another directory, use:\n\n```\nnodal g:controller path/to/ControllerName\n```\n\n**Generating controllers this way will also automatically create best-guess routes\nin router.js.**\n\nYou can create a controller for a specific model (auto include CRUD features) with:\n\n```\nnodal g:controller --for ModelName\n```\n\n# Models\n\nCreating models is easy. Your project won't start out with any (they're not\nnecessary for all server types), but you can generate them with:\n\n```\nnodal g:model ModelName\n```\n\nThis will create both a *Model* and a *Migration*. The Model will look like;\n\n```javascript\nmodule.exports = (function() {\n\n  'use strict';\n\n  const Nodal = require('nodal');\n\n  class ModelName extends Nodal.Model {}\n\n  ModelName.setDatabase(Nodal.require('db/main.js'));\n  ModelName.setSchema(Nodal.my.Schema.models.ModelName);\n\n  return ModelName;\n\n})();\n```\n\nOur database is set from `./db/main.js` which grabs connection data from\n`./config/db.json`. (Explore both files to see what's happening. Same as\n`./config/secrets.json` above.) Note that Nodal currently only supports PostgreSQL.\n\nOur schema is set from `Nodal.my.Schema` which automatically loaded `./db/schema.json`\nupon starting the server. (**For this reason, Schema changes require app shutdowns and reloads.**)\n\n## Special Models\n\nNodal comes with two \"special\", pre-built models. `User` and `AccessToken`.\nCreate these with:\n\n```\nnodal g:model --user\nnodal g:model --access_token\n```\n\nThese models just have some additional libraries / functionality included that\nmake things like passwords and OAuth a little bit easier. [Part 2 of the Introduction\nscreencast](https://www.youtube.com/watch?v=cQW4tgQsV_I) begins to cover this.\n\n## Migrating Your Model\n\nWith your Model, a Migration was created in `./db/migrations`. In order to load\nyour Model data into a schema and create the necessary database connections,\nmake sure PostgreSQL is running and make sure your database is created:\n\n```\nnodal db:create\n```\n\nOnce your database is created, prepare it for migrations (drops schema, clears table)\n\n```\nnodal db:prepare\n```\n\nAnd finally, run all pending migrations with:\n\n```\nnodal db:migrate\n```\n\nIf you need to undo a migration simply run (one migration at a time):\n\n```\nnodal db:rollback\n```\n\nIf you'd like to do a stepwise migrations or rollbacks, use the flag:\n\n```\nnodal db:migrate --step:1\n```\n\n## Using Your Model\n\nTo use your Model in a controller, import it with:\n\n```\nconst Model = Nodal.require('app/models/my_model.js');\n```\n\n`Nodal.require` is just `require` pointing to your main app directory.\n\nYou can do fun things with your Model like;\n\n```javascript\nlet myModel = new MyModel({field1: 'a', field2: 'b'}); // create a Model, not in db\nmyModel.save(err, callback); // Save model instance to db\nmyModel.destroy(err, callback); // Remove model instance from db\nModel.create(params, callback); // creates and saves your model to db right away\nModel.find(id, callback); // find a Model with a specified id\nModel.update(id, params, callback); // update a Model with a specified id\nModel.destroy(id, callback); // ... etc.\n\n/* And queries! */\nlet query = Model.query(); // Instantiate Composer (ORM instance)\n\n\n// method chaining :)\nquery\n  .where({id__gt: 7})\n  .orderBy('id', 'DESC')\n  .limit(5)\n  .where({field1__like: 'lol'})\n  .end((err, myModels) => {\n\n    // do something with my models\n\n  });\n```\n\n## Postgres JSONB Column Type support\n\nNodal has basic support for the Postgres [JSONB data type](http://www.postgresql.org/docs/9.4/static/datatype-json.html). Any model that has a json column that contains a valid JSON object will have the object automatically marshalled in and out of the database. Let's walk through how to setup and use a model with a json column.\n\nFirst, lets generate a new model\n\n```nodal g:model Recipe name:string, flags:json```\n\nOpen the migration that was generated and you will see the following in the `up()` method.\n\n```javascript\nthis.createTable(\"recipes\", [{\"name\":\"name\",\"type\":\"string,\"},{\"name\":\"flags\",\"type\":\"json\"}])\n```\nLet's modify the up command to add an index on the json column. Your `up()` method should look something like this\n\n```javascript    \nup() {\n\n  return [\n    this.createTable(\"recipes\", [{\"name\":\"name\",\"type\":\"string,\"},{\"name\":\"flags\",\"type\":\"json\"}])\n    this.createIndex(\"recipes\", \"flags\", \"gin\")\n  ];\n\n}\n```\n\nNodal provides two comparator's for querying the json data for matches or existence. Lets assume our Recipe table contains a collection of recipes, and the flags json column contains flags related to dietary restrictions like vegetarian, vegan or paleo. Lets query for recipes that are Paleo only\n\n```javascript\nRecipe.query()\n      .where({flags__json:{ paleo: true }})\n      .end( (err,recipes) => {\n        ......\n      });\n```\n\nThe `__json` comparator also allows for multi key queries:\n\n```javascript\nRecipe.query()\n      .where({flags__json:{ vegan: true, paleo: true }})\n      .end( (err,recipes) => {\n        ......\n      });\n```\n\n\n\n\nWhat if you want to query for all recipes that contain a certain key.\n\n```javascript\nRecipe.query()\n      .where({flags__jsoncontains: 'paleo'})\n      .end( (err,recipes) => {\n        ......\n      });\n```\n\n\n## What Now?\n\nThere's still a bunch more to cover! Information on in-depth Migrations,\nMiddleware, Schedulers, Tasks and Workers is coming soon.\n\nPlease [watch the repository, keithwhor/nodal](http://github.com/keithwhor/nodal)\nfor updates.\n\nKeep up with screencasts and more details on [nodaljs.com](http://nodaljs.com).\n\nFollow me on Twitter, [@keithwhor](http://twitter.com/keithwhor)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0673828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015-2016 Keith William Horwood\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6640625,
          "content": "# Nodal\n## API Services Made Easy with Node.js\n\n[![Build Status](https://travis-ci.org/keithwhor/nodal.svg?branch=master)](https://travis-ci.org/keithwhor/nodal) [![Join the chat at https://gitter.im/keithwhor/nodal](https://badges.gitter.im/keithwhor/nodal.svg)](https://gitter.im/keithwhor/nodal?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n![Nodal Logo](./nodal.png)\n\nView the website at [nodaljs.com](http://nodaljs.com).\n\nNodal is a web server and opinionated framework for building\ndata manipulation-centric (Create Read Update Destroy) API services in Node.js for\nweb, mobile or IoT apps.\n\n## Why Nodal?\n\n[Hello, Nodal — Building Node.js Servers for Everybody](https://medium.com/@keithwhor/hello-nodal-why-we-re-building-node-js-servers-for-everybody-dce14b27a233)\nis our first blog post that helps you get acquainted with the reasons behind\nthe creation of the framework. :)\n\n[Post Parse Prototyping](https://thoughts.ishuman.co/post-parse-prototyping-72b8570af416) is also a fantastic\nread explaining the benefits of Nodal for quick and easy mobile / IoT backend development.\n\n## Overview\n\nNodal is built upon an ideology of a robust, scalable architecture for\ndata storage and retrieval APIs.\nIt is an opinionated, explicit, idiomatic and highly-extensible full-service\nframework that takes care of all of the hard decisions for you and your team.\nThis allows you to focus on creating an effective product in a\nshort timespan while minimizing technical debt.\n\nNodal servers are not meant to be monoliths. They're *stateless* and *distributed*,\nmeant to service your needs of interfacing with your data layer effortlessly.\nWhile you can output any data format with Nodal, it's recommended you offload\nthings like static page rendering to other optimized services like CDNs.\n\n[Check out the first Nodal Screencast here.](https://www.youtube.com/embed/IxBXkFbUqtk)\n\n## Stateless Dogma\n\nIt's important to note that Nodal is meant for **stateless** API services. This\nmeans you should not rely on memory within a specific process to serve multiple\nrequests, and Nodal will use process clustering (even in development) to actively\ndiscourage this practice. If you need to work with unstructured data for rapid\nprototyping, *connect Nodal to a PostgreSQL database* and use the \"JSON\" field\ntype. You'll find yourself encountering a lot of trouble if you start trying to\nuse in-process memory across different requests.\n\nRemember: **one input, one output**. Side effects dealing with model state\nshould be managed via your Database. Nodal should not be used for streaming\n(long poll) requests and the HTTP request and response objects are intentionally\nobfuscated.\n\nThis also means you *can not rely on socket connections*. If you need to\nincorporate realtime functionality in your application, there should be a\nseparate server responsible for this. It can interface with your Nodal API\nserver and even receive events from it, but your API server should never have\na stateful (prolonged) connection with any client.\n\n## Getting Started\n\nGetting started with Nodal is easy.\n\n1. Download and install the newest Node 6.x version from [nodejs.org](https://nodejs.org)\n2. Open terminal, and type `npm install nodal -g`.\n(If you get an error, run `sudo npm install nodal -g` or fix permissions permanently by\n  [following these directions](https://docs.npmjs.com/getting-started/fixing-npm-permissions)\n3. Using your terminal, visit your projects folder. Perhaps with `cd ~`.\n4. Run `nodal new`.\n5. Follow the on screen instructions, enter your new project directory and type `nodal s`.\n\nThat's it! Your Nodal webserver is up and running.\n\n## Hooking Up Your Database\n\nOnce Nodal is up and running, it's likely that you'll want to connect your project\nto a database. Nodal comes packaged with Migrations, a Query Composer and full\nPostgreSQL integration.\n\nFirst you'll need to install PostgreSQL. OS X users, I recommend using\n[Postgres.app](http://postgresapp.com/) for your development environment.\n\nOnce you've installed Postgres, make sure to run:\n\n```\n$ createuser postgres -s\n```\n\nTo create a default postgres superuser with no password. (Default for Nodal's\nconfiguration.)\n\nTo begin using your database, start with:\n\n```\n$ nodal db:create\n```\n\nTo create the database and then,\n\n```\n$ nodal db:prepare\n```\n\nTo prepare for migrations.\n\nFrom here, `nodal db:migrate` runs all pending migrations and `nodal db:rollback`\nwill roll back migrations, one at a time by default.\n\n## Server Types\n\nNodal works best when you follow its ideology, and that means creating a new\nservice to solve specific *Problem Domains* of your application and business.\n\nThe main three suggestions are **Branding Server**, **API Server** and **Application Server**.\n\nNodal's core competency is building API servers. We do, however, also have a\nproject called\n[dotcom](http://github.com/keithwhor/dotcom) for building Branding Servers\n(search engine optimized server-generated pages). More on this soon.\n\n### API Server\n\nCreate an API server using Nodal's Models, PostgreSQL integration, built-in JSON\nAPI formatting, and Query Composer (ORM). Bi-directional migrations are packaged\nwith Nodal, meaning you can maintain the integrity of your data.\nUser (including password) and OAuth AccessToken models and controllers are\npre-built for you and can be added easily to your project.\n\nPackaged with Nodal are workers, scheduling modules, and much more for all of\nyour data needs.\n\nWe can look at what an API Controller might look like for, say, blog posts:\n\n```javascript\nclass BlogPostsController extends Nodal.Controller {\n\n  index() {\n\n    BlogPost.query()\n      .join('user')\n      .join('comments')\n      .where(this.params.query)\n      .end((err, blogPosts) => {\n\n        this.respond(err || blogPosts);\n\n      });\n\n  }\n\n  show() {\n\n    BlogPost.find(this.params.route.id, (err, blogPost) => this.respond(err || blogPost));\n\n  }\n\n  create() {\n\n    BlogPost.create(params.body, (err, blogPost) => this.respond(err || blogPost));\n\n  }\n\n  update() {\n\n    BlogPost.update(this.params.route.id, params.body, (err, blogPost) => this.respond(err || blogPost));\n\n  }\n\n  destroy() {\n\n    BlogPost.destroy(this.params.route.id, (err, blogPost) => this.respond(err || blogPost));\n\n  }\n\n}\n```\n\n## Beginner's Guide\n\nYou'll be able to learn more about Nodal at [nodaljs.com](http://nodaljs.com).\n\n## Documentation\n\nCheck out the website at [nodaljs.com](http://nodaljs.com).\n\n## Roadmap\n\nView the roadmap at [ROADMAP.md](./ROADMAP.md).\n\n## About\n\nNodal is under active development and maintained by\n[Keith Horwood](http://keithwhor.com).\n\n**Contributors welcome!**\n\nFollow me on Twitter, [@keithwhor](http://twitter.com/keithwhor)\n\nFork me on GitHub, [keithwhor](http://github.com/keithwhor)\n\nThanks for checking out Nodal!\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 0.2568359375,
          "content": "# Nodal Roadmap\n\n### Legend:\n\n* :x: Not Started\n* :hourglass: WIP\n* :white_check_mark: Complete\n\n## 0.12\n\n* :x: MySQL Support\n* :x: Transaction support for database queries\n* :x: Way to work with Geometric data points\n* :x: Scheduler / worker full implementation\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsconfig.json",
          "type": "blob",
          "size": 0.0751953125,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES6\",\n    \"module\": \"commonjs\"\n  }\n}\n"
        },
        {
          "name": "nodal.png",
          "type": "blob",
          "size": 5.8798828125,
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 24.748046875,
          "content": "{\n  \"name\": \"nodal\",\n  \"version\": \"0.16.1\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"ansi-escapes\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz\",\n      \"integrity\": \"sha1-06ioOzGapneTZisT52HHkRQiMG4=\"\n    },\n    \"ansi-regex\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",\n      \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\"\n    },\n    \"ansi-styles\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",\n      \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\"\n    },\n    \"api-res\": {\n      \"version\": \"0.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/api-res/-/api-res-0.0.8.tgz\",\n      \"integrity\": \"sha1-+Hj43+LBk56iS/CO8Zvmmdlm+RA=\"\n    },\n    \"assertion-error\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz\",\n      \"integrity\": \"sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==\",\n      \"dev\": true\n    },\n    \"async\": {\n      \"version\": \"1.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-1.5.2.tgz\",\n      \"integrity\": \"sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=\"\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"buffer-writer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-writer/-/buffer-writer-1.0.1.tgz\",\n      \"integrity\": \"sha1-Iqk2kB4wKa/NdUfrRIfOtpejvwg=\"\n    },\n    \"chai\": {\n      \"version\": \"3.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/chai/-/chai-3.5.0.tgz\",\n      \"integrity\": \"sha1-TQJjewZ/6Vi9v906QOxW/vc3Mkc=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assertion-error\": \"^1.0.1\",\n        \"deep-eql\": \"^0.1.3\",\n        \"type-detect\": \"^1.0.0\"\n      }\n    },\n    \"chalk\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n      \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n      \"requires\": {\n        \"ansi-styles\": \"^2.2.1\",\n        \"escape-string-regexp\": \"^1.0.2\",\n        \"has-ansi\": \"^2.0.0\",\n        \"strip-ansi\": \"^3.0.0\",\n        \"supports-color\": \"^2.0.0\"\n      }\n    },\n    \"cli-cursor\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-1.0.2.tgz\",\n      \"integrity\": \"sha1-ZNo/fValRBLll5S9Ytw1KV6PKYc=\",\n      \"requires\": {\n        \"restore-cursor\": \"^1.0.1\"\n      }\n    },\n    \"cli-width\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-1.1.1.tgz\",\n      \"integrity\": \"sha1-pNKT72frt7iNSk1CwMzwDE0eNm0=\"\n    },\n    \"cmnd\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/cmnd/-/cmnd-0.1.3.tgz\",\n      \"integrity\": \"sha1-qN04vOpUbEtn1l9zdEC7ggGLGig=\",\n      \"requires\": {\n        \"colors\": \"1.1.2\"\n      }\n    },\n    \"code-point-at\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz\",\n      \"integrity\": \"sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=\"\n    },\n    \"colors\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/colors/-/colors-1.1.2.tgz\",\n      \"integrity\": \"sha1-FopHAXVran9RoSzgyXv6KMCE7WM=\"\n    },\n    \"commander\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.3.0.tgz\",\n      \"integrity\": \"sha1-/UMOiJgy7DU7ms0d4hfBHLPu+HM=\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\"\n    },\n    \"cross-spawn-async\": {\n      \"version\": \"2.1.9\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn-async/-/cross-spawn-async-2.1.9.tgz\",\n      \"integrity\": \"sha1-y+aagI2u8sWyowu3dqhXp0QCbDU=\",\n      \"requires\": {\n        \"lru-cache\": \"^4.0.0\",\n        \"which\": \"^1.2.4\"\n      }\n    },\n    \"debug\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.2.0.tgz\",\n      \"integrity\": \"sha1-+HBX6ZWxofauaklgZkE3vFbwOdo=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"0.7.1\"\n      }\n    },\n    \"deep-eql\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-0.1.3.tgz\",\n      \"integrity\": \"sha1-71WKyrjeJSBs1xOQbXTlaTDrafI=\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-detect\": \"0.1.1\"\n      },\n      \"dependencies\": {\n        \"type-detect\": {\n          \"version\": \"0.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-0.1.1.tgz\",\n          \"integrity\": \"sha1-C6XsKohWQORw6k6FBZcZANrFiCI=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"deep-equal\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-1.0.1.tgz\",\n      \"integrity\": \"sha1-9dJgKStmDghO/0zbyfCK0yR0SLU=\"\n    },\n    \"diff\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-1.4.0.tgz\",\n      \"integrity\": \"sha1-fyjS657nsVqX79ic5j3P2qPMur8=\",\n      \"dev\": true\n    },\n    \"dot\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/dot/-/dot-1.0.3.tgz\",\n      \"integrity\": \"sha1-+HUL+2sDx2ZOsObLHrTGZBmvlCc=\"\n    },\n    \"dotenv\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-2.0.0.tgz\",\n      \"integrity\": \"sha1-vXWcNXqqcDZeAclrewvsCKbg2Uk=\"\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\"\n    },\n    \"exit-hook\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/exit-hook/-/exit-hook-1.1.1.tgz\",\n      \"integrity\": \"sha1-8FyiM7SMBdVP/wd2XfhQfpXAL/g=\"\n    },\n    \"figures\": {\n      \"version\": \"1.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-1.7.0.tgz\",\n      \"integrity\": \"sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=\",\n      \"requires\": {\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"object-assign\": \"^4.1.0\"\n      }\n    },\n    \"fs-extra\": {\n      \"version\": \"0.26.7\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-0.26.7.tgz\",\n      \"integrity\": \"sha1-muH92UiXeY7at20JGM9C0MMYT6k=\",\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"jsonfile\": \"^2.1.0\",\n        \"klaw\": \"^1.0.0\",\n        \"path-is-absolute\": \"^1.0.0\",\n        \"rimraf\": \"^2.2.8\"\n      }\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\"\n    },\n    \"fxn\": {\n      \"version\": \"0.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/fxn/-/fxn-0.0.9.tgz\",\n      \"integrity\": \"sha512-CRsGE50oByv7a444UTJ9GpiB5t9BRYWfzKt7/mrA9G+xL5P1r5p9npPvp+UPnl/gQTzyGMGIoPFARDDcwVNcsw==\",\n      \"requires\": {\n        \"async\": \"^2.0.0-rc.3\",\n        \"dotenv\": \"^2.0.0\",\n        \"mime-types\": \"~2.1.9\"\n      },\n      \"dependencies\": {\n        \"async\": {\n          \"version\": \"2.6.3\",\n          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n          \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n          \"requires\": {\n            \"lodash\": \"^4.17.14\"\n          }\n        }\n      }\n    },\n    \"generic-pool\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/generic-pool/-/generic-pool-2.4.2.tgz\",\n      \"integrity\": \"sha1-iGvFvwvrfblugby7oHiBjeWmJoM=\"\n    },\n    \"glob\": {\n      \"version\": \"7.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.6.tgz\",\n      \"integrity\": \"sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==\",\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"graceful-fs\": {\n      \"version\": \"4.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.6.tgz\",\n      \"integrity\": \"sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==\"\n    },\n    \"growl\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/growl/-/growl-1.8.1.tgz\",\n      \"integrity\": \"sha1-Sy3sjZB+k9szZiTc7AGDUC+MlCg=\",\n      \"dev\": true\n    },\n    \"has-ansi\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",\n      \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",\n      \"requires\": {\n        \"ansi-regex\": \"^2.0.0\"\n      }\n    },\n    \"i\": {\n      \"version\": \"0.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/i/-/i-0.3.6.tgz\",\n      \"integrity\": \"sha1-2WyScyB28HJxG2sQ/X1PZa2O4j0=\"\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"inquirer\": {\n      \"version\": \"0.11.4\",\n      \"resolved\": \"https://registry.npmjs.org/inquirer/-/inquirer-0.11.4.tgz\",\n      \"integrity\": \"sha1-geM3ToNhvq/y2XAWIG01nQsy+k0=\",\n      \"requires\": {\n        \"ansi-escapes\": \"^1.1.0\",\n        \"ansi-regex\": \"^2.0.0\",\n        \"chalk\": \"^1.0.0\",\n        \"cli-cursor\": \"^1.0.1\",\n        \"cli-width\": \"^1.0.1\",\n        \"figures\": \"^1.3.5\",\n        \"lodash\": \"^3.3.1\",\n        \"readline2\": \"^1.0.1\",\n        \"run-async\": \"^0.1.0\",\n        \"rx-lite\": \"^3.1.2\",\n        \"string-width\": \"^1.0.1\",\n        \"strip-ansi\": \"^3.0.0\",\n        \"through\": \"^2.3.6\"\n      },\n      \"dependencies\": {\n        \"lodash\": {\n          \"version\": \"3.10.1\",\n          \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-3.10.1.tgz\",\n          \"integrity\": \"sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y=\"\n        }\n      }\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz\",\n      \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n      \"requires\": {\n        \"number-is-nan\": \"^1.0.0\"\n      }\n    },\n    \"isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\"\n    },\n    \"jade\": {\n      \"version\": \"0.26.3\",\n      \"resolved\": \"https://registry.npmjs.org/jade/-/jade-0.26.3.tgz\",\n      \"integrity\": \"sha1-jxDXl32NefL2/4YqgbBRPMslaGw=\",\n      \"dev\": true,\n      \"requires\": {\n        \"commander\": \"0.6.1\",\n        \"mkdirp\": \"0.3.0\"\n      },\n      \"dependencies\": {\n        \"commander\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/commander/-/commander-0.6.1.tgz\",\n          \"integrity\": \"sha1-+mihT2qUXVTbvlDYzbMyDp47GgY=\",\n          \"dev\": true\n        },\n        \"mkdirp\": {\n          \"version\": \"0.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz\",\n          \"integrity\": \"sha1-G79asbqCevI1dRQ0kEJkVfSB/h4=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"js-string-escape\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz\",\n      \"integrity\": \"sha1-4mJbrbwNZ8dTPp7cEGjFh65BN+8=\"\n    },\n    \"jsonfile\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz\",\n      \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"klaw\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",\n      \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.9\"\n      }\n    },\n    \"lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"\n    },\n    \"lru-cache\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz\",\n      \"integrity\": \"sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==\",\n      \"requires\": {\n        \"pseudomap\": \"^1.0.2\",\n        \"yallist\": \"^2.1.2\"\n      }\n    },\n    \"mime-db\": {\n      \"version\": \"1.47.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.47.0.tgz\",\n      \"integrity\": \"sha512-QBmA/G2y+IfeS4oktet3qRZ+P5kPhCKRXxXnQEudYqUaEioAU1/Lq2us3D/t1Jfo4hE9REQPrbB7K5sOczJVIw==\"\n    },\n    \"mime-types\": {\n      \"version\": \"2.1.30\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.30.tgz\",\n      \"integrity\": \"sha512-crmjA4bLtR8m9qLpHvgxSChT+XoSlZi8J4n/aIdn3z92e/U47Z0V/yl+Wh9W046GgFVAmoNR/fmdbZYcSSIUeg==\",\n      \"requires\": {\n        \"mime-db\": \"1.47.0\"\n      }\n    },\n    \"minimatch\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",\n      \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",\n      \"requires\": {\n        \"brace-expansion\": \"^1.1.7\"\n      }\n    },\n    \"minimist\": {\n      \"version\": \"0.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n      \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",\n      \"dev\": true\n    },\n    \"mkdirp\": {\n      \"version\": \"0.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n      \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n      \"dev\": true,\n      \"requires\": {\n        \"minimist\": \"0.0.8\"\n      }\n    },\n    \"mocha\": {\n      \"version\": \"2.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-2.4.5.tgz\",\n      \"integrity\": \"sha1-FRdo3Sh161G8gpXpgAAm6fK7OY8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"commander\": \"2.3.0\",\n        \"debug\": \"2.2.0\",\n        \"diff\": \"1.4.0\",\n        \"escape-string-regexp\": \"1.0.2\",\n        \"glob\": \"3.2.3\",\n        \"growl\": \"1.8.1\",\n        \"jade\": \"0.26.3\",\n        \"mkdirp\": \"0.5.1\",\n        \"supports-color\": \"1.2.0\"\n      },\n      \"dependencies\": {\n        \"escape-string-regexp\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.2.tgz\",\n          \"integrity\": \"sha1-Tbwv5nTnGUnK8/smlc5/LcHZqNE=\",\n          \"dev\": true\n        },\n        \"glob\": {\n          \"version\": \"3.2.3\",\n          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.3.tgz\",\n          \"integrity\": \"sha1-4xPusknHr/qlxHUoaw4RW1mDlGc=\",\n          \"dev\": true,\n          \"requires\": {\n            \"graceful-fs\": \"~2.0.0\",\n            \"inherits\": \"2\",\n            \"minimatch\": \"~0.2.11\"\n          }\n        },\n        \"graceful-fs\": {\n          \"version\": \"2.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-2.0.3.tgz\",\n          \"integrity\": \"sha1-fNLNsiiko/Nule+mzBQt59GhNtA=\",\n          \"dev\": true\n        },\n        \"lru-cache\": {\n          \"version\": \"2.7.3\",\n          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz\",\n          \"integrity\": \"sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=\",\n          \"dev\": true\n        },\n        \"minimatch\": {\n          \"version\": \"0.2.14\",\n          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz\",\n          \"integrity\": \"sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=\",\n          \"dev\": true,\n          \"requires\": {\n            \"lru-cache\": \"2\",\n            \"sigmund\": \"~1.0.0\"\n          }\n        },\n        \"supports-color\": {\n          \"version\": \"1.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-1.2.0.tgz\",\n          \"integrity\": \"sha1-/x7R5hFp0Gs88tWI4YixjYhH4X4=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"ms\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-0.7.1.tgz\",\n      \"integrity\": \"sha1-nNE8A62/8ltl7/3nzoZO6VIBcJg=\",\n      \"dev\": true\n    },\n    \"mute-stream\": {\n      \"version\": \"0.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.5.tgz\",\n      \"integrity\": \"sha1-j7+rsKmKJT0xhDMfno3rc3L6xsA=\"\n    },\n    \"number-is-nan\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz\",\n      \"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\"\n    },\n    \"object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\"\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"onetime\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-1.1.0.tgz\",\n      \"integrity\": \"sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=\"\n    },\n    \"packet-reader\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/packet-reader/-/packet-reader-0.2.0.tgz\",\n      \"integrity\": \"sha1-gZ300BC4LV6lZx+KGjrPA5vNdwA=\"\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\"\n    },\n    \"pg\": {\n      \"version\": \"4.5.7\",\n      \"resolved\": \"https://registry.npmjs.org/pg/-/pg-4.5.7.tgz\",\n      \"integrity\": \"sha1-Ra4WsjcGpjRaAyed7MaveVwW0ps=\",\n      \"requires\": {\n        \"buffer-writer\": \"1.0.1\",\n        \"generic-pool\": \"2.4.2\",\n        \"js-string-escape\": \"1.0.1\",\n        \"packet-reader\": \"0.2.0\",\n        \"pg-connection-string\": \"0.1.3\",\n        \"pg-types\": \"1.*\",\n        \"pgpass\": \"0.0.3\",\n        \"semver\": \"^4.1.0\"\n      }\n    },\n    \"pg-connection-string\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-0.1.3.tgz\",\n      \"integrity\": \"sha1-2hhHsglA5C7hSSvq9l1J2RskXfc=\"\n    },\n    \"pg-int8\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz\",\n      \"integrity\": \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\"\n    },\n    \"pg-types\": {\n      \"version\": \"1.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/pg-types/-/pg-types-1.13.0.tgz\",\n      \"integrity\": \"sha512-lfKli0Gkl/+za/+b6lzENajczwZHc7D5kiUCZfgm914jipD2kIOIvEkAhZ8GrW3/TUoP9w8FHjwpPObBye5KQQ==\",\n      \"requires\": {\n        \"pg-int8\": \"1.0.1\",\n        \"postgres-array\": \"~1.0.0\",\n        \"postgres-bytea\": \"~1.0.0\",\n        \"postgres-date\": \"~1.0.0\",\n        \"postgres-interval\": \"^1.1.0\"\n      }\n    },\n    \"pgpass\": {\n      \"version\": \"0.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz\",\n      \"integrity\": \"sha1-EuZ+NDsxicLzEgbrycwL7//PkUA=\",\n      \"requires\": {\n        \"split\": \"~0.3\"\n      }\n    },\n    \"postgres-array\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/postgres-array/-/postgres-array-1.0.3.tgz\",\n      \"integrity\": \"sha512-5wClXrAP0+78mcsNX3/ithQ5exKvCyK5lr5NEEEeGwwM6NJdQgzIJBVxLvRW+huFpX92F2QnZ5CcokH0VhK2qQ==\"\n    },\n    \"postgres-bytea\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz\",\n      \"integrity\": \"sha1-AntTPAqokOJtFy1Hz5zOzFIazTU=\"\n    },\n    \"postgres-date\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz\",\n      \"integrity\": \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\"\n    },\n    \"postgres-interval\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz\",\n      \"integrity\": \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\",\n      \"requires\": {\n        \"xtend\": \"^4.0.0\"\n      }\n    },\n    \"pseudomap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",\n      \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\"\n    },\n    \"readline2\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/readline2/-/readline2-1.0.1.tgz\",\n      \"integrity\": \"sha1-QQWWCP/BVHV7cV2ZidGZ/783LjU=\",\n      \"requires\": {\n        \"code-point-at\": \"^1.0.0\",\n        \"is-fullwidth-code-point\": \"^1.0.0\",\n        \"mute-stream\": \"0.0.5\"\n      }\n    },\n    \"restore-cursor\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-1.0.1.tgz\",\n      \"integrity\": \"sha1-NGYfRohjJ/7SmRR5FSJS35LapUE=\",\n      \"requires\": {\n        \"exit-hook\": \"^1.0.0\",\n        \"onetime\": \"^1.0.0\"\n      }\n    },\n    \"rimraf\": {\n      \"version\": \"2.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz\",\n      \"integrity\": \"sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==\",\n      \"requires\": {\n        \"glob\": \"^7.1.3\"\n      }\n    },\n    \"run-async\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-async/-/run-async-0.1.0.tgz\",\n      \"integrity\": \"sha1-yK1KXhEGYeQCp9IbUw4AnyX444k=\",\n      \"requires\": {\n        \"once\": \"^1.3.0\"\n      }\n    },\n    \"rx-lite\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/rx-lite/-/rx-lite-3.1.2.tgz\",\n      \"integrity\": \"sha1-Gc5QLKVyZl87ZHsQk5+X/RYV8QI=\"\n    },\n    \"semver\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-4.3.6.tgz\",\n      \"integrity\": \"sha1-MAvG4OhjdPe6YQaLWx7NV/xlMto=\"\n    },\n    \"sigmund\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz\",\n      \"integrity\": \"sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=\",\n      \"dev\": true\n    },\n    \"split\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/split/-/split-0.3.3.tgz\",\n      \"integrity\": \"sha1-zQ7qXmOiEd//frDwkcQTPi0N0o8=\",\n      \"requires\": {\n        \"through\": \"2\"\n      }\n    },\n    \"string-width\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz\",\n      \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n      \"requires\": {\n        \"code-point-at\": \"^1.0.0\",\n        \"is-fullwidth-code-point\": \"^1.0.0\",\n        \"strip-ansi\": \"^3.0.0\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n      \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n      \"requires\": {\n        \"ansi-regex\": \"^2.0.0\"\n      }\n    },\n    \"supports-color\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n      \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\"\n    },\n    \"through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\"\n    },\n    \"type-detect\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-1.0.0.tgz\",\n      \"integrity\": \"sha1-diIXzAbbJY7EiQihKY6LlRIejqI=\",\n      \"dev\": true\n    },\n    \"which\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.1.tgz\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"requires\": {\n        \"isexe\": \"^2.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\"\n    },\n    \"xtend\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\n      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\"\n    },\n    \"yallist\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz\",\n      \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\"\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.103515625,
          "content": "{\n  \"name\": \"nodal\",\n  \"version\": \"0.16.1\",\n  \"description\": \"An API Server and Framework for node.js\",\n  \"keywords\": [\n    \"framework\",\n    \"api\",\n    \"application\",\n    \"branding\",\n    \"server\",\n    \"modular\",\n    \"nodal\"\n  ],\n  \"author\": \"Keith Horwood\",\n  \"main\": \"core/module.js\",\n  \"dependencies\": {\n    \"api-res\": \"~0.0.4\",\n    \"async\": \"~1.5.2\",\n    \"cmnd\": \"~0.1.0\",\n    \"colors\": \"~1.1.0\",\n    \"cross-spawn-async\": \"~2.1.6\",\n    \"deep-equal\": \"~1.0.1\",\n    \"dot\": \"~1.0.3\",\n    \"dotenv\": \"^2.0.0\",\n    \"fs-extra\": \"~0.26.4\",\n    \"fxn\": \"~0.0.9\",\n    \"i\": \"~0.3.4\",\n    \"inquirer\": \"~0.11.3\",\n    \"mime-types\": \"~2.1.9\",\n    \"pg\": \"~4.5.5\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"~3.5.0\",\n    \"mocha\": \"~2.4.5\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha ./test/runner.js\",\n    \"docs\": \"documentation build core/module.js -o docs -f html\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/keithwhor/nodal.git\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/keithwhor/nodal/issues\"\n  },\n  \"homepage\": \"https://github.com/keithwhor/nodal\",\n  \"bin\": {\n    \"nodal\": \"cli/bin.js\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}