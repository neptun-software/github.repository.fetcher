{
  "metadata": {
    "timestamp": 1736561828416,
    "page": 487,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mbloch/mapshaper",
      "stars": 3819,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.939453125,
          "content": "module.exports = {\n    'env': {\n        'browser': true,\n        'node': true,\n        'es2021': true\n    },\n    'globals': {\n      'VERSION': 'readonly'\n      // 'module': 'readonly',\n      // 'require': 'readonly'\n    },\n    'extends': 'eslint:recommended',\n    'parserOptions': {\n        'ecmaVersion': 'latest',\n        'sourceType': 'module'\n    },\n    'rules': {\n        'no-prototype-builtins': ['off'], // allow obj.hasOwnProperty()\n        'no-control-regex': ['off'],\n        'no-empty': ['off'], // allow try { ... } catch(e) {}\n        'no-constant-condition': ['off'], // allow while(true)\n        'no-unused-vars': ['off'],\n        'indent': [\n            'off', // indent rule is troublesome\n            2\n        ],\n        'linebreak-style': [\n            'error',\n            'unix'\n        ],\n        'quotes': [\n            'off',\n            'single'\n        ],\n        'semi': [\n            'error',\n            'always'\n        ]\n    }\n};\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1923828125,
          "content": ".DS_Store\n__*\nnode_modules\nnpm-debug.log\n.npmignore\n.jshintrc\n/mapshaper.js\n/www/mapshaper-gui.js\n/www/mapshaper.js\n/www/node_modules.js\n# /www/basemap.js\npre-publish\npre-release.js\nrelease*\nnacis\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 68.685546875,
          "content": "v0.6.102\n* Added Nicolosi Globular (nicol) projection.\n\nv0.6.101\n* Added -affine fit-bbox= option, for transforming data to fit within a bounding box.\n* Improved arrow symbols.\n\nv0.6.100\n* Added -frame command, for creating a rectangular map frame layer with a defined display size. Used to set SVG output size and on-screen symbol scale.\n* Added -o no-null-props option, which uses \"properties\":{} instead of \"properties\":null when outputting GeoJSON features with no attribute data.\n* Added support for sub-pixel sizes of pattern fills like hatches and dots (see the -style fill-effect= option).\n* Bug fixes\n\nv0.6.99\n* Bug fixes\n\nv0.6.98\n* Added remove-empty flag for -filter-slivers command.\n\nv0.6.97\n* [web] Prompt user to project imported files to match selected layer, when relevant.\n* [svg] Add fill=\"none\" to unstyled rectangle layers, to prevent map frame rectangles from displaying with SVG default black polygon fill.\n\nv0.6.96\n* Bug fix\n\nv0.6.95\n* Rename \"shift/drag box tool\" to \"rectangle tool\" and show instructions when first turned on.\n* Bug fixes\n\nv0.6.94\n* Bug fixes\n\nv0.6.93\n* Bug fix\n\nv0.6.92\n* Bug fix\n\nv0.6.91\n* Bug fix\n\nv0.6.90\n* [cli] Support for writing files up to 4gb on most computers (2gb was the previous limit).\n\nv0.6.89\n* Bug fixes\n\nv0.6.88\n* Bug fixes\n\nv0.6.87\n* Bug fixes\n\nv0.6.86\n* Bug fixes\n\nv0.6.85\n* Added -rectangles bbox=<expression> option, which uses an expression to generate rectangle coords for each feature.\n\nv0.6.84\n* Catch a polygon drawing error.\n\nv0.6.83\n* Added basemap buttons to the map.\n\nv0.6.82\n* Added geos (Geostationary Satellite View) projection.\n\nv0.6.81\n* [web] Add feature deletion to the context menu.\n* [web] Automatically close polygons when using Alt/Cmd-drag to draw paths.\n\nv0.6.80\n* [web] Added pencil-style path drawing using Alt-drag or Cmd-drag.\n\nv0.6.79\n* [web] Added \"delete point\" to the point editing context menu.\n\nv0.6.78\n* [web] Combined \"drag points\" and \"add points\" tools into a single \"add/edit points\" tool.\n* [web] Enable point and path drawing when no layers have been added.\n\nv0.6.77\n* [web] Updated import interface.\n* [web] Users can turn on the basemap, use the console and more without first importing a file.\n* [web] Added undo to \"add points\" tool.\n\nv0.6.76\n* [web] Added right-click/ctrl-click context menu.\n\nv0.6.75\n* Added auto-detection of GB18030 text encoding (used in some Chinese language Shapefiles).\n* Improvements to polygon drawing.\n\nv0.6.74\n* Bug fixes\n\nv0.6.73\n* Added drawing/reshaping to polygon layer editing menu.\n* Added info box with drawing instructions.\n\nv0.6.72\n* Bug fix\n\nv0.6.71\n* [web] Added a new edit mode for polyline layers: line drawing combined with line reshaping (by adding and dragging vertices), removed the old \"edit vertices\" menu item.\n* [web] Added attribute editing to the inspection control, removed the \"edit attributes\" menu item.\n* [web] Added a new button (\"Frame\") to the box tool buttons, which creates a rectangular map frame.\n\nv0.6.70\n* Fix for bug affecting -mosaic and -polygon commands (they incorrectly incorporated paths from other layers).\n\nv0.6.69\n* Web UI bug fixes\n\nv0.6.68\n* [scalebar] giving a pair of distances creates a dual-unit scale bar (style b only).\n* [web] minor bug fixes and improvements.\n\nv0.6.67\n* -rectangle command with width=<size> option creates a \"frame\" layer to use as the extent of an SVG map by setting the size of the SVG viewport (an alternative to using -o fit-extent=<size> option).\n* [web] Map symbols scale as the map zooms when a frame layer is visible.\n* [web] Draggable box tool resizes symmetrically with the shift key pressed.\n* [web] Allow selected layer to be temporarily hidden (via layers menu).\n\nv0.6.66\n* [web] Added ability to edit attribute data of multiple selected features (\"select features\" tool).\n* [web] Added interactive tool for adding points to point-type layer by clicking on the map.\n* [web] Added \"Add empty layer\" button to the layers menu.\n* [web] Added center handle for dragging the interactive box tool.\n* Added -o fit-extent= option, to use a layer extent (typically a layer containing a single rectangle) for setting the extent of SVG output.\n\nv0.6.65\n* Added \"drag-to-resize\" editing mode for resizing rectangles interactively.\n\nv0.6.64\n* Added more options for the -scalebar command, including two styles, a and b.\n\nv0.6.63\n* Add support for nested -if/-elif/-else/-endif commands.\n\nv0.6.62\n* Removed restrictions on the allowable size of the graticule interval (in degrees).\n* Added `targets` object to the `-run` command expression context, giving access to multiple target layers.\n\nv0.6.61\n* Introduced the `fix-geometry` option to the `-snap` and `-o` commands, for removing segment intersections caused by coordinate rounding and TopoJSON quantization.\n\nv0.6.60\n* Officially added the previously undocumented -scalebar command.\n\nv0.6.59\n* Second attempted fix for -require error on Windows.\n\nv0.6.58\n* Fix for -require error on Windows.\n\nv0.6.57\n* Added io.ifile() method for creating dynamic input files in the run command\n\nv0.6.56\n* Added support for importing ES modules using the -require command.\n* Removed the -require init= function.\n\nv0.6.55\n* Improvements to the web UI intersections tool.\n\nv0.6.54\n* Only check for line self-intersections in web UI if user clicks the \"Check line intersections\" label.\n* Added support for curly-bracket delimited expressions to -run command strings.\n\nv0.6.53\n* Added -classify outer-breaks=<min,max> option, for limiting the effective data range when calculating equal-interval breaks and continuous color ramps.\n\nv0.6.52\n* Added -calc + option, which saves calc output to a new layer.\n* Added -info + option, which saves info output to a new layer.\n\nv0.6.51\n* Improved support for running applyCommands() api function in a web browser.\n\nv0.6.50\n* Fix for label dragging bug.\n\nv0.6.49\n* Fix for issue #610 (geojson getters in -run and -each should return polygons with RFC 7946 winding order).\n* -join interpolate now works correctly when the source layer contains overlapping polygons.\n\nv0.6.48\n* Added `target.geojson` getter that returns the contents of the target layer as a GeoJSON `FeatureCollection`. Useful in the `-run` command for passing layer data to an external script.\n\nv0.6.47\n* Added support for using JSON data as an argument to the -i command.\n* Added an `io` object with an `io.addInputFile()` method to the `-run` command's expression context, to support loading dynamically generated datasets.\n\nv0.6.46\n* Added save to clipboard option to web UI export menu.\n* In -each expressions, `this.geojson` setter now accepts nulls and FeatureCollections in addition to single Features.\n\nv0.6.45\n* Added -o hoist=<fields> option for moving GeoJSON Feature properties to the root of each Feature.\n* Simplification data is removed from snapshot files (except for temporary snapshots in the web UI).\n\nv0.6.44\n* Added -style css= option for adding inline CSS to SVG symbols.\n* Bug fixes\n\nv0.6.43\n* Bug fixes\n\nv0.6.42\n* Added \"+ add field\" button to web ui inspector in attribute editing mode.\n\nv0.6.41\n* Bug fixes\n\nv0.6.40\n* Added support for decimal degree formats in DMS functions, e.g. `\"[-]DDD.DDDDDÂ°\"`.\n* Added `-o svg-bbox=` option, for specifying the extent of SVG maps in projected map units.\n* Started adding version numbers to snapshots exported from the ribbon menu (e.g. \"snapshot-01.msx\").\n\nv0.6.39\n* Added `format_dms()` and `parse_dms()` functions to `-each` expressions, for working with DMS-formatted coordinates.\n\nv0.6.38\n* Added `-symbols opacity=` option.\n\nv0.6.37\n* Support for simple line symbols using `type-arrow head-length=0`.\n\nv0.6.36\n* Improved `fill-effect=sphere` gradient.\n* Sphere effect can be previewed in the web UI.\n\nv0.6.35\n* Bug fixes\n\nv0.6.34\n* Added -style fill-effect=sphere to apply a gradient effect to the outline of a globe.\n\nv0.6.33\n* Bug fixes\n\nv0.6.32\n* Web UI improvements\n\nv0.6.31\n* Updates to gui file import dialog\n* Updated projections library to fix a bug.\n\nv0.6.30\n* Added -filter-fields invert option.\n\nv0.6.29\n* Bug fixes\n\nv0.6.28\n* Fix for bug that prevented importing data from stdin\n\nv0.6.27\n* Bug fix\n\nv0.6.26\n* Updated projections library to fix a bug.\n* Added getters partCount, isNull, bounds, width, and height to \"this\" object for point features in expressions.\n* Added undocumented \"blacki\" classification method.\n* Added collectIds() function to calc= expressions of the -join command.\n\nv0.6.25\n* Added \"Erase\" button to box tool in web UI.\n* Bug fixes and optimizations.\n\nv0.6.24\n* Added -info save-to=<filename> option, for saving layer information to a JSON file.\n* Apply the same amount of compression to all exported snapshots.\n* Bug fixes\n\nv0.6.23\n* Update to web UI export options.\n\nv0.6.22\n* Bug fixes\n\nv0.6.21\n* Bug fixes\n\nv0.6.20\n* Added \"Snapshot file\" export option to web UI.\n* Updated the layers menu in the web UI.\n* Use more compression when exporting snapshots via export menu or -o command.\n\nv0.6.19\n* Added support for a new file format (.msx) for saving and restoring mapshaper sessions.\n* Added a web UI widget for working with session snapshots.\n\nv0.6.18\n* Fix for bug preventing some zipped Shapefiles from being imported in the web UI.\n\nv0.6.17\n* Commands -require, -run, -define can now be used before data is loaded.\n\nv0.6.16\n* Added support for saving output files to a user-selected directory in the web UI, if supported by the browser.\n* Added support to the web UI for reading and writing gzipped (.gz) files.\n* Improved support for .zip and .gz files in both web and cli programs.\n* Minor update to dbf text encoding detection.\n\nv0.6.15\n* Added support to the CLI for reading .kml and .kmz files.\n* Added support to the CLI for writing .kml files.\n* Added support to the web UI for writing .kml files.\n\nv0.6.14\n* Added support to the CLI for reading and writing .zip files.\n\nv0.6.13\n* Gzipped output is inferred if output filename ends in \".gz\".\n\nv0.6.12\n* Support for reading larger .gz files (up to 2GB unzipped GeoJSON and CSV files).\n\nv0.6.11\n* Added support to the CLI and Node interface for reading and writing gzipped files with the .gz extension.\n\nv0.6.10\n* Added draggable handles to the box tool in the web UI.\n\nv0.6.9\n* Added bboxContainsRectangle(), bboxIntersectsRectangle(), bboxContainedByRectangle() and bboxContainsPoint() functions to the \"this\" object in expressions used by -each, -filter, -each where= and other contexts.\n\nv0.6.8\n* Fix: support fill color for svg image symbols.\n* Added range=<min,max> option to -classify command.\n\nv0.6.7\n* Give users running mapshaper-gui on localhost access to basemaps.\n\nv0.6.5\n* Fixed an error using -classify command in the web UI console.\n\nv0.6.4\n* Added quartile1(), quartile2(), quartile3(), iqr() (interquartile range), and mean() to -calc and calc= expressions.\n\nv0.6.3\n* Added quantile() function to -calc command and calc= expressions.\n\nv0.6.2\n* Added -stop command (can be used in combination with -if/-elif/-else to halt processing under various conditions).\n\nv0.6.0\n* Internal changes that shouldn't affect Mapshaper users.\n\nv0.5.118\n* Added -comment command, as a way to add inline comments in long sequences of commands.\n* Added support for importing .cpg files (Shapefile text encoding) in the web UI.\n\nv0.5.117\n* Support reading DBF files larger than 2GB (command line program only).\n\nv0.5.116\n* Prevent 0-length DBF string fields, for interoperability with PostGIS.\n\nv0.5.115\n* Scalebar tweaks.\n\nv0.5.114\n* Bug fixes\n\nv0.5.113\n* Added -symbols arrow-style=stick option, for making stick arrows\n* Added -symbols stroke= and -symbols stroke-width= options for styling stick arrows\n\nv0.5.112\n* Added support for labels with symbols.\n* Symbols created with the -symbols command have a default size (e.g. `-symbols type=star` creates star symbols with a default size).\n* Mapshaper no longer outputs SVG circles with radius 0.\n\nv0.5.111\n* Added -snap endpoints option, for snapping together line endpoints that don't quite meet.\n* Added buttons to the basemaps menu.\n* -if/-elif commands work (with limited functionality) with zero or multiple target layers.\n\nv0.5.110\n* Preliminary support for importing .kml files\n* Support for .kmz files in the browser UI\n* Bug fixes\n\nv0.5.109\n* Support setting linejoin and linecap for individual SVG features.\n\nv0.5.108\n* Bug fixes\n* Added file_exists() to -if/-elif expressions\n\nv0.5.106\n* More basemap fixes.\n\nv0.5.105\n* More basemap improvements.\n\nv0.5.104\n* Improvements to the basemap feature.\n\nv0.5.103\n* Bug fixes\n\nv0.5.102\n* Fix for bug in -v/--version command.\n\nv0.5.101\n* Update dependency.\n\nv0.5.100\n* Added support for using the basemap feature with datasets in a wide variety of projections.\n\nv0.5.99\n* Added support for viewing data against a Mapbox basemap (enabled on the mapshaper.org site).\n\nv0.5.98\n* Better handling of null data by the -classify command.\n\nv0.5.97\n* Better warnings and error messages.\n\nv0.5.96\n* Added colors=random option to the -classify command.\n* Added more sensible default behavior to the -classify command.\n\nv0.5.95\n* Added vertex deletion in \"edit vertices\" mode by double-clicking on non-endpoint vertices.\n\nv0.5.94\n* Added file_exists() test to -if/-elif expression context.\n\nv0.5.93\n* Add a vertex in \"edit vertices\" mode by dragging the midpoint of a segment.\n\nv0.5.92\n* Show vertices in the \"drag vertices\" editing mode.\n* Added -c/--commands option to mapshaper-gui, for running console commands when data is first imported.\n\nv0.5.91\n* Added -print command, for printing messages to the console or terminal. Useful in conjunction with the -if/-elif/-else commands.\n* Added field_exists(), field_type() and field_includes() functions to -if expressions.\n\nv0.5.89\n* Added help documentation for -symbols command.\n* Added --name option to mapshaper-gui, for setting the layer names of imported files.\n\nv0.5.88\n* Added -if/-elif/-else/-endif commands for running commands selectively.\n* Bug fixes\n\nv0.5.87\n* Added undo/redo to the \"drag vertices\" interactive editing mode.\n\nv0.5.86\n* Added keyboard commands for undo/redo for interactive point and label positioning.\n\nv0.5.85\n* Improved arrow and star symbols.\n\nv0.5.84\n* Bug fixes\n\nv0.5.83\n* Added support for importing GeoJSON features with GeometryCollection type geometries.\n* Added \"ring\" symbol type.\n\nv0.5.82\n* More options for arrow styling.\n\nv0.5.81\n* Bug fixes\n\nv0.5.80\n* Added arrows, stars and polygons to undocumented -symbols command.\n\nv0.5.79\n* More permissive importing of some non-standard Shapefiles.\n\nv0.5.78\n* Added support for reading and writing fixed-width text files.\n* Bug fixes.\n\nv0.5.77\n* Added -dashlines command (formerly -split-lines).\n* Added support for joining polyline and polygon layers using point-method\n\nv0.5.76\n* Fixed bug in mapshaper-gui -q.\n* Added undocumented -split-lines command.\n\nv0.5.75\n* Added support for importing data by copy-pasting files onto the web UI (works in Chrome and Safari but not Firefox).\n\nv0.5.74\n* Added support for importing data in the GUI by pasting JSON and delimited text onto the browser window.\n* Sped up drawing shapes in the GUI.\n\nv0.5.73\n* Added this.geojson getter/setter to -each expressions. This can be used in combination with -require to transform the geometry of individual features using an external script.\n\nv0.5.72\n* Improved performance of non-adjacent polygon coloring using DSATUR algorithm.\n\nv0.5.71\n* Added -classify non-adjacent option, for assigning non-adjacent colors to a polygon layer in a randomish pattern.\n\nv0.5.70\n* Added -join duplication option, which duplicates features in the target layer when many-to-one joins occur.\n\nv0.5.69\n* Added undocumented -ignore command.\n* Bug fix\n\nv0.5.68\n* Bug fix\n\nv0.5.67\n* Bug fix\n\nv0.5.66\n* Improve interactive selection.\n* Added undocumented -define command.\n\nv0.5.65\n* Web UI zoom buttons respond to variable-length clicks.\n* Bug fixes\n\nv0.5.64\n* Bug fixes\n\nv0.5.63\n* Added -o decimal-comma option, for exporting CSV numbers with decimal commas.\n* Fix for issue #497 (error erasing with overlapping polygons).\n\nv0.5.62\n* Added -i decimal-comma option, for importing numbers from CSV files with numbers formatted like 1.000,23 or 1 000,23\n\nv0.5.61\n* Bug fixes\n\nv0.5.60\n* Added save-as= and values= options to -dots command (like -classify).\n\nv0.5.59\n* Added -merge-layers flatten option, for removing overlaps when merging multiple polygon layers.\n* Added -clean overlap-rule=[min-id|max-id|min-area|max-area] option.\n* Added -join max-distance= option for point-to-point spatial joins.\n* Added support for many-to-one point-to-point spatial joins.\n* Added -join largest-overlap option for polygon-to-polygon spatial joins, to select a single polygon to join when multiple source polygons overlap a target polygon, based on area of overlap.\n* Added undocumented -filter-points command.\n\nv0.5.58\n* Bug fixes\n\nv0.5.57\n* Added \"allow-overlaps\" option to -dissolve2 and -clean, which allows polygon features to overlap.\n* Added \"Hill Eucyclic\" projection (+proj=hill).\n* Fixed bug that removed overlapping polygons when projecting polygon layers.\n\nv0.5.56\n* Added \"-graticule polygon\" option, which creates a polygon matching the outline of the projected graticule.\n* Allow bare PROJ projection names in CRS definitions (e.g. \"robin +lon_0=120\").\n* Web UI style updates.\n\nv0.5.55\n* Improved support for projected graticules.\n* Fixed shape clipping for the bertin1953 projection.\n\nv0.5.54\n* Fix for issue #485 (error when using * wildcard to match all files in a directory)\n\nv0.5.53\n* Fixed clipping area of nsper (Near Side Perspective).\n\nv0.5.52\n* Automatically clip content to an appropriate circle when applying most of the azimuthal projections (including stere,ortho,gnom,laea,nsper).\n* Added the -proj clip-angle= option to override the default clipping circle.\n* Automatically clip away the poles when projecting to Mercator.\n* Added the -proj clip-bbox= to clip content to a lat-long bounding box before projecting.\n* Added the -graticule interval= option, for customizing the spacing of graticule lines.\n* Added a circular outline to the graticule when creating a graticule for an azimuthal projection.\n\nv0.5.51\n* Apply antimeridian cutting to more projections.\n* Assign categorical colors automatically using -classify categories=\\*.\n* Add several 20-color categorical color schemes.\n\nv0.5.50\n* Bug fix for an argument parsing error.\n\nv0.5.49\n* Split polylines and lines that cross the rotated antimeridan when applying a world projection with a non-zero central meridian.\n* Fixed error when sending output to /dev/stdout.\n\nv0.5.48\n* Update to Cupola projection.\n\nv0.5.47\n* Updated projections library to include the \"Cupola\" projection.\n\nv0.5.46\n* Fix for issue #476.\n\nv0.5.45\n* [web ui] Made layer names in the export dialog settable.\n* Tuned parameters in the -dots command.\n\nv0.5.44\n* Added \"per-dot=\" option to the -dots command, for setting the value-to-dot ratio. To represent 100 people per dot on a population map, you would use per-dot=100.\n* Added \"copy-fields=\" option to -dots, to copy one or more data fields from the original polygon layer to the generated dot features.\n* Added \"multipart\" option to -dots, which combines groups of same-color dots into multi-part features.\n\nv0.5.43\n* Improved evenness of dot placement.\n* Replaced \"random\" and \"spacing=\" options with a single \"evenness=\" option, which varies from 0 (random placement) to 1 (very even).\n\nv0.5.42\n* Added -dots command for making dot density maps.\n\nv0.5.41\n* Fixed error parsing .prj files for southern UTM zones.\n\nv0.5.40\n* Added stops= option to the -classify command. This accepts a pair of percentages (e.g. stops=10,90) for reducing the range of a color ramp.\n* Deprecated -classify color-scheme= option. Instead, -classify colors= accepts color scheme names (e.g. -classify colors=Blues).\n* Added every() and some() functions to -calc and calc= expressions.\n* Added options for generating SVG map keys to the -classify command.\n\nv0.5.39\n* Added mapshaper-gui -t/--target option, for setting the initially selected layer.\n* Added query-string variables a/display-all, q/quick-view and target=, for customizing the initial view when sending someone a mapshaper url containing a list of files to display.\n\nv0.5.38\n* Added \"-points midpoints\" flag, to find the midpoints of polyline features.\n\nv0.5.37\n* Performance improvements for GeoJSON parsing.\n\nv0.5.36\n* Improved support for reading large GeoJSON files.\n\nv0.5.35\n* Calculate projection params based on data extent for four projections, by running -proj lcc|aea|tmerc|etmerc (experimental).\n\nv0.5.34\n* Add -o ndjson flag, to output GeoJSON and JSON records in NDJSON format.\n* Improvements to -classify command\n\nv0.5.33\n* Add -classify hybrid, which picks evenly spaced internal class breaks and quantiles for the first and last buckets\n* Add -classify nice, which is similar to the \"hybrid\" classification scheme, but tries to pick round class break values.\n* Bug fixes\n\nv0.5.32\n* Bug fixes\n\nv0.5.31\n* Now, -clean command can merge contiguous parts of polyline features, for example, sections of roadway in which each (sub-feature) part is a simple line segment.\n* Added `int_median()` function to the expression context, for calculating medians using piecewise linear interpolation (e.g. median income from range data).\n\nv0.5.30\n* Improved support in -classify for interpolation, including interpolation of numbers as well as colors.\n\nv0.5.29\n* Added -classify command, with support for classifying data values using sequential (quantile and equal-area) and categorical methods. Built-in support for named color schemes from d3.\n* Added -colors command, which prints the names of built-in d3 color schemes.\n\nv0.5.28\n* Fixed a performance bug that caused importing of some large GeoJSON files to be very slow.\n\nv0.5.27\n* Added layer.bbox property to JS expression context.\n* Added support for listing class breaks in descending order in -colorizer command.\n* Improvements to (undocumented) arrow symbols.\n\nv0.5.26\n* Added support for assignment syntax to -rename-layers, like the -rename-fields syntax (e.g. -rename-layers states=adm1,counties=adm2).\n* Added -o fit-bbox= option for TopoJSON export, which scales and shifts the coordinates of the exported data to fit within a given bounding box.\n\nv0.5.25\n* Added -snap command, with both interval= and precision= options.\n\nv0.5.24\n* Performance improvements\n\nv0.5.23\n* Added \"dashes\" fill pattern. The pattern \"dashes 5px 4px 1px black 5px white\" creates 1-pixel dashed lines spaced 5px apart, with 5px dashes at 4px intervals.\n\nv0.5.22\n* Added a \"Select All\" checkbox to the web UI export menu when there are more than two layers.\n* Improved -info display and interactive editing of Date objects.\n\nv0.5.21\n* Renamed -style fill-hatch= option to -style fill-pattern=\n* Reversed order of hatch fill arguments. \"black 2px white 2px\" changes to \"2px black 2px white\".\n* Added patterns for dots and squares. \"dots 2px black 5px white\" gives 2px black dots with 5px spacing on a white background. \"squares 2px black 5px white\" gives squares instead of round dots. Both patterns can take multiple colors and an optional rotation: \"squares 45deg 2px black red blue 5px white\".\n\nv0.5.20\n* Fix for bug introduced in previous version\n\nv0.5.19\n* Bug fix and UI tweaks\n\nv0.5.18\n* Added support for hatches with more than two colors.\n* Added 'drag vertices' interaction mode for line layers, as a precursor to a future callout line tool.\n* Tried to make the arrow menu more intuitive by not preselecting any of the items.\n\nv0.5.17\n* Added support for rotation parameter to \"fill-hatch=\" style, e.g. fill-hatch=\"-45deg #eee 2px #999 2px\"\n* Renamed -proj \"from=\" option to \"init=\". This better describes the option's function, which is to set the coordinate system of a dataset without touching the coordinates.\n\nv0.5.16\n* Updated dependencies\n\nv0.5.15\n* Added experimental \"blend()\" function to the expression context, for doing weighted-average blending of two or more rgb colors. Function signature is: blend(col1, weight1, col2, weight2, ...)\n* Added limited support for hatched polygon fills, using -style fill-hatch=\"\" syntax. Example hatch string: \"black 2px #eee 2px\"\n\nv0.5.14\n* Added -i csv-dedup-fields to deduplicate CSV fields with identical names.\n* Added -style stroke-opacity and -style fill-opacity options.\n\nv0.5.13\n* Bug fixes\n\nv0.5.12\n* Bug fixes\n\nv0.5.11\n* Added \"-uniq index\" option, which adds an \"index\" property for indexing duplicate features instead of deleting them.\n* Added support for reading and writing non-ascii field names in Shapefiles.\n* Now, the -o command can create new subdirectories for output files.\n\nv0.5.10\n* Added -inlay command, for inscribing the contents of a second polygon layer into the target polygon layer.\n\nv0.5.9\n* Added \"where=\" option to the -dissolve command, for dissolving a subset of features in a layer.\n\nv0.5.8\n* Automatically detect encoding of CSV files when byte-order-mark (BOM) is present.\n* Extend \"json-path\" option to support importing GeoJSON and TopoJSON data that is nested inside a larger JSON object.\n\nv0.5.7\n* Added \"rewind\" flag to the -clean command. This option fixes winding-order errors by converting holes that are outside of any ring into space-enclosing rings, and rings that are nested directly inside of other rings into donut holes.\n\nv0.5.6\n* Default GeoJSON output now complies with RFC 7946 with respect to polygon winding order and antimeridian-crossing bounding boxes. This means that space-enclosing rings are CCW and holes are CW. This is the opposite of how mapshaper used to output polygon rings without the rfc7946 flag.\n* Added a gj2008 flag to the output command (-o gj2008). This flag maintains compatibility with the way Mapshaper used to output GeoJSON: CW rings, CCW holes, and bbox arrays that are always [xmin, ymin, xmax, ymax].\n* The old rfc7946 flag is no longer useful, but is retained for backwards compatibility. This flag (as before) truncates coordinates to 6 decimal places. Now, using this flag is equivalent to adding precision=0.000001 to the output command.\n\nv0.5.5\n* Prompt the user before closing the browser tab, if data has changed since the session began or since the last export.\n* Include interactive data edits in the web ui console's \"history\" output.\n\nv0.5.4\n* Bug fixes\n\nv0.5.3\n* An error is triggered if a layer id from a target= option or the -target command does not match any layer.\n\nv0.5.2\n* Web interface bug fixes.\n\nv0.5.1\n* Web interface tweaks.\n\nv0.5.0\n* Refactored the codebase to use ES modules.\n* Switched to the \"rollup\" module bundler.\n\nv0.4.163\n* Updated dependences, increased minimum Node version to 6.0.\n\nv0.4.162\n* Added -dissolve multipart option, for grouping parts without modifying geometry.\n* Added -polygons from-rings option, for creating polygons when the original layer contains polyline rings.\n* -filter-fields now sets the order of fields in CSV output.\n\nv0.4.161\n* Tweaked the pointer interaction interface.\n\nv0.4.160\n* Bug fixes\n\nv0.4.159\n* Changed GUI icon and user interaction for switching interaction modes.\n* Added feature-selection interaction mode to the Web UI, for selecting features with the mouse.\n* Added box-select (using shift-drag) to feature-selection mode.\n* Added 'random' option to the -colorizer command, for assigning colors randomly.\n\nv0.4.158\n* Support bracket notation in -i json-path= option, for targetting datasets nested inside JSON arrays.\n\nv0.4.157\n* Fixes and other improvements to the interactive box tool.\n* Fixes to the web console \"history\" command.\n* Added -filter bbox= option, to retain features that intersect a bbox.\n* Added -filter invert option, to retain the features that would have been deleted.\n\nv0.4.156\n* Added box tool to the GUI, activated by shift-drag. The box tool supports clipping, feature selection + filtering, bbox coordinate lookup and zoom-to-box.\n\nv0.4.155\n* Added mapshaper-gui -q/--quick-view option, for bypassing the import dialog.\n* Added -join prefix= option, to add a prefix to the names of fields joined from the source dataset.\n* Updated CLI -info command to show only target layer(s) by default. Use -info target=* for information about all layers.\n\nv0.4.154\n* Added -divide command, for dividing a polyline layer by a polygon layer. Also joins data from the polygon layer to the divided polyline layer.\n\nv0.4.153\n* Allow setting empty layer names using -rename-layers \"\".\n* Fixed bug affecting polygon-to-polygon spatial joins using the \"point-method\" flag.\n\nv0.4.152\n* Rename json-subtree option json-path.\n\nv0.4.151\n* Added -i json-subtree=<path> option, for importing a nested array of JSON data records.\n* Added -dissolve group-points option, to convert groups of point/multipoint features to multipoint features, instead of converting groups to centroids.\n\nv0.4.150\n* Fixed a bug affecting the calc=[expression] option when performing polygon-to-polygon spatial joins.\n\nv0.4.149\n* Improve OGC Simple Features compliance of cleaned polygons.\n\nv0.4.148\n* Added sliver-control=[0-1] option to -clean -dissolve2 and -filter-slivers commands, for variable sliver control.\n* Made sliver-control=1 the default value for these commands.\n* Tweaked the default area threshold for gap/sliver removal to use a larger threshold for more detailed datasets (detail is estimated using average segments per ring).\n* Changed name of min-gap-area option to gap-fill-area (original name also works).\n* Added tests of -clean command polygon output to verify OGC Simple Features compatibility.\n\nv0.4.147\n* Improved robustness of path intersection (used by many commands, including -clean -dissolve2 -clip -erase -union).\n\nv0.4.146\n* Added support for line and point type features to the -clean command.\n* Added (undocumented) -snap command, for snapping vertices post-import.\n\nv0.4.145\n* Added -grid command for creating grids of square or hexagonal polygons. Assumes target layer is projected. Creates a grid layer that entirely contains the bounding box of the target layer.\n* Added polygon-to-polygon spatial joins to the -join command.\n* Added \"interpolate=\" option to the -join command, for reassigning attribute values of the listed fields using simple areal interpolation (assumes even distribution of data within polygon areas) (polygon-polygon spatial joins only).\n* Added \"point-method\" option to the -join command, for performing polygon-polygon spatial joins using an alternate method.\n* Added \"-lines segments\" option, to explode a polygon or polyline layer into individual segments.\n\nv0.4.144\n* Change -union command syntax to use two or more target layers as input\n* Added -union fields= option for selecting which fields from the input layers to retain.\n\nv0.4.143\n* Fix for web UI bug that caused command line options to be ignored.\n\nv0.4.142\n* Added -union command for creating a mosaic from two polygon layers, preserving data from both layers.\n* Added -mosaic calc= option, which provides options for transferring data from source polygons to mosaic polygons.\n* Allow -merge-layers to combine a shape layer with a layer that has null geometry.\n\nv0.4.141\n* Added \"history\" command to browser console, for displaying browser session as a command line shell command.\n* Added -mosaic as a documented command (flattens overlapping polygons by converting overlaps to separate features).\n\nv0.4.140\n* Fix error in web UI.\n\nv0.4.139\n* Send output of -version, -help and some other informational commands to stdout, not stderr.\n\nv0.4.138\n* Added runCommandsXL() function to Mapshaper's Node API, for running commands with more memory.\n\nv0.4.137\n* Further improvements to -data-fill and -fuzzy-join. Added 'contiguous' flag to ensure that only the most important one of multiple same-value areas is retained.\n\nv0.4.136\n* Improvements to -data-fill and -fuzzy-join\n\nv0.4.135\n* [shapefile] If a projection has no known WKT definition, generate a fallback .prj file with an embedded Proj.4 string (readable by QGIS and gdal but not ArcGIS).\n\nv0.4.134\n* Fixed \"npm run build\" on Windows\n\nv0.4.133\n* Performance improvements for CSV importing\n\nv0.4.132\n* Added -i csv-lines=[integer] option, for importing the first n records from a CSV file\n* Added -i csv-skip-lines=[integer] option, for skipping lines at the top of a CSV file\n* Added -i csv-field-names=[list] option, for assigning field names to the columns of a CSV file.\n\nv0.4.131\n* Added optional size parameter to mapshaper-xl (e.g. mapshaper-xl 16gb)\n* Improve performance of -i csv-fields=  option.\n\nv0.4.130\n* Input of GeoJSON and TopoJSON is more fault-tolerant.\n\nv0.4.129\n* Work around layer menu issue caused by Chrome update.\n\nv0.4.128\n* Fix Travis build.\n\nv0.4.127\n* Updates to albersusa hybrid projection: new Alaska projection (lon_0 is at 148W) and support for customization. Customization examples: \"albersusa +PR\" \"albersusa +AK.lon_0=-141 +AK.scale=0.4 +AK.dx=10000\".\n* \"-proj\" command no longer throws an error if one or more coordinates fail to project. Instead, the points or arcs containing projection errors are removed.\n* Added an npm \"prepare\" script for users who are installing mapshaper from source code.\n* Added an \"npm run build\" script\n\nv0.4.126\n* The -simplify command now ignores datasets containing no paths instead of stopping with an error. This is useful in scripts, when clipping creates an empty layer.\n\nv0.4.125\n* API functions applyCommands() and runCommands() return a Promise if called without a callback argument.\n\nv0.4.124\n* Added -lines groupby=[field] option, for converting points into multiple lines.\n* Added -clip bbox2=[bbox] option, which uses a higher-performance (but experimental) bounding box clip function.\n\nv0.4.123\n* Now, -lines command converts a layer of points to a single polyline.\n\nv0.4.122\n* Added -drop holes option, for removing holes from polygons.\n\nv0.4.120\n* Fix for several GUI glitches\n\nv0.4.119\n* Fix Travis build error\n\nv0.4.118\n* Added string interpolation to source layer name in -clip/-erase, using template literal syntax (e.g. -clip source='${target}-clip')\n\nv0.4.117\n* Added -o svg-data= option for exporting data fields as SVG data-* attributes.\n\nv0.4.116\n* Bug fixes\n\nv0.4.115\n* Improved -dissolve2 to handle polygons that overlap each other in complex ways.\n\nv0.4.114\n* Fix: using -join with the \"unjoined\" and \"unmatched\" flags no longer adds debugging layers to the next command's default target layer(s).\n* Added layer names to tab completion in the web UI console.\n\nv0.4.113\n* Fix for issue #339 (no .prj output after projecting to +proj=stere)\n\nv0.4.112\n* Fix for issue #337 (error when clipping or erasing polygon rings inside holes)\n\nv0.4.111\n* Added $.length accessor to -each expressions with polyline features\n\nv0.4.110\n* Added +proj=patterson projection\n\nv0.4.109\n* Updated format of -info command output, for better legibility.\n* Fixed layer duplication bug when running -clip/-erase with the \"+\" option.\n\nv0.4.108\n* Now you can import all CSV fields as string data using '-i string-fields=\\*' option.\n* Now the -points command auto-detects commonly used names for x and y coordinates (e.g. longitude,latitude,lon,lng,lat,x,y) when converting tabular data to points. It is no longer necessary to add x= and y= parameters to the -points command.\n\nv0.4.107\n* Preliminary work on new -symbols command.\n\nv0.4.106\n* Automatic DMS parsing in -points x= y=.\n* Added a reference to the target record to -join where= expressions, named \"target\".\n\nv0.4.105\n* [gui] Added separate interface modes for inspecting attributes, editing attributes, dragging labels to change offset from anchor, and dragging point symbols to change coordinates.\n* [cli] Improved error message when trying to read unsupported file types.\n\nv0.4.104\n* Added \"-uniq invert\" option, for retaining non-unique records (useful e.g. for troubleshooting many-to-one joins).\n* Improved some error messages.\n\nv0.4.103\n* Added \"weighted\" option to the \"-filter-slivers\" command. When used with the \"min-area=\" option, the \"weighted\" flag multiplies the area of each polygon ring by the \"Polsby-Popper\" compactness metric, so sliver-shaped rings have a lower effective area.\n* Added \"this.perimeter\" to the JS expression context. Perimeter values are in meters for unprojected data or in projected units (usually meters) for projected data.\n* Added \"this.compactness\" to the JS expression context. Compactness is the \"Polsby-Popper\" score of each polygon feature.\n* Added \"-points vertices2\" option, which is like \"-points vertices\", but retains every vertex of the original polygon or polyline instead of removing duplicate vertices within each feature.\n* Fix for issue #310.\n\nv0.4.102\n* Close issues #308 and #309.\n\nv0.4.101\n* Re-publish to npm\n\nv0.4.100\n* Enable support for variable simplification amounts at the feature level using JS expressions. Adding the \"variable\" keyword to the -simplify command turns on variable simplification.\n\nv0.4.99\n* Support reading CSV files larger than 2GB.\n* Added -i command option csv-filter=, for filtering CSV records on import using a JS expression.\n* Added -i command option csv-fields=, for importing a subset of fields from a CSV file.\n* Faster rendering of many unstyled point symbols (which are drawn as little squares).\n\nv0.4.98\n* Fixed a performance regression.\n\nv0.4.97\n* Updated mproj version to include bertin1953 projection.\n\nv0.4.96\n* Fix for issue #304 (inaccurate centroids for some tiny polygons, caused by floating point rounding).\n\nv0.4.95\n* Fixed some clipping and dissolving errors caused by floating point inaccuracy.\n\nv0.4.94\n* Fix for problem importing GeoJSON with non-standard properties\n\nv0.4.93\n* Improve CRS detection when merging datasets\n\nv0.4.92\n* Added '-o pixels=' and '-frame pixels=' options for scaling SVG output based on the number of pixels in the output image.\n\nv0.4.91\n* Upgraded to 0.0.18 of mapshaper-proj.\n\nv0.4.90\n* Upgraded to v0.0.17 of mapshaper-proj, which includes the \"Equal Earth\" projection (+proj=eqearth).\n\nv0.4.89\n* Convert undefined and null values to empty strings when outputting a DBF string field.\n\nv0.4.88\n* Fix: convert non-alphameric characters in DBF field names to underscores.\n* Web UI updates to support putting more than one mapshaper instance on a single page.\n\nv0.4.87\n* Added experimental -run command, for creating commands on-the-fly and running them.\n* Added experimental -require command, for importing Node modules for use in -each expressions.\n* Added \"d\" as an alias for \"this.properties\" in expressions, with a nod to D3.\n* -join command prints a warning instead of erroring if no records are joined.\n\nv0.4.86\n* [gui] Now you can drag layers in the layer menu to change their stacking order.\n* Added mapshaper-gui -a option, to display all layers initially.\n* The -target command can now target multiple layers.\n* Added undocumented aspect-ratio= option to -rectangle and -rectangles commands.\n\nv0.4.85\n* [style] Added -style stroke-dasharray= option.\n* Added -o max-height= option, for limiting the height of SVG output files.\n* Added undocumented -rectangles option, for creating a box around every feature in a layer.\n* Bug fixes\n\nv0.4.84\n* [rectangle] offset= option accepts a list of four values (minx,miny,maxx,maxy) in addition to a single value. Value can be a percentage or an interval.\n* [rectangle] If no source= or bbox= option is given, -rectangle uses the bounding box of the current target layer(s).\n* [points] Added a polyline-to-point conversion that reduces each polyline feature to a single vertex, suitable for point-in-polygon testing.\n* Bug fixes\n\nv0.4.83\n* Now you can turn on multiple reference layers from the layers menu in the web UI. Reference layers are styled on the map if they have style attributes.\n* If a feature is pinned via the [i] inspector tool, the delete key will delete it.\n* The text-anchor property of single-line SVG labels is automatically updated on drag, based on its horizontal position in relation to its anchor point. Labels towards the left of the anchor are given text-anchor=end, labels to the right are given text-anchor=start and centered labels are given text-anchor=middle.\n* The text-anchor property of multi-line SVG labels can be toggled by clicking the label after it has been selected.\n* Added -uniq max-count= option to retain multiple features with the same id.\n\nv0.4.82\n* Added -lines each= option, for applying a JS expression to each output line feature. The expression can access data about the original polygon features, just like the where= option.\n\nv0.4.81\n* Added -lines where= and -innerlines where= options, for filtering lines using properties of adjacent polygons. Polygons are represented as A and B objects in the expression. B is null for \"outer\" lines.\n\nv0.4.80\n* Results of assigments in -calc expressions are available to subsequent -each expressions as variables.\n* Updated dependencies.\n\nv0.4.79\n* Added new -include command for loading JS data and functions from an external file. The file should contain a single JS object. The keys and values of this object are converted to variables in the JS expression used by -each.\n\nv0.4.78\n* Bug fix\n\nv0.4.77\n* Added -s/--direct-save option to mapshaper-gui, for saving output files to a path relative to the user's current working directory, instead of into the browser's download folder.\n* Added -f/--force-save option to mapshaper-gui, to allow overwriting input files.\n\nv0.4.76\n* Increased the maximum size of CSV output to 2GB (the maximum Buffer size in Node).\n* Print a warning instead of throwing an error if a CSV file contains no data records.\n\nv0.4.75\n* -join copies source fields by default even if calc= option is present.\n* -join prints a warning when inconsistent values are found in copied fields during many-to-one joins.\n\nv0.4.74\n* -join fields=* now copies all of the fields from the source layer, including the key field.\n\nv0.4.73\n* The -merge-layers command is now able to merge layers from different datasets (including layers in the GUI and layers loaded via separate -i commands).\n* Added -merge-layers \"force\" option for merging layers with inconsistent data fields.\n\nv0.4.72\n* -dissolve and -dissolve2 now accept a comma-separated list of field names to dissolve on. \n\nv0.4.71\n* Added -o field-order=ascending option, for sorting the column names (A-Z) of DBF and CSV files. \n\nv0.4.70\n* Order of data fields is preserved in DBF output (previously fields were sorted in case-sensitive ascending order).\n\nv0.4.69\n* Added support for using .shx file when present. (Very occasionally, records in the .shp file are packed in an unusual way, and the .shx index file is needed for reading the .shp file).\n\nv0.4.68\n* Added ability to dismiss the intersection display on the GUI.\n* Updated web interface colors.\n\nv0.4.67\n* Renamed -svg-style command to -style (-svg-style still works as an alias).\n* Minor web interface improvements\n\nv0.4.66\n* SVG labels are displayed in the web interface.\n* Update label position relative to its anchor point by clicking and dragging the label.\n\nv0.4.65\n* Add -o height option, for setting the pixel height of SVG and TopoJSON output.\n\nv0.4.64\n* Bug fixes\n\nv0.4.63\n* Added mapshaper-xl script, for running mapshaper with about 8GB of heap memory instead of the default amount.\n* Output type 1 Shapefiles if features are all single points (more compact than type 8/multipoint).\n\nv0.4.62\n* Added -o singles option for saving each output layer to a separate file (TopoJSON only).\n* Allow -proj command to set the projection of an empty dataset.\n\nv0.4.61\n* Improvements to command line help.\n* Add support for specifying most distance parameters using a variety of units. For example: -affine shift=1km,2km\n* Add support for specifying areal parameters with units. For example: -filter-islands min-area=5sqkm. Recognizes sqmi/mi2, sqkm/km2, sqm/m2, sqft/ft2.\n\nv0.4.60\n* Added -o id-prefix=  option for namespacing svg layer and symbol ids.\n* Fix: SVG layer ids are based on layer names instead of output file name.\n\nv0.4.59\n* Bug fixes and performance improvements.\n* Added undocumented -i geometry-type= option, to allow importing GeoJSON features containing GeometryCollections with mixed types (which would otherwise cause an error).\n\nv0.4.58\n* Fix for issue #236 - error reading some GeoJSON files.\n* Added undocumented -filter-geom command with bbox= option, for removing non-intersecting geometry.\n\nv0.4.57\n* Bug fix for issue #228 \"keep_shapes option doesn't always keep shapes\".\n\nv0.4.56\n* -clean now removes empty geometries by default.\n* Added -clean allow-empty option to retain empty geometries.\n* Added -clean snap-interval= option to override the default snapping threshold.\n* Updated mapshaper-proj to v0.0.15 (improved .prj file support).\n\nv0.4.55\n* Fix for issue #221 (-simplify resolution= option error).\n\nv0.4.54\n* Improvements to -clean command\n\nv0.4.53\n* Update -dissolve2 command to flatten polygons (remove overlaps) and optionally fill gaps.\n* Added -clean command to flatten polygons and fill gaps.\n* Added min-gap-area= option to -clean and -dissolve2 comands to specify the threshold for filling enclosed gaps between adjacent polygons.\n* Show contents of zip files in web UI file import popup.\n\nv0.4.52\n* Redesigned initial view of the web UI.\n* Temporary fix for issue #219 -- stop trying to fix polygon geometry after applying coordinate precision.\n\nv0.4.51\n* Fix for issue #216 (GeoJSON export fails in browser).\n\nv0.4.50\n* Added support for reading CSV files larger than 250MB.\n* Added support for reading and writing CSV files using other encodings than UTF-8 or ascii.\n* Added -drop command for dropping loaded data layers and for deleting geometry and/or attribute data fields from targeted layers.\n* The [-info] command now shows an asterisk next to currently targetted layers.\n* Bug fixes\n\nv0.4.49\n* Added -polygons gap-tolerance= option, for closing \"undershoots\" (tiny gaps between two polylines).\n\nv0.4.48\n* Added -shape command, for creating polygons and polylines from lists of coordinates.\n* Added -rectangle command, for creating rectangular polygons.\n* Added experimental -polygons command, for convering a polyline layer containing rings to a polygon layer.\n* Made -dissolve2 more robust (less likely to drop rings when input contains overlapping shapes).\n* In JS expressions, this.x and this.y can now be used to set x,y coordinates of point features (previously they were read-only).\n* -svg-style layer-text= recognizes <br>, \\n and '\\n' (newline char) as line delimiters.\n* -o margin= option now accepts a comma-separated list of margin widths, as an alternative to a single value. List order is xmin,ymin,xmax,ymax (same as bbox= option).\n\nv0.4.47\n* Added -svg-style where= option, for applying svg attributes to a subset of features\n\nv0.4.46\n* Added -o geometry-type= option, which overrides the default GeoJSON output type with one of: Feature, FeatureCollection, GeometryCollection.\n\nv0.4.45\n* Added -o svg-scale= option, for scaling SVG output using geographical units per pixel.\n\nv0.4.44\n* -dissolve2 now removes polygon rings that are improperly nested inside other rings.\n\nv0.4.43\n* Restore prohibition against overwriting input files unless the \"-o force\" option is present.\n\nv0.4.42\n* Added support for exporting TopoJSON in pixel coordinates using the -o width= and -o margin= options.\n\nv0.4.41\n* Added -o rfc7946 option, for generating RFC 7946-compliant GeoJSON: default 6-decimal precision, CCW outer-ring winding order, antimeridian-spanning bbox, warns if CRS is not WGS84.\n\nv0.4.40\n* Added sprintf() and round(num, digits) utility functions to -each command context.\n* Fixed bug that prevented using applyCommands() with -clip or -erase commands.\n\nv0.4.39\n* [web] Added support for EPSG codes using the -proj command in the browser console (using Proj.4 syntax, like:  -proj +init=epsg:2784). Supported init files: epsg, esri, nad83, nad27.\n\nv0.4.38\n* Added -svg-style letter-spacing= option.\n* Started attaching SVG symbol classes to top-level symbol element (this only affects multipoint symbols).\n\nv0.4.37\n* Added support for multiline labels. Lines are separated by newline characters (`'\\n'`) in the label text.\n* Added -svg-style line-height= option to control the line height of multiline labels.\n\nv0.4.36\n* Setting both r= and label-text= options of -svg-style creates labels with anchor points.\n* Added font-weight= and font-style= options to -svg-style command.\n\nv0.4.35\n* Added SVG label output, with new options to -svg-style command.\n* Added string-fields= option as an more convenient alternative to field-types= in the -i and -join commands.\n\nv0.4.34\n* Fixed an incompatibility with Node versions < 3.0.\n\nv0.4.33\n* [web] Added support for importing and exporting large GeoJSON files (>1GB) to the web interface.\n\nv0.4.32\n* [web] The inspector tool now shows multiple hits when hovering over/clicking on overlapping polygons and points with identical coordinates.\n* Added -target type=polygon|polyline|point option, for targeting layers of a given type.\n\nv0.4.31\n* Added support for exporting large (>1GB) GeoJSON files.\n\nv0.4.30\n* Added support for importing large (>1GB) GeoJSON files using the command line script.\n* Changed `-line` command to generate two fields: \"RANK\", containing an integer and \"TYPE\", containing a human-friendly name.\n\nv0.4.29\n* Fixed error exporting Shapefiles with unparsable .prj files (content of original file is copied to output file).\n* Updated mapshaper-proj to v0.0.11.\n\nv0.4.28\n* Fixed error when clipping polyline layers containing empty geometries.\n* [web] Support backslash continuation lines in web console.\n\nv0.4.27\n* Added `-points interpolated interval=` options, for interpolating points along polylines at a fixed interval.\n* Updated parsing of list options to accept quoted items, like this: `fields=\"County FIPS\",State`\t.\n* Renamed `-proj source=` option to `-proj match=`.\n* Now, `-proj from=` option accepts a .prj file name or layer id as an alternative to a projection string.\n* Now, `-proj from=` sets the target CRS if no destination projection is given.\n\nv0.4.26\n* [web] Updated console interface to display alongside the map.\n\nv0.4.25\n* Added `-proj target=` option, with support for `target=*`.\n* Added `-target name=` option for renaming the target layer.\n* Updated mapshaper-proj to v0.0.10.\n\nv0.4.24\n* Fixed: error dissolving polyline features containing rings.\n\nv0.4.23\n* Added polyline support to -dissolve command.\n\nv0.4.22\n* Added `-proj source=` option to match projection from a .prj file or another layer.\n* Added support for simple point-to-point spatial joins.\n* Added `-points vertices` option to convert polygon and polyline features to multipoint features.\n* [web] Save console history between sessions using browser localStorage.\n* [web] Always display mouse coordinates.\n* [web] Display coordinates of mouse bbox after first click.\n\nv0.4.21\n* Updated mapshaper-proj to v0.0.9, with better WKT parsing and more projections.\n* Added (undocumented) -shape command.\n* Bug fixes\n\nv0.4.20\n* Added support for generating .prj files.\n* Bug fixes\n\nv0.4.19\n* Improved display of styled layers.\n* Bug fixes\n\nv0.4.18\n* Stacking order of layers in SVG output follows order of `target=` list.\n* [-colorizer] `colors=` can take a space- or a comma-delimited list.\n* [-o] Added `point-symbol=square` option for SVG output.\n\nv0.4.17\n* Added section for experimental commands to command line help.\n* Added experimental `-affine` command for scaling, shifting and rotating coordinates.\n* Added experimental `-colorizer` command with support for sequential and categorical color schemes (intended for SVG output).\n* Fixed bug that caused .zip file export to fail in IE11.\n\nv0.4.16\n* Bug fixes\n\nv0.4.15\n* [web] Improve layer pinning interface.\n\nv0.4.14\n* [web] Add button to pin a layer, so it can be compared to the selected layer.\n* Allow `calc=` expressions to include assignments to same-named variables, ex: `calc=\"POPULATION = sum(POPULATION)\"`.\n\nv0.4.13\n* Add `calc=` option to `-dissolve` and `-dissolve2` commands.\n\nv0.4.12\n* [csv] Improve detection of numeric fields by testing all non-empty values, not just the first value.\n* [csv] Print the names of auto-detected numeric fields to the console.\n\nv0.4.11\n* Fix a bug in undocumented `-data-fill` command.\n\nv0.4.10\n* [GeoJSON] Added `-o combine-layers` option, which modifies GeoJSON output by combining all output layers into a single GeoJSON file.\n* [SVG] Convert all parts of a multipart polygon or polyline as a single `<path>` element, instead of creating a `<g>` group with multiple child elements.\n* Fix for issue 174 (bug in `-merge-layers command`).\n\nv0.4.9\n* Fix for invalid GeoJSON output when an attribute data string contained a certain character sequence (Issue #171).\n\nv0.4.8\n* Fix some glitches in the web attribute inspector.\n\nv0.4.7\n* Added `-join calc=` option, for many-to-one joins. Provides functions for combining values from multiple source records and assigning the result to a field in the target table.\n* Fixed bug that broke the `-i name=` option when multiple `-i` commands were given.\n* Added more functions for `-calc` and `-join calc=` expressions: `mode()`, `first()`, `last()` and `collect()`.\n* Added undocumented `-data-fill` command, for interpolating missing data values by copying from neighbor polygons.\n\nv0.4.6\n* [cli] Fix wildcard expansion of input filenames in Windows command shell.\n\nv0.4.5\n* [cli] Retain .prj file when combining multiple Shapefiles that have the same projection.\n\nv0.4.4\n* [cli] Fix bug writing binary Shapefile files to disk.\n\nv0.4.2\n* [cli] Fix bug importing .shp file contents via applyCommands() api function.\n\nv0.4.1\n* [cli] Display user errors normally when using `-quiet` command.\n\nv0.4.0\n* Added support for loading several datasets via multiple `-i` commands.\n* Default target of a command is the output of the previous command (previously the default target was all layers).\n* Added `-target` command to set the default target.\n* `target=` option and `-target` command accept numerical layer ids; first layer of first dataset is 1.\n* Added `-quiet` command to inhibit console messages.\n* `-info` command shows information about all layers in all datasets.\n* Updated applyCommands() to accept an object containing contents of multiple input files and return an object containing contents of multiple output files (via callback).\n* Added `-uniq verbose` option, to show which features are removed.\n* Added `-o extension=` option, to set the file extension of exported GeoJSON and TopoJSON files.\n\nv0.3.43\n* Fixed bug that caused SVG to be generated without simplification applied (issue #161).\n\nv0.3.42\n* Fixed bug that could prevent SVG output after simplification (issue #160).\n\nv0.3.41\n* More informative error messages for -merge-layers command.\n\nv0.3.40\n* Fix regression: topology not being built when `-i combine-files` is used.\n* Add experimental `-cluster` command for aggregating polygons into compact groups.\n* Add support for importing TopoJSON files with nested GeometryCollections.\n\nv0.3.39\n* Add support for importing GeoJSON and TopoJSON collections that contain mixed geometry types. Polygon/MultiPolygon, LineString/MultiLineString and Point/MultiPoint features are imported to separate layers.\n* Address problems caused by imported JSON records containing inconsistent data properties.\n\nv0.3.38\n* [gui] Support loading file(s) from a URL. Use query string `?files=` followed by a comma-separated list of file URLs.\n* [dissolve2] Print a warning instead of halting when messy topology causes an uncommon pathfinding error.\n* Apply quantization to TopoJSON point layers (previously point layers were not quantized).\n\nv0.3.37\n* [join] Add `isMax() isMin() isMode()` functions to `-join where=` expressions.\n* [proj] Fix `webmercator` projection alias.\n* [gui] Fix layer menu scrolling.\n\nv0.3.36\n* Add `-point-grid` command.\n\nv0.3.35\n* [cli] Remove the restriction on importing files of different datatypes using `-i combine-files`.\n\nv0.3.34\n* Bug fixes\n* Add -simplification lock-box option (undocumented) to retain vertices at the corners and edges of a rectangular dataset (for simplifying vector tiles).\n\nv0.3.33\n* Fixes a global variable leak.\n\nv0.3.32\n* Fixes a bug that caused incorrect TopoJSON output of datasets containing partially overlapping line features.\n\nv0.3.31\n* `-info` command shows a Proj.4 CS definition, if CS is known or can be inferred.\n\nv0.3.30\n* New `-graticule` command adds a graticule layer appropriate for a world dataset centered on longitude 0.\n* Add `-proj from=` option, for defining the original coordinate system of a dataset if unknown.\n* Fix: escape characters in SVG attributes.\n\nv0.3.29\n* Added the `-uniq` command, which applies an expression to each feature and removes features that produce duplicate values.\n* Commands are displayed in alphabetical order by the `-help` command.\n* Fixed a bug that prevented reprojecting point layers.\n\nv0.3.28\n* Improved handling of projection errors.\n\nv0.3.27\n* Added reprojection support via mapshaper-proj, a JS port of the Proj.4 projection library.\n* The `-proj` command takes a proj4 string or an alias.\n* The `-proj densify` option interpolates vertices so long, straight segments can transform into curved lines.\n* The `-projections` command lists all supported proj4 projections and aliases.\n* Mapshaper now parses the .prj files of Shapefiles to identify their coordinate system.\n\nv0.3.26\n* -info command displays Object and Array data properties using JSON.\n* The web UI inspector displays objects and arrays as JSON, and accepts JSON input.\n* Object/Array data properties are serialized as JSON in CSV output.\n\nv0.3.25\n* Add geometry info to the console output of `-inspect`\n* Typing `mapshaper <command>` shows help for that command (shortcut for `mapshaper -h <command>`)\n* Rename `cleanup` option of `-clip` and `-erase` to `remove-slivers`. Also, delete unused arcs by default after clip/erase.\n* Skip over empty Shapefile geometry parts when importing, instead of throwing an error.\n\nv0.3.24\n* Fix regression affecting point Shapefile importing.\n\nv0.3.23\n* The new `-inspect <expression>` command displays attribute information about a single feature.\n* In the web UI console, `-inspect` displays selected features as if they had been inspected interactively using the \"i\" tool.\n* Updated web UI color scheme.\n\nv0.3.22\n* The `mapshaper-gui` script now accepts one or more files to load (e.g. `$ mapshaper-gui states.shp cities.json`)\n* `mapshaper-gui` probes for an open port on localhost if the default port is in use\n* `mapshaper-gui` exits when mapshaper's browser page is closed\n\nv0.3.21\n* The -filter-slivers command is now documented in `mapshaper -h`.\n* Open polygon rings are automatically closed on import (Shapefile and GeoJSON only).\n* Reading DBF files is faster.\n* When exporting SVG or TopoJSON from the Web UI, all selected layers are exported in a single file.\n\nv0.3.20\n* Add \"Settings\" button next to the simplification slider. Now, users can see the current simplification settings and change them on-the-fly.\n* Display a menu for selecting export layers when there are multiple exportable layers.\n* [`split`] When the target layer is unnamed, \"split-\" is no longer added as a prefix to output layer names when splitting on a data field.\n* Bug fixes\n\nv0.3.19\n* Support for exporting CSS style attributes with the new `-svg-style` command.\n* Display mouse coordinates in the Web UI when the \"i\" tool is selected. Clicking the screen selects the coordinates so they can be copied to the clipboard.\n* Bug fixes\n\nv0.3.18\n* Basic support for exporting to SVG.\n* Added command line option `-o format=svg`. Saving to a file with \".svg\" extension also works.\n* Added SVG-specific options `width=` and `margin=` to the output command to override the default values.\n* Added support for importing and exporting NULL type Shapefiles\n* Bug fixes\n\nv0.3.17\n* Added `unjoined` and `unmatched` options to the `-join` command, for inspecting unjoined records from the source and destination tables.\n* Added a constraint to Visvalingam simplification to remove an ambiguity in the order of vertex removal when several vertices have the same effective area.\n* Added `cleanup` option to `-clip` and `-erase` commands, which removes slivers created by clipping (before, slivers were removed by default).\n* Rename `cartesian` option of `-simplify` to `planar`.\n\nv0.3.16\n* `-dissolve` now supports point layers. Dissolve reduces a group of point features to a single point at the centroid of the group.\n* `-dissolve weight=` option takes a data field or JS expression and uses this value to weight each point when calculating the centroid of a group of points.\n* `-filter-fields` no longer supports field renaming. Use `-rename-fields` instead.\n* `-info` and `-filter-fields` commands can be applied to much larger DBF files without triggering out-of-memory errors. \n\nv0.3.15\n* For the web, separate geoprocessing library and Web UI into two files (mapshaper.js and mapshaper-gui.js)\n* Improve detection of invalid DBF files.\n* Bug fixes.\n\nv0.3.14\n* -innerlines command creates fewer line features.\n* Bug fixes.\n\nv0.3.13\n* Adds support for `-o format=json`, which exports an array of JSON records containing attribute data for each feature. Arrays of JSON records can also be imported.\n* Adds support for the output command (-o) to the Web UI console.\n* Bug fixes.\n\nv0.3.12\n* Adds `-simplify stats` option, which displays summary statistics relating to the geometry of simplified paths.\n* Adds `-simplification weighting=` option, for setting the weight parameter in weighted Visvalingam simplification.\n* Adds `densify` option to the (still undocumented) `-proj` command.\n* Automatically filter slivers after a clip or erase operation.\n* Adds (undocumented) `-filter-slivers` command.\n\nv0.3.11\n* Adds `-simplify resolution=` option, to apply an appropriate amount of simplification for a given display resolution. Example: `-simplify resolution=8000x6000`.\n* Adds $.x and $.y getters for retrieving x- and y-coordinates of point features from within an `-each` or `-filter` expression.\n\nv0.3.10\n* Adds planar option to simplification menu, if dataset contains lat-long coordinates.\n* Bug fixes\n\nv0.3.9\n* Changed web ui layout so popup attribute inspector appears more stable when resizing.\n* Much faster screen rendering of layers containing many small paths.\n\nv0.3.8\n* The -join command now can do point-to-polygon and polygon-to-point spatial joins.\n* Added sum-fields= option to the -join command, for summing the contents of one or more fields when joining multiple source records to a single target record.\n* Added where= option to the -each command, for targetting a subset of features using a boolean JS expression.\n* Added name= option to the import command, for renaming the input layer or layers.\n* Bug fixes\n\nv0.3.7\n* Added a button for exporting to CSV\n* Added `delimiter=` export option for overriding the default delimiter when outputting CSV.\n* More consistent layer naming -- layers created with the \"+\" option are unnamed by default.\n* Interface refinements.\n\nv0.3.6\n* Web UI now can import CSV files and standalone DBF files, which enables joining via the browser console.\n* Bug fixes\n\nv0.3.5\n* The attribute data inspector now supports editing data values.\n* The -split command can be applied to layers with no geometry.\n* Bug fixes\n\nv0.3.4\n* Turn on attribute data inspection on rollover by clicking the \"i\" button.\n\nv0.3.3\n* Correctly import numeric DBF fields that use commas as the decimal separator.\n* Use retina-quality rendering on retina displays.\n* New UI color scheme.\n* L/R arrow keys toggle between layers.\n* Added experimental weight-scale option to weighted Visvalingam simplification method.\n\nv0.3.2\n* Add delete buttons for each layer in the layers menu.\n* Stop displaying ghosted clipping shapes after clip or erase commands.\n* Many other interface improvements.\n\nv0.3.1\n* Adds freeform export options to export menu.\n* Fixes several bugs.\n\nv0.3.0\n* An updated web interface has a built-in console with support for command line editing.\n* Support for text encodings in the web UI.\n* Many bug fixes.\n\nv0.2.28\n* [cli] Fixed regression reading .shp files larger than 1GB.\n* [web] Added buttons for zooming in/out.\n\nv0.2.27\n* Add popup error messages to the web UI.\n* Add a \"No simplification\" option to the import options.\n\nv0.2.gi26\n* Web UI can now load more than one file. Only the last-loaded file can be edited and exported. The previous file is visible as a faded image. Older files are dropped.\n* Try to handle some irregularities found in in-the-wild .shp files.\n\nv0.2.25\n* Web UI shows a progress bar while importing large datasets.\n\nv0.2.24\n* The web interface can now import Zip archives containing supported file types.\n\nv0.2.23\n* Add `+` and `name= `options to `-filter` command, for creating a new filtered layer alongside the original layer.\n* Add `force` flag to the `-join` command. This allows values in the target data table to be overwritten by values in the source table when both tables contain identically named fields.\n* Bug fixes\n\nv0.2.22\n* Fixed a bug preventing files from importing in the GUI.\n\nV0.2.21\n* Feature ids from GeoJSON and TopoJSON files are automatically preserved.\n* Fixed several bugs affecting csv files.\n* When importing and exporting from/to GeoJSON or TopoJSON, top-level \"crs\" properties are preserved.\n* -dissolve command now works on layers without any geometry (in addition to polygon layers).\n* Improvements to text encoding detection.\n\nv0.2.20\n* Added `bbox=` option to `-clip` and `-erase` commands for clipping/erasing using a bounding box.\n* Added `-rename-fields` command.\n* Use .cpg file (if present) to set dbf text encoding.\n* Use dbf \"language driver id\" (if present and valid) to set dbf text encoding.\n* Try to auto-detect dbf text encoding if other methods fail (limited to utf-8 and latin1)\n* Support reading delimited text files with non-utf-8 encodings (using -i encoding= option).\n* Remove byte order mark (BOM) when importing text files in utf-8 and utf-16.\n* Fix a bug affecting -calc command.\n\n\nv0.2.19\n* Fixed an error importing Shapefiles with the `encoding=` option.\n* Added experimental (undocumented) `-proj` command for projecting lat-lng datasets.\n* Added `-projections` command for listing names of supported projections.\n\nv0.2.18\n* Supports importing, editing and exporting delimited text files and .dbf files.\n* Added `field-types=` option to `-i` and `-join` commands.\n* API function applyCommands() function now accepts delimited text files.\n* Removed optional dataset argument from API function runCommands().\n* Stop supplying default -o command when missing from command line.\n\nv0.2.17\n* Fix an incompatibility with Node 0.12.\n\nv0.2.16\n* Support importing GeoJSON Features that contain GeometryCollections.\n* Fix for issue #68: error clipping some shapes that abut a clip polygon.\n* Skip fields with unsupported types when importing .dbf files (instead of throwing exception).\n* Support for Node 0.12.x\n\nv0.2.15\n* Fixed bug affecting -join command.\n* Rename data fields to avoid name collisions.\n\nv0.2.14\n* Add wildcard expansion for input filenames (to support filename expansion in the Windows command line).\n* Speed up identification of interior points (`-points inner` command).\n* Improve command line help.\n\nv0.2.13\n* Add `-calc` command for calculating simple statistics about a data layer using a JS expression. Functions include sum() median() average() min() max() count().\n* Add function for finding interior points of polygon features, for anchoring symbols and labels.\n* Add `inner` and `centroid` options to the `-points` command -- for creating a layer of centroids or interior points from a polygon layer\n* Add `-sort` command for sorting the features in a layer\n* `-o id-field=` supports a comma-sep. list of field names -- useful for assigning ids to multiple TopoJSON objects with different data properties.\n\nv0.2.12\n* Add `-filter-islands` command with `min-area`, `min-vertices` and `remove-empty` options.\n* Add `-points` command with `x` and `y` options, for creating a point layer from x, y coordinates in an attribute table.\n* Add `-o prettify` option to generate human-readable GeoJSON and TopoJSON.\n* mapshaper.applyCommands() now returns an array only if output includes more than one JSON object.\n* Bug fixes\n\nv0.2.11\n* Halt when `-merge-layers` fails\n* Print a warning if `-innerlines` output is null\n* Apply snapping after multiple import files are merged/combined\n* Let users apply arbitrarily large snap intervals instead of capping at avg. segment length\n* Use APIError type for invalid API function call parameters\n* Switch from async csv parsing using node-csv to synchronous parsing using d3.dsv\n* Merge mapshaper.runCommandString() into mapshaper.runCommands()\n* Add mapshaper.applyCommands() to tranform Geo/TopoJSON programmatically.\n\nv0.2.9\n* Accept point and polyline type layers as targets of `-clip` and `-erase` commands\n* `-o presimplify` option adds simplification thresholds to TopoJSON arc vertices.\n* Bug fixes\n\nv0.2.8\n* Add `-rename-layers <name(s)>` for renaming one or more target layers\n\nv0.2.7\n* Bug fixes (issues #56 and #58)\n* Improved output file type inference\n\nv0.2.6\n* Add `-o drop-table` option\n* Infer output file type from file name\n* Bug fixes\n\nv0.2.5\n* Add `-o force` option to overwrite existing files instead of renaming output files\n* Bug fix\n\nv0.2.4\n* Add `-o precision` option for rounding output coordinates\n* Add `-i /dev/stdin` and alias `-i -` to receive data via stdin (single-file Topo/GeoJSON input only)\n* Add `-o /dev/stdout` and alias `-o -` to send output to stdout (single-file JSON output only)\n* Add support for Travis CI\n\nv0.2.3\n* Add `-i id-field=` option: import Topo/GeoJSON 'id' property to the specified data field\n* Extend `-o id-field=` option to GeoJSON Features (previously TopoJSON only)\n\nv0.2.2\n* Update weighting function for weighted Visvalingam simplification\n* Add support for loading mapshaper.js with RequireJS\n* Improve display of information with `-info` command\n* Add undocumented `-dissolve2` command, which can dissolve overlapping polygons\n\nv0.2.1\n* Improve performance of `-erase` when erase layer contains many small polygons\n\nv0.2.0\n* New command line syntax\n* New `-clip` and `-erase` commands\n* Many bug fixes"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.2216796875,
          "content": "Copyright (c) 2025, Matthew Bloch\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.59375,
          "content": "# Mapshaper\n\n## Introduction\n\nMapshaper is software for editing Shapefile, GeoJSON, [TopoJSON](https://github.com/mbostock/topojson/wiki), CSV and several other data formats, written in JavaScript.\n\nMapshaper supports essential map making tasks like simplifying shapes, editing attribute data, clipping, erasing, dissolving, filtering and more.\n\nSee the [project wiki](https://github.com/mbloch/mapshaper/wiki) for documentation on how to use mapshaper.\n\nTo suggest improvements, add an [issue](https://github.com/mbloch/mapshaper/issues).\n\n\n## Command line tools\n\nMapshaper includes several command line programs, which can be run under Mac OS X, Linux and Windows.\n\n* `mapshaper` Runs mapshaper commands.\n* `mapshaper-xl` Works the same as `mapshaper`, but runs with more RAM to support larger files.\n* `mapshaper-gui` Runs the mapshaper Web interface locally.\n\nThe project wiki has an [introduction](https://github.com/mbloch/mapshaper/wiki/Introduction-to-the-Command-Line-Tool) to using the command line tool that includes many simple examples.\n\nFor a detailed reference, see the [Command Reference](https://github.com/mbloch/mapshaper/wiki/Command-Reference).\n\n\n## Interactive web interface\n\nVisit the public website at [www.mapshaper.org](http://www.mapshaper.org) or use the web UI locally via the `mapshaper-gui` script. \n\nAll processing is done in the browser, so your data stays private, even when using the public website.\n\nThe web UI works in recent desktop versions of Chrome, Firefox, Safari and Internet Explorer. Safari before v10.1 and IE before v10 are not supported.\n\n## User-contributed resources\n\n[rmapshaper](https://github.com/ateucher/rmapshaper) is an R package written by Andy Teucher that gives R users access to many of mapshaper's editing commands.\n\n[Here](https://hub.docker.com/r/freifunkhamm/mapshaper) are resources for using mapshaper with Docker, provided by Christian Weiss.\n\nYou can find a number of mapshaper tutorials online, including a [two](https://moriartynaps.org/command-carto-part-one/) [part](https://moriartynaps.org/command-line-carto-two/) guide to command line cartography by Dylan Moriarty and [this introduction](https://handsondataviz.org/mapshaper.html) by Jack Dougherty.\n\n\n## Large file support\n\n**Web interface**\n\nFirefox is able to load Shapefiles and GeoJSON files larger than 1GB. Chrome has improved in recent versions, but is still prone to out-of-memory errors when importing files larger than several hundred megabytes.\n\n**Command line interface**\n\nThere are hard limits for reading and writing most file types. The maximum output size of a single file of any type is 2GB. Some file types (GeoJSON, CSV, .shp, .dbf) are read incrementally, so much larger files can be imported.\n\nWhen working with very large files, mapshaper may become unresponsive or crash with the message \"JavaScript heap out of memory.\"\n\nYou can use `mapshaper-xl` as a replacement for the standard `mapshaper` program to allocate more heap memory (8GB by default). You can allocate even more memory like this: `mapshaper-xl 20gb [commands]`.\n\nAnother option is to run Node directly with the `--max-old-space-size` option. The following example (Mac or Linux) allocates 16GB of heap memory:\n```bash\n$ node  --max-old-space-size=16000 `which mapshaper` <mapshaper commands>\n```\n\n## Installation\n\nMapshaper requires [Node.js](http://nodejs.org).\n\nWith Node installed, you can install the latest release version of mapshaper using npm. Install with the \"-g\" flag to make the executable scripts available systemwide.\n\n```bash\nnpm install -g mapshaper\n```\n\nTo install and run the latest development code from github:\n\n```bash\ngit clone git@github.com:mbloch/mapshaper.git\ncd mapshaper\nnpm install       # install dependencies\nnpm run build     # bundle source code files\nnpm link          # (optional) add global symlinks so scripts are available systemwide\n```\n\n## Building and testing\n\nFrom the project directory, run `npm run build` to build both the cli and web UI modules.\n\nRun `npm test` to run mapshaper's tests.\n\n## License\n\nThis software is licensed under [MPL 2.0](http://www.mozilla.org/MPL/2.0/).\n\nAccording to Mozilla's [FAQ](http://www.mozilla.org/MPL/2.0/FAQ.html), \"The MPL's âfile-levelâ copyleft is designed to encourage contributors to share modifications they make to your code, while still allowing them to combine your code with code under other licenses (open or proprietary) with minimal restrictions.\"\n\n\n\n## Acknowledgements\n\nMy colleagues at The New York Times, for countless suggestions, bug reports and general helpfulness.\n\nMark Harrower, for collaborating on the original \"MapShaper\" program at the University of Wisconsin&ndash;Madison.\n"
        },
        {
          "name": "REFERENCE.md",
          "type": "blob",
          "size": 76.6396484375,
          "content": "# COMMAND REFERENCE\n\nThis documentation applies to version 0.6.100 of mapshaper's command line program. Run `mapshaper -v` to check your version. For an introduction to the command line tool, read [this page](https://github.com/mbloch/mapshaper/wiki/Introduction-to-the-Command-Line-Tool) first.\n\n## Command line syntax\n\nMapshaper takes a list of commands and runs them in sequence, from left to right. A command consists of the name of a command prefixed by a hyphen, followed by options for the command. The initial import command `-i` can be omitted.\n\n#### Example\n\n```bash\n# Read a Shapefile, simplify using Douglas-Peucker, output as GeoJSON.\nmapshaper provinces.shp -simplify dp 20% -o precision=0.00001 output.geojson\n```\n\n### Command options can take three forms:\n\n  - Values, like `provinces.shp` and `output.geojson` in the above example\n\n  - Flags, like `dp`\n\n  - Name/value pairs, like `precision=0.00001`\n\n### Common options\n\nThe following options are documented here, because they are used by many commands.\n\n`name=` Rename the layer (or layers) modified by a command.\n\n`target=` Specify the layer or layers targeted by a command. Takes the name of a layer, the number of a layer (first layer is 1), or a comma-separated list of layer names or numbers. Names may contain the `*` wildcard.\n\n`+` Use the output of a command to create a new layer or layers instead of replacing the target layer(s). Use together with the `name=` option to assign a name to the new layer(s).\n\n#### Example\n```bash\n# Make a derived layer containing a subset of features while retaining the original layer\nmapshaper states.geojson -filter 'ST == \"AK\"' + name=alaska -o output/ target=*\n```\n\n## Index of commands\n\n**File I/O**\n\n[-i (input)](#-i-input)\n[-o (output)](#-o-output)\n\n**Editing**\n\n[-affine](#-affine)\n[-classify](#-classify)\n[-clean](#-clean)\n[-clip](#-clip)\n[-colorizer](#-colorizer)\n[-dashlines](#-dashlines)\n[-dissolve](#-dissolve)\n[-dissolve2](#-dissolve2)\n[-divide](#-divide)\n[-dots](#-dots)\n[-drop](#-drop)\n[-each](#-each)\n[-erase](#-erase)\n[-explode](#-explode)\n[-filter](#-filter)\n[-filter-fields](#-filter-fields)\n[-filter-islands](#-filter-islands)\n[-filter-slivers](#-filter-slivers)\n[-frame](#-frame)\n[-graticule](#-graticule)\n[-grid](#-grid)\n[-include](#-include)\n[-inlay](#-inlay)\n[-innerlines](#-innerlines)\n[-join](#-join)\n[-lines](#-lines)\n[-merge-layers](#-merge-layers)\n[-mosaic](#-mosaic)\n[-point-grid](#-point-grid)\n[-points](#-points)\n[-polygons](#-polygons)\n[-proj](#-proj)\n[-rectangle](#-rectangle)\n[-rectangles](#-rectangles)\n[-rename-fields](#-rename-fields)\n[-rename-layers](#-rename-layers)\n[-require](#-require)\n[-run](#-run)\n[-scalebar](#-scalebar)\n[-shape](#-shape)\n[-simplify](#-simplify)\n[-snap](#-snap)\n[-sort](#-sort)\n[-split](#-split)\n[-split-on-grid](#-split-on-grid)\n[-subdivide](#-subdivide)\n[-style](#-style)\n[-symbols](#-symbols)\n[-union](#-union)\n[-uniq](#-uniq)\n\n**Control Flow**\n\n[-if](#-if)\n[-elif](#-elif)\n[-else](#-else)\n[-endif](#-endif)\n[-stop](#-stop)\n[-target](#-target)\n\n**Information**\n\n[-calc](#-calc)\n[-colors](#-colors)\n[-comment](#-comment)\n[-encodings](#-encodings)\n[-help](#-help)\n[-info](#-info)\n[-inspect](#-inspect)\n[-print](#-print)\n[-projections](#-projections)\n[-quiet](#-quiet)\n[-verbose](#-verbose)\n[-version](#-version)\n\n\n## I/O Commands\n\n### -i (input)\n\nInput one or more files in Shapefile, JSON, DBF or delimited text format.\n\nThe `-i` command is assumed if `mapshaper` is followed by an input filename.\n\nJSON files can be GeoJSON, TopoJSON, or an array of data records.\n\nEach named geometry object of a TopoJSON input file is imported as a separate layer.\n\nMapshaper does not fully support M and Z type Shapefiles. The M and Z data is lost when these files are imported.\n\nBy default, multiple input files are processed separately, as if running mapshaper multiple times with the same set of commands. `combine-files` and `merge-files` change this behavior.\n\n**Options**\n\n`<files>` or `files=`  File(s) to input (space-separated list). Use `-` to import TopoJSON or GeoJSON from `/dev/stdin`. Literal JSON data can also be used instead of a file name.\n\n`combine-files` Import multiple files to separate layers with shared topology. Useful for generating a single TopoJSON file containing multiple geometry objects.\n\n`merge-files` (Deprecated) Merge features from multiple input files into as few layers as possible. Preferred method: import files to separate layers using `-i combine-files`, then use the `-merge-layers` command to merge layers. \n\n`snap`     Snap together vertices within a small distance threshold. This option is intended to fix minor coordinate misalignments in adjacent polygons. The snapping distance is 0.0025 of the average segment length.\n\n`snap-interval=`    Specify snapping distance in source units.\n\n`precision=`     (Deprecated) Round all coordinates to a specified precision, e.g. `0.001`. It is recommended to set coordinate precision on export, using `-o precision=`.\n\n`no-topology`  Skip topology identification to speed up processing of large files. For use with commands like `-filter` that don't require topology.\n\n`encoding=`\tSpecify encoding used for reading .dbf files and delimited text files. If the `encoding` option is missing, mapshaper will try to detect the encoding of .dbf files. Dbf encoding can also be set using a .cpg file.\n\n`id-field=` (Topo/GeoJSON) Import values of \"id\" property to this data field.\n\n`string-fields=` (CSV) List of fields to import as strings (e.g. FIPS,ZIPCODE). Using `string-fields=*` imports all fields as strings.\n\n`field-types=` Type hints for importing delimited text. Takes a comma-separated list of field names with type hints appended; e.g. `FIPS:str,zipcode:str`. Recognized type hints include `:str` or `:string`, `:num` or `:number`. Without a type hint, fields containing text data that looks like numeric data, like ZIP Codes, will be converted to numbers.\n\n`csv-skip-lines=` Number of lines to skip at the beginning of a CSV file. Useful when a CSV has been exported from a spreadsheet and there are rows of notes above the data section of the worksheet.\n\n`csv-lines=` Number of data records to import from a CSV file (default is all).\n\n`csv-field-names=` Comma-sep. list of names to assign each field. Can be used in conjunction with `csv-skip-lines=1` to replace names from an existing set of field headers.\n\n`csv-fields=` Comma-sep. list of fields to import from a CSV-formatted input file. Fields are filtered as the file is read, which reduces the memory needed to import very large CSV files.\n\n`decimal-comma`  Import numbers formatted with decimal commas, not decimal points. Accepted formats: `1.000,01`  `1 000,01` (both imported as as 1000.01).\n\n`csv-dedup-fields` Assign unique names to CSV fields with duplicate names.\n\n`csv-filter=` A JavaScript expression for importing a subset of the records in a CSV file. Records are filtered as the file is read, which reduces the memory needed to import very large CSV files.\n\n`json-path=` [JSON] Path to an array of data records or a GeoJSON object. For example, `json-path=data/counties` expects a JSON object with the following structure `{\"data\": {\"counties\": []}}`.\n\n`name=`  Rename the imported layer (or layers).\n\n**Example** \n\n```bash\n# Input a Shapefile with text data in the latin1 encoding and see what kind of data it contains\nmapshaper countries_wgs84.shp encoding=latin1 -info\n```\n\n### -o (output)\n\nSave content of the target layer(s) to a file or files.\n\n**Options**\n\n`<file>|<directory>|-`  Name of output file or directory. Use `-` to export text-based formats to `/dev/stdout`.\n\n`format=shapefile|geojson|topojson|json|dbf|csv|tsv|svg` Specify output format. If the `format=` option is missing, Mapshaper tries to infer the format from the output filename. If no filename is given, Mapshaper uses the input format. The `json` format is an array of objects containing data properties for each feature.\n\n`target=` Specify layer(s) to export (comma-separated list). The default target is the output layer(s) of the previous command. Use `target=*` to select all layers.\n\n`force`  Allow output files to overwrite input files (without this option, overwriting input files is not allowed).\n\n`gzip`  Apply gzip compression to output files.\n\n`zip`  Save output files in a single .zip archive.\n\n`cut-table`  Detach attribute data from shapes and save as a JSON file.\n\n`drop-table`  Remove attribute data from output.\n\n`precision=`  Round all coordinates to a specified precision, e.g. `precision=0.001`. Useful for reducing the size of GeoJSON files.\n\n`fix-geometry` Remove segment intersections caused by rounding (via the `precision=` option) or TopoJSON quantization, by reverting intersecting areas to the original coordinates. In the case of quantized TopoJSON output, this option produces delta-encoded arcs that contain some decimal numbers. Be sure to test your software for compatibility. Note that this option is only applied if the original paths are free of intersections. Also, some kinds of invalid geometry, like spikes, do not get fixed.\n\n`bbox-index`  Export a JSON file containing bounding boxes of each output layer.\n\n`encoding=` (Shapefile/CSV) Encoding of input text (by default, Shapefile encoding is auto-detected and CSV files are assumed to be UTF-8).\n\n`field-order=` (Shapefile/CSV) `field-order=ascending` sorts data fields in alphabetical order of field names (A-Z, case-insensitive).\n\n`id-field=`  (Topo/GeoJSON/SVG) Specify one or more data fields to use as the \"id\" property of GeoJSON, TopoJSON or SVG features (comma-separated list). When exporting multiple layers, you can pass a list of field names. The first listed name that is present in a layer's attribute table will be used as the id field for that layer.\n\n`bbox`  (Topo/GeoJSON) Add bbox property to the top-level object.\n\n`extension=`  (Topo/GeoJSON) set file extension (default is \".json\").\n\n`prettify`  (Topo/GeoJSON) Format output for readability.\n\n`singles`  (TopoJSON) Save each output layer as a separate file. Each output file and the TopoJSON object that it contains are named after the corresponding data layer. \n\n`quantization=`     (TopoJSON) Specify quantization as the maximum number of differentiable points along either dimension. Equivalent to the quantization parameter used by the [topoquantize](https://github.com/topojson/topojson-client#topoquantize) command line program. By default, mapshaper applies quantization equivalent to 0.02 of the average segment length.\n\n`no-quantization`  (TopoJSON) Arc coordinates are encoded at full precision and without delta-encoding.\n\n`presimplify` (TopoJSON) Add a threshold value to each arc vertex in the z position (i.e. [x, y, z]). Useful for dynamically simplifying paths using vertex filtering. Given W as the width of the map viewport in pixels, S as the ratio of content width to viewport width, and pz as the presimplify value of a point, the following expression tests if the point should be excluded from the output path: `pz > 0 && pz < 10000 / (W * S)`.\n\n`topojson-precision=`\t(TopoJSON) Set quantization as a fraction of the average segment length.\n\n`ndjson`  (GeoJSON/JSON) Output newline-delimited records.\n\n`gj2008`  (GeoJSON) Generate output that is consistent with the pre-RFC 7946 GeoJSON spec (dating to 2008). Polygon rings are CW and holes are CCW, which is the opposite of the default RFC 7946-compatible output. Mapshaper's default GeoJSON output is now compatible with the current specification (RFC 7946).\n\n`combine-layers`  (GeoJSON) Combine multiple output layers into a single GeoJSON file.\n\n`geojson-type=`   (GeoJSON) Overrides the default output type. Possible values: \"FeatureCollection\", \"GeometryCollection\", \"Feature\" (for a single feature).\n\n`no-null-props`   (GeoJSON) use `\"properties\": {}` instead of `\"properties\": null` when outputting a Feature with no attribute data.\n\n`hoist=`  (GeoJSON) Move one or more properties to the root level of each Feature. Hoisting a field named \"id\" creates an id for each Feature. This option can also be used to create non-standard Feature attributes (as used by the tippecanoe program).\n\n`width=`    (SVG/TopoJSON) Set the width of the output dataset in pixels. When used with TopoJSON output, this option switches the output coordinates from geographic units to pixels and flips the Y axis. SVG output is always in pixels (default SVG width is 800).\n\n`height=`    (SVG/TopoJSON) Similar to the `width` option. If both `height` and `width` are set, content is centered inside the `[0, 0, width, height]` bounding box.\n\n`max-height=` (SVG/TopoJSON) Limit output height (units: pixels).\n\n`margin=`   (SVG/TopoJSON) Set the margin between coordinate data and the edge of the viewport (default is 1). To assign different margins to each side, pass a list of values in the order `<left,bottom,right,top>` (similar to the `bbox=` option found in other commands).\n\n`pixels=`  (SVG/TopoJSON) Output area in pixels (alternative to width=).\n\n`id-prefix=` Prefix for namespacing layer and feature ids.\n\n`svg-data=` (SVG) Export a comma-seperated list of data fields as SVG data-* attributes. Attribute names should match the following regex pattern: `/^[a-z_][a-z0-9_-]*$/`. Non-conforming fields are skipped.\n\n`svg-scale=`   (SVG) Scale SVG output using geographical units per pixel (an alternative to the `width=` option).\n\n`svg-bbox=<xmin,ymin,xmax,ymax>` (SVG)  Bounding box of SVG map in projected map units. By default, the extent of SVG output fits the content; this option lets you provide a custom extent. This could be useful when aligning the SVG output with other content layers, such as images or videos.\n\n`fit-extent=<layer id>` (SVG) Use a layer (typically a layer containing a single rectangle) to set the extent of the map. Paths that overflow this extent are retained in the SVG output.\n\n`point-symbol=square`  (SVG) Use squares instead of circles to symbolize point data.\n\n`delimiter=`  (CSV) Set the field delimiter for CSV/delimited text output; e.g. `delimiter=|`.\n\n`decimal-comma`  (CSV) Export numbers with decimal commas instead of decimal points (common in Europe and elsewhere).\n\n**Example**\n```bash\n# Convert all the Shapefiles in one directory into GeoJSON files in a different directory.\nmapshaper shapefiles/*.shp -o geojson/ format=geojson\n```\n\n## Editing Commands\n\n\n### -affine\n\nTransform coordinates by shifting, scaling and rotating. Not recommended for unprojected datasets.\n\n`shift=`  X,Y shift in source units (e.g. 5000,-5000)\n\n`scale=`  Scale (default is 1)\n\n`rotate=`  Angle of rotation in degrees (default is 0)\n\n`anchor=`  Center of rotation/scaling (default is center of the bounding box of the selected content)\n\n`where=`  Use a JS expression to select a subset of features.\n\nCommon options: `target=`\n\n### -classify\n\nAssign colors or data values to each feature using one of several classification methods. Methods for sequential data include `quantile`, `equal-interval`, `hybrid` and `nice` or categorical classification to a data field.\n\n`<field>` or `field=` Name of the data field to classify.\n\n`save-as=`     \tName of a (new or existing) field to receive the output of classification. The default output field for colors is `fill` or `stroke` (depending on geometry type) and `class` for non-color output.\n\n`values=`       List of values to assign to data classes. If the number of values differs from the number of classes given by the (optional) `classes` or `breaks` option, then interpolated values will be calculated. Mapshaper uses d3 for interpolation.\n\n`colors=` Takes a list of CSS colors, the name of a predefined color scheme, or `random`. Run the [-colors](#-colors) command to list all of the built-in color schemes. Similar to the `values=` option, if the number of listed colors is different from the number of requested classes, interpolated colors are calculated.\n\n`non-adjacent`  Assign colors to a polygon layer in a randomish pattern, trying not to assign the same color to adjacent polygons. Mapshaper's algorithm balances performance and quality. Usually it can find a solution with four or five colors. If mapshaper is unable to avoid giving the same color to neighboring polygons, it will print a warning. You can resolve the problem by increasing the number of colors.\n\n`stops=` A pair of comma-separated numbers (0-100) for limiting the output range of a color ramp.\n\n\n`null-value=`   Value (or color) to use for invalid or missing data.\n\n`classes=`      Number of data classes. This number can also be inferred from the `breaks=` or `values=` options.\n\n`breaks=`       Specify user-defined sequential class breaks (an alternative to automatic classification using `quantile`, `equal-interval`, etc.).\n\n`outer-breaks=`  A pair of comma-separated numbers setting min and max breakpoints to use when computing class breaks. This setting overrides the default behavior, which is to use the min and max values of the data field being classified. This setting can be used to prevent extreme data values (outliers) from affecting equal-interval classification. Also useful for setting outside breakpoints for continuous color ramps (when using the `continuous` option).\n\n`method=`       Classification method. One of: `quantile`, `equal-interval`, `nice`, `hybrid` (sequential data), `categorical`, `non-adjacent` and `indexed`. This parameter is not required if the classification method can be inferred from other options. For example, the `index-field=` parameter implies indexed classification, the `categories=` parameter implies categorical classification.\n\n`quantile`      Use quantile classification. Shortcut for `method=quantile`.\n\n`equal-interval` Use equal interval classification. Shortcut for `method=equal-interval`.\n\n`nice`          Same as `method=nice`. This scheme finds equally spaced, round breakpoints that roughly divide the dataset into equal parts (similar to quantile classification).\n\n`invert`        Reverse the order of colors/values.\n\n`continuous`    Output continuously interpolated values (experimental). Uses linear interpolation between class breaks, which may give poor results with some distributions of data. This option is for creating unclassed/continuous-color maps.\n\n`index-field=`  Use class ids that have been precalculated and assigned to this field. Values should be integers from `0 ... n-1` (where n is the number of classes). `-1` is the null value.\n\n`precision=`    Round data values before classification (e.g. `precision=0.1`).\n\n`categories=`   List of values in the source data field. Using this option triggers categorical classification.\n\n`other=`  Default value for categorical classification. This value is used when the value of the source data field is not present in the list of values given by `categories=`. Defaults to `null-value=` or null.\n\n**Options for generating SVG keys**\n\n`key-style=`         One of: simple, gradient, dataviz\n\n`key-name= `         Name of output SVG file\n\n`key-width=`         Width of key in pixels\n\n`key-font-size=`     Font size of tic labels in pixels\n\n`key-tile-height=`   Height of color tiles in pixels\n\n`key-tic-length=`    Length of tic mark in pixels\n\n`key-label-suffix=`  String to append to each label\n\n`key-last-suffix=`   String to append to the last label\n\n\n**Examples**\n\n```bash\n# Apply a sequential color ramp to a polygon dataset using quantiles.\nmapshaper covid_cases.geojson -classify save-as=fill quantile color-scheme=Oranges classes=6 -o out.geojson\n```\n\n### -clean\n\nThis command attempts to repair various kinds of abnormal geometry that might cause problems when running other mapshaper commands or when using other software.\n\nFeatures with null geometries are deleted, unless the `allow-empty` flag is used.\n\nPolygon features are cleaned by removing overlaps and filling small gaps between adjacent polygons. Only gaps that are completely enclosed can be filled. Areas that are contained by more than one polygon (overlaps) are assigned to the polygon with the largest area. Similarly, gaps are assigned to the largest-area polygon. This rule may give undesired results and will likely change in the future.\n\nLine features are cleaned by removing self-intersections within the same path. Self-intersecting paths are split at the point of intersection and converted into multiple paths within the same feature. When two separate paths intersect in-between segment endpoints, new vertices are inserted at the point of intersection.\n\nPoint features are cleaned by removing duplicate coordinates within the same feature.\n\n`gap-fill-area=`  (polygons) Gaps smaller than this area will be filled; larger gaps will be retained as holes in the polygon mosaic. Example values: 2km2 500m2 0. Defaults to a  dynamic value calculated from the geometry of the dataset.\n\n`sliver-control=` (polygons) Preferentially remove slivers (polygons with a high perimeter-area ratio). Accepts values from 0-1, default is 1. Implementation: multiplies the area of gap areas by the \"Polsby Popper\" compactness metric before applying area threshold.\n\n`overlap-rule=` (polygons) Assign overlapping polygon areas to one of the overlapping features based on this rule. Possible options are: min-id, max-id, min-area, max-area (default is max-area).\n\n`allow-overlaps` Allow features to overlap each other. The default behavior is to remove overlaps.\n\n`snap-interval=` Snap vertices within a given threshold before performing other kinds of geometry repair. Defaults to a very small threshold. Uses source units.\n\n`rewind` Fix errors in the winding order of polygon rings.\n\n`allow-empty`  Allow null geometries, which are removed by default.\n\nCommon options: `target=`\n\n\n### -clip\n\nRemove features or portions of features that fall outside a clipping area.\n\n`<source>` or `source=` Clip to a set of polygon features. Takes the filename or layer id of the clip polygons.\n\n`bbox=<xmin,ymin,xmax,ymax>` Delete features or portions of features that fall outside a bounding box.\n\n`bbox2=` Faster bounding box clipping than `bbox=` (experimental).\n\n`remove-slivers` Remove tiny sliver polygons created by clipping.\n\nCommon options: [`name=` `+` `target=`](#common-options)\n\n```bash\n# Example: Clip a polygon layer using another polygon layer.\nmapshaper usa_counties.shp -clip land-area.shp -o clipped.shp\n```\n\n### -colorizer\n\nDefine a function for converting data values to colors that can be used in subsequent calls to the `-style` command.\n\n`name=`  Name of the colorizer function.\n\n`colors=`  List of CSS colors.\n\n`random`  Randomly assign colors. Uses `colors=` list if given.\n\n`breaks=`  Ascending-order list of breaks (thresholds) for creating a sequential color scheme.\n\n`categories=`  List of data values (keys) for creating a categorical color scheme.\n\n`other=`  Default color for categorical scheme (defaults to `nodata` color).\n\n`nodata=` Color to use for invalid or missing data (default is white).\n\n`precision=` Rounding precision to apply to numerical data before converting to a color (e.g. 0.1).\n\n```bash\n# Example: define a function for a sequential color scheme and assign colors based on data values\nmapshaper data.json \\\n\t-colorizer name=getColor colors='#f0f9e8,#bae4bc,#7bccc4,#2b8cbe' breaks=25,50,75 \\\n\t-each 'color = getColor(PCT)' \\\n\t-o output.json\n\n# Example: define a function for a categorical color scheme and use it to assign fill colors\nmapshaper data.json \\\n\t-colorizer name=calcFill colors='red,blue,green' categories='Republican,Democrat,Other' \\\n\t-style fill='calcFill(PARTY)' \\\n\t-o output.svg\n```\n\n### -dashlines\n\nSplit lines into sections, with or without a gap.\n\n`dash-length=`  Length of split-apart lines (e.g. 200km)\n`gap-length=`   Length of gaps between dashes (default is 0)\n`scaled`        Scale dashes and gaps to prevent partial dashes\n`planar`        Use planar geometry\n`where=`        Use a JS expression to select a subset of features.\n\n### -dissolve\n\nAggregate groups of features using a data field, or aggregate all features if no field is given. For polygon layers, `-dissolve` merges adjacent polygons by erasing shared boundaries. For point layers, `-dissolve` replaces a group of points with their centroid. For polyline layers, `-dissolve` tries to merge contiguous polylines into as few polylines as possible.\n\n`<fields>` or `fields=` (optional) Name of a data field or fields to dissolve on. Accepts a comma-separated list of field names.\n\n`group-points`   [points] Group the points from each dissolved group of features into a multi-point feature instead of converting multiple points into a single-point centroid feature.\n\n`weight=`  [points] Name of a field or a JS expression for generating weighted centroids. For example, the following command estimates the \"center of mass\" of the U.S. population: ` mapshaper census_tracts.shp -points -dissolve weight=POPULATION -o out.shp`\n\n`planar`   [points] Treat decimal degree coordinates as planar cartesian coordinates when calculating dissolve centroids. (By default, mapshaper calculates the centroids of lat-long point data in 3D space.)\n\n`calc=` Use built-in JavaScript functions to create data fields in the dissolved layer. See example below; see [-calc](#-calc) for a list of supported functions.\n\n`sum-fields=` Fields to sum when dissolving (comma-sep. list).\n          \n`copy-fields=`  Fields to copy when dissolving (comma-sep. list). Copies values from the first feature in each group of dissolved features.\n\n`multipart`  Group features from the target layer into multipart features, without otherwise modifying geometry.\n\n`where=`   Use a JS expression to select a subset of features to dissolve.\n\nCommon options: `name=` `+` `target=`\n\n```bash\n# Example: Aggregate county polygons to states\nmapshaper counties.shp -dissolve STATE -o states.shp\n\n# Example: Use the calc= option to count the number of dissolved features and perform other calculations\nmapshaper counties.shp -dissolve STATE calc='n = count(), total_pop = sum(POP), max_pop = max(POP), min_pop = min(POP)'\n```\n\n\n### -dissolve2\n\nSimilar to `-dissolve`, but able to handle polygon datasets containing overlaps and gaps between adjacent polygons.\n\n`gap-fill-area=`  (polygons) Gaps smaller than this area will be filled; larger gaps will be retained as holes in the polygon mosaic. Example values: 2km2 500m2 0. Defaults to a dynamic value calculated from the geometry of the dataset.\n\n`sliver-control=` (polygons) Preferentially remove slivers (polygons with a high perimeter-area ratio). Accepts values from 0-1, default is 1. Implementation: multiplies the area of gap areas by the \"Polsby Popper\" compactness metric before applying area threshold.\n\n`allow-overlaps` Allow dissolved groups of features to overlap each other. The default behavior is to remove overlaps.\n\nOther options: `<fields>` `calc=` `sum-fields=` `copy-fields=` `name=` `+` `target=`\n\n### -divide\n\nDivide a polyline layer by a polygon layer. Line features that cross polygon boundaries are divided into separate features. Data fields from the polygon layer are copied to the line layer, as in the `-join` command.\n\n`<file|layer>` or `source=` File or layer containing polygon features.\n\n`fields=`  A comma-separated list of fields to copy from the polygon layer (see `-join` command).\n\n`calc=` Use JS assignments and built-in functions to convert values from the polygon layer to (new) fields the target table (see `-join` command).\n\nOther options: `target=`\n\n### -dots\n\nFill polygons with random points, for making dot density maps. This command should be applied to projected layers.\n\n`<fields>` or `fields=`  List of one or more data fields containing data for the number of dots to place in each polygon.\n\n`colors=`\tList of dot colors (one color for each field  in the `fields=` parameter). Dots of different colors are placed in random sequence, so dots of one color do not consistently cover up dots of other colors in the densest areas.\n\n`values=` List of values to assign to dots (alternative to `colors=`).\n\n`save-as=`  Name of a (new or existing) field to receive the assigned colors or values. (By default, colors are assigned to the `fill` field.)\n\n`r=`\tDot radius in pixels.\n\n`evenness=`\tA value from 0-1. 0 corresponds to purely random placement, 1 maintains (fairly) even spacing between the dots within each polygon. The default is 1.\n\n`per-dot=` A number for scaling data values. For example, use `per-dot=100` to make a map that displays one dot per 100 people (or whatever entity is being visualized).\n\n`copy-fields=` List of fields to copy from the original polygon layer to each dot feature.\n\n`multipart` Combine groups of same-color dots into multi-part features.\n\nOther options: `name=` `+` `target=`\n\n\n### -drop\n\nDelete the target layer(s) or elements within the target layer(s).\n\n`fields=`  Delete a (comma-separated) list of attribute data fields. To delete all fields, use `fields=*`.\n\n`geometry`  Delete all geometry.\n\n`holes`  Delete any holes from a polygon layer.\n\n`target=`  Layer(s) to target.\n\n\n### -each\n\nApply a JavaScript expression to each feature in a layer. Data properties are available as local variables. Additional feature-level properties are available as read-only properties of the `this` object.\n\n**Tip:** Enclose JS expressions in single quotes when using the bash shell (Mac and Linux) to avoid shell expansion of \"!\" and other special characters. Using the Windows command interpreter, enclose JS expressions in double quotes.\n\n`<expression>` or `expression=`  JavaScript expression to apply to each feature.\n\n`where=`  Secondary boolean JS expression for targetting a subset of features.\n\n`target=`  Layer to target.\n\n\n**Utility functions**\nSeveral utility functions are available within expressions.\n\n- `format_dms(coord [, fmt])` Format a latitude or longitude coordinate as a DMS string (degrees, minutes, seconds). The optional second argument lets you specify a custom format. Example format strings:\n  - `[+-]DDDMM.MMMMM`\n  - `DdMmSs [EW]`\n  - `DDÂ° MMâ² SS.SSSSSâ³ [NS]`\n  - `[-]DD.DDDDDÂ°`\n- `parse_dms(string [, fmt])` Parse a DMS string to a numerical coordinate. The optional second argument gives the format to use for parsing. Example (given DMS-formatted fields `latDMS` and `lonDMS`): `-each 'lat = parse_dms(latDMS, \"DDDMMSS.SSS[NS]\"), lon = parse_dms(lonDMS, \"DDDMMSS.SSS[EW]\")'`.\n- `round(number [, decimals])` Optional second argument gives the number of decimals to use.\n\n\n**Properties of `this`**\n\nThe `this` object, available within expressions, has properties relating to the geometry and attribute data of a feature.\n\n*Properties are read-only unless otherwise indicated.*\n\nAll layer types\n- `this.id` Numerical id of the feature (0-based)\n- `this.layer_name` Name of the layer, or `\"\"` if layer is unnamed.\n- `this.properties`  Data properties (also available as local variables) (read/write)\n- `this.layer`   Object with \"name\" and \"data\" properties\n- `this.geojson` (getter) Returns each feature as a GeoJSON Feature object.\n- `this.geojson=` (setter) Update target layer with GeoJSON.\n\nPoint layers\n- `this.coordinates` An array of [x, y] coordinates with one or more members, or null (read/write)\n- `this.x`  X-coordinate of point, or `null` if geometry is empty. Refers to the first point of multi-point features. (read/write)\n- `this.y`  Y-coordinate of point or `null`. (read/write)\n\nPolygon layers\n- `this.area` Area of polygon feature, after any simplification is applied. For lat-long datasets, returns area on a sphere in units of square meters.\n- `this.planarArea` Calculates the planar area of lat-long datasets, as though latitude and longitude were cartesian coordinates.\n- `this.originalArea` Area of polygon feature without simplification\n- `this.centroidX` X-coord of centroid\n- `this.centroidY` Y-coord of centroid\n- `this.innerX` X-coord of an interior point (for anchoring symbols or labels)\n- `this.innerY` Y-coord of an interior point\n- `this.perimeter` Perimeter of each feature. For lat-long datasets, returns length in meters.\n\nPolyline layers\n- `this.length` Length of each polyline feature. For lat-long datasets, returns length in meters.\n\nPolygon, polyline and point layers\n- `this.partCount` 1 for single-part features, >1 for multi-part features, 0 for null features\n- `this.isNull` True if feature has null geometry\n- `this.bbox` Bounding box as array [xmin, ymin, xmax, ymax]\n- `this.width` Width of bounding box\n- `this.height` Height of bounding box\n\n**Note:** Centroids are calculated for the largest ring of multi-part polygons, and do not account for holes.\n\n**Note:** Most geometric properties are calculated using planar geometry. Exceptions are the areas of unprojected polygons and the lengths of unprojected polylines. These calculations use spherical, not ellipsoidal geometry, so are not as accurate as the equivalent calculations in a GIS application.\n\n**Examples**\n\n```bash\n# Create two fields\nmapshaper counties.shp -each 'STATE_FIPS=COUNTY_FIPS.substr(0, 2), AREA=this.area' -o out.shp\n\n# Delete two fields\nmapshaper states.shp -each 'delete STATE_NAME, delete GEOID' -o out.shp\n\n# Rename a field\nmapshaper states.shp -each 'STATE_NAME=NAME, delete NAME' -o out.shp\n\n# Print the value of a field to the console\nmapshaper states.shp -each 'console.log(NAME)'\n\n# Assign a new data record to each feature\nmapshaper states.shp -each 'this.properties = {FID: this.id}' -o out.shp\n```\n\n\n### -erase\n\nRemove features or portions of features that fall inside an area.\n\n`<source>` or `source=` File or layer containing erase polygons. Takes the filename or layer id of the erase polygons.\n\n`bbox=<xmin,ymin,xmax,ymax>` Delete features or portions of features that fall inside a bounding box. Similar to `-clip bbox=`.\n\n`bbox2=` Faster bounding box erasing than `bbox=` (experimental).\n\n`remove-slivers` Remove tiny sliver polygons created by erasing.\n\nCommon options: [`name=` `+` `target=`](#common-options)\n\n```bash\n# Example: Erase a polygon layer using another polygon layer.\nmapshaper usa_counties.shp -erase lakes.shp -o out.shp\n```\n\n\n### -explode\n\nDivide each multi-part feature into several single-part features.\n\nCommon options: `target=`\n\n\n### -filter\n\nApply a boolean JavaScript expression to each feature, removing features that evaluate to false.\n\n`<expression>` or `expression=`  JS expression evaluating to `true` or `false`. Uses the same execution context as [`-each`](#-each).\n\n`bbox=` Retains features that intersect the given bounding box (xmin,ymin,xmax,ymax).\n\n`invert`  Invert the filter -- retain only those features that would have been deleted.\n\n`remove-empty` Delete features with null geometry. May be used by itself or in combination with an `<expression>`.\n\nCommon options: [`name=` `+` `target=` ](#common-options)\n\n```bash\n# Example: Select counties from New England states\nmapshaper usa_counties.shp -filter '\"ME,VT,NH,MA,CT,RI\".indexOf(STATE) > -1' -o ne_counties.shp\n```\n\n\n### -filter-fields\n\nDelete fields in an attribute table, by listing the fields to retain. If no files are given, then all attributes are removed.\n\n`<fields>` or `fields=`   Comma-separated list of data fields to retain.\n\n`invert`  Invert the filter -- delete the listed fields instead of retaining them.\n\nCommon options: `target=`\n\n```bash\n# Example: Retain two fields\nmapshaper states.shp -filter-fields FID,NAME -o out.shp\n```\n\n### -filter-islands\n\nRemove small detached polygon rings (islands).\n\n`min-area=` Remove small-area islands using an area threshold (e.g. 10km2).\n\n`min-vertices=` Remove low-vertex-count islands.\n\n`remove-empty` Delete features with null geometry.\n\n[`target=`](#common-options)\n\n\n### -filter-slivers\n\nRemove small polygon rings.\n\n`min-area=` Area threshold for removal (e.g. 10km2).\n\n`sliver-control=` (polygons) Preferentially remove slivers (polygons with a high perimeter-area ratio). Accepts values from 0-1, default is 1. Implementation: multiplies the area of polygon rings by the \"Polsby Popper\" compactness metric before applying area threshold.\n\n`remove-empty` Delete features with null geometry.\n\n[`target=`](#common-options)\n\n### -frame\n\nCreate a rectangular frame layer at a given display width. Frame size is used for scaling symbols and for setting the display size of SVG output. The geographical extent of the frame is based on the `bbox=` option or the bounding box of the target layer or layers, if `bbox=` is omitted.\n\n`width=`  Width of frame (e.g. 5in, 10cm, 600px; default is 800px)\n\n`height=`  Height of frame (in addition to or instead of width= option)\n\n`aspect-ratio=`  Aspect ratio of frame (optional)\n\n`bbox=` Bounding coordinates of frame contents in projected map coordinates (xmin,ymin,xmax,ymax). If omitted, the bounding box of the target layer(s) is used.\n\n`offset=` Padding around the frame's `bbox` in display units or pct of width/height, e.g. 5cm 20px 5%\n\n`offsets=`  Comma-sep. list of offsets for each side of the map frame, in l,b,r,t order\n\nOther options: `name=` `target=`\n\n### -graticule\n\nCreate a graticule layer appropriate for a world map centered on longitude 0.\n\n`polygon` Create an polygon enclosing the entire area of the graticule. Useful for creating background or outline shapes for clipped projections, like Robinson or Stereographic.\n\n`interval=` Specify the spacing of graticule lines (in degrees). Common options are: 5, 10, 15, 30, 45. Default is 10.\n\n### -grid\n\nCreate a continuous grid of square or hexagonal polygons.\n\nThe `-grid` command should have a projected layer as its target. The cells of the grid will completely enclose the bounding box of the target layer.\n\nThis command is intended for visualizing data in a grid. Typically, you would use the `-join` command to join data from a polygon or point layer to a grid layer. Use `-join interpolate=<fields>` to interpolate data values (typically count data) from the polygon layer to the grid layer based on area. Use `-join calc='<field> = sum(<field>)'` or `-join calc='<field> = count()'` to aggregate point data values.\n\n`type=`  Supported values: `square` `hex` `hex2`. The `hex` and `hex2` types have different rotations.\n\n`interval=` The length of one side of a grid cell. Example values: `500m` `2km`.\n\nOther options: `name=` `+` `target=`\n\n\n### -include\n\n`<file>` or `file=` Path to the external .js file to load. The file should contain a single JS object. The properties of this object are converted to variables in the JS expression used by the `-each` command.\n\n### -inlay\n\nInscribe a polygon layer within another polygon layer.\n\n`<source>` or `source=`  File or layer containing polygons to inlay\n\nOther options: `target=`\n\n### -innerlines\n\nCreate a polyline layer consisting of shared boundaries with no attribute data.\n\n`where=`   Filter lines using a JS expression (see the `-lines where=` option).\n\nOther options: `name=` `+` `target=`\n\n```bash\n# Example: Extract the boundary between two states.\nmapshaper states.shp -filter 'STATE==\"OR\" || STATE==\"WA\"' -innerlines -o out.shp\n```\n\n\n### -join\n\nJoin attribute data from a source layer or file to a target layer. If the `keys=` option is used, Mapshaper will join records by matching the values of key fields. If the `keys=` option is missing, Mapshaper will perform a polygon-to-polygon, point-to-polygon, polygon-to-point or point-to-point spatial join.\n\n`<file|layer>` or `source=` File or layer containing data records to join.\n\n`keys=`  Names of two fields to use as join keys, separated by a comma. The key field from the destination table is followed by the key field from the source table. If the `keys=` option is missing, mapshaper performs a spatial join.\n\n`calc=` Use JS assignments and built-in functions to convert values from the source table to (new) fields the target table. See the [`-calc` command reference](#-calc) for a list of supported functions. Useful for handling many-to-one joins. See example below.\n\n`where=`  Use a boolean JS expression to filter records from the source table. The expression has the same syntax as the expression used by the `-filter` command. The functions `isMax(<field>)` `isMin(<field>)` and `isMode(<field>)` can be used in many-to-one joins to select among source records.\n\n`fields=`  A comma-separated list of fields to copy from the external table. If the `fields` option and `calc` options are both absent, all fields are copied except the key field (if joining on keys) unless the. Use `fields=*` to copy all fields, including any key field. Use `fields=` (empty list) to copy no fields.\n\n`prefix=` Add a prefix to the names of fields joined from the external attribute table.\n\n`interpolate=`  (polygon-to-polygon joins only) A list of fields to interpolate/reaggregate based on area of overlap. Intended for fields containing count data, such as population counts or vote counts. Treats data as being uniformly distributed within polygon areas.\n\n`point-method` (polygon-to-polygon joins only) Use an alternate method for joining two polygon layers. The default polygon-polygon join method detects areas of overlap between two polygon layers by compositing the two layers internally. This method is simpler -- it generates a temporary point layer from the source layer with the greater number of features (using the same inner-point method as the `-points inner` command), and then performs a point-to-polygon or polygon-to-point join. This method does not support the `interpolate=` option.\n\n`largest-overlap` (polygon-to-polygon joins only) selects a single polygon to join when multiple source polygons overlap a target polygon, based on largest area of overlap.\n\n`max-distance=` (point-to-point joins only) Join source layer points within this distance of a target layer point.\n\n`duplication`  Create duplicate features in the target layer on many-to-one joins.\n\n`sum-fields=` (deprecated) A comma-separated list of fields to sum when several source records match the same target record. This option is equivalent to using the `sum()` function inside a `calc=` expression like this: `calc='FIELD = sum(FIELD)'`.\n\n`string-fields=` A comma-separated list of fields in source CSV file to import as strings (e.g. FIPS,ZIPCODE).\n\n`field-types=` A comma-separated list of type hints (when joining a CSV file or other delimited text file). See `-i field-types=` above.\n\n`force`  Allow values in the target data table to be overwritten by values in the source table when both tables contain identically named fields.\n\n`unjoined`  Copy unjoined records from the source table to a layer named \"unjoined\".\n\n`unmatched`  Copy unmatched records from the destination table to a layer named \"unmatched\".\n\nOther options: `encoding=` `target=`\n\n**Examples**\n\nJoin a point layer to a polygon layer (spatial join), using the `calc=` option to handle many-to-one matches.\n\n```bash\nmapshaper states.shp -join points.shp calc='median_score = median(SCORE), mean_score = average(SCORE), join_count = count()' -o out.shp\n```\n\nCopy data from a csv file to the attribute table of a Shapefile by matching values from the *STATE_FIPS* field of the Shapefile and the *FIPS* field of the csv file. (The string-fields=FIPS argument prevents FIPS codes in the CSV file from being converted to numbers.)\n\n```bash\nmapshaper states.shp -join demographics.txt keys=STATE_FIPS,FIPS string-fields=FIPS -o out.shp\n```\n\n### -lines\n\nConverts points and polygons to lines. Polygons are converted to topological boundaries. Without the `<fields>` argument, external (unshared) polygon boundaries are attributed as `TYPE: \"outer\", RANK: 0` and internal (shared) boundaries are `TYPE: \"inner\", RANK: 1`. \n\n`<fields>` or `fields=` (Optional) comma-separated list of attribute fields for creating a hierarchy of polygon boundaries. A single field name adds an intermediate level of hierarchy with attributes: `TYPE: <field name>, RANK: 1`, and the lowest-level internal boundaries are given attributes `TYPE: \"outer\", RANK: 2`. A comma-separated list of fields adds additional levels of hierarchy.\n\n`where=`  Use a JS expression for filtering polygon boundaries using properties of adjacent polygons. The expression context has objects named A and B, which represent features on eather side of a path. B is null if a path only belongs to a single feature.\n\n`each=`   Apply a JS expression to each line (using A and B, like the `where=` option).\n\n`groupby=`  Convert a point layer into multiple lines, using a field value for grouping.\n\nCommon options: `name=` `+` `target=`\n\n```bash\n# Example: Classify national, state and county boundaries.\nmapshaper counties.shp -lines STATE_FIPS -o boundaries.shp\n```\n\n```bash\n# Example: add the names of neighboring countries to each section of border\nmapshaper countries.geojson \\\n  -lines each='COUNTRIES = A.NAME + (B ? \",\" + B.NAME : \"\")' \\\n  -o borders.geojson\n```\n\n\n### -merge-layers\n\nMerge features from several layers into a single layer. Layers can only be merged if they have compatible geometry types. Target layers should also have compatible data fields, unless the `force` option is used.\n\n`force`  Allow merging layers with inconsistent fields. When a layer is missing a particular field, the field will be added, with the values set to `undefined`. Using this option, you are still prevented from merging fields with different data types (e.g. a field containing numbers in one layer and strings in another). You are also still prevented from merging layers containing different geometry types.\n\n`flatten` (polygon layers) Remove polygon overlaps by assigning overlapping areas to the last overlapping polygon (the topmost feature if features are rendered in sequence).\n\nCommon options: `name=` `target=`\n\n```bash\n# Example: Combine features from several Shapefiles into a single Shapefile.\n# -i combine-files is used because files are processed separately by default.\nmapshaper -i OR.shp WA.shp CA.shp AK.shp combine-files \\\n\t-merge-layers \\\n\t-o pacific_states.shp\n```\n\n### -mosaic\n\nFlatten a polygon layer by converting overlapping areas to separate polygons.\n\n`calc=` Use a JavaScript expression to handle many-to-one aggregation (similar to the `calc=` option of the`-join` and `-dissolve` functions). See [-calc](#-calc) for a list of supported functions.\n\nCommon options: `name=` `+` `target=`\n\n\n### -point-grid\n\nCreate a rectangular grid of points.\n\n`<cols,rows>`  Size of the grid, e.g. `-point-grid 100,100`.\n\n`interval=`    Distance between adjacent points, in source units (alternative to setting the number of cols and rows).\n\n`bbox=`        Fit the grid to a bounding box (xmin,ymin,xmax,ymax). Defaults to the bounding box of the other data layers, or of the world if no other layers are present.\n\n`name=`        Set the name of the point grid layer\n\n### -points\n\nCreate a point layer, either from polygon or polyline geometry or from values in the attribute table. By default, polygon features are replaced by a single point located at the centroid of the polygon ring, or the largest ring of a multipart polygon. By default, polyline features are replaced by a single point located at the polyline vertex that is closest to the center of the feature's bounding box (this can be used to join polylines to polygons using a point-to-polygon spatial join).\n\n`x=` Name of field containing x coordinate values. Common X-coordinate names are auto-detected (e.g. longitude, LON).\n\n`y=` Name of field containing y coordinate values. Common Y-coordinate names are auto-detected (e.g. latitude, LAT).\n\n`centroid` Create points at the centroid of the largest ring of each polygon feature. Point placement is currrently not affected by holes.\n\n`inner` Create points in the interior of the largest ring of each polygon feature. Inner points are located away from polygon boundaries.\n\n`vertices` Convert polygon and polyline features into point features containing the unique vertices in each shape.\n\n`vertices2` Convert all the vertices in polygon and polyline features into points, including duplicate coordinates (e.g. the duplicate endpoint coordinates of polygon rings).\n\n`endpoints` Capture the unique endpoints of polygon and polyline arcs.\n\n`midpoints`  Find the midpoint of each path in a polyline layer.\n\n`interpolated` Interpolate points along polylines. Requires the `interval=` option to be set. Original vertices are replaced by interpolated vertices.\n\n`interval=` Distance between interpolated points (in meters if coordinates are unprojected, or projected units).\n\nCommon options: `name=` `+` `target=`\n\n```bash\n# Example: Create points in the interior of each polygon \nmapshaper counties.shp -points inner -o points.shp\n\n# Example: Create points in the interior of each polygon (alternate method) \nmapshaper counties.shp -each 'cx=this.innerX, cy=this.innerY' -points x=cx y=cy -o points.shp\n```\n\n### -polygons\n\nConvert a polyline layer to a polygon layer by linking together intersecting polylines to form rings.\n\n`gap-tolerance=`  Close gaps (\"undershoots\") between polylines up to the distance specified by this option.\n\n`from-rings`  Convert a layer of closed polyline rings into polygons. Nested rings in multipart features are converted into holes.\n\nCommon options: `target=`\n\n### -proj\n\nProject a dataset using a PROJ string, EPSG code or alias. This command affects all layers in the dataset(s) containing the targeted layer or layers. Information on PROJ string syntax can be found on the (PROJ website)[https://proj.org/usage/index.html#].\n\n`<crs>` or `crs=`  Target CRS, given as a Proj.4 definition or an alias. Use the [`-projections`](#-projections) command to list available projections and aliases.  In projections which require additional parameters, such as a zone in UTM, you can pass a Proj4 string enclosed in quotes.  For example, `crs='+proj=utm +zone=27'`.\n\n`densify` Interpolate vertices along long line segments as needed to approximate curved lines.\n\n`match=` Match the projection of the given layer or .prj file.\n\n`init=` Define the pre-projected coordinate system, if unknown. This option is not needed if the source coordinate system is defined by a .prj file, or if the source CRS is WGS84. As with `crs`, you can pass a Proj4 string enclosed in quotes if the selected projection requires extra parameters, for example `init='+proj=utm +zone=33'`.\n\n`target=` Layer(s) to target. All layers belonging to the same dataset as a targeted layer will be reprojected. To reproject all datasets, use `target=*`.\n\n**Examples**\n```bash\n# Convert a GeoJSON file to New York Long Island state plane CRS, using a Proj.4 string\nmapshaper nyc.json -proj +proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 \\\n+lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m \\\n-o out.json\n\n# Apply the same projection using an EPSG code\nmapshaper nyc.json -proj EPSG:2831 -o out.json\n\n# Convert a projected Shapefile to WGS84 coordinates\nmapshaper area.shp -proj wgs84 -o out.shp\n\n# Use the Winkel Tripel projection with a custom central meridian\nmapshaper countries.shp -proj +proj=wintri +lon_0=10 -o out.shp\n\n# Shortcut notation for the above projection\nmapshaper countries.shp -proj wintri +lon_0=10 -o out.shp\n\n# Convert an unprojected U.S. Shapefile into a composite projection with Alaska\n# and Hawaii repositioned and rescaled to fit in the lower left corner.\n# Show Puerto Rico and the U.S. Virgin Islands\n# Override the default central meridian and scale of the Alaska inset\nmapshaper us_states.shp -proj albersusa +PR +VI +AK.lon_0=-141 +AK.scale=0.4 -o out.shp\n```\n\n### -rectangle\n\nCreate a new layer containing a rectangular polygon.\n\n`bbox=<xmin,ymin,xmax,ymax>`  Give the coordinates of the rectangle.\n\n`source=` Create a bounding box around a given layer.\n\n`aspect-ratio=`  Aspect ratio as a number or range (e.g. 2 0.8,1.6 ,2).\n\n`offset=` Padding as a distance or percentage of width/height (single value or list).\n\n`name=` Assign a name to the newly created layer.\n\n### -rectangles\n\nCreate a new layer containing a rectangular polygon for each feature in the layer.\n\n`aspect-ratio=`  Aspect ratio as a number or range (e.g. 2 0.8,1.6 ,2).\n\n`bbox=` Use an expression to generate rectangle bounds for each feature. The expression should evaluate to a GeoJSON-style bbox array.\n\n`offset=` Padding as a distance or percentage of width/height (single value or list).\n\n`name=` Assign a name to the newly created layer.\n\n### -rename-fields\n\nRename data fields. To rename a field from A to B, use the assignment operator: B=A.\n\n`<fields>` or `fields=`  List of fields to rename as a comma-separated list. \n\nCommon options: `target=`\n\n```bash\n# Example: rename STATE_FIPS to FIPS and STATE_NAME to NAME\nmapshaper states.shp -rename-fields FIPS=STATE_FIPS,NAME=STATE_NAME -o out.shp\n```\n\n\n### -rename-layers\n\nAssign new names to layers. If fewer names are given than there are layers, the last name in the list is repeated with numbers appended (e.g. layer1, layer2).\n\n`<names>` or `names=`  One or more layer names (comma-separated).\n\n`target=`  Rename a subset of all layers.\n\n```bash\n# Example: Create a TopoJSON file with sensible object names.\nmapshaper ne_50m_rivers_lake_centerlines.shp ne_50m_land.shp combine-files \\\n  -rename-layers water,land -o target=* layers.topojson \n```\n\n### -require\n\nRequire a Node module or ES module for use in commands like `-each` and `-run`. Modules are added to the expression context. When the `alias=` option is given, modules are accessed via their aliases. Modules that are imported by name (e.g. `-require d3`) are accessed via their name, or by their alias if the `alias=` option is used. Module files without an alias name have their exported functions and data added directly to the expression context.\n\n`<module>` or `module=`  Name of an installed module or path to a module file.\n\n`alias=` Import the module as a custom-named variable.\n\n```bash\n# Example: use the underscore module (which has been installed locally)\n$ mapshaper data.json \\\n\t-require underscore alias=_ \\\n\t-each 'id = _.uniqueId()' \\\n\t-o data2.json\n```\n\n```bash\n# Example: import a module file containing a user-defined function \n$ mapshaper data.json \\\n  -require scripts/includes.mjs \\\n  -each 'displayname = getDisplayName(d)' \\\n  -o data2.json\n```\n\n### -run\n\nCreate mapshaper commands on-the-fly and run them.\n\n`<expression>` or `expression=`  A JS expression or template containing embedded expressions, for generating one or more mapshaper commands.\n\n* Embedded expressions are enclosed in curly braces (see below).\n* Expressions can access `target` and `io` objects.\n* Expressions can also access functions and data loaded with the `-require` command.\n* Functions can be async.\n\nExpression context:\n\nIf command has a single target layer:\n`target` object provides data and information about the command's target layer\n- `target.layer_name`  Name of layer\n- `target.geojson`  (getter) Returns a GeoJSON FeatureCollection for the layer\n- `target.geometry_type` One of: polygon, polyline, point, `undefined`\n- `target.feature_count` Number of features in the layer\n- `target.null_shape_count` Number of features with null geometry\n- `target.null_data_count` Number of features with no attribute data\n- `target.bbox` GeoJSON-style bounding box\n- `target.proj4` PROJ-formatted string giving the CRS (coordinate reference system) of the layer\n\n`targets` object gives access to all layers targetted by the run command.\n- by numerical index, like an array (`targets[0]` refers to the first target layer)\n- by layer name (`targets.states` refers to a layer named \"states\")\n\n`io` object has a method for passing data to the `-i` command.\n- `io.ifile(<filename>, <data>)` Create a temp file to use as input in a `-run` command (see example 2 below)\n\n**Example 1:** Apply a custom projection based on the layer extent.\n\n```bash\n$ mapshaper -i country.shp -require projection.js -run '-proj {tmerc(target.bbox)}' -o\n```\n\n```javascript\n// contents of projection.js file\nmodule.exports.tmerc = function(bbox) {\n  var lon0 = (bbox[0] + bbox[2]) / 2,\n      lat0 = (bbox[1] + bbox[3]) / 2;\n  return `+proj=tmerc lat_0=${lat0} lon_0=${lon0}`;\n};\n```\n\n**Example 2:** Convert points to a Voronoi diagram using a template expression\ntogether with an external script.\n\n```bash\n$ mapshaper points.geojson \\\n  -require script.js \\\n  -run '-i {io.ifile(\"voronoi.json\", voronoi(target.geojson, target.bbox))}' \\\n  -o\n```\n\n```javascript\n// contents of script.js file\nmodule.exports.voronoi = async function(points, bbox) {\n  const d3 = await import('d3-delaunay'); // installed locally\n  const coords = points.features.map(feat => feat.geometry.coordinates);\n  const voronoi = d3.Delaunay.from(coords).voronoi(bbox);\n  const features = Array.from(voronoi.cellPolygons()).map(function(ring, i) {\n    return {\n      type: 'Feature',\n      properties: points.features[i].properties,\n      geometry: {\n        type: 'Polygon',\n        coordinates: [ring]\n      }\n    };\n  });\n  return {type: 'FeatureCollection', features: features};\n};\n```\n\n### -scalebar\n\nAdd a scale bar to an SVG map. The command creates a data-only layer containing the scale bar's data properties. A scale bar is included in the SVG output file if the scale bar layer is included as an output layer.\n\nThe length of the scale bar reflects the scale in the center of the map's rectangular frame.\n\n`<label>` or `label=` Optional label giving the size and units of the scalebar, e.g. `\"25 k.m.\"`. If only units are given, a length will be assigned. If the `label` property is missing, scale bar properties will be auto-generated. If two lengths are given (e.g. `1000 km,500 miles`), a dual-unit bar will be generated, if the scale bar style supports it.\n\n`style=` Scalebar style, `a` or `b`. Style `b` has tic marks.\n\n`bar-width=` Line width of bar.\n\n`tic-length=` (style b) length of tic marks.\n\n`label-position=` Position of labels relative to the bar (`top` or `bottom`).\n\n`position=` Position of the scalebar on the map (default is `top-left`).\n\n`margin=` Offset in pixels from edge of map.\n\n\n### -shape\n\nCreate a new layer containing a single polyline or polygon shape.\n\n`coordinates=<x,y,...>`  Specify vertex coordinates as a comma-separated list.\n\n`offsets=<dx,dy,...>`   Specify vertex coordinates as a list of offsets from the previous vertex. The first vertex in the list is offset from the last coordinate in the `coordinates=` list.\n\n`closed`  Close an open path to form a polygon shape.\n\n`name=` Assign a name to the newly created layer.\n\n\n### -simplify\n\nMapshaper supports Douglas-Peucker simplification and two kinds of Visvalingam simplification.\n\nDouglas-Peucker (a.k.a. Ramer-Douglas-Peucker) produces simplified lines that remain within a specified distance of the original line. It is effective for thinning dense vertices but tends to form spikes at high simplification.\n\nVisvalingam simplification iteratively removes the least important point from a polyline. The importance of points is measured using a metric based on the geometry of the triangle formed by each non-endpoint vertex and the two neighboring vertices. The `visvalingam` option uses the \"effective area\" metric &mdash; points forming smaller-area triangles are removed first.\n\nMapshaper's default simplification method uses Visvalingam simplification but weights the effective area of each point so that smaller-angle vertices are preferentially removed, resulting in a smoother appearance.\n\nWhen working with multiple polygon and polyline layers, the `-simplify` command is applied to all of the layers.\n\n**Options**\n\n`<percentage>` or `percentage=`  Percentage of removable points to retain. Accepts values in the range `0%-100%` or `0-1`.\n\n`dp` `rdp`\tUse Douglas-Peucker simplification.\n\n`visvalingam`   Use Visvalingam simplification with the \"effective area\" metric.\n\n`weighted`   Use weighted Visvalingam simplification (this is the default). Points located at the vertex of more acute angles are preferentially removed, for a smoother appearance.\n\n`weighting=`  Coefficient for weighting Visvalingam simplification (default is 0.7). Higher values produce smoother output. `weighting=0` is equivalent to unweighted Visvalingam simplification.\n\n`resolution=`  Use an output resolution (e.g. `1000x800`) to control the amount of simplification.\n\n`interval=`\t Specify simplification amount in units of distance. Uses meters when simplifying unprojected datasets in 3D space (see `planar` option below), otherwise uses the same units as the source data.\n\n`variable`  Apply a variable amount of simplification to the paths in a polygon or polygon layer. This flag changes the `interval=`, `percentage=` and `resolution=` options to accept JavaScript expressions instead of literal values. (See the `-each` command for information on mapshaper JS expressions).\n\n`planar`  By default, mapshaper simplifies decimal degree coordinates in 3D space (using geocentric x,y,z coordinates). The `planar` option treats lng,lat coordinates as x,y coordinates on a Cartesian plane.\n\n`keep-shapes`   Prevent polygon features from disappearing at high simplification. For multipart features, mapshaper preserves the part with the largest original bounding box.\n\n`no-repair`\tBy default, mapshaper rolls back simplification along pairs of intersecting line segments by re-introducing removed points until either the intersection disappears or there are no more points to add. This option disables intersection repair.\n\n`stats`  Display summary statistics relating to the geometry of simplified paths.\n\n**Examples**\n```bash\n# Simplify counties.shp using the default algorithm, retaining 10% of removable vertices.\nmapshaper counties.shp -simplify 10% -o simplified.shp\n\n# Use Douglas-Peucker simplification with a 100 meter threshold.\nmapshaper states.shp -simplify dp interval=100 -o simplified/\n```\n\n### -snap\n\nSnap together nearby vertices\n\n`interval` Snap tolerance (default is small).\n\n`endpoints` Only snap endpoints of polyline features.\n\n`precision=`  Round all coordinates to a given decimal precision (e.g. 0.000001).\n\n`fix-geometry` Remove segment intersections caused by rounding or snapping by reverting intersecting areas to original coordinates. This option is only applied if the original paths are free of intersections.\n\n[`target=`](#common-options)\n\n### -sort\n\nSort features in a data layer using a JavaScript expression.\n\n`<expression>` or `expression=`  Apply a JavaScript expression to each feature, using the resulting values for sorting the features. Uses the same execution environment as [`-each`](#-each).\n\n`ascending` Sort in ascending order (this is the default).\n\n`descending` Sort in descending order.\n\n[`target=`](#common-options)\n\n\n### -split\n\nDistributes features in the target layer to multiple output layers. If the `expression=` option is present, features with the same value are grouped together. The value of the expression is used to name the split-apart fields. If no argument is supplied, split-apart layers are numbered.\n\n`<expression>` or `expression=`  JS expression or name of the attribute field to split on.\n\nCommon options: `+` `target=`\n\n**Examples**\n```bash\n# Split features from a named layer into new GeoJSON files using a data field.\n# Output names use the original layer name + data values,\n# e.g. states-AK.json, states-AL.json, etc.\nmapshaper states.shp -split STATE -o format=geojson\n\n# Split features from an unnamed layer into new GeoJSON files using a data field.\n# Output names contain data values,\n# e.g. AK.json, AL.json, etc.\nmapshaper states.shp name='' -split STATE -o format=geojson\n\n# Split source features into individual GeoJSON files (no data field supplied).\n# Output names use source layer name + ascending number,\n# e.g. states-1, states-2, etc.\nmapshaper states.shp -split -o format=geojson\n```\n\n### -split-on-grid\n\nSplit features into separate layers using a grid of cols,rows cells. Useful for dividing a large dataset into smaller files that can be loaded dynamically into an interactive map. Use `-o bbox-index` to export a file containing the name and bounding box of the shapes in each file. Empty cells are removed from the output.\n\n`<cols,rows>`  Size of the grid, e.g. `-split-on-grid 12,10`\n\nCommon options: `target=` \n\n### -subdivide\n\nRecursively divide a layer using a boolean JS expression. The expression is first evaluated against all features in the layer. If true, the features are spatially partitioned either vertically or horizontally, according to whether the aggregate bounding box is relatively tall or wide. See example below.\n\nSubdivide expressions can call several functions that operate on a group of features. The `sum()` function takes a feature-level expression as an argument and returns the summed result after applying the expression to each feature in the group. Similar functions include `min()` `max()` `average()` and `median()`.\n\n`<expression>` or `expression=` Boolean JavaScript expression\n\nCommon options:  `target=`\n\n**Example**\n```bash\n# Aggregate census tracts into groups of less than 1,000,000 population and less than 100 sq km in area.\nmapshaper tracts.shp\n  -subdivide \"sum('POPULATION') >= 1000000 && sum('this.area') > 1e8\" \\\n  -dissolve sum-fields=POPULATION \\\n  -merge-layers \\\n  -o tract_groups.shp\n```\n\n### -style\n\nAdd common SVG attributes for SVG export and display in the web UI. Attribute values take either a literal value or a JS expression. See the [`-each`](#-each) command for help with expressions. This command was named `-svg-style` in earlier versions of mapshaper.\n\n`where=`           Boolean JS expression for targetting a subset of features.\n\n`class=`           One or more CSS classes, separated by spaces (e.g. `class=\"light semi-transparent\"`)\n\n`css=`             Inline CSS to use as the `style=` attribute of each SVG symbol.\n\n`fill=`            Fill color (e.g. `#eee` `pink` `rgba(0, 0, 0, 0.2)`)\n\n`fill-pattern=`    Definition string for a pattern. There are four pattern types: hatches, dots, squares and dashes. The syntax for each pattern is:\n\n- hatches [rotation] width1 color1 [width2 color2 ...]\n- dots [rotation] size color1 [color2 ...] spacing background-color\n- squares [rotation] size color1 [color2 ...] spacing background-color\n- dashes [rotation] dash-length space-length line-width color line-spacing background-color\n\nExample: `hatches 45deg 2px red 2px grey`\n\n`fill-effect=sphere`  Add a gradient effect to the bounding circle of a globe projection (e.g. `ortho` `npers`) to create a 3d effect.\n\n`stroke=`          Stroke color\n\n`stroke-width=`    Stroke width\n\n`stroke-dasharray=` Dashes\n\n`opacity=`         Symbol opacity (e.g. `opacity=0.5`)\n\n`r=`               Circle radius. Setting this exports points as SVG `<circle>` symbols, unless the `-o point-symbol=square` option is used.\n\n`label-text=`      Label text (set this to export points as labels). To create multiline labels, insert line delimiters into the label text. There are three possible line delimiters: the newline character, `\\n` (backslash + \"n\"), and `<br>`. (When importing JSON data, `\\n` in a JSON string is parsed as a newline and `\\\\n` is parsed as backslash + \"n\"). Note that Mapshaper doesn't accept multiline strings as input on the command line.\n  \n`text-anchor=`     Horizontal justification of label text. Possible values are: start, end or middle (the default).\n\n`dx=`              X offset of labels (default is 0)\n\n`dy=`              Y offset of labels (default is baseline-aligned)\n  \n`font-size=`       Size of label text (default is 12)\n  \n`font-family=`     CSS font-family of labels (default is sans-serif)\n\n`font-weight=`     CSS font-weight property of labels (e.g. bold, 700)\n\n`font-style=`      CSS font-style property of labels (e.g. italic)\n\n`font-stretch=`      CSS font-stretch property of labels (e.g. condensed)\n\n`letter-spacing=`  CSS letter-spacing property of labels\n \n`line-height=`     Line spacing of multi-line labels (default is 1.1em). Lines are separated by newline characters or `<br>` tags in the label text.\n\nCommon options: `target=`\n\n**Example**\n\n```bash\n# Apply a 2px grey stroke and no fill to a polygon layer\nmapshaper polygons.geojson \\\n-style fill=none stroke='#aaa' stroke-width=2 \\\n-o out.svg\n```\n\n### -symbols\n\nSymbolize points as regular polygons, circles, stars, arrows and other shapes.\n\n`type=`            Basic types: star, polygon, circle, arrow, ring. Aliases: triangle, square, pentagon, etc.\n\n`fill=`            Symbol fill color\n\n`stroke=`          Symbol line color (linear symbols only)\n\n`stroke-width=`    Symbol line width (linear symbols only)\n\n`opacity=`         Symbol opacity\n\n`geographic`       Make geographic shapes (polygons or polylines) instead of SVG objects\n\n`pixel-scale=`     Set symbol scale in meters-per-pixel (for polygons option)\n\n`rotated`          Symbol is rotated to an alternate orientation\n\n`rotation=`        Rotation of symbol in degrees\n\n`scale=`           Scale symbols by a multiplier\n\n`radius=`          Distance from center to farthest point on the symbol\n\n`sides=`           (polygon) number of sides of a polygon symbol\n\n`points=`          (star) number of points\n\n`point-ratio=`     (star) ratio of minor to major radius of star\n\n`radii=`           (ring) comma-sep. list of concentric radii, ascending order\n\n`length=`          (arrow) length of arrow in pixels\n\n`direction=`       (arrow) angle off of vertical (-90 = left-pointing)\n\n`head-angle=`      (arrow) angle of tip of arrow (default is 40 degrees)\n\n`head-width=`      (arrow) width of arrow head from side to side\n\n`head-length=`     (arrow) length of head (alternative to head-angle). Use `head-length=0` to make headless arrows (i.e. simple lines)\n\n`stem-width=`      (arrow) width of stem at its widest point\n\n`stem-length=`     (arrow) alternative to length\n\n`stem-taper=`      (arrow) factor for tapering the width of the stem (0-1)\n\n`stem-curve=`      (arrow) curvature in degrees (default is 0)\n\n`min-stem-ratio=`  (arrow) minimum ratio of stem to total length. This option scales down the entire symbol instead of making the stem shorter than the given ratio.\n\n`anchor=`          (arrow) takes one of: start, middle, end (default is start)\n\nCommon options: `name=` `+` `target=`\n\n### -union\n\nCreate a composite layer (a polygon mosaic without overlaps) from two or more target polygon layers.\n\nData values are copied from source features to output features. (Areal interpolation may\nbe added in the future. The `-join` command currently supports areal interpolation between polygon layers using the `-join interpolate=<fields>` option.) Same-named fields in source layers are renamed in the output layer. For example, two source-layer fields named \"id\" will be renamed to \"id_1\" and \"id_2\".\n\n`fields=`  Fields to retain (default is all fields).\n\nCommon options: `name=` `+` `target=`\n\n### -uniq\n\nDelete features with the same id as a previous feature\n\n`<expression>` or `expression=`  JS expression to obtain the id of a feature. Uses the same expression syntax as [`-each`](#-each).\n\n`max-count=` Allow multiple features with the same id (default is 1).\n\n`invert` Retain only features that would ordinarily be deleted by `-uniq`.\n\n`verbose`  Print information about each removed feature.\n\n`target=`\n\n```bash\n# Example: Retain only the largest parts of each multipart polygon\nmapshaper polygons.shp \\\n\t-each 'fid = this.id' \\\n\t-explode \\\n\t-sort 'this.area' descending \\\n\t-uniq 'fid' \\\n\t-o out.shp\n```\n\n## Control Flow Commands\n\n### -if\n\nThe `if` command runs the following commands if a condition is met.\n\n`<expression>` or `expression=`  Use a JavaScript expression to test a condition.\n\n`empty`         Test if layer is empty.\n\n`not-empty`     Test if layer contains data.\n\n`layer=`        Name or id of layer to test (default is current target layer).\n\n**Properties of `this`**\n\n- `this.name`   Layer name, or <undefined> if layer is unnamed.\n- `this.size`   Number of features in the layer.\n- `this.empty`  True if layer contains 0 features.\n- `this.data`   Array of attribute data records, one object per feature.\n- `this.type`   Geometry type, one of: polygon, polyline, point, <undefined>.\n- `this.bbox`   An array [xmin, ymin, xmax, ymax] with additional properties: cx, cy, height, width, left, bottom, top, right.\n\n**Functions of `this`**\n\n- `this.field_exists(<name>)`  Tests if a data field exists in the target layer.\n- `this.field_type(<name>)`    Returns the data type of a field, or `null` if a field is empty or missing. Types include: `\"string\" \"number\" \"boolean\" \"date\" \"object\"`. If a field includes multiple data types (which may occur in GeoJSON), the type of the first non-empty data value is returned.\n- `this.field_includes(<value>)`  Tests if a given value occurs at least once in a data field.\n- `this.file_exists(<filename>)`  Tests if a file exists.\n\n**Example**\n\n```bash\nmapshaper -i shapes.json -if '!this.empty' -dissolve -o out/dissolved.json\n```\n\n### -elif\n\nOne or more `-elif` (short for \"else if\") commands may be added to test for alternate conditions, following an `-if` statement. The `-elif` command accepts the same options as the `-if` command.\n\n### -else\n\nRun the following commands if all preceding -if/-elif conditions are false.\n\n### -endif\n\nMark the end of an -if/-elif/-else sequence.\n\n### -stop\n\nStop processing (skip remaining commands). Useful when writing scripts, in combination with -if/-elif/-else.\n\n**Example**\n\n```bash\n# Don't try to process a missing file\nmapshaper -if '!file_exists(\"boundaries.geojson\")' -stop -endif \\\n  -i boundaries.geojson -proj robin -o output/boundaries.shp\n```\n\n### -target\n\nSet the target layer or layers for the following command.\n\n`<target>` or `target=`  Name or id of a layer (first layer is 1).\n\n`type=`  Type of layer(s) to match (polygon, polyline or point). This is useful when importing GeoJSON files containing several types of geometry.\n\n`name=`   Rename the target layer.\n\n\n## Informational Commands\n\n\n### -calc\n\nPerform calculations on a collection of records and display the results, using a JavaScript expression. The expression can use one or more of the following built-in functions. Most functions take the name of a data field or a JS expression as the first argument.\n\nThe `calc` functions are also available in the context of `calc=` expressions, which can be used as options to `-join`, `-dissolve` and several other commands. See example below.\n\n| function | description |\n| --- | --- |\n| `count ()` | returns number of records in the collection |\n| `sum (<expr>)` | |\n| `mean (<expr>)` | |\n| `average (<expr>)` | same as mean() |\n| `median (<expr>)` | |\n| `mode (<expr>)` | returns most frequently occuring value in the collection (or the first such value in case of a tie). |\n| `min (<expr>)` | |\n| `max (<expr>)` | |\n| `quartile1 (<expr>)` | first quartile |\n| `quartile2 (<expr>)` | same as median() |\n| `quartile3 (<expr>)` | third quartile |\n| `iqr (<expr>)` | interquartile range |\n| `quantile (<expr>, <pct>)` | arbitrary percentile (`<pct>` is 0-1) |\n| `collect (<expr>)` | returns array containing all values |\n| `collectIds ()` | returns array of feature indexes (features are indexed 0 to n-1)\n| `first (<expr>)` | returns first value in the collection |\n| `last (<expr>)` | returns last value in the collection |\n| `every (<expr>)` | returns true if expression is true for all elements in the collection |\n| `some (<expr>)` | returns true if expression is true for one or more elements in the collection |\n\nArgument expressions take the same form as `-each` expressions. If no records are processed, `count()` and `sum()` return `0`, and the other functions return `null`.\n\n**Assignments**\n\nThe `-calc` expression can take the form of one or more assignments. This creates global variables that can be accessed by subsequent expressions using the `global` namespace. For example:\n\n```\nmapshaper data.csv \\\n  -calc 'N = count()' \\\n  -if 'global.N < 5' \\\n  -print 'LOW SAMPLE SIZE, STOPPING' \\\n  -stop \\\n  -endif\n```\n\n**Options**\n\n`<expression>` or `expression=` JS expression containing calls to one or more `-calc` functions.\n\n`where=`  Perform calculations on a subset of records, using a boolean JS expression as a filter (similar to [`-filter`](#-filter) command).\n`+` Save output to a layer.\n`name=` Name the output layer (default name is \"calc\").\n`target=`\n\n**Examples**\n\n```bash\n# Calculate the sum of a data field\nmapshaper ny-census-blocks.shp -calc 'sum(POPULATION)'\n\n# Count census blocks in NY with zero population\nmapshaper ny-census-blocks.shp -calc 'count()' where='POPULATION == 0'\n\n# Using calc functions in conjunction with the `-dissolve` command\nmapshaper counties.csv -dissolve STATE_NAME calc='NUM_COUNTIES = count()' -o states.csv\n```\n\n### -colors\nPrint list of built-in color schemes. Color schemes can be used with the `color-scheme=` option of the [-classify](#-classify) command. (These color schemes come from the [d3-scale-chromatic](https://github.com/d3/d3-scale-chromatic) library.)\n\n### -comment\nThe following text up to the next command is treated as a comment. Useful for adding explanatory comments to a long sequence of commands.\n\n### -encodings\nPrint list of supported text encodings (for .dbf import).\n\n### -help\n\nPrint usage tips and a list of commands.\n\n`<command>` Show options for a single command, e.g. `mapshaper -h join`.\n\n### -info\n\nPrint information about a dataset. Useful for seeing the fields in a layer's attribute data table. Also useful for summarizing the result of a series of commands, or for debugging unexpected output.\n\n```bash\n# Example: Get information about an unknown GeoJSON or TopoJSON dataset\nmapshaper mystery_file.json -info\n```\n\n`save-to=` Save information to a .json file.\n`+` Save output to a layer.\n`name=` Name the output layer (default name is \"info\").\n\n### -inspect\n\nPrint information about the data attributes of a feature.\n\n`<expression>` or `expression=` JS expression for selecting a feature (see the [`-each`](#-each) command for documentation about JS expressions).\n\nCommon options: `target=`\n\n```bash\n# Example: View attribute data for a state\nmapshaper states.geojson -inspect 'NAME == \"Delaware\"'\n```\n\n### -print\n\nPrints a message to the console or terminal (using stdout). This command is useful in combination with the `-if/-elif/-else` commands.\n\n```bash\n# Example\nmapshaper cities.json \\\n-if 'this.empty' \\\n-print FILE IS EMPTY\n```\n\n### -projections\n\nPrint list of supported proj4 projection ids and projection aliases.\n\n### -quiet\n\nInhibit console messages.\n\n### -verbose\n\nPrint verbose messages, including the time taken by each processing step.\n\n### -version\n\nPrint mapshaper version.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3681640625,
          "content": "# Security Policy\n\n### Supported Versions\n\nWhen a vulnerability is fixed, a new patch version will be released (e.g. 0.6.34 -> 0.6.35).\n\n### Reporting a Vulnerability\n\nPlease email the developer (Matthew Bloch) at masiyou@gmail.com to report a vulnerability.\n\nIf preferred, you can create a new draft security advisory (https://github.com/mbloch/mapshaper/security/advisories)\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 157.552734375,
          "content": "{\n  \"name\": \"mapshaper\",\n  \"version\": \"0.6.102\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"mapshaper\",\n      \"version\": \"0.6.102\",\n      \"license\": \"MPL-2.0\",\n      \"dependencies\": {\n        \"@placemarkio/tokml\": \"^0.3.3\",\n        \"@tmcw/togeojson\": \"^5.6.0\",\n        \"@xmldom/xmldom\": \"^0.8.6\",\n        \"adm-zip\": \"^0.5.9\",\n        \"commander\": \"7.0.0\",\n        \"cookies\": \"^0.8.0\",\n        \"d3-color\": \"3.1.0\",\n        \"d3-interpolate\": \"^3.0.1\",\n        \"d3-scale-chromatic\": \"3.0.0\",\n        \"delaunator\": \"^5.0.0\",\n        \"fflate\": \"^0.7.4\",\n        \"flatbush\": \"^3.2.1\",\n        \"geokdbush\": \"^1.1.0\",\n        \"iconv-lite\": \"^0.6.3\",\n        \"idb-keyval\": \"^6.2.0\",\n        \"kdbush\": \"^3.0.0\",\n        \"mproj\": \"0.0.40\",\n        \"msgpackr\": \"^1.10.1\",\n        \"opn\": \"^5.3.0\",\n        \"rw\": \"~1.3.3\",\n        \"sync-request\": \"5.0.0\",\n        \"tinyqueue\": \"^2.0.3\"\n      },\n      \"bin\": {\n        \"mapshaper\": \"bin/mapshaper\",\n        \"mapshaper-gui\": \"bin/mapshaper-gui\",\n        \"mapshaper-xl\": \"bin/mapshaper-xl\"\n      },\n      \"devDependencies\": {\n        \"@rollup/plugin-json\": \"^6.0.1\",\n        \"@rollup/plugin-node-resolve\": \"^13.3.0\",\n        \"browserify\": \"^17.0.0\",\n        \"csv-spectrum\": \"^1.0.0\",\n        \"eslint\": \"^8.16.0\",\n        \"mocha\": \"^10.2.0\",\n        \"rollup\": \"^2.73.0\",\n        \"shell-quote\": \"^1.7.4\",\n        \"underscore\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.3.2\",\n        \"globals\": \"^13.15.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.9.5\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^1.2.1\",\n        \"debug\": \"^4.1.1\",\n        \"minimatch\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/@msgpackr-extract/msgpackr-extract-darwin-arm64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-arm64/-/msgpackr-extract-darwin-arm64-3.0.2.tgz\",\n      \"integrity\": \"sha512-9bfjwDxIDWmmOKusUcqdS4Rw+SETlp9Dy39Xui9BEGEk19dDwH0jhipwFzEff/pFg95NKymc6TOTbRKcWeRqyQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@msgpackr-extract/msgpackr-extract-darwin-x64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-x64/-/msgpackr-extract-darwin-x64-3.0.2.tgz\",\n      \"integrity\": \"sha512-lwriRAHm1Yg4iDf23Oxm9n/t5Zpw1lVnxYU3HnJPTi2lJRkKTrps1KVgvL6m7WvmhYVt/FIsssWay+k45QHeuw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@msgpackr-extract/msgpackr-extract-linux-arm\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm/-/msgpackr-extract-linux-arm-3.0.2.tgz\",\n      \"integrity\": \"sha512-MOI9Dlfrpi2Cuc7i5dXdxPbFIgbDBGgKR5F2yWEa6FVEtSWncfVNKW5AKjImAQ6CZlBK9tympdsZJ2xThBiWWA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@msgpackr-extract/msgpackr-extract-linux-arm64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm64/-/msgpackr-extract-linux-arm64-3.0.2.tgz\",\n      \"integrity\": \"sha512-FU20Bo66/f7He9Fp9sP2zaJ1Q8L9uLPZQDub/WlUip78JlPeMbVL8546HbZfcW9LNciEXc8d+tThSJjSC+tmsg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@msgpackr-extract/msgpackr-extract-linux-x64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-x64/-/msgpackr-extract-linux-x64-3.0.2.tgz\",\n      \"integrity\": \"sha512-gsWNDCklNy7Ajk0vBBf9jEx04RUxuDQfBse918Ww+Qb9HCPoGzS+XJTLe96iN3BVK7grnLiYghP/M4L8VsaHeA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@msgpackr-extract/msgpackr-extract-win32-x64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-win32-x64/-/msgpackr-extract-win32-x64-3.0.2.tgz\",\n      \"integrity\": \"sha512-O+6Gs8UeDbyFpbSh2CPEz/UOrrdWPTBYNblZK5CxxLisYt4kGX3Sc+czffFonyjiGSq3jWLwJS/CCJc7tBr4sQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@placemarkio/tokml\": {\n      \"version\": \"0.3.3\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@rollup/plugin-json\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-json/-/plugin-json-6.0.1.tgz\",\n      \"integrity\": \"sha512-RgVfl5hWMkxN1h/uZj8FVESvPuBJ/uf6ly6GTj0GONnkfoBN5KC0MSz+PN2OLDgYXMhtG0mWpTrkiOjoxAIevw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-json/node_modules/@rollup/pluginutils\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.1.0.tgz\",\n      \"integrity\": \"sha512-XTIWOPPcpvyKI6L1NHo0lFlCyznUEyPmPY1mc3KpPVDYulHSTvyeLNVW00QTLIAFNhR3kYnJTQHeGqU4M3n09g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"estree-walker\": \"^2.0.2\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-json/node_modules/@types/estree\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n      \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\",\n      \"dev\": true\n    },\n    \"node_modules/@rollup/plugin-json/node_modules/estree-walker\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n      \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n      \"dev\": true\n    },\n    \"node_modules/@rollup/plugin-node-resolve\": {\n      \"version\": \"13.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^3.1.0\",\n        \"@types/resolve\": \"1.17.1\",\n        \"deepmerge\": \"^4.2.2\",\n        \"is-builtin-module\": \"^3.1.0\",\n        \"is-module\": \"^1.0.0\",\n        \"resolve\": \"^1.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^2.42.0\"\n      }\n    },\n    \"node_modules/@rollup/pluginutils\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/estree\": \"0.0.39\",\n        \"estree-walker\": \"^1.0.1\",\n        \"picomatch\": \"^2.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^1.20.0||^2.0.0\"\n      }\n    },\n    \"node_modules/@tmcw/togeojson\": {\n      \"version\": \"5.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tmcw/togeojson/-/togeojson-5.6.0.tgz\",\n      \"integrity\": \"sha512-p+c0kbSY/tIwd3C0rpmTf3iFAOUYV6bkJbDiq0oQDGROOc7c6uh/X8r/mijY6SIFYIkVuKc8MS2REKhur2e6Jw==\",\n      \"peerDependencies\": {\n        \"@types/geojson\": \"*\"\n      }\n    },\n    \"node_modules/@types/concat-stream\": {\n      \"version\": \"1.6.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"0.0.39\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/form-data\": {\n      \"version\": \"0.0.33\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/geojson\": {\n      \"version\": \"7946.0.10\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"10.17.18\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/qs\": {\n      \"version\": \"6.9.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/resolve\": {\n      \"version\": \"1.17.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@xmldom/xmldom\": {\n      \"version\": \"0.8.6\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"7.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/acorn-node\": {\n      \"version\": \"1.8.2\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"acorn\": \"^7.0.0\",\n        \"acorn-walk\": \"^7.0.0\",\n        \"xtend\": \"^4.0.2\"\n      }\n    },\n    \"node_modules/acorn-walk\": {\n      \"version\": \"7.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/adm-zip\": {\n      \"version\": \"0.5.9\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"Python-2.0\"\n    },\n    \"node_modules/asap\": {\n      \"version\": \"2.0.6\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/asn1.js\": {\n      \"version\": \"4.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz\",\n      \"integrity\": \"sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bn.js\": \"^4.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"minimalistic-assert\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/asn1.js/node_modules/bn.js\": {\n      \"version\": \"4.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n      \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n      \"dev\": true\n    },\n    \"node_modules/assert\": {\n      \"version\": \"1.5.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-assign\": \"^4.1.1\",\n        \"util\": \"0.10.3\"\n      }\n    },\n    \"node_modules/assert/node_modules/inherits\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/assert/node_modules/util\": {\n      \"version\": \"0.10.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"2.0.1\"\n      }\n    },\n    \"node_modules/asynckit\": {\n      \"version\": \"0.4.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bn.js\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz\",\n      \"integrity\": \"sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==\",\n      \"dev\": true\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/brorand\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/browser-pack\": {\n      \"version\": \"6.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"combine-source-map\": \"~0.8.0\",\n        \"defined\": \"^1.0.0\",\n        \"JSONStream\": \"^1.0.3\",\n        \"safe-buffer\": \"^5.1.1\",\n        \"through2\": \"^2.0.0\",\n        \"umd\": \"^3.0.0\"\n      },\n      \"bin\": {\n        \"browser-pack\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/browser-resolve\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"resolve\": \"^1.17.0\"\n      }\n    },\n    \"node_modules/browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/browserify\": {\n      \"version\": \"17.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/browserify/-/browserify-17.0.0.tgz\",\n      \"integrity\": \"sha512-SaHqzhku9v/j6XsQMRxPyBrSP3gnwmE27gLJYZgMT2GeK3J0+0toN+MnuNYDfHwVGQfLiMZ7KSNSIXHemy905w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"assert\": \"^1.4.0\",\n        \"browser-pack\": \"^6.0.1\",\n        \"browser-resolve\": \"^2.0.0\",\n        \"browserify-zlib\": \"~0.2.0\",\n        \"buffer\": \"~5.2.1\",\n        \"cached-path-relative\": \"^1.0.0\",\n        \"concat-stream\": \"^1.6.0\",\n        \"console-browserify\": \"^1.1.0\",\n        \"constants-browserify\": \"~1.0.0\",\n        \"crypto-browserify\": \"^3.0.0\",\n        \"defined\": \"^1.0.0\",\n        \"deps-sort\": \"^2.0.1\",\n        \"domain-browser\": \"^1.2.0\",\n        \"duplexer2\": \"~0.1.2\",\n        \"events\": \"^3.0.0\",\n        \"glob\": \"^7.1.0\",\n        \"has\": \"^1.0.0\",\n        \"htmlescape\": \"^1.1.0\",\n        \"https-browserify\": \"^1.0.0\",\n        \"inherits\": \"~2.0.1\",\n        \"insert-module-globals\": \"^7.2.1\",\n        \"JSONStream\": \"^1.0.3\",\n        \"labeled-stream-splicer\": \"^2.0.0\",\n        \"mkdirp-classic\": \"^0.5.2\",\n        \"module-deps\": \"^6.2.3\",\n        \"os-browserify\": \"~0.3.0\",\n        \"parents\": \"^1.0.1\",\n        \"path-browserify\": \"^1.0.0\",\n        \"process\": \"~0.11.0\",\n        \"punycode\": \"^1.3.2\",\n        \"querystring-es3\": \"~0.2.0\",\n        \"read-only-stream\": \"^2.0.0\",\n        \"readable-stream\": \"^2.0.2\",\n        \"resolve\": \"^1.1.4\",\n        \"shasum-object\": \"^1.0.0\",\n        \"shell-quote\": \"^1.6.1\",\n        \"stream-browserify\": \"^3.0.0\",\n        \"stream-http\": \"^3.0.0\",\n        \"string_decoder\": \"^1.1.1\",\n        \"subarg\": \"^1.0.0\",\n        \"syntax-error\": \"^1.1.1\",\n        \"through2\": \"^2.0.0\",\n        \"timers-browserify\": \"^1.0.1\",\n        \"tty-browserify\": \"0.0.1\",\n        \"url\": \"~0.11.0\",\n        \"util\": \"~0.12.0\",\n        \"vm-browserify\": \"^1.0.0\",\n        \"xtend\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"browserify\": \"bin/cmd.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/browserify-aes\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-xor\": \"^1.0.3\",\n        \"cipher-base\": \"^1.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"evp_bytestokey\": \"^1.0.3\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/browserify-cipher\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"browserify-aes\": \"^1.0.4\",\n        \"browserify-des\": \"^1.0.0\",\n        \"evp_bytestokey\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/browserify-des\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cipher-base\": \"^1.0.1\",\n        \"des.js\": \"^1.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.1.2\"\n      }\n    },\n    \"node_modules/browserify-rsa\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bn.js\": \"^5.0.0\",\n        \"randombytes\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/browserify-sign\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.2.3.tgz\",\n      \"integrity\": \"sha512-JWCZW6SKhfhjJxO8Tyiiy+XYB7cqd2S5/+WeYHsKdNKFlCBhKbblba1A/HN/90YwtxKc8tCErjffZl++UNmGiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bn.js\": \"^5.2.1\",\n        \"browserify-rsa\": \"^4.1.0\",\n        \"create-hash\": \"^1.2.0\",\n        \"create-hmac\": \"^1.1.7\",\n        \"elliptic\": \"^6.5.5\",\n        \"hash-base\": \"~3.0\",\n        \"inherits\": \"^2.0.4\",\n        \"parse-asn1\": \"^5.1.7\",\n        \"readable-stream\": \"^2.3.8\",\n        \"safe-buffer\": \"^5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.12\"\n      }\n    },\n    \"node_modules/browserify-sign/node_modules/hash-base\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz\",\n      \"integrity\": \"sha512-EeeoJKjTyt868liAlVmcv2ZsUfGHlE3Q+BICOXcZiwN3osr5Q/zFGYmTJpoIzuaSTAwndFy+GqhEwlU4L3j4Ow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/browserify-sign/node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/browserify-zlib\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pako\": \"~1.0.5\"\n      }\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.0.2\",\n        \"ieee754\": \"^1.1.4\"\n      }\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/buffer-xor\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/builtin-modules\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/builtin-status-codes\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cached-path-relative\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/caseless\": {\n      \"version\": \"0.12.0\",\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/chalk/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/cipher-base\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"7.0.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/combine-source-map\": {\n      \"version\": \"0.8.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"convert-source-map\": \"~1.1.0\",\n        \"inline-source-map\": \"~0.6.0\",\n        \"lodash.memoize\": \"~3.0.3\",\n        \"source-map\": \"~0.5.3\"\n      }\n    },\n    \"node_modules/combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"delayed-stream\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"7.0.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/concat-stream\": {\n      \"version\": \"1.6.2\",\n      \"engines\": [\n        \"node >= 0.8\"\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"inherits\": \"^2.0.3\",\n        \"readable-stream\": \"^2.2.2\",\n        \"typedarray\": \"^0.0.6\"\n      }\n    },\n    \"node_modules/console-browserify\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true\n    },\n    \"node_modules/constants-browserify\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cookies\": {\n      \"version\": \"0.8.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"depd\": \"~2.0.0\",\n        \"keygrip\": \"~1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/core-util-is\": {\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/create-ecdh\": {\n      \"version\": \"4.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bn.js\": \"^4.1.0\",\n        \"elliptic\": \"^6.5.3\"\n      }\n    },\n    \"node_modules/create-ecdh/node_modules/bn.js\": {\n      \"version\": \"4.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/create-hash\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cipher-base\": \"^1.0.1\",\n        \"inherits\": \"^2.0.1\",\n        \"md5.js\": \"^1.3.4\",\n        \"ripemd160\": \"^2.0.1\",\n        \"sha.js\": \"^2.4.0\"\n      }\n    },\n    \"node_modules/create-hmac\": {\n      \"version\": \"1.1.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cipher-base\": \"^1.0.3\",\n        \"create-hash\": \"^1.1.0\",\n        \"inherits\": \"^2.0.1\",\n        \"ripemd160\": \"^2.0.0\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"sha.js\": \"^2.4.8\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/crypto-browserify\": {\n      \"version\": \"3.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"browserify-cipher\": \"^1.0.0\",\n        \"browserify-sign\": \"^4.0.0\",\n        \"create-ecdh\": \"^4.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"create-hmac\": \"^1.1.0\",\n        \"diffie-hellman\": \"^5.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"pbkdf2\": \"^3.0.3\",\n        \"public-encrypt\": \"^4.0.0\",\n        \"randombytes\": \"^2.0.0\",\n        \"randomfill\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/csv-spectrum\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\"\n    },\n    \"node_modules/d3-color\": {\n      \"version\": \"3.1.0\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-interpolate\": {\n      \"version\": \"3.0.1\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-color\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-scale-chromatic\": {\n      \"version\": \"3.0.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-color\": \"1 - 3\",\n        \"d3-interpolate\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/dash-ast\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/debug/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/decamelize\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-keys\": \"^1.0.12\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/defined\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/delaunator\": {\n      \"version\": \"5.0.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"robust-predicates\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/deps-sort\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"JSONStream\": \"^1.0.3\",\n        \"shasum-object\": \"^1.0.0\",\n        \"subarg\": \"^1.0.0\",\n        \"through2\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"deps-sort\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/des.js\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"minimalistic-assert\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/detective\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"acorn-node\": \"^1.6.1\",\n        \"defined\": \"^1.0.0\",\n        \"minimist\": \"^1.1.1\"\n      },\n      \"bin\": {\n        \"detective\": \"bin/detective.js\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/diff\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/diffie-hellman\": {\n      \"version\": \"5.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bn.js\": \"^4.1.0\",\n        \"miller-rabin\": \"^4.0.0\",\n        \"randombytes\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/diffie-hellman/node_modules/bn.js\": {\n      \"version\": \"4.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/domain-browser\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4\",\n        \"npm\": \">=1.2\"\n      }\n    },\n    \"node_modules/duplexer2\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/elliptic\": {\n      \"version\": \"6.5.5\",\n      \"resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.5.tgz\",\n      \"integrity\": \"sha512-7EjbcmUm17NQFu4Pmgmq2olYMj8nwMnpcddByChSUjArp8F5DQWcIcpriwO4ZToLNAJig0yiyjswfyGNje/ixw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bn.js\": \"^4.11.9\",\n        \"brorand\": \"^1.1.0\",\n        \"hash.js\": \"^1.0.0\",\n        \"hmac-drbg\": \"^1.0.1\",\n        \"inherits\": \"^2.0.4\",\n        \"minimalistic-assert\": \"^1.0.1\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/elliptic/node_modules/bn.js\": {\n      \"version\": \"4.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.18.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function-bind\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.1.1\",\n        \"has\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.2\",\n        \"is-callable\": \"^1.2.3\",\n        \"is-negative-zero\": \"^2.0.1\",\n        \"is-regex\": \"^1.1.3\",\n        \"is-string\": \"^1.0.6\",\n        \"object-inspect\": \"^1.10.3\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.2\",\n        \"string.prototype.trimend\": \"^1.0.4\",\n        \"string.prototype.trimstart\": \"^1.0.4\",\n        \"unbox-primitive\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.16.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@eslint/eslintrc\": \"^1.3.0\",\n        \"@humanwhocodes/config-array\": \"^0.9.2\",\n        \"ajv\": \"^6.10.0\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.1.1\",\n        \"eslint-utils\": \"^3.0.0\",\n        \"eslint-visitor-keys\": \"^3.3.0\",\n        \"espree\": \"^9.3.2\",\n        \"esquery\": \"^1.4.0\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"functional-red-black-tree\": \"^1.0.1\",\n        \"glob-parent\": \"^6.0.1\",\n        \"globals\": \"^13.15.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.0.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.1\",\n        \"regexpp\": \"^3.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"strip-json-comments\": \"^3.1.0\",\n        \"text-table\": \"^0.2.0\",\n        \"v8-compile-cache\": \"^2.0.3\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.1.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/eslint-utils\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^10.0.0 || ^12.0.0 || >= 14.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/mysticatea\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \">=5\"\n      }\n    },\n    \"node_modules/eslint-utils/node_modules/eslint-visitor-keys\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/eslint/node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.3.2\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"acorn\": \"^8.7.1\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/espree/node_modules/acorn\": {\n      \"version\": \"8.7.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estree-walker\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/events\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.x\"\n      }\n    },\n    \"node_modules/evp_bytestokey\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"md5.js\": \"^1.3.4\",\n        \"safe-buffer\": \"^5.1.1\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-safe-stringify\": {\n      \"version\": \"2.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fflate\": {\n      \"version\": \"0.7.4\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat\": {\n      \"version\": \"5.0.2\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"bin\": {\n        \"flat\": \"cli.js\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flatted\": \"^3.1.0\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/flatbush\": {\n      \"version\": \"3.2.1\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"flatqueue\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/flatqueue\": {\n      \"version\": \"1.2.0\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.5\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/foreach\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/form-data\": {\n      \"version\": \"2.5.1\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.6\",\n        \"mime-types\": \"^2.1.12\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.12\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functional-red-black-tree\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/geographiclib\": {\n      \"version\": \"1.48.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/geokdbush\": {\n      \"version\": \"1.1.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"tinyqueue\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/geokdbush/node_modules/tinyqueue\": {\n      \"version\": \"1.2.3\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/get-assigned-identifiers\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-port\": {\n      \"version\": \"3.2.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.1.6\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"13.15.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hash-base\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"^3.6.0\",\n        \"safe-buffer\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/hash-base/node_modules/readable-stream\": {\n      \"version\": \"3.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"string_decoder\": \"^1.1.1\",\n        \"util-deprecate\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/hash-base/node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/hash.js\": {\n      \"version\": \"1.1.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.1.tgz\",\n      \"integrity\": \"sha512-1/th4MHjnwncwXsIW6QMzlvYL9kG5e/CpVvLRZe4XPa8TOUNbCELqmvhDmnkNsAjwaG4+I8gJJL0JBvTTLO9qA==\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/he\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"he\": \"bin/he\"\n      }\n    },\n    \"node_modules/hmac-drbg\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"hash.js\": \"^1.0.3\",\n        \"minimalistic-assert\": \"^1.0.0\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/htmlescape\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/http-basic\": {\n      \"version\": \"6.0.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/concat-stream\": \"^1.6.0\",\n        \"@types/node\": \"^7.0.31\",\n        \"caseless\": \"~0.12.0\",\n        \"concat-stream\": \"^1.4.6\",\n        \"http-response-object\": \"^3.0.1\",\n        \"parse-cache-control\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/http-basic/node_modules/@types/node\": {\n      \"version\": \"7.10.9\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/http-response-object\": {\n      \"version\": \"3.0.2\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^10.0.3\"\n      }\n    },\n    \"node_modules/https-browserify\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.6.3\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/idb-keyval\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/idb-keyval/-/idb-keyval-6.2.0.tgz\",\n      \"integrity\": \"sha512-uw+MIyQn2jl3+hroD7hF8J7PUviBU7BPKWw4f/ISf32D4LoGu98yHjrzWWJDASu9QNrX10tCJqk9YY0ClWm8Ng==\",\n      \"dependencies\": {\n        \"safari-14-idb-fix\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/inline-source-map\": {\n      \"version\": \"0.6.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"source-map\": \"~0.5.3\"\n      }\n    },\n    \"node_modules/insert-module-globals\": {\n      \"version\": \"7.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"acorn-node\": \"^1.5.2\",\n        \"combine-source-map\": \"^0.8.0\",\n        \"concat-stream\": \"^1.6.1\",\n        \"is-buffer\": \"^1.1.0\",\n        \"JSONStream\": \"^1.0.3\",\n        \"path-is-absolute\": \"^1.0.1\",\n        \"process\": \"~0.11.0\",\n        \"through2\": \"^2.0.0\",\n        \"undeclared-identifiers\": \"^1.1.2\",\n        \"xtend\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"insert-module-globals\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/is-arguments\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-buffer\": {\n      \"version\": \"1.1.6\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-builtin-module\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"builtin-modules\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-generator-function\": {\n      \"version\": \"1.0.9\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-module\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.2\",\n        \"call-bind\": \"^1.0.2\",\n        \"es-abstract\": \"^1.18.0-next.2\",\n        \"foreach\": \"^2.0.5\",\n        \"has-symbols\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-wsl\": {\n      \"version\": \"1.1.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"1.0.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsonparse\": {\n      \"version\": \"1.3.1\",\n      \"dev\": true,\n      \"engines\": [\n        \"node >= 0.2.0\"\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/JSONStream\": {\n      \"version\": \"1.3.5\",\n      \"dev\": true,\n      \"license\": \"(MIT OR Apache-2.0)\",\n      \"dependencies\": {\n        \"jsonparse\": \"^1.2.0\",\n        \"through\": \">=2.2.7 <3\"\n      },\n      \"bin\": {\n        \"JSONStream\": \"bin.js\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/kdbush\": {\n      \"version\": \"3.0.0\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/keygrip\": {\n      \"version\": \"1.1.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tsscmp\": \"1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/labeled-stream-splicer\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"stream-splicer\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash.memoize\": {\n      \"version\": \"3.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/md5.js\": {\n      \"version\": \"1.3.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.1.2\"\n      }\n    },\n    \"node_modules/miller-rabin\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bn.js\": \"^4.0.0\",\n        \"brorand\": \"^1.0.1\"\n      },\n      \"bin\": {\n        \"miller-rabin\": \"bin/miller-rabin\"\n      }\n    },\n    \"node_modules/miller-rabin/node_modules/bn.js\": {\n      \"version\": \"4.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/minimalistic-crypto-utils\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.6\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/mkdirp-classic\": {\n      \"version\": \"0.5.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/mocha\": {\n      \"version\": \"10.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.2.0.tgz\",\n      \"integrity\": \"sha512-IDY7fl/BecMwFHzoqF2sg/SHHANeBoMMXFlS9r0OXKDssYE1M5O43wUY/9BVPeIvfH2zmEbBfseqN9gBQZzXkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-colors\": \"4.1.1\",\n        \"browser-stdout\": \"1.3.1\",\n        \"chokidar\": \"3.5.3\",\n        \"debug\": \"4.3.4\",\n        \"diff\": \"5.0.0\",\n        \"escape-string-regexp\": \"4.0.0\",\n        \"find-up\": \"5.0.0\",\n        \"glob\": \"7.2.0\",\n        \"he\": \"1.2.0\",\n        \"js-yaml\": \"4.1.0\",\n        \"log-symbols\": \"4.1.0\",\n        \"minimatch\": \"5.0.1\",\n        \"ms\": \"2.1.3\",\n        \"nanoid\": \"3.3.3\",\n        \"serialize-javascript\": \"6.0.0\",\n        \"strip-json-comments\": \"3.1.1\",\n        \"supports-color\": \"8.1.1\",\n        \"workerpool\": \"6.2.1\",\n        \"yargs\": \"16.2.0\",\n        \"yargs-parser\": \"20.2.4\",\n        \"yargs-unparser\": \"2.0.0\"\n      },\n      \"bin\": {\n        \"_mocha\": \"bin/_mocha\",\n        \"mocha\": \"bin/mocha.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/mochajs\"\n      }\n    },\n    \"node_modules/mocha/node_modules/glob\": {\n      \"version\": \"7.2.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/mocha/node_modules/glob/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/mocha/node_modules/minimatch\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/mocha/node_modules/minimatch/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/module-deps\": {\n      \"version\": \"6.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"browser-resolve\": \"^2.0.0\",\n        \"cached-path-relative\": \"^1.0.2\",\n        \"concat-stream\": \"~1.6.0\",\n        \"defined\": \"^1.0.0\",\n        \"detective\": \"^5.2.0\",\n        \"duplexer2\": \"^0.1.2\",\n        \"inherits\": \"^2.0.1\",\n        \"JSONStream\": \"^1.0.3\",\n        \"parents\": \"^1.0.0\",\n        \"readable-stream\": \"^2.0.2\",\n        \"resolve\": \"^1.4.0\",\n        \"stream-combiner2\": \"^1.1.1\",\n        \"subarg\": \"^1.0.0\",\n        \"through2\": \"^2.0.0\",\n        \"xtend\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"module-deps\": \"bin/cmd.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/mproj\": {\n      \"version\": \"0.0.40\",\n      \"resolved\": \"https://registry.npmjs.org/mproj/-/mproj-0.0.40.tgz\",\n      \"integrity\": \"sha512-Fda92o5LkFUr0Tbz/5QsVhsIgbhnrnQf/eLkYRWGfKspbgvjA0VCk1FF5bT1TgpMHAP7000alBRkV7Q7hesnQg==\",\n      \"dependencies\": {\n        \"geographiclib\": \"1.48.0\",\n        \"rw\": \"~1.3.2\"\n      },\n      \"bin\": {\n        \"mcs2cs\": \"bin/mcs2cs\",\n        \"mproj\": \"bin/mproj\"\n      },\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/msgpackr\": {\n      \"version\": \"1.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/msgpackr/-/msgpackr-1.10.1.tgz\",\n      \"integrity\": \"sha512-r5VRLv9qouXuLiIBrLpl2d5ZvPt8svdQTl5/vMvE4nzDMyEX4sgW5yWhuBBj5UmgwOTWj8CIdSXn5sAfsHAWIQ==\",\n      \"optionalDependencies\": {\n        \"msgpackr-extract\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/msgpackr-extract\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/msgpackr-extract/-/msgpackr-extract-3.0.2.tgz\",\n      \"integrity\": \"sha512-SdzXp4kD/Qf8agZ9+iTu6eql0m3kWm1A2y1hkpTeVNENutaB0BwHlSvAIaMxwntmRUAUjon2V4L8Z/njd0Ct8A==\",\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"node-gyp-build-optional-packages\": \"5.0.7\"\n      },\n      \"bin\": {\n        \"download-msgpackr-prebuilds\": \"bin/download-prebuilds.js\"\n      },\n      \"optionalDependencies\": {\n        \"@msgpackr-extract/msgpackr-extract-darwin-arm64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-darwin-x64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-linux-arm\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-linux-arm64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-linux-x64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-win32-x64\": \"3.0.2\"\n      }\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/node-gyp-build-optional-packages\": {\n      \"version\": \"5.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.0.7.tgz\",\n      \"integrity\": \"sha512-YlCCc6Wffkx0kHkmam79GKvDQ6x+QZkMjFGrIMxgFNILFvGSbCp2fCBC55pGTT9gVaz8Na5CLmxt/urtzRv36w==\",\n      \"optional\": true,\n      \"bin\": {\n        \"node-gyp-build-optional-packages\": \"bin.js\",\n        \"node-gyp-build-optional-packages-optional\": \"optional.js\",\n        \"node-gyp-build-optional-packages-test\": \"build-test.js\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.0\",\n        \"define-properties\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.1\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/opn\": {\n      \"version\": \"5.5.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-wsl\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\",\n        \"word-wrap\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/os-browserify\": {\n      \"version\": \"0.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/pako\": {\n      \"version\": \"1.0.11\",\n      \"dev\": true,\n      \"license\": \"(MIT AND Zlib)\"\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parents\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-platform\": \"~0.11.15\"\n      }\n    },\n    \"node_modules/parse-asn1\": {\n      \"version\": \"5.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.7.tgz\",\n      \"integrity\": \"sha512-CTM5kuWR3sx9IFamcl5ErfPl6ea/N8IYwiJ+vpeB2g+1iknv7zBl5uPwbMbRVznRVbrNY6lGuDoE5b30grmbqg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"asn1.js\": \"^4.10.1\",\n        \"browserify-aes\": \"^1.2.0\",\n        \"evp_bytestokey\": \"^1.0.3\",\n        \"hash-base\": \"~3.0\",\n        \"pbkdf2\": \"^3.1.2\",\n        \"safe-buffer\": \"^5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/parse-asn1/node_modules/hash-base\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz\",\n      \"integrity\": \"sha512-EeeoJKjTyt868liAlVmcv2ZsUfGHlE3Q+BICOXcZiwN3osr5Q/zFGYmTJpoIzuaSTAwndFy+GqhEwlU4L3j4Ow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/parse-asn1/node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/parse-cache-control\": {\n      \"version\": \"1.0.1\"\n    },\n    \"node_modules/path-browserify\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-platform\": {\n      \"version\": \"0.11.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/pbkdf2\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"create-hash\": \"^1.1.2\",\n        \"create-hmac\": \"^1.1.4\",\n        \"ripemd160\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"sha.js\": \"^2.4.8\"\n      },\n      \"engines\": {\n        \"node\": \">=0.12\"\n      }\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/process\": {\n      \"version\": \"0.11.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      }\n    },\n    \"node_modules/process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/promise\": {\n      \"version\": \"8.1.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"asap\": \"~2.0.6\"\n      }\n    },\n    \"node_modules/public-encrypt\": {\n      \"version\": \"4.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bn.js\": \"^4.1.0\",\n        \"browserify-rsa\": \"^4.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"parse-asn1\": \"^5.0.0\",\n        \"randombytes\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.1.2\"\n      }\n    },\n    \"node_modules/public-encrypt/node_modules/bn.js\": {\n      \"version\": \"4.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"1.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.12.0.tgz\",\n      \"integrity\": \"sha512-trVZiI6RMOkO476zLGaBIzszOdFPnCCXHPG9kn0yuS1uz6xdVxPfZdB3vUig9pxPFDM9BRAgz/YUIVQ1/vuiUg==\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/querystring\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.4.x\"\n      }\n    },\n    \"node_modules/querystring-es3\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.4.x\"\n      }\n    },\n    \"node_modules/randombytes\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/randomfill\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"randombytes\": \"^2.0.5\",\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/read-only-stream\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/readable-stream\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz\",\n      \"integrity\": \"sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==\",\n      \"dependencies\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/regexpp\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/mysticatea\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.20.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-core-module\": \"^2.2.0\",\n        \"path-parse\": \"^1.0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/ripemd160\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/robust-predicates\": {\n      \"version\": \"3.0.1\",\n      \"license\": \"Unlicense\"\n    },\n    \"node_modules/rollup\": {\n      \"version\": \"2.73.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"rollup\": \"dist/bin/rollup\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/rw\": {\n      \"version\": \"1.3.3\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/safari-14-idb-fix\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/safari-14-idb-fix/-/safari-14-idb-fix-3.0.0.tgz\",\n      \"integrity\": \"sha512-eBNFLob4PMq8JA1dGyFn6G97q3/WzNtFK4RnzT1fnLq+9RyrGknzYiM/9B12MnKAxuj1IXr7UKYtTNtjyKMBog==\"\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/serialize-javascript\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.1.tgz\",\n      \"integrity\": \"sha512-j4t6ccc+VsKwYHso+kElc5neZpjtq9EnRICFZtWyBsLojhmeF/ZBd/elqm22WJh/BziDe/SBiOeAt0m2mfLD0g==\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/sha.js\": {\n      \"version\": \"2.4.11\",\n      \"dev\": true,\n      \"license\": \"(MIT AND BSD-3-Clause)\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      },\n      \"bin\": {\n        \"sha.js\": \"bin.js\"\n      }\n    },\n    \"node_modules/shasum-object\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"fast-safe-stringify\": \"^2.0.7\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shell-quote\": {\n      \"version\": \"1.7.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/simple-concat\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.5.7\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/stream-browserify\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"~2.0.4\",\n        \"readable-stream\": \"^3.5.0\"\n      }\n    },\n    \"node_modules/stream-browserify/node_modules/readable-stream\": {\n      \"version\": \"3.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"string_decoder\": \"^1.1.1\",\n        \"util-deprecate\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/stream-combiner2\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"duplexer2\": \"~0.1.0\",\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/stream-http\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"builtin-status-codes\": \"^3.0.0\",\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"^3.6.0\",\n        \"xtend\": \"^4.0.2\"\n      }\n    },\n    \"node_modules/stream-http/node_modules/readable-stream\": {\n      \"version\": \"3.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"string_decoder\": \"^1.1.1\",\n        \"util-deprecate\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/stream-splicer\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/subarg\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimist\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/sync-request\": {\n      \"version\": \"5.0.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"http-response-object\": \"^3.0.1\",\n        \"sync-rpc\": \"^1.2.0\",\n        \"then-request\": \"^5.0.0\"\n      }\n    },\n    \"node_modules/sync-rpc\": {\n      \"version\": \"1.3.6\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-port\": \"^3.1.0\"\n      }\n    },\n    \"node_modules/syntax-error\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"acorn-node\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/then-request\": {\n      \"version\": \"5.0.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/concat-stream\": \"^1.6.0\",\n        \"@types/form-data\": \"0.0.33\",\n        \"@types/node\": \"^8.0.0\",\n        \"@types/qs\": \"^6.2.31\",\n        \"caseless\": \"~0.12.0\",\n        \"concat-stream\": \"^1.6.0\",\n        \"form-data\": \"^2.2.0\",\n        \"http-basic\": \"^6.0.0\",\n        \"http-response-object\": \"^3.0.1\",\n        \"promise\": \"^8.0.0\",\n        \"qs\": \"^6.4.0\"\n      }\n    },\n    \"node_modules/then-request/node_modules/@types/node\": {\n      \"version\": \"8.10.59\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/through2\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"~2.3.6\",\n        \"xtend\": \"~4.0.1\"\n      }\n    },\n    \"node_modules/timers-browserify\": {\n      \"version\": \"1.4.2\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"process\": \"~0.11.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6.0\"\n      }\n    },\n    \"node_modules/tinyqueue\": {\n      \"version\": \"2.0.3\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/tsscmp\": {\n      \"version\": \"1.0.6\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.6.x\"\n      }\n    },\n    \"node_modules/tty-browserify\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typedarray\": {\n      \"version\": \"0.0.6\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/umd\": {\n      \"version\": \"3.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"umd\": \"bin/cli.js\"\n      }\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\",\n        \"has-bigints\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.2\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/undeclared-identifiers\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"acorn-node\": \"^1.3.0\",\n        \"dash-ast\": \"^1.0.0\",\n        \"get-assigned-identifiers\": \"^1.2.0\",\n        \"simple-concat\": \"^1.0.0\",\n        \"xtend\": \"^4.0.1\"\n      },\n      \"bin\": {\n        \"undeclared-identifiers\": \"bin.js\"\n      }\n    },\n    \"node_modules/underscore\": {\n      \"version\": \"1.13.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/uri-js/node_modules/punycode\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/url\": {\n      \"version\": \"0.11.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"punycode\": \"1.3.2\",\n        \"querystring\": \"0.2.0\"\n      }\n    },\n    \"node_modules/url/node_modules/punycode\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/util\": {\n      \"version\": \"0.12.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"is-arguments\": \"^1.0.4\",\n        \"is-generator-function\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.3\",\n        \"safe-buffer\": \"^5.1.2\",\n        \"which-typed-array\": \"^1.1.2\"\n      }\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/v8-compile-cache\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/vm-browserify\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.2\",\n        \"call-bind\": \"^1.0.0\",\n        \"es-abstract\": \"^1.18.0-next.1\",\n        \"foreach\": \"^2.0.5\",\n        \"function-bind\": \"^1.1.1\",\n        \"has-symbols\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/word-wrap\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/workerpool\": {\n      \"version\": \"6.2.1\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/xtend\": {\n      \"version\": \"4.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"16.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"20.2.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    }\n  },\n  \"dependencies\": {\n    \"@eslint/eslintrc\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.3.2\",\n        \"globals\": \"^13.15.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      }\n    },\n    \"@humanwhocodes/config-array\": {\n      \"version\": \"0.9.5\",\n      \"dev\": true,\n      \"requires\": {\n        \"@humanwhocodes/object-schema\": \"^1.2.1\",\n        \"debug\": \"^4.1.1\",\n        \"minimatch\": \"^3.0.4\"\n      }\n    },\n    \"@humanwhocodes/object-schema\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true\n    },\n    \"@msgpackr-extract/msgpackr-extract-darwin-arm64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-arm64/-/msgpackr-extract-darwin-arm64-3.0.2.tgz\",\n      \"integrity\": \"sha512-9bfjwDxIDWmmOKusUcqdS4Rw+SETlp9Dy39Xui9BEGEk19dDwH0jhipwFzEff/pFg95NKymc6TOTbRKcWeRqyQ==\",\n      \"optional\": true\n    },\n    \"@msgpackr-extract/msgpackr-extract-darwin-x64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-x64/-/msgpackr-extract-darwin-x64-3.0.2.tgz\",\n      \"integrity\": \"sha512-lwriRAHm1Yg4iDf23Oxm9n/t5Zpw1lVnxYU3HnJPTi2lJRkKTrps1KVgvL6m7WvmhYVt/FIsssWay+k45QHeuw==\",\n      \"optional\": true\n    },\n    \"@msgpackr-extract/msgpackr-extract-linux-arm\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm/-/msgpackr-extract-linux-arm-3.0.2.tgz\",\n      \"integrity\": \"sha512-MOI9Dlfrpi2Cuc7i5dXdxPbFIgbDBGgKR5F2yWEa6FVEtSWncfVNKW5AKjImAQ6CZlBK9tympdsZJ2xThBiWWA==\",\n      \"optional\": true\n    },\n    \"@msgpackr-extract/msgpackr-extract-linux-arm64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm64/-/msgpackr-extract-linux-arm64-3.0.2.tgz\",\n      \"integrity\": \"sha512-FU20Bo66/f7He9Fp9sP2zaJ1Q8L9uLPZQDub/WlUip78JlPeMbVL8546HbZfcW9LNciEXc8d+tThSJjSC+tmsg==\",\n      \"optional\": true\n    },\n    \"@msgpackr-extract/msgpackr-extract-linux-x64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-x64/-/msgpackr-extract-linux-x64-3.0.2.tgz\",\n      \"integrity\": \"sha512-gsWNDCklNy7Ajk0vBBf9jEx04RUxuDQfBse918Ww+Qb9HCPoGzS+XJTLe96iN3BVK7grnLiYghP/M4L8VsaHeA==\",\n      \"optional\": true\n    },\n    \"@msgpackr-extract/msgpackr-extract-win32-x64\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-win32-x64/-/msgpackr-extract-win32-x64-3.0.2.tgz\",\n      \"integrity\": \"sha512-O+6Gs8UeDbyFpbSh2CPEz/UOrrdWPTBYNblZK5CxxLisYt4kGX3Sc+czffFonyjiGSq3jWLwJS/CCJc7tBr4sQ==\",\n      \"optional\": true\n    },\n    \"@placemarkio/tokml\": {\n      \"version\": \"0.3.3\"\n    },\n    \"@rollup/plugin-json\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-json/-/plugin-json-6.0.1.tgz\",\n      \"integrity\": \"sha512-RgVfl5hWMkxN1h/uZj8FVESvPuBJ/uf6ly6GTj0GONnkfoBN5KC0MSz+PN2OLDgYXMhtG0mWpTrkiOjoxAIevw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@rollup/pluginutils\": \"^5.0.1\"\n      },\n      \"dependencies\": {\n        \"@rollup/pluginutils\": {\n          \"version\": \"5.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.1.0.tgz\",\n          \"integrity\": \"sha512-XTIWOPPcpvyKI6L1NHo0lFlCyznUEyPmPY1mc3KpPVDYulHSTvyeLNVW00QTLIAFNhR3kYnJTQHeGqU4M3n09g==\",\n          \"dev\": true,\n          \"requires\": {\n            \"@types/estree\": \"^1.0.0\",\n            \"estree-walker\": \"^2.0.2\",\n            \"picomatch\": \"^2.3.1\"\n          }\n        },\n        \"@types/estree\": {\n          \"version\": \"1.0.5\",\n          \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n          \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\",\n          \"dev\": true\n        },\n        \"estree-walker\": {\n          \"version\": \"2.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n          \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@rollup/plugin-node-resolve\": {\n      \"version\": \"13.3.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"@rollup/pluginutils\": \"^3.1.0\",\n        \"@types/resolve\": \"1.17.1\",\n        \"deepmerge\": \"^4.2.2\",\n        \"is-builtin-module\": \"^3.1.0\",\n        \"is-module\": \"^1.0.0\",\n        \"resolve\": \"^1.19.0\"\n      }\n    },\n    \"@rollup/pluginutils\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/estree\": \"0.0.39\",\n        \"estree-walker\": \"^1.0.1\",\n        \"picomatch\": \"^2.2.2\"\n      }\n    },\n    \"@tmcw/togeojson\": {\n      \"version\": \"5.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tmcw/togeojson/-/togeojson-5.6.0.tgz\",\n      \"integrity\": \"sha512-p+c0kbSY/tIwd3C0rpmTf3iFAOUYV6bkJbDiq0oQDGROOc7c6uh/X8r/mijY6SIFYIkVuKc8MS2REKhur2e6Jw==\",\n      \"requires\": {}\n    },\n    \"@types/concat-stream\": {\n      \"version\": \"1.6.0\",\n      \"requires\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"@types/estree\": {\n      \"version\": \"0.0.39\",\n      \"dev\": true\n    },\n    \"@types/form-data\": {\n      \"version\": \"0.0.33\",\n      \"requires\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"@types/geojson\": {\n      \"version\": \"7946.0.10\",\n      \"peer\": true\n    },\n    \"@types/node\": {\n      \"version\": \"10.17.18\"\n    },\n    \"@types/qs\": {\n      \"version\": \"6.9.1\"\n    },\n    \"@types/resolve\": {\n      \"version\": \"1.17.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"@xmldom/xmldom\": {\n      \"version\": \"0.8.6\"\n    },\n    \"acorn\": {\n      \"version\": \"7.4.1\",\n      \"dev\": true\n    },\n    \"acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"dev\": true,\n      \"requires\": {}\n    },\n    \"acorn-node\": {\n      \"version\": \"1.8.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn\": \"^7.0.0\",\n        \"acorn-walk\": \"^7.0.0\",\n        \"xtend\": \"^4.0.2\"\n      }\n    },\n    \"acorn-walk\": {\n      \"version\": \"7.2.0\",\n      \"dev\": true\n    },\n    \"adm-zip\": {\n      \"version\": \"0.5.9\"\n    },\n    \"ajv\": {\n      \"version\": \"6.12.6\",\n      \"dev\": true,\n      \"requires\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      }\n    },\n    \"ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"argparse\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true\n    },\n    \"asap\": {\n      \"version\": \"2.0.6\"\n    },\n    \"asn1.js\": {\n      \"version\": \"4.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz\",\n      \"integrity\": \"sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"minimalistic-assert\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n          \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"assert\": {\n      \"version\": \"1.5.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"object-assign\": \"^4.1.1\",\n        \"util\": \"0.10.3\"\n      },\n      \"dependencies\": {\n        \"inherits\": {\n          \"version\": \"2.0.1\",\n          \"dev\": true\n        },\n        \"util\": {\n          \"version\": \"0.10.3\",\n          \"dev\": true,\n          \"requires\": {\n            \"inherits\": \"2.0.1\"\n          }\n        }\n      }\n    },\n    \"asynckit\": {\n      \"version\": \"0.4.0\"\n    },\n    \"available-typed-arrays\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"base64-js\": {\n      \"version\": \"1.5.1\",\n      \"dev\": true\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true\n    },\n    \"bn.js\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz\",\n      \"integrity\": \"sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==\",\n      \"dev\": true\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^7.0.1\"\n      }\n    },\n    \"brorand\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true\n    },\n    \"browser-pack\": {\n      \"version\": \"6.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"combine-source-map\": \"~0.8.0\",\n        \"defined\": \"^1.0.0\",\n        \"JSONStream\": \"^1.0.3\",\n        \"safe-buffer\": \"^5.1.1\",\n        \"through2\": \"^2.0.0\",\n        \"umd\": \"^3.0.0\"\n      }\n    },\n    \"browser-resolve\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"resolve\": \"^1.17.0\"\n      }\n    },\n    \"browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"dev\": true\n    },\n    \"browserify\": {\n      \"version\": \"17.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/browserify/-/browserify-17.0.0.tgz\",\n      \"integrity\": \"sha512-SaHqzhku9v/j6XsQMRxPyBrSP3gnwmE27gLJYZgMT2GeK3J0+0toN+MnuNYDfHwVGQfLiMZ7KSNSIXHemy905w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert\": \"^1.4.0\",\n        \"browser-pack\": \"^6.0.1\",\n        \"browser-resolve\": \"^2.0.0\",\n        \"browserify-zlib\": \"~0.2.0\",\n        \"buffer\": \"~5.2.1\",\n        \"cached-path-relative\": \"^1.0.0\",\n        \"concat-stream\": \"^1.6.0\",\n        \"console-browserify\": \"^1.1.0\",\n        \"constants-browserify\": \"~1.0.0\",\n        \"crypto-browserify\": \"^3.0.0\",\n        \"defined\": \"^1.0.0\",\n        \"deps-sort\": \"^2.0.1\",\n        \"domain-browser\": \"^1.2.0\",\n        \"duplexer2\": \"~0.1.2\",\n        \"events\": \"^3.0.0\",\n        \"glob\": \"^7.1.0\",\n        \"has\": \"^1.0.0\",\n        \"htmlescape\": \"^1.1.0\",\n        \"https-browserify\": \"^1.0.0\",\n        \"inherits\": \"~2.0.1\",\n        \"insert-module-globals\": \"^7.2.1\",\n        \"JSONStream\": \"^1.0.3\",\n        \"labeled-stream-splicer\": \"^2.0.0\",\n        \"mkdirp-classic\": \"^0.5.2\",\n        \"module-deps\": \"^6.2.3\",\n        \"os-browserify\": \"~0.3.0\",\n        \"parents\": \"^1.0.1\",\n        \"path-browserify\": \"^1.0.0\",\n        \"process\": \"~0.11.0\",\n        \"punycode\": \"^1.3.2\",\n        \"querystring-es3\": \"~0.2.0\",\n        \"read-only-stream\": \"^2.0.0\",\n        \"readable-stream\": \"^2.0.2\",\n        \"resolve\": \"^1.1.4\",\n        \"shasum-object\": \"^1.0.0\",\n        \"shell-quote\": \"^1.6.1\",\n        \"stream-browserify\": \"^3.0.0\",\n        \"stream-http\": \"^3.0.0\",\n        \"string_decoder\": \"^1.1.1\",\n        \"subarg\": \"^1.0.0\",\n        \"syntax-error\": \"^1.1.1\",\n        \"through2\": \"^2.0.0\",\n        \"timers-browserify\": \"^1.0.1\",\n        \"tty-browserify\": \"0.0.1\",\n        \"url\": \"~0.11.0\",\n        \"util\": \"~0.12.0\",\n        \"vm-browserify\": \"^1.0.0\",\n        \"xtend\": \"^4.0.0\"\n      }\n    },\n    \"browserify-aes\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"buffer-xor\": \"^1.0.3\",\n        \"cipher-base\": \"^1.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"evp_bytestokey\": \"^1.0.3\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"browserify-cipher\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"browserify-aes\": \"^1.0.4\",\n        \"browserify-des\": \"^1.0.0\",\n        \"evp_bytestokey\": \"^1.0.0\"\n      }\n    },\n    \"browserify-des\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.1\",\n        \"des.js\": \"^1.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.1.2\"\n      }\n    },\n    \"browserify-rsa\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^5.0.0\",\n        \"randombytes\": \"^2.0.1\"\n      }\n    },\n    \"browserify-sign\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.2.3.tgz\",\n      \"integrity\": \"sha512-JWCZW6SKhfhjJxO8Tyiiy+XYB7cqd2S5/+WeYHsKdNKFlCBhKbblba1A/HN/90YwtxKc8tCErjffZl++UNmGiw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^5.2.1\",\n        \"browserify-rsa\": \"^4.1.0\",\n        \"create-hash\": \"^1.2.0\",\n        \"create-hmac\": \"^1.1.7\",\n        \"elliptic\": \"^6.5.5\",\n        \"hash-base\": \"~3.0\",\n        \"inherits\": \"^2.0.4\",\n        \"parse-asn1\": \"^5.1.7\",\n        \"readable-stream\": \"^2.3.8\",\n        \"safe-buffer\": \"^5.2.1\"\n      },\n      \"dependencies\": {\n        \"hash-base\": {\n          \"version\": \"3.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz\",\n          \"integrity\": \"sha512-EeeoJKjTyt868liAlVmcv2ZsUfGHlE3Q+BICOXcZiwN3osr5Q/zFGYmTJpoIzuaSTAwndFy+GqhEwlU4L3j4Ow==\",\n          \"dev\": true,\n          \"requires\": {\n            \"inherits\": \"^2.0.1\",\n            \"safe-buffer\": \"^5.0.1\"\n          }\n        },\n        \"safe-buffer\": {\n          \"version\": \"5.2.1\",\n          \"dev\": true\n        }\n      }\n    },\n    \"browserify-zlib\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"pako\": \"~1.0.5\"\n      }\n    },\n    \"buffer\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"base64-js\": \"^1.0.2\",\n        \"ieee754\": \"^1.1.4\"\n      }\n    },\n    \"buffer-from\": {\n      \"version\": \"1.1.1\"\n    },\n    \"buffer-xor\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true\n    },\n    \"builtin-modules\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true\n    },\n    \"builtin-status-codes\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true\n    },\n    \"cached-path-relative\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true\n    },\n    \"call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"requires\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      }\n    },\n    \"callsites\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true\n    },\n    \"camelcase\": {\n      \"version\": \"6.3.0\",\n      \"dev\": true\n    },\n    \"caseless\": {\n      \"version\": \"0.12.0\"\n    },\n    \"chalk\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"dependencies\": {\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      }\n    },\n    \"cipher-base\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"cliui\": {\n      \"version\": \"7.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true\n    },\n    \"combine-source-map\": {\n      \"version\": \"0.8.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"convert-source-map\": \"~1.1.0\",\n        \"inline-source-map\": \"~0.6.0\",\n        \"lodash.memoize\": \"~3.0.3\",\n        \"source-map\": \"~0.5.3\"\n      }\n    },\n    \"combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"requires\": {\n        \"delayed-stream\": \"~1.0.0\"\n      }\n    },\n    \"commander\": {\n      \"version\": \"7.0.0\"\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true\n    },\n    \"concat-stream\": {\n      \"version\": \"1.6.2\",\n      \"requires\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"inherits\": \"^2.0.3\",\n        \"readable-stream\": \"^2.2.2\",\n        \"typedarray\": \"^0.0.6\"\n      }\n    },\n    \"console-browserify\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true\n    },\n    \"constants-browserify\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"convert-source-map\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true\n    },\n    \"cookies\": {\n      \"version\": \"0.8.0\",\n      \"requires\": {\n        \"depd\": \"~2.0.0\",\n        \"keygrip\": \"~1.1.0\"\n      }\n    },\n    \"core-util-is\": {\n      \"version\": \"1.0.2\"\n    },\n    \"create-ecdh\": {\n      \"version\": \"4.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.1.0\",\n        \"elliptic\": \"^6.5.3\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"dev\": true\n        }\n      }\n    },\n    \"create-hash\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.1\",\n        \"inherits\": \"^2.0.1\",\n        \"md5.js\": \"^1.3.4\",\n        \"ripemd160\": \"^2.0.1\",\n        \"sha.js\": \"^2.4.0\"\n      }\n    },\n    \"create-hmac\": {\n      \"version\": \"1.1.7\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.3\",\n        \"create-hash\": \"^1.1.0\",\n        \"inherits\": \"^2.0.1\",\n        \"ripemd160\": \"^2.0.0\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"sha.js\": \"^2.4.8\"\n      }\n    },\n    \"cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      }\n    },\n    \"crypto-browserify\": {\n      \"version\": \"3.12.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"browserify-cipher\": \"^1.0.0\",\n        \"browserify-sign\": \"^4.0.0\",\n        \"create-ecdh\": \"^4.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"create-hmac\": \"^1.1.0\",\n        \"diffie-hellman\": \"^5.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"pbkdf2\": \"^3.0.3\",\n        \"public-encrypt\": \"^4.0.0\",\n        \"randombytes\": \"^2.0.0\",\n        \"randomfill\": \"^1.0.3\"\n      }\n    },\n    \"csv-spectrum\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"d3-color\": {\n      \"version\": \"3.1.0\"\n    },\n    \"d3-interpolate\": {\n      \"version\": \"3.0.1\",\n      \"requires\": {\n        \"d3-color\": \"1 - 3\"\n      }\n    },\n    \"d3-scale-chromatic\": {\n      \"version\": \"3.0.0\",\n      \"requires\": {\n        \"d3-color\": \"1 - 3\",\n        \"d3-interpolate\": \"1 - 3\"\n      }\n    },\n    \"dash-ast\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"debug\": {\n      \"version\": \"4.3.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"dependencies\": {\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"dev\": true\n        }\n      }\n    },\n    \"decamelize\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true\n    },\n    \"deep-is\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true\n    },\n    \"deepmerge\": {\n      \"version\": \"4.2.2\",\n      \"dev\": true\n    },\n    \"define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"requires\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      }\n    },\n    \"define-properties\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"object-keys\": \"^1.0.12\"\n      }\n    },\n    \"defined\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"delaunator\": {\n      \"version\": \"5.0.0\",\n      \"requires\": {\n        \"robust-predicates\": \"^3.0.0\"\n      }\n    },\n    \"delayed-stream\": {\n      \"version\": \"1.0.0\"\n    },\n    \"depd\": {\n      \"version\": \"2.0.0\"\n    },\n    \"deps-sort\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"JSONStream\": \"^1.0.3\",\n        \"shasum-object\": \"^1.0.0\",\n        \"subarg\": \"^1.0.0\",\n        \"through2\": \"^2.0.0\"\n      }\n    },\n    \"des.js\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"minimalistic-assert\": \"^1.0.0\"\n      }\n    },\n    \"detective\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn-node\": \"^1.6.1\",\n        \"defined\": \"^1.0.0\",\n        \"minimist\": \"^1.1.1\"\n      }\n    },\n    \"diff\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true\n    },\n    \"diffie-hellman\": {\n      \"version\": \"5.0.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.1.0\",\n        \"miller-rabin\": \"^4.0.0\",\n        \"randombytes\": \"^2.0.0\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"dev\": true\n        }\n      }\n    },\n    \"doctrine\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"esutils\": \"^2.0.2\"\n      }\n    },\n    \"domain-browser\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true\n    },\n    \"duplexer2\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"elliptic\": {\n      \"version\": \"6.5.5\",\n      \"resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.5.tgz\",\n      \"integrity\": \"sha512-7EjbcmUm17NQFu4Pmgmq2olYMj8nwMnpcddByChSUjArp8F5DQWcIcpriwO4ZToLNAJig0yiyjswfyGNje/ixw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.11.9\",\n        \"brorand\": \"^1.1.0\",\n        \"hash.js\": \"^1.0.0\",\n        \"hmac-drbg\": \"^1.0.1\",\n        \"inherits\": \"^2.0.4\",\n        \"minimalistic-assert\": \"^1.0.1\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"dev\": true\n        }\n      }\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true\n    },\n    \"es-abstract\": {\n      \"version\": \"1.18.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function-bind\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.1.1\",\n        \"has\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.2\",\n        \"is-callable\": \"^1.2.3\",\n        \"is-negative-zero\": \"^2.0.1\",\n        \"is-regex\": \"^1.1.3\",\n        \"is-string\": \"^1.0.6\",\n        \"object-inspect\": \"^1.10.3\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.2\",\n        \"string.prototype.trimend\": \"^1.0.4\",\n        \"string.prototype.trimstart\": \"^1.0.4\",\n        \"unbox-primitive\": \"^1.0.1\"\n      }\n    },\n    \"es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"requires\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      }\n    },\n    \"es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\"\n    },\n    \"es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      }\n    },\n    \"escalade\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true\n    },\n    \"eslint\": {\n      \"version\": \"8.16.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"@eslint/eslintrc\": \"^1.3.0\",\n        \"@humanwhocodes/config-array\": \"^0.9.2\",\n        \"ajv\": \"^6.10.0\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.1.1\",\n        \"eslint-utils\": \"^3.0.0\",\n        \"eslint-visitor-keys\": \"^3.3.0\",\n        \"espree\": \"^9.3.2\",\n        \"esquery\": \"^1.4.0\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"functional-red-black-tree\": \"^1.0.1\",\n        \"glob-parent\": \"^6.0.1\",\n        \"globals\": \"^13.15.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.0.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.1\",\n        \"regexpp\": \"^3.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"strip-json-comments\": \"^3.1.0\",\n        \"text-table\": \"^0.2.0\",\n        \"v8-compile-cache\": \"^2.0.3\"\n      },\n      \"dependencies\": {\n        \"glob-parent\": {\n          \"version\": \"6.0.2\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-glob\": \"^4.0.3\"\n          }\n        }\n      }\n    },\n    \"eslint-scope\": {\n      \"version\": \"7.1.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      }\n    },\n    \"eslint-utils\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"eslint-visitor-keys\": \"^2.0.0\"\n      },\n      \"dependencies\": {\n        \"eslint-visitor-keys\": {\n          \"version\": \"2.1.0\",\n          \"dev\": true\n        }\n      }\n    },\n    \"eslint-visitor-keys\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true\n    },\n    \"espree\": {\n      \"version\": \"9.3.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn\": \"^8.7.1\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"dependencies\": {\n        \"acorn\": {\n          \"version\": \"8.7.1\",\n          \"dev\": true\n        }\n      }\n    },\n    \"esquery\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"estraverse\": \"^5.1.0\"\n      }\n    },\n    \"esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"estraverse\": \"^5.2.0\"\n      }\n    },\n    \"estraverse\": {\n      \"version\": \"5.3.0\",\n      \"dev\": true\n    },\n    \"estree-walker\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"esutils\": {\n      \"version\": \"2.0.3\",\n      \"dev\": true\n    },\n    \"events\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true\n    },\n    \"evp_bytestokey\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"md5.js\": \"^1.3.4\",\n        \"safe-buffer\": \"^5.1.1\"\n      }\n    },\n    \"fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"dev\": true\n    },\n    \"fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true\n    },\n    \"fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"dev\": true\n    },\n    \"fast-safe-stringify\": {\n      \"version\": \"2.0.7\",\n      \"dev\": true\n    },\n    \"fflate\": {\n      \"version\": \"0.7.4\"\n    },\n    \"file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"flat-cache\": \"^3.0.4\"\n      }\n    },\n    \"fill-range\": {\n      \"version\": \"7.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"flat\": {\n      \"version\": \"5.0.2\",\n      \"dev\": true\n    },\n    \"flat-cache\": {\n      \"version\": \"3.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"flatted\": \"^3.1.0\",\n        \"rimraf\": \"^3.0.2\"\n      }\n    },\n    \"flatbush\": {\n      \"version\": \"3.2.1\",\n      \"requires\": {\n        \"flatqueue\": \"^1.2.0\"\n      }\n    },\n    \"flatqueue\": {\n      \"version\": \"1.2.0\"\n    },\n    \"flatted\": {\n      \"version\": \"3.2.5\",\n      \"dev\": true\n    },\n    \"foreach\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true\n    },\n    \"form-data\": {\n      \"version\": \"2.5.1\",\n      \"requires\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.6\",\n        \"mime-types\": \"^2.1.12\"\n      }\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"fsevents\": {\n      \"version\": \"2.3.2\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\"\n    },\n    \"functional-red-black-tree\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"geographiclib\": {\n      \"version\": \"1.48.0\"\n    },\n    \"geokdbush\": {\n      \"version\": \"1.1.0\",\n      \"requires\": {\n        \"tinyqueue\": \"^1.2.2\"\n      },\n      \"dependencies\": {\n        \"tinyqueue\": {\n          \"version\": \"1.2.3\"\n        }\n      }\n    },\n    \"get-assigned-identifiers\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true\n    },\n    \"get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"requires\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      }\n    },\n    \"get-port\": {\n      \"version\": \"3.2.0\"\n    },\n    \"glob\": {\n      \"version\": \"7.1.6\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-glob\": \"^4.0.1\"\n      }\n    },\n    \"globals\": {\n      \"version\": \"13.15.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-fest\": \"^0.20.2\"\n      }\n    },\n    \"gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"requires\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      }\n    },\n    \"has\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"function-bind\": \"^1.1.1\"\n      }\n    },\n    \"has-bigints\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"has-flag\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true\n    },\n    \"has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"requires\": {\n        \"es-define-property\": \"^1.0.0\"\n      }\n    },\n    \"has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\"\n    },\n    \"has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\"\n    },\n    \"hash-base\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"^3.6.0\",\n        \"safe-buffer\": \"^5.2.0\"\n      },\n      \"dependencies\": {\n        \"readable-stream\": {\n          \"version\": \"3.6.0\",\n          \"dev\": true,\n          \"requires\": {\n            \"inherits\": \"^2.0.3\",\n            \"string_decoder\": \"^1.1.1\",\n            \"util-deprecate\": \"^1.0.1\"\n          }\n        },\n        \"safe-buffer\": {\n          \"version\": \"5.2.1\",\n          \"dev\": true\n        }\n      }\n    },\n    \"hash.js\": {\n      \"version\": \"1.1.7\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"hasown\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.1.tgz\",\n      \"integrity\": \"sha512-1/th4MHjnwncwXsIW6QMzlvYL9kG5e/CpVvLRZe4XPa8TOUNbCELqmvhDmnkNsAjwaG4+I8gJJL0JBvTTLO9qA==\",\n      \"requires\": {\n        \"function-bind\": \"^1.1.2\"\n      }\n    },\n    \"he\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true\n    },\n    \"hmac-drbg\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash.js\": \"^1.0.3\",\n        \"minimalistic-assert\": \"^1.0.0\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      }\n    },\n    \"htmlescape\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true\n    },\n    \"http-basic\": {\n      \"version\": \"6.0.0\",\n      \"requires\": {\n        \"@types/concat-stream\": \"^1.6.0\",\n        \"@types/node\": \"^7.0.31\",\n        \"caseless\": \"~0.12.0\",\n        \"concat-stream\": \"^1.4.6\",\n        \"http-response-object\": \"^3.0.1\",\n        \"parse-cache-control\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"@types/node\": {\n          \"version\": \"7.10.9\"\n        }\n      }\n    },\n    \"http-response-object\": {\n      \"version\": \"3.0.2\",\n      \"requires\": {\n        \"@types/node\": \"^10.0.3\"\n      }\n    },\n    \"https-browserify\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"iconv-lite\": {\n      \"version\": \"0.6.3\",\n      \"requires\": {\n        \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\n      }\n    },\n    \"idb-keyval\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/idb-keyval/-/idb-keyval-6.2.0.tgz\",\n      \"integrity\": \"sha512-uw+MIyQn2jl3+hroD7hF8J7PUviBU7BPKWw4f/ISf32D4LoGu98yHjrzWWJDASu9QNrX10tCJqk9YY0ClWm8Ng==\",\n      \"requires\": {\n        \"safari-14-idb-fix\": \"^3.0.0\"\n      }\n    },\n    \"ieee754\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true\n    },\n    \"ignore\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true\n    },\n    \"import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      }\n    },\n    \"imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\"\n    },\n    \"inline-source-map\": {\n      \"version\": \"0.6.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"source-map\": \"~0.5.3\"\n      }\n    },\n    \"insert-module-globals\": {\n      \"version\": \"7.2.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn-node\": \"^1.5.2\",\n        \"combine-source-map\": \"^0.8.0\",\n        \"concat-stream\": \"^1.6.1\",\n        \"is-buffer\": \"^1.1.0\",\n        \"JSONStream\": \"^1.0.3\",\n        \"path-is-absolute\": \"^1.0.1\",\n        \"process\": \"~0.11.0\",\n        \"through2\": \"^2.0.0\",\n        \"undeclared-identifiers\": \"^1.1.2\",\n        \"xtend\": \"^4.0.0\"\n      }\n    },\n    \"is-arguments\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.0\"\n      }\n    },\n    \"is-bigint\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true\n    },\n    \"is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"binary-extensions\": \"^2.0.0\"\n      }\n    },\n    \"is-boolean-object\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\"\n      }\n    },\n    \"is-buffer\": {\n      \"version\": \"1.1.6\",\n      \"dev\": true\n    },\n    \"is-builtin-module\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"builtin-modules\": \"^3.0.0\"\n      }\n    },\n    \"is-callable\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true\n    },\n    \"is-core-module\": {\n      \"version\": \"2.4.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"has\": \"^1.0.3\"\n      }\n    },\n    \"is-date-object\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true\n    },\n    \"is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true\n    },\n    \"is-generator-function\": {\n      \"version\": \"1.0.9\",\n      \"dev\": true\n    },\n    \"is-glob\": {\n      \"version\": \"4.0.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extglob\": \"^2.1.1\"\n      }\n    },\n    \"is-module\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"is-negative-zero\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true\n    },\n    \"is-number\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true\n    },\n    \"is-number-object\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true\n    },\n    \"is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true\n    },\n    \"is-regex\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.2\"\n      }\n    },\n    \"is-string\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true\n    },\n    \"is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-symbols\": \"^1.0.2\"\n      }\n    },\n    \"is-typed-array\": {\n      \"version\": \"1.1.5\",\n      \"dev\": true,\n      \"requires\": {\n        \"available-typed-arrays\": \"^1.0.2\",\n        \"call-bind\": \"^1.0.2\",\n        \"es-abstract\": \"^1.18.0-next.2\",\n        \"foreach\": \"^2.0.5\",\n        \"has-symbols\": \"^1.0.1\"\n      }\n    },\n    \"is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true\n    },\n    \"is-wsl\": {\n      \"version\": \"1.1.0\"\n    },\n    \"isarray\": {\n      \"version\": \"1.0.0\"\n    },\n    \"isexe\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true\n    },\n    \"js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^2.0.1\"\n      }\n    },\n    \"json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true\n    },\n    \"json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"jsonparse\": {\n      \"version\": \"1.3.1\",\n      \"dev\": true\n    },\n    \"JSONStream\": {\n      \"version\": \"1.3.5\",\n      \"dev\": true,\n      \"requires\": {\n        \"jsonparse\": \"^1.2.0\",\n        \"through\": \">=2.2.7 <3\"\n      }\n    },\n    \"kdbush\": {\n      \"version\": \"3.0.0\"\n    },\n    \"keygrip\": {\n      \"version\": \"1.1.0\",\n      \"requires\": {\n        \"tsscmp\": \"1.0.6\"\n      }\n    },\n    \"labeled-stream-splicer\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"stream-splicer\": \"^2.0.0\"\n      }\n    },\n    \"levn\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      }\n    },\n    \"locate-path\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-locate\": \"^5.0.0\"\n      }\n    },\n    \"lodash.memoize\": {\n      \"version\": \"3.0.4\",\n      \"dev\": true\n    },\n    \"lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"dev\": true\n    },\n    \"log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      }\n    },\n    \"md5.js\": {\n      \"version\": \"1.3.5\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.1.2\"\n      }\n    },\n    \"miller-rabin\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.0.0\",\n        \"brorand\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"dev\": true\n        }\n      }\n    },\n    \"mime-db\": {\n      \"version\": \"1.52.0\"\n    },\n    \"mime-types\": {\n      \"version\": \"2.1.35\",\n      \"requires\": {\n        \"mime-db\": \"1.52.0\"\n      }\n    },\n    \"minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"minimalistic-crypto-utils\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"minimatch\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^1.1.7\"\n      }\n    },\n    \"minimist\": {\n      \"version\": \"1.2.6\",\n      \"dev\": true\n    },\n    \"mkdirp-classic\": {\n      \"version\": \"0.5.3\",\n      \"dev\": true\n    },\n    \"mocha\": {\n      \"version\": \"10.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.2.0.tgz\",\n      \"integrity\": \"sha512-IDY7fl/BecMwFHzoqF2sg/SHHANeBoMMXFlS9r0OXKDssYE1M5O43wUY/9BVPeIvfH2zmEbBfseqN9gBQZzXkg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-colors\": \"4.1.1\",\n        \"browser-stdout\": \"1.3.1\",\n        \"chokidar\": \"3.5.3\",\n        \"debug\": \"4.3.4\",\n        \"diff\": \"5.0.0\",\n        \"escape-string-regexp\": \"4.0.0\",\n        \"find-up\": \"5.0.0\",\n        \"glob\": \"7.2.0\",\n        \"he\": \"1.2.0\",\n        \"js-yaml\": \"4.1.0\",\n        \"log-symbols\": \"4.1.0\",\n        \"minimatch\": \"5.0.1\",\n        \"ms\": \"2.1.3\",\n        \"nanoid\": \"3.3.3\",\n        \"serialize-javascript\": \"6.0.0\",\n        \"strip-json-comments\": \"3.1.1\",\n        \"supports-color\": \"8.1.1\",\n        \"workerpool\": \"6.2.1\",\n        \"yargs\": \"16.2.0\",\n        \"yargs-parser\": \"20.2.4\",\n        \"yargs-unparser\": \"2.0.0\"\n      },\n      \"dependencies\": {\n        \"glob\": {\n          \"version\": \"7.2.0\",\n          \"dev\": true,\n          \"requires\": {\n            \"fs.realpath\": \"^1.0.0\",\n            \"inflight\": \"^1.0.4\",\n            \"inherits\": \"2\",\n            \"minimatch\": \"^3.0.4\",\n            \"once\": \"^1.3.0\",\n            \"path-is-absolute\": \"^1.0.0\"\n          },\n          \"dependencies\": {\n            \"minimatch\": {\n              \"version\": \"3.1.2\",\n              \"dev\": true,\n              \"requires\": {\n                \"brace-expansion\": \"^1.1.7\"\n              }\n            }\n          }\n        },\n        \"minimatch\": {\n          \"version\": \"5.0.1\",\n          \"dev\": true,\n          \"requires\": {\n            \"brace-expansion\": \"^2.0.1\"\n          },\n          \"dependencies\": {\n            \"brace-expansion\": {\n              \"version\": \"2.0.1\",\n              \"dev\": true,\n              \"requires\": {\n                \"balanced-match\": \"^1.0.0\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"module-deps\": {\n      \"version\": \"6.2.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"browser-resolve\": \"^2.0.0\",\n        \"cached-path-relative\": \"^1.0.2\",\n        \"concat-stream\": \"~1.6.0\",\n        \"defined\": \"^1.0.0\",\n        \"detective\": \"^5.2.0\",\n        \"duplexer2\": \"^0.1.2\",\n        \"inherits\": \"^2.0.1\",\n        \"JSONStream\": \"^1.0.3\",\n        \"parents\": \"^1.0.0\",\n        \"readable-stream\": \"^2.0.2\",\n        \"resolve\": \"^1.4.0\",\n        \"stream-combiner2\": \"^1.1.1\",\n        \"subarg\": \"^1.0.0\",\n        \"through2\": \"^2.0.0\",\n        \"xtend\": \"^4.0.0\"\n      }\n    },\n    \"mproj\": {\n      \"version\": \"0.0.40\",\n      \"resolved\": \"https://registry.npmjs.org/mproj/-/mproj-0.0.40.tgz\",\n      \"integrity\": \"sha512-Fda92o5LkFUr0Tbz/5QsVhsIgbhnrnQf/eLkYRWGfKspbgvjA0VCk1FF5bT1TgpMHAP7000alBRkV7Q7hesnQg==\",\n      \"requires\": {\n        \"geographiclib\": \"1.48.0\",\n        \"rw\": \"~1.3.2\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.1.3\",\n      \"dev\": true\n    },\n    \"msgpackr\": {\n      \"version\": \"1.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/msgpackr/-/msgpackr-1.10.1.tgz\",\n      \"integrity\": \"sha512-r5VRLv9qouXuLiIBrLpl2d5ZvPt8svdQTl5/vMvE4nzDMyEX4sgW5yWhuBBj5UmgwOTWj8CIdSXn5sAfsHAWIQ==\",\n      \"requires\": {\n        \"msgpackr-extract\": \"^3.0.2\"\n      }\n    },\n    \"msgpackr-extract\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/msgpackr-extract/-/msgpackr-extract-3.0.2.tgz\",\n      \"integrity\": \"sha512-SdzXp4kD/Qf8agZ9+iTu6eql0m3kWm1A2y1hkpTeVNENutaB0BwHlSvAIaMxwntmRUAUjon2V4L8Z/njd0Ct8A==\",\n      \"optional\": true,\n      \"requires\": {\n        \"@msgpackr-extract/msgpackr-extract-darwin-arm64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-darwin-x64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-linux-arm\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-linux-arm64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-linux-x64\": \"3.0.2\",\n        \"@msgpackr-extract/msgpackr-extract-win32-x64\": \"3.0.2\",\n        \"node-gyp-build-optional-packages\": \"5.0.7\"\n      }\n    },\n    \"nanoid\": {\n      \"version\": \"3.3.3\",\n      \"dev\": true\n    },\n    \"natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true\n    },\n    \"node-gyp-build-optional-packages\": {\n      \"version\": \"5.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.0.7.tgz\",\n      \"integrity\": \"sha512-YlCCc6Wffkx0kHkmam79GKvDQ6x+QZkMjFGrIMxgFNILFvGSbCp2fCBC55pGTT9gVaz8Na5CLmxt/urtzRv36w==\",\n      \"optional\": true\n    },\n    \"normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true\n    },\n    \"object-assign\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true\n    },\n    \"object-inspect\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\"\n    },\n    \"object-keys\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true\n    },\n    \"object.assign\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.0\",\n        \"define-properties\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.1\",\n        \"object-keys\": \"^1.1.1\"\n      }\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"opn\": {\n      \"version\": \"5.5.0\",\n      \"requires\": {\n        \"is-wsl\": \"^1.1.0\"\n      }\n    },\n    \"optionator\": {\n      \"version\": \"0.9.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\",\n        \"word-wrap\": \"^1.2.3\"\n      }\n    },\n    \"os-browserify\": {\n      \"version\": \"0.3.0\",\n      \"dev\": true\n    },\n    \"p-limit\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"yocto-queue\": \"^0.1.0\"\n      }\n    },\n    \"p-locate\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-limit\": \"^3.0.2\"\n      }\n    },\n    \"pako\": {\n      \"version\": \"1.0.11\",\n      \"dev\": true\n    },\n    \"parent-module\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"callsites\": \"^3.0.0\"\n      }\n    },\n    \"parents\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-platform\": \"~0.11.15\"\n      }\n    },\n    \"parse-asn1\": {\n      \"version\": \"5.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.7.tgz\",\n      \"integrity\": \"sha512-CTM5kuWR3sx9IFamcl5ErfPl6ea/N8IYwiJ+vpeB2g+1iknv7zBl5uPwbMbRVznRVbrNY6lGuDoE5b30grmbqg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"asn1.js\": \"^4.10.1\",\n        \"browserify-aes\": \"^1.2.0\",\n        \"evp_bytestokey\": \"^1.0.3\",\n        \"hash-base\": \"~3.0\",\n        \"pbkdf2\": \"^3.1.2\",\n        \"safe-buffer\": \"^5.2.1\"\n      },\n      \"dependencies\": {\n        \"hash-base\": {\n          \"version\": \"3.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz\",\n          \"integrity\": \"sha512-EeeoJKjTyt868liAlVmcv2ZsUfGHlE3Q+BICOXcZiwN3osr5Q/zFGYmTJpoIzuaSTAwndFy+GqhEwlU4L3j4Ow==\",\n          \"dev\": true,\n          \"requires\": {\n            \"inherits\": \"^2.0.1\",\n            \"safe-buffer\": \"^5.0.1\"\n          }\n        },\n        \"safe-buffer\": {\n          \"version\": \"5.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n          \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"parse-cache-control\": {\n      \"version\": \"1.0.1\"\n    },\n    \"path-browserify\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"path-exists\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"path-key\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true\n    },\n    \"path-parse\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true\n    },\n    \"path-platform\": {\n      \"version\": \"0.11.15\",\n      \"dev\": true\n    },\n    \"pbkdf2\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"create-hash\": \"^1.1.2\",\n        \"create-hmac\": \"^1.1.4\",\n        \"ripemd160\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"sha.js\": \"^2.4.8\"\n      }\n    },\n    \"picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true\n    },\n    \"prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true\n    },\n    \"process\": {\n      \"version\": \"0.11.10\",\n      \"dev\": true\n    },\n    \"process-nextick-args\": {\n      \"version\": \"2.0.1\"\n    },\n    \"promise\": {\n      \"version\": \"8.1.0\",\n      \"requires\": {\n        \"asap\": \"~2.0.6\"\n      }\n    },\n    \"public-encrypt\": {\n      \"version\": \"4.0.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.1.0\",\n        \"browserify-rsa\": \"^4.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"parse-asn1\": \"^5.0.0\",\n        \"randombytes\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.1.2\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"dev\": true\n        }\n      }\n    },\n    \"punycode\": {\n      \"version\": \"1.4.1\",\n      \"dev\": true\n    },\n    \"qs\": {\n      \"version\": \"6.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.12.0.tgz\",\n      \"integrity\": \"sha512-trVZiI6RMOkO476zLGaBIzszOdFPnCCXHPG9kn0yuS1uz6xdVxPfZdB3vUig9pxPFDM9BRAgz/YUIVQ1/vuiUg==\",\n      \"requires\": {\n        \"side-channel\": \"^1.0.6\"\n      }\n    },\n    \"querystring\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true\n    },\n    \"querystring-es3\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true\n    },\n    \"randombytes\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"randomfill\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"randombytes\": \"^2.0.5\",\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"read-only-stream\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"readable-stream\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz\",\n      \"integrity\": \"sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==\",\n      \"requires\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"readdirp\": {\n      \"version\": \"3.6.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"picomatch\": \"^2.2.1\"\n      }\n    },\n    \"regexpp\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true\n    },\n    \"resolve\": {\n      \"version\": \"1.20.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-core-module\": \"^2.2.0\",\n        \"path-parse\": \"^1.0.6\"\n      }\n    },\n    \"resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true\n    },\n    \"rimraf\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"glob\": \"^7.1.3\"\n      }\n    },\n    \"ripemd160\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\"\n      }\n    },\n    \"robust-predicates\": {\n      \"version\": \"3.0.1\"\n    },\n    \"rollup\": {\n      \"version\": \"2.73.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"rw\": {\n      \"version\": \"1.3.3\"\n    },\n    \"safari-14-idb-fix\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/safari-14-idb-fix/-/safari-14-idb-fix-3.0.0.tgz\",\n      \"integrity\": \"sha512-eBNFLob4PMq8JA1dGyFn6G97q3/WzNtFK4RnzT1fnLq+9RyrGknzYiM/9B12MnKAxuj1IXr7UKYtTNtjyKMBog==\"\n    },\n    \"safe-buffer\": {\n      \"version\": \"5.1.2\"\n    },\n    \"safer-buffer\": {\n      \"version\": \"2.1.2\"\n    },\n    \"serialize-javascript\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"set-function-length\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.1.tgz\",\n      \"integrity\": \"sha512-j4t6ccc+VsKwYHso+kElc5neZpjtq9EnRICFZtWyBsLojhmeF/ZBd/elqm22WJh/BziDe/SBiOeAt0m2mfLD0g==\",\n      \"requires\": {\n        \"define-data-property\": \"^1.1.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.1\"\n      }\n    },\n    \"sha.js\": {\n      \"version\": \"2.4.11\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"shasum-object\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"fast-safe-stringify\": \"^2.0.7\"\n      }\n    },\n    \"shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"shebang-regex\": \"^3.0.0\"\n      }\n    },\n    \"shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true\n    },\n    \"shell-quote\": {\n      \"version\": \"1.7.4\",\n      \"dev\": true\n    },\n    \"side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"requires\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      }\n    },\n    \"simple-concat\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true\n    },\n    \"source-map\": {\n      \"version\": \"0.5.7\",\n      \"dev\": true\n    },\n    \"stream-browserify\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"~2.0.4\",\n        \"readable-stream\": \"^3.5.0\"\n      },\n      \"dependencies\": {\n        \"readable-stream\": {\n          \"version\": \"3.6.0\",\n          \"dev\": true,\n          \"requires\": {\n            \"inherits\": \"^2.0.3\",\n            \"string_decoder\": \"^1.1.1\",\n            \"util-deprecate\": \"^1.0.1\"\n          }\n        }\n      }\n    },\n    \"stream-combiner2\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"duplexer2\": \"~0.1.0\",\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"stream-http\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"builtin-status-codes\": \"^3.0.0\",\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"^3.6.0\",\n        \"xtend\": \"^4.0.2\"\n      },\n      \"dependencies\": {\n        \"readable-stream\": {\n          \"version\": \"3.6.0\",\n          \"dev\": true,\n          \"requires\": {\n            \"inherits\": \"^2.0.3\",\n            \"string_decoder\": \"^1.1.1\",\n            \"util-deprecate\": \"^1.0.1\"\n          }\n        }\n      }\n    },\n    \"stream-splicer\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"readable-stream\": \"^2.0.2\"\n      }\n    },\n    \"string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"requires\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      }\n    },\n    \"string.prototype.trimend\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\"\n      }\n    },\n    \"string.prototype.trimstart\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^5.0.1\"\n      }\n    },\n    \"strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true\n    },\n    \"subarg\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"minimist\": \"^1.1.0\"\n      }\n    },\n    \"supports-color\": {\n      \"version\": \"8.1.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^4.0.0\"\n      }\n    },\n    \"sync-request\": {\n      \"version\": \"5.0.0\",\n      \"requires\": {\n        \"http-response-object\": \"^3.0.1\",\n        \"sync-rpc\": \"^1.2.0\",\n        \"then-request\": \"^5.0.0\"\n      }\n    },\n    \"sync-rpc\": {\n      \"version\": \"1.3.6\",\n      \"requires\": {\n        \"get-port\": \"^3.1.0\"\n      }\n    },\n    \"syntax-error\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn-node\": \"^1.2.0\"\n      }\n    },\n    \"text-table\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true\n    },\n    \"then-request\": {\n      \"version\": \"5.0.0\",\n      \"requires\": {\n        \"@types/concat-stream\": \"^1.6.0\",\n        \"@types/form-data\": \"0.0.33\",\n        \"@types/node\": \"^8.0.0\",\n        \"@types/qs\": \"^6.2.31\",\n        \"caseless\": \"~0.12.0\",\n        \"concat-stream\": \"^1.6.0\",\n        \"form-data\": \"^2.2.0\",\n        \"http-basic\": \"^6.0.0\",\n        \"http-response-object\": \"^3.0.1\",\n        \"promise\": \"^8.0.0\",\n        \"qs\": \"^6.4.0\"\n      },\n      \"dependencies\": {\n        \"@types/node\": {\n          \"version\": \"8.10.59\"\n        }\n      }\n    },\n    \"through\": {\n      \"version\": \"2.3.8\",\n      \"dev\": true\n    },\n    \"through2\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"requires\": {\n        \"readable-stream\": \"~2.3.6\",\n        \"xtend\": \"~4.0.1\"\n      }\n    },\n    \"timers-browserify\": {\n      \"version\": \"1.4.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"process\": \"~0.11.0\"\n      }\n    },\n    \"tinyqueue\": {\n      \"version\": \"2.0.3\"\n    },\n    \"to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^7.0.0\"\n      }\n    },\n    \"tsscmp\": {\n      \"version\": \"1.0.6\"\n    },\n    \"tty-browserify\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true\n    },\n    \"type-check\": {\n      \"version\": \"0.4.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"prelude-ls\": \"^1.2.1\"\n      }\n    },\n    \"type-fest\": {\n      \"version\": \"0.20.2\",\n      \"dev\": true\n    },\n    \"typedarray\": {\n      \"version\": \"0.0.6\"\n    },\n    \"umd\": {\n      \"version\": \"3.0.3\",\n      \"dev\": true\n    },\n    \"unbox-primitive\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"function-bind\": \"^1.1.1\",\n        \"has-bigints\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.2\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      }\n    },\n    \"undeclared-identifiers\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn-node\": \"^1.3.0\",\n        \"dash-ast\": \"^1.0.0\",\n        \"get-assigned-identifiers\": \"^1.2.0\",\n        \"simple-concat\": \"^1.0.0\",\n        \"xtend\": \"^4.0.1\"\n      }\n    },\n    \"underscore\": {\n      \"version\": \"1.13.1\",\n      \"dev\": true\n    },\n    \"uri-js\": {\n      \"version\": \"4.4.1\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"^2.1.0\"\n      },\n      \"dependencies\": {\n        \"punycode\": {\n          \"version\": \"2.1.1\",\n          \"dev\": true\n        }\n      }\n    },\n    \"url\": {\n      \"version\": \"0.11.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"1.3.2\",\n        \"querystring\": \"0.2.0\"\n      },\n      \"dependencies\": {\n        \"punycode\": {\n          \"version\": \"1.3.2\",\n          \"dev\": true\n        }\n      }\n    },\n    \"util\": {\n      \"version\": \"0.12.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.3\",\n        \"is-arguments\": \"^1.0.4\",\n        \"is-generator-function\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.3\",\n        \"safe-buffer\": \"^5.1.2\",\n        \"which-typed-array\": \"^1.1.2\"\n      }\n    },\n    \"util-deprecate\": {\n      \"version\": \"1.0.2\"\n    },\n    \"v8-compile-cache\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true\n    },\n    \"vm-browserify\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true\n    },\n    \"which\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"isexe\": \"^2.0.0\"\n      }\n    },\n    \"which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      }\n    },\n    \"which-typed-array\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"requires\": {\n        \"available-typed-arrays\": \"^1.0.2\",\n        \"call-bind\": \"^1.0.0\",\n        \"es-abstract\": \"^1.18.0-next.1\",\n        \"foreach\": \"^2.0.5\",\n        \"function-bind\": \"^1.1.1\",\n        \"has-symbols\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.3\"\n      }\n    },\n    \"word-wrap\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n      \"dev\": true\n    },\n    \"workerpool\": {\n      \"version\": \"6.2.1\",\n      \"dev\": true\n    },\n    \"wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true\n    },\n    \"xtend\": {\n      \"version\": \"4.0.2\",\n      \"dev\": true\n    },\n    \"y18n\": {\n      \"version\": \"5.0.8\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"16.2.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"20.2.4\",\n      \"dev\": true\n    },\n    \"yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      }\n    },\n    \"yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.4697265625,
          "content": "{\n  \"name\": \"mapshaper\",\n  \"version\": \"0.6.102\",\n  \"description\": \"A tool for editing vector datasets for mapping and GIS.\",\n  \"keywords\": [\n    \"shapefile\",\n    \"topojson\",\n    \"geojson\",\n    \"cartography\",\n    \"simplification\",\n    \"topology\",\n    \"csv\",\n    \"gis\"\n  ],\n  \"author\": \"Matthew Bloch <masiyou@gmail.com>\",\n  \"contributors\": [],\n  \"license\": \"MPL-2.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mbloch/mapshaper.git\"\n  },\n  \"engines\": {\n    \"node\": \">=12.0.0\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha test\",\n    \"build\": \"rollup --config\",\n    \"lint\": \"eslint --ext mjs src/\",\n    \"prepublishOnly\": \"npm lint; npm test; ./pre-publish\",\n    \"postpublish\": \"./release_web_ui; ./release_github_version\",\n    \"browserify\": \"browserify -r sync-request -r mproj -r buffer -r iconv-lite -r fs -r flatbush -r rw -r path -r kdbush -r @tmcw/togeojson -r @placemarkio/tokml -r 'idb-keyval' -o www/modules.js\",\n    \"dev\": \"rollup --config --watch\"\n  },\n  \"main\": \"./mapshaper.js\",\n  \"files\": [\n    \"/bin/**\",\n    \"/www/**\",\n    \"!/www/nacis/**\",\n    \"/mapshaper.js\",\n    \"!.DS_Store\"\n  ],\n  \"dependencies\": {\n    \"@placemarkio/tokml\": \"^0.3.3\",\n    \"@tmcw/togeojson\": \"^5.6.0\",\n    \"@xmldom/xmldom\": \"^0.8.6\",\n    \"adm-zip\": \"^0.5.9\",\n    \"commander\": \"7.0.0\",\n    \"cookies\": \"^0.8.0\",\n    \"d3-color\": \"3.1.0\",\n    \"d3-interpolate\": \"^3.0.1\",\n    \"d3-scale-chromatic\": \"3.0.0\",\n    \"delaunator\": \"^5.0.0\",\n    \"fflate\": \"^0.7.4\",\n    \"flatbush\": \"^3.2.1\",\n    \"geokdbush\": \"^1.1.0\",\n    \"iconv-lite\": \"^0.6.3\",\n    \"idb-keyval\": \"^6.2.0\",\n    \"kdbush\": \"^3.0.0\",\n    \"mproj\": \"0.0.40\",\n    \"msgpackr\": \"^1.10.1\",\n    \"opn\": \"^5.3.0\",\n    \"rw\": \"~1.3.3\",\n    \"sync-request\": \"5.0.0\",\n    \"tinyqueue\": \"^2.0.3\"\n  },\n  \"devDependencies\": {\n    \"@rollup/plugin-json\": \"^6.0.1\",\n    \"@rollup/plugin-node-resolve\": \"^13.3.0\",\n    \"browserify\": \"^17.0.0\",\n    \"csv-spectrum\": \"^1.0.0\",\n    \"eslint\": \"^8.16.0\",\n    \"mocha\": \"^10.2.0\",\n    \"rollup\": \"^2.73.0\",\n    \"shell-quote\": \"^1.7.4\",\n    \"underscore\": \"^1.13.1\"\n  },\n  \"mocha\": {\n    \"reporter\": \"dot\",\n    \"node-option\": [\n      \"experimental-loader=./test/_loader.js\"\n    ],\n    \"check-leaks\": true,\n    \"parallel\": true,\n    \"jobs\": 4\n  },\n  \"bin\": {\n    \"mapshaper\": \"bin/mapshaper\",\n    \"mapshaper-gui\": \"bin/mapshaper-gui\",\n    \"mapshaper-xl\": \"bin/mapshaper-xl\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/mbloch/mapshaper/issues\"\n  },\n  \"homepage\": \"https://github.com/mbloch/mapshaper#readme\",\n  \"directories\": {\n    \"test\": \"test\"\n  }\n}\n"
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.8076171875,
          "content": "import { nodeResolve } from '@rollup/plugin-node-resolve';\nimport json from '@rollup/plugin-json';\n\nconst onBundle = {\n  name: 'onbundle',\n  writeBundle() {\n    // copy mapshaper.js to www/\n    const fs = require('fs');\n    const path = require('path');\n    const src = path.join(__dirname, 'mapshaper.js');\n    const dest = path.join(__dirname, 'www/mapshaper.js');\n    fs.writeFileSync(dest, fs.readFileSync(src));\n  }\n};\n\nexport default [{\n  treeshake: false,\n  input: 'src/gui/gui.mjs',\n  output: [{\n    strict: false,\n    format: 'iife',\n    file: 'www/mapshaper-gui.js'\n  }]\n}, {\n  treeshake: true,\n  context: 'null', // prevent a Rollup warning from msgpack\n  input: 'src/mapshaper.mjs',\n  output: [{\n    strict: false,\n    format: 'iife',\n    file: 'mapshaper.js'\n  }],\n  plugins: [onBundle, nodeResolve(), json()]\n}];\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}