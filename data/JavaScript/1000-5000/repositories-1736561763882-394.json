{
  "metadata": {
    "timestamp": 1736561763882,
    "page": 394,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "BoxFactura/pulltorefresh.js",
      "stars": 3981,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": "dist\nsrc/demos\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.7470703125,
          "content": "{\n  \"env\": {\n    \"es6\": true,\n    \"node\": true,\n    \"browser\": true\n  },\n  \"extends\": \"airbnb-base\",\n  \"parserOptions\": {\n    \"sourceType\": \"module\"\n  },\n  \"rules\" : {\n    \"max-len\": [\"error\", {\n      \"code\": 150\n    }],\n    \"arrow-parens\": [\"error\", \"as-needed\"],\n    \"no-multi-assign\": 0,\n    \"strict\": 0,\n    \"no-console\": 0,\n    \"prefer-destructuring\": 0,\n    \"function-paren-newline\": 0,\n    \"global-require\": 0,\n    \"prefer-spread\": 0,\n    \"prefer-rest-params\": 0,\n    \"prefer-arrow-callback\": 0,\n    \"arrow-body-style\": 0,\n    \"no-restricted-globals\": 0,\n    \"consistent-return\": 0,\n    \"no-param-reassign\": 0,\n    \"no-underscore-dangle\": 0,\n    \"import/no-unresolved\": 0,\n    \"import/no-dynamic-require\": 0,\n    \"import/no-extraneous-dependencies\": 0\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "package-lock.json -diff\n*.min.js -diff\n*.map -diff\ndist -diff\ndemos -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0625,
          "content": "*.log\n.DS_Store\nnode_modules\nbower_components\npackage-lock.json\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2016 Box Factura\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.09375,
          "content": "test: deps\n\t@npm test\n\ndeps:\n\t@(((ls node_modules | grep .) > /dev/null 2>&1) || npm i) || true\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.109375,
          "content": "![PulltoRefresh.js](img/pulltorefresh.gif)\n\n[![Build Status](https://github.com/BoxFactura/pulltorefresh.js/workflows/build/badge.svg)](https://github.com/BoxFactura/pulltorefresh.js/actions)\n[![NPM version](https://badge.fury.io/js/pulltorefreshjs.svg)](http://badge.fury.io/js/pulltorefreshjs)\n[![CDNJS](https://img.shields.io/cdnjs/v/pulltorefreshjs.svg)](https://cdnjs.com/libraries/pulltorefreshjs)\n\n[**PulltoRefresh.js**](http://www.boxfactura.com/pulltorefresh.js/) • [Demos](http://www.boxfactura.com/pulltorefresh.js/demos/basic.html)\n\nA small, but powerful Javascript library crafted to power your webapp's pull to refresh feature. No markup needed, highly customizable and dependency-free!\n\n---\n\n## Donations\n\nIf you found this project useful, please consider making a donation.\n\n[![](https://www.paypalobjects.com/en_US/MX/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WYS5CSZWWLNN4)\n\n\n## Installation\n\nDownload PulltoRefresh either from the [NPM Registry](https://www.npmjs.com/package/pulltorefreshjs), [CDNJS](https://cdnjs.com/libraries/pulltorefreshjs) or [UNPKG](https://unpkg.com/pulltorefreshjs):\n\n```bash\n$ npm install pulltorefreshjs --save-dev\n$ wget -O pulltorefresh.js https://unpkg.com/pulltorefreshjs\n```\n\nInclude the JS file in your webapp and initialize it:\n\n```js\nconst ptr = PullToRefresh.init({\n  mainElement: 'body',\n  onRefresh() {\n    window.location.reload();\n  }\n});\n```\n\nBundlers can consume `pulltorefreshjs` as CommonJS and ES6-modules syntax:\n\n```js\nimport PullToRefresh from 'pulltorefreshjs';\n// or\nconst PullToRefresh = require('pulltorefreshjs');\n```\n\nAPI\n---\n\n- **`init(options)`**\n  Will return a unique ptr-instance with a `destroy()` method.\n- **`destroyAll()`**\n  Stop and remove all registered ptr-instances.\n- **`setPassiveMode(isPassive)`**\n  Enable or disable passive mode for event handlers (new instances only).\n\n## Options\n\n- **`distThreshold`** (integer)\n  Minimum distance required to trigger the refresh.\n  <br />&mdash; Defaults to `60`\n- **`distMax`** (integer)\n  Maximum distance possible for the element.\n  <br />&mdash; Defaults to `80`\n- **`distReload`** (integer)\n  After the `distThreshold` is reached and released, the element will have this height.\n  <br />&mdash; Defaults to `50`\n- **`distIgnore`** (integer)\n  After which distance should we start pulling?\n  <br />&mdash; Defaults to `0`\n- **`mainElement`** (string)\n  Before which element the pull to refresh elements will be?\n  <br />&mdash; Defaults to `body`\n- **`triggerElement`** (string)\n  Which element should trigger the pull to refresh?\n  <br />&mdash; Defaults to `body`\n- **`ptrElement`** (string)\n  Which class will the main element have?\n  <br />&mdash; Defaults to `.ptr`\n- **`classPrefix`** (string)\n  Which class prefix for the elements?\n  <br />&mdash; Defaults to `ptr--`\n- **`cssProp`** (string)\n  Which property will be used to calculate the element's proportions?\n  <br />&mdash; Defaults to `min-height`\n- **`iconArrow`** (string)\n  The icon for both `instructionsPullToRefresh` and `instructionsReleaseToRefresh`\n  <br />&mdash; Defaults to `&#8675;`\n- **`iconRefreshing`** (string)\n  The icon when the refresh is in progress.\n  <br />&mdash; Defaults to `&hellip;`\n- **`instructionsPullToRefresh`** (string)\n  The initial instructions string.\n  <br />&mdash; Defaults to `Pull down to refresh`\n- **`instructionsReleaseToRefresh`** (string)\n  The instructions string when the `distThreshold` has been reached.\n  <br />&mdash; Defaults to `Release to refresh`\n- **`instructionsRefreshing`** (string)\n  The refreshing text.\n  <br />&mdash; Defaults to `Refreshing`\n- **`refreshTimeout`** (integer)\n  The delay, in milliseconds before the `onRefresh` is triggered.\n  <br />&mdash; Defaults to `500`\n- **`getMarkup`** (function)\n  It returns the default HTML for the widget, `__PREFIX__` is replaced.\n  <br />&mdash; See [src/lib/markup.js](src/lib/markup.js)\n- **`getStyles`** (function)\n  It returns the default CSS for the widget, `__PREFIX__` is replaced.\n  <br />&mdash; See [src/lib/styles.js](src/lib/styles.js)\n- **`onInit`** (function)\n  The initialize function.\n- **`onRefresh`** (function)\n  What will the pull to refresh trigger? You can return a promise.\n  <br />&mdash; Defaults to `window.location.reload()`\n- **`resistanceFunction`** (function)\n  The resistance function, accepts one parameter, must return a number, capping at 1.\n  <br />&mdash; Defaults to `t => Math.min(1, t / 2.5)`\n- **`shouldPullToRefresh`** (function)\n  Which condition should be met for pullToRefresh to trigger?\n  <br />&mdash; Defaults to `!window.scrollY` • Please note that this default is useful whenever you're setting mainElement as the body of the document, if you need it in another element with overflow, use `!this.mainElement.scrollTop`. Refer to the [multiple instances demo](https://www.boxfactura.com/pulltorefresh.js/demos/multiple.html) for reference.\n\n## Use with React\n\nWith [ReactDOMServer](https://reactjs.org/docs/react-dom-server.html) and `renderToString()` you can use components as\nicons instead of just strings.\nIn this example we also use [Font Awesome](https://fontawesome.com/how-to-use/on-the-web/using-with/react) to get nice icons with animation, but you can\nuse any React component you like.\n\n[Demo on codesandbox.io](https://codesandbox.io/s/21o9z8rrzy)\n\n```jsx harmony\n\nimport React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport PullToRefresh from 'pulltorefreshjs';\nimport { faSyncAlt} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass App extends Component\n{\n    componentDidMount()\n    {\n        PullToRefresh.init({\n            mainElement: 'body',\n            onRefresh() {\n                window.location.reload();\n            },\n            iconArrow: ReactDOMServer.renderToString(\n                <FontAwesomeIcon icon={faSyncAlt} />\n            ),\n            iconRefreshing: ReactDOMServer.renderToString(\n                <FontAwesomeIcon icon={faSyncAlt} spin={true} />\n            ),\n        });\n    }\n\n    componentWillUnmount()\n    {\n        // Don't forget to destroy all instances on unmout\n        // or you will get some glitches.\n        PullToRefresh.destroyAll();\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>App</h1>\n            </div>\n        );\n    }\n}\n\nexport default App;\n```\n\n## Contribute\n\nTo quickly start the development workflow:\n\n1. Install NodeJS ([NVM](https://github.com/creationix/nvm/blob/master/nvm.sh))\n2. Run `nvm use 10 && npm install`\n3. Then `npm run dev`\n\n> This will watch and compile the bundle for browser usage.\n\nE2E tests are executed with Testcafé.\n\n- Run `npm test` to fire tests in the default browser, use `BROWSER` to change this\n- ...or just run `make` to setup the dependencies and run tests only (e.g. CI)\n\nAdvanced debug can be achieved with `testcafe-live`, e.g.\n\n```bash\n$ npm test --live chrome tests/e2e/cases --debug-on-fail\n```\n\n## Roadmap\n\n- [ ] More events: `onPullStart`, `onPullDown(direction, willRefresh)`, `onRelease(willRefresh)`\n- [ ] Fully customizable CSS\n- [ ] Gallery of use cases\n- [ ] Advanced demos\n- [x] Tests\n- [x] Minified releases\n"
        },
        {
          "name": "contributors.txt",
          "type": "blob",
          "size": 0.1123046875,
          "content": "# git shortlog -sn\n\n    36\tAlvaro Cabrera\n    19\tRafael Soto\n     2\tDoug DeBold\n     1\tJoe Callon\n     1\tTony Brix\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.568359375,
          "content": "{\n  \"name\": \"pulltorefreshjs\",\n  \"version\": \"0.1.22\",\n  \"description\": \"Pull To Refresh\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.esm.js\",\n  \"browser\": \"dist/index.umd.js\",\n  \"scripts\": {\n    \"lint\": \"eslint src\",\n    \"build:browser\": \"bili src/lib/index.js --banner --minimal --format umd --format umd-min --module-name PullToRefresh\",\n    \"build:nodejs\": \"bili src/lib/index.js --minimal --format es --format cjs --module-name PullToRefresh\",\n    \"build:styles\": \"lessc src/style.less demos/style.css -x --source-map-inline\",\n    \"build:demos\": \"pug src/demos --pretty --out demos && pug src/index.pug --pretty --out demos\",\n    \"build:test\": \"npm run build:styles && npm run build:demos && cp dist/*.min* demos\",\n    \"build:lib\": \"npm run build:browser && npm run build:nodejs\",\n    \"build\": \"npm run build:lib && npm run build:test\",\n    \"serve\": \"live-server demos\",\n    \"watch\": \"npm run build:browser -- -w\",\n    \"dev\": \"npm run serve & npm run watch\",\n    \"prepublish\": \"npm run build:lib\",\n    \"pretest\": \"npm run lint && NODE_ENV=test npm run build --\",\n    \"posttest\": \"git checkout -- demos dist\",\n    \"test\": \"testcafe ${BROWSER:-chrome:headless} -a 'npm run serve -- --no-browser' tests/e2e/cases\"\n  },\n  \"files\": [\n    \"dist/*.js\"\n  ],\n  \"author\": \"Rafael Soto\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"bili\": \"^4.8.1\",\n    \"eslint\": \"^6.1.0\",\n    \"eslint-config-airbnb-base\": \"^14.0.0\",\n    \"eslint-plugin-import\": \"^2.18.2\",\n    \"eslint-utils\": \">=1.4.1\",\n    \"less\": \"^3.8.1\",\n    \"live-server\": \"^1.2.1\",\n    \"pug-cli\": \"^1.0.0-alpha6\",\n    \"testcafe\": \"1.18.6\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}