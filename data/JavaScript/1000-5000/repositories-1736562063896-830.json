{
  "metadata": {
    "timestamp": 1736562063896,
    "page": 830,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "babel/babel-sublime",
      "stars": 3256,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".DS_Store\n"
        },
        {
          "name": "Default.sublime-keymap",
          "type": "blob",
          "size": 3.259765625,
          "content": "[\n\t// Auto-pair backticks\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`$0`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[`a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.template\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`${0:$SELECTION}`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\n\t// Auto-pair interpolation\n\t{ \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{$0}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js string.template.js - meta.template.expression.js\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\$$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"$\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\\${${0:$SELECTION}}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js string.template.js - meta.template.expression.js\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\n\t// JSX close tag (inside JSX)\n\t{ \"keys\": [\"/\"], \"command\": \"close_tag\", \"args\": { \"insert_slash\": true }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js meta.jsx.js - meta.embedded.expression - string - comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \".*<$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_close_tags\" }\n\t\t]\n\t},\n\t// JSX close tag (outer-most tag)\n\t{ \"keys\": [\"/\"], \"command\": \"close_tag\", \"args\": { \"insert_slash\": true }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"source.js - string - comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*<$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_close_tags\" }\n\t\t]\n\t}\n]\n"
        },
        {
          "name": "JavaScript (Babel).sublime-syntax",
          "type": "blob",
          "size": 92.4814453125,
          "content": "%YAML 1.2\n---\nfirst_line_match: |-\n  (?xi:\n    ^ \\s* // .*? -\\*- .*? \\bjsx\\b .*? -\\*-  # editorconfig\n  )\ncontexts:\n  export-brace:\n    - meta_scope: meta.block.js\n    - include: comma-separator\n    - match: \\}\n      scope: punctuation.section.block.end.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: variable.other.readwrite.js\n      push: import-export-alias\n    - match: \\*\n      scope: constant.other.js\n      push: import-export-alias\n    - include: else-pop\n\n  variable-binding-pattern:\n    - match: ''\n      set:\n        -   - include: flow-type-annotation\n        -   - include: variable-binding-name\n            - include: variable-binding-array-destructuring\n            - include: variable-binding-object-destructuring\n            - include: else-pop\n\n  flow-type-module-meta:\n    - meta_scope: meta.module.js\n    - include: immediately-pop\n\n  object-property-base:\n    - match: '{{dollar_only_identifier}}'\n      scope: meta.property.object.dollar.only.js punctuation.dollar.js\n      pop: 1\n    - match: '{{dollar_identifier}}'\n      scope: meta.property.object.dollar.js\n      captures:\n        1: punctuation.dollar.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: meta.property.object.js\n      pop: 1\n    - match: '{{identifier_part}}+{{identifier_break}}'\n      scope: invalid.illegal.illegal-identifier.js\n      pop: 1\n    - match: (#)({{identifier_name}})\n      captures:\n        1: punctuation.definition.variable.js\n        2: meta.property.object.js\n      pop: 1\n\n  regexp-complete:\n    - match: /\n      scope: punctuation.definition.string.begin.js\n      set: regexp\n\n  flow-type-tuple:\n    - match: \\[\n      scope: punctuation.section.brackets.begin.js\n      set:\n        - meta_scope: meta.sequence.js\n        - match: \\]\n          scope: punctuation.section.brackets.end.js\n          pop: true\n        - include: flow-type-list\n\n  support-property-node-module:\n    - match: (?:children|exports|filename|id|loaded|parent|paths){{identifier_break}}\n      scope: support.constant.node.js\n      pop: 1\n    - match: require{{identifier_break}}\n      scope: support.function.node.js\n      pop: 1\n\n  expression-end-no-comma:\n    - match: (?=,)\n      pop: 1\n    - include: expression-end\n\n  block-scope:\n    - include: block\n    - include: else-pop\n\n  import-item:\n    - include: flow-type-import-type\n\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set: import-brace\n    - match: '{{non_reserved_identifier}}'\n      scope: variable.other.readwrite.js\n      pop: 1\n    - match: \\*\n      scope: constant.other.js\n      pop: 1\n    - include: else-pop\n\n  await-expression:\n    - match: await{{identifier_break}}\n      scope: keyword.control.flow.await.js\n\n  flow-type-import-type:\n    - match: type{{identifier_break}}\n      scope: keyword.declaration.js\n\n    - match: typeof{{identifier_break}}\n      scope: keyword.operator.js\n\n  arrow-function-expect-arrow-or-fail-async:\n    - match: =>\n      scope: keyword.declaration.function.arrow.js\n      pop: 1\n    - match: (?=\\S)\n      fail: async-arrow-function\n\n  support:\n    - include: support-variable-ecma\n    - include: support-variable-console\n    - include: support-variable-dom\n    - include: support-variable-node\n\n  styled-components:\n    - match: (?=(?:styled|css|createGlobalStyle|injectGlobal){{identifier_break}})\n      set:\n        - styled-component-end\n        - styled-component-begin\n    - match: (?=keyframes{{identifier_break}})\n      set:\n        - styled-component-keyframes-end\n        - styled-component-begin\n  function-parameter-binding-name:\n    - match: '{{dollar_identifier}}'\n      scope: meta.binding.name.js variable.parameter.function.js\n      captures:\n        1: punctuation.dollar.js\n    - match: '{{non_reserved_identifier}}'\n      scope: meta.binding.name.js variable.parameter.function.js\n    - match: '{{identifier_name}}'\n      scope: invalid.illegal.identifier.js meta.binding.name.js variable.parameter.function.js\n\n  flow-type-typeof:\n    - match: typeof{{identifier_break}}\n      scope: keyword.operator.js\n      set:\n        - left-expression-end\n        - expression-begin\n\n  new-target:\n    - match: \\.\n      scope: punctuation.accessor.dot.js\n      set:\n        - match: target{{identifier_break}}\n          scope: variable.language.target.js\n          pop: 1\n        - include: else-pop\n\n    - include: else-pop\n\n  async-arrow-function:\n    - match: async{{identifier_break}}\n      scope: keyword.declaration.async.js\n      set:\n        - function-meta\n        - arrow-function-expect-body\n        - arrow-function-expect-arrow-or-fail-async\n        - arrow-function-expect-parameters\n\n  expression-statement-end:\n    - match: '{{line_ending_ahead}}'\n      branch_point: expression-statement-continuation\n      branch:\n        - expression-statement-continuation\n        - expression-statement-pop\n    - include: expression-end\n\n  arrow-function-declaration:\n    - meta_include_prototype: false\n    - match: ''\n      set:\n        - function-meta\n        - arrow-function-expect-body\n        - arrow-function-expect-arrow\n        - flow-arrow-function-return-type-annotation\n        - arrow-function-expect-parameters\n        - flow-type-generic-parameters\n\n  line-comment-double-slash-body:\n    - meta_include_prototype: false\n    - meta_scope: comment.line.double-slash.js\n    - include: line-comment-end\n\n  catch-binding:\n    - match: \\(\n      scope: punctuation.section.group.begin.js\n      set:\n        - catch-binding-end\n        - variable-binding-pattern\n    - include: else-pop\n\n  object-literal-meta-key:\n    - meta_scope: meta.mapping.key.js\n    - include: else-pop\n\n  class-name:\n    - match: '{{non_reserved_identifier}}'\n      scope: entity.name.class.js\n      set: flow-type-generic-parameters\n    - include: else-pop\n\n  import-expression-end:\n    - match: (?=\\()\n      set: function-call-arguments\n    - match: '{{dot_accessor}}'\n      scope: punctuation.accessor.js\n      set:\n        - match: meta{{identifier_break}}\n          scope: variable.language.import.js\n          pop: 1\n        - include: object-property\n    - include: else-pop\n  expect-label:\n    - meta_include_prototype: false\n    - match: (?={{nothing}}{{identifier_name}})\n      set:\n        - match: '{{non_reserved_identifier}}'\n          scope: variable.label.js\n          pop: 1\n        - match: '{{identifier_name}}'\n          scope: invalid.illegal.identifier.js variable.label.js\n          pop: 1\n        - include: else-pop\n    - include: immediately-pop\n\n  special-name:\n    - match: true{{identifier_break}}\n      scope: constant.language.boolean.true.js\n      pop: 1\n    - match: false{{identifier_break}}\n      scope: constant.language.boolean.false.js\n      pop: 1\n    - match: null{{identifier_break}}\n      scope: constant.language.null.js\n      pop: 1\n    - match: super{{identifier_break}}\n      scope: variable.language.super.js\n      pop: 1\n    - match: this{{identifier_break}}\n      scope: variable.language.this.js\n      pop: 1\n\n  class-body:\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set: class-body-contents\n\n    - include: else-pop\n\n  constructor:\n    - match: new{{identifier_break}}\n      scope: keyword.operator.word.new.js\n      set:\n        - match: (?=\\s*\\.)\n          set: new-target\n        - match: (?=\\s*\\S)\n          set:\n            - constructor-meta\n            - constructor-body-expect-arguments\n            - constructor-body-expect-class-end\n            - constructor-body-expect-class-begin\n\n  flow-type-meta:\n    - meta_scope: meta.flow-type.js\n    - include: immediately-pop\n\n  immediately-pop:\n    - match: ''\n      pop: 1\n\n  variable-binding-array-destructuring:\n    - match: \\[\n      scope: punctuation.section.sequence.begin.js\n      set:\n        - meta_scope: meta.binding.destructuring.sequence.js\n        - match: \\]\n          scope: punctuation.section.sequence.end.js\n          pop: 1\n        - include: variable-binding-spread\n        - include: variable-binding-list\n\n  class-element-modifier:\n    - match: '{{modifier}}'\n      scope: storage.modifier.js\n      set:\n        - match: (?={{class_element_name}}|\\*)\n          pop: 1\n        - match: (?=\\S)\n          fail: class-element-modifier\n\n  comments:\n    - include: line-comments\n    - include: block-comments\n\n  initializer:\n    - match: '='\n      scope: keyword.operator.assignment.js\n      set: expression-no-comma\n    - include: else-pop\n\n  flow-type-module-body:\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set: flow-type-module-contents\n    - include: else-pop\n\n  expression-statement-continuation:\n    - match: (?=\\+\\+|--)\n      fail: expression-statement-continuation\n    - match: |-\n        (?x)\n        (?=\n          !=\n        | [-+*/%><=&|^\\[(;,.:?]\n        | (?:in|instanceof){{identifier_break}}\n        )\n      pop: 1\n    - match: (?=\\S)\n      fail: expression-statement-continuation\n\n  support-property-ecma-typedarray:\n    - match: (?:BYTES_PER_ELEMENT){{identifier_break}}\n      scope: support.constant.builtin.js\n      pop: 1\n\n  variable-binding-object-alias:\n    - match: ':'\n      scope: punctuation.separator.key-value.js\n      set: variable-binding-pattern\n    - include: else-pop\n\n  constructor-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.function-call.constructor.js\n    - include: immediately-pop\n\n  variable-binding-name:\n    - match: (?={{non_reserved_identifier}})\n      set:\n        -   - meta_scope: meta.binding.name.js\n            - include: immediately-pop\n        - literal-variable\n\n  else-pop-2:\n    - match: (?=\\S)\n      pop: 2\n\n  jsx-tag-name:\n    - meta_include_prototype: false\n    - match: ''\n      set:\n        - jsx-tag-name-meta\n        - jsx-tag-name-end\n        - jsx-tag-name-component-possibly-native\n\n  static-block:\n    - match: static{{identifier_break}}\n      scope: storage.modifier.js\n      set:\n        - match: \\{\n          scope: punctuation.section.block.begin.js\n          set: static-block-body\n        - match: (?=\\S)\n          fail: static-block\n\n  function-parameter-binding-spread:\n    - match: \\.\\.\\.\n      scope: keyword.operator.spread.js\n      push: function-parameter\n\n  expression-list:\n    - include: expression-break\n    - include: comma-separator\n    - match: (?=\\S)\n      push: expression-no-comma\n\n  jsx-html-escapes:\n    - match: (&)#?[[:alnum:]]+(;)\n      scope: constant.character.escape.js\n      captures:\n        1: punctuation.definition.entity.js\n        2: punctuation.definition.entity.js\n\n  catch-binding-end:\n    - meta_scope: meta.group.js\n    - match: \\)\n      scope: punctuation.section.group.end.js\n      pop: 1\n\n  variable-declaration:\n    - match: (?:const|let|var){{identifier_break}}\n      scope: keyword.declaration.js\n      set:\n        - expect-semicolon\n        - variable-binding-list-top\n        - variable-binding-top\n\n  method-name:\n    - match: '{{dollar_identifier}}'\n      scope: meta.mapping.key.dollar.js entity.name.function.js\n      captures:\n        1: punctuation.dollar.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: entity.name.function.js\n      pop: 1\n    - match: (#){{identifier_name}}\n      scope: entity.name.function.js\n      captures:\n        1: punctuation.definition.js\n      pop: 1\n    - match: \"'\"\n      scope: punctuation.definition.string.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: meta.string.js string.quoted.single.js\n        - meta_content_scope: entity.name.function.js\n        - match: \\'\n          scope: punctuation.definition.string.end.js\n          pop: 1\n        - match: \\n\n          scope: invalid.illegal.newline.js\n          pop: 1\n        - include: string-content\n    - match: '\"'\n      scope: punctuation.definition.string.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: meta.string.js string.quoted.double.js\n        - meta_content_scope: entity.name.function.js\n        - match: \\\"\n          scope: punctuation.definition.string.end.js\n          pop: 1\n        - match: \\n\n          scope: invalid.illegal.newline.js\n          pop: 1\n        - include: string-content\n\n    - include: computed-property-name\n\n    - include: else-pop\n\n  flow-type-object-indexer-label:\n    - match: ({{non_reserved_identifier}})\\s*(:)\n      captures:\n        1: meta.object-literal.key.js\n        2: punctuation.separator.key-value.js\n      pop: true\n    - include: else-pop\n\n  postfix-operators:\n    - match: --\n      scope: keyword.operator.arithmetic.js\n    - match: \\+\\+\n      scope: keyword.operator.arithmetic.js\n\n  function-parameter-binding-object-destructuring:\n    - match: \\{\n      scope: punctuation.section.mapping.begin.js\n      set:\n        - meta_scope: meta.binding.destructuring.mapping.js\n        - match: ','\n          scope: punctuation.separator.parameter.function.js\n        - match: \\}\n          scope: punctuation.section.mapping.end.js\n          pop: 1\n        - include: function-parameter-binding-spread\n        - match: (?={{identifier_start}}|\\[|'|\")\n          push:\n            - initializer\n            - function-parameter-binding-object-alias\n            - object-literal-meta-key\n            - function-parameter-binding-object-key\n\n  flow-arrow-return-type:\n    - match: ''\n      push:\n        - flow-detect-arrow-after-return-type\n        - flow-arrow-function-return-type-annotation\n\n  support-property-ecma-bigint:\n    - match: (?:asUintN|asIntN){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  export-statement:\n    - match: export{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set:\n        - export-meta\n        - export-extended\n\n  for-of-rest:\n    - match: (?:of|in){{identifier_break}}\n      scope: keyword.operator.word.js\n      set: expression\n\n  class-field-check:\n    - match: (?=[(<])\n      fail: class-field\n    - include: else-pop\n\n  import-brace:\n    - include: flow-type-import-type\n\n    - meta_scope: meta.block.js\n    - include: comma-separator\n    - match: \\}\n      scope: punctuation.section.block.end.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: variable.other.readwrite.js\n      push: import-export-alias\n    - match: \\*\n      scope: constant.other.js\n      push: import-export-alias\n    - include: else-pop\n\n  import-export-alias:\n    - match: as{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set:\n        - match: default{{identifier_break}}\n          scope: keyword.control.import-export.js\n          pop: 1\n        - match: '{{identifier_name}}'\n          scope: variable.other.readwrite.js\n          pop: 1\n        - include: literal-string\n        - include: else-pop\n    - include: else-pop\n\n  flow-type-special:\n    - match: any{{identifier_break}}\n      scope: support.type.any.js\n      pop: true\n\n    - match: mixed{{identifier_break}}\n      scope: support.type.mixed.js\n      pop: true\n\n  left-expression-end:\n    - include: expression-break\n\n    - match: (?=`)\n      push: literal-string-template\n\n    - match: (?=(?:{{dot_accessor}})?\\()\n      push: function-call-arguments\n\n    - include: property-access\n\n    - include: else-pop\n\n  do-while-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.do-while.js\n    - include: immediately-pop\n\n  function-declaration:\n    - match: ''\n      set:\n        - function-meta\n        - function-declaration-expect-body\n        - flow-type-annotation\n        - function-declaration-expect-parameters\n        - flow-type-generic-parameters\n        - function-declaration-expect-name\n        - function-declaration-expect-generator-star\n        - function-declaration-expect-function-keyword\n        - function-declaration-expect-async\n\n    - match: extends{{identifier_break}}\n      scope: storage.modifier.extends.js\n      set:\n        - inherited-class-expression-end\n        - inherited-class-expression-begin\n    - include: else-pop\n\n  function-parameter:\n    - match: ''\n      set:\n        - initializer\n        - function-parameter-binding-pattern\n\n  flow-arrow-function-return-type-annotation:\n    - match: ':'\n      scope: punctuation.separator.type.js\n      set:\n        - flow-type-meta\n        - flow-type-end-no-arrow\n        - flow-type-begin\n    - match: (?!\\s*(?:$|:|//|/\\*))\n      pop: true\n\n  expression-statement:\n    - match: (?=\\S)\n      set:\n        - expect-semicolon\n        - expression-statement-end\n        - expression-begin\n\n  flow-type-object:\n    - match: \\{\\|\n      scope: punctuation.section.block.begin.js\n      set:\n        - meta_scope: meta.type.object.exact.js\n        - match: \\|\\}\n          scope: punctuation.section.block.end.js\n          pop: true\n        - include: flow-type-object-contents\n\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set:\n        - meta_scope: meta.type.object.js\n        - match: \\}\n          scope: punctuation.section.block.end.js\n          pop: true\n        - include: flow-type-object-contents\n\n  detect-arrow:\n    - match: (?==>)\n      fail: arrow-function\n    - include: else-pop\n\n  prefixed-method:\n    - match: (?:get|set){{identifier_break}}\n      scope: storage.type.accessor.js\n      set:\n        - meta_scope: meta.function.js\n        - match: (?={{class_element_name}})\n          set: method-declaration\n        - match: (?=\\S)\n          fail: prefixed-method\n    - match: (?:async){{identifier_break}}\n      scope: keyword.declaration.async.js\n      set:\n        - meta_scope: meta.function.js\n        - match: (?=\\*|{{class_element_name}})\n          set: method-declaration\n        - match: (?=\\S)\n          fail: prefixed-method\n\n  builtin-console-properties:\n    - match: (?:warn|info|log|error|time|timeEnd|assert|count|dir|group|groupCollapsed|groupEnd|profile|profileEnd|table|trace|timeStamp){{identifier_break}}\n      scope: support.function.console.js\n      pop: 1\n    - include: object-property\n\n  support-property-ecma:\n    - match: constructor{{identifier_break}}\n      scope: variable.language.constructor.js\n      pop: 1\n    - match: prototype{{identifier_break}}\n      scope: support.constant.prototype.js\n      pop: 1\n\n    - match: (?:hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|toString|valueOf){{identifier_break}}\n      scope: support.function.js\n      pop: 1\n\n    # Annex B\n    - match: __proto__{{identifier_break}}\n      scope: invalid.deprecated.js variable.language.prototype.js\n      pop: 1\n    - match: (?:__defineGetter__|__defineSetter__|__lookupGetter__){{identifier_break}}\n      scope: invalid.deprecated.js support.function.js\n      pop: 1\n\n  literal-variable-base:\n    - match: '{{dollar_only_identifier}}'\n      scope: variable.other.dollar.only.js punctuation.dollar.js\n      pop: 1\n    - match: '{{dollar_identifier}}'\n      scope: variable.other.dollar.js\n      captures:\n        1: punctuation.dollar.js\n      pop: 1\n    - match: '{{constant_identifier}}'\n      scope: variable.other.constant.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: variable.other.readwrite.js\n      pop: 1\n    - include: literal-private-variable\n\n  import-list:\n    - match: ','\n      scope: punctuation.separator.comma.js\n      push:\n        - import-export-alias\n        - import-item\n    - include: else-pop\n\n  literal-number:\n    # floats\n    - match: |-\n        (?x:\n          # 1., 1.1, 1.1e1, 1.1e-1, 1.e1, 1.e-1 | 1e1, 1e-1\n          {{dec_integer}} (?: (\\.) {{dec_digit}}* (?:{{dec_exponent}})? | {{dec_exponent}} )\n          # .1, .1e1, .1e-1\n          | (\\.) {{dec_digit}}+ (?:{{dec_exponent}})?\n        ){{identifier_break}}\n      scope: meta.number.float.decimal.js constant.numeric.value.js\n      captures:\n        1: punctuation.separator.decimal.js\n        2: punctuation.separator.decimal.js\n      pop: 1\n\n    # integers\n    - match: (0)({{dec_digit}}+){{identifier_break}}\n      scope: meta.number.integer.octal.js\n      captures:\n        1: constant.numeric.base.js invalid.deprecated.numeric.octal.js\n        2: constant.numeric.value.js invalid.deprecated.numeric.octal.js\n      pop: 1\n\n    - match: (0[Xx])({{hex_digit}}*)(n)?{{identifier_break}}\n      scope: meta.number.integer.hexadecimal.js\n      captures:\n        1: constant.numeric.base.js\n        2: constant.numeric.value.js\n        3: constant.numeric.suffix.js\n      pop: 1\n\n    - match: (0[Oo])({{oct_digit}}*)(n)?{{identifier_break}}\n      scope: meta.number.integer.octal.js\n      captures:\n        1: constant.numeric.base.js\n        2: constant.numeric.value.js\n        3: constant.numeric.suffix.js\n      pop: 1\n\n    - match: (0[Bb])({{bin_digit}}*)(n)?{{identifier_break}}\n      scope: meta.number.integer.binary.js\n      captures:\n        1: constant.numeric.base.js\n        2: constant.numeric.value.js\n        3: constant.numeric.suffix.js\n      pop: 1\n\n    - match: ({{dec_integer}})(n|(?!\\.)){{identifier_break}}\n      scope: meta.number.integer.decimal.js\n      captures:\n        1: constant.numeric.value.js\n        2: constant.numeric.suffix.js\n      pop: 1\n\n    # illegal numbers\n    - match: 0[Xx]{{identifier_part}}+\n      scope: invalid.illegal.numeric.hexadecimal.js\n      pop: 1\n\n    - match: 0[Bb]{{identifier_part}}+\n      scope: invalid.illegal.numeric.binary.js\n      pop: 1\n\n    - match: 0{{identifier_part}}+\n      scope: invalid.illegal.numeric.octal.js\n      pop: 1\n\n    - match: '[1-9]{{identifier_part}}+(?:\\.{{identifier_part}}*)?'\n      scope: invalid.illegal.numeric.decimal.js\n      pop: 1\n\n  literal-string:\n    - include: literal-double-quoted-string\n    - include: literal-single-quoted-string\n\n  expression-end:\n    - include: flow-function-type-arguments-or-less-than\n\n    - include: postfix-operators\n    - include: binary-operators\n    - include: ternary-operator\n\n    - include: left-expression-end\n\n  string-interpolation-content:\n    - clear_scopes: 1\n    - meta_scope: meta.interpolation.js\n    - meta_content_scope: source.js.embedded\n    - match: \\}\n      scope: punctuation.section.interpolation.end.js\n      pop: 1\n    - match: (?=\\S)\n      push: expression\n\n  script:\n    - match: \\)|\\}|\\]\n      scope: invalid.illegal.stray-bracket-end.js\n      # Don't pop or embedding could break.\n\n    - include: statements\n\n  variable-binding-object-destructuring:\n    - match: \\{\n      scope: punctuation.section.mapping.begin.js\n      set:\n        - meta_scope: meta.binding.destructuring.mapping.js\n        - match: \\}\n          scope: punctuation.section.mapping.end.js\n          pop: 1\n        - include: variable-binding-spread\n        - match: (?={{identifier_start}}|\\[|'|\")\n          push:\n            - initializer\n            - variable-binding-object-alias\n            - object-literal-meta-key\n            - variable-binding-object-key\n        - include: comma-separator\n\n  class-field:\n    - match: ''\n      set:\n        - initializer\n        - flow-type-annotation\n        - class-field-check\n        - field-name\n\n  main:\n    - meta_include_prototype: false # don't match comments before shebang\n    - match: ''\n      push: [script, shebang]\n\n  expect-parenthesized-expression:\n    - include: parenthesized-expression\n    - include: else-pop\n\n  string-content:\n    - match: \\\\\\n\n      scope: constant.character.escape.newline.js\n    - match: \\\\(?:x\\h\\h|u\\h\\h\\h\\h|.)\n      scope: constant.character.escape.js\n\n  flow-type-alias:\n    - match: (?=type{{identifier_break}})\n      set:\n        -   - match: (?={{non_reserved_identifier}})\n              set:\n                -   - meta_scope: meta.declaration.type.js\n                    - match: ''\n                      pop: true\n                - flow-type-alias-initializer\n                - flow-type-generic-parameters\n                -   - match: '{{non_reserved_identifier}}'\n                      scope: entity.name.type.js\n                      pop: true\n                -   - include: else-pop\n\n            - match: (?=\\S)\n              set: [expression-statement, expression-end]\n        -   - match: type{{identifier_break}}(?=\\s*(?:$|{{non_reserved_identifier}}))\n              scope: keyword.declaration.js\n              set:\n                - meta_scope: meta.declaration.type.js\n                - include: else-pop\n            - include: expression-begin\n\n  method-declaration:\n    - meta_include_prototype: false\n    - match: ''\n      set:\n        - function-meta\n        - function-declaration-expect-body\n        - flow-type-annotation\n        - function-declaration-expect-parameters\n        - flow-type-generic-parameters\n        - method-name\n        - method-declaration-expect-asterisk\n\n  custom-templates-prototype:\n    - match: (?=`)\n      pop: true\n    - match: \\$\\{\n      scope: punctuation.section.interpolation.begin.js\n      push:\n        - clear_scopes: 1\n        - meta_scope: meta.interpolation.js\n        - meta_content_scope: source.js.embedded.expression\n        - match: \\}\n          scope: punctuation.section.interpolation.end.js\n          pop: true\n        - match: (?=\\S)\n          push: expression\n    - include: string-content\n  arrow-function-expect-arrow:\n    - match: =>\n      scope: keyword.declaration.function.arrow.js\n      pop: 1\n    - include: else-pop\n\n  export-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.export.js\n    - include: immediately-pop\n\n  arrow-function-expect-body:\n    - include: function-block\n    - match: (?=\\S)\n      set:\n        - block-meta\n        - expression-no-comma\n\n  literal-variable:\n    - include: special-identifier\n    - include: support\n\n    - match: (?={{identifier_name}}{{function_assignment_lookahead}})\n      set:\n        - function-name-meta\n        - literal-variable-base\n\n    - match: '{{identifier_name}}(?={{nothing}}`)'\n      scope: variable.function.tagged-template.js\n      pop: 1\n\n    - match: '{{constant_identifier}}(?=\\s*(?:{{dot_accessor}}|\\[))'\n      scope: support.class.js\n      pop: 1\n\n    - match: '{{function_call_lookahead}}'\n      set: call-function-name\n\n    - include: literal-variable-base\n\n  flow-type-existential:\n    - match: \\*\n      scope: constant.language.type.existential.js\n      pop: true\n\n  jsx-interpolation-comment:\n    - match: ({)(/\\*)\n      captures:\n        1: punctuation.definition.interpolation.begin.js\n        2: punctuation.definition.comment.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: meta.interpolation.js comment.block.js\n        - match: (\\*/)(})\n          captures:\n            1: punctuation.definition.comment.end.js\n            2: punctuation.definition.interpolation.end.js\n          pop: 1\n        - match: (?=\\*/)\n          fail: jsx-interpolation-comment\n\n  styled-component-end:\n    - match: \\.\n      scope: punctuation.accessor.dot.js\n      push: styled-component-begin\n\n    - match: '`'\n      scope: string.quoted.other.js punctuation.definition.string.begin.js\n      push:\n        -   - include: immediately-pop\n        - custom-templates-closing-quote\n        - custom-templates-clear-scopes\n        -   - meta_include_prototype: false\n            - match: ''\n              set: scope:source.js.css\n              with_prototype:\n                - include: custom-templates-prototype\n    - include: expression-end\n\n  flow-type-literal:\n    - match: true{{identifier_break}}\n      scope: constant.language.boolean.true.js\n      pop: true\n    - match: false{{identifier_break}}\n      scope: constant.language.boolean.false.js\n      pop: true\n    - match: (?=\\d)\n      set:\n        -   - match: '{{identifier_part}}+'\n              scope: invalid.illegal.js\n            - include: immediately-pop\n        - literal-number\n    - match: (?=['\"])\n      set: literal-string\n\n  flow-type-object-value:\n    - match: (\\?)?(:)\n      captures:\n        1: storage.modifier.optional.js\n        2: punctuation.separator.key-value.js\n      set: flow-type\n    - include: else-pop\n\n  expression-break:\n    - match: (?=[;})\\]])\n      pop: 1\n\n  flow-type-utility:\n    - match: |-\n        (?x) (?:\n          Class|Function|\n          \\$(?:\n            Keys|Values|ReadOnly|Exact|Diff|Rest|PropertyType|ElementType|\n            ObjMap|TupleMap|Call|Supertype|Subtype\n          )\n        ){{identifier_break}}\n      scope: support.type.utility.js\n      pop: true\n\n  jsx-interpolation:\n    - match: (?={/\\*)\n      branch_point: jsx-interpolation-comment\n      branch:\n        - jsx-interpolation-comment\n        - jsx-interpolation-plain\n    - match: (?={)\n      push: jsx-interpolation-plain\n\n  block-comment-body:\n    - meta_include_prototype: false\n    - meta_scope: comment.block.js\n    - include: block-comment-end\n\n  literal-string-template-custom-lookahead: []\n  restricted-production:\n    - meta_include_prototype: false\n    - match: '{{line_ending_ahead}}'\n      pop: 1\n    - match: ''\n      set: expression-statement\n\n  function-declaration-expect-body:\n    - include: function-block\n    - include: else-pop\n\n  statement:\n    - include: flow-type-declare\n    - include: flow-type-alias\n\n    - match: \\;\n      scope: punctuation.terminator.statement.empty.js\n      pop: 1\n\n    - include: declaration\n    - include: import-statement-or-import-meta\n    - include: export-statement\n    - include: conditional\n    - include: block\n    - include: label\n\n    - match: break{{identifier_break}}\n      scope: keyword.control.flow.break.js\n      set:\n        - expect-semicolon\n        - expect-label\n\n    - match: continue{{identifier_break}}\n      scope: keyword.control.flow.continue.js\n      set:\n        - expect-semicolon\n        - expect-label\n\n    - match: debugger{{identifier_break}}\n      scope: keyword.control.flow.debugger.js\n      set: expect-semicolon\n\n    - match: return{{identifier_break}}\n      scope: keyword.control.flow.return.js\n      set: restricted-production\n\n    - match: throw{{identifier_break}}\n      scope: keyword.control.flow.throw.js\n      set: restricted-production\n\n    - include: decorator\n\n    - include: expression-statement\n\n  import-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.import.js\n    - include: immediately-pop\n\n  prefix-operators:\n    - match: '~'\n      scope: keyword.operator.bitwise.js\n    - match: '!(?!=)'\n      scope: keyword.operator.logical.js\n    - match: --\n      scope: keyword.operator.arithmetic.js\n    - match: \\+\\+\n      scope: keyword.operator.arithmetic.js\n    - match: \\.\\.\\.\n      scope: keyword.operator.spread.js\n    - match: \\+|\\-\n      scope: keyword.operator.arithmetic.js\n    - match: (?:delete|typeof|void){{identifier_break}}\n      scope: keyword.operator.js\n\n  function-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.function.js\n    - include: immediately-pop\n\n  function-declaration-expect-function-keyword:\n    - match: function{{identifier_break}}\n      scope: keyword.declaration.function.js\n      pop: 1\n    - include: else-pop\n\n  flow-type:\n    - match: ''\n      set:\n        - flow-type-end\n        - flow-type-begin\n\n  for-condition-end:\n    - meta_scope: meta.group.js\n\n    - match: \\)\n      scope: punctuation.section.group.end.js\n      pop: 1\n\n  special-identifier:\n    # These are ordinary identifiers, not reserved words\n    - match: arguments{{identifier_break}}\n      scope: variable.language.arguments.js\n      pop: 1\n    - match: globalThis{{identifier_break}}\n      scope: variable.language.global.js\n      pop: 1\n    - match: undefined{{identifier_break}}\n      scope: constant.language.undefined.js\n      pop: 1\n    - match: NaN{{identifier_break}}\n      scope: constant.language.nan.js\n      pop: 1\n    - match: Infinity{{identifier_break}}\n      scope: constant.language.infinity.js\n      pop: 1\n\n  switch-block-contents:\n    - meta_scope: meta.block.js\n\n    - match: \\}\n      scope: punctuation.section.block.end.js\n      pop: 1\n\n    - match: case{{identifier_break}}\n      scope: keyword.control.conditional.case.js\n      push:\n        - expect-case-colon\n        - expression\n\n    - match: default{{identifier_break}}\n      scope: keyword.control.conditional.default.js\n      push:\n        - expect-case-colon\n\n    - include: statements\n\n  inherited-class-expression-end:\n    - include: flow-type-generic-arguments\n\n    - match: '{{dot_accessor}}'\n      scope: punctuation.accessor.js\n      push:\n        - include: inherited-class-name\n        - include: object-property\n\n    - include: left-expression-end\n\n  import-statement:\n    - match: import{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set:\n        - import-meta\n        - expect-semicolon\n        - import-assert\n        - import-string-or-items\n        - import-check-branch\n\n  regular-function:\n    - match: (?={{func_lookahead}})\n      set: function-declaration\n\n  jsx-tag-attributes:\n    - meta_scope: meta.tag.attributes.js\n\n    - match: '>'\n      scope: punctuation.definition.tag.end.js\n      set: jsx-body\n\n    - match: /\n      scope: punctuation.definition.tag.end.js\n      set: jsx-expect-tag-end\n\n    - include: jsx-interpolation\n\n    - match: '{{jsx_identifier}}'\n      scope: entity.other.attribute-name.js\n\n    - match: '='\n      scope: punctuation.separator.key-value.js\n      push: jsx-attribute-value\n\n  switch-block:\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set: switch-block-contents\n    - include: else-pop\n\n  catch-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.catch.js\n    - include: immediately-pop\n\n  while-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.while.js\n    - include: immediately-pop\n\n  try-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.try.js\n    - include: immediately-pop\n\n  function-block:\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set:\n        - meta_scope: meta.block.js\n        - match: \\}\n          scope: punctuation.section.block.end.js\n          pop: 1\n        - include: statements\n\n  custom-templates-clear-scopes:\n    - meta_include_prototype: false\n    - clear_scopes: 1\n    - include: immediately-pop\n\n  flow-detect-arrow-after-return-type:\n    - match: (?==>)\n      fail: arrow-function\n    - match: (?=\\S)\n      fail: flow-arrow-function-return-type\n\n  constructor-body-expect-class-end:\n    - include: property-access\n    - include: else-pop\n\n  class:\n    - match: class{{identifier_break}}\n      scope: keyword.declaration.class.js\n      set:\n        - class-meta\n        - class-body\n        - class-extends\n        - class-name\n\n  class-element:\n    - match: ''\n      pop: 1\n      branch_point: class-field\n      branch:\n        - class-field\n        - method-declaration\n\n  line-comment-other-body:\n    - meta_include_prototype: false\n    - meta_scope: comment.line.other.js\n    - include: line-comment-end\n\n  block:\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set:\n        - meta_scope: meta.block.js\n        - match: \\}\n          scope: punctuation.section.block.end.js\n          pop: 1\n        - include: statements\n\n  function-declaration-parameters:\n    - match: \\(\n      scope: punctuation.section.group.begin.js\n      set:\n        - clear_scopes: 1\n        - meta_scope: meta.function.parameters.js\n        - match: \\)\n          scope: punctuation.section.group.end.js\n          pop: 1\n        - include: function-parameter-binding-list\n\n  switch-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.switch.js\n    - include: immediately-pop\n\n  array-literal:\n    - match: \\[\n      scope: punctuation.section.sequence.begin.js\n      set:\n        - meta_scope: meta.sequence.js\n        - match: \\]\n          scope: punctuation.section.sequence.end.js\n          pop: 1\n        - include: expression-list\n\n  label:\n    - match: ({{identifier_name}})\\s*(:)\n      captures:\n        1: entity.name.label.js\n        2: punctuation.separator.js\n\n  expect-semicolon:\n    - match: \\;\n      scope: punctuation.terminator.statement.js\n      pop: 1\n    - include: else-pop\n\n  flow-function-type-arguments:\n    - match: \\<(?!<)\n      scope: punctuation.definition.generic.begin.js region.redish\n      set:\n        -   - match: (?=[\\]()};,`])\n              pop: true\n            - match: (?=\\S)\n              fail: flow-function-type-arguments\n        -   - meta_scope: meta.generic.js\n            - match: \\>\n              scope: punctuation.definition.generic.end.js\n              pop: true\n            - match: ','\n              scope: punctuation.separator.comma.js\n              push: flow-type\n            - match: (?=\\S)\n              fail: flow-function-type-arguments\n        - flow-type\n\n  support-property-ecma-symbol:\n    - match: (?:asyncIterator|hasInstance|isConcatSpreadable|iterator|match|replace|search|species|split|toPrimitive|toStringTag|unscopeables){{identifier_break}}\n      scope: support.constant.builtin.js\n      pop: 1\n    - match: (?:for|keyFor){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  class-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.class.js\n    - include: immediately-pop\n\n  static-block-body:\n    - meta_scope: meta.block.js\n    - match: \\}\n      scope: punctuation.section.block.end.js\n      pop: 1\n    - include: statements\n\n  literal-private-variable:\n    - match: (#)({{identifier_name}})\n      captures:\n        1: punctuation.definition.variable.js\n        2: variable.other.readwrite.js\n      pop: 1\n\n  block-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.block.js\n    - include: immediately-pop\n\n  flow-type-module-name:\n    - include: literal-string\n    - match: '{{non_reserved_identifier}}'\n      scope: entity.name.module.js\n      pop: true\n    - include: else-pop\n\n  styled-component-begin:\n    - match: '{{non_reserved_identifier}}(?=\\s*\\()'\n      scope: variable.function.js\n      pop: true\n\n    - match: '{{non_reserved_identifier}}(?=\\s*[`<])'\n      scope: variable.function.tagged-template.js\n      pop: true\n\n    - match: '{{non_reserved_identifier}}'\n      scope: variable.other.readwrite.js\n      pop: true\n\n    - include: else-pop\n\n  object-literal-element:\n    - match: '{{identifier_name}}(?=\\s*(?:[},]|$|//|/\\*))'\n      scope: variable.other.readwrite.js\n      pop: 1\n    - match: (?=\\S)\n      pop: 1\n      branch_point: object-literal-property\n      branch:\n        - object-literal-property\n        - method-declaration\n\n  function-name-meta:\n    - meta_include_prototype: false\n    - meta_scope: entity.name.function.js\n    - include: immediately-pop\n\n  object-literal:\n    - match: \\{\n      scope: punctuation.section.mapping.begin.js\n      set: object-literal-contents\n\n  flow-type-primitive:\n    - match: boolean{{identifier_break}}\n      scope: support.type.primitive.boolean.js\n      pop: true\n\n    - match: number{{identifier_break}}\n      scope: support.type.primitive.number.js\n      pop: true\n\n    - match: string{{identifier_break}}\n      scope: support.type.primitive.string.js\n      pop: true\n\n    - match: null{{identifier_break}}\n      scope: support.type.primitive.null.js\n      pop: true\n\n    - match: void{{identifier_break}}\n      scope: support.type.primitive.void.js\n      pop: true\n\n  jsx-tag-name-meta:\n    - clear_scopes: 1\n    - meta_include_prototype: false\n    - meta_scope: meta.tag.name.js\n    - include: immediately-pop\n\n  jsx-meta-unmatched-tag:\n    - meta_include_prototype: false\n    - meta_scope: invalid.illegal.unmatched-tag.js\n    - include: immediately-pop\n\n  flow-type-list:\n    - include: comma-separator\n    - match: (?=\\S)\n      push: flow-type\n\n  call-method-name:\n    - include: support-property\n    - match: '{{identifier_name}}'\n      scope: variable.function.js\n      pop: 1\n    - match: (#){{identifier_name}}\n      scope: variable.function.js\n      captures:\n        1: punctuation.definition.js\n      pop: 1\n    - include: else-pop\n\n  block-comment-end:\n    - match: \\*+/\n      scope: punctuation.definition.comment.end.js\n      pop: 1\n\n  constructor-body-expect-class-begin:\n    - match: (?={{non_reserved_identifier}}\\s*\\()\n      set:\n        - include: support\n        - match: '{{dollar_only_identifier}}'\n          scope: variable.type.dollar.only.js punctuation.dollar.js\n          pop: 1\n        - match: '{{dollar_identifier}}'\n          scope: variable.type.dollar.js\n          captures:\n            1: punctuation.dollar.js\n          pop: 1\n        - match: '{{identifier_name}}'\n          scope: variable.type.js\n          pop: 1\n        - include: else-pop\n\n    - include: expression-begin\n\n  support-variable-dom:\n    - match: XMLHttpRequest{{identifier_break}}\n      scope: support.class.dom.js\n      pop: 1\n    - match: (?:document|window|navigator){{identifier_break}}\n      scope: support.type.object.dom.js\n      pop: 1\n    - match: (?:clearTimeout|clearInterval|setTimeout|setInterval){{identifier_break}}\n      scope: support.function.dom.js\n      pop: 1\n\n  variable-binding-list:\n    - include: comma-separator\n    - match: (?={{binding_pattern_lookahead}})\n      push:\n        - initializer\n        - variable-binding-pattern\n    - include: else-pop\n\n  object-literal-property:\n    - match: ''\n      set:\n        - object-literal-property-check\n        - object-literal-meta-key\n        - object-property-name\n\n  flow-type-declare:\n    - match: declare{{identifier_break}}(?=\\s*(?:type|class|function|var|let|const|opaque|export|module){{identifier_break}})\n      scope: keyword.declaration.js\n      set:\n        - match: opaque{{identifier_break}}\n          scope: storage.modifier.js\n          pop: true\n        - match: module{{identifier_break}}\n          scope: keyword.declaration.js\n          set:\n            - flow-type-module-meta\n            - flow-type-module-body\n            - flow-type-module-name\n        - match: export{{identifier_break}}\n          scope: keyword.declaration.js\n          set: flow-type-declare-export\n        - include: else-pop\n\n  function-declaration-expect-name:\n    - match: '{{non_reserved_identifier}}'\n      scope: entity.name.function.js\n      pop: 1\n    - include: else-pop\n\n  flow-type-end-no-arrow:\n    - match: (?==>)\n      pop: true\n    - include: flow-type-end\n\n  flow-type-annotation-optional:\n    - match: \\?(?=:)\n      scope: storage.modifier.optional.js\n    - include: flow-type-annotation\n\n  flow-type-function:\n    - match: \\(\n      scope: punctuation.section.grouping.begin.js\n      set:\n        - meta_scope: meta.group.js\n        - match: \\)\n          scope: punctuation.section.grouping.end.js\n          pop: true\n        - include: flow-type-list\n\n  support-property:\n    - include: support-property-ecma\n\n  support-variable-console:\n    # https://console.spec.whatwg.org/\n    - match: console{{identifier_break}}\n      scope: support.type.object.console.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set: builtin-console-properties\n        - include: else-pop\n\n  decorator-expression-continuation:\n    - match: (?=[.`(])\n      pop: 1\n    - match: (?=\\S)\n      fail: decorator-expression-continuation\n\n  jsx-tag-attributes-top:\n    - meta_scope: meta.tag.js\n    - match: /\n      scope: punctuation.definition.tag.begin.js\n      set:\n        - jsx-meta-unmatched-tag\n        - jsx-expect-tag-end\n        - jsx-tag-name\n\n    - match: (?=\\S)\n      set:\n        - jsx-tag-attributes\n        - flow-jsx-tag-check\n        - jsx-tag-name\n        - flow-jsx-tag-check-name\n\n  support-property-ecma-atomics:\n    - match: (?:and|add|compareExchange|exchange|isLockFree|load|or|store|sub|wait|wake|xor){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  for-await:\n    - match: await{{identifier_break}}\n      scope: keyword.control.flow.await.js\n      pop: 1\n    - include: else-pop\n\n  flow-type-operators:\n    - match: \\|(?!\\})\n      scope: keyword.operator.type.union.js\n      push: flow-type-begin\n    - match: \\&\n      scope: keyword.operator.type.intersection.js\n      push: flow-type-begin\n    - match: =>\n      scope: keyword.declaration.function.arrow.js\n      push: flow-type-begin\n    - match: \\?\n      scope: storage.modifier.maybe.js\n      push: flow-type-begin\n    - match: \\.\n      scope: punctuation.separator.accessor.js\n      push: flow-type-begin\n\n    - match: \\[\\]\n      scope: storage.modifier.array.js\n    - match: '%checks{{identifier_break}}'\n      scope: storage.modifier.checks.js\n\n  branch-possible-arrow-function:\n    - match: (?=<)\n      set: jsx-tag\n\n    - match: (?=\\()\n      set:\n        - detect-arrow\n        - flow-detect-arrow-function-return-type\n        - parenthesized-expression\n\n    - meta_include_prototype: false\n    - match: (?=\\()\n      set:\n        - detect-arrow\n        - parenthesized-expression\n    - match: (?={{identifier_start}})\n      set:\n        - detect-arrow\n        - literal-variable\n\n  variable-binding-object-key:\n    - match: '{{identifier_name}}(?=\\s*:)'\n      scope: string.unquoted.js\n      pop: true\n    - match: '{{identifier_name}}(?=\\s*:)'\n      pop: 1\n    - include: literal-string\n    - include: computed-property-name\n    - include: variable-binding-name\n    - include: else-pop\n\n  flow-jsx-tag-check-name:\n    - match: (?=(?:(?:{{jsx_identifier_part}})|\\.):)\n      fail: arrow-function\n    - include: else-pop\n\n  function-parameter-binding-list:\n    - match: ','\n      scope: punctuation.separator.parameter.function.js\n    - include: function-parameter-binding-spread\n    - match: (?={{binding_pattern_lookahead}})\n      push: function-parameter\n    - include: else-pop\n\n  property-access:\n    - match: ({{dot_accessor}})?(\\[)\n      captures:\n        1: punctuation.accessor.js\n        2: punctuation.section.brackets.begin.js\n      push:\n        - meta_scope: meta.brackets.js\n        - match: \\]\n          scope: punctuation.section.brackets.end.js\n          pop: 1\n        - match: (?=\\S)\n          push: expression\n\n    - match: '{{dot_accessor}}'\n      scope: punctuation.accessor.js\n      push:\n        - match: (?={{identifier_name}}\\s*(?:{{dot_accessor}})?\\()\n          set:\n            - call-method-meta\n            - function-call-arguments\n            - call-path\n            - object-property\n        - include: object-property\n\n  object-property:\n    - include: support-property\n\n    - match: (?=\\#?{{identifier_name}}{{function_assignment_lookahead}})\n      set:\n        - function-name-meta\n        - object-property-base\n\n    - match: (?=#?{{identifier_name}}\\s*(?:{{dot_accessor}})?\\()\n      set: call-method-name\n\n    - match: '{{identifier_name}}(?={{nothing}}`)'\n      scope: variable.function.tagged-template.js\n      pop: 1\n\n    - include: object-property-base\n    - include: else-pop\n\n  jsdoc-comment-body:\n    - meta_include_prototype: false\n    - meta_scope: comment.block.documentation.js\n    - include: block-comment-end\n    # JSDoc \"block\" tags (i.e. @param) are only accepted at the beginning of the documentation\n    # line so directly after the '/**' or after the '*' marker on the next lines.\n    - match: ^\\s*(\\*)(?!/)\n      captures:\n        1: punctuation.definition.comment.js\n      push: jsdoc-block-tag\n\n  prototype:\n    - include: comments\n\n  call-method-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.function-call.method.js\n    - include: immediately-pop\n\n  jsx-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.jsx.js\n    - include: immediately-pop\n\n  decorator-expression-begin:\n    - include: decorator-name\n    - include: parenthesized-expression\n    - include: expression-begin\n\n  computed-property-name:\n    - match: \\[\n      scope: punctuation.section.brackets.begin.js\n      set:\n        - meta_scope: meta.brackets.js\n        - match: \\]\n          scope: punctuation.section.brackets.end.js\n          pop: 1\n        - match: (?=\\S)\n          push: expression\n\n  jsx-expect-tag-end:\n    - meta_content_scope: meta.tag.js\n    - match: '>'\n      scope: meta.tag.js punctuation.definition.tag.end.js\n      pop: 1\n    - include: else-pop\n\n  support-property-ecma-date:\n    - match: (?:now|parse|UTC){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  block-comments:\n    # empty block comments\n    - match: /\\*\\*+/\n      scope: comment.block.empty.js punctuation.definition.comment.js\n    # documentation block comments\n    - match: /\\*\\*+\n      scope: punctuation.definition.comment.begin.js\n      push:\n        - jsdoc-comment-body\n        - jsdoc-block-tag\n    # normal block comments\n    - match: /\\*\n      scope: punctuation.definition.comment.begin.js\n      push: block-comment-body\n\n  decorator-expression-pop:\n    # Consume only comments (ignore patterns from inheriting syntaxes)\n    # and clear `meta.annotation` scope so it looks like the comment not being\n    # part of the annotation anymore.\n    # Pop `decorator-expression-end` at the same text point the previous branch\n    # fails at in order to prevent ST's syntax engine to lock up.\n    # see: https://github.com/sublimehq/sublime_text/issues/5853\n    - clear_scopes: 1\n    - meta_include_prototype: false\n    - include: comments\n    - include: else-pop-2\n\n  call-function-name:\n    - match: '{{dollar_only_identifier}}'\n      scope: variable.function.js variable.other.dollar.only.js punctuation.dollar.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: variable.function.js\n      pop: 1\n    - include: else-pop\n\n  support-property-ecma-number:\n    - match: (?:EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY){{identifier_break}}\n      scope: support.constant.builtin.js\n      pop: 1\n    - match: (?:isFinite|isInteger|isNaN|isSafeInteger|NaN|parseFloat|parseInt){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  literal-single-quoted-string-content:\n    - meta_include_prototype: false\n    - meta_scope: meta.string.js string.quoted.single.js\n    - match: \\'\n      scope: punctuation.definition.string.end.js\n      pop: 1\n    - match: \\n\n      scope: invalid.illegal.newline.js\n      pop: 1\n    - include: string-content\n\n  regexp:\n    - meta_include_prototype: false\n    - meta_scope: meta.string.js string.regexp.js\n    - match: /\n      scope: punctuation.definition.string.end.js\n      set:\n        - meta_include_prototype: false\n        - meta_content_scope: meta.string.js string.regexp.js\n        - match: '[gimyus]'\n          scope: keyword.other.js\n        - match: '[A-Za-z0-9]'   # Ignore unknown flags for future-compatibility\n        - include: immediately-pop\n    - match: (?=.|\\n)\n      push:\n        - meta_include_prototype: false\n        - match: (?=/)\n          pop: 1\n        - include: scope:source.regexp.js\n\n  call-function-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.function-call.js\n    - include: immediately-pop\n\n  yield-expression:\n    - match: yield{{identifier_break}}\n      scope: keyword.control.flow.yield.js\n      set:\n        - match: $\n          pop: 1\n        - match: \\*\n          scope: keyword.generator.asterisk.js\n          set: expression-begin\n        - match: (?=\\S)\n          set: expression-begin\n\n  declaration:\n    - include: variable-declaration\n    - include: class\n    - include: regular-function\n\n  export-list:\n    - match: ','\n      scope: punctuation.separator.comma.js\n      push:\n        - import-export-alias\n        - export-item\n    - include: else-pop\n\n  literal-single-quoted-string:\n    - match: \\'\n      scope: punctuation.definition.string.begin.js\n      set: literal-single-quoted-string-content\n\n  literal-string-template-custom-comments: []\n  support-property-ecma-arraybuffer:\n    - match: isView{{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  support-property-ecma-string:\n    - match: (?:fromCharCode|fromCodePoint|raw){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  class-element-modifiers:\n    - match: ''\n      pop: 1\n      branch_point: class-element-modifier\n      branch:\n        - class-element-modifier\n        - class-element\n\n  line-comment-end:\n    - match: (//+)?\\n\n      captures:\n        1: punctuation.definition.comment.js\n      pop: 1\n\n  else-pop:\n    - match: (?=\\S)\n      pop: 1\n\n  import-check-branch:\n    - match: (?=[.(]) # Recovery for import expressions\n      fail: import-statement\n    - include: else-pop\n\n  literal-string-template-content:\n    - meta_include_prototype: false\n    - meta_scope: meta.string.js string.quoted.other.js\n    - match: \\`\n      scope: punctuation.definition.string.end.js\n      pop: 1\n    - include: string-interpolations\n    - include: string-content\n\n  jsx-interpolation-plain:\n    - match: '{'\n      scope: punctuation.definition.interpolation.begin.js\n      set:\n        -   - meta_scope: meta.interpolation.js\n            - meta_content_scope: source.js.embedded.jsx\n            - match: '}'\n              scope: punctuation.definition.interpolation.end.js\n              pop: 1\n        - expression\n\n  flow-type-export-type:\n    - match: type{{identifier_break}}(?=\\s*\\{)\n      scope: keyword.declaration.js\n      set: export-item\n    - include: flow-type-alias\n\n  class-extends:\n    - match: extends{{identifier_break}}\n      scope: storage.modifier.extends.js\n      set:\n        - inherited-class-expression-end\n        - inherited-class-expression-begin\n    - include: else-pop\n\n  flow-less-than:\n    - match: <\n      scope: keyword.operator.comparison.js\n      set: expression-begin\n\n  flow-type-alias-initializer:\n    - match: '='\n      scope: keyword.operator.assignment.js\n      set:\n        - flow-type-meta\n        - flow-type\n    - include: else-pop\n  import-meta-expression:\n    - match: import{{identifier_break}}\n      scope: keyword.import.js\n      set: import-expression-end\n\n  comma-separator:\n    - match: ','\n      scope: punctuation.separator.comma.js\n\n  literal-string-template-custom-tags: []\n  import-export-from:\n    - match: from{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set: literal-string\n    - include: else-pop\n\n  function-parameter-binding-object-alias:\n    - match: ':'\n      scope: punctuation.separator.key-value.js\n      set: function-parameter-binding-pattern\n    - include: else-pop\n\n  jsx-tag:\n    - match: <\n      scope: punctuation.definition.tag.begin.js\n      set:\n        - jsx-meta\n        - jsx-tag-attributes-top\n\n  flow-function-type-arguments-or-less-than:\n    - match: (?=<(?![<=]))\n      branch_point: flow-function-type-arguments\n      branch:\n        - flow-function-type-arguments\n        - flow-less-than\n\n  flow-type-object-contents:\n    - include: comma-separator\n    - match: ;\n      scope: punctuation.separator.semicolon.js\n    - match: '{{method_lookahead}}'\n      push: method-declaration\n    - match: \\+\n      scope: storage.modifier.variance.js\n    - match: '{{non_reserved_identifier}}'\n      scope: meta.object-literal.key.js\n      push: flow-type-object-value\n    - match: \\[\n      scope: punctuation.section.brackets.begin.js\n      push:\n        - flow-type-object-value\n        - flow-type-object-indexer-type\n        - flow-type-object-indexer-label\n\n  literal-double-quoted-string-content:\n    - meta_include_prototype: false\n    - meta_scope: meta.string.js string.quoted.double.js\n    - match: \\\"\n      scope: punctuation.definition.string.end.js\n      pop: 1\n    - match: \\n\n      scope: invalid.illegal.newline.js\n      pop: 1\n    - include: string-content\n\n  conditional:\n    - match: switch{{identifier_break}}\n      scope: keyword.control.conditional.switch.js\n      set:\n        - switch-meta\n        - switch-block\n        - expect-parenthesized-expression\n\n    - match: do{{identifier_break}}\n      scope: keyword.control.loop.do-while.js\n      set:\n        - do-while-meta\n        - do-while-condition\n        - statement\n\n    - match: for{{identifier_break}}\n      scope: keyword.control.loop.for.js\n      set:\n        - for-meta\n        - block-scope\n        - for-condition\n        - for-await\n\n    - match: while{{identifier_break}}\n      scope: keyword.control.loop.while.js\n      set:\n        - while-meta\n        - block-scope\n        - expect-parenthesized-expression\n\n    - match: with{{identifier_break}}\n      scope: keyword.control.import.with.js\n      set:\n        - with-meta\n        - block-scope\n        - expect-parenthesized-expression\n\n    - match: if{{identifier_break}}\n      scope: keyword.control.conditional.if.js\n      set:\n        - conditional-meta\n        - statement\n        - expect-parenthesized-expression\n\n    - match: else\\s+if{{identifier_break}}\n      scope: keyword.control.conditional.elseif.js\n      set:\n        - conditional-meta\n        - statement\n        - expect-parenthesized-expression\n\n    - match: else{{identifier_break}}\n      scope: keyword.control.conditional.else.js\n      set:\n        - conditional-meta\n        - statement\n\n    - match: try{{identifier_break}}\n      scope: keyword.control.exception.try.js\n      set:\n        - try-meta\n        - block-scope\n\n    - match: finally{{identifier_break}}\n      scope: keyword.control.exception.finally.js\n      set:\n        - finally-meta\n        - block-scope\n\n    - match: catch{{identifier_break}}\n      scope: keyword.control.exception.catch.js\n      set:\n        - catch-meta\n        - block-scope\n        - catch-binding\n\n  statements:\n    - match: \\)|\\}|\\]\n      scope: invalid.illegal.stray-bracket-end.js\n      pop: 1\n\n    - match: (?=\\S)\n      push: statement\n\n  prefixed-object-literal-method:\n    - match: (?:get|set){{identifier_break}}\n      scope: storage.type.accessor.js\n      set:\n        - meta_scope: meta.function.js\n        - match: (?={{class_element_name}})\n          set: method-declaration\n        - match: (?=\\S)\n          fail: prefixed-object-literal-method\n    - match: (?:async){{identifier_break}}\n      scope: keyword.declaration.async.js\n      set:\n        - meta_scope: meta.function.js\n        - match: (?=\\*|{{class_element_name}})\n          set: method-declaration\n        - match: (?=\\S)\n          fail: prefixed-object-literal-method\n\n  jsx-tag-name-component-possibly-native:\n    - match: '[[:lower:]]{{jsx_identifier_part}}*{{jsx_identifier_break}}(?!{{nothing}}[.:])'\n      scope: entity.name.tag.native.js\n      pop: 1\n    - include: jsx-tag-name-component\n\n  decorator-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.annotation.js\n    - include: immediately-pop\n\n  function-declaration-expect-async:\n    - match: async{{identifier_break}}\n      scope: keyword.declaration.async.js\n      pop: 1\n    - include: else-pop\n\n  shebang-body:\n    - meta_include_prototype: false\n    - meta_scope: comment.line.shebang.js\n    # Note: Keep sync with first_line_match!\n    - match: '{{shebang_lang}}'\n      scope: constant.language.shebang.js\n    - match: \\n\n      pop: 1\n\n  jsx-body:\n    - meta_include_prototype: false\n\n    - match: <\n      scope: punctuation.definition.tag.begin.js\n      set:\n        - meta_scope: meta.tag.js\n\n        - match: /\n          scope: punctuation.definition.tag.begin.js\n          set:\n            - jsx-expect-tag-end\n            - jsx-tag-name\n\n        - match: (?=\\S)\n          set:\n            - jsx-body\n            - jsx-tag-attributes\n            - jsx-tag-name\n\n    - include: jsx-html-escapes\n    - include: jsx-interpolation\n  import-statement-or-import-meta:\n    - match: (?=import{{identifier_break}})\n      branch_point: import-statement\n      branch:\n        - import-statement\n        - expression-statement\n\n  function-parameter-binding-object-key:\n    - match: '{{identifier_name}}(?=\\s*:)'\n      pop: 1\n    - include: literal-string\n    - include: computed-property-name\n    - include: function-parameter-binding-name\n    - include: else-pop\n\n  for-condition-contents:\n    # This could be either type of for loop.\n    - match: (?:const|let|var){{identifier_break}}\n      scope: keyword.declaration.js\n      set:\n        -   - include: for-of-rest\n            - match: (?=\\S)\n              set:\n                - for-oldstyle-rest\n                - variable-binding-list\n                - initializer\n        - variable-binding-pattern\n\n    - match: (?=\\S)\n      set:\n        -   - include: for-of-rest\n            - match: (?=\\S)\n              set: for-oldstyle-rest\n        - expression-end-no-in\n        - expression-begin\n\n  support-property-ecma-array:\n    - match: (?:from|isArray|of){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  literal-double-quoted-string:\n    - match: \\\"\n      scope: punctuation.definition.string.begin.js\n      set: literal-double-quoted-string-content\n\n  function-parameter-binding-pattern:\n    - match: ''\n      set:\n        -   - include: flow-type-annotation-optional\n        -   - include: function-parameter-binding-name\n            - include: function-parameter-binding-array-destructuring\n            - include: function-parameter-binding-object-destructuring\n            - include: else-pop\n\n  function-parameter-binding-array-destructuring:\n    - match: \\[\n      scope: punctuation.section.sequence.begin.js\n      set:\n        - meta_scope: meta.binding.destructuring.sequence.js\n        - match: \\]\n          scope: punctuation.section.sequence.end.js\n          pop: 1\n        - include: function-parameter-binding-list\n\n  variable-binding-list-top:\n    - match: ','\n      scope: punctuation.separator.comma.js\n      push: variable-binding-top\n    - include: else-pop\n\n  import-assert:\n    - match: assert{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set:\n        - include: object-literal\n        - include: else-pop\n    - include: else-pop\n\n  object-literal-property-check:\n    - match: (?=\\()\n      fail: object-literal-property\n    - include: else-pop\n\n  ternary-operator-expect-colon:\n    - match: ':'\n      scope: keyword.operator.ternary.js\n      set: expression-no-comma\n    - include: else-pop\n\n  with-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.with.js\n    - include: immediately-pop\n\n  object-literal-contents:\n    - meta_scope: meta.mapping.js\n\n    - match: \\}\n      scope: punctuation.section.mapping.end.js\n      pop: 1\n\n    - match: \\.\\.\\.\n      scope: keyword.operator.spread.js\n      push: expression-no-comma\n\n    - match: >-\n        (?x)(?=\n          {{property_name}}\\s*:\\s*\n          {{either_func_lookahead}}\n        )\n      push:\n        - object-literal-meta-key\n        - method-name\n\n    - match: (?=\\*)\n      push: method-declaration\n\n    - match: (?=(?:get|set|async){{identifier_break}})\n      branch_point: prefixed-object-literal-method\n      branch:\n        - prefixed-object-literal-method\n        - object-literal-element\n\n    - match: (?={{property_name}})\n      push: object-literal-element\n\n    - include: comma-separator\n\n    - match: ':'\n      scope: punctuation.separator.key-value.js\n      push: expression-no-comma\n\n    # If there's any garbage, parse it as an expression\n    # so that close braces won't break things.\n    - match: (?=\\S)\n      push: expression-no-comma\n\n  expression-no-comma:\n    - meta_include_prototype: false\n    - match: ''\n      set: [expression-end-no-comma, expression-begin]\n\n  method-declaration-expect-asterisk:\n    - match: \\*\n      scope: keyword.generator.asterisk.js\n    - include: else-pop\n\n  support-property-ecma-reflect:\n    - match: (?:apply|construct|defineProperty|deleteProperty|get|getOwnPropertyDescriptor|getPrototypeOf|has|isExtensible|ownKeys|preventExtensions|set|setPrototypeOf){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  for-oldstyle-rest:\n    - match: (?=\\))\n      pop: 1\n    - match: ;\n      scope: punctuation.separator.expression.js\n    - match: (?=\\S)\n      push: expression\n\n  finally-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.finally.js\n    - include: immediately-pop\n\n  class-body-contents:\n    - meta_scope: meta.block.js\n\n    - match: \\}\n      scope: punctuation.section.block.end.js\n      pop: 1\n\n    - match: \\;\n      scope: punctuation.terminator.statement.js\n\n    - include: decorator\n\n    - match: constructor{{identifier_break}}\n      scope: entity.name.function.constructor.js\n      push:\n        - function-meta\n        - function-declaration-expect-body\n        - function-declaration-expect-parameters\n\n    - match: (?=static{{identifier_break}})\n      branch_point: static-block\n      branch:\n        - static-block\n        - class-element-modifiers\n\n    - match: (?={{modifier}})\n      push: class-element-modifiers\n\n    - match: |-\n        (?x)(?=\n          \\#? {{identifier_name}}\n          \\s* = \\s*\n          {{either_func_lookahead}}\n        )\n      push:\n        - initializer\n        - function-name-meta\n        - literal-variable-base\n\n    - match: (?=(?:get|set|async){{identifier_break}})\n      branch_point: prefixed-method\n      branch:\n        - prefixed-method\n        - class-element\n\n    - match: (?=\\*)\n      push: method-declaration\n\n    - match: (?={{class_element_name}})\n      push: class-element\n\n  support-property-ecma-json:\n    - match: (?:parse|stringify){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  line-comments:\n    - match: /{4,}\n      scope: punctuation.definition.comment.js\n      push: line-comment-other-body\n    - match: /{3}\n      scope: punctuation.definition.comment.js\n      push: line-comment-triple-slash-body\n    - match: /{2}\n      scope: punctuation.definition.comment.js\n      push: line-comment-double-slash-body\n\n  support-property-ecma-promise:\n    - match: (?:all|race|reject|resolve|allSettled|any){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  export-extended:\n    - include: flow-type-export-type\n\n    - include: declaration\n\n    - match: default{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set:\n        - include: declaration\n        - match: (?=\\S)\n          set: expression-statement\n\n    - match: (?=\\S)\n      set:\n        - expect-semicolon\n        - import-export-from\n        - export-list\n        - import-export-alias\n        - export-item\n\n  flow-type-module-contents:\n    - match: \\}\n      scope: punctuation.section.block.end.js\n      pop: true\n    - include: main\n\n  arrow-function-expect-parameters:\n    - match: (?={{identifier_start}})\n      set:\n        - clear_scopes: 1\n        - meta_scope: meta.function.parameters.js\n        - match: '{{identifier_name}}'\n          scope: variable.parameter.function.js\n          pop: 1\n    - include: function-declaration-parameters\n    - include: else-pop\n\n  jsdoc-block-tag:\n    - match: '{{jsdoc_block_tag}}'\n      scope: entity.other.attribute-name.documentation.js\n      pop: 1\n    - match: (?=\\S)|$\n      pop: 1\n\n  expression-statement-pop:\n    # Consume only comments (ignore patterns from inheriting syntaxes) and\n    # pop `expression-statement-end` at the same text point the previous branch\n    # fails at in order to prevent ST's syntax engine to lock up.\n    # see: https://github.com/sublimehq/sublime_text/issues/5853\n    - meta_include_prototype: false\n    - include: comments\n    - include: else-pop-2\n\n  jsx-attribute-value:\n    - include: jsx-tag\n    - include: jsx-interpolation\n\n    - match: \"'\"\n      scope: punctuation.definition.string.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: string.quoted.single.js\n        - match: \\'\n          scope: punctuation.definition.string.end.js\n          pop: 1\n        - include: jsx-html-escapes\n    - match: '\"'\n      scope: punctuation.definition.string.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: string.quoted.double.js\n        - match: \\\"\n          scope: punctuation.definition.string.end.js\n          pop: 1\n        - include: jsx-html-escapes\n\n    - include: else-pop\n\n  flow-detect-arrow-function-return-type:\n    - match: (?=:)\n      pop: true\n      branch_point: flow-arrow-function-return-type\n      branch:\n        - flow-arrow-return-type\n        - immediately-pop\n    - include: else-pop\n\n  support-property-ecma-math:\n    - match: (?:E|LN10|LN2|LOG10E|LOG2E|PI|SQRT1_2|SQRT2){{identifier_break}}\n      scope: support.constant.builtin.js\n      pop: 1\n    - match: (?:abs|acos|acosh|asin|asin|atan|atanh|atan2|cbrt|ceil|clz32|cos|cosh|exp|expm1|floor|fround|hypot|imul|log|log1p|log10|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  flow-type-generic-parameters:\n    - match: <\n      scope: punctuation.definition.generic.begin.js\n      set:\n        - meta_scope: meta.generic.declaration.js\n        - match: '>'\n          scope: punctuation.definition.generic.end.js\n          pop: true\n        - include: comma-separator\n        - match: \\+\n          scope: storage.modifier.variance.js\n        - match: '{{non_reserved_identifier}}'\n          scope: variable.parameter.type.js\n          push:\n            -   - match: '='\n                  scope: keyword.operator.assignment.js\n                  set: flow-type\n                - include: else-pop\n            - flow-type-annotation\n    - include: else-pop\n\n  decorator-expression-end:\n    - match: '{{dot_accessor}}'\n      scope: punctuation.accessor.js\n      push:\n        - include: decorator-name\n        - include: object-property\n\n    - match: (?=`)\n      push: literal-string-template\n\n    - match: (?=(?:{{dot_accessor}})?\\()\n      push: function-call-arguments\n\n    - match: '{{line_ending_ahead}}'\n      branch_point: decorator-expression-continuation\n      branch:\n        - decorator-expression-continuation\n        - decorator-expression-pop\n\n    - include: else-pop\n\n  for-condition:\n    - match: \\(\n      scope: punctuation.section.group.begin.js\n      set:\n        - for-condition-end\n        - for-condition-contents\n    - include: else-pop\n\n  expression:\n    - meta_include_prototype: false\n    - match: ''\n      set: [expression-end, expression-begin]\n\n  shebang:\n    - meta_include_prototype: false\n    - match: ^\\#!\n      scope: punctuation.definition.comment.js\n      set: shebang-body\n    - match: ^|(?=\\S)  # Note: Ensure to highlight shebang if the syntax is embedded.\n      pop: 1\n\n  ternary-operator:\n    - match: \\?(?=[^.]|\\.[0-9])\n      scope: keyword.operator.ternary.js\n      set:\n        - ternary-operator-expect-colon\n        - expression-no-comma\n\n  flow-type-class:\n    - match: '{{non_reserved_identifier}}'\n      scope: variable.other.class.js\n      pop: true\n\n  flow-type-annotation:\n    - match: ':'\n      scope: punctuation.separator.type.js\n      set:\n        - flow-type-meta\n        - flow-type\n    - match: (?!\\s*(?:$|:|//|/\\*))\n      pop: true\n\n  custom-templates-default:\n    - match: '`'\n      scope: string.quoted.other.js punctuation.definition.string.begin.js\n      push:\n        -   - include: immediately-pop\n        - custom-templates-closing-quote\n        - custom-templates-clear-scopes\n        -   - meta_include_prototype: false\n            - include: literal-string-template-custom-lookahead\n            - match: (?=\\s*\\S)\n              set:\n                - meta_scope: string.quoted.other.js\n                - meta_include_prototype: false\n                - include: custom-templates-prototype\n\n  support-variable-ecma:\n    - match: Array{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-array\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: ArrayBuffer{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-arraybuffer\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Atomics{{identifier_break}}\n      scope: support.constant.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-atomics\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: BigInt{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-bigint\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Date{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-date\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: JSON{{identifier_break}}\n      scope: support.constant.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-json\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Math{{identifier_break}}\n      scope: support.constant.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-math\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Number{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-number\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Object{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-object\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Promise{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-promise\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Proxy{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-proxy\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Reflect{{identifier_break}}\n      scope: support.constant.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-reflect\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: String{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-string\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: Symbol{{identifier_break}}\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-symbol\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    - match: |-\n        (?x:\n          (?:\n            BigInt64|\n            BigUint64|\n            Float(?:32|64)|\n            Int(?:8|16|32)|\n            Uint(?:8|16|32|32Clamped)\n          )\n          Array{{identifier_break}}\n        )\n      scope: support.class.builtin.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-ecma-typedarray\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    # Classes with no constructor properties\n    - match: (?:Boolean|DataView|Function|Map|RegExp|Set|WeakMap|WeakSet){{identifier_break}}\n      scope: support.class.builtin.js\n      pop: 1\n    - match: (?:Eval|Range|Reference|Syntax|Type|URI)?Error{{identifier_break}}\n      scope: support.class.builtin.js\n      pop: 1\n\n    - match: (?:eval|isFinite|isNaN|parseFloat|parseInt|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent){{identifier_break}}\n      scope: support.function.js\n      pop: 1\n\n  object-property-name:\n    - match: '{{identifier_name}}'\n      scope: string.unquoted.js\n      pop: true\n\n    - include: computed-property-name\n    - include: literal-string\n    - include: literal-number\n\n    - match: '{{identifier_name}}'\n      pop: 1\n\n    - include: else-pop\n\n  flow-arrow-function-declaration-with-type-parameters: []\n  flow-type-generic-arguments:\n    - match: <\n      scope: punctuation.definition.generic.begin.js region.greenish\n      set:\n        -   - meta_scope: meta.generic.js\n            - match: '>'\n              scope: punctuation.definition.generic.end.js\n              pop: true\n            - match: ','\n              scope: punctuation.separator.comma.js\n              push: flow-type\n            - match: (?=\\S)\n              fail: flow-arrow-function-return-type\n        - flow-type\n\n  expression-end-no-in:\n    - match: (?=in{{identifier_break}})\n      pop: 1\n    - include: expression-end\n\n  decorator-name:\n    - match: '{{identifier_name}}(?!\\s*[.\\(`])'\n      scope: variable.annotation.js\n      pop: 1\n\n  literal-string-template:\n    - match: \\`\n      scope: punctuation.definition.string.begin.js\n      set: literal-string-template-content\n\n  export-item:\n    - match: \\{\n      scope: punctuation.section.block.begin.js\n      set: export-brace\n    - match: '{{non_reserved_identifier}}'\n      scope: variable.other.readwrite.js\n      pop: 1\n    - match: \\*\n      scope: constant.other.js\n      pop: 1\n    - include: else-pop\n\n  jsx-tag-hack: []\n  flow-jsx-tag-check:\n    - match: (?=[:,])\n      fail: arrow-function\n    - include: else-pop\n  inherited-class-name:\n    - match: '{{non_reserved_identifier}}{{left_expression_end_lookahead}}'\n      scope: entity.other.inherited-class.js\n      pop: 1\n\n  flow-type-end:\n    - match: (?=\\|\\||&&)\n      fail: flow-function-type-arguments\n    - include: flow-type-operators\n    - include: flow-type-generic-arguments\n    - include: else-pop\n\n  conditional-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.conditional.js\n    - include: immediately-pop\n\n  literal-call:\n    - match: (?={{identifier_name}}\\s*(?:{{dot_accessor}})?\\()\n      set:\n        - call-function-meta\n        - function-call-arguments\n        - literal-variable\n\n    - match: (?={{identifier_name}}\\s*(?:{{dot_accessor}}\\s*#?{{identifier_name}}\\s*)+(?:{{dot_accessor}})?\\()\n      set:\n        - call-method-meta\n        - function-call-arguments\n        - call-path\n        - literal-variable\n\n  flow-type-begin:\n    - include: flow-type-existential\n    - include: flow-type-literal\n    - include: flow-type-special\n    - include: flow-type-primitive\n    - include: flow-type-utility\n    - include: flow-type-typeof\n    - include: flow-type-class\n    - include: flow-type-function\n    - include: flow-type-tuple\n    - include: flow-type-object\n\n    - include: else-pop\n\n  inherited-class-expression-begin:\n    - include: inherited-class-name\n    - include: expression-begin\n\n  do-while-condition:\n    - match: while{{identifier_break}}\n      scope: keyword.control.loop.while.js\n      set: parenthesized-expression\n    - include: else-pop\n\n  line-comment-triple-slash-body:\n    - meta_include_prototype: false\n    - meta_scope: comment.line.triple-slash.js\n    - include: line-comment-end\n\n  flow-type-object-indexer-type:\n    - match: \\]\n      scope: punctuation.section.brackets.end.js\n      pop: true\n    - include: flow-type-list\n\n  string-interpolations:\n    - match: \\$\\{\n      scope: punctuation.section.interpolation.begin.js\n      push: string-interpolation-content\n\n  call-path:\n    - match: '{{dot_accessor}}'\n      scope: punctuation.accessor.js\n      push: object-property\n    - include: else-pop\n\n  jsx-tag-name-end:\n    - match: '[:.]'\n      scope: punctuation.accessor.js\n      push: jsx-tag-name-component\n    - include: else-pop\n\n  function-declaration-expect-generator-star:\n    - match: \\*\n      scope: keyword.declaration.generator.js\n      pop: 1\n    - include: else-pop\n\n  support-property-ecma-object:\n    - match: (?:assign|create|defineProperties|defineProperty|entries|freeze|fromEntries|getOwnPropertyDescriptors?|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|keys|preventExtensions|seal|setPrototypeOf|values){{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  constructor-body-expect-arguments:\n    - include: function-call-arguments\n    - include: else-pop\n\n  decorator:\n    - match: '@'\n      scope: punctuation.definition.annotation.js\n      push:\n        - decorator-meta\n        - decorator-expression-end\n        - decorator-expression-begin\n\n  flow-type-declare-export:\n    - match: default{{identifier_break}}\n      scope: keyword.control.import-export.js\n      set: flow-type\n    - match: (?=\\S)\n      pop: true\n\n  custom-templates-closing-quote:\n    - meta_include_prototype: false\n    - meta_scope: meta.string.js string.quoted.other.js\n    - match: '`'\n      scope: punctuation.definition.string.end.js\n      pop: true\n    - include: immediately-pop\n\n  styled-component-keyframes-end:\n    - match: '`'\n      scope: string.quoted.other.js punctuation.definition.string.begin.js\n      push:\n        -   - include: immediately-pop\n        - custom-templates-closing-quote\n        - custom-templates-clear-scopes\n        -   - meta_include_prototype: false\n            - match: ''\n              set: scope:source.js.css#styled-components-keyframe-body\n              with_prototype:\n                - include: custom-templates-prototype\n    - include: else-pop\n\n  variable-binding-spread:\n    - match: \\.\\.\\.\n      scope: keyword.operator.spread.js\n      push: variable-binding-pattern\n\n  function-declaration-expect-parameters:\n    - include: function-declaration-parameters\n    - include: else-pop\n\n  jsx-tag-name-component:\n    - match: '{{jsx_identifier}}'\n      scope: entity.name.tag.js\n      pop: 1\n    - include: else-pop\n\n  variable-binding-top:\n    - match: (?={{binding_pattern_lookahead}})\n      set:\n        - initializer\n        - variable-binding-pattern\n    - include: else-pop\n\n  support-variable-node:\n    - match: global{{identifier_break}}\n      scope: support.type.object.node.js\n      pop: 1\n\n    - match: Buffer{{identifier_break}}\n      scope: support.class.node.js\n      pop: 1\n\n    - match: process{{identifier_break}}\n      scope: support.constant.node.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-node-process\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n\n    # Module-level variables\n    - match: (?:__dirname|__filename|exports){{identifier_break}}\n      scope: support.constant.node.js\n      pop: 1\n    - match: module{{identifier_break}}\n      scope: support.constant.node.js\n      set:\n        - match: '{{dot_accessor}}'\n          scope: punctuation.accessor.js\n          set:\n            - include: support-property-node-module\n            - include: object-property\n            - include: else-pop\n        - include: else-pop\n    - match: require{{identifier_break}}\n      scope: support.function.node.js\n      pop: 1\n\n  function-call-arguments:\n    - match: ({{dot_accessor}})?(\\()\n      captures:\n        1: punctuation.accessor.js\n        2: punctuation.section.group.begin.js\n      set:\n        - meta_scope: meta.group.js\n        - match: \\)\n          scope: punctuation.section.group.end.js\n          pop: 1\n        - include: expression-list\n\n  parenthesized-expression:\n    - match: \\(\n      scope: punctuation.section.group.begin.js\n      set:\n        - meta_scope: meta.group.js\n        - match: \\)\n          scope: punctuation.section.group.end.js\n          pop: true\n        - match: (?=:)\n          push: flow-type-annotation\n        - match: (?=\\S)\n          push: expression\n\n  support-property-node-process:\n    - match: (?:arch|argv|argv0|channel|config|connected|debugPort|env|execArgv|execPath|exitCode|mainModule|noDeprecation|pid|platform|ppid|release|stderr|stdin|stdout|throwDeprecation|title|traceDeprecation|version|versions){{identifier_break}}\n      scope: support.constant.node.js\n      pop: 1\n    - match: (?:abort|chdir|cpuUsage|cwd|disconnect|dlopen|emitWarning|exit|getegid|geteuid|getgit|getgroups|getuid|hasUncaughtExceptionCaptureCallback|hrtime|initGroups|kill|memoryUsage|nextTick|send|setegid|seteuid|setgid|setgroups|setuid|hasUncaughtExceptionCaptureCallback|umask|uptime){{identifier_break}}\n      scope: support.function.node.js\n      pop: 1\n\n  expression-begin:\n    - include: jsx-tag-hack\n\n    - include: flow-arrow-function-declaration-with-type-parameters\n\n    - include: literal-string-template-custom-tags\n    - include: styled-components\n\n    - match: (?=`)\n      set:\n        - include: literal-string-template-custom-comments\n        - include: custom-templates-default\n        - include: else-pop\n\n    - include: expression-break\n\n    - include: yield-expression\n    - include: await-expression\n\n    - include: regexp-complete\n    - include: literal-string\n    - include: literal-string-template\n    - include: constructor\n    - include: literal-number\n    - include: prefix-operators\n    - include: import-meta-expression\n\n    - include: class\n    - include: special-name\n\n    - include: regular-function\n\n    - match: (?={{reserved_word}})\n      pop: 1\n\n    - match: (?={{identifier_name}}{{function_assignment_lookahead}})\n      set:\n        - function-name-meta\n        - literal-variable\n\n    - include: object-literal\n\n    # Newline not allowed between `async` and parameters.\n    - match: (?=async{{identifier_break}}{{nothing}}{{possible_arrow_function_begin}})\n      pop: 1\n      branch_point: async-arrow-function\n      branch:\n        - async-arrow-function\n        - literal-variable\n\n    - include: literal-call\n\n    - match: (?={{possible_arrow_function_begin}})\n      pop: 1\n      branch_point: arrow-function\n      branch:\n        - branch-possible-arrow-function\n        - arrow-function-declaration\n\n    - include: array-literal\n\n    - include: literal-private-variable\n\n    - include: else-pop\n\n  field-name:\n    - match: '{{dollar_identifier}}'\n      scope: meta.mapping.key.dollar.js variable.other.readwrite.js\n      captures:\n        1: punctuation.dollar.js\n      pop: 1\n    - match: '{{identifier_name}}'\n      scope: variable.other.readwrite.js\n      pop: 1\n    - match: (#)({{identifier_name}})\n      captures:\n        1: punctuation.definition.variable.js\n        2: variable.other.readwrite.js\n      pop: 1\n    - match: \"'\"\n      scope: punctuation.definition.string.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: meta.string.js string.quoted.single.js\n        - meta_content_scope: variable.other.readwrite.js\n        - match: \\'\n          scope: punctuation.definition.string.end.js\n          pop: 1\n        - match: \\n\n          scope: invalid.illegal.newline.js\n          pop: 1\n        - include: string-content\n    - match: '\"'\n      scope: punctuation.definition.string.begin.js\n      set:\n        - meta_include_prototype: false\n        - meta_scope: meta.string.js string.quoted.double.js\n        - meta_content_scope: variable.other.readwrite.js\n        - match: \\\"\n          scope: punctuation.definition.string.end.js\n          pop: 1\n        - match: \\n\n          scope: invalid.illegal.newline.js\n          pop: 1\n        - include: string-content\n\n    - include: computed-property-name\n\n    - include: else-pop\n\n  support-property-ecma-proxy:\n    - match: revocable{{identifier_break}}\n      scope: support.function.builtin.js\n      pop: 1\n\n  binary-operators:\n    - match: instanceof{{identifier_break}}\n      scope: keyword.operator.js\n      push: expression-begin\n    - match: in{{identifier_break}}\n      scope: keyword.operator.js\n      push: expression-begin\n    - match: =(?![=>])\n      scope: keyword.operator.assignment.js\n      push: expression-begin\n    - match: |-\n        (?x)\n        %=   | # assignment      right-to-left   both\n        &=   | # assignment      right-to-left   both\n        \\*=  | # assignment      right-to-left   both\n        \\+=  | # assignment      right-to-left   both\n        -=   | # assignment      right-to-left   both\n        /=   | # assignment      right-to-left   both\n        \\^=  | # assignment      right-to-left   both\n        \\|=  | # assignment      right-to-left   both\n        <<=  | # assignment      right-to-left   both\n        >>=  | # assignment      right-to-left   both\n        >>>= | # assignment      right-to-left   both\n        &&=   |\n        \\|\\|= |\n        \\?\\?=\n      scope: keyword.operator.assignment.augmented.js\n      push: expression-begin\n    - match: '&&|\\|\\|'\n      scope: keyword.operator.logical.js\n      push: expression-begin\n    - match: \\?\\?\n      scope: keyword.operator.null-coalescing.js\n      push: expression-begin\n    - match: |-\n        (?x)\n        <<   | # bitwise-shift   left-to-right   both\n        >>>  | # bitwise-shift   left-to-right   both\n        >>   | # bitwise-shift   left-to-right   both\n        &    | # bitwise-and     left-to-right   both\n        \\^   | # bitwise-xor     left-to-right   both\n        \\|     # bitwise-or      left-to-right   both\n      scope: keyword.operator.bitwise.js\n      push: expression-begin\n    - match: |-\n        (?x)\n        <=   | # comparison      left-to-right   both\n        >=   | # comparison      left-to-right   both\n        <    | # comparison      left-to-right   both\n        >      # comparison      left-to-right   both\n      scope: keyword.operator.comparison.js\n      push: expression-begin\n    - match: |-\n        (?x)\n        ===  | # equality        left-to-right   both\n        !==  | # equality        left-to-right   both\n        ==   | # equality        left-to-right   both\n        !=     # equality        left-to-right   both\n      scope: keyword.operator.comparison.js\n      push: expression-begin\n    - match: |-\n        (?x)\n        /    | # division        left-to-right   both\n        %    | # modulus         left-to-right   both\n        \\*   | # multiplication  left-to-right   both\n        \\+   | # addition        left-to-right   both\n        -      # subtraction     left-to-right   both\n      scope: keyword.operator.arithmetic.js\n      push: expression-begin\n    - match: ','\n      scope: keyword.operator.comma.js # Comma operator, not punctuation.\n      push: expression-begin\n\n  expect-case-colon:\n    - match: ':'\n      scope: punctuation.separator.js\n      pop: 1\n    - include: else-pop\n\n  for-meta:\n    - meta_include_prototype: false\n    - meta_scope: meta.for.js\n    - include: immediately-pop\n\n  import-string-or-items:\n    - include: literal-string\n    - match: (?=\\S)\n      set:\n        - import-export-from\n        - import-list\n        - import-export-alias\n        - import-item\n\nname: JavaScript (Babel)\nfile_extensions:\n  - js\n  - jsx\n  - es6\n  - babel\nversion: 2\nvariables:\n  identifier_break: (?!{{identifier_part}})\n  either_func_lookahead: (?:{{func_lookahead}}|{{arrow_func_lookahead}})\n  identifier_start: (?:[_$\\p{L}\\p{Nl}]|{{identifier_escape}})\n  property_name: >-\n    (?x:\n      {{identifier_name}}\n      | [0-9]+\n      | '(?:[^\\\\']|\\\\.)*'\n      | \"(?:[^\\\\\"]|\\\\.)*\"\n      | \\[ .* \\]\n    )\n  jsx_identifier: '{{identifier_start}}{{jsx_identifier_part}}*{{jsx_identifier_break}}'\n  identifier_escape: (?:\\\\u(?:\\h{4}|\\{\\h+\\}))\n  binding_pattern_lookahead: (?:{{identifier_name}}|\\[|\\{)\n  line_ending_ahead: (?={{nothing}}(?:/\\*{{block_comment_contents}}|//.*)?$)\n  reserved_word: |-\n    (?x:\n      break|case|catch|class|const|continue|debugger|default|delete|do|else|\n      export|extends|finally|for|function|if|import|in|instanceof|new|return|\n      super|switch|this|throw|try|typeof|var|void|while|with|yield|\n      enum|\n      null|true|false\n    ){{identifier_break}}\n  constant_identifier: (?:[[:upper:]]{{identifier_part}}*{{identifier_break}})\n  oct_digit: '[0-7_]'\n  dollar_only_identifier: (?:\\${{identifier_break}})\n  dec_integer: (?:0|[1-9]{{dec_digit}}*)\n  jsx_identifier_break: (?!{{jsx_identifier_part}})\n  function_assignment_lookahead: |-\n    (?x:(?=\n      \\s* = \\s*\n      {{either_func_lookahead}}\n    ))\n  function_call_lookahead: >-\n    (?x:(?=\n      {{identifier_name}}\n      \\s*\n      (?:\n        <\n        .*\n        >\n        \\s*\n      )?\n      (?:{{dot_accessor}})?\n      \\(\n    ))\n  hex_digit: '[\\h_]'\n  func_lookahead: |-\n    (?x:\n      (?:async{{identifier_break}}{{nothing}})?\n      function{{identifier_break}}\n    )\n  shebang_lang: \\b(?:node|js)\\b\n  non_reserved_identifier: (?:(?!{{reserved_word}}){{identifier_name}})\n  bin_digit: '[01_]'\n  dollar_identifier: (?:(\\$){{identifier_part}}*{{identifier_break}})\n  identifier_name: (?:{{identifier_start}}{{identifier_part}}*{{identifier_break}})\n  identifier_part: (?:[_$\\p{L}\\p{Nl}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]|{{identifier_escape}})\n  dot_accessor: (?:\\??\\.)\n  dec_digit: '[0-9_]'\n  nothing: (?:(?:\\s|{{block_comment}})*)\n  jsx_identifier_part: (?:{{identifier_part}}|-)\n  possible_arrow_function_begin: (?:\\(|{{identifier_start}}|<)\n  left_expression_end_lookahead: (?!\\s*[.\\[\\(])\n  block_comment_contents: (?:(?:[^*]|\\*(?!/))*)\n  block_comment: (?:/\\*{{block_comment_contents}}\\*/)\n  jsdoc_block_tag: \\@[^\\n\\t\\f\\v *@]+\n  class_element_name: |-\n    (?x:\n      \\+?\n      (?:\n        \\*?\n        {{property_name}}\n        | \\#{{non_reserved_identifier}}\n      )\n    )\n  dec_exponent: '[Ee](?:[-+]|(?![-+])){{dec_digit}}*'\n  arrow_func_lookahead: |-\n    (?x)(?:\n      \\s*(async\\s*)?\n      (?:\n        {{non_reserved_identifier}}\n        |\\( (?: [^()]|\\([^()]*\\) )* \\)\n      )\n      (?:\n        \\s*:\n        \\s*{{non_reserved_identifier}}\n      )?\n      \\s*=>\n    )\n  method_lookahead: |-\n    (?x)(?=\n      (?: get|set|async ){{identifier_break}}(?!\\s*:)\n      | \\*\n      | {{property_name}} \\s* (?:\\(|<)\n    )\n  modifier: (?:(?:static|accessor){{identifier_break}})\nscope: source.js\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "Copyright (c) 2015 Andres Suarez\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Next.YAML-tmTheme",
          "type": "blob",
          "size": 19.6728515625,
          "content": "# [PackageDev] target_format: plist, ext: tmTheme\nname: Next\nuuid: 35279c3b-adad-473e-b960-fee631f4d9a5\n\nsettings:\n- settings:\n    activeGuide: '#3333FFFF'\n    background: '#000000'\n    bracketsBackground: '#FF00AA66'\n    bracketsOptions: background\n    caret: '#FF0099'\n    foreground: '#E6E6E6'\n    guide: '#33333388'\n    gutter: '#6600FF33'\n    invisibles: '#404040'\n    lineHighlight: '#FF009933'\n    multiEditHighlight: '#00FF0022'\n    searchHighlight: '#FF00AA99'\n    selection: '#00FFFF44'\n    stackGuide: '#333333CC'\n\n- name: bracket.curly\n  scope: bracket.curly\n  settings:\n    background: '#FF44AA'\n    foreground: '#3399FF'\n\n- name: bracket.square\n  scope: bracket.square\n  settings:\n    background: '#2266CC'\n    foreground: '#FF8800'\n\n- name: bracket.round\n  scope: bracket.round\n  settings:\n    background: '#9922FF'\n    foreground: '#00FF00'\n\n- name: bracket.quote\n  scope: bracket.quote\n  settings:\n    background: '#00FF00'\n\n- name: comment\n  scope: comment\n  settings:\n    fontStyle: italic\n    foreground: '#646464FF'\n\n- name: Invalid\n  scope: invalid\n  settings:\n    background: '#FF000022'\n\n- name: constant\n  scope: constant\n  settings:\n    foreground: '#3387CCFF'\n\n- name: Keyword\n  scope: keyword\n  settings:\n    foreground: '#E28964'\n\n- name: constant.numeric\n  scope: constant.numeric\n  settings:\n    foreground: '#FFFF66'\n\n- name: Storage\n  scope: storage\n  settings:\n    foreground: '#99CF50'\n\n- name: storage.modifier\n  scope: storage.modifier\n  settings:\n    foreground: '#CF5099'\n\n- name: storage.self\n  scope: storage.self\n  settings:\n    fontStyle: bold\n    foreground: '#CC0033'\n\n- name: storage.type\n  scope: storage.type\n  settings:\n    foreground: '#CF9950'\n\n- name: Support\n  scope: support\n  settings:\n    foreground: '#8A5C8DFF'\n\n- name: entity.name.function\n  scope: entity.name.function\n  settings:\n    foreground: '#BB00FF'\n\n- name: keyword control\n  scope: keyword.control\n  settings:\n    foreground: '#FF00FF'\n\n- name: keyword.control.declaration\n  scope: keyword.control.declaration\n  settings:\n    foreground: '#8888AA'\n\n- name: keyword.control.module\n  scope: keyword.control.module\n  settings:\n    background: '#FFFF3333'\n    foreground: '#FFFF33'\n    options: underline\n\n- name: keyword.control.flow\n  scope: keyword.control.flow\n  settings:\n    background: '#110300'\n    fontStyle: bold\n    foreground: '#FF6600'\n\n- name: keyword.control.conditional\n  scope: keyword.control.conditional\n  settings:\n    foreground: '#FF00FF'\n\n- name: keyword.control.trycatch\n  scope: keyword.control.trycatch\n  settings:\n    foreground: '#FF0033'\n\n- name: keyword.control.loop\n  scope: keyword.control.loop\n  settings:\n    foreground: '#009999'\n\n- name: keyword.control.switch\n  scope: keyword.control.switch\n  settings:\n    foreground: '#999999'\n\n- name: keyword operator\n  scope: keyword.operator\n  settings:\n    foreground: '#FF0080'\n\n- name: Function arg\n  scope: meta.function.argument, variable.parameter, meta.parens.c\n  settings:\n    foreground: '#77FF11'\n\n- name: ''\n  scope: punctuation.section.embedded\n  settings:\n    background: '#0D0D0D37'\n    foreground: '#00D3FFFF'\n\n- name: keyword.other.unit\n  scope: keyword.other.unit, keyword.unit.css\n  settings:\n    foreground: '#80FF00FF'\n\n- name: invalid.illegal\n  scope: invalid.illegal\n  settings:\n    background: '#562D56BF'\n    foreground: '#FD5FF1FF'\n\n- name: string.quoted source\n  scope: string.quoted source\n  settings:\n    foreground: '#DAEFA3'\n\n- name: string constant\n  scope: string constant\n  settings:\n    foreground: '#CFED81'\n\n- name: string.regexp\n  scope: string.regexp\n  settings:\n    foreground: '#6FFF17'\n\n- name: punctuation.definition.string\n  scope: punctuation.definition.string\n  settings:\n    background: '#15151501'\n    foreground: '#B4FF82'\n\n- name: string.regexp.special\n  scope: \"string.regexp constant.character.escape, string.regexp source.ruby.embedded, string.regexp string.regexp.arbitrary-repitition\"\n  settings:\n    foreground: '#00D505'\n\n- name: string.regexp punctuation keyword\n  scope: string.regexp punctuation keyword\n  settings:\n    foreground: '#C559FF'\n\n- name: string variable\n  scope: string variable\n  settings:\n    foreground: '#8A9A95'\n\n- name: support.function\n  scope: support.function\n  settings:\n    foreground: '#FCF352FF'\n\n- name: meta.tag\n  scope: meta.tag\n  settings:\n    foreground: '#4F9EFFFF'\n\n- name: meta.tag entity\n  scope: meta.tag entity\n  settings:\n    foreground: '#157EFF'\n\n- name: HTML/XML tag attribute value\n  scope: meta.tag string.quoted.double.html\n  settings:\n    foreground: '#E07D2C'\n\n- name: html5 tag\n  scope: meta.tag.block.any.html.html5\n  settings:\n    foreground: '#E88BFCFF'\n\n- name: html5 tag entity\n  scope: meta.tag.block.any.html.html5 entity\n  settings:\n    foreground: '#D730FAFF'\n\n- name: meta.tag.inline\n  scope: \"source entity.name.tag, source entity.other.attribute-name,meta.tag.inline, meta.tag.inline entity\"\n  settings:\n    foreground: '#87A7E2FF'\n\n- name: html js tag\n  scope: source.js.embedded.html entity.name.tag.script.html\n  settings:\n    foreground: '#FF3535'\n\n- name: html js tag braces\n  scope: source.js.embedded.html punctuation.definition.tag.html\n  settings:\n    foreground: '#FF1E1E'\n\n- name: html js tag url\n  scope: source.js.embedded.html string.quoted.double.html\n  settings:\n    foreground: '#FF9D9D'\n\n- name: Attribute\n  scope: entity.other.attribute-name\n  settings:\n    foreground: '#7349BEFF'\n\n- name: Meta Toc List\n  scope: meta.toc-list\n  settings:\n    background: '#162C1AFF'\n    foreground: '#BEFEC7FF'\n    options: underline\n\n- name: js variable readwrite\n  scope: meta.initialization, variable.other.readwrite.js\n  settings:\n    foreground: '#FF9122'\n\n- name: js variable dollar\n  scope: meta.initialization, variable.other.dollar.js\n  settings:\n    fontStyle: italic\n    foreground: '#FF9122'\n\n- name: js object\n  scope: variable.other.object.js\n  settings:\n    foreground: '#FFEE00'\n\n- name: js object with parent\n  scope: meta.property-name.js variable.other.object.js\n  settings:\n    foreground: '#FFFF88'\n\n- name: support.variable.property.js\n  scope: support.variable.property.js\n  settings:\n    foreground: '#3399FF'\n\n- name: variable.other.dot-access\n  scope: variable.other.dot-access\n  settings:\n    foreground: '#66FFDD'\n\n- name: variable.other.property.js\n  scope: variable.other.property.js\n  settings:\n    foreground: '#37C1BE'\n\n- name: punctuation.section.scope.square.js\n  scope: punctuation.section.scope.square.js\n  settings:\n    foreground: '#FF2404'\n\n- name: punctuation.section.scope.round.js, meta.brace.round\n  scope: punctuation.section.scope.round.js, meta.brace.round\n  settings:\n    foreground: '#1C38FF'\n\n- name: punctuation.definition.arrow.js\n  scope: punctuation.definition.arrow.js\n  settings:\n    background: '#001133'\n    fontStyle: bold\n    foreground: '#AA00FF'\n\n- name: entity.arrow.function.js\n  scope: entity.arrow.function.js\n  settings:\n    background: '#001133'\n    fontStyle: bold\n    foreground: '#AA00FF'\n\n- name: variable.language\n  scope: variable.language\n  settings:\n    foreground: '#AA0044'\n\n- name: variable.language.prototype\n  scope: variable.language.prototype\n  settings:\n    foreground: '#FF6600'\n\n- name: support.class.error.js\n  scope: support.class.error.js\n  settings:\n    foreground: '#FF5522'\n\n- name: support.class.builtin.js\n  scope: support.class.builtin.js\n  settings:\n    fontStyle: italic\n    foreground: '#FFEE00'\n\n- name: support.class.node.js\n  scope: support.class.node.js\n  settings:\n    foreground: '#1224FE'\n\n- name: entity.name.function.node.js\n  scope: entity.name.function.node.js\n  settings:\n    foreground: '#D84014'\n\n- name: support.keyword.node.js\n  scope: support.keyword.node.js\n  settings:\n    fontStyle: bold\n    foreground: '#99EF25'\n\n- name: variable.import.destructuring.js\n  scope: variable.import.destructuring.js\n  settings:\n    foreground: '#00BBFF'\n\n- name: other.object.key.js\n  scope: other.object.key.js\n  settings:\n    foreground: '#1C98C1'\n\n- name: meta.accessor.js punctuation.definition.parameters\n  scope: meta.accessor.js punctuation.definition.parameters\n  settings:\n    foreground: '#005588'\n\n- name: storage.type.accessor.js\n  scope: storage.type.accessor.js\n  settings:\n    background: '#001122'\n    fontStyle: bold italic\n    foreground: '#0066AA'\n\n- name: entity.name.module.js, variable.import.parameter.js, variable.other.class.js\n  scope: entity.name.module.js, variable.import.parameter.js, variable.other.class.js\n  settings:\n    background: '#220011'\n    foreground: '#FF0044'\n\n- name: storage.type.module.js, storage.type.export.js, storage.type.import.js, storage.type.from.js\n  scope: storage.type.module.js, storage.type.export.js, storage.type.import.js, storage.type.from.js\n  settings:\n    background: '#222211'\n    foreground: '#CCCC44'\n\n- name: storage.type.class.js, storage.type.extends.js\n  scope: storage.type.class.js, storage.type.extends.js\n  settings:\n    background: '#001122'\n    foreground: '#0044AA'\n\n- name: 'meta.function.call.class.static.js '\n  scope: 'meta.function.call.class.static.js '\n  settings:\n    foreground: '#880011'\n\n- name: variable.other.class.static.js\n  scope: variable.other.class.static.js\n  settings:\n    foreground: '#AA0066'\n\n- name: entity.name.accessor.js\n  scope: entity.name.accessor.js\n  settings:\n    background: '#001122'\n    fontStyle: bold italic\n    foreground: '#00FFCC'\n\n- name: entity.name.method.js\n  scope: entity.name.method.js\n  settings:\n    background: '#110022'\n    fontStyle: italic bold\n    foreground: '#AA00FF'\n\n- name: meta.method.js\n  scope: meta.method.js\n  settings:\n    fontStyle: bold\n    foreground: '#660099'\n\n- name: storage.type.function.js\n  scope: storage.type.function.js\n  settings:\n    fontStyle: bold\n    foreground: '#99CC44'\n\n- name: string.quoted.single\n  scope: string.quoted.single\n  settings:\n    foreground: '#88FFAAAA'\n\n- name: variable.other.quasi.js\n  scope: variable.other.quasi.js\n  settings:\n    foreground: '#FF0099'\n\n- name: string.quasi.js\n  scope: string.quasi.js\n  settings:\n    foreground: '#00FF00'\n\n- name: punctuation.quasi.element\n  scope: punctuation.quasi.element\n  settings:\n    foreground: '#008800'\n\n- name: entity.quasi.tag.name.js\n  scope: entity.quasi.tag.name.js\n  settings:\n    foreground: '#FFFF00'\n\n- name: meta.group.braces.square, punctuation.destructuring\n  scope: meta.group.braces.square string.quoted.single, punctuation.destructuring\n  settings:\n    foreground: '#47E9AC'\n\n- name: string.quoted.double\n  scope: string.quoted.double\n  settings:\n    foreground: '#11BB11'\n\n- name: punctuation.section.scope.curly.js\n  scope: punctuation.section.scope.curly.js\n  settings:\n    foreground: '#F9044E'\n\n- name: meta.delimiter.object.comma.js\n  scope: meta.delimiter.object.comma.js\n  settings:\n    foreground: '#00FFFF'\n\n- name: meta.group.braces.curly string.quoted.single\n  scope: meta.group.braces.curly string.quoted.single\n  settings:\n    foreground: '#16B853'\n\n- name: support.function\n  scope: support.function\n  settings:\n    foreground: '#B532FF'\n\n- name: punctuation.definition.string.begin.js\n  scope: punctuation.definition.string.begin.js\n  settings:\n    foreground: '#D2E20C'\n\n- name: punctuation.definition.string.end.js\n  scope: punctuation.definition.string.end.js\n  settings:\n    foreground: '#CEA30D'\n\n- name: instance constructor\n  scope: meta.class.inheritance, meta.instance.constructor\n  settings:\n    fontStyle: italic underline\n    foreground: '#E81E41'\n\n- name: entity.name.class.js\n  scope: entity.name.class.js\n  settings:\n    background: '#00FFFF33'\n    fontStyle: italic\n    foreground: '#00FFFF'\n\n- name: entity.name.extends.js\n  scope: entity.name.extends.js\n  settings:\n    background: '#00FF9933'\n    fontStyle: italic\n    foreground: '#00FF99'\n\n- name: function call\n  scope: meta.function-call entity.name.function\n  settings:\n    foreground: '#5B24FF'\n\n- name: function call with args\n  scope: meta.function-call.function.with-arguments.js\n  settings:\n    foreground: '#33FF00'\n\n- name: js brace\n  scope: meta.brace.curly.js\n  settings:\n    foreground: '#FF0099'\n\n- name: js paren\n  scope: meta.brace.round.js\n  settings:\n    background: '#000000FF'\n    foreground: '#D0C5FEFF'\n\n- name: js constant escape\n  scope: constant.character.escape\n  settings:\n    foreground: '#10CF62FF'\n\n- name: pseudo-class\n  scope: \"meta.selector.css entity.other.attribute-name.tag.pseudo-class\"\n  settings:\n    foreground: '#4FBC4B'\n\n- name: css selectors\n  scope: entity.namespace.unicode.css\n  settings:\n    foreground: '#FF4F4F'\n\n- name: entity.other.attribute-name.id\n  scope: entity.other.attribute-name.id\n  settings:\n    background: '#0B0028FF'\n    foreground: '#F20073FF'\n\n- name: class name\n  scope: meta.prototype support.class\n  settings:\n    foreground: '#FF0099'\n\n- name: support object\n  scope: support.object\n  settings:\n    fontStyle: bold\n    foreground: '#FFEE00'\n\n- name: class name prototype\n  scope: meta.prototype support.constant\n  settings:\n    foreground: '#FF6600'\n\n- name: prototype declaration\n  scope: meta.prototype.declaration.js\n  settings:\n    fontStyle: bold\n\n- name: js undefined\n  scope: constant.language.undefined.js\n  settings:\n    foreground: '#555588'\n\n- name: variable.other.constant.js\n  scope: variable.other.constant.js\n  settings:\n    background: '#003311'\n    foreground: '#00FF33'\n\n- name: 'false'\n  scope: constant.language.boolean.false\n  settings:\n    foreground: '#AAAA55'\n\n- name: 'true'\n  scope: constant.language.boolean.true\n  settings:\n    foreground: '#CC7744'\n\n- name: js null\n  scope: constant.language.null.js\n  settings:\n    foreground: '#558855'\n\n- name: css#id punctuation\n  scope: punctuation.definition.entity.id.css\n  settings:\n    background: '#0B0028'\n    foreground: '#FF489F'\n\n- name: css.class\n  scope: \"entity.other.attribute-name.class, source.css.less entity.other.attribute-name.class.css\"\n  settings:\n    background: '#0B0028'\n    foreground: '#9529B8'\n\n- name: css.class puntuation\n  scope: punctuation.definition.entity.class.css\n  settings:\n    background: '#0B0028FF'\n    foreground: '#CD87E4FF'\n\n- name: css pseudo element\n  scope: entity.other.attribute-name.pseudo-element.css\n  settings:\n    background: '#0B0028FF'\n    foreground: '#FF00FFFF'\n\n- name: css property-name\n  scope: support.type.property-name.css\n  settings:\n    foreground: '#B8EFECFF'\n\n- name: css @at-rule\n  scope: meta.preprocessor.at-rule keyword.control.at-rule\n  settings:\n    foreground: '#D7C271FF'\n\n- name: css color\n  scope: \"constant.other.color.rgb-value.css, support.constant.color.w3c-standard-color-name.css\"\n  settings:\n    foreground: '#FB7720FF'\n\n- name: css constants\n  scope: support.constant.property-value.css\n  settings:\n    foreground: '#7CE85EFF'\n\n- name: Puncation Termination\n  scope: punctuation.terminator, punctuation.separator\n  settings:\n    foreground: '#4BFCF8FF'\n\n- name: css constructor.argument\n  scope: meta.constructor.argument.css\n  settings:\n    foreground: '#8F9D6AFF'\n\n- name: diff.header\n  scope: meta.diff, meta.diff.header, entity.name.namespace\n  settings:\n    background: '#0E2231FF'\n    foreground: '#F8F8F8FF'\n\n- name: diff.deleted\n  scope: markup.deleted\n  settings:\n    background: '#420E09FF'\n    foreground: '#F8F8F8FF'\n\n- name: diff.changed\n  scope: markup.changed\n  settings:\n    background: '#4A410DFF'\n    foreground: '#F8F8F8FF'\n\n- name: diff.inserted\n  scope: markup.inserted\n  settings:\n    background: '#253B22FF'\n    foreground: '#F8F8F8FF'\n\n- name: 'Markup: Italic'\n  scope: markup.italic\n  settings:\n    fontStyle: italic\n    foreground: '#6AD500FF'\n\n- name: 'Markup: Underline'\n  scope: markup.underline\n  settings:\n    foreground: '#E18964FF'\n    options: underline\n\n- name: 'Markup: Quote'\n  scope: markup.quote\n  settings:\n    background: '#FEE09C12'\n    fontStyle: italic\n    foreground: '#E1D4B9FF'\n\n- name: 'Markup: Heading'\n  scope: markup.heading, markup.heading entity\n  settings:\n    background: '#DE3280FF'\n    foreground: '#FFFFFFFF'\n\n- name: 'Markup: List'\n  scope: markup.list\n  settings:\n    foreground: '#6657EAFF'\n\n- name: 'Markup: Raw'\n  scope: markup.raw\n  settings:\n    background: '#B1B3BA08'\n    foreground: '#578BB3FF'\n\n- name: 'Markup: Comment'\n  scope: markup comment\n  settings:\n    foreground: '#F67B37FF'\n\n- name: 'Markup: Separator'\n  scope: meta.separator\n  settings:\n    background: '#242424FF'\n    foreground: '#60A633FF'\n\n- name: Log Entry\n  scope: meta.line.entry.logfile, meta.line.exit.logfile\n  settings:\n    background: '#EEEEEE29'\n    foreground: '#F8F8F8FF'\n\n- name: Log Entry Error\n  scope: meta.line.error.logfile\n  settings:\n    background: '#751012'\n    foreground: '#F8F8F8'\n\n- name: JSON property top\n  scope: meta.structure.dictionary.json string.quoted.double\n  settings:\n    background: '#111111'\n    foreground: '#1144BB'\n\n- name: JSON property level 2\n  scope: \"meta.structure meta.structure.dictionary.json string.quoted.double\"\n  settings:\n    foreground: '#1122BB'\n\n- name: JSON property level 3\n  scope: \"meta.structure meta.structure meta.structure meta.structure.dictionary.json string.quoted.double\"\n  settings:\n    foreground: '#2938EB'\n\n- name: JSON property level 4\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.json string.quoted.double\"\n  settings:\n    foreground: '#6D7EF1'\n\n- name: JSON property level 5\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.json string.quoted.double\"\n  settings:\n    foreground: '#B3BBF7'\n\n- name: JSON value\n  scope: meta.structure.dictionary.value.json string.quoted.double\n  settings:\n    foreground: '#AA00AA'\n\n- name: JSON value level 2\n  scope: \"meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double\"\n  settings:\n    foreground: '#BF00BF'\n\n- name: JSON value level 3\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double\"\n  settings:\n    foreground: '#FF00FF'\n\n- name: JSON value level 4\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double\"\n  settings:\n    foreground: '#FF40FF'\n\n- name: JSON value level 5\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double\"\n  settings:\n    foreground: '#FF80FF'\n\n- name: JSON value string punctuation\n  scope: \"meta.structure.dictionary.value.json string punctuation.definition.string.double\"\n  settings:\n    foreground: '#8409FF'\n\n- name: JSON array value\n  scope: meta.structure.array.json string.quoted.double\n  settings:\n    foreground: '#5522AA'\n\n- name: JSON array value level 1\n  scope: \"meta.structure meta.structure meta.structure.array.json string.quoted.double\"\n  settings:\n    foreground: '#7017C8FF'\n\n- name: JSON array value level 2\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure.array.json string.quoted.double\"\n  settings:\n    foreground: '#9541E9FF'\n\n- name: JSON array value level 3\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure.array.json string.quoted.double\"\n  settings:\n    foreground: '#BA83F1FF'\n\n- name: JSON array value level 4\n  scope: \"meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.array.json string.quoted.double\"\n  settings:\n    foreground: '#DFC6F9FF'\n\n- name: JSON prop string punctuation\n  scope: \"meta.structure.dictionary.json string punctuation.definition.string\"\n  settings:\n    foreground: '#66BBDDFF'\n\n- name: JSON array string puntuation\n  scope: \"meta.structure.array.json string punctuation.definition.string\"\n  settings:\n    foreground: '#416BE9FF'\n\n- name: JSON array brackets\n  scope: meta.structure.array.json punctuation.definition.array\n  settings:\n    foreground: '#FCC401FF'\n\n- name: JSON object braces\n  scope: \"meta.structure.dictionary.json punctuation.definition.dictionary\"\n  settings:\n    foreground: '#FEDF76FF'\n"
        },
        {
          "name": "Next.tmTheme",
          "type": "blob",
          "size": 43.232421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<plist version=\"1.0\">\n<dict>\n\t<key>name</key>\n\t<string>Next</string>\n\t<key>settings</key>\n\t<array>\n\t\t<dict>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>activeGuide</key>\n\t\t\t\t<string>#3333FFFF</string>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#000000</string>\n\t\t\t\t<key>bracketsBackground</key>\n\t\t\t\t<string>#FF00AA66</string>\n\t\t\t\t<key>bracketsOptions</key>\n\t\t\t\t<string>background</string>\n\t\t\t\t<key>caret</key>\n\t\t\t\t<string>#FF0099</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E6E6E6</string>\n\t\t\t\t<key>guide</key>\n\t\t\t\t<string>#33333388</string>\n\t\t\t\t<key>gutter</key>\n\t\t\t\t<string>#6600FF33</string>\n\t\t\t\t<key>invisibles</key>\n\t\t\t\t<string>#404040</string>\n\t\t\t\t<key>lineHighlight</key>\n\t\t\t\t<string>#FF009933</string>\n\t\t\t\t<key>multiEditHighlight</key>\n\t\t\t\t<string>#00FF0022</string>\n\t\t\t\t<key>searchHighlight</key>\n\t\t\t\t<string>#FF00AA99</string>\n\t\t\t\t<key>selection</key>\n\t\t\t\t<string>#00FFFF44</string>\n\t\t\t\t<key>stackGuide</key>\n\t\t\t\t<string>#333333CC</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>bracket.curly</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>bracket.curly</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#FF44AA</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#3399FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>bracket.square</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>bracket.square</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#2266CC</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF8800</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>bracket.round</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>bracket.round</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#9922FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FF00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>bracket.quote</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>bracket.quote</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#00FF00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>comment</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>comment</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#646464FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Invalid</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>invalid</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#FF000022</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>constant</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#3387CCFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Keyword</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E28964</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.numeric</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFFF66</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Storage</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#99CF50</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.modifier</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.modifier</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CF5099</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.self</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.self</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CC0033</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.type</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.type</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CF9950</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Support</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#8A5C8DFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.function</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.function</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#BB00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword control</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.declaration</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.declaration</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#8888AA</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.module</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.module</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#FFFF3333</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFFF33</string>\n\t\t\t\t<key>options</key>\n\t\t\t\t<string>underline</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.flow</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.flow</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#110300</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF6600</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.conditional</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.conditional</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.trycatch</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.trycatch</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF0033</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.loop</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.loop</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#009999</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.control.switch</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.control.switch</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#999999</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword operator</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.operator</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF0080</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Function arg</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.function.argument, variable.parameter, meta.parens.c</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#77FF11</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string></string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.section.embedded</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0D0D0D37</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00D3FFFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>keyword.other.unit</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>keyword.other.unit, keyword.unit.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#80FF00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>invalid.illegal</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>invalid.illegal</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#562D56BF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FD5FF1FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.quoted source</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.quoted source</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#DAEFA3</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string constant</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string constant</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CFED81</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.regexp</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.regexp</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#6FFF17</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.definition.string</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.definition.string</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#15151501</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#B4FF82</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.regexp.special</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.regexp constant.character.escape, string.regexp source.ruby.embedded, string.regexp string.regexp.arbitrary-repitition</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00D505</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.regexp punctuation keyword</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.regexp punctuation keyword</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#C559FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string variable</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string variable</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#8A9A95</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.function</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.function</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FCF352FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.tag</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.tag</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#4F9EFFFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.tag entity</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.tag entity</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#157EFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>HTML/XML tag attribute value</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.tag string.quoted.double.html</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E07D2C</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>html5 tag</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.tag.block.any.html.html5</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E88BFCFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>html5 tag entity</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.tag.block.any.html.html5 entity</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#D730FAFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.tag.inline</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>source entity.name.tag, source entity.other.attribute-name,meta.tag.inline, meta.tag.inline entity</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#87A7E2FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>html js tag</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>source.js.embedded.html entity.name.tag.script.html</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF3535</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>html js tag braces</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>source.js.embedded.html punctuation.definition.tag.html</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF1E1E</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>html js tag url</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>source.js.embedded.html string.quoted.double.html</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF9D9D</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Attribute</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.other.attribute-name</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#7349BEFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Meta Toc List</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.toc-list</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#162C1AFF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#BEFEC7FF</string>\n\t\t\t\t<key>options</key>\n\t\t\t\t<string>underline</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js variable readwrite</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.initialization, variable.other.readwrite.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF9122</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js variable dollar</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.initialization, variable.other.dollar.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF9122</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js object</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.other.object.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFEE00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js object with parent</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.property-name.js variable.other.object.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFFF88</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.variable.property.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.variable.property.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#3399FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.other.dot-access</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.other.dot-access</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#66FFDD</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.other.property.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.other.property.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#37C1BE</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.section.scope.square.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.section.scope.square.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF2404</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.section.scope.round.js, meta.brace.round</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.section.scope.round.js, meta.brace.round</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#1C38FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.definition.arrow.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.definition.arrow.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#001133</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AA00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.arrow.function.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.arrow.function.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#001133</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AA00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.language</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.language</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AA0044</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.language.prototype</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.language.prototype</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF6600</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.class.error.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.class.error.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF5522</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.class.builtin.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.class.builtin.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFEE00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.class.node.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.class.node.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#1224FE</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.function.node.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.function.node.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#D84014</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.keyword.node.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.keyword.node.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#99EF25</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.import.destructuring.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.import.destructuring.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00BBFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>other.object.key.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>other.object.key.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#1C98C1</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.accessor.js punctuation.definition.parameters</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.accessor.js punctuation.definition.parameters</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#005588</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.type.accessor.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.type.accessor.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#001122</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#0066AA</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.module.js, variable.import.parameter.js, variable.other.class.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.module.js, variable.import.parameter.js, variable.other.class.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#220011</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF0044</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.type.module.js, storage.type.export.js, storage.type.import.js, storage.type.from.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.type.module.js, storage.type.export.js, storage.type.import.js, storage.type.from.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#222211</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CCCC44</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.type.class.js, storage.type.extends.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.type.class.js, storage.type.extends.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#001122</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#0044AA</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.function.call.class.static.js </string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.function.call.class.static.js </string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#880011</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.other.class.static.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.other.class.static.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AA0066</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.accessor.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.accessor.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#001122</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FFCC</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.method.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.method.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#110022</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AA00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.method.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.method.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#660099</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>storage.type.function.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>storage.type.function.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#99CC44</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.quoted.single</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.quoted.single</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#88FFAAAA</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.other.quasi.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.other.quasi.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF0099</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.quasi.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.quasi.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FF00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.quasi.element</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.quasi.element</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#008800</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.quasi.tag.name.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.quasi.tag.name.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFFF00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.group.braces.square, punctuation.destructuring</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.group.braces.square string.quoted.single, punctuation.destructuring</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#47E9AC</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>string.quoted.double</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#11BB11</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.section.scope.curly.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.section.scope.curly.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F9044E</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.delimiter.object.comma.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.delimiter.object.comma.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FFFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>meta.group.braces.curly string.quoted.single</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.group.braces.curly string.quoted.single</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#16B853</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support.function</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.function</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#B532FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.definition.string.begin.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.definition.string.begin.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#D2E20C</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>punctuation.definition.string.end.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.definition.string.end.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CEA30D</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>instance constructor</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.class.inheritance, meta.instance.constructor</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic underline</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E81E41</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.class.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.class.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#00FFFF33</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FFFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.extends.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.name.extends.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#00FF9933</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FF99</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>function call</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.function-call entity.name.function</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#5B24FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>function call with args</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.function-call.function.with-arguments.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#33FF00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js brace</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.brace.curly.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF0099</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js paren</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.brace.round.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#000000FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#D0C5FEFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js constant escape</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.character.escape</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#10CF62FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>pseudo-class</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.selector.css entity.other.attribute-name.tag.pseudo-class</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#4FBC4B</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css selectors</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.namespace.unicode.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF4F4F</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.other.attribute-name.id</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.other.attribute-name.id</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0B0028FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F20073FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>class name</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.prototype support.class</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF0099</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>support object</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.object</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFEE00</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>class name prototype</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.prototype support.constant</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF6600</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>prototype declaration</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.prototype.declaration.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>bold</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js undefined</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.language.undefined.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#555588</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.other.constant.js</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>variable.other.constant.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#003311</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#00FF33</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>false</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.language.boolean.false</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AAAA55</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>true</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.language.boolean.true</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CC7744</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>js null</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.language.null.js</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#558855</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css#id punctuation</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.definition.entity.id.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0B0028</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF489F</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css.class</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.other.attribute-name.class, source.css.less entity.other.attribute-name.class.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0B0028</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#9529B8</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css.class puntuation</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.definition.entity.class.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0B0028FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#CD87E4FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css pseudo element</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>entity.other.attribute-name.pseudo-element.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0B0028FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF00FFFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css property-name</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.type.property-name.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#B8EFECFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css @at-rule</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.preprocessor.at-rule keyword.control.at-rule</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#D7C271FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css color</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>constant.other.color.rgb-value.css, support.constant.color.w3c-standard-color-name.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FB7720FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css constants</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>support.constant.property-value.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#7CE85EFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Puncation Termination</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>punctuation.terminator, punctuation.separator</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#4BFCF8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>css constructor.argument</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.constructor.argument.css</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#8F9D6AFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>diff.header</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.diff, meta.diff.header, entity.name.namespace</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#0E2231FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F8F8F8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>diff.deleted</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.deleted</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#420E09FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F8F8F8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>diff.changed</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.changed</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#4A410DFF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F8F8F8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>diff.inserted</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.inserted</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#253B22FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F8F8F8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Italic</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.italic</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#6AD500FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Underline</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.underline</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E18964FF</string>\n\t\t\t\t<key>options</key>\n\t\t\t\t<string>underline</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Quote</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.quote</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#FEE09C12</string>\n\t\t\t\t<key>fontStyle</key>\n\t\t\t\t<string>italic</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#E1D4B9FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Heading</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.heading, markup.heading entity</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#DE3280FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FFFFFFFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: List</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.list</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#6657EAFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Raw</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup.raw</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#B1B3BA08</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#578BB3FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Comment</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>markup comment</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F67B37FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Markup: Separator</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.separator</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#242424FF</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#60A633FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Log Entry</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.line.entry.logfile, meta.line.exit.logfile</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#EEEEEE29</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F8F8F8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>Log Entry Error</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.line.error.logfile</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#751012</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#F8F8F8</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON property top</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.dictionary.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>background</key>\n\t\t\t\t<string>#111111</string>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#1144BB</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON property level 2</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure.dictionary.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#1122BB</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON property level 3</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure.dictionary.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#2938EB</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON property level 4</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#6D7EF1</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON property level 5</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#B3BBF7</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON value</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.dictionary.value.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#AA00AA</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON value level 2</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#BF00BF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON value level 3</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF00FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON value level 4</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF40FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON value level 5</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.dictionary.value.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FF80FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON value string punctuation</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.dictionary.value.json string punctuation.definition.string.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#8409FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array value</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.array.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#5522AA</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array value level 1</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure.array.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#7017C8FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array value level 2</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure.array.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#9541E9FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array value level 3</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure.array.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#BA83F1FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array value level 4</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure meta.structure.array.json string.quoted.double</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#DFC6F9FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON prop string punctuation</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.dictionary.json string punctuation.definition.string</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#66BBDDFF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array string puntuation</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.array.json string punctuation.definition.string</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#416BE9FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON array brackets</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.array.json punctuation.definition.array</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FCC401FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>name</key>\n\t\t\t<string>JSON object braces</string>\n\t\t\t<key>scope</key>\n\t\t\t<string>meta.structure.dictionary.json punctuation.definition.dictionary</string>\n\t\t\t<key>settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>foreground</key>\n\t\t\t\t<string>#FEDF76FF</string>\n\t\t\t</dict>\n\t\t</dict>\n\t</array>\n\t<key>uuid</key>\n\t<string>35279c3b-adad-473e-b960-fee631f4d9a5</string>\n</dict>\n</plist>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.2783203125,
          "content": "# babel-sublime\n\nLanguage definition for [modern JavaScript](http://kangax.github.io/compat-table/es2016plus/) with [JSX syntax](http://facebook.github.io/react/docs/jsx-in-depth.html), [Flow typing](https://flow.org/), and [Styled Components](https://styled-components.com/).\n\n## Installation\n\nFind it as [**Babel**](https://packagecontrol.io/packages/Babel) through [Package Control](https://packagecontrol.io/).\n\n#### Setting as the default syntax\n\nTo set it as the default syntax for a particular extension:\n\n1. Open a file with that extension,\n2. From the `View` menu, select `Syntax` → `Open all with current extension as…` → `Babel` → `JavaScript (Babel)`\n3. Repeat this for each extension (e.g.: `.js` and `.jsx`).\n\n#### Setting a Color Scheme\n\n`Babel` comes bundled with `Next` from [Benvie/JavaScriptNext.tmLanguage](https://github.com/Benvie/JavaScriptNext.tmLanguage). From the command palette, select `UI: Select Color Scheme` and select `Next`.\n\n## Screenshots\n\n![babel-sublime-vs-built-in-jsx](screenshots/compare-builtin-jsx@2x.png)\n\n## Snippets\n\nFind them separately at [babel/babel-sublime-snippets](https://github.com/babel/babel-sublime-snippets) or as [**Babel Snippets**](https://packagecontrol.io/packages/Babel%20Snippets) through [Package Control](https://packagecontrol.io/).\n\n## About\n\nUnder the hood, `babel-sublime`'s syntax definition is built using [JS Custom](https://github.com/Thom1729/Sublime-JS-Custom). JS Custom is based on Sublime's [core JavaScript syntax](https://github.com/sublimehq/Packages), which is in turn descended from [Benvie/JavaScriptNext.tmLanguage](https://github.com/Benvie/JavaScriptNext.tmLanguage). Special thanks go to [@jgebhardt](https://github.com/jgebhardt) and [@zpao](https://github.com/zpao).\n\n## Contributing\n\nThe `JavaScript (Babel).sublime-syntax` file itself is generated by JS Custom and should not be manually modified — any bug fixes or enhancements to the syntax itself should go through [JS Custom](https://github.com/Thom1729/Sublime-JS-Custom).\n\nIf you modify the commenting rules or Next theme, make sure to do so by editing the appropriate `YAML-tmPreferences` or `YAML-tmTheme` file and converting that file using [PackageDev](https://github.com/SublimeText/PackageDev). Then, commit both the source (YAML) file and the converted (XML) file.\n"
        },
        {
          "name": "Styled Components.sublime-syntax",
          "type": "blob",
          "size": 1.41796875,
          "content": "%YAML 1.2\n---\nversion: 2\nextends: Packages/CSS/CSS.sublime-syntax\nhidden: true\nscope: source.js.css\nfile_extensions: []\nfirst_line_match:\ncontexts:\n  main:\n    - meta_prepend: true\n    - match: (?=(?:{{html_tags}}|{{svg_tags}})(?!:))\n      push: styled-components-selector-body\n    - include: property-identifiers\n    - include: property-values\n\n  rule-list-body:\n    - meta_prepend: true\n    - include: main\n\n  comments:\n    - meta_prepend: true\n    - match: //\n      scope: punctuation.definition.comment.begin.css.styled-components\n      push:\n        - meta_scope: comment.line.double-slash.css.styled-components\n        - match: ^\n          pop: true\n\n  selectors:\n    - meta_prepend: true\n    - match: (?=&)\n      push: styled-components-selector-body\n\n  selector-body:\n    - meta_prepend: true\n    - match: \\&\n      scope: variable.language.css.styled-components\n\n  selector-content:\n    - meta_prepend: true\n    - match: \\&\n      scope: variable.language.css.styled-components\n\n  # Make sure that we handle both the old and new CSS context names\n  styled-components-selector-body:\n    - meta_scope: meta.selector.css\n    - include: selector-body\n    - include: selector-content\n\n  at-keyframe-block-body:\n    - meta_prepend: true\n\n  at-keyframe-block-content:\n    - meta_prepend: true\n\n  styled-components-keyframe-body:\n    - meta_scope: meta.at-rule.keyframe.css\n    - include: at-keyframe-block-body\n    - include: at-keyframe-block-content\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "messages.json",
          "type": "blob",
          "size": 0.2646484375,
          "content": "{\n  \"3.0.0\": \"messages/3.0.0.txt\",\n  \"4.0.0\": \"messages/4.0.0.txt\",\n  \"5.0.0\": \"messages/5.0.0.txt\",\n  \"7.1.0\": \"messages/7.1.0.txt\",\n  \"7.1.1\": \"messages/7.1.0.txt\",\n  \"8.0.0\": \"messages/8.0.0.txt\",\n  \"10.0.0\": \"messages/10.0.0.txt\",\n  \"11.0.0\": \"messages/11.0.0.txt\"\n}\n"
        },
        {
          "name": "messages",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.04296875,
          "content": "{\n  \"dependencies\": {},\n  \"private\": true\n}\n"
        },
        {
          "name": "plugin.py",
          "type": "blob",
          "size": 0.0888671875,
          "content": "from .build.build import BuildBabelPackageCommand\n\n\n__all__ = ['BuildBabelPackageCommand']\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}