{
  "metadata": {
    "timestamp": 1736561621839,
    "page": 178,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tj/ejs",
      "stars": 4468,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.060546875,
          "content": "# ignore any vim files:\n*.sw[a-z]\nvim/.netrwhist\nnode_modules\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0673828125,
          "content": "language: node_js\nnode_js:\n  - 0.11\n  - 0.10\n  - 0.9\n  - 0.6\n  - 0.8\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 2.876953125,
          "content": "\n1.0.0 / 2014-03-24\n==================\n\n * change: escape & even if it looks like an HTML entity. Don't try to prevent double-escaping.\n\n0.8.6 / 2014-03-21\n==================\n\n * fix: Escape & even if it looks like an HTML entity. Don't try to prevent double-escaping.\n\n0.8.5 / 2013-11-21\n==================\n\n * fix: Escape apostrophe & don't over-match existing entities\n * fix function name changed by uglify\n * fixes require, closes #78\n\n0.8.4 / 2013-05-08\n==================\n\n  * fix support for colons in filter arguments\n  * fix double callback when the callback throws\n  * rename escape option\n\n0.8.3 / 2012-09-13\n==================\n\n  * allow pre-compiling into a standalone function [seanmonstar]\n\n0.8.2 / 2012-08-16\n==================\n\n  * fix include \"open\" / \"close\" options. Closes #64\n\n0.8.1 / 2012-08-11\n==================\n\n  * fix comments. Closes #62 [Nate Silva]\n\n0.8.0 / 2012-07-25\n==================\n\n  * add `<% include file %>` support\n  * fix wrapping of custom require in build step. Closes #57\n\n0.7.3 / 2012-04-25\n==================\n\n  * Added repository to package.json [isaacs]\n\n0.7.1 / 2012-03-26\n==================\n\n  * Fixed exception when using express in production caused by typo. [slaskis]\n\n0.7.0 / 2012-03-24\n==================\n\n  * Added newline consumption support (`-%>`) [whoatemydomain]\n\n0.6.1 / 2011-12-09\n==================\n\n  * Fixed `ejs.renderFile()`\n\n0.6.0 / 2011-12-09\n==================\n\n  * Changed: you no longer need `{ locals: {} }`\n\n0.5.0 / 2011-11-20\n==================\n\n  * Added express 3.x support\n  * Added ejs.renderFile()\n  * Added 'json' filter\n  * Fixed tests for 0.5.x\n\n0.4.3 / 2011-06-20\n==================\n\n  * Fixed stacktraces line number when used multiline js expressions [Octave]\n\n0.4.2 / 2011-05-11\n==================\n\n  * Added client side support\n\n0.4.1 / 2011-04-21\n==================\n\n  * Fixed error context\n\n0.4.0 / 2011-04-21\n==================\n\n  * Added; ported jade's error reporting to ejs. [slaskis]\n\n0.3.1 / 2011-02-23\n==================\n\n  * Fixed optional `compile()` options\n\n0.3.0 / 2011-02-14\n==================\n\n  * Added 'json' filter [Yuriy Bogdanov]\n  * Use exported version of parse function to allow monkey-patching [Anatoliy Chakkaev]\n\n0.2.1 / 2010-10-07\n==================\n\n  * Added filter support\n  * Fixed _cache_ option. ~4x performance increase\n\n0.2.0 / 2010-08-05\n==================\n\n  * Added support for global tag config\n  * Added custom tag support. Closes #5\n  * Fixed whitespace bug. Closes #4\n\n0.1.0 / 2010-08-04\n==================\n\n  * Faster implementation [ashleydev]\n\n0.0.4 / 2010-08-02\n==================\n\n  * Fixed single quotes for content outside of template tags. [aniero]\n  * Changed; `exports.compile()` now expects only \"locals\"\n\n0.0.3 / 2010-07-15\n==================\n\n  * Fixed single quotes\n\n0.0.2 / 2010-07-09\n==================\n\n  * Fixed newline preservation\n\n0.0.1 / 2010-07-09\n==================\n\n  * Initial release\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3291015625,
          "content": "\nSRC = $(shell find lib -name \"*.js\" -type f)\nUGLIFY_FLAGS = --no-mangle \n\nall: ejs.min.js\n\ntest:\n\t@./node_modules/.bin/mocha \\\n\t\t--reporter spec\n\nejs.js: $(SRC)\n\t@node support/compile.js $^\n\nejs.min.js: ejs.js\n\t@uglifyjs $(UGLIFY_FLAGS) $< > $@ \\\n\t\t&& du ejs.min.js \\\n\t\t&& du ejs.js\n\nclean:\n\trm -f ejs.js\n\trm -f ejs.min.js\n\n.PHONY: test"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 5.16796875,
          "content": "# EJS\n\nEmbedded JavaScript templates.\n\n[![Build Status](https://travis-ci.org/visionmedia/ejs.png)](https://travis-ci.org/visionmedia/ejs)\n\n- - -\nNOTE: Version 2 of EJS makes some breaking changes with this version (notably,\nremoval of the filters feature).  Work on v2 is happening here:\nhttps://github.com/mde/ejs\n\nFile issues for EJS v2 here: https://github.com/mde/ejs/issues\n- - -\n\n## Installation\n\n    $ npm install ejs\n\n## Features\n\n  * Complies with the [Express](http://expressjs.com) view system\n  * Static caching of intermediate JavaScript\n  * Unbuffered code for conditionals etc `<% code %>`\n  * Escapes html by default with `<%= code %>`\n  * Unescaped buffering with `<%- code %>`\n  * Supports tag customization\n  * Filter support for designer-friendly templates\n  * Includes\n  * Client-side support\n  * Newline slurping with `<% code -%>` or `<% -%>` or `<%= code -%>` or `<%- code -%>`\n\n## Example\n\n    <% if (user) { %>\n\t    <h2><%= user.name %></h2>\n    <% } %>\n    \n## Try out a live example now\n\n<a href=\"https://runnable.com/ejs\" target=\"_blank\"><img src=\"https://runnable.com/external/styles/assets/runnablebtn.png\" style=\"width:67px;height:25px;\"></a>\n\n## Usage\n\n    ejs.compile(str, options);\n    // => Function\n\n    ejs.render(str, options);\n    // => str\n\n## Options\n\n  - `cache`           Compiled functions are cached, requires `filename`\n  - `filename`        Used by `cache` to key caches\n  - `scope`           Function execution context\n  - `debug`           Output generated function body\n  - `compileDebug`    When `false` no debug instrumentation is compiled\n  - `client`          Returns standalone compiled function\n  - `open`            Open tag, defaulting to \"<%\"\n  - `close`           Closing tag, defaulting to \"%>\"\n  - *                 All others are template-local variables\n\n## Includes\n\n Includes are relative to the template with the `include` statement,\n for example if you have \"./views/users.ejs\" and \"./views/user/show.ejs\"\n you would use `<% include user/show %>`. The included file(s) are literally\n included into the template, _no_ IO is performed after compilation, thus\n local variables are available to these included templates.\n\n```\n<ul>\n  <% users.forEach(function(user){ %>\n    <% include user/show %>\n  <% }) %>\n</ul>\n```\n\n## Custom delimiters\n\nCustom delimiters can also be applied globally:\n\n    var ejs = require('ejs');\n    ejs.open = '{{';\n    ejs.close = '}}';\n\nWhich would make the following a valid template:\n\n    <h1>{{= title }}</h1>\n\n## Filters\n\nEJS conditionally supports the concept of \"filters\". A \"filter chain\"\nis a designer friendly api for manipulating data, without writing JavaScript.\n\nFilters can be applied by supplying the _:_ modifier, so for example if we wish to take the array `[{ name: 'tj' }, { name: 'mape' },  { name: 'guillermo' }]` and output a list of names we can do this simply with filters:\n\nTemplate:\n\n    <p><%=: users | map:'name' | join %></p>\n\nOutput:\n\n    <p>Tj, Mape, Guillermo</p>\n\nRender call:\n\n    ejs.render(str, {\n        users: [\n          { name: 'tj' },\n          { name: 'mape' },\n          { name: 'guillermo' }\n        ]\n    });\n\nOr perhaps capitalize the first user's name for display:\n\n    <p><%=: users | first | capitalize %></p>\n\n## Filter list\n\nCurrently these filters are available:\n\n  - first\n  - last\n  - capitalize\n  - downcase\n  - upcase\n  - sort\n  - sort_by:'prop'\n  - size\n  - length\n  - plus:n\n  - minus:n\n  - times:n\n  - divided_by:n\n  - join:'val'\n  - truncate:n\n  - truncate_words:n\n  - replace:pattern,substitution\n  - prepend:val\n  - append:val\n  - map:'prop'\n  - reverse\n  - get:'prop'\n\n## Adding filters\n\n To add a filter simply add a method to the `.filters` object:\n \n```js\nejs.filters.last = function(obj) {\n  return obj[obj.length - 1];\n};\n```\n\n## Layouts\n\n  Currently EJS has no notion of blocks, only compile-time `include`s,\n  however you may still utilize this feature to implement \"layouts\" by\n  simply including a header and footer like so:\n\n```html\n<% include head %>\n<h1>Title</h1>\n<p>My page</p>\n<% include foot %>\n```\n\n## client-side support\n\n  include `./ejs.js` or `./ejs.min.js` and `require(\"ejs\").compile(str)`.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2009-2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "benchmark.js",
          "type": "blob",
          "size": 0.318359375,
          "content": "\n\nvar ejs = require('./lib/ejs'),\n    str = '<% if (foo) { %><p><%= foo %></p><% } %>',\n    times = 50000;\n\nconsole.log('rendering ' + times + ' times');\n\nvar start = new Date;\nwhile (times--) {\n    ejs.render(str, { cache: true, filename: 'test', locals: { foo: 'bar' }});\n}\n\nconsole.log('took ' + (new Date - start) + 'ms');"
        },
        {
          "name": "ejs.js",
          "type": "blob",
          "size": 13.1328125,
          "content": "ejs = (function(){\n\n// CommonJS require()\n\nfunction require(p){\n    if ('fs' == p) return {};\n    if ('path' == p) return {};\n    var path = require.resolve(p)\n      , mod = require.modules[path];\n    if (!mod) throw new Error('failed to require \"' + p + '\"');\n    if (!mod.exports) {\n      mod.exports = {};\n      mod.call(mod.exports, mod, mod.exports, require.relative(path));\n    }\n    return mod.exports;\n  }\n\nrequire.modules = {};\n\nrequire.resolve = function (path){\n    var orig = path\n      , reg = path + '.js'\n      , index = path + '/index.js';\n    return require.modules[reg] && reg\n      || require.modules[index] && index\n      || orig;\n  };\n\nrequire.register = function (path, fn){\n    require.modules[path] = fn;\n  };\n\nrequire.relative = function (parent) {\n    return function(p){\n      if ('.' != p.substr(0, 1)) return require(p);\n      \n      var path = parent.split('/')\n        , segs = p.split('/');\n      path.pop();\n      \n      for (var i = 0; i < segs.length; i++) {\n        var seg = segs[i];\n        if ('..' == seg) path.pop();\n        else if ('.' != seg) path.push(seg);\n      }\n\n      return require(path.join('/'));\n    };\n  };\n\n\nrequire.register(\"ejs.js\", function(module, exports, require){\n\n/*!\n * EJS\n * Copyright(c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils')\n  , path = require('path')\n  , dirname = path.dirname\n  , extname = path.extname\n  , join = path.join\n  , fs = require('fs')\n  , read = fs.readFileSync;\n\n/**\n * Filters.\n *\n * @type Object\n */\n\nvar filters = exports.filters = require('./filters');\n\n/**\n * Intermediate js cache.\n *\n * @type Object\n */\n\nvar cache = {};\n\n/**\n * Clear intermediate js cache.\n *\n * @api public\n */\n\nexports.clearCache = function(){\n  cache = {};\n};\n\n/**\n * Translate filtered code into function calls.\n *\n * @param {String} js\n * @return {String}\n * @api private\n */\n\nfunction filtered(js) {\n  return js.substr(1).split('|').reduce(function(js, filter){\n    var parts = filter.split(':')\n      , name = parts.shift()\n      , args = parts.join(':') || '';\n    if (args) args = ', ' + args;\n    return 'filters.' + name + '(' + js + args + ')';\n  });\n};\n\n/**\n * Re-throw the given `err` in context to the\n * `str` of ejs, `filename`, and `lineno`.\n *\n * @param {Error} err\n * @param {String} str\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nfunction rethrow(err, str, filename, lineno){\n  var lines = str.split('\\n')\n    , start = Math.max(lineno - 3, 0)\n    , end = Math.min(lines.length, lineno + 3);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\n/**\n * Parse the given `str` of ejs, returning the function body.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nvar parse = exports.parse = function(str, options){\n  var options = options || {}\n    , open = options.open || exports.open || '<%'\n    , close = options.close || exports.close || '%>'\n    , filename = options.filename\n    , compileDebug = options.compileDebug !== false\n    , buf = \"\";\n\n  buf += 'var buf = [];';\n  if (false !== options._with) buf += '\\nwith (locals || {}) { (function(){ ';\n  buf += '\\n buf.push(\\'';\n\n  var lineno = 1;\n\n  var consumeEOL = false;\n  for (var i = 0, len = str.length; i < len; ++i) {\n    var stri = str[i];\n    if (str.slice(i, open.length + i) == open) {\n      i += open.length\n\n      var prefix, postfix, line = (compileDebug ? '__stack.lineno=' : '') + lineno;\n      switch (str[i]) {\n        case '=':\n          prefix = \"', escape((\" + line + ', ';\n          postfix = \")), '\";\n          ++i;\n          break;\n        case '-':\n          prefix = \"', (\" + line + ', ';\n          postfix = \"), '\";\n          ++i;\n          break;\n        default:\n          prefix = \"');\" + line + ';';\n          postfix = \"; buf.push('\";\n      }\n\n      var end = str.indexOf(close, i);\n\n      if (end < 0){\n        throw new Error('Could not find matching close tag \"' + close + '\".');\n      }\n\n      var js = str.substring(i, end)\n        , start = i\n        , include = null\n        , n = 0;\n\n      if ('-' == js[js.length-1]){\n        js = js.substring(0, js.length - 2);\n        consumeEOL = true;\n      }\n\n      if (0 == js.trim().indexOf('include')) {\n        var name = js.trim().slice(7).trim();\n        if (!filename) throw new Error('filename option is required for includes');\n        var path = resolveInclude(name, filename);\n        include = read(path, 'utf8');\n        include = exports.parse(include, { filename: path, _with: false, open: open, close: close, compileDebug: compileDebug });\n        buf += \"' + (function(){\" + include + \"})() + '\";\n        js = '';\n      }\n\n      while (~(n = js.indexOf(\"\\n\", n))) n++, lineno++;\n      if (js.substr(0, 1) == ':') js = filtered(js);\n      if (js) {\n        if (js.lastIndexOf('//') > js.lastIndexOf('\\n')) js += '\\n';\n        buf += prefix;\n        buf += js;\n        buf += postfix;\n      }\n      i += end - start + close.length - 1;\n\n    } else if (stri == \"\\\\\") {\n      buf += \"\\\\\\\\\";\n    } else if (stri == \"'\") {\n      buf += \"\\\\'\";\n    } else if (stri == \"\\r\") {\n      // ignore\n    } else if (stri == \"\\n\") {\n      if (consumeEOL) {\n        consumeEOL = false;\n      } else {\n        buf += \"\\\\n\";\n        lineno++;\n      }\n    } else {\n      buf += stri;\n    }\n  }\n\n  if (false !== options._with) buf += \"'); })();\\n} \\nreturn buf.join('');\";\n  else buf += \"');\\nreturn buf.join('');\";\n  return buf;\n};\n\n/**\n * Compile the given `str` of ejs into a `Function`.\n *\n * @param {String} str\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nvar compile = exports.compile = function(str, options){\n  options = options || {};\n  var escape = options.escape || utils.escape;\n\n  var input = JSON.stringify(str)\n    , compileDebug = options.compileDebug !== false\n    , client = options.client\n    , filename = options.filename\n        ? JSON.stringify(options.filename)\n        : 'undefined';\n\n  if (compileDebug) {\n    // Adds the fancy stack trace meta info\n    str = [\n      'var __stack = { lineno: 1, input: ' + input + ', filename: ' + filename + ' };',\n      rethrow.toString(),\n      'try {',\n      exports.parse(str, options),\n      '} catch (err) {',\n      '  rethrow(err, __stack.input, __stack.filename, __stack.lineno);',\n      '}'\n    ].join(\"\\n\");\n  } else {\n    str = exports.parse(str, options);\n  }\n\n  if (options.debug) console.log(str);\n  if (client) str = 'escape = escape || ' + escape.toString() + ';\\n' + str;\n\n  try {\n    var fn = new Function('locals, filters, escape, rethrow', str);\n  } catch (err) {\n    if ('SyntaxError' == err.name) {\n      err.message += options.filename\n        ? ' in ' + filename\n        : ' while compiling ejs';\n    }\n    throw err;\n  }\n\n  if (client) return fn;\n\n  return function(locals){\n    return fn.call(this, locals, filters, escape, rethrow);\n  }\n};\n\n/**\n * Render the given `str` of ejs.\n *\n * Options:\n *\n *   - `locals`          Local variables object\n *   - `cache`           Compiled functions are cached, requires `filename`\n *   - `filename`        Used by `cache` to key caches\n *   - `scope`           Function execution context\n *   - `debug`           Output generated function body\n *   - `open`            Open tag, defaulting to \"<%\"\n *   - `close`           Closing tag, defaulting to \"%>\"\n *\n * @param {String} str\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nexports.render = function(str, options){\n  var fn\n    , options = options || {};\n\n  if (options.cache) {\n    if (options.filename) {\n      fn = cache[options.filename] || (cache[options.filename] = compile(str, options));\n    } else {\n      throw new Error('\"cache\" option requires \"filename\".');\n    }\n  } else {\n    fn = compile(str, options);\n  }\n\n  options.__proto__ = options.locals;\n  return fn.call(options.scope, options);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `fn(err, str)`.\n *\n * @param {String} path\n * @param {Object|Function} options or callback\n * @param {Function} fn\n * @api public\n */\n\nexports.renderFile = function(path, options, fn){\n  var key = path + ':string';\n\n  if ('function' == typeof options) {\n    fn = options, options = {};\n  }\n\n  options.filename = path;\n\n  var str;\n  try {\n    str = options.cache\n      ? cache[key] || (cache[key] = read(path, 'utf8'))\n      : read(path, 'utf8');\n  } catch (err) {\n    fn(err);\n    return;\n  }\n  fn(null, exports.render(str, options));\n};\n\n/**\n * Resolve include `name` relative to `filename`.\n *\n * @param {String} name\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nfunction resolveInclude(name, filename) {\n  var path = join(dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) path += '.ejs';\n  return path;\n}\n\n// express support\n\nexports.__express = exports.renderFile;\n\n/**\n * Expose to require().\n */\n\nif (require.extensions) {\n  require.extensions['.ejs'] = function (module, filename) {\n    filename = filename || module.filename;\n    var options = { filename: filename, client: true }\n      , template = fs.readFileSync(filename).toString()\n      , fn = compile(template, options);\n    module._compile('module.exports = ' + fn.toString() + ';', filename);\n  };\n} else if (require.registerExtension) {\n  require.registerExtension('.ejs', function(src) {\n    return compile(src, {});\n  });\n}\n\n}); // module: ejs.js\n\nrequire.register(\"filters.js\", function(module, exports, require){\n/*!\n * EJS - Filters\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * First element of the target `obj`.\n */\n\nexports.first = function(obj) {\n  return obj[0];\n};\n\n/**\n * Last element of the target `obj`.\n */\n\nexports.last = function(obj) {\n  return obj[obj.length - 1];\n};\n\n/**\n * Capitalize the first letter of the target `str`.\n */\n\nexports.capitalize = function(str){\n  str = String(str);\n  return str[0].toUpperCase() + str.substr(1, str.length);\n};\n\n/**\n * Downcase the target `str`.\n */\n\nexports.downcase = function(str){\n  return String(str).toLowerCase();\n};\n\n/**\n * Uppercase the target `str`.\n */\n\nexports.upcase = function(str){\n  return String(str).toUpperCase();\n};\n\n/**\n * Sort the target `obj`.\n */\n\nexports.sort = function(obj){\n  return Object.create(obj).sort();\n};\n\n/**\n * Sort the target `obj` by the given `prop` ascending.\n */\n\nexports.sort_by = function(obj, prop){\n  return Object.create(obj).sort(function(a, b){\n    a = a[prop], b = b[prop];\n    if (a > b) return 1;\n    if (a < b) return -1;\n    return 0;\n  });\n};\n\n/**\n * Size or length of the target `obj`.\n */\n\nexports.size = exports.length = function(obj) {\n  return obj.length;\n};\n\n/**\n * Add `a` and `b`.\n */\n\nexports.plus = function(a, b){\n  return Number(a) + Number(b);\n};\n\n/**\n * Subtract `b` from `a`.\n */\n\nexports.minus = function(a, b){\n  return Number(a) - Number(b);\n};\n\n/**\n * Multiply `a` by `b`.\n */\n\nexports.times = function(a, b){\n  return Number(a) * Number(b);\n};\n\n/**\n * Divide `a` by `b`.\n */\n\nexports.divided_by = function(a, b){\n  return Number(a) / Number(b);\n};\n\n/**\n * Join `obj` with the given `str`.\n */\n\nexports.join = function(obj, str){\n  return obj.join(str || ', ');\n};\n\n/**\n * Truncate `str` to `len`.\n */\n\nexports.truncate = function(str, len, append){\n  str = String(str);\n  if (str.length > len) {\n    str = str.slice(0, len);\n    if (append) str += append;\n  }\n  return str;\n};\n\n/**\n * Truncate `str` to `n` words.\n */\n\nexports.truncate_words = function(str, n){\n  var str = String(str)\n    , words = str.split(/ +/);\n  return words.slice(0, n).join(' ');\n};\n\n/**\n * Replace `pattern` with `substitution` in `str`.\n */\n\nexports.replace = function(str, pattern, substitution){\n  return String(str).replace(pattern, substitution || '');\n};\n\n/**\n * Prepend `val` to `obj`.\n */\n\nexports.prepend = function(obj, val){\n  return Array.isArray(obj)\n    ? [val].concat(obj)\n    : val + obj;\n};\n\n/**\n * Append `val` to `obj`.\n */\n\nexports.append = function(obj, val){\n  return Array.isArray(obj)\n    ? obj.concat(val)\n    : obj + val;\n};\n\n/**\n * Map the given `prop`.\n */\n\nexports.map = function(arr, prop){\n  return arr.map(function(obj){\n    return obj[prop];\n  });\n};\n\n/**\n * Reverse the given `obj`.\n */\n\nexports.reverse = function(obj){\n  return Array.isArray(obj)\n    ? obj.reverse()\n    : String(obj).split('').reverse().join('');\n};\n\n/**\n * Get `prop` of the given `obj`.\n */\n\nexports.get = function(obj, prop){\n  return obj[prop];\n};\n\n/**\n * Packs the given `obj` into json string\n */\nexports.json = function(obj){\n  return JSON.stringify(obj);\n};\n\n}); // module: filters.js\n\nrequire.register(\"utils.js\", function(module, exports, require){\n\n/*!\n * EJS\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function(html){\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&#39;')\n    .replace(/\"/g, '&quot;');\n};\n \n\n}); // module: utils.js\n\n return require(\"ejs\");\n})();"
        },
        {
          "name": "ejs.min.js",
          "type": "blob",
          "size": 7.515625,
          "content": "ejs=function(){function require(p){if(\"fs\"==p)return{};if(\"path\"==p)return{};var path=require.resolve(p),mod=require.modules[path];if(!mod)throw new Error('failed to require \"'+p+'\"');if(!mod.exports){mod.exports={};mod.call(mod.exports,mod,mod.exports,require.relative(path))}return mod.exports}require.modules={};require.resolve=function(path){var orig=path,reg=path+\".js\",index=path+\"/index.js\";return require.modules[reg]&&reg||require.modules[index]&&index||orig};require.register=function(path,fn){require.modules[path]=fn};require.relative=function(parent){return function(p){if(\".\"!=p.substr(0,1))return require(p);var path=parent.split(\"/\"),segs=p.split(\"/\");path.pop();for(var i=0;i<segs.length;i++){var seg=segs[i];if(\"..\"==seg)path.pop();else if(\".\"!=seg)path.push(seg)}return require(path.join(\"/\"))}};require.register(\"ejs.js\",function(module,exports,require){var utils=require(\"./utils\"),path=require(\"path\"),dirname=path.dirname,extname=path.extname,join=path.join,fs=require(\"fs\"),read=fs.readFileSync;var filters=exports.filters=require(\"./filters\");var cache={};exports.clearCache=function(){cache={}};function filtered(js){return js.substr(1).split(\"|\").reduce(function(js,filter){var parts=filter.split(\":\"),name=parts.shift(),args=parts.join(\":\")||\"\";if(args)args=\", \"+args;return\"filters.\"+name+\"(\"+js+args+\")\"})}function rethrow(err,str,filename,lineno){var lines=str.split(\"\\n\"),start=Math.max(lineno-3,0),end=Math.min(lines.length,lineno+3);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}var parse=exports.parse=function(str,options){var options=options||{},open=options.open||exports.open||\"<%\",close=options.close||exports.close||\"%>\",filename=options.filename,compileDebug=options.compileDebug!==false,buf=\"\";buf+=\"var buf = [];\";if(false!==options._with)buf+=\"\\nwith (locals || {}) { (function(){ \";buf+=\"\\n buf.push('\";var lineno=1;var consumeEOL=false;for(var i=0,len=str.length;i<len;++i){var stri=str[i];if(str.slice(i,open.length+i)==open){i+=open.length;var prefix,postfix,line=(compileDebug?\"__stack.lineno=\":\"\")+lineno;switch(str[i]){case\"=\":prefix=\"', escape((\"+line+\", \";postfix=\")), '\";++i;break;case\"-\":prefix=\"', (\"+line+\", \";postfix=\"), '\";++i;break;default:prefix=\"');\"+line+\";\";postfix=\"; buf.push('\"}var end=str.indexOf(close,i);if(end<0){throw new Error('Could not find matching close tag \"'+close+'\".')}var js=str.substring(i,end),start=i,include=null,n=0;if(\"-\"==js[js.length-1]){js=js.substring(0,js.length-2);consumeEOL=true}if(0==js.trim().indexOf(\"include\")){var name=js.trim().slice(7).trim();if(!filename)throw new Error(\"filename option is required for includes\");var path=resolveInclude(name,filename);include=read(path,\"utf8\");include=exports.parse(include,{filename:path,_with:false,open:open,close:close,compileDebug:compileDebug});buf+=\"' + (function(){\"+include+\"})() + '\";js=\"\"}while(~(n=js.indexOf(\"\\n\",n)))n++,lineno++;if(js.substr(0,1)==\":\")js=filtered(js);if(js){if(js.lastIndexOf(\"//\")>js.lastIndexOf(\"\\n\"))js+=\"\\n\";buf+=prefix;buf+=js;buf+=postfix}i+=end-start+close.length-1}else if(stri==\"\\\\\"){buf+=\"\\\\\\\\\"}else if(stri==\"'\"){buf+=\"\\\\'\"}else if(stri==\"\\r\"){}else if(stri==\"\\n\"){if(consumeEOL){consumeEOL=false}else{buf+=\"\\\\n\";lineno++}}else{buf+=stri}}if(false!==options._with)buf+=\"'); })();\\n} \\nreturn buf.join('');\";else buf+=\"');\\nreturn buf.join('');\";return buf};var compile=exports.compile=function(str,options){options=options||{};var escape=options.escape||utils.escape;var input=JSON.stringify(str),compileDebug=options.compileDebug!==false,client=options.client,filename=options.filename?JSON.stringify(options.filename):\"undefined\";if(compileDebug){str=[\"var __stack = { lineno: 1, input: \"+input+\", filename: \"+filename+\" };\",rethrow.toString(),\"try {\",exports.parse(str,options),\"} catch (err) {\",\"  rethrow(err, __stack.input, __stack.filename, __stack.lineno);\",\"}\"].join(\"\\n\")}else{str=exports.parse(str,options)}if(options.debug)console.log(str);if(client)str=\"escape = escape || \"+escape.toString()+\";\\n\"+str;try{var fn=new Function(\"locals, filters, escape, rethrow\",str)}catch(err){if(\"SyntaxError\"==err.name){err.message+=options.filename?\" in \"+filename:\" while compiling ejs\"}throw err}if(client)return fn;return function(locals){return fn.call(this,locals,filters,escape,rethrow)}};exports.render=function(str,options){var fn,options=options||{};if(options.cache){if(options.filename){fn=cache[options.filename]||(cache[options.filename]=compile(str,options))}else{throw new Error('\"cache\" option requires \"filename\".')}}else{fn=compile(str,options)}options.__proto__=options.locals;return fn.call(options.scope,options)};exports.renderFile=function(path,options,fn){var key=path+\":string\";if(\"function\"==typeof options){fn=options,options={}}options.filename=path;var str;try{str=options.cache?cache[key]||(cache[key]=read(path,\"utf8\")):read(path,\"utf8\")}catch(err){fn(err);return}fn(null,exports.render(str,options))};function resolveInclude(name,filename){var path=join(dirname(filename),name);var ext=extname(name);if(!ext)path+=\".ejs\";return path}exports.__express=exports.renderFile;if(require.extensions){require.extensions[\".ejs\"]=function(module,filename){filename=filename||module.filename;var options={filename:filename,client:true},template=fs.readFileSync(filename).toString(),fn=compile(template,options);module._compile(\"module.exports = \"+fn.toString()+\";\",filename)}}else if(require.registerExtension){require.registerExtension(\".ejs\",function(src){return compile(src,{})})}});require.register(\"filters.js\",function(module,exports,require){exports.first=function(obj){return obj[0]};exports.last=function(obj){return obj[obj.length-1]};exports.capitalize=function(str){str=String(str);return str[0].toUpperCase()+str.substr(1,str.length)};exports.downcase=function(str){return String(str).toLowerCase()};exports.upcase=function(str){return String(str).toUpperCase()};exports.sort=function(obj){return Object.create(obj).sort()};exports.sort_by=function(obj,prop){return Object.create(obj).sort(function(a,b){a=a[prop],b=b[prop];if(a>b)return 1;if(a<b)return-1;return 0})};exports.size=exports.length=function(obj){return obj.length};exports.plus=function(a,b){return Number(a)+Number(b)};exports.minus=function(a,b){return Number(a)-Number(b)};exports.times=function(a,b){return Number(a)*Number(b)};exports.divided_by=function(a,b){return Number(a)/Number(b)};exports.join=function(obj,str){return obj.join(str||\", \")};exports.truncate=function(str,len,append){str=String(str);if(str.length>len){str=str.slice(0,len);if(append)str+=append}return str};exports.truncate_words=function(str,n){var str=String(str),words=str.split(/ +/);return words.slice(0,n).join(\" \")};exports.replace=function(str,pattern,substitution){return String(str).replace(pattern,substitution||\"\")};exports.prepend=function(obj,val){return Array.isArray(obj)?[val].concat(obj):val+obj};exports.append=function(obj,val){return Array.isArray(obj)?obj.concat(val):obj+val};exports.map=function(arr,prop){return arr.map(function(obj){return obj[prop]})};exports.reverse=function(obj){return Array.isArray(obj)?obj.reverse():String(obj).split(\"\").reverse().join(\"\")};exports.get=function(obj,prop){return obj[prop]};exports.json=function(obj){return JSON.stringify(obj)}});require.register(\"utils.js\",function(module,exports,require){exports.escape=function(html){return String(html).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/'/g,\"&#39;\").replace(/\"/g,\"&quot;\")}});return require(\"ejs\")}();"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.0380859375,
          "content": "\nmodule.exports = require('./lib/ejs');"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.3974609375,
          "content": "{\n  \"name\": \"ejs\",\n  \"description\": \"Embedded JavaScript templates\",\n  \"version\": \"1.0.0\",\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca>\",\n  \"keywords\": [\"template\", \"engine\", \"ejs\"],\n  \"devDependencies\": {\n    \"mocha\": \"*\",\n    \"should\": \"*\"\n  },\n  \"main\": \"./lib/ejs.js\",\n  \"repository\": \"git://github.com/visionmedia/ejs.git\",\n  \"scripts\": {\n    \"test\": \"mocha --require should --reporter spec\"\n  }\n}\n"
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}