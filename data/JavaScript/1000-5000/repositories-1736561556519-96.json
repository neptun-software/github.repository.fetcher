{
  "metadata": {
    "timestamp": 1736561556519,
    "page": 96,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bespokejs/bespoke",
      "stars": 4689,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2294921875,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\nindent_style = space\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "node_modules\nlib-instrumented\ntest/coverage\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.591796875,
          "content": "{\n  \"curly\": true,\n  \"eqeqeq\": true,\n  \"immed\": true,\n  \"latedef\": true,\n  \"newcap\": false,\n  \"noarg\": true,\n  \"sub\": true,\n  \"undef\": true,\n  \"boss\": true,\n  \"eqnull\": true,\n  \"expr\": true,\n  \"browser\": true,\n  \"node\": true,\n  \"trailing\": true,\n  \"unused\": true,\n  \"strict\": false,\n  \"maxcomplexity\": 4,\n  \"maxparams\": 5,\n  \"maxdepth\": 2,\n  \"globals\": {\n    \"console\": true,\n    \"bespoke\": true,\n    \"describe\": true,\n    \"xdescribe\": true,\n    \"it\": true,\n    \"xit\": true,\n    \"expect\": true,\n    \"beforeEach\": true,\n    \"afterEach\": true,\n    \"runs\": true,\n    \"waitsFor\": true,\n    \"sinon\": true\n  }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3330078125,
          "content": "sudo: false\ndist: trusty\ngit:\n  depth: 2\nlanguage: node_js\nnode_js:\n- &release_node v0.10\n- v0.12\n- v4\n- v6\n- v8\n#before_install:\n#- npm -g install npm@latest\nafter_script:\n- npm run coveralls\ndeploy:\n  provider: npm\n  email: ${NPM_EMAIL}\n  api_key: ${NPM_AUTH_TOKEN}\n  on:\n    tags: true\n    repo: bespokejs/bespoke\n    node: *release_node\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.271484375,
          "content": "# Contributing\n\n## Important notes\nPlease don't edit files in the `dist` subdirectory as they are generated via [gulp](https://github.com/gulpjs/gulp). You'll find source code in the `src` subdirectory!\n\n### Code style\nRegarding code style like indentation and whitespace, **follow the conventions you see used in the source already.**\n\n## Modifying the code\nFirst, ensure that you have the latest [Node.js](http://nodejs.org/) and [npm](http://npmjs.org/) installed.\n\nTest that gulp is installed globally by running `gulp --version` at the command-line.  If gulp isn't installed globally, run `npm install -g gulp` to install the latest version.\n\n1. Fork and clone the repo.\n1. Run `npm install` to install all dependencies (including gulp).\n1. Run `gulp` to build this project.\n\nAssuming that you don't see any red, you're ready to go. Just be sure to run `gulp` after making any changes, to ensure that nothing is broken.\n\n## Submitting pull requests\n\n1. Create a new branch, please don't work in your `master` branch directly.\n1. Add failing tests for the change you want to make. Run `gulp` to see the tests fail.\n1. Fix stuff.\n1. Run `gulp` to see if the tests pass. Repeat steps 2-4 until done.\n1. Update the documentation to reflect any changes.\n1. Push to your fork and submit a pull request.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2014 Mark Dalgleish\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.7705078125,
          "content": "[![Build Status](https://img.shields.io/travis/bespokejs/bespoke/master.svg?style=flat)](http://travis-ci.org/bespokejs/bespoke) [![Coverage Status](https://img.shields.io/coveralls/bespokejs/bespoke/master.svg?style=flat)](https://coveralls.io/r/bespokejs/bespoke) [![Gitter](https://img.shields.io/badge/gitter-join%20chat-45cba1.svg?style=flat)](https://gitter.im/bespokejs/bespoke)\n\n# Bespoke.js\n\n### DIY Presentation Micro-Framework\n\n[Bespoke.js](http://markdalgleish.com/projects/bespoke.js) is a super minimal (1KB min'd and gzipped), modular presentation library for modern browsers, designed to foster a rich [plugin ecosystem](#plugins).\n\nThe core library [sets up the presentation](#javascript), provides a simple [control API](#control-api) and manages [events](#events). Any other functionality is implemented as a [plugin](#plugins).\n\nJoining the Bespoke.js ecosystem is simple with the suite of official [Yeoman](http://yeoman.io) generators:\n - [Bespoke.js Generator](https://github.com/bespokejs/generator-bespoke)\n - [Bespoke.js Plugin Generator](https://github.com/bespokejs/generator-bespokeplugin)\n - [Bespoke.js Theme Generator](https://github.com/bespokejs/generator-bespoketheme)\n\n## Creating a Presentation\n\nDue to the highly modular nature of Bespoke.js, the quickest way to get started is with [Bespoke.js Generator](https://github.com/bespokejs/generator-bespoke), a [Yeoman](http://yeoman.io) generator that scaffolds a boilerplate presentation with a [Gulp](http://gulpjs.com) build system.\n\nAssuming you have [Node.js](http://nodejs.org) installed, in a blank directory:\n\n```bash\n$ npm install -g generator-bespoke\n$ yo bespoke\n```\n\nIn your newly scaffolded project, you can use the following Gulp tasks:\n\n * ```$ gulp serve``` to run a preview server with LiveReload.\n * ```$ gulp deploy``` to deploy to GitHub Pages.\n * ```$ gulp``` to compile static assets to 'public'.\n\nFor more detailed instructions, check out the [Bespoke.js Generator](https://github.com/bespokejs/generator-bespoke) repo.\n\nIf you'd prefer to craft a new presentation from scratch, you can install Bespoke.js from [npm](http://npmjs.org) with `npm install bespoke`, [Bower](http://bower.io) with `bower install bespoke.js`, or manually download either the [production version][min] or the [development version][max]. The Bespoke.js core is extremely lightweight, so you'll probably want to include some [plugins](#plugins).\n\n[min]: https://raw.github.com/bespokejs/bespoke/master/dist/bespoke.min.js\n[max]: https://raw.github.com/bespokejs/bespoke/master/dist/bespoke.js\n\n## Basic Usage\n\n### Loading Bespoke\n\nBespoke.js is shipped in a [UMD format](https://github.com/umdjs/umd), meaning that `bespoke` and its plugins are available as CommonJS/AMD modules or browser globals.\n\n### Markup\n\nIt's completely up to you which tags you use, but the following is a good starting point:\n\n```html\n<article id=\"presentation\">\n  <section>Slide 1</section>\n  <section>Slide 2</section>\n  <section>Slide 3</section>\n</article>\n```\n\n#### JavaScript\n\nTo create a new presentation, Bespoke.js provides the `from(selector[, plugins])` method, which takes a selector or element reference and an array of [plugins](#plugins), and returns a [deck instance](#deck-instances).\n\n```js\nvar deck = bespoke.from('#presentation', [plugins]);\n\n// Next slide\ndeck.next();\n\n// Previous slide\ndeck.prev();\n\n// Go to a specific slide\ndeck.slide(0);\n\n// Get the active slide index\ndeck.slide(); // 0\n```\n\nBy default, all non-script child elements of the resolved parent element become slides.\nYou can customize this behavior by passing a custom selector.\n\n## Plugins\n\n### Official Plugins\n\nAll official plugins can be installed from npm or Bower, e.g. `$ npm install bespoke-keys` or `$ bower install bespoke-touch`\n\n - [bespoke-keys](https://github.com/bespokejs/bespoke-keys) for keyboard and remote control interaction.\n - [bespoke-touch](https://github.com/bespokejs/bespoke-touch) for touch interaction.\n - [bespoke-classes](https://github.com/bespokejs/bespoke-classes) for deck status classes.\n - [bespoke-bullets](https://github.com/bespokejs/bespoke-bullets) for animated bullet lists.\n - [bespoke-scale](https://github.com/bespokejs/bespoke-scale) for responsive slide scaling.\n - [bespoke-hash](https://github.com/bespokejs/bespoke-hash) for hash routing.\n - [bespoke-backdrop](https://github.com/bespokejs/bespoke-backdrop) for animated backdrop elements.\n - [bespoke-state](https://github.com/bespokejs/bespoke-state) for slide-specific deck styles.\n - [bespoke-progress](https://github.com/bespokejs/bespoke-progress) for progress bars.\n - [bespoke-forms](https://github.com/bespokejs/bespoke-forms) for form element support.\n - [bespoke-loop](https://github.com/bespokejs/bespoke-loop) for looped presentations.\n - [bespoke-vcr](https://github.com/bespokejs/bespoke-vcr) for recording and playback.\n\n### All Plugins\n\nYou can view the [full list of Bespoke.js plugins on npm](https://www.npmjs.org/browse/keyword/bespoke-plugin) by browsing the [bespoke-plugin](https://www.npmjs.org/browse/keyword/bespoke-plugin) keyword.\n\n### Using Plugins\n\nAll official plugins are provided in a [UMD format](https://github.com/umdjs/umd), meaning they are available as CommonJS/AMD modules or browser globals.\n\nFor example, if you're using CommonJS modules via [browserify](http://browserify.org/) or [webpack](http://webpack.github.io/), it would look something like this:\n\n```js\nvar bespoke = require('bespoke'),\n  classes = require('bespoke-classes'),\n  keys = require('bespoke-keys'),\n  touch = require('bespoke-touch');\n\nvar deck = bespoke.from('#presentation', [\n  classes(),\n  keys(),\n  touch()\n]);\n```\n\nIf you're using browser globals, all official plugins are added to the `bespoke.plugins` object, for example:\n\n```js\nvar deck = bespoke.from('#presentation', [\n  bespoke.plugins.classes(),\n  bespoke.plugins.keys(),\n  bespoke.plugins.touch()\n]);\n```\n\nThe first slide is activated automatically after all plugins are called unless one of those plugins has already activated a slide.\n\n## Themes\n\n### Official Themes\n\n - [Cube](https://github.com/bespokejs/bespoke-theme-cube) &mdash; [(view demo)](http://bespokejs.github.io/bespoke-theme-cube)\n - [Voltaire](https://github.com/bespokejs/bespoke-theme-voltaire) &mdash; [(view demo)](http://bespokejs.github.io/bespoke-theme-voltaire)\n - [Nebula](https://github.com/bespokejs/bespoke-theme-nebula) &mdash; [(view demo)](http://bespokejs.github.io/bespoke-theme-nebula)\n\nAs with plugins, all official themes can be installed from npm or Bower, e.g. `$ npm install bespoke-theme-cube` or `$ bower install bespoke-theme-voltaire`\n\n### All Themes\n\nYou can view the [full list of Bespoke.js themes on npm](https://www.npmjs.org/browse/keyword/bespoke-theme) by browsing the [bespoke-theme](https://www.npmjs.org/browse/keyword/bespoke-theme) keyword.\n\n### Using Themes\n\nThemes are included just like any other plugin:\n\n```js\nvar bespoke = require('bespoke'),\n  cube = require('bespoke-theme-cube'),\n  keys = require('bespoke-keys'),\n  touch = require('bespoke-touch');\n\nvar deck = bespoke.from('#presentation', [\n  cube(),\n  keys(),\n  touch()\n]);\n```\n\nIf you're using browser globals, all official themes are added to the `bespoke.themes` object, for example:\n\n```js\nvar deck = bespoke.from('#presentation', [\n  bespoke.themes.cube(),\n  bespoke.plugins.keys(),\n  bespoke.plugins.touch()\n]);\n```\n\n## Advanced Usage\n\n### From HTMLElement\n\nIf you already have a reference to a DOM node, you can pass it directly to the `from` method.\n\n```js\nbespoke.from(element);\n```\n\n### Slide Selector\n\nYou can specify which elements become slides by passing an options Hash containing the key `parent` and, optionally, the key `slides`) to the `from` method.\nThe value of either key can be a CSS selector or a DOM node.\n\n```js\nbespoke.from({ parent: selectorOrElement, slides: selectorOrElementList });\n```\n\nFor example:\n\n```js\nbespoke.from({ parent: '#presentation', slides: '#presentation > section' });\n```\n\nThis advanced usage allows you to include auxiliary HTML inside the parent element, skip slides that don't match the selector or explicitly filter out slides before passing on the collection.\n\n### Deck Instances\n\nDeck instances are provided to plugins and returned when instantiating a presentation. The following properties are available on each instance.\n\n*Note: The optional [`eventData`](#custom-event-data) parameter is an object that will be merged with the `event` object in subsequent [event handlers](#events).*\n\n<table>\n  <tr>\n    <td><strong>next(<em>[eventData]</em>)</strong></td>\n    <td>Next slide.</td>\n  </tr>\n  <tr>\n    <td><strong>prev(<em>[eventData]</em>)</strong></td>\n    <td>Previous slide.</td>\n  </tr>\n  <tr>\n    <td><strong>slide([<em>index[, eventData]]</em>)</strong></td>\n    <td>Get or set the active slide index.</td>\n  </tr>\n  <tr>\n    <td><strong>on(<em>event, callback</em>)</strong></td>\n    <td>Attach <a href=\"#events\">event handlers</a></td>\n  </tr>\n  <tr>\n    <td><strong>off(<em>event, callback</em>)</strong></td>\n    <td>Unbind <a href=\"#events\">event handlers</a></td>\n  </tr>\n  <tr>\n    <td><strong>fire(<em>event[, eventData]</em>)</strong></td>\n    <td>Fire custom events. <em>This method is primarily designed for plugin authors.</em></td>\n  </tr>\n  <tr>\n    <td><strong>parent</strong></td>\n    <td>The deck's parent element</td>\n  </tr>\n  <tr>\n    <td><strong>slides</strong></td>\n    <td>An array of slide elements</td>\n  </tr>\n  <tr>\n    <td><strong>destroy</strong></td>\n    <td>Fire the destroy event. <em>This method can be used to remove the deck from the DOM.</em></td>\n  </tr>\n</table>\n\n### Events\n\n##### Binding Events\n\nEvents are bound via the [deck instance](#deck-instances). Each event is passed an event object containing a reference to the relevant slide and its index.\n\n```js\ndeck.on(eventName, function(event) {\n  event.slide; // Relevant slide\n  event.index; // Index of relevant slide\n\n  // Prevent default functionality (for deck interaction events only)\n  return false;\n});\n```\n\n##### Standard Events\n\nIn most cases, you will only need to use these standard events.\n\n<table>\n  <tr>\n    <td><strong>activate</strong></td>\n    <td>A slide has been activated. <strong>event.slide</strong> is the <em>activated</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>deactivate</strong></td>\n    <td>A slide has been deactivated. <strong>event.slide</strong> is the <em>deactivated</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>destroy</strong></td>\n    <td>Presentation is about to be destroyed, it's time for clean-up.</td>\n  </tr>\n</table>\n\n##### Deck Interaction Events\n\nThese events are fired when the deck has been interacted with, but *before* the interaction has had any effect.\n\nThis allows you to intercept the default behaviour by returning `false` from the event handler.\n\n<table>\n  <tr>\n    <td><strong>next</strong></td>\n    <td>The next slide has been requested, even if last slide is active. <strong>event.slide</strong> is the <em>current</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>prev</strong></td>\n    <td>The previous slide has been requested, even if first slide is active. <strong>event.slide</strong> is the <em>current</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>slide</strong></td>\n    <td>A specific slide has been requested. <strong>event.slide</strong> is the <em>requested</em> slide.</td>\n  </tr>\n</table>\n\n##### Unbinding events\n\nWhen binding events, the `on` method returns a function that can be used to remove the event handler.\n\n```js\nvar off = deck.on('activate', function() {\n  // ...\n});\n\n// Unbind event\noff();\n```\n\nYou can also use the `off` method. However, you must use the same function reference that was used when registering the event.\n\n```js\n// Bind event\ndeck.on('activate', onActivate);\n\n// Unbind event\ndeck.off('activate', onActivate);\n```\n\n## Creating Plugins\n\nWant a boilerplate plugin? Use the official [Bespoke.js Plugin Generator](https://github.com/bespokejs/generator-bespokeplugin).\n\nIf you'd like to learn by example, check out the [list of existing plugins](#plugins).\n\n### Basic Plugins\n\nPlugins are simply functions that are called when presentations are created. They are passed a [deck instance](#deck-instances) which allows you to interact with the deck's state, bind events and modify its elements.\n\nTo be consistent with the suite of official Bespoke.js plugins, it is highly recommended that you implement your plugin as a function that takes configuration and returns a plugin function.\n\n```js\n// Creating the plugin\nvar myPlugin = function() {\n  return function() {\n    deck.on('activate', function(e) {\n      console.log('Activated slide ' + (e.index + 1) + ' of ' + deck.slides.length);\n    });\n  }\n};\n```\n\nThe plugin can now be provided in the plugins array when using the `from(selector[, plugins])` method.\n\n```js\n// Using the plugin\nbespoke.from('#presentation', [\n  myPlugin()\n]);\n```\n\n### Plugins with Options\n\nIf your plugin needs some configurability, your plugin factory function can take options and return a configured plugin function.\n\n```js\n// Creating the plugin with options\nvar myPlugin = function(options) {\n  return function(deck) {\n    var showTotal = options && options.showTotal;\n\n    deck.on('activate', function(e) {\n      console.log('Activated slide ' + (e.index + 1) +\n        (showTotal ? ' of ' + deck.slides.length : ''));\n    });\n  }\n};\n\n// Using the plugin with options\nbespoke.from('#presentation', [\n  myPlugin({ showTotal: true })\n]);\n```\n\n### Custom Event Data\n\nAdditional event data can be supplied to `next`, `prev` and `slide`, which is merged with the final `event` object in subsequent event handlers.\n\nThis functionality is particularly useful if you need to differentiate between events caused by your plugin, and those caused by your end users or other plugins.\n\n```js\nvar myPlugin = function() {\n  return function(deck) {\n\n    // Differentiating our plugin's events\n    deck.on('activate', function(event) {\n      if (event.foo === 'bar') {\n        // Triggered by my plugin...\n      } else {\n        // Triggered by end user, or another plugin...\n      }\n    });\n\n    // Providing custom event data\n    deck.next({\n      foo: 'bar'\n    });\n\n  };\n}\n```\n\n## Creating Themes\n\nThemes are essentially just plugins that also happen to insert styles into the page.\n\nYou can quickly scaffold a boilerplate theme project with the official [Bespoke.js Theme Generator](https://github.com/bespokejs/generator-bespoketheme).\n\n## Presentations\n\n - [A State of Change — On the future of Object.observe](https://github.com/markdalgleish/presentation-a-state-of-change-object-observe) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [Build Wars: Gulp vs Grunt](http://markdalgleish.github.io/presentation-build-wars-gulp-vs-grunt/) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [Bespoke.js: The Road to 1KB](http://markdalgleish.github.io/presentation-bespoke.js-the-road-to-1kb/) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [DIY Presentations With Bespoke.js](http://markdalgleish.com/presentations/bespoke.js/) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [Javascript's Slightly Stricter Mode](http://geelen.github.io/web-directions-talk/) by [Glen Maddern](http://twitter.com/glenmaddern)\n - [The Trials of Transition Height: Auto](http://superhighfives.github.io/tweetflight-presentation/) by [Charlie Gleason](http://twitter.com/superhighfives)\n - [Welcome Our New ES5 Overlords](http://mikemaccana.github.io/rejectjs2013) by [Mike MacCana](https://twitter.com/mikemaccana)\n - [Rapid Web App Dev With Yeoman](http://mjt01.github.io/slides-yeoman/) by [Michael Taranto](http://twitter.com/michaeltaranto)\n - [Projects vs Products](http://joho.github.io/wdyk/) by [John Barton](http://twitter.com/johnbarton)\n - [Learn You The Node.js For Much Win](http://r.va.gg/presentations/campjs-learn-you-node/) by [Rod Vagg](http://twitter.com/rvagg)\n - [A Real Database Rethink](http://r.va.gg/presentations/nodeconfeu.2013) by [Rod Vagg](http://twitter.com/rvagg)\n - [Feature Flags with Directives](http://mjt01.github.io/slides-feature-flags/) by [Michael Taranto](http://twitter.com/michaeltaranto)\n - [Introduction to hapi](http://wolfe.id.au/presentations/hapi/) by [Mark Wolfe](http://twitter.com/wolfeidau)\n - [How to Cook a Graph Database in a Night](http://nodejsconfit.levelgraph.io) by [Matteo Collina](http://twitter.com/matteocollina)\n - [Asynchronous JavaScript Interfaces](http://medikoo.com/asynchronous-javascript-interfaces/?notes) by [Mariusz Nowak](http://medikoo.com)\n - [MQTT and Node.js - Messaging in the Internet of Things](http://mcollina.github.io/mqtt_and_nodejs/) by [Matteo Collina](http://twitter.com/matteocollina)\n - [At Least 6 Ways to Win with CSS Modules](https://github.com/joshwnj/6-ways-to-win) by [Josh Johnston](https://twitter.com/joshwnj)\n\nMade a presentation with Bespoke.js? [Let me know](http://twitter.com/markdalgleish).\n\n## Questions?\n\nContact me on GitHub or Twitter: [@markdalgleish](http://twitter.com/markdalgleish)\n\n## License\n\n[MIT License](http://markdalgleish.mit-license.org)\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.0869140625,
          "content": "{\n  \"name\": \"bespoke.js\",\n  \"main\": \"./dist/bespoke.js\",\n  \"ignore\": [\n    \"**/.*\"\n  ]\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 2.189453125,
          "content": "var pkg = require('./package.json'),\n  browserify = require('browserify'),\n  buffer = require('vinyl-buffer'),\n  coveralls = require('gulp-coveralls'),\n  del = require('del'),\n  gulp = require('gulp'),\n  gutil = require('gulp-util'),\n  gzip = require('gulp-gzip'),\n  header = require('gulp-header'),\n  jshint = require('gulp-jshint'),\n  karma = require('karma'),\n  micro = require('gulp-micro'),\n  rename = require('gulp-rename'),\n  source = require('vinyl-source-stream'),\n  uglify = require('gulp-uglify');\n\ngulp.task('default', ['clean', 'lint', 'test', 'compile']);\ngulp.task('dev', ['compile', 'lint', 'test', 'watch']);\n\ngulp.task('watch', function() {\n  gulp.watch('lib/**/*.js', ['test', 'lint', 'compile']);\n  gulp.watch('test/spec/**/*.js', ['test']);\n});\n\ngulp.task('clean', function() {\n  return del.sync(['dist', 'test/coverage']);\n});\n\ngulp.task('lint', function() {\n  return gulp.src(['gulpfile.js', 'lib/**/*.js', 'specs/**/*.js'])\n    .pipe(jshint('.jshintrc'))\n    .pipe(jshint.reporter('jshint-stylish'));\n});\n\ngulp.task('test', ['clean'], function(done) {\n  new karma.Server({ configFile: __dirname + '/karma.conf.js', singleRun: true })\n    // prevent karma from calling process.exit\n    .on('run_complete', function() { done(); })\n    .start();\n});\n\ngulp.task('coveralls', ['test'], function() {\n  return gulp.src(['test/coverage/**/lcov.info'])\n    .pipe(coveralls());\n});\n\ngulp.task('compile', ['clean'], function() {\n  return browserify('lib/bespoke.js', { standalone: 'bespoke' }).bundle()\n    .on('error', gutil.log)\n    .pipe(source('bespoke.js'))\n    .pipe(buffer())\n    .pipe(header([\n      '/*!',\n      ' * <%= title %> v<%= version %>',\n      ' *',\n      ' * Copyright <%= new Date().getFullYear() %>, <%= author.name %>',\n      ' * This content is released under the <%= licenses[0].type %> license',\n      ' * <%= licenses[0].url %>',\n      ' */\\n\\n'\n    ].join('\\n'), pkg))\n    .pipe(gulp.dest('dist'))\n    .pipe(rename('bespoke.min.js'))\n    .pipe(uglify())\n    .pipe(header([\n      '/*! <%= title %> v<%= version %> ',\n      '© <%= author.name %>, ',\n      '<%= licenses[0].type %> License */\\n'\n    ].join(''), pkg))\n    .pipe(gulp.dest('dist'))\n    .pipe(gzip())\n    .pipe(micro({ limit: 1024 }));\n});\n"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 0.5615234375,
          "content": "module.exports = function(config) {\n  config.set({\n    basePath: '',\n\n    frameworks: ['jasmine', 'browserify'],\n\n    files: [\n      'test/spec/*Spec.js'\n    ],\n\n    exclude: [],\n\n    preprocessors: {\n      'test/**/*.js': 'browserify'\n    },\n\n    browserify: {\n      transform: ['browserify-istanbul'],\n    },\n\n    reporters: ['progress', 'coverage'],\n\n    coverageReporter: {\n      dir: 'test/coverage',\n      reporters: [\n        { type: 'lcov' }\n      ]\n    },\n\n    port: 8080,\n\n    logLevel: config.LOG_INFO,\n\n    autoWatch: false,\n\n    browsers: ['PhantomJS']\n  });\n};\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.4130859375,
          "content": "{\n  \"name\": \"bespoke\",\n  \"title\": \"Bespoke.js\",\n  \"version\": \"1.2.0-dev\",\n  \"description\": \"DIY Presentation Micro-Framework\",\n  \"author\": {\n    \"name\": \"Mark Dalgleish\",\n    \"url\": \"http://markdalgleish.com\"\n  },\n  \"main\": \"./lib/bespoke.js\",\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"gulp\",\n    \"coveralls\": \"gulp coveralls\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/bespokejs/bespoke.git\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^14.4.0\",\n    \"browserify-istanbul\": \"^2.0.0\",\n    \"del\": \"^2.2.2\",\n    \"function-bind\": \"^1.1.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-coveralls\": \"^0.1.4\",\n    \"gulp-gzip\": \"1.4.0\",\n    \"gulp-header\": \"^1.8.9\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"gulp-micro\": \"^1.1.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-uglify\": \"^3.0.0\",\n    \"istanbul\": \"^0.4.5\",\n    \"jasmine-core\": \"^2.8.0\",\n    \"jshint\": \"^2.9.5\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"karma\": \"^1.7.1\",\n    \"karma-browserify\": \"^5.1.1\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-jasmine\": \"^1.1.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\n    \"phantomjs-prebuilt\": \"2.1.15\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"gulp-util\": \"^3.0.8\",\n    \"watchify\": \"^3.9.0\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://mit-license.org/markdalgleish\"\n    }\n  ],\n  \"keywords\": [\n    \"presentation\",\n    \"html5\",\n    \"keynote\",\n    \"powerpoint\"\n  ]\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}