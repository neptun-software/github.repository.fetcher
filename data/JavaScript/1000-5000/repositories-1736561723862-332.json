{
  "metadata": {
    "timestamp": 1736561723862,
    "page": 332,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ClearURLs/Addon",
      "stars": 4112,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2294921875,
          "content": "# See https://help.github.com/ignore-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n\n# testing\n/coverage\n\n# production\n/build\n\n# misc\n.DS_Store\n.env\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# WebStorm\n.idea/"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 1.6748046875,
          "content": "image: debian:latest\n\nvariables:\n  GIT_SUBMODULE_STRATEGY: recursive\n\nbefore_script:\n  - export DEBIAN_FRONTEND= noninteractive\n  - apt-get update -y\n  - apt-get install -y zip unzip nodejs jsonlint jq\n\nstages:\n  - build\n  - deploy\n\nhash rules:\n  stage: build\n  script:\n    - sha256sum data/data.min.json | awk '{print $1}' > rules.min.hash\n    - node build_tools/minifyDataJSON.js \"data/data.min.json\" \"data.minify.json\"\n    - sha256sum data.minify.json | awk '{print $1}' > rules.minify.hash\n  artifacts:\n    paths:\n      - rules.min.hash\n      - data.minify.json\n      - rules.minify.hash\n\nbundle addon:\n  stage: build\n  script:\n    - zip ClearURLs -r -FS clearurls.js browser-polyfill.js manifest.json img/* external_js/* html/* core_js/* css/* fonts/* _locales/*\n  artifacts:\n    paths:\n      - ClearURLs.zip\n\n#bundle addon chrome:\n  #stage: build\n  #script:\n    #- jq 'del(.applications)' manifest.json > manifest.json.tmp && mv manifest.json.tmp manifest.json\n    #- zip ClearURLs-chrome -r -FS clearurls.js browser-polyfill.js manifest.json img/* external_js/* html/* core_js/* css/* fonts/* _locales/*\n  #only:\n  #  - master\n  #artifacts:\n  #  paths:\n  #    - ClearURLs-chrome.zip\n\npages:\n  stage: deploy\n  script:\n    - mkdir public\n    - mkdir public/data\n    - cp img/clearurls.svg public/clearurls.svg\n    - cp data/data.min.json public/data/data.min.json\n    - sha256sum public/data/data.min.json | awk '{print $1}' > public/data/rules.min.hash\n    - node build_tools/minifyDataJSON.js \"public/data/data.min.json\" \"public/data/data.minify.json\"\n    - sha256sum public/data/data.minify.json | awk '{print $1}' > public/data/rules.minify.hash\n  only:\n    - master\n  artifacts:\n    paths:\n      - public\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09375,
          "content": "[submodule \"rules\"]\n\tpath = data\n\turl = https://gitlab.com/ClearURLs/rules.git\n\tbranch = master\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 24.32421875,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## Ongoing\n- Rewrite ClearURLs completely form scratch in typescript\n- Add features from the milestone [%1](https://gitlab.com/KevinRoebert/ClearUrls/-/milestones/1)\n- Dedicated documentation page like [docs.drasyl.org](https://docs.drasyl.org)\n\n## [1.XX.0] - 2022-XX-XX\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n## [1.27.1] - 2025-01-05\n\n### Changed\n- Updated dependencies\n\n### Fixed\n- [#276](https://github.com/ClearURLs/Addon/issues/276)\n- [#196](https://github.com/ClearURLs/Addon/issues/196)\n- [!108](https://gitlab.com/ClearURLs/ClearUrls/-/merge_requests/108)\n- [Fixed undefined `s` error](https://github.com/ClearURLs/Addon/commit/897c7dc67beab5e1e5f6f4b70b781f5bd3897060)\n\n# Removed\n- ETag filtering for Firefox. Since Firefox 85, ETags can no longer be used for tracking users over multiple sites.\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n## [1.26.0] - 2022-11-18\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Changed\n- The popup window is now responsive \n\n## [1.25.0] - 2022-07-27\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Changed\n- ETag filtering now generates random values and does no longer delete the header. As a result, filtering also works under Chrome-based browsers\n- ETag filtering no longer increases the counter\n- ETag filtering is now disabled by default\n- Updated rules URL href\n- Updated translations. Big update by [IHatePineapples](https://github.com/IHatePineapples)\n\n### Fixed\n- [524](https://gitlab.com/KevinRoebert/ClearUrls/-/issues/524)\n- [67](https://github.com/ClearURLs/Addon/issues/67)\n- [138](https://github.com/ClearURLs/Addon/issues/138)\n- [1177](https://gitlab.com/KevinRoebert/ClearUrls/-/issues/1177)\n- [234](https://github.com/ClearURLs/Addon/issues/234)\n- [191](https://github.com/ClearURLs/Addon/issues/191)\n\n## [1.24.1] - 2022-03-25\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Changed\n- Replaced self-written URL parser through `URL` and `URLSearchParams` from the Web API\n\n### Fixed\n- Fixed [185](https://github.com/ClearURLs/Addon/issues/185)\n- Fixed [186](https://github.com/ClearURLs/Addon/issues/186)\n\n## [1.23.1] - 2022-03-23\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Removed\n- Removed unnecessary `unsafe-eval` content security policy\n\n## [1.23.0] - 2022-03-22\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Added\n- Added Arabic translation by Essam and kugani\n- Added Indonesian translation by Iputucaganesha\n- Added `content_security_policy` to `manifest.json`\n- Re-Added `applications`to `manifest.json`\n- Added recursive cleaning\n- Added dark mode support in [!101](https://gitlab.com/KevinRoebert/ClearUrls/-/merge_requests/101). Thanks to [@dannycolin](https://gitlab.com/dannycolin)\n\n### Changed\n- Updated `homepage_url` and `author` field in `manifest.json`\n- Replaced deprecated `String.prototype.substr()` in [!175](https://github.com/ClearURLs/Addon/pull/175). Thanks to [@CommanderRoot](https://github.com/CommanderRoot)\n\n## [1.22.0] - 2021-12-27\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Added\n- Added Korean translation by [@hellojaccc](https://gitlab.com/hellojaccc)\n- Added Thai translation by [@ammaneena](https://gitlab.com/ammaneena)\n- Added Slovenian translation by [@betterwebleon](https://github.com/betterwebleon)\n- [Added](https://gitlab.com/KevinRoebert/ClearUrls/-/merge_requests/93) `method` filtering to rule catalogs. Thanks to [@lifegpc](https://gitlab.com/lifegpc). Closes [#948](https://gitlab.com/KevinRoebert/ClearUrls/-/issues/948).\n\n### Changed\n- Updated jQuery to 3.6.0\n- Updated Spanish translation by Sergio\n- Updated Hungarian translation by krolli\n- Updated Italian translation by Gioxx\n- Updated Dutch translation by Harm and Heimen\n- Updated Polish translation by Mble\n- Updated Portuguese translation by Lalocas and Geraldo\n- Updated Turkish translation by Ãœmit\n- Updated Chinese (traditional) translation by 1304274443\n- Updated Chinese (simplified) translation by Eric\n- Replaced deprecated `extension.getURL` by `runtime.getURL`\n\n## [1.21.0] - 2021-03-24\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Changed\n- Updated Polish translation by Kityn\n\n### Removed\n- Removed `clipboardWrite` permission\n- Removed noisy background of popup\n\n### Fixed\n- Fixed [#771](https://gitlab.com/KevinRoebert/ClearUrls/-/issues/771)\n- Fixed [#466](https://gitlab.com/KevinRoebert/ClearUrls/-/issues/466) by [@aethanyc](https://gitlab.com/aethanyc) in MR [!85](https://gitlab.com/KevinRoebert/ClearUrls/-/merge_requests/85)\n\n## [1.20.0] - 2020-11-21\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Added\n- Added Dutch translation by Harm M.\n\n### Changed\n- Changed url decoding to prevent endless loop\n- Performance optimizations for rules by [@thexeos](https://gitlab.com/thexeos)\n- Changed default rules and hash host to Github Pages\n- Changed rules changelog button `href` to the new rules submodule repo\n- Updated various translations - thanks to all contributors\n\n### Fixed\n- Fixed [#664](https://gitlab.com/KevinRoebert/ClearUrls/issues/664) (also [#739](https://gitlab.com/KevinRoebert/ClearUrls/issues/739), [#740](https://gitlab.com/KevinRoebert/ClearUrls/issues/740))\n\n## [1.19.0] - 2020-07-22\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Changed\n- Changed url decoding to prevent endless loop\n\n## [1.18.1] - 2020-06-07\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Changed\n- Hotfix for the endless loop on new log limit ([#545](https://gitlab.com/KevinRoebert/ClearUrls/issues/545), [#541](https://gitlab.com/KevinRoebert/ClearUrls/issues/541), [#539](https://gitlab.com/KevinRoebert/ClearUrls/issues/539))\n\n## [1.18.0] - 2020-06-06\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 37\n\n### Removed\n- sha256.jquery.plugin\n- Popper.js v1.16.0\n- Bootstrap Colorpicker v3.2.0\n- Removed `xbl` type from request types, because it throws since 78.0b3 exceptions (no longer supported)\n\n### Added\n- Pickr v1.7.0\n\n### Changed\n- Replaced sha256.jquery.plugin with native hashing\n- Replaced jQuery dependencies with native JavaScript in all core files (jQuery is only required for the log page)\n    - Hopefully this fixes the performance problems that some users experience when using this addon in conjunction with other addons\n    - [#256](https://gitlab.com/KevinRoebert/ClearUrls/issues/256)\n    - [#535](https://gitlab.com/KevinRoebert/ClearUrls/issues/535)\n- Restricted the log limit to max. 5000 entries\n    - Default value is now 100\n    - Too many log entries have resulted in performance losses for users who have forgotten that they have turned on the log. This step should prevent this.\n\n\n## [1.17.0] - 2020-04-14\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated some strings of Spanish translation\n- Updated some strings of French translation\n- Updated some strings of Italian translation\n- Updated some strings of Russian translation\n- Updated some strings of Swedish translation\n- Updated some strings of Turkish translation\n- Updated some strings of Ukrainian translation\n- Updated some strings of Chinese Simple translation\n\n### Fixed\n- Fixed a typo in the path to the Datatables JavaScript file\n- Fixed [#445](https://gitlab.com/KevinRoebert/ClearUrls/issues/445)\n- Fixed [#462](https://gitlab.com/KevinRoebert/ClearUrls/issues/462)\n\n### Added\n- Added check for setBadgeTextColor function (only supported in Firefox)\n\n### Removed\n- Removed browser-polyfill content script import (seems no longer needed)\n- Removed old `applications` value\n\n## [1.16.0] - 2020-03-20\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added ETag header filtering [#362](https://gitlab.com/KevinRoebert/ClearUrls/issues/362), [#440](https://gitlab.com/KevinRoebert/ClearUrls/issues/440). Hint: Cache must be cleared before first use, to delete the already existing ETags.\n\n### Fixed\n- Fixed spontaneous disappearance of the badged\n- Fixed wrong counting of blocked elements (too little was  ;D)\n\n### Changed\n- Updated all translation\n- Changed badged font color to #FFFFFF\n- Changed watchdog behavior as follows [#428](https://gitlab.com/KevinRoebert/ClearUrls/issues/428), [#431](https://gitlab.com/KevinRoebert/ClearUrls/issues/431), [#429](https://gitlab.com/KevinRoebert/ClearUrls/issues/429): \n   - Increased watchdog interval to 60 seconds\n   - Executed watchdog only if ClearURLs is also active\n   - Watchdog restarts ClearURLs at most 3 times and only if ClearURLs has rules\n- Changed behavior of downloading rules [#428](https://gitlab.com/KevinRoebert/ClearUrls/issues/428), [#431](https://gitlab.com/KevinRoebert/ClearUrls/issues/431), [#429](https://gitlab.com/KevinRoebert/ClearUrls/issues/429):\n   - If download of hash file fails and no local rules are available, then ClearURLs displays `hash_status_code_5` and deactivates itself\n   - If download of rules file fails and no local rules are available, then ClearURLs displays `hash_status_code_5` and deactivates itself\n\n## [1.15.0] - 2020-02-16\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated Italian translation by [@gioxx](https://gitlab.com/gioxx)\n\n## [1.14.0] - 2020-02-01\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Changed icon\n\n## [1.13.0] - 2020-02-01\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated some strings of French translation by lucifer\n\n## [1.12.0] - 2020-01-29\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated Russian translation by elfriob\n- Updated Spanish translation by [@socram](https://gitlab.com/socram)\n\n## [1.11.0] - 2020-01-06\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added hyperlink auditing blocking [#184](https://gitlab.com/KevinRoebert/ClearUrls/issues/184)\n- Added yandex link fix script, to avoid URL tracking [#305](https://gitlab.com/KevinRoebert/ClearUrls/issues/305)\n\n## [1.10.0] - 2020-01-03\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated to Bootstrap 4.3.1\n- Updated to jQuery 3.4.1\n- Updated to DataTables 1.10.20\n- Deleted unnecessary Bootstrap Dialog lib\n- Replaced [pick-a-color](https://github.com/lauren/pick-a-color) with [bootstrap-colorpicker 3.2.0](https://github.com/itsjavi/bootstrap-colorpicker)\n- Minor corrections on english translation by [@Sopor](https://gitlab.com/Sopor)\n- Replaced glyphicons with [fontawesome 5.12.0](https://github.com/FortAwesome/Font-Awesome/tree/5.12.0)\n\n### Added\n- Added [popper.js 1.16.0](https://github.com/popperjs/popper.js/tree/v1.16.0)\n- Added Swedish translation by [@Sopor](https://gitlab.com/Sopor)\n\n### Fixed\n- Fixed [#338](https://gitlab.com/KevinRoebert/ClearUrls/issues/338)\n- Fixed [#333](https://gitlab.com/KevinRoebert/ClearUrls/issues/333)\n- Fixed [#332](https://gitlab.com/KevinRoebert/ClearUrls/issues/332)\n- Fixed [#307](https://gitlab.com/KevinRoebert/ClearUrls/issues/307)\n- Maybe [#315](https://gitlab.com/KevinRoebert/ClearUrls/issues/315) fixed\n\n## [1.9.5] - 2019-12-17\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added Turkish translation by UlaÅŸ Ã‡akmak\n\n### Changed\n- Updated some strings of French translation by lucifer\n\n### Fixed\n- Fixed problem with default RegExp\n\n## [1.9.4] - 2019-11-24\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed toolbar icon on startup [#102](https://gitlab.com/KevinRoebert/ClearUrls/issues/102)\n\n### Added\n- Added option to disable/allow domain blocking [#294](https://gitlab.com/KevinRoebert/ClearUrls/issues/294)\n\n### Changed\n- Some refactoring\n\n## [1.9.3.1] - 2019-11-15\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Changed data and hash URL to GitLab Pages, to prevent hitting the GitLab infrastructure directly [#295](https://gitlab.com/KevinRoebert/ClearUrls/issues/295#note_245456134).\n\n## [1.9.3] - 2019-11-15\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed wrong initial rules URL\n\n## [1.9.2] - 2019-11-09\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed [#290](https://gitlab.com/KevinRoebert/ClearUrls/issues/290)\n\n### Changed\n- Updated some strings of Italian translation by [@gioxx](https://gitlab.com/gioxx)\n\n### Added\n- Added a minimal version of the data.min.json file where all line breaks and spaces, as well as default values and empty lists are removed.\n\n## [1.9.1] - 2019-10-24\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed badged in quiet mode\n\n### Added\n- Added Italian translation by [@gioxx](https://gitlab.com/gioxx)\n\n## [1.9.0] - 2019-10-22\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed bug in \"history tracking injection protection\". This option was not disabled, when the global filter switch are on off\n- Fixed [#241](https://gitlab.com/KevinRoebert/ClearUrls/issues/241)\n- Possible fix for [#203](https://gitlab.com/KevinRoebert/ClearUrls/issues/203)\n\n### Changed\n- Refactoring\n- Changed background script loading sequence to prevent that required functions are not yet loaded.\n\n### Added\n- Added an option to im-/export the log (requires the `downloads` permission)\n- Added an option to im-/export the settings (requires the `downloads` permission)\n- Added information page for blocked sites, when they are called in the `main_frame`\n- Added option to allow referral marketing ([#284](https://gitlab.com/KevinRoebert/ClearUrls/issues/284))\n- Added \"multiple times URL encodes\" recognition\n- Added an option to limit the log entries ([#56](https://gitlab.com/KevinRoebert/ClearUrls/issues/56))\n\n## [1.8.5] - 2019-09-29\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed [#264](https://gitlab.com/KevinRoebert/ClearUrls/issues/264)\n- Fixed [#262](https://gitlab.com/KevinRoebert/ClearUrls/issues/262)\n- Fixed [#267](https://gitlab.com/KevinRoebert/ClearUrls/issues/267)\n\n## [1.8.4] - 2019-09-26\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Force redirects only on main frames\n- Added google link fix script, to avoid the sub frame permission for force redirection on google\n\n## [1.8.3] - 2019-09-23\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed OR case\n\n## [1.8.2] - 2019-09-23\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Only redirects, if request is of type main or sub frame to prevent security issues on automatically loaded ressource like images\n\n### Fixed\n- Fixed [#253](https://gitlab.com/KevinRoebert/ClearUrls/issues/253)\n- Fixed [#254](https://gitlab.com/KevinRoebert/ClearUrls/issues/254)\n\n## [1.8.1] - 2019-09-12\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Improvements on check for android systems ([#206](https://gitlab.com/KevinRoebert/ClearUrls/issues/206))\n- Improvements on storage. Away with periodic save of in-memory data to storage. Instead save when there are actual changes by [@tartpvule](https://gitlab.com/tartpvule) in ([!47](https://gitlab.com/KevinRoebert/ClearUrls/merge_requests/47))\n\n## [1.8.0] - 2019-09-11\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added default option to skip URLs with a host in a local range\n\n### Fixed\n- Fixed [#238](https://gitlab.com/KevinRoebert/ClearUrls/issues/238)\n- Fixed wrong count on cleaning tool (forgot to count also the total amount of elements at cleaning tool)\n\n### Changed\n- Improvements on check for android systems ([#206](https://gitlab.com/KevinRoebert/ClearUrls/issues/206))\n\n## [1.7.4] - 2019-09-06\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added Hungarian translations by [@ztoldy2](https://gitlab.com/ztoldy2)\n\n## [1.7.3] - 2019-08-07\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated Brazilian Portuguese translation by Ramon S.\n\n## [1.7.2] - 2019-08-07\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Updated japanese translation by [@Shitennouji](https://gitlab.com/Shitennouji)\n\n## [1.7.1] - 2019-08-04\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added new setting to data.min.json to set if redirects should be enforced via a \"tabs.update\" ([#221](https://gitlab.com/KevinRoebert/ClearUrls/issues/221))\n- Added [#220](https://gitlab.com/KevinRoebert/ClearUrls/issues/220)\n- Added [#218](https://gitlab.com/KevinRoebert/ClearUrls/issues/218)\n\n### Fixed\n- Fixed YouTube ad redirection bug ([#221](https://gitlab.com/KevinRoebert/ClearUrls/issues/221))\n- Fixed [#217](https://gitlab.com/KevinRoebert/ClearUrls/issues/217)\n\n## [1.7.0] - 2019-07-30\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added support for raw rules to cleaning also parts from URL-path\n\n### Fixed\n- Fixed misspelling in german translation\n\n## [1.6.9] - 2019-07-29\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- Fixed error in fields RegExp\n\n## [1.6.8] - 2019-07-28\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Improvements on check for android systems ([#206](https://gitlab.com/KevinRoebert/ClearUrls/issues/206))\n\n### Fixed\n- [#205](https://gitlab.com/KevinRoebert/ClearUrls/issues/205)\n\n## [1.6.7] - 2019-07-25\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- [#175](https://gitlab.com/KevinRoebert/ClearUrls/issues/175) by [@yukulele](https://gitlab.com/yukulele)\n- [#196](https://gitlab.com/KevinRoebert/ClearUrls/issues/196)\n- [#204](https://gitlab.com/KevinRoebert/ClearUrls/issues/204)\n\n## [1.6.6] - 2019-06-14\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Fixed\n- [#171](https://gitlab.com/KevinRoebert/ClearUrls/issues/171)\n- [#195](https://gitlab.com/KevinRoebert/ClearUrls/issues/195)\n\n## [1.6.5] - 2019-06-12\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added support for fragment cleaning\n\n### Fixed\n- [#171](https://gitlab.com/KevinRoebert/ClearUrls/issues/171)\n- [#191](https://gitlab.com/KevinRoebert/ClearUrls/issues/191)\n- [#192](https://gitlab.com/KevinRoebert/ClearUrls/issues/192)\n- [#193](https://gitlab.com/KevinRoebert/ClearUrls/issues/193)\n- [#194](https://gitlab.com/KevinRoebert/ClearUrls/issues/194)\n\n## [1.6.4] - 2019-05-07\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added Polish translation by [@alekksander](https://gitlab.com/alekksander)\n\n## [1.6.3] - 2019-05-06\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added redirection from [#181](https://gitlab.com/KevinRoebert/ClearUrls/issues/181)\n\n### Changed\n- Update french translation by [@hydrargyrum](https://gitlab.com/hydrargyrum)\n- Update chinese translation\n\n## [1.6.2] - 2019-04-26\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Added\n- Added rules from [#172](https://gitlab.com/KevinRoebert/ClearUrls/issues/172)\n- Added rules from [#176](https://gitlab.com/KevinRoebert/ClearUrls/issues/176)\n- Added rules from [#178](https://gitlab.com/KevinRoebert/ClearUrls/issues/178)\n\n### Fixed\n- [#170](https://gitlab.com/KevinRoebert/ClearUrls/issues/170)\n- [#162](https://gitlab.com/KevinRoebert/ClearUrls/issues/162)\n- [#163](https://gitlab.com/KevinRoebert/ClearUrls/issues/163)\n\n## [[1.6.1] - 2019-04-14](https://gitlab.com/KevinRoebert/ClearUrls/commit/a8a5f7e311300ae7f186d4b581e805bdf3f9f5d9)\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 22\n\n### Changed\n- Chinese translations by [@yipinghuang](https://gitlab.com/yipinghuang)\n- French translations\n\n## [1.6] - 2019-04-11\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 28\n\n### Added\n- Added listener to the browser history to prevent tracking with the [history.pushState method](https://developer.mozilla.org/en-US/docs/Web/API/History_API)\n- Added webNavigation and tabs permissions, for the new feature\n- Added switches in settings to enable and disable the context menu entry and the history listener\n- Added tool to clean URLs, that was pasted into a textbox\n- Added icon for new tool to clean URLs\n\n### Fixed\n- [#40](https://gitlab.com/KevinRoebert/ClearUrls/issues/40), see also https://curl.kevinroebert.de\n- [#103](https://gitlab.com/KevinRoebert/ClearUrls/issues/103), see also https://curl.kevinroebert.de\n\n### Changed\n- Changed clipboard-helper.js path to be absolute to prevent problems\n- Changed rewrite of old GitHub links to the new data.min.json and rules.min.hash\n- Config icon is now bigger and above the config label\n- Update Traditional Chinese Translation by [@yipinghuang](https://gitlab.com/yipinghuang)\n\n## [[1.5.8] - 2019-04-10](https://gitlab.com/KevinRoebert/ClearUrls/commit/1b6cc37bdd23011d006bf7ef6824463e7c96067a)\n\n### Compatibility note\n- Require Firefox >= 55\n- Require Chrome >= 28\n\n### Added\n- Added context menu entry, to clean and copy links into clipboard\n\n## [[1.5.4] - 2019-04-08](https://gitlab.com/KevinRoebert/ClearUrls/commit/0a948968b309f418ec4175dd23fedb0b88c97086)\n\n### Fixed\n- Changed icon format from svg into png to support Chrome\n\n## [[1.5.3] - 2019-04-03](https://gitlab.com/KevinRoebert/ClearUrls/commit/304cbe2e6bf3756f4bcb675ec4b8b7403158ea5c)\n\n### Removed\n- Removed the *tab permission*, because it is not required for all used methods on the tabs api\n\n## [[1.5.2] - 2019-04-01](https://gitlab.com/KevinRoebert/ClearUrls/commit/03e0580b202fc0a77f442f284dd5470cddbbd5c0)\n\n### Added\n- Added new screenshots of the ClearURLs popup\n\n### Changed\n- Replaced *webextension-polyfill* v.0.3.1 with the new version v0.4.0\n- Updated the Chrome version of ClearURLs to the newest version\n- Changed ClearURLs to support both Firefox and Chrome, without generating every time to different source codes\n- Changed the GitLab-CI to build the Chrome version automatically from the Firefox version\n- Replaced the old screenshots in the README with new ones\n\n### Removed\n- Removed the old ClearURLs Chrome version\n\n## [[1.5.1.6a] - 2019-03-27](https://gitlab.com/KevinRoebert/ClearUrls/commit/869cd63e645e2cacaf26017366fa4eaa3fb97411)\n\n### Fixed\n- Added own flat function and a function that removes empty fields from arrays to support Waterfox\n\n## [[1.5.1.5a] - 2019-03-18](https://gitlab.com/KevinRoebert/ClearUrls/commit/d87d88250dccd07570c10b37f41054ed44a0ee97)\n\n### Fixed\n- Bugfix to support Android devices again\n\n## [[1.5.1a] - 2019-03-14](https://gitlab.com/KevinRoebert/ClearUrls/commit/80af6f6feac086490f841adad5fe769d71be86f8)\n\n### Added\n- Added *unlimitedStorage* permissions to prevent storage restrictions (which will come in future versions of firefox) and to have enough space for user generated rules\n\n### Changed\n- Changed the regex interpretation for better performance\n\n## [[1.5a] - 2019-03-14](https://gitlab.com/KevinRoebert/ClearUrls/commit/80af6f6feac086490f841adad5fe769d71be86f8)\n\n### Added\n- New rules file *data.min.json* that is a minimized version of the old one\n- New technique to get data from the local storage\n- The command pattern has been implemented so that ClearURLs also works in private mode\n- Automatically generating hash for *data.min.json* file with GitLab-CI\n- Add start and end delimiters to rules\n- Preparations for costume rules\n\n### Changed\n- Storage improvements, better performance\n- Splitted core file into multiple pieces for better overview\n- Minimize rules length\n\n### Fixed\n- [#124](https://gitlab.com/KevinRoebert/ClearUrls/issues/124)\n\n### Removed\n- Warning in private mode (no longer necessary)\n- Removed *Report URL* function\n\n## [[1.3.4.2] - 2019-02-01](https://gitlab.com/KevinRoebert/ClearUrls/commit/23e7fa406436c40c561c1e0108c5e9c8c7e9e0d8)\n\n### Changed\n- Updated Ukrainian translation from [@a-polivanchuk](https://gitlab.com/a-polivanchuk)\n\n## [[1.3.4.0] - 2018-10-08](https://gitlab.com/KevinRoebert/ClearUrls/commit/06b84d749084997e3d759ebd916772b446adfe9c)\n\n## Added\n- Added more request types, as proposed in [#106](https://gitlab.com/KevinRoebert/ClearUrls/issues/106)\n\n## Updated\n- Updated french translation\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "PRIVACY.md",
          "type": "blob",
          "size": 0.740234375,
          "content": "ClearURLs protects and respects your privacy. \nWe do not collect any of your usage data. Furthermore, ClearURLs has no home server nor embed any kind of analytic hooks in its code.\n\nThe only time ClearURLs connects to a remote server (gitlab.io or github.io) is to update the rules file and the associated hash file. You can replace the default update address (_rules1.clearurls.xyz_/_rules2.clearurls.xyz_) with your address at any time in the settings.\n\nThe project and the rule file are currently hosted on gitlab.com and github.com, which is owned by GitLab Inc. and GitHub Inc. Thus they are unrelated to ClearURLs. The _rules1.clearurls.xyz_ and _rules2.clearurls.xyz_ addresses are just CNAME records and thus we got no information about the request.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5029296875,
          "content": "<a href=\"https://www.paypal.me/KevinRoebert\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/KevinRoebert/DonateButtons/master/Paypal.png\" alt=\"Buy Me A Coffee\" height=\"55\"></a>\n<a href=\"https://www.buymeacoffee.com/KevinRoebert\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/KevinRoebert/DonateButtons/master/BuyMeACoffee.png\" alt=\"Buy Me A Coffee\" height=\"55\"></a>\n\n[<img src=\"https://blog.mozilla.org/addons/files/2020/04/get-the-addon-fx-apr-2020.svg\" alt=\"for Firefox\" height=\"60px\">](https://addons.mozilla.org/firefox/addon/clearurls/) [<img src=\"https://docs.clearurls.xyz/1.22.0/assets/img/MEA-button.png\" alt=\"for Edge\" height=\"60px\">](https://microsoftedge.microsoft.com/addons/detail/mdkdmaickkfdekbjdoojfalpbkgaddei)\n\n# <sub><img src=\"https://gitlab.com/ClearURLs/ClearUrls/raw/master/img/clearurls.svg\" width=\"64px\" height=\"64px\"></sub> ClearURLs\n\n**ClearURLs** is an add-on based on the new WebExtensions technology and is optimized for *Firefox* and some *Chrome* based browsers.\n\nThis extension will automatically remove tracking elements from URLs to help protect your privacy when browsing the Internet, \nwhich is regularly updated by us and can be found [here](https://gitlab.com/anti-tracking/ClearURLs/rules/-/raw/master/data.min.json).\n\n## Application\nMany websites use tracking elements in the URL (e.g. `https://example.com?utm_source=newsletter1&utm_medium=email&utm_campaign=sale`) to mark your online activity. \nAll that tracking code is not necessary for a website to be displayed or work correctly and can therefore be removedâ€”that is exactly what ClearURLs does.\n\nAnother common example are Amazon URLs. If you search for a product on Amazon you will see a very long URL, such as: \n```\nhttps://www.amazon.com/dp/exampleProduct/ref=sxin_0_pb?__mk_de_DE=Ã…MÃ…Å½Ã•Ã‘&keywords=tea&pd_rd_i=exampleProduct&pd_rd_r=8d39e4cd-1e4f-43db-b6e7-72e969a84aa5&pd_rd_w=1pcKM&pd_rd_wg=hYrNl&pf_rd_p=50bbfd25-5ef7-41a2-68d6-74d854b30e30&pf_rd_r=0GMWD0YYKA7XFGX55ADP&qid=1517757263&rnid=2914120011\n```\n\nIndeed most of the above URL is tracking code. Once ClearURLs has cleaned the address, it will look like this:\n`https://www.amazon.com/dp/exampleProduct`\n\n## Features\n\n* Removes tracking from URLs automatically in the background\n* Blocks some common ad domains (optional)\n* Has a built-in tool to clean up multiple URLs at once\n* Supports redirection to the destination, without tracking services as middleman\n* Adds an entry to the context menu so that links can be copied quickly and cleanly\n* Blocks hyperlink auditing, also known as *ping tracking* (see also [this article](https://html.spec.whatwg.org/multipage/links.html#hyperlink-auditing))\n* Prevents ETag tracking\n* Prevents tracking injection over history API (see also: [The replaceState() method](https://developer.mozilla.org/en-US/docs/Web/API/History_API#The_replaceState()_method))\n* Prevents Google from rewriting the search results (to include tracking elements)\n* Prevents Yandex from rewriting the search results (to include tracking elements)\n\n## Permissons\nReasoning for needed permissions can be found under [here](https://gitlab.com/ClearURLs/ClearUrls/issues/159).\n\n## Screenshot\n![Interface (version 1.14.0)](https://docs.clearurls.xyz/1.22.0/assets/img/interface.png)\n\n## CI/CD Artifacts Download (for Firefox- and Chrome-Dev only)\nHere you can download the packed files for the Firefox- and Chrome-Dev:\n\n - [ClearURLs.zip](https://gitlab.com/ClearURLs/ClearUrls/-/jobs/artifacts/master/raw/ClearURLs.zip?job=bundle%20addon)\n\n## Test\nIf you want to test whether ClearURLs works correctly on your system, you can go to this test page: [https://test.clearurls.xyz/](https://test.clearurls.xyz/)\n\n## Contribute\nIf you have any suggestions or complaints, please [create an issue.](https://gitlab.com/ClearURLs/ClearUrls/issues/new)\n\n**Note: If you have any suggestions or complaints regarding the rules, please [create an issue in this repo](https://gitlab.com/anti-tracking/ClearURLs/rules/-/issues/new) or email us rules.support (at) clearurls.xyz (this mail will automatically create a new issue in this repo).**\n\n### Translate ClearURLs\nYou want to help translating ClearURLs into many languages? â€“ Nice\n\nYou can choose between two options to contribute. You can create a merge request, or you can use the POEditor to translate ClearURLs.\n\n*Hint: The description field in the translation files are only an information for what the translation is used. \nIt is not necessary to translate the description field; in the most cases it is empty.*\n\n#### Merge request\nIf you want to create a merge request, you must open the path [`_locales/en/messages.json`](https://gitlab.com/ClearURLs/ClearUrls/-/blob/master/_locales/en/messages.json) in the ClearURLs repo \nand translate the english terms into terms of your language. Once you have translated all the terms, you make a pull request of your translation. \nPlease push your translation into the folder `_locales/{language code}/messages.json`.\n\n#### POEditor\n[<img src=\"https://poeditor.com/public/images/logo/logo.svg\" alt=\"https://poeditor.com/join/project/vKTpQWWvk2\" width=\"150\">](https://poeditor.com/join/project/vKTpQWWvk2)\n\n## Projects that use parts of ClearURLs\n\n* [Uroute](https://github.com/walterl/uroute) used ClearURLs to filter/clean URL before launching browser\n* [Scrub](https://gitlab.com/CrunchBangDev/cbd-cogs/-/tree/master/Scrub) used ClearURLs to filter/clean URLs as cog for the Red Discord bot\n* [Unalix](https://github.com/AmanoTeam/Unalix) small, dependency-free, fast Python package for removing tracking fields from URLs\n* [Unalix-nim](https://github.com/AmanoTeam/Unalix-nim) small, dependency-free, fast Nim package and CLI tool for removing tracking fields from URLs\n* [UnalixAndroid](https://github.com/AmanoTeam/UnalixAndroid) simple Android app that removes link masking/tracking and optionally resolves shortened links\n\n## Recommended by...\n*  [ghacks-user.js](https://github.com/ghacksuserjs/ghacks-user.js/wiki/4.1-Extensions)\n*  [Awesome Humane Tech List](https://github.com/humanetech-community/awesome-humane-tech#tracking)\n*  [PrivacyTools](https://www.privacytools.io/browsers/#addons)\n*  [New York Times Wirecutter](https://www.nytimes.com/wirecutter/reviews/our-favorite-ad-blockers-and-browser-extensions-to-protect-privacy/#cleaner-links-clearurls)\n*  ClearURLs is part of Mozilla's recommended extensions program\n\n## Permissions\nReasoning for needed permissions you can find under [this wiki page](https://docs.clearurls.xyz/latest/permissions/).\n\n## Copyright\nWe use some third-party scripts in our add-on. The authors and licenses are listed below.\n-   [WebExtension browser API Polyfill](https://github.com/mozilla/webextension-polyfill) |\n    Copyright by Mozilla |\n    [MPL-2.0](https://github.com/mozilla/webextension-polyfill/blob/master/LICENSE)\n-   [Bootstrap](https://github.com/twbs/bootstrap) |\n    Copyright 2011-2016 Twitter, Inc. |\n    [MIT](https://github.com/twbs/bootstrap/blob/master/LICENSE)\n-   [jQuery](https://github.com/jquery/jquery/) |\n    Copyright JS Foundation and other contributors |\n    [MIT](https://jquery.org/license/)\n-   [DataTables](https://github.com/DataTables/DataTables/tree/master) |  Copyright (c) 2008-2015 SpryMedia Limited | [MIT](https://datatables.net/license/)\n-   [Pickr](https://github.com/Simonwep/pickr/) | Copyright (c) 2018 - 2020 Simon Reinisch |\n    [MIT](https://github.com/Simonwep/pickr/blob/master/LICENSE)\n-   [Font Awesome](https://github.com/FortAwesome/Font-Awesome/) | Copyright (c) @fontawesome |\n    [Font Awesome Free License](https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt)\n"
        },
        {
          "name": "_locales",
          "type": "tree",
          "content": null
        },
        {
          "name": "browser-polyfill.js",
          "type": "blob",
          "size": 37.5390625,
          "content": "(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.12.0 - Tue May 14 2024 18:01:29 */\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n  /* vim: set sts=2 sw=2 et tw=80: */\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n  if (!(globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id)) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n    // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n          return super.get(key);\n        }\n      }\n\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args);\n\n                // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n        });\n      };\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n            if (!(prop in target)) {\n              return undefined;\n            }\n            let value = target[prop];\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                  return target[prop];\n                },\n                set(value) {\n                  target[prop] = value;\n                }\n              });\n              return value;\n            }\n            cache[prop] = value;\n            return value;\n          },\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n            return true;\n          },\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n        };\n\n        // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n      });\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {} /* wrappers */, {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n          const isResultThenable = result !== true && isThenable(result);\n\n          // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          }\n\n          // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          };\n\n          // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          }\n\n          // Let Chrome know that the listener is replying.\n          return true;\n        };\n      });\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    };\n\n    // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n"
        },
        {
          "name": "build_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "clearurls.js",
          "type": "blob",
          "size": 23.5380859375,
          "content": "/*\n * ClearURLs\n * Copyright (c) 2017-2021 Kevin RÃ¶bert\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/*jshint esversion: 6 */\n/*\n* This script is responsible for the core functionalities.\n*/\nvar providers = [];\nvar prvKeys = [];\nvar siteBlockedAlert = 'javascript:void(0)';\nvar dataHash;\nvar localDataHash;\nvar os;\n\n/**\n * Helper function which remove the tracking fields\n * for each provider given as parameter.\n *\n * @param  {Provider} provider      Provider-Object\n * @param pureUrl                   URL as String\n * @param {boolean} quiet           if the action should be displayed in log and statistics\n * @param {requestDetails} request  the request details\n * @return {Array}                  Array with changes and url fields\n */\nfunction removeFieldsFormURL(provider, pureUrl, quiet = false, request = null) {\n    let url = pureUrl;\n    let domain = \"\";\n    let fragments = \"\";\n    let fields = \"\";\n    let rules = provider.getRules();\n    let changes = false;\n    let rawRules = provider.getRawRules();\n    let urlObject = new URL(url);\n\n    if (storage.localHostsSkipping && checkLocalURL(urlObject)) {\n        return {\n            \"changes\": false,\n            \"url\": url,\n            \"cancel\": false\n        }\n    }\n\n    /*\n    * Expand the url by provider redirections. So no tracking on\n    * url redirections form sites to sites.\n    */\n    let re = provider.getRedirection(url);\n    if (re !== null) {\n        url = decodeURL(re);\n\n        //Log the action\n        if (!quiet) {\n            pushToLog(pureUrl, url, translate('log_redirect'));\n            increaseTotalCounter(1);\n            increaseBadged(false, request)\n        }\n\n        return {\n            \"redirect\": true,\n            \"url\": url\n        }\n    }\n\n    if (provider.isCaneling() && storage.domainBlocking) {\n        if (!quiet) pushToLog(pureUrl, pureUrl, translate('log_domain_blocked'));\n        increaseTotalCounter(1);\n        increaseBadged(quiet, request);\n        return {\n            \"cancel\": true,\n            \"url\": url\n        }\n    }\n\n    /*\n    * Apply raw rules to the URL.\n    */\n    rawRules.forEach(function (rawRule) {\n        let beforeReplace = url;\n        url = url.replace(new RegExp(rawRule, \"gi\"), \"\");\n\n        if (beforeReplace !== url) {\n            //Log the action\n            if (storage.loggingStatus && !quiet) {\n                pushToLog(beforeReplace, url, rawRule);\n            }\n\n            increaseBadged(quiet, request);\n            changes = true;\n        }\n    });\n\n    urlObject = new URL(url);\n    fields = urlObject.searchParams;\n    fragments = extractFragments(urlObject);\n    domain = urlWithoutParamsAndHash(urlObject).toString();\n\n    /**\n     * Only test for matches, if there are fields or fragments that can be cleaned.\n     */\n    if (fields.toString() !== \"\" || fragments.toString() !== \"\") {\n        rules.forEach(rule => {\n            const beforeFields = fields.toString();\n            const beforeFragments = fragments.toString();\n            let localChange = false;\n\n            for (const field of fields.keys()) {\n                if (new RegExp(\"^\"+rule+\"$\", \"gi\").test(field)) {\n                    fields.delete(field);\n                    changes = true;\n                    localChange = true;\n                }\n            }\n\n            for (const fragment of fragments.keys()) {\n                if (new RegExp(\"^\"+rule+\"$\", \"gi\").test(fragment)) {\n                    fragments.delete(fragment);\n                    changes = true;\n                    localChange = true;\n                }\n            }\n\n            //Log the action\n            if (localChange && storage.loggingStatus) {\n                let tempURL = domain;\n                let tempBeforeURL = domain;\n\n                if (fields.toString() !== \"\") tempURL += \"?\" + fields.toString();\n                if (fragments.toString() !== \"\") tempURL += \"#\" + fragments.toString();\n                if (beforeFields.toString() !== \"\") tempBeforeURL += \"?\" + beforeFields.toString();\n                if (beforeFragments.toString() !== \"\") tempBeforeURL += \"#\" + beforeFragments.toString();\n\n                if (!quiet) pushToLog(tempBeforeURL, tempURL, rule);\n\n                increaseBadged(quiet, request);\n            }\n        });\n\n        let finalURL = domain;\n\n        if (fields.toString() !== \"\") finalURL += \"?\" + urlSearchParamsToString(fields);\n        if (fragments.toString() !== \"\") finalURL += \"#\" + fragments.toString();\n\n        url = finalURL.replace(new RegExp(\"\\\\?&\"), \"?\").replace(new RegExp(\"#&\"), \"#\");\n    }\n\n\n\n    return {\n        \"changes\": changes,\n        \"url\": url\n    }\n}\n\nfunction start() {\n    /**\n     * Initialize the JSON provider object keys.\n     *\n     * @param {object} obj\n     */\n    function getKeys(obj) {\n        for (const key in obj) {\n            prvKeys.push(key);\n        }\n    }\n\n    /**\n     * Initialize the providers form the JSON object.\n     *\n     */\n    function createProviders() {\n        let data = storage.ClearURLsData;\n\n        for (let p = 0; p < prvKeys.length; p++) {\n            //Create new provider\n            providers.push(new Provider(prvKeys[p], data.providers[prvKeys[p]].getOrDefault('completeProvider', false),\n                data.providers[prvKeys[p]].getOrDefault('forceRedirection', false)));\n\n            //Add URL Pattern\n            providers[p].setURLPattern(data.providers[prvKeys[p]].getOrDefault('urlPattern', ''));\n\n            let rules = data.providers[prvKeys[p]].getOrDefault('rules', []);\n            //Add rules to provider\n            for (let r = 0; r < rules.length; r++) {\n                providers[p].addRule(rules[r]);\n            }\n\n            let rawRules = data.providers[prvKeys[p]].getOrDefault('rawRules', []);\n            //Add raw rules to provider\n            for (let raw = 0; raw < rawRules.length; raw++) {\n                providers[p].addRawRule(rawRules[raw]);\n            }\n\n            let referralMarketingRules = data.providers[prvKeys[p]].getOrDefault('referralMarketing', []);\n            //Add referral marketing rules to provider\n            for (let referralMarketing = 0; referralMarketing < referralMarketingRules.length; referralMarketing++) {\n                providers[p].addReferralMarketing(referralMarketingRules[referralMarketing]);\n            }\n\n            let exceptions = data.providers[prvKeys[p]].getOrDefault('exceptions', []);\n            //Add exceptions to provider\n            for (let e = 0; e < exceptions.length; e++) {\n                providers[p].addException(exceptions[e]);\n            }\n\n            let redirections = data.providers[prvKeys[p]].getOrDefault('redirections', []);\n            //Add redirections to provider\n            for (let re = 0; re < redirections.length; re++) {\n                providers[p].addRedirection(redirections[re]);\n            }\n\n            let methods = data.providers[prvKeys[p]].getOrDefault('methods', []);\n            //Add HTTP methods list to provider\n            for (let re = 0; re < methods.length; re++) {\n                providers[p].addMethod(methods[re]);\n            }\n        }\n    }\n\n    /**\n     * Convert the external data to Objects and\n     * call the create provider function.\n     *\n     * @param  {String} retrievedText - pure data form github\n     */\n    function toObject(retrievedText) {\n        getKeys(storage.ClearURLsData.providers);\n        createProviders();\n    }\n\n    /**\n     * Deactivates ClearURLs, if no rules can be downloaded and also no old rules in storage\n     */\n    function deactivateOnFailure() {\n        if (storage.ClearURLsData.length === 0) {\n            storage.globalStatus = false;\n            storage.dataHash = \"\";\n            changeIcon();\n            storeHashStatus(5);\n            saveOnExit();\n        }\n    }\n\n    /**\n     * Get the hash for the rule file on GitLab.\n     * Check the hash with the hash form the local file.\n     * If the hash has changed, then download the new rule file.\n     * Else do nothing.\n     */\n    function getHash() {\n        //Get the target hash from GitLab\n        const response = fetch(storage.hashURL).then(async response => {\n            return {\n                hash: (await response.text()).trim(),\n                status: response.status\n            }\n        });\n\n        response.then(result => {\n            if (result.status === 200 && result.hash) {\n                dataHash = result.hash;\n\n                if (dataHash !== localDataHash.trim()) {\n                    fetchFromURL();\n                } else {\n                    toObject(storage.ClearURLsData);\n                    storeHashStatus(1);\n                    saveOnDisk(['hashStatus']);\n                }\n            } else {\n                throw \"The status code was not okay or the given hash were empty.\";\n            }\n        }).catch(error => {\n            console.error(\"[ClearURLs]: Could not download the rules hash from the given URL due to the following error: \", error);\n            dataHash = false;\n            deactivateOnFailure();\n        });\n    }\n\n    /*\n    * ##################################################################\n    * # Fetch Rules & Exception from URL                               #\n    * ##################################################################\n    */\n    function fetchFromURL() {\n        const response = fetch(storage.ruleURL).then(async response => {\n            return {\n                data: (await response.clone().text()).trim(),\n                hash: await sha256((await response.text()).trim()),\n                status: response.status\n            }\n        })\n\n        response.then(result => {\n            if (result.status === 200 && result.data) {\n                if (result.hash === dataHash.trim()) {\n                    storage.ClearURLsData = result.data;\n                    storage.dataHash = result.hash;\n                    storeHashStatus(2);\n                } else {\n                    storeHashStatus(3);\n                    console.error(\"The hash does not match. Expected `\" + result.hash + \"` got `\" + dataHash.trim() + \"`\");\n                }\n                storage.ClearURLsData = JSON.parse(storage.ClearURLsData);\n                toObject(storage.ClearURLsData);\n                saveOnDisk(['ClearURLsData', 'dataHash', 'hashStatus']);\n            } else {\n                throw \"The status code was not okay or the given rules were empty.\"\n            }\n        }).catch(error => {\n            console.error(\"[ClearURLs]: Could not download the rules from the given URL due to the following error: \", error);\n            deactivateOnFailure();\n        });\n    }\n\n    // ##################################################################\n\n    /*\n    * ##################################################################\n    * # Supertyp Provider                                              #\n    * ##################################################################\n    */\n    /**\n     * Declare constructor\n     *\n     * @param {String} _name                Provider name\n     * @param {boolean} _completeProvider    Set URL Pattern as rule\n     * @param {boolean} _forceRedirection    Whether redirects should be enforced via a \"tabs.update\"\n     * @param {boolean} _isActive            Is the provider active?\n     */\n    function Provider(_name, _completeProvider = false, _forceRedirection = false, _isActive = true) {\n        let name = _name;\n        let urlPattern;\n        let enabled_rules = {};\n        let disabled_rules = {};\n        let enabled_exceptions = {};\n        let disabled_exceptions = {};\n        let canceling = _completeProvider;\n        let enabled_redirections = {};\n        let disabled_redirections = {};\n        let active = _isActive;\n        let enabled_rawRules = {};\n        let disabled_rawRules = {};\n        let enabled_referralMarketing = {};\n        let disabled_referralMarketing = {};\n        let methods = [];\n\n        if (_completeProvider) {\n            enabled_rules[\".*\"] = true;\n        }\n\n        /**\n         * Returns whether redirects should be enforced via a \"tabs.update\"\n         * @return {boolean}    whether redirects should be enforced\n         */\n        this.shouldForceRedirect = function () {\n            return _forceRedirection;\n        };\n\n        /**\n         * Returns the provider name.\n         * @return {String}\n         */\n        this.getName = function () {\n            return name;\n        };\n\n        /**\n         * Add URL pattern.\n         *\n         * @require urlPatterns as RegExp\n         */\n        this.setURLPattern = function (urlPatterns) {\n            urlPattern = new RegExp(urlPatterns, \"i\");\n        };\n\n        /**\n         * Return if the Provider Request is canceled\n         * @return {Boolean} isCanceled\n         */\n        this.isCaneling = function () {\n            return canceling;\n        };\n\n        /**\n         * Check the url is matching the ProviderURL.\n         *\n         * @return {boolean}    ProviderURL as RegExp\n         */\n        this.matchURL = function (url) {\n            return urlPattern.test(url) && !(this.matchException(url));\n        };\n\n        /**\n         * Apply a rule to a given tuple of rule array.\n         * @param enabledRuleArray      array for enabled rules\n         * @param disabledRulesArray    array for disabled rules\n         * @param {String} rule         RegExp as string\n         * @param {boolean} isActive    Is this rule active?\n         */\n        this.applyRule = (enabledRuleArray, disabledRulesArray, rule, isActive = true) => {\n            if (isActive) {\n                enabledRuleArray[rule] = true;\n\n                if (disabledRulesArray[rule] !== undefined) {\n                    delete disabledRulesArray[rule];\n                }\n            } else {\n                disabledRulesArray[rule] = true;\n\n                if (enabledRuleArray[rule] !== undefined) {\n                    delete enabledRuleArray[rule];\n                }\n            }\n        };\n\n        /**\n         * Add a rule to the rule array\n         * and replace old rule with new rule.\n         *\n         * @param {String} rule        RegExp as string\n         * @param {boolean} isActive   Is this rule active?\n         */\n        this.addRule = function (rule, isActive = true) {\n            this.applyRule(enabled_rules, disabled_rules, rule, isActive);\n        };\n\n        /**\n         * Return all active rules as an array.\n         *\n         * @return Array RegExp strings\n         */\n        this.getRules = function () {\n            if (!storage.referralMarketing) {\n                return Object.keys(Object.assign(enabled_rules, enabled_referralMarketing));\n            }\n\n            return Object.keys(enabled_rules);\n        };\n\n        /**\n         * Add a raw rule to the raw rule array\n         * and replace old raw rule with new raw rule.\n         *\n         * @param {String} rule        RegExp as string\n         * @param {boolean} isActive   Is this rule active?\n         */\n        this.addRawRule = function (rule, isActive = true) {\n            this.applyRule(enabled_rawRules, disabled_rawRules, rule, isActive);\n        };\n\n        /**\n         * Return all active raw rules as an array.\n         *\n         * @return Array RegExp strings\n         */\n        this.getRawRules = function () {\n            return Object.keys(enabled_rawRules);\n        };\n\n        /**\n         * Add a referral marketing rule to the referral marketing array\n         * and replace old referral marketing rule with new referral marketing rule.\n         *\n         * @param {String} rule        RegExp as string\n         * @param {boolean} isActive   Is this rule active?\n         */\n        this.addReferralMarketing = function (rule, isActive = true) {\n            this.applyRule(enabled_referralMarketing, disabled_referralMarketing, rule, isActive);\n        };\n\n        /**\n         * Add a exception to the exceptions array\n         * and replace old with new exception.\n         *\n         * @param {String} exception   RegExp as string\n         * @param {Boolean} isActive   Is this exception active?\n         */\n        this.addException = function (exception, isActive = true) {\n            if (isActive) {\n                enabled_exceptions[exception] = true;\n\n                if (disabled_exceptions[exception] !== undefined) {\n                    delete disabled_exceptions[exception];\n                }\n            } else {\n                disabled_exceptions[exception] = true;\n\n                if (enabled_exceptions[exception] !== undefined) {\n                    delete enabled_exceptions[exception];\n                }\n            }\n        };\n\n        /**\n         * Add a HTTP method to methods list.\n         *\n         * @param {String} method HTTP Method Name\n         */\n        this.addMethod = function (method) {\n            if (methods.indexOf(method) === -1) {\n                methods.push(method);\n            }\n        }\n\n        /**\n         * Check the requests' method.\n         *\n         * @param {requestDetails} details Requests details\n         * @returns {boolean} should be filtered or not\n         */\n        this.matchMethod = function (details) {\n            if (!methods.length) return true;\n            return methods.indexOf(details['method']) > -1;\n        }\n\n        /**\n         * Private helper method to check if the url\n         * an exception.\n         *\n         * @param  {String} url     RegExp as string\n         * @return {boolean}        if matching? true: false\n         */\n        this.matchException = function (url) {\n            let result = false;\n\n            //Add the site blocked alert to every exception\n            if (url === siteBlockedAlert) return true;\n\n            for (const exception in enabled_exceptions) {\n                if (result) break;\n\n                let exception_regex = new RegExp(exception, \"i\");\n                result = exception_regex.test(url);\n            }\n\n            return result;\n        };\n\n        /**\n         * Add a redirection to the redirections array\n         * and replace old with new redirection.\n         *\n         * @param {String} redirection   RegExp as string\n         * @param {Boolean} isActive     Is this redirection active?\n         */\n        this.addRedirection = function (redirection, isActive = true) {\n            if (isActive) {\n                enabled_redirections[redirection] = true;\n\n                if (disabled_redirections[redirection] !== undefined) {\n                    delete disabled_redirections[redirection];\n                }\n            } else {\n                disabled_redirections[redirection] = true;\n\n                if (enabled_redirections[redirection] !== undefined) {\n                    delete enabled_redirections[redirection];\n                }\n            }\n        };\n\n        /**\n         * Return all redirection.\n         *\n         * @return url\n         */\n        this.getRedirection = function (url) {\n            let re = null;\n\n            for (const redirection in enabled_redirections) {\n                let result = (url.match(new RegExp(redirection, \"i\")));\n\n                if (result && result.length > 0 && redirection) {\n                    re = (new RegExp(redirection, \"i\")).exec(url)[1];\n\n                    break;\n                }\n            }\n\n            return re;\n        };\n    }\n\n    // ##################################################################\n\n    /**\n     * Function which called from the webRequest to\n     * remove the tracking fields from the url.\n     *\n     * @param  {requestDetails} request     webRequest-Object\n     * @return {Array}                  redirectUrl or none\n     */\n    function clearUrl(request) {\n        const URLbeforeReplaceCount = countFields(request.url);\n\n        //Add Fields form Request to global url counter\n        increaseTotalCounter(URLbeforeReplaceCount);\n\n        if (storage.globalStatus) {\n            let result = {\n                \"changes\": false,\n                \"url\": \"\",\n                \"redirect\": false,\n                \"cancel\": false\n            };\n\n            if (storage.pingBlocking && storage.pingRequestTypes.includes(request.type)) {\n                pushToLog(request.url, request.url, translate('log_ping_blocked'));\n                increaseBadged(false, request);\n                increaseTotalCounter(1);\n                return {cancel: true};\n            }\n\n            /*\n            * Call for every provider the removeFieldsFormURL method.\n            */\n            for (let i = 0; i < providers.length; i++) {\n                if (!providers[i].matchMethod(request)) continue;\n                if (providers[i].matchURL(request.url)) {\n                    result = removeFieldsFormURL(providers[i], request.url, false, request);\n                }\n\n                /*\n                * Expand urls and bypass tracking.\n                * Cancel the active request.\n                */\n                if (result.redirect) {\n                    if (providers[i].shouldForceRedirect() &&\n                        request.type === 'main_frame') {\n                        browser.tabs.update(request.tabId, {url: result.url}).catch(handleError);\n                        return {cancel: true};\n                    }\n\n                    return {\n                        redirectUrl: result.url\n                    };\n                }\n\n                /*\n                * Cancel the Request and redirect to the site blocked alert page,\n                * to inform the user about the full url blocking.\n                */\n                if (result.cancel) {\n                    if (request.type === 'main_frame') {\n                        const blockingPage = browser.runtime.getURL(\"html/siteBlockedAlert.html?source=\" + encodeURIComponent(request.url));\n                        browser.tabs.update(request.tabId, {url: blockingPage}).catch(handleError);\n\n                        return {cancel: true};\n                    } else {\n                        return {\n                            redirectUrl: siteBlockedAlert\n                        };\n                    }\n                }\n\n                /*\n                * Ensure that the function go not into\n                * a loop.\n                */\n                if (result.changes) {\n                    return {\n                        redirectUrl: result.url\n                    };\n                }\n            }\n        }\n\n        // Default case\n        return {};\n    }\n\n    /**\n     * Call loadOldDataFromStore, getHash, counter, status and log functions\n     */\n\n    loadOldDataFromStore();\n    getHash();\n    setBadgedStatus();\n\n    /**\n     * Check the request.\n     */\n    function promise(requestDetails) {\n        if (isDataURL(requestDetails)) {\n            return {};\n        } else {\n            return clearUrl(requestDetails);\n        }\n    }\n\n    /**\n     * To prevent long loading on data urls\n     * we will check here for data urls.\n     *\n     * @type {requestDetails}\n     * @return {boolean}\n     */\n    function isDataURL(requestDetails) {\n        const s = requestDetails.url;\n\n        return s.substring(0, 4) === \"data\";\n    }\n\n    /**\n     * Call by each Request and checking the url.\n     *\n     * @type {Array}\n     */\n    browser.webRequest.onBeforeRequest.addListener(\n        promise,\n        {urls: [\"<all_urls>\"], types: getData(\"types\").concat(getData(\"pingRequestTypes\"))},\n        [\"blocking\"]\n    );\n}\n"
        },
        {
          "name": "core_js",
          "type": "tree",
          "content": null
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "commit",
          "content": null
        },
        {
          "name": "external_js",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "html",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifest.json",
          "type": "blob",
          "size": 8.3037109375,
          "content": "{\n  \"manifest_version\": 2,\n  \"name\": \"ClearURLs\",\n  \"version\": \"1.27.1\",\n  \"author\": \"Kevin Roebert\",\n  \"description\": \"__MSG_extension_description__\",\n  \"homepage_url\": \"https://docs.clearurls.xyz\",\n  \"default_locale\": \"en\",\n  \"content_security_policy\": \"script-src 'self'; object-src 'none'\",\n  \"browser_specific_settings\": {\n    \"gecko\": {\n      \"id\": \"{74145f27-f039-47ce-a470-a662b129930a}\"\n    }\n  },\n  \"icons\": {\n    \"16\": \"img/clearurls_16x16.png\",\n    \"19\": \"img/clearurls_19x19.png\",\n    \"20\": \"img/clearurls_20x20.png\",\n    \"24\": \"img/clearurls_24x24.png\",\n    \"30\": \"img/clearurls_30x30.png\",\n    \"32\": \"img/clearurls_32x32.png\",\n    \"38\": \"img/clearurls_38x38.png\",\n    \"48\": \"img/clearurls_48x48.png\",\n    \"64\": \"img/clearurls_64x64.png\",\n    \"96\": \"img/clearurls_96x96.png\",\n    \"128\": \"img/clearurls_128x128.png\"\n  },\n  \"browser_action\": {\n    \"browser_style\": true,\n    \"default_icon\": {\n      \"16\": \"img/clearurls_16x16.png\",\n      \"19\": \"img/clearurls_19x19.png\",\n      \"20\": \"img/clearurls_20x20.png\",\n      \"24\": \"img/clearurls_24x24.png\",\n      \"30\": \"img/clearurls_30x30.png\",\n      \"32\": \"img/clearurls_32x32.png\",\n      \"38\": \"img/clearurls_38x38.png\",\n      \"48\": \"img/clearurls_48x48.png\",\n      \"64\": \"img/clearurls_64x64.png\",\n      \"96\": \"img/clearurls_96x96.png\",\n      \"128\": \"img/clearurls_128x128.png\"\n    },\n    \"default_title\": \"ClearURLs Add-on\",\n    \"default_popup\": \"html/popup.html\"\n  },\n  \"permissions\": [\n    \"<all_urls>\",\n    \"webRequest\",\n    \"webRequestBlocking\",\n    \"storage\",\n    \"unlimitedStorage\",\n    \"contextMenus\",\n    \"webNavigation\",\n    \"tabs\",\n    \"downloads\"\n  ],\n  \"background\": {\n    \"scripts\": [\n      \"browser-polyfill.js\",\n      \"core_js/utils/Multimap.js\",\n      \"core_js/utils/URLHashParams.js\",\n      \"core_js/message_handler.js\",\n      \"external_js/ip-range-check.js\",\n      \"core_js/tools.js\",\n      \"core_js/badgedHandler.js\",\n      \"core_js/pureCleaning.js\",\n      \"core_js/context_menu.js\",\n      \"core_js/historyListener.js\",\n      \"clearurls.js\",\n      \"core_js/storage.js\",\n      \"core_js/watchdog.js\",\n      \"core_js/eTagFilter.js\"\n    ]\n  },\n  \"content_scripts\": [\n    {\n      \"all_frames\": true,\n      \"matches\": [\n        \"*://*.google.com/*\",\n        \"*://*.google.ad/*\",\n        \"*://*.google.ae/*\",\n        \"*://*.google.com.af/*\",\n        \"*://*.google.com.ag/*\",\n        \"*://*.google.com.ai/*\",\n        \"*://*.google.al/*\",\n        \"*://*.google.am/*\",\n        \"*://*.google.co.ao/*\",\n        \"*://*.google.com.ar/*\",\n        \"*://*.google.as/*\",\n        \"*://*.google.at/*\",\n        \"*://*.google.com.au/*\",\n        \"*://*.google.az/*\",\n        \"*://*.google.ba/*\",\n        \"*://*.google.com.bd/*\",\n        \"*://*.google.be/*\",\n        \"*://*.google.bf/*\",\n        \"*://*.google.bg/*\",\n        \"*://*.google.com.bh/*\",\n        \"*://*.google.bi/*\",\n        \"*://*.google.bj/*\",\n        \"*://*.google.com.bn/*\",\n        \"*://*.google.com.bo/*\",\n        \"*://*.google.com.br/*\",\n        \"*://*.google.bs/*\",\n        \"*://*.google.bt/*\",\n        \"*://*.google.co.bw/*\",\n        \"*://*.google.by/*\",\n        \"*://*.google.com.bz/*\",\n        \"*://*.google.ca/*\",\n        \"*://*.google.cd/*\",\n        \"*://*.google.cf/*\",\n        \"*://*.google.cg/*\",\n        \"*://*.google.ch/*\",\n        \"*://*.google.ci/*\",\n        \"*://*.google.co.ck/*\",\n        \"*://*.google.cl/*\",\n        \"*://*.google.cm/*\",\n        \"*://*.google.cn/*\",\n        \"*://*.google.com.co/*\",\n        \"*://*.google.co.cr/*\",\n        \"*://*.google.com.cu/*\",\n        \"*://*.google.cv/*\",\n        \"*://*.google.com.cy/*\",\n        \"*://*.google.cz/*\",\n        \"*://*.google.de/*\",\n        \"*://*.google.dj/*\",\n        \"*://*.google.dk/*\",\n        \"*://*.google.dm/*\",\n        \"*://*.google.com.do/*\",\n        \"*://*.google.dz/*\",\n        \"*://*.google.com.ec/*\",\n        \"*://*.google.ee/*\",\n        \"*://*.google.com.eg/*\",\n        \"*://*.google.es/*\",\n        \"*://*.google.com.et/*\",\n        \"*://*.google.fi/*\",\n        \"*://*.google.com.fj/*\",\n        \"*://*.google.fm/*\",\n        \"*://*.google.fr/*\",\n        \"*://*.google.ga/*\",\n        \"*://*.google.ge/*\",\n        \"*://*.google.gg/*\",\n        \"*://*.google.com.gh/*\",\n        \"*://*.google.com.gi/*\",\n        \"*://*.google.gl/*\",\n        \"*://*.google.gm/*\",\n        \"*://*.google.gp/*\",\n        \"*://*.google.gr/*\",\n        \"*://*.google.com.gt/*\",\n        \"*://*.google.gy/*\",\n        \"*://*.google.com.hk/*\",\n        \"*://*.google.hn/*\",\n        \"*://*.google.hr/*\",\n        \"*://*.google.ht/*\",\n        \"*://*.google.hu/*\",\n        \"*://*.google.co.id/*\",\n        \"*://*.google.ie/*\",\n        \"*://*.google.co.il/*\",\n        \"*://*.google.im/*\",\n        \"*://*.google.co.in/*\",\n        \"*://*.google.iq/*\",\n        \"*://*.google.is/*\",\n        \"*://*.google.it/*\",\n        \"*://*.google.je/*\",\n        \"*://*.google.com.jm/*\",\n        \"*://*.google.jo/*\",\n        \"*://*.google.co.jp/*\",\n        \"*://*.google.co.ke/*\",\n        \"*://*.google.com.kh/*\",\n        \"*://*.google.ki/*\",\n        \"*://*.google.kg/*\",\n        \"*://*.google.co.kr/*\",\n        \"*://*.google.com.kw/*\",\n        \"*://*.google.kz/*\",\n        \"*://*.google.la/*\",\n        \"*://*.google.com.lb/*\",\n        \"*://*.google.li/*\",\n        \"*://*.google.lk/*\",\n        \"*://*.google.co.ls/*\",\n        \"*://*.google.lt/*\",\n        \"*://*.google.lu/*\",\n        \"*://*.google.lv/*\",\n        \"*://*.google.com.ly/*\",\n        \"*://*.google.co.ma/*\",\n        \"*://*.google.md/*\",\n        \"*://*.google.me/*\",\n        \"*://*.google.mg/*\",\n        \"*://*.google.mk/*\",\n        \"*://*.google.ml/*\",\n        \"*://*.google.com.mm/*\",\n        \"*://*.google.mn/*\",\n        \"*://*.google.ms/*\",\n        \"*://*.google.com.mt/*\",\n        \"*://*.google.mu/*\",\n        \"*://*.google.mv/*\",\n        \"*://*.google.mw/*\",\n        \"*://*.google.com.mx/*\",\n        \"*://*.google.com.my/*\",\n        \"*://*.google.co.mz/*\",\n        \"*://*.google.com.na/*\",\n        \"*://*.google.com.nf/*\",\n        \"*://*.google.com.ng/*\",\n        \"*://*.google.com.ni/*\",\n        \"*://*.google.ne/*\",\n        \"*://*.google.nl/*\",\n        \"*://*.google.no/*\",\n        \"*://*.google.com.np/*\",\n        \"*://*.google.nr/*\",\n        \"*://*.google.nu/*\",\n        \"*://*.google.co.nz/*\",\n        \"*://*.google.com.om/*\",\n        \"*://*.google.com.pa/*\",\n        \"*://*.google.com.pe/*\",\n        \"*://*.google.com.pg/*\",\n        \"*://*.google.com.ph/*\",\n        \"*://*.google.com.pk/*\",\n        \"*://*.google.pl/*\",\n        \"*://*.google.pn/*\",\n        \"*://*.google.com.pr/*\",\n        \"*://*.google.ps/*\",\n        \"*://*.google.pt/*\",\n        \"*://*.google.com.py/*\",\n        \"*://*.google.com.qa/*\",\n        \"*://*.google.ro/*\",\n        \"*://*.google.ru/*\",\n        \"*://*.google.rw/*\",\n        \"*://*.google.com.sa/*\",\n        \"*://*.google.com.sb/*\",\n        \"*://*.google.sc/*\",\n        \"*://*.google.se/*\",\n        \"*://*.google.com.sg/*\",\n        \"*://*.google.sh/*\",\n        \"*://*.google.si/*\",\n        \"*://*.google.sk/*\",\n        \"*://*.google.com.sl/*\",\n        \"*://*.google.sn/*\",\n        \"*://*.google.so/*\",\n        \"*://*.google.sm/*\",\n        \"*://*.google.sr/*\",\n        \"*://*.google.st/*\",\n        \"*://*.google.com.sv/*\",\n        \"*://*.google.td/*\",\n        \"*://*.google.tg/*\",\n        \"*://*.google.co.th/*\",\n        \"*://*.google.com.tj/*\",\n        \"*://*.google.tk/*\",\n        \"*://*.google.tl/*\",\n        \"*://*.google.tm/*\",\n        \"*://*.google.tn/*\",\n        \"*://*.google.to/*\",\n        \"*://*.google.com.tr/*\",\n        \"*://*.google.tt/*\",\n        \"*://*.google.com.tw/*\",\n        \"*://*.google.co.tz/*\",\n        \"*://*.google.com.ua/*\",\n        \"*://*.google.co.ug/*\",\n        \"*://*.google.co.uk/*\",\n        \"*://*.google.com.uy/*\",\n        \"*://*.google.co.uz/*\",\n        \"*://*.google.com.vc/*\",\n        \"*://*.google.co.ve/*\",\n        \"*://*.google.vg/*\",\n        \"*://*.google.co.vi/*\",\n        \"*://*.google.com.vn/*\",\n        \"*://*.google.vu/*\",\n        \"*://*.google.ws/*\",\n        \"*://*.google.rs/*\",\n        \"*://*.google.co.za/*\",\n        \"*://*.google.co.zm/*\",\n        \"*://*.google.co.zw/*\",\n        \"*://*.google.cat/*\"\n      ],\n      \"js\": [\n        \"core_js/google_link_fix.js\"\n      ],\n      \"run_at\": \"document_end\"\n    },\n    {\n      \"all_frames\": true,\n      \"matches\": [\n        \"*://*.yandex.ru/*\",\n        \"*://*.yandex.com/*\",\n        \"*://*.ya.ru/*\"\n      ],\n      \"js\": [\n        \"core_js/yandex_link_fix.js\"\n      ],\n      \"run_at\": \"document_end\"\n    }\n  ],\n  \"options_ui\": {\n    \"page\": \"html/settings.html\"\n  }\n}\n"
        }
      ]
    }
  ]
}