{
  "metadata": {
    "timestamp": 1736561680288,
    "page": 270,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mozilla/rhino",
      "stars": 4239,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4326171875,
          "content": "# Set default behavior, in case users don't have core.autocrlf set.\n* text=auto\n\n.classpath text\n.project text\n*.html text\n*.htm text\n*.java text eol=lf\n*.js text eol=lf\n*.jstest text eol=lf\n*.jsp text\n*.php text\n*.properties text\n*.sh text\n*.xml text\n*.md text\n*.bat text\n*.gradle text\n*.pl text\n*.mk text\n*.tests text\n*.doctest text\n/man/*.1 text\n/gradlew text\n\n*.bmp binary\n*.gif binary\n*.jar binary\n*.jpg binary\n*.jpeg binary\n*.png binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.201171875,
          "content": "# os specific\n.DS_Store\n\n# build directories\nbuild/\nlib/\n\n# artifacts\n*.zip\n*.iml\n.idea/\nout/\ntarget/\n.gradle\n*~\n\n# eclipse\n.classpath\n.project\nbin/\n.settings/\n\n# idea\nrhino.ipr\nrhino.iws\n\n# VSCode\n.vscode\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0849609375,
          "content": "[submodule \"test262\"]\n\tpath = tests/test262\n\turl = https://github.com/tc39/test262.git\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.6748046875,
          "content": "# Community Participation Guidelines\n\nThis repository is governed by Mozilla's code of conduct and etiquette guidelines. \nFor more details, please read the\n[Mozilla Community Participation Guidelines](https://www.mozilla.org/about/governance/policies/participation/). \n\n## How to Report\nFor more information on how to report violations of the Community Participation Guidelines, please read our '[How to Report](https://www.mozilla.org/about/governance/policies/participation/reporting/)' page.\n\n<!--\n## Project Specific Etiquette\n\nIn some cases, there will be additional project etiquette i.e.: (https://bugzilla.mozilla.org/page.cgi?id=etiquette.html).\nPlease update for your project.\n-->\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 16.38671875,
          "content": "The majority of Rhino is licensed under the MPL 2.0:\n\nMozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "NOTICE-tools.txt",
          "type": "blob",
          "size": 1.7822265625,
          "content": "Rhino is licensed subject to the terms of the Mozilla Public License, v. 2.0.\nSee \"LICENSE.txt\" for the text of the license.\n\nThe files in toolsrc/org/mozilla/javascript/tools/debugger/treetable (runtime\npackage org.mozilla.javascript.tools.debugger.treetable) are available under\nthe following license:\n\n----\n\nCopyright 1997, 1998 Sun Microsystems, Inc.  All Rights Reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n  - Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  - Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n  - Neither the name of Sun Microsystems nor the names of its\n    contributors may be used to endorse or promote products derived\n    from this software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 1.8193359375,
          "content": "Rhino is licensed subject to the terms of the Mozilla Public License, v. 2.0.\nSee \"License.txt\" for the text of the license.\n\nRhino contains the following additional software:\n\n----\n\nPortions of the floating-point conversion code, and portions of the test suite\ncome from the Google V8 JavaScript engine and are subject to the following:\n\nCopyright 2010-2015 the V8 project authors. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of Google Inc. nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "PGP_KEYS.txt",
          "type": "blob",
          "size": 0.3544921875,
          "content": "Recent releases of Rhino are signed using the GPG key:\n\ngreg+rhino@brail.org\n\nwhich may be found using GPG at keyserver.ubuntu.com.\n\nThe fingerprint is below:\n\npub   rsa3072 2022-01-04 [SC]\n      E9AF 5293 C334 C7C0 B583  227D 2F45 F85C DF08 2E68\nuid           [ unknown] Gregory Brail (Rhino Automated Builds) <greg+rhino@brail.org>\nsub   rsa3072 2022-01-04 [E]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.9775390625,
          "content": "# Rhino: JavaScript in Java\n\n<a title=\"Rodrigo J De Marco, CC0, via Wikimedia Commons\" href=\"https://commons.wikimedia.org/wiki/File:Rhino_(234581759).jpeg\"><img width=\"384\" alt=\"Rhino (234581759)\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Rhino_%28234581759%29.jpeg/512px-Rhino_%28234581759%29.jpeg\"></a>\n\nRhino is an implementation of JavaScript in Java.\n\n## License\n\nRhino is licensed under the [MPL 2.0](./LICENSE.txt).\n\n## Releases\n\nThe current release is <a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_15_Release\">Rhino 1.7.15</a>. Please see the [Release Notes](./RELEASE-NOTES.md).\n\n<details><summary>Releases</summary>\n<table>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_15_Release\">Rhino 1.7.15</a></td><td>May 3, 2024</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_14_Release\">Rhino 1.7.14</a></td><td>January 6, 2022</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_13_Release\">Rhino 1.7.13</a></td><td>September 2, 2020</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_12_Release\">Rhino 1.7.12</a></td><td>January 13, 2020</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_11_Release\">Rhino 1.7.11</a></td><td>May 30, 2019</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_10_Release\">Rhino 1.7.10</a></td><td>April 9, 2018</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_9_Release\">Rhino 1.7.9</a></td><td>March 15, 2018</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_8_Release\">Rhino 1.7.8</a></td><td>January 22, 2018</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_7_2_Release\">Rhino 1.7.7.2</a></td><td>August 24, 2017</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_7_1_RELEASE\">Rhino 1.7.7.1</a></td><td>February 2, 2016</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_7_RELEASE\">Rhino 1.7.7</a></td><td>June 17, 2015</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7_6_RELEASE\">Rhino 1.7.6</a></td><td>April 15, 2015</td></tr>\n<tr><td><a href=\"https://github.com/mozilla/rhino/releases/tag/Rhino1_7R5_RELEASE\">Rhino 1.7R5</a></td><td>January 29, 2015</td></tr>\n</table>\n</details>\n\n\n[Compatibility table](https://mozilla.github.io/rhino/compat/engines.html) which shows which advanced JavaScript\nfeatures from ES6, and ES2016+ are implemented in Rhino.\n\n[![GitHub Action Status](https://github.com/mozilla/rhino/actions/workflows/gradle.yml/badge.svg)](https://github.com/mozilla/rhino/actions/workflows/gradle.yml)\n\n## Documentation\n\nInformation for script builders and embedders:\n\n[Archived](http://web.archive.org/web/20210304081342/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Documentation)\n\nJavaDoc for all the APIs:\n\n[https://javadoc.io/doc/org.mozilla/rhino](https://javadoc.io/doc/org.mozilla/rhino)\n\n## Code Structure\n\nRhino 1.7.15 and before were primarily used in a single JAR called \"rhino.jar\".\n\nNewer releases now organize the code using Java modules. There are four primary modules:\n\n* **rhino**: The primary codebase necessary and sufficient to run JavaScript code. Required by everything that uses Rhino. In releases *after* 1.7.15, this module does not contain the \"tools\" or the XML implementation.\n* **rhino-tools**: Contains the shell, debugger, and the \"Global\" object, which many tests and other Rhino-based tools use. Note that adding Global gives Rhino the ability to print to stdout, open files, and do other things that may be considered dangerous in a sensitive environment, so it only makes sense to include if you will use it.\n* **rhino-xml**: Adds the implementation of the E4X XML standard. Only required if you are using that.\n* **rhino-engine**: Adds the Rhino implementation of the standard Java *ScriptEngine* interface. Some projects use this to be able to switch between script execution engines, but for anything even moderately complex it is almost always easier and always more flexible to use Rhino's API directly.\n* **rhino-all**: This creates an \"all-in-one\" JAR that includes *rhino-runtime*, *rhino-tools*, and *rhino-xml*. This is what's used if you want to run Rhino using \"java jar\".\n\nThe release contains the following other modules, which are used while building and \ntesting but which are not published to Maven Central:\n\n* **tests**: The tests that depend on all of Rhino and also the external tests, including the Mozilla legacy test scripts and the test262 tests.\n* **benchmarks**: Runs benchmarks using JMH.\n* **examples**: Surprisingly, this contains example code.\n\n## Building\n\n### Requirements\n\nRhino requires Java 17 or higher to build. The \"spotless\" tool, which enforces code formatting, will not\nrun on older Java versions and you will receive a warning. If in doubt, Java 21 works great.\n\nRhino runs on Java 11 and higher. The build tools use the \"--release\" flag to ensure that only\nfeatures from Java 11 are used in the product.\n\nThe CI tools run the Rhino tests on Java 11, 17, and 21. Regardless of what version of Java you are\nbuilding with, you can test on another Java version using the RHINO_TEST_JAVA_VERSION environment variable.\n\n### How to Build\n\nFor normal development, you can build the code, run the static checks, and run all the tests like this:\n\n    git submodule init\n    git submodule update\n    ./gradlew check\n\nTo just run the Rhino shell, you can do this from the top-level directory:\n\n    ./gradlew run -q --console=plain\n\nAlternately, you can build an all-in-one JAR and run that:\n\n    ./gradlew :rhino-all:build\n    java -jar rhino-all/build/libs/rhino-all-1.7.16-SNAPSHOT.jar\n\nYou can also run the benchmarks:\n\n    ./gradlew jmh\n\n### Testing on other Java Versions\n\nIt is a good idea to test major changes on Java 11 before assuming that they will pass the CI\ntests. To do this, set the environment variable RHINO_TEST_JAVA_VERSION to the version that you\nwant to test. For example:\n\n    RHINO_TEST_JAVA_VERSION=11 ./gradlew check\n\nThis will only work if Gradle can find a JDK of the appropriate version. You can troubleshoot\nthis using the command:\n\n    ./gradlew -q javaToolchains\n\nNot all installers seem to put JDKs in the places where Gradle can find them. When in doubt,\ninstallatioons from [Adoptium](https://adoptium.net) seem to work on most platforms.\n\n### Code Coverage\n\nThe \"Jacoco\" coverage is enabled by default for the main published modules as well as the special \n\"tests\" module. Coverage is generated for each of the main projects separately and available by\nrunning\n\n    ./gradlew jacocoTestReport\n\nTo see an aggregated coverage report for everything, which is probably what you want, run\n\n    ./gradlew testCodeCoverageReport\n\nThe result is in:\n    ./tests/build/reports/jacoco/testCodeCoverageReport/html\n\n## Releasing and publishing new version\n\n1. Ensure all tests are passing\n2. Remove `-SNAPSHOT` from version in `gradle.properties` in project root folder\n3. Create file `gradle.properties` in `$HOME/.gradle` folder with following properties. Populate them with maven repo credentials and repo location.\n```\nmavenUser=\nmavenPassword=\nmavenSnapshotRepo=\nmavenReleaseRepo=\n```\n\n4. Run `Gradle` task to publish artifacts to Maven Central.\n```\n./gradlew publish\n```\n5. Increase version and add `-SNAPSHOT` to it in `gradle.properties` in project root folder.\n6. Push `gradle.properties` to `GitHub`\n\n### Java 16 and later\n\nIf you are using a modular JDK that disallows the reflective access to\nnon-public fields (16 and later), you *may* need to configure the JVM with the\n[`--add-opens`](https://docs.oracle.com/en/java/javase/17/migrate/migrating-jdk-8-later-jdk-releases.html#GUID-12F945EB-71D6-46AF-8C3D-D354FD0B1781)\noption to authorize the packages that your scripts shall use, for example:\n```\n--add-opens java.desktop/javax.swing.table=ALL-UNNAMED\n```\n\nThis is not necessary just to build or test Rhino -- it may be necessary when embedding it\ndepending on what your project does.\n\n## Issues\n\nMost issues are managed on GitHub:\n\n[https://github.com/mozilla/rhino/issues](https://github.com/mozilla/rhino/issues)\n\n## Contributing PRs\n\nTo submit a new PR, please use the following process:\n\n* Ensure that your entire build passes \"./gradlew check\". This will include\ncode formatting and style checks and runs the tests.\n* Please write tests for what you fixed, unless you can show us that existing\ntests cover the changes. Use existing tests, such as those in\n\"testsrc/org/mozilla/javascript/tests\", as a guide.\n* If you fixed ECMAScript spec compatibility, take a look at test262.properties and see\nif you can un-disable some tests.\n* Push your change to GitHub and open a pull request.\n* Please be patient as Rhino is only maintained by volunteers and we may need\nsome time to get back to you.\n* Thank you for contributing!\n\n## Updating Test262 tests\n\nIf you are adding new capabilities to Rhino, you may be making more test262 tests pass, which is\na good thing. Please [see the instructions](./tests/testsrc/README.md) on how to update our test262 configuration.\n\nBecause of differences between Java and JavaScript, when testing on newer Java versions, many\nUnicode-related test262 tests appear to pass, but they will fail on Java 11. Please ignore these!\n\n### Code Formatting\n\nCode formatting was introduced in 2021. The \"spotless\" plugin will fail your\nbuild if you have changed any files that have not yet been reformatted.\nPlease use \"spotlessApply\" to reformat the necessary files.\n\nIf you are the first person to touch a big file that spotless wants to make\nhundreds of lines of changes to, please try to put the reformatting changes\nalone into a single Git commit so that we can separate reformatting changes\nfrom more substantive changes.\n\nCurrently, you must be building on Java 17 or higher for Spotless to run.\n\n## More Help\n\nGitHub is the best place to go with questions. For example, we use \"GitHub discussions\":\n\n[https://github.com/mozilla/rhino/discussions](https://github.com/mozilla/rhino/discussions)\n"
        },
        {
          "name": "RELEASE-NOTES.md",
          "type": "blob",
          "size": 47.884765625,
          "content": "# Rhino 1.8.0\n## January 2, 2025\n\nRhino 1.8.0 contains some significant changes, so we're incrementing the final version number for the first time in a very long time. Here are a few highlights:\n\n* Rhino now requires Java 11 minimum. We currently test against Java 11, 17, and 21.\n* Rhino has been broken down into individual Java modules that are properly encapsulated as Java Modules. See [README.md](https://github.com/mozilla/rhino/blob/master/README.md) for a breakdown of which modules are which -- short answer is that everyone will need the \"rhino\" module and many will need others.\n* Older code not able to adapt to using multiple JARS can still use the \"rhino-all\" module, which publishes an \"all-in-one\" JAR like the old \"rhino.jar\".\n* The default language level is \"VERSION_ES6\". That means that modern JavaScript features supported by Rhino will work by default.\n* There are big improvements in compatibility, including support for \"super\", reflect and proxy, and lots of other language features. See the [compatibility table](https://mozilla.github.io/rhino/compat/engines.html) for the details.\n\nThanks to all who contributed -- we had 24 contributors to this release, with some new contributors who added significant capabilities. Please keep the contributions and attention coming!\n\n# Rhino 1.7.15\n## May 3, 2024\n\nHighlights of this release include:\n\n* Basic support for \"rest parameters\"\n* Improvements in Unicode support\n* \"Symbol.species\" implemented in many places\n* More correct property ordering in many places\n* And many more improvements and bug fixes\n\nThis release includes committs from 29 different committers. Thanks to you all for your help!\n\n# Rhino 1.7.14\n## January 6, 2022\n\n# Highlights\n## Features\n#### ECMAScript features\n* #160 Promise support (@gbrail)\n* #837 BigInt support (@tuchida)\n* #243 Template Literal support (@p-bakker)\n* #879 String.raw (@tonygermano)\n* #977 JSON superset (@tuchida)\n* #932 globalThis (@p-bakker)\n* #838 Exponential operator (@tuchida)\n* #853 Short-hand property names (@tuchida)\n* #902 Object.values / Object.entries / Object.fromEntries (@rPraml)\n* #883 Number.EPSILON (@tonygermano)\n\n#### Non-ECMAScript features\n* #153 stack property on Error Constructor (@gbrail)\n* #888 support for Mozilla-styled Stack formatting (@rbri)\n\n[All features](https://github.com/mozilla/rhino/issues?q=milestone%3A%22Release+1.7.14%22+label%3Afeature+is%3Aclosed)\n\n## Bugs\n[All bug fixes](https://github.com/mozilla/rhino/issues?q=milestone%3A%22Release+1.7.14%22+label%3Abug)\n\n## Performance\n[All performance enhancements](https://github.com/mozilla/rhino/issues?q=milestone%3A%22Release+1.7.14%22+label%3APerformance)\n\n## Java Interop\n* #839 JavaScript for-of loop support for Java Iterables (@tuchida)\n* #860 / #857 JSON.stringify support on Java Objects (@tonygermano / @rPraml)\n* #1031 delete operator and .length setting support in JavaScript on Java Lists (@rPraml)\n* #901 java.util.subList() support on JavaScript Arrays in Java (@rPraml)\n* #889 Automatically increase size of Java List instances on .put(...) if required (@rPraml)\n\n[All Java Interop related cases](https://github.com/mozilla/rhino/issues?q=milestone%3A%22Release+1.7.14%22+label%3A%22Java+Interop%22)\n\n## Embedding Rhino\n* #864 Context now implements Closable (@gbrail)\n* #865 Introduction of LambdaFunction and LambdaConstructor, to be used to represent Java lambda functions as native JavaScript functions and also can be used to construct an entire class out of lambdas (@gbrail)\n* #911 Throw InternalError instead of wrapped JavaException if thrown Java Exception class is not visible due to class shutter (@youngj)\n\n[All Rhino embedding related cases](https://github.com/mozilla/rhino/issues?q=milestone%3A%22Release+1.7.14%22+label%3A%22embedding+Rhino%22+)\n\n## Test262 suite\n* Running against a much newer version of Test262 suite\n* Improved documentation for running the Test262 suite + more options to make running the tests easier & faster\n* #930 Support added for automatically regenerating the test262.properties file based on actual passage of tests\n* #930 Improved feedback about reason of test failures\n\n## Distribution\n* #873 Automatic module names\n\n## Internals\n* #878 Removed idSwitch\n* #896 SlotMap and Slot refactoring\n* #922 Started extracting logic related to Abstract Operations as defined by the ECMAScript specification \n\n## Misc.\n* #661 Rhino now listed in the [kangax ES6 Compatibility table](https://kangax.github.io/compat-table/es6) (must select the `Show obsolete platforms` in the upperleft corner)\n* #661 Rhino now available as a compilation target in Babel through @babel/preset-env:\n```\n{\n  \"targets\": {\n    \"rhino\": \"1.7.13\"\n  }\n}\n```\n* Introduced Java Code Formatting through spotless\n* Moved to CircleCI (instead of Travis)\n* Enabled Gitlab CI, running tests on multiple Java versions'\n  \n## Thanks!\n\nThis release contains more than 350 commits from 23 contributors. Thanks to everyone who helped!\n\n# Rhino 1.7.13\n## September 2, 2020\n\n### Script Engine support\n\nNow that Nashorn has been deprecated, a number of people have asked about using\nRhino with the standard Java \"ScriptEngine\" interface. This release supports that.\n\nHowever, in order to avoid breaking existing code, the script engine is\nshipped in a separate JAR. Use the \"rhino-engine\" jar along with the\nstandard \"rhino\" jar to include this feature.\n\n### Generator Support\n\nThis release supports generators based on the ES6-standard \"function *\"\nsyntaxt.\n\n### Other important changes\n\nThis release also includes a number of quality and consistency fixes from five contributors.\nAs always, check out the [compatibility table](http://mozilla.github.io/rhino/compat/engines.html)\nto see where Rhino stands today.\n\nGregory Brail (18):\n*     Start on 1.7.13.\n*     Add a build config for CircleCi.\n*     Upgrade Gradle version to 6.5.\n*     Update max workers.\n*     Add support for ES6 generators.\n*     Make \"GeneratorFunction\" pattern work in interpreted mode.\n*     Complete implementation of GeneratorFunction.\n*     Diagnostics to discover test timeouts.\n*     Implement standard Java ScriptEngine\n*     Change MozillaSuiteBenchmark to not fork threads.\n*     Try to improve performance of MozillaSuiteTest\n*     Disable some very slow tests\n*     Start using JMH for benchmarks.\n*     Many small fixes suggested by FindBugs and other linters\n*     Turn off all the Mozilla tests that use the \"BigO\" function.\n*     Move \"BodyCodegen\" into a file with the appropriate name.\n*     Add feature flag for changes to Function.__proto__\n*     Make __proto__ more closely match the spec\n\nKarl Tauber (2):\n*     Debugger fixes for FlatLaf (https://github.com/JFormDesigner/FlatLaf): - make renderer tree row height same as table row height - increase monospaced font size in script source and evaluation view if L&F uses larger font - remove renderer tree border if L&F sets one (built in L&F do not)\n*     Debugger: fix NPE in variables view when expanding \"CallSite\"\n\nSylvain Jermini (7):\n*     improve java.util.{List,Map} interop\n*     travis: switch from trusty to xenial + set explicit -Xss in tests\n*     try to fix circle, increase Xss\n*     Fix failing string.trim.doctest in java11.\n*     NativeDate: DateFormat, use explicit pattern, has the default has changed from java8 to 9. See https://stackoverflow.com/q/53317365\n*     add java11 to travis test matrix\n*     various fixes so the javadoc linter is happy\n\nhjx胡继续 (2):\n*     Add String.fromCodePoint()\n*     fromCharCode optimize\n\nian4hu (5):\n*     Add String.prototype.trimStart String.prototype.strimEnd\n*     style: code style\n*     test: string test with hex code instead of literal\n*     remove unused StringBuilder\n*     fix tests in test262/built-ins/String/fromCodePoint/*\n\nleela52452 (1):\n*     fix OWASP Cheat Sheet markdown format\n\nRBRi (48):\n*     switch value and done\n*     make some method protected to support rhino-external implementations\n*     NativeArrayBuffer slice() length is 2\n*     fix String.indexOf and String.includes when searching for an empty st… (#747)\n*     fix string.split with limit 0\n*     fix for issue #665 (maybe we have to adjust the version switch to version 1_6)\n*     fix for the recursion detection when converting an array into a string\n*     fix #670\n*     add testcase for issue #656\n*     Symbol.length is 0 fixes #648\n*     add testcase for issue #651\n*     fix type o the expected value\n*     improve seal() and freeze() processing; fixes #174\n*     An error should be thrown when defining a property for a read-only variable in strict mode fixes 573\n*     code cleanup\n*     Do not save/share an instance of NativeArrayBuffer in a static variable. This introduces really strange side effects, because the instance is available (and changeable) from javascript code. These changes are 'persistent' in a way that starting a fresh rhino instance still uses this changed object.\n*     various fixes for array calls using this pattern Array.prototype.foo.call(null, ....);\n*     fix issue #648\n*     fix Object.getOwnPropertyDescriptor for index properties on native strings\n*     Function.__proto__ ignores write access\n*     improved regexp parser based on commit 2164382abe078ea2024b9dff7fe416a78e3a668f from anba\n*     fix handling of undefined parameter value in String.normalize()\n*     it should not be possible to change the [[Prototype]]  of a non-extensible object; some cleanup\n*     add version guard\n*     fix all this-value-not-obj-coercible.js tests for string\n*     checkstyle fixes\n*     fix test suite setup\n*     use the RangeError construction helper\n*     improved handling of negative ArrayBuffer size fixes #708\n*     in ES6 TypedArray constructors are only callable via new\n*     avoid some auto boxing use Double.valueOf instead of new some cleanup try to optimize the code a bit to avoid unnecessary conversations and Double object creation make some methods static\n*     regular expressions are not functions in the context of string replace fixes #726\n*     improved regex range handling\n*     do not inherit strict mode when parsing a function body\n*     code style fix\n*     fix wrong start object for getter in Object.assign\n*     use Undefined.isUndefined()\n*     String.prototype[Symbol.iterator].call(undefined) has to throw because undefined is not coercible\n*     enable more test cases\n*     reduce auto boxing to be able to better control this and avoid boxing if possible\n*     make a bunch  of methods static\n*     code cleanup\n*     make the inner class static (this makes also SpotBugs happy)\n*     Object.setPrototypeOf() arg[0] has to be coercible\n*     fix one more case\n*     match\n*     search\n*     throw if the lastIndex prop of an regex is readonly\n\n# Rhino 1.7.12\n## January 13, 2020\n\n### XML external entities disabled by default\n\nAs of this release, Rhino makes \"XML external entity injections\" more difficult\nby disabling fetching of external DTDs and stylesheets by default,\nas recommended in the [OWASP Cheat Sheet](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.md). \nEven though this may break some existing projects, the fact that this\nvulnerability is in the OWASP top 10 makes it important enough to change\nthe default.\n\nDevelopers who still need this old capability can re-enable it by setting the\nContext feature flag FEATURE_ENABLE_XML_SECURE_PARSING to false. (The default\nis true.)\n\n### New JAR for embedding use cases\n\nThis release also includes a second JAR artifact, \"rhino-runtime.jar\". This is\nsimply the existing Rhino JAR with the \"tools\" source directory excluded. \nThis directory includes the Rhino shell as well as the default \"Global\" \nobject, which includes capabilities to load and process external source\ncode.\n\nSince some automated source-scanning tools mark these capabilties as insecure,\nthis new JAR provides a way to only include the parts of Rhino that embedders\ntypically need without pulling in additional capabilities.\n\nDevelopers who typically embed \"rhino.jar\" might consider embedding \"rhino-runtime.jar\"\ninstead if they do not need all this.\n\nThanks to the following developers for the contributions below!\n\nAditya Pal (1):\n*     Fix syntax error for comments in array (#607)\n\nChris Smith (1):\n*     Adding secure configuration for XML parsers (#600)\n\nGregory Brail (12):\n*     Update versions for 1.7.12 release.\n*     Fix a code generation bug for generators.\n*     Fix \"fall through\" comment.\n*     Fix static analysis around NaN values.\n*     More isNaN fixes and one rounding bug.\n*     Make XML processor configuration more robust.\n*     Enable SpotBugs plugin.\n*     Fix minor static analysis findings.\n*     Increase Travis timeout.\n*     Disable more flaky \"BigO\" tests.\n*     Fix handling of \"return\" in iterators.\n*     Undo setting some members \"final\".\n\nIvan Di Francesco (1):\n*     Fix warnings (#596)\n\nRoland Praml (2):\n*     FIX: NativeJavaObject.getDefaultValue recognizes numbers correctly\n*     #511 fixing InterfaceAdapter abstract name lookup.\n\nStijn Kliemesch (7):\n*     Private static method ScriptRuntime.enumInitOrder(Context,IdEnumeration) no longer expects given IdEnumeration's property obj to be of type ScriptableObject specifically, only of type SymbolScriptable.\n*     Added testclass IterableTest to test iterable implementations, currently with one testcase for a host object, specifically one that uses Array Iterator.\n*     Added more tests to IterableTest.\n*     Fix for #616 (#617)\n*     Fixes for calling several Object.prototype members.\n*     Fixed dynamic scoping for implementations of Object.create and Object.defineProperties\n*     Testcase for dynamic scoping and Object.create.\n\nnename0 (2):\n*     Fix Array.include return a wrapped Boolean\n*     implement Array.includes to align to specs\n\nRBRi (20):\n*     fix for Map/Set working with ConsString as key also; closes #583\n*     fix propertyIsEnumerable when using an index to access string; closes #582\n*     ignore surplus search/match/replace parameters; closes #581\n*     add support for setPrototypeOf\n*     fixed imports\n*     RangeError should be throw if the argument of Number.prototype.toFixed is less than 0 fixes #587\n*     fix interpreter fallback when using streams (fixes #592)\n*     Parser already always reads the reader into a string. Move this reader handling to the Context to be able to fall back to the interpreter in all cases.\n*     fix imports\n*     functions declared as var f = function f() {...} within a function should not impact higher scope variable with the same name\n*     functions declared as var f = function f() {...} within a function should not impact higher scope variable with the same name\n*     fix Boolean(document.all)\n*     many more tests are passing already and some cleanup\n*     add tests for built-ins/ThrowTypeError and built-ins/TypedArray\n*     add tests for built-ins/TypedArrays\n*     fix BYTES_PER_ELEMENT property\n*     fix BYTES_PER_ELEMENT prototype property\n*     fix TypedArray constructor arity\n*     Fix issue with parseInt's handling of leading zeroes\n*     #529 (#628)\n\n# Rhino 1.7.11\n## May 30, 2019\n\nThis release includes implementations of a number of missing JavaScript language features,\nincluding:\n\n* Improvement to the accuracy and reliability of the parser and its associated AST.\n* The Map, Set, WeakMap, and WeakSet classes.\n* More Array functions, including from, of, fill, keys, values, entries, and copyWithin.\n* Many more Math methods.\n* More Object functions, including seal and freeze.\n* Many other bug fixes, as shown below.\n\nIn general, Rhino's philosophy for new features and changes is to\nfollow the ECMAScript spec, but to use the \"language version\" on the Context class\nwhen backward compatibility would be broken.\n\nFor example, the Array.prototype.concat function in older versions of Rhino would treat\nany input value as \"spreadable\" if it has the same constructor as Array. ECMAScript now says\nclearly that this should only happen if the \"isConcatSpreadable\" symbol is present. In\nthis release, the old behavior is disable when the language level is at least the\n\"ES6\" level (Context.VERSION_ES6, or 200).\n\nDevelopers working on new code will be happier if they set the language level to\nCONTEXT.VERSION_ES6, or use the \"-version 200\" flag to the command line tool.\n\nA future release will change the default language version of the command line tool.\n\nThis release contains contributions from 15 developers. Thanks for all your hard work!\n\nAttila Szegedi (7):\n*     Improvements to MemberBox (#438)\n*     Labmdify usages of ContextAction\n*     Make ContextAction generic.\n*     API for comparing continuation implementations\n*     Algorithm for structural equality comparison of object graphs\n*     Use structural equality as the equality algorithm for Interpreter.CallFrame, which serves as the NativeContinuation implementation.\n*     Add workarounds for #437 and #449\n\nDimitar Nestorov (1):\n*     Update README.md\n\nDirk Hogan (1):\n*     431 update expiry of cached commonjs entity if no change on filesystem\n\nGregory Brail (18):\n*     Prepare for next iteration.\n*     Support replacing prototype functions of native objects.\n*     Fix NullPointerException in __defineGetter__\n*     Fix a problem with standard objects that have Symbols in their  prototypes.\n*     Implement the built-in Set and Map classes for ES6.\n*     Add WeakMap and WeakSet on top of the Map and Set work.\n*     Upgrade max heap for Gradle tests to 1 GB.\n*     Test cases and a small fix for native arrays.\n*     Implement @@isConcatSpreadable and make Java arrays spreadable\n*     Code review comments for @@isConcatSpreadable.\n*     Make the \"Sorting\" helper class a proper singleton.\n*     Un-do recent addition to the Scriptable interface.\n*     Update Gradle wrapper version.\n*     Fix flag tests that assume Context is available.\n*     Fix a parser bug with missing semicolon warnings.\n*     Fix a regression introduced recently to MemberBox.\n*     More compatibility fixes for Array.prototype.concat.\n*     Work on Array.of, from, and copyWithin.\n*     Fix a parsing regression.\n\nIgor Kuzmanenko (2):\n*     fixes XmlMemberGet toSource implementation (#483)\n*     fixes position for ParenthesizedExpression nodes (#129)\n\nMarkus Sunela (1):\n*     Add manual OSGi manifest\n\nMozilla-GitHub-Standards (1):\n*     Add Mozilla Code of Conduct file\n\nNedelcho Delchev (1):\n*     Update README.md\n\nRBRi (2):\n*     some fixes/enhancements for the typed array support (#436)\n*     Array fixes (#467)\n*     fix all javadoc errors and all javadoc html warnings\n*     method Global#version(xxx) should return the new version identifier if the version was updated\n*     add more info to the error message\n*     us the right method name if available\n*     two minor improvements from HtmlUnit code * window list is sorted * Command 'Go to line' added\n*     avoid npe if no file window is available\n*     improve the design for flexible subclassing\n*     remove duplicated check\n*     fix the isSymbol detection to no longer detect the prototype as symbol\n*     we have many more 262 tests passing already - i think we have to use as many tests as possible to check our quality\n*     and some more; now we are at 51093\n*     Use as many test262 tests as possible to check our quality\n*     implement missing Math functions\n*     disable some slow tests\n*     Support for `arguments` object as TypedArray constructor argument this is the same as #297 but includes a simple test.\n*     fix issue 437\n*     use the system line separator for code generation\n*     remove work around for 437\n*     fix #449 also and remove the work around from EqualObjectGraphs\n*     add @Override and some more cleanup\n*     fix ctor called with date arg\n*     valueOf has to be called without any args\n*     fix remaining utc constructor case\n*     minor cleanup\n*     fix native array constructor called with null and same for the setter\n*     code cleanup based on eclipse Photon suggestions\n*     add more delegate methods to MemberBox; name all delegate method using the name of the delegated method\n*     avoid star imports across the codebase\n*     fall back to the interpreter if the byte code generation fails\n*     fix serialization for NativeMap, NativeSet, NativeWeakMap, and NativeWeakSet\n*     scope is only undefined in strict mode; fix special null entries for maps\n*     more config cleanup - use files for excluding; again enable a bunch of tests already running\n*     another VMBridge cleanup step (JDK 1.8 is the minimum at the moment)\n*     another map fix\n*     more detailed tests hack to dump already passing tests exclude one more class of tests more tests are passing\n*     next try to make the travis build pass\n*     array.fill\n*     array.keys, array.entries, array.values\n*     fixes for DataView, including enabling more test cases.\n*     fix freeze/preventExtensions/seal/isFrozen/isExtensible/isSealed for ES6\n*     add padStart and padEnd\n*     make serialVersionUID private\n*     make the test pass on my machine (also from inside eclipse)\n*     fix null/undefined handling add first array includes impl\n*     fix some array length handling border cases\n*     NativeArray cleanup more error output for Test262SuiteTest\n*     fix for #531 - using a symbol as array index crashes with a class cast exception\n*     Update Jacoco version\n*     functions are valid keys for WeakMap/WeakSet\n*     use valueOf\n*     cleanup vm bridge; since we are at java 8 there is no need to check for iterator availability\n*     cleanup member; we are using the executable type instead of member\n*     fix unused import\n*     another jdk check no longer required\n*     fix build\n*     add (modified) test case from #135\n*     first simple version of copyWithin\n*     first array.of impl\n\nRaphaël Jakse (1):\n*     Test function arity and length properties\n\nRavi Kishore (1):\n*     Retain of comments and their position in the actual code after parsing. (#465)\n\nStijn Kliemesch (1):\n*     Added testcase for #510\n\nSébastien Doeraene (2):\n*     Fix #448: Correctly wrap the result of Math.imul as an Int32.\n*     Fix the conversions in typedarrays.Conversions.\n\nTravis Haagen (2):\n*     Fix bug that caused modified JavaScript files to never be reloaded\n*     Created UrlModuleSourceProviderTest\n\nnabice (2):\n*     Fix #533 AstNode.setParent() causes a position error\n*     test for #533\n\nraphj (1):\n*     Override getArity\n\nstijnkliemesch (1):\n*     Fixes Parser.throwStatement()\n\n# Rhino 1.7.10\n## April 9, 2018\n\nThis release fixes a regression introduced in version 1.7.7.2 that caused the\n\"propertyIsEnumerable\" to throw an exception when used with String and typed array objects,\nand possibly with custom user-written objects as well.\n\n[Issue 415](https://github.com/mozilla/rhino/issues/415)\n\nIt contains a few other fixes:\n\nAttila Szegedi (2):\n*     Make as many CallFrame fields as possible final, initialize them in constructor\n*     frame.debuggerFrame != null || frame.idata.itsNeedActivation is identical to frame.useActivation.\n\nJeremy Whitlock (1):\n*     Missing properties are not enumerable when checking enumerability\n\n# Rhino 1.7.9\n## March 15, 2018\n\nThis release fixes a [potential ArrayIndexOutOfBoundsException](https://github.com/mozilla/rhino/issues/390)\nthat was introduced in 1.7.8. Since it's potentially pretty serious, projects currently using 1.7.8\nshould switch to this new release.\n\n[Issue 390](https://github.com/mozilla/rhino/issues/390)\n\nIn addition, there is a new flag on Context called \"FEATURE_INTEGER_WITHOUT_DECIMAL_PLACE.\"\nIf set, Rhino will work harder to display numbers in integer form rather than in floating-point\nform. This feature is currently disabled by default, although if it proves popular than we can\nconsider enabling it in the future.\n\n[PR 398](https://github.com/mozilla/rhino/pull/398)\n\nAt language level \"ES6\" and above, ToNumber conversion is now more compliant to the spec. (This\nchange is disabled for older language levels to prevent a problem with backward compatibility.)\n\n[PR 383](https://github.com/mozilla/rhino/pull/383)\n\nFinally, there are a number of other fixes.\n\nThanks to all who contributed, both with issues and with code!\n\nAttila Szegedi:\n*     Fix a JavaDoc warning\n\nIvan Vyshnevskyi:\n*     Make ToNumber(String) conversion more spec-compliant\n*     Report parsing error for default values in destructuring assignments\n\nMichael[tm] Smith:\n*     Add addError(String messageId, int c) method\n*     Add “illegal character” test to ParserTest\n*     Show word in “identifier is a reserved word” error\n*     Add “identifier is a reserved word” test\n\nOleksandr Maksymenko:\n*     changes to process integer object as integer and long as long, not as double\n\nRBRi:\n*     cleanup the code an try to make it faster (#373)\n\njhertel:\n*     Correction: Compatability → Compatibility\n\n# Rhino 1.7.8\n## January 22, 2018\n\nMost important changes in this release:\n\n* JavaScript objects are no longer (somewhat) thread-safe by default\n* Rhino is resistant to \"hash flooding\" attacks\n* Rhino is only supported for Java 8 and up\n* Rhino only builds with Gradle.\n\nThe primary change in this release is that the object storage format has changed\nfor objects derived from ScriptableObject (which is nearly all objects).\n\nFirst, objects are no longer thread-safe by default. (They were thread-safe previously, but\nnot in a way that we could prove was 100 percent correct in all cases.) We do not believe\nthat the vast majority of Rhino code depended on this capability. \n\nThe feature flag Context.FEATURE_THREAD_SAFE_OBJECTS may be used to enable locking on all\nobjects by default in case it is needed. Furthermore, the built-in \"sync\" function is still\nsupported, which can be used to wrap a function in a similar way to the \"synchronized\" keyword\nin Java.\n\nSecond, when an object grows to a large number of properties, the native hash table implementation\nis replaced with java.util.HashMap. This more complex (but slightly slower) hash implementation\nis resistant to hash collisions. This makes Rhino in general resistant to \"hash flooding\" attacks.\n\nRhino now depends on Java 8. It also works on Java 9, although a few tests are currently breaking\naround Date parsing and UTF-8 encoding.\n\nAdditional changes:\n\n[Issue 290](https://github.com/mozilla/rhino/issues/290) Resist hash flooding attacks\n[Issue 303](https://github.com/mozilla/rhino/issues/303) Arrow function position set error\n[Issue 323](https://github.com/mozilla/rhino/issues/323) Possible OutOfMemory due to\ninfinite loop on parsing\n[Issue 341](https://github.com/mozilla/rhino/issues/341) Objects are only thread-safe when\nfeature is enabled\n[Issue 351](https://github.com/mozilla/rhino/issues/351) Function-level use-strict breaks\nbackward compatibility\n[Issue 357](https://github.com/mozilla/rhino/issues/357) Array.sort() can throw\nArrayIndexOutOfBoundsException\n[Issue 295](https://github.com/mozilla/rhino/issues/295) Change WrapFactory to only wrap\n\"true\" primitive types and not subclasses.\n[Issue 377](https://github.com/mozilla/rhino/issues/377) Context initialization in \n\"sealed\" mode failed for ES6 language level.\n[PR102](https://github.com/mozilla/rhino/pull/102) Fix regexp parsing for \"/0{0/\"\n[PR108](https://github.com/mozilla/rhino/pull/108) Attach jsdoc nodes to function params.\n[PR 169](https://github.com/mozilla/rhino/pull/169) Enable calling default method\non Java 8.\n[PR322](https://github.com/mozilla/rhino/pull/322) Fix static array functions\n[PR353](https://github.com/mozilla/rhino/pull/353) Member box call error.\n[PR355](https://github.com/mozilla/rhino/pull/358) Support array-like parameters to \nFunction.prototype.apply().\n[PR372](https://github.com/mozilla/rhino/pull/372) Improve test262 integration and enable\nmany more tests.\n\n# Rhino 1.7.7.2\n## August 24, 2017\n\nThis release contains fixes for a few important bugs that have caught Rhino users out in the\nfield.\n\n* Do not throw a Java exception from array.prototype.sort() no matter how weird the user-supplied\ncomparator function is. This is a major difference between JavaScript and Java and has caused\nus to avoid using \"Arrays.sort\" on JavaScript arrays.\n* Fix incorrect offsets in the \"DataView\" class.\n\nIt also includes several other fixes:\n\n* Always append a column number to V8-style stack traces. (Unfortunately it is always \"0\".)\n* Support Object.is and Object.assign.\n* Make the Symbol implementation match the spec (for VERSION_ES6 and up only).\n* Avoid throwing internal Java exceptions for certain native objects in \"toJSON\".\n* Allow subclassing of ContinuationPending.\n* For VERSION_ES6 and up, sort properties in the spec-defined order (int property names\nfirst).\n* Fix stack overflow in string concatenation.\n* Improve performance of ConsString.toString\n\nThe next release is likely to be 1.7.8.\n\n# Rhino 1.7.7.1\n## February 2, 2016\n\nThis release fixes a few critical bugs that were affecting code in the field:\n\n* Improve String.prototype.repeat to work more efficiently and to not overflow\n* Fix CallSite.isNative() and isTopLevel() so that they do not throw fatal errors\n* Replace the implementation of the \"YearFromTime\" internal method for the Date class to avoid large CPU loops\n\nSpecific Changes:\n\n*     Formatting issue with SourceReader.\n*     Fix CallSite.isNative() and isTopLevel() to not throw.\n*     Make String.prototype.repeat not overflow for large values, and change code style a bit.\n*     Add tests from 1.7.7.\n*     Add Gradle code from 1.7.7.\n*     Replace YearFromTime with code from jsdate.cpp to avoid long CPU loops.\n\n# Rhino 1.7.7\n## June 17, 2015\n\nMajor changes in this release:\n\n[Release 1.7.7](https://github.com/mozilla/rhino/issues?q=milestone%3A%22Release+1.7.7%22+is%3Aclosed)\n\nSpecific changes:\n\n* [Issue 202](https://github.com/mozilla/rhino/issues/202) Initial support for ECMA Script 6 \"method definitions\".\n* [Issue 201](https://github.com/mozilla/rhino/issues/201) Make sure that all native Error instances can be converted\nto JSON.\n* [Issue 184](https://github.com/mozilla/rhino/issues/184) Fix compile encoding errors.\n* [Issue 178](https://github.com/mozilla/rhino/issues/178) Support build using Gradle (build using Ant is still\nsupported but will be removed in a future release.)\n* [Issue 176](https://github.com/mozilla/rhino/issues/176) Add ScriptRuntime.throwCustomError to make it easier\nto re-throw Java exceptions\n* [Issue 166](https://github.com/mozilla/rhino/issues/166) Support many ES6 additions to the Math class.\n* [Issue 165](https://github.com/mozilla/rhino/issues/165) Support many ES6 additions to the Number class.\n* [Issue 163](https://github.com/mozilla/rhino/issues/163) Support ES6 additions to the String class.\n\nThanks to everyone who contributed!\n\nAhmed Ashour (3):\n*     Add .gitattributes for End-Of-Line automatic handling\n*     Remove extra space\n*     Update .gitignore for eclipse generated files.\n\nEvgeny Shepelyuk (45):\n*     Implementing possibility of writing  JS tests code inside JUnit Test.\n*     + gradle wrapper     + sources and test compilation     + jar building\n*     + More JUnit style for Gradle compatibility     - disabled test removed\n*     + running tests\n*     + benchmark test changes for Gradle compaibility     + run benchmark from Gradle     + publishing artifacts from Gradle\n*     + benchmark test changes for Gradle compaibility     + run benchmark from Gradle     + publishing artifacts from Gradle\n*     + publishing artifacts to maven compatible repositories\n*     + releasing with Gradle\n*     + releasing with Gradle\n*     + releasing with Gradle\n*     + releasing with Gradle\n*     [Gradle Release Plugin] - new version commit:  '1.7.8'.\n*     + releasing with Gradle\n*     + releasing with Gradle\n*     + releasing with Gradle\n*     [Gradle Release Plugin] - pre tag commit:  '1.7.8'.\n*     Revert \"+ publishing artifacts to maven compatible repositories\"\n*     rollback gradle release\n*     + properly populating manifest     + exclude unnecesary files from jar\n*     + adding license to jar\n*     + build will not fail when maven credentials are not defined\n*     + getting rhino display version from MANIFEST\n*     * modifying README with Gradle details\n*     Update README.md\n*     Improving reporting of MozillaSuiteTest tests\n*     Improving reporting of MozillaSuiteTest tests\n*     + initial implementation of String.prototype.includes\n*     + initial implementation of String.prototype.includes\n*     + initial implementation of String.prototype.includes\n*     + initial implementation of String.prototype.startsWith\n*     + initial implementation of String.prototype.startsWith\n*     + initial implementation of String.prototype.endsWith\n*     + initial implementation of String.prototype.endsWith\n*     + initial implementation of String.prototype.endsWith\n*     + implementation of String.prototype.normalize\n*     + implementation of String.prototype.normalize\n*     + implementation of String.prototype.normalize\n*     + implementation of String.prototype.repeat\n*     + implementation of String.prototype.repeat\n*     + implementation of String.prototype.codePointAt\n*     + implementation of String.prototype.codePointAt\n*     * fixing tests after implementation of ES6 string methods     + implementing RequireObjectCoercible from ECMA spec\n*     * fixing tests after implementation of ES6 string methods     + implementing RequireObjectCoercible from ECMA spec\n*     * fixing tests after implementation of ES6 string methods     + implementing RequireObjectCoercible from ECMA spec\n*     Better exception reporting\n\nGregory Brail (16):\n*     Update for new development iteration.\n*     Read manifest URLs in a loop until we find the right one when trying     to determine the implementation version.\n*     Permissions fix.\n*     Fix potential NPE in ComplianceTest.\n*     Re-run IDMap on NativeString.\n*     Merge branch 'issue_176_2' of https://github.com/raimi/rhino into raimi-issue_176_2\n*     Merge branch 'master' of https://github.com/asashour/rhino into asashour-master\n*     Add .gitattributes.\n*     Re-arrange \"global variables\" regression tests for fewer spurious failures     under Gradle.\n*     Don't make \"javaException\" and \"rhinoException\" on the NativeError     object enumerable, because they cannot be converted to JSON.\n*     Fix file name for V8 benchmark results.\n*     Add some ES6 methods to Math and Number.\n*     \"BigO\" regression test exhibits different and inconsistent behavior     on Java 8. So fix it.\n*     Fix a bug in Math.hypot().\n*     Added a constant for ECMAScript 6 language level:     Context.VERSION_ES6.\n*     Add \"readline\" and \"write\" to console.\n\nRaimund Jacob (5):\n*     Allow throwing arbitrary objects from java world\n*     176: Adjust javadoc to reality.\n*     Emacs, sorry\n*     Issue176: Test infrastructure\n*     176: Actually Working Tests\n\nsainaen (1):\n*     Print exception message in case of JavaScriptException in ScriptTestsBase\n\ntntim96 (1):\n*     Fix Test compile encoding error 'unmappable character for encoding ASCII' - https://github.com/mozilla/rhino/issues/184\n\nuchida_t (5):\n*     set capacity for StringBuilder in String#repeat\n*     Implement ES6 MethodDefinition\n*     `set` and `get` is valid method name.\n*     NumericLiteral/StringLiteral is valid method name.\n\n# Rhino 1.7.6\n## April 15, 2015\n\nMerged many of the outstanding pull requests in the GitHub repo.\n\nHigh-level changes include the following:\n\n* Many compatibility fixes for Date, Array, String, and others (André Bargull)\n* Array.find() and findIndex() (Evgeny Shepelyuk)\n* String.trimLeft() and trimRight() (Travis Ennis)\n* AST and \"toSource\" fixes (tntim96)\n* Support for V8 Error extensions, including Error.captureStackTrace (Greg Brail)\n* Support for typed arrays (Greg Brail)\n* Support for attaching \"external data\" as the indexed properties of any object (Greg Brail)\n\nAndré Bargull (60):\n*     NativeDate: Date.length and Date.UTC.length is 7\n*     NativeDate: Fix bug 732779 (Date.prototype.setXXX functions don't evaluate all parameters)\n*     NativeDate: Date.prototype.toJSON uses [[GET]] to obtain the \"toISOString\" property\n*     add js_toISOString method to format date values in ISO-8601 Extended Format with expanded year representation if necessary\n*     NativeDate: Update Date.parse to support simplified ISO 8601 Extended Format [15.9.1.15]\n*     Fix indentation in NativeDate.java\n*     NativeError: Error.prototype.name and Error.prototype.message are not enumerable\n*     NativeError: 15.11.2.1 and 15.11.4.4 updates\n*     Arguments: arguments object should not have its own 'constructor' property, instead it inherits 'constructor' through its prototype\n*     Arguments: 'callee', 'caller' and 'length' properties can be redefined for the arguments object\n*     BaseFunction: Function.prototype.toString arity is 0\n*     BaseFunction: The 'prototype' property on function instances can be redefined\n*     BaseFunction: The 'arguments' property can be redefined for function instances\n*     NativeArray: Check [[Extensible]] flag for dense-array case in [[Put]]\n*     NativeArray: Remove (invalid) round-trips to ScriptRuntime when getting/setting elements\n*     NativeArray: Follow spec more closely for Array.isArray and Array.prototype.concat\n*     NativeArray: Array.prototype.{indexOf, lastIndexOf} bug fixes\n*     NativeArray: Array.prototype.sort bug fixes (bug 728286)\n*     NativeArray: Multiple changes to ensure specification algorithms are followed more closely\n*     TopLevel,NativeGlobal,ScriptRuntime: Add cache for native error objects\n*     NativeNumber: Handle case when precision is Infinity for Number.prototype.{toFixed,toExponential,toPrecision}\n*     NativeObject: Object.prototype.toLocaleString uses [[Get]] to retrieve 'toString' property\n*     NativeObject: Handle undefined arguments in Object.prototype.{hasOwnProperty,propertyIsEnumerable}\n*     NativeString: String.prototype.replace arity is 2 instead of 1\n*     NativeString: Handle undefined arguments in String.prototype.slice\n*     ScriptRuntime: Fix range check to follow spec in numberToString()\n*     ScriptRuntime: Set-up proto and parent-scope for TypeErrorThrower function\n*     ScriptableObject: Object.defineProperties needs to make sure to call [[Get]] exactly once for each property entry\n*     NativeRegExp: Handle undefined arguments in compile and exec\n*     NativeRegExp: Report error if a RegExp flag is used more than once\n*     NativeRegExp: RegExp.prototype.compile arity is 2\n*     NativeRegExp: RegExp.prototype.lastIndex is lazily evaluated and may be set to non-writable as well\n*     NativeRegExpCtor: arity of RegExp constructor is 2\n*     NativeRegExpCtor: RegExp.prototype.{multiline,star,input,underscore} properties can be re-defined\n*     RegExpImpl: Multiple changes for String.prototype.{match,search,replace,split}\n*     Remove obsolete test case js1_2/function/regexparg-2-n.js\n*     update test case doctests/arguments.doctest now that the arguments object inherits the 'constructor' property through its prototype\n*     NativeRegExp: Make octal escape sequences match web reality\n*     RegExpImpl: String.prototype.split with separator=undefined no longer treated as separator='undefined'\n*     Fix indentation\n*     Context: remove duplicate code in Context#newObject()\n*     Context: Use StackTraceElement API to traverse stack-trace\n*     NativeArray: address review comment from hns\n*     Updated tests files per instructions in o.m.j.tests.MozillaSuiteTest\n*     Patch for Bug 783797 (\"Function calls across multiple global scopes are not handled properly\")\n*     Silence warnings in ClassFileWriter\n*     Add missing @Deprecated annotations\n*     Add missing @Override annotations\n*     Add missing generic type info to deprecatedsrc/\n*     Add missing generic type info to toolsrc/\n*     Add missing generic type info to testsrc/\n*     Add missing generic type info to src/\n*     Fix invalid JavaDoc links\n*     Replace StringBuffer with StringBuilder if possible\n*     Address review comments from hns\n*     Generators save and later restore the current stack when processing the 'yield' operation. Our current implementation for restoring the stack unfortunately confuses the Java classfile verifier, so at class load time a VerifierError is thrown. This happens because the verifier can no longer ensure that the proper types are placed on the stack, since the stack-state is saved in a simple Object[]. Re-ordering a few operations is only necessary so the verifier will again accept the generated class. But this is only done for generators because it creates slightly less efficient code compared to the standard case.\n*     Add doctest and update comments with proper bug number\n*     Patch for Bug 782363 (\"Increment/Decrement alters const variables\")\n*     Patch for Bug 780458 (\"Math.IEEEremainder makes ToInt32 slow for non-integer values\") (V8):\n*     Patch for Bug 789277 (\"JSC: \"missing ; after statement\" message prints out for the line after the problem one\")\n\nC. Scott Ananian (1):\n*     Don't swallow empty lines in doctest; split lines on Mac/Windows/Unix.\n\nEdison (2):\n*     Add working directory support to \"runCommand\"\n*     Add working directory support to \"runCommand\"\n\nElliott Baron (1):\n*     Add manpage for Rhino shell.\n\nEvgeny Shepelyuk (2):\n*     find and findIndex initial impl\n*     Improving test framework     + one JUnit class = one JS suite     + reporting JS stacktrace on error     + load function is available in JS     + separate file for JS assertions\n\nGregory Brail (31):\n*     Update versions for next iteration.\n*     Update README for release notes.\n*     Change benchmark output so we can \"plot\" it in Maven.\n*     Fix code cleanup fix that broke the Java 6 build.\n*     Fix benchmark output file format again.\n*     Re-run ID map on NativeString.\n*     Manually add .gitignore additions from @sghill.\n*     Added a bit more to the README including content from @shirishp\n*     Add a NOTICE with the V8 copyright message.\n*     Move anba's new DoubleConversion code into the package with the     rest of the code derived from V8.\n*     Remove retrotranslator code to generate 1.4-compatible bytecode.     Switch bytecode generation to Java 6.\n*     Remove code and build artifacts pointing to the \"old E4X\" implementation,     based on XML Beans.\n*     Remove unused XML beans-based E4X implementation.\n*     One last vestige of XML Beans.\n*     Re-generate ID map on NativeArray.\n*     Initial checkin of typed arrays and tests from V8.     Fix bad capitalization.\n*     Fix some integer encoding and add more test cases.\n*     Switch typed array tests to use Evgeny's framework for running them.     Make them work only with version 1.8.\n*     Make typed arrays only appear in 1.8.\n*     Add List implementation for all native arrays.\n*     Add \"Error\" to the set of standard Error constructors     that could go down the new code path to create an error.\n*     Complete List implementation for typed arrays.     Write typed array unit tests for the List implementation.\n*     Do not double-initialize Error.\n*     Make loading of typed array classes lazy.     Rename Java classes so that the names are more consistent.\n*     Support for V8-style stack trace support:       Error.prepareStackTrace       Error.captureStackTrace       Error.stackTraceLimit     And \"V8\" format stack traces.\n*     Improve efficiency of NativeError via pre-cached Method objects     and reduced number of default fields.\n*     Make \"stack\" non-enumerable until generated.\n*     Add \"setExternalArrayData\" to ScriptableObject to allow array data     to be stored outside the core object.\n*     Set default version in shell to \"180\".\n*     Add method to both get and set external array data.\n*     Add \"initSafeStandardObjects\" to create standard objects with     no Java class access whatsoever.\n\nIevgenii.Shepeliuk (2):\n*     `findIndex' implementation\n*     more V8 compatibility\n\nRaymond Auge (1):\n*     rhino exits the JVM even when run as a subshell of another java shell - bug-835147\n\nTravis Ennis (2):\n*     Added the Javascript 1.8 String methods trimLeft and trim Right.\n*     Added the Javascript 1.8 String methods trimLeft and trimRight.\n\nsainaen (1):\n*     Add 'LanguageVersion' annotation. Make 1.8 default version for 'ScriptsTestsBase'\n\nsghill (1):\n*     removing old .cvsignore files\n\ntntim96 (5):\n*     'undefined' pattern should be treated as empty string in RegExp constructor     http://www.ecma-international.org/ecma-262/5.1/#sec-15.10.4.1     https://sourceforge.net/p/htmlunit/bugs/1599/\n*     Bug 798642. AST 'toSource' on getter/setter mistakenly adding 'function' keyword     https://bugzilla.mozilla.org/show_bug.cgi?id=798642\n*     Bug 800616. Fix AST 'toSource' for Octal and Hexadecimal literals     https://bugzilla.mozilla.org/show_bug.cgi?id=800616\n*     Fix AST empty switch to source\n*     Fix compile encoding error 'unmappable character for encoding ASCII'\n\n# Rhino 1.7R5\n## January 29, 2015\n\nAndré Bargull (24):\n\n*     Add missing license header to DefineClassMapInheritance.java\n*     Remove invalid UTF-8 encoded unicode replacement characters (EF BF BD)\n*     Add missing entries\n*     Bug 772011: Decompiler does not add curly brackets for labelled statements\n*     Add fix for bug-772833 (comment copied over from Parser::condExpr1 in frontend/Parser.cpp)\n*     Fix bug 686806:     - trailing commas aren't allowed in object/array literals per JSON spec     - avoid using Integer.parseInt() to parse unicode escape sequences since parseInt() also accepts non-ASCII digits     - also avoid using Character.isDigit() in readNumber() for the very same reason     - readString() always created a StringBuilder instance to collect the input data, obviously this is actually only necessary when the input contains escaped characters. Therefore I've changed readString() to take the same approach as used in jsonparser.cpp     - the JSON number specification is stricter than Double.parseDouble(), for example Double.parseDouble() accepts the input string '10.'. To ensure only valid JSON number literals are passed to Double.parseDouble(), readNumber() was refactored to perform the necessary input validation.\n*     Patch for bug 774083.\n*     Patch for Bug 688023:\n*     Fix broken test cases which relied on the old (and erroneous) toSource() output\n*     Patch bug 685403\n*     Patch for bug 637811:\n*     Fix bug 773573: Search for first curly bracket after closing parentheses to take account of object destructuring parameters\n*     Simple doctest for bug 773573\n*     Array.prototype.sort performed an unchecked cast from long to int without any overflow checks, this may result in a negative length which then throws a NegativeArraySizeException in Java, cf. js1_5/Array/regress-157652.js . A similar problem was found in NativeJSON, so I've handled that as well\n*     Add explicit cast to int to ensure previous behaviour is retained\n*     Calls must not be special-calls and reference-calls at the same time, cf. js1_5/Regress/regress-319391.js for a test case\n*     Enable js1_5/Regress/regress-319391.js for MozillaSuiteTest\n*     Patch for Bug 728286\n*     Add test case\n*     Patch for Bug 778549\n*     Add missing overflow detection when processing RegExp character class pattern\n*     Patch for Bug 780147:\n*     Patch for Bug 608235 (\"Incorrect error message for undefined[undefined]\")\n*     Patch for Bug 784358 (\"Defining const variable within eval() throws redeclaration error\")\n\nEvgeny Shepelyuk (1):\n\n*     fix xmlbeans url\n\nGregory Brail (10):\n\n*     Add JUnit-based benchmarks that we can automate in Jenkins.\n*     Extract zipped-up tests into a directory and check them in that way.\n*     Extracted the stuff that was formerly in testsrc/tests.tar.gz.\n*     Add XML output for EMMA coverage reports.\n*     Fix character encoding tests to work on Mac.\n*     Add output to benchmarks that can work with the Jenkins     \"Measurement Plots\" plugin. This replaces the former output from the     \"SunSpider\" and \"V8\" benchmarks.\n*     Add files for Maven deployment.\n*     README update.\n*     Update README for other tests.\n*     Fix E4X test 13.4.4.24 which was failing on Java 8 due to different     HashMap iteration ordering.\n\nHannes Wallnoefer (8):\n\n*     Unwrap Synchronizer in BaseFunction.toSource().\n*     Override ScriptableObject.isEmpty in NativeArray\n*     Reduce concurrency level / memory footprint in concurrent class cache hash maps\n*     Return null for unhandled JavaAdapter methods\n*     Make JavaAdapter work with abstract base classes and protected constructors\n*     Change build version to 1_7R5pre\n*     Extract code to create JS error from Java exception into separate ScriptRuntime method\n*     Reduce invocation magic in ShellConsole JLine support classes\n\nKyle Cronin (2):\n\n*     Patch for Bug 827538\n*     Patch for Bug 738388\n\n<!--- Start with \" git shortlog --no-merges Rhino1_7R4_RELEASE.. | sed 's/^ /*/'\" -->\n"
        },
        {
          "name": "RELEASE-STEPS.md",
          "type": "blob",
          "size": 5.001953125,
          "content": "# Rhino Release Process\n\n## Prepare the repository\n\nUpdate the version in gradle.properties to the new release version.\n\nUpdate RELEASE_NOTES.md to include at least a summary of the major features\nof the release. (This is historical, but many find it helpful to have a single\nfile in the repo that lists the major changes.)\n\nUpdate README.md to add a row to the table of releases that points to the\nGitHub release that we'll create in the next step (just follow the pattern\nthat's there).\n\nNow might be a good time to run \"./gradlew publishToMavenLocal\" and use the\npublished JARs as a sanity check.\n\n## Update Native Compatibility Table\n\nThe offial Kangax \"compat table\" now supports Rhino, but it's convenient\nto have our own that shows progress across all releases. Here's how to\nupdate it:\n\n    git clone -b gh-pages https://github.com/gbrail/node-compat-table.git\n    cd node-compat-table\n    \nNow, edit \"rhinoall.sh\" to include the new release -- it includes a series\nof lines that fetch old releases, and use your local build of the new one.\nThen, update the table:\n\n    ./rhinoall.sh\n\nThe resulting \"index.html\" can be copied into \"docs/compat/engines.html\" in \nthis repo.\n\n\n## Push the Release to GitHub\nAt this point, the current contents of your directory correspond to the \nnew release. Prepare a pull request containing the changes, submit it,\nand merge it -- the result will be that the head of the \"master\" branch\nwill build your new release.\n\nUpdate to that branch and create a tag for the release, where XX is a number\nlike \"1_7_14\":\n\n    git pull origin master\n    git tag Rhino_XX_Release\n    git push origin Rhino_XX_Release\n\nNow, on the Rhino \"Releases\" tab in GitHub, create a release that corresponds\nto the new tag. Include the following:\n\n* A cut and paste of the part of RELEASE_NOTES.md added for the release\n* The three JARs created by \"./gradlew.jar\"\n* The ZIP file created by \"./gradlew distZip\"\n* A ZIP of the source will be included automatically by GitHub\n\n## Push the release to Maven Central\n\nThe \"Publish to Maven Central\" action on GitHub Actions will automatically\nbuild the release, sign the JARs, and push it to oss.sonatype.org in the\n\"org.mozilla\" area. Kick off this job using the \"Actions\" tag in the GitHub UI.\n\nNext, Log in to oss.sonatype.org, verify that all the checks\nthat happen there were successful, and \"close\" the release. It will appear\non Maven Central a few hours later.\n\n## Update Homebrew\n\nThe Homebrew team for Mac does not necessarily pick up Rhino releases \nautomatically. It may be necessary to submit a PR to the \"homebrew/homebrew\"\nrepo in GitHub for a change to the file \"Library/Formula/rhino.rb\".\n\n## Update Kangax Compatibility Table\n\nCheck out `kangax/compat-table` and prepare a pull request to describe\nsupport in the new version of Rhino. First, add a new environment for the\nversion to `environments.json` like so:\n\n```json\n\"rhino1_7_14\": {\n  \"full\": \"Rhino 1.7.14\",\n  \"short\": \"Rhino 1.7.14\",\n  \"family\": \"Rhino\",\n  \"platformtype\": \"engine\",\n  \"release\": \"2022-01-06\",\n  \"obsolete\": true\n},\n```\n\nCopy the most recent rhino JAR into the directory as `rhino.jar`. Next, run\n`rhino.js`. This will produce a number of messages indicating that failing\ntests now pass, or that new tests now have recorded results:\n\n    **** data-es2016plus ****\n\n    data-es2016plus -> Error.cause property -> AggregateError.prototype lacks cause: test result out of date, res: true, actual: false\n\nManually update each indicated `data-*.js` file with updated test data as\nindicated. For example, a test that failed in 1.7.13 and passed in 1.7.14\nwould have a `res` section with the following diff:\n\n```javascript\n   res: {\n     babel6corejs2: false,\n     babel7corejs3: babel.corejs,\n     /* ... */\n     rhino1_7_13: false,\n+    rhino1_7_14: true,\n   }\n```\n\nRerun `rhino.js` and verify it produces no output. Then `npm run build` and\nsubmit your pull request.\n\n## Update Babel\n\nOnce the `compat-table` changes are merged, check out `babel/babel` and prepare\na pull request to enable support for `babel-preset-env` in the new release.\n\n* Update `COMPAT_TABLE_COMMIT` in `packages/babel-compat-data/scripts/download-compat-table.sh`\nto correspond to the merge commit in `compat-table`.\n* Run `make build-compat-data && make bootstrap && OVERWRITE=true yarn jest`.\n\nThen submit the resulting patch as a pull request to Babel.\n\n## Update core-js-compat\n\nCompatibility data for `core-js`, the `babel` polyfill engine, also needs to\nbe updated.\n\n* Check out `zloirock/core-js` and run `npm install && npm run build-compat`.\n* Define the actual Rhino version in the `compat-rhino-prepare` task in `package.json`.\n* Run `npm run compat-rhino` and you will see the results of tests in the console.\n* Much like in `compat-table`, edit `packages/core-js-compat/src/data.mjs` to add a line\n`rhino: 1.7.[XX]` for any newly-passing test labeled as \"not required\".\n* Submit a pull request with changes.\n\n## Prepare for Next Release\n\nNow it's time to move to the next \"SNAPSHOT\" release. Update gradle.properties,\ncreate a PR, and push the new PR. Now development can proceeed anew!\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.65625,
          "content": "# Security Policy\n\n## Supported Versions\nSecurity updates are applied only to the latest release.\n\n## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at our [security advisory](https://github.com/mozilla/rhino/security/advisories/new).\n\nThis project is maintained by a team of volunteers on a reasonable-effort basis. As such, vulnerabilities will be disclosed in a best effort base.\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.3251953125,
          "content": "rootProject.name=rhino-root\ngroup=org.mozilla\nversion=1.8.1-SNAPSHOT\nmavenReleaseRepo=https://oss.sonatype.org/service/local/staging/deploy/maven2/\nmavenSnapshotRepo=https://oss.sonatype.org/content/repositories/snapshots\ngithubPackagesRepo=https://maven.pkg.github.com/mozilla/rhino\norg.gradle.caching=true\norg.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.3271484375,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.7109375,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "rhino-all",
          "type": "tree",
          "content": null
        },
        {
          "name": "rhino-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "rhino-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "rhino-xml",
          "type": "tree",
          "content": null
        },
        {
          "name": "rhino",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.1494140625,
          "content": "rootProject.name = 'rhino-root'\ninclude 'rhino', 'rhino-engine', 'rhino-tools', 'rhino-xml', 'rhino-all', 'examples', 'testutils', 'tests', 'benchmarks'\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}