{
  "metadata": {
    "timestamp": 1736563521144,
    "page": 10,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "expressjs/express",
      "stars": 66036,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1748046875,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\ncharset = utf-8\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[{*.js,*.json,*.yml}]\nindent_size = 2\nindent_style = space\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.021484375,
          "content": "coverage\nnode_modules\n"
        },
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 0.2646484375,
          "content": "root: true\nenv:\n  es2022: true\n  node: true\nrules:\n  eol-last: error\n  eqeqeq: [error, allow-null]\n  indent: [error, 2, { MemberExpression: \"off\", SwitchCase: 1 }]\n  no-trailing-spaces: error\n  no-unused-vars: [error, { vars: all, args: none, ignoreRestSiblings: true }]\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.21875,
          "content": "# npm\nnode_modules\npackage-lock.json\nnpm-shrinkwrap.json\n*.log\n*.gz\n\n# Coveralls\n.nyc_output\ncoverage\n\n# Benchmarking\nbenchmarks/graphs\n\n# ignore additional files using core.excludesFile\n# https://git-scm.com/docs/gitignore\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": "Charter.md",
          "type": "blob",
          "size": 3.4580078125,
          "content": "# Express Charter\n\n## Section 0: Guiding Principles\n\nThe Express project is part of the OpenJS Foundation which operates\ntransparently, openly, collaboratively, and ethically.\nProject proposals, timelines, and status must not merely be open, but\nalso easily visible to outsiders.\n\n## Section 1: Scope\n\nExpress is a HTTP web server framework with a simple and expressive API\nwhich is highly aligned with Node.js core. We aim to be the best in\nclass for writing performant, spec compliant, and powerful web servers\nin Node.js. As one of the oldest and most popular web frameworks in\nthe ecosystem, we have an important place for new users and experts\nalike.\n\n### 1.1: In-scope\n\nExpress is made of many modules spread between three GitHub Orgs:\n\n- [expressjs](http://github.com/expressjs/): Top level middleware and\n  libraries\n- [pillarjs](http://github.com/pillarjs/): Components which make up\n  Express but can also be used for other web frameworks\n- [jshttp](http://github.com/jshttp/): Low level HTTP libraries\n\n### 1.2: Out-of-Scope\n\nSection Intentionally Left Blank\n\n## Section 2: Relationship with OpenJS Foundation CPC.\n\nTechnical leadership for the projects within the OpenJS Foundation is\ndelegated to the projects through their project charters by the OpenJS\nCross Project Council (CPC). In the case of the Express project, it is\ndelegated to the Express Technical Committee (\"TC\").\n\nThis Technical Committee is in charge of both the day-to-day operations\nof the project, as well as its technical management. This charter can\nbe amended by the TC requiring at least two approvals and a minimum two\nweek comment period for other TC members or CPC members to object. Any\nchanges the CPC wishes to propose will be considered a priority but\nwill follow the same process.\n\n### 2.1 Other Formal Project Relationships\n\nSection Intentionally Left Blank\n\n## Section 3: Express Governing Body\n\nThe Express project is managed by the Technical Committee (\"TC\").\nMembers can be added to the TC at any time. Any committer can nominate\nanother committer to the TC and the TC uses its standard consensus\nseeking process to evaluate whether or not to add this new member.\nMembers who do not participate consistently at the level of a majority\nof the other members are expected to resign.\n\n## Section 4: Roles & Responsibilities\n\nThe Express TC manages all aspects of both the technical and community\nparts of the project. Members of the TC should attend the regular\nmeetings when possible, and be available for discussion of time\nsensitive or important issues.\n\n### Section 4.1 Project Operations & Management\n\nSection Intentionally Left Blank\n\n### Section 4.2: Decision-making, Voting, and/or Elections\n\nThe Express TC uses a \"consensus seeking\" process for issues that are\nescalated to the TC. The group tries to find a resolution that has no\nopen objections among TC members. If a consensus cannot be reached\nthat has no objections then a majority wins vote is called. It is also\nexpected that the majority of decisions made by the TC are via a\nconsensus seeking process and that voting is only used as a last-resort.\n\nResolution may involve returning the issue to committers with\nsuggestions on how to move forward towards a consensus. It is not\nexpected that a meeting of the TC will resolve all issues on its\nagenda during that meeting and may prefer to continue the discussion\nhappening among the committers.\n\n### Section 4.3: Other Project Roles\n\nSection Intentionally Left Blank\n\n## Section 5: Definitions\n\nSection Intentionally Left Blank\n"
        },
        {
          "name": "Code-Of-Conduct.md",
          "type": "blob",
          "size": 5.6650390625,
          "content": "# Contributor Covenant Code of Conduct\n\nAs a member of the Open JS Foundation, Express has adopted the\n[Contributor Covenant 2.0][cc-20-doc].\n\nIf an issue arises and you cannot resolve it directly with the parties\ninvolved, you can report it to the Express project TC through the following\nemail: express-coc@lists.openjsf.org\n\nIn addition, the OpenJS Foundation maintains a Code of Conduct Panel (CoCP).\nThis is a foundation-wide team established to manage escalation when a reporter\nbelieves that a report to a member project or the CPC has not been properly\nhandled. In order to escalate to the CoCP send an email to\ncoc-escalation@lists.openjsf.org.\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances\n  of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for\nmoderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail\naddress, posting via an official social media account, or acting as an\nappointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nexpress-coc@lists.openjsf.org. All complaints will be reviewed and\ninvestigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited\ninteraction with those enforcing the Code of Conduct, is allowed during this\nperiod. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\nproject community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant, version 2.0][cc-20-doc].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\n[cc-20-doc]: https://www.contributor-covenant.org/version/2/0/code_of_conduct/\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "Collaborator-Guide.md",
          "type": "blob",
          "size": 1.923828125,
          "content": "# Express Collaborator Guide\n\n## Website Issues\n\nOpen issues for the expressjs.com website in https://github.com/expressjs/expressjs.com.\n\n## PRs and Code contributions\n\n* Tests must pass.\n* Follow the [JavaScript Standard Style](http://standardjs.com/) and `npm run lint`.\n* If you fix a bug, add a test.\n\n## Branches\n\nUse the `master` branch for bug fixes or minor work that is intended for the\ncurrent release stream.\n\nUse the correspondingly named branch, e.g. `5.0`, for anything intended for\na future release of Express.\n\n## Steps for contributing\n\n1. [Create an issue](https://github.com/expressjs/express/issues/new) for the\n   bug you want to fix or the feature that you want to add.\n2. Create your own [fork](https://github.com/expressjs/express) on GitHub, then\n   checkout your fork.\n3. Write your code in your local copy. It's good practice to create a branch for\n   each new issue you work on, although not compulsory.\n4. To run the test suite, first install the dependencies by running `npm install`,\n   then run `npm test`.\n5. Ensure your code is linted by running `npm run lint` -- fix any issue you\n   see listed.\n6. If the tests pass, you can commit your changes to your fork and then create\n   a pull request from there. Make sure to reference your issue from the pull\n   request comments by including the issue number e.g. `#123`.\n\n## Issues which are questions\n\nWe will typically close any vague issues or questions that are specific to some\napp you are writing. Please double check the docs and other references before\nbeing trigger happy with posting a question issue.\n\nThings that will help get your question issue looked at:\n\n* Full and runnable JS code.\n* Clear description of the problem or unexpected behavior.\n* Clear description of the expected result.\n* Steps you have taken to debug it yourself.\n\nIf you post a question and do not outline the above items or make it easy for\nus to understand and reproduce your issue, it will be closed.\n"
        },
        {
          "name": "Contributing.md",
          "type": "blob",
          "size": 13.837890625,
          "content": "# Express.js Community Contributing Guide 1.0\n\nThe goal of this document is to create a contribution process that:\n\n* Encourages new contributions.\n* Encourages contributors to remain involved.\n* Avoids unnecessary processes and bureaucracy whenever possible.\n* Creates a transparent decision making process that makes it clear how\ncontributors can be involved in decision making.\n\n## Vocabulary\n\n* A **Contributor** is any individual creating or commenting on an issue or pull request.\n* A **Committer** is a subset of contributors who have been given write access to the repository.\n* A **Project Captain** is the lead maintainer of a repository.\n* A **TC (Technical Committee)** is a group of committers representing the required technical\nexpertise to resolve rare disputes.\n* A **Triager** is a subset of contributors who have been given triage access to the repository.\n\n## Logging Issues\n\nLog an issue for any question or problem you might have. When in doubt, log an issue, and\nany additional policies about what to include will be provided in the responses. The only\nexception is security disclosures which should be sent privately.\n\nCommitters may direct you to another repository, ask for additional clarifications, and\nadd appropriate metadata before the issue is addressed.\n\nPlease be courteous and respectful. Every participant is expected to follow the\nproject's Code of Conduct.\n\n## Contributions\n\nAny change to resources in this repository must be through pull requests. This applies to all changes\nto documentation, code, binary files, etc. Even long term committers and TC members must use\npull requests.\n\nNo pull request can be merged without being reviewed.\n\nFor non-trivial contributions, pull requests should sit for at least 36 hours to ensure that\ncontributors in other timezones have time to review. Consideration should also be given to\nweekends and other holiday periods to ensure active committers all have reasonable time to\nbecome involved in the discussion and review process if they wish.\n\nThe default for each contribution is that it is accepted once no committer has an objection.\nDuring a review, committers may also request that a specific contributor who is most versed in a\nparticular area gives a \"LGTM\" before the PR can be merged. There is no additional \"sign off\"\nprocess for contributions to land. Once all issues brought by committers are addressed it can\nbe landed by any committer.\n\nIn the case of an objection being raised in a pull request by another committer, all involved\ncommitters should seek to arrive at a consensus by way of addressing concerns being expressed\nby discussion, compromise on the proposed change, or withdrawal of the proposed change.\n\nIf a contribution is controversial and committers cannot agree about how to get it to land\nor if it should land then it should be escalated to the TC. TC members should regularly\ndiscuss pending contributions in order to find a resolution. It is expected that only a\nsmall minority of issues be brought to the TC for resolution and that discussion and\ncompromise among committers be the default resolution mechanism.\n\n## Becoming a Triager\n\nAnyone can become a triager! Read more about the process of being a triager in\n[the triage process document](Triager-Guide.md).\n\nCurrently, any existing [organization member](https://github.com/orgs/expressjs/people) can nominate\na new triager. If you are interested in becoming a triager, our best advice is to actively participate\nin the community by helping triaging issues and pull requests. As well we recommend\nto engage in other community activities like attending the TC meetings, and participating in the Slack\ndiscussions.\n\nYou can also reach out to any of the [organization members](https://github.com/orgs/expressjs/people)\nif you have questions or need guidance.\n\n## Becoming a Committer\n\nAll contributors who land a non-trivial contribution should be on-boarded in a timely manner,\nand added as a committer, and be given write access to the repository.\n\nCommitters are expected to follow this policy and continue to send pull requests, go through\nproper review, and have other committers merge their pull requests.\n\n## TC Process\n\nThe TC uses a \"consensus seeking\" process for issues that are escalated to the TC.\nThe group tries to find a resolution that has no open objections among TC members.\nIf a consensus cannot be reached that has no objections then a majority wins vote\nis called. It is also expected that the majority of decisions made by the TC are via\na consensus seeking process and that voting is only used as a last-resort.\n\nResolution may involve returning the issue to project captains with suggestions on\nhow to move forward towards a consensus. It is not expected that a meeting of the TC\nwill resolve all issues on its agenda during that meeting and may prefer to continue\nthe discussion happening among the project captains.\n\nMembers can be added to the TC at any time. Any TC member can nominate another committer\nto the TC and the TC uses its standard consensus seeking process to evaluate whether or\nnot to add this new member. The TC will consist of a minimum of 3 active members and a\nmaximum of 10. If the TC should drop below 5 members the active TC members should nominate\nsomeone new. If a TC member is stepping down, they are encouraged (but not required) to\nnominate someone to take their place.\n\nTC members will be added as admin's on the Github orgs, npm orgs, and other resources as\nnecessary to be effective in the role.\n\nTo remain \"active\" a TC member should have participation within the last 12 months and miss\nno more than six consecutive TC meetings. Our goal is to increase participation, not punish\npeople for any lack of participation, this guideline should be only be used as such\n(replace an inactive member with a new active one, for example). Members who do not meet this\nare expected to step down. If A TC member does not step down, an issue can be opened in the\ndiscussions repo to move them to inactive status. TC members who step down or are removed due\nto inactivity will be moved into inactive status.\n\nInactive status members can become active members by self nomination if the TC is not already\nlarger than the maximum of 10. They will also be given preference if, while at max size, an\nactive member steps down.\n\n## Project Captains\n\nThe Express TC can designate captains for individual projects/repos in the\norganizations. These captains are responsible for being the primary\nday-to-day maintainers of the repo on a technical and community front.\nRepo captains are empowered with repo ownership and package publication rights.\nWhen there are conflicts, especially on topics that effect the Express project\nat large, captains are responsible to raise it up to the TC and drive\nthose conflicts to resolution. Captains are also responsible for making sure\ncommunity members follow the community guidelines, maintaining the repo\nand the published package, as well as in providing user support.\n\nLike TC members, Repo captains are a subset of committers.\n\nTo become a captain for a project the candidate is expected to participate in that\nproject for at least 6 months as a committer prior to the request. They should have\nhelped with code contributions as well as triaging issues. They are also required to\nhave 2FA enabled on both their GitHub and npm accounts. Any TC member or existing\ncaptain on the repo can nominate another committer to the captain role, submit a PR to\nthis doc, in the **Active Project Captains** section (maintaining the sort order) with\nthe project, their GitHub handle and npm username (if different). The PR will require\nat least 2 approvals from TC members and 2 weeks hold time to allow for comment and/or\ndissent.  When the PR is merged, a TC member will add them to the proper GitHub/npm groups.\n\n### Active Projects and Captains\n\n- [`expressjs/badgeboard`](https://github.com/expressjs/badgeboard): @wesleytodd\n- [`expressjs/basic-auth-connect`](https://github.com/expressjs/basic-auth-connect): @UlisesGascon\n- [`expressjs/body-parser`](https://github.com/expressjs/body-parser): @wesleytodd, @jonchurch\n- [`expressjs/compression`](https://github.com/expressjs/compression): @ulisesGascon\n- [`expressjs/connect-multiparty`](https://github.com/expressjs/connect-multiparty): @ulisesGascon\n- [`expressjs/cookie-parser`](https://github.com/expressjs/cookie-parser): @wesleytodd, @UlisesGascon\n- [`expressjs/cookie-session`](https://github.com/expressjs/cookie-session): @ulisesGascon\n- [`expressjs/cors`](https://github.com/expressjs/cors): @jonchurch\n- [`expressjs/discussions`](https://github.com/expressjs/discussions): @wesleytodd\n- [`expressjs/errorhandler`](https://github.com/expressjs/errorhandler): @ulisesGascon\n- [`expressjs/express-paginate`](https://github.com/expressjs/express-paginate): @ulisesGascon\n- [`expressjs/express`](https://github.com/expressjs/express): @wesleytodd, @ulisesGascon\n- [`expressjs/expressjs.com`](https://github.com/expressjs/expressjs.com): @crandmck, @jonchurch, @bjohansebas\n- [`expressjs/flash`](https://github.com/expressjs/flash): @ulisesGascon\n- [`expressjs/generator`](https://github.com/expressjs/generator): @wesleytodd\n- [`expressjs/method-override`](https://github.com/expressjs/method-override): @ulisesGascon\n- [`expressjs/morgan`](https://github.com/expressjs/morgan): @jonchurch\n- [`expressjs/multer`](https://github.com/expressjs/multer): @LinusU\n- [`expressjs/response-time`](https://github.com/expressjs/response-time): @UlisesGascon\n- [`expressjs/serve-favicon`](https://github.com/expressjs/serve-favicon): @ulisesGascon\n- [`expressjs/serve-index`](https://github.com/expressjs/serve-index): @ulisesGascon\n- [`expressjs/serve-static`](https://github.com/expressjs/serve-static): @ulisesGascon\n- [`expressjs/session`](https://github.com/expressjs/session): @ulisesGascon\n- [`expressjs/statusboard`](https://github.com/expressjs/statusboard): @wesleytodd\n- [`expressjs/timeout`](https://github.com/expressjs/timeout): @ulisesGascon\n- [`expressjs/vhost`](https://github.com/expressjs/vhost): @ulisesGascon\n- [`jshttp/accepts`](https://github.com/jshttp/accepts): @blakeembrey\n- [`jshttp/basic-auth`](https://github.com/jshttp/basic-auth): @blakeembrey\n- [`jshttp/compressible`](https://github.com/jshttp/compressible): @blakeembrey\n- [`jshttp/content-disposition`](https://github.com/jshttp/content-disposition): @blakeembrey\n- [`jshttp/content-type`](https://github.com/jshttp/content-type): @blakeembrey\n- [`jshttp/cookie`](https://github.com/jshttp/cookie): @blakeembrey\n- [`jshttp/etag`](https://github.com/jshttp/etag): @blakeembrey\n- [`jshttp/forwarded`](https://github.com/jshttp/forwarded): @blakeembrey\n- [`jshttp/fresh`](https://github.com/jshttp/fresh): @blakeembrey\n- [`jshttp/http-assert`](https://github.com/jshttp/http-assert): @wesleytodd, @jonchurch\n- [`jshttp/http-errors`](https://github.com/jshttp/http-errors): @wesleytodd, @jonchurch\n- [`jshttp/media-typer`](https://github.com/jshttp/media-typer): @blakeembrey\n- [`jshttp/methods`](https://github.com/jshttp/methods): @blakeembrey\n- [`jshttp/mime-db`](https://github.com/jshttp/mime-db): @blakeembrey, @UlisesGascon\n- [`jshttp/mime-types`](https://github.com/jshttp/mime-types): @blakeembrey, @UlisesGascon\n- [`jshttp/negotiator`](https://github.com/jshttp/negotiator): @blakeembrey\n- [`jshttp/on-finished`](https://github.com/jshttp/on-finished): @wesleytodd\n- [`jshttp/on-headers`](https://github.com/jshttp/on-headers): @blakeembrey\n- [`jshttp/proxy-addr`](https://github.com/jshttp/proxy-addr): @wesleytodd\n- [`jshttp/range-parser`](https://github.com/jshttp/range-parser): @blakeembrey\n- [`jshttp/statuses`](https://github.com/jshttp/statuses): @blakeembrey\n- [`jshttp/type-is`](https://github.com/jshttp/type-is): @blakeembrey\n- [`jshttp/vary`](https://github.com/jshttp/vary): @blakeembrey\n- [`pillarjs/cookies`](https://github.com/pillarjs/cookies): @blakeembrey\n- [`pillarjs/csrf`](https://github.com/pillarjs/csrf): @ulisesGascon\n- [`pillarjs/encodeurl`](https://github.com/pillarjs/encodeurl): @blakeembrey\n- [`pillarjs/finalhandler`](https://github.com/pillarjs/finalhandler): @wesleytodd\n- [`pillarjs/hbs`](https://github.com/pillarjs/hbs): @ulisesGascon\n- [`pillarjs/multiparty`](https://github.com/pillarjs/multiparty): @blakeembrey\n- [`pillarjs/parseurl`](https://github.com/pillarjs/parseurl): @blakeembrey\n- [`pillarjs/path-to-regexp`](https://github.com/pillarjs/path-to-regexp): @blakeembrey\n- [`pillarjs/request`](https://github.com/pillarjs/request): @wesleytodd\n- [`pillarjs/resolve-path`](https://github.com/pillarjs/resolve-path): @blakeembrey\n- [`pillarjs/router`](https://github.com/pillarjs/router): @wesleytodd\n- [`pillarjs/send`](https://github.com/pillarjs/send): @blakeembrey\n- [`pillarjs/understanding-csrf`](https://github.com/pillarjs/understanding-csrf): @ulisesGascon\n\n### Current Initiative Captains\n\n- Triage team [ref](https://github.com/expressjs/discussions/issues/227): @UlisesGascon\n\n## Developer's Certificate of Origin 1.1\n\n```text\nBy making a contribution to this project, I certify that:\n\n (a) The contribution was created in whole or in part by me and I\n     have the right to submit it under the open source license\n     indicated in the file; or\n\n (b) The contribution is based upon previous work that, to the best\n     of my knowledge, is covered under an appropriate open source\n     license and I have the right under that license to submit that\n     work with modifications, whether created in whole or in part\n     by me, under the same open source license (unless I am\n     permitted to submit under a different license), as indicated\n     in the file; or\n\n (c) The contribution was provided directly to me by some other\n     person who certified (a), (b) or (c) and I have not modified\n     it.\n\n (d) I understand and agree that this project and the contribution\n     are public and that a record of the contribution (including all\n     personal information I submit with it, including my sign-off) is\n     maintained indefinitely and may be redistributed consistent with\n     this project or the open source license(s) involved.\n```\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 119.3095703125,
          "content": "unreleased\n========================\n\n* Remove `utils-merge` dependency - use spread syntax instead\n* Remove `Object.setPrototypeOf` polyfill\n* cleanup: remove AsyncLocalStorage check from tests\n* cleanup: remove unnecessary require for global Buffer\n* perf: use loop for acceptParams\n* Replace `methods` dependency with standard library\n* refactor: prefix built-in node module imports\n\n5.0.1 / 2024-10-08\n==========\n\n* Update `cookie` semver lock to address [CVE-2024-47764](https://nvd.nist.gov/vuln/detail/CVE-2024-47764)\n\n5.0.0 / 2024-09-10\n=========================\n* remove:\n  - `path-is-absolute` dependency - use `path.isAbsolute` instead\n* breaking:\n  * `res.status()` accepts only integers, and input must be greater than 99 and less than 1000\n    * will throw a `RangeError: Invalid status code: ${code}. Status code must be greater than 99 and less than 1000.` for inputs outside this range\n    * will throw a `TypeError: Invalid status code: ${code}. Status code must be an integer.` for non integer inputs\n  * deps: send@1.0.0\n  * `res.redirect('back')` and `res.location('back')` is no longer a supported magic string, explicitly use `req.get('Referrer') || '/'`.\n* change:\n  - `res.clearCookie` will ignore user provided `maxAge` and `expires` options\n* deps: cookie-signature@^1.2.1\n* deps: debug@4.3.6\n* deps: merge-descriptors@^2.0.0\n* deps: serve-static@^2.1.0\n* deps: qs@6.13.0\n* deps: accepts@^2.0.0\n* deps: mime-types@^3.0.0\n  - `application/javascript` => `text/javascript`\n* deps: type-is@^2.0.0\n* deps: content-disposition@^1.0.0\n* deps: finalhandler@^2.0.0\n* deps: fresh@^2.0.0\n* deps: body-parser@^2.0.1\n* deps: send@^1.1.0\n\n5.0.0-beta.3 / 2024-03-25\n=========================\n\nThis incorporates all changes after 4.19.1 up to 4.19.2.\n\n5.0.0-beta.2 / 2024-03-20\n=========================\n\nThis incorporates all changes after 4.17.2 up to 4.19.1.\n\n5.0.0-beta.1 / 2022-02-14\n=========================\n\nThis is the first Express 5.0 beta release, based off 4.17.2 and includes\nchanges from 5.0.0-alpha.8.\n\n  * change:\n    - Default \"query parser\" setting to `'simple'`\n    - Requires Node.js 4+\n    - Use `mime-types` for file to content type mapping\n  * deps: array-flatten@3.0.0\n  * deps: body-parser@2.0.0-beta.1\n    - `req.body` is no longer always initialized to `{}`\n    - `urlencoded` parser now defaults `extended` to `false`\n    - Use `on-finished` to determine when body read\n  * deps: router@2.0.0-beta.1\n    - Add new `?`, `*`, and `+` parameter modifiers\n    - Internalize private `router.process_params` method\n    - Matching group expressions are only RegExp syntax\n    - Named matching groups no longer available by position in `req.params`\n    - Regular expressions can only be used in a matching group\n    - Remove `debug` dependency\n    - Special `*` path segment behavior removed\n    - deps: array-flatten@3.0.0\n    - deps: parseurl@~1.3.3\n    - deps: path-to-regexp@3.2.0\n    - deps: setprototypeof@1.2.0\n  * deps: send@1.0.0-beta.1\n    - Change `dotfiles` option default to `'ignore'`\n    - Remove `hidden` option; use `dotfiles` option instead\n    - Use `mime-types` for file to content type mapping\n    - deps: debug@3.1.0\n  * deps: serve-static@2.0.0-beta.1\n    - Change `dotfiles` option default to `'ignore'`\n    - Remove `hidden` option; use `dotfiles` option instead\n    - Use `mime-types` for file to content type mapping\n    - deps: send@1.0.0-beta.1\n\n5.0.0-alpha.8 / 2020-03-25\n==========================\n\nThis is the eighth Express 5.0 alpha release, based off 4.17.1 and includes\nchanges from 5.0.0-alpha.7.\n\n5.0.0-alpha.7 / 2018-10-26\n==========================\n\nThis is the seventh Express 5.0 alpha release, based off 4.16.4 and includes\nchanges from 5.0.0-alpha.6.\n\nThe major change with this alpha is the basic support for returned, rejected\nPromises in the router.\n\n  * remove:\n    - `path-to-regexp` dependency\n  * deps: debug@3.1.0\n    - Add `DEBUG_HIDE_DATE` environment variable\n    - Change timer to per-namespace instead of global\n    - Change non-TTY date format\n    - Remove `DEBUG_FD` environment variable support\n    - Support 256 namespace colors\n  * deps: router@2.0.0-alpha.1\n    - Add basic support for returned, rejected Promises\n    - Fix JSDoc for `Router` constructor\n    - deps: debug@3.1.0\n    - deps: parseurl@~1.3.2\n    - deps: setprototypeof@1.1.0\n    - deps: utils-merge@1.0.1\n\n5.0.0-alpha.6 / 2017-09-24\n==========================\n\nThis is the sixth Express 5.0 alpha release, based off 4.15.5 and includes\nchanges from 5.0.0-alpha.5.\n\n  * remove:\n    - `res.redirect(url, status)` signature - use `res.redirect(status, url)`\n    - `res.send(status, body)` signature - use `res.status(status).send(body)`\n  * deps: router@~1.3.1\n    - deps: debug@2.6.8\n\n5.0.0-alpha.5 / 2017-03-06\n==========================\n\nThis is the fifth Express 5.0 alpha release, based off 4.15.2 and includes\nchanges from 5.0.0-alpha.4.\n\n5.0.0-alpha.4 / 2017-03-01\n==========================\n\nThis is the fourth Express 5.0 alpha release, based off 4.15.0 and includes\nchanges from 5.0.0-alpha.3.\n\n  * remove:\n    - Remove Express 3.x middleware error stubs\n  * deps: router@~1.3.0\n    - Add `next(\"router\")` to exit from router\n    - Fix case where `router.use` skipped requests routes did not\n    - Skip routing when `req.url` is not set\n    - Use `%o` in path debug to tell types apart\n    - deps: debug@2.6.1\n    - deps: setprototypeof@1.0.3\n    - perf: add fast match path for `*` route\n\n5.0.0-alpha.3 / 2017-01-28\n==========================\n\nThis is the third Express 5.0 alpha release, based off 4.14.1 and includes\nchanges from 5.0.0-alpha.2.\n\n  * remove:\n    - `res.json(status, obj)` signature - use `res.status(status).json(obj)`\n    - `res.jsonp(status, obj)` signature - use `res.status(status).jsonp(obj)`\n    - `res.vary()` (no arguments) -- provide a field name as an argument\n  * deps: array-flatten@2.1.1\n  * deps: path-is-absolute@1.0.1\n  * deps: router@~1.1.5\n    - deps: array-flatten@2.0.1\n    - deps: methods@~1.1.2\n    - deps: parseurl@~1.3.1\n    - deps: setprototypeof@1.0.2\n\n5.0.0-alpha.2 / 2015-07-06\n==========================\n\nThis is the second Express 5.0 alpha release, based off 4.13.1 and includes\nchanges from 5.0.0-alpha.1.\n\n  * remove:\n    - `app.param(fn)`\n    - `req.param()` -- use `req.params`, `req.body`, or `req.query` instead\n  * change:\n    - `res.render` callback is always async, even for sync view engines\n    - The leading `:` character in `name` for `app.param(name, fn)` is no longer removed\n    - Use `router` module for routing\n    - Use `path-is-absolute` module for absolute path detection\n\n5.0.0-alpha.1 / 2014-11-06\n==========================\n\nThis is the first Express 5.0 alpha release, based off 4.10.1.\n\n  * remove:\n    - `app.del` - use `app.delete`\n    - `req.acceptsCharset` - use `req.acceptsCharsets`\n    - `req.acceptsEncoding` - use `req.acceptsEncodings`\n    - `req.acceptsLanguage` - use `req.acceptsLanguages`\n    - `res.json(obj, status)` signature - use `res.json(status, obj)`\n    - `res.jsonp(obj, status)` signature - use `res.jsonp(status, obj)`\n    - `res.send(body, status)` signature - use `res.send(status, body)`\n    - `res.send(status)` signature - use `res.sendStatus(status)`\n    - `res.sendfile` - use `res.sendFile` instead\n    - `express.query` middleware\n  * change:\n    - `req.host` now returns host (`hostname:port`) - use `req.hostname` for only hostname\n    - `req.query` is now a getter instead of a plain property\n  * add:\n    - `app.router` is a reference to the base router\n\n4.20.0 / 2024-09-10\n==========\n  * deps: serve-static@0.16.0\n    * Remove link renderization in html while redirecting\n  * deps: send@0.19.0\n    * Remove link renderization in html while redirecting\n  * deps: body-parser@0.6.0\n    * add `depth` option to customize the depth level in the parser\n    * IMPORTANT: The default `depth` level for parsing URL-encoded data is now `32` (previously was `Infinity`)\n  * Remove link renderization in html while using `res.redirect`\n  * deps: path-to-regexp@0.1.10\n    - Adds support for named matching groups in the routes using a regex\n    - Adds backtracking protection to parameters without regexes defined\n  * deps: encodeurl@~2.0.0\n    - Removes encoding of `\\`, `|`, and `^` to align better with URL spec\n  * Deprecate passing `options.maxAge` and `options.expires` to `res.clearCookie`\n    - Will be ignored in v5, clearCookie will set a cookie with an expires in the past to instruct clients to delete the cookie\n\n4.19.2 / 2024-03-25\n==========\n\n  * Improved fix for open redirect allow list bypass\n\n4.19.1 / 2024-03-20\n==========\n\n  * Allow passing non-strings to res.location with new encoding handling checks\n\n4.19.0 / 2024-03-20\n==========\n\n  * Prevent open redirect allow list bypass due to encodeurl\n  * deps: cookie@0.6.0\n\n4.18.3 / 2024-02-29\n==========\n\n  * Fix routing requests without method\n  * deps: body-parser@1.20.2\n    - Fix strict json error message on Node.js 19+\n    - deps: content-type@~1.0.5\n    - deps: raw-body@2.5.2\n  * deps: cookie@0.6.0\n    - Add `partitioned` option\n\n4.18.2 / 2022-10-08\n===================\n\n  * Fix regression routing a large stack in a single route\n  * deps: body-parser@1.20.1\n    - deps: qs@6.11.0\n    - perf: remove unnecessary object clone\n  * deps: qs@6.11.0\n\n4.18.1 / 2022-04-29\n===================\n\n  * Fix hanging on large stack of sync routes\n\n4.18.0 / 2022-04-25\n===================\n\n  * Add \"root\" option to `res.download`\n  * Allow `options` without `filename` in `res.download`\n  * Deprecate string and non-integer arguments to `res.status`\n  * Fix behavior of `null`/`undefined` as `maxAge` in `res.cookie`\n  * Fix handling very large stacks of sync middleware\n  * Ignore `Object.prototype` values in settings through `app.set`/`app.get`\n  * Invoke `default` with same arguments as types in `res.format`\n  * Support proper 205 responses using `res.send`\n  * Use `http-errors` for `res.format` error\n  * deps: body-parser@1.20.0\n    - Fix error message for json parse whitespace in `strict`\n    - Fix internal error when inflated body exceeds limit\n    - Prevent loss of async hooks context\n    - Prevent hanging when request already read\n    - deps: depd@2.0.0\n    - deps: http-errors@2.0.0\n    - deps: on-finished@2.4.1\n    - deps: qs@6.10.3\n    - deps: raw-body@2.5.1\n  * deps: cookie@0.5.0\n    - Add `priority` option\n    - Fix `expires` option to reject invalid dates\n  * deps: depd@2.0.0\n    - Replace internal `eval` usage with `Function` constructor\n    - Use instance methods on `process` to check for listeners\n  * deps: finalhandler@1.2.0\n    - Remove set content headers that break response\n    - deps: on-finished@2.4.1\n    - deps: statuses@2.0.1\n  * deps: on-finished@2.4.1\n    - Prevent loss of async hooks context\n  * deps: qs@6.10.3\n  * deps: send@0.18.0\n    - Fix emitted 416 error missing headers property\n    - Limit the headers removed for 304 response\n    - deps: depd@2.0.0\n    - deps: destroy@1.2.0\n    - deps: http-errors@2.0.0\n    - deps: on-finished@2.4.1\n    - deps: statuses@2.0.1\n  * deps: serve-static@1.15.0\n    - deps: send@0.18.0\n  * deps: statuses@2.0.1\n    - Remove code 306\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\n\n4.17.3 / 2022-02-16\n===================\n\n  * deps: accepts@~1.3.8\n    - deps: mime-types@~2.1.34\n    - deps: negotiator@0.6.3\n  * deps: body-parser@1.19.2\n    - deps: bytes@3.1.2\n    - deps: qs@6.9.7\n    - deps: raw-body@2.4.3\n  * deps: cookie@0.4.2\n  * deps: qs@6.9.7\n    * Fix handling of `__proto__` keys\n  * pref: remove unnecessary regexp for trust proxy\n\n4.17.2 / 2021-12-16\n===================\n\n  * Fix handling of `undefined` in `res.jsonp`\n  * Fix handling of `undefined` when `\"json escape\"` is enabled\n  * Fix incorrect middleware execution with unanchored `RegExp`s\n  * Fix `res.jsonp(obj, status)` deprecation message\n  * Fix typo in `res.is` JSDoc\n  * deps: body-parser@1.19.1\n    - deps: bytes@3.1.1\n    - deps: http-errors@1.8.1\n    - deps: qs@6.9.6\n    - deps: raw-body@2.4.2\n    - deps: safe-buffer@5.2.1\n    - deps: type-is@~1.6.18\n  * deps: content-disposition@0.5.4\n    - deps: safe-buffer@5.2.1\n  * deps: cookie@0.4.1\n    - Fix `maxAge` option to reject invalid values\n  * deps: proxy-addr@~2.0.7\n    - Use `req.socket` over deprecated `req.connection`\n    - deps: forwarded@0.2.0\n    - deps: ipaddr.js@1.9.1\n  * deps: qs@6.9.6\n  * deps: safe-buffer@5.2.1\n  * deps: send@0.17.2\n    - deps: http-errors@1.8.1\n    - deps: ms@2.1.3\n    - pref: ignore empty http tokens\n  * deps: serve-static@1.14.2\n    - deps: send@0.17.2\n  * deps: setprototypeof@1.2.0\n\n4.17.1 / 2019-05-25\n===================\n\n  * Revert \"Improve error message for `null`/`undefined` to `res.status`\"\n\n4.17.0 / 2019-05-16\n===================\n\n  * Add `express.raw` to parse bodies into `Buffer`\n  * Add `express.text` to parse bodies into string\n  * Improve error message for non-strings to `res.sendFile`\n  * Improve error message for `null`/`undefined` to `res.status`\n  * Support multiple hosts in `X-Forwarded-Host`\n  * deps: accepts@~1.3.7\n  * deps: body-parser@1.19.0\n    - Add encoding MIK\n    - Add petabyte (`pb`) support\n    - Fix parsing array brackets after index\n    - deps: bytes@3.1.0\n    - deps: http-errors@1.7.2\n    - deps: iconv-lite@0.4.24\n    - deps: qs@6.7.0\n    - deps: raw-body@2.4.0\n    - deps: type-is@~1.6.17\n  * deps: content-disposition@0.5.3\n  * deps: cookie@0.4.0\n    - Add `SameSite=None` support\n  * deps: finalhandler@~1.1.2\n    - Set stricter `Content-Security-Policy` header\n    - deps: parseurl@~1.3.3\n    - deps: statuses@~1.5.0\n  * deps: parseurl@~1.3.3\n  * deps: proxy-addr@~2.0.5\n    - deps: ipaddr.js@1.9.0\n  * deps: qs@6.7.0\n    - Fix parsing array brackets after index\n  * deps: range-parser@~1.2.1\n  * deps: send@0.17.1\n    - Set stricter CSP header in redirect & error responses\n    - deps: http-errors@~1.7.2\n    - deps: mime@1.6.0\n    - deps: ms@2.1.1\n    - deps: range-parser@~1.2.1\n    - deps: statuses@~1.5.0\n    - perf: remove redundant `path.normalize` call\n  * deps: serve-static@1.14.1\n    - Set stricter CSP header in redirect response\n    - deps: parseurl@~1.3.3\n    - deps: send@0.17.1\n  * deps: setprototypeof@1.1.1\n  * deps: statuses@~1.5.0\n    - Add `103 Early Hints`\n  * deps: type-is@~1.6.18\n    - deps: mime-types@~2.1.24\n    - perf: prevent internal `throw` on invalid type\n\n4.16.4 / 2018-10-10\n===================\n\n  * Fix issue where `\"Request aborted\"` may be logged in `res.sendfile`\n  * Fix JSDoc for `Router` constructor\n  * deps: body-parser@1.18.3\n    - Fix deprecation warnings on Node.js 10+\n    - Fix stack trace for strict json parse error\n    - deps: depd@~1.1.2\n    - deps: http-errors@~1.6.3\n    - deps: iconv-lite@0.4.23\n    - deps: qs@6.5.2\n    - deps: raw-body@2.3.3\n    - deps: type-is@~1.6.16\n  * deps: proxy-addr@~2.0.4\n    - deps: ipaddr.js@1.8.0\n  * deps: qs@6.5.2\n  * deps: safe-buffer@5.1.2\n\n4.16.3 / 2018-03-12\n===================\n\n  * deps: accepts@~1.3.5\n    - deps: mime-types@~2.1.18\n  * deps: depd@~1.1.2\n    - perf: remove argument reassignment\n  * deps: encodeurl@~1.0.2\n    - Fix encoding `%` as last character\n  * deps: finalhandler@1.1.1\n    - Fix 404 output for bad / missing pathnames\n    - deps: encodeurl@~1.0.2\n    - deps: statuses@~1.4.0\n  * deps: proxy-addr@~2.0.3\n    - deps: ipaddr.js@1.6.0\n  * deps: send@0.16.2\n    - Fix incorrect end tag in default error & redirects\n    - deps: depd@~1.1.2\n    - deps: encodeurl@~1.0.2\n    - deps: statuses@~1.4.0\n  * deps: serve-static@1.13.2\n    - Fix incorrect end tag in redirects\n    - deps: encodeurl@~1.0.2\n    - deps: send@0.16.2\n  * deps: statuses@~1.4.0\n  * deps: type-is@~1.6.16\n    - deps: mime-types@~2.1.18\n\n4.16.2 / 2017-10-09\n===================\n\n  * Fix `TypeError` in `res.send` when given `Buffer` and `ETag` header set\n  * perf: skip parsing of entire `X-Forwarded-Proto` header\n\n4.16.1 / 2017-09-29\n===================\n\n  * deps: send@0.16.1\n  * deps: serve-static@1.13.1\n    - Fix regression when `root` is incorrectly set to a file\n    - deps: send@0.16.1\n\n4.16.0 / 2017-09-28\n===================\n\n  * Add `\"json escape\"` setting for `res.json` and `res.jsonp`\n  * Add `express.json` and `express.urlencoded` to parse bodies\n  * Add `options` argument to `res.download`\n  * Improve error message when autoloading invalid view engine\n  * Improve error messages when non-function provided as middleware\n  * Skip `Buffer` encoding when not generating ETag for small response\n  * Use `safe-buffer` for improved Buffer API\n  * deps: accepts@~1.3.4\n    - deps: mime-types@~2.1.16\n  * deps: content-type@~1.0.4\n    - perf: remove argument reassignment\n    - perf: skip parameter parsing when no parameters\n  * deps: etag@~1.8.1\n    - perf: replace regular expression with substring\n  * deps: finalhandler@1.1.0\n    - Use `res.headersSent` when available\n  * deps: parseurl@~1.3.2\n    - perf: reduce overhead for full URLs\n    - perf: unroll the \"fast-path\" `RegExp`\n  * deps: proxy-addr@~2.0.2\n    - Fix trimming leading / trailing OWS in `X-Forwarded-For`\n    - deps: forwarded@~0.1.2\n    - deps: ipaddr.js@1.5.2\n    - perf: reduce overhead when no `X-Forwarded-For` header\n  * deps: qs@6.5.1\n    - Fix parsing & compacting very deep objects\n  * deps: send@0.16.0\n    - Add 70 new types for file extensions\n    - Add `immutable` option\n    - Fix missing `</html>` in default error & redirects\n    - Set charset as \"UTF-8\" for .js and .json\n    - Use instance methods on steam to check for listeners\n    - deps: mime@1.4.1\n    - perf: improve path validation speed\n  * deps: serve-static@1.13.0\n    - Add 70 new types for file extensions\n    - Add `immutable` option\n    - Set charset as \"UTF-8\" for .js and .json\n    - deps: send@0.16.0\n  * deps: setprototypeof@1.1.0\n  * deps: utils-merge@1.0.1\n  * deps: vary@~1.1.2\n    - perf: improve header token parsing speed\n  * perf: re-use options object when generating ETags\n  * perf: remove dead `.charset` set in `res.jsonp`\n\n4.15.5 / 2017-09-24\n===================\n\n  * deps: debug@2.6.9\n  * deps: finalhandler@~1.0.6\n    - deps: debug@2.6.9\n    - deps: parseurl@~1.3.2\n  * deps: fresh@0.5.2\n    - Fix handling of modified headers with invalid dates\n    - perf: improve ETag match loop\n    - perf: improve `If-None-Match` token parsing\n  * deps: send@0.15.6\n    - Fix handling of modified headers with invalid dates\n    - deps: debug@2.6.9\n    - deps: etag@~1.8.1\n    - deps: fresh@0.5.2\n    - perf: improve `If-Match` token parsing\n  * deps: serve-static@1.12.6\n    - deps: parseurl@~1.3.2\n    - deps: send@0.15.6\n    - perf: improve slash collapsing\n\n4.15.4 / 2017-08-06\n===================\n\n  * deps: debug@2.6.8\n  * deps: depd@~1.1.1\n    - Remove unnecessary `Buffer` loading\n  * deps: finalhandler@~1.0.4\n    - deps: debug@2.6.8\n  * deps: proxy-addr@~1.1.5\n    - Fix array argument being altered\n    - deps: ipaddr.js@1.4.0\n  * deps: qs@6.5.0\n  * deps: send@0.15.4\n    - deps: debug@2.6.8\n    - deps: depd@~1.1.1\n    - deps: http-errors@~1.6.2\n  * deps: serve-static@1.12.4\n    - deps: send@0.15.4\n\n4.15.3 / 2017-05-16\n===================\n\n  * Fix error when `res.set` cannot add charset to `Content-Type`\n  * deps: debug@2.6.7\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\n    - deps: ms@2.0.0\n  * deps: finalhandler@~1.0.3\n    - Fix missing `</html>` in HTML document\n    - deps: debug@2.6.7\n  * deps: proxy-addr@~1.1.4\n    - deps: ipaddr.js@1.3.0\n  * deps: send@0.15.3\n    - deps: debug@2.6.7\n    - deps: ms@2.0.0\n  * deps: serve-static@1.12.3\n    - deps: send@0.15.3\n  * deps: type-is@~1.6.15\n    - deps: mime-types@~2.1.15\n  * deps: vary@~1.1.1\n    - perf: hoist regular expression\n\n4.15.2 / 2017-03-06\n===================\n\n  * deps: qs@6.4.0\n    - Fix regression parsing keys starting with `[`\n\n4.15.1 / 2017-03-05\n===================\n\n  * deps: send@0.15.1\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\n    - Fix strict violation in broken environments\n  * deps: serve-static@1.12.1\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\n    - deps: send@0.15.1\n\n4.15.0 / 2017-03-01\n===================\n\n  * Add debug message when loading view engine\n  * Add `next(\"router\")` to exit from router\n  * Fix case where `router.use` skipped requests routes did not\n  * Remove usage of `res._headers` private field\n    - Improves compatibility with Node.js 8 nightly\n  * Skip routing when `req.url` is not set\n  * Use `%o` in path debug to tell types apart\n  * Use `Object.create` to setup request & response prototypes\n  * Use `setprototypeof` module to replace `__proto__` setting\n  * Use `statuses` instead of `http` module for status messages\n  * deps: debug@2.6.1\n    - Allow colors in workers\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\n    - Fix error when running under React Native\n    - Use same color for same namespace\n    - deps: ms@0.7.2\n  * deps: etag@~1.8.0\n    - Use SHA1 instead of MD5 for ETag hashing\n    - Works with FIPS 140-2 OpenSSL configuration\n  * deps: finalhandler@~1.0.0\n    - Fix exception when `err` cannot be converted to a string\n    - Fully URL-encode the pathname in the 404\n    - Only include the pathname in the 404 message\n    - Send complete HTML document\n    - Set `Content-Security-Policy: default-src 'self'` header\n    - deps: debug@2.6.1\n  * deps: fresh@0.5.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - perf: delay reading header values until needed\n    - perf: enable strict mode\n    - perf: hoist regular expressions\n    - perf: remove duplicate conditional\n    - perf: remove unnecessary boolean coercions\n    - perf: skip checking modified time if ETag check failed\n    - perf: skip parsing `If-None-Match` when no `ETag` header\n    - perf: use `Date.parse` instead of `new Date`\n  * deps: qs@6.3.1\n    - Fix array parsing from skipping empty values\n    - Fix compacting nested arrays\n  * deps: send@0.15.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - Remove usage of `res._headers` private field\n    - Support `If-Match` and `If-Unmodified-Since` headers\n    - Use `res.getHeaderNames()` when available\n    - Use `res.headersSent` when available\n    - deps: debug@2.6.1\n    - deps: etag@~1.8.0\n    - deps: fresh@0.5.0\n    - deps: http-errors@~1.6.1\n  * deps: serve-static@1.12.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - Remove usage of `res._headers` private field\n    - Send complete HTML document in redirect response\n    - Set default CSP header in redirect response\n    - Support `If-Match` and `If-Unmodified-Since` headers\n    - Use `res.getHeaderNames()` when available\n    - Use `res.headersSent` when available\n    - deps: send@0.15.0\n  * perf: add fast match path for `*` route\n  * perf: improve `req.ips` performance\n\n4.14.1 / 2017-01-28\n===================\n\n  * deps: content-disposition@0.5.2\n  * deps: finalhandler@0.5.1\n    - Fix exception when `err.headers` is not an object\n    - deps: statuses@~1.3.1\n    - perf: hoist regular expressions\n    - perf: remove duplicate validation path\n  * deps: proxy-addr@~1.1.3\n    - deps: ipaddr.js@1.2.0\n  * deps: send@0.14.2\n    - deps: http-errors@~1.5.1\n    - deps: ms@0.7.2\n    - deps: statuses@~1.3.1\n  * deps: serve-static@~1.11.2\n    - deps: send@0.14.2\n  * deps: type-is@~1.6.14\n    - deps: mime-types@~2.1.13\n\n4.14.0 / 2016-06-16\n===================\n\n  * Add `acceptRanges` option to `res.sendFile`/`res.sendfile`\n  * Add `cacheControl` option to `res.sendFile`/`res.sendfile`\n  * Add `options` argument to `req.range`\n    - Includes the `combine` option\n  * Encode URL in `res.location`/`res.redirect` if not already encoded\n  * Fix some redirect handling in `res.sendFile`/`res.sendfile`\n  * Fix Windows absolute path check using forward slashes\n  * Improve error with invalid arguments to `req.get()`\n  * Improve performance for `res.json`/`res.jsonp` in most cases\n  * Improve `Range` header handling in `res.sendFile`/`res.sendfile`\n  * deps: accepts@~1.3.3\n    - Fix including type extensions in parameters in `Accept` parsing\n    - Fix parsing `Accept` parameters with quoted equals\n    - Fix parsing `Accept` parameters with quoted semicolons\n    - Many performance improvements\n    - deps: mime-types@~2.1.11\n    - deps: negotiator@0.6.1\n  * deps: content-type@~1.0.2\n    - perf: enable strict mode\n  * deps: cookie@0.3.1\n    - Add `sameSite` option\n    - Fix cookie `Max-Age` to never be a floating point number\n    - Improve error message when `encode` is not a function\n    - Improve error message when `expires` is not a `Date`\n    - Throw better error for invalid argument to parse\n    - Throw on invalid values provided to `serialize`\n    - perf: enable strict mode\n    - perf: hoist regular expression\n    - perf: use for loop in parse\n    - perf: use string concatenation for serialization\n  * deps: finalhandler@0.5.0\n    - Change invalid or non-numeric status code to 500\n    - Overwrite status message to match set status code\n    - Prefer `err.statusCode` if `err.status` is invalid\n    - Set response headers from `err.headers` object\n    - Use `statuses` instead of `http` module for status messages\n  * deps: proxy-addr@~1.1.2\n    - Fix accepting various invalid netmasks\n    - Fix IPv6-mapped IPv4 validation edge cases\n    - IPv4 netmasks must be contiguous\n    - IPv6 addresses cannot be used as a netmask\n    - deps: ipaddr.js@1.1.1\n  * deps: qs@6.2.0\n    - Add `decoder` option in `parse` function\n  * deps: range-parser@~1.2.0\n    - Add `combine` option to combine overlapping ranges\n    - Fix incorrectly returning -1 when there is at least one valid range\n    - perf: remove internal function\n  * deps: send@0.14.1\n    - Add `acceptRanges` option\n    - Add `cacheControl` option\n    - Attempt to combine multiple ranges into single range\n    - Correctly inherit from `Stream` class\n    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\n    - Fix `Content-Range` header missing from default 416 responses\n    - Fix redirect error when `path` contains raw non-URL characters\n    - Fix redirect when `path` starts with multiple forward slashes\n    - Ignore non-byte `Range` headers\n    - deps: http-errors@~1.5.0\n    - deps: range-parser@~1.2.0\n    - deps: statuses@~1.3.0\n    - perf: remove argument reassignment\n  * deps: serve-static@~1.11.1\n    - Add `acceptRanges` option\n    - Add `cacheControl` option\n    - Attempt to combine multiple ranges into single range\n    - Fix redirect error when `req.url` contains raw non-URL characters\n    - Ignore non-byte `Range` headers\n    - Use status code 301 for redirects\n    - deps: send@0.14.1\n  * deps: type-is@~1.6.13\n    - Fix type error when given invalid type to match against\n    - deps: mime-types@~2.1.11\n  * deps: vary@~1.1.0\n    - Only accept valid field names in the `field` argument\n  * perf: use strict equality when possible\n\n4.13.4 / 2016-01-21\n===================\n\n  * deps: content-disposition@0.5.1\n    - perf: enable strict mode\n  * deps: cookie@0.1.5\n    - Throw on invalid values provided to `serialize`\n  * deps: depd@~1.1.0\n    - Support web browser loading\n    - perf: enable strict mode\n  * deps: escape-html@~1.0.3\n    - perf: enable strict mode\n    - perf: optimize string replacement\n    - perf: use faster string coercion\n  * deps: finalhandler@0.4.1\n    - deps: escape-html@~1.0.3\n  * deps: merge-descriptors@1.0.1\n    - perf: enable strict mode\n  * deps: methods@~1.1.2\n    - perf: enable strict mode\n  * deps: parseurl@~1.3.1\n    - perf: enable strict mode\n  * deps: proxy-addr@~1.0.10\n    - deps: ipaddr.js@1.0.5\n    - perf: enable strict mode\n  * deps: range-parser@~1.0.3\n    - perf: enable strict mode\n  * deps: send@0.13.1\n    - deps: depd@~1.1.0\n    - deps: destroy@~1.0.4\n    - deps: escape-html@~1.0.3\n    - deps: range-parser@~1.0.3\n  * deps: serve-static@~1.10.2\n    - deps: escape-html@~1.0.3\n    - deps: parseurl@~1.3.0\n    - deps: send@0.13.1\n\n4.13.3 / 2015-08-02\n===================\n\n  * Fix infinite loop condition using `mergeParams: true`\n  * Fix inner numeric indices incorrectly altering parent `req.params`\n\n4.13.2 / 2015-07-31\n===================\n\n  * deps: accepts@~1.2.12\n    - deps: mime-types@~2.1.4\n  * deps: array-flatten@1.1.1\n    - perf: enable strict mode\n  * deps: path-to-regexp@0.1.7\n    - Fix regression with escaped round brackets and matching groups\n  * deps: type-is@~1.6.6\n    - deps: mime-types@~2.1.4\n\n4.13.1 / 2015-07-05\n===================\n\n  * deps: accepts@~1.2.10\n    - deps: mime-types@~2.1.2\n  * deps: qs@4.0.0\n    - Fix dropping parameters like `hasOwnProperty`\n    - Fix various parsing edge cases\n  * deps: type-is@~1.6.4\n    - deps: mime-types@~2.1.2\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n\n4.13.0 / 2015-06-20\n===================\n\n  * Add settings to debug output\n  * Fix `res.format` error when only `default` provided\n  * Fix issue where `next('route')` in `app.param` would incorrectly skip values\n  * Fix hiding platform issues with `decodeURIComponent`\n    - Only `URIError`s are a 400\n  * Fix using `*` before params in routes\n  * Fix using capture groups before params in routes\n  * Simplify `res.cookie` to call `res.append`\n  * Use `array-flatten` module for flattening arrays\n  * deps: accepts@~1.2.9\n    - deps: mime-types@~2.1.1\n    - perf: avoid argument reassignment & argument slice\n    - perf: avoid negotiator recursive construction\n    - perf: enable strict mode\n    - perf: remove unnecessary bitwise operator\n  * deps: cookie@0.1.3\n    - perf: deduce the scope of try-catch deopt\n    - perf: remove argument reassignments\n  * deps: escape-html@1.0.2\n  * deps: etag@~1.7.0\n    - Always include entity length in ETags for hash length extensions\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\n    - Improve stat performance by removing hashing\n    - Improve support for JXcore\n    - Remove base64 padding in ETags to shorten\n    - Support \"fake\" stats objects in environments without fs\n    - Use MD5 instead of MD4 in weak ETags over 1KB\n  * deps: finalhandler@0.4.0\n    - Fix a false-positive when unpiping in Node.js 0.8\n    - Support `statusCode` property on `Error` objects\n    - Use `unpipe` module for unpiping requests\n    - deps: escape-html@1.0.2\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n  * deps: fresh@0.3.0\n    - Add weak `ETag` matching support\n  * deps: on-finished@~2.3.0\n    - Add defined behavior for HTTP `CONNECT` requests\n    - Add defined behavior for HTTP `Upgrade` requests\n    - deps: ee-first@1.1.1\n  * deps: path-to-regexp@0.1.6\n  * deps: send@0.13.0\n    - Allow Node.js HTTP server to set `Date` response header\n    - Fix incorrectly removing `Content-Location` on 304 response\n    - Improve the default redirect response headers\n    - Send appropriate headers on default error response\n    - Use `http-errors` for standard emitted errors\n    - Use `statuses` instead of `http` module for status messages\n    - deps: escape-html@1.0.2\n    - deps: etag@~1.7.0\n    - deps: fresh@0.3.0\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove unnecessary array allocations\n  * deps: serve-static@~1.10.0\n    - Add `fallthrough` option\n    - Fix reading options from options prototype\n    - Improve the default redirect response headers\n    - Malformed URLs now `next()` instead of 400\n    - deps: escape-html@1.0.2\n    - deps: send@0.13.0\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n  * deps: type-is@~1.6.3\n    - deps: mime-types@~2.1.1\n    - perf: reduce try block size\n    - perf: remove bitwise operations\n  * perf: enable strict mode\n  * perf: isolate `app.render` try block\n  * perf: remove argument reassignments in application\n  * perf: remove argument reassignments in request prototype\n  * perf: remove argument reassignments in response prototype\n  * perf: remove argument reassignments in routing\n  * perf: remove argument reassignments in `View`\n  * perf: skip attempting to decode zero length string\n  * perf: use saved reference to `http.STATUS_CODES`\n\n4.12.4 / 2015-05-17\n===================\n\n  * deps: accepts@~1.2.7\n    - deps: mime-types@~2.0.11\n    - deps: negotiator@0.5.3\n  * deps: debug@~2.2.0\n    - deps: ms@0.7.1\n  * deps: depd@~1.0.1\n  * deps: etag@~1.6.0\n    - Improve support for JXcore\n    - Support \"fake\" stats objects in environments without `fs`\n  * deps: finalhandler@0.3.6\n    - deps: debug@~2.2.0\n    - deps: on-finished@~2.2.1\n  * deps: on-finished@~2.2.1\n    - Fix `isFinished(req)` when data buffered\n  * deps: proxy-addr@~1.0.8\n    - deps: ipaddr.js@1.0.1\n  * deps: qs@2.4.2\n   - Fix allowing parameters like `constructor`\n  * deps: send@0.12.3\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: etag@~1.6.0\n    - deps: ms@0.7.1\n    - deps: on-finished@~2.2.1\n  * deps: serve-static@~1.9.3\n    - deps: send@0.12.3\n  * deps: type-is@~1.6.2\n    - deps: mime-types@~2.0.11\n\n4.12.3 / 2015-03-17\n===================\n\n  * deps: accepts@~1.2.5\n    - deps: mime-types@~2.0.10\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n  * deps: finalhandler@0.3.4\n    - deps: debug@~2.1.3\n  * deps: proxy-addr@~1.0.7\n    - deps: ipaddr.js@0.1.9\n  * deps: qs@2.4.1\n    - Fix error when parameter `hasOwnProperty` is present\n  * deps: send@0.12.2\n    - Throw errors early for invalid `extensions` or `index` options\n    - deps: debug@~2.1.3\n  * deps: serve-static@~1.9.2\n    - deps: send@0.12.2\n  * deps: type-is@~1.6.1\n    - deps: mime-types@~2.0.10\n\n4.12.2 / 2015-03-02\n===================\n\n  * Fix regression where `\"Request aborted\"` is logged using `res.sendFile`\n\n4.12.1 / 2015-03-01\n===================\n\n  * Fix constructing application with non-configurable prototype properties\n  * Fix `ECONNRESET` errors from `res.sendFile` usage\n  * Fix `req.host` when using \"trust proxy\" hops count\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\n  * Fix wrong `code` on aborted connections from `res.sendFile`\n  * deps: merge-descriptors@1.0.0\n\n4.12.0 / 2015-02-23\n===================\n\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\n  * Generate `ETag`s for all request responses\n    - No longer restricted to only responses for `GET` and `HEAD` requests\n  * Use `content-type` to parse `Content-Type` headers\n  * deps: accepts@~1.2.4\n    - Fix preference sorting to be stable for long acceptable lists\n    - deps: mime-types@~2.0.9\n    - deps: negotiator@0.5.1\n  * deps: cookie-signature@1.0.6\n  * deps: send@0.12.1\n    - Always read the stat size from the file\n    - Fix mutating passed-in `options`\n    - deps: mime@1.3.4\n  * deps: serve-static@~1.9.1\n    - deps: send@0.12.1\n  * deps: type-is@~1.6.0\n    - fix argument reassignment\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\n    - support wildcard for both type and subtype (`*/*`)\n    - deps: mime-types@~2.0.9\n\n4.11.2 / 2015-02-01\n===================\n\n  * Fix `res.redirect` double-calling `res.end` for `HEAD` requests\n  * deps: accepts@~1.2.3\n    - deps: mime-types@~2.0.8\n  * deps: proxy-addr@~1.0.6\n    - deps: ipaddr.js@0.1.8\n  * deps: type-is@~1.5.6\n    - deps: mime-types@~2.0.8\n\n4.11.1 / 2015-01-20\n===================\n\n  * deps: send@0.11.1\n    - Fix root path disclosure\n  * deps: serve-static@~1.8.1\n    - Fix redirect loop in Node.js 0.11.14\n    - Fix root path disclosure\n    - deps: send@0.11.1\n\n4.11.0 / 2015-01-13\n===================\n\n  * Add `res.append(field, val)` to append headers\n  * Deprecate leading `:` in `name` for `app.param(name, fn)`\n  * Deprecate `req.param()` -- use `req.params`, `req.body`, or `req.query` instead\n  * Deprecate `app.param(fn)`\n  * Fix `OPTIONS` responses to include the `HEAD` method properly\n  * Fix `res.sendFile` not always detecting aborted connection\n  * Match routes iteratively to prevent stack overflows\n  * deps: accepts@~1.2.2\n    - deps: mime-types@~2.0.7\n    - deps: negotiator@0.5.0\n  * deps: send@0.11.0\n    - deps: debug@~2.1.1\n    - deps: etag@~1.5.1\n    - deps: ms@0.7.0\n    - deps: on-finished@~2.2.0\n  * deps: serve-static@~1.8.0\n    - deps: send@0.11.0\n\n4.10.8 / 2015-01-13\n===================\n\n  * Fix crash from error within `OPTIONS` response handler\n  * deps: proxy-addr@~1.0.5\n    - deps: ipaddr.js@0.1.6\n\n4.10.7 / 2015-01-04\n===================\n\n  * Fix `Allow` header for `OPTIONS` to not contain duplicate methods\n  * Fix incorrect \"Request aborted\" for `res.sendFile` when `HEAD` or 304\n  * deps: debug@~2.1.1\n  * deps: finalhandler@0.3.3\n    - deps: debug@~2.1.1\n    - deps: on-finished@~2.2.0\n  * deps: methods@~1.1.1\n  * deps: on-finished@~2.2.0\n  * deps: serve-static@~1.7.2\n    - Fix potential open redirect when mounted at root\n  * deps: type-is@~1.5.5\n    - deps: mime-types@~2.0.7\n\n4.10.6 / 2014-12-12\n===================\n\n  * Fix exception in `req.fresh`/`req.stale` without response headers\n\n4.10.5 / 2014-12-10\n===================\n\n  * Fix `res.send` double-calling `res.end` for `HEAD` requests\n  * deps: accepts@~1.1.4\n    - deps: mime-types@~2.0.4\n  * deps: type-is@~1.5.4\n    - deps: mime-types@~2.0.4\n\n4.10.4 / 2014-11-24\n===================\n\n  * Fix `res.sendfile` logging standard write errors\n\n4.10.3 / 2014-11-23\n===================\n\n  * Fix `res.sendFile` logging standard write errors\n  * deps: etag@~1.5.1\n  * deps: proxy-addr@~1.0.4\n    - deps: ipaddr.js@0.1.5\n  * deps: qs@2.3.3\n    - Fix `arrayLimit` behavior\n\n4.10.2 / 2014-11-09\n===================\n\n  * Correctly invoke async router callback asynchronously\n  * deps: accepts@~1.1.3\n    - deps: mime-types@~2.0.3\n  * deps: type-is@~1.5.3\n    - deps: mime-types@~2.0.3\n\n4.10.1 / 2014-10-28\n===================\n\n  * Fix handling of URLs containing `://` in the path\n  * deps: qs@2.3.2\n    - Fix parsing of mixed objects and values\n\n4.10.0 / 2014-10-23\n===================\n\n  * Add support for `app.set('views', array)`\n    - Views are looked up in sequence in array of directories\n  * Fix `res.send(status)` to mention `res.sendStatus(status)`\n  * Fix handling of invalid empty URLs\n  * Use `content-disposition` module for `res.attachment`/`res.download`\n    - Sends standards-compliant `Content-Disposition` header\n    - Full Unicode support\n  * Use `path.resolve` in view lookup\n  * deps: debug@~2.1.0\n    - Implement `DEBUG_FD` env variable support\n  * deps: depd@~1.0.0\n  * deps: etag@~1.5.0\n    - Improve string performance\n    - Slightly improve speed for weak ETags over 1KB\n  * deps: finalhandler@0.3.2\n    - Terminate in progress response only on error\n    - Use `on-finished` to determine request status\n    - deps: debug@~2.1.0\n    - deps: on-finished@~2.1.1\n  * deps: on-finished@~2.1.1\n    - Fix handling of pipelined requests\n  * deps: qs@2.3.0\n    - Fix parsing of mixed implicit and explicit arrays\n  * deps: send@0.10.1\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: etag@~1.5.0\n    - deps: on-finished@~2.1.1\n  * deps: serve-static@~1.7.1\n    - deps: send@0.10.1\n\n4.9.8 / 2014-10-17\n==================\n\n  * Fix `res.redirect` body when redirect status specified\n  * deps: accepts@~1.1.2\n    - Fix error when media type has invalid parameter\n    - deps: negotiator@0.4.9\n\n4.9.7 / 2014-10-10\n==================\n\n  * Fix using same param name in array of paths\n\n4.9.6 / 2014-10-08\n==================\n\n  * deps: accepts@~1.1.1\n    - deps: mime-types@~2.0.2\n    - deps: negotiator@0.4.8\n  * deps: serve-static@~1.6.4\n    - Fix redirect loop when index file serving disabled\n  * deps: type-is@~1.5.2\n    - deps: mime-types@~2.0.2\n\n4.9.5 / 2014-09-24\n==================\n\n  * deps: etag@~1.4.0\n  * deps: proxy-addr@~1.0.3\n    - Use `forwarded` npm module\n  * deps: send@0.9.3\n    - deps: etag@~1.4.0\n  * deps: serve-static@~1.6.3\n    - deps: send@0.9.3\n\n4.9.4 / 2014-09-19\n==================\n\n  * deps: qs@2.2.4\n    - Fix issue with object keys starting with numbers truncated\n\n4.9.3 / 2014-09-18\n==================\n\n  * deps: proxy-addr@~1.0.2\n    - Fix a global leak when multiple subnets are trusted\n    - deps: ipaddr.js@0.1.3\n\n4.9.2 / 2014-09-17\n==================\n\n  * Fix regression for empty string `path` in `app.use`\n  * Fix `router.use` to accept array of middleware without path\n  * Improve error message for bad `app.use` arguments\n\n4.9.1 / 2014-09-16\n==================\n\n  * Fix `app.use` to accept array of middleware without path\n  * deps: depd@0.4.5\n  * deps: etag@~1.3.1\n  * deps: send@0.9.2\n    - deps: depd@0.4.5\n    - deps: etag@~1.3.1\n    - deps: range-parser@~1.0.2\n  * deps: serve-static@~1.6.2\n    - deps: send@0.9.2\n\n4.9.0 / 2014-09-08\n==================\n\n  * Add `res.sendStatus`\n  * Invoke callback for sendfile when client aborts\n    - Applies to `res.sendFile`, `res.sendfile`, and `res.download`\n    - `err` will be populated with request aborted error\n  * Support IP address host in `req.subdomains`\n  * Use `etag` to generate `ETag` headers\n  * deps: accepts@~1.1.0\n    - update `mime-types`\n  * deps: cookie-signature@1.0.5\n  * deps: debug@~2.0.0\n  * deps: finalhandler@0.2.0\n    - Set `X-Content-Type-Options: nosniff` header\n    - deps: debug@~2.0.0\n  * deps: fresh@0.2.4\n  * deps: media-typer@0.3.0\n    - Throw error when parameter format invalid on parse\n  * deps: qs@2.2.3\n    - Fix issue where first empty value in array is discarded\n  * deps: range-parser@~1.0.2\n  * deps: send@0.9.1\n    - Add `lastModified` option\n    - Use `etag` to generate `ETag` header\n    - deps: debug@~2.0.0\n    - deps: fresh@0.2.4\n  * deps: serve-static@~1.6.1\n    - Add `lastModified` option\n    - deps: send@0.9.1\n  * deps: type-is@~1.5.1\n    - fix `hasbody` to be true for `content-length: 0`\n    - deps: media-typer@0.3.0\n    - deps: mime-types@~2.0.1\n  * deps: vary@~1.0.0\n    - Accept valid `Vary` header string as `field`\n\n4.8.8 / 2014-09-04\n==================\n\n  * deps: send@0.8.5\n    - Fix a path traversal issue when using `root`\n    - Fix malicious path detection for empty string path\n  * deps: serve-static@~1.5.4\n    - deps: send@0.8.5\n\n4.8.7 / 2014-08-29\n==================\n\n  * deps: qs@2.2.2\n    - Remove unnecessary cloning\n\n4.8.6 / 2014-08-27\n==================\n\n  * deps: qs@2.2.0\n    - Array parsing fix\n    - Performance improvements\n\n4.8.5 / 2014-08-18\n==================\n\n  * deps: send@0.8.3\n    - deps: destroy@1.0.3\n    - deps: on-finished@2.1.0\n  * deps: serve-static@~1.5.3\n    - deps: send@0.8.3\n\n4.8.4 / 2014-08-14\n==================\n\n  * deps: qs@1.2.2\n  * deps: send@0.8.2\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\n  * deps: serve-static@~1.5.2\n    - deps: send@0.8.2\n\n4.8.3 / 2014-08-10\n==================\n\n  * deps: parseurl@~1.3.0\n  * deps: qs@1.2.1\n  * deps: serve-static@~1.5.1\n    - Fix parsing of weird `req.originalUrl` values\n    - deps: parseurl@~1.3.0\n    - deps: utils-merge@1.0.0\n\n4.8.2 / 2014-08-07\n==================\n\n  * deps: qs@1.2.0\n    - Fix parsing array of objects\n\n4.8.1 / 2014-08-06\n==================\n\n  * fix incorrect deprecation warnings on `res.download`\n  * deps: qs@1.1.0\n    - Accept urlencoded square brackets\n    - Accept empty values in implicit array notation\n\n4.8.0 / 2014-08-05\n==================\n\n  * add `res.sendFile`\n    - accepts a file system path instead of a URL\n    - requires an absolute path or `root` option specified\n  * deprecate `res.sendfile` -- use `res.sendFile` instead\n  * support mounted app as any argument to `app.use()`\n  * deps: qs@1.0.2\n    - Complete rewrite\n    - Limits array length to 20\n    - Limits object depth to 5\n    - Limits parameters to 1,000\n  * deps: send@0.8.1\n    - Add `extensions` option\n  * deps: serve-static@~1.5.0\n    - Add `extensions` option\n    - deps: send@0.8.1\n\n4.7.4 / 2014-08-04\n==================\n\n  * fix `res.sendfile` regression for serving directory index files\n  * deps: send@0.7.4\n    - Fix incorrect 403 on Windows and Node.js 0.11\n    - Fix serving index files without root dir\n  * deps: serve-static@~1.4.4\n    - deps: send@0.7.4\n\n4.7.3 / 2014-08-04\n==================\n\n  * deps: send@0.7.3\n    - Fix incorrect 403 on Windows and Node.js 0.11\n  * deps: serve-static@~1.4.3\n    - Fix incorrect 403 on Windows and Node.js 0.11\n    - deps: send@0.7.3\n\n4.7.2 / 2014-07-27\n==================\n\n  * deps: depd@0.4.4\n    - Work-around v8 generating empty stack traces\n  * deps: send@0.7.2\n    - deps: depd@0.4.4\n  * deps: serve-static@~1.4.2\n\n4.7.1 / 2014-07-26\n==================\n\n  * deps: depd@0.4.3\n    - Fix exception when global `Error.stackTraceLimit` is too low\n  * deps: send@0.7.1\n    - deps: depd@0.4.3\n  * deps: serve-static@~1.4.1\n\n4.7.0 / 2014-07-25\n==================\n\n  * fix `req.protocol` for proxy-direct connections\n  * configurable query parser with `app.set('query parser', parser)`\n    - `app.set('query parser', 'extended')` parse with \"qs\" module\n    - `app.set('query parser', 'simple')` parse with \"querystring\" core module\n    - `app.set('query parser', false)` disable query string parsing\n    - `app.set('query parser', true)` enable simple parsing\n  * deprecate `res.json(status, obj)` -- use `res.status(status).json(obj)` instead\n  * deprecate `res.jsonp(status, obj)` -- use `res.status(status).jsonp(obj)` instead\n  * deprecate `res.send(status, body)` -- use `res.status(status).send(body)` instead\n  * deps: debug@1.0.4\n  * deps: depd@0.4.2\n    - Add `TRACE_DEPRECATION` environment variable\n    - Remove non-standard grey color from color output\n    - Support `--no-deprecation` argument\n    - Support `--trace-deprecation` argument\n  * deps: finalhandler@0.1.0\n    - Respond after request fully read\n    - deps: debug@1.0.4\n  * deps: parseurl@~1.2.0\n    - Cache URLs based on original value\n    - Remove no-longer-needed URL mis-parse work-around\n    - Simplify the \"fast-path\" `RegExp`\n  * deps: send@0.7.0\n    - Add `dotfiles` option\n    - Cap `maxAge` value to 1 year\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n  * deps: serve-static@~1.4.0\n    - deps: parseurl@~1.2.0\n    - deps: send@0.7.0\n  * perf: prevent multiple `Buffer` creation in `res.send`\n\n4.6.1 / 2014-07-12\n==================\n\n  * fix `subapp.mountpath` regression for `app.use(subapp)`\n\n4.6.0 / 2014-07-11\n==================\n\n  * accept multiple callbacks to `app.use()`\n  * add explicit \"Rosetta Flash JSONP abuse\" protection\n    - previous versions are not vulnerable; this is just explicit protection\n  * catch errors in multiple `req.param(name, fn)` handlers\n  * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\n  * fix `res.send(status, num)` to send `num` as json (not error)\n  * remove unnecessary escaping when `res.jsonp` returns JSON response\n  * support non-string `path` in `app.use(path, fn)`\n    - supports array of paths\n    - supports `RegExp`\n  * router: fix optimization on router exit\n  * router: refactor location of `try` blocks\n  * router: speed up standard `app.use(fn)`\n  * deps: debug@1.0.3\n    - Add support for multiple wildcards in namespaces\n  * deps: finalhandler@0.0.3\n    - deps: debug@1.0.3\n  * deps: methods@1.1.0\n    - add `CONNECT`\n  * deps: parseurl@~1.1.3\n    - faster parsing of href-only URLs\n  * deps: path-to-regexp@0.1.3\n  * deps: send@0.6.0\n    - deps: debug@1.0.3\n  * deps: serve-static@~1.3.2\n    - deps: parseurl@~1.1.3\n    - deps: send@0.6.0\n  * perf: fix arguments reassign deopt in some `res` methods\n\n4.5.1 / 2014-07-06\n==================\n\n * fix routing regression when altering `req.method`\n\n4.5.0 / 2014-07-04\n==================\n\n * add deprecation message to non-plural `req.accepts*`\n * add deprecation message to `res.send(body, status)`\n * add deprecation message to `res.vary()`\n * add `headers` option to `res.sendfile`\n   - use to set headers on successful file transfer\n * add `mergeParams` option to `Router`\n   - merges `req.params` from parent routes\n * add `req.hostname` -- correct name for what `req.host` returns\n * deprecate things with `depd` module\n * deprecate `req.host` -- use `req.hostname` instead\n * fix behavior when handling request without routes\n * fix handling when `route.all` is only route\n * invoke `router.param()` only when route matches\n * restore `req.params` after invoking router\n * use `finalhandler` for final response handling\n * use `media-typer` to alter content-type charset\n * deps: accepts@~1.0.7\n * deps: send@0.5.0\n   - Accept string for `maxage` (converted by `ms`)\n   - Include link in default redirect response\n * deps: serve-static@~1.3.0\n   - Accept string for `maxAge` (converted by `ms`)\n   - Add `setHeaders` option\n   - Include HTML link in redirect response\n   - deps: send@0.5.0\n * deps: type-is@~1.3.2\n\n4.4.5 / 2014-06-26\n==================\n\n * deps: cookie-signature@1.0.4\n   - fix for timing attacks\n\n4.4.4 / 2014-06-20\n==================\n\n * fix `res.attachment` Unicode filenames in Safari\n * fix \"trim prefix\" debug message in `express:router`\n * deps: accepts@~1.0.5\n * deps: buffer-crc32@0.2.3\n\n4.4.3 / 2014-06-11\n==================\n\n * fix persistence of modified `req.params[name]` from `app.param()`\n * deps: accepts@1.0.3\n   - deps: negotiator@0.4.6\n * deps: debug@1.0.2\n * deps: send@0.4.3\n   - Do not throw uncatchable error on file open race condition\n   - Use `escape-html` for HTML escaping\n   - deps: debug@1.0.2\n   - deps: finished@1.2.2\n   - deps: fresh@0.2.2\n * deps: serve-static@1.2.3\n   - Do not throw uncatchable error on file open race condition\n   - deps: send@0.4.3\n\n4.4.2 / 2014-06-09\n==================\n\n * fix catching errors from top-level handlers\n * use `vary` module for `res.vary`\n * deps: debug@1.0.1\n * deps: proxy-addr@1.0.1\n * deps: send@0.4.2\n   - fix \"event emitter leak\" warnings\n   - deps: debug@1.0.1\n   - deps: finished@1.2.1\n * deps: serve-static@1.2.2\n   - fix \"event emitter leak\" warnings\n   - deps: send@0.4.2\n * deps: type-is@1.2.1\n\n4.4.1 / 2014-06-02\n==================\n\n * deps: methods@1.0.1\n * deps: send@0.4.1\n   - Send `max-age` in `Cache-Control` in correct format\n * deps: serve-static@1.2.1\n   - use `escape-html` for escaping\n   - deps: send@0.4.1\n\n4.4.0 / 2014-05-30\n==================\n\n * custom etag control with `app.set('etag', val)`\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\n   - `app.set('etag', 'weak')` weak tag\n   - `app.set('etag', 'strong')` strong etag\n   - `app.set('etag', false)` turn off\n   - `app.set('etag', true)` standard etag\n * mark `res.send` ETag as weak and reduce collisions\n * update accepts to 1.0.2\n   - Fix interpretation when header not in request\n * update send to 0.4.0\n   - Calculate ETag with md5 for reduced collisions\n   - Ignore stream errors after request ends\n   - deps: debug@0.8.1\n * update serve-static to 1.2.0\n   - Calculate ETag with md5 for reduced collisions\n   - Ignore stream errors after request ends\n   - deps: send@0.4.0\n\n4.3.2 / 2014-05-28\n==================\n\n * fix handling of errors from `router.param()` callbacks\n\n4.3.1 / 2014-05-23\n==================\n\n * revert \"fix behavior of multiple `app.VERB` for the same path\"\n   - this caused a regression in the order of route execution\n\n4.3.0 / 2014-05-21\n==================\n\n * add `req.baseUrl` to access the path stripped from `req.url` in routes\n * fix behavior of multiple `app.VERB` for the same path\n * fix issue routing requests among sub routers\n * invoke `router.param()` only when necessary instead of every match\n * proper proxy trust with `app.set('trust proxy', trust)`\n   - `app.set('trust proxy', 1)` trust first hop\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\n   - `app.set('trust proxy', false)` turn off\n   - `app.set('trust proxy', true)` trust everything\n * set proper `charset` in `Content-Type` for `res.send`\n * update type-is to 1.2.0\n   - support suffix matching\n\n4.2.0 / 2014-05-11\n==================\n\n * deprecate `app.del()` -- use `app.delete()` instead\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\n * fix `req.next` when inside router instance\n * include `ETag` header in `HEAD` requests\n * keep previous `Content-Type` for `res.jsonp`\n * support PURGE method\n   - add `app.purge`\n   - add `router.purge`\n   - include PURGE in `app.all`\n * update debug to 0.8.0\n   - add `enable()` method\n   - change from stderr to stdout\n * update methods to 1.0.0\n   - add PURGE\n\n4.1.2 / 2014-05-08\n==================\n\n * fix `req.host` for IPv6 literals\n * fix `res.jsonp` error if callback param is object\n\n4.1.1 / 2014-04-27\n==================\n\n * fix package.json to reflect supported node version\n\n4.1.0 / 2014-04-24\n==================\n\n * pass options from `res.sendfile` to `send`\n * preserve casing of headers in `res.header` and `res.set`\n * support unicode file names in `res.attachment` and `res.download`\n * update accepts to 1.0.1\n   - deps: negotiator@0.4.0\n * update cookie to 0.1.2\n   - Fix for maxAge == 0\n   - made compat with expires field\n * update send to 0.3.0\n   - Accept API options in options object\n   - Coerce option types\n   - Control whether to generate etags\n   - Default directory access to 403 when index disabled\n   - Fix sending files with dots without root set\n   - Include file path in etag\n   - Make \"Can't set headers after they are sent.\" catchable\n   - Send full entity-body for multi range requests\n   - Set etags to \"weak\"\n   - Support \"If-Range\" header\n   - Support multiple index paths\n   - deps: mime@1.2.11\n * update serve-static to 1.1.0\n   - Accept options directly to `send` module\n   - Resolve relative paths at middleware setup\n   - Use parseurl to parse the URL from request\n   - deps: send@0.3.0\n * update type-is to 1.1.0\n   - add non-array values support\n   - add `multipart` as a shorthand\n\n4.0.0 / 2014-04-09\n==================\n\n * remove:\n   - node 0.8 support\n   - connect and connect's patches except for charset handling\n   - express(1) - moved to [express-generator](https://github.com/expressjs/generator)\n   - `express.createServer()` - it has been deprecated for a long time. Use `express()`\n   - `app.configure` - use logic in your own app code\n   - `app.router` - is removed\n   - `req.auth` - use `basic-auth` instead\n   - `req.accepted*` - use `req.accepts*()` instead\n   - `res.location` - relative URL resolution is removed\n   - `res.charset` - include the charset in the content type when using `res.set()`\n   - all bundled middleware except `static`\n * change:\n   - `app.route` -> `app.mountpath` when mounting an express app in another express app\n   - `json spaces` no longer enabled by default in development\n   - `req.accepts*` -> `req.accepts*s` - i.e. `req.acceptsEncoding` -> `req.acceptsEncodings`\n   - `req.params` is now an object instead of an array\n   - `res.locals` is no longer a function. It is a plain js object. Treat it as such.\n   - `res.headerSent` -> `res.headersSent` to match node.js ServerResponse object\n * refactor:\n   - `req.accepts*` with [accepts](https://github.com/expressjs/accepts)\n   - `req.is` with [type-is](https://github.com/expressjs/type-is)\n   - [path-to-regexp](https://github.com/component/path-to-regexp)\n * add:\n   - `app.router()` - returns the app Router instance\n   - `app.route()` - Proxy to the app's `Router#route()` method to create a new route\n   - Router & Route - public API\n\n3.21.2 / 2015-07-31\n===================\n\n  * deps: connect@2.30.2\n    - deps: body-parser@~1.13.3\n    - deps: compression@~1.5.2\n    - deps: errorhandler@~1.4.2\n    - deps: method-override@~2.3.5\n    - deps: serve-index@~1.7.2\n    - deps: type-is@~1.6.6\n    - deps: vhost@~3.0.1\n  * deps: vary@~1.0.1\n    - Fix setting empty header from empty `field`\n    - perf: enable strict mode\n    - perf: remove argument reassignments\n\n3.21.1 / 2015-07-05\n===================\n\n  * deps: basic-auth@~1.0.3\n  * deps: connect@2.30.1\n    - deps: body-parser@~1.13.2\n    - deps: compression@~1.5.1\n    - deps: errorhandler@~1.4.1\n    - deps: morgan@~1.6.1\n    - deps: pause@0.1.0\n    - deps: qs@4.0.0\n    - deps: serve-index@~1.7.1\n    - deps: type-is@~1.6.4\n\n3.21.0 / 2015-06-18\n===================\n\n  * deps: basic-auth@1.0.2\n    - perf: enable strict mode\n    - perf: hoist regular expression\n    - perf: parse with regular expressions\n    - perf: remove argument reassignment\n  * deps: connect@2.30.0\n    - deps: body-parser@~1.13.1\n    - deps: bytes@2.1.0\n    - deps: compression@~1.5.0\n    - deps: cookie@0.1.3\n    - deps: cookie-parser@~1.3.5\n    - deps: csurf@~1.8.3\n    - deps: errorhandler@~1.4.0\n    - deps: express-session@~1.11.3\n    - deps: finalhandler@0.4.0\n    - deps: fresh@0.3.0\n    - deps: morgan@~1.6.0\n    - deps: serve-favicon@~2.3.0\n    - deps: serve-index@~1.7.0\n    - deps: serve-static@~1.10.0\n    - deps: type-is@~1.6.3\n  * deps: cookie@0.1.3\n    - perf: deduce the scope of try-catch deopt\n    - perf: remove argument reassignments\n  * deps: escape-html@1.0.2\n  * deps: etag@~1.7.0\n    - Always include entity length in ETags for hash length extensions\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\n    - Improve stat performance by removing hashing\n    - Improve support for JXcore\n    - Remove base64 padding in ETags to shorten\n    - Support \"fake\" stats objects in environments without fs\n    - Use MD5 instead of MD4 in weak ETags over 1KB\n  * deps: fresh@0.3.0\n    - Add weak `ETag` matching support\n  * deps: mkdirp@0.5.1\n    - Work in global strict mode\n  * deps: send@0.13.0\n    - Allow Node.js HTTP server to set `Date` response header\n    - Fix incorrectly removing `Content-Location` on 304 response\n    - Improve the default redirect response headers\n    - Send appropriate headers on default error response\n    - Use `http-errors` for standard emitted errors\n    - Use `statuses` instead of `http` module for status messages\n    - deps: escape-html@1.0.2\n    - deps: etag@~1.7.0\n    - deps: fresh@0.3.0\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove unnecessary array allocations\n\n3.20.3 / 2015-05-17\n===================\n\n  * deps: connect@2.29.2\n    - deps: body-parser@~1.12.4\n    - deps: compression@~1.4.4\n    - deps: connect-timeout@~1.6.2\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: errorhandler@~1.3.6\n    - deps: finalhandler@0.3.6\n    - deps: method-override@~2.3.3\n    - deps: morgan@~1.5.3\n    - deps: qs@2.4.2\n    - deps: response-time@~2.3.1\n    - deps: serve-favicon@~2.2.1\n    - deps: serve-index@~1.6.4\n    - deps: serve-static@~1.9.3\n    - deps: type-is@~1.6.2\n  * deps: debug@~2.2.0\n    - deps: ms@0.7.1\n  * deps: depd@~1.0.1\n  * deps: proxy-addr@~1.0.8\n    - deps: ipaddr.js@1.0.1\n  * deps: send@0.12.3\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: etag@~1.6.0\n    - deps: ms@0.7.1\n    - deps: on-finished@~2.2.1\n\n3.20.2 / 2015-03-16\n===================\n\n  * deps: connect@2.29.1\n    - deps: body-parser@~1.12.2\n    - deps: compression@~1.4.3\n    - deps: connect-timeout@~1.6.1\n    - deps: debug@~2.1.3\n    - deps: errorhandler@~1.3.5\n    - deps: express-session@~1.10.4\n    - deps: finalhandler@0.3.4\n    - deps: method-override@~2.3.2\n    - deps: morgan@~1.5.2\n    - deps: qs@2.4.1\n    - deps: serve-index@~1.6.3\n    - deps: serve-static@~1.9.2\n    - deps: type-is@~1.6.1\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n  * deps: merge-descriptors@1.0.0\n  * deps: proxy-addr@~1.0.7\n    - deps: ipaddr.js@0.1.9\n  * deps: send@0.12.2\n    - Throw errors early for invalid `extensions` or `index` options\n    - deps: debug@~2.1.3\n\n3.20.1 / 2015-02-28\n===================\n\n  * Fix `req.host` when using \"trust proxy\" hops count\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\n\n3.20.0 / 2015-02-18\n===================\n\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\n  * Generate `ETag`s for all request responses\n    - No longer restricted to only responses for `GET` and `HEAD` requests\n  * Use `content-type` to parse `Content-Type` headers\n  * deps: connect@2.29.0\n    - Use `content-type` to parse `Content-Type` headers\n    - deps: body-parser@~1.12.0\n    - deps: compression@~1.4.1\n    - deps: connect-timeout@~1.6.0\n    - deps: cookie-parser@~1.3.4\n    - deps: cookie-signature@1.0.6\n    - deps: csurf@~1.7.0\n    - deps: errorhandler@~1.3.4\n    - deps: express-session@~1.10.3\n    - deps: http-errors@~1.3.1\n    - deps: response-time@~2.3.0\n    - deps: serve-index@~1.6.2\n    - deps: serve-static@~1.9.1\n    - deps: type-is@~1.6.0\n  * deps: cookie-signature@1.0.6\n  * deps: send@0.12.1\n    - Always read the stat size from the file\n    - Fix mutating passed-in `options`\n    - deps: mime@1.3.4\n\n3.19.2 / 2015-02-01\n===================\n\n  * deps: connect@2.28.3\n    - deps: compression@~1.3.1\n    - deps: csurf@~1.6.6\n    - deps: errorhandler@~1.3.3\n    - deps: express-session@~1.10.2\n    - deps: serve-index@~1.6.1\n    - deps: type-is@~1.5.6\n  * deps: proxy-addr@~1.0.6\n    - deps: ipaddr.js@0.1.8\n\n3.19.1 / 2015-01-20\n===================\n\n  * deps: connect@2.28.2\n    - deps: body-parser@~1.10.2\n    - deps: serve-static@~1.8.1\n  * deps: send@0.11.1\n    - Fix root path disclosure\n\n3.19.0 / 2015-01-09\n===================\n\n  * Fix `OPTIONS` responses to include the `HEAD` method property\n  * Use `readline` for prompt in `express(1)`\n  * deps: commander@2.6.0\n  * deps: connect@2.28.1\n    - deps: body-parser@~1.10.1\n    - deps: compression@~1.3.0\n    - deps: connect-timeout@~1.5.0\n    - deps: csurf@~1.6.4\n    - deps: debug@~2.1.1\n    - deps: errorhandler@~1.3.2\n    - deps: express-session@~1.10.1\n    - deps: finalhandler@0.3.3\n    - deps: method-override@~2.3.1\n    - deps: morgan@~1.5.1\n    - deps: serve-favicon@~2.2.0\n    - deps: serve-index@~1.6.0\n    - deps: serve-static@~1.8.0\n    - deps: type-is@~1.5.5\n  * deps: debug@~2.1.1\n  * deps: methods@~1.1.1\n  * deps: proxy-addr@~1.0.5\n    - deps: ipaddr.js@0.1.6\n  * deps: send@0.11.0\n    - deps: debug@~2.1.1\n    - deps: etag@~1.5.1\n    - deps: ms@0.7.0\n    - deps: on-finished@~2.2.0\n\n3.18.6 / 2014-12-12\n===================\n\n  * Fix exception in `req.fresh`/`req.stale` without response headers\n\n3.18.5 / 2014-12-11\n===================\n\n  * deps: connect@2.27.6\n    - deps: compression@~1.2.2\n    - deps: express-session@~1.9.3\n    - deps: http-errors@~1.2.8\n    - deps: serve-index@~1.5.3\n    - deps: type-is@~1.5.4\n\n3.18.4 / 2014-11-23\n===================\n\n  * deps: connect@2.27.4\n    - deps: body-parser@~1.9.3\n    - deps: compression@~1.2.1\n    - deps: errorhandler@~1.2.3\n    - deps: express-session@~1.9.2\n    - deps: qs@2.3.3\n    - deps: serve-favicon@~2.1.7\n    - deps: serve-static@~1.5.1\n    - deps: type-is@~1.5.3\n  * deps: etag@~1.5.1\n  * deps: proxy-addr@~1.0.4\n    - deps: ipaddr.js@0.1.5\n\n3.18.3 / 2014-11-09\n===================\n\n  * deps: connect@2.27.3\n    - Correctly invoke async callback asynchronously\n    - deps: csurf@~1.6.3\n\n3.18.2 / 2014-10-28\n===================\n\n  * deps: connect@2.27.2\n    - Fix handling of URLs containing `://` in the path\n    - deps: body-parser@~1.9.2\n    - deps: qs@2.3.2\n\n3.18.1 / 2014-10-22\n===================\n\n  * Fix internal `utils.merge` deprecation warnings\n  * deps: connect@2.27.1\n    - deps: body-parser@~1.9.1\n    - deps: express-session@~1.9.1\n    - deps: finalhandler@0.3.2\n    - deps: morgan@~1.4.1\n    - deps: qs@2.3.0\n    - deps: serve-static@~1.7.1\n  * deps: send@0.10.1\n    - deps: on-finished@~2.1.1\n\n3.18.0 / 2014-10-17\n===================\n\n  * Use `content-disposition` module for `res.attachment`/`res.download`\n    - Sends standards-compliant `Content-Disposition` header\n    - Full Unicode support\n  * Use `etag` module to generate `ETag` headers\n  * deps: connect@2.27.0\n    - Use `http-errors` module for creating errors\n    - Use `utils-merge` module for merging objects\n    - deps: body-parser@~1.9.0\n    - deps: compression@~1.2.0\n    - deps: connect-timeout@~1.4.0\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: express-session@~1.9.0\n    - deps: finalhandler@0.3.1\n    - deps: method-override@~2.3.0\n    - deps: morgan@~1.4.0\n    - deps: response-time@~2.2.0\n    - deps: serve-favicon@~2.1.6\n    - deps: serve-index@~1.5.0\n    - deps: serve-static@~1.7.0\n  * deps: debug@~2.1.0\n    - Implement `DEBUG_FD` env variable support\n  * deps: depd@~1.0.0\n  * deps: send@0.10.0\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: etag@~1.5.0\n\n3.17.8 / 2014-10-15\n===================\n\n  * deps: connect@2.26.6\n    - deps: compression@~1.1.2\n    - deps: csurf@~1.6.2\n    - deps: errorhandler@~1.2.2\n\n3.17.7 / 2014-10-08\n===================\n\n  * deps: connect@2.26.5\n    - Fix accepting non-object arguments to `logger`\n    - deps: serve-static@~1.6.4\n\n3.17.6 / 2014-10-02\n===================\n\n  * deps: connect@2.26.4\n    - deps: morgan@~1.3.2\n    - deps: type-is@~1.5.2\n\n3.17.5 / 2014-09-24\n===================\n\n  * deps: connect@2.26.3\n    - deps: body-parser@~1.8.4\n    - deps: serve-favicon@~2.1.5\n    - deps: serve-static@~1.6.3\n  * deps: proxy-addr@~1.0.3\n    - Use `forwarded` npm module\n  * deps: send@0.9.3\n    - deps: etag@~1.4.0\n\n3.17.4 / 2014-09-19\n===================\n\n  * deps: connect@2.26.2\n    - deps: body-parser@~1.8.3\n    - deps: qs@2.2.4\n\n3.17.3 / 2014-09-18\n===================\n\n  * deps: proxy-addr@~1.0.2\n    - Fix a global leak when multiple subnets are trusted\n    - deps: ipaddr.js@0.1.3\n\n3.17.2 / 2014-09-15\n===================\n\n  * Use `crc` instead of `buffer-crc32` for speed\n  * deps: connect@2.26.1\n    - deps: body-parser@~1.8.2\n    - deps: depd@0.4.5\n    - deps: express-session@~1.8.2\n    - deps: morgan@~1.3.1\n    - deps: serve-favicon@~2.1.3\n    - deps: serve-static@~1.6.2\n  * deps: depd@0.4.5\n  * deps: send@0.9.2\n    - deps: depd@0.4.5\n    - deps: etag@~1.3.1\n    - deps: range-parser@~1.0.2\n\n3.17.1 / 2014-09-08\n===================\n\n  * Fix error in `req.subdomains` on empty host\n\n3.17.0 / 2014-09-08\n===================\n\n  * Support `X-Forwarded-Host` in `req.subdomains`\n  * Support IP address host in `req.subdomains`\n  * deps: connect@2.26.0\n    - deps: body-parser@~1.8.1\n    - deps: compression@~1.1.0\n    - deps: connect-timeout@~1.3.0\n    - deps: cookie-parser@~1.3.3\n    - deps: cookie-signature@1.0.5\n    - deps: csurf@~1.6.1\n    - deps: debug@~2.0.0\n    - deps: errorhandler@~1.2.0\n    - deps: express-session@~1.8.1\n    - deps: finalhandler@0.2.0\n    - deps: fresh@0.2.4\n    - deps: media-typer@0.3.0\n    - deps: method-override@~2.2.0\n    - deps: morgan@~1.3.0\n    - deps: qs@2.2.3\n    - deps: serve-favicon@~2.1.3\n    - deps: serve-index@~1.2.1\n    - deps: serve-static@~1.6.1\n    - deps: type-is@~1.5.1\n    - deps: vhost@~3.0.0\n  * deps: cookie-signature@1.0.5\n  * deps: debug@~2.0.0\n  * deps: fresh@0.2.4\n  * deps: media-typer@0.3.0\n    - Throw error when parameter format invalid on parse\n  * deps: range-parser@~1.0.2\n  * deps: send@0.9.1\n    - Add `lastModified` option\n    - Use `etag` to generate `ETag` header\n    - deps: debug@~2.0.0\n    - deps: fresh@0.2.4\n  * deps: vary@~1.0.0\n    - Accept valid `Vary` header string as `field`\n\n3.16.10 / 2014-09-04\n====================\n\n  * deps: connect@2.25.10\n    - deps: serve-static@~1.5.4\n  * deps: send@0.8.5\n    - Fix a path traversal issue when using `root`\n    - Fix malicious path detection for empty string path\n\n3.16.9 / 2014-08-29\n===================\n\n  * deps: connect@2.25.9\n    - deps: body-parser@~1.6.7\n    - deps: qs@2.2.2\n\n3.16.8 / 2014-08-27\n===================\n\n  * deps: connect@2.25.8\n    - deps: body-parser@~1.6.6\n    - deps: csurf@~1.4.1\n    - deps: qs@2.2.0\n\n3.16.7 / 2014-08-18\n===================\n\n  * deps: connect@2.25.7\n    - deps: body-parser@~1.6.5\n    - deps: express-session@~1.7.6\n    - deps: morgan@~1.2.3\n    - deps: serve-static@~1.5.3\n  * deps: send@0.8.3\n    - deps: destroy@1.0.3\n    - deps: on-finished@2.1.0\n\n3.16.6 / 2014-08-14\n===================\n\n  * deps: connect@2.25.6\n    - deps: body-parser@~1.6.4\n    - deps: qs@1.2.2\n    - deps: serve-static@~1.5.2\n  * deps: send@0.8.2\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\n\n3.16.5 / 2014-08-11\n===================\n\n  * deps: connect@2.25.5\n    - Fix backwards compatibility in `logger`\n\n3.16.4 / 2014-08-10\n===================\n\n  * Fix original URL parsing in `res.location`\n  * deps: connect@2.25.4\n    - Fix `query` middleware breaking with argument\n    - deps: body-parser@~1.6.3\n    - deps: compression@~1.0.11\n    - deps: connect-timeout@~1.2.2\n    - deps: express-session@~1.7.5\n    - deps: method-override@~2.1.3\n    - deps: on-headers@~1.0.0\n    - deps: parseurl@~1.3.0\n    - deps: qs@1.2.1\n    - deps: response-time@~2.0.1\n    - deps: serve-index@~1.1.6\n    - deps: serve-static@~1.5.1\n  * deps: parseurl@~1.3.0\n\n3.16.3 / 2014-08-07\n===================\n\n  * deps: connect@2.25.3\n    - deps: multiparty@3.3.2\n\n3.16.2 / 2014-08-07\n===================\n\n  * deps: connect@2.25.2\n    - deps: body-parser@~1.6.2\n    - deps: qs@1.2.0\n\n3.16.1 / 2014-08-06\n===================\n\n  * deps: connect@2.25.1\n    - deps: body-parser@~1.6.1\n    - deps: qs@1.1.0\n\n3.16.0 / 2014-08-05\n===================\n\n  * deps: connect@2.25.0\n    - deps: body-parser@~1.6.0\n    - deps: compression@~1.0.10\n    - deps: csurf@~1.4.0\n    - deps: express-session@~1.7.4\n    - deps: qs@1.0.2\n    - deps: serve-static@~1.5.0\n  * deps: send@0.8.1\n    - Add `extensions` option\n\n3.15.3 / 2014-08-04\n===================\n\n  * fix `res.sendfile` regression for serving directory index files\n  * deps: connect@2.24.3\n    - deps: serve-index@~1.1.5\n    - deps: serve-static@~1.4.4\n  * deps: send@0.7.4\n    - Fix incorrect 403 on Windows and Node.js 0.11\n    - Fix serving index files without root dir\n\n3.15.2 / 2014-07-27\n===================\n\n  * deps: connect@2.24.2\n    - deps: body-parser@~1.5.2\n    - deps: depd@0.4.4\n    - deps: express-session@~1.7.2\n    - deps: morgan@~1.2.2\n    - deps: serve-static@~1.4.2\n  * deps: depd@0.4.4\n    - Work-around v8 generating empty stack traces\n  * deps: send@0.7.2\n    - deps: depd@0.4.4\n\n3.15.1 / 2014-07-26\n===================\n\n  * deps: connect@2.24.1\n    - deps: body-parser@~1.5.1\n    - deps: depd@0.4.3\n    - deps: express-session@~1.7.1\n    - deps: morgan@~1.2.1\n    - deps: serve-index@~1.1.4\n    - deps: serve-static@~1.4.1\n  * deps: depd@0.4.3\n    - Fix exception when global `Error.stackTraceLimit` is too low\n  * deps: send@0.7.1\n    - deps: depd@0.4.3\n\n3.15.0 / 2014-07-22\n===================\n\n  * Fix `req.protocol` for proxy-direct connections\n  * Pass options from `res.sendfile` to `send`\n  * deps: connect@2.24.0\n    - deps: body-parser@~1.5.0\n    - deps: compression@~1.0.9\n    - deps: connect-timeout@~1.2.1\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n    - deps: express-session@~1.7.0\n    - deps: finalhandler@0.1.0\n    - deps: method-override@~2.1.2\n    - deps: morgan@~1.2.0\n    - deps: multiparty@3.3.1\n    - deps: parseurl@~1.2.0\n    - deps: serve-static@~1.4.0\n  * deps: debug@1.0.4\n  * deps: depd@0.4.2\n    - Add `TRACE_DEPRECATION` environment variable\n    - Remove non-standard grey color from color output\n    - Support `--no-deprecation` argument\n    - Support `--trace-deprecation` argument\n  * deps: parseurl@~1.2.0\n    - Cache URLs based on original value\n    - Remove no-longer-needed URL mis-parse work-around\n    - Simplify the \"fast-path\" `RegExp`\n  * deps: send@0.7.0\n    - Add `dotfiles` option\n    - Cap `maxAge` value to 1 year\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n\n3.14.0 / 2014-07-11\n===================\n\n * add explicit \"Rosetta Flash JSONP abuse\" protection\n   - previous versions are not vulnerable; this is just explicit protection\n * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\n * fix `res.send(status, num)` to send `num` as json (not error)\n * remove unnecessary escaping when `res.jsonp` returns JSON response\n * deps: basic-auth@1.0.0\n   - support empty password\n   - support empty username\n * deps: connect@2.23.0\n   - deps: debug@1.0.3\n   - deps: express-session@~1.6.4\n   - deps: method-override@~2.1.0\n   - deps: parseurl@~1.1.3\n   - deps: serve-static@~1.3.1\n  * deps: debug@1.0.3\n    - Add support for multiple wildcards in namespaces\n  * deps: methods@1.1.0\n    - add `CONNECT`\n  * deps: parseurl@~1.1.3\n    - faster parsing of href-only URLs\n\n3.13.0 / 2014-07-03\n===================\n\n * add deprecation message to `app.configure`\n * add deprecation message to `req.auth`\n * use `basic-auth` to parse `Authorization` header\n * deps: connect@2.22.0\n   - deps: csurf@~1.3.0\n   - deps: express-session@~1.6.1\n   - deps: multiparty@3.3.0\n   - deps: serve-static@~1.3.0\n * deps: send@0.5.0\n   - Accept string for `maxage` (converted by `ms`)\n   - Include link in default redirect response\n\n3.12.1 / 2014-06-26\n===================\n\n * deps: connect@2.21.1\n   - deps: cookie-parser@1.3.2\n   - deps: cookie-signature@1.0.4\n   - deps: express-session@~1.5.2\n   - deps: type-is@~1.3.2\n * deps: cookie-signature@1.0.4\n   - fix for timing attacks\n\n3.12.0 / 2014-06-21\n===================\n\n * use `media-typer` to alter content-type charset\n * deps: connect@2.21.0\n   - deprecate `connect(middleware)` -- use `app.use(middleware)` instead\n   - deprecate `connect.createServer()` -- use `connect()` instead\n   - fix `res.setHeader()` patch to work with get -> append -> set pattern\n   - deps: compression@~1.0.8\n   - deps: errorhandler@~1.1.1\n   - deps: express-session@~1.5.0\n   - deps: serve-index@~1.1.3\n\n3.11.0 / 2014-06-19\n===================\n\n * deprecate things with `depd` module\n * deps: buffer-crc32@0.2.3\n * deps: connect@2.20.2\n   - deprecate `verify` option to `json` -- use `body-parser` npm module instead\n   - deprecate `verify` option to `urlencoded` -- use `body-parser` npm module instead\n   - deprecate things with `depd` module\n   - use `finalhandler` for final response handling\n   - use `media-typer` to parse `content-type` for charset\n   - deps: body-parser@1.4.3\n   - deps: connect-timeout@1.1.1\n   - deps: cookie-parser@1.3.1\n   - deps: csurf@1.2.2\n   - deps: errorhandler@1.1.0\n   - deps: express-session@1.4.0\n   - deps: multiparty@3.2.9\n   - deps: serve-index@1.1.2\n   - deps: type-is@1.3.1\n   - deps: vhost@2.0.0\n\n3.10.5 / 2014-06-11\n===================\n\n * deps: connect@2.19.6\n   - deps: body-parser@1.3.1\n   - deps: compression@1.0.7\n   - deps: debug@1.0.2\n   - deps: serve-index@1.1.1\n   - deps: serve-static@1.2.3\n * deps: debug@1.0.2\n * deps: send@0.4.3\n   - Do not throw uncatchable error on file open race condition\n   - Use `escape-html` for HTML escaping\n   - deps: debug@1.0.2\n   - deps: finished@1.2.2\n   - deps: fresh@0.2.2\n\n3.10.4 / 2014-06-09\n===================\n\n * deps: connect@2.19.5\n   - fix \"event emitter leak\" warnings\n   - deps: csurf@1.2.1\n   - deps: debug@1.0.1\n   - deps: serve-static@1.2.2\n   - deps: type-is@1.2.1\n * deps: debug@1.0.1\n * deps: send@0.4.2\n   - fix \"event emitter leak\" warnings\n   - deps: finished@1.2.1\n   - deps: debug@1.0.1\n\n3.10.3 / 2014-06-05\n===================\n\n * use `vary` module for `res.vary`\n * deps: connect@2.19.4\n   - deps: errorhandler@1.0.2\n   - deps: method-override@2.0.2\n   - deps: serve-favicon@2.0.1\n * deps: debug@1.0.0\n\n3.10.2 / 2014-06-03\n===================\n\n * deps: connect@2.19.3\n   - deps: compression@1.0.6\n\n3.10.1 / 2014-06-03\n===================\n\n * deps: connect@2.19.2\n   - deps: compression@1.0.4\n * deps: proxy-addr@1.0.1\n\n3.10.0 / 2014-06-02\n===================\n\n * deps: connect@2.19.1\n   - deprecate `methodOverride()` -- use `method-override` npm module instead\n   - deps: body-parser@1.3.0\n   - deps: method-override@2.0.1\n   - deps: multiparty@3.2.8\n   - deps: response-time@2.0.0\n   - deps: serve-static@1.2.1\n * deps: methods@1.0.1\n * deps: send@0.4.1\n   - Send `max-age` in `Cache-Control` in correct format\n\n3.9.0 / 2014-05-30\n==================\n\n * custom etag control with `app.set('etag', val)`\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\n   - `app.set('etag', 'weak')` weak tag\n   - `app.set('etag', 'strong')` strong etag\n   - `app.set('etag', false)` turn off\n   - `app.set('etag', true)` standard etag\n * Include ETag in HEAD requests\n * mark `res.send` ETag as weak and reduce collisions\n * update connect to 2.18.0\n   - deps: compression@1.0.3\n   - deps: serve-index@1.1.0\n   - deps: serve-static@1.2.0\n * update send to 0.4.0\n   - Calculate ETag with md5 for reduced collisions\n   - Ignore stream errors after request ends\n   - deps: debug@0.8.1\n\n3.8.1 / 2014-05-27\n==================\n\n * update connect to 2.17.3\n   - deps: body-parser@1.2.2\n   - deps: express-session@1.2.1\n   - deps: method-override@1.0.2\n\n3.8.0 / 2014-05-21\n==================\n\n * keep previous `Content-Type` for `res.jsonp`\n * set proper `charset` in `Content-Type` for `res.send`\n * update connect to 2.17.1\n   - fix `res.charset` appending charset when `content-type` has one\n   - deps: express-session@1.2.0\n   - deps: morgan@1.1.1\n   - deps: serve-index@1.0.3\n\n3.7.0 / 2014-05-18\n==================\n\n * proper proxy trust with `app.set('trust proxy', trust)`\n   - `app.set('trust proxy', 1)` trust first hop\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\n   - `app.set('trust proxy', false)` turn off\n   - `app.set('trust proxy', true)` trust everything\n * update connect to 2.16.2\n   - deprecate `res.headerSent` -- use `res.headersSent`\n   - deprecate `res.on(\"header\")` -- use on-headers module instead\n   - fix edge-case in `res.appendHeader` that would append in wrong order\n   - json: use body-parser\n   - urlencoded: use body-parser\n   - dep: bytes@1.0.0\n   - dep: cookie-parser@1.1.0\n   - dep: csurf@1.2.0\n   - dep: express-session@1.1.0\n   - dep: method-override@1.0.1\n\n3.6.0 / 2014-05-09\n==================\n\n * deprecate `app.del()` -- use `app.delete()` instead\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\n * support PURGE method\n   - add `app.purge`\n   - add `router.purge`\n   - include PURGE in `app.all`\n * update connect to 2.15.0\n   * Add `res.appendHeader`\n   * Call error stack even when response has been sent\n   * Patch `res.headerSent` to return Boolean\n   * Patch `res.headersSent` for node.js 0.8\n   * Prevent default 404 handler after response sent\n   * dep: compression@1.0.2\n   * dep: connect-timeout@1.1.0\n   * dep: debug@^0.8.0\n   * dep: errorhandler@1.0.1\n   * dep: express-session@1.0.4\n   * dep: morgan@1.0.1\n   * dep: serve-favicon@2.0.0\n   * dep: serve-index@1.0.2\n * update debug to 0.8.0\n   * add `enable()` method\n   * change from stderr to stdout\n * update methods to 1.0.0\n   - add PURGE\n * update mkdirp to 0.5.0\n\n3.5.3 / 2014-05-08\n==================\n\n * fix `req.host` for IPv6 literals\n * fix `res.jsonp` error if callback param is object\n\n3.5.2 / 2014-04-24\n==================\n\n * update connect to 2.14.5\n * update cookie to 0.1.2\n * update mkdirp to 0.4.0\n * update send to 0.3.0\n\n3.5.1 / 2014-03-25\n==================\n\n * pin less-middleware in generated app\n\n3.5.0 / 2014-03-06\n==================\n\n * bump deps\n\n3.4.8 / 2014-01-13\n==================\n\n * prevent incorrect automatic OPTIONS responses #1868 @dpatti\n * update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi\n * throw 400 in case of malformed paths @rlidwka\n\n3.4.7 / 2013-12-10\n==================\n\n * update connect\n\n3.4.6 / 2013-12-01\n==================\n\n * update connect (raw-body)\n\n3.4.5 / 2013-11-27\n==================\n\n * update connect\n * res.location: remove leading ./ #1802 @kapouer\n * res.redirect: fix `res.redirect('toString') #1829 @michaelficarra\n * res.send: always send ETag when content-length > 0\n * router: add Router.all() method\n\n3.4.4 / 2013-10-29\n==================\n\n * update connect\n * update supertest\n * update methods\n * express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04\n\n3.4.3 / 2013-10-23\n==================\n\n * update connect\n\n3.4.2 / 2013-10-18\n==================\n\n * update connect\n * downgrade commander\n\n3.4.1 / 2013-10-15\n==================\n\n * update connect\n * update commander\n * jsonp: check if callback is a function\n * router: wrap encodeURIComponent in a try/catch #1735 (@lxe)\n * res.format: now includes charset @1747 (@sorribas)\n * res.links: allow multiple calls @1746 (@sorribas)\n\n3.4.0 / 2013-09-07\n==================\n\n * add res.vary(). Closes #1682\n * update connect\n\n3.3.8 / 2013-09-02\n==================\n\n * update connect\n\n3.3.7 / 2013-08-28\n==================\n\n * update connect\n\n3.3.6 / 2013-08-27\n==================\n\n * Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients)\n * add: req.accepts take an argument list\n\n3.3.4 / 2013-07-08\n==================\n\n * update send and connect\n\n3.3.3 / 2013-07-04\n==================\n\n * update connect\n\n3.3.2 / 2013-07-03\n==================\n\n * update connect\n * update send\n * remove .version export\n\n3.3.1 / 2013-06-27\n==================\n\n * update connect\n\n3.3.0 / 2013-06-26\n==================\n\n * update connect\n * add support for multiple X-Forwarded-Proto values. Closes #1646\n * change: remove charset from json responses. Closes #1631\n * change: return actual booleans from req.accept* functions\n * fix jsonp callback array throw\n\n3.2.6 / 2013-06-02\n==================\n\n * update connect\n\n3.2.5 / 2013-05-21\n==================\n\n * update connect\n * update node-cookie\n * add: throw a meaningful error when there is no default engine\n * change generation of ETags with res.send() to GET requests only. Closes #1619\n\n3.2.4 / 2013-05-09\n==================\n\n  * fix `req.subdomains` when no Host is present\n  * fix `req.host` when no Host is present, return undefined\n\n3.2.3 / 2013-05-07\n==================\n\n  * update connect / qs\n\n3.2.2 / 2013-05-03\n==================\n\n  * update qs\n\n3.2.1 / 2013-04-29\n==================\n\n  * add app.VERB() paths array deprecation warning\n  * update connect\n  * update qs and remove all ~ semver crap\n  * fix: accept number as value of Signed Cookie\n\n3.2.0 / 2013-04-15\n==================\n\n  * add \"view\" constructor setting to override view behaviour\n  * add req.acceptsEncoding(name)\n  * add req.acceptedEncodings\n  * revert cookie signature change causing session race conditions\n  * fix sorting of Accept values of the same quality\n\n3.1.2 / 2013-04-12\n==================\n\n  * add support for custom Accept parameters\n  * update cookie-signature\n\n3.1.1 / 2013-04-01\n==================\n\n  * add X-Forwarded-Host support to `req.host`\n  * fix relative redirects\n  * update mkdirp\n  * update buffer-crc32\n  * remove legacy app.configure() method from app template.\n\n3.1.0 / 2013-01-25\n==================\n\n  * add support for leading \".\" in \"view engine\" setting\n  * add array support to `res.set()`\n  * add node 0.8.x to travis.yml\n  * add \"subdomain offset\" setting for tweaking `req.subdomains`\n  * add `res.location(url)` implementing `res.redirect()`-like setting of Location\n  * use app.get() for x-powered-by setting for inheritance\n  * fix colons in passwords for `req.auth`\n\n3.0.6 / 2013-01-04\n==================\n\n  * add http verb methods to Router\n  * update connect\n  * fix mangling of the `res.cookie()` options object\n  * fix jsonp whitespace escape. Closes #1132\n\n3.0.5 / 2012-12-19\n==================\n\n  * add throwing when a non-function is passed to a route\n  * fix: explicitly remove Transfer-Encoding header from 204 and 304 responses\n  * revert \"add 'etag' option\"\n\n3.0.4 / 2012-12-05\n==================\n\n  * add 'etag' option to disable `res.send()` Etags\n  * add escaping of urls in text/plain in `res.redirect()`\n    for old browsers interpreting as html\n  * change crc32 module for a more liberal license\n  * update connect\n\n3.0.3 / 2012-11-13\n==================\n\n  * update connect\n  * update cookie module\n  * fix cookie max-age\n\n3.0.2 / 2012-11-08\n==================\n\n  * add OPTIONS to cors example. Closes #1398\n  * fix route chaining regression. Closes #1397\n\n3.0.1 / 2012-11-01\n==================\n\n  * update connect\n\n3.0.0 / 2012-10-23\n==================\n\n  * add `make clean`\n  * add \"Basic\" check to req.auth\n  * add `req.auth` test coverage\n  * add cb && cb(payload) to `res.jsonp()`. Closes #1374\n  * add backwards compat for `res.redirect()` status. Closes #1336\n  * add support for `res.json()` to retain previously defined Content-Types. Closes #1349\n  * update connect\n  * change `res.redirect()` to utilize a pathname-relative Location again. Closes #1382\n  * remove non-primitive string support for `res.send()`\n  * fix view-locals example. Closes #1370\n  * fix route-separation example\n\n3.0.0rc5 / 2012-09-18\n==================\n\n  * update connect\n  * add redis search example\n  * add static-files example\n  * add \"x-powered-by\" setting (`app.disable('x-powered-by')`)\n  * add \"application/octet-stream\" redirect Accept test case. Closes #1317\n\n3.0.0rc4 / 2012-08-30\n==================\n\n  * add `res.jsonp()`. Closes #1307\n  * add \"verbose errors\" option to error-pages example\n  * add another route example to express(1) so people are not so confused\n  * add redis online user activity tracking example\n  * update connect dep\n  * fix etag quoting. Closes #1310\n  * fix error-pages 404 status\n  * fix jsonp callback char restrictions\n  * remove old OPTIONS default response\n\n3.0.0rc3 / 2012-08-13\n==================\n\n  * update connect dep\n  * fix signed cookies to work with `connect.cookieParser()` (\"s:\" prefix was missing) [tnydwrds]\n  * fix `res.render()` clobbering of \"locals\"\n\n3.0.0rc2 / 2012-08-03\n==================\n\n  * add CORS example\n  * update connect dep\n  * deprecate `.createServer()` & remove old stale examples\n  * fix: escape `res.redirect()` link\n  * fix vhost example\n\n3.0.0rc1 / 2012-07-24\n==================\n\n  * add more examples to view-locals\n  * add scheme-relative redirects (`res.redirect(\"//foo.com\")`) support\n  * update cookie dep\n  * update connect dep\n  * update send dep\n  * fix `express(1)` -h flag, use -H for hogan. Closes #1245\n  * fix `res.sendfile()` socket error handling regression\n\n3.0.0beta7 / 2012-07-16\n==================\n\n  * update connect dep for `send()` root normalization regression\n\n3.0.0beta6 / 2012-07-13\n==================\n\n  * add `err.view` property for view errors. Closes #1226\n  * add \"jsonp callback name\" setting\n  * add support for \"/foo/:bar*\" non-greedy matches\n  * change `res.sendfile()` to use `send()` module\n  * change `res.send` to use \"response-send\" module\n  * remove `app.locals.use` and `res.locals.use`, use regular middleware\n\n3.0.0beta5 / 2012-07-03\n==================\n\n  * add \"make check\" support\n  * add route-map example\n  * add `res.json(obj, status)` support back for BC\n  * add \"methods\" dep, remove internal methods module\n  * update connect dep\n  * update auth example to utilize cores pbkdf2\n  * updated tests to use \"supertest\"\n\n3.0.0beta4 / 2012-06-25\n==================\n\n  * Added `req.auth`\n  * Added `req.range(size)`\n  * Added `res.links(obj)`\n  * Added `res.send(body, status)` support back for backwards compat\n  * Added `.default()` support to `res.format()`\n  * Added 2xx / 304 check to `req.fresh`\n  * Revert \"Added + support to the router\"\n  * Fixed `res.send()` freshness check, respect res.statusCode\n\n3.0.0beta3 / 2012-06-15\n==================\n\n  * Added hogan `--hjs` to express(1) [nullfirm]\n  * Added another example to content-negotiation\n  * Added `fresh` dep\n  * Changed: `res.send()` always checks freshness\n  * Fixed: expose connects mime module. Closes #1165\n\n3.0.0beta2 / 2012-06-06\n==================\n\n  * Added `+` support to the router\n  * Added `req.host`\n  * Changed `req.param()` to check route first\n  * Update connect dep\n\n3.0.0beta1 / 2012-06-01\n==================\n\n  * Added `res.format()` callback to override default 406 behaviour\n  * Fixed `res.redirect()` 406. Closes #1154\n\n3.0.0alpha5 / 2012-05-30\n==================\n\n  * Added `req.ip`\n  * Added `{ signed: true }` option to `res.cookie()`\n  * Removed `res.signedCookie()`\n  * Changed: dont reverse `req.ips`\n  * Fixed \"trust proxy\" setting check for `req.ips`\n\n3.0.0alpha4 / 2012-05-09\n==================\n\n  * Added: allow `[]` in jsonp callback. Closes #1128\n  * Added `PORT` env var support in generated template. Closes #1118 [benatkin]\n  * Updated: connect 2.2.2\n\n3.0.0alpha3 / 2012-05-04\n==================\n\n  * Added public `app.routes`. Closes #887\n  * Added _view-locals_ example\n  * Added _mvc_ example\n  * Added `res.locals.use()`. Closes #1120\n  * Added conditional-GET support to `res.send()`\n  * Added: coerce `res.set()` values to strings\n  * Changed: moved `static()` in generated apps below router\n  * Changed: `res.send()` only set ETag when not previously set\n  * Changed connect 2.2.1 dep\n  * Changed: `make test` now runs unit / acceptance tests\n  * Fixed req/res proto inheritance\n\n3.0.0alpha2 / 2012-04-26\n==================\n\n  * Added `make benchmark` back\n  * Added `res.send()` support for `String` objects\n  * Added client-side data exposing example\n  * Added `res.header()` and `req.header()` aliases for BC\n  * Added `express.createServer()` for BC\n  * Perf: memoize parsed urls\n  * Perf: connect 2.2.0 dep\n  * Changed: make `expressInit()` middleware self-aware\n  * Fixed: use app.get() for all core settings\n  * Fixed redis session example\n  * Fixed session example. Closes #1105\n  * Fixed generated express dep. Closes #1078\n\n3.0.0alpha1 / 2012-04-15\n==================\n\n  * Added `app.locals.use(callback)`\n  * Added `app.locals` object\n  * Added `app.locals(obj)`\n  * Added `res.locals` object\n  * Added `res.locals(obj)`\n  * Added `res.format()` for content-negotiation\n  * Added `app.engine()`\n  * Added `res.cookie()` JSON cookie support\n  * Added \"trust proxy\" setting\n  * Added `req.subdomains`\n  * Added `req.protocol`\n  * Added `req.secure`\n  * Added `req.path`\n  * Added `req.ips`\n  * Added `req.fresh`\n  * Added `req.stale`\n  * Added comma-delimited / array support for `req.accepts()`\n  * Added debug instrumentation\n  * Added `res.set(obj)`\n  * Added `res.set(field, value)`\n  * Added `res.get(field)`\n  * Added `app.get(setting)`. Closes #842\n  * Added `req.acceptsLanguage()`\n  * Added `req.acceptsCharset()`\n  * Added `req.accepted`\n  * Added `req.acceptedLanguages`\n  * Added `req.acceptedCharsets`\n  * Added \"json replacer\" setting\n  * Added \"json spaces\" setting\n  * Added X-Forwarded-Proto support to `res.redirect()`. Closes #92\n  * Added `--less` support to express(1)\n  * Added `express.response` prototype\n  * Added `express.request` prototype\n  * Added `express.application` prototype\n  * Added `app.path()`\n  * Added `app.render()`\n  * Added `res.type()` to replace `res.contentType()`\n  * Changed: `res.redirect()` to add relative support\n  * Changed: enable \"jsonp callback\" by default\n  * Changed: renamed \"case sensitive routes\" to \"case sensitive routing\"\n  * Rewrite of all tests with mocha\n  * Removed \"root\" setting\n  * Removed `res.redirect('home')` support\n  * Removed `req.notify()`\n  * Removed `app.register()`\n  * Removed `app.redirect()`\n  * Removed `app.is()`\n  * Removed `app.helpers()`\n  * Removed `app.dynamicHelpers()`\n  * Fixed `res.sendfile()` with non-GET. Closes #723\n  * Fixed express(1) public dir for windows. Closes #866\n\n2.5.9/ 2012-04-02\n==================\n\n  * Added support for PURGE request method [pbuyle]\n  * Fixed `express(1)` generated app `app.address()` before `listening` [mmalecki]\n\n2.5.8 / 2012-02-08\n==================\n\n  * Update mkdirp dep. Closes #991\n\n2.5.7 / 2012-02-06\n==================\n\n  * Fixed `app.all` duplicate DELETE requests [mscdex]\n\n2.5.6 / 2012-01-13\n==================\n\n  * Updated hamljs dev dep. Closes #953\n\n2.5.5 / 2012-01-08\n==================\n\n  * Fixed: set `filename` on cached templates [matthewleon]\n\n2.5.4 / 2012-01-02\n==================\n\n  * Fixed `express(1)` eol on 0.4.x. Closes #947\n\n2.5.3 / 2011-12-30\n==================\n\n  * Fixed `req.is()` when a charset is present\n\n2.5.2 / 2011-12-10\n==================\n\n  * Fixed: express(1) LF -> CRLF for windows\n\n2.5.1 / 2011-11-17\n==================\n\n  * Changed: updated connect to 1.8.x\n  * Removed sass.js support from express(1)\n\n2.5.0 / 2011-10-24\n==================\n\n  * Added ./routes dir for generated app by default\n  * Added npm install reminder to express(1) app gen\n  * Added 0.5.x support\n  * Removed `make test-cov` since it wont work with node 0.5.x\n  * Fixed express(1) public dir for windows. Closes #866\n\n2.4.7 / 2011-10-05\n==================\n\n  * Added mkdirp to express(1). Closes #795\n  * Added simple _json-config_ example\n  * Added  shorthand for the parsed request's pathname via `req.path`\n  * Changed connect dep to 1.7.x to fix npm issue...\n  * Fixed `res.redirect()` __HEAD__ support. [reported by xerox]\n  * Fixed `req.flash()`, only escape args\n  * Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]\n\n2.4.6 / 2011-08-22\n==================\n\n  * Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]\n\n2.4.5 / 2011-08-19\n==================\n\n  * Added support for routes to handle errors. Closes #809\n  * Added `app.routes.all()`. Closes #803\n  * Added \"basepath\" setting to work in conjunction with reverse proxies etc.\n  * Refactored `Route` to use a single array of callbacks\n  * Added support for multiple callbacks for `app.param()`. Closes #801\nCloses #805\n  * Changed: removed .call(self) for route callbacks\n  * Dependency: `qs >= 0.3.1`\n  * Fixed `res.redirect()` on windows due to `join()` usage. Closes #808\n\n2.4.4 / 2011-08-05\n==================\n\n  * Fixed `res.header()` intention of a set, even when `undefined`\n  * Fixed `*`, value no longer required\n  * Fixed `res.send(204)` support. Closes #771\n\n2.4.3 / 2011-07-14\n==================\n\n  * Added docs for `status` option special-case. Closes #739\n  * Fixed `options.filename`, exposing the view path to template engines\n\n2.4.2. / 2011-07-06\n==================\n\n  * Revert \"removed jsonp stripping\" for XSS\n\n2.4.1 / 2011-07-06\n==================\n\n  * Added `res.json()` JSONP support. Closes #737\n  * Added _extending-templates_ example. Closes #730\n  * Added \"strict routing\" setting for trailing slashes\n  * Added support for multiple envs in `app.configure()` calls. Closes #735\n  * Changed: `res.send()` using `res.json()`\n  * Changed: when cookie `path === null` don't default it\n  * Changed; default cookie path to \"home\" setting. Closes #731\n  * Removed _pids/logs_ creation from express(1)\n\n2.4.0 / 2011-06-28\n==================\n\n  * Added chainable `res.status(code)`\n  * Added `res.json()`, an explicit version of `res.send(obj)`\n  * Added simple web-service example\n\n2.3.12 / 2011-06-22\n==================\n\n  * \\#express is now on freenode! come join!\n  * Added `req.get(field, param)`\n  * Added links to Japanese documentation, thanks @hideyukisaito!\n  * Added; the `express(1)` generated app outputs the env\n  * Added `content-negotiation` example\n  * Dependency: connect >= 1.5.1 < 2.0.0\n  * Fixed view layout bug. Closes #720\n  * Fixed; ignore body on 304. Closes #701\n\n2.3.11 / 2011-06-04\n==================\n\n  * Added `npm test`\n  * Removed generation of dummy test file from `express(1)`\n  * Fixed; `express(1)` adds express as a dep\n  * Fixed; prune on `prepublish`\n\n2.3.10 / 2011-05-27\n==================\n\n  * Added `req.route`, exposing the current route\n  * Added _package.json_ generation support to `express(1)`\n  * Fixed call to `app.param()` function for optional params. Closes #682\n\n2.3.9 / 2011-05-25\n==================\n\n  * Fixed bug-ish with `../' in `res.partial()` calls\n\n2.3.8 / 2011-05-24\n==================\n\n  * Fixed `app.options()`\n\n2.3.7 / 2011-05-23\n==================\n\n  * Added route `Collection`, ex: `app.get('/user/:id').remove();`\n  * Added support for `app.param(fn)` to define param logic\n  * Removed `app.param()` support for callback with return value\n  * Removed module.parent check from express(1) generated app. Closes #670\n  * Refactored router. Closes #639\n\n2.3.6 / 2011-05-20\n==================\n\n  * Changed; using devDependencies instead of git submodules\n  * Fixed redis session example\n  * Fixed markdown example\n  * Fixed view caching, should not be enabled in development\n\n2.3.5 / 2011-05-20\n==================\n\n  * Added export `.view` as alias for `.View`\n\n2.3.4 / 2011-05-08\n==================\n\n  * Added `./examples/say`\n  * Fixed `res.sendfile()` bug preventing the transfer of files with spaces\n\n2.3.3 / 2011-05-03\n==================\n\n  * Added \"case sensitive routes\" option.\n  * Changed; split methods supported per rfc [slaskis]\n  * Fixed route-specific middleware when using the same callback function several times\n\n2.3.2 / 2011-04-27\n==================\n\n  * Fixed view hints\n\n2.3.1 / 2011-04-26\n==================\n\n  * Added `app.match()` as `app.match.all()`\n  * Added `app.lookup()` as `app.lookup.all()`\n  * Added `app.remove()` for `app.remove.all()`\n  * Added `app.remove.VERB()`\n  * Fixed template caching collision issue. Closes #644\n  * Moved router over from connect and started refactor\n\n2.3.0 / 2011-04-25\n==================\n\n  * Added options support to `res.clearCookie()`\n  * Added `res.helpers()` as alias of `res.locals()`\n  * Added; json defaults to UTF-8 with `res.send()`. Closes #632. [Daniel   * Dependency `connect >= 1.4.0`\n  * Changed; auto set Content-Type in res.attachement [Aaron Heckmann]\n  * Renamed \"cache views\" to \"view cache\". Closes #628\n  * Fixed caching of views when using several apps. Closes #637\n  * Fixed gotcha invoking `app.param()` callbacks once per route middleware.\nCloses #638\n  * Fixed partial lookup precedence. Closes #631\nShaw]\n\n2.2.2 / 2011-04-12\n==================\n\n  * Added second callback support for `res.download()` connection errors\n  * Fixed `filename` option passing to template engine\n\n2.2.1 / 2011-04-04\n==================\n\n  * Added `layout(path)` helper to change the layout within a view. Closes #610\n  * Fixed `partial()` collection object support.\n    Previously only anything with `.length` would work.\n    When `.length` is present one must still be aware of holes,\n    however now `{ collection: {foo: 'bar'}}` is valid, exposes\n    `keyInCollection` and `keysInCollection`.\n\n  * Performance improved with better view caching\n  * Removed `request` and `response` locals\n  * Changed; errorHandler page title is now `Express` instead of `Connect`\n\n2.2.0 / 2011-03-30\n==================\n\n  * Added `app.lookup.VERB()`, ex `app.lookup.put('/user/:id')`. Closes #606\n  * Added `app.match.VERB()`, ex `app.match.put('/user/12')`. Closes #606\n  * Added `app.VERB(path)` as alias of `app.lookup.VERB()`.\n  * Dependency `connect >= 1.2.0`\n\n2.1.1 / 2011-03-29\n==================\n\n  * Added; expose `err.view` object when failing to locate a view\n  * Fixed `res.partial()` call `next(err)` when no callback is given [reported by aheckmann]\n  * Fixed; `res.send(undefined)` responds with 204 [aheckmann]\n\n2.1.0 / 2011-03-24\n==================\n\n  * Added `<root>/_?<name>` partial lookup support. Closes #447\n  * Added `request`, `response`, and `app` local variables\n  * Added `settings` local variable, containing the app's settings\n  * Added `req.flash()` exception if `req.session` is not available\n  * Added `res.send(bool)` support (json response)\n  * Fixed stylus example for latest version\n  * Fixed; wrap try/catch around `res.render()`\n\n2.0.0 / 2011-03-17\n==================\n\n  * Fixed up index view path alternative.\n  * Changed; `res.locals()` without object returns the locals\n\n2.0.0rc3 / 2011-03-17\n==================\n\n  * Added `res.locals(obj)` to compliment `res.local(key, val)`\n  * Added `res.partial()` callback support\n  * Fixed recursive error reporting issue in `res.render()`\n\n2.0.0rc2 / 2011-03-17\n==================\n\n  * Changed; `partial()` \"locals\" are now optional\n  * Fixed `SlowBuffer` support. Closes #584 [reported by tyrda01]\n  * Fixed .filename view engine option [reported by drudge]\n  * Fixed blog example\n  * Fixed `{req,res}.app` reference when mounting [Ben Weaver]\n\n2.0.0rc / 2011-03-14\n==================\n\n  * Fixed; expose `HTTPSServer` constructor\n  * Fixed express(1) default test charset. Closes #579 [reported by secoif]\n  * Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]\n\n2.0.0beta3 / 2011-03-09\n==================\n\n  * Added support for `res.contentType()` literal\n    The original `res.contentType('.json')`,\n    `res.contentType('application/json')`, and `res.contentType('json')`\n    will work now.\n  * Added `res.render()` status option support back\n  * Added charset option for `res.render()`\n  * Added `.charset` support (via connect 1.0.4)\n  * Added view resolution hints when in development and a lookup fails\n  * Added layout lookup support relative to the page view.\n    For example while rendering `./views/user/index.jade` if you create\n    `./views/user/layout.jade` it will be used in favour of the root layout.\n  * Fixed `res.redirect()`. RFC states absolute url [reported by unlink]\n  * Fixed; default `res.send()` string charset to utf8\n  * Removed `Partial` constructor (not currently used)\n\n2.0.0beta2 / 2011-03-07\n==================\n\n  * Added res.render() `.locals` support back to aid in migration process\n  * Fixed flash example\n\n2.0.0beta / 2011-03-03\n==================\n\n  * Added HTTPS support\n  * Added `res.cookie()` maxAge support\n  * Added `req.header()` _Referrer_ / _Referer_ special-case, either works\n  * Added mount support for `res.redirect()`, now respects the mount-point\n  * Added `union()` util, taking place of `merge(clone())` combo\n  * Added stylus support to express(1) generated app\n  * Added secret to session middleware used in examples and generated app\n  * Added `res.local(name, val)` for progressive view locals\n  * Added default param support to `req.param(name, default)`\n  * Added `app.disabled()` and `app.enabled()`\n  * Added `app.register()` support for omitting leading \".\", either works\n  * Added `res.partial()`, using the same interface as `partial()` within a view. Closes #539\n  * Added `app.param()` to map route params to async/sync logic\n  * Added; aliased `app.helpers()` as `app.locals()`. Closes #481\n  * Added extname with no leading \".\" support to `res.contentType()`\n  * Added `cache views` setting, defaulting to enabled in \"production\" env\n  * Added index file partial resolution, eg: partial('user') may try _views/user/index.jade_.\n  * Added `req.accepts()` support for extensions\n  * Changed; `res.download()` and `res.sendfile()` now utilize Connect's\n    static file server `connect.static.send()`.\n  * Changed; replaced `connect.utils.mime()` with npm _mime_ module\n  * Changed; allow `req.query` to be pre-defined (via middleware or other parent\n  * Changed view partial resolution, now relative to parent view\n  * Changed view engine signature. no longer `engine.render(str, options, callback)`, now `engine.compile(str, options) -> Function`, the returned function accepts `fn(locals)`.\n  * Fixed `req.param()` bug returning Array.prototype methods. Closes #552\n  * Fixed; using `Stream#pipe()` instead of `sys.pump()` in `res.sendfile()`\n  * Fixed; using _qs_ module instead of _querystring_\n  * Fixed; strip unsafe chars from jsonp callbacks\n  * Removed \"stream threshold\" setting\n\n1.0.8 / 2011-03-01\n==================\n\n  * Allow `req.query` to be pre-defined (via middleware or other parent app)\n  * \"connect\": \">= 0.5.0 < 1.0.0\". Closes #547\n  * Removed the long deprecated __EXPRESS_ENV__ support\n\n1.0.7 / 2011-02-07\n==================\n\n  * Fixed `render()` setting inheritance.\n    Mounted apps would not inherit \"view engine\"\n\n1.0.6 / 2011-02-07\n==================\n\n  * Fixed `view engine` setting bug when period is in dirname\n\n1.0.5 / 2011-02-05\n==================\n\n  * Added secret to generated app `session()` call\n\n1.0.4 / 2011-02-05\n==================\n\n  * Added `qs` dependency to _package.json_\n  * Fixed namespaced `require()`s for latest connect support\n\n1.0.3 / 2011-01-13\n==================\n\n  * Remove unsafe characters from JSONP callback names [Ryan Grove]\n\n1.0.2 / 2011-01-10\n==================\n\n  * Removed nested require, using `connect.router`\n\n1.0.1 / 2010-12-29\n==================\n\n  * Fixed for middleware stacked via `createServer()`\n    previously the `foo` middleware passed to `createServer(foo)`\n    would not have access to Express methods such as `res.send()`\n    or props like `req.query` etc.\n\n1.0.0 / 2010-11-16\n==================\n\n  * Added; deduce partial object names from the last segment.\n    For example by default `partial('forum/post', postObject)` will\n    give you the _post_ object, providing a meaningful default.\n  * Added http status code string representation to `res.redirect()` body\n  * Added; `res.redirect()` supporting _text/plain_ and _text/html_ via __Accept__.\n  * Added `req.is()` to aid in content negotiation\n  * Added partial local inheritance [suggested by masylum]. Closes #102\n    providing access to parent template locals.\n  * Added _-s, --session[s]_ flag to express(1) to add session related middleware\n  * Added _--template_ flag to express(1) to specify the\n    template engine to use.\n  * Added _--css_ flag to express(1) to specify the\n    stylesheet engine to use (or just plain css by default).\n  * Added `app.all()` support [thanks aheckmann]\n  * Added partial direct object support.\n    You may now `partial('user', user)` providing the \"user\" local,\n    vs previously `partial('user', { object: user })`.\n  * Added _route-separation_ example since many people question ways\n    to do this with CommonJS modules. Also view the _blog_ example for\n    an alternative.\n  * Performance; caching view path derived partial object names\n  * Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454\n  * Fixed jsonp support; _text/javascript_ as per mailinglist discussion\n\n1.0.0rc4 / 2010-10-14\n==================\n\n  * Added _NODE_ENV_ support, _EXPRESS_ENV_ is deprecated and will be removed in 1.0.0\n  * Added route-middleware support (very helpful, see the [docs](http://expressjs.com/guide.html#Route-Middleware))\n  * Added _jsonp callback_ setting to enable/disable jsonp autowrapping [Dav Glass]\n  * Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass]\n  * Added `partial()` support for array-like collections. Closes #434\n  * Added support for swappable querystring parsers\n  * Added session usage docs. Closes #443\n  * Added dynamic helper caching. Closes #439 [suggested by maritz]\n  * Added authentication example\n  * Added basic Range support to `res.sendfile()` (and `res.download()` etc)\n  * Changed; `express(1)` generated app using 2 spaces instead of 4\n  * Default env to \"development\" again [aheckmann]\n  * Removed _context_ option is no more, use \"scope\"\n  * Fixed; exposing _./support_ libs to examples so they can run without installs\n  * Fixed mvc example\n\n1.0.0rc3 / 2010-09-20\n==================\n\n  * Added confirmation for `express(1)` app generation. Closes #391\n  * Added extending of flash formatters via `app.flashFormatters`\n  * Added flash formatter support. Closes #411\n  * Added streaming support to `res.sendfile()` using `sys.pump()` when >= \"stream threshold\"\n  * Added _stream threshold_ setting for `res.sendfile()`\n  * Added `res.send()` __HEAD__ support\n  * Added `res.clearCookie()`\n  * Added `res.cookie()`\n  * Added `res.render()` headers option\n  * Added `res.redirect()` response bodies\n  * Added `res.render()` status option support. Closes #425 [thanks aheckmann]\n  * Fixed `res.sendfile()` responding with 403 on malicious path\n  * Fixed `res.download()` bug; when an error occurs remove _Content-Disposition_\n  * Fixed; mounted apps settings now inherit from parent app [aheckmann]\n  * Fixed; stripping Content-Length / Content-Type when 204\n  * Fixed `res.send()` 204. Closes #419\n  * Fixed multiple _Set-Cookie_ headers via `res.header()`. Closes #402\n  * Fixed bug messing with error handlers when `listenFD()` is called instead of `listen()`. [thanks guillermo]\n\n\n1.0.0rc2 / 2010-08-17\n==================\n\n  * Added `app.register()` for template engine mapping. Closes #390\n  * Added `res.render()` callback support as second argument (no options)\n  * Added callback support to `res.download()`\n  * Added callback support for `res.sendfile()`\n  * Added support for middleware access via `express.middlewareName()` vs `connect.middlewareName()`\n  * Added \"partials\" setting to docs\n  * Added default expresso tests to `express(1)` generated app. Closes #384\n  * Fixed `res.sendfile()` error handling, defer via `next()`\n  * Fixed `res.render()` callback when a layout is used [thanks guillermo]\n  * Fixed; `make install` creating ~/.node_libraries when not present\n  * Fixed issue preventing error handlers from being defined anywhere. Closes #387\n\n1.0.0rc / 2010-07-28\n==================\n\n  * Added mounted hook. Closes #369\n  * Added connect dependency to _package.json_\n\n  * Removed \"reload views\" setting and support code\n    development env never caches, production always caches.\n\n  * Removed _param_ in route callbacks, signature is now\n    simply (req, res, next), previously (req, res, params, next).\n    Use _req.params_ for path captures, _req.query_ for GET params.\n\n  * Fixed \"home\" setting\n  * Fixed middleware/router precedence issue. Closes #366\n  * Fixed; _configure()_ callbacks called immediately. Closes #368\n\n1.0.0beta2 / 2010-07-23\n==================\n\n  * Added more examples\n  * Added; exporting `Server` constructor\n  * Added `Server#helpers()` for view locals\n  * Added `Server#dynamicHelpers()` for dynamic view locals. Closes #349\n  * Added support for absolute view paths\n  * Added; _home_ setting defaults to `Server#route` for mounted apps. Closes #363\n  * Added Guillermo Rauch to the contributor list\n  * Added support for \"as\" for non-collection partials. Closes #341\n  * Fixed _install.sh_, ensuring _~/.node_libraries_ exists. Closes #362 [thanks jf]\n  * Fixed `res.render()` exceptions, now passed to `next()` when no callback is given [thanks guillermo]\n  * Fixed instanceof `Array` checks, now `Array.isArray()`\n  * Fixed express(1) expansion of public dirs. Closes #348\n  * Fixed middleware precedence. Closes #345\n  * Fixed view watcher, now async [thanks aheckmann]\n\n1.0.0beta / 2010-07-15\n==================\n\n  * Re-write\n    - much faster\n    - much lighter\n    - Check [ExpressJS.com](http://expressjs.com) for migration guide and updated docs\n\n0.14.0 / 2010-06-15\n==================\n\n  * Utilize relative requires\n  * Added Static bufferSize option [aheckmann]\n  * Fixed caching of view and partial subdirectories [aheckmann]\n  * Fixed mime.type() comments now that \".ext\" is not supported\n  * Updated haml submodule\n  * Updated class submodule\n  * Removed bin/express\n\n0.13.0 / 2010-06-01\n==================\n\n  * Added node v0.1.97 compatibility\n  * Added support for deleting cookies via Request#cookie('key', null)\n  * Updated haml submodule\n  * Fixed not-found page, now using charset utf-8\n  * Fixed show-exceptions page, now using charset utf-8\n  * Fixed view support due to fs.readFile Buffers\n  * Changed; mime.type() no longer accepts \".type\" due to node extname() changes\n\n0.12.0 / 2010-05-22\n==================\n\n  * Added node v0.1.96 compatibility\n  * Added view `helpers` export which act as additional local variables\n  * Updated haml submodule\n  * Changed ETag; removed inode, modified time only\n  * Fixed LF to CRLF for setting multiple cookies\n  * Fixed cookie compilation; values are now urlencoded\n  * Fixed cookies parsing; accepts quoted values and url escaped cookies\n\n0.11.0 / 2010-05-06\n==================\n\n  * Added support for layouts using different engines\n    - this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' })\n    - this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml'\n    - this.render('page.html.haml', { layout: false }) // no layout\n  * Updated ext submodule\n  * Updated haml submodule\n  * Fixed EJS partial support by passing along the context. Issue #307\n\n0.10.1 / 2010-05-03\n==================\n\n  * Fixed binary uploads.\n\n0.10.0 / 2010-04-30\n==================\n\n  * Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s\n    encoding is set to 'utf8' or 'utf-8').\n  * Added \"encoding\" option to Request#render(). Closes #299\n  * Added \"dump exceptions\" setting, which is enabled by default.\n  * Added simple ejs template engine support\n  * Added error response support for text/plain, application/json. Closes #297\n  * Added callback function param to Request#error()\n  * Added Request#sendHead()\n  * Added Request#stream()\n  * Added support for Request#respond(304, null) for empty response bodies\n  * Added ETag support to Request#sendfile()\n  * Added options to Request#sendfile(), passed to fs.createReadStream()\n  * Added filename arg to Request#download()\n  * Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request\n  * Performance enhanced by preventing several calls to toLowerCase() in Router#match()\n  * Changed; Request#sendfile() now streams\n  * Changed; Renamed Request#halt() to Request#respond(). Closes #289\n  * Changed; Using sys.inspect() instead of JSON.encode() for error output\n  * Changed; run() returns the http.Server instance. Closes #298\n  * Changed; Defaulting Server#host to null (INADDR_ANY)\n  * Changed; Logger \"common\" format scale of 0.4f\n  * Removed Logger \"request\" format\n  * Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found\n  * Fixed several issues with http client\n  * Fixed Logger Content-Length output\n  * Fixed bug preventing Opera from retaining the generated session id. Closes #292\n\n0.9.0 / 2010-04-14\n==================\n\n  * Added DSL level error() route support\n  * Added DSL level notFound() route support\n  * Added Request#error()\n  * Added Request#notFound()\n  * Added Request#render() callback function. Closes #258\n  * Added \"max upload size\" setting\n  * Added \"magic\" variables to collection partials (\\_\\_index\\_\\_, \\_\\_length\\_\\_, \\_\\_isFirst\\_\\_, \\_\\_isLast\\_\\_). Closes #254\n  * Added [haml.js](http://github.com/visionmedia/haml.js) submodule; removed haml-js\n  * Added callback function support to Request#halt() as 3rd/4th arg\n  * Added preprocessing of route param wildcards using param(). Closes #251\n  * Added view partial support (with collections etc.)\n  * Fixed bug preventing falsey params (such as ?page=0). Closes #286\n  * Fixed setting of multiple cookies. Closes #199\n  * Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)\n  * Changed; session cookie is now httpOnly\n  * Changed; Request is no longer global\n  * Changed; Event is no longer global\n  * Changed; \"sys\" module is no longer global\n  * Changed; moved Request#download to Static plugin where it belongs\n  * Changed; Request instance created before body parsing. Closes #262\n  * Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253\n  * Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled\n  * Updated support to node --version 0.1.90\n  * Updated dependencies\n  * Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }})\n  * Removed utils.mixin(); use Object#mergeDeep()\n\n0.8.0 / 2010-03-19\n==================\n\n  * Added coffeescript example app. Closes #242\n  * Changed; cache api now async friendly. Closes #240\n  * Removed deprecated 'express/static' support. Use 'express/plugins/static'\n\n0.7.6 / 2010-03-19\n==================\n\n  * Added Request#isXHR. Closes #229\n  * Added `make install` (for the executable)\n  * Added `express` executable for setting up simple app templates\n  * Added \"GET /public/*\" to Static plugin, defaulting to <root>/public\n  * Added Static plugin\n  * Fixed; Request#render() only calls cache.get() once\n  * Fixed; Namespacing View caches with \"view:\"\n  * Fixed; Namespacing Static caches with \"static:\"\n  * Fixed; Both example apps now use the Static plugin\n  * Fixed set(\"views\"). Closes #239\n  * Fixed missing space for combined log format\n  * Deprecated Request#sendfile() and 'express/static'\n  * Removed Server#running\n\n0.7.5 / 2010-03-16\n==================\n\n  * Added Request#flash() support without args, now returns all flashes\n  * Updated ext submodule\n\n0.7.4 / 2010-03-16\n==================\n\n  * Fixed session reaper\n  * Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)\n\n0.7.3 / 2010-03-16\n==================\n\n  * Added package.json\n  * Fixed requiring of haml / sass due to kiwi removal\n\n0.7.2 / 2010-03-16\n==================\n\n  * Fixed GIT submodules (HAH!)\n\n0.7.1 / 2010-03-16\n==================\n\n  * Changed; Express now using submodules again until a PM is adopted\n  * Changed; chat example using millisecond conversions from ext\n\n0.7.0 / 2010-03-15\n==================\n\n  * Added Request#pass() support (finds the next matching route, or the given path)\n  * Added Logger plugin (default \"common\" format replaces CommonLogger)\n  * Removed Profiler plugin\n  * Removed CommonLogger plugin\n\n0.6.0 / 2010-03-11\n==================\n\n  * Added seed.yml for kiwi package management support\n  * Added HTTP client query string support when method is GET. Closes #205\n\n  * Added support for arbitrary view engines.\n    For example \"foo.engine.html\" will now require('engine'),\n    the exports from this module are cached after the first require().\n\n  * Added async plugin support\n\n  * Removed usage of RESTful route funcs as http client\n    get() etc, use http.get() and friends\n\n  * Removed custom exceptions\n\n0.5.0 / 2010-03-10\n==================\n\n  * Added ext dependency (library of js extensions)\n  * Removed extname() / basename() utils. Use path module\n  * Removed toArray() util. Use arguments.values\n  * Removed escapeRegexp() util. Use RegExp.escape()\n  * Removed process.mixin() dependency. Use utils.mixin()\n  * Removed Collection\n  * Removed ElementCollection\n  * Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com)  ;)\n\n0.4.0 / 2010-02-11\n==================\n\n  * Added flash() example to sample upload app\n  * Added high level restful http client module (express/http)\n  * Changed; RESTful route functions double as HTTP clients. Closes #69\n  * Changed; throwing error when routes are added at runtime\n  * Changed; defaulting render() context to the current Request. Closes #197\n  * Updated haml submodule\n\n0.3.0 / 2010-02-11\n==================\n\n  * Updated haml / sass submodules. Closes #200\n  * Added flash message support. Closes #64\n  * Added accepts() now allows multiple args. fixes #117\n  * Added support for plugins to halt. Closes #189\n  * Added alternate layout support. Closes #119\n  * Removed Route#run(). Closes #188\n  * Fixed broken specs due to use(Cookie) missing\n\n0.2.1 / 2010-02-05\n==================\n\n  * Added \"plot\" format option for Profiler (for gnuplot processing)\n  * Added request number to Profiler plugin\n  * Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8\n  * Fixed issue with routes not firing when not files are present. Closes #184\n  * Fixed process.Promise -> events.Promise\n\n0.2.0 / 2010-02-03\n==================\n\n  * Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180\n  * Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174\n  * Added expiration support to cache api with reaper. Closes #133\n  * Added cache Store.Memory#reap()\n  * Added Cache; cache api now uses first class Cache instances\n  * Added abstract session Store. Closes #172\n  * Changed; cache Memory.Store#get() utilizing Collection\n  * Renamed MemoryStore -> Store.Memory\n  * Fixed use() of the same plugin several time will always use latest options. Closes #176\n\n0.1.0 / 2010-02-03\n==================\n\n  * Changed; Hooks (before / after) pass request as arg as well as evaluated in their context\n  * Updated node support to 0.1.27 Closes #169\n  * Updated dirname(__filename) -> __dirname\n  * Updated libxmljs support to v0.2.0\n  * Added session support with memory store / reaping\n  * Added quick uid() helper\n  * Added multi-part upload support\n  * Added Sass.js support / submodule\n  * Added production env caching view contents and static files\n  * Added static file caching. Closes #136\n  * Added cache plugin with memory stores\n  * Added support to StaticFile so that it works with non-textual files.\n  * Removed dirname() helper\n  * Removed several globals (now their modules must be required)\n\n0.0.2 / 2010-01-10\n==================\n\n  * Added view benchmarks; currently haml vs ejs\n  * Added Request#attachment() specs. Closes #116\n  * Added use of node's parseQuery() util. Closes #123\n  * Added `make init` for submodules\n  * Updated Haml\n  * Updated sample chat app to show messages on load\n  * Updated libxmljs parseString -> parseHtmlString\n  * Fixed `make init` to work with older versions of git\n  * Fixed specs can now run independent specs for those who can't build deps. Closes #127\n  * Fixed issues introduced by the node url module changes. Closes 126.\n  * Fixed two assertions failing due to Collection#keys() returning strings\n  * Fixed faulty Collection#toArray() spec due to keys() returning strings\n  * Fixed `make test` now builds libxmljs.node before testing\n\n0.0.1 / 2010-01-03\n==================\n\n  * Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2197265625,
          "content": "(The MIT License)\n\nCopyright (c) 2009-2014 TJ Holowaychuk <tj@vision-media.ca>\nCopyright (c) 2013-2014 Roman Shtylman <shtylman+expressjs@gmail.com>\nCopyright (c) 2014-2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Readme-Guide.md",
          "type": "blob",
          "size": 4.2001953125,
          "content": "# README guidelines\n\nEvery module in the expressjs, pillarjs, and jshttp organizations should have\na README file named `README.md`. The purpose of the README is to:\n\n- Explain the purpose of the module and how to use it.\n- Act as a landing page (both on GitHub and npmjs.com) for the module to help\n  people find it via search. Middleware module READMEs are also incorporated\n  into https://expressjs.com/en/resources/middleware.html.\n- Encourage community contributions and participation.\n\nUse the [README template](https://github.com/expressjs/express/wiki/README-template)\nto quickly create a new README file.\n\n## Top-level items\n\n**Badges** (optional): At the very top (with no subheading), include any\napplicable badges, such as npm version/downloads, build status, test coverage,\nand so on. Badges should resolve properly (not display a broken image).\n\nPossible badges include:\n- npm version: `[![NPM Version][npm-image]][npm-url]`\n- npm downloads: `[![NPM Downloads][downloads-image]][downloads-url]`\n- Build status: `[![Build Status][travis-image]][travis-url]`\n- Test coverage: `[![Test Coverage][coveralls-image]][coveralls-url]`\n- Tips: `[![Gratipay][gratipay-image]][gratipay-url]`\n\n**Summary**: Following badges, provide a one- or two-sentence description of\nwhat the module does. This should be the same as the npmjs.org blurb (which\ncomes from the description property of `package.json`). Since npm doesn't\nhandle markdown for the blurb, avoid using markdown in the summary sentence.\n\n**TOC** (Optional): For longer READMEs, provide a table of contents that has\na relative link to each section. A tool such as\n[doctoc](https://www.npmjs.com/package/doctoc) makes it very easy to generate\na TOC.\n\n## Overview\n\nOptionally, include a section of one or two paragraphs with more high-level\ninformation on what the module does, what problems it solves, why one would\nuse it and how.  Don't just repeat what's in the summary.\n\n## Installation\n\nRequired. This section is typically just:\n\n```sh\n$ npm install module-name\n```\n\nBut include any other steps or requirements.\n\nNOTE: Use the `sh` code block to make the shell command display properly on\nthe website.\n\n## Basic use\n\n- Provide a general description of how to use the module with code sample.\n  Include any important caveats or restrictions.\n- Explain the most common use cases.\n- Optional: a simple \"hello world\" type example (where applicable). This\n  example is in addition to the more comprehensive [example section](#examples)\n  later.\n\n## API\n\nProvide complete API documentation.\n\nFormatting conventions: Each function is listed in a 3rd-level heading (`###`),\nlike this:\n\n```\n### Function_name(arg, options [, optional_arg]  ... )\n```\n\n**Options objects**\n\nFor arguments that are objects (for example, options object), describe the\nproperties in a table, as follows. This matches the formatting used in the\n[Express API docs](https://expressjs.com/en/4x/api.html).\n\n|Property | Description | Type | Default|\n|----------|-----------|------------|-------------|\n|Name of the property in `monospace`. | Brief description | String, Number, Boolean, etc. | If applicable.|\n\nIf all the properties are required (i.e. there are no defaults), then you\ncan omit the default column.\n\nInstead of very lengthy descriptions, link out to subsequent paragraphs for\nmore detailed explanation of specific cases (e.g. \"When this property is set\nto 'foobar', xyz happens; see &lt;link to following section &gt;.)\n\nIf there are options properties that are themselves options, use additional\ntables. See [`trust proxy` and `etag` properties](https://expressjs.com/en/4x/api.html#app.settings.table).\n\n## Examples\n\nEvery README should have at least one example; ideally more.  For code samples,\nbe sure to use the `js` code block, for proper display in the website, e.g.:\n\n```js\nvar csurf = require('csurf')\n...\n```\n\n## Tests\n\nWhat tests are included.\n\nHow to run them.\n\nThe convention for running tests is `npm test`. All our projects should follow\nthis convention.\n\n## Contributors\n\nNames of module \"owners\" (lead developers) and other developers who have\ncontributed.\n\n## License\n\nLink to the license, with a short description of what it is, e.g. \"MIT\" or\nwhatever. Ideally, avoid putting the license text directly in the README; link\nto it instead.\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 9.1982421875,
          "content": "[![Express Logo](https://i.cloudup.com/zfY6lL7eFa-3000x3000.png)](https://expressjs.com/)\n\n**Fast, unopinionated, minimalist web framework for [Node.js](https://nodejs.org).**\n\n**This project has a [Code of Conduct][].**\n\n## Table of contents\n\n* [Installation](#Installation)\n* [Features](#Features)\n* [Docs & Community](#docs--community)\n* [Quick Start](#Quick-Start)\n* [Running Tests](#Running-Tests)\n* [Philosophy](#Philosophy)\n* [Examples](#Examples)\n* [Contributing to Express](#Contributing)\n* [TC (Technical Committee)](#tc-technical-committee)\n* [Triagers](#triagers)\n* [License](#license)\n\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Install Size][npm-install-size-image]][npm-install-size-url]\n[![NPM Downloads][npm-downloads-image]][npm-downloads-url]\n[![OpenSSF Scorecard Badge][ossf-scorecard-badge]][ossf-scorecard-visualizer]\n\n\n```js\nimport express from 'express'\n\nconst app = express()\n\napp.get('/', (req, res) => {\n  res.send('Hello World')\n})\n\napp.listen(3000)\n```\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/).\n\nBefore installing, [download and install Node.js](https://nodejs.org/en/download/).\nNode.js 18 or higher is required.\n\nIf this is a brand new project, make sure to create a `package.json` first with\nthe [`npm init` command](https://docs.npmjs.com/creating-a-package-json-file).\n\nInstallation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```bash\nnpm install express\n```\n\nFollow [our installing guide](https://expressjs.com/en/starter/installing.html)\nfor more information.\n\n## Features\n\n  * Robust routing\n  * Focus on high performance\n  * Super-high test coverage\n  * HTTP helpers (redirection, caching, etc)\n  * View system supporting 14+ template engines\n  * Content negotiation\n  * Executable for generating applications quickly\n\n## Docs & Community\n\n  * [Website and Documentation](https://expressjs.com/) - [[website repo](https://github.com/expressjs/expressjs.com)]\n  * [GitHub Organization](https://github.com/expressjs) for Official Middleware & Modules\n  * [Github Discussions](https://github.com/expressjs/discussions) for discussion on the development and usage of Express\n\n**PROTIP** Be sure to read the [migration guide to v5](https://expressjs.com/en/guide/migrating-5)\n\n## Quick Start\n\n  The quickest way to get started with express is to utilize the executable [`express(1)`](https://github.com/expressjs/generator) to generate an application as shown below:\n\n  Install the executable. The executable's major version will match Express's:\n\n```bash\nnpm install -g express-generator@4\n```\n\n  Create the app:\n\n```bash\nexpress /tmp/foo && cd /tmp/foo\n```\n\n  Install dependencies:\n\n```bash\nnpm install\n```\n\n  Start the server:\n\n```bash\nnpm start\n```\n\n  View the website at: http://localhost:3000\n\n## Philosophy\n\n  The Express philosophy is to provide small, robust tooling for HTTP servers, making\n  it a great solution for single page applications, websites, hybrids, or public\n  HTTP APIs.\n\n  Express does not force you to use any specific ORM or template engine. With support for over\n  14 template engines via [@ladjs/consolidate](https://github.com/ladjs/consolidate),\n  you can quickly craft your perfect framework.\n\n## Examples\n\n  To view the examples, clone the Express repository:\n\n```bash\ngit clone https://github.com/expressjs/express.git --depth 1 && cd express\n```\n\n  Then install the dependencies:\n\n```bash\nnpm install\n```\n\n  Then run whichever example you want:\n\n```bash\nnode examples/content-negotiation\n```\n\n## Contributing\n\n  [![Linux Build][github-actions-ci-image]][github-actions-ci-url]\n  [![Test Coverage][coveralls-image]][coveralls-url]\n\nThe Express.js project welcomes all constructive contributions. Contributions take many forms,\nfrom code for bug fixes and enhancements, to additions and fixes to documentation, additional\ntests, triaging incoming pull requests and issues, and more!\n\nSee the [Contributing Guide](Contributing.md) for more technical details on contributing.\n\n### Security Issues\n\nIf you discover a security vulnerability in Express, please see [Security Policies and Procedures](Security.md).\n\n### Running Tests\n\nTo run the test suite, first install the dependencies:\n\n```bash\nnpm install\n```\n\nThen run `npm test`:\n\n```bash\nnpm test\n```\n\n## People\n\nThe original author of Express is [TJ Holowaychuk](https://github.com/tj)\n\n[List of all contributors](https://github.com/expressjs/express/graphs/contributors)\n\n### TC (Technical Committee)\n\n* [UlisesGascon](https://github.com/UlisesGascon) - **Ulises Gascón** (he/him)\n* [jonchurch](https://github.com/jonchurch) - **Jon Church**\n* [wesleytodd](https://github.com/wesleytodd) - **Wes Todd**\n* [LinusU](https://github.com/LinusU) - **Linus Unnebäck**\n* [blakeembrey](https://github.com/blakeembrey) - **Blake Embrey**\n* [sheplu](https://github.com/sheplu) - **Jean Burellier**\n* [crandmck](https://github.com/crandmck) - **Rand McKinney**\n* [ctcpip](https://github.com/ctcpip) - **Chris de Almeida**\n\n<details>\n<summary>TC emeriti members</summary>\n\n#### TC emeriti members\n\n  * [dougwilson](https://github.com/dougwilson) - **Douglas Wilson**\n  * [hacksparrow](https://github.com/hacksparrow) - **Hage Yaapa**\n  * [jonathanong](https://github.com/jonathanong) - **jongleberry**\n  * [niftylettuce](https://github.com/niftylettuce) - **niftylettuce**\n  * [troygoode](https://github.com/troygoode) - **Troy Goode**\n</details>\n\n\n### Triagers\n\n* [aravindvnair99](https://github.com/aravindvnair99) - **Aravind Nair**\n* [bjohansebas](https://github.com/bjohansebas) - **Sebastian Beltran**\n* [carpasse](https://github.com/carpasse) - **Carlos Serrano**\n* [CBID2](https://github.com/CBID2) - **Christine Belzie**\n* [enyoghasim](https://github.com/enyoghasim) - **David Enyoghasim**\n* [UlisesGascon](https://github.com/UlisesGascon) - **Ulises Gascón** (he/him)\n* [mertcanaltin](https://github.com/mertcanaltin) - **Mert Can Altin**\n* [0ss](https://github.com/0ss) - **Salah**\n* [import-brain](https://github.com/import-brain) - **Eric Cheng** (he/him)\n* [3imed-jaberi](https://github.com/3imed-jaberi) - **Imed Jaberi**\n* [dakshkhetan](https://github.com/dakshkhetan) - **Daksh Khetan** (he/him)\n* [lucasraziel](https://github.com/lucasraziel) - **Lucas Soares Do Rego**\n* [IamLizu](https://github.com/IamLizu) - **S M Mahmudul Hasan** (he/him)\n* [Sushmeet](https://github.com/Sushmeet) - **Sushmeet Sunger**\n* [rxmarbles](https://github.com/rxmarbles) **Rick Markins** (He/him)\n\n<details>\n<summary>Triagers emeriti members</summary>\n\n#### Emeritus Triagers\n\n  * [AuggieH](https://github.com/AuggieH) - **Auggie Hudak**\n  * [G-Rath](https://github.com/G-Rath) - **Gareth Jones**\n  * [MohammadXroid](https://github.com/MohammadXroid) - **Mohammad Ayashi**\n  * [NawafSwe](https://github.com/NawafSwe) - **Nawaf Alsharqi**\n  * [NotMoni](https://github.com/NotMoni) - **Moni**\n  * [VigneshMurugan](https://github.com/VigneshMurugan) - **Vignesh Murugan**\n  * [davidmashe](https://github.com/davidmashe) - **David Ashe**\n  * [digitaIfabric](https://github.com/digitaIfabric) - **David**\n  * [e-l-i-s-e](https://github.com/e-l-i-s-e) - **Elise Bonner**\n  * [fed135](https://github.com/fed135) - **Frederic Charette**\n  * [firmanJS](https://github.com/firmanJS) - **Firman Abdul Hakim**\n  * [getspooky](https://github.com/getspooky) - **Yasser Ameur**\n  * [ghinks](https://github.com/ghinks) - **Glenn**\n  * [ghousemohamed](https://github.com/ghousemohamed) - **Ghouse Mohamed**\n  * [gireeshpunathil](https://github.com/gireeshpunathil) - **Gireesh Punathil**\n  * [jake32321](https://github.com/jake32321) - **Jake Reed**\n  * [jonchurch](https://github.com/jonchurch) - **Jon Church**\n  * [lekanikotun](https://github.com/lekanikotun) - **Troy Goode**\n  * [marsonya](https://github.com/marsonya) - **Lekan Ikotun**\n  * [mastermatt](https://github.com/mastermatt) - **Matt R. Wilson**\n  * [maxakuru](https://github.com/maxakuru) - **Max Edell**\n  * [mlrawlings](https://github.com/mlrawlings) - **Michael Rawlings**\n  * [rodion-arr](https://github.com/rodion-arr) - **Rodion Abdurakhimov**\n  * [sheplu](https://github.com/sheplu) - **Jean Burellier**\n  * [tarunyadav1](https://github.com/tarunyadav1) - **Tarun yadav**\n  * [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe**\n</details>\n\n\n## License\n\n  [MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/express/master\n[coveralls-url]: https://coveralls.io/r/expressjs/express?branch=master\n[github-actions-ci-image]: https://badgen.net/github/checks/expressjs/express/master?label=CI\n[github-actions-ci-url]: https://github.com/expressjs/express/actions/workflows/ci.yml\n[npm-downloads-image]: https://badgen.net/npm/dm/express\n[npm-downloads-url]: https://npmcharts.com/compare/express?minimal=true\n[npm-install-size-image]: https://badgen.net/packagephobia/install/express\n[npm-install-size-url]: https://packagephobia.com/result?p=express\n[npm-url]: https://npmjs.org/package/express\n[npm-version-image]: https://badgen.net/npm/v/express\n[ossf-scorecard-badge]: https://api.scorecard.dev/projects/github.com/expressjs/express/badge\n[ossf-scorecard-visualizer]: https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express\n[Code of Conduct]: https://github.com/expressjs/express/blob/master/Code-Of-Conduct.md\n"
        },
        {
          "name": "Release-Process.md",
          "type": "blob",
          "size": 7.2490234375,
          "content": "# Express Release Process\n\nThis document contains the technical aspects of the Express release process. The\nintended audience is those who have been authorized by the Express Technical\nCommittee (TC) to create, promote and sign official release builds for Express,\nas npm packages hosted on https://npmjs.com/package/express.\n\n## Who can make releases?\n\nRelease authorization is given by the Express TC. Once authorized, an individual\nmust have the following access permissions:\n\n### 1. Github release access\n\nThe individual making the release will need to be a member of the\nexpressjs/express team with Write permission level so they are able to tag the\nrelease commit and push changes to the expressjs/express repository\n(see Steps 4 and 5).\n\n### 2. npmjs.com release access\n\nThe individual making the release will need to be made an owner on the\n`express` package on npmjs.com so they are able to publish the release\n(see Step 6).\n\n## How to publish a release\n\nBefore publishing, the following preconditions should be met:\n\n- A release proposal issue or tracking pull request (see \"Proposal branch\"\n  below) will exist documenting:\n  - the proposed changes\n  - the type of release: patch, minor or major\n  - the version number (according to semantic versioning - http://semver.org)\n- The proposed changes should be complete.\n\nThere are two main release flows: patch and non-patch.\n\nThe patch flow is for making **patch releases**. As per semantic versioning,\npatch releases are for simple changes, eg: typo fixes, patch dependency updates,\nand simple/low-risk bug fixes. Every other type of change is made via the\nnon-patch flow.\n\n### Branch terminology\n\n\"Master branch\"\n\n- There is a branch in git used for the current major version of Express, named\n  `master`.\n- This branch contains the completed commits for the next patch release of the\n  current major version.\n- Releases for the current major version are published from this branch.\n\n\"Version branch\"\n\n- For any given major version of Express (current, previous or next) there is\n  a branch in git for that release named `<major-version>.x` (eg: `4.x`).\n- This branch points to the commit of the latest tag for the given major version.\n\n\"Release branch\"\n\n- For any given major version of Express, there is a branch used for publishing\n  releases.\n- For the current major version of Express, the release branch is the\n  \"Master branch\" named `master`.\n- For all other major versions of Express, the release branch is the\n  \"Version branch\" named `<major-version>.x`.\n\n\"Proposal branch\"\n\n- A branch in git representing a proposed new release of Express. This can be a\n  minor or major release, named `<major-version>.0` for a major release,\n  `<major-version>.<minor-version>` for a minor release.\n- A tracking pull request should exist to document the proposed release,\n  targeted at the appropriate release branch. Prior to opening the tracking\n  pull request the content of the release may have be discussed in an issue.\n- This branch contains the commits accepted so far that implement the proposal\n  in the tracking pull request.\n\n### Pre-release Versions\n\nAlpha and Beta releases are made from a proposal branch. The version number should be\nincremented to the next minor version with a `-beta` or `-alpha` suffix.\nFor example, if the next beta release is `5.0.1`, the beta release would be `5.0.1-beta.0`.\nThe pre-releases are unstable and not suitable for production use.\n\n### Patch flow\n\nIn the patch flow, simple changes are committed to the release branch which\nacts as an ever-present branch for the next patch release of the associated\nmajor version of Express.\n\nThe release branch is usually kept in a state where it is ready to release.\nReleases are made when sufficient time or change has been made to warrant it.\nThis is usually proposed and decided using a github issue.\n\n### Non-patch flow\n\nIn the non-patch flow, changes are committed to a temporary proposal branch\ncreated specifically for that release proposal. The branch is based on the\nmost recent release of the major version of Express that the release targets.\n\nReleases are made when all the changes on a proposal branch are complete and\napproved. This is done by merging the proposal branch into the release branch\n(using a fast-forward merge), tagging it with the new version number and\npublishing the release package to npmjs.com.\n\n### Flow\n\nBelow is a detailed description of the steps to publish a release.\n\n#### Step 1. Check the release is ready to publish\n\nCheck any relevant information to ensure the release is ready, eg: any\nmilestone, label, issue or tracking pull request for the release. The release\nis ready when all proposed code, tests and documentation updates are complete\n(either merged, closed or re-targeted to another release).\n\n#### Step 2. (Non-patch flow only) Merge the proposal branch into the release branch\n\nIn the patch flow: skip this step.\n\nIn the non-patch flow:\n```sh\n$ git checkout <release-branch>\n$ git merge --ff-only <proposal-branch>\n```\n\n<release-branch> - see \"Release branch\" of \"Branches\" above.\n<proposal-branch> - see \"Proposal branch\" of \"Non-patch flow\" above.\n\n> [!NOTE]\n> You may need to rebase the proposal branch to allow a fast-forward\n> merge. Using a fast-forward merge keeps the history clean as it does\n> not introduce merge commits.\n\n### Step 3. Update the History.md and package.json to the new version number\n\nThe changes so far for the release should already be documented under the\n\"unreleased\" section at the top of the History.md file, as per the usual\ndevelopment practice. Change \"unreleased\" to the new release version / date.\nExample diff fragment:\n\n```diff\n-unreleased\n-==========\n+4.13.3 / 2015-08-02\n+===================\n```\n\nThe version property in the package.json should already contain the version of\nthe previous release. Change it to the new release version.\n\nCommit these changes together under a single commit with the message set to\nthe new release version (eg: `4.13.3`):\n\n```sh\n$ git checkout <release-branch>\n<..edit files..>\n$ git add History.md package.json\n$ git commit -m '<version-number>'\n```\n\n### Step 4. Identify and tag the release commit with the new release version\n\nCreate a lightweight tag (rather than an annotated tag) named after the new\nrelease version (eg: `4.13.3`).\n\n```sh\n$ git tag <version-number>\n```\n\n### Step 5. Push the release branch changes and tag to github\n\nThe branch and tag should be pushed directly to the main repository\n(https://github.com/expressjs/express).\n\n```sh\n$ git push origin <release-branch>\n$ git push origin <version-number>\n```\n\n### Step 6. Publish to npmjs.com\n\nEnsure your local working copy is completely clean (no extra or changed files).\nYou can use `git status` for this purpose.\n\n```sh\n$ npm login <npm-username>\n$ npm publish\n```\n\n> [!NOTE]\n> The version number to publish will be picked up automatically from \n> package.json.\n          \n### Step 7. Update documentation website\n\nThe documentation website https://expressjs.com/ documents the current release version in various places. To update these, follow these steps:\n\n1. Manually run the [`Update External Docs` workflow](https://github.com/expressjs/expressjs.com/actions/workflows/update-external-docs.yml) in expressjs.com repository.\n2. Add a new section to the [changelog](https://github.com/expressjs/expressjs.com/blob/gh-pages/en/changelog/index.md) in the expressjs.com website.\n"
        },
        {
          "name": "Security.md",
          "type": "blob",
          "size": 2.310546875,
          "content": "# Security Policies and Procedures\n\nThis document outlines security procedures and general policies for the Express\nproject.\n\n  * [Reporting a Bug](#reporting-a-bug)\n  * [Disclosure Policy](#disclosure-policy)\n  * [Comments on this Policy](#comments-on-this-policy)\n\n## Reporting a Bug\n\nThe Express team and community take all security bugs in Express seriously.\nThank you for improving the security of Express. We appreciate your efforts and\nresponsible disclosure and will make every effort to acknowledge your\ncontributions.\n\nReport security bugs by emailing the lead maintainer in the Readme.md file.\n\nTo ensure the timely response to your report, please ensure that the entirety\nof the report is contained within the email body and not solely behind a web\nlink or an attachment.\n\nThe lead maintainer will acknowledge your email within 48 hours, and will send a\nmore detailed response within 48 hours indicating the next steps in handling\nyour report. After the initial reply to your report, the security team will\nendeavor to keep you informed of the progress towards a fix and full\nannouncement, and may ask for additional information or guidance.\n\nReport security bugs in third-party modules to the person or team maintaining\nthe module.\n\n## Pre-release Versions\n\nAlpha and Beta releases are unstable and **not suitable for production use**.\nVulnerabilities found in pre-releases should be reported according to the [Reporting a Bug](#reporting-a-bug) section.\nDue to the unstable nature of the branch it is not guaranteed that any fixes will be released in the next pre-release.\n\n## Disclosure Policy\n\nWhen the security team receives a security bug report, they will assign it to a\nprimary handler. This person will coordinate the fix and release process,\ninvolving the following steps:\n\n  * Confirm the problem and determine the affected versions.\n  * Audit code to find any potential similar problems.\n  * Prepare fixes for all releases still under maintenance. These fixes will be\n    released as fast as possible to npm.\n\n## The Express Threat Model\n\nWe are currently working on a new version of the security model, the most updated version can be found [here](https://github.com/expressjs/security-wg/blob/main/docs/ThreatModel.md)\n\n## Comments on this Policy\n\nIf you have suggestions on how this process could be improved please submit a\npull request.\n"
        },
        {
          "name": "Triager-Guide.md",
          "type": "blob",
          "size": 4.384765625,
          "content": "# Express Triager Guide\n\n## Issue Triage Process\n\nWhen a new issue or pull request is opened the issue will be labeled with `needs triage`.\nIf a triage team member is available they can help make sure all the required information\nis provided. Depending on the issue or PR there are several next labels they can add for further\nclassification:\n\n* `needs triage`: This can be kept if the triager is unsure which next steps to take\n* `awaiting more info`: If more info has been requested from the author, apply this label.\n* `bug`: Issues that present a reasonable conviction there is a reproducible bug.\n* `enhancement`: Issues that are found to be a reasonable candidate feature additions.\n\nIf the issue is a question or discussion, it should be moved to GitHub Discussions.\n\n### Moving Discussions and Questions to GitHub Discussions\n\nFor issues labeled with `question` or `discuss`, it is recommended to move them to GitHub Discussions instead:\n\n* **Questions**: User questions that do not appear to be bugs or enhancements should be moved to GitHub Discussions.\n* **Discussions**: Topics for discussion should be moved to GitHub Discussions. If the discussion leads to a new feature or bug identification, it can be moved back to Issues.\n\nIn all cases, issues may be closed by maintainers if they don't receive a timely response when\nfurther information is sought, or when additional questions are asked.\n\n## Approaches and Best Practices for getting into triage contributions\n\nReview the organization's [StatusBoard](https://expressjs.github.io/statusboard/),\npay special attention to these columns: stars, watchers, open issues, and contributors.\nThis gives you a general idea about the criticality and health of the repository.\nPick a few projects based on that criteria, your interests, and skills (existing or aspiring).\n\nReview the project's contribution guideline if present. In a nutshell,\ncommit to the community's standards and values. Review the\ndocumentation, for most of the projects it is just the README.md, and\nmake sure you understand the key APIs, semantics, configurations, and use cases.\n\nIt might be helpful to write your own test apps to re-affirm your\nunderstanding of the key functions. This may identify some gaps in\ndocumentation, record those as they might be good PR's to open.\nSkim through the issue backlog; identify low hanging issues and mostly new ones.\nFrom those, attempt to recreate issues based on the OP description and\nask questions if required. No question is a bad question!\n\n## Removal of Triage Role\n\nThere are a few cases where members can be removed as triagers:\n\n- Breaking the CoC or project contributor guidelines\n- Abuse or misuse of the role as deemed by the TC\n- Lack of participation for more than 6 months\n\nIf any of these happen we will discuss as a part of the triage portion of the regular TC meetings.\nIf you have questions feel free to reach out to any of the TC members.\n\n## Other Helpful Hints:\n\n- Everyone is welcome to attend the [Express Technical Committee Meetings](https://github.com/expressjs/discussions#expressjs-tc-meetings), and as a triager, it might help to get a better idea of what's happening with the project.\n- When exploring the module's functionality there are a few helpful steps:\n  - Turn on `DEBUG=*` (see https://www.npmjs.com/package/debug) to get detailed log information\n  - It is also a good idea to do live debugging to follow the control flow, try using `node --inspect`\n  - It is a good idea to make at least one pass of reading through the entire source\n- When reviewing the list of open issues there are some common types and suggested actions:\n  - New/unattended issues or simple questions: A good place to start\n  - Hard bugs & ongoing discussions: always feel free to chime in and help\n  - Issues that imply gaps in the documentation: open PRs with changes or help the user to do so\n- For recurring issues, it is helpful to create functional examples to demonstrate (publish as gists or a repo)\n- Review and identify the maintainers. If necessary, at-mention one or more of them if you are unsure what to do\n- Make sure all your interactions are professional, welcoming, and respectful to the parties involved.\n- When an issue refers to security concerns, responsibility is delegated to the repository captain or the security group in any public communication. \n  - If an issue has been open for a long time, the person in charge should be contacted internally through the private Slack chat."
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.21875,
          "content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.6357421875,
          "content": "{\n  \"name\": \"express\",\n  \"description\": \"Fast, unopinionated, minimalist web framework\",\n  \"version\": \"5.0.1\",\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca>\",\n  \"contributors\": [\n    \"Aaron Heckmann <aaron.heckmann+github@gmail.com>\",\n    \"Ciaran Jessup <ciaranj@gmail.com>\",\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\n    \"Guillermo Rauch <rauchg@gmail.com>\",\n    \"Jonathan Ong <me@jongleberry.com>\",\n    \"Roman Shtylman <shtylman+expressjs@gmail.com>\",\n    \"Young Jae Sim <hanul@hanul.me>\"\n  ],\n  \"license\": \"MIT\",\n  \"repository\": \"expressjs/express\",\n  \"homepage\": \"https://expressjs.com/\",\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/express\"\n  },\n  \"keywords\": [\n    \"express\",\n    \"framework\",\n    \"sinatra\",\n    \"web\",\n    \"http\",\n    \"rest\",\n    \"restful\",\n    \"router\",\n    \"app\",\n    \"api\"\n  ],\n  \"dependencies\": {\n    \"accepts\": \"^2.0.0\",\n    \"body-parser\": \"^2.0.1\",\n    \"content-disposition\": \"^1.0.0\",\n    \"content-type\": \"~1.0.4\",\n    \"cookie\": \"0.7.1\",\n    \"cookie-signature\": \"^1.2.1\",\n    \"debug\": \"4.3.6\",\n    \"depd\": \"2.0.0\",\n    \"encodeurl\": \"~2.0.0\",\n    \"escape-html\": \"~1.0.3\",\n    \"etag\": \"~1.8.1\",\n    \"finalhandler\": \"^2.0.0\",\n    \"fresh\": \"2.0.0\",\n    \"http-errors\": \"2.0.0\",\n    \"merge-descriptors\": \"^2.0.0\",\n    \"mime-types\": \"^3.0.0\",\n    \"on-finished\": \"2.4.1\",\n    \"once\": \"1.4.0\",\n    \"parseurl\": \"~1.3.3\",\n    \"proxy-addr\": \"~2.0.7\",\n    \"qs\": \"6.13.0\",\n    \"range-parser\": \"~1.2.1\",\n    \"router\": \"^2.0.0\",\n    \"send\": \"^1.1.0\",\n    \"serve-static\": \"^2.1.0\",\n    \"statuses\": \"2.0.1\",\n    \"type-is\": \"^2.0.0\",\n    \"vary\": \"~1.1.2\"\n  },\n  \"devDependencies\": {\n    \"after\": \"0.8.2\",\n    \"connect-redis\": \"8.0.1\",\n    \"cookie-parser\": \"1.4.7\",\n    \"cookie-session\": \"2.0.0\",\n    \"ejs\": \"3.1.10\",\n    \"eslint\": \"8.47.0\",\n    \"express-session\": \"1.18.1\",\n    \"hbs\": \"4.2.0\",\n    \"marked\": \"15.0.3\",\n    \"method-override\": \"3.0.0\",\n    \"mocha\": \"10.2.0\",\n    \"morgan\": \"1.10.0\",\n    \"nyc\": \"15.1.0\",\n    \"pbkdf2-password\": \"1.2.1\",\n    \"supertest\": \"6.3.0\",\n    \"vhost\": \"~3.0.2\"\n  },\n  \"engines\": {\n    \"node\": \">= 18\"\n  },\n  \"files\": [\n    \"LICENSE\",\n    \"History.md\",\n    \"Readme.md\",\n    \"index.js\",\n    \"lib/\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"test\": \"mocha --require test/support/env --reporter spec --check-leaks test/ test/acceptance/\",\n    \"test-ci\": \"nyc --exclude examples --exclude test --exclude benchmarks --reporter=lcovonly --reporter=text npm test\",\n    \"test-cov\": \"nyc --exclude examples --exclude test --exclude benchmarks --reporter=html --reporter=text npm test\",\n    \"test-tap\": \"mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/\"\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}