{
  "metadata": {
    "timestamp": 1736557304597,
    "page": 222,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "azl397985856/leetcode",
      "stars": 54916,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.25,
          "content": ".DS_Store\n_book/\n.idea/*\nnode_modules/\n西法的刷题秘籍*.pdf\n西法的刷题秘籍*.mobi\n西法的刷题秘籍*.epub\n西法的刷题秘籍*.zip\nbook*.pdf\nbook*.mobi\nbook*.epub\nbook*.zip\nThumbs.db\n.idea/\n.vscode/\n*.sublime-project\n*.sublime-workspace\n*.log"
        },
        {
          "name": ".mdl_style.rb",
          "type": "blob",
          "size": 0.21,
          "content": "all\n# 我想让图片居中，单纯的 md 似乎做不到，所以使用 raw html 来实现\nexclude_rule 'MD033'\n# 仅仅是强调，不需要用 header\nexclude_rule 'MD036'\n# 这个 rule 有 bug?\nexclude_rule 'MD029'"
        },
        {
          "name": ".mdlrc",
          "type": "blob",
          "size": 0.02,
          "content": "style '.mdl_style.rb'"
        },
        {
          "name": ".nojekyll",
          "type": "blob",
          "size": 0,
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "91",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.en.md",
          "type": "blob",
          "size": 0.98,
          "content": "# Contributing\n\n## Translation\n\nPlease pick any work without translation by `submit new issue`. English version and Chinese version are distinguished by file name, e.g. Chinese version file name abc.md, the corresponding English version should be abc.en.md. \n\nManual translation instead of machine translation, there is no need to translate the technical jargon.\n\n## Contributing to problems\n\nPlease follow the template of \"problems\", what you need to submit are:\n\n- Problem and solution markdown file\n- Add the link of the solution in README.md\n- Add the link of the solution in README.en.md (optional)\n- draw.io file(xml) or pictures (optional)\n\n> Template for reference: [1014.best-sightseeing-pair](./templates/problems/1014.best-sightseeing-pair.md)\n> Online painting tools like https://excalidraw.com/, draw.io, processon or iPad apps\n\n## Contributing to daily problem\n\n- Please follow the template of \"daily problem\" and submit the issue with correct tags (can refer to official tags on LeetCode)."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.28,
          "content": "# 贡献我们\n\n## 翻译\n\n只需要看哪个没有被翻译即可认领，认领方式为`提交新的issue`形式。英文版本和中文版通过文件名区分。比如中文的文件名是 abc.md，那么英文的应该是 abc.en.md。\n\n尽可能使用意译，避免机械性的英文翻译，专有名词无需翻译。\n\n## 贡献多语言\n\n**要求和其他语言的思路一致。** 必要时，命名也要保持一致。 不过命名规范可以按照语言的最佳实践， 比如 python 可以蛇形 ，JS 可以驼峰等。\n\n格式参考这个 pr： https://github.com/azl397985856/leetcode/pull/452/files\n\n## 增加题解\n\n只需要按照其他题目格式提交即可，需要注意的是，你需要提交以下文件：\n\n- 题解文件\n- README.md 增加您新的题解\n- README.en.md （如果你是英文题解的话）\n- drawio 文件 或者图片（如果你画图的话）\n\n> 模板可参考 [1014.best-sightseeing-pair](./templates/problems/1014.best-sightseeing-pair.md)\n> 也可以使用其他画图工具，比如 https://excalidraw.com/ 或者 draw.io 或者 processon 或者 ipad 画图\n\n## 贡献每日一题\n\n- 直接按照“每日一题”格式要求提交 issue 即可，需要注意的是，要打上正确的 tag，如果 LeetCode 题目，可以参考官方给的 tag。\n"
        },
        {
          "name": "Kapture 2020-08-19 at 11.37.36.gif",
          "type": "blob",
          "size": 24130.08,
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 16.37,
          "content": "\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n\nConsiderations for licensors: Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. More considerations for licensors.\n\nConsiderations for the public: By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor’s permission is not necessary for any reason–for example, because of any applicable exception or limitation to copyright–then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. More considerations for the public.\n\nCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nNonCommercial means not primarily intended for or directed towards commercial advantage or monetary compensation. For purposes of this Public License, the exchange of the Licensed Material for other material subject to Copyright and Similar Rights by digital file-sharing or similar means is NonCommercial provided there is no payment of monetary compensation in connection with the exchange.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\nSection 2 – Scope.\n\nLicense grant.\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nreproduce and Share the Licensed Material, in whole or in part, for NonCommercial purposes only; and\nproduce and reproduce, but not Share, Adapted Material for NonCommercial purposes only.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties, including when the Licensed Material is used other than for NonCommercial purposes.\nSection 3 – License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material, You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nFor the avoidance of doubt, You do not have permission under this Public License to Share Adapted Material.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nSection 4 – Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database for NonCommercial purposes only and provided You do not Share Adapted Material;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 8.56,
          "content": "# LeetCode\n\n[![Travis](https://p.ipic.vip/hnzzr3.jpg)]() [![Travis](https://p.ipic.vip/3zihse.jpg)]() [![Travis](https://p.ipic.vip/hh8zzk.jpg)]() [![Travis](https://p.ipic.vip/gd28pb.jpg)]() ![Total visitor](https://visitor-count-badge.herokuapp.com/total.svg?repo_id=azl397985856.leetcode.en) ![Visitors in today](https://visitor-count-badge.herokuapp.com/today.svg?repo_id=azl397985856.leetcode.en)\n\n> since 2019-09-03 19:40\n\n[简体中文](./README.md) | English\n\n---\n\n![leetcode.jpeg](https://p.ipic.vip/u6nhhh.jpg)\n\nThis essay records the course of and my emotion to this project from initialization to 10,000 stars. [Milestone for 10,000+ stars](./thanksGiving.md)\n\nIf you are interested in this project, **do not mean your star**. This project will be **supported for a long enough time** by the community. Thanks for every audience and contributor.\n\n## Introduction\n\n![leetcode.jpeg](https://p.ipic.vip/u6nhhh.jpg)\n\nLeetCode Solutions: A Journey of Problem Solving.\n\nThis repository is divided into five parts for now:\n\n- The first part is the solutions to some classic problems on LeetCode, including the idea thinkings, key points and code implementations.\n\n- The second part is a summary of data structures and algorithms.\n\n- The third part is [Anki flashcards](https://apps.ankiweb.net) that organizes the LeetCode problems in a certain way to make it easier to remember.\n\n- The fourth part is daily challenges which were held at group chat. We usually solve one problem altogether to get more feedback. Moreover, the problems can be drafted to add to the problem solving module.\n\n- The fifth part is a future planning on content that will be introduced into the above parts.\n\n> Only when having mastered the basic data structures and algorithms can you solve complex problems easily.\n\n## About me\n\nI, a programmer, am all passionate about technology.\n\nUsed to write `.net` and `Java`, I am a frontend engineer and focused on the engineering, optimization and standardization for frontend.\n\nIf you want to do some contributions or collaborations, just feel free to contact me via [azl397985856@gmail.com].\n\n## Usage Instructions\n\n- For the parts that were added recently, there will be a behind.\n- For the parts that were updated recently, there will be a 🖊 behind.\n- Here will be the place to update Anki Flashcards in the future as well.\n- Here is a mind mapping graph showing the summary of categorizations of problems that are questioned frequently in interviews. We could analyze according to the information in the graph.\n\n![leetcode-zhihu](https://p.ipic.vip/58vm3a.jpg)\n\n(Picture credited by [LeetCode-cn](https://www.zhihu.com/question/24964987/answer/586425979).)\n\nThe algorithms mainly include:\n\n- Basic skills: Divide-and-Conquer; Binary; Greedy\n- Sorting algorithms: Quicksort; Merge Sort; Counting Sort\n- Searching algorithms: Backtracking; Recursion; Depth-First-Search (DFS); Breath-First-Search (BFS); Binary Search Tree; etc.\n- Graph theory: Shortest Path Problem; Minimal Spanning Tree\n- Dynamic Programming: Knapsack Problem; Longest Common Subsequence (LCS) Problem\n\nThe data structures mainly include:\n\n- Array and linked list: Singly/Doubly-Linked List\n- Stack and queue\n- Hash table\n- Heap: Min-Max Heap\n- Tree and Graph: Lowest Common Ancestor (LCA); Disjoint-Set\n- String: Prefix Tree (Trie); Suffix Tree\n\n## Previews (Translation in Progress)\n\n[0547.friend-circles](./problems/547.friend-circles-en.md) :\n\n![friend circle BFS](https://p.ipic.vip/5gg5y0.jpg)\n\n[backtrack problems](./problems/90.subsets-ii-en.md):\n\n![backtrack](https://p.ipic.vip/w5g03x.jpg)\n\n[0454.4-sum-ii](./problems/454.4-sum-ii.en.md) :\n\n![454.4-sum-ii](https://p.ipic.vip/vaniw4.jpg)\n\n## Portals\n\n### Solutions to LeetCode Classic Problems\n\n> Here only lists some **representative problems** but not all.\n\n#### Easy\n\n- [Easy Collection](https://github.com/azl397985856/leetcode/blob/master/collections/easy.en.md)\n\n#### Medium (Translation in Progress)\n\n- [0002. Add Two Numbers](./problems/2.add-two-numbers.en.md)\n- [0078.subsets](./problems/78.subsets-en.md)\n- [0079.word-search](./problems/79.word-search-en.md)\n- [0086.partition-list](./problems/86.partition-list.md)\n- [0090.subsets-ii](./problems/90.subsets-ii-en.md)\n\n* [0474.ones-and-zeros](./problems/474.ones-and-zeros-en.md)\n\n* [0547.friend-circles](./problems/547.friend-circles-en.md)\n* [0560.subarray-sum-equals-k](./problems/560.subarray-sum-equals-k.en.md)\n\n* [1011.capacity-to-ship-packages-within-d-days](./problems/1011.capacity-to-ship-packages-within-d-days-en.md)\n\n* [1371.find-the-longest-substring-containing-vowels-in-even-counts](./problems/1371.find-the-longest-substring-containing-vowels-in-even-counts.en.md)\n\n#### Hard (Translation in Progress)\n\n- [0025.reverse-nodes-in-k-group](./problems/25.reverse-nodes-in-k-groups-en.md)\n- [0042.trapping-rain-water](./problems/42.trapping-rain-water.en.md)🆕\n- [1168.optimize-water-distribution-in-a-village](./problems/1168.optimize-water-distribution-in-a-village-en.md)\n\n### Summary of Data Structures and Algorithm\n\n- [Basic data structure (overview)](./thinkings/basic-data-structure.en.md)\n- [I have almost finished brushing all the linked topics of Lixu, and I found these things. 。 。](./thinkings/linked-list.en.md)\n- [I have almost finished brushing all the tree questions of Lixu, and I found these things. 。 。](./thinkings/tree.en.md)\n- [堆专题（上）](./thinkings/heap.en.md) (WIP)\n- [I have almost finished brushing all the piles of questions, and I found these things. 。 。 (Second bullet)](./thinkings/heap-2.en.md)\n- [I have almost finished brushing all the two-point questions of Lixiu, and I found these things. 。 。 (Part 1)](./thinkings/binary-search-1.en.md)\n- [I have almost finished brushing all the two-point questions of Lixiu, and I found these things. 。 。 (Part 2)](./thinkings/binary-search-2.en.md)\n\n<!-- - [基础算法](./thinkings/basic-algorithm.md) -->\n\n- [Dynamic Programming](./thinkings/dynamic-programming.en.md)\n- [Search Problems](./thinkings/search.en.md)\n- [Binary Tree Traversal](./thinkings/binary-tree-traversal.en.md)\n- [Backtracking](./thinkings/backtrack.en.md)\n- [Run code and Huffman code](./thinkings/run-length-encode-and-huffman-encode.en.md)\n- [Bloom filter](./thinkings/bloom-filter.en.md)🖊\n- [Trie](./thinkings/trie.en.md)🖊\n- [滑动窗口（思路 + 模板）](./thinkings/slide-window.en.md) (WIP)\n- [Bit Operation](./thinkings/bit.en.md)\n- [Kojima Question](./thinkings/island.en.md)🖊\n- [GCD Problems](./thinkings/GCD.en.md)\n- [Union Find (Disjoint Set) Problem](./thinkings/union-find.en.md)\n- [Balanced Binary Tree](./thinkings/balanced-tree.en.md)\n- [Reservoir Sampling](./thinkings/reservoid-sampling.en.md)\n- [Monotonic stack](./thinkings/monotone-stack.en.md)\n\n### Anki Flashcards\n\nAnki falshcards would be mainly two parts: the mappings from key points to problems; the mappings from problems to idea thinks, key points and code implementations.\n\nAll flashcards are put in [anki-card](./assets/anki/leetcode.apkg).\n\n> Please check [here](https://apps.ankiweb.net/) for more about the usage of Anki.\n\nLatest updated flashcards (only lists the front page):\n\n- What is the key point of the binary search algorithm? Related problems?\n- How to simplify the operations using the features of stacks? Related problems?\n- The thinkings and related problems of double-pointers problems?\n- The thinkings and related problems of sliding window problems?\n- The thinkings and related problems of backtracking?\n- The thinkings and related problems of number theory?\n- The thinkings and related problems of bit operations?\n\n> WIP: the translation of the flashcards are on the way.\n\n> problems added：#2 #3 #11\n\n## Community Chat Groups\n\nWe're still on the early stage, so feedback from community is very welcome. For sake of reducing the costs of communication, I created some chat groups.\n\n### Telegram\n\n[http://t.me/leetcode_intl](http://t.me/leetcode_intl)\n\n### QQ (For China Region)\n\n![qq-group-chat](https://p.ipic.vip/k88y70.jpg)\n\n### WeChat (For China Region)\n\n![wechat-group-chat](https://p.ipic.vip/d621ys.jpg)\n\n(Add this bot and reply \"leetcode\" to join the group.)\n\n## Contribution\n\n- If you have any ideas, [Issues](https://github.com/azl397985856/leetcode/issues) or chat in groups.\n- If you want to commit to the repository, Pull Request is welcome. Here is the [CONTRIBUTION GUIDE](./CONTRIBUTING.en.md)\n- If you want to edit images resources in this project, [here](./assets/drawio/) lists the files that can be edited on [draw.io](https://www.draw.io/).\n\n## Thank you\n\nA big Thank you to every [contributor](https://github.com/azl397985856/leetcode/graphs/contributors) of this project.\n\n## License\n\n[Apache-2.0](./LICENSE.txt)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 40.87,
          "content": "# LeetCode\n\n[![Travis](https://p.ipic.vip/k4pv1r.jpg)]() [![Travis](https://p.ipic.vip/32nfgh.jpg)]() [![Travis](https://p.ipic.vip/4a36ao.jpg)]() [![Travis](https://p.ipic.vip/fd1f82.jpg)]() [![Travis](https://p.ipic.vip/mhz5uy.jpg)]() [![Travis](https://p.ipic.vip/gp1hvz.jpg)]()\n\n[![](https://img.shields.io/badge/WeChat-微信群-brightgreen)](#哪里能找到我) [![](https://img.shields.io/badge/公众号-力扣加加-blueviolet)](#哪里能找到我) [![](https://img.shields.io/badge/Juejin-掘金-blue)](https://p.ipic.vip/pj4t8y.jpg) [![](https://img.shields.io/badge/Zhihu-知乎-blue)](https://p.ipic.vip/n9co7k.jpg) [![](https://img.shields.io/badge/bilili-哔哩哔哩-ff69b4)](https://p.ipic.vip/m7g3to.jpg)\n\n简体中文 | [English](./README.en.md)\n\n---\n\n我们的 slogan 是： **只有熟练掌握基础的数据结构与算法，才能对复杂问题迎刃有余。**\n\n[![Star History Chart](https://api.star-history.com/svg?repos=azl397985856/leetcode&type=Date)](https://star-history.com/#azl397985856/leetcode&Date)\n\n## 🔥🔥🔥 我的《算法通关之路》出版了 🔥🔥🔥\n\n我的新书《算法通关之路》出版了。\n\n<img src=\"https://p.ipic.vip/zo8cz5.jpg\" height=\"300\">\n\n- [实体版购书链接 1](https://union-click.jd.com/jdc?e=618%7Cpc%7C&p=JF8BAN4JK1olXwUFU1xcAUoRA18IGFMXXgQDUG4ZVxNJXF9RXh5UHw0cSgYYXBcIWDoXSQVJQwYBXFxeCkoTHDZNRwYlQ1J3BB0EWEl0QhkIH1xMBXBlDyQ1TkcbM244G1oUXQ4HU1tbDXsnA2g4STXN67Da8e9B3OGY1uefK1olXQEEUFhYCkgSAWwOHmsSXQ8yDwszD0sSUDtbGAlCDVJVAW5tOEgnBG8BD11nHFQWUixtOEsnAF9KdV5AWQcDB1cPDktEAWpfSwhFXwUDUllVDkMVATxbHVwWbQQDVVpUOHs)\n\n- [实体版购书链接 2](https://union-click.jd.com/jdc?e=618|pc|&p=JF8BAM0JK1olXDYCV1ZfC0kWB19MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksUC20LGVoRQl9HCANtQDt-RAZPBQFwJ0ZEA1hDWh9wdTB2a1cZbQcyVF9cCEMSBGoOHmslXQEyAjBdCUoWAm4NG14WbQcyVFlYDk4eBG8LG1gUXzYFVFdtUx55BG8NSA9GXlRVBAoKXXsnM2w4HFscEEdQGW5tCHsUMy1mE14WDQcCUVxfWk9EBmkOSQsWDwVSVwpcWEoXUG5aElslXwcDUFdt)\n\n- [电子版购书链接](https://union-click.jd.com/jdc?e=&p=JF8BAL0JK1olXDYAVVhfD04UAl9MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFkkWBW0PHlgUQl9HCANtcS0SdTFvWVt1X3BkVV4Kc0JxYRtPe1cZbQcyVF9cCEMSBGoOHmslXQEyHzBcOEonA2gKE1oVWwEKXV5cAXsQA2Y4QA57WgYHBwoOCxlAUztfTmslbQUyZG5dOEgnQQFaSQ5FWQYFB1cODhgSVDpaS1hFDwQLUlwJAU5DAWcJHWsXXAcGXW4)\n\n## 图片加载不出来如何解决？\n\n<https://github.com/fe-lucifer/fanqiang>\n## 力扣专属折扣\n\n力扣免费题目已经有了很多经典的了，也覆盖了所有的题型，只是很多公司的真题都是锁定的。个人觉得如果你准备找工作的时候，可以买一个会员。另外会员很多leetbook 也可以看，结合学习计划，效率还是蛮高的。\n\n现在力扣在每日一题基础上还搞了一个 plus 会员挑战，每天刷题可以获得积分，积分可以兑换力扣周边。\n\n<img src=\"https://p.ipic.vip/ha134p.png\" alt=\"plus 会员挑战\" height=\"200\">\n\n如果你要买力扣会员的话，这里有我的专属力扣折扣：https://leetcode.cn/premium/?promoChannel=lucifer (年度会员多送两个月会员，季度会员多送两周会员)\n## :calendar:《91 天学算法》限时活动\n\n很多教育机构宣传的 7 天，一个月搞定算法面试的，我大概都了解了下，不怎么靠谱。学习算法这东西，还是要靠积累，没有量变是不可能有质变的。还有的人选择看书，这是一个不错的选择。但是很多人选了过时的或者质量差的书，又或者不会去写书中给的练习题，导致效果很差。\n\n基于这几个原因，我组织了一个 91 天刷题活动，通过一个相对比较长的时间（91 天）给出最新的学习路径，并强制大家打卡这种高强度练习来让大家**在 91 天后遇见更好的自己**。详细活动介绍可以点下方链接查看。另外往期的讲义也在下面了，大家可以看看合不合你的口味。\n\n最后送给大家一句话： **坚持下去，会有突然间成长的一天**。\n\n[点此参与](https://github.com/azl397985856/leetcode/discussions/532)\n\n- 🔥🔥🔥🔥 [活动首页](https://leetcode-solution.cn/91) 🔥🔥🔥🔥\n- [91 第三期讲义 - 二分专题（上）](./thinkings/binary-search-1.md)\n- [91 第三期讲义 - 二分专题（下）](./thinkings/binary-search-2.md)\n\n## 1V1 辅导\n\n如果大家觉得上面的集体活动效率比较低，我目前也接受 1v1 算法辅导，价格根据你的算法基础以及想要学习的内容而定感兴趣的可以加我微信，备注“算法辅导”，微信号 DevelopeEngineer。\n\n\n## :octocat: 仓库介绍\n\nleetcode 题解，记录自己的 leetcode 解题之路。\n\n本仓库目前分为**五个**部分：\n\n- 第一个部分是 leetcode 经典题目的解析，包括思路，关键点和具体的代码实现。\n\n- 第二部分是对于数据结构与算法的总结\n\n- 第三部分是 anki 卡片， 将 leetcode 题目按照一定的方式记录在 anki 中，方便大家记忆。\n\n- 第四部分是每日一题，每日一题是在交流群（包括微信和 qq）里进行的一种活动，大家一起 解一道题，这样讨论问题更加集中，会得到更多的反馈。而且 这些题目可以被记录下来，日后会进行筛选添加到仓库的题解模块。\n\n- 第五部分是计划， 这里会记录将来要加入到以上三个部分内容\n\n## :blue_book: 电子书\n\n**注意：这里的电子书并不是《算法通关之路》的电子版，而是本仓库内容的电子版！**\n\n[在线阅读地址](https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/)\n\n**限时免费下载！后期随时可能收费**\n\n可以去我的公众号《力扣加加》后台回复电子书获取！\n\n<img src=\"https://p.ipic.vip/h9nm77.jpg\" height=\"200\">\n\n> epub 还是有动图的\n\n另外有些内容只在公众号发布，因此大家觉得内容不错的话，可以关注一下。如果再给 ➕ 个星标就更棒啦！\n\n## :meat_on_bone: 仓库食用指南\n\n- 这里有一张互联网公司面试中经常考察的问题类型总结的思维导图，我们可以结合图片中的信息分析一下。\n\n![leetcode-zhihu](https://p.ipic.vip/a20o3x.jpg)\n\n（图片来自 leetcode)\n\n其中算法，主要是以下几种：\n\n- 基础技巧：分治、二分、贪心\n- 排序算法：快速排序、归并排序、计数排序\n- 搜索算法：回溯、递归、深度优先遍历，广度优先遍历，二叉搜索树等\n- 图论：最短路径、最小生成树\n- 动态规划：背包问题、最长子序列\n\n数据结构，主要有如下几种：\n\n- 数组与链表：单 / 双向链表\n- 栈与队列\n- 哈希表\n- 堆：最大堆 ／ 最小堆\n- 树与图：最近公共祖先、并查集\n- 字符串：前缀树（字典树） ／ 后缀树\n\n我在网上找到一份 [《Interview Cheat Sheet》](./assets/cheatsheet.pdf)，这个 PDF 列举了面试的**模板步骤**。，详细指示了如何一步步完成面试。\n\n这个 pdf 开头就提到了好的代码三个标准：\n\n1. 可读性\n2. 时间复杂度\n3. 空间复杂度\n\n这写的太好了。\n\n紧接着，列举了 15 算法面试的步骤。比如步骤一：**当面试官提问完后，你需要先下来关键点（之后再下面写注释和代码）** 看完我的感受就是，**面试只要按照这个来做，成功率蹭蹭提升**\n\n## 数据结构与算法的总结\n\n- [数据结构总览](./thinkings/basic-data-structure.md)\n- [链表专题](./thinkings/linked-list.md)\n- [树专题](./thinkings/tree.md)\n- [堆专题（上）](./thinkings/heap.md)\n- [堆专题（下）](./thinkings/heap-2.md)\n- [二分专题（上）](./thinkings/binary-search-1.md)\n- [二分专题（下）](./thinkings/binary-search-2.md)\n\n<!-- - [基础算法](./thinkings/basic-algorithm.md) -->\n\n- [动态规划（重置版）](./thinkings/dynamic-programming.md)\n- [大话搜索](./thinkings/search.md)\n- [二叉树的遍历](./thinkings/binary-tree-traversal.md)\n- [回溯](./thinkings/backtrack.md)\n- [哈夫曼编码和游程编码](./thinkings/run-length-encode-and-huffman-encode.md)\n- [布隆过滤器](./thinkings/bloom-filter.md)🖊\n- [前缀树](./thinkings/trie.md)🖊\n- [《日程安排》专题](https://lucifer.ren/blog/2020/02/03/leetcode-%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%E7%B3%BB%E5%88%97/)\n- [《构造二叉树》专题](https://lucifer.ren/blog/2020/02/08/%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%93%E9%A2%98/)\n- [滑动窗口（思路 + 模板）](./thinkings/slide-window.md)\n- [位运算](./thinkings/bit.md)\n- [小岛问题](./thinkings/island.md)🖊\n- [最大公约数](./thinkings/GCD.md)\n- [并查集](./thinkings/union-find.md)\n- [平衡二叉树专题](./thinkings/balanced-tree.md)\n- [蓄水池抽样](./thinkings/reservoid-sampling.md)\n- [单调栈](./thinkings/monotone-stack.md)\n\n## :exclamation: 怎么刷 LeetCode？\n\n- [我是如何刷 LeetCode 的](https://www.zhihu.com/question/280279208/answer/824585814)\n- [算法小白如何高效、快速刷 leetcode？](https://www.zhihu.com/question/321738058/answer/1279464192)\n- [刷题效率低？或许你就差这么一个插件](https://lucifer.ren/blog/2020/06/06/algo-chrome-extension/)\n- [力扣刷题插件](https://lucifer.ren/blog/2020/08/16/leetcode-cheat/)\n\n## :computer: 插件\n\n或许是一个可以改变你刷题效率的浏览器扩展插件。\n\n插件地址：<https://chrome.google.com/webstore/detail/leetcode-cheatsheet/fniccleejlofifaakbgppmbbcdfjonle?hl=en-US>。\n\n> 不能访问谷歌商店的朋友可以去我的公众号回复插件获取离线版。强烈推荐大家使用谷歌商店安装， 这样如果有更新可以自动安装，毕竟咱们的插件更新还是蛮快的。\n\n另外大家也可以使用 zerotrac 开发的用于计算力扣中题目分数的网站。这里的分数指的是竞赛分，大家可以根据自己的竞赛分选择稍微比自己竞赛分高一点的题目进行练习，注意这个只是根据通过人数等计算的一个预估分数。地址：https://zerotrac.github.io/leetcode_problem_rating/\n\n## 精选题解\n\n- [字典序列删除](./selected/a-deleted.md)\n- [一次搞定前缀和](./selected/atMostK.md)\n- [字节跳动的算法面试题是什么难度？](./selected/byte-dance-algo-ex.md)\n- [字节跳动的算法面试题是什么难度？（第二弹）](./selected/byte-dance-algo-ex-2017.md)\n- [《我是你的妈妈呀》 - 第一期](./selected/mother-01.md)\n- [一文带你看懂二叉树的序列化](./selected/serialize.md)\n- [穿上衣服我就不认识你了？来聊聊最长上升子序列](./selected/LIS.md)\n- [你的衣服我扒了 - 《最长公共子序列》](./selected/LCS.md)\n- [一文看懂《最大子序列和问题》](./selected/LSS.md)\n\n## leetcode 经典题目的解析（200 多道）\n\n> 这里仅列举具有**代表性题目**，并不是全部题目\n\n目前更新了 200 多道题解，加上专题涉及的题目，差不多有 **300 道**。\n\n### 简单难度题目合集\n\n这里的题目难度比较小， 大多是模拟题，或者是很容易看出解法的题目，另外简单题目一般使用暴力法都是可以解决的。 这个时候只有看一下数据范围，思考下你的算法复杂度就行了。\n\n当然也不排除很多 hard 题目也可以暴力模拟，大家平时多注意数据范围即可。\n\n以下是我列举的经典题目（带 91 字样的表示出自 **91 天学算法**活动）：\n\n- [面试题 17.12. BiNode](./problems/binode-lcci.md) 👍\n- [0001. 两数之和](./problems/1.two-sum.md)\n- [0020. 有效的括号](./problems/20.valid-parentheses.md)\n- [0021. 合并两个有序链表](./problems/21.merge-two-sorted-lists.md)\n- [0026. 删除排序数组中的重复项](./problems/26.remove-duplicates-from-sorted-array.md)\n- [0053. 最大子序和](./problems/53.maximum-sum-subarray-cn.md)\n- [0066. 加一](./problems/66.plus-one.md) 91\n- [0088. 合并两个有序数组](./problems/88.merge-sorted-array.md)\n- [0101. 对称二叉树](./problems/101.symmetric-tree.md)\n- [0104. 二叉树的最大深度](./problems/104.maximum-depth-of-binary-tree.md)\n- [0108. 将有序数组转换为二叉搜索树](./problems/108.convert-sorted-array-to-binary-search-tree.md)\n- [0121. 买卖股票的最佳时机](./problems/121.best-time-to-buy-and-sell-stock.md)\n- [0122. 买卖股票的最佳时机 II](./problems/122.best-time-to-buy-and-sell-stock-ii.md)\n- [0125. 验证回文串](./problems/125.valid-palindrome.md)\n- [0136. 只出现一次的数字](./problems/136.single-number.md)\n\n- [0155. 最小栈](./problems/155.min-stack.md) 👍\n- [0160. 相交链表](./problems/160.Intersection-of-Two-Linked-Lists.md) 91\n- [0167. 两数之和 II 输入有序数组](./problems/167.two-sum-ii-input-array-is-sorted.md)\n- [0169. 多数元素](./problems/169.majority-element.md)\n- [0172. 阶乘后的零](./problems/172.factorial-trailing-zeroes.md)\n- [0190. 颠倒二进制位](./problems/190.reverse-bits.md)\n- [0191. 位 1 的个数](./problems/191.number-of-1-bits.md)\n- [0198. 打家劫舍](./problems/198.house-robber.md)\n- [0203. 移除链表元素](./problems/203.remove-linked-list-elements.md)\n- [0206. 反转链表](./problems/206.reverse-linked-list.md)\n- [0219. 存在重复元素 II](./problems/219.contains-duplicate-ii.md)\n- [0226. 翻转二叉树](./problems/226.invert-binary-tree.md)\n- [0232. 用栈实现队列](./problems/232.implement-queue-using-stacks.md) 👍 91\n- [0263. 丑数](./problems/263.ugly-number.md)\n- [0283. 移动零](./problems/283.move-zeroes.md)\n- [0342. 4 的幂](./problems/342.power-of-four.md) 👍\n- [0349. 两个数组的交集](./problems/349.intersection-of-two-arrays.md)\n- [0371. 两整数之和](./problems/371.sum-of-two-integers.md)\n- [401. 二进制手表](./problems/401.binary-watch.md)\n- [0437. 路径总和 III](./problems/437.path-sum-iii.md)\n- [0455. 分发饼干](./problems/455.AssignCookies.md)\n- [0504. 七进制数](./problems/504.base-7.md)\n- [0575. 分糖果](./problems/575.distribute-candies.md)\n- [0606. 根据二叉树创建字符串](./problems/606.construct-string-from-binary-tree.md)\n- [0661. 图片平滑器](./problems/661.image-smoother.md)\n- [0665. 非递减数列](./problems/665.non-decreasing-array.md)\n- [821. 字符的最短距离](./problems/821.shortest-distance-to-a-character.md) 91\n- [0874. 模拟行走机器人](./problems/874.walking-robot-simulation.md)\n- [1128. 等价多米诺骨牌对的数量](./problems/1128.number-of-equivalent-domino-pairs.md)\n- [1260. 二维网格迁移](./problems/1260.shift-2d-grid.md)\n- [1332. 删除回文子序列](./problems/1332.remove-palindromic-subsequences.md)\n- [2591. 将钱分给最多的儿童](./problems/2591.distribute-money-to-maximum-children.md)\n\n\n### 中等难度题目合集\n\n中等题目是力扣比例最大的部分，因此这部分我的题解也是最多的。 大家不要太过追求难题，先把中等难度题目做熟了再说。\n\n这部分的题目要不需要我们挖掘题目的内含信息， 将其抽象成简单题目。 要么是一些写起来比较麻烦的题目， 一些人编码能力不行就挂了。因此大家一定要自己做， 即使看了题解 ”会了“，也要自己码一遍。自己不亲自写一遍，里面的细节永远不知道。\n\n以下是我列举的经典题目（带 91 字样的表示出自 **91 天学算法**活动）：\n\n- [面试题 17.09. 第 k 个数](./problems/get-kth-magic-number-lcci.md)\n- [面试题 17.23. 最大黑方阵](./problems/max-black-square-lcci.md)\n- [面试题 16.16. 部分排序](./problems/sub-sort-lcci.md)\n- [Increasing Digits](./problems/Increasing-Digits.md) 👍\n- [Longest Contiguously Strictly Increasing Sublist After Deletion](./problems/Longest-Contiguously-Strictly-Increasing-Sublist-After-Deletion.md) 👍\n- [Consecutive Wins](./problems/consecutive-wins.md)\n- [Sort-String-by-Flipping](./problems/Sort-String-by-Flipping.md)\n- [Number of Substrings with Single Character Difference](./problems/Number-of-Substrings-with-Single-Character-Difference.md)\n- [Bus Fare](./problems/Bus-Fare.md) 👍\n- [Minimum Dropping Path Sum](./problems/Minimum-Dropping-Path-Sum.md)\n- [Longest-Matrix-Path-Length](./problems/Longest-Matrix-Path-Length.md)\n- [Every Sublist Min Sum](./problems/Every-Sublist-Min-Sum.md)\n- [Maximize the Number of Equivalent Pairs After Swaps](./problems/Maximize-the-Number-of-Equivalent-Pairs-After-Swaps.md)\n\n- [0002. 两数相加](./problems/2.add-two-numbers.md)\n- [0003. 无重复字符的最长子串](./problems/3.longest-substring-without-repeating-characters.md)\n- [0005. 最长回文子串](./problems/5.longest-palindromic-substring.md)\n- [0011. 盛最多水的容器](./problems/11.container-with-most-water.md)\n- [0015. 三数之和](./problems/15.3sum.md)\n- [0017. 电话号码的字母组合](./problems/17.Letter-Combinations-of-a-Phone-Number.md)\n- [0019. 删除链表的倒数第 N 个节点](./problems/19.removeNthNodeFromEndofList.md)\n- [0022. 括号生成](./problems/22.generate-parentheses.md)\n- [0024. 两两交换链表中的节点](./problems/24.swapNodesInPairs.md)\n- [0029. 两数相除](./problems/29.divide-two-integers.md)\n- [0031. 下一个排列](./problems/31.next-permutation.md)\n- [0033. 搜索旋转排序数组](./problems/33.search-in-rotated-sorted-array.md)\n- [0039. 组合总和](./problems/39.combination-sum.md)\n- [0040. 组合总和 II](./problems/40.combination-sum-ii.md)\n- [0046. 全排列](./problems/46.permutations.md)\n- [0047. 全排列 II](./problems/47.permutations-ii.md)\n- [0048. 旋转图像](./problems/48.rotate-image.md)\n- [0049. 字母异位词分组](./problems/49.group-anagrams.md)\n- [0050. Pow(x, n)](./problems/50.pow-x-n.md) 👍\n- [0055. 跳跃游戏](./problems/55.jump-game.md)\n- [0056. 合并区间](./problems/56.merge-intervals.md)\n- [0060. 第 k 个排列](./problems/60.permutation-sequence.md) 👍\n- [0061. 旋转链表](./problems/61.Rotate-List.md) 91\n- [0062. 不同路径](./problems/62.unique-paths.md)\n- [0073. 矩阵置零](./problems/73.set-matrix-zeroes.md)\n- [0075. 颜色分类](./problems/75.sort-colors.md) 👍\n- [0078. 子集](./problems/78.subsets.md)\n- [0079. 单词搜索](./problems/79.word-search.md)\n- [0080. 删除排序数组中的重复项 II](./problems/80.remove-duplicates-from-sorted-array-ii.md)\n- [0086. 分隔链表](./problems/86.partition-list.md)\n- [0090. 子集 II](./problems/90.subsets-ii.md)\n- [0091. 解码方法](./problems/91.decode-ways.md)\n- [0092. 反转链表 II](./problems/92.reverse-linked-list-ii.md)\n- [0094. 二叉树的中序遍历](./problems/94.binary-tree-inorder-traversal.md) 👍\n- [0095. 不同的二叉搜索树 II](./problems/95.unique-binary-search-trees-ii.md)\n- [0096. 不同的二叉搜索树](./problems/96.unique-binary-search-trees.md)\n- [0098. 验证二叉搜索树](./problems/98.validate-binary-search-tree.md)\n- [0102. 二叉树的层序遍历](./problems/102.binary-tree-level-order-traversal.md)\n- [0103. 二叉树的锯齿形层次遍历](./problems/103.binary-tree-zigzag-level-order-traversal.md)\n- [0113. 路径总和 II](./problems/113.path-sum-ii.md)\n- [0129. 求根到叶子节点数字之和](./problems/129.sum-root-to-leaf-numbers.md) 👍\n- [0130. 被围绕的区域](./problems/130.surrounded-regions.md)\n- [0131. 分割回文串](./problems/131.palindrome-partitioning.md)\n- [0139. 单词拆分](./problems/139.word-break.md)\n- [0144. 二叉树的前序遍历](./problems/144.binary-tree-preorder-traversal.md)\n- [0147. 对链表进行插入排序](./problems/147.insertion-sort-list.md)\n- [0150. 逆波兰表达式求值](./problems/150.evaluate-reverse-polish-notation.md)\n- [0152. 乘积最大子数组](./problems/152.maximum-product-subarray.md)\n- [0153. 寻找旋转排序数组中的最小值](./problems/153.find-minimum-in-rotated-sorted-array.md)\n- [0199. 二叉树的右视图](./problems/199.binary-tree-right-side-view.md) 👍\n- [0200. 岛屿数量](./problems/200.number-of-islands.md) 👍\n- [0201. 数字范围按位与](./problems/201.bitwise-and-of-numbers-range.md)\n- [0208. 实现 Trie （前缀树）](./problems/208.implement-trie-prefix-tree.md)\n- [0209. 长度最小的子数组](./problems/209.minimum-size-subarray-sum.md)\n- [0211. 添加与搜索单词 - 数据结构设计](./problems/211.add-and-search-word-data-structure-design.md)\n- [0215. 数组中的第 K 个最大元素](./problems/215.kth-largest-element-in-an-array.md)\n- [0220. 存在重复元素 III](./problems/220.contains-duplicate-iii.md)\n- [0221. 最大正方形](./problems/221.maximal-square.md)\n- [0227. 基本计算器 II](./problems/227.basic-calculator-ii.md)\n- [0229. 求众数 II](./problems/229.majority-element-ii.md)\n- [0230. 二叉搜索树中第 K 小的元素](./problems/230.kth-smallest-element-in-a-bst.md)\n- [0236. 二叉树的最近公共祖先](./problems/236.lowest-common-ancestor-of-a-binary-tree.md)\n- [0238. 除自身以外数组的乘积](./problems/238.product-of-array-except-self.md)\n- [0240. 搜索二维矩阵 II](./problems/240.search-a-2-d-matrix-ii.md)\n- [0279. 完全平方数](./problems/279.perfect-squares.md)\n- [0309. 最佳买卖股票时机含冷冻期](./problems/309.best-time-to-buy-and-sell-stock-with-cooldown.md)\n- [0322. 零钱兑换](./problems/322.coin-change.md) 👍\n- [0324. 摆动排序 II](./problems/324.wiggle-sort-ii.md)\n- [0328. 奇偶链表](./problems/328.odd-even-linked-list.md)\n- [0331. 验证二叉树的前序序列化](./problems/331.verify-preorder-serialization-of-a-binary-tree.md)\n- [0334. 递增的三元子序列](./problems/334.increasing-triplet-subsequence.md)\n- [0337. 打家劫舍 III](./problems/337.house-robber-iii.md)\n- [0343. 整数拆分](./problems/343.integer-break.md)\n- [0365. 水壶问题](./problems/365.water-and-jug-problem.md)\n- [0378. 有序矩阵中第 K 小的元素](./problems/378.kth-smallest-element-in-a-sorted-matrix.md)\n- [0380. 常数时间插入、删除和获取随机元素](./problems/380.insert-delete-getrandom-o1.md)\n- [0385. 迷你语法分析器](./problems/385.mini-parser.md)\n- [0394. 字符串解码](./problems/394.decode-string.md) 91\n- [0416. 分割等和子集](./problems/416.partition-equal-subset-sum.md)\n- [0424. 替换后的最长重复字符](./problems/424.longest-repeating-character-replacement.md)\n- [0438. 找到字符串中所有字母异位词](./problems/438.find-all-anagrams-in-a-string.md)\n- [0445. 两数相加 II](./problems/445.add-two-numbers-ii.md)\n- [0454. 四数相加 II](./problems/454.4-sum-ii.md)\n- [0456. 132 模式](./problems/456.132-pattern.md)\n- [0457.457. 环形数组是否存在循环](./problems/457.circular-array-loop.md)\n- [0464. 我能赢么](./problems/464.can-i-win.md)\n- [0470. 用 Rand7() 实现 Rand10](./problems/470.implement-rand10-using-rand7.md)\n- [0473. 火柴拼正方形](./problems/473.matchsticks-to-square.md) 👍\n- [0494. 目标和](./problems/494.target-sum.md)\n- [0516. 最长回文子序列](./problems/516.longest-palindromic-subsequence.md)\n- [0513. 找树左下角的值](./problems/513.find-bottom-left-tree-value.md) 91\n- [0518. 零钱兑换 II](./problems/518.coin-change-2.md)\n- [0525. 连续数组](./problems/525.contiguous-array.md)\n- [0547. 省份数量](./problems/547.number-of-provinces.md)\n- [0560. 和为 K 的子数组](./problems/560.subarray-sum-equals-k.md)\n- [0609. 在系统中查找重复文件](./problems/609.find-duplicate-file-in-system.md)\n- [0611. 有效三角形的个数](./problems/611.valid-triangle-number.md) 👍\n- [0673. 最长递增子序列的个数](./problems/673.number-of-longest-increasing-subsequence.md)\n- [0686. 重复叠加字符串匹配](./problems/686.repeated-string-match.md)\n- [0710. 黑名单中的随机数](./problems/710.random-pick-with-blacklist.md)\n- [0714. 买卖股票的最佳时机含手续费](./problems/714.best-time-to-buy-and-sell-stock-with-transaction-fee.md)\n- [0718. 最长重复子数组](./problems/718.maximum-length-of-repeated-subarray.md)\n- [0735. 行星碰撞](./problems/735.asteroid-collision.md) 👍\n- [0754. 到达终点数字](./problems/754.reach-a-number.md)\n- [0785. 判断二分图](./problems/785.is-graph-bipartite.md)\n- [0790. 多米诺和托米诺平铺](./problems/790.domino-and-tromino-tiling.md)\n- [0799. 香槟塔](./problems/799.champagne-tower.md)\n- [0801. 使序列递增的最小交换次数](./problems/801.minimum-swaps-to-make-sequences-increasing.md)\n- [0816. 模糊坐标](./problems/816.ambiguous-coordinates.md)\n- [0820. 单词的压缩编码](./problems/820.short-encoding-of-words.md)\n- [0838. 推多米诺](./problems/838.push-dominoes.md)\n- [0873. 最长的斐波那契子序列的长度](./problems/873.length-of-longest-fibonacci-subsequence.md)\n- [0875. 爱吃香蕉的珂珂](./problems/875.koko-eating-bananas.md)\n- [0877. 石子游戏](./problems/877.stone-game.md)\n- [0886. 可能的二分法](./problems/886.possible-bipartition.md)\n- [0898. 子数组按位或操作](./problems/898.bitwise-ors-of-subarrays.md)\n- [0900. RLE 迭代器](./problems/900.rle-iterator.md)\n- [0911. 在线选举](./problems/911.online-election.md)\n- [0912. 排序数组](./problems/912.sort-an-array.md)\n- [0918. 环形子数组的最大和](./problems/918.maximum-sum-circular-subarray.md) 👍\n- [0932. 漂亮数组](./problems/932.beautiful-array.md)\n- [0935. 骑士拨号器](./problems/935.knight-dialer.md)\n- [0947. 移除最多的同行或同列石头](./problems/947.most-stones-removed-with-same-row-or-column.md)\n- [0959. 由斜杠划分区域](./problems/959.regions-cut-by-slashes.md)\n- [0978. 最长湍流子数组](./problems/978.longest-turbulent-subarray.md)\n- [0987. 二叉树的垂序遍历](./problems/987.vertical-order-traversal-of-a-binary-tree.md) 91\n- [1004. 最大连续 1 的个数 III](./problems/1004.max-consecutive-ones-iii.md)\n- [1011. 在 D 天内送达包裹的能力](./problems/1011.capacity-to-ship-packages-within-d-days.md)\n- [1014. 最佳观光组合](./problems/1014.best-sightseeing-pair.md)\n- [1015. 可被 K 整除的最小整数](./problems/1015.smallest-integer-divisible-by-k.md)\n- [1019. 链表中的下一个更大节点](./problems/1019.next-greater-node-in-linked-list.md)\n- [1020. 飞地的数量](./problems/1020.number-of-enclaves.md)\n- [1023. 驼峰式匹配](./problems/1023.camelcase-matching.md)\n- [1031. 两个非重叠子数组的最大和](./problems/1031.maximum-sum-of-two-non-overlapping-subarrays.md)\n- [1043. 分隔数组以得到最大和](./problems/1043.partition-array-for-maximum-sum.md)\n- [1053. 交换一次的先前排列)](./problems/1053.previous-permutation-with-one-swap.md)\n- [1104. 二叉树寻路](./problems/1104.path-in-zigzag-labelled-binary-tree.md)\n- [1129. 颜色交替的最短路径](./problems/1129.shortest-path-with-alternating-colors.md)\n- [1131. 绝对值表达式的最大值](./problems/1131.maximum-of-absolute-value-expression.md)\n- [1138. 字母板上的路径](./problems/1138.alphabet-board-path.md)\n- [1186. 删除一次得到子数组最大和](./problems/1186.maximum-subarray-sum-with-one-deletion.md)\n- [1218. 最长定差子序列](./problems/1218.longest-arithmetic-subsequence-of-given-difference.md)\n- [1227. 飞机座位分配概率](./problems/1227.airplane-seat-assignment-probability.md) 👍\n- [1261. 在受污染的二叉树中查找元素](./problems/1261.find-elements-in-a-contaminated-binary-tree.md)\n- [1262. 可被三整除的最大和](./problems/1262.greatest-sum-divisible-by-three.md)\n- [1297. 子串的最大出现次数](./problems/1297.maximum-number-of-occurrences-of-a-substring.md)\n- [1310. 子数组异或查询](./problems/1310.xor-queries-of-a-subarray.md)\n- [1334. 阈值距离内邻居最少的城市](./problems/1334.find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance.md)\n- [1371. 每个元音包含偶数次的最长子字符串](./problems/1371.find-the-longest-substring-containing-vowels-in-even-counts.md)\n- [1381. 设计一个支持增量操作的栈](./problems/1381.design-a-stack-with-increment-operation.md) 91\n- [1423. 可获得的最大点数](./problems/1423.maximum-points-you-can-obtain-from-cards.md)\n- [1438. 绝对差不超过限制的最长连续子数组](./problems/1438.longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.md)\n- [1558. 得到目标数组的最少函数调用次数](./problems/1558.minimum-numbers-of-function-calls-to-make-target-array.md)\n- [1574. 删除最短的子数组使剩余数组有序](./problems/1574.shortest-subarray-to-be-removed-to-make-array-sorted.md)\n- [1589. 所有排列中的最大和](./problems/1589.maximum-sum-obtained-of-any-permutation.md)\n- [1631. 最小体力消耗路径](./problems/1631.path-with-minimum-effort.md)\n- [1638. 统计只差一个字符的子串数目](./problems/1638.count-substrings-that-differ-by-one-character.md)\n- [1658. 将 x 减到 0 的最小操作数](./problems/1658.minimum-operations-to-reduce-x-to-zero.md)\n- [1697. 检查边长度限制的路径是否存在](./problems/1697.checking-existence-of-edge-length-limited-paths.md)\n- [1737. 满足三条件之一需改变的最少字符数](./problems/1737.change-minimum-characters-to-satisfy-one-of-three-conditions.md) 👍\n- [1770. 执行乘法运算的最大分数](./problems/1770.maximum-score-from-performing-multiplication-operations.md) 👍 91\n- [1793. 好子数组的最大分数](./problems/1793.maximum-score-of-a-good-subarray.md) \n- [1834. 单线程 CPU](./problems/1834.single-threaded-cpu.md)\n- [1899. 合并若干三元组以形成目标三元组](./problems/1899.merge-triplets-to-form-target-triplet.md) 👍\n- [1904. 你完成的完整对局数](./problems/1904.the-number-of-full-rounds-you-have-played.md)\n- [1906. 查询差绝对值的最小值](./problems/1906.minimum-absolute-difference-queries.md)\n- [2007. 从双倍数组中还原原数组](./problems/2007.find-original-array-from-doubled-array.md)\n- [2008. 出租车的最大盈利](./problems/2008.maximum-earnings-from-taxi.md)\n- [2100. 适合打劫银行的日子](./problems/5935.find-good-days-to-rob-the-bank.md)\n- [2101. 引爆最多的炸弹](./problems/5936.detonate-the-maximum-bombs.md)\n- [2121. 相同元素的间隔之和](./problems/5965.intervals-between-identical-elements.md)\n- [2207. 字符串中最多数目的子字符串](./problems/6201.maximize-number-of-subsequences-in-a-string.md)\n- [2592. 最大化数组的伟大值](./problems/2592.maximize-greatness-of-an-array.md)\n- [2593. 标记所有元素后数组的分数](./problems/2593.find-score-of-an-array-after-marking-all-elements.md)\n- [2817. 限制条件下元素之间的最小绝对差](./problems/2817.minimum-absolute-difference-between-elements-with-constraint.md)\n- [2865. 美丽塔 I](./problems/2865.beautiful-towers-i.md)\n- [2866. 美丽塔 II](./problems/2866.beautiful-towers-ii.md)\n- [2939. 最大异或乘积](./problems/2939.maximum-xor-product.md)\n- [3377. 使两个整数相等的数位操作](./problems/3377.digit-operations-to-make-two-integers-equal.md)\n### 困难难度题目合集\n\n困难难度题目从类型上说多是：\n\n- 图 \n- 设计题\n- 游戏场景题目\n- 中等题目的 follow up\n\n从解法上来说，多是：\n\n- 图算法\n- 动态规划\n- 二分法\n- DFS & BFS\n- 状态压缩\n- 剪枝\n\n从逻辑上说， 要么就是非常难想到，要么就是非常难写代码。 由于有时候需要组合多种算法，因此这部分题目的难度是最大的。\n\n这里我总结了几个技巧：\n\n1. 看题目的数据范围， 看能否暴力模拟\n2. 暴力枚举所有可能的算法往上套，比如图的题目。\n3. 对于代码非常难写的题目，可以总结和记忆解题模板，减少解题压力\n4. 对于组合多种算法的题目，先尝试简化问题，将问题划分成几个小问题，然后再组合起来。\n\n以下是我列举的经典题目（带 91 字样的表示出自 **91 天学算法**活动）：\n\n- [LCP 20. 快速公交](./problems/lcp20.meChtZ.md)\n- [LCP 21. 追逐游戏](./problems/lcp21.Za25hA.md) 👍\n- [Number Stream to Intervals](./problems/Number-Stream-to-Intervals.md)\n- [Triple Inversion](./problems/Triple-Inversion.md) 91\n- [Kth Pair Distance](./problems/Kth-Pair-Distance.md) 91\n- [Minimum Light Radius](./problems/Minimum-Light-Radius.md) 91\n- [Largest Equivalent Set of Pairs](./problems/Largest-Equivalent-Set-of-Pairs.md) 👍\n- [Ticket-Order.md](./problems/Ticket-Order.md)\n- [Connected-Road-to-Destination](./problems/Connected-Road-to-Destination.md)\n\n- [0004. 寻找两个正序数组的中位数](./problems/4.median-of-two-sorted-arrays.md) 👍\n- [0023. 合并 K 个升序链表](./problems/23.merge-k-sorted-lists.md)\n- [0025. K 个一组翻转链表](./problems/25.reverse-nodes-in-k-groups.md) 👍\n- [0030. 串联所有单词的子串](./problems/30.substring-with-concatenation-of-all-words.md)\n- [0032. 最长有效括号](./problems/32.longest-valid-parentheses.md)\n- [0042. 接雨水](./problems/42.trapping-rain-water.md)\n- [0052. N 皇后 II](./problems/52.N-Queens-II.md)\n- [0057. 插入区间](problems/57.insert-interval.md)\n- [0065. 有效数字](problems/65.valid-number.md)\n- [0084. 柱状图中最大的矩形](./problems/84.largest-rectangle-in-histogram.md)\n- [0085. 最大矩形](./problems/85.maximal-rectangle.md)\n- [0087. 扰乱字符串](./problems/87.scramble-string.md)\n- [0124. 二叉树中的最大路径和](./problems/124.binary-tree-maximum-path-sum.md)\n- [0128. 最长连续序列](./problems/128.longest-consecutive-sequence.md)\n- [0132. 分割回文串 II](./problems/132.palindrome-partitioning-ii.md) 👍\n- [0140. 单词拆分 II](problems/140.word-break-ii.md)\n- [0145. 二叉树的后序遍历](./problems/145.binary-tree-postorder-traversal.md)\n- [0146. LRU 缓存机制](./problems/146.lru-cache.md)\n- [0154. 寻找旋转排序数组中的最小值 II](./problems/154.find-minimum-in-rotated-sorted-array-ii.md)\n- [0212. 单词搜索 II](./problems/212.word-search-ii.md)\n- [0239. 滑动窗口最大值](./problems/239.sliding-window-maximum.md) 👍\n- [0295. 数据流的中位数](./problems/295.find-median-from-data-stream.md)\n- [0297. 二叉树的序列化与反序列化](./problems/297.serialize-and-deserialize-binary-tree.md) 91\n- [0301. 删除无效的括号](./problems/301.remove-invalid-parentheses.md)\n- [0312. 戳气球](./problems/312.burst-balloons.md)\n- [330. 按要求补齐数组](./problems/330.patching-array.md)\n\n- [0335. 路径交叉](./problems/335.self-crossing.md)\n- [0460. LFU 缓存](./problems/460.lfu-cache.md)\n- [0472. 连接词](./problems/472.concatenated-words.md)\n- [0480. 滑动窗口中位数](./problems/480.sliding-window-median.md)\n- [0483. 最小好进制](./problems/483.smallest-good-base.md)\n- [0488. 祖玛游戏](./problems/488.zuma-game.md)\n- [0493. 翻转对](./problems/493.reverse-pairs.md)\n- [0664. 奇怪的打印机](./problems/664.strange-printer.md)\n- [0679. 24 点游戏](./problems/679.24-game.md)\n- [0715. Range 模块](./problems/715.range-module.md) 👍\n- [0726. 原子的数量](./problems/726.number-of-atoms.md)\n- [0768. 最多能完成排序的块 II](./problems/768.max-chunks-to-make-sorted-ii.md) 91\n- [0805. 数组的均值分割](./problems/805.split-array-with-same-average.md)\n- [0839. 相似字符串组](./problems/839.similar-string-groups.md)\n- [0887. 鸡蛋掉落](./problems/887.super-egg-drop.md)\n- [0895. 最大频率栈](./problems/895.maximum-frequency-stack.md)\n- [0909. 蛇梯棋](./problems/909.snakes-and-ladders.md)\n- [0975. 奇偶跳](./problems/975.odd-even-jump.md)\n- [0995. K 连续位的最小翻转次数](./problems/995.minimum-number-of-k-consecutive-bit-flips.md)\n- [1032. 字符流](./problems/1032.stream-of-characters.md)\n- [1168. 水资源分配优化](./problems/1168.optimize-water-distribution-in-a-village.md)\n- [1178. 猜字谜](./problems/1178.number-of-valid-words-for-each-puzzle.md)\n- [1203. 项目管理](./problems/1203.sort-items-by-groups-respecting-dependencies.md)\n- [1255. 得分最高的单词集合](./problems/1255.maximum-score-words-formed-by-letters.md)\n- [1345. 跳跃游戏 IV](./problems/1435.jump-game-iv.md)\n- [1449. 数位成本和为目标值的最大数字](./problems/1449.form-largest-integer-with-digits-that-add-up-to-target.md)\n- [1494. 并行课程 II](./problems/1494.parallel-courses-ii.md)\n- [1521. 找到最接近目标值的函数值](./problems/1521.find-a-value-of-a-mysterious-function-closest-to-target.md)\n- [1526. 形成目标数组的子数组最少增加次数](./problems/1526.minimum-number-of-increments-on-subarrays-to-form-a-target-array.md)\n- [1639. 通过给定词典构造目标字符串的方案数](./problems/1639.number-of-ways-to-form-a-target-string-given-a-dictionary.md) new\n- [1649. 通过指令创建有序数组](./problems/1649.create-sorted-array-through-instructions.md)\n- [1671. 得到山形数组的最少删除次数](./problems/1671.minimum-number-of-removals-to-make-mountain-array.md)\n- [1707. 与数组中元素的最大异或值](./problems/5640.maximum-xor-with-an-element-from-array.md)\n- [1713. 得到子序列的最少操作次数](./problems/1713.minimum-operations-to-make-a-subsequence.md)\n- [1723. 完成所有工作的最短时间](./problems/1723.find-minimum-time-to-finish-all-jobs.md)\n- [1787. 使所有区间的异或结果为零](./problems/1787.make-the-xor-of-all-segments-equal-to-zero.md)\n- [1835. 所有数对按位与结果的异或和](./problems/1835.find-xor-sum-of-all-pairs-bitwise-and.md)\n- [1871. 跳跃游戏 VII](./problems/1871.jump-game-vii.md) 👍\n- [1872. 石子游戏 VIII](./problems/1872.stone-game-viii.md)\n- [1883. 准时抵达会议现场的最小跳过休息次数](./problems/5775.minimum-skips-to-arrive-at-meeting-on-time.md)\n- [1970. 你能穿过矩阵的最后一天](./problems/1970.last-day-where-you-can-still-cross.md)\n- [2009. 使数组连续的最少操作数](./problems/2009.minimum-number-of-operations-to-make-array-continuous.md)\n- [2025. 分割数组的最多方案数](./problems/2025.maximum-number-of-ways-to-partition-an-array.md)\n- [2030. 含特定字母的最小子序列](./problems/2030.smallest-k-length-subsequence-with-occurrences-of-a-letter.md)\n- [2102. 序列顺序查询](./problems/2102.sequentially-ordinal-rank-tracker.md)\n- [2141. 同时运行 N 台电脑的最长时间](./problems/2141.maximum-running-time-of-n-computers.md)\n- [2179. 统计数组中好三元组数目](./problems/2179.count-good-triplets-in-an-array.md) 👍\n- [2209. 用地毯覆盖后的最少白色砖块](./problems/2209.minimum-white-tiles-after-covering-with-carpets.md) 👍\n- [2281. 巫师的总力量和](./problems/2281.sum-of-total-strength-of-wizards.md)\n- [2306. 公司命名](./problems/2306.naming-a-company.md) 枚举优化好题\n- [2312. 卖木头块](./problems/2312.selling-pieces-of-wood.md) 动态规划经典题\n- [2842. 统计一个字符串的 k 子序列美丽值最大的数目](./problems/2842.count-k-subsequences-of-a-string-with-maximum-beauty.md)\n- [2972. 统计移除递增子数组的数目 II](./problems/2972.count-the-number-of-incremovable-subarrays-ii.md)\n- [3027. 人员站位的方案数 II](./problems/3027.find-the-number-of-ways-to-place-people-ii.md)\n- [3041. 修改数组后最大化数组中的连续元素数目 ](./problems/3041.maximize-consecutive-elements-in-an-array-after-modification.md)\n- [3082. 求出所有子序列的能量和 ](./problems/3082.find-the-sum-of-the-power-of-all-subsequences.md)\n- [3108. 带权图里旅途的最小代价](./problems/3108.minimum-cost-walk-in-weighted-graph.md)\n- [3347. 执行操作后元素的最高频率 II](./problems/3347.maximum-frequency-of-an-element-after-performing-operations-ii.md)\n- [3336. 最大公约数相等的子序列数量](./problems/3336.find-the-number-of-subsequences-with-equal-gcd.md)\n\n\n## :trident: &nbsp;anki 卡片\n\nAnki 主要分为两个部分：一部分是关键点到题目的映射，另一部分是题目到思路，关键点，代码的映射。\n\n全部卡片都在 [anki-card](./assets/anki/leetcode.apkg)\n\n使用方法：\n\nanki - 文件 - 导入 - 下拉格式选择“打包的 anki 集合”，然后选中你下载好的文件，确定即可。\n\n更多关于 anki 使用方法的请查看 [anki 官网](https://apps.ankiweb.net/)\n\n## 关于我\n\n大家也可以加我微信好友进行交流！\n\n![](https://p.ipic.vip/wciz1n.jpg)\n\n## :chart_with_upwards_trend: 大事件\n\n- 2019-07-10 ：[纪念项目 Star 突破 1W 的一个短文](./thanksGiving.md)， 记录了项目的\"兴起\"之路，大家有兴趣可以看一下，如果对这个项目感兴趣，请**点击一下 Star**， 项目会**持续更新**，感谢大家的支持。\n\n- 2019-10-08: [纪念 LeetCode 项目 Star 突破 2W](./thanksGiving2.md)，并且 Github 搜索“LeetCode”，排名第一。\n\n- 2020-04-12: [项目突破三万 Star](./thanksGiving3.md)。\n- 2020-04-14: 官网`力扣加加`上线啦 💐💐💐💐💐，有专题讲解，每日一题，下载区和视频题解，后续会增加更多内容，还不赶紧收藏起来？地址：<http://leetcode-solution.cn/>\n\n![](https://p.ipic.vip/98p19b.jpg)\n\n- 2021-02-23: star 破四万\n\n## :gift_heart: 贡献\n\n- 如果有想法和创意，请提 [issue](https://github.com/azl397985856/leetcode/issues) 或者进群提\n- 如果想贡献增加题解或者翻译， 可以参考 [贡献指南](./CONTRIBUTING.md)\n  > 关于如何提交题解，我写了一份 [指南](./templates/problems/1014.best-sightseeing-pair.md)\n- 如果需要修改项目中图片，[这里](./assets/drawio/) 存放了项目中绘制图的源代码，大家可以用 [draw.io](https://www.draw.io/) 打开进行编辑。\n\n## :love_letter: 鸣谢\n\n感谢为这个项目作出贡献的所有 [小伙伴](https://github.com/azl397985856/leetcode/graphs/contributors)\n\n## License\n\n[CC BY-NC-ND 4.0](./LICENSE.txt)\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 28.75,
          "content": "‌\n\n# Summary​\n\n- [第一章 - 算法专题](thinkings/README.md)\n\n  - [数据结构](thinkings/basic-data-structure.md)\n  - [链表专题](thinkings/linked-list.md)\n  - [树专题](thinkings/tree.md)\n  - [堆专题（上）](./thinkings/heap.md)\n  - [堆专题（下）](./thinkings/heap-2.md)\n  - [二分专题（上）](./thinkings/binary-search-1.md)\n  - [二分专题（下）](./thinkings/binary-search-2.md)\n  - [动态规划(重置版)](./thinkings/dynamic-programming.md)\n  - [大话搜索](./thinkings/search.md)\n  - [二叉树的遍历](thinkings/binary-tree-traversal.md)\n  - [哈夫曼编码和游程编码](thinkings/run-length-encode-and-huffman-encode.md)\n  - [布隆过滤器](thinkings/bloom-filter.md)\n  - [前缀树](thinkings/trie.md)\n  - [回溯](thinkings/backtrack.md)\n  - [滑动窗口（思路 + 模板）](thinkings/slide-window.md)\n  - [位运算](thinkings/bit.md)\n  - [小岛问题](thinkings/island.md)\n  - [最大公约数](thinkings/GCD.md)\n  - [并查集](thinkings/union-find.md)\n  - [平衡二叉树专题](thinkings/balanced-tree.md)\n  - [蓄水池抽样](thinkings/reservoid-sampling.md)\n  - [单调栈](thinkings/monotone-stack.md)\n\n- [第二章 - 91 天学算法](91/README.md)\n\n  - [91 天学算法第三期视频会议总结](https://lucifer.ren/blog/2021/03/01/91meeting-season-3-1/)\n  - [第一期讲义-二分法](./91/binary-search.md)\n  - [第一期讲义-双指针](./91/two-pointers.md)\n  - [第三期正在火热进行中](https://lucifer.ren/blog/2021/01/19/91-algo-3/)\n\n- [第三章 - 精选题解](selected/README.md)\n\n  - [字典序列删除](selected/a-deleted.md)\n  - [西法的刷题秘籍】一次搞定前缀和](selected/atMostK.md)\n  - [字节跳动的算法面试题是什么难度？](selected/byte-dance-algo-ex.md)\n  - [字节跳动的算法面试题是什么难度？（第二弹）](selected/byte-dance-algo-ex-2017.md)\n  - [《我是你的妈妈呀》 \\* 第一期](selected/mother-01.md)\n  - [一文带你看懂二叉树的序列化](selected/serialize.md)\n  - [穿上衣服我就不认识你了？来聊聊最长上升子序列](selected/LIS.md)\n  - [你的衣服我扒了 \\* 《最长公共子序列》](selected/LCS.md)\n  - [一文看懂《最大子序列和问题》](selected/LSS.md)\n\n- [第四章 - 高频考题（简单）](collections/easy.md)\n\n  - [面试题 17.12. BiNode](problems/binode-lcci.md) 👍\n  - [0001. 两数之和](problems/1.two-sum.md)\n  - [0020. 有效的括号](problems/20.valid-parentheses.md)\n  - [0021. 合并两个有序链表](problems/21.merge-two-sorted-lists.md)\n  - [0026. 删除排序数组中的重复项](problems/26.remove-duplicates-from-sorted-array.md)\n  - [0053. 最大子序和](problems/53.maximum-sum-subarray-cn.md)\n  - [0160. 相交链表](problems/160.Intersection-of-Two-Linked-Lists.md) 91\n  - [0066. 加一](problems/66.plus-one.md) 91\n  - [0088. 合并两个有序数组](problems/88.merge-sorted-array.md)\n  - [0101. 对称二叉树](problems/101.symmetric-tree.md)\n  - [0104. 二叉树的最大深度](problems/104.maximum-depth-of-binary-tree.md)\n  - [0108. 将有序数组转换为二叉搜索树](problems/108.convert-sorted-array-to-binary-search-tree.md)\n  - [0121. 买卖股票的最佳时机](problems/121.best-time-to-buy-and-sell-stock.md)\n  - [0122. 买卖股票的最佳时机 II](problems/122.best-time-to-buy-and-sell-stock-ii.md)\n  - [0125. 验证回文串](problems/125.valid-palindrome.md)\n  - [0136. 只出现一次的数字](problems/136.single-number.md)\n  - [0155. 最小栈](problems/155.min-stack.md)\n  - [0167. 两数之和 II 输入有序数组](problems/167.two-sum-ii-input-array-is-sorted.md)\n  - [0169. 多数元素](problems/169.majority-element.md)\n  - [0172. 阶乘后的零](problems/172.factorial-trailing-zeroes.md)\n  - [0190. 颠倒二进制位](problems/190.reverse-bits.md)\n  - [0191. 位 1 的个数](problems/191.number-of-1-bits.md)\n  - [0198. 打家劫舍](problems/198.house-robber.md)\n  - [0203. 移除链表元素](problems/203.remove-linked-list-elements.md)\n  - [0206. 反转链表](problems/206.reverse-linked-list.md)\n  - [0219. 存在重复元素 II](problems/219.contains-duplicate-ii.md)\n  - [0226. 翻转二叉树](problems/226.invert-binary-tree.md)\n  - [0232. 用栈实现队列](problems/232.implement-queue-using-stacks.md) 91\n  - [0263. 丑数](problems/263.ugly-number.md)\n  - [0283. 移动零](problems/283.move-zeroes.md)\n  - [0342. 4 的幂](problems/342.power-of-four.md)\n  - [0349. 两个数组的交集](problems/349.intersection-of-two-arrays.md)\n  - [0371. 两整数之和](problems/371.sum-of-two-integers.md)\n  - [401. 二进制手表](problems/401.binary-watch.md)\n  - [0437. 路径总和 III](problems/437.path-sum-iii.md)\n  - [0455. 分发饼干](problems/455.AssignCookies.md)\n  - [0504. 七进制数](./problems/504.base-7.md)\n  - [0575. 分糖果](problems/575.distribute-candies.md)\n  - [0665. 非递减数列](./problems/665.non-decreasing-array.md)\n  - [0661. 图片平滑器](./problems/661.image-smoother.md)\n  - [821. 字符的最短距离](problems/821.shortest-distance-to-a-character.md) 91\n  - [0874. 模拟行走机器人](problems/874.walking-robot-simulation.md)\n  - [1128. 等价多米诺骨牌对的数量](./problems/1128.number-of-equivalent-domino-pairs.md)\n  - [1260. 二维网格迁移](problems/1260.shift-2d-grid.md)\n  - [1332. 删除回文子序列](problems/1332.remove-palindromic-subsequences.md)\n  - [2591. 将钱分给最多的儿童](./problems/2591.distribute-money-to-maximum-children.md)\n\n- [第五章 - 高频考题（中等）](collections/medium.md)\n\n  - [面试题 17.09. 第 k 个数](./problems/get-kth-magic-number-lcci.md)\n  - [面试题 17.23. 最大黑方阵](./problems/max-black-square-lcci.md)🆕\n  - [面试题 16.16. 部分排序](./problems/sub-sort-lcci.md)\n  - [Increasing Digits](./problems/Increasing-Digits.md) 👍\n  - [Longest Contiguously Strictly Increasing Sublist After Deletion](./problems/Longest-Contiguously-Strictly-Increasing-Sublist-After-Deletion.md) 👍\n  - [Consecutive Wins](./problems/consecutive-wins.md)\n  - [Number of Substrings with Single Character Difference](./problems/Number-of-Substrings-with-Single-Character-Difference.md)\n  - [Bus Fare](./problems/Bus-Fare.md) 👍\n  - [Minimum Dropping Path Sum](./problems/Minimum-Dropping-Path-Sum.md)\n  - [Every Sublist Min Sum](./problems/Every-Sublist-Min-Sum.md)\n  - [Maximize the Number of Equivalent Pairs After Swaps](./problems/Maximize-the-Number-of-Equivalent-Pairs-After-Swaps.md)\n  - [0002. 两数相加](./problems/2.add-two-numbers.md)\n  - [0003. 无重复字符的最长子串](./problems/3.longest-substring-without-repeating-characters.md)\n  - [0005. 最长回文子串](./problems/5.longest-palindromic-substring.md)\n  - [0011. 盛最多水的容器](./problems/11.container-with-most-water.md)\n  - [0015. 三数之和](./problems/15.3sum.md)\n  - [0017. 电话号码的字母组合](./problems/17.Letter-Combinations-of-a-Phone-Number.md)\n  - [0019. 删除链表的倒数第 N 个节点](./problems/19.removeNthNodeFromEndofList.md)\n  - [0022. 括号生成](./problems/22.generate-parentheses.md)\n  - [0024. 两两交换链表中的节点](./problems/24.swapNodesInPairs.md)\n  - [0029. 两数相除](./problems/29.divide-two-integers.md)\n  - [0031. 下一个排列](./problems/31.next-permutation.md)\n  - [0033. 搜索旋转排序数组](./problems/33.search-in-rotated-sorted-array.md)\n  - [0039. 组合总和](./problems/39.combination-sum.md)\n  - [0040. 组合总和 II](./problems/40.combination-sum-ii.md)\n  - [0046. 全排列](./problems/46.permutations.md)\n  - [0047. 全排列 II](./problems/47.permutations-ii.md)\n  - [0048. 旋转图像](./problems/48.rotate-image.md)\n  - [0049. 字母异位词分组](./problems/49.group-anagrams.md)\n  - [0050. Pow(x, n)](./problems/50.pow-x-n.md)\n  - [0055. 跳跃游戏](./problems/55.jump-game.md)\n  - [0056. 合并区间](./problems/56.merge-intervals.md)\n  - [0060. 第 k 个排列](./problems/60.permutation-sequence.md)\n  - [0061. 旋转链表](./problems/61.Rotate-List.md) 91\n  - [0062. 不同路径](./problems/62.unique-paths.md)\n  - [0073. 矩阵置零](./problems/73.set-matrix-zeroes.md)\n  - [0075. 颜色分类](./problems/75.sort-colors.md)\n  - [0078. 子集](./problems/78.subsets.md)\n  - [0079. 单词搜索](./problems/79.word-search.md)\n  - [0080. 删除排序数组中的重复项 II](./problems/80.remove-duplicates-from-sorted-array-ii.md)\n  - [0086. 分隔链表](./problems/86.partition-list.md)\n  - [0090. 子集 II](./problems/90.subsets-ii.md)\n  - [0091. 解码方法](./problems/91.decode-ways.md)\n  - [0092. 反转链表 II](./problems/92.reverse-linked-list-ii.md)\n  - [0094. 二叉树的中序遍历](./problems/94.binary-tree-inorder-traversal.md)\n  - [0095. 不同的二叉搜索树 II](./problems/95.unique-binary-search-trees-ii.md)\n  - [0096. 不同的二叉搜索树](./problems/96.unique-binary-search-trees.md)\n  - [0098. 验证二叉搜索树](./problems/98.validate-binary-search-tree.md)\n  - [0102. 二叉树的层序遍历](./problems/102.binary-tree-level-order-traversal.md)\n  - [0103. 二叉树的锯齿形层次遍历](./problems/103.binary-tree-zigzag-level-order-traversal.md)\n  - [0113. 路径总和 II](./problems/113.path-sum-ii.md)\n  - [0129. 求根到叶子节点数字之和](./problems/129.sum-root-to-leaf-numbers.md)\n  - [0130. 被围绕的区域](./problems/130.surrounded-regions.md)\n  - [0131. 分割回文串](./problems/131.palindrome-partitioning.md)\n  - [0139. 单词拆分](./problems/139.word-break.md)\n  - [0144. 二叉树的前序遍历](./problems/144.binary-tree-preorder-traversal.md)\n  - [0147. 对链表进行插入排序](./problems/147.insertion-sort-list.md)\n  - [0150. 逆波兰表达式求值](./problems/150.evaluate-reverse-polish-notation.md)\n  - [0152. 乘积最大子数组](./problems/152.maximum-product-subarray.md)\n  - [0153. 寻找旋转排序数组中的最小值](./problems/153.find-minimum-in-rotated-sorted-array.md)\n  - [0199. 二叉树的右视图](./problems/199.binary-tree-right-side-view.md)\n  - [0200. 岛屿数量](./problems/200.number-of-islands.md)\n  - [0201. 数字范围按位与](./problems/201.bitwise-and-of-numbers-range.md)\n  - [0208. 实现 Trie (前缀树)](./problems/208.implement-trie-prefix-tree.md)\n  - [0209. 长度最小的子数组](./problems/209.minimum-size-subarray-sum.md)\n  - [0211. 添加与搜索单词 - 数据结构设计](./problems/211.add-and-search-word-data-structure-design.md)\n  - [0215. 数组中的第 K 个最大元素](./problems/215.kth-largest-element-in-an-array.md)\n  - [0220. 存在重复元素 III](./problems/220.contains-duplicate-iii.md)\n  - [0221. 最大正方形](./problems/221.maximal-square.md)\n  - [0227. 基本计算器 II](./problems/227.basic-calculator-ii.md) 👍\n  - [0229. 求众数 II](./problems/229.majority-element-ii.md) 👍\n  - [0230. 二叉搜索树中第 K 小的元素](./problems/230.kth-smallest-element-in-a-bst.md)\n  - [0236. 二叉树的最近公共祖先](./problems/236.lowest-common-ancestor-of-a-binary-tree.md)\n  - [0238. 除自身以外数组的乘积](./problems/238.product-of-array-except-self.md)\n  - [0240. 搜索二维矩阵 II](./problems/240.search-a-2-d-matrix-ii.md)\n  - [0279. 完全平方数](./problems/279.perfect-squares.md)\n  - [0309. 最佳买卖股票时机含冷冻期](./problems/309.best-time-to-buy-and-sell-stock-with-cooldown.md) 👍\n  - [0322. 零钱兑换](./problems/322.coin-change.md)\n  - [0324. 摆动排序 II](./problems/324.wiggle-sort-ii.md)\n  - [0328. 奇偶链表](./problems/328.odd-even-linked-list.md)\n  - [0331. 验证二叉树的前序序列化](./problems/331.verify-preorder-serialization-of-a-binary-tree.md) 👍\n  - [0334. 递增的三元子序列](./problems/334.increasing-triplet-subsequence.md) 👍\n  - [0337. 打家劫舍 III](./problems/337.house-robber-iii.md)\n  - [0343. 整数拆分](./problems/343.integer-break.md) 👍\n  - [0365. 水壶问题](./problems/365.water-and-jug-problem.md)\n  - [0378. 有序矩阵中第 K 小的元素](./problems/378.kth-smallest-element-in-a-sorted-matrix.md)\n  - [0380. 常数时间插入、删除和获取随机元素](./problems/380.insert-delete-getrandom-o1.md) 👍\n  - [0394. 字符串解码](./problems/394.decode-string.md) 91 👍\n  - [0416. 分割等和子集](./problems/416.partition-equal-subset-sum.md)\n  - [0424. 替换后的最长重复字符](./problems/424.longest-repeating-character-replacement.md)\n  - [0438. 找到字符串中所有字母异位词](./problems/438.find-all-anagrams-in-a-string.md)\n  - [0445. 两数相加 II](./problems/445.add-two-numbers-ii.md)\n  - [0454. 四数相加 II](./problems/454.4-sum-ii.md)\n  - [0456. 132 模式](./problems/456.132-pattern.md) 👍\n  - [0457.457. 环形数组是否存在循环](./problems/457.circular-array-loop.md)\n  - [0464. 我能赢么](./problems/464.can-i-win.md) 👍\n  - [0470. 用 Rand7() 实现 Rand10](./problems/470.implement-rand10-using-rand7.md)\n  - [0473. 火柴拼正方形](./problems/473.matchsticks-to-square.md) 👍\n  - [0494. 目标和](./problems/494.target-sum.md)\n  - [0516. 最长回文子序列](./problems/516.longest-palindromic-subsequence.md)\n  - [0513. 找树左下角的值](./problems/513.find-bottom-left-tree-value.md) 91\n  - [0518. 零钱兑换 II](./problems/518.coin-change-2.md)\n  - [0525. 连续数组](./problems/525.contiguous-array.md)\n  - [0547. 朋友圈](./problems/547.friend-circles.md)\n  - [0560. 和为 K 的子数组](./problems/560.subarray-sum-equals-k.md)\n  - [0609. 在系统中查找重复文件](./problems/609.find-duplicate-file-in-system.md)\n  - [0611. 有效三角形的个数](./problems/611.valid-triangle-number.md) 👍\n  - [0673. 最长递增子序列的个数](./problems/673.number-of-longest-increasing-subsequence.md)\n  - [0686. 重复叠加字符串匹配](./problems/686.repeated-string-match.md)\n  - [0710. 黑名单中的随机数](./problems/710.random-pick-with-blacklist.md)\n  - [0714. 买卖股票的最佳时机含手续费](./problems/714.best-time-to-buy-and-sell-stock-with-transaction-fee.md) 👍\n  - [0718. 最长重复子数组](./problems/718.maximum-length-of-repeated-subarray.md)\n  - [0735. 行星碰撞](./problems/735.asteroid-collision.md)\n  - [0754. 到达终点数字](./problems/754.reach-a-number.md) 👍\n  - [0785. 判断二分图](./problems/785.is-graph-bipartite.md) 👍\n  - [0790. 多米诺和托米诺平铺](./problems/790.domino-and-tromino-tiling.md) 👍\n  - [0799. 香槟塔](./problems/799.champagne-tower.md) 👍\n  - [0801. 使序列递增的最小交换次数](./problems/801.minimum-swaps-to-make-sequences-increasing.md) 👍\n  - [0816. 模糊坐标](./problems/816.ambiguous-coordinates.md) 👍\n  - [0820. 单词的压缩编码](./problems/820.short-encoding-of-words.md)\n  - [0838. 推多米诺](./problems/838.push-dominoes.md)\n  - [0873. 最长的斐波那契子序列的长度](./problems/873.length-of-longest-fibonacci-subsequence.md) 👍\n  - [0875. 爱吃香蕉的珂珂](./problems/875.koko-eating-bananas.md)\n  - [0877. 石子游戏](./problems/877.stone-game.md)\n  - [0886. 可能的二分法](./problems/886.possible-bipartition.md)\n  - [0898. 子数组按位或操作](./problems/898.bitwise-ors-of-subarrays.md) 👍\n  - [0900. RLE 迭代器](./problems/900.rle-iterator.md) 👍\n  - [0911. 在线选举](./problems/911.online-election.md)\n  - [0912. 排序数组](./problems/912.sort-an-array.md)\n  - [0932. 漂亮数组](./problems/932.beautiful-array.md)\n  - [0935. 骑士拨号器](./problems/935.knight-dialer.md)\n  - [0947. 移除最多的同行或同列石头](./problems/947.most-stones-removed-with-same-row-or-column.md) 👍\n  - [0959. 由斜杠划分区域](./problems/959.regions-cut-by-slashes.md)\n  - [0978. 最长湍流子数组](./problems/978.longest-turbulent-subarray.md) 👍\n  - [0987. 二叉树的垂序遍历](./problems/987.vertical-order-traversal-of-a-binary-tree.md) 91\n  - [1004. 最大连续 1 的个数 III](./problems/1004.max-consecutive-ones-iii.md)\n  - [1011. 在 D 天内送达包裹的能力](./problems/1011.capacity-to-ship-packages-within-d-days.md)\n  - [1014. 最佳观光组合](./problems/1014.best-sightseeing-pair.md) 👍\n  - [1015. 可被 K 整除的最小整数](./problems/1015.smallest-integer-divisible-by-k.md) 👍\n  - [1019. 链表中的下一个更大节点](./problems/1019.next-greater-node-in-linked-list.md)\n  - [1020. 飞地的数量](./problems/1020.number-of-enclaves.md)\n  - [1023. 驼峰式匹配](./problems/1023.camelcase-matching.md)\n  - [1031. 两个非重叠子数组的最大和](./problems/1031.maximum-sum-of-two-non-overlapping-subarrays.md)\n  - [1043. 分隔数组以得到最大和](./problems/1043.partition-array-for-maximum-sum.md) 👍\n  - [1053. 交换一次的先前排列)](./problems/1053.previous-permutation-with-one-swap.md)\n  - [1104. 二叉树寻路](./problems/1104.path-in-zigzag-labelled-binary-tree.md) 👍\n  - [1129. 颜色交替的最短路径](./problems/1129.shortest-path-with-alternating-colors.md)\n  - [1131.绝对值表达式的最大值](./problems/1131.maximum-of-absolute-value-expression.md) 👍\n  - [1138. 字母板上的路径](./problems/1138.alphabet-board-path.md)\n  - [1186. 删除一次得到子数组最大和](./problems/1186.maximum-subarray-sum-with-one-deletion.md) 👍\n  - [1218. 最长定差子序列](./problems/1218.longest-arithmetic-subsequence-of-given-difference.md) 👍\n  - [1227. 飞机座位分配概率](./problems/1227.airplane-seat-assignment-probability.md) 👍\n  - [1261. 在受污染的二叉树中查找元素](./problems/1261.find-elements-in-a-contaminated-binary-tree.md) 👍\n  - [1262. 可被三整除的最大和](./problems/1262.greatest-sum-divisible-by-three.md) 👍\n  - [1297. 子串的最大出现次数](./problems/1297.maximum-number-of-occurrences-of-a-substring.md) 👍\n  - [1310. 子数组异或查询](./problems/1310.xor-queries-of-a-subarray.md)\n  - [1334. 阈值距离内邻居最少的城市](./problems/1334.find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance.md) 👍\n  - [1371.每个元音包含偶数次的最长子字符串](./problems/1371.find-the-longest-substring-containing-vowels-in-even-counts.md)\n  - [1381. 设计一个支持增量操作的栈](./problems/1381.design-a-stack-with-increment-operation.md) 91 👍\n  - [1438. 绝对差不超过限制的最长连续子数组](./problems/1438.longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.md) 👍\n  - [1558. 得到目标数组的最少函数调用次数](./problems/1558.minimum-numbers-of-function-calls-to-make-target-array.md) 👍\n  - [1574. 删除最短的子数组使剩余数组有序](./problems/1574.shortest-subarray-to-be-removed-to-make-array-sorted.md)\n  - [1631. 最小体力消耗路径](./problems/1631.path-with-minimum-effort.md)\n  - [1638. 统计只差一个字符的子串数目](./problems/1638.count-substrings-that-differ-by-one-character.md)\n  - [1658. 将 x 减到 0 的最小操作数](./problems/1658.minimum-operations-to-reduce-x-to-zero.md)\n  - [1697. 检查边长度限制的路径是否存在](./problems/1697.checking-existence-of-edge-length-limited-paths.md)\n  - [1737. 满足三条件之一需改变的最少字符数](./problems/1737.change-minimum-characters-to-satisfy-one-of-three-conditions.md) 👍\n  - [1770. 执行乘法运算的最大分数](./problems/1770.maximum-score-from-performing-multiplication-operations.md)👍 91\n  - [1793. 好子数组的最大分数](./problems/1793.maximum-score-of-a-good-subarray.md) \n  - [1834. 单线程 CPU](./problems/1834.single-threaded-cpu.md)\n  - [1899. 合并若干三元组以形成目标三元组](./problems/1899.merge-triplets-to-form-target-triplet.md) 👍\n  - [1904. 你完成的完整对局数](./problems/1904.the-number-of-full-rounds-you-have-played.md)\n  - [1906. 查询差绝对值的最小值](./problems/1906.minimum-absolute-difference-queries.md)\n  - [1906. 查询差绝对值的最小值](./problems/1906.minimum-absolute-difference-queries.md)\n  - [2007. 从双倍数组中还原原数组](./problems/2007.find-original-array-from-doubled-array.md)\n  - [2008. 出租车的最大盈利](./problems/2008.maximum-earnings-from-taxi.md)\n  - [2100. 适合打劫银行的日子](./problems/5935.find-good-days-to-rob-the-bank.md)\n  - [2101. 引爆最多的炸弹](./problems/5936.detonate-the-maximum-bombs.md)\n  - [2121. 相同元素的间隔之和](./problems/5965.intervals-between-identical-elements.md)\n  - [2207. 字符串中最多数目的子字符串](./problems/6201.maximize-number-of-subsequences-in-a-string.md)\n  - [2592. 最大化数组的伟大值](./problems/2592.maximize-greatness-of-an-array.md)\n  - [2593. 标记所有元素后数组的分数](./problems/2593.find-score-of-an-array-after-marking-all-elements.md)\n  - [2817. 限制条件下元素之间的最小绝对差](./problems/2817.minimum-absolute-difference-between-elements-with-constraint.md)\n  - [2865. 美丽塔 I](./problems/2865.beautiful-towers-i.md)\n  - [2866. 美丽塔 II](./problems/2866.beautiful-towers-ii.md)\n  - [2939. 最大异或乘积](./problems/2939.maximum-xor-product.md)\n  - [3377. 使两个整数相等的数位操作](./problems/3377.digit-operations-to-make-two-integers-equal.md)\n\n- [第六章 - 高频考题（困难）](collections/hard.md)\n\n  - [LCP 20. 快速公交](./problems/lcp20.meChtZ.md)\n  - [LCP 21. 追逐游戏](./problems/lcp21.Za25hA.md) 👍\n  - [Number Stream to Intervals](./problems/Number-Stream-to-Intervals.md)\n  - [Triple-Inversion](./problems/Triple-Inversion.md) 91\n  - [Kth-Pair-Distance](./problems/Kth-Pair-Distance.md) 91\n  - [Minimum-Light-Radius](./problems/Minimum-Light-Radius.md) 91\n  - [Largest Equivalent Set of Pairs](./problems/Largest-Equivalent-Set-of-Pairs.md) 👍\n  - [Ticket-Order.md](./problems/Ticket-Order.md)\n  - [Connected-Road-to-Destination](./problems/Connected-Road-to-Destination.md)\n  - [0004. 寻找两个正序数组的中位数](./problems/4.median-of-two-sorted-arrays.md)\n  - [0023. 合并 K 个升序链表](./problems/23.merge-k-sorted-lists.md)\n  - [0025. K 个一组翻转链表](./problems/25.reverse-nodes-in-k-groups.md)\n  - [0030. 串联所有单词的子串](./problems/30.substring-with-concatenation-of-all-words.md)\n  - [0032. 最长有效括号](./problems/32.longest-valid-parentheses.md)\n  - [0042. 接雨水](./problems/42.trapping-rain-water.md)\n  - [0052. N 皇后 II](./problems/52.N-Queens-II.md)\n  - [0057. 插入区间](problems/57.insert-interval.md)\n  - [0065. 有效数字](problems/65.valid-number.md)\n  - [0084. 柱状图中最大的矩形](./problems/84.largest-rectangle-in-histogram.md)\n  - [0085. 最大矩形](./problems/85.maximal-rectangle.md)\n  - [0087. 扰乱字符串](./problems/87.scramble-string.md)\n  - [0124. 二叉树中的最大路径和](./problems/124.binary-tree-maximum-path-sum.md)\n  - [0128. 最长连续序列](./problems/128.longest-consecutive-sequence.md)\n  - [0132. 分割回文串 II](./problems/132.palindrome-partitioning-ii.md) 👍\n  - [0140. 单词拆分 II](problems/140.word-break-ii.md)\n  - [0145. 二叉树的后序遍历](./problems/145.binary-tree-postorder-traversal.md)\n  - [0146. LRU 缓存机制](./problems/146.lru-cache.md)\n  - [0154. 寻找旋转排序数组中的最小值 II](./problems/154.find-minimum-in-rotated-sorted-array-ii.md)\n  - [0212. 单词搜索 II](./problems/212.word-search-ii.md)\n  - [0239. 滑动窗口最大值](./problems/239.sliding-window-maximum.md)\n  - [0295. 数据流的中位数](./problems/295.find-median-from-data-stream.md)\n  - [0297. 二叉树的序列化与反序列化](./problems/297.serialize-and-deserialize-binary-tree.md) 91\n  - [0301. 删除无效的括号](./problems/301.remove-invalid-parentheses.md)\n  - [0312. 戳气球](./problems/312.burst-balloons.md)\n  - [330. 按要求补齐数组](./problems/330.patching-array.md)\n  - [0335. 路径交叉](./problems/335.self-crossing.md)\n  - [0460. LFU 缓存](./problems/460.lfu-cache.md)\n  - [0472. 连接词](./problems/472.concatenated-words.md)\n  - [0480. 滑动窗口中位数](./problems/480.sliding-window-median.md)\n  - [0483. 最小好进制](./problems/483.smallest-good-base.md)\n  - [0488. 祖玛游戏](./problems/488.zuma-game.md)\n  - [0493. 翻转对](./problems/493.reverse-pairs.md)\n  - [0664. 奇怪的打印机](./problems/664.strange-printer.md)\n  - [0679. 24 点游戏](./problems/679.24-game.md)\n  - [0715. Range 模块](./problems/715.range-module.md)\n  - [0726. 原子的数量](./problems/726.number-of-atoms.md)\n  - [0768. 最多能完成排序的块 II](./problems/768.max-chunks-to-make-sorted-ii.md) 91\n  - [0805. 数组的均值分割](./problems/805.split-array-with-same-average.md)\n  - [0839. 相似字符串组](./problems/839.similar-string-groups.md)\n  - [0887. 鸡蛋掉落](./problems/887.super-egg-drop.md)\n  - [0895. 最大频率栈](./problems/895.maximum-frequency-stack.md)\n  - [0975. 奇偶跳](./problems/975.odd-even-jump.md)\n  - [0995. K 连续位的最小翻转次数](./problems/995.minimum-number-of-k-consecutive-bit-flips.md)\n  - [1032. 字符流](./problems/1032.stream-of-characters.md)\n  - [1168. 水资源分配优化](./problems/1168.optimize-water-distribution-in-a-village.md)\n  - [1178. 猜字谜](./problems/1178.number-of-valid-words-for-each-puzzle.md)\n  - [1203. 项目管理](./problems/1203.sort-items-by-groups-respecting-dependencies.md)\n  - [1255. 得分最高的单词集合](./problems/1255.maximum-score-words-formed-by-letters.md)\n  - [1345. 跳跃游戏 IV](./problems/1435.jump-game-iv.md)\n  - [1449. 数位成本和为目标值的最大数字](./problems/1449.form-largest-integer-with-digits-that-add-up-to-target.md)\n  - [1494. 并行课程 II](./problems/1494.parallel-courses-ii.md)\n  - [1521. 找到最接近目标值的函数值](./problems/1521.find-a-value-of-a-mysterious-function-closest-to-target.md)\n  - [1526. 形成目标数组的子数组最少增加次数](./problems/1526.minimum-number-of-increments-on-subarrays-to-form-a-target-array.md)\n  - [1639. 通过给定词典构造目标字符串的方案数](./problems/1639.number-of-ways-to-form-a-target-string-given-a-dictionary.md) new\n  - [1649. 通过指令创建有序数组](./problems/1649.create-sorted-array-through-instructions.md)\n  - [1671. 得到山形数组的最少删除次数](./problems/1671.minimum-number-of-removals-to-make-mountain-array.md)\n  - [1707. 与数组中元素的最大异或值](./problems/5640.maximum-xor-with-an-element-from-array.md)\n  - [1713. 得到子序列的最少操作次数](./problems/1713.minimum-operations-to-make-a-subsequence.md)\n  - [1723. 完成所有工作的最短时间](./problems/1723.find-minimum-time-to-finish-all-jobs.md)\n  - [1787. 使所有区间的异或结果为零](./problems/1787.make-the-xor-of-all-segments-equal-to-zero.md)\n  - [1835. 所有数对按位与结果的异或和](./problems/1835.find-xor-sum-of-all-pairs-bitwise-and.md)\n  - [1871. 跳跃游戏 VII](./problems/1871.jump-game-vii.md) 👍\n  - [1872. 石子游戏 VIII](./problems/1872.stone-game-viii.md)\n  - [1883. 准时抵达会议现场的最小跳过休息次数](./problems/5775.minimum-skips-to-arrive-at-meeting-on-time.md)\n  - [1970. 你能穿过矩阵的最后一天](./problems/1970.last-day-where-you-can-still-cross.md)\n  - [2009. 使数组连续的最少操作数](./problems/2009.minimum-number-of-operations-to-make-array-continuous.md)\n  - [2025. 分割数组的最多方案数](./problems/2025.maximum-number-of-ways-to-partition-an-array.md)\n  - [2030. 含特定字母的最小子序列](./problems/2030.smallest-k-length-subsequence-with-occurrences-of-a-letter.md)\n  - [2102. 序列顺序查询](./problems/2102.sequentially-ordinal-rank-tracker.md)\n  - [2141. 同时运行 N 台电脑的最长时间](./problems/2141.maximum-running-time-of-n-computers.md)\n  - [2179. 统计数组中好三元组数目](./problems/2179.count-good-triplets-in-an-array.md) 👍\n  - [2209. 用地毯覆盖后的最少白色砖块](./problems/2209.minimum-white-tiles-after-covering-with-carpets.md)\n  - [2281.sum-of-total-strength-of-wizards](./problems/2281.sum-of-total-strength-of-wizards.md)\n  - [2306. 公司命名](./problems/2306.naming-a-company.md) 枚举优化好题\n  - [2312. 卖木头块](./problems/2312.selling-pieces-of-wood.md) 动态规划经典题\n  - [2842. 统计一个字符串的 k 子序列美丽值最大的数目](./problems/2842.count-k-subsequences-of-a-string-with-maximum-beauty.md)\n  - [2972. 统计移除递增子数组的数目 II](./problems/2972.count-the-number-of-incremovable-subarrays-ii.md)\n  - [3027. 人员站位的方案数 II](./problems/3027.find-the-number-of-ways-to-place-people-ii.md)\n  - [3041. 修改数组后最大化数组中的连续元素数目 ](./problems/3041.maximize-consecutive-elements-in-an-array-after-modification.md)\n  - [3082. 求出所有子序列的能量和 ](./problems/3082.find-the-sum-of-the-power-of-all-subsequences.md)\n  - [3108. 带权图里旅途的最小代价](./problems/3108.minimum-cost-walk-in-weighted-graph.md)\n  - [3347. 执行操作后元素的最高频率 II](./problems/3347.maximum-frequency-of-an-element-after-performing-operations-ii.md)\n  - [3336. 最大公约数相等的子序列数量](./problems/3336.find-the-number-of-subsequences-with-equal-gcd.md)\n\n- [后序](epilogue.md)\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.15,
          "content": "theme: jekyll-theme-cayman\nplugins:\n  - jekyll-relative-links\nrelative_links:\n  enabled: true\n  collections: true\ninclude:\n  - SUMMARY.md\n  - README.md\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "backlog",
          "type": "tree",
          "content": null
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.31,
          "content": "{\n  \"structure\": {\n    \"readme\": \"introduction.md\"\n  },\n  \"title\": \"西法的刷题秘籍\",\n  \"output\": {\n    \"name\": \"西法的刷题秘籍\"\n  },\n  \"description\": \" leetcode题解，记录自己的leetcode解题之路。\",\n  \"language\": \"zh-hans\",\n  \"plugins\": [\n    \"katex\",\n    \"ace\"\n  ],\n  \"pluginsConfig\": {}\n}"
        },
        {
          "name": "collections",
          "type": "tree",
          "content": null
        },
        {
          "name": "cover.jpg",
          "type": "blob",
          "size": 39.31,
          "content": null
        },
        {
          "name": "daily",
          "type": "tree",
          "content": null
        },
        {
          "name": "donation.md",
          "type": "blob",
          "size": 0.81,
          "content": "> 如果名单中漏掉了你的信息，请联系我微信：DevelopeEngineer 。另外，有捐赠过的同学，我这边联系不到你，如果你希望将你的信息展示出来，也请联系我。\n\n感谢以下捐赠者，我目前没有在任何平台卖钱，用郭德纲的话叫：“我给你快乐，你给我饭吃”，我就只能说：“我给你知识，你给我买咖啡☕️的钱”\n\n<!-- - <a href=\"https://mp.weixin.qq.com/s?__biz=MzI5MjUxNjA4Mw==&mid=100000905&idx=1&sn=dd7956bbb9b1b845a8d8f3875ac11253&chksm=6c017d155b76f403f091420f6639e8f2871dd48b584bec153406906cce88bab610492d8c8a6d&scene=18#wechat_redirect\" target=\"_blank\">【前端迷】</a> - <span style=\"color: red;\">￥88</span> -->\n\n- <a href=\"https://github.com/gaohang1997\" target=\"_blank\">Suuny</a> - <span style=\"color: red;\">￥50</span>\n"
        },
        {
          "name": "epilogue.md",
          "type": "blob",
          "size": 0.9,
          "content": "# 后记\n\n以上就是本电子书的全部内容了。如果你觉得这本书对你有用， 那么请将它分享给你身边的朋友，你的点赞和分享是我最大的动力。另外由于本人水平和精力有限，难免有不正确的地方，大家可以通过 github 的 pr 给我指正，感谢大家。\n\n后期的话文章会第一时间在公众号和我的博客更新，并定期整理到这个电子书中来。因此你可以关注我的公众号或者博客， 也可以关注我的同步电子书的网站 [西法的刷题秘籍 - 在线版](https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/) 获得内容的更新。\n\n如果想加入读者交流群， 在公众号回复 leetcode 即可，西法在群里等着你。\n\n关注公众号《力扣加加》带你啃下算法这块硬骨头。\n\n![](https://p.ipic.vip/iiew7e.jpg)\n\nlucifer 的博客地址：https://lucifer.ren/blog/\n"
        },
        {
          "name": "introduction.md",
          "type": "blob",
          "size": 35.26,
          "content": "# 西法的刷题秘籍\n\n简体中文 | [English](./README.en.md)\n\n---\n\n我们的 slogon 是： **只有熟练掌握基础的数据结构与算法，才能对复杂问题迎刃有余。**\n\n## 🔥🔥🔥 我的新书《算法通关之路》出版了 🔥🔥🔥\n\n我的新书《算法通关之路》出版了。这本书和本仓库内容几乎没有任何重叠，采用 Python 编写，不过也提供了 Java，CPP 以及 JS 代码供大家参考。\n\n![](https://p.ipic.vip/l9sxsa.jpg)\n\n[图书介绍](https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247489484&idx=1&sn=a16664605744a970f8a81e64affb01a7&chksm=eb88dbd5dcff52c3ecee38c7f594df6d16ed7ca2852ad4d0d86bab99483f4413c30e98b00e43&token=715489125&lang=zh_CN#rd)\n\n大家也可以扫描下方二维码购买。\n\n![](https://p.ipic.vip/ny26q0.jpg)\n\n## 电子书\n\n[在线阅读](https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/)\n\n这是我将我的所有公开的算法资料整理的一个电子书，全部题目信息中文化，以前会有一些英文描述，感谢 @CYL 的中文整理。\n\n![](https://p.ipic.vip/1nxfdk.jpg)\n\n**限时免费下载！后期随时可能收费**\n\n有些动图，在做成电子书（比如 pdf）的时候自然就变没了，如果需要看动图的， 可以去我的公众号《力扣加加》或者我的 leetcode 题解仓库看。\n\n<img src=\"https://p.ipic.vip/h9nm77.jpg\" width=\"100%\">\n\n> epub 还是有动图的\n\n另外有些内容只在公众号发布，因此大家觉得内容不错的话，可以关注一下。如果再给 ➕ 个星标就更棒啦！\n\n> 大家也可以用 Github 提供的 [RSS](https://github.com/azl397985856/leetcode/commits.atom) 来订阅我的仓库更新。\n\n## 刷题群\n\n组队刷题活动，关注上面的公众号《力扣加加》回复 leetcode 即可获取进群方式，从此刷题不再孤单。\n\n另外春招已经开始了。你是不是已经开始准备了呢？为了帮助大家获得更好的 offer，lucifer 开辟了「春招冲冲冲」栏目。\n\n第一期我们的猎物是「虾皮」。来看看虾皮的算法题难度几何吧！\n\n- [春招冲冲冲](https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247487632&idx=1&sn=830fe267d835e5acbfc417787f85f1c1&chksm=eb88dc89dcff559f49913c0f2dec77b1d06c2ddbe2c6c299b32b3e49c2efaf8b11ac0aedce8f&token=1676518002&lang=zh_CN#rd)\n\n## 图片加载不出来如何解决？\n\nhttps://github.com/fe-lucifer/fanqiang\n\n## 仓库介绍\n\nleetcode 题解，记录自己的 leetcode 解题之路。\n\n本仓库目前分为**五个**部分：\n\n- 第一个部分是 leetcode 经典题目的解析，包括思路，关键点和具体的代码实现。\n\n- 第二部分是对于数据结构与算法的总结\n\n- 第三部分是 anki 卡片， 将 leetcode 题目按照一定的方式记录在 anki 中，方便大家记忆。\n\n- 第四部分是每日一题，每日一题是在交流群（包括微信和 qq）里进行的一种活动，大家一起 解一道题，这样讨论问题更加集中，会得到更多的反馈。而且 这些题目可以被记录下来，日后会进行筛选添加到仓库的题解模块。\n\n- 第五部分是计划， 这里会记录将来要加入到以上三个部分内容\n\n## 仓库食用指南\n\n- 对于最近添加的部分， 后面会有 标注\n- 对于最近更新的部分， 后面会有 🖊 标注\n- 这里有一张互联网公司面试中经常考察的问题类型总结的思维导图，我们可以结合图片中的信息分析一下。\n\n![leetcode-zhihu](https://p.ipic.vip/pe0egq.jpg)\n\n（图片来自 leetcode)\n\n其中算法，主要是以下几种：\n\n- 基础技巧：分治、二分、贪心\n- 排序算法：快速排序、归并排序、计数排序\n- 搜索算法：回溯、递归、深度优先遍历，广度优先遍历，二叉搜索树等\n- 图论：最短路径、最小生成树\n- 动态规划：背包问题、最长子序列\n\n数据结构，主要有如下几种：\n\n- 数组与链表：单 / 双向链表\n- 栈与队列\n- 哈希表\n- 堆：最大堆 ／ 最小堆\n- 树与图：最近公共祖先、并查集\n- 字符串：前缀树（字典树） ／ 后缀树\n\n## 数据结构与算法的总结(25 篇)\n\n- [数据结构总览](./thinkings/basic-data-structure.md)\n- [链表专题](./thinkings/linked-list.md)\n- [树专题](./thinkings/tree.md)\n- [堆专题（上）](./thinkings/heap.md)\n- [堆专题（下）](./thinkings/heap-2.md)\n<!-- - [基础算法](./thinkings/basic-algorithm.md) -->\n- [二叉树的遍历](./thinkings/binary-tree-traversal.md)\n- [动态规划](./thinkings/dynamic-programming.md)\n- [回溯](./thinkings/backtrack.md)\n- [哈夫曼编码和游程编码](./thinkings/run-length-encode-and-huffman-encode.md)\n- [布隆过滤器](./thinkings/bloom-filter.md)🖊\n- [前缀树](./thinkings/trie.md)🖊\n- [《日程安排》专题](https://lucifer.ren/blog/2020/02/03/leetcode-%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%E7%B3%BB%E5%88%97/)\n- [《构造二叉树》专题](https://lucifer.ren/blog/2020/02/08/%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%93%E9%A2%98/)\n- [滑动窗口（思路 + 模板）](./thinkings/slide-window.md)\n- [位运算](./thinkings/bit.md)\n- [小岛问题](./thinkings/island.md)🖊\n- [最大公约数](./thinkings/GCD.md)\n- [并查集](./thinkings/union-find.md)\n- [平衡二叉树专题](./thinkings/balanced-tree.md)\n- [蓄水池抽样](./thinkings/reservoid-sampling.md)\n- [单调栈](./thinkings/monotone-stack.md)\n\n## 精选题解（9 篇）\n\n- [字典序列删除](./selected/a-deleted.md)\n- [一次搞定前缀和](./selected/atMostK.md)\n- [字节跳动的算法面试题是什么难度？](./selected/byte-dance-algo-ex.md)\n- [字节跳动的算法面试题是什么难度？（第二弹）](./selected/byte-dance-algo-ex-2017.md)\n- [《我是你的妈妈呀》 - 第一期](./selected/mother-01.md)\n- [一文带你看懂二叉树的序列化](./selected/serialize.md)\n- [穿上衣服我就不认识你了？来聊聊最长上升子序列](./selected/LIS.md)\n- [你的衣服我扒了 - 《最长公共子序列》](./selected/LCS.md)\n- [一文看懂《最大子序列和问题》](./selected/LSS.md)\n\n## 插件\n\n或许是一个可以改变你刷题效率的浏览器扩展插件。\n\n插件地址：https://chrome.google.com/webstore/detail/leetcode-cheatsheet/fniccleejlofifaakbgppmbbcdfjonle?hl=en-US。\n\n> 不能访问谷歌商店的朋友可以去我的公众号回复插件获取离线版。强烈推荐大家使用谷歌商店安装， 这样如果有更新可以自动安装，毕竟咱们的插件更新还是蛮快的。\n\n## 怎么刷 LeetCode？\n\n- [我是如何刷 LeetCode 的](https://www.zhihu.com/question/280279208/answer/824585814)\n- [算法小白如何高效、快速刷 leetcode？](https://www.zhihu.com/question/321738058/answer/1279464192)\n- [刷题效率低？或许你就差这么一个插件](https://lucifer.ren/blog/2020/06/06/algo-chrome-extension/)\n- [力扣刷题插件](https://lucifer.ren/blog/2020/08/16/leetcode-cheat/)\n\n## 《91 天学算法》限时活动\n\n很多教育机构宣传的 7 天，一个月搞定算法面试的，我大概都了解了下，不怎么靠谱。学习算法这东西，还是要考积累，没有量变是不可能有质变的。还有的人选择看书，这是一个不错的选择。但是很多人选了过时的或者质量差的书，又或者不会去写书中给的练习题，导致效果很差。\n\n基于这几个原因，我组织了一个 91 天刷题活动，通过一个相对比较长的时间（91 天）给出最新的学习路径，并强制大家打卡这种高强度练习来让大家**在 91 天后遇见更好的自己**。详细活动介绍可以点下方链接查看。另外往期的讲义也在下面了，大家可以看看合不合你的口味。\n\n最后送给大家一句话： **坚持下去，会有突然间成长的一天**。\n\n- [91 天学算法第三期视频会议总结](https://lucifer.ren/blog/2021/03/01/91meeting-season-3-1/)\n- [第一期讲义-二分法](./91/binary-search.md)\n- [第一期讲义-双指针](./91/two-pointers.md)\n- [第三期正在火热进行中](https://lucifer.ren/blog/2021/01/19/91-algo-3/)\n\n## leetcode 经典题目的解析（200 多道）\n\n> 这里仅列举具有**代表性题目**，并不是全部题目\n\n目前更新了 200 多道题解，加上专题涉及的题目，差不多有 **300 道**。\n\n### 简单难度题目合集\n\n这里的题目难度比较小， 大多是模拟题，或者是很容易看出解法的题目，另外简单题目一般使用暴力法都是可以解决的。 这个时候只有看一下数据范围，思考下你的算法复杂度就行了。\n\n当然也不排除很多 hard 题目也可以暴力模拟，大家平时多注意数据范围即可。\n\n以下是我列举的经典题目（带 91 字样的表示出自 **91 天学算法**活动）：\n\n- [面试题 17.12. BiNode](./problems/binode-lcci.md)\n- [0001. 两数之和](./problems/1.two-sum.md) 👍\n- [0020. 有效的括号](./problems/20.valid-parentheses.md) 👍\n- [0021. 合并两个有序链表](./problems/21.merge-two-sorted-lists.md)\n- [0026. 删除排序数组中的重复项](./problems/26.remove-duplicates-from-sorted-array.md)\n- [0053. 最大子序和](./problems/53.maximum-sum-subarray-cn.md)\n- [0066. 加一](./problems/66.plus-one.md) 91\n- [0088. 合并两个有序数组](./problems/88.merge-sorted-array.md)\n- [0101. 对称二叉树](./problems/101.symmetric-tree.md)\n- [0104. 二叉树的最大深度](./problems/104.maximum-depth-of-binary-tree.md)\n- [0108. 将有序数组转换为二叉搜索树](./problems/108.convert-sorted-array-to-binary-search-tree.md)\n- [0121. 买卖股票的最佳时机](./problems/121.best-time-to-buy-and-sell-stock.md)\n- [0122. 买卖股票的最佳时机 II](./problems/122.best-time-to-buy-and-sell-stock-ii.md)\n- [0125. 验证回文串](./problems/125.valid-palindrome.md) 👍\n- [0136. 只出现一次的数字](./problems/136.single-number.md)\n- [0155. 最小栈](./problems/155.min-stack.md)\n- [0160. 相交链表](./problems/160.Intersection-of-Two-Linked-Lists.md) 91\n- [0167. 两数之和 II 输入有序数组](./problems/167.two-sum-ii-input-array-is-sorted.md)\n- [0169. 多数元素](./problems/169.majority-element.md)\n- [0172. 阶乘后的零](./problems/172.factorial-trailing-zeroes.md)\n- [0190. 颠倒二进制位](./problems/190.reverse-bits.md)\n- [0191. 位 1 的个数](./problems/191.number-of-1-bits.md) 👍\n- [0198. 打家劫舍](./problems/198.house-robber.md)\n- [0203. 移除链表元素](./problems/203.remove-linked-list-elements.md)\n- [0206. 反转链表](./problems/206.reverse-linked-list.md)\n- [0219. 存在重复元素 II](./problems/219.contains-duplicate-ii.md)\n- [0226. 翻转二叉树](./problems/226.invert-binary-tree.md)\n- [0232. 用栈实现队列](./problems/232.implement-queue-using-stacks.md) 91\n- [0263. 丑数](./problems/263.ugly-number.md)\n- [0283. 移动零](./problems/283.move-zeroes.md)\n- [0342. 4 的幂](./problems/342.power-of-four.md)\n- [0349. 两个数组的交集](./problems/349.intersection-of-two-arrays.md)\n- [0371. 两整数之和](./problems/371.sum-of-two-integers.md)\n- [401. 二进制手表](./problems/401.binary-watch.md)\n- [0437. 路径总和 III](./problems/437.path-sum-iii.md)\n- [0455. 分发饼干](./problems/455.AssignCookies.md)\n- [0504. 七进制数](./problems/504.base-7.md)\n- [0575. 分糖果](./problems/575.distribute-candies.md)\n- [0665. 非递减数列](./problems/665.non-decreasing-array.md)\n- [821. 字符的最短距离](./problems/821.shortest-distance-to-a-character.md) 91\n- [0874. 模拟行走机器人](./problems/874.walking-robot-simulation.md)\n- [1128. 等价多米诺骨牌对的数量](./problems/1128.number-of-equivalent-domino-pairs.md)\n- [1260. 二维网格迁移](./problems/1260.shift-2d-grid.md)\n- [1332. 删除回文子序列](./problems/1332.remove-palindromic-subsequences.md)\n\n### 中等难度题目合集\n\n中等题目是力扣比例最大的部分，因此这部分我的题解也是最多的。 大家不要太过追求难题，先把中等难度题目做熟了再说。\n\n这部分的题目要不需要我们挖掘题目的内含信息， 将其抽象成简单题目。 要么是一些写起来比较麻烦的题目， 一些人编码能力不行就挂了。因此大家一定要自己做， 即使看了题解”会了“，也要自己码一遍。自己不亲自写一遍，里面的细节永远不知道。\n\n以下是我列举的经典题目（带 91 字样的表示出自 **91 天学算法**活动）：\n\n- [面试题 17.09. 第 k 个数](./problems/get-kth-magic-number-lcci.md)\n- [面试题 17.23. 最大黑方阵](./problems/max-black-square-lcci.md)🆕\n- [面试题 16.16. 部分排序](./problems/sub-sort-lcci.md)\n- [Increasing Digits](./problems/Increasing-Digits.md) 👍\n- [Longest Contiguously Strictly Increasing Sublist After Deletion](./problems/Longest-Contiguously-Strictly-Increasing-Sublist-After-Deletion.md) 👍\n- [Consecutive Wins](./problems/consecutive-wins.md)\n- [Number of Substrings with Single Character Difference](./problems/Number-of-Substrings-with-Single-Character-Difference.md)\n- [Bus Fare](./problems/Bus-Fare.md) 👍\n- [Minimum Dropping Path Sum](./problems/Minimum-Dropping-Path-Sum.md)\n- [Every Sublist Min Sum](./problems/Every-Sublist-Min-Sum.md)\n- [Maximize the Number of Equivalent Pairs After Swaps](./problems/Maximize-the-Number-of-Equivalent-Pairs-After-Swaps.md)\n- [0002. 两数相加](./problems/2.add-two-numbers.md)\n- [0003. 无重复字符的最长子串](./problems/3.longest-substring-without-repeating-characters.md)\n- [0005. 最长回文子串](./problems/5.longest-palindromic-substring.md)\n- [0011. 盛最多水的容器](./problems/11.container-with-most-water.md)\n- [0015. 三数之和](./problems/15.3sum.md)\n- [0017. 电话号码的字母组合](./problems/17.Letter-Combinations-of-a-Phone-Number.md)\n- [0019. 删除链表的倒数第 N 个节点](./problems/19.removeNthNodeFromEndofList.md)\n- [0022. 括号生成](./problems/22.generate-parentheses.md)\n- [0024. 两两交换链表中的节点](./problems/24.swapNodesInPairs.md)\n- [0029. 两数相除](./problems/29.divide-two-integers.md)\n- [0031. 下一个排列](./problems/31.next-permutation.md)\n- [0033. 搜索旋转排序数组](./problems/33.search-in-rotated-sorted-array.md)\n- [0039. 组合总和](./problems/39.combination-sum.md)\n- [0040. 组合总和 II](./problems/40.combination-sum-ii.md)\n- [0046. 全排列](./problems/46.permutations.md)\n- [0047. 全排列 II](./problems/47.permutations-ii.md)\n- [0048. 旋转图像](./problems/48.rotate-image.md)\n- [0049. 字母异位词分组](./problems/49.group-anagrams.md)\n- [0050. Pow(x, n)](./problems/50.pow-x-n.md)\n- [0055. 跳跃游戏](./problems/55.jump-game.md)\n- [0056. 合并区间](./problems/56.merge-intervals.md)\n- [0060. 第 k 个排列](./problems/60.permutation-sequence.md)\n- [0061. 旋转链表](./problems/61.Rotate-List.md) 91\n- [0062. 不同路径](./problems/62.unique-paths.md)\n- [0073. 矩阵置零](./problems/73.set-matrix-zeroes.md)\n- [0075. 颜色分类](./problems/75.sort-colors.md)\n- [0078. 子集](./problems/78.subsets.md)\n- [0079. 单词搜索](./problems/79.word-search.md)\n- [0080. 删除排序数组中的重复项 II](./problems/80.remove-duplicates-from-sorted-array-ii.md)\n- [0086. 分隔链表](./problems/86.partition-list.md)\n- [0090. 子集 II](./problems/90.subsets-ii.md)\n- [0091. 解码方法](./problems/91.decode-ways.md)\n- [0092. 反转链表 II](./problems/92.reverse-linked-list-ii.md)\n- [0094. 二叉树的中序遍历](./problems/94.binary-tree-inorder-traversal.md)\n- [0095. 不同的二叉搜索树 II](./problems/95.unique-binary-search-trees-ii.md)\n- [0096. 不同的二叉搜索树](./problems/96.unique-binary-search-trees.md)\n- [0098. 验证二叉搜索树](./problems/98.validate-binary-search-tree.md)\n- [0102. 二叉树的层序遍历](./problems/102.binary-tree-level-order-traversal.md)\n- [0103. 二叉树的锯齿形层次遍历](./problems/103.binary-tree-zigzag-level-order-traversal.md)\n- [0113. 路径总和 II](./problems/113.path-sum-ii.md)\n- [0129. 求根到叶子节点数字之和](./problems/129.sum-root-to-leaf-numbers.md)\n- [0130. 被围绕的区域](./problems/130.surrounded-regions.md)\n- [0131. 分割回文串](./problems/131.palindrome-partitioning.md)\n- [0139. 单词拆分](./problems/139.word-break.md)\n- [0144. 二叉树的前序遍历](./problems/144.binary-tree-preorder-traversal.md)\n- [0147. 对链表进行插入排序](./problems/147.insertion-sort-list.md)\n- [0150. 逆波兰表达式求值](./problems/150.evaluate-reverse-polish-notation.md)\n- [0152. 乘积最大子数组](./problems/152.maximum-product-subarray.md)\n- [0153. 寻找旋转排序数组中的最小值](./problems/153.find-minimum-in-rotated-sorted-array.md)\n- [0199. 二叉树的右视图](./problems/199.binary-tree-right-side-view.md)\n- [0200. 岛屿数量](./problems/200.number-of-islands.md)\n- [0201. 数字范围按位与](./problems/201.bitwise-and-of-numbers-range.md)\n- [0208. 实现 Trie (前缀树)](./problems/208.implement-trie-prefix-tree.md)\n- [0209. 长度最小的子数组](./problems/209.minimum-size-subarray-sum.md)\n- [0211. 添加与搜索单词 - 数据结构设计](./problems/211.add-and-search-word-data-structure-design.md)\n- [0215. 数组中的第 K 个最大元素](./problems/215.kth-largest-element-in-an-array.md)\n- [0220. 存在重复元素 III](./problems/220.contains-duplicate-iii.md)\n- [0221. 最大正方形](./problems/221.maximal-square.md)\n- [0227. 基本计算器 II](./problems/227.basic-calculator-ii.md) 👍\n- [0229. 求众数 II](./problems/229.majority-element-ii.md) 👍\n- [0230. 二叉搜索树中第 K 小的元素](./problems/230.kth-smallest-element-in-a-bst.md)\n- [0236. 二叉树的最近公共祖先](./problems/236.lowest-common-ancestor-of-a-binary-tree.md)\n- [0238. 除自身以外数组的乘积](./problems/238.product-of-array-except-self.md)\n- [0240. 搜索二维矩阵 II](./problems/240.search-a-2-d-matrix-ii.md)\n- [0279. 完全平方数](./problems/279.perfect-squares.md)\n- [0309. 最佳买卖股票时机含冷冻期](./problems/309.best-time-to-buy-and-sell-stock-with-cooldown.md) 👍\n- [0322. 零钱兑换](./problems/322.coin-change.md)\n- [0328. 奇偶链表](./problems/328.odd-even-linked-list.md)\n- [0331. 验证二叉树的前序序列化](./problems/331.verify-preorder-serialization-of-a-binary-tree.md) 👍\n- [0334. 递增的三元子序列](./problems/334.increasing-triplet-subsequence.md) 👍\n- [0337. 打家劫舍 III](./problems/337.house-robber-iii.md)\n- [0343. 整数拆分](./problems/343.integer-break.md) 👍\n- [0365. 水壶问题](./problems/365.water-and-jug-problem.md)\n- [0378. 有序矩阵中第 K 小的元素](./problems/378.kth-smallest-element-in-a-sorted-matrix.md)\n- [0380. 常数时间插入、删除和获取随机元素](./problems/380.insert-delete-getrandom-o1.md) 👍\n- [0394. 字符串解码](./problems/394.decode-string.md) 91 👍\n- [0416. 分割等和子集](./problems/416.partition-equal-subset-sum.md)\n- [0424. 替换后的最长重复字符](./problems/424.longest-repeating-character-replacement.md)\n- [0438. 找到字符串中所有字母异位词](./problems/438.find-all-anagrams-in-a-string.md)\n- [0445. 两数相加 II](./problems/445.add-two-numbers-ii.md)\n- [0454. 四数相加 II](./problems/454.4-sum-ii.md)\n- [0456. 132 模式](./problems/456.132-pattern.md) 👍\n- [0457.457. 环形数组是否存在循环](./problems/457.circular-array-loop.md)\n- [0464. 我能赢么](./problems/464.can-i-win.md) 👍\n- [0470. 用 Rand7() 实现 Rand10](./problems/470.implement-rand10-using-rand7.md)\n- [0473. 火柴拼正方形](./problems/473.matchsticks-to-square.md) 👍\n- [0494. 目标和](./problems/494.target-sum.md)\n- [0516. 最长回文子序列](./problems/516.longest-palindromic-subsequence.md)\n- [0513. 找树左下角的值](./problems/513.find-bottom-left-tree-value.md) 91\n- [0518. 零钱兑换 II](./problems/518.coin-change-2.md)\n- [0525. 连续数组](./problems/525.contiguous-array.md)\n- [0547. 朋友圈](./problems/547.friend-circles.md)\n- [0560. 和为 K 的子数组](./problems/560.subarray-sum-equals-k.md)\n- [0609. 在系统中查找重复文件](./problems/609.find-duplicate-file-in-system.md)\n- [0611. 有效三角形的个数](./problems/611.valid-triangle-number.md) 👍\n- [0673. 最长递增子序列的个数](./problems/673.number-of-longest-increasing-subsequence.md)\n- [0686. 重复叠加字符串匹配](./problems/686.repeated-string-match.md)\n- [0714. 买卖股票的最佳时机含手续费](./problems/714.best-time-to-buy-and-sell-stock-with-transaction-fee.md) 👍\n- [0718. 最长重复子数组](./problems/718.maximum-length-of-repeated-subarray.md)\n- [0735. 行星碰撞](./problems/735.asteroid-collision.md)\n- [0754. 到达终点数字](./problems/754.reach-a-number.md) 👍\n- [0785. 判断二分图](./problems/785.is-graph-bipartite.md) 👍\n- [0790. 多米诺和托米诺平铺](./problems/790.domino-and-tromino-tiling.md) 👍\n- [0799. 香槟塔](./problems/799.champagne-tower.md) 👍\n- [0801. 使序列递增的最小交换次数](./problems/801.minimum-swaps-to-make-sequences-increasing.md) 👍\n- [0816. 模糊坐标](./problems/816.ambiguous-coordinates.md) 👍\n- [0820. 单词的压缩编码](./problems/820.short-encoding-of-words.md)\n- [0838. 推多米诺](./problems/838.push-dominoes.md)\n- [0873. 最长的斐波那契子序列的长度](./problems/873.length-of-longest-fibonacci-subsequence.md) 👍\n- [0875. 爱吃香蕉的珂珂](./problems/875.koko-eating-bananas.md)\n- [0877. 石子游戏](./problems/877.stone-game.md)\n- [0886. 可能的二分法](./problems/886.possible-bipartition.md)\n- [0898. 子数组按位或操作](./problems/898.bitwise-ors-of-subarrays.md) 👍\n- [0900. RLE 迭代器](./problems/900.rle-iterator.md) 👍\n- [0911. 在线选举](./problems/911.online-election.md)\n- [0912. 排序数组](./problems/912.sort-an-array.md)\n- [0932. 漂亮数组](./problems/932.beautiful-array.md)\n- [0935. 骑士拨号器](./problems/935.knight-dialer.md)\n- [0947. 移除最多的同行或同列石头](./problems/947.most-stones-removed-with-same-row-or-column.md) 👍\n- [0959. 由斜杠划分区域](./problems/959.regions-cut-by-slashes.md)\n- [0978. 最长湍流子数组](./problems/978.longest-turbulent-subarray.md) 👍\n- [0987. 二叉树的垂序遍历](./problems/987.vertical-order-traversal-of-a-binary-tree.md) 91\n- [1004. 最大连续 1 的个数 III](./problems/1004.max-consecutive-ones-iii.md)\n- [1011. 在 D 天内送达包裹的能力](./problems/1011.capacity-to-ship-packages-within-d-days.md)\n- [1014. 最佳观光组合](./problems/1014.best-sightseeing-pair.md) 👍\n- [1015. 可被 K 整除的最小整数](./problems/1015.smallest-integer-divisible-by-k.md) 👍\n- [1019. 链表中的下一个更大节点](./problems/1019.next-greater-node-in-linked-list.md)\n- [1020. 飞地的数量](./problems/1020.number-of-enclaves.md)\n- [1023. 驼峰式匹配](./problems/1023.camelcase-matching.md)\n- [1031. 两个非重叠子数组的最大和](./problems/1031.maximum-sum-of-two-non-overlapping-subarrays.md)\n- [1043. 分隔数组以得到最大和](./problems/1043.partition-array-for-maximum-sum.md) 👍\n- [1104. 二叉树寻路](./problems/1104.path-in-zigzag-labelled-binary-tree.md) 👍\n- [1129. 颜色交替的最短路径](./problems/1129.shortest-path-with-alternating-colors.md)\n- [1131.绝对值表达式的最大值](./problems/1131.maximum-of-absolute-value-expression.md) 👍\n- [1138. 字母板上的路径](./problems/1138.alphabet-board-path.md)\n- [1186. 删除一次得到子数组最大和](./problems/1186.maximum-subarray-sum-with-one-deletion.md) 👍\n- [1218. 最长定差子序列](./problems/1218.longest-arithmetic-subsequence-of-given-difference.md) 👍\n- [1227. 飞机座位分配概率](./problems/1227.airplane-seat-assignment-probability.md) 👍\n- [1261. 在受污染的二叉树中查找元素](./problems/1261.find-elements-in-a-contaminated-binary-tree.md) 👍\n- [1262. 可被三整除的最大和](./problems/1262.greatest-sum-divisible-by-three.md) 👍\n- [1297. 子串的最大出现次数](./problems/1297.maximum-number-of-occurrences-of-a-substring.md) 👍\n- [1310. 子数组异或查询](./problems/1310.xor-queries-of-a-subarray.md)\n- [1334. 阈值距离内邻居最少的城市](./problems/1334.find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance.md) 👍\n- [1371.每个元音包含偶数次的最长子字符串](./problems/1371.find-the-longest-substring-containing-vowels-in-even-counts.md)\n- [1381. 设计一个支持增量操作的栈](./problems/1381.design-a-stack-with-increment-operation.md) 91 👍\n- [1438. 绝对差不超过限制的最长连续子数组](./problems/1438.longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.md) 👍\n- [1558. 得到目标数组的最少函数调用次数](./problems/1558.minimum-numbers-of-function-calls-to-make-target-array.md) 👍\n- [1574. 删除最短的子数组使剩余数组有序](./problems/1574.shortest-subarray-to-be-removed-to-make-array-sorted.md)\n- [1631. 最小体力消耗路径](./problems/1631.path-with-minimum-effort.md)\n- [1658. 将 x 减到 0 的最小操作数](./problems/1658.minimum-operations-to-reduce-x-to-zero.md)\n- [1697. 检查边长度限制的路径是否存在](./problems/1697.checking-existence-of-edge-length-limited-paths.md)\n- [1737. 满足三条件之一需改变的最少字符数](./problems/1737.change-minimum-characters-to-satisfy-one-of-three-conditions.md) 👍\n- [1834. 单线程 CPU](./problems/1834.single-threaded-cpu.md)\n- [1899. 合并若干三元组以形成目标三元组](./problems/1899.merge-triplets-to-form-target-triplet.md) 👍\n- [1904. 你完成的完整对局数](./problems/1904.the-number-of-full-rounds-you-have-played.md)\n- [1906. 查询差绝对值的最小值](./problems/1906.minimum-absolute-difference-queries.md)\n- [1906. 查询差绝对值的最小值](./problems/1906.minimum-absolute-difference-queries.md)\n- [2007. 从双倍数组中还原原数组](./problems/2007.find-original-array-from-doubled-array.md)\n- [2008. 出租车的最大盈利](./problems/2008.maximum-earnings-from-taxi.md)\n- [5935. 适合打劫银行的日子](./problems/5935.find-good-days-to-rob-the-bank.md)\n- [5936. 引爆最多的炸弹](./problems/5936.detonate-the-maximum-bombs.md)\n- [5965. 相同元素的间隔之和](./problems/5965.intervals-between-identical-elements.md)\n\n### 困难难度题目合集\n\n困难难度题目从类型上说多是：\n\n- 图\n- 设计题\n- 游戏场景题目\n- 中等题目的 follow up\n\n从解法上来说，多是：\n\n- 图算法\n- 动态规划\n- 二分法\n- DFS & BFS\n- 状态压缩\n- 剪枝\n\n从逻辑上说， 要么就是非常难想到，要么就是非常难写代码。 这里我总结了几个技巧：\n\n1. 看题目的数据范围， 看能否暴力模拟\n2. 暴力枚举所有可能的算法往上套，比如图的题目。\n3. 总结和记忆解题模板，减少解题压力\n\n以下是我列举的经典题目（带 91 字样的表示出自 **91 天学算法**活动）：\n\n- [LCP 20. 快速公交](./problems/lcp20.meChtZ.md)\n- [LCP 21. 追逐游戏](./problems/lcp21.Za25hA.md) 👍\n- [Number Stream to Intervals](./problems/Number-Stream-to-Intervals.md)\n- [Triple-Inversion](./problems/Triple-Inversion.md) 91\n- [Kth-Pair-Distance](./problems/Kth-Pair-Distance.md) 91\n- [Minimum-Light-Radius](./problems/Minimum-Light-Radius.md) 91\n- [Largest Equivalent Set of Pairs](./problems/Largest-Equivalent-Set-of-Pairs.md) 👍\n- [Ticket-Order.md](./problems/Ticket-Order.md)\n- [Connected-Road-to-Destination](./problems/Connected-Road-to-Destination.md)\n- [0004. 寻找两个正序数组的中位数](./problems/4.median-of-two-sorted-arrays.md)\n- [0023. 合并 K 个升序链表](./problems/23.merge-k-sorted-lists.md)\n- [0025. K 个一组翻转链表](./problems/25.reverse-nodes-in-k-groups.md)\n- [0030. 串联所有单词的子串](./problems/30.substring-with-concatenation-of-all-words.md)\n- [0032. 最长有效括号](./problems/32.longest-valid-parentheses.md)\n- [0042. 接雨水](./problems/42.trapping-rain-water.md)\n- [0052. N 皇后 II](./problems/52.N-Queens-II.md)\n- [0057. 插入区间](problems/57.insert-interval.md)\n- [0065. 有效数字](problems/65.valid-number.md)\n- [0084. 柱状图中最大的矩形](./problems/84.largest-rectangle-in-histogram.md)\n- [0085. 最大矩形](./problems/85.maximal-rectangle.md)\n- [0087. 扰乱字符串](./problems/87.scramble-string.md)\n- [0124. 二叉树中的最大路径和](./problems/124.binary-tree-maximum-path-sum.md)\n- [0128. 最长连续序列](./problems/128.longest-consecutive-sequence.md)\n- [0132. 分割回文串 II](./problems/132.palindrome-partitioning-ii.md) 👍\n- [0140. 单词拆分 II](problems/140.word-break-ii.md)\n- [0145. 二叉树的后序遍历](./problems/145.binary-tree-postorder-traversal.md)\n- [0146. LRU 缓存机制](./problems/146.lru-cache.md)\n- [0154. 寻找旋转排序数组中的最小值 II](./problems/154.find-minimum-in-rotated-sorted-array-ii.md)\n- [0212. 单词搜索 II](./problems/212.word-search-ii.md)\n- [0239. 滑动窗口最大值](./problems/239.sliding-window-maximum.md)\n- [0295. 数据流的中位数](./problems/295.find-median-from-data-stream.md)\n- [0297. 二叉树的序列化与反序列化](./problems/297.serialize-and-deserialize-binary-tree.md) 91\n- [0301. 删除无效的括号](./problems/301.remove-invalid-parentheses.md)\n- [0312. 戳气球](./problems/312.burst-balloons.md)\n- [330. 按要求补齐数组](./problems/330.patching-array.md)\n- [0335. 路径交叉](./problems/335.self-crossing.md)\n- [0460. LFU 缓存](./problems/460.lfu-cache.md)\n- [0472. 连接词](./problems/472.concatenated-words.md)\n- [0480. 滑动窗口中位数](./problems/480.sliding-window-median.md)\n- [0483. 最小好进制](./problems/483.smallest-good-base.md)\n- [0488. 祖玛游戏](./problems/488.zuma-game.md)\n- [0493. 翻转对](./problems/493.reverse-pairs.md)\n- [0664. 奇怪的打印机](./problems/664.strange-printer.md)\n- [0679. 24 点游戏](./problems/679.24-game.md)\n- [0715. Range 模块](./problems/715.range-module.md)\n- [0726. 原子的数量](./problems/726.number-of-atoms.md)\n- [0768. 最多能完成排序的块 II](./problems/768.max-chunks-to-make-sorted-ii.md) 91\n- [0805. 数组的均值分割](./problems/805.split-array-with-same-average.md)\n- [0839. 相似字符串组](./problems/839.similar-string-groups.md)\n- [0887. 鸡蛋掉落](./problems/887.super-egg-drop.md)\n- [0895. 最大频率栈](./problems/895.maximum-frequency-stack.md)\n- [0975. 奇偶跳](./problems/975.odd-even-jump.md)\n- [0995. K 连续位的最小翻转次数](./problems/995.minimum-number-of-k-consecutive-bit-flips.md)\n- [1032. 字符流](./problems/1032.stream-of-characters.md)\n- [1168. 水资源分配优化](./problems/1168.optimize-water-distribution-in-a-village.md)\n- [1178. 猜字谜](./problems/1178.number-of-valid-words-for-each-puzzle.md)\n- [1203. 项目管理](./problems/1203.sort-items-by-groups-respecting-dependencies.md)\n- [1255. 得分最高的单词集合](./problems/1255.maximum-score-words-formed-by-letters.md)\n- [1345. 跳跃游戏 IV](./problems/1435.jump-game-iv.md)\n- [1449. 数位成本和为目标值的最大数字](./problems/1449.form-largest-integer-with-digits-that-add-up-to-target.md)\n- [1494. 并行课程 II](./problems/1494.parallel-courses-ii.md)\n- [1521. 找到最接近目标值的函数值](./problems/1521.find-a-value-of-a-mysterious-function-closest-to-target.md)\n- [1526. 形成目标数组的子数组最少增加次数](./problems/1526.minimum-number-of-increments-on-subarrays-to-form-a-target-array.md)\n- [1649. 通过指令创建有序数组](./problems/1649.create-sorted-array-through-instructions.md)\n- [1671. 得到山形数组的最少删除次数](./problems/1671.minimum-number-of-removals-to-make-mountain-array.md)\n- [1707. 与数组中元素的最大异或值](./problems/5640.maximum-xor-with-an-element-from-array.md)\n- [1713. 得到子序列的最少操作次数](./problems/1713.minimum-operations-to-make-a-subsequence.md)\n- [1723. 完成所有工作的最短时间](./problems/1723.find-minimum-time-to-finish-all-jobs.md)\n- [1787. 使所有区间的异或结果为零](./problems/1787.make-the-xor-of-all-segments-equal-to-zero.md)\n- [1835. 所有数对按位与结果的异或和](./problems/1835.find-xor-sum-of-all-pairs-bitwise-and.md)\n- [1871. 跳跃游戏 VII](./problems/1871.jump-game-vii.md) 👍\n- [1872. 石子游戏 VIII](./problems/1872.stone-game-viii.md)\n- [1883. 准时抵达会议现场的最小跳过休息次数](./problems/5775.minimum-skips-to-arrive-at-meeting-on-time.md)\n- [1970. 你能穿过矩阵的最后一天](./problems/1970.last-day-where-you-can-still-cross.md)\n- [2009. 使数组连续的最少操作数](./problems/2009.minimum-number-of-operations-to-make-array-continuous.md)\n- [2025. 分割数组的最多方案数](./problems/2025.maximum-number-of-ways-to-partition-an-array.md)\n- [2030. 含特定字母的最小子序列](./problems/2030.smallest-k-length-subsequence-with-occurrences-of-a-letter.md)\n- [2102. 序列顺序查询](./problems/2102.sequentially-ordinal-rank-tracker.md)\n- [2209. 用地毯覆盖后的最少白色砖块](./problems/2209.minimum-white-tiles-after-covering-with-carpets.md)\n- [2281.sum-of-total-strength-of-wizards](./problems/2281.sum-of-total-strength-of-wizards.md)\n- [2306. 公司命名](./problems/2306.naming-a-company.md) 枚举优化好题\n- [5254. 卖木头块](./problems/5254.selling-pieces-of-wood.md) 动态规划经典题\n- [5999. 统计数组中好三元组数目](./problems/5999.count-good-triplets-in-an-array.md) 👍\n\n## &nbsp;anki 卡片\n\nAnki 主要分为两个部分：一部分是关键点到题目的映射，另一部分是题目到思路，关键点，代码的映射。\n\n全部卡片都在 [anki-card](./assets/anki/leetcode.apkg)\n\n使用方法：\n\nanki - 文件 - 导入 - 下拉格式选择“打包的 anki 集合”，然后选中你下载好的文件，确定即可。\n\n更多关于 anki 使用方法的请查看 [anki 官网](https://apps.ankiweb.net/)\n\n目前已更新卡片一览（仅列举正面）：\n\n- 二分法解决问题的关键点是什么，相关问题有哪些？\n- 如何用栈的特点来简化操作， 涉及到的题目有哪些？\n- 双指针问题的思路以及相关题目有哪些？\n- 滑动窗口问题的思路以及相关题目有哪些？\n- 回溯法解题的思路以及相关题目有哪些？\n- 数论解决问题的关键点是什么，相关问题有哪些？\n- 位运算解决问题的关键点是什么，相关问题有哪些？\n\n> 已加入的题目有：#2 #3 #11\n\n## 大事件\n\n- 2019-07-10 ：[纪念项目 Star 突破 1W 的一个短文](./thanksGiving.md)， 记录了项目的\"兴起\"之路，大家有兴趣可以看一下，如果对这个项目感兴趣，请**点击一下 Star**， 项目会**持续更新**，感谢大家的支持。\n\n- 2019-10-08: [纪念 LeetCode 项目 Star 突破 2W](./thanksGiving2.md)，并且 Github 搜索“LeetCode”，排名第一。\n\n- 2020-04-12: [项目突破三万 Star](./thanksGiving3.md)。\n- 2020-04-14//leetcode-solution.cn/\n\n![](https://p.ipic.vip/pq92y4.jpg)\n\n- 2021-02-23: star 破四万\n\n## 贡献\n\n- 如果有想法和创意，请提 [issue](https://github.com/azl397985856/leetcode/issues) 或者进群提\n- 如果想贡献增加题解或者翻译， 可以参考 [贡献指南](./CONTRIBUTING.md)\n  > 关于如何提交题解，我写了一份 [指南](./templates/problems/1014.best-sightseeing-pair.md)\n- 如果需要修改项目中图片，[这里](./assets/drawio/) 存放了项目中绘制图的源代码， 大家可以用 [draw.io](https://www.draw.io/) 打开进行编辑。\n\n## 鸣谢\n\n感谢为这个项目作出贡献的所有 [小伙伴](https://github.com/azl397985856/leetcode/graphs/contributors)\n\n## License\n\n[CC BY-NC-ND 4.0](./LICENSE.txt)\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.12,
          "content": "{\n  \"scripts\": {\n    \"book\": \"gitbook epub . && gitbook pdf . && gitbook mobi . \"\n  },\n  \"license\": \"CC BY-NC-ND 4.0\"\n}\n"
        },
        {
          "name": "problems",
          "type": "tree",
          "content": null
        },
        {
          "name": "selected",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "thanksGiving.md",
          "type": "blob",
          "size": 3.89,
          "content": "## ThanksGaving\n\n就在今天，我的《leetcode题解》项目首次突破1wstar， 在这里我特地写下这篇文章来记录这个时刻，同时非常感谢大家的支持和陪伴。\n\n![star-history](https://p.ipic.vip/ngminn.jpg)\n\n(star增长曲线图)\n\n前几天，去了一趟山城重庆，在那里遇到了最美的人和最漂亮的风景。\n\n![chongqing-1](https://p.ipic.vip/4uha9n.jpg)\n\n![chongqing-2](https://p.ipic.vip/85963z.jpg)\n\n![chongqing-3](https://p.ipic.vip/jx54zu.jpg)\n\n我是一个念旧的人，现在是节后的第一天，让我开启回忆模式：\n\n- 2017-05-30 项目成立，那是的它只是用来占位而已，目的就是让自己知道之后要做这件事。\n\n![first commit](https://p.ipic.vip/3x958s.jpg)\n\n(第一次提交)\n\n- 2017-12-14 项目也只有10个star，那是的项目其实就是几个孤零零的题目，事实上我也没有花精力去做。\n\n- 2019-04 开始了井喷式的增长，我开始花时间去完成它，推广它\n\n在朋友圈推广：\n\n![朋友圈宣传](https://p.ipic.vip/na5bhm.jpg)\n\n(在朋友圈宣传)\n\n同时在掘金,sf以及知乎推广，但是收效不是很明显，那时候项目首次破百，这也是我第一个破百的项目。\n\n- 之后我组建了微信和qq群，来让大家活跃起来，促进交流，戒指目前(2019-06-10)微信群总人数已经超过700，\n里面有非常多的学生，留学生以及全球各地各大公司的员工。\n\n![群聊-qq](https://p.ipic.vip/8tj7iu.jpg)\n\n(qq群)\n\n![群聊-wechat](https://p.ipic.vip/4paakc.jpg)\n\n(微信群)\n\n\n之后先后通过@每日时报, @阮一峰，@d2,@hello-github等的宣传，又迎来的一次高峰，\n在那一段时间大概突破了1k。\n\n![ruanyifeng](https://p.ipic.vip/olsy7z.jpg)\n\n(阮一峰的周报)\n\n![hello-github](https://p.ipic.vip/6r7cgm.jpg)\n\n(hello-github也收录了我和我的仓库)\n\n二次元的司徒正美老师虽然没有帮忙宣传，但是它的star也在某种程度上起到了宣传作用。\n\n![司徒正美](https://p.ipic.vip/5vyj6j.jpg)\n\n(司徒正美)\n\n并且之后这个项目在github trending活跃了一个月左右，甚至有一次冲上了日榜的总榜第一，并被“开发者头条”收入《GitHub Trending - All - Daily》。\n\n\n![日榜第一](https://p.ipic.vip/fnow1s.jpg)\n\n(日榜第一)\n\n![开发者头条](https://p.ipic.vip/dwvzgj.jpg)\n\n(开发者头条的微博号)\n\n\n截止到2019-06-10，项目star首次破万，幸运的是我刚好捕捉到了第9999个小可爱.\n\n![9999](https://p.ipic.vip/6pfwhg.jpg)\n\n(9999，一个很有意思的数字)\n\n- 现在这个项目不仅仅是自己做题，更多的是大家一起交流和成长。 \n\n现在，项目除了JS，也在逐步加入C++，python，多编程语言正在筹备中。\n\n![多语言支持](https://p.ipic.vip/0l5ide.jpg)\n\n(我们正在努力加入更多编程语言)\n\n另外，在大家的帮助下，我们也逐步走上了国际化，不仅仅有人来主动做翻译，还组建了电报群。\n\n![英文主页](https://p.ipic.vip/0i0258.jpg)\n\n(英文主页)\n\n![英语进展](https://p.ipic.vip/sd2sxr.jpg)\n\n(英文翻译进展)\n\n也不知道什么时候，《量子论》竟然悄悄地在知乎帮我宣传。\n\n![量子论](https://p.ipic.vip/e6v3x7.jpg)\n\n(知乎 - 量子论)\n\n与此同时，我在知乎的最高赞竟然给了这条评论。\n\n![知乎点赞](https://p.ipic.vip/admds4.jpg)\n\n- 2019-06-04 首次在三个群里同步开通《每日一题》，大家也非常踊跃地帮忙整理题目，甚至出题给思路，非常感谢大家。\n\n![daily-problems](https://p.ipic.vip/4ner1u.jpg)\n\n非常感谢大家一直以来的陪伴和支持，我们一起努力，加油💪。\n\n如果你还没有加入我们，看了这篇文章想加入，那么可以访问我的项目主页 [leetcode题解](https://github.com/azl397985856/leetcode)\n我在这里等着你。\n\nPS: 有没有熟悉重庆的小伙伴，想请教一点事情，愿意的话加我私聊吧，先谢谢啦！\n\n"
        },
        {
          "name": "thanksGiving2.md",
          "type": "blob",
          "size": 5.05,
          "content": "假期这几天我买了《逆转裁判 123》合集，面对着这香喷喷的冷饭吃了半天。从 GBA 玩到 NDS，从 NDS 玩到 3DS, 现在 NS 虽然没有出新作有点遗憾。不过有了高清重制，也当是个回忆和收藏了 🎉🎉\n\n目前打通了第一第二关，剩下的过一段时间再玩好啦 😁\n![](https://p.ipic.vip/m1eixt.jpg)\n\n回到正题，就在今天，我的《leetcode 题解》项目成功突破 2w star， 并且现在 Github 搜索关键字\"LeetCode\"我的项目已经排名第一啦，这是继 1W star 之后的第二个巨大突破，非常感谢大家一路以来的支持和陪伴。\n\n![](https://p.ipic.vip/c2pxwa.jpg)\n\n最近在写一本关于 LeetCode 题解的书，有很多人表示想买，这无形之中给了我很大的压力，名字还没定，暂时给它取一个代号《攻克 LeetCode》。\n\n## 新书《攻克 LeetCode》\n\n![](https://p.ipic.vip/4eraft.jpg)\n\n这里是[《攻克 LeetCode》的草稿目录](https://lucifer.ren/blog/2019/10/03/draft/)，目前有 20 章的内容，本书要讲的内容就是 LeetCode 上反复出现的算法，经过我进一步提炼，抽取数百道题目在这里进行讲解，帮助大家理清整体思绪，从而高效率地刷题，做到事半功倍。我这里总结了 7 个常见的数据结构和 7 个常见的算法以及 5 个常见的算法思想。\n\n7 个数据结构分别是： `数组，栈，队列，链表，二叉树，散列表，图`\n\n7 个算法分别是：`二分法，递归，回溯法，排序，双指针，滑动窗口，并查集`\n\n5 个算法思想分别是：`分治，贪心，深度优先遍历，广度优先遍历，动态规划`\n\n只有掌握了这些基础的数据结构和算法，更为复杂的算法才能得心应手，事半功倍。而 LeetCode 的题目虽然不断出新，但是最终用到的算法永远是那几个，很多题目都是穿着新的衣服的老面孔了。大家学好这些基础套路之后会更加明白这个道理。\n\n后期可能会有大幅度修改，希望大家提出宝贵意见，以特别的方式参与到这本书的编写中来。\n\n## 2W star 截图\n\n![](https://p.ipic.vip/pfkp2n.jpg)\n\n## Star 曲线\n\n![](https://p.ipic.vip/k8ymwt.jpg)\n\n(star 增长曲线图)\n\n## 知乎引流\n\n[上次](https://github.com/azl397985856/leetcode/blob/master/thanksGiving.md)主要讲了项目从开始建立到拥有 1W star 的经历，本次书接前文，继续讲一下后面的故事。\n\n上回提到知乎上的“量子位”在帮我做宣传，引入了不小的流量。 我就想为什么不自己去拉流量呢？我自己以作者的角度去回答一些问题岂不是更好，更受欢迎么？于是我就开始在知乎上回答问题，很开心其中一个还获得了专业认可。\n\n![](https://p.ipic.vip/306jlu.jpg)\n\n事实上并没有我想的那么好，我回答了两个 LeetCode 话题的内容，虽然也有几百的点赞和感谢，但是这离我的目标还差很远。\n\n![](https://p.ipic.vip/qql53i.jpg)\n\n![](https://p.ipic.vip/l9j3ml.jpg)\n\n但是转念一想，我知乎刚起步，也没什么粉丝，并且写答案的时间也就一个月左右，这样想就好多了。 我相信将来会有更多的人看到我的答案，然后加入进来。\n\n![](https://p.ipic.vip/zlvpiu.jpg)\n\n![](https://p.ipic.vip/4tnu1d.jpg)\n\n## 建立自己的博客\n\n现在我发表的文章都是在各大平台。这有一个很大的问题就是各个平台很难满足你的需求，比如按照标签，按照日期进行归档。 甚至很多平台的阅读体验很差，比如没有导航功能，广告太多等。因此我觉得自己搭建一个博客还是很有必要的，这个渠道也为我吸引了少部分的流量，目前添加的主要内容大概有：\n\n![](https://p.ipic.vip/6fbi4i.jpg)\n\n![](https://p.ipic.vip/7dgeym.jpg)\n\n![](https://p.ipic.vip/fonj3b.jpg)\n\n总体上来说效果还是不错的，之后的文章会在博客首发，各个平台也会陆续更新，感兴趣的可以来个 RSS 订阅，订阅方式已经在[《每日一荐 - 九月刊》](https://lucifer.ren/blog/2019/09/30/daily-featured-2019-09/)里面介绍了。\n\n## GithubDaily 的 推荐\n\nGithubDaily 转载了量子位的文章也为我的仓库涨了至少几百的 star，非常感谢。GithubDaily 是一个拥有 3W 多读者的公众号，大家有兴趣的可以关注一波。\n\n![](https://p.ipic.vip/0bi9gh.jpg)\n\n![](https://p.ipic.vip/69zz2i.jpg)\n\n## 其他自媒体的推荐\n\n一些其他自媒体也会帮忙推广我的项目\n\n![](https://p.ipic.vip/h4t9j2.jpg)\n\n## 口耳相传\n\n我后来才知道竟然有海外华侨和一些华人社区都能看到我了。\n\n![](https://p.ipic.vip/3pv8ff.jpg)\n\n![](https://p.ipic.vip/et0qr0.jpg)\n（一亩三分地是一个集中讨论美国加拿大留学的论坛）\n\n另外通过朋友之间口耳相传的介绍也变得越来越多。\n\n非常感谢大家一直以来的陪伴和支持，我们一起努力，加油 💪。\n\n如果你还没有加入我们，看了这篇文章想加入，那么可以访问我的项目主页 [leetcode 题解](https://github.com/azl397985856/leetcode)\n我在这里等着你。\n"
        },
        {
          "name": "thanksGiving3.md",
          "type": "blob",
          "size": 2.42,
          "content": "差不多一年的时间，项目收获了第 3W 个 Star，平均差不多一天 100 左右的 star，非常感谢大家的关注和支持。\n\n## 30k 截图\n\n![](https://p.ipic.vip/3n3xjw.jpg)\n\n## Star 曲线\n\nStart 曲线上来看，有一点放缓。但是整体仍然是明显的上升趋势。\n\n![](https://p.ipic.vip/qggv0o.jpg)\n\n(star 增长曲线图)\n\n## 在力扣宣传\n\n当力扣官方也开始做`每日一题`的时候，我的心情是复杂的。怎么官方也开始学我搞每日一题了么？为了信仰（蹭热度），我也毅然决然参加了每日一题活动，贡献了几十篇题解。\n\n三月份是满勤奖，四月份有一次忘记了，缺卡一天。\n\n![](https://p.ipic.vip/cpxgpf.jpg)\n\n![](https://p.ipic.vip/v26lnx.jpg)\n\n## 新书即将上线\n\n新书详情戳这里：[《或许是一本可以彻底改变你刷 LeetCode 效率的题解书》](https://lucifer.ren/blog/2020/04/07/leetcode-book.intro/)，目前正在申请书号。\n\n![](https://p.ipic.vip/3h9kjm.jpg)\n\n点名感谢各位作者，审阅，以及行政小姐姐。\n\n## 视频题解\n\n最近开始做视频题解了，目前更新了五个视频。和文字题解不同，视频题解可以承载的内容会更多。 https://space.bilibili.com/519510412\n\n![](https://p.ipic.vip/6ldusk.jpg)\n\n我计划更新一些文字题解很难表述的内容，当然还会提供 PPT，如果你喜欢文字，直接看 PPT 即可。\n\n视频题解部分，我会带你拆解 LeetCode 题目，识别常见问题，掌握常见套路。\n\n注意：这不是教你解决某一道题的题解，而是掌握解题方法和思路的题解。\n\n## 《力扣加加》上线啦\n\n我们的官网`力扣加加`上线啦 💐💐💐💐💐，有专题讲解，每日一题，下载区和视频题解，后续会增加更多内容，还不赶紧收藏起来？地址：http://leetcode-solution.cn/\n\n![](https://p.ipic.vip/b8hfh4.jpg)\n\n点名感谢@三天 @CYL @Josephjinn\n\n## 朋友的支持\n\n很多朋友也在关注我的项目，非常开心。点名感谢 @被单-加加 @童欧巴。\n\n![](https://p.ipic.vip/ug8o5n.jpg)\n\n## 交流群\n\n交流群人数也有了很大的提升。 粉丝人数也扩充到了 7000+。交流群数目也增加到了 10 个。其中 QQ 群人数最多，有将近 1800 人。为了限制人数，我开启了收费模式，希望大家不要打我 😂。\n\n![](https://p.ipic.vip/9rzdnc.jpg)\n\n非常感谢大家一直以来的陪伴和支持，Fighting 💪。\n"
        },
        {
          "name": "thinkings",
          "type": "tree",
          "content": null
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 0.08,
          "content": "# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\n\n"
        }
      ]
    }
  ]
}