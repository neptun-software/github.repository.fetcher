{
  "metadata": {
    "timestamp": 1736710296724,
    "page": 80,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sqlite/sqlite",
      "stars": 7094,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".fossil-settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 3.7734375,
          "content": "License Information\n===================\n\nSQLite Is Public Domain\n-----------------------\n\nThe SQLite source code, including all of the files in the directories\nlisted in the bullets below are \n[Public Domain](https://sqlite.org/copyright.html).\nThe authors have submitted written affidavits releasing their work to\nthe public for any use.  Every byte of the public-domain code can be\ntraced back to the original authors.  The files of this repository\nthat are public domain include the following:\n\n  *  All of the primary SQLite source code files found in the\n     [src/ directory](https://sqlite.org/src/tree/src?type=tree&expand)\n  *  All of the test cases and testing code in the\n     [test/ directory](https://sqlite.org/src/tree/test?type=tree&expand)\n  *  All of the SQLite extension source code and test cases in the\n     [ext/ directory](https://sqlite.org/src/tree/ext?type=tree&expand)\n  *  All code that ends up in the \"sqlite3.c\" and \"sqlite3.h\" build products\n     that actually implement the SQLite RDBMS.\n  *  All of the code used to compile the\n     [command-line interface](https://sqlite.org/cli.html)\n  *  All of the code used to build various utility programs such as\n     \"sqldiff\", \"sqlite3_rsync\", and \"sqlite3_analyzer\".\n\n\nThe public domain source files usually contain a header comment\nsimilar to the following to make it clear that the software is\npublic domain.\n\n> ~~~\nThe author disclaims copyright to this source code.  In place of\na legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n~~~\n\nAlmost every file you find in this source repository will be\npublic domain.  But there are a small number of exceptions:\n\nNon-Public-Domain Code Included With This Source Repository AS A Convenience\n----------------------------------------------------------------------------\n\nThis repository contains a (relatively) small amount of non-public-domain\ncode used to help implement the configuration and build logic.  In other\nwords, there are some non-public-domain files used to implement:\n\n> ~~~\n./configure && make\n~~~\n\nIn all cases, the non-public-domain files included with this\nrepository have generous BSD-style licenses.  So anyone is free to\nuse any of the code in this source repository for any purpose, though\nattribution may be required to reuse or republish the configure and\nbuild scripts.  None of the non-public-domain code ever actually reaches\nthe build products, such as \"sqlite3.c\", however, so no attribution is\nrequired to use SQLite itself.  The non-public-domain code consists of\nscripts used to help compile SQLite.  The non-public-domain code is\ntechnically not part of SQLite.  The non-public-domain code is\nincluded in this repository as a convenience to developers, so that those\nwho want to build SQLite do not need to go download a bunch of\nthird-party build scripts in order to compile SQLite.\n\nNon-public-domain code included in this respository includes:\n\n  *  The [\"autosetup\"](http://msteveb.github.io/autosetup/) configuration\n     system that is contained (mostly) the autosetup/ directory, but also\n     includes the \"./configure\" script at the top-level of this archive.\n     Autosetup has a separate BSD-style license.  See the\n     [autosetup/LICENSE](http://msteveb.github.io/autosetup/license/)\n     for details.\n\n  *  There are BSD-style licenses on some of the configuration\n     software found in the legacy autoconf/ directory and its\n     subdirectories.\n\nThe following unix shell command is can be run from the top-level\nof this source repository in order to remove all non-public-domain\ncode:\n\n> ~~~\nrm -rf configure autosetup autoconf\n~~~\n\nIf you unpack this source repository and then run the command above, what\nis left will be 100% public domain.\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 10.232421875,
          "content": "#!/usr/bin/make\n# ^^^^ help out editors which guess this file's type.\n#\n# Makefile for SQLITE\n#\n# This makefile is intended to be configured automatically using the\n# configure script.\n#\n# The docs for many of its variables are in the primary static\n# makefile, main.mk (which this one includes at runtime).\n#\nall:\n########################################################################\n#\n# Known TODOs/FIXMEs/TOIMPROVEs for the autosetup port, in no\n# particular order...\n#\n# - TEA pieces.\n#\n# - Replace the autotools-specific distribution deliverable(s).\n#\n# - Confirm whether cross-compilation works and patch it\n# appropriately.\n#\n# Maintenance reminders:\n#\n# - This makefile should remain as POSIX-make-compatible as possible:\n#   https://pubs.opengroup.org/onlinepubs/9799919799/utilities/make.html\n#\n# - The naming convention of some vars, using periods instead of\n#   underscores, though unconventional, was selected for a couple of\n#   reasons: 1) Personal taste (for which there is no accounting).  2)\n#   It is thought to help defend against inadvertent injection of\n#   those vars via environment variables (because X.Y is not a legal\n#   environment variable name).  \"Feature or bug?\" is debatable and\n#   this naming convention may be reverted if it causes any grief.\n#\n\n#\n# The top-most directory of the source tree.  This is the directory\n# that contains this \"Makefile.in\" and the \"configure\" script.\n#\nTOP = @abs_top_srcdir@\n\n#\n# Autotools-conventional vars which are used by package installation\n# rules in main.mk. To get sane handling when a user overrides only\n# a subset of these, we perform some acrobatics with these vars\n# in the configure script: see [proj-remap-autoconf-dir-vars] for\n# full details.\n#\n# For completeness's sake, the aforementioned conventional vars which\n# are relevant to our installation rules are:\n#\n# datadir     = $(prefix)/share\n# mandir      = $(datadir)/man\n# includedir  = $(prefix)/include\n# exec_prefix = $(prefix)\n# bindir      = $(exec_prefix)/bin\n# libdir      = $(exec_prefix)/lib\n#\n# Our builds do not require any of their relatives:\n#\n# sbindir        = $(exec_prefix)/sbin\n# sysconfdir     = /etc\n# sharedstatedir = $(prefix)/com\n# localstatedir  = /var\n# runstatedir    = /run\n# infodir        = $(datadir)/info\n# libexecdir     = $(exec_prefix)/libexec\n#\nprefix      = @prefix@\ndatadir     = @datadir@\nmandir      = @mandir@\nincludedir  = @includedir@\nexec_prefix = @exec_prefix@\nbindir      = @bindir@\nlibdir      = @libdir@\n\nINSTALL = @BIN_INSTALL@\nAR = @AR@\nAR.flags = cr # TODO? Add a configure test to determine this?\nCC = @CC@\nB.cc = @CC_FOR_BUILD@ @BUILD_CFLAGS@\nT.cc = $(CC)\n#\n# $(CFLAGS) is problematic because it is frequently overridden when\n# invoking make, which loses things like -fPIC. So... we avoid using\n# it directly and instead add a level of indirection.  We combine\n# $(CFLAGS) and $(CPPFLAGS) here because that's the way the legacy\n# build did it and many builds rely on that. See main.mk for more\n# details.\n#\n# Historical note: the pre-3.48 build only honored CPPFLAGS at\n# configure-time, and expanded them into the generated Makefile. There\n# are, in that build, no uses of CPPFLAGS in the configure-expanded\n# Makefile. Ergo: if a client configures with CPPFLAGS=... and then\n# explicitly passes CFLAGS=... to make, the CPPFLAGS will be\n# lost. That behavior is retained in 3.48+.\n#\nCFLAGS = @CFLAGS@ @CPPFLAGS@\n#\n# $(LDFLAGS.configure) represents any LDFLAGS=... the client passes to\n# configure. See main.mk.\n#\nLDFLAGS.configure = @LDFLAGS@\n\n#\n# CFLAGS.core is documented in main.mk.\n#\nCFLAGS.core = @SH_CFLAGS@\nLDFLAGS.shlib = @SH_LDFLAGS@\nLDFLAGS.zlib = @LDFLAGS_ZLIB@\nLDFLAGS.math = @LDFLAGS_MATH@\nLDFLAGS.rpath = @LDFLAGS_RPATH@\nLDFLAGS.pthread = @LDFLAGS_PTHREAD@\nLDFLAGS.dlopen = @LDFLAGS_DLOPEN@\nLDFLAGS.readline = @LDFLAGS_READLINE@\nCFLAGS.readline = @CFLAGS_READLINE@\nLDFLAGS.icu = @LDFLAGS_ICU@\nCFLAGS.icu = @CFLAGS_ICU@\nLDFLAGS.libsqlite3.soname = @LDFLAGS_LIBSQLITE3_SONAME@\n# soname: see https://sqlite.org/src/forumpost/5a3b44f510df8ded\nENABLE_SHARED = @ENABLE_SHARED@\nENABLE_STATIC = @ENABLE_STATIC@\nHAVE_WASI_SDK = @HAVE_WASI_SDK@\n\nT.cc.sqlite = $(T.cc) @TARGET_DEBUG@\n\n#\n# Define -D_HAVE_SQLITE_CONFIG_H so that the code knows it\n# can include the generated sqlite_cfg.h.\n#\n# main.mk will fill out T.cc.sqlite with additional flags common to\n# all builds.\n#\nT.cc.sqlite += -D_HAVE_SQLITE_CONFIG_H -DBUILD_sqlite\n\n#\n# $(JIMSH) and $(CFLAGS.jimsh) are documented in main.mk.  $(JIMSH)\n# must start with a path component so that it can be invoked as a\n# shell command.\n#\nCFLAGS.jimsh = @CFLAGS_JIMSH@\nJIMSH = ./jimsh$(TEXE)\n\n#\n# $(B.tclsh) is documented in main.mk.\n#\nB.tclsh = @BTCLSH@\n$(B.tclsh):\n\n#\n# $(OPT_FEATURE_FLAGS) is documented in main.mk.\n#\n# The appending of $(OPTIONS) to $(OPT_FEATURE_FLAGS) is historical\n# and somewhat confusing because there's another var, $(OPTS), which\n# has a similar (but not identical) role.\n#\nOPT_FEATURE_FLAGS = @OPT_FEATURE_FLAGS@ $(OPTIONS)\n\n#\n# Version (X.Y.Z) number for the SQLite being compiled.\n#\nPACKAGE_VERSION = @PACKAGE_VERSION@\n\n#\n# Filename extensions for binaries and libraries\n#\nB.exe = @BUILD_EXEEXT@\nT.exe = @TARGET_EXEEXT@\nB.dll = @BUILD_DLLEXT@\nT.dll = @TARGET_DLLEXT@\nB.lib = @BUILD_LIBEXT@\nT.lib = @TARGET_LIBEXT@\n\n#\n# $(HAVE_TCL) is 1 if the configure script was able to locate the\n# tclConfig.sh file, else it is 0.  When this variable is 1, the TCL\n# extension library (libtclsqlite3.so) and related testing apps are\n# built.\n#\nHAVE_TCL = @HAVE_TCL@\n\n#\n# $(TCLSH_CMD) is the command to use for tclsh - normally just\n# \"tclsh\", but we may know the specific version we want to use. This\n# must point to a canonical TCL interpreter, not JimTCL.\n#\nTCLSH_CMD = @TCLSH_CMD@\nTCL_CONFIG_SH = @TCL_CONFIG_SH@\n\n#\n# TCL config info from tclConfig.sh\n#\n# We have to inject this differently in main.mk to accommodate static\n# makefiles, so we don't currently bother to export it here. This\n# block is retained in case we decide that we do indeed need to export\n# it at configure-time instead of calculate it at make-time.\n#\n#TCL_INCLUDE_SPEC = @TCL_INCLUDE_SPEC@\n#TCL_LIB_SPEC = @TCL_LIB_SPEC@\n#TCL_STUB_LIB_SPEC = @TCL_STUB_LIB_SPEC@\n#TCL_EXEC_PREFIX = @TCL_EXEC_PREFIX@\n#TCL_VERSION = @TCL_VERSION@\n#\n# $(TCLLIBDIR) = where to install the tcl plugin. If this is empty, it\n# is calculated at make-time by the targets which need it but we\n# export it here so that it can be set at configure-time, so that\n# clients are not required to pass it at make-time, or may set it in\n# their environment to override it.\n#\nTCLLIBDIR = @TCLLIBDIR@\n\n#\n# Additional options when running tests using testrunner.tcl\n# This is usually either blank or --status.\n#\nTSTRNNR_OPTS = @TSTRNNR_OPTS@\n\n#\n# If gcov support was enabled by the configure script, add the appropriate\n# flags here.  It's not always as easy as just having the user add the right\n# CFLAGS / LDFLAGS, because libtool wants to use CFLAGS when linking, which\n# causes build errors with -fprofile-arcs -ftest-coverage with some GCCs.\n# Supposedly GCC does the right thing if you use --coverage, but in\n# practice it still fails.  See:\n#\n# http://www.mail-archive.com/debian-gcc@lists.debian.org/msg26197.html\n#\n# for more info.\n#\nCFLAGS.gcov1 = -DSQLITE_COVERAGE_TEST=1 -fprofile-arcs -ftest-coverage\nLDFLAGS.gcov1 = -lgcov\nUSE_GCOV = @USE_GCOV@\nT.compile.extras = $(CFLAGS.gcov$(USE_GCOV))\nT.link.extras = $(LDFLAGS.gcov$(USE_GCOV))\n\n#\n# Vars with the AS_ prefix are specifically related to AutoSetup.\n#\n# AS_AUTO_DEF is the main configure script.\n#\nAS_AUTO_DEF = $(TOP)/auto.def\n#\n# Shell commands to re-run $(TOP)/configure with the same args it was\n# invoked with to produce this makefile.\n#\nAS_AUTORECONFIG = @SQLITE_AUTORECONFIG@\n\nUSE_AMALGAMATION ?= @USE_AMALGAMATION@\nLINK_TOOLS_DYNAMICALLY ?= @LINK_TOOLS_DYNAMICALLY@\nAMALGAMATION_GEN_FLAGS ?= --linemacros=@AMALGAMATION_LINE_MACROS@\n\n#\n# CFLAGS for sqlite3$(T.exe)\n#\nSHELL_OPT ?= @OPT_SHELL@\n\nMakefile: $(TOP)/Makefile.in $(AS_AUTO_DEF)\n\t$(AS_AUTORECONFIG)\n\t@touch $@\n\nsqlite3.pc: $(TOP)/sqlite3.pc.in $(AS_AUTO_DEF)\n\t$(AS_AUTORECONFIG)\n\t@touch $@\ninstall: install-pc # defined in main.mk\n\nsqlite_cfg.h: $(AS_AUTO_DEF)\n\t$(AS_AUTORECONFIG)\n\t@touch $@\n\n#\n# Fiddle app\n#\n# EMCC_WRAPPER must refer to the genuine emcc binary, or a\n# call-compatible wrapper, e.g. $(TOP)/tool/emcc.sh. If it's empty,\n# build components requiring Emscripten will not build.\n#\n# Achtung: though _this_ makefile is POSIX-make compatible, the fiddle\n# build requires GNU make.\n#\nEMCC_WRAPPER = @EMCC_WRAPPER@\nfiddle: sqlite3.c shell.c\n\t@if [ x = \"x$(EMCC_WRAPPER)\" ]; then \\\n\t\techo \"Emscripten SDK not found by configure. Cannot build fiddle.\" 1&>2; \\\n\t\texit 1; \\\n\tfi\n\t$(MAKE) -C ext/wasm fiddle emcc_opt=-Os\n\n#\n# Spell-checking for source comments\n# The sources checked are either C sources or C source templates.\n# Their comments are extracted and processed through aspell using\n# a custom dictionary that contains scads of odd identifiers that\n# find their way into the comments.\n#\n# Currently, this target is setup to be \"made\" in-tree only.\n# The output is ephemeral. Redirect it to guide spelling fixups,\n# either to correct spelling or add words to tool/custom.txt.\n#\n./custom.rws: ./tool/custom.txt\n\t@echo 'Updating custom dictionary from tool/custom.txt'\n\taspell --lang=en create master ./custom.rws < ./tool/custom.txt\n# Note that jimsh does not work here:\n# https://github.com/msteveb/jimtcl/issues/319\nmisspell: ./custom.rws has_tclsh84\n\t$(TCLSH_CMD) ./tool/spellsift.tcl ./src/*.c ./src/*.h ./src/*.in\n\n#\n# clean/distclean are mostly defined in main.mk. In this makefile we\n# perform cleanup known to be relevant to (only) the autosetup-driven\n# build.\n#\n#clean-autosetup:\n#\t-if [ -f ext/wasm/GNUmakefile ]; then \\\n#\t\tgmake --no-print-directory --ignore-errors -C ext/wasm clean; \\\n#\tfi >/dev/null 2>&1; true\n#clean: clean-autosetup\n\ndistclean-autosetup:\tclean\n\trm -f sqlite_cfg.h config.log config.status config.defines.* Makefile sqlite3.pc\n\trm -f $(TOP)/tool/emcc.sh\n\trm -f libsqlite3*$(T.dll)\n\trm -f jimsh0*\n#\t-if [ -f ext/wasm/GNUmakefile ]; then \\\n#\t\tgmake --no-print-directory  --ignore-errors -C ext/wasm distclean; \\\n#\tfi >/dev/null 2>&1; true\ndistclean: distclean-autosetup\n\n#\n# tool/version-info: a utility for emitting sqlite3 version info\n# in various forms.\n#\nversion-info$(T.exe): $(TOP)/tool/version-info.c Makefile sqlite3.h\n\t$(T.link) $(ST_OPT) -o $@ $(TOP)/tool/version-info.c\n\ninclude $(TOP)/main.mk\n"
        },
        {
          "name": "Makefile.linux-generic",
          "type": "blob",
          "size": 1.96875,
          "content": "#!/usr/make\nall:\n#\n# Makefile for SQLITE\n#\n# This is a template makefile for SQLite.  Most people prefer to\n# use the autoconf generated \"configure\" script to generate the\n# makefile automatically.  But that does not work for everybody\n# and in every situation.  If you are having problems with the\n# \"configure\" script, you might want to try this makefile as an\n# alternative.  Create a copy of this file, edit the parameters\n# below and type \"make\".\n#\n# Maintenance note: because this is the template for Linux systems, it\n# is assumed that the platform has GNU make and this file takes\n# advantage of that.\n#\n####\n#\n# $(TOP) = The toplevel directory of the source tree.  This is the\n# directory that contains \"Makefile.in\" and \"auto.def\".\n#\nTOP ?= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))\n\n#\n# $(CFLAGS) will be used when compiling the library and most\n# utilities.  It must normally contain -fPIC on Linux systems,\n# but overriding CFLAGS is an easy way for users to inadvertently\n# remove -fPIC from their builds, so we generally expect to see\n# -fPIC in $(CFLAGS.core), which main.mk will integrate with\n# the CFLAGS where needed.\n#\nCFLAGS =\nCFLAGS.core = -fPIC\n\n#\n# $(SHELL_OPT) contains CFLAGS for building the sqlite3 CLI shell.\n# See main.mk for other potentially-relevant vars which may need\n# tweaking, like $(LDFLAGS_READLINE).\n#\nSHELL_OPT += -DHAVE_READLINE=1\nSHELL_OPT += -DSQLITE_HAVE_ZLIB=1\nLDFLAGS.readline = -lreadline # may need -lcurses etc, depending on the system\nCFLAGS.readline = # needs -I... if readline.h is in an unusual place.\nLDFLAGS.zlib = -lz\n\n#\n# Library's version number.\n#\nPACKAGE_VERSION ?= $(shell cat $(TOP)/VERSION 2>/dev/null)\n\n# sqlite_cfg.h is typically created by the configure script. It's\n# commonly not needed but main.mk does not know that so we have to\n# create a dummy if we don't already have one.\nsqlite_cfg.h:\n\ttouch $@\ndistclean-.:\n\trm -f sqlite_cfg.h\n\n#\n# With the above in place, we can now import the rules make use of\n# it...\n#\ninclude $(TOP)/main.mk\n"
        },
        {
          "name": "Makefile.msc",
          "type": "blob",
          "size": 86.8720703125,
          "content": "#\n# nmake Makefile for SQLite\n#\n###############################################################################\n############################## START OF OPTIONS ###############################\n###############################################################################\n\n# The toplevel directory of the source tree.  This is the directory\n# that contains this \"Makefile.msc\".\n#\nTOP = .\n\n# <<mark>>\n# Set this non-0 to create and use the SQLite amalgamation file.\n#\n!IFNDEF USE_AMALGAMATION\nUSE_AMALGAMATION = 1\n!ENDIF\n# <</mark>>\n\n# Optionally set EXTRA_SRC to a list of C files to append to\n# the generated sqlite3.c. Any sqlite3 extensions added this\n# way may require manual editing, as described in\n# https://sqlite.org/forum/forumpost/903f721f3e7c0d25\n#\n!IFNDEF EXTRA_SRC\nEXTRA_SRC =\n!ENDIF\n\n# Set this non-0 to enable full warnings (-W4, etc) when compiling.\n#\n!IFNDEF USE_FULLWARN\nUSE_FULLWARN = 1\n!ENDIF\n\n# Set this non-0 to enable treating warnings as errors (-WX, etc) when\n# compiling.\n#\n!IFNDEF USE_FATAL_WARN\nUSE_FATAL_WARN = 0\n!ENDIF\n\n# Set this non-0 to enable full runtime error checks (-RTC1, etc).  This\n# has no effect if (any) optimizations are enabled.\n#\n!IFNDEF USE_RUNTIME_CHECKS\nUSE_RUNTIME_CHECKS = 0\n!ENDIF\n\n# Set this non-0 to create a SQLite amalgamation file that excludes the\n# various built-in extensions.\n#\n!IFNDEF MINIMAL_AMALGAMATION\nMINIMAL_AMALGAMATION = 0\n!ENDIF\n\n# Set this non-0 to use \"stdcall\" calling convention for the core library\n# and shell executable.\n#\n!IFNDEF USE_STDCALL\nUSE_STDCALL = 0\n!ENDIF\n\n# Use the USE_SEH=0 option on the nmake command line to omit structured\n# exception handling (SEH) support.  SEH is on by default.\n#\n!IFNDEF USE_SEH\nUSE_SEH = 1\n!ENDIF\n\n# Use STATICALLY_LINK_TCL=1 to statically link against TCL\n#\n!IFNDEF STATICALLY_LINK_TCL\nSTATICALLY_LINK_TCL = 0\n!ELSEIF $(STATICALLY_LINK_TCL)!=0\nCCOPTS = $(CCOPTS) -DSTATIC_BUILD\n!ENDIF\n\n# Set this non-0 to have the shell executable link against the core dynamic\n# link library.\n#\n!IFNDEF DYNAMIC_SHELL\nDYNAMIC_SHELL = 0\n!ENDIF\n\n# Set this non-0 to enable extra code that attempts to detect misuse of the\n# SQLite API.\n#\n!IFNDEF API_ARMOR\nAPI_ARMOR = 0\n!ENDIF\n\n# If necessary, create a list of harmless compiler warnings to disable when\n# compiling the various tools.  For the SQLite source code itself, warnings,\n# if any, will be disabled from within it.\n#\n!IFNDEF NO_WARN\n!IF $(USE_FULLWARN)!=0\nNO_WARN = -wd4054 -wd4055 -wd4100 -wd4127 -wd4130 -wd4152 -wd4189 -wd4206\nNO_WARN = $(NO_WARN) -wd4210 -wd4232 -wd4244 -wd4305 -wd4306 -wd4702 -wd4706\n!ENDIF\n!ENDIF\n\n# Set this non-0 to use the library paths and other options necessary for\n# Windows Phone 8.1.\n#\n!IFNDEF USE_WP81_OPTS\nUSE_WP81_OPTS = 0\n!ENDIF\n\n# Set this non-0 to split the SQLite amalgamation file into chunks to\n# be used for debugging with Visual Studio.\n#\n!IFNDEF SPLIT_AMALGAMATION\nSPLIT_AMALGAMATION = 0\n!ENDIF\n\n# <<mark>>\n# Set this non-0 to have this makefile assume the Tcl shell executable\n# (tclsh*.exe) is available in the PATH.  By default, this is disabled\n# for compatibility with older build environments.  This setting only\n# applies if TCLSH_CMD is not set manually.\n#\n!IFNDEF USE_TCLSH_IN_PATH\nUSE_TCLSH_IN_PATH = 0\n!ENDIF\n\n# Set this non-0 to use zlib, possibly compiling it from source code.\n#\n!IFNDEF USE_ZLIB\nUSE_ZLIB = 0\n!ENDIF\n\n# Set this non-0 to build zlib from source code.  This is enabled by\n# default and in that case it will be assumed that the ZLIBDIR macro\n# points to the top-level source code directory for zlib.\n#\n!IFNDEF BUILD_ZLIB\nBUILD_ZLIB = 1\n!ENDIF\n\n# Set this non-0 to use the International Components for Unicode (ICU).\n#\n!IFNDEF USE_ICU\nUSE_ICU = 0\n!ENDIF\n# <</mark>>\n\n# Set this non-0 to dynamically link to the MSVC runtime library.\n#\n!IFNDEF USE_CRT_DLL\nUSE_CRT_DLL = 0\n!ENDIF\n\n# Set this non-0 to link to the RPCRT4 library.\n#\n!IFNDEF USE_RPCRT4_LIB\nUSE_RPCRT4_LIB = 0\n!ENDIF\n\n# Set this non-0 to generate assembly code listings for the source code\n# files.\n#\n!IFNDEF USE_LISTINGS\nUSE_LISTINGS = 0\n!ENDIF\n\n# Set this non-0 to attempt setting the native compiler automatically\n# for cross-compiling the command line tools needed during the compilation\n# process.\n#\n!IFNDEF XCOMPILE\nXCOMPILE = 0\n!ENDIF\n\n# Set this non-0 to use the native libraries paths for cross-compiling\n# the command line tools needed during the compilation process.\n#\n!IFNDEF USE_NATIVE_LIBPATHS\nUSE_NATIVE_LIBPATHS = 0\n!ENDIF\n\n# Set this 0 to skip the compiling and embedding of version resources.\n#\n!IFNDEF USE_RC\nUSE_RC = 1\n!ENDIF\n\n# Set this non-0 to compile binaries suitable for the WinRT environment.\n# This setting does not apply to any binaries that require Tcl to operate\n# properly (i.e. the text fixture, etc).\n#\n!IFNDEF FOR_WINRT\nFOR_WINRT = 0\n!ENDIF\n\n# Set this non-0 to compile binaries suitable for the UWP environment.\n# This setting does not apply to any binaries that require Tcl to operate\n# properly (i.e. the text fixture, etc).\n#\n!IFNDEF FOR_UWP\nFOR_UWP = 0\n!ENDIF\n\n# Set this non-0 to compile binaries suitable for the Windows 10 platform.\n#\n!IFNDEF FOR_WIN10\nFOR_WIN10 = 0\n!ENDIF\n\n# <<mark>>\n# Set this non-0 to skip attempting to look for and/or link with the Tcl\n# runtime library.\n#\n!IFNDEF NO_TCL\nNO_TCL = 0\n!ENDIF\n# <</mark>>\n\n# Set this to non-0 to create and use PDBs.\n#\n!IFNDEF SYMBOLS\nSYMBOLS = 1\n!ENDIF\n\n# Set this to non-0 to use the SQLite debugging heap subsystem.\n#\n!IFNDEF MEMDEBUG\nMEMDEBUG = 0\n!ENDIF\n\n# Set this to non-0 to use the Win32 native heap subsystem.\n#\n!IFNDEF WIN32HEAP\nWIN32HEAP = 0\n!ENDIF\n\n# Set this to non-0 to enable OSTRACE() macros, which can be useful when\n# debugging.\n#\n!IFNDEF OSTRACE\nOSTRACE = 0\n!ENDIF\n\n# enable address sanitizer using ASAN=1 on the command-line.\n#\n!IFNDEF ASAN\nASAN = 0\n!ENDIF\n\n# Set this to one of the following values to enable various debugging\n# features.  Each level includes the debugging options from the previous\n# levels.  Currently, the recognized values for DEBUG are:\n#\n# 0 == NDEBUG: Disables assert() and other runtime diagnostics.\n# 1 == SQLITE_ENABLE_API_ARMOR: extra attempts to detect misuse of the API.\n# 2 == Disables NDEBUG and all optimizations and then enables PDBs.\n# 3 == SQLITE_DEBUG: Enables various diagnostics messages and code.\n# 4 == SQLITE_WIN32_MALLOC_VALIDATE: Validate the Win32 native heap per call.\n# 5 == SQLITE_DEBUG_OS_TRACE: Enables output from the OSTRACE() macros.\n# 6 == SQLITE_ENABLE_IOTRACE: Enables output from the IOTRACE() macros.\n#\n!IFNDEF DEBUG\nDEBUG = 0\n!ENDIF\n\n# <<mark>>\n# By default, use --linemacros=1 argument to the mksqlite3c.tcl tool, which\n# is used to build the amalgamation. This can be turned off to ease debug\n# of the amalgamation away from the source tree.\n#\n!IFNDEF NO_LINEMACROS\nNO_LINEMACROS = 0\n!ENDIF\n# <</mark>>\n\n# Enable use of available compiler optimizations?  Normally, this should be\n# non-zero.  Setting this to zero, thus disabling all compiler optimizations,\n# can be useful for testing.\n#\n!IFNDEF OPTIMIZATIONS\nOPTIMIZATIONS = 2\n!ENDIF\n\n# Set this to non-0 to enable support for the session extension.\n#\n!IFNDEF SESSION\nSESSION = 0\n!ENDIF\n\n# Set this to non-0 to enable support for the rbu extension.\n#\n!IFNDEF RBU\nRBU = 0\n!ENDIF\n\n# Set the source code file to be used by executables and libraries when\n# they need the amalgamation.\n#\n!IFNDEF SQLITE3C\n!IF $(SPLIT_AMALGAMATION)!=0\nSQLITE3C = sqlite3-all.c\n!ELSE\nSQLITE3C = sqlite3.c\n!ENDIF\n!ENDIF\n\n# Set the include code file to be used by executables and libraries when\n# they need SQLite.\n#\n!IFNDEF SQLITE3H\nSQLITE3H = sqlite3.h\n!ENDIF\n\n# This is the name to use for the SQLite dynamic link library (DLL).\n#\n!IFNDEF SQLITE3DLL\n!IF $(FOR_WIN10)!=0\nSQLITE3DLL = winsqlite3.dll\n!ELSE\nSQLITE3DLL = sqlite3.dll\n!ENDIF\n!ENDIF\n\n# This is the name to use for the SQLite import library (LIB).\n#\n!IFNDEF SQLITE3LIB\n!IF $(FOR_WIN10)!=0\nSQLITE3LIB = winsqlite3.lib\n!ELSE\nSQLITE3LIB = sqlite3.lib\n!ENDIF\n!ENDIF\n\n# This is the name to use for the SQLite shell executable (EXE).\n#\n!IFNDEF SQLITE3EXE\n!IF $(FOR_WIN10)!=0\nSQLITE3EXE = winsqlite3shell.exe\n!ELSE\nSQLITE3EXE = sqlite3.exe\n!ENDIF\n!ENDIF\n\n# This is the argument used to set the program database (PDB) file for the\n# SQLite shell executable (EXE).\n#\n!IFNDEF SQLITE3EXEPDB\n!IF $(FOR_WIN10)!=0\nSQLITE3EXEPDB =\n!ELSE\nSQLITE3EXEPDB = /pdb:sqlite3sh.pdb\n!ENDIF\n!ENDIF\n\n# <<mark>>\n# These are the names of the customized Tcl header files used by various parts\n# of this makefile when the stdcall calling convention is in use.  It is not\n# used for any other purpose.\n#\n!IFNDEF SQLITETCLH\nSQLITETCLH = sqlite_tcl.h\n!ENDIF\n\n!IFNDEF SQLITETCLDECLSH\nSQLITETCLDECLSH = sqlite_tclDecls.h\n!ENDIF\n\n# This is the name to use for the dynamic link library (DLL) containing the\n# Tcl bindings for SQLite.\n#\n!IFNDEF SQLITE3TCLDLL\nSQLITE3TCLDLL = tclsqlite3.dll\n!ENDIF\n\n# These are the additional targets that the targets that integrate with the\n# Tcl library should depend on when compiling, etc.\n#\n!IFNDEF SQLITE_TCL_DEP\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\nSQLITE_TCL_DEP = $(SQLITETCLDECLSH) $(SQLITETCLH)\n!ELSE\nSQLITE_TCL_DEP =\n!ENDIF\n!ENDIF\n# <</mark>>\n\n# These are the \"standard\" SQLite compilation options used when compiling for\n# the Windows platform.\n#\n!IFNDEF OPT_FEATURE_FLAGS\nOPT_FEATURE_FLAGS = $(OPT_XTRA)\n!IF $(MINIMAL_AMALGAMATION)==0\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_FTS3=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_FTS5=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_RTREE=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_GEOPOLY=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_STMTVTAB=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DBPAGE_VTAB=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DBSTAT_VTAB=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_BYTECODE_VTAB=1\n!ENDIF\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_COLUMN_METADATA=1\n!ENDIF\n\n# Additional feature-options above and beyond what are normally used can be\n# be added using OPTIONS=.... on the command-line.  These values are\n# appended to the OPT_FEATURE_FLAGS variable.\n#\n!IFDEF OPTIONS\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) $(OPTIONS)\n!ENDIF\n\n# Should the session extension be enabled?  If so, add compilation options\n# to enable it.\n#\n!IF $(SESSION)!=0\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_SESSION=1\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_PREUPDATE_HOOK=1\n!ENDIF\n\n# Always enable math functions on Windows\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_MATH_FUNCTIONS\n\n# Should the rbu extension be enabled?  If so, add compilation options\n# to enable it.\n#\n!IF $(RBU)!=0\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_RBU=1\n!ENDIF\n\n# Should structured exception handling (SEH) be enabled for WAL mode in\n# the core library?  It is on by default.  Only omit it if the\n# USE_SEH=0 option is provided on the nmake command-line.\n#\n!IF $(USE_SEH)==0\nOPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_OMIT_SEH=1\n!ENDIF\n\n# These are the \"extended\" SQLite compilation options used when compiling for\n# the Windows 10 platform.\n#\n!IFNDEF EXT_FEATURE_FLAGS\n!IF $(FOR_WIN10)!=0\nEXT_FEATURE_FLAGS = $(EXT_FEATURE_FLAGS) -DSQLITE_ENABLE_FTS4=1\nEXT_FEATURE_FLAGS = $(EXT_FEATURE_FLAGS) -DSQLITE_SYSTEM_MALLOC=1\nEXT_FEATURE_FLAGS = $(EXT_FEATURE_FLAGS) -DSQLITE_OMIT_LOCALTIME=1\n!ELSE\nEXT_FEATURE_FLAGS =\n!ENDIF\n!ENDIF\n\n###############################################################################\n############################### END OF OPTIONS ################################\n###############################################################################\n\n# When compiling for the Windows 10 platform, the PLATFORM macro must be set\n# to an appropriate value (e.g. x86, x64, arm, arm64, etc).\n#\n!IF $(FOR_WIN10)!=0\n!IFNDEF PLATFORM\n!ERROR Using the FOR_WIN10 option requires a value for PLATFORM.\n!ENDIF\n!ENDIF\n\n# This assumes that MSVC is always installed in 32-bit Program Files directory\n# and sets the variable for use in locating other 32-bit installs accordingly.\n#\nPROGRAMFILES_X86 = $(VCINSTALLDIR)\\..\\..\nPROGRAMFILES_X86 = $(PROGRAMFILES_X86:\\\\=\\)\n\n# Check for the predefined command macro CC.  This should point to the compiler\n# binary for the target platform.  If it is not defined, simply define it to\n# the legacy default value 'cl.exe'.\n#\n!IFNDEF CC\nCC = cl.exe\n!ENDIF\n\n# Check for the predefined command macro CSC.  This should point to a working\n# C Sharp compiler binary.  If it is not defined, simply define it to the\n# legacy default value 'csc.exe'.\n#\n!IFNDEF CSC\nCSC = csc.exe\n!ENDIF\n\n# Check for the command macro LD.  This should point to the linker binary for\n# the target platform.  If it is not defined, simply define it to the legacy\n# default value 'link.exe'.\n#\n!IFNDEF LD\nLD = link.exe\n!ENDIF\n\n# Check for the predefined command macro RC.  This should point to the resource\n# compiler binary for the target platform.  If it is not defined, simply define\n# it to the legacy default value 'rc.exe'.\n#\n!IFNDEF RC\nRC = rc.exe\n!ENDIF\n\n# Check for the MSVC runtime library path macro.  Otherwise, this value will\n# default to the 'lib' directory underneath the MSVC installation directory.\n#\n!IFNDEF CRTLIBPATH\nCRTLIBPATH = $(VCINSTALLDIR)\\lib\n!ENDIF\n\nCRTLIBPATH = $(CRTLIBPATH:\\\\=\\)\n\n# Check for the command macro NCC.  This should point to the compiler binary\n# for the platform the compilation process is taking place on.  If it is not\n# defined, simply define it to have the same value as the CC macro.  When\n# cross-compiling, it is suggested that this macro be modified via the command\n# line (since nmake itself does not provide a built-in method to guess it).\n# For example, to use the x86 compiler when cross-compiling for x64, a command\n# line similar to the following could be used (all on one line):\n#\n#     nmake /f Makefile.msc sqlite3.dll\n#           XCOMPILE=1 USE_NATIVE_LIBPATHS=1\n#\n# Alternatively, the full path and file name to the compiler binary for the\n# platform the compilation process is taking place may be specified (all on\n# one line):\n#\n#     nmake /f Makefile.msc sqlite3.dll\n#           \"NCC=\"\"%VCINSTALLDIR%\\bin\\cl.exe\"\"\"\n#           USE_NATIVE_LIBPATHS=1\n#\n!IFDEF NCC\nNCC = $(NCC:\\\\=\\)\n!ELSEIF $(XCOMPILE)!=0\nNCC = \"$(VCINSTALLDIR)\\bin\\$(CC)\"\nNCC = $(NCC:\\\\=\\)\n!ELSE\nNCC = $(CC)\n!ENDIF\n\n# Check for the MSVC native runtime library path macro.  Otherwise,\n# this value will default to the 'lib' directory underneath the MSVC\n# installation directory.\n#\n!IFNDEF NCRTLIBPATH\nNCRTLIBPATH = $(VCINSTALLDIR)\\lib\n!ENDIF\n\nNCRTLIBPATH = $(NCRTLIBPATH:\\\\=\\)\n\n# Check for the Platform SDK library path macro.  Otherwise, this\n# value will default to the 'lib' directory underneath the Windows\n# SDK installation directory (the environment variable used appears\n# to be available when using Visual C++ 2008 or later via the\n# command line).\n#\n!IFNDEF NSDKLIBPATH\nNSDKLIBPATH = $(WINDOWSSDKDIR)\\lib\n!ENDIF\n\nNSDKLIBPATH = $(NSDKLIBPATH:\\\\=\\)\n\n# Check for the UCRT library path macro.  Otherwise, this value will\n# default to the version-specific, platform-specific 'lib' directory\n# underneath the Windows SDK installation directory.\n#\n!IFNDEF UCRTLIBPATH\nUCRTLIBPATH = $(WINDOWSSDKDIR)\\lib\\$(WINDOWSSDKLIBVERSION)\\ucrt\\$(PLATFORM)\n!ENDIF\n\nUCRTLIBPATH = $(UCRTLIBPATH:\\\\=\\)\n\n# C compiler and options for use in building executables that\n# will run on the platform that is doing the build.\n#\n!IF $(USE_FULLWARN)!=0\nBCC = $(NCC) -nologo -W4 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)\n!ELSE\nBCC = $(NCC) -nologo -W3 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)\n!ENDIF\n\n# Check if assembly code listings should be generated for the source\n# code files to be compiled.\n#\n!IF $(USE_LISTINGS)!=0\nBCC = $(BCC) -FAcs\n!ENDIF\n\n# Check if the native library paths should be used when compiling\n# the command line tools used during the compilation process.  If\n# so, set the necessary macro now.\n#\n!IF $(USE_NATIVE_LIBPATHS)!=0\nNLTLIBPATHS = \"/LIBPATH:$(NCRTLIBPATH)\" \"/LIBPATH:$(NSDKLIBPATH)\"\n\n!IFDEF NUCRTLIBPATH\nNUCRTLIBPATH = $(NUCRTLIBPATH:\\\\=\\)\nNLTLIBPATHS = $(NLTLIBPATHS) \"/LIBPATH:$(NUCRTLIBPATH)\"\n!ENDIF\n!ENDIF\n\n# C compiler and options for use in building executables that\n# will run on the target platform.  (BCC and TCC are usually the\n# same unless your are cross-compiling.)\n#\n!IF $(USE_FULLWARN)!=0\nTCC = $(CC) -nologo -W4 -DINCLUDE_MSVC_H=1 $(CCOPTS) $(TCCOPTS)\n!ELSE\nTCC = $(CC) -nologo -W3 $(CCOPTS) $(TCCOPTS)\n!ENDIF\n\n# Check if warnings should be treated as errors when compiling.\n#\n!IF $(USE_FATAL_WARN)!=0\nTCC = $(TCC) -WX\n!ENDIF\n\nTCC = $(TCC) -DSQLITE_OS_WIN=1 -I. -I$(TOP) -I$(TOP)\\src -fp:precise\nRCC = $(RC) -DSQLITE_OS_WIN=1 -I. -I$(TOP) -I$(TOP)\\src $(RCOPTS) $(RCCOPTS)\n\n# Check if we want to use the \"stdcall\" calling convention when compiling.\n# This is not supported by the compilers for non-x86 platforms.  It should\n# also be noted here that building any target with these \"stdcall\" options\n# will most likely fail if the Tcl library is also required.  This is due\n# to how the Tcl library functions are declared and exported (i.e. without\n# an explicit calling convention, which results in \"cdecl\").\n#\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\n!IF \"$(PLATFORM)\"==\"x86\"\nCORE_CCONV_OPTS = -Gz -guard:cf -DSQLITE_CDECL=__cdecl -DSQLITE_APICALL=__stdcall -DSQLITE_CALLBACK=__stdcall -DSQLITE_SYSAPI=__stdcall\nSHELL_CCONV_OPTS = -Gz -guard:cf -DSQLITE_CDECL=__cdecl -DSQLITE_APICALL=__stdcall -DSQLITE_CALLBACK=__stdcall -DSQLITE_SYSAPI=__stdcall\n# <<mark>>\nTEST_CCONV_OPTS = -Gz -guard:cf -DSQLITE_CDECL=__cdecl -DSQLITE_APICALL=__stdcall -DSQLITE_CALLBACK=__stdcall -DSQLITE_SYSAPI=__stdcall -DINCLUDE_SQLITE_TCL_H=1 -DSQLITE_TCLAPI=__cdecl\n# <</mark>>\n!ELSE\n!IFNDEF PLATFORM\nCORE_CCONV_OPTS = -Gz -guard:cf -DSQLITE_CDECL=__cdecl -DSQLITE_APICALL=__stdcall -DSQLITE_CALLBACK=__stdcall -DSQLITE_SYSAPI=__stdcall\nSHELL_CCONV_OPTS = -Gz -guard:cf -DSQLITE_CDECL=__cdecl -DSQLITE_APICALL=__stdcall -DSQLITE_CALLBACK=__stdcall -DSQLITE_SYSAPI=__stdcall\n# <<mark>>\nTEST_CCONV_OPTS = -Gz -guard:cf -DSQLITE_CDECL=__cdecl -DSQLITE_APICALL=__stdcall -DSQLITE_CALLBACK=__stdcall -DSQLITE_SYSAPI=__stdcall -DINCLUDE_SQLITE_TCL_H=1 -DSQLITE_TCLAPI=__cdecl\n# <</mark>>\n!ELSE\nCORE_CCONV_OPTS =\nSHELL_CCONV_OPTS =\n# <<mark>>\nTEST_CCONV_OPTS =\n# <</mark>>\n!ENDIF\n!ENDIF\n!ELSE\nCORE_CCONV_OPTS =\nSHELL_CCONV_OPTS =\n# <<mark>>\nTEST_CCONV_OPTS =\n# <</mark>>\n!ENDIF\n\n# These are additional compiler options used for the core library.\n#\n!IFNDEF CORE_COMPILE_OPTS\n!IF $(DYNAMIC_SHELL)!=0 || $(FOR_WIN10)!=0\nCORE_COMPILE_OPTS = $(CORE_CCONV_OPTS) -DSQLITE_API=__declspec(dllexport)\n!ELSE\nCORE_COMPILE_OPTS = $(CORE_CCONV_OPTS)\n!ENDIF\n!ENDIF\n\n# These are the additional targets that the core library should depend on\n# when linking.\n#\n!IFNDEF CORE_LINK_DEP\n!IF $(DYNAMIC_SHELL)!=0\nCORE_LINK_DEP =\n!ELSEIF $(FOR_WIN10)==0 || \"$(PLATFORM)\"==\"x86\"\nCORE_LINK_DEP = sqlite3.def\n!ELSE\nCORE_LINK_DEP =\n!ENDIF\n!ENDIF\n\n# These are additional linker options used for the core library.\n#\n!IFNDEF CORE_LINK_OPTS\n!IF $(DYNAMIC_SHELL)!=0\nCORE_LINK_OPTS =\n!ELSEIF $(FOR_WIN10)==0 || \"$(PLATFORM)\"==\"x86\"\nCORE_LINK_OPTS = /DEF:sqlite3.def\n!ELSE\nCORE_LINK_OPTS =\n!ENDIF\n!ENDIF\n\n# These are additional compiler options used for the shell executable.\n#\n!IFNDEF SHELL_COMPILE_OPTS\n!IF $(DYNAMIC_SHELL)!=0 || $(FOR_WIN10)!=0\nSHELL_COMPILE_OPTS = $(SHELL_CCONV_OPTS) -DSQLITE_API=__declspec(dllimport)\n!ELSE\nSHELL_COMPILE_OPTS = $(SHELL_CCONV_OPTS)\n!ENDIF\n!ENDIF\n\n# This is the source code that the shell executable should be compiled\n# with.\n#\n!IFNDEF SHELL_CORE_SRC\n!IF $(DYNAMIC_SHELL)!=0 || $(FOR_WIN10)!=0\nSHELL_CORE_SRC =\n# <<mark>>\n!ELSEIF $(USE_AMALGAMATION)==0\nSHELL_CORE_SRC =\n# <</mark>>\n!ELSE\nSHELL_CORE_SRC = $(SQLITE3C)\n!ENDIF\n!ENDIF\n\n# This is the core library that the shell executable should depend on.\n#\n!IFNDEF SHELL_CORE_DEP\n!IF $(DYNAMIC_SHELL)!=0 || $(FOR_WIN10)!=0\nSHELL_CORE_DEP = $(SQLITE3DLL)\n# <<mark>>\n!ELSEIF $(USE_AMALGAMATION)==0\nSHELL_CORE_DEP = libsqlite3.lib\n# <</mark>>\n!ELSE\nSHELL_CORE_DEP =\n!ENDIF\n!ENDIF\n\n# <<mark>>\n# If zlib support is enabled, add the dependencies for it.\n#\n!IF $(USE_ZLIB)!=0 && $(BUILD_ZLIB)!=0\nSHELL_CORE_DEP = zlib $(SHELL_CORE_DEP)\nTESTFIXTURE_DEP = zlib $(TESTFIXTURE_DEP)\n!ENDIF\n# <</mark>>\n\n# This is the core library that the shell executable should link with.\n#\n!IFNDEF SHELL_CORE_LIB\n!IF $(DYNAMIC_SHELL)!=0 || $(FOR_WIN10)!=0\nSHELL_CORE_LIB = $(SQLITE3LIB)\n# <<mark>>\n!ELSEIF $(USE_AMALGAMATION)==0\nSHELL_CORE_LIB = libsqlite3.lib\n# <</mark>>\n!ELSE\nSHELL_CORE_LIB =\n!ENDIF\n!ENDIF\n\n# These are additional linker options used for the shell executable.\n#\n!IFNDEF SHELL_LINK_OPTS\nSHELL_LINK_OPTS = $(SHELL_CORE_LIB)\n!ENDIF\n\n# Check if assembly code listings should be generated for the source\n# code files to be compiled.\n#\n!IF $(USE_LISTINGS)!=0\nTCC = $(TCC) -FAcs\n!ENDIF\n\n# When compiling the library for use in the WinRT environment,\n# the following compile-time options must be used as well to\n# disable use of Win32 APIs that are not available and to enable\n# use of Win32 APIs that are specific to Windows 8 and/or WinRT.\n#\n!IF $(FOR_WINRT)!=0\nTCC = $(TCC) -DSQLITE_OS_WINRT=1\nRCC = $(RCC) -DSQLITE_OS_WINRT=1\nTCC = $(TCC) -DWINAPI_FAMILY=WINAPI_FAMILY_APP\nRCC = $(RCC) -DWINAPI_FAMILY=WINAPI_FAMILY_APP\n!ENDIF\n\n# C compiler options for the Windows 10 platform (needs MSVC 2015).\n#\n!IF $(FOR_WIN10)!=0\nTCC = $(TCC) /d2guard4 -D_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE\nBCC = $(BCC) /d2guard4 -D_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE\n!ENDIF\n\n# Also, we need to dynamically link to the correct MSVC runtime\n# when compiling for WinRT (e.g. debug or release) OR if the\n# USE_CRT_DLL option is set to force dynamically linking to the\n# MSVC runtime library.\n#\n!IF $(FOR_WINRT)!=0 || $(USE_CRT_DLL)!=0\n!IF $(DEBUG)>1\nTCC = $(TCC) -MDd\nBCC = $(BCC) -MDd\n!ELSE\nTCC = $(TCC) -MD\nBCC = $(BCC) -MD\n!ENDIF\n!ELSE\n!IF $(DEBUG)>1\nTCC = $(TCC) -MTd\nBCC = $(BCC) -MTd\n!ELSE\nTCC = $(TCC) -MT\nBCC = $(BCC) -MT\n!ENDIF\n!ENDIF\n\n# <<mark>>\n# The mksqlite3c.tcl and mksqlite3h.tcl scripts will pull in\n# any extension header files by default.  For non-amalgamation\n# builds, we need to make sure the compiler can find these.\n#\n!IF $(USE_AMALGAMATION)==0\nTCC = $(TCC) -I$(TOP)\\ext\\fts3\nRCC = $(RCC) -I$(TOP)\\ext\\fts3\nTCC = $(TCC) -I$(TOP)\\ext\\rtree\nRCC = $(RCC) -I$(TOP)\\ext\\rtree\nTCC = $(TCC) -I$(TOP)\\ext\\session\nRCC = $(RCC) -I$(TOP)\\ext\\session\n!ENDIF\n\n# The mksqlite3c.tcl script accepts some options on the command\n# line.  When compiling with debugging enabled, some of these\n# options are necessary in order to allow debugging symbols to\n# work correctly with Visual Studio when using the amalgamation.\n#\n!IFNDEF MKSQLITE3C_TOOL\n!IF $(MINIMAL_AMALGAMATION)!=0\nMKSQLITE3C_TOOL = $(TOP)\\tool\\mksqlite3c-noext.tcl\n!ELSE\nMKSQLITE3C_TOOL = $(TOP)\\tool\\mksqlite3c.tcl\n!ENDIF\n!ENDIF\n\n!IFNDEF MKSQLITE3C_ARGS\n!IF $(DEBUG)>1 && $(NO_LINEMACROS)==0\nMKSQLITE3C_ARGS = --linemacros=1\n!ELSE\nMKSQLITE3C_ARGS = --linemacros=0\n!ENDIF\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\nMKSQLITE3C_ARGS = $(MKSQLITE3C_ARGS) --useapicall\n!ENDIF\n!ENDIF\n\n# The mksqlite3h.tcl script accepts some options on the command line.\n# When compiling with stdcall support, some of these options are\n# necessary.\n#\n!IFNDEF MKSQLITE3H_ARGS\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\nMKSQLITE3H_ARGS = --useapicall\n!ELSE\nMKSQLITE3H_ARGS =\n!ENDIF\n!ENDIF\n# <</mark>>\n\n# Define -DNDEBUG to compile without debugging (i.e., for production usage)\n# Omitting the define will cause extra debugging code to be inserted and\n# includes extra comments when \"EXPLAIN stmt\" is used.\n#\n!IF $(DEBUG)==0\nTCC = $(TCC) -DNDEBUG\nBCC = $(BCC) -DNDEBUG\nRCC = $(RCC) -DNDEBUG\n!ENDIF\n\n!IF $(DEBUG)>0 || $(API_ARMOR)!=0 || $(FOR_WIN10)!=0\nTCC = $(TCC) -DSQLITE_ENABLE_API_ARMOR=1\nRCC = $(RCC) -DSQLITE_ENABLE_API_ARMOR=1\n!ENDIF\n\n!IF $(DEBUG)>2\nTCC = $(TCC) -DSQLITE_DEBUG=1\nRCC = $(RCC) -DSQLITE_DEBUG=1\n!IF $(DYNAMIC_SHELL)==0\nTCC = $(TCC) -DSQLITE_ENABLE_WHERETRACE -DSQLITE_ENABLE_SELECTTRACE\nRCC = $(RCC) -DSQLITE_ENABLE_WHERETRACE -DSQLITE_ENABLE_SELECTTRACE\n!ENDIF\n!ENDIF\n\n!IF $(DEBUG)>4 || $(OSTRACE)!=0\nTCC = $(TCC) -DSQLITE_FORCE_OS_TRACE=1 -DSQLITE_DEBUG_OS_TRACE=1\nRCC = $(RCC) -DSQLITE_FORCE_OS_TRACE=1 -DSQLITE_DEBUG_OS_TRACE=1\n!ENDIF\n\n!IF $(DEBUG)>5\nTCC = $(TCC) -DSQLITE_ENABLE_IOTRACE=1\nRCC = $(RCC) -DSQLITE_ENABLE_IOTRACE=1\n!ENDIF\n\n# Prevent warnings about \"insecure\" MSVC runtime library functions\n# being used.\n#\nTCC = $(TCC) -D_CRT_SECURE_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS\nBCC = $(BCC) -D_CRT_SECURE_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS\nRCC = $(RCC) -D_CRT_SECURE_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS\n\n# Prevent warnings about \"deprecated\" POSIX functions being used.\n#\nTCC = $(TCC) -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS\nBCC = $(BCC) -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS\nRCC = $(RCC) -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS\n\n# Use the SQLite debugging heap subsystem?\n#\n!IF $(MEMDEBUG)!=0\nTCC = $(TCC) -DSQLITE_MEMDEBUG=1\nRCC = $(RCC) -DSQLITE_MEMDEBUG=1\n\n# Use native Win32 heap subsystem instead of malloc/free?\n#\n!ELSEIF $(WIN32HEAP)!=0\nTCC = $(TCC) -DSQLITE_WIN32_MALLOC=1\nRCC = $(RCC) -DSQLITE_WIN32_MALLOC=1\n\n# Validate the heap on every call into the native Win32 heap subsystem?\n#\n!IF $(DEBUG)>3\nTCC = $(TCC) -DSQLITE_WIN32_MALLOC_VALIDATE=1\nRCC = $(RCC) -DSQLITE_WIN32_MALLOC_VALIDATE=1\n!ENDIF\n!ENDIF\n\n\n# Address sanitizer if ASAN=1\n#\n!IF $(ASAN)>0\nTCC = $(TCC) /fsanitize=address\n!ENDIF\n\n# <<mark>>\n# The locations of the Tcl header and library files.  Also, the library that\n# non-stubs enabled programs using Tcl must link against.  These variables\n# (TCLINCDIR, TCLLIBDIR, and LIBTCL) may be overridden via the environment\n# prior to running nmake in order to match the actual installed location and\n# version on this machine.\n#\n!IF $(STATICALLY_LINK_TCL)!=0\nTCLSUFFIX = s\n!ENDIF\n!IFNDEF TCLSUFFIX\nTCLSUFFIX =\n!ENDIF\n\n!IFNDEF TCLDIR\nTCLDIR = C:\\Tcl\n!ENDIF\n\n!IFNDEF TCLVERSION\n!IF EXISTS(\"$(TCLDIR)\\lib\\tcl90$(TCLSUFFIX).lib\")\nTCLVERSION = 90\n!ELSEIF EXISTS(\"$(TCLDIR)\\lib\\tcl86$(TCLSUFFIX).lib\")\nTCLVERSION = 86\n!ELSEIF EXISTS(\"$(TCLDIR)\\lib\\tcl86t.lib\")\nTCLSUFFIX = t\nTCLVERSION = 86\n!ELSE\nTCLVERSION = 90\n!ENDIF\n!ENDIF\n\n!IFNDEF TCLINCDIR\nTCLINCDIR = $(TCLDIR)\\include\n!ENDIF\n\n!IFNDEF TCLLIBDIR\nTCLLIBDIR = $(TCLDIR)\\lib\n!ENDIF\n\n!IFNDEF LIBTCL\nLIBTCL = tcl$(TCLVERSION)$(TCLSUFFIX).lib\n!ENDIF\n\n!IFNDEF TCLLIBS\n!IF $(STATICALLY_LINK_TCL)!=0\nTCLLIBS = /NODEFAULTLIB:libucrt.lib netapi32.lib user32.lib ucrt.lib\n!ELSE\nTCLLIBS =\n!ENDIF\n!ENDIF\n\n!IFNDEF LIBTCLSTUB\n!IF EXISTS(\"$(TCLLIBDIR)\\tclstub$(TCLVERSION)$(TCLSUFFIX).lib\")\nLIBTCLSTUB = tclstub$(TCLVERSION)$(TCLSUFFIX).lib\n!ELSEIF EXISTS(\"$(TCLLIBDIR)\\tclstub$(TCLSUFFIX).lib\")\nLIBTCLSTUB = tclstub$(TCLSUFFIX).lib\n!ELSEIF EXISTS(\"$(TCLLIBDIR)\\tclstub$(TCLVERSION).lib\")\nLIBTCLSTUB = tclstub$(TCLVERSION).lib\n!ELSE\nLIBTCLSTUB = tclstub.lib\n!ENDIF\n!ENDIF\n\n!IFNDEF LIBTCLPATH\nLIBTCLPATH = $(TCLDIR)\\bin\n!ENDIF\n\n# The locations of the zlib header and library files.  These variables\n# (ZLIBINCDIR, ZLIBLIBDIR, and ZLIBLIB) may be overridden via the environment\n# prior to running nmake in order to match the actual installed (or source\n# code) location on this machine.\n#\n!IFNDEF ZLIBDIR\nZLIBDIR = $(TOP)\\compat\\zlib\n!ENDIF\n\n!IFNDEF ZLIBINCDIR\nZLIBINCDIR = $(ZLIBDIR)\n!ENDIF\n\n!IFNDEF ZLIBLIBDIR\nZLIBLIBDIR = $(ZLIBDIR)\n!ENDIF\n\n!IFNDEF ZLIBLIB\n!IF $(DYNAMIC_SHELL)!=0\nZLIBLIB = zdll.lib\n!ELSE\nZLIBLIB = zlib.lib\n!ENDIF\n!ENDIF\n\n# The locations of the ICU header and library files.  These variables\n# (ICUINCDIR, ICULIBDIR, and LIBICU) may be overridden via the environment\n# prior to running nmake in order to match the actual installed location on\n# this machine.\n#\n!IFNDEF ICUDIR\nICUDIR = $(TOP)\\compat\\icu\n!ENDIF\n\n!IFNDEF ICUINCDIR\nICUINCDIR = $(ICUDIR)\\include\n!ENDIF\n\n!IFNDEF ICULIBDIR\nICULIBDIR = $(ICUDIR)\\lib\n!ENDIF\n\n!IFNDEF LIBICU\nLIBICU = icuuc.lib icuin.lib\n!ENDIF\n\n# This is the command to use for tclsh - normally just \"tclsh\", but we may\n# know the specific version we want to use.  This variable (TCLSH_CMD) may be\n# overridden via the environment prior to running nmake in order to select a\n# specific Tcl shell to use.\n#\n!IFNDEF TCLSH_CMD\n!IF EXISTS(\"$(TCLDIR)\\bin\\tclsh$(TCLVERSION).exe\")\nTCLSH_CMD = $(TCLDIR)\\bin\\tclsh$(TCLVERSION).exe\n!ELSEIF EXISTS(\"$(TCLDIR)\\bin\\tclsh90.exe\")\nTCLSH_CMD = $(TCLDIR)\\bin\\tclsh90.exe\n!ELSEIF EXISTS(\"$(TCLDIR)\\bin\\tclsh86.exe\")\nTCLSH_CMD = $(TCLDIR)\\bin\\tclsh86.exe\n!ELSEIF EXISTS(\"$(TCLDIR)\\bin\\tclsh86t.exe\")\nTCLSH_CMD = $(TCLDIR)\\bin\\tclsh86t.exe\n!ELSEIF EXISTS(\"$(TCLDIR)\\bin\\tclsh.exe\")\nTCLSH_CMD = $(TCLDIR)\\bin\\tclsh.exe\n!ELSE\nTCLSH_CMD = tclsh\n!ENDIF\n!ENDIF\n\n# A light-weight TCLSH replacement that can be used for code generation\n# but which is not adequate for testing.  This is \"jimsh0\" by default,\n# with source code in the repository.  To force the whole build to use\n# the full, official tclsh, add WITHOUT_JIMSH=1 to the nmake command line.\n#\n!IFDEF WITHOUT_JIMSH\nJIM_TCLSH = $(TCLSH_CMD)\n!ENDIF\n!IFNDEF JIM_TCLSH\nJIM_TCLSH = jimsh0.exe\n!ENDIF\n# <</mark>>\n\n# Compiler options needed for programs that use the readline() library.\n#\n!IFNDEF READLINE_FLAGS\nREADLINE_FLAGS = -DHAVE_READLINE=0\n!ENDIF\n\n# The library that programs using readline() must link against.\n#\n!IFNDEF LIBREADLINE\nLIBREADLINE =\n!ENDIF\n\n# Should the database engine be compiled threadsafe\n#\nTCC = $(TCC) -DSQLITE_THREADSAFE=1\nRCC = $(RCC) -DSQLITE_THREADSAFE=1\n\n# Do threads override each others locks by default (1), or do we test (-1)\n#\nTCC = $(TCC) -DSQLITE_THREAD_OVERRIDE_LOCK=-1\nRCC = $(RCC) -DSQLITE_THREAD_OVERRIDE_LOCK=-1\n\n# Any target libraries which libsqlite must be linked against\n#\n!IFNDEF TLIBS\nTLIBS =\n!ENDIF\n\n# Enable/disable loadable extensions, and other optional features\n# based on configuration. (-DSQLITE_OMIT*, -DSQLITE_ENABLE*).\n# The same set of OMIT and ENABLE flags should be passed to the\n# LEMON parser generator and the mkkeywordhash tool as well.\n\n# These are the required SQLite compilation options used when compiling for\n# the Windows platform.\n#\nREQ_FEATURE_FLAGS = $(REQ_FEATURE_FLAGS) -DSQLITE_MAX_TRIGGER_DEPTH=100\n\n# If we are linking to the RPCRT4 library, enable features that need it.\n#\n!IF $(USE_RPCRT4_LIB)!=0\nREQ_FEATURE_FLAGS = $(REQ_FEATURE_FLAGS) -DSQLITE_WIN32_USE_UUID=1\n!ENDIF\n\n# Add the required and optional SQLite compilation options into the command\n# lines used to invoke the MSVC code and resource compilers.\n#\nTCC = $(TCC) $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS)\nRCC = $(RCC) $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS)\n\n# Add in any optional parameters specified on the commane line, e.g.\n# nmake /f Makefile.msc all \"OPTS=-DSQLITE_ENABLE_FOO=1 -DSQLITE_OMIT_FOO=1\"\n#\nTCC = $(TCC) $(OPTS)\nRCC = $(RCC) $(OPTS)\n\n# If compiling for debugging, add some defines.\n#\n!IF $(DEBUG)>1\nTCC = $(TCC) -D_DEBUG\nBCC = $(BCC) -D_DEBUG\nRCC = $(RCC) -D_DEBUG\n!ENDIF\n\n# If optimizations are enabled or disabled (either implicitly or\n# explicitly), add the necessary flags.\n#\n!IF $(DEBUG)>1 || $(OPTIMIZATIONS)==0\nTCC = $(TCC) -Od\nBCC = $(BCC) -Od\n!IF $(USE_RUNTIME_CHECKS)!=0\nTCC = $(TCC) -RTC1\nBCC = $(BCC) -RTC1\n!ENDIF\n!ELSEIF $(OPTIMIZATIONS)>=3\nTCC = $(TCC) -Ox\nBCC = $(BCC) -Ox\n!ELSEIF $(OPTIMIZATIONS)==2\nTCC = $(TCC) -O2\nBCC = $(BCC) -O2\n!ELSEIF $(OPTIMIZATIONS)==1\nTCC = $(TCC) -O1\nBCC = $(BCC) -O1\n!ENDIF\n\n# If symbols are enabled (or compiling for debugging), enable PDBs.\n#\n!IF $(DEBUG)>1 || $(SYMBOLS)!=0\nTCC = $(TCC) -Zi\nBCC = $(BCC) -Zi\n!ENDIF\n\n# <<mark>>\n# If zlib support is enabled, add the compiler options for it.\n#\n!IF $(USE_ZLIB)!=0\nTCC = $(TCC) -DSQLITE_HAVE_ZLIB=1\nRCC = $(RCC) -DSQLITE_HAVE_ZLIB=1\nTCC = $(TCC) -I$(ZLIBINCDIR)\nRCC = $(RCC) -I$(ZLIBINCDIR)\n!ENDIF\n\n# If ICU support is enabled, add the compiler options for it.\n#\n!IF $(USE_ICU)!=0\nTCC = $(TCC) -DSQLITE_ENABLE_ICU=1\nRCC = $(RCC) -DSQLITE_ENABLE_ICU=1\nTCC = $(TCC) -I$(TOP)\\ext\\icu\nRCC = $(RCC) -I$(TOP)\\ext\\icu\nTCC = $(TCC) -I$(ICUINCDIR)\nRCC = $(RCC) -I$(ICUINCDIR)\n!ENDIF\n# <</mark>>\n\n# Command line prefixes for compiling code, compiling resources,\n# linking, etc.\n#\nLTCOMPILE = $(TCC) -Fo$@ -Fd$*.pdb\nLTRCOMPILE = $(RCC) -r\nLTLIB = lib.exe\nLTLINK = $(TCC) -Fe$@\n\n# If requested, link to the RPCRT4 library.\n#\n!IF $(USE_RPCRT4_LIB)!=0\nLTLIBS = $(LTLIBS) rpcrt4.lib\n!ENDIF\n\n# If a platform was set, force the linker to target that.\n# Note that the vcvars*.bat family of batch files typically\n# set this for you.  Otherwise, the linker will attempt\n# to deduce the binary type based on the object files.\n!IFDEF PLATFORM\nLTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)\nLTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)\n!ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\\n        \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\\n        \"$(VISUALSTUDIOVERSION)\"==\"15.0\"\nLTLINKOPTS = /NOLOGO /MACHINE:x86\nLTLIBOPTS = /NOLOGO /MACHINE:x86\n!ELSE\nLTLINKOPTS = /NOLOGO\nLTLIBOPTS = /NOLOGO\n!ENDIF\n\n# When compiling for use in the WinRT environment, the following\n# linker option must be used to mark the executable as runnable\n# only in the context of an application container.\n#\n!IF $(FOR_WINRT)!=0\nLTLINKOPTS = $(LTLINKOPTS) /APPCONTAINER\n!IF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \"$(VISUALSTUDIOVERSION)\"==\"14.0\"\n!IFNDEF STORELIBPATH\n!IF \"$(PLATFORM)\"==\"x86\"\nSTORELIBPATH = $(CRTLIBPATH)\\store\n!ELSEIF \"$(PLATFORM)\"==\"x64\"\nSTORELIBPATH = $(CRTLIBPATH)\\store\\amd64\n!ELSEIF \"$(PLATFORM)\"==\"ARM\"\nSTORELIBPATH = $(CRTLIBPATH)\\store\\arm\n!ELSE\nSTORELIBPATH = $(CRTLIBPATH)\\store\n!ENDIF\n!ENDIF\nSTORELIBPATH = $(STORELIBPATH:\\\\=\\)\nLTLINKOPTS = $(LTLINKOPTS) \"/LIBPATH:$(STORELIBPATH)\"\n!ENDIF\n!ENDIF\n\n# When compiling for Windows Phone 8.1, an extra library path is\n# required.\n#\n!IF $(USE_WP81_OPTS)!=0\n!IFNDEF WP81LIBPATH\n!IF \"$(PLATFORM)\"==\"x86\"\nWP81LIBPATH = $(PROGRAMFILES_X86)\\Windows Phone Kits\\8.1\\lib\\x86\n!ELSEIF \"$(PLATFORM)\"==\"ARM\"\nWP81LIBPATH = $(PROGRAMFILES_X86)\\Windows Phone Kits\\8.1\\lib\\ARM\n!ELSE\nWP81LIBPATH = $(PROGRAMFILES_X86)\\Windows Phone Kits\\8.1\\lib\\x86\n!ENDIF\n!ENDIF\n!ENDIF\n\n# When compiling for Windows Phone 8.1, some extra linker options\n# are also required.\n#\n!IF $(USE_WP81_OPTS)!=0\n!IFDEF WP81LIBPATH\nLTLINKOPTS = $(LTLINKOPTS) \"/LIBPATH:$(WP81LIBPATH)\"\n!ENDIF\nLTLINKOPTS = $(LTLINKOPTS) /DYNAMICBASE\nLTLINKOPTS = $(LTLINKOPTS) WindowsPhoneCore.lib RuntimeObject.lib PhoneAppModelHost.lib\nLTLINKOPTS = $(LTLINKOPTS) /NODEFAULTLIB:kernel32.lib /NODEFAULTLIB:ole32.lib\n!ENDIF\n\n# When compiling for UWP or the Windows 10 platform, some extra linker\n# options are also required.\n#\n!IF $(FOR_UWP)!=0 || $(FOR_WIN10)!=0\nLTLINKOPTS = $(LTLINKOPTS) /DYNAMICBASE /NODEFAULTLIB:kernel32.lib\nLTLINKOPTS = $(LTLINKOPTS) mincore.lib\n!IFDEF PSDKLIBPATH\nLTLINKOPTS = $(LTLINKOPTS) \"/LIBPATH:$(PSDKLIBPATH)\"\n!ENDIF\n!ENDIF\n\n!IF $(FOR_WIN10)!=0\nLTLINKOPTS = $(LTLINKOPTS) /guard:cf \"/LIBPATH:$(UCRTLIBPATH)\"\n!IF $(DEBUG)>1\nLTLINKOPTS = $(LTLINKOPTS) /NODEFAULTLIB:libucrtd.lib /DEFAULTLIB:ucrtd.lib\n!ELSE\nLTLINKOPTS = $(LTLINKOPTS) /NODEFAULTLIB:libucrt.lib /DEFAULTLIB:ucrt.lib\n!ENDIF\n!ENDIF\n\n# If either debugging or symbols are enabled, enable PDBs.\n#\n!IF $(DEBUG)>1 || $(SYMBOLS)!=0\nLDFLAGS = /DEBUG $(LDOPTS)\n!ELSE\nLDFLAGS = $(LDOPTS)\n!ENDIF\n\n# <<mark>>\n# Start with the Tcl related linker options.\n#\n!IF $(NO_TCL)==0\nTCLLIBPATHS = $(TCLLIBPATHS) /LIBPATH:$(TCLLIBDIR)\nTCLLIBS = $(TCLLIBS) $(LIBTCL)\n!ENDIF\n\n# If zlib support is enabled, add the linker options for it.\n#\n!IF $(USE_ZLIB)!=0\nLTLIBPATHS = $(LTLIBPATHS) /LIBPATH:$(ZLIBLIBDIR)\nLTLIBS = $(LTLIBS) $(ZLIBLIB)\n!ENDIF\n\n# If ICU support is enabled, add the linker options for it.\n#\n!IF $(USE_ICU)!=0\nLTLIBPATHS = $(LTLIBPATHS) /LIBPATH:$(ICULIBDIR)\nLTLIBS = $(LTLIBS) $(LIBICU)\n!ENDIF\n# <</mark>>\n\n# You should not have to change anything below this line\n###############################################################################\n\n# <<mark>>\n# Object files for the SQLite library (non-amalgamation).\n#\nLIBOBJS0 = vdbe.lo parse.lo alter.lo analyze.lo attach.lo auth.lo \\\n         backup.lo bitvec.lo btmutex.lo btree.lo build.lo \\\n         callback.lo complete.lo ctime.lo \\\n         date.lo dbpage.lo dbstat.lo delete.lo \\\n         expr.lo fault.lo fkey.lo \\\n         fts3.lo fts3_aux.lo fts3_expr.lo fts3_hash.lo fts3_icu.lo \\\n         fts3_porter.lo fts3_snippet.lo fts3_tokenizer.lo fts3_tokenizer1.lo \\\n         fts3_tokenize_vtab.lo fts3_unicode.lo fts3_unicode2.lo fts3_write.lo \\\n         fts5.lo \\\n         func.lo global.lo hash.lo \\\n         icu.lo insert.lo json.lo legacy.lo loadext.lo \\\n         main.lo malloc.lo mem0.lo mem1.lo mem2.lo mem3.lo mem5.lo \\\n         memdb.lo memjournal.lo \\\n         mutex.lo mutex_noop.lo mutex_unix.lo mutex_w32.lo \\\n         notify.lo opcodes.lo os.lo os_kv.lo os_unix.lo os_win.lo \\\n         pager.lo pcache.lo pcache1.lo pragma.lo prepare.lo printf.lo \\\n         random.lo resolve.lo rowset.lo rtree.lo \\\n         sqlite3session.lo select.lo sqlite3rbu.lo status.lo stmt.lo \\\n         table.lo threads.lo tokenize.lo treeview.lo trigger.lo \\\n         update.lo upsert.lo util.lo vacuum.lo \\\n         vdbeapi.lo vdbeaux.lo vdbeblob.lo vdbemem.lo vdbesort.lo \\\n         vdbetrace.lo vdbevtab.lo wal.lo walker.lo where.lo wherecode.lo \\\n         whereexpr.lo \\\n         window.lo utf.lo vtab.lo\n# <</mark>>\n\n# Object files for the amalgamation.\n#\nLIBOBJS1 = sqlite3.lo\n\n# Determine the real value of LIBOBJ based on the 'configure' script\n#\n# <<mark>>\n!IF $(USE_AMALGAMATION)==0\nLIBOBJ = $(LIBOBJS0)\n!ELSE\n# <</mark>>\nLIBOBJ = $(LIBOBJS1)\n# <<mark>>\n!ENDIF\n# <</mark>>\n\n# Determine if embedded resource compilation and usage are enabled.\n#\n!IF $(USE_RC)!=0\nLIBRESOBJS = sqlite3res.lo\n!ELSE\nLIBRESOBJS =\n!ENDIF\n\n# <<mark>>\n# Core source code files, part 1.\n#\nSRC00 = \\\n  $(TOP)\\src\\alter.c \\\n  $(TOP)\\src\\analyze.c \\\n  $(TOP)\\src\\attach.c \\\n  $(TOP)\\src\\auth.c \\\n  $(TOP)\\src\\backup.c \\\n  $(TOP)\\src\\bitvec.c \\\n  $(TOP)\\src\\btmutex.c \\\n  $(TOP)\\src\\btree.c \\\n  $(TOP)\\src\\build.c \\\n  $(TOP)\\src\\callback.c \\\n  $(TOP)\\src\\complete.c \\\n  $(TOP)\\src\\ctime.c \\\n  $(TOP)\\src\\date.c \\\n  $(TOP)\\src\\dbpage.c \\\n  $(TOP)\\src\\dbstat.c \\\n  $(TOP)\\src\\delete.c \\\n  $(TOP)\\src\\expr.c \\\n  $(TOP)\\src\\fault.c \\\n  $(TOP)\\src\\fkey.c \\\n  $(TOP)\\src\\func.c \\\n  $(TOP)\\src\\global.c \\\n  $(TOP)\\src\\hash.c \\\n  $(TOP)\\src\\insert.c \\\n  $(TOP)\\src\\json.c \\\n  $(TOP)\\src\\legacy.c \\\n  $(TOP)\\src\\loadext.c \\\n  $(TOP)\\src\\main.c \\\n  $(TOP)\\src\\malloc.c \\\n  $(TOP)\\src\\mem0.c \\\n  $(TOP)\\src\\mem1.c \\\n  $(TOP)\\src\\mem2.c \\\n  $(TOP)\\src\\mem3.c \\\n  $(TOP)\\src\\mem5.c \\\n  $(TOP)\\src\\memdb.c \\\n  $(TOP)\\src\\memjournal.c \\\n  $(TOP)\\src\\mutex.c \\\n  $(TOP)\\src\\mutex_noop.c \\\n  $(TOP)\\src\\mutex_unix.c \\\n  $(TOP)\\src\\mutex_w32.c \\\n  $(TOP)\\src\\notify.c \\\n  $(TOP)\\src\\os.c \\\n  $(TOP)\\src\\os_kv.c \\\n  $(TOP)\\src\\os_unix.c \\\n  $(TOP)\\src\\os_win.c\n\n# Core source code files, part 2.\n#\nSRC01 = \\\n  $(TOP)\\src\\pager.c \\\n  $(TOP)\\src\\pcache.c \\\n  $(TOP)\\src\\pcache1.c \\\n  $(TOP)\\src\\pragma.c \\\n  $(TOP)\\src\\prepare.c \\\n  $(TOP)\\src\\printf.c \\\n  $(TOP)\\src\\random.c \\\n  $(TOP)\\src\\resolve.c \\\n  $(TOP)\\src\\rowset.c \\\n  $(TOP)\\src\\select.c \\\n  $(TOP)\\src\\status.c \\\n  $(TOP)\\src\\table.c \\\n  $(TOP)\\src\\threads.c \\\n  $(TOP)\\src\\tclsqlite.c \\\n  $(TOP)\\src\\tokenize.c \\\n  $(TOP)\\src\\treeview.c \\\n  $(TOP)\\src\\trigger.c \\\n  $(TOP)\\src\\utf.c \\\n  $(TOP)\\src\\update.c \\\n  $(TOP)\\src\\upsert.c \\\n  $(TOP)\\src\\util.c \\\n  $(TOP)\\src\\vacuum.c \\\n  $(TOP)\\src\\vdbe.c \\\n  $(TOP)\\src\\vdbeapi.c \\\n  $(TOP)\\src\\vdbeaux.c \\\n  $(TOP)\\src\\vdbeblob.c \\\n  $(TOP)\\src\\vdbemem.c \\\n  $(TOP)\\src\\vdbesort.c \\\n  $(TOP)\\src\\vdbetrace.c \\\n  $(TOP)\\src\\vdbevtab.c \\\n  $(TOP)\\src\\vtab.c \\\n  $(TOP)\\src\\wal.c \\\n  $(TOP)\\src\\walker.c \\\n  $(TOP)\\src\\where.c \\\n  $(TOP)\\src\\wherecode.c \\\n  $(TOP)\\src\\whereexpr.c \\\n  $(TOP)\\src\\window.c\n\n# Core miscellaneous files.\n#\nSRC03 = \\\n  $(TOP)\\src\\parse.y\n\n# Core header files, part 1.\n#\nSRC04 = \\\n  $(TOP)\\src\\btree.h \\\n  $(TOP)\\src\\btreeInt.h \\\n  $(TOP)\\src\\hash.h \\\n  $(TOP)\\src\\hwtime.h \\\n  $(TOP)\\src\\msvc.h \\\n  $(TOP)\\src\\mutex.h \\\n  $(TOP)\\src\\os.h \\\n  $(TOP)\\src\\os_common.h \\\n  $(TOP)\\src\\os_setup.h \\\n  $(TOP)\\src\\os_win.h\n\n# Core header files, part 2.\n#\nSRC05 = \\\n  $(TOP)\\src\\pager.h \\\n  $(TOP)\\src\\pcache.h \\\n  $(TOP)\\src\\pragma.h \\\n  $(TOP)\\src\\sqlite.h.in \\\n  $(TOP)\\src\\sqlite3ext.h \\\n  $(TOP)\\src\\sqliteInt.h \\\n  $(TOP)\\src\\sqliteLimit.h \\\n  $(TOP)\\src\\vdbe.h \\\n  $(TOP)\\src\\vdbeInt.h \\\n  $(TOP)\\src\\vxworks.h \\\n  $(TOP)\\src\\wal.h \\\n  $(TOP)\\src\\whereInt.h\n\n# Extension source code files, part 2.\n#\nSRC07 = \\\n  $(TOP)\\ext\\fts3\\fts3.c \\\n  $(TOP)\\ext\\fts3\\fts3_aux.c \\\n  $(TOP)\\ext\\fts3\\fts3_expr.c \\\n  $(TOP)\\ext\\fts3\\fts3_hash.c \\\n  $(TOP)\\ext\\fts3\\fts3_icu.c \\\n  $(TOP)\\ext\\fts3\\fts3_porter.c \\\n  $(TOP)\\ext\\fts3\\fts3_snippet.c \\\n  $(TOP)\\ext\\fts3\\fts3_tokenizer.c \\\n  $(TOP)\\ext\\fts3\\fts3_tokenizer1.c \\\n  $(TOP)\\ext\\fts3\\fts3_tokenize_vtab.c \\\n  $(TOP)\\ext\\fts3\\fts3_unicode.c \\\n  $(TOP)\\ext\\fts3\\fts3_unicode2.c \\\n  $(TOP)\\ext\\fts3\\fts3_write.c \\\n  $(TOP)\\ext\\icu\\icu.c \\\n  $(TOP)\\ext\\rtree\\rtree.c \\\n  $(TOP)\\ext\\session\\sqlite3session.c \\\n  $(TOP)\\ext\\rbu\\sqlite3rbu.c \\\n  $(TOP)\\ext\\misc\\stmt.c\n\n# Extension header files, part 2.\n#\nSRC09 = \\\n  $(TOP)\\ext\\fts3\\fts3.h \\\n  $(TOP)\\ext\\fts3\\fts3Int.h \\\n  $(TOP)\\ext\\fts3\\fts3_hash.h \\\n  $(TOP)\\ext\\fts3\\fts3_tokenizer.h \\\n  $(TOP)\\ext\\icu\\sqliteicu.h \\\n  $(TOP)\\ext\\rtree\\rtree.h \\\n  $(TOP)\\ext\\rtree\\geopoly.c \\\n  $(TOP)\\ext\\rbu\\sqlite3rbu.h \\\n  $(TOP)\\ext\\session\\sqlite3session.h\n\n# Generated source code files\n#\nSRC10 = \\\n  opcodes.c \\\n  parse.c\n\n# Generated header files\n#\nSRC11 = \\\n  keywordhash.h \\\n  opcodes.h \\\n  parse.h \\\n  shell.c \\\n  $(SQLITE3H)\n\n# Generated Tcl header files\n#\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\nSRC12 = \\\n  $(SQLITETCLH) \\\n  $(SQLITETCLDECLSH)\n!ELSE\nSRC12 =\n!ENDIF\n\n# All source code files.\n#\nSRC = $(SRC00) $(SRC01) $(SRC03) $(SRC04) $(SRC05) $(SRC07) $(SRC09) $(SRC10) $(SRC11) $(SRC12)\n\n# Source code to the test files.\n#\nTESTSRC = \\\n  $(TOP)\\src\\test1.c \\\n  $(TOP)\\src\\test2.c \\\n  $(TOP)\\src\\test3.c \\\n  $(TOP)\\src\\test4.c \\\n  $(TOP)\\src\\test5.c \\\n  $(TOP)\\src\\test6.c \\\n  $(TOP)\\src\\test8.c \\\n  $(TOP)\\src\\test9.c \\\n  $(TOP)\\src\\test_autoext.c \\\n  $(TOP)\\src\\test_backup.c \\\n  $(TOP)\\src\\test_bestindex.c \\\n  $(TOP)\\src\\test_blob.c \\\n  $(TOP)\\src\\test_btree.c \\\n  $(TOP)\\src\\test_config.c \\\n  $(TOP)\\src\\test_delete.c \\\n  $(TOP)\\src\\test_demovfs.c \\\n  $(TOP)\\src\\test_devsym.c \\\n  $(TOP)\\src\\test_fs.c \\\n  $(TOP)\\src\\test_func.c \\\n  $(TOP)\\src\\test_hexio.c \\\n  $(TOP)\\src\\test_init.c \\\n  $(TOP)\\src\\test_intarray.c \\\n  $(TOP)\\src\\test_journal.c \\\n  $(TOP)\\src\\test_malloc.c \\\n  $(TOP)\\src\\test_md5.c \\\n  $(TOP)\\src\\test_multiplex.c \\\n  $(TOP)\\src\\test_mutex.c \\\n  $(TOP)\\src\\test_onefile.c \\\n  $(TOP)\\src\\test_osinst.c \\\n  $(TOP)\\src\\test_pcache.c \\\n  $(TOP)\\src\\test_quota.c \\\n  $(TOP)\\src\\test_rtree.c \\\n  $(TOP)\\src\\test_schema.c \\\n  $(TOP)\\src\\test_superlock.c \\\n  $(TOP)\\src\\test_syscall.c \\\n  $(TOP)\\src\\test_tclsh.c \\\n  $(TOP)\\src\\test_tclvar.c \\\n  $(TOP)\\src\\test_thread.c \\\n  $(TOP)\\src\\test_vdbecov.c \\\n  $(TOP)\\src\\test_vfs.c \\\n  $(TOP)\\src\\test_windirent.c \\\n  $(TOP)\\src\\test_window.c \\\n  $(TOP)\\src\\test_wsd.c \\\n  $(TOP)\\ext\\fts3\\fts3_term.c \\\n  $(TOP)\\ext\\fts3\\fts3_test.c \\\n  $(TOP)\\ext\\rbu\\test_rbu.c \\\n  $(TOP)\\ext\\session\\test_session.c\n\n# Statically linked extensions.\n#\nTESTEXT = \\\n  $(TOP)\\ext\\expert\\sqlite3expert.c \\\n  $(TOP)\\ext\\expert\\test_expert.c \\\n  $(TOP)\\ext\\misc\\amatch.c \\\n  $(TOP)\\ext\\misc\\appendvfs.c \\\n  $(TOP)\\ext\\misc\\basexx.c \\\n  $(TOP)\\ext\\misc\\carray.c \\\n  $(TOP)\\ext\\misc\\cksumvfs.c \\\n  $(TOP)\\ext\\misc\\closure.c \\\n  $(TOP)\\ext\\misc\\csv.c \\\n  $(TOP)\\ext\\misc\\decimal.c \\\n  $(TOP)\\ext\\misc\\eval.c \\\n  $(TOP)\\ext\\misc\\explain.c \\\n  $(TOP)\\ext\\misc\\fileio.c \\\n  $(TOP)\\ext\\misc\\fuzzer.c \\\n  $(TOP)\\ext\\fts5\\fts5_tcl.c \\\n  $(TOP)\\ext\\fts5\\fts5_test_mi.c \\\n  $(TOP)\\ext\\fts5\\fts5_test_tok.c \\\n  $(TOP)\\ext\\misc\\ieee754.c \\\n  $(TOP)\\ext\\misc\\mmapwarm.c \\\n  $(TOP)\\ext\\misc\\nextchar.c \\\n  $(TOP)\\ext\\misc\\normalize.c \\\n  $(TOP)\\ext\\misc\\percentile.c \\\n  $(TOP)\\ext\\misc\\prefixes.c \\\n  $(TOP)\\ext\\misc\\qpvtab.c \\\n  $(TOP)\\ext\\misc\\randomjson.c \\\n  $(TOP)\\ext\\misc\\regexp.c \\\n  $(TOP)\\ext\\misc\\remember.c \\\n  $(TOP)\\ext\\misc\\series.c \\\n  $(TOP)\\ext\\misc\\spellfix.c \\\n  $(TOP)\\ext\\misc\\stmtrand.c \\\n  $(TOP)\\ext\\misc\\totype.c \\\n  $(TOP)\\ext\\misc\\unionvtab.c \\\n  $(TOP)\\ext\\misc\\wholenumber.c \\\n  $(TOP)\\ext\\rtree\\test_rtreedoc.c \\\n  $(TOP)\\ext\\recover\\sqlite3recover.c \\\n  $(TOP)\\ext\\recover\\test_recover.c \\\n  $(TOP)\\ext\\intck\\test_intck.c  \\\n  $(TOP)\\ext\\intck\\sqlite3intck.c \\\n  $(TOP)\\ext\\recover\\dbdata.c \n\n# If use of zlib is enabled, add the \"zipfile.c\" source file.\n#\n!IF $(USE_ZLIB)!=0\nTESTEXT = $(TESTEXT) $(TOP)\\ext\\misc\\zipfile.c\n!ENDIF\n\n# Source code to the library files needed by the test fixture\n# (non-amalgamation)\n#\nTESTSRC2 = \\\n  $(SRC00) \\\n  $(SRC01) \\\n  $(SRC07) \\\n  $(SRC10) \\\n  fts5.c\n\n# Header files used by all library source files.\n#\nHDR = \\\n   $(TOP)\\src\\btree.h \\\n   $(TOP)\\src\\btreeInt.h \\\n   $(TOP)\\src\\hash.h \\\n   $(TOP)\\src\\hwtime.h \\\n   keywordhash.h \\\n   $(TOP)\\src\\msvc.h \\\n   $(TOP)\\src\\mutex.h \\\n   opcodes.h \\\n   $(TOP)\\src\\os.h \\\n   $(TOP)\\src\\os_common.h \\\n   $(TOP)\\src\\os_setup.h \\\n   $(TOP)\\src\\os_win.h \\\n   $(TOP)\\src\\pager.h \\\n   $(TOP)\\src\\pcache.h \\\n   parse.h \\\n   $(TOP)\\src\\pragma.h \\\n   $(SQLITE3H) \\\n   sqlite3ext.h \\\n   $(TOP)\\src\\sqliteInt.h \\\n   $(TOP)\\src\\sqliteLimit.h \\\n   $(TOP)\\src\\vdbe.h \\\n   $(TOP)\\src\\vdbeInt.h \\\n   $(TOP)\\src\\vxworks.h \\\n   $(TOP)\\src\\whereInt.h\n\n# Header files used by extensions\n#\nEXTHDR = $(EXTHDR) \\\n  $(TOP)\\ext\\fts3\\fts3.h \\\n  $(TOP)\\ext\\fts3\\fts3Int.h \\\n  $(TOP)\\ext\\fts3\\fts3_hash.h \\\n  $(TOP)\\ext\\fts3\\fts3_tokenizer.h\nEXTHDR = $(EXTHDR) \\\n  $(TOP)\\ext\\rtree\\rtree.h \\\n  $(TOP)\\ext\\rtree\\geopoly.c\nEXTHDR = $(EXTHDR) \\\n  $(TOP)\\ext\\icu\\sqliteicu.h\nEXTHDR = $(EXTHDR) \\\n  $(TOP)\\ext\\rtree\\sqlite3rtree.h\nEXTHDR = $(EXTHDR) \\\n  $(TOP)\\ext\\session\\sqlite3session.h\n\n# executables needed for testing\n#\nTESTPROGS = \\\n  testfixture.exe \\\n  $(SQLITE3EXE) \\\n  sqlite3_analyzer.exe \\\n  sqlite3_checker.exe \\\n  sqldiff.exe \\\n  dbhash.exe \\\n  sqltclsh.exe\n\n# Databases containing fuzzer test cases\n#\nFUZZDATA = \\\n  $(TOP)\\test\\fuzzdata1.db \\\n  $(TOP)\\test\\fuzzdata2.db \\\n  $(TOP)\\test\\fuzzdata3.db \\\n  $(TOP)\\test\\fuzzdata4.db \\\n  $(TOP)\\test\\fuzzdata5.db \\\n  $(TOP)\\test\\fuzzdata6.db \\\n  $(TOP)\\test\\fuzzdata7.db \\\n  $(TOP)\\test\\fuzzdata8.db\n# <</mark>>\n\n# Additional compiler options for the shell.  These are only effective\n# when the shell is not being dynamically linked.\n#\n!IF $(DYNAMIC_SHELL)==0 && $(FOR_WIN10)==0\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_DQS=0\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_ENABLE_FTS4=1\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_ENABLE_EXPLAIN_COMMENTS=1\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_ENABLE_OFFSET_SQL_FUNC=1\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_ENABLE_UNKNOWN_SQL_FUNCTION=1\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_ENABLE_STMT_SCANSTATUS=1\nSHELL_COMPILE_OPTS = $(SHELL_COMPILE_OPTS) -DSQLITE_STRICT_SUBTYPE=1\n!ENDIF\n\n# <<mark>>\n# Extra compiler options for various test tools.\n#\nMPTESTER_COMPILE_OPTS = -DSQLITE_ENABLE_FTS5\nFUZZERSHELL_COMPILE_OPTS =\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -I$(TOP)\\test -I$(TOP)\\ext\\recover\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_MEMSYS5\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_OSS_FUZZ\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_BYTECODE_VTAB\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_DBPAGE_VTAB\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_DBSTAT_VTAB\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_BYTECODE_VTAB\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_DESERIALIZE\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_EXPLAIN_COMMENTS\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_FTS3_PARENTHESIS\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_FTS4\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_FTS5\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_GEOPOLY\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_MATH_FUNCTIONS\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_MEMSYS5\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_NORMALIZE\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_OFFSET_SQL_FUNC\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_PREUPDATE_HOOK\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_RTREE\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_SESSION\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_STMTVTAB\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_UNKNOWN_SQL_FUNCTION\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_STAT4\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_STMT_SCANSTATUS\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_MAX_MEMORY=50000000\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_MAX_MMAP_SIZE=0\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_OMIT_LOAD_EXTENSION\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_PRINTF_PRECISION_LIMIT=1000\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_PRIVATE=\"\"\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_STRICT_SUBTYPE=1\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_STATIC_RANDOMJSON\n\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_MAX_MEMORY=50000000\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_PRINTF_PRECISION_LIMIT=1000\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_OMIT_LOAD_EXTENSION\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_FTS4\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_FTS5\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_RTREE\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_GEOPOLY\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_DBSTAT_VTAB\nFUZZCHECK_OPTS = $(FUZZCHECK_OPTS) -DSQLITE_ENABLE_BYTECODE_VTAB\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\test\\fuzzcheck.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\test\\ossfuzz.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\test\\fuzzinvariants.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\test\\vt02.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\ext\\recover\\dbdata.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\ext\\recover\\sqlite3recover.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\ext\\misc\\percentile.c\nFUZZCHECK_SRC = $(FUZZCHECK_SRC) $(TOP)\\ext\\misc\\randomjson.c\n\nOSSSHELL_SRC = $(TOP)\\test\\ossshell.c $(TOP)\\test\\ossfuzz.c\nDBFUZZ_COMPILE_OPTS = -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION\nKV_COMPILE_OPTS = -DSQLITE_THREADSAFE=0 -DSQLITE_DIRECT_OVERFLOW_READ\nST_COMPILE_OPTS = -DSQLITE_THREADSAFE=0\n\n# Standard options to testfixture.\n#\nTESTOPTS = --verbose=file --output=test-out.txt\n\n# Extra targets for the \"all\" target that require Tcl.\n#\n!IF $(NO_TCL)==0\nALL_TCL_TARGETS = $(SQLITE3TCLDLL)\n!ELSE\nALL_TCL_TARGETS =\n!ENDIF\n# <</mark>>\n\n# This is the default Makefile target.  The objects listed here\n# are what get build when you type just \"make\" with no arguments.\n#\ncore:\tdll libsqlite3.lib shell\n\n# Targets that require the Tcl library.\n#\ntcl:\t$(ALL_TCL_TARGETS)\n\n# This Makefile target builds all of the standard binaries.\n#\nall:\tcore tcl\n\n# Dynamic link library section.\n#\ndll:\t$(SQLITE3DLL)\n\n# Shell executable.\n#\nshell:\t$(SQLITE3EXE)\n\n# jimsh0 - replacement for tclsh\n#\njimsh0.exe:\t$(TOP)\\autosetup\\jimsh0.c\n\tcl -DHAVE__FULLPATH=1 $(TOP)\\autosetup\\jimsh0.c\n\n# <<mark>>\nlibsqlite3.lib:\t$(LIBOBJ)\n\t$(LTLIB) $(LTLIBOPTS) /OUT:$@ $(LIBOBJ) $(TLIBS)\n\nlibtclsqlite3.lib:\ttclsqlite.lo libsqlite3.lib\n\t$(LTLIB) $(LTLIBOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) /OUT:$@ tclsqlite.lo libsqlite3.lib $(LIBTCLSTUB) $(TLIBS)\n\ntclsqlite3.def:\ttclsqlite.lo\n\techo EXPORTS > tclsqlite3.def\n\tdumpbin /all tclsqlite.lo \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl include \"^\\s+/EXPORT:_?((?:Sqlite3|Tclsqlite3)_[^@]*)(?:@\\d+)?$$\" \\1 \\\n\t\t| sort >> tclsqlite3.def\n\npkgIndex.tcl:\t$(TOP)\\VERSION\n\tfor /F %%V in ('type \"$(TOP)\\VERSION\"') do ( \\\n\t\techo package ifneeded sqlite3 @version@ [list load [file join $$dir $(SQLITE3TCLDLL)] Sqlite3] \\\n\t\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact @version@ %%V > pkgIndex.tcl \\\n\t)\n\n$(SQLITE3TCLDLL):\tlibtclsqlite3.lib $(LIBRESOBJS) tclsqlite3.def pkgIndex.tcl\n\t$(LD) $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) /DLL /DEF:tclsqlite3.def /OUT:$@ libtclsqlite3.lib $(LIBRESOBJS) $(LTLIBS) $(TLIBS)\n\ntclextension:\t$(SQLITE3TCLDLL)\n\ntclextension-install:\t$(SQLITE3TCLDLL)\n\t$(TCLSH_CMD) $(TOP)\\tool\\buildtclext.tcl --install-only\n\ntclextension-uninstall:\n\t$(TCLSH_CMD) $(TOP)\\tool\\buildtclext.tcl --uninstall\n\ntclextension-list:\n\t@ $(TCLSH_CMD) $(TOP)\\tool\\buildtclext.tcl --info\n\ntclextension-verify: sqlite3.h\n\t@ $(TCLSH_CMD) $(TOP)\\tool\\buildtclext.tcl --version-check\n\n\n# <</mark>>\n\n$(SQLITE3DLL):\t$(LIBOBJ) $(LIBRESOBJS) $(CORE_LINK_DEP)\n\t$(LD) $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) /DLL $(CORE_LINK_OPTS) /OUT:$@ $(LIBOBJ) $(LIBRESOBJS) $(LTLIBS) $(TLIBS)\n\n# <<block2>>\nsqlite3.def:\tlibsqlite3.lib $(JIM_TCLSH)\n\techo EXPORTS > sqlite3.def\n\tdumpbin /all libsqlite3.lib \\\n\t\t| $(JIM_TCLSH) $(TOP)\\tool\\replace.tcl include \"^\\s+1 _?(sqlite3(?:session|changeset|changegroup|rebaser|rbu)?_[^@]*)(?:@\\d+)?$$\" \\1 \\\n\t\t| sort >> sqlite3.def\n# <</block2>>\n\n$(SQLITE3EXE):\tshell.c $(SHELL_CORE_DEP) $(LIBRESOBJS) $(SHELL_CORE_SRC) $(SQLITE3H)\n\t$(LTLINK) $(SHELL_COMPILE_OPTS) $(READLINE_FLAGS) shell.c $(SHELL_CORE_SRC) \\\n\t\t/link $(SQLITE3EXEPDB) $(LDFLAGS) $(LTLINKOPTS) $(SHELL_LINK_OPTS) $(LTLIBPATHS) $(LIBRESOBJS) $(LIBREADLINE) $(LTLIBS) $(TLIBS)\n\n# <<mark>>\nsqldiff.exe:\t$(TOP)\\tool\\sqldiff.c $(TOP)\\ext\\misc\\sqlite3_stdio.h $(TOP)\\ext\\misc\\sqlite3_stdio.c $(SQLITE3C) $(SQLITE3H) $(LIBRESOBJS)\n\t$(LTLINK) $(NO_WARN) -I$(TOP)\\ext\\misc $(TOP)\\tool\\sqldiff.c $(TOP)\\ext\\misc\\sqlite3_stdio.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS) $(LIBRESOBJS)\n\ndbhash.exe:\t$(TOP)\\tool\\dbhash.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(TOP)\\tool\\dbhash.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nRSYNC_SRC = \\\n  $(TOP)\\tool\\sqlite3_rsync.c \\\n  $(SQLITE3C)\n\nRSYNC_OPT = \\\n  -DSQLITE_ENABLE_DBPAGE_VTAB \\\n  -DSQLITE_THREADSAFE=0 \\\n  -DSQLITE_OMIT_LOAD_EXTENSION \\\n  -DSQLITE_OMIT_DEPRECATED\n\nsqlite3_rsync.exe:\t$(RSYNC_SRC) $(LIBRESOBJS)\n\t$(LTLINK) $(RSYNC_OPT) $(NO_WARN) $(RSYNC_SRC) /link $(LDFLAGS) $(LTLINKOPTS) $(LIBRESOBJS)\n\nscrub.exe:\t$(TOP)\\ext\\misc\\scrub.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSCRUB_STANDALONE=1 $(TOP)\\ext\\misc\\scrub.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nsrcck1.exe:\t$(TOP)\\tool\\srcck1.c\n\t$(BCC) $(NO_WARN) -Fe$@ $(TOP)\\tool\\srcck1.c\n\nsourcetest:\tsrcck1.exe $(SQLITE3C)\n\tsrcck1.exe $(SQLITE3C)\n\nsrc-verify.exe:\t$(TOP)\\tool\\src-verify.c\n\t$(LTLINK) $(NO_WARN) $(TOP)\\tool\\src-verify.c\n\nverify-source:\tsrc-verify.exe\n\tsrc-verify.exe $(TOP)\n\nfuzzershell.exe:\t$(TOP)\\tool\\fuzzershell.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(FUZZERSHELL_COMPILE_OPTS) $(TOP)\\tool\\fuzzershell.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\ndbfuzz.exe:\t$(TOP)\\test\\dbfuzz.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(DBFUZZ_COMPILE_OPTS) $(TOP)\\test\\dbfuzz.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nfuzzcheck.exe:\t$(FUZZCHECK_SRC) $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) /F 8388608 $(NO_WARN) $(FUZZCHECK_OPTS) $(FUZZCHECK_SRC) $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nfuzzcheck-asan.exe:\t$(FUZZCHECK_SRC) $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) /fsanitize=address $(FUZZCHECK_OPTS) $(FUZZCHECK_SRC) $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nrun-fuzzcheck:\tfuzzcheck.exe fuzzcheck-asan.exe\n\tfuzzcheck --spinner $(FUZZDB)\n\tfuzzcheck-asan --spinner $(FUZZDB)\n\nossshell.exe:\t$(OSSSHELL_SRC) $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(FUZZCHECK_OPTS) $(OSSSHELL_SRC) $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nsessionfuzz.exe:\tzlib $(TOP)\\test\\sessionfuzz.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -I$(ZLIBINCDIR) $(TOP)\\test\\sessionfuzz.c /link $(LDFLAGS) $(LTLINKOPTS) /LIBPATH:$(ZLIBLIBDIR) $(ZLIBLIB)\n\nmptester.exe:\t$(TOP)\\mptest\\mptest.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(MPTESTER_COMPILE_OPTS) $(TOP)\\mptest\\mptest.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nMPTEST1 = mptester mptest.db $(TOP)\\mptest\\crash01.test --repeat 20\nMPTEST2 = mptester mptest.db $(TOP)\\mptest\\multiwrite01.test --repeat 20\n\nmptest:\tmptester.exe\n\tdel /Q mptest.db 2>NUL\n\t$(MPTEST1) --journalmode DELETE\n\t$(MPTEST2) --journalmode WAL\n\t$(MPTEST1) --journalmode WAL\n\t$(MPTEST2) --journalmode PERSIST\n\t$(MPTEST1) --journalmode PERSIST\n\t$(MPTEST2) --journalmode TRUNCATE\n\t$(MPTEST1) --journalmode TRUNCATE\n\t$(MPTEST2) --journalmode DELETE\n\n# This target creates a directory named \"tsrc\" and fills it with\n# copies of all of the C source code and header files needed to\n# build on the target system.  Some of the C source code and header\n# files are automatically generated.  This target takes care of\n# all that automatic generation.\n#\n.target_source:\t$(SRC) $(TOP)\\tool\\vdbe-compress.tcl fts5.c $(SQLITE_TCL_DEP) $(JIM_TCLSH)\n\t-rmdir /Q/S tsrc 2>NUL\n\t-mkdir tsrc\n        $(JIM_TCLSH) $(TOP)\\tool\\cp.tcl $(SRC00) $(SRC01) $(SRC03) $(SRC04) $(SRC05) $(SRC07) $(SRC09) $(SRC10) $(SRC11) $(SRC12) fts5.c fts5.h tsrc\n\tcopy /B tsrc\\fts5.c +,,\n\tcopy /B tsrc\\fts5.h +,,\n\tdel /Q tsrc\\sqlite.h.in tsrc\\parse.y 2>NUL\n\t$(JIM_TCLSH) $(TOP)\\tool\\vdbe-compress.tcl $(OPTS) < tsrc\\vdbe.c > vdbe.new\n\tmove vdbe.new tsrc\\vdbe.c\n\techo > .target_source\n\nsqlite3.c:\t.target_source sqlite3ext.h sqlite3session.h $(MKSQLITE3C_TOOL) src-verify.exe $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(MKSQLITE3C_TOOL) $(MKSQLITE3C_ARGS) $(EXTRA_SRC)\n\nsqlite3-all.c:\tsqlite3.c $(TOP)\\tool\\split-sqlite3c.tcl $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(TOP)\\tool\\split-sqlite3c.tcl\n# <</mark>>\n\n# Rule to build the amalgamation\n#\nsqlite3.lo:\t$(SQLITE3C)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(SQLITE3C)\n\n# <<mark>>\n# Rules to build the LEMON compiler generator\n#\nlempar.c:\t$(TOP)\\tool\\lempar.c\n\tcopy /Y $(TOP)\\tool\\lempar.c .\n\tcopy /B lempar.c +,,\n\nlemon.exe:\t$(TOP)\\tool\\lemon.c lempar.c\n\t$(BCC) $(NO_WARN) -Daccess=_access \\\n\t\t-Fe$@ $(TOP)\\tool\\lemon.c /link $(LDFLAGS) $(NLTLINKOPTS) $(NLTLIBPATHS)\n\n# <<mark>>\n# Rules to build the source-id generator tool\n#\nmksourceid.exe:\t$(TOP)\\tool\\mksourceid.c\n\t$(BCC) $(NO_WARN) -Fe$@ $(TOP)\\tool\\mksourceid.c /link $(LDFLAGS) $(NLTLINKOPTS) $(NLTLIBPATHS)\n\n# Rules to build individual *.lo files from generated *.c files. This\n# applies to:\n#\n#     parse.lo\n#     opcodes.lo\n#\nparse.lo:\tparse.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c parse.c\n\nopcodes.lo:\topcodes.c\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c opcodes.c\n# <</mark>>\n\n# Rule to build the Win32 resources object file.\n#\n!IF $(USE_RC)!=0\n# <<block1>>\n$(LIBRESOBJS):\t$(TOP)\\src\\sqlite3.rc $(SQLITE3H) $(TOP)\\VERSION $(JIM_TCLSH)\n\techo #ifndef SQLITE_RESOURCE_VERSION > sqlite3rc.h\n\tfor /F %%V in ('type \"$(TOP)\\VERSION\"') do ( \\\n\t\techo #define SQLITE_RESOURCE_VERSION %%V \\\n\t\t\t| $(JIM_TCLSH) $(TOP)\\tool\\replace.tcl exact . ^, >> sqlite3rc.h \\\n\t)\n\techo #endif >> sqlite3rc.h\n\t$(LTRCOMPILE) -fo $(LIBRESOBJS) $(TOP)\\src\\sqlite3.rc\n# <</block1>>\n!ENDIF\n\n# <<mark>>\n# Rules to build individual *.lo files from files in the src directory.\n#\nalter.lo:\t$(TOP)\\src\\alter.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\alter.c\n\nanalyze.lo:\t$(TOP)\\src\\analyze.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\analyze.c\n\nattach.lo:\t$(TOP)\\src\\attach.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\attach.c\n\nauth.lo:\t$(TOP)\\src\\auth.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\auth.c\n\nbackup.lo:\t$(TOP)\\src\\backup.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\backup.c\n\nbitvec.lo:\t$(TOP)\\src\\bitvec.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\bitvec.c\n\nbtmutex.lo:\t$(TOP)\\src\\btmutex.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\btmutex.c\n\nbtree.lo:\t$(TOP)\\src\\btree.c $(HDR) $(TOP)\\src\\pager.h\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\btree.c\n\nbuild.lo:\t$(TOP)\\src\\build.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\build.c\n\ncallback.lo:\t$(TOP)\\src\\callback.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\callback.c\n\ncomplete.lo:\t$(TOP)\\src\\complete.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\complete.c\n\nctime.lo:\t$(TOP)\\src\\ctime.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\ctime.c\n\ndate.lo:\t$(TOP)\\src\\date.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\date.c\n\ndbpage.lo:\t$(TOP)\\src\\dbpage.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\dbpage.c\n\ndbstat.lo:\t$(TOP)\\src\\dbstat.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\dbstat.c\n\ndelete.lo:\t$(TOP)\\src\\delete.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\delete.c\n\nexpr.lo:\t$(TOP)\\src\\expr.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\expr.c\n\nfault.lo:\t$(TOP)\\src\\fault.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\fault.c\n\nfkey.lo:\t$(TOP)\\src\\fkey.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\fkey.c\n\nfunc.lo:\t$(TOP)\\src\\func.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\func.c\n\nglobal.lo:\t$(TOP)\\src\\global.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\global.c\n\nhash.lo:\t$(TOP)\\src\\hash.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\hash.c\n\ninsert.lo:\t$(TOP)\\src\\insert.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\insert.c\n\njson.lo:\t$(TOP)\\src\\json.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\json.c\n\nlegacy.lo:\t$(TOP)\\src\\legacy.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\legacy.c\n\nloadext.lo:\t$(TOP)\\src\\loadext.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\loadext.c\n\nmain.lo:\t$(TOP)\\src\\main.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\main.c\n\nmalloc.lo:\t$(TOP)\\src\\malloc.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\malloc.c\n\nmem0.lo:\t$(TOP)\\src\\mem0.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mem0.c\n\nmem1.lo:\t$(TOP)\\src\\mem1.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mem1.c\n\nmem2.lo:\t$(TOP)\\src\\mem2.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mem2.c\n\nmem3.lo:\t$(TOP)\\src\\mem3.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mem3.c\n\nmem5.lo:\t$(TOP)\\src\\mem5.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mem5.c\n\nmemdb.lo:\t$(TOP)\\src\\memdb.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\memdb.c\n\nmemjournal.lo:\t$(TOP)\\src\\memjournal.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\memjournal.c\n\nmutex.lo:\t$(TOP)\\src\\mutex.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mutex.c\n\nmutex_noop.lo:\t$(TOP)\\src\\mutex_noop.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mutex_noop.c\n\nmutex_unix.lo:\t$(TOP)\\src\\mutex_unix.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mutex_unix.c\n\nmutex_w32.lo:\t$(TOP)\\src\\mutex_w32.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\mutex_w32.c\n\nnotify.lo:\t$(TOP)\\src\\notify.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\notify.c\n\npager.lo:\t$(TOP)\\src\\pager.c $(HDR) $(TOP)\\src\\pager.h\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\pager.c\n\npcache.lo:\t$(TOP)\\src\\pcache.c $(HDR) $(TOP)\\src\\pcache.h\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\pcache.c\n\npcache1.lo:\t$(TOP)\\src\\pcache1.c $(HDR) $(TOP)\\src\\pcache.h\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\pcache1.c\n\nos.lo:\t$(TOP)\\src\\os.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\os.c\n\nos_kv.lo:\t$(TOP)\\src\\os_kv.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\os_kv.c\n\nos_unix.lo:\t$(TOP)\\src\\os_unix.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\os_unix.c\n\nos_win.lo:\t$(TOP)\\src\\os_win.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\os_win.c\n\npragma.lo:\t$(TOP)\\src\\pragma.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\pragma.c\n\nprepare.lo:\t$(TOP)\\src\\prepare.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\prepare.c\n\nprintf.lo:\t$(TOP)\\src\\printf.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\printf.c\n\nrandom.lo:\t$(TOP)\\src\\random.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\random.c\n\nresolve.lo:\t$(TOP)\\src\\resolve.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\resolve.c\n\nrowset.lo:\t$(TOP)\\src\\rowset.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\rowset.c\n\nselect.lo:\t$(TOP)\\src\\select.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\select.c\n\nstatus.lo:\t$(TOP)\\src\\status.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\status.c\n\ntable.lo:\t$(TOP)\\src\\table.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\table.c\n\nthreads.lo:\t$(TOP)\\src\\threads.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\threads.c\n\ntokenize.lo:\t$(TOP)\\src\\tokenize.c keywordhash.h $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\tokenize.c\n\ntreeview.lo:\t$(TOP)\\src\\treeview.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\treeview.c\n\ntrigger.lo:\t$(TOP)\\src\\trigger.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\trigger.c\n\nupdate.lo:\t$(TOP)\\src\\update.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\update.c\n\nupsert.lo:\t$(TOP)\\src\\upsert.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\upsert.c\n\nutf.lo:\t$(TOP)\\src\\utf.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\utf.c\n\nutil.lo:\t$(TOP)\\src\\util.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\util.c\n\nvacuum.lo:\t$(TOP)\\src\\vacuum.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vacuum.c\n\nvdbe.lo:\t$(TOP)\\src\\vdbe.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbe.c\n\nvdbeapi.lo:\t$(TOP)\\src\\vdbeapi.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbeapi.c\n\nvdbeaux.lo:\t$(TOP)\\src\\vdbeaux.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbeaux.c\n\nvdbeblob.lo:\t$(TOP)\\src\\vdbeblob.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbeblob.c\n\nvdbemem.lo:\t$(TOP)\\src\\vdbemem.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbemem.c\n\nvdbesort.lo:\t$(TOP)\\src\\vdbesort.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbesort.c\n\nvdbetrace.lo:\t$(TOP)\\src\\vdbetrace.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbetrace.c\n\nvdbevtab.lo:\t$(TOP)\\src\\vdbevtab.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vdbevtab.c\n\nvtab.lo:\t$(TOP)\\src\\vtab.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\vtab.c\n\nwal.lo:\t$(TOP)\\src\\wal.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\wal.c\n\nwalker.lo:\t$(TOP)\\src\\walker.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\walker.c\n\nwhere.lo:\t$(TOP)\\src\\where.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\where.c\n\nwherecode.lo:\t$(TOP)\\src\\wherecode.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\wherecode.c\n\nwhereexpr.lo:\t$(TOP)\\src\\whereexpr.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\whereexpr.c\n\nwindow.lo:\t$(TOP)\\src\\window.c $(HDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) -c $(TOP)\\src\\window.c\n\ntclsqlite.lo:\t$(TOP)\\src\\tclsqlite.c $(HDR) $(SQLITE_TCL_DEP)\n\t$(LTCOMPILE) $(NO_WARN) -DUSE_TCL_STUBS=1 -DBUILD_sqlite -I$(TCLINCDIR) -c $(TOP)\\src\\tclsqlite.c\n\ntclsqlite-shell.lo:\t$(TOP)\\src\\tclsqlite.c $(HDR) $(SQLITE_TCL_DEP)\n\t$(LTCOMPILE) $(NO_WARN) -DTCLSH -DBUILD_sqlite -I$(TCLINCDIR) -c $(TOP)\\src\\tclsqlite.c\n\ntclsqlite3.exe:\ttclsqlite-shell.lo $(SQLITE3C) $(SQLITE3H) $(LIBRESOBJS)\n\t$(LTLINK) $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) /OUT:$@ tclsqlite-shell.lo $(LIBRESOBJS) $(TCLLIBS) $(LTLIBS) $(TLIBS)\n\n# Rules to build opcodes.c and opcodes.h\n#\nopcodes.c:\topcodes.h $(TOP)\\tool\\mkopcodec.tcl $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(TOP)\\tool\\mkopcodec.tcl opcodes.h > opcodes.c\n\nopcodes.h:\tparse.h $(TOP)\\src\\vdbe.c $(TOP)\\tool\\mkopcodeh.tcl $(JIM_TCLSH)\n\ttype parse.h $(TOP)\\src\\vdbe.c | $(JIM_TCLSH) $(TOP)\\tool\\mkopcodeh.tcl > opcodes.h\n\n# Rules to build parse.c and parse.h - the outputs of lemon.\n#\nparse.h:\tparse.c\n\nparse.c:\t$(TOP)\\src\\parse.y lemon.exe\n\tdel /Q parse.y parse.h parse.h.temp 2>NUL\n\tcopy /Y $(TOP)\\src\\parse.y .\n\tcopy /B parse.y +,,\n\t.\\lemon.exe $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) -S parse.y\n\n$(SQLITE3H):\t$(TOP)\\src\\sqlite.h.in $(TOP)\\manifest mksourceid.exe $(TOP)\\VERSION $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(TOP)\\tool\\mksqlite3h.tcl \"$(TOP:\\=/)\" > $(SQLITE3H) $(MKSQLITE3H_ARGS)\n\nsqlite3ext.h:\t.target_source\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\n\ttype tsrc\\sqlite3ext.h | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"\\(\\*\\)\" \"(SQLITE_CALLBACK *)\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"\\(\\*\" \"(SQLITE_APICALL *\" > sqlite3ext.h\n\tcopy /Y sqlite3ext.h tsrc\\sqlite3ext.h\n!ELSE\n\tcopy /Y tsrc\\sqlite3ext.h sqlite3ext.h\n\tcopy /B sqlite3ext.h +,,\n!ENDIF\n\nsqlite3session.h:\t$(TOP)\\ext\\session\\sqlite3session.h\n\tcopy /Y $(TOP)\\ext\\session\\sqlite3session.h .\n\tcopy /B sqlite3session.h +,,\n\nmkkeywordhash.exe:\t$(TOP)\\tool\\mkkeywordhash.c\n\t$(BCC) $(NO_WARN) -Fe$@ $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) \\\n\t\t$(TOP)\\tool\\mkkeywordhash.c /link $(LDFLAGS) $(NLTLINKOPTS) $(NLTLIBPATHS)\n\nkeywordhash.h:\t$(TOP)\\tool\\mkkeywordhash.c mkkeywordhash.exe\n\t.\\mkkeywordhash.exe > keywordhash.h\n\n# Source and header files that shell.c depends on\nSHELL_DEP = \\\n    $(TOP)\\src\\shell.c.in \\\n    $(TOP)\\ext\\expert\\sqlite3expert.c \\\n    $(TOP)\\ext\\expert\\sqlite3expert.h \\\n    $(TOP)\\ext\\intck\\sqlite3intck.c \\\n    $(TOP)\\ext\\intck\\sqlite3intck.h \\\n    $(TOP)\\ext\\misc\\appendvfs.c \\\n    $(TOP)\\ext\\misc\\base64.c \\\n    $(TOP)\\ext\\misc\\base85.c \\\n    $(TOP)\\ext\\misc\\completion.c \\\n    $(TOP)\\ext\\misc\\decimal.c \\\n    $(TOP)\\ext\\misc\\fileio.c \\\n    $(TOP)\\ext\\misc\\ieee754.c \\\n    $(TOP)\\ext\\misc\\memtrace.c \\\n    $(TOP)\\ext\\misc\\pcachetrace.c \\\n    $(TOP)\\ext\\misc\\percentile.c \\\n    $(TOP)\\ext\\misc\\regexp.c \\\n    $(TOP)\\ext\\misc\\series.c \\\n    $(TOP)\\ext\\misc\\sha1.c \\\n    $(TOP)\\ext\\misc\\shathree.c \\\n    $(TOP)\\ext\\misc\\sqlar.c \\\n    $(TOP)\\ext\\misc\\sqlite3_stdio.c \\\n    $(TOP)\\ext\\misc\\sqlite3_stdio.h \\\n    $(TOP)\\ext\\misc\\uint.c \\\n    $(TOP)\\ext\\misc\\vfstrace.c \\\n    $(TOP)\\ext\\misc\\zipfile.c \\\n    $(TOP)\\ext\\recover\\dbdata.c \\\n    $(TOP)\\ext\\recover\\sqlite3recover.c \\\n    $(TOP)\\ext\\recover\\sqlite3recover.h \\\n    $(TOP)\\src\\test_windirent.c \\\n    $(TOP)\\src\\test_windirent.h\n\n# If use of zlib is enabled, add the \"zipfile.c\" source file.\n#\n!IF $(USE_ZLIB)!=0\nSHELL_DEP = $(SHELL_DEP) $(TOP)\\ext\\misc\\sqlar.c\nSHELL_DEP = $(SHELL_DEP) $(TOP)\\ext\\misc\\zipfile.c\n!ENDIF\n\nshell.c:\t$(SHELL_DEP) $(TOP)\\tool\\mkshellc.tcl $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(TOP)\\tool\\mkshellc.tcl > shell.c\n\nzlib:\n\tpushd $(ZLIBDIR) && $(MAKE) /f win32\\Makefile.msc clean $(ZLIBLIB) && popd\n\n# Rules to build the extension objects.\n#\nicu.lo:\t$(TOP)\\ext\\icu\\icu.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\icu\\icu.c\n\nfts3.lo:\t$(TOP)\\ext\\fts3\\fts3.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3.c\n\nfts3_aux.lo:\t$(TOP)\\ext\\fts3\\fts3_aux.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_aux.c\n\nfts3_expr.lo:\t$(TOP)\\ext\\fts3\\fts3_expr.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_expr.c\n\nfts3_hash.lo:\t$(TOP)\\ext\\fts3\\fts3_hash.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_hash.c\n\nfts3_icu.lo:\t$(TOP)\\ext\\fts3\\fts3_icu.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_icu.c\n\nfts3_snippet.lo:\t$(TOP)\\ext\\fts3\\fts3_snippet.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_snippet.c\n\nfts3_porter.lo:\t$(TOP)\\ext\\fts3\\fts3_porter.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_porter.c\n\nfts3_tokenizer.lo:\t$(TOP)\\ext\\fts3\\fts3_tokenizer.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_tokenizer.c\n\nfts3_tokenizer1.lo:\t$(TOP)\\ext\\fts3\\fts3_tokenizer1.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_tokenizer1.c\n\nfts3_tokenize_vtab.lo:\t$(TOP)\\ext\\fts3\\fts3_tokenize_vtab.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_tokenize_vtab.c\n\nfts3_unicode.lo:\t$(TOP)\\ext\\fts3\\fts3_unicode.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_unicode.c\n\nfts3_unicode2.lo:\t$(TOP)\\ext\\fts3\\fts3_unicode2.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_unicode2.c\n\nfts3_write.lo:\t$(TOP)\\ext\\fts3\\fts3_write.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\fts3\\fts3_write.c\n\nstmt.lo:\t$(TOP)\\ext\\misc\\stmt.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\misc\\stmt.c\n\nrtree.lo:\t$(TOP)\\ext\\rtree\\rtree.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\rtree\\rtree.c\n\nsqlite3session.lo:\t$(TOP)\\ext\\session\\sqlite3session.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c $(TOP)\\ext\\session\\sqlite3session.c\n\n# FTS5 things\n#\nFTS5_SRC = \\\n   $(TOP)\\ext\\fts5\\fts5.h \\\n   $(TOP)\\ext\\fts5\\fts5Int.h \\\n   $(TOP)\\ext\\fts5\\fts5_aux.c \\\n   $(TOP)\\ext\\fts5\\fts5_buffer.c \\\n   $(TOP)\\ext\\fts5\\fts5_main.c \\\n   $(TOP)\\ext\\fts5\\fts5_config.c \\\n   $(TOP)\\ext\\fts5\\fts5_expr.c \\\n   $(TOP)\\ext\\fts5\\fts5_hash.c \\\n   $(TOP)\\ext\\fts5\\fts5_index.c \\\n   fts5parse.c fts5parse.h \\\n   $(TOP)\\ext\\fts5\\fts5_storage.c \\\n   $(TOP)\\ext\\fts5\\fts5_tokenize.c \\\n   $(TOP)\\ext\\fts5\\fts5_unicode2.c \\\n   $(TOP)\\ext\\fts5\\fts5_varint.c \\\n   $(TOP)\\ext\\fts5\\fts5_vocab.c\n\nLSM1_SRC = \\\n   $(TOP)\\ext\\lsm1\\lsm.h \\\n   $(TOP)\\ext\\lsm1\\lsmInt.h \\\n   $(TOP)\\ext\\lsm1\\lsm_ckpt.c \\\n   $(TOP)\\ext\\lsm1\\lsm_file.c \\\n   $(TOP)\\ext\\lsm1\\lsm_log.c \\\n   $(TOP)\\ext\\lsm1\\lsm_main.c \\\n   $(TOP)\\ext\\lsm1\\lsm_mem.c \\\n   $(TOP)\\ext\\lsm1\\lsm_mutex.c \\\n   $(TOP)\\ext\\lsm1\\lsm_shared.c \\\n   $(TOP)\\ext\\lsm1\\lsm_sorted.c \\\n   $(TOP)\\ext\\lsm1\\lsm_str.c \\\n   $(TOP)\\ext\\lsm1\\lsm_tree.c \\\n   $(TOP)\\ext\\lsm1\\lsm_unix.c \\\n   $(TOP)\\ext\\lsm1\\lsm_varint.c \\\n   $(TOP)\\ext\\lsm1\\lsm_vtab.c \\\n   $(TOP)\\ext\\lsm1\\lsm_win32.c\n\nfts5parse.c:\t$(TOP)\\ext\\fts5\\fts5parse.y lemon.exe\n\tcopy /Y $(TOP)\\ext\\fts5\\fts5parse.y .\n\tcopy /B fts5parse.y +,,\n\tdel /Q fts5parse.h 2>NUL\n\t.\\lemon.exe $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) -S fts5parse.y\n\nfts5parse.h:\tfts5parse.c\n\nfts5.c:\t$(FTS5_SRC) $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(TOP)\\ext\\fts5\\tool\\mkfts5c.tcl\n\tcopy /Y $(TOP)\\ext\\fts5\\fts5.h .\n\tcopy /B fts5.h +,,\n\nlsm1.c:\t$(LSM1_SRC) $(JIM_TCLSH)\n\t$(JIM_TCLSH) $(TOP)\\ext\\lsm1\\tool\\mklsm1c.tcl\n\tcopy /Y $(TOP)\\ext\\lsm1\\lsm.h .\n\tcopy /B lsm.h +,,\n\nfts5.lo:\tfts5.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(CORE_COMPILE_OPTS) $(NO_WARN) -DSQLITE_CORE -c fts5.c\n\nfts5_ext.lo:\tfts5.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) $(NO_WARN) -c fts5.c\n\nfts5.dll:\tfts5_ext.lo\n\t$(LD) $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) /DLL /OUT:$@ fts5_ext.lo\n\nsqlite3rbu.lo:\t$(TOP)\\ext\\rbu\\sqlite3rbu.c $(HDR) $(EXTHDR)\n\t$(LTCOMPILE) -DSQLITE_CORE -c $(TOP)\\ext\\rbu\\sqlite3rbu.c\n\n# Rules to build the 'testfixture' application.\n#\n# If using the amalgamation, use sqlite3.c directly to build the test\n# fixture.  Otherwise link against libsqlite3.lib.  (This distinction is\n# necessary because the test fixture requires non-API symbols which are\n# hidden when the library is built via the amalgamation).\n#\nTESTFIXTURE_FLAGS = -DTCLSH_INIT_PROC=sqlite3TestInit -DSQLITE_TEST=1 -DSQLITE_CRASH_TEST=1\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_SERVER=1 -DSQLITE_PRIVATE=\"\"\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_CORE $(NO_WARN)\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_SERIES_CONSTRAINT_VERIFY=1\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_DEFAULT_PAGE_SIZE=1024\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_ENABLE_STMTVTAB=1\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_ENABLE_DBPAGE_VTAB=1\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_ENABLE_BYTECODE_VTAB=1\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_CKSUMVFS_STATIC=1\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) $(TEST_CCONV_OPTS)\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_STATIC_RANDOMJSON\nTESTFIXTURE_FLAGS = $(TESTFIXTURE_FLAGS) -DSQLITE_STRICT_SUBTYPE=1\n\nTESTFIXTURE_SRC0 = $(TESTEXT) $(TESTSRC2)\nTESTFIXTURE_SRC1 = $(TESTEXT) $(SQLITE3C)\n!IF $(USE_AMALGAMATION)==0\nTESTFIXTURE_SRC = $(TESTSRC) $(TOP)\\src\\tclsqlite.c $(TESTFIXTURE_SRC0)\n!ELSE\nTESTFIXTURE_SRC = $(TESTSRC) $(TOP)\\src\\tclsqlite.c $(TESTFIXTURE_SRC1)\n!ENDIF\n\n!IF $(USE_STDCALL)!=0 || $(FOR_WIN10)!=0\nsqlite_tclDecls.h:\n\techo #ifndef SQLITE_TCLAPI > $(SQLITETCLDECLSH)\n\techo #  define SQLITE_TCLAPI >> $(SQLITETCLDECLSH)\n\techo #endif >> $(SQLITETCLDECLSH)\n\ttype \"$(TCLINCDIR)\\tclDecls.h\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"^(EXTERN(?: CONST\\d+?)?\\s+?[^\\(]*?\\s+?)Tcl_\" \"\\1 SQLITE_TCLAPI Tcl_\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"^(EXTERN\\s+?(?:void|VOID)\\s+?)TclFreeObj\" \"\\1 SQLITE_TCLAPI TclFreeObj\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"\\(\\*tcl_\" \"(SQLITE_TCLAPI *tcl_\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"\\(\\*tclFreeObj\" \"(SQLITE_TCLAPI *tclFreeObj\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"\\(\\*\" \"(SQLITE_TCLAPI *\" >> $(SQLITETCLDECLSH)\n\nsqlite_tcl.h:\n\ttype \"$(TCLINCDIR)\\tcl.h\" | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact tclDecls.h sqlite_tclDecls.h \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl regsub \"typedef (.*?)\\(Tcl_\" \"typedef \\1 (SQLITE_TCLAPI Tcl_\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact \"void (*freeProc)\" \"void (SQLITE_TCLAPI *freeProc)\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact \"Tcl_HashEntry *(*findProc)\" \"Tcl_HashEntry *(SQLITE_TCLAPI *findProc)\" \\\n\t\t| $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact \"Tcl_HashEntry *(*createProc)\" \"Tcl_HashEntry *(SQLITE_TCLAPI *createProc)\" >> $(SQLITETCLH)\n!ENDIF\n\ntestfixture.exe:\t$(TESTFIXTURE_SRC) $(TESTFIXTURE_DEP) $(SQLITE3H) $(LIBRESOBJS) $(HDR) $(SQLITE_TCL_DEP)\n\t$(LTLINK) -DSQLITE_NO_SYNC=1 $(TESTFIXTURE_FLAGS) \\\n\t\t-DBUILD_sqlite -I$(TCLINCDIR) \\\n\t\t$(TESTFIXTURE_SRC) \\\n\t\t/link $(LDFLAGS) $(LTLINKOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) $(LIBRESOBJS) $(TCLLIBS) $(LTLIBS) $(TLIBS)\n\nextensiontest:\ttestfixture.exe testloadext.dll\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\loadext.test $(TESTOPTS)\n\ntool-zip:\ttestfixture.exe sqlite3.exe sqldiff.exe sqlite3_analyzer.exe sqlite3_rsync.exe $(TOP)\\tool\\mktoolzip.tcl\n\t.\\testfixture.exe $(TOP)\\tool\\mktoolzip.tcl\n\ncoretestprogs:\ttestfixture.exe sqlite3.exe\n\ntestprogs:\t$(TESTPROGS) srcck1.exe fuzzcheck.exe sessionfuzz.exe\n\nfulltest:\talltest fuzztest\n\nalltest:\t$(TESTPROGS)\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\all.test $(TESTOPTS)\n\nsoaktest:\t$(TESTPROGS)\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\all.test -soak=1 $(TESTOPTS)\n\nfulltestonly:\t$(TESTPROGS) fuzztest\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\full.test\n\nqueryplantest:\ttestfixture.exe shell\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\permutations.test queryplanner $(TESTOPTS)\n\nfuzztest:\tfuzzcheck.exe\n\t.\\fuzzcheck.exe $(FUZZDATA)\n\n# Legacy testing target for third-party integrators.  The SQLite\n# developers seldom use this target themselves.  Instead\n# they use \"nmake /f Makefile.msc devtest\" which runs tests on\n# a standard set of options\n#\ntest:\t$(TESTPROGS) sourcetest fuzztest tcltest\n\n# Minimal testing that runs in less than 3 minutes (on a fast machine)\n#\nquicktest:\ttestfixture.exe sourcetest\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\extraquick.test $(TESTOPTS)\n\n# This is the common case.  Run many tests that do not take too long,\n# including fuzzcheck, sqlite3_analyzer, and sqldiff tests.\n#\n\n# The veryquick.test TCL tests.\n#\ntcltest: testfixture.exe\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\veryquick.test $(TESTOPTS)\n\n# Runs all the same tests cases as the \"tcltest\" target but uses\n# the testrunner.tcl script to run them in multiple cores\n# concurrently.\ntestrunner:\ttestfixture.exe\n\t.\\testfixture.exe $(TOP)\\test\\testrunner.tcl\n\n# This is the testing target preferred by the core SQLite developers.\n# It runs tests under a standard configuration.  The devs run \n# \"nmake /f Makefile.msc devtest\" prior to each check-in, at a minimum.\n# Probably other tests too, but at least this one.\n#\ndevtest:\tsrctree-check sourcetest\n\t$(TCLSH_CMD) $(TOP)\\test\\testrunner.tcl mdevtest\n\nmdevtest:\n\t$(TCLSH_CMD) $(TOP)\\test\\testrunner.tcl mdevtest\n\n# Validate that various generated files in the source tree\n# are up-to-date.\n#\nsrctree-check:\t$(TOP)\\tool\\srctree-check.tcl\n\t$(TCLSH_CMD) $(TOP)\\tool\\srctree-check.tcl\n\n# Testing for a release\n#\nreleasetest:\n\t$(TCLSH_CMD) $(TOP)\\test\\testrunner.tcl release\n\n\nsmoketest:\t$(TESTPROGS)\n\t@set PATH=$(LIBTCLPATH);$(PATH)\n\t.\\testfixture.exe $(TOP)\\test\\main.test $(TESTOPTS)\n\nshelltest: $(TESTPROGS)\n\t.\\testfixture.exe $(TOP)\\test\\permutations.test shell\n\nsqlite3_analyzer.c:\t$(SQLITE3C) $(SQLITE3H) $(TOP)\\src\\tclsqlite.c $(TOP)\\tool\\spaceanal.tcl $(TOP)\\tool\\mkccode.tcl $(TOP)\\tool\\sqlite3_analyzer.c.in $(TOP)\\ext\\misc\\sqlite3_stdio.h $(TOP)\\ext\\misc\\sqlite3_stdio.c $(SQLITE_TCL_DEP)\n\t$(TCLSH_CMD) $(TOP)\\tool\\mkccode.tcl -DINCLUDE_SQLITE3_C $(TOP)\\tool\\sqlite3_analyzer.c.in > $@\n\nsqlite3_analyzer.exe:\tsqlite3_analyzer.c $(LIBRESOBJS)\n\t$(LTLINK) $(NO_WARN) -DBUILD_sqlite -I$(TCLINCDIR) sqlite3_analyzer.c \\\n\t\t/link $(LDFLAGS) $(LTLINKOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) $(LIBRESOBJS) $(TCLLIBS) $(LTLIBS) $(TLIBS)\n\nsqltclsh.c: sqlite3.c $(TOP)\\src\\tclsqlite.c $(TOP)\\tool\\sqltclsh.tcl $(TOP)\\ext\\misc\\appendvfs.c $(TOP)\\tool\\mkccode.tcl $(TOP)\\tool\\sqltclsh.c.in\n\t$(TCLSH_CMD) $(TOP)\\tool\\mkccode.tcl $(TOP)\\tool\\sqltclsh.c.in >sqltclsh.c\n\nsqltclsh.exe: sqltclsh.c  $(SHELL_CORE_DEP) $(LIBRESOBJS)\n\t$(LTLINK) $(NO_WARN) -DBUILD_sqlite -I$(TCLINCDIR) sqltclsh.c \\\n\t\t/link $(LDFLAGS) $(LTLINKOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) $(LIBRESOBJS) $(TCLLIBS) $(LTLIBS) $(TLIBS)\n\nsqlite3_expert.exe: $(SQLITE3C) $(TOP)\\ext\\expert\\sqlite3expert.h $(TOP)\\ext\\expert\\sqlite3expert.c $(TOP)\\ext\\expert\\expert.c\n\t$(LTLINK) $(NO_WARN)\t$(TOP)\\ext\\expert\\sqlite3expert.c $(TOP)\\ext\\expert\\expert.c $(SQLITE3C) $(TLIBS)\n\nCHECKER_DEPS =\\\n  $(TOP)\\tool\\mkccode.tcl \\\n  sqlite3.c \\\n  $(TOP)\\src\\tclsqlite.c \\\n  $(TOP)\\ext\\repair\\sqlite3_checker.tcl \\\n  $(TOP)\\ext\\repair\\checkindex.c \\\n  $(TOP)\\ext\\repair\\checkfreelist.c \\\n  $(TOP)\\ext\\misc\\btreeinfo.c \\\n  $(TOP)\\ext\\repair\\sqlite3_checker.c.in\n\nsqlite3_checker.c:\t$(CHECKER_DEPS)\n\t$(TCLSH_CMD) $(TOP)\\tool\\mkccode.tcl $(TOP)\\ext\\repair\\sqlite3_checker.c.in > $@\n\nsqlite3_checker.exe:\tsqlite3_checker.c $(LIBRESOBJS)\n\t$(LTLINK) $(NO_WARN) -DBUILD_sqlite -I$(TCLINCDIR) sqlite3_checker.c \\\n\t\t/link $(LDFLAGS) $(LTLINKOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) $(LIBRESOBJS) $(TCLLIBS) $(LTLIBS) $(TLIBS)\n\ndbdump.exe:\t$(TOP)\\ext\\misc\\dbdump.c $(SQLITE3C) $(SQLITE3H) $(LIBRESOBJS)\n\t$(LTLINK) $(NO_WARN) -DDBDUMP_STANDALONE $(TOP)\\ext\\misc\\dbdump.c $(SQLITE3C) \\\n\t\t/link $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) $(LIBRESOBJS) $(LTLIBS)\n\ntestloadext.lo:\t$(TOP)\\src\\test_loadext.c $(SQLITE3H)\n\t$(LTCOMPILE) $(NO_WARN) -c $(TOP)\\src\\test_loadext.c\n\ntestloadext.dll:\ttestloadext.lo\n\t$(LD) $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) /DLL /OUT:$@ testloadext.lo\n\ndbtotxt.exe:\t$(TOP)\\tool\\dbtotxt.c\n\t$(LTLINK) $(NO_WARN)\t$(TOP)\\tool\\dbtotxt.c /link $(LDFLAGS) $(LTLINKOPTS)\n\nshowdb.exe:\t$(TOP)\\tool\\showdb.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\tool\\showdb.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nshowstat4.exe:\t$(TOP)\\tool\\showstat4.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\tool\\showstat4.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nshowjournal.exe:\t$(TOP)\\tool\\showjournal.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\tool\\showjournal.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nshowwal.exe:\t$(TOP)\\tool\\showwal.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\tool\\showwal.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nshowshm.exe:\t$(TOP)\\tool\\showshm.c\n\t$(LTLINK) $(NO_WARN)\t$(TOP)\\tool\\showshm.c /link $(LDFLAGS) $(LTLINKOPTS)\n\nindex_usage.exe: $(TOP)\\tool\\index_usage.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\tool\\index_usage.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nchangeset.exe:\t$(TOP)\\ext\\session\\changeset.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t-DSQLITE_ENABLE_SESSION=1 -DSQLITE_ENABLE_PREUPDATE_HOOK=1 \\\n\t\t$(TOP)\\ext\\session\\changeset.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nchangesetfuzz.exe:\t$(TOP)\\ext\\session\\changesetfuzz.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t-DSQLITE_ENABLE_SESSION=1 -DSQLITE_ENABLE_PREUPDATE_HOOK=1 \\\n\t\t$(TOP)\\ext\\session\\changesetfuzz.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nfts3view.exe:\t$(TOP)\\ext\\fts3\\tool\\fts3view.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\ext\\fts3\\tool\\fts3view.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nrollback-test.exe:\t$(TOP)\\tool\\rollback-test.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\tool\\rollback-test.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\natrc.exe:\t$(TOP)\\test\\atrc.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\test\\atrc.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nLogEst.exe:\t$(TOP)\\tool\\logest.c $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(TOP)\\tool\\LogEst.c /link $(LDFLAGS) $(LTLINKOPTS)\n\nwordcount.exe:\t$(TOP)\\test\\wordcount.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\test\\wordcount.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nspeedtest1.exe:\t$(TOP)\\test\\speedtest1.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(ST_COMPILE_OPTS) -DSQLITE_OMIT_LOAD_EXTENSION \\\n\t\t$(TOP)\\test\\speedtest1.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nkvtest.exe:\t$(TOP)\\test\\kvtest.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(KV_COMPILE_OPTS) \\\n\t\t$(TOP)\\test\\kvtest.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nrbu.exe:\t$(TOP)\\ext\\rbu\\rbu.c $(TOP)\\ext\\rbu\\sqlite3rbu.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) -DSQLITE_ENABLE_RBU \\\n\t\t$(TOP)\\ext\\rbu\\rbu.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\nTHREADTEST3_SRC = \\\n  $(TOP)\\test\\threadtest3.c \\\n  $(TOP)\\test\\tt3_checkpoint.c \\\n  $(TOP)\\test\\tt3_index.c \\\n  $(TOP)\\test\\tt3_vacuum.c \\\n  $(TOP)\\test\\tt3_stress.c \\\n  $(TOP)\\test\\tt3_lookaside1.c\n\nthreadtest3.exe: $(THREADTEST3_SRC) $(TOP)\\src\\test_multiplex.c $(SQLITE3C) $(SQLITE3H)\n\t$(LTLINK) $(NO_WARN) $(TOP)\\test\\threadtest3.c $(TOP)\\src\\test_multiplex.c $(SQLITE3C) /link $(LDFLAGS) $(LTLINKOPTS)\n\n# Display key variables that control which version of TCL is to be used.\n#\ntcl-env:\n\t@echo TCLDIR = $(TCLDIR)\n\t@echo TCLVERSION = $(TCLVERSION)\n\t@echo TCLSUFFIX = $(TCLSUFFIX)\n\t@echo LIBTCL = $(LIBTCL)\n\t@echo LIBTCLSTUB = $(LIBTCLSTUB)\n\t@echo TCLSH_CMD = $(TCLSH_CMD)\n\t@echo JIM_TCLSH = $(JIM_TCLSH)\n\t@echo VISUALSTUDIOVERSION = $(VISUALSTUDIOVERSION)\n\nLSMDIR=$(TOP)\\ext\\lsm1\n!INCLUDE $(LSMDIR)\\Makefile.msc\n\nmoreclean:\tclean\n\tdel /Q $(SQLITE3C) $(SQLITE3H) 2>NUL\n# <</mark>>\n\nclean:\n\tdel /Q *.exp *.lo *.ilk *.lib *.obj *.ncb *.pdb *.sdf *.suo 2>NUL\n\tdel /Q *.bsc *.def *.cod *.da *.bb *.bbg *.vc gmon.out 2>NUL\n\tdel /Q $(SQLITE3EXE) $(SQLITE3DLL) Replace.exe 2>NUL\n# <<mark>>\n\tdel /Q $(SQLITE3TCLDLL) pkgIndex.tcl 2>NUL\n\tdel /Q opcodes.c opcodes.h 2>NUL\n\tdel /Q lemon.* lempar.c parse.* 2>NUL\n\tdel /Q mksourceid.* mkkeywordhash.* keywordhash.h 2>NUL\n\tdel /Q notasharedlib.* 2>NUL\n\t-rmdir /Q/S .deps 2>NUL\n\t-rmdir /Q/S .libs 2>NUL\n\t-rmdir /Q/S tsrc 2>NUL\n\tdel /Q .target_source 2>NUL\n\tdel /Q tclsqlite3.exe $(SQLITETCLH) $(SQLITETCLDECLSH) 2>NUL\n\tdel /Q lsm.dll lsmtest.exe 2>NUL\n\tdel /Q atrc.exe changesetfuzz.exe dbtotxt.exe index_usage.exe 2>NUL\n\tdel /Q testloadext.dll 2>NUL\n\tdel /Q testfixture.exe test.db 2>NUL\n\tdel /Q LogEst.exe fts3view.exe rollback-test.exe showdb.exe dbdump.exe 2>NUL\n\tdel /Q changeset.exe 2>NUL\n\tdel /Q showjournal.exe showstat4.exe showwal.exe speedtest1.exe 2>NUL\n\tdel /Q mptester.exe wordcount.exe rbu.exe srcck1.exe 2>NUL\n\tdel /Q sqlite3.c sqlite3-*.c sqlite3.h 2>NUL\n\tdel /Q sqlite3rc.h 2>NUL\n\tdel /Q shell.c sqlite3ext.h sqlite3session.h 2>NUL\n\tdel /Q sqlite3_analyzer.exe sqlite3_analyzer.c sqlite3_rsync.exe 2>NUL\n\tdel /Q sqlite-*-output.vsix 2>NUL\n\tdel /Q fuzzershell.exe fuzzcheck.exe sqldiff.exe dbhash.exe 2>NUL\n\tdel /Q sqltclsh.* 2>NUL\n\tdel /Q dbfuzz.exe sessionfuzz.exe threadtest3.exe 2>NUL\n\tdel /Q kvtest.exe ossshell.exe scrub.exe 2>NUL\n\tdel /Q showshm.exe sqlite3_checker.* sqlite3_expert.exe 2>NUL\n\tdel /Q fts5.* fts5parse.* 2>NUL\n\tdel /Q lsm.h lsm1.c 2>NUL\n\tdel /q src-verify.exe 2>NUL\n# <</mark>>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.048828125,
          "content": "<h1 align=\"center\">SQLite Source Repository</h1>\n\nThis repository contains the complete source code for the\n[SQLite database engine](https://sqlite.org/), including\nmany test scripts.  However, other test scripts\nand most of the documentation are managed separately.\n\nSee the [on-line documentation](https://sqlite.org/) for more information\nabout what SQLite is and how it works from a user's perspective.  This\nREADME file is about the source code that goes into building SQLite,\nnot about how SQLite is used.\n\n## Version Control\n\nSQLite sources are managed using\n[Fossil](https://fossil-scm.org/), a distributed version control system\nthat was specifically designed and written to support SQLite development.\nThe [Fossil repository](https://sqlite.org/src/timeline) contains the urtext.\n\nIf you are reading this on GitHub or some other Git repository or service,\nthen you are looking at a mirror.  The names of check-ins and\nother artifacts in a Git mirror are different from the official\nnames for those objects.  The official names for check-ins are\nfound in a footer on the check-in comment for authorized mirrors.\nThe official check-in name can also be seen in the `manifest.uuid` file\nin the root of the tree.  Always use the official name, not  the\nGit-name, when communicating about an SQLite check-in.\n\nIf you pulled your SQLite source code from a secondary source and want to\nverify its integrity, there are hints on how to do that in the\n[Verifying Code Authenticity](#vauth) section below.\n\n## Contacting The SQLite Developers\n\nThe preferred way to ask questions or make comments about SQLite or to\nreport bugs against SQLite is to visit the \n[SQLite Forum](https://sqlite.org/forum) at <https://sqlite.org/forum/>.\nAnonymous postings are permitted.\n\nIf you think you have found a bug that has security implications and\nyou do not want to report it on the public forum, you can send a private\nemail to drh at sqlite dot org.\n\n## Public Domain\n\nThe SQLite source code is in the public domain.  See\n<https://sqlite.org/copyright.html> for details. \n\nBecause SQLite is in the public domain, we do not normally accept pull\nrequests, because if we did take a pull request, the changes in that\npull request might carry a copyright and the SQLite source code would\nthen no longer be fully in the public domain.\n\n## Obtaining The SQLite Source Code\n\nIf you do not want to use Fossil, you can download tarballs or ZIP\narchives or [SQLite archives](https://sqlite.org/cli.html#sqlar) as follows:\n\n  *  Latest trunk check-in as\n     [Tarball](https://www.sqlite.org/src/tarball/sqlite.tar.gz),\n     [ZIP-archive](https://www.sqlite.org/src/zip/sqlite.zip), or\n     [SQLite-archive](https://www.sqlite.org/src/sqlar/sqlite.sqlar).\n\n  *  Latest release as\n     [Tarball](https://www.sqlite.org/src/tarball/sqlite.tar.gz?r=release),\n     [ZIP-archive](https://www.sqlite.org/src/zip/sqlite.zip?r=release), or\n     [SQLite-archive](https://www.sqlite.org/src/sqlar/sqlite.sqlar?r=release).\n\n  *  For other check-ins, substitute an appropriate branch name or\n     tag or hash prefix in place of \"release\" in the URLs of the previous\n     bullet.  Or browse the [timeline](https://www.sqlite.org/src/timeline)\n     to locate the check-in desired, click on its information page link,\n     then click on the \"Tarball\" or \"ZIP Archive\" links on the information\n     page.\n\nTo access sources directly using [Fossil](https://fossil-scm.org/home),\nfirst install Fossil version 2.0 or later.\nSource tarballs and precompiled binaries available at\n<https://fossil-scm.org/home/uv/download.html>.  Fossil is\na stand-alone program.  To install, simply download or build the single\nexecutable file and put that file someplace on your $PATH.\nThen run commands like this:\n\n        mkdir -p ~/sqlite\n        cd ~/sqlite\n        fossil open https://sqlite.org/src\n\nThe \"fossil open\" command will take two or three minutes.  Afterwards,\nyou can do fast, bandwidth-efficient updates to the whatever versions\nof SQLite you like.  Some examples:\n\n        fossil update trunk             ;# latest trunk check-in\n        fossil update release           ;# latest official release\n        fossil update trunk:2024-01-01  ;# First trunk check-in after 2024-01-01\n        fossil update version-3.39.0    ;# Version 3.39.0\n\nOr type \"fossil ui\" to get a web-based user interface.\n\n## Compiling for Unix-like systems\n\nFirst create a directory in which to place\nthe build products.  It is recommended, but not required, that the\nbuild directory be separate from the source directory.  Cd into the\nbuild directory and then from the build directory run the configure\nscript found at the root of the source tree.  Then run \"make\".\n\nFor example:\n\n        apt install gcc make tcl-dev  ;#  Make sure you have all the necessary build tools\n        tar xzf sqlite.tar.gz         ;#  Unpack the source tree into \"sqlite\"\n        mkdir bld                     ;#  Build will occur in a sibling directory\n        cd bld                        ;#  Change to the build directory\n        ../sqlite/configure           ;#  Run the configure script\n        make sqlite3                  ;#  Builds the \"sqlite3\" command-line tool\n        make sqlite3.c                ;#  Build the \"amalgamation\" source file\n        make sqldiff                  ;#  Builds the \"sqldiff\" command-line tool\n        # Makefile targets below this point require tcl-dev\n        make tclextension-install     ;#  Build and install the SQLite TCL extension\n        make devtest                  ;#  Run development tests\n        make releasetest              ;#  Run full release tests\n        make sqlite3_analyzer         ;#  Builds the \"sqlite3_analyzer\" tool\n\nSee the makefile for additional targets.  For debugging builds, the\ncore developers typically run \"configure\" with options like this:\n\n        ../sqlite/configure --enable-all --enable-debug CFLAGS='-O0 -g'\n\nFor release builds, the core developers usually do:\n\n        ../sqlite/configure --enable-all\n\nAlmost all makefile targets require a \"tclsh\" TCL interpreter version 8.6 or\nlater.  The \"tclextension-install\" target and the test targets that follow\nall require TCL development libraries too.  (\"apt install tcl-dev\").  It is\nhelpful, but is not required, to install the SQLite TCL extension (the\n\"tclextension-install\" target) prior to running tests.  The \"releasetest\"\ntarget has additional requiremenst, such as \"valgrind\".\n\nOn \"make\" command-lines, one can add \"OPTIONS=...\" to specify additional\ncompile-time options over and above those set by ./configure.  For example,\nto compile with the SQLITE_OMIT_DEPRECATED compile-time option, one could say:\n\n        ./configure --enable-all\n        make OPTIONS=-DSQLITE_OMIT_DEPRECATED sqlite3\n\nThe configure script uses autoconf 2.61 and libtool.  If the configure\nscript does not work out for you, there is a generic makefile named\n\"Makefile.linux-gcc\" in the top directory of the source tree that you\ncan copy and edit to suit your needs.  Comments on the generic makefile\nshow what changes are needed.\n\n## Compiling for Windows Using MSVC\n\nOn Windows, everything can be compiled with MSVC.\nYou will also need a working installation of TCL.\nSee the [compile-for-windows.md](doc/compile-for-windows.md) document for\nadditional information about how to install MSVC and TCL and configure your\nbuild environment.\n\nIf you want to run tests, you need to let SQLite know the location of your\nTCL library, using a command like this:\n\n        set TCLDIR=c:\\Tcl\n\nSQLite uses \"tclsh.exe\" as part of the build process, and so that\nprogram will need to be somewhere on your %PATH%.  SQLite itself\ndoes not contain any TCL code, but it does use TCL to help with the\nbuild process and to run tests.  You may need to install TCL development\nlibraries in order to successfully complete some makefile targets.\nIt is helpful, but is not required, to install the SQLite TCL extension\n(the \"tclextension-install\" target) prior to running tests.\n\nBuild using Makefile.msc.  Example:\n\n        nmake /f Makefile.msc sqlite3.exe\n        nmake /f Makefile.msc sqlite3.c\n        nmake /f Makefile.msc sqldiff.exe\n        # Makefile targets below this point require TCL development libraries\n        nmake /f Makefile.msc tclextension-install\n        nmake /f Makefile.msc devtest\n        nmake /f Makefile.msc releasetest\n        nmake /f Makefile.msc sqlite3_analyzer.exe\n \nThere are many other makefile targets.  See comments in Makefile.msc for\ndetails.\n\nAs with the unix Makefile, the OPTIONS=... argument can be passed on the nmake\ncommand-line to enable new compile-time options.  For example:\n\n        nmake /f Makefile.msc OPTIONS=-DSQLITE_OMIT_DEPRECATED sqlite3.exe\n\n## Source Tree Map\n\n  *  **src/** - This directory contains the primary source code for the\n     SQLite core.  For historical reasons, C-code used for testing is\n     also found here.  Source files intended for testing begin with \"`test`\".\n     The `tclsqlite3.c` and `tclsqlite3.h` files are the TCL interface\n     for SQLite and are also not part of the core.\n\n  *  **test/** - This directory and its subdirectories contains code used\n     for testing.  Files that end in \"`.test`\" are TCL scripts that run\n     tests using an augmented TCL interpreter named \"testfixture\".  Use\n     a command like \"`make testfixture`\" (unix) or \n     \"`nmake /f Makefile.msc testfixture.exe`\" (windows) to build that\n     augmented TCL interpreter, then run individual tests using commands like\n     \"`testfixture test/main.test`\".  This test/ subdirectory also contains\n     additional C code modules and scripts for other kinds of testing.\n\n  *  **tool/** - This directory contains programs and scripts used to\n     build some of the machine-generated code that goes into the SQLite\n     core, as well as to build and run tests and perform diagnostics.\n     The source code to [the Lemon parser generator](./doc/lemon.html) is\n     found here.  There are also TCL scripts used to build and/or transform\n     source code files.  For example, the tool/mksqlite3h.tcl script reads\n     the src/sqlite.h.in file and uses it as a template to construct\n     the deliverable \"sqlite3.h\" file that defines the SQLite interface.\n\n  *  **ext/** - Various extensions to SQLite are found under this\n     directory.  For example, the FTS5 subsystem is in \"ext/fts5/\".\n     Some of these extensions (ex: FTS3/4, FTS5, RTREE) might get built\n     into the SQLite amalgamation, but not all of them.  The\n     \"ext/misc/\" subdirectory contains an assortment of one-file extensions,\n     many of which are omitted from the SQLite core, but which are included\n     in the [SQLite CLI](https://sqlite.org/cli.html).\n     \n  *  **doc/** - Some documentation files about SQLite internals are found\n     here.  Note, however, that the primary documentation designed for\n     application developers and users of SQLite is in a completely separate\n     repository.  Note also that the primary API documentation is derived\n     from specially constructed comments in the src/sqlite.h.in file.\n\n### Generated Source Code Files\n\nSeveral of the C-language source files used by SQLite are generated from\nother sources rather than being typed in manually by a programmer.  This\nsection will summarize those automatically-generated files.  To create all\nof the automatically-generated files, simply run \"make target&#95;source\".\nThe \"target&#95;source\" make target will create a subdirectory \"tsrc/\" and\nfill it with all the source files needed to build SQLite, both\nmanually-edited files and automatically-generated files.\n\nThe SQLite interface is defined by the **sqlite3.h** header file, which is\ngenerated from src/sqlite.h.in, ./manifest.uuid, and ./VERSION.  The\n[Tcl script](https://www.tcl.tk) at tool/mksqlite3h.tcl does the conversion.\nThe manifest.uuid file contains the SHA3 hash of the particular check-in\nand is used to generate the SQLITE\\_SOURCE\\_ID macro.  The VERSION file\ncontains the current SQLite version number.  The sqlite3.h header is really\njust a copy of src/sqlite.h.in with the source-id and version number inserted\nat just the right spots. Note that comment text in the sqlite3.h file is\nused to generate much of the SQLite API documentation.  The Tcl scripts\nused to generate that documentation are in a separate source repository.\n\nThe SQL language parser is **parse.c** which is generated from a grammar in\nthe src/parse.y file.  The conversion of \"parse.y\" into \"parse.c\" is done\nby the [lemon](./doc/lemon.html) LALR(1) parser generator.  The source code\nfor lemon is at tool/lemon.c.  Lemon uses the tool/lempar.c file as a\ntemplate for generating its parser.\nLemon also generates the **parse.h** header file, at the same time it\ngenerates parse.c.\n\nThe **opcodes.h** header file contains macros that define the numbers\ncorresponding to opcodes in the \"VDBE\" virtual machine.  The opcodes.h\nfile is generated by scanning the src/vdbe.c source file.  The\nTcl script at ./mkopcodeh.tcl does this scan and generates opcodes.h.\nA second Tcl script, ./mkopcodec.tcl, then scans opcodes.h to generate\nthe **opcodes.c** source file, which contains a reverse mapping from\nopcode-number to opcode-name that is used for EXPLAIN output.\n\nThe **keywordhash.h** header file contains the definition of a hash table\nthat maps SQL language keywords (ex: \"CREATE\", \"SELECT\", \"INDEX\", etc.) into\nthe numeric codes used by the parse.c parser.  The keywordhash.h file is\ngenerated by a C-language program at tool mkkeywordhash.c.\n\nThe **pragma.h** header file contains various definitions used to parse\nand implement the PRAGMA statements.  The header is generated by a\nscript **tool/mkpragmatab.tcl**. If you want to add a new PRAGMA, edit\nthe **tool/mkpragmatab.tcl** file to insert the information needed by the\nparser for your new PRAGMA, then run the script to regenerate the\n**pragma.h** header file.\n\n### The Amalgamation\n\nAll of the individual C source code and header files (both manually-edited\nand automatically-generated) can be combined into a single big source file\n**sqlite3.c** called \"the amalgamation\".  The amalgamation is the recommended\nway of using SQLite in a larger application.  Combining all individual\nsource code files into a single big source code file allows the C compiler\nto perform more cross-procedure analysis and generate better code.  SQLite\nruns about 5% faster when compiled from the amalgamation versus when compiled\nfrom individual source files.\n\nThe amalgamation is generated from the tool/mksqlite3c.tcl Tcl script.\nFirst, all of the individual source files must be gathered into the tsrc/\nsubdirectory (using the equivalent of \"make target_source\") then the\ntool/mksqlite3c.tcl script is run to copy them all together in just the\nright order while resolving internal \"#include\" references.\n\nThe amalgamation source file is more than 200K lines long.  Some symbolic\ndebuggers (most notably MSVC) are unable to deal with files longer than 64K\nlines.  To work around this, a separate Tcl script, tool/split-sqlite3c.tcl,\ncan be run on the amalgamation to break it up into a single small C file\ncalled **sqlite3-all.c** that does #include on about seven other files\nnamed **sqlite3-1.c**, **sqlite3-2.c**, ..., **sqlite3-7.c**.  In this way,\nall of the source code is contained within a single translation unit so\nthat the compiler can do extra cross-procedure optimization, but no\nindividual source file exceeds 32K lines in length.\n\n## How It All Fits Together\n\nSQLite is modular in design.\nSee the [architectural description](https://www.sqlite.org/arch.html)\nfor details. Other documents that are useful in\nhelping to understand how SQLite works include the\n[file format](https://www.sqlite.org/fileformat2.html) description,\nthe [virtual machine](https://www.sqlite.org/opcode.html) that runs\nprepared statements, the description of\n[how transactions work](https://www.sqlite.org/atomiccommit.html), and\nthe [overview of the query planner](https://www.sqlite.org/optoverview.html).\n\nDecades of effort have gone into optimizing SQLite, both\nfor small size and high performance.  And optimizations tend to result in\ncomplex code.  So there is a lot of complexity in the current SQLite\nimplementation.  It will not be the easiest library in the world to hack.\n\n### Key source code files\n\n  *  **sqlite.h.in** - This file defines the public interface to the SQLite\n     library.  Readers will need to be familiar with this interface before\n     trying to understand how the library works internally.  This file is\n     really a template that is transformed into the \"sqlite3.h\" deliverable\n     using a script invoked by the makefile.\n\n  *  **sqliteInt.h** - this header file defines many of the data objects\n     used internally by SQLite.  In addition to \"sqliteInt.h\", some\n     subsystems inside of sQLite have their own header files.  These internal\n     interfaces are not for use by applications.  They can and do change\n     from one release of SQLite to the next.\n\n  *  **parse.y** - This file describes the LALR(1) grammar that SQLite uses\n     to parse SQL statements, and the actions that are taken at each step\n     in the parsing process.  The file is processed by the\n     [Lemon Parser Generator](./doc/lemon.html) to produce the actual C code\n     used for parsing.\n\n  *  **vdbe.c** - This file implements the virtual machine that runs\n     prepared statements.  There are various helper files whose names\n     begin with \"vdbe\".  The VDBE has access to the vdbeInt.h header file\n     which defines internal data objects.  The rest of SQLite interacts\n     with the VDBE through an interface defined by vdbe.h.\n\n  *  **where.c** - This file (together with its helper files named\n     by \"where*.c\") analyzes the WHERE clause and generates\n     virtual machine code to run queries efficiently.  This file is\n     sometimes called the \"query optimizer\".  It has its own private\n     header file, whereInt.h, that defines data objects used internally.\n\n  *  **btree.c** - This file contains the implementation of the B-Tree\n     storage engine used by SQLite.  The interface to the rest of the system\n     is defined by \"btree.h\".  The \"btreeInt.h\" header defines objects\n     used internally by btree.c and not published to the rest of the system.\n\n  *  **pager.c** - This file contains the \"pager\" implementation, the\n     module that implements transactions.  The \"pager.h\" header file\n     defines the interface between pager.c and the rest of the system.\n\n  *  **os_unix.c** and **os_win.c** - These two files implement the interface\n     between SQLite and the underlying operating system using the run-time\n     pluggable VFS interface.\n\n  *  **shell.c.in** - This file is not part of the core SQLite library.  This\n     is the file that, when linked against sqlite3.a, generates the\n     \"sqlite3.exe\" command-line shell.  The \"shell.c.in\" file is transformed\n     into \"shell.c\" as part of the build process.\n\n  *  **tclsqlite.c** - This file implements the Tcl bindings for SQLite.  It\n     is not part of the core SQLite library.  But as most of the tests in this\n     repository are written in Tcl, the Tcl language bindings are important.\n\n  *  **test\\*.c** - Files in the src/ folder that begin with \"test\" go into\n     building the \"testfixture.exe\" program.  The testfixture.exe program is\n     an enhanced Tcl shell.  The testfixture.exe program runs scripts in the\n     test/ folder to validate the core SQLite code.  The testfixture program\n     (and some other test programs too) is built and run when you type\n     \"make test\".\n\n  *  **VERSION**, **manifest**, and **manifest.uuid** - These files define\n     the current SQLite version number.  The \"VERSION\" file is human generated,\n     but the \"manifest\" and \"manifest.uuid\" files are automatically generated\n     by the [Fossil version control system](https://fossil-scm.org/).\n\nThere are many other source files.  Each has a succinct header comment that\ndescribes its purpose and role within the larger system.\n\n<a name=\"vauth\"></a>\n## Verifying Code Authenticity\n\nThe `manifest` file at the root directory of the source tree\ncontains either a SHA3-256 hash or a SHA1 hash\nfor every source file in the repository.\nThe name of the version of the entire source tree is just the\nSHA3-256 hash of the `manifest` file itself, possibly with the\nlast line of that file omitted if the last line begins with\n\"`# Remove this line`\".\nThe `manifest.uuid` file should contain the SHA3-256 hash of the\n`manifest` file. If all of the above hash comparisons are correct, then\nyou can be confident that your source tree is authentic and unadulterated.\nDetails on the format for the `manifest` files are available\n[on the Fossil website](https://fossil-scm.org/home/doc/trunk/www/fileformat.wiki#manifest).\n\nThe process of checking source code authenticity is automated by the \nmakefile:\n\n>   make verify-source\n\nOr on windows:\n\n>   nmake /f Makefile.msc verify-source\n\nUsing the makefile to verify source integrity is good for detecting\naccidental changes to the source tree, but malicious changes could be\nhidden by also modifying the makefiles.\n\n## Contacts\n\nThe main SQLite website is [https://sqlite.org/](https://sqlite.org/)\nwith geographically distributed backups at\n[https://www2.sqlite.org/](https://www2.sqlite.org) and\n[https://www3.sqlite.org/](https://www3.sqlite.org).\n\nContact the SQLite developers through the\n[SQLite Forum](https://sqlite.org/forum/).  In an emergency, you\ncan send private email to the lead developer at drh at sqlite dot org.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "3.48.0\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "auto.def",
          "type": "blob",
          "size": 53.4091796875,
          "content": "#/do/not/tclsh\n# ^^^ help out editors which guess this file's content type.\n#\n# This is the main autosetup-compatible configure script for the\n# SQLite project.\n#\n# This script should be kept compatible with JimTCL, a copy of which\n# is included in this source tree as ./autosetup/jimsh0.c. The number\n# of incompatibilities between canonical TCL and JimTCL is very low\n# and alternative formulations of incompatible constructs have, so\n# far, been easy to find.\n#\n# JimTCL: https://jim.tcl.tk\n#\nuse cc cc-db cc-shared cc-lib proj pkg-config\n\n# $DUMP_DEFINES_TXT is the file emitted by --dump-defines, intended\n# only for build debugging and not part of the public build interface.\nset DUMP_DEFINES_TXT ./config.defines.txt\n# $DUMP_DEFINES_JSON is the autosetup counterpart of the historical\n# \"DEFS\" var which was generated by the autotools in the pre-processed\n# autotools builds (but not in the canonical tree). Generation of this\n# file is disabled (via an empty file name) until/unless someone\n# voices a specific interest in it. The original motivating use case\n# is handled fine by sqlite_cfg.h.\nset DUMP_DEFINES_JSON \"\"; #./config.defines.json\n\n########################################################################\n# Regarding flag compatibility with the historical autotool configure\n# script:\n#\n# A very long story made short, autosetup's --flag handling has\n# some behaviors which make it impossible to implement 100% identical\n# flags compared to the historical autotools build. The differences\n# are documented here:\n#\n# 1) --debug is used by autosetup itself, so we have to rename it to\n# --with-debug. We cannot use --enable-debug because that is, for\n# autosetup, an alias for --debug=1. Alternately, we can patch\n# autosetup to use --autosetup-debug for its own purposes instead.\n#\n# 2) In autosetup, all flags starting with (--enable, --disable) are\n# forced to be booleans and receive special handling in how they're\n# resolved. Because of that we have to rename:\n#\n#   2.1) --enable-tempstore[=no] to --with-tempstore[=no], noting that\n#        it has four legal values, not two.\n#\n########################################################################\n# A gentle introduction to flags handling in autosetup\n#\n# Reference: https://msteveb.github.io/autosetup/developer/\n#\n# All configure flags must be described in an 'options' call, which\n# must appear very early on in this script. The general syntax is:\n#\n#  FLAG => {Help text}\n#\n# Where FLAG can have any of the following formats:\n#\n#   boolopt            => \"a boolean option which defaults to disabled\"\n#   boolopt2=1         => \"a boolean option which defaults to enabled\"\n#   stringopt:         => \"an option which takes an argument, e.g. --stringopt=value\"\n#   stringopt2:=value  => \"an option where the argument is optional and defaults to 'value'\"\n#   optalias booltopt3 => \"a boolean with a hidden alias. --optalias is not shown in --help\"\n#\n# Autosetup does no small amount of specialized handling for flags,\n# especially booleans. Each bool-type --FLAG implicitly gets\n# --enable-FLAG and --disable-FLAG forms. e.g. we define a flag\n# \"readline\", which will be interpreted in one of two ways, depending\n# on how it's invoked and how its default is defined:\n#\n#   --enable-readline ==> boolean true\n#   --disable-readline ==> boolean false\n#\n# Passing --readline or --readline=1 is equivalent to passing\n# --enable-readline, and --readline=0 is equivalent to\n# --disable-readline.\n#\n# The behavior described above can lead lead to some confusion when\n# writing help text. For example:\n#\n#   options { json=1 {Disable JSON functions} }\n#\n# The reason the help text says \"disable\" is because a boolean option\n# which defaults to true is, in the --help text, rendered as:\n#\n#   --disable-json          Disable JSON functions\n#\n# Whereas a bool flag which defaults to false will instead render as:\n#\n#   --enable-FLAG\n#\n# Non-boolean flags, in contrast, use the names specifically given to\n# them in the [options] invocation. e.g. \"with-tcl\" is the --with-tcl\n# flag.\n#\n# Fetching values for flags:\n#\n#   booleans: use one of:\n#     - [opt-bool FLAG] is autosetup's built-in command for this, but we\n#       have some convenience variants:\n#     - [proj-opt-truthy FLAG]\n#     - [proj-opt-if-truthy FLAG {THEN} {ELSE}]\n#\n#   Non-boolean (i.e. string) flags:\n#     - [opt-val FLAG ?default?]\n#     - [opt-str ...] - see the docs in ./autosetup/autosetup\n#\n########################################################################\nset flags {\n  # When writing {help text blocks}, be aware that autosetup formats\n  # them differently (left-aligned, directly under the --flag) if the\n  # block starts with a newline. It does NOT expand vars and commands,\n  # but we use a [subst] call below which will replace (only) var\n  # refs.\n\n  # <build-modes>\n  shared=1             => {Disable build of shared libary}\n  static=1             => {Disable build of static library (mostly)}\n  amalgamation=1       => {Disable the amalgamation and instead build all files separately.}\n  # </build-modes>\n  # <lib-feature>\n  threadsafe=1         => {Disable mutexing}\n  with-tempstore:=no   => {Use an in-RAM database for temporary tables: never,no,yes,always}\n  largefile=1          => {Disable large file support}\n  load-extension=1     => {Disable loading of external extensions}\n  math=1               => {Disable math functions}\n  json=1               => {Disable JSON functions}\n  memsys5              => {Enable MEMSYS5}\n  memsys3              => {Enable MEMSYS3}\n  fts3                 => {Enable the FTS3 extension}\n  fts4                 => {Enable the FTS4 extension}\n  fts5                 => {Enable the FTS5 extension}\n  update-limit         => {Enable the UPDATE/DELETE LIMIT clause}\n  geopoly              => {Enable the GEOPOLY extension}\n  rtree                => {Enable the RTREE extension}\n  session              => {Enable the SESSION extension}\n  all                  => {Enable FTS4, FTS5, Geopoly, RTree, Sessions}\n  # </lib-feature>\n  # <tcl>\n  with-tcl:DIR         =>\n    {Directory containing tclConfig.sh or a directory one level up from\n     that, from which we can derive a directory containing tclConfig.sh.\n     A dir name of \"prefix\" is equivalent to the directory specified by\n     the --prefix flag.}\n  with-tclsh:PATH      =>\n    {Full pathname of tclsh to use.  It is used for (A) trying to find\n     tclConfig.sh and (B) all TCL-based code generation.  Warning: if\n     its containing dir has multiple tclsh versions, it may select the\n     wrong tclConfig.sh!}\n  tcl=1                =>\n    {Disable components which require TCL, including all tests.\n     This tree requires TCL for code generation but can use the in-tree\n     copy of autosetup/jimsh0.c for that. The SQLite TCL extension and the\n     test code require a canonical tclsh.}\n  # <tcl>\n  # <line-editing>\n  readline=1           => {Disable readline support}\n  # --with-readline-lib is a backwards-compatible alias for\n  # --with-readline-ldflags\n  with-readline-lib:\n  with-readline-ldflags:=auto\n                       => {Readline LDFLAGS, e.g. -lreadline -lncurses}\n  # --with-readline-inc is a backwards-compatible alias for\n  # --with-readline-cflags.\n  with-readline-inc:\n  with-readline-cflags:=auto\n                       => {Readline CFLAGS, e.g. -I/path/to/includes}\n  with-readline-header:PATH\n                       => {Full path to readline.h, from which --with-readline-cflags will be derived}\n  with-linenoise:DIR   => {Source directory for linenoise.c and linenoise.h}\n  editline=0           => {Enable BSD editline support}\n  # </line-editing>\n  # <icu>\n  with-icu-ldflags:LDFLAGS\n                        => {Enable SQLITE_ENABLE_ICU and add the given linker flags for the ICU libraries}\n  with-icu-cflags:CFLAGS\n                        => {Apply extra CFLAGS/CPPFLAGS necessary for building with ICU. e.g. -I/usr/local/include}\n  with-icu-config:=auto => {Enable SQLITE_ENABLE_ICU. Value must be one of: auto, pkg-config, /path/to/icu-config}\n  icu-collations=0      => {Enable SQLITE_ENABLE_ICU_COLLATIONS. Requires --with-icu-ldflags=... or --with-icu-config}\n  # </icu>\n  # <alternative-builds>\n  with-wasi-sdk:=/opt/wasi-sdk\n                       => {Top-most dir of the wasi-sdk for a WASI build}\n  with-emsdk:=auto     => {Top-most dir of the Emscripten SDK installation. Default = EMSDK env var.}\n  # </alternative-builds>\n  # <developer>\n  # Note that using the --debug/--enable-debug flag here requires patching\n  # autosetup/autosetup to rename the --debug to --autosetup-debug.\n  with-debug=0\n  debug=0              =>\n    {Enable debug build flags. This option will impact performance by\n     as much as 4x, as it includes large numbers of assert()s in\n     performance-critical loops.  Never use --debug for production\n     builds.}\n  scanstatus           => {Enable the SQLITE_ENABLE_STMT_SCANSTATUS feature flag}\n  dev                  => {Enable dev-mode build: automatically enables certain other flags}\n  test-status          => {Enable status of tests}\n  gcov=0               => {Enable coverage testing using gcov}\n  linemacros           => {Enable #line macros in the amalgamation}\n  dump-defines=0       => {Dump autosetup defines to $DUMP_DEFINES_TXT (for build debugging)}\n  dynlink-tools        => {Dynamically link libsqlite3 to certain tools which normally statically embed it.}\n  soname:=legacy       =>\n    {SONAME for libsqlite3.so. \"none\", or not using this flag, sets no\n     soname. \"legacy\" sets it to its historical value of\n     libsqlite3.so.0.  A value matching the glob \"libsqlite3.*\" sets\n     it to that literal value. Any other value is assumed to be a\n     suffix which gets applied to \"libsqlite3.so.\",\n     e.g. --soname=9.10 equates to \"libsqlite3.so.9.10\".\n    }\n  # --soname has a long story behind it: https://sqlite.org/src/forumpost/5a3b44f510df8ded\n  # </developer>\n}\nif {\"\" ne $DUMP_DEFINES_JSON} {\n  lappend flags \\\n    defines-json-include-lowercase=0 \\\n    => {Include lower-case defines (primarily system paths) in $DUMP_DEFINES_JSON}\n}\n\noptions [subst -nobackslashes -nocommands $flags]\nunset flags\n\n#\n# Carry values from hidden --flag aliases over to their canonical flag\n# forms.\n#\nproj-xfer-options-aliases {\n  with-readline-inc => with-readline-cflags\n  with-readline-lib => with-readline-ldflags\n  with-debug => debug\n}\n\nset srcdir $::autosetup(srcdir)\nset PACKAGE_VERSION [proj-file-content -trim $srcdir/VERSION]\ndefine PACKAGE_NAME \"sqlite\"\ndefine PACKAGE_URL {https://sqlite.org}\ndefine PACKAGE_VERSION $PACKAGE_VERSION\ndefine PACKAGE_STRING \"[get-define PACKAGE_NAME] $PACKAGE_VERSION\"\ndefine PACKAGE_BUGREPORT [get-define PACKAGE_URL]/forum\nmsg-result \"Source dir = $srcdir\"\nmsg-result \"Build dir  = $::autosetup(builddir)\"\nmsg-result \"Configuring SQLite version $PACKAGE_VERSION\"\n\napply {{} {\n  #\n  # SQLITE_AUTORECONFIG contains make target rules for re-running the\n  # configure script with the same arguments it was initially invoked\n  # with. This can be used to automatically reconfigure\n  #\n  proc squote {arg} {\n    # Wrap $arg in single-quotes if it looks like it might need that\n    # to avoid mis-handling as a shell argument. We assume that $arg\n    # will never contain any single-quote characters.\n    if {[string match {*[ &;$*\"]*} $arg]} { return '$arg' }\n    return $arg\n  }\n  define-append SQLITE_AUTORECONFIG cd [squote $::autosetup(builddir)] && [squote $::srcdir/configure]\n  #{*}$::autosetup(argv) breaks with --flag='val with spaces', so...\n  foreach arg $::autosetup(argv) {\n    define-append SQLITE_AUTORECONFIG [squote $arg]\n  }\n  rename squote \"\"\n}}\n\n# Are we cross-compiling?\nset isCrossCompiling [proj-is-cross-compiling]\n\ndefine OPT_FEATURE_FLAGS {} ; # -DSQLITE_OMIT/ENABLE flags.\ndefine OPT_SHELL {}         ; # Feature-related CFLAGS for the sqlite3 CLI app\n########################################################################\n# Adds $args, if not empty, to OPT_FEATURE_FLAGS.  If the first arg is\n# -shell then it strips that arg and passes the remaining args the\n# sqlite-add-shell-opt in addition to adding them to\n# OPT_FEATURE_FLAGS.\nproc sqlite-add-feature-flag {args} {\n  set shell \"\"\n  if {\"-shell\" eq [lindex $args 0]} {\n    set args [lassign $args shell]\n  }\n  if {\"\" ne $args} {\n    if {\"\" ne $shell} {\n      sqlite-add-shell-opt {*}$args\n    }\n    define-append OPT_FEATURE_FLAGS {*}$args\n  }\n}\n# Appends $args, if not empty, to OPT_SHELL.\nproc sqlite-add-shell-opt {args} {\n  if {\"\" ne $args} {\n    define-append OPT_SHELL {*}$args\n  }\n}\n\n# Pass msg-debug=1 to configure to enable obnoxiously loud output from\n# msg-debug.\nset msgDebugEnabled [proj-val-truthy [get-env msg-debug 0]]\nproc msg-debug {msg} {\n  if {$::msgDebugEnabled} {\n    puts stderr [proj-bold \"** DEBUG: $msg\"]\n  }\n}\n\nproj-file-extensions\nif {\".exe\" eq [get-define TARGET_EXEEXT]} {\n  define SQLITE_OS_UNIX 0\n  define SQLITE_OS_WIN 1\n} else {\n  define SQLITE_OS_UNIX 1\n  define SQLITE_OS_WIN 0\n}\n\n#########\n# Programs needed\ncc-check-tools ld ar ; # must come before [sqlite-check-wasi-sdk]\nif {\"\" eq [proj-bin-define install]} {\n  proj-warn \"Cannot find install binary, so 'make install' will not work.\"\n  define BIN_INSTALL false\n}\n\n########################################################################\n# We differentiate between two C compilers: the one used for binaries\n# which are to run on the build system (in autosetup it's called\n# CC_FOR_BUILD and in Makefile.in it's $(B.cc)) and the one used for\n# compiling binaries for the target system (CC a.k.a. $(T.cc)).\n# Normally they're the same, but they will differ when\n# cross-compiling.\ndefine CFLAGS [proj-get-env CFLAGS {-g -O2}]\ndefine BUILD_CFLAGS [proj-get-env BUILD_CFLAGS {-g}]\n\nproj-if-opt-truthy dev {\n  # --enable-dev needs to come early so that the downstream tests\n  # which check for the following flags use their updated state.\n  proj-opt-set all 1\n  proj-opt-set debug 1\n  proj-opt-set amalgamation 0\n  define CFLAGS [get-env CFLAGS {-O0 -g}]\n}\n\n########################################################################\n# Handle --with-wasi-sdk=DIR\n#\n# This must be run relatively early on because it may change the\n# toolchain and disable a number of config options.\nproc sqlite-check-wasi-sdk {} {\n  set wasiSdkDir [opt-val with-wasi-sdk] ; # ??? [lindex [opt-val with-wasi-sdk] end]\n  define HAVE_WASI_SDK 0\n  if {$wasiSdkDir eq \"\"} {\n    return 0\n  } elseif {$::isCrossCompiling} {\n    proj-fatal \"Cannot combine --with-wasi-sdk with cross-compilation\"\n  }\n  msg-result \"Checking WASI SDK directory \\[$wasiSdkDir]... \"\n  #puts \"prefix = [prefix $wasiSdkDir/bin {clang ld}]\"\n  proj-affirm-files-exist -v {*}[prefix \"$wasiSdkDir/bin/\" {clang wasm-ld ar}]\n  define HAVE_WASI_SDK 1\n  define WASI_SDK_DIR $wasiSdkDir\n  # Disable numerous options which we know either can't work or are\n  # not useful in this build...\n  msg-result \"Using wasi-sdk clang. Disabling CLI shell modifying config flags:\"\n  # Boolean (--enable-/--disable-) flags which must be switched off:\n  foreach opt {\n    dynlink-tools\n    editline\n    gcov\n    icu-collations\n    load-extension\n    readline\n    shared\n    tcl\n    threadsafe\n  } {\n    if {[opt-bool $opt]} {\n      msg-result \"  --disable-$opt\"\n      proj-opt-set $opt 0\n    }\n  }\n  # Non-boolean flags which need to be cleared:\n  foreach opt {\n    with-emsdk\n    with-icu-config\n    with-icu-ldflags\n    with-icu-cflags\n    with-linenoise\n    with-tcl\n  } {\n    if {[proj-opt-was-provided $opt]} {\n      msg-result \"  removing --$opt\"\n      proj-opt-set $opt \"\"\n    }\n  }\n  # Remember that we now have a discrepancy beteween\n  # $::isCrossCompiling and [proj-is-cross-compiling].\n  set ::isCrossCompiling 1\n\n  #\n  # Changing --host and --target have no effect here except to\n  # possibly cause confusion. Autosetup has finished processing them\n  # by this point.\n  #\n  #  host_alias=wasm32-wasi\n  #  target=wasm32-wasi\n  #\n  # Merely changing CC, LD, and AR to the wasi-sdk's is enough to get\n  # sqlite3.o building in WASM format.\n  #\n  define CC \"${wasiSdkDir}/bin/clang\"\n  define LD \"${wasiSdkDir}/bin/wasm-ld\"\n  define AR \"${wasiSdkDir}/bin/ar\"\n  #define STRIP \"${wasiSdkDir}/bin/strip\"\n  return 1\n}; # sqlite-check-wasi-sdk\nsqlite-check-wasi-sdk\n\n########################################################################\n# --dynlink-tools tells the build to dynamically link certain binaries\n# to libsqlite3.so instead of embedding a copy of the amalgamation.\ndefine LINK_TOOLS_DYNAMICALLY [proj-opt-was-provided dynlink-tools]\n\n#\n# Enable large file support (if special flags are necessary)\ndefine HAVE_LFS 0\nif {[opt-bool largefile]} {\n  cc-check-lfs\n}\n\n#\n# Check for needed/wanted data types\ncc-with {-includes stdint.h} \\\n  {cc-check-types int8_t int16_t int32_t int64_t intptr_t \\\n     uint8_t uint16_t uint32_t uint64_t uintptr_t}\n\n#\n# Check for needed/wanted functions\ncc-check-functions gmtime_r isnan localtime_r localtime_s \\\n  malloc_usable_size strchrnul usleep utime pread pread64 pwrite pwrite64\n\nproj-check-function-in-lib fdatasync rt\ndefine LDFLAGS_FDATASYNC [get-define lib_fdatasync]\nundefine lib_fdatasync\n\n#\n# Check for needed/wanted headers\ncc-check-includes \\\n  sys/types.h sys/stat.h dlfcn.h unistd.h \\\n  stdlib.h malloc.h memory.h \\\n  string.h strings.h \\\n  inttypes.h\n\nif {[cc-check-includes zlib.h] && [proj-check-function-in-lib deflate z]} {\n  # TODO? port over the more sophisticated zlib search from the fossil auto.def\n  define HAVE_ZLIB 1\n  define LDFLAGS_ZLIB -lz\n  sqlite-add-shell-opt -DSQLITE_HAVE_ZLIB=1\n} else {\n  define HAVE_ZLIB 0\n  define LDFLAGS_ZLIB \"\"\n}\n\nproj-check-rpath  ; # Determine proper rpath-handling flag\n\n########################################################################\n# \"soname\" for libsqlite3.so. See discussion at:\n# https://sqlite.org/src/forumpost/5a3b44f510df8ded\napply {{} {\n  define LDFLAGS_LIBSQLITE3_SONAME \"\"\n  if {[proj-opt-was-provided soname]} {\n    set soname [join [opt-val soname] \"\"]\n  } else {\n    # Enabling soname breaks linking for the --dynlink-tools feature,\n    # and this project has no direct use for soname, so default to\n    # none. Package maintainers, on the other hand, like to have an\n    # soname.\n    set soname none\n  }\n  switch -exact -- $soname {\n    none - \"\" { return 0 }\n    auto      { set soname libsqlite3.so.3 }\n    legacy    { set soname libsqlite3.so.0 }\n    default {\n      if {[string match libsqlite3.* $soname]} {\n        # use it as-is\n      } else {\n        # Assume it's a suffix\n        set soname \"libsqlite3.so.${soname}\"\n      }\n    }\n  }\n  msg-debug \"soname=$soname\"\n  if {[proj-check-soname $soname]} {\n    define LDFLAGS_LIBSQLITE3_SONAME [get-define LDFLAGS_SONAME_PREFIX]$soname\n    msg-result \"Setting SONAME using: [get-define LDFLAGS_LIBSQLITE3_SONAME]\"\n  } elseif {[proj-opt-was-provided soname]} {\n    # --soname was explicitly requested but not available, so fail fatally\n    proj-fatal \"This environment does not support SONAME.\"\n  } else {\n    # --soname was not explicitly requested but not available, so just warn\n    msg-result \"This environment does not support SONAME.\"\n  }\n}}\n\nproj-define-for-opt shared ENABLE_SHARED \"Build shared library?\"\n\nif {![proj-define-for-opt static ENABLE_STATIC \\\n        \"Build static library?\"]} {\n  proj-warn \"Static lib build may be implicitly re-activated by other components, e.g. some test apps.\"\n}\n\nproj-define-for-opt amalgamation USE_AMALGAMATION \"Use amalgamation for builds?\"\n\nproj-define-for-opt gcov USE_GCOV \"Use gcov?\"\n\nproj-define-for-opt test-status TSTRNNR_OPTS \\\n  \"test-runner flags:\" {--status} {}\n\nproj-define-for-opt linemacros AMALGAMATION_LINE_MACROS \\\n  \"Use #line macros in the amalgamation:\"\n\nmsg-checking \"SQLITE_DEBUG build? \"\nproj-if-opt-truthy debug {\n  define SQLITE_DEBUG 1\n  define TARGET_DEBUG {-g -DSQLITE_DEBUG=1 -DSQLITE_ENABLE_SELECTTRACE -DSQLITE_ENABLE_WHERETRACE -O0 -Wall}\n  proj-opt-set memsys5\n  msg-result yes\n} {\n  define TARGET_DEBUG {-DNDEBUG}\n  msg-result no\n}\n\n########################################################################\n# TCL...\n#\n# sqlite-check-tcl performs most of the --with-tcl and --with-tclsh\n# handling. Some related bits and pieces are performed before and\n# after that function is called.\n#\n# Important [define]'d vars:\n#\n#  - HAVE_TCL indicates whether we have a tclsh suitable for building\n#    the TCL SQLite extension and, by extension, the testing\n#    infrastructure. This must only be 1 for environments where\n#    tclConfig.sh can be found.\n#\n#  - TCLSH_CMD is the path to the canonical tclsh or \"\". It never\n#    refers to jimtcl.\n#\n#  - TCL_CONFIG_SH is the path to tclConfig.sh or \"\".\n#\n#  - TCLLIBDIR is the dir to which libtclsqlite3 gets installed.\n#\n#  - BTCLSH = the path to the tcl interpreter used for in-tree code\n#    generation.  It may be jimtcl or the canonical tclsh but may not\n#    be empty - this tree requires TCL to generated numerous\n#    components.\n#\n# If --tcl or --with-tcl are provided but no TCL is found, this\n# function fails fatally. If they are not explicitly provided then\n# failure to find TCL is not fatal but a loud warning will be emitted.\n#\nproc sqlite-check-tcl {} {\n  rename sqlite-check-tcl \"\"\n  define TCLSH_CMD false ; # Significant is that it exits with non-0\n  define HAVE_TCL 0      ; # Will be enabled via --tcl or a successful search\n  define TCLLIBDIR \"\"    ; # Installation dir for TCL extension lib\n  define TCL_CONFIG_SH \"\"; # full path to tclConfig.sh\n\n  # Clear out all vars which would be set by tclConfigToAutoDef.sh, so\n  # that the late-config validation of @VARS@ works even if\n  # --disable-tcl is used.\n  foreach k {TCL_INCLUDE_SPEC TCL_LIB_SPEC TCL_STUB_LIB_SPEC TCL_EXEC_PREFIX TCL_VERSION} {\n    define $k \"\"\n  }\n\n  file delete -force \".tclenv.sh\"; # ensure no stale state from previous configures.\n  if {![opt-bool tcl]} {\n    proj-indented-notice {\n      NOTE: TCL is disabled via --disable-tcl. This means that none\n      of the TCL-based components will be built, including tests\n      and sqlite3_analyzer.\n    }\n    return\n  }\n  # TODO: document the steps this is taking.\n  global srcdir\n  msg-result \"Checking for a suitable tcl... \"\n  proj-assert [proj-opt-truthy tcl]\n  set use_tcl 1\n  set with_tclsh [opt-val with-tclsh]\n  set with_tcl [opt-val with-tcl]\n  if {\"prefix\" eq $with_tcl} {\n    set with_tcl [get-define prefix]\n  }\n  msg-debug \"sqlite-check-tcl: use_tcl ${use_tcl}\"\n  msg-debug \"sqlite-check-tcl: with_tclsh=${with_tclsh}\"\n  msg-debug \"sqlite-check-tcl: with_tcl=$with_tcl\"\n  if {\"\" eq $with_tclsh && \"\" eq $with_tcl} {\n    # If neither --with-tclsh nor --with-tcl are provided, try to find\n    # a workable tclsh.\n    set with_tclsh [proj-first-bin-of tclsh9.0 tclsh8.6 tclsh]\n    msg-debug \"sqlite-check-tcl: with_tclsh=${with_tclsh}\"\n  }\n\n  set doConfigLookup 1 ; # set to 0 to test the tclConfig.sh-not-found cases\n  if {\"\" ne $with_tclsh} {\n    # --with-tclsh was provided or found above. Validate it and use it\n    # to trump any value passed via --with-tcl=DIR.\n    if {![file isfile $with_tclsh]} {\n      proj-fatal \"TCL shell $with_tclsh is not a file\"\n    } elseif {![file-isexec $with_tclsh]} {\n      proj-fatal \"TCL shell $with_tclsh is not executable\"\n    } else {\n      define TCLSH_CMD $with_tclsh\n      #msg-result \"Using tclsh: $with_tclsh\"\n    }\n    if {$doConfigLookup &&\n        [catch {exec $with_tclsh $srcdir/tool/find_tclconfig.tcl} result] == 0} {\n      set with_tcl $result\n    }\n    if {\"\" ne $with_tcl && [file isdir $with_tcl]} {\n      msg-result \"$with_tclsh recommends the tclConfig.sh from $with_tcl\"\n    } else {\n      proj-warn \"$with_tclsh is unable to recommend a tclConfig.sh\"\n      set use_tcl 0\n    }\n  }\n  set cfg \"\"\n  set tclSubdirs {tcl9.0 tcl8.6 lib}\n  while {$use_tcl} {\n    if {\"\" ne $with_tcl} {\n      # Ensure that we can find tclConfig.sh under ${with_tcl}/...\n      if {$doConfigLookup} {\n        if {[file readable \"${with_tcl}/tclConfig.sh\"]} {\n          set cfg \"${with_tcl}/tclConfig.sh\"\n        } else {\n          foreach i $tclSubdirs {\n            if {[file readable \"${with_tcl}/$i/tclConfig.sh\"]} {\n              set cfg \"${with_tcl}/$i/tclConfig.sh\"\n              break\n            }\n          }\n        }\n      }\n      if {\"\" eq $cfg} {\n        proj-fatal \"No tclConfig.sh found under ${with_tcl}\"\n      }\n    } else {\n      # If we have not yet found a tclConfig.sh file, look in\n      # $libdir which is set automatically by autosetup or by the\n      # --prefix command-line option.  See\n      # https://sqlite.org/forum/forumpost/e04e693439a22457\n      set libdir [get-define libdir]\n      if {[file readable \"${libdir}/tclConfig.sh\"]} {\n        set cfg \"${libdir}/tclConfig.sh\"\n      } else {\n        foreach i $tclSubdirs {\n          if {[file readable \"${libdir}/$i/tclConfig.sh\"]} {\n            set cfg \"${libdir}/$i/tclConfig.sh\"\n            break\n          }\n        }\n      }\n      if {![file readable $cfg]} {\n        break\n      }\n    }\n    msg-result \"Using tclConfig.sh: $cfg\"\n    break\n  }\n  define TCL_CONFIG_SH $cfg\n  # Export a subset of tclConfig.sh to the current TCL-space.  If $cfg\n  # is an empty string, this emits empty-string entries for the\n  # various options we're interested in.\n  eval [exec \"${srcdir}/tool/tclConfigShToAutoDef.sh\" \"$cfg\"]\n\n  if {\"\" eq $with_tclsh && $cfg ne \"\"} {\n    # We have tclConfig.sh but no tclsh. Attempt to locate a tclsh\n    # based on info from tclConfig.sh.\n    proj-assert {\"\" ne [get-define TCL_EXEC_PREFIX]}\n    set with_tclsh [get-define TCL_EXEC_PREFIX]/bin/tclsh[get-define TCL_VERSION]\n    if {![file-isexec $with_tclsh]} {\n      set with_tclsh2 [get-define TCL_EXEC_PREFIX]/bin/tclsh\n      if {![file-isexec $with_tclsh2]} {\n        proj-warn \"Cannot find a usable tclsh (tried: $with_tclsh $with_tclsh2)\"\n      } else {\n        set with_tclsh $with_tclsh2\n      }\n    }\n  }\n  define TCLSH_CMD $with_tclsh\n  if {$use_tcl} {\n    # Set up the TCLLIBDIR\n    #\n    # 2024-10-28: calculation of TCLLIBDIR is now done via the shell\n    # in main.mk (search it for T.tcl.env.sh) so that\n    # static/hand-written makefiles which import main.mk do not have\n    # to define that before importing main.mk. Even so, we export\n    # TCLLIBDIR from here, which will cause the canonical makefile to\n    # use this one rather than to re-calculate it at make-time.\n    set tcllibdir [get-env TCLLIBDIR \"\"]\n    if {\"\" eq $tcllibdir} {\n      # Attempt to extract TCLLIBDIR from TCL's $auto_path\n      if {\"\" ne $with_tclsh &&\n          [catch {exec echo \"puts stdout \\$auto_path\" | \"$with_tclsh\"} result] == 0} {\n        foreach i $result {\n          if {[file isdir $i]} {\n            set tcllibdir $i/sqlite3\n            break\n          }\n        }\n      } else {\n        proj-warn \"Cannot determine TCLLIBDIR.\"\n        # The makefile will fail fatally in this case if a target is\n        # invoked which requires TCLLIBDIR.\n      }\n    }\n    #if {\"\" ne $tcllibdir} { msg-result \"TCLLIBDIR = ${tcllibdir}\"; }\n    define TCLLIBDIR $tcllibdir\n  }; # find TCLLIBDIR\n\n  if {[file-isexec $with_tclsh]} {\n    msg-result \"Using tclsh: $with_tclsh\"\n    if {$cfg ne \"\"} {\n      define HAVE_TCL 1\n    } else {\n      proj-warn \"Found tclsh but no tclConfig.sh.\"\n    }\n  }\n  show-notices\n  # If TCL is not found: if it was explicitly requested then fail\n  # fatally, else just emit a warning. If we can find the APIs needed\n  # to generate a working JimTCL then that will suffice for build-time\n  # TCL purposes (see: proc sqlite-determine-codegen-tcl).\n  if {![get-define HAVE_TCL] &&\n      ([proj-opt-was-provided tcl] || [proj-opt-was-provided with-tcl])} {\n    proj-fatal \"TCL support was requested but no tclConfig.sh could be found.\"\n  }\n  if {\"\" eq $cfg} {\n    proj-assert {0 == [get-define HAVE_TCL]}\n    proj-indented-notice {\n      WARNING: Cannot find a usable tclConfig.sh file.  Use\n      --with-tcl=DIR to specify a directory where tclConfig.sh can be\n      found.  SQLite does not use TCL internally, but some optional\n      components require TCL, including tests and sqlite3_analyzer.\n    }\n  }\n}; # sqlite-check-tcl\nsqlite-check-tcl\n\n########################################################################\n# sqlite-determine-codegen-tcl checks which TCL to use as a code\n# generator.  By default, prefer jimsh simply because we have it\n# in-tree (it's part of autosetup) unless --with-tclsh=X is used, in\n# which case prefer X.\n#\n# Returns the human-readable name of the TCL it selects. Fails fatally\n# if it cannot detect a TCL appropriate for code generation.\n#\n# Defines:\n#\n#   - BTCLSH = the TCL shell used for code generation. It may set this\n#     to an unexpanded makefile var name.\n#\n#   - CFLAGS_JIMSH = any flags needed for buildng a BTCLSH-compatible\n#     jimsh. The defaults may be passed on to configure as\n#     CFLAGS_JIMSH=...\nset useJimForCodeGen 0 ; # Set to 1 when using jimsh for code generation.\n                         # May affect later decisions.\nproc sqlite-determine-codegen-tcl {} {\n  rename sqlite-determine-codegen-tcl \"\"\n  msg-result \"Checking for TCL to use for code generation... \"\n  define CFLAGS_JIMSH [proj-get-env CFLAGS_JIMSH {-O1}]\n  set cgtcl [opt-val with-tclsh jimsh]\n  if {\"jimsh\" ne $cgtcl} {\n    # When --with-tclsh=X is used, use that for all TCL purposes,\n    # including in-tree code generation, per developer request.\n    define BTCLSH \"\\$(TCLSH_CMD)\"\n    return $cgtcl\n  }\n  set flagsToRestore {CC CFLAGS AS_CFLAGS CPPFLAGS AS_CPPFLAGS LDFLAGS LINKFLAGS LIBS CROSS}\n  define-push $flagsToRestore {\n    # We have to swap CC to CC_FOR_BUILD for purposes of the various\n    # [cc-...] tests below. Recall that --with-wasi-sdk may have\n    # swapped out CC with one which is not appropriate for this block.\n    # Per consulation with autosetup's creator, doing this properly\n    # requires us to [define-push] the whole $flagsToRestore list\n    # (plus a few others which are not relevant in this tree).\n    #\n    # These will get set to their previous values at the end of this\n    # block.\n    foreach flag $flagsToRestore {define $flag \"\"}\n    define CC [get-define CC_FOR_BUILD]\n    # These headers are technically optional for JimTCL but necessary if\n    # we want to use it for code generation:\n    set sysh [cc-check-includes dirent.h sys/time.h]\n    # jimsh0.c hard-codes #define's for HAVE_DIRENT_H and\n    # HAVE_SYS_TIME_H on the platforms it supports, so we do not\n    # need to add -D... flags for those. We check for them here only\n    # so that we can avoid the situation that we later, at\n    # make-time, try to compile jimsh but it then fails due to\n    # missing headers (i.e. fail earlier rather than later).\n    if {$sysh && [cc-check-functions realpath]} {\n      define-append CFLAGS_JIMSH -DHAVE_REALPATH\n      define BTCLSH \"\\$(JIMSH)\"\n      set ::useJimForCodeGen 1\n    } elseif {$sysh && [cc-check-functions _fullpath]} {\n      # _fullpath() is a Windows API. It's not entirely clear\n      # whether we need to add {-DHAVE_SYS_TIME_H -DHAVE_DIRENT_H}\n      # to CFLAGS_JIMSH in this case. On MinGW32 we definitely do\n      # not want to because it already hard-codes them. On _MSC_VER\n      # builds it does not.\n      define-append CFLAGS_JIMSH -DHAVE__FULLPATH\n      define BTCLSH \"\\$(JIMSH)\"\n      set ::useJimForCodeGen 1\n    } elseif {[file-isexec [get-define TCLSH_CMD]]} {\n      set cgtcl [get-define TCLSH_CMD]\n      define BTCLSH \"\\$(TCLSH_CMD)\"\n    } else {\n      # One last-ditch effort to find TCLSH_CMD: use info from\n      # tclConfig.sh to try to find a tclsh\n      if {\"\" eq [get-define TCLSH_CMD]} {\n        set tpre [get-define TCL_EXEC_PREFIX]\n        if {\"\" ne $tpre} {\n          set tv [get-define TCL_VERSION]\n          if {[file-isexec \"${tpre}/bin/tclsh${tv}\"]} {\n            define TCLSH_CMD \"${tpre}/bin/tclsh${tv}\"\n          } elseif {[file-isexec \"${tpre}/bin/tclsh\"]} {\n            define TCLSH_CMD \"${tpre}/bin/tclsh\"\n          }\n        }\n      }\n      set cgtcl [get-define TCLSH_CMD]\n      if {![file-isexec $cgtcl]} {\n        proj-fatal \"Cannot find a tclsh to use for code generation.\"\n      }\n      define BTCLSH \"\\$(TCLSH_CMD)\"\n    }\n  }; # CC swap-out\n  return $cgtcl\n}; # sqlite-determine-codegen-tcl\nmsg-result \"TCL for code generation: [sqlite-determine-codegen-tcl]\"\n# /TCL\n########################################################################\n\n########################################################################\n# Thread safety?\nmsg-checking \"Support threadsafe operation? \"\nproj-if-opt-truthy threadsafe {\n  msg-result yes\n  sqlite-add-feature-flag -DSQLITE_THREADSAFE=1\n  if {![proj-check-function-in-lib pthread_create pthread]\n      || ![proj-check-function-in-lib pthread_mutexattr_init pthread]} {\n    user-error \"Missing required pthread bits\"\n  }\n  define LDFLAGS_PTHREAD [get-define lib_pthread_create]\n  undefine lib_pthread_create\n  # Recall that LDFLAGS_PTHREAD might be empty even if pthreads if\n  # found because it's in -lc on some platforms.\n} {\n  msg-result no\n  sqlite-add-feature-flag -DSQLITE_THREADSAFE=0\n  define LDFLAGS_PTHREAD \"\"\n}\n\n########################################################################\n# Do we want temporary databases in memory?\n#\n# The test fixture likes to set SQLITE_TEMP_STORE on its own, so do\n# not set that feature flag unless it was explicitly provided to the\n# configure script.\nif {[proj-opt-was-provided with-tempstore]} {\n  apply {{} {\n    set ts [opt-val with-tempstore no]\n    set tsn 1\n    msg-checking \"Use an in-RAM database for temporary tables? \"\n    switch -exact -- $ts {\n      never  { set tsn 0 }\n      no     { set tsn 1 }\n      yes    { set tsn 2 }\n      always { set tsn 3 }\n      default {\n        user-error \"Invalid --with-tempstore value '$ts'. Use one of: never, no, yes, always\"\n      }\n    }\n    msg-result $ts\n    sqlite-add-feature-flag -DSQLITE_TEMP_STORE=$tsn\n  }}\n}\n\n########################################################################\n# sqlite-check-line-editing jumps through proverbial hoops to try to\n# find a working line-editing library, setting:\n#\n#   - HAVE_READLINE to 0 or 1\n#   - HAVE_LINENOISE to 0, 1, or 2\n#   - HAVE_EDITLINE to 0 or 1\n#\n# Only one of ^^^ those will be set to non-0.\n#\n#   - LDFLAGS_READLINE = linker flags or empty string\n#\n#   - CFLAGS_READLINE = compilation flags for clients or empty string.\n#\n# Note that LDFLAGS_READLINE and CFLAGS_READLINE may refer to\n# linenoise or editline, not necessarily libreadline.  In some cases\n# it will set HAVE_READLINE=1 when it's really using editline, for\n# reasons described in this function's comments.\n#\n# Returns a string describing which line-editing approach to use, or\n# \"none\" if no option is available.\n#\n# Order of checks:\n#\n#  1) --with-linenoise trumps all others and skips all of the\n#     complexities involved with the remaining options.\n#\n#  2) --editline trumps --readline\n#\n#  3) --disable-readline trumps --readline\n#\n#  4) Default to automatic search for optional readline\n#\n#  5) Try to find readline or editline. If it's not found AND the\n#     corresponding --FEATURE flag was explicitly given, fail fatally,\n#     else fail silently.\nproc sqlite-check-line-editing {} {\n  rename sqlite-check-line-editing \"\"\n  msg-result \"Checking for line-editing capability...\"\n  define HAVE_READLINE 0\n  define HAVE_LINENOISE 0\n  define HAVE_EDITLINE 0\n  define LDFLAGS_READLINE \"\"\n  define CFLAGS_READLINE \"\"\n  set failIfNotFound 0 ; # Gets set to 1 for explicit --FEATURE requests\n                         # so that we know whether to fail fatally or not\n                         # if the library is not found.\n  set libsForReadline {readline edit} ; # -l<LIB> names to check for readline().\n                                        # The libedit check changes this.\n  set editLibName \"readline\" ; # \"readline\" or \"editline\"\n  set editLibDef \"HAVE_READLINE\" ; # \"HAVE_READLINE\" or \"HAVE_EDITLINE\"\n  set dirLn [opt-val with-linenoise]\n  if {\"\" ne $dirLn} {\n    # Use linenoise from a copy of its sources (not a library)...\n    if {![file isdir $dirLn]} {\n      proj-fatal \"--with-linenoise value is not a directory\"\n    }\n    set lnH $dirLn/linenoise.h\n    if {![file exists $lnH] } {\n      proj-fatal \"Cannot find linenoise.h in $dirLn\"\n    }\n    set lnC \"\"\n    set lnCOpts {linenoise-ship.c linenoise.c}\n    foreach f $lnCOpts {\n      if {[file exists $dirLn/$f]} {\n        set lnC $dirLn/$f\n        break;\n      }\n    }\n    if {\"\" eq $lnC} {\n      proj-fatal \"Cannot find any of $lnCOpts in $dirLn\"\n    }\n    set flavor \"\"\n    set lnVal [proj-which-linenoise $lnH]\n    switch -- $lnVal {\n      1 { set flavor \"antirez\" }\n      2 { set flavor \"msteveb\" }\n      default {\n        proj-fatal \"Cannot determine the flavor of linenoise from $lnH\"\n      }\n    }\n    define CFLAGS_READLINE \"-I$dirLn $lnC\"\n    define HAVE_LINENOISE $lnVal\n    sqlite-add-shell-opt -DHAVE_LINENOISE=$lnVal\n    if {$::useJimForCodeGen && 2 == $lnVal} {\n      define-append CFLAGS_JIMSH -DUSE_LINENOISE [get-define CFLAGS_READLINE]\n      user-notice \"Adding linenoise support to jimsh.\"\n    }\n    return \"linenoise ($flavor)\"\n  } elseif {[opt-bool editline]} {\n    # libedit mimics libreadline and on some systems does not have its\n    # own header installed (instead, that of libreadline is used).\n    #\n    # shell.c historically expects HAVE_EDITLINE to be set for\n    # libedit, but it then expects to see <editline/readline.h>, which\n    # some system's don't actually have despite having libedit.  If we\n    # end up finding <editline/readline.h> below, we will use\n    # -DHAVE_EDITLINE=1, else we will use -DHAVE_READLINE=1. In either\n    # case, we will link against libedit.\n    set failIfNotFound 1\n    set libsForReadline {edit}\n    set editLibName editline\n  } elseif {![opt-bool readline]} {\n    msg-result \"Readline support explicitly disabled with --disable-readline\"\n    return \"none\"\n  } elseif {[proj-opt-was-provided readline]} {\n    # If an explicit --[enable-]readline was used, fail if it's not\n    # found, else treat the feature as optional.\n    set failIfNotFound 1\n  }\n\n  # Transform with-readline-header=X to with-readline-cflags=-I...\n  set v [opt-val with-readline-header]\n  proj-opt-set with-readline-header \"\"\n  if {\"\" ne $v} {\n    if {\"auto\" eq $v} {\n      proj-opt-set with-readline-cflags auto\n    } else {\n      set v [file dirname $v]\n      if {[string match */readline $v]} {\n        # Special case: if the path includes .../readline/readline.h,\n        # set the -I to one dir up from that because our sources\n        # #include <readline/readline.h> or <editline/readline.h>.\n        set v [file dirname $v]\n      }\n      proj-opt-set with-readline-cflags \"-I$v\"\n    }\n  }\n\n  # Look for readline.h\n  set rlInc [opt-val with-readline-cflags auto]\n  if {\"auto\" eq $rlInc} {\n    set rlInc \"\"\n    if {$::isCrossCompiling} {\n      # ^^^ this check is derived from the legacy configure script.\n      proj-warn \"Skipping check for readline.h because we're cross-compiling.\"\n    } else {\n      set dirs \"[get-define prefix] /usr /usr/local /usr/local/readline /usr/contrib /mingw\"\n      set subdirs \"include/$editLibName\"\n      if {\"editline\" eq $editLibName} {\n        lappend subdirs include/readline\n        # ^^^ editline, on some systems, does not have its own header,\n        # and uses libreadline's header.\n      }\n      lappend subdirs include\n      # ^^^ The dirs and subdirs lists are, except for the inclusion\n      # of $prefix and editline, from the legacy configure script\n      set rlInc [proj-search-for-header-dir readline.h \\\n                 -dirs $dirs -subdirs $subdirs]\n      if {\"\" ne $rlInc} {\n        if {[string match */readline $rlInc]} {\n          set rlInc [file dirname $rlInc]; # shell #include's <readline/readline.h>\n        } elseif {[string match */editline $rlInc]} {\n          set editLibDef HAVE_EDITLINE\n          set rlInc [file dirname $rlInc]; # shell #include's <editline/readline.h>\n        }\n        set rlInc \"-I${rlInc}\"\n      }\n    }\n  } elseif {\"\" ne $rlInc && ![string match *-I* $rlInc]} {\n    proj-fatal \"Argument to --with-readline-cflags is intended to be CFLAGS and contain -I...\"\n  }\n\n  # If readline.h was found/specified, look for lib(readline|edit)...\n  #\n  # This is not quite straightforward because both libreadline and\n  # libedit typically require some other library which (according to\n  # legacy autotools-generated tests) provides tgetent(3). On some\n  # systems that's built into libreadline/edit, on some (most?) its in\n  # lib[n]curses, and on some it's in libtermcap.\n  set rlLib \"\"\n  if {\"\" ne $rlInc} {\n    set rlLib [opt-val with-readline-ldflags]\n    if {\"\" eq $rlLib || \"auto\" eq $rlLib} {\n      set rlLib \"\"\n      set libTerm \"\"\n      if {[proj-check-function-in-lib tgetent \"$editLibName ncurses curses termcap\"]} {\n        # ^^^ that libs list comes from the legacy configure script ^^^\n        set libTerm [get-define lib_tgetent]\n        undefine lib_tgetent\n      }\n      if {$editLibName eq $libTerm} {\n        set rlLib $libTerm\n      } elseif {[proj-check-function-in-lib readline $libsForReadline $libTerm]} {\n        set rlLib [get-define lib_readline]\n        lappend rlLib $libTerm\n        undefine lib_readline\n      }\n    }\n  }\n\n  # If we found a library, configure the build to use it...\n  if {\"\" ne $rlLib} {\n    if {\"editline\" eq $editLibName && \"HAVE_READLINE\" eq $editLibDef} {\n      # Alert the user that, despite outward appearances, we won't be\n      # linking to the GPL'd libreadline. Presumably that distinction is\n      # significant for those using --editline.\n      proj-indented-notice {\n        NOTE: the local libedit but uses <readline/readline.h> so we\n        will compile with -DHAVE_READLINE=1 but will link with\n        libedit.\n      }\n    }\n    set rlLib [join $rlLib]\n    set rlInc [join $rlInc]\n    define LDFLAGS_READLINE $rlLib\n    define CFLAGS_READLINE $rlInc\n    proj-assert {$editLibDef in {HAVE_READLINE HAVE_EDITLINE}}\n    proj-assert {$editLibName in {readline editline}}\n    sqlite-add-shell-opt -D${editLibDef}=1\n    msg-result \"Using $editLibName flags: $rlInc $rlLib\"\n    # Check whether rl_completion_matches() has a signature we can use\n    # and disable that sub-feature if it doesn't.\n    if {![cctest \\\n            -cflags \"$rlInc -D${editLibDef}\" -libs $rlLib -nooutput 1 -source {\n             #include <stdio.h>\n             #ifdef HAVE_EDITLINE\n             #include <editline/readline.h>\n             #else\n             #include <readline/readline.h>\n             #endif\n             static char * rcg(const char *z, int i){(void)z; (void)i; return 0;}\n             int main(void) {\n               char ** x = rl_completion_matches(\"one\", rcg);\n               (void)x;\n               return 0;\n             }\n           }]} {\n      proj-warn \"readline-style completion disabled due to rl_completion_matches() signature mismatch\"\n      sqlite-add-shell-opt -DSQLITE_OMIT_READLINE_COMPLETION\n    }\n    return $editLibName\n  }\n\n  if {$failIfNotFound} {\n    proj-fatal \"Explicit --$editLibName failed to find a matching library.\"\n  }\n  return \"none\"\n}; # sqlite-check-line-editing\nmsg-result \"Line-editing support for the sqlite3 shell: [sqlite-check-line-editing]\"\n\nproj-if-opt-truthy load-extension {\n  if {[proj-check-function-in-lib dlopen dl]} {\n    define LDFLAGS_DLOPEN [get-define lib_dlopen]\n    undefine lib_dlopen\n  } else {\n    user-error \"dlopen() not found. Use --disable-load-extension to bypass this check.\"\n  }\n} {\n  define LDFLAGS_DLOPEN \"\"\n  sqlite-add-feature-flag {-DSQLITE_OMIT_LOAD_EXTENSION=1}\n  msg-result \"Disabling loadable extensions.\"\n}\n\nproj-if-opt-truthy math {\n  if {![proj-check-function-in-lib ceil m]} {\n    user-error \"Cannot find libm functions. Use --disable-math to bypass this.\"\n  }\n  define LDFLAGS_MATH [get-define lib_ceil]\n  undefine lib_ceil\n  sqlite-add-feature-flag {-DSQLITE_ENABLE_MATH_FUNCTIONS}\n  msg-result \"Enabling math SQL functions [get-define LDFLAGS_MATH]\"\n} {\n  define LDFLAGS_MATH \"\"\n  msg-result \"Disabling math SQL functions\"\n}\n\n########################################################################\n# ICU - International Components for Unicode\n#\n# Handles these flags:\n#\n#  --with-icu-ldflags=LDFLAGS\n#  --with-icu-cflags=CFLAGS\n#  --with-icu-config[=auto | pkg-config | /path/to/icu-config]\n#  --enable-icu-collations\n#\n# --with-icu-config values:\n#\n#   - auto: use the first one of (pkg-config, icu-config) found on the\n#     system.\n#   - pkg-config: use only pkg-config to determine flags\n#   - /path/to/icu-config: use that to determine flags\n#\n# If --with-icu-config is used as neither pkg-config nor icu-config\n# are found, fail fatally.\n#\n# If both --with-icu-ldflags and --with-icu-config are provided, they\n# are cumulative.  If neither are provided, icu-collations is not\n# honored and a warning is emitted if it is provided.\n#\n# Design note: though we could automatically enable ICU if the\n# icu-config binary or (pkg-config icu-io) are found, we specifically\n# do not. ICU is always an opt-in feature.\nproc sqlite-check-icu {} {\n  rename sqlite-check-icu \"\"\n  define LDFLAGS_ICU [join [opt-val with-icu-ldflags \"\"]]\n  define CFLAGS_ICU [join [opt-val with-icu-cflags \"\"]]\n  if {[proj-opt-was-provided with-icu-config]} {\n    set icuConfigBin [opt-val with-icu-config]\n    set tryIcuConfigBin 1; # set to 0 if we end up using pkg-config\n    if {\"auto\" eq $icuConfigBin || \"pkg-config\" eq $icuConfigBin} {\n      if {[pkg-config-init 0] && [pkg-config icu-io]} {\n        # Maintenance reminder: historical docs say to use both of\n        # (icu-io, icu-uc). icu-uc lacks a required lib and icu-io has\n        # all of them on tested OSes.\n        set tryIcuConfigBin 0\n        define LDFLAGS_ICU [get-define PKG_ICU_IO_LDFLAGS]\n        define-append LDFLAGS_ICU [get-define PKG_ICU_IO_LIBS]\n        define CFLAGS_ICU [get-define PKG_ICU_IO_CFLAGS]\n      } elseif {\"pkg-config\" eq $icuConfigBin} {\n        proj-fatal \"pkg-config cannot find package icu-io\"\n      } else {\n        proj-assert {\"auto\" eq $icuConfigBin}\n      }\n    }\n    if {$tryIcuConfigBin} {\n      if {\"auto\" eq $icuConfigBin} {\n        set icuConfigBin [proj-first-bin-of \\\n                            /usr/local/bin/icu-config \\\n                            /usr/bin/icu-config]\n        if {\"\" eq $icuConfigBin} {\n          proj-fatal \"--with-icu-config=auto cannot find (pkg-config icu-io) or icu-config binary\"\n        }\n      }\n      if {[file-isexec $icuConfigBin]} {\n        set x [exec $icuConfigBin --ldflags]\n        if {\"\" eq $x} {\n          proj-fatal \"$icuConfigBin --ldflags returned no data\"\n        }\n        define-append LDFLAGS_ICU $x\n        set x [exec $icuConfigBin --cppflags]\n        define-append CFLAGS_ICU $x\n      } else {\n        proj-fatal \"--with-icu-config=$bin does not refer to an executable\"\n      }\n    }\n  }\n  set ldflags [define LDFLAGS_ICU [string trim [get-define LDFLAGS_ICU]]]\n  set cflags [define CFLAGS_ICU [string trim [get-define CFLAGS_ICU]]]\n  if {\"\" ne $ldflags} {\n    sqlite-add-feature-flag -shell -DSQLITE_ENABLE_ICU\n    msg-result \"Enabling ICU support with flags: $ldflags $cflags\"\n    if {[opt-bool icu-collations]} {\n      msg-result \"Enabling ICU collations.\"\n      sqlite-add-feature-flag -shell -DSQLITE_ENABLE_ICU_COLLATIONS\n      # Recall that shell.c builds with sqlite3.c\n    }\n  } elseif {[opt-bool icu-collations]} {\n    proj-warn \"ignoring --enable-icu-collations because neither --with-icu-ldflags nor --with-icu-config provided any linker flags\"\n  } else {\n    msg-result \"ICU support is disabled.\"\n  }\n}; # sqlite-check-icu\nsqlite-check-icu\n\n########################################################################\n# Check for the Emscripten SDK for building the web-based wasm\n# components.  The core lib and tools do not require this but ext/wasm\n# does.\napply {{} {\n  if {$::autosetup(srcdir) ne $::autosetup(builddir)} {\n    # The EMSDK pieces require writing to the original source tree\n    # even when doing an out-of-tree build. The ext/wasm pieces do not\n    # support an out-of-tree build so we catch that case and treat it\n    # as if EMSDK were not found.\n    msg-result \"Out-of tree build: not checking for EMSDK.\"\n    define EMCC_WRAPPER \"\"\n    return\n  }\n  set emccsh $::srcdir/tool/emcc.sh\n  if {![get-define HAVE_WASI_SDK] && [proj-check-emsdk]} {\n    define EMCC_WRAPPER $emccsh\n    proj-make-from-dot-in $emccsh\n    catch {exec chmod u+x $emccsh}\n  } else {\n    define EMCC_WRAPPER \"\"\n    file delete -force $emccsh\n  }\n}}\n\n########################################################################\n# Check for log(3) in libm and die with an error if it is not\n# found. $featureName should be the feature name which requires that\n# function (it's used only in error messages). defines LDFLAGS_MATH to\n# the required linker flags (which may be empty even if the math APIs\n# are found, depending on the OS).\nproc affirm-have-math {featureName} {\n  if {\"\" eq [get-define LDFLAGS_MATH \"\"]} {\n    if {![msg-quiet proj-check-function-in-lib log m]} {\n      user-error \"Missing math APIs for $featureName\"\n    }\n    define LDFLAGS_MATH [get-define lib_log \"\"]\n    undefine lib_log\n  }\n}\n\n########################################################################\n# Handle various SQLITE_ENABLE_... feature flags.\nmsg-result \"Feature flags...\"\nforeach {boolFlag featureFlag ifSetEvalThis} {\n  all         {} {\n    # The 'all' option must be first in this list.\n    proj-opt-set fts4\n    proj-opt-set fts5\n    proj-opt-set geopoly\n    proj-opt-set rtree\n    proj-opt-set session\n  }\n  fts4         -DSQLITE_ENABLE_FTS4    {affirm-have-math fts4}\n  fts5         -DSQLITE_ENABLE_FTS5    {affirm-have-math fts5}\n  geopoly      -DSQLITE_ENABLE_GEOPOLY {proj-opt-set rtree}\n  rtree        -DSQLITE_ENABLE_RTREE   {}\n  session      {-DSQLITE_ENABLE_SESSION -DSQLITE_ENABLE_PREUPDATE_HOOK} {}\n  update-limit -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT {}\n  memsys5      -DSQLITE_ENABLE_MEMSYS5 {}\n  memsys3      {} {\n    if {[opt-bool memsys5]} {\n      proj-warn \"not enabling memsys3 because memsys5 is enabled.\"\n      expr 0\n    } else {\n      sqlite-add-feature-flag -DSQLITE_ENABLE_MEMSYS3\n    }\n  }\n  scanstatus     -DSQLITE_ENABLE_STMT_SCANSTATUS {}\n} {\n  proj-if-opt-truthy $boolFlag {\n    sqlite-add-feature-flag $featureFlag\n    if {0 != [eval $ifSetEvalThis] && \"all\" ne $boolFlag} {\n      msg-result \"  + $boolFlag\"\n    }\n  } {\n    if {\"all\" ne $boolFlag} {\n      msg-result \"  - $boolFlag\"\n    }\n  }\n}\n\n########################################################################\n# Invert the above loop's logic for some SQLITE_OMIT_...  cases. If\n# config option $boolFlag is false, [sqlite-add-feature-flag\n# $featureFlag], where $featureFlag is intended to be\n# -DSQLITE_OMIT_...\nforeach {boolFlag featureFlag} {\n  json        -DSQLITE_OMIT_JSON\n} {\n  if {[proj-opt-truthy $boolFlag]} {\n    msg-result \"  + $boolFlag\"\n  } else {\n    sqlite-add-feature-flag $featureFlag\n    msg-result \"  - $boolFlag\"\n  }\n}\n\n#########################################################################\n# Show the final feature flag sets:\napply {{} {\n  set oFF [get-define OPT_FEATURE_FLAGS]\n  if {\"\" ne $oFF} {\n    define OPT_FEATURE_FLAGS [lsort -unique $oFF]\n    msg-result \"Library feature flags: [get-define OPT_FEATURE_FLAGS]\"\n  }\n  set oFF [get-define OPT_SHELL]\n  if {\"\" ne $oFF} {\n    define OPT_SHELL [lsort -unique $oFF]\n    msg-result \"Shell options: [get-define OPT_SHELL]\"\n  }\n  unset oFF\n}}\n\n########################################################################\n# \"Re-export\" the autoconf-conventional --XYZdir flags into something\n# which is more easily overridable from a make invocation. See the docs\n# for [proj-remap-autoconf-dir-vars] for the explanation of why.\n#\n# We do this late in the config process, immediately before we export\n# the Makefile and other generated files, so that configure tests\n# which make make use of the autotools-conventional flags\n# (e.g. [proj-check-rpath]) may do so before we \"mangle\" them here.\nproj-remap-autoconf-dir-vars\n\n########################################################################\n# Generate the output files.\n#\n# Potential TODO (unclear): in sqlite3.pc.in, do we need to include\n# any CFLAGS_READLINE, CFLAGS_ZLIB, etc in its \"Cflags:\" section?\nproj-make-from-dot-in -touch Makefile sqlite3.pc\nmake-config-header sqlite_cfg.h \\\n  -bare {SIZEOF_* HAVE_DECL_*} \\\n  -none {HAVE_CFLAG_* LDFLAGS_* SH_* SQLITE_AUTORECONFIG\n    TARGET_* USE_GCOV TCL_*} \\\n  -auto {HAVE_* PACKAGE_*} \\\n  -none *\nproj-touch sqlite_cfg.h ; # help avoid frequent unnecessary @SQLITE_AUTORECONFIG@\n\n########################################################################\n# Some build-dev/debug-only output\nproj-if-opt-truthy dump-defines {\n  make-config-header $::DUMP_DEFINES_TXT \\\n    -bare {SQLITE_OS* SQLITE_DEBUG USE_*} \\\n    -str {BIN_* CC LD AR LDFLAG* OPT_*} \\\n    -auto {*}\n  # achtung: ^^^^ whichever SQLITE_OS_foo flag which is set to 0 will\n  # get _undefined_ here unless it's part of the -bare set.\n  if {\"\" ne $DUMP_DEFINES_JSON} {\n    msg-result \"--dump-defines is creating $::DUMP_DEFINES_JSON\"\n    ########################################################################\n    # Dump config-defines.json...\n    # Demonstrate (mis?)handling of spaces in JSON-export array values:\n    # define-append OPT_FOO.list {\"-DFOO=bar baz\" -DBAR=\"baz barre\"}\n    define OPT_FEATURE_FLAGS.list [get-define OPT_FEATURE_FLAGS]\n    define OPT_SHELL.list [get-define OPT_SHELL]\n    set dumpDefsOpt {\n      -bare {SIZEOF_* HAVE_DECL_*}\n      -none {HAVE_CFLAG_* LDFLAGS_* SH_* SQLITE_AUTORECONFIG TARGET_* USE_GCOV TCL_*}\n      -array {*.list}\n      -auto {OPT_* PACKAGE_* HAVE_*}\n    }\n    if {[opt-bool defines-json-include-lowercase]} {\n      lappend dumpDefsOpt -none {lib_*} ; # remnants from proj-check-function-in-lib and friends\n      lappend dumpDefsOpt -auto {[a-z]*}\n    }\n    lappend dumpDefsOpt -none *\n    proj-dump-defs-json $DUMP_DEFINES_JSON {*}$dumpDefsOpt\n    undefine OPT_FEATURE_FLAGS.list\n    undefine OPT_SHELL.list\n  }\n}\n\n########################################################################\n# Perform some high-level validation on the generated files...\n#\n# 1) Ensure that no unresolved @VAR@ placeholders are in files which\n#    use those.\n#\n# 2) TBD\napply {{} {\n  # Check #1: ensure that files which get filtered for @VAR@ do not\n  # contain any unresolved @VAR@ refs. That may indicate an\n  # unexported/unused var or a typo.\n  foreach f \"Makefile sqlite3.pc $::srcdir/tool/emcc.sh\" {\n    if {![file exists $f]} continue\n    set lnno 1\n    foreach line [proj-file-content-list $f] {\n      if {[regexp {(@[A-Za-z_]+@)} $line match]} {\n        error \"Unresolved reference to $match at line $lnno of $f\"\n      }\n      incr lnno\n    }\n  }\n}}\n"
        },
        {
          "name": "autoconf",
          "type": "tree",
          "content": null
        },
        {
          "name": "autosetup",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 0.142578125,
          "content": "#!/bin/sh\ndir=\"`dirname \"$0\"`/autosetup\"\n#@@INITCHECK@@#\nWRAPPER=\"$0\"; export WRAPPER; exec \"`\"$dir/autosetup-find-tclsh\"`\" \"$dir/autosetup\" \"$@\"\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "magic.txt",
          "type": "blob",
          "size": 1.525390625,
          "content": "# This file contains suggested magic(5) text for the unix file(1)\n# utility for recognizing SQLite3 databases.\n#\n# When SQLite is used as an application file format, it is desirable to\n# have file(1) recognize the database file as being with the specific\n# application.  You can set the application_id for a database file\n# using:\n#\n#     PRAGMA application_id = INTEGER;\n#\n# INTEGER can be any signed 32-bit integer.  That integer is written as\n# a 4-byte big-endian integer into offset 68 of the database header.\n#\n# The Monotone application used \"PRAGMA user_version=1598903374;\" to set\n# its identifier long before \"PRAGMA application_id\" became available.\n# The user_version is very similar to application_id except that it is\n# stored at offset 60 instead of offset 68.  The application_id pragma\n# is preferred.  The rule using offset 60 for Monotone is for historical\n# compatibility only.\n#\n0    string  =SQLite\\ format\\ 3\n>68  belong  =0x0f055112  Fossil checkout -\n>68  belong  =0x0f055113  Fossil global configuration -\n>68  belong  =0x0f055111  Fossil repository -\n>68  belong  =0x42654462  Bentley Systems BeSQLite Database -\n>68  belong  =0x42654c6e  Bentley Systems Localization File -\n>60  belong  =0x5f4d544e  Monotone source repository -\n>68  belong  =0x47504b47  OGC GeoPackage file -\n>68  belong  =0x47503130  OGC GeoPackage version 1.0 file -\n>68  belong  =0x45737269  Esri Spatially-Enabled Database -\n>68  belong  =0x4d504258  MBTiles tileset -\n>68  belong  =0x6a035744  TeXnicard card database\n>0   string  =SQLite      SQLite3 database\n"
        },
        {
          "name": "main.mk",
          "type": "blob",
          "size": 76.2138671875,
          "content": "#!/do/not/make\n# ^^^^ help out editors which guess this file's type.\n###############################################################################\n# This is the main makefile for sqlite. It expects to be included from\n# a higher-level makefile which configures any dynamic state needed by\n# this one (as documented below).\n#\n# Maintenance reminders:\n#\n#  - This file must remain devoid of GNU Make-isms.  i.e. it must be\n#  POSIX Make compatible. \"bmake\" (BSD make) is available on most\n#  Linux systems, so compatibility is relatively easy to test.  As a\n#  harmless exception, this file sometimes uses $(MAKEFILE_LIST) as a\n#  dependency. That var, in GNU Make, lists all of the makefile\n#  currently loaded.\n#\n# The variables listed below must be defined before this script is\n# invoked. This file will use defaults, very possibly invalid, for any\n# which are not defined.\n########################################################################\nall:\n#\n# $(TOP) =\n#\n# The toplevel directory of the source tree.  For canonical builds\n# this is the directory that contains this \"Makefile.in\" and the\n# \"configure.in\" script. For out-of-tree builds, this will differ\n# from $(PWD).\n#\nTOP ?= $(PWD)\n#\n# $(PACKAGE_VERSION) =\n#\n# The MAJOR.MINOR.PATCH version number of this build.\n#\nPACKAGE_VERSION ?=\n#\n# $(B.cc) =\n#\n# C Compiler and options for use in building executables that will run\n# on the platform that is doing the build.\n#\nB.cc ?= $(CC)\n#\n# $(T.cc) =\n#\n# C Compiler and options for use in building executables that will run\n# on the target platform.  This is usually the same as B.cc, unless you\n# are cross-compiling. Note that it should only contain flags which\n# are used by _all_ build targets.  Flags needed only by specific\n# targets are defined elsewhere and applied on a per-target basis.\n#\nT.cc ?= $(B.cc)\n#\n# $(AR) =\n#\n# Tool used to build a static library from object files, without its\n# arguments. $(AR.flags) are its flags for creating a lib.\n#\nAR       ?= ar\nAR.flags ?= cr\n#\n# $(B.exe) =\n#\n# File extension for executables on the build platform. \".exe\" for\n# Windows and \"\" everywhere else.\n#\nB.exe ?=\n#\n# $(B.dll) and $(B.lib) =\n#\n# The DLL resp. static library counterparts of $(B.exe).\n#\nB.dll ?= .so\nB.lib ?= .a\n#\n# $(T.exe) =\n#\n# File extension for executables on the target platform. \".exe\" for\n# Windows and \"\" everywhere else.\n#\nT.exe ?= $(B.exe)\n#\n# $(T.dll) and $(T.lib) =\n#\n# The DLL resp. static library counterparts of $(T.exe).\n#\nT.dll ?= $(B.dll)\nT.lib ?= $(B.lib)\n#\n# $(TCLSH_CMD) =\n#\n# The canonical tclsh.\n#\nTCLSH_CMD ?= tclsh\n#\n# JimTCL is part of the autosetup suite and is suitable for all\n# current in-tree code-generation TCL jobs, but it requires that we\n# build it with non-default flags. Note that the build tree will, if\n# no system-level tclsh is found, also have a ./jimsh0 binary. That\n# one is a bare-bones build for the configure process, whereas we need\n# to build it with another option enabled for use with the various\n# code generators.\n#\n# JIMSH requires a leading path component, even if it's ./, so that it\n# can be used as a shell command.\n#\n# On Windows platforms, if -DHAVE_REALPATH does not work then try\n# -DHAVE__FULLPATH (note the double-underscore).\n#\nCFLAGS.jimsh ?= -DHAVE_REALPATH\nJIMSH ?= ./jimsh$(T.exe)\n#\n# $(B.tclsh) =\n#\n# The TCL interpreter for in-tree code generation. May be either the\n# in-tree JimTCL ($(JIMSH)) or the canonical TCL ($(TCLSH_CMD). If\n# it's JimTCL, it must be compiled with -DHAVE_REALPATH or\n# -DHAVE__FULLPATH.\n#\nB.tclsh ?= $(JIMSH)\n\n#\n# Autotools-conventional vars which are (in this tree) used only by\n# package installation rules and for generating sqlite3.pc (pkg-config\n# data file).\n#\n# The following ${XYZdir} vars are provided for the sake of clients\n# who expect to be able to override these using autotools-conventional\n# dir name vars.\n#\nprefix      ?= /usr/local\ndatadir     ?= $(prefix)/share\nmandir      ?= $(datadir)/man\nincludedir  ?= $(prefix)/include\nexec_prefix ?= $(prefix)\nbindir      ?= $(exec_prefix)/bin\nlibdir      ?= $(exec_prefix)/lib\n# This makefile does not use any of:\n# sbindir        ?= $(exec_prefix)/sbin\n# sysconfdir     ?= /etc\n# sharedstatedir ?= $(prefix)/com\n# localstatedir  ?= /var\n# runstatedir    ?= /run\n# infodir        ?= $(datadir)/info\n# libexecdir     ?= $(exec_prefix)/libexec\n### end of autotools-compatible install dir vars\n\n\n#\n# $(LDFLAGS.{feature}) and $(CFLAGS.{feature}) =\n#\n# Linker resp. C/CPP flags required by a specific feature, e.g.\n# $(LDFLAGS.pthread) or $(CFLAGS.readline).\n#\n# Rather that stuffing all CFLAGS and LDFLAGS into a single set, we\n# break them down on a per-feature basis and expect the build targets\n# to use the one(s) it needs.\n#\nLDFLAGS.zlib ?= -lz\nLDFLAGS.math ?= -lm\nLDFLAGS.rpath ?= -Wl,-rpath -Wl,$(prefix)/lib\nLDFLAGS.pthread ?= -lpthread\nLDFLAGS.dlopen ?= -ldl\nLDFLAGS.shlib ?= -shared\nLDFLAGS.icu ?= # -licui18n -licuuc -licudata\nCFLAGS.icu ?=\nLDFLAGS.libsqlite3.soname ?= # see https://sqlite.org/src/forumpost/5a3b44f510df8ded\n# libreadline (or a workalike):\n# To activate readline in the shell: SHELL_OPT = -DHAVE_READLINE=1\nLDFLAGS.readline ?= -lreadline # these vary across platforms\nCFLAGS.readline ?= -I$(prefix)/include\n# ^^^ When using linenoise instead of readline, do something like:\n# SHELL_OPT += -DHAVE_LINENOISE=1\n# CFLAGS.readline = -I$(HOME)/linenoise $(HOME)/linenoise/linenoise.c\n# LDFLAGS.readline = # empty\n\n#\n#\n# $(INSTALL) =\n#\n# Tool for installing files and directories. It must be compatible\n# with conventional Unix /usr/bin/install. Note that libtool's\n# install-sh is _not_ compatible with this because it _moves_ targets\n# during installation, which may break the build of targets which are\n# built after others are installed.\n#\nINSTALL ?= install\n#\n# $(ENABLE_SHARED) =\n#\n# 1 if libsqlite3.$(T.dll) should be built.\n#\nENABLE_SHARED ?= 1\n#\n# $(ENABLE_STATIC) =\n#\n# 1 if libsqlite3.$(T.lib) should be built. Some components,\n# e.g. libtclsqlite3 and some test apps, implicitly require the static\n# library and will ignore this preference.\n#\nENABLE_STATIC ?= 1\n#\n# $(USE_AMALGAMATION)\n#\n# 1 if the amalgamation (sqlite3.c/h) should be built/used, otherwise\n# the library is built from all of its original source files.\n# Certaint tools, like sqlite3$(T.exe), require the amalgamation and\n# will ignore this preference.\n#\nUSE_AMALGAMATION ?= 1\n#\n# $(LINK_TOOLS_DYNAMICALLY)\n#\n# If 1, certain binaries which typically statically link against\n# libsqlite3 or its component object files will instead link against\n# the DLL. The caveat is that running such builds from the source tree\n# may require that the user specifically prepend \".\" to their\n# $LD_LIBRARY_PATH so that the dynamic linker does not pick up a\n# libsqlite3.so from outside the source tree. Alternately, symlinking\n# the in-build-tree $(libsqlite3.SO) to some dir in the system's\n# library path will work for giving the apps access to the in-tree\n# DLL.\n#\nLINK_TOOLS_DYNAMICALLY ?= 0\n#\n# $(AMALGAMATION_GEN_FLAGS) =\n#\n# Optional flags for the amalgamation generator.\n#\nAMALGAMATION_GEN_FLAGS ?= --linemacros=0\n#\n# $(OPT_FEATURE_FLAGS) =\n#\n# Preprocessor flags for enabling and disabling specific libsqlite3\n# features (-DSQLITE_OMIT*, -DSQLITE_ENABLE*). The same set of OMIT\n# and ENABLE flags must be passed to the LEMON parser generator and\n# the mkkeywordhash tool as well. This is normally set by the\n# configure process, and passing a custom value to a\n# coonfigure-filtered Makefile may not work.\n#\n# When using the canonical makefile, add $(OPTIONS)=... on the make\n# command line to append additional options to the\n# $(OPT_FEATURE_FLAGS). Note that some flags, because they influence\n# generation of the SQL parser, only work if the build is specifically\n# configured to account for them. Adding them later, when compiling\n# the amalgamation separately, may or may not work.\n#\n# $(OPTS)=... is another way of influencing C compilation. It is\n# distinctly separate from $(OPTIONS) and $(OPT_FEATURE_FLAGS) but,\n# like those, $(OPTS) applies to all invocations of $(T.cc). The\n# configure process does not set either of $(OPTIONS) or $(OPTS).\n#\nOPT_FEATURE_FLAGS ?=\n#\n# $(SHELL_OPT) =\n#\n# CFLAGS specific to the sqlite3 CLI shell app and its close cousins.\n#\nSHELL_OPT ?=\n#\n# TCL_CONFIG_SH must, for some of the build targets, refer to a valid\n# tclConfig.sh. That script will be used to populate most of the other\n# TCL-related vars the build needs. The core library does not require\n# TCL, but TCL is needed for running tests and certain tools, e.g.\n# sqlite3_analyzer.\n#\nTCL_CONFIG_SH ?=\n#\n# $(HAVE_WASI_SDK) =\n#\n# Set to 1 when building with the WASI SDK. This disables certain\n# build targets. It is expected that the invoker sets $(CC), $(LD),\n# and $(AR) to their counterparts from the wasi-sdk.\n#\nHAVE_WASI_SDK ?= 0\n#\n# ... and many, many more. Sane defaults are selected where possible.\n#\n# With the above-described defined, the rest of this make script will\n# build the project's deliverables and testing tools.\n################################################################################\nall:\tsqlite3.h sqlite3.c\n\n########################################################################\n########################################################################\n# Modifying anything after this point should not be necessary for most\n# builds.\n########################################################################\n########################################################################\n\n#\n# $(CFLAGS.env) holds the any $(CFLAGS) provided at configure- or\n# make-time (the latter overriding the former).\n#\n# $(CFLAGS) should ideally only contain flags which are relevant for\n# all binaries built for the target platform. However, many people\n# like to pass it to \"make\" without realizing that it applies to\n# dozens of deliverables, and they override core flags (like -fPIC)\n# when doing so. To help work around that, we expect all core-most\n# CFLAGS, e.g. -fPIC, to be set in $(CFLAGS.core). That enables people\n# to pass their other CFLAGS without triggering, e.g., \"recompile with\n# -fPIC\" errors.\n#\n# Historical note: the pre-3.48 build does not honor CPPFLAGS passed\n# to make, so we do not do so here. Both the legacy and 3.48+ builds\n# support CPPFLAGS passed at configure-time, and combines them with\n# the configure-time CFLAGS.\n#\nCFLAGS.core ?=\nCFLAGS.env  = $(CFLAGS)\nT.cc += $(CFLAGS.core) $(CFLAGS.env)\n\n#\n# $(LDFLAGS.configure) represents any LDFLAGS=... the client passes to\n# the configure process.  The historical build enabled passing-on of\n# user-provided LDFLAGS at configure-time but not make-time. That\n# behavior is not possible to fully emulate here because this makefile\n# is not filtered by the configure script, so we instead\n# \"soft-enforce\" it by using a level of indirection, which clients who\n# read this can (but are not advised to!) bypass by passing\n# LDFLAGS.configure=... to this makefile. (We do not guaranty this\n# variable name to be stable, so do not rely on that capability!)\n#\n# A significant difference from the legacy build:\n#\n# The legacy build applied such LDFLAGS to all link operations for all\n# deliverables. The 3.48+ build applies them (as of this writing) more\n# selectively: search this file LDFLAGS.configure to see where they're\n# set.\n#\nLDFLAGS.configure ?=\n\n#\n# The difference between $(OPT_FEATURE_FLAGS) and $(OPTS) is that the\n# former is historically provided by the configure script, whereas\n# $(OPTS) is intended to be provided as arguments to the make\n# invocation.\n#\nT.cc += $(OPT_FEATURE_FLAGS)\n\n#\n# Add in any optional global compilation flags on the make command\n# line i.e.  make \"OPTS=-DSQLITE_ENABLE_FOO=1 -DSQLITE_OMIT_FOO=1\".\n#\nT.cc += $(OPTS)\n\n#\n# $(INSTALL) invocation for use with non-executable files.\n#\nINSTALL.noexec = $(INSTALL) -m 0644\n# ^^^ do not use GNU-specific flags to $(INSTALL), e.g. --mode=...\n\n#\n# $(T.compile) = generic target platform compiler invocation,\n# differing only from $(T.cc) in that it appends $(T.compile.extras),\n# which are primarily intended for use with gcov-related flags.\n#\nT.compile = $(T.cc) $(T.compile.extras)\n\n#\n# $(T.cc.sqlite) is $(T.cc) plus any flags which are desired for the\n# library as a whole, but not necessarily needed for every binary. It\n# will normally get initially populated with flags by the\n# configure-generated makefile.\n#\nT.cc.sqlite ?= $(T.cc)\n\n#\n# $(CFLAGS.intree_includes) = -I... flags relevant specifically to\n# this tree, including any subdirectories commonly needed for building\n# various tools.\n#\nCFLAGS.intree_includes = \\\n    -I. -I$(TOP)/src -I$(TOP)/ext/rtree -I$(TOP)/ext/icu \\\n    -I$(TOP)/ext/fts3 -I$(TOP)/ext/session \\\n    -I$(TOP)/ext/misc\nT.cc.sqlite += $(CFLAGS.intree_includes)\n\n#\n# $(T.cc.extension) = compiler invocation for loadable extensions.\n#\nT.cc.extension = $(T.compile) -I. -I$(TOP)/src -DSQLITE_CORE\n\n#\n# $(T.link) = compiler invocation for when the target will be an\n# executable.\n#\n# $(T.link.extras) = optional config-specific flags for $(T.link),\n# primarily intended for use with gcov-related flags.\n#\nT.link = $(T.cc.sqlite) $(T.link.extras)\n#\n# $(T.link.shared) = $(T.link) invocation specifically for shared libraries\n#\nT.link.shared = $(T.link) $(LDFLAGS.shlib)\n\n#\n# $(LDFLAGS.libsqlite3) should be used with any deliverable for which\n# any of the following apply:\n#\n#  - Results in building libsqlite3.so\n#  - Compiles sqlite3.c in to an application\n#  - Links with libsqlite3.a\n#  - Links in either of $(LIBOBJSO) or $(LIBOBJS1)\n#\n# Note that these flags are for the target build platform, not\n# necessarily localhost.  i.e. it should be used with $(T.cc.sqlite)\n# or $(T.link) but not $(B.cc).\n#\nLDFLAGS.libsqlite3 = \\\n  $(LDFLAGS.rpath) $(LDFLAGS.pthread) \\\n  $(LDFLAGS.math) $(LDFLAGS.dlopen) \\\n  $(LDFLAGS.zlib) $(LDFLAGS.icu) \\\n  $(LDFLAGS.configure)\n\n#\n# $(install-dir.XYZ) = dirs for installation.\n#\n# Design note: these should arguably all be defined with surrounding\n# double-quotes so that targets which have spaces in their paths will\n# work, but that leads to Make treating the quotes as part of the dir\n# name, which in turn leads to it never finding a matching name in the\n# filesystem and always invoking ($(INSTALL) -d ...) for them. The\n# moral of this story is that spaces in installation paths will break\n# the install process.\n#\ninstall-dir.bin = $(DESTDIR)$(bindir)\ninstall-dir.lib = $(DESTDIR)$(libdir)\ninstall-dir.include = $(DESTDIR)$(includedir)\ninstall-dir.pkgconfig = $(DESTDIR)$(libdir)/pkgconfig\ninstall-dir.man1 = $(DESTDIR)$(mandir)/man1\ninstall-dir.all = $(install-dir.bin) $(install-dir.include) \\\n  $(install-dir.lib) $(install-dir.man1) \\\n  $(install-dir.pkgconfig)\n$(install-dir.all):\n\t$(INSTALL) -d \"$@\"\n\n#\n# After jimsh is compiled, we run some sanity checks to ensure that\n# it was built in a way compatible with this project's scripts:\n#\n# 1) Ensure that it was built with realpath() or _fullpath() support.\n# Without that flag the [file normalize] command will always resolve\n# to an empty string.\n#\n# 2) Ensure that it is built with -DJIM_COMPAT (which may be\n# hard-coded into jimsh0.c). Without this, the [expr] command\n# accepts only a single argument.\n#\n$(JIMSH): $(TOP)/autosetup/jimsh0.c\n\t$(B.cc) -o $@ $(CFLAGS.jimsh) $(TOP)/autosetup/jimsh0.c\n\t@if [ x = \"x$$($(JIMSH) -e 'file normalize $(JIMSH)' 2>/dev/null)\" ]; then \\\n\t\techo \"$(JIMSH) was built without -DHAVE_REALPATH or -DHAVE__FULLPATH.\" 1>&2; \\\n\t\texit 1; \\\n\tfi\n\t@if [ x3 != \"x$$($(JIMSH) -e 'expr 1 + 2' 2>/dev/null)\" ]; then \\\n\t\techo \"$(JIMSH) was built without -DJIM_COMPAT.\" 1>&2; \\\n\t\texit 1; \\\n\tfi\ndistclean-jimsh:\n\trm -f $(JIMSH)\ndistclean: distclean-jimsh\n\n#\n# $(MAKE_SANITY_CHECK) = a set of checks for various make vars which\n# must be provided to this file before including it. If any are\n# missing, this target fails. It does (almost) no semantic validation,\n# only checks to see that appropriate vars are not empty.\n#\n# Note that $(MAKEFILE_LIST) is a GNU-make-ism but its use is harmless\n# in other flavors of Make.\n#\nMAKE_SANITY_CHECK = .main.mk.checks\n$(MAKE_SANITY_CHECK): $(MAKEFILE_LIST) $(TOP)/auto.def\n\t@if [ x = \"x$(TOP)\" ]; then echo \"Missing TOP var\" 1>&2; exit 1; fi\n\t@if [ ! -d \"$(TOP)\" ]; then echo \"$(TOP) is not a directory\" 1>&2; exit 1; fi\n\t@if [ ! -f \"$(TOP)/auto.def\" ]; then echo \"$(TOP) does not appear to be the top-most source dir\" 1>&2; exit 1; fi\n\t@if [ x = \"x$(PACKAGE_VERSION)\" ]; then echo \"PACKAGE_VERSION must be set to the library's X.Y.Z-format version number\" 1>&2; exit 1; fi\n\t@if [ x = \"x$(B.cc)\" ]; then echo \"Missing B.cc var\" 1>&2; exit 1; fi\n\t@if [ x = \"x$(T.cc)\" ]; then echo \"Missing T.cc var\" 1>&2; exit 1; fi\n\t@if [ x = \"x$(B.tclsh)\" ]; then echo \"Missing B.tclsh var\" 1>&2; exit 1; fi\n\t@if [ x = \"x$(AR)\" ]; then echo \"Missing AR var\" 1>&2; exit 1; fi\n\ttouch $@\nclean-sanity-check:\n\trm -f $(MAKE_SANITY_CHECK)\nclean: clean-sanity-check\n\n#\n# Object files for the SQLite library (non-amalgamation).\n#\nLIBOBJS0 = alter.o analyze.o attach.o auth.o \\\n         backup.o bitvec.o btmutex.o btree.o build.o \\\n         callback.o complete.o ctime.o \\\n         date.o dbpage.o dbstat.o delete.o \\\n         expr.o fault.o fkey.o \\\n         fts3.o fts3_aux.o fts3_expr.o fts3_hash.o fts3_icu.o \\\n         fts3_porter.o fts3_snippet.o fts3_tokenizer.o fts3_tokenizer1.o \\\n         fts3_tokenize_vtab.o \\\n         fts3_unicode.o fts3_unicode2.o fts3_write.o \\\n         fts5.o \\\n         func.o global.o hash.o \\\n         icu.o insert.o json.o legacy.o loadext.o \\\n         main.o malloc.o mem0.o mem1.o mem2.o mem3.o mem5.o \\\n         memdb.o memjournal.o \\\n         mutex.o mutex_noop.o mutex_unix.o mutex_w32.o \\\n         notify.o opcodes.o os.o os_kv.o os_unix.o os_win.o \\\n         pager.o parse.o pcache.o pcache1.o pragma.o prepare.o printf.o \\\n         random.o resolve.o rowset.o rtree.o \\\n         sqlite3session.o select.o sqlite3rbu.o status.o stmt.o \\\n         table.o threads.o tokenize.o treeview.o trigger.o \\\n         update.o upsert.o utf.o util.o vacuum.o \\\n         vdbe.o vdbeapi.o vdbeaux.o vdbeblob.o vdbemem.o vdbesort.o \\\n         vdbetrace.o vdbevtab.o vtab.o \\\n         wal.o walker.o where.o wherecode.o whereexpr.o \\\n         window.o\nLIBOBJS = $(LIBOBJS0)\n\n#\n# Object files for the amalgamation.\n#\nLIBOBJS1 = sqlite3.o\n\n#\n# Determine the real value of LIBOBJ based on whether the amalgamation\n# is enabled or not.\n#\nLIBOBJ = $(LIBOBJS$(USE_AMALGAMATION))\n$(LIBOBJ): $(MAKE_SANITY_CHECK)\n\n#\n# All of the source code files.\n#\nSRC = \\\n  $(TOP)/src/alter.c \\\n  $(TOP)/src/analyze.c \\\n  $(TOP)/src/attach.c \\\n  $(TOP)/src/auth.c \\\n  $(TOP)/src/backup.c \\\n  $(TOP)/src/bitvec.c \\\n  $(TOP)/src/btmutex.c \\\n  $(TOP)/src/btree.c \\\n  $(TOP)/src/btree.h \\\n  $(TOP)/src/btreeInt.h \\\n  $(TOP)/src/build.c \\\n  $(TOP)/src/callback.c \\\n  $(TOP)/src/complete.c \\\n  $(TOP)/src/ctime.c \\\n  $(TOP)/src/date.c \\\n  $(TOP)/src/dbpage.c \\\n  $(TOP)/src/dbstat.c \\\n  $(TOP)/src/delete.c \\\n  $(TOP)/src/expr.c \\\n  $(TOP)/src/fault.c \\\n  $(TOP)/src/fkey.c \\\n  $(TOP)/src/func.c \\\n  $(TOP)/src/global.c \\\n  $(TOP)/src/hash.c \\\n  $(TOP)/src/hash.h \\\n  $(TOP)/src/hwtime.h \\\n  $(TOP)/src/insert.c \\\n  $(TOP)/src/json.c \\\n  $(TOP)/src/legacy.c \\\n  $(TOP)/src/loadext.c \\\n  $(TOP)/src/main.c \\\n  $(TOP)/src/malloc.c \\\n  $(TOP)/src/mem0.c \\\n  $(TOP)/src/mem1.c \\\n  $(TOP)/src/mem2.c \\\n  $(TOP)/src/mem3.c \\\n  $(TOP)/src/mem5.c \\\n  $(TOP)/src/memdb.c \\\n  $(TOP)/src/memjournal.c \\\n  $(TOP)/src/msvc.h \\\n  $(TOP)/src/mutex.c \\\n  $(TOP)/src/mutex.h \\\n  $(TOP)/src/mutex_noop.c \\\n  $(TOP)/src/mutex_unix.c \\\n  $(TOP)/src/mutex_w32.c \\\n  $(TOP)/src/notify.c \\\n  $(TOP)/src/os.c \\\n  $(TOP)/src/os.h \\\n  $(TOP)/src/os_common.h \\\n  $(TOP)/src/os_setup.h \\\n  $(TOP)/src/os_kv.c \\\n  $(TOP)/src/os_unix.c \\\n  $(TOP)/src/os_win.c \\\n  $(TOP)/src/os_win.h \\\n  $(TOP)/src/pager.c \\\n  $(TOP)/src/pager.h \\\n  $(TOP)/src/parse.y \\\n  $(TOP)/src/pcache.c \\\n  $(TOP)/src/pcache.h \\\n  $(TOP)/src/pcache1.c \\\n  $(TOP)/src/pragma.c \\\n  $(TOP)/src/pragma.h \\\n  $(TOP)/src/prepare.c \\\n  $(TOP)/src/printf.c \\\n  $(TOP)/src/random.c \\\n  $(TOP)/src/resolve.c \\\n  $(TOP)/src/rowset.c \\\n  $(TOP)/src/select.c \\\n  $(TOP)/src/status.c \\\n  $(TOP)/src/shell.c.in \\\n  $(TOP)/src/sqlite.h.in \\\n  $(TOP)/src/sqlite3ext.h \\\n  $(TOP)/src/sqliteInt.h \\\n  $(TOP)/src/sqliteLimit.h \\\n  $(TOP)/src/table.c \\\n  $(TOP)/src/tclsqlite.c \\\n  $(TOP)/src/threads.c \\\n  $(TOP)/src/tokenize.c \\\n  $(TOP)/src/treeview.c \\\n  $(TOP)/src/trigger.c \\\n  $(TOP)/src/utf.c \\\n  $(TOP)/src/update.c \\\n  $(TOP)/src/upsert.c \\\n  $(TOP)/src/util.c \\\n  $(TOP)/src/vacuum.c \\\n  $(TOP)/src/vdbe.c \\\n  $(TOP)/src/vdbe.h \\\n  $(TOP)/src/vdbeapi.c \\\n  $(TOP)/src/vdbeaux.c \\\n  $(TOP)/src/vdbeblob.c \\\n  $(TOP)/src/vdbemem.c \\\n  $(TOP)/src/vdbesort.c \\\n  $(TOP)/src/vdbetrace.c \\\n  $(TOP)/src/vdbevtab.c \\\n  $(TOP)/src/vdbeInt.h \\\n  $(TOP)/src/vtab.c \\\n  $(TOP)/src/vxworks.h \\\n  $(TOP)/src/wal.c \\\n  $(TOP)/src/wal.h \\\n  $(TOP)/src/walker.c \\\n  $(TOP)/src/where.c \\\n  $(TOP)/src/wherecode.c \\\n  $(TOP)/src/whereexpr.c \\\n  $(TOP)/src/whereInt.h \\\n  $(TOP)/src/window.c\n\n# Source code for extensions\n#\nSRC += \\\n  $(TOP)/ext/fts3/fts3.c \\\n  $(TOP)/ext/fts3/fts3.h \\\n  $(TOP)/ext/fts3/fts3Int.h \\\n  $(TOP)/ext/fts3/fts3_aux.c \\\n  $(TOP)/ext/fts3/fts3_expr.c \\\n  $(TOP)/ext/fts3/fts3_hash.c \\\n  $(TOP)/ext/fts3/fts3_hash.h \\\n  $(TOP)/ext/fts3/fts3_icu.c \\\n  $(TOP)/ext/fts3/fts3_porter.c \\\n  $(TOP)/ext/fts3/fts3_snippet.c \\\n  $(TOP)/ext/fts3/fts3_tokenizer.h \\\n  $(TOP)/ext/fts3/fts3_tokenizer.c \\\n  $(TOP)/ext/fts3/fts3_tokenizer1.c \\\n  $(TOP)/ext/fts3/fts3_tokenize_vtab.c \\\n  $(TOP)/ext/fts3/fts3_unicode.c \\\n  $(TOP)/ext/fts3/fts3_unicode2.c \\\n  $(TOP)/ext/fts3/fts3_write.c\nSRC += \\\n  $(TOP)/ext/icu/sqliteicu.h \\\n  $(TOP)/ext/icu/icu.c\nSRC += \\\n  $(TOP)/ext/rtree/rtree.h \\\n  $(TOP)/ext/rtree/rtree.c \\\n  $(TOP)/ext/rtree/geopoly.c\nSRC += \\\n  $(TOP)/ext/session/sqlite3session.c \\\n  $(TOP)/ext/session/sqlite3session.h\nSRC += \\\n  $(TOP)/ext/rbu/sqlite3rbu.h \\\n  $(TOP)/ext/rbu/sqlite3rbu.c\nSRC += \\\n  $(TOP)/ext/misc/stmt.c\n\n# Generated source code files\n#\nSRC += \\\n  keywordhash.h \\\n  opcodes.c \\\n  opcodes.h \\\n  parse.c \\\n  parse.h \\\n  sqlite_cfg.h \\\n  shell.c \\\n  sqlite3.h\n\n# Source code to the test files.\n#\nTESTSRC = \\\n  $(TOP)/src/test1.c \\\n  $(TOP)/src/test2.c \\\n  $(TOP)/src/test3.c \\\n  $(TOP)/src/test4.c \\\n  $(TOP)/src/test5.c \\\n  $(TOP)/src/test6.c \\\n  $(TOP)/src/test8.c \\\n  $(TOP)/src/test9.c \\\n  $(TOP)/src/test_autoext.c \\\n  $(TOP)/src/test_backup.c \\\n  $(TOP)/src/test_bestindex.c \\\n  $(TOP)/src/test_blob.c \\\n  $(TOP)/src/test_btree.c \\\n  $(TOP)/src/test_config.c \\\n  $(TOP)/src/test_delete.c \\\n  $(TOP)/src/test_demovfs.c \\\n  $(TOP)/src/test_devsym.c \\\n  $(TOP)/src/test_fs.c \\\n  $(TOP)/src/test_func.c \\\n  $(TOP)/src/test_hexio.c \\\n  $(TOP)/src/test_init.c \\\n  $(TOP)/src/test_intarray.c \\\n  $(TOP)/src/test_journal.c \\\n  $(TOP)/src/test_malloc.c \\\n  $(TOP)/src/test_md5.c \\\n  $(TOP)/src/test_multiplex.c \\\n  $(TOP)/src/test_mutex.c \\\n  $(TOP)/src/test_onefile.c \\\n  $(TOP)/src/test_osinst.c \\\n  $(TOP)/src/test_pcache.c \\\n  $(TOP)/src/test_quota.c \\\n  $(TOP)/src/test_rtree.c \\\n  $(TOP)/src/test_schema.c \\\n  $(TOP)/src/test_superlock.c \\\n  $(TOP)/src/test_syscall.c \\\n  $(TOP)/src/test_tclsh.c \\\n  $(TOP)/src/test_tclvar.c \\\n  $(TOP)/src/test_thread.c \\\n  $(TOP)/src/test_vdbecov.c \\\n  $(TOP)/src/test_vfs.c \\\n  $(TOP)/src/test_windirent.c \\\n  $(TOP)/src/test_window.c \\\n  $(TOP)/src/test_wsd.c       \\\n  $(TOP)/ext/fts3/fts3_term.c \\\n  $(TOP)/ext/fts3/fts3_test.c  \\\n  $(TOP)/ext/session/test_session.c \\\n  $(TOP)/ext/recover/sqlite3recover.c \\\n  $(TOP)/ext/recover/dbdata.c \\\n  $(TOP)/ext/recover/test_recover.c \\\n  $(TOP)/ext/intck/test_intck.c  \\\n  $(TOP)/ext/intck/sqlite3intck.c \\\n  $(TOP)/ext/rbu/test_rbu.c\n\n# Statically linked extensions\n#\nTESTSRC += \\\n  $(TOP)/ext/expert/sqlite3expert.c \\\n  $(TOP)/ext/expert/test_expert.c \\\n  $(TOP)/ext/misc/amatch.c \\\n  $(TOP)/ext/misc/appendvfs.c \\\n  $(TOP)/ext/misc/basexx.c \\\n  $(TOP)/ext/misc/carray.c \\\n  $(TOP)/ext/misc/cksumvfs.c \\\n  $(TOP)/ext/misc/closure.c \\\n  $(TOP)/ext/misc/csv.c \\\n  $(TOP)/ext/misc/decimal.c \\\n  $(TOP)/ext/misc/eval.c \\\n  $(TOP)/ext/misc/explain.c \\\n  $(TOP)/ext/misc/fileio.c \\\n  $(TOP)/ext/misc/fuzzer.c \\\n  $(TOP)/ext/fts5/fts5_tcl.c \\\n  $(TOP)/ext/fts5/fts5_test_mi.c \\\n  $(TOP)/ext/fts5/fts5_test_tok.c \\\n  $(TOP)/ext/misc/ieee754.c \\\n  $(TOP)/ext/misc/mmapwarm.c \\\n  $(TOP)/ext/misc/nextchar.c \\\n  $(TOP)/ext/misc/normalize.c \\\n  $(TOP)/ext/misc/percentile.c \\\n  $(TOP)/ext/misc/prefixes.c \\\n  $(TOP)/ext/misc/qpvtab.c \\\n  $(TOP)/ext/misc/randomjson.c \\\n  $(TOP)/ext/misc/regexp.c \\\n  $(TOP)/ext/misc/remember.c \\\n  $(TOP)/ext/misc/series.c \\\n  $(TOP)/ext/misc/spellfix.c \\\n  $(TOP)/ext/misc/stmtrand.c \\\n  $(TOP)/ext/misc/totype.c \\\n  $(TOP)/ext/misc/unionvtab.c \\\n  $(TOP)/ext/misc/wholenumber.c \\\n  $(TOP)/ext/misc/zipfile.c \\\n  $(TOP)/ext/rtree/test_rtreedoc.c\n\n# Source code to the library files needed by the test fixture\n#\nTESTSRC2 = \\\n  $(TOP)/src/attach.c \\\n  $(TOP)/src/backup.c \\\n  $(TOP)/src/bitvec.c \\\n  $(TOP)/src/btree.c \\\n  $(TOP)/src/build.c \\\n  $(TOP)/src/ctime.c \\\n  $(TOP)/src/date.c \\\n  $(TOP)/src/dbpage.c \\\n  $(TOP)/src/dbstat.c \\\n  $(TOP)/src/expr.c \\\n  $(TOP)/src/func.c \\\n  $(TOP)/src/global.c \\\n  $(TOP)/src/insert.c \\\n  $(TOP)/src/wal.c \\\n  $(TOP)/src/main.c \\\n  $(TOP)/src/mem5.c \\\n  $(TOP)/src/os.c \\\n  $(TOP)/src/os_kv.c \\\n  $(TOP)/src/os_unix.c \\\n  $(TOP)/src/os_win.c \\\n  $(TOP)/src/pager.c \\\n  $(TOP)/src/pragma.c \\\n  $(TOP)/src/prepare.c \\\n  $(TOP)/src/printf.c \\\n  $(TOP)/src/random.c \\\n  $(TOP)/src/pcache.c \\\n  $(TOP)/src/pcache1.c \\\n  $(TOP)/src/select.c \\\n  $(TOP)/src/tokenize.c \\\n  $(TOP)/src/treeview.c \\\n  $(TOP)/src/utf.c \\\n  $(TOP)/src/util.c \\\n  $(TOP)/src/vdbeapi.c \\\n  $(TOP)/src/vdbeaux.c \\\n  $(TOP)/src/vdbe.c \\\n  $(TOP)/src/vdbemem.c \\\n  $(TOP)/src/vdbetrace.c \\\n  $(TOP)/src/vdbevtab.c \\\n  $(TOP)/src/where.c \\\n  $(TOP)/src/wherecode.c \\\n  $(TOP)/src/whereexpr.c \\\n  $(TOP)/src/window.c \\\n  parse.c \\\n  $(TOP)/ext/fts3/fts3.c \\\n  $(TOP)/ext/fts3/fts3_aux.c \\\n  $(TOP)/ext/fts3/fts3_expr.c \\\n  $(TOP)/ext/fts3/fts3_tokenizer.c \\\n  $(TOP)/ext/fts3/fts3_write.c \\\n  $(TOP)/ext/session/sqlite3session.c \\\n  $(TOP)/ext/misc/stmt.c \\\n  fts5.c\n\n# Header files used by all library source files.\n#\nHDR = \\\n   $(TOP)/src/btree.h \\\n   $(TOP)/src/btreeInt.h \\\n   $(TOP)/src/hash.h \\\n   $(TOP)/src/hwtime.h \\\n   keywordhash.h \\\n   $(TOP)/src/msvc.h \\\n   $(TOP)/src/mutex.h \\\n   opcodes.h \\\n   $(TOP)/src/os.h \\\n   $(TOP)/src/os_common.h \\\n   $(TOP)/src/os_setup.h \\\n   $(TOP)/src/os_win.h \\\n   $(TOP)/src/pager.h \\\n   $(TOP)/src/pcache.h \\\n   parse.h  \\\n   $(TOP)/src/pragma.h \\\n   sqlite3.h  \\\n   $(TOP)/src/sqlite3ext.h \\\n   $(TOP)/src/sqliteInt.h  \\\n   $(TOP)/src/sqliteLimit.h \\\n   $(TOP)/src/vdbe.h \\\n   $(TOP)/src/vdbeInt.h \\\n   $(TOP)/src/vxworks.h \\\n   $(TOP)/src/whereInt.h \\\n   sqlite_cfg.h\n# Reminder: sqlite_cfg.h is typically created by the configure script\n\n# Header files used by extensions\n#\nEXTHDR += \\\n  $(TOP)/ext/fts3/fts3.h \\\n  $(TOP)/ext/fts3/fts3Int.h \\\n  $(TOP)/ext/fts3/fts3_hash.h \\\n  $(TOP)/ext/fts3/fts3_tokenizer.h\nEXTHDR += \\\n  $(TOP)/ext/rtree/rtree.h \\\n  $(TOP)/ext/rtree/geopoly.c\nEXTHDR += \\\n  $(TOP)/ext/icu/sqliteicu.h\nEXTHDR += \\\n  $(TOP)/ext/rtree/sqlite3rtree.h\n\n#\n# Executables needed for testing\n#\nTESTPROGS = \\\n  testfixture$(T.exe) \\\n  sqlite3$(T.exe) \\\n  sqlite3_analyzer$(T.exe) \\\n  sqldiff$(T.exe) \\\n  dbhash$(T.exe) \\\n  sqltclsh$(T.exe)\n\n# Databases containing fuzzer test cases\n#\nFUZZDATA = \\\n  $(TOP)/test/fuzzdata1.db \\\n  $(TOP)/test/fuzzdata2.db \\\n  $(TOP)/test/fuzzdata3.db \\\n  $(TOP)/test/fuzzdata4.db \\\n  $(TOP)/test/fuzzdata5.db \\\n  $(TOP)/test/fuzzdata6.db \\\n  $(TOP)/test/fuzzdata7.db \\\n  $(TOP)/test/fuzzdata8.db\n\n#\n# Standard options to testfixture\n#\nTESTOPTS = --verbose=file --output=test-out.txt\n\n#\n# Extra compiler options for various shell tools\n#\n# Note that some of these will only apply when embedding sqlite3.c\n# into the shell, as these flags are not otherwise passed on to the\n# library.\nSHELL_OPT += -DSQLITE_DQS=0\nSHELL_OPT += -DSQLITE_ENABLE_FTS4\n#SHELL_OPT += -DSQLITE_ENABLE_FTS5\nSHELL_OPT += -DSQLITE_ENABLE_RTREE\nSHELL_OPT += -DSQLITE_ENABLE_EXPLAIN_COMMENTS\nSHELL_OPT += -DSQLITE_ENABLE_UNKNOWN_SQL_FUNCTION\nSHELL_OPT += -DSQLITE_ENABLE_STMTVTAB\nSHELL_OPT += -DSQLITE_ENABLE_DBPAGE_VTAB\nSHELL_OPT += -DSQLITE_ENABLE_DBSTAT_VTAB\nSHELL_OPT += -DSQLITE_ENABLE_BYTECODE_VTAB\nSHELL_OPT += -DSQLITE_ENABLE_OFFSET_SQL_FUNC\nSHELL_OPT += -DSQLITE_STRICT_SUBTYPE=1\nFUZZERSHELL_OPT =\nFUZZCHECK_OPT += -I$(TOP)/test\nFUZZCHECK_OPT += -I$(TOP)/ext/recover\nFUZZCHECK_OPT += \\\n  -DSQLITE_OSS_FUZZ \\\n  -DSQLITE_ENABLE_BYTECODE_VTAB \\\n  -DSQLITE_ENABLE_DBPAGE_VTAB \\\n  -DSQLITE_ENABLE_DBSTAT_VTAB \\\n  -DSQLITE_ENABLE_BYTECODE_VTAB \\\n  -DSQLITE_ENABLE_DESERIALIZE \\\n  -DSQLITE_ENABLE_EXPLAIN_COMMENTS \\\n  -DSQLITE_ENABLE_FTS3_PARENTHESIS \\\n  -DSQLITE_ENABLE_FTS4 \\\n  -DSQLITE_ENABLE_FTS5 \\\n  -DSQLITE_ENABLE_GEOPOLY \\\n  -DSQLITE_ENABLE_MATH_FUNCTIONS \\\n  -DSQLITE_ENABLE_MEMSYS5 \\\n  -DSQLITE_ENABLE_NORMALIZE \\\n  -DSQLITE_ENABLE_OFFSET_SQL_FUNC \\\n  -DSQLITE_ENABLE_PREUPDATE_HOOK \\\n  -DSQLITE_ENABLE_RTREE \\\n  -DSQLITE_ENABLE_SESSION \\\n  -DSQLITE_ENABLE_STMTVTAB \\\n  -DSQLITE_ENABLE_UNKNOWN_SQL_FUNCTION \\\n  -DSQLITE_ENABLE_STAT4 \\\n  -DSQLITE_ENABLE_STMT_SCANSTATUS \\\n  -DSQLITE_MAX_MEMORY=50000000 \\\n  -DSQLITE_MAX_MMAP_SIZE=0 \\\n  -DSQLITE_OMIT_LOAD_EXTENSION \\\n  -DSQLITE_PRINTF_PRECISION_LIMIT=1000 \\\n  -DSQLITE_PRIVATE=\"\" \\\n  -DSQLITE_STRICT_SUBTYPE=1 \\\n  -DSQLITE_STATIC_RANDOMJSON\n\nFUZZCHECK_SRC += $(TOP)/test/fuzzcheck.c\nFUZZCHECK_SRC += $(TOP)/test/ossfuzz.c\nFUZZCHECK_SRC += $(TOP)/test/fuzzinvariants.c\nFUZZCHECK_SRC += $(TOP)/ext/recover/dbdata.c\nFUZZCHECK_SRC += $(TOP)/ext/recover/sqlite3recover.c\nFUZZCHECK_SRC += $(TOP)/test/vt02.c\nFUZZCHECK_SRC += $(TOP)/ext/misc/percentile.c\nFUZZCHECK_SRC += $(TOP)/ext/misc/randomjson.c\nDBFUZZ_OPT =\nST_OPT = -DSQLITE_OS_KV_OPTIONAL\n\n$(TCLSH_CMD):\nhas_tclsh84:\n\tsh $(TOP)/tool/cktclsh.sh 8.4 $(TCLSH_CMD)\n\ttouch has_tclsh84\n\nhas_tclsh85:\n\tsh $(TOP)/tool/cktclsh.sh 8.5 $(TCLSH_CMD)\n\ttouch has_tclsh85\n\n#\n# $(T.tcl.env.sh) is a shell script intended for source'ing to set\n# various TCL config info in the current shell context:\n#\n# - All info exported by tclConfig.sh\n#\n# - TCLLIBDIR = the first entry from TCL's $auto_path which refers to\n#   an existing dir, then append /sqlite3 to it. If TCLLIBDIR is\n#   provided via the environment, that value is used instead.\n#\n# Maintenance reminder: the ./ at the start of the name is required or /bin/sh\n# refuses to source it:\n#\n#   . .tclenv.sh    ==> .tclenv.sh: not found\n#   . ./.tclenv.sh  ==> fine\n#\n# It took half an hour to figure that out.\n#\nT.tcl.env.sh = ./.tclenv.sh\n$(T.tcl.env.sh): $(TCLSH_CMD) $(TCL_CONFIG_SH) $(MAKEFILE_LIST)\n\t@if [ x = \"x$(TCL_CONFIG_SH)\" ]; then \\\n\t\techo 'TCL_CONFIG_SH must be set to point to a \"tclConfig.sh\"' 1>&2; exit 1; \\\n\tfi; \\\n\tif [ x != \"x$(TCLLIBDIR)\" ]; then echo TCLLIBDIR=\"$(TCLLIBDIR)\"; else \\\n\t\tld= ; \\\n\t\tfor d in `echo \"puts stdout \\\\$$auto_path\" | $(TCLSH_CMD)`; do \\\n\t\t\tif [ -d \"$$d\" ]; then ld=$$d; break; fi; \\\n\t\tdone; \\\n\t\tif [ x = \"x$$ld\" ]; then echo \"Cannot determine TCLLIBDIR\" 1>&2; exit 1; fi; \\\n\t\techo \"TCLLIBDIR=$$ld/sqlite3\"; \\\n\tfi > $@; \\\n\techo \". \\\"$(TCL_CONFIG_SH)\\\" || exit \\$$?\" >> $@; \\\n\techo \"Created $@\"\n\n#\n# $(T.tcl.env.source) is shell code to be run as part of any\n# compilation or link step which requires vars from\n# $(TCL_CONFIG_SH). All targets which use this should also have a\n# dependency on $(T.tcl.env.sh).\n#\nT.tcl.env.source = . $(T.tcl.env.sh) || exit $$?\n\n#\n# $(T.compile.tcl) and $(T.link.tcl) are TCL-specific counterparts for $(T.compile)\n# and $(T.link) which first invoke $(T.tcl.env.source). Any targets which used them\n# must have a dependency on $(T.tcl.env.sh)\n#\nT.compile.tcl = $(T.tcl.env.source); $(T.compile) $(CFLAGS.intree_includes)\nT.link.tcl = $(T.tcl.env.source); $(T.link)\n\n#\n# This target creates a directory named \"tsrc\" and fills it with\n# copies of all of the C source code and header files needed to\n# build on the target system.  Some of the C source code and header\n# files are automatically generated.  This target takes care of\n# all that automatic generation.\n#\n.target_source: $(MAKE_SANITY_CHECK) $(SRC) $(TOP)/tool/vdbe-compress.tcl \\\n    fts5.c $(B.tclsh)\n\trm -rf tsrc\n\tmkdir tsrc\n\tcp -f $(SRC) tsrc\n\trm -f tsrc/sqlite.h.in tsrc/parse.y\n\t$(B.tclsh) $(TOP)/tool/vdbe-compress.tcl $(OPTS) <tsrc/vdbe.c >vdbe.new\n\tmv -f vdbe.new tsrc/vdbe.c\n\tcp fts5.c fts5.h tsrc\n\ttouch .target_source\n\nlibsqlite3.LIB = libsqlite3$(T.lib)\nlibsqlite3.SO = libsqlite3$(T.dll)\n\n# Rules to build the LEMON compiler generator\n#\nlemon$(B.exe): $(MAKE_SANITY_CHECK) $(TOP)/tool/lemon.c $(TOP)/tool/lempar.c\n\t$(B.cc) -o $@ $(TOP)/tool/lemon.c\n\tcp $(TOP)/tool/lempar.c .\n\n# Rules to build the program that generates the source-id\n#\nmksourceid$(B.exe): $(MAKE_SANITY_CHECK) $(TOP)/tool/mksourceid.c\n\t$(B.cc) -o $@ $(TOP)/tool/mksourceid.c\n\nsqlite3.h: $(MAKE_SANITY_CHECK) $(TOP)/src/sqlite.h.in \\\n    $(TOP)/manifest mksourceid$(B.exe) \\\n\t\t$(TOP)/VERSION $(B.tclsh)\n\t$(B.tclsh) $(TOP)/tool/mksqlite3h.tcl $(TOP) >sqlite3.h\n\nsqlite3.c:\t.target_source sqlite3.h $(TOP)/tool/mksqlite3c.tcl src-verify$(B.exe) \\\n\t\t$(B.tclsh)\n\t$(B.tclsh) $(TOP)/tool/mksqlite3c.tcl $(AMALGAMATION_GEN_FLAGS) $(EXTRA_SRC)\n\tcp tsrc/sqlite3ext.h .\n\tcp $(TOP)/ext/session/sqlite3session.h .\n\nsqlite3r.h: sqlite3.h $(B.tclsh)\n\t$(B.tclsh) $(TOP)/tool/mksqlite3h.tcl $(TOP) --enable-recover >sqlite3r.h\n\nsqlite3r.c: sqlite3.c sqlite3r.h $(B.tclsh)\n\tcp $(TOP)/ext/recover/sqlite3recover.c tsrc/\n\tcp $(TOP)/ext/recover/sqlite3recover.h tsrc/\n\tcp $(TOP)/ext/recover/dbdata.c tsrc/\n\t$(B.tclsh) $(TOP)/tool/mksqlite3c.tcl --enable-recover $(AMALGAMATION_GEN_FLAGS) $(EXTRA_SRC)\n\nsqlite3ext.h: .target_source\n\tcp tsrc/sqlite3ext.h .\n\n# Rules to build individual *.o files from generated *.c files. This\n# applies to:\n#\n#     parse.o\n#     opcodes.o\n#\nDEPS_OBJ_COMMON = $(MAKE_SANITY_CHECK) $(HDR)\nparse.o:\tparse.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c parse.c\n\nopcodes.o:\topcodes.c\n\t$(T.cc.sqlite) -c opcodes.c\n\n# Rules to build individual *.o files from files in the src directory.\n#\nalter.o:\t$(TOP)/src/alter.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/alter.c\n\nanalyze.o:\t$(TOP)/src/analyze.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/analyze.c\n\nattach.o:\t$(TOP)/src/attach.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/attach.c\n\nauth.o:\t$(TOP)/src/auth.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/auth.c\n\nbackup.o:\t$(TOP)/src/backup.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/backup.c\n\nbitvec.o:\t$(TOP)/src/bitvec.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/bitvec.c\n\nbtmutex.o:\t$(TOP)/src/btmutex.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/btmutex.c\n\nbtree.o:\t$(TOP)/src/btree.c $(DEPS_OBJ_COMMON) $(TOP)/src/pager.h\n\t$(T.cc.sqlite) -c $(TOP)/src/btree.c\n\nbuild.o:\t$(TOP)/src/build.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/build.c\n\ncallback.o:\t$(TOP)/src/callback.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/callback.c\n\ncomplete.o:\t$(TOP)/src/complete.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/complete.c\n\nctime.o:\t$(TOP)/src/ctime.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/ctime.c\n\ndate.o:\t$(TOP)/src/date.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/date.c\n\ndbpage.o:\t$(TOP)/src/dbpage.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/dbpage.c\n\ndbstat.o:\t$(TOP)/src/dbstat.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/dbstat.c\n\ndelete.o:\t$(TOP)/src/delete.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/delete.c\n\nexpr.o:\t$(TOP)/src/expr.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/expr.c\n\nfault.o:\t$(TOP)/src/fault.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/fault.c\n\nfkey.o:\t$(TOP)/src/fkey.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/fkey.c\n\nfunc.o:\t$(TOP)/src/func.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/func.c\n\nglobal.o:\t$(TOP)/src/global.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/global.c\n\nhash.o:\t$(TOP)/src/hash.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/hash.c\n\ninsert.o:\t$(TOP)/src/insert.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/insert.c\n\njson.o:\t$(TOP)/src/json.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/json.c\n\nlegacy.o:\t$(TOP)/src/legacy.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/legacy.c\n\nloadext.o:\t$(TOP)/src/loadext.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/loadext.c\n\nmain.o:\t$(TOP)/src/main.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/main.c\n\nmalloc.o:\t$(TOP)/src/malloc.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/malloc.c\n\nmem0.o:\t$(TOP)/src/mem0.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mem0.c\n\nmem1.o:\t$(TOP)/src/mem1.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mem1.c\n\nmem2.o:\t$(TOP)/src/mem2.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mem2.c\n\nmem3.o:\t$(TOP)/src/mem3.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mem3.c\n\nmem5.o:\t$(TOP)/src/mem5.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mem5.c\n\nmemdb.o:\t$(TOP)/src/memdb.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/memdb.c\n\nmemjournal.o:\t$(TOP)/src/memjournal.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/memjournal.c\n\nmutex.o:\t$(TOP)/src/mutex.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mutex.c\n\nmutex_noop.o:\t$(TOP)/src/mutex_noop.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mutex_noop.c\n\nmutex_unix.o:\t$(TOP)/src/mutex_unix.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mutex_unix.c\n\nmutex_w32.o:\t$(TOP)/src/mutex_w32.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/mutex_w32.c\n\nnotify.o:\t$(TOP)/src/notify.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/notify.c\n\npager.o:\t$(TOP)/src/pager.c $(DEPS_OBJ_COMMON) $(TOP)/src/pager.h\n\t$(T.cc.sqlite) -c $(TOP)/src/pager.c\n\npcache.o:\t$(TOP)/src/pcache.c $(DEPS_OBJ_COMMON) $(TOP)/src/pcache.h\n\t$(T.cc.sqlite) -c $(TOP)/src/pcache.c\n\npcache1.o:\t$(TOP)/src/pcache1.c $(DEPS_OBJ_COMMON) $(TOP)/src/pcache.h\n\t$(T.cc.sqlite) -c $(TOP)/src/pcache1.c\n\nos.o:\t$(TOP)/src/os.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/os.c\n\nos_kv.o:\t$(TOP)/src/os_kv.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/os_kv.c\n\nos_unix.o:\t$(TOP)/src/os_unix.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/os_unix.c\n\nos_win.o:\t$(TOP)/src/os_win.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/os_win.c\n\npragma.o:\t$(TOP)/src/pragma.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/pragma.c\n\nprepare.o:\t$(TOP)/src/prepare.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/prepare.c\n\nprintf.o:\t$(TOP)/src/printf.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/printf.c\n\nrandom.o:\t$(TOP)/src/random.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/random.c\n\nresolve.o:\t$(TOP)/src/resolve.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/resolve.c\n\nrowset.o:\t$(TOP)/src/rowset.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/rowset.c\n\nselect.o:\t$(TOP)/src/select.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/select.c\n\nstatus.o:\t$(TOP)/src/status.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/status.c\n\nsqlite3.o:\tsqlite3.h sqlite3.c\n\t$(T.cc.sqlite) -c sqlite3.c\n\ntable.o:\t$(TOP)/src/table.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/table.c\n\nthreads.o:\t$(TOP)/src/threads.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/threads.c\n\ntokenize.o:\t$(TOP)/src/tokenize.c keywordhash.h $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/tokenize.c\n\ntreeview.o:\t$(TOP)/src/treeview.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/treeview.c\n\ntrigger.o:\t$(TOP)/src/trigger.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/trigger.c\n\nupdate.o:\t$(TOP)/src/update.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/update.c\n\nupsert.o:\t$(TOP)/src/upsert.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/upsert.c\n\nutf.o:\t$(TOP)/src/utf.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/utf.c\n\nutil.o:\t$(TOP)/src/util.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/util.c\n\nvacuum.o:\t$(TOP)/src/vacuum.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vacuum.c\n\nvdbe.o:\t$(TOP)/src/vdbe.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbe.c\n\nvdbeapi.o:\t$(TOP)/src/vdbeapi.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbeapi.c\n\nvdbeaux.o:\t$(TOP)/src/vdbeaux.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbeaux.c\n\nvdbeblob.o:\t$(TOP)/src/vdbeblob.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbeblob.c\n\nvdbemem.o:\t$(TOP)/src/vdbemem.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbemem.c\n\nvdbesort.o:\t$(TOP)/src/vdbesort.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbesort.c\n\nvdbetrace.o:\t$(TOP)/src/vdbetrace.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbetrace.c\n\nvdbevtab.o:\t$(TOP)/src/vdbevtab.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vdbevtab.c\n\nvtab.o:\t$(TOP)/src/vtab.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/vtab.c\n\nwal.o:\t$(TOP)/src/wal.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/wal.c\n\nwalker.o:\t$(TOP)/src/walker.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/walker.c\n\nwhere.o:\t$(TOP)/src/where.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/where.c\n\nwherecode.o:\t$(TOP)/src/wherecode.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/wherecode.c\n\nwhereexpr.o:\t$(TOP)/src/whereexpr.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/whereexpr.c\n\nwindow.o:\t$(TOP)/src/window.c $(DEPS_OBJ_COMMON)\n\t$(T.cc.sqlite) -c $(TOP)/src/window.c\n\ntclsqlite.o:\t$(T.tcl.env.sh) $(TOP)/src/tclsqlite.c $(DEPS_OBJ_COMMON)\n\t$(T.compile.tcl) -DUSE_TCL_STUBS=1 $$TCL_INCLUDE_SPEC \\\n\t\t-c $(TOP)/src/tclsqlite.c\n\ntclsqlite-shell.o:\t$(T.tcl.env.sh) $(TOP)/src/tclsqlite.c $(DEPS_OBJ_COMMON)\n\t$(T.compile.tcl) -DTCLSH -o $@ -c $(TOP)/src/tclsqlite.c $$TCL_INCLUDE_SPEC\n\ntclsqlite-stubs.o:\t$(T.tcl.env.sh) $(TOP)/src/tclsqlite.c $(DEPS_OBJ_COMMON)\n\t$(T.compile.tcl) -DUSE_TCL_STUBS=1 -o $@ -c $(TOP)/src/tclsqlite.c $$TCL_INCLUDE_SPEC\n\ntclsqlite3$(T.exe):\t$(T.tcl.env.sh) tclsqlite-shell.o $(libsqlite3.SO)\n\t$(T.link.tcl) -o $@ tclsqlite-shell.o \\\n\t\t$(libsqlite3.SO) $$TCL_INCLUDE_SPEC $$TCL_LIB_SPEC \\\n\t\t$(LDFLAGS.libsqlite3)\ntclsqlite3$(T.exe)-1: tclsqlite3$(T.exe)\ntclsqlite3$(T.exe)-0 tclsqlite3$(T.exe)-:\ntcl: tclsqlite3$(T.exe)-$(HAVE_TCL)\n\n# Rules to build opcodes.c and opcodes.h\n#\nopcodes.c:\topcodes.h $(TOP)/tool/mkopcodec.tcl $(B.tclsh)\n\t$(B.tclsh) $(TOP)/tool/mkopcodec.tcl opcodes.h >opcodes.c\n\nopcodes.h:\tparse.h $(TOP)/src/vdbe.c \\\n\t\t$(TOP)/tool/mkopcodeh.tcl $(B.tclsh)\n\tcat parse.h $(TOP)/src/vdbe.c | $(B.tclsh) $(TOP)/tool/mkopcodeh.tcl >opcodes.h\n\n# Rules to build parse.c and parse.h - the outputs of lemon.\n#\nparse.h:\tparse.c\n\nparse.c:\t$(TOP)/src/parse.y lemon$(B.exe)\n\tcp $(TOP)/src/parse.y .\n\t./lemon$(B.exe) $(OPT_FEATURE_FLAGS) $(OPTS) -S parse.y\n\nsqlite3rc.h:\t$(TOP)/src/sqlite3.rc $(TOP)/VERSION $(B.tclsh)\n\techo '#ifndef SQLITE_RESOURCE_VERSION' >$@\n\techo -n '#define SQLITE_RESOURCE_VERSION ' >>$@\n\tcat $(TOP)/VERSION | $(B.tclsh) $(TOP)/tool/replace.tcl exact . , >>$@\n\techo '#endif' >>sqlite3rc.h\n\nmkkeywordhash$(B.exe): $(TOP)/tool/mkkeywordhash.c\n\t$(B.cc) -o $@ $(OPT_FEATURE_FLAGS) $(OPTS) $(TOP)/tool/mkkeywordhash.c\nkeywordhash.h:\tmkkeywordhash$(B.exe)\n\t./mkkeywordhash$(B.exe) > $@\n\n#\n# sqlite3.c split into many smaller files.\n#\nsqlite3-all.c:\tsqlite3.c $(TOP)/tool/split-sqlite3c.tcl $(B.tclsh)\n\t$(B.tclsh) $(TOP)/tool/split-sqlite3c.tcl\n\n#\n# Static libsqlite3\n#\n$(libsqlite3.LIB): $(LIBOBJ)\n\t$(AR) $(AR.flags) $@ $(LIBOBJ)\n$(libsqlite3.LIB)-1: $(libsqlite3.LIB)\n$(libsqlite3.LIB)-0 $(libsqlite3.LIB)-:\nlib: $(libsqlite3.LIB)-$(ENABLE_STATIC)\nall: lib\n\n#\n# Dynamic libsqlite3\n#\n$(libsqlite3.SO):\t$(LIBOBJ)\n\t$(T.link.shared) -o $@ $(LIBOBJ) $(LDFLAGS.libsqlite3) \\\n\t\t$(LDFLAGS.libsqlite3.soname)\n$(libsqlite3.SO)-1: $(libsqlite3.SO)\n$(libsqlite3.SO)-0 $(libsqlite3.SO)-:\nso: $(libsqlite3.SO)-$(ENABLE_SHARED)\nall: so\n\n#\n# Install the $(libsqlite3.SO) as $(libsqlite3.SO).$(PACKAGE_VERSION)\n# and create symlinks which point to it:\n#\n# - libsqlite3.so.$(PACKAGE_VERSION)\n# - libsqlite3.so.0      =symlink-> libsqlite3.so.$(PACKAGE_VERSION) (see below)\n# - libsqlite3.so        =symlink-> libsqlite3.so.3\n#\n# N.B. we initially had a link named libsqlite3.so.3 but it's\n# unnecessary unless we want to set SONAME to libsqlite3.so.3, which\n# is also unnecessary.\n#\n# The link named libsqlite3.so.0 is provided in an attempt to reduce\n# downstream disruption when performing upgrades from pre-3.48 to a\n# version 3.48 or higher.  That name is considered a legacy remnant\n# and will eventually be removed from this installation process.\n#\n# Historically libtool installed the library like so:\n#\n#  libsqlite3.so     -> libsqlite3.so.0.8.6\n#  libsqlite3.so.0   -> libsqlite3.so.0.8.6\n#  libsqlite3.so.0.8.6\n#\n# The historical SQLite build always used a version number of 0.8.6\n# for reasons lost to history but having something to do with libtool\n# (which is no longer used in this tree). In order to retain filename\n# compatibility for systems which have libraries installed using those\n# conventions:\n#\n# 1) If libsqlite3.so.0.8.6 is found in the target installation\n#    directory then it is re-linked to point to the newer-style\n#    names. We cannot retain both the old and new installation because\n#    they both share the high-level name $(libsqlite3.SO). The\n#    down-side of this is that it may upset packaging tools when we\n#    replace libsqlite3.so (from a legacy package) with a new symlink.\n#\n# 2) If INSTALL_SO_086_LINK=1 and point (1) does not apply then links\n#    to the legacy-style names are created. The primary intent of this\n#    is to enable chains of operations such as the hypothetical (apt\n#    remove sqlite3-3.47.0 && apt install sqlite3-3.48.0). In such\n#    cases, condition (1) would never trigger but applications might\n#    still expect to see the legacy file names.\n#\n# In either case, libsqlite3.la, if found, is deleted because it would\n# contain stale state, refering to non-libtool-generated libraries.\n#\ninstall-so-1: $(install-dir.lib) $(libsqlite3.SO)\n\t$(INSTALL) $(libsqlite3.SO) \"$(install-dir.lib)\"\n\t@echo \"Setting up $(libsqlite3.SO) symlinks...\"; \\\n\t\tcd \"$(install-dir.lib)\" || exit $$?; \\\n\t\trm -f $(libsqlite3.SO).0 $(libsqlite3.SO).$(PACKAGE_VERSION) || exit $$?; \\\n\t\tmv $(libsqlite3.SO) $(libsqlite3.SO).$(PACKAGE_VERSION) || exit $$?; \\\n\t\tln -s $(libsqlite3.SO).$(PACKAGE_VERSION) $(libsqlite3.SO) || exit $$?; \\\n\t\tln -s $(libsqlite3.SO).$(PACKAGE_VERSION) $(libsqlite3.SO).0 || exit $$?; \\\n\t\tls -la $(libsqlite3.SO) $(libsqlite3.SO).[03]*; \\\n\t\tif [ -e $(libsqlite3.SO).0.8.6 ]; then \\\n\t\t\techo \"ACHTUNG: legacy libtool-compatible install found. Re-linking it...\"; \\\n\t\t\trm -f libsqlite3.la $(libsqlite3.SO).0.8.6 || exit $$?; \\\n\t\t\tln -s $(libsqlite3.SO).$(PACKAGE_VERSION) $(libsqlite3.SO).0.8.6 || exit $$?; \\\n\t\t\tls -la $(libsqlite3.SO).0.8.6; \\\n\t\telif [ x1 = \"x$(INSTALL_SO_086_LINK)\" ]; then \\\n\t\t\techo \"ACHTUNG: installing legacy libtool-style links because INSTALL_SO_086_LINK=1\"; \\\n\t\t\trm -f libsqlite3.la $(libsqlite3.SO).0.8.6 || exit $$?; \\\n\t\t\tln -s $(libsqlite3.SO).$(PACKAGE_VERSION) $(libsqlite3.SO).0.8.6 || exit $$?; \\\n\t\t\tls -la $(libsqlite3.SO).0.8.6; \\\n\t\tfi\ninstall-so-0 install-so-:\ninstall-so: install-so-$(ENABLE_SHARED)\ninstall: install-so\n\n#\n# Install $(libsqlite3.LIB)\n#\ninstall-lib-1: $(install-dir.lib) $(libsqlite3.LIB)\n\t$(INSTALL.noexec) $(libsqlite3.LIB) \"$(install-dir.lib)\"\ninstall-lib-0 install-lib-:\ninstall-lib: install-lib-$(ENABLE_STATIC)\ninstall: install-lib\n\n#\n# Install C header files\n#\ninstall-headers: sqlite3.h $(install-dir.include)\n\t$(INSTALL.noexec) sqlite3.h \"$(TOP)/src/sqlite3ext.h\" \"$(install-dir.include)\"\ninstall: install-headers\n\n#\n# libtclsqlite3...\n#\npkgIndex.tcl:\n\techo 'package ifneeded sqlite3 $(PACKAGE_VERSION) [list load [file join $$dir libtclsqlite3[info sharedlibextension]] sqlite3]' > $@\npkgIndex.tcl-1: pkgIndex.tcl\npkgIndex.tcl-0 pkgIndex.tcl-:\ntcl: pkgIndex.tcl-$(HAVE_TCL)\nlibtclsqlite3.SO = libtclsqlite3$(T.dll)\n$(libtclsqlite3.SO): $(T.tcl.env.sh) tclsqlite.o $(LIBOBJ)\n\t$(T.tcl.env.source); \\\n\t$(T.link.shared) -o $@ tclsqlite.o \\\n\t\t$$TCL_INCLUDE_SPEC $$TCL_STUB_LIB_SPEC $(LDFLAGS.libsqlite3) \\\n\t\t$(LIBOBJ) -Wl,-rpath,$$TCLLIBDIR\n# ^^^ that rpath bit is defined as TCL_LD_SEARCH_FLAGS in\n# tclConfig.sh, but it's defined in such a way as to be useless for a\n# _static_ makefile.\n$(libtclsqlite3.SO)-1: $(libtclsqlite3.SO)\n$(libtclsqlite3.SO)-0 $(libtclsqlite3.SO)-:\nlibtcl: $(libtclsqlite3.SO)-$(HAVE_TCL)\ntcl: libtcl\nall: tcl\n\ninstall-tcl-1: $(libtclsqlite3.SO) pkgIndex.tcl\n\t$(T.tcl.env.source); \\\n\t$(INSTALL) -d \"$(DESTDIR)$$TCLLIBDIR\"; \\\n\t$(INSTALL) $(libtclsqlite3.SO) \"$(DESTDIR)$$TCLLIBDIR\"; \\\n\t$(INSTALL.noexec) pkgIndex.tcl \"$(DESTDIR)$$TCLLIBDIR\"\ninstall-tcl-0 install-tcl-:\n\t@echo \"TCL support disabled, so not installing $(libtclsqlite3.SO)\"\ninstall-tcl: install-tcl-$(HAVE_TCL)\ninstall: install-tcl\n\ntclsqlite3.c:\tsqlite3.c\n\techo '#ifndef USE_SYSTEM_SQLITE' >tclsqlite3.c\n\tcat sqlite3.c >>tclsqlite3.c\n\techo '#endif /* USE_SYSTEM_SQLITE */' >>tclsqlite3.c\n\tcat $(TOP)/src/tclsqlite.c >>tclsqlite3.c\n\n#\n# $(CFLAGS.tclextension) = CFLAGS for the tclextension* targets.\n#\nCFLAGS.tclextension = $(CFLAGS.intree_includes) $(CFLAGS.env) $(OPT_FEATURE_FLAGS) $(OPTS)\n#\n# Build the SQLite TCL extension in a way that make it compatible\n# with whatever version of TCL is running as $TCLSH_CMD, possibly defined\n# by --with-tclsh=\n#\ntclextension: tclsqlite3.c\n\t$(TCLSH_CMD) $(TOP)/tool/buildtclext.tcl --build-only --cc \"$(T.cc)\" $(CFLAGS.tclextension)\n\n#\n# Install the SQLite TCL extension in a way that is appropriate for $TCLSH_CMD\n# to find it.\n#\ntclextension-install: tclsqlite3.c\n\t$(TCLSH_CMD) $(TOP)/tool/buildtclext.tcl --destdir \"$(DESTDIR)\" --cc \"$(T.cc)\" $(CFLAGS.tclextension)\n\n#\n# Uninstall the SQLite TCL extension that is used by $TCLSH_CMD.\n#\ntclextension-uninstall:\n\t$(TCLSH_CMD) $(TOP)/tool/buildtclext.tcl --uninstall\n\n#\n# List all installed the SQLite TCL extensions that is are accessible\n# by $TCLSH_CMD, including prior versions.\n#\ntclextension-list:\n\t@ $(TCLSH_CMD) $(TOP)/tool/buildtclext.tcl --info\n\n# Verify that the SQLite TCL extension that is loaded by default\n# in $(TCLSH_CMD) is the same as the version of SQLite for the\n# current source tree\n#\ntclextension-verify: sqlite3.h\n\t@ $(TCLSH_CMD) $(TOP)/tool/buildtclext.tcl --version-check\n\n#\n# FTS5 things\n#\nFTS5_SRC = \\\n   $(TOP)/ext/fts5/fts5.h \\\n   $(TOP)/ext/fts5/fts5Int.h \\\n   $(TOP)/ext/fts5/fts5_aux.c \\\n   $(TOP)/ext/fts5/fts5_buffer.c \\\n   $(TOP)/ext/fts5/fts5_main.c \\\n   $(TOP)/ext/fts5/fts5_config.c \\\n   $(TOP)/ext/fts5/fts5_expr.c \\\n   $(TOP)/ext/fts5/fts5_hash.c \\\n   $(TOP)/ext/fts5/fts5_index.c \\\n   fts5parse.c fts5parse.h \\\n   $(TOP)/ext/fts5/fts5_storage.c \\\n   $(TOP)/ext/fts5/fts5_tokenize.c \\\n   $(TOP)/ext/fts5/fts5_unicode2.c \\\n   $(TOP)/ext/fts5/fts5_varint.c \\\n   $(TOP)/ext/fts5/fts5_vocab.c  \\\n\nfts5parse.c:\t$(TOP)/ext/fts5/fts5parse.y lemon$(B.exe)\n\tcp $(TOP)/ext/fts5/fts5parse.y .\n\trm -f fts5parse.h\n\t./lemon$(B.exe) $(OPTS) -S fts5parse.y\n\nfts5parse.h: fts5parse.c\n\nfts5.c: $(FTS5_SRC) $(B.tclsh)\n\t$(B.tclsh) $(TOP)/ext/fts5/tool/mkfts5c.tcl\n\tcp $(TOP)/ext/fts5/fts5.h .\n\nfts5.o:\tfts5.c $(DEPS_OBJ_COMMON) $(EXTHDR)\n\t$(T.cc.extension) -c fts5.c\n\nsqlite3rbu.o:\t$(TOP)/ext/rbu/sqlite3rbu.c $(DEPS_OBJ_COMMON) $(EXTHDR)\n\t$(T.cc.extension) -c $(TOP)/ext/rbu/sqlite3rbu.c\n\n\n#\n# Rules to build the 'testfixture' application.\n#\n# If using the amalgamation, use sqlite3.c directly to build the test\n# fixture.  Otherwise link against libsqlite3.a.  (This distinction is\n# necessary because the test fixture requires non-API symbols which are\n# hidden when the library is built via the amalgamation).\n#\nTESTFIXTURE_FLAGS  = -DSQLITE_TEST=1 -DSQLITE_CRASH_TEST=1\nTESTFIXTURE_FLAGS += -DTCLSH_INIT_PROC=sqlite3TestInit\nTESTFIXTURE_FLAGS += -DSQLITE_SERVER=1 -DSQLITE_PRIVATE=\"\" -DSQLITE_CORE\nTESTFIXTURE_FLAGS += -DBUILD_sqlite\nTESTFIXTURE_FLAGS += -DSQLITE_SERIES_CONSTRAINT_VERIFY=1\nTESTFIXTURE_FLAGS += -DSQLITE_DEFAULT_PAGE_SIZE=1024\nTESTFIXTURE_FLAGS += -DSQLITE_ENABLE_STMTVTAB\nTESTFIXTURE_FLAGS += -DSQLITE_ENABLE_DBPAGE_VTAB\nTESTFIXTURE_FLAGS += -DSQLITE_ENABLE_BYTECODE_VTAB\nTESTFIXTURE_FLAGS += -DSQLITE_CKSUMVFS_STATIC\nTESTFIXTURE_FLAGS += -DSQLITE_STATIC_RANDOMJSON\nTESTFIXTURE_FLAGS += -DSQLITE_STRICT_SUBTYPE=1\n\nTESTFIXTURE_SRC0 = $(TESTSRC2) $(libsqlite3.LIB)\nTESTFIXTURE_SRC1 = sqlite3.c\nTESTFIXTURE_SRC = $(TESTSRC) $(TOP)/src/tclsqlite.c\nTESTFIXTURE_SRC += $(TESTFIXTURE_SRC$(USE_AMALGAMATION))\n\ntestfixture$(T.exe):\t$(T.tcl.env.sh) has_tclsh85 $(TESTFIXTURE_SRC)\n\t$(T.link.tcl) -DSQLITE_NO_SYNC=1 $(TESTFIXTURE_FLAGS) \\\n\t\t-o $@ $(TESTFIXTURE_SRC) \\\n\t\t$$TCL_LIB_SPEC $$TCL_INCLUDE_SPEC \\\n\t\t$(LDFLAGS.libsqlite3)\n\ncoretestprogs:\ttestfixture$(B.exe) sqlite3$(B.exe)\n\ntestprogs:\t$(TESTPROGS) srcck1$(B.exe) fuzzcheck$(T.exe) sessionfuzz$(T.exe)\n\n# A very detailed test running most or all test cases\nfulltest:\talltest fuzztest\n\n# Run most or all tcl test cases\nalltest:\t$(TESTPROGS)\n\t./testfixture$(T.exe) $(TOP)/test/all.test $(TESTOPTS)\n\n# Really really long testing\nsoaktest:\t$(TESTPROGS)\n\t./testfixture$(T.exe) $(TOP)/test/all.test -soak=1 $(TESTOPTS)\n\n# Do extra testing but not everything.\nfulltestonly:\t$(TESTPROGS) fuzztest\n\t./testfixture$(T.exe) $(TOP)/test/full.test\n\n#\n# Fuzz testing\n#\n# WARNING: When the \"fuzztest\" target is run by the testrunner.tcl script,\n# it does not actually run this code. Instead, it schedules equivalent\n# commands. Therefore, if this target is updated, then code in\n# testrunner_data.tcl (search for \"trd_fuzztest_data\") must also be updated.\n#\nfuzztest:\tfuzzcheck$(T.exe) $(FUZZDATA) sessionfuzz$(T.exe)\n\t./fuzzcheck$(T.exe) $(FUZZDATA)\n\t./sessionfuzz$(T.exe) run $(TOP)/test/sessionfuzz-data1.db\n\nvalgrindfuzz:\tfuzzcheck$(TEXT) $(FUZZDATA) sessionfuzz$(T.exe)\n\tvalgrind ./fuzzcheck$(T.exe) --cell-size-check --limit-mem 10M $(FUZZDATA)\n\tvalgrind ./sessionfuzz$(T.exe) run $(TOP)/test/sessionfuzz-data1.db\n\n#\n# The veryquick.test TCL tests.\n#\ntcltest:\t./testfixture$(T.exe)\n\t./testfixture$(T.exe) $(TOP)/test/veryquick.test $(TESTOPTS)\n\n#\n# Runs all the same tests cases as the \"tcltest\" target but uses\n# the testrunner.tcl script to run them in multiple cores\n# concurrently.\ntestrunner:\ttestfixture$(T.exe)\n\t./testfixture$(T.exe) $(TOP)/test/testrunner.tcl\n\n#\n# This is the testing target preferred by the core SQLite developers.\n# It runs tests under a standard configuration, regardless of how\n# ./configure was run.  The devs run \"make devtest\" prior to each\n# check-in, at a minimum.  Probably other tests too, but at least this\n# one.\n#\ndevtest:\tsrctree-check sourcetest\n\t$(TCLSH_CMD) $(TOP)/test/testrunner.tcl mdevtest $(TSTRNNR_OPTS)\n\nmdevtest: srctree-check has_tclsh85\n\t$(TCLSH_CMD) $(TOP)/test/testrunner.tcl mdevtest $(TSTRNNR_OPTS)\n\nsdevtest: has_tclsh85\n\t$(TCLSH_CMD) $(TOP)/test/testrunner.tcl sdevtest $(TSTRNNR_OPTS)\n\n#\n# Validate that various generated files in the source tree\n# are up-to-date.\n#\nsrctree-check:\t$(TOP)/tool/srctree-check.tcl\n\t$(TCLSH_CMD) $(TOP)/tool/srctree-check.tcl\n\n#\n# Testing for a release\n#\nreleasetest: srctree-check has_tclsh85 verify-source\n\t$(TCLSH_CMD) $(TOP)/test/testrunner.tcl release $(TSTRNNR_OPTS)\n\n#\n# Minimal testing that runs in less than 3 minutes\n#\nquicktest:\t./testfixture$(T.exe)\n\t./testfixture$(T.exe) $(TOP)/test/extraquick.test $(TESTOPTS)\n\n#\n# Try to run tests on whatever options are specified by the\n# ./configure.  The developers seldom use this target.  Instead\n# they use \"make devtest\" which runs tests on a standard set of\n# options regardless of how SQLite is configured.  This \"test\"\n# target is provided for legacy only.\n#\ntest:\tsrctree-check fuzztest sourcetest $(TESTPROGS) tcltest\n\n#\n# Run a test using valgrind.  This can take a really long time\n# because valgrind is so much slower than a native machine.\n#\nvalgrindtest:\t$(TESTPROGS) valgrindfuzz\n\tOMIT_MISUSE=1 valgrind -v ./testfixture$(T.exe) $(TOP)/test/permutations.test valgrind $(TESTOPTS)\n\n#\n# A very fast test that checks basic sanity.  The name comes from\n# the 60s-era electronics testing:  \"Turn it on and see if smoke\n# comes out.\"\n#\nsmoketest:\t$(TESTPROGS) fuzzcheck$(T.exe)\n\t./testfixture$(T.exe) $(TOP)/test/main.test $(TESTOPTS)\n\nshelltest:\n\t$(TCLSH_CMD) $(TOP)/test/testrunner.tcl release shell\n\n#\n# sqlite3_analyzer.c build depends on $(LINK_TOOLS_DYNAMICALLY).\n#\nsqlite3_analyzer.c.flags.0 = -DINCLUDE_SQLITE3_C=1\nsqlite3_analyzer.c.flags.1 =\nsqlite3_analyzer.c: sqlite3.c $(TOP)/src/tclsqlite.c $(TOP)/tool/spaceanal.tcl \\\n                    $(TOP)/tool/mkccode.tcl $(TOP)/tool/sqlite3_analyzer.c.in\n\t$(B.tclsh) $(TOP)/tool/mkccode.tcl $(TOP)/tool/sqlite3_analyzer.c.in \\\n\t\t$(sqlite3_analyzer.c.flags.$(LINK_TOOLS_DYNAMICALLY)) \\\n\t\t$(OPT_FEATURE_FLAGS) \\\n\t\t> $@\n\n#\n# sqlite3_analyzer's build mode depends on $(LINK_TOOLS_DYNAMICALLY).\n#\nsqlite3_analyzer.flags.1 = -L. -lsqlite3\nsqlite3_analyzer.flags.0 = $(LDFLAGS.libsqlite3)\nsqlite3_analyzer.deps.1 = $(libsqlite3.SO)\nsqlite3_analyzer.deps.0 =\nsqlite3_analyzer$(T.exe): $(T.tcl.env.sh) sqlite3_analyzer.c \\\n                          $(sqlite3_analyzer.deps.$(LINK_TOOLS_DYNAMICALLY))\n\t$(T.link.tcl) sqlite3_analyzer.c -o $@ \\\n\t\t$(sqlite3_analyzer.flags.$(LINK_TOOLS_DYNAMICALLY)) \\\n\t\t$$TCL_LIB_SPEC $$TCL_INCLUDE_SPEC $$TCL_LIBS\n# ^^^^ the order of those flags is relevant for\n# $(sqlite3_analyzer.flags.1): if the $$TCL_... flags come first they\n# can cause the $@ to link to an out-of-tree libsqlite3.so, which may\n# or may not fail or otherwise cause confusion.\n\nsqltclsh.c: sqlite3.c $(TOP)/src/tclsqlite.c $(TOP)/tool/sqltclsh.tcl \\\n            $(TOP)/ext/misc/appendvfs.c $(TOP)/tool/mkccode.tcl \\\n            $(TOP)/tool/sqltclsh.c.in\n\t$(B.tclsh) $(TOP)/tool/mkccode.tcl $(TOP)/tool/sqltclsh.c.in >sqltclsh.c\n\nsqltclsh$(T.exe): $(T.tcl.env.sh) sqltclsh.c\n\t$(T.link.tcl) sqltclsh.c -o $@ $$TCL_INCLUDE_SPEC \\\n\t\t$(LDFLAGS.libsqlite3) $$TCL_LIB_SPEC $$TCL_LIBS\n# xbin: target for generic binaries which aren't usually built. It is\n# used primarily for testing the build process.\nxbin: sqltclsh$(T.exe) sqlite3_analyzer$(T.exe)\n\nsqlite3_expert$(T.exe): $(TOP)/ext/expert/sqlite3expert.h $(TOP)/ext/expert/sqlite3expert.c \\\n                       $(TOP)/ext/expert/expert.c sqlite3.c\n\t$(T.link) $(TOP)/ext/expert/sqlite3expert.h $(TOP)/ext/expert/sqlite3expert.c \\\n\t\t$(TOP)/ext/expert/expert.c sqlite3.c -o sqlite3_expert $(LDFLAGS.libsqlite3)\nxbin: sqlite3_expert$(T.exe)\n\nCHECKER_DEPS =\\\n  $(TOP)/tool/mkccode.tcl \\\n  sqlite3.c \\\n  $(TOP)/src/tclsqlite.c \\\n  $(TOP)/ext/repair/sqlite3_checker.tcl \\\n  $(TOP)/ext/repair/checkindex.c \\\n  $(TOP)/ext/repair/checkfreelist.c \\\n  $(TOP)/ext/misc/btreeinfo.c \\\n  $(TOP)/ext/repair/sqlite3_checker.c.in\n\nsqlite3_checker.c:\t$(CHECKER_DEPS)\n\t$(B.tclsh) $(TOP)/tool/mkccode.tcl $(TOP)/ext/repair/sqlite3_checker.c.in >$@\n\nsqlite3_checker$(T.exe):\t$(T.tcl.env.sh) sqlite3_checker.c\n\t$(T.link.tcl) sqlite3_checker.c -o $@ $$TCL_INCLUDE_SPEC \\\n\t\t$$TCL_LIB_SPEC $(LDFLAGS.libsqlite3)\nxbin: sqlite3_checker$(T.exe)\n\ndbdump$(T.exe): $(TOP)/ext/misc/dbdump.c sqlite3.o\n\t$(T.link) -DDBDUMP_STANDALONE -o $@ \\\n\t\t$(TOP)/ext/misc/dbdump.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: dbdump$(T.exe)\n\ndbtotxt$(T.exe): $(TOP)/tool/dbtotxt.c\n\t$(T.link)-o $@ $(TOP)/tool/dbtotxt.c $(LDFLAGS.configure)\nxbin: dbtotxt$(T.exe)\n\nshowdb$(T.exe):\t$(TOP)/tool/showdb.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/tool/showdb.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: showdb$(T.exe)\n\nshowstat4$(T.exe):\t$(TOP)/tool/showstat4.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/tool/showstat4.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: showstat4$(T.exe)\n\nshowjournal$(T.exe):\t$(TOP)/tool/showjournal.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/tool/showjournal.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: showjournal$(T.exe)\n\nshowwal$(T.exe):\t$(TOP)/tool/showwal.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/tool/showwal.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: showwal$(T.exe)\n\nshowshm$(T.exe):\t$(TOP)/tool/showshm.c\n\t$(T.link) -o $@ $(TOP)/tool/showshm.c $(LDFLAGS.configure)\nxbin: showshm$(T.exe)\n\nindex_usage$(T.exe): $(TOP)/tool/index_usage.c sqlite3.o\n\t$(T.link) $(SHELL_OPT) -o $@ $(TOP)/tool/index_usage.c sqlite3.o \\\n\t\t$(LDFLAGS.libsqlite3)\nxbin: index_usage$(T.exe)\n\n# Reminder: changeset does not build without -DSQLITE_ENABLE_SESSION\nchangeset$(T.exe):\t$(TOP)/ext/session/changeset.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/ext/session/changeset.c sqlite3.o \\\n\t\t$(LDFLAGS.libsqlite3)\nxbin: changeset$(T.exe)\n\nchangesetfuzz$(T.exe):\t$(TOP)/ext/session/changesetfuzz.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/ext/session/changesetfuzz.c sqlite3.o \\\n\t\t$(LDFLAGS.libsqlite3)\nxbin: changesetfuzz$(T.exe)\n\nrollback-test$(T.exe):\t$(TOP)/tool/rollback-test.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/tool/rollback-test.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: rollback-test$(T.exe)\n\natrc$(T.exe): $(TOP)/test/atrc.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/test/atrc.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: atrc$(T.exe)\n\nLogEst$(T.exe):\t$(TOP)/tool/logest.c sqlite3.h\n\t$(T.link) -I. -o $@ $(TOP)/tool/logest.c $(LDFLAGS.configure)\nxbin: LogEst$(T.exe)\n\nwordcount$(T.exe):\t$(TOP)/test/wordcount.c sqlite3.o\n\t$(T.link) -o $@ $(TOP)/test/wordcount.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: wordcount$(T.exe)\n\nspeedtest1$(T.exe):\t$(TOP)/test/speedtest1.c sqlite3.c Makefile\n\t$(T.link) $(ST_OPT) -o $@ $(TOP)/test/speedtest1.c sqlite3.c \\\n\t\t$(LDFLAGS.libsqlite3)\nxbin: speedtest1$(T.exe)\n\nstartup$(T.exe):\t$(TOP)/test/startup.c sqlite3.c\n\t$(T.link) -Os -g -USQLITE_THREADSAFE -DSQLITE_THREADSAFE=0 \\\n\t\t-o $@ $(TOP)/test/startup.c sqlite3.c $(LDFLAGS.libsqlite3)\nxbin: startup$(T.exe)\n\nKV_OPT += -DSQLITE_DIRECT_OVERFLOW_READ\n\nkvtest$(T.exe):\t$(TOP)/test/kvtest.c sqlite3.c\n\t$(T.link) $(KV_OPT) -o $@ $(TOP)/test/kvtest.c sqlite3.c \\\n\t\t$(LDFLAGS.libsqlite3)\nxbin: kvtest$(T.exe)\n\n#\n# rbu$(T.exe) requires building with -DSQLITE_ENABLE_RBU, which\n# specifically does not have an --enable-rbu flag in the configure\n# script.\nrbu$(T.exe): $(TOP)/ext/rbu/rbu.c $(TOP)/ext/rbu/sqlite3rbu.c sqlite3.o\n\t$(T.link) -I. -o $@ $(TOP)/ext/rbu/rbu.c sqlite3.o $(LDFLAGS.libsqlite3)\n\nloadfts$(T.exe): $(TOP)/tool/loadfts.c $(libsqlite3.LIB)\n\t$(T.link) $(TOP)/tool/loadfts.c $(libsqlite3.LIB) \\\n\t\t-o $@ $(LDFLAGS.libsqlite3)\nxbin: loadfts$(T.exe)\n\n# This target will fail if the SQLite amalgamation contains any exported\n# symbols that do not begin with \"sqlite3_\". It is run as part of the\n# releasetest.tcl script.\n#\nVALIDIDS=' sqlite3(changeset|changegroup|session|rebaser)?_'\nchecksymbols: sqlite3.o\n\tnm -g --defined-only sqlite3.o\n\tnm -g --defined-only sqlite3.o | egrep -v $(VALIDIDS); test $$? -ne 0\n\techo '0 errors out of 1 tests'\n\n# Build the amalgamation-autoconf package.  The amalamgation-tarball target builds\n# a tarball named for the version number.  Ex:  sqlite-autoconf-3110000.tar.gz.\n# The snapshot-tarball target builds a tarball named by the SHA3 hash\n#\namalgamation-tarball: sqlite3.c sqlite3rc.h\n\tTOP=$(TOP) sh $(TOP)/tool/mkautoconfamal.sh --normal\n\nsnapshot-tarball: sqlite3.c sqlite3rc.h\n\tTOP=$(TOP) sh $(TOP)/tool/mkautoconfamal.sh --snapshot\n\n# Build a ZIP archive snapshot of the latest check-in.\n#\nsqlite-src.zip:\t$(TOP)/tool/mksrczip.tcl\n\t$(TCLSH_CMD) $(TOP)/tool/mksrczip.tcl\n\n# Build a ZIP archive of the amaglamation\n#\nsqlite-amalgamation.zip:\t$(TOP)/tool/mkamalzip.tcl sqlite3.c sqlite3.h shell.c sqlite3ext.h\n\t$(TCLSH_CMD) $(TOP)/tool/mkamalzip.tcl\n\n# Build all the source code deliverables\n#\nsrc-archives: sqlite-amalgamation.zip amalgamation-tarball sqlite-src.zip\n\tls -ltr *.zip *.tar.gz | tail -3\n\n# Build a ZIP archive containing various command-line tools.\n#\ntool-zip:\ttestfixture$(T.exe) sqlite3$(T.exe) sqldiff$(T.exe) \\\n            sqlite3_analyzer$(T.exe) sqlite3_rsync$(T.exe) $(TOP)/tool/mktoolzip.tcl\n\tstrip sqlite3$(T.exe) sqldiff$(T.exe) sqlite3_analyzer$(T.exe) sqlite3_rsync$(T.exe)\n\t./testfixture$(T.exe) $(TOP)/tool/mktoolzip.tcl\nclean-tool-zip:\n\trm -f sqlite-tools-*.zip\nclean: clean-tool-zip\n\n#\n# The next few rules are used to support the \"threadtest\" target. Building\n# threadtest runs a few thread-safety tests that are implemented in C. This\n# target is invoked by the releasetest.tcl script.\n#\nTHREADTEST3_SRC = $(TOP)/test/threadtest3.c    \\\n                  $(TOP)/test/tt3_checkpoint.c \\\n                  $(TOP)/test/tt3_index.c      \\\n                  $(TOP)/test/tt3_vacuum.c      \\\n                  $(TOP)/test/tt3_stress.c      \\\n                  $(TOP)/test/tt3_lookaside1.c\n\nthreadtest3$(T.exe): sqlite3.o $(THREADTEST3_SRC)\n\t$(T.link) $(TOP)/test/threadtest3.c $(TOP)/src/test_multiplex.c sqlite3.o \\\n\t\t-o $@ $(LDFLAGS.libsqlite3)\nxbin: threadtest3$(T.exe)\n\nthreadtest: threadtest3$(T.exe)\n\t./threadtest3$(T.exe)\n\nthreadtest5: sqlite3.c $(TOP)/test/threadtest5.c\n\t$(T.link) $(TOP)/test/threadtest5.c sqlite3.c -o $@ $(LDFLAGS.libsqlite3)\nxbin: threadtest5\n\n#\n# When building sqlite3$(T.exe) we specifically embed a copy of\n# sqlite3.c, and not link to libsqlite3.so or libsqlite3.a, because\n# the shell needs to be able to enable arbitrary library features,\n# some of which have significant performance impacts. For example,,\n# SQLITE_ENABLE_EXPLAIN_COMMENTS has been measured as having a 5.2%\n# runtime performance hit, which is fine for use in the shell but is\n# not appropriate for the canonical library build.\n#\nsqlite3$(T.exe):\tshell.c sqlite3.c\n\t$(T.link) -o $@ \\\n\t\tshell.c sqlite3.c \\\n\t\t$(CFLAGS.readline) $(SHELL_OPT) $(CFLAGS.icu) \\\n\t\t$(LDFLAGS.libsqlite3) $(LDFLAGS.readline)\n#\n# Build sqlite3$(T.exe) by default except in wasi-sdk builds.  Yes, the\n# semantics of 0 and 1 are confusingly swapped here.\n#\nsqlite3$(T.exe)-1:\nsqlite3$(T.exe)-0: sqlite3$(T.exe)\nall: sqlite3$(T.exe)-$(HAVE_WASI_SDK)\n\n# The \"sqlite3d\" CLI is build using separate source files.  This\n# is useful during development and debugging.\n#\nsqlite3d$(T.exe):\tshell.c $(LIBOBJS0)\n\t$(T.link) -o $@ \\\n\t\tshell.c $(LIBOBJS0) \\\n\t\t$(CFLAGS.readline) $(SHELL_OPT) \\\n\t\t$(LDFLAGS.libsqlite3) $(LDFLAGS.readline)\n\ninstall-shell-0: sqlite3$(T.exe) $(install-dir.bin)\n\t$(INSTALL) -s sqlite3$(T.exe) \"$(install-dir.bin)\"\ninstall-shell-1:\ninstall: install-shell-$(HAVE_WASI_SDK)\n\n# How to build sqldiff$(T.exe) depends on $(LINK_TOOLS_DYNAMICALLY)\n#\nsqldiff.0.deps = $(TOP)/tool/sqldiff.c $(TOP)/ext/misc/sqlite3_stdio.h sqlite3.o sqlite3.h\nsqldiff.0.rules = $(T.link) -o $@ $(TOP)/tool/sqldiff.c sqlite3.o $(LDFLAGS.libsqlite3)\nsqldiff.1.deps = $(TOP)/tool/sqldiff.c $(TOP)/ext/misc/sqlite3_stdio.h $(libsqlite3.SO)\nsqldiff.1.rules = $(T.link) -o $@ $(TOP)/tool/sqldiff.c -L. -lsqlite3 $(LDFLAGS.configure)\nsqldiff$(T.exe): $(sqldiff.$(LINK_TOOLS_DYNAMICALLY).deps)\n\t$(sqldiff.$(LINK_TOOLS_DYNAMICALLY).rules)\n\ninstall-diff: sqldiff$(T.exe) $(install-dir.bin)\n\t$(INSTALL) -s sqldiff$(T.exe) \"$(install-dir.bin)\"\n#install: install-diff\n\ndbhash$(T.exe):\t$(TOP)/tool/dbhash.c sqlite3.o sqlite3.h\n\t$(T.link) -o $@ $(TOP)/tool/dbhash.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: dbhash$(T.exe)\n\nRSYNC_SRC = \\\n  $(TOP)/tool/sqlite3_rsync.c \\\n  sqlite3.c\n\nRSYNC_OPT = \\\n  -DSQLITE_ENABLE_DBPAGE_VTAB \\\n  -USQLITE_THREADSAFE \\\n  -DSQLITE_THREADSAFE=0 \\\n  -DSQLITE_OMIT_LOAD_EXTENSION \\\n  -DSQLITE_OMIT_DEPRECATED\n\nsqlite3_rsync$(T.exe):\t$(RSYNC_SRC)\n\t$(T.cc.sqlite) -o $@ $(RSYNC_OPT) $(RSYNC_SRC) $(LDFLAGS.libsqlite3)\nxbin: sqlite3_rsync$(T.exe)\n\ninstall-rsync: sqlite3_rsync$(T.exe) $(install-dir.bin)\n\t$(INSTALL) sqlite3_rsync$(T.exe) \"$(install-dir.bin)\"\n#install: install-rsync\n\ninstall-man1: $(install-dir.man1)\n\t$(INSTALL.noexec) \"$(TOP)/sqlite3.1\" \"$(install-dir.man1)\"\ninstall: install-man1\n\n#\n# sqlite3.pc is typically generated by the configure script but could\n# conceivably be generated by hand.\ninstall-pc: sqlite3.pc $(install-dir.pkgconfig)\n\t$(INSTALL.noexec) sqlite3.pc \"$(install-dir.pkgconfig)\"\n\nscrub$(T.exe):\t$(TOP)/ext/misc/scrub.c sqlite3.o\n\t$(T.link) -o $@ -I. -DSCRUB_STANDALONE \\\n\t\t$(TOP)/ext/misc/scrub.c sqlite3.o $(LDFLAGS.libsqlite3)\nxbin: scrub$(T.exe)\n\nsrcck1$(B.exe):\t$(TOP)/tool/srcck1.c\n\t$(B.cc) -o srcck1$(B.exe) $(TOP)/tool/srcck1.c\nxbin: srcck1$(B.exe)\n\nsourcetest:\tsrcck1$(B.exe) sqlite3.c\n\t./srcck1$(B.exe) sqlite3.c\n\nsrc-verify$(B.exe):\t$(TOP)/tool/src-verify.c\n\t$(B.cc) -o src-verify$(B.exe) $(TOP)/tool/src-verify.c\nxbin: src-verify$(B.exe)\n\nverify-source:\t./src-verify$(B.exe)\n\t./src-verify$(B.exe) $(TOP)\n\nfuzzershell$(T.exe):\t$(TOP)/tool/fuzzershell.c sqlite3.c sqlite3.h\n\t$(T.link) -o $@ $(FUZZERSHELL_OPT) \\\n\t\t$(TOP)/tool/fuzzershell.c sqlite3.c $(LDFLAGS.libsqlite3)\nfuzzy: fuzzershell$(T.exe)\nxbin: fuzzershell$(T.exe)\n\nfuzzcheck$(T.exe):\t$(FUZZCHECK_SRC) sqlite3.c sqlite3.h $(FUZZCHECK_DEP)\n\t$(T.link) -o $@ $(FUZZCHECK_OPT) $(FUZZCHECK_SRC) sqlite3.c $(LDFLAGS.libsqlite3)\nfuzzy: fuzzcheck$(T.exe)\nxbin: fuzzcheck$(T.exe)\n\nfuzzcheck-asan$(T.exe):\t$(FUZZCHECK_SRC) sqlite3.c sqlite3.h $(FUZZCHECK_DEP)\n\t$(T.link) -o $@ -fsanitize=address $(FUZZCHECK_OPT) $(FUZZCHECK_SRC) \\\n\t\tsqlite3.c $(LDFLAGS.libsqlite3)\nfuzzy: fuzzcheck-asan$(T.exe)\nxbin: fuzzcheck-asan$(T.exe)\n\nfuzzcheck-ubsan$(T.exe):\t$(FUZZCHECK_SRC) sqlite3.c sqlite3.h $(FUZZCHECK_DEP)\n\t$(T.link) -o $@ -fsanitize=undefined $(FUZZCHECK_OPT) $(FUZZCHECK_SRC) \\\n\t\tsqlite3.c $(LDFLAGS.libsqlite3)\nfuzzy: fuzzcheck-ubsan$(T.exe)\nxbin: fuzzcheck-ubsan$(T.exe)\n\n# Usage:    FUZZDB=filename make run-fuzzcheck\n#\n# Where filename is a fuzzcheck database, this target builds and runs\n# fuzzcheck, fuzzcheck-asan, and fuzzcheck-ubsan on that database.\n#\n# FUZZDB can be a glob pattern of two or more databases. Example:\n#\n#     FUZZDB=test/fuzzdata*.db make run-fuzzcheck\n#\nrun-fuzzcheck:\tfuzzcheck$(T.exe) fuzzcheck-asan$(T.exe) fuzzcheck-ubsan$(T.exe)\n\t@if test \"$(FUZZDB)\" = \"\"; then echo 'ERROR: No FUZZDB specified. Rerun with FUZZDB=filename'; exit 1; fi\n\t./fuzzcheck$(T.exe) --spinner $(FUZZDB)\n\t./fuzzcheck-asan$(T.exe) --spinner $(FUZZDB)\n\t./fuzzcheck-ubsan$(T.exe) --spinner $(FUZZDB)\n\nossshell$(T.exe):\t$(TOP)/test/ossfuzz.c $(TOP)/test/ossshell.c sqlite3.c sqlite3.h\n\t$(T.link) -o $@ $(FUZZCHECK_OPT) $(TOP)/test/ossshell.c \\\n\t\t$(TOP)/test/ossfuzz.c sqlite3.c $(LDFLAGS.libsqlite3)\nfuzzy: ossshell$(T.exe)\nxbin: ossshell$(T.exe)\n\nsessionfuzz$(T.exe):\t$(TOP)/test/sessionfuzz.c sqlite3.c sqlite3.h\n\t$(T.link) -o $@ $(TOP)/test/sessionfuzz.c $(LDFLAGS.libsqlite3)\nfuzzy: sessionfuzz$(T.exe)\n\ndbfuzz$(T.exe):\t$(TOP)/test/dbfuzz.c sqlite3.c sqlite3.h\n\t$(T.link) -o $@ $(DBFUZZ_OPT) $(TOP)/test/dbfuzz.c sqlite3.c \\\n\t\t$(LDFLAGS.libsqlite3)\nfuzzy: dbfuzz$(T.exe)\nxbin: dbfuzz$(T.exe)\n\nDBFUZZ2_OPTS = \\\n  -USQLITE_THREADSAFE \\\n  -DSQLITE_THREADSAFE=0 \\\n  -DSQLITE_OMIT_LOAD_EXTENSION \\\n  -DSQLITE_DEBUG \\\n  -DSQLITE_ENABLE_DBSTAT_VTAB \\\n  -DSQLITE_ENABLE_BYTECODE_VTAB \\\n  -DSQLITE_ENABLE_RTREE \\\n  -DSQLITE_ENABLE_FTS4 \\\n  -DSQLITE_ENABLE_FTS5\n\ndbfuzz2$(T.exe):\t$(TOP)/test/dbfuzz2.c sqlite3.c sqlite3.h\n\t$(T.cc) -I. -g -O0 \\\n\t\t-DSTANDALONE -o dbfuzz2 \\\n\t\t$(DBFUZZ2_OPTS) $(TOP)/test/dbfuzz2.c sqlite3.c $(LDFLAGS.libsqlite3)\n\tmkdir -p dbfuzz2-dir\n\tcp $(TOP)/test/dbfuzz2-seed* dbfuzz2-dir\nfuzzy: dbfuzz2$(T.exe)\nxbin: dbfuzz2$(T.exe)\n\nmptester$(T.exe):\t$(libsqlite3.LIB) $(TOP)/mptest/mptest.c\n\t$(T.link) -o $@ -I. $(TOP)/mptest/mptest.c $(libsqlite3.LIB) \\\n\t\t$(LDFLAGS.libsqlite3)\nxbin: mptester$(T.exe)\n\nMPTEST1=./mptester$(T.exe) mptest.db $(TOP)/mptest/crash01.test --repeat 20\nMPTEST2=./mptester$(T.exe) mptest.db $(TOP)/mptest/multiwrite01.test --repeat 20\nmptest:\tmptester$(T.exe)\n\trm -f mptest.db\n\t$(MPTEST1) --journalmode DELETE\n\t$(MPTEST2) --journalmode WAL\n\t$(MPTEST1) --journalmode WAL\n\t$(MPTEST2) --journalmode PERSIST\n\t$(MPTEST1) --journalmode PERSIST\n\t$(MPTEST2) --journalmode TRUNCATE\n\t$(MPTEST1) --journalmode TRUNCATE\n\t$(MPTEST2) --journalmode DELETE\n\n# Source and header files that shell.c depends on\nSHELL_DEP = \\\n    $(TOP)/src/shell.c.in \\\n    $(TOP)/ext/expert/sqlite3expert.c \\\n    $(TOP)/ext/expert/sqlite3expert.h \\\n    $(TOP)/ext/intck/sqlite3intck.c \\\n    $(TOP)/ext/intck/sqlite3intck.h \\\n    $(TOP)/ext/misc/appendvfs.c \\\n    $(TOP)/ext/misc/base64.c \\\n    $(TOP)/ext/misc/base85.c \\\n    $(TOP)/ext/misc/completion.c \\\n    $(TOP)/ext/misc/decimal.c \\\n    $(TOP)/ext/misc/fileio.c \\\n    $(TOP)/ext/misc/ieee754.c \\\n    $(TOP)/ext/misc/memtrace.c \\\n    $(TOP)/ext/misc/pcachetrace.c \\\n    $(TOP)/ext/misc/percentile.c \\\n    $(TOP)/ext/misc/regexp.c \\\n    $(TOP)/ext/misc/series.c \\\n    $(TOP)/ext/misc/sha1.c \\\n    $(TOP)/ext/misc/shathree.c \\\n    $(TOP)/ext/misc/sqlar.c \\\n    $(TOP)/ext/misc/uint.c \\\n    $(TOP)/ext/misc/vfstrace.c \\\n    $(TOP)/ext/misc/zipfile.c \\\n    $(TOP)/ext/recover/dbdata.c \\\n    $(TOP)/ext/recover/sqlite3recover.c \\\n    $(TOP)/ext/recover/sqlite3recover.h \\\n    $(TOP)/src/test_windirent.c \\\n    $(TOP)/src/test_windirent.h\n\nshell.c:\t$(SHELL_DEP) $(TOP)/tool/mkshellc.tcl $(B.tclsh)\n\t$(B.tclsh) $(TOP)/tool/mkshellc.tcl >shell.c\n\n#\n# Rules to build the extension objects.\n#\nDEPS_EXT_COMMON = $(DEPS_OBJ_COMMON) $(EXTHDR)\nicu.o:\t$(TOP)/ext/icu/icu.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/icu/icu.c $(CFLAGS.icu)\n\nfts3.o:\t$(TOP)/ext/fts3/fts3.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3.c\n\nfts3_aux.o:\t$(TOP)/ext/fts3/fts3_aux.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_aux.c\n\nfts3_expr.o:\t$(TOP)/ext/fts3/fts3_expr.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_expr.c\n\nfts3_hash.o:\t$(TOP)/ext/fts3/fts3_hash.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_hash.c\n\nfts3_icu.o:\t$(TOP)/ext/fts3/fts3_icu.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_icu.c $(CFLAGS.icu)\n\nfts3_porter.o:\t$(TOP)/ext/fts3/fts3_porter.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_porter.c\n\nfts3_snippet.o:\t$(TOP)/ext/fts3/fts3_snippet.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_snippet.c\n\nfts3_tokenizer.o:\t$(TOP)/ext/fts3/fts3_tokenizer.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_tokenizer.c\n\nfts3_tokenizer1.o:\t$(TOP)/ext/fts3/fts3_tokenizer1.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_tokenizer1.c\n\nfts3_tokenize_vtab.o:\t$(TOP)/ext/fts3/fts3_tokenize_vtab.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_tokenize_vtab.c\n\nfts3_unicode.o:\t$(TOP)/ext/fts3/fts3_unicode.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_unicode.c\n\nfts3_unicode2.o:\t$(TOP)/ext/fts3/fts3_unicode2.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_unicode2.c\n\nfts3_write.o:\t$(TOP)/ext/fts3/fts3_write.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/fts3/fts3_write.c\n\nrtree.o:\t$(TOP)/ext/rtree/rtree.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/rtree/rtree.c\n\nsqlite3session.o:\t$(TOP)/ext/session/sqlite3session.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/session/sqlite3session.c\n\nstmt.o:\t$(TOP)/ext/misc/stmt.c $(DEPS_EXT_COMMON)\n\t$(T.cc.extension) -c $(TOP)/ext/misc/stmt.c\n\n#\n# Windows section\n#\ndll: sqlite3.dll\nsqlite3.def: $(LIBOBJ)\n\techo 'EXPORTS' >sqlite3.def\n\tnm $(LIBOBJ) | grep ' T ' | grep ' _sqlite3_' \\\n\t\t| sed 's/^.* _//' >>sqlite3.def\n\nsqlite3.dll: $(LIBOBJ) sqlite3.def\n\t$(T.cc.sqlite) $(LDFLAGS.shlib) -o $@ sqlite3.def \\\n\t\t-Wl,\"--strip-all\" $(LIBOBJ) $(LDFLAGS.configure)\n\n#\n# Emit a list of commonly-used targets\nhelp:\n\t@echo; echo \"Frequently-used high-level make targets:\"; echo; \\\n\techo \" - all [default] = builds most components\"; \\\n\techo \" - clean         = cleans up most build products\"; \\\n\techo \" - distclean     = cleans up all build products\"; \\\n\techo \" - install       = installs activated components\"; \\\n\techo; echo \"Testing-related targets:\"; echo; \\\n\techo \" - test          = a number of sanity checks\"; \\\n\techo \" - quicktest     = minimal tests\"; \\\n\techo \" - releasetest   = pre-release tests\"; \\\n\techo \" - devtest       = Minimum tests required before code check-ins\"; \\\n\techo \" - mdevtest      = A variant of devtest\"; \\\n\techo \" - sdevtest      = A variant of devtest\"; \\\n\techo \" - tcltest       = Runs test/veryquick.test\"; \\\n\techo \" - testrunner    = Like tcltest but spread across multiple cores\"; \\\n\techo \" - fuzztest      = The core fuzz tester (see target docs for important info)\"; \\\n\techo \" - valgrindfuzz  = Runs fuzztest under valgrind\"; \\\n\techo \" - soaktest      = Really, really long tests\"; \\\n\techo \" - alltest       = Runs most or all TCL tests\"; \\\n\techo\n\n\n# Remove build products sufficient so that subsequent makes will recompile\n# everything from scratch.  Do not remove:\n#\n#   *   test results and test logs\n#   *   output from ./configure\n#\ntidy-.:\ntidy: tidy-.\n\trm -f *.o *.c *.da *.bb *.bbg gmon.* *.rws sqlite3$(T.exe)\n\trm -f fts5.h keywordhash.h opcodes.h sqlite3.h sqlite3ext.h sqlite3session.h\n\trm -rf .libs .deps tsrc .target_source\n\trm -f lemon$(B.exe) sqlite*.tar.gz\n\trm -f mkkeywordhash$(B.exe) mksourceid$(B.exe)\n\trm -f parse.* fts5parse.*\n\trm -f $(libsqlite3.SO) $(libsqlite3.LIB) $(libtclsqlite3.SO)\n\trm -f tclsqlite3$(T.exe) $(TESTPROGS)\n\trm -f LogEst$(T.exe) fts3view$(T.exe) rollback-test$(T.exe) showdb$(T.exe)\n\trm -f showjournal$(T.exe) showstat4$(T.exe) showwal$(T.exe) speedtest1$(T.exe)\n\trm -f wordcount$(T.exe) changeset$(T.exe) version-info$(T.exe)\n\trm -f *.exp *.vsix pkgIndex.tcl\n\trm -f sqlite3_analyzer$(T.exe) sqlite3_rsync$(T.exe) sqlite3_expert$(T.exe)\n\trm -f mptester$(T.exe) rbu$(T.exe)\tsrcck1$(T.exe)\n\trm -f fuzzershell$(T.exe) fuzzcheck$(T.exe) sqldiff$(T.exe) dbhash$(T.exe)\n\trm -f dbfuzz$(T.exe) dbfuzz2$(T.exe)\n\trm -fr dbfuzz2-dir\n\trm -f fuzzcheck-asan$(T.exe) fuzzcheck-ubsan$(T.exe) ossshell$(T.exe)\n\trm -f scrub$(T.exe) showshm$(T.exe) sqlite3_checker$(T.exe) loadfts$(T.exe)\n\trm -f index_usage$(T.exe) kvtest$(T.exe) startup$(T.exe) threadtest3$(T.exe)\n\trm -f sessionfuzz$(T.exe) changesetfuzz$(T.exe)\n\trm -f dbdump$(T.exe) dbtotxt$(T.exe) atrc$(T.exe)\n\trm -f threadtest5$(T.exe)\n\trm -f src-verify$(B.exe)\n\trm -f tclsqlite3.c has_tclsh* $(T.tcl.env.sh)\n\trm -f sqlite3rc.h sqlite3.def\n\n#\n# Removes build products and test logs.  Retains ./configure outputs.\n#\nclean-.:\nclean:\tclean-. tidy\n\trm -rf omittest* testrunner* testdir*\n\n# Clean up everything.  No exceptions.\ndistclean-.:\ndistclean:\tdistclean-. clean\n\n\n# Show important variable settings.\nshow-variables:\t\n\t@echo \"CC          = $(CC)\"\n\t@echo \"B.cc        = $(B.cc)\"\n\t@echo \"T.cc        = $(T.cc)\"\n\t@echo \"T.cc.sqlite = $(T.cc.sqlite)\"\n"
        },
        {
          "name": "manifest",
          "type": "blob",
          "size": 178.748046875,
          "content": "C Fix\\sharmless\\s\"implicit\\sfall\\sthrough\"\\swarnings\\sthat\\ssuddenly\\sappeared\\swhen\\nI\\supgraded\\sto\\sgcc-13.\nD 2025-01-11T16:28:41.860\nF .fossil-settings/empty-dirs dbb81e8fc0401ac46a1491ab34a7f2c7c0452f2f06b54ebb845d024ca8283ef1\nF .fossil-settings/ignore-glob 35175cdfcf539b2318cb04a9901442804be81cd677d8b889fcc9149c21f239ea\nF LICENSE.md e108e1e69ae8e8a59e93c455654b8ac9356a11720d3345df2a4743e9590fb20d\nF Makefile.in ad349acf91b3569033439fe498fa197aa530cafaa01362eb7daad2f84e43d265\nF Makefile.linux-generic bd3e3cacd369821a6241d4ea1967395c962dfe3057e38cb0a435cee0e8b789d0\nF Makefile.msc 39785ec45f9ae0311e49094eff2ee079562246fed6be3b9f632a99d4df20056a\nF README.md c3c0f19532ce28f6297a71870f3c7b424729f0e6d9ab889616d3587dd2332159\nF VERSION 8dc0c3df15fd5ff0622f88fc483533fce990b1cbb2f5fb9fdfb4dbd71eef2889\nF art/icon-243x273.gif 9750b734f82fdb3dc43127753d5e6fbf3b62c9f4e136c2fbf573b2f57ea87af5\nF art/icon-80x90.gif 65509ce3e5f86a9cd64fe7fca2d23954199f31fe44c1e09e208c80fb83d87031\nF art/sqlite370.eps aa97a671332b432a54e1d74ff5e8775be34200c2\nF art/sqlite370.ico af56c1d00fee7cd4753e8631ed60703ed0fc6e90\nF art/sqlite370.jpg d512473dae7e378a67e28ff96a34da7cb331def2\nF art/sqlite370.svg 40b7e2fe8aac3add5d56dd86ab8d427a4eca5bcb3fe4f8946cb3794e1821d531\nF auto.def 63dfbbc58b041d1c5c516f31a02679cce8d79123c89ad87fd2783f4ef26dedbb\nF autoconf/INSTALL 83e4a25da9fd053c7b3665eaaaf7919707915903\nF autoconf/Makefile.am adedc1324b6a87fdd1265ddd336d2fb7d4f36a0e77b86ea553ae7cc4ea239347\nF autoconf/Makefile.fallback 22fe523eb36dfce31e0f6349f782eb084e86a5620b2b0b4f84a2d6133f53f5ac\nF autoconf/Makefile.msc ffff61fe851443015ddb6600ab69a9df503cfec25459b336be7ba8c9a9e473f8\nF autoconf/README.first 6c4f34fe115ff55d4e8dbfa3cecf04a0188292f7\nF autoconf/README.txt 5e946ffb6fbdbb114c81e1bdc862df27fce8beab557d7b0421820b0fe8fc048f\nF autoconf/configure.ac ec7fa914c5e74ff212fe879f9bb6918e1234497e05facfb641f30c4d5893b277\nF autoconf/tea/Makefile.in ba0556fee8da09c066bad85a4457904e46ee2c2eabaa309c0e83a78f2f151a8e\nF autoconf/tea/README.txt 61e62e519579e4a112791354d6d440f8b51ea6db3b0bab58d59f29df42d2dfe3\nF autoconf/tea/aclocal.m4 52c47aac44ce0ddb1f918b6993e8beb8eee88f43\nF autoconf/tea/configure.ac ff2d745f88e493080810b67958d88b4f7a7d79f19e2ee8e7f72ffd6fc04eabc7\nF autoconf/tea/doc/sqlite3.n e1fe45d4f5286ee3d0ccc877aca2a0def488e9bb\nF autoconf/tea/license.terms 13bd403c9610fd2b76ece0ab50c4c5eda933d523\nF autoconf/tea/pkgIndex.tcl.in 55aec3c6d7e9a1de9b8d2fdc9c27fd055da3ac3a51b572195e2ae7300bcfd3a2\nF autoconf/tea/tclconfig/install-sh 2182b3705d92e25753411e2c28cf788c69e35a48fbb8aa332e342dfc6b95b80d\nF autoconf/tea/tclconfig/tcl.m4 284faa1d9cf66c1efb42817beb5c8a63626fb35bf903993d4f11fde75677cc1a\nF autoconf/tea/win/makefile.vc 55721106928894cb818164a8ce054da11d948948f5a92a54d262dd0a6a891d4d\nF autoconf/tea/win/nmakehlp.c b01f822eabbe1ed2b64e70882d97d48402b42d2689a1ea00342d1a1a7eaa19cb\nF autoconf/tea/win/rules-ext.vc fd5740d97aac8c41c97eaa0fbcc0c15a41b6f7075d5f9f593e147d7a284a247a\nF autoconf/tea/win/rules.vc 94a18c3e453535459b4a643983acca52fb8756e79055bd2ad4b0999d66484f4c\nF autoconf/tea/win/targets.vc 96a25a1fa6e9e9cfb348fd3760a5395b4ce8acafc8ed10f0412937ec200d5dbd\nF autosetup/LICENSE 41a26aebdd2cd185d1e2b210f71b7ce234496979f6b35aef2cbf6b80cbed4ce4\nF autosetup/README.autosetup a78ff8c4a3d2636a4268736672a74bf14a82f42687fcf0631a70c516075c031e\nF autosetup/README.md 1a02f5a94fd460eb7ffc8dea5d6f1657e38ddf8ffa2d6c5dce9a630b97021a69\nF autosetup/autosetup df8b53928b1fe3c67db5bc77c8e1eb8160c1b6a26c370e9a06c68748f803b7e4 x\nF autosetup/autosetup-config.guess dfa101c5e8220e864d5e9c72a85e87110df60260d36cb951ad0a85d6d9eaa463 x\nF autosetup/autosetup-config.sub a38fb074d0dece01cf919e9fb534a26011608aa8fa606490864295328526cd73 x\nF autosetup/autosetup-find-tclsh 25905f6c302959db80c2951aa267b4411c5645b598ce761cfc24a166141e2c4c x\nF autosetup/autosetup-test-tclsh 749d20defee533a3842139df47d700fc7a334a5da7bdbd444ae5331744b06c5f\nF autosetup/cc-db.tcl 6e0ed90146197a5a05b245e649975c07c548e30926b218ca3e1d4dc034b10a7b\nF autosetup/cc-lib.tcl 493c5935b5dd3bf9bd4eca89b07c8b1b1a9356d61783035144e21795facf7360\nF autosetup/cc-shared.tcl 4f024e94a47f427ba61de1739f6381ef0080210f9fae89112d5c1de1e5460d78\nF autosetup/cc.tcl c0fcc50ca91deff8741e449ddad05bcd08268bc31177e613a6343bbd1fd3e45f\nF autosetup/jimsh0.c d40e381ea4526a067590e7b91bd4b2efa6d4980d286f908054c647b3df4aee14\nF autosetup/pkg-config.tcl 4e635bf39022ff65e0d5434339dd41503ea48fc53822c9c5bde88b02d3d952ba\nF autosetup/proj.tcl 2e817159b997077cb79bd871f6255276b787558f386dfc0830b0f825f6a53767\nF autosetup/system.tcl 51d4be76cd9a9074704b584e5c9cbba616202c8468cf9ba8a4f8294a7ab1dba9\nF configure 9a00b21dfd13757bbfb8d89b30660a89ec1f8f3a79402b8f9f9b6fc475c3303a x\nF contrib/sqlitecon.tcl 210a913ad63f9f991070821e599d600bd913e0ad\nF doc/F2FS.txt c1d4a0ae9711cfe0e1d8b019d154f1c29e0d3abfe820787ba1e9ed7691160fcd\nF doc/compile-for-unix.md c9dce1ddd4bf0d25efccc5c63eb047e78c01ce06a6ff29c73e0a8af4a0f4adbc\nF doc/compile-for-windows.md 31cddda1d5f34027f1f2b7484d580e7558f22a9875884805b6fdc84d56cab848\nF doc/json-enhancements.md e356fc834781f1f1aa22ee300027a270b2c960122468499bf347bb123ce1ea4f\nF doc/jsonb.md 5fab4b8613aa9153fbeb6259297bd4697988af8b3d23900deba588fa7841456b\nF doc/lemon.html 8b266ff711d2ec7f867c3dca37634963f48a630329908cc282beebfa8c708706\nF doc/pager-invariants.txt 27fed9a70ddad2088750c4a2b493b63853da2710\nF doc/tcl-extension-testing.md 864875c3b672db79e7d42348dd726f9a4fbd852b1d8e5efcf09fe3d1ff6bf2a2\nF doc/testrunner.md 15583cf8c7d8a1c3378fd5d4319ca769a14c4d950a5df9b015d01d5be290dc69\nF doc/trusted-schema.md 33625008620e879c7bcfbbfa079587612c434fa094d338b08242288d358c3e8a\nF doc/vdbesort-memory.md 4da2639c14cd24a31e0af694b1a8dd37eaf277aff3867e9a8cc14046bc49df56\nF doc/vfs-shm.txt e101f27ea02a8387ce46a05be2b1a902a021d37a\nF doc/wal-lock.md 781726aaba20bafeceb7ba9f91d5c98c6731691b30c954e37cf0b49a053d461d\nF ext/README.md fd5f78013b0a2bc6f0067afb19e6ad040e89a10179b4f6f03eee58fac5f169bd\nF ext/expert/README.md b321c2762bb93c18ea102d5a5f7753a4b8bac646cb392b3b437f633caf2020c3\nF ext/expert/expert.c d548d603a4cc9e61f446cc179c120c6713511c413f82a4a32b1e1e69d3f086a4\nF ext/expert/expert1.test 1d2da6606623b57bb47064e02140823ce1daecd4cacbf402c73ad3473d7f000c\nF ext/expert/sqlite3expert.c 494a6b7d4e0ead6dec6a50109dd78fcc054bb1a3fcc29c6f25e06a3685ed557e\nF ext/expert/sqlite3expert.h ca81efc2679a92373a13a3e76a6138d0310e32be53d6c3bfaedabd158ea8969b\nF ext/expert/test_expert.c b767b2039a0df707eb3147e86bcf68b252d8455d9a41774b1a836cd052ceca70\nF ext/fts3/README.content b9078d0843a094d86af0d48dffbff13c906702b4c3558012e67b9c7cc3bf59ee\nF ext/fts3/README.syntax a19711dc5458c20734b8e485e75fb1981ec2427a\nF ext/fts3/README.tokenizers b92bdeb8b46503f0dd301d364efc5ef59ef9fa8e2758b8e742f39fa93a2e422d\nF ext/fts3/README.txt 8c18f41574404623b76917b9da66fcb0ab38328d\nF ext/fts3/fts3.c 9f8ce82bbf4ec0636e6170e58f17b04817fa4c39b2d5126ac06f005d485f6d5e\nF ext/fts3/fts3.h 3a10a0af180d502cecc50df77b1b22df142817fe\nF ext/fts3/fts3Int.h 968f7d7cae541a6926146e9fd3fb2b2ccbd3845b7890a8ed03de0c06ac776682\nF ext/fts3/fts3_aux.c 7eab82a9cf0830f6551ba3abfdbe73ed39e322a4d3940ee82fbf723674ecd9f3\nF ext/fts3/fts3_expr.c 365849a2a1185e19028a9db2d9f1ea63efe909a3a6aca7ec86fc26a13a60bd58\nF ext/fts3/fts3_hash.c 8b6e31bfb0844c27dc6092c2620bdb1fca17ed613072db057d96952c6bdb48b7\nF ext/fts3/fts3_hash.h 39cf6874dc239d6b4e30479b1975fe5b22a3caaf\nF ext/fts3/fts3_icu.c 305ce7fb6036484085b5556a9c8e62acdc7763f0f4cdf5fd538212a9f3720116\nF ext/fts3/fts3_porter.c e19807ce0ae31c1c6e9898e89ecc93183d7ec224ea101af039722a4f49e5f2b8\nF ext/fts3/fts3_snippet.c c38117a2e4dcc9485a170a57a6134423955247b230fef7073c46fa9c51239540\nF ext/fts3/fts3_term.c 6a96027ad364001432545fe43322b6af04ed28bb5619ec51af1f59d0710d6d69\nF ext/fts3/fts3_test.c 7a9cb3d61774134211bf4bfdf1adcb581a1a0377f2d050a121ae7ab44baef0e3\nF ext/fts3/fts3_tokenize_vtab.c 7fd9ef364f257b97218b9c331f2378e307375c592f70fd541f714e747d944962\nF ext/fts3/fts3_tokenizer.c defede96b5dd5d658edfae77355b9c31ea65236eedc7bbe1adbc50d645cca5bc\nF ext/fts3/fts3_tokenizer.h 64c6ef6c5272c51ebe60fc607a896e84288fcbc3\nF ext/fts3/fts3_tokenizer1.c c1de4ae28356ad98ccb8b2e3388a7fdcce7607b5523738c9afb6275dab765154\nF ext/fts3/fts3_unicode.c de426ff05c1c2e7bce161cf6b706638419c3a1d9c2667de9cb9dc0458c18e226\nF ext/fts3/fts3_unicode2.c 416eb7e1e81142703520d284b768ca2751d40e31fa912cae24ba74860532bf0f\nF ext/fts3/fts3_write.c 81cd8f7e8003e427a1801e04842776b731af26dd93af206e4e66ea5ae319cad1\nF ext/fts3/fts3speed.tcl b54caf6a18d38174f1a6e84219950d85e98bb1e9\nF ext/fts3/tool/fts3cov.sh c331d006359456cf6f8f953e37f2b9c7d568f3863f00bb5f7eb87fea4ac01b73\nF ext/fts3/tool/fts3view.c 413c346399159df81f86c4928b7c4a455caab73bfbc8cd68f950f632e5751674\nF ext/fts3/unicode/CaseFolding.txt 8c678ca52ecc95e16bc7afc2dbf6fc9ffa05db8c\nF ext/fts3/unicode/UnicodeData.txt cd07314edb62d49fde34debdaf92fa2aa69011e7\nF ext/fts3/unicode/mkunicode.tcl 63db9624ccf70d4887836c320eda93ab552f21008f3be7ede551eac3ead62baa\nF ext/fts3/unicode/parseunicode.tcl a981bd6466d12dd17967515801c3ff23f74a281be1a03cf1e6f52a6959fc77eb\nF ext/fts5/extract_api_docs.tcl 009cf59c77afa86d137b0cca3e3b1a5efbe2264faa2df233f9a7aa8563926d15\nF ext/fts5/fts5.h ff5d3cc88b29e41612bfb29eb723e29e38973de62ca75ba3e8f94ccb67f5b5f2\nF ext/fts5/fts5Int.h 6abff7dd770dc5969c994c281e6e77fc277ce414d56cc4a62c145cc7036b0b67\nF ext/fts5/fts5_aux.c 65a0468dd177d6093aa9ae1622e6d86b0136b8d267c62c0ad6493ad1e9a3d759\nF ext/fts5/fts5_buffer.c 0eec58bff585f1a44ea9147eae5da2447292080ea435957f7488c70673cb6f09\nF ext/fts5/fts5_config.c e7d8dd062b44a66cd77e5a0f74f23a2354cd1f3f8575afb967b2773c3384f7f8\nF ext/fts5/fts5_expr.c 69b8d976058512c07dfe86e229521b7a871768157bd1607cedf1a5038dfd72c9\nF ext/fts5/fts5_hash.c adda4272be401566a6e0ba1acbe70ee5cb97fce944bc2e04dc707152a0ec91b1\nF ext/fts5/fts5_index.c f1f6da5938af616e0a5e54f0423a3134df95b9f17ac1c6ebf2e2e8132bbc75b9\nF ext/fts5/fts5_main.c 9a1daef7247f9b8a50b4159323e340efa6b0e4bea4fcd83580480f94d4f2c888\nF ext/fts5/fts5_storage.c 1ad05dab4830a4e2eaf2900bb143477f93bc17437093582f36f4b818809e88d8\nF ext/fts5/fts5_tcl.c 7fb5a3d3404099075aaa2457307cb459bbc257c0de3dbd52b1e80a5b503e0329\nF ext/fts5/fts5_test_mi.c 08c11ec968148d4cb4119d96d819f8c1f329812c568bac3684f5464be177d3ee\nF ext/fts5/fts5_test_tok.c 3cb0a9b508b30d17ef025ccddd26ae3dc8ddffbe76c057616e59a9aa85d36f3b\nF ext/fts5/fts5_tokenize.c 49aea8cc400a690a6c4f83c4cedc67f4f8830c6789c4ee343404f62bcaebca7b\nF ext/fts5/fts5_unicode2.c 6f9b0fb79a8facaed76628ffd4eb9c16d7f2b84b52872784f617cf3422a9b043\nF ext/fts5/fts5_varint.c e64d2113f6e1bfee0032972cffc1207b77af63319746951bf1d09885d1dadf80\nF ext/fts5/fts5_vocab.c e4830b00809e5da53bc10f93adc59e321407b0f801c7f4167c0e47f5552267e0\nF ext/fts5/fts5parse.y eb526940f892ade5693f22ffd6c4f2702543a9059942772526eac1fde256bb05\nF ext/fts5/mkportersteps.tcl 5acf962d2e0074f701620bb5308155fa1e4a63ba\nF ext/fts5/test/fts5_common.tcl c5aa7cf7148b6dcffb5b61520ae18212baf169936af734ab265143f59db328fe\nF ext/fts5/test/fts5aa.test 015c81b84d53bfcedd77d624202c8b02e9f0cbbb4b51688e3a9c9f90bccbb4ac\nF ext/fts5/test/fts5ab.test 4bdb619fee409e11417e8827e320b857e42e926a01a0408fc9f143ec870a6ced\nF ext/fts5/test/fts5ac.test 4a73626de86f3d17c95738034880c4f0de8d54741fb943d819b528373657e59b\nF ext/fts5/test/fts5ad.test 058e616612964e61d19f70295f0e6eaedceb4b29b1fbf4f859615ef7e779dc22\nF ext/fts5/test/fts5ae.test 3d49edbd50bb0684199a2e7568aeb30d1d29718f5c0f61751983740fa836d15f\nF ext/fts5/test/fts5af.test ae81f08b8da4c5f9b3ec1ef538a4ab6b7c278e92fa9058d6dc5d842c5d9771b9\nF ext/fts5/test/fts5ag.test 6667807b5d3fbf460892e756763fbe3d87a2fffe345a06514ba010ca6f6641f7\nF ext/fts5/test/fts5ah.test e1f01314b35745a30e1b494b46045b82005d71cae74f1ebd9f1338566b77f9fc\nF ext/fts5/test/fts5ai.test cbe26d78030998f535bc103f37915350b137a822c71a9db439a077d7666a3539\nF ext/fts5/test/fts5aj.test 53c8508dab4acca3e691a4c51eca4b3b018319ab8635e540103d5bbdc91543c9\nF ext/fts5/test/fts5ak.test 25e2f8afdcff30d98ca9dee8c5cacca2f26db17501c9401f16d99ee036f70e8d\nF ext/fts5/test/fts5al.test f0e655606771b2b5dbaf70e7f0044d560257cf3531d5eea40df58d0d7add8c39\nF ext/fts5/test/fts5alter.test ebbee06419c2d3cee5ef7ebb5ba6a9996f1aa374035361c0acd37368cc5f64f3\nF ext/fts5/test/fts5auto.test 2278de323172ced485d2844cb1357d00036ac1665f27e70fa1a48ce57bf31c2c\nF ext/fts5/test/fts5aux.test 27210687338133b1e9bc0dd669322fca59fd432439f40b126895e2d7c2f899d6\nF ext/fts5/test/fts5aux2.test 4f59ac5e7c06c430a9f4890877e10f7b4708e46897422ee6743d27b0a8d01497\nF ext/fts5/test/fts5auxdata.test 372549088ff792655f73e62b9dfaf4863ce74f5e604c06cffec0b37ce4624161\nF ext/fts5/test/fts5bigid.test 2860854c2561a57594192b00c33a29f91cb85e25f3d6c03b5c2b8f62708f39dd\nF ext/fts5/test/fts5bigpl.test 8f09858aab866c33593560e6480b2b6975ae7ff29ca32ad7b77e2da61402f8ef\nF ext/fts5/test/fts5bigtok.test 541119e616c637caea925a8c028c37c2c29e94383e00aa2f9198d530724b6e36\nF ext/fts5/test/fts5blob.test 9644a5f917306690e08c5f89a470a3f2489376eaa52026eeca3209d149d6af74\nF ext/fts5/test/fts5cat.test bf67dd335f964482ee658287521b81e2b88697b45eb7f73933e15f198ed447cb\nF ext/fts5/test/fts5circref.test 0918c69440a73fff429bc9797b07086fc74d018eb3abb1cf9738980390bb2713\nF ext/fts5/test/fts5colset.test 544f4998cdbfe06a3123887fc0221612e8aa8192cdaff152872f1aadb10e6897\nF ext/fts5/test/fts5columnsize.test 0af91d63985afdf663455d4b572b935238380140d74079eac362760866d3297b\nF ext/fts5/test/fts5config.test 017daf10d2642496e97402baa0134de8b5b46b9c37e53c229cd9ab711d21522c\nF ext/fts5/test/fts5conflict.test bf6030a77dbb1bedfcc42e589ed7980846c995765d77460551e448b56d741244\nF ext/fts5/test/fts5connect.test 08030168fc96fc278fa81f28654fb7e90566f33aff269c073e19b3ae9126b2f4\nF ext/fts5/test/fts5content.test d5c0c2142e64cb305f0968de70c01f8e59dbc3ecc56520c22e739e5dd99ea3bb\nF ext/fts5/test/fts5contentless.test 606f063b29ba0f46d4b79aa36cdd1ef4dab5de53eae8c881d731af75a4894aca\nF ext/fts5/test/fts5contentless2.test 70ffe6c611d8f278240da56734df8a77948f04e2739b358439e9bdcf56ced35f\nF ext/fts5/test/fts5contentless3.test 75eaae5ad6b284ee447788943974d323228f27cc35a1681da997135cff95bc6a\nF ext/fts5/test/fts5contentless4.test ec34dc69ef474ca9997dae6d91e072906e0e9a5a4b05ea89964c863833b6eff8\nF ext/fts5/test/fts5contentless5.test 38cd0392c730dc7090c550321ce3c24ba4c392bc97308b51a4180e9959dca7b5\nF ext/fts5/test/fts5corrupt.test 6485f721b88ba355ca5d701e7ee87a4efa3ea578d8e6adb26f51ef956c8328bd\nF ext/fts5/test/fts5corrupt2.test 335911e3f68b9625d850325f9e29a128db3f4276a8c9d4e32134580da8f924c4\nF ext/fts5/test/fts5corrupt3.test 3420ad30bf9e9bbdbd43b3224c582431744899530a65b11b60ddacdf14200e19\nF ext/fts5/test/fts5corrupt4.test dc08d19f5b8943e95a7778a7d8da592042504faf18dd93f68f7d7a0d7d7dd733\nF ext/fts5/test/fts5corrupt5.test bcf0801b0c991eadae3cb8e978e82b4bf01412cb4df41874a90d5aa279c7cc96\nF ext/fts5/test/fts5corrupt6.test 2d72db743db7b5d9c9a6d0cfef24d799ed1aa5e8192b66c40e871a37ed9eed06\nF ext/fts5/test/fts5corrupt7.test 4e830875c33b9ea3c4cf1ba71e692b63893cbb4faae8c69b1071889dc26e211c\nF ext/fts5/test/fts5corrupt8.test b81d802e41631e98100f49a1aadeeffef860e30a62d6ed7d743c2797c477239e\nF ext/fts5/test/fts5delete.test 2a5008f8b1174ef41d1974e606928c20e4f9da77d9f8347aed818994d89cced4\nF ext/fts5/test/fts5detail.test 54015e9c43ec4ba542cfb93268abdf280e0300f350efd08ee411284b03595cc4\nF ext/fts5/test/fts5determin.test 1b77879b2ae818b5b71c859e534ee334dac088b7cf3ff3bf76a2c82b1c788d11\nF ext/fts5/test/fts5dlidx.test a7c42b0a74dc7c8aa1a46d586e0aadda4b6cc42c24450f8d3774b21166e93159\nF ext/fts5/test/fts5doclist.test b7cb84758504519746957802db9cd31187bb4e0028b89d9087ba06e26cc4155f\nF ext/fts5/test/fts5ea.test cefdf66024550fa7920c03395c71ce5046235ed1a1a7a469d79b19e7aad5afb5\nF ext/fts5/test/fts5eb.test 401f756fdb77083aeba8b696c1e0ad4d834c39dbd6f17e492bb55a2ad64b4296\nF ext/fts5/test/fts5expr.test c7e208813df7a90badc856fde3796da79569b39382e0fdb43042127f3b8e06a7\nF ext/fts5/test/fts5fault1.test d28a65caee75db6897c3cf1358c5230d3bb2a3bf7fb31062c19c7e5382b3d2bd\nF ext/fts5/test/fts5fault2.test 69c8fdbef830cd0d450908d4504d5bb86609e255af99c421c20a0756251fe344\nF ext/fts5/test/fts5fault3.test da2f9e3e56ff5740d68ebdd6877c97089e7ed28ddff28a0da87a6afea27e5522\nF ext/fts5/test/fts5fault4.test a5c0e849127c24e1751bc453a817f09a1b8d460e75f9ae4764017e216a870db3\nF ext/fts5/test/fts5fault5.test a336e4e11847de24c9497f80cce18e00bb3fab7fb11f97d04eb9af898900a762\nF ext/fts5/test/fts5fault6.test 40f49976c6ca8927bf7d65d0b8df46009d7ea172e1d4050b294610e7ea0a2979\nF ext/fts5/test/fts5fault7.test 0acbec416edb24b8881f154e99c31e9ccf73f539cfcd164090be139e9e97ed4c\nF ext/fts5/test/fts5fault8.test 9353fe6a2a993c3231e09c49b0f4a12c8d306319555ff2ca6672b5b86fe9b0dd\nF ext/fts5/test/fts5fault9.test 098e6b894bbdf9b2192f994a30f4043673fb3f338b6b8ab1624c704422f39119\nF ext/fts5/test/fts5faultA.test be4487576bff8c22cee6597d1893b312f306504a8c6ccd3c53ca85af12290c8c\nF ext/fts5/test/fts5faultB.test d606bdb8e81aaeb6f41de3fc9fc7ae315733f0903fbff05cf54f5b045b729ab5\nF ext/fts5/test/fts5faultD.test e7ed7895abfe6bc98a5e853826f6b74956e7ba7f594f1860bbf9e504b9647996\nF ext/fts5/test/fts5faultE.test 844586ce71dab4be85bb86880e87b624d089f851654cd22e4710c77eb8ce7075\nF ext/fts5/test/fts5faultF.test 4abef99f86e99d9f0c6460dd68c586a766b6b9f1f660ada55bf2e8266bd1bbc1\nF ext/fts5/test/fts5faultG.test 0544411ffcb3e19b42866f757a8a5e0fb8fef3a62c06f61d14deebc571bb7ea9\nF ext/fts5/test/fts5faultH.test 2b2b5b8cb1b3fd7679f488c06e22af44107fbc6137eaf45b3e771dc7b149312d\nF ext/fts5/test/fts5faultI.test 0706b307b208638554c9e65b4091e1c0dd8c92941535089a301df454ff2c56f4\nF ext/fts5/test/fts5first.test bfd685b96905bf541d99d8644e0a7219d1d833455a08ab64e344071a613b6ba9\nF ext/fts5/test/fts5full.test 97d263c1072f4a560929cca31e70f65d2ae232610e17e6affcf7e979df59547b\nF ext/fts5/test/fts5fuzz1.test 238d8c45f3b81342aa384de3e581ff2fa330bf922a7b69e484bbc06051a1080e\nF ext/fts5/test/fts5hash.test fd3e0367fbf0b0944d6936fdb22696350f57b9871069c6766251578a103e8a14\nF ext/fts5/test/fts5integrity.test 646796671205dae46af5bb12a49b5696483cfe8e12d71d21454940b13ace95ab\nF ext/fts5/test/fts5integrity2.test 4c3636615c0201232c44a8105d5cb14fd5499fd0ee3014d7ffd7e83aac76ece8\nF ext/fts5/test/fts5interrupt.test 20d04204d3e341b104c0c24a41596b6393a3a81eba1044c168db0e106f9ac92c\nF ext/fts5/test/fts5lastrowid.test f36298a1fb9f988bde060a274a7ce638faa9c38a31400f8d2d27ea9373e0c4a1\nF ext/fts5/test/fts5leftjoin.test c0b4cafb9661379e576dc4405c0891d8fcc2782680740513c4d1fc114b43d4ad\nF ext/fts5/test/fts5limits.test 8ab67cf5d311c124b6ceb0062d0297767176df4572d955fce79fa43004dff01c\nF ext/fts5/test/fts5locale.test 83ba7ee12628b540d3098f39c39c1de0c0440eddff8f7512c8c698d0c4a3ae3c\nF ext/fts5/test/fts5matchinfo.test 877520582feb86bbfd95ab780099bcba4526f18ac75ee34979144cf86ba3a5a3\nF ext/fts5/test/fts5merge.test 2654df0bcdb2d117c2d38b6aeb0168061be01c643f9e9194b36c43a2970e8082\nF ext/fts5/test/fts5merge2.test 3ebad1a59d6ad3fb66eff6523a09e95dc6367cbefb3cd73196801dea0425c8e2\nF ext/fts5/test/fts5misc.test 8c3cc771f773dc4bb4973620c51e7729e324ca2cc80eb8894f1c2c605e361f0b\nF ext/fts5/test/fts5multi.test a15bc91cdb717492e6e1b66fec1c356cb57386b980c7ba5af1915f97fe878581\nF ext/fts5/test/fts5multiclient.test 5ff811c028d6108045ffef737f1e9f05028af2458e456c0937c1d1b8dea56d45\nF ext/fts5/test/fts5near.test 33d60867581066e5db7016deb5d651628125d7ff4e0233a88175aa5b65874c74\nF ext/fts5/test/fts5onepass.test f9b7d9b2c334900c6542a869760290e2ab5382af8fbd618834bf1fcc3e7b84da\nF ext/fts5/test/fts5optimize.test 264b9101721c17d06d1d174feb743fda3ddc89fad41dee980fef821428258e47\nF ext/fts5/test/fts5optimize2.test 795d4ae5f66a7239cf8d5aef4c2ea96aeb8bcd907bd9be0cfe22064fc71a44ed\nF ext/fts5/test/fts5optimize3.test 1653029284e10e0715246819893ba30565c4ead0d0fc470adae92c353ea857d3\nF ext/fts5/test/fts5origintext.test 3b73aa036ce5244bb7c5782c5441b979585bdca026accf75d16026a2a8119c09\nF ext/fts5/test/fts5origintext2.test f4505ff79bf7369f2b8b10b9cef7476049d844e20b37f29cad3a8b8d5ac6f9ba\nF ext/fts5/test/fts5origintext3.test 4988b6375acc3bbb0515667765f57e389caf449814af9c1095c053f7de2b4223\nF ext/fts5/test/fts5origintext4.test 0d3ef0a8038f471dbc83001c34fe5f7ae39b571bfc209670771eb28bc0fc50e8\nF ext/fts5/test/fts5origintext5.test ee12b440ec335e5b422d1668aca0051b52ff28b6ee67073e8bbc29f509fd562b\nF ext/fts5/test/fts5origintext6.test 09eb1347cb0dceaebbebf3d3e6bd5d24c7c1006efddc2984540450324bbdafa4\nF ext/fts5/test/fts5phrase.test bb2554bb61d15f859678c96dc89a7de415cd5fc3b7b54c29b82a0d0ad138091c\nF ext/fts5/test/fts5plan.test f8b0d752a818059a934cdc96c0f77de058a67a0a57bb3a8181d28307ab5b1626\nF ext/fts5/test/fts5porter.test 15b514fac8690b58e99c330efe5bf5615bc43f2fae4a3cca3f923dbaff55a0c0\nF ext/fts5/test/fts5porter2.test 94f0e4351e2c99b4e74f1fae05a4ddf1cb5b926620a8c14554160d075ddc7a59\nF ext/fts5/test/fts5prefix.test c0b7842f1a2d830c0b146cd438a95ea4c5a25635719ed0d973ffe41907338b83\nF ext/fts5/test/fts5prefix2.test a5bb43b8a2687efafa7ac4e5ccff6812015cf8cf18e3086bb0eb3126f30fbbf6\nF ext/fts5/test/fts5query.test 0320a7a4b58a6e3e50ec8910b301649da90ace675001f9e0bf6392750ad4591d\nF ext/fts5/test/fts5rank.test 47c1e8e5d84754ff18e012fdd629776088b5a15de41bdd24957581cf084d8a00\nF ext/fts5/test/fts5rebuild.test 83e72d77636378833233fadc7cb7517a2fa446ea7d1f94dd526ba3e7e104b9f5\nF ext/fts5/test/fts5restart.test 9af2084b8e065130037b95f05f3f220bb7973903a7701e2c5fb916dff7cf80c5\nF ext/fts5/test/fts5rowid.test 8632829fec04996832a4cfb4f0bd89721ba65b7e398c1731741bdb63f070e1a3\nF ext/fts5/test/fts5savepoint.test 1447758d7900afe903cef08b4524c5331fb60c1126ae6fba7f4d8704268013c5\nF ext/fts5/test/fts5secure.test a02f771742fb2b1b9bdcb4bf523bcf2d0aa1ff597831d40fe3e72aaa6d0ec40f\nF ext/fts5/test/fts5secure2.test 2e961d7eef939f294c56b5d895cac7f1c3a60b934ee2cfd5e5e620bdf1ba6bbc\nF ext/fts5/test/fts5secure3.test 6d066828d225b0dbe5db818d4d6165df7bb70210e68a577e858e8762400d5a23\nF ext/fts5/test/fts5secure4.test 0d10a80590c07891478700af7793b232962042677432b9846cf7fc8337b67c97\nF ext/fts5/test/fts5secure5.test c07a68ced5951567ac116c22f2d2aafae497e47fe9fcb6a335c22f9c7a4f2c3a\nF ext/fts5/test/fts5secure6.test 74bf04733cc523bccca519bb03d3b4e2ed6f6e3db7c59bf6be82c88a0ac857fd\nF ext/fts5/test/fts5secure7.test fd03d0868d64340a1db8615b02e5508fea409de13910114e4f19eaefc120777a\nF ext/fts5/test/fts5secure8.test 808ade9d172ed07b24b85c57dd53b6d2b1aba018b4e634d267ce572221de80e0\nF ext/fts5/test/fts5securefault.test c34a28c7cd2f31a8b8907563889e1329a97da975c08df2d951422bcef8e2ebc5\nF ext/fts5/test/fts5simple.test 302cdb4f8a3350b091f4f1bccd82d05610428657f6f9e81c17703ba48267ec40\nF ext/fts5/test/fts5simple2.test d10d963a357b8ec77b99032e4c816459b4dbdb1f6eee25eada7ef3ed245cb2dc\nF ext/fts5/test/fts5simple3.test 146ec3dc8f5763d6212641c9f0a2f1cba41679353d2add7b963beceb115dc7f4\nF ext/fts5/test/fts5synonym.test becc8cea6cfc958a50b30c572c68cbfdf7455971d0fe988202ce67638d2c6cf6\nF ext/fts5/test/fts5synonym2.test 58f357b997cf2fedeeb9d0de4db9f880fa96fa2fe27a743bfe7d7b96895bdd87\nF ext/fts5/test/fts5tok1.test 1f7817499f5971450d8c4a652114b3d833393c8134e32422d0af27884ffe9cef\nF ext/fts5/test/fts5tok2.test dcacb32d4a2a3f0dd3215d4a3987f78ae4be21a2\nF ext/fts5/test/fts5tokendata.test 7cad79af82e8e81b7a36b450087233d2fca051bb0d584421afc375d6dd26d6f6\nF ext/fts5/test/fts5tokenizer.test 7937cec672b148223fff8746d21d3e7ed0965fd7caf35ccdc888a005bb452f98\nF ext/fts5/test/fts5tokenizer2.test ddb8b10fbe4b84b2a75812671f127774c1d2e3e2bf82d2e0e4f0bb1cd8a2b2d6\nF ext/fts5/test/fts5tokenizer3.test eea778f7bb7024c3e904e28915f9d53286141671b138722148be22a9c758bdc3\nF ext/fts5/test/fts5trigram.test a55fde7065ae69a0f82c5a7a5bf5286a97de11ae4bff6537fd3e27ca9a01416f\nF ext/fts5/test/fts5trigram2.test 6fde9de7f63a6b4aa18dc731be56dbd6be4e755c9b13dcd55479e200d1df0e61\nF ext/fts5/test/fts5ubsan.test 9a2dcf399dc8d0e0de661f0d93884d1d27e5b7f0693cfceb97dd24d818df5dd2\nF ext/fts5/test/fts5umlaut.test a42fe2fe6387c40c49ab27ccbd070e1ae38e07f38d05926482cc0bccac9ad602\nF ext/fts5/test/fts5unicode.test 41898f7e476e6515cd4b737c02a442cda5a580a74509788aa9072a2074948e0e\nF ext/fts5/test/fts5unicode2.test 3bbd30152f9f760bf13886e5b1e5ec23ff62f56758ddda5d9c775a6082fb4c7c\nF ext/fts5/test/fts5unicode3.test f4891a3dac3b49c3d7c0fdb29566e9eb0ecff35263370c89f9661b1952b20818\nF ext/fts5/test/fts5unicode4.test 728c8f0caafb05567f524ad313d9f8b780fa45987b8a8df04eff87923c74b4d0\nF ext/fts5/test/fts5unindexed.test 168838d2c385e131120bbf5b516d2432a5fabc4caa2259c932e1d49ae209a4ae\nF ext/fts5/test/fts5unindexed2.test 516236eceaac05ace322290a0d3705b4c4ffe4760d8eb9d014d9d27d56dfcc02\nF ext/fts5/test/fts5update.test b8affd796e45c94a4d19ad5c26606ea06065a0f162a9562d9f005b5a80ccf0bc\nF ext/fts5/test/fts5update2.test c5baa76799ac605ebb8e5e21035db2014b396cef25c903eb96ba39b1d6f9f046\nF ext/fts5/test/fts5version.test 44ab35566267b7618c090443de2d9ad84f633df5d20bf72e9bad199ae5fced84\nF ext/fts5/test/fts5vocab.test 2a2bdb60d0998fa3124d541b6d30b019504918dc43a6584645b63a24be72f992\nF ext/fts5/test/fts5vocab2.test bbba149c254375d00055930c1a501c9a51e80b0d20bf7b98f3e9fa3b03786373\nF ext/fts5/tool/fts5speed.tcl b0056f91a55b2d1a3684ec05729de92b042e2f85\nF ext/fts5/tool/fts5txt2db.tcl c0d43c8590656f8240e622b00957b3a0facc49482411a9fdc2870b45c0c82f9f\nF ext/fts5/tool/loadfts5.tcl 95b03429ee6b138645703c6ca192c3ac96eaf093\nF ext/fts5/tool/mkfts5c.tcl 135b9e160f8e10211c10c5873d5e8c3eaebd3da9ec56a12ae4db157d4738ffe4\nF ext/fts5/tool/showfts5.tcl d54da0e067306663e2d5d523965ca487698e722c\nF ext/icu/README.txt 1f8d76e10d2385fc77914a14ccd99acfbaf68111dfcf26a360ad9063787f57fb\nF ext/icu/icu.c 9837f4611915baad1edbe38222f3ee7d1b5e118ab16fec9ba603720f72c78b2a\nF ext/icu/sqliteicu.h fa373836ed5a1ee7478bdf8a1650689294e41d0c89c1daab26e9ae78a32075a8\nF ext/intck/intck1.test f3a3cba14b6aeff145ffa5515546dd22f7510dad91512e519f43b92b56514012\nF ext/intck/intck2.test d2457c7e5e5b688046d15ebe08a1e1427cc5e7a6dc8d6af215f42e8bcaf67304\nF ext/intck/intck_common.tcl a61fd2697ae55b0a3d89847ca0b590c6e0d8ff64bebb70920d93724799894159\nF ext/intck/intckbusy.test d5ed4ef85a4b1dc1dee2484bd14a4bb68529659cca743327df0c775f005fa387\nF ext/intck/intckcorrupt.test f6c302792326fb3db9dcfc70b554c55369bc4b52882eaaf039cfe0b74c821029\nF ext/intck/intckfault.test cff3f75dff74abb3edfcb13f6aa53f6436746ab64b09fe5e2028f051e985efab\nF ext/intck/sqlite3intck.c 0d10df36e2b7b438aa80ecd3f5e584d41b747586b038258fe6b407f66b81e7c5\nF ext/intck/sqlite3intck.h 2b40c38e7063ab822c974c0bd4aed97dabb579ccfe2e180a4639bb3bbef0f1c9\nF ext/intck/test_intck.c 4f9eaadaedccb9df1d26ba41116a0a8e5b0c5556dc3098c8ff68633adcccdea8\nF ext/jni/GNUmakefile 59eb05f2a363bdfac8d15d66bed624bfe1ff289229184f3861b95f98a19cf4b2\nF ext/jni/README.md d899789a9082a07b99bf30b1bbb6204ae57c060efcaa634536fa669323918f42\nF ext/jni/jar-dist.make 030aaa4ae71dd86e4ec5e7c1e6cd86f9dfa47c4592c070d2e35157e42498e1fa\nF ext/jni/src/c/sqlite3-jni.c c1292e690a20c7787a63e8d8ac6e2dfed49c97282ed056a7cfda5da461f0b7d8\nF ext/jni/src/c/sqlite3-jni.h 913ab8e8fee432ae40f0e387c8231118d17053714703f5ded18202912a8a3fbf\nF ext/jni/src/org/sqlite/jni/annotation/Experimental.java 8603498634e41d0f7c70f661f64e05df64376562ea8f126829fd1e0cdd47e82b\nF ext/jni/src/org/sqlite/jni/annotation/NotNull.java 38e7e58a69b26dc100e458b31dfa3b2a7d67bc36d051325526ef1987d5bc8a24\nF ext/jni/src/org/sqlite/jni/annotation/Nullable.java 56e3dee1f3f703a545dfdeddc1c3d64d1581172b1ad01ffcae95c18547fafd90\nF ext/jni/src/org/sqlite/jni/annotation/package-info.java 977b374aed9d5853cbf3438ba3b0940abfa2ea4574f702a2448ee143b98ac3ca\nF ext/jni/src/org/sqlite/jni/capi/AbstractCollationCallback.java 1afa90d3f236f79cc7fcd2497e111992644f7596fbc8e8bcf7f1908ae00acd6c\nF ext/jni/src/org/sqlite/jni/capi/AggregateFunction.java 0b72cdff61533b564d65b63418129656daa9a9f30e7e7be982bd5ab394b1dbd0\nF ext/jni/src/org/sqlite/jni/capi/AuthorizerCallback.java c045a5b47e02bb5f1af91973814a905f12048c428a3504fbc5266d1c1be3de5a\nF ext/jni/src/org/sqlite/jni/capi/AutoExtensionCallback.java 74cc4998a73d6563542ecb90804a3c4f4e828cb4bd69e61226d1a51f4646e759\nF ext/jni/src/org/sqlite/jni/capi/BusyHandlerCallback.java 7b8e19810c42b0ad21a04b5d8c804b32ee5905d137148703f16a75b612c380ca\nF ext/jni/src/org/sqlite/jni/capi/CApi.java 27bbd944ea8c147afd25b93f17dc397f3627611ebe2878944a32ffeffc98e99e\nF ext/jni/src/org/sqlite/jni/capi/CallbackProxy.java 57e2d275dcebe690b1fc1f3d34eb96879b2d7039bce30b563aee547bf45d8a8b\nF ext/jni/src/org/sqlite/jni/capi/CollationCallback.java e29bcfc540fdd343e2f5cca4d27235113f2886acb13380686756d5cabdfd065a\nF ext/jni/src/org/sqlite/jni/capi/CollationNeededCallback.java 5bfa226a8e7a92e804fd52d6e42b4c7b875fa7a94f8e2c330af8cc244a8920ab\nF ext/jni/src/org/sqlite/jni/capi/CommitHookCallback.java 482f53dfec9e3ac2a9070d3fceebd56250932aaaf7c4f5bc8de29fc011416e0c\nF ext/jni/src/org/sqlite/jni/capi/ConfigLogCallback.java b995ca412f59b631803b93aa5b3684fce62e335d1e123207084c054abfd488d4\nF ext/jni/src/org/sqlite/jni/capi/ConfigSqlLogCallback.java e5723900b6458bc6288f52187090a78ebe0a20f403ac7c887ec9061dfe51aba7\nF ext/jni/src/org/sqlite/jni/capi/NativePointerHolder.java b7036dcb1ef1b39f1f36ac605dde0ff1a24a9a01ade6aa1a605039443e089a61\nF ext/jni/src/org/sqlite/jni/capi/OutputPointer.java 246b0e66c4603f41c567105a21189d138aaf8c58203ecd4928802333da553e7c\nF ext/jni/src/org/sqlite/jni/capi/PrepareMultiCallback.java 97352091abd7556167f4799076396279a51749fdae2b72a6ba61cd39b3df0359\nF ext/jni/src/org/sqlite/jni/capi/PreupdateHookCallback.java efcf57545c5e282d1dd332fa63329b3b218d98f356ef107a9dbe3979be82213a\nF ext/jni/src/org/sqlite/jni/capi/ProgressHandlerCallback.java 01bc0c238eed2d5f93c73522cb7849a445cc9098c2ed1e78248fa20ed1cfde5b\nF ext/jni/src/org/sqlite/jni/capi/ResultCode.java 8141171f1bcf9f46eef303b9d3c5dc2537a25ad1628f3638398d8a60cacefa7f\nF ext/jni/src/org/sqlite/jni/capi/RollbackHookCallback.java e172210a2080e851ebb694c70e9f0bf89284237795e38710a7f5f1b61e3f6787\nF ext/jni/src/org/sqlite/jni/capi/SQLFunction.java 0d1e9afc9ff8a2adb94a155b72385155fa3b8011a5cca0bb3c28468c7131c1a5\nF ext/jni/src/org/sqlite/jni/capi/SQLTester.java 0b25cde8c5fa77f3e7ad92368acf195c5c64fb1c5273b8ee71b2d7ab812aab34\nF ext/jni/src/org/sqlite/jni/capi/ScalarFunction.java 93b9700fca4c68075ccab12fe0fbbc76c91cafc9f368e835b9bd7cd7732c8615\nF ext/jni/src/org/sqlite/jni/capi/TableColumnMetadata.java addf120e0e76e5be1ff2260daa7ce305ff9b5fafd64153a7a28e9d8f000a815f\nF ext/jni/src/org/sqlite/jni/capi/Tester1.java e5fa17301b7266c1cbe4bcce67788e08e45871c7c72c153d515abb37e501de0a\nF ext/jni/src/org/sqlite/jni/capi/TraceV2Callback.java 0a25e117a0daae3394a77f24713e36d7b44c67d6e6d30e9e1d56a63442eef723\nF ext/jni/src/org/sqlite/jni/capi/UpdateHookCallback.java c8bdf7848e6599115d601bcc9427ff902cb33129b9be32870ac6808e04b6ae56\nF ext/jni/src/org/sqlite/jni/capi/ValueHolder.java 2ce069f3e007fdbbe1f4e507a5a407fc9679da31a0aa40985e6317ed4d5ec7b5\nF ext/jni/src/org/sqlite/jni/capi/WindowFunction.java caf4396f91b2567904cf94bc538a069fd62260d975bd037d15a02a890ed1ef9e\nF ext/jni/src/org/sqlite/jni/capi/XDestroyCallback.java f3abb8dd7381f53ebba909437090caf68200f06717b8a7d6aa96fa3e8133117d\nF ext/jni/src/org/sqlite/jni/capi/package-info.java 08ff986a65d2be9162442c82d28a65ce431d826f188520717c2ecb1484d0a50e\nF ext/jni/src/org/sqlite/jni/capi/sqlite3.java c6a5c555d163d76663534f2b2cce7cab15325b9852d0f58c6688a85e73ae52f0\nF ext/jni/src/org/sqlite/jni/capi/sqlite3_backup.java 6742b431cd4d77e8000c1f92ec66265a58414c86bf3b0b5fbcb1164e08477227\nF ext/jni/src/org/sqlite/jni/capi/sqlite3_blob.java 59e26ca5254cd4771f467237bcfe2d8deed30a77152fabcd4574fd406c301d63\nF ext/jni/src/org/sqlite/jni/capi/sqlite3_context.java f0ef982009c335c4393ffcb68051809ca1711e4f47bcb8d1d46952f22c01bc22\nF ext/jni/src/org/sqlite/jni/capi/sqlite3_stmt.java 293b5fa7d5b5724c87de544654aca1103d76f3092bc2c8f4360102a65ba25dff\nF ext/jni/src/org/sqlite/jni/capi/sqlite3_value.java e1d62a257c13504b46d39d5c21c49cf157ad73fda00cc5f34c931aa008c37049\nF ext/jni/src/org/sqlite/jni/fts5/Fts5.java e94681023785f1eff5399f0ddc82f46b035977d350f14838db659236ebdf6b41\nF ext/jni/src/org/sqlite/jni/fts5/Fts5Context.java 338637e6e5a2cc385d962b220f3c1f475cc371d12ae43d18ef27327b6e6225f7\nF ext/jni/src/org/sqlite/jni/fts5/Fts5ExtensionApi.java 7da0fbb5728f7c056a43e6407f13dd0c7c9c445221267786a109b987f5fc8a9d\nF ext/jni/src/org/sqlite/jni/fts5/Fts5PhraseIter.java 28045042d593a1f1b9b80d54ec77cbf1d8a1bc95e442eceefa9a3a6f56600b0e\nF ext/jni/src/org/sqlite/jni/fts5/Fts5Tokenizer.java 3c8f677ffb85b8782f865d6fcbc16200b3375d0e3c29ed541a494fde3011bf49\nF ext/jni/src/org/sqlite/jni/fts5/TesterFts5.java 51e16bf9050af7cb246d17d6a19c001cfc916bf20f425c96625aaccaf74688e8\nF ext/jni/src/org/sqlite/jni/fts5/XTokenizeCallback.java 1efd1220ea328a32f2d2a1b16c735864159e929480f71daad4de9d5944839167\nF ext/jni/src/org/sqlite/jni/fts5/fts5_api.java a8e88c3783d21cec51b0748568a96653fead88f8f4953376178d9c7385b197ea\nF ext/jni/src/org/sqlite/jni/fts5/fts5_extension_function.java 9e2b954d210d572552b28aca523b272fae14bd41e318921b22f65b728d5bf978\nF ext/jni/src/org/sqlite/jni/fts5/fts5_tokenizer.java 92bdaa3893bd684533004d64ade23d329843f809cd0d0f4f1a2856da6e6b4d90\nF ext/jni/src/org/sqlite/jni/test-script-interpreter.md 9bf7e9cab1183287b048bb77baee4b266f0c15baf1b624feec12fbf00cfa7e94\nF ext/jni/src/org/sqlite/jni/wrapper1/AggregateFunction.java d5c108b02afd3c63c9e5e53f71f85273c1bfdc461ae526e0a0bb2b25e4df6483\nF ext/jni/src/org/sqlite/jni/wrapper1/ScalarFunction.java 43c43adfb7866098aadaaca1620028a6ec82d5193149970019b1cce9eb59fb03\nF ext/jni/src/org/sqlite/jni/wrapper1/SqlFunction.java 27b141f5914c7cb0e40e90a301d5e05b77f3bd42236834a68031b7086381fafd\nF ext/jni/src/org/sqlite/jni/wrapper1/Sqlite.java ada39f18e4e3e9d4868dadbc3f7bfe1c6c7fde74fb1fb2954c3f0f70120b805c\nF ext/jni/src/org/sqlite/jni/wrapper1/SqliteException.java 982538ddb4c0719ef87dfa664cd137b09890b546029a7477810bd64d4c47ee35\nF ext/jni/src/org/sqlite/jni/wrapper1/Tester2.java ce45f2ec85facbb73690096547ed166e7be82299e3d92eaa206f82b60a6ec969\nF ext/jni/src/org/sqlite/jni/wrapper1/ValueHolder.java a84e90c43724a69c2ecebd601bc8e5139f869b7d08cb705c77ef757dacdd0593\nF ext/jni/src/org/sqlite/jni/wrapper1/WindowFunction.java c7d1452f9ff26175b3c19bbf273116cc2846610af68e01756d755f037fe7319f\nF ext/jni/src/tests/000-000-sanity.test c3427a0e0ac84d7cbe4c95fdc1cd4b61f9ddcf43443408f3000139478c4dc745\nF ext/jni/src/tests/000-001-ignored.test e17e874c6ab3c437f1293d88093cf06286083b65bf162317f91bbfd92f961b70\nF ext/jni/src/tests/900-001-fts.test bf0ce17a8d082773450e91f2388f5bbb2dfa316d0b676c313c637a91198090f0\nF ext/lsm1/Makefile 851a8108af2f00d6086b7be8a76fe54eabe2dd4cfd4171fd39285c5b11bee90d\nF ext/lsm1/Makefile.msc f8c878b467232226de288da320e1ac71c131f5ec91e08b21f502303347260013\nF ext/lsm1/lsm-test/README 87ea529d2abe615e856d4714bfe8bb185e6c2771b8612aa6298588b7b43e6f86\nF ext/lsm1/lsm-test/lsmtest.h cf58528ffe0cfe535e91b44584e2ec5fb1caacdabecef0d8dcf83bf83168bf28\nF ext/lsm1/lsm-test/lsmtest1.c 54374fe88cee888c52c31160013c26184288f47a45b23d4d85390aa539733aab\nF ext/lsm1/lsm-test/lsmtest2.c 188b09aec776516aeedcfd13b9c6faf85ba16b3671a0897a2c740ee00a5dc4f8\nF ext/lsm1/lsm-test/lsmtest3.c 9ab87528a36dbf4a61d7c8ad954f5ee368c0878c127b84b942b2e2abe522de26\nF ext/lsm1/lsm-test/lsmtest4.c d258d6a245db5d8eaede096e2368d23f859c5e92c80ab9122463f708514fe10c\nF ext/lsm1/lsm-test/lsmtest5.c 8d5242a0f870d65eeada191c8945781fed9cb8ece3886573790ebd373b62dac5\nF ext/lsm1/lsm-test/lsmtest6.c 869cb4a172cd07d1a75b3aeaecd61d0a477787b3b8668bad0d3ff0f43b642b7c\nF ext/lsm1/lsm-test/lsmtest7.c 7a917455a0f956a8ed3f44f5c9387ec0ea6627714874464cc3fa5c5a9cabb2f2\nF ext/lsm1/lsm-test/lsmtest8.c 773f226163d0f0d62701e3764d0c35fd4365faca74098bd63648bc57d6f14402\nF ext/lsm1/lsm-test/lsmtest9.c 0a168757b757b106191acf43143dbbb5b2d76e57a3c8fd3018cecbaee1080aba\nF ext/lsm1/lsm-test/lsmtest_bt.c 79b24bfd37e05fd626c35ec23bc5bb62d8a403afd66c710335384884dc1366d7\nF ext/lsm1/lsm-test/lsmtest_datasource.c 5d770be191d0ca51315926723009b2c25c0b4b8136840494ef710ac324aa916c\nF ext/lsm1/lsm-test/lsmtest_func.c 159aa401bc8032bfa3d8cf2977bd687abebab880255895a5eb45770d626fa38d\nF ext/lsm1/lsm-test/lsmtest_io.c cf11b27b129c6bd5818fa1d440176502dc27229f0db892b4479118d61993ea20\nF ext/lsm1/lsm-test/lsmtest_main.c a9bc647738c0dcaebf205d6d194b3ce4a6ef3925801cd2d919f0a4ea33a15aeb\nF ext/lsm1/lsm-test/lsmtest_mem.c 4e63c764345ab1df59d4f13a77980c6f3643798210b10d6cdbd785b4b888fda5\nF ext/lsm1/lsm-test/lsmtest_tdb.c 754b1ca8e1cfa7b29cbe2e4ab500f7eee0059033741b8d83267afe6f495a536d\nF ext/lsm1/lsm-test/lsmtest_tdb.h 8733eee249b12956a9df8322994b43d19bd8c02ad2e8b0bb5164db4d6ccc1735\nF ext/lsm1/lsm-test/lsmtest_tdb2.cc aebe50f2cb7a759214241938046fe5f00da66e4217637f946f436ca209776af9\nF ext/lsm1/lsm-test/lsmtest_tdb3.c 7a7ccae189f5bb25bcd1ec3bbd740529706eded7f6729a5a0a9eeaeb57785320\nF ext/lsm1/lsm-test/lsmtest_tdb4.c cbe230727b9413d244062943371af1421ace472ccb023b75af6540e0fa52b1bb\nF ext/lsm1/lsm-test/lsmtest_util.c 241622db5a332a09c8e6e7606b617d288a37b557f7d3bce0bb97809f67cc2806\nF ext/lsm1/lsm-test/lsmtest_win32.c 0e0a224674c4d3170631c41b026b56c7e1672b151f5261e1b4cc19068641da2d\nF ext/lsm1/lsm.h 0f6f64ff071471cb87bf98beb8386566f30ea001\nF ext/lsm1/lsmInt.h 3bcc280347196e4ed14925b64a07685415238bf41317db0598c8d3f6aaceb9c1\nF ext/lsm1/lsm_ckpt.c ad9a8028d401be9e76f20c4d86d49f33f4fc27785577b452ca955094314a72b4\nF ext/lsm1/lsm_file.c 5486f4a63b19e4d7d972ee2482f29ebdf06c29544f31845f713cccb5199f9ad1\nF ext/lsm1/lsm_log.c a8bf334532109bba05b09a504ee45fc393828b0d034ca61ab45e3940709d9a7c\nF ext/lsm1/lsm_main.c 87770a9c7e73859fce7620cb79623776ba4b30369086229ad82c3e6eeaf45457\nF ext/lsm1/lsm_mem.c 4c51ea9fa285ee6e35301b33491642d071740a0a\nF ext/lsm1/lsm_mutex.c 378edf0a2b142b4f7640ee982df06d50b98788ea\nF ext/lsm1/lsm_shared.c c67282a4f2c91e2a3362bdd40a81f9041cd587973ffc4bca8b8fbdab5470dee1\nF ext/lsm1/lsm_sorted.c bc276055afc21e7f23538d39d7cf2722379b56c79778ab7232f710e3374d501c\nF ext/lsm1/lsm_str.c 65e361b488c87b10bf3e5c0070b14ffc602cf84f094880bece77bbf6678bca82\nF ext/lsm1/lsm_tree.c 682679d7ef2b8b6f2fe77aeb532c8d29695bca671c220b0abac77069de5fb9fb\nF ext/lsm1/lsm_unix.c 11e0a5c19d754a4e1d93dfad06de8cc201f10f886b8e61a4c599ed34e334fc24\nF ext/lsm1/lsm_varint.c fe134ad7b2db1ecd99b6a155d2f3625cfd497730e227ae18892452e457b73327\nF ext/lsm1/lsm_vtab.c 0bc7d2702150e9d5513118f23fdb5d7f3642884e6c0dde332da08b016857887a\nF ext/lsm1/lsm_win32.c 0a4acbd7e8d136dd3a5753f0a9e7a9802263a9d96cef3278cf120bcaa724db7c\nF ext/lsm1/test/lsm1_common.tcl 5ed4bab07c93be2e4f300ebe46007ecf4b3e20bc5fbe1dedaf04a8774a6d8d82\nF ext/lsm1/test/lsm1_simple.test a04d08e8661ae6fc53786c67f0bd102c6692f003e859dde03ed9ac3f12e066e5\nF ext/lsm1/tool/mklsm1c.tcl f31561bbee5349f0a554d1ad7236ac1991fc09176626f529f6078e07335398b0\nF ext/misc/README.md d6dd0fe1d8af77040216798a6a2b0c46c73054d2f0ea544fbbcdccf6f238c240\nF ext/misc/amatch.c 5001711cbecdd57b288cb613386789f3034e5beb58fbe0c79f2b3d643ffd4e03\nF ext/misc/anycollseq.c 5ffdfde9829eeac52219136ad6aa7cd9a4edb3b15f4f2532de52f4a22525eddb\nF ext/misc/appendvfs.c 9642c7a194a2a25dca7ad3e36af24a0a46d7702168c4ad7e59c9f9b0e16a3824\nF ext/misc/base64.c 95abb0547cb1799d9851f3357c8d7fc3c09a95c63c8772aa3acd5f65f12050f6\nF ext/misc/base85.c a70c885c5c9350261ea6e7b166038eab21a09cf4fceae856ce41fae9c2213b60\nF ext/misc/basexx.c 89ad6b76558efbceb627afd5e2ef1d84b2e96d9aaf9b7ecb20e3d00b51be6fcf\nF ext/misc/blobio.c a867c4c4617f6ec223a307ebfe0eabb45e0992f74dd47722b96f3e631c0edb2a\nF ext/misc/btreeinfo.c cb952620eedf5c0b7625b678f0f08e54d2ec0011d4e50efda5ebdc97f3df7d04\nF ext/misc/carray.c 34fac63770971611c5285de0a9f0ac67d504eaf66be891f637add9290f1c76a5\nF ext/misc/carray.h 503209952ccf2431c7fd899ebb92bf46bf7635b38aace42ec8aa1b8d7b6e98a5\nF ext/misc/cksumvfs.c 3a7931dd30667be6348af919f3f9e6188dfd7646b42af8e399a499b327f5bd63\nF ext/misc/closure.c 0e04f52d93e678dd6f950f195f365992edf3c380df246f3d80425cba4c13891e\nF ext/misc/completion.c cb978c88d5577821323617a8ea775ce1b920e02dcdb593858f02044a4d008eea\nF ext/misc/compress.c 2c79a74330e0e0ba6cb3f7397f8ba5af12d46377ef5d3ee075e12dd8a6ed57f0\nF ext/misc/csv.c 575c2c05fba0a451586a4d42c2c81e711780c41e797126f198d8d9e0a308dcdb\nF ext/misc/dbdump.c b8592f6f2da292c62991a13864a60d6c573c47a9cc58362131b9e6a64f823e01\nF ext/misc/decimal.c 172cf81a8634e6a0f0bedaf71a8372fee63348cf5a3c4e1b78bb233c35889fdc\nF ext/misc/eval.c 04bc9aada78c888394204b4ed996ab834b99726fb59603b0ee3ed6e049755dc1\nF ext/misc/explain.c 606100185fb90d6a1eade1ed0414d53503c86820d8956a06e3b0a56291894f2b\nF ext/misc/fileio.c 07cf3109ec6452789e3a989a010234e2a17b599ce82ea29212c948572456abac\nF ext/misc/fossildelta.c 8c026e086e406e2b69947f1856fa3b848fff5379962276430d10085b8756b05a\nF ext/misc/fuzzer.c 8b28acf1a7e95d50e332bdd47e792ff27054ad99d3f9bc2e91273814d4b31a5a\nF ext/misc/ieee754.c 62a90978204d2c956d5036eb89e548e736ca5fac0e965912867ddd7bb833256d\nF ext/misc/memstat.c 5b284b78be431c1f5fa154b18eade2407e42c65ed32ec9e9fbf195d114778d7d\nF ext/misc/memtrace.c 7c0d115d2ef716ad0ba632c91e05bd119cb16c1aedf3bec9f06196ead2d5537b\nF ext/misc/memvfs.c 7dffa8cc89c7f2d73da4bd4ccea1bcbd2bd283e3bb4cea398df7c372a197291b\nF ext/misc/mmapwarm.c a81af4aaec00f24f308e2f4c19bf1d88f3ac3ce848c36daa7a4cd38145c4080d\nF ext/misc/nextchar.c 7877914c2a80c2f181dd04c3dbef550dfb54c93495dc03da2403b5dd58f34edd\nF ext/misc/noop.c f1a21cc9b7a4e667e5c8458d80ba680b8bd4315a003f256006046879f679c5a0\nF ext/misc/normalize.c bd84355c118e297522aba74de34a4fd286fc775524e0499b14473918d09ea61f\nF ext/misc/pcachetrace.c f4227ce03fb16aa8d6f321b72dd051097419d7a028a9853af048bee7645cb405\nF ext/misc/percentile.c 82531c62cd015b9cdca95ad6bb10c3a907ceb570d21ebd4fb7d634c809cfb089\nF ext/misc/prefixes.c 82645f79229877afab08c8b08ca1e7fa31921280906b90a61c294e4f540cd2a6\nF ext/misc/qpvtab.c fc189e127f68f791af90a487f4460ec91539a716daf45a0c357e963fd47cc06c\nF ext/misc/randomjson.c ef835fc64289e76ac4873b85fe12f9463a036168d7683cf2b773e36e6262c4ed\nF ext/misc/regexp.c 4bdd0045912f81c84908bd535ec5ad3b1c8540b4287c70ab84070963624047db\nF ext/misc/remember.c add730f0f7e7436cd15ea3fd6a90fd83c3f706ab44169f7f048438b7d6baa69c\nF ext/misc/rot13.c 51ac5f51e9d5fd811db58a9c23c628ad5f333c173f1fc53c8491a3603d38556c\nF ext/misc/scrub.c 2a44b0d44c69584c0580ad2553f6290a307a49df4668941d2812135bfb96a946\nF ext/misc/series.c cbdda2e2eb8159a1331974d246984c6e2693c6ea93930e6165046c8dbb8db0e9\nF ext/misc/sha1.c cb5002148c2661b5946f34561701e9105e9d339b713ec8ac057fd888b196dcb9\nF ext/misc/shathree.c f3a778f27bf3e71b666a77f28e463a3b931c4dbe4219447e61bb678b4bc121c3\nF ext/misc/showauth.c 732578f0fe4ce42d577e1c86dc89dd14a006ab52\nF ext/misc/spellfix.c bcc42ef3fd29429bc01a83e751332b8d4690e65d45008449bdffe7656371487f\nF ext/misc/sqlar.c a6175790482328171da47095f87608b48a476d4fac78d8a9ff18b03a2454f634\nF ext/misc/sqlite3_stdio.c 5657afb6ec81bef31790973528980af778e0e1388a93db780d33007336efe6e6\nF ext/misc/sqlite3_stdio.h f05eaf5e0258f0573910324a789a9586fc360a57678c57a6d63cfaa2245b6176\nF ext/misc/stmt.c b090086cd6bd6281c21271d38d576eeffe662f0e6b67536352ce32bbaa438321\nF ext/misc/stmtrand.c 59cffa5d8e158943ff1ce078956d8e208e8c04e67307e8f249dece2436dcb7fc\nF ext/misc/templatevtab.c 10f15b165b95423ddef593bc5dcb915ec4eb5e0f1066d585e5435a368b8bc22b\nF ext/misc/totype.c 75ed9827d19cc3b434fc2aeb60725d4d46e1534373615612a4d1cfdcc3d60922\nF ext/misc/uint.c 053fed3bce2e89583afcd4bf804d75d659879bbcedac74d0fa9ed548839a030b\nF ext/misc/unionvtab.c 716d385256d5fb4beea31b0efede640807e423e85c9784d21d22f0cce010a785\nF ext/misc/urifuncs.c f71360d14fa9e7626b563f1f781c6148109462741c5235ac63ae0f8917b9c751\nF ext/misc/uuid.c 5bb2264c1b64d163efa46509544fd7500cb8769cb7c16dd52052da8d961505cf\nF ext/misc/vfslog.c 3932ab932eeb2601dbc4447cb14d445aaa9fbe43b863ef5f014401c3420afd20\nF ext/misc/vfsstat.c a85df08654743922a19410d7b1e3111de41bb7cd07d20dd16eda4e2b808d269d\nF ext/misc/vfstrace.c 9c4abd2f67ae2760e7a241eca2e8517c64480ac2c3e66a499326e688a9bbee22\nF ext/misc/vtablog.c 1100250ce8782db37c833e3a9a5c9a3ecf1af5e15b8325572b82e6e0a138ffb5\nF ext/misc/vtshim.c 1976e6dd68dd0d64508c91a6dfab8e75f8aaf6cd\nF ext/misc/wholenumber.c 0fa0c082676b7868bf2fa918e911133f2b349bcdceabd1198bba5f65b4fc0668\nF ext/misc/zipfile.c b62147ac4985eaac4e368d529b1f4f43ad6bc9ac13d6805d907fff3afdac64d3\nF ext/misc/zorder.c b0ff58fa643afa1d846786d51ea8d5c4b6b35aa0254ab5a82617db92f3adda64\nF ext/rbu/rbu.c 801450b24eaf14440d8fd20385aacc751d5c9d6123398df41b1b5aa804bf4ce8\nF ext/rbu/rbu1.test 25870dd7db7eb5597e2b4d6e29e7a7e095abf332660f67d89959552ce8f8f255\nF ext/rbu/rbu10.test 7c22caa32c2ff26983ca8320779a31495a6555737684af7aba3daaf762ef3363\nF ext/rbu/rbu11.test 8584f80ef4be00e6beec4154f638847ffc40b5f2832ffadfbaf558ae40e50cb5\nF ext/rbu/rbu12.test ec63aa7bfc3c65c1d774bf4357ed731723827d211d9d7cb0efa171bbaeeebaf4\nF ext/rbu/rbu13.test 658edbc3325d79252a98b761fde95460e439f80e820ff29e10261e25f870b3b6\nF ext/rbu/rbu14.test 05dac607a62f62102f4db92135979a8a4501143638060019aca08c753822cf39\nF ext/rbu/rbu3.test 4a81517af618c3bf8c72e2d0b81c7c06acb8d176036d63d8e6669b73342306ae\nF ext/rbu/rbu5.test e21820b83822ae4c12afc2078a7b6c0523fb0cefe69c8b23c044cea91359e81c\nF ext/rbu/rbu6.test db2ff1f832dfc9e34c7910b17e157c2fe0e36024a3fe1119dd6437640dc07c82\nF ext/rbu/rbu7.test 5fa41734613a3ae1bb93d280eb3c341cff5dcc72652ff9ec7fbaa12425eda9c2\nF ext/rbu/rbu8.test 93d45824dab8f68872b6d22acc787ab18ba92ef0fa0d430be37653d0246c7a0d\nF ext/rbu/rbu9.test 4b66f0705442711a44b54ef2cc3c59952f1ea15f12e34442681bdb1a6eb33065\nF ext/rbu/rbuA.test 3f8fdd4ae7b9a0571af7361cd88359254f63e445ac4acfe395173e31d7e3fc31\nF ext/rbu/rbuB.test c639803bbc1dc9358afe6abe046dc4d3e9965238b75239b04e3a8e33e3e90f85\nF ext/rbu/rbuC.test 5326ea3954754c68fd518beb70d3e6b6690af53e1a5fa102d650e4110b26b4c5\nF ext/rbu/rbu_common.tcl 15d063397a89aeaf26b4cbdf6f29911b4154a902ba61a40c4f180ab452454a63\nF ext/rbu/rbubusy.test 88298187ad35aac9084436d85ca66b3722f96eaa704a09cfe5f931d452ab7237\nF ext/rbu/rbucollate.test 9852ec5e5ba7f3b04ce849a24ef7298e03ae0f16e58e6031d0f845234559feec\nF ext/rbu/rbucrash.test d2b5d619d9281c89cad74401b73b46172daa89906940b1d739c813ddc0cd2cf5\nF ext/rbu/rbucrash2.test 0a1a72223d880215ce2893a3260320c31a9358d23cb124c610e4f0d984a93285\nF ext/rbu/rbudiff.test 8b8b8b569c68fc880134e0fac4bf6b4b7a907aea4cc6eacf7e1d45e1d47b6aac\nF ext/rbu/rbudor.test 293a192e668bb8e9c7c9704b080c1086ee17496f768e0f1823049e7d02651d1b\nF ext/rbu/rbuexlock.test e07a0875d0b72f7c007e5d5dcf424e9d48a4752a1a9bcee8ee36947e6add6d5b\nF ext/rbu/rbuexpr.test 2c91617509c88b6e9030f7bf6ff720df26032fcd801adc25533feae726a57382\nF ext/rbu/rbufault.test c51de14067cfe867849530d3d1718ffeb28522f28d52937f95dd7bc2116eb42e\nF ext/rbu/rbufault2.test 8cc8f6298d2d7d20080b2c77e65b607af8b89839f9d87c0972b27e6442edc258\nF ext/rbu/rbufault3.test d14ff46e050816ce43c4ed320a0927712636ac11bf48bfc5f74601f183af5445\nF ext/rbu/rbufault4.test 39fbf093b7e16aae85dc309262ec570d217a1578538c1c74dd621e5451c083d6\nF ext/rbu/rbufts.test df754d2f96c22d1da8b5d685b4a4a49863971920856d17620cef724e3a9b6edd\nF ext/rbu/rbumisc.test 6641749e42c83062824c86b3d03a47f8ec35760f341bc023f53e612655b0a8af\nF ext/rbu/rbumulti.test 6f6cdd9b3775108aada5216762cbbd7b5d5caa7cb620b3e6e1b8ace81286a2e0\nF ext/rbu/rbupartial.test 4ed7789f47128c8aa7ff58445face8a070cef852993afe03c863913f3cea8729\nF ext/rbu/rbupass.test 2ee86581a441f3b4b449b99a2dc203d5d6a08750dd2ee9ab6a02743e238d3c8a\nF ext/rbu/rbuprogress.test db8bb26a8123d35f52acfc3984b56caa31c8fcd1fa3589991b9c8e8a68e64b59\nF ext/rbu/rburename.test 8d8a6a6ba896338d0610658e1f60e8055a181d5913e1e21c41b866a8f15bb7cd\nF ext/rbu/rburesume.test 1403752d152b55efb7fc25749c0fccc790061371ec9ffe428cc04f8a69bb834c\nF ext/rbu/rbusave.test 588b618dad9d65c4b13d03a79931de82213503fedc26bdf5789c996ecf427fba\nF ext/rbu/rbusplit.test a6dedd23cf37bcf2e8646d9d7139846e96d60d92f9bc6d6ba6ca8c24c0bd1f72\nF ext/rbu/rbutemplimit.test 4980df2d4b74f4dd982add8f78809106154ef5a3c4bdce747422ab0b0481e029\nF ext/rbu/rbuvacuum.test 542561741ff2b262e3694bc6012b44694ee62c545845319a06f323783b15311e\nF ext/rbu/rbuvacuum2.test ae097d04feb041446a74fac94b24bffeb3fdd60e32b848c5611e507ab702b81b\nF ext/rbu/rbuvacuum3.test 3ce42695fdf21aaa3499e857d7d4253bc499ad759bcd6c9362042c13cd37d8de\nF ext/rbu/rbuvacuum4.test ffccd22f67e2d0b380d2889685742159dfe0d19a3880ca3d2d1d69eefaebb205\nF ext/rbu/sqlite3rbu.c c07817e89477b8fc286ab6ed87da5bc82fc3490bbbe9e9b22eb2d900e81ee5dc\nF ext/rbu/sqlite3rbu.h 9d923eb135c5d04aa6afd7c39ca47b0d1d0707c100e02f19fdde6a494e414304\nF ext/rbu/test_rbu.c b9727c3394307d058e806c1da0f8bb7b24daf3c6bb94cb10cca88ea4d5c806c0\nF ext/recover/dbdata.c 5295f4f922b60d7035b6b9fd5846b13071b9d97ed7fad8496837bb7640d24771\nF ext/recover/recover1.test e16d78e94183562abff569967b18b7c77451d7044365516cd0fe14713a284851\nF ext/recover/recover_common.tcl a61306c1eb45c0c3fc45652c35b2d4ec19729e340bdf65a272ce4c229cefd85a\nF ext/recover/recoverbuild.test c74170e0f7b02456af41838afeb5353fdb985a48cc2331d661bbabbca7c6b8e3\nF ext/recover/recoverclobber.test 3ba6c0c373c5c63d17e82eced64c05c57ccaf26c1abe1ca7141334022a79f32e\nF ext/recover/recovercorrupt.test 64c081ad1200ae77b447da99eb724785d6bf71715f394543dc7689642e92bf49\nF ext/recover/recovercorrupt2.test 7347ccc9c36a925d99b56689c791423b45294834198f17575183fd500f52d85d\nF ext/recover/recovercorrupt3.test 2e7b9a1b528ca23ed382cec6f64e3fcbbd0f8e852add7562397fd8df83f335d5\nF ext/recover/recovercorrupt4.test 3e2794145dad2517c018cb68b96f59d4d55b18b3d6271e1d37852cfd7a30b50c\nF ext/recover/recoverfault.test 9d9f88eeb222615a25e7514f234c950d46bee20d24cd8db49d8fff8d650dcfe1\nF ext/recover/recoverfault2.test 730e7371bcda769554d15460cb23126abba1be8eca9539ccabf63623e7bb7e09\nF ext/recover/recoverold.test 68db3d6f85dd2b98e785b6c4da4f5eea4bbe52ccf6674d9a94c7506dc92596aa\nF ext/recover/recoverpgsz.test 88766fcb810e52ee05335c456d4e5fb06d02b73d3ccb48c52bf293434305e2b1\nF ext/recover/recoverrowid.test f948bf4024a5f41b0e21b8af80c60564c5b5d78c05a8d64fc00787715ff9f45f\nF ext/recover/recoverslowidx.test 5205a9742dd9490ee99950dabb622307355ef1662dea6a3a21030057bfd81411\nF ext/recover/recoversql.test e66d01f95302a223bcd3fd42b5ee58dc2b53d70afa90b0d00e41e4b8eab20486\nF ext/recover/sqlite3recover.c 788438a6735108d14ca82cf39c59abf8cde2ee384b962fb93e975eb24f2732fe\nF ext/recover/sqlite3recover.h 011c799f02deb70ab685916f6f538e6bb32c4e0025e79bfd0e24ff9c74820959\nF ext/recover/test_recover.c 072260d7452a3b81aba995b2b3269e7ec2aa7f06725544ba4c25b1b0a1dbc61a\nF ext/repair/README.md 92f5e8aae749a4dae14f02eea8e1bb42d4db2b6ce5e83dbcdd6b1446997e0c15\nF ext/repair/checkfreelist.c e21f06995ff4efdc1622dcceaea4dcba2caa83ca2f31a1607b98a8509168a996\nF ext/repair/checkindex.c af5c66463f51462d8a6f796b2c44ef8cfa1116bbdc35a15da07c67a705388bfd\nF ext/repair/sqlite3_checker.c.in 445118c5f7fea958b36fba1b2c464283e60ed4842039ddee3265f1698115ebf7\nF ext/repair/sqlite3_checker.tcl a9a2caa9660567257c177a91124d8c0dccdfa341e25c51e6da7f1fd9e601eafa\nF ext/repair/test/README.md 34b2f542cf5be7bffe479242b33ee3492cea30711e447cc4a1a86cb5915f419e\nF ext/repair/test/checkfreelist01.test 3e8aa6aeb4007680c94a8d07b41c339aa635cc78249442da72ff3f8297398a69\nF ext/repair/test/checkindex01.test b530f141413b587c9eb78ff734de6bb79bc3515c335096108c12c01bddbadcec\nF ext/repair/test/test.tcl 686d76d888dffd021f64260abf29a55c57b2cedfa7fc69150b42b1d6119aac3c\nF ext/rtree/README 6315c0d73ebf0ec40dedb5aa0e942bc8b54e3761\nF ext/rtree/geopoly.c 0dd4775e896cee6067979d67aff7c998e75c2c9d9cd8d62a1a790c09cde7adca\nF ext/rtree/rtree.c 4c58755830a0902435322bf61b2994ae02951a039daefb31cff9457d3e2aa201\nF ext/rtree/rtree.h 4a690463901cb5e6127cf05eb8e642f127012fd5003830dbc974eca5802d9412\nF ext/rtree/rtree1.test e0608db762b2aadca0ecb6f97396cf66244490adc3ba88f2a292b27be3e1da3e\nF ext/rtree/rtree2.test 9d9deddbb16fd0c30c36e6b4fdc3ee3132d765567f0f9432ee71e1303d32603d\nF ext/rtree/rtree3.test 272594f88c344e973864008bbe4c71fd3a41a264c097d568593ee7886d83d409\nF ext/rtree/rtree4.test 304de65d484540111b896827e4261815e5dca4ce28eeecd58be648cd73452c4b\nF ext/rtree/rtree5.test 49c9041d713d54560b315c2c7ef7207ee287eba1b20f8266968a06f2e55d3142\nF ext/rtree/rtree6.test 2f5ffc69670395c1a84fad7924e2d49e82a25460c5293fb1e54e1aa906f04945\nF ext/rtree/rtree7.test c8fb2e555b128dd0f0bdb520c61380014f497f8a23c40f2e820acc9f9e4fdce5\nF ext/rtree/rtree8.test 4da84c7f328bbdca15052fa13da6e8b8d426433347bf75fc85574c2f5a411a02\nF ext/rtree/rtree9.test fd3c9384ef8aabbc127b3878764070398f136eebc551cd20484b570f2cc1956a\nF ext/rtree/rtreeA.test 14e67fccc5b41efbad7ea99d21d11aaa66d2067da7d5b296ee86e4de64391d82\nF ext/rtree/rtreeB.test 4cec297f8e5c588654bbf3c6ed0903f10612be8a2878055dd25faf8c71758bc9\nF ext/rtree/rtreeC.test 2978b194d09b13e106bdb0e1c5b408b9d42eb338c1082bf43c87ef43bd626147\nF ext/rtree/rtreeD.test fe46aa7f012e137bd58294409b16c0d43976c3bb92c8f710481e577c4a1100dc\nF ext/rtree/rtreeE.test e65d3fc625da1800b412fc8785817327d43ccfec5f5973912d8c9e471928caa9\nF ext/rtree/rtreeF.test 81ffa7ef51c4e4618d497a57328c265bf576990c7070633b623b23cd450ed331\nF ext/rtree/rtreeG.test 1b9ca6e3effb48f4161edaa463ddeaa8fca4b2526d084f9cbf5dbe4e0184939c\nF ext/rtree/rtreeH.test 0885151ee8429242625600ae47142cca935332c70a06737f35af53a7bd7aaf90\nF ext/rtree/rtreeI.test 608e77f7fde9be5a12eae316baef640fffaafcfa90a3d67443e78123e19c4ca4\nF ext/rtree/rtreeJ.test 93227ccd4d6c328f5ac46a902b8880041509dd2d68f6ce71560f0d8ab5bb507a\nF ext/rtree/rtree_perf.tcl 6c18c1f23cd48e0f948930c98dfdd37dfccb5195\nF ext/rtree/rtree_util.tcl 202ca70df1f0645ef9d5a2170e62d378a28098d9407f0569e85c9c1cf1bd020a\nF ext/rtree/rtreecheck.test 84eedb43b25b3edf591125266d0bb1cebdfcdcc9c4a56b27d85bcb63c7dd7558\nF ext/rtree/rtreecirc.test aec664eb21ae943aeb344191407afff5d392d3ae9d12b9a112ced0d9c5de298e\nF ext/rtree/rtreeconnect.test 225ad3fcb483d36cbee423a25052a6bbae762c9576ae9268332360c68c170d3d\nF ext/rtree/rtreedoc.test d633982d61542f3bc0a0a2df0382a02cc699ac56cbda01130cde6da44a228490\nF ext/rtree/rtreedoc2.test 194ebb7d561452dcdc10bf03f44e30c082c2f0c14efeb07f5e02c7daf8284d93\nF ext/rtree/rtreedoc3.test 555a878c4d79c4e37fa439a1c3b02ee65d3ebaf75d9e8d96a9c55d66db3efbf8\nF ext/rtree/rtreefuzz001.test 44f680a23dbe00d1061dbde381d711119099846d166580c4381e402b9d62cb74\nF ext/rtree/sqlite3rtree.h 03c8db3261e435fbddcfc961471795cbf12b24e03001d0015b2636b0f3881373\nF ext/rtree/test_rtreedoc.c d20f51d1ad69c72947a4ac72194e5a12e70b3464e7492538fcef66fa871c5081\nF ext/rtree/tkt3363.test 142ab96eded44a3615ec79fba98c7bde7d0f96de\nF ext/rtree/util/randomshape.tcl 54ee03d0d4a1c621806f7f44d5b78d2db8fac26e0e8687c36c4bd0203b27dbff\nF ext/rtree/viewrtree.tcl eea6224b3553599ae665b239bd827e182b466024\nF ext/rtree/visual01.txt e9c2564083bcd30ec51b07f881bffbf0e12b50a3f6fced0c222c5c1d2f94ac66\nF ext/session/changeset.c 7a1e6a14c7e92d36ca177e92e88b5281acd709f3b726298dc34ec0fb58869cb5\nF ext/session/changesetfuzz.c 227076ab0ae4447d742c01ee88a564da6478bbf26b65108bf8fac9cd8b0b24aa\nF ext/session/changesetfuzz1.test 15b629004e58d5ffcc852e6842a603775bb64b1ce51254831f3d12b113b616cd\nF ext/session/session1.test 8d0509cd3fcfdee6a33422d5fe5c95a9770d62a0b8588adb0177ecdf79b2c345\nF ext/session/session2.test ee83bb973b9ce17ccce4db931cdcdae65eb40bbb22089b2fe6aa4f6be3b9303f\nF ext/session/session3.test 2cc1629cfb880243aec1a7251145e07b78411d851b39b2aa1390704550db8e6a\nF ext/session/session4.test 823f6f018fcbb8dacf61e2960f8b3b848d492b094f8b495eae1d9407d9ab7219\nF ext/session/session5.test 716bc6fafd625ce60dfa62ae128971628c1a1169\nF ext/session/session6.test 35279f2ec45448cd2e24a61688219dc6cf7871757716063acf4a8b5455e1e926\nF ext/session/session8.test 326f3273abf9d5d2d7d559eee8f5994c4ea74a5d935562454605e6607ee29904\nF ext/session/session9.test be090b1420f3824a573da9e56ff542b1e1c2a4f772118e9ab2f75774e66d25d0\nF ext/session/sessionA.test 1feeab0b8e03527f08f2f1defb442da25480138f\nF ext/session/sessionB.test c4fb7f8a688787111606e123a555f18ee04f65bb9f2a4bb2aa71d55ce4e6d02c\nF ext/session/sessionC.test f8a5508bc059ae646e5ec9bdbca66ad24bc92fe99fda5790ac57e1f59fce2fdf\nF ext/session/sessionD.test f5c6a762d00bc6ca9d561695c322ba8ecca2bed370486707ef37cf565d2f6c73\nF ext/session/sessionE.test b2010949c9d7415306f64e3c2072ddabc4b8250c98478d3c0c4d064bce83111d\nF ext/session/sessionF.test d37ed800881e742c208df443537bf29aa49fd56eac520d0f0c6df3e6320f3401\nF ext/session/sessionG.test 3efe388282d641b65485b5462e67851002cd91a282dc95b685d085eb8efdad0a\nF ext/session/sessionH.test 71bbff6b1abb2c4ac62b84dee53273c37e0b21e5fde3aed80929403e091ef859\nF ext/session/session_common.tcl e5598096425486b363718e2cda48ee85d660c96b4f8ea9d9d7a4c3ef514769da\nF ext/session/session_speed_test.c dcf0ef58d76b70c8fbd9eab3be77cf9deb8bc1638fed8be518b62d6cbdef88b3\nF ext/session/sessionalter.test e852acb3d2357aac7d0b920a2109da758c4331bfdf85b41d39aa3a8c18914f65\nF ext/session/sessionat.test 00c8badb35e43a2f12a716d2734a44d614ff62361979b6b85419035bc04b45ee\nF ext/session/sessionbig.test 47c381e7acfabeef17d98519a3080d69151723354d220afa2053852182ca7adf\nF ext/session/sessionblob.test 87faf667870b72f08e91969abd9f52a383ab7b514506ee194d64a39d8faff00a\nF ext/session/sessionchange.test 77c4702050f24270b58070e2cf01c95c3d232a3ef164b70f31974b386ce69903\nF ext/session/sessionconflict.test 8b8cbd98548e2e636ddc17d0986276f60e833fb865617dd4f88ea5bbe3a16b96\nF ext/session/sessiondiff.test e89f7aedcdd89e5ebac3a455224eb553a171e9586fc3e1e6a7b3388d2648ba8d\nF ext/session/sessionfault.test c2b43d01213b389a3f518e90775fca2120812ba51e50444c4066962263e45c11\nF ext/session/sessionfault2.test b0d6a7c1d7398a7e800d84657404909c7d385965ea8576dc79ed344c46fbf41c\nF ext/session/sessionfault3.test ce0b5d182133935c224d72507dbf1c5be1a1febf7e85d0b0fbd6d2f724b32b96\nF ext/session/sessioninvert.test 04075517a9497a80d39c495ba6b44f3982c7371129b89e2c52219819bc105a25\nF ext/session/sessionmem.test f2a735db84a3e9e19f571033b725b0b2daf847f3f28b1da55a0c1a4e74f1de09\nF ext/session/sessionnoact.test 0f552bd318b764bbc5b2cd6f3518435254a1c830fdaa5aab9c688f507ebc301e\nF ext/session/sessionnoop.test a9366a36a95ef85f8a3687856ebef46983df399541174cb1ede2ee53b8011bc7\nF ext/session/sessionnoop2.test de4672dce88464396ec9f30ed08c6c01643a69c53ae540fadbbf6d30642d64e8\nF ext/session/sessionrebase.test 702378bdcb5062f1106e74457beca8797d09c113a81768734a58b197b5b334e2\nF ext/session/sessionrowid.test 85187c2f1b38861a5844868126f69f9ec62223a03449a98a80600a44396f7363\nF ext/session/sessionsize.test 8fcf4685993c3dbaa46a24183940ab9f5aa9ed0d23e5fb63bfffbdb56134b795\nF ext/session/sessionstat1.test 5e718d5888c0c49bbb33a7a4f816366db85f59f6a4f97544a806421b85dc2dec\nF ext/session/sessionwor.test 6fd9a2256442cebde5b2284936ae9e0d54bde692d0f5fd009ecef8511f4cf3fc\nF ext/session/sqlite3session.c d6f5e3e83b9b0bbc4a8db4837284f0ecc6af5321d4c8e7136380b456b278c46a\nF ext/session/sqlite3session.h 683ccbf16e2c2521661fc4c1cf918ce57002039efbcabcd8097fa4bca569104b\nF ext/session/test_session.c aa29abdcc9011ac02f4fa38e8ede226106eaeee7c3ea7d8b2b999a124e0c368c\nF ext/wasm/EXPORTED_FUNCTIONS.fiddle.in 27450c8b8c70875a260aca55435ec927068b34cef801a96205adb81bdcefc65c\nF ext/wasm/GNUmakefile 311aa0d5edc7006409962cc77cc26560d92f9be69c2c4302e8bbc68189fd02db\nF ext/wasm/README-dist.txt 6382cb9548076fca472fb3330bbdba3a55c1ea0b180ff9253f084f07ff383576\nF ext/wasm/README.md a8a2962c3aebdf8d2104a9102e336c5554e78fc6072746e5daf9c61514e7d193\nF ext/wasm/SQLTester/GNUmakefile e0794f676d55819951bbfae45cc5e8d7818dc460492dc317ce7f0d2eca15caff\nF ext/wasm/SQLTester/SQLTester.mjs 66e1adc3d79467b68e3e40614fd42c1a577c7e219ec0985db966eded52a941e5\nF ext/wasm/SQLTester/SQLTester.run.mjs 57f2adb33f43f2784abbf8026c1bfd049d8013af1998e7dcb8b50c89ffc332e0\nF ext/wasm/SQLTester/index.html 64f3435084c7d6139b08d1f2a713828a73f68de2ae6a3112cbb5980d991ba06f\nF ext/wasm/SQLTester/touint8array.c 2d5ece04ec1393a6a60c4bf96385bda5e1a10ad49f3038b96460fc5e5aa7e536\nF ext/wasm/api/EXPORTED_FUNCTIONS.sqlite3-core 2bcbbfe3b95c043ed6037e2708a2ee078d212dd1612c364f93588d8dc97300fe\nF ext/wasm/api/EXPORTED_FUNCTIONS.sqlite3-extras fe40d6d758646e38f8b15f709044951e10884214f5453d35502100179c388c13\nF ext/wasm/api/EXPORTED_FUNCTIONS.sqlite3-see fb29e62082a658f0d81102488414d422c393c4b20cc2f685b216bc566237957b\nF ext/wasm/api/EXPORTED_RUNTIME_METHODS.sqlite3-api 1ec3c73e7d66e95529c3c64ac3de2470b0e9e7fbf7a5b41261c367cf4f1b7287\nF ext/wasm/api/README.md 34fe11466f9c1d81b10a0469e1114e5f1c5a6365c73d80a1a6ca639a1a358b73\nF ext/wasm/api/extern-post-js.c-pp.js c4154a7f90c2d7e51fd6738273908152036c3457fdc0b6523f1be3ef51105aac\nF ext/wasm/api/extern-pre-js.js cc61c09c7a24a07dbecb4c352453c3985170cec12b4e7e7e7a4d11d43c5c8f41\nF ext/wasm/api/post-js-footer.js cd0a8ec768501d9bd45d325ab0442037fb0e33d1f3b4f08902f15c34720ee4a1\nF ext/wasm/api/post-js-header.js 04dc12c3edd666b64a1b4ef3b6690c88dcc653f26451fd4734472d8e29c1c122\nF ext/wasm/api/pre-js.c-pp.js a614a2c82b12c4d96d8e3ba77330329efc53c4d56a8a7e60ade900f341866cfb\nF ext/wasm/api/sqlite3-api-cleanup.js d235ad237df6954145404305040991c72ef8b1881715d2a650dda7b3c2576d0e\nF ext/wasm/api/sqlite3-api-glue.c-pp.js fb6dbfe692cc23000a65a4cd95a1a47ed5eb592dc9d8b55363b3c2952a787244\nF ext/wasm/api/sqlite3-api-oo1.c-pp.js f3a8e2004c6625d17946c11f2fb32008be78bc5207bf746fc77d59848813225f\nF ext/wasm/api/sqlite3-api-prologue.js 6f1257e04885632ed9f44d43aba200b86e0bc16709ffdba29abbbeb1bc8e8b76\nF ext/wasm/api/sqlite3-api-worker1.c-pp.js 5cc22a3c0d52828cb32aad8691488719f47d27567e63e8bc8b832d74371c352d\nF ext/wasm/api/sqlite3-license-version-header.js 0c807a421f0187e778dc1078f10d2994b915123c1223fe752b60afdcd1263f89\nF ext/wasm/api/sqlite3-opfs-async-proxy.js 3774befd97cd1a5e2895c8225a894aad946848c6d9b4028acc988b5d123475af\nF ext/wasm/api/sqlite3-vfs-helper.c-pp.js 3f828cc66758acb40e9c5b4dcfd87fd478a14c8fb7f0630264e6c7fa0e57515d\nF ext/wasm/api/sqlite3-vfs-opfs-sahpool.c-pp.js bb5e96cd0fd6e1e54538256433f1c60a4e3095063c4d1a79a8a022fc59be9571\nF ext/wasm/api/sqlite3-vfs-opfs.c-pp.js 9b86ca2d8276cf919fbc9ba2a10e9786033b64f92c2db844d951804dee6c4b4e\nF ext/wasm/api/sqlite3-vtab-helper.c-pp.js e809739d71e8b35dfe1b55d24d91f02d04239e6aef7ca1ea92a15a29e704f616\nF ext/wasm/api/sqlite3-wasm.c 83f5e9f998e9fa4261eb84e9f092210e3ffe03895119f5ded0429eb34ab9d2be\nF ext/wasm/api/sqlite3-worker1-promiser.c-pp.js 46f303ba8ddd1b2f0a391798837beddfa72e8c897038c8047eda49ce7d5ed46b\nF ext/wasm/api/sqlite3-worker1.c-pp.js 5e8706c2c4af2a57fbcdc02f4e7ef79869971bc21bb8ede777687786ce1c92d5\nF ext/wasm/batch-runner-sahpool.html e9a38fdeb36a13eac7b50241dfe7ae066fe3f51f5c0b0151e7baee5fce0d07a7\nF ext/wasm/batch-runner-sahpool.js 54a3ac228e6c4703fe72fb65c897e19156263a51fe9b7e21d2834a45e876aabd\nF ext/wasm/batch-runner.html 4deeed44fe41496dc6898d9fb17938ea3291f40f4bfb977e29d0cef96fbbe4c8\nF ext/wasm/batch-runner.js 05ec254f5dbfe605146d9640b3db17d6ef8c3fbef6aa8396051ca72bb5884e3f\nF ext/wasm/c-pp.c 6d131069644964223305582a80973477fa8b06b57306781690d7874ebd3a4f84\nF ext/wasm/common/SqliteTestUtil.js 7adaeffef757d8708418dc9190f72df22367b531831775804b31598b44f6aa51\nF ext/wasm/common/emscripten.css 11bd104b6c0d597c67d40cc8ecc0a60dae2b965151e3b6a37fa5708bac3acd15\nF ext/wasm/common/testing.css e97549bab24126c24e0daabfe2de9bb478fb0a69fdb2ddd0a73a992c091aad6f\nF ext/wasm/common/whwasmutil.js d76c69617e95d85ffc9996f7d9d7481df6976dcbd860ecd82bd8c075e3a101ae\nF ext/wasm/demo-123-worker.html a0b58d9caef098a626a1a1db567076fca4245e8d60ba94557ede8684350a81ed\nF ext/wasm/demo-123.html 8c70a412ce386bd3796534257935eb1e3ea5c581e5d5aea0490b8232e570a508\nF ext/wasm/demo-123.js c7b3cca50c55841c381a9ca4f9396e5bbdc6114273d0b10a43e378e32e7be5bf\nF ext/wasm/demo-jsstorage.html 409c4be4af5f207fb2877160724b91b33ea36a3cd8c204e8da1acb828ffe588e\nF ext/wasm/demo-jsstorage.js 44e3ae7ec2483b6c511384c3c290beb6f305c721186bcf5398ca4e00004a06b8\nF ext/wasm/demo-worker1-promiser.c-pp.html 635cf90685805e21772a5f7a35d1ace80f98a9ef7c42ff04d7a125ddca7e5db8\nF ext/wasm/demo-worker1-promiser.c-pp.js fcc628cb42fcfaf07d250477801de1e6deb1e319d003976612a0db8d76b9fccc\nF ext/wasm/demo-worker1.html 2c178c1890a2beb5a5fecb1453e796d067a4b8d3d2a04d65ca2eb1ab2c68ef5d\nF ext/wasm/demo-worker1.js 836bece8615b17b1b572584f7b15912236a5947fe8c68b98d2737d7e287447ef\nF ext/wasm/dist.make 653e212c1e84aa3be168d62a10616ccea45ee9585b0192745d2706707a5248ce\nF ext/wasm/example_extra_init.c 2347cd69d19d839ef4e5e77b7855103a7fe3ef2af86f2e8c95839afd8b05862f\nF ext/wasm/fiddle.make d4969f0322a582c57a22ce3541f10a5b09a609d14eab32891f613f43b3c14d8b\nF ext/wasm/fiddle/fiddle-worker.js 850e66fce39b89d59e161d1abac43a181a4caa89ddeea162765d660277cd84ce\nF ext/wasm/fiddle/fiddle.js b444a5646a9aac9f3fc06c53d78af5e1912eb235d69a8e6010723e4eb0e9d4a1\nF ext/wasm/fiddle/index.html c79b1741cbeba78f88af0a84cf5ec7de87a909a6a8d10a369b1f4824c66c2088\nF ext/wasm/index-dist.html 564b5ec5669676482c5a25dea9e721d8eafed426ecb155f93d29aeff8507511f\nF ext/wasm/index.html e4bbffdb3d40eff12b3f9c7abedef91787e2935620b7f8d40f2c774b80ad8fa9\nF ext/wasm/jaccwabyt/jaccwabyt.js 1264710db3cfbcb6887d95665b7aeba60c1126eaef789ca4cf1a4a17d5bc7f54\nF ext/wasm/jaccwabyt/jaccwabyt.md 59a20df389abcc3606eb4eaea7fb7ba14504beb3e345dbea9b99a0618ba3bec8\nF ext/wasm/mkwasmbuilds.c e3580b26bc393e4e4beb25f6349b999878782f3319b740469f64c2e772632e03\nF ext/wasm/module-symbols.html dc476b403369b26a1a23773e13b80f41b9a49f0825e81435fe3600a7cfbbe337\nF ext/wasm/scratchpad-wasmfs.html a3d7388f3c4b263676b58b526846e9d02dfcb4014ff29d3a5040935286af5b96\nF ext/wasm/scratchpad-wasmfs.mjs 66034b9256b218de59248aad796760a1584c1dd842231505895eff00dbd57c63\nF ext/wasm/speedtest1-wasmfs.html 0e9d335a9b5b5fafe6e1bc8dc0f0ca7e22e6eb916682a2d7c36218bb7d67379d\nF ext/wasm/speedtest1-wasmfs.mjs c77c7231338ed5c0e1ce16aa29106df8e5b5cf11a48319c49433490a8d3ded30\nF ext/wasm/speedtest1-worker.html 864b65ed78ce24847a348c180e7f267621a02ca027068a1863ec1c90187c1852\nF ext/wasm/speedtest1-worker.js 95e549e13a4d35863a9a7fc66122b5f546c0130d3be7b06dfcc556eb66d24bde\nF ext/wasm/speedtest1.html ff048b4a623aa192e83e143e48f1ce2a899846dd42c023fdedc8772b6e3f07da\nF ext/wasm/split-speedtest1-script.sh a3e271938d4d14ee49105eb05567c6a69ba4c1f1293583ad5af0cd3a3779e205 x\nF ext/wasm/sql/000-mandelbrot.sql 775337a4b80938ac8146aedf88808282f04d02d983d82675bd63d9c2d97a15f0\nF ext/wasm/sql/001-sudoku.sql 35b7cb7239ba5d5f193bc05ec379bcf66891bce6f2a5b3879f2f78d0917299b5\nF ext/wasm/test-opfs-vfs.html 1f2d672f3f3fce810dfd48a8d56914aba22e45c6834e262555e685bce3da8c3f\nF ext/wasm/test-opfs-vfs.js 1618670e466f424aa289859fe0ec8ded223e42e9e69b5c851f809baaaca1a00c\nF ext/wasm/tester1-worker.html ebc4b820a128963afce328ecf63ab200bd923309eb939f4110510ab449e9814c\nF ext/wasm/tester1.c-pp.html 1c1bc78b858af2019e663b1a31e76657b73dc24bede28ca92fbe917c3a972af2\nF ext/wasm/tester1.c-pp.js 228101c290003423f0bfb66a6ebbfc6904fa7b1b69466e700c135f74ee83d62a\nF ext/wasm/tests/opfs/concurrency/index.html 657578a6e9ce1e9b8be951549ed93a6a471f4520a99e5b545928668f4285fb5e\nF ext/wasm/tests/opfs/concurrency/test.js d08889a5bb6e61937d0b8cbb78c9efbefbf65ad09f510589c779b7cc6a803a88\nF ext/wasm/tests/opfs/concurrency/worker.js 0a8c1a3e6ebb38aabbee24f122693f1fb29d599948915c76906681bb7da1d3d2\nF ext/wasm/wasmfs.make bc8bb227f35d5bd3863a7bd2233437c37472a0d81585979f058f9b9b503bef35\nF magic.txt 5ade0bc977aa135e79e3faaea894d5671b26107cc91e70783aa7dc83f22f3ba0\nF main.mk 0b62344246f8a3e920edb8a52b0c3296dde829d7eb450f67b89c63d79536de85\nF mptest/config01.test 3c6adcbc50b991866855f1977ff172eb6d901271\nF mptest/config02.test 4415dfe36c48785f751e16e32c20b077c28ae504\nF mptest/crash01.test 61e61469e257df0850df4293d7d4d6c2af301421\nF mptest/crash02.subtest f4ef05adcd15d60e5d2bd654204f2c008b519df8\nF mptest/mptest.c aa41ace6dbc5050d76b02548d3521e6bbccae4f0\nF mptest/multiwrite01.test dab5c5f8f9534971efce679152c5146da265222d\nF sqlite.pc.in 42b7bf0d02e08b9e77734a47798d1a55a9e0716b\nF sqlite3.1 acdff36db796e2d00225b911d3047d580cd136547298435426ce9d40347973cc\nF sqlite3.pc.in 0977c03a4da7c4204bd60e784a0efb8d51a190448aba78a4e973fe7192bdaf03\nF src/alter.c aa93e37e4a36a0525bbb2a2aeda20d2018f0aa995542c7dc658e031375e3f532\nF src/analyze.c 9a8b67239d899ac12289db5db3f5bfe7f7a0ad1277f80f87ead1d048085876eb\nF src/attach.c f35bb8cc1fcdde8f6815a7ef09ae413bcac71821d530796800ba24b3c7da1e80\nF src/auth.c 54ab9c6c5803b47c0d45b76ce27eff22a03b4b1f767c5945a3a4eb13aa4c78dc\nF src/backup.c 5c97e8023aab1ce14a42387eb3ae00ba5a0644569e3476f38661fa6f824c3523\nF src/bitvec.c 9eac5f42c11914d5ef00a75605bb205e934f435c579687f985f1f8b0995c8645\nF src/btmutex.c 79a43670447eacc651519a429f6ece9fd638563cf95b469d6891185ddae2b522\nF src/btree.c 63ca6b647342e8cef643863cd0962a542f133e1069460725ba4461dcda92b03c\nF src/btree.h 18e5e7b2124c23426a283523e5f31a4bff029131b795bb82391f9d2f3136fc50\nF src/btreeInt.h 98aadb6dcb77b012cab2574d6a728fad56b337fc946839b9898c4b4c969e30b6\nF src/build.c c6b09342d870a509529244ed8e19b4175a261f2e3163c199241d69e1d8a57607\nF src/callback.c db3a45e376deff6a16c0058163fe0ae2b73a2945f3f408ca32cf74960b28d490\nF src/complete.c a3634ab1e687055cd002e11b8f43eb75c17da23e\nF src/ctime.c d35723024b963edce9c0fad5b3303e8bb9266083784844baed10a6dedfe26f3b\nF src/date.c 89ce1ff20512a7fa5070ba6e7dd5c171148ca7d580955795bf97c79c2456144a\nF src/dbpage.c e90410e5d4c0217dfddc4184a81e38ec4903c25d4ec0f201060a0e54e7c2099f\nF src/dbstat.c 73362c0df0f40ad5523a6f5501224959d0976757b511299bf892313e79d14f5c\nF src/delete.c 03a77ba20e54f0f42ebd8eddf15411ed6bdb06a2c472ac4b6b336521bf7cea42\nF src/expr.c 30a407765d4e4b592f9f958085fb4e8336e54fa46a70ade7f5a67111bc191563\nF src/fault.c 460f3e55994363812d9d60844b2a6de88826e007\nF src/fkey.c 928ed2517e8732113d2b9821aa37af639688d752f4ea9ac6e0e393d713eeb76f\nF src/func.c 89b733a5f513c4bc06b7271384363d5693d62782de8295bc87b97d79862c9714\nF src/global.c a19e4b1ca1335f560e9560e590fc13081e21f670643367f99cb9e8f9dc7d615b\nF src/hash.c 9ee4269fb1d6632a6fecfb9479c93a1f29271bddbbaf215dd60420bcb80c7220\nF src/hash.h 3340ab6e1d13e725571d7cee6d3e3135f0779a7d8e76a9ce0a85971fa3953c51\nF src/hwtime.h f9c2dfb84dce7acf95ce6d289e46f5f9d3d1afd328e53da8f8e9008e3b3caae6\nF src/in-operator.md 10cd8f4bcd225a32518407c2fb2484089112fd71\nF src/insert.c f8d1a0f8ee258411009c6b7f2d93170e351bd19f5ad89d57e1180644297cbe70\nF src/json.c 68a98c020c22127f2d65f08855f7fc7460ff352a6ce0b543d8931dde83319c22\nF src/legacy.c d7874bc885906868cd51e6c2156698f2754f02d9eee1bae2d687323c3ca8e5aa\nF src/loadext.c 7432c944ff197046d67a1207790a1b13eec4548c85a9457eb0896bb3641dfb36\nF src/main.c a19dc8b47760ed95f3fbb255cfa8d3f7146b33c263eb4af05ab05e0115d161b9\nF src/malloc.c 410e570b30c26cc36e3372577df50f7a96ee3eed5b2b161c6b6b48773c650c5e\nF src/mem0.c 6a55ebe57c46ca1a7d98da93aaa07f99f1059645\nF src/mem1.c 3bb59158c38e05f6270e761a9f435bf19827a264c13d1631c58b84bdc96d73b2\nF src/mem2.c c8bfc9446fd0798bddd495eb5d9dbafa7d4b7287d8c22d50a83ac9daa26d8a75\nF src/mem3.c 30301196cace2a085cbedee1326a49f4b26deff0af68774ca82c1f7c06fda4f6\nF src/mem5.c b7da5c10a726aacacc9ad7cdcb0667deec643e117591cc69cf9b4b9e7f3e96ff\nF src/memdb.c 16679def118b5fd75292a253166d3feba3ec9c6189205bf209643ecdb2174ecc\nF src/memjournal.c c283c6c95d940eb9dc70f1863eef3ee40382dbd35e5a1108026e7817c206e8a0\nF src/msvc.h 80b35f95d93bf996ccb3e498535255f2ef1118c78764719a7cd15ab4106ccac9\nF src/mutex.c 06bcd9c3dbf2d9b21fcd182606c00fafb9bfe0287983c8e17acd13d2c81a2fa9\nF src/mutex.h a7b2293c48db5f27007c3bdb21d438873637d12658f5a0bf8ad025bb96803c4a\nF src/mutex_noop.c 9d4309c075ba9cc7249e19412d3d62f7f94839c4\nF src/mutex_unix.c f7ee5a2061a4c11815a2bf4fc0e2bfa6fb8d9dc89390eb613ca0cec32fc9a3d1\nF src/mutex_w32.c 28f8d480387db5b2ef5248705dd4e19db0cfc12c3ba426695a7d2c45c48e6885\nF src/notify.c 57c2d1a2805d6dee32acd5d250d928ab94e02d76369ae057dee7d445fd64e878\nF src/os.c 509452169d5ea739723e213b8e2481cf0e587f0e88579a912d200db5269f5f6d\nF src/os.h 1ff5ae51d339d0e30d8a9d814f4b8f8e448169304d83a7ed9db66a65732f3e63\nF src/os_common.h 6c0eb8dd40ef3e12fe585a13e709710267a258e2c8dd1c40b1948a1d14582e06\nF src/os_kv.c 4d39e1f1c180b11162c6dc4aa8ad34053873a639bac6baae23272fc03349986a\nF src/os_setup.h 6011ad7af5db4e05155f385eb3a9b4470688de6f65d6166b8956e58a3d872107\nF src/os_unix.c d2edbd92b07a3f778c2defa8a2e9d75acceb6267bda56948c41e8cdda65224d6\nF src/os_win.c 49c7725b500f5867e8360e75eeb30f9d70b62fa1f05c8a101da627210578df32\nF src/os_win.h 7b073010f1451abe501be30d12f6bc599824944a\nF src/pager.c 2fdd489447aa6bb0f672973bacb801ced92225ca9a1c874ed9b856d2741dc54e\nF src/pager.h 6137149346e6c8a3ddc1eeb40aee46381e9bc8b0fcc6dda8a1efde993c2275b8\nF src/parse.y dcf45a81b61223ac93e61fdfe9b22d635dd371c446e8222634d90aa37e25e5f6\nF src/pcache.c 588cc3c5ccaaadde689ed35ce5c5c891a1f7b1f4d1f56f6cf0143b74d8ee6484\nF src/pcache.h 1497ce1b823cf00094bb0cf3bac37b345937e6f910890c626b16512316d3abf5\nF src/pcache1.c 49516ad7718a3626f28f710fa7448ef1fce3c07fd169acbb4817341950264319\nF src/pragma.c ce1182217aa540e034c6da2f17515e3706bf52c837e8222361be9ccd7a9d495a\nF src/pragma.h e690a356c18e98414d2e870ea791c1be1545a714ba623719deb63f7f226d8bb7\nF src/prepare.c 1832be043fce7d489959aae6f994c452d023914714c4d5457beaed51c0f3d126\nF src/printf.c 96f7f8baeedc7639da94e4e7a4a2c200e2537c4eec9e5e1c2ffc821f40eb3105\nF src/random.c 606b00941a1d7dd09c381d3279a058d771f406c5213c9932bbd93d5587be4b9c\nF src/resolve.c c8a5372b97b2a2e972a280676f06ddb5b74e885d3b1f5ce383f839907b57ef68\nF src/rowset.c 8432130e6c344b3401a8874c3cb49fefe6873fec593294de077afea2dce5ec97\nF src/select.c 83e88fbb36f89b6703b348777491619554f0fd6f917c9fdf51e4c2e9cda6c04e\nF src/shell.c.in beb370609906092a6810fcd9ea76737be2c91694445061c2eb05c4c0a3753de4\nF src/sqlite.h.in 6afbcaae44140216704a6c82e4c4ea4118c46d5f6573d6c5fa4fc901ed9d369e\nF src/sqlite3.rc 5121c9e10c3964d5755191c80dd1180c122fc3a8\nF src/sqlite3ext.h 3f046c04ea3595d6bfda99b781926b17e672fd6d27da2ba6d8d8fc39981dcb54\nF src/sqliteInt.h 3f20dfb5ae54e787b2643edc0b5bae0cecddfb89988e28afdc3c0b05892e25cc\nF src/sqliteLimit.h 1bbdbf72bd0411d003267ffebc59a262f061df5653027a75627d03f48ca30523\nF src/status.c cb11f8589a6912af2da3bb1ec509a94dd8ef27df4d4c1a97e0bcf2309ece972b\nF src/table.c 0f141b58a16de7e2fbe81c308379e7279f4c6b50eb08efeec5892794a0ba30d1\nF src/tclsqlite.c c6b9d3a0b1100e1e028460c418c41ca180dac5958e96bef79f6799b552522a37\nF src/tclsqlite.h 65e2c761446e1c9fa0342b7d2612a703483643c8b6a316d12a65b745a4727395\nF src/test1.c 07c9b523f90b96f6e9a701476602fa1f82075da19955823316b3fe13eaaa52cc\nF src/test2.c 7ebc518e6735939d8979273a6f7b1d9b5702babf059f6ad62499f7f60a9eb9a3\nF src/test3.c e7573aa0f78ee4e070a4bc8c3493941c1aa64d5c66d4825c74c0f055451f432b\nF src/test4.c 13e57ae7ec7a959ee180970aef09deed141252fe9bb07c61054f0dfa4f1dfd5d\nF src/test5.c bb87279ed12e199486894e6c83e58dc8cd1de9524ace171d59219d3ab696a0c1\nF src/test6.c 763b92489f11f4a77b773f0d3b8369ab0edd5292ac794043062c337019f12d8a\nF src/test8.c 206d8f3cc73950d252906656e2646b5de0d580b07187b635fcb3edd8c2c5fbc0\nF src/test9.c 7a708ad27f8fda79113e5e15de66632710958c401e64c2f22bc04e2f5a7a1b62\nF src/test_autoext.c 14d4bbd3d0bd1eec0f6d16b29e28cf1e2d0b020d454835f0721a5f68121ac10f\nF src/test_backup.c bd901e3c116c7f3b3bbbd4aae4ce87d99b400c9cbb0a9e7b4610af451d9719a7\nF src/test_bestindex.c 3401bee51665cbf7f9ed2552b5795452a8b86365e4c9ece745b54155a55670c6\nF src/test_blob.c bcdf6a6c22d0bcc13c41479d63692ef413add2a4d30e1e26b9f74ab85b9fb4d5\nF src/test_btree.c 28283787d32b8fa953eb77412ad0de2c9895260e4e5bd5a94b3c7411664f90d5\nF src/test_config.c bff5e1625c007f14a9ea4d346b6a741149b5e1f885c1c7ae69bb28a8ddade151\nF src/test_delete.c e2fe07646dff6300b48d49b2fee2fe192ed389e834dd635e3b3bac0ce0bf9f8f\nF src/test_demovfs.c 3efa2adf4f21e10d95521721687d5ca047aea91fa62dd8cc22ac9e5a9c942383\nF src/test_devsym.c 649434ed34d0b03fbd5a6b42df80f0f9a7e53f94dd1710aad5dd8831e91c4e86\nF src/test_fs.c c411c40baba679536fc34e2679349f59d8225570aed3488b5b3ef1908525a3d5\nF src/test_func.c 858d4dddb7acf88222ebcba7cffb585f6dde83e4a15b838c0d05ccdf8d5219b9\nF src/test_hexio.c 7449504e4bde876ba91b202617a9228c7c8c2e7bd8b957302f3803ac0e9e353c\nF src/test_init.c 17313332d58e90defc527129d5eda4a08bd6b6e8de7207a231523c8d98fb445e\nF src/test_intarray.c e4216aadee9df2de7d1aee7e70f6b22c80ee79ece72a63d57105db74217639e5\nF src/test_intarray.h 6c3534641108cd1bea517a8e117dcba237081310a29a4c35bd2190caa8972293\nF src/test_journal.c a0b9709b2f12b1ec819eea8a1176f283bca6d688a6d4a502bd6fd79786f4e287\nF src/test_loadext.c 337056bae59f80b9eb00ba82088b39d0f4fe6dfd\nF src/test_malloc.c a0295e022103b14a1bc5e0660cc2af7fbec05e0d029098782e326e50612e69d9\nF src/test_md5.c 811a45330c9391933360f998156a8907ee29909c828ab83ac05d329942cbea8f\nF src/test_multiplex.c b99d7f43ec859e6b93a40aaa5455420b3ad133053cce3db739498d29ea30735f\nF src/test_multiplex.h f0ff5b6f4462bfd46dac165d6375b9530d08089b7bcbe75e88e0926110db5363\nF src/test_mutex.c f10fcbc2086b19c7b0ddf2752caf2095e42be74d8d7f6093619445b43b1f777b\nF src/test_onefile.c f31e52e891c5fef6709b9fcef54ce660648a34172423a9cbdf4cbce3ba0049f4\nF src/test_osinst.c 7aa3feaa3a1da1b5f75bde2ce958dbfe14ec484f065bb2b5b9727d8851fa089b\nF src/test_pcache.c 496da3f7e2ca66aefbc36bbf22138b1eff43ba0dff175c228b760fa020a37bd0\nF src/test_quota.c 07369655d24c3f3fbdbd8fd8f42e856a054a7497846ca1c83ed4be68152a251f\nF src/test_quota.h 2a8ad1952d1d2ca9af0ce0465e56e6c023b5e15d\nF src/test_rtree.c d844d746a3cc027247318b970025a927f14772339c991f40e7911583ea5ed0d9\nF src/test_schema.c b06d3ddc3edc173c143878f3edb869dd200d57d918ae2f38820534f9a5e3d7d9\nF src/test_sqllog.c 540feaea7280cd5f926168aee9deb1065ae136d0bbbe7361e2ef3541783e187a\nF src/test_superlock.c 18355ca274746aa6909e3744163e5deb1196a85d5bc64b9cd377273cef626da7\nF src/test_syscall.c 9ad7ab39910c16d29411678d91b0d27a7a996a718df5ee93dcd635e846d0275c\nF src/test_tclsh.c c01706ac60bd3176754d3ccd37da74c6ad97c2e14489f8ed71b497c1c0ac0dd4\nF src/test_tclvar.c ae873248a0188459b1c16ca7cc431265dacce524399e8b46725c2b3b7e048424\nF src/test_thread.c d7a8bcea7445f37cc2a1f7f81dd6059634f45e0c61bfe80182b02872fb0328bb\nF src/test_vdbecov.c 5c426d9cd2b351f5f9ceb30cabf8c64a63bfcad644c507e0bd9ce2f6ae1a3bf3\nF src/test_vfs.c f298475e468c7e14945b20af885917181090c265aa3c4ade897849c9fbd396f2\nF src/test_windirent.c a895e2c068a06644eef91a7f0a32182445a893b9a0f33d0cdb4283dca2486ac1\nF src/test_windirent.h da2e5b73c32d09905fbdd00f27cd802212a32a58ead882736fe4f5eb775ebc50\nF src/test_window.c 6d80e11fba89a1796525e6f0048ff0c7789aa2c6b0b11c80827dc1437bd8ea72\nF src/test_wsd.c 41cadfd9d97fe8e3e4e44f61a4a8ccd6f7ca8fe9\nF src/threads.c 4ae07fa022a3dc7c5beb373cf744a85d3c5c6c3c\nF src/tokenize.c fe17e03175cae35b6694d0f879e7bc3d1ddea2fd4ab148cba9bbd025b7a7bb12\nF src/treeview.c d1f3003cb21846828f314a304cf9117f5e80ce0be259315a681d25147004d26d\nF src/trigger.c 247e2d712d5edc6021d52a169f6ac9a9c10d7144bc4ac7ea06c1ed2aa414659f\nF src/update.c 0e01aa6a3edf9ec112b33eb714b9016a81241497b1fb7c3e74332f4f71756508\nF src/upsert.c 215328c3f91623c520ec8672c44323553f12caeb4f01b1090ebdca99fdf7b4f1\nF src/utf.c 8b29d9a5956569ea2700f869669b8ef67a9662ee5e724ff77ab3c387e27094ba\nF src/util.c e5f6a5eeaa26b69054a43bbd0048cfe3d2851f6961052b35aed8f695df922850\nF src/vacuum.c b763b6457bd058d2072ef9364832351fd8d11e8abf70cbb349657360f7d55c40\nF src/vdbe.c 8a6eb02823b424b273614bae41579392a5c495424592b60423dd2c443a583df0\nF src/vdbe.h 9676348d342bd04e21e384c63b57224171ce84fac77853357334ef94c4d33cf4\nF src/vdbeInt.h bf294a0c8fc4cc80779e74b04b8bd82c6e1197b3137cefe0b16cdf002fc7dfd6\nF src/vdbeapi.c 38c252a202d70b56cfb734460bc888ddbd581afec1a10cd4d6c894c9e0b5baea\nF src/vdbeaux.c 5fcbc642a3d3d88c5ea15cadf2c8b8e4e067cb9ff374beb1875c9d209001299e\nF src/vdbeblob.c 255be187436da38b01f276c02e6a08103489bbe2a7c6c21537b7aecbe0e1f797\nF src/vdbemem.c df568ef0187e4be2788c35174f6d9b8566ab9475f9aff2d73907ed05aa5684b2\nF src/vdbesort.c d0a3c7056c081703c8b6d91ad60f17da5e062a5c64bf568ed0fa1b5f4cae311f\nF src/vdbetrace.c fe0bc29ebd4e02c8bc5c1945f1d2e6be5927ec12c06d89b03ef2a4def34bf823\nF src/vdbevtab.c fc46b9cbd759dc013f0b3724549cc0d71379183c667df3a5988f7e2f1bd485f3\nF src/vtab.c 316cd48e9320660db3047cd306cd056e4361180cebb4d0f10a39244e10c11422\nF src/vxworks.h d2988f4e5a61a4dfe82c6524dd3d6e4f2ce3cdb9\nF src/wal.c 4e6181d8780ab0af2e1388d0754cbe6f2f04593d2b1ab6c41699a89942fd8997\nF src/wal.h ba252daaa94f889f4b2c17c027e823d9be47ce39da1d3799886bbd51f0490452\nF src/walker.c d5006d6b005e4ea7302ad390957a8d41ed83faa177e412f89bc5600a7462a014\nF src/where.c d519bc93b4a05928f10ba4925b1afc77cbd71c1b1b5148583ab4868925c639fb\nF src/whereInt.h 1e36ec50392f7cc3d93d1152d4338064cd522b87156a0739388b7e273735f0ca\nF src/wherecode.c 0c3d3199a2b769a5e2bb70feb5003dc85b3d86842ecaf903a47f2b4205ca5dab\nF src/whereexpr.c 0f93a29cabd3a338d09a1f5c6770620a1ac51ec1157f3229502a7e7767c60b6f\nF src/window.c 2bf01f9941a64fbcead61a0e3cb5db3fca5094b30d2ff0d23274c2a81d2e2385\nF test/8_3_names.test ebbb5cd36741350040fd28b432ceadf495be25b2\nF test/affinity2.test ce1aafc86e110685b324e9a763eab4f2a73f737842ec3b687bd965867de90627\nF test/affinity3.test f094773025eddf31135c7ad4cde722b7696f8eb07b97511f98585addf2a510a9\nF test/aggerror.test a867e273ef9e3d7919f03ef4f0e8c0d2767944f2\nF test/aggfault.test 777f269d0da5b0c2524c7ff6d99ae9a93db4f1b1839a914dd2a12e3035c29829\nF test/aggnested.test 610b0ce2c3e8f3daee25f9752800ee8d785db10da4aa1fbeea0ea1aabaf1d704\nF test/aggorderby.test cc3abf5de64d46ff66395ca8c2346b66c2576d5aedb7bffc5b0742508856e3bf\nF test/alias.test 4529fbc152f190268a15f9384a5651bbbabc9d87\nF test/all.test 2ecb8bbd52416642e41c9081182a8df05d42c75637afd4488aace78cc4b69e13\nF test/alter.test 3c00eff1e2036b9f93e9cd0f3d3e63750ac87ecb5bc71b9d7bd07cbf2ac4c494\nF test/alter2.test 7e3d26ab409df52df887b366a63902c3429b935c41cb962fd58ffc25784f2f19\nF test/alter3.test ffc4ab29ce78a3517a66afd69b2730667e3471622509c283b2bd4c46f680fba3\nF test/alter4.test 716caa071dd8a3c6d57225778d15d3c3cbf5e34b2e84ae44199aeb2bbf50a707\nF test/alterauth.test 63442ba61ceb0c1eeb63aac1f4f5cebfa509d352276059d27106ae256bafc959\nF test/alterauth2.test 48967abae0494d9a300d1c92473d99fcb66edfcc23579c89322f033f49410adc\nF test/altercol.test 29fed774747777fbbaacdd865b4413ed2d0844a4c824f8af531b5c7d4a832087\nF test/altercorrupt.test 2e1d705342cf9d7de884518ddbb053fd52d7e60d2b8869b7b63b2fda68435c12\nF test/alterdropcol.test a653a3945f964d26845ec0cd0a8e74189f46de3119a984c5bc45457da392612e\nF test/alterdropcol2.test 527fce683b200d620f560f666c44ae33e22728e990a10a48a543280dfd4b4d41\nF test/alterfault.test 289067108947bedca27534edd4ff251bcd298cf84402d7b24eaa3749305418c6\nF test/alterlegacy.test f38c6d06cda39e1f7b955bbce57f2e3ef5b7cb566d3d1234502093e228c15811\nF test/altermalloc.test 167a47de41b5c638f5f5c6efb59784002b196fff70f98d9b4ed3cd74a3fb80c9\nF test/altermalloc2.test 17fb3724c4b004c469c27dc4ef181608aa644555fbd3f3236767584f73747c81\nF test/altermalloc3.test 8040e486368403f2fdd6fc3998258b499bd4cc2f3ddbb5f8f874cd436f076e81\nF test/alterqf.test 8ec03d776de9c391daa0078ea8f838903bdcfb11dfae4ba3576b48436834ccba\nF test/altertab.test 8a2712f9076da5012a002d0b5cc0a421398a5bf61c25bab41b77c427586a7a27\nF test/altertab2.test fff90e3f01e8eb0e09282f538b8ec7cfeb035dbedbe570fe1983440f4613ad0e\nF test/altertab3.test b331ae34e69594e19605e3297805202d6156fcc8f75379dfd972a2e51cae8721\nF test/altertrig.test aacc980b657354fe2d3d4d3a004f07d04ccc1a93e5ef82d68a79088c274ddc6b\nF test/amatch1.test b5ae7065f042b7f4c1c922933f4700add50cdb9f\nF test/analyze.test 2fb21d7d64748636384e6cb8998dbf83968caf644c07fcb4f76c18f2e7ede94b\nF test/analyze3.test 03f4b3d794760cf15da2d85a52df9bae300e51c8fefe9c36cfae1f86dc10d23f\nF test/analyze4.test 68bd069f3ac7ac1e652ddd9f04f57d5606ddb4208450f5297005db7aa0dd707d\nF test/analyze5.test fa5131952303ac4146aba101b116b9c8cb89e2637531c334a6df7f7d19dddc0d\nF test/analyze6.test 028f5bdfc9e5b5294768fa9a7185b8cd1d019aa7aab5b2f8ee42d7271d9a3b28\nF test/analyze7.test 079d17c495e396bdbd6cc6a083112788a6fbfb3b95c42e760e4270a53c9ead8f\nF test/analyze8.test 29ef237d8a59b39cc31c3310134fefe96a690b195e3deed5ecb652839089f15c\nF test/analyze9.test 30e1cb99336045a384a11d97900720184333c88174b3b89bc07444ea39e7df19\nF test/analyzeC.test 1111830ad355d29a294a5dda654dd5f6a8622c6a223a4f7b7b3d091df7a7a42b\nF test/analyzeD.test 485f621cfd2ef0a8f8ac79672586651bfa495bd899db50461bb4b558400ab3c1\nF test/analyzeE.test d2ec7921c162cdc33ac8e7eb01f9ebf78100610af7c94c8552bbf551de1fb397\nF test/analyzeF.test 40b5cc3ad7b10e81020d7ca86f1417647ecfae7477cfd88acc5aa7ae1068f949\nF test/analyzeG.test 623be33038c49648872746c8dd8b23b5792c08fef173c55e82f1b12fca259852\nF test/analyzer1.test 459fa02c445ddbf0101a3bad47b34290a35f2e49\nF test/atof1.test bd21c4a0e718ab1470de07a2a79f2544d7903be34feebcc80de04beee4807b00\nF test/atomic.test 065a453dde33c77ff586d91ccaa6ed419829d492dbb1a5694b8a09f3f9d7d061\nF test/atomic2.test b6863b4aa552543874f80b42fb3063f1c8c2e3d8e56b6562f00a3cc347b5c1da\nF test/atrc.c c388fac43dbba05c804432a7135ae688b32e8f25818e9994ffba4b64cf60c27c\nF test/attach.test 54f8e49e88d0de48f6428267a678465863d2b8f72320612f35bd5c02e240bc2f\nF test/attach2.test 6d1e3a457ce260d6fc8e5945c07fba6c76dc2aa90e1c701f067b50ee88f7315a\nF test/attach3.test c59d92791070c59272e00183b7353eeb94915976\nF test/attach4.test 00e754484859998d124d144de6d114d920f2ed6ca2f961e6a7f4183c714f885e\nF test/attachmalloc.test 67309af95c6b765c13e7d2279d7fccbef78e6eb0565d75d51cefd5dc88784549\nF test/auth.test 5b8558a40571ebc55c1581cb7cec3b2348a699542a0a51b83ef21c6a953d95e3\nF test/auth2.test 9eb7fce9f34bf1f50d3f366fb3e606be5a2000a1\nF test/auth3.test 76d20a7fa136d63bcfcf8bcb65c0b1455ed71078d81f22bcd0550d3eb18594ab\nF test/autoanalyze1.test b9cc3f32a990fa56669b668d237c6d53e983554ae80c0604992e18869a0b2dec\nF test/autoinc.test 997d6f185f138229dc4251583a1d04816423dddc2fc034871a01aeb1d728cb39\nF test/autoindex1.test 714cac6e60beeb5a26ed346dd46505ba60b5a5597e9122c9ed3a55f89a922aa4\nF test/autoindex2.test 12ef578928102baaa0dc23ad397601a2f4ecb0df\nF test/autoindex3.test ca502c8050166ac6107a7b4fe4e951f4d3270a23a958af02b14f1b962b83c4b6\nF test/autoindex4.test 3c2105e9172920e26f950ba3c5823e4972190e022c1e6f260ba476b0af24c593\nF test/autoindex5.test 2ee94f033b87ca0160e08d81034c507aff8e230df2627f0304fa309b2fee19a3\nF test/autovacuum.test 00671369bbf96c6a49989a9425f5b78b94075d6a4b031e5e00000c2c32f365df\nF test/autovacuum2.test 76f7eb4fe6a6bf6d33a196a7141dba98886d2fb53a268d7feca285d5da4759d7\nF test/autovacuum_ioerr2.test 8a367b224183ad801e0e24dcb7d1501f45f244b4\nF test/avfs.test 76f59743dc1f5fa533840d1818b420fe1ee45e21c0fd6bbac7942ba677903128\nF test/avtrans.test b7dc25459ecbd86c6fa9c606ee3068f59d81e225118617dcf2bbb6ded2ade89e\nF test/backcompat.test f2431465ed668f09fc3f6998e56e893a1506ccea6e8b6f409f085f759f431b48\nF test/backup.test 3b08fd4af69f0fa786931103a31f4542b184aba16e239e5f22b18c3c2476697f\nF test/backup2.test 8facb54df1388419d34b362ab1f7e233310ff3a3af64e8ad5ec47ba3c2bbe5cf\nF test/backup4.test 8f6fd48e0dfde77b9a3bb26dc471ede3e101df32\nF test/backup5.test ee5da6d7fe5082f5b9b0bbfa31d016f52412a2e4\nF test/backup_ioerr.test 4c3c7147cee85b024ecf6e150e090c32fdbb5135\nF test/backup_malloc.test 0c9abdf74c51e7bedb66d504cd684f28d4bd4027\nF test/badutf.test d5360fc31f643d37a973ab0d8b4fb85799c3169f\nF test/badutf2.test f310fd3b24a491b6b77bccdf14923b85d6ebcce751068c180d93a6b8ff854399\nF test/basexx1.test d8a50f0744b93dca656625597bcd3499ff4b9a4ea2a82432b119b7d46e3e0c08\nF test/bc_common.tcl b5e42d80305be95697e6370e015af571e5333a1c\nF test/bestindex1.test 856a453dff8c68b4568601eed5a8b5e20b4763af9229f3947c215729ed878db0\nF test/bestindex2.test 394ff8fbf34703391247116d6a44e1c50ee7282236ee77909044573cefc37bc0\nF test/bestindex3.test 34bea272b0e0f835651b16a3931dbe7ac927039be6b2e1cb617bbe1d584b492b\nF test/bestindex4.test 3039894f2dad50f3a68443dffad1b44c9b067ac03870102df1ce3d9a46ea602e\nF test/bestindex5.test a0c90b2dad7836e80a01379e200e5f8ec9476d49b349af02c0dbff2fb75dc98d\nF test/bestindex6.test 16942535b551273f3ad9df8d7cc4b7f22b1fcd8882714358859eb049a6f99dd4\nF test/bestindex7.test f094c669a6400777f4d2ddc3ed28e39169f1adb5be3d59b55f22ccf8c414b71e\nF test/bestindex8.test b63a4f171a2c83d481bb14c431a8b72e85d27b2ffdaa0435a95d58ca941678f9\nF test/bestindex9.test 1a4b93db117fd8abe74ae9be982f86aa72f01e60cd4ac541e6ede39673a451a0\nF test/bestindexA.test e1b5def6b190797cacf008e6815ffb78fb30261999030d60a728d572eef44c7f\nF test/bestindexB.test 328b97b69cd1a20928d5997f9ecb04d2e00f1d18e19ab27f9e9adb44d7bc51ce\nF test/bestindexC.test 2df6ada16d8f00d9bb6a9664d9c323560aeed0e0ebc7a32b99d85d70037fd250\nF test/bestindexD.test 6a8f6f84990bcf17dfa59652a1f935beddb7afd96f8302830fbc86b0a13df3c3\nF test/between.test b9a65fb065391980119e8a781a7409d3fcf059d89968279c750e190a9a1d5263\nF test/bigfile.test aa74f4e5db51c8e54a1d9de9fa65d01d1eb20b59\nF test/bigfile2.test 1b489a3a39ae90c7f027b79110d6b4e1dbc71bfc\nF test/bigmmap.test 6021e205487347c6d7e5a541aa472a4b8efc4e9f4a3799a823b61a8e6616105d\nF test/bigrow.test f0aeb7573dcb8caaafea76454be3ade29b7fc747\nF test/bigsort.test 997e172009905873c06426145e4b3794c7dfe2d563724cb2fd39d45f319cf3d2\nF test/bind.test 1e136709b306f7ed3192d349c2930d89df6ab621654ad6f1a72381d3fe76f483\nF test/bind2.test 918bc35135f4141809ead7585909cde57d44db90a7a62aef540127148f91aab7\nF test/bindxfer.test efecd12c580c14df5f4ad3b3e83c667744a4f7e0\nF test/bitvec.test 75894a880520164d73b1305c1c3f96882615e142\nF test/blob.test e7ac6c7d3a985cc4678c64f325292529a69ae252\nF test/bloom1.test cf613a27054bbaf61c5bfc440a5cfd3ff76798d0695f3fc5e5d1bbc819b8dab1\nF test/boundary1.tcl 6421b2d920d8b09539503a8673339d32f7609eb1\nF test/boundary1.test 66d7f4706ccdb42d58eafdb081de07b0eb42d77b\nF test/boundary2.tcl e34ef4e930cf1083150d4d2c603e146bd3b76bcb\nF test/boundary2.test 9ae758d7dab7e882c8b6cc4a6a10278385bff8fa\nF test/boundary3.tcl 23361e108a125dca9c4080c2feb884fe54d69243\nF test/boundary3.test 56ef82096b4329aca2be74fa1e2b0f762ea0eb45\nF test/boundary4.tcl 0bb4b1a94f4fc5ae59b79b9a2b7a140c405e2983\nF test/boundary4.test 89e02fa66397b8a325d5eb102b5806f961f8ec4b\nF test/btree01.test fef17d9e999ac4f04095948e3438fbe674f4e07bb2c63bb1cad41d87baee077f\nF test/btree02.test 7555a5440453d900410160a52554fe6478af4faf53098f7235f1f443d5a1d6cc\nF test/btreefault.test a82a23b0578bc587afbf9a622c8f54a54f63762f062ba8a35613cfee38ab42f9\nF test/busy.test caff7164c16ce06a53af51f9e4c2753d4cc64250e00790a5e48b9c4f4be37597\nF test/busy2.test 20823a5d7c42fb257d9f108c66312d90b1bb4ec3d80ba6b4e371073727560f98\nF test/cache.test 13bc046b26210471ca6f2889aceb1ea52dc717de\nF test/cacheflush.test af25bb1509df04c1da10e38d8f322d66eceedf61\nF test/cachespill.test 895997f84a25b323b166aecb69baab2d6380ea98f9e0bcc688c4493c535cfab9\nF test/capi2.test 4ee545824adc3eb33bf57ef89f77440b28188ec3da72e5425ff0fcdba32e8d5a\nF test/capi3.test 4892b5e53d2a6941edc9d204a0ab174dd66e8689282d9a15e4384561c3965945\nF test/capi3b.test efb2b9cfd127efa84433cd7a2d72ce0454ae0dc4\nF test/capi3c.test 31d3a6778f2d06f2d9222bd7660c41a516d1518a059b069e96ebbeadb5a490f7\nF test/capi3d.test 8b778794af891b0dca3d900bd345fbc8ebd2aa2aae425a9dccdd10d5233dfbde\nF test/capi3e.test 3d49c01ef2a1a55f41d73cba2b23b5059ec460fe\nF test/carray01.test 23ed7074307c4a829ba5ff2970993a9d87db7c5cdbbe1a2cbef672d0df6d6e31\nF test/cast.test 6d095303492432a973e6dfc0071cb94cac2969ffbe2e6a68432be0c7b3b0a2d3\nF test/cffault.test 9d6b20606afe712374952eec4f8fd74b1a8097ef\nF test/changes.test 4377d202a487f66fc2822c1bf57c46798c8b2caf7446f4f701723b1dbb6b86f6\nF test/changes2.test 07949edcc732af28cb54276bfb7d99723bccc1e905a423648bf57ac5cb0dc792\nF test/check.test 56e4ed457e9f8683b9fc56f5b964f461f6e8a8dd5a13f3d495408215d66419ed\nF test/checkfault.test da6cb3d50247169efcb20bdf57863a3ccfa1d27d9e55cd324f0680096970f014\nF test/chunksize.test 427d87791743486cbf0c3b8c625002f3255cb3a89c6eba655a98923b1387b760\nF test/cksumvfs.test 6f05dc95847c06a3dc10eee6b5ab1351d78314a52d0db15717c9388f4cb96646\nF test/close.test eccbad8ecd611d974cbf47278c3d4e5874faf02d811338d5d348af42d56d647c\nF test/closure01.test 9905883f1b171a4638f98fc764879f154e214a306d3d8daf412a15e7f3a9b1e0\nF test/coalesce.test cee0dccb9fbd2d494b77234bccf9dc6c6786eb91\nF test/collate1.test 71a6f27fdc93a92f14d8ab80c05e1937656a5a03197e1a10157314554d630ce8\nF test/collate2.test 471c6f74573382b89b0f8b88a05256faa52f7964f9e4799e76708a3b1ece6ba4\nF test/collate3.test 89defc49983ddfbf0a0555aca8c0521a676f56a5\nF test/collate4.test c953715fb498b87163e3e73dd94356bff1f317bd\nF test/collate5.test b1dfeff239ea69ee9225832553f423d37a6184eb730cee06f6846ab4e3c6dbef\nF test/collate6.test 8be65a182abaac8011a622131486dafb8076e907\nF test/collate7.test 8ec29d98f3ee4ccebce6e16ce3863fb6b8c7b868\nF test/collate8.test cd9b3d3f999b8520ffaa7cc1647061fc5bab1334\nF test/collate9.test 3adcc799229545940df2f25308dd1ad65869145a\nF test/collateA.test b8218ab90d1fa5c59dcf156efabb1b2599c580d6\nF test/collateB.test 1e68906951b846570f29f20102ed91d29e634854ee47454d725f2151ecac0b95\nF test/colmeta.test 2c765ea61ee37bc43bbe6d6047f89004e6508eb1\nF test/colname.test 387e880eeac0889900f7b3e9703c375515f5d323f71fd4f2bb5428a4ac8e2023\nF test/columncount.test 6fe99c2f35738b0129357a1cf3fa483f76140f4cd8a89014c88c33c876d2638f\nF test/conflict.test b705cddf025a675d3c13d62fa78ab1e2696fb8e07a3d7cccce1596ff8b301492\nF test/conflict2.test 5557909ce683b1073982f5d1b61dfb1d41e369533bfdaf003180c5bc87282dd1\nF test/conflict3.test 81865d9599609aca394fb3b9cd5f561d4729ea5b176bece3644f6ecb540f88ac\nF test/contrib01.test 2a1cbc0f2f48955d7d073f725765da6fbceda6b4\nF test/corrupt.test 54509b182b1927663e0a425b681b0935a08a01b11d8153a4a9545ed36760ebe2\nF test/corrupt2.test 4ce5eadd51baa1aedb48e141dd885d155946f5c3677bb032547e350ce91b17f4\nF test/corrupt3.test 6a982535d52c8165654cbc79a043cfd0bf02495a5efbf4754295e056fc548539\nF test/corrupt4.test 5fa4559bcfd14afbb99670d463546ba75fb4975c710b7f6dfa592ae90471cce7\nF test/corrupt5.test 387be3250795e2a86e6234745558b80efb248a357d0cd8e53bce75c7463f545d\nF test/corrupt6.test fc6a891716139665dae0073b6945e3670bf92568\nF test/corrupt7.test ffa86896fe63a3d00b0a131e1e64f402e4da9f7e5d89609d6501c851e511d73a\nF test/corrupt8.test 2399dfe40d2c0c63af86706e30f3e6302a8d0516\nF test/corrupt9.test 730a3db08d4ab9aa43392ea30d9c2b4879cbff85\nF test/corruptA.test 112f4b2ae0b95ebf3ea63718642fb969a93acea557ace3a307234d19c245989b\nF test/corruptB.test 73a8d6c0b9833697ecf16b63e3c5c05c945b5dec\nF test/corruptC.test 7d6d9e907334ea3ccb7111a0656cafa30a28f8a5f2aaf1c45ad712236302856a\nF test/corruptD.test 614320aa519f6bf6c7dd2f581f9513ff7b6826954180cca1a606d0e25ea084a3\nF test/corruptE.test 4143791f2dfb443aec5b7fabfa5821e6063eccc3b49b06f212c2f014715fd476\nF test/corruptF.test be9fde98e4c93648f1ba52b74e5318edc8f59fe4\nF test/corruptG.test adf79b669cbfd19e28c8191a610d083ae53a6d51\nF test/corruptH.test 79801d97ec5c2f9f3c87739aa1ec2eb786f96454\nF test/corruptI.test 9d8cbf6214e492abe9e822e759b9751ae336cec0a6fe3ff3b37bfbd8ff9c22ca\nF test/corruptJ.test 4d5ccc4bf959464229a836d60142831ef76a5aa4\nF test/corruptK.test ac13504593d89d69690d45479547616ed12644d42b5cb7eeb2e759a76fc23dcb\nF test/corruptL.test 652fc8ac0763a6fd3eb28b951d481924167b2d9936083bcc68253b2274a0c8fe\nF test/corruptM.test 7d574320e08c1b36caa3e47262061f186367d593a7e305d35f15289cc2c3e067\nF test/corruptN.test a034bb217bebd8d007625dfb078e76ec3d53515052dbceb68bd47b2c27674d5c\nF test/cost.test cc434a026b1e9d0d98137a147e24e5daf1b1ad09e9ff7da63b34c83ddd136d92\nF test/count.test cd4bd531066e8d77ef8fe1e3fc8253d042072e117ccab214b290cf83f1602249\nF test/countofview.test 4088e461a10ee33e69803c177a69aa1d7bba81a9ffc2df66d76465a22ca7fdfc\nF test/coveridxscan.test f35c7208dedc4f98e471c569df64c0f95a49f6e072d8dc7c8f99bdee2697de1b\nF test/crash.test f699152b8ae759bdf1c19c278b135f5d43fa4b6466e63489cd02edbc94aebad0\nF test/crash2.test 5b14d4eb58b880e231361d3b609b216acda86651\nF test/crash3.test 8f5de9d32ab9ab95475a9efe7f47a940aa889418\nF test/crash4.test fe2821baf37168dc59dd733dcf7dba2a401487bc\nF test/crash5.test 4aa55e7ac3c4bc511873e457aa65d2827d52da9b51e061511899dadcfe22b1e8\nF test/crash6.test 4c56f1e40d0291e1110790a99807aa875b1647ba\nF test/crash7.test 1a194c4900a255258cf94b7fcbfd29536db572df\nF test/crash8.test 64366e459c28dd62edfb7ad87253a409c7533b92d16fcc479a6a8131bdcc3100\nF test/crashM.test d95f59046fa749b0d0822edf18a717788c8f318d\nF test/crashtest1.c 09c1c7d728ccf4feb9e481671e29dda5669bbcc2\nF test/createtab.test 85cdfdae5c3de331cd888d6c66e1aba575b47c2e3c3cc4a1d6f54140699f5165\nF test/cse.test 00b3aea44b16828833c94fbe92475fd6977583fcb064ae0bc590986812b38d0c\nF test/csv01.test 2ab5514005fd308995c8910bc313e47f0368b94213b9d6c27f9a2da78796a091\nF test/ctime.test 340f362f41f92972bbd71f44e10569a5cc694062b692231bd08aa6fe6c1c4773\nF test/cursorhint.test 05cf0febe5c5f8a31f199401fd1c9322249e753950d55f26f9d5aca61408a270\nF test/cursorhint2.test 6f3aa9cb19e7418967a10ec6905209bcbb5968054da855fc36c8beee9ae9c42f\nF test/dataversion1.test 6e5e86ac681f0782e766ebcb56c019ae001522d114e0e111e5ebf68ccf2a7bb8\nF test/date.test c8ff835023f2107b57ce7a45c92265d51c98a23fc93231e998f12d850831aad6\nF test/date2.test 7e12ec14aaf4d5e6294b4ba140445b0eca06ea50062a9c3a69c4ee13d0b6f8b1\nF test/date3.test a1b77abf05c6772fe5ca2337cac1398892f2a41e62bce7e6be0f4a08a0e64ae5\nF test/date4.test 75dc8401e8c0639a228cd26a6eaa4ff5ea8ccda912b9853d1c9462c476670e17\nF test/date5.test 14ba189bc4d03efc371dd5302e035764f6633355a3e13acb4a45e7b33530231e\nF test/dbdata.test 042f49acff3438f940eeba5868d3af080ae64ddf26ae78f80c92bec3ca7d8603\nF test/dbfuzz.c 73047c920d6210e5912c87cdffd9a1c281d4252e\nF test/dbfuzz001.test 6c9a4622029d69dc38926f115864b055cb2f39badd25ec22cbfb130c8ba8e9c3\nF test/dbfuzz2-seed1.db e6225c6f3d7b63f9c5b6867146a5f329d997ab105bee64644dc2b3a2f2aebaee\nF test/dbfuzz2.c 4b3c12de4d98b1b2d908ab03d217d4619e47c8b23d5e67f8a6f2b1bdee7cae23\nF test/dbpage.test 63fab1eb026bada121107e53436fa749bbf83281dc9dea17af422f7a5c0f289f\nF test/dbpagefault.test ea39de2ca86041a9c6df1135645180a76d0a8da93ac159e2fafe38e39636530b\nF test/dbstatus.test 4a4221a883025ffd39696b3d1b3910b928fb097d77e671351acb35f3aed42759\nF test/dbstatus2.test f5fe0afed3fa45e57cfa70d1147606c20d2ba23feac78e9a172f2fe8ab5b78ef\nF test/decimal.test ef731887b43ee32ef86e1c8fddb61a40789f988332c029c601dcf2c319277e9e\nF test/default.test c7124864cded213a3f118bc7e2e26f34b7c36dfa26cf6945cc8b7f5db1191277\nF test/delete.test 2686e1c98d552ef37d79ad55b17b93fe96fad9737786917ce3839767f734c48f\nF test/delete2.test 3a03f2cca1f9a67ec469915cb8babd6485db43fa\nF test/delete3.test 555e84a00a99230b7d049d477a324a631126a6ab\nF test/delete4.test 51fafebe9503a40796d1aae1565c60524cada720e50eecac01b7fd0419d9ea0b\nF test/delete_db.test 096d828493c7907f9ea11a7098ea6a0f73edba89406487d5d6cc2228dc4ab8b0\nF test/descidx1.test edc8adee58d491b06c7157c50364eaf1c3605c9c19f8093cb1ea2b6184f3ac13\nF test/descidx2.test a0ba347037ff3b811f4c6ceca5fd0f9d5d72e74e59f2d9de346a9d2f6ad78298\nF test/descidx3.test 953c831df7ea219c73826dfbf2f6ee02d95040725aa88ccb4fa43d1a1999b926\nF test/diskfull.test 106391384780753ea6896b7b4f005d10e9866b6e\nF test/distinct.test 691c9e850b0d0b56b66e7e235453198cb4cf0760e324b7403d3c5abbeab0a014\nF test/distinct2.test 4d6316b6487a0aa5a90bee111575c957e2a5ba5a9be9156febe9533ce78876e8\nF test/distinctagg.test 40d7169ae5846caaf62c6e307d2ca3c333daf9b6f7cde888956a339a97afe85f\nF test/e_blobbytes.test 4c01dfe4f12087b92b20705a3fdfded45dc4ed16d5a211fed4e1d2786ba68a52\nF test/e_blobclose.test 692fc02a058476c2222a63d97e3f3b2b809c1842e5525ded7f854d540ac2e075\nF test/e_blobopen.test 29f6055ee453b8e679fe9570c4d3acfedbef821622c5dad16875148c5952ef50\nF test/e_blobwrite.test 3075ff539827576d9a34cbb5a2ac75eb65fb49cd5aadc27686b0719fbf99c156\nF test/e_changes.test 0f8c3e6aab7335cb772d5a3ea34ca4c82f98d0eb896e2eb3add971c16984b405\nF test/e_createtable.test 31b9bcb6ac8876bc7ec342d86d9c231a84c62b442093a6651dfd0fa93650eea3\nF test/e_delete.test ab39084f26ae1f033c940b70ebdbbd523dc4962e\nF test/e_droptrigger.test 235c610f8bf8ec44513e222b9085c7e49fad65ad0c1975ac2577109dd06fd8fa\nF test/e_dropview.test 74e405df7fa0f762e0c9445b166fe03955856532e2bb234c372f7c51228d75e7\nF test/e_expr.test 4faef475076f676e2a009270dbd3a7658db30d12dc3d21e4b85cab5f50be18c5\nF test/e_fkey.test feeba6238aeff9d809fb6236b351da8df4ae9bda89e088e54526b31a0cbfeec5\nF test/e_fts3.test 17ba7c373aba4d4f5696ba147ee23fd1a1ef70782af050e03e262ca187c5ee07\nF test/e_insert.test f02f7f17852b2163732c6611d193f84fc67bc641fb4882c77a464076e5eba80e\nF test/e_reindex.test 027bb13d2c7e9e865886eed6349f126a273f8037899b636bf5fb53c7fc815921\nF test/e_resolve.test a61751c368b109db73df0f20fc75fb47e166b1d8\nF test/e_select.test 327a15f14068bbd6f647cedc67210f8680fcb2f05e481a0a855fccd2abfa1292\nF test/e_select2.test aceb80ab927d46fba5ce7586ebabf23e2bb0604f\nF test/e_totalchanges.test c927f7499dc3aa28b9b556b7d6d115a2f0fe41f012b128d16bf1f3b30e9b41e4\nF test/e_update.test f46c2554d915c9197548681e8d8c33a267e84528\nF test/e_uri.test 86564382132d9c453845eeb5293c7e375487b625900ab56c181a0464908417d8\nF test/e_vacuum.test 89fc48e8beee2f9dfd6de1fbb2edea6542dae9121dc0fbe6313764169e742104\nF test/e_wal.test db7c33642711cf3c7959714b5f012aca08cacfa78da0382f95e849eb3ba66aa4\nF test/e_walauto.test 248af31e73c98df23476a22bdb815524c9dc3ba8\nF test/e_walckpt.test 28c371a6bb5e5fe7f31679c1df1763a19d19e8a0\nF test/e_walhook.test 01b494287ba9e60b70f6ebf3c6c62e0ffe01788e344a4846b08e5de0b344cb66\nF test/emptytable.test a38110becbdfa6325cd65cb588dca658cd885f62\nF test/enc.test b5503a87b31cea8a5084c6e447383f9ca08933bd2f29d97b6b6201081b2343eb\nF test/enc2.test 848bf05f15b011719f478dddb7b5e9aea35e39e457493cba4c4eef75d849a5ec\nF test/enc3.test 55ef64416d72975c66167310a51dc9fc544ba3ae4858b8d5ab22f4cb6500b087\nF test/enc4.test c8f1ce3618508fd0909945beb8b8831feef2c020\nF test/eqp.test 82f221e8cd588434d7f3bba9a0f4c78cbe7a541615a41632e12f50608bfb4a99\nF test/eqp2.test 6e8996148de88f0e7670491e92e712a2920a369b4406f21a27c3c9b6a46b68dd\nF test/errmsg.test eae9f091eb39ce7e20305de45d8e5d115b68fa856fba4ea6757b6ca3705ff7f9\nF test/errofst1.test 6da78363739ba8991f498396ab331b5d64e7ab5c4172c12b5884683ef523ac53\nF test/eval.test 73969a2d43a511bf44080c44485a8c4d796b6a4f038d19e491867081155692c0\nF test/exclusive.test 7ff63be7503990921838d5c9f77f6e33e68e48ed1a9d48cd28745bf650bf0747\nF test/exclusive2.test cd70b1d9c6fffd336f9795b711dcc5d9ceba133ad3f7001da3fda63615bdc91e\nF test/exec.test e949714dc127eaa5ecc7d723efec1ec27118fdd7\nF test/exists.test 79a75323c78f02bbe9c251ea502a092f9ef63dac\nF test/expr.test 5c06696478212e5a04e04b043f993373f6f8e5ce5a80f5548a84703b123b6caa\nF test/expr2.test c27327ae9c017a7ff6280123f67aff496f912da74d78c888926d68b46ec75fd8\nF test/exprfault.test da33606d799718e2f8e34efd0e5858884a1ad87f608774c552a7f5517cc27181\nF test/exprfault2.test c49e84273898969af5dbc4fe6a3f4335f14639799f343590336c9ddf84425965\nF test/extension01.test 00d13cec817f331a687a243e0e5a2d87b0e358c9\nF test/external_reader.test c7d34694f1b25c32d866f56ac80c1e29edddc42b4ef90cad589263ffac2cde0c\nF test/extraquick.test cb254400bd42bfb777ff675356aabf3287978f79\nF test/fallocate.test 37a62e396a68eeede8f8d2ecf23573a80faceb630788d314d0a073d862616717\nF test/filectrl.test 6e871c2d35dead1d9a88e176e8d2ca094fec6bb3\nF test/filefmt.test f393e80c4b8d493b7a7f8f3809a8425bbf4292af1f5140f01cb1427798a2bbd4\nF test/filter1.test 590f8ba9a0cd0823b80d89ac75c5ce72276189cef9225d2436adaf1ee87f3727\nF test/filter2.tcl 44e525497ce07382915f01bd29ffd0fa49dab3adb87253b5e5103ba8f93393e8\nF test/filter2.test 3cc20eaea2ea1ab245197cc4a62468deb460b78f5aa9bd7d5d3353c2fe569bae\nF test/filterfault.test c08fb491d698e8df6c122c98f7db1c65ffcfcad2c1ab0e07fa8a5be1b34eaa8b\nF test/fkey1.test e563bcb4cb108ce3f40363cda4f84009dc89a39e2973076e5057ba99fca35378\nF test/fkey2.test 1063d65e5923c054cfb8f0555a92a3ae0fa8c067275a33ee1715bd856cdb304c\nF test/fkey3.test 76d475c80b84ee7a5d062e56ccb6ea68882e2b49\nF test/fkey4.test 86446017011273aad8f9a99c1a65019e7bd9ca9d\nF test/fkey5.test 6727452e163a427147e84e739da18713da553d79f9783559b04fdcd36d5c7421\nF test/fkey6.test bdb9c808349a149575b87cf4bfd82d4c81612f0c4d954d27b3f42f043a385396\nF test/fkey7.test 64fb28da03da5dfe3cdef5967aa7e832c2507bf7fb8f0780cacbca1f2338d031\nF test/fkey8.test 51deda7f1a1448bca95875e4a6e1a3a75b4bd7215e924e845bd60de60e4d84bf\nF test/fkey_malloc.test 594a7ea1fbab553c036c70813cd8bd9407d63749\nF test/fordelete.test ba98f14446b310f9c9d935b97ec748753d0144a28b356ba30d1f4f6958fdde5c\nF test/fork-test.c 9ac2e6423a1d38df3d6be0e8ac15608b545de21e2b19d9d876254c5931b63edb\nF test/format4.test eeae341953db8b6bda7f549044797c3278a6cc345d11ada81471671b654f8ef4\nF test/fp-speed-1.c b37de94eba034e1703668816225f54510ec60fb0685406608cc707afe6b8234d\nF test/fpconv1.test d5d8aa0c427533006c112fb1957cdd1ea68c1d0709470dabb9ca02c2e4c06ad8\nF test/fts-9fd058691.test 78b887e30ae6816df0e1fed6259de4b5a64ad33c\nF test/fts3.test 672a040ea57036fb4b6fdc09027c18d7d24ab654\nF test/fts3_common.tcl dffad248f9ce090800e272017d2898005c28ee6314fc1dd5550643a02666907a\nF test/fts3aa.test 814d60a1ba30b4a71d8f9306a6564bc7b636dd6efacd2ad80306f9b23ef3ebee\nF test/fts3ab.test 7f6cf260ae80dda064023df8e8e503e9a412b91f\nF test/fts3ac.test 636ed7486043055d4f126a0e385f2d5a82ebbf63\nF test/fts3ad.test e40570cb6f74f059129ad48bcef3d7cbc20dda49\nF test/fts3ae.test ce32a13b34b0260928e4213b4481acf801533bda\nF test/fts3af.test d394978c534eabf22dd0837e718b913fd66b499c\nF test/fts3ag.test c003672a215124df7fc6000036d896f498b26b53\nF test/fts3ah.test dc9f66c32c296f1bc8bcc4535126bddfeca62894\nF test/fts3ai.test 24058fdc6e9e5102c1fd8459591b114b6a85d285\nF test/fts3aj.test 1560a7ce5642dc887e8ecfcc4693bcfce1dbb3d1771a735c845f0061e525deb2\nF test/fts3ak.test 36ea92f609efb390cf018cdb5d389c12e62b650abe31cfc88261b252daf88174\nF test/fts3al.test 07d64326e79bbdbab20ee87fc3328fbf01641c9f\nF test/fts3am.test 218aa6ba0dfc50c7c16b2022aac5c6be593d08d8\nF test/fts3an.test a49ccadc07a2f7d646ec1b81bc09da2d85a85b18\nF test/fts3ao.test 266989148fec6d9f1bb6c5382f7aa3dcea0e9cd444576e28dd2b9287ac7dd220\nF test/fts3atoken.test dc2078ce464914efe3a8dfc545dd034a0fc14f2ab425c240471d5a5f1c721400\nF test/fts3auto.test 649aa4c198d7acc5cd6355e19ee073d051c40d9e88a43fc3d88af46bdf3e99d5\nF test/fts3aux1.test 1880eaa75c586cd10f53080479a2b819b3915ae7ce55c4e0ba8f1fe05ac0a6a7\nF test/fts3aux2.test 2459e7fa3e22734aed237d1e2ae192f5541c4d8b218956ad2d90754977bf907f\nF test/fts3b.test c15c4a9d04e210d0be67e54ce6a87b927168fbf9c1e3faec8c1a732c366fd491\nF test/fts3c.test fc723a9cf10b397fdfc2b32e73c53c8b1ec02958\nF test/fts3comp1.test a0f5b16a2df44dd0b15751787130af2183167c0c\nF test/fts3conf.test c9cd45433b6787d48a43e84949aa2eb8b3b3d242bac7276731c1476290d31f29\nF test/fts3corrupt.test 6732477c5ace050c5758a40a8b5706c8c0cccd416b9c558e0e15224805a40e57\nF test/fts3corrupt2.test e318f0676e5e78d5a4b702637e2bb25265954c08a1b1e4aaf93c7880bb0c67d0\nF test/fts3corrupt3.test 0d5b69a0998b4adf868cc301fc78f3d0707745f1d984ce044c205cdb764b491f\nF test/fts3corrupt4.test c7f414fe29b97a478d15c90382c4ae077a2bbd2283bf8c63bf66dadaaed3edb8\nF test/fts3corrupt5.test 0549f85ec4bd22e992f645f13c59b99d652f2f5e643dac75568bfd23a6db7ed5\nF test/fts3corrupt6.test f417c910254f32c0bc9ead7affa991a1d5aec35b3b32a183ffb05eea78289525\nF test/fts3corrupt7.test 1da31776e24bb91d3c028e663456b61280b121a74496ccf2fef3fe33790ad2b0\nF test/fts3cov.test 7eacdbefd756cfa4dc2241974e3db2834e9b372ca215880e00032222f32194cf\nF test/fts3d.test 2bd8c97bcb9975f2334147173b4872505b6a41359a4f9068960a36afe07a679f\nF test/fts3defer.test f4c20e4c7153d20a98ee49ee5f3faef624fefc9a067f8d8d629db380c4d9f1de\nF test/fts3defer2.test 3bbe54a7fca7d548bb7ac4f59447ee591070bfbe0c9f3e279defa0b898e9afbb\nF test/fts3defer3.test dd53fc13223c6d8264a98244e9b19abd35ed71cd\nF test/fts3drop.test 1b906e293d6773812587b3dc458cb9e8f3f0c297\nF test/fts3dropmod.test 7de242ea1c8a713a8b143ea54468f4b1c4953fa068349e23ac178e2c90c59889\nF test/fts3e.test 1f6c6ac9cc8b772ca256e6b22aaeed50c9350851\nF test/fts3expr.test ebae205a7a89446c32583bcd492dcb817b9f6b31819bb4dde2583bb99c77e526\nF test/fts3expr2.test 18da930352e5693eaa163a3eacf96233b7290d1a\nF test/fts3expr3.test c4d4a7d6327418428c96e0a3a1137c251b8dfbf8\nF test/fts3expr4.test 6c7675bbdbffe6ffc95e9e861500b8ac3f739c4d004ffda812f138eeb1b45529\nF test/fts3expr5.test a5b9a053becbdb8e973fbf4d6d3abaabeb42d511d1848bd57931f3e0a1cf983e\nF test/fts3f.test 8c438d5e1cab526b0021988fb1dc70cf3597b006a33ffd6c955ee89929077fe3\nF test/fts3fault.test 9228f00cd69e2a5d2ed0f06c181981f4f90bd36da9f86b73f3a58b4b23451fd4\nF test/fts3fault2.test 7b2741e5095367238380b0fcdb837f36c24484c7a5f353659b387df63cf039ec\nF test/fts3fault3.test ccdd2292dd2d4e21e30fc5f4c8e064f79e516087eec5ff57ab6bc4f6a7714097\nF test/fts3first.test dbdedd20914c8d539aa3206c9b34a23775644641\nF test/fts3fuzz001.test c78afcd8ad712ea0b8d2ed50851a8aab3bc9dc52c64a536291e07112f519357c\nF test/fts3integrity.test 0c6fe7353d7b24d78862f4272ee9df4da2f32b3ff30fa3396945cda8119580a8\nF test/fts3join.test 1a4d786539b2b79a41c28ef2ac22cacd92a8ee830249b68a7dee4a020848e3bb\nF test/fts3malloc.test b0e4c133b8d61d4f6d112d8110f8320e9e453ef6\nF test/fts3matchinfo.test aa66cc50615578b30f6df9984819ae5b702511cf8a94251ec7c594096a703a4a\nF test/fts3matchinfo2.test 00144e841704b8debfcdf6097969cd9f2a1cf759e2203cda42583648f2e6bf58\nF test/fts3misc.test 9ec15e7c0b5831a6353bd4c46bf3acdf1360eda5d9f396f667db4d05bcf92ecf\nF test/fts3near.test 7e3354d46f155a822b59c0e957fd2a70c1d7e905\nF test/fts3offsets.test eb114b16e4d2495133bc2710d9c05ccd5ac90319718248fdf2dd379cdaa85358\nF test/fts3prefix.test fa794eaab0bdae466494947b0b153d7844478ab2\nF test/fts3prefix2.test e1f0a822ca661dced7f12ce392e14eaf65609dce\nF test/fts3query.test 45806a302921b245a9dba5d85c9d51fb98b3f137eea6e6bf6eae4883e041ab72\nF test/fts3rank.test cd99bc83a3c923c8d52afd90d86979cf05fc41849f892faeac3988055ef37b99\nF test/fts3rnd.test 1320d8826a845e38a96e769562bf83d7a92a15d0\nF test/fts3shared.test 57e26a801f21027b7530da77db54286a6fe4997e\nF test/fts3snippet.test 560c7f38c5fa591d88e367eac1313b64e503625616708ff61da9d5f52cbf75e5\nF test/fts3snippet2.test 03f6738ab3897bea2ba6be424a0613872e167acbf37a66200d655d737b470f65\nF test/fts3sort.test ed34c716a11cc2009a35210e84ad5f9c102362ca\nF test/fts3tok1.test a663f4cac22a9505400bc22aacb818d7055240409c28729669ea7d4cc2120d15\nF test/fts3tok_err.test 52273cd193b9036282f7bacb43da78c6be87418d\nF test/fts3varint.test 0b84a3fd4eba8a39f3687523804d18f3b322e6d4539a55bf342079c3614f2ada\nF test/fts4aa.test 0e6bfd6a81695a39b23e448dda25d864e63dda75bde6949c45ddc95426c6c3f5\nF test/fts4check.test f0ea5e5581951d8ef7a341eea14486daf6c5f516a2f3273b0d5e8cb8a6cd3bd2\nF test/fts4content.test 73bbb123420d2c46ef2fb3b24761e9acdb78b0877179d3a5d7d57aada08066f6\nF test/fts4docid.test e33c383cfbdff0284685604d256f347a18fdbf01\nF test/fts4growth.test 289833c34ad45a5e6e6133b53b6a71647231fb89d36ddcb8d9c87211b6721d7f\nF test/fts4growth2.test 13ad4e76451af6e6906c95cdc725d01b00044269\nF test/fts4incr.test 4e353a0bd886ea984e56fce9e77724fc923b8d0d\nF test/fts4intck1.test 54e7f28e34b72fb0c614d414bb1f568154d463c5a00b20944e893df858372ed4\nF test/fts4langid.test 4be912f42454998e239a2e877600263e0394afbaba03e06cedcc5a08693a345a\nF test/fts4lastrowid.test 185835895948d5325c7710649824042373b2203149abe8024a9319d25234dfd7\nF test/fts4merge.test 57d093660a5093ae6e9fbd2d17592a88b45bbd66db2703c4b640b28828dbe38b\nF test/fts4merge2.test 5faa558d1b672f82b847d2a337465fa745e46891\nF test/fts4merge3.test 8d9ccb4a3d41c4c617a149d6c4b13ad02de797d0\nF test/fts4merge4.test 66fce89934cd9508cbdc67de486558c34912ffb2e8ffe5c9a1bbb9b8a4408ba7\nF test/fts4merge5.test 69932d85cda8a1c4dcfb742865900ed8fbda51724b8cf9a45bbe226dfd06c596\nF test/fts4min.test 1c11e4bde16674a0c795953509cbc3731a7d9cbd1ddc7f35467bf39d632d749f\nF test/fts4noti.test d5d933705b1b1516b67a5e3f8e514ecb19c6522fb3357bb744776d48427c2292\nF test/fts4onepass.test d69ddc4ee3415e40b0c5d1d0408488a87614d4f63ba9c44f3e52db541d6b7cc7\nF test/fts4opt.test 0fd0cc84000743ff2a883b9b84b4a5be07249f0ba790c8848a757164cdd46b2a\nF test/fts4record.test a48508f69a84c9287c8019d3a1ae712f5730d8335ffaf8e2101e691d078950bb\nF test/fts4rename.test 2e0565ffd92b2c51f1a757df0b8f2ca30537197106fec09e943919801d173692\nF test/fts4umlaut.test fcaca4471de7e78c9d1f7e8976e3e8704d7d8ad979d57a739d00f3f757380429\nF test/fts4unicode.test 82a9c16b68ba2f358a856226bb2ee02f81583797bc4744061c54401bf1a0f4c9\nF test/fts4upfrom.test f25835162c989dffd5e2ef91ec24c4848cc9973093e2d492d1c7b32afac1b49d\nF test/full.test 6b3c8fb43c6beab6b95438c1675374b95fab245d\nF test/func.test 15f686741608294340bbea9f35f751074b4cf7df3797724dda40a9f4905ddbe1\nF test/func2.test 69f6ae3751b4ec765bdc3b803c0a255aa0f693f28f44805bef03e6b4a3fd242f\nF test/func3.test 600a632c305a88f3946d38f9a51efe145c989b2e13bd2b2a488db47fe76bab6a\nF test/func4.test a02e695f62beb31cb092dccf6873ff97543407fff97a5f3ec4da70b5b337bc84\nF test/func5.test 863e6d1bd0013d09c17236f8a13ea34008dd857d87d85a13a673960e4c25d82a\nF test/func6.test 3bc89ec0f2605736d3a118f43d25ef58115a7db4dba8ae939a363917d815c0bb\nF test/func7.test 7e009275f52c52954c8c028fdb62f8bc16cc47276fcc8753c1d2b22c6e074598\nF test/func8.test c4e2ecacf9f16e47a245e7a25fbabcc7e78f9c7c41a80f158527cdfdc6dd299d\nF test/func9.test b32d313f679aa9698d52f39519d301c3941823cb72b4e23406c210eadd82c824\nF test/fuzz-oss1.test 514dcabb24687818ea949fa6760229eaacad74ca70157743ef36d35bbe01ffb0\nF test/fuzz.test 4608c1310cff4c3014a84bcced6278139743e080046e5f6784b0de7b069371d8\nF test/fuzz2.test 76dc35b32b6d6f965259508508abce75a6c4d7e1\nF test/fuzz3.test 70ba57260364b83e964707b9d4b5625284239768ab907dd387c740c0370ce313\nF test/fuzz4.test c229bcdb45518a89e1d208a21343e061503460ac69fae1539320a89f572eb634\nF test/fuzz_common.tcl b7197de6ed1ee8250a4f82d67876f4561b42ee8cbbfc6160dcb66331bad3f830\nF test/fuzz_malloc.test f348276e732e814802e39f042b1f6da6362a610af73a528d8f76898fde6b22f2\nF test/fuzzcheck.c 1671559091b3e134ec807490f624d306b24bd9a8f03b12aa97e292f4b31e5d96\nF test/fuzzdata1.db 3e86d9cf5aea68ddb8e27c02d7dfdaa226347426c7eb814918e4d95475bf8517\nF test/fuzzdata2.db 128b3feeb78918d075c9b14b48610145a0dd4c8d6f1ca7c2870c7e425f5bf31f\nF test/fuzzdata3.db c6586d3e3cef0fbc18108f9bb649aa77bfc38aba\nF test/fuzzdata4.db b502c7d5498261715812dd8b3c2005bad08b3a26e6489414bd13926cd3e42ed2\nF test/fuzzdata5.db e35f64af17ec48926481cfaf3b3855e436bd40d1cfe2d59a9474cb4b748a52a5\nF test/fuzzdata6.db b8725a5f5cf7a3b7241a9038e57ca7e7cc8c3f4d86b44bd770617bda245ab2b0\nF test/fuzzdata7.db 0166b56fd7a6b9636a1d60ef0a060f86ddaecf99400a666bb6e5bbd7199ad1f2\nF test/fuzzdata8.db 4a53b6d077c6a5c23b609d8d3ac66996fa55ba3f8d02f9b6efdd0214a767a35a\nF test/fuzzer1.test 3d4c4b7e547aba5e5511a2991e3e3d07166cfbb8\nF test/fuzzer2.test a85ef814ce071293bce1ad8dffa217cbbaad4c14\nF test/fuzzerfault.test f64c4aef4c9e9edf1d6dc0d3f1e65dcc81e67c996403c88d14f09b74807a42bc\nF test/fuzzinvariants.c 057e910241d85aa4aaf75cef1a7adc45c632b173288d07d9dbbef4e6bda83d5a\nF test/gcfault.test 4ea410ac161e685f17b19e1f606f58514a2850e806c65b846d05f60d436c5b0d\nF test/gencol1.test e169bdfa11c7ed5e9f322a98a7db3afe9e66235750b68c923efee8e1876b46ec\nF test/genesis.tcl 1e2e2e8e5cc4058549a154ff1892fe5c9de19f98\nF test/having.test a89236dd8d55aa50c4805f82ac9daf64d477a44d712d8209c118978d0ca21ec9\nF test/hexlit.test 4a6a5f46e3c65c4bf1fa06f5dd5a9507a5627751\nF test/hidden.test 23c1393a79e846d68fd902d72c85d5e5dcf98711\nF test/hook.test 3481a68009fe143e3363fca922f6fc7a1e1f3776c51e42777f1a01b26ad2a9c8\nF test/hook2.test b9ff3b8c6519fb67f33192f1afe86e7782ee4ac8\nF test/icu.test 8da7d52cd9722c82f33b0466ed915460cb03c23a38f18a9a2d3ff97da9a4a8c0\nF test/ieee754.test b0945d12be7d255f3dfa18e2511b17ca37e0edd2b803231c52d05b86c04ab26e\nF test/imposter1.test c3f1db2d3db2c24611a6596a3fc0ffc14f1466c8\nF test/in.test d1cad4ededd425568b2e39fb0c31fa9a3772311dd595801ff13ba3912b69bba6\nF test/in2.test 5d4c61d17493c832f7d2d32bef785119e87bde75\nF test/in3.test 3cbf58c87f4052cee3a58b37b6389777505aa0c0\nF test/in4.test bb767ec1cfd1730256f0a83219f0acda36bc251b63f8b8bb7d8c7cff17875a4f\nF test/in5.test 4fd79c70dfa0681313e8cdca07f5ff0400bdc0e20f808a5c59eaef1e4b48082a\nF test/in6.test f5f40d6816a8bb7c784424b58a10ac38efb76ab29127a2c17399e0cbeeda0e4b\nF test/in7.test 5050b648510d88bd27ff6b40991a45e1cc277c20e258162e81650e01069a56bb\nF test/incrblob.test c9b96afc292aeff43d6687bcb09b0280aa599822\nF test/incrblob2.test a494c9e848560039a23974b9119cfc2cf3ad3bd15cc2694ee6367ae537ef8f1f\nF test/incrblob3.test 67621a04b3084113bf38ce03797d70eca012d9d8f948193b8f655df577b0da6f\nF test/incrblob4.test 21a52a6843a56cdcce968c6a86b72a7066d0e6ba\nF test/incrblob_err.test 89372a28f1d98254f03fed705f9efcd34ef61a674df16d2dbb4726944a2de5e9\nF test/incrblobfault.test de274b1e329169c2c3438f9528994807ea8201ebf38ae9f157d34bf3ec0cc549\nF test/incrcorrupt.test 6c567fbf870aa9e91866fe52ce6f200cd548939a\nF test/incrvacuum.test 3fa6145f5e71f603554fd7b8ec3da4290b1341029682313285cb5f9e1893d6ba\nF test/incrvacuum2.test 7d26cfda66c7e55898d196de54ac4ec7d86a4e3d\nF test/incrvacuum3.test 0bf0ffe7f2cbc87ba1d471e4bbadabbf10dacf8d4ee26b3a072708d575d637a9\nF test/incrvacuum_ioerr.test 6ae2f783424e47a0033304808fe27789cf93e635\nF test/index.test d866054c88b394fd42cbf2825628f127ca24dfac525fa019069a936674d92cbe\nF test/index2.test f835d5e13ca163bd78c4459ca15fd2e4ed487407\nF test/index3.test 51685f39345462b84fcf77eb8537af847fdf438cc96b05c45d6aaca4e473ade0\nF test/index4.test ab92e736d5946840236cd61ac3191f91a7856bf6\nF test/index5.test 8621491915800ec274609e42e02a97d67e9b13e7\nF test/index6.test b376a648e85aa71c50074382784e6cb0c126ec46e43d1ad15af9a4d234c52e65\nF test/index7.test b238344318e0b4e42126717f6554f0e7dfd0b39cecad4b736039b43e1e3b6eb3\nF test/index8.test caa097735c91dbc23d8a402f5e63a2a03c83840ba3928733ed7f9a03f8a912a3\nF test/index9.test 2ac891806a4136ef3e91280477e23114e67575207dc331e6797fa0ed9379f997\nF test/indexA.test 11d84f6995e6e5b9d8315953fb1b6d29772ee7c7803ee9112715e7e4dd3e4974\nF test/indexedby.test f21eca4f7a6ffe14c8500a7ad6cd53166666c99e5ccd311842a28bc94a195fe0\nF test/indexexpr1.test 928671af9d7374bb56ed4dcfbc157f4eeddb1e86ab5615ceb3ac97a713c2dd8f\nF test/indexexpr2.test 1c382e81ef996d8ae8b834a74f2a9013dddf59214c32201d7c8a656d739f999a\nF test/indexexpr3.test 47b91bc7999805c9a34d356f672259bc49295ecc797448511cae554a309b47cd\nF test/indexfault.test 98d78a8ff1f5335628b62f886a1cb7c7dac1ef6d48fa39c51ec871c87dce9811\nF test/init.test 15c823093fdabbf7b531fe22cf037134d09587a7\nF test/insert.test 4e3f0de67aac3c5be1f4aaedbcea11638f1b5cdc9a3115be14d19aa9db7623c6\nF test/insert2.test 4d14b8f1b810a41995f6286b64a6943215d52208\nF test/insert3.test 1b7db95a03ad9c5013fdf7d6722b6cd66ee55e30\nF test/insert4.test 2bf81535a990c969665d66db51fcf76c23499b39893b5109f413d1de4ad34cd3\nF test/insert5.test 394f96728d1258f406fe5f5aeb0aaf29487c39a6\nF test/insertfault.test ac63d14ea3b49c573673a572f4014b9117383a03e497c58f308b5c776e4a7f74\nF test/instr.test 107df2b9b74a4b59315916b575590a08f2a714de0754abe541f10a0971d0a2a4\nF test/instrfault.test 95e28efade652e6d51ae11b377088fe523a581a07ec428009e152a4dd0e0f44c\nF test/intarray.test bb976b0b3df0ebb6a2eddfb61768280440e672beba5460ed49679ea984ccf440\nF test/interrupt.test ac1ef50ec9ab8e4f0e17c47629f82539d4b22558904e321ed5abea2e6187da7a\nF test/interrupt2.test e4408ca770a6feafbadb0801e54a0dcd1a8d108d\nF test/intpkey.test aee694afed1a65c86c4e69ad030224b3fc268113d00685234d40079fca16bad3\nF test/intreal.test 68829a8bb073ee1610ca3f8f9e0f99b0371fb36e0fa64862dd5ced4ef03c2343\nF test/io.test f138f3fe696d1ed8c51dfea5b325910d319a1b29e1d25ea57231a02092f02cca\nF test/ioerr.test c94eef1cd8bfc36f9aa493e41e151e9160281ac8e2d960cc9dcdcc8e6aa99ab3\nF test/ioerr2.test 2593563599e2cc6b6b4fcf5878b177bdd5d8df26\nF test/ioerr3.test d3cec5e1a11ad6d27527d0d38573fbff14c71bdd\nF test/ioerr4.test f130fe9e71008577b342b8874d52984bd04ede2c\nF test/ioerr5.test 5984da7bf74b6540aa356f2ab0c6ae68a6d12039a3d798a9ac6a100abc17d520\nF test/ioerr6.test a395a6ab144b26a9e3e21059a1ab6a7149cca65b\nF test/istrue.test e7f285bb70282625c258e866ce6337d4c762922f5a300e1b50f958aef6e7d9c9\nF test/join.test f7abfef3faeaf2800308872e33a57e5b6e4a2b44fb8c6b90c6068412e71a6cf4\nF test/join2.test f59d63264fb24784ae9c3bc9d867eb569cd6d442da5660f8852effe5c1938c27\nF test/join3.test 6f0c774ff1ba0489e6c88a3e77b9d3528fb4fda0\nF test/join4.test 1a352e4e267114444c29266ce79e941af5885916\nF test/join5.test 380d12a9350f99f0cc681a4f1fea999886f18b3fe0d71a9b3065bcaead1e007f\nF test/join6.test f809c025fa253f9e150c0e9afd4cef8813257bceeb6f46e04041228c9403cc2c\nF test/join7.test 2268dcbb54b724391dda3748ea95c60d960607ffeed67885675998e7117697f6\nF test/join8.test d384d63985e3991c404afccadaf3efd1cdf9cd72680167f80e3cb80b95c18c68\nF test/join9.test 9056ddd3b0c0f4f9d658f4521038d9a37dc23ead8ca9a505d0b0db2b6a471e05\nF test/joinA.test 6ac4efdbb1eb9ca398162c5bc5623a757803b04bb4d76453c8563a0bdc2f73bd\nF test/joinB.test 1b2ba3fc8568b49411787fccbf540570c148e9b6a53a30f80691cb6268098ded\nF test/joinC.test 1f1a602c2127f55f136e2cbd3bf2d26546614bf8cffe5902ec1ac9c07f87f207\nF test/joinD.test 2ce62e7353a0702ca5e70008faf319c1d4686aa19fba34275c6d1da0e960be28\nF test/joinE.test d5d182f3812771e2c0d97c9dcf5dbe4c41c8e21c82560e59358731c4a3981d6b\nF test/joinF.test 53dd66158806823ea680dd7543b5406af151b5aafa5cd06a7f3231cd94938127\nF test/joinH.test 55f69e64da74d4eca2235237f3acb657aef181e22e45daa228e35bba865e0255\nF test/journal1.test c7b768041b7f494471531e17abc2f4f5ebf9e5096984f43ed17c4eb80ba34497\nF test/journal2.test 9dac6b4ba0ca79c3b21446bbae993a462c2397c4\nF test/journal3.test 7c3cf23ffc77db06601c1fcfc9743de8441cb77db9d1aa931863d94f5ffa140e\nF test/jrnlmode.test 9b5bc01dac22223cb60ec2d5f97acf568d73820794386de5634dcadbea9e1946\nF test/jrnlmode2.test 8759a1d4657c064637f8b079592651530db738419e1d649c6df7048cd724363d\nF test/jrnlmode3.test 556b447a05be0e0963f4311e95ab1632b11c9eaa\nF test/json/README.md de59d5ba0bd2796d797115688630a6405bbf43a2891bad445ac6b9f38b83f236\nF test/json/json-generator.tcl dc0dd0f393800c98658fc4c47eaa6af29d4e17527380cd28656fb261bddc8a3f\nF test/json/json-q1.txt 65f9d1cdcc4cffa9823fb73ed936aae5658700cd001fde448f68bfb91c807307\nF test/json/json-speed-check.sh 912ee03e700a65c827ee0c7b4752c21ec5ef69cf7679d2f482ca817042bead52 x\nF test/json/jsonb-q1.txt 1e180fe6491efab307e318b22879e3a736ac9a96539bbde7911a13ee5b33abc7\nF test/json101.test 30db5b055b103ccabc53a29cfe6cda3345d07e171aeb25403dafa04f19e98b19\nF test/json102.test 9b2e5ada10845ff84853b3feaae2ce51ce7145ae458f74c6a6cecc6ef6ee3ae1\nF test/json103.test 53df87f83a4e5fa0c0a56eb29ff6c94055c6eb919f33316d62161a8880112dbe\nF test/json104.test 1b844a70cddcfa2e4cd81a5db0657b2e61e7f00868310f24f56a9ba0114348c1\nF test/json105.test 043838b56e68f3252a0dcf5be1689016f6f3f05056f8dcfcdc9d074f4d932988\nF test/json106.test 4aed3afd16549045d198a8d9cea00deea96e1f2ecf55864dce96cac558b8abef\nF test/json107.test 59054e815c8f6b67d634d44ace421cf975828fb5651c4460aa66015c8e19d562\nF test/json108.test 0a5f1e2d4b35a1bc33052563d2a5ede03052e2099e58cb424547656c898e0f49\nF test/json501.test b95e2d14988b682a5cadf079dd6162f0f85fb74cd59c6b1f1624110104a974eb\nF test/json502.test 4ef68e4f272dfb083d4cbceb4e9e51d67ec1186a185e0c13637c50a4dc2f9796\nF test/jsonb01.test f4cdfb4cf5a0c940091b17675ed9583f45add0c938f07d65b0de0e19d3a9a101\nF test/keyword1.test 37ef6bba5d2ed5b07ecdd6810571de2956599dff\nF test/kvtest.c 6e0228409ea7ca0497dad503fbd109badb5e59545d131014b6aaac68b56f484a\nF test/lastinsert.test 42e948fd6442f07d60acbd15d33fb86473e0ef63\nF test/laststmtchanges.test ae613f53819206b3222771828d024154d51db200\nF test/lemon-test01.y 70110eff607ab137ccc851edb2bc7e14a6d4f246b5d2d25f82a60b69d87a9ff2\nF test/like.test b3ea2ba3558199aa8f25a42ddeb54772e234fab50868c9f066047acdbda8fc58\nF test/like2.test d3be15fefee3e02fc88942a9b98f26c5339bbdef7783c90023c092c4955fe3d3\nF test/like3.test a76e5938fadbe6d32807284c796bafd869974a961057bc5fc5a28e06de98745c\nF test/limit.test 350f5d03c29e7dff9a2cde016f84f8d368d40bcd02fa2b2a52fa10c4bf3cbfaf\nF test/limit2.test 9409b033284642a859fafc95f29a5a6a557bd57c1f0d7c3f554bd64ed69df77e\nF test/literal.test a65dca9fef86e51b8e45544268e37abbd4bb94ba35fd65f6fdcab2f288cd8f79\nF test/literal2.tcl 1499037beaf661aeecdbe48801220a181d805372a64c6128d5f26bb6a4a8f0ce\nF test/literal2.test b149e16b5fc9ee6249069a8858ed41052f222014fe0ba7ad43c2fb989c2dada2\nF test/loadext.test faa4f6eed07a5aac35d57fdd7bc07f8fc82464cfd327567c10cf0ba3c86cde04\nF test/loadext2.test 0408380b57adca04004247179837a18e866a74f7\nF test/lock.test 05f346b65040b9a27c032c984e1e509dfef1661135b4f26a3ab6d21358277803\nF test/lock2.test 5242d8ac4e2d59c403aebff606af449b455aceff\nF test/lock3.test f271375930711ae044080f4fe6d6eda930870d00\nF test/lock4.test 27143363eda1622f03c133efc8db808fc331afd973486cb571ea71cd717d37b8\nF test/lock5.test 583cae05992af0f66607286917f7d5f8aed3b6053c52df5994efb98f2a8fdbaf\nF test/lock6.test ad5b387a3a8096afd3c68a55b9535056431b0cf5\nF test/lock7.test 49f1eaff1cdc491cc5dee3669f3c671d9f172431\nF test/lock_common.tcl 2f3f7f2e9637f93ccf609df48ef5b27a50278b6b1cd752b445d52262e5841413\nF test/lookaside.test 5a828e7256f1ee4da8e1bdaa03373a3ccdb0f1ff98dfa82e9b76cb41a45b1083\nF test/main.test e8752d76233b1c8906cd2c98ad920dba868bd63c87d51d8a2ea5e9cba55dd496\nF test/make-where7.tcl 05c16b5d4f5d6512881dfec560cb793915932ef9\nF test/malloc.test 18dd1c4188c81ca79cf123527c71b19ee0c31feb9947fdffb0dc6ceb1436816a\nF test/malloc3.test 6e88bae6312854a4adb4ecc2a6a5ea8c59b4db778b724ba718e1c43fc8c3c136\nF test/malloc4.test 957337613002b7058a85116493a262f679f3a261\nF test/malloc5.test 2e4ad7684a13389a44a840499cd47173a8d05f22f082d7d083eece433a7a64eb\nF test/malloc6.test 2f039d9821927eacae43e1831f815e157659a151\nF test/malloc7.test 7c68a32942858bc715284856c5507446bba88c3a\nF test/malloc8.test 9b7a3f8cb9cf0b12fff566e80a980b1767bd961d\nF test/malloc9.test 2307c6ee3703b0a21391f3ea92388b4b73f9105e\nF test/mallocA.test aea76f2dd8bcc2d19748f6b911e876cefda74a563753bf26af046e9d34bb97e6\nF test/mallocAll.test 98f1be74bc9f49a858bc4f361fc58e26486798be\nF test/mallocB.test bc475ab850cda896142ab935bbfbc74c24e51ed6\nF test/mallocC.test 3dffe16532f109293ce1ccecd0c31dca55ef08c4\nF test/mallocD.test f78c295e8e18ea3029e65ca08278690e00c22100\nF test/mallocE.test db1ed69d7eded1b080952e2a7c37f364ad241b08\nF test/mallocF.test 2d5c590ebc2fc7f0dcebdf5aa8498b9aed69107e\nF test/mallocG.test 0ff91b65c50bdaba680fb75d87fe4ad35bb7934f\nF test/mallocH.test 79b65aed612c9b3ed2dcdaa727c85895fd1bfbdb\nF test/mallocI.test 6c23a71df077fa5d387be90e7e669c5b368ca38a\nF test/mallocJ.test b5d1839da331d96223e5f458856f8ffe1366f62e\nF test/mallocK.test 25897506da0098cea09b302ff432b0fb6d8002773c1e0fc9732aa8b444bfd455\nF test/mallocL.test fb311ff80afddf3b1a75e52289081f4754d901dc\nF test/mallocM.test 78bbe9d3da84a5c679123cdb40d7b2010b18fc46e13897e4f253c6ba6fbff134\nF test/malloc_common.tcl 806c50379cf4fa65008cd4d5af18273e5dac8ab62d1d4316c76aa2ecd2e54018\nF test/malloctraceviewer.tcl 3e3ddf11e30d2b20f53aa16aa6615082fb24a100bea61cca7214c927b742eba6\nF test/manydb.test 28385ae2087967aa05c38624cec7d96ec74feb3e\nF test/mem5.test c6460fba403c5703141348cd90de1c294188c68f\nF test/memdb.test c1f2a343ad14398d5d6debda6ea33e80d0dafcc7\nF test/memdb1.test c737ac9aa5895092332b1dde24fae7ae494b7fcbcd346d22d600891096a3836d\nF test/memdb2.test 4ba1fc09e2f51df80d148a540e4a3fa66d0462e91167b27497084de4d1f6b5b4\nF test/memjournal.test 70f3a00c7f84ee2978ad14e831231caa1e7f23915a2c54b4f775a021d5740c6c\nF test/memjournal2.test dbc2c5cb5f7b38950f4f6dc3e73fcecf0fcbed3fc32c7ce913bba164d288da1e\nF test/memleak.test c7478f1195d64887dd1c677edc39fa03b5bf29024e6dcc5b5cc554d7ed00b01f\nF test/memsubsys1.test 86b8158752af9188ed5b32a30674a1ef71183e6bc4e6808e815cd658ca9058a6\nF test/memsubsys2.test 774b93cb09ca50d1b759bb7c645baa2a9ce172edc3a3da67d5150a26a9fc2a08\nF test/merge1.test 7dd9dc6838bcd0623a069485fe3a8dd498a051c16e1877cf84f506c0d6a29b43\nF test/minmax.test fe638b55d77d2375531a8f549b338eafcd9adfbd2f72df37ed77d9b26ca0a71a\nF test/minmax2.test cf9311babb6f0518d04e42fd6a42c619531c4309a9dd790a2c4e9b3bc595e0de\nF test/minmax3.test cc1e8b010136db0d01a6f2a29ba5a9f321034354\nF test/minmax4.test 272ca395257f05937dc96441c9dde4bc9fbf116a8d4fa02baeb0d13d50e36c87\nF test/misc1.test e3e36262aff1bd9b8b9bf1eeb3af04adb3fc1e23f0a92dbff708bba9e939ace1\nF test/misc2.test a1a3573cc02662becd967766021d6f16c54684d56df5f227481c7ef0d9df0bd0\nF test/misc3.test 651b88bca19b8ff6a7b6af73dae00c3fd5b3ea5bee0c0d1d91abd4c4b4748718\nF test/misc4.test 10cd6addb2fa9093df4751a1b92b50440175dd5468a6ec84d0386e78f087db0e\nF test/misc5.test 02fcaf4d42405be02ec975e946270a50b0282dac98c78303ade0d1392839d2b8\nF test/misc6.test 953cc693924d88e6117aeba16f46f0bf5abede91\nF test/misc7.test d912f3d45c2989191b797504a220ca225d6be80b21acad22ba0d35f4a9ee4579\nF test/misc8.test 08d2380bc435486b12161521f225043ac2be26f02471c2c1ea4cac0b1548edbd\nF test/misuse.test 9e7f78402005e833af71dcab32d048003869eca5abcaccc985d4f8dc1d86bcc7\nF test/mjournal.test 28a08d5cb5fb5b5702a46e19176e45e964e0800d1f894677169e79f34030e152\nF test/mmap1.test 18de3fd7b70a777af6004ca2feecfcdd3d0be17fa04058e808baf530c94b1a1d\nF test/mmap2.test 9d6dd9ddb4ad2379f29cc78f38ce1e63ed418022\nF test/mmap3.test b3c297e78e6a8520aafcc1a8f140535594c9086e\nF test/mmap4.test 2e2b4e32555b58da15176e6fe750f17c9dcf7f93\nF test/mmapcorrupt.test 470fb44fe92e99c1d23701d156f8c17865f5b027063c9119dcfdb842791f4465\nF test/mmapfault.test d4c9eff9cd8c2dc14bc43e71e042f175b0a26fe3\nF test/mmapwarm.test 2272005969cd17a910077bd5082f70bc1fefad9a875afec7fc9af483898ecaf3\nF test/multiplex.test d74c034e52805f6de8cc5432cef8c9eb774bb64ec29b83a22effc8ca4dac1f08\nF test/multiplex2.test 580ca5817c7edbe4cc68fa150609c9473393003a\nF test/multiplex3.test fac575e0b1b852025575a6a8357701d80933e98b5d2fe6d35ddaa68f92f6a1f7\nF test/multiplex4.test e8ae4c4bd70606a5727743241f13b5701990abe4\nF test/mutex1.test 42cb5e244c3a77bb0ef2b967e06fa5e7ba7d32d90a9b20bed98f6f5ede185a25\nF test/mutex2.test bfeaeac2e73095b2ac32285d2756e3a65e681660\nF test/nan.test 73ea63ab43668313e2f8cc9ef9e9a966672c7934f3ce76926fbe991235d07d91\nF test/nockpt.test 8c43b25af63b0bd620cf1b003529e37b6f1dc53bd22690e96a1bd73f78dde53a\nF test/nolock.test f196cf8b8fbea4e2ca345140a2b3f3b0da45c76e\nF test/normalize.test f23b6c5926c59548635fcf39678ac613e726121e073dd902a3062fbb83903b72\nF test/notify1.test 669b2b743618efdc18ca4b02f45423d5d2304abf\nF test/notify2.test 2ecabaa1305083856b7c39cf32816b612740c161\nF test/notify3.test 796c7b7157f55c93b4e672b724e9c923a6fc6aa72ac419379a623e2350472e22\nF test/notnull.test a37b663d5bb728d66fc182016613fb8e4a0a4bbf3d75b8876a7527f7d4ed3f18\nF test/notnull2.test 2ac7b4e04917148c7a1a9ed36df20150175ce942f07f5714375b29acbaca7106\nF test/notnullfault.test fc4bb7845582a2b3db376001ef49118393b1b11abe0d24adb03db057ee2b73d5\nF test/null.test b7ff206a1c60fe01aa2abd33ef9ea83c93727d993ca8a613de86e925c9f2bc6f\nF test/nulls1.test 7a5e4346ee4285034100b4cd20e6784f16a9d6c927e44ecdf10034086bbee9c9\nF test/numcast.test 5d126f7f581432e86a90d1e35cac625164aec4a1\nF test/numindex1.test 20a5450d4b056e48cd5db30e659f13347a099823\nF test/offset1.test 72cca52482cbd5bc687cfa67aa2566c859081b5a353fd2f9da9bbd3914dea1ef\nF test/openv2.test 0d3040974bf402e19b7df4b783e447289d7ab394\nF test/optfuzz-db01.c 9f2fa80b8f84ebbf1f2e8b13421a4e0477fe300f6686fbd76cac1d2db66e0fdc\nF test/optfuzz-db01.txt 21f6bdeadc701cf11528276e2a55c70bfcb846ba42df327f979bd9e7b6ce7041\nF test/optfuzz.c 690430a0bf0ad047d5a168bf52b05b2ee97aedaad8c14337e9eb5050faa64994\nF test/orderby1.test 7d0e4ee692a3e808c1026b3c483594ad1e468b68b50dcefa0d678a8c05274ceb\nF test/orderby2.test bc11009f7cd99d96b1b11e57b199b00633eb5b04\nF test/orderby3.test 8619d06a3debdcd80a27c0fdea5c40b468854b99\nF test/orderby4.test 4d39bfbaaa3ae64d026ca2ff166353d2edca4ba4\nF test/orderby5.test bd7d9e3380e87e5dcf6ea817ebaab6d15da213c7804b38767e1b3e695e85650b\nF test/orderby6.test 8b38138ab0972588240b3fca0985d2e400432859\nF test/orderby7.test 3d1383d52ade5b9eb3a173b3147fdd296f0202da\nF test/orderby8.test 23ef1a5d72bd3adcc2f65561c654295d1b8047bd\nF test/orderby9.test 87fb9548debcc2cd141c5299002dd94672fa76a3\nF test/orderbyA.test df608e59efc2ef50c1eddf1a773b272de3252e9401bfec86d04b52fd973866d5\nF test/orderbyB.test 32576c7b138105bc72f7fbf33bd320ca3a7d303641fc939e0e56af6cba884b3d\nF test/oserror.test 1fc9746b83d778e70d115049747ba19c7fba154afce7cc165b09feb6ca6abbc5\nF test/ossfuzz.c 9636dad2092a05a32110df0ca06713038dd0c43dd89a77dabe4b8b0d71096715\nF test/ossshell.c f125c5bd16e537a2549aa579b328dd1c59905e7ab1338dfc210e755bb7b69f17\nF test/ovfl.test 199c482696defceacee8c8e0e0ef36da62726b2f\nF test/pager1.test ffd885cdc98b986c9f746496508c0c4810ed0eaade3575ddf53c222e85880552\nF test/pager2.test c0ede15952b607f9a38f653acdfa73c19e657958e9104aab1a71950ea7b71831\nF test/pager3.test 4e9a83d6ca0838d7c602c9eb93d1357562d9059c1e02ffb138a8271020838370\nF test/pager4.test a122e9e6925d5b23b31e3dfef8c6a44bbf19590e\nF test/pagerfault.test 63c5da625562c66345ab4528790327ca63db2f6f9cbae2aba8cb7c51de3d1628\nF test/pagerfault2.test caf4c7facb914fd3b03a17b31ae2b180c8d6ca1f\nF test/pagerfault3.test 1003fcda009bf48a8e22a516e193b6ef0dd1bbd8\nF test/pageropt.test 84e4cc5cbca285357f7906e99b21be4f2bf5abc0\nF test/pagesize.test 5769fc62d8c890a83a503f67d47508dfdc543305\nF test/parser1.test 6ccdf5e459a5dc4673d3273dc311a7e9742ca952dd0551a6a6320d27035ce4b3\nF test/pcache.test c8acbedd3b6fd0f9a7ca887a83b11d24a007972b\nF test/pcache2.test af7f3deb1a819f77a6d0d81534e97d1cf62cd442\nF test/pendingrace.test e99efc5ab3584da3dfc8cd6a0ec4e5a42214820574f5ea24ee93f1d84655f463\nF test/percentile.test 52ba89d6ee6b65f770972b67dace358bab7cdbd532803d3db157845268e789cd\nF test/permutations.test 37650c5286f7d6f322af95cad876b69c6c2c79c28dc649f09de07d3312b1213c\nF test/pg_common.tcl 3b27542224db1e713ae387459b5d117c836a5f6e328846922993b6d2b7640d9f\nF test/pragma.test 11cb9310c42f921918f7f563e3c0b6e70f9f9c3a6a1cf12af8fccb6c574f3882\nF test/pragma2.test e5d5c176360c321344249354c0c16aec46214c9f\nF test/pragma3.test 92a46bbea12322dd94a404f49edcfbfc913a2c98115f0d030a7459bb4712ef31\nF test/pragma4.test 396ef9bff1fb966d41721545ad4b12bfc26aae315f5fe51d9b917828d49e6f8e\nF test/pragma5.test 7b33fc43e2e41abf17f35fb73f71b49671a380ea92a6c94b6ce530a25f8d9102\nF test/pragma6.test c5ec577ba087954b4dfa619a3cbe97b155b60a0af487527abe89b10fc17e6512\nF test/pragmafault.test 275edaf3161771d37de60e5c2b412627ac94cef11739236bec12ed1258b240f8\nF test/prefixes.test b524a1c44bffec225b9aec98bd728480352aa8532ac4c15771fb85e8beef65d9\nF test/printf.test 685fec5a0c5af2490ab0632775a301554361d674211d690f5bee0a97b05333de\nF test/printf2.test 3f55c1871a5a65507416076f6eb97e738d5210aeda7595a74ee895f2224cce60\nF test/progress.test ebab27f670bd0d4eb9d20d49cef96e68141d92fb\nF test/ptrchng.test ef1aa72d6cf35a2bbd0869a649b744e9d84977fc\nF test/pushdown.test 46a626ef1c0ca79b85296ff2e078b9da20a50e9b804b38f441590c3987580ddd\nF test/queryonly.test 5f653159e0f552f0552d43259890c1089391dcca\nF test/quick.test 1681febc928d686362d50057c642f77a02c62e57\nF test/quickcheck.test a4b7e878cd97e46108291c409b0bf8214f29e18fddd68a42bc5c1375ad1fb80a\nF test/quota-glob.test 32901e9eed6705d68ca3faee2a06b73b57cb3c26\nF test/quota.test bfb269ce81ea52f593f9648316cd5013d766dd2a\nF test/quota2.test 7dc12e08b11cbc4c16c9ba2aa2e040ea8d8ab4b8\nF test/quote.test 7b01b2a261bc26d9821aea9f4941ce1e08191d62fc55ba8862440fb3a59197a4\nF test/randexpr1.tcl 40dec52119ed3a2b8b2a773bce24b63a3a746459\nF test/randexpr1.test eda062a97e60f9c38ae8d806b03b0ddf23d796df\nF test/rbu.test 168573d353cd0fd10196b87b0caa322c144ef736\nF test/rdonly.test 64e2696c322e3538df0b1ed624e21f9a23ed9ff8\nF test/readonly.test 69a7ccec846cad2e000b3539d56360d02f327061dc5e41f7f9a3e01f19719952\nF test/recover.test a163a156ea9f2beea63fa83c4dcd8dea6e57b8a569fc647155e3d2754eaac1b5\nF test/regexp1.test 8f2a8bc1569666e29a4cee6c1a666cd224eb6d50e2470d1dc1df995170f3e0f1\nF test/regexp2.test 55ed41da802b0e284ac7e2fe944be3948f93ff25abbca0361a609acfed1368b5\nF test/reindex.test cd9d6021729910ece82267b4f5e1b5ac2911a7566c43b43c176a6a4732e2118d\nF test/resetdb.test 54c06f18bc832ac6d6319e5ab23d5c8dd49fdbeec7c696d791682a8006bd5fc3\nF test/resolver01.test f4022acafda7f4d40eca94dbf16bc5fc4ac30ceb\nF test/returning1.test 212cd4111bb941a60abf608f20250db666c21eb1bc4d49217e96c87ff3ab9d1a\nF test/returningfault.test ae4c4b5e8745813287a359d9ccdb9d5c883c2e68afb18fb0767937d5de5692a4\nF test/rollback.test 952c4d805bca96adc2be76f621ea22115fe40b330015af36fcc8028c8547fcee\nF test/rollback2.test 3f3a4e20401825017df7e7671e9f31b6de5fae5620c2b9b49917f52f8c160a8f\nF test/rollbackfault.test 0e646aeab8840c399cfbfa43daab46fd609cf04a\nF test/round1.test 29c3c9039936ed024d672f003c4d35ee11c14c0acb75c5f7d6188ff16190cfd4\nF test/rowallock.test 3f88ec6819489d0b2341c7a7528ae17c053ab7cc\nF test/rowhash.test 0bc1d31415e4575d10cacf31e1a66b5cc0f8be81\nF test/rowid.test d27191b5ce794c05bf61081e8b2c546a1844c1641321dcaf7fb785234256cc8e\nF test/rowvalue.test baf4fa3ec1a8c1c920c3faa5fd25959cb454bbd99ac8960397c34549d9fc4abe\nF test/rowvalue2.test 060d238b7e5639a7c5630cb5e63e311b44efef2b\nF test/rowvalue3.test 1347e25ca11c547c5a6ff0cc5626f95aa9740e9275bfaec096029f57cb2130ce\nF test/rowvalue4.test bac9326d1e886656650f67c0ec484eb5f452244a8209c6af508e9a862ace08ed\nF test/rowvalue5.test 00740304ea6a53a8704640c7405690f0045d5d2a6b4b04dde7bccc14c3068ea7\nF test/rowvalue6.test d19b54feb604d5601f8614b15e214e0774c01087\nF test/rowvalue7.test c1cbdbf407029db01f87764097c6ac02a1c5a37efd2776eff32a9cdfdf6f2dba\nF test/rowvalue8.test 5900eddad9e2c3c2e26f1a95f74aafc1232ee5e0\nF test/rowvalue9.test 7499a8fd7ca3a3f0e19d94e135355439aa2b596f86b775ca8de79672da2ca378\nF test/rowvalueA.test be8d6ad8b476eb24c151bb20bfd487e0d50c5e99618b7b0e656035069d2fc2cf\nF test/rowvaluefault.test 963ae9cdaed30a85a29668dd514e639f3556cae903ee9f172ea972d511c54fff\nF test/rowvaluevtab.test cd9747bb3f308086944c07968f547ad6b05022e698d80b9ffbdfe09ce0b8da6f\nF test/rtree.test 0c8d9dd458d6824e59683c19ab2ffa9ef946f798\nF test/run-wordcount.sh 891e89c4c2d16e629cd45951d4ed899ad12afc09\nF test/savepoint.test 6e9804a17767f08432c7a5e738b9a8f4b891d243110b63d3a41d270d3d1378ec\nF test/savepoint2.test 9b8543940572a2f01a18298c3135ad0c9f4f67d7\nF test/savepoint4.test c8f8159ade6d2acd9128be61e1230f1c1edc6cc0\nF test/savepoint5.test 0735db177e0ebbaedc39812c8d065075d563c4fd\nF test/savepoint6.test 48a645a7bb3a59a6fcf06a7364cfe5b655c336760de39068f7c241b0fc80d963\nF test/savepoint7.test cde525ea3075283eb950cdcdefe23ead4f700daa\nF test/savepointfault.test f044eac64b59f09746c7020ee261734de82bf9b2\nF test/scanstatus.test b249328caf4d317e71058006872b8012598a5fa045b30bf24a81eeff650ab49e\nF test/scanstatus2.test d85d17f2b0b4c013dde95232f7beab749f11f0ef847f5ecffb9486d2f5ecf9f9\nF test/schema.test 5dd11c96ba64744de955315d2e4f8992e447533690153b93377dffb2a5ef5431\nF test/schema2.test 906408621ea881fdb496d878b1822572a34e32c5\nF test/schema3.test 8ed4ae66e082cdd8b1b1f22d8549e1e7a0db4527a8e6ee8b6193053ee1e5c9ce\nF test/schema4.test 3b26c9fa916abb6dadf894137adcf41b7796f7b9\nF test/schema5.test 29699b4421f183c8f0e88bd28ce7d75d13ea653e\nF test/schema6.test e4bd1f23d368695eb9e7b51ef6e02ca0642ea2ab4a52579959826b5e7dce1f9b\nF test/schemafault.test 1936bceca55ac82c5efbcc9fc91a1933e45c8d1e1d106b9a7e56c972a5a2a51e\nF test/securedel.test 2f70b2449186a1921bd01ec9da407fbfa98c3a7a5521854c300c194b2ff09384\nF test/securedel2.test 2d54c28e46eb1fd6902089958b20b1b056c6f1c5\nF test/seekscan1.test 31af16e3bb3203d153aea320939c5da97ec44705c2710d153c06a01397d45b09\nF test/select1.test 692e84cfa29c405854c69e8a4027183d64c22952866a123fabbce741a379e889\nF test/select2.test 352480e0e9c66eda9c3044e412abdf5be0215b56\nF test/select3.test 180223af31e1ca5537dd395ef9708ae18e651a233777fd366fd0d75469fc19c6\nF test/select4.test f0684d3da3bccacbe2a1ebadf6fb49d9df6f53acb4c6ebc228a88d0d6054cc7b\nF test/select5.test 8afc5e5dcdebc2be54472e73ebd9cd1adef1225fd15d37a1c62f969159f390ae\nF test/select6.test d455cc36cb5658ba7002ccbf23d3d392801403e64ac6516190266a8ce167ad39\nF test/select7.test b825420da8a0b5722fdb77f3369f6396a3d198c46e8787eb26ff9425d4ac9d27\nF test/select8.test 8c8f5ae43894c891efc5755ed905467d1d67ad5d\nF test/select9.test f7586b207ce2304ab80dc93d3146469a28fd4403621dd3a82d06644563d3c812\nF test/selectA.test 1da8ce3884c326e11d2855baffb76436b0d7e044404af8a2a70d1399a4ff7e29\nF test/selectB.test 954e4e49cf1f896d61794e440669e03a27ceea25\nF test/selectC.test 38c530b0cc5728b793c3c11f52b52c70290d39822224acd39011c89c1853bd31\nF test/selectD.test 6d1909b49970bf92f45ce657505befcef5fc7cbc13544e18103a316d32189bfb\nF test/selectE.test a8730ca330fcf40ace158f134f4fe0eb00c7edbf\nF test/selectF.test 21c94e6438f76537b72532fa9fd4710cdd455fc3\nF test/selectG.test 089f7d3d7e6db91566f00b036cb353107a2cca6220eb1cb264085a836dae8840\nF test/selectH.test 0b54599f1917d99568c9b929df22ec6261ed7b6d2f02a46b5945ef81b7871aac\nF test/session.test 78fa2365e93d3663a6e933f86e7afc395adf18be\nF test/sessionfuzz-data1.db 1f8d5def831f19b1c74571037f0d53a588ea49a6c4ca2a028fc0c27ef896dbcb\nF test/sessionfuzz.c f693b8827034a3bed7616d89c65fb4fe8b7ff3c0f000c6ea6beda69b7f1aced3\nF test/shared.test f022874d9d299fe913529dc10f52ad5a386e4e7ff709270b9b1111b3a0f3420a\nF test/shared2.test 03eb4a8d372e290107d34b6ce1809919a698e879\nF test/shared3.test f8cd07c1a2b7cdb315c01671a0b2f8e3830b11ef31da6baa9a9cd8da88965403\nF test/shared4.test c75f476804e76e26bf6fa0e7b421fb0ca7d07558\nF test/shared6.test 866bb4982c45ce216c61ded5e8fde4e7e2f3ffa9\nF test/shared7.test a81e99f83e6c51b02ac99c96fb3a2a7b5978c956\nF test/shared8.test 933ed7d71f598bb6c7a8c192a3cd30f2562fdccf514df383798599c34ffa672f\nF test/shared9.test 600a257fe9d8b0272746b230e761aa1bd8802ca4cf3ba5b2136b9204f3d51efa\nF test/sharedA.test 64bdd21216dda2c6a3bd3475348ccdc108160f34682c97f2f51c19fc0e212700\nF test/sharedB.test 1a84863d7a2204e0d42f2e1606577c5e92e4473fa37ea0f5bdf829e4bf8ee707\nF test/shared_err.test 32634e404a3317eeb94abc7a099c556a346fdb8fb3858dbe222a4cbb8926a939\nF test/sharedlock.test 5ede3c37439067c43b0198f580fd374ebf15d304\nF test/shell1.test 5d84e415adf7cc4edd5913c4f23c761104ff135b9c190fcf7b430a4cbca6cb65\nF test/shell2.test 01a01f76ed98088ce598794fbf5b359e148271541a8ddbf79d21cc353cc67a24\nF test/shell3.test db1953a8e59d08e9240b7cc5948878e184f7eb2623591587f8fd1f1a5bd536d8\nF test/shell4.test 522fdc628c55eff697b061504fb0a9e4e6dfc5d9087a633ab0f3dd11bcc4f807\nF test/shell5.test 0e5f8ce08206b9998a778cfe1989e20e47839153c05af2da29198150172e22fc\nF test/shell6.test e3b883b61d4916b6906678a35f9d19054861123ad91b856461e0a456273bdbb8\nF test/shell7.test 43fd8e511c533bab5232e95c7b4be93b243451709e89582600d4b6e67693d5c3\nF test/shell8.test aea51ecbcd4494c746b096aeff51d841d04d5f0dc4b62eb42427f16109b87acd\nF test/shell9.test 8742a5b390cdcef6369f5aa223e415aa4255a4129ef249b177887dc635a87209\nF test/shmlock.test 3dbf017d34ab0c60abe6a44e447d3552154bd0c87b41eaf5ceacd408dd13fda5\nF test/shortread1.test bb591ef20f0fd9ed26d0d12e80eee6d7ac8897a3\nF test/show_speedtest1_rtree.tcl 32e6c5f073d7426148a6936a0408f4b5b169aba5\nF test/shrink.test 2668e607dcdfa19c52828c09b69685b38da793856582ae31debf79d90c7bbbdc\nF test/sidedelete.test f0ad71abe6233e3b153100f3b8d679b19a488329\nF test/skipscan1.test 9cbbb6575517b15292bd87ee85b853bbd3cd4b4735d69b0f083020cec16ff304\nF test/skipscan2.test b032ed3e0ba5caa4df6c43ef22c31566aac67783bc031869155989a7ccdb5bd5\nF test/skipscan3.test ec5bab3f81c7038b43450e7b3062e04a198bdbb5\nF test/skipscan5.test 0672103fd2c8f96bd114133f356192b35ece45c794fe3677e1d9e5e3104a608e\nF test/skipscan6.test bddbb35dd335e2d21b7791a61e3b2e1f3255dc307ce80aa6fe19cc298e6feb13\nF test/snapshot.test a504f2e7009f512ef66c719f0ea1c55a556bdaf1e1312c80a04d46fc1a3e9632\nF test/snapshot2.test 8d6ff5dd9cc503f6e12d408a30409c3f9c653507b24408d9cd7195931c89bc54\nF test/snapshot3.test 41350216abc6c7da37113ad462259c070786e5ad70bdc8709daaed148b1b3a2c\nF test/snapshot4.test d4e9347ef2fcabc491fc893506c7bbaf334da3be111d6eb4f3a97cc623b78322\nF test/snapshot_fault.test 129234ceb9b26a0e1000e8563a16e790f5c1412354e70749cbd78c3d5d07d60a\nF test/snapshot_up.test 77dc7853bfb2b4fa249f76e1714cfa1e596826165d9ef22c06ac3a0b7b778d9a\nF test/soak.test 18944cf21b94a7fe0df02016a6ee1e9632bc4e8d095a0cb49d95e15d5cca2d5c\nF test/softheap1.test 843cd84db9891b2d01b9ab64cef3e9020f98d087\nF test/sort.test f86751134159abb5e5fd4381a0d7038c91013638cd1e3fa1d7850901f6df6196\nF test/sort2.test 2f8c66402a03adebe77ce7aafca129fbf32df27d6c9b8f7a9f1b958e39f56da8\nF test/sort3.test 1480ed7c4c157682542224e05e3b75faf4a149e5\nF test/sort4.test c7a88629aecc8eec3c919eda54b221da5cf7a1b48f0cd372e7e832188d6737d8\nF test/sort5.test 6b43ae0e2169b5ceed441844492e55ba7f1ae0790528395ddf7888ab3094525d\nF test/sorterref.test 9a606c86a4c682db5eeaaefa0565b52102778db53e48ca7101cd4f9ebcc0ad94\nF test/sortfault.test d4ccf606a0c77498e2beb542764fd9394acb4d66\nF test/speed1.test 0381cfd05e5e7ccfd5eb570976f9075c67ab3e34991a1addf80663b184395219\nF test/speed1p.explain d841e650a04728b39e6740296b852dccdca9b2cb\nF test/speed1p.test 7191cec2aaf8876317bec58cf9c0f3750ab8b9bc23fc8a4000b77da578c7aadc\nF test/speed2.test 53177056baf6556dcbdcf032bbdfc41c1aa74ded\nF test/speed3.test 694affeb9100526007436334cf7d08f3d74b85ef\nF test/speed4.test abc0ad3399dcf9703abed2fff8705e4f8e416715\nF test/speed4p.explain 6b5f104ebeb34a038b2f714150f51d01143e59aa\nF test/speed4p.test 377a0c48e5a92e0b11c1c5ebb1bc9d83a7312c922bc0cb05970ef5d6a96d1f0c\nF test/speedtest1.c cc503febbb8559d541a67d7a33d3d7bb8a2c8cbbfc89eb336e2e2bd6ad6a63ee\nF test/spellfix.test 951a6405d49d1a23d6b78027d3877b4a33eeb8221dcab5704b499755bb4f552e\nF test/spellfix2.test dfc8f519a3fc204cb2dfa8b4f29821ae90f6f8c3\nF test/spellfix3.test 0f9efaaa502a0e0a09848028518a6fb096c8ad33\nF test/spellfix4.test 51c7c26514ade169855c66bcf130bd5acfb4d7fd090cc624645ab275ae6a41fb\nF test/sqldiff1.test 1b7ab4f312442c5cc6b3a5f299fa8ca051416d1dd173cb1126fd51bf64f2c3fb\nF test/sqllimits1.test 408131e4975d61868711c83f101a56d4602313cc5cae88d3eee81c1da364fd89\nF test/sqllog.test 6af6cb0b09f4e44e1917e06ce85be7670302517a\nF test/starschema1.test a84205f97fe278a015ac39546c86b97228d22043af28f3a2ef809e8d5637ce1d\nF test/startup.c 1beb5ca66fcc0fce95c3444db9d1674f90fc605499a574ae2434dcfc10d22805\nF test/stat.test 123212a20ceb496893d5254a5f6c76442ce549fdc08d1702d8288a2bbaac8408\nF test/statfault.test 064f43379e4992b5221b7d9ac887c313b3191f85cce605d78e416fc4045da64e\nF test/stmt.test 54ed2cc0764bf3e48a058331813c3dbd19fc1d0827c3d8369914a5d8f564ec75\nF test/stmtrand.test 340e2ea4841c5cdc02d36e33739769c5d907ab529b12bb535407def0e413ca17\nF test/stmtvtab1.test 6873dfb24f8e79cbb5b799b95c2e4349060eb7a3b811982749a84b359468e2d5\nF test/strict1.test 4d2b492152b984fd7e8196d23eb88e2ccb0ef9e46ca2f96c2ce7147ceef9d168\nF test/strict2.test b22c7a98b5000aef937f1990776497f0e979b1a23bc4f63e2d53b00e59b20070\nF test/subjournal.test 8d4e2572c0ee9a15549f0d8e40863161295107e52f07a3e8012a2e1fdd093c49\nF test/subquery.test 903abf41049f8404256f7be24b3151328304a5b25162e17ab0079460237382fc\nF test/subquery2.test 90cf944b9de8204569cf656028391e4af1ccc8c0cc02d4ef38ee3be8de1ffb12\nF test/subselect.test 0966aa8e720224dbd6a5e769a3ec2a723e332303\nF test/substr.test a673e3763e247e9b5e497a6cacbaf3da2bd8ec8921c0677145c109f2e633f36b\nF test/subtype1.test 96fd2a59bfc845c955b5f339d23b37ef4d50de5f8a04acd1450a68605fa2e3e7\nF test/superlock.test 85256830339a6871ce36a2ef591c3f67716a701b5497788fb2068b90159c2442\nF test/swarmvtab.test 250231404fcac88f61a6c147bb0e3a118ed879278cd3ccb0ae2d3a729e1e8e26\nF test/swarmvtab2.test c948cb2fdfc5b01d85e8f6d6504854202dc1a0782ab2a0ed61538f27cbd0aa5c\nF test/swarmvtab3.test 41a3ab47cb7a834d4e5336425103b617410a67bb95d335ef536f887587ece073\nF test/swarmvtabfault.test 8a67a9f27c61073a47990829e92bc0c64420a807cb642b15a25f6c788210ed95\nF test/symlink.test 4368af0e213dd6e726a6240a16f2bb96a5a58f83f2d5d60652f27547b28cbf06\nF test/symlink2.test bf932ff7fe95c9dbb39d2a990df9098b0ea943233c97e40098e0a8d6b559a96f\nF test/sync.test 89539f4973c010eda5638407e71ca7fddbcd8e0594f4c9980229f804d4333092\nF test/sync2.test 8f9f7d4f6d5be8ca8941a8dadcc4299e558cb6a1ff653a9469146c7a76ef2039\nF test/syscall.test a067468b43b8cb2305e9f9fe414e5f40c875bb5d2cba5f00b8154396e95fcf37\nF test/sysfault.test c9f2b0d8d677558f74de750c75e12a5454719d04\nF test/tabfunc01.test 7be82bd50c7ede7f01b2dd17cd1b84f352c516078222d0b067d858f081e3f9a7\nF test/table.test 7862a00b58b5541511a26757ea9c5c7c3f8298766e98aa099deec703d9c0a8e0\nF test/tableapi.test ecbcc29c4ab62c1912c3717c48ea5c5e59f7d64e4a91034e6148bd2b82f177f4\nF test/tableopts.test dba698ba97251017b7c80d738c198d39ab747930\nF test/tclsqlite.test ad0bbd92edabe64cc91d990a0748142fe5ab962d74ac71fa3bfa94d50d2f4c87\nF test/tempdb.test 4cdaa23ddd8acb4d79cbb1b68ccdfd09b0537aaba909ca69a876157c2a2cbd08\nF test/tempdb2.test 353864e96fd3ae2f70773d0ffbf8b1fe48589b02c2ec05013b540879410c3440\nF test/tempfault.test 0c0d349c9a99bf5f374655742577f8712c647900\nF test/temptable.test d2c9b87a54147161bcd1822e30c1d1cd891e5b30\nF test/temptable2.test 76821347810ecc88203e6ef0dd6897b6036ac788e9dd3e6b04fd4d1631311a16\nF test/temptable3.test d11a0974e52b347e45ee54ef1923c91ed91e4637\nF test/temptrigger.test 38f0ca479b1822d3117069e014daabcaacefffcc\nF test/tester.tcl 7b44f1a9b9a2de8112695b908afc21dd9a68cd2d44e84b73f1b27b53492c0d59\nF test/testrunner.tcl 90ed8b6c2b26dc1f6af08aeb04670a5df86172f3d9828d8af000f972afa50061 x\nF test/testrunner_data.tcl ba4aeea28aa03cfa6fe7e57782ddecb7a7b91c3a0b3251583cb4f0ee002de6a6\nF test/thread001.test a0985c117eab62c0c65526e9fa5d1360dd1cac5b03bde223902763274ce21899\nF test/thread002.test c24c83408e35ba5a952a3638b7ac03ccdf1ce4409289c54a050ac4c5f1de7502\nF test/thread003.test ee4c9efc3b86a6a2767516a37bd64251272560a7\nF test/thread004.test f51dfc3936184aaf73ee85f315224baad272a87f\nF test/thread005.test 50d10b5684399676174bd96c94ad4250b1a2c8b6\nF test/thread1.test df115faa10a4ba1d456e9d4d9ec165016903eae4\nF test/thread2.test f35d2106452b77523b3a2b7d1dcde2e5ee8f9e46\nF test/thread3.test a12656a56cdf67acb6a2ff7638826c6d6a645f79909d86df521045ad31cf547d\nF test/thread_common.tcl b3b19a769fe30ef5537cdfa60acd49b78f771301627720d1add2d3bac77d9039\nF test/threadtest1.c 6029d9c5567db28e6dc908a0c63099c3ba6c383b\nF test/threadtest2.c a70a8e94bef23339d34226eb9521015ef99f4df8\nF test/threadtest3.c 655bff6c0895ec03f014126aa65e808fac9aae8c5a7a7da58a510cbe8b43b781\nF test/threadtest4.c c1e67136ceb6c7ec8184e56ac61db28f96bd2925\nF test/threadtest5.c 9b4d782c58d8915d7e955ff8051f3d03628bda0d33b82971ea8c0f2f2808c421\nF test/time-wordcount.sh 8e0b0f8109367827ad5d58f5cc849705731e4b90\nF test/timediff1.test d982b2b5f1b22f58380c5db94ea5b17518d50ad0c55583cf0ecfa0b176e20888\nF test/tkt-02a8e81d44.test 6c80d9c7514e2a42d4918bf87bf6bc54f379110c\nF test/tkt-18458b1a.test 6a62cb1ee50fa3c620da59e3a6f531eb38fceaf7e2166203816b724524e6f1d6\nF test/tkt-26ff0c2d1e.test c15bec890c4d226c0da2f35ff30f9e84c169cfef90e73a8cb5cec11d723dfa96\nF test/tkt-2a5629202f.test 0521bd25658428baa26665aa53ffed9367d33af2\nF test/tkt-2d1a5c67d.test 92bf2a2de5757d2d24ef554f8a6a38476a6735074e32dc28c775b5b9a23f96a3\nF test/tkt-2ea2425d34.test 1cf13e6f75d149b3209a0cb32927a82d3d79fb28\nF test/tkt-31338dca7e.test 6fb8807851964da0d24e942f2e19c7c705b9fb58\nF test/tkt-313723c356.test 4b306ad45c736cedf2f5221f6155b92143244b6d\nF test/tkt-385a5b56b9.test 81d7c8ef2d2a378323ba2190c1f02f91022fdff0d8d0b84c04954d02c85ef374\nF test/tkt-38cb5df375.test f3cc8671f1eb604d4ae9cf886ed4366bec656678\nF test/tkt-3998683a16.test 6d1d04d551ed1704eb3396ca87bb9ccc8c5c1eb7\nF test/tkt-3a77c9714e.test 90e3e8455ee945a4076d4c44062b8845708af24a880355328fe7008f2047c9f0\nF test/tkt-3fe897352e.test 27e26eb0f1811aeba4d65aba43a4c52e99da5e70\nF test/tkt-4a03edc4c8.test 91c0e135888cdc3d4eea82406a44b05c8c1648d0\nF test/tkt-4c86b126f2.test cbcc611becd0396890169ab23102dd70048bbc9a\nF test/tkt-4dd95f6943.test 3d0ce415d2ee15d3d564121960016b9c7be79407\nF test/tkt-4ef7e3cfca.test 3965ae11cc9cf6e334f9d7d3c1e20bf8d56254b1\nF test/tkt-54844eea3f.test a12b851128f46a695e4e378cca67409b9b8f5894\nF test/tkt-5d863f876e.test 726e76d725f6fe0eb2fc8a522b721b79807380ee\nF test/tkt-5e10420e8d.test 904d1687b3c06d43e5b3555bbcf6802e7c0ffd84\nF test/tkt-5ee23731f.test 9db6e1d7209dc0794948b260d6f82b2b1de83a9f\nF test/tkt-6bfb98dfc0.test 24780633627b5cfc0635a5500c2389ebfb563336\nF test/tkt-752e1646fc.test ea78d88d14fe9866bdd991c634483334639e13bf\nF test/tkt-78e04e52ea.test b731f2ab7d1c2482ac5152097da02ef4805a45147ba9498d3cd9da27072f34d1\nF test/tkt-7a31705a7e6.test 9e9c057b6a9497c8f7ba7b16871029414ccf6550e7345d9085d6d71c9a56bb6f\nF test/tkt-7bbfb7d442.test e87b59e620700b5a52ecd92f05d56686c1cad9e1aa17456eada55e0bb821b698\nF test/tkt-80ba201079.test 105a721e6aad0ae3c5946d7615d1e4d03f6145b8\nF test/tkt-80e031a00f.test 7c93af53f43527f50020983a4bcc39b077e77c7362d7af8e04a5fd155fe5e829\nF test/tkt-8454a207b9.test ead80b7a01438ca1436cee029694a96c821346cf1e24f06de12f8172e139ddbb\nF test/tkt-868145d012.test a5f941107ece6a64410ca4755c6329b7eb57a356\nF test/tkt-8c63ff0ec.test 258b7fc8d7e4e1cb5362c7d65c143528b9c4cbed\nF test/tkt-91e2e8ba6f.test 08c4f94ae07696b05c9b822da0b4e5337a2f54c5\nF test/tkt-99378177930f87bd.test 9d6cff39b50d062c813ae1cb0ebbd1b7acf81ecc23ae5d5215e5bb05667dc137\nF test/tkt-9a8b09f8e6.test b2ef151d0984b2ebf237760dbeaa50724e5a0667\nF test/tkt-9d68c883.test 16f7cb96781ba579bc2e19bb14b4ad609d9774b6\nF test/tkt-9f2eb3abac.test cb6123ac695a08b4454c3792fbe85108f67fabf8\nF test/tkt-a7b7803e.test 159ef554234fa1f9fb318c751b284bd1cf858da4\nF test/tkt-a7debbe0.test e295fa83cd4416a8ca37b354eb5fadefc5e81fb55253db538d35261fe9c95067\nF test/tkt-a8a0d2996a.test 002e1cde8fc30c39611b52cf981c88200b858765748556822da72e0d32fac73e\nF test/tkt-b1d3a2e531.test 8f7576e41ca179289ee1a8fee28386fd8e4b0550\nF test/tkt-b351d95f9.test d14a503c414c5c58fdde3e80f9a3cfef986498c0\nF test/tkt-b72787b1.test a95e8cdad0b98af1853ac7f0afd4ab27b77bf5f3\nF test/tkt-b75a9ca6b0.test dc6a853c242f7d0326564ae32e9e5eb462b5e8d2bc5b01ea3b18fd24f8e5894b\nF test/tkt-ba7cbfaedc.test b4c0deccc12aeb55cfdb57935b16b5d67c5a9877\nF test/tkt-bd484a090c.test e6af3e3a4242cd8f1c91c736364f09075d8e33e3b86f6492a1ee36278ea71b61\nF test/tkt-bdc6bbbb38.test fc38bb09bdd440e3513a1f5f98fc60a075182d7d\nF test/tkt-c48d99d690.test ba61977d62ab612fc515b3c488a6fbd6464a2447\nF test/tkt-c694113d5.test 82c461924ada5c14866c47e85535b0b0923ba16a2e907e370061a5ca77f65d77\nF test/tkt-cbd054fa6b.test 6ec9f1a5721fba74a83397683c50f472df68a0a749d193a537264eda3ad6d113\nF test/tkt-d11f09d36e.test d999b548fef885d1d1afa49a0e8544ecf436869d\nF test/tkt-d635236375.test 9d37e988b47d87505bc9445be0ca447002df5d09\nF test/tkt-d82e3f3721.test bcc0dfba658d15bab30fd4a9320c9e35d214ce30\nF test/tkt-f3e5abed55.test d5a0126118142d13e27f6ce9f4c47096e9321c00\nF test/tkt-f67b41381a.test 9120eab5e949969a29087e01bf57ac6a52b6c06c16be41091a74c2a863ffc660\nF test/tkt-f777251dc7a.test d1a8fc3eefb7a9e64d19ff24d5c8c94c34a632fb\nF test/tkt-f7b4edec.test a0d9cf5023af8bfc066e71128f325fd4831c6c6761cad35e451d35c8492f5cf1\nF test/tkt-f973c7ac31.test 28ef85c7f015477916795246d8286aeda39d4ead\nF test/tkt-fa7bf5ec.test 9102dfea58aa371d78969da735f9392c57e2e035\nF test/tkt-fc62af4523.test 72825d3febdedcd5593a27989fc05accdbfc2bb4\nF test/tkt-fc7bd6358f.test 634bb4af7d661e82d6b61b80c86727bad698e08f\nF test/tkt1435.test f8c52c41de6e5ca02f1845f3a46e18e25cadac00\nF test/tkt1443.test bacc311da5c96a227bf8c167e77a30c99f8e8368\nF test/tkt1444.test a9d72f9e942708bd82dde6c707da61c489e213e9\nF test/tkt1449.test 93584a449752d52b07d2cfc280a69842b6e16ed5\nF test/tkt1473.test 9d000af3e11a4450d4c596f5e58b4b0d24eb0f8b\nF test/tkt1501.test 2064f98e00871848af4b2f517e46c1a7fb2e32db\nF test/tkt1512.test a1df1f66caf0b9122d6220c15dcee230298c2c2f\nF test/tkt1514.test ddef38e34fea72eb1ab935ded9f17a3fb71dd9df\nF test/tkt1536.test 83ff7a7b6e248016f8d682d4f7a4ae114070d466\nF test/tkt1537.test e3a14332de9770be8ff14bd15c19a49cbec10808\nF test/tkt1567.test 52f329386ac77e59260d4af1c58490d61377db20\nF test/tkt1644.test 80b6a2bb17885f3cf1cb886d97cdad13232bb869\nF test/tkt1667.test 4700d931ed19ea3983e8e703becb28079250b460\nF test/tkt1873.test 0e1b8c023050a430c2525179ed4022ddc7c31264\nF test/tkt2141.test f543d96f50d5a5dc0bc744f7db74ea166720ce46\nF test/tkt2192.test ff40157e5f42e65f844255d220fc6b290470942f\nF test/tkt2213.test a9702175601a57b61aba095a233b001d6f362474\nF test/tkt2251.test 5aab8c7898cd2df2a68fe19289cc29e8f5cf8c82\nF test/tkt2285.test cca17be61cf600b397188e77e7143844d2b977e9\nF test/tkt2332.test fc955609b958ca86dfa102832243370a0cc84070\nF test/tkt2339.test 73bd17818924cd2ac442e5fd9916b58565739450\nF test/tkt2391.test ab7a11be7402da8b51a5be603425367aa0684567\nF test/tkt2409.test be0d60e7d283f639dccea4b0b5e1cd3a4851fb5b\nF test/tkt2450.test 77ed94863f2049c1420288ddfea2d41e5e0971d6\nF test/tkt2565.test 8be666e927cb207aae88188f31c331870878b650\nF test/tkt2640.test 28134f5d1e05658ef182520cf0b680fa3de5211b\nF test/tkt2643.test 3f3ebb743da00d4fed4fcf6daed92a0e18e57813\nF test/tkt2686.test 6ee01c9b9e9c48f6d3a1fdd553b1cc4258f903d6\nF test/tkt2767.test 569000d842678f9cf2db7e0d1b27cbc9011381b0\nF test/tkt2817.test f31839e01f4243cff7399ef654d3af3558cb8d8d\nF test/tkt2820.test 39940276b3436d125deb7d8ebeee053e4cf13213\nF test/tkt2822.test f391776423a7c0d0949edfce375708bfb0f3141e\nF test/tkt2832.test a9b0b74a02dca166a04d9e37739c414b10929caa\nF test/tkt2854.test 47a2ae03bf36812f675ec06806a7b958e0de75312261dd8280c187f4a4a8281a\nF test/tkt2920.test a8737380e4ae6424e00c0273dc12775704efbebf\nF test/tkt2927.test 4752868b9eeeb07a217f7f19f4cbaac98d6d086d\nF test/tkt2942.test c5c87d179799ca6d1fbe83c815510b87cd5ec7ce\nF test/tkt3080.test 1bca7579260920a66b4dd7e196e807c0f25ff804\nF test/tkt3093.test fbdbc5b4969244ad11f540759003e361fcaf391f\nF test/tkt3121.test 536df66a02838c26a12fe98639354ca1290ca68b\nF test/tkt3201.test f1500ccecc0d578dc4cde7d3242008297c4d59b3\nF test/tkt3292.test 7bad4423cf5eb075dbb58511d66d46fe816744754c9f0050ae60157f71a4fca7\nF test/tkt3298.test 20fd8773b825cb602e033aa04f8602e1ebdcd93c\nF test/tkt3334.test 9756631e3c4aa3c416362c279e3c0953a83b7ca8274cb81a13264bb56296d8b0\nF test/tkt3346.test 6f67c3ed7db94dfc5df4f5f0b63809a1f611e01a\nF test/tkt3357.test 77c37c6482b526fe89941ce951c22d011f5922ed\nF test/tkt3419.test 1bbf36d7ea03b638c15804251287c2391f5c1f6b\nF test/tkt3424.test 61f831bd2b071bd128fa5d00fbda57e656ca5812\nF test/tkt3442.test c9d95b4c8f4f35a51b523f35d2afd0ce124937812af296545ad551ff763504fd\nF test/tkt3457.test 5b9cc2b6cbbf896e9b973db83f6520f43f326f4d08604372a7b0379625e28412\nF test/tkt3461.test 228ea328a5a21e8663f80ee3d212a6ad92549a19\nF test/tkt3493.test 1686cbde85f8721fc1bdc0ee72f2ef2f63139218\nF test/tkt3508.test d75704db9501625c7f7deec119fcaf1696aefb7d\nF test/tkt3522.test 22ce2ebbcb04a6be56c0977d405c207967318fd6\nF test/tkt3527.test 1a6a48441b560bdc53aec581a868eb576234874d\nF test/tkt3541.test 5dc257bde9bc833ab9cc6844bf170b998dbb950a\nF test/tkt3554.test f599967f279077bace39220cbe76085c7b423725\nF test/tkt3581.test 1966b7193f1e3f14951cce8c66907ae69454e9a3\nF test/tkt35xx.test f38c1b03713179d414969187c941466e44945b35\nF test/tkt3630.test 9a934c58c259f89a0ae6bb6bb846c56285a6fd0f\nF test/tkt3718.test 3b59dcb5c4e7754dacd91e7fd353a61492cc402a\nF test/tkt3731.test 0c5f4cbffe102d43c3b2188af91a9e36348f974b\nF test/tkt3757.test 10cd679a88675c880533083fc79ac04324525595\nF test/tkt3761.test b95ea9c98f21cf91325f18a984887e62caceab33\nF test/tkt3762.test 4d439ff7abdc8d9323150269d182c37c2d514576\nF test/tkt3773.test 7bca904d2a647a6a4a291bd86d7fd7c73855b789\nF test/tkt3791.test a6624b9a80b216a26cf473607f42f3e51898c267\nF test/tkt3793.test 9ee9c6f300adce634e8990a131ad5e20e22241643a1240c6b372b351205ef7cb\nF test/tkt3810.test 3a3be9965d1861bd84019875851ad5ea90fd8d76b638361514a36a48ea53191b\nF test/tkt3824.test 150aa00bb6220672e5f0eb14dc8eaa36750425f0\nF test/tkt3832.test 2300d10d57562b89875b72148338ac3e14f8847d\nF test/tkt3838.test 292e72489101cd1320d7278dc111c173ebf334d4\nF test/tkt3841.test c4be3870f777f82aa788a588e40b4fb6627c3874e19f336d0d92894f929ffbfe\nF test/tkt3871.test d921703d07c68f4fd5312073215a17fa34b0401d\nF test/tkt3879.test 2ad5bef2c87e9991ce941e054c31abe26ef7fb90\nF test/tkt3911.test 74cd324f3ba653040cc6d94cc4857b290d12d633\nF test/tkt3918.test ea78bf164e4d55cbde0d83c671ef6fbe930a0032\nF test/tkt3922.test f26be40ab4fe6c00795629bd2006d96e270d9b1a\nF test/tkt3929.test cdf67acf5aa936ec4ffead81db87f8a71fe40e59\nF test/tkt3935.test 1ffcfffc148df51c8a01d1b3efae2d6c44cbeb0af1e0c5b88f4afe9a86d4ddb6\nF test/tkt3992.test f3e7d548ac26f763b47bc0f750da3d03c81071da\nF test/tkt3997.test a335fa41ca3985660a139df7b734a26ef53284bd\nF test/tkt4018.test 18dbc6617f7a4b90e938d1bd6d26ad18daafaf08\nF test/tokenize.test ce430a7aed48fc98301611429595883fdfcab5d7\nF test/tpch01.test 4479008f85f6f8f25f7ab2cb305d665752b4727fa28a8df3d8e0ad46520c62ff\nF test/trace.test a659a9862957f4789e37a92b3bf6d2caf5c86b02cdeefc41e850ae53acf6992a\nF test/trace2.test f5cb67ad3bc09e0c58e8cca78dfd0b5639259983\nF test/trace3.test 4f418ed30d15d9d17dcf13a17f0bd99a92e3038e038798e35db7525f82f4c281\nF test/trans.test 45f6f9ab6f66a7b5744f1caac06b558f95da62501916906cf55586a896f9f439\nF test/trans2.test 62bd045bfc7a1c14c5ba83ba64d21ade31583f76\nF test/trans3.test 91a100e5412b488e22a655fe423a14c26403ab94\nF test/transitive1.test f8ee983600b33d167da1885657f064aec404e1c0d0bc8765fdf163f4c749237a\nF test/trigger1.test 2834f8830a1ae338d95c2e3ea0c2a7bc4cda126cdeb715004cf0fd071892e44f\nF test/trigger2.test 30fcb3a6aa6782020d47968735ee6086ed795f73a7affa9406c8d5a36e7b5265\nF test/trigger3.test aa640bb2bbb03edd5ff69c055117ea088f121945\nF test/trigger4.test 74700b76ebf3947b2f7a92405141eb2cf2a5d359\nF test/trigger5.test 619391a3e9fc194081d22cefd830d811e7badf83\nF test/trigger6.test 0e411654f122552da6590f0b4e6f781048a4a9b9\nF test/trigger7.test e7ce54bfda67a88d778aea42544e151c465547a7e617127b6914c2221a6d53c1\nF test/trigger8.test 30cb0530bd7c4728055420e3f739aa00412eafa4\nF test/trigger9.test 1724b595661da3dd3c8d79f0ebae818132a39e65c241bad2049f66952b1dc29d\nF test/triggerA.test 837be862d8721f903dba3f3ceff05b32e0bee5214cf6ea3da5fadf12d3650e9d\nF test/triggerB.test 56780c031b454abac2340dbb3b71ac5c56c3d7fe\nF test/triggerC.test 29f5a28d0fe39e6e2c01f6e1f53f08c0955170ae10a63ad023e33cb0a1682a51\nF test/triggerD.test 8e7f3921a92a5797d472732108109e44575fa650\nF test/triggerE.test 612969cb57a4ef792059ad6d01af0117e1ae862c283753ffcc9a6428642b22ee\nF test/triggerF.test 5d76f0a8c428ff87a4d5ed52da06f6096a2c787a1e21b846111dfac4123de3ad\nF test/triggerG.test 2b816093c91ba73c733cfa8aedcc210ad819d72a98b1da30768a3c56505233e9\nF test/triggerupfrom.test d1f9e56090408115c522bee626cc33a2f3370f627a5e341d832589d72e3aa271\nF test/trustschema1.test d2996bb284859c99956ac706160eab9f086919da738d19bfef3ac431cce8fd47\nF test/tt3_checkpoint.c ac7ca661d739280c89d9c253897df64a59a49369bd1247207ac0f655b622579d\nF test/tt3_index.c 39eec10a35f57672225be4d182862152896dee4a\nF test/tt3_lookaside1.c 0377e202c3c2a50d688cb65ba203afeda6fafeb9\nF test/tt3_shared.c b37d22defc944a2ac4c91c927fd06c1d48cd51e2ce9d004fe868625bd2399f93\nF test/tt3_stress.c f9a769ca8b026ecc76ee93ca8c9700a5619f8e51c581107c4053ba6ac97f616f\nF test/tt3_vacuum.c 71b254cde1fc49d6c8c44efd54f4668f3e57d7b3a8f4601ade069f75a999ba39\nF test/types.test bf816ce73c7dfcfe26b700c19f97ef4050d194ff\nF test/types2.test 1aeb81976841a91eef292723649b5c4fe3bc3cac\nF test/types3.test c60e89c4d6babe44b23a2ea0090f3044e549403b20648b1c6bb65a69fea5f1ed\nF test/unhex.test b7f1b806207cb77fa31c3e434fe92fba524464e3e9356809bfcc28f15af1a8b7\nF test/unionall.test 04d30726c5056f84f92b3a12bf8d8a1dbbe807d1ddc8af95def09e6ef2dd91e3\nF test/unionall2.test 71e8fa08d5699d50dc9f9dc0c9799c2e7a6bb7931a330d369307a4df7f157fa1\nF test/unionallfault.test 652bfbb630e6c43135965dc1e8f0a9a791da83aec885d626a632fe1909c56f73\nF test/unionvtab.test e1704ab1b4c1bb3ffc9da4681f8e85a0b909fd80b937984fc94b27415ac8e5a4\nF test/unionvtabfault.test e8759f3d14fb938ce9657e2342db34aeac0fb9bc1692b0d1ebb0069630151d06\nF test/unique.test 93f8b2ef5ea51b9495f8d6493429b1fd0f465264\nF test/unique2.test 3674e9f2a3f1fbbfd4772ac74b7a97090d0f77d2\nF test/unixexcl.test d936ba2b06794018e136418addd59a2354eeae97\nF test/unordered.test 0edaf3411d300693bca595897c5201421c6c5ec787990a1dfe2f7f60ae93f1e2\nF test/update.test 85d3f46d0863033370bd881b1097f5694369a8730e53c5f85d96f32b7b310b47\nF test/update2.test 67455bc61fcbcf96923c45b3bc4f87bc72be7d67575ad35f134906148c7b06d3\nF test/upfrom1.tcl 8859d9d437f03b44174c4524a7a734a391fd4526fcff65be08285dafc9dc9041\nF test/upfrom1.test 8cb06689e99cd707d884faa16da0e8eb26ff658bb01c47ddf72fadade666e6e1\nF test/upfrom2.test 66f3ebf721b3cebd922faee5c386bf244f816d416b57c000753ff51af62328a1\nF test/upfrom3.test 6130f24ebf97f5ea865e5d2a14a2d543fe5428a62e87cc60f62d875e45c1f5f0\nF test/upfrom4.test 78f742a6577c91a7a55c64edb8811004e7c6aa99b8d57b2320f70a918c357807\nF test/upfromfault.test 3a10075a0043f0c4fad6614b2c371f88a8ba5a4acab68b907438413865d6a8d6\nF test/upsert1.test beba4316fbd4b7b9d76784313f6129a548cfe7abea04d46db33e2efce1ab0ac2\nF test/upsert2.test 720e94d09f7362a282bc69b3c6b83d51daeaaf0440eb4920a08b86518b8c7496\nF test/upsert3.test 88d7d590a1948a9cb6eac1b54b0642f67a9f35a1fc0f19b200e97d5d39e3179c\nF test/upsert4.test 25d2a1da92f149331ae0c51ca6e3eee78189577585eab92de149900d62994fa5\nF test/upsert5.test 9953b180d02d1369cdbb6c73c900834e5fef8cb78e98e07511c8762ec21cc176\nF test/upsertfault.test f21ca47740841fdb4d61acfa7b17646d773e67724fe8c185b71c018db8a94b35\nF test/uri.test c1abaaaa28e9422d61e5f3f9cbc8ef993ec49fe802f581520731708561d49384\nF test/uri2.test 9d3ba7a53ee167572d53a298ee4a5d38ec4a8fb7\nF test/utf16align.test 9fde0bb5d3a821594aa68c6829ab9c5453a084384137ebb9f6153e2d678039da\nF test/vacuum-into.test 77845cee98770c416dae9b0da6bb3229753861f2da65c11b4f9715d081712d8a\nF test/vacuum.test ce91c39f7f91a4273bf620efad21086b5aa6ef1d\nF test/vacuum2.test 9fd45ce6ce29f5614c249e03938d3567c06a9e772d4f155949f8eafe2d8af520\nF test/vacuum3.test d9d9a04ee58c485b94694fd4f68cffaba49c32234fdefe1ac1a622c5e17d4ce3\nF test/vacuum4.test 7ea76b769fffeb41f925303b04cbcf5a5bbeabe55e4c60ae754ff24eeeb7c010\nF test/vacuum5.test 263b144d537e92ad8e9ca8a73cc6e1583f41cfd0dda9432b87f7806174a2f48c\nF test/vacuum6.test b137b04bf3392d3f5c3b8fda0ce85a6775a70ca112f6559f74ff52dc9ce042fd\nF test/vacuummem.test 4b30f5b95a9ff86e9d5c20741e50a898b2dc10b0962a3211571eb165357003fb\nF test/values.test 0eda08a6ce6545f1ab012dff4cc72a7dd0fee2510f42444136bb2b2b5ed84bc0\nF test/valuesfault.test 2ef23ed965e3bd08e268cdc38a0d11653390ddbbe1e8e2e98d16f55edd30f6e8\nF test/varint.test bbce22cda8fc4d135bcc2b589574be8410614e62\nF test/veryquick.test 57ab846bacf7b90cf4e9a672721ea5c5b669b661\nF test/view.test 3c23d7a068e9e4a0c4e6907498042772adea725f0630c3d9638ffd4e5a08b92b\nF test/view2.test db32c8138b5b556f610b35dfddd38c5a58a292f07fda5281eedb0851b2672679\nF test/view3.test ad8a8290ee2b55ff6ce66c9ef1ce3f1e47926273a3814e1c425293e128a95456\nF test/vt02.c 5b44ac67b1a283fedecf2d6e2ceda61e7a157f01d44dcb4490dcb1e87d057060\nF test/vtab1.test 09a72330d0f31eda2ffaa828b06a6b917fb86250ee72de0301570af725774c07\nF test/vtab2.test 14d4ab26cee13ba6cf5c5601b158e4f57552d3b055cdd9406cf7f711e9c84082\nF test/vtab3.test b45f47d20f225ccc9c28dc915d92740c2dee311e\nF test/vtab4.test 8e73ed268f3d596bc3590f45fc948fb40f28e9c3\nF test/vtab5.test 889f444970393c73f1e077e2bdc5d845e157a391\nF test/vtab6.test 2525a2fe2e44ccbed1d758cb2977fb8ab8f07d5312ed8d8799d3529647d11f2f\nF test/vtab7.test 70c6f4a1d6177144a8236e4172d5fba92e683440374664ad1f04851fbb335d3c\nF test/vtab8.test e19fa4a538fcd1bb66c22825fa8f71618fb13583\nF test/vtab9.test ea58d2b95d61955f87226381716b2d0b1d4e4f9b\nF test/vtabA.test 325a77e7f0f80aa78ab388875c0ad6fb853acc6ac54d85514650b0ae15da24ff\nF test/vtabB.test 04df5dc531b9f44d9ca65b9c1b79f12b5922a796\nF test/vtabC.test 4528f459a13136f982e75614d120aef165f17292\nF test/vtabD.test 05b3f1d77117271671089e48719524b676842e96\nF test/vtabE.test 2a143fe75a11275781d1fd1988d86b66a3f69cb98f4add62e3da8fd0f637b45f\nF test/vtabF.test 1918844c7c902f6a16c8dacf1ec8f84886d6e78b\nF test/vtabH.test 8e338acba32207085b6fe9cb2a58f7b408e74c8e1a2964cbdaca903ac82213cc\nF test/vtabI.test 751b07636700dbdea328e4265b6077ccd6811a3f\nF test/vtabJ.test a6aef49d558af90fae10565b29501f82a95781cb4f797f2d13e2d19f9b6bc77b\nF test/vtabK.test 13293177528fada1235c0112db0d187d754af1355c5a39371abd365104e3afbf\nF test/vtabL.test c7b7f537978005d063fa2f53a3cd5a46ecf651ecd19970cb9ed4203698398deb\nF test/vtab_alter.test 736e66fb5ec7b4fee58229aa3ada2f27ec58bc58c00edae4836890c3784c6783\nF test/vtab_err.test dcc8b7b9cb67522b3fe7a272c73856829dae4ab7fdb30399aea1b6981bda2b65\nF test/vtab_shared.test 5253bff2355a9a3f014c15337da7e177ab0ef8ad\nF test/vtabdistinct.test 7688f0889358f849fd60bbfde1ded38b014b18066076d4bfbb75395804dfe072\nF test/vtabdrop.test 65d4cf6722972e5499bdaf0c0d70ee3b8133944a4e4bc31862563f32a7edca12\nF test/vtabrhs1.test 9b5ecbc74a689500c33a4b2b36761f9bcc22fcc4e3f9d21066ee0c9c74cf5f6c\nF test/wal.test 519c550255c78f55959e9159b93ebbfad2b4e9f36f5b76284da41f572f9d27da\nF test/wal2.test e89ca97593b5e92849039f6b68ce1719a853ef20fa22c669ec1ac452fbc31cab\nF test/wal3.test 5de023bb862fd1eb9d2ad26fa8d9c43abb5370582e5b08b2ae0d6f93661bc310\nF test/wal4.test 4744e155cd6299c6bd99d3eab1c82f77db9cdb3c\nF test/wal5.test 9c11da7aeccd83a46d79a556ad11a18d3cb15aa9\nF test/wal6.test b602704e4b066199bc89d91ca9000f335dcf4572\nF test/wal64k.test 2a525c0f45d709bae3765c71045ccec5df7d100ccbd3a7860fdba46c9addb965\nF test/wal7.test 2ae8f427d240099cc4b2dfef63cff44e2a68a1bd\nF test/wal8.test d9df3fba4caad5854ed69ed673c68482514203c8\nF test/wal9.test 378e76a9ad09cd9bee06c172ad3547b0129a6750\nF test/wal_common.tcl 204d1721ac13c5e0c7fae6380315b5ab7f4e8423f580d826c5e9df1995cb018d\nF test/walbak.test 018d4e5a3d45c6298d11b99f09a8ef6876527946\nF test/walbig.test f437473a16cfb314867c6b5d1dbcd519e73e3434\nF test/walblock.test be48f3a75eff0b4456209f26b3ce186c2015497d\nF test/walcksum.test ba02b4fe6d22cb42e57a323003cbae62f77a740983e1355b2b520e019ae261c7\nF test/walcrash.test 21038858cc552077b0522f50b0fa87e38139306a\nF test/walcrash2.test a0edab4e5390f03b99a790de89aad15d6ec70b36\nF test/walcrash3.test e426aa58122d20f2b9fbe9a507f9eb8cab85b8af\nF test/walcrash4.test e7b6e7639a950a0cca8e210e248c8dad4d63bf20\nF test/walfault.test 09b8ad7e52d2f54bce50e31aa7ea51412bb9f70ac13c74e669ddcd8b48b0d98d\nF test/walfault2.test e039ac66c78d5561683cacde04097213cdad3b58e2b3f3fe1112862217bfd915\nF test/walhook.test ed00a40ba7255da22d6b66433ab61fab16a63483\nF test/walmode.test cd6e7cff618eaaa5910ce57c3657aa50110397f86213886a2400afb9bfec7b7b\nF test/walnoshm.test 84ca10c544632a756467336b7c3b864d493ee496\nF test/waloverwrite.test dad2f26567f1b45174e54fbf9a8dc1cb876a7f03\nF test/walpersist.test 8d78a1ec91299163451417b451a2bac3481f8eb9f455b1ca507a6625c927ca6e\nF test/walprotocol.test 1b3f922125e341703f6e946d77fdc564d38fb3e07a9385cfdc6c99cac1ecf878\nF test/walprotocol2.test 7d3b6b4bf0b12f8007121b1e6ef714bc99101fb3b48e46371df1db868eebc131\nF test/walro.test cb438d05ba0d191f10b688e39c4f0cd5b71569a1d1f4440e5bdf3c6880e08c20\nF test/walro2.test 33955a6fd874dd9724005e17f77fef89d334b3171454a1256fe4941a96766cdc\nF test/walrofault.test c70cb6e308c443867701856cce92ad8288cd99488fa52afab77cca6cfd51af68\nF test/walseh1.test bae700eb99519b6d5cd3f893c04759accc5a59c391d4189fe4dd6995a533442b\nF test/walsetlk.test 34c901443b31ab720afc463f5b236c86ca5c4134402573dce91aa0761de8db5a\nF test/walshared.test 42e3808582504878af237ea02c42ca793e8a0efaa19df7df26ac573370dbc7a3\nF test/walslow.test 0c51843836c9dcf40a5ac05aa781bfb977b396ee2c872d92bd48b79d5dd9aa23\nF test/walthread.test 14b20fcfa6ae152f5d8e12f5dc8a8a724b7ef189f5d8ef1e2ceab79f2af51747\nF test/walvfs.test e1a6ad0f3c78e98b55c3d5f0889cf366cc0d0a1cb2bccb44ac9ec67384adc4a1\nF test/where.test 59abb854eee24f166b5f7ba9d17eb250abc59ce0a66c48912ffb10763648196d\nF test/where2.test 03c21a11e7b90e2845fc3c8b4002fc44cc2797fa74c86ee47d70bd7ea4f29ed6\nF test/where3.test 4ccb156ae33de86414a52775a6f590a9d60ba2cbc7a93a24fa331b7bcf5b6030\nF test/where4.test 4a371bfcc607f41d233701bdec33ac2972908ba8\nF test/where5.test fdf66f96d29a064b63eb543e28da4dfdccd81ad2\nF test/where6.test 5da5a98cec820d488e82708301b96cb8c18a258b\nF test/where7.test 15041c7a5838f3bac98f3fb933709674a0b59367664e88fafaf105ff7416eb07\nF test/where8.test 461ca40265ed996a6305da99bb024b0e41602bb586acf544c08f95922358e49f\nF test/where9.test 2db942671a002621eff4f713e347bb25243295f79d8990297cd160bebcfde3f7\nF test/whereA.test 9d1077b117f1b68d5f739d94f36956c36cf995eb87bb19b77b2e81af020edd20\nF test/whereB.test 0def95db3bdec220a731c7e4bec5930327c1d8c5\nF test/whereC.test cae295158703cb3fc23bf1a108a9ab730efff0f6\nF test/whereD.test c1c335e914e28b122e000e9310f02d2be83e1c9dbca2e29f46bd732703944d1b\nF test/whereE.test 7a727b5d5b6bc8fa4cef5206e90cc0363e55ca7f0566f6fbad0206e43170f59e\nF test/whereF.test 926b65519608e3f2aa28720822b9154fb5c7b13519dd78194f434a511ab3dac5\nF test/whereG.test 649d5ad02a87a76ec2ac8de9441e2c83a4dd0f29e459a31215c0533788c6bf07\nF test/whereH.test e4b07f7a3c2f5d31195cd33710054c78667573b2\nF test/whereI.test c4bb7e2ca56d49bd8ab5c7bd085b8b83e353922b46904d68aefb3c7468643581\nF test/whereJ.test fc05e374cc9f2dc204148d6c06822c380ad388895fe97a6d335b94a26a08aecf\nF test/whereK.test 0270ab7f04ba5436fb9156d31d642a1c82727f4c4bfe5ba90d435c78cf44684a\nF test/whereL.test 438a397fa883b77bb6361c08a8befa41b52e9cfbe15a2a43715d122f8cfa8649\nF test/whereM.test 0dbc9998783458ddcf3cc078ca7c2951d8b2677d472ecf0028f449ed327c0250\nF test/whereN.test 63a3584b71acfb6963416de82f26c6b1644abc5ca6080c76546b9246734c8803\nF test/wherefault.test 6cf2a9c5712952d463d3f45ebee7f6caf400984df51a195d884cfb7eb0e837a7\nF test/wherelfault.test 9012e4ef5259058b771606616bd007af5d154e64cc25fa9fd4170f6411db44e3\nF test/wherelimit.test afb46397c6d7e964e6e294ba3569864a0c570fe3807afc634236c2b752372f31\nF test/wherelimit2.test b9e4bfe7b4d7c2f85f99cf2bd2c51369378d04b1f3d1b60557423752003bfd90\nF test/wherelimit3.test 22d73e046870cf8bbe15573eda6b432b07ebe64a88711f9f849c6b3667c1fae6\nF test/widetab1.test c296a98e123762de79917350e45fa33fdf88577a2571eb3a64c8bf7e44ef74d1\nF test/win32heap.test 10fd891266bd00af68671e702317726375e5407561d859be1aa04696f2aeee74\nF test/win32lock.test e0924eb8daac02bf80e9da88930747bd44dd9b230b7759fed927b1655b467c9c\nF test/win32longpath.test 304006024ca47104bf5a7415ef31ca83ecfc29351af202baf8588b880cffc116\nF test/win32nolock.test ac4f08811a562e45a5755e661f45ca85892bdbbc\nF test/window1.test 79dc3b9a2226f622d7e104a1fc750d1c4c3c08d6147b59085bdbe05352947ffa\nF test/window2.tcl 492c125fa550cda1dd3555768a2303b3effbeceee215293adf8871efc25f1476\nF test/window2.test e466a88bd626d66edc3d352d7d7e1d5531e0079b549ba44efb029d1fbff9fd3c\nF test/window3.tcl acea6e86a4324a210fd608d06741010ca83ded9fde438341cb978c49928faf03\nF test/window3.test 330733bcca73aba4ddae7a1011f2a2120ef7a0c68d8155854e08677417b8dbd0\nF test/window4.tcl 6f85307eb67242b654d051f7da32a996a66aee039a09c5ae358541aa61720742\nF test/window4.test fbead87f681400ac07ef3555e0488b544a47d35491f8bf09a7474b6f76ce9b4e\nF test/window5.test d328dd18221217c49c144181975eea17339eaeaf0e9aa558cee3afb84652821e\nF test/window6.test 311de885bd7e453134fa6747680bfb4a1be87c91720bf58703db945891e7d30b\nF test/window7.tcl 6a1210f05d40ec89c22960213a22cd3f98d4e2f2eb20646c83c8c30d4d76108f\nF test/window7.test 1d31276961ae7801edc72173edaf7593e3cbc79c06d1f1f09e20d8418af403cd\nF test/window8.tcl c57364e64d816f6e26df60437e1202e2c1031c7b818a1a67535d1006862a026a\nF test/window8.test 3d931e58802b8ab8063da00f0cf30aa3351640238a952c0efb5a129e2349a4bb\nF test/window9.test 7b98a7916dd87763ea35f56ea023e3b29e99744582204ccf2937a3bac411cd4d\nF test/windowA.test 6d63dc1260daa17141a55007600581778523a8b420629f1282d2acfc36af23be\nF test/windowB.test aad7c31739999f68a98a813cfd78390918fc70f56d2d925317a1523cab548ecf\nF test/windowC.test 6fd75f5bb2f1343d34e470e36e68f0ff638d8a42f6aa7d99471261b31a0d42f2\nF test/windowD.test 65cf5a765fb8072450e8a0de2979ce7f09a38d87724fe1280c6444073e3da49b\nF test/windowE.test d045a5fbaaf50ecac9483e1249dd317ba4f9d189c405a730ba6effdefb87b94f\nF test/windowerr.tcl f5acd6fbc210d7b5546c0e879d157888455cd4a17a1d3f28f07c1c8a387019e0\nF test/windowerr.test a8b752402109c15aa1c5efe1b93ccb0ce1ef84fa964ae1cd6684dd0b3cc1819b\nF test/windowfault.test 15094c1529424e62f798bc679e3fe9dfab6e8ba2f7dfe8c923b6248c31660a7c\nF test/windowpushd.test c420e2265f0e09a0e798d0513a660d71b51602088d81b3dbd038918ee1339dcc\nF test/with1.test b93833890e5d2a368e78747f124503a0159aa029b98e9ed4795ebf630b2efd3d\nF test/with2.test 181674a6cc86a601ca2ac052741cdfad5b529e07e870435d2f6cdb92d589ff17\nF test/with3.test e30369ea27aa27eb1bda4c5e510c8a9f782c8afd2ab99d1a02b8a7f25a5d3e65\nF test/with4.test 257be66c0c67fee1defbbac0f685c3465e2cad037f21ce65f23f86084f198205\nF test/with5.test 6248213c41fab36290b5b73aa3f937309dfba337004d9d8434c3fabc8c7d4be8\nF test/with6.test 9ff3503c3ff7cd459dc4852a02aaefa998dccace53f4142a0eb726174ad5984a\nF test/withM.test 693b61765f2b387b5e3e24a4536e2e82de15ff64\nF test/without_rowid1.test a5210b8770dc4736bca4e74bc96588f43025ad03ad6a80f885afd36d9890e217\nF test/without_rowid2.test af260339f79d13cb220288b67cd287fbcf81ad99\nF test/without_rowid3.test 39ab0dd773eaa62e59b17093f875327630f54c4145458f6d2b053d68d4b2f67b\nF test/without_rowid4.test 4e08bcbaee0399f35d58b5581881e7a6243d458a\nF test/without_rowid5.test f14298eb5ac8013894b75141c3f4f5f325a6ad0eded55516eef72c49e60a67cb\nF test/without_rowid6.test efbd7add62c59bf5ca97bf8da674e734e6a70ef979234e816166824b4d258f68\nF test/without_rowid7.test d7c59a93d726b55812d620f8f284e01904a5b85f9ee9eea8f2f68571a5e8c40e\nF test/wordcount.c d721a4b6fae93e6e33449700bce1686bc23257c27425bc3ef1599dc912adec66\nF test/writecrash.test f1da7f7adfe8d7f09ea79b42e5ca6dcc41102f27f8e334ad71539501ddd910cc\nF test/zeroblob.test 7b74cefc7b281dfa2b07cd237987fbe94b4a2037a7771e9e83f2d5f608b1d99e\nF test/zeroblobfault.test 861d8191a0d944dfebb3cb4d2c5b4e46a5a119eaec5a63dd996c2389f8063441\nF test/zerodamage.test 9c41628db7e8d9e8a0181e59ea5f189df311a9f6ce99cc376dc461f66db6f8dc\nF test/zipfile.test a36327c5697a03150a313ba06ab45842facef8b0c21be19d73a3a4fee58bc54c\nF test/zipfile2.test 6df5f5ef9d247756f7200066f43e7f3f52cffff47f0c02cbefe4ce9c3284cb10\nF test/zipfilefault.test 44d4d7a7f7cca7521d569d7f71026b241d65a6b1757aa409c1a168827edbbc2c\nF tool/GetFile.cs 47852aa0d806fe47ed1ac5138bdce7f000fe87aaa7f28107d0cb1e26682aeb44\nF tool/GetTclKit.bat d84033c6a93dfe735d247f48ba00292a1cc284dcf69963e5e672444e04534bbf\nF tool/Replace.cs 02c67258801c2fb5f63231e0ac0f220b4b36ba91\nF tool/build-all-msvc.bat c817b716e0edeecaf265a6775b63e5f45c34a6544f1d4114a222701ed5ac79ab x\nF tool/build-shell.sh 369c4b171cc877ad974fef691e4da782b4c1e99fe8f4361316c735f64d49280f\nF tool/buildtclext.tcl e82120d672b34b507e1d9cb220ce18c5c36c3ee0ff0328e35f1806ce74ed2266\nF tool/cg_anno.tcl c1f875f5a4c9caca3d59937b16aff716f8b1883935f1b4c9ae23124705bc8099 x\nF tool/checkSpacing.c 810e51703529a204fc4e1eb060e9ab663e3c06d2\nF tool/cktclsh.sh 6075eef9c6b9ba4b38fef2ca2a66d25f2311bd3c610498d18a9b01f861629cca\nF tool/cp.tcl 9a0d663ad45828de13763ee7ca0200f31f56c6d742cf104a56ae80e027c242d8\nF tool/custom.txt 24ed55e71c5edae0067ba159bbf09240d58b160331f7716e95816cd3aa0ba5c4\nF tool/dbhash.c 5da0c61032d23d74f2ab84ffc5740f0e8abec94f2c45c0b4306be7eb3ae96df0\nF tool/dbtotxt.c ca48d34eaca6d6b6e4bd6a7be2b72caf34475869054240244c60fa7e69a518d6\nF tool/dbtotxt.md c9a57af8739957ef36d2cfad5c4b1443ff3688ed33e4901ee200c8b651f43f3c\nF tool/emcc.sh.in 1f3226166bad1765c0bf42fac3d29037704c2078eb22562f9ddfbe73bff023b0\nF tool/enlargedb.c 3e8b2612b985cfa7e3e8800031ee191b43ae80de96abb5abbd5eada62651ee21\nF tool/extract-sqlite3h.tcl 069ceab0cee26cba99952bfa08c0b23e35941c837acabe143f0c355d96c9e2eb x\nF tool/extract.c 054069d81b095fbdc189a6f5d4466e40380505e2\nF tool/fast_vacuum.c c129ae2924a48310c7b766810391da9e8fda532b9f6bd3f9a9e3a799a1b42af9\nF tool/find_tclconfig.tcl e64886ffe3b982d4df42cd28ed91fe0b5940c2c5785e126c1821baf61bc86a7e\nF tool/fragck.tcl 5265a95126abcf6ab357f7efa544787e5963f439\nF tool/fuzzershell.c 41480c8a1e4749351f381431ecfdfceba645396c5d836f8d26b51a33c4a21b33\nF tool/genfkey.README cf68fddd4643bbe3ff8e31b8b6d8b0a1b85e20f4\nF tool/genfkey.test b6afd7b825d797a1e1274f519ab5695373552ecad5cd373530c63533638a5a4f\nF tool/getlock.c f4c39b651370156cae979501a7b156bdba50e7ce\nF tool/index_usage.c f62a0c701b2c7ff2f3e21d206f093c123f222dbf07136a10ffd1ca15a5c706c5\nF tool/kvtest-speed.sh 4761a9c4b3530907562314d7757995787f7aef8f\nF tool/lemon.c 2418ee31f65764d150f7dd87ef00b4408f1b01a55db0b30bed673a3e336ae718\nF tool/lempar.c e6b649778e5c027c8365ff01d7ef39297cd7285fa1f881cce31792689541e79f\nF tool/libvers.c caafc3b689638a1d88d44bc5f526c2278760d9b9\nF tool/loadfts.c c3c64e4d5e90e8ba41159232c2189dba4be7b862\nF tool/logest.c c34e5944318415de513d29a6098df247a9618c96d83c38d4abd88641fe46e669\nF tool/max-limits.c cbb635fbb37ae4d05f240bfb5b5270bb63c54439\nF tool/merge-test.tcl de76b62f2de2a92d4c1ca4f976bce0aea6899e0229e250479b229b2a1914b176\nF tool/mkamalzip.tcl 8aa5ebe7973c8b8774062d34e15fea9815c4cc2ceea3a9b184695f005910876a\nF tool/mkautoconfamal.sh cbdcf993fa83dccbef7fb77b39cdeb31ef9f77d9d88c9e343b58d35ca3898a6a\nF tool/mkccode.tcl 210159febe0ef0ecbc53c79833500663ceaba0115b2b374405818dc835b5f84b x\nF tool/mkctimec.tcl ef6a67ec82e5b6fc19152a4c79f237227b18bf67ff16d155bac7adb94355d9cf x\nF tool/mkkeywordhash.c 6b0be901c47f9ad42215fc995eb2f4384ac49213b1fba395102ec3e999acf559\nF tool/mkmsvcmin.tcl d76c45efda1cce2d4005bcea7b8a22bb752e3256009f331120fb4fecb14ebb7a\nF tool/mkopcodec.tcl 33d20791e191df43209b77d37f0ff0904620b28465cca6990cf8d60da61a07ef\nF tool/mkopcodeh.tcl 2b4e6967a670ef21bf53a164964c35c6163277d002a4c6f56fa231d68c88d023\nF tool/mkopts.tcl 680f785fdb09729fd9ac50632413da4eadbdf9071535e3f26d03795828ab07fa\nF tool/mkpragmatab.tcl 32e359ccb21011958a821955254bd7a5fa7915d01a8c16fed91ffc8b40cb4adf\nF tool/mkshellc.tcl 2bc29c201933ae72a16a79070fe80aded80c24ea487ecd2f8df20c2973c87bfc\nF tool/mksourceid.c 36aa8020014aed0836fd13c51d6dc9219b0df1761d6b5f58ff5b616211b079b9\nF tool/mkspeedsql.tcl a1a334d288f7adfe6e996f2e712becf076745c97\nF tool/mksqlite3c-noext.tcl 4f7cfef5152b0c91920355cbfc1d608a4ad242cb819f1aea07f6d0274f584a7f\nF tool/mksqlite3c.tcl 9e88a30981280e33489fe4782f4ab1e5349ba1866603fba7f1a948d5599b9124\nF tool/mksqlite3h.tcl 5a8d23f35462bfcf74324a19465abd0ad6717b92a404d177160963c292df5d04\nF tool/mksqlite3internalh.tcl eb994013e833359137eb53a55acdad0b5ae1049b\nF tool/mksrczip.tcl 81efd9974dbb36005383f2cd655520057a2ae5aa85ac2441a80c7c28f803ac52\nF tool/mktoolzip.tcl 34b4e92be544f820e2cc26f143f7d5aec511e826ec394cc82969a5dcf7c7a27c\nF tool/mkvsix.tcl 67b40996a50f985a573278eea32fc5a5eb6110bdf14d33f1d8086e48c69e540a\nF tool/offsets.c 8ed2b344d33f06e71366a9b93ccedaa38c096cc1dbd4c3c26ad08c6115285845\nF tool/omittest-msvc.tcl d6b8f501ac1d7798c4126065030f89812379012cad98a1735d6d7221492abc08\nF tool/omittest.tcl bec70ef0e16255c8d9eb06ecd7edf823c07a60a836186cdbce3528fb34b67995\nF tool/opcodesum.tcl 740ed206ba8c5040018988129abbf3089a0ccf4a\nF tool/pagesig.c f98909b4168d9cac11a2de7f031adea0e2f3131faa7515a72807c03ec58eafeb\nF tool/replace.tcl 511c61acfe563dfb58675efb4628bb158a13d48ff8322123ac447e9d25a82d9a\nF tool/restore_jrnl.tcl 1079ecba47cc82fa82115b81c1f68097ab1f956f357ee8da5fc4b2589af6bd98\nF tool/rollback-test.c 9fc98427d1e23e84429d7e6d07d9094fbdec65a5\nF tool/run-speed-test.sh f95d19fd669b68c4c38b6b475242841d47c66076\nF tool/showdb.c 81b04bfaa9a63665f75945947323aa68b820570aa156b1574f440fc8276092c6\nF tool/showjournal.c 5bad7ae8784a43d2b270d953060423b8bd480818\nF tool/showlocks.c 9cc5e66d4ebbf2d194f39db2527ece92077e86ae627ddd233ee48e16e8142564\nF tool/showshm.c a0ab6ec32dd1f11218ca2a4018f8fb875b59414801ab8ceed8b2e69b7b45a809\nF tool/showstat4.c 0682ebea7abf4d3657f53c4a243f2e7eab48eab344ed36a94bb75dcd19a5c2a1\nF tool/showwal.c 11eca547980a066b081f512636151233350ac679f29ecf4ebfce7f4530230b3d\nF tool/soak1.tcl 8d407956e1a45b485a8e072470a3e629a27037fe\nF tool/spaceanal.tcl 1f83962090a6b60e1d7bf92495d643e622bef9fe82ea3f2d22350dcbce9a12d0\nF tool/speed-check.sh e566ab3934d7d78631743a984ad3f67c331c911bb18ff5d0a6c616a2afee7f91\nF tool/speedtest.tcl 06c76698485ccf597b9e7dbb1ac70706eb873355\nF tool/speedtest16.c ecb6542862151c3e6509bbc00509b234562ae81e\nF tool/speedtest2.tcl ee2149167303ba8e95af97873c575c3e0fab58ff\nF tool/speedtest8.c 2902c46588c40b55661e471d7a86e4dd71a18224\nF tool/speedtest8inst1.c 7ce07da76b5e745783e703a834417d725b7d45fd\nF tool/spellsift.tcl 52b4b04dc4333c7ab024f09d9d66ed6b6f7c6eb00b38497a09f338fa55d40618 x\nF tool/split-sqlite3c.tcl 5aa60643afca558bc732b1444ae81a522326f91e1dc5665b369c54f09e20de60\nF tool/sqldiff.c 2a0987d183027c795ced13d6749061c1d2f38e24eddb428f56fa64c3a8f51e4b\nF tool/sqlite3_analyzer.c.in fc7735c499d226a49d843d8209b2543e4e5229eeb71a674c331323a2217b65b4\nF tool/sqlite3_rsync.c 9a1cca2ab1271c59b37a6493c15dc1bcd0ab9149197a9125926bc08dd26b83fb\nF tool/sqltclsh.c.in 1bcc2e9da58fadf17b0bf6a50e68c1159e602ce057210b655d50bad5aaaef898\nF tool/sqltclsh.tcl 862f4cf1418df5e1315b5db3b5ebe88969e2a784525af5fbf9596592f14ed848\nF tool/src-verify.c d00f93263aa2fa6ba0cba0106d95458e6effb94fdb5fc634f56834f90c05bbb4\nF tool/srcck1.c 371de5363b70154012955544f86fdee8f6e5326f\nF tool/srctree-check.tcl 1f1f505835a4beca64c1751a7ebec5c41a1ddf22b1e80481345b95059eef6583\nF tool/stack_usage.tcl f8e71b92cdb099a147dad572375595eae55eca43\nF tool/stripccomments.c 20b8aabc4694d0d4af5566e42da1f1a03aff057689370326e9269a9ddcffdc37\nF tool/symbols-mingw.sh 4dbcea7e74768305384c9fd2ed2b41bbf9f0414d\nF tool/symbols.sh 1612bd947750e21e7b47befad5f6b3825b06cce0705441f903bf35ced65ae9b9\nF tool/tclConfigShToAutoDef.sh 44ec55046d86a3febb2cb3e099399b41794e80e9cd138eee7b9b016f819e882b x\nF tool/tclConfigShToMake.sh 7c065d81c2d178e15e45a77372c6e5a38b5a1b08755301cd6f20a3a862db7312 x\nF tool/varint.c 5d94cb5003db9dbbcbcc5df08d66f16071aee003\nF tool/vdbe-compress.tcl fa2f37ab39b2a0087fafb6a7f3ce19503e25e624ffa8ed9951717ab72920c088\nF tool/vdbe_profile.tcl 3ac5a4a9449f4baf77059358ea050db3e34395ccf59c5464d29b91746d5b961e\nF tool/version-info.c 3b36468a90faf1bbd59c65fd0eb66522d9f941eedd364fabccd72273503ae7d5\nF tool/warnings-clang.sh bbf6a1e685e534c92ec2bfba5b1745f34fb6f0bc2a362850723a9ee87c1b31a7\nF tool/warnings.sh 49a486c5069de041aedcbde4de178293e0463ae9918ecad7539eedf0ec77a139\nF tool/win/sqlite.vsix deb315d026cc8400325c5863eef847784a219a2f\nP c847973947de67579fab78a65ecfc90bf59fd5db0b7fa7a9c1abb1fc92213d01\nR 21473fba427f7d039b2fd83376887456\nU drh\nZ b74c42c31ff873968b8ed05fb8e82534\n# Remove this line to create a well-formed Fossil manifest.\n"
        },
        {
          "name": "manifest.uuid",
          "type": "blob",
          "size": 0.0634765625,
          "content": "3e2875dac27de1525d9c78f38ac5f1fc12fec7e1b43dbdf47798b128fae49084\n"
        },
        {
          "name": "mptest",
          "type": "tree",
          "content": null
        },
        {
          "name": "sqlite.pc.in",
          "type": "blob",
          "size": 0.251953125,
          "content": "# Package Information for pkg-config\n\nprefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: SQLite\nDescription: SQL database engine\nVersion: @RELEASE@\nLibs: -L${libdir} -lsqlite\nLibs.private: @LIBS@\nCflags: -I${includedir}\n"
        },
        {
          "name": "sqlite3.1",
          "type": "blob",
          "size": 4.23828125,
          "content": ".\\\"                                      Hey, EMACS: -*- nroff -*-\n.\\\" First parameter, NAME, should be all caps\n.\\\" Second parameter, SECTION, should be 1-8, maybe w/ subsection\n.\\\" other parameters are allowed: see man(7), man(1)\n.TH SQLITE3 1 \"Fri Aug 11 23:50:12 CET 2023\"\n.\\\" Please adjust this date whenever revising the manpage.\n.\\\"\n.\\\" Some roff macros, for reference:\n.\\\" .nh        disable hyphenation\n.\\\" .hy        enable hyphenation\n.\\\" .ad l      left justify\n.\\\" .ad b      justify to both left and right margins\n.\\\" .nf        disable filling\n.\\\" .fi        enable filling\n.\\\" .br        insert line break\n.\\\" .sp <n>    insert n+1 empty lines\n.\\\" for manpage-specific macros, see man(7)\n.SH NAME\n.B sqlite3 \n\\- A command line interface for SQLite version 3\n\n.SH SYNOPSIS\n.B sqlite3\n.RI [ options ]\n.RI [ databasefile ]\n.RI [ SQL ]\n\n.SH SUMMARY\n.PP\n.B sqlite3\nis a terminal-based front-end to the SQLite library that can evaluate\nqueries interactively and display the results in multiple formats.\n.B sqlite3\ncan also be used within shell scripts and other applications to provide\nbatch processing features.\n\n.SH DESCRIPTION\nTo start a\n.B sqlite3\ninteractive session, invoke the\n.B sqlite3\ncommand and optionally provide the name of a database file.  If the\ndatabase file does not exist, it will be created.  If the database file\ndoes exist, it will be opened.\n\nFor example, to create a new database file named \"mydata.db\", create\na table named \"memos\" and insert a couple of records into that table:\n.sp\n$ \n.B sqlite3 mydata.db\n.br\nSQLite version 3.43.0 2023-08-11 17:45:23\n.br\nEnter \".help\" for usage hints.\n.br\nsqlite>\n.B create table memos(text, priority INTEGER);\n.br\nsqlite>\n.B insert into memos values('deliver project description', 10);\n.br\nsqlite>\n.B insert into memos values('lunch with Christine', 100);\n.br\nsqlite>\n.B select * from memos;\n.br\ndeliver project description|10\n.br\nlunch with Christine|100\n.br\nsqlite>\n.sp\n\nIf no database name is supplied, the ATTACH sql command can be used\nto attach to existing or create new database files.  ATTACH can also\nbe used to attach to multiple databases within the same interactive\nsession.  This is useful for migrating data between databases,\npossibly changing the schema along the way.\n\nOptionally, a SQL statement or set of SQL statements can be supplied as\na single argument.  Multiple statements should be separated by\nsemi-colons.\n\nFor example:\n.sp\n$ \n.B sqlite3 -line mydata.db 'select * from memos where priority > 20;'\n.br\n    text = lunch with Christine\n.br\npriority = 100\n.br\n.sp\n\n.SS SQLITE META-COMMANDS\n.PP\nThe interactive interpreter offers a set of meta-commands that can be\nused to control the output format, examine the currently attached\ndatabase files, or perform administrative operations upon the\nattached databases (such as rebuilding indices).   Meta-commands are\nalways prefixed with a dot (.).\n\nA list of available meta-commands can be viewed at any time by issuing\nthe '.help' command.  For example:\n.sp\nsqlite>\n.B .help\n.nf\n.tr %.\n...\n.sp\n.fi\n\nThe available commands differ by version and build options, so they\nare not listed here. Please refer to your local copy for all available\noptions.\n\n\n.SH INIT FILE\n.B sqlite3\nreads an initialization file to set the configuration of the\ninteractive environment.  Throughout initialization, any previously\nspecified setting can be overridden.  The sequence of initialization is\nas follows:\n\no The default configuration is established as follows:\n\n.sp\n.nf\n.cc |\nmode            = LIST\nseparator       = \"|\"\nmain prompt     = \"sqlite> \"\ncontinue prompt = \"   ...> \"\n|cc .\n.sp\n.fi\n\no If the file\n.B ${XDG_CONFIG_HOME}/sqlite3/sqliterc\nor\n.B ~/.sqliterc\nexists, the first of those to be found is processed during startup.\nIt should generally only contain meta-commands.\n\no If the -init option is present, the specified file is processed.\n\no All other command line options are processed.\n\n.SH SEE ALSO\nhttps://sqlite.org/cli.html\n.br\nhttps://sqlite.org/fiddle (a WebAssembly build of the CLI app)\n.br\nThe sqlite3-doc package.\n.SH AUTHOR\nThis manual page was originally written by Andreas Rottmann\n<rotty@debian.org>, for the Debian GNU/Linux system (but may be used\nby others). It was subsequently revised by Bill Bumgarner <bbum@mac.com>,\nLaszlo Boszormenyi <gcs@debian.hu>, and the sqlite3 developers.\n"
        },
        {
          "name": "sqlite3.pc.in",
          "type": "blob",
          "size": 0.296875,
          "content": "# Package Information for pkg-config\n\nprefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: SQLite\nDescription: SQL database engine\nVersion: @PACKAGE_VERSION@\nLibs: -L${libdir} -lsqlite3\nLibs.private: @LDFLAGS_MATH@ @LDFLAGS_ZLIB@ @LDFLAGS_ICU@\nCflags: -I${includedir}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}