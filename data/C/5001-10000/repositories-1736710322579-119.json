{
  "metadata": {
    "timestamp": 1736710322579,
    "page": 119,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ntop/n2n",
      "stars": 6387,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.876953125,
          "content": "*.o\n*.a\n*.gz\n*.exe\nconfigure\nconfig.log\nconfig.mak\nconfig.rpath\nconfig.status\ninclude/config.h\ninclude/config.h.in\nautom4te.cache\nedge\nexample_edge_embed_quick_edge_init\nexample_edge_embed\nexample_sn_embed\nsupernode\ntools/n2n-benchmark\ntools/n2n-decode\ntools/n2n-keygen\ntools/n2n-portfwd\ntools/n2n-route\nbuild\n.idea\n.vscode\n.vs\npackages/debian/debian/files\n*dSYM*\n\n__pycache__\n\n# Binaries built to run tests\ntools/tests-auth\ntools/tests-compress\ntools/tests-elliptic\ntools/tests-hashing\ntools/tests-transform\ntools/tests-wire\n\n# Files generated while running tests\ntests/*.out\n\n# Files generated while running coverage reports\n*.gcno\n*.gcda\n*.gcov\ncoverage/\n\n# Files generated while running linting\n*.indent\n*.unc-backup.md5~\n*.unc-backup~\n\n# Empty files created by the openwrt build\n/.built\n/.built_check\n/.configured_*\n/.prepared\n/.quilt_checked\n/.source_dir\n/ABOUT-NLS\n/AUTHORS\n/ChangeLog\n/NEWS\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2666015625,
          "content": "[submodule \"thirdparty/miniupnp\"]\n    path = thirdparty/miniupnp\n    url = https://github.com/miniupnp/miniupnp.git\n    ignore = dirty\n[submodule \"thirdparty/libnatpmp\"]\n    path = thirdparty/libnatpmp\n    url = https://github.com/miniupnp/libnatpmp.git\n    ignore = dirty\n"
        },
        {
          "name": ".yamllint.yml",
          "type": "blob",
          "size": 0.1376953125,
          "content": "---\nextends: default\n\nrules:\n  # 80 chars should be enough, but don't fail if a line is longer\n  line-length:\n    max: 80\n    level: warning\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.7470703125,
          "content": "# Changelog\n\n## n2n 2.8 (August 2020)\n\nThis release brings significant new features to n2n's crypto world and offers\nsome compression opportunities. The added support for routing table manipulation\nmight increase comfort. Besides further honing existing features, this release\naddresses some bugs.\n\n### New Features\n\n* Two lightweight stream ciphers: ChaCha20 (optional, through OpenSSL) & SPECK (integrated)\n* Full Header Encryption (including packet checksumming as well as replay protection)\n* A callback interface to better integrate n2n in third party software (you can still use it stand-alone)\n* Enable the integrated LZO1x compression\n* Add optional ZSTD compression (through zstdlib)\n* Support for changing system routes at program start and end\n* User and group id parameter for supernode\n* Application of cryptography in n2n is seperately documented\n* Add a new pseudo random number generator with higher periodicity seeded with more entropy if available\n\n### Improvements\n\n* Have AES and ChaCha20 use OpenSSL's `evp_*` interface to make better use of available hardware acceleration\n* Fix invalid sendto when supernode name resolution fails\n* Update to supernode's purge logic\n* Extended management supernode's port output\n* Fix read tap device failed when OS wakes up from sleep\n* Free choice of supernode's management UDP port (for multiple supernodes on one machine)\n* Additional trace messages to better indicate established connections and connection type\n* Fix edge's register-to-supernode loop\n* Remove redundant code\n* Restructure the code in directories\n* Clean-up platform-dependant code\n* Compile fixes for Windows\n* Fix build warnings\n* â€¦and many more under-the-hood fixes and tunings\n\n## n2n 2.6 (March 2020)\n\nThe 2.6 release is mostly a maintenance release to address the issues \nof 2.4 that has been the first release since a long time of silence.\n\n### New Features\n\n* AES encryption that features an overall speed bump (12x speed) and security with respect to Twofish used in the previous n2n version\n* Add ability to specify a whitelist of allowed communities on the supernode\n* Implement local peers discovery via multicast\n* Full peer-to-peer topology support.\n* Add support for multiple edge systemd services\n* Add benchmark tool for the encryption throughput\n* Implement packet stats for P2P vs supernode communication\n* Automatically drop privileges to user n2n\n* Add support for ARM64 build\n* More options to control MTU, P2P connections, TOS and log verbosity\n* Implement a wireshark dissector for the n2n protocol\n* Implement n2n-decode utility to decode and dump traffic to PCAP\n\n\n### Improvements\n* Extensive Windows and OpenWRT support.\n* Windows compilation fixes and instructions\n* Instructions and makefile file to build n2n on OpenWRT\n* MacOS compilation fixes and instructions\n* Improve the connection stability and the chances to establish a P2P connection\n* Stable and more resilient connection.\n* Remove keyschedule support to simplify the encryption code\n* Replace peers linked list with hash table for faster lookup in big networks\n* Integrate the changes made in the meyerd fork of n2n\n* Remove calls to system() in tuntap_linux and use netlink instead\n* n2n version improvements\n\n## n2n 2.4 (August 2018)\n\nThis is the first release after 2012 and thus it is focusing mainly\non making it work on current operating system versions, so that the\nnext release will be based on modern code.\n\n### New Features\n* Added deb/rpm packages\n* Added systemd configuration files\n* Added ability to read configuration files instead of using only the CLI (needed for packaging)\n* Added n2n Android app\n* Implemented simple API to embed n2n in applications (in addition to use it stand-alone)\n\n### Improvements\n* Major code cleanup\n* Fixed compilation issues on MacOS\n* Fixed Linux segmentation fault\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.326171875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    n2n  Copyright (C) 2007-08 Luca Deri <deri@ntop.org>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 0.8505859375,
          "content": "INSTALL\n\nTo build the programs:\n\n$ make\n\nTo install the programs and man pages:\n\n$ make install\n\nor\n\n$ make PREFIX=/usr/local install\n\n\nRPM Package\n-----------\n\nThese steps should work with RPM based Linux distributions since rpmbuild was\nsplit from the rpm utility (c RedHat 9).\n\n\nTo build an RPM the easy way follow these steps.\n\n1. Build SRPM\n\n$ cd n2n\n$ scripts/mk_SRPM.sh\n\nLook for where the src.rpm file was put ( \"Wrote:\" ).\n\n2. Build binary RPM from SRPM\n\n$ rpm -i path/to/n2n-<ver>.src.rpm\n$ rpmbuild -bb n2n.spec\n\n\nAll this can be done as non-root user if you have a ~/.rpmmacros file with this\nline in it:\n\n%_topdir /home/username/rpmtopdir\n\n\nTo build an RPM the hard way follow these steps.\n\n$ cp -a n2ndir n2n-2.0\n$ tar czf n2n-2.0.tar.gz n2n-2.0\n$ mv n2n-2.0.tar.gz /usr/src/redhat/SOURCES\n$ cp n2ndir/n2n.spec /usr/src/redhat/SPECS\n$ rpmbuild -bb n2n.spec\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3173828125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 8.740234375,
          "content": "# Our default make target\nall:\n\nexport CC\nexport AR\nexport EXE\nexport CFLAGS\nexport LDFLAGS\nexport LDLIBS\nexport CONFIG_HOST_OS\n\n-include config.mak\n\nifndef CONFIG_HOST\n# TODO:\n# dont error if we are installing build-deps or other non-compile action\n$(error Please run ./configure)\nendif\n\nCFLAGS+=-I./include\nLDFLAGS+=-L.\n\n#Ultrasparc64 users experiencing SIGBUS should try the following gcc options\n#(thanks to Robert Gibbon)\nPLATOPTS_SPARC64=-mcpu=ultrasparc -pipe -fomit-frame-pointer -ffast-math -finline-functions -fweb -frename-registers -mapp-regs\n\nOPENSSL_CFLAGS=$(shell pkg-config openssl; echo $$?)\nifeq ($(OPENSSL_CFLAGS), 0)\n  CFLAGS+=$(shell pkg-config --cflags-only-I openssl)\nendif\n\nWARN=-Wall\nCFLAGS+=$(DEBUG) $(OPTIMIZATION) $(WARN) $(OPTIONS) $(PLATOPTS)\n\n# Quick sanity check on our build environment\nUNAME_S := $(shell uname -s)\nifndef UNAME_S\n# This could happen if the Makefile is unable to run \"uname\", which can\n# happen if the shell has a bad path (or is the wrong shell)\n$(error Could not run uname command, cannot continue)\nendif\n\nexport MKDIR\nexport INSTALL\nexport INSTALL_PROG\nexport INSTALL_DOC\nexport SBINDIR\n\nMKDIR=mkdir -p\nINSTALL=install\nINSTALL_PROG=$(INSTALL) -m755\nINSTALL_DOC=$(INSTALL) -m644\n\n# DESTDIR set in debian make system\nPREFIX?=$(DESTDIR)/$(CONFIG_PREFIX)\n\nSBINDIR=$(PREFIX)/sbin\nMANDIR?=$(PREFIX)/share/man\nMAN1DIR=$(MANDIR)/man1\nMAN7DIR=$(MANDIR)/man7\nMAN8DIR=$(MANDIR)/man8\n\nN2N_LIB=libn2n.a\nN2N_OBJS=\\\n\tsrc/aes.o \\\n\tsrc/auth.o \\\n\tsrc/cc20.o \\\n\tsrc/curve25519.o \\\n\tsrc/edge_management.o \\\n\tsrc/edge_utils.o \\\n\tsrc/header_encryption.o \\\n\tsrc/hexdump.o \\\n\tsrc/json.o \\\n\tsrc/management.o \\\n\tsrc/minilzo.o \\\n\tsrc/n2n.o \\\n\tsrc/n2n_port_mapping.o \\\n\tsrc/n2n_regex.o \\\n\tsrc/network_traffic_filter.o \\\n\tsrc/pearson.o \\\n\tsrc/random_numbers.o \\\n\tsrc/sn_management.o \\\n\tsrc/sn_selection.o \\\n\tsrc/sn_utils.o \\\n\tsrc/speck.o \\\n\tsrc/tf.o \\\n\tsrc/transform_aes.o \\\n\tsrc/transform_cc20.o \\\n\tsrc/transform_lzo.o \\\n\tsrc/transform_null.o \\\n\tsrc/transform_speck.o \\\n\tsrc/transform_tf.o \\\n\tsrc/transform_zstd.o \\\n\tsrc/tuntap_freebsd.o \\\n\tsrc/tuntap_linux.o \\\n\tsrc/tuntap_netbsd.o \\\n\tsrc/tuntap_osx.o \\\n\tsrc/wire.o \\\n\nN2N_DEPS=$(wildcard include/*.h) $(wildcard src/*.c) config.mak\n\n# As source files pass the linter, they can be added here (If all the source\n# is passing the linter tests, this can be refactored)\nLINT_CCODE=\\\n\texamples/example_edge_embed_quick_edge_init.c \\\n\tinclude/curve25519.h \\\n\tinclude/header_encryption.h \\\n\tinclude/hexdump.h \\\n\tinclude/n2n_define.h \\\n\tinclude/n2n_wire.h \\\n\tinclude/network_traffic_filter.h \\\n\tinclude/pearson.h \\\n\tinclude/random_numbers.h \\\n\tinclude/sn_selection.h \\\n\tinclude/speck.h \\\n\tinclude/tf.h \\\n\tsrc/edge_management.c \\\n\tsrc/header_encryption.c \\\n\tsrc/management.c \\\n\tsrc/management.h \\\n\tsrc/sn_management.c \\\n\tsrc/sn_selection.c \\\n\tsrc/strbuf.h \\\n\tsrc/transform_cc20.c \\\n\tsrc/transform_null.c \\\n\tsrc/tuntap_freebsd.c \\\n\tsrc/tuntap_linux.c \\\n\tsrc/tuntap_netbsd.c \\\n\tsrc/tuntap_osx.c \\\n\tsrc/win32/edge_utils_win32.c \\\n\tsrc/win32/edge_utils_win32.h \\\n\tsrc/wire.c \\\n\ttools/tests-auth.c \\\n\ttools/tests-compress.c \\\n\ttools/tests-elliptic.c \\\n\ttools/tests-hashing.c \\\n\ttools/tests-transform.c \\\n\ttools/tests-wire.c \\\n\nLDLIBS+=-ln2n\nLDLIBS+=$(LDLIBS_EXTRA)\n\nAPPS=edge$(EXE)\nAPPS+=supernode$(EXE)\n\nDOCS=edge.8.gz supernode.1.gz n2n.7.gz\n\n# This is the list of Debian/Ubuntu packages that are needed during the build.\n# Mostly of use in automated build systems.\nBUILD_DEP:=\\\n\tautoconf \\\n\tbuild-essential \\\n\tflake8 \\\n\tgcovr \\\n\tlibcap-dev \\\n\tlibzstd-dev \\\n\tshellcheck \\\n\tuncrustify \\\n\tyamllint \\\n\nSUBDIRS+=tools\nSUBDIRS+=examples\n\nCOVERAGEDIR?=coverage\n\n.PHONY: $(SUBDIRS)\n\n.PHONY: all\nall: version $(APPS) $(DOCS) $(SUBDIRS)\n\n# This allows breaking the build if the version.sh script discovers\n# any inconsistancies\n.PHONY: version\nversion:\n\t@echo -n \"Build for version: \"\n\t@scripts/version.sh\n\nexamples tools: $(N2N_LIB)\n\t$(MAKE) -C $@\n\nsrc/edge.o: $(N2N_DEPS)\nsrc/supernode.o: $(N2N_DEPS)\n\nsrc/edge: $(N2N_LIB)\nsrc/supernode: $(N2N_LIB)\n\nifneq (,$(findstring mingw,$(CONFIG_HOST_OS)))\nN2N_OBJS+=src/win32/edge_utils_win32.o\nN2N_OBJS+=src/win32/getopt1.o\nN2N_OBJS+=src/win32/getopt.o\nN2N_OBJS+=src/win32/wintap.o\nN2N_OBJS+=src/win32/edge_rc.o\nendif\n\nsrc/win32/edge.rc: src/win32/edge.manifest\nsrc/win32/edge_rc.o: src/win32/edge.rc\n\t$(WINDRES) $< -O coff -o $@\n\nsrc/edge.exe: src/edge\nsrc/supernode.exe: src/supernode\n\n%: src/%\n\tcp $< $@\n\n%.gz : %\n\tgzip -n -c $< > $@\n\n$(N2N_LIB): $(N2N_OBJS)\n\t$(AR) rcs $(N2N_LIB) $(N2N_OBJS)\n#\t$(RANLIB) $@\n\n.PHONY: test test.units test.integration\ntest: test.units test.integration\n\ntest.units: tools\n\tscripts/test_harness.sh tests/tests_units.list\n\ntest.integration: $(APPS)\n\tscripts/test_harness.sh tests/tests_integration.list\n\n.PHONY: lint lint.python lint.ccode lint.shell lint.yaml\nlint: lint.python lint.ccode lint.shell lint.yaml\n\nlint.python:\n\tflake8 scripts/n2n-ctl scripts/n2n-httpd\n\nlint.ccode:\n\tscripts/indent.sh $(LINT_CCODE)\n\nlint.shell:\n\tshellcheck scripts/*.sh\n\nlint.yaml:\n\tyamllint .\n\n# To generate coverage information, run configure with\n# CFLAGS=\"-fprofile-arcs -ftest-coverage\" LDFLAGS=\"--coverage\"\n# and run the desired tests.  Ensure that package gcovr is installed\n# and then run \"make cover\"\n.PHONY: cover\ncover:\n\tmkdir -p $(COVERAGEDIR)\n\tgcovr -s --html --html-details --output=$(COVERAGEDIR)/index.html\n\n# Use coverage data to generate gcov text report files.\n# Unfortunately, these end up in the wrong directory due to the\n# makefile layout\n# The steps to use this are similar to the \"make cover\" above\n.PHONY: gcov\ngcov:\n\tgcov $(N2N_OBJS)\n\t$(MAKE) -C tools gcov\n\n# This is a convinent target to use during development or from a CI/CD system\n.PHONY: build-dep\n\nifneq (,$(findstring darwin,$(CONFIG_HOST_OS)))\nbuild-dep: build-dep-brew\nelse\nbuild-dep: build-dep-dpkg\nendif\n\n.PHONY: build-dep-dpkg\nbuild-dep-dpkg:\n\tsudo apt install $(BUILD_DEP)\n\n.PHONY: build-dep-brew\nbuild-dep-brew:\n\tbrew install automake gcovr\n\n.PHONY: clean\nclean:\n\trm -f src/edge.o src/supernode.o\n\trm -rf $(N2N_OBJS) $(N2N_LIB) $(APPS) $(DOCS) $(COVERAGEDIR)/ *.dSYM *~\n\trm -f tests/*.out src/*.gcno src/*.gcda\n\tfor dir in $(SUBDIRS); do $(MAKE) -C $$dir clean; done\n\n.PHONY: distclean\ndistclean:\n\trm -f tests/*.out src/*.gcno src/*.gcda src/*.indent src/*.unc-backup*\n\trm -rf autom4te.cache/\n\trm -f config.log config.status configure include/config.h include/config.h.in\n\trm -f doc/edge.8.gz doc/n2n.7.gz doc/supernode.1.gz\n\trm -f packages/debian/config.log packages/debian/config.status\n\trm -rf packages/debian/autom4te.cache/\n\trm -f packages/rpm/config.log packages/rpm/config.status\n\trm -f $(addprefix src/,$(APPS))\n\n.PHONY: install\ninstall: edge$(EXE) supernode$(EXE) edge.8.gz supernode.1.gz n2n.7.gz\n\techo \"MANDIR=$(MANDIR)\"\n\t$(MKDIR) $(SBINDIR) $(MAN1DIR) $(MAN7DIR) $(MAN8DIR)\n\t$(INSTALL_PROG) supernode$(EXE) $(SBINDIR)/\n\t$(INSTALL_PROG) edge$(EXE) $(SBINDIR)/\n\t$(INSTALL_DOC) edge.8.gz $(MAN8DIR)/\n\t$(INSTALL_DOC) supernode.1.gz $(MAN1DIR)/\n\t$(INSTALL_DOC) n2n.7.gz $(MAN7DIR)/\n\t$(MAKE) -C tools install SBINDIR=$(abspath $(SBINDIR))\n\n# Docker builder section\nDOCKER_IMAGE_NAME=ntop/supernode\nDOCKER_IMAGE_VERSION=$N2N_VERSION_SHORT\nN2N_COMMIT_HASH=$(shell scripts/version.sh hash)\n\n.PHONY: default steps build push\ndefault: steps\n\nsteps:\n\t$(info This code appears to have been bitrotted since 2019 - please let us know if you are using it)\n\tif [ \"$(TARGET_ARCHITECTURE)\" = \"arm32v7\" ] || [ \"$(TARGET_ARCHITECTURE)\" = \"\" ]; then DOCKER_IMAGE_FILENAME=\"Dockerfile.arm32v7\" DOCKER_IMAGE_TAGNAME=$(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_VERSION)-arm32v7 make build; fi\n\tif [ \"$(TARGET_ARCHITECTURE)\" = \"x86_64\" ] || [ \"$(TARGET_ARCHITECTURE)\" = \"\" ]; then DOCKER_IMAGE_FILENAME=\"Dockerfile.x86_64\" DOCKER_IMAGE_TAGNAME=$(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_VERSION)-x86_64 make build; fi\n\nbuild:\n\t$(eval OS := $(shell uname -s))\n\t$(eval ARCHITECTURE := $(shell export DOCKER_IMAGE_TAGNAME=\"$(DOCKER_IMAGE_TAGNAME)\"; echo $$DOCKER_IMAGE_TAGNAME | grep -oe -.*))\n\n\tdocker build --target builder --build-arg COMMIT_HASH=$(N2N_COMMIT_HASH) -t $(DOCKER_IMAGE_TAGNAME) -f image-platforms/$(DOCKER_IMAGE_FILENAME) .\n\n\tdocker container create --name builder $(DOCKER_IMAGE_TAGNAME)\n\tif [ ! -d \"./build\" ]; then mkdir ./build; fi\n\tdocker container cp builder:/usr/src/n2n/supernode ./build/supernode-$(OS)$(ARCHITECTURE)\n\tdocker container cp builder:/usr/src/n2n/edge ./build/edge-$(OS)$(ARCHITECTURE)\n\tdocker container rm -f builder\n\n\tdocker build --build-arg COMMIT_HASH=$(N2N_COMMIT_HASH) -t $(DOCKER_IMAGE_TAGNAME) -f image-platforms/$(DOCKER_IMAGE_FILENAME) .\n\tdocker tag $(DOCKER_IMAGE_TAGNAME) $(DOCKER_IMAGE_NAME):latest$(ARCHITECTURE)\n\npush:\n\tif [ ! \"$(TARGET_ARCHITECTURE)\" = \"\" ]; then \\\n\t\tdocker push $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_VERSION)-$(TARGET_ARCHITECTURE); \\\n\t\tdocker push $(DOCKER_IMAGE_NAME):latest-$(TARGET_ARCHITECTURE); \\\n\telse \\\n\t\techo \"Please pass TARGET_ARCHITECTURE, see README.md.\"; \\\n\tfi\n\n# End Docker builder section\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.498046875,
          "content": "[![Build Status](https://travis-ci.org/ntop/n2n.png?branch=dev)](https://travis-ci.org/ntop/n2n)\n\n\n# n2n\n\nn2n is a light VPN software which makes it easy to create virtual networks bypassing intermediate firewalls.\n\nIn order to start using n2n, two elements are required:\n\n- A _supernode_: it allows edge nodes to announce and discover other nodes. It must have a port publicly accessible on internet.\n- _edge_ nodes: the nodes which will be a part of the virtual networks\n\nA virtual network shared between multiple edge nodes in n2n is called a _community_. A single supernode can relay multiple communities and a single computer can be part of multiple communities at the same time. An encryption key can be used by the edge nodes to encrypt the packets within their community.\n\nn2n tries to establish a direct peer-to-peer connection via udp between the edge nodes when possible. When this is not possible (usually due to special NAT devices), the supernode is also used to relay the packets.\n\n\n## Quick Setup\n\nSome Linux distributions already provide n2n as a package so a simple `sudo apt install n2n` will do the work. Alternatively, up-to-date packages for most distributions are available on [ntop repositories](http://packages.ntop.org/).\n\nOn host1 run:\n\n```sh\n$ sudo edge -c mynetwork -k mysecretpass -a 192.168.100.1 -f -l supernode.ntop.org:7777\n```\n\nOn host2 run:\n\n```sh\n$ sudo edge -c mynetwork -k mysecretpass -a 192.168.100.2 -f -l supernode.ntop.org:7777\n```\n\nNow the two hosts can ping each other.\n\n**IMPORTANT** It is strongly advised to choose a custom community name (`-c`) and a secret encryption key (`-k`) in order to prevent other users from connecting to your computer. For the privacy of your data sent and to reduce the server load of `supernode.ntop.org`, it is also suggested to set up a custom supernode as explained below.\n\n\n## Setting up a Custom Supernode\n\nYou can create your own infrastructure by setting up a supernode on a public server (e.g. a VPS). You just need to open a single port (1234 in the example below) on your firewall (usually `iptables`).\n\n1. Install the n2n package\n2. Edit `/etc/n2n/supernode.conf` and add the following:\n   ```\n   -p=1234\n   ```\n3. Start the supernode service with `sudo systemctl start supernode`\n4. Optionally enable supernode start on boot: `sudo systemctl enable supernode`\n\nNow the supernode service should be up and running on port 1234. On your edge nodes you can now specify `-l your_supernode_ip:1234` to use it. All the edge nodes must use the same supernode.\n\n\n## Manual Compilation\n\nOn Linux, compilation from source is straight forward:\n\n```sh\n./autogen.sh\n./configure\nmake\n\n# optionally install\nmake install\n```\n\nFor Windows, MacOS, optimizations and general building options, please check out [Building documentation](doc/Building.md) for compilation and running.\n\n**IMPORTANT** It is generally recommended to use the [latest stable release](https://github.com/ntop/n2n/releases). Please note that the current _dev_ branch usually is not guaranteed to be backward compatible neither with the latest stable release nor with previous _dev_ states. On the other hand, if you dare to try bleeding edge features, you are encouraged to compile from _dev_ â€“ just keep track of sometimes rapidly occuring changes. Feedback in the _Issues_ section is appreciated.\n\n\n## Security Considerations\n\nWhen payload encryption is enabled (provide a key using `-k`), the supernode will not be able to decrypt\nthe traffic exchanged between two edge nodes but it will know that edge A is talking with edge B.\n\nThe choice of encryption schemes that can be applied to payload has recently been enhanced. Please have\na look at [Crypto description](doc/Crypto.md) for a quick comparison chart to help make a choice. n2n edge nodes use \nAES encryption by default. Other ciphers can be chosen using the `-A_` option.\n\nA benchmark of the encryption methods is available when compiled from source with `tools/n2n-benchmark`.\n\nThe header which contains some metadata like the virtual MAC address of the edge nodes, their IP address, their real \nhostname and the community name optionally can be encrypted applying `-H` on the edges.\n\n\n## Advanced Configuration\n\nMore information about communities, support for multiple supernodes, routing, traffic restrictions and on how to run an edge as \na service is available in the [more detailed documentation](doc/Advanced.md).\n\n\n## Contribution\n\nYou can contribute to n2n in various ways:\n\n- Update an [open issue](https://github.com/ntop/n2n/issues) or create a new one with detailed information\n- Propose new features\n- Improve the documentation\n- Provide pull requests with enhancements\n\nFor details about the internals of n2n check out the [Hacking guide](https://github.com/ntop/n2n/blob/dev/doc/Hacking.md).\n\n\n## Further Readings and Related Projects\n\nAnswers to frequently asked questions can be found in our [FAQ document](https://github.com/ntop/n2n/blob/dev/doc/Faq.md).\n\nHere is a list of third-party projects connected to this repository:\n\n- Collection of pre-built binaries for Windows: [lucktu](https://github.com/lucktu/n2n)\n- n2n for Android: [hin2n](https://github.com/switch-iot/hin2n)\n- Docker images: [Docker Hub](https://hub.docker.com/r/supermock/supernode/)\n- Go bindings, management daemons and CLIs for n2n edges and supernodes, Docker, Kubernetes & Helm Charts: [pojntfx/gon2n](https://pojntfx.github.io/gon2n/)\n- Windows GUI (along with a custom version of n2n) but also working with regular n2n: [HappyNet](https://github.com/happynclient/happynwindows)\n\n---\n\n(C) 2007-22 - ntop.org and contributors\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "3.1.1\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.130859375,
          "content": "#!/bin/sh\n\nrm -f include/config.h include/config.h.in include/config.h.in~ config.mak configure\n\necho \"Wait please...\"\nautoreconf -if\n"
        },
        {
          "name": "community.list",
          "type": "blob",
          "size": 2.9384765625,
          "content": "#\n# List of allowed communities\n# ---------------------------\n#\n#      these could either be fixed-name communities such as the following lines ...\n#\nmynetwork\nnetleo\n#\n#      ... or regular expressions that a community name must fully match\n#      such as ntop[0-1][0-9] for communities from \"ntop00\" through \"ntop19\"\n# \nntop[0-1][0-9]\n#\n#   *  Note that fixed-name communities may not contain one of the following characters\n#      . * + ? [ ] \\\n#      as otherwise, they are interpreted as regular expression\n#\n#   *  Only fixed-name communities are supported for header encryption (-H)\n#\n#   *  Regular expression support the following placeholders\n#      '.'        Dot, matches any character\n#      '*'        Asterisk, match zero or more (greedy)\n#      '+'        Plus, match one or more (greedy)\n#      '?'        Question, match zero or one (non-greedy)\n#      '[abc]'    Character class, match if one of {'a', 'b', 'c'}\n#      '[^abc]'   Inverted class, match if NOT one of {'a', 'b', 'c'}  (feature is currently broken)\n#      '[a-zA-Z]' Character ranges, the character set of the ranges { a-z | A-Z }\n#      '\\s'       Whitespace, \\t \\f \\r \\n \\v and spaces\n#      '\\S'       Non-whitespace\n#      '\\w'       Alphanumeric, [a-zA-Z0-9_]\n#      '\\W'       Non-alphanumeric\n#      '\\d'       Digits, [0-9]\n#      '\\D'       Non-digits\n#\n#      fixed-name communities can optionally be followed by a network using the \n#      network/bitlen syntax such as the following line\n#\nhome 192.168.168.0/24\n#\n#      the supernode draws ip addresses to assign to the edges (if they omit the `-a`\n#      parameter) from this network. note that the network is delimited by [SPACE] so\n#      community names cannot contain [SPACE] either.\n#   \n#      if no network is provided here, the supernode assigns some other network to each\n#      community. networks are taken from the default range 10.128.0.0 - 10.255.255.0/24\n#      as long as no other network range is provided through the supernode's command line\n#      option `-d`. those sub-networks are distinct so several edges with different\n#      communities can be used at the same computer (being served ip addresses from the\n#      same supernode). also, the sub-networks described in this file are avoided.\n#\n#      however, all networks assigned in this file are not mutually checked for colliding \n#      ranges so different communities can use same or overlapping sub-networks. that does\n#      not impose a problem if the communities do not share edge nodes.\n#\n#      there seems to be no sense in pre-assigning sub-networks to communities whose\n#      names are defined by regular expressions. those will be assigned distinct\n#      sub-networks from the default range or the `-d` range.\n#\n#      if `-a` is used with the edge, the edge uses the ip address specified with the\n#      `-a xxx.xxx.xxx.xxx` option. also, the enhanced syntax `-r -a dhcp:0.0.0.0` is\n#      still available to have more professional needs served by a full dhcp server.\n#\n"
        },
        {
          "name": "config.mak.in",
          "type": "blob",
          "size": 0.2900390625,
          "content": "# Global configuration, included in top Makefile and exported from there.\n# @configure_input@\n\nCONFIG_HOST=@host@\nCONFIG_HOST_OS=@host_os@\nCONFIG_PREFIX=@prefix@\n\nPACKAGE_VERSION=@PACKAGE_VERSION@\n\nCC=@CC@\nAR=@AR@\nWINDRES=@WINDRES@\nEXE=@EXE@\n\nCFLAGS=@CFLAGS@\nLDFLAGS=@LDFLAGS@\nLDLIBS_EXTRA=@LIBS@\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 3.3173828125,
          "content": "odnl> Do not add anything above\nAC_INIT([edge], m4_esyscmd([scripts/version.sh | tr -d '\\n']))\ndnl> Do not add anything above\n\nAC_DEFINE([PACKAGE_BUILDDATE], \"[m4_esyscmd([scripts/version.sh date | tr -d '\\n'])]\", [Last change date])\n\n# Older versions of the autotools expect to find install-sh here.\nAC_CONFIG_AUX_DIR(scripts)\n\nAC_CANONICAL_HOST\nAC_PROG_CC\nAC_CHECK_TOOL([AR], [ar], [false])\nAC_CHECK_TOOL([WINDRES], [windres], [windres])\n\ncase \"$host_os\" in\n    solaris*)\n        # Was in Makefile with the test `uname` -eq \"SunOS\"\n        # and comment \"For OpenSolaris (Solaris too?)\"\n        LIBS=\"-lsocket -lnsl $LIBS\"\n        ;;\n    mingw*)\n        LIBS=\"-lnetapi32 -lws2_32 -liphlpapi $LIBS\"\n        EXE=\".exe\"\n        ;;\n    *)\n        EXE=\"\"\n        ;;\nesac\n\n# This replicates the old config logic from the Makefile.\n# TODO: remove all this and just use the autotools default prefix\n# (which is \"/usr/local\")\ncase \"$host_os\" in\n    darwin*)\n        ;;\n    *)\n        AC_PREFIX_DEFAULT(/usr)\n        ;;\nesac\n\n# TODO: ideally, should use AC_ARG_ENABLE\nAC_ARG_WITH([edgex],\n    AS_HELP_STRING([--with-edgex], [Build for Ubiquity-X]),\n    [], [with_edgex=no])\nAS_IF([test \"x$with_edgex\" != \"xno\"],\n    [\n        AC_MSG_NOTICE([Please contact us with your use case])\n        CC=mipsel-linux-gnu-gcc\n        AR=mipsel-linux-gnu-arzls\n    ],\n)\n\n# TODO: ideally, should use AC_ARG_ENABLE\nAC_ARG_WITH([zstd],\n    AS_HELP_STRING([--with-zstd], [use zstd library]),\n    [], [with_zstd=no])\nAS_IF([test \"x$with_zstd\" != \"xno\"],\n    [AC_CHECK_LIB([zstd], [ZSTD_compress],,\n        [AC_MSG_ERROR([zstd library not found])]\n    )],\n)\n\n# TODO: ideally, should use AC_ARG_ENABLE\nAC_ARG_WITH([openssl],\n    [AS_HELP_STRING([--with-openssl], [enable support for OpenSSL])],\n    [], [with_openssl=no])\nAS_IF([test \"x$with_openssl\" != xno],\n    [AC_CHECK_LIB([crypto], [EVP_CIPHER_CTX_reset],,\n        [AC_MSG_ERROR([openssl library not found])]\n    )],\n)\n\nAC_ARG_ENABLE([miniupnp],\n    [AS_HELP_STRING([--enable-miniupnp], [support for miniupnp])],\n    [], [enable_miniupnp=no])\nAS_IF([test \"x$enable_miniupnp\" != xno],\n    [AC_CHECK_LIB([miniupnpc], [upnpDiscover],,\n        [AC_MSG_ERROR([miniupnp library not found])]\n    )],\n)\n\nAC_ARG_ENABLE([natpmp],\n    [AS_HELP_STRING([--enable-natpmp], [support for natpmp])],\n    [], [enable_natpmp=no])\nAS_IF([test \"x$enable_natpmp\" != xno],\n    [AC_CHECK_LIB([natpmp], [initnatpmp],,\n        [AC_MSG_ERROR([natpmp library not found])]\n    )],\n)\n\nAC_ARG_ENABLE([pcap],\n    [AS_HELP_STRING([--enable-pcap], [support for pcap])],\n    [], [enable_pcap=no])\nAS_IF([test \"x$enable_pcap\" != xno],\n    [AC_CHECK_LIB([pcap], [pcap_set_immediate_mode],,\n        [AC_MSG_ERROR([pcap library not found])]\n    )],\n)\n\nAC_ARG_ENABLE([cap],\n    [AS_HELP_STRING([--enable-cap], [support for cap])],\n    [], [enable_cap=no])\nAS_IF([test \"x$enable_cap\" != xno],\n    [AC_CHECK_LIB([cap], [cap_get_proc],,\n        [AC_MSG_ERROR([cap library not found])]\n    )],\n)\n\nAC_ARG_ENABLE([pthread],\n    [AS_HELP_STRING([--enable-pthread], [support for pthread])],\n    [], [enable_pthread=no])\nAS_IF([test \"x$enable_pthread\" != xno],\n    [AC_CHECK_LIB([pthread], [pthread_mutex_trylock],,\n        [AC_MSG_ERROR([pthread library not found])]\n    )],\n)\n\n\nAC_SUBST(host)\nAC_SUBST(host_os)\nAC_SUBST(EXE)\nAC_SUBST(WINDRES)\nAC_CONFIG_HEADERS(include/config.h)\nAC_CONFIG_FILES(config.mak)\n\nAC_OUTPUT\n"
        },
        {
          "name": "contributors.txt",
          "type": "blob",
          "size": 0.3193359375,
          "content": "Code contributions courtesy of:\n * Richard Andrews <andrews@ntop.org>\n * Don Bindner <don.bindner@gmail.com>\n * Sylwester Sosnowski <syso-n2n@no-route.org>\n * Wilfried \"Wonka\" Klaebe\n * Lukasz Taczuk\n * Alaric Snell-Pym <alaric@kitten-technologies.co.uk>\n * Babak Farrokhi <babak@farrokhi.net> [FreeBSD port]\n * Logan oos Even\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "edge.8",
          "type": "blob",
          "size": 11.228515625,
          "content": ".TH edge 8  \"18 Jul 2021\" \"version 3\" \"SUPERUSER COMMANDS\"\n.SH NAME\nedge \\- n2n edge node daemon\n.SH SYNOPSIS\n.B edge\n<config file>\n.br\n.B edge\n\\-c <community> \\-l <supernode host:port> [further options]...\n.SH DESCRIPTION\nN2N is a peer-to-peer VPN system. Edge is the edge node daemon for n2n which\ncreates a TAP interface to expose the n2n virtual LAN. On startup n2n creates\nthe TAP interface and configures it then registers with the supernode so it can\nbegin to find other nodes in the community.\n.PP\nThe config file is similar to the command line, with one option per line.\nLines starting with a \"#\" are ignored.\nAn equal sign ('=') should be used between key and value. Example: -p=7777\n.SH OPTIONS FOR THE UNDERLYING NETWORK CONNECTION\n.TP\n\\fB\\-c \\fR<\\fIcommunity\\fR>, \\fB\\-\\-community\\fR=<\\fIcommunity\\fR>\nsets the n2n community name (see also N2N_COMMUNITY in ENVIRONMENT). All edges\nwithin the same community appear on the same LAN (layer 2 network segment).\nCommunity name is 16 bytes in length. A name smaller than this is padded with\n0x00 bytes and a name longer than this is truncated to take the first 16 bytes.\n.TP\n\\fB\\-l \\fR<\\fIhost:port\\fR>, \\fB\\-\\-supernode-list\\fR=<\\fIhost:port\\fR>\nsets the n2n supernode IP address and port to register to. Multiple supernodes\ncan be specified.\n.TP\n\\fB\\-p \\fR[<\\fIlocal_ip_address\\fR>:]<\\fIlocal_port\\fR>\nbinds edge to the given UDP port. Useful for keeping the same external socket\nacross restarts of edge. This allows peer edges which know the edge socket to\ncontinue p2p operation without going back to the supernode. Also, home router's\nport forwarding feature can refer to that fixed port.\nOptionally, the edge can bind to the provided local ip address only. This is\nuseful in case restriction to a certain LAN or WiFi interface is desired.\nBy default, the edge binds to any interface.\n.TP\n\\fB\\-T \\fR<\\fItos\\fR>\nTOS for packets, e.g. 0x48 for SSH like priority\n.TP\n\\fB\\-D\\fR\nenable PMTU discovery, it can reduce fragmentation but\ncauses connections to stall if not properly supported\n.TP\n\\fB\\-e \\fR<\\fIlocal_ip_address\\fR>\nadvertises the provided local IP address as preferred,\nuseful if multicast peer detection is not available, e.g.\ndisabled on routers. \\fB\\-e auto\\fR tries auto-detection of\nlocal IP address.\n.TP\n\\fB\\-S1\\fR ... \\fB\\-S2\\fR\ndo not connect p2p, always use the supernode,\n\\-S1 = via UDP, \\-S2 = via TCP\n.TP\n\\fB\\-i \\fR<\\fIreg_interval\\fR>\nSupernode registration interval. It specifies the interval in seconds\nbetween consecutive REGISTER_SUPER packets and it's used to keep NAT hole\nopen via the UDP NAT hole punching technique. This only works for asymmetric\nNATs and allows for P2P communication.\n.TP\n\\fB\\-L \\fR<\\fIreg_ttl\\fR>\nset the TTL for the hole punching packet. This is an advanced flag to make\nsure that the registration packet is dropped immediately when it goes out of\nlocal nat so that it will not trigger some firewall behavior on target peer.\nActually, the registration packet is only expected to make local nat UDP hole\nand is not expected to reach the target peer, see\nhttps://tools.ietf.org/html/rfc5389. To achieve this, the flag should be set as\nnat level + 1. For example, if we have 2 layer nat in local, we should set -L 3.\nUsually we know exactly how much nat layers in local.\nIf we are not sure how much nat layers in local, we can use traceroute on\nLinux to check. The following example shows a local single layer nat because on\nsecond jump it shows a public ip address. In this case it should set -L 2.\n\n$ /usr/sbin/traceroute -w1 8.8.8.8\n.br\ntraceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets\n 1  192.168.3.1 (192.168.3.1)  0.464 ms  0.587 ms  0.719 ms\n 2  112.65.17.217 (112.65.17.217)  5.269 ms  7.031 ms  8.666 ms\n\nBut this method does not always work due to various local network device policy.\n.TP\n\\fB\\-k \\fR<\\fIkey\\fR>\nencryption key (ASCII) - also N2N_KEY=<key>\n\\-k <keystring>\nsets the encryption key from ASCII text (see also N2N_KEY in\nENVIRONMENT). All edges communicating must use the same key and community\nname. If -k not specified then edge uses cleartext mode (no encryption).\n.TP\n\\fB\\-A1\\fR\ndisable payload encryption, do not use with key, defaults to AES then\n.TP\n\\fB\\-A2\\fR ... \\fB\\-A5\\fR\nchoose a cipher for payload encryption, requires a key,\n\\-A2 = Twofish, \\-A3 = AES (default if key provided),\n\\-A4 = ChaCha20, \\-A5 = Speck-CTR\n.TP\n\\fB\\-H\\fR\nuse header encryption, supernode needs fixed community\n.TP\n\\fB\\-z1\\fR ... \\fB\\-z2\\fR\ncompress outgoing data packets, -z1 = lzo1x, disabled by default\n.TP\n\\fB\\-\\-select-rtt\\fR\nselect supernode by round trip time if several to choose from (federation),\ndefaults to load-based selection strategy if not provided.\n.TP\n\\fB\\-\\-select-mac\\fR\nselect supernode by MAC address if several to choose from (federation),\nlowest MAC address first.\n.SH TAP DEVICE AND OVERLAY NETWORK CONFIGURATION\n.TP\n\\fB\\-a \\fR[\\fImode\\fR]<\\fIip\\fR>[\\fI/n\\fR]\ninterface address and optional CIDR subnet, default '/24',\nmode = [static|dhcp]:, for DHCP use '\\-r -a dhcp:0.0.0.0',\nedge draws IP address from supernode if no '\\-a ...' given\n.TP\n\\fB\\-m \\fR<\\fImac\\fR>\nstart the TAP interface with the given MAC address. This is highly recommended\nas it means the same address will be used if edge stops and restarts. If this is\nnot done, the ARP caches of all peers will be wrong and packets will not flow to\nthis edge until the next ARP refresh.\ne.g.  '\\-m 10:20:30:40:50:60', by default a random MAC address is used.\n.TP\n\\fB\\-d \\fR<\\fIdevice\\fR>, \\fB\\-\\-device\\fR=<\\fIdevice\\fR>\nTAP device name\n.TP\n\\fB\\-M \\fR<\\fImtu\\fR>\nspecify n2n MTU of TAP interface, default 1290\n.TP\n\\fB\\-r\\fR\nenable IP packet forwarding/routing through the n2n virtual LAN. Without this\noption, IP packets arriving over n2n are dropped if not for the -a <addr> (or\nDHCP assigned) IP address of the edge interface. This option is also required\nto allow n2n device being used in network bridging, e.g. with brctl.\n.TP\n\\fB\\-E\\fR\naccept packets destined for multicast ethernet MAC addresses. These addresses\nare used in multicast ethernet and IPv6 neighbour discovery. If this option is\nnot present these multicast packets are discarded as most users do not need or\nunderstand them.\n.TP\n\\fB\\-I \\fR<\\fIdescription\\fR>\nannotate the edge's description used for easier\nidentification in management port output or username\n.TP\n\\fB\\-J \\fR<\\fIpassword\\fR>\npassword for user-password edge authentication (see also N2N_PASSWORD in ENVIRONMENT)\n.TP\n\\fB\\-P \\fR<\\fIpublic key\\fR>\nfederation public key for user-password authentication\n.TP\n\\fB\\-R \\fR<\\fIrule_str\\fR>\nAdd rule to drop or accept specific packet transmit over edge network interface.\n-R rule_str can be used multiple times to add multiple rules. Each -R rule_str add\none rule.\n\nrule_str format:\"src_ip/len:[b_port,e_port],dst_ip/len:[s_port,e_port],TCP+/-,UDP+/-,ICMP+/-\".\n\nip/len indicate a cidr block, len can be ignore, means single ip(not cidr block)\nwill be use in filter rule.\n\n+,- after TCP,UDP,ICMP proto type indicate allow or drop packet of that proto.\nif any of above three proto missed, the rule will not take effect for that proto.\n\nPorts range [s_port,e_port] can be instead by single port number. If not specify, [0,65535]\nwill be used. Ports range include start_port and end_port. If multiple rules matching packet's\nips and ports, the rule with smaller cidr block(smaller address space) will be selected. That\nmeans rules with larger len value has higher priority.\n\nPackets that cannot match any rule will be accepted by default. Users can add rules to\nblock traffics. This behavior can be change by add the rule : `0.0.0.0/0:[0,65535],0.0.0.0/0:\n[0,65535],TCP-,UDP-,ICMP-`. Then all traffic will be dropped, users need add rules to allow\ntraffics.\n\nfor example : `-R 0.0.0.0/0,0.0.0.0/0,TCP-,UDP-,ICMP- -R 192.168.100.0/24,192.168.100.0/24,ICMP+`,\n.TP\n\\fB\\-x \\fR<\\fImetric\\fR>\nset TAP interface metric, defaults to 0 (auto),\ne.g. set to 1 for better multiplayer game detection.\n.br\n(Windows only)\n.SH LOCAL OPTIONS\n.TP\n\\fB\\-f\\fR\ndo not fork and run as a daemon, rather run in foreground\n.TP\n\\fB\\-t \\fR<\\fIport\\fR>\nbinds the edge management system to the given UDP port. Default 5644. Use this\nif you need to run multiple instance of edge; or something is bound to that\nport.\n.TP\n\\fB\\-\\-management-password \\fR<\\fIpassword\\fR>\nsets the password for access to JSON API at the management port, defaults to 'n2n'. The password\nhas to be provided when using 'scripts/n2n-ctl', 'scripts/n2n-httpd' or for any other relevant\naccess to JSON API at the management port.\n.TP\n\\fB\\-v\\fR, \\fB\\-\\-verbose\\fR\nmake more verbose, repeat as required\n.TP\n\\fB\\-V\\fR\nmake less verbose, repeat as required\n.TP\n\\fB\\-u \\fR<\\fIUID\\fR>, \\fB\\-\\-euid\\fR=<\\fIUID\\fR>\nnumeric user ID to use when privileges are dropped\n.TP\n\\fB\\-g \\fR<\\fIGID\\fR>, \\fB\\-\\-egid\\fR=<\\fIGID\\fR>\nnumeric group ID to use when privileges are dropped\n.TP\n\\fb\\-h\\fr\nwrite usage then exit.\n.TP\n\\fb\\--help\\fr\nshows detailed parameter description\n.SH ENVIRONMENT\n.TP\n.B N2N_KEY\nset the encryption key so it is not visible at the command line\n.TP\n.B N2N_COMMUNITY\nset the community name so it is not visible at the command line\n.TP\n.B N2N_PASSWORD\nset the password for user-password authentication so it is not visible at the command line\n.SH EXAMPLES\n.TP\n.B edge \\-d n2n0 \\-c mynetwork \\-k encryptme \\-u 99 \\-g 99 \\-m DE:AD:BE:EF:01:23 \\-a 192.168.254.7 \\-p 50001 \\-l 123.121.120.119:7654\n\nStart edge with TAP device n2n0 on community \"mynetwork\" with community\nsupernode at 123.121.120.119 UDP port 7654 and bind the locally used UDP port to\n50001. Use \"encryptme\" as the single permanent shared encryption key. Assign MAC\naddress DE:AD:BE:EF:01:23 to the n2n interface and drop to user=99 and group=99\nafter the TAP device is successfully configured.\n.PP\nAdd the -f option to stop edge running as a daemon.\n.PP\nSomewhere else setup another edge with similar parameters, eg.\n\n.B edge \\-d n2n0 \\-c mynetwork \\-k encryptme \\-u 99 \\-g 99 \\-m DE:AD:BE:EF:01:21 \\-a 192.168.254.5 \\-p 50001 \\-l 123.121.120.119:7654\n.PP\nNow you can ping from 192.168.254.5 to 192.168.254.7.\n.PP\nThe MAC address (-m <MAC>) and virtual IP address (-a <addr>) must be different\non all edges in the same community.\n\n.SH CLEARTEXT MODE\nIf\n.B -k\nis not specified then edge uses cleartext mode. In cleartext mode there is no\ntransform of the packet data it is simply encrypted. This is useful for\ndebugging n2n as packet contents can be seen clearly.\n\nTo prevent accidental exposure of data, edge only enters cleartext mode when no\nkeying parameters are specified. In the case where keying parameters are\nspecified but no valid keys can be determined, edge exits with an error at\nstartup. If all keys become invalid while running, edge continues to encode\nusing the last key that was valid.\n\n.SH MANAGEMENT INTERFACE\nEdge provides a very simple management system on UDP port 5644. Send a newline\nto receive a status output. Send 'stop' to cause edge to exit cleanly.\n\n.TP\n.B echo | nc -w1 -u 127.0.0.1 5644\nShows the current statistics of a running edge.\n\n.SH EXIT STATUS\nedge is a daemon and any exit is an error.\n.SH AUTHORS\n.TP\nRichard Andrews\nandrews (at) ntop.org - n2n-1 maintainer and main author of n2n-2\n.TP\nLuca Deri\nderi (at) ntop.org - original author of n2n\n.TP\nDon Bindner\n(--) - significant contributions to n2n-1\n.SH SEE ALSO\nifconfig(8) supernode(1) tunctl(8) n2n(7)\n.br\nthe documentation contained in the source code\n.br\nthe extensive documentation found in n2n's \\fBdoc/\\fR folder\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "legacy",
          "type": "tree",
          "content": null
        },
        {
          "name": "n2n.7",
          "type": "blob",
          "size": 5.5419921875,
          "content": ".TH \"n2n_v3\" 7 \"Sep 27, 2021\" \"version 3\" \"Background\"\n.SH NAME\nn2n version 3 \\- version 3 of the n2n decentralised peer-to-peer network overlay\nVPN.\n.SH DESCRIPTION\nn2n is a peer-to-peer network overlay or VPN system that provides layer 2 over\nlayer 3 encapsulation with data transform capabilities such as encryption and\ncompression. This guide also discusses the differences of version 3 of n2n from\nversion 2.\n.SH PROTOCOLS\nn2n-3 basically uses the same set of messages to communicate with edges and\nsupernodes. However, due to slight packet format changes, the n2n-3 messages\nare not compatible with n2n-2. There is no backward compatibility for n2n-2.\n.SH ENCRYPTION\nn2n-3 offers four different ciphers for payload encryption as well as optional\nheader encryption. Earlier versions of n2n-2 provided a mechanism using a key\nschedule which has been removed in n2n-3. A basic user authentication scheme\nrelying on asymmetric cryptography has been added to n2n-3.\n\nn2n-3 provides the following ciphers to chose from for payload encryption; more\ncan be added as required:\n.TP\n.B (1) NULL\nData is encapsulated unchanged. Useful for testing and high-performance, low\nsensitivity applications.\n.TP\n.B (2) TF-CTS\nTwofish AES candidate in CTS mode.\n.TP\n.B (3) AES-CTS\nAES in CTS mode with up to 256-bit key.\n.TP\n.B (4) CHACHA20\nChaCha20, a well known stream cipher developped by Daniel J. Bernstein.\n.TP\n.B (5) SPECK-CTR\nA fast block cipher developped by the NSA used as stream cipher in CTR mode.\n.TP\nFull Header Encyption\nThe optional full header encryption also encrypts packets' header which include\nsome administrative data. In addition, it adds replay protection.\n.TP\nUser Password Authentication\nn2n-3 implements an optional user-password authentication scheme. A key\ngenerator assists in generating user's public keys to be stored at the\nsupernode side.\n.SH COMPRESSION\nLZO for payload compression is an always available option at n2n-3. If compiled with\nzstdlib support, ZSTD is at optional service as well.\n.SH EXTENSIBILITY\nn2n-3 decouples the data transform system from the core of the edge\noperation. This allows for easier addition of new data transform\noperations. n2n-3 reserves some standard transform identifiers (such as TwoFish\nencryption) but allocates transform identifiers for user-defined\ntransforms. This allows anyone to add to n2n new private transforms without\nbreaking compatibility with the standard offering.\n.SH FEDERATED SUPERNODES\nn2n-3 incorporates the capability of multiple supernodes to be federated.\nFederation acts transparently and balances the workload evenly among the\nfederated supernodes. Supernodes keep track of edges connected to different\nsupernodes and forward packets as required. This feature naturally supports\nfail-over and this increases redundancy and resilience.\n.P\nInformation on additional supernodes is propagated to all edges. In addition,\nthe n2n-3 edge implementation allows multiple supernodes to be specified on the\ncommand line. Edges monitor the current supernode for responses to\nREGISTER_SUPER as well as PING messages. After three responses from current\nsupernode are missed or when a better supernode in terms of significant lower workload\nis found, the edge tries to connect to another supernode. It cycles through the list\nf supernodes which over and over again is sorted according to reported workload.\n\n.SH MANAGEMENT CONSOLE\nEdge and supernode in n2n-3 provide a UDP-based management console. Both listen\non the localhost address 127.0.0.1. Commands can be sent to the programs by\nsending to the UDP socket. Responses are returned to the socket from which\ncommands were issued. This only works from the computer on which the programs\nare running. Statistics can be retrieved and commands issued. The netcat utility\nis all that is required; but more sophisticated tools could be built on the\ninterface.\n\n.SH SUPERNODE AUTHENTICATION\nThe supernode federation name serves as private key shared between the supernodes only.\nThe corresponding public key can be provided to the edges.\n\n.SH MESSAGE SUMMARY\nThe following message types work within n2n-3.\n.TP\nREGISTER_SUPER\nSent from an edge to its local supernode to register its MAC with the community.\nAlso, federated supernodes use this packet format to register to each other.\n.TP\nREGISTER_SUPER_ACK\nSent from a supernode to an edge to confirm registration. This also carries the\ndefinition of the edge socket as seen at the supernode so NAT can be detected\nand described. Furthermore, it carries information about additional federated\nsupernodes.\n.TP\nREGISTER_SUPER_NAK\nSupernode refusing to register an edge.\n.TP\nPACKET\nEncapsulated ethernet packets sent between edges. Supernodes forward or\nbroadcast these and edges send them direct in peer-to-peer mode.\n.TP\nREGISTER\nA peer-to-peer mode registration request from one edge to another. Supernodes\nforward these to facilitate NAT crossing introductions.\n.TP\nREGISTER_ACK\nComplete peer-to-peer mode setup between two edges. These messages need to\ntravel direct between edges.\n.TP\nQUERY_PEER\nQueries a supernode about another edge, especially its public socket in case of\nno peer-to-peer communication can be established. Additionally, it serves as PING\nto query supernodes about themselves.\n.TP\nPEER_INFO\nAnswers the QUERY_PEER; it also covers the special case of the PING query, internally\ncalled PONG.\n.SH AUTHORS\n.TP\nRichard Andrews andrews (at) ntop.org - main author of n2n-2\n.TP\nLuca Deri\nderi (at) ntop.org - code inherited from n2n-1\n.SH SEE ALSO\nifconfig(8) edge(8) supernode(1)\n.br\nthe documentation contained in the source code\n.br\nthe extensive documentation found in n2n's \\fBdoc/\\fR folder\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "supernode.1",
          "type": "blob",
          "size": 4.55078125,
          "content": ".TH supernode 1  \"Jul 16, 2021\" \"version 3\" \"USER COMMANDS\"\n.SH NAME\nsupernode \\- n2n supernode daemon\n.SH SYNOPSIS\n.B supernode\n<config file>\n.br\n.B supernode\n[OPTION]...\n.SH DESCRIPTION\nN2N is a peer-to-peer VPN system. Supernode is a node introduction registry,\nbroadcast conduit and packet relay node for the n2n system. On startup supernode\nbegins listening on the specified UDP port for node registrations, and other\npackets to route. The supernode can service any number of communities and routes\npackets only between members of the same community. The supernode does not hold\nthe community encryption key and so cannot snoop or inject packets into the\ncommunity.\n.PP\nSupernode can service a number of n2n communities concurrently. Traffic does not\ncross between communities.\n.PP\nAll logging goes to stdout.\n.PP\nThe config file is similar to the command line, with one option per line.\nLines starting with a \"#\" are ignored.\nAn equal sign ('=') should be used between key and value. Example: -p=7777\n.SH OPTIONS FOR THE UNDERLYING NETWORK CONNECTION\n.TP\n\\fB\\-p \\fR[<\\fIlocal_ip_address\\fR>:]<\\fIlocal_port\\fR>, \\fB\\-\\-local-port\\fR=...\nbinds supernode to this fixed UDP port on 'any' local IP address, defaults to 7654.\nOptionally, the edge can bind to the provided local ip address only.\n.TP\n\\fB\\-F \\fR<\\fIfed_name\\fR>\nname of the supernode's federation, defaults to '*Federation' (see also N2N_FEDERATION in ENVIRONMENT)\n.TP\n\\fB\\-l \\fR<\\fIhost:port\\fR>\nip address or name, and port of known supernode\n.TP\n\\fB\\-m \\fR<\\fImac_address\\fR>\nfixed MAC address for the supernode, e.g.\n '-m 10:20:30:40:50:60', random otherwise\n.TP\n\\fB\\-M\\fR\ndisable MAC and IP address spoofing protection for all\nnon-username-password-authenticating communities\n.TP\n\\fB\\-V \\fR<\\fIversion_string\\fR>\nmodify the supernode version string which is distributed to the\nedges and shown at their management port output, up to 19 characters\n.TP\n.SH TAP DEVICE AND OVERLAY NETWORK CONFIGURATION\n.TP\n\\fB\\-c \\fR<\\fIpath\\fR>, \\fB\\-\\-communities\\fR=<\\fIpath\\fR>\nfile containing the allowed communities and any User / Password based authentication\ndetails (See ALLOWED COMMUNITIES FILE section)\n.TP\n\\fB\\-a \\fR<\\fInet-net/n\\fR>, \\fB\\-\\-autoip\\fR=<net-net/n\\fR>\nsubnet range for auto ip address service,\n.br\ne.g.  '-a 192.168.0.0-192.168.255.0/24',\n.br\ndefaults to '10.128.255.0-10.255.255.0/24'\n.SH LOCAL OPTIONS\n.TP\n\\fB\\-f\\fR, \\fB\\-\\-foreground\\fR\ndisable daemon mode (UNIX) and run in foreground.\n.TP\n\\fB\\-t \\fR<\\fIport\\fR>, \\fB\\-\\-mgmt-port\\fR=<\\fIport\\fR>\nmanagement UDP port, for multiple supernodes on a machine, defaults to 5645\n.TP\n\\fB\\-\\-management-password \\fR<\\fIpassword\\fR>\nsets the password for access to JSON API at the management port, defaults to 'n2n'. The password\nhas to be provided for relevant access to JSON API at the management port.\n.TP\n\\fB\\-v\\fR, \\fB\\-\\-verbose\\fR\nuse verbose logging\n.TP\n\\fB\\-u \\fR<\\fIUID\\fR>\nnumeric user ID to use when privileges are dropped\n.TP\n\\fB\\-g \\fR<\\fIGID\\fR>\nnumeric group ID to use when privileges are dropped\n.TP\n\\fB-h\\fR\nshows a quick reference including all available options\n.TP\n\\fB\\-\\-help\\fR\nshows detailed parameter description\n\n.SH ALLOWED COMMUNITIES FILE\nThis file is a plain text file.\nComments are introduced with a hash at the beginning of the line.\nA line that begins with an asterisk is a user authentication definition and adds an allowed user to the most recently defined community.\nAllowed communities can be specified with a regular expression.\n.PP\nExample community file:\n.PP\n.nf\n.RS\n# List of allowed communities\nmynetwork\nnetleo\n* logan nHWum+r42k1qDXdIeH-WFKeylK5UyLStRzxofRNAgpG\n* sister HwHpPrdMft+38tFDDiunUds6927t0+zhCMMkQdJafcC\n.RE\n.fi\n.PP\nMore details on creating the allowed communities file are found in the Communities.md and Authentication.md documentation included with this package.\n.SH ENVIRONMENT\n.TP\n.B N2N_FEDERATION\nset the federation name so it is not visible at the command line\n.SH EXAMPLES\n.TP\n.B supernode -p 7654 -v\nStart supernode listening on UDP port 7654 with verbose output.\n.TP\n.B echo | nc -w1 -u 127.0.0.1 5645\nShows the management status of a running supernode.\n.PP\n.SH RESTART\nWhen supernode restarts it loses all registration information from associated\nedge nodes. It can take up to five minutes for the edge nodes to re-register and\nnormal traffic flow to resume.\n.SH EXIT STATUS\nsupernode is a daemon and any exit is an error\n.SH AUTHOR\nLuca Deri ( deri (at) ntop.org ), Richard Andrews ( andrews (at) ntop.org ), Don Bindner\n.SH SEE ALSO\nifconfig(8) edge(8)\n.br\nthe documentation contained in the source code\n.br\nthe extensive documentation found in n2n's \\fBdoc/\\fR folder\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "uncrustify.cfg",
          "type": "blob",
          "size": 1.248046875,
          "content": "# Initial rules taken from a quick discussion\n# (See https://github.com/ntop/n2n/commit/00159d0d012c6836fd972af1748833eeaf50fa22#commitcomment-57137247)\n\n# 4 space indention (never use tabs)\nindent_columns                  = 4\nindent_with_tabs                = 0\nindent_switch_case              = 4\n\n# space between name and bracket during function define\nsp_func_def_paren               = force\nsp_func_proto_paren             = force\n\n# no space between name and bracket during call\nsp_func_call_paren              = remove\n\n# no space after if and while\nsp_before_sparen                = remove\n#sp_while_paren_open             = remove   # only in newer uncrustify\n\n# block-braces as seen above\nnl_if_brace                     = remove\nnl_brace_else                   = remove\nnl_elseif_brace                 = remove\nnl_else_brace                   = remove\n#nl_before_opening_brace_func_class_def = remove    # only in newer uncrustify\nnl_for_brace                    = remove\nnl_while_brace                  = remove\n\n# multi-line parameters with indentation under the opening bracket\n# looks like this is the default, but might be the following:\n#indent_func_call_param          = false ?\n\n# Want to keep var definition alignment\n#align_keep_extra_space          = true\n"
        },
        {
          "name": "wireshark",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}