{
  "metadata": {
    "timestamp": 1736710368170,
    "page": 181,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RIOT-OS/RIOT",
      "stars": 5380,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bandit",
          "type": "blob",
          "size": 0.0732421875,
          "content": "# codacy:\n# Solve flagged valid Python \"assert\" statements\nskips: ['B101']\n"
        },
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.388671875,
          "content": "# SPDX-License-Identifier: GPL-2.0\n#\n# clang-format configuration file. Intended for clang-format >= 11.\n#\n# For more information, see:\n#\n#   Documentation/dev-tools/clang-format.rst\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n# Based on the Linux kernel config, e.g. see\n# https://github.com/torvalds/linux/blob/1d227fcc72223cbdd34d0ce13541cbaab5e0d72f/.clang-format\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments:\n  PadOperators: true\n  AlignCompound: true\nAlignConsecutiveDeclarations: false\nAlignConsecutiveMacros: AcrossEmptyLinesAndComments\nAlignEscapedNewlines: Left\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  AfterExternBlock: false\n  BeforeCatch: false\n  BeforeElse: true\n  IndentBraces: false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit: 0\nCommentPragmas: '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\n\nIncludeBlocks: Preserve\nIncludeCategories:\n  - Regex: '.*'\n    Priority: 1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentGotoLabels: false\nIndentPPDirectives: AfterHash\nPPIndentWidth: 2\nIndentWidth: 4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\n\n# Taken from git's rules\nPenaltyBreakAssignment: 10\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\nSortUsingDeclarations: false\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatementsExceptForEachMacros\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\nTabWidth: 4\nUseTab: Never\nQualifierAlignment: Left\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2822265625,
          "content": "root = true\nspelling_language = en\nend_of_line = lf\n\n[*{.c,.h}]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[{Makefile*,*.mk}]\nindent_style = tab\nindent_size = 2\ntab_size = 2\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2958984375,
          "content": "*.a binary\n*.patch binary\nCargo.lock binary\n# Default conflict marker size is 7 which causes some of the headings in\n# release-notes.txt to trigger git diff --check: 'leftover conflict marker'\n# when the heading is exactly 7 characters long.\n*.md conflict-marker-size=100\n*.txt conflict-marker-size=100\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5771484375,
          "content": "# Object files\n*.o\n# Target files\n*.elf\n# Documentation artifacts\ndoc/doxygen/html\ndoc/doxygen/latex\ndoc/doxygen/man\ndoc/doxygen/*.log\ndoc/doxygen/*.db\ndoc/doxygen/*.tmp\n# bin (e.g.:build directory) and .bin files\nbin\n*.bin\n# Build directory\n/build\n# AFL findings\nfuzzing/**/findings/\n# Backup files\n*~\n*.orig\n.*.swn\n.*.swo\n.*.swp\n*.save\n*.rej\n\\#*\\#\ncachegrind.out*\n# Eclipse workspace files\n.project\n.cproject\n.settings\n.idea\n# KDevelop4 project files\n.kdev4\n*.kdev4\n# Codelite (among others) project files\n*.project\n# Visual Studio Code user settings\n.vscode/*\n!.vscode/settings.json\n# ctags index files\ntags\n# GDB initialization scripts\n.gdbinit\n\n# Eclipse symbol file (output from make eclipsesym)\neclipsesym.xml\n/toolchain\n# Ignore created Arduino sketch files\n_sketches.cpp\n\n# local override files\nMakefile.local\n\n# Vagrant\n.vagrant\n\n# clang-complete command line argument lists (Vim: clang-complete, Atom: linter-clang, autocomplete-clang addons)\n.clang_complete\n# YouCompleteMe (https://github.com/Valloric/YouCompleteMe)\n.ycm_extra_conf.py\n\n# Python compiled files\n*.pyc\n\n# Ignore download cache\n.dlcache\n\n# scan-build artifacts\nscan-build/\n\n# compile_and_test_for_boards default \"results\" directory\nresults/\n\n# mypy artifacts\n.mypy_cache/\n\n# Clangd compile flags (language server)\ncompile_commands.json\ncompile_flags.txt\n\n# cache files of clangd (and probably other tools)\n.cache/\n\n# generated by clang-check for C++ code\n*.plist\n\n# suit manifest keys\nkeys/\n\n# clangd language server\n.clangd/\n\n# custom clang-tidy flags, also used when using clangd language server\n.clang-tidy\n\n# Environments\n.venv\nvenv/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.7998046875,
          "content": "Benjamin Valentin <benjamin.valentin@ml-pa.com> <benjamin.valentin@ml-pa.com>\nBenjamin Valentin <benjamin.valentin@ml-pa.com> <benpicco@googlemail.com>\nBenjamin Valentin <benjamin.valentin@ml-pa.com> <benpicco@beuth-hochschule.de>\nBenjamin Valentin <benjamin.valentin@ml-pa.com> <benpicco@zedat.fu-berlin.de>\nBenjamin Valentin <benjamin.valentin@ml-pa.com> <benpicco@flauschlabor.de>\nCenk Gündoğan <mail-github@cgundogan.de> <cnkgndgn@gmail.com>\nCenk Gündoğan <mail-github@cgundogan.de> <mail@cgundogan.de>\nHauke Petersen <devel@haukepetersen.de> <hauke.petersen@fu-berlin.de>\nHauke Petersen <devel@haukepetersen.de> <mail@haukepetersen.de>\nJoakim Nohlgård <joakim.nohlgard@eistec.se> <joakim.gebart@eistec.se>\nJoakim Nohlgård <joakim.nohlgard@eistec.se> <joakim@gebart.se>\nJosé Ignacio Alamos Aste <jialamos@uc.cl>\nKaspar Schleiser <kaspar@schleiser.de>\nLudwig Knüpfer <ludwig.knuepfer@fu-berlin.de> <ludwig.ortmann@fu-berlin.de>\nMartine Lenders <m.lenders@fu-berlin.de> <authmillenon@gmail.com>\nMartine Lenders <m.lenders@fu-berlin.de> <mail@martin-lenders.de>\nMartine Lenders <m.lenders@fu-berlin.de> <mail@martine-lenders.eu>\nMartine Lenders <m.lenders@fu-berlin.de> <mlenders@inf.fu-berlin.de>\nMartine Lenders <m.lenders@fu-berlin.de> <authmill@datalove.me>\nMartine Lenders <m.lenders@fu-berlin.de> <martine.lenders@tu-dresden.de>\nOleg Hahm <oleg@hobbykeller.org> <oleg@hobbykeller.org>\nOleg Hahm <oleg@hobbykeller.org> <gello@gmx.de>\nOleg Hahm <oleg@hobbykeller.org> <oliver.hahm@inria.fr>\nOleg Hahm <oleg@hobbykeller.org> <oleg@scherbe.des-mesh.net>\nPeter Kietzmann <peter.kietzmann@haw-hamburg.de>\nRené Kijewski <rene.kijewski@fu-berlin.de>\nRené Kijewski <rene.kijewski@fu-berlin.de> <kijewski@mi.fu-berlin.de>\nSebastian Meiling <s@mlng.net>\nMarian Buschsieweke <marian.buschsieweke@posteo.net> <marian.buschsieweke@ovgu.de>\n"
        },
        {
          "name": ".murdock",
          "type": "blob",
          "size": 17.8369140625,
          "content": "#!/bin/sh\n\n# uncomment and change this to limit builds, e.g.,\n#export BOARDS=\"samr21-xpro native\"\n# and / or\n#export APPS=\"examples/hello-world tests/unittests\"\n\nQUICKBUILD_BOARDS=\"\nadafruit-itsybitsy-m4\natmega256rfr2-xpro\nesp32-wroom-32\nesp32s3-devkit\nfrdm-k64f\nhifive1b\nmsb-430\nmsba2\nnative\nnative64\nnrf52840dk\nqn9080dk\nsamr21-xpro\nstk3200\nstm32f429i-disc1\"\n\n# this configures boards that are available via pifleet\ncase \"${CI_MURDOCK_PROJECT}\" in\n    riot)\n        : ${TEST_BOARDS_AVAILABLE:=\"samr21-xpro\"}\n        ;;\n    riot-staging)\n        : ${TEST_BOARDS_AVAILABLE:=\"\"}\n        ;;\n    *)\n        : ${TEST_BOARDS_AVAILABLE:=\"\"}\n        ;;\nesac\n\n#: ${EMULATED_BOARDS_AVAILABLE:=\"microbit\"}\n\n# Only a subset of boards are compiled on LLVM to not increase CI time by\n# factor 2, but still have a decent regression test coverage.\n# TODO: Consider reusing QUICKBUILD_BOARDS once all those boards are supported\n# on LLVM.\n: ${TEST_BOARDS_LLVM_COMPILE:=\"iotlab-m3 native native64 nrf52dk mulle nucleo-f401re samr21-xpro slstk3402a\"}\n\n: ${TEST_WITH_CONFIG_SUPPORTED:=\"examples/suit_update tests/drivers/at86rf2xx_aes\"}\n\nexport RIOT_CI_BUILD=1\nexport CC_NOCOLOR=1\nexport STATIC_TESTS=0\nexport CFLAGS_DBG=\"\"\nexport DLCACHE_DIR=${DLCACHE_DIR:-~/.dlcache}\nexport ENABLE_TEST_CACHE=${ENABLE_TEST_CACHE:-1}\nexport MURDOCK_REDIS_HOST=${MURDOCK_REDIS_HOST:-127.0.0.1}\n\nNIGHTLY=${NIGHTLY:-0}\n\ncheck_label() {\n    local label=\"${1}\"\n    [ -z \"${CI_PULL_LABELS}\" ] && return 1\n    echo \"${CI_PULL_LABELS}\" | grep -q \"${label}\"\n    return $?\n}\n\n# true if \"$2\" starts with \"$1\", false otherwise\nstartswith() {\n  case \"${2}\" in\n    ${1}*) true ;;\n    *) false ;;\n  esac\n}\n\n# this function returns 0 when this build is building a merge queue branch.\nis_merge_queue_build() {\n    startswith \"gh-readonly-queue/\" \"${CI_BUILD_BRANCH}\"\n}\n\n# fullbuild logic\n# non-full-builds are those where can_fast_ci_run might reduce the build\n# automatically\nif [ -z \"${FULL_BUILD}\" ]; then\n    if [ \"${NIGHTLY}\" = 1 ]; then\n        FULL_BUILD=1\n    elif check_label \"CI: full build\"; then\n        # full build if requested by label\n        FULL_BUILD=1\n    else\n        FULL_BUILD=0\n    fi\n    export FULL_BUILD\nfi\n\n\n# quickbuild logic\n# a \"quickbuild\" is only building a representative subset of all build\n# configurations.\nif [ -z \"${QUICK_BUILD}\" ]; then\n    export QUICK_BUILD=0\n    if is_merge_queue_build; then\n        # always do full build for merge queue' branches\n        true\n    elif [ ${FULL_BUILD} -eq 1 ]; then\n        # full build if building nightly or full build requested by label\n        true\n    else\n        export QUICK_BUILD=1\n    fi\nfi\n\n# This is a work around for a bug in CCACHE which interacts very badly with\n# some features of RIOT and of murdock. The result is that ccache is\n# ineffective (i.e. objects are never reused, resulting in extreme cache miss\n# rate) and murdock becomes slow.\n#\n# - CCACHE thinks that -gz by itself enables debugging, which is not true.\n#   see https://github.com/ccache/ccache/issues/464\n#   - When debug info is included, CCACHE hashes the file paths, as these\n#     influence the debug information (the name of compile units and/or their\n#     \"comp_dir\" attribute)\n# - Riot does not set -fdebug-prefix-map. This is not that easy as it may not\n#   be supported in every toolchain (some are quite old).\n# - Murdock builds PRs in different directories each time.\n#\n# It is only the combination of these three factors which causes this bug.\nexport OPTIONAL_CFLAGS_BLACKLIST=\"-gz\"\n\nDWQ_ENV=\"-E BOARDS -E APPS -E NIGHTLY -E RUN_TESTS -E ENABLE_TEST_CACHE\n         -E TEST_HASH -E CI_PULL_LABELS -ECI_BASE_BRANCH -ECI_BASE_COMMIT\n         -EPKG_USE_MIRROR -EAPPS_CHANGED -EBOARDS_CHANGED -ESTATIC_TESTS\n         -E CI_MURDOCK_PROJECT -EFULL_BUILD -EQUICK_BUILD\"\n\nif [ ${NIGHTLY} -eq 1 ]; then\n    export PKG_USE_MIRROR=0\nfi\n\nCFCR_ARGS=\"--upstreambranch ${CI_BASE_COMMIT}\"\n\n# if RUN_TESTS is unset (e.g., not passed from the outside),\n# set to 1 if NIGHTLY=1 or if the label \"CI: run tests\" is set,\n# otherwise set 0.\nif [ -z \"$RUN_TESTS\" ]; then\n    if [ \"$NIGHTLY\" = \"1\" ] || check_label \"CI: run tests\" ; then\n        RUN_TESTS=1\n    else\n        RUN_TESTS=0\n    fi\nfi\n\n[ \"$ENABLE_TEST_CACHE\" = \"1\" ] && {\n    check_label \"CI: disable test cache\" && export ENABLE_TEST_CACHE=0\n}\n\nerror() {\n    echo \"$@\"\n    exit 1\n}\n\n# if MURDOCK_HOOK is set, this function will execute it and pass on all it's\n# parameters. should the hook script exit with negative exit code, hook() makes\n# this script exit with error, too.\n# hook() will be called from different locations of this script.\n# currently, the only caller is \"run_test\", which calls \"hook run_test_pre\".\n# More hooks will be added as needed.\nhook() {\n    if [ -n \"${MURDOCK_HOOK}\" ]; then\n        echo \"- executing hook $1\"\n        \"${MURDOCK_HOOK}\" \"$@\" || {\n            error \"$0: hook \\\"${MURDOCK_HOOK} $@\\\" failed!\"\n        }\n        echo \"- hook $1 finished\"\n    fi\n}\n\n# true if word \"$1\" is in list of words \"$2\", false otherwise\n# uses grep -w, thus only alphanum and \"_\" count as word bounderies\n# (word \"def\" matches \"abc-def\")\nis_in_list() {\n    [ $# -ne 2 ] && return 1\n\n    local needle=\"$1\"\n    local haystack=\"$2\"\n\n    echo \"$haystack\" | grep -q -w \"$needle\"\n}\n\n# grep that doesn't return error on empty input\n_grep() {\n    grep \"$@\"\n    true\n}\n\n_greplist() {\n    if [ $# -eq 0 ]; then\n        echo cat\n    else\n        echo -n \"_grep -E ($1\"\n        shift\n        for i in $*; do\n            echo -n \"|$i\"\n        done\n        echo \")\"\n    fi\n}\n\n# get list of all app directories\nget_apps() {\n    make -f makefiles/app_dirs.inc.mk info-applications \\\n        | $(_greplist $APPS) | sort\n}\n\n# take app dir as parameter, print all boards that are supported\n# Only print for boards in $BOARDS.\nget_supported_boards() {\n    local appdir=$1\n    local only_changed=0\n\n    if [ -n \"$APPS_CHANGED\" ]; then\n        if is_in_list \"$appdir\" \"${APPS_CHANGED}\"; then\n            # this app has changed -> build for all boards\n            true\n        else\n            # this is not a changed app -> build for changed boards\n            only_changed=1\n        fi\n    else\n        if [ -n \"$BOARDS_CHANGED\" ]; then\n            echo d\n            # no changed apps, some changed boards -> build for changed boards\n            only_changed=1\n        else\n            # no changed apps list, no changed boards list -> build all boards\n            true\n        fi\n    fi\n\n    BOARDS_=${BOARDS}\n    if [ $only_changed -eq 1 ]; then\n        # if can_fast_ci_run figured out changes to specific boards,\n        # only consider those\n        export BOARDS=\"$BOARDS_CHANGED\"\n    elif [ -z \"${BOARDS}\" -a ${QUICK_BUILD} -eq 1 ]; then\n        # quickbuild board filter is applied here\n        export BOARDS=\"${QUICKBUILD_BOARDS}\"\n    fi\n\n    local boards=\"$(make --no-print-directory -C$appdir info-boards-supported 2>/dev/null || echo broken)\"\n\n    export BOARDS=\"${BOARDS_}\"\n\n    if [ \"$boards\" = broken ]; then\n        echo \"makefile_broken\"\n        return\n    fi\n\n    for board in $boards\n    do\n        echo $board\n    done | $(_greplist $BOARDS)\n}\n\nget_supported_toolchains() {\n    local appdir=$1\n    local board=$2\n    local toolchains=\"gnu\"\n\n    if is_in_list \"${board}\" \"${TEST_BOARDS_LLVM_COMPILE}\"; then\n        toolchains=\"$(make -s --no-print-directory -C${appdir} BOARD=${board} \\\n                      info-toolchains-supported 2> /dev/null | grep -o -e \"llvm\" -e \"gnu\")\"\n    fi\n    echo \"${toolchains}\"\n}\n\n# given an app dir as parameter, print \"$appdir $board:$toolchain\" for each\n# supported board and toolchain. Only print for boards in $BOARDS.\n# if extra args are given, they will be prepended to each output line.\nget_app_board_toolchain_pairs() {\n    local appdir=$1\n    local boards=\"$(get_supported_boards $appdir)\"\n\n    # collect extra arguments into prefix variable\n    shift\n    local prefix=\"$*\"\n\n    if [ \"$boards\" = makefile_broken ]; then\n        echo \"$0 error \\\"error: ${DWQ_WORKER}: get_supported_boards failed in $appdir\\\"\"\n        return\n    fi\n\n    for board in ${boards}\n    do\n        for toolchain in $(get_supported_toolchains $appdir $board)\n        do\n            echo $prefix $appdir $board:$toolchain\n        done\n    done | $(_greplist $BOARDS)\n}\n\n# use dwqc to create full \"appdir board toolchain\" compile job list\nget_compile_jobs() {\n    check_label \"CI: skip compile test\" && return\n    update_changed_modules || return\n\n    get_apps | \\\n        maybe_filter_changed_apps | \\\n        dwqc ${DWQ_ENV} --queue default-first -s \\\n        ${DWQ_JOBID:+--subjob} \\\n        \"$0 get_app_board_toolchain_pairs \\${1} $0 compile\"\n}\n\nprint_worker() {\n    [ -n \"$DWQ_WORKER\" ] && \\\n        echo \"-- running on worker ${DWQ_WORKER} thread ${DWQ_WORKER_THREAD}, build number $DWQ_WORKER_BUILDNUM.\"\n}\n\ntest_hash_calc() {\n    local bindir=$1\n\n    # Why two times cut?\n    # \"test-input-hash.sha1\" contains a list of lines containing\n    # \"<hash> <filename>\" on each line.\n    # We need to filter out the filename, as it contains the full path name,\n    # which differs depending on the build machine.\n    #\n    # After piping through sha1sum, we get \"<hash> -\". \" -\" has to go so we save the\n    # hassle of escaping the resulting hash.\n\n    cat ${bindir}/test-input-hash.sha1 | cut -f1 -d' ' | sha1sum | cut -f1 -d' '\n}\n\ntest_cache_get() {\n    test \"${ENABLE_TEST_CACHE}\" = \"1\" || return 1\n    test -n \"$(redis-cli -h ${MURDOCK_REDIS_HOST} get $1)\" > /dev/null\n}\n\ntest_cache_put() {\n    redis-cli -h ${MURDOCK_REDIS_HOST} set \"$1\" ok\n}\n\n# compile one app for one board with one toolchain. delete intermediates.\ncompile() {\n    local appdir=$1\n    local board=$(echo $2 | cut -f 1 -d':')\n    local toolchain=$(echo $2 | cut -f 2 -d':')\n\n    [ \"$board\" = \"makefile_broken\" ] && {\n        echo \"$0: There seems to be a problem in \\\"$appdir\\\" while getting supported boards!\"\n        echo \"$0: testing \\\"make -C$appdir info-boards-supported\\\"...\"\n        make -C$appdir info-boards-supported && echo \"$0: success. no idea what's wrong.\" || echo \"$0: failed!\"\n        exit 1\n    }\n\n    # set build directory. CI ensures only one build at a time in $(pwd).\n    export BINDIR=\"$(pwd)/build\"\n    export PKGDIRBASE=\"${BINDIR}/pkg\"\n\n    # Pre-build cleanup\n    rm -rf ${BINDIR}\n\n    print_worker\n\n    # sanity checks\n    [ $# -ne 2 ] && error \"$0: compile: invalid parameters (expected \\$appdir \\$board:\\$toolchain)\"\n    [ ! -d \"$appdir\" ] && error \"$0: compile: error: application directory \\\"$appdir\\\" doesn't exist\"\n\n    # use our checkout as ccache temporary folder.\n    # On CI, this is a tmpfs, so using that instead of the `/cache/.ccache` volume\n    # reduces disk IO.\n    export CCACHE_TEMPDIR=\"$(pwd)/.ccache/tmp\"\n\n    BOARD=${board} make -C${appdir} clean\n    CCACHE_BASEDIR=\"$(pwd)\" BOARD=$board TOOLCHAIN=$toolchain RIOT_CI_BUILD=1 \\\n        make -C${appdir} all test-input-hash -j${JOBS:-4}\n    RES=$?\n\n    # test hash is used to cache test results\n    test_hash=$(test_hash_calc \"$BINDIR\")\n\n    # run tests\n    if [ $RES -eq 0 ]; then\n        if is_in_list \"$board\" \"$EMULATED_BOARDS_AVAILABLE\"; then\n            EMULATED=1\n        else\n            EMULATED=0\n        fi\n\n        if [ $RUN_TESTS -eq 1 -o \"$board\" = \"native\" -o \"$board\" = \"native64\" -o \"$EMULATED\" = \"1\" ]; then\n            if [ -f \"${BINDIR}/.test\" ]; then\n                if [ \"$board\" = \"native\" -o \"$board\" = \"native64\" -o \"${EMULATED}\" = \"1\" ]; then\n                    # For native, we can run the test on the worker that also\n                    # compiled it (`make -C${appdir} test`).\n                    # \"dwq-localjob\" allows using some (locally run) command's\n                    # output as if it was its own CI job.\n                    # We use this here so the output shows up in the Murdock UI\n                    # under the \"Tests\" tab and not inlined with the \"Build\"\n                    # output.\n                    # \"--command-override\" is a hack that makes the job fake the\n                    # command. This is currently needed for the Murdock UI to\n                    # properly categorize the job result.\n                    EMULATE=${EMULATED} BOARD=$board TOOLCHAIN=$toolchain \\\n                        dwq-localjob \\\n                        --command-override \"./.murdock run_test ${appdir} ${board}:${toolchain}\" \\\n                        -- make -C${appdir} test\n                elif is_in_list \"$board\" \"$TEST_BOARDS_AVAILABLE\"; then\n                    echo \"-- test_hash=$test_hash\"\n                    if test_cache_get $test_hash; then\n                        echo \"-- skipping test due to positive cache hit\"\n                    else\n                        BOARD=$board TOOLCHAIN=$toolchain TEST_HASH=$test_hash \\\n                            make -C${appdir} test-murdock\n                        RES=$?\n                    fi\n                fi\n            fi\n        fi\n    fi\n\n    # log some build stats\n    if [ -d ${BINDIR} ]\n    then\n        echo \"{\\\"build/\\\": $(du -s ${BINDIR} | cut -f1)}\"\n        # cleanup\n        rm -rf ${BINDIR}\n    fi\n\n    return $RES\n}\n\ntest_job() {\n    local appdir=$1\n    local board=$(echo $2 | cut -f 1 -d':')\n    local toolchain=$(echo $2 | cut -f 2 -d':')\n\n    # this points to the dwq checkout root folder\n    local basedir=\"$(pwd)\"\n\n    # interpret any extra arguments as file names.\n    # They will be sent along with the job to the test worker\n    # and stored in the application's binary folder.\n    shift 2\n    local files=\"\"\n    for filename in \"$@\"; do\n        # check if the file is within $(basedir)\n        if startswith \"${basedir}\" \"${filename}\"; then\n            filename=\"$(realpath --relative-to ${basedir} ${filename})\"\n        else\n          error \"$0: error: extra test files not within \\${basedir}!\"\n        fi\n\n        files=\"${files} --file ${filename}\"\n    done\n\n    dwqc \\\n        ${DWQ_ENV} \\\n        ${DWQ_JOBID:+--subjob} \\\n        --queue ${TEST_QUEUE:-$board} \\\n        --maxfail 1 \\\n        $files \\\n        \"./.murdock run_test $appdir $board:$toolchain\"\n}\n\nrun_test() {\n    local appdir=$1\n    local board=$(echo $2 | cut -f 1 -d':')\n    local toolchain=$(echo $2 | cut -f 2 -d':')\n\n    # set build directory to match the builder\n    export BINDIR=\"$(pwd)/build\"\n\n    print_worker\n    echo \"-- executing tests for $appdir on $board (compiled with $toolchain toolchain):\"\n    hook run_test_pre\n\n    # do flashing and building of termdeps simultaneously\n    BOARD=$board TOOLCHAIN=${toolchain} make -C$appdir flash-only termdeps -j2\n    RES=$?\n    if [ $RES -ne 0 ]; then\n        error \"- flashing failed!\"\n    fi\n\n    # now run the actual test\n    if is_in_list \"${appdir}\" \"${TEST_WITH_CONFIG_SUPPORTED}\"; then\n        BOARD=${board} TOOLCHAIN=${toolchain} make -C${appdir} test-with-config\n    else\n        BOARD=$board TOOLCHAIN=${toolchain} make -C$appdir test\n    fi\n    RES=$?\n\n    if [ $RES -eq 0 -a -n \"$TEST_HASH\" ]; then\n        echo -n \"-- saving test result to cache: \"\n        test_cache_put $TEST_HASH\n    fi\n\n    return $RES\n}\n\nbasename_list () {\n    for path in $*; do\n        basename $path\n    done\n}\n\n# calls out to can_fast_ci_run.py.\n#\n# returns 1 if nothing should be built.\n# or, returns 0, potentially meddling with BOARDS, APPS, BOARDS_CHANGED, APPS_CHANGED.\nupdate_changed_modules() {\n    # early out if there's no base commit info\n    if [ -z \"${CI_BASE_COMMIT}\" ]; then\n        return 0\n    fi\n\n    # early out if a full build is requested\n    if [ $FULL_BUILD -eq 1 ]; then\n        return 0\n    fi\n\n    # if these are set, just build what's requested.\n    if [ -n \"$BOARDS\" -o -n \"$APPS\" ]; then\n        return 0\n    fi\n\n    # do full build if requested by label\n    check_label \"CI: full build\" && return 0\n\n    # call out to can_fast_ci_run.py\n    # that script will output e.g.,\n    #    APPS_CHANGED=\"foo/bar foo/barfoo\"\n    #    BOARDS_CHANGED=\"foo/bar foo/barfoo\"\n    # just eval that output, so we set those variables directly in this shell.\n    eval $(dist/tools/ci/can_fast_ci_run.py \\\n        ${CFCR_ARGS} \\\n        --changed-boards --changed-apps \\\n        2>/dev/null || echo CFCR_ERROR=1)\n\n    # if this errors, it means we cannot skip any builds.\n    if [ -n \"$CFCR_ERROR\" ]; then\n        return 0\n    fi\n\n    # if can_fast_ci_run exits 0 but doesn't output any changed apps or boards,\n    # it means we can skip all compile jobs.\n    if [ -z \"$APPS_CHANGED\" -a -z \"$BOARDS_CHANGED\" ]; then\n        return 1\n    fi\n\n    # can_fast_ci_run.py outputs \"board/fooboard\", but the rest of this script\n    # expects a board name without leading \"board/\".\n    if [ -n \"$BOARDS_CHANGED\" ]; then\n        export BOARDS_CHANGED=\"$(basename_list $BOARDS_CHANGED)\"\n    fi\n\n    # if no board has changed, filter by just setting APPS.\n    # same for apps -> BOARDS.\n    if [ -z \"$APPS_CHANGED\" -a -n \"$BOARDS_CHANGED\" ]; then\n        export BOARDS=\"$(echo $BOARDS_CHANGED | $(_greplist ${BOARDS}))\"\n        unset BOARDS_CHANGED\n    elif [ -n \"$APPS_CHANGED\" -a -z \"$BOARDS_CHANGED\" ]; then\n        export APPS=\"$(echo $APPS_CHANGED | $(_greplist ${APPS}))\"\n        unset APPS_CHANGED\n    fi\n\n    export APPS_CHANGED\n    export BOARDS_CHANGED\n}\n\nmaybe_filter_changed_apps() {\n    # if no boards have changes, only a subset of the apps need to be built.\n    # else, all apps need to be passed, as they'll need to be built for\n    # the changed boards.\n    if [ -n \"$BOARDS_CHANGED\" ]; then\n        cat\n    else\n        $(_greplist $APPS_CHANGED)\n    fi\n}\n\n# execute static tests\nstatic_tests() {\n    print_worker\n    build_filter_status\n\n    [ \"$STATIC_TESTS\" = \"1\" ] && \\\n        ./dist/tools/ci/static_tests.sh\n    true\n}\n\nbuild_filter_status() {\n    echo \"--- can_fast_ci_run:\"\n    if [ $FULL_BUILD -eq 1 ]; then\n        echo \"--- doing full build.\"\n        return\n    fi\n\n    dist/tools/ci/can_fast_ci_run.py ${CFCR_ARGS} --explain --json --changed-boards --changed-apps\n    if [ -n \"$MURDOCK_TEST_CHANGE_FILTER\" ]; then\n        echo MURDOCK_TEST_CHANGE_FILTER=$MURDOCK_TEST_CHANGE_FILTER\n    fi\n\n    echo \"\"\n    update_changed_modules\n\n    if [ -n \"$CFCR_ERROR\" ]; then\n        echo \"-- can_fast_ci_run.py exited non-zero\"\n    fi\n}\n\nget_non_compile_jobs() {\n    echo \"$0 static_tests\"\n}\n\nget_jobs() {\n    get_non_compile_jobs\n    get_compile_jobs\n}\n\n$*\n"
        },
        {
          "name": ".murdock.yml",
          "type": "blob",
          "size": 0.39453125,
          "content": "push:\n  branches:\n    # these two enable potential bors support:\n    - '^staging$'\n    - '^trying$'\n    # github merge trains:\n    - '^gh-readonly-queue/'\n\npr:\n  enable_comments: true\n  sticky_comment: true\n  comment_artifacts:\n  - name: doc-preview/\n    readable_name: Documentation preview\n\ncommit:\n  skip_keywords: [\"ci_skip\", \"murdock_skip\", \"[ci skip]\" ]\n\nartifacts:\n  - output.txt\n  - doc-preview/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.9033203125,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\ntitle: RIOT - The friendly Operating System for the IoT\nurl: https://www.riot-os.org/\npreferred-citation:\n  type: article\n  authors:\n    - family-names: Baccelli\n      given-names: Emmanuel\n    - family-names: Gündoğan\n      given-names: Cenk\n    - family-names: Hahm\n      given-names: Oliver\n    - family-names: Kietzmann\n      given-names: Peter\n    - family-names: Lenders\n      given-names: Martine S.\n    - family-names: Petersen\n      given-names: Hauke\n    - family-names: Schleiser\n      given-names: Kaspar\n    - family-names: Schmidt\n      given-names: Thomas C.\n    - family-names: Wählisch\n      given-names: Matthias\n  title: \"RIOT: An Open Source Operating System for Low-End Embedded Devices in the IoT\"\n  url: https://www.riot-os.org/assets/pdfs/riot-ieeeiotjournal-2018.pdf\n  journal: IEEE Internet of Things Journal\n  scope: \"If you use this software, we prefer that you cite our paper as below.\"\n  publisher:\n    - name: IEEE\n  month: 3\n  year: 2018\n  volume: 5\n  issue: 6\n  pages: 4428-4440\n  doi: 10.1109/JIOT.2018.2815038\n  abstract: >\n    As the Internet of Things (IoT) emerges, compact operating systems (OSs) are\n    required on low-end devices to ease development and portability of IoT\n    applications. RIOT is a prominent free and open source OS in this space. In\n    this paper, we provide the first comprehensive overview of RIOT. We cover\n    the key components of interest to potential developers and users: the\n    kernel, hardware abstraction, and software modularity, both conceptually and\n    in practice for various example configurations. We explain operational\n    aspects like system boot-up, timers, power management, and the use of\n    networking. Finally, the relevant APIs as exposed by the OS are discussed\n    along with the larger ecosystem around RIOT, including development and open\n    source community aspects.\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 7.7490234375,
          "content": "## CODEOWNERS for autoreview assigning in github\n\n# https://help.github.com/en/articles/about-code-owners#codeowners-syntax\n\n# Order is important; for each modified file, the last matching\n# pattern takes the most precedence.\n\n*.md                                        @jia200x\n\nCargo.*                                     @chrysn\n*.rs                                        @chrysn\n\n/.murdock                                   @kaspar030\n\n/boards/common/atxmega/                     @nandojve\n/boards/common/esp*/                        @gschorcht\n/boards/common/nrf*/                        @aabadie\n/boards/common/nucleo*/                     @aabadie\n/boards/common/silabs/                      @basilfx\n/boards/common/slwstk6000b/                 @basilfx\n/boards/common/stm32/                       @aabadie\n/boards/e180-zg120b-tb/                     @basilfx\n/boards/esp*/                               @gschorcht @yegorich\n/boards/hamilton/                           @Hyungsin\n/boards/ikea-tradfri/                       @basilfx\n/boards/lobaro-lorabox/                     @leandrolanzieri\n/boards/nrf*/                               @aabadie\n/boards/nucleo*/                            @aabadie\n/boards/phynode-kw41z/                      @jia200x\n/boards/sam*-xpro/                          @dylad\n/boards/same54-xpro/                        @benpicco\n/boards/sensebox_samd21/                    @leandrolanzieri @jia200x\n/boards/slstk340*/                          @basilfx\n/boards/sltb001a/                           @basilfx\n/boards/slwstk6000b/                        @basilfx\n/boards/slwstk6220a/                        @basilfx\n/boards/sodaq-sara-aff/                     @leandrolanzieri\n/boards/stk3*00/                            @basilfx\n/boards/openmote*/                          @MrKevinWeiss\n/boards/cc1352p-launchpad                   @luisan00\n/boards/atxmega*/                           @nandojve\n\n/core/                                      @kaspar030\n\n/cpu/arm7_common/                           @kaspar030 @maribu\n/cpu/avr8_common/                           @kYc0o @maribu @nandojve\n/cpu/atmega*/                               @kYc0o @maribu\n/cpu/atxmega/                               @nandojve\n/cpu/cortexm_common/                        @kaspar030 @bergzand\n/cpu/efm32/                                 @basilfx\n/cpu/esp*/                                  @gschorcht\n/cpu/fe310/                                 @aabadie @kaspar030 @bergzand\n/cpu/lpc2387/                               @benpicco @maribu\n/cpu/msp430*/                               @kaspar030 @gschorcht\n/cpu/nrf*/                                  @aabadie\n/cpu/nrf52/radio/nrf802154/                 @bergzand @jia200x\n/cpu/sam0_common/                           @benpicco @dylad @keestux\n/cpu/samd21/                                @dylad @biboc\n/cpu/samd5x/                                @benpicco @dylad\n/cpu/saml1x/                                @dylad\n/cpu/saml21/                                @dylad\n/cpu/stm32*/                                @aabadie @vincent-d\n/cpu/stm32/periph/eth*                      @maribu\n/cpu/stm32/periph/ptp.c                     @maribu\n\n/doc/                                       @aabadie @jia200x\n\n/dist/tools/sliptty/                        @miri64\n/dist/tools/dhcpv6-pd_ia/                   @miri64\n\n/drivers/ad7746/                            @leandrolanzieri\n/drivers/at24mac/                           @benpicco\n/drivers/at86rf215/                         @benpicco\n/drivers/at86rf2xx/                         @daniel-k @Hyungsin @jia200x @miri64\n/drivers/bh1900nux/                         @wosym\n/drivers/bq2429x/                           @jeandudey\n/drivers/cc110x/                            @maribu\n/drivers/cc1xxx_common/                     @maribu\n/drivers/ccs811/                            @gschorcht\n/drivers/dcf77/                             @daexel\n/drivers/dht/                               @wosym\n/drivers/dose/                              @jue89\n/drivers/ds18/                              @leandrolanzieri\n/drivers/itg320x/                           @gschorcht\n/drivers/mcp2515/                           @wosym\n/drivers/mrf24j40/                          @bergzand\n/drivers/pca9685/                           @gschorcht\n/drivers/sht3x/                             @gschorcht\n/drivers/si70xx/                            @basilfx\n/drivers/slipdev/                           @miri64\n/drivers/sx127x/                            @aabadie @jia200x\n/drivers/ws281x/                            @maribu\n/drivers/xbee/                              @miri64\n/drivers/include/periph/                    @MrKevinWeiss\n/drivers/periph_common/                     @MrKevinWeiss\n/drivers/include/periph/ptp.h               @maribu\n\n/pkg/cryptoauthlib/                         @Einhornhool @PeterKietzmann\n/pkg/libschc/                               @bartmoons @miri64\n/pkg/lua/                                   @jcarrano\n/pkg/lwip/                                  @miri64\n/pkg/gecko_sdk/                             @basilfx\n/pkg/lora-serialization/                    @leandrolanzieri\n/pkg/micropython/                           @bergzand @kaspar030\n/pkg/openthread/                            @Hyungsin @jia200x\n/pkg/semtech-loramac/                       @aabadie @jia200x\n/pkg/tinydtls/                              @rfuentess @leandrolanzieri\n/pkg/tinyvcdiff/                            @jue89\n/pkg/u8g2/                                  @basilfx\n/pkg/ucglib/                                @basilfx\n/pkg/wakaama/                               @leandrolanzieri\n\n/sys/clif/                                  @leandrolanzieri\n/sys/event/                                 @kaspar030\n/sys/evtimer/                               @kaspar030\n/sys/fmt/                                   @kaspar030\n/sys/net/application_layer/gcoap/           @chrysn\n/sys/net/application_layer/nanocoap/        @kaspar030 @chrysn\n/sys/include/net/sock*                      @maribu\n/sys/net/netif/                             @miri64 @jia200x\n/sys/net/gnrc/network_layer/                @miri64\n/sys/net/gnrc/transport_layer/tcp/          @brummer-simon @miri64\n/sys/net/gnrc/transport_layer/udp/          @miri64\n/sys/net/gnrc/link_layer/lorawan/           @jia200x\n/sys/net/gnrc/netif/                        @miri64 @jia200x\n/sys/net/gnrc/routing/rpl/                  @emmanuelsearch\n/sys/net/                                   @miri64 @PeterKietzmann\n/sys/pm_layered/                            @kaspar030\n/sys/random/fortuna/                        @basilfx\n/sys/riotboot/                              @kaspar030\n/sys/suit                                   @kaspar030 @bergzand\n/sys/tsrb/                                  @kaspar030\n/sys/usb/                                   @bergzand @dylad @aabadie\n/sys/xtimer/                                @kaspar030 @MichelRottleuthner\n\n/sys/include/ztimer.h                       @kaspar030 @bergzand\n/sys/include/ztimer/                        @kaspar030 @bergzand\n/sys/ztimer/                                @kaspar030 @bergzand\n\n/tests/                                     @leandrolanzieri @aabadie @MichelRottleuthner\n/tests/drivers/candev/                      @wosym\n/tests/drivers/bq2429x/                     @jeandudey\n/tests/drivers/dht/                         @wosym\n/tests/net/gnrc*                            @miri64\n/tests/pkg/lwip*                            @miri64\n/tests/pkg/libschc/                         @miri64\n/tests/net/slip/                            @miri64\n/tests/unittests                            @miri64\n/tests/*/tests/*.py                         @miri64\n/tests/cpu/efm32_features/                  @basilfx\n\n# KConfig maintainers will be notified about all KConfig changes\nKconfig                                     @leandrolanzieri @jia200x @MrKevinWeiss\npm.c                                        @kaspar030\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 4.4765625,
          "content": "RIOT-OS Code of Conduct\n=======================\n\nRIOT, like so many other free and open source software projects, is made up of a\nmixed group of professionals and volunteers from all over the world, working on\nevery aspect of our goals - including teaching, steering, and connecting people.\n\nWe want diversity to be one of our greatest strengths, but it can also lead to\ncommunication issues and unhappiness. This is why we ask people to adhere to a\nfew ground rules. They apply equally to founders, maintainers, contributors and\nthose seeking help and guidance.\n\nThis is not meant to be an exhaustive list of things you are not allowed to do.\nWe rather would like you to think of it as a guide to enrich our community and\nthe technical community in general with new knowledge and perspectives by\nallowing everyone to participate.\n\nThis code of conduct applies to all spaces managed by the RIOT community. This\nincludes any communication within the RIOT community, both online and face to\nface. In addition, violations of this code outside these spaces may also\naffect a person's ability to participate within them.\n\nIf you believe someone is violating the code of conduct, we ask that you report\nit by emailing <conduct@riot-os.org>. For more details please see our [Reporting\nGuidelines](https://doc.riot-os.org/coc-reporting-guide.html).\n\n-   **Be friendly and patient.**\n-   **Be welcoming.** We strive to be a community that welcomes and supports\n    people of all backgrounds and identities. This includes, but is not limited\n    to members of any race, ethnicity, culture, national origin, colour,\n    immigration status, social and economic class, educational level, sex,\n    sexual orientation, gender identity and expression, age, size, family\n    status, political belief, religion, and mental and physical ability.\n-   **Be considerate.** Your work will be used by other people, and you in turn\n    will depend on the work of others. Any decision you take will affect users\n    and colleagues, and you should take those consequences into account when\n    making decisions. Remember that we're a world-wide community, so you might\n    not be communicating in someone else's primary language.\n-   **Be respectful.** Not all of us will agree all the time, but disagreement\n    is no excuse for poor behavior and poor manners. We might all experience\n    some frustration now and then, but we cannot allow that frustration to turn\n    into a personal attack. It’s important to remember that a community where\n    people feel uncomfortable or threatened is not a productive one. Members of\n    the RIOT community should be respectful when dealing with other members as\n    well as with people outside the RIOT community.\n-   **Be careful in the words that you choose.** We are a community of\n    professionals, and we conduct ourselves professionally. Be kind to others.\n    Do not insult or put down other participants. Harassment and other\n    exclusionary behavior aren't acceptable. This includes, but is not limited\n    to:\n    -   Violent threats or language directed against another person.\n    -   Discriminatory jokes and language.\n    -   Posting sexually explicit or violent material.\n    -   Posting (or threatening to post) other people's personally identifying\n        information (\"doxing\").\n    -   Personal insults, especially those using racist or sexist terms.\n    -   Unwelcome sexual attention.\n    -   Advocating for, or encouraging, any of the above behavior.\n    -   Repeated harassment of others. In general, if someone asks you to stop,\n        then stop.\n-   **When we disagree, try to understand why.** Disagreements, both social and\n    technical, happen all the time and RIOT is no exception. It is important\n    that we resolve disagreements and differing views constructively. Remember\n    that we’re different. The strength of RIOT comes from its varied community,\n    people from a wide range of backgrounds. Different people have different\n    perspectives on issues. Being unable to understand why someone holds a\n    viewpoint doesn’t mean that they’re wrong. Don’t forget that it is human to\n    err and blaming each other doesn’t get us anywhere. Instead, focus on\n    helping to resolve issues and learning from mistakes.\n\nText based on the Code of Conduct of the [Django\ncommunity](https://www.djangoproject.com/conduct/).\n\nQuestions?\n----------\n\nIf you have questions, please see [the FAQ](https://doc.riot-os.org/coc-faq.html).\nIf that doesn't answer your questions, feel free to [contact us](mailto:conduct@riot-os.org).\n"
        },
        {
          "name": "CODING_CONVENTIONS.md",
          "type": "blob",
          "size": 16.8232421875,
          "content": "# Coding Conventions\n\n## General\n\n* Code shall be [C11](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf)\n  compliant.\n* Avoid dynamic memory allocation (malloc/free, new, etc.)! It will break\n  real-time guarantees, increase code complexity, and make it more likely to use\n  more memory than available.\n* Avoid the use of floating point arithmetic. Not every MCU has a FPU and software\n  floating point libraries cause unnecessary overhead.\n  Instead use fixed-point integers and transform equations so that they stay within\n  the range of integer math.\n  An easy way to ensure this is by multiplying by a constant factor, ideally a power\n  of two - this is a simple shift operation.\n  Take care that intermediate values do not exceed the range of the data type you are using.\n  When writing drivers, do not convert the measurement data into float, but instead\n  choose an appropriate integer format / SI prefix.\n* Please obey the Linux coding style as described in\n  https://www.kernel.org/doc/Documentation/process/coding-style.rst with the\n  following modifications and additions:\n    * Line length: aim for no more than 80 characters per line, the absolute\n      maximum should be 100 characters per line.\n    * All line endings shall be set to LF (`\\n`). (How to handle line endings in\n      Git: https://help.github.com/articles/dealing-with-line-endings)\n    * There must be no trailing whitespace in any line.\n      The script `/dist/tools/whitespacecheck/check.sh master || exit` can be\n      used to detect whitespaces at the end of line(s) that would lead to\n      *Murdock* build error(s).\n    * Use empty braces for empty while loops waiting for a hardware register\n      instead of semicolon.\n      `while (HW_STATUS != STATUS_OK) {}` is correct,\n      `while (HW_STATUS != STATUS_OK);` is wrong.\n    * Our policy regarding `typedef`s is\n      [completely different](https://www.kernel.org/doc/html/latest/process/coding-style.html#typedefs)\n      (see below) (BTW: Do we have any reason to do so?)\n    * Comments should be C-style comments (see below)\n* In order to follow Linux's recommendation on\n  [conditional compilation](https://www.kernel.org/doc/html/latest/process/coding-style.html#conditional-compilation)\n  make use of `IS_ACTIVE` and `IS_USED` macros from `kernel_defines.h` with C\n  conditionals. If a symbol is not going to be defined under a certain\n  condition, the usage of preprocessor `#if defined()` is fine.\n* You can use [uncrustify](http://uncrustify.sourceforge.net/) with the provided\n  option files: https://github.com/RIOT-OS/RIOT/blob/master/uncrustify-riot.cfg\n\n## Types\n\n* Be careful with platform dependent type sizes like `int` or `long`. Use data\n  types that include the bit length in the name like `uint16_t` when you need to\n  make sure that a certain variable is exactly of this length.\n* The use of typedefs for structs and pointers is allowed.\n* Type definitions (using `typedef`) always end on \"_t\".\n* If a typedef is used for a struct, it has to be specified at the struct\n  definition (i.e., not as a separate line). E.g.:\n```\n    typedef struct {\n        uint8_t a;\n        uint8_t b;\n    } foobar_t;\n```\n* Use of a separate line typedef for structs is allowed for forward\n  declarations, e.g.,\n```\n    typedef struct mystruct mystruct_t;\n    [...]\n    struct mystruct {\n         [...]\n    };\n```\n* Guidelines for pointer types (as long as it is reasonable):\n    - use `char *` for strings and only for strings\n    - use `uint8_t[]` as type for arbitrary byte buffers, but use `void *` to\n      pass them around. `uint8_t[]` because we're dealing with bytes and not\n      characters, `void *` to avoid unnecessary casting shall the need arise to\n      have their content to have a certain type\n    - use `uint8_t *` to pass \"typed\" byte buffers, e.g., link-layer addresses,\n      where it avoids unnecessary temporary variable\n    - use `void *` for generic typing\n\n## Variables\n\n* Do NOT use global variables unless it is unavoidable.\n* If you declare a variable within a header file, you MUST use the keyword\n  `extern`.\n\n## Functions\n\n* Every function needs a prototype in addition to its definition. If a prototype\n  is specified within a .c file it has to be declared BEFORE any function\n  definitions.\n* If the scope of a function is limited to one file, it MUST be declared static.\n* Functions without parameters must be specified with `(void)`.\n* Keep functions short! As a rule of thumb, the function's body should not\n  exceed one screen.\n* Do NOT use global macros defining more than one line of code. Use inline\n  functions instead.\n\n## Return values\n\n* Every function must return one of the following values or none (void):\n    * logical value (zero or not zero)\n    * an error code (given as a negative number or zero) or a positive status\n      value\n    * the count of read or written bytes/values for I/O functions\n    * the position or address (for search functions)\n    * a pointer\n* `NULL` indicates an error case, too.\n* Do NOT return structs or other larger types! These would get copied to the\n  stack, resulting in expensive operations. Moreover, some compilers have\n  trouble with larger return types. Use pointers to structs instead and take\n  care of the structs lifetime.\n* If possible, prefer signed types over unsigned ones in order to be able to add\n  error codes later on.\n\n## Naming\n\n*  Names of all public functions and variables must start with the name of the\n   corresponding library, e.g.:\n```\n    thread_getpid(void);\n    hwtimer_init_comp(uint32_t fcpu);\n    int transceiver_pid;\n```\n* Private functions and variables do NOT have this library prefix.\n* Do NOT use CamelCase. Function, variable and file names as well as enums,\n  structs or typedefs are written in lowercase with underscores.\n```\n    /* instead of: */\n    void CamelCaseNamedFunction(int camelCaseNamedVar);\n\n    /* write: */\n    void camel_case_named_function(int camel_case_named_var);\n```\n* When implementing constants or variables that are defined in third party\n  documents such as RFCs, add a prefix to those names based on the RIOT coding\n  conventions. If you use a name in the RIOT code that is different from the one\n  in the third party document, you must add a reference to the original name of\n  the constant or variable in the Doxygen documentation.\n\n## Indentation and braces\n\n* Indentations are four spaces (i.e., NO tab characters).\n* As an exception to the Linux coding style, the closing brace is empty on a\n  line of its own when followed by an else, too. When followed by a `while` in a\n  `do`-statement, it goes into the same line.\n* Use curly braces even for one-line blocks. This improves debugging and later\n  additions.\n```\n    /* instead of: */\n    if (debug) println(\"DEBUG\");\n    else println(\"DEBUG ELSE\");\n\n    /* write: */\n    if (debug) {\n        println(\"DEBUG\");\n    }\n    else {\n        println(\"DEBUG ELSE\");\n    }\n```\n* Commas are always followed by a space.\n* For complex statements it is always good to use more parentheses - or split up\n  the statement and simplify it.\n\n## Indentation of Preprocessor Directives\n\nAdd two spaces of indent *after* the `#` per level of indent. Increment the\nindent when entering conditional compilation using `#if`/`#ifdef`/`#ifndef`\n(except for the include guard, which does not add to the indent). Treat indent\nfor C language statements and C preprocessor directives independently.\n\n```\n/* BAD: */\n#if XOSC1\n#define XOSC XOSC1\n#define XOSC_NUM 1\n#elif XOSC2\n#define XOSC XSOC2\n#define XOSC_NUM 2\n#endif /* XOSC1/XOSC2 */\n```\n\n```\n/* GOOD: */\n#if XOSC1\n#  define XOSC XOSC1\n#  define XOSC_NUM 1\n#elif XOSC2\n#  define XOSC XSOC2\n#  define XOSC_NUM 2\n#endif\n```\n\n```\n/* BAD: */\nvoid init_foo(uint32_t param)\n{\n    (void)param;\n    #if HAS_FOO\n    switch (param) {\n    case CASE1:\n        do_foo_init_for_case1;\n        break;\n    #if HAS_CASE_2\n    case CASE2:\n        do_foo_init_for_case2;\n        break;\n        #endif\n    #endif\n}\n```\n\n```\n/* GOOD: */\nvoid init_foo(uint32_t param)\n{\n    (void)param;\n#if HAS_FOO\n    switch (param) {\n    case CASE1:\n        do_foo_init_for_case1;\n        break;\n#  if HAS_CASE_2\n    case CASE2:\n        do_foo_init_for_case2;\n        break;\n#  endif\n#endif\n}\n```\n\n### Reasoning\n\nAdding the indent does improve readability a lot, more than adding comments.\nHence, we prefer the indent to allow reviewers to quickly grasp the structure\nof the code.\n\nAdding spaces before the `#` is not in compliance with the C standard (even\nthough in practice compilers will be just fine with whitespace in front), but\nadding spaces afterwards is standard compliant. In either case, having the `#`\nat the beginning of the line makes it visually stand out from C statements,\nwhich eases reading the code.\n\nUsing an indent width of 2 makes preprocessor directives visually more\ndistinctive from C code, which helps to quickly understand the structure\nof code.\n\n## Includes\n\n* The include of system headers (in <>-brackets) always precedes RIOT specific\n  includes (in quotes).\n* Optional headers must only be included if their corresponding module is\n  selected/being build. In other words: always put an `#ifdef MODULE_...`\n  statement around includes of optional headers:\n```c\n#ifdef MODULE_ABC\n#  include \"abc.h\"\n#endif\n```\n\n### Include What You Use (IWYU)\n\n`#include` directives that are not actually needed should be removed to reduce\nclutter and improve compilation speed. Similar: Try to add the corresponding\n`#include`s for all the functions, macros, types, etc. used and do not rely on\n`bar.h` to implicitly include `foo.h`, unless this is documented behavior.\n\nTools such as [clang's Include Cleaner][clangd-include-cleaner] can help with\nthat. These tools may show false positives in cases where headers are *expected*\nto be included indirectly: E.g. if `foo.h` is the public header that contains\ncommon helpers and implementations, but a per platform `foo_arch.h` is included\nfrom within `foo.h` for platform specific implementations. If in this scenario\nonly functions provided by `foo_arch.h` are included, the `#include` of `foo.h`\nis considered as unused. To avoid this, one should add\n[`/* IWYU pragma: export */`](https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/IWYUPragmas.md) after `#include \"foo_arch.h\"` in `foo.h`.\n\n[clangd-include-cleaner]: https://clangd.llvm.org/design/include-cleaner\n\n## Header Guards\n\nAll files are required to have header guards of the form\n\n```c\n#ifndef PATH_TO_FILE_FILENAME_H\n#define PATH_TO_FILE_FILENAME_H\n\n...\n#endif /* PATH_TO_FILE_FILENAME_H */\n```\n\nRules for generating the guard name:\n\n1. take the file name\n2. if there's ```include/``` in the file's pathname, include the path from there\n   on.\n3. replace \"/\" and \".\" with \"_\"\n4. convert to uppercase letters\n5. if the produced guard starts with \"_\", prefix \"PRIV\"\n\nExamples:\n\n- \"core/include/msg.h\" -> \"MSG_H\"\n- \"sys/include/net/gnrc/pkt.h\" -> NET_GNRC_PKT_H\n- \"drivers/abcd0815/abcd0815_params.h\" -> ABCD0815_PARAMS_H\n- \"sys/module/_internal.h\" -> PRIV_INTERNAL_H\n\nNote: these rules will be enforced by the CI.\n\n## C++ compatibility\n\n* C Header files should be always wrapped for C++ compatibility to prevent\n  issues with name mangling, i.e. mark all the containing functions and\n  definitions as `extern \"C\"`\n``` C\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n... all your function declarations, global variables and defines belong here\n\n#ifdef __cplusplus\n}\n#endif\n```\n\n* use `__restrict` instead of `restrict` in headers (compare\n  https://github.com/RIOT-OS/RIOT/pull/2042)\n\n## Absolute values\n\n* Absolute values must be specified as macros or enums, not as literals, i.e.\n  instead of\n```\nint timeout = 7 * 1000000;\n```\nwrite\n```\nint timeout = TIMEOUT_INTERVAL * USEC_PER_SEC;\n```\n## Comments\n* All comments should be written as C-style comments.\n\nE.g:\n```\n/* This is a C-style comment */\n```\nWrong:\n```\n// C++ comment here\n```\n\n## Documentation\n\n* All documentation must be in English.\n* All files contain the copyright note and the author.\n* Doxygen documentation is mandatory for all header files.\n* Every header file includes a general description about the provided\n  functionality.\n* Every function must be documented - including parameters and return value.\n\nAn exemplary doxygen documentation in a header file can look like this.\n\n```\n/*\n * Copyright (C) 2014 Peter Schmerzl <peter@schmerzl-os.org>\n *\n * This file is subject to the terms and conditions of the GNU Lesser General\n * Public License v2.1. See the file LICENSE in the top level directory for more\n * details.\n */\n\n/**\n * @ingroup     foobar\n * @{\n *\n * @file\n * @brief       Definitions for foo and bar functions.\n *\n * More detailed information about the file and the functionality implemented.\n *\n * @author      Peter Schmerzl <peter@schmerzl-os.org>\n *\n */\n\n/**\n * @brief   Set the state of foobar.\n *\n * @param[in]  state      The new state of foobar.\n * @param[out] old_state  The old state of foobar is written to this variable.\n *\n * @return 1 if setting the state was successful, 0 otherwise.\n */\n int set_foobar(int state, int *old_state);\n```\n\n## Common compilation warnings\n\nSome solutions to correctly handle compilation warnings.\n\n### -Wformat\n\nSolution for string formatting errors:\n\n* When printing a `size_t`\n    * use `PRIuSIZE` from `architecture.h` because `newlib-nano` does not support `%zu`\n* When printing an `unsigned char/uint8_t`\n    * Use `%u` because `newlib-nano` does not support `%hu/PRIu8`\n      [example](https://github.com/RIOT-OS/RIOT/pull/4851)\n* When printing an `uint32_t`\n    * Use `PRIu32` print format\n      [example](https://github.com/RIOT-OS/RIOT/blob/4c74db4e7a6cf1e3be1edb3c10cdba14ba032513/drivers/sx127x/sx127x_getset.c#L126)\n* When printing `64bit` variables\n    * It is not correctly supported by `newlib-nano` as\n      [said here](https://github.com/RIOT-OS/RIOT/issues/1891). It is\n      recommended to use `fmt` module for these.\n      [Example](https://github.com/RIOT-OS/RIOT/blob/e19f6463c09fc22c76c5b855799054cf27a697f1/tests/posix_semaphore/main.c#L277)\n\n### -Wformat-nonliteral\n\nFor a `printf` style function with the following error: `error: format string is\nnot a string literal`.\n\n* Function using a variable number of arguments:\n    * Use `__attribute__((__format__ (__printf__, 3, 4)))`, where here `3` is\n      the number of the argument with the format and `4` the format arguments,\n      starting from 1. See\n      [example](https://github.com/miri64/RIOT/blob/d6cdf4d06f2aeed05dcf86a5437254e2403e147b/pkg/openthread/contrib/platform_logging.c#L31-L32)\n* Function using `va_list`:\n    * Use `__attribute__((__format__ (__printf__, 1, 0)))`, where here `1` is\n      the number of the argument with the format and `0` as there is no variable\n      numbers of arguments. See\n      [example](https://github.com/miri64/RIOT/blob/ad133da2096c44e001ee65071cb36db60a54e215/cpu/native/syscalls.c#L268-L271)\n\n\n## Git\n\n* Make one commit per change.\n* The first line of the commit message describes the main feature of the commit.\n\n## Continuous Integration\n* If the CI tests fail due to errors these errors need to be addressed.\n* If the CI tests fail due to warnings/errors emitted by cppcheck you should try\n  to fix the error. If the error is definitely a false positive there is the\n  possibility to suppress this warning/error. You MUST do so by adding a\n  comment, including a rationale why it is a false positive and why the code\n  can't be fixed otherwise, in the following format:\n```\n    /* cppcheck-suppress <category of error/warning>\n     * (reason: cppcheck is being really silly. this is certainly not a\n     * null-pointer dereference */\n```\n\n## Python coding convention\n\n* Code shall be compliant with Python 3.10 at minimum, because this is the\n  default Python 3 version in Ubuntu 22.04 (used as the reference system for\n  CI).\n* Code shall report no error when running the\n  [Flake8](http://flake8.pycqa.org/en/latest/) tool, e.g:\n    * for style checks described in\n      [PEP 8](https://www.python.org/dev/peps/pep-0008/),\n    * for lint checks provided by\n      [Pyflakes](https://pypi.python.org/pypi/pyflakes),\n    * for complexity checks provided by the\n      [McCabe project](https://pypi.python.org/pypi/mccabe)\n* A line length of maximum of 120 is allowed instead of 79 as per PEP 8. This\n  increases tests readability as they can expects long line of output.\n* Only runnable scripts shall start with `#!/usr/bin/env python3`\n* Runnable scripts shall use the following scheme:\n\n```python\n#!/usr/bin/env python3\n\n# Copyright (C) <your copyright>\n#\n# This file is subject to the terms and conditions of the GNU Lesser\n# General Public License v2.1. See the file LICENSE in the top level\n# directory for more details.\n\n# put the module imports first\n# see https://www.python.org/dev/peps/pep-0008/#imports\n# for more details\nimport module1\nimport module2\n\n# Optional global variables\nGLOBAL_VARIABLE = \"I'm global\"\n\n\n# local functions, if required\ndef local_func():\n    # Put your local function code here\n\n\n# The main function\ndef main_func():\n    # Put your main code here\n\n\nif __name__ == \"__main__\":\n    # Call the main function from here:\n    main_func()\n```\n"
        },
        {
          "name": "CODING_CONVENTIONS_C++.md",
          "type": "blob",
          "size": 9.50390625,
          "content": "You should check out the [C Conventions](CODING_CONVENTIONS.md) as some section\nstill apply (Documentation, Git, Travis).\n\nWhen contributing source code, please adhere to the following coding style,\nwhich is loosely based on the [Google C++ Style Guide] and the coding\n conventions used by the C++ Standard Library. Based on the [CAF coding style].\n\n[Google C++ Style Guide]: (https://google.github.io/styleguide/cppguide.html)\n[CAF coding style]: (https://github.com/actor-framework/actor-framework/blob/master/CONTRIBUTING.md)\n\n## Example for the Impatient\n\n```cpp\n// module/riot/example/my_class.hpp\n\n#ifndef RIOT_EXAMPLE_MY_CLASS_HPP\n#define RIOT_EXAMPLE_MY_CLASS_HPP\n\n#include <string>\n\n// use \"//\" for regular comments and \"///\" for doxygen\n\nnamespace riot {\nnamespace example {\n\n/// This class is only being used as style guide example.\nclass my_class {\npublic:\n    /// Brief description. More description. Note that RIOT uses the\n    /// \"JavaDoc-style\" autobrief option, i.e., everything up until the\n    /// first dot is the brief description.\n    my_class();\n\n    /// Destructs `my_class`. Please use Markdown in comments.\n    ~my_class();\n\n    // suppress redundant @return if you start the brief description with \"Returns\"\n    /// Returns the name of this instance.\n    inline const std::string& name() const {\n        return name_;\n    }\n\n    /// Sets the name of this instance.\n    inline void name(const std::string& new_name) {\n        name_ = new_name;\n    }\n\n    /// Prints the name to `STDIN`.\n    void print_name() const;\n\n    /// Does something (maybe).\n    void do_something();\n\n    /// Does something else.\n    void do_something_else();\n\nprivate:\n    std::string name_;\n};\n\n} // namespace example\n} // namespace riot\n\n#endif // RIOT_EXAMPLE_MY_CLASS_HPP\n```\n\n```cpp\n// my_module/my_class.cpp\n\n#include \"riot/example/my_class.hpp\"\n\n#include <iostream>\n\nnamespace riot {\nnamespace example {\n\nnamespace {\n\nconstexpr const char default_name[] = \"my object\";\n\n} // namespace <anonymous>\n\nmy_class::my_class() : name_(default_name) {\n    // nop\n}\n\nmy_class::~my_class() {\n    // nop\n}\n\nvoid my_class::print_name() const {\n    std::cout << name() << std::endl;\n}\n\nvoid my_class::do_something() {\n    if (name() == default_name) {\n        std::cout << \"You didn't gave me a proper name, so I \"\n                  << \"refuse to do something.\"\n                  << std::endl;\n    } else {\n        std::cout << \"You gave me the name \" << name()\n                  << \"... Do you really think I'm willing to do something \"\n                     \"for you after insulting me like that?\"\n                  << std::endl;\n    }\n}\n\nvoid my_class::do_something_else() {\n    switch (default_name[0]) {\n        case 'a':\n            // handle a\n            break;\n        case 'b':\n            // handle b\n            break;\n        default:\n          handle_default();\n    }\n}\n\n} // namespace example\n} // namespace riot\n\n```\n\n## General\n\n- Use 4 spaces per indentation level.\n\n- The maximum number of characters per line is 80.\n\n- No tabs, ever.\n\n- Never use C-style casts.\n\n- Vertical whitespaces separate functions and are not used inside functions:\n  use comments to document logical blocks.\n\n- Header filenames end in `.hpp`, implementation files end in `.cpp`.\n\n- Never declare more than one variable per line.\n\n- `*` and `&` bind to the *type*, e.g., `const std::string& arg`.\n\n- Namespaces and access modifiers (e.g., `public`) do not increase the\n  indentation level.\n\n- In a class, use the order `public`, `protected`, and then `private`.\n\n- Always use `auto` to declare a variable unless you cannot initialize it\n  immediately or if you actually want a type conversion. In the latter case,\n  provide a comment why this conversion is necessary.\n\n- Never use unwrapped, manual resource management such as `new` and `delete`.\n\n- Never use `typedef`; always write `using T = X` in favor of `typedef X T`.\n\n- Keywords are always followed by a whitespace: `if (...)`, `template <...>`,\n  `while (...)`, etc.\n\n- Opening braces belong to the same line:\n\n  ```cpp\n  void foo() {\n      // ...\n  }\n  ```\n\n- Use standard order for readability: C standard libraries, C++ standard\n  libraries, other libraries, (your) RIOT headers:\n\n  ```cpp\n  // some .hpp file\n\n  #include <sys/types.h>\n\n  #include <vector>\n\n  #include \"3rd/party.h\"\n\n  #include \"riot/fwd.hpp\"\n  ```\n\n  RIOT includes should always be in doublequotes, whereas system-wide\n  includes in angle brackets. In a `.cpp` file, the implemented header always\n  comes first and the header `riot/config.hpp` can be included second if you\n  need platform-dependent headers.\n\n- When declaring a function, the order of parameters is: outputs, then inputs.\n  This follows the parameter order from the STL.\n\n- Protect single-argument constructors with `explicit` to avoid implicit\n  conversions.\n\n## Naming\n\n- All names except macros and template parameters should be\n  lower case and delimited by underscores.\n\n- Template parameter names should be written in CamelCase.\n\n- Types and variables should be nouns, while functions performing an action\n  should be \"command\" verbs. Classes used to implement metaprogramming\n  functions also should use verbs, e.g., `remove_const`.\n\n- Private and protected member variables use the suffix `_` while getter *and*\n  setter functions use the name without suffix:\n\n  ```cpp\n  class person {\n  public:\n      const std::string& name() const {\n          return name_\n      }\n\n      void name(const std::string& new_name) {\n          name_ = new_name;\n      }\n\n  private:\n      std::string name_;\n  };\n  ```\n\n- Use `T` for generic, unconstrained template parameters and `x`\n  for generic function arguments. Suffix both with `s` for\n  template parameter packs:\n\n  ```cpp\n  template <class... Ts>\n  void print(const Ts&... xs) {\n      // ...\n  }\n  ```\n\n\n## Headers\n\n- Each `.cpp` file has an associated `.hpp` file.\n  Exceptions to this rule are unit tests and `main.cpp` files.\n\n- Each class has its own pair of header and implementation\n  files and the relative path for the header file is derived from its full name.\n  For example, the header file for `riot::example::my_class` of module\n  `my_module` is located at `path/to/my_module/riot/example/my_class.hpp`\n  and the source file at `path/to/my_module/my_class.cpp`.\n\n- All header files should use `#define` guards to prevent multiple inclusion.\n  The symbol name is `<RELATIVE>_<PATH>_<TO>_<FILE>_HPP`.\n\n- Do not `#include` when a forward declaration suffices.\n\n- Each library component must provide a `fwd.hpp` header providing forward\n  declarations for all types used in the user API.\n\n- Each library component must provide an `all.hpp` header that contains the\n  main page for the documentation and includes all headers for the user API.\n\n- Use `inline` for small functions (rule of thumb: 10 lines or less).\n\n\n## Breaking Statements\n\n- Break constructor initializers after the comma, use four spaces for\n  indentation, and place each initializer on its own line (unless you don't\n  need to break at all):\n\n  ```cpp\n  my_class::my_class()\n      : my_base_class(some_function()),\n        greeting_(\"Hello there! This is my_class!\"),\n        some_bool_flag_(false) {\n      // ok\n  }\n  other_class::other_class() : name_(\"tommy\"), buddy_(\"michael\") {\n      // ok\n  }\n  ```\n\n- Break function arguments after the comma for both declaration and invocation:\n\n  ```cpp\n  intptr_t channel::compare(const abstract_channel* lhs,\n                            const abstract_channel* rhs) {\n      // ...\n  }\n  ```\n\n- Break before tenary operators and before binary operators:\n\n  ```cpp\n  if (today_is_a_sunny_day()\n      && it_is_not_too_hot_to_go_swimming()) {\n      // ...\n  }\n  ```\n\n\n## Template Metaprogramming\n\nDespite its power, template metaprogramming came to the language pretty\nmuch by accident. Templates were never meant to be used for compile-time\nalgorithms and type transformations. This is why C++ punishes metaprogramming\nwith an insane amount of syntax noise. In RIOT, we make excessive use of\ntemplates. To keep the code readable despite all the syntax noise, we have some\nextra rules for formatting metaprogramming code.\n\n- Brake `using name = ...` statements always directly after `=` if it\n  does not fit in one line.\n\n- Consider the *semantics* of a metaprogramming function. For example,\n  `std::conditional` is an if-then-else construct. Hence, place the if-clause\n  on its own line and do the same for the two cases.\n\n- Use one level of indentation per \"open\" template and place the closing `>`,\n  `>::type` or `>::value` on its own line. For example:\n\n  ```cpp\n  using optional_result_type =\n      typename std::conditional<\n          std::is_same<result_type, void>::value,\n          bool,\n          optional<result_type>\n      >::type;\n  // think of it as the following (not valid C++):\n  auto optional_result_type =\n      conditional {\n          if   result_type == void\n          then bool\n          else optional<result_type>\n      };\n  ```\n\n- Note that this is not necessary when simply defining a type alias.\n  When dealing with \"ordinary\" templates, indenting based on the position of\n  the opening `<` is ok, e.g.:\n\n  ```cpp\n  using response_handle_type = response_handle<Subtype, message,\n                                               ResponseHandleTag>;\n  ```\n\n\n## Preprocessor Macros\n\n- Use macros if and only if you can't get the same result by using inline\n  functions or proper constants.\n\n- Macro names use the form `RIOT_<COMPONENT>_<NAME>`.\n\n\n## Comments\n\n- Doxygen comments start with `///`.\n\n- Use Markdown instead of Doxygen formatters.\n\n- Use `@cmd` rather than `\\cmd`.\n\n- Use `//` to define basic comments that should not be\n  swallowed by Doxygen.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.255859375,
          "content": "# Contributing to RIOT\n\nThank you for your interest in contributing to RIOT! There are many ways to\ncontribute, and we appreciate all of them. You can jump to the major sections\nof this document using the following links:\n\n* [Getting Started][getting-started]\n* [Bug Reports and Feature Requests][issues]\n* [Contributing code][contributing-code]\n* [Writing Documentation][writing-documentation]\n* [Working with Git][working with git]\n\nIf you have questions, please write a post over at our [forum] or chat on\n`#riot-os:matrix.org` on [Matrix].\n\nAs a reminder, all contributors are expected to follow our\n[Code of Conduct](CODE_OF_CONDUCT.md).\n\n[forum]: https://forum.riot-os.org\n[Matrix]: https://matrix.to/#/#riot-os:matrix.org\n\n## Getting Started\n[getting-started]: #getting-started\nIf you are just beginning to work with RIOT you might first want to read our\n[documentation]. Especially the following sections might be of interest to you\n\n- [Getting Started](https://doc.riot-os.org/getting-started.html)\n- [Creating modules](https://doc.riot-os.org/creating-modules.html)\n- [Creating an application](https://doc.riot-os.org/creating-an-application.html)\n\n[documentation]: https://doc.riot-os.org\n\n## Bug reports and feature requests\n[issues]: #bug-reports-and-feature-requests\nBoth bug reports and feature request, big or small, are welcome.\n\nBefore submitting a feature request, please check if an [open issue][existing-feature-request]\nalready exists. If this is not the case, [submit a feature request][feature-request].\nDescribe your use case, why you need this feature and why this feature is important for RIOT.\n\nBefore filing a bug report, please check if an [open issue][existing-bug]\nalready exists. If this is not the case, [submit a new bug report][bug-report].\nIf you're not sure if something is a bug or not, feel free to file a bug report anyway.\n\n**If you believe reporting your bug publicly represents a security risk to\nRIOT users, please send an email describing the bug to <security@riot-os.org>**.\nWe would appreciate waiting for a 6 months grace period before reporting it on\npublic channels, to allow us adequate time to release the fix.\n\n[bug reports]: https://github.com/RIOT-OS/RIOT/issues/new?template=bug_report.md\n[feature requests]: https://github.com/RIOT-OS/RIOT/issues/new?template=feature_request.md\n\n[existing-feature-request]: https://github.com/RIOT-OS/RIOT/issues?q=state:open+type:issue+label:\"Type:+new+feature\"\n[feature-request]: https://github.com/RIOT-OS/RIOT/issues/new?template=feature_request.md&title=Feature+Request:\n[existing-bug]: https://github.com/RIOT-OS/RIOT/issues?q=state:open+type:issue+label:\"Type:+bug\"\n[bug-report]: https://github.com/RIOT-OS/RIOT/issues/new?template=bug_report.md&title=Bug:\n\n## Contributing code\n[contributing-code]: #contributing-code\nIf you think your work should be integrated in the main RIOT repository, take\nthe following steps:\n\n  1. Fork the RIOT git repository (if you haven't done this already).\n  1. Create a branch for your contribution.\n  1. Make sure your code is in compliance with RIOT's [coding conventions].\n  1. Make commits. Make sure to follow RIOT's [commit conventions].\n  1. Push this branch to your fork on GitHub.\n  1. Open a [pull request][open-a-pull-request]. See [pull requests].\n  1. RIOT maintainers will set [labels] and provide feedback.\n  1. Address this feedback. See [working with git].\n  1. Your code is merged in RIOT master branch when it passes review.\n\nBe sure to read the [general tips] below.\n\n[open-an-issue]: https://github.com/RIOT-OS/RIOT/issues?q=state:open+type:issue+label:\"Type:+bug\"\n[labels]: https://github.com/RIOT-OS/RIOT/wiki/RIOT%27s-labeling-system\n[open-a-pull-request]: https://help.github.com/articles/using-pull-requests\n\n### General Tips\n[general tips]: #general-tips\nFrom experience, the following recommendations help to get a software\ncontribution into RIOT master faster:\n\n- **Ask around for help!** Either offline or through one of our communication\n  channels (see above). The earlier you check your feature design with other\n  people, the less likely it is that it is denied during the review process.\n- **Verify your concept early!** If you work on your own until the code\n  *looks* good enough to show publicly, you might miss some design flaws others\n  might have spotted earlier.\n- **Keep it simple!** Try to use what is already there and don't change existing\n  APIs if not absolutely necessary.\n- **Keep it small!** A PR with >1000 lines of changes will very likely make\n  even the most active reviewer put your review on their long to-do list.\n- **Keep it modular!** Make extensions to a feature or new features for a\n  platform optionally to use.\n- **Provide tests!** They should be comprehensible and easy to be executed.\n  Alternatively comprehensive testing procedures should be provided with your\n  pull request.\n\n### Coding conventions\n[coding conventions]: #coding-conventions\n\nRIOT has extensive [coding conventions][coding-conventions].\nIt is possible to check if your code follows these conventions:\n\n* You can [uncrustify] `.c` and `.h` files:\n\n  ```console\n  $ uncrustify -c $RIOTBASE/uncrustify-riot.cfg --no-backup <your file>\n  ```\n\n  **Note**: The `--no-backup` flag makes uncrustify *replace* the current file\n   with a formatted version.\n\n* RIOT provides static test tools to verify the quality of changes (cppcheck,\n  trailing whitespaces, documentation, etc). These tools are wrapped in a\n  single `make` target: `static-test`.\n\n  *Watch out:* the command below will rebase your branch on your master branch,\n  so make sure they can be rebased (e.g. there's no potential conflict).\n\n  ```console\n  $ make static-test\n  ```\n\n  Use it before opening a PR to perform last time checks.\n\n[coding-conventions]: CODING_CONVENTIONS.md\n\n### Commit conventions\n[commit conventions]: #commit-conventions\n\n* Each commit should target changes of specific parts/modules of RIOT. The\n  commits use the following pattern:\n\n  ```\n  area of code: description of changes\n  ```\n\n  You can use multi-line commit messages if you want to detail more the\n  changes.\n  For example:\n\n  ```\n  periph/timer: Document that set_absolute is expected to wrap\n\n  Most timers are implemented this way already, and keeping (documenting)\n  it that way allows the generic timer_set implementation to stay as\n  simple as it is.\n  ```\n\n### Pull Requests\n[pull requests]: #pull-requests\n\nGitHub's Pull Request (PR) feature is the primary mechanism used to make\ncontributions to the RIOT codebase. GitHub itself has some great documentation\non [using the Pull Request feature][about-pull-requests].\nWe use the [fork and pull model][development-models], where contributors push\nchanges to their personal fork and create pull requests to bring those changes\ninto the source repository.\n\n* Before opening a new Pull Request, have a look at\n  [existing ones][existing-pull-requests]. Maybe someone has already opened one\n  about the same thing. If it's the case, you might be able to help with the\n  contribution. Just comment on the PR and ask. Include closed PR's in your\n  search, as previous work might have been closed for lack of interest.\n  Old and stalled [PRs are sometimes archived][archived-pull-requests] with the\n  \"State: archived\" label, maybe one of them is also about the same topic.\n\n* The Pull Request title should reflect what it is about and be in the same form\n  as the [commit conventions].\n\n* Each Pull Request form uses a template that is there to help\n  maintainers understand your contribution and help them in testing it.\n  Please fill each section with as much information as possible.\n\n* We recommend that you leave the *'Allow edits from maintainers'* check box ticked.\n  This will allow maintainer finalizing your PR by pushing in your branch.\n  In general, this speeds up the PR merge in the main repository.\n  Note that this is not an obligation.\n\n* Remember that smaller PRs tend to be merged faster, so keep your changes as\n  concise as possible. They should be confined to a single explainable\n  change, and be runnable on their own. So don't hesitate to split your PRs\n  into smaller ones when possible.\n\n* Maintainers try their best to review every PR as fast as possible, but they\n  are also only human and it can happen that they miss a few PRs or might be\n  preoccupied with other PRs. If it happens that your PR receives no review for\n  a long time, don't hesitate to gently solicit a review by commenting or\n  by explicitly mentioning a maintainer that you know is knowledgeable in the\n  area of the PR. You can also advertise the PR on the [forum] and ask for a\n  review there.\n\n* Try to answer reviews as quickly as possible to speed up the review process\n  and avoid stalled PRs.\n\n[about-pull-requests]: https://help.github.com/articles/about-pull-requests/\n[development-models]: https://help.github.com/articles/creating-a-pull-request-from-a-fork\n[existing-pull-requests]: https://github.com/RIOT-OS/RIOT/pulls\n[archived-pull-requests]: https://github.com/RIOT-OS/RIOT/pulls?q=is:pr+label:\"State:+archived\"\n[uncrustify]: http://uncrustify.sourceforge.net\n\n## Writing Documentation\n[writing-documentation]: #writing-documentation\n\nDocumentation improvements are always welcome and a good starting point for\nnew contributors. This kind of contribution is merged quite quickly in general.\n\nRIOT documentation is built with [doxygen][doxygen]. Doxygen is configured to\nparse header (.h) and `doc.txt` files in the RIOT source code to generate\nthe modules, cpus, boards and packages documentation.\nGeneral documentation pages are written in Markdown and located in\n`doc/doxygen/src`.\n\nTo generate the documentation, simply run the following\nfrom the base directory of the RIOT source code.\n\n```console\n$ make doc\n```\n\nThe generated documentation is located in `doc/doxygen/html`\n\n[doxygen]: http://www.doxygen.nl/\n\n## Working with Git\n[working with git]: #working-with-git\nUsing git is a bit difficult for newcomers. If you are completely new to git,\nwe recommend that you [start by learning it][try-github-io] a bit. You can also\nread the official [getting started documentation][git-scm-getting-started].\n\nIn this section, we give the bare minimum for a better experience with our\ndevelopment workflow on GitHub.\n\n[try-github-io]: https://try.github.io/\n[git-scm-getting-started]: https://git-scm.com/book/en/v2/Getting-Started-Git-Basics\n\n### Setup your local RIOT repository\n\nBefore you start modifying code, you need to fork the RIOT upstream repository\nfrom the [RIOT main GitHub page][riot-github].\n\nIf it's your first time with git, configure your name and emails:\n\n```console\n$ git config --global user.name = \"<your name here>\"\n$ git config --global user.email = \"<your email address here>\"\n```\n\nThen clone locally your fork of RIOT (replace `account name` with your actual\nlogin on GitHub):\n\n```console\n$ git clone git@github.com:<account name>/RIOT.git\n```\n\nYou can keep any branch of your local repository up-to-date with the upstream\nmaster branch with the following commands:\n\n```console\n$ git checkout <branch name>\n$ git pull --rebase https://github.com/RIOT-OS/RIOT.git\n```\n\nUse it before opening a PR. This will at least ensure the PR is mergeable but\nalso that it is up-to-date with the upstream repository.\n\n[riot-github]: https://github.com/RIOT-OS/RIOT\n\n### Work on branches\n\nAvoid opening PR from the `master` branch of your fork to the master branch of\nthe RIOT upstream repository: update your master branch and start a new branch\nfrom it.\n\n```console\n$ git checkout master\n$ git pull --rebase https://github.com/RIOT-OS/RIOT.git\n$ git checkout -b <new branch>\n```\n\nDo your changes, commit, update with latest upstream master\n\n```console\n$ git push\n```\n\n### Add fixup commits during review\n\nTo keep the history of changes easier to track for reviewers, it is recommended\nto push your review request updates in fixup commits.\n\nLet's say your PR contains 3 commits with comments: `prefix1: change 1`,\n`prefix2: change 2` and `prefix3: change 3`.\n\nInstead of committing changes in `prefix2` in a 4th commit `prefix2: change 4`,\nyou can use the `--fixup` option:\n\n```console\n$ git add /path/of/prefix2\n$ git commit --fixup <prefix2 commit hash>\n```\n\n### Squash commits after review\n\nSquashing a commit is done using the rebase subcommand of git in interactive\nmode:\n\n```console\n$ git rebase master -i\n```\n\nYou can find information on rebasing in\n[GitHub rebase documentation][about-git-rebase].\n\n[about-git-rebase]: https://help.github.com/articles/about-git-rebase/\n\nIf you used [fixup commits](#add-fixup-commits-during-review) during the review\nphase, squashing commits can be performed in a single command:\n\n```console\n$ git rebase -i --autosquash\n```\n\n**Watch out: Don't squash your commit until a maintainer asks you to do it.**\n\nOtherwise the history of review changes is lost and for large PRs, it\nmakes it difficult for the reviewer to follow them. It might also happen that\nyou introduce regression and won't be able to recover them from previous\ncommits.\n\nIf you encounter a merge conflict you could either resolve it by hand with an\neditor and use\n\n```console\n$ git add -p\n```\n\nTo add your changes or use a merge tool like [meld](https://meldmerge.org/) to\nresolve your merge conflict.\n\n```console\n$ git mergetool\n```\n\nAfter the merge conflict is resolved you can continue to rebase by using\n\n```console\n$ git rebase --continue\n```\n\nOnce squashing is done, you will have to force push your branch to update the\nPR:\n\n```console\n$ git push --force-with-lease\n```\n"
        },
        {
          "name": "Kconfig",
          "type": "blob",
          "size": 1.099609375,
          "content": "# Copyright (c) 2019 HAW Hamburg\n#\n# This file is subject to the terms and conditions of the GNU Lesser\n# General Public License v2.1. See the file LICENSE in the top level\n# directory for more details.\n#\nmainmenu \"RIOT Configuration\"\n\n# Load macro definitions\nrsource \"kconfigs/Kconfig.consts\"\n\n# For now, get used modules as macros from this file (see kconfig.mk)\nosource \"$(KCONFIG_GENERATED_DEPENDENCIES)\"\n\n# Load first the application configuration, as it may declare symbols in priority\nosource \"$(APPDIR)/Kconfig\"\n\n# Load board configurations, which might override CPU's\norsource \"$(BOARDDIR)/Kconfig\"\norsource \"$(RIOTCPU)/$(CPU)/Kconfig\"\n\nrsource \"$(RIOTBOARD)/Kconfig\"\nrsource \"$(RIOTCPU)/Kconfig\"\n\nrsource \"core/Kconfig\"\nrsource \"drivers/Kconfig\"\nrsource \"sys/Kconfig\"\nrsource \"pkg/Kconfig\"\n\nmenu \"External Modules\"\nosource \"$(KCONFIG_EXTERNAL_MODULE_CONFIGS)\"\nendmenu # External Modules\n\nmenu \"External Packages\"\nosource \"$(KCONFIG_EXTERNAL_PKG_CONFIGS)\"\nendmenu # External Packages\n\ncomment \"Some configuration options may not be here. Use CFLAGS instead.\"\ncomment \"Ideally, make a PR to add them to the Kconfig.\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.904296875,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "LOSTANDFOUND.md",
          "type": "blob",
          "size": 12.9462890625,
          "content": "# Removed Features and Modules\n\nThis document contains a listing of all features and modules that were removed\nfrom RIOT at some point in time, mostly due to missing maintenance. The purpose\nof this list is to have a reference point for reintegrating those features in\nthe future, if new interest arises or a new maintainer is found.\n\nThis list is **not** supposed to contain a change log of all the things that are\nbeing removed from RIOT, but should contain only full modules that are\nremoved without any alternative being merged at the same time. For example\nthings like the first `netdev` should not be put in this list, as a successor\n(former `netdev2`) has been merged.\n\n\n## How to read this list\n\nFor each high-level feature removed there should be one entry in this list. The\nentries should comply to the following template:\n\n~~~~~~~~~~~~~~~~~~~ {.md}\n### path/feature_name [HASH of removal commit]\nAuthor(s):\n- author 1 <foo.bar@abc.com>\n- author 2 <a.b@c.net>\n\nReason for removal:\n- give a short and comprehensive reasoning why this feature was removed\n- typical reasons are:\n- feature is not maintained anymore\n- lack of hardware so feature can not be tested (anymore)\n- feature was never used and there is no reason for keeping it\n~~~~~~~~~~~~~~~~~~~\n\nAdditionally, a link reference for the commit on GitHub is added to the bottom of this document.\n\nBy putting the name of the removed feature and the commit hash in the same line,\none can very quickly find the commit using `git grep`.\n\nListing the authors of the removed code is done for appreciation of their work.\nThis way, their names are never removed from the RIOT repository.\n\n\n# Removed Features\n\n### cpu/mips* [6cad5d24771ba6199228351a11b5062cd2e9b36d]\n\nAuthor:\n- Neil Jones <Neil.Jones@imgtec.com>\n\nReasons for removal:\n- Not maintained anymore\n- Current state is not very useful and nobody claimed to use it\n\n### pkg/libcoap [d83d08f0995a88f399e70a7d07b44dd780082436]\n\nAuthor:\n- Martine Lenders <mlenders@inf.fu-berlin.de>\n\nReasons for removal:\n- Not maintained anymore, no updates for 8 years\n- Upstream libcoap allows building with RIOT, so there is a migration path for users\n\n### sys/net/gnrc/nettest [cdc252ab7bd4161cc046bf93a3e55995704b24d4]\nAuthor:\n- Martine Lenders <mlenders@inf.fu-berlin.de>\n\nReasons for removal:\n- Not maintained anymore\n- Not used in GNRC\n\n### boards/chronos [ed3887ac5c1e95308c2827bce3cdca8b0f146c22]\nAuthor(s):\n- Oliver Hahm <oliver.hahm@inria.fr>\n- Kaspar Schleiser <kaspar@schleiser.de>\n\nReason for removal:\n- board is quite outdated\n- board cannot be automatically tested for lack of UART\n- board has many special cases, which hurt upgrade to msp430-elf-gcc 9.x\n- the onboard radio has been unsupported for a while\n- no one seems to use the board, no one seems to maintain it\n\n### sys/net/gnrc/application_layer/tftp [0e2a62078850e1ecc74db2db4d639cf2d8fb96d3]\nAuthor:\n- DipSwitch <dipswitch@ownage4u.nl>\n\nReasons for removal:\n- Not maintained anymore.\n- Existing quality and security defects.\n\n### pkg/oonf_api [c829f820ee870bffc60c7df688d2da8373553212]\nAuthor:\n- Benjamin Valentin <benpicco@googlemail.com>\n\nReasons for removal:\n- Package has not been update since 2013.\n- Tests were never integrated to the CI.\n- NHDP, which was the only upstream user, has been removed.\n\n### sys/net/routing/nhdp [9026823bb906f64168d7d38e52be92f390353dc8]\nAuthor:\n- Fabian Nack <nack@inf.fu-berlin.de>\n\nReasons for removal:\n- Not maintained anymore.\n- Does not comply with the current RIOT programming practices.\n\n### sys/ubjson [bea30c3f8949ebd9fdf4a9bf0a987652889930f5]\nAuthor(s):\n- René Kijewski <rene.kijewski@fu-berlin.de>\n\nReasons for removal:\n- Unsafe code.\n- Did not comply with RIOT standards.\n- More standard alternatives available (such as CBOR).\n\n### boards/jiminy-mega256rfr2 [232aed3e18118624b862d36bfec7cd1c21ca2d26]\nAuthor:\n- Josua Arndt <jarndt@ias.rwth-aachen.de>\n- Steffen Robertz <steffen.robertz@rwth-aachen.de>\n\nReasons for removal:\n- The board is a custom design at the RWTH Aachen, so only two persons have\n  access to the hardware\n- It was unmaintained for several month now\n- Various refactoring PRs affected the ATmega CPU family have not been tested,\n  it is unclear if the board is actually usable with RIOT\n\n### cpu/mips32r2_generic [a2bcd7539ce1931b7aec0077ea71dadd62c96edd]\nAuthor:\n- Neil Jones <neil.jones@imgtec.com>\n\n- No boards use this CPU (the only one was mips-malta).\n- (Same reasons as mips-malta)\n\n### boards/mips-malta [ee6b6b9c388b78fcec7ba6e239a6c76041b9bbb7]\nAuthor:\n- Neil Jones <neil.jones@imgtec.com>\n\nReasons for removal:\n- UART input not supported.\n- Hardware not available for testing and not available for purchase either.\n- Not actively maintained / broken for some time.\n\n### boards/pca10000 [9447cb303426d7c6348bb84999f88bf929cd6263]\nAuthor(s):\n- Christian Kühling <kuehling@zedat.fu-berlin.de>\n- Timo Ziegler <timo.ziegler@fu-berlin.de>\n- Hauke Petersen <hauke.petersen@fu-berlin.de>\n\nReason for removal:\n- this was an early development board by Nordic which was discontinued (successor: `nrf51dongle`)\n- no hardware available anymore for testing\n\n### boards/pca10005 [ea73cc49eacd45640b9660134c4c92b887cb2716]\nAuthor(s):\n- Christian Kühling <kuehling@zedat.fu-berlin.de>\n- Timo Ziegler <timo.ziegler@fu-berlin.de>\n- Hauke Petersen <hauke.petersen@fu-berlin.de>\n\nReason for removal:\n- this was an early development board by Nordic which was discontinued (successor: `nrf51dk`)\n- no hardware available anymore for testing\n\n### boards/qemu-i386 [99009af25e201bbc182d376e99df34133417be6c]\nAuthor(s):\n- René Kijewski <rene.kijewski@fu-berlin.de>\n\nReason for removal:\n- code broken and excluded from all tests for a long time\n- no maintainer available\n\n### boards/weio [cfa9580f319508f858c8fe30ecce8b2b59b6caa3]\nAuthor(s):\n- Paul Rathgeb <paul.rathgeb@skynet.be>\n\nReason for removal:\n- hardware not available to the community for testing\n- original author and maintainer won't be able to maintain the code\n\n### boards/x86-multiboot-common [b3eb9b8cf23f0702fa725d536df6ad6528f84189]\nAuthor(s):\n- René Kijewski <rene.kijewski@fu-berlin.de>\n\nReason for removal:\n- code broken and excluded from all tests for a long time\n- no maintainer available\n\n\n### cpu/lpc11u34 [7bc271807cecbffbb01a37c56a367b98fb823573]\nAuthor(s):\n- Paul Rathgeb <paul.rathgeb@skynet.be>\n\nReason for removal:\n- hardware not available to the community for testing\n- original author and maintainer won't be able to maintain the code\n\n### cpu/x86 [fc45d7c5ac3d46bfdfb21c243cd3d4881bc5c836]\nAuthor(s):\n- René Kijewski <rene.kijewski@fu-berlin.de>\n\nReason for removal:\n- code broken and excluded from all tests for a long time\n- no maintainer available\n\n### gnrc_pktbuf_duplicate_upto() [b83430aa625a1d42f11f9badf5e5cfbb8efacd99]\nAuthor(s):\n- Takuo Yonezawa <yonezawa.t2@gmail.com>\n- Martine S. Lenders <m.lenders@fu-berlin.de>\n\nReason for removal:\n- broke the abstraction of `gnrc_pktbuf`\n- its only user within the RIOT code base `gnrc_ipv6_ext` was reworked in\n  [f671a87fe2c539c3aecd595ae03fa4f6f209d042] so it is not needed anymore.\n- the function was deprecated in [f2760c033c5f332be076b25aa212aca4007c3d65]\n\n### boards/wsn430-v1_3b, boards/wsn430-v1_4 [e63cd54f3b1e002a7895bb7c46af889b341c1a15]\n\nAuthor(s):\n- Hauke Petersen <hauke.petersen@fu-berlin.de>\n- Martine Lenders <m.lenders@fu-berlin.de>\n- Milan Babel <babel@inf.fu-berlin.de>\n- Oliver Hahm <oliver.hahm@inria.fr>\n\nReason for removal:\n- no longer accessible on the IoT-LAB testbed\n\n### pkg/emb6 [4f243c52eabefe709d78560ce7f1d502d737a999]\nAuthor(s):\n- Martine S. Lenders <m.lenders@fu-berlin.de>\n\nReason for removal:\n- Stale upstream (last update to date in Mar 2018)\n- Ported version even older (last update Feb 2016)\n- Updating to more recent version would be more effort than its worth\n\n### GNRC_NETTYPE_IOVEC [4f243c52eabefe709d78560ce7f1d502d737a999]\nAuthor(s):\n- Martine S. Lenders <m.lenders@fu-berlin.de>\n- Hauke Petersen <devel@haukepetersen.de>\n\nReason for removal:\n- Unused since [9fb2f541baca469e34fa01b004d6f19385700ce9]\n\n### pkg/nordic_softdevice_ble [35b6ccedf31f10a5f8e4f97609ad5b10c28bdc34]\nAuthor(s):\n- Hauke Petersen <hauke.petersen@fu-berlin.de>\n- Kaspar Schleiser <kaspar@schleiser.de>\n- Martine Lenders <m.lenders@fu-berlin.de>\n- Wojciech Bober <wojciech.bober@nordicsemi.no>\n\nReason for removal:\n- Outdated, unmaintained and no longer working\n\n### gnrc_pktbuf_replace_snip() [72821a502f073006643cb4ef7815fc8c42563ce6]\nAuthor(s):\n- Joakim Nohlgård <joakim.nohlgard@eistec.se>\n- Martine S. Lenders <m.lenders@fu-berlin.de>\n\nReason for removal:\n- Unused, untested and no longer needed\n\n### sys/irq_handler [a2dd6f90e51ca9edef643ba72bd1fd18113cf0d2]\nAuthor(s):\n- Gunar Schorcht <gunar@schorcht.net>\n\nReason for removal:\n- Provides some feature as `sys/event_thread`\n- Has been deprecated directly in the first release it was provided\n\n### boards/slwstk6220a [cab1ea66b49e3c72e2827c8686c09d84ae3ef9a9]\nAuthor(s):\n- Hauke Petersen <hauke.petersen@fu-berlin.de>\n- Bas Stottelaar <basstottelaar@gmail.com>\n\nReason for removal:\n- The old implementation of the SLWSTK6220A based on `cpu/ezr32wg` did not use\n  the Gecko SDK, that other EFM32-based boards do use\n- The old implementation had limited peripherals supported\n- New implementation (with the same name) that is based on `cpu/efm32` was\n  added in commit [fe941ac9fe3f81c0f08ff3b8564cf439639abcda]\n\n### boards/fox [81458c8eed8949c686d5ded652dbee10748e860b]\nAuthor(s):\n- Thomas Eichinger <thomas.eichinger@fu-berlin.de>\n\nReason for removal:\n- Hardware not available so can't be tested\n\n[d83d08f0995a88f399e70a7d07b44dd780082436]: https://github.com/RIOT-OS/RIOT/commit/d83d08f0995a88f399e70a7d07b44dd780082436\n[cdc252ab7bd4161cc046bf93a3e55995704b24d4]: https://github.com/RIOT-OS/RIOT/commit/cdc252ab7bd4161cc046bf93a3e55995704b24d4\n[ed3887ac5c1e95308c2827bce3cdca8b0f146c22]: https://github.com/RIOT-OS/RIOT/commit/ed3887ac5c1e95308c2827bce3cdca8b0f146c22\n[0e2a62078850e1ecc74db2db4d639cf2d8fb96d3]: https://github.com/RIOT-OS/RIOT/commit/0e2a62078850e1ecc74db2db4d639cf2d8fb96d3\n[c829f820ee870bffc60c7df688d2da8373553212]: https://github.com/RIOT-OS/RIOT/commit/c829f820ee870bffc60c7df688d2da8373553212\n[9026823bb906f64168d7d38e52be92f390353dc8]: https://github.com/RIOT-OS/RIOT/commit/9026823bb906f64168d7d38e52be92f390353dc8\n[bea30c3f8949ebd9fdf4a9bf0a987652889930f5]: https://github.com/RIOT-OS/RIOT/commit/bea30c3f8949ebd9fdf4a9bf0a987652889930f5\n[232aed3e18118624b862d36bfec7cd1c21ca2d26]: https://github.com/RIOT-OS/RIOT/commit/232aed3e18118624b862d36bfec7cd1c21ca2d26\n[a2bcd7539ce1931b7aec0077ea71dadd62c96edd]: https://github.com/RIOT-OS/RIOT/commit/a2bcd7539ce1931b7aec0077ea71dadd62c96edd\n[ee6b6b9c388b78fcec7ba6e239a6c76041b9bbb7]: https://github.com/RIOT-OS/RIOT/commit/ee6b6b9c388b78fcec7ba6e239a6c76041b9bbb7\n[9447cb303426d7c6348bb84999f88bf929cd6263]: https://github.com/RIOT-OS/RIOT/commit/9447cb303426d7c6348bb84999f88bf929cd6263\n[ea73cc49eacd45640b9660134c4c92b887cb2716]: https://github.com/RIOT-OS/RIOT/commit/ea73cc49eacd45640b9660134c4c92b887cb2716\n[99009af25e201bbc182d376e99df34133417be6c]: https://github.com/RIOT-OS/RIOT/commit/99009af25e201bbc182d376e99df34133417be6c\n[cfa9580f319508f858c8fe30ecce8b2b59b6caa3]: https://github.com/RIOT-OS/RIOT/commit/cfa9580f319508f858c8fe30ecce8b2b59b6caa3\n[b3eb9b8cf23f0702fa725d536df6ad6528f84189]: https://github.com/RIOT-OS/RIOT/commit/b3eb9b8cf23f0702fa725d536df6ad6528f84189\n[7bc271807cecbffbb01a37c56a367b98fb823573]: https://github.com/RIOT-OS/RIOT/commit/7bc271807cecbffbb01a37c56a367b98fb823573\n[fc45d7c5ac3d46bfdfb21c243cd3d4881bc5c836]: https://github.com/RIOT-OS/RIOT/commit/fc45d7c5ac3d46bfdfb21c243cd3d4881bc5c836\n[b83430aa625a1d42f11f9badf5e5cfbb8efacd99]: https://github.com/RIOT-OS/RIOT/commit/b83430aa625a1d42f11f9badf5e5cfbb8efacd99\n[f671a87fe2c539c3aecd595ae03fa4f6f209d042]: https://github.com/RIOT-OS/RIOT/commit/f671a87fe2c539c3aecd595ae03fa4f6f209d042\n[f2760c033c5f332be076b25aa212aca4007c3d65]: https://github.com/RIOT-OS/RIOT/commit/f2760c033c5f332be076b25aa212aca4007c3d65\n[e63cd54f3b1e002a7895bb7c46af889b341c1a15]: https://github.com/RIOT-OS/RIOT/commit/e63cd54f3b1e002a7895bb7c46af889b341c1a15\n[4f243c52eabefe709d78560ce7f1d502d737a999]: https://github.com/RIOT-OS/RIOT/commit/4f243c52eabefe709d78560ce7f1d502d737a999\n[3cac6e0979468ba56659291fd1cd11096611589d]: https://github.com/RIOT-OS/RIOT/commit/3cac6e0979468ba56659291fd1cd11096611589d\n[9fb2f541baca469e34fa01b004d6f19385700ce9]: https://github.com/RIOT-OS/RIOT/commit/9fb2f541baca469e34fa01b004d6f19385700ce9\n[35b6ccedf31f10a5f8e4f97609ad5b10c28bdc34]: https://github.com/RIOT-OS/RIOT/commit/35b6ccedf31f10a5f8e4f97609ad5b10c28bdc34\n[72821a502f073006643cb4ef7815fc8c42563ce6]: https://github.com/RIOT-OS/RIOT/commit/72821a502f073006643cb4ef7815fc8c42563ce6\n[a2dd6f90e51ca9edef643ba72bd1fd18113cf0d2]: https://github.com/RIOT-OS/RIOT/commit/a2dd6f90e51ca9edef643ba72bd1fd18113cf0d2\n[cab1ea66b49e3c72e2827c8686c09d84ae3ef9a9]: https://github.com/RIOT-OS/RIOT/commit/cab1ea66b49e3c72e2827c8686c09d84ae3ef9a9\n[fe941ac9fe3f81c0f08ff3b8564cf439639abcda]: https://github.com/RIOT-OS/RIOT/commit/fe941ac9fe3f81c0f08ff3b8564cf439639abcda\n[81458c8eed8949c686d5ded652dbee10748e860b]: https://github.com/RIOT-OS/RIOT/commit/81458c8eed8949c686d5ded652dbee10748e860b\n"
        },
        {
          "name": "MAINTAINING.md",
          "type": "blob",
          "size": 8.8671875,
          "content": "# RIOT Maintainer Guidelines\n\nThis list presents a series of technical and non-technical guidelines for maintainers.\nThe list is not exhaustive, it represents a baseline on\nthings that should be ensured for contributions.\n\nNotes:\n-   Any of the items in this list can be skipped, if clearly and logically\n    articulated reasons are presented.\n-   The order of the steps is meant to maximize efficiency and minimize\n    overhead, with the philosophy that failing in step n makes steps n+x\n    obsolete. However, this efficiency can depend on the quality of the\n    submission itself. If the PR (Pull Request) is clearly not in a reviewable\n    state (for example, due to poor code cleanliness or overall design), it\n    might be more efficient to give the contributor some broader comments for\n    improvement before further review.\n-   This is a working document: any changes, additions, or other discussions\n    are encouraged, via PRs raised against the document. Changes to this\n    document should have at least two ACKs, to ensure these guidelines\n    are well thought out, and that they reflect community consensus.\n\nThe [list of maintainers] gives information on the current maintainers and the\nareas of RIOT they each maintain.\n\n\n## Technical guidelines\n\n### 1. - Review the fundamentals\n\nBefore spending the time on an in-depth code review, it's important to assess\nthe overall validity of the PR.\n\n1.  Does the reasoning for this PR make sense? \\\n    Are the requirements and design goals clearly thought out and clearly\n    expressed? \\\n    Is the problem that the PR intends to solve clearly stated?\n2.  Is the solution presented in the PR as simple as possible to satisfy the\n    requirements, but no simpler?\n3.  Is the PR a manageable size? It should be confined to a single explainable\n    change, and be runnable on its own.\n4.  Is the solution well designed on a high level?\n5.  Do the concepts used by the PR make sense?\n6.  Does the PR break with existing concepts?\n7.  Is there a clean commit history in the pulled branch? The commit history\n    should group the code differences cleanly.\n8.  Are there clear and adequate instructions on how to test the PR? \\\n    This may or may not include implemented tests as part of the PR.\n9.  Does the code compile and run?\n10. Does this PR respect the rights of previous authors, either through\n    retaining their commits or by retaining their copyrights in the boilerplate\n    headers?\n11. Is the PR a duplicate of another PR?\n\n\n### 2. - Review the design of the code\n\nThe following list is not exhaustive, it addresses the coding issues we have\nregularly seen in the past. In particular, check that the [Best Practices]\nare followed. These checks can be aided (but not replaced) by a tool such as\nCoccinelle, using the script found in dist/tools/coccinelle.\n\n1.  Check for code duplication\n2.  [Check memory usage][Comparing build sizes]\n3.  Check all code paths\n4.  Check for API compliance\n5.  Check for consistent error handling\n6.  Check scope of variables and functions\n7.  Check for syntactical, semantical or logical errors\n8.  Check for any runtime efficiency improvements that can be made in specific\n    lines of code - i.e., without changing the overall design of the code\n9.  Check that the code design is as simple as possible to solve the problem,\n    but no simpler\n\n\n### 3. - Test the PR\n\nRun tests to verify the correct behavior (see 1.6), both on `native` and on a\nfew selected boards, or present clearly and logically articulated reasons for\nskipping some/all tests.\n\n\n### 4. - Review the code against the coding conventions\n\nCheck that the code follows the [Coding Conventions]. This can be aided (but not\nreplaced) by Uncrustify, using the uncrustify-riot.cfg file found in the base\ndirectory. Note the difference between personal coding style, which is allowed\nsubject to the other guidelines, and the coding conventions, which are absolute\nand must always be followed.\n\n\n### 5. - Review the documentation\n\nThe aim of the documentation is to ensure that the code can be picked up as\neasily as possible in the future. Ideally, the documentation is sufficiently\ncomplete that no input from the original developer or maintainer is required.\n\n1.  Check for sufficient high-level (module-level) documentation\n2.  Verify function level documentation\n3.  Are critical/hard to understand parts in the code documented?\n4.  Check grammar and spelling of documentation\n\n## Non-technical guidelines\n\n### Interaction with contributors\n\n-   Be responsive. Even if you are too busy to review the contribution, try to\n    add a note fairly soon after the PR is submitted, thanking them for their\n    valuable contribution and saying that you will review it in due course. Once\n    the contributor has made their changes, ensure you reply to them in a\n    reasonable timeframe. Acknowledge their replies to concerns if you're happy\n    with their argument.\n-   Be helpful. Give precise and correct advice when possible and when it will\n    help the contributor. This can include code snippets, links to\n    code/issues/wiki entries/web pages, or anything else. Educating contributors\n    means we are investing in our community.\n-   Be friendly. Respect the original author, bearing in mind that their coding\n    style or their design may be just as valid as the way you would have done\n    it and of course, always follow the [Code of Conduct].\n-   If a contributor has opened a PR, the reviewer should attempt to\n    help the author of the contribution to get it to its best shape and\n    according to the RIOT Standard™. If there is disagreement, it’s important\n    to understand the reasons behind and always give technical arguments,\n    pros and cons or snippets.\n\n\n### Organisation of reviewing between maintainers\n\n#### Partial review\n\nYou can review a PR partially. This would involve reviewing all points in one or\nmore sections outlined in the [technical guidelines](#technical-guidelines).\nIn that case, please do not \"approve\" the PR to prevent accidental merges.\nRather, give your verbal ACK and describe what you reviewed. In addition, if you\nprocessed or reasonably stepped over a whole section, mark the PR with the\naccording label from the \"Reviewed:\" category. If you set a label by stepping\nover a section, please articulate your reasoning for this clearly, as noted in\nthe [introduction](#introduction). This will help other maintainers to\nbetter understand your line of thought. If you disagree with the assessment of\na previous review, you may remove a certain \"Reviewed:\" label. Please state your\nreasoning in this case as well.\n\nWhen all \"Reviewed:\" labels are set you may give your approval for the PR.\n\nAs for everything in this document this is a \"CAN\", not a \"MUST\": It might help\nother maintainers to track your work, but if the overhead isn't justified, a\nsimple approving ACK might suffice.\n\n#### Github etiquette\n\nIt is good etiquette to describe what you reviewed, even if you gave the PR a\nfull review and gave your approval. This way the contributor and other\nmaintainers are able to follow your thought process.\n\nMaintainers should only assign themselves to PRs and shouldn't assign other\nmaintainers. You can however request reviews from other maintainers or\ncontributors, either by mentioning them in a comment or selecting them in\nGitHub's review sidebar.\n\nIf there are multiple maintainers reviewing a PR, always give the other\nmaintainers reasonable time to ACK before dismissing their review.\n\n### Release, Feature Freeze, and Backports\n\nBefore the official release of a new RIOT version, two feature freeze periods\nare announced on the\n[RIOT development email list](https://lists.riot-os.org/mailman/listinfo/devel):\nThe soft feature freeze and the hard feature freeze. During the soft feature\nfreeze only PRs with minor impact should be merged into master. The hard feature\nfreeze begins when the release manager creates a new release branch. Therefore,\nthe restriction on merging PRs into the master branch are lifted at that point.\n\nOnce the release branch is created, no backports of new features will be\naccepted. Instead, backports should consist only of bug fixes or of reverting\nfeatures that were added during the last development period (and not part of any\nrelease), but didn't reach the required maturity or API stability yet. For\nbigger changes (which explicitly includes any revert), the PR has to be\nannounced to the maintainer mailing list and should be merged no sooner than\n48h after the announcement and needs at least two ACKs.\n\nIn case of security relevant backports (both bug fixes and reverts), the\nannouncement can be skipped and the fix merged once at least two ACKs are\nthere.\n\n[list of maintainers]: https://riot-os.org/maintainers.html\n[Best Practices]: https://doc.riot-os.org/dev-best-practices.html\n[Comparing build sizes]: https://doc.riot-os.org/advanced-build-system-tricks.html#comparing-build-sizes\n[Coding Conventions]: CODING_CONVENTIONS.md\n[Code of Conduct]: https://github.com/RIOT-OS/RIOT/blob/master/CODE_OF_CONDUCT.md\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.1123046875,
          "content": ".all:\n\n.PHONY: all doc doc-man doc-latex docclean print-versions welcome\n\nall: welcome\n\t@echo \"\"\n\t@exit 1\n\ndoc:\n\t@./dist/tools/features_yaml2mx/features_yaml2mx.py \\\n\t\tfeatures.yaml \\\n\t\t--output-md doc/doxygen/src/feature_list.md\n\t\"$(MAKE)\" -BC doc/doxygen\n\ndoc-man:\n\t\"$(MAKE)\" -BC doc/doxygen man\n\ndoc-latex:\n\t\"$(MAKE)\" -BC doc/doxygen latex\n\ndocclean:\n\t\"$(MAKE)\" -BC doc/doxygen clean\n\nclean:\n\t@echo \"Cleaning all build products for the current board\"\n\t@for dir in $(APPLICATION_DIRS); do \"$(MAKE)\" -C$$dir clean; done\n\npkg-clean:\n\t@echo \"Cleaning all package sources\"\n\trm -rf build/pkg\n\ndistclean: docclean pkg-clean\n\t@echo \"Cleaning all build products\"\n\t@for dir in $(APPLICATION_DIRS); do \"$(MAKE)\" -C$$dir distclean; done\n\nprint-versions:\n\t@./dist/tools/ci/print_toolchain_versions.sh\n\ngenerate-features:\n\t@./dist/tools/features_yaml2mx/features_yaml2mx.py \\\n\t\tfeatures.yaml \\\n\t\t--output-makefile makefiles/features_existing.inc.mk\n\ninclude makefiles/boards.inc.mk\ninclude makefiles/app_dirs.inc.mk\n\ninclude makefiles/tools/riotgen.inc.mk\n-include makefiles/tests.inc.mk\n\ninclude makefiles/color.inc.mk\n\n# Prints a welcome message\ndefine welcome_message\n\t@echo \"Welcome to RIOT - The friendly OS for IoT!\"\n\t@echo \"\"\n\t@echo \"You executed 'make' from the base directory.\"\n\t@echo \"Usually, you should run 'make' in your application's directory instead.\"\n\t@echo \"\"\n\t@echo \"Please see our Quick Start Guide at:\"\n\t@echo \"    https://doc.riot-os.org/getting-started.html\"\n\t@echo \"You can ask questions or discuss with other users on our forum:\"\n\t@echo \"    https://forum.riot-os.org\"\n\t@echo \"\"\n\t@echo \"Available targets for the RIOT base directory include:\"\n\t@echo \" generate-{board,driver,example,module,pkg,test,features}\"\n\t@echo \" info-{applications,boards,emulated-boards} info-applications-supported-boards\"\n\t@echo \" print-versions\"\n\t@echo \" clean distclean pkg-clean\"\n\t@echo \" doc doc-{man,latex}\"\n\t@echo \"\"\n\t@echo \"==> tl;dr Try running:\"\n\t@echo \"    cd examples/default\"\n\t@echo \"    make BOARD=<INSERT_BOARD_NAME>\"\nendef\n\nwelcome:\n\t$(call welcome_message)\n\n.DEFAULT:\n\t@echo '*** ERROR: unrecognized target \"$@\"'\n\t@echo \"\"\n\t$(call welcome_message)\n\t@exit 1\n"
        },
        {
          "name": "Makefile.base",
          "type": "blob",
          "size": 6.6806640625,
          "content": "ifeq (, $(__RIOTBUILD_FLAG))\n  $(error You cannot build a module on its own. Use \"make\" in your application's directory instead.)\nendif\n\n#\n# enable second expansion of prerequisites.\n#\n# Doing that here enables it globally for all modules\n#\n# See https://www.gnu.org/software/make/manual/html_node/Secondary-Expansion.html\n# for what it can be used for.\n.SECONDEXPANSION:\n\nunexport DIRS\nDIRS := $(sort $(abspath $(DIRS)))\n\n_MOD := $(shell basename $(CURDIR))\nMODULE ?= $(_MOD)\n\n.PHONY: all clean $(DIRS:%=ALL--%) $(DIRS:%=CLEAN--%) $(MODULE).module \\\n        compile-commands $(DIRS:%=COMPILE-COMMANDS--%) $(MODULE).cleanup\n\nall: $(MODULE).module ..nothing\n\n..nothing:\n\t@:\n\nclean:: $(DIRS:%=CLEAN--%)\n\n$(DIRS:%=ALL--%):\n\t$(QQ)\"$(MAKE)\" -C $(@:ALL--%=%)\n\n$(DIRS:%=CLEAN--%):\n\t$(QQ)\"$(MAKE)\" -C $(@:CLEAN--%=%) clean\n\n$(DIRS:%=COMPILE-COMMANDS--%):\n\t$(QQ)\"$(MAKE)\" -C $(@:COMPILE-COMMANDS--%=%) compile-commands\n\n## submodules\nifeq (1, $(SUBMODULES))\n  # don't use *.c as SRC if SRC is empty (e.g., no module selected)\n  NO_AUTO_SRC := 1\n\n  # allow different submodule basename (e.g., MODULE=cpu_periph_common, but match just periph_%)\n  BASE_MODULE ?= $(MODULE)\n\n  # for each $(BASE_MODULE)_<name> in USEMODULE, add <name>.c to SRC\n  # unless in SUBMODULES_NO_SRC\n  SRC += $(wildcard \\\n            $(filter-out $(SUBMODULES_NO_SRC),\\\n                $(patsubst $(BASE_MODULE)_%,%.c,\\\n                    $(filter $(BASE_MODULE)_%,$(USEMODULE)))))\n\n  # remove duplicates\n  SRC := $(sort $(SRC))\nendif\n\n# By default consider C++ files has a .cpp extension\nSRCXXEXT ?= cpp\n\nifeq ($(strip $(SRC))$(NO_AUTO_SRC),)\n  SRC := $(filter-out $(SRC_NOLTO), $(wildcard *.c))\nendif\nifeq ($(strip $(SRCXX))$(NO_AUTO_SRC),)\n  SRCXX := $(filter-out $(SRCXXEXCLUDE),$(wildcard *.$(SRCXXEXT)))\nendif\nifeq ($(strip $(ASMSRC))$(NO_AUTO_SRC),)\n  ASMSRC := $(wildcard *.s)\nendif\nifeq ($(strip $(ASSMSRC))$(NO_AUTO_SRC),)\n  ASSMSRC := $(wildcard *.S)\nendif\n\n\nifneq (,$(SRCXX))\n  ifeq (,$(filter cpp,$(USEMODULE)))\n    $(error Found C++ source, but feature \"cpp\" is not used. Add \"FEATURES_REQUIRED += cpp\")\n  endif\nendif\n\ncompile-commands: | $(DIRS:%=COMPILE-COMMANDS--%)\n\t$(file >$(BINDIR)/$(MODULE)/compile_cmds.txt,SRC: $(sort $(SRC) $(SRC_NO_LTO)))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,SRC_NO_LTO: $(sort $(SRC_NO_LTO)))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,SRCXX: $(sort $(SRCXX)))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,CURDIR: $(CURDIR))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,CFLAGS: $(CFLAGS))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,LTOFLAGS: $(LTOFLAGS))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,INCLUDES: $(INCLUDES))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,CXXFLAGS: $(CXXFLAGS))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,CXXINCLUDES: $(CXXINCLUDES))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,CC: $(CC))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,CXX: $(CXX))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,TARGET_ARCH: $(TARGET_ARCH))\n\t$(file >>$(BINDIR)/$(MODULE)/compile_cmds.txt,TARGET_ARCH_LLVM: $(TARGET_ARCH_LLVM))\n\nGENOBJC     := $(GENSRC:%.c=%.o)\nOBJC_LTO    := $(SRC:%.c=$(BINDIR)/$(MODULE)/%.o)\nOBJC_NOLTO  := $(SRC_NOLTO:%.c=$(BINDIR)/$(MODULE)/%.o)\nOBJC        := $(OBJC_NOLTO) $(OBJC_LTO)\nOBJCXX      := $(SRCXX:%.$(SRCXXEXT)=$(BINDIR)/$(MODULE)/%.o)\nASMOBJ      := $(ASMSRC:%.s=$(BINDIR)/$(MODULE)/%.o)\nASSMOBJ     := $(ASSMSRC:%.S=$(BINDIR)/$(MODULE)/%.o)\n\nOBJ := $(OBJC) $(OBJCXX) $(ASMOBJ) $(ASSMOBJ) $(GENOBJC)\nDEP := $(OBJC:.o=.d) $(OBJCXX:.o=.d) $(ASSMOBJ:.o=.d)\n\nSRC_ALL := $(SRC) $(SRCXX) $(ASMSRC) $(ASSMSRC)\nSUBDIRS_IN_DIRS := $(filter $(DIRS), $(abspath $(sort $(dir $(SRC_ALL)))))\nifneq (,$(SUBDIRS_IN_DIRS))\n  $(warning Files of the following subdirectories are selected \\\n    both as RIOT modules (using DIRS) and directly as sourcefiles (using SRC): \\\n    $(patsubst $(CURDIR)/%,./%, $(SUBDIRS_IN_DIRS)). \\\n    Please select a single approach for each subfolder to prevent linking errors.)\nendif\nSUBDIRS := $(sort $(filter-out $(BINDIR)/$(MODULE)/, $(dir $(OBJ))))\n\ninclude $(RIOTMAKE)/blob.inc.mk\ninclude $(RIOTMAKE)/tools/fixdep.inc.mk\n\n$(BINDIR)/$(MODULE)/ $(SUBDIRS):\n\t$(Q)mkdir -p $@\n\nOLD_OBJECTS = $(wildcard $(BINDIR)/$(MODULE)/*.o $(BINDIR)/$(MODULE)/**/*.o)\n\n# do not clean objects from bindist modules\nifeq (,$(filter $(MODULE),$(BIN_USEMODULE)))\n  OBJECTS_TO_REMOVE = $(filter-out $(OBJ),$(OLD_OBJECTS))\nendif\n\n$(MODULE).module compile-commands $(OBJ): | $(BINDIR)/$(MODULE)/ $(SUBDIRS)\n\n$(MODULE).module: $(OBJ) $(if $(OBJECTS_TO_REMOVE),$(MODULE).cleanup) | $(DIRS:%=ALL--%)\n\n$(MODULE).cleanup:\n\t$(Q)# cleanup non selected source files objects\n\t$(Q)$(RM) $(OBJECTS_TO_REMOVE)\n\nCXXFLAGS = $(filter-out $(CXXUWFLAGS), $(CFLAGS)) $(CXXEXFLAGS)\nCCASFLAGS = $(filter-out $(CCASUWFLAGS), $(CFLAGS)) $(CCASEXFLAGS)\n\n# compile and generate dependency info\n\n$(OBJC_LTO): CFLAGS+=$(LTOFLAGS)\n\n# Define dependencies for object files\nOBJ_DEPS += $(RIOTBUILD_CONFIG_HEADER_C)\n\n$(OBJC): $(BINDIR)/$(MODULE)/%.o: %.c $(OBJ_DEPS) | $(if $(SHOULD_RUN_KCONFIG),$(KCONFIG_GENERATED_AUTOCONF_HEADER_C))\n\t$(Q)$(CCACHE) $(CC) \\\n\t\t-DRIOT_FILE_RELATIVE=\\\"$(patsubst $(RIOTBASE)/%,%,$(abspath $<))\\\" \\\n\t\t-DRIOT_FILE_NOPATH=\\\"$(notdir $<)\\\" \\\n\t\t$(CFLAGS) $(INCLUDES) -MQ '$@' -MD -MP -c -o $@ $(abspath $<)\nifneq (,$(SHOULD_RUN_KCONFIG))\n\t$(Q)$(FIXDEP) $(@:.o=.d) $@ $(KCONFIG_SYNC_DIR) > $(@:.o=.tmp)\n\t$(Q)mv $(@:.o=.tmp) $(@:.o=.d)\nendif\n\n$(GENOBJC): %.o: %.c $(OBJ_DEPS) | $(if $(SHOULD_RUN_KCONFIG),$(KCONFIG_GENERATED_AUTOCONF_HEADER_C))\n\t$(Q) $(CCACHE) $(CC) \\\n\t\t-DRIOT_FILE_RELATIVE=\\\"$(patsubst $(RIOTBASE)/%,%,$<)\\\" \\\n\t\t-DRIOT_FILE_NOPATH=\\\"$(notdir $<)\\\" \\\n\t\t$(CFLAGS) $(INCLUDES) -MQ '$@' -MD -MP -c -o $@ $<\nifneq (,$(SHOULD_RUN_KCONFIG))\n\t$(Q)$(FIXDEP) $(@:.o=.d) $@ $(KCONFIG_SYNC_DIR) > $(@:.o=.tmp)\n\t$(Q)mv $(@:.o=.tmp) $(@:.o=.d)\nendif\n\n$(OBJCXX): $(BINDIR)/$(MODULE)/%.o: %.$(SRCXXEXT) $(OBJ_DEPS) | $(if $(SHOULD_RUN_KCONFIG),$(KCONFIG_GENERATED_AUTOCONF_HEADER_C))\n\t$(Q)$(CCACHE) $(CXX) \\\n\t\t-DRIOT_FILE_RELATIVE=\\\"$(patsubst $(RIOTBASE)/%,%,$(abspath $<))\\\" \\\n\t\t-DRIOT_FILE_NOPATH=\\\"$(notdir $<)\\\" \\\n\t\t$(CXXFLAGS) $(CXXINCLUDES) $(INCLUDES) -MQ '$@' -MD -MP -c -o $@ $(abspath $<)\nifneq (,$(SHOULD_RUN_KCONFIG))\n\t$(Q)$(FIXDEP) $(@:.o=.d) $@ $(KCONFIG_SYNC_DIR) > $(@:.o=.tmp)\n\t$(Q)mv $(@:.o=.tmp) $(@:.o=.d)\nendif\n\n$(ASMOBJ): $(BINDIR)/$(MODULE)/%.o: %.s\n\t$(Q)$(AS) $(ASFLAGS) -o $@ $(abspath $<)\n\n$(ASSMOBJ): $(BINDIR)/$(MODULE)/%.o: %.S $(OBJ_DEPS) | $(if $(SHOULD_RUN_KCONFIG),$(KCONFIG_GENERATED_AUTOCONF_HEADER_C))\n\t$(Q)$(CCAS) $(CCASFLAGS) $(INCLUDES) -MQ '$@' -MD -MP -c -o $@ $(abspath $<)\nifneq (,$(SHOULD_RUN_KCONFIG))\n\t$(Q)$(FIXDEP) $(@:.o=.d) $@ $(KCONFIG_SYNC_DIR) > $(@:.o=.tmp)\n\t$(Q)mv $(@:.o=.tmp) $(@:.o=.d)\nendif\n\n# pull in dependency info for *existing* .o files\n# deleted header files will be silently ignored\n-include $(DEP)\n"
        },
        {
          "name": "Makefile.dep",
          "type": "blob",
          "size": 2.96875,
          "content": "# include board specific application dependencies\n-include $(APPDIR)/Makefile.board.dep\n-include $(APPDIR)/Makefile.$(TOOLCHAIN).dep\n\n# include board dependencies\n-include $(BOARDDIR)/Makefile.dep\n\n# include cpu dependencies\n-include $(RIOTCPU)/$(CPU)/Makefile.dep\n\n# include external modules dependencies\n# processed before RIOT ones to be evaluated before the 'default' rules.\n-include $(EXTERNAL_MODULE_PATHS:%=%Makefile.dep)\n\n# pull dependencies from sys and drivers\ninclude $(RIOTBASE)/sys/Makefile.dep\ninclude $(RIOTBASE)/drivers/Makefile.dep\n\n# pull Makefile.dep of each driver modules if they exist\n-include $(sort $(USEMODULE:%=$(RIOTBASE)/drivers/%/Makefile.dep))\n\n# pull Makefile.dep of each sys modules if they exist\n-include $(sort $(USEMODULE:%=$(RIOTBASE)/sys/%/Makefile.dep))\n\n# pull dependencies from packages\n-include $(PKG_PATHS:%=%Makefile.dep)\n\nifneq (,$(filter mpu_stack_guard,$(USEMODULE)))\n  FEATURES_REQUIRED += cortexm_mpu\nendif\n\nifneq (,$(filter mpu_noexec_ram,$(USEMODULE)))\n  FEATURES_REQUIRED += cortexm_mpu\nendif\n\nifneq (,$(filter pmp_noexec_ram,$(USEMODULE)))\n  FEATURES_REQUIRED += periph_pmp\nendif\n\nifneq (,$(filter lwip_%,$(USEMODULE)))\n  USEPKG += lwip\nendif\n\nifneq (,$(filter libfixmath-unittests,$(USEMODULE)))\n  USEPKG += libfixmath\n  USEMODULE += libfixmath\nendif\n\nifneq (,$(filter spiffs,$(USEMODULE)))\n  USEPKG += spiffs\n  USEMODULE += vfs\n  USEMODULE += spiffs_fs\n  USEMODULE += mtd\nendif\n\nifneq (,$(filter littlefs,$(USEMODULE)))\n  USEPKG += littlefs\n  USEMODULE += vfs\n  USEMODULE += littlefs_fs\n  USEMODULE += mtd\nendif\n\nifneq (,$(filter littlefs2,$(USEMODULE)))\n  USEPKG += littlefs2\n  USEMODULE += vfs\n  USEMODULE += littlefs2_fs\n  USEMODULE += mtd\nendif\n\nifneq (,$(filter fatfs_vfs,$(USEMODULE)))\n  USEPKG += fatfs\n  USEMODULE += vfs\nendif\n\nifneq (,$(filter lwext%_vfs,$(USEMODULE)))\n  USEPKG += lwext4\n  USEMODULE += vfs\nendif\n\nifneq (,$(filter nimble_%,$(USEMODULE)))\n  USEPKG += nimble\nendif\n\nifneq (,$(filter tlsf-malloc,$(USEMODULE)))\n  USEPKG += tlsf\nendif\n\nifneq (,$(filter tinydtls_sock_dtls, $(USEMODULE)))\n    USEPKG += tinydtls\nendif\n\nifneq (,$(filter flashdb_%,$(USEMODULE)))\n  USEPKG += flashdb\nendif\n\nifneq (,$(filter tinyusb_%, $(USEMODULE)))\n  USEPKG += tinyusb\nendif\n\n# always select gpio (until explicit dependencies are sorted out)\nFEATURES_OPTIONAL += periph_gpio\n\n# always select power management unless building the bootloader\n# pm is not needed by the bootloader and omitting it saves some ROM\nifneq (1, $(RIOTBOOT_BUILD))\n  FEATURES_OPTIONAL += periph_pm\nendif\n\n# don't use idle thread if architecture has needed support\nFEATURES_OPTIONAL += no_idle_thread\n\nifneq (,$(filter libstdcpp,$(FEATURES_USED)))\n  # Also use C++ if libstdc++ is used\n  USEMODULE += cpp\n  USEMODULE += libstdcpp\nendif\n\nifneq (,$(filter cpp,$(FEATURES_USED)))\n  # Also use C++ if libstdc++ is used\n  USEMODULE += cpp\nendif\n\nifneq (,$(filter test_utils_interactive_sync,$(USEMODULE)))\n  ifneq (,$(filter shell,$(USEMODULE)))\n    DEFAULT_MODULE += test_utils_interactive_sync_shell\n  endif\nendif\n"
        },
        {
          "name": "Makefile.features",
          "type": "blob",
          "size": 1.3857421875,
          "content": "# Process provided FEATURES\n#\n# The board/board common are responsible for defining the CPU and CPU_MODEL\n# variables in their Makefile.features.\n# This makes them available when setting features based on CPU_MODEL in the cpu\n# Makefile.features and also during dependency resolution.\n\n# Transition:\n#   Moving 'CPU/CPU_MODEL' to Makefile.features is an ongoing work and may not\n#   reflect the state of all boards for the moment.\n\ninclude $(BOARDDIR)/Makefile.features\n\n# Sanity check\nifeq (,$(CPU))\n  $(error $(BOARD): CPU must be defined by board / board_common Makefile.features)\nendif\n\ninclude $(RIOTCPU)/$(CPU)/Makefile.features\n\n# Provide CPU as a feature to allow listing all boards with a CPU\nFEATURES_PROVIDED += cpu_$(CPU)\n\n# Features that are conflicting for all architectures\nFEATURES_CONFLICT += picolibc:newlib\nFEATURES_CONFLICT_MSG += \"Only one standard C library can be used.\"\n\nFEATURES_CONFLICT += periph_gpio_irq:periph_gpio_ll_irq\nFEATURES_CONFLICT_MSG += \"Only one GPIO IRQ implementation can be used.\"\n\nFEATURES_CONFLICT += periph_usbdev:tinyusb_device\nFEATURES_CONFLICT += periph_usbdev:tinyusb_host\nFEATURES_CONFLICT_MSG += \"Package tinyUSB is not yet compatible with periph_usbdev.\"\n\n# Features provided implicitly\nifneq (,$(filter periph_eth,$(FEATURES_PROVIDED)))\n  FEATURES_PROVIDED += netif_ethernet\nendif\n\nifneq (,$(filter netif_%,$(FEATURES_PROVIDED)))\n  FEATURES_PROVIDED += netif\nendif\n"
        },
        {
          "name": "Makefile.include",
          "type": "blob",
          "size": 36.9765625,
          "content": "MATCH_MAKE_VERSION = 4.%\n\nMAKEFLAGS += --no-builtin-rules\n\nifeq (,$(filter $(MATCH_MAKE_VERSION),$(MAKE_VERSION)))\n  $(error GNU Make $(MAKE_VERSION) is not supported by RIOT since release \\\n      2020.01. Please upgrade your system to use GNU Make \\\n      $(MATCH_MAKE_VERSION) or later.)\nendif\n\n#\n# enable second expansion of prerequisites.\n#\n# Doing that here enables it globally for all applications.\n#\n# See https://www.gnu.org/software/make/manual/html_node/Secondary-Expansion.html\n# for what it can be used for.\n.SECONDEXPANSION:\n\n# Will evaluate to the absolute path of the Makefile it's evaluated in.¹\n#\n# This variable MUST be immediately evaluated (tmp_var := $(LAST_MAKEFILEDIR))\n# unless it is used directly.\n#\n# [1] Note that this will in fact return the path of the last Makefile that\n# was included, so it must be evaluated before any subsequent includes.\nLAST_MAKEFILEDIR = $(abspath $(dir $(lastword $(MAKEFILE_LIST))))\n\n# 'Makefile.include' directory, must be evaluated before other 'include'\n_riotbase := $(LAST_MAKEFILEDIR)\n\n# include RIOT_MAKEFILES_GLOBAL_PRE configuration files\n# allows setting user specific system wide configuration parsed before the body\n# of $(RIOTBASE)/Makefile.include\ninclude $(RIOT_MAKEFILES_GLOBAL_PRE)\n\n# Globally set default goal to `all`\n.DEFAULT_GOAL := all\n\n# include Makefile.local if it exists\n-include Makefile.local\n\n# set undefined variables\nRIOTBASE                        ?= $(_riotbase)\nRIOTCPU                         ?= $(RIOTBASE)/cpu\n# Deprecated to set RIOTBOARD, use EXTERNAL_BOARD_DIRS\nRIOTBOARD                       ?= $(RIOTBASE)/boards\nEXTERNAL_BOARD_DIRS             ?=\nRIOTMAKE                        ?= $(RIOTBASE)/makefiles\nRIOTKCONFIG                     ?= $(RIOTBASE)/kconfigs\nRIOTPKG                         ?= $(RIOTBASE)/pkg\nEXTERNAL_PKG_DIRS               ?=\nRIOTTOOLS                       ?= $(RIOTBASE)/dist/tools\nRIOTPROJECT                     ?= $(shell git rev-parse --show-toplevel 2>/dev/null || pwd)\nBUILD_DIR                       ?= $(RIOTBASE)/build\nAPPDIR                          ?= $(CURDIR)\nBINDIRBASE                      ?= $(APPDIR)/bin\nBINDIR                          ?= $(BINDIRBASE)/$(BOARD)\nPKGDIRBASE                      ?= $(BUILD_DIR)/pkg\nDLCACHE                         ?= $(RIOTTOOLS)/dlcache/dlcache.sh\nDLCACHE_DIR                     ?= $(RIOTBASE)/.dlcache\nRIOT_VERSION_DUMMY_CODE         ?= RIOT_VERSION_NUM\\(2042,5,23,0\\)\n\n# include CI info such as BOARD_INSUFFICIENT_MEMORY, if existing\n-include Makefile.ci\n\n__DIRECTORY_VARIABLES := \\\n  RIOTBASE \\\n  RIOTCPU \\\n  RIOTMAKE \\\n  RIOTPKG \\\n  RIOTTOOLS \\\n  RIOTPROJECT \\\n  APPDIR \\\n  BUILD_DIR \\\n  BINDIRBASE \\\n  BINDIR \\\n  PKGDIRBASE \\\n  DLCACHE_DIR \\\n  #\n\n# In GNU make command line is supposed to override the value set in makefile\n# These variables can be overridden even when set from command line\n__OVERRIDE_DIRECTORY_VARIABLES := $(__DIRECTORY_VARIABLES)\n# Use absolute paths in recursive \"make\" even if overridden on command line.\nMAKEOVERRIDES += $(foreach v,$(__OVERRIDE_DIRECTORY_VARIABLES),$(v)=$($(v)))\n\n# Setting EXTERNAL_BOARD_DIRS and EXTERNAL_MODULE_DIRS as command line argument\n# is too messy to handle: Even when every path in EXTERNAL_BOARD_DIRS is turned\n# into an absolute path using override, sub-makes will still get the original\n# value. Using MAKEOVERRIDES has issues with spaces in the values, which are\n# used as separator in EXTERNAL_BOARD_DIRS. So we just enforce setting the value\n# either in a Makefile, or as environment variable.\nifeq ($(INSIDE_DOCKER),0)\n  # In Docker absolute paths are always given, so only fail when not in docker\n  ifeq ($(origin EXTERNAL_BOARD_DIRS),command line)\n    $(error EXTERNAL_BOARD_DIRS must be passed as environment variable, and not as command line argument)\n  endif\n  ifeq ($(origin EXTERNAL_MODULE_DIRS),command line)\n    $(error EXTERNAL_MODULE_DIRS must be passed as environment variable, and not as command line argument)\n  endif\n  ifeq ($(origin EXTERNAL_PKG_DIRS),command line)\n    $(error EXTERNAL_PKG_DIRS must be passed as environment variable, and not as command line argument)\n  endif\nendif\n\n# Deprecation of configuring 'RIOTBOARD'\nifneq ($(abspath $(RIOTBASE)/boards),$(abspath $(RIOTBOARD)))\n  $(warning overriding RIOTBOARD for external boards is deprecated, use EXTERNAL_BOARD_DIRS instead)\n  override RIOTBOARD      := $(abspath $(RIOTBOARD))\n  __DIRECTORY_VARIABLES += RIOTBOARD\nendif\n\n# Only warn users, not the CI.\nifneq ($(RIOT_CI_BUILD),1)\n  # Do not warn when set from sub-make\n  ifeq ($(MAKELEVEL),0)\n    ifneq (,$(BOARDSDIR))\n      $(warning Using BOARDSDIR is deprecated use EXTERNAL_BOARD_DIRS instead)\n    endif\n  endif\nendif\n\n# Needed for backward compatibility:\nifneq (,$(BOARDSDIR))\n  EXTERNAL_BOARD_DIRS += $(BOARDSDIR)\nendif\n\n# Make all paths absolute.\noverride RIOTBASE               := $(abspath $(RIOTBASE))\noverride RIOTCPU                := $(abspath $(RIOTCPU))\noverride RIOTMAKE               := $(abspath $(RIOTMAKE))\noverride RIOTPKG                := $(abspath $(RIOTPKG))\noverride RIOTTOOLS              := $(abspath $(RIOTTOOLS))\noverride RIOTPROJECT            := $(abspath $(RIOTPROJECT))\noverride APPDIR                 := $(abspath $(APPDIR))\noverride BUILD_DIR              := $(abspath $(BUILD_DIR))\noverride BINDIRBASE             := $(abspath $(BINDIRBASE))\noverride BINDIR                 := $(abspath $(BINDIR))\noverride PKGDIRBASE             := $(abspath $(PKGDIRBASE))\noverride DLCACHE_DIR            := $(abspath $(DLCACHE_DIR))\nEXTERNAL_BOARD_DIRS             := $(foreach dir,\\\n                                             $(EXTERNAL_BOARD_DIRS),\\\n                                             $(abspath $(dir)))\nEXTERNAL_MODULE_DIRS            := $(foreach dir,\\\n                                             $(EXTERNAL_MODULE_DIRS),\\\n                                             $(abspath $(dir)))\nEXTERNAL_PKG_DIRS               := $(foreach dir,\\\n                                             $(EXTERNAL_PKG_DIRS),\\\n                                             $(abspath $(dir)))\n\n# Ensure that all directories are set and don't contain spaces.\nifneq (, $(filter-out 1, $(foreach v,$(__DIRECTORY_VARIABLES),$(words $($(v))))))\n  $(info Aborting compilation for your safety.)\n  $(info Related variables = $(__DIRECTORY_VARIABLES))\n  $(error Make sure no path override is empty or contains spaces!)\nendif\n\n# Path to the current directory relative to RIOTPROJECT\n# trailing '/' is important when RIOTPROJECT == CURDIR\nBUILDRELPATH ?= $(patsubst $(RIOTPROJECT)/%,%,$(CURDIR)/)\n\n# Set CLEAN to \"clean\" if that target was requested.\n# Allows recipes to be run after cleaning, without triggering it implicitly:\n#\n# all: | $(CLEAN)\n#\nCLEAN = $(filter clean, $(MAKECMDGOALS))\n\n# include makefiles utils tools\ninclude $(RIOTMAKE)/utils/variables.mk\ninclude $(RIOTMAKE)/utils/strings.mk\n\n# include nimble makefile tools\ninclude $(RIOTMAKE)/pkg/nimble.adv.mk\n\n# UNAME is always needed so use simple variable expansion so only evaluated once\nUNAME := $(shell uname -m -s)\nOS = $(word 1, $(UNAME))\nOS_ARCH = $(word 2, $(UNAME))\n\n# set python path, e.g. for tests\nPYTHONPATH := $(RIOTBASE)/dist/pythonlibs/:$(PYTHONPATH)\n\n# Basic utilities included before anything else\ninclude $(RIOTMAKE)/utils/checks.mk\n\n# Include Docker settings near the top because we need to build the environment\n# command line before some of the variable origins are overwritten below when\n# using abspath, strip etc.\ninclude $(RIOTMAKE)/docker.inc.mk\n\n# include color echo macros\ninclude $(RIOTMAKE)/utils/ansi.mk\ninclude $(RIOTMAKE)/color.inc.mk\n\n# include concurrency helpers\ninclude $(RIOTMAKE)/info-nproc.inc.mk\n\n# List of boards variables\ninclude $(RIOTMAKE)/boards.inc.mk\n\n# Debug targets for build system migration\ninclude $(RIOTMAKE)/dependencies_debug.inc.mk\n\n# Use TOOLCHAIN environment variable to select the toolchain to use.\nifneq (,$(filter native native64,$(BOARD)))\n  ifeq ($(OS),Darwin)\n    $(shell $(COLOR_ECHO) \"$(COLOR_RED)\"Buildin on macOS is not supported.\"\\\n                          \"We recommend vagrant for building:$(COLOR_RESET)\"\\\n                          \"https://github.com/RIOT-OS/RIOT/blob/master/dist/tools/vagrant/README.md 1>&2)\n  endif\nendif\n# Use override so that we can redefine a variable set on the command line (as\n# opposed to one set in the environment)\nifeq (clang,$(TOOLCHAIN))\n  # TOOLCHAIN = clang is an alias for TOOLCHAIN = llvm\n  override TOOLCHAIN := llvm\nendif\nifeq (gcc,$(TOOLCHAIN))\n  # TOOLCHAIN = gcc is an alias for TOOLCHAIN = gnu\n  override TOOLCHAIN := gnu\nendif\nifeq (,$(TOOLCHAIN))\n  override TOOLCHAIN := gnu\nendif\n\ninclude $(RIOTMAKE)/cargo-settings.inc.mk\n\nGLOBAL_GOALS += buildtest \\\n                buildtest-indocker \\\n                info-boards-features-blacklisted \\\n                info-boards-features-conflicting \\\n                info-boards-features-missing \\\n                info-boards-supported \\\n                info-buildsizes info-buildsizes-diff \\\n                generate-Makefile.ci \\\n                #\n\nifneq (, $(filter $(GLOBAL_GOALS), $(MAKECMDGOALS)))\n  include $(RIOTMAKE)/info-global.inc.mk\n  include $(RIOTMAKE)/buildtests.inc.mk\nelse\n\nall: link\n\n# Folders to search: First the external boards, than the official\nBOARDSDIRS := $(EXTERNAL_BOARD_DIRS) $(RIOTBOARD)\n\n# Take the first folder in $(BOARDSDIRS) that contains a folder named $(BOARD)\nBOARDDIR := $(word 1,$(foreach dir,$(BOARDSDIRS),$(wildcard $(dir)/$(BOARD)/.)))\n# Sanitize folder\nBOARDDIR := $(abspath $(BOARDDIR))\n\n# Also provide BOARDSDIR for compatibility and for accessing common folders\n# (e.g. include $(BOARDSDIR)/common/external_common/Makefile.dep)\nBOARDSDIR := $(dir $(BOARDDIR))\n\nifeq (,$(BOARDDIR))\n  $(info Folders searched for the board: $(BOARDSDIRS))\n  $(error The specified board $(BOARD) does not exist.)\nendif\n\ninclude $(RIOTMAKE)/info.inc.mk\n\n# Static code analysis tools provided by LLVM\ninclude $(RIOTMAKE)/scan-build.inc.mk\n\nexport RIOTBUILD_CONFIG_HEADER_C = $(BINDIR)/riotbuild/riotbuild.h\n\nifeq ($(OS),Darwin)\n  OPEN   := open\nelse\n  OPEN   := xdg-open\nendif\n\nQUIET ?= 1\nQUIETER ?= 0\n\nifeq ($(QUIET),1)\n  Q=@\n  MAKEFLAGS += --no-print-directory\nelse\n  Q=\nendif\n\n# Set this to 1 to enable pretty-printing the assert location in addition\n# to the address of the failing assert.\n# This saves you to resolve the address manually with addr2line at the cost\n# of greater ROM consumption.\nVERBOSE_ASSERT ?= 0\nifeq ($(VERBOSE_ASSERT),1)\n  CFLAGS += -DDEBUG_ASSERT_VERBOSE\n  DEVELHELP := 1\nendif\n\n# Set this to 1 to enable code in RIOT that does safety checking\n# which is not needed in a production environment but helps in the\n# development process:\nDEVELHELP ?= 0\nifeq ($(DEVELHELP),1)\n  CFLAGS += -DDEVELHELP\nendif\n\n# Set this to 1 to enable thread names\nTHREAD_NAMES ?= 0\nifeq ($(THREAD_NAMES),1)\n  CFLAGS += -DCONFIG_THREAD_NAMES\nendif\n\n# Override LOG_LEVEL if variable is set and if CFLAGS doesn't already contain\n# a LOG_LEVEL config\nifdef LOG_LEVEL\n  ifeq (,$(filter -DLOG_LEVEL=%,$(CFLAGS)))\n    CFLAGS += -DLOG_LEVEL=$(LOG_LEVEL)\n  endif\nendif\n\n# Fail on warnings. Can be overridden by `make WERROR=0`.\nWERROR ?= 1\nifeq ($(WERROR),1)\n  CFLAGS += -Werror\nendif\n\nWPEDANTIC ?= 0\nifeq ($(WPEDANTIC),1)\n  CFLAGS += -Wpedantic\nendif\n\n# Provide a shallow sanity check. You cannot call `make` in a module directory.\nexport __RIOTBUILD_FLAG := RIOT\n\nBOARD := $(strip $(BOARD))\nAPPLICATION := $(strip $(APPLICATION))\n\n# provide common external programs for `Makefile.include`s\n\nifeq (,$(and $(DOWNLOAD_TO_STDOUT),$(DOWNLOAD_TO_FILE)))\n  ifeq (,$(WGET))\n    ifeq (0,$(shell which wget > /dev/null 2>&1 ; echo $$?))\n      WGET = $(call memoized,WGET,$(shell which wget))\n    endif\n  endif\n  ifeq (,$(CURL))\n    ifeq (0,$(shell which curl > /dev/null 2>&1 ; echo $$?))\n      CURL = $(call memoized,CURL,$(shell which curl))\n    endif\n  endif\n  ifeq (,$(WGET)$(CURL))\n    $(warning Neither wget nor curl is installed!)\n  endif\n\n  ifeq (,$(DOWNLOAD_TO_STDOUT))\n    DOWNLOAD_TO_STDOUT ?= $(if $(CURL),$(CURL) -s,$(WGET) -q -O-)\n  endif\n  ifeq (,$(DOWNLOAD_TO_FILE))\n    DOWNLOAD_TO_FILE ?= $(if $(WGET),$(WGET) -nv -c -O,$(CURL) -s -o)\n  endif\nendif\n\nifeq (,$(UNZIP_HERE))\n  ifeq (0,$(shell which unzip > /dev/null 2>&1 ; echo $$?))\n    UNZIP_HERE = $(call memoized,UNZIP_HERE,$(shell which unzip) -q)\n  else\n    ifeq (0,$(shell which 7z > /dev/null 2>&1 ; echo $$?))\n      UNZIP_HERE = $(call memoized,UNZIP_HERE,$(shell which 7z) x -bd)\n    else\n      $(warning Neither unzip nor 7z is installed.)\n    endif\n  endif\nendif\n\n# Tool saving stdin to a file only on content update.\n# It keeps the file timestamp if it would end up the same.\nLAZYSPONGE ?= $(RIOTTOOLS)/lazysponge/lazysponge.py\nLAZYSPONGE_FLAGS ?= $(if $(filter 1,$(QUIET)),,--verbose)\n\nifeq (, $(APPLICATION))\n    $(error An application name must be specified as APPLICATION.)\nendif\n\n# default toolchain prefix, defaults to target triple followed by a dash, you\n# will most likely not need to touch this.\nexport PREFIX ?= $(if $(TARGET_ARCH),$(TARGET_ARCH)-)\n\n# set default PROGRAMMER value if flashing a board on IoT-LAB\n# This must be done before parsing the Makefile.include of the board and cannot\n# be done in makefile.iotlab.single.inc.mk which is included after.\nifneq (,$(IOTLAB_NODE))\n  PROGRAMMER ?= iotlab\n  # iotlab uses ELFFILE by default for flashing boards.\n  FLASHFILE ?= $(ELFFILE)\n  # Disable IOTLAB_NODE if inside Docker to avoid including the\n  # iotlab.single.inc.mk file which is useless there: it's only useful for\n  # flashing and this is done outside of Docker.\n  ifeq (1,$(INSIDE_DOCKER))\n    IOTLAB_NODE :=\n  endif\nendif\n\n# Add standard include directories\nINCLUDES += -I$(RIOTBASE)/core/lib/include\nINCLUDES += -I$(RIOTBASE)/core/include\nINCLUDES += -I$(RIOTBASE)/drivers/include\nINCLUDES += -I$(RIOTBASE)/sys/include\n\n# process provided features\ninclude $(RIOTBASE)/Makefile.features\n\nifneq ($(RIOT_CI_BUILD),1)\n  # Warn about used deprecated boards\n  include $(RIOTMAKE)/deprecated_boards.inc.mk\n  include $(RIOTMAKE)/deprecated_cpus.inc.mk\nendif\n\n# mandatory includes!\ninclude $(RIOTMAKE)/pseudomodules.inc.mk\ninclude $(RIOTMAKE)/defaultmodules_regular.inc.mk\n\n# Include Kconfig functionalities\ninclude $(RIOTMAKE)/kconfig.mk\n\n# always select provided architecture features\nFEATURES_REQUIRED += $(filter arch_%,$(FEATURES_PROVIDED))\n# always select CPU core features\nFEATURES_REQUIRED += $(filter cpu_core_%,$(FEATURES_PROVIDED))\n\n# check if required features are provided and update $(FEATURES_USED)\ninclude $(RIOTMAKE)/features_check.inc.mk\n\n# handle removal of default modules\nUSEMODULE += $(filter-out $(DISABLE_MODULE), $(DEFAULT_MODULE))\n\n# avoid recursive expansion\nUSEMODULE := $(sort $(USEMODULE))\n\n# process dependencies\ninclude $(RIOTMAKE)/dependency_resolution.inc.mk\n\n# Include dfu-util configuration when using riotboot_dfu bootloader before\n# including the board's Makefile.include which could define dfu-util\n# configuration for other DFU bootloaders in use.\ninclude $(RIOTMAKE)/boot/riotboot_dfu-util.mk\n\n# Include Board and CPU configuration\nINCLUDES += $(addprefix -I,$(wildcard $(BOARDDIR)/include))\ninclude $(BOARDDIR)/Makefile.include\nINCLUDES += -I$(RIOTCPU)/$(CPU)/include\ninclude $(RIOTCPU)/$(CPU)/Makefile.include\n\n# Include common serial logic to define TERMPROG, TERMFLAGS variables based on\n# the content of RIOT_TERMINAL\ninclude $(RIOTMAKE)/tools/serial.inc.mk\n\n# Include emulator code when required and if available\nifeq (1,$(EMULATE))\n  # Use renode as default emulator\n  RIOT_EMULATOR ?= renode\n  -include $(RIOTMAKE)/tools/$(RIOT_EMULATOR).inc.mk\n  TERMDEPS += $(EMULATORDEPS)\n  DEBUGDEPS += $(EMULATORDEPS)\nendif\n\n# Include common programmer logic if available\n-include $(RIOTMAKE)/tools/$(PROGRAMMER).inc.mk\n\n# Check if programmer is supported by the board, only if PROGRAMMERS_SUPPORTED\n# is set and if programmer is not iotlab\nifneq ($(RIOT_CI_BUILD),1)\n  ifneq (iotlab,$(PROGRAMMER))\n    ifneq (,$(PROGRAMMERS_SUPPORTED))\n      ifeq (,$(filter $(PROGRAMMER),$(PROGRAMMERS_SUPPORTED)))\n        $(warning '$(PROGRAMMER)' programmer is not supported by this board. \\\n                Supported programmers: '$(PROGRAMMERS_SUPPORTED)')\n      endif\n    endif\n  endif\nendif\n\n# Assume GCC/GNU as supported toolchain if CPU's Makefile.include doesn't\n# provide this macro\nTOOLCHAINS_SUPPORTED ?= gnu\n# Import all toolchain settings\ninclude $(RIOTMAKE)/toolchain/$(TOOLCHAIN).inc.mk\n\n# Other than on native, RWX segments in ROM are not actually RWX, as regular\n# store instructions won't write to flash.\nifeq (,$(filter native native64,$(BOARD)))\n  LINKER_SUPPORTS_NOWARNRWX ?= $(shell LC_ALL=C $(LINK) $(RIOTTOOLS)/testprogs/minimal_linkable.c -o /dev/null -lc -Wall -Wextra -pedantic -Wl,--no-warn-rwx-segments 2> /dev/null && echo 1 || echo 0)\n  ifeq (1,$(LINKER_SUPPORTS_NOWARNRWX))\n    LINKFLAGS += -Wl,--no-warn-rwx-segments\n  endif\nendif\n\n# Append ldscript path after importing CPU and board makefiles to allow\n# overriding the core ldscripts\nLINKFLAGS += -L$(RIOTBASE)/core/ldscripts\n\n# include undefined behaviour sanitizer (UBSAN) support\ninclude $(RIOTMAKE)/ubsan.inc.mk\n\n# Tell ccache to pass the original file to the compiler, instead of passing the\n# preprocessed code. Without this setting, the compilation will fail with\n# -Wimplicit-fallthrough warnings even when the fall through case is properly\n# commented because the preprocessor has stripped the comments from the code.\n# This also fixes some other false warnings when compiling with LLVM/Clang.\n# The environment variable only affects builds with ccache (e.g. on CI/Murdock).\n# Non cached builds are not affected in any way.\n# For more information, see http://petereisentraut.blogspot.com/2011/09/ccache-and-clang-part-2.html\nexport CCACHE_CPP2=yes\n\n# set some settings useful for continuous integration builds\nifeq ($(RIOT_CI_BUILD),1)\n    RIOT_VERSION ?= buildtest\n    # set a dummy version number\n    RIOT_VERSION_CODE ?= $(RIOT_VERSION_DUMMY_CODE)\n    ifneq ($(filter $(BOARD_INSUFFICIENT_MEMORY), $(BOARD)),)\n        RIOTNOLINK:=1\n    endif\n    # be more quiet when building for CI\n    QUIETER=1\nendif\n\nifeq ($(QUIETER),1)\n  QQ=@\nelse\n  QQ=\nendif\n\n# if you want to publish the board into the sources as an uppercase #define\nBOARDDEF = $(call uppercase_and_underscore,$(BOARD))\nCPUDEF = $(call uppercase_and_underscore,$(CPU))\nCFLAGS += -DRIOT_APPLICATION=\\\"$(APPLICATION)\\\"\nCFLAGS += -DBOARD_$(BOARDDEF)=\\\"$(BOARD)\\\" -DRIOT_BOARD=BOARD_$(BOARDDEF)\nCFLAGS += -DCPU_$(CPUDEF)=\\\"$(CPU)\\\" -DRIOT_CPU=CPU_$(CPUDEF)\n\n# Feature test default CFLAGS and LINKFLAGS for the set compiled.\ninclude $(RIOTMAKE)/cflags.inc.mk\n\n# Include VERSION for releases\n-include $(RIOTBASE)/VERSION\n-include $(RIOTBASE)/EXTRAVERSION\n\ninclude $(RIOTMAKE)/git_version.inc.mk\nRIOT_VERSION ?= $(or $(GIT_VERSION),'UNKNOWN (builddir: $(RIOTBASE))')\nRIOT_EXTRAVERSION ?= 0\n\n# Deprecate using RIOT_VERSION_OVERRIDE but currently keep the behavior\nifneq (,$(RIOT_VERSION_OVERRIDE))\n  $(warning 'RIOT_VERSION_OVERRIDE' is deprecated, it can now be set with 'RIOT_VERSION' directly.)\n  RIOT_VERSION = $(RIOT_VERSION_OVERRIDE)\nendif\n\n# Generate machine readable RIOT VERSION macro\nRIOT_VERSION_CODE ?= $(shell echo $(RIOT_VERSION) | \\\n                      sed -E 's/([0-9]+)\\.([0-9]+)\\.?([0-9]+)?.*/RIOT_VERSION_NUM\\\\\\(\\1,\\2,0\\3,$(RIOT_EXTRAVERSION)\\\\\\)/' | \\\n                      grep RIOT_VERSION_NUM || echo \"$(RIOT_VERSION_DUMMY_CODE)\")\n\n# Set module by prepending APPLICATION name with 'application_'.\n# It prevents conflict with application and modules with the same name.\nAPPLICATION_MODULE ?= application_$(APPLICATION)\n\n# the binaries to link\nBASELIBS += $(APPLICATION_MODULE).module\nBASELIBS += $(APPDEPS)\n\n\n# add extra include paths for packages in $(USEMODULE)\nUSEMODULE_INCLUDES =\n\ninclude $(RIOTBASE)/sys/Makefile.include\n\n# add default board_init()\nDIRS += $(RIOTBASE)/boards/common/init\n\n# include Makefile.includes of each driver modules if they exist\n-include $(USEMODULE:%=$(RIOTBASE)/drivers/%/Makefile.include)\n\n# include Makefile.includes for packages in $(PKG_PATHS)\n-include $(PKG_PATHS:%=%Makefile.include)\n\n# include external modules configuration\n-include $(EXTERNAL_MODULE_PATHS:%=%Makefile.include)\n\n# Deduplicate includes without sorting them\n# see https://stackoverflow.com/questions/16144115/makefile-remove-duplicate-words-without-sorting\ndefine uniq\n  $(eval seen :=)\n  $(foreach _,$1,$(if $(filter $_,$(seen)),,$(eval seen += $_)))\n  $(seen)\nendef\n\nUSEMODULE_INCLUDES_ = $(strip $(call uniq,$(USEMODULE_INCLUDES)))\n\nINCLUDES += $(USEMODULE_INCLUDES_:%=-I%)\n\n\n# include bindist target\ninclude $(RIOTMAKE)/bindist.inc.mk\n\n# Add all USEMODULE modules to CFLAGS and populate BASELIBS\ninclude $(RIOTMAKE)/modules.inc.mk\n\n\n.PHONY: all link clean flash flash-only termdeps term doc debug debug-server reset objdump help info-modules\n.PHONY: print-size elffile lstfile binfile hexfile flashfile cosy\n.PHONY: ..in-docker-container\n\n# Targets that depend on FORCE will always be rebuilt. Contrary to a .PHONY\n# target, they are considered real files and the modification timestamp is taken\n# into account.\n#\n# FORCE is useful for goals that may keep outputs unchanged (for example, if it\n# depends on environment or configuration variables). If the goal were .PHONY, it\n# would trigger a rebuild of all its dependents regardless of file modification.\n#\n# As general rule, use .PHONY only for non-file targets.\n#\n# For more information, see:\n# https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html\n# https://www.gnu.org/software/make/manual/html_node/Force-Targets.html\n.PHONY: FORCE\n\nifneq (,$(IOTLAB_NODE))\n  # iot-lab archi mapping\n  include $(RIOTBASE)/dist/testbed-support/makefile.iotlab.archi.inc.mk\n  ifneq (,$(IOTLAB_ARCHI))\n    # iot-lab serial and flasher\n    include $(RIOTBASE)/dist/testbed-support/makefile.iotlab.single.inc.mk\n  else\n    $(info $(COLOR_YELLOW)Board \"$(BOARD)\" incompatible with IOTLAB_NODE variable$(COLOR_RESET))\n  endif\nendif\n\nELFFILE ?= $(BINDIR)/$(APPLICATION).elf\nHEXFILE ?= $(ELFFILE:.elf=.hex)\nBINFILE ?= $(ELFFILE:.elf=.bin)\nHASHFILE ?= $(BINFILE)\nMAPFILE ?= $(ELFFILE:.elf=.map)\nLSTFILE ?= $(ELFFILE:.elf=.lst)\n\nifneq (,$(filter suit,$(USEMODULE)))\n  include $(RIOTMAKE)/suit.base.inc.mk\nendif\n\n# include bootloaders support. It should be included early to allow using\n# variables defined in `riotboot.mk` for `FLASHFILE` before it is evaluated.\n# It should be included after defining 'BINFILE' for 'riotboot.bin' handling.\ninclude $(RIOTMAKE)/boot/riotboot.mk\n\n# include suit targets\nifneq (,$(filter suit,$(USEMODULE)))\n  include $(RIOTMAKE)/suit.inc.mk\nendif\n\n# elf file used for the debugger, must include bootloader offset\nDEBUG_ELFFILE ?= $(ELFFILE)\n\n# Targets to get given file\nelffile: $(ELFFILE)\nhexfile: $(HEXFILE)\nbinfile: $(BINFILE)\nlstfile: $(LSTFILE)\n# FLASHFILE is the file used by the flasher\n# Usually set to $(ELFFILE), $(HEXFILE) or $(BINFILE) in the board/flasher\n# or application specific files\nflashfile: $(FLASHFILE)\n\nifeq (,$(FLASHFILE))\n  $(error FLASHFILE is not defined for this board: $(BOARD))\nendif\n\nBUILD_FILES += $(ELFFILE) $(BINFILE) $(FLASHFILE) $(HASHFILE)\n\n# variables used to compile and link c++\nifneq (,$(filter cpp,$(USEMODULE)))\n  CPPMIX ?= 1\nendif\n\n# We assume $(LINK) to be gcc-like. Use `LINKFLAGPREFIX :=` for ld-like linker options.\nLINKFLAGPREFIX ?= -Wl,\n\n# Also build external modules\nDIRS += $(EXTERNAL_MODULE_PATHS)\n\n# Define dependencies required for building (headers, downloading source files,)\nBUILDDEPS += $(RIOTBUILD_CONFIG_HEADER_C)\nBUILDDEPS += pkg-prepare\nBUILDDEPS += $(APPDEPS)\nBUILDDEPS += $(MODULE_LIST_DIR)\n\n# Build dependencies depend on clean (if a make goal), as clean may wipe them.\n# Without them depending on clean parallel builds occasionally fail due to\n# clean removing dependencies that make previously considered as up to date.\n$(BUILDDEPS): $(CLEAN)\n\n# include makefile snippets for packages in $(PKG_PATHS) that modify GENSRC:\n-include $(PKG_PATHS:%=%Makefile.gensrc)\n# remove duplicates & make accessible to subprocesses\nGENSRC := $(sort $(GENSRC))\nexport GENSRC\n\n# Save value to verify it is not modified later\n_BASELIBS_VALUE_BEFORE_USAGE := $(BASELIBS)\n\n# Linker rule\n# Only use --start-group when archives are defined\nARCHIVES_GROUP = $(if $(ARCHIVES),$(LINKFLAGPREFIX)--start-group $(ARCHIVES) -lm $(LINKFLAGPREFIX)--end-group, -lm)\n\n$(ELFFILE): FORCE\nifeq ($(BUILDOSXNATIVE),1)\n  _LINK = $(if $(CPPMIX),$(LINKXX),$(LINK)) $$(find $(BASELIBS:%.module=$(BINDIR)/%/) -name \"*.o\" 2> /dev/null | sort) $(ARCHIVES_GROUP) $(LINKFLAGS) $(LINKFLAGPREFIX)-no_pie\nelse\n  _LINK = $(if $(CPPMIX),$(LINKXX),$(LINK)) $$(find $(BASELIBS:%.module=$(BINDIR)/%/) -name \"*.o\" 2> /dev/null | sort) $(ARCHIVES_GROUP) $(LINKFLAGS) $(LINKFLAGPREFIX)-Map=$(BINDIR)/$(APPLICATION).map\nendif # BUILDOSXNATIVE\n\nCOMPILE_COMMANDS_PATH ?= $(if $(findstring $(RIOTBASE),$(APPDIR)),$(RIOTBASE)/compile_commands.json, $(APPDIR)/compile_commands.json)\nCOMPILE_COMMANDS_FLAGS ?= --clangd\n.PHONY: compile-commands\ncompile-commands: $(COMPILE_COMMANDS_PATH)\n%/compile_commands.json: $(BUILDDEPS)\n\t$(Q)DIRS=\"$(DIRS)\" APPLICATION_BLOBS=\"$(BLOBS)\" \\\n    APPLICATION_SRC=\"$(SRC)\" APPLICATION_SRCXX=\"$(SRCXX)\" APPLICATION_ASMSRC=\"$(ASMSRC)\" APPLICATION_ASSMSRC=\"$(ASSMSRC)\" \\\n\t  \"$(MAKE)\" -C $(APPDIR) -f $(RIOTMAKE)/application.inc.mk compile-commands\n\t$(Q)$(RIOTTOOLS)/compile_commands/compile_commands.py $(COMPILE_COMMANDS_FLAGS) $(BINDIR) \\\n\t  > $@\n\nifeq ($(BUILD_IN_DOCKER),1)\nlink: ..in-docker-container\nelse\nifeq (,$(RIOTNOLINK))\nlink: ..compiler-check ..build-message $(BUILD_FILES) print-size ..module-check\nelse\nlink: ..compiler-check ..build-message $(BASELIBS) $(ARCHIVES) ..module-check\nendif # RIOTNOLINK\n\n$(ELFFILE): $(BASELIBS) $(ARCHIVES) $(LD_SCRIPTS)\n\t$(Q)$(_LINK) -o $@\n\n.PHONY: $(APPLICATION_MODULE).module\n\n..module-check: $(BASELIBS)\n\t@[ -z \"$(strip $(NON_GENERATED_MODULES))\" ] || \\\n\t($(COLOR_ECHO) \"$(COLOR_RED)Error - using unknown modules: $(COLOR_RESET)$(NON_GENERATED_MODULES)\" && false)\n\n$(APPLICATION_MODULE).module: pkg-build $(BUILDDEPS)\n\t$(Q)DIRS=\"$(DIRS)\" APPLICATION_BLOBS=\"$(BLOBS)\" \\\n    APPLICATION_SRC=\"$(SRC)\" APPLICATION_SRCXX=\"$(SRCXX)\" APPLICATION_ASMSRC=\"$(ASMSRC)\" APPLICATION_ASSMSRC=\"$(ASSMSRC)\" \\\n\t  \"$(MAKE)\" -C $(APPDIR) -f $(RIOTMAKE)/application.inc.mk\n$(APPLICATION_MODULE).module: FORCE\n\n# Other modules are built by application.inc.mk and packages building\n_SUBMAKE_LIBS = $(filter-out $(APPLICATION_MODULE).module $(APPDEPS), $(BASELIBS) $(ARCHIVES))\n$(_SUBMAKE_LIBS): $(APPLICATION_MODULE).module pkg-build $(GENSRC)\n\n# 'print-size' triggers a rebuild. Use 'info-buildsize' if you do not need to rebuild.\nprint-size: $(ELFFILE)\n\t$(Q)$(SIZE) $(SIZEFLAGS) $<\n\n%.hex: %.elf\n\t$(Q)$(OBJCOPY) $(OFLAGS) -Oihex $< $@\n\n%.bin: %.elf\n\t$(Q)$(OBJCOPY) $(OFLAGS) -Obinary $< $@\n\n%.lst: %.elf\n\t$(Q)$(OBJDUMP) --disassemble-all --file-headers --file-offsets \\\n  --section-headers --line-numbers --private-headers --source --wide \\\n  --disassemble-zeroes $< > $@\n\nendif # BUILD_IN_DOCKER\n\n# Check given command is available in the path\n#   check_cmd 'command' 'description'\ndefine check_cmd\n\t@command -v $1 >/dev/null 2>&1 || \\\n\t  { $(COLOR_ECHO) \\\n\t    '$(COLOR_RED)$2 $1 is required but not found in PATH.  Aborting.$(COLOR_RESET)'; \\\n\t    exit 1;}\nendef\n\n# Check if setsid command is available on the system for debug target\n# This is not the case on MacOSX, so it must be built on the fly\nifeq ($(OS),Darwin)\n  ifneq (,$(filter debug, $(MAKECMDGOALS)))\n    ifneq (0,$(shell command -v setsid > /dev/null 2>&1 ; echo $$?))\n      SETSID = $(RIOTTOOLS)/setsid/setsid\n      $(call target-export-variables,debug,$(SETSID))\n      DEBUGDEPS += $(SETSID)\n    endif\n  endif\nendif\n\n..compiler-check:\n\t$(call check_cmd,$(CC),Compiler)\n\n..build-message: $(if $(SHOULD_RUN_KCONFIG), check-kconfig-errors)\n\t@$(COLOR_ECHO) '$(COLOR_GREEN)Building application \"$(APPLICATION)\" for \"$(BOARD)\" with CPU \"$(CPU)\".$(COLOR_RESET)'\n\t@$(COLOR_ECHO)\n\n# The `clean` needs to be serialized before everything else.\nall $(BASELIBS) $(ARCHIVES) $(BUILDDEPS) $(GENSRC) ..in-docker-container: | $(CLEAN)\n\n.PHONY: pkg-prepare pkg-build\npkg-prepare:\n\t-@$(foreach dir,$(PKG_PATHS),\"$(MAKE)\" -C $(dir) prepare $(NEWLINE))\n\n$(GENSRC): pkg-prepare\n\npkg-build: $(BUILDDEPS) | $(GENSRC)\n\t$(foreach dir,$(PKG_PATHS),$(QQ)\"$(MAKE)\" -C $(dir) $(NEWLINE))\n\nclean:\nifndef MAKE_RESTARTS\n\t-@$(foreach dir,$(PKG_PATHS),\"$(MAKE)\" -C $(dir) clean $(NEWLINE))\n\t-@rm -rf $(BINDIR)\n\t-@rm -rf $(SCANBUILD_OUTPUTDIR)\nendif\n\n# Remove intermediates, but keep the .elf, .hex and .map etc.\nclean-intermediates:\n\t-@$(foreach dir,$(PKG_PATHS),\"$(MAKE)\" -C $(dir) distclean $(NEWLINE))\n\t-@rm -rf $(BINDIR)/*.a $(BINDIR)/*/\n\nclean-pkg:\n\t-@$(foreach dir,$(PKG_PATHS),\"$(MAKE)\" -C $(dir) distclean $(NEWLINE))\n\ndistclean:\n\t-@$(foreach dir,$(PKG_PATHS),\"$(MAKE)\" -C $(dir) distclean $(NEWLINE))\n\t-@rm -rf $(BINDIRBASE)\n\n# Include PROGRAMMER_FLASH/PROGRAMMER_RESET variables\ninclude $(RIOTMAKE)/tools/programmer.inc.mk\n\n# Define flash-recipe with a default value\ndefine default-flash-recipe\n  $(call check_cmd,$(FLASHER),Flash program)\n  $(PROGRAMMER_FLASH)\nendef\nflash-recipe ?= $(default-flash-recipe)\n\n# Do not add dependencies to \"flash\" directly, use FLASHDEPS, as this is shared\n# with flash-only too\n\nflash: all $(FLASHDEPS)\n\t$(flash-recipe)\n\nflash-only: $(FLASHDEPS)\n\t$(flash-recipe)\n\npreflash: $(BUILD_BEFORE_FLASH)\n\t$(PREFLASHER_PREFIX)$(PREFLASHER) $(PREFFLAGS)\n\n# graphical memory usage analyzer\nCOSY_TOOL ?= $(PKGDIRBASE)/cosy/cosy.py\nCOSY_PORT ?= 12345\ncosy: $(ELFFILE) $(COSY_TOOL)\n\t$(COSY_TOOL) --port $(COSY_PORT) --riot-base $(RIOTBASE) $(APPDIR) $(BOARD) $(ELFFILE) $(MAPFILE)\n\nifneq (,$(TERMLOG)$(TERMTEE))\n  TERMTEE ?= | tee -a $(TERMLOG)\nendif\nTERMFLASHDEPS ?= $(filter flash flash-only,$(MAKECMDGOALS))\n# Add TERMFLASHDEPS to TERMDEPS so it also applies to `test`\nTERMDEPS += $(TERMFLASHDEPS)\ntermdeps: $(TERMDEPS)\n\nterm: $(TERMDEPS)\n\t$(call check_cmd,$(TERMPROG),Terminal program)\n\t${TERMENV} $(TERMPROG) $(TERMFLAGS) $(TERMTEE)\n\n# Term without the pyterm added logging\n# PYTERMFLAGS must be exported for `jlink.sh term-rtt`.\ncleanterm: export PYTERMFLAGS += --no-reconnect --noprefix --no-repeat-command-on-empty-line\ncleanterm: $(TERMDEPS)\n\t$(call check_cmd,$(TERMPROG),Terminal program)\n\t$(TERMPROG) $(TERMFLAGS) $(TERMTEE)\n\nlist-ttys:\n\t$(Q)$(RIOTTOOLS)/usb-serial/ttys.py\n\ndoc:\n\t$(MAKE) -BC $(RIOTBASE) doc\n\ndebug: $(DEBUGDEPS)\n\t$(call check_cmd,$(DEBUGGER),Debug program)\n\t$(DEBUGGER) $(DEBUGGER_FLAGS)\n\ndebug-client:\n\t$(call check_cmd,$(DEBUGCLIENT),Debug client program)\n\t$(DEBUGCLIENT) $(DEBUGCLIENT_FLAGS)\n\ndebug-server:\n\t$(call check_cmd,$(DEBUGSERVER),Debug server program)\n\t$(DEBUGSERVER) $(DEBUGSERVER_FLAGS)\n\nifeq (1,$(EMULATE))\nemulate:\n\t$(call check_cmd,$(EMULATOR),Emulation program)\n\t$(EMULATOR) $(EMULATOR_FLAGS)\nendif\n\nreset:\n\t$(call check_cmd,$(RESET),Reset program)\n\t$(PROGRAMMER_RESET)\n\n# tests related targets and variables\ninclude $(RIOTMAKE)/tests/tests.inc.mk\n\n.PHONY: fuzz\nfuzz:\n\tenv FLASHFILE=\"$(FLASHFILE)\" PORT=\"$(PORT)\" TERMFLAGS=\"$(TERMFLAGS)\" \\\n\t\t\"$(RIOTBASE)\"/dist/tools/fuzzing/afl.sh $(FLAGS_FOR_AFL)\n\n# Default OBJDUMPFLAGS for platforms which do not specify it:\nOBJDUMPFLAGS ?= -S -D -h\n\nobjdump:\n\t$(call check_cmd,$(OBJDUMP),Objdump program)\n\t$(OBJDUMP) $(OBJDUMPFLAGS) $(ELFFILE) | less\n\n# inlcude clang-tidy\ninclude $(RIOTMAKE)/clang_tidy.inc.mk\n# Support Eclipse IDE.\ninclude $(RIOTMAKE)/eclipse.inc.mk\n\n# Export variables used throughout the whole make system:\ninclude $(RIOTMAKE)/vars.inc.mk\n\n# Include build targets for selected tools\ninclude $(RIOTMAKE)/tools/targets.inc.mk\n\n# Checks and defaults for USB Vendor and Product ID\ninclude $(RIOTMAKE)/usb-codes.inc.mk\n\n# Warn if the selected board and drivers don't provide all needed features:\nifneq (, $(filter all flash, $(if $(MAKECMDGOALS), $(MAKECMDGOALS), all)))\n  EXPECT_ERRORS :=\n\n  # Test if there where dependencies against a module in DISABLE_MODULE.\n  ifneq (, $(filter $(DISABLE_MODULE), $(USEMODULE)))\n    $(shell $(COLOR_ECHO) \"$(COLOR_RED)Required modules were disabled using DISABLE_MODULE:$(COLOR_RESET)\"\\\n                          \"$(sort $(filter $(DISABLE_MODULE), $(USEMODULE)))\" 1>&2)\n    USEMODULE := $(filter-out $(DISABLE_MODULE), $(USEMODULE))\n    EXPECT_ERRORS := 1\n  endif\n\n  # Test if all feature requirements were met by the selected board.\n  ifneq (,$(FEATURES_MISSING))\n    $(shell $(COLOR_ECHO) \"$(COLOR_RED)There are unsatisfied feature requirements:$(COLOR_RESET)\"\\\n                          \"$(FEATURES_MISSING)\" 1>&2)\n    EXPECT_ERRORS := 1\n  endif\n\n  # Test if no feature in the requirements used is blacklisted for the selected board.\n  ifneq (,$(FEATURES_USED_BLACKLISTED))\n    $(shell $(COLOR_ECHO) \"$(COLOR_RED)Some feature requirements are blacklisted:$(COLOR_RESET)\"\\\n                          \"$(FEATURES_USED_BLACKLISTED)\" 1>&2)\n    EXPECT_ERRORS := 1\n  endif\n\n  # Test if any used feature conflict with another one.\n  ifneq (,$(FEATURES_CONFLICTING))\n    $(shell $(COLOR_ECHO) \"$(COLOR_RED)The following features conflict:$(COLOR_RESET)\"\\\n                          \"$(FEATURES_CONFLICTING)\" 1>&2)\n    ifneq (, $(FEATURES_CONFLICT_MSG))\n        $(shell $(COLOR_ECHO) \"$(COLOR_YELLOW)Rationale: $(COLOR_RESET)$(FEATURES_CONFLICT_MSG)\" 1>&2)\n    endif\n    EXPECT_ERRORS := 1\n  endif\n\n  # If there is a whitelist, then test if the board is whitelisted.\n  ifneq (, $(BOARD_WHITELIST))\n    ifeq (, $(filter $(BOARD_WHITELIST), $(BOARD)))\n      $(shell $(COLOR_ECHO) \"$(COLOR_RED)The selected BOARD=$(BOARD) is not whitelisted:$(COLOR_RESET) $(BOARD_WHITELIST)\" 1>&2)\n      EXPECT_ERRORS := 1\n    endif\n  endif\n\n  # If there is a blacklist, then test if the board is blacklisted.\n  ifneq (, $(BOARD_BLACKLIST))\n    ifneq (, $(filter $(BOARD_BLACKLIST), $(BOARD)))\n      $(shell $(COLOR_ECHO) \"$(COLOR_RED)The selected BOARD=$(BOARD) is blacklisted:$(COLOR_RESET) $(BOARD_BLACKLIST)\" 1>&2)\n      EXPECT_ERRORS := 1\n    endif\n  endif\n\n  #  test if toolchain is supported.\n  ifeq (,$(filter $(TOOLCHAIN),$(TOOLCHAINS_SUPPORTED)))\n    $(shell $(COLOR_ECHO) \"$(COLOR_RED)The selected TOOLCHAIN=$(TOOLCHAIN) is not supported.$(COLOR_RESET)\\nSupported toolchains: $(TOOLCHAINS_SUPPORTED)\" 1>&2)\n    EXPECT_ERRORS := 1\n  endif\n\n  # If there is a blacklist, then test if the board is blacklisted.\n  ifneq (,$(TOOLCHAINS_BLACKLIST))\n    ifneq (,$(filter $(TOOLCHAIN),$(TOOLCHAINS_BLACKLIST)))\n      $(shell $(COLOR_ECHO) \"$(COLOR_RED)The selected TOOLCHAIN=$(TOOLCHAIN) is blacklisted:$(COLOR_RESET) $(TOOLCHAINS_BLACKLIST)\" 1>&2)\n      EXPECT_ERRORS := 1\n    endif\n  endif\n\n  # Fail by default when errors are expected\n  CONTINUE_ON_EXPECTED_ERRORS ?= 0\n  ifneq (, $(EXPECT_ERRORS))\n    ifneq (1,$(CONTINUE_ON_EXPECTED_ERRORS))\n      $(error You can let the build continue on expected errors by setting CONTINUE_ON_EXPECTED_ERRORS=1 to the command line)\n    endif\n    $(shell $(COLOR_ECHO) \"\\n\\n$(COLOR_RED)EXPECT ERRORS!$(COLOR_RESET)\\n\\n\" 1>&2)\n  endif\n\nendif\n\nhelp:\n  # filter all targets starting with lowercase and containing lowercase letters, hyphens, or underscores; explicitly include generate-Makefile.ci\n\t@$(MAKE) -qp | sed -ne 's/\\(^[a-z][a-z_-]*\\|generate-Makefile.ci\\):.*/\\1/p' | sort -u\n\nifeq (iotlab-m3,$(BOARD))\n  ifneq (,$(filter iotlab-%,$(MAKECMDGOALS)))\n    include $(RIOTBASE)/dist/testbed-support/Makefile.iotlab\n  endif\nendif\n\nifneq (,$(filter openv-%,$(MAKECMDGOALS)))\n  include $(RIOTBASE)/dist/tools/openvisualizer/makefile.openvisualizer.inc.mk\nendif\n\n# Include desvirt Makefile\ninclude $(RIOTTOOLS)/desvirt/Makefile.desvirt\n\n# Build a header file with all common macro definitions and undefinitions\n# Everytime the header is updated, it will trigger a new compilation.\n#\n# The file is created first through a `.in` file that will be modified if\n# any CFLAGS changed. It depends on FORCE to re-run of the script every time\n# even if the file exists but the file will only be updated on modifications.\n#\n# The header is then created by keeping only the macros. Keeping the\n# comments added absolute path in the file that screwed caching.\n#\n# The rebuild behavior could even only be done with an empty file, but currently\n# some macros definitions are passed through this file.\n$(RIOTBUILD_CONFIG_HEADER_C): $(RIOTBUILD_CONFIG_HEADER_C).in\n\t$(Q)sed -n -e '1i\\\n/* Generated file do not edit */' -e '/^#.*/ p' $< > $@\n\n.SECONDARY: $(RIOTBUILD_CONFIG_HEADER_C).in\n$(RIOTBUILD_CONFIG_HEADER_C).in: FORCE | $(CLEAN)\n\t@mkdir -p '$(dir $@)'\n\t$(Q)'$(RIOTTOOLS)/genconfigheader/genconfigheader.sh' $(CFLAGS_WITH_MACROS) \\\n\t\t| '$(LAZYSPONGE)' $(LAZYSPONGE_FLAGS) '$@'\n\nCFLAGS_WITH_MACROS += $(CFLAGS)\nCFLAGS_WITH_MACROS += -DRIOT_VERSION=\\\"$(RIOT_VERSION)\\\"\nCFLAGS_WITH_MACROS += -DRIOT_VERSION_CODE=$(RIOT_VERSION_CODE)\nifneq (,$(RIOT_VERSION_EXTRA))\n  CFLAGS_WITH_MACROS += -DCONFIG_RIOT_VERSION_EXTRA=\\\"\"$(RIOT_VERSION_EXTRA)\"\\\"\nendif\n# MODULE_NAME defines. Declared in 'makefiles/modules.inc.mk'\nCFLAGS_WITH_MACROS += $(EXTDEFINES)\n\nCFLAGS += -include '$(RIOTBUILD_CONFIG_HEADER_C)'\n\n# include mcuboot support\ninclude $(RIOTMAKE)/mcuboot.mk\n\n# include Murdock helpers\ninclude $(RIOTMAKE)/murdock.inc.mk\n\n# Sanity check, 'all' should be the default goal\nifneq (all, $(.DEFAULT_GOAL))\n  $(error .DEFAULT_GOAL := $(.DEFAULT_GOAL))\nendif\n\n\n# Detect if BASELIBS changed since its first use\nifneq ($(_BASELIBS_VALUE_BEFORE_USAGE),$(BASELIBS))\n  $(warning $(sort $(filter-out $(_BASELIBS_VALUE_BEFORE_USAGE), $(BASELIBS)) \\\n                   $(filter-out $(BASELIBS), $(_BASELIBS_VALUE_BEFORE_USAGE))))\n  $(error BASELIBS value changed)\nendif\n\nendif\n\ninclude $(RIOTMAKE)/cargo-targets.inc.mk\n\n# include RIOT_MAKEFILES_GLOBAL_POST configuration files\n# allows setting user specific system wide configuration parsed after the body\n# of $(RIOTBASE)/Makefile.include\ninclude $(RIOT_MAKEFILES_GLOBAL_POST)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.884765625,
          "content": "[![Nightly CI status master][master-ci-badge]][master-ci-link]\n[![GitHub release][release-badge]][release-link]\n[![License][license-badge]][license-link]\n[![API docs][api-badge]][api-link]\n[![Wiki][wiki-badge]][wiki-link]\n[![Stack Overflow questions][stackoverflow-badge]][stackoverflow-link]\n[![Mastodon][mastodon-badge]][mastodon-link]\n[![Matrix][matrix-badge]][matrix-link]\n\n<p align=\"center\"><img src=\"doc/doxygen/src/riot-logo.svg\" width=\"66%\"><!--\n                          ZZZZZZ\n                        ZZZZZZZZZZZZ\n                      ZZZZZZZZZZZZZZZZ\n                     ZZZZZZZ     ZZZZZZ\n                    ZZZZZZ        ZZZZZ\n                    ZZZZZ          ZZZZ\n                    ZZZZ           ZZZZZ\n                    ZZZZ           ZZZZ\n                    ZZZZ          ZZZZZ\n                    ZZZZ        ZZZZZZ\n                    ZZZZ     ZZZZZZZZ       777        7777       7777777777\n              ZZ    ZZZZ   ZZZZZZZZ         777      77777777    77777777777\n          ZZZZZZZ   ZZZZ  ZZZZZZZ           777     7777  7777       777\n        ZZZZZZZZZ   ZZZZ    Z               777     777    777       777\n       ZZZZZZ       ZZZZ                    777     777    777       777\n      ZZZZZ         ZZZZ                    777     777    777       777\n     ZZZZZ          ZZZZZ    ZZZZ           777     777    777       777\n     ZZZZ           ZZZZZ    ZZZZZ          777     777    777       777\n     ZZZZ           ZZZZZ     ZZZZZ         777     777    777       777\n     ZZZZ           ZZZZ       ZZZZZ        777     777    777       777\n     ZZZZZ         ZZZZZ        ZZZZZ       777     777    777       777\n      ZZZZZZ     ZZZZZZ          ZZZZZ      777     7777777777       777\n       ZZZZZZZZZZZZZZZ            ZZZZ      777      77777777        777\n         ZZZZZZZZZZZ               Z\n            ZZZZZ                                                           --></p>\n\nThe friendly Operating System for IoT!\n\nRIOT is an open-source microcontroller operating system, designed to match\nthe requirements of Internet of Things (IoT) devices and other embedded devices.\nIt supports a range of devices that are typically found in the Internet of Things (IoT):\n8-bit, 16-bit and 32-bit microcontrollers.\n\nRIOT is based on the following design principles: energy-efficiency, real-time\ncapabilities, small memory footprint, modularity, and uniform API access,\nindependent of the underlying hardware (this API offers partial POSIX\ncompliance).\n\nRIOT is developed by an international open source community which is\nindependent of specific vendors (e.g. similarly to the Linux community).\nRIOT is licensed with LGPLv2.1, a copyleft license which fosters\nindirect business models around the free open-source software platform\nprovided by RIOT, e.g. it is possible to link closed-source code with the\nLGPL code.\n\n## Features\n\nRIOT provides features including, but not limited to:\n\n* a preemptive, tickless scheduler with priorities\n* flexible memory management\n* high resolution, long-term timers\n* MTD abstraction layer\n* File System integration\n* support 200+ boards based on AVR, MSP430, ESP8266, ESP32, RISC-V,\n  ARM7 and ARM Cortex-M\n* the native port allows to run RIOT as-is on Linux and BSD.\n  Multiple instances of RIOT running on a single machine can also be\n  interconnected via a simple virtual Ethernet bridge or via a simulated\n  IEEE 802.15.4 network (ZEP)\n* IPv6\n* 6LoWPAN (RFC4944, RFC6282, and RFC6775)\n* UDP\n* RPL (storing mode, P2P mode)\n* CoAP\n* OTA updates via SUIT\n* MQTT\n* USB (device mode)\n* Display / Touchscreen support\n* CCN-Lite\n* LoRaWAN\n* UWB\n* Bluetooth (BLE) via [NimBLE](https://github.com/apache/mynewt-nimble)\n\n## Getting RIOT\n\nThe most convenient way to get RIOT is to clone it via Git\n\n```console\n$ git clone https://github.com/RIOT-OS/RIOT\n```\n\nthis will ensure that you get all the newest features and bug fixes with the\ncaveat of an ever changing work environment.\n\nIf you prefer things more stable, you can download the source code of one of our\nquarter annual releases [via Github][releases] as ZIP file or tarball. You can\nalso checkout a release in a cloned Git repository using\n\n```console\n$ git pull --tags\n$ git checkout <YYYY.MM>\n```\n\nFor more details on our release cycle, check our [documentation][release cycle].\n\n[releases]: https://github.com/RIOT-OS/RIOT/releases\n[release cycle]: https://doc.riot-os.org/release-cycle.html\n\n## Getting Started\n* You want to start the RIOT? Just follow our\n[quickstart guide](https://doc.riot-os.org/index.html#the-quickest-start) or\ntry this\n[tutorial](https://github.com/RIOT-OS/Tutorials/blob/master/README.md).\nFor specific toolchain installation, follow instructions in the\n[getting started](https://doc.riot-os.org/getting-started.html) page.\n* The RIOT API itself can be built from the code using doxygen. The latest\n  version of the documentation is uploaded daily to\n  [doc.riot-os.org](https://doc.riot-os.org).\n\nUsing Windows? Use [this guide][dev-setup-windows] to\n[setup the development environment][dev-setup-windows].\n\n[dev-setup-windows]: doc/guides/setup-windows\n\n## Community\n\nYou can ask for help on the Forum or on Matrix. Please send bug reports and\nfeature requests to our [GitHub issue tracker](https://github.com/RIOT-OS/RIOT/issues)\n\n- [forum](https://forum.riot-os.org) is the default place to start asking for\nhelp. Our Forum provides an archive of prior questions and answers.\n- For chat, we use\n  [#riot-os:matrix.org](https://matrix.to/#/#riot-os:matrix.org) on the\n  [Matrix](https://matrix.org/) chat network.\n- [GitHub Issue tracker](https://github.com/RIOT-OS/RIOT/issues) for issues\nwith the code and documentation.\n\n### How to Ask\n\nPlease include as much detail as you can that is relevant to your question, not\nonly \"this isn't working\". These details include:\n\n1. What you want to achieve.\n2. What have you tried so far (for example the commands you typed).\n3. What happened so far.\n\n### Collaboration\n\nRIOT closely collaborates with and inspires other open source projects, e.g., [Ariel OS](https://ariel-os.org/), an IoT OS written in Rust. We are more than happy to collaborate with those who share our [vision](https://doc.riot-os.org/vision.html).\n\n## Contribute\n\nTo contribute something to RIOT, please refer to our\n[contributing document](CONTRIBUTING.md).\n\n## Mailing Lists\n* RIOT commits: [commits@riot-os.org](https://lists.riot-os.org/mailman/listinfo/commits)\n* Github notifications: [notifications@riot-os.org](https://lists.riot-os.org/mailman/listinfo/notifications)\n\n## License\n* Most of the code developed by the RIOT community is licensed under the GNU\n  Lesser General Public License (LGPL) version 2.1 as published by the Free\n  Software Foundation.\n* Some external sources, especially files developed by SICS are published under\n  a separate license.\n\nAll code files contain licensing information.\n\nFor more information, see the RIOT website:\n\nhttps://www.riot-os.org\n\n\n[api-badge]: https://img.shields.io/badge/docs-API-informational.svg\n[api-link]: https://doc.riot-os.org/\n[license-badge]: https://img.shields.io/github/license/RIOT-OS/RIOT\n[license-link]: https://github.com/RIOT-OS/RIOT/blob/master/LICENSE\n[master-ci-badge]: https://ci.riot-os.org/job/branch/master/badge\n[master-ci-link]: https://ci.riot-os.org/details/branch/master\n[matrix-badge]: https://img.shields.io/badge/chat-Matrix-brightgreen.svg\n[matrix-link]: https://matrix.to/#/#riot-os:matrix.org\n[merge-chance-link]: https://merge-chance.info/target?repo=RIOT-OS/RIOT\n[release-badge]: https://img.shields.io/github/release/RIOT-OS/RIOT.svg\n[release-link]: https://github.com/RIOT-OS/RIOT/releases/latest\n[stackoverflow-badge]: https://img.shields.io/badge/stackoverflow-%5Briot--os%5D-yellow\n[stackoverflow-link]: https://stackoverflow.com/questions/tagged/riot-os\n[mastodon-badge]: https://img.shields.io/badge/social-Mastodon-informational.svg\n[mastodon-link]: https://fosstodon.org/@RIOT_OS\n[wiki-badge]: https://img.shields.io/badge/docs-Wiki-informational.svg\n[wiki-link]: https://github.com/RIOT-OS/RIOT/wiki\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 3.4443359375,
          "content": "# RIOT Security Policy\n\nAll security bugs reported will be silently fixed in `master` and backported\nto the previous release.\n\nWhen CVE numbers are assigned to RIOT vulnerabilities, they are associated with\n[CPE] identifiers in the shape of `cpe:2.3:o:riot-os:riot:<VERSION>`.\n\n[CPE]: https://nvd.nist.gov/products/cpe\n\n## Reporting a Vulnerability\n\nIf a security issue is discovered, please report it to security@riot-os.org.\nA response will be provided within one week.\nThe issue will be tracked in the [security mailing list](mailto:security@riot-os.org).\nThe original reporter will be included in the discussion of the issue.\nYou can encrypt your report using gpg key id\n[44C6AE441172F88D3423E81F5F7964D0F4239033][security-gpg], also included at the\nbottom of this file.\n\n[security-gpg]: https://riot-os.org/assets/keys/security.asc\n\n### Classification of a vulnerability\n\nUnless the reporter explicitly requests not to do so,\nthe RIOT security maintainers may declassify an issue\nif the issue is not deemed critical --\nfor example when it requires an unlikely combination of circumstances and/or configuration options,\nor when it can only be exploited by a user who gains no additional privileges.\n\n## Notification of a Vulnerability\n\nAfter a fix is provided the security issue will be privately disclosed to the\noriginal reporter, RIOT security maintainers, and \"Trusted RIOT Users\".\nA public announcement of the security fix will be made two weeks after the\npoint release, though this may vary depending on the severity and ability of\ntrusted RIOT users to provide the fix.\n\n## Trusted RIOT Users\n\nTo access the \"Trusted RIOT Users\" notifications on the\n[RIOT forum](https://forum.riot-os.org) please send information\non the RIOT based service or product as well as your\n[forum](https://forum.riot-os.org) username to the\n[security mailing list](mailto:security@riot-os.org).\nEarly notification of security bugs will be available and should not be shared\npublicly.\nIf done, it will result in access removal from the \"Trusted RIOT Users\"\nnotifications.\n\n## RIOT community GPG key\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEYY4plhYJKwYBBAHaRw8BAQdALRZ/IJmifuwoSUYTVbKUy9z/m3y0ux6DLMD6\nkMs13/+0J1JJT1QtT1Mgc2VjdXJpdHkgPHNlY3VyaXR5QHJpb3Qtb3Mub3JnPoiW\nBBMWCAA+FiEERMauRBFy+I00I+gfX3lk0PQjkDMFAmGOKZYCGwMFCQPCZwAFCwkI\nBwIGFQoJCAsCBBYCAwECHgECF4AACgkQX3lk0PQjkDMyggEA4lp3RDz+qj1K1veV\nAlTh/L90rft7v7hZ9ROWD8mssD8BAI3sc+AESdkNf9lATsuH39/9jIi3CqLDdDxK\nTJ9SQwcNiQIzBBABCAAdFiEEZi0l9uxO8DMbg2ZS/bt7xc+P5tsFAmGOKbkACgkQ\n/bt7xc+P5tvQLA//fCVUg3B5N5J1gCOSGRlplzFO0DELNl8akecxxFuCUU74Hjyc\nNSR4r8lQGhGvAVZLanBTprTWeYXtCuLAFfCwvNitbWXnmXRJawQ4k0TQfUXWNsbf\no84QHtKvxEEwLnubVfz+uATw0eahmU2beh2lEl1PKPnpnvc2q9eM019Ff7RV1poe\nUD2ctDZ9yn1GDN6A1E9ejAqxowwPxZfafH6uvPcGnDtvBZ0SB2x+EXvFNDpdaFBm\nGEqAOY+wBabk6XV9B5qhu0KeVy0ePHni8JaZQJZX+xo2Nzk14IG66nxBF0zz0qTj\n2hntxygrS44lQffqkDl+W/Vyc31/k3vsemLQAaC+/ZV1ULxew1VCmBHKE201+8bS\nVmQweoiVBa30HtftOhMtlSi+WHyzwG7KGiD148PJIuQx42Dj/iY0MLHCR5c32giF\ntW0xJ6fDkVVC0LkLPfBbMJrKxpX5xyWnWVibWHyAXaI/Sh2oK9uIkvdPFh+rWNe7\nWr3Sokn3oUUE2BVkcOiZO9gMYngx6sDWazYwBMTaDxPISIdQofAPZ3LiW/f12wXq\nV39RPXrlR3wDf8frhb8Jfxt1q0KHRbU3Drf8cGjpC42H/HazhH4QugbqfUv3BH0C\nzJTYg+S79aDgIqUaW5ASxIi5e20jNKoaRnYg7Y1rYk4ttMtH72XylP1vuCK4OARh\njimWEgorBgEEAZdVAQUBAQdAQCSgXzft+sMtSz1vOEaT/s28u/LVmLjUoGtuAcns\nin0DAQgHiH4EGBYIACYWIQRExq5EEXL4jTQj6B9feWTQ9COQMwUCYY4plgIbDAUJ\nA8JnAAAKCRBfeWTQ9COQM+6YAP4w2R2qD9yO7ILcDWVyityM7+rmYrpqabbz07kh\nCST7fgEAgvz7lVIT4bq7IqhdvcpOERC0Wu9c4AjyX9Y6KB3kIwI=\n=3GfE\n-----END PGP PUBLIC KEY BLOCK-----\n```\n"
        },
        {
          "name": "SUBSYSTEMS.md",
          "type": "blob",
          "size": 2.8271484375,
          "content": "# RIOT Subsystem Maintainers\n\nThis file gives an overview about the maintainers of RIOT subsystems. Whenever\nyou submit an issue or a Pull Request, please assign one of the maintainers of\nthe affected modules as an assignee in the issue tracker. The maintainer takes\ncare of either fixing/merging the issue/PR herself or re-assign the issue to a\nqualified developer.\n\n**Note**: A developer might maintain more than one subsystem and an issue might\naffect more than one module.\n\n# CPU\n## ESP32, ESP8266\n\n## MSP430\n\n- Marian Buschsieweke (@maribu)\n\n## ARM7\n\n- Marian Buschsieweke (@maribu)\n\n## ARM Cortex-M\n\n### Atmel Sam0 line (SAM D1x/D2x, L1x, L2x, D5x)\n\n - Benjamin Valentin (@benpicco)\n - Dylan Laduranty (@dylad)\n\n## Atmel AVR (Atmega)\n\n- Marian Buschsieweke (@maribu)\n\n## Native\n\n### ZEP radio simulation & ZEP dispatcher\n\n - Benjamin Valentin (@benpicco)\n\n# Hardware modules\n\n## Network devices\n### IEEE 802.15.4\n\n - José I. Álamos (@jia200x)\n\n### NRF802154\n\n - José I. Álamos (@jia200x)\n\n### CC2538\n\n - José I. Álamos (@jia200x)\n\n### KW2XRF\n\n - José I. Álamos (@jia200x)\n\n### MRF24J40\n\n - José I. Álamos (@jia200x)\n\n### AT86RF2XX\n\n - José I. Álamos (@jia200x)\n\n#### AT86RF215\n\n - Benjamin Valentin (@benpicco)\n\n### BLE\n\n### LoRa\n\n - José I. Álamos (@jia200x)\n\n### CC110X\n\n- Marian Buschsieweke (@maribu)\n\n### ESP-NOW\n\n## Peripherals\n\n- Marian Buschsieweke (@maribu)\n\n## Other drivers\n\n# Kernel (core)\n\n  - Kaspar Schleiser (@kaspar030)\n\n# System libraries\n\n## High-level timer API (xtimer, ztimer)\n\n  - Kaspar Schleiser (@kaspar030)\n\n## Power Management\n\n## MTD Subsystem\n\n - Benjamin Valentin (@benpicco)\n\n## File Systems\n\n## USB support\n\n  - Dylan Laduranty (@dylad)\n\n## POSIX support\n\n## Scripting languages\n\n## RUST support\n\n  - Christian Amsüss (@chrysn)\n  - Kaspar Schleiser (@kaspar030)\n\n## C++ support\n\n- Marian Buschsieweke (@maribu)\n\n## Crypto\n\n# Networking\n\n## Network stacks\n### GNRC\n\n- Martine S. Lenders (@miri64)\n\n#### 6LowPAN\n\n- Martine S. Lenders (@miri64)\n\n#### IPv6\n\n- Martine S. Lenders (@miri64)\n\n##### Auto-Subnetting\n\n - Benjamin Valentin (@benpicco)\n\n#### Netif\n\n - José I. Álamos (@jia200x)\n\n#### UDP\n\n- Martine S. Lenders (@miri64)\n\n### CCN-Lite\n\n### OpenThread\n\n - José I. Álamos (@jia200x)\n\n### LWIP\n\n- Martine S. Lenders (@miri64)\n\n### OpenWSN\n\n - José I. Álamos (@jia200x)\n\n## Physical/Link Layer\n### LoRaWAN\n\n - José I. Álamos (@jia200x)\n\n### BLE (nimble)\n\n### IEEE 802.15.4\n\n - José I. Álamos (@jia200x)\n\n## Interfaces\n### Sock\n\n- Martine S. Lenders (@miri64)\n\n### Netif\n\n - José I. Álamos (@jia200x)\n\n### Netdev\n\n - José I. Álamos (@jia200x)\n\n## Application protocols\n### CoAP\n\n#### nanoCoAP\n\n - Benjamin Valentin (@benpicco)\n\n### MQTT\n\n### LWM2M\n\n## Others\n\n### DTLS\n\n- Martine S. Lenders (@miri64)\n\n### RPL\n\n# Build System\n\n  - Kaspar Schleiser (@kaspar030)\n\n# Documentation\n\n# Testing/CI\n\n  - Kaspar Schleiser (@kaspar030)\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.791015625,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nrequire 'fileutils'\n\nRIOTBASE ||= \"./\"\n\nVagrant.configure(\"2\") do |config|\n    config.vm.define \"RIOT-VM\"\n    config.vm.box = \"RIOT/ubuntu1804\"\n    config.ssh.username = \"user\"\n    config.vm.synced_folder RIOTBASE, \"/home/user/RIOT\"\n\n    if File.exists?(File.join(Dir.home, \".gitconfig\"))\n        config.vm.provision \"file\", source: File.join(Dir.home, \".gitconfig\"), destination: \".gitconfig\"\n    end\n\n    config.vm.provider :virtualbox do |v, override|\n        v.customize [ \"guestproperty\", \"set\", :id, \"/VirtualBox/GuestAdd/VBoxService/--timesync-set-on-restore\", 0]\n\n        # additional USB passthrough entries\n        # v.customize ['usbfilter', 'add', '0', '--target', :id, '--name', '<custom_name>', '--vendorid', '<vID>', '--productid', '<pID>']\n    end\nend\n"
        },
        {
          "name": "boards",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootloaders",
          "type": "tree",
          "content": null
        },
        {
          "name": "bors.toml",
          "type": "blob",
          "size": 1.3525390625,
          "content": "# List of commit statuses that must pass on the PR commit when it is r+-ed.\n# (listed in same order as in the repo's branch protection settings)\npr_status = [\n \"python-tests\",\n \"tools-build-success\",\n \"check-labels\",\n \"static-tests\",\n \"check-commits (commit-msg)\",\n \"check-commits (pr_check)\",\n \"Murdock\",\n ]\n\n# List of commit statuses that must pass on the merge commit before it is\n# pushed to master.\nstatus = [\n  \"Murdock\",\n  \"static-tests\",\n  \"tools-build-success\",\n  ]\n\nblock_labels = [ \"Process: missing approvals\" ]\n\n# Number of project members who must approve the PR (using GitHub Reviews)\n# before it is pushed to master.\n# This necessary even with the check-labels action (which checks for >1 ACKs),\n# as that passes when there's no review or no special label set.\nrequired_approvals = 1\n\n# delete branch after successful merge\ndelete_merged_branches = true\n\n# timeout for bors-initiated builds.\n# unfortunately bors is not the only entity queuing builds, so this needs\n# to take a full nightly build *plus* another full bors build *plus* some\n# possible intermediate PR builds into accound.\n# let's try ten hours (36000s)\ntimeout_sec = 36000\n\n# \"A marker in the PR description that indicates boilerplate that does not\n# belong in the commit message.\"\n#\n# This basically cuts the whole description, which in our PR template starts\n# with a comment:\ncut_body_after = \"<!--\"\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpu",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.txt",
          "type": "blob",
          "size": 2.55859375,
          "content": "/**\n * @defgroup config Compile time configurations\n * @brief    List of compile-time configurations\n *\n * This group contains all compile-time configurations macros that are\n * intended to be modified by the user.\n *\n * These configuration macros are defined within modules like this:\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [.c]\n * #ifndef SOME_CONFIGURATION_PARAM\n * #define SOME_CONFIGURATION_PARAM DEFAULT_VALUE\n * #endif\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n * Because of that, configurations can be altered e.g via CFLAGS (e.g\n * `CFLAGS += -DSOME_CONFIGURATION_PARAM=SOME_VALUE`)\n */\n\n/**\n * @defgroup cpp C++\n * @brief    C++ Support in RIOT-OS\n *\n * This group contains all C++ related modules for easier reference.\n */\n\n/**\n * @defgroup utils Utilities\n * @brief Utilities and helper functionality\n *\n *        Additional scripts and configuration options to ease RIOT\n *        development.\n * @{\n */\n\n/**\n * @def DEVELHELP\n * @brief   This global macro activates functionality to help developers.\n *\n * To activate it set environment variable `DEVELHELP=1`, or disable explicitly\n * with `DEVELHELP=0`.\n *\n * The following list of what `DEVELHELP=1` enables is not comprehensive, but\n * should give a rough impression of what to expect:\n *\n * * Many runtime checks are enabled (stack overflow protection by means of\n *   @ref pseudomodule_mpu_stack_guard or @ref SCHED_TEST_STACK, warnings when\n *   sending messages to invalid PIDs, …), some of which just log errors to\n *   stdout, some even halt the system.\n * * Some structures contain additional information, e.g. threads store their\n *   names and stack sizes.\n * * Some error paths that are active even at `DEVELHELP=0` perform more\n *   complex tasks to give useful output.\n * * The @ref assert() function is only evaluated with `DEVELHELP=1` (or when\n *   `FORCE_ASSERTS=1`). Otherwise, the build system sets `NDEBUG` and thus\n *   skips assertions entirely.\n * * On a panic, the system halts (or enters the bootloader) instead of\n *   restarting.\n */\n#if DOXYGEN\n#   define DEVELHELP\n#endif\n\n/**\n * @def CONFIG_THREAD_NAMES\n * @brief   This global macro enable storage of thread names to help developers.\n *\n *          To activate it set environment variable `THREAD_NAMES=1`, or use Kconfig.\n *          It is automatically enabled if `DEVELHELP` is.\n */\n#if DOXYGEN\n#   define CONFIG_THREAD_NAMES\n#endif\n\n/**\n * @def TEST_SUITES\n * @brief   This global macro activates functionality that is needed for\n *          automated testing but not needed otherwise.\n */\n#if DOXYGEN\n#   define TEST_SUITES\n#endif\n\n/**\n * @}\n */\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "features.yaml",
          "type": "blob",
          "size": 39.4482421875,
          "content": "%YAML 1.2\n---\n# This files is the source of truth what features (as build system entities)\n# exist in RIOT. The file `makefiles/features_existing.inc.mk` is generated\n# from this list, and so is the documentation in\n# `doc/doxygen/src/feature_list.md`. To regenerate them, run\n# `make generate-features` in the root of the repo.\n#\n# The syntax is relatively simple: A group is a mapping that may contain a\n# string-valued \"title\" and \"help\", may contain a list of groups under the\n# \"groups\" key, and a list of features under the \"features\" key, where a\n# feature is expressed as a mapping that contains a \"name\" and a \"help\" string.\n# The syntax is formally described in dist/tools/features_yaml2mx/schema.cddl.\n#\n# Note: The syntax or even the file format will likely change and evolve over\n#       time.\ngroups:\n- title: Architecture Features\n  help: These indicate architecture features, such as word size of the CPU,\n        supported instruction sets and so on. All architecture features provided\n        by a given board will always be used, e.g. an 8-bit CPU cannot just stop\n        being an 8-bit CPU on request.\n  groups:\n  - title: Word size\n    help: Word size of the CPU\n    features:\n    - name: arch_8bit\n      help: CPU has a 8-bits architecture\n    - name: arch_16bit\n      help: CPU has a 16-bits architecture\n    - name: arch_32bit\n      help: CPU has a 32-bits architecture\n    - name: arch_64bit\n      help: CPU has a 64-bits architecture\n  - title: Architecture grouping\n    help: Instruction set of the CPU\n    features:\n    - name: arch_arm\n      help: CPU architecture is classic ARM or Cortex M\n    - name: arch_arm7\n      help: CPU architecture is classic ARM (ARM7)\n    - name: arch_avr8\n      help: CPU architecture is AVR-8\n    - name: arch_efm32\n      help: FIXME. This is not an architecture. Use cpu_efm32 for this\n    - name: arch_esp\n      help: \"CPU architecture is an ESP. (Fixme: This is not an architecture)\"\n    - name: arch_esp_xtensa\n      help: CPU architecture is Xtensa\n    - name: arch_esp_riscv\n      help: CPU architecture is RISC-V (ESP flavor)\n    - name: arch_esp32\n      help: \"CPU architecture is an ESP32. (Fixme: This is not an architecture)\"\n    - name: arch_esp32_xtensa\n      help: CPU architecture is Xtensa (ESP32 flavor)\n    - name: arch_esp8266\n      help: CPU architecture is Xtensa (ESP8266 flavor)\n    - name: arch_msp430\n      help: CPU architecture is MSP430\n    - name: arch_native\n      help: CPU architecture is `native`\n    - name: arch_riscv\n      help: CPU architecture is RISC-V\n    - name: arch_nuclei\n      help: The CPU is based on a Nuclei System Technology design. Hence, RIOT is\n            using the Nuclei Microcontroller Software Interface Standard\n            (NMSIS) vendor independent hardware abstraction layer.\n\n- title: CPU Features\n  help: These features are related to CPU capabilities or just used to\n        indicated which CPU family is used.\n  groups:\n  - title: CPU Capabilities\n    help: These correspond to features/capabilities provided by certain CPUs\n    groups:\n    - title: Cortex M Specific Features\n      help: These features are only available on (some) ARM Cortex M MCUs\n      features:\n      - name: cpu_check_address\n        help: The @ref cpu_check_address can be used to check if\n              accessing a given address would cause a bus fault.\n      - name: cortexm_stack_limit\n        help: ARM Cortex-M PSPLIM/MSPLIM registers are available.\n      - name: cortexm_svc\n        help: ARM Cortex-M Supervisor Calls are available.\n      - name: cortexm_fpu\n        help: A hardware floating point unit is available.\n      - name: cortexm_mpu\n        help: A memory protection unit (MPU) is available.\n      groups:\n      - title: nRF Capabilities\n        help: These features are only available on (some) nordic nRF MCUs\n        features:\n        - name: vdd_lc_filter_reg1\n          help: An LC filter for use with the internal DC/DC converter is\n                present. If this is the case, the DC/DC converter is used over the\n                LDO regulator for improved power efficiency.\n        - name: vdd_lc_filter_reg0\n          help: The MCU supports a high voltage supply via an two-stage regulator\n                and the board has an LC filter required for using the two-stage\n                DC/DC converter. This enables the two-stage DC/DC converter.\n    - title: AVR-8 Specific Features\n      groups:\n      - title: ATmega Specific Features\n        help: These features are only available on (some) ATmega MCUs.\n        features:\n        - name: atmega_pcint0\n          help: Required pin-mapping for pin change interrupt on bank 0 is available.\n                See section on pin change interrupts in @ref cpu_atmega_common\n        - name: atmega_pcint1\n          help: Required pin-mapping for pin change interrupt on bank 1 is available.\n                See section on pin change interrupts in @ref cpu_atmega_common\n        - name: atmega_pcint2\n          help: Required pin-mapping for pin change interrupt on bank 2 is available.\n            See section on pin change interrupts in @ref cpu_atmega_common\n        - name: atmega_pcint3\n          help: Required pin-mapping for pin change interrupt on bank 3 is available.\n                See section on pin change interrupts in @ref cpu_atmega_common\n      - title: ATxmega Specific Features\n        help: These features are only available on (some) ATxmega MCUs.\n        features:\n        - name: atxmega_ebi\n          help: MCU supports the external bus interface (EBI) to either extend\n                RAM with external RAM or attach memory mapped peripherals such\n                as (some) displays.\n    - title: EFM32 Specific Features\n      features:\n      - name: efm32_coretemp\n        help: Y R U not using `periph_temperature` for this?\n      - name: gecko_sdk_librail_nonfpu\n        help: The CPU offers librail support if the FPU is disabled.\n              Librail is shipped as pre-compiled blobs. Thus, we have to adapt to\n              their choice how to process floats.\n      - name: gecko_sdk_librail_fpu\n        help: The CPU offers librail support if the FPU is enabled.\n              Librail is shipped as pre-compiled blobs. Thus, we have to adapt to\n              their choice how to process floats.\n    - title: ESP Specific Features\n      help: These features are only available on (some) ESP MCUs.\n      features:\n      - name: esp_jtag\n        help: The MCU supports JTAG for programming and debugging. Enable this\n              feature to expose the interface at the cost of having fewer pins as\n              GPIOs available.\n      - name: esp_now\n        help: An ESP NOW-compatible radio is present.\n      - name: esp_spiffs\n        help: A Serial Peripheral Interface Flash File System can be used.\n      - name: esp_wifi\n        help: An ESP WiFi radio is present.\n      - name: esp_wifi_ap\n        help: ESP WiFi SoftAP support is present.\n      - name: esp_wifi_enterprise\n        help: The ESP WiFi interface supports WPA2 enterprise mode.\n      - name: esp_ble_esp32\n        help: The ESP32x SoC uses the SDK Bluetooth LE library for the ESP32\n              variant.\n      - name: esp_ble_esp32c3\n        help: The ESP32x SoC uses the SDK Bluetooth LE library for the ESP32-C3 or\n              ESP32-S3 variant.\n      - name: esp_hw_counter\n        help: The used ESP32x SoC supports HW counters that can be used as timers.\n      - name: esp_rmt\n        help: The ESP32x SoC has an RMT (Remote Control Transceiver) peripheral.\n      - name: esp_rtc_timer_32k\n        help: An external 32.768 kHz crystal is connected to the ESP32x Soc on the\n              board.\n      - name: esp_spi_ram\n        help: An external RAM is connected via the SPI interface to\n              the ESP32x SoC on the board.\n      - name: esp_spi_oct\n        help: Octal SPI mode is used for Flash and SPI RAM. In this\n              case additional GPIOs are used for the SPI interface and cannot be\n              used for other purposes.\n      - name: esp_ble\n        help: An ESP32 Bluetooth LE transceiver is present.\n    - title: nordic nRF Specific Features\n      features:\n      - name: radio_nrf802154\n        help: An nRF MCU with a peripheral radio that supports IEEE 802.15.4 is\n              present.\n      - name: radio_nrfble\n        help: An nRF MCU with a peripheral radio that supports Bluetooth LE is\n              present.\n      - name: radio_nrfmin\n        help: An nRF MCU with a peripheral radio that supports nordics proprietary\n              link layer protocol is present.\n\n  - title: CPU Grouping\n    help: These are not actually features/capabilities, but just indicate to\n          which CPU family a certain CPU belongs\n    features:\n    - name: cpu_native\n      help: The board is simulated by a native program running on the host\n\n    groups:\n    - title: Atmel / Microchip AVR-8 Grouping\n      groups:\n      - title: ATmega Grouping\n        features:\n        - name: cpu_core_atmega\n          help: The MCU has an ATmega CPU\n        - name: cpu_atmega8\n          help: The MCU is an ATmega8\n        - name: cpu_atmega32u4\n          help: The MCU is an ATmega32U4\n        - name: cpu_atmega128rfa1\n          help: The MCU is an ATmega128RFA1\n        - name: cpu_atmega256rfr2\n          help: The MCU is an ATmega256RFR2\n        - name: cpu_atmega328p\n          help: The MCU is an ATmega328P\n        - name: cpu_atmega1281\n          help: The MCU is an ATmega1281\n        - name: cpu_atmega1284p\n          help: The MCU is an ATmega1284P\n        - name: cpu_atmega2560\n          help: The MCU is an ATmega2560\n      - title: ATxmega Grouping\n        features:\n        - name: cpu_core_atxmega\n          help: The MCU has an ATxmega CPU\n        - name: cpu_atxmega\n          help: The MCU is an ATxmega XYZ CPU\n    - title: ARM Cortex-M and Classic ARM Grouping\n      features:\n      - name: cpu_core_cortexm\n        help: The MCU has an ARM Cortex-M CPU (any family)\n      - name: cpu_stm32\n        help: The MCU has an STM32 MCU\n\n      groups:\n      - title: Atmel / Microchip SAM Grouping\n        groups:\n        - title: SAM0 Grouping\n          features:\n          - name: cpu_samd21\n            help: The MCU has an Atmel/Microchip SAM D10/D11/D20/D21 CPU\n          - name: cpu_samd5x\n            help: The MCU has an Atmel/Microchip SAM D5x CPU\n          - name: cpu_saml1x\n            help: The MCU has an Atmel/Microchip SAM L1x CPU\n          - name: cpu_saml21\n            help: The MCU has an Atmel/Microchip SAM L2x / L3x CPU\n        - title: SAM3 Grouping\n          features:\n          - name: cpu_sam3\n            help: The MCU has an Atmel/Microchip SAM 3 CPU\n\n      - title: GigaDevice Semiconductor Inc Grouping\n        features:\n        - name: cpu_gd32v\n          help: The MCU is part of the GigaDevice GD32V family\n\n      - title: nordic nRF Grouping\n        features:\n        - name: cpu_nrf51\n          help: The MCU has an nordic nRF51 CPU\n        - name: cpu_nrf52\n          help: The MCU has an nordic nRF52 CPU\n        - name: cpu_nrf53\n          help: The MCU has an nordic nRF53 CPU\n        - name: cpu_nrf9160\n          help: The MCU has an nordic nRF9160 CPU\n\n      - title: NXP Grouping\n        features:\n        - name: cpu_kinetis\n          help: The MCU is part of the NXP Kinetis family\n        - name: cpu_lpc1768\n          help: The MCU is an NXP LPC1768\n        - name: cpu_lpc23xx\n          help: The MCU is part of the NXP LPC23xx classic ARM family\n        - name: cpu_qn908x\n          help: The MCU is part of the NXP QN908x family\n\n      - title: Nintendo Grouping\n        features:\n        - name: cpu_arm7tdmi_gba\n          help: The MCU of the Game Boy Advance.\n\n      - title: Raspberry Pi Grouping\n        features:\n        - name: cpu_rpx0xx\n          help: The MCU is part of the Raspberry PI RPx0xx family.\n\n      - title: Silicon Laboratories EFM32 Grouping\n        features:\n        - name: cpu_efm32\n          help: The MCU is part of the Silicon Labs EFM32 family\n\n      - title: SiFive, Inc. Grouping\n        features:\n        - name: cpu_fe310\n          help: The MCU is in SiFive Freedom E310\n\n      - title: STMicroelectronics STM32 Grouping\n        features:\n        - name: cpu_stm32c0\n          help: The MCU has an STM32 C0 MCU\n        - name: cpu_stm32f0\n          help: The MCU has an STM32 F0 MCU\n        - name: cpu_stm32f1\n          help: The MCU has an STM32 F1 MCU\n        - name: cpu_stm32f2\n          help: The MCU has an STM32 F2 MCU\n        - name: cpu_stm32f3\n          help: The MCU has an STM32 F3 MCU\n        - name: cpu_stm32f4\n          help: The MCU has an STM32 F4 MCU\n        - name: cpu_stm32f7\n          help: The MCU has an STM32 F7 MCU\n        - name: cpu_stm32g0\n          help: The MCU has an STM32 G0 MCU\n        - name: cpu_stm32g4\n          help: The MCU has an STM32 G4 MCU\n        - name: cpu_stm32l0\n          help: The MCU has an STM32 L0 MCU\n        - name: cpu_stm32l1\n          help: The MCU has an STM32 L1 MCU\n        - name: cpu_stm32l4\n          help: The MCU has an STM32 L4 MCU\n        - name: cpu_stm32l5\n          help: The MCU has an STM32 L5 MCU\n        - name: cpu_stm32mp1\n          help: The MCU has an STM32 MP1 MCU\n        - name: cpu_stm32u5\n          help: The MCU has an STM32 U5 MCU\n        - name: cpu_stm32wb\n          help: The MCU has an STM32 WB MCU\n        - name: cpu_stm32wl\n          help: The MCU has an STM32 WL MCU\n\n      - title: Texas Instruments ARM MCU Grouping\n        features:\n        - name: cpu_cc26x2_cc13x2\n          help: The CPU in an TI CC26x2 or an TI CC13x2\n        - name: cpu_cc26x0_cc13x0\n          help: The CPU in an TI CC26x0 or an TI CC13x0\n        - name: cpu_cc2538\n          help: The CPU in an TI CC2538\n        - name: cpu_lm4f120\n          help: The CPU is an TI LM4F120\n\n    - title: Expressif ESP Grouping\n      features:\n      - name: cpu_esp32\n        help: The MCU is part of the ESP32 family\n      - name: cpu_esp8266\n        help: The MCU is an ESP8266\n\n    - title: Texas Instruments MSP430 MCU Grouping\n      features:\n      - name: cpu_msp430\n        help: The MCU is member of the MSP430 family.\n      - name: cpu_msp430_x1xx\n        help: The MCU is member of the MSP430 x1xx family.\n      - name: cpu_msp430_f2xx_g2xx\n        help: The MCU is member of the MSP430 F2xx/G2xx family.\n\n- title: Arduino Features\n  help: These features indicate that an Arduino style I/O mapping is available,\n        in which common descriptors refer to a GPIO pin / I²C bus / SPI bus /\n        PWM output / ADC input / etc. at a well-known location on a well-known\n        board form factor.\n  groups:\n  - title: Arduino I/O Mapping Features\n    help: These features indicate presence of I/O mappings (e.g. well-known\n          preprocessor macro names such as `ARDUINO_PIN_0` for a GPIO pin that\n          is routed to pin `D0` on the board.\n    features:\n    - name: arduino_analog\n      help: Indicates that Arduino analog pins mappings are provided.\n    - name: arduino_dac\n      help: Indicates that Arduino DAC pins mappings are provided.\n    - name: arduino_i2c\n      help: Indicates that Arduino I²C bus mappings are provided.\n    - name: arduino_pins\n      help: Indicates that Arduino digital pins mappings are provided.\n    - name: arduino_pwm\n      help: Indicates that Arduino digital pin to PWM mappings are provided.\n    - name: arduino_spi\n      help: Indicates that Arduino SPI bus mappings are provided.\n    - name: arduino_uart\n      help: Indicates that Arduino UART device mappings are provided.\n  - title: Arduino Form Factor Features\n    help: These features indicate compatibility with a specific form factor,\n          e.g. Arduino UNO or Adafruit Feather\n    features:\n    - name: arduino_shield_isp\n      help: Indicates that the board is mechanically and electrically compatible\n            with shields that mate with the ISP header for SPI connectivity.\n    - name: arduino_shield_mega\n      help: >\n            Indicates that the board is mechanically and electrically compatible\n            with shields developed for the Arduino Mega 2560. (Note: Except\n            the ISP header, that requires `arduino_shield_isp` in addition.)\n    - name: arduino_shield_nano\n      help: >\n            Indicates that the board is mechanically and electrically compatible\n            with shields developed for the Arduino Nano. (Note: Except the\n            ISP header, that requires `arduino_shield_isp` in addition.)\n    - name: arduino_shield_uno\n      help: >\n            Indicates that the board is mechanically and electrically compatible\n            with shields developed for the Arduino Nano. (Note: Except the\n            ISP header, that requires `arduino_shield_isp` in addition.)\n\n- title: RAM Related Features\n  help: These features indicate presence of special RAM regions or features\n  features:\n  - name: backup_ram\n    help: A special portion of RAM is retained during deep sleep.\n          Variables can be placed there by annotating them with the `BACKUP_RAM`\n          attribute.\n  - name: periph_rtc_mem\n    help: The RTC peripheral provides storage memory for deep sleep. Unlike\n          `backup_ram`, this memory is not mapped in the address space and requires\n          calls to @ref rtc_mem_read and @ref rtc_mem_write to access.\n  - name: puf_sram\n    help: The @ref sys_puf_sram module can be used to harvest entropy from\n          uninitialized SRAM on cold boot to seed PRNGs.\n\n- title: Bluetooth Low Energy Features\n  help: The capabilities of the integrated (peripheral) BLE transceiver are\n        modules using these features.\n  features:\n  - name: ble_adv_ext\n    help: Support for Bluetooth LE 5 Advertising Extension\n  - name: ble_nimble\n    help: Support for the NimBLE stack\n  - name: ble_nimble_netif\n    help: NimBLE supports the netif API, so that network stacks such as GNRC can\n          be used on top. See @ref pkg_nimble_netif for details.\n  - name: ble_phy_2mbit\n    help: The BLE radio supports the 2Mbit PHY mode\n  - name: ble_phy_coded\n    help: The BLE radio supports the CODED PHY mode\n\n- title: Toolchain Features\n  help: These features are used to indicate which toolchains are supported,\n        which languages they support, which libraries (e.g. picolibc, newlibc,\n        libstdc++, etc.) are supported. Unless using `BUILD_IN_DOCKER=1`, those\n        toolchains/libraries need to be installed on the system for the given\n        platform to actually be usable, though.\n  features:\n  - name: cpp\n    help: The C++ programming language is supported. Note that libstdc++ support\n          is not implied and indicated by a separate feature.\n  - name: libstdcpp\n    help: When using C++, a libstdc++ is available.\n  - name: picolibc\n    help: The picolibc C library is available for the platform.\n  - name: newlib\n    help: The newlib C library is available for the platform.\n  - name: rust_target\n    help: The Rust target definition (\"triple\") is known. This is\n          a mandatory requirement to build Rust code.\n  - name: emulator_renode\n    help: The platform is compatible with the Renode emulator.\n\n- title: Peripheral Features\n  help: These features indicate presence of peripheral IP block, presence of\n        a corresponding driver in RIOT, and any required board specific\n        configuration needed.\n  features:\n  - name: periph_cpuid\n    help: The CPU has identification information available. In the best case this\n          is a globally unique ID, in the worst case it is some calibration\n          parameters to compensate production variance that may or may not allow\n          telling the CPU apart from any given other.\n  - name: periph_pwm\n    help: A Pulse-Width Modulation (PWM) peripheral is present.\n  - name: periph_qdec\n    help: A Quadrature Decoder (QDEC) peripheral is present.\n  - name: periph_temperature\n    help: The MCU has a built-in temperature sensor.\n  - name: periph_vbat\n    help: Backup battery monitoring is supported\n  - name: periph_freqm\n    help: A Frequency Meter peripheral is present.\n  - name: periph_dma\n    help: A DMA peripheral is present. Enabling this feature affects the\n          implementation of other peripheral drivers. E.g. SPI/I²C/UART/...\n          transfers may use the DMA (possible only when transfers are longer than\n          a certain cut-off). The main benefit is that other threads can run\n          while the thread issuing the, say SPI transfer, is blocked until the\n          transfer is completed. It often also speeds up longer transfers.\n  - name: periph_pm\n    help: The MCU supports power management (PM) and RIOT can make use of that.\n  - name: periph_ltdc\n    help: An LCD/TFT Display Controller (LTDC) peripheral is present. (Currently\n          only provided by some STM32 MCUs.)\n  - name: periph_pio\n    help: A Programmable IO (PIO) is present. (Currently only RP2040)\n\n  groups:\n  - title: General-Purpose Input/Output (GPIO)\n    features:\n    - name: periph_gpio_fast_read\n      help: This feature is currently available on Microchip SAM0 based MCUs only.\n            Enabling this feature reduces read latency for an increase in power\n            consumption. It affects both the classic GPIO API driver and the\n            GPIO LL driver.\n\n    groups:\n    - title: Pin Level Peripheral GPIO API\n      help: This is a pin-level API that caters most use cases. Most code\n            should be using this API over GPIO LL.\n      features:\n      - name: periph_gpio\n        help: The classic GPIO API is implemented\n      - name: periph_gpio_irq\n        help: The classic GPIO driver supports external interrupts.\n      - name: periph_gpio_tamper_wake\n        help: This features is currently available on Microchip SAMD5x MCUs only.\n              Enabling this features allows GPIO IRQs to wake the CPU even in\n              deep sleep. The SAMD5x is not the only MCU that can be woken from\n              lower power modes via GPIO, but it is currently the only MCU were\n              this feature is configurable.\n\n    - title: GPIO LL API\n      help: This is a lower level GPIO API that allows port based access. It\n            exposes a number of advanced features and lower latency GPIO\n            access at the cost of a more complex and more frequently\n            changing API. You should only use this if the Pin Level Peripheral\n            GPIO API is not catering your use case well enough.\n      features:\n      - name: periph_gpio_ll\n        help: The GPIO LL driver is implemented for the MCU's GPIO peripheral.\n      - name: periph_gpio_ll_irq\n        help: The GPIO LL driver has IRQ support.\n      - name: periph_gpio_ll_irq_level_triggered_high\n        help: Level triggered IRQs are supported for level high.\n      - name: periph_gpio_ll_irq_level_triggered_low\n        help: Level triggered IRQs are supported for level low.\n      - name: periph_gpio_ll_irq_edge_triggered_both\n        help: Edge triggered IRQs are supported with both falling and rising\n              edges as trigger\n      - name: periph_gpio_ll_irq_unmask\n        help: The GPIO LL driver supports unmasking interrupts without\n              clearing pending IRQs that came in while masked.\n      - name: periph_gpio_ll_disconnect\n        help: Some or all GPIO pins can be electrically disconnected from the MCU\n              (high impedance state) with the GPIO LL API.\n      - name: periph_gpio_ll_input_pull_down\n        help: Some or all GPIO pins can enable an internal pull down resistor when\n              the GPIO is configured in input mode.\n      - name: periph_gpio_ll_input_pull_keep\n        help: Some or all GPIO pins can enable internal pull resistors that pull\n              towards the current bus level (pull down when bus is low, pull up\n              when bus is high).\n      - name: periph_gpio_ll_input_pull_up\n        help: Some or all GPIO pins can enable an internal pull up resistor when\n              the GPIO is configured in input mode.\n      - name: periph_gpio_ll_open_drain\n        help: Some or all pins can be configured in open drain mode.\n      - name: periph_gpio_ll_open_drain_pull_up\n        help: Some or all GPIO pins can enable an internal pull up resistor when\n              the GPIO is configured in open drain mode.\n      - name: periph_gpio_ll_open_source\n        help: Some or all pins can be configured in open source mode.\n      - name: periph_gpio_ll_open_source_pull_down\n        help: Some or all GPIO pins can enable an internal pull down resistor when\n              the GPIO is configured in open source mode.\n      - name: periph_gpio_ll_switch_dir\n        help: The GPIO LL driver allows switching the direction between input\n              and (push-pull) output in an efficient manner. The main use case\n              is bit-banging bidirectional protocols when open-drain / open-source\n              mode is not supported. Another use case is controlling GPIOs\n              at high speed with three output states (high, low, high impedance),\n              as e.g. needed for Charlieplexing\n\n  - title: Serial Interfaces\n    help: Features related to serial interfaces\n\n    groups:\n    - title: UART Features\n      help: Features related to the Universal Asynchronous Receiver-Transmitter\n            peripheral\n      features:\n      - name: periph_uart\n        help: An UART peripheral is present.\n      - name: periph_lpuart\n        help: A low-power UART peripheral is present.\n      - name: periph_uart_collision\n        help: The UART peripheral supports hardware collision detection.\n      - name: periph_uart_hw_fc\n        help: The UART peripheral supports hardware flow control.\n      - name: periph_uart_modecfg\n        help: The UART peripheral allows configuration to non-default modes.\n      - name: periph_uart_tx_ondemand\n        help: Indicates that the UART peripheral can enable / disable the TX line\n              using @ref uart_enable_tx / @ref uart_disable_tx\n      - name: periph_uart_nonblocking\n        help: The UART peripheral allows non-blocking operations.\n      - name: periph_uart_reconfigure\n        help: The UART pins can be made available as regular GPIOS using\n              @ref uart_deinit_pins and be attached back to the UART peripheral using\n              @ref uart_init_pins\n      - name: periph_uart_rxstart_irq\n        help: The UART can issue an interrupt when the start condition detected.\n              Use @ref uart_rxstart_irq_configure to associate a callback with the\n              ISR of a given UART peripheral.\n\n    - title: SPI Features\n      help: Features related to the Serial Peripheral Interface peripheral\n      features:\n      - name: periph_spi\n        help: An SPI peripheral is present.\n      - name: periph_spi_on_qspi\n        help: The QSPI peripheral can be used in SPI mode.\n      - name: periph_spi_reconfigure\n        help: The SPI pins can be made available as regular GPIOs using\n              @ref spi_deinit_pins and re-attached to the SPI peripheral using\n              @ref spi_init_pins\n      - name: periph_spi_gpio_mode\n        help: The SPI peripheral supports specifying the GPIO mode of each SPI\n              pin upon initialization of the peripheral.\n\n    - title: I²C Features\n      help: Features related to the Inter-Integrated Circuit peripheral\n      features:\n      - name: periph_i2c\n        help: An I²C peripheral is present.\n      - name: pio_i2c\n        help: An I²C bus can be provided via the PIO peripheral.\n      - name: periph_i2c_reconfigure\n        help: The I²C pins can be made available as regular GPIOs using\n              @ref i2c_deinit_pins and re-attached to the I²C peripheral using\n              @ref i2c_init_pins\n\n    - title: USB Features\n      help: Features related to the Universal Serial Bus\n      features:\n      - name: periph_usbdev\n        help: An USB peripheral is present.\n      - name: periph_usbdev_hs\n        help: The USB peripheral supports High-Speed.\n      - name: periph_usbdev_hs_utmi\n        help: An USB high-speed peripheral with internal UTMI+ HS PHY is present.\n      - name: periph_usbdev_hs_ulpi\n        help: An USB high-speed peripheral with ULPI HS PHY is present.\n\n  - title: Analog Features\n    help: Features related to ADCs/DACs\n    features:\n    - name: periph_adc\n      help: An ADC peripheral is present.\n    - name: periph_adc_continuous\n      help: The ADC peripheral can be left on between measurements.\n    - name: periph_dac\n      help: A DAC peripheral is present.\n\n  - title: Integrated Connectivity\n    help: Peripheral network and communication interfaces.\n    features:\n    - name: periph_can\n      help: A CAN peripheral is present.\n    - name: can_rx_mailbox\n      help: CAN controller RX mailbox is supported\n    - name: periph_eth\n      help: An Ethernet peripheral is present.\n\n  - title: SD / MMC Card Features\n    features:\n    - name: periph_sdmmc\n      help: An SDIO/SD/MMC peripheral is present and used by the board. This feature\n            shall be provided by the board configuration, if available.\n    - name: periph_sdmmc_8bit\n      help: The SDIO/SD/MMC peripheral supports the 8-bit bus width and at least one\n            component of the board is connected with 8 data lines. This feature\n            shall be provided by the board configuration, if available.\n    - name: periph_sdmmc_auto_clk\n      help: The SDIO/SD/MMC peripheral supports the Auto-CLK feature, i.e. the\n            automatic activation and deactivation of the SD CLK signal when\n            required. This feature shall be provided by the MCU if supported.\n    - name: periph_sdmmc_auto_cmd12\n      help: The SDIO/SD/MMC peripheral supports the Auto-CMD12 feature, i.e. CMD12 is\n            sent automatically to stop the transmission in multiple block operations.\n            This feature shall be provided by the MCU if supported.\n    - name: periph_sdmmc_clk\n      help: The SDIO/SD/MMC peripheral has special clock functionality used by the\n            peripheral driver.\n    - name: periph_sdmmc_hs\n      help: The SDIO/SD/MMC peripheral supports the high speed access, that is\n            50 MHz for SD and 52 MHz for MMC. This feature shall be provided by the\n            MCU.\n    - name: periph_sdmmc_mmc\n      help: The SDIO/SD/MMC peripheral supports MMC/eMMCs. This feature shall be\n            provided by the MCU.\n    - name: periph_sdmmc_sdhc\n      help: The SDIO/SD/MMC peripheral is compliant with the SD Host Controller\n            Specification. This feature shall be provided by the MCU.\n\n  - title: Flash Features\n    features:\n    - name: periph_flashpage\n      help: A Flashpage peripheral is present.\n    - name: periph_flashpage_in_address_space\n      help: Static memory sections can fundamentally be turned into flash pages.\n    - name: periph_flashpage_pagewise\n      help: The Flashpage peripheral supports pagewise writing.\n    - name: periph_flashpage_rwee\n      help: The Flashpage peripheral is of the Read While Write.\n    - name: periph_flashpage_aux\n      help: It is possible to partition off a part of the internal flash for an\n            auxiliary slot.\n\n  - title: Other Peripheral Storage Features\n    features:\n    - name: periph_eeprom\n      help: An EEPROM peripheral is present.\n    - name: periph_fmc\n      help: An Flexible Memory Controller (FMC) or an Flexible Static Memory\n            Controller (FSMC) is present. It can be used to extend memory or\n            drive display controllers.\n    - name: periph_fmc_16bit\n      help: The FMC/FSMC peripheral supports a 16-bit data bus\n    - name: periph_fmc_32bit\n      help: The FMC/FSMC peripheral supports a 32-bit data bus\n    - name: periph_fmc_sdram\n      help: A board configuration is provided to attach map the board's SDRAM into\n            the address space using the FMC/FSMC.\n    - name: periph_fmc_nor_sram\n      help: A board configuration is provided to attach map the board's NOR flash\n            or (P)SRAM into the address space using the FMC/FSMC.\n    - name: periph_nvm\n      help: A non-volatile memory peripheral is present. This is currently\n            only provided by ATxmega MCUs to read the production signature which\n            then is used as CPU ID.\n\n  - title: Timer Features\n    help: Features related to timers\n    features:\n    - name: periph_rtc\n      help: An Real Time Clock (RTC) peripheral is present. This timer works with\n            time broken down into year, month, day, hour, minute, second.\n    - name: periph_rtc_ms\n      help: The RTC peripheral can provide sub-second timestamps.\n    - name: periph_rtt\n      help: An Real Time Timer (RTT) (a.k.a. Real Time Counter) peripheral is\n            present. This timer is similar to `periph_timer`, except for using\n            a different API (for no reason), being low power, slower ticking,\n            and typically less affected by clock drift.\n    - name: periph_rtt_set_counter\n      help: The RTT peripheral implements @ref rtt_set_counter\n    - name: periph_rtt_overflow\n      help: The RTT provides an overflow callback.\n    - name: periph_wdt\n      help: A Watchdog Timer (WDT) peripheral is present.\n    - name: periph_wdt_cb\n      help: The WDT peripheral allows setting a callback function to be called\n            before the reboot is actually triggered.\n    - name: periph_wdt_warning_period\n      help: By setting @ref CONFIG_WDT_WARNING_PERIOD the time when the WDT callback\n            is triggered can be set. It specifies how many milliseconds before the\n            reboot the callback should be executed.\n\n    groups:\n    - title: High Frequency Timers\n      help: Features related to high frequency timers, a.k.a. `periph_timer`\n      features:\n      - name: periph_timer\n        help: A high frequency timer peripheral is present.\n      - name: periph_timer_periodic\n        help: The Timer peripheral allows setting periodic timeouts in addition to\n              the mandatory one-shot timeouts.\n      - name: periph_timer_poll\n        help: The Timer peripheral allows polling if a one-shot timer channel has\n              already been expired using @ref timer_poll_channel to allow high\n              accuracy busy waiting.\n      - name: periph_timer_query_freqs\n        help: The timer driver supports querying supported frequencies.\n\n    - title: PTP Timers\n      help: These features are related to the hardware requirements to implement\n            the Precision Time Protocol.\n      features:\n      - name: periph_ptp\n        help: A PTP clock is present. The clock must have nanoseconds as unit and be\n              at least 64 bit wide.\n      - name: periph_ptp_speed_adjustment\n        help: The PTP clock speed can be adjusted. This can be used for clock drift\n              correction and synchronization without \"jumping\" to the new network\n              time, but rather pace faster/slow for some time until the clocks are\n              back in sync.\n      - name: periph_ptp_timer\n        help: The PTP clock can be used as timer (so that (absolute) timeouts can\n              be set on the clock).\n      - name: periph_ptp_txrx_timestamps\n        help: The PTP clock can provide exact time stamps of the reception and\n              transmission of frames (typically received at the peripheral Ethernet\n              interface).\n\n  - title: Platform Specific\n    help: Things specific to a single MCU family / MCU vendor\n    features:\n    - name: board_bat_voltage\n      help: Measures battery voltage based on ADC sampling.\n    - name: periph_ics\n      help: An NXP Kinetis Internal Clock Source Controller (ICS peripheral) is\n            present.\n    - name: periph_mcg\n      help: An Kinetis Multipurpose Clock Generator (MCG peripheral) is present.\n    - name: periph_mcg_lite\n      help: An Kinetis Multipurpose Clock Generator (MCG peripheral) is present in\n            the lite version.\n    - name: periph_coretimer\n      help: A RISC-V CLINT timer is available and usable via the High Speed\n            timer API. The CLINT only supports running at the RTC clock, typically\n            32.678 kHz, though.\n    - name: periph_pmp\n      help: A RISC-V physical memory protection (PMP) peripheral is present.\n            (Similar to ARM's MPU)\n    - name: periph_clic\n      help: A RISC-V Core-local Interrupt Controller (CLIC) peripheral is present.\n    - name: periph_plic\n      help: A RISC-V Platform-local Interrupt Controller (PLIC) peripheral is present.\n\n  - title: Cryptographic Features\n    help: Hardware acceleration for cryptographic primitives, hardware random\n          number generators, and other features useful for cryptography.\n\n          Please keep in mind that some of the cryptographic primitives provided\n          by the hardware have not aged well in terms of security. They may\n          still be nifty for use cases other than security, though.\n    features:\n    - name: periph_cryptocell_310\n      help: A cryptocell peripheral is present.\n    - name: periph_hash_md5\n      help: MD5 hardware acceleration present.\n    - name: periph_hash_sha_1\n      help: SHA-1 hardware acceleration present.\n    - name: periph_hash_sha_224\n      help: SHA-224 hardware acceleration present.\n    - name: periph_hash_sha_256\n      help: SHA-256 hardware acceleration present.\n    - name: periph_hash_sha_384\n      help: SHA-384 hardware acceleration present.\n    - name: periph_hash_sha_512\n      help: SHA-512 hardware acceleration present.\n    - name: periph_hash_sha_512_224\n      help: SHA-512/224 hardware acceleration present.\n    - name: periph_hash_sha_512_256\n      help: SHA-512/256 hardware acceleration present.\n    - name: periph_hash_sha3_256\n      help: SHA-3/256 hardware acceleration present.\n    - name: periph_hash_sha3_384\n      help: SHA-3/384 hardware acceleration present.\n    - name: periph_hash_sha3_512\n      help: SHA-3/512 hardware acceleration present.\n    - name: periph_hmac_sha_256\n      help: HMAC SHA-256 hardware acceleration present.\n    - name: periph_hwrng\n      help: A Hardware Random Number Generator (HWRNG) peripheral is present.\n    - name: periph_cipher_aes_128_cbc\n      help: AES 128 CBC hardware acceleration present\n    - name: periph_cipher_chacha20\n      help: ChaCha20 hardware acceleration present\n    - name: periph_ecc_p192r1\n      help: ECC P192R1 hardware acceleration peripheral present.\n    - name: periph_ecc_p256r1\n      help: ECC P256R1 hardware acceleration peripheral present.\n    - name: periph_ecc_ed25519\n      help: ECC Edwards25519 hardware acceleration peripheral present.\n\n- title: Other Features\n  help: Features that did not fit in any category\n  features:\n  - name: dbgpin\n    help: The platform provides the necessary initialization hooks\n          for the `dbgpin` module.\n  - name: no_idle_thread\n    help: The MCU can idle without an idle thread\n  - name: riotboot\n    help: The `riotboot` bootloader is supported.\n  - name: ssp\n    help: Stack Smashing Protection is supported.\n  - name: tinyusb_device\n    help: The TinyUSB network stack is supported and can be selected with\n          `USEPKG += tinyusb`.\n  - name: bootloader_stm32\n    help: The MCU has a STM32 bootloader in ROM that can be used for flashing.\n\n- title: Board Features\n  help: These features indicate features of the board\n  features:\n  - name: netif\n    help: The board has a network interface\n  - name: netif_ethernet\n    help: The board has an Ethernet network interface\n  - name: netif_openwsn\n    help: The board has a network interface suitable for OpenWSN\n  - name: highlevel_stdio\n    help: A high-level stdio method (such as CDC ACM) is used. This requires a\n          running thread and set-up and will not print during a crash.\n  - name: motor_driver\n    help: A motor_driver configuration is present.\n  - name: sdcard_spi\n    help: An SD-Card SPI configuration is provided.\n\n  groups:\n  - title: STM32L496G Discovery Board Features\n    help: Features available and selectable on the `stm32l496-disco` board only\n    features:\n    - name: periph_spi_stmod\n      help: By default, solder bridges SB6, SB7, SB8 are closed and USART1 is\n            connected to the Pmod/STMmod+ connector. If these solder bridges are\n            open and solder bridges SB4, SB5 and SB6 are closed instead, SPI2 is\n            connected to the STMmod+/Pmod connector. Request this feature to use\n            SPI2 with this board configuration.\n"
        },
        {
          "name": "fuzzing",
          "type": "tree",
          "content": null
        },
        {
          "name": "kconfigs",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-notes.txt",
          "type": "blob",
          "size": 768.517578125,
          "content": "RIOT-2024.10 \"FlexTape\" - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nHighlights of the 2024.10 release:\n\nThis release fixes some long-standing packet buffer leaks that occurred when using\n`gnrc_netif_pktq` and 6LoWPAN or `netdev_new_api` (#20983, #20834).\n\nA long standing-bug in the CC2538 radio driver has been fixed when processing\ncorrupted frames, that before could render the device unresponsive. This can be\ntriggered due to radio interference, but we also believe that an attacker within range\nof the radio could send crafted frames to reliably trigger the issue. We therefore\nconsider this a denial of service vulnerability and advise all users of the CC2538 to\nupgrade to 2024.10 or cherry-pick 1b61216da734fcd40ae0d832b800e4e67975bdc8. More\ndetails are published in the [security advisory](https://github.com/RIOT-OS/RIOT/security/advisories/GHSA-m75q-8vj8-wppw).\n\nWith SUIT it is now easier to accept firmwares signed with different keys,\ne.g., a node build and signed with a development key can be configured to\naccept images signed with either the development key or the production key (#21019).\nThe public keys are now also stored on the developer's machine, so if a\nencrypted private key is used, you don't need the decryption password to build\na firmware, only for signing it (#20862).\n\n`THREAD_CREATE_STACKTEST` is now the default when `DEVELHELP` is used.\n\nThis release saw the addition of the `adafruit-metro-m4-express` board.\n\n129 pull requests, composed of 255 commits, have been merged since the\nlast release, and 5 issues have been solved. 29 people contributed with\ncode in 119 days. 502 files have been touched with 142126 (+) insertions and\n1896 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\n\nSystem Libraries\n----------------\n\n+ Rust: Add `make cargo-command` and refactoring around it (#20828)\n+ static_tests: Add test for Rust code formatting rules (#20887)\n+ sys/event: add API to start periodic event without initial delay (#20911)\n+ sys/event: add event_sync() (#20916)\n* event/timeout: event_timeout_set() enqueues immediately if timeout is\n  zero (#20870)\n* examples/rust: Update CoAP example modules (#20821)\n* Rust: Update to riot-wrappers 0.9 (#20829)\n\nNetworking\n----------\n\n+ drivers: Add shield_llcc68 module (#20885)\n+ nib.c: add interface selection rules for static link local address\n  assignment (#20784)\n+ sys/event: add assertion that event has a handler (#20847)\n+ sys/net/application_layer/nanocoap: add `nanocoap_sock_get_non()` (#20852)\n+ tests/net: add stub test for gcoap_forward_proxy (#20909)\n* gcoap: Avoid reading beyond defined input buffer (#20549)\n* gnrc/ipv6/nib: don't queue packets on 6lo neighbors and drop/flush\n  if… (#20834)\n* gnrc_ipv6_nib: Force unspecified next hop addresses (#20371)\n* gnrc_sixlowpan_frag: enable `gnrc_netif_pktq` if `netdev_new_api` is\n  used (#20879)\n* net/dhcpv6: Improve option handling in dhcpv6 advertise (#20801)\n\nPackages\n--------\n\n* pkg/emlearn: bump version to 0.17.1 (#20347)\n* pkg/littlefs: make use of RIOT's log module instead of pkg provided\n  macros (#20894)\n* pkg/lvgl: Increase default LV_MEM_SIZE for 64 bit and enable tests\n  for native64 (#20846)\n* pkg/nanocbor - upgrade to last version (#20813)\n* pkg/wamr : updated wamr version to v2.1.1 (#20795)\n\nBoards\n------\n\n+ boards/adafruit-grand-central-m4-express: provide arduino features (#20904)\n+ boards/adafruit-metro-m4-express: initial port (#20912)\n+ boards/nucleo-f439zi: add ADC support (#20814)\n+ boards/nucleo-g474re: add MCU table (#20851)\n+ boards/nucleo64: add pinout source (#20931)\n+ boards/stm32l476g-disco: add ADC support (#20793)\n+ boards/stm32l476g-disco: add PWM support (#20807)\n* boards/ek-lm4f120x: Change internal LED macro for C2Rust\n  compatibility (#20831)\n* boards/nucleo-l432kc: enable CAN support (#20845)\n\nCPU\n---\n\n* core/thread: always use THREAD_CREATE_STACKTEST when DEVELHELP is\n  enabled (#20450)\n* cpu/cc2538: mask length byte before checking CRC (#21038)\n* cpu/esp32: Improve error descriptions (#20914)\n* cpu/msp430: Implement periph_gpio_ll & periph_gpio_ll_irq (#20679)\n* cpu/nrf52: fix RSSI calculation in nrf802154_radio (#20839)\n* cpu/sam0_common/periph: fix rtt reset after hibernation (#20842)\n* drivers/periph/gpio: make `gpio_write()` take a bool (#20935)\n\nDevice Drivers\n--------------\n\n* drivers/dht: fix null deref with saul (#20927)\n* drivers/led: Allow LEDn_ON to be disabled by other modules (#20833)\n\nDocumentation\n-------------\n\n+ CODING_CONVENTIONS.md: Add preprocessor directive formatting (#20866)\n+ boards/nucleo-g070rb & g071rb: add pinouts to documentation (#20822)\n+ boards/nucleo-g070rb: add MCU table to doc page (#20825)\n+ boards/nucleo-g071rb: add MCU table to doc page (#20827)\n+ boards/nucleo-g431rb & g474re: add pinouts to boards doc page (#20832)\n+ boards/nucleo-g431rb: add MCU table to documentation (#20848)\n+ boards/stm32l476g-disco: add pinout to documentation page (#20808)\n* riot.doxyfile: Update and remove deprecated options (#20897)\n* boards/nucleo-l053r8: MCU table addition to doc page (#20804)\n* boards/stm32l0538-disco: addition of pinout to documentation page (#20810)\n* build system: document `riotbuild.h` and deprecated `RIOT_MCU` (#20566)\n* doc/doxygen: print link to generated documentation (#20896)\n* doc: Point out common problem installing c2rust (#20844)\n* sys/net/app/cord: update doc (#20921)\n\nBuild System / Tooling\n----------------------\n\n+ Makefile: add .DEFAULT target to further guide new users (#20895)\n+ .clang-format: Add default clang-format configuration (#20865)\n* CI: fix true and false positives by newer codespell version (#20899)\n* dist/tools/bootterm: bump to 0.5 (#20871)\n* dist/tools/cosy: take BUILD_DIR into account (#20789)\n* make: export DEVELHELP (#20889)\n* makefiles/arch/native: don't be pedantic (#20873)\n* makefiles/suit: make use of `SUIT_SEC_PASSWORD` optional (#20862)\n* makefiles/suit: store public keys, make it easier to work with\n  multiple keys (#20858)\n* makefiles/docker.inc.mk: bump riotbuild docker image to last\n  available (#20840)\n* gh-actions: bump deprecated packages (#20892)\n\nExamples\n--------\n\n+ examples: Add asynchronous Rust example (#20830)\n+ examples/leds_shell: add example for interactive LEDs/GPIO control (#20782)\n* examples/gcoap-rust: Expose more functionality (#20838)\n* examples/leds_shell: use periph_gpio_mock on native (#20796)\n\nTesting\n-------\n\n+ tests/pkg/emlearn: add model.h to repo (#20841)\n* tests/gnrc_ipv6_nib: rtr_ltime test (#20372)\n\nAPI Changes\n-----------\n\n* cpu/stm32: implement `periph_gpio_ll_switch_dir` (#20805)\n* drivers/periph_gpio: let gpio_read() return bool (#20936)\n* drivers/periph_gpio_ll: change API to access GPIO ports (#20639)\n\nAnd 26 minor changes.\n\nDeprecations\n============\n\n\nRemovals (1)\n------------\n\n- sys/ztimer: Remove the deprecated ztimer_now64 (#20826)\n\nBug fixes (27)\n==============\n\n* boards/common/arduino-zero: Add Arudino SPI mapping (#20884)\n* cpu/native/periph_timer: add missing -lrt to linker flags (#20816)\n* cpu/sam0_common/periph_adc: add work around for errata 2.1.6 (#21001)\n* bluetil: Ensure advertisement length does not exceed pkt len (#20881)\n* boards/samd5x: GCLK source for ADC must not exceed 100 MHz (#20932)\n* boards/stm32f429i-disc1: fix touch screen axis (#21014)\n* build system: simplify docker image pinning (#20877)\n* core/mutex: use thread_yield_higher() in mutex_unlock() (#20890)\n* core/panic: don't use LOG_ functions in panic handler (#20790)\n* cpu/sam0_common/periph_gpio_ll: fix gpio_get_port() and gpio_ll_query_conf() (#21008)\n* dns_msg: skip RDLENGTH_LENGTH field when skipping record (#20857)\n* drivers/at86rf215: return ENETDOWN when interface is down (#21037)\n* examples/lorawan: drop crazy STM32 hack (#20883)\n* gcoap/forward_proxy: handle timeout case (#20915)\n* gh-actions: bump upload-artifact to v4 (#20875)\n* gnrc/ipv6: `nib route`: hide off-link PLEs (#20835)\n* gnrc/ipv6: Store all SLAAC prefixes (#20757)\n* gnrc_lorawan: Ensure minimal packet length (#20880)\n* gnrc_netif: fix double free with netdev_new_api & gnrc_netif_pktq\n  (#20979)\n* gnrc_netif: fix packet leak with gnrc_netif_pktq & netdev_new_api\n  (#20997)\n* nanocoap: always write at least 1 byte in coap_block2_finish() (#20855)\n* net/dhcpv6: Improve option parsing in dhcpv6 advertise (#20882)\n* sys/net/application_layer/gcoap: fix Observe notifications\n  correlation (#20684)\n* sys/net/nanocoap: fix UB when building hdr (#20917)\n* sys/usb_cdc_acm_stdio: only submit and flush for non-empty buffer\n  (#20987)\n* sys/ztimer: fix re-scheduling of timers (#20924)\n* Various PSA Crypto fixes (#20854)\n\n\nKnown issues\n============\n\nNetwork related issues (55)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* DHCPv6 client: Handling of NotOnLink incorrect (#20349)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* example/gnrc_border_router cannot answer after some time (#19578)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* Global IPv6 addresses remain deprecated after receiving RA (#19846)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc/ipv6: \"invalid payload length\" - corrupted IPv6 header when\n  ENABLE_DEBUG=1 in mbox.c (#20390)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_border_router: Kconfig and C disagree about number of addresses\n  per interface (#19947)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: old routes are not deleted (#19423)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* LWIP TCP Communication Error (#19676)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg/tinydtls: DTLS handshake does not work (#19595)\n* Removing a TNT global address then adding a new one does not work (#20318)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (7)\n------------------------\n\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (11)\n---------------------------\n\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (13)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* Interrupt callback function is instantly called on samd51 after\n  setting it from within interrupt callback function (#19861)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n\nBuild system related issues (6)\n-------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* Build dependencies - processing order issues (#9913)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* EXTERNAL_MODULE_DIRS silently ignores non-existent entries (#17696)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n\nOther issues (69)\n-----------------\n\n* 2023.04 release bug tracking (#19469)\n* [tracking] Bugs found by the peripheral selftest (#20071)\n* [Tracking] Fix failures of test-on-iotlab (#20791)\n* [TRACKING] sys/shell refactoring. (#12105)\n* [tracking] unnecessary use of floating point arithmetic (#19614)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* at86rf215 stops receiving until sending a packet (#19653)\n* b-l072z-lrwan1: tests/ztimer_overhead: test failure (#19224)\n* backport_pr: Only works for when fork is in user (not in\n  organization) (#18486)\n* benchmark_udp: hammering with low interval causes issues (#16808)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* build system: race condition when building and running an app for\n  `native` (#20948)\n* Builds fail when different execstack options are around in objects (#18522)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538-CC2592EM has a very weak transmit power (#17543)\n* CC2538DK board docs: broken links (#12889)\n* cpp: Exception handling undefined (#17523)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/boards: information concerning access to RIOT shell (#17453)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* examples/gcoap: client broken (#19379)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* frdm-k22f fails tests/periph_timer (#19543)\n* Freeze into semtech_loramac_send call (pkg/semtech-loramac) (#18790)\n* gcoap: gcoap_req_send and related should return negative for errors (#19393)\n* gnrc_ipv6_nib: Neighbor Solicitation ping-pong (#18164)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* kconfiglib.py choice override of menuconfig bug (#19069)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* MTD is confusing (#17663)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* periph_rtt: rtt_set_alarm() blocks IRQ for 80 plus usec on STM32 (#19520)\n* pkg/tinydtls: Multiple issues (#16108)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* Samr30/gpio: Erasing then write mux can generate spurious IRQ (#19993)\n* samr34-xpro: some tests failing (#19223)\n* sock_dtls: unable to send big messages (#17996)\n* spurious IRQs in `periph_timer` (#18976)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* STM32 Nucleo boards improperly clocked (#19778)\n* STM32F4-discovery + mrf24j40 not working (#19711)\n* sys/riotboot: documentation issues (#11243)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg/relic is failing on samr21-xpro when built using llvm (#19903)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Types in `byteorder.h` need a cleanup (#14737)\n* USB identifiers with funny characters create mojibake (#17776)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n* ztimer is incompatible with real-time requirements (#18883)\n\nThere are 165 known issues in this release\n\nFixed Issues since the last release (2024.07)\n=============================================\n\n- #20472 probably broke macOS docker build (#20853)\n- (cortex-m) unexpected kernel panic after thread exit (#20812)\n- gcoap_fileserver: can't deal with 16 byte block size (#20686)\n- dns_msg_parse_reply() fails for response from DNS64 service (#20355)\n- drivers/srf04: incorrect values on ATmega based platforms (#13079)\n- gnrc_netif_pktq leaks memory (#17924)\n\n5 fixed issues since last release (2024.07)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2024.07 \"StrikinglyCrowded\" - Release Notes\n================================================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2024.07 release, nicknamed \"StrikinglyCrowded\", includes many features and bug fixes.\nHere are some of the highlights:\n\n+ RIOT now boots on the Arduino Nano 33 BLE Sense (#20668)\n+ To support boards with Ethernet plugs such as the Adafruit Ethernet FeatherWing, RIOT now ships a driver for the W5500 ethernet chip (#20301)\n+ RIOT now leverages the ARMv8-M hardware support to enforce the stack size (#20633)\n+ The PSA Crypto API implementation in RIOT now supports persistent key storage and additional hashing algorithms (#20099, #20598, #20698)\n+ This release features several useful additions to the RIOT CoAP stacks: a coaps forward proxy for gcoap, delayed responses for nanocoap_sock, and the ability to mount a remote filesystem over CoAP (#20454, #20266, #20687)\n* Support of the 16-bit MSP430 MCU has been improving over the last few releases, with the addition of power management in this release as an example (#20613)\n* First steps towards enabling RIOT support of new Microchip SAM MCUs (#20708, #20710, #20713, #20714)\n* Compiling with `BUILD_IN_DOCKER=1` will now by default use the exact container version the code was tested in the CI, fetching it from upstream if not locally present. (#20472)\n\n\n175 pull requests, composed of 358 commits, have been merged since the\nlast release, and 5 issues have been solved. 36 people contributed with\ncode in 80 days. 650 files have been touched with 88156 (+) insertions and\n3949 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n* core/assert: halt running thread instead of panic (#20627)\n* core/lib/assert: consistify output and cleanup documentation (#20701)\n* core/panic: make reboot on panic configurable (#20630)\n* core/thread: \"fix\" valgrind errors in thread_measure_stack_free() (#20726)\n\nSystem Libraries\n----------------\n\n+ sys/event.h: Fixed documentation error by adding a type cast. (#20704)\n+ sys/shell: add support for running a batch of commands from a file (#20651)\n* rust: bump rust-riot-{sys,wrappers} version (#20786)\n* shell/vfs: Handle print failure in genfile cmd gracefully (#20595)\n* sys/hashes: change SHA2 PAD type to const (#20729)\n* sys/psa_crypto: ed25519 private key {ex,im}port (#20334)\n* sys/psa_crypto: Implement persistent key storage (#20099)\n* sys/psa_crypto: remove keysize determination from Kconfig files (#20674)\n* sys/psa_crypto: SHA-{384,512/{224,256}} (#20598)\n* sys/psa_crypto: sha3 support (#20698)\n* sys/shell: Update cryptoauthlib shell commands (#20673)\n* sys/vfs: use atomic_utils rather C11 atomics (#20513)\n\nNetworking\n----------\n\n+ gcoap:  add coaps forward proxy (#20454)\n+ gnrc, nanocoap: add optional work-arounds for buggy CoAP servers (#20564)\n+ nanocoap_fs: add nanoCoAP as VFS backend (remote CoAP fs) (#20687)\n+ nanocoap_sock: add nanocoap_get_blockwise_to_buf() (#20690)\n+ nanocoap_sock: implement separate response (#20266)\n* driver/w5500: driver for the W5500 ethernet chip (#20301)\n* examples/gcoap: take full URI as input (#20554)\n* gnrc/ipv6: Check for overflow (#20771)\n* l2filter: mark module and related netopt options as experimental (#20634)\n* pkg/lwip: use sys/event for handling ISR and bhp (#18359)\n\nPackages\n--------\n\n+ pkg/tflite-micro: add proper options to flatc (#20703)\n+ pkg/wakaama: implement IPSO sensor objects in LwM2M (#20652)\n+ pkg/wamr: Added support for THUMB_VFP in wamr Makefile (#20628)\n* Makefile.include: creation of CACHEDIR.TAG as a dependency of pkg-\n  prepare (#20689)\n* pkg/littlefs2: bump to v2.9.2 (#20591)\n* pkg/tflite-micro: Update tflite-micro to latest version. requires\n  update of pkg/flatbuffers as well. (#20683)\n* pkg/wamr: updated package to WAMR 1.3.3 (#20691)\n\nBoards\n------\n\n+ boards/arduino-nano-33-ble-sense: add support for arduino-\n  nano-33-ble-sense (#20668)\n+ boards/b-l072z-lrwan1: add missing adc feature (#20733)\n+ boards/nucleo-f303ze: add pinout (#20717)\n+ boards/nucleo-l452re: add ADC (#20778)\n+ boards/sodaq-sara-sff: add status pin for SARA (#20279)\n+ cpu/stm32: add ADC support for WB55 (#20773)\n+ drivers/led: add LED_NUMOF and convenience inline functions (#20783)\n+ drivers/ws281x: Add saul support (#20562)\n* boards/common/stm32: simplify ifdef logic (#20617)\n* boards/nRF52xx: correctly set JLINK_DEVICE (#20599)\n* boards/nucleo-l476rg & stm32l476g-disco: fix MCU table (#20751)\n* boards/stm32l0538-disco: enable cpy2remed (#20766)\n* boards/stm32l476g-disco: enable cpy2remed (#20734)\n* build system: clean up netif features (#20700)\n* cpu/{gd32v,stm32}/periph/adc: make ADC clock setable (#19630)\n\nCPU\n---\n\n+ cpu/cortexm: add stack limit support for Cortex-M33 (#20633)\n* cpu/cortexm: rework bkpt instruction call on panic (#20616)\n* cpu/cortexm_common: print last active thread on stack corruption (#20709)\n* cpu/esp: Handle format print errors (#20596)\n* cpu/msp430: implement power management (#20613)\n* cpu/nrf5x: implement pm_off() for nRF53/9160 (#20590)\n* cpu/nrf5x_common: fix ztimer issue on warm-boot (#20665)\n* cpu/nrf5x_common: properly calibrate RC-based low-frequency clock (#20669)\n* cpu/sam0: Remove deprecated muxpos (#20525)\n* cpu/sam0_common: avoid bitfield usage (#20747)\n* cpu/samd21: avoid the use of bitfield (#20713)\n* cpu/samd5x: avoid the use of bitfields (#20714)\n* cpu/samd5x: handle CAN errors (#20667)\n* cpu/saml1x: avoid the use of bitfield in register calls (#20710)\n* cpu/saml21: avoid the use of bitfield in register call (#20708)\n* cpu/stm32/periph/stm32_eth: provide confirm_send (#18428)\n* cpu/stm32: de-duplicate ifdefs (#20609)\n* periph/flashpage: remove deprecated flashpage_*_free functions (#18093)\n* pkg/lwip: make use of confirm send (#18427)\n* Remove extraneous bitwise assignment operation on NRF5X_common gpio.c (#20737)\n* sam0_eth: implement .confirm_send() to fix fragmented sending (#20666)\n* tree wide: compilation fixes for `native64` on musl systems (#20730)\n\nDevice Drivers\n--------------\n\n+ drivers/at24cxxx: Add M24C01 device and enhance documentation (#20588)\n+ drivers/led: add LEDX_IS_PRESENT defines (#20637)\n+ drivers/mtd: Add check for integer overflow (#20587)\n+ Drivers: add MAX31855 thermocouple-to-digital converter (#20741)\n* drivers/at86rf215: port to new netdev API (#20672)\n* drivers/at: expose some internal API (#20702)\n\nDocumentation\n-------------\n\n+ boards/nucleo-c031c6: add pinout to doc (#20657)\n+ boards/nucleo-l452re: add pinout to doc page (#20678)\n+ boards/nucleo-l4r5zi and l496zg: add pinout to documentation page (#20707)\n+ boards/nucleo144: add pinout diagrams to boards documentation (#20614)\n+ doc/getting-started: add hint for correct access rights on serial\n  device (#20600)\n+ doc/terminals: add putty and sort terminals (#20611)\n* /README.md: match doc (#20740)\n* boards/doc: Adafruit Feather nRF52840 Sense is popular (#20597)\n* boards/nucleo-f429zi & f439zi: documentation improvements (#20594)\n* boards/nucleo-f722ze: doc update (#20671)\n* boards/stm32l0538-disco: doc improvements (#20767)\n* boards: Update SAM0-based documentation (#20621)\n* doc: fix links to GNRC master thesis (#20785)\n* doc/doxygen: remove default value for search form (#20681)\n\nBuild System / Tooling\n----------------------\n\n+ .editorconfig: add EditorConfig (#20746)\n+ pkg: Add script to check third party package version (#20662)\n+ tools/dhcpv6-pd_ia: fix: Add explicit subnet id (#20776)\n* dist/tools/buildsystem_sanity_check: make shellcheck happy (#20721)\n* dist/tools/tapsetup: make compatible with doas (#20712)\n* Makefile.include: place compile_commands.json by rule target (#20716)\n* makefiles/docker.inc.mk: Pin riotbuild version with BUILD_IN_DOCKER=1 (#20472)\n* makefiles/docker: prevent recursive docker invocation (#20638)\n* makefiles/tools/serial.inc.mk: make use of pyterm session names (#20121)\n* makesfiles/jlink: fix exports for flashing (#20779)\n* tree-wide: Introduce netif feature and use it (#20682)\n\n\nExamples\n--------\n\n* examples/psa_crypto: pass environment variable down to docker (#20663)\n\nTesting\n-------\n\n+ tests/drivers/at: add check if device is initialized before sending\n  command (#20140)\n* check-labels.yml: bump to v1.1.2 (#20727)\n* ci: disable esp32-wroom-32 tests (#20715)\n* release-tests.yaml: remove (always failing) matrix notification (#20742)\n* test/sys/progress_bar: temporary printout to debug flaky test (#20763)\n* tests/drivers/pn532: fix init error handling and increase verbosity (#20750)\n* tests/sys/progress_bar: move configuration to app.config (#20764)\n* tests/sys/progress_bar: remove debug print (#20768)\n* tests/sys/psa_crypto*: remove test symlinks (#20545)\n* tests/sys/psa_crypto: increase timeout (#20612)\n* tests/sys/psa_crypto: test interleaved hash operations (#20606)\n* tests/sys/psa_crypto_ecdsa: fix stacksize determination (#20760)\n\nAPI Changes\n-----------\n\n* build system: rename ethernet feature into netif_ethernet (#20694)\n* cpu/native: fix build with musl (#18942)\n* pkg/monocypher: bump to 4.0.2 (#20670)\n\nAnd 32 minor changes.\n\nDeprecations (1)\n================\n\n* boards/waspmote-pro: deprecate board (#20649)\n\n\nBug fixes (22)\n==============\n\n* build system: add netif_openwsn feature (#20695)\n* makefiles: add OPENOCD_DEBUG_ADAPTER and SLOT_AUX_LEN to riotboot\n  build environment (#20752)\n* cpu/esp*: fix compilation with GCC 14.1.0 (#20719)\n* cpu/esp32/gpio_ll: fix & cleanup (#20635)\n* cpu/samd5x/can: fix flag handling on receive (#20644)\n* cpu/stm32-L4: fix ADC initialization (#20756)\n* dist/tools/bmp: fix target parsing (#20661)\n* drivers/periph_wdt: fix auto starting of watchdog timer (#20755)\n* drivers/w5500: fix W5500 link up/down events in interrupt mode (#20728)\n* gcoap: propagate local tx aux to gcoap_req_send() and in\n  _handler_req() (#20711)\n* measure_stack_free_internal(): don't try to align end of stack (#20723)\n* nanocoap sock: stop retransmissions after empty ACK (#20697)\n* nanocoap/sock: fix state handling for mismatching message ID in\n  `nanocoap_sock_request_cb()` (#20725)\n* nanocoap_link_format: don't drop characters in fragmented entries (#20655)\n* nib: some fixes when a router or a prefix is deleted (#20329)\n* pkg/lwext4: Minor string fixes (#20586)\n* pkg/micro-ecc/psa_uecc: convert between SEC 1 and micro-ecc public\n  key formats (#20676)\n* sys/crypto: fix OCB mode (#20745)\n* sys/net/grnc: fix NULL ptr dereferencing (#20660)\n* sys/psa_crypto: correct use of (ECDSA) key_bits (#20607)\n* sys/random: fix SHAxPRNG init_by_array (#20718)\n* sys/ztimer64: fix build when PRIu64 is not defined (#20693)\n\n\nKnown issues\n============\n\nNetwork related issues (57)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* DHCPv6 client: Handling of NotOnLink incorrect (#20349)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* dns_msg_parse_reply() fails for response from DNS64 service (#20355)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* example/gnrc_border_router cannot answer after some time (#19578)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* gcoap_fileserver: can't deal with 16 byte block size (#20686)\n* Global IPv6 addresses remain deprecated after receiving RA (#19846)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc/ipv6: \"invalid payload length\" - corrupted IPv6 header when\n  ENABLE_DEBUG=1 in mbox.c (#20390)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_border_router: Kconfig and C disagree about number of addresses\n  per interface (#19947)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: old routes are not deleted (#19423)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* LWIP TCP Communication Error (#19676)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg/tinydtls: DTLS handshake does not work (#19595)\n* Removing a TNT global address then adding a new one does not work (#20318)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (7)\n------------------------\n\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (11)\n---------------------------\n\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (13)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* Interrupt callback function is instantly called on samd51 after\n  setting it from within interrupt callback function (#19861)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n\nBuild system related issues (6)\n-------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* Build dependencies - processing order issues (#9913)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* EXTERNAL_MODULE_DIRS silently ignores non-existent entries (#17696)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n\nOther issues (68)\n-----------------\n\n* 2023.04 release bug tracking (#19469)\n* [tracking] Bugs found by the peripheral selftest (#20071)\n* [Tracking] Fix failures of test-on-iotlab (#20791)\n* [TRACKING] sys/shell refactoring. (#12105)\n* [tracking] unnecessary use of floating point arithmetic (#19614)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* at86rf215 stops receiving until sending a packet (#19653)\n* b-l072z-lrwan1: tests/ztimer_overhead: test failure (#19224)\n* backport_pr: Only works for when fork is in user (not in\n  organization) (#18486)\n* benchmark_udp: hammering with low interval causes issues (#16808)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Builds fail when different execstack options are around in objects (#18522)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538-CC2592EM has a very weak transmit power (#17543)\n* CC2538DK board docs: broken links (#12889)\n* cpp: Exception handling undefined (#17523)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/boards: information concerning access to RIOT shell (#17453)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* examples/gcoap: client broken (#19379)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* frdm-k22f fails tests/periph_timer (#19543)\n* Freeze into semtech_loramac_send call (pkg/semtech-loramac) (#18790)\n* gcoap: gcoap_req_send and related should return negative for errors (#19393)\n* gnrc_ipv6_nib: Neighbor Solicitation ping-pong (#18164)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* kconfiglib.py choice override of menuconfig bug (#19069)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* MTD is confusing (#17663)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* periph_rtt: rtt_set_alarm() blocks IRQ for 80 plus usec on STM32 (#19520)\n* pkg/tinydtls: Multiple issues (#16108)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* Samr30/gpio: Erasing then write mux can generate spurious IRQ (#19993)\n* samr34-xpro: some tests failing (#19223)\n* sock_dtls: unable to send big messages (#17996)\n* spurious IRQs in `periph_timer` (#18976)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* STM32 Nucleo boards improperly clocked (#19778)\n* STM32F4-discovery + mrf24j40 not working (#19711)\n* sys/riotboot: documentation issues (#11243)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg/relic is failing on samr21-xpro when built using llvm (#19903)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Types in `byteorder.h` need a cleanup (#14737)\n* USB identifiers with funny characters create mojibake (#17776)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n* ztimer is incompatible with real-time requirements (#18883)\n\nThere are 166 known issues in this release\n\nFixed Issues since the last release (2024.04)\n=============================================\n\n- BlackMagicProbe does not recognize nRF52 device (#20604)\n- missing build dependencies in the rust build (#19714)\n- sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n- driver/hts221: Temperature and Humidity readings incorrect (#12445)\n- NATIVEINCLUDES Does not include USEMODULE_INCLUDES from\n  log_printfnoformat (#11603)\n\n5 fixed issues since last release (2024.04)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\nRIOT-2024.04 \"UwUtastic\" - Release Notes\n========================================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2024.04 release, nicknamed \"UwUtastic\", includes many features and bug fixes.\nHere are some of the highlights:\n\n+ RIOT boots on two newly added boards:\n    + The Nintendo Game Boy Advance (#19519)\n    + Native on 64-bit Linux / x86_64 (#20315, #20335, #20339)\n+ The documentation features a new guide to help you set up a RIOT development environment on Windows (#20426)\n+ To accommodate the ever growing RAM sizes in the IoT, RIOT can now monitor your `malloc` usage (#20363)\n- Dependency modelling via Kconfig is no longer part of RIOT. A big step forward towards having only one source of truth for configurations (#20438)\n\n\n210 pull requests, composed of 446 commits, have been merged since the\nlast release, and 4 issues have been solved. 42 people contributed with\ncode in 82 days. 2409 files have been touched with 26218 (+) insertions and\n29933 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n+ core/lib/cib: add new functionality (#20464)\n+ macros/utils: add LIMIT() and ABS() macros (#20352)\n* mbox: provide function to unset initialized mbox (#15485)\n\nSystem Libraries\n----------------\n\n+ add error check of aes_encrypt() (#15576)\n+ event_periodic_callback: add event_periodic_callback_create() (#20459)\n+ shell/cmds: add udptty command (#19742)\n+ sys/libc: add endian.h (#20310)\n+ sys/shell/lwip: add IPv4 configuration to lwip ifconfig command (#19849)\n+ tests: Add NULL pointer argument test for fmt_lpad/to_lower/str (#20344)\n* makefiles/cargo: Remove CARGO_CHANNEL, add `make info-rust` and simplify Cargo invocations (#20319)\n* Monitoring malloc usage (#20363)\n* rust: Increase Cargo.lock stability and usefulness (#18684)\n* sys/checksum: Remove deprecated crc16_ccitt functions (#20527)\n* sys/hashes: support for SHA-{384,512/{224,256}} (#20484)\n* sys/isrpipe/read_timeout: don't set up timer if data is available (#20558)\n* sys/newlib_syscalls_default: fix race condition in __sinit() (#20392)\n* sys/psa_crypto: use SHA256 CSPRNG as default (#20460)\n* sys/shell: Document that shell access means root access (#20546)\n* sys/suit: Remove deprecated suit_coap_run function (#20528)\n* sys/suit: return error when URL buffer is too small (#20559)\n* sys/tiny_strerror: fix compilation on LLVM (#20483)\n\nNetworking\n----------\n\n+ gcoap: add some client-side observe handling (#20073)\n+ nanocoap: add coap_build_reply_header() (#20284)\n+ nanocoap: introduce coap_get_method() (#20191)\n+ nanocoap_sock: add support for IPv4 (#20476)\n+ net/sock_dtls: add public key verification (#20048)\n+ pkg/wakaama: Notify resource updates when writing to resources (#20326)\n+ sys/net/ipv4: add IPV4_ADDR_INIT() macro (#20354)\n* always use nanocoap_resources instead of manually assembling\n  coap_resources[] (#20374)\n* cord_lc: Process truncated reads (#20547)\n* gnrc_ipv6_nib: Ignore PIO with on-link flag (#20418)\n* nanocoap/cache: Extend with option-only cache keygen (#20043)\n* pkg/tinydtls: enforce the default dtls user params to be configurable (#20478)\n* routing/rpl: Fixing styling & format (#20294)\n* sys/net/gnrc: Remove code duplication (#16502)\n\nPackages\n--------\n\n+ pkg/wakaama: add Light Control object implementation (#16204)\n* ci: support git-cache-rs (#20311)\n* Makefile.{include,base},pkg/nanopb: fix target deps & code generation (#20400)\n* pkg/flashdb: enhance FAL config (#20221)\n* pkg/uzlib: warn about memory leak during compression (#20293)\n\nBoards\n------\n\n+ boards/cpu: Add GBA boot support to RIOT (#19519)\n+ boards/nucleo-c031c6: add PWM configuration (#20520)\n+ boards/nucleo-u575zi-q: Add support (#20444)\n+ boards/weact-g030f6: add support for minimal break-out board (#20337)\n+ cpu/rpx0xx: add initial pwm support (#20473)\n+ cpu/stm32: add support for STM32C0 and NUCLEO-C031C6 (#20300)\n* boards/feather-nrf52840-sense: declare lsm6ds33 accelerometer (#20436)\n* boards/feather-nrf52840-sense: use generic lsm6dsxx (#20526)\n* cpu/msp430/f2xx: clean up periph_uart,periph_spi (#20357)\n* cpu/nrf9160: fix GPIOTE ISR (#20560)\n* cpu/samd5x write can driver (#19736)\n* cpu/stm32u5: Enable rtc support (#20521)\n+ native64: New board for 64-bit native Linux / x86_64 (#20315, #20335, #20339)\n\nCPU\n---\n\n+ cpu/native: add gpio-mock (#20431)\n+ cpu/native: Add support for periph_timer_query_freqs (#20306)\n+ drivers/periph_gpio_ll: Implement API to switch direction (#20292)\n+ stdio_dispatch: allow to select multiple stdio methods at the same\n  time (#19738)\n* cpu/esp8266: allow arbitrary SPI clocks (#20410)\n* cpu/native/periph/uart: uart_poweroff() closes the file descriptor +\n  extended baud-rate support on Linux (#20365)\n* cpu/native: Fix executable stack warning (#20307)\n* cpu/native: return error code on failed assertion (#20419)\n* cpu/stm32/periph/gpio: simplify condition code (#20479)\n* cpu/stm32/periph/usbdev_fs: avoid using ztimer when not needed (#20467)\n* cpu/stm32: Fix ifdefs in periph_gpio_ll (#20530)\n* cpu/stm32: remove redundant conditional compile block (#20495)\n* drivers/mtd_flashpage: allow to define AUX slot on flash (#18608)\n* sys/byteorder: clean up implementation (#20313)\n* sys/cpp_new_delete: always enable the module when C++ is used (#20348)\n* tests: exit `native` with error value on failure (#20445)\n* treewide: Rust updates (#20303)\n\nDevice Drivers\n--------------\n\n* drivers/lsm6dsxx: Allow generic LSM6DSXX driver (#20504)\n* drivers/lsm6dsxx: refactoring Lsm6dsl into common driver Lsm6dsxx (#20170)\n* drivers/w5100: make use of netdev_eui48_get() (#20304)\n\nDocumentation\n-------------\n\n+ build system: add list of features for documentation and sanity\n  checking (#20366)\n+ doc: Add guide for dev setup on Windows (#20426)\n+ doc: add terminal program configuration (#20493)\n+ doc: doxygen: add \"Topics\" to menus (#20443)\n+ doc: Move community processes and vision (import from Wiki) (#20496, #20491, #20498)\n+ RDM: Naming boards (#18589, #20469)\n* boards/feather-nrf52840*: doc cleanup (#20422)\n* boards/nucleo-c031c6: fix ADC and enhance doc (#20502)\n* doc/roadmap: Make working 6LBR a goal (#20351)\n* doc: Allow resizing of doxygen side-nav (#20511)\n* README: Change Section titles from all caps to regular (#20405)\n\nBuild System / Tooling\n----------------------\n\n+ build system: add `--no-warn-rwx-segments` to linker (#20381)\n+ dist/tools/mspdebug: build from source (#20345)\n* Avoid using egrep (#20522)\n* build system: Improve failure mode for FEAUTRES_REQUIRED_ANY (#20408)\n* dist/tools/dhcpv6-pd_ia: recognize Debian correctly (#20487)\n* Enable compile_and_test_for_board to skip if nothing changed (#19546)\n* tools/openocd: define SWD_EN signal for tigard (#20507)\n* tree wide: accommodate RISC-V toolchain update (#20380)\n\nKconfig\n-------\n\n* Remove Kconfig dependency modelling (#20438)\n\nExamples\n--------\n\n+ examples/rust-gcoap: Add SAUL (#17554)\n* examples/filesystem: Update README and increase default stack size (#20439)\n* examples/psa_crypto: Fix modules to run ECDSA on SEs (#20461)\n* examples/wakaama: rename to lwm2m (#20327)\n\nTesting\n-------\n\n+ tests/shell: add test for preemption (#19005)\n+ tests: Add cases to the scn_u32_hex unittest (#20463)\n* ci: disable some more flakey native tests (#20358)\n* examples, tests: disable native and native64 for more flaky tests (#20401)\n* make use of nanocoap_server_auto_init (#20378)\n* Refactor tests periph uart (#20281)\n* release-test.yml: return of the Matrix notification (#20424)\n* tests/pkg/lwip: include default-radio-settings.inc.mk (#20325)\n* tests/sys/shell: increase the stack size of periodic thread (#20548)\n* tests/sys/timer_overhead: disable test on native in CI (#20324)\n* tests/unittests/README: link to Supported Boards updated (wiki ->\n  site) (#20500)\n* tests: 64-bit support preparations (#20276)\n* tests: Cover API of scn_u32_hex in the unittest (#20458)\n* tests: disable flaky tests on `native` in the CI (#20382)\n* unittests: Move at test to driver tests (#20540)\n\nAPI Changes\n-----------\n\n+ drivers/at: fix URC handling and add better testing (#20423)\n* drivers/at: parse +CME/+CMS responses and save error value (#20289)\n* gcoap: make gcoap_req_send_tl() an alias of gcoap_req_send() (#20514)\n* gcoap_fileserver: rename to nanocoap_fileserver (#20030)\n* makefiles, treewide: Remove MCU variable (#20397)\n\nUncategorized\n-------------\n\n+ release-notes.txt: add 2024.01 release notes (#20350)\n+ Roadmap: Add Home-Assistant integration on the roadmap (#20403)\n+ vscode: Add hard-coded path to compile_commands.json (#20417)\n\nAnd 59 minor changes.\n\nDeprecations\n============\n\nDeprecations (3)\n----------------\n\n* gnrc_mac / gnrc_lwmac / gnrc_gomach: Deprecate modules (#20512)\n* Deprecate MCU preprocessor defines (#20397)\n\nRemovals (4)\n------------\n\n- drivers/rgbled: Remove driver (#20407)\n- periph_usbdev: remove deprecated event flag (#20488)\n- treewide: remove deprecated modules (#20471)\n- treewide: remove deprecated shell_commands module (#20485)\n- gnrc_netif: remove deprecated CONFIG_GNRC_NETIF_LORAWAN_NETIF_HDR (#20515)\n- sys/phydat: Remove deprecated print function (#20529)\n\nBug fixes (18)\n==============\n\n* drivers/periph_gpio_ll: Fix GPIO_DISCONNECT handling and add compile\n  time feature checks (#20290)\n* drivers/periph_spi: Add `spi_transfer_u16_be()` (#20312)\n* coap: ensure DTLS buffer is at least 200 bytes (#20434)\n* core|sys: Guard periph_pm calls (#20523)\n* cpu/msp430/periph_uart: Fix uart_write() for USCI peripheral\n  [backport 2024.04] (#20584)\n* cpu/nrf52 i2c: Always buffer writes (#20298)\n* cpu/nrf52 i2c: Wait for complete transmission when writing NOSTOP (#20299)\n* cpu/sam0_common: flashpage: disable interrupts while writing (#15965)\n* cpu/sam0_common: RTC: avoid negative month after POR (#20448)\n* cpu/stm32/periph_adc: fix register access (#20360)\n* drivers/pcf857x: stop (ab)using gpio_t (#20435)\n* Fix for `periph_timer` on `native` (#20317)\n* gnrc_ipv6: fix double-free when pinging TNT loopback address (#20309)\n* ipv6/nib: cancel timers when NIB entry gets deleted (#20343)\n* ipv6/nib: fix router lifetime handling in RIO and fix\n  gnrc_ipv6_nib_ft_add() api (#20342)\n* nanocoap_sock: always use coap_opt_put_uri_pathquery() (#20245)\n* sys/usbus: answer get_status if request is standard type (#20475)\n* tests/drivers/at_unit: fix unit tests on native (#20551)\n\n\nKnown issues\n============\n\nNetwork related issues (56)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* DHCPv6 client: Handling of NotOnLink incorrect (#20349)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* dns_msg_parse_reply() fails for response from DNS64 service (#20355)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* example/gnrc_border_router cannot answer after some time (#19578)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* Global IPv6 addresses remain deprecated after receiving RA (#19846)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc/ipv6: \"invalid payload length\" - corrupted IPv6 header when\n  ENABLE_DEBUG=1 in mbox.c (#20390)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_border_router: Kconfig and C disagree about number of addresses\n  per interface (#19947)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: old routes are not deleted (#19423)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* LWIP TCP Communication Error (#19676)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg/tinydtls: DTLS handshake does not work (#19595)\n* Removing a TNT global address then adding a new one does not work (#20318)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (7)\n------------------------\n\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (12)\n---------------------------\n\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (14)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* Interrupt callback function is instantly called on samd51 after\n  setting it from within interrupt callback function (#19861)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (7)\n-------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* Build dependencies - processing order issues (#9913)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* EXTERNAL_MODULE_DIRS silently ignores non-existent entries (#17696)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* missing build dependencies in the rust build (#19714)\n\nOther issues (68)\n-----------------\n\n* 2023.04 release bug tracking (#19469)\n* [tracking] Bugs found by the peripheral selftest (#20071)\n* [TRACKING] sys/shell refactoring. (#12105)\n* [tracking] unnecessary use of floating point arithmetic (#19614)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* at86rf215 stops receiving until sending a packet (#19653)\n* b-l072z-lrwan1: tests/ztimer_overhead: test failure (#19224)\n* backport_pr: Only works for when fork is in user (not in\n  organization) (#18486)\n* benchmark_udp: hammering with low interval causes issues (#16808)\n* BlackMagicProbe does not recognize nRF52 device (#20604)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Builds fail when different execstack options are around in objects (#18522)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538-CC2592EM has a very weak transmit power (#17543)\n* CC2538DK board docs: broken links (#12889)\n* cpp: Exception handling undefined (#17523)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/boards: information concerning access to RIOT shell (#17453)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* examples/gcoap: client broken (#19379)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* frdm-k22f fails tests/periph_timer (#19543)\n* Freeze into semtech_loramac_send call (pkg/semtech-loramac) (#18790)\n* gcoap: gcoap_req_send and related should return negative for errors (#19393)\n* gnrc_ipv6_nib: Neighbor Solicitation ping-pong (#18164)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* kconfiglib.py choice override of menuconfig bug (#19069)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* MTD is confusing (#17663)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* periph_rtt: rtt_set_alarm() blocks IRQ for 80 plus usec on STM32 (#19520)\n* pkg/tinydtls: Multiple issues (#16108)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* Samr30/gpio: Erasing then write mux can generate spurious IRQ (#19993)\n* samr34-xpro: some tests failing (#19223)\n* sock_dtls: unable to send big messages (#17996)\n* spurious IRQs in `periph_timer` (#18976)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* STM32 Nucleo boards improperly clocked (#19778)\n* STM32F4-discovery + mrf24j40 not working (#19711)\n* sys/riotboot: documentation issues (#11243)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg/relic is failing on samr21-xpro when built using llvm (#19903)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Types in `byteorder.h` need a cleanup (#14737)\n* USB identifiers with funny characters create mojibake (#17776)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n* ztimer is incompatible with real-time requirements (#18883)\n\nThere are 168 known issues in this release\n\nFixed Issues since the last release (2024.01)\n=============================================\n\n- usbus/dfu: cannot detach device to reboot into bootloader (#20474)\n- 6ln RA PIO with L flag set is not ignored (#20377)\n- riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n- sock_dns: Security issues (including remote code execution) (#10739)\n\n4 fixed issues since last release (2024.01)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\nRIOT-2024.01 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2024.01 release includes:\n\n- Breaking change for board definition due to XFA for pointers to defined MTD.\n  This means users will need to:\n    - remove the `MTD_NUMOF` definition from `board.h`\n    - add `MTD_XFA_ADD(<mtd_dev>, <idx>);` to the definition of `<mtd_dev>`.\n    - `MTD_0`, `MTD_1`, … defines are no longer needed. Use `mtd_dev_get(0)`,\n      `mtd_dev_get(1)`, … instead.\n- Many fixes to peripherals due to the periph testing shield\n- The AVR-8 now has power management\n- The ESP32 family is now supported by the SDMMC peripheral driver\n- `native` now is supported in pyterm\n- `tests/periph/uart_locate_pins` helps discover which pins are where\n- the `periph_timer` API supports `periph_timer_query_freqs`\n- The GNRC boarder router application supports ZEP topology\n- Removal of Kconfig dependency modelling (but still configurations supported)\n\n194 pull requests, composed of 475 commits, have been merged since the\nlast release, and 4 issues have been solved. 30 people contributed with\ncode in 64 days. 1083 files have been touched with 36196 (+) insertions and\n4976 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n* core, sys, drivers: 64-bit support preparations (#20257)\n* core: Express -1 as ~0 in thread_status_t cast (#19976)\n\nSystem Libraries\n----------------\n\n+ Fletcher32: Add incremental API (#19981)\n+ sys/event/timeout: add event_timeout_is_pending() (#19963)\n+ sys/hashes: add SHA-512 support (#19969)\n+ sys/suit: introduce suit_worker_done_cb() (#20237)\n* riotboot: fix build errors (#20210)\n* sys/benchmark: fix integer overflow in benchmark_print_time() (#20220)\n* sys/psa_crypto: allow repeated initialization (#19990)\n* sys/shell/gnrc_netif: Fix a few blockers for sharing ifconfig shell (#19971)\n* sys/shell: fix getopt() support (#20209)\n+ sys/busy_wait: add busy wait helper (#20241)\n\nNetworking\n----------\n\n* gnrc: make message queues static (#19998)\n+ nanocoap: implement coap_find_uri_query() (#20273)\n+ pkg/lwip: add support for slipdev (#20022)\n* coap: create typedef for CoAP methods (#20003)\n* gcoap_dns: Housekeeping with regards to draft status (#20015)\n* gnrc/ipv6/nib: allow for predictable static link-local addresses (#20224)\n* gnrc/nib: allow prefix to be on-link without being used for address (#20243)\n* nanocoap: fix incorrect uses of coap_get_code() (#20028)\n* nanocoap_sock: implement FETCH methods (#20238)\n* print: Missing size_t print format specifiers (#20249)\n\nPackages\n--------\n\n* Bump nanopb to 0.4.8 (#20132)\n* mjson: Initial include of package (#20129)\n* pkg/ccn-lite: Bump version (#20248)\n* pkg/flashdb: bump to 2.1.0 (#20155)\n* pkg/nanocbor: Bump to latest commit (#19975)\n* pkg/tinydtls: bump version (#20159)\n* pkg: micropython: bump version (#20208)\n* pkg: 64-bit support preparations (#20271)\n\nBoards\n------\n\n+ boards/feather-nrf52840-sense: Add bootloader info (#20034)\n+ boards/gd32vf103c-start: new board (#20270)\n+ boards/generic-cc2538-cc2592-dk: add board support (#20226)\n+ boards/nucleo-l4r5zi : add PWM configuration (#20036)\n+ boards/nucleo-l552ze: add PWM configuration (#20032)\n+ boards/p-nucleo-wb55: add PWM configuration (#20120)\n+ boards: add support for Adafruit Feather nRF52840 Sense (#20027)\n+ drivers/include/periph: add FREQM peripheral driver (#20020)\n+ drivers/ws281x: Add gpio_ll and timer based driver (#19891)\n+ pyterm: add native support (#20172)\n+ sys/shell: add firmware version to version cmd (#20244)\n* AVR-8: Implement Power Management (#19784)\n* boards/nrf52dk: Minimal Arduino pinout support (#20286)\n* boards/same54-xpro: configure pins for UART HW flow control &\n  ethernet LED (#20183)\n* boards: remove `extern mtd_dev_t *mtd<n>` declarations from board\n  definitions (#20104)\n* makefiles/tests/tests.inc.mk: use native term for tests (#20215)\n* treewise: typo \"or RAM\" (#20219)\n\nCPU\n---\n\n* cpu/msp430: rework MSP430 x1xx periph drivers (#19835)\n* cpu/nrf5x: clean up periph_uart (#20102)\n* cpu/stm32: FMC used for low-level LCD parallel interface (#19943)\n+ cpu/esp32/periph: add low-level SDMMC peripheral driver for ESP32 and\n  ESP32-S3 (#19786)\n+ cpu/msp430: improve periph_timer (#20160)\n+ cpu/stm32/periph: add low-level SDMMC peripheral driver (#19540)\n+ cpu/*: implement periph_timer_query_freqs (#20142) (#20143) (#20144) (#20145)\n  (#20146) (#20147) (#20148)\n+ cpu/stm32: add ADCAL operation (#20044)\n+ drivers/periph/uart: add periph_uart_tx_ondemand feature (#20108)\n* cpu/avr8_common: allow to build with !periph_pm (#20247)\n* cpu/avr8_common: fix build with !core_thread (#20240)\n* cpu/nrf5x_common: clean up UART implementation (#20111)\n* cpu/sam0/uart: implement uart_pin_cts()/uart_pin_rts() (#20171)\n* cpu/sam0_common: implement periph_gpio_ll and periph_gpio_ll_irq (#20189)\n* cpu/stm32/periph_spi: only perform DMA transfer above threshold (#20214)\n* cpu/stm32: uart: don't do DMA for small transfers (#20230)\n\nDevice Drivers\n--------------\n\n+ driver/mtd: mtd_init add documentation for return value (#20033)\n+ drivers/periph_timer: add timer_query_freqs() (#16349)\n* drivers/mtd_flashpage: improve _write_page (#20173)\n* drivers/mtd: improve doc consistency (#20184)\n* drivers: make use of busy_wait() (#20258)\n\nDocumentation\n-------------\n\n* boards/nucleo-l433rc: doc update - image and MCU table (#20098)\n* boards/nucleo-l452re: doc update (#20207)\n* boards/p-nucleo-wb55: documentation update (#20115)\n* doc/mainpage: don't claim to be a microkernel (#20246)\n* doc: Move and update roadmap in from the wiki (#20122, #20123)\n\nBuild System / Tooling\n----------------------\n\n+ dist/testbed-support: Add openmote board (#19979)\n+ dist/tools/riotboot_gen_hdr/genhdr: add update command (#20239)\n* Bump version of UF2 package (#20035)\n* examples/gnrc_border_router: enable setting ZEP topology (#20006)\n* make all: document targets for RIOT base module (#20187)\n* make help: show generate-Makefile.ci (#20186)\n* tools/zep_dispatch: enhancements and fixes (#19996)\n\nKconfig\n-------\n\n* tests/build_system: drop Kconfig tests (#20229)\n\nExamples\n--------\n\n* examples/dtls-sock: Enable non 32-bit architectures (#20196)\n* examples/dtls-sock: make use of helper functions (#20125)\n\nTesting\n-------\n\n+ tests/periph/uart_locate_pins: new test/utility app (#20253)\n+ tests/pkg/minmea: adding GGA, GSA and RMC sentences to test\n  application (#20005)\n+ tests/unittests: add a unit test for ztimer (#20011)\n* .murdock: drop Kconfig compile check (#20211)\n* ci: ensure \"xxx succeeded\" properly fail (#20288)\n* ci: make native tests show up in \"tests\" (#20269)\n* tests/drivers/at: fix device table overflow (#20025)\n* tests/net/gnrc_sixlowpan_frag_sfr_congure_impl: disable test on\n  native (#20151)\n* tests/periph/uart: allow to set line ending (#20128)\n* tests/pkg/minmea: fixing RMC timestamp (#20018)\n* tests/sys/psa_crypto*: Fix failing tests (#20178)\n* tests/sys/psa_crypto_se_cipher: disable test on esp32-wroom-32 (#20152)\n* tests/sys/psa_crytpo_se: disable test on esp32-wroom-32 (#20150)\n* tests/unittests: blacklist LLVM on native (#19958)\n* tests: Slightly increase coverage of fmt unittests (#20272)\n\nAPI Changes\n-----------\n\n+ print: Added size_t print format specifier (#20194)\n* drivers/mtd: use XFA for pointers to defined MTDs (#19465)\n* drivers/periph/gpio_ll: shrink gpio_conf_t (#20236)\n* hashes/sha2{24,56}: Remove static variables from sha256 (#20116)\n* nanocoap: defuse footgun in coap_get_uri_query() (#20195)\n* nanocoap: rename coap_get_code() -> coap_get_code_decimal() (#20004)\n\nUncategorized\n-------------\n* Fix labeler action (#20137)\n* roadmap: extend peripheral drivers section (#20136)\n\nAnd 52 minor changes.\n\n\nDeprecations\n============\n\nNone\n\nRemovals (1)\n------------\n\n- mtd/*: drop .write() if .write_page() is implemented (#15380)\n\n\nBug fixes (26)\n==============\n\n* dist/tools/uf2: add target to also copy families.json file (#20042)\n* backport_pr.py: increase entries per page for branches GET (#19985)\n* boards/esp32s3-usb-otg: fix the table of contents in documentation (#20156)\n* boards/native: only use pyterm wrapper with term target (#20264)\n* boards/nucleo-f413zh: Fix DMA mapping (#20225)\n* ci: fix murdock tests after dwq change (#20268)\n* cpu/cc2538: fix EUI provider (#20228)\n* cpu/cortexm_common: work around bug on WFI for STM32 (#20149)\n* cpu/stm32/periph_spi: Fix /CS handling (#20084)\n* cpu/stm32: fix periph_i2c for F1, F2, L1 and F4 families (#20100)\n* drivers/mtd: fix the order of entries in the MTD pointer XFA\n  `mtd_dev_xfa` (#20113)\n* drivers/mtd_sdmmc: always enable the erase function (#20180)\n* drivers/slipdev: make use of chunked ringbuffer (#18066)\n* fatfs_vfs: fix the Memory leak: work (#20206)\n* gcoap: fix underflow when correcting ETag from cache (#19968)\n* gnrc/ipv6/nib: rejoin ipv6_addr_all_nodes_link_local on interface up (#20259)\n* gnrc_ipv6_nib: fix config for mixed 6lo/classic setup (#20167)\n* nanocoap: prevent integer underflow in coap_opt_put_uri_pathquery() (#19994)\n* net/gnrc/netif: set 6LN flag for ethernet if gnrc_sixloenc is used (#20139)\n* pkg/nanocbor: Update for fixed nanocbor_skip_simple() (#19983)\n* sock/udp: work around gnrc_sock_recv() returning early timeout (#19965)\n* sys/psa_crypto: Fix build problems (#19992)\n* sys/psa_crypto: fix compile bug for certain configuration (#20193)\n* sys/psa_crypto: Fix macro for public key max size and SE example (#19995)\n* wasm: fix the memory leak: wasm_buf (#20205)\n\n\nKnown issues\n============\n\nNetwork related issues (52)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* example/gnrc_border_router cannot answer after some time (#19578)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* Global IPv6 addresses remain deprecated after receiving RA (#19846)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_border_router: Kconfig and C disagree about number of addresses\n  per interface (#19947)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: old routes are not deleted (#19423)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* LWIP TCP Communication Error (#19676)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg/tinydtls: DTLS handshake does not work (#19595)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (7)\n------------------------\n\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (12)\n---------------------------\n\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (13)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* boards/hifive1: flashing issue (#13104)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* Interrupt callback function is instantly called on samd51 after\n  setting it from within interrupt callback function (#19861)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (7)\n-------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* Build dependencies - processing order issues (#9913)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* EXTERNAL_MODULE_DIRS silently ignores non-existent entries (#17696)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* missing build dependencies in the rust build (#19714)\n\nOther issues (63)\n-----------------\n\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* at86rf215 stops receiving until sending a packet (#19653)\n* b-l072z-lrwan1: tests/ztimer_overhead: test failure (#19224)\n* backport_pr: Only works for when fork is in user (not in\n  organization) (#18486)\n* benchmark_udp: hammering with low interval causes issues (#16808)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Builds fail when different execstack options are around in objects (#18522)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538-CC2592EM has a very weak transmit power (#17543)\n* CC2538DK board docs: broken links (#12889)\n* cpp: Exception handling undefined (#17523)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/boards: information concerning access to RIOT shell (#17453)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* examples/gcoap: client broken (#19379)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* frdm-k22f fails tests/periph_timer (#19543)\n* Freeze into semtech_loramac_send call (pkg/semtech-loramac) (#18790)\n* gcoap: gcoap_req_send and related should return negative for errors (#19393)\n* gnrc_ipv6_nib: Neighbor Solicitation ping-pong (#18164)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* kconfiglib.py choice override of menuconfig bug (#19069)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* MTD is confusing (#17663)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* periph_rtt: rtt_set_alarm() blocks IRQ for 80 plus usec on STM32 (#19520)\n* pkg/tinydtls: Multiple issues (#16108)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* Samr30/gpio: Erasing then write mux can generate spurious IRQ (#19993)\n* samr34-xpro: some tests failing (#19223)\n* sock_dtls: unable to send big messages (#17996)\n* spurious IRQs in `periph_timer` (#18976)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* STM32 Nucleo boards improperly clocked (#19778)\n* sys/riotboot: documentation issues (#11243)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg/relic is failing on samr21-xpro when built using llvm (#19903)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Types in `byteorder.h` need a cleanup (#14737)\n* USB identifiers with funny characters create mojibake (#17776)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n* ztimer is incompatible with real-time requirements (#18883)\n\nThere are 158 known issues in this release\n\n\nFixed Issues since the last release (2023.10)\n=============================================\n\n- make debug broken on `native` (#20265)\n- Bug in drivers/lpsxxx sensor (#20093)\n- stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n- cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n\n4 fixed issues since last release (2023.10)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2023.10 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2023.10 release includes:\n\n- PSA Crypto API implementation, one step closer to a secure IoT!\n- A bunch of default drivers for boards\n- Improved clang support\n\n116 pull requests, composed of 318 commits, have been merged since the\nlast release, and 2 issues have been solved. 23 people contributed with\ncode in 95 days. 1109 files have been touched with 437877 (+) insertions and\n3189 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nSystem Libraries\n----------------\n\n+ drivers/periph_sdmmc: define a High-level SDIO/SD/MMC API and low-\n  level SDMMC peripheral driver interface (#19539)\n+ sys/event: add event_is_queued() (#19966)\n* sys/shell/gnrc_netif: fix ifconfig set language issue (#19970)\n* sys/shell/gnrc_txtsnd: Move to separate module (#19973)\n* sys: PSA Crypto API implementation (#18547)\n\nNetworking\n----------\n\n+ coap: add missing Content-Format definitions (#19875)\n+ coap: add missing option numbers (#19874)\n+ drivers/atwinc15x0: support dynamic scanning and connection to AP (#19387)\n+ sys/net/sock: add sock_aux_ttl (#19836)\n* cmds_gnrc_netif: Support enabling/disabling lwIP netifs from\n  gnrc_netif shell (#19972)\n\nPackages\n--------\n\n+ mcufont: Initial addition of MCUFont package (#19726)\n* pkg/driver_cryptocell_310: Fix Makefile (#19959)\n* pkg/flashdb: bump to 2.0.0 (#19863)\n* pkg/littlefs2: bump to v2.8 (#19942)\n* pkg/lvgl: bump to v8.3.9 (#19901)\n* lwip: bump to v2.2.0 (#19780)\n\nBoards\n------\n\n+ boards/stm32f723e-disco: enable ST7789 display (#19939)\n+ boards/stm32f769i-disco: enable FMC with SDRAM support (#19851)\n+ boards/stm32l496g-disco: enable ST7789 display and touch panel (#19938)\n+ boards: add Silabs EFM32 Giant Gecko GG11 Starter Kit (#19923)\n+ boards: add support for ESP32-S3 WT32 SC01 Plus board (#19917)\n* boards/adafruit-itsybitsy-m4: configure littleFS on external flash (#19355)\n* boards/nucleo64: fix SPI Arduino mapping for most boards (#19935)\n* boards/sipeed_longan_nano: separate board definition for Sipeed\n  Longan Nano TFT (#19824)\n* boards/stm32f469i-disco: enable FMC with SDRAM support (#19910)\n* boards: complete SD Card MTD definition for several bords (#19914)\n\nCPU\n---\n\n+ cpu/stm32/periph: add FMC/FSMC support for STM32 (#19843)\n+ cpu/sam0_common/periph: add low-level SDMMC peripheral driver for SDHC (#19760)\n+ cpu/efm32/periph: add DAC support for EFM32 Series 1 (VDAC) (#19887)\n* cpu/atmega_common: hook up BAT LOW irq to power bus (#19822)\n* cpu/riscv_common: remove picolibc from blacklisting in CI (#19862)\n* cpu/stm32/periph/eth: Disable hardware checksums (#19952)\n* cpu/stm32: bump cmsis packages version (#19904)\n* cpu/stm32: fix ld script for SRAM4 (#19842)\n* dist/tools/esptools: upgrade ESP32x toolchains to GCC version 12.2 (#19452)\n* sys/psa_crypto: Ed25519 (EdDSA) support (#19954)\n\nDevice Drivers\n--------------\n\n+ drivers/ft5x06: introduce conversion for X and Y coordinates (#19867)\n+ drivers/st77xx: introduce rotation defines (#19919)\n+ drivers/lcd: add MCU 8080 16-bit parallel mode support (#19937)\n+ drivers/lcd: add MCU-driven low-level parallel interface (#19941)\n+ drivers/lcd: support MCU 8080 8-bit parallel mode (#19915)\n+ drivers/touch_dev_gestures: add gesture recognition for touch devices (#19884)\n* drivers/ft5x06: use a pointer to config parameters instead of copying\n  them (#19866)\n* drivers/sdmmc: store SDMMC device descriptor references in XFA (#19899)\n* drivers/stmpe811: changes for interrupt-driven touch handling and\n  gesture recognition (#19885)\n\nDocumentation\n-------------\n\n+ tests/pkg/lwip: Add README.md (#19949)\n+ drivers/periph: Add documentation on thread safety and initialization (#19794)\n* boards/sltb009a: complete and fix documentation (#19888)\n* doc: fix references and inches unit (#19948)\n\nBuild System / Tooling\n----------------------\n\n+ compile_and_test_for_boards: Add no-compile flag (#19817)\n+ dist/testbed-support: Add openmote board [backport 2023.10] (#19984)\n* dist/tools/jlink: fix DBG_PID assignment (#19960)\n* dist/tools/usb-serial: call ttys.py with its path (#19823)\n* make: COMPILE_COMMANDS_PATH adapt for external apps (#19869)\n\nExamples\n--------\n\n+ examples/gcoap: add saml11-xpro to CI boards with insufficient memory (#19933)\n\nTesting\n-------\n\n+ tests/drivers/touch_dev: allow to test a touch device in polling mode (#19882)\n* .github/test-on-iotlab: prefer Toulouse site for dwm1001 board (#19950)\n* .github: drop test-on-ryot workflow (#19847)\n* clang floating point handling fix (#19852)\n* gh-actions: remove reporting release tests to Matrix (#19879)\n* tests/gcoap_fileserver: only enable test with GCC (#19870)\n* tests/net/gcoap_fileserver: disable test on CI (#19898)\n* tests/net/gcoap_fileserver: Fix failing nightlies (#19856)\n* tests/pkg/relic: skip CI testing with samr21-xpro and llvm toolchain (#19902)\n\nAnd 13 minor changes.\n\n\nBug fixes (37)\n==============\n\n* tree-wide: mixed box of compilation fixes with clang (#19634)\n* drivers/stmpe811: introduce conversion for X and Y coordinates (#19883)\n* pkg/tinyusb: add missing include (#19893)\n* release-test.yml: Add strasbourg creds [backport 2023.10] (#20013)\n* tests/gcoap_fileserver: add zep_dispatcher to TEST_DEPS (#19864)\n* boards/esp32-wt32-sc01-plus: fix I2C driver selection in Kconfig (#19945)\n* boards/esp32s3-wt32-sc01-plus: fix Kconfig (#19953)\n* boards/msb-430: Fix periph config & improve doc (#19922)\n* boards: fix documentation for GD32V boards and doxygen 1.9.4 (#19931)\n* cpu/efm32: fix DAC configuration (#19886)\n* cpu/esp32: fix heap definition for ESP32-S2 and ESP32-S3 (#19956)\n* cpu/esp32: fix Octal SPI RAM for ESP32-S3 (#19957)\n* cpu/esp32: fix RISC-V ISA for ESP32-C3 with GCC 12.2 (#19962)\n* cpu/sam0_common/periph/sdhc: busy waiting and clock fixes (#19815)\n* drivers/at86rf215: switch example config to use EXT3 on same54-xpro (#19912)\n* drivers/enc28j60: disable flow control (#19845)\n* drivers/ft5x06: fix initialization if callback function parameter is\n  NULL (#19880)\n* drivers/ft5x06: fix vendor ID for FT6xx6 and FTxxxx register\n  addresses (#19860)\n* drivers/mtd_default: fix for boards that define MTD_NUMOF (#19907)\n* drivers/mtd_spi_nor: fix init when only ztimer_msec is used (#19908)\n* drivers/st77xx: implement initialization (#19827)\n* drivers/stmpe811: fix initialization if callback function parameter\n  is NULL (#19881)\n* drivers: rename st7735 to more generic st77xx (#19825)\n* gcoap: fix underflow when correcting ETag from cache [backport\n  2023.10] (#19987)\n* gnrc_ipv6_nib: disable router advertisements on interface startup (#19920)\n* gnrc_ipv6_nib: fix for border router with non-6lo interfaces (#19900)\n* nanocoap: prevent integer underflow in coap_opt_put_uri_pathquery()\n  [backport 2023.10] (#20038)\n* netdev/ieee802154_submac: support setting promiscuous mode option (#19906)\n* nib/_nib-6ln: bail out early if address is no longer assigned\n  [backport 2023.10] (#20037)\n* pkg/nanocbor: Update for fixed nanocbor_skip_simple() [backport\n  2023.10] (#19988)\n* pkg/tinydtls: allow to set buffer size from application again (#19892)\n* posix_sockets.c: Fix 2 byte int compilation errors (#19946)\n* sys/psa_crypto: Fix macro for public key max size and SE example\n  [backport 2023.10] (#20039)\n* sys/shell/ping: fix ping packet size overflow (#19927)\n* tests/drivers/disp_dev: fix off by one in display area (#19844)\n* tests/pkg/lvgl*: fix the main thread stack size for ESPs (#19865)\n* ztimer/periodic: reinit remove from right clock and handle acquired\n  ztimer (#19826)\n\n\nKnown issues\n============\n\nNetwork related issues (52)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* example/gnrc_border_router cannot answer after some time (#19578)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* Global IPv6 addresses remain deprecated after receiving RA (#19846)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_border_router: Kconfig and C disagree about number of addresses\n  per interface (#19947)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: old routes are not deleted (#19423)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* LWIP TCP Communication Error (#19676)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg/tinydtls: DTLS handshake does not work (#19595)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (7)\n------------------------\n\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (12)\n---------------------------\n\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (16)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* boards/hifive1: flashing issue (#13104)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* Interrupt callback function is instantly called on samd51 after\n  setting it from within interrupt callback function (#19861)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (7)\n-------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* Build dependencies - processing order issues (#9913)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* EXTERNAL_MODULE_DIRS silently ignores non-existent entries (#17696)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* missing build dependencies in the rust build (#19714)\n\nOther issues (67)\n-----------------\n\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* at86rf215 stops receiving until sending a packet (#19653)\n* b-l072z-lrwan1: tests/ztimer_overhead: test failure (#19224)\n* backport_pr: Only works for when fork is in user (not in\n  organization) (#18486)\n* benchmark_udp: hammering with low interval causes issues (#16808)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Builds fail when different execstack options are around in objects (#18522)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538-CC2592EM has a very weak transmit power (#17543)\n* CC2538DK board docs: broken links (#12889)\n* cpp: Exception handling undefined (#17523)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/boards: information concerning access to RIOT shell (#17453)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* examples/gcoap: client broken (#19379)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* frdm-k22f fails tests/periph_timer (#19543)\n* Freeze into semtech_loramac_send call (pkg/semtech-loramac) (#18790)\n* gcoap: gcoap_req_send and related should return negative for errors (#19393)\n* gnrc_ipv6_nib: Neighbor Solicitation ping-pong (#18164)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* kconfiglib.py choice override of menuconfig bug (#19069)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* MTD is confusing (#17663)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* periph_rtt: rtt_set_alarm() blocks IRQ for 80 plus usec on STM32 (#19520)\n* pkg/tinydtls: Multiple issues (#16108)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* Samr30/gpio: Erasing then write mux can generate spurious IRQ (#19993)\n* samr34-xpro: some tests failing (#19223)\n* sock_dtls: unable to send big messages (#17996)\n* spurious IRQs in `periph_timer` (#18976)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* STM32 Nucleo boards improperly clocked (#19778)\n* sys/riotboot: documentation issues (#11243)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg/relic is failing on samr21-xpro when built using llvm (#19903)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Types in `byteorder.h` need a cleanup (#14737)\n* USB identifiers with funny characters create mojibake (#17776)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n* ztimer is incompatible with real-time requirements (#18883)\n\nThere are 161 known issues in this release\n\n\nFixed Issues since the last release (2023.07)\n=============================================\n\n- at86rf215 stops receiving when sam0_eth is in use (#19911)\n- drivers/st7735: faulty driver initialization (#19818)\n\n2 fixed issues since last release (2023.07)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2023.07 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThis release sees the addition of the openDSME IEEE 802.15.4 MAC.\nSo far it is limited to 2.4 GHz O-QPSK and drivers that have been converted\nto the new sub-MAC architecture yet.\n\nWe also have two new supported MCUs: nRF53 and ATmega8. They share common\nperipherals with their siblings, for nRF53 only the application core is\nsupported so far.\n\nFinally, all tests live in subdirectories now, so the tests/ directory is much\nmore orderly.\n\n288 pull requests, composed of 661 commits, have been merged since the\nlast release, and 35 issues have been solved. 26 people contributed with\ncode in 96 days. 6844 files have been touched with 251875 (+) insertions and\n224148 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n+ core/compiler_hints: add assume() hint (#19354)\n+ core: add core_mutex_debug to aid debugging deadlocks (#18620)\n* core/lib: make the use of DEBUG_BREAKPOINT on assert optional (#19766)\n* gnrc/ipv6_auto_subnets: allow to configure minimal prefix length (#19656)\n\nSystem Libraries\n----------------\n\n+ shell/cmds: add genfile command (#19401)\n+ sys: add common imath module mv isin() form test/driver_dac_dds (#19378)\n+ usbus: Add support for endpoint halt condition (#17090)\n* buildsystem: Always expose CPU_RAM_BASE & SIZE flags (#19746)\n* cpp11-compat: thread::sleep_for in microseconds (#19436)\n* Rust: Update dependencies (#19495)\n* SUIT: Prepared manifests (#19601)\n* sys /cpp11-compat: remove pseudo anonymous namespaces (#19477)\n* sys/isrpipe: Replace xtimer with ztimer_usec (#19645)\n* sys/posix/sockets: fix code style & set sin6_scope_id in\n  _ep_to_sockaddr() (#19658)\n* sys: partly refactor make dependency resolution (#19492)\n* usbus: Implement USB_FEATURE_DEVICE_REMOTE_WAKEUP handling (#19800)\n* ztimer/periodic: remove timer on init if already running (#19806)\n\nNetworking\n----------\n\n+ pkg/opendsme: add initial support for IEEE 802.15.4 DSME time-slotted\n  MAC (#18156)\n+ sys/string_utils: add memchk() (#19686)\n* drivers/sx127x: reduce use of floats (#19697)\n* gnrc/gnrc_netif_hdr_print: printout timestamp if enabled (#19589)\n* gnrc/ipv6/nib: fix 6Lo ND options on non 6Lo interface (#19604)\n* gnrc/rpl: fix incorrect addition overflow check (#19739)\n* gnrc_ipv6_nib: include RIO with all subnets in downstream RA (#19644)\n* nanocoap: allow to define CoAP resources as XFA (#19296)\n* nanocoap: clean up coap_iterate_option(), make it public (#19713)\n* nanocoap: implement extended tokens (RFC 8974) (#19487)\n* nanocoap_sock: defuse nanocoap_sock_get() API footgun (#19535)\n* pkg/openthread: remove deprecated functions (#19685)\n* semtech-loramac: extend list of supported radio with sx1261, sx1262\n  and sx1268 (#19525)\n\nPackages\n--------\n\n* pkg/littlefs2: bump version to 2.7 (#19812)\n* pkg/lvgl: bump to 8.3.7 (#19542)\n* pkg/lvgl: Change all references of LittlevGL to LVGL (#18788)\n* pkg/ndn-riot: drop unmaintained pkg (#19612)\n* pkg/qcbor: bump to v1.2 (#19494)\n\nBoards\n------\n\n+ board: add Adafruit Grand Central M4 Express support (#19580)\n+ boards,sys/arduino: major clean up (#19759)\n+ boards/b_u585i_ iot02a/periph usbdev (#19796)\n+ boards/nucleo-l432k: provide three periph_timer instances (#19677)\n+ boards/olimex-msp430-h2618: add new board (#19706)\n+ boards: add ESP32-S3-Box support (#19811)\n+ boards: add ESP32-S3-USB-OTG support (#19808)\n+ boards: add stm32l496g-disco support (#19576)\n+ boards: support for Olimex MSP430-H1611 board (#19558)\n+ cpu/gd32v: add riotboot support (#19411)\n+ cpu/native: add host fs access via VFS (#19315)\n+ cpu/nrf53: add I2C and SPI support (#19798)\n+ cpu/nrf53: add initial support with nRF5340DK-APP board (#19769)\n+ cpu/nrf53: add usbdev support (#19809)\n+ cpu/nrf{53,9160}: add periph_rtt support (#19804)\n+ cpu/nrf{53,9160}: add pwm support (#19781)\n+ cpu/rpx0xx: add initial ADC support (#19516)\n+ drivers/usbdev_synopsys_dwc2: add GD32V support (#19389)\n* boards/adafruit-clue: use shared usb_board_reset.mk for\n  flash/reset/term targets (#19616)\n* boards/arduino-mkrwan1300: update board name to correct one (#19526)\n* boards/atmega8: new board (#19754)\n* boards/esp32: deduplication in common ESP32x board definitions (#19432)\n* boards/frdm-k22f: fixes long lines in periph_conf.h (#19774)\n* boards/nrf9160dk: use all available CC timer channels (#19771)\n* boards/nucleo-f429zi: Provide 2nd timer (#19447)\n* boards/rpi-pico: specify needed args when using jlink flasher (#19537)\n* boards/rpi-pico: update openocd.cfg file (#19717)\n* cpu/msp430: reorganize code (#19733)\n* cpu/nrf5x/periph/wdt: enable support for nRF53/nRF9160 (#19789)\n* cpu/nrf5x_common: rework LFCLK source selection (#19803)\n* cpu/rpx0xx: implement periph_spi (#19440)\n* cpu/rpx0xx: initial PIO support (#17425)\n* makefiles/tools/jlink.inc.mk: use ELF file for flashing (#19541)\n\nCPU\n---\n\n+ cpu/avr8 common: added avr4.ld script (#19751)\n+ cpu/riscv: Add PMP driver (#19712)\n+ cpu/stm32/periph_dac: small improvements (#19573)\n+ cpu/stm32/periph_pwm: support of complementary timer outputs (#19572)\n+ debug: add DEBUG_BREAKPOINT() macro, set breakpoint on failed\n  assertion (#19368)\n* build-system: Allow out of tree BUILD_DIR (#19600)\n* cpu/arm7: Fix undefined behavior based on invalid assembly (#19619)\n* cpu/atmega8: new cpu (#19753)\n* cpu/atmega_common: checking features instead of CPU models (#19752)\n* cpu/avr8_common: Prepare for rework ISR (#19777)\n* cpu/esp32: fix compilation issues with GCC 12.2 (#19450)\n* cpu/esp32: fix remaining compilation errors for GCC 12.2 (#19577)\n* cpu/nrf53: enable flashpage support (#19802)\n* cpu/nrf5x_common: reset all available CC channels (#19770)\n* cpu/nrf{52,9160}: remove duplicate sevonpend bit (#19773)\n* cpu/sam0_eth: interrupt based link detection/auto-negotiation (#19703)\n* cpu/samd5x: enable FDPLL1 at 200MHz (#19581)\n* cpu/stm32/periph/adc: fix setting ADC clock (#19629)\n* cpu/stm32/periph/dac: optimize setting DAC (#19529)\n* cpu/stm32: stm32f4 BRR from BSRR (#19670)\n* drivers/at86rf2xx: setting rx timestamp based on symbol counter for\n  ATmega*RFR2 (#19605)\n* drivers/periph/rtc: improve doc on rtc_set_alarm (#19610)\n* Fix periph clk (#19628)\n* makefiles/arch/msp430.inc.mk: Fix compilation issues with GCC 12 (#19484)\n* native/syscalls: rename real_clock_gettime to clock_gettime (#19476)\n* pkg/cmsis: use unique package for CMSIS headers, DSP and NN modules (#18056)\n* pkg/tinydtls: allow build for AVR (#19346)\n\nDevice Drivers\n--------------\n\n+ drivers/mtd: add support for MTDs emulated in RAM (#19443)\n+ drivers/mtd_default: add external declarations for mtd* (#19538)\n* driver/lc709203f: remove unnecessary use of float (#19662)\n* drivers/lcd: code deduplication for st7735 and ili9341 (#19816)\n* drivers/mpu9x50: clean up code (#19657)\n* drivers/mrf24j40: cleanup function (#19635)\n* drivers/pcf857x: allow to define PCF857x_BASE_ADDR at compile time (#19734)\n* drivers/sdcard_spi: small cleanup (#19527)\n\nDocumentation\n-------------\n\n+ doc: add board selection guide (#19606)\n+ SUBSYSTEMD.md: add @kaspar030 to core, Rust, build system, CI &\n  timers (#19727)\n+ SUBSYSTEMS.md: add @maribu (#19732)\n+ SUBSYSTEMS.md: add jia200x to subsystems (#19512)\n* README.md: Remove HiL Badge (#19453)\n* gnrc_sixlowpan_frag_sfr: mark as experimental + doc fixes (#19682)\n\nBuild System / Tooling\n----------------------\n\n+ buildsystem: add target debug-client (#19725)\n+ dist/tools/openocd: add OPENOCD_SERVER_ADDRESS variable (#19724)\n+ dist/tools/openocd: add RTT port variable (#19723)\n+ tools/build_system_sanity_check: add check to verify test\n  applications are at the right place (#19673)\n* dist/testbed-support: remove obsolete boards from iotlab archi (#19514)\n* dist/tools/insufficient_memory: fix collection of app folders (#19598)\n* dist/tools/openocd: fix parsing of flash bank base (#19620)\n* dist/tools/openocd: start debug-server in background and wait (#19737)\n* dist/tools/usb-serial: call ttys.py with its path [backport 2023.07] (#19831)\n* dist/tools: Use `/usr/bin/env` to lookup Python. (#19448)\n* make/usb_board_reset: define {preflash,term}-delay when necessary (#19617)\n* Makefile.include: don't use target lstfile implicitly (#19797)\n* Makefile.include: Generate lst file using objdump (#19745)\n\nKconfig\n-------\n\n+ pkg/libbase58: add kconfig support (#19623)\n+ sys: add Kconfig support for clif (#19621)\n+ sys: add some missing kconfig + adapt related tests when possible (#19622)\n* boards/esp32s3-pros3: Fix stdio kconfig model (#19708)\n* cpu/esp32: deduplication in Kconfig for ESP32x SoCs (#19433)\n* cpu/rpx0xx: Fix kconfig model (#19660)\n* drivers/nrf24l01p: model in kconfig (#19650)\n* periph/timer: fix Kconfig menu title (#17830)\n* pkg/micropython: model in Kconfig (#19672)\n* pkg/openthread: Fix Kconfig and broken example (#19700)\n* pkg/openthread: model in kconfig (#19671)\n* Remodel the USB in Kconfig (#19086)\n* sys/stdio_semihosting: model in Kconfig (#19651)\n* sys/usb/Kconfig: Fix default PID (#19701)\n* sys: model ecc, evtimer, pipe and shell_lock in kconfig (#19636)\n\nExamples\n--------\n\n* examples/suit_update: some test fixes (#19643)\n\nTesting\n-------\n\n+ tests/net/gnrc_mac_timeout: add automated test (#19639)\n+ tests/README.md: Add directory overview (#19587)\n* tests: move all periph applications to their own periphs/ folder (#19552)\n* tests: move all pkg applications to their own pkgs/ folder (#19551)\n* treewide: fix remaining broken paths to test applications (#19592)\n* tests/drivers: move all driver tests into own folder (#19435)\n* tests: move all bench applications to their own tests/bench/ folder (#19564)\n* tests: move build system applications to tests/build_system (#19567)\n* tests: move core related applications to their own tests/core/ folder (#19565)\n* tests: move cpu related applications to tests/cpu (#19583)\n* tests: move net related applications to test/net (#19586)\n* tests: move nimble and lwip related to test applications to tests/pkg (#19582)\n* tests: move sys related applications to their own tests/sys/ folder (#19566)\n* treewide: replace occurrences of tests/driver_ with new path (#19555)\n* tests/core: remove Makefile.sys_common copy past mistake (#19783)\n* tests/drivers_at24cxxx: make it easier to select other EEPROMS (#19457)\n* tests/lua_loader: move to tests/pkg/lua_loader (#19569)\n* tests/periph_rtt: Fix for tick conversion test (#19522)\n* tests/pkg/lvgl: avoid using floats (#19698)\n* tests/unittests: remove old workaround for SAML1X and gcc9.X bug (#19687)\n* tests: move leftover sys related tests to test/sys + move\n  tests/sys/candev to tests/drivers (#19585)\n* tests: move remaining driver related applications to tests/drivers (#19568)\n\nAnd 65 minor changes.\n\nRemovals (6)\n------------\n\n- makefiles/pseudomodules: remove deprecated event_thread_lowest module (#19627)\n- nanocoap_sock: remove nanocoap_get() (#19553)\n- pkg/tensorflow-lite: remove deprecated package (#19624)\n- sys/gnrc_lorawan: remove deprecated tx port option (#19626)\n- sys/hashes: remove deprecated aes cmac hashing (#19625)\n- usbus: remove deprecated USBUS_HANDLER_FLAG_TR_FAIL flag (#19488)\n\nBug fixes (53)\n==============\n\n* cpu/stm32/periph_adc: fixes and improvements for L4 support (#19571)\n* all/gnrc: fix null pointer dereference (#19756)\n* boards/esp32: small documentation fixes (#19810)\n* boards/esp32s2-lilygo-ttgo-t8: fix display configuration (#19807)\n* boards/iotlab-m3: enable l3g4200d_ng (#19523)\n* boards/qn9080dk: fix periph conflict (#19730)\n* boards/sipeed-longan-nano: fix TFT display config and documentation (#19793)\n* boards/sipeed-longan-nano: revert default to variant with TFT (#19814)\n* boards/z1: fix broken clock configuration (#19705)\n* boards: fix documentation for GD32V boards (#19790)\n* buildsystem: fix kconfig mismatches (#19813)\n* core/lib: drop read only XFA's `const volatile` modifiers (#19544)\n* core: fix null pointer dereference (#19757)\n* cpu/cc26x0_cc13x0: Drop feature cortexm_mpu (#19507)\n* cpu/esp32: define RAM_START_ADDR and RAM_LEN (#19763)\n* cpu/esp8266: fix region overflow with '*periph' directory in app path (#19785)\n* cpu/msp430: fix for ti's msp430-gcc-opensource package ld version (#19782)\n* cpu/qn908x/periph_i2c: allow internal pull-up on SCL (#19729)\n* cpu/stm32/periph_gpio: reset PU/PD for ADC channels (#19574)\n* cpu/stm32/usbdev_fs: fix ep registration and EP_REG assignments (#19460)\n* cpu/stm32: Fix periph_gpio_ll_irq (#19446)\n* cpu/stm32: fix riotboot settings for L4 and WB (#19618)\n* drivers/at86rf2xx: fix default page being ignored (#19467)\n* drivers/dht: busy wait reimplementation (#19718)\n* drivers/enc28j60: fix ISR routine and bth (#19461)\n* drivers/hih6130: avoid using floats (#19695)\n* drivers/periph_usbdev: fix set device address (#19471)\n* drivers/servo: Fix missing dep (#19515)\n* drivers/slipdev: fix logic bug (#19633)\n* drivers/usbus_synopsys_dwc2: fix interrupt handling in DMA mode (#19459)\n* gnrc/ipv6/nib: reset rs_sent counter also for not-6LN interfaces (#19747)\n* gnrc_sixlowpan_frag_rb: fix OOB write in _rbuf_add (#19680)\n* gnrc_sixlowpan_frag_sfr: fix ARQ scheduler race-condition (#19679)\n* gnrc_sixlowpan_iphc: fix NULL pointer dereference (#19678)\n* gnrc_sixlowpan_iphc: prefix bits outside context must be zero (#19649)\n* ipv6/nib: 6LBR should not send RS on their downstream interface (#19335)\n* makefiles/arch/riscv.inc.mk: speed up toolchain detection (#19791)\n* makefiles/tools/serial.inc.mk: Handle new miniterm versions (#19444)\n* nrf5x_common: Clear I2C periph shorts (#19735)\n* pkg/openthread: set event callback before netdev init (#19547)\n* sys/color: extend unittest and fix module (#19693)\n* sys/net/rpl: fix missing assignment operator (#19749)\n* sys/net/rpl: fix possible NULL dereference (#19611)\n* sys/shell: fix missing generic lora settings in ifconfig (#19466)\n* sys/usb/usbus_msc: fix typo in C expression (#19637)\n* sys/usbus/msc: fix EP sizes for USB HS and buffer alignment in DMA-\n  mode (#19458)\n* sys/xtimer: improve documentation (#19681)\n* tests/build_system/external_board_dirs: fix broken symlinks (#19584)\n* tests/drivers/l3gxxxx: fix used sensor version for iotlab boards (#19550)\n* tools/mspdebug: fix `make debug` and `make debugserver` (#19556)\n* tools/openocd: Fix handling of OPENOCD_CMD_RESET_HALT (#19506)\n* usbus/msc: fixes for synopsys dwc2 driver (#19455)\n* usbus: don't trigger assertion in usbus_urb_submit() (#19664)\n\n\nKnown issues\n============\n\nNetwork related issues (51)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* example/gnrc_border_router cannot answer after some time (#19578)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* Global IPv6 addresses remain deprecated after receiving RA (#19846)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: old routes are not deleted (#19423)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* LWIP TCP Communication Error (#19676)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg/tinydtls: DTLS handshake does not work (#19595)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (7)\n------------------------\n\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (13)\n---------------------------\n\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* drivers/st7735: faulty driver initialization (#19818)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (15)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (7)\n-------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* Build dependencies - processing order issues (#9913)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* EXTERNAL_MODULE_DIRS silently ignores non-existent entries (#17696)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* missing build dependencies in the rust build (#19714)\n\nOther issues (64)\n-----------------\n\n* [TRACKING] sys/shell refactoring. (#12105)\n* [tracking] unnecessary use of floating point arithmetic (#19614)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* at86rf215 stops receiving until sending a packet (#19653)\n* b-l072z-lrwan1: tests/ztimer_overhead: test failure (#19224)\n* backport_pr: Only works for when fork is in user (not in\n  organization) (#18486)\n* benchmark_udp: hammering with low interval causes issues (#16808)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Builds fail when different execstack options are around in objects (#18522)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538-CC2592EM has a very weak transmit power (#17543)\n* CC2538DK board docs: broken links (#12889)\n* cpp: Exception handling undefined (#17523)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/boards: information concerning access to RIOT shell (#17453)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* examples/gcoap: client broken (#19379)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* frdm-k22f fails tests/periph_timer (#19543)\n* Freeze into semtech_loramac_send call (pkg/semtech-loramac) (#18790)\n* gcoap: gcoap_req_send and related should return negative for errors (#19393)\n* gnrc_ipv6_nib: Neighbor Solicitation ping-pong (#18164)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* kconfiglib.py choice override of menuconfig bug (#19069)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* MTD is confusing (#17663)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* periph_rtt: rtt_set_alarm() blocks IRQ for 80 plus usec on STM32 (#19520)\n* pkg/tinydtls: Multiple issues (#16108)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* samr34-xpro: some tests failing (#19223)\n* sock_dtls: unable to send big messages (#17996)\n* spurious IRQs in `periph_timer` (#18976)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* STM32 Nucleo boards improperly clocked (#19778)\n* sys/riotboot: documentation issues (#11243)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Types in `byteorder.h` need a cleanup (#14737)\n* USB identifiers with funny characters create mojibake (#17776)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n* ztimer is incompatible with real-time requirements (#18883)\n\nThere are 161 known issues in this release\n\nFixed Issues since the last release (2023.04)\n=============================================\n\n- Not able to flash binary on samr21-xpro boards choosing serial number (#19805)\n- STM32F4-discovery + mrf24j40 not working (#19711)\n- Deprecated documentation? (#19667)\n- usbus_cdc_ecm: failed assertion when host reboots (#19663)\n- Bug: _ep_to_sockaddr() does not update in6_addr->sin6_scope_id (#19486)\n- SPI access in LoRa-e5 and im880b? (#19025)\n- qn9080 I2C driver spins in endless loop (#19021)\n- pkg_libhydrogen tests fail / update libhydrogen (#18508)\n- [gcoap-dtls] Posting a message yields a stack overflow on the\n  `samr21-xpro` with ECC (#18292)\n- driver/sx126x:sx1268 spreading factor support LORA_SF5 (#17861)\n- Bug: BUILD_IN_DOCKER=1 doesn't work when running make compile-\n  commands (#17507)\n- newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n- cpu/stm32/periph/rtc overflow error (#16574)\n- `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n- Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n- Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n- build: info-build doesn't work with boards without port set (#15185)\n- Two bugs may lead to NULL dereference. (#15006)\n- tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n- BUILD_IN_DOCKER ignores USEMODULE (#14504)\n- adc is not a ADC-Driver but a analog pin abstraction (#14424)\n- ethos: Unable to choose global source address. (#13745)\n- Potential security and safety race conditions on attached devices (#13444)\n- Cannot use LLVM with Cortex-M boards (#13390)\n- Sleep mode for Arduino (#13321)\n- Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n- Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n- floats and doubles being used all over the place. (#12045)\n- send data with UDP at 10HZ, the program die (#11860)\n- Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n- sys/stdio_uart: dropped data when received at once (#10639)\n- CC2538 RF overlapping PIN usage (#8779)\n- doxygen: riot.css modified by 'make doc' (#8122)\n- cpu/native: timer interrupt issue (#6442)\n- macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n\n35 fixed issues since last release (2023.04)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2023.04 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2023.04 release includes:\n\n- Mass Storage Class Support in USBUS\n- Initial support for libSCHC\n- FlashDB support\n- BLE downlink in GNRC Border Router\n- DTLS support for nanoCoAP in client mode\n- Congestion control for 6LoWPAN Selective Fragment Recovery\n- avr/flash_utils: strings (and other const data) no longer needs to be copied\n  to RAM\n- New boards:\n  - esp32c3-wemos-mini\n  - esp32s2-lilygo-ttgo-t8\n  - esp32s2-wemos-mini\n  - esp32s3-pros3\n  - rpi-pico-w\n  - sipeed-longan-nano\n- New device drivers:\n  - Black/white e-Paper/e-Ink display\n  - RFID reader (MFRC522)\n  - ST VL53L1X Time-of-Flight sensor\n\n280 pull requests, composed of 595 commits, have been merged since the\nlast release, and 3 issues have been solved. 27 people contributed with\ncode in 83 days. 1246 files have been touched with 177090 (+) insertions and\n36429 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n+ core/compiler_hints: add likely() / unlikely() hints (#19156)\n* core/xfa: disable asan on llvm (#19271)\n* pkg/libfixmath: bump version (#19182)\n\nSystem Libraries\n----------------\n\n+ drivers/wdt: add periph_wdt_auto_start for early watchdog (#18257)\n+ fuzzing: Add uri_parser setup (#19057)\n+ Revert \"sys/pm_layered: pm_(un)block add attribute optimize(3)\" (#19155)\n+ sys/coding: add XOR based coding module (#17045)\n+ sys/event: add event sources (#18758)\n+ sys/irq: Add C++ wrapper using RAII (#17066)\n+ sys/phydat: add functions for Unix time conversion to phydat (#19080)\n+ sys/trickle: cleanup deps (#19404)\n+ sys/vfs: add force option to vfs_umount() (#19320)\n+ usbus/msc: add CONFIG_USBUS_MSC_AUTO_MTD option to create LUNs on\n  init (#19356)\n+ usbus/msc: add initial Mass Storage Class support (#19242)\n+ USBUS: Add URB support (#17091)\n+ ztimer: add ztimer_stopwatch convenience functions (#19343)\n* bootloaders: fix bootloader button logic (#19365)\n* makefiles/suit: make it possible to accept multiple SUIT keys (#18459)\n* sys/bitfield: don't touch unrelated bits in bf_{set, clear}_all() (#19400)\n* sys/cpp11-compat: Remove xtimer deps (#19369)\n* sys/fmt: optimize scn_u32_dec scn_u32_hex (#19027)\n* sys/fmt: use `fflush(); stdio_write()` instead of `fwrite()` (#19250)\n* sys/shell_lock: do not call strlen, less jumpy (#19157)\n* sys/tiny_strerror: make use of flash_utils.h (#19332)\n* test_utils/print_stack_usage: use thread.h API (#19226)\n* usbus/dfu: do not create alt interface if NUM_SLOTS=1 (#19386)\n\nNetworking\n----------\n\n+ gcoap/fileserver: add event callbacks (#18414)\n+ gnrc_sixlowpan_frag_sfr_congure: optional congestion control support\n  (#16171, #16159, #16170, #16158)\n+ gnrc_static: add static network configuration (#18477)\n+ nanocoap_link_format: add helper function to parse Link Format (#18134)\n+ pkg/tinyusb: add tinyUSB netdev driver (#18903)\n* cord: bump reference from draft to rfc (#19367)\n* cord: convert to ztimer (#19391)\n* gnrc_ipv6_nib: clean up _resolve_addr() (#18939)\n* nanocoap_sock: ensure response address is the same as request address (#19361)\n* nanocoap_sock: implement DTLS socket (#18724)\n* nanocoap_sock: implement nanocoap_sock_delete() (#18738)\n* nanocoap_sock: store message ID in nanocoap_sock_t (#19178)\n* pkg/tinydtls: Reduce default verbosity, increase default sizes when CoAP is\n  used (#19331)\n* shell/cmds: GNRC: replace puts() with printf() (#19327)\n* shell/gnrc_icmpv6_echo: separate ICMPv6 echo sending / parsing from\n  shell command (#18934)\n* sock_dtls: move common code into sock_dtls_establish_session() (#19142)\n* sys/net/gnrc/netif: fixing no global address wait (#19402)\n* sys/net/grnc/netreg: avoid creating an infinite loop (#19238)\n\nPackages\n--------\n\n+ libschc: initial import as package (#18515)\n+ pkg/arduino_adafruit_sensor: add Adafruit Unified Sensor Driver as\n  package (#17460)\n+ pkg/wolfssl: Update wolfSSL to 5.5.4 and add DTLS 1.3 support (#19302)\n+ pkg: add FlashDB (#17612)\n* pkg/fatfs: bump to r0.15 (#19347)\n* pkg/lz4: bump version to 1.9.4 (#19180)\n* pkg/minmea: bump version (#19183)\n* pkg/nanopb: bump version to 0.4.7 (#19179)\n* pkg/tinydtls: bump version (#19184)\n* pkg/tinydtls: drop libc_gettimeofday dependency (#19247)\n* pkg/tinyusb: bump to 0.15 (#19276)\n* pkg/u8g2: bump version (#19285)\n* pkg/wolfssl: Fix memory leaks in wolfSSL sock_tls (#19190)\n* tests/pkg_nanors: use static allocation (#19382)\n+ pkg/tinyusb: add GD32VF103 support (#19256)\n+ pkg/lwext4: add lightweight implementation of the ext2/3/4 filesystem (#18682)\n\nBoards\n------\n\n+ boards/esp32c3-wemos-mini: add support for Wemos ESP32-C3 mini (#19417)\n+ boards/esp32s2-mini: add definition for ESP32 S2 Mini (#18863)\n+ boards/nucleo64: Add pinout diagrams from UM1724 (#19406)\n+ boards/seeedstudio-gd32: add mtd_sdcard_default (#19293)\n+ boards/seeedstudio-gd32: complete and improve board definition (#19166)\n+ boards/sipeed-longan-nano: add BOOT as user button (#19419)\n+ boards/sipeed-longan-nano: add definition for the Sipeed Longan Nano\n  GD32VF103 board (#19170)\n+ boards: add esp32s3-pros3 support (#19088)\n+ boards: support for the LILYGO TTGO T8 ESP32-S2 board (#19284)\n+ cpu/native: implement periph_rtc_ms (#19340)\n+ drivers/mrf24j40: add support for IEEE 802.15.4 Radio HAL (#18472)\n+ drivers/mtd_sdcard: add mtd_sdcard_default module (#19216)\n+ makefiles/tools/serial.inc.mk: Allow detection of debug adapter (#19119)\n* boards/adafruit-itsybitsy-m4: turn off APA102 LED on startup (#19357)\n* boards/esp*: complete SD Card MTD config (#19255)\n* boards/esp32: enable RGB LED support (#19408)\n* boards/gd32v: improve board definitions (#19249)\n* boards/rpi-pico-w: fix too large board image (#19159)\n* boards/rpi-pico-w: initial support for rpi pico W board (#19071)\n* boards/sipeed-longan-nano: default to flashing via DFU (#19204)\n* boards/stm32f4discovery: default to stdio via CDC ACM (#19259)\n* boards: common: stdio_cdc_acm: let tests wait a bit for serial port (#19128)\n* cpu/rpx0xx/cmsis: Update vendor header files (#19416)\n\nCPU\n---\n\n+ bootloaders/riotboot: add tinyUSB DFU support (#19010)\n+ core/init: add early_init() (#19082)\n+ cpu/esp32: add periph_flashpage support (#19079)\n+ cpu/gd32v: add periph_adc support (#19188)\n+ cpu/gd32v: add periph_dac support (#19248)\n+ cpu/gd32v: add periph_gpio_irq support (#19185)\n+ cpu/gd32v: add periph_gpio_ll and periph_gpio_ll_irq support (#19243)\n+ cpu/gd32v: add periph_i2c support (#19201)\n+ cpu/gd32v: add periph_pwm support (#19209)\n+ cpu/gd32v: add periph_rtc support (#19186)\n+ cpu/gd32v: add periph_rtc_mem support (#19254)\n+ cpu/gd32v: add periph_rtt support (#19202)\n+ cpu/gd32v: add periph_spi support (#19214)\n+ cpu/gd32v: add pm_layered support in periph_pm (#19187)\n+ cpu/stm32/periph: Add GPIO LL IRQ support for STM32F1 (#19412)\n+ cpu/stm32/periph: Implement GPIO LL for STM32F1 without IRQ support\n  (yet) (#19407)\n+ picolibc: add support for picolibc >= 1.8 (#19341)\n+ sys/stdio_udp: add stdio over UDP (#19081)\n* cpu/esp32: cleanup of ESP-IDF interface API (module `esp_idf_api`) (#19426)\n* cpu/esp_common: use generic WIFI_SSID/WIFI_PASS defines (#19286)\n* cpu/gd32v/periph_i2c: interrupt based driver (#19269)\n* cpu/native: Switch to ztimer for gettimeofday (#19349)\n* cpu/riscv_common: convert to uword_t usage (#19345)\n* cpu/sam0_common: adc: implement 16 bit mode by oversampling (#19165)\n* cpu/stm32/periph/i2c: export PERIPH_I2C_MAX_BYTES_PER_FRAME (#19279)\n* cpu/stm32/periph/timer: don't stop counter (#19263)\n* cpu/stm32/periph/timer: fix clobered IRQ flag (#19385)\n* cpu/stm32/usbdev_fs: fix ep registration and EP_REG assignments\n  [backport 2023.04] (#19462)\n* drivers/at24cxxx: implement _mtd_at24cxxx_read_page (#19270)\n* Fix stm32 timer periodic (#19363)\n* sam0/usbdev: partial revert of #17086 (#19384)\n* sys/usbus: check for the number of required and provided EPs in\n  static configurations (#19371)\n\nDevice Drivers\n--------------\n\n+ black/white e-Paper/e-Ink display driver (#12509)\n+ drivers/mfrc522: add new driver (#16782)\n+ drivers/servo: reimplement with high level interface (#18392)\n+ drivers/usbdev_synopsys_dwc2: add ESP32x power management (#19399)\n+ drivers: add driver for ST VL6180X ranging and ambient light sensor (#10462)\n* drivers/at24cxxx: merge mtd driver with at24cxxx.c (#19281)\n* drivers/periph_common/flashpage: fix silent error (#19175)\n* drivers/slipdev: implement sleep states (#17810)\n* drivers/ws281x: improve timing for ESP32x (#19422)\n+ drivers/ws281x: add RMT hardware support for ESP32x SoCs (#19424)\n\nDocumentation\n-------------\n\n+ doc: Add out of tree RIOT app documentation (#19324)\n* blobs: include documentation in doxygen (#19200)\n* doc/porting-boards.md: fix code snippets in md view (#19206)\n* Doc: document generate-makefile.ci (#19239)\n* doccheck: avoid generating dot or html (#19228)\n\nBuild System / Tooling\n----------------------\n\n+ tools/compile_like_murdock: Add features (#19351)\n+ tools/doccheck: add simple exclude to doccheck (#19240)\n+ tools/renode: add support for target reset (#19375)\n* build system: Fix linker feature test with newlib 4.3.0 (#19232)\n* ci/print_versions: print all ESP32 toolchains (#19309)\n* dist/tools/doccheck: Fix grep warning (#19220)\n* dist/tools/insufficient_memory: Improve and clean up script (#19291)\n* esptools/install.sh: Fix shellcheck issues (#19325)\n* Fix `compile_like_murdock.py` when board is empty (#19370)\n* make: pass make jobserver to cargo (#19203)\n* Makefile.dep: pull in FEATURES_REQUIRED for periph (#19234)\n* toolchain/gnu.inc.mk: don't check version if CC is not installed (#19137)\n\nKconfig\n-------\n\n* drivers/sx126x: make MODULE_SX126X_RF_SWITCH hidden in kconfig (#19194)\n* Fix SX126X-STM32WL module in Kconfig (#19191)\n\nExamples\n--------\n\n+ examples/gnrc_border_router: add BLE as downlink option (#19321)\n\nTesting\n-------\n\n+ bors.yaml: re-activate labels check + add block_labels (#19161)\n+ CI: re-add \"synchronize\" event to check-labels (#19136)\n+ gh-actions: report release-tests result to Matrix (#19102)\n* CI: .murdock: fix bors fast build (#19241)\n* CI: .murdock: use build checkout for ccache tmp (#19274)\n* CI: separate check-labels and check-commits workflows (#19120)\n* CI: update check-labels-action (#19101)\n* test/periph_rtc: reset struct tm time between tests (#19344)\n* tests/gnrc_rpl: Disable CI test for native (#19171)\n* tests/periph_flashpage_unittest: enable periph_flashpage (#19215)\n\nAPI Changes\n-----------\n\n+ usbdev: Add dedicated stall functions (#17086)\n* drivers/mtd_flashpage: implement pagewise API, don't use raw\n  addresses (#19258)\n* gcoap: Finish the gcoap_get_resource_list_tl ->\n  gcoap_get_resource_list renaming (#19295)\n+ drivers/servo: reimplement with high level interface (#18392)\n* cpu/esp_common: use generic WIFI_SSID/WIFI_PASS defines (#19286)\n+ sys/vfs: add force option to vfs_umount() (#19320)\n\nUncategorized\n-------------\n+ MAINTAINING.md: add some notes on Bors (#19329)\n+ RDM: The 802.15.4 Radio HAL (#13943)\n* SECURITY: Describe that declassification is an option (#19149)\n* SUBSYSTEMS.md: migrate subsystem list from wiki (#19060)\n\nAnd 57 minor changes.\n\n\nBug fixes (53)\n==============\n\n* boards/common: add common timer config for GD32VF103 boards (#19205)\n* cpu/esp_common: Add missing disconnect reasons (#19381)\n* Make: Add generate-Makefile.ci (#19244)\n* usbus: Add support for full speed with high speed phy (#19438)\n* boards/common/cc26xx cc13xx: clean up and fix flash configs (#19050)\n* boards/esp32s2-lilygo-ttgo-t8: fix STDIO selection in Kconfig (#19287)\n* boards/remote-*: drop custom led_init() (#19348)\n* boards/seeedstudio-gd32: fix HXTAL clock in Kconfig (#19129)\n* boards/stm32f4discovery: use default port to access stdio via cdc acm (#19376)\n* boards: fix USB configuration for stm32f429i-disco (#19437)\n* cord: include gcoap_req_send returning 0 in error (#19383)\n* cpu/esp32: fix and improve UART initialization (#19146)\n* cpu/esp32: fix stdio_usb_serial_jtag for ESP32-C3 (#19415)\n* cpu/esp32: fixes for boot issues and crashes on ESP32 (#19192)\n* cpu/esp32: use ets_printf instead of puts in startup (#19420)\n* cpu/gd32v: fix gpio_read in periph_gpio (#19418)\n* cpu/gd32v: move board dependent RTT configs to board config (#19211)\n* cpu/stm32: Fix periph_spi operation in non-DMA mode (#19431)\n* dist/tools/esptools/export.sh: fixes IDF_TOOLS_PATH default setting (#19125)\n* dist/tools/openocd: fix problems with riotboot caused by _flash_addr\n  function for OpenOCD v0.12 (#19409)\n* driver/usbdev_synopsys_dwc2: use correct number of EPs (#19380)\n* drivers/at86rf2xx: fix default page being ignored [backport 2023.04] (#19473)\n* drivers/usbdev_synopsys_dwc2: disable DMA mode (#19388)\n* drivers/usbdev_synopsys_dwc2: fix and re-enable DMA mode (#19397)\n* drivers/usbus_synopsys_dwc2: fix interrupt handling in DMA mode\n  [backport 2023.04] (#19472)\n* efm32/dac: Shift instead of masking (#19318)\n* gcoap: Do not send responses from multicast addresses (#19272)\n* gh-actions: check-labels: move to upstream fix (#19160)\n* gnrc_netif: set lower bound for IEEE802154_STACKSIZE_DEFAULT (#19339)\n* gnrc_static: don't parse address as prefix (#19313)\n* makefiles/boards/stm32: fix DFU_USB_ID handling (#19374)\n* makefiles/tools/serial.inc.mk: Handle new miniterm versions [backport\n  2023.04] (#19489)\n* matrix keypad: Fix memcpy bug in initialization (#19162)\n* nanocoap_sock: don't include token in empty ACK response (#19366)\n* native/stdio: Explicitly provide getchar (#19330)\n* pkg/esp8266_sdk: fix version string generation (#19123)\n* pkg/nimble/autoadv: fix flag comparisons (#19235)\n* pkg/tinyusb: fix default VID/PID configuration (#19377)\n* release-tests: fix PASSED chat message (#19145)\n* security fixes [backport 2023.04] (#19497)\n* shell/gnrc_icmpv6_echo: acquire ZTIMER_USEC clock for time\n  measurement (#19055)\n* socket_zep: only report size of single datagram (#19121)\n* sys/clif: Fixing out of bounds read under certain conditions (#18746)\n* sys/net/dhcpv6: include IA Prefix Option in SOLICIT (#19225)\n* sys/phydat: Fix unit confusion (#19292)\n* sys/shell: don't include suit command by default (#19294)\n* sys/suit: Ensure previous thread is stopped before reusing its stack (#19199)\n* sys/usbus/cdc/ecm: fix High-Speed mode (#19358)\n* sys/usbus: handle exceeding number of endpoints (#19362)\n* sys/ztimer: ztimer_mock: guard ztimer_ondemand static functions (#19118)\n* tests/driver_dac_dds: fix output of sine and saw functions (#19251)\n* tests/{sys_fido2_ctap/usbus_board_reset}: fix stdio_usb_serial_jtag\n  dependency (#19261)\n* usbus/msc: fixes for synopsys dwc2 [backport 2023.04] (#19456)\n\n\nKnown issues\n============\n\nNetwork related issues (52)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* [gcoap-dtls] Posting a message yields a stack overflow on the\n  `samr21-xpro` with ECC (#18292)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* CC2538 RF overlapping PIN usage (#8779)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (9)\n------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (16)\n---------------------------\n\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (16)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* examples/gnrc_border_router: esp_wifi_init failed with return value\n  257 on ESP32-C3 with nimble_rpble (#19319)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (11)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n\nOther issues (48)\n-----------------\n\n* 2023.04 release bug tracking (#19469)\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* cpu/stm32/periph/rtc overflow error (#16574)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* pkg_libhydrogen tests fail / update libhydrogen (#18508)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* SPI access in LoRa-e5 and im880b? (#19025)\n* stdio_ethos: infinite shell loop (#17972)\n* stdio_tinyusb_cdc_acm hangs with picolibc (#19277)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_libschc: Failing test_reassemble_success_ack_always (#19445)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* usbus/msc: wrong error handling and behavior after usb reset (#19478)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 156 known issues in this release\n\nFixed Issues since the last release (2023.01)\n=============================================\n\n- bootloader: BTN_BOOTLOADER_INVERTED doesn't work as expected. (#19364)\n- Race condition in SUIT around threads terminating (#19195)\n- socket_zep: fragmentation broken if destination is multicast /\n  ACK_REQ not set (#19117)\n\n3 fixed issues since last release (2023.01)\n\nBoards tested during this release\n=================================\n\n- `esp32-wroom-32`    PASS\n- `nrf52840dk`        PASS\n- `nucleo-f429zi`     PASS\n- `samr21-xpro`       PASS\n- `arduino-mega2560`  FAIL\n- `b-l072z-lrwan1`    FAIL\n- `b-l475e-iot01a`    FAIL\n- `dwm1001`           FAIL\n- `frdm-kw41z`        FAIL\n- `iotlab-m3`         FAIL\n- `nrf52dk`           FAIL\n- `nucleo-l452re`     FAIL\n- `nucleo-wl55jc`     FAIL\n- `remote-revb`       FAIL\n- `saml10-xpro`       FAIL\n- `samr34-xpro`       FAIL\n\nSee the release tracking issue (#19469) for more details.\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2023.01 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nWe are proud to announce the release of RIOT 2023.01, marking the tenth\nanniversary of the project. Over the past decade, RIOT has become a thriving\nopen-source community, delivering cutting-edge technology for Internet of\nThings (IoT) devices. This release builds on top of the hard work and\ndedication of our developers, users, and contributors, and we would like to\nextend a heartfelt thank you to everyone who has been a part of our journey.\nHere's to another decade of innovation and growth!\n\nNoteworthy changes the 2023.01 release includes, among many fixes and little\nthings:\n\n- ztimer_ondemand: The next step towards seamless and automatic power management.\n- The Rust examples now default to stable Rust.\n\n187 pull requests, composed of 570 commits, have been merged since the\nlast release, and 13 issues have been solved. 37 people contributed with\ncode in 58 days. 1248 files have been touched with 516544 (+) insertions and\n12047 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n* core/lib: define MAYBE_UNUSED (#18884)\n* core/marco: fix DIV_ROUND (#18858)\n\nSystem Libraries\n----------------\n\n+ congure_abe: initial import of TCP Alternative Backoff with ECN for\n  CongURE (#15968)\n+ congure_quic: initial import of QUIC congestion control (#15952)\n+ pkg/tinyusb: add common USB descriptors implementation (#18835)\n+ sys/bitfield: add bf_find_first_{set, unset}() (#18833)\n+ sys/bitfield: add bf_popcnt() (#18879)\n+ sys/malloc_tracing: add module to trace dyn memory management (#18912)\n+ sys/stdio_uart: add stdio_uart_onlcr (pseudo-) module (#18731)\n+ sys/tiny_strerror: add tiny_strerror_minimal (#18768)\n+ ztimer: add ztimer_ondemand module for implicit power management (#17607)\n* rust: Use stable Rust (#18839)\n* suit: start worker thread on demand, make suit_handle_url() public (#18551)\n* sys/pm_layered: align pm_blocker_t for speed (#18846)\n* sys/print_stack_usage: update MIN_SIZE (#18917)\n* sys/shell: drop ping6 alias (#18931)\n* sys: preprocessor successor module (#18299)\n* tests/pbkdf2: de-flanky-fy test (#18932)\n* usbus/hid: fix buffer overflow in hid_io (#18860)\n\nNetworking\n----------\n\n+ examples/gcoap: add IPv4 support (#17763)\n+ gnrc/ipv6_auto_subnets: add CONFIG_GNRC_IPV6_AUTO_SUBNETS_STATIC\n  option (#17429)\n+ gnrc_sixlowpan_frag_sfr: add support for queue-based ECN (#16175)\n+ gnrc_sixlowpan_frag_sfr: provide CongURE support (#16156)\n+ nanocoap: add support for no-response option (#18154)\n+ sys/net/nanocoap: introduce Accept option helper (#18772)\n+ sys/net: add Size1 and Size2 option numbers (#18799)\n* drivers/at86rf2xx: migrate to ztimer (#18822)\n* gnrc: make pseudo-modules explicit + documentation improvements (#18727)\n* gnrc_sock_udp: accept response from any address if remote is\n  multicast (#18854)\n* gnrc_udp: use small stack-size (#18709)\n* net/nanocoap: remove coap_pkt token ptr (#17983)\n* paho: use GNRC instead of lwip (#18982)\n* sys/include: remove kernel_defines.h where not needed (#18887)\n\nPackages\n--------\n\n* pkg/arduino_sdi_12: bump version, fix patches (#18796)\n* pkg/lvgl: bump to 8.3.3 (#18794)\n* pkg/tinyusb: support for multiple configuration descriptors (#18983)\n* pkg/wamr: Update to WAMR-1.1.1 (#18994)\n\nBoards\n------\n\n+ boards/cc1350: add info concerning shell access (#18808)\n+ boards/dwm1001: add saul_gpio support (#18818)\n+ boards/lora-e5-dev: add arduino feature (#18792)\n+ boards/nucleo-l496zg: add ADC support (#18940)\n+ boards: add support for EFM32GG12 Thunderboard Kit (SLTB009A) (#18755)\n+ cpu/efm32: add periph_adc support for Gecko Series 2 (#18933)\n+ cpu/efm32: add periph_uart_modecfg support for Gecko Series 2 (#18946)\n+ drivers/usbdev_synopsys_dwc2: add support for internal UTMI HS PHY (#18714)\n+ EFM32: add cpu family EFR32ZG23 and board xG23-PK6068A (#18780)\n+ pkg/tinyusb: add nrf52 support (#18781)\n+ pkg/tinyusb: add STM32 USB FS device driver (#18786)\n+ pkg/tinyusb: add ULPI and UTMI+ HS PHY support for STM32 USB OTG HS\n  ports (#18776)\n* boards/blxxxpill-128kib: default to CDC ACM for stdio (#18743)\n* boards/common/nrf52: improve default clock config (#18811)\n* boards/im880b: refactor code (#18451)\n* boards/nucleo-f207zg:  support for ADC (#18847)\n* boards/nucleo-l* and g*: update doc concerning Vbat (#18984)\n* cpu/stm32: Fix stm clock configuration (#18797)\n\nCPU\n---\n\n+ cpu/saml21: add interaction with pm_layered for peripheral drivers (#18821)\n+ cpu/stm32: add unused backup RAM as extra heap (#18921)\n+ debug_irq_disable: add module to debug time spent in irq_disable (#18795)\n* boards/native: Remove macOS as native target (#18735)\n* cpu/efm32: preparing introduction of Gecko Series 2 (#18764)\n* cpu/saml21/pm: allow blocking IDLE mode (#18825)\n* cpu/stm32: improvement of USB device driver selection (#18787)\n* makefiles/cflags.inc.mk: don't include absolute path in __FILE__\n  macro (#18913)\n* makefiles/gnu.inc.mk: set flags based on compiler version (#18935)\n* pkg/gecko_sdk: Bump to version 4.1.2 (#18739)\n* pkg/tinyusb: implement stdio via CDC ACM (#18804)\n* sam0/rtc_rtt: optimizations to get around the painful long syncwaits (#18920)\n* socket_zep: make use of crc16_ccitt_false_update() (#18779)\n* treewide: replace RIOT_FILE_RELATIVE with __FILE__ (#18936)\n\nDevice Drivers\n--------------\n\n+ drivers/at: add a function read a response plus the OK (#18753)\n+ matrix_keypad: Add matrix-style keypad module (#18733)\n* drivers/at86rf2xx: isolate netdev logic (#18988)\n* drivers/sdcard_spi: make use of crc16_ccitt_false_update() (#18778)\n\nDocumentation\n-------------\n\n* boards/cc13xx_cc26xx: remove broken HTML links and headings in doc (#18809)\n* boards/nucleo-l4r5zi: doc improvements (#18747)\n* docs/kconfig: \"not longer\" -> \"no longer\" typo (#18922)\n* pkg/tinyusb: update doc for tusb_app_config.h and common descriptor\n  handling (#18901)\n\nBuild System / Tooling\n----------------------\n\n+ .vscode: import initial RIOT-OS style (#18945)\n+ build-system: add capability to execute scripts with custom executor (#18770)\n+ dist/tools: add \"RESET_PIN\" value for the dwm1001 (#18815)\n+ examples/gnrc_border_router: add option to reuse existing TAP\n  interface (#18836)\n+ makefiles/tools/serial.inc.mk: add support for bootterm (#18749)\n+ tapsetup: add --loss & --delay option (#18885)\n+ tools/cpy2remed: add support for NOD_xxxx removable media (#18824)\n* build system: fix compilation with LLVM (#18845)\n* CI: can_fast_ci_build.py unittests fix (#18996)\n* dist/tools/pyterm: avoid deprecated .setDaemon (#18754)\n* utils/uncrustify: display warning instead of error (#18877)\n\nKconfig\n-------\n\n+ pkg/tinyusb: add Kconfig support for stdio_tinyusb_cdc_acm (#19007)\n\nExamples\n--------\n\n* examples/gcoap: replace _parse_endpoint by sock_udp_name2ep (#17870)\n* examples/timer_periodic_wakeup: switch to ztimer (#19001)\n* examples: Remove macOS references in README (#18850)\n\nTesting\n-------\n\n+ tests/pkg_tinyusb*: add a BOARD to make make build (#18888)\n* CI: drop obsolete murdock note (#18905)\n* CI: update murdock yml (#19022)\n* test/unittest: cleanup most vera++ complains (#18807)\n* tests/bitarithm_timings: shorten timeout from 5s to 200ms (#18894)\n* tests/periph_timer: also test for spurious IRQs (#18963)\n* unittests/uri_parser: Rework tests to be more verbose (#18734)\n\nAPI Changes\n-----------\n\n+ nanocoap: add request context to coap_handle_req() (#18816)\n\nUncategorized\n-------------\n+ release-notes.txt: add 2022.10 release notes (#18947)\n* .drone: Remove unmaintained .drone file (#18832)\n* README.md: update CI badge (#18685)\n* README.md: update features (#18777)\n\nAnd 38 minor changes.\n\n\nBug fixes (44)\n==============\n\n* pkg/tinyusb: add usb_board_reset support (#19006)\n* boards/common/blxxxpill: Fix pin conflicts in periph_conf (#18785)\n* boards/common/nrf52: fix timer config (#18948)\n* boards/dwm1001: use lis2dh12_i2c instead of lis2dh12_spi (#18857)\n* bootloaders/riotboot_dfu: fixes including sys/usb/usbus/dfu (#18964)\n* core/mbox: fix race condition (#18955)\n* cpu/atmega_common/periph_timer: fix spurious IRQs (#18978)\n* cpu/efm32/pm: fix blocking EM1 (#18775)\n* cpu/efm32/timer_series2: fix interaction with pm_layered (#18814)\n* cpu/esp32: set bootloader XTAL frequency configuration to automatic (#18829)\n* cpu/esp{32,8266}/periph_timer: allow changing callback or freq (#18971)\n* cpu/nrf5x/timer: fix high current consumption in powered off state (#18953)\n* cpu/nrf5x/uart: run STOPTX task after finished tx (#18954)\n* cpu/nrf5x_common/periph_timer: fix spurious IRQs (#18970)\n* cpu/qn908x: use bitarithm_test_and_clear() & fix cb (#18989)\n* cpu/stm32/periph_timer: fix spurious IRQs and race conditions (#18969)\n* cpu/stm32: fix periph_dma (#18711)\n* cpu/stm32: fix RAM_LEN for F427, F429, F437, F439 models (#18919)\n* dist/tools/usb-serial: fix exception on missing entries (#19011)\n* drivers/atwinc15x0: don't disable interrupts (#18800)\n* drivers/ethos: Fix off-by-one bug (#18823)\n* drivers/slipdev: fix off-by-one error in _recv() (#18826)\n* drivers/usbdev_synopsys_dwc2: small fixes (#18759)\n* Fix kconfig mismatch breaking nightlies (#18805)\n* gnrc: Fix unused function error when using LLVM (#18852)\n* gnrc_sixlowpan: Various hardening fixes (#18817)\n* makefiles/libc/picolibc.mk: fix compilation with modern binutils (#18893)\n* nanocoap_sock: don't store entire sock in coap_block_request_t (#18827)\n* nanocoap_sock: only re-transmit CON messages (#18819)\n* pkg/nimble: signal LINK_UP on initialisation (#18979)\n* pkg/tinyusb: fix the reset of the USB connection for STM32 boards\n  without internal D+ pullup (#18992)\n* pkg/utensor: fix uninitialized variable (#18862)\n* sam0_common: use size_t len for I2C transfers (fixes #19008) (#19009)\n* sys/clif: Fixing out of bounds read under certain conditions (#18744)\n* sys/net/gnrc/pkt: fix gnrc_pkt_delete() (#18874)\n* sys/net/grnc/netreg: avoid freeing wild pointers (#18951)\n* sys/stdio_uart: fix undefined behavior (#18774)\n* sys/uri_parser: fixing potential out of bounds read when consuming\n  ports (#19016)\n* sys/ztimer: model ztimer_periph_lptimer for Kconfig (#18783)\n* test-on-iotlab: several fixes to make it runnable again (#18722)\n* tests/congure_abe: reset node before starting terminal (#18769)\n* tests/pkg_utensor: increase main threads stack size (#18952)\n* tests/shell: fix failure on samr21-xpro (#18891)\n* tests: set netdev `event_callback` before calling init (#18745)\n* tools/backport_pr: finally fix running outside of repo's root (#18881)\n\n\nKnown issues\n============\n\nNetwork related issues (52)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* [gcoap-dtls] Posting a message yields a stack overflow on the\n  `samr21-xpro` with ECC (#18292)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* CC2538 RF overlapping PIN usage (#8779)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_rpl: takes unusually long time to start routing packets (#19147)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (9)\n------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (16)\n---------------------------\n\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (4)\n-------------------------\n\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n\nOther platforms related issues (15)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (11)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n\nOther issues (44)\n-----------------\n\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* cpu/stm32/periph/rtc overflow error (#16574)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* pkg_libhydrogen tests fail / update libhydrogen (#18508)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* SPI access in LoRa-e5 and im880b? (#19025)\n* stdio_ethos: infinite shell loop (#17972)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 151 known issues in this release\n\nFixed Issues since the last release (2022.10)\n=============================================\n\n- Race condition in SUIT around threads terminating (#19195)\n- socket_zep: fragmentation broken if destination is multicast /\n  ACK_REQ not set (#19117)\n- sam0_sdhc: SDXC cards are not detected / handled properly (#18458)\n- semtech_loramac_init blocking (#17907)\n- tests/thread_float: crashes on avr-rss2 (#16908)\n- esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n- SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n- I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n- pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n- Unclear how Router Solicitations are (or should be) handled (#15926)\n- examples/ccn-lite: floating point exception while testing on native (#15878)\n- usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n- tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n\n13 fixed issues since last release (2022.10)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2022.10 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2022.10 release includes, among many many bug fixes and improvements, the\nfollowing prominent contributions:\n\n### Security Fixes\n\nThe GNRC network stack has received a number of security fixes. All users of\nGNRC are advised to update to the new release. Given that no user facing\nbreaking API changes are included, we are hopeful that the update is painless\nand quickly possible.\n\n### ESP32 family\n\nRIOT has been ported to the ESP32-C3, ESP32-S2, and the ESP32-S3 MCUs. In\naddition driver support for the integrated BLE transceiver of the ESP32 MCUs\nhas been added.\n\n### Major CI Upgrade\n\nWhile the CI is developed in an independent repository, it is still a noteworthy\nchange that our CI software, Murdock, was updated since the last release. In\naddition to changes under the hood the web front end got a major revamp. You\nwill directly notice the improvements in page load time and clarity/structure of\nthe interface. If you haven't already, please check out https://ci.riot-os.org\nto take a look.\n\n### Support for Priority Inheritance in `core_mutex`\n\nIf a shared resource guarded by a mutex is used by a high priority and a low\npriority thread, the high priority thread may end up waiting on the low priority\nthread to return the resource. If medium priority threads now interrupt the\nlow priority thread while working with the shared resource, the high priority\nthread ends up waiting on both medium and low priority threads. This effect is\ncalled priority inversion.\n\nPriority inversion can in most cases be solved by carefully assigning priorities\nand resources. In some cases however, this cannot be avoided: Let's consider\na scenario in which an I2C temperature sensor and an I2C IMU are used. Since\ntemperature changes are slow in frequency, the temperature readings are\nassigned the lowest priority, while the IMU readings are assigned the highest\npriority. The sensible approach here is to have both sensors on distinct I2C\nbuses. However, if e.g. only a single I2C bus is available by the hardware\npriority inversion cannot be prevented by careful resource and priority\nassignment alone. In these cases the module `core_mutex_priority_inheritance`\ncan be used to lend the low priority thread the priority of the high priority\nthread while the high priority thread is waiting for the mutex hold by the\nlow priority thread.\n\nAfter RIOT has already [been launched into space](https://github.com/thingsat)\nit is now ready to for\n[Mars](https://www.cs.unc.edu/~anderson/teach/comp790/papers/mars_pathfinder_long_version.html).\n\n### USB Support for STM32F1 MCUs\n\nWhile RIOT has longstanding USB support for many STM32 MCU families, the F1\nfamily was not supported due to some peculiarities in the memory layout. The\ndriver has now been extended to handle them correctly. With this, the popular\nSTM32F103 bluepill board now supports stdio via USB, which however still\nhas to be manually enabled e.g. by:\n\n```sh\nUSEMODULE=stdio_cdc_acm BOARD=bluepill make -C examples/default\n```\n\n### Support for podman\n\nJust add an `export DOCKER=podman` to your `~/.profile` (or `~/.bashrc`, or ...)\nand an `make BUILD_IN_DOCKER=1` will use [podman](https://podman.io/) instead of\ndocker to run the RIOT build container. Two major advantages of using `podman`\nover `docker` is the support of rootless containers and not depending on a\ncentral background daemon.\n\n### Support for Sharing nRF52 combined I2C/SPI Peripherals\n\nThe nRF52 MCUs have a limited number of combined I2C/SPI peripherals.\nPreviously, each such peripheral could either provide a single I2C or a\nsingle SPI bus. A board configuration that used the same combined peripheral\nto provide both an SPI and an I2C bus previously resulted in bad surprises at\nrun-time.\n\nThe I2C/SPI drivers have now been reworked so that they can be shared in\nround-robin fashion between multiple I2C and SPI buses. This is especially\nuseful for the upcoming support of the Bangle.js 2 watch that uses more I2C\nbuses than combined I2C/SPI peripherals available on the used nRF52840 MCU.\nThanks to the sharing of peripherals, all I2C buses can now be provided by a\nsingle peripheral.\n\n### Support for GCC 12.2.0\n\nMany fixes for compilation and runtime issues that only started to surface\nwith GCC 12.2.0 have been fixed. This allows our users to confidentially choose\nthe current release with little to no fear that toolchain updates in the near\nfuture will break the precious projects. In addition, we hope that the next\nCI update will also cause less friction.\n\n### Release Statistics\n\n312 pull requests, composed of 819 commits, have been merged since the\nlast release, and 29 issues have been solved. 47 people contributed with\ncode in 84 days. 1799 files have been touched with 56827 (+) insertions and\n108634 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n+ core/macros: add math helper macros (#17702)\n* core/mutex: fix typo in docs (#18605)\n* core: implement core_mutex_priority_inheritance (#17040)\n* core: Treat stack overflows as an unrecoverable error (#18448)\n\nSystem Libraries\n----------------\n\n+ doc: add deprecation notice on deprecated pseudo-modules (#18698)\n+ event_periodic_callback: add convenience wrapper for periodic\n  callbacks (#18598)\n+ shell/cord_ep: Add user guidance & prevent accidental crash (#18053)\n+ sys/bhp_*: add initial support for generic Bottom Half Processor (#18435)\n+ sys/bhp_msg: add IPC based implementation of Bottom Half Processor (#18464)\n+ sys/checksum: add CRC-16 implementation without lookup table (#18701)\n+ sys/checksum: add CRC-32 checksum (#18686)\n+ sys/checksum: Adding three new crc16 variations (#18516)\n+ sys/string_utils: add strscpy() (#18621)\n+ sys/ztimer: add LPTIMER auto init (#17654)\n+ vfs: introduce vfs_format_by_path() (#18447)\n* doccheck: make the file pattern more match riot.doxyfile (#18431)\n* event_periodic_callback: remove unnecessary dependency (#18610)\n* fmt: unify and align wording regarding characters, digits, and bytes (#18315)\n* littlefs: make block size configurable at compile time (#18141)\n* makefiles/tools/serial.inc.mk: Improve PORT selection when RIOT's USB\n  CDC ACM is used for stdio (#18525)\n* makefiles: Rust fixes and info extensions (#18630)\n* rust: Update dependencies (#18642)\n* rust: Update dependencies, build and test more on stable (#18678)\n* security: Reference CPE used for RIOT (#18574)\n* suit: rename worker thread functions (#18549)\n* sys/shell/vfs: make output of vfs df human readable (#18550)\n* USBUS/cdc_ecm: register with netdev (#18603)\n* vfs: drop unused abs_path parameter (#18672)\n\nNetworking\n----------\n\n+ dns: provide generic dns_query() function (#18378)\n+ gcoap/fileserver: add file and directory creation and deletion (#18133)\n+ gcoap: add remote sock_udp_ep_t to coap_request_ctx_t (#18519)\n+ gcoap_dns: Add DNS cache support (#18329)\n+ gnrc/lorawan: add basic LoRaWAN 1.1 features (#17884)\n+ gnrc_netif_lorawan: add support for LINK_UP/_DOWN events (#18699)\n+ nanocoap_sock: add nanocoap_sock_put() (#18514)\n+ net/gnrc_netif: add support for priority queues (#18496)\n+ net/sock/dtls: introduce sock_dtls_sendv_aux() (#18363)\n+ pkg/lwip: add support for HAL radios that require IRQ offloading (#18465)\n+ sock_dodtls: Initial import of a DNS over DTLS client (#16861)\n+ sys/net/gnrc_netif: Make use of confirm send (#18139)\n+ sys/net/network_layer/ipv4/addr: add ipv4_addr_print function (#18694)\n+ sys/shell: ncput: add option to read from stdin (#18639)\n+ sys/uri_parser: Adding the port as uint16_t (#18096)\n* codespell: fix remaining issues (#18604)\n* dhcpv6: don't treat zero option as an end-of-payload marker (#18625)\n* gcoap: accept resources in any order (#18651)\n* gcoap: Forego IP address comparison in memo finding of multicasts (#17978)\n* gcoap: move tl_type to coap_request_ctx_t (#18313)\n* gcoap_dns: implement Max-Age-based TTL calculation (#18443)\n* gcoap_forward_proxy: send empty ACK when response takes too long (#18386)\n* gnrc_ipv6_nib: handle iface_up/iface_down in IPv6 thread (#18708)\n* pkg/lwip: fix netdev concurrency issues (#18479)\n* pkg/nimble: Replace double quotes with single quotes for two CFLAGS (#18376)\n* pkg/nimble:derive peer address type from peer address (#18474)\n* sock_dns_cache: move to dns_cache (#18318)\n* sys/net: include misplacement inside linkage-specification (#18587)\n* treewide:  s/gnrc_pktbuf_cmd/shell_cmd_gnrc_pktbuf/ (#18640)\n\nPackages\n--------\n\n+ Add package tiny-vcdiff (#17797)\n* pkg/cryptoauthlib: Pass ATCA_NO_HEAP Flag to library (#18705)\n+ pkg/esp32_sdk: additional patches required for ESP32-C3 (#18339)\n+ pkg/esp32_sdk: additional patches required for ESP32-S3 (#18408)\n* lvgl/contrib: allow for SDL display driver height/width to be\n  adjusted (#18463)\n* pkg/libhydrogen: bump version (#18564)\n* pkg/lvgl: bump version to 8.3.1 (#18366)\n* pkg/nanocbor: bump version (#18543)\n* pkg/tinydtls: bump version (#18368)\n* remove version comment fixing build issue (#18489)\n+ pkg/tinyusb: add tinyUSB as package (#18592)\n\nBoards\n------\n\n+ boards/nucleo-f446ze: add support for ADC (#18647)\n+ boards/nucleo-f767zi: add PWM config (#18393)\n+ boards/samr21-xpro: add a note about EDBG UART limitation (#18567)\n+ boards/stm32f746g-disco: add LD1 as LED0 definition (#18673)\n+ boards: add support for the Waveshare nRF52840 Eval Kit (#13860)\n+ cpu/esp32: add support for ESP32-C3 (#18345)\n+ cpu/esp32: add support for ESP32-S2 (#18506)\n+ cpu/esp32: add support for ESP32-S3 (#18421)\n+ cpu/stm32/periph/usbdev_fs: add support for STM32F3 family (#18680)\n+ drivers/usbdev_synopsys_dwc2: add USB OTG HS peripheral support for\n  external ULPI HS PHYs (#18679)\n+ drivers: add driver for Synopsys DWC2 that is used as USB OTG\n  peripheral on STM32 and ESP32x SoCs (#18644)\n+ pkg/tinyusb: add support for SAM0-based boards (#18689)\n* boards/blxxxpill: configure usbdev_fs (#17812)\n* boards/common/stm32: clean up LED definitions (#18415)\n* boards/nucleo-l4r5zi:  support for ADC (#18676)\n* boards/remote-revb: define default MTD device (#18611)\n* boards/samr34-xpro: configure SPI NOR flash (#18492)\n* cpu/atxmega: fix building with avr-libc 2.1.0 (#18626)\n* cpu/esp32: use CPU_FAM and CPU_ARCH for ESP32x SoC variant dependent\n  compilation (#18316)\n* cpu/mips: Remove all mips (#18562)\n* cpu/{esp8266,esp32}: cleanup of SPI Flash configuration (#18387)\n* doc: fix unbalaced grouping (#18444)\n\nCPU\n---\n\n+ cpu/avr8_common: add strings.h for compatibility (#18623)\n+ cpu/esp32: add Bluetooth LE and NimBLE host support (#18439)\n+ cpu/esp32: add ESP32-C3 support in makefiles (#18341)\n+ cpu/esp32: add ESP32-S2 support to makefiles (#18503)\n+ cpu/esp32: add ESP32-S3 support to makefiles (#18410)\n+ cpu/esp32: add linker scripts for ESP32-C3 (#18340)\n+ cpu/esp32: add linker scripts for ESP32-S2 (#18509)\n+ cpu/esp32: add linker scripts for ESP32-S3 (#18409)\n+ cpu/esp32: add platform code for RISC-V based ESP32x SoCs (#18260)\n+ cpu/esp32: add some sanity checks in peripheral drivers (#18332)\n+ cpu/esp32: enable BLE and NimBLE host support for ESP32-S3 (#18517)\n+ cpu/esp32: extend file names of CPU specific files by CPU family (#18326)\n+ cpu/esp32: implement periph/gpio_ll and periph/gpio_ll_irq (#17442)\n+ cpu/esp32: split cpu_conf.h into ESP32x common and ESP32 specific\n  parts (#18323)\n+ cpu/esp32: split periph_cpu.h into ESP32x common and ESP32 specific\n  parts (#18324)\n+ cpu/esp32: split sdkconfig.h into ESP32x common and ESP32 specific\n  parts (#18322)\n+ cpu/sam0_common: adc: add support for differential mode (#18146)\n+ cpu/stm32/periph_eth: Add stm32_eth_tracing (#18418)\n+ pkg/nimble: add feature ble_adv_ext and cleanup ble_* features (#18449)\n+ sys/tiny_strerror: add tiny `strerror()` implementation (#18571)\n* core/mutex: clean up (#18619)\n* cpu/cortexm: clear FPU state in `cpu_switch_context_exit()` (#18697)\n* cpu/esp*: cleanups mainly to reduce the vera++ warnings (#18333)\n* cpu/esp32: cleanup of esp_log_write (#18335)\n* cpu/esp32: enable BLE and NimBLE host support for ESP32-C3 (#18510)\n* cpu/esp32: extend GPIO wake-up from deep sleep (#18405)\n* cpu/esp32: implement periph_spi_reconfigure (#18710)\n* cpu/esp32: make esp_hw_counter feature dependent on ESP32x SoC family (#18317)\n* cpu/esp32: move common ESP-IDF configurations to common files (#18406)\n* cpu/esp32: move linker scripts to a ESP32x variant specific directory (#18325)\n* cpu/esp: improve thread safety in newlib locking functions (#18544)\n* cpu/esp_common: MODULE_XTENSA has to depend on HAS_ARCH_ESP_XTENSA (#18319)\n* cpu/native: get mtd size from file size (#18669)\n* cpu/nrf5x: allow multiple I2C and SPI buses on a shared periph (#18478)\n* cpu/sam0/timer: supply all clocks before accessing any regs (#18527)\n* cpu/sam0_common: spi: limit clock to source clock (#18223)\n* cpu/stm32/periph/usbdev_fs: support for STM32F1 family (#18729)\n* cpu/stm32/periph_eth: optimize IRQ handler (#18417)\n* cpu: cpu_print_last_instruction() -> cpu_get_caller_pc() (#18226)\n* cpu: make use of `cortexm.ld` (#18636)\n* gnrc_netif: handle NETDEV_EVENT_LINK_UP/DOWN events (#17893)\n* pkg/lwip: Set netdev callback before driver init (#18548)\n* socket_zep: ignore packets sent on the wrong radio channel (#18594)\n* sys/net/gnrc/netif: allow checking if a netdev is legacy or new API (#18426)\n* treewide: Ubuntu jammy build fixes (#18652)\n\nDevice Drivers\n--------------\n\n* drivers/wx281x: fix DEBUG format string for ESP32x SoCs (#18336)\n* usbdev_synopsys_dwc2: Mask RX FIFO irq when using DMA (#18726)\n\nDocumentation\n-------------\n\n+ cpu/esp32: add ESP32-S2 support in documentation (#18505)\n+ cpu/esp32: add ESP32-S3 support to documentation (#18412)\n+ cpu/esp32: split the doc into ESP32x common and ESP32 specific parts (#18321)\n+ cpu/esp32: update documentation for ESP32-C3 (#18350)\n+ doc: Add high-level documentation on flashing boards (#18455)\n* boards/nucleo64: doc update - usage of cpy2remed programmer and short\n  board overview (#18419)\n* boards/remote-revb: fix pinout image in doc.txt (#18615)\n* dist/tools/edbg: bump version (and update SAML11 documentation) (#18384)\n* doc/doxygen: use DuckDuckGo for search (#18358)\n* doc: change protocol for git clone in docs (#18531)\n* gnrc/ipv6_auto_subnets: improve documentation about subnet generation\n  and RIO (#18398)\n* tests/doc: some additions and reorganization of doc page (#18190)\n\nBuild System / Tooling\n----------------------\n\n+ Add podman support (#18671)\n+ codespell: add false positives for v2.2.1 (#18675)\n+ dist/tools/esptools: add ESP32-C3 toolchain (#18337)\n+ dist/tools/esptools: add ESP32-S2 toolchain support to\n  {install,export}.sh (#18502)\n+ dist/tools/esptools: add ESP32-S3 toolchain support to\n  {install,export}.sh (#18407)\n+ dist/tools/esptools: add macOS support to install/export scripts (#18385)\n+ dist/tools: add DOSE Linux tool (#18163)\n+ makefiles/tools/dfu-util: add option to pass DFU_SERIAL id (#18521)\n+ makefiles: Add openocd-rtt (#18526)\n+ tools/openocd: add generic FTDI adapter (#18628)\n+ tools/zep_dispatch: add Wireshark capture support (via\n  mac802154_hwsim) (#18230)\n* .circleci: remove directory (#18674)\n* dist/tools/suit: encrypt an existing key (#18499)\n* doccheck: remove exclude_patterns not needed (#18597)\n* makefiles/arch/avr8.inc.mk: Fix compilation with GCC 12.2.0 (#18533)\n* makefiles/boards/stm32.inc.mk: improve stm32flash support (#18452)\n* makefiles: Select suitable terminal when stdio_rtt is used (#18528)\n* pseudomodules: document gnrc_netif_cmd_lora as deprecated (#18706)\n\nKconfig\n-------\n\n+ cpu/esp32: add ESP32-S2 support in Kconfig (#18504)\n+ cpu/esp32: add ESP32-S3 support in Kconfig (#18411)\n+ cpu/esp32: split Kconfig into ESP32x common and ESP32 specific parts (#18320)\n+ drivers: model IEEE 802.15.4 devices in Kconfig (#17789)\n+ drivers: model kconfig for Ethernet drivers (#17739)\n+ Kconfig/ieee802154: fix typo in HAL selector and add missing radios (#18430)\n* .murdock: disable hash checks of kconfig/make (#18423)\n* cpu/esp_{common,32,8266}: improve Kconfig submenu structure (#18314)\n* drivers/kw2xrd/Kconfig: fix kconfig model (#18497)\n* Fix kconfig models breaking nightlies (#18718)\n\nExamples\n--------\n\n+ examples/gcoap_dtls: Add coap-client example (#18660)\n* examples/filesystem: drop manual mounts (#18495)\n* examples: Move in RIOT/applications (#18602)\n\nTesting\n-------\n\n+ .murdock.yml: Add preview link to documentation to comment (#18677)\n+ release-tests: add capability to run on PR comment (#18713)\n+ Revert \"release-tests: add capability to run on PR comment\" (#18736)\n+ tests/external_boards: add esp32c3-ci board for optional modules (#18404)\n+ tests/external_boards: add esp32s2-ci board for optional modules (#18507)\n+ tests/external_boards: add esp32s3-ci board for optional modules (#18422)\n+ tests/gcoap_fileserver: add integration test for GCoAP fileserver (#18199)\n* CI: improve makefile broken handling (#18595)\n* ci: teach github-labeler about .murdock.yml (#18666)\n* gh-actions: move actions/checkout to main (#18730)\n* murdock: honour RUN_TESTS setting (#18546)\n* murdock: make available boards instance dependent (#18659)\n* riotctrl_shell.cord_ep: remove regif parameter (#18716)\n* tests/ieee802154_*: fix tx_done handler on ACK_TIMEOUT and improve\n  tests (#18382)\n* tests/periph_gpio_ll: drop core dump merged by accident (#18541)\n* tests/periph_timer_short_relative_set: clarify outcome (#18513)\n* tests/pkg_lvgl_touch: randomize button position on click (#18481)\n* tests/pkg_tinyvcdiff: Initialize mtd->write_size (#18529)\n* tests/thread_priority_inversion: blacklist esp32 (#18535)\n* tests/ztimer_periodic: improve output and relax on native (#18491)\n* tests/{periph_gpio_ll,pkg_fff}: change CPU_FAM to MCU for ESP32x SoCs (#18356)\n\nAPI Changes\n-----------\n\n+ drivers/kw2xrf: add support for IEEE 802.15.4 Radio HAL (#18383)\n    - Applications using the proper network stack APIs (such as the SOCK API or\n      POSIX sockets) will not notice any chances, except for e.g. the better\n      packet reception rate\n+ sys/shell: make cmds submodules and add KConfig modeling (#18355)\n    - Shell commands can now be individually selected by using the corresponding\n      `shell_cmd_<name>` module. What previously was called `shell_commands` now\n      is `shell_cmds_default` and will automagically select shell commands based\n      on the set of modules used. Users can keep using `shell_commands` for now,\n      but the build system will inform them that `shell_commands` is deprecated.\n* cpu/sam0_common: adc: drop pin from adc_conf_chan_t (#18658)\n    - Application developers will not have to change their code. However, out of\n      tree SAM0 boards that contain an ADC configuration will need to remove the\n      `.pin` member and rename the existing `.muxpos` member to `.inputctrl`\n* hashes_cmac: rename to hashes_aes128_cmac (#18539)\n    - Existing C call sides will continue to work due to compatibility wrappers.\n      However, applications should migrate before the deprecated wrappers are\n      dropped.\n* nanocoap_sock: constify remote (#18588)\n    - This will  not break any existing C call sides\n* gnrc_netreg: Use locks around netreg (#18740)\n    - calls to `gnrc_netreg_lookup()` and `gnrc_netreg_getnext()` now need to be\n      guarded\n* sys/hash/pbkdf2: Accept passwd as `void *` instead of `uint8_t *` (#18941)\n    - This is not breaking any existing C call sides, but new code no longer\n      needs to cast `char *` to `uint8_t *`\n\nUncategorized\n-------------\n+ .murdock.yml: add footer comment about production stage (#18667)\n+ .murdock.yml: add new Murdock configuration (#18084)\n+ pkg/lwip: add missing initialization for async_cb (#18693)\n* bootloader/riotboot_dfu: move ztimer_init() prior to usbus start (#18538)\n* murdock: fix bors branch name (testing -> trying) (#18665)\n* Release notes 2022.07 (#18512)\n\nAnd 40 minor changes.\n\nDeprecations\n============\n\n- The module `shell_commands` is now deprecated. User should use\n  `shell_cmds_default`. For now, `shell_commands` is an alias of\n  `shell_cmds_default`\n- Shell commands that were individually selectable even before this release were\n  renamed to match the pattern `shell_cmd_<name>`, while they previously where\n  often called `<name>_cmd`. The previous names are aliases of the new names\n  and the build system will list any deprecated modules used.\n- Users of `hashes_cmac` should update to `hashes_aes128_cmac` before the legacy\n  wrappers now in place for backward compatibility will be removed.\n\n\nBug fixes (107)\n==============\n\n* .murdock: Fix kconfig hash check (#18364)\n* asymcute: Compare request message type when matching acknowledgement (#18434)\n* asymcute: fix one byte out-of-bounds access in _len_get (#18433)\n* boards/common/stm32: Fix LED configuration (#18568)\n* boards/nrf52dk: fix doc (#18646)\n* core/mbox: fix race condition (#18960)\n* core/msg.c: irq was not restored properly (#18606)\n* core/mutex: fix priority inheritance on AVR (#18584)\n* core/sched.c: fix undefined behavior on 8-bit/16-bit (#18573)\n* cpu/arm7_common: align stacks correctly (#18641)\n* cpu/arm7_common: fix compilation with 12.2.0 (#18638)\n* cpu/atmega_common/periph_timer: fix spurious IRQs (#18981)\n* cpu/esp32/periph_timer: allow changing callback or freq (#18973)\n* cpu/esp32: fix dependency for periph/rtt and module esp_rtc_timer_32k (#18334)\n* cpu/esp32: fix provided features and Kconfig for esp_eth (#18394)\n* cpu/esp8266/periph_timer: allow changing callback or freq (#18973)\n* cpu/esp: fix netdev register (#18391)\n* cpu/esp_common/periph_uart: fix call to _uart_set_mode (#18720)\n* cpu/nrf5x_common/periph_timer: fix spurious IRQs (#18974)\n* cpu/qn908x: use bitarithm_test_and_clear() & fix cb (#18990)\n* cpu/qn909x/periph_timer: make clangd happy (#18990)\n* cpu/stm32/periph_eth: fix typo in initialization code (#18416)\n* cpu/stm32/periph_timer: fix race conditions (#18972)\n* cpu/stm32/periph_timer: fix spurious IRQs (#18972)\n* cpu/stm32: fix KConfig modeling for STM32F1 / usbdev_synopsys_dwc2 (#18741)\n* dist/tools/flatc: Fix compilation on musl (#18864)\n* dns_cache: handle TTL=0 properly (#18441)\n* dns_cache: synchronize access with mutex (#18330)\n* drivers/atwinc15x0: reset device if m2m_wifi_handle_events() fails (#18476)\n* drivers/ethos: Fix off-by-one in ETHOS driver (#18831)\n* drivers/lis2dh12: release instead of acquire (#18353)\n* drivers/mtd: fix module name for mtd_sdcard in Kconfig (#18395)\n* drivers/nrf802154: do not filter broadcast PAN ID (#18283)\n* drivers/sdcard_spi: make 8-bit safe (#18572)\n* drivers/shtcx: I2C-line is not released properly (#18347)\n* drivers/slipdev: fix off-by-one error in _recv() (#18830)\n* drivers/{dose, slipdev, sam0_eth}: generate RX event for queued packets (#18201)\n* examples/dtls-echo: set address family for sessions (#18369)\n* examples/wasm/wasm_sample: fix linking with new wasm-ld (#18867)\n* gcoap: fixes around empty ACKs (#18429)\n* gcoap_dns: various fixes (#18367)\n* gcoap_fileserver: bugfix recursive delete (#18536)\n* gcoap_forward_proxy: copy Max-Age from forwarded Valid if it exists (#18471)\n* gnrc_ipv6_nib: make configurable via Kconfig again (#18360)\n* gnrc_netif: don't allocate message queue on the stack (#17905)\n* gnrc_netif_conf: fix auto-6ctx switch (#18370)\n* gnrc_netif_ieee802154: Ignore packets without source address (#18820)\n* gnrc_sixlowpan_frag_rb: fix integer underflow in _6lo_frag_size() (#18820)\n* gnrc_sixlowpan_frag_vrb: Assert no usage of a vrb with src_len == 0 (#18820)\n* gnrc_sixlowpan_iphc.c: dereference ipv6_hdr in DEBUG() after assignment (#18820)\n* gnrc_sixlowpan_iphc: fix buffer overflow in gnrc_sixlowpan_iphc_recv() (#18820)\n* gnrc_sixlowpan_iphc: fix integer underflow in gnrc_sixlowpan_iphc_recv() (#18820)\n* gnrc_sixlowpan_iphc: fix null pointer dereference in _iphc_encode() (#18820)\n* gnrc_sixlowpan_iphc: fix packet type confusion in _iphc_encode() (#18820)\n* ieee802154: Adjust parsing of IEEE 802.15.4 frame header (#18820)\n* kw2xrf/Kconfig: remove netdev_ieee802154 from dependency resolution (#18469)\n* makefiles/arch/avr8.inc.mk: fix detection of GCC 12 (#18732)\n* makefiles/arch/cortexm.inc.mk: fix ASMFLAGS (#18899)\n* makefiles/arch/riscv.inc.mk: Fix with BUILD_IN_DOCKER (#18654)\n* makefiles/cflags.inc.mk: add -z noexecstack to link flags (#18928)\n* makefiles/libc/picolibc.mk: fix compilation with modern binutils (#18909)\n* makefiles/libc: fix wchar_t size warnings on LLVM (#18928)\n* makefiles/suit: avoid unwanted key creation trigger (#18344)\n* makefiles: quiet messages on CI (#18470)\n* nib/_nib-6ln: correct ABR timeout in ABRO (#18661)\n* pkg/arduino_sdi_12: bump version, fix patches (#18812)\n* pkg/ccn-lite: Fix use after free bug (#18897)\n* pkg/ccn-lite: patch to fix use-after-free (#18483)\n* pkg/lwip: ease debugging & fix sending from socket bound to anyaddr (#18288)\n* pkg/nimble: fix the event queue size for nimble_adv_ext (#18467)\n* pkg/nimble: signal LINK_UP on initialisation (#18980)\n* pkg/tflite-micro: fix compilation with GCC >= 12.x (#18895)\n* pkg/utensor: fix uninitialized variable (#18865)\n* pkg/wolfssl: fix compilation with GCC >= 12.x (#18898)\n* pkg/{littlefs,littlefs2}: fix unaligned memory accesses (#18473)\n* release-tests: use Ubuntu Jammy runner (#18712)\n* sys/clif: Fixing out of bounds read under certain conditions (#18810)\n* sys/log_*: modularize log into log_color and log_printfnoformat (#18425)\n* sys/net/gnrc/pkt: fix gnrc_pkt_delete() (#18880)\n* sys/net/sock_util: fix _find_hoststart() (#18723)\n* sys/print_stack_usage: update MIN_SIZE (#18924)\n* sys/shell/cmds: fix shell_cmd_netif LoRaWAN integration (#18649)\n* sys/string_utils : new (header-only) module for string utilities (#18609)\n* test-on-iotlab: add missing scapy dependency (#18757)\n* test-on-iotlab: several fixes to make it runnable again (#18757)\n* test/unittest: initialize ztimer64 is required, use xtimer test-fib (#18365)\n* tests/cc2538_rf: set event_callback before init (#18751)\n* tests/gcoap_fileserver: add test for PUT (#18725)\n* tests/gnrc_rpl: mark the test as only for native in build system (#18757)\n* tests/heap_cmd: fix test script (#18634)\n* tests/mpu_stack_guard: Fix compilation on modern GCC (>= 12.x) (#18872)\n* tests/nrf802154: set event_callback before init (#18751)\n* tests/pbkdf2: de-flaky-fy test (#18941)\n* tests/periph_gpio_ll: fix the output for GPIO_OUTPUT_OPEN_SOURCE tests (#18331)\n* tests/pkg_emlearn: fix compilation (#18902)\n* tests/pkg_tinyvcdiff: fix stack overflow (#18896)\n* tests/pkg_utensor: increase main threads stack size (#18959)\n* tests/shell: fix failure on samr21-xpro (#18908)\n* tests/socket_zep: set event_callback before init (#18751)\n* tests/sx12xx: set event_callback before init (#18751)\n* tests/unittests: Correct typo in documentation (#18438)\n* tests/unittests: fix get_frame_hdr_len tests for hardened parsing (#18820)\n* tests: call gnrc_ipv6_nib_iface_up() after gnrc_ipv6_nib_init_iface() (#18635)\n* tests: set netdev `event_callback` before calling init (#18751)\n* treewide: fix conditionals on deprecated module (#18616)\n* unittest/main: do not initialize xtimer if ztimer_xtimer_compat (#18352)\n* usbus/hid: fix buffer overflow in hid_io (#18889)\n\nKnown issues\n============\n\nNetwork related issues (53)\n---------------------------\n\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* [gcoap-dtls] Posting a message yields a stack overflow on the\n  `samr21-xpro` with ECC (#18292)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* CC2538 RF overlapping PIN usage (#8779)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* nanocoap: problem with [re]transmission behaviour: (some blocks are\n  sent twice immediately) (#18217)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* Unclear how Router Solicitations are (or should be) handled (#15926)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (9)\n------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n\nDrivers related issues (16)\n---------------------------\n\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (6)\n-------------------------\n\n* examples/ccn-lite: floating point exception while testing on native (#15878)\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n* SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n\nOther platforms related issues (17)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (11)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n\nOther issues (49)\n-----------------\n\n* semtech_loramac_init blocking (#17907)\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* cpu/stm32/periph/rtc overflow error (#16574)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* pkg_libhydrogen tests fail / update libhydrogen (#18508)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* sam0_sdhc: SDXC cards are not detected / handled properly (#18458)\n* stdio_ethos: infinite shell loop (#17972)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests/thread_float: crashes on avr-rss2 (#16908)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 161 known issues in this release\n\nFixed Issues since the last release (2022.07)\n=============================================\n\n- tests/thread_priority_inversion: Fails on AVR (#18545)\n- `tests/thread_priority_inversion` failing with `esp32-wroom-32` (#18534)\n- (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n  timeout (#14439)\n- MIPS: toolchain objcopy doesn't work and no .bin can be generated (#14410)\n- `make term` output is inconsistent between boards, `ethos` and\n  `native` (#12108)\n- ESP32 + DHT + SAUL reading two endpoints causes freeze. (#12057)\n- arm7: printf() with float/double not working (#11885)\n- net: netdev_driver_t::send() doc unclear (#10969)\n- openthread: does not build on current Arch (#10809)\n- Possible memset optimized out in crypto code (#10751)\n- xtimer_set_msg: crash when using same message for 2 timers (#10510)\n- Incorrect default $PORT building for esp32-wroom-32 on macOS (#10258)\n- RIOT cannot compile with the latest version of macOS (10.14) and\n  Xcode 10 (#10121)\n- cpu/cortexm_common: irq_enable returns the current state of\n  interrupts (not previous) (#10076)\n- xtimer_usleep wrong delay time (#10073)\n- assert: c99 static_assert macro doesn't function for multiple\n  static_asserts in the same scope (#9371)\n- xtimer mis-scaling with long sleep times (#9049)\n- 6lo gnrc fragmentation expects driver to block on TX (#7474)\n- scheduler: priority inversion problem (#7365)\n- xtimer_usleep stuck for small values (#7347)\n- General 802.15.4/CC2538 RF driver dislikes fast ACKs (#7304)\n- sys/fmt: Missing tests for fmt_float, fmt_lpad (#7220)\n- xtimer: add's items to the wrong list if the timer overflows between\n  _xtimer_now()  and irq_disable() (#7114)\n- Windows AVR Mega development makefile Error (#6120)\n- tests: xtimer_drift gets stuck on native (#6052)\n- C++11 extensions in header files (#5561)\n- at86rf2xx: lost interrupts (#5486)\n- make: Setting constants on compile time doesn't really set them\n  everywhere (#3256)\n- Tracker: Reduce scope on unintended COMMON variables (#2346)\n\n29 fixed issues since last release (2022.07)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2022.07 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2022.07 release includes many changes, some highlights of which are:\n\n### GPIO Low-level drivers\n\nA new API, `gpio_ll`, has been introduced for highly efficient access to GPIO\npins grouped in ports.\n\nThe API is limited to internal use for the time being, but still paves the way\ntowards using port multipliers like local GPIO pins, and for improved\nbit-banging implementations (e.g. around WS281x-style LEDs).\n\n### Improved serial port selection\n\nWhen using multiple boards simultaneously, a new serial port selection\nalgorithm can be activated by setting `MOST_RECENT_PORT=1`. Of all serial ports\nwhose metadata matches the board's known properties, it selects the most\nrecently connected one.\n\n### ESP support\n\nThe ESP IDF (IoT Development Framework; the vendor's provided tools) has been\nupgraded to version 4.4, and many peripheral drivers are now implemented using those.\n\n\n343 pull requests, composed of 767 commits, have been merged since the\nlast release, and 5 issues have been solved. 38 people contributed with\ncode in 107 days. 1684 files have been touched with 43451 (+) insertions and\n82174 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n\n* provide dummy implementation of thread and mutex for riotboot (#17959)\n* kernel_defines: drop CONST definition (#18212)\n\nSystem Libraries\n----------------\n\n+ sys/event: Add documentation and enforce waiter on wait (#17952)\n  sha256sum shell commands (#18040)\n+ sys/shell: new module shell_lock (#13082)\n* Fido2: Enhance flash persistence (#17096)\n* pkg/fatfs, shell: enable RTC support if rtt_rtc is used (#17912)\n* pm: don't (un)block IDLE mode (#17974)\n* sys/posix/include/arpa: use `__restrict` instead of `restrict` (#18034)\n* sys/quad_math: remove unused module for quad arithmetic (#18032)\n* sys/shell: drop `_builtin_cmds` define (#18075)\n* sys/shell_commands: convert to SHELL_COMMAND() (#18152)\n* sys/ztimer: no log for stdio_rtt/semihosting (#18176)\n\n### SUIT\n\n+ suit/transport/vfs: add VFS as source for firmware updates (#18045)\n+ sys/sc_suit: add seq_no command (#17941)\n* examples/suit_update/test: use 'suit seq_no' to get version (#17973)\n* sys/suit/storage/vfs: initial import (#17943)\n* sys/suit/storage: change log to LOG_DEBUG (#18020)\n* sys/suit: avoid installing payload twice (#17984)\n* sys/suit: save seq_number when parsing manifest (#17939)\n\n### VFS\n\n+ sys/shell/vfs: add umount, rmount and mkdir commands (#18112)\n+ sys/vfs: add vfs_unmount_by_path() (#18109)\n+ sys/vfs_util: add VFS helper functions (#18038)\n+ sys/vfs_util: add vfs_file_<hash>() functions and md5sum, sha1sum and\n\n### Rust\n\n+ Add some Rust library building infrastructure (#16833)\n* makefiles/rust: Err early on setup issues, provide suggestions (#18220)\n* rust: Build from git branches (#18151)\n* rust: Explicitly select nightly (#18243)\n* rust: Update versions (#18181)\n\nNetworking\n----------\n\n+ congure_reno: initial import of TCP Reno congestion control (#15953)\n+ drivers/sx1280: add driver for SX1280 transceiver v2 (#18033)\n+ gnrc/ipv6_auto_subnets: init RPL root when adding a prefix (#17350)\n+ ieee802154: add default max frame retransmissions config (#18264)\n+ pkg/lwip: Add basic version of netif_get/set_opt (#18069)\n+ pkg/lwip: Add netif_t struct, register all netifs (#16974)\n+ pkg/nimble/autoadv: add support for ext_adv (#17774)\n+ sys/iolist: add helper functions (#18044)\n+ sys/net/gnrc: add gnrc_tx_sync for gnrc_sixlowpan_frag_sfr (#16090)\n+ sys/net/gnrc_pktbuf_static: add use-after-free detection (#18227)\n+ sys/net/netif: add convenience functions for getting/printing IPv6\n  addresses (#18161)\n* gnrc/ipv6_auto_subnets: allow to join multiple subnets (#17547)\n* gnrc_ipv6_nib: fix inconsistent ABR valid lifetime representation (#18126)\n* gnrc_netif: make auto-config of compression context optional (#17678)\n* gnrc_netif: use event loops by default to process ISR (#16748)\n* gnrc_sock: implicitly set netif if there is only a single one (#18065)\n* gnrc_sock: warn about non-zero receive timeouts with sock_async (#17691)\n* net/ble/skald: make advertising interval configurable per context (#17834)\n* net/gnrc: Fixing whitespace in the documentation (#18036)\n* net/sock/udp: designated initializer, C++ compatibility (#18035)\n* sock_dns: implement DNS cache (#17680)\n* sock_dns_cache: move to dns_cache (#18318)\n* sock_dns_cache: move to dns_cache [backport 2022.07] (#18327)\n* sys/include/net/af: fix doc comment (#17946)\n* sys/net/gnrc_pktbuf_static: fix documentation of use-after-free\n  detection (#18244)\n* tests: rework ieee802154 drivers (#17838)\n\n### GCoAP\n\n+ Add file server (#17956)\n+ add helper function to get request header from a request memo (#18095)\n+ add nanocoap_cache support for clients (#17888)\n+ DNS: initial import of a DNS over CoAP (DoC) client (#16705)\n+ Forward prxy: provide cache validation mechanism (#17801)\n* ensure response address is the same as request address (#18026)\n* small dependencies fixes (#17944)\n\n### Nanocoap\n\n+ add coap_get_token() (#17976)\n+ Add handler for resource-based subtrees (#13698)\n+ cache for CoAP responses (#13889)\n+ add nanocoap_sock_block_request() (#17958)\n+ add nanocoap_sock_url_connect() (#17960)\n+ add nanocoap_vfs_get() (#17937)\n+ add nanocoap_vfs_put() (#17962)\n* follow-up fixes (uncontroversial parts) (#17977)\n* clean up state management (#18047)\n* deprecate coap_pkt token ptr (#18013)\n* refactor to remove work-buffer requirement (#17509)\n\nPackages\n--------\n\n+ drivers/atwinc15x0: add timeout to init (#18214)\n+ pkg/libcose: add RIOT as crypto backend (#17701)\n+ pkg/pkg: add GIT_QUIET (#17987)\n+ tests/pkg_cmsis-dsp: add kconfig configuration + cleanup package\n  modules (#18001)\n* makesystem: speedup pkg cloning if no git-cache is available (#16316)\n* pkg/littlefs2: bump version to 2.5.0 (#18049)\n* pkg/lv_drivers: cleanup Makefile (#18302)\n* pkg/lvgl: bump to v8.3.0 (#18301)\n* pkg/minmea: bump version (#18166)\n* pkg/nanopb: bump version to 0.4.6 (#18149)\n* pkg/pkg.mk: silence info if QUIETER (#18031)\n* pkg/uwb-core: adjust holdoff time when rxdiag_enabled (#17999)\n* pkg/uwb-core: reduce default stacksize (#18022)\n* pkg/uwb-core: remove uwbcfg (#17998)\n* pkg/uwb-dw1000: fix default group delay, use OTP values when possible (#18000)\n* pkg/wamr: update to tagged release WAMR-05-18-2022 (#18119)\n\nBoards\n------\n\n+ boards/nucleo-f401re: add riotboot (#17948)\n+ boards/stm32f7508-dk: add support (#17954)\n+ cpu/samd5x: add SD Host Controller implementation (#17863)\n* boards/adafruit-pybadge: enable ST7735 display (#17903)\n* boards/common/arduino-atmega: fix issue with wrong port for LED0 (#18245)\n* boards/esp32: cleanup board_init_common (#18238)\n* boards/esp32: cleanup CI compilation for esp_wifi_enterprise (#18218)\n* boards/nucleo-X: enable cpy2remed programmer (#18057)\n* boards/stm32f469i-disco: enable cpy2remed programmer (#18039)\n* boards/{thingy52,ruuvitag}: allow OpenOCD as programmer (#18237)\n* build system: improve serial port selection (#18167)\n* cpu/esp32: Upgrade to ESP-IDF v4.4 (#17601)\n* cpu/esp32: use ESP-IDF i2c HAL for ESP32 periph/i2c (#18279)\n* cpu/esp32: use ESP-IDF ledc HAL for periph/pwm (#18276)\n* drivers/lcd: rework rotation management and enable it for st7735 (#17930)\n* drivers/lcd: slightly rework params to expose offset values to\n  ili9341 driver (#17925)\n* periph_can,candev: socketcan pkg for native, candev test cleanup (#17533)\n* pkg/cryptoauthlib: Update package to latest version (#18137)\n* unittests: enable ASAN on native (#18099)\n\nCPU\n---\n\n* netdev_tap: make 'wired' property configurable (#17709)\n* pkg/nimble: version bump to NimBLE 1.5.0 RC1 (#18029)\n\n### AVR\n\n+ atmega_common: implement periph/gpio_ll{,_irq} (#17982)\n\n### Cortex-M\n\n* cortexm_common: allow to overwrite nmi_handler (#18232)\n* cortexm_common: enable FPU on cortexm33 (#18064)\n* cortexm_common: remove breakpoint from hard_fault_handler (#17781)\n\n+ efm32: Minimal support for gpio_ll (#18023)\n+ nrf5x_common: implement periph/gpio_ll{,_irq} (#17980)\n+ stm32: Implement periph/gpio_ll{,_irq} except for STM32F1 (#17981)\n* sam0_common: adc: Automatically configure external reference pin (#18042)\n* stm32: support for B subfamily of g0 to determine the ram length (#18296)\n\n### ESP32\n\n+ add ESP-IDF API (#18253)\n* use ESP-IDF ...\n  * adc/dac HAL for periph/adc and periph/dac (#18271)\n  * function esp_efuse_mac for CPU ID (#18273)\n  * gpio HAL for periph/gpio (#18270)\n  * interrupt HAL for periph/uart (#18274)\n  * interrupt handling API (#18261)\n  * random API for ESP32 (#18277)\n  * sleep API for periph/pm (#18280)\n  * spi HAL for periph/spi (#18281)\n  * spli_flash_* funcs in periph/flash (#18250)\n  * startup function (#18268)\n  * timer HAL for system timer and watchdog (#18267)\n  * timer/interrupt HAL for periph/timer (#18282)\n  * twai HAL for periph/can (#18278)\n* ESP32x SoC variant independent syscalls (#18266)\n* always include libc_gettimeofday (#18027)\n* ESP32 SoCx variant independent bootloader makefile (#18246)\n* ESP32x SoC variant independent makefiles (#18249)\n* invert MCU_* and CPU* conditionals (#18248)\n* move platform code for Xtensa-based ESP32x SoCs to module esp_xtensa (#18259)\n* Remove dependency on module libc_gettimeofday (#18202)\n* split module esp_wpa supplicant into several modules (#18239)\n* FreeRTOS adaptation layer changes/extension required for ESP-IDF HAL/LL\n  (#18224)\n* use LittleFS2 as default FS (#18159)\n* pkg/esp32_sdk: Update version to 4.4.1 (#18165)\n\nDevice Drivers\n--------------\n\n+ periph/gpio_ll: New Peripheral GPIO API (#16787)\n+ driver/lcd: add common lcd base driver (#16176)\n+ sys/mtd: Introduce write granularity (#17683)\n* drivers/mtd_mapper: inherit physical properties (#18113)\n* drivers/netdev_ieee802154: drop duplicate struct member (#17979)\n* drivers/periph_common/cpuid: disable false positive warnings (#17909)\n\n* drivers/hd44780: PCF857x I2C interface added (#12665)\n* drivers/ir_nec: NEC remote receiver implementation (#17935)\n* drivers/mcp2515: enable filtering (#18062)\n* drivers/mcp2515: apply filters to target mailbox (#18131)\n* drivers/mcp2515: fixes and cleanups (#17945)\n* drivers/scard_spi: _dyn_spi_rxtx_byte return void (#17968)\n* drivers/ws281x: update ESP32 driver to use ESP-IDF CPU HAL (#18252)\n* pkg/driver_atwinc15x0: bump version to 1.6.1 (#18215)\n\nDocumentation\n-------------\n\n* boards/nucleo144: doc update - usage of cpy2remed programmer and\n  short overview of board (#18291)\n* boards/nucleo32: doc update - usage of cpy2remed programmer and short\n  overview of board (#18225)\n* cpu/esp32: small doc fixes (#18240)\n* doc/rust: Update texts (#18208)\n* doc: fix broken link/footnote in using-rust.md/maintenance (#17961)\n* Documentation: Renaming OS X to macOS (#18256)\n* native/periph_can: usability improvements and documentation updates (#17949)\n* pkg/hacl: documentation link update (#18002)\n\nBuild System / Tooling\n----------------------\n\n+ dist/tools/suit: add support for password protected private keys (#18130)\n+ examples/gnrc_border_router: allow to use gnrc_ipv6_auto_subnets for\n  prefix configuration (#16993)\n* .murdock: print hash input when hashes mismatch (#18236)\n* buildsystem: Improve RISC-V compilation handling with newer toolchain (#18098)\n* buildsystem: split default modules include early and late (#17662)\n* dist/tools/compile_and_test_for_board: fix lint (#18160)\n* dist/tools/cosy: allow to specify port (#18194)\n* make: create cargo folders for Docker images (#18086)\n* makefiles/tools/uf2conv.inc.mk: partial riotboot support (#16323)\n* makefiles: allow to override suit manifest payloads (#16771)\n* makefiles: Reject `2>&1 >/dev/null`, and weed out remaining offenders (#16806)\n* tools/edbg: bump version (#18076)\n* tools/zep_dispatch: allow to pin nodes to MAC address (#17338)\n* tools/zep_dispatch: run dispatch with custom topology (#18170)\n\nKconfig\n-------\n\n+ drivers/cst816s: add touch_dev interface + add Kconfig + migrate to\n  ztimer (#17459)\n+ pkg/tflite-micro: add kconfig support (#17985)\n+ sys/cpp11-compat: add kconfig support and add Kconfig for cpp11 test\n  applications (#17992)\n* pkg/cmsis-nn: model in Kconfig (#17997)\n* pkg/corejson: fix missing kconfig import + model test application\n  configuration (#18008)\n* pkg/cryptoauthlib: model in kconfig (#18011)\n* pkg/jerryscript: model in Kconfig (#18012)\n* pkg/lua: model in kconfig (#18017)\n* pkg/nanors: model in kconfig (#18024)\n* sys/random/kconfig: remove HWRNG default in backend choice (#18025)\n* tests/pkg_utensor: model in Kconfig + fix utensor package\n  dependencies (#17995)\n* tests/{cpp_ext, cpp_exclude}: model in kconfig (#17994)\n\nExamples\n--------\n\n+ examples/telnet_server: add support for LWIP (#17899)\n* example/twr_aloha: fixes (#17988)\n* examples/lorawan/main: use auto_init_loramac (#17695)\n* examples/suit_udpate: update check suit command (#17963)\n\nTesting\n-------\n\n+ cpu/esp: add compilation tests for optional ESP modules (#18158)\n+ unittest/sock_util: add test for missing addr variants (#18061)\n* CI: disable microbit testing (#17933)\n* gh_action/test-on-iotlab: update available boards (#18303)\n* murdock: don't do both \"clean\" and \"test-input-hash\" targets (#18254)\n* test/pbkdf2: enlarge stdio rx buffer (#17928)\n* tests/pkg_tflite-micro: update list of low memory boards (#18101)\n* tests/{cpp_ext, cpp_exclude}: cleanup HAS_* (#18082)\n* tests: move riot_logo.h to tests base directory (#17917)\n* unittest/sock_util: move test_strings to their tests (#18067)\n\nAPI Changes\n-----------\n\n* drivers/disp_dev: use struct to store display area coordinates (#17921)\n* makefiles/suit: place keys in $XDG_DATA_HOME (#18157)\n* nanocoap: define and use coap_request_ctx_t for request handlers (#17957)\n* sys/shell/gnrc_netif: List netifs in registration order (#17078)\n\nAnd countless minor changes.\n\nDeprecations\n============\n\nDeprecations (1)\n----------------\n\n* ztimer: deprecate ztimer_now64 and ztimer_now_t (#18054, #18105)\n\nRemovals (2)\n------------\n\n- net/netopt: drop NETOPT_RX_END_IRQ (#18089)\n- pkg/lvgl7: remove deprecated package (#18304)\n\nBug fixes (64)\n==============\n\n* cpu/stm32/include/periph/f7: add missing ADC_DEVS (#17923)\n* dist/tools/kconfiglib: add configuration evaluation function (#18192)\n* drivers/periph/timer: add TIM_FLAG_SET_STOPPED flag (#17723)\n* drivers/st7735/kconfig: add hardware feature symbol (#18135)\n* gnrc/nib: don't add routers from WPAN as default router on the 6LBR (#18127)\n* [Backport] asymcute: Compare request message type when matching\n  acknowledgement (#18446)\n* [Backport] asymcute: fix one byte out-of-bounds access in _len_get (#18453)\n* asymcute: Fix deadlocks in REGACK, SUBACK and UNSUBACK handler (#18289)\n* bitarithm: Move `extern const` out of static inline functions (#18140)\n* boards/common/nrf52: fix compilation of thingy52 and ruuvitag (#18180)\n* boards/im880b: im880b board clock definition (#18295)\n* boards/stm32f469i-disco: LEDX_ON LEDX_OFF mismatch (#18041)\n* build system: Fix compilation for RISC-V with newer GCC (#17951)\n* core/assert: print last instruction in assert() (#18195)\n* core/msg: yield after thread_flags_wake() in queue_msg() (#16899)\n* cpu/atmega_common: Fix atmega_port_addr() (#18265)\n* cpu/esp32: fix malloc thread safety (#18209)\n* cpu/esp32: fix pm_reboot function (#18207)\n* cpu/esp32: fixes for gcc 8.4.0 (#18104)\n* cpu/sam0_common: mtd_sdhc: ensure source address alignment (#18222)\n* cpu/samd21: handle NVM block errata (#18188)\n* cpu/stm32/periph_eth: fix typo in initialization code [backport\n  2022.07] (#18420)\n* cpu/{atmega_common,atxmega}: increase idle thread stack size (#18263)\n* dirvers/mtd: fix documentation of mtd_write_page_raw() and\n  mtd_read_page() (#18231)\n* dist/tools/compile_commands: don't adds -nostdinc (#18080)\n* dist/tools/compile_commands: fix clangd linting (#18063)\n* dns_cache: synchronize access with mutex [backport 2022.07] (#18342)\n* docker: don't export KCONFIG_ADD_CONFIG variable (#17993)\n* drivers/at86rf2xx: fix NETOPT_RANDOM (#18305)\n* drivers/at86rf2xx: Switch SRT mode to get random values. (#18290)\n* drivers/atwinc15x0: disconnect when sleeping (#17889)\n* drivers/mcp2515: fix set bittiming (#18019)\n* drivers/rtt_rtc: normalize tm struct in rtc_set_alarm (#18197)\n* examples/dtls-echo: set address family for sessions [backport\n  2022.07] (#18371)\n* examples/lorawan: disable loramac state persistence on EEPROM (#17969)\n* gcoap: fixes around empty ACKs [backport 2022.07] (#18436)\n* gcoap_dns: various fixes [backport 2022.07] (#18373)\n* gnrc/ipv6_auto_subnets: always send RIO to upstream network (#18187)\n* gnrc/nib: only enable RTR_ADV on RA if MULTIHOP_P6C is enabled (#17600)\n* gnrc_dhcpv6_client: Fix out-of-bounds access during option parsing (#18307)\n* gnrc_ipv6_nib: make configurable via Kconfig again [backport 2022.07] (#18362)\n* gnrc_netif_conf: fix auto-6ctx switch [backport 2022.07] (#18375)\n* gnrc_netif_pktq: protect against concurrent access (#18153)\n* gnrc_netreg: drain mbox on unregister (#18143)\n* ipv6/nib: bugfix handle SLLAO on 6LR if ARO is not present (#17814)\n* makefiles/boot/riotboot: set DEBUG_ELFFILE to slot0.elf (#18138)\n* nanocoap: follow-up fixes (#17950)\n* nanocoap_sock: fix wrong assertion (#18221)\n* net/eui_provider: provide netif index to EUI provider function (#18251)\n* pkg/ccn-lite: patch to fix use-after-free [backport 2022.07] (#18488)\n* pkg/emlearn: fix kconfig model (#18306)\n* pkg/emlearn: Remove unused emlearn module (#18287)\n* pkg/mynewt-core: fix timer configuration for nrf51 (#18136)\n* release-tests: install libasan as native dependency (#18124)\n* sys/fmt: disarm footgun (#18162)\n* sys/fmt: fix output on native (#18186)\n* sys/net/gnrc/rpl: sync access to netstats (#18275)\n* sys/net/netopt: change NETOPT_STATS semantics (#18269)\n* sys/rtc_utils: small doc fix of rtc_mktime (#18196)\n* sys/uri_parser: check port length (#18092)\n* tests/thread_float: fix test script (#18255)\n* unittest: fix ztimer(64)_initilization #18352 #18365 [backport\n  2022.07] (#18377)\n* unittests: fix assertion for nanocoap_cache_key_compare() (#18125)\n* vfs: fix dir detection in vfs_sysop_stat_from_fstat() (#18050)\n\n\nKnown issues\n============\n\nNetwork related issues (58)\n---------------------------\n\n* 6lo gnrc fragmentation expects driver to block on TX (#7474)\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* [gcoap-dtls] Posting a message yields a stack overflow on the\n  `samr21-xpro` with ECC (#18292)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* at86rf2xx: lost interrupts (#5486)\n* CC2538 RF overlapping PIN usage (#8779)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* General 802.15.4/CC2538 RF driver dislikes fast ACKs (#7304)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* nanocoap: problem with [re]transmission behaviour: (some blocks are\n  sent twice immediately) (#18217)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* net: netdev_driver_t::send() doc unclear (#10969)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* openthread: does not build on current Arch (#10809)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* test/lwip: enabling both, IPv4 and IPv6, results in unexpected\n  behavior (#18097)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* Unclear how Router Solicitations are (or should be) handled (#15926)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (16)\n-------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n* tests/periph_timer_short_relative_set results are misleading (#18511)\n* tests: xtimer_drift gets stuck on native (#6052)\n* xtimer mis-scaling with long sleep times (#9049)\n* xtimer: add's items to the wrong list if the timer overflows between\n  _xtimer_now()  and irq_disable() (#7114)\n* xtimer_set_msg: crash when using same message for 2 timers (#10510)\n* xtimer_usleep stuck for small values (#7347)\n* xtimer_usleep wrong delay time (#10073)\n\nDrivers related issues (18)\n---------------------------\n\n* (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n  timeout (#14439)\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* ESP32 + DHT + SAUL reading two endpoints causes freeze. (#12057)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (6)\n-------------------------\n\n* examples/ccn-lite: floating point exception while testing on native (#15878)\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n* SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n\nOther platforms related issues (21)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* arm7: printf() with float/double not working (#11885)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/cortexm_common: irq_enable returns the current state of\n  interrupts (not previous) (#10076)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n* Incorrect default $PORT building for esp32-wroom-32 on macOS (#10258)\n* MIPS: toolchain objcopy doesn't work and no .bin can be generated (#14410)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (13)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: Setting constants on compile time doesn't really set them\n  everywhere (#3256)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n* Windows AVR Mega development makefile Error (#6120)\n\nOther issues (57)\n-----------------\n\n* semtech_loramac_init blocking (#17907)\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* `make term` output is inconsistent between boards, `ethos` and\n  `native` (#12108)\n* assert: c99 static_assert macro doesn't function for multiple\n  static_asserts in the same scope (#9371)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* C++11 extensions in header files (#5561)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* cpu/stm32/periph/rtc overflow error (#16574)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* pkg_libhydrogen tests fail / update libhydrogen (#18508)\n* Possible memset optimized out in crypto code (#10751)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n* RIOT cannot compile with the latest version of macOS (10.14) and\n  Xcode 10 (#10121)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* sam0_sdhc: SDXC cards are not detected / handled properly (#18458)\n* scheduler: priority inversion problem (#7365)\n* stdio_ethos: infinite shell loop (#17972)\n* sys/fmt: Missing tests for fmt_float, fmt_lpad (#7220)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests/thread_float: crashes on avr-rss2 (#16908)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Tracker: Reduce scope on unintended COMMON variables (#2346)\n* usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 188 known issues in this release\n\nFixed Issues since the last release (2022.04)\n=============================================\n\n- core: \"Invalid read of size 4\" (#7199)\n- Use-after-free in ccnl-core (#18480)\n- [puf_sram] Hardfault (#18468)\n- esp32: gnrc_networking crashing (#18083)\n- boards/saml11-xpro: second UART is broken (#17206)\n\n5 fixed issues since last release (2022.04)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2022.04 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2022.04 release includes the following new features and improvements:\n\nCore:\n-----\nThe scheduler allows for changing the priority of a thread at runtime.\n\nSystem libraries:\n-----------------\nThe module `ztimer64_xtimer_compat` was added, providing the complete xtimer\nAPI on top of ztimer64_usec. This is now the default implementation when using\nthe `xtimer` module.\nMost modules use ztimer instead of xtimer now.\n\nThe sequence of modules during auto initialization can be customized via\nstatically assigned numbers now. This feature is experimental, so use it with\ncaution. Priorities may change in the future.\n\nSenML implementation: supports CBOR encoding, Phydat to SenML encoding and\nbasic SAUL integration.\n\nVarious improvements have been made to the file system modules:\nVFS supports automatic mount (and formatting) at startup and reliable disk\nenumeration, and mount_by_path. Default mount points can be provided by the\nboard configuration. exFAT support was added to FATFS.\n\nUsing Rust in RIOT no longer requires a nightly version of Rust, but can be\nbuilt on the latest stable on Rust instead.\n\nBoards:\n-------\nBoards no longer have to provide a `board_init()` function. LEDs are\ninitialized automatically if they follow the `LED<x>_PIN` naming scheme.\n\nNetworking:\n-----------\ngcoap now provides a simple forward-proxy and allows for switching between\nplain CoAP and CoAP-over-DTLS at runtime.\n\nThe NimBLE module supports the new PHY modes that have been introduced with\nBluetooth 5.\n\nA Telnet server module is available now.\n\nPackages:\n---------\nThe build system now allows for package directories to reside outside the RIOT\ntree.\n\nVarious new packages have been added:\n * the C++ Embedded Template Library (ETL)\n * nanors, a tiny, performant implementation of reed solomon codes\n * tflite-micro as a replacement for tensorflow-lite\n * WAMR adds Web assembly (WASM) support\n\nHardware support:\n-----------------\nNew support for the boards Adafruit-PyBadge and STM32 Nucleo-F439ZI as well as\nfor the LPS22CH nano pressure sensor and MCP47xx DAC. The DOSE bus now supports\nbaud rates of 1 MHz and above.\n\n\nSummary:\n-------\n328 pull requests, composed of 810 commits, have been merged since the\nlast release, and 6 issues have been solved. 40 people contributed with\ncode in 83 days. 1851 files have been touched with 50235 (+) insertions and\n18701 deletions (-).\n\n\nNotations used below\n====================\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore\n----\n+ core/sched: add sched_change_priority() (#17093)\n+ core: add functionality to check queue state of another thread (#16174)\n* core: split out library code (#17652)\n* core/rmutex: use atomic utils (#16919)\n\nSystem Libraries\n----------------\n* drivers: migrate xtimer64 and xtimer/ticks users to ztimer (#17367)\n+ drivers/mtd_flashpage: add mtd_flashpage_t type (#17627)\n+ sys/bitfield: add support for bit-wise bitfield operations (#17710)\n+ sys/senml: add SenML modules (#16384)\n+ sys/vfs: add vfs_mount_by_path() (#17661)\n+ sys/xtimer: introduce `xtimer_is_set()` (#17630)\n+ sys/ztimer: add ztimer64_xtimer_compat complete xtimer replace module (#17670)\n+ vfs: Introduce reliable disk enumeration (#17660)\n* rust: test on stable (#17805)\n* sc_vfs: print file size (#17622)\n* sys/auto_init: custom auto-initialization sequence (simple) (#17794)\n* sys/event/timeout: remove alternative xtimer implementation (#17689)\n* sys/evtimer: remove deprecated evtimer_now_min (#17655)\n* sys/fido2: use ztimer instead of xtimer (#17753)\n* sys/posix/pthread: newlib compatibility (#17734)\n* sys/test_utils/print_stack_usage: work with small stacks (#17891)\n+ sys/vfs: add file-system auto-mount (#17341)\n* sys/vfs: provide vfs_fsync() (#17621)\n* sys/xtimer: make xtimer_ztimer_compat default backend (#17721)\n* sys/ztimer doc: List prerequisites for successful use of ztimer_now (#17614)\n* sys/ztimer64/util.c: fix ztimer64_set_timeout_flag (#17561)\n+ sys/ztimer: add auto_adjust module (#17633)\n* sys/ztimer: cleanup xtimer_compat.h for 32Bit only (#17690)\n* sys/ztimer: Name callback types (#17758)\n* sys: some simple xtimer->ztimer conversions (#17892)\n* sys/*timer: rework dependencies to ease backend switch, prefer\n  ztimer_xtimer_compat over xtimer_on_ztimer (#17811)\n* sys/syscalls: make gettimeofday() implementation optional (#17733)\n* sys/ztimer: auto-select ztimer_no_periph_rtt only for samd21 (#17786)\n* sys: sort out ztimer_xtimer_compat and ztimer64_xtimer_compat depes (#17732)\n+ tests: add stack usage metrics (#17706)\n* {examples,tests}/rust: Rust updates (-sys/-wrappers version, stable) (#17761)\n\nNetworking\n----------\n+ gcoap: add simple forward-proxy (#13790)\n+ gnrc_pktbuf_cmd: add od dependency with gnrc_pktbuf_static (#17228)\n+ nanocoap: add nanocoap_get_blockwise_url_to_buf() function (#17833)\n+ nanocoap: introduce coap_opt_remove() (#17881)\n+ nimble/netif: add support for BT5 PHY modes (#16860)\n+ sys,examples,tests,fuzzing: add missing includes (#17714)\n+ sys/net/application_layer/sock_dns: add pseudomodule\n  auto_init_sock_dns (#17493)\n+ sys/net/application_layer/sock_dns_mock: add module for mocking\n  sock_dns (#17871)\n+ sys/net/application_layer: add telnet server module & example (#16723)\n+ sys/net/dsm: add missing dependencies (#17685)\n+ sys/net/nanocoap: introduce `nanocoap_sock_*()`, use in\n  suit/transport/coap (#17474)\n+ sys/net/netutils: add netutils_get_ipv4() (#17764)\n+ sys/net/sock: add sock_udp_sendv() API (#17485)\n+ sys/net/sock_util: add sock_tl_name2ep() to optionally perform DNS\n  lookups (#17510)\n+ sys/stdio_nimble: add new stdio module using nimble (#12012)\n* drivers/encx24j600: define default parameters (#17747)\n* gcoap: multi-transport support (#16688)\n* gnrc/ipv6nib: remove the need for evtimer-minutes (#17411)\n* gnrc/netif: convert to ztimer (#17354)\n* ipv6/nib: bugfix of 6CO length checking (#17850)\n* ipv6/nib: fix memcpy() bug in _handle_rtr_timeout() (#17741)\n* lwip: enable LWIP_SO_RCVTIMEO if sock layer is used (#17779)\n* pkg/lwip: use ztimer_msec instead of xtimer (#17115)\n* pm: don't (un)block IDLE mode (#17975)\n* sys/gnrc/sixlowpan/frag/fb: guard sfr_types.h header include (#17730)\n* sys/net/gnrc/sock: use ztimer_usec or xtimer for timeout (#17852)\n* sys/net/gnrc/sock_types: guard tcp.h header inclusion (#17743)\n* sys/net/gnrc: ztimer_no_periph_rtt if gomach (#17729)\n* sys/net/gnrc_sixlowpan_frag_sfr: use xtimer_set (#17668)\n* sys/net/link_layer/csma_sender: use public xtimer_now() (#17731)\n* sys/net/sock_util: fix compilation for IPv4-only mode (#17766)\n\nPackages\n--------\n+ buildsystem: add EXTERNAL_PKG_DIRS functionality (#17211)\n+ pkg/etl: Add the embedded template library (etl) (#17477)\n+ pkg/lvgl: add extra widget dependency (#17760)\n+ pkg/nanors: add reed solomon codec implementation (#17703)\n+ pkg/tflite-micro: add support and deprecate tensorflow-lite (#17908)\n+ pkg/tinydtls: add IPv4 support (#17765)\n+ pkg/uwb-dw1000: add patch for rf_txctrl value (#17724)\n+ pkg/wamr: add WAMR to provide WASM support in RIOT (#15329)\n* buildsystem/pkg: expand packages from USEPKG early as path into\n  PKG_PATHS (#17551)\n* make: pkg.mk: don't call `git am` if there are no patches (#17858)\n* pkg/edhoc-c: bump version (#17777)\n+ pkg/fatfs: fatfs_vfs: wire up format() (#14430)\n* pkg/fatfs: enable exFAT support (#17798)\n* pkg/fatfs: implement statvfs() (#17634)\n* pkg/littlefs2: bump version to 2.4.2 (#17837)\n* pkg/lv_drivers: initial commit (#17713)\n* pkg/lvgl: bump to 8.2.0 (#17681)\n* pkg/lvlgl: allow customizing LV_MEM_SIZE (#17759)\n+ pkg/mbedtls: initial pkg import to use entropy module (#15671)\n* pkg/mynewt-core: fix semaphore (#17771)\n* pkg/semtech-loramac: enable setting channels mask (#17824)\n* pkg/tinycbor: bump version (#17604)\n* pkg/tinydtls/sock_dtls: use ztimer_usec (#17677)\n* pkg/tinydtls: migrate to ztimer64_msec (#17564)\n\nBoards\n------\n+ boards/adafruit-pybadge: add support (#17807)\n+ boards/b-l475e-iot01a: Add SPI2 and SPI3 buses (#17885)\n+ boards/nucleo-f429zi: add support for ethernet (#17828)\n+ boards: add support for nucleo-f439zi (#17827)\n+ cpu/esp32: update to Espressif's precompiled ESP32 vendor toolchain\n  with gcc 8.4.0 (#17769)\n+ cpu/stm32: add backup battery monitoring (VBAT) (#16989)\n+ sys/auto_init: add auto_init_leds, drop LED init code from boards (#17584)\n+ sys/board_common: add generic board_init() function (#17008)\n+ sys/vfs: add vfs_default, configure default fs for same54-xpro (#17643)\n+ tests/external-boards: add esp compile test boards (#17525)\n+ vfs_default: add compile test and add default mount for more boards (#17656)\n* boards/native: select MTD defaults for FAT (#17653)\n* boards/nucleo-f334r8 f429zi and f446ze: enable cpy2remed programmer (#17708)\n* boards/nucleo-f767zi: fix adc_config indentation (#17682)\n* boards/same54-xpro: support for board variation with SST26VF064B\n  flash (#17613)\n* boards/stm32mp157c-dk2: Overwrite mpu_stack_guard in kconfig (#17629)\n* boards: drop board_init() from board.h (#17707)\n* boards: fix ztimer adjust values for arduino-mega2560 and z1 (#17839)\n* drivers/ft5x06: allow multiple device types (#17540)\n* kconfig explore all allowed boards on all apps (#17595)\n\nCPU\n---\n+ cpu/native/netdev_tap: Add to netdev_register (#17635)\n+ cpu/nrf52-9160: add periph_spi_init_gpio (#17617)\n+ cpu/riscv_common: Enable Rust applications (#17520)\n+ cpu/sam0_common: add periph_spi_init_gpio (#17616)\n+ cpu/stm32: Add STM32_LINE cases for STM32L1xxx6 (#17727)\n+ cpu: add flash_writable section to linker script (#17436)\n* cpu/arm7, arch/cortexm: Remove -fno-builtin flag (#17898)\n* cpu/cc2538/rtt: fix rtt_set_counter (#17535)\n* cpu/efm32: bump Gecko SDK version (#17672)\n* cpu/esp*: nvs-flash / cpp dependencies cleanup (#17548)\n* cpu/esp32/esp-eth: move GNRC auto_init to init_devs (#17745)\n* cpu/esp32: changes for toolchain update to gcc version 8.4.0 (#17546)\n* cpu/esp32: download Espressif SDK ESP-IDF as package (#17455)\n* cpu/esp32: enable puf_sram feature (#17671)\n* cpu/esp32: use macros/units (#16341)\n* cpu/lpc23xx-mci: migrate to ztimer_msec (#17363)\n* cpu/riscv_common: enable puf_sram feature (#17665)\n* cpu/riscv_common: fix undeclared memory region linker error (#17581)\n* cpu/sam0_common: implement EXTWAKE for SAM L21 (#17687)\n* cpu/sam0_eth: implement SLEEP state (#17886)\n* cpu/samd5x: allow to block IDLE mode (#17883)\n* cpu/saml21: derive low power SRAM length from model number (#17686)\n* cpu/samx21: allow to override PM_BLOCKER_INITIAL (#17793)\n* cpu/samd51: allow to support ADC0 and ADC1 in the same configuration (#17819)\n* cpu/stm32/i2c: fix wrong speed parameters (#17324)\n* cpu/stm32: Fix clock tree (#17609)\n* cpu/stm32: Fix CLOCK_CORECLOCK on stm32l0/l1 (#17725)\n* cpu/stm32: make backup SRAM available (#16870)\n* drivers/periph_spi: spi_init_with_gpio_mode mode by reference (#17531)\n\nDevice Drivers\n--------------\n+ driver/lpsxxx: adding lps22ch support (#17697)\n+ drivers/dose: introduce watchdog timer (#17180)\n* drivers/dose: make use of ringbuffer for RX (#17210)\n+ drivers/mtd_spi_nor: add ztimer_usec alternative (#17836)\n+ drivers/shtcx: converted the shtc1 driver into shtcx and added shtc3\n  support (#17699)\n+ drivers: add driver for L3GD20H 3-axis gyroscope (#10082)\n+ drivers: support for Microchip MCP47xx DAC devices added (#10518)\n+ mtd doc: Add overview defining terms; link modules (#17666)\n* driver/mtd_spi_nor: cleanup sleep timing (#17879)\n* drivers/dose: migrate to ztimer_usec (#17565)\n* drivers/lis2dh12: use ifdef instead of IS_USED (#17563)\n* drivers/mtd_sdcard: support unaligned reads & writes (#17619)\n* drivers/periph_common/cpuid: disable false positive warnings (#17910)\n* drivers/rtt_rtc: select rtc_utils (#17530)\n* drivers/sht3x: ztimer_msec port (#17783)\n\nDocumentation\n-------------\n+ boards/cc1352-launchpad doc: adding information concerning shell\n  access (#17522)\n+ doc/doxygen: add BUILD_IN_DOCKER extended doc (#17820)\n+ doc/doxygen: recommend adding ADJUST ztimer values for new boards (#17846)\n+ doc: add RIOT root doxygen example path (#17572)\n+ net/ieee802154: Add overview documentation (#16940)\n* boards/nucleo-f429zi: improvements to documentation (#17875)\n* boards/nucleo-l552ze-q doc: Improvements to documentation (#17639)\n* boards/p-nucleo-wb55: update documentation (#17582)\n* core (largely doc): Differentiate message types from thread flags (#17472)\n* doc/emulator: update qemu doc with unix sockets (#17751)\n* doc: small fix of \"Getting Started\" document structure in section\n  docker (#17756)\n* doc: Start documenting pseudomodules (#17133)\n* tools/zep_dispatch: document topogen usage (#17586)\n\nBuild System / Tooling\n----------------------\n+ dist/tools/genconfig: add error on hidden symbols (#17597)\n+ dist/tools/usb-serial/ttys.py: Add regex support (#17876)\n+ dist/tools/usb_serial: Add tool for listing and filtering TTY\n  interfaces (#17737)\n+ make: Add ubsan support (#17278)\n+ makefiles/dependency_resolution: add outer loop for DEFAULT_MODULE\n  deps (#17632)\n+ makefiles/docker.inc.mk: add DOCKER_ENV_VARS_ALWAYS (#17396)\n+ testbed/iotlab: add mapping for samr34-xpro and nucleo-wl55jc (#17578)\n+ tests/gnrc_rpl: add automated test for gnrc_rpl (#17353)\n+ tools/pr_check: add \"Update\" keyword to \"needs squashing\" check (#17822)\n* make/emulate: use unix sockets with qemu (#17679)\n* Makefile.include: pass IOTLAB_NODE to docker (#17545)\n* makefiles/docker.ink.mk: do not always pass CFLAGS to docker (#17818)\n* makefiles/libc/newlibc: allow toolchains with nano version only (#17553)\n* makefiles: socat set tty mode 8N1 (#17853)\n* makefiles: use C++14 standard by default for C++ compilations (#17479)\n* tools/dhcpv6-pd_ia: create /run/kea on startup (#17674)\n* tools/cpy2remed: Addition of new programmer for nucleo boards (#17550)\n\nKconfig\n-------\n+ boards/Kconfig: remove wrongfully added MODULE_AUTO_INIT_LED* sym (#17684)\n+ cpu/stm32: Add clock config for mp1 to kconfig (#17521)\n* board/*/kconfig: Fix boards on kconfig blocklist (#17467)\n* boards: Use BOARD.config pattern for kconfig (#17648)\n* cpu/stm32/wl: Model kconfig clocks (#17496)\n* drivers/*/Kconfig: Cleanup of simple drivers (#17669)\n* pkg/littlefs2: model Kconfig (#17882)\n* sys/chunked_ringbuffer: model Kconfig (#17744)\n* sys/fido2: model Kconfig (#17435)\n* {disp,touch}_dev: improve Kconfig at different levels (#17458)\n\nExamples\n--------\n+ examples/gcoap_block_server: add gcoap block server example (#17843)\n+ examples/lorawan: add the possibility to use ABP activation procedure (#11237)\n* examples/gcoap_dtls: match Makefile of examples/gcoap (#17552)\n* examples/twr_aloha: refactor (#17406)\n* examples/twr_aloha: blacklist test on ci (#17557)\n* Make example/emcute_mqtt honor radio settings (#17773)\n\nTesting\n-------\n+ .github/workflows/test-on-iotlab: add dwm1001 (#17558)\n+ tests/*: add BOARDs to Makefile.ci (#17754)\n+ tests: add default BOARDS (#17715)\n* CI: disable microbit testing (#17953)\n* murdock: prioritize job collection over build jobs (#17610)\n* murdock: support emulated boards (#17434)\n* murdock: use json output `$(BINDIR)` size (#17213)\n* tests/*: remove unneeded xtimer_init (#17566)\n* tests/*xtimer*: remove unneeded timex calls (#17728)\n* tests/driver_dfplayer: use event_thread instead of\n  event_thread_lowest (#17750)\n* tests/periph_uart_nonblocking: migrate to ztimer (#17567)\n* tests/pkg_edhoc: handle multiple interfaces (#17534)\n* tests/pkg_mbedtls: improve entropy test case and doc (#17606)\n* tests/pkg_relic: increase stacksize (#17528)\n* tests/senml: do no include saul_default (#17641)\n* tests/sys_atomic_utils: use ztimer_usec (#17851)\n* tests/sys_crypto: fix potentially uninitialized error (#17718)\n* tests/thread_float: use ztimer_usec (#17835)\n* tests: multiple fixes (#17840)\n* workflow/tool-test:  update prior install (#17738)\n\nAPI Changes\n-----------\n+ drivers/periph_common: add periph_init_buttons to init on-board\n  buttons (#17711)\n* drivers/atwinc15x0: register with netdev (#17887)\n* sys/pm_layered: use array representation, get rid of implicit IDLE\n  mode (#17895)\n* tests: rework eth drivers (#17813)\n* ztimer_periodic: make callback function return bool (#17351), i.e., the logic\n  of the return value is inverted now (ZTIMER_PERIODIC_KEEP_GOING was 0, now it\n  is true).\n\nAnd 57 minor changes.\n\nDeprecations\n============\n\nDeprecations (3)\n----------------\n* sys/quad_math: this module has been marked as deprecated and will be removed\n  for the next release\n+ sys/sema: add sema_ztimer64 to implement old api, deprecate sema (#17719)\n* periph/flashpage: deprecate *_free functions (#17860)\n\nRemovals (3)\n------------\n- drivers/at: remove deprecated AT_SEND_ECHO define (#17500)\n- sys/lora: remove deprecated LORA_PAYLOAD_CRC_ON_DEFAULT define (#17517)\n- sys/loramac: remove deprecated LORAMAC_DEFAULT_PUBLIC_NETWORK (#17516)\n\nBug fixes (39)\n==============\n* make: add -ffunction-sections -fdata-sections to LINKFLAGS if LTO=1 (#16789)\n* pkg/openwsn: add patch to use memmove() instead of memcpy() (#17900)\n* [treewide] lora: use int16_t for RSSI value (#17497)\n* boards/common/qn908x: perform elf checksum on shadow copy (#17757)\n* boards/nucleo-f767zi: Fix adc pin config in periph_conf.h (#17560)\n* core/assert: avoid including panic.h with assert.h (#17574)\n* cpu/native: fix build with afl-gcc 11.2 (#17583)\n* cpu/nrf52 radio: Populate info (#17592)\n* cpu/nrf52/radio: fix confirm_op info cast (#17848)\n* cpu/sam0_common/eth: expose correct setup function (#17746)\n* dist/tools/kconfiglib: avoid rewriting `/dev/null` (#17873)\n* drivers/at86rf215: fix disabling individual modulations (#17667)\n* drivers/atwinc15x0: join multicast groups (#17880)\n* drivers/dose: only disable watchdog when transiting from RECV state (#17716)\n* drivers/ethos: fix build without ethos_stdio (#17608)\n* drivers/mtd_mapper: fix read_page and write_page backend (#17866)\n* examples/lorawan: disable loramac state persistence on EEPROM\n (#17970)\n* fs/constfs: omit leading '/' in readdir() (#17626)\n* gnrc/ndp: bugfix set O-flag if target is not anycast (#17778)\n* gnrc/nib: don't advertise single address for auto-configuration (#17803)\n* gnrc_netif: fix potential null pointer dereference (#17856)\n* makefiles.kconfig.mk: use EXTERNAL_MODULE_DIRS in Kconfig resolution (#17596)\n* murdock: fix exit -> return in subfunction (#17518)\n* pba-d-01-kw2x: fix clock init by preceding cpu_init with modem clock\n  init (#17857)\n* pkg/fatfs: fix missing mutex header (#17865)\n* pkg/littlefs*: align readdir() with documentation (#17623)\n* pkg/tinydtls/contrib/sock_dtls: fix ep_to_session (#17849)\n* pkg/tinydtls: crypto: remove unnecessary usage of malloc() (#17878)\n* pkg: fix documentation on includes (#17538)\n* shell/sc_gnrc_udp: always use delay in µs (#17657)\n* sys/benchmark: fix divide by zero if runs < 1000 (#17624)\n* sys/event/callback: in init set list_node.next to NULL (#17625)\n* sys/fido2/ctap: fix parsing validation (#17816)\n* sys/net/dhcpv6: miscellaneous tweaks (#17736)\n* sys/ztimer/xtimer_compat: fix bug introduced in #17690 (#17705)\n* sys/ztimer64: fix `ztimer64_remove()` not properly clearing timer\n  struct (#17720)\n* tests/cpu_avr8_xmega_driver: fix BOARD name (#17749)\n* treewide: initialize several stack-allocated, but uninitialized timer\n  structs (#17855)\n* vfs: Initialize stat buffers so FSs don't have to (#17645)\n\n\nKnown issues\n============\n\nNetwork related issues (56)\n---------------------------\n* 6lo gnrc fragmentation expects driver to block on TX (#7474)\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* at86rf2xx: lost interrupts (#5486)\n* CC2538 RF overlapping PIN usage (#8779)\n* core: \"Invalid read of size 4\" (#7199)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* General 802.15.4/CC2538 RF driver dislikes fast ACKs (#7304)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_netif_pktq leaks memory (#17924)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gnrc_tcp: gnrc_tcp_recv() never generates -ECONNABORTED (#17896)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* Neighbor Discovery not working after router reboot when using SLAAC (#11038)\n* net: netdev_driver_t::send() doc unclear (#10969)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* openthread: does not build on current Arch (#10809)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* Unclear how Router Solicitations are (or should be) handled (#15926)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (15)\n-------------------------\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n* tests: xtimer_drift gets stuck on native (#6052)\n* xtimer mis-scaling with long sleep times (#9049)\n* xtimer: add's items to the wrong list if the timer overflows between\n  _xtimer_now()  and irq_disable() (#7114)\n* xtimer_set_msg: crash when using same message for 2 timers (#10510)\n* xtimer_usleep stuck for small values (#7347)\n* xtimer_usleep wrong delay time (#10073)\n\nDrivers related issues (18)\n---------------------------\n* (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n  timeout (#14439)\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* ESP32 + DHT + SAUL reading two endpoints causes freeze. (#12057)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* tests/periph_flashpage: unexpected behavior on nucleo-l4r5zi (#17599)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (6)\n-------------------------\n* examples/ccn-lite: floating point exception while testing on native (#15878)\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n* SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n\nOther platforms related issues (21)\n-----------------------------------\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* arm7: printf() with float/double not working (#11885)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/cortexm_common: irq_enable returns the current state of\n  interrupts (not previous) (#10076)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n* Incorrect default $PORT building for esp32-wroom-32 on macOS (#10258)\n* MIPS: toolchain objcopy doesn't work and no .bin can be generated (#14410)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (13)\n--------------------------------\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: Setting constants on compile time doesn't really set them\n  everywhere (#3256)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n* Windows AVR Mega development makefile Error (#6120)\n\nOther issues (56)\n-----------------\n* semtech_loramac_init blocking (#17907)\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* `make term` output is inconsistent between boards, `ethos` and\n  `native` (#12108)\n* assert: c99 static_assert macro doesn't function for multiple\n  static_asserts in the same scope (#9371)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* boards/saml11-xpro: second UART is broken (#17206)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* C++11 extensions in header files (#5561)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* cpu/stm32/periph/rtc overflow error (#16574)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* feather-m0: `make flash` reports \"device unsupported\" (#17722)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* Possible memset optimized out in crypto code (#10751)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n* RIOT cannot compile with the latest version of macOS (10.14) and\n  Xcode 10 (#10121)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* riotboot: ECC faults (eg. in STM32L5 or STM32WB) not handled\n  gracefully (#17874)\n* rust-gcoap example is incompatible with littlefs2 (#17817)\n* scheduler: priority inversion problem (#7365)\n* stdio_ethos: infinite shell loop (#17972)\n* sys/fmt: Missing tests for fmt_float, fmt_lpad (#7220)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests/thread_float: crashes on avr-rss2 (#16908)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Tracker: Reduce scope on unintended COMMON variables (#2346)\n* usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 185 known issues in this release\n\nFixed Issues since the last release (2022.01)\n=============================================\n- Kconfig: `genconfig.py` rewrites `/dev/null` (#17862)\n- gcoap_dtls: Selecting transport at run time is not possible (#16674)\n- LTO broken (binaries too large) (#16202)\n- File systems report names with leading slashes (#14635)\n\n4 fixed issues since last release (2022.01)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2022.01 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2022.01 release brings support for new packages, new boards and drivers,\nas well as several package upgrades and bug fixes. Among others, this release\nimproves the RIOT codebase with:\n\nRust support\n------------\n\nRIOT now offers convenient integration of Rust application programming, with\nwrappers interfacing to RIOT modules such as timers, network stack.\n\n\nImproved timers\n---------------\n\nMany modules have migrated from using xtimer to our more power-efficient\nalternative ztimer. Also, ztimer64 was introduced, which enables\na drop-in replacement for all of xtimer features.\n\n\nKconfig support\n---------------\n\nKconfig modeling coverage is significantly extended. Nearly all supported\nboards are now modeled with Kconfig.\n\n\nSummary:\n--------\n\n436 pull requests, composed of 1159 commits, have been merged since the\nlast release, and 11 issues have been solved. 43 people contributed with\ncode in 88 days. 2475 files have been touched with 44925 (+) insertions and\n14687 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nFull list available at https://github.com/RIOT-OS/RIOT/milestone/37?closed=1\n\nCore\n----\n\n+ core/include/kernel_defines.h: add index_of() macro (#17142)\n+ core: Add IS_CT_CONSTANT() (#17273)\n+ core: add WITHOUT_PEDANTIC() and DECLARE_CONSTANT() (#17176)\n* core: Warn about using irq_enable (#17433)\n* core: make SCHED_TEST_STACK boolean and default to 1 with DEVELHELP (#17132)\n\nSystem Libraries\n----------------\n\n+ sys/architecture: add HAS_ALIGNMENT_OF() helper (#17177)\n+ sys/arduino: add assertion to gpio handling (#17443)\n+ sys/atomic_utils: add atomic_{load,store}_ptr() (#17256)\n+ sys/include/event/periodic: add count (#17276)\n+ sys/isrpipe: add isrpipe_write (#17336)\n+ sys/sched_rr: Add a round robin scheduler module (#16126)\n+ sys/stdio: add optional function stdio_available (#17446)\n+ sys/test_utils/result_output: add sort to multiple output check (#17269)\n+ sys/tsrb: add peek functions (#17266)\n+ sys/tsrb: add tsrb_clear (#17337)\n+ sys/ztimer: add 'ztimer_no_periph_rtt' (#17284)\n+ sys/ztimer: add some best practices (#17370)\n+ sys/ztimer: ztimer_now() add warning regarding comparing now() values (#17404)\n+ usb/hid: Add HID report descriptor defines (#17242)\n+ sys/arduino: add Serial over stdio support (#17447)\n+ sys: introduce sysclk function to retrieve core clock frequency (#17342)\n+ sys/new_delete: add malloc/free based new/delete implementation (#17464)\n* event/timeout: remove forced ZTIMER_USEC dependency (#16958)\n* riotboot_dfu: use ztimer instead of xtimer (#17051)\n* riotboot_serial: enter bootloader mode by pin (#17248)\n* schedstatistics: Convert to ztimer (#17216)\n* stdio_rtt: Convert to ztimer (#17122)\n* stdio_semihosting: Convert to ztimer (#17123)\n* sys/can: migrate to ztimer (#17366)\n* sys/cpp11-compat: use new/delete operators from sys/cpp_new_delete (#17475)\n* sys/evtimer: use now returned by set (#17394)\n* sys/fmt: make fmt_s32_dfp() string based (#17106)\n* sys/Makefile.dep: fix event periodic dependency (#17318)\n* sys/picolibc_syscalls_default: support new picolibc stdio globals (#17001)\n* sys/random: default to musl LCG instead of TinyMT (#17188)\n* sys/suit: adjust dependencies for CoAP transport (#17182)\n* sys/test_utils/result_output/json: optional space after symbol (#17034)\n* sys/turo: Allow default selection of json (#17039)\n* sys/ztimer/xtimer2ztimer.cocci: extend and fix api replacements (#17234)\n* sys/ztimer64: default select ztimer64_init (#17414)\n* sys/ztimer64: make _del_entry_from_list() safe for uninit ztimer64_t (#17368)\n* sys/ztimer: remove double ztimer indirection (#17272)\n* sys/ztimer: ztimer_remove report success (#17408)\n* usbus/cdc_acm: Return stall on line coding not supported (#17085)\n* usbus/hid: fix ep_out readiness (#17230)\n* usbus/hid: fix ep_out readiness (#17245)\n* usbus: Bind extra USB config (#17380)\n* usbus: check received setup request data amount (#17203)\n* sys/ztimer64: initial PR (#16928)\n\nNetworking\n----------\n\n+ gnrc_pktbuf_cmd: add od dependency with gnrc_pktbuf_static (#17228)\n+ sys/net/dhcpv6: Add stateless DHCPv6 (#16731)\n+ sys/net: Add ipv4/ipv6 pseudomodules (#16966)\n+ sys/shell/sc_nimble_netif: add ping subcommand (#16539)\n* dsm: rename DTLS_PEER_MAX and make it dependent on\n  CONFIG_DTLS_PEER_MAX (#16967)\n* gcoap_dtls: destroy session in _tl_send only on connection errors (#16963)\n* gnrc_dhcpv6_client / uhcp: delay router advertisements until prefix\n  was received (#16755)\n* gnrc_gomach: adapt duty recording parameters' namings. (#8954)\n* gnrc_netif: move netdev initialization to ops->init (#16918)\n* lwip: bump to v2.1.3 (#16774)\n* net/gcoap: port to ztimer (#17141)\n* nimble/statconn: use errno return values (#17344)\n* pkg/lwip: Don't control IPv6 via IPv4 flag (#17175)\n* pkg/lwip: Fix dualstack build when only using 6lowpan (#17174)\n* pkg/openthread: bump version to 20200818 + adapt to use CMake to\n  configure the build (#16948)\n* pkg/openthread: migrate to ztimer (#17120)\n* pkg/paho-mqtt: migrate to ztimer (#17143)\n* pkg/semtech-loramac: fix get/set dr command (#17117)\n* sys/evtimer,ztimer: do not depend on ztimer_now64 (#17357)\n* sys/net/gnrc: fix compilation with -Wcast-align (#17157)\n* sys/shell/gnrc_netif: Allow 'ifconfig help' (#17006)\n* test/ieee802154_hal: general cleanup and cosmetic fixes (#16913)\n* tests/lwip_sock: Take lock before calling etharp (#17145)\n* socket_zep: port to radio HAL (#16932)\n* ieee802154/hal: adapt to latest changes of #13943 (#16946)\n\nPackages\n--------\n\n+ pkg/lz4: add support for LZ4 compression/decompression (#17178)\n+ pkg/uzlib: add support for zlib compression/decompression (#17179)\n+ pkg: add support for Elk Tiny Javascript engine (#16887)\n+ pkg: add support for FreeRTOS coreJSON library (#16997)\n+ pkg/arduino_sdi_12: add SDI-12 for Arduino as package (#16587)\n* hacl: Switch git address to RIOT-OS-pkgmirror (#16941)\n* make: support package mirrors (#16927)\n* pkg/emlearn: bump to 0.12 (#16937)\n* pkg/jerryscript: bump to 2.4.0 (#16938)\n* pkg/mynewt-core/patches: silence cast-align (#17397)\n* pkg/qr-code-generator: bump to 1.7.0 (#16939)\n* pkg/uwb-core: fix wrong header include (#17345)\n* pkg/uwb-core: enable frame filtering, allow usage of common event thread (#17264)\n* pkg/wakaama: use ztimer (#17103)\n* pkg/arduino_sdi_12: support the remote-revb board (#17119)\n* pkg/fatfs: bump version to r0.14b (#16412)\n* Update tiny-asn1 package (#16936)\n* pkg/lvgl: use ztimer instead of xtimer (#17031)\n* pkg: migrate some packages to ztimer (#17309)\n\nBoards\n------\n\n+ boards/feather-m0: add arduino feature (#17401)\n+ boards/iotlab-m3: add MTD definition (#17339)\n+ boards/nrf9160dk: add riotboot support (#17226)\n+ boards/nucleo-g431rb: added PWM configuration (#17030)\n+ boards/p-l496g-cell02: add riotboot feature (#17463)\n+ boards/stm32f469i-disco: Add DAC (#17214)\n+ boards/stm32g031-disco,examples,tests: Added STM32G031-DISCO board (#16959)\n+ boards: add board support for Alientek Pandora (#17259)\n+ boards: add support for stm32f746g-disco (#17198)\n* boards/common/microbit: fix doxygen grouping (#17440)\n* boards/esp* and cpu/esp: feature definition cleanup (#17438)\n* boards/lora-e5-dev: enable 3.3V and 5V output by default (#17158)\n* boards/lora-e5-dev: fix default DARWIN port (#17373)\n* boards/stm32f469i-disco: Create  board (#16898)\n* boards/{calliope-mini,microbit*}: factorize common microbit module,\n  use ztimer (#17124)\n* boards: cpu: replace GPIO_UNDEF by SPI_CS_UNDEF in SPI configuration (#17468)\n* boards: model nrf52 boards (#17299)\n* boards: unify user button defines (#17428)\n* tools/elf2uf2: addition of new PROGRAMMER for RPi-pico (#17348)\n\nCPU\n---\n\n+ Add some Rust building infrastructure and example (#16274)\n+ cpu/esp32: add clear bus during init to the I2C software\n  implementation (#17346)\n+ cpu/nrf9160: add periph_flashpage support (#17225)\n+ cpu/stm32: Add hardening changes to stm32 (#16979)\n+ nimble_scanner: rework to enable scanning BLE5 PHYs and extended\n  advertisements (#16843)\n+ nrf5x_common: Add qdec peripheral implementation (#17201)\n+ cpu/esp32: Add openocd programming support (#16911)\n+ cpu/stm32: add driver for the LTDC peripheral (#17437)\n+ cpu/stm32: add new usbdev FS support (#17281)\n+ cpu/stm32: add support for U5 family (#17410)\n* boards/common/esp8266: Set RTS and DTR to 0 on pyterm. (#16305)\n* cc2538_rf: remove RX Busy detection in request_set_trx_state (#16821)\n* cpu/arm7_common: suppress false positives of cppcheck (#17218)\n* cpu/atmega_common: make cppcheck happy (#17219)\n* cpu/atmega_common: Remember CTC mode with timer_periodic (#17387)\n* cpu/atxmega/include/cpu_conf: ztimer64 arithmetic idle stack fix (#17362)\n* cpu/cortexm_common: make CI happy (#17220)\n* cpu/esp32: make CI happy (#17221)\n* cpu/esp32: place freertos and periph in IRAM (#17087)\n* cpu/esp32: support CPU clocks 2 MHz and 40 MHz (#17413)\n* cpu/esp: change dynamic SSID option handling (#17415)\n* cpu/esp: migrate to ztimer (#17386)\n* cpu/kinetis/include: fix xtimer backend timer selection (#17393)\n* cpu/native/include: other stacksizes based on default (#16956)\n* cpu/native: migrate periph_rtc to ztimer (#17125)\n* cpu/qn908x: migrate ADC periph to ztimer (#17321)\n* cpu/sam0_common: SPI: don't perform DMA transfer for small buffers (#16926)\n* cpu/sam0_common: uart: set oversampling based on baud rate (#17186)\n* cpu/stm32/include/cpu_conf_stm32_common.h: fix typo in macro (#17187)\n* cpu/stm32: bump cmsis repositories to latest releases + extend CPU\n  models kconfig (#17293)\n* cpu/stm32: duplicated ADC devices definitions (#16968)\n* cpu/stm32: migrate adc and eth periphs to ztimer (#17320)\n* cpu/stm32: split periph_cpu.h in sub headers (#17441)\n* cpu: do not auto-select ztimer_periph_rtt for sam0, fe310 (#17395)\n* drivers/periph: use uint_fast8_t as default type (#17191)\n* esp8266: Download Espressif RTOS SDK as a new RIOT PKG (#16425)\n* periph/flashpage: extend API (#16972)\n* periph/flashpage: fix wrong doxygen group (#17202)\n* stm32/usbdev: Use ztimer instead of xtimer (#17047)\n* cpu/esp: compile optional modules in CI (#17314)\n* cpu/stm32/wl: initial periph_adc implementation (#17183)\n* cpu/stm32: enable USB OTG FS on high end L4 (#17302)\n\n\nDevice Drivers\n--------------\n\n+ drivers/dose: enable standby pin (#16752)\n+ drivers/hm330x: initial commit (#16333)\n+ drivers: add PCF857X I2C I/O expander driver (#10430)\n+ drivers: only build saul interface if saul module is used + add\n  saul_drivers test application (#17470)\n+ netdev: add netdev_register_signal (#16922)\n+ drivers/ft5x06: add support for touch panel controller (#17448)\n+ drivers/stmpe811: add spi mode (#17088)\n+ drivers/dose: make use of UART collision detection feature (#16681)\n* driver/at30tse75x: port to ztimer_usec (#17137)\n* drivers/ads101x: migrate to ztimer (#17102)\n* drivers/ata8520e: migrate to ztimer (#17105)\n* drivers/atwinc15x0: migrate to ztimer (#17381)\n* drivers/bmp180: migrate to ztimer (#17101)\n* drivers/dose: calculate timeout based on symbol rate (#16768)\n* drivers/dsp0401: migrate to ztimer (#17110)\n* drivers/mhz19: migrate to ztimer (#17308)\n* drivers/rn2xx3: migrate to ztimer (#17112)\n* drivers/sdcard_spi: convert to ztimer_usec (#17361)\n* drivers/stmpe811: improve interrupt callback management (#17487)\n* drivers/xbee: migrate to ztimer_msec (#17114)\n* drivers: migrate mpu9x50 and si70xx to ztimer (#17358)\n* drivers: migrate some drivers to ztimer (#17315)\n* drivers: remove some useless xtimer includes (#17303)\n* drivers: several cleanups related to xtimer + some ztimer migration (#17375)\n* makefiles: remove PCF857x pseudomodule definitions (#17343)\n* drivers/periph_common: build periph module selectively (#17418)\n\nDocumentation\n-------------\n\n+ boards/lora-e5-dev: add warning in doc (#17185)\n+ doc/getting-started.md: added beginner friendly instructions (#17050)\n+ doc/rust: Add maintenance guidance (#17505)\n* boards/lora-e5-dev: extended documentation (#17244)\n* boards/stm32f746g-disco: extend documentation (#17310)\n* doc/.../getting-started.md: update software requirements (#17002)\n* doc/boards/rpi-pico: Addition of section concerning shell access (#17454)\n* doc: fix libcoap removal commit (#17378)\n* pkg/openwsn: update doc (#17131)\n* tools/zep_dispatch: document foren6 usage (#17326)\n* doc: fix missing or non matching arguments in Doxygen documentation (#17461)\n\nBuild System / Tooling\n----------------------\n\n+ dist/tools/ci: add can_fast_ci_run.py (#17239)\n+ dist/tools/doccheck/exclude_patterns: add new warnings (#17104)\n+ dist/tools/doccheck: add create_pattern.sh (#17082)\n+ make: add info-emulated-boards helper target (#16975)\n+ Makefile.base: add SUBMODULES_NO_SRC to excluded a selected SUBMODULE\n  *.c (#17222)\n+ tools/compile_and_test_for_board: apply black automatic code\n  formatter + add format checker in tox (#16905)\n+ tools/insufficient_memory: add create_makefile.ci.sh and Makefile.ci\n  make target (#16109)\n+ tools/pythonlibs/riotctrl_*: add code format check with black (#16915)\n+ tools/zep_dispatch: add support for foren6 sniffer (#16879)\n+ tools/zep_dispatch: add topology generator (#16889)\n+ makefiles/cflags.inc.mk: Add -Wcast-align (#14955)\n* cppcheck: output all annotations as error (#17134)\n* dist/tools/coccinelle/force: remove static.cocci (#17139)\n* Makefile.include: remove warning about EXTERNAL_MODULE_DIRS API\n  change (#16984)\n* Makefile.include: rename Makefile.ci target to create-Makefile.ci (#17205)\n* makefiles/docker.inc.mk: pass TEST_KCONFIG (#17398)\n* murdock: make use of can_fast_ci_run.py (#17325)\n* static-tests: disable cppcheck (#17282)\n* tools/backport_pr: check code format with black (#16907)\n* tools: can_fast_ci_run.py: ignore comment changes for `\\.[ch]$` (#17405)\n\nKconfig\n-------\n\n+ cpu/avr8: model kconfig (#16929)\n+ cpu/efm32: model kconfig (#16912)\n+ cpu/esp: integrate CPU clock frequency selection in Kconfig (#17424)\n+ cpu/msp430: add Kconfig (#17290)\n+ cpu/nrf52: initial kconfig modeling (no netif) (#16837)\n+ cpu/nrf9160: add Kconfig dependencies (#17291)\n+ cpu/riscv: model Kconfig (#16909)\n+ makefiles/kconfig: add board & CPU config variables (#17376)\n+ pkg/uwb*: add Kconfig dependency modelling (#16780)\n+ sys/trace: migrate to ztimer and add Kconfig support (#17319)\n+ .murdock: Add modules/pkgs diff of make/kconfig (#17094)\n+ .murdock: Add nucleo boards to kconfig test (#16845)\n+ .murdock: Add same54-xpro to kconfig tests (#17255)\n* .murdock: Kconfig test apps for all boards (#17402)\n* boards/adafruit-itsybitsy-m4: Model kconfig (#17331)\n* boards/feather-m0*: base board definition in Kconfig (#17445)\n* boards/samd21-based: model Kconfig (#17355)\n* boards/saml21-based: model kconfig (#17270)\n* boards/stm32-based: model Kconfig (#17374)\n* cpu/esp{32,8266}: model kconfig (#17232)\n* cpu/kinetis: model kconfig (#17235)\n* cpu/lpc23xx: model kconfig (#17279)\n* cpu/nrf51: model kconfig (#17274)\n* cpu/qn908x: model kconfig (#17277)\n* cpu/{cc26xx, cc13xx}: model kconfig (#17236)\n* drivers/sx126x/Kconfig: rework model selection (#17289)\n* sys/benchmark/kconfig: cleanup ztimer dependency (#17317)\n* sys/log: model Kconfig (#17286)\n* sys/vfs: model Kconfig (#17287)\n\nExamples\n--------\n\n+ example/gcoap: add LWIP make option (#17130)\n* examples/gcoap: split client and server implementation (#17471)\n* examples/gnrc_networking_subnets: remove broken symlink (#17389)\n* examples/lorawan: use ztimer_msec if not rtc (#17181)\n* examples/gnrc_networking: cleanup and static function declarations in\n  udp.c (#17384)\n\nTesting\n-------\n\n+ pkg/fff: Add fake functions framework package (#17076)\n+ murdock: add some doc on how to efficiently limit builds (#17312)\n+ tests/bench_ztimer: add port of bench_xtimer (#17391)\n+ tests/pkg_ucglib: add missing function declaration (#17347)\n* gh/workflows/release-tests: update LoRaWAN parameters to ttnv3 (#17009)\n* gha/workflows/release-test: set python version to 3.8 (#17038)\n* tests/*: Fix nightly failures due to f-string (#17283)\n* tests/malloc: fix counting bugs (#17323)\n* tests/periph_adc: migrate to ztimer (#17322)\n* tests/periph_timer_periodic: spice up test (#17388)\n* tests/unittests/tests-base64: enlarge test buffer for worst case (#17292)\n* test/pkg_u8g2: increase main stacksize for SDL (#16954)\n* tests/pkg_fatfs{_vfs}: drop whitelist (#17478)\n* Fix some cppcheck errors (#17271)\n\nAPI Changes\n-----------\n\n* core/kernel_defines.h: drop ALIGN_OF() (#17267)\n* core/kernel_defines: drop BUILD_BUG_ON() (#17268)\n* core/msg: make msg_avail() return 0 on no queue (#17262)\n* cpu: call cpu_init() from startup code, not from board (#16055)\n* drivers/periph_i2c: let i2c_acquire return void (#17275)\n* sys/ztimer: ztimer_set() return the now value (#17385)\n* USB: refactor to xmit-based API (#17064)\n\nDeprecations\n============\n\nDeprecations (2)\n----------------\n\n* cpu/mips: deprecate mips cpu (#17304)\n* sys/include/xtimer.h: deprecate nanosleep (#17296)\n* sys/include/evtimer.h: deprecate evtimer_now_min (#17357)\n* usbdev/USBUS: deprecate transfer failure reporting report (#17046)\n\nRemovals (9)\n------------\n\n- boards/fox: remove BOARD (#17021)\n- dist/iotlab: remove deprecated auto-ssh backward compatibility (#17476)\n- drivers/ethos: remove deprecated USE_ETHOS_FOR_STDIO define (#17499)\n- make: remove deprecation warnings raised with flasher tools old vars (#17490)\n- pkg/libcoap: remove (#17163)\n- sys/asymcute: remove deprecated CONFIG_ASYMCUTE_BUFSIZE_EXP (#17481)\n- sys/crypto: remove deprecated CIPHER_AES_128 (#17480)\n- sys/saul_reg: remove deprecated saul_reg_rm function (#17489)\n- sys/shell: remove deprecated SHELL_NO_{ECHO,PROMPT} defines (#17484)\n\nBug fixes (66)\n==============\n\n* cpu/native: add `-no-pie` to LINKFLAGS (#16186)\n* boards/adafruit-clue: use internal RC oscillator (#17069)\n* boards/feather-m0-*: fix Arduino feature in Kconfig (#17444)\n* boards/nrf9160dk: fix LED macros (#17328)\n* boards/nucleo-g07xrb: fix or exclude some doxygen warnings (#17079)\n* boards/nucleo-g07xrb: fix or exclude some doxygen warnings [backport\n  2021.10] (#17084)\n* boards/stm32f723e-disco: use connect_assert_srst with openocd (#17462)\n* boards/stm32f746g-disco: use connect_assert_srst with openocd (#17449)\n* boards/stm32f769i-disco: fix and cleanup default configuration (#17199)\n* cdc_ecm: Truncate frames at max ethernet size (#17200)\n* cpu/atmega1281: fix pcint (#17227)\n* cpu/esp*: small documentation fixes (#17456)\n* cpu/esp32: fix esp_wifi_enterprise compilation problem (#17306)\n* cpu/esp8266: fix problems with ESP WiFi and migration to ztimer (#17427)\n* cpu/esp8266: place freertos functions in IRAM (#17080)\n* cpu/esp: revert the change for default definition of ESP_WIFI_PASS (#17420)\n* cpu/esp_common: fix unaligned access in periph_flashpage (#17150)\n* cpu/native: align stack in thread_stack_init() (#17155)\n* cpu/sam0: prevent disabled irq from being called (#17007)\n* cpu/stm32/periph/usbdev: fix alignment issues (#17154)\n* cpu/stm32: clone cmsis header in build/stm32 (#17212)\n* dhcpv6_client: keep integers in retransmission calculations signed (#16992)\n* doc: fix the reference to libcoap removal commit in LOSTANDFOUND.md (#17371)\n* driver/css811: fix read status (#17340)\n* drivers/ccs811: fix of documentation (#17169)\n* drivers/dht: correct interpreting raw values (#16934)\n* drivers/dose: fix standby mode (#17184)\n* drivers/encx24j600: fix unaligned memory access (#17156)\n* drivers/lis3dh: fix unaligned memory access (#17149)\n* drivers/sx126x: fix sync word and TX PA configuration (#17138)\n* ethos: move bulk of state machine out of ISR context (#17265)\n* Fix NDEBUG compilation problems (#14364)\n* gnrc_ipv6_nib: queue packets that trigger probing on border router (#16947)\n* ieee802154 / tests/unittests: fix all-asan reported errors (#17329)\n* Makefile.base: cleanup non selected source object files (#16945)\n* Makefile.base: do not clean objects of bindist modules (#16981)\n* makefile.dep: require `arch_%` `cpu_core_%` features first (#17224)\n* murdock: don't run can_fast_ci_run if `FULL_BUILD==1` (#17495)\n* nimble: fix nimble_scanner regression bugs (#17334)\n* pkg/arduino_sdi_12: fix for the feather-m0 board (#17501)\n* pkg/ccn-ndn: migrate to ztimer (#17377)\n* pkg/littlefs{,2}: fix compilation with -Wcast-align (#17151)\n* pkg/nimble: version bump to fix broken scanning (#16960)\n* pkg/paho-mqtt: fix memory corruption (#17503)\n* pkg/relic: bump to current master (#17161)\n* pycrypto: use pycryptodome instead (#17107)\n* SECURITY.md: fix broken email reference (#17118)\n* shell/gnrc_icmpv6_echo: Fix hang with no msg queue (#17261)\n* sys/fido2: fix CBOR parsing (#17192)\n* sys/fido2: fix CBOR parsing [backport 2021.10] (#17193)\n* sys/net/dns: mark dns_hdr_t as packed (#17153)\n* sys/net/fib: fix compilation with -Wcast-align (#17194)\n* sys/net/gcoap: Use socket _buf API to recognize truncated requests (#16378)\n* sys/posix/socket: align struct sockaddr{,_storage} (#17152)\n* sys/posix/socket: use explicit bind (#16852)\n* sys/test_utils/result_output: fix turo_float() precision value (#17036)\n* sys/ztimer/kconfig: enable xtimer compat only with timer backend (#17307)\n* sys/ztimer: don't access non-existent timer (#17409)\n* sys/ztimer: don't default to rtc for ztimer_sec (#17113)\n* sys/ztimer: fix backend selection (#17372)\n* tests/socket_zep: fix automatic test (#17432)\n* tests/unittests: fix unaligned access (#17195)\n* tools/openocd: check OPENOCD_VERIFY after IMAGE_OFFSET is computed (#17251)\n* tools/zep_dispatch: forward based on source addr, not MAC addr (#16957)\n* turo: some json fixes (#17027)\n* usbus/dfu: fix underflow condition while updating firmware (#17128)\n\n\nKnown issues\n============\n\nNetwork related issues (53)\n---------------------------\n\n* 6lo gnrc fragmentation expects driver to block on TX (#7474)\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* at86rf2xx: lost interrupts (#5486)\n* CC2538 RF overlapping PIN usage (#8779)\n* core: \"Invalid read of size 4\" (#7199)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* General 802.15.4/CC2538 RF driver dislikes fast ACKs (#7304)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_rpl: nib route not updated when topology / DODAG changes (#17327)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* net: netdev_driver_t::send() doc unclear (#10969)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* openthread: does not build on current Arch (#10809)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* tests/lwip: does not compile for IPv4 on 6LoWPAN-based boards. (#17162)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* Unclear how Router Solicitations are (or should be) handled (#15926)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (15)\n-------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n* tests: xtimer_drift gets stuck on native (#6052)\n* xtimer mis-scaling with long sleep times (#9049)\n* xtimer: add's items to the wrong list if the timer overflows between\n  _xtimer_now()  and irq_disable() (#7114)\n* xtimer_set_msg: crash when using same message for 2 timers (#10510)\n* xtimer_usleep stuck for small values (#7347)\n* xtimer_usleep wrong delay time (#10073)\n\nDrivers related issues (17)\n---------------------------\n\n* (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n  timeout (#14439)\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* ESP32 + DHT + SAUL reading two endpoints causes freeze. (#12057)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (6)\n-------------------------\n\n* examples/ccn-lite: floating point exception while testing on native (#15878)\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n* SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n\nOther platforms related issues (21)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* arm7: printf() with float/double not working (#11885)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/cortexm_common: irq_enable returns the current state of\n  interrupts (not previous) (#10076)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n* Incorrect default $PORT building for esp32-wroom-32 on macOS (#10258)\n* MIPS: toolchain objcopy doesn't work and no .bin can be generated (#14410)\n* MPU doesn't work on cortex-m0+ (#14822)\n* newlib-nano: Printf formatting does not work properly for some\n  numeric types (#1891)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n\nBuild system related issues (14)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* LTO broken (binaries too large) (#16202)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: Setting constants on compile time doesn't really set them\n  everywhere (#3256)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n* Windows AVR Mega development makefile Error (#6120)\n\nOther issues (53)\n-----------------\n\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* `make term` output is inconsistent between boards, `ethos` and\n  `native` (#12108)\n* assert: c99 static_assert macro doesn't function for multiple\n  static_asserts in the same scope (#9371)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* boards/saml11-xpro: second UART is broken (#17206)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* C++11 extensions in header files (#5561)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* cpu/stm32/periph/rtc overflow error (#16574)\n* cpu/stm32: some tests are failing on CM33 (l5, u5) (#17439)\n* doc/LOSTANDFOUND: not rendered as expected (#17063)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* File systems report names with leading slashes (#14635)\n* flashing issue on frdm-k64f (#15903)\n* frdm-k22f failing tests/periph_flashpage (#17057)\n* gcoap_dtls: Selecting transport at run time is not possible (#16674)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* lwip: drivers/at86rf2xx/at86rf2xx_netdev.c invalid state during TCP\n  disconnect (#17209)\n* lwip: invalid state transition on ieee802154_submac users (#17208)\n* Making the newlib thread-safe (#4488)\n* mcuboot: flashes but no output (#17524)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* newlib-nano: Printf formatting does not work properly with `\"PRIu8\"` (#17083)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* Possible memset optimized out in crypto code (#10751)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n* RIOT cannot compile with the latest version of macOS (10.14) and\n  Xcode 10 (#10121)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* scheduler: priority inversion problem (#7365)\n* sys/fmt: Missing tests for fmt_float, fmt_lpad (#7220)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/periph_flashpage: failing on stm32l475ve (#17280)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests/thread_float: crashes on avr-rss2 (#16908)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Tracker: Reduce scope on unintended COMMON variables (#2346)\n* usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 179 known issues in this release\n\nFixed Issues since the last release (2021.10)\n=============================================\n\n- sx127x: wrong RSSI values (#17451)\n- drivers/aip31068: initialization fails in most cases when using\n  esp_i2c_sw (#17311)\n- cpu/esp32: esp_wifi_enterprise compilation error (#17305)\n- ethos: race condition seems to cause packet loss (#17254)\n- tests/lwip_sock_ip: failing on `native` when using IPV4 (#17144)\n- Sam boards: isr_eic call all IRQ raised without taking into account\n  their status (enabled/disabled) (#16978)\n- esp8266: Hangs when erasing spi sector on mtd0 if using esp_wifi (#16281)\n- esp32: can't use newer C++ standard than c++11 (#15685)\n- tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1 (#14572)\n- Different build behavior between `murdock` and\n  `riot/riotbuild:latest` image (#9645)\n- pkg: libcoap is partially broken and outdated (#7737)\n\n11 fixed issues since last release (2021.10)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\n\nRIOT-2021.10 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2021.10 release includes:\n\nThe last three months again brought many new features, fixes and improvements\nto the RIOT codebase. There is new hardware support, new helper functions and\nmany new modules that help with building IoT applications.\n\nSome of the new features are:\n\nGCOAP DTLS\n----------\n\nThe GCOAP CoAP library now supports transport encryption via tinyDTLS.\nThis is a compile-time toggle, so either all requests are encrypted or none.\nThere is already a PR (#16688) that will allow to mix encrypted and unencrypted\nrequests.\n\nFIDO2 support\n-------------\n\nWe now have an implementation of the Fast Identity Online 2 (FIDO2) specification.\nWith this you can use any RIOT device with USB support as an authentication token\nsimilar to the YubiKey.\n\nRPL-over-BLE\n------------\n\nThe 6LoWPAN over Bluetooth Low Energy module has gained support for the RPL\nrouting protocol. With this it's now possible to set up IPv6 based mesh networks\nover BLE on chips supported by the Nimble Bluetooth stack.\n\nGNRC TCP\n--------\n\nRIOT's native GNRC network stack now has support for the TCP protocol via the\nsocket API. With this you can switch between LWIP and GNRC without changing your\napplication.\n\nDHCPv6 relay agent\n------------------\n\nThe DHCP module can now act as a relay, forwarding DHCPv6 requests for\nmultihop-operation.\n\nDHCPv6 IA_NA support\n--------------------\n\nThe DHCPv6 client can now also request non-temporary addresses as an alternative\nto Stateless Access Autoconfiguration (SLAAC) that is used by default.\nThe feature can be enabled by selecting the `dhcpv6_client_ia_na` module.\n\ngnrc_ipv6_auto_subnets\n----------------------\n\nThis new module allows to split a large IPv6 prefix into smaller ones that can\nbe used to configure downstream interfaces with a prefix.\nThe process can be repeated recursively for a cascading subnet topology.\n\nThis can be a lightweight alternative to DHCPv6 that only relies on router\nadvertisements.\n\nFor more details on this, see the talk on the 2021 RIOT summit.\n\nUDP benchmark\n-------------\n\nThe examples section has gained a UDP benchmark.\nThis can be used as a network stress test and is accompanied by a host tool\n(`dist/tools/benchmark_udp`) that acts as the benchmark server to which the\nbenchmark clients will connect.\n\nURI template processor\n----------------------\n\nURI templates up to level 3 (according to RFC 6570) can now be parsed with this\ntool.\n\nriotboot serial flasher\n-----------------------\n\nRIOT's native bootloader has gained the ability to load a firmware via UART.\nThis allows to program a board without the need for external programmers, a\nserial console is enough.\n\nRTC mem for sam0 and STM32\n--------------------------\n\nMany real-time clocks have the ability to store a few bytes in their memory as\nuser data. This memory is retained across reboots and deep sleep.\n\nWe now have an interface for this feature and implemented it on SAM L21,\nSAM D5x/E5x and STM32.\n\nLWIP improvements\n-----------------\n\nThe alternative LWIP network stack can now make use of multiple interfaces.\nInitialisation is done using the new XFA (cross-file array) feature so new\ndrivers can be added by only adding a single file.\n\nAdvanced topologies in ZEP dispatcher\n-------------------------------------\n\nWith `socket_zep` and the ZEP dispatcher it is possible to simulate a virtual\nIEEE 802.15.4 network with `native` nodes.\nZEP dispatcher has now gained support for lossy connections that make this\nsimulation behave closer to reality.\n\nThere are also PRs pending to automatically generate such topologies (#16889)\nand to hook up the ZEP dispatcher to the foren6 network visualizer (#16879).\n\nRIOT_VERSION_CODE macro\n-----------------------\n\nWe have added a `RIOT_VERSION_CODE` macro that can be used by external\nmodules / boards to check against which RIOT version it is compiled.\n\nThis allows to react to API changes if the module is built against different\nversions of RIOT.\n\ngnrc_netif_ipv6_wait_for_global_address()\n-----------------------------------------\n\nFor apps that want to connect to a remote server, send some data and then go back\nto sleep, there is now the new `gnrc_netif_ipv6_wait_for_global_address()` function.\n\nThis function blocks until a global address has been configured (e.g. via router\nadvertisement) or a timeout happens.\nSo no more guessing if a connection can yet be established or if the interface is\nnot configured yet.\n\nThis feature depends on the `gnrc_netif_bus` module.\n\nnetutils_get_ipv6()\n-------------------\n\nThis simple function can parse a IPv6 address from a string.\nBut that's not all - if the `sock_dns` module is enabled, the string can also\nbe a hostname which will then be resolved.\n\nThis provides a small and simple alternative to `getaddrinfo()` that can be used\nby shell commands and applications alike.\n\ngnrc_icmpv6_echo corruption detection\n-------------------------------------\n\nOn Linux the `ping` command from iputils has the neat feature that it fills the\npayload with of the ICMP echo request with a pattern that is then echoed back by\nthe receiver.\n\nThat means it can detect if the payload got corruped on the way, e.g. by broken\nfragmentation or other errors.\n\nThe RIOT `ping` command now also implements this feature that lets you easily\ndetect if something broke along the way.\n\nNew Hardware Support\n--------------------\n\nIn this cycle we have seen the addition of three new MCU families!\nOur latest additions are the Raspberry Pi RP2040 and the GD32VF103 RISC-V MCU\nfrom GigaDevice.\n\nBoth only have very basic support so far (only GPIO, UART and timers), which\nstill leaves many low hanging fruits for adding peripheral drivers.\nPatches welcome!\n\nThe nRF9160 is closer to it's nRF52 siblings, but brings GPS and LTE-M/NB-IoT\nperipherals. While we are not there yet, there is ongoing work to also support\nthese in RIOT.\n\nThe ATxmega family of 8-bit MCUs can now make use of the EBI interface to use\nexternal memory. The new XMEGA-A1 Xplained already makes use of this feature.\n\nOn the STM32 side we have now support for the `nucleo-wl55jc` and it's LoRa\ntransceiver.\nThe IEEE 802.15.4 / BLE radio on the STM32WB family is however still waiting\nfor a driver.\n\nThe common LM75 family of temperature drivers is now supported by RIOT.\n\nThe ethernet driver for the SAM E5x line of MCUs is now stable.\n\nThe sub-MAC layer that implements common MAC features for IEEE 802.15.4 radios\nhas again seen many improvements.\nIt is currently used by the nRF52 and CC2538 line of MCUs.\n\nAPI changes\n-----------\n\nThe `spi_acquire()` no longer returns an error code but will throw an assertion\nif called with the wrong parameters.\nThis allows to speed up SPI operations a bit as SPI parameters are usually fixed\nat compile time.\n\nThe `gnrc_netdev_default` was replaced by the network stack agnostic\n`netdev_default` module.\n\nFor now `gnrc_netdev_default` remains an alias for `netdev_default`, but it will\nbe removed in a future release.\n\nSummary\n-------\n\n263 pull requests, composed of 590 commits, have been merged since the\nlast release, and 14 issues have been solved. 36 people contributed with\ncode in 98 days. 1756 files have been touched with 138909 (+) insertions and\n12027 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\nCore (3)\n--------\n\n+ core/sched: add runq_callback hook and runq inspection functions (#16463)\n+ core: add irq_is_enabled() function to irq interface (#11117)\n* core/msg doc: Clarify; elaborating on interaction with queue (#16794)\n\nSystem Libraries (12)\n---------------------\n\n+ riotboot: implement serial flasher (#15493)\n+ FIDO2 support in RIOT (#16489)\n+ test_utils: add UDP benchmark (#16710)\n+ uri_parser: provide function to split query (#16695)\n+ usbus/hid_io: add missing header file, add RX callback function (#16689)\n+ ut_process: initial import of a URI template processor (#16702)\n* sys/picolibc_syscalls_default: support new picolibc stdio globals\n  [backport 2021.10] (#17020)\n* sys/random/fortuna: change interval ressed to ms (#16594)\n* sys/shell/commands/gnrc_icmpv6_echo: test for ICMPv6 reply corruption (#15622)\n* sys/shell/commands: gnrc_icmpv6_echo: use msg_avail() (#16611)\n* uri_parser: constify result (#16707)\n+ sys/credman: add key load functions (#16263)\n\nNetworking (49)\n---------------\n\n+ dhcpv6_relay: initial import of a lightweight DHCPv6 relay agent (#16606)\n+ gnrc/netif: add gnrc_netif_ipv6_wait_for_global_address() (#16824)\n+ gnrc_ipv6_nib: handle route information option and add config to add\n  to final RAs (#16568)\n+ gnrc_ipv6_simple_subnets: auto-configuration for nested subnets on a\n  simple tree topology (#16536)\n+ gnrc_netif: add gnrc_netif_ipv6_add_prefix() & helper functions (#16672)\n+ gnrc_sock_tcp: add gnrc sock tcp (#16494)\n+ gnrc_tcp: Add GNRC_TCP_NO_TIMEOUT (#16735)\n+ net/BLE: add support for RPL-over-BLE (#16364)\n+ net/gcoap: support DTLS (#15549)\n+ net/gnrc_lorawan: implement unconfirmed uplink redundancy (#15946)\n+ net/netif: add function to get interface by name from a buffer (#16709)\n+ netutils: add netutils_get_ipv6() (#16634)\n+ sys/net/dhcpv6: Add IA_NA support to the DHCPv6 client (#16228)\n+ tests/gnrc_lorawan: add initial tests (#16654)\n* dhcpv6_client: make IA_PD an optional module (#16658)\n* dhcpv6_client: mrd calculation fixed (#16679)\n* dhcpv6_client: refactor to use `event_timeout` for non-sock timeouts (#16668)\n* drivers/sx126x : r/NETOPT_RX_TIMEOUT/NETOPT_RX_SYMBOL_TIMEOUT (#16599)\n* gnrc/ipv6_auto_subnets: relax topology requirements (#16750)\n* gnrc/nib: consolidate prefix removal code in\n  _nib_offl_remove_prefix() (#16729)\n* gnrc_ipv6_nib: provide functions to get offset of public timestamps (#16706)\n* gnrc_netif_pktq: schedule immediately if timer us is equal to zero (#16745)\n* gnrc_tcp: align with sock tcp (#16493)\n* gnrc_tcp: experimental feature \"dynamic msl\" (#16764)\n* gnrc_tcp: handle zero size buffers (#16738)\n* ipv6: fix typo in ipv6_addr_to_str documentation (#16828)\n* netdev/lora: fix size of NETOPT_RX_SYMBOL_TIMEOUT (#16604)\n* sock_dns: factor out message parsing and composition (#16669)\n* sys/net/dhcpv6: Refactor DHCPv6 client (#16728)\n* sys/net/dhcpv6: Refactor IA_NA implementation (#16724)\n* sys/net/netopt: Drop deprecated NETOPT_MAX_PACKET_SIZE (#16023)\n* tree-wide: avoid explicit cast to netdev (#16577)\n\nPackages (8)\n------------\n\n+ pkg/wakaama: add get set functions and cleanup client connection (#16203)\n* make: support package mirrors [backport 2021.10] (#16996)\n* pkg/edhoc-c: ignore llvm flagged error (#16871)\n* pkg/edhoc-c: remove nimble blacklist (#16819)\n* pkg/edhoc: bump version (#16708)\n* pkg/nanocbor: bump version (#16829)\n* pkg/tinydtls: bump version (#16624)\n* pkg/nimble/autoadv: make AD flag optional (#16703)\n* pkg/nimble: bump version, rmv patches (#16830)\n* pkg/nimble: configure BLE_LL_INIT_SLOT_SIZE to 1 (#16602)\n* pkg/nimble: have RIOT always initialize nimble timers (#16623)\n* pkg/nimble: use tinycrypt pkg (#16540)\n+ pkg/lwip: add auto-init for DOSE & at86rf215, cc2538_rf (#16761)\n+ pkg/lwip: Add thread safety check when using DEVELHELP (#16259)\n+ pkg/nimble/netif: add nimble_netif_accept_direct() (#16603)\n+ pkg/nimble/scanner: add function to set scan duration (#16701)\n* pkg/lwip: Allow initializing different types of netifs (#16162)\n* pkg/lwip: implement netif_get_name() (#16741)\n* pkg/semtech-loramac: forward uplink schedule request to upper layer (#16961)\n* pkg/tinydtls: handling of close_notify (#16422)\n\nBoards (19)\n-----------\n\n+ boards/{pic32-wifire,6lowpan-clicker}: Add CLOCK_CORECLOCK (#16607)\n+ boards: Introduce atxmega-a1-xplained board (#16289)\n+ gd32v/seeedstudio-gd32: Initial support (#16036)\n* boards/adafruit-clue: fix doxygen warnings (#16847)\n* boards/lora-e5-dev: initial support (#16660)\n* boards/nrf52: replace gnrc_netdev_default with netdev_default (#16788)\n* boards/saml21-xpro: configure UART & SPI on EXT2, 3 (#16694)\n\nCPU (27)\n--------\n\n+ cpu/atxmega/periph: Add ebi driver (#16288)\n* cpu/atxmega: Fix features config (#16742)\n+ cpu/nrf9160: add initial support for nRF9160DK board (#16650)\n+ cpu/nrf9160: add twi and spi support (#16814)\n+ cpu/rpx0xx: add periph timer (#16627)\n+ cpu/rpx0xx: port RIOT to the Raspberry Pi RP2040 MCU (#16609)\n+ cpu/stm32: added ADC for g0 (#16885)\n+ cpu/stm32: added APB12 bus multiplier entry for applicable cpus (#16881)\n+ cpu/nrf52: i2c: add support for 16-bit register addresses (#16711)\n+ cpu/riscv: add CPU_ARCH information (#16877)\n+ cpu/stm32: add rtc_mem (#16802)\n+ cpu/stm32: added RAM_LEN identifier for stm32g03x (#16886)\n+ stm32/spi : Add check for GPIO_UNDEF (#16625)\n+ cpu/nrf52: add SAUL driver for VDDH sensor (#16003)\n* avr_libc_extra: implement strerror() (#16717)\n* cpu/cc2538: don't pollute global namespace with cc2538_rfcore.h (#16863)\n* cpu/kinetis: fix RAM_LEN calculation (#16608)\n* cpu/native: fix thread_yield_higher() with IRQs disabled (#16754)\n* cpu/native: make use of stdio_read() / stdio_write() (#16822)\n* cpu/rpx0xx: fix minor gpio warnings (#16685)\n* cpu/sam0: improve ethernet driver resilience (#16683)\n* cpu/stm32/periph/rtc_all.c for CPU_FAM_STM32L5 support. (#16656)\n* riscv: Simplify reset trampoline (#16876)\n\nDevice Drivers (7)\n------------------\n\n* drivers/cc2538_rf: remove cc2538_rf_netdev_legacy (#16628)\n* drivers/nrf802154: remove nrf802154_rf_netdev_legacy (#16630)\n* drivers/sx127x: remove ZTIMER_USEC dependency (#15030)\n* ieee802154/radio_hal: detach hal descriptor from driver (#16534)\n* ieee802154/submac: reimplement using FSM (#16746)\n* ieee802154/submac: avoid race condition between RX_DONE and\n  ACK_TIMEOUT (#16964)\n* ieee802154/submac: fix leftovers of #16746 (#16823)\n+ drivers/dose: make use of start condition received interrupt (#16506)\n+ drivers/periph: define rtc_mem and implement it for sam0_common (#16758)\n+ drivers/cc110x: add power off (sleep) functions (#16232)\n+ drivers/lm75: add SAUL integration (#16763)\n+ drivers/lpsxxx: add support for lps22hh (#16880)\n+ rtt_rtc: add rtt_rtc_settimeofday() & rtt_rtc_gettimeofday() (#16682)\n* drivers/at86rf215: remove msg queue dependency (#16747)\n* drivers/lm75: driver for the lm75 sensor and derivatives (#16678)\n+ sx126x: add support for multiple simultaneous variants (#16597)\n+ drivers/ili9341: add rotation mode to ili9341_params_t (#16773)\n+ drivers/sx126x: Add support for Nucleo -WL55JC (#16579)\n* drivers/cc110x: use pseudo-modules for band selection (#16865)\n\nDocumentation (9)\n-----------------\n\n+ boards/nrf52840dongle docs: Introduce \"quick start\" section (#15658)\n+ dist/tools/doccheck: add exclude file for warnings and use it (#16779)\n* cpu: fix doxygen grouping warnings (#16813)\n* doc/doxygen/src/advanced-build-system-tricks: fix no udev link (#16810)\n* doc/doxygen: increase dot graph max nodes (#16686)\n* doc/porting-boards.md: improve with porting graph and reference\n  section (#15981)\n* feather-nrf52840: several fixes to documentation (#16777)\n* net/ieee802154_security doc: Shape security expectations (#16841)\n* README.md: fix doc link (#16786)\n\nBuild System / Tooling (8)\n--------------------------\n\n+ build system: add machine-readable RIOT_VERSION_CODE macro (#16765)\n+ build system: add VERBOSE_ASSERT flag (#16884)\n+ make: add capability to check config for `test-with-config` (#16795)\n+ makefiles/clang-tidy: initial support (#16509)\n* dist/tools/compile_and_test_for_board: fix W1514 (#16772)\n* dist/tools/doccheck: generate exclude_patterns using C.UTF-8 (#16846)\n* dist/tools/pyterm: ipv6 address support for tcp_serial option (#16726)\n* dist/tools: use f-strings where possible (#16867)\n* Makefile.include: only warn if not curl, wget, unzip, 7z (#16784)\n+ tools/zep_dispatch: add support for advanced topologies (#15773)\n* Remove `which` from shell invocations (#16776)\n\nKconfig (5)\n-----------\n\n+ cpu/cc2538: Add Kconfig support (#16719)\n+ makefiles/kconfig.mk: generate config file from RIOT_CONFIG_%\n  environment variables (#16052)\n* drivers/lm75: fixed a typo in Kconfig (#16825)\n* drivers/mtd: fix Kconfig dependencies (#16836)\n* makefiles/kconfig.mk: force SHOULD_USE_KCONFIG if config file is\n  present (#16641)\n\nExamples (3)\n------------\n\n+ examples/lorawan: add LoRaWAN keys to DOCKER_ENV_VARS (#17010)\n* examples/nimble_*: use nimble_autoadv module (#13506)\n+ examples/suit_update: Add compatibility with native (#15994)\n\nTesting (10)\n------------\n\n+ dist/pythonlibs/riotctrl_shell/tests/common: add expect to mock (#17003)\n+ gnrc_tcp: refactor tests (#16461)\n+ tests/gnrc_dhcpv6_client: add script to check if $IFACE exists (#16797)\n* CODEOWNERS: remove Robert Hartung (#16858)\n* gh/workflows/release-tests: update LoRaWAN parameters to ttnv3\n  [backport 2021.10] (#17013)\n* Small fatfs usability fixes (#16800)\n* tests/gnrc_dhcpv6_client: kill potential previous Kea session (#16820)\n* tests/ieee802154_hal: check error codes and improve error reporting (#16556)\n* tests/unittests/tests-ipv6_hdr: fix too short ipv6_hdr_t allocations (#16616)\n* tests/ieee802154_submac: remove netdev dependency (#16826)\n\nAPI Changes (5)\n---------------\n\n* drivers/ina3221: style fixes and improvements (#15915)\n* drivers/periph_spi: let spi_acquire return void (#15902)\n* gnrc_tcp: rewrite passive open (#16459)\n* nanocoap & gcoap: allow path to be non-`\\0`-terminated. (#16712)\n* sys/net/nanocoap: block_finish returns if more are expected (#16704)\n\nUncategorized (3)\n-----------------\n+ README.md: add graphical logo (#16856)\n+ release-notes.txt: add 2021.07 release notes (#16651)\n* README.md: Expose HiL CI overview link (#16720)\n* Remove duplicated includes introduced in #15902 (#16798)\n* treewide: Fix  \"too many consecutive empty lines\" warnings (#16733)\n\nAnd 63 minor changes.\n\nDeprecations\n============\n\nDeprecations (1)\n----------------\n\n* gnrc: deprecate gnrc_netdev_default, use netdev_default instead (#16744)\n\n\nBug fixes (32)\n==============\n\n* boards/nucleo-wl55jc: add SX126X_PARAM_TYPE to board.h (#16646)\n* build system: add fallback for RIOT_VERSION_CODE (#16895)\n* cpu/avr8_common: Fix link with binutils > 2.35.2 (#16790)\n* cpu/cortexm: ldscripts: bkup-ram -> bkup_ram (#16753)\n* cpu/esp_common: fix boot issue on ESP8266 (#16639)\n* cpu/saml21: uart: use arithmetic baud rate mode (#16693)\n* dhcpv6_client: keep integers in retransmission calculations signed\n  [backport 2021.10] (#16995)\n* drivers/cc2538_rf: fix deadlock when receiving too fast. (#16716)\n* drivers/sx126x: fix netdev send and recv function (#16570)\n* event_timeout: check clock before removing ztimer on clear (#16667)\n* gnrc/nib: gnrc_ipv6_nib_get_next_hop_l2addr(): only assume neighbor\n  cache entries to always be on-link (#16671)\n* gnrc/sock: recv avoid spinning xtimer (#16831)\n* gnrc_ipv6_nib: consider largest prefix match when deciding if host\n  on-link (#16557)\n* gnrc_ipv6_nib: queue packets that trigger probing on border router\n  [backport 2021.10] (#16949)\n* gnrc_lorawan: fix gnrc_pktbuf_release_error (introduced by #16080) (#16617)\n* gnrc_sock: imply end-point netif only if unset (#16643)\n* ieee802154/submac: fix initialization code (#16533)\n* Makefile.base: cleanup non selected source object files [backport\n  2021.10] (#16953)\n* mtd: fix mtd_write_page() across sector boundaries (#16848)\n* net/gnrc_lorawan: fix pick channel (#16664)\n* net/lorawan: Revert #16604 and fix NETOPT_RX_SYMBOL_TIMEOUT\n  documentation (#16640)\n* netutils: get interface by name rather than ID (#16673)\n* pkg/lwip: Fix compilation without IPv6 (#16762)\n* pkg/lwip: Fix DHCP autostart (#16636)\n* pkg/mynewt-core: initial commit (#16348)\n* pkg/nimble/autoconn: stop scan/adv on NETIF_ABORT_SLAVE (#16699)\n* pkg/wakaama: fix object common `get` functions (#16691)\n* Revert \"Remove `which` from shell invocations\" (#16803)\n* tests/gnrc_dhcpv6_client: Fix for newer Kea versions and remove sudo\n  requirement (#16792)\n* tests/gnrc_dhcpv6_client: honor configured $IFACE in Kea config (#16796)\n* tinydtls: sock_dtls: only use ifindex with link-local addresses (#16910)\n\n\nKnown issues\n============\n\nNetwork related issues (52)\n---------------------------\n\n* 6lo gnrc fragmentation expects driver to block on TX (#7474)\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* at86rf2xx: lost interrupts (#5486)\n* CC2538 RF overlapping PIN usage (#8779)\n* core: \"Invalid read of size 4\" (#7199)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* General 802.15.4/CC2538 RF driver dislikes fast ACKs (#7304)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* ieee802154_submac: IPv6 fragmentation broken (#16998)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* net: netdev_driver_t::send() doc unclear (#10969)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* openthread: does not build on current Arch (#10809)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg: libcoap is partially broken and outdated (#7737)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* two nodes livelock sending neighbor solicitations back and forth\n  between each other (#16670)\n* Unclear how Router Solicitations are (or should be) handled (#15926)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (15)\n-------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n* tests: xtimer_drift gets stuck on native (#6052)\n* xtimer mis-scaling with long sleep times (#9049)\n* xtimer: add's items to the wrong list if the timer overflows between\n  _xtimer_now()  and irq_disable() (#7114)\n* xtimer_set_msg: crash when using same message for 2 timers (#10510)\n* xtimer_usleep stuck for small values (#7347)\n* xtimer_usleep wrong delay time (#10073)\n\nDrivers related issues (17)\n---------------------------\n\n* (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n  timeout (#14439)\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* ESP32 + DHT + SAUL reading two endpoints causes freeze. (#12057)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* Two bugs may lead to NULL dereference. (#15006)\n\nNative related issues (6)\n-------------------------\n\n* examples/ccn-lite: floating point exception while testing on native (#15878)\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native getchar is blocking RIOT (#16834)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n* SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n\nOther platforms related issues (23)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* [TRACKING] Fixes for automatic tests of ESP32 boards. (#12763)\n* arm7: printf() with float/double not working (#11885)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/cortexm_common: irq_enable returns the current state of\n  interrupts (not previous) (#10076)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* esp32: can't use newer C++ standard than c++11 (#15685)\n* esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n* esp8266: Hangs when erasing spi sector on mtd0 if using esp_wifi (#16281)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n* Incorrect default $PORT building for esp32-wroom-32 on macOS (#10258)\n* MIPS: toolchain objcopy doesn't work and no .bin can be generated (#14410)\n* MPU doesn't work on cortex-m0+ (#14822)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n* tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1 (#14572)\n\nBuild system related issues (15)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* Different build behavior between `murdock` and\n  `riot/riotbuild:latest` image (#9645)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* LTO broken (binaries too large) (#16202)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: Setting constants on compile time doesn't really set them\n  everywhere (#3256)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n* Windows AVR Mega development makefile Error (#6120)\n\nOther issues (45)\n-----------------\n\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* `make term` output is inconsistent between boards, `ethos` and\n  `native` (#12108)\n* assert: c99 static_assert macro doesn't function for multiple\n  static_asserts in the same scope (#9371)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* C++11 extensions in header files (#5561)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* File systems report names with leading slashes (#14635)\n* flashing issue on frdm-k64f (#15903)\n* Gcoap drops long packages instead of gracefully erring out (#14167)\n* gcoap_dtls: Selecting transport at run time is not possible (#16674)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* ieee802154_security: Nonce is reused after reboot (#16844)\n* Making the newlib thread-safe (#4488)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* Possible memset optimized out in crypto code (#10751)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n* RIOT cannot compile with the latest version of macOS (10.14) and\n  Xcode 10 (#10121)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* Sam boards: isr_eic call all IRQ raised without taking into account\n  their status (enabled/disabled) (#16978)\n* scheduler: priority inversion problem (#7365)\n* sys/fmt: Missing tests for fmt_float, fmt_lpad (#7220)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests/thread_float: crashes on avr-rss2 (#16908)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Tracker: Reduce scope on unintended COMMON variables (#2346)\n* usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 173 known issues in this release\n\nFixed Issues since the last release (2021.07)\n=============================================\n\n- make check_bindist fails to find reference to `main` (#16977)\n- dhcpv6_client: no prefix on downstream interface via IA_PD (#16971)\n- Deleted or non selected source files are linked in (#16942)\n- tests/thread_float: broken on AVR (#16896)\n- Kconfig/tinydtls: Unable to compile `examples/dtls-sock` with\n  `CONFIG_DTLS_ECC` enabled (#16873)\n- particle: error while flashing using Docker build and DFU mode (#16749)\n- test/pkg_u8g2: using SDL is failing (#16714)\n- cpu/saml21: can't set baud rate on SERCOM5 (#16692)\n- sam0_eth: extremely long time to RX (frames stuck in buffer?) (#16451)\n- w5100 driver's improvement (#16417)\n- border_router: significant packet loss when sending out packets using\n  USB cdc-ecm on nrf52 (#16411)\n- XFA support on AVR and MSP430 broken with binutils 2.36.1 (#16251)\n- SDL2 does not work due to missing getpid (#13501)\n- hello-world example crashes on BOARD=nucleo-f446re (#9775)\n\n14 fixed issues since last release (2021.07)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nIRC, Matrix and Forum\n=====================\n* Join the RIOT IRC channel at: irc.freenode.net, #riot-os\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\nRIOT-2021.07 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release\n==================\n\nThe 2021.07 release includes:\n\n- Many improvements to ztimer usage\n- Added nucleo-wl55jc and Seeeduino XIAO boards\n- stm32f1 kconfig support\n- Fixed multiplication overflow in calloc, a.k.a. BadAlloc, for all supported\n  platforms\n\n\n169 pull requests, composed of 339 commits, have been merged since the\nlast release, and 16 issues have been solved. 37 people contributed with\ncode in 69 days. 685 files have been touched with 23625 (+) insertions and\n7000 deletions (-).\n\n\nNotations used below\n====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\n\nNew features and changes\n========================\n\n\nSystem Libraries (21)\n---------------------\n\n+ congure_mock: add capability to provide actual methods (#16133)\n+ dhcpv6_client: add DNS recursive name server option handling (#16585)\n+ drivers/ethos: enable multiple instances (#16544)\n+ drivers/slipdev: report NETOPT_ADDRESS to simulate l2 address (#16531)\n+ gnrc_lorawan: add support for RTT (ztimer) (#14558)\n+ sys/byteorder: add little endian to/from buf functions (#16363)\n+ sys/crypto: Enable support for AES-192, AES-256 (#16183)\n+ sys/event/timeout: add option to use ztimer as backend (#16505)\n+ sys/event: add periodic timeout event (#16507)\n+ sys/ps: enable runtime_usec output for the ps command (#16470)\n* gnrc_dhcpv6_client_6lbr: choose downstream if as !upstream (#16530)\n* net/emcute: Allow RETAIN flag to be set on incoming PUBLISHes (#16326)\n* net/gnrc/rpl: use ztimer_msec if available (#16339)\n* net/grnc/sixlowpan/ctx: use ztimer_msec if available (#16340)\n* sys/arduino: replace xtimer by ztimer as high-level background timer (#15317)\n* sys/auto_init: move sock_dtls after network stack initialization (#16528)\n* sys/Makefile.dep: Some cleanup (#16268)\n* sys/net/gnrc/netif: Make aac_mode a flag field (#16596)\n* sys/trickle: migrate from xtimer to ZTIMER_MSEC (#16322)\n* sys/ztimer: use highest frequency for nrf51 as well (#16572)\n* ztimer: pull ztimer_periph_rtt for ZTIMER_MSEC if available (#16553)\n* sys/shell/sc_gnrc_rpl: Err out early if RPL not even started (#16358)\n\nNetworking (4)\n--------------\n\n+ drivers/nrf24l01p_ng: add hook nrf24l01p_ng_eui_get() (#16296)\n* pkg/nimble/netif: allow to apply and enforce random and unique\n  connection intervals (#16372)\n* pkg/semtech-loramac: don't force ztimer rtt backend (#16566)\n\nPackages (8)\n------------\n\n+ pkg/nanopb: add dependency for C++ source files (#16504)\n+ pkg/edhoc-c: initial commit (#16295)\n+ pkg: add QR Code generator package (#16462)\n* pkg/libcose: Update to latest master (#16464)\n* pkg/lvgl: remove internal thread (#16486)\n* pkg/nanocbor: bump version (#16362)\n* pkg/pkg.mk: avoid git fetch if commit is already there (#16514)\n* pkg/wakaama: remove gnrc dependency (#16563)\n\nBoards (10)\n-----------\n\n+ board/feather-nrf52840: add uf2 boot loader (#16276)\n+ boards/atmega: add USEC_ADJUST values (#16554)\n+ boards/esp32-wrover-kit: add dependency to ILI9341 (#16488)\n+ boards/nucleo-wl55jc: Initial support (#16255)\n+ boards/z1: add CONFIG_ZTIMER_USEC_ADJUST_% values (#16555)\n+ boards: Adding board support for the Seeeduino XIAO (#16469)\n* board/nrf52840dongle: fix and enhance pin mapping for I2C and SPI (#16401)\n* Configuration extension for arduino-nano-33-iot (#16301)\n* cpu/kinetis: use LPTMR as rtt backend (#16546)\n* makefiles/stdio.inc.mk: stdio_uart require uart or lpuart (#16331)\n\nCPU (12)\n--------\n\n+ cpu/atxmega/periph: Add spi driver (#16290)\n+ cpu/efm32: add RTT_FREQUENCY support to efm32 (#16344)\n+ cpu/esp*: add CLOCK_CORECLOCK (#16361)\n+ cpu/lpc23xx: implement periph/flashpage (#16409)\n+ SAML21 CPU: support 4MHz, 8MHz, 12MHz CORE_CORECLOCK choices (#16433)\n* CPU SAML21: fix timers frequency when using slow clocks (#16446)\n* cpu/avr8_common: fix errno (#16565)\n* cpu/native: make thread stacksize defines overridable (#16457)\n* cpu/sam0_common: UART: Revert \"implement inverted RX & TX\" (#15205)\n* cpu/stm32/periph/rtt_all: RTT peripheral support for CPU_FAM_STM32L5 (#16545)\n* cpu/stm32: Generate the irqs in a reproducible manner (#16511)\n* ieee802154/hal: adapt frame filter and source address matching\n  changes (#15468)\n\nDevice Drivers (13)\n-------------------\n\n+ cpu/atxmega/periph: Add i2c driver (#16306)\n+ cpu/esp_common: Support disabling I2C clock stretching in ESP8266 (#16386)\n+ cpu: add periph_rtt_overflow feature (#16420)\n+ drivers/at86rf215: add RX timestamps (#16365)\n+ drivers/periph: flashpage: add common helper functions (#15908)\n+ drivers/rtt_rtc: implement rtc_get_time_ms() (#16347)\n+ drivers/si70xx: Add support for Si705x sensors (#15684)\n+ drivers/{disp_dev,touch_dev}: add auto_init_screen as default module\n  when used (#16485)\n+ esp8266: Support UART1 and other UART0 pins. (#16387)\n* cpu/sam0_common: only include RTC/RTT symbols if module is used (#16421)\n* driver/bmx280: remove unused xtimer dependency (#16400)\n* drivers/cc2420: register with netdev (#15012)\n* drivers/ccs811: fix default config for ccs811_full (#16454)\n\nDocumentation (5)\n-----------------\n\n+ doc: README: Add documentation on downloads and release cycle (#16345)\n* doc/pkg: provide a longer short description (#16352)\n* docs: Remove references to Freenode from the documentation (#16571)\n* Documentation: Remove mentions of the users@ and devel@ mailing\n  lists. (#16428)\n* README: Update url of documentation (#16436)\n\nBuild System / Tooling (11)\n---------------------------\n\n+ make: introduce QUIETER (#16513)\n+ riotctrl_ctrl: A reset helper class for `native` (#15978)\n+ TAKEOVER: makefiles/color: Add color functions, new attempt (#16434)\n+ tools/dhcpv6-pd_ia: add Linux Mint to installer (#16410)\n+ tools/iotlab-testbed: add support for remote debugger (#16510)\n* esptool: Allow to pass the partition table CSV (#16307)\n* makefiles/boot/riotboot.mk: pass IOTLAB_NODE (#16562)\n* makefiles/boot/riotboot: clean bootloader when cleaning application (#16197)\n* makefiles/info-global.inc.mk: fix DEFAULT_MODULE inclusion (#16435)\n* makefiles/vars.inc.mk: update USE_PROGRAMMER_WRAPPER_SCRIPT comment (#16404)\n* tools/iotlab-tested: several improvements in single board support (#16501)\n\nKconfig (3)\n-----------\n\n+ cpu/stm32f1: Add Kconfig dependency modeling (#16483)\n+ Kconfig: expose IEEE 802.15.4 Security to Kconfig (#16515)\n* pkg/lvgl: bump to latest version + model configuration in Kconfig (#16346)\n\nExamples (2)\n------------\n\n+ examples/lorawan: add missing sx126x descriptor (#16592)\n* examples/gnrc_networking: use ztimer_msec if available (#16343)\n\nTesting (15)\n------------\n\n+ .github: add automatic PR labeler action (#16476)\n+ gh-actions: release-tests: add filter input (#16432)\n+ tests/pkg_qr-code-generator: add disp-dev for esp32-wrover-kit (#16492)\n+ tests/riotboot/flashwrite: add automatic test (#15559)\n* gh-actions/release-tests: export QUIETER to docker (#16581)\n* Simplify kconfig murdock testing (#16487)\n* tests/congure-turo: reset before opening terminal (#16564)\n* tests/disp_dev: improve genericity of application + optimize screen\n  refresh (#16479)\n* tests/gnrc_dhcpv6_client_6lbr: Update test for DHCPv6 MUD option (#16593)\n* tests/malloc: refactor test (#16427)\n* tests/periph_rtt_min: adapt for slower RTTs (#16329)\n* tests/pkg_qr-code-generator: improve display speed in test\n  application (#16466)\n* tests/pkg_tensorflow-lite/Makefile.ci: explicit list (#16354)\n* tests/touch_dev: improve genericity by using auto_init_screen module (#16480)\n* tests/ztimer_periodic: iterate over clocks (#16254)\n\nAPI Changes (3)\n---------------\n\n* build system: Rework EXTERNAL_MODULE_DIRS (#16104)\n* ieee802154: migrate `netdev_ieee802154_dst_filter` to a common\n  ieee802154 (#16576)\n* net/gcoap: change return type from gcoap_req_send() to ssize_t (#16526)\n\nAnd 22 minor changes.\n\nDeprecations\n============\n\nDeprecations (3)\n----------------\n\n* gnrc_lorawan: encode LoRaWAN port in netif header (#16080)\n* tools/testbed: use IOTLAB_NODE=auto instead of auto-ssh (#16491)\n* pkg/openthread: deprecate ot_command related functions (#15664)\n\nRemovals (1)\n------------\n\n- core/lifo: Remove lifo [after 2021.04] (#16098)\n\nBug fixes (34)\n==============\n\n* .github/labeler: quote rules (#16519)\n* core/msg.c: fixed msg_queue_print() (#15168)\n* cpu/atmega_common: RTC: fix off-by-one second normalization &\n  simplify rtc_get_time() (#16442)\n* cpu/esp8266: Fix typo in esp_gdbstub config. (#16304)\n* cpu/sam0/i2c: Handle read with I2C_NOSTOP flag (#16605)\n* cpu/sam0_common: ethernet: fix RX detection (#16383)\n* cpu/stm32/gpio_all: fix IRQ handler for G0/L5/MP1 families (#16319)\n* cpu/stm32/gpio_f1: fix IRQ handler (#16478)\n* cpu/stm32/periph/spi: fix wrong parameter order (#16418)\n* dist/Kconfiglib: fix autoconf header (#16561)\n* doc: fix URLs to the new website (#16445)\n* drivers/lis2dh12: clean up API (#16328)\n* drivers/sx126x: fix netdev send and recv function (#16570)\n* Fix Cortex-M hard faults when building with -O3 or -Ofast (#16414)\n* gnrc_ipv6_nib: consider all local interfaces when looking for address (#16569)\n* gnrc_ipv6_nib: consider all prefixes when deciding on-link next hop (#16532)\n* gnrc_ipv6_nib: get node from proper interface (#16548)\n* gnrc_lorawan: fix undefined state when PSDU is NULL (#16586)\n* gnrc_netif/lorawan: drop netif header on send (#16584)\n* gnrc_sock: imply end-point netif only if unset (#16643)\n* NanoCBOR: Bump version (#16580)\n* net/ieee802154_security: small bugfix and stricter names (#16106)\n* pkg/nanocbor: bump version (#16538)\n* pkg/nimble/netif: fix and optimize NimBLE buffer sizes (#16503)\n* pkg/nimble/netif: fix randomized conn intervals (#16601)\n* pkg/nimble: temporary fix to NimBLE PRNG seed issue (#16338)\n* pkg/qdsa: force qdsa to lowercase (#16552)\n* release-test: fetch host key for lille site (#16575)\n* shell/sc_nimble_netif: fix _connect_name scan dur (#16337)\n* sys/malloc_thread_safety: fix potential overflow in multiplication (#16443)\n* sys/net/gnrc/netif: make gnrc_netif_create() blocking to avoid race\n  condition (#16527)\n* sys/ztimer: convert clock do not require pm (#16573)\n* tests/msg_queue_print: fix test on hw (#16525)\n* tests: small fixes (#16426)\n\n\nKnown issues\n============\n\nNetwork related issues (51)\n---------------------------\n\n* 6lo gnrc fragmentation expects driver to block on TX (#7474)\n* 6lo: RIOT does not receive packets from Linux when short_addr is set (#11033)\n* Address registration handling inappropriate (#15867)\n* app/netdev: application stops working after receiving frames with\n  assertion or completely without error (#8271)\n* at86rf2xx: Dead lock when sending while receiving (#8242)\n* at86rf2xx: lost interrupts (#5486)\n* border_router: significant packet loss when sending out packets using\n  USB cdc-ecm on nrf52 (#16411)\n* CC2538 RF overlapping PIN usage (#8779)\n* core: \"Invalid read of size 4\" (#7199)\n* cpu/esp8266: Tracking open problems of esp_wifi netdev driver (#10861)\n* dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on\n  PC (#14689)\n* driver/mrf24j40: blocks shell input with auto_init_gnrc_netif (#12943)\n* drivers/at86rf215: Incorrect channel number set for subGHz (#15906)\n* DTLS examples cannot send message to localhost (#14315)\n* Emcute cannot create a double-byte name (#12642)\n* ethernet: Missing multicast addr assignment (#13493)\n* ethos: fails to respond to first message. (#11988)\n* ethos: Unable to choose global source address. (#13745)\n* ethos: Unable to handle fragmented IPv6 packets from Linux kernel (#12264)\n* examples/cord_ep: Dead lock when (re-)registering in callback\n  function (#12884)\n* examples/gnrc_border_router: esp_wifi crashes on disconnect (#14679)\n* Forwarding a packet back to its link layer source should not be\n  allowed (#5051)\n* gcoap example request on tap I/F fails with NIB issue (#8199)\n* gcoap: Suspected crosstalk between requests (possible NULL call) (#14390)\n* General 802.15.4/CC2538 RF driver dislikes fast ACKs (#7304)\n* gnrc ipv6: multicast packets are not dispatched to the upper layers (#5230)\n* gnrc_border_router stops routing after a while (#16398)\n* gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n  packet buffer (#12565)\n* gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n  address (#4527)\n* gnrc_rpl: missing bounds checks in _parse_options (#16085)\n* gnrc_sock_udp: Possible Race condition on copy in application buffer (#10389)\n* gomach: Resetting netif with cli doesn't return (#10370)\n* LoRaWan node ISR stack overflowed (#14962)\n* lwip_sock_tcp / sock_async: received events before calling\n  sock_accept() are lost due to race condition. (#16303)\n* Missing drop implementations in netdev_driver_t::recv (#10410)\n* net: netdev_driver_t::send() doc unclear (#10969)\n* netdev_ieee802154: Mismatch between radio ll address and in memory\n  address (#10380)\n* nrf52: Not able to add global or ULA address to interface (#13280)\n* nrfmin: communication not possible after multicast ping with no\n  interval (#11405)\n* openthread: does not build on current Arch (#10809)\n* ping6 is failing when testing with cc2538dk (#13997)\n* pkg/tinydtls: auxiliary data API does not work for async sockets (#16054)\n* pkg: libcoap is partially broken and outdated (#7737)\n* Possible memory leak in RIOT/build/pkg/ndn-riot/app.c (#15638)\n* Riot-os freezes with lwip + enc28j60 + stm32L4 (#13088)\n* samr30 xpro doesn't seem to use its radio ok (#12761)\n* scan-build errors found during 2019.07 testing (#11852)\n* send data with UDP at 10HZ, the program die (#11860)\n* stale border router does not get replaced (#12210)\n* Unclear how Router Solicitations are (or should be) handled (#15926)\n* xbee: setting PAN ID sometimes fails (#10338)\n\nTimer related issues (15)\n-------------------------\n\n* cpu/native: timer interrupt issue (#6442)\n* misc issues with tests/trickle (#9052)\n* MSP430: periph_timer clock config wrong (#8251)\n* periph/timer: `timer_set()` underflow safety check (tracking issue) (#13072)\n* periph_timer: systematic proportional error in timer_set (#10545)\n* saml21 system time vs rtc (#10523)\n* Sleep mode for Arduino (#13321)\n* stm32_common/periph/rtc: current implementation broken/poor accuracy (#8746)\n* sys/newlib: gettimeofday() returns time since boot, not current wall\n  time. (#9187)\n* tests: xtimer_drift gets stuck on native (#6052)\n* xtimer mis-scaling with long sleep times (#9049)\n* xtimer: add's items to the wrong list if the timer overflows between\n  _xtimer_now()  and irq_disable() (#7114)\n* xtimer_set_msg: crash when using same message for 2 timers (#10510)\n* xtimer_usleep stuck for small values (#7347)\n* xtimer_usleep wrong delay time (#10073)\n\nDrivers related issues (19)\n---------------------------\n\n* (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n  timeout (#14439)\n* adc is not a ADC-Driver but a analog pin abstraction (#14424)\n* at86rf2xx: Simultaneous use of different transceiver types is not\n  supported (#4876)\n* cpu/msp430: GPIO driver doesn't work properly (#9419)\n* driver/hts221: Temperature and Humidity readings incorrect (#12445)\n* ESP32 + DHT + SAUL reading two endpoints causes freeze. (#12057)\n* examples/dtls-wolfssl not working on pba-d-01-kw2x (#13527)\n* fail to send data to can bus (#12371)\n* floats and doubles being used all over the place. (#12045)\n* mdt_erase success, but vfs_format resets board (esp32-heltec-\n  lora32-v2) (#14506)\n* periph/spi: Switching between CPOL=0,1 problems on Kinetis with\n  software CS (#6567)\n* periph: GPIO drivers are not thread safe (#4866)\n* Potential security and safety race conditions on attached devices (#13444)\n* PWM: Single-phase initialization creates flicker (#15121)\n* sam0_eth: extremely long time to RX (frames stuck in buffer?) (#16451)\n* STM32: SPI clock not returning to idle state and generating\n  additional clock cycles (#11104)\n* TCP client  cannot  send read only data (#16541)\n* Two bugs may lead to NULL dereference. (#15006)\n* w5100 driver's improvement (#16417)\n\nNative related issues (6)\n-------------------------\n\n* examples/ccn-lite: floating point exception while testing on native (#15878)\n* examples/micropython: floating point exception while testing on\n  native (#15870)\n* native not float safe (#495)\n* native: tlsf: early malloc will lead to a crash (#5796)\n* SDL2 does not work due to missing getpid (#13501)\n* SIGFPE on native architecture when printing double floats on Ubuntu\n  21.04 (#16282)\n\nOther platforms related issues (24)\n-----------------------------------\n\n* Failing tests on FE310 (Hifive1b) (#13086)\n* arm7: printf() with float/double not working (#11885)\n* boards/hifive1: flashing issue (#13104)\n* Cannot use LLVM with Cortex-M boards (#13390)\n* cpu/cortexm_common: irq_enable returns the current state of\n  interrupts (not previous) (#10076)\n* cpu/sam0: flashpage write / read cycle produces different results\n  depending on code layout in flash (#14929)\n* cpu/stm32f1: CPU hangs after wake-up from STOP power mode (#13918)\n* esp32-wroom-32: tests/netstats_l2 failing sometimes (#14237)\n* esp32: can't use newer C++ standard than c++11 (#15685)\n* esp8266 precompiled bootloaders don't support partitions past 1MB (#16402)\n* esp8266: Hangs when erasing spi sector on mtd0 if using esp_wifi (#16281)\n* gcoap/esp8266: Stack overflow with gcoap example (#13606)\n* I found stm32 DMA periph driver bugs!  when I tested stm32l431rc\n  board. (#16242)\n* Incorrect default $PORT building for esp32-wroom-32 on macOS (#10258)\n* MIPS: toolchain objcopy doesn't work and no .bin can be generated (#14410)\n* MPU doesn't work on cortex-m0+ (#14822)\n* periph_timer: Test coverage & broken on STM32F767ZI (#15072)\n* riscv: ISR stack is too small for ENABLE_DEBUG in core files (#16395)\n* stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch\n  after __WFI() (#14015)\n* stm32f7: Large performance difference between stm32f746 and stm32f767 (#14728)\n* sys/riotboot/flashwrite: unaligned write when skipping\n  `RIOTBOOT_MAGIC` on stm32wb (#15917)\n* tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1 (#14572)\n* XFA support on AVR and MSP430 broken with binutils 2.36.1 (#16251)\n\nBuild system related issues (15)\n--------------------------------\n\n* `buildtest` uses wrong build directory (#9742)\n* `make -j flash` fails due to missing make dependencies or `make\n  flash-only` rebuilds the .elf (#16385)\n* Build dependencies - processing order issues (#9913)\n* build: info-build doesn't work with boards without port set (#15185)\n* BUILD_IN_DOCKER ignores USEMODULE (#14504)\n* Different build behavior between `murdock` and\n  `riot/riotbuild:latest` image (#9645)\n* dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck\n  1.89 (#12771)\n* doxygen: riot.css modified by 'make doc' (#8122)\n* LTO broken (binaries too large) (#16202)\n* macros: RIOT_FILE_RELATIVE printing wrong file name for headers (#4053)\n* make: ccache leads to differing binaries (#14264)\n* make: Setting constants on compile time doesn't really set them\n  everywhere (#3256)\n* make: use of immediate value of variables before they have their\n  final value (#8913)\n* Tracking: remove harmful use of `export` in make and immediate\n  evaluation (#10850)\n* Windows AVR Mega development makefile Error (#6120)\n\nOther issues (41)\n-----------------\n\n* [TRACKING] sys/shell refactoring. (#12105)\n* _NVIC_SystemReset stuck in infinite loop when calling pm_reboot\n  through shell after flashing with J-Link (#13044)\n* `make term` no longer works with JLinkExe v6.94 (#16022)\n* `make term` output is inconsistent between boards, `ethos` and\n  `native` (#12108)\n* assert: c99 static_assert macro doesn't function for multiple\n  static_asserts in the same scope (#9371)\n* Basic test for periph/rtt introduced in #15431 is incorrect (#15940)\n* boards/esp32-wroom-32: tests/mtd_raw flakey (#16130)\n* Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto (#13285)\n* C++11 extensions in header files (#5561)\n* Can't build relic with benchmarks or tests (#12897)\n* CC2538DK board docs: broken links (#12889)\n* edbg: long lines flooded over serial become garbled (#14548)\n* examples / tests: LoRa tests fail on platforms that don't support\n  LoRa (#14520)\n* File systems report names with leading slashes (#14635)\n* flashing issue on frdm-k64f (#15903)\n* Gcoap drops long packages instead of gracefully erring out (#14167)\n* I2C not working under RIOT with U8G2 pkg (#16381)\n* Making the newlib thread-safe (#4488)\n* nanocoap: incomplete response to /.well-known/core request (#10731)\n* Order of auto_init functions (#13541)\n* pkg/tinydtls: Multiple issues (#16108)\n* Possible memset optimized out in crypto code (#10751)\n* Potential race condition in compile_and_test_for_board.py (#12621)\n* pyterm on stdio_cdc_acm stops working after a few seconds (#16077)\n* RIOT cannot compile with the latest version of macOS (10.14) and\n  Xcode 10 (#10121)\n* RIOT is saw-toothing in energy consumption (even when idling) (#5009)\n* riotboot/nrf52840dk: flashing slot1 with JLINK fails (#14576)\n* scheduler: priority inversion problem (#7365)\n* sys/fmt: Missing tests for fmt_float, fmt_lpad (#7220)\n* sys/riotboot: documentation issues (#11243)\n* sys/stdio_uart: dropped data when received at once (#10639)\n* tests/cpp11_*: failing on i-nucleo-lrwan1 (#14578)\n* tests/lwip target board for python test is hardcoded to native (#6533)\n* tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n  LLVM (#15066)\n* tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n  esp32-wroom-32 (#13133)\n* tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3 (#15888)\n* tests: broken with stdio_rtt if auto_init is disabled (#13120)\n* tests: some tests don't work with `newlib` lock functions. (#12732)\n* Tracker: Reduce scope on unintended COMMON variables (#2346)\n* usb-serial/list-ttys.sh: Broken when a debugger offers multiple\n  serial ports (#15814)\n* Use of multiple CAN bus on compatible boards (#14801)\n\nThere are 171 known issues in this release\n\nFixed Issues since the last release (2021.04)\n=============================================\n\n- All but first ping to downstream interface fails (#16547)\n- pkg/lvgl: LoadProhibitedCause exception on BOARD=esp32-wrover-kit (#16471)\n- SX127x Join procedure failed (The Things Network) (#16419)\n- riotctrl: shell interaction seems timing sensitive (#16415)\n- at86rf231 initialization loses race against auto_init_gnrc_rpl (#16359)\n- cpu/sam0_common: Ethernet driver stops working after a while (#16298)\n- Conflict between nimble and uwb-core packages (#15528)\n- pkg/ccn-lite: unable to `make -j -C examples/ccn-lite-relay` (#14288)\n- make -j flash broken on esp* (will always flash the previous binary) (#13492)\n- sys/xtimer: segmentation fault: in function\n  xtimer_msg_received_timeout (#13345)\n- drivers/srf04: incorrect values on ATmega based platforms (#13079)\n- Indeterministic hard fault in _mutex_lock(), with nRF52 SoftDevice (#10122)\n- mrf24j40: does not link for examples/default (#8752)\n- nRF52: gnrc_6lowpan_ble: memory leak with nordic_softdevice_ble (#6018)\n- OSX +  SAMR21-xpro: shell cannot handle command inputs larger than 64\n  chars (#5863)\n\n16 fixed issues since last release (2021.04)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nMatrix and Forum\n================\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n*Note: [IRC was removed](https://forum.riot-os.org/t/riot-irc-and-even-more-freenode-turmoil/3262)*\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2021.04 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release:\n===================\n\nThe 2021.04 release includes:\n\n- netstats can now collect L1/L2 per neighbor statistics\n- sock DTLS now allows using multiple credentials\n- congure - a framework for implementing congestion control algorithms\n- xfa (cross file arrays) - a mechanism to more easily define stuff across\n  files (e.g., shell commands)\n- nimble is now using low-power ztimer\n- nrf5x now properly configures external HF clock, power use down 411µA -> 3.6µA\n  for examples/minimal on nrf52dk\n- many more modules and drivers have Kconfig support\n- the semtech-loramac package now supports sx126x/llcc68 radios\n- 8 new boards, 6 new drivers, 8 packages upgraded\n\nWe've also mostly finished our migration from mailing lists to forum.riot-os.org.\n\n375 pull requests, composed of 992 commits, have been merged since the\nlast release, and 16 issues have been solved. 56 people contributed with\ncode in 103 days. 2564 files have been touched with 191220 (+) insertions and\n91400 deletions (-).\n\n\nNotations used below:\n=====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\nNew features and changes\n========================\n\nCore\n----\n+ clist: added clist_is_empty()\n+ xfa: initial support for XFA's (cross file arrays)\n\nSystem Libraries\n----------------\n* shell: allow defining shell commands using XFA\n+ dbgpin: module for debugging and profiling\n+ ztimer: add ztimer_is_set()\n+ ztimer: add ZTIMER_SEC\n+ ztimer: add periph_ptp backend\n\nNetworking\n----------\n\n* cord: Discovery patch altered to reflect changes in the underlying Resource Directory draft\n* lwip: hook up sam0_eth support\n+ congure: framework to implement congestion control and use it in a reusable manner with\n  a number of protocols\n+ netstats: L1/L2 per neighbor statistics\n+ sock DTLS: allow using multiple credentials\n\nPackages\n--------\n\n* emlearn: bump version to 0.11.6\n* libfixmath: bump version to latest master\n* nanocbor: bump version\n* nanopb: bump version to 0.4.5\n* fatfs: bump version to r0.14a\n* littlefs2: Bump to v2.4\n* monocypher: bump to version 3.1.2\n* nimble: migrate to ztimer, allowing low power operation\n* openthread: bump version to 20191113\n* wakaama: add patch to cast macro to time_t\n* pkg/semtech-loramac: switch to RIOT AES\n* pkg/semtech-loramac: refactor to use netdev API only\n* pkg/lwip: Start DHCP early for all Ethernet interfaces\n\nBoards\n------\n\n* particle-mesh boards: Use USB serial as stdio by default\n* nucleo-f303re: I2C pins remapped to match the data sheet\n* nucleo-f722ze: Add periph_can support\n* native: compile with `-Og` (was `-O0`)\n+ boards/nucleo-f767zi: Add periph_can support\n+ New boards:\n  + atmega328p-xplained-mini\n  + atxmega-a1u-xpro\n  + atxmega-a3bu-xplained\n  + BastWAN\n  + Microbit v2\n  + samd20-xpro\n  + TI CC1350 LAUNCHXL\n  + Zigduino\n\nCPU\n---\n\n+ Initial support for ATxmega family of 8-bit AVR CPUs\n+ kinetis: enable floating point support\n* nrf5x: enhance enabling of internal DC/DC converter\n* nrf52: add VDDHDIV5 as ADC input\n+ nrf52: add periph_uart_non_blocking support\n+ native: add periph/flashpage implementation\n+ qn908x: Implement blocking SPI support\n+ qn908x: add ADC support\n+ sam0_common: add rtc_get_tamper_event()\n+ stm32f{2,4,7}: Initial flashpage support\n+ stm32f7: added ADC support\n* stm32/can: add option to enable deep-sleep per device\n\nDevice Drivers\n--------------\n\n+ new drivers:\n  + sensirion SGP30 gas sensor\n  + Amphenol sm-pwm-01c dust sensor\n  + Si705x sensors\n  + TI BQ2429x charger and power management ICs\n  + Netdev driver for nrf24l01p\n  + sx126x/llcc68 LoRa radios\n* touch_dev & display_dev auto-initialization\n* bmx280: increase accuracy of SAUL pressure readings\n* lis2dh12: functionality extension\n* cc110x: add hook cc1xxx_eui_get()\n* ds3231: add alarm support\n* at86rf2xx: add missing handler for TRX24_RX_START interrupt\n* periph_rtt: add periph_rtt_set_counter  feature\n\n\nDocumentation\n-------------\n\n+ riotboot and its USB DFU version were added to the documentation\n+ cpu/cc26xx_cc13xx: add CPU documentation\n* doc/SAUL: State expectations on blocking and interrupts\n* sys/phydat: clarify use of phydat::scale in phydat_fit\n* sys/ztimer: clarify doc on clock ops\n* doc/Coding_Convention: clarify: void return is allowed\n* sys/event: add missing precondition to doc\n\nBuild System / Tooling\n----------------------\n\n* RIOT now defaults to C11\n* RIOT now compiles with `-fwrapv`\n+ compile_commands.json files can be produced, easing IDE integration\n* riotboot USB DFU: Enter bootloader when board's bootloader button is pressed on power-up\n* Make: enable SECONDEXPANSION globally\n\nTesting\n-------\n+ Test utilities result output (turo) module for testing logic abstraction\n+ Github integration of static tests using annotations completed\n\nKconfig\n-------\n+ Modules with dependency model added:\n    + drivers/{l, m, n, o, p, q, r, s, t, u, v, w}*\n    + pkg/c25519\n    + pkg/cayenne-lpp\n    + pkg/cifra\n    + pkg/cn-cbor\n    + pkg/driver_atwinc15x0\n    + pkg/driver_bme680\n    + pkg/emlearn\n    + pkg/gemmlowp\n    + pkg/hacl\n    + pkg/heatshrink\n    + pkg/jsmn\n    + pkg/libb2\n    + pkg/libcose\n    + pkg/libfixmath\n    + pkg/libhydrogen\n    + pkg/lora-serialization\n    + pkg/micro-ecc\n    + pkg/microcoap\n    + pkg/minmea\n    + pkg/monocypher\n    + pkg/nanocbor\n    + pkg/nanopb\n    + pkg/qDSA\n    + pkg/qcbor\n    + pkg/relic\n    + pkg/talking_leds\n    + pkg/tiny-asn1\n    + pkg/tinycbor\n    + pkg/tinycrypt\n    + pkg/tlsf\n    + pkg/tweetnacl\n    + pkg/u8g2\n    + pkg/ubasic\n    + pkg/ucglib\n    + pkg/umorse\n    + pkg/utensor\n    + pkg/yxml\n    + sys/{crypto, hashes, random}\n    + sys/analog_util\n    + sys/app_metadata\n    + sys/base64\n    + sys/bitfield\n    + sys/bloom\n    + sys/cb_mux\n    + sys/eepreg\n    + sys/matstat\n    + sys/memarray\n    + sys/mineplex\n    + sys/oneway\n    + sys/posix_{sleep, inet}\n    + sys/sema\n    + sys/seq\n    + sys/uri_parser\n    + sys/timex\n    + sys/ztimer\n\n+ Modules with configurations exposed:\n    + cpu/stm32f2f4f7: clock configuration\n    + net/lorawan\n    + sys/shell\n\n+ Source EXTERNAL_MODULES configurations\n\nExamples\n--------\n* examples/suit_update: update to aiocoap 0.4.1\n* examples/dtls-sock: add multiple credentials\n* examples/gnrc_border_router: enable ethernet uplink\n\nAPI Changes\n-----------\n\n* mtd: rename mtd_write_page() -> mtd_write_page_raw(), add high-level mtd_write_page()\n* sys/ztimer: rename required_pm_mode to block_pm_mode\n* sock/async: add function to retrieve session object of current DTLS event\n* sys/net/netopt: make NETOPT_TX_END_IRQ and friends read-only\n\nDeprecations\n============\n\nDeprecations\n------------\n- core/lifo: will be removed in 2021.07\n\nRemovals\n--------\n- Remove deprecated features:\n  - flashrom API (was deprecated since 2017, use periph/flashpage)\n  - boards: remove AVRDUDE_PORT and PORT_BSL\n\nKnown issues\n============\n\nNetworking related issues (48)\n------------------------------\n#16411: border_router: significant packet loss when sending out packets using\n        USB cdc-ecm on nrf52\n#16398: gnrc_border_router stops routing after a while\n#16359: at86rf231 initialization loses race against auto_init_gnrc_rpl\n#16085: gnrc_rpl: missing bounds checks in _parse_options\n#16054: pkg/tinydtls: auxiliary data API does not work for async sockets\n#15926: Unclear how Router Solicitations are (or should be) handled\n#15867: Address registration handling inappropriate\n#14962: LoRaWan node ISR stack overflowed\n#14689: dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on PC\n#13997: ping6 is failing when testing with cc2538dk\n#13745: ethos: Unable to choose global source address.\n#13493: ethernet: Missing multicast addr assignment\n#13280: nrf52: Not able to add global or ULA address to interface\n#13088: Riot-os freezes with lwip + enc28j60 + stm32L4\n#12943: driver/mrf24j40: blocks shell input with auto_init_gnrc_netif\n#12884: examples/cord_ep: Dead lock when (re-)registering in callback function\n#12761: samr30 xpro doesn't seem to use its radio ok\n#12642: Emcute cannot create a double-byte name\n#12565: gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n        packet buffer\n#12264: ethos: Unable to handle fragmented IPv6 packets from Linux kernel\n#12210: stale border router does not get replaced\n#11988: ethos: fails to respond to first message.\n#11860: send data with UDP at 10HZ, the program die\n#11852: scan-build errors found during 2019.07 testing\n#11405: nrfmin: communication not possible after multicast ping with no interval\n#11033: 6lo: RIOT does not receive packets from Linux when short_addr is set\n#10969: net: netdev_driver_t::send() doc unclear\n#10861: cpu/esp8266: Tracking open problems of esp_wifi netdev driver\n#10809: openthread: does not build on current Arch\n#10410: Missing drop implementations in netdev_driver_t::recv\n#10389: gnrc_sock_udp: Possible Race condition on copy in application buffer\n#10380: netdev_ieee802154: Mismatch between radio ll address and in memory\n        address\n#10370: gomach: Resetting netif with cli doesn't return\n#10338: xbee: setting PAN ID sometimes fails\n#8779: CC2538 RF overlapping PIN usage\n#8752: mrf24j40: does not link for examples/default\n#8271: app/netdev: application stops working after receiving frames with\n       assertion or completely without error\n#8242: at86rf2xx: Dead lock when sending while receiving\n#8199: gcoap example request on tap I/F fails with NIB issue\n#7737: pkg: libcoap is partially broken and outdated\n#7474: 6lo gnrc fragmentation expects driver to block on TX\n#7304: General 802.15.4/CC2538 RF driver dislikes fast ACKs\n#6018: nRF52: gnrc_6lowpan_ble: memory leak with nordic_softdevice_ble\n#5863: OSX +  SAMR21-xpro: shell cannot handle command inputs larger than 64\n       chars\n#5486: at86rf2xx: lost interrupts\n#5230: gnrc ipv6: multicast packets are not dispatched to the upper layers\n#5051: Forwarding a packet back to its link layer source should not be allowed\n#4527: gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n       address\n\nTimer related issues (15)\n-------------------------\n#13321: Sleep mode for Arduino\n#13072: periph/timer: `timer_set()` underflow safety check (tracking issue)\n#10545: periph_timer: systematic proportional error in timer_set\n#10523: saml21 system time vs rtc\n#10510: xtimer_set_msg: crash when using same message for 2 timers\n#10073: xtimer_usleep wrong delay time\n#9187: sys/newlib: gettimeofday() returns time since boot, not current wall\n       time.\n#9052: misc issues with tests/trickle\n#9049: xtimer mis-scaling with long sleep times\n#8746: stm32_common/periph/rtc: current implementation broken/poor accuracy\n#8251: MSP430: periph_timer clock config wrong\n#7347: xtimer_usleep stuck for small values\n#7114: xtimer: add's items to the wrong list if the timer overflows between\n       _xtimer_now()  and irq_disable()\n#6442: cpu/native: timer interrupt issue\n#6052: tests: xtimer_drift gets stuck on native\n\nDrivers related issues (15)\n---------------------------\n#16417: w5100 driver's improvement\n#15121: PWM: Single-phase initialization creates flicker\n#14506: mdt_erase success, but vfs_format resets board (esp32-heltec-lora32-v2)\n#14439: (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n        timeout\n#14424: adc is not a ADC-Driver but a analog pin abstraction\n#13527: examples/dtls-wolfssl not working on pba-d-01-kw2x\n#13444: Potential security and safety race conditions on attached devices\n#13079: drivers/srf04: incorrect values on ATmega based platforms\n#12445: driver/hts221: Temperature and Humidity readings incorrect\n#12371: fail to send data to can bus\n#12057: ESP32 + DHT + SAUL reading two endpoints causes freeze.\n#12045: floats and doubles being used all over the place.\n#11104: STM32: SPI clock not returning to idle state and generating additional\n        clock cycles\n#9419: cpu/msp430: GPIO driver doesn't work properly\n#4876: at86rf2xx: Simultaneous use of different transceiver types is not\n       supported\n\nNative related issues (5)\n-------------------------\n#15878: examples/ccn-lite: floating point exception while testing on native\n#15870: examples/micropython: floating point exception while testing on native\n#13501: SDL2 does not work due to missing getpid\n#5796: native: tlsf: early malloc will lead to a crash\n#495: native not float safe\n\nOther platforms related issues (18)\n-----------------------------------\n#16251: XFA support on AVR and MSP430 broken with binutils 2.36.1\n#14822: MPU doesn't work on cortex-m0+\n#14728: stm32f7: Large performance difference between stm32f746 and stm32f767\n#14679: examples/gnrc_border_router: esp_wifi crashes on disconnect\n#14572: tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1\n#14410: MIPS: toolchain objcopy doesn't work and no .bin can be generated\n#14237: esp32-wroom-32: tests/netstats_l2 failing sometimes\n#14015: stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch after\n        __WFI()\n#13606: gcoap/esp8266: Stack overflow with gcoap example\n#13390: Cannot use LLVM with Cortex-M boards\n#13104: boards/hifive1: flashing issue\n#13086: Failing tests on FE310 (Hifive1b)\n#12763: [TRACKING] Fixes for automatic tests of ESP32 boards.\n#11885: arm7: printf() with float/double not working\n#10258: Incorrect default $PORT building for esp32-wroom-32 on macOS\n#10122: Indeterministic hard fault in _mutex_lock(), with nRF52 SoftDevice\n#10076: cpu/cortexm_common: irq_enable returns the current state of interrupts\n        (not previous)\n#6567: periph/spi: Switching between CPOL=0,1 problems on Kinetis with software\n       CS\n\nBuild system related issues (14)\n--------------------------------\n#16202: LTO broken (binaries too large)\n#15185: build: info-build doesn't work with boards without port set\n#14504: BUILD_IN_DOCKER ignores USEMODULE\n#14288: pkg/ccn-lite: unable to `make -j -C examples/ccn-lite-relay`\n#14264: make: ccache leads to differing binaries\n#12771: dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck 1.89\n#10850: Tracking: remove harmful use of `export` in make and immediate\n        evaluation\n#9913: Build dependencies - processing order issues\n#9742: `buildtest` uses wrong build directory\n#9645: Different build behavior between `murdock` and `riot/riotbuild:latest`\n       image\n#8913: make: use of immediate value of variables before they have their final\n       value\n#8122: doxygen: riot.css modified by 'make doc'\n#6120: Windows AVR Mega development makefile Error\n#4053: macros: RIOT_FILE_RELATIVE printing wrong file name for headers\n\nOther issues (57)\n-----------------\n#16419: SX127x Join procedure failed (The Things Network)\n#16415: riotctrl: shell interaction seems timing sensitive\n#16402: esp8266 precompiled bootloaders don't support partitions past 1MB\n#16395: riscv: ISR stack is too small for ENABLE_DEBUG in core files\n#16381: I2C not working under RIOT with U8G2 pkg\n#16281: esp8266: Hangs when erasing spi sector on mtd0 if using esp_wifi\n#16242: I found stm32 DMA periph driver bugs!  when I tested stm32l431rc board.\n#16130: boards/esp32-wroom-32: tests/mtd_raw flakey\n#16108: pkg/tinydtls: Multiple issues\n#16077: pyterm on stdio_cdc_acm stops working after a few seconds\n#16022: `make term` no longer works with JLinkExe v6.94\n#15940: Basic test for periph/rtt introduced in #15431 is incorrect\n#15917: sys/riotboot/flashwrite: unaligned write when skipping  `RIOTBOOT_MAGIC`\n        on stm32wb\n#15903: flashing issue on frdm-k64f\n#15888: tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3\n#15814: usb-serial/list-ttys.sh: Broken when a debugger offers multiple serial\n        ports\n#15685: esp32: can't use newer C++ standard than c++11\n#15638: Possible memory leak in RIOT/build/pkg/ndn-riot/app.c\n#15528: Conflict between nimble and uwb-core packages\n#15072: periph_timer: Test coverage & broken on STM32F767ZI\n#15066: tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n        LLVM\n#15006: Two bugs may lead to NULL dereference.\n#14929: cpu/sam0: flashpage write / read cycle produces different results\n        depending on code layout in flash\n#14635: File systems report names with leading slashes\n#14578: tests/cpp11_*: failing on i-nucleo-lrwan1\n#14576: riotboot/nrf52840dk: flashing slot1 with JLINK fails\n#14548: edbg: long lines flooded over serial become garbled\n#14520: examples / tests: LoRa tests fail on platforms that don't support LoRa\n#14390: gcoap: Suspected crosstalk between requests (possible NULL call)\n#14315: DTLS examples cannot send message to localhost\n#14167: Gcoap drops long packages instead of gracefully erring out\n#13918: cpu/stm32f1: CPU hangs after wake-up from STOP power mode\n#13541: Order of auto_init functions\n#13285: Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto\n#13133: tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n        esp32-wroom-32\n#13120: tests: broken with stdio_rtt if auto_init is disabled\n#13044: _NVIC_SystemReset stuck in infinite loop when calling pm_reboot through\n        shell after flashing with J-Link\n#12897: Can't build relic with benchmarks or tests\n#12889: CC2538DK board docs: broken links\n#12732: tests: some tests don't work with `newlib` lock functions.\n#12621: Potential race condition in compile_and_test_for_board.py\n#12108: `make term` output is inconsistent between boards, `ethos` and `native`\n#12105: [TRACKING] sys/shell refactoring.\n#11243: sys/riotboot: documentation issues\n#10751: Possible memset optimized out in crypto code\n#10731: nanocoap: incomplete response to /.well-known/core request\n#10639: sys/stdio_uart: dropped data when received at once\n#10121: RIOT cannot compile with the latest version of macOS (10.14) and Xcode\n        10\n#9371: assert: c99 static_assert macro doesn't function for multiple\n       static_asserts in the same scope\n#7365: scheduler: priority inversion problem\n#7220: sys/fmt: Missing tests for fmt_float, fmt_lpad\n#6533: tests/lwip target board for python test is hardcoded to native\n#5009: RIOT is saw-toothing in energy consumption (even when idling)\n#4866: periph: GPIO drivers are not thread safe\n#4488: Making the newlib thread-safe\n#3256: make: Setting constants on compile time doesn't really set them\n       everywhere\n#2346: Tracker: Reduce scope on unintended COMMON variables\n\nThere are 172 known issues in this release\n\nFixed Issues since the last release (2021.01)\n=============================================\n\n#16308: RIOT-OS has great design, But there are too many bugs.\n#16298: cpu/sam0_common: Ethernet driver stops working after a while\n#16293: Conflict between semtech-loramac and hashes modules\n#16191: make: `make list-ttys` broken for `iotlab-m3`\n#16184: unittests/tests-rtc: fail on native\n#16124: lwip_sock_tcp.c: incorrect socket buffer last_offset computation\n#16062: gnrc_rpl: missing bounds checks in gnrc_rpl_validation_options\n#16018: gnrc_rpl: Lack of bounds check for packed structs\n#15927: uri_parser: out-of-bounds read\n#15447: w5100 driver's bug\n#13492: make -j flash broken on esp* (will always flash the previous binary)\n#13459: cpu/cortex-m23: gcc 9 bug when compiling c11 atomics\n#13345: sys/xtimer: segmentation fault: in function xtimer_msg_received_timeout\n#12857: examples/gnrc_networking_mac broken on ATmega\n#12651: Failing tests on AVR (tested with atmega256rfr2-xpro)\n#12168: pkg/libb2: blake2s doesn't work on AVR\n\n16 fixed issues since last release (2021.01)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\n\nMore information\n================\nhttp://www.riot-os.org\n\n\nIRC, Matrix and Forum\n=====================\n* Join the RIOT IRC channel at: irc.freenode.net, #riot-os\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\nRIOT-2021.01 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release:\n===================\n\nThe 2021.01 release includes:\n - Device Firmware Upgrade support for USBUS\n - USB HID minimal implementation\n - IEEE 802.15.4 security initial implementation\n - 6LowPAN Minimal Forwarding and Selective Fragment Recovery initial\n   implementation\n - Initial support for QN908x, SAMD10 STM32MP1 and STM32L5 CPUs\n - Initial support for Cortex-M33\n - A module for selecting entropy sources\n - Initial support for the Decawave Impulse Radio-Ultra Wideband (UWB Core)\n - Capability to join or leave link layer multicast groups (GNRC)\n - Support for IN865 region in GNRC LoRaWAN\n - 83 additional modules supported by Kconfig\n - 14 new boards, 6 new device drivers, 8 packages updated\n\nIn order to improve community interaction, during this release cycle we started\nto migrate from a mailing-list-based communication to forum-based\ncommunication. We are proud to present the RIOT-OS forum available at\nforum.riot-os.org\n\n533 pull requests, composed of 1440 commits, have been merged since the\nlast release, and 65 issues have been solved. 58 people contributed with\ncode in 119 days. 3852 files have been touched with 348619 (+) insertions and\n52516 deletions (-).\n\nNotations used below:\n=====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\nNew features and changes\n========================\n\nCore\n----\n+ msg_bus: allow to differ between messages form bus and from thread\n+ mutex: Add mutex_cancel\n+ mbox: add mbox_size(), mbox_avail()\n* refactor thread info\n- remove kernel_types.h\n\nSystem Libraries\n----------------\n+ Add thread-safe Malloc\n+ sys/tsrb: Make thread-safe\n+ mtd_mapper: implement pagewise functions\n+ xtimer: introduce xtimer_msleep()\n+ usbus: Add USB peripheral serial string support\n+ hashes: Add PBKDF2-sha256 implementation\n+ usbus/dfu: add Device Firmware Upgrade support for USBUS\n+ USB HID minimal implementation\n+ Add helpers for pointer tagging\n+ atomic_utils: Functions for atomic access\n+ entropy_source: add new module for entropy sources\n+ nimble_autoadv: add new module\n* ztimer:\n    + add ztimer_mutex_lock_timeout()\n    * fix xtimer_compat\n    * increase xtimer_compat coverage\n* oneway-malloc: check calloc args\n* event: Allow single event_thread handling all queues\n- irq_handler: Drop module\n\nNetworking\n----------\n+ gnrc_netif: add capability to join or leave link layer multicast groups\n+ gnrc_sixlowpan_frag:\n    + initial import of Minimal Forwarding according to RFC 8930\n    + initial import of Selective Fragment Recovery (RFC 8931)\n+ gnrc_netif_ethernet: Support RX timestamp\n+ Initial implementation of IEEE 802.15.4 security\n+ sock: add access to auxiliary data\n* gnrc_pkt: refactor to not use utlist.h\n* sys/net/gnrc: fix in-band signaling of no RSSI\n* gnrc_netif_pktq: fix pktbuf leak\n* Fixed a critical bug, allowing to crash the whole system with a specially\n  crafted LoRa frame\n* GNRC LoRaWAN:\n    + Support for IN865 region, Improve debugging\n    * GNRC LoRaWAN: Bug fix for zero CFList\n* IEEE 802154 Radio HAL:\n    + add `read` function\n    + add IEEE802154_RADIO_INDICATION_CRC_ERROR\n    + add IEEE802154_RADIO_INDICATION_TX_START\n    + add helpers for RSSI and dBm conversion\n    * fix wrong rssi conversions treewide\n* IEEE 802.15.4 SubMAC:\n    + add retransmission reporting\n    * enable ACK_REQ by default\n    * unify legacy and radio HAL bootstrap\n* gcoap:\n    + Process CON responses\n    * make blocksize configurable\n- Remove deprecated features\n  - gcoap: remove deprecated gcoap_add_qstring\n  - gnrc_nettype: remove GNRC_NETTYPE_IOVEC\n  - gnrc_pktbuf: drop gnrc_pktbuf_replace_snip()\n  - gnrc_sixlowpan_rb: remove GNRC_SIXLOWPAN_FRAG_RBUF_AGGRESSIVE_OVERRIDE\n  - sock/dtls: remove sock_dtls_session_create due to deprecation\n\nPackages\n--------\n+ openthread: add support for radios compatible with SubMAC\n+ uwb_core: initial support\n* Updates:\n    * littlefs2: Bump to v2.3\n    * jsmn: bump version\n    * libb2: update to latest release\n    * libhydrogen: bump version\n    * micro-ecc: bump version\n    * tinycrypt: bump version\n    * fatfs: bump version to r0.14\n    * gecko_sdk: update to v2.7.7\n    * hacl: switch upstream to backup copy\n    * lvgl: bump to v7.7.1\n* openwsn:\n    + add ieee802154_hal based radio\n    + openwsn: add sock_udp\n- nordic-softdevice: remove deprecated package\n\nBoards\n------\n* Renode:\n    + stm32f4discovery: Add initial renode support\n    + firefly: add renode configuration\n    + hifive*: add renode support\n* Arduino feature:\n    + waspmote-pro: add arduino feature\n    + remote-revb: add arduino feature\n+ New boards:\n    + ESP32-Ethernet-Kit\n    + arduino-nano-33-iot\n    + weact-f401cc / weact-f401ce / weact-f411ce\n    + e104-bt5011a-tb\n    + e180-zg120b-tb\n    + feather-m0-lora\n    + nrf52840-mdk-dongle\n    + nucleo-l011k4\n    + nucleo-l552ze-q\n    + frdm-kl43z\n    + slstk3400a\n    + stk3200\n    + SAM D10 Xplained Mini\n+ Particle boards: Support monofirmware builds and uploads\n+ saul_pwm: auto-init'able RGB LEDs and dimmers for:\n    * particle-argon / particle-boron / particle-xenon\n    * nrf52840-mdk-dongle\n    * nrf52840dongle\n+ native: allow to use ZEP instead of tap\n+ ikea-tradfri: add SPI NOR Flash configuration\n\nCPU\n---\n+ Cortex-M33: add initial support\n+ nrf5x: implement periph_timer_periodic\n+ nrf52: Add i2c reconfigure feature\n+ SAMD10: Add support\n+ stm32l5: add initial support\n+ stm32mp1: Add initial support\n+ QN908x: Add initial support\n* atmega_common: Split into atmega_common and avr8_common\n* Improve clock configuration\n* stm32:\n    * rtc: add unlock/lock to rtc_clear_alarm\n    * uart: set flow control bits before enabling uart\n    * cpu/stm32: enable overdrive mode on f4 and f7 for high clock speeds\n    * cpu/stm32: Fix & cleanup periph_eth\n* esp:\n    + implement ESP WiFi SoftAP mode\n    * Fix cast alignment issues\n* sam3/periph_timer: fix trigger of cleared timer\n* native:\n    + rtc: add rtc_set_time implementation\n    * fix memory leak\n    - remove unused can_linux module\n* cc2538:\n    + add riotboot feature\n    + add flashpage & flashpage_raw\n    + add periph_uart_nonblocking\n* efm32:\n    + add coretemp driver\n    + add watchdog peripheral\n* sam0_common:\n    + cpu/sam0: add initial ethernet support\n    + flashpage: add functions to write to user config area / AUX page\n    * flashpage: rename to sam0_flashpage_aux_write()\n    + SPI: add support for QSPI in SPI mode\n\nDevice Drivers\n--------------\n+ Add utilities for Ethernet Media-Independent Interface (MII) and use them in\n  STM32 `periph_eth`\n+ cst816s: Initial include of cst816s touch screen driver\n+ gp2y10xx dust sensor\n+ DS3231 RTC\n+ periph_common: dac: add dac_play()\n+ scd30: Add reset function to Sensirion scd30 sensor\n+ si1133: New SI1133 UV/IR/Ambient light driver\n+ sc: Add driver for Honeywell HSC series pressure and temperature sensor\n+ ndev: add mcp2515 + driver/mcp2515: add driver\n+ net: Add netdev_driver_t::confirm_send\n+ PTP Clock\n* cpu/stm32:\n    * periph_eth: Use auto-negotiation\n    * Fix periph_eth link status\n    * Fix reception bug in periph_eth\n* nrf802154:\n    * change internal state to idle after rx\n    * fix set_cca_threshold range\n    * fix unwanted emissions at the end of ACK frame\n    * fix state transition and `off` function\n    * nrf802154: default to netdev_ieee802154_submac\n* cc2538_rf:\n    * fix transmit function\n    * default to netdev_ieee802154_submac\n* at86rf2xx: fix null pointer check\n* at86rf215:\n    + add functions to configure trim & clock output at run-time\n    + implement battery monitor, add power bus\n    + implement MR-FSK\n    * make use of packet queue if available\n    * fix dependency resolution for 2.4 GHz\n* w5100.c: correct the pointer position when w5100's buf is full\n* srf04: fix overflow on AVR\n* periph/rtt: fix overflow in tick conversion macros\n* mtd_flashpage: fix erasure of multiple sectors\n* mtd_spi_nor: cleanup & bug fixes\n\nDocumentation\n-------------\n+ README: Add merge-chance badge\n+ riotboot: add basic porting guide\n+ emulators: add emulators documentation in Doxygen\n+ SECURITY.md: Add initial security policy\n* generate-changelog: add support for point releases\n* add Docker info to doxygen\n* drivers/netdev: Clarify documentation\n* README.md: move tapsetup section to documentation\n* native: Improve Documentation\n* CONTRIBUTING: cleanup and reorganize\n* core/msg_bus: enhance documentation\n* cpu/stm32: rewrite clock configuration documentation\n* doc: advertise forum.riot-os.org\n* doc: Give examples of what DEVELHELP does\n* gnrc/rpl: document implementation status\n* ieee802154/radio: indicate that FCS is ignored when reading buffer\n* uhcp: improve documentation\n* update board porting documentation page\n\nBuild System / Tooling\n----------------------\n+ testbed-support: add iotlab mapping for dwm1001\n+ info.inc.mk: Add info-build-json as JSON-formatted build info\n+ makefiles/utils: add util to compare to software versions\n+ emulator: add debug feature with qemu emulator\n* Makefile.include: avoid recursive expansion of USEMODULE\n+ makefiles/pseudomodules.inc.mk: netdev_ieee802154_legacy is a pseudomodule\n* dist/tools/bmp: Fix flashing with pygdbmi 0.10.0\n* drivers/at86rf215: fix dependency resolution for single radio\n* cpu/esp*: fix linker scripts\n* info-objsize: Restore info-objsize target\n* make: run static_tests.sh directly with `static-tests` target\n* picolibc: model as a feature\n* tools/esptool: add common makefile to define esptool variables\n* dist/tools: Use bash instead of sh where needed\n* tools/emulator: allow use with *term targets + introduce EMULATE=1 instead of emulate target\n* mips: adapt for toolchain update (2020.06-01)\n- remove the bootloader_% pseudo-feature, replace it with highlevel_stdio\n\nContinuous Integration\n----------------------\n\n* use Github actions for static tests instead of Travis\n    + Add support for Github annotations.\n* gh-actions/release-test: bump ssh-agent to v0.4.1\n\nTesting\n-------\n+ tests/mpu_stack_guard: add automatic test script\n+ tests/mtd_raw: add simple test for MTD\n* treewide: cleanup ENABLE_DEBUG\n* release-tests: fix artifact naming and steps cleanup for matrix build\n* tests/sys_atomic_utils_unittests: spice up test\n* tests/unittests: split out atomic_utils unittests\n* sys/shell: terminate shell on Ctrl-D\n\nKconfig\n-------\n+ Modules with support added:\n    + drivers/{a, b, c, d, e, f, g, h, i, j}*\n    + drivers/ili9341\n    + test/periph_*\n+ cpu/stm32: add script to generate Kconfig.models and Kconfig.lines files\n+ add modules to test on native\n+ Clock configuration for:\n    + stm32l4\n    + stm32l5\n    + stm32wb\n    + stm32f0\n    + stm32g0g4\n    + stm32l0l1\n    + stm32f1f3\n* drivers/rn2xx3 : Kconfig updates.\n* MQTT-SN Clients: Kconfig Updates\n\nExamples\n--------\n+ gnrc_networking: add option to enable DNS\n* gnrc_border_route: simplify ZEP setup on native\n* suit_update: use interactive sync in test\n* gcoap: Allow PUT/POST with empty payload\n* suit_update: update IETF draft reference in the README\n\n\nAPI Changes\n===========\n* periph_flashpage: Make pagewise API optional\n* net/eui_provider: API cleanup\n* sock/dtls: add getter/setter for the remote UDP endpoint of sock_dtls_session_t\n* drivers/pn532: use pseudomodules to select i2c or spi\n* GNRC: fix in-band signaling of no RSSI\n\n\nDeprecations\n============\n\nRemovals\n--------\n- Remove deprecated features:\n    - gnrc_nettype: remove GNRC_NETTYPE_IOVEC\n    - gnrc_sixlowpan_rb: remove GNRC_SIXLOWPAN_FRAG_RBUF_AGGRESSIVE_OVERRIDE\n    - pkg/nordic-softdevice: remove deprecated package\n    - boards/native: remove all-debug deprecated target\n    - gnrc_pktbuf: drop gnrc_pktbuf_replace_snip()\n    - sys/irq_handler: Drop module\n    - sock/dtls: remove sock_dtls_session_create due to deprecation\n    - gcoap: remove deprecated gcoap_add_qstring\n    - pkg/tinydtls: remove deprecation message about some CFLAGS\n\n\nKnown issues\n============\n\nNetworking related issues (43)\n------------------------------\n#15867: Address registration handling inappropriate\n#14962: LoRaWan node ISR stack overflowed\n#14689: dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on PC\n#13997: ping6 is failing when testing with cc2538dk\n#13745: ethos: Unable to choose global source address.\n#13493: ethernet: Missing multicast addr assignment\n#13280: nrf52: Not able to add global or ULA address to interface\n#13088: Riot-os freezes with lwip + enc28j60 + stm32L4\n#12943: driver/mrf24j40: blocks shell input with auto_init_gnrc_netif\n#12884: examples/cord_ep: Dead lock when (re-)registering in callback function\n#12857: examples/gnrc_networking_mac broken on ATmega\n#12761: samr30 xpro doesn't seem to use its radio ok\n#12642: Emcute cannot create a double-byte name\n#12565: gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n        packet buffer\n#12264: ethos: Unable to handle fragmented IPv6 packets from Linux kernel\n#12210: stale border router does not get replaced\n#11988: ethos: fails to respond to first message.\n#11860: send data with UDP at 10HZ, the program die\n#11852: scan-build errors found during 2019.07 testing\n#11405: nrfmin: communication not possible after multicast ping with no interval\n#11033: 6lo: RIOT does not receive packets from Linux when short_addr is set\n#10969: net: netdev_driver_t::send() doc unclear\n#10861: cpu/esp8266: Tracking open problems of esp_wifi netdev driver\n#10809: openthread: does not build on current Arch\n#10410: Missing drop implementations in netdev_driver_t::recv\n#10389: gnrc_sock_udp: Possible Race condition on copy in application buffer\n#10380: netdev_ieee802154: Mismatch between radio ll address and in memory\n        address\n#10370: gomach: Resetting netif with cli doesn't return\n#10338: xbee: setting PAN ID sometimes fails\n#8779: CC2538 RF overlapping PIN usage\n#8752: mrf24j40: does not link for examples/default\n#8271: app/netdev: application stops working after receiving frames with\n       assertion or completely without error\n#8242: at86rf2xx: Dead lock when sending while receiving\n#8199: gcoap example request on tap I/F fails with NIB issue\n#7737: pkg: libcoap is partially broken and outdated\n#7474: 6lo gnrc fragmentation expects driver to block on TX\n#7304: General 802.15.4/CC2538 RF driver dislikes fast ACKs\n#6018: nRF52: gnrc_6lowpan_ble: memory leak with nordic_softdevice_ble\n#5863: OSX +  SAMR21-xpro: shell cannot handle command inputs larger than 64\n       chars\n#5486: at86rf2xx: lost interrupts\n#5230: gnrc ipv6: multicast packets are not dispatched to the upper layers\n#5051: Forwarding a packet back to its link layer source should not be allowed\n#4527: gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n       address\n\nTimer related issues (16)\n-------------------------\n#13345: sys/xtimer: segmentation fault: in function xtimer_msg_received_timeout\n#13321: Sleep mode for Arduino\n#13072: periph/timer: `timer_set()` underflow safety check (tracking issue)\n#10545: periph_timer: systematic proportional error in timer_set\n#10523: saml21 system time vs rtc\n#10510: xtimer_set_msg: crash when using same message for 2 timers\n#10073: xtimer_usleep wrong delay time\n#9187: sys/newlib: gettimeofday() returns time since boot, not current wall\n       time.\n#9052: misc issues with tests/trickle\n#9049: xtimer mis-scaling with long sleep times\n#8746: stm32_common/periph/rtc: current implementation broken/poor accuracy\n#8251: MSP430: periph_timer clock config wrong\n#7347: xtimer_usleep stuck for small values\n#7114: xtimer: add's items to the wrong list if the timer overflows between\n       _xtimer_now()  and irq_disable()\n#6442: cpu/native: timer interrupt issue\n#6052: tests: xtimer_drift gets stuck on native\n\nDrivers related issues (14)\n---------------------------\n#15121: PWM: Single-phase initialization creates flicker\n#14506: mdt_erase success, but vfs_format resets board (esp32-heltec-lora32-v2)\n#14439: (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n        timeout\n#14424: adc is not a ADC-Driver but a analog pin abstraction\n#13527: examples/dtls-wolfssl not working on pba-d-01-kw2x\n#13444: Potential security and safety race conditions on attached devices\n#13079: drivers/srf04: incorrect values on ATmega based platforms\n#12445: driver/hts221: Temperature and Humidity readings incorrect\n#12371: fail to send data to can bus\n#12057: ESP32 + DHT + SAUL reading two endpoints causes freeze.\n#12045: floats and doubles being used all over the place.\n#11104: STM32: SPI clock not returning to idle state and generating additional\n        clock cycles\n#9419: cpu/msp430: GPIO driver doesn't work properly\n#4876: at86rf2xx: Simultaneous use of different transceiver types is not\n       supported\n\nNative related issues (5)\n-------------------------\n#15878: examples/ccn-lite: floating point exception while testing on native\n#15888: tests/test_tools: test fails while testing on samr21-xpro/iotlab-m3\n#13501: SDL2 does not work due to missing getpid\n#5796: native: tlsf: early malloc will lead to a crash\n#495: native not float safe\n\nOther platforms related issues (19)\n-----------------------------------\n#14822: MPU doesn't work on cortex-m0+\n#14728: stm32f7: Large performance difference between stm32f746 and stm32f767\n#14679: examples/gnrc_border_router: esp_wifi crashes on disconnect\n#14572: tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1\n#14410: MIPS: toolchain objcopy doesn't work and no .bin can be generated\n#14237: esp32-wroom-32: tests/netstats_l2 failing sometimes\n#14015: stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch after\n        __WFI()\n#13606: gcoap/esp8266: Stack overflow with gcoap example\n#13390: Cannot use LLVM with Cortex-M boards\n#13104: boards/hifive1: flashing issue\n#13086:  Failing tests on FE310 (Hifive1b)\n#12763: [TRACKING] Fixes for automatic tests of ESP32 boards.\n#12651: Failing tests on AVR (tested with atmega256rfr2-xpro)\n#12168: pkg/libb2: blake2s doesn't work on AVR\n#11885: arm7: printf() with float/double not working\n#10258: Incorrect default $PORT building for esp32-wroom-32 on macOS\n#10122: Indeterministic hard fault in _mutex_lock(), with nRF52 SoftDevice\n#10076: cpu/cortexm_common: irq_enable returns the current state of interrupts\n        (not previous)\n#6567: periph/spi: Switching between CPOL=0,1 problems on Kinetis with software\n       CS\n\nBuild system related issues (14)\n--------------------------------\n#15185: build: info-build doesn't work with boards without port set\n#14504: BUILD_IN_DOCKER ignores USEMODULE\n#14288: pkg/ccn-lite: unable to `make -j -C examples/ccn-lite-relay`\n#14264: make: ccache leads to differing binaries\n#13492: make -j flash broken on esp* (will always flash the previous binary)\n#12771: dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck 1.89\n#10850: Tracking: remove harmful use of `export` in make and immediate\n        evaluation\n#9913: Build dependencies - processing order issues\n#9742: `buildtest` uses wrong build directory\n#9645: Different build behavior between `murdock` and `riot/riotbuild:latest`\n       image\n#8913: make: use of immediate value of variables before they have their final\n       value\n#8122: doxygen: riot.css modified by 'make doc'\n#6120: Windows AVR Mega development makefile Error\n#4053: macros: RIOT_FILE_RELATIVE printing wrong file name for headers\n\nOther issues (41)\n-----------------\n#15870: examples/micropython: floating point exception while testing on native\n#15814: usb-serial/list-ttys.sh: Broken when a debugger offers multiple serial\n        ports\n#15528: Conflict between nimble and uwb-core packages\n#15072: periph_timer: Test coverage & broken on STM32F767ZI\n#15066: tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n        LLVM\n#15006: Two bugs may lead to NULL dereference.\n#14929: cpu/sam0: flashpage write / read cycle produces different results\n        depending on code layout in flash\n#14635: File systems report names with leading slashes\n#14578: tests/cpp11_*: failing on i-nucleo-lrwan1\n#14576: riotboot/nrf52840dk: flashing slot1 with JLINK fails\n#14548: edbg: long lines flooded over serial become garbled\n#14520: examples / tests: LoRa tests fail on platforms that don't support LoRa\n#14390: gcoap: Suspected crosstalk between requests (possible NULL call)\n#14315: DTLS examples cannot send message to localhost\n#14167: Gcoap drops long packages instead of gracefully erring out\n#13918: cpu/stm32f1: CPU hangs after wake-up from STOP power mode\n#13541: Order of auto_init functions\n#13285: Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto\n#13133: tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n        esp32-wroom-32\n#13120: tests: broken with stdio_rtt if auto_init is disabled\n#13044: _NVIC_SystemReset stuck in infinite loop when calling pm_reboot through\n        shell after flashing with J-Link\n#12897: Can't build relic with benchmarks or tests\n#12889: CC2538DK board docs: broken links\n#12732: tests: some tests don't work with `newlib` lock functions.\n#12621: Potential race condition in compile_and_test_for_board.py\n#12108: `make term` output is inconsistent between boards, `ethos` and `native`\n#12105: [TRACKING] sys/shell refactoring.\n#11243: sys/riotboot: documentation issues\n#10751: Possible memset optimized out in crypto code\n#10731: nanocoap: incomplete response to /.well-known/core request\n#10639: sys/stdio_uart: dropped data when received at once\n#10121: RIOT cannot compile with the latest version of macOS (10.14) and Xcode\n        10\n#9371: assert: c99 static_assert macro doesn't function for multiple\n       static_asserts in the same scope\n#7365: scheduler: priority inversion problem\n#7220: sys/fmt: Missing tests for fmt_float, fmt_lpad\n#6533: tests/lwip target board for python test is hardcoded to native\n#5009: RIOT is saw-toothing in energy consumption (even when idling)\n#4866: periph: GPIO drivers are not thread safe\n#4488: Making the newlib thread-safe\n#3256: make: Setting constants on compile time doesn't really set them\n       everywhere\n#2346: Tracker: Reduce scope on unintended COMMON variables\n\nThere are 152 known issues in this release\n\nFixed Issues since the last release (2020.10)\n=============================================\n\n#15765: GitHub: Typo in WIP label\n#15691: examples/posix_socket: doesn't work between 2 iotlab-m3\n#15649: Posix Sockets - UDP not going out while using GNRC\n#15626: vera++: reports \"warning: keyword 'new' not followed by a single space\"\n#15574: Fix for #15353 is incomplete\n#15538: Crash on context switch on Cortex-M\n#15521: Missing error check of clist_foreach(), mbox_try_put() and\n        msg_try_send()\n#15517: pkg/tinydtls: async event SOCK_ASYNC_CONN_FIN does not indicate which\n        session has been finished\n#15495: C++ compile error with gnrc_lorawan\n#15457: RIOT OS and Relic Segmentation fault\n#15447: w5100 driver's bug\n#15434: stm32: cmsis: spurious build issues\n#15406: There are unsatisfied feature requirements: periph_adc\n#15357: Link failures since 81cb769\n#15353: uhcp: Incorrect handling of uhcp_push_t prefix\n#15311: Arduino's Serial.print(float) doesn't work\n#15102: Add whole linked list of gcoap_listener_t to coap listener\n#15028: Suspicious code in emCute\n#14568: tests/pkg_libfixmath_unittests: failing on multiple platforms\n#13277: Y2038 tracking issue / strategy\n\n20 fixed issues since last release (2020.10)\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\nMore information\n================\nhttp://www.riot-os.org\n\nMailing lists\n-------------\n* RIOT OS kernel developers list\n  devel@riot-os.org (http://lists.riot-os.org/mailman/listinfo/devel)\n* RIOT OS users list\n  users@riot-os.org (http://lists.riot-os.org/mailman/listinfo/users)\n* RIOT commits\n  commits@riot-os.org (http://lists.riot-os.org/mailman/listinfo/commits)\n* Github notifications\n  notifications@riot-os.org (http://lists.riot-os.org/mailman/listinfo/notifications)\n\nIRC, Matrix and Forum\n------------\n* Join the RIOT IRC channel at: irc.freenode.net, #riot-os\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n* Join the RIOT Forum at: forum.riot-os.org\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\n\nRIOT-2020.10 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release:\n===================\n\nThe 2020.10 release includes:\n\n - Support for PicoLIBC as standard C library implementation\n - A new radio abstraction layer for ieee802.15.4 radios\n - Improvement to the linking of modules\n - An improved algorithm for generating local unique identifiers\n - Pagewise addressing support for MTD devices\n - 23 additional modules supported by Kconfig\n - Initial rework of the clock modelling on stm32 devices\n - 5 new boards, 2 new device drivers, 7 packages updated\n\n482 pull requests, composed of 1355 commits, have been merged since the\nlast release, and 84 issues have been solved. 64 people contributed with\ncode in 94 days. 2426 files have been touched with 133358 (+) insertions and\n756906 deletions (-).\n\nNotations used below:\n=====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\nNew features and changes\n========================\n\nCore\n----\n+ init: make boot message configurable\n+ panic: callback app during panic\n+ bitarithm: add bitarithm_test_and_clear()\n* thread: Add THREAD_NAMES make flag\n* kernel_defines.h: Fix container_of()\n* core: Add and use helper functions for internal data\n* treewide: Fix direct access to scheduler internals\n* core/bitarithm: use __builtin_clz() for bitarithm_msb()\n\nSystem Libraries\n----------------\n+ architecture: New module to access architecture internals\n+ Add support for PicoLIBC\n+ ztimer: add ztimer_spin()\n+ ztimer: add periodic timers API\n* byteorder:\n    * Moved to sys\n    + Add byteorder_bebuftohll() and inverse\n    + add uint32 from/to buffer funcs\n+ event: implement waiting on multiple queues\n+ evtimer: add mbox support\n+ random: add SHA256 mode to SHA1PRNG & tests\n* sys/luid: improve luid_base() algorithm\n* tsrb: Make thread-safe\n* pipe_dynamic: fix possible null pointer dereference\n\nNetworking\n----------\n+ ieee802154_submac: add initial support for common MAC sub layer\n+ ieee802154/radio_hal: introduce Radio HAL for IEEE802.15.4 compatible radios\n+ EUI:\n    + luid: add luid_netdev_get_eui48() & luid_netdev_get_eui64()\n    + eui64: add eui64_to_eui48()\n+ link_layer: implement EUI provider\n* luid: shuffle bytes\n* uhcp: use LOG_xxx functions\n* gcoap: Insert registrations at the front\n* gnrc_ipv6_nib: only multicast probe UNREACHABLE neighbor if 6LR\n* gnrc_ipv6_nib: set NCE stale on incoming ARO\n* gnrc_ipv6_nib: don't add non-link-local to NC without ARSM\n+ gnrc_netif_pktq: add packets to optional send queue when device is busy\n* emcute: fix buffer overflow in _willupd_msg()\n* SUIT:\n    + Introduction of a payload storage API for SUIT manifest payloads\n    * Upgrade to draft-ietf-suit-manifest-09\n    * fail fetch if the image size doesn't match expected\n* gnrc:\n    - Remove cyclic dependencies\n    - Remove deprecated module gnrc_nettest\n- netopt: remove deprecated alias NETOPT_LINK_CONNECTED\n\nPackages\n--------\n+ openwsn: add riot based openwsn scheduler\n+ openwsn: add shell commands\n* openthread: migrate to event loop\n* nimble/netif: fix deadlock on connection loss\n* wolfssl: bump version to 4.5.0\n* nanopb: bump version to 0.4.3\n* ccn-lite: bump version\n* cn-cbor bump to 1.0.0\n* tinycbor: bump to v0.5.3\n* tinydtls: enforce the selection of a crypto secure PRNG\n* jerryscript: bump to version 2.3.0\n* semtech-loramac: replace xtimer by ztimer\n* lvgl:\n    + add logic for managing touch devices\n    + introduce screen_dev wrapper\n    * bump to v7\n- emb6: remove deprecated package\n\nBoards\n------\n+ nrf52: Enable PWM on the LED pins\n+ nucleo-g071rb: add initial support\n+ nucleo-g070rb: add board\n+ nucleo-g431rb: add initial support\n+ Support for YARM board\n+ add Adafruit Itsy Bitsy\n* samr21-xpro: fix reading EUI-64 from EDBG on cold boot\n* nucleo-l452re: add i2c config\n* hifive1b: add support for openocd programmer\n- remove support for wsn430-1_3b and wsn430-1_4\n\nCPU\n---\n* cortexm:\n    + Make no_thread_idle compatible with cortex-m0\n    + Add thread info to hard fault handler\n    + advertise puf_sram feature\n    * Skip context save/restore on scheduling the previous thread\n    * use mpu stack guard if DEVELHELP is enabled\n    * fix check for bitbanding\n    * Flush pipeline after triggering PendSV\n+ cc2538: add Watchdog implementation\n* cc26xx_cc13xx:\n    * add & link CCFG configuration\n    * enable periph clocks on sleep\n* fe310:\n    + Add custom PLIC driver as peripheral\n    * Merge and optimize trap_entry with irq_arch\n    * Unify linker scripts\n* msp430: Update to inline-able IRQ API Area\n* nrf5x_common: UART: add support for 1 MBaud\n* stm32:\n    + generate vectors C files and IRQ defines from CMSIS headers\n    + stm32cmsis: retrieve STM32 CMSIS header from a package\n    + g0: add basic support\n    + implement periph_timer_periodic\n    * Add support for arbitrary SPI clock rate\n    * f0/f1/f3/l0/l1/l4/wb: rework clock initialization and configuration\n    - disable MPU for cortex-m0+\n* sam0:\n    + GPIO: use tamper detection to wake from Deep Sleep\n    + add support to run PWM off TC timers\n    + ADC: add support for samd5x/same5x\n    + Add support for Single-cycle I/O Port for GPIO\n    * UART: implement arithmetic BAUD mode\n    * merge RTC & RTT implementation\n    * flashpage: clean up implementation\n- saml1x: Remove MPU feature\n\nDevice Drivers\n--------------\n+ at86rf2xx: spi security module\n+ at86rf2xx: support frame retry reporting on AT86RFR2\n+ soft_uart: add software based UART implementation\n+ scd30 : Add driver for scd30 sensor\n+ stm32_eth: add 'NETDEV_EVENT_LINK_UP' event\n+ Add support for Adafruit Seesaw Soil moisture sensor\n+ radio_hal:\n    + introduce Radio HAL for IEEE802.15.4 compatible radios\n    + cc2538_rf: implement Radio HAL\n    + nrf52840: implement Radio HAL\n+ mtd: add page addressed operation\n* stmpe811: fix interrupt polarity & interrupt generation\n* sps30: Update units of measurement\n* sps30: Add sleep mode\n- sdcard_spi: remove auto-init\n\nBuild System / Tooling\n----------------------\n+ Add libstdcpp feature\n+ gnrc_border_router: Add USB Ethernet support\n+ buspirate: add Bus Pirate as Debug Adapter\n* README: Add more badges\n* Convert remaining Python2 users to Python3\n* openocd-adapters: select transport based on adapter\n* Makefile.{base,include}: Fix linking for C++ code in external modules\n* link object files instead of archives\n* tapsetup:\n    - Add support for listing bridges\n    - Add support to configure addresses for bridge\n    - Add support for configuring routes and forwarding capabilities for bridge\n    - Add TUN support\n\nTesting\n-------\n+ vagrant: add Vagrantfile to test native in FreeBSD\n+ compile_and_test_for_board.py: add optional JUnit XML support\n* bench_*: Add ticks per iteration results\n\nKconfig\n-------\n+ Finished modelling provided features\n+ Modules with support added:\n    + credman\n    + cord\n    + nrf-based\n    + ek-lm4f120xl\n    + lpc1768-based\n    + lpc2387-based\n    + native\n    + mips32r2-based\n    + sam3-based\n    + sam0_common\n    + same54-xpro\n    + saml1x-based\n    + saml21-based\n    + stm32\n    + l2filter\n    + dhcpv6\n    + hifive1(b) clock area\n    + stm32gx clock configuration\n    + periph/timer\n    + netif\n    + skald\n    + sock_dtls\n    + lora\n+ add genconfig script\n* enable incremental compilation on config changes\n* include KCONFIG_OUT_CONFIG unconditionally\n\nAPI Changes\n===========\n- gcoap: remove gcoap_finish\n* gpio: IRQs triggered after gpio_irq_disable() are discarded\n* sched: Refactor to return the next scheduled thread\n* sock: Application should pull in the pseudomodules\n* driver-guide.md: Drivers are expected to return negative errno values\n* nrf52xxxdk: configure LEDs as PWM\n\nKnown issues\n============\n\nNetworking related issues (42)\n------------------------------\n#14962: LoRaWan node ISR stack overflowed\n#14689: dist/tools/sliptty/start_network.sh: IPv6 connectivity is broken on PC\n#13997: ping6 is failing when testing with cc2538dk\n#13745: ethos: Unable to choose global source address.\n#13493: ethernet: Missing multicast addr assignment\n#13280: nrf52: Not able to add global or ULA address to interface\n#13088: Riot-os freezes with lwip + enc28j60 + stm32L4\n#12943: driver/mrf24j40: blocks shell input with auto_init_gnrc_netif\n#12884: examples/cord_ep: Dead lock when (re-)registering in callback function\n#12857: examples/gnrc_networking_mac broken on ATmega\n#12761: samr30 xpro doesn't seem to use its radio ok\n#12642: Emcute cannot create a double-byte name\n#12565: gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n        packet buffer\n#12264: ethos: Unable to handle fragmented IPv6 packets from Linux kernel\n#12210: stale border router does not get replaced\n#11988: ethos: fails to respond to first message.\n#11860: send data with UDP at 10HZ, the program die\n#11852: scan-build errors found during 2019.07 testing\n#11405: nrfmin: communication not possible after multicast ping with no interval\n#11033: 6lo: RIOT does not receive packets from Linux when short_addr is set\n#10969: net: netdev_driver_t::send() doc unclear\n#10861: cpu/esp8266: Tracking open problems of esp_wifi netdev driver\n#10809: openthread: does not build on current Arch\n#10410: Missing drop implementations in netdev_driver_t::recv\n#10389: gnrc_sock_udp: Possible Race condition on copy in application buffer\n#10380: netdev_ieee802154: Mismatch between radio ll address and in memory\n        address\n#10370: gomach: Resetting netif with cli doesn't return\n#10338: xbee: setting PAN ID sometimes fails\n#8779: CC2538 RF overlapping PIN usage\n#8752: mrf24j40: does not link for examples/default\n#8271: app/netdev: application stops working after receiving frames with\n       assertion or completely without error\n#8242: at86rf2xx: Dead lock when sending while receiving\n#8199: gcoap example request on tap I/F fails with NIB issue\n#7737: pkg: libcoap is partially broken and outdated\n#7474: 6lo gnrc fragmentation expects driver to block on TX\n#7304: General 802.15.4/CC2538 RF driver dislikes fast ACKs\n#6018: nRF52: gnrc_6lowpan_ble: memory leak with nordic_softdevice_ble\n#5863: OSX +  SAMR21-xpro: shell cannot handle command inputs larger than 64\n       chars\n#5486: at86rf2xx: lost interrupts\n#5230: gnrc ipv6: multicast packets are not dispatched to the upper layers\n#5051: Forwarding a packet back to its link layer source should not be allowed\n#4527: gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n       address\n\nTimer related issues (15)\n-------------------------\n#13321: Sleep mode for Arduino\n#13072: periph/timer: `timer_set()` underflow safety check (tracking issue)\n#10545: periph_timer: systematic proportional error in timer_set\n#10523: saml21 system time vs rtc\n#10510: xtimer_set_msg: crash when using same message for 2 timers\n#10073: xtimer_usleep wrong delay time\n#9187: sys/newlib: gettimeofday() returns time since boot, not current wall\n       time.\n#9052: misc issues with tests/trickle\n#9049: xtimer mis-scaling with long sleep times\n#8746: stm32_common/periph/rtc: current implementation broken/poor accuracy\n#8251: MSP430: periph_timer clock config wrong\n#7347: xtimer_usleep stuck for small values\n#7114: xtimer: add's items to the wrong list if the timer overflows between\n       _xtimer_now()  and irq_disable()\n#6442: cpu/native: timer interrupt issue\n#6052: tests: xtimer_drift gets stuck on native\n\nDrivers related issues (14)\n---------------------------\n#15121: PWM: Single-phase initialization creates flicker\n#14506: mdt_erase success, but vfs_format resets board (esp32-heltec-lora32-v2)\n#14439: (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n        timeout\n#14424: adc is not a ADC-Driver but a analog pin abstraction\n#13527: examples/dtls-wolfssl not working on pba-d-01-kw2x\n#13444: Potential security and safety race conditions on attached devices\n#13079: drivers/srf04: incorrect values on ATmega based platforms\n#12445: driver/hts221: Temperature and Humidity readings incorrect\n#12371: fail to send data to can bus\n#12057: ESP32 + DHT + SAUL reading two endpoints causes freeze.\n#12045: floats and doubles being used all over the place.\n#11104: STM32: SPI clock not returning to idle state and generating additional\n        clock cycles\n#9419: cpu/msp430: GPIO driver doesn't work properly\n#4876: at86rf2xx: Simultaneous use of different transceiver types is not\n       supported\n\nNative related issues (3)\n-------------------------\n#13501: SDL2 does not work due to missing getpid\n#5796: native: tlsf: early malloc will lead to a crash\n#495: native not float safe\n\nOther platforms related issues (19)\n-----------------------------------\n#14822: MPU doesn't work on cortex-m0+\n#14728: stm32f7: Large performance difference between stm32f746 and stm32f767\n#14679: examples/gnrc_border_router: esp_wifi crashes on disconnect\n#14572: tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1\n#14410: MIPS: toolchain objcopy doesn't work and no .bin can be generated\n#14237: esp32-wroom-32: tests/netstats_l2 failing sometimes\n#14015: stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch after\n        __WFI()\n#13606: gcoap/esp8266: Stack overflow with gcoap example\n#13390: Cannot use LLVM with Cortex-M boards\n#13104: boards/hifive1: flashing issue\n#13086:  Failing tests on FE310 (Hifive1b)\n#12763: [TRACKING] Fixes for automatic tests of ESP32 boards.\n#12651: Failing tests on AVR (tested with atmega256rfr2-xpro)\n#12168: pkg/libb2: blake2s doesn't work on AVR\n#11885: arm7: printf() with float/double not working\n#10258: Incorrect defaultPORT building for esp32-wroom-32 on macOS\n#10122: Indeterministic hard fault in _mutex_lock(), with nRF52 SoftDevice\n#10076: cpu/cortexm_common: irq_enable returns the current state of interrupts\n        (not previous)\n#6567: periph/spi: Switching between CPOL=0,1 problems on Kinetis with software\n       CS\n\nBuild system related issues (14)\n--------------------------------\n#15185: build: info-build doesn't work with boards without port set\n#14504: BUILD_IN_DOCKER ignores USEMODULE\n#14288: pkg/ccn-lite: unable to `make -j -C examples/ccn-lite-relay`\n#14264: make: ccache leads to differing binaries\n#13492: make -j flash broken on esp* (will always flash the previous binary)\n#12771: dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck 1.89\n#10850: Tracking: remove harmful use of `export` in make and immediate\n        evaluation\n#9913: Build dependencies - processing order issues\n#9742: `buildtest` uses wrong build directory\n#9645: Different build behavior between `murdock` and `riot/riotbuild:latest`\n       image\n#8913: make: use of immediate value of variables before they have their final\n       value\n#8122: doxygen: riot.css modified by 'make doc'\n#6120: Windows AVR Mega development makefile Error\n#4053: macros: RIOT_FILE_RELATIVE printing wrong file name for headers\n\nOther issues (41)\n-----------------\n#15072: periph_timer: Test coverage & broken on STM32F767ZI\n#15066: tests/pkg_libhydrogen: test fails on master for the samr21-xpro with\n        LLVM\n#15006: Two bugs may lead to NULL dereference.\n#14929: cpu/sam0: flashpage write / read cycle produces different results\n        depending on code layout in flash\n#14635: File systems report names with leading slashes\n#14578: tests/cpp11_*: failing on i-nucleo-lrwan1\n#14576: riotboot/nrf52840dk: flashing slot1 with JLINK fails\n#14568: tests/pkg_libfixmath_unittests: failing on multiple platforms\n#14548: edbg: long lines flooded over serial become garbled\n#14520: examples / tests: LoRa tests fail on platforms that don't support LoRa\n#14390: gcoap: Suspected crosstalk between requests (possible NULL call)\n#14315: DTLS examples cannot send message to localhost\n#14167: Gcoap drops long packages instead of gracefully erring out\n#13918: cpu/stm32f1: CPU hangs after wake-up from STOP power mode\n#13541: Order of auto_init functions\n#13345: sys/xtimer: segmentation fault: in function xtimer_msg_received_timeout\n#13285: Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto\n#13277: Y2038 tracking issue / strategy\n#13133: tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n        esp32-wroom-32\n#13120: tests: broken with stdio_rtt if auto_init is disabled\n#13044: _NVIC_SystemReset stuck in infinite loop when calling pm_reboot through\n        shell after flashing with J-Link\n#12897: Can't build relic with benchmarks or tests\n#12889: CC2538DK board docs: broken links\n#12732: tests: some tests don't work with `newlib` lock functions.\n#12621: Potential race condition in compile_and_test_for_board.py\n#12108: `make term` output is inconsistent between boards, `ethos` and `native`\n#12105: [TRACKING] sys/shell refactoring.\n#11243: sys/riotboot: documentation issues\n#10751: Possible memset optimized out in crypto code\n#10731: nanocoap: incomplete response to /.well-known/core request\n#10639: sys/stdio_uart: dropped data when received at once\n#10121: RIOT cannot compile with the latest version of macOS (10.14) and Xcode\n        10\n#9371: assert: c99 static_assert macro doesn't function for multiple\n       static_asserts in the same scope\n#7365: scheduler: priority inversion problem\n#7220: sys/fmt: Missing tests for fmt_float, fmt_lpad\n#6533: tests/lwip target board for python test is hardcoded to native\n#5009: RIOT is saw-toothing in energy consumption (even when idling)\n#4866: periph: GPIO drivers are not thread safe\n#4488: Making the newlib thread-safe\n#3256: make: Setting constants on compile time doesn't really set them\n       everywhere\n#2346: Tracker: Reduce scope on unintended COMMON variables\n\nThere are 148 known issues in this release\n\nFixed Issues since the last release (2020.07)\n=============================================\n\n#15256: Kconfig file/folder name collision on case-insensitive filesystem\n#15255: Repository 'broken' on macOS due to case-insensitive names\n#15171: Failed assertion when using gnrc_minimal with SLIP\n#15137: ESP8266 does not respond\n#15130: cpu/cc26xx_cc13xx: CPU gets stuck on sched_arch_idle\n#15123: esp32: mtd tests failing on CI\n#15118: make: target `info-objsize` broken\n#15085: failing assert in core/msg.c:386 when `ping6` on Nucleo-F767ZI\n#15065: pkg_utensor: Hard fault with LLVM\n#15060: ztimer tests fail on efm32\n#15045: Some I2C devices are not working on iotlab-m3\n#15041: 2020.07-branch bug:RIOT/cpu/stm32/include/vendor/stm32f103xe.h\n#15023: gnrc: all iotlab-m3 nodes have identical short HW addresses\n#15016: Possible memory leak in cpu/native/syscalls.c\n#15015: Is there a buffer overflow bug in drivers/at86rf2xx/at86rf2xx_getset.c?\n#14988: tests/mtd_flashpage is broken on iotlab-m3 and b-l072z-lrwan1\n#14980: hifive1b: sys/ztimer/core.c:159 => *** RIOT kernel panic: FAILED\n        ASSERTION.\n#14958: nucleo-f303k8 no longer work since PR #14892\n#14957: Return value of gnrc* calls not checked for -1\n#14939: puf_sram not used when included as a feature\n#14773: Can't read SD cards filled with more then 4 GiB data\n#14752: Return value of gnrc_netif_ipv6_addr_idx is not checked for negative\n#14735: Global Address remains in state TNT[3] forever\n#14667: Undefined behavior in `pkg/semtech-loramac/contrib/`\n#14636: native: reboot exits instance with TAP interface\n#14514: Uncrustify enforces deviation of coding convention\n#14466: Linking C++\n#14217: tests/periph_timer_periodic is failing\n#14169: Gcoap does not handle separate responses\n#13838: Global Address remains in state TNT[3] forever\n#13496: cpu/stm32/eth, board/nucleo-f767z1: ethernet buffering issue (ping >1s)\n        after debug break\n#13490: cpu/stm32/eth, board/nucleo-f767z1: ethernet initialisation fails\n        sometimes\n#13267: Failing tests on MSP430 (z1)\n#13204: xtimer problem with nucleo32 boards\n#11390: gnrc networking crashes on nRF51dk\n#9882: sys/tsrb is not thread safe\n#9709: examples: failed assertion in dtls-echo example\n#9656: gnrc/netif: various problems after resetting interface a second time\n#9518: periph/i2c: tracking bugs and untested acks\n#8408: pkg/fatfs: linker error when build tests/pkg_fatfs_vfs for msb430 based\n       boards\n#6650: GPIO Port shift in cc2538 is inconsistent\n#4954: chronos: compiling with -O0 breaks\n\n42 fixed issues since last release (2020.07)\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\nMore information\n================\nhttp://www.riot-os.org\n\nMailing lists\n-------------\n* RIOT OS kernel developers list\n  devel@riot-os.org (http://lists.riot-os.org/mailman/listinfo/devel)\n* RIOT OS users list\n  users@riot-os.org (http://lists.riot-os.org/mailman/listinfo/users)\n* RIOT commits\n  commits@riot-os.org (http://lists.riot-os.org/mailman/listinfo/commits)\n* Github notifications\n  notifications@riot-os.org (http://lists.riot-os.org/mailman/listinfo/notifications)\n\nIRC & Matrix\n------------\n* Join the RIOT IRC channel at: irc.freenode.net, #riot-os\n* Join the RIOT Matrix room at: #riot-os:matrix.org\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\n\nRIOT-2020.07.1 - Release Notes\n==============================\nThis is a bug fixing release for the RIOT 2020.07 release.\nThe following bugs were fixed:\n\n#14670: tests/lwip_sock_tcp: fix -EADDRINUSE test\n\n#14671: pkg/lwip: Use IS_ACTIVE() and bugfix\n    - pkg/lwip: Compatibility with IS_USED()\n    - pkg/lwip: Use IS_ACTIVE() & NETCONNTYPE_ISIPV6()\n\n#14686: gnrc_sixlowpan_frag_vrb: fix cppcheck warning\n\n#14693: cpu/msp430_common: fix thread_yield_higher() when called in isr\n\n#14685: gnrc/nib: fix _idx_dsts() calculation\n\n#14817: gnrc_sixlowpan_frag_rb: Check possibly uninitialized pointers\n\n\nRIOT-2020.07 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release:\n===================\n\nThe 2020.07 release puts a focus on the improvement of automated testing. In\nthat vein, various new CI integrations such as CircleCI for documentation\nbuilding and online presentation, and Github Actions to check the tooling of\nRIOT when merged. The `riotctrl_shell` python module allows to abstract shell\ncommands as python methods for testing using the newly created `riotctrl`\npython package [1]. Kconfig migration reached phase 2 with various board\nfeatures being exposed to Kconfig. New network protocols were ported for RIOT\nsuch as MQTT (in form of the `paho-mqtt` package) and the lookup client\ncomponent for CoRE RD `cord_lc`. The OpenWSN network stack with 6TiSCH support\nwas reintegrated into RIOT. Support for several new boards and new sensors was\nadded. Additionally, this release contains a number of bug fixes and test\nimprovements.\n\n546 pull requests, composed of 10452 commits, have been merged since the\nlast release, and 84 issues have been solved. 64 people contributed with\ncode in 106 days. 2371 files have been touched with 822149 (+) insertions and\n700313 deletions (-).\n\n[1]: https://pypi.org/project/riotctrl/\n\nNotations used below:\n=====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\nNew features and changes\n========================\n\nCore\n----\n* core: make idle thread optional\n+ macros/units: add unit conversion helper macros\n+ msg: add message bus\n* panic: launch USB bootloader on crash for easy recovery\n\nSystem libraries\n----------------\n* auto_init: automatically determine auto_init_*.c\n* base64: Clean up / improve implementation\n+ hashes: add sha224 and reuse sha256 code\n+ luid: provide luid_get_lb()\n+ phydat: added phydat to JSON converter\n+ posix: initial import of select() function (only support sockets for now)\n* ps: show free stack space in addition to used and total\n* shell:\n  + add optional hooks for shell commands\n  * native: stop RIOT when the shell reads EOF\n  * refactor readline function\n  * refactor tokenizer code\n+ shell_commands:\n  * alias ping=ping6\n  + provide command to reboot to bootloader\n+ stdio_semihosting: Initial include of Semihosting-based STDIO\n+ touch_dev: add generic API for touch device\n+ trace: add trace module\n+ pm: Add pm_get_blocker()\n* random:\n  + add option to use HWRNG as source of randomness\n  * optimize sha1prng\n* usb:\n  * allow for boards to define default custom VID/PID\n  * warn on test-ID usage in a unified location\n+ xtimer: xtimer_rmutex_lock_timeout\n* ztimer:\n  + add power management for ztimer clocks\n  * expose ZTIMER_MSEC/USEC_BASE\n\nNetworking\n----------\n+ cord: add CoRE RD lookup client implementation\n+ gcoap: add CoAP ping request\n* gnrc:\n  + gnrc_ipv6_ext_opt: initial import of hop-by-hop and destination option\n    handling\n  * gnrc_netif:\n    + add IPv6 event bus\n    + add option for non-std 6lo MTU\n    + add support for internal event loop\n    * use gnrc_netif-submodules to pull in upper-layer struct members\n  * gnrc_nettype: indirect NETTYPE definition via pseudo-modules\n  * gnrc_pktdump: fix dependencies\n  * gnrc_tcp:\n    + add retransmission timer\n    * rewrite API internal messaging\n    * rewrite recv buffer allocation/returning\n  * use exponent to configure message queue sizes\n* nanocoap: allow coap_opt_add_string() for non-zero-terminated strings\n+ netif: add functions to get and get by identifier\n+ sock_dtls: provide getter function for UDP sock\n* sock_util: add interface descriptor parsing to str2ep\n\nPackages\n--------\n* pkg: rework checkout process\n  * avoid copying Makefiles in package source when possible\n  * store packages sources in a global package directory\n* pkg: cleanup build system integration for\n  - cryptoauthlib, openthread, semtech-loramac, tinydtls, wakaama, u8g2,\n    ucglib, wolfssl\n* pkg: tools: ensure cmake based packages/tools are built out-of-source\n+ cryptoauthlib: wake pulse implementation for CPUs supporting\n  `periph_i2c_reconfigure`\n+ emlearn: add support to RIOT\n* gecko_sdk: update to v2.7.6\n* lwip:\n  * add IPv4 support for `netdev_tap`\n  * add support for nrf802154\n  * enable IPv4/IPv6 dual stack mode\n  + lwip_sock: provide implementation for `sock_*_recv_buf()`\n- lua: remove unnecessary patch\n+ paho-mqtt: add package and example\n* nimble:\n  + add static connection manager `statconn`\n  * netif:\n    * set host thread prio to 1\n    * simplify mbuf pool initialization\n  * update NimBLE ver (cd7d7aa286) + timing param cleanup\n+ openwsn: re-integrate the network stack as a package\n* tinydtls:\n  + add `sock_async` support for `sock_dtls`\n  + use latest development version (eda63f000c)\n* ucglib: refactoring and fixes\n\nBoards\n------\n+ cc1352p-launchpad: add support\n* common/blxxxpill:\n  + provide periph_rtt\n  * improve adc\n+ dwm1001: add support to Decawave DWM1001 dev board\n+ mcb2388: misc enhancements\n+ nrf52840-dongle: add support\n+ nrf52840dk: Add MTD configuration\n+ nucleo-g474re: add support\n* pic32-clicker: rename to 6lowpan-clicker\n+ samr30-xpro: add SPI dev for ext pin header\n+ samr3x-xpro: add riotboot feature\n+ serpente: add support\n+ sltb001a: enable CCS811 sensor\n+ sodaq-sff: add support for SODAQ SFF\n+ stm32f429i-disco: add support\n+ weact-f411ce: add support\n+ wemos-zero: add support\n\nCPU\n---\n* arm7_common: Update to inlineable IRQ API\n* atmega_common: Update to inlineable IRQ API\n* cortexm:\n  + allow to define reserved fields in CortexM vector table\n  * \"free\" SVC\n* cc26x2_cc13x2:\n  * add oscillator switching functions\n  * add periph_i2c implementation\n  * trim device registers on `cpu_init`\n* esp32:\n  * support of multiple heaps for newlib malloc\n  * replace RTC implementation by RTT implementation\n* fe310: migrate to inlined IRQ API\n+ kinetis: implement power modes for pm_layered\n* lpc2387:\n  * pm: enable SLEEP & POWERDOWN mode\n  * timer: use lpc2387_pclk_scale()\n+ mips_pic32_common: Implement GPIO IRQ\n+ native:\n  + add periph_eeprom driver implementation\n  * rename trace -> backtrace\n+ nrf52:\n  + add black magic probe config\n  + add missing vendor files\n  + implement EasyDMA-based SPI peripheral implementation\n+ nrf52811: initial support\n* nrf5x_common:\n  * add configurable RTT_FREQUENCY\n  * enable bias correction in hwrng\n* sam0_common:\n  + add DMA peripheral driver\n  + add PWM support for saml21, samd5x\n  + implement periph/dac\n  * make SPI peripheral DMA compatible\n  * move PWM to common code\n  * spi: move clk pin muxing into spi_acquire / spi_release\n  + UART: implement inverted RX & TX\n* samd21: PWM don't hard-code number of channels to 3\n* samd5x: allow to use XOSC as clock source\n* saml1x: pm: set deep flag\n+ stm32:\n  + add QDEC support for CPU_FAM_STM32F1\n  + add non-blocking UART\n  * decrease latency in SPI DMA path\n  + implement reset to bootloader\n  * filter availability of RNG by CPU not by board\n  * stm32_common: make RTT_FREQUENCY configurable\n  + stm32f4: Add DMA config for SPI\n  + stm32g4: add support\n\nDevice Drivers\n--------------\n+ atwinc15x0: add WiFi netdev driver\n+ at: Add at_urc_isr module to process URCs upon arrival\n+ at24cxxx: MTD wrapper for at24cxxx\n+ at86rf215:\n  + implement MR-O-QPSK\n  + implement MR-OFDM\n+ at86rf2xx: add support for high data rates\n+ dfplayer: New driver for the DFPlayer Mini MP3 player\n* ethos: use luid_get_eui48()\n+ edbg_eui: add driver to get MAC address from Atmel EDBG\n+ mhz19: initial support\n+ mrf24j40: add Turbo Mode\n+ mtd_spi_eeprom: add MTD wrapper for AT25XXX EEPROMs\n+ pca9633: add new driver\n+ periph/timer: add timer_set_periodic()\n+ periph/i2c: add periph_i2c_reconfigure feature & implementation for sam0\n+ periph/rtt: introduce RTT_MIN_OFFSET\n+ periph/spi: add periph_spi_reconfigure feature & implementation for sam0\n* pulse_counter: Use C11 atomics & bugfix\n+ sdp3x : Add driver for sdp3x sensor\n\nBuild System / Tooling\n----------------------\n+ make:\n  + add code generator targets\n  + add JLink support for stm32\n  * docker.inc.mk: add and use generic docker_run_make\n  + allow multiple external board dirs\n  + info-global.inc.mk: add info-boards-features-blacklisted\n  * resolve dependencies before Makefile.include\n+ riotctrl_shell:\n  + initial import of shell interaction spawn\n  + provide ipv6_nib interactions and parsers\n  + provide netif interactions and parsers\n+ tools:\n  + add script to run radvd on a tun interface\n  + provide tool to parse `pktbuf` output\n  * kconfiglib:\n    * add riot_kconfig to override default behaviours\n    * kconfiglib: bump to v14.1.0\n\nTesting\n-------\n+ fuzzing framework:\n  + add AFL-based fuzzing setup for network modules\n  + add fuzzing application for gcoap\n+ ci: setup github actions\n+ sys/test_utils/dummy_thread: initial commit\n+ tests/irq_disable_restore: Add test for irq_disable() / irq_restore()\n+ tests/periph_spi: add benchmark for acquire / release\n+ tests/periph_spi_dma: Add test for SPI with DMA\n+ uncrustify: add auto uncrustify with blacklist\n\nKconfig migration\n-----------------\n+ armv7_m/cortexm: declare CPU_ARCH and CPU_CORE\n+ boards: Model features in Kconfig\n  + arduino-leonardo, arduino-mega2560, atmega128x-based, atmega256rfr2-based,\n    atmega328p-based, cc2538-based, cc26xx_cc13xx-based, efm32-based, esp-based,\n    fe310-based, kinetis-based, msp430-based, samr21-xpro, slwstk6220a\n* kconfig: Declare common feature symbols\n+ drivers: Expose Configurations to Kconfig\n  + ads101x, at, at86rf215, bmx055, cc110x, dose.h, fxos8700, hdc1000, isl29020,\n    l3g4200d, lpsxxx, mag3110, mma8x5x, motor_driver, mtd_sdcard, opt3001,\n    pn532, rn2xx3, slipdev, sps30, tcs37727, tmp00x\n+ networking: Expose configurations to Kconfig\n  + asymcute, coap, csma\n  + gnrc:\n    + gomach, lwmac, mac, pktdump, pktbuf, rpl, tcp\n+ usbus/cdc/ecm: Expose configurations to Kconfig\n\nAPI Changes\n===========\n- cpu/sam0_common: drop prescaler from timer config\n- cpu/sam0_common: PWM config now requires GCLK source\n- drivers/mtd: Change API to return 0 on success\n- drivers/mtd_mapper: count offset in sectors\n- net/sock_dtls: provide getter function for UDP sock\n- net/sock_dtls: add timeout to sock_dtls_send and add sock_dtls_session_init\n\n    diff --git a/sys/include/net/sock/dtls.h b/sys/include/net/sock/dtls.h\n    index 96569723fc..6e66048bd4 100644\n    --- a/sys/include/net/sock/dtls.h\n    +++ b/sys/include/net/sock/dtls.h\n    @@ -476,6 +485,13 @@\n     extern \"C\" {\n     #endif\n\n    +#ifndef DTLS_HANDSHAKE_BUFSIZE\n    +#define DTLS_HANDSHAKE_BUFSIZE  (256)   /**< Size buffer used in handshake to\n    +                                             hold credentials */\n    +#endif\n    +\n    +#define SOCK_DTLS_HANDSHAKE     (EXDEV) /**< Return value for a successful\n    +                                             handshake */\n    +\n     /**\n      * @brief DTLS version number\n    @@ -546,26 +564,26 @@ void sock_dtls_init(void);\n     int sock_dtls_create(sock_dtls_t *sock, sock_udp_t *udp_sock,\n                          credman_tag_t tag, unsigned version, unsigned role);\n\n    +\n     /**\n    - * @brief Creates a new DTLS session\n    + * @brief Initialize session handshake.\n      *\n    - * Initializes handshake process with a DTLS server  at @p ep.\n    - *\n    - * @param[in]  sock     DLTS sock to use\n    - * @param[in]  ep       Remote endpoint of the session\n    - * @param[out] remote   The created session, cannot be NULL\n    + * Sends a ClientHello message to initialize the handshake. Call\n    + * @ref sock_dtls_recv() to finish the handshake.\n      *\n    - * @return  0 on success\n    - * @return  -EAGAIN, if DTLS_HANDSHAKE_TIMEOUT is `0` and no data is available.\n    - * @return  -EADDRNOTAVAIL, if the local endpoint of @p sock is not set.\n    - * @return  -EINVAL, if @p remote is invalid or @p sock is not properly\n    - *          initialized (or closed while sock_udp_recv() blocks).\n    - * @return  -ENOBUFS, if buffer space is not large enough to store received\n    - *          credentials.\n    - * @return  -ETIMEDOUT, if timed out when trying to create session.\n    + * @param[in] sock      DTLS sock to use\n    + * @param[in] ep        Remote endpoint to start a handshake with\n    + * @param[out] remote   Resulting session\n    + *\n    + * @return 1, if new handshake is started\n    + * @return 0, if there is an existing session\n    + * @return -ENOMEM, not enough memory to allocate for new peer\n    + * @return -EADDRNOTAVAIL, if the local endpoint of @p sock is not set.\n    + * @return -EINVAL, if @p remote is invalid or @p sock is not properly\n    + *         initialized (or closed while sock_udp_recv() blocks).\n      */\n    -int sock_dtls_session_create(sock_dtls_t *sock, const sock_udp_ep_t *ep,\n    -                             sock_dtls_session_t *remote);\n    +int sock_dtls_session_init(sock_dtls_t *sock, const sock_udp_ep_t *ep,\n    +                           sock_dtls_session_t *remote);\n\n     /**\n      * @brief Destroys an existing DTLS session\n    @@ -578,7 +596,7 @@ int sock_dtls_session_create(sock_dtls_t *sock, const sock_udp_ep_t *ep,\n     void sock_dtls_session_destroy(sock_dtls_t *sock, sock_dtls_session_t *remote);\n\n     /**\n    - * @brief Decrypts and reads a message from a remote peer.\n    + * @brief Receive handshake messages and application data from remote peer.\n      *\n      * @param[in] sock      DTLS sock to use.\n      * @param[out] remote   Remote DTLS session of the received data.\n    @@ -593,7 +611,8 @@ void sock_dtls_session_destroy(sock_dtls_t *sock, sock_dtls_session_t *remote);\n      *\n      * @note Function may block if data is not available and @p timeout != 0\n      *\n    - * @return The number of bytes received on success\n    + * @return  The number of bytes received on success\n    + * @return  -SOCK_DTLS_HANDSHAKE when new handshake is completed\n      * @return  -EADDRNOTAVAIL, if the local endpoint of @p sock is not set.\n      * @return  -EAGAIN, if @p timeout is `0` and no data is available.\n      * @return  -EINVAL, if @p remote is invalid or @p sock is not properly\n    @@ -657,28 +676,32 @@ ssize_t sock_dtls_recv_buf(sock_dtls_t *sock, sock_dtls_session_t *remote,\n      *                      if no session exist between client and server.\n      * @param[in] data      Pointer where the data to be send are stored\n      * @param[in] len       Length of @p data to be send\n    + * @param[in] timeout   Handshake timeout in microseconds.\n    + *                      If `timeout > 0`, will start a new handshake if no\n    + *                      session exists yet. The function will block until\n    + *                      handshake completed or timed out.\n    + *                      May be SOCK_NO_TIMEOUT to block indefinitely until\n    + *                      handshake complete.\n      *\n    - * @note Function may block until a session is created if there is no\n    - *       existing session with @p remote.\n    - *\n    - * @note Initiating a session through this function will require\n    - * @ref sock_dtls_recv() called from another thread to receive the handshake\n    - * messages.\n    + * @note    When blocking, we will need an extra thread to call\n    + *          @ref sock_dtls_recv() function to handle the incoming handshake\n    + *          messages.\n      *\n      * @return The number of bytes sent on success\n    + * @return  -ENOTCONN, if `timeout == 0` and no existing session exists with\n    + *          @p remote\n      * @return  -EADDRINUSE, if sock_dtls_t::udp_sock has no local end-point.\n      * @return  -EAFNOSUPPORT, if `remote->ep != NULL` and\n      *          sock_dtls_session_t::ep::family of @p remote is != AF_UNSPEC and\n      *          not supported.\n    - * @return  -EHOSTUNREACH, if sock_dtls_session_t::ep of @p remote is not\n    - *          reachable.\n      * @return  -EINVAL, if sock_udp_ep_t::addr of @p remote->ep is an\n      *          invalid address.\n      * @return  -EINVAL, if sock_udp_ep_t::port of @p remote->ep is 0.\n      * @return  -ENOMEM, if no memory was available to send @p data.\n    + * @return  -ETIMEDOUT, `0 < timeout < SOCK_NO_TIMEOUT` and timed out.\n      */\n     ssize_t sock_dtls_send(sock_dtls_t *sock, sock_dtls_session_t *remote,\n    -                       const void *data, size_t len);\n    +                       const void *data, size_t len, uint32_t timeout);\n\n     /**\n      * @brief Closes a DTLS sock\n    @@ -694,6 +717,47 @@ ssize_t sock_dtls_send(sock_dtls_t *sock, sock_dtls_session_t *remote,\n      */\n     void sock_dtls_close(sock_dtls_t *sock);\n\n    +/**\n    + * @brief Creates a new DTLS session\n    + *\n    + *  Initiates a handshake with a DTLS server at @p ep and wait until it\n    + * completes or timed out.\n    + *\n    + * @deprecated Will not be available after the 2020.10 release.\n    + *             Please use @ref sock_dtls_session_init() and\n    + *             @ref sock_dtls_recv() instead.\n    + *\n    + * @param[in]  sock     DLTS sock to use\n    + * @param[in]  ep       Remote endpoint of the session\n    + * @param[out] remote   The created session, cannot be NULL\n    + * @param[in]  timeout  Timeout to wait for handshake to finish.\n    + *                      Returns immediately if 0.\n    + *                      May be SOCK_NO_TIMEOUT to wait indefinitely until\n    + *                      handshake complete.\n    + *\n    + * @return  0 on success\n    + * @return  -ENOMEM, if no memory to allocate for new peer\n    + * @return  -EADDRNOTAVAIL, if the local endpoint of @p sock is not set.\n    + * @return  -EINVAL, if @p remote is invalid or @p sock is not properly\n    + *          initialized (or closed while sock_udp_recv() blocks).\n    + */\n    +static inline int sock_dtls_session_create(sock_dtls_t *sock, const sock_udp_ep_t *ep,\n    +                                    sock_dtls_session_t *remote, unsigned timeout)\n    +{\n    +    int res;\n    +    uint8_t buf[DTLS_HANDSHAKE_BUFSIZE];\n    +\n    +    assert(sock);\n    +    assert(remote);\n    +\n    +    res = sock_dtls_session_init(sock, ep, remote);\n    +    if (res <= 0) {\n    +        return res;\n    +    }\n    +\n    +    return sock_dtls_recv(sock, remote, buf, sizeof(buf), timeout);\n    +}\n    +\n     #include \"sock_dtls_types.h\"\n\n     #ifdef __cplusplus\n\n\nDeprecations\n============\n\nWarnings\n--------\n- GNRC_MAC_ENABLE_DUTYCYCLE_RECORD: Will be removed after 2021.01 release. Use\n  inverse CONFIG_GNRC_MAC_DISABLE_DUTYCYCLE_RECORD instead.\n- saul_reg_rm(): will be removed at a future date\n- sock_dtls_session_create(): will be removed after 2020.10 release. Please\n  use sock_dtls_session_init() and sock_dtls_recv() instead\n- pkg/nordic_softdevice_ble: will be removed after the 2020.10 release\n\nRemovals\n--------\n- netdev: remove NETOPT_IPV6_IID support for network devices\n\n\nKnown issues\n============\n\nNetworking related issues (44)\n------------------------------\n#13997: ping6 is failing when testing with cc2538dk\n#13745: ethos: Unable to choose global source address.\n#13496: cpu/stm32/eth, board/nucleo-f767z1: ethernet buffering issue (ping >1s)\n        after debug break\n#13493: ethernet: Missing multicast addr assignment\n#13490: cpu/stm32/eth, board/nucleo-f767z1: ethernet initialisation fails\n        sometimes\n#13280: nrf52: Not able to add global or ULA address to interface\n#13088: Riot-os freezes with lwip + enc28j60 + stm32L4\n#12943: driver/mrf24j40: blocks shell input with auto_init_gnrc_netif\n#12884: examples/cord_ep: Dead lock when (re-)registering in callback function\n#12857: examples/gnrc_networking_mac broken on ATmega\n#12761: samr30 xpro doesn't seem to use its radio ok\n#12642: Emcute cannot create a double-byte name\n#12565: gnrc_icmpv6_echo: flood-pinging another node leads to leaks in own\n        packet buffer\n#12264: ethos: Unable to handle fragmented IPv6 packets from Linux kernel\n#12210: stale border router does not get replaced\n#11988: ethos: fails to respond to first message.\n#11860: send data with UDP at 10HZ, the program die\n#11852: scan-build errors found during 2019.07 testing\n#11405: nrfmin: communication not possible after multicast ping with no interval\n#11033: 6lo: RIOT does not receive packets from Linux when short_addr is set\n#10969: net: netdev_driver_t::send() doc unclear\n#10861: cpu/esp8266: Tracking open problems of esp_wifi netdev driver\n#10809: openthread: does not build on current Arch\n#10410: Missing drop implementations in netdev_driver_t::recv\n#10389: gnrc_sock_udp: Possible Race condition on copy in application buffer\n#10380: netdev_ieee802154: Mismatch between radio ll address and in memory\n        address\n#10370: gomach: Resetting netif with cli doesn't return\n#10338: xbee: setting PAN ID sometimes fails\n#9709: examples: failed assertion in dtls-echo example\n#9656: gnrc/netif: various problems after resetting interface a second time\n#8779: CC2538 RF overlapping PIN usage\n#8752: mrf24j40: does not link for examples/default\n#8271: app/netdev: application stops working after receiving frames with\n       assertion or completely without error\n#8242: at86rf2xx: Dead lock when sending while receiving\n#8199: gcoap example request on tap I/F fails with NIB issue\n#7737: pkg: libcoap is partially broken and outdated\n#7474: 6lo gnrc fragmentation expects driver to block on TX\n#7304: General 802.15.4/CC2538 RF driver dislikes fast ACKs\n#6018: nRF52: gnrc_6lowpan_ble: memory leak with nordic_softdevice_ble\n#5863: OSX +  SAMR21-xpro: shell cannot handle command inputs larger than 64\n       chars\n#5486: at86rf2xx: lost interrupts\n#5230: gnrc ipv6: multicast packets are not dispatched to the upper layers\n#5051: Forwarding a packet back to its link layer source should not be allowed\n#4527: gnrc_ipv6: Multicast is not forwarded if routing node listens to the\n       address\n\nTimer related issues (17)\n-------------------------\n#14217: tests/periph_timer_periodic is failing\n#13321: Sleep mode for Arduino\n#13204: xtimer problem with nucleo32 boards\n#13072: periph/timer: `timer_set()` underflow safety check (tracking issue)\n#10545: periph_timer: systematic proportional error in timer_set\n#10523: saml21 system time vs rtc\n#10510: xtimer_set_msg: crash when using same message for 2 timers\n#10073: xtimer_usleep wrong delay time\n#9187: sys/newlib: gettimeofday() returns time since boot, not current wall\n       time.\n#9052: misc issues with tests/trickle\n#9049: xtimer mis-scaling with long sleep times\n#8746: stm32_common/periph/rtc: current implementation broken/poor accuracy\n#8251: MSP430: periph_timer clock config wrong\n#7347: xtimer_usleep stuck for small values\n#7114: xtimer: add's items to the wrong list if the timer overflows between\n       _xtimer_now()  and irq_disable()\n#6442: cpu/native: timer interrupt issue\n#6052: tests: xtimer_drift gets stuck on native\n\nDrivers related issues (13)\n---------------------------\n#14506: mdt_erase success, but vfs_format resets board (esp32-heltec-lora32-v2)\n#14439: (almost solved) SPI SD-Card driver: SPI initialisation freeze until\n        timeout\n#14424: adc is not a ADC-Driver but a analog pin abstraction\n#13527: examples/dtls-wolfssl not working on pba-d-01-kw2x\n#13444: Potential security and safety race conditions on attached devices\n#13079: drivers/srf04: incorrect values on ATmega based platforms\n#12445: driver/hts221: Temperature and Humidity readings incorrect\n#12371: fail to send data to can bus\n#12057: ESP32 + DHT + SAUL reading two endpoints causes freeze.\n#12045: floats and doubles being used all over the place.\n#11104: STM32: SPI clock not returning to idle state and generating additional\n        clock cycles\n#9419: cpu/msp430: GPIO driver doesn't work properly\n#4876: at86rf2xx: Simultaneous use of different transceiver types is not\n       supported\n\nNative related issues (3)\n-------------------------\n#13501: SDL2 does not work due to missing getpid\n#5796: native: tlsf: early malloc will lead to a crash\n#495: native not float safe\n\nOther platforms related issues (19)\n-----------------------------------\n#14572: tests/mpu_noexec_ram: fails on  i-nucleo-lrwan1\n#14410: MIPS: toolchain objcopy doesn't work and no .bin can be generated\n#14237: esp32-wroom-32: tests/netstats_l2 failing sometimes\n#14015: stm32152re: hardfault when DBGMCU_CR_DBG* bits are set and branch after\n        __WFI()\n#13606: gcoap/esp8266: Stack overflow with gcoap example\n#13390: Cannot use LLVM with Cortex-M boards\n#13267: Failing tests on MSP430 (z1)\n#13104: boards/hifive1: flashing issue\n#13086:  Failing tests on FE310 (Hifive1b)\n#12763: [TRACKING] Fixes for automatic tests of ESP32 boards.\n#12651: Failing tests on AVR (tested with atmega256rfr2-xpro)\n#12168: pkg/libb2: blake2s doesn't work on AVR\n#11885: arm7: printf() with float/double not working\n#10258: Incorrect default $PORT building for esp32-wroom-32 on macOS\n#10122: Indeterministic hard fault in _mutex_lock(), with nRF52 SoftDevice\n#10076: cpu/cortexm_common: irq_enable returns the current state of interrupts\n        (not previous)\n#8408: pkg/fatfs: linker error when build tests/pkg_fatfs_vfs for msb430 based\n       boards\n#6567: periph/spi: Switching between CPOL=0,1 problems on Kinetis with software\n       CS\n#4954: chronos: compiling with -O0 breaks\n\nBuild system related issues (13)\n--------------------------------\n#14504: BUILD_IN_DOCKER ignores USEMODULE\n#14288: pkg/ccn-lite: unable to `make -j -C examples/ccn-lite-relay`\n#14264: make: ccache leads to differing binaries\n#13492: make -j flash broken on esp* (will always flash the previous binary)\n#12771: dist/tools/cppcheck/cppchck.sh: errors when running with Cppcheck 1.89\n#10850: Tracking: remove harmful use of `export` in make and immediate\n        evaluation\n#9913: Build dependencies - processing order issues\n#9742: `buildtest` uses wrong build directory\n#9645: Different build behavior between `murdock` and `riot/riotbuild:latest`\n       image\n#8913: make: use of immediate value of variables before they have their final\n       value\n#8122: doxygen: riot.css modified by 'make doc'\n#6120: Windows AVR Mega development makefile Error\n#4053: macros: RIOT_FILE_RELATIVE printing wrong file name for headers\n\nOther issues (41)\n-----------------\n#14578: tests/cpp11_%: failing on i-nucleo-lrwan1\n#14576: riotboot/nrf52840dk: flashing slot1 with JLINK fails\n#14568: tests/pkg_libfixmath_unittests: failing on multiple platforms\n#14548: edbg: long lines flooded over serial become garbled\n#14520: examples / tests: LoRa tests fail on platforms that don't support LoRa\n#14514: Uncrustify enforces deviation of coding convention\n#14466: Linking C++\n#14390: gcoap: Suspected crosstalk between requests (possible NULL call)\n#14315: DTLS examples cannot send message to localhost\n#14169: Gcoap does not handle separate responses\n#14167: Gcoap drops long packages instead of gracefully erring out\n#13918: cpu/stm32f1: CPU hangs after wake-up from STOP power mode\n#13541: Order of auto_init functions\n#13345: sys/xtimer: segmentation fault: in function xtimer_msg_received_timeout\n#13285: Bug: openocd 0.10.0-6  Ubuntu dies while debugging with -rtos auto\n#13277: Y2038 tracking issue / strategy\n#13133: tests/pkg_tensorflow-lite: tests randomly failing on nrf52dk and\n        esp32-wroom-32\n#13120: tests: broken with stdio_rtt if auto_init is disabled\n#13044: _NVIC_SystemReset stuck in infinite loop when calling pm_reboot through\n        shell after flashing with J-Link\n#12897: Can't build relic with benchmarks or tests\n#12889: CC2538DK board docs: broken links\n#12732: tests: some tests don't work with `newlib` lock functions.\n#12621: Potential race condition in compile_and_test_for_board.py\n#12108: `make term` output is inconsistent between boards, `ethos` and `native`\n#12105: [TRACKING] sys/shell refactoring.\n#11243: sys/riotboot: documentation issues\n#10751: Possible memset optimized out in crypto code\n#10731: nanocoap: incomplete response to /.well-known/core request\n#10639: sys/stdio_uart: dropped data when received at once\n#10121: RIOT cannot compile with the latest version of macOS (10.14) and Xcode\n        10\n#9882: sys/tsrb is not thread safe\n#9518: periph/i2c: tracking bugs and untested acks\n#9371: assert: c99 static_assert macro doesn't function for multiple\n       static_asserts in the same scope\n#7365: scheduler: priority inversion problem\n#7220: sys/fmt: Missing tests for fmt_float, fmt_lpad\n#6533: tests/lwip target board for python test is hardcoded to native\n#5009: RIOT is saw-toothing in energy consumption (even when idling)\n#4866: periph: GPIO drivers are not thread safe\n#4488: Making the newlib thread-safe\n#3256: make: Setting constants on compile time doesn't really set them\n       everywhere\n#2346: Tracker: Reduce scope on unintended COMMON variables\n\nThere are 150 known issues in this release\n\nFixed Issues since the last release (2020.04)\n=============================================\n\n#14521: tests/test_tools: fails on `iotlab-m3` due to `core`/`cpu` regression\n#14415: Flashing nrf52dk with bmp breaks board\n#14409: doc/search: hitting return while searching on api.riot-os.org reloads\n        current page\n#14407: gnrc/RPL: instance ID not updated on reconnect\n#14399: cord_ep example timed out when registering to a resource directory\n#14380: dist/tools/flatc: cloning of the tool sporadically fails on the CI\n#14361: Bug : bad assertion in cpu/stm32/periph/pwm.c\n#14330: Improve driver implementation documentation\n#14328: sam0_common: make debug broken for boards using EDBG\n#14184: Part of puts/printf output is skipped\n#14164: Failed assertion when using netdev_ieee802154_mr_fsk\n#14158: kconfig is broken on case-insensitive file systems\n#14074: Memory read beyond input buffer boundaries in nanocoap packet parser\n#14035: I can't use w5100 to work on Release-2020.04 by using\n        RIOT/examples/emcute_mqttsn/.\n#14034: gcoap server breaks or becomes very unresponsive (sock_async related?)\n#13984: tests/pkg_ubasic: failing on esp32-wroom-32\n#13920: stm32: ztimer RTT backend overflow\n#13838: Global Address remains in state TNT[3] forever\n#13834: DHCPv6 client ends up in busy loop after a while\n#13419: Can't use nimble as prefix for modules\n#13209: examples/gnrc_border_router is crashing after some time\n#12909: Bug: Unexpected behavior with xtimer_periodic_wakeup() for large periods\n        on Nucleo-f401re\n#12858: KW2XRF: Broken network communication without netstats-l2\n#12205: core: atomic: Unable to compile starting with gcc 9.1.0\n#11859: examples: dtls-echo fails silently when DTLS_ECC flag enabled\n#11795: gnrc_tftp: string functions on non-null terminated input\n#11523: xtimer_periodic_wakeup crashing at high frequencies on frdm-kw41z\n#11472: Warnings from objcopy and size (binutils 2.32)\n#11388: SD card initialization: timeouts effectively blocking\n#11212: POSIX sockets + lwIP: bad file descriptor\n#11149: xtimer: hang on xtimer_spin_until (corner case)\n#10367: sam0.inc.mk: Did not find a device with serial ATML21xxxxxxxx\n#8589: Why using -F in avrdude?\n#8436: Kinetis PhyNode: failed to flash binary > 256K\n#8172: gnrc_netif, gnrc_uhcpc: Replacing prefix on border router results in no\n       configured prefix\n#8086: gnrc_rpl_p2p: port to nib and fix compile errors\n#8045: stm32/periph/uart: extra byte transmitted on first transmission\n#7753: pic32-wifire: race-condition when linking in concurrent build\n#5775: cpu: cortex-m: compiling vectors.c with LTO triggers compiler bug\n#5774: cpu: cortexm_common: context switching code breaks when compiling with\n       LTO\n#5769: Possible problem in scheduler\n#5748: gnrc: nodes crashing with too small packet buffer\n\n42 fixed issues since last release (2020.04)\n\n\nAcknowledgements\n================\nWe would like to thank all companies that provided us with hardware for porting\nand testing RIOT-OS. Further thanks go to companies and institutions that\ndirectly sponsored development time. And finally, big thanks to all of you\ncontributing in so many different ways to make RIOT worthwhile!\n\nMore information\n================\nhttp://www.riot-os.org\n\nMailing lists\n-------------\n* RIOT OS kernel developers list\n  devel@riot-os.org (http://lists.riot-os.org/mailman/listinfo/devel)\n* RIOT OS users list\n  users@riot-os.org (http://lists.riot-os.org/mailman/listinfo/users)\n* RIOT commits\n  commits@riot-os.org (http://lists.riot-os.org/mailman/listinfo/commits)\n* Github notifications\n  notifications@riot-os.org (http://lists.riot-os.org/mailman/listinfo/notifications)\n\nIRC\n---\n* Join the RIOT IRC channel at: irc.freenode.net, #riot-os\n\nLicense\n=======\n* The code developed by the RIOT community is licensed under the GNU Lesser\n  General Public License (LGPL) version 2.1 as published by the Free Software\n  Foundation.\n* Some external sources and packages are published under a separate license.\n\nAll code files contain licensing information.\n\n\n\nRIOT-2020.04 - Release Notes\n============================\nRIOT is a multi-threading operating system which enables soft real-time\ncapabilities and comes with support for a range of devices that are typically\nfound in the Internet of Things: 8-bit and 16-bit microcontrollers as well as\nlight-weight 32-bit processors.\n\nRIOT is based on the following design principles: energy-efficiency, soft\nreal-time capabilities, small memory footprint, modularity, and uniform API\naccess, independent of the underlying hardware (with partial POSIX compliance).\n\nRIOT is developed by an international open-source community which is\nindependent of specific vendors (e.g. similarly to the Linux community) and is\nlicensed with a non-viral copyleft license (LGPLv2.1), which allows indirect\nbusiness models around the free open-source software platform provided by RIOT.\n\n\nAbout this release:\n===================\n\nThe 2020.04 release includes:\n\n- Add support for 6LoWPAN IPv6 extension header next header compression\n- Add support for DHCPv6 prefix delegation client\n- Add support for kw41zrf and at86rf215 IEEE 802.15.4 radios\n- Improvements on power management for ESP32\n- Improvements and extensions in support of fe310 and lpc2387\n- lwIP: provide support for asynchronous sock\n- Improvements on xtimer module and testing\n- Initial addition of the new timer subsystem: ztimer\n- Migration to Kconfig - phase I: add multiple GNRC and system modules\n- +10 new boards, +11 new drivers, +7 new packages\n\n\n555 pull requests, composed of 1514 commits, have been merged since the\nlast release, and 22 issues have been solved. 60 people contributed with\ncode in 102 days. 3346 files have been touched with 358398 (+) insertions and\n184720 deletions (-).\n\nNotations used below:\n=====================\n\n    + means new feature/item\n    * means modified feature/item\n    - means removed feature/item\n\nNew features and changes\n========================\n\nSystem libraries\n----------------\n* core:\n    + add optional support for executable space protections\n    * sched: sched.h: remove not needed bitarithm include to avoid conflict\n    + turn kernel_init.c and panic.c into submodules of core\n+ sys/auto_init: allow delayed initialization of SAUL & gnrc_netif\n* sys/base64: implement Base 64 Encoding with URL and Filename Safe Alphabet\n* sys/crypto: define cipher using a module instead of CFLAGS\n* sys/crypto/modes/ccm: handle input_len = 0\n* sys/ecc: fix assertion in golay2412\n* sys/event:\n    + add event_wait_timeout64()\n    + add shared event threads\n* sys/newlib:\n    + enable multiple heaps in _sbrk_r()\n    * syscalls_default: update heap_stats for multiple heaps\n* sys/puf_sram: counter based seed after soft reset\n* sys/phydat: improvement of phydat_dump including test application\n* sys/shell:\n    + add rtt command\n    * correctly detect and handle long lines\n+ sys/shell_commands: + provide command to print version\n* sys/spp: randomize canary value on each build\n* sys/suit:\n    * cleanup of TinyCBOR to NanoCBOR refactor\n    * coap: make use of exposed tree handler function\n    * update to draft-ietf-v3\n+ sys/uri_parser: initial import of a minimal and non-destructive URI parsing\n* sys/usb: use default VID/PID for RIOT-included peripherals\n* sys/xtimer:\n    * set now pointer correctly in _update_short_timers() loop\n    + add xtimer_set_timeout_flag64()\n    * xtimer_mutex_lock_timeout fix with short timeout\n+ sys/ztimer: initial import\n\nNetworking\n----------\n* net/coap:\n    * deprecate gcoap_add_qstring() and update uses\n    + Packet API function to add Uri-Query option\n+ net/dhcpv6: initial implementation of a client (with IA_PD support)\n* net/dns: fix DNS resolution in ping6\n* net/gcoap:\n    + add canonical uri query function names\n    + allow proxied client requests\n    * use sock_async and events\n+ net/gnrc_dhcpv6_client_6lbr: initial import of a 6LBR DHCPv6 client\n+ net/gnrc_ipv6_ext_frag: initial import of statistics module\n* net/gnrc_ipv6_nib:\n    * do not ignore prefix list for route resolution\n    * fix border router with DNS & Context Compression\n    * only route to prefix list entry if on-link\n* net/gnrc_lorawan:\n    * fix the handling of downlink frames without payload\n    * remove netdev layer from MAC\n* net/gnrc_netif:\n    + add gnrc_netif_send and gnrc_netif_highlander functions\n    * implementation of dynamic GNRC_NETIF_NUMOF approach\n* net/gnrc_nettype: deprecate IOVEC type\n* net/gnrc_pktbuf: deprecate gnrc_pktbuf_replace_snip()\n+ net/gnrc_sixlowpan_iphc: add support for IPv6 extension header compression\n+ net/gnrc_sock: provide implementation for `sock_*_recv_buf()`\n* net/gnrc_sock_udp: choose random ephemeral port\n- net/gnrc_tftp: remove module\n* net/gnrc_uhcpc:\n    * ensure compression context is managed by the ABR\n    * only configure 6Lo-ND features if wireless-interface is 6LN\n    * update compression context with new prefix\n* net/nanocoap:\n    + add coap_opt_add_uquery2() with parameter key value length\n    + add convenience function for adding path elements\n    * add uquery improvements\n    * make separate tree handling function\n    - remove obsolete functions for addition of Uri-Query option\n+ net/netdev: add netdev_trigger_event_isr() function\n- net/nhdp: remove module\n+ net/sock:\n    * async: add optional callback argument\n    + amend with zero-copy receive functions\n    + amend API to iterate over stack-internal buffer chunks\n\nPackages\n--------\n+ pkg/cmsis-nn: add support\n+ pkg/cryptoauthlib: add support\n+ pkg/libbase58: add support\n- pkg/libcose: remove monocypher crypto mode\n+ pkg/littlefs2: add support for LittleFS v2.x.y\n+ pkg/lvgl: add initial support for LittlevGL\n* pkg/lwip:\n    + add auto-init support for transceiver ENC28J60\n    + provide sock_async support\n* pkg/micropython: bump version for FreeBSD fix\n* pkg/monocypher: bump to version 3.0.0\n* pkg/nanopb: bump version to 0.4.1\n* pkg/nimble/autoconn: various improvements\n- pkg/oonf_api: remove support\n+ pkg/qcbor: add support\n* pkg/tinydtls: remove receive buffer indirection via mbox\n* pkg/wolfssl: bump version to 4.3.0\n+ pkg/yxml: add support Yxml XML parser library package\n\nBoards\n------\n* boards: include common dfu logic where applicable\n+ boards/adafruit-clue: add initial support\n* boards/arduino-mkr: feather-m0: sodaq-*: provide stdio over USB and\n  setup automatic flash with bossa\n+ board/arduino-nano-33-ble: add initial support\n+ boards/cc1312-launchpad: add support and documentation\n* boards/feather-nrf52840:\n    * use CDC ACM as default STDIO\n    * fix LED macros\n+ boards/esp32-heltec-lora32-v2: add support\n+ boards/im880b: add support\n+ boards/kw41z-mini: add support\n* boards/mega-xplained: fix ADC line definitions\n* boards/nrf51: fix UART hardware flow-control configuration\n* boards/nucleo-l152re: fix uart1 pinout config\n+ boards/nucleo-l412kb: add initial support\n* boards/sam[r/d]21-xpro: prefer XOSC32K for RTC/RTT (GCLK2)\n* boards/same54-xpro:\n    * configure remaining EXT connectors\n    * don't source peripheral clocks from main clock\n* boards/samr30: add helper for antenna switch\n* boards/stm32l4: add common clock configuration\n+ boards/olimexino-stm32: add support\n+ boards/openlabs-kw41z-mini-256kib: add support\n* boards/openmote-b: add SAUL configuration and note about flashing\n+ boards/p-nucleo-wb55: add initial support\n+ boards/pic32*: add GPIO SAUL configuration\n* boards/pinetime:\n    * add defines for controlling the backlight pin\n    * update mtd_spi_nor config\n    * fix battery ADC line define\n* doc/doxygen:\n    + add 'Creating boards' section\n    * improvements on various board's documentation\n\nCPU\n---\n* cpu:\n    * add CPU feature for stack smash protections\n    + add UART RX implementation on PIC32 devices\n    * make default idle/main stacksizes configurable on all archs\n    * move cpu level dependencies in dedicated M"
        },
        {
          "name": "sys",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "uncrustify-riot.cfg",
          "type": "blob",
          "size": 4.6572265625,
          "content": "#\n# indentation\n#\n\nindent_with_tabs            = 0                 # 1=indent to level only, 2=indent with tabs\ninput_tab_size              = 4                 # original tab size\noutput_tab_size             = 4                 # new tab size\nindent_columns              = output_tab_size   #\nindent_label                = 1                 # pos: absolute col, neg: relative column\nindent_switch_case          = 0                 # number\nindent_ternary_operator     = 2                 # When `:` is a continuation, indent it under `?`\n\n#\n# line splitting\n#\n\ncode_width                  = 100               # Try to limit code width to N columns.\n\n#\n# inter-symbol newlines\n#\n\nnl_enum_brace               = remove            # \"enum {\" vs \"enum \\n {\"\nnl_union_brace              = remove            # \"union {\" vs \"union \\n {\"\nnl_struct_brace             = remove            # \"struct {\" vs \"struct \\n {\"\nnl_do_brace                 = remove            # \"do {\" vs \"do \\n {\"\nnl_if_brace                 = remove            # \"if () {\" vs \"if () \\n {\"\nnl_for_brace                = remove            # \"for () {\" vs \"for () \\n {\"\nnl_else_brace               = remove            # \"else {\" vs \"else \\n {\"\nnl_while_brace              = remove            # \"while () {\" vs \"while () \\n {\"\nnl_switch_brace             = remove            # \"switch () {\" vs \"switch () \\n {\"\nnl_brace_while              = remove            # \"} while\" vs \"} \\n while\" - cuddle while\nnl_brace_else               = add               # \"} \\n else\" vs \"} else\"\nnl_var_def_blk_end_func_top = 1                 #\nnl_fcall_brace              = remove            # \"list_for_each() {\" vs \"list_for_each()\\n{\"\nnl_fdef_brace               = add               # \"int foo() {\" vs \"int foo()\\n{\"\nnl_collapse_empty_body      = true              # set while(){\\n} to while(){}\nnl_end_of_file              = add               # fix no newline at end of file\nnl_end_of_file_min          = 1                 # one new line at end of file\n\n#\n# Source code modifications\n#\n\nmod_paren_on_return         = ignore            # \"return 1;\" vs \"return (1);\"\nmod_full_brace_if           = add               # \"if() { } else { }\" vs \"if() else\"\nmod_full_brace_while        = force             # force while(); to while(){ \\n ; }\nmod_full_brace_for          = force             # force for(); to for(){ \\n ; }\nmod_remove_extra_semicolon  = true              # remove superfluous semicolons.\n\n#\n# inter-character spacing options\n#\n\nsp_sizeof_paren             = remove            # \"sizeof (int)\" vs \"sizeof(int)\"\nsp_before_sparen            = force             # \"if (\" vs \"if(\"\nsp_after_sparen             = force             # \"if () {\" vs \"if (){\"\nsp_inside_braces            = add               # \"{ 1 }\" vs \"{1}\"\nsp_inside_braces_struct     = add               # \"{ 1 }\" vs \"{1}\"\nsp_inside_braces_enum       = add               # \"{ 1 }\" vs \"{1}\"\nsp_assign                   = add               #\nsp_arith                    = add               #\nsp_bool                     = add               #\nsp_compare                  = add               #\nsp_assign                   = add               #\nsp_after_comma              = add               #\nsp_after_cast               = remove            # \"(int) foo vs (int)foo\nsp_func_def_paren           = remove            # \"int foo (){\" vs \"int foo(){\"\nsp_func_call_paren          = remove            # \"foo (\" vs \"foo(\"\nsp_func_proto_paren         = remove            # \"int foo ();\" vs \"int foo();\"\nsp_else_brace               = add               # ignore/add/remove/force\nsp_before_ptr_star          = add               # ignore/add/remove/force\nsp_after_ptr_star           = remove            # ignore/add/remove/force\nsp_between_ptr_star         = remove            # ignore/add/remove/force\nsp_inside_paren             = remove            # remove spaces inside parens\nsp_paren_paren              = remove            # remove spaces between nested parens\nsp_inside_sparen            = remove            # remove spaces inside parens for if, while, ...\nsp_inside_braces_empty      = remove            # force while(){ } to while(){}\n\n#\n# Aligning stuff\n#\n\nalign_with_tabs             = FALSE             # use tabs to align\nalign_on_tabstop            = TRUE              # align on tabstops\nalign_enum_equ_span         = 4                 # '=' in enum definition\nalign_struct_init_span      = 0                 # align stuff in a structure init '= { }'\nalign_right_cmt_span        = 3                 #\n\n#\n# Special cases\n#\n\nset PROTO_WRAP              ISR                 # Wrap ISR macros like functions\n\n#\n# enable / disable marker config\n#\n\ndisable_processing_cmt      = \" begin{code-style-ignore}\"\nenable_processing_cmt       = \" end{code-style-ignore}\"\n"
        }
      ]
    }
  ]
}