{
  "metadata": {
    "timestamp": 1736710340144,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Airblader/i3",
      "stars": 5861,
      "defaultBranch": "gaps-next",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.6357421875,
          "content": "BasedOnStyle: google\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortBlocksOnASingleLine: false\nAlwaysBreakBeforeMultilineStrings: false\nIndentWidth: 4\nPointerBindsToType: false\nColumnLimit: 0\nSpaceBeforeParens: ControlStatements\nSortIncludes: false\nForEachMacros: [ TAILQ_FOREACH, TAILQ_FOREACH_REVERSE, SLIST_FOREACH, CIRCLEQ_FOREACH, CIRCLEQ_FOREACH_REVERSE, NODES_FOREACH, NODES_FOREACH_REVERSE, FOREACH_NONINTERNAL]\nTypenameMacros: [ SLIST_HEAD, SLIST_ENTRY, LIST_HEAD, LIST_ENTRY, SIMPLEQ_HEAD, SIMPLEQ_ENTRY, TAILQ_HEAD, TAILQ_ENTRY, CIRCLEQ_HEAD, CIRCLEQ_ENTRY ]\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0048828125,
          "content": ".git\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.154296875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\n\n[*.{c,h}]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9091796875,
          "content": "*.o\ntags\ninclude/GENERATED_*.h\ninclude/all.h.pch\n*~\n*.swp\n*.gcda\n*.gcno\n*.dSYM\ntest.commands_parser\ntest.config_parser\ntestcases/MYMETA.json\ntestcases/MYMETA.yml\ntestcases/blib/\ntestcases/pm_to_blib\nAnyEvent-I3/Makefile\nAnyEvent-I3/META.yml\nAnyEvent-I3/MYMETA.json\nAnyEvent-I3/MYMETA.yml\nAnyEvent-I3/blib/\nAnyEvent-I3/inc/\nAnyEvent-I3/pm_to_blib\n*.output\n*.tab.*\n*.yy.c\nman/*.1\nman/*.xml\nman/*.html\n*.tar.bz2*\n*.tar.xz*\ni3\ni3-input/i3-input\ni3-nagbar/i3-nagbar\ni3-msg/i3-msg\ni3-config-wizard/i3-config-wizard\ni3-dump-log/i3-dump-log\nlibi3.a\ndocs/*.pdf\ndocs/*.html\n!/docs/refcard.html\ni3-command-parser.stamp\ni3-config-parser.stamp\n.clang_complete\ncompile_commands.json\n/.ccls-cache\n/.clangd\nLAST_VERSION\nbuild\n\n# We recommend building in a subdirectory called build.\n# If you chose a different directory name,\n# it is up to you to arrange for it to be ignored by git,\n# e.g. by listing your directory in .git/info/exclude.\n/build\n\n"
        },
        {
          "name": "AnyEvent-I3",
          "type": "tree",
          "content": null
        },
        {
          "name": "DEPENDS",
          "type": "blob",
          "size": 3.779296875,
          "content": "\n i3 has the following dependencies:\n\n   \"min\" means minimum required version\n   \"lkgv\" means last known good version\n\n┌──────────────┬────────┬────────┬─────────────────────────────────────────────────────────────┐\n│ dependency   │ min.   │ lkgv   │ URL                                                         │\n├──────────────┼────────┼────────┼─────────────────────────────────────────────────────────────┤\n│ pkg-config   │ 0.25   │ 0.29   │ https://pkgconfig.freedesktop.org/                          │\n│ libxcb       │ 1.1.93 │ 1.12   │ https://xcb.freedesktop.org/dist/                           │\n│ xcb-util     │ 0.3.3  │ 0.4.1  │ https://xcb.freedesktop.org/dist/                           │\n│ xkbcommon    │ 0.4.0  │ 0.6.1  │ https://xkbcommon.org/                                      │\n│ xkbcommon-x11│ 0.4.0  │ 0.6.1  │ https://xkbcommon.org/                                      │\n│ util-cursor³⁴│ 0.0.99 │ 0.1.3  │ https://xcb.freedesktop.org/dist/                           │\n│ util-wm⁴     │ 0.3.8  │ 0.3.8  │ https://xcb.freedesktop.org/dist/                           │\n│ util-keysyms⁴│ 0.3.8  │ 0.4.0  │ https://xcb.freedesktop.org/dist/                           │\n│ util-xrm⁴    │ 1.0.0  │ 1.0.0  │ https://github.com/Airblader/xcb-util-xrm/                  │\n│ libev        │ 4.0    │ 4.19   │ http://libev.schmorp.de/                                    │\n│ yajl         │ 2.0.1  │ 2.1.0  │ https://lloyd.github.com/yajl/                              │\n│ asciidoc     │ 8.3.0  │ 8.6.9  │ http://www.methods.co.nz/asciidoc/                          │\n│ xmlto        │ 0.0.23 │ 0.0.23 │ http://www.methods.co.nz/asciidoc/                          │\n│ Pod::Simple² │ 3.22   │ 3.22   │ http://search.cpan.org/dist/Pod-Simple/                     │\n│ docbook-xml  │ 4.5    │ 4.5    │ http://www.methods.co.nz/asciidoc/                          │\n│ PCRE         │ 8.12   │ 8.38   │ https://www.pcre.org/                                       │\n│ libsn¹       │ 0.10   │ 0.12   │ https://freedesktop.org/wiki/Software/startup-notification/ │\n│ pango        │ 1.30.0 │ 1.40.1 │ http://www.pango.org/                                       │\n│ cairo        │ 1.14.4 │ 1.14.6 │ https://cairographics.org/                                  │\n└──────────────┴────────┴────────┴─────────────────────────────────────────────────────────────┘\n ¹ libsn = libstartup-notification\n ² Pod::Simple is a Perl module required for converting the testsuite\n   documentation to HTML. See https://michael.stapelberg.de/cpan/#Pod::Simple\n ³ xcb-util-cursor, to be precise.\n ⁴ Depending on your distribution, this might be considered part of xcb-util.\n\n i3bar, i3-msg, i3-input, i3-nagbar and i3-config-wizard do not introduce any\n new dependencies.\n\n i3-migrate-config-to-v4 and i3-dmenu-desktop are implemented in Perl, but have\n no dependencies besides Perl 5.10.\n\n i3-save-tree is also implemented in Perl and needs AnyEvent::I3 (>= 0.12) and\n JSON::XS. While i3-save-tree is not required for running i3 itself, it is\n strongly recommended to provide it in distribution packages.\n"
        },
        {
          "name": "I3_VERSION",
          "type": "blob",
          "size": 0.0146484375,
          "content": "4.19.1-non-git\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4619140625,
          "content": "Copyright © 2009, Michael Stapelberg and contributors\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived\n   from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PACKAGE-MAINTAINER",
          "type": "blob",
          "size": 1.84765625,
          "content": "Dear package maintainer,\n\nthanks for packaging i3. By doing so, you are improving your distribution\nand i3 in general.\n\nPlease read the file DEPENDS now, so you know which libraries are necessary\nand where to get them from if your distribution does not already have\npackages for them.\n\nPlease make sure the manpage for i3 will be properly created and installed\nin your package.\n\nPlease check the i3-sensible-{editor,pager,terminal} scripts and modify them if\nnecessary. The former two provide fallbacks in case $PAGER or $EDITOR is not\nset (which might be more common than you think, because they have to be set in\n~/.xsession, not in the shell configuration!) while the latter tries to launch\na terminal emulator. The scripts are most prominently used in i3-nagbar, which\nalerts the user when the configuration is broken for some reason. Also,\ni3-sensible-terminal is used in the default configuration.\n\nIf your distribution has a mechanism to get the preferred terminal, such as the\nx-terminal-emulator symlink in Debian, please use it in i3-sensible-terminal.\n\nYou can build i3 like you build any other software package which uses\nhttps://mesonbuild.com/; see\nhttps://mesonbuild.com/Quick-guide.html#compiling-a-meson-project\nIn case you’re unfamiliar:\n\n    $ mkdir -p build && cd build\n    $ meson ..\n    $ ninja\n\nPlease make sure that i3-migrate-config-to-v4 and i3-config-wizard are\ninstalled with i3. The Perl script is necessary to (automatically) convert v3\nconfigs to v4. The wizard provides the possibility to create a keysym-based\nconfig with the user’s preferred modifier and should be started on the first\nstart of i3 (it will automatically exit if it finds a config file).\n\nIf you have any questions, ideas, hints, problems or whatever, please do not\nhesitate to contact me. I will help you out. Please see\nhttps://i3wm.org/contact/\n\nThanks again for your efforts,\nMichael\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9833984375,
          "content": "[![Build Status](https://github.com/Airblader/i3/actions/workflows/main.yml/badge.svg)](https://github.com/Airblader/i3/actions/workflows/main.yml)\n[![Issues](https://img.shields.io/github/issues/Airblader/i3.svg)](https://github.com/Airblader/i3/issues)\n[![Forks](https://img.shields.io/github/forks/Airblader/i3.svg)](https://github.com/Airblader/i3/network)\n[![Stars](https://img.shields.io/github/stars/Airblader/i3.svg)](https://github.com/Airblader/i3/stargazers)\n\n# i3-gaps\n\n## Project status\n\n:warning: :warning: :warning:\n\nThe i3-gaps project has been merged with i3. All i3-gaps features will become available with i3 4.22 (not released yet at the time of writing this).\n\nPackage maintainers are asked to replace any i3-gaps packages with the i3 package once i3 4.22 has been released. This repository will be archived and no longer be kept up to date.\n\n## What is i3-gaps?\n\ni3-gaps is a fork of [i3wm](https://www.i3wm.org), a tiling window manager for X11. It is kept up to date with upstream, adding a few additional features such as gaps between windows (see below for a complete list).\n\n![i3](http://i.imgur.com/y8sZE6o.jpg)\n\n## How do I install i3-gaps?\n\nPlease refer to the [wiki](https://github.com/Airblader/i3/wiki/installation).\n\n## Where can I get help?\n\nFor bug reports or feature requests regarding i3-gaps specifically, open an issue on [GitHub](https://www.github.com/Airblader/i3). If your issue is with core i3 functionality, please report it [upstream](https://www.github.com/i3/i3).\n\nFor support & all other kinds of questions, you can ask your question on [GitHub Discussions](https://github.com/i3/i3/discussions).\n\n# Features\n\n## i3\n\n### gaps\n\n*Note:* In order to use gaps you need to disable window titlebars. This can be done by adding the following line to your config.\n\n```\n# You can also use any non-zero value if you'd like to have a border\ndefault_border pixel 0\n```\n\nGaps are the namesake feature of i3-gaps and add spacing between windows/containers. Gaps come in two flavors, inner and outer gaps wherein inner gaps are those between two adjacent containers (or a container and an edge) and outer gaps are an additional spacing along the screen edges. Gaps can be configured in your config either globally or per workspace, and can additionally be changed during runtime using commands (e.g., through `i3-msg`).\n\n*Note:* Outer gaps are added to the inner gaps, i.e., the gaps between a screen edge and a container will be the sum of outer and inner gaps.\n\n#### Configuration\n\nYou can define gaps either globally or per workspace using the following syntax. Note that the gaps configurations should be ordered from least specific to most specific as some directives can overwrite others.\n\n```\ngaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>\nworkspace <ws> gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>\n```\n\nThe `inner` and `outer` keywords are as explained above. With `top`, `left`, `bottom` and `right` you can specify outer gaps on specific sides, and `horizontal` and `vertical` are shortcuts for the respective sides. `<px>` stands for a numeric value in pixels and `<ws>` for either a workspace number or a workspace name.\n\n#### Commands\n\nGaps can be modified at runtime with the following command syntax:\n\n```\ngaps inner|outer|horizontal|vertical|top|right|bottom|left current|all set|plus|minus|toggle <px>\n\n# Examples\ngaps inner all set 20\ngaps outer current plus 5\ngaps horizontal current plus 40\ngaps outer current toggle 60\n```\n\nWith `current` or `all` you can change gaps either for only the currently focused or all currently existing workspaces (note that this does not affect the global configuration itself).\n\nYou can find an example configuration in the [wiki](https://github.com/Airblader/i3/wiki/Example-Configuration).\n\n### Smart Gaps\n\nGaps can be automatically turned on/off on a workspace in certain scenarios using the following config directives:\n\n```\n# Only enable gaps on a workspace when there is at least one container\nsmart_gaps on\n\n# Only enable outer gaps when there is exactly one container\nsmart_gaps inverse_outer\n```\n\n### Smart Borders\n\nSmart borders will draw borders on windows only if there is more than one window in a workspace. This feature can also be enabled only if the gap size between window and screen edge is `0`.\n\n```\n# Activate smart borders (always)\nsmart_borders on\n\n# Activate smart borders (only when there are effectively no gaps)\nsmart_borders no_gaps\n```\n\n### Smart Edge Borders\n\nThis extends i3's `hide_edge_borders` with a new option. When set, edge-specific borders of a container will be hidden if it's the only container on the workspace and the gaps to the screen edge is `0`.\n\n```\n# Hide edge borders only if there is one window with no gaps\nhide_edge_borders smart_no_gaps\n```\n\n## i3bar\n\n### Bar Height\n\nThe height of an i3bar instance can be specified explicitly by defining the `height` key in the bar configuration. If not set, the height will be calculated automatically depending on the font size.\n\n```\nbar {\n    # Height in pixels\n    height 25\n}\n```\n"
        },
        {
          "name": "RELEASE-NOTES-4.21.1",
          "type": "blob",
          "size": 2.0947265625,
          "content": "\n ┌──────────────────────────────┐\n │ Release notes for i3 v4.21.1 │\n └──────────────────────────────┘\n\nThis is i3 v4.21.1. This version is considered stable. All users of i3 are\nstrongly encouraged to upgrade.\n\nThis release fixes a few rough edges with regards to the newly-introduced\ntiling drag feature, which is now configurable:\nhttps://i3wm.org/docs/userguide.html#config_tiling_drag\n\n ┌────────────────────────────┐\n │ Changes in i3 v4.21.1      │\n └────────────────────────────┘\n\n  • tiling drag: allow configuration\n  • tiling drag: allow click immediately, to focus on decoration click\n  • tiling drag: fix cursor (wrong argument passed)\n  • tiling drag: increase drag threshold, run it through logical_px\n  • tiling drag: left-click needs threshold, mod-click doesn’t\n  • tiling drag: ignore scratchpad windows when locating drop targets\n  • tiling drag: only start when there are drop targets\n  • Raise floating windows when their border is clicked\n\n ┌────────────────────────────┐\n │ Bugfixes                   │\n └────────────────────────────┘\n\n  • docs/ipc: document sticky field of GET_TREE\n  • man/i3-config-wizard: escape ~ to prevent interpretation as subscript\n  • Motif hints: respect maximum border style configuration set by user\n  • i3-dmenu-desktop: fix quoting bug\n  • Fix segfault during config validation\n\n ┌────────────────────────────┐\n │ Thanks!                    │\n └────────────────────────────┘\n\nThanks for testing, bugfixes, discussions and everything I forgot go out to:\n\n  Erich Heine, Matias Goldfeld, Orestis Floros, Tudor Brindus, bodea\n\n-- Michael Stapelberg, 2022-10-24\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate-command-parser.pl",
          "type": "blob",
          "size": 8.3525390625,
          "content": "#!/usr/bin/env perl\n# vim:ts=4:sw=4:expandtab\n#\n# i3 - an improved dynamic tiling window manager\n# © 2009 Michael Stapelberg and contributors (see also: LICENSE)\n#\n# generate-command-parser.pl: script to generate parts of the command parser\n# from its specification file parser-specs/commands.spec.\n#\n# Requires only perl >= 5.10, no modules.\n\nuse strict;\nuse warnings;\nuse Data::Dumper;\nuse Getopt::Long;\nuse v5.10;\n\nmy $input = '';\nmy $prefix = '';\nmy $result = GetOptions(\n    'input=s' => \\$input,\n    'prefix=s' => \\$prefix\n);\n\ndie qq|Input file \"$input\" does not exist!| unless -e $input;\n\n# reads in a whole file\nsub slurp {\n    open my $fh, '<', shift;\n    local $/;\n    <$fh>;\n}\n\n# Stores the different states.\nmy %states;\n\nmy @raw_lines = split(\"\\n\", slurp($input));\nmy @lines;\n\n# XXX: In the future, we might switch to a different way of parsing this. The\n# parser is in many ways not good — one obvious one is that it is hand-crafted\n# without a good reason, also it preprocesses lines and forgets about line\n# numbers. Luckily, this is just an implementation detail and the specification\n# for the i3 command parser is in-tree (not user input).\n# -- michael, 2012-01-12\n\n# First step of preprocessing:\n# Join token definitions which are spread over multiple lines.\nfor my $line (@raw_lines) {\n    next if $line =~ /^\\s*#/ || $line =~ /^\\s*$/;\n\n    if ($line =~ /^\\s+->/) {\n        # This is a continued token definition, append this line to the\n        # previous one.\n        $lines[$#lines] = $lines[$#lines] . $line;\n    } else {\n        push @lines, $line;\n        next;\n    }\n}\n\n# First step: We build up the data structure containing all states and their\n# token rules.\n\nmy $current_state;\n\nfor my $line (@lines) {\n    if (my ($state) = ($line =~ /^state ([A-Z0-9_]+):$/)) {\n        #say \"got a new state: $state\";\n        $current_state = $state;\n    } else {\n        # Must be a token definition:\n        # [identifier = ] <tokens> -> <action>\n        #say \"token definition: $line\";\n\n        my ($identifier, $tokens, $action) =\n            ($line =~ /\n                ^\\s*                  # skip leading whitespace\n                ([a-z_]+ \\s* = \\s*|)  # optional identifier\n                (.*?) -> \\s*          # token\n                (.*)                  # optional action\n             /x);\n\n        # Cleanup the identifier (if any).\n        $identifier =~ s/^\\s*(\\S+)\\s*=\\s*$/$1/g;\n\n        # The default action is to stay in the current state.\n        $action = $current_state if length($action) == 0;\n\n        #say \"identifier = *$identifier*, token = *$tokens*, action = *$action*\";\n        for my $token (split(',', $tokens)) {\n            # Cleanup trailing/leading whitespace.\n            $token =~ s/^\\s*//g;\n            $token =~ s/\\s*$//g;\n            my $store_token = {\n                token => $token,\n                identifier => $identifier,\n                next_state => $action,\n            };\n            if (exists $states{$current_state}) {\n                push @{$states{$current_state}}, $store_token;\n            } else {\n                $states{$current_state} = [ $store_token ];\n            }\n        }\n    }\n}\n\n# Second step: Generate the enum values for all states.\n\n# It is important to keep the order the same, so we store the keys once.\n# We sort descendingly by length to be able to replace occurrences of the state\n# name even when one state’s name is included in another one’s (like FOR_WINDOW\n# is in FOR_WINDOW_COMMAND).\nmy @keys = sort { (length($b) <=> length($a)) or ($a cmp $b) } keys %states;\n\nopen(my $enumfh, '>', \"GENERATED_${prefix}_enums.h\");\n\nmy %statenum;\nsay $enumfh '#pragma once';\nsay $enumfh 'typedef enum {';\nmy $cnt = 0;\nfor my $state (@keys, '__CALL') {\n    say $enumfh ',' if $cnt > 0;\n    print $enumfh \"    $state = $cnt\";\n    $statenum{$state} = $cnt;\n    $cnt++;\n}\nsay $enumfh \"\\n} cmdp_state;\";\nclose($enumfh);\n\n# Third step: Generate the call function.\nopen(my $callfh, '>', \"GENERATED_${prefix}_call.h\");\nmy $resultname = uc(substr($prefix, 0, 1)) . substr($prefix, 1) . 'ResultIR';\nsay $callfh '#pragma once';\nsay $callfh \"static void GENERATED_call(Match *current_match, struct stack *stack, const int call_identifier, struct $resultname *result) {\";\nsay $callfh '    switch (call_identifier) {';\nmy $call_id = 0;\nfor my $state (@keys) {\n    my $tokens = $states{$state};\n    for my $token (@$tokens) {\n        next unless $token->{next_state} =~ /^call /;\n        my ($cmd) = ($token->{next_state} =~ /^call (.*)/);\n        my ($next_state) = ($cmd =~ /; ([A-Z_]+)$/);\n        $cmd =~ s/; ([A-Z_]+)$//;\n        # Go back to the INITIAL state unless told otherwise.\n        $next_state ||= 'INITIAL';\n        my $fmt = $cmd;\n        # Replace the references to identified literals (like $workspace) with\n        # calls to get_string(). Also replaces state names (like FOR_WINDOW)\n        # with their ID (useful for cfg_criteria_init(FOR_WINDOW) e.g.).\n        $cmd =~ s/$_/$statenum{$_}/g for @keys;\n        $cmd =~ s/\\$([a-z_]+)/get_string(stack, \"$1\")/g;\n        $cmd =~ s/\\&([a-z_]+)/get_long(stack, \"$1\")/g;\n        # For debugging/testing, we print the call using printf() and thus need\n        # to generate a format string. The format uses %d for <number>s,\n        # literal numbers or state IDs and %s for NULL, <string>s and literal\n        # strings.\n\n        # remove the function name temporarily, so that the following\n        # replacements only apply to the arguments.\n        my ($funcname) = ($fmt =~ /^(.+)\\(/);\n        $fmt =~ s/^$funcname//;\n\n        $fmt =~ s/$_/%d/g for @keys;\n        $fmt =~ s/\\$([a-z_]+)/%s/g;\n        $fmt =~ s/\\&([a-z_]+)/%ld/g;\n        $fmt =~ s/\"([a-z0-9_]+)\"/%s/g;\n        $fmt =~ s/(?:-?|\\b)[0-9]+\\b/%d/g;\n\n        $fmt = $funcname . $fmt;\n\n        say $callfh \"         case $call_id:\";\n        say $callfh \"             result->next_state = $next_state;\";\n        say $callfh '#ifndef TEST_PARSER';\n        my $real_cmd = $cmd;\n        if ($real_cmd =~ /\\(\\)/) {\n            $real_cmd =~ s/\\(/(current_match, result/;\n        } else {\n            $real_cmd =~ s/\\(/(current_match, result, /;\n        }\n        say $callfh \"             $real_cmd;\";\n        say $callfh '#else';\n        # debug\n        $cmd =~ s/[^(]+\\(//;\n        $cmd =~ s/\\)$//;\n        $cmd = \", $cmd\" if length($cmd) > 0;\n        $cmd =~ s/, NULL//g;\n        say $callfh qq|           fprintf(stderr, \"$fmt\\\\n\"$cmd);|;\n        # The cfg_criteria functions have side-effects which are important for\n        # testing. They are implemented as stubs in the test parser code.\n        if ($real_cmd =~ /^cfg_criteria/) {\n            say $callfh qq|       $real_cmd;|;\n        }\n        say $callfh '#endif';\n        say $callfh \"             break;\";\n        $token->{next_state} = \"call $call_id\";\n        $call_id++;\n    }\n}\nsay $callfh '        default:';\nsay $callfh '            printf(\"BUG in the parser. state = %d\\n\", call_identifier);';\nsay $callfh '            assert(false);';\nsay $callfh '    }';\nsay $callfh '}';\nclose($callfh);\n\n# Fourth step: Generate the token datastructures.\n\nopen(my $tokfh, '>', \"GENERATED_${prefix}_tokens.h\");\nsay $tokfh '#pragma once';\n\nfor my $state (@keys) {\n    my $tokens = $states{$state};\n    say $tokfh 'static cmdp_token tokens_' . $state . '[' . scalar @$tokens . '] = {';\n    for my $token (@$tokens) {\n        my $call_identifier = 0;\n        my $token_name = $token->{token};\n        if ($token_name =~ /^'/) {\n            # To make the C code simpler, we leave out the trailing single\n            # quote of the literal. We can do strdup(literal + 1); then :).\n            $token_name =~ s/'$//;\n        }\n        # Escape double quotes:\n        $token_name =~ s,\",\\\\\",g;\n        my $next_state = $token->{next_state};\n        if ($next_state =~ /^call /) {\n            ($call_identifier) = ($next_state =~ /^call ([0-9]+)$/);\n            $next_state = '__CALL';\n        }\n        my $identifier;\n        # Set $identifier to NULL if there is no identifier\n        if ($token->{identifier} eq \"\"){\n            $identifier = \"NULL\"\n        }\n        else{\n            $identifier = qq|\"$token->{identifier}\"|;\n        }\n        say $tokfh qq|    { \"$token_name\", $identifier, $next_state, { $call_identifier } },|;\n    }\n    say $tokfh '};';\n}\n\nsay $tokfh 'static cmdp_token_ptr tokens[' . scalar @keys . '] = {';\nfor my $state (@keys) {\n    my $tokens = $states{$state};\n    say $tokfh '    { tokens_' . $state . ', ' . scalar @$tokens . ' },';\n}\nsay $tokfh '};';\n\nclose($tokfh);\n"
        },
        {
          "name": "i3-config-wizard",
          "type": "tree",
          "content": null
        },
        {
          "name": "i3-dmenu-desktop",
          "type": "blob",
          "size": 20.7666015625,
          "content": "#!/usr/bin/env perl\n# vim:ts=4:sw=4:expandtab\n#\n# © 2012 Michael Stapelberg\n#\n# No dependencies except for perl ≥ v5.10\n\nuse strict;\nuse warnings qw(FATAL utf8);\nuse Data::Dumper;\nuse IPC::Open2;\nuse POSIX qw(locale_h);\nuse File::Find;\nuse File::Basename qw(basename);\nuse File::Temp qw(tempfile);\nuse List::Util 'first';\nuse Getopt::Long;\nuse Pod::Usage;\nuse v5.10;\nuse utf8;\nuse open ':encoding(UTF-8)';\n\nbinmode STDOUT, ':utf8';\nbinmode STDERR, ':utf8';\n\n# reads in a whole file\nsub slurp {\n    my ($filename) = @_;\n    my $fh;\n    if (!open($fh, '<', $filename)) {\n        warn \"Could not open $filename: $!\";\n        return undef;\n    }\n    local $/;\n    my $result;\n    eval {\n        $result = <$fh>;\n    };\n    if ($@) {\n        warn \"Could not read $filename: $@\";\n        return undef;\n    } else {\n        return $result;\n    }\n}\n\nmy @entry_types;\nmy $dmenu_cmd = 'dmenu -i';\nmy $result = GetOptions(\n    'dmenu=s' => \\$dmenu_cmd,\n    'entry-type=s' => \\@entry_types,\n    'version' => sub {\n        say \"dmenu-desktop 1.5 © 2012 Michael Stapelberg\";\n        exit 0;\n    },\n    'help' => sub {\n        pod2usage(-exitval => 0);\n    });\n\ndie \"Could not parse command line options\" unless $result;\n\n# Filter entry types and set default type(s) if none selected\nmy $valid_types = {\n    name => 1,\n    command => 1,\n    filename => 1,\n};\n@entry_types = grep { exists($valid_types->{$_}) } @entry_types;\n@entry_types = ('name', 'command') unless @entry_types;\n\n# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n# ┃ Convert LC_MESSAGES into an ordered list of suffixes to search for in the ┃\n# ┃ .desktop files (e.g. “Name[de_DE@euro]” for LC_MESSAGES=de_DE.UTF-8@euro  ┃\n# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n# For details on how the transformation of LC_MESSAGES to a list of keys that\n# should be looked up works, refer to “Localized values for keys” of the\n# “Desktop Entry Specification”:\n# https://standards.freedesktop.org/desktop-entry-spec/latest/ar01s04.html\nmy $lc_messages = setlocale(LC_MESSAGES);\n\n# Ignore the encoding (e.g. .UTF-8)\n$lc_messages =~ s/\\.[^@]+//g;\n\nmy @suffixes = ($lc_messages);\n\n# _COUNTRY and @MODIFIER are present\nif ($lc_messages =~ /_[^@]+@/) {\n    my $no_modifier = $lc_messages;\n    $no_modifier =~ s/@.*//g;\n    push @suffixes, $no_modifier;\n\n    my $no_country = $lc_messages;\n    $no_country =~ s/_[^@]+//g;\n    push @suffixes, $no_country;\n}\n\n# Strip _COUNTRY and @MODIFIER if present\n$lc_messages =~ s/[_@].*//g;\npush @suffixes, $lc_messages;\n\n# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n# ┃ Read all .desktop files and store the values in which we are interested.  ┃\n# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\nmy %desktops;\n# See https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html#variables\nmy $xdg_data_home = $ENV{XDG_DATA_HOME};\n$xdg_data_home = $ENV{HOME} . '/.local/share' if\n    !defined($xdg_data_home) ||\n    $xdg_data_home eq '' ||\n    ! -d $xdg_data_home;\n\nmy $xdg_data_dirs = $ENV{XDG_DATA_DIRS};\n$xdg_data_dirs = '/usr/local/share/:/usr/share/' if\n    !defined($xdg_data_dirs) ||\n    $xdg_data_dirs eq '';\n\nmy @searchdirs = (\"$xdg_data_home/applications/\");\nfor my $dir (split(':', $xdg_data_dirs)) {\n    push @searchdirs, \"$dir/applications/\";\n}\n\n# Cleanup the paths, maybe some application does not cope with double slashes\n# (the field code %k is replaced with the .desktop file location).\n@searchdirs = map { s,//,/,g; $_ } @searchdirs;\n# Also remove any trailing slashes.\n@searchdirs = map { s,/*$,,g; $_ } @searchdirs;\n\n# To avoid errors by File::Find’s find(), only pass existing directories.\n@searchdirs = grep { -d $_ } @searchdirs;\n\nfind(\n    {\n        wanted => sub {\n            return unless substr($_, -1 * length('.desktop')) eq '.desktop';\n            my $relative = $File::Find::name;\n\n            # Find and then replace the directory in @searchdirs in which the\n            # current file is located. We used to do this with\n            # $File::Find::topdir but it is not supported when using the\n            # 'follow' or 'follow_fast' options.\n            # See #3973, #4031.\n            my $topdir = first { substr($relative, 0, length($_)) eq $_ } @searchdirs;\n\n            # + 1 for the trailing /, which is missing in $topdir.\n            substr($relative, 0, length($topdir) + 1) = '';\n\n            # Don’t overwrite files with the same relative path, we search in\n            # descending order of importance.\n            return if exists($desktops{$relative});\n\n            $desktops{$relative} = $File::Find::name;\n        },\n        no_chdir => 1,\n        follow_fast => 1,\n        # Ignore any duplicate files and directories and proceed normally:\n        follow_skip => 2,\n    },\n    @searchdirs\n);\n\nmy %apps;\n\nfor my $file (values %desktops) {\n    my $base = basename($file);\n\n    # _ is an invalid character for a key, so we can use it for our own keys.\n    $apps{$base}->{_Location} = $file;\n\n    # Extract all “Name” and “Exec” keys from the [Desktop Entry] group\n    # and store them in $apps{$base}.\n    my %names;\n    my $content = slurp($file);\n    next unless defined($content);\n    my @lines = split(\"\\n\", $content);\n    for my $line (@lines) {\n        my $first = substr($line, 0, 1);\n        next if $line eq '' || $first eq '#';\n        next unless ($line eq '[Desktop Entry]' ..\n                     ($first eq '[' &&\n                      substr($line, -1) eq ']' &&\n                      $line ne '[Desktop Entry]'));\n        next if $first eq '[';\n\n        my ($key, $value) = ($line =~ /^\n          (\n            [A-Za-z0-9-]+  # the spec specifies these as valid key characters\n            (?:\\[[^]]+\\])? # possibly, there as a locale suffix\n          )\n          \\s* = \\s*        # whitespace around = should be ignored\n          (.*)             # no restrictions on the values\n          $/x);\n\n        if ($key =~ /^Name/) {\n            $names{$key} = $value;\n        } elsif ($key eq 'Exec' ||\n                 $key eq 'TryExec' ||\n                 $key eq 'Path' ||\n                 $key eq 'Type') {\n            $apps{$base}->{$key} = $value;\n        } elsif ($key eq 'NoDisplay' ||\n                 $key eq 'Hidden' ||\n                 $key eq 'StartupNotify' ||\n                 $key eq 'Terminal') {\n            # Values of type boolean must either be string true or false,\n            # see “Possible value types”:\n            # https://standards.freedesktop.org/desktop-entry-spec/latest/ar01s03.html\n            $apps{$base}->{$key} = ($value eq 'true');\n        }\n    }\n\n    for my $suffix (@suffixes) {\n        next unless exists($names{\"Name[$suffix]\"});\n        $apps{$base}->{Name} = $names{\"Name[$suffix]\"};\n        last;\n    }\n\n    # Fallback to unlocalized “Name”.\n    $apps{$base}->{Name} = $names{Name} unless exists($apps{$base}->{Name});\n}\n\n# %apps now looks like this:\n#\n# %apps = {\n#     'evince.desktop' => {\n#         'Exec' => 'evince %U',\n#         'Name' => 'Dokumentenbetrachter',\n#         '_Location' => '/usr/share/applications/evince.desktop'\n#       },\n#     'gedit.desktop' => {\n#         'Exec' => 'gedit %U',\n#         'Name' => 'gedit',\n#         '_Location' => '/usr/share/applications/gedit.desktop'\n#       }\n#   };\n\n# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n# ┃ Turn %apps inside out to provide Name → filename lookup.                  ┃\n# ┃ The Name is what we display in dmenu later.                               ┃\n# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\nmy %choices;\nfor my $app (keys %apps) {\n    my $name = $apps{$app}->{Name};\n\n    # Don’t try to use .desktop files which don’t have Type=application\n    next if (!exists($apps{$app}->{Type}) ||\n             $apps{$app}->{Type} ne 'Application');\n\n    # Skip broken files (Type=application, but no Exec key).\n    if (!exists($apps{$app}->{Exec}) ||\n        $apps{$app}->{Exec} eq '') {\n        warn 'File ' . $apps{$app}->{_Location} . ' is broken: it contains Type=Application, but no Exec key/value pair.';\n        next;\n    }\n\n    # Don’t offer apps which have NoDisplay == true or Hidden == true.\n    # See https://wiki.xfce.org/howto/customize-menu#hide_menu_entries\n    # for the difference between NoDisplay and Hidden.\n    next if (exists($apps{$app}->{NoDisplay}) && $apps{$app}->{NoDisplay}) ||\n            (exists($apps{$app}->{Hidden}) && $apps{$app}->{Hidden});\n\n    if (exists($apps{$app}->{TryExec})) {\n        my $tryexec = $apps{$app}->{TryExec};\n        if (substr($tryexec, 0, 1) eq '/') {\n            # Skip if absolute path is not executable.\n            next unless -x $tryexec;\n        } else {\n            # Search in $PATH for the executable.\n            my $found = 0;\n            for my $path (split(':', $ENV{PATH})) {\n                next unless -x \"$path/$tryexec\";\n                $found = 1;\n                last;\n            }\n            next unless $found;\n        }\n    }\n\n    if ((scalar grep { $_ eq 'name' } @entry_types) > 0) {\n        if (exists($choices{$name})) {\n            # There are two .desktop files which contain the same “Name” value.\n            # I’m not sure if that is allowed to happen, but we disambiguate the\n            # situation by appending “ (2)”, “ (3)”, etc. to the name.\n            #\n            # An example of this happening is exo-file-manager.desktop and\n            # thunar-settings.desktop, both of which contain “Name=File Manager”.\n            my $inc = 2;\n            $inc++ while exists($choices{\"$name ($inc)\"});\n            $name = \"$name ($inc)\";\n        }\n\n        $choices{$name} = $app;\n        next;\n    }\n\n    if ((scalar grep { $_ eq 'command' } @entry_types) > 0) {\n        my $command = $apps{$app}->{Exec};\n\n        # Handle escape sequences (should be done for all string values, but does\n        # matter here).\n        my %escapes = (\n            '\\\\s' => ' ',\n            '\\\\n' => '\\n',\n            '\\\\t' => '\\t',\n            '\\\\r' => '\\r',\n            '\\\\\\\\' => '\\\\',\n        );\n        $command =~ s/(\\\\[sntr\\\\])/$escapes{$1}/go;\n\n        # Extract executable\n        if ($command =~ m/^\\s*([^\\s\\\"]+)(?:\\s|$)/) {\n            # No quotes\n            $command = $1;\n        } elsif ($command =~ m/^\\s*\\\"([^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*)\\\"(?:\\s|$)/) {\n            # Quoted, remove quotes and fix escaped characters\n            $command = $1;\n            $command =~ s/\\\\([\\\"\\`\\$\\\\])/$1/g;\n        } else {\n            # Invalid quotes, fallback to whitespace\n            ($command) = split(' ', $command);\n        }\n\n        # Don’t add “geany” if “Geany” is already present.\n        my @keys = map { lc } keys %choices;\n        if (!(scalar grep { $_ eq lc(basename($command)) } @keys) > 0) {\n            $choices{basename($command)} = $app;\n        }\n        next;\n    }\n\n    if ((scalar grep { $_ eq 'filename' } @entry_types) > 0) {\n        my $filename = basename($app, '.desktop');\n\n        # Don’t add “geany” if “Geany” is already present.\n        my @keys = map { lc } keys %choices;\n        next if (scalar grep { $_ eq lc($filename) } @keys) > 0;\n\n        $choices{$filename} = $app;\n    }\n}\n\n# %choices now looks like this:\n#\n# %choices = {\n#     'Dokumentenbetrachter' => 'evince.desktop',\n#     'gedit' => 'gedit.desktop'\n#   };\n\n# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n# ┃ Run dmenu to ask the user for their choice                                ┃\n# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n# open2 will just make dmenu’s STDERR go to our own STDERR.\nmy ($dmenu_out, $dmenu_in);\nmy $pid = eval {\n    open2($dmenu_out, $dmenu_in, $dmenu_cmd);\n} or do {\n    print STDERR \"$@\";\n    say STDERR \"Running dmenu failed. Is dmenu installed at all? Try running dmenu -v\";\n    exit 1;\n};\n\nbinmode $dmenu_in, ':utf8';\nbinmode $dmenu_out, ':utf8';\n\n# Feed dmenu the possible choices.\nsay $dmenu_in $_ for sort keys %choices;\nclose($dmenu_in);\n\nwaitpid($pid, 0);\nmy $status = ($? >> 8);\n\n# Pass on dmenu’s exit status if there was an error.\nexit $status unless $status == 0;\n\nmy $choice = <$dmenu_out>;\n# dmenu ≥ 4.4 adds a newline after the choice\nchomp($choice);\nmy $app;\n# Exact match: the user chose “Avidemux (GTK+)”\nif (exists($choices{$choice})) {\n    $app = $apps{$choices{$choice}};\n    $choice = '';\n} else {\n    # Not an exact match: the user entered “Avidemux (GTK+) ~/movie.mp4”\n    for my $possibility (keys %choices) {\n        next unless substr($choice, 0, length($possibility)) eq $possibility;\n        $app = $apps{$choices{$possibility}};\n        substr($choice, 0, length($possibility)) = '';\n        # Remove whitespace separating the entry and arguments.\n        $choice =~ s/^\\s//g;\n        last;\n    }\n    if (!defined($app)) {\n        warn \"Invalid input: “$choice” does not match any application. Trying to execute nevertheless.\";\n        $app->{Name} = '';\n        $app->{Exec} = $choice;\n        # We assume that the app is old and does not support startup\n        # notifications because it doesn’t ship a desktop file.\n        $app->{StartupNotify} = 0;\n        $app->{_Location} = '';\n    }\n}\n\n# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n# ┃ Make i3 start the chosen application.                                     ┃\n# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\nmy $name = $app->{Name};\nmy $exec = $app->{Exec};\nmy $location = $app->{_Location};\n\n# Quote as described by “The Exec key”:\n# https://standards.freedesktop.org/desktop-entry-spec/latest/ar01s07.html\nsub quote {\n    my ($str) = @_;\n    $str =~ s/(\"|`|\\$|\\\\)/\\\\$1/g;\n    $str = qq|\"$str\"| if $str ne \"\";\n    return $str;\n}\n\n$choice = quote($choice);\n$location = quote($location);\n$name = quote($name);\n\n# https://standards.freedesktop.org/desktop-entry-spec/latest/ar01s07.html:\n#\n# Note that the general escape rule for values of type string states that the\n# backslash character can be escaped as (\"\\\\\") as well and that this escape rule\n# is applied before the quoting rule. As such, to unambiguously represent a\n# literal backslash character in a quoted argument in a desktop entry file\n# requires the use of four successive backslash characters (\"\\\\\\\\\"). Likewise, a\n# literal dollar sign in a quoted argument in a desktop entry file is\n# unambiguously represented with (\"\\\\$\").\n$exec =~ s/\\\\\\\\/\\\\/g;\n\n# Remove deprecated field codes, as the spec dictates.\n$exec =~ s/%[dDnNvm]//g;\n\n# Replace filename field codes with the rest of the command line.\n# Note that we assume the user uses precisely one file name,\n# not multiple file names.\n$exec =~ s/%[fF]/$choice/g;\n\n# If the program works with URLs,\n# we assume the user provided a URL instead of a filename.\n# As per the spec, there must be at most one of %f, %u, %F or %U present.\n$exec =~ s/%[uU]/$choice/g;\n\n# The translated name of the application.\n$exec =~ s/%c/$name/g;\n\n# XXX: Icons are not implemented. Is the complexity (looking up the path if\n# only a name is given) actually worth it?\n#$exec =~ s/%i/--icon $icon/g;\n$exec =~ s/%i//g;\n\n# location of .desktop file\n$exec =~ s/%k/$location/g;\n\n# Literal % characters are represented as %%.\n$exec =~ s/%%/%/g;\n\nif (exists($app->{Path}) && $app->{Path} ne '') {\n    $exec = 'cd ' . quote($app->{Path}) . ' && ' . $exec;\n}\n\nmy $nosn = '';\nmy $cmd;\nif (exists($app->{Terminal}) && $app->{Terminal}) {\n    # For applications which specify “Terminal=true” (e.g. htop.desktop),\n    # we need to create a temporary script that contains the full command line\n    # as the syntax for starting commands with arguments varies from terminal\n    # emulator to terminal emulator.\n    # Then, we launch that script with i3-sensible-terminal.\n    my ($fh, $filename) = tempfile();\n    binmode($fh, ':utf8');\n    say $fh <<EOT;\n#!/bin/sh\nrm $filename\nexec $exec\nEOT\n    close($fh);\n    chmod 0755, $filename;\n\n    $cmd = qq|exec i3-sensible-terminal -e \"$filename\"|;\n} else {\n    # i3 executes applications by passing the argument to i3’s “exec” command\n    # as-is to $SHELL -c. The i3 parser supports quoted strings: When a string\n    # starts with a double quote (\"), everything is parsed as-is until the next\n    # double quote which is NOT preceded by a backslash (\\).\n    #\n    # Therefore, we escape all double quotes (\") by replacing them with \\\".\n    # To not change the meaning of any double quote, backslashes need to be\n    # escaped as well.\n    $exec =~ s/([\"\\\\])/\\\\$1/g;\n\n    if (exists($app->{StartupNotify}) && !$app->{StartupNotify}) {\n        $nosn = '--no-startup-id';\n    }\n    $cmd = qq|exec $nosn \"$exec\"|;\n}\n\nsystem('i3-msg', $cmd) == 0 or die \"Could not launch i3-msg: $?\";\n\n=encoding utf-8\n\n=head1 NAME\n\n    i3-dmenu-desktop - run .desktop files with dmenu\n\n=head1 SYNOPSIS\n\n    i3-dmenu-desktop [--dmenu='dmenu -i'] [--entry-type=name]\n\n=head1 DESCRIPTION\n\ni3-dmenu-desktop is a script which extracts the (localized) name from\napplication .desktop files, offers the user a choice via dmenu(1) and then\nstarts the chosen application via i3 (for startup notification support).\nThe advantage of using .desktop files instead of dmenu_run(1) is that dmenu_run\noffers B<all> binaries in your $PATH, including non-interactive utilities like\n\"sed\". Also, .desktop files contain a proper name, information about whether\nthe application runs in a terminal and whether it supports startup\nnotifications.\n\nThe .desktop files are searched in $XDG_DATA_HOME/applications (by default\n$HOME/.local/share/applications) and in the \"applications\" subdirectory of each\nentry of $XDG_DATA_DIRS (by default /usr/local/share/:/usr/share/).\n\nFiles with the same name in $XDG_DATA_HOME/applications take precedence over\nfiles in $XDG_DATA_DIRS, so that you can overwrite parts of the system-wide\n.desktop files by copying them to your local directory and making changes.\n\ni3-dmenu-desktop displays the \"Name\" value in the localized version depending\non LC_MESSAGES as specified in the Desktop Entry Specification.\n\nYou can pass a filename or URL (%f/%F and %u/%U field codes in the .desktop\nfile respectively) by appending it to the name of the application. E.g., if you\nwant to launch \"GNU Emacs 24\" with the patch /tmp/foobar.txt, you would type\n\"emacs\", press TAB, type \" /tmp/foobar.txt\" and press ENTER.\n\n.desktop files with Terminal=true are started using i3-sensible-terminal(1).\n\n.desktop files with NoDisplay=true or Hidden=true are skipped.\n\nUTF-8 is supported, of course, but dmenu does not support displaying all\nglyphs. E.g., xfce4-terminal.desktop's Name[fi]=Pääte will be displayed just\nfine, but not its Name[ru]=Терминал.\n\n=head1 OPTIONS\n\n=over\n\n=item B<--dmenu=command>\n\nExecute command instead of 'dmenu -i'. This option can be used to pass custom\nparameters to dmenu, or to make i3-dmenu-desktop start a custom (patched?)\nversion of dmenu.\n\n=item B<--entry-type=type>\n\nDisplay the (localized) \"Name\" (type = name), the command (type = command) or\nthe (*.desktop) filename (type = filename) in dmenu. This option can be\nspecified multiple times.\n\nExamples are \"GNU Image Manipulation Program\" (type = name), \"gimp\" (type =\ncommand), and \"libreoffice-writer\" (type = filename).\n\n=back\n\n=head1 VERSION\n\nVersion 1.5\n\n=head1 AUTHOR\n\nMichael Stapelberg, C<< <michael at i3wm.org> >>\n\n=head1 LICENSE AND COPYRIGHT\n\nCopyright 2012 Michael Stapelberg.\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the BSD license.\n\n=cut\n"
        },
        {
          "name": "i3-dump-log",
          "type": "tree",
          "content": null
        },
        {
          "name": "i3-input",
          "type": "tree",
          "content": null
        },
        {
          "name": "i3-migrate-config-to-v4",
          "type": "blob",
          "size": 10.60546875,
          "content": "#!/usr/bin/env perl\n# vim:ts=4:sw=4:expandtab\n#\n# script to migrate an old config file (i3 < 4.0) to the new format (>= 4.0)\n# this script only uses modules which come with perl 5.10\n#\n# reads an i3 v3 config from stdin and spits out a v4 config on stdout\n# exit codes:\n#     0 = the input was a v3 config\n#     1 = the input was already a v4 config\n#         (the config is printed to stdout nevertheless)\n#\n# © 2011 Michael Stapelberg and contributors, see LICENSE\n\nuse strict;\nuse warnings;\nuse Getopt::Long;\nuse v5.10;\n\n# is this a version 3 config file? disables auto-detection\nmy $v3 = 0;\nmy $result = GetOptions('v3' => \\$v3);\n\n# reads stdin\nsub slurp {\n    local $/;\n    <>;\n}\n\nmy @unchanged = qw(\n    font\n    set\n    mode\n    exec\n    assign\n    floating_modifier\n    focus_follows_mouse\n    ipc-socket\n    ipc_socket\n    client.focused\n    client.focused_inactive\n    client.unfocused\n    client.urgent\n    client.background\n);\n\nmy %workspace_names;\nmy $workspace_bar = 1;\n\nmy $input = slurp();\nmy @lines = split /\\n/, $input;\n\n# remove whitespaces in the beginning of lines\n@lines = map { s/^[ \\t]*//g; $_ } @lines;\n\n# Try to auto-detect if this is a v3 config file.\nsub need_to_convert {\n    # If the user passed --v3, we need to convert in any case\n    return 1 if $v3;\n\n    for my $line (@lines) {\n        # only v4 configfiles can use bindcode or workspace_layout\n        return 0 if $line =~ /^bindcode/ ||\n                    $line =~ /^workspace_layout/ ||\n                    $line =~ /^force_focus_wrapping/;\n\n        # have a look at bindings\n        next unless $line =~ /^bind/;\n\n        my ($statement, $key, $command) = ($line =~ /([a-zA-Z_-]+)\\s+([^\\s]+)\\s+(.*)/);\n        return 0 if $command =~ /^layout/ ||\n                    $command =~ /^floating/ ||\n                    $command =~ /^workspace/ ||\n                    $command =~ /^focus (left|right|up|down)/ ||\n                    $command =~ /^border (normal|1pixel|none)/;\n    }\n\n    return 1;\n}\n\nif (!need_to_convert()) {\n    # If this is already a v4 config file, we will spit out the lines\n    # and exit with return code 1\n    print $input;\n    exit 1;\n}\n\n# first pass: get workspace names\nfor my $line (@lines) {\n    next if $line =~ /^#/ || $line =~ /^$/;\n\n    my ($statement, $parameters) = ($line =~ /([a-zA-Z._-]+)(.*)/);\n\n    # skip everything but workspace lines\n    next unless defined($statement) and $statement eq 'workspace';\n\n    my ($number, $params) = ($parameters =~ /\\s+([0-9]+)\\s+(.+)/);\n\n    # save workspace name (unless the line is actually a workspace assignment)\n    $workspace_names{$number} = $params unless $params =~ /^output/;\n}\n\nfor my $line (@lines) {\n    # directly use comments and empty lines\n    if ($line =~ /^#/ || $line =~ /^$/) {\n        print \"$line\\n\";\n        next;\n    }\n\n    my ($statement, $parameters) = ($line =~ /([a-zA-Z._-]+)(.*)/);\n\n    # directly use lines which have not changed between 3.x and 4.x\n    if (!defined($statement) || (lc $statement ~~ @unchanged)) {\n        print \"$line\\n\";\n        next;\n    }\n\n    # new_container changed only the statement name to workspace_layout\n    if ($statement eq 'new_container') {\n        print \"workspace_layout$parameters\\n\";\n        next;\n    }\n\n    # workspace_bar is gone, you should use i3bar now\n    if ($statement eq 'workspace_bar') {\n        $workspace_bar = ($parameters =~ /\\s+(yes|true|on|enable|active)/);\n        print \"# XXX: REMOVED workspace_bar line. There is no internal workspace bar in v4.\\n\";\n        next;\n    }\n\n    # new_window changed the parameters from bb to none etc.\n    if ($statement eq 'new_window') {\n        if ($parameters =~ /bb/) {\n            print \"new_window none\\n\";\n        } elsif ($parameters =~ /bp/) {\n            print \"new_window 1pixel\\n\";\n        } elsif ($parameters =~ /bn/) {\n            print \"new_window normal\\n\";\n        } else {\n            print \"# XXX: Invalid parameter for new_window, not touching line:\\n\";\n            print \"$line\\n\";\n        }\n        next;\n    }\n\n    # bar colors are obsolete, need to be configured in i3bar\n    if ($statement =~ /^bar\\./) {\n        print \"# XXX: REMOVED $statement, configure i3bar instead.\\n\";\n        print \"# Old line: $line\\n\";\n        next;\n    }\n\n    # one form of this is still ok (workspace assignments), the other (named workspaces) isn’t\n    if ($statement eq 'workspace') {\n        my ($number, $params) = ($parameters =~ /\\s+([0-9]+)\\s+(.+)/);\n        if ($params =~ /^output/) {\n            print \"$line\\n\";\n            next;\n        } else {\n            print \"# XXX: workspace name will end up in the corresponding bindings.\\n\";\n            next;\n        }\n    }\n\n    if ($statement eq 'bind' || $statement eq 'bindsym') {\n        convert_command($line);\n        next;\n    }\n\n    print \"# XXX: migration script could not handle line: $line\\n\";\n}\n\n#\n# Converts a command (after bind/bindsym)\n#\nsub convert_command {\n    my ($line) = @_;\n\n    my @unchanged_cmds = qw(\n        exec\n        mark\n        kill\n        restart\n        reload\n        exit\n    );\n\n    my ($statement, $key, $command) = ($line =~ /([a-zA-Z_-]+)\\s+([^\\s]+)\\s+(.*)/);\n\n    # turn 'bind' to 'bindcode'\n    $statement = 'bindcode' if $statement eq 'bind';\n\n    # check if it’s one of the unchanged commands\n    my ($cmd) = ($command =~ /([a-zA-Z_-]+)/);\n    if ($cmd ~~ @unchanged_cmds) {\n        print \"$statement $key $command\\n\";\n        return;\n    }\n\n    # simple replacements\n    my @replace = (\n        qr/^s/ => 'layout stacking',\n        qr/^d/ => 'layout toggle split',\n        qr/^T/ => 'layout tabbed',\n        qr/^f($|[^go])/ => 'fullscreen',\n        qr/^fg/ => 'fullscreen global',\n        qr/^t/ => 'floating toggle',\n        qr/^h/ => 'focus left',\n        qr/^j($|[^u])/ => 'focus down',\n        qr/^k/ => 'focus up',\n        qr/^l/ => 'focus right',\n        qr/^mh/ => 'move left',\n        qr/^mj/ => 'move down',\n        qr/^mk/ => 'move up',\n        qr/^ml/ => 'move right',\n        qr/^bn/ => 'border normal',\n        qr/^bp/ => 'border 1pixel',\n        qr/^bb/ => 'border none',\n        qr/^bt/ => 'border toggle',\n        qr/^pw/ => 'workspace prev',\n        qr/^nw/ => 'workspace next',\n    );\n\n    my $replaced = 0;\n    for (my $c = 0; $c < @replace; $c += 2) {\n        if ($command =~ $replace[$c]) {\n            $command = $replace[$c+1];\n            $replaced = 1;\n            last;\n        }\n    }\n\n    # goto command is now obsolete due to criteria + focus command\n    if ($command =~ /^goto/) {\n        my ($mark) = ($command =~ /^goto\\s+(.*)/);\n        print qq|$statement $key [con_mark=\"$mark\"] focus\\n|;\n        return;\n    }\n\n    # the jump command is also obsolete due to criteria + focus\n    if ($command =~ /^jump/) {\n        my ($params) = ($command =~ /^jump\\s+(.*)/);\n        if ($params =~ /^\"/) {\n            # jump [\"]window class[/window title][\"]\n            ($params) = ($params =~ /^\"([^\"]+)\"/);\n\n            # check if a window title was specified\n            if ($params =~ m,/,) {\n                my ($class, $title) = ($params =~ m,([^/]+)/(.+),);\n                print qq|$statement $key [class=\"$class\" title=\"$title\"] focus\\n|;\n            } else {\n                print qq|$statement $key [class=\"$params\"] focus\\n|;\n            }\n            return;\n        } else {\n            # jump <workspace> [ column row ]\n            print \"# XXX: jump workspace is obsolete in 4.x: $line\\n\";\n            return;\n        }\n    }\n\n    if (!$replaced && $command =~ /^focus/) {\n        my ($what) = ($command =~ /^focus\\s+(.*)/);\n        $what =~ s/\\s//g;\n        if ($what eq 'ft') {\n            $what = 'mode_toggle';\n        } elsif ($what eq 'floating' || $what eq 'tiling') {\n            # those are unchanged\n        } else {\n            print \"# XXX: focus <number> is obsolete in 4.x: $line\\n\";\n            return;\n        }\n        print qq|$statement $key focus $what\\n|;\n        return;\n    }\n\n    if ($command =~ /^mode/) {\n        my ($parameters) = ($command =~ /^mode\\s+(.*)/);\n        print qq|$statement $key mode \"$parameters\"\\n|;\n        return;\n    }\n\n    # the parameters of the resize command have changed\n    if ($command =~ /^resize/) {\n        # OLD: resize <left|right|top|bottom> [+|-]<pixels>\\n\")\n        # NEW: resize <grow|shrink> <direction> [<px> px] [or <ppt> ppt]\n        my ($direction, $sign, $px) = ($command =~ /^resize\\s+(left|right|top|bottom)\\s+([+-])([0-9]+)/);\n        my $cmd = 'resize ';\n        $cmd .= ($sign eq '+' ? 'grow' : 'shrink') . ' ';\n        if ($direction eq 'top') {\n            $direction = 'up';\n        } elsif ($direction eq 'bottom') {\n            $direction = 'down';\n        }\n        $cmd .= \"$direction \";\n        $cmd .= \"$px px\";\n        print qq|$statement $key $cmd\\n|;\n        return;\n    }\n\n    # switch workspace\n    if ($command =~ /^[0-9]+/) {\n        my ($number) = ($command =~ /^([0-9]+)/);\n        if (exists $workspace_names{$number}) {\n            print qq|$statement $key workspace $workspace_names{$number}\\n|;\n            return;\n        } else {\n            print qq|$statement $key workspace $number\\n|;\n            return;\n        }\n    }\n\n    # move to workspace\n    if ($command =~ /^m[0-9]+/) {\n        my ($number) = ($command =~ /^m([0-9]+)/);\n        if (exists $workspace_names{$number}) {\n            print qq|$statement $key move container to workspace $workspace_names{$number}\\n|;\n            return;\n        } else {\n            print qq|$statement $key move container to workspace $number\\n|;\n            return;\n        }\n    }\n\n    # With Container-commands are now obsolete due to different abstraction\n    if ($command =~ /^wc/) {\n        $command =~ s/^wc//g;\n        my $wc_replaced = 0;\n        for (my $c = 0; $c < @replace; $c += 2) {\n            if ($command =~ $replace[$c]) {\n                $command = $replace[$c+1];\n                $wc_replaced = 1;\n                last;\n            }\n        }\n        if (!$wc_replaced) {\n            print \"# XXX: migration script could not handle command: $line\\n\";\n        } else {\n            # NOTE: This is not 100% accurate, as it only works for one level\n            # of nested containers. As this is a common use case, we use 'focus\n            # parent; $command' nevertheless. For advanced use cases, the user\n            # has to modify their config.\n            print \"$statement $key focus parent; $command\\n\";\n        }\n        return;\n    }\n\n    if ($replaced) {\n        print \"$statement $key $command\\n\";\n    } else {\n        print \"# XXX: migration script could not handle command: $line\\n\";\n    }\n}\n\n\n# add an i3bar invocation automatically if no 'workspace_bar no' was found\nif ($workspace_bar) {\n    print \"\\n\";\n    print \"# XXX: Automatically added a bar configuration\\n\";\n    print \"bar {\\n\";\n    print \"    status_command i3status\\n\";\n    print \"}\\n\";\n}\n"
        },
        {
          "name": "i3-msg",
          "type": "tree",
          "content": null
        },
        {
          "name": "i3-nagbar",
          "type": "tree",
          "content": null
        },
        {
          "name": "i3-save-tree",
          "type": "blob",
          "size": 7.62890625,
          "content": "#!/usr/bin/env perl\n# vim:ts=4:sw=4:expandtab\n#\n# © 2013 Michael Stapelberg\n#\n# Requires perl ≥ v5.10, AnyEvent::I3 and JSON::XS\n\nuse strict;\nuse warnings qw(FATAL utf8);\nuse Data::Dumper;\nuse IPC::Open2;\nuse POSIX qw(locale_h);\nuse File::Find;\nuse File::Basename qw(basename);\nuse File::Temp qw(tempfile);\nuse List::Util qw(first);\nuse Getopt::Long;\nuse Pod::Usage;\nuse AnyEvent::I3;\nuse JSON::XS;\nuse List::Util qw(first);\nuse Encode qw(decode);\nuse v5.10;\nuse utf8;\nuse open ':encoding(UTF-8)';\n\nbinmode STDOUT, ':utf8';\nbinmode STDERR, ':utf8';\n\nmy $workspace;\nmy $output;\nmy $result = GetOptions(\n    'workspace=s' => \\$workspace,\n    'output=s' => \\$output,\n    'version' => sub {\n        say \"i3-save-tree 0.1 © 2013 Michael Stapelberg\";\n        exit 0;\n    },\n    'help' => sub {\n        pod2usage(-exitval => 0);\n    });\n\ndie \"Could not parse command line options\" unless $result;\n\nif (defined($workspace) && defined($output)) {\n    die \"Only one of --workspace or --output can be specified\";\n}\n\n$workspace = decode('utf-8', $workspace);\n$output = decode('utf-8', $output);\n\nmy $i3 = i3();\nif (!$i3->connect->recv) {\n    die \"Could not connect to i3\";\n}\n\nsub get_current_workspace {\n    my $current = first { $_->{focused} } @{$i3->get_workspaces->recv};\n    return $current->{name};\n}\n\nif (!defined($workspace) && !defined($output)) {\n    $workspace = get_current_workspace();\n}\n\nsub filter_containers {\n    my ($tree, $pred) = @_;\n\n    $_ = $tree;\n    return $tree if $pred->();\n\n    for my $child (@{$tree->{nodes}}, @{$tree->{floating_nodes}}) {\n        my $result = filter_containers($child, $pred);\n        return $result if defined($result);\n    }\n\n    return undef;\n}\n\nsub leaf_node {\n    my ($tree) = @_;\n\n    return $tree->{type} eq 'con' &&\n           @{$tree->{nodes}} == 0 &&\n           @{$tree->{floating_nodes}} == 0;\n}\n\nmy %allowed_keys = map { ($_, 1) } qw(\n    type\n    fullscreen_mode\n    layout\n    border\n    current_border_width\n    floating\n    percent\n    nodes\n    floating_nodes\n    name\n    geometry\n    window_properties\n    marks\n    rect\n);\n\nsub strip_containers {\n    my ($tree) = @_;\n\n    # layout is not relevant for a leaf container\n    delete $tree->{layout} if leaf_node($tree);\n\n    # fullscreen_mode conveys no state at all, it can either be 0 or 1 and the\n    # default is _always_ 0, so skip noop entries.\n    delete $tree->{fullscreen_mode} if $tree->{fullscreen_mode} == 0;\n\n    # names for non-leafs are auto-generated and useful only for i3 debugging\n    delete $tree->{name} unless leaf_node($tree);\n\n    delete $tree->{geometry} if zero_rect($tree->{geometry});\n\n    # Retain the rect for floating containers to keep their positions.\n    delete $tree->{rect} unless $tree->{type} eq 'floating_con';\n\n    delete $tree->{current_border_width} if $tree->{current_border_width} == -1;\n\n    for my $key (keys %$tree) {\n        delete $tree->{$key} unless exists($allowed_keys{$key});\n    }\n\n    for my $key (qw(nodes floating_nodes)) {\n        $tree->{$key} = [ map { strip_containers($_) } @{$tree->{$key}} ];\n    }\n\n    return $tree;\n}\n\nmy $json_xs = JSON::XS->new->pretty(1)->allow_nonref->space_before(0)->canonical(1);\n\nsub zero_rect {\n    my ($rect) = @_;\n    return $rect->{x} == 0 &&\n           $rect->{y} == 0 &&\n           $rect->{width} == 0 &&\n           $rect->{height} == 0;\n}\n\n# Dumps the containers in JSON, but with comments to explain the user what she\n# needs to fix.\nsub dump_containers {\n    my ($tree, $ws, $last) = @_;\n\n    $ws //= \"\";\n\n    say $ws . '{';\n\n    $ws .= (' ' x 4);\n\n    if (!leaf_node($tree)) {\n        my $desc = $tree->{layout} . ' split container';\n        if ($tree->{type} ne 'con') {\n            $desc = $tree->{type};\n        }\n        say \"$ws// $desc with \" . @{$tree->{nodes}} . \" children\";\n    }\n\n    # Turn “window_properties” into “swallows” expressions, but only for leaf\n    # nodes. It only makes sense for leaf nodes to swallow anything.\n    if (leaf_node($tree)) {\n        my $swallows = {};\n        for my $property (keys %{$tree->{window_properties}}) {\n            $swallows->{$property} = '^' . quotemeta($tree->{window_properties}->{$property}) . '$'\n                if $property ne 'transient_for';\n        }\n        $tree->{swallows} = [ $swallows ];\n    }\n    delete $tree->{window_properties};\n\n    my @keys = sort keys %$tree;\n    for (0 .. (@keys-1)) {\n        my $key = $keys[$_];\n        # Those are handled recursively, not printed.\n        next if $key eq 'nodes' || $key eq 'floating_nodes';\n\n        # JSON::XS’s encode appends a newline\n        chomp(my $val = $json_xs->encode($tree->{$key}));\n\n        # Fix indentation. Keep in mind we are producing output to be\n        # read/modified by a human.\n        $val =~ s/^/$ws/mg;\n        $val =~ s/^\\s+//;\n\n        # Comment out all swallows criteria, they are just suggestions.\n        if ($key eq 'swallows') {\n            $val =~ s,^(\\s*)\\s{3}\",\\1// \",gm;\n        }\n\n        # Append a comma unless this is the last value.\n        # Ugly, but necessary so that we can print all values before recursing.\n        my $comma = ($_ == (@keys-1) &&\n                     @{$tree->{nodes}} == 0 &&\n                     @{$tree->{floating_nodes}} == 0 ? '' : ',');\n        say qq#$ws\"$key\": $val$comma#;\n    }\n\n    for my $key (qw(nodes floating_nodes)) {\n        my $num = scalar @{$tree->{$key}};\n        next if !$num;\n\n        say qq#$ws\"$key\": [#;\n        for (0 .. ($num-1)) {\n            dump_containers(\n                $tree->{$key}->[$_],\n                $ws . (' ' x 4),\n                ($_ == ($num-1)));\n        }\n        say qq#$ws]#;\n    }\n\n    $ws =~ s/\\s{4}$//;\n\n    say $ws . ($last ? '}' : '},');\n}\n\nmy $tree = $i3->get_tree->recv;\n\nmy $dump;\nif (defined($workspace)) {\n    $dump = filter_containers($tree, sub {\n        $_->{type} eq 'workspace' && ($_->{name} eq $workspace || ($workspace =~ /^\\d+$/ && $_->{num} eq $workspace))\n    });\n} else {\n    $dump = filter_containers($tree, sub {\n        $_->{type} eq 'output' && $_->{name} eq $output\n    });\n    # Get the output’s content container (living beneath dockarea containers).\n    $dump = first { $_->{type} eq 'con' } @{$dump->{nodes}};\n}\n\n$dump = strip_containers($dump);\n\nsay \"// vim:ts=4:sw=4:et\";\nfor my $key (qw(nodes floating_nodes)) {\n    for (0 .. (@{$dump->{$key}} - 1)) {\n        dump_containers($dump->{$key}->[$_], undef, 1);\n        # Newlines separate containers so that one can use { and } in vim to\n        # jump out of the current container.\n        say '';\n    }\n}\n\n=encoding utf-8\n\n=head1 NAME\n\n    i3-save-tree - save (parts of) the layout tree for restoring\n\n=head1 SYNOPSIS\n\n    i3-save-tree [--workspace=name|number] [--output=name]\n\n=head1 DESCRIPTION\n\nDumps a workspace (or an entire output) to stdout. The data is supposed to be\nedited a bit by a human, then later fed to i3 via the append_layout command.\n\nThe append_layout command will create placeholder windows, arranged in the\nlayout the input file specifies. Each container should have a swallows\nspecification. When a window is mapped (made visible on the screen) that\nmatches the specification, i3 will put it into that place and kill the\nplaceholder.\n\nIf neither argument is specified, the currently focused workspace will be used.\n\n=head1 OPTIONS\n\n=over\n\n=item B<--workspace=name|number>\n\nSpecifies the workspace that should be dumped, e.g. 1. This can either be a\nname or the number of a workspace.\n\n=item B<--output=name>\n\nSpecifies the output that should be dumped, e.g. LVDS-1.\n\n=back\n\n=head1 VERSION\n\nVersion 0.1\n\n=head1 AUTHOR\n\nMichael Stapelberg, C<< <michael at i3wm.org> >>\n\n=head1 LICENSE AND COPYRIGHT\n\nCopyright 2013 Michael Stapelberg.\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the BSD license.\n\n=cut\n"
        },
        {
          "name": "i3-sensible-editor",
          "type": "blob",
          "size": 0.556640625,
          "content": "#!/bin/sh\n#\n# This code is released in public domain by Han Boetes <han@mijncomputer.nl>\n#\n# This script tries to exec an editor by trying some known editors if $EDITOR is\n# not set.\n#\n# Distributions/packagers can enhance this script with a distribution-specific\n# mechanism to find the preferred editor\n\n# Hopefully one of these is installed (no flamewars about preference please!):\nfor editor in \"$VISUAL\" \"$EDITOR\" nano nvim vim vi emacs pico qe mg jed gedit mcedit gvim; do\n    if command -v \"$editor\" > /dev/null 2>&1; then\n        exec \"$editor\" \"$@\"\n    fi\ndone\n"
        },
        {
          "name": "i3-sensible-pager",
          "type": "blob",
          "size": 0.783203125,
          "content": "#!/bin/sh\n#\n# This code is released in public domain by Han Boetes <han@mijncomputer.nl>\n\n# This script tries to exec a pager by trying some known pagers if $PAGER is\n# not set.\n#\n# Distributions/packagers can enhance this script with a\n# distribution-specific mechanism to find the preferred pager.\n\n# The less -E and -F options exit immediately for short files, strip if present.\ncase \"$LESS\" in\n  *[EF]*) LESS=`echo \"$LESS\" | tr -d EF`\nesac\n\n# Hopefully one of these is installed (no flamewars about preference please!):\n# We don't use 'more' because it will exit if the file is too short.\n# Worst case scenario we'll open the file in your editor.\nfor pager in \"$PAGER\" less most w3m pg i3-sensible-editor; do\n    if command -v \"$pager\" > /dev/null 2>&1; then\n        exec \"$pager\" \"$@\"\n    fi\ndone\n"
        },
        {
          "name": "i3-sensible-terminal",
          "type": "blob",
          "size": 1.0546875,
          "content": "#!/bin/sh\n#\n# This code is released in public domain by Han Boetes <han@mijncomputer.nl>\n#\n# This script tries to exec a terminal emulator by trying some known terminal\n# emulators.\n#\n# We welcome patches that add distribution-specific mechanisms to find the\n# preferred terminal emulator. On Debian, there is the x-terminal-emulator\n# symlink for example.\n#\n# Invariants:\n# 1. $TERMINAL must come first\n# 2. Distribution-specific mechanisms come next, e.g. x-terminal-emulator\n# 3. The terminal emulator with best accessibility comes first.\n# 4. No order is guaranteed/desired for the remaining terminal emulators.\nfor terminal in \"$TERMINAL\" x-terminal-emulator mate-terminal gnome-terminal terminator xfce4-terminal urxvt rxvt termit Eterm aterm uxterm xterm roxterm termite lxterminal terminology st qterminal lilyterm tilix terminix konsole kitty guake tilda alacritty hyper wezterm; do\n    if command -v \"$terminal\" > /dev/null 2>&1; then\n        exec \"$terminal\" \"$@\"\n    fi\ndone\n\ni3-nagbar -m 'i3-sensible-terminal could not find a terminal emulator. Please install one.'\n"
        },
        {
          "name": "i3bar",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "libi3",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 27.27734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   width=\"210mm\"\n   height=\"297mm\"\n   id=\"svg2\"\n   sodipodi:version=\"0.32\"\n   inkscape:version=\"1.0.1 (c497b03c, 2020-09-10)\"\n   sodipodi:docname=\"logo.svg\"\n   inkscape:output_extension=\"org.inkscape.output.svg.inkscape\"\n   version=\"1.1\">\n  <defs\n     id=\"defs4\">\n    <linearGradient\n       id=\"linearGradient3750\">\n      <stop\n         style=\"stop-color:#17273b;stop-opacity:1;\"\n         offset=\"0\"\n         id=\"stop3752\" />\n      <stop\n         id=\"stop4356\"\n         offset=\"0.41666666\"\n         style=\"stop-color:#008cd4;stop-opacity:0.78039217;\" />\n      <stop\n         style=\"stop-color:#6eb5de;stop-opacity:0.69803923;\"\n         offset=\"0.87847221\"\n         id=\"stop4358\" />\n      <stop\n         style=\"stop-color:#88bfe5;stop-opacity:0.61960787;\"\n         offset=\"1\"\n         id=\"stop3754\" />\n    </linearGradient>\n    <inkscape:perspective\n       id=\"perspective3661\"\n       inkscape:persp3d-origin=\"800.54004 : 538.95181 : 1\"\n       inkscape:vp_z=\"729.14432 : 1312.6102 : 1\"\n       inkscape:vp_y=\"0 : 2076.6845 : 0\"\n       inkscape:vp_x=\"-561.97287 : 2.3536924e-13 : 0\"\n       sodipodi:type=\"inkscape:persp3d\" />\n    <linearGradient\n       id=\"linearGradient3284\">\n      <stop\n         style=\"stop-color:#ffffff;stop-opacity:1;\"\n         offset=\"0\"\n         id=\"stop3286\" />\n      <stop\n         style=\"stop-color:#ffffff;stop-opacity:0.7518248;\"\n         offset=\"1\"\n         id=\"stop3288\" />\n    </linearGradient>\n    <linearGradient\n       id=\"linearGradient3278\">\n      <stop\n         id=\"stop3280\"\n         offset=\"0\"\n         style=\"stop-color:#33bff7;stop-opacity:0.38039216;\" />\n      <stop\n         id=\"stop3282\"\n         offset=\"1\"\n         style=\"stop-color:#2d446b;stop-opacity:1;\" />\n    </linearGradient>\n    <linearGradient\n       id=\"linearGradient3272\">\n      <stop\n         id=\"stop3274\"\n         offset=\"0\"\n         style=\"stop-color:#2596f6;stop-opacity:0.38039216;\" />\n      <stop\n         id=\"stop3276\"\n         offset=\"1\"\n         style=\"stop-color:#2d446b;stop-opacity:1;\" />\n    </linearGradient>\n    <linearGradient\n       id=\"linearGradient3266\">\n      <stop\n         id=\"stop3268\"\n         offset=\"0\"\n         style=\"stop-color:#189fff;stop-opacity:0.38039216;\" />\n      <stop\n         id=\"stop3270\"\n         offset=\"1\"\n         style=\"stop-color:#010b2b;stop-opacity:1;\" />\n    </linearGradient>\n    <linearGradient\n       id=\"linearGradient3244\">\n      <stop\n         id=\"stop3246\"\n         offset=\"0\"\n         style=\"stop-color:#419bff;stop-opacity:1;\" />\n      <stop\n         id=\"stop3248\"\n         offset=\"1\"\n         style=\"stop-color:#002359;stop-opacity:1;\" />\n    </linearGradient>\n    <linearGradient\n       id=\"linearGradient3159\">\n      <stop\n         style=\"stop-color:#33bff7;stop-opacity:0.38039216;\"\n         offset=\"0\"\n         id=\"stop3161\" />\n      <stop\n         style=\"stop-color:#2d446b;stop-opacity:1;\"\n         offset=\"1\"\n         id=\"stop3163\" />\n    </linearGradient>\n    <inkscape:perspective\n       sodipodi:type=\"inkscape:persp3d\"\n       inkscape:vp_x=\"-561.97287 : 3.1838564e-13 : 0\"\n       inkscape:vp_y=\"1.2715605e-13 : 2076.6845 : 0\"\n       inkscape:vp_z=\"725.91185 : 1314.5378 : 1\"\n       inkscape:persp3d-origin=\"778.99013 : 999.89265 : 1\"\n       id=\"perspective10\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3244\"\n       id=\"radialGradient3256\"\n       cx=\"344.73471\"\n       cy=\"77.263504\"\n       fx=\"344.73471\"\n       fy=\"77.263504\"\n       r=\"196.15704\"\n       gradientTransform=\"matrix(-1.39796,-5.3360318e-2,8.3551106e-2,-2.1889079,820.20461,272.08319)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3159\"\n       id=\"radialGradient3264\"\n       cx=\"140.3363\"\n       cy=\"300.27451\"\n       fx=\"140.3363\"\n       fy=\"300.27451\"\n       r=\"206.15704\"\n       gradientTransform=\"matrix(0.6771172,-0.6830119,1.1802789,1.1700925,-161.83993,77.639162)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3284\"\n       id=\"radialGradient3290\"\n       cx=\"267.50388\"\n       cy=\"337.12692\"\n       fx=\"267.50388\"\n       fy=\"337.12692\"\n       r=\"77.845424\"\n       gradientTransform=\"matrix(1,0,0,0.7430849,0,86.613009)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <inkscape:perspective\n       id=\"perspective3373\"\n       inkscape:persp3d-origin=\"396.85039 : 374.17322 : 1\"\n       inkscape:vp_z=\"793.70078 : 561.25983 : 1\"\n       inkscape:vp_y=\"0 : 1066.6667 : 0\"\n       inkscape:vp_x=\"0 : 561.25983 : 1\"\n       sodipodi:type=\"inkscape:persp3d\" />\n    <linearGradient\n       id=\"linearGradient3211\">\n      <stop\n         id=\"stop3213\"\n         offset=\"0\"\n         style=\"stop-color: rgb(0, 160, 255); stop-opacity: 1;\" />\n      <stop\n         id=\"stop3215\"\n         offset=\"1\"\n         style=\"stop-color: rgb(0, 37, 255); stop-opacity: 1;\" />\n    </linearGradient>\n    <filter\n       inkscape:collect=\"always\"\n       id=\"filter3406\">\n      <feGaussianBlur\n         inkscape:collect=\"always\"\n         stdDeviation=\"13.396228\"\n         id=\"feGaussianBlur3408\" />\n    </filter>\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3284\"\n       id=\"radialGradient3416\"\n       cx=\"119.96373\"\n       cy=\"229.28981\"\n       fx=\"119.96373\"\n       fy=\"229.28981\"\n       r=\"203.19508\"\n       gradientTransform=\"matrix(0.7210805,2.1168143,-1.4722239,0.5015047,347.53034,-320.94088)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3266\"\n       id=\"radialGradient3423\"\n       gradientUnits=\"userSpaceOnUse\"\n       gradientTransform=\"matrix(1.1454302,-1.1687051,2.0295327,1.9193266,-889.0626,57.219022)\"\n       cx=\"351.15485\"\n       cy=\"372.06332\"\n       fx=\"351.15485\"\n       fy=\"372.06332\"\n       r=\"163.57143\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3284\"\n       id=\"radialGradient3734\"\n       gradientUnits=\"userSpaceOnUse\"\n       gradientTransform=\"matrix(0.7210805,2.1168143,-1.4722239,0.5015047,347.53034,-320.94088)\"\n       cx=\"119.96373\"\n       cy=\"229.28981\"\n       fx=\"119.96373\"\n       fy=\"229.28981\"\n       r=\"203.19508\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3284\"\n       id=\"radialGradient3736\"\n       gradientUnits=\"userSpaceOnUse\"\n       gradientTransform=\"matrix(0.7210805,2.1168143,-1.4722239,0.5015047,347.53034,-320.94088)\"\n       cx=\"119.96373\"\n       cy=\"229.28981\"\n       fx=\"119.96373\"\n       fy=\"229.28981\"\n       r=\"203.19508\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3750\"\n       id=\"radialGradient3758\"\n       cx=\"390.69662\"\n       cy=\"258.92429\"\n       fx=\"390.69662\"\n       fy=\"258.92429\"\n       r=\"32.03125\"\n       gradientTransform=\"matrix(4.0292425,-5.5974184,5.1695404,3.721239,-2510.9809,1613.1551)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3750\"\n       id=\"radialGradient3760\"\n       cx=\"59.046589\"\n       cy=\"248.2272\"\n       fx=\"59.046589\"\n       fy=\"248.2272\"\n       r=\"197.15625\"\n       gradientTransform=\"matrix(1.7105919,-4.3705195e-2,3.3347151e-2,1.3051856,-58.593126,-250.18318)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3750\"\n       id=\"radialGradient3762\"\n       cx=\"192.64008\"\n       cy=\"282.40387\"\n       fx=\"192.64008\"\n       fy=\"282.40387\"\n       r=\"133.09375\"\n       gradientTransform=\"matrix(1.0081228,0.4493093,-1.0529321,2.3624813,273.13721,-455.12138)\"\n       gradientUnits=\"userSpaceOnUse\" />\n    <radialGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3750\"\n       id=\"radialGradient4344\"\n       gradientUnits=\"userSpaceOnUse\"\n       gradientTransform=\"matrix(5.7478532,-0.5889281,0.4834745,4.7186431,-260.98332,-919.446)\"\n       cx=\"24\"\n       cy=\"280.45392\"\n       fx=\"24\"\n       fy=\"280.45392\"\n       r=\"65.0625\" />\n    <linearGradient\n       inkscape:collect=\"always\"\n       xlink:href=\"#linearGradient3750\"\n       id=\"linearGradient4354\"\n       x1=\"-125.59599\"\n       y1=\"-100.47679\"\n       x2=\"-5.2882538\"\n       y2=\"-100.47679\"\n       gradientUnits=\"userSpaceOnUse\" />\n  </defs>\n  <sodipodi:namedview\n     id=\"base\"\n     pagecolor=\"#ffffff\"\n     bordercolor=\"#666666\"\n     borderopacity=\"1.0\"\n     inkscape:pageopacity=\"0.0\"\n     inkscape:pageshadow=\"2\"\n     inkscape:zoom=\"1\"\n     inkscape:cx=\"164.67981\"\n     inkscape:cy=\"285.75327\"\n     inkscape:document-units=\"px\"\n     inkscape:current-layer=\"layer1\"\n     showgrid=\"false\"\n     inkscape:window-width=\"1272\"\n     inkscape:window-height=\"856\"\n     inkscape:window-x=\"24\"\n     inkscape:window-y=\"22\"\n     inkscape:document-rotation=\"0\"\n     inkscape:window-maximized=\"0\" />\n  <metadata\n     id=\"metadata7\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title>Logo I3</dc:title>\n        <dc:contributor>\n          <cc:Agent>\n            <dc:title>yellowiscool, farvardin</dc:title>\n          </cc:Agent>\n        </dc:contributor>\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>steckdenis</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:description>Logo for I3, an improved dynamic tiling window manager: http://i3wm.org/</dc:description>\n        <cc:license\n           rdf:resource=\"http://creativecommons.org/licenses/by-sa/3.0/\" />\n      </cc:Work>\n      <cc:License\n         rdf:about=\"http://creativecommons.org/licenses/by-sa/3.0/\">\n        <cc:permits\n           rdf:resource=\"http://creativecommons.org/ns#Reproduction\" />\n        <cc:permits\n           rdf:resource=\"http://creativecommons.org/ns#Distribution\" />\n        <cc:requires\n           rdf:resource=\"http://creativecommons.org/ns#Notice\" />\n        <cc:requires\n           rdf:resource=\"http://creativecommons.org/ns#Attribution\" />\n        <cc:permits\n           rdf:resource=\"http://creativecommons.org/ns#DerivativeWorks\" />\n        <cc:requires\n           rdf:resource=\"http://creativecommons.org/ns#ShareAlike\" />\n      </cc:License>\n    </rdf:RDF>\n  </metadata>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"layer4\"\n     inkscape:label=\"fond\"\n     style=\"display:none\">\n    <rect\n       style=\"opacity:0.87000002;fill:#5599ff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:60;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\"\n       id=\"rect3241\"\n       width=\"330\"\n       height=\"313.5\"\n       x=\"39\"\n       y=\"103.86218\" />\n  </g>\n  <g\n     inkscape:label=\"Calque 1\"\n     inkscape:groupmode=\"layer\"\n     id=\"layer1\"\n     style=\"display:inline\">\n    <rect\n       style=\"opacity:1;fill:url(#radialGradient3423);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\"\n       id=\"rect2383\"\n       width=\"322.85715\"\n       height=\"308.57144\"\n       x=\"42.85714\"\n       y=\"106.6479\" />\n    <path\n       style=\"opacity:0.09583333;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:60;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n       d=\"M 43.707165,106.65625 C 41.782753,110.85167 43.413409,116.56832 42.911106,121.37227 C 43.128238,169.37318 43.345369,217.37409 43.5625,265.375 C 55.407545,275.84522 72.489757,274.25524 87.152921,276.2874 C 140.64585,279.73053 194.4359,279.89819 247.75899,273.83826 C 281.78509,270.40324 315.81178,265.10681 348.64903,255.42536 C 357.00872,252.61832 367.50989,246.20234 365.71875,236.08333 C 365.71875,192.94097 365.71875,149.79861 365.71875,106.65625 C 258.38155,106.65625 151.04436,106.65625 43.707165,106.65625 z\"\n       id=\"path3221\" />\n    <g\n       transform=\"matrix(0.3387513,-0.3401668,0.3401668,0.3387513,59.228831,277.49214)\"\n       style=\"opacity:0.5;fill:#000000;fill-opacity:1;filter:url(#filter3406)\"\n       id=\"g3394\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:60;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"M 412.75,98.59375 C 396.19379,98.835333 382.96319,112.44354 383.1875,129 C 383.1875,129 383.18749,216.25107 383.1875,325.3125 C 383.1875,348.61986 371.07095,364.44442 344.96875,378.78125 C 318.86655,393.11808 279.99599,401.65625 241.09375,401.65625 C 202.19151,401.65625 163.32095,393.11808 137.21875,378.78125 C 111.11655,364.44442 99,348.61986 99,325.3125 C 99,270.93917 99.441249,221.95695 99.65625,186.4375 C 99.76375,168.67777 99.833258,154.32173 99.75,144.09375 C 99.708371,138.97976 99.620501,134.98608 99.46875,131.625 C 99.392874,129.94446 99.331848,128.56919 99.0625,126.375 C 98.927826,125.27791 98.894428,124.1628 98.0625,121.1875 C 97.646536,119.69985 97.275733,117.79087 94.875,113.75 C 92.474267,109.70913 84.912085,98.999943 69,99 C 59.653467,98.879464 50.78473,103.12192 45.013008,110.47443 C 39.241286,117.82694 37.226064,127.44941 39.5625,136.5 C 39.625678,138.53091 39.71934,140.82729 39.75,144.59375 C 39.827653,154.13315 39.763299,168.40852 39.65625,186.09375 C 39.442151,221.46421 39,270.62442 39,325.3125 C 38.999999,372.89506 69.913445,410.26687 108.34375,431.375 C 146.77406,452.48313 193.95265,461.65625 241.09375,461.65625 C 288.23485,461.65625 335.41344,452.48313 373.84375,431.375 C 412.27406,410.26687 443.1875,372.89506 443.1875,325.3125 C 443.18749,216.25108 443.1875,129 443.1875,129 C 443.29728,120.89717 440.12471,113.0945 434.39168,107.36735 C 428.65864,101.6402 420.85272,98.475651 412.75,98.59375 L 412.75,98.59375 z\"\n         id=\"path3396\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:60;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"M 239.5625,99.5 C 223.00629,99.741583 209.77569,113.34979 210,129.90625 L 210,350 C 209.84699,360.81908 215.53126,370.88244 224.87619,376.33663 C 234.22111,381.79082 245.77889,381.79082 255.12381,376.33663 C 264.46874,370.88244 270.15301,360.81908 270,350 L 270,129.90625 C 270.10978,121.80342 266.93721,114.00075 261.20418,108.2736 C 255.47114,102.54645 247.66522,99.381901 239.5625,99.5 L 239.5625,99.5 z\"\n         id=\"path3398\" />\n      <path\n         sodipodi:type=\"arc\"\n         style=\"fill:#000000;fill-opacity:1;stroke-width:60;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none\"\n         id=\"path3400\"\n         sodipodi:cx=\"70\"\n         sodipodi:cy=\"40\"\n         sodipodi:rx=\"30\"\n         sodipodi:ry=\"30\"\n         d=\"M 100,40 A 30,30 0 1 1 40,40 A 30,30 0 1 1 100,40 z\"\n         transform=\"translate(0,-10)\" />\n      <path\n         transform=\"translate(170,-10)\"\n         d=\"M 100,40 A 30,30 0 1 1 40,40 A 30,30 0 1 1 100,40 z\"\n         sodipodi:ry=\"30\"\n         sodipodi:rx=\"30\"\n         sodipodi:cy=\"40\"\n         sodipodi:cx=\"70\"\n         id=\"path3402\"\n         style=\"fill:#000000;fill-opacity:1;stroke-width:60;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none\"\n         sodipodi:type=\"arc\" />\n      <path\n         sodipodi:type=\"arc\"\n         style=\"fill:#000000;fill-opacity:1;stroke-width:60;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none\"\n         id=\"path3404\"\n         sodipodi:cx=\"70\"\n         sodipodi:cy=\"40\"\n         sodipodi:rx=\"30\"\n         sodipodi:ry=\"30\"\n         d=\"M 100,40 A 30,30 0 1 1 40,40 A 30,30 0 1 1 100,40 z\"\n         transform=\"translate(345,-10)\" />\n    </g>\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"layer2\"\n     inkscape:label=\"tiling\"\n     style=\"display:none\">\n    <rect\n       y=\"106.6479\"\n       x=\"42.85714\"\n       height=\"308.57144\"\n       width=\"322.85715\"\n       id=\"rect3247\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\" />\n    <rect\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\"\n       id=\"rect3253\"\n       width=\"212.07706\"\n       height=\"98.216858\"\n       x=\"42.85096\"\n       y=\"218.0385\" />\n    <rect\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\"\n       id=\"rect3257\"\n       width=\"110.75323\"\n       height=\"70.943619\"\n       x=\"254.94135\"\n       y=\"274.26196\" />\n    <rect\n       y=\"218.02481\"\n       x=\"254.93958\"\n       height=\"56.235466\"\n       width=\"110.76914\"\n       id=\"rect3259\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\" />\n    <rect\n       y=\"345.25272\"\n       x=\"254.91608\"\n       height=\"69.955116\"\n       width=\"110.78036\"\n       id=\"rect3255\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\" />\n    <rect\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\"\n       id=\"rect3249\"\n       width=\"106.87583\"\n       height=\"111.69163\"\n       x=\"42.849949\"\n       y=\"106.32091\" />\n    <rect\n       y=\"106.45182\"\n       x=\"149.72185\"\n       height=\"111.57816\"\n       width=\"105.18911\"\n       id=\"rect3261\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\" />\n    <rect\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\"\n       id=\"rect3263\"\n       width=\"110.786\"\n       height=\"111.57211\"\n       x=\"254.91632\"\n       y=\"106.45485\" />\n    <rect\n       y=\"316.22876\"\n       x=\"42.847878\"\n       height=\"98.979958\"\n       width=\"212.0791\"\n       id=\"rect3251\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:inline\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"layer5\"\n     inkscape:label=\"tiling2\"\n     style=\"display:inline\">\n    <rect\n       y=\"106.6479\"\n       x=\"42.85714\"\n       height=\"308.57144\"\n       width=\"322.85715\"\n       id=\"rect3244\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:inline\" />\n    <rect\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:inline\"\n       id=\"rect3246\"\n       width=\"322.85715\"\n       height=\"308.57144\"\n       x=\"42.85714\"\n       y=\"106.6479\" />\n    <path\n       style=\"fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dashoffset:0;stroke-opacity:1;display:inline\"\n       d=\"M 182.85714,106.6479 L 182.85714,415.21935 L 182.85714,106.6479 z\"\n       id=\"path934\"\n       sodipodi:nodetypes=\"ccc\" />\n    <path\n       sodipodi:nodetypes=\"ccc\"\n       id=\"path3254\"\n       d=\"M 182.41744,207.43363 L 43.296842,207.43363 L 182.41744,207.43363 z\"\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\" />\n    <path\n       style=\"opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\"\n       d=\"M 182.41744,313.43363 L 43.296842,313.43363 L 182.41744,313.43363 z\"\n       id=\"path3256\"\n       sodipodi:nodetypes=\"ccc\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"layer3\"\n     inkscape:label=\"I3\"\n     style=\"display:inline\">\n    <path\n       style=\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:60;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;display:inline;opacity:0.87;color:#000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-dashoffset:0;visibility:visible;overflow:visible;enable-background:accumulate\"\n       d=\"m 232.58675,170.48705 c -5.52626,5.71371 -5.37908,14.82412 0.32886,20.35634 0,0 29.67992,29.55642 66.779,66.50112 7.92839,7.8954 9.20688,17.37763 5.24164,31.11336 -3.96524,13.73572 -14.22829,29.85051 -27.40648,43.08376 -13.17818,13.23325 -29.25004,23.56341 -42.9691,27.58589 -13.71907,4.02248 -23.20656,2.78354 -31.13495,-5.11186 -18.496,-18.41904 -35.00865,-35.16193 -47.01836,-47.26732 -6.00485,-6.0527 -10.86475,-10.93947 -14.37218,-14.37589 -1.75371,-1.71821 -3.14199,-3.04119 -4.33673,-4.12814 -0.59736,-0.54347 -1.08586,-0.98859 -1.92349,-1.64025 -0.41881,-0.32583 -0.80945,-0.69221 -2.10337,-1.4171 -0.64695,-0.36245 -1.42193,-0.88298 -3.60976,-1.43518 -2.18782,-0.55221 -8.39243,-1.60755 -13.78265,3.80523 -3.20715,3.13855 -4.7683,7.59254 -4.2224,12.04656 0.5459,4.45402 3.90276,7.82444 7.00667,10.67027 0.71225,0.66649 1.52513,1.41253 2.81674,2.67799 3.27129,3.20507 8.1055,8.06276 14.08516,14.09007 11.95933,12.05462 28.53222,28.85811 47.13529,47.38377 16.18601,16.11865 39.37063,18.26267 59.56923,12.34037 20.1986,-5.92231 39.3008,-18.8635 55.26991,-34.89933 15.96911,-16.03584 28.83053,-35.19184 34.66856,-55.41496 5.83803,-20.22312 3.59735,-43.3986 -12.58866,-59.51725 l -66.77899,-66.50112 c -2.71913,-2.78218 -6.44805,-4.34615 -10.3383,-4.33604 -3.89027,0.0101 -7.61101,1.59343 -10.31564,4.38971 zm 232.58675,170.48705 c -5.52626,5.71371 -5.37908,14.82412 0.32886,20.35634 0,0 29.67992,29.55642 66.779,66.50112 7.92839,7.8954 9.20688,17.37763 5.24164,31.11336 -3.96524,13.73572 -14.22829,29.85051 -27.40648,43.08376 -13.17818,13.23325 -29.25004,23.56341 -42.9691,27.58589 -13.71907,4.02248 -23.20656,2.78354 -31.13495,-5.11186 -18.496,-18.41904 -35.00865,-35.16193 -47.01836,-47.26732 -6.00485,-6.0527 -10.86475,-10.93947 -14.37218,-14.37589 -1.75371,-1.71821 -3.14199,-3.04119 -4.33673,-4.12814 -0.59736,-0.54347 -1.08586,-0.98859 -1.92349,-1.64025 -0.41881,-0.32583 -0.80945,-0.69221 -2.10337,-1.4171 -0.64695,-0.36245 -1.42193,-0.88298 -3.60976,-1.43518 -2.18782,-0.55221 -8.39243,-1.60755 -13.78265,3.80523 -3.20715,3.13855 -4.7683,7.59254 -4.2224,12.04656 0.5459,4.45402 3.90276,7.82444 7.00667,10.67027 0.71225,0.66649 1.52513,1.41253 2.81674,2.67799 3.27129,3.20507 8.1055,8.06276 14.08516,14.09007 11.95933,12.05462 28.53222,28.85811 47.13529,47.38377 16.18601,16.11865 39.37063,18.26267 59.56923,12.34037 20.1986,-5.92231 39.3008,-18.8635 55.26991,-34.89933 15.96911,-16.03584 28.83053,-35.19184 34.66856,-55.41496 5.83803,-20.22312 3.59735,-43.3986 -12.58866,-59.51725 l -66.77899,-66.50112 c -2.71913,-2.78218 -6.44805,-4.34615 -10.3383,-4.33604 -3.89027,0.0101 -7.61101,1.59343 -10.31564,4.38971 z\"\n       id=\"path2405\" />\n    <path\n       style=\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:60;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;display:inline;opacity:0.87\"\n       d=\"M 174.22754,229.70669 C 168.70128,235.42039 168.84845,244.5308 174.5564,250.06302 L 249.42498,324.62007 C 253.05344,328.33709 258.40222,329.81247 263.42316,328.48125 C 268.4441,327.15003 272.35931,323.21846 273.66958,318.19201 C 274.97985,313.16556 273.48219,307.82299 269.75006,304.21006 L 194.88148,229.65302 C 192.16235,226.87083 188.43343,225.30687 184.54317,225.31697 C 180.65291,225.32708 176.93217,226.9104 174.22754,229.70669 L 174.22754,229.70669 z\"\n       id=\"path3179\" />\n    <path\n       sodipodi:type=\"arc\"\n       style=\"fill:#ffffff;fill-opacity:1;stroke-width:124.98212864999999283;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;display:inline;opacity:0.87;color:#000000;fill-rule:evenodd;stroke:none;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;overflow:visible;enable-background:accumulate\"\n       id=\"path3181\"\n       sodipodi:cx=\"70\"\n       sodipodi:cy=\"40\"\n       sodipodi:rx=\"30\"\n       sodipodi:ry=\"30\"\n       d=\"M 100,40 A 30,30 0 1 1 40,40 A 30,30 0 1 1 100,40 z\"\n       transform=\"matrix(0.3387513,-0.3401668,0.3401668,0.3387513,55.827163,274.10463)\" />\n    <path\n       transform=\"matrix(0.3387513,-0.3401668,0.3401668,0.3387513,113.41488,216.27627)\"\n       d=\"M 100,40 A 30,30 0 1 1 40,40 A 30,30 0 1 1 100,40 z\"\n       sodipodi:ry=\"30\"\n       sodipodi:rx=\"30\"\n       sodipodi:cy=\"40\"\n       sodipodi:cx=\"70\"\n       id=\"path3183\"\n       style=\"fill:#ffffff;fill-opacity:1;stroke-width:124.98212864999999283;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;display:inline;opacity:0.87;color:#000000;fill-rule:evenodd;stroke:none;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;overflow:visible;enable-background:accumulate\"\n       sodipodi:type=\"arc\" />\n    <path\n       sodipodi:type=\"arc\"\n       style=\"fill:#ffffff;fill-opacity:1;stroke-width:124.98212864999999283;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;display:inline;opacity:0.87;color:#000000;fill-rule:evenodd;stroke:none;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;overflow:visible;enable-background:accumulate\"\n       id=\"path3185\"\n       sodipodi:cx=\"70\"\n       sodipodi:cy=\"40\"\n       sodipodi:rx=\"30\"\n       sodipodi:ry=\"30\"\n       d=\"M 100,40 A 30,30 0 1 1 40,40 A 30,30 0 1 1 100,40 z\"\n       transform=\"matrix(0.3387513,-0.3401668,0.3401668,0.3387513,172.69636,156.74708)\" />\n  </g>\n</svg>\n"
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 17.328125,
          "content": "# -*- mode: meson -*-\n\n# Style objective: be consistent with what mesonbuild.com documents/uses, and/or\n# the meson book: https://meson-manual.com/\n\nproject(\n  'i3',\n  'c',\n  version: '4.21.1',\n  default_options: [\n    'c_std=c11',\n    'warning_level=1',  # enable all warnings (-Wall)\n    # TODO(https://github.com/i3/i3/issues/4087): switch to\n    # 'buildtype=debugoptimized',\n  ],\n  # Ubuntu 18.04 (supported until 2023) has meson 0.45.\n  # We can revisit our minimum supported meson version\n  # if it turns out to be too hard to maintain.\n  meson_version: '>=0.45.0',\n)\n\ncc = meson.get_compiler('c')\nadd_project_arguments(cc.get_supported_arguments(['-Wunused-value']), language: 'c')\n\nif meson.version().version_compare('>=0.48.0')\n  # https://github.com/mesonbuild/meson/issues/2166#issuecomment-629696911\n  meson.add_dist_script('meson/meson-dist-script')\nelse\n  message('meson <0.48.0 detected, dist tarballs will not be filtered')\nendif\n\n################################################################################\n# Version handling\n################################################################################\n\ncdata = configuration_data()\n\nversion_array = meson.project_version().split('.')\ncdata.set('MAJOR_VERSION', version_array[0].to_int())\ncdata.set('MINOR_VERSION', version_array[1].to_int())\nif version_array.length() > 2\n  cdata.set('PATCH_VERSION', version_array[2].to_int())\nelse\n  cdata.set('PATCH_VERSION', 0)\nendif\ncdata.set_quoted('I3_VERSION', '@VCS_TAG@')\ncdata.set_quoted('SYSCONFDIR', join_paths(get_option('prefix'), get_option('sysconfdir')))\n\nif get_option('b_sanitize').split(',').contains('address')\n  cdata.set('I3_ASAN_ENABLED', 1)\nendif\n\ncdata.set('HAVE_STRNDUP', cc.has_function('strndup'))\ncdata.set('HAVE_MKDIRP', cc.has_function('mkdirp'))\n\n# Instead of generating config.h directly, make vcs_tag generate it so that\n# @VCS_TAG@ is replaced.\nconfig_h_in = configure_file(\n  output: 'config.h.in',\n  configuration: cdata,\n)\nconfig_h = declare_dependency(\n  sources: vcs_tag(\n    input: config_h_in,\n    output: 'config.h',\n    fallback: meson.project_version() + '-non-git',\n  )\n)\n\n################################################################################\n# docs generation\n################################################################################\n\ndocdir = get_option('docdir')\nif docdir == ''\n  docdir = join_paths(get_option('datadir'), 'doc', 'i3')\nendif\n\nif get_option('docs')\n  asciidoc = find_program('asciidoc')\n  doc_toc_inputs = [\n    'docs/hacking-howto',\n    'docs/userguide',\n    'docs/ipc',\n    'docs/multi-monitor',\n    'docs/wsbar',\n    'docs/testsuite',\n    'docs/i3bar-protocol',\n    'docs/layout-saving',\n  ]\n  foreach m : doc_toc_inputs\n    custom_target(\n      m.underscorify()+'_asciidoc',\n      input: m,\n      output: '@BASENAME@.html',\n      command: [\n        asciidoc,\n        '-a', 'toc',\n        '-n',\n        '-o', '@OUTPUT@',\n        '@INPUT@',\n      ],\n      install: true,\n      install_dir: docdir,\n    )\n  endforeach\n\n  doc_notoc_inputs = [\n    'docs/debugging',\n  ]\n  foreach m : doc_notoc_inputs\n    custom_target(\n      m.underscorify()+'_asciidoc',\n      input: m,\n      output: '@BASENAME@.html',\n      command: [\n        asciidoc,\n        '-n',\n        '-o', '@OUTPUT@',\n        '@INPUT@',\n      ],\n      install: true,\n      install_dir: docdir,\n    )\n  endforeach\n\nelse\n  if run_command('[', '-f', 'docs/hacking-howto.html', ']').returncode() == 0\n    install_data(\n      [\n\t'docs/hacking-howto.html',\n\t'docs/userguide.html',\n\t'docs/ipc.html',\n\t'docs/multi-monitor.html',\n\t'docs/wsbar.html',\n\t'docs/testsuite.html',\n\t'docs/i3bar-protocol.html',\n\t'docs/layout-saving.html',\n\t'docs/debugging.html',\n      ],\n      install_dir: docdir,\n    )\n  endif\nendif\n\ninstall_data(\n  [\n    'docs/bigpicture.png',\n    'docs/single_terminal.png',\n    'docs/snapping.png',\n    'docs/two_columns.png',\n    'docs/two_terminals.png',\n    'docs/modes.png',\n    'docs/wsbar.png',\n    'docs/keyboard-layer1.png',\n    'docs/keyboard-layer2.png',\n    'docs/i3-sync-working.png',\n    'docs/i3-sync.png',\n    'docs/tree-layout1.png',\n    'docs/tree-layout2.png',\n    'docs/tree-shot1.png',\n    'docs/tree-shot2.png',\n    'docs/tree-shot3.png',\n    'docs/tree-shot4.png',\n    'docs/refcard.html',\n    'docs/refcard_style.css',\n    'docs/logo-30.png',\n    'docs/layout-saving-1.png',\n  ],\n  install_dir: docdir,\n)\n\nif meson.version().version_compare('>=0.53')\n  summary('build docs (-Ddocs)', get_option('docs'))\nendif\n\n################################################################################\n# manpages\n################################################################################\n\nman1 = join_paths(get_option('mandir'), 'man1')\n\nif get_option('mans')\n  asciidoc = find_program('asciidoc')\n  asciidoc_cdata = configuration_data()\n  asciidoc_cdata.set('PACKAGE_VERSION', meson.project_version())\n  asciidoc_conf = configure_file(\n    input: 'man/asciidoc.conf.in',\n    output: 'asciidoc.conf',\n    configuration: asciidoc_cdata,\n  )\n\n  xmlto = find_program('xmlto')\n\n  pod2man = find_program('pod2man')\n\n  man_inputs = [\n    'man/i3.man',\n    'man/i3bar.man',\n    'man/i3-msg.man',\n    'man/i3-input.man',\n    'man/i3-nagbar.man',\n    'man/i3-config-wizard.man',\n    'man/i3-migrate-config-to-v4.man',\n    'man/i3-sensible-editor.man',\n    'man/i3-sensible-pager.man',\n    'man/i3-sensible-terminal.man',\n    'man/i3-dump-log.man',\n  ]\n\n  foreach m : man_inputs\n    xml = custom_target(\n      m.underscorify()+'_asciidoc',\n      input: m,\n      output: '@BASENAME@.xml',\n      command: [\n        asciidoc,\n        '-d', 'manpage',\n        '-b', 'docbook',\n        '-f', asciidoc_conf,\n        '-o', '@OUTPUT@',\n        '@INPUT@',\n      ],\n    )\n\n    custom_target(\n      m.underscorify()+'_xmlto',\n      input: xml,\n      output: '@BASENAME@.1',\n      command: [\n        xmlto,\n        '--stringparam',\n        'man.th.title.max.length=30',\n        'man',\n        '-o',\n        '@OUTDIR@',\n        '@INPUT@',\n      ],\n      # We should use install and install_dir instead of install_man as per:\n      # https://github.com/mesonbuild/meson/issues/4981#issuecomment-467084867\n      # https://github.com/mesonbuild/meson/issues/1550#issuecomment-370164307\n      install: true,\n      install_dir: man1,\n    )\n  endforeach\n\n  pod2man_inputs = [\n    'i3-dmenu-desktop',\n    'i3-save-tree',\n  ]\n  foreach m : pod2man_inputs\n    custom_target(\n      m.underscorify()+'_pod2man',\n      input: m,\n      output: '@BASENAME@.1',\n      command: [\n        pod2man,\n        '--utf8',\n        '@INPUT@',\n        '@OUTPUT@',\n      ],\n      # We should use install and install_dir instead of install_man as per:\n      # https://github.com/mesonbuild/meson/issues/4981#issuecomment-467084867\n      # https://github.com/mesonbuild/meson/issues/1550#issuecomment-370164307\n      install: true,\n      install_dir: man1,\n    )\n  endforeach\n\nelse\n  if run_command('[', '-f', 'man/i3.1', ']').returncode() == 0\n    install_data(\n      [\n\t'man/i3.1',\n\t'man/i3bar.1',\n\t'man/i3-msg.1',\n\t'man/i3-input.1',\n\t'man/i3-nagbar.1',\n\t'man/i3-config-wizard.1',\n\t'man/i3-migrate-config-to-v4.1',\n\t'man/i3-sensible-editor.1',\n\t'man/i3-sensible-pager.1',\n\t'man/i3-sensible-terminal.1',\n\t'man/i3-dump-log.1',\n\t'man/i3-dmenu-desktop.1',\n\t'man/i3-save-tree.1',\n      ],\n      install_dir: man1,\n    )\n  endif\nendif\n\nif meson.version().version_compare('>=0.53')\n  summary('build manpages (-Dmans)', get_option('mans'))\nendif\n\n# Required for e.g. struct ucred to be defined as per unix(7).\nadd_project_arguments('-D_GNU_SOURCE', language: 'c')\n\n# https://mesonbuild.com/howtox.html#add-math-library-lm-portably\nm_dep = cc.find_library('m', required: false)\nrt_dep = cc.find_library('rt', required: false)\niconv_dep = cc.find_library('iconv', required: false)\n\nlibsn_dep = dependency('libstartup-notification-1.0', method: 'pkg-config')\nxcb_dep = dependency('xcb', method: 'pkg-config')\nxcb_xkb_dep = dependency('xcb-xkb', method: 'pkg-config')\nxcb_xinerama_dep = dependency('xcb-xinerama', method: 'pkg-config')\nxcb_randr_dep = dependency('xcb-randr', method: 'pkg-config')\nxcb_shape_dep = dependency('xcb-shape', method: 'pkg-config')\nxcb_util_dep = dependency('xcb-util', method: 'pkg-config')\nxcb_util_cursor_dep = dependency('xcb-cursor', method: 'pkg-config')\nxcb_util_keysyms_dep = dependency('xcb-keysyms', method: 'pkg-config')\nxcb_util_wm_dep = dependency('xcb-icccm', method: 'pkg-config')\nxcb_util_xrm_dep = dependency('xcb-xrm', method: 'pkg-config')\nxkbcommon_dep = dependency('xkbcommon', method: 'pkg-config')\nxkbcommon_x11_dep = dependency('xkbcommon-x11', method: 'pkg-config')\nyajl_dep = dependency('yajl', method: 'pkg-config')\nlibpcre_dep = dependency('libpcre2-8', version: '>=10', method: 'pkg-config')\ncairo_dep = dependency('cairo', version: '>=1.14.4', method: 'pkg-config')\npangocairo_dep = dependency('pangocairo', method: 'pkg-config')\nglib_dep = dependency('glib-2.0', method: 'pkg-config')\ngobject_dep = dependency('gobject-2.0', method: 'pkg-config')\n\nev_dep = cc.find_library('ev')\n\ninc = include_directories('include')\n\nlibi3srcs = [\n  'libi3/boolstr.c',\n  'libi3/create_socket.c',\n  'libi3/dpi.c',\n  'libi3/draw_util.c',\n  'libi3/fake_configure_notify.c',\n  'libi3/font.c',\n  'libi3/format_placeholders.c',\n  'libi3/get_colorpixel.c',\n  'libi3/get_config_path.c',\n  'libi3/get_exe_path.c',\n  'libi3/get_mod_mask.c',\n  'libi3/get_process_filename.c',\n  'libi3/get_visualtype.c',\n  'libi3/g_utf8_make_valid.c',\n  'libi3/ipc_connect.c',\n  'libi3/ipc_recv_message.c',\n  'libi3/ipc_send_message.c',\n  'libi3/is_debug_build.c',\n  'libi3/path_exists.c',\n  'libi3/resolve_tilde.c',\n  'libi3/root_atom_contents.c',\n  'libi3/safewrappers.c',\n  'libi3/string.c',\n  'libi3/ucs2_conversion.c',\n  'libi3/nonblock.c',\n  'libi3/screenshot_wallpaper.c',\n  'libi3/is_background_set.c',\n]\n\nif not cdata.get('HAVE_STRNDUP')\n  libi3srcs += 'libi3/strndup.c'\nendif\n\nif not cdata.get('HAVE_MKDIRP')\n  libi3srcs += 'libi3/mkdirp.c'\nendif\n\nlibi3 = static_library(\n  'i3',\n  libi3srcs,\n  include_directories: inc,\n  dependencies: [\n    pangocairo_dep,\n    config_h,\n  ],\n)\n\ni3srcs = [\n  'src/assignments.c',\n  'src/bindings.c',\n  'src/click.c',\n  'src/commands.c',\n  'src/commands_parser.c',\n  'src/con.c',\n  'src/config.c',\n  'src/config_directives.c',\n  'src/config_parser.c',\n  'src/display_version.c',\n  'src/drag.c',\n  'src/ewmh.c',\n  'src/fake_outputs.c',\n  'src/floating.c',\n  'src/handlers.c',\n  'src/ipc.c',\n  'src/key_press.c',\n  'src/load_layout.c',\n  'src/log.c',\n  'src/main.c',\n  'src/manage.c',\n  'src/match.c',\n  'src/move.c',\n  'src/output.c',\n  'src/randr.c',\n  'src/regex.c',\n  'src/render.c',\n  'src/resize.c',\n  'src/restore_layout.c',\n  'src/scratchpad.c',\n  'src/sd-daemon.c',\n  'src/sighandler.c',\n  'src/startup.c',\n  'src/sync.c',\n  'src/tiling_drag.c',\n  'src/tree.c',\n  'src/util.c',\n  'src/version.c',\n  'src/window.c',\n  'src/workspace.c',\n  'src/x.c',\n  'src/xcb.c',\n  'src/xcursor.c',\n  'src/xinerama.c',\n]\n\n# Verify the perl interpreter is present for running parser_gen,\n# ensuring a good error message when it isn’t:\nperl = find_program('perl')\nparser_gen = find_program('generate-command-parser.pl')\n\ncommand_parser = custom_target(\n  'command_parser',\n  input: 'parser-specs/commands.spec',\n  output: [\n    'GENERATED_command_enums.h',\n    'GENERATED_command_tokens.h',\n    'GENERATED_command_call.h',\n  ],\n  command: [perl, parser_gen, '--input=@INPUT@', '--prefix=command'],\n)\n\ni3srcs += command_parser\n\nconfig_parser = custom_target(\n  'config_parser',\n  input: 'parser-specs/config.spec',\n  output: [\n    'GENERATED_config_enums.h',\n    'GENERATED_config_tokens.h',\n    'GENERATED_config_call.h',\n  ],\n  command: [parser_gen, '--input=@INPUT@', '--prefix=config'],\n)\n\ni3srcs += config_parser\n\n# src/log.c uses threading primitives for synchronization\nthread_dep = dependency('threads')\n\ncommon_deps = [\n  thread_dep,\n  m_dep,\n  iconv_dep,\n  rt_dep,\n  libsn_dep,\n  xcb_dep,\n  xcb_xkb_dep,\n  xcb_xinerama_dep,\n  xcb_randr_dep,\n  xcb_shape_dep,\n  xcb_util_dep,\n  xcb_util_cursor_dep,\n  xcb_util_keysyms_dep,\n  xcb_util_wm_dep,\n  xcb_util_xrm_dep,\n  xkbcommon_dep,\n  xkbcommon_x11_dep,\n  yajl_dep,\n  libpcre_dep,\n  cairo_dep,\n  pangocairo_dep,\n  glib_dep,\n  gobject_dep,\n  ev_dep,\n  config_h,\n]\n\nexecutable(\n  'i3',\n  i3srcs,\n  install: true,\n  include_directories: inc,\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\n# This is the only currently working way of installing a symbolic link:\nmeson.add_install_script(\n  'meson/meson-install-i3-with-shmlog',\n  get_option('bindir'),\n)\n\nexecutable(\n  'i3bar',\n  [\n    'i3bar/src/child.c',\n    'i3bar/src/config.c',\n    'i3bar/src/ipc.c',\n    'i3bar/src/main.c',\n    'i3bar/src/mode.c',\n    'i3bar/src/outputs.c',\n    'i3bar/src/parse_json_header.c',\n    'i3bar/src/workspaces.c',\n    'i3bar/src/xcb.c',\n  ],\n  install: true,\n  include_directories: include_directories('include', 'i3bar/include'),\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'i3-config-wizard',\n  [\n    'i3-config-wizard/i3-config-wizard-atoms.xmacro.h',\n    'i3-config-wizard/main.c',\n    'i3-config-wizard/xcb.h',\n    config_parser,\n  ],\n  install: true,\n  include_directories: include_directories('include', 'i3-config-wizard'),\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'i3-dump-log',\n  'i3-dump-log/main.c',\n  install: true,\n  include_directories: inc,\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'i3-input',\n  [\n    'i3-input/i3-input.h',\n    'i3-input/keysym2ucs.h',\n    'i3-input/keysym2ucs.c',\n    'i3-input/main.c',\n  ],\n  install: true,\n  include_directories: inc,\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'i3-msg',\n  'i3-msg/main.c',\n  install: true,\n  include_directories: inc,\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'i3-nagbar',\n  [\n    'i3-nagbar/i3-nagbar-atoms.xmacro.h',\n    'i3-nagbar/main.c',\n  ],\n  install: true,\n  include_directories: include_directories('include', 'i3-nagbar'),\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\ninstall_data(\n  [\n    'i3-dmenu-desktop',\n    'i3-migrate-config-to-v4',\n    'i3-save-tree',\n    'i3-sensible-editor',\n    'i3-sensible-pager',\n    'i3-sensible-terminal',\n  ],\n  install_dir: 'bin',\n)\n\ninstall_subdir(\n  'etc',\n  strip_directory: true,\n  install_dir: join_paths(get_option('sysconfdir'), 'i3'),\n)\n\ninstall_subdir(\n  'share/',\n  strip_directory: true,\n  install_dir: get_option('datadir'),\n)\n\ninstall_headers(\n  'include/i3/ipc.h',\n  subdir: 'i3',\n)\n\n# We cannot use configure_file for complete-run.pl.in and i3test.pm.in\n# because configure_file strips the backslash in e.g. \\@display,\n# resulting in @display, breaking our Perl code:\n# https://github.com/mesonbuild/meson/issues/7165\nbash = find_program('bash')\nreplace_dirs = [\n  bash, '-c',  # Use bash to capture output and mark as executable\n  'sed -e \\'s,@abs_top_builddir@,'\n  + meson.current_build_dir()\n  + ',g;s,@abs_top_srcdir@,'\n  + meson.current_source_dir()+',g\\''\n  # Only mark files ending in .pl as executables\n  + ' \"$0\" > \"$1\" && { [[ \"${1##*.}\" == pl ]] && chmod +x \"$1\" || true; }',\n  '@INPUT0@',   # $0\n  '@OUTPUT0@',  # $1\n]\ncomplete_run = custom_target(\n  'complete-run',\n  input: ['testcases/complete-run.pl.in'],\n  output: ['complete-run.pl'],\n  command: replace_dirs,\n  # build this target when running e.g. ninja or ninja test.\n  # This is required for older meson versions (< 0.46.0).\n  build_by_default: true,\n)\ni3test_pm = custom_target(\n  'i3test-pm',\n  input: ['testcases/lib/i3test.pm.in'],\n  output: ['i3test.pm'],\n  command: replace_dirs,\n  # build this target when running e.g. ninja or ninja test.\n  # This is required for older meson versions (< 0.46.0).\n  build_by_default: true,\n)\n\nif get_option('docs')\n  i3_pod2html = find_program('docs/i3-pod2html')\n\n  custom_target(\n    'lib-i3test.html',\n    input: i3test_pm,\n    output: 'lib-i3test.html',\n    command: [\n      i3_pod2html,\n      '@INPUT@',\n      '@OUTPUT@',\n    ],\n    install: true,\n    install_dir: docdir,\n  )\n\n  custom_target(\n    'lib-i3test-test.html',\n    input: 'testcases/lib/i3test/Test.pm',\n    output: 'lib-i3test-test.html',\n    command: [\n      i3_pod2html,\n      '@INPUT@',\n      '@OUTPUT@',\n    ],\n    install: true,\n    install_dir: docdir,\n  )\nendif\n\nexecutable(\n  'test.inject_randr15',\n  'testcases/inject_randr1.5.c',\n  include_directories: inc,\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'test.commands_parser',\n  [\n    'src/commands_parser.c',\n    command_parser,\n  ],\n  include_directories: inc,\n  c_args: '-DTEST_PARSER',\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nexecutable(\n  'test.config_parser',\n  [\n    'src/config_parser.c',\n    config_parser,\n  ],\n  include_directories: inc,\n  c_args: '-DTEST_PARSER',\n  dependencies: common_deps,\n  link_with: libi3,\n)\n\nanyevent_i3 = custom_target(\n  'anyevent-i3',\n  # Should be AnyEvent-I3/blib/lib/AnyEvent/I3.pm,\n  # but see https://github.com/mesonbuild/meson/issues/2320\n  output: 'AnyEvent-I3.stamp',\n  command: [\n    'sh',\n    '-c',\n    'cp -r @0@/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'.format(meson.current_source_dir()),\n  ],\n)\n\nif meson.version().version_compare('>=0.46.0')\n  test(\n    'complete-run',\n    perl,\n    args: [complete_run],\n    depends: [\n      anyevent_i3,\n      i3test_pm,\n    ],\n    timeout: 120,  # Default of 30 seconds can cause timeouts on slower machines\n  )\nelse\n  # meson < 0.46.0 does not support the depends arg in test targets.\n  # Just hope for the best.\n  test(\n    'complete-run',\n    perl,\n    args: [complete_run],\n  )\n  message('meson < 0.46 detected, you might need to run ninja test twice')\nendif\n"
        },
        {
          "name": "meson",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 0.4189453125,
          "content": "# -*- mode: meson -*-\n\noption('docs', type: 'boolean', value: false,\n       description: 'Build documentation from source (release tarballs contain a generated copy)')\n\noption('mans', type: 'boolean', value: false,\n       description: 'Build manpages from source (release tarballs contain a generated copy)')\n\noption('docdir', type: 'string', value: '',\n       description: 'documentation directory (default: $datadir/docs/i3)')\n"
        },
        {
          "name": "parser-specs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pseudo-doc.doxygen",
          "type": "blob",
          "size": 4.8916015625,
          "content": "# Doxyfile 1.5.6\n#\n# You can use this file with doxygen to create a pseudo-documentation\n# automatically from source. doxygen-comments are not used very extensively\n# in i3, mostly for the reason that it clutters the source code and has no\n# real use (doxygen’s output looks really ugly).\n#\n# So, if you want to use it, here you go. This is however not a supported\n# document, and I recommend you have a look at the docs/ folder or at\n# https://i3wm.org/ for more, real documentation.\n#\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\nDOXYFILE_ENCODING      = UTF-8\nPROJECT_NAME           = i3\nPROJECT_NUMBER         = \nOUTPUT_DIRECTORY       = pseudo-doc\nOUTPUT_LANGUAGE        = English\nBRIEF_MEMBER_DESC      = YES\nREPEAT_BRIEF           = YES\nALWAYS_DETAILED_SEC    = YES\nFULL_PATH_NAMES        = YES\nSHORT_NAMES            = YES\nJAVADOC_AUTOBRIEF      = YES\nTAB_SIZE               = 8\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\nEXTRACT_ALL            = YES\nEXTRACT_PRIVATE        = NO\nEXTRACT_STATIC         = YES\nEXTRACT_LOCAL_CLASSES  = YES\nCASE_SENSE_NAMES       = YES\nSHOW_INCLUDE_FILES     = YES\nSORT_MEMBER_DOCS       = YES\nSORT_BRIEF_DOCS        = NO\nSORT_GROUP_NAMES       = NO\nSORT_BY_SCOPE_NAME     = NO\nSHOW_USED_FILES        = YES\nSHOW_FILES             = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\nQUIET                  = NO\nWARNINGS               = YES\nWARN_IF_UNDOCUMENTED   = YES\nWARN_IF_DOC_ERROR      = YES\nWARN_NO_PARAMDOC       = NO\nWARN_FORMAT            = \"$file:$line: $text\"\nWARN_LOGFILE           = \n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\nINPUT                  = src include\nINPUT_ENCODING         = UTF-8\nRECURSIVE              = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\nSOURCE_BROWSER         = YES\nINLINE_SOURCES         = NO\n\nSTRIP_CODE_COMMENTS    = YES\n\nREFERENCED_BY_RELATION = YES\nREFERENCES_RELATION    = YES\nREFERENCES_LINK_SOURCE = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\nALPHABETICAL_INDEX     = NO\nCOLS_IN_ALPHA_INDEX    = 5\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\nGENERATE_HTML          = YES\nHTML_OUTPUT            = html\nHTML_FILE_EXTENSION    = .html\nHTML_ALIGN_MEMBERS     = YES\nHTML_DYNAMIC_SECTIONS  = NO\nFORMULA_FONTSIZE       = 10\n\nGENERATE_LATEX         = NO\nGENERATE_RTF           = NO\nGENERATE_MAN           = NO\nGENERATE_XML           = NO\nGENERATE_AUTOGEN_DEF   = NO\nGENERATE_PERLMOD       = NO\n\nENABLE_PREPROCESSING   = YES\nMACRO_EXPANSION        = NO\nEXPAND_ONLY_PREDEF     = NO\nSEARCH_INCLUDES        = YES\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to external references   \n#---------------------------------------------------------------------------\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool   \n#---------------------------------------------------------------------------\n\nCLASS_DIAGRAMS         = YES\nHAVE_DOT               = YES\nDOT_FONTNAME           = FreeSans\nDOT_FONTPATH           = \nCLASS_GRAPH            = YES\nCOLLABORATION_GRAPH    = YES\nGROUP_GRAPHS           = YES\nUML_LOOK               = NO\nINCLUDE_GRAPH          = YES\nINCLUDED_BY_GRAPH      = YES\nCALL_GRAPH             = YES\nCALLER_GRAPH           = NO\nGRAPHICAL_HIERARCHY    = YES\nDIRECTORY_GRAPH        = YES\nDOT_IMAGE_FORMAT       = png\nDOT_GRAPH_MAX_NODES    = 50\nMAX_DOT_GRAPH_DEPTH    = 0\nDOT_TRANSPARENT        = YES\nDOT_MULTI_TARGETS      = NO\nGENERATE_LEGEND        = YES\nDOT_CLEANUP            = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to the search engine   \n#---------------------------------------------------------------------------\n\nSEARCHENGINE           = NO\n"
        },
        {
          "name": "release-notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 8.8740234375,
          "content": "#!/bin/zsh\n# This script is used to prepare a new release of i3.\n\nset -eu\n\nexport RELEASE_VERSION=\"4.21\"\nexport PREVIOUS_VERSION=\"4.20.1\"\nexport RELEASE_BRANCH=\"next\"\n\nif [ ! -e \"../i3.github.io\" ]\nthen\n\techo \"../i3.github.io does not exist.\"\n\techo \"Use git clone https://github.com/i3/i3.github.io\"\n\texit 1\nfi\n\nif ! (cd ../i3.github.io && git pull)\nthen\n\techo \"Could not update ../i3.github.io repository\"\n\texit 1\nfi\n\nif git diff-files --quiet --exit-code debian/changelog\nthen\n\techo \"Expected debian/changelog to be changed (containing the changelog for ${RELEASE_VERSION}).\"\n\texit 1\nfi\n\nif [ ! -e \"RELEASE-NOTES-${RELEASE_VERSION}\" ]\nthen\n\techo \"RELEASE-NOTES-${RELEASE_VERSION} not found. Here is the output from the generator:\"\n\t./release-notes/generator.pl --print-urls\n\texit 1\nfi\n\neval $(gpg-agent --daemon)\nexport GPG_AGENT_INFO\n\n################################################################################\n# Section 1: update git and build the release tarball\n################################################################################\n\nSTARTDIR=$PWD\n\nTMPDIR=$(mktemp -d)\ncd $TMPDIR\nif ! wget https://i3wm.org/downloads/i3-${PREVIOUS_VERSION}.tar.xz; then\n\techo \"Could not download i3-${PREVIOUS_VERSION}.tar.xz (required for comparing files).\"\n\texit 1\nfi\ngit clone --quiet --branch \"${RELEASE_BRANCH}\" https://github.com/i3/i3\ncd i3\nif [ ! -e \"${STARTDIR}/RELEASE-NOTES-${RELEASE_VERSION}\" ]; then\n\techo \"Required file RELEASE-NOTES-${RELEASE_VERSION} not found.\"\n\texit 1\nfi\ngit checkout -b release-${RELEASE_VERSION}\ngit rm RELEASE-NOTES-*\ncp \"${STARTDIR}/RELEASE-NOTES-${RELEASE_VERSION}\" \"RELEASE-NOTES-${RELEASE_VERSION}\"\ngit add RELEASE-NOTES-${RELEASE_VERSION}\n# Update the release version:\nsed -i \"s/^\\s*version: '4.[^']*'/  version: '${RELEASE_VERSION}'/\" meson.build\ncp meson.build \"${TMPDIR}/meson.build\"\n# Inject the release date into meson.build for the dist tarball:\nsed -i \"s/'-non-git'/' ($(date +'%Y-%m-%d'))'/\" meson.build\ngit commit -a -m \"release i3 ${RELEASE_VERSION}\"\ngit tag \"${RELEASE_VERSION}\" -m \"release i3 ${RELEASE_VERSION}\" --sign --local-user=0x4AC8EE1D\n\nmkdir build\n(cd build && meson .. && ninja dist)\ncp build/meson-dist/i3-${RELEASE_VERSION}.tar.xz .\n\necho \"Differences in the release tarball file lists:\"\n\ndiff --color -u \\\n\t<(tar tf ../i3-${PREVIOUS_VERSION}.tar.* | sed \"s,i3-${PREVIOUS_VERSION}/,,g\" | sort) \\\n\t<(tar tf    i3-${RELEASE_VERSION}.tar.xz  | sed \"s,i3-${RELEASE_VERSION}/,,g\"  | sort) || true\n\ngpg --armor -b i3-${RELEASE_VERSION}.tar.xz\n\nmv \"${TMPDIR}/meson.build\" .\ngit add meson.build\ngit commit -a -m \"Restore non-git version suffix\"\n\nif [ \"${RELEASE_BRANCH}\" = \"stable\" ]; then\n\tgit checkout stable\n\tgit merge --no-ff release-${RELEASE_VERSION} -m \"Merge branch 'release-${RELEASE_VERSION}'\"\n\tgit checkout next\n\tgit merge --no-ff -s recursive -X ours -X no-renames stable -m \"Merge branch 'stable' into next\"\nelse\n\tgit checkout next\n\tgit merge --no-ff release-${RELEASE_VERSION} -m \"Merge branch 'release-${RELEASE_VERSION}'\"\n\tgit checkout stable\n\tgit merge --no-ff -s recursive -X theirs -X no-renames next -m \"Merge branch 'next' into stable\"\nfi\n\ngit remote remove origin\ngit remote add origin git@github.com:i3/i3.git\ngit config --add remote.origin.push \"+refs/tags/*:refs/tags/*\"\ngit config --add remote.origin.push \"+refs/heads/next:refs/heads/next\"\ngit config --add remote.origin.push \"+refs/heads/stable:refs/heads/stable\"\n\n################################################################################\n# Section 2: Debian packaging (for QA)\n################################################################################\n\ncd \"${TMPDIR}\"\nmkdir debian\n\n# Copy over the changelog because we expect it to be locally modified in the\n# start directory.\ncp \"${STARTDIR}/debian/changelog\" i3/debian/changelog\n(cd i3 && git add debian/changelog && git commit -m 'Update debian/changelog')\n\ncat > ${TMPDIR}/Dockerfile <<EOT\nFROM debian:sid\nRUN echo deb-src http://deb.debian.org/debian sid main > /etc/apt/sources.list\nRUN apt-get update && apt-get install -y dpkg-dev devscripts\nCOPY i3/i3-${RELEASE_VERSION}.tar.xz /usr/src/i3-wm_${RELEASE_VERSION}.orig.tar.xz\nWORKDIR /usr/src/\nRUN tar xf i3-wm_${RELEASE_VERSION}.orig.tar.xz\nWORKDIR /usr/src/i3-${RELEASE_VERSION}\nCOPY i3/debian /usr/src/i3-${RELEASE_VERSION}/debian/\nRUN mkdir debian/source\nRUN echo '3.0 (quilt)' > debian/source/format\nWORKDIR /usr/src\nRUN mk-build-deps --install --remove --tool 'apt-get --no-install-recommends -y' i3-${RELEASE_VERSION}/debian/control\nWORKDIR /usr/src/i3-${RELEASE_VERSION}\nRUN dpkg-buildpackage -sa -j8\nRUN dpkg-buildpackage -S -sa -j8\nEOT\n\nCONTAINER_NAME=$(echo \"i3-${TMPDIR}\" | sed 's,/,,g')\ndocker build --no-cache -t i3 .\nfor file in $(docker run --name \"${CONTAINER_NAME}\" i3 /bin/sh -c \"ls /usr/src/i3*_${RELEASE_VERSION}*\")\ndo\n\tdocker cp \"${CONTAINER_NAME}:${file}\" ${TMPDIR}/debian/\ndone\n\necho \"Content of resulting package’s .changes file:\"\ncat ${TMPDIR}/debian/*.changes\n\n# TODO: docker cleanup\n\n################################################################################\n# Section 3: website\n################################################################################\n\n# Ensure we are in the correct branch for copying the docs.\ncd ${TMPDIR}/i3\ngit checkout ${RELEASE_BRANCH}\n\ncd ${TMPDIR}\ngit clone --quiet ${STARTDIR}/../i3.github.io\ncd i3.github.io\n\nmkdir docs/${PREVIOUS_VERSION}\ntar cf - '--exclude=[0-9]\\.[0-9e]*' docs | tar xf - --strip-components=1 -C docs/${PREVIOUS_VERSION}\ngit add docs/${PREVIOUS_VERSION}\ngit commit -a -m \"save docs for ${PREVIOUS_VERSION}\"\n\ncp ${TMPDIR}/i3/i3-${RELEASE_VERSION}.tar.xz* downloads/\ngit add downloads/i3-${RELEASE_VERSION}.tar.xz*\ncp ${TMPDIR}/i3/RELEASE-NOTES-${RELEASE_VERSION} downloads/RELEASE-NOTES-${RELEASE_VERSION}.txt\ngit add downloads/RELEASE-NOTES-${RELEASE_VERSION}.txt\nsed -i \"s,<h2>Documentation for i3 v[^<]*</h2>,<h2>Documentation for i3 v${RELEASE_VERSION}</h2>,g\" docs/index.html\nsed -i \"s,\\(span class=\\\"version\\\">\\)[^<]*\\(</span>\\),\\1${RELEASE_VERSION}\\2,g\" index.html\nsed -i \"s,The current stable version is .*$,The current stable version is ${RELEASE_VERSION}.,g\" downloads/index.html\nsed -i \"s,<tbody>,<tbody>\\n  <tr>\\n    <td>${RELEASE_VERSION}</td>\\n    <td><a href=\\\"/downloads/i3-${RELEASE_VERSION}.tar.xz\\\">i3-${RELEASE_VERSION}.tar.xz</a></td>\\n    <td>$(LC_ALL=en_US.UTF-8 ls -lh ../i3/i3-${RELEASE_VERSION}.tar.xz | awk -F \" \" {'print $5'} | sed 's/K$/ KiB/g' | sed 's/M$/ MiB/g')</td>\\n    <td><a href=\\\"/downloads/i3-${RELEASE_VERSION}.tar.xz.asc\\\">signature</a></td>\\n    <td>$(date +'%Y-%m-%d')</td>\\n    <td><a href=\\\"/downloads/RELEASE-NOTES-${RELEASE_VERSION}.txt\\\">release notes</a></td>\\n  </tr>\\n,g\" downloads/index.html\n\ngit commit -a -m \"add ${RELEASE_VERSION} release\"\n\nfor i in $(find _docs -maxdepth 1 -and -type f -and \\! -regex \".*\\.\\(html\\|man\\)$\" -and \\! -name \"Makefile\")\ndo\n\tbase=\"$(basename $i)\"\n\t[ -e \"${TMPDIR}/i3/docs/${base}\" ] && cp \"${TMPDIR}/i3/docs/${base}\" \"_docs/${base}\"\ndone\n\nsed -i \"s,Verify you are using i3 ≥ .*,Verify you are using i3 ≥ ${RELEASE_VERSION},g\" _docs/debugging\n\n(cd _docs && make)\n\nfor i in $(find _docs -maxdepth 1 -and -type f -and \\! -regex \".*\\.\\(html\\|man\\|css\\)$\" -and \\! -name \"Makefile\")\ndo\n\tbase=\"$(basename $i)\"\n\t[ -e \"${TMPDIR}/i3/docs/${base}\" ] && cp \"_docs/${base}.html\" docs/\ndone\n\ngit commit -a -m \"update docs for ${RELEASE_VERSION}\"\n\ngit remote remove origin\ngit remote add origin git@github.com:i3/i3.github.io.git\ngit config --add remote.origin.push \"+refs/heads/main:refs/heads/main\"\n\n################################################################################\n# Section 4: prepare release announcement email\n################################################################################\n\ncd ${TMPDIR}\ncat >email.txt <<EOT\nFrom: Michael Stapelberg <michael@i3wm.org>\nTo: i3-announce@freelists.org\nSubject: i3 v${RELEASE_VERSION} released\nContent-Type: text/plain; charset=utf-8\nContent-Transfer-Encoding: 8bit\n\nHi,\n\nI just released i3 v${RELEASE_VERSION}. Release notes follow:\nEOT\ncat ${TMPDIR}/i3/RELEASE-NOTES-${RELEASE_VERSION} >>email.txt\n\n################################################################################\n# Section 5: final push instructions\n################################################################################\n\necho \"As a final sanity check, install the debian package and see whether i3 works.\"\n\necho \"When satisfied, run:\"\necho \"  cd ${TMPDIR}/i3\"\necho \"  git checkout next\"\necho \"  vi debian/changelog\"\necho \"  git commit -a -m \\\"debian: update changelog\\\"\"\necho \"  git push\"\necho \"\"\necho \"  cd ${TMPDIR}/i3.github.io\"\necho \"  git push\"\necho \"\"\necho \"  cd ${TMPDIR}\"\necho \"  sendmail -t < email.txt\"\necho \"\"\necho \"Update milestones on GitHub (only for new major versions):\"\necho \"  Set due date of ${RELEASE_VERSION} to $(date +'%Y-%m-%d') and close the milestone\"\necho \"  Create milestone for the next major version with unset due date\"\necho \"\"\necho \"Announce on:\"\necho \"  twitter\"\necho \"  #i3 topic\"\necho \"  reddit /r/i3wm (link post to changelog)\"\necho \"  GitHub Discussions → Announcements\"\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testcases",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}