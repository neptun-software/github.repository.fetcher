{
  "metadata": {
    "timestamp": 1736710261059,
    "page": 18,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eclipse-mosquitto/mosquitto",
      "stars": 9298,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4912109375,
          "content": "# .gitignore\n*.db\n*.gcda\n*.gcno\n*.exe\n*.o\n*.old\n*.pyc\n*.so\n*.vglog\ncallgrind.out.*\ndhat.out.*\nmassif.out.*\nvglog*\n\nc/*.test\ncpp/*.test\n\napps/db_dump/mosquitto_db_dump\napps/mosquitto_ctrl/mosquitto_ctrl\napps/mosquitto_passwd/mosquitto_passwd\n\nbuild/\nbuild64/\n\nclient/mosquitto_pub\nclient/mosquitto_rr\nclient/mosquitto_sub\nclient/testing\nclient/testing.c\n\ncov-int/\n\ndist/\n\ndocker/local/mosq.tar.gz\n\nexamples/mysql_log/mosquitto_mysql_log\nexamples/temperature_conversion/mqtt_temperature_conversion\n\nlib/cpp/libmosquittopp.so*\nlib/cpp/libmosquittopp.a\nlib/libmosquitto.so*\nlib/libmosquitto.a\n\nman/mosquitto.8\nman/mosquitto-tls.7\nman/mosquitto.conf.5\nman/libmosquitto.3\nman/mosquitto_ctrl.1\nman/mosquitto_ctrl_dynsec.1\nman/mosquitto_passwd.1\nman/mosquitto_pub.1\nman/mosquitto_rr.1\nman/mosquitto_sub.1\nman/mqtt.7\n\nout/\n\nsrc/mosquitto\n\ntest/broker/broker.pid\ntest/test_client\ntest/fake_user\ntest/msgsps_pub\ntest/msgsps_sub\ntest/msgsps_pub.dat\ntest/msgsps_sub.dat\ntest/broker/c/auth_plugin.so\ntest/broker/c/*.test\n\ntest/ssl/*.csr\ntest/ssl/rootCA/\ntest/ssl/signingCA/\n\ntest/lib/c/*.test\ntest/lib/cpp/*.test\n\ntest/unit/bridge_topic_test\ntest/unit/coverage.info\ntest/unit/mosq_test\ntest/unit/persist_read_test\ntest/unit/persist_write_test\ntest/unit/subs_test\ntest/unit/tls_test\ntest/unit/out/\n\nwww/cache/\n__pycache__\n\n# Debian generated files\ndebian/.debhelper/\ndebian/debhelper-build-stamp\ndebian/files\ndebian/*.log\ndebian/*.substvars\ndebian/*mosquitto*/\ndebian/*.debhelper\ndebian/tmp/\nobj-*/\n\n# Emacs generated files\n*~\n\n# Others\ntmp/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.2353515625,
          "content": "language: c\ncompiler:\n  - gcc\n  - clang\n\nos:\n  - linux\n  - osx\n\ndist:\n  - bionic\n\nsudo: true\n\nenv:\n  global:\n    # COVERITY_SCAN_TOKEN\n    - secure: \"j58a3zOmHbWvKOfBaR2WJAU0Lz95M0u3Ji9NUn0Gj+v91z/vd0COF8dR6QO03V9fDms44ghBiUOblgfb8z/GFOaagn2FoHUrSka/Sju+gIFejgeSqwyxL3CjcX69M1f/npiePQDDtD5mb4dZTDZ4Nl3BpTqg+Qtar9/S/7LoheecWdd6kFDDMr+0yx3/nibwbC0+tpXftiB62tgaGwABQBvfQbgBXUxJ+0zaKXORiKmhwnEC15Bub0WmBhmZxahzlDMU2cEzxKVQbYrcf0TqZpbPhN7H42d3ssQJ3ogbqJmptZpoRdv9de6G0Hzq5QDLjkQxd+3z4hxRqOPzICoawkljQ6CF/JOSlqRXTP0/272MBHzgancQpQhO5yfB3eV4OFldQAdtIKHV04jQ9uSPYOi48To//HGOG8GOp6jFMrpKs6T6P8UiB+GTe57GjBdQI5uqZiEBMdc5MNaqDDoskdr+jTsnGJg6uY9ARrap3WFFEWiaTbe/wbE7+o0isb79PmgBzFLpcwpBFgfyQUiDb+e8S2d3ugKeIVlsSlrF7ZTXC40Y+qVwGzvf/RSM3+c9N/ikFmrLdzn0rBrwna4t3vPrBoU1seoCAZu5hwAU0+xNCN4P9M1s4tOnrG7Lq5URqkP0n9gTXvI8rQ7dDJibjP+5RoZUOd1XPkHbyN4Kseg=\"\n\nscript:\n  - ./travis-configure.sh\n  - if [[ \"$COVERITY_SCAN_BRANCH\" != 1 ]]; then make ; make test ; fi\n\nbefore_install:\n  - ./travis-install.sh\n\n\naddons:\n  coverity_scan:\n    project:\n      name: \"eclipse/mosquitto\"\n      description: \"Build submitted via Travis CI\"\n    notification_email: roger@atchoo.org\n    build_command_prepend: ./travis-configure.sh\n    build_command: \"make binary -j 4\"\n    branch_pattern: coverity-.*\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.4326171875,
          "content": "# This is a cmake script. Process it with the CMake gui or command line utility\n# to produce makefiles / Visual Studio project files on Mac OS X and Windows.\n#\n# To configure the build options either use the CMake gui, or run the command\n# line utility including the \"-i\" option.\n\ncmake_minimum_required(VERSION 3.5)\ncmake_policy(SET CMP0042 NEW)\n\nproject(mosquitto)\nset (VERSION 2.0.20)\n\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake/\")\n\nadd_definitions (-DCMAKE -DVERSION=\\\"${VERSION}\\\")\n\nif (WIN32)\n\tadd_definitions(\"-D_CRT_SECURE_NO_WARNINGS\")\n\tadd_definitions(\"-D_CRT_NONSTDC_NO_DEPRECATE\")\nendif (WIN32)\n\nif(APPLE)\n        set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup\")\nendif(APPLE)\n\ninclude(GNUInstallDirs)\n\noption(WITH_BUNDLED_DEPS \"Build with bundled dependencies?\" ON)\noption(WITH_TLS\n\t\"Include SSL/TLS support?\" ON)\noption(WITH_TLS_PSK\n\t\"Include TLS-PSK support (requires WITH_TLS)?\" ON)\noption(WITH_EC\n\t\"Include Elliptic Curve support (requires WITH_TLS)?\" ON)\nif (WITH_TLS)\n\tfind_package(OpenSSL REQUIRED)\n\tadd_definitions(\"-DWITH_TLS\")\n\n\t# mosquitto uses OpenSSL 1.1 API, so set OPENSSL_API_COMPAT accordingly:\n\t# https://www.openssl.org/docs/manmaster/man7/OPENSSL_API_COMPAT.html\n\t# TODO: migrate off ENGINE API (deprecated since OpenSSL 3.0), see:\n\t#       https://www.openssl.org/docs/manmaster/man7/migration_guide.html#Engines-and-METHOD-APIs\n\tadd_definitions(\"-DOPENSSL_API_COMPAT=0x10100000L\")\n\n\tif (WITH_TLS_PSK)\n\t\tadd_definitions(\"-DWITH_TLS_PSK\")\n\tendif (WITH_TLS_PSK)\n\n\tif (WITH_EC)\n\t\tadd_definitions(\"-DWITH_EC\")\n\tendif (WITH_EC)\nelse (WITH_TLS)\n\tset (OPENSSL_INCLUDE_DIR \"\")\nendif (WITH_TLS)\n\n\noption(WITH_UNIX_SOCKETS \"Include Unix Domain Socket support?\" ON)\nif (WITH_UNIX_SOCKETS AND NOT WIN32)\n\tadd_definitions(\"-DWITH_UNIX_SOCKETS\")\nendif (WITH_UNIX_SOCKETS AND NOT WIN32)\n\noption(WITH_SOCKS \"Include SOCKS5 support?\" ON)\nif (WITH_SOCKS)\n\tadd_definitions(\"-DWITH_SOCKS\")\nendif (WITH_SOCKS)\n\noption(WITH_SRV \"Include SRV lookup support?\" OFF)\n\noption(WITH_STATIC_LIBRARIES \"Build static versions of the libmosquitto/pp libraries?\" OFF)\noption(WITH_PIC \"Build the static library with PIC (Position Independent Code) enabled archives?\" OFF)\n\noption(WITH_THREADING \"Include client library threading support?\" ON)\nif (WITH_THREADING)\n\tadd_definitions(\"-DWITH_THREADING\")\n\tif(WIN32)\n\t\tfind_package(Pthreads4W REQUIRED)\n\tendif()\nendif (WITH_THREADING)\n\noption(WITH_DLT \"Include DLT support?\" OFF)\nmessage(STATUS \"WITH_DLT = ${WITH_DLT}\")\nif (WITH_DLT)\n\t#find_package(DLT REQUIRED)\n\tfind_package(PkgConfig)\n\tpkg_check_modules(DLT \"automotive-dlt >= 2.11\")\n\tadd_definitions(\"-DWITH_DLT\")\nendif (WITH_DLT)\n\noption(WITH_CJSON \"Build with cJSON support (required for dynamic security plugin and useful for mosquitto_sub)?\" ON)\nif (WITH_CJSON)\n    FIND_PACKAGE(cJSON)\n    if (CJSON_FOUND)\n\t    message(STATUS ${CJSON_FOUND})\n    else (CJSON_FOUND)\n\t    message(STATUS \"Optional dependency cJSON not found. Some features will be disabled.\")\n    endif(CJSON_FOUND)\nendif()\n\n# ========================================\n# Include projects\n# ========================================\n\noption(WITH_CLIENTS \"Build clients?\" ON)\noption(WITH_BROKER \"Build broker?\" ON)\noption(WITH_APPS \"Build apps?\" ON)\noption(WITH_PLUGINS \"Build plugins?\" ON)\noption(DOCUMENTATION \"Build documentation?\" ON)\n\nadd_subdirectory(lib)\nif (WITH_CLIENTS)\n\tadd_subdirectory(client)\nendif (WITH_CLIENTS)\n\nif (WITH_BROKER)\n\tadd_subdirectory(src)\nendif (WITH_BROKER)\n\nif (WITH_APPS)\n\tadd_subdirectory(apps)\nendif (WITH_APPS)\n\nif (WITH_PLUGINS)\n\tadd_subdirectory(plugins)\nendif (WITH_PLUGINS)\n\nif (DOCUMENTATION)\n\tadd_subdirectory(man)\nendif (DOCUMENTATION)\n\n# ========================================\n# Install config file\n# ========================================\n\nif (WITH_BROKER)\n\tinstall(FILES mosquitto.conf aclfile.example pskfile.example pwfile.example DESTINATION \"${CMAKE_INSTALL_SYSCONFDIR}/mosquitto\")\nendif (WITH_BROKER)\n\n# ========================================\n# Install pkg-config files\n# ========================================\n\nconfigure_file(libmosquitto.pc.in libmosquitto.pc @ONLY)\ninstall(FILES \"${CMAKE_CURRENT_BINARY_DIR}/libmosquitto.pc\" DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig\")\nconfigure_file(libmosquittopp.pc.in libmosquittopp.pc @ONLY)\ninstall(FILES \"${CMAKE_CURRENT_BINARY_DIR}/libmosquittopp.pc\" DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig\")\n\n# ========================================\n# Testing\n# ========================================\nenable_testing()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.822265625,
          "content": "Contributing to Mosquitto\n=========================\n\nThank you for your interest in this project.\n\nProject description:\n--------------------\n\nThe Mosquitto project has been created to provide a light weight, open-source\nimplementation, of an MQTT broker to allow new, existing, and emerging\napplications for Machine-to-Machine (M2M) and Internet of Things (IoT).\n\n- <https://mosquitto.org/>\n- <https://projects.eclipse.org/projects/iot.mosquitto>\n\n\nSource\n------\n\nThe Mosquitto code is stored in a git repository.\n\n- https://github.com/eclipse/mosquitto\n\nYou can contribute bugfixes and new features by sending pull requests through GitHub.\n\n\n## Legal\n\nIn order for your contribution to be accepted, it must comply with the Eclipse\nFoundation IP policy.\n\nPlease read the [Eclipse Foundation policy on accepting contributions via Git](http://wiki.eclipse.org/Development_Resources/Contributing_via_Git).\n\n1. Sign the [Eclipse ECA](http://www.eclipse.org/legal/ECA.php)\n    1. Register for an Eclipse Foundation User ID. You can register [here](https://accounts.eclipse.org/user/register).\n    2. Log into the [Accounts Portal](https://accounts.eclipse.org/), and click on the '[Eclipse Contributor Agreement](https://accounts.eclipse.org/user/eca)' link.\n2. Go to your [account settings](https://accounts.eclipse.org/user/edit) and add your GitHub username to your account.\n3. Make sure that you _sign-off_ your Git commits in the following format:\n  ``` Signed-off-by: John Smith <johnsmith@nowhere.com> ``` This is usually at the bottom of the commit message. You can automate this by adding the '-s' flag when you make the commits. e.g.   ```git commit -s -m \"Adding a cool feature\"```\n4. Ensure that the email address that you make your commits with is the same one you used to sign up to the Eclipse Foundation website with.\n\n## Contributing a change\n\n1. [Fork the repository on GitHub](https://github.com/eclipse/mosquitto/fork)\n2. Clone the forked repository onto your computer: ``` git clone\n   https://github.com/<your username>/mosquitto.git ```\n3. If you are adding a new feature, then create a new branch from the latest\n   ```develop``` branch with ```git checkout -b YOUR_BRANCH_NAME\n   origin/develop```\n4. If you are fixing a bug, then create a new branch from the latest\n   ```fixes``` branch with ```git checkout -b YOUR_BRANCH_NAME origin/fixes```\n5. Make your changes\n6. Ensure that all new and existing tests pass.\n7. Commit the changes into the branch: ``` git commit -s ``` Make sure that\n   your commit message is meaningful and describes your changes correctly.\n8. If you have a lot of commits for the change, squash them into a single / few\n   commits.\n9. Push the changes in your branch to your forked repository.\n10. Finally, go to\n\t[https://github.com/eclipse/mosquitto](https://github.com/eclipse/mosquitto)\n\tand create a pull request from your \"YOUR_BRANCH_NAME\" branch to the\n\t```develop``` or ```fixes``` branch as appropriate to request review and\n\tmerge of the commits in your pushed branch.\n\n\nWhat happens next depends on the content of the patch. If it is 100% authored\nby the contributor and is less than 1000 lines (and meets the needs of the\nproject), then it can be pulled into the main repository. If not, more steps\nare required. These are detailed in the\n[legal process poster](http://www.eclipse.org/legal/EclipseLegalProcessPoster.pdf).\n\n\n\nContact:\n--------\n\nContact the project developers via the project's development\n[mailing list](https://dev.eclipse.org/mailman/listinfo/mosquitto-dev).\n\nSearch for bugs:\n----------------\n\nThis project uses [Github](https://github.com/eclipse/mosquitto/issues)\nto track ongoing development and issues.\n\nCreate a new bug:\n-----------------\n\nBe sure to search for existing bugs before you create another one. Remember\nthat contributions are always welcome!\n\n- [Create new Mosquitto bug](https://github.com/eclipse/mosquitto/issues)\n"
        },
        {
          "name": "ChangeLog.txt",
          "type": "blob",
          "size": 137.0107421875,
          "content": "2.0.20 - 2024-10-16\n===================\n\nBroker:\n- Fix QoS 1 / QoS 2 publish incorrectly returning \"no subscribers\".\n  Closes #3128.\n- Open files with appropriate access on Windows. Closes #3119.\n- Don't allow invalid response topic values.\n- Fix some strict protocol compliance issues. Closes #3052.\n\nClient library:\n- Fix cmake build on OS X. Closes #3125.\n\nBuild:\n- Fix build on NetBSD\n\n\n2.0.19 - 2024-10-02\n===================\n\nSecurity:\n- Fix mismatched subscribe/unsubscribe with normal/shared topics.\n- Fix crash on bridge using remapped topic being sent a crafted packet.\n\nBroker:\n- Fix assert failure when loading a persistence file that contains\n  subscriptions with no client id.\n- Fix local bridges being incorrectly expired when\n  persistent_client_expiration is in use.\n- Fix use of CLOCK_BOOTTIME for getting time. Closes #3089.\n- Fix mismatched subscribe/unsubscribe with normal/shared topics.\n- Fix crash on bridge using remapped topic being sent a crafted packet.\n\nClient library:\n- Fix some error codes being converted to string as \"unknown\". Closes #2579.\n- Clear SSL error state to avoid spurious error reporting. Closes #3054.\n- Fix \"payload format invalid\" not being allowed as a PUBREC reason code.\n- Don't allow SUBACK with missing reason codes.\n\nBuild:\n- Thread support is re-enabled on Windows.\n\n\n2.0.18 - 2023-09-18\n===================\n\nBroker:\n- Fix crash on subscribe under certain unlikely conditions. Closes #2885.\n  Closes #2881.\n\nClients:\n- Fix mosquitto_rr not honouring `-R`. Closes #2893.\n\nWindows:\n- Installer will start/stop the mosquitto service when installing and\n  uninstalling, to prevent problems with not being able to overwrite or remove\n  mosquitto.exe.\n\n\n2.0.17 - 2023-08-22\n===================\n\nBroker:\n- Fix `max_queued_messages 0` stopping clients from receiving messages.\n  Closes #2879.\n- Fix `max_inflight_messages` not being set correctly. Closes #2876.\n\nApps:\n- Fix `mosquitto_passwd -U` backup file creation. Closes #2873.\n\n\n2.0.16 - 2023-08-16\n===================\n\nSecurity:\n- CVE-2023-28366: Fix memory leak in broker when clients send multiple QoS 2\n  messages with the same message ID, but then never respond to the PUBREC\n  commands.\n- CVE-2023-0809: Fix excessive memory being allocated based on malicious\n  initial packets that are not CONNECT packets.\n- CVE-2023-3592: Fix memory leak when clients send v5 CONNECT packets with a\n  will message that contains invalid property types.\n- Broker will now reject Will messages that attempt to publish to $CONTROL/.\n- Broker now validates usernames provided in a TLS certificate or TLS-PSK\n  identity are valid UTF-8.\n- Fix potential crash when loading invalid persistence file.\n- Library will no longer allow single level wildcard certificates, e.g. *.com\n\nBroker:\n- Fix $SYS messages being expired after 60 seconds and hence unchanged values\n  disappearing.\n- Fix some retained topic memory not being cleared immediately after used.\n- Fix error handling related to the `bind_interface` option.\n- Fix std* files not being redirected when daemonising, when built with\n  assertions removed. Closes #2708.\n- Fix default settings incorrectly allowing TLS v1.1. Closes #2722.\n- Use line buffered mode for stdout. Closes #2354. Closes #2749.\n- Fix bridges with non-matching cleansession/local_cleansession being expired\n  on start after restoring from persistence. Closes #2634.\n- Fix connections being limited to 2048 on Windows. The limit is now 8192,\n  where supported. Closes #2732.\n- Broker will log warnings if sensitive files are world readable/writable, or\n  if the owner/group is not the same as the user/group the broker is running\n  as. In future versions the broker will refuse to open these files.\n- mosquitto_memcmp_const is now more constant time.\n- Only register with DLT if DLT logging is enabled.\n- Fix any possible case where a json string might be incorrectly loaded. This\n  could have caused a crash if a textname or textdescription field of a role was\n  not a string, when loading the dynsec config from file only.\n- Dynsec plugin will not allow duplicate clients/groups/roles when loading\n  config from file, which matches the behaviour for when creating them.\n- Fix heap overflow when reading corrupt config with \"log_dest file\".\n\nClient library:\n- Use CLOCK_BOOTTIME when available, to keep track of time. This solves the\n  problem of the client OS sleeping and the client hence not being able to\n  calculate the actual time for keepalive purposes. Closes #2760.\n- Fix default settings incorrectly allowing TLS v1.1. Closes #2722.\n- Fix high CPU use on slow TLS connect. Closes #2794.\n\nClients:\n- Fix incorrect topic-alias property value in mosquitto_sub json output.\n- Fix confusing message on TLS certificate verification. Closes #2746.\n\nApps:\n- mosquitto_passwd uses mkstemp() for backup files.\n- `mosquitto_ctrl dynsec init` will refuse to overwrite an existing file,\n  without a race-condition.\n\n\n2.0.15 - 2022-08-16\n===================\n\nSecurity:\n- Deleting the group configured as the anonymous group in the Dynamic Security\n  plugin, would leave a dangling pointer that could lead to a single crash.\n  This is considered a minor issue - only administrative users should have\n  access to dynsec, the impact on availability is one-off, and there is no\n  associated loss of data. It is now forbidden to delete the group configured\n  as the anonymous group.\n\nBroker:\n- Fix memory leak when a plugin modifies the topic of a message in\n  MOSQ_EVT_MESSAGE.\n- Fix bridge `restart_timeout` not being honoured.\n- Fix potential memory leaks if a plugin modifies the message in the\n  MOSQ_EVT_MESSAGE event.\n- Fix unused flags in CONNECT command being forced to be 0, which is not\n  required for MQTT v3.1. Closes #2522.\n- Improve documentation of `persistent_client_expiration` option.\n  Closes #2404.\n- Add clients to session expiry check list when restarting and reloading from\n  persistence. Closes #2546.\n- Fix bridges not sending failure notification messages to the local broker if\n  the remote bridge connection fails. Closes #2467. Closes #1488.\n- Fix some PUBLISH messages not being counted in $SYS stats. Closes #2448.\n- Fix incorrect return code being sent in DISCONNECT when a client session is\n  taken over. Closes #2607.\n- Fix confusing \"out of memory\" error when a client is kicked in the dynamic\n  security plugin. Closes #2525.\n- Fix confusing error message when dynamic security config file was a\n  directory. Closes #2520.\n- Fix bridge queued messages not being persisted when local_cleansession is\n  set to false and cleansession is set to true. Closes #2604.\n- Dynamic security: Fix modifyClient and modifyGroup commands to not modify\n  the client/group if a new group/client being added is not valid.\n  Closes #2598.\n- Dynamic security: Fix the plugin being able to be loaded twice. Currently\n  only a single plugin can interact with a unique $CONTROL topic. Using\n  multiple instances of the plugin would produce duplicate entries in the\n  config file. Closes #2601. Closes #2470.\n- Fix case where expired messages were causing queued messages not to be\n  delivered. Closes #2609.\n- Fix websockets not passing on the X-Forwarded-For header.\n\nClient library:\n- Fix threads library detection on Windows under cmake. Bumps the minimum\n  cmake version to 3.1, which is still ancient.\n- Fix use of `MOSQ_OPT_TLS_ENGINE` being unable to be used due to the openssl\n  ctx not being initialised until starting to connect. Closes #2537.\n- Fix incorrect use of SSL_connect. Closes #2594.\n- Don't set SIGPIPE to ignore, use MSG_NOSIGNAL instead. Closes #2564.\n- Add documentation of struct mosquitto_message to header. Closes #2561.\n- Fix documentation omission around mosquitto_reinitialise. Closes #2489.\n- Fix use of MOSQ_OPT_SSL_CTX when used in conjunction with\n  MOSQ_OPT_SSL_CTX_DEFAULTS. Closes #2463.\n- Fix failure to close thread in some situations. Closes #2545.\n\nClients:\n- Fix mosquitto_pub incorrectly reusing topic aliases when reconnecting.\n  Closes #2494.\n\nApps:\n- Fix `-o` not working in `mosquitto_ctrl`, and typo in related documentation.\n  Closes #2471.\n\n\n2.0.14 - 2021-11-17\n===================\n\nBroker:\n- Fix bridge not respecting receive-maximum when reconnecting with MQTT v5.\n\nClient library:\n- Fix mosquitto_topic_matches_sub2() not using the length parameters.\n  Closes #2364.\n- Fix incorrect subscribe_callback in mosquittopp.h. Closes #2367.\n\n\n2.0.13 - 2021-10-27\n===================\n\nBroker:\n- Fix `max_keepalive` option not being able to be set to 0.\n- Fix LWT messages not being delivered if `per_listener_settings` was set to\n  true. Closes #2314.\n- Various fixes around inflight quota management. Closes #2306.\n- Fix problem parsing config files with Windows line endings. Closes #2297.\n- Don't send retained messages when a shared subscription is made.\n- Fix log being truncated in Windows.\n- Fix client id not showing in log on failed connections, where possible.\n- Fix broker sending duplicate CONNACK on failed MQTT v5 reauthentication.\n  Closes #2339.\n- Fix mosquitto_plugin.h not including mosquitto_broker.h. Closes #2350.\n- Fix unlimited message quota not being properly checked for incoming\n  messages. Closes #2593.\n- Fixed build for openssl compiled with OPENSSL_NO_ENGINE. Closes #2589.\n\nClient library:\n- Initialise sockpairR/W to invalid in `mosquitto_reinitialise()` to avoid\n  closing invalid sockets in `mosquitto_destroy()` on error. Closes #2326.\n\nClients:\n- Fix date format in mosquitto_sub output. Closes #2353.\n\n\n2.0.12 - 2021-08-31\n===================\n\nSecurity:\n- An MQTT v5 client connecting with a large number of user-property properties\n  could cause excessive CPU usage, leading to a loss of performance and\n  possible denial of service. This has been fixed.\n- Fix `max_keepalive` not applying to MQTT v3.1.1 and v3.1 connections.\n  These clients are now rejected if their keepalive value exceeds\n  max_keepalive. This option allows CVE-2020-13849, which is for the MQTT\n  v3.1.1 protocol itself rather than an implementation, to be addressed.\n- Using certain listener related configuration options e.g. `cafile`, that\n  apply to the default listener without defining any listener would cause a\n  remotely accessible listener to be opened that was not confined to the local\n  machine but did have anonymous access enabled, contrary to the\n  documentation. This has been fixed. Closes #2283.\n- CVE-2021-34434: If a plugin had granted ACL subscription access to a\n  durable/non-clean-session client, then removed that access, the client would\n  keep its existing subscription. This has been fixed.\n- Incoming QoS 2 messages that had not completed the QoS flow were not being\n  checked for ACL access when a clean session=False client was reconnecting.\n  This has been fixed.\n\nBroker:\n- Fix possible out of bounds memory reads when reading a corrupt/crafted\n  configuration file. Unless your configuration file is writable by untrusted\n  users this is not a risk. Closes #567213.\n- Fix `max_connections` option not being correctly counted.\n- Fix TLS certificates and TLS-PSK not being able to be configured at the same\n  time.\n- Disable TLS v1.3 when using TLS-PSK, because it isn't correctly configured.\n- Fix `max_keepalive` not applying to MQTT v3.1.1 and v3.1 connections.\n  These clients are now rejected if their keepalive value exceeds\n  max_keepalive. This option allows CVE-2020-13849, which is for the MQTT\n  v3.1.1 protocol itself rather than an implementation, to be addressed.\n- Fix broker not quiting if e.g. the `password_file` is specified as a\n  directory. Closes #2241.\n- Fix listener mount_point not being removed on outgoing messages.\n  Closes #2244.\n- Strict protocol compliance fixes, plus test suite.\n- Fix $share subscriptions not being recovered for durable clients that\n  reconnect.\n- Update plugin configuration documentation. Closes #2286.\n\nClient library:\n- If a client uses TLS-PSK then force the default cipher list to use \"PSK\"\n  ciphers only. This means that a client connecting to a broker configured\n  with x509 certificates only will now fail. Prior to this, the client would\n  connect successfully without verifying certificates, because they were not\n  configured.\n- Disable TLS v1.3 when using TLS-PSK, because it isn't correctly configured.\n- Threaded mode is deconfigured when the mosquitto_loop_start() thread ends,\n  which allows mosquitto_loop_start() to be called again. Closes #2242.\n- Fix MOSQ_OPT_SSL_CTX not being able to be set to NULL. Closes #2289.\n- Fix reconnecting failing when MOSQ_OPT_TLS_USE_OS_CERTS was in use, but none\n  of capath, cafile, psk, nor MOSQ_OPT_SSL_CTX were set, and\n  MOSQ_OPT_SSL_CTX_WITH_DEFAULTS was set to the default value of true.\n  Closes #2288.\n\nApps:\n- Fix `mosquitto_ctrl dynsec setDefaultACLAccess` command not working.\n\nClients:\n- mosquitto_sub and mosquitto_rr now open stdout in binary mode on Windows\n  so binary payloads are not modified when printing.\n- Document TLS certificate behaviour when using `-p 8883`.\n\nBuild:\n- Fix installation using WITH_TLS=no. Closes #2281.\n- Fix builds with libressl 3.4.0. Closes #2198.\n- Remove some unnecessary code guards related to libressl.\n- Fix printf format build warning on MIPS. Closes #2271.\n\n\n2.0.11 - 2021-06-08\n===================\n\nSecurity:\n- If a MQTT v5 client connects with a crafted CONNECT packet a memory leak\n  will occur. This has been fixed.\n\nBroker:\n- Fix possible crash having just upgraded from 1.6 if `per_listener_settings\n  true` is set, and a SIGHUP is sent to the broker before a client has\n  reconnected to the broker. Closes #2167.\n- Fix bridge not reconnectng if the first reconnection attempt fails.\n  Closes #2207.\n- Improve QoS 0 outgoing packet queueing.\n- Fix non-reachable bridge blocking the broker on Windows. Closes #2172.\n- Fix possible corruption of pollfd array on Windows when bridges were\n  reconnecting. Closes #2173.\n- Fix QoS 0 messages not being queued when `queue_qos0_messages` was enabled.\n  Closes #2224.\n- Fix openssl not being linked to dynamic security plugin. Closes #2277.\n\nClients:\n- If sending mosquitto_sub output to a pipe, mosquitto_sub will now detect\n  that the pipe has closed and disconnect. Closes #2164.\n- Fix `mosquitto_pub -l` quitting if a message publication is attempted when\n  the broker is temporarily unavailable. Closes #2187.\n\n\n2.0.10 - 2021-04-03\n==================\n\nSecurity:\n- CVE-2021-28166: If an authenticated client connected with MQTT v5 sent a\n  malformed CONNACK message to the broker a NULL pointer dereference occurred,\n  most likely resulting in a segfault.\n  Affects versions 2.0.0 to 2.0.9 inclusive.\n\nBroker:\n- Don't over write new receive-maximum if a v5 client connects and takes over\n  an old session. Closes #2134.\n- Fix CVE-2021-28166. Closes #2163.\n\nClients:\n- Set `receive-maximum` to not exceed the `-C` message count in mosquitto_sub\n  and mosquitto_rr, to avoid potentially lost messages. Closes #2134.\n- Fix TLS-PSK mode not working with port 8883. Closes #2152.\n\nClient library:\n- Fix possible socket leak. This would occur if a client was using\n  `mosquitto_loop_start()`, then if the connection failed due to the remote\n  server being inaccessible they called `mosquitto_loop_stop(, true)` and\n  recreated the mosquitto object.\n\nBuild:\n- A variety of minor build related fixes, like functions not having previous\n  declarations.\n- Fix CMake cross compile builds not finding opensslconf.h. Closes #2160.\n- Fix build on Solaris non-sparc. Closes #2136.\n\n\n2.0.9 - 2021-03-11\n==================\n\nSecurity:\n- If an empty or invalid CA file was provided to the client library for\n  verifying the remote broker, then the initial connection would fail but\n  subsequent connections would succeed without verifying the remote broker\n  certificate. Closes #2130.\n- If an empty or invalid CA file was provided to the broker for verifying the\n  remote broker for an outgoing bridge connection then the initial connection\n  would fail but subsequent connections would succeed without verifying the\n  remote broker certificate. Closes #2130.\n\nBroker:\n- Fix encrypted bridge connections incorrectly connecting when `bridge_cafile`\n  is empty or invalid. Closes #2130.\n- Fix `tls_version` behaviour not matching documentation. It was setting the\n  exact TLS version to use, not the minimium TLS version to use. Closes #2110.\n- Fix messages to `$` prefixed topics being rejected. Closes #2111.\n- Fix QoS 0 messages not being delivered when max_queued_bytes was configured.\n  Closes #2123.\n- Fix bridge increasing backoff calculation.\n- Improve handling of invalid combinations of listener address and bind\n  interface configurations. Closes #2081.\n- Fix `max_keepalive` option not applying to clients connecting with keepalive\n  set to 0. Closes #2117.\n\nClient library:\n- Fix encrypted connections incorrectly connecting when the CA file passed to\n  `mosquitto_tls_set()` is empty or invalid. Closes #2130.\n- Fix connections retrying very rapidly in some situations.\n\nBuild:\n- Fix cmake epoll detection.\n\n\n2.0.8 - 2021-02-25\n==================\n\nBroker:\n- Fix incorrect datatypes in `struct mosquitto_evt_tick`. This changes the\n  size and offset of two of the members of this struct, and changes the size\n  of the struct. This is an ABI break, but is considered to be acceptable\n  because plugins should never be allocating their own instance of this\n  struct, and currently none of the struct members are used for anything, so a\n  plugin should not be accessing them. It would also be safe to read/write\n  from the existing struct parameters.\n- Give compile time warning if libwebsockets compiled without external poll\n  support. Closes #2060.\n- Fix memory tracking not being available on FreeBSD or macOS. Closes #2096.\n\nClient library:\n- Fix mosquitto_{pub|sub}_topic_check() functions not returning MOSQ_ERR_INVAL\n  on topic == NULL.\n\nClients:\n- Fix possible loss of data in `mosquitto_pub -l` when sending multiple long\n  lines. Closes #2078.\n\nBuild:\n- Provide a mechanism for Docker users to run a broker that doesn't use\n  authentication, without having to provide their own configuration file.\n  Closes #2040.\n\n\n2.0.7 - 2021-02-04\n==================\n\nBroker:\n- Fix exporting of executable symbols on BSD when building via makefile.\n- Fix some minor memory leaks on exit only.\n- Fix possible memory leak on connect. Closes #2057.\n- Fix openssl engine not being able to load private key. Closes #2066.\n\nClients:\n- Fix config files truncating options after the first space. Closes #2059.\n\nBuild:\n- Fix man page building to not absolutely require xsltproc when using CMake.\n  This now handles the case where we are building from the released tar, or\n  building from git if xsltproc is available, or building from git if xsltproc\n  is not available.\n\n\n1.6.13 - 2021-02-04\n===================\n\nBroker:\n- Fix crash on Windows if loading a plugin fails. Closes #1866.\n- Fix DH group not being set for TLS connections, which meant ciphers using\n  DHE couldn't be used. Closes #1925. Closes #1476.\n- Fix local bridges being disconnected on SIGHUP. Closes #1942.\n- Fix $SYS/broker/publish/messages/+ counters not being updated for QoS 1, 2\n  messages. Closes #1968.\n- Fix listener not being reassociated with client when reloading a persistence\n  file and `per_listener_settings true` is set and the client did not set a\n  username. Closes #1891.\n- Fix file logging on Windows. Closes #1880.\n- Fix bridge sock not being removed from sock hash on error. Closes #1897.\n\nClient library:\n- Fix build on Mac Big Sur. Closes #1905.\n- Fix DH group not being set for TLS connections, which meant ciphers using\n  DHE couldn't be used. Closes #1925. Closes #1476.\n\nClients:\n- mosquitto_sub will now quit with an error if the %U option is used on\n  Windows, rather than just quitting. Closes #1908.\n- Fix config files truncating options after the first space. Closes #2059.\n\nApps:\n- Perform stricter parsing of input username in mosquitto_passwd. Closes\n  #570126 (Eclipse bugzilla).\n\nBuild:\n- Enable epoll support in CMake builds.\n\n\n2.0.6 - 2021-01-28\n==================\n\nBroker:\n- Fix calculation of remaining length parameter for websockets clients that\n  send fragmented packets. Closes #1974.\nBroker:\n- Fix potential duplicate Will messages being sent when a will delay interval\n  has been set.\n- Fix message expiry interval property not being honoured in\n  `mosquitto_broker_publish` and `mosquitto_broker_publish_copy`.\n- Fix websockets listeners with TLS not responding. Closes #2020.\n- Add notes that libsystemd-dev or similar is needed if building with systemd\n  support. Closes #2019.\n- Improve logging in obscure cases when a client disconnects. Closes #2017.\n- Fix reloading of listeners where multiple listeners have been defined with\n  the same port but different bind addresses. Closes #2029.\n- Fix `message_size_limit` not applying to the Will payload. Closes #2022.\n- The error topic-alias-invalid was being sent if an MQTT v5 client published\n  a message with empty topic and topic alias set, but the topic alias hadn't\n  already been configured on the broker. This has been fixed to send a\n  protocol error, as per section 3.3.4 of the specification.\n- Note in the man pages that SIGHUP reloads TLS certificates. Closes #2037.\n- Fix bridges not always connecting on Windows. Closes #2043.\n\nApps:\n- Allow command line arguments to override config file options in\n  mosquitto_ctrl. Closes #2010.\n- mosquitto_ctrl: produce an error when requesting a new password if both\n  attempts do not match. Closes #2011.\n\nBuild:\n- Fix cmake builds using `WITH_CJSON=no` not working if cJSON not found.\n  Closes #2026.\n\nOther:\n- The SPDX identifiers for EDL-1.0 have been changed to BSD-3-Clause as per\n  The Eclipse legal documentation generator. The licenses are identical.\n\n\n2.0.5 - 2021-01-11\n==================\n\nBroker:\n- Fix `auth_method` not being provided to the extended auth plugin event.\n  Closes #1975.\n- Fix large packets not being completely published to slow clients.\n  Closes #1977.\n- Fix bridge connection not relinquishing POLLOUT after messages are sent.\n  Closes #1979.\n- Fix apparmor incorrectly denying access to\n  /var/lib/mosquitto/mosquitto.db.new. Closes #1978.\n- Fix potential intermittent initial bridge connections when using poll().\n- Fix `bind_interface` option. Closes #1999.\n- Fix invalid behaviour in dynsec plugin if a group or client is deleted\n  before a role that was attached to the group or client is deleted.\n  Closes #1998.\n- Improve logging in dynsec addGroupRole command. Closes #2005.\n- Improve logging in dynsec addGroupClient command. Closes #2008.\n\nClient library:\n- Improve documentation around the `_v5()` and non-v5 functions, e.g.\n  `mosquitto_publish()` and `mosquitto_publish_v5().\n\nBuild:\n- `install` Makefile target should depend on `all`, not `mosquitto`, to ensure\n  that man pages are always built. Closes #1989.\n- Fixes for lots of minor build warnings highlighted by Visual Studio.\n\nApps:\n- Disallow control characters in mosquitto_passwd usernames.\n- Fix incorrect description in mosquitto_ctrl man page. Closes #1995.\n- Fix `mosquitto_ctrl dynsec getGroup` not showing roles. Closes #1997.\n\n\n2.0.4 - 2020-12-22\n==================\n\nBroker:\n- Fix $SYS/broker/publish/messages/+ counters not being updated for QoS 1, 2\n  messages. Closes #1968.\n- mosquitto_connect_bind_async() and mosquitto_connect_bind_v5() should not\n  reset the bind address option if called with bind_address == NULL.\n- Fix dynamic security configuration possibly not being reloaded on Windows\n  only. Closes #1962.\n- Add more log messages for dynsec load/save error conditions.\n- Fix websockets connections blocking non-websockets connections on Windows.\n  Closes #1934.\n\nBuild:\n- Fix man pages not being built when using CMake. Closes #1969.\n\n\n2.0.3 - 2020-12-17\n==================\n\nSecurity:\n- Running mosquitto_passwd with the following arguments only\n  `mosquitto_passwd -b password_file username password` would cause the\n  username to be used as the password.\n\nBroker:\n- Fix excessive CPU use on non-Linux systems when the open file limit is set\n  high. Closes #1947.\n- Fix LWT not being sent on client takeover when the existing session wasn't\n  being continued. Closes #1946.\n- Fix bridges possibly not completing connections when WITH_ADNS is in use.\n  Closes #1960.\n- Fix QoS 0 messages not being delivered if max_queued_messages was set to 0.\n  Closes #1956.\n- Fix local bridges being disconnected on SIGHUP. Closes #1942.\n- Fix slow initial bridge connections for WITH_ADNS=no.\n- Fix persistence_location not appending a '/'.\n\nClients:\n- Fix mosquitto_sub being unable to terminate with Ctrl-C if a successful\n  connection is not made. Closes #1957.\n\nApps:\n- Fix `mosquitto_passwd -b` using username as password (not if `-c` is also\n  used). Closes #1949.\n\nBuild:\n- Fix `install` target when using WITH_CJSON=no. Closes #1938.\n- Fix `generic` docker build. Closes #1945.\n\n\n2.0.2 - 2020-12-10\n==================\n\nBroker:\n- Fix build regression for WITH_WEBSOCKETS=yes on non-Linux systems.\n\n\n2.0.1 - 2020-12-10\n==================\n\nBroker:\n- Fix websockets connections on Windows blocking subsequent connections.\n  Closes #1934.\n- Fix DH group not being set for TLS connections, which meant ciphers using\n  DHE couldn't be used. Closes #1925. Closes #1476.\n- Fix websockets listeners not causing the main loop not to wake up.\n  Closes #1936.\n\nClient library:\n- Fix DH group not being set for TLS connections, which meant ciphers using\n  DHE couldn't be used. Closes #1925. Closes #1476.\n\nApps:\n- Fix `mosquitto_passwd -U`\n\nBuild:\n- Fix cjson include paths.\n- Fix build using WITH_TLS=no when the openssl headers aren't available.\n- Distribute cmake/ and snap/ directories in tar.\n\n\n2.0.0 - 2020-12-03\n==================\n\nBreaking changes:\n- When the Mosquitto broker is run without configuring any listeners it will\n  now bind to the loopback interfaces 127.0.0.1 and/or ::1. This means that\n  only connections from the local host will be possible.\n\n  Running the broker as `mosquitto` or `mosquitto -p 1883` will bind to the\n  loopback interface.\n\n  Running the broker with a configuration file with no listeners configured\n  will bind to the loopback interface with port 1883.\n\n  Running the broker with a listener defined will bind by default to `0.0.0.0`\n  / `::` and so will be accessible from any interface. It is still possible to\n  bind to a specific address/interface.\n\n  If the broker is run as `mosquitto -c mosquitto.conf -p 1884`, and a\n  listener is defined in the configuration file, then the port defined on the\n  command line will be IGNORED, and no listener configured for it.\n- All listeners now default to `allow_anonymous false` unless explicitly set\n  to true in the configuration file. This means that when configuring a\n  listener the user must either configure an authentication and access control\n  method, or set `allow_anonymous true`. When the broker is run without a\n  configured listener, and so binds to the loopback interface, anonymous\n  connections are allowed.\n- If Mosquitto is run on as root on a unix like system, it will attempt to\n  drop privileges as soon as the configuration file has been read. This is in\n  contrast to the previous behaviour where elevated privileges were only\n  dropped after listeners had been started (and hence TLS certificates loaded)\n  and logging had been started. The change means that clients will never be\n  able to connect to the broker when it is running as root, unless the user\n  explicitly sets it to run as root, which is not advised. It also means that\n  all locations that the broker needs to access must be available to the\n  unprivileged user. In particular those people using TLS certificates from\n  Lets Encrypt will need to do something to allow Mosquitto to access\n  those certificates. An example deploy renewal hook script to help with this\n  is at `misc/letsencrypt/mosquitto-copy.sh`.\n  The user that Mosquitto will change to are the one provided in the\n  configuration, `mosquitto`, or `nobody`, in order of availability.\n- The `pid_file` option will now always attempt to write a pid file,\n  regardless of whether the `-d` argument is used when running the broker.\n- The `tls_version` option now defines the *minimum* TLS protocol version to\n  be used, rather than the exact version. Closes #1258.\n- The `max_queued_messages` option has been increased from 100 to 1000 by\n  default, and now also applies to QoS 0 messages, when a client is connected.\n- The mosquitto_sub, mosquitto_pub, and mosquitto_rr clients will now load\n  OS provided CA certificates by default if `-L mqtts://...` is used, or if\n  the port is set to 8883 and no other CA certificates are loaded.\n- Minimum support libwebsockets version is now 2.4.0\n- The license has changed from \"EPL-1.0 OR EDL-1.0\" to \"EPL-2.0 OR EDL-1.0\".\n\nBroker features:\n- New plugin interface which is more flexible, easier to develop for and\n  easier to extend.\n- New dynamic security plugin, which allows clients, groups, and roles to be\n  defined and updated as the broker is running.\n- Performance improvements, particularly for higher numbers of clients.\n- When running as root, if dropping privileges to the \"mosquitto\" user fails,\n  then try \"nobody\" instead. This reduces the burden on users installing\n  Mosquitto themselves.\n- Add support for Unix domain socket listeners.\n- Add `bridge_outgoing_retain` option, to allow outgoing messages from a\n  bridge to have the retain bit completely disabled, which is useful when\n  bridging to e.g. Amazon or Google.\n- Add support for MQTT v5 bridges to handle the \"retain-available\" property\n  being false.\n- Allow MQTT v5.0 outgoing bridges to fall back to MQTT v3.1.1 if connecting\n  to a v3.x only broker.\n- DLT logging is now configurable at runtime with `log_dest dlt`.\n  Closes #1735.\n- Add `mosquitto_broker_publish()` and `mosquitto_broker_publish_copy()`\n  functions, which can be used by plugins to publish messages.\n- Add `mosquitto_client_protocol_version()` function which can be used by\n  plugins to determine which version of MQTT a client has connected with.\n- Add `mosquitto_kick_client_by_clientid()` and `mosquitto_kick_client_by_username()`\n  functions, which can be used by plugins to disconnect clients.\n- Add support for handling $CONTROL/ topics in plugins.\n- Add support for PBKDF2-SHA512 password hashing.\n- Enabling certificate based TLS encryption is now through certfile and\n  keyfile, not capath or cafile.\n- Added support for controlling UNSUBSCRIBE calls in v5 plugin ACL checks.\n- Add \"deny\" acl type. Closes #1611.\n- The broker now sends the receive-maximum property for MQTT v5 CONNACKs.\n- Add the `bridge_max_packet_size` option. Closes #265.\n- Add the `bridge_bind_address` option. Closes #1311.\n- TLS certificates for the server are now reloaded on SIGHUP.\n- Default for max_queued_messages has been changed to 1000.\n- Add `ciphers_tls1.3` option, to allow setting TLS v1.3 ciphersuites.\n  Closes #1825.\n- Bridges now obey MQTT v5 server-keepalive.\n- Add bridge support for the MQTT v5 maximum-qos property.\n- Log client port on new connections. Closes #1911.\n\nBroker fixes:\n- Send DISCONNECT with `malformed-packet` reason code on invalid PUBLISH,\n  SUBSCRIBE, and UNSUBSCRIBE packets.\n- Document that X509_free() must be called after using\n  mosquitto_client_certificate(). Closes #1842.\n- Fix listener not being reassociated with client when reloading a persistence\n  file and `per_listener_settings true` is set and the client did not set a\n  username. Closes #1891.\n- Fix bridge sock not being removed from sock hash on error. Closes #1897.\n- mosquitto_password now forbids the : character. Closes #1833.\n- Fix `log_timestamp_format` not applying to `log_dest topic`. Closes #1862.\n- Fix crash on Windows if loading a plugin fails. Closes #1866.\n- Fix file logging on Windows. Closes #1880.\n- Report an error if the config file is set to a directory. Closes #1814.\n- Fix bridges incorrectly setting Wills to manage remote notifications when\n  `notifications_local_only` was set true. Closes #1902.\n\nClient library features:\n- Client no longer generates random client ids for v3.1.1 clients, these are\n  now expected to be generated on the broker. This matches the behaviour for\n  v5 clients. Closes #291.\n- Add support for connecting to brokers through Unix domain sockets.\n- Add `mosquitto_property_identifier()`, for retrieving the identifier integer\n  for a property.\n- Add `mosquitto_property_identifier_to_string()` for converting a property\n  identifier integer to the corresponding property name string.\n- Add `mosquitto_property_next()` to retrieve the next property in a list, for\n  iterating over property lists.\n- mosquitto_pub now handles the MQTT v5 retain-available property by never\n  setting the retain bit.\n- Added MOSQ_OPT_TCP_NODELAY, to allow disabling Nagle's algorithm on client\n  sockets. Closes #1526.\n- Add `mosquitto_ssl_get()` to allow clients to access their SSL structure and\n  perform additional verification.\n- Add MOSQ_OPT_BIND_ADDRESS to allow setting of a bind address independently\n  of the `mosquitto_connect*()` call.\n- Add `MOSQ_OPT_TLS_USE_OS_CERTS` option, to instruct the client to load and\n  trust OS provided CA certificates for use with TLS connections.\n\nClient library fixes:\n- Fix send quota being incorrecly reset on reconnect. Closes #1822.\n- Don't use logging until log mutex is initialised. Closes #1819.\n- Fix missing mach/mach_time.h header on OS X. Closes #1831.\n- Fix connect properties not being sent when the client automatically\n  reconnects. Closes #1846.\n\nClient features:\n- Add timeout return code (27) for `mosquitto_sub -W <secs>` and\n  `mosquitto_rr -W <secs>`. Closes #275.\n- Add support for connecting to brokers through Unix domain sockets with the\n  `--unix` argument.\n- Use cJSON library for producing JSON output, where available. Closes #1222.\n- Add support for outputting MQTT v5 property information to mosquitto_sub/rr\n  JSON output. Closes #1416.\n- Add `--pretty` option to mosquitto_sub/rr for formatted/unformatted JSON\n  output.\n- Add support for v5 property printing to mosquitto_sub/rr in non-JSON mode.\n  Closes #1416.\n- Add `--nodelay` to all clients to allow them to use the MOSQ_OPT_TCP_NODELAY\n  option.\n- Add `-x` to all clients to all the session-expiry-interval property to be\n  easily set for MQTT v5 clients.\n- Add `--random-filter` to mosquitto_sub, to allow only a certain proportion\n  of received messages to be printed.\n- mosquitto_sub %j and %J timestamps are now in a ISO 8601 compatible format.\n- mosquitto_sub now supports extra format specifiers for field width and\n  precision for some parameters.\n- Add `--version` for all clients.\n- All clients now load OS provided CA certificates if used with `-L\n  mqtts://...`, or if port is set to 8883 and no other CA certificates are\n  used. Closes #1824.\n- Add the `--tls-use-os-certs` option to all clients.\n\nClient fixes:\n- mosquitto_sub will now exit if all subscriptions were denied.\n- mosquitto_pub now sends 0 length files without an error when using `-f`.\n- Fix description of `-e` and `-t` arguments in mosquitto_rr. Closes #1881.\n- mosquitto_sub will now quit with an error if the %U option is used on\n  Windows, rather than just quitting. Closes #1908.\n\n\n1.6.12 - 2020-08-19\n===================\n\nSecurity:\n- In some circumstances, Mosquitto could leak memory when handling PUBLISH\n  messages. This is limited to incoming QoS 2 messages, and is related\n  to the combination of the broker having persistence enabled, a clean\n  session=false client, which was connected prior to the broker restarting,\n  then has reconnected and has now sent messages at a sufficiently high rate\n  that the incoming queue at the broker has filled up and hence messages are\n  being dropped. This is more likely to have an effect where\n  max_queued_messages is a small value. This has now been fixed. Closes #1793.\n\nBroker:\n- Build warning fixes when building with WITH_BRIDGE=no and WITH_TLS=no.\n\nClients:\n- All clients exit with an error exit code on CONNACK failure. Closes #1778.\n- Don't busy loop with `mosquitto_pub -l` on a slow connection.\n\n\n1.5.10 - 2020-08-19\n===================\n\nSecurity:\n- In some circumstances, Mosquitto could leak memory when handling PUBLISH\n  messages. This is limited to incoming QoS 2 messages, and is related\n  to the combination of the broker having persistence enabled, a clean\n  session=false client, which was connected prior to the broker restarting,\n  then has reconnected and has now sent messages at a sufficiently high rate\n  that the incoming queue at the broker has filled up and hence messages are\n  being dropped. This is more likely to have an effect where\n  max_queued_messages is a small value. This has now been fixed. Closes #1793.\n\n\n1.6.11 - 2020-08-11\n===================\n\nSecurity:\n- On Windows the Mosquitto service was being installed without appropriate\n  path quoting, this has been fixed.\n\nBroker:\n- Fix usage message only mentioning v3.1.1. Closes #1713.\n- Fix broker refusing to start if only websockets listeners were defined.\n  Closes #1740.\n- Change systemd unit files to create /var/log/mosquitto before starting.\n  Closes #821.\n- Don't quit with an error if opening the log file isn't possible.\n  Closes #821.\n- Fix bridge topic remapping when using \"\" as the topic. Closes #1749.\n- Fix messages being queued for disconnected bridges when clean start was\n  set to true. Closes #1729.\n- Fix `autosave_interval` not being triggered by messages being delivered.\n  Closes #1726.\n- Fix websockets clients sometimes not being disconnected promptly.\n  Closes #1718.\n- Fix \"slow\" file based logging by switching to line based buffering.\n  Closes #1689. Closes #1741.\n- Log protocol error message where appropriate from a bad UNSUBSCRIBE, rather\n  than the generic \"socket error\".\n- Don't try to start DLT logging if DLT unavailable, to avoid a long delay\n  when shutting down the broker. Closes #1735.\n- Fix potential memory leaks. Closes #1773. Closes #1774.\n- Fix clients not receiving messages after a previous client with the same\n  client ID and positive will delay interval quit. Closes #1752.\n- Fix overly broad HAVE_PTHREAD_CANCEL compile guard. Closes #1547.\n\nClient library:\n- Improved documentation around connect callback return codes. Close #1730.\n- Fix `mosquitto_publish*()` no longer returning `MOSQ_ERR_NO_CONN` when not\n  connected. Closes #1725.\n- `mosquitto_loop_start()` now sets a thread name on Linux, FreeBSD, NetBSD,\n  and OpenBSD. Closes #1777.\n- Fix `mosquitto_loop_stop()` not stopping on Windows. Closes #1748. Closes #117.\n\n\n1.6.10 - 2020-05-25\n===================\n\nBroker:\n- Report invalid bridge prefix+pattern combinations at config parsing time\n  rather than letting the bridge fail later. Issue #1635.\n- Fix `mosquitto_passwd -b` not updating passwords for existing users\n  correctly. Creating a new user with `-b` worked without problem.\n  Closes #1664.\n- Fix memory leak when connecting clients rejected.\n- Don't disconnect clients that are already disconnected. This prevents the\n  session expiry being extended on SIGHUP. Closes #1521.\n- Fix support for openssl 3.0.\n- Fix check when loading persistence file of a different version than the\n  native version. Closes #1684.\n- Fix possible assert crash associated with bridge reconnecting when compiled\n  without epoll support. Closes #1700.\n\nClient library:\n- Don't treat an unexpected PUBACK, PUBREL, or PUBCOMP as a fatal error.\n  Issue #1629.\n- Fix support for openssl 3.0.\n- Fix memory leaks from multiple calls to\n  `mosquitto_lib_init()`/`mosquitto_lib_cleanup()`. Closes #1691.\n- Fix documentation on return code of `mosquitto_lib_init()` for Windows.\n  Closes #1690.\n\nClients:\n- Fix mosquitto_sub %j or %J not working on Windows. Closes #1674.\n\nBuild:\n- Various fixes for building with <C99 support. Closes #1622.\n- Fix use of sed on BSD. Closes #1614.\n\n\n1.6.9 - 20200227\n================\n\nBroker:\n- Fix session expiry with very large expiry intervals. Closes #1525.\n- Check ACL patterns for validity when loading. Closes #1539.\n- Use presence of password file as indicator for whether username checks\n  should take place, not whether usernames are defined in the password file.\n  Closes #1545.\n- Strip whitespace from end of config file string options. Closes #1566.\n- Satisfy valgrind when exiting on error due to not being able to open a\n  listening socket, by calling freeaddrinfo. Closes #1565.\n- Fix config->user not being freed on exit. Closes #1564.\n- Fix trailing whitespace not being trimmed on acl users. Closes #1539.\n- Fix `bind_interface` not working for the default listener. Closes #1533.\n- Improve password file parsing in the broker and mosqitto_passwd. Closes #1584.\n- Print OpenSSL errors in more situations, like when loading certificates\n  fails. Closes #1552.\n- Fix `mosquitto_client_protocol() returning incorrect values.\n\nClient library:\n- Set minimum keepalive argument to `mosquitto_connect*()` to be 5 seconds.\n  Closes #1550.\n- Fix `mosquitto_topic_matches_sub()` not returning MOSQ_ERR_INVAL if the\n  topic contains a wildcard. Closes #1589.\n\nClients:\n- Fix `--remove-retained` not obeying the `-T` option for filtering out\n  topics. Closes #1585.\n- Default behaviour for v5 clients using `-c` is now to use infinite length\n  sessions, as with v3 clients. Closes #1546.\n\n\n1.6.8 - 20191128\n================\n\nBroker:\n- Various fixes for `allow_zero_length_clientid` config, where this option was\n  not being set correctly. Closes #1429.\n- Fix incorrect memory tracking causing problems with memory_limit option.\n  Closes #1437.\n- Fix subscription topics being limited to 200 characters instead of 200\n  hierarchy levels. Closes #1441.\n- Only a single CRL could be loaded at once. This has been fixed.\n  Closes #1442.\n- Fix problems with reloading config when `per_listener_settings` was true.\n  Closes #1459.\n- Fix retained messages with an expiry interval not being expired after being\n  restored from persistence. Closes #1464.\n- Fix messages with an expiry interval being sent without an expiry interval\n  property just before they were expired. Closes #1464.\n- Fix TLS Websockets clients not receiving messages after taking over a\n  previous connection. Closes #1489.\n- Fix MQTT 3.1.1 clients using clean session false, or MQTT 5.0 clients using\n  session-expiry-interval set to infinity never expiring, even when the global\n  `persistent_client_expiration` option was set. Closes #1494.\n\nClient library:\n- Fix publish properties not being passed to on_message_v5 callback for QoS 2\n  messages. Closes #1432.\n- Fix documentation issues in mosquitto.h. Closes #1478.\n- Document `mosquitto_connect_srv()`. Closes #1499.\n\nClients:\n- Fix duplicate cfg definition in rr_client. Closes #1453.\n- Fix `mosquitto_pub -l` hang when stdin stream ends. Closes #1448.\n- Fix `mosquitto_pub -l` not sending the final line of stdin if it does not\n  end with a new line. Closes #1473.\n- Make documentation for `mosquitto_pub -l` match reality - blank lines are\n  sent as empty messages. Closes #1474.\n- Free memory in `mosquitto_sub` when quiting without having made a successful\n  connection. Closes #1513.\n\nBuild:\n- Added `CLIENT_STATIC_LDADD` to makefile builds to allow more libraries to be\n  linked when compiling the clients with a static libmosquitto, as required\n  for e.g. openssl on some systems.\n\nInstaller:\n- Fix mosquitto_rr.exe not being included in Windows installers. Closes #1463.\n\n\n1.6.7 - 20190925\n================\n\nBroker:\n- Add workaround for working with libwebsockets 3.2.0.\n- Fix potential crash when reloading config. Closes #1424, #1425.\n\nClient library:\n- Don't use `/` in autogenerated client ids, to avoid confusing with topics.\n- Fix `mosquitto_max_inflight_messages_set()` and `mosquitto_int_option(...,\n  MOSQ_OPT_*_MAX, ...)` behaviour. Closes #1417.\n- Fix regression on use of `mosquitto_connect_async()` not working.\n  Closes #1415 and #1422.\n\nClients:\n- mosquitto_sub: Fix `-E` incorrectly not working unless `-d` was also\n  specified. Closes #1418.\n- Updated documentation around automatic client ids.\n\n\n1.6.6 - 20190917\n================\n\nSecurity:\n- Restrict topic hierarchy to 200 levels to prevent possible stack overflow.\n  Closes #1412.\n\nBroker:\n- Restrict topic hierarchy to 200 levels to prevent possible stack overflow.\n  Closes #1412.\n- mosquitto_passwd now returns 1 when attempting to update a user that does\n  not exist. Closes #1414.\n\n\n1.6.5 - 20190912\n================\n\nBroker:\n- Fix v5 DISCONNECT packets with remaining length == 2 being treated as a\n  protocol error. Closes #1367.\n- Fix support for libwebsockets 3.x.\n- Fix slow websockets performance when sending large messages. Closes #1390.\n- Fix bridges potentially not connecting on Windows. Closes #478.\n- Fix clients authorised using `use_identity_as_username` or\n  `use_subject_as_username` being disconnected on SIGHUP. Closes #1402.\n- Improve error messages in some situations when clients disconnect. Reduces\n  the number of \"Socket error on client X, disconnecting\" messages.\n- Fix Will for v5 clients not being sent if will delay interval was greater\n  than the session expiry interval. Closes #1401.\n- Fix CRL file not being reloaded on HUP. Closes #35.\n- Fix repeated \"Error in poll\" messages on Windows when only websockets\n  listeners are defined. Closes #1391.\n\nClient library:\n- Fix reconnect backoff for the situation where connections are dropped rather\n  than refused. Closes #737.\n- Fix missing locks on `mosq->state`. Closes #1374.\n\nDocumentation:\n- Improve details on global/per listener options in the mosquitto.conf man page.\n  Closes #274.\n- Clarify behaviour when clients exceed the `message_size_limit`. Closes #448.\n- Improve documentation for `max_inflight_bytes`, `max_inflight_messages`,\n  and `max_queued_messages`.\n\nBuild:\n- Fix missing function warnings on NetBSD.\n- Fix WITH_STATIC_LIBRARIES using CMake on Windows. Closes #1369.\n- Guard ssize_t definition on Windows. Closes #522.\n\n\n1.6.4 - 20190801\n================\n\nBroker:\n- Fix persistent clients being incorrectly expired on Raspberry Pis.\n  Closes #1272.\n- Windows: Allow other applications access to the log file when running.\n  Closes #515.\n- Fix incoming QoS 2 messages being blocked when `max_inflight_messages` was\n  set to 1. Closes #1332.\n- Fix incoming messages not being removed for a client if the topic being\n  published to does not have any subscribers. Closes #1322.\n\nClient library:\n- Fix MQTT v5 subscription options being incorrectly set for MQTT v3\n  subscriptions. Closes #1353.\n- Make behaviour of `mosquitto_connect_async()` consistent with\n  `mosquitto_connect()` when connecting to a non-existent server.\n  Closes #1345.\n- `mosquitto_string_option(mosq, MOSQ_OPT_TLS_KEYFORM, ...)` was incorrectly\n  returning `MOSQ_ERR_INVAL` with valid input. This has been fixed.\n  Closes #1360.\n- on_connect callback is now called with the correct v5 reason code if a v5\n  client connects to a v3.x broker and is sent a CONNACK with the\n  \"unacceptable protocol version\" connack reason code.\n- Fix memory leak when setting v5 properties in mosquitto_connect_v5().\n- Fix properties not being sent on QoS>0 PUBLISH messages.\n\nClients:\n- mosquitto_pub: fix error codes not being returned when mosquitto_pub exits.\n  Closes #1354.\n- All clients: improve error messages when connecting to a v3.x broker when in\n  v5 mode. Closes #1344.\n\nOther:\n- Various documentation fixes.\n\n\n1.6.3 - 20190618\n================\n\nBroker:\n- Fix detection of incoming v3.1/v3.1.1 bridges. Closes #1263.\n- Fix default max_topic_alias listener config not being copied to the in-use\n  listener when compiled without TLS support.\n- Fix random number generation if compiling using `WITH_TLS=no` and on Linux\n  with glibc >= 2.25. Without this fix, no random numbers would be generated\n  for e.g. on broker client id generation, and so clients connecting expecting\n  this feature would be unable to connect.\n- Fix compilation problem related to `getrandom()` on non-glibc systems.\n- Fix Will message for a persistent client incorrectly being sent when the\n  client reconnects after a clean disconnect. Closes #1273.\n- Fix Will message for a persistent client not being sent on disconnect.\n  Closes #1273.\n- Improve documentation around the upgrading of persistence files. Closes\n  #1276.\n- Add 'extern \"C\"' on mosquitto_broker.h and mosquitto_plugin.h for C++ plugin\n  writing. Closes #1290.\n- Fix persistent Websockets clients not receiving messages after they\n  reconnect, having sent DISCONNECT on a previous session. Closes #1227.\n- Disable TLS renegotiation. Client initiated renegotiation is considered to\n  be a potential attack vector against servers. Closes #1257.\n- Fix incorrect shared subscription topic '$shared'.\n- Fix zero length client ids being rejected for MQTT v5 clients with clean\n  start set to true.\n- Fix MQTT v5 overlapping subscription behaviour. Clients now receive message\n  from all matching subscriptions rather than the first one encountered, which\n  ensures the maximum QoS requirement is met.\n- Fix incoming/outgoing quota problems for QoS>0.\n- Remove obsolete `store_clean_interval` from documentation.\n- Fix v4 authentication plugin never calling psk_key_get.\n\nClient library:\n- Fix typo causing build error on Windows when building without TLS support.\n  Closes #1264.\n\nClients:\n- Fix -L url parsing when `/topic` part is missing.\n- Stop some error messages being printed even when `--quiet` was used.\n  Closes #1284.\n- Fix mosquitto_pub exiting with error code 0 when an error occurred.\n  Closes #1285.\n- Fix mosquitto_pub not using the `-c` option. Closes #1273.\n- Fix MQTT v5 clients not being able to specify a password without a username.\n  Closes #1274.\n- Fix `mosquitto_pub -l` not handling network failures. Closes #1152.\n- Fix `mosquitto_pub -l` not handling zero length input. Closes #1302.\n- Fix double free on exit in mosquitto_pub. Closes #1280.\n\nDocumentation:\n- Remove references to Python binding and C++ wrapper in libmosquitto man\n  page. Closes #1266.\n\nBuild:\n- CLIENT_LDFLAGS now uses LDFLAGS. Closes #1294.\n\n\n1.6.2 - 20190430\n================\n\nBroker:\n- Fix memory access after free, leading to possible crash, when v5 client with\n  Will message disconnects, where the Will message has as its first property\n  one of `content-type`, `correlation-data`, `payload-format-indicator`, or\n  `response-topic`.  Closes #1244.\n- Fix build for WITH_TLS=no. Closes #1250.\n- Fix Will message not allowing user-property properties.\n- Fix broker originated messages (e.g. $SYS/broker/version) not being\n  published when `check_retain_source` set to true. Closes #1245.\n- Fix $SYS/broker/version being incorrectly expired after 60 seconds.\n  Closes #1245.\n\nLibrary:\n- Fix crash after client has been unable to connect to a broker. This occurs\n  when the client is exiting and is part of the final library cleanup routine.\n  Closes #1246.\n\nClients:\n- Fix -L url parsing. Closes #1248.\n\n\n1.6.1 - 20190426\n================\n\nBroker:\n- Document `memory_limit` option.\n\nClients:\n- Fix compilation on non glibc systems due to missing sys/time.h header.\n\nBuild:\n- Add `make check` target and document testing procedure. Closes #1230.\n- Document bundled dependencies and how to disable. Closes #1231.\n- Split CFLAGS and CPPFLAGS, and LDFLAGS and LDADD/LIBADD.\n- test/unit now respects CPPFLAGS and LDFLAGS. Closes #1232.\n- Don't call ldconfig in CMake scripts. Closes #1048.\n- Use CMAKE_INSTALL_* variables when installing in CMake. Closes #1049.\n\n\n1.6 - 20190417\n==============\n\nBroker features:\n- Add support for MQTT v5\n- Add support for OCSP stapling.\n- Add support for ALPN on bridge TLS connections. Closes #924.\n- Add support for Automotive DLT logging.\n- Add TLS Engine support.\n- Persistence file read/write performance improvements.\n- General performance improvements.\n- Add max_keepalive option, to allow a maximum keepalive value to be set for\n  MQTT v5 clients only.\n- Add `bind_interface` option which allows a listener to be bound to a\n  specific network interface, in a similar fashion to the `bind_address` option.\n  Linux only.\n- Add improved bridge restart interval based on Decorrelated Jitter.\n- Add `dhparamfile` option, to allow DH parameters to be loaded for Ephemeral\n  DH support\n- Disallow writing to $ topics where appropriate.\n- Fix mosquitto_passwd crashing on corrupt password file. Closes #1207.\n- Add explicit support for TLS v1.3.\n- Drop support for TLS v1.0.\n- Improved general support for broker generated client ids. Removed libuuid\n  dependency.\n- auto_id_prefix now defaults to 'auto-'.\n- QoS 1 and 2 flow control improvements.\n\nClient library features:\n- Add support for MQTT v5\n- Add mosquitto_subscribe_multiple() for sending subscriptions to multiple\n  topics in one command.\n- Add TLS Engine support.\n- Add explicit support for TLS v1.3.\n- Drop support for TLS v1.0.\n- QoS 1 and 2 flow control improvements.\n\nClient features:\n- Add support for MQTT v5\n- Add mosquitto_rr client, which can be used for \"request-response\" messaging,\n  by sending a request message and awaiting a response.\n- Add TLS Engine support.\n- Add support for ALPN on TLS connections. Closes #924.\n- Add -D option for all clients to specify MQTT v5 properties.\n- Add -E to mosquitto_sub, which causes it to exit immediately after having\n  its subscriptions acknowledged. Use with -c to create a durable client\n  session without requiring a message to be received.\n- Add --remove-retained to mosquitto_sub, which can be used to clear retained\n  messages on a broker.\n- Add --repeat and --repeat-delay to mosquitto_pub, which can be used to\n  repeat single message publishes at a regular interval.\n- -V now accepts `5, `311`, `31`, as well as `mqttv5` etc.\n- Add explicit support for TLS v1.3.\n- Drop support for TLS v1.0.\n\nBroker fixes:\n- Improve error reporting when creating listeners.\n- Fix build on SmartOS due to missing IPV6_V6ONLY. Closes #1212.\n\nClient library fixes\n- Add missing `mosquitto_userdata()` function.\n\nClient fixes:\n- mosquitto_pub wouldn't always publish all messages when using `-l` and\n  QoS>0. This has been fixed.\n- mosquitto_sub was incorrectly encoding special characters when using %j\n  output format. Closes #1220.\n\n\n1.5.8 - 20190228\n================\n\nBroker:\n- Fix clients being disconnected when ACLs are in use. This only affects the\n  case where a client connects using a username, and the anonymous ACL list is\n  defined but specific user ACLs are not defined. Closes #1162.\n- Make error messages for missing config file clearer.\n- Fix some Coverity Scan reported errors that could occur when the broker was\n  already failing to start.\n- Fix broken mosquitto_passwd on FreeBSD. Closes #1032.\n- Fix delayed bridge local subscriptions causing missing messages.\n  Closes #1174.\n\nLibrary:\n- Use higher resolution timer for random initialisation of client id\n  generation. Closes #1177.\n- Fix some Coverity Scan reported errors that could occur when the library was\n  already quitting.\n\n\n1.5.7 - 20190213\n================\n\nBroker:\n- Fix build failure when using WITH_ADNS=yes\n- Ensure that an error occurs if `per_listener_settings true` is given after\n  other security options. Closes #1149.\n- Fix include_dir not sorting config files before loading. This was partially\n  fixed in 1.5 previously.\n- Improve documentation around the `include_dir` option. Closes #1154.\n- Fix case where old unreferenced msg_store messages were being saved to the\n  persistence file, bloating its size unnecessarily. Closes #389.\n\nLibrary:\n- Fix `mosquitto_topic_matches_sub()` not returning MOSQ_ERR_INVAL for\n  invalid subscriptions like `topic/#abc`. This only affects the return value,\n  not the match/no match result, which was already correct.\n\nBuild:\n- Don't require C99 compiler.\n- Add rewritten build test script and remove some build warnings.\n\n\n1.5.6 - 20190206\n================\n\nSecurity:\n- CVE-2018-12551: If Mosquitto is configured to use a password file for\n  authentication, any malformed data in the password file will be treated as\n  valid. This typically means that the malformed data becomes a username and no\n  password. If this occurs, clients can circumvent authentication and get access\n  to the broker by using the malformed username. In particular, a blank line\n  will be treated as a valid empty username. Other security measures are\n  unaffected. Users who have only used the mosquitto_passwd utility to create\n  and modify their password files are unaffected by this vulnerability.\n  Affects version 1.0 to 1.5.5 inclusive.\n- CVE-2018-12550: If an ACL file is empty, or has only blank lines or\n  comments, then mosquitto treats the ACL file as not being defined, which\n  means that no topic access is denied. Although denying access to all topics\n  is not a useful configuration, this behaviour is unexpected and could lead\n  to access being incorrectly granted in some circumstances. This is now\n  fixed. Affects versions 1.0 to 1.5.5 inclusive.\n- CVE-2018-12546. If a client publishes a retained message to a topic that\n  they have access to, and then their access to that topic is revoked, the\n  retained message will still be delivered to future subscribers. This\n  behaviour may be undesirable in some applications, so a configuration option\n  `check_retain_source` has been introduced to enforce checking of the\n  retained message source on publish.\n\nBroker:\n- Fixed comment handling for config options that have optional arguments.\n- Improved documentation around bridge topic remapping.\n- Handle mismatched handshakes (e.g. QoS1 PUBLISH with QoS2 reply) properly.\n- Fix spaces not being allowed in the bridge remote_username option. Closes\n  #1131.\n- Allow broker to always restart on Windows when using `log_dest file`. Closes\n  #1080.\n- Fix Will not being sent for Websockets clients. Closes #1143.\n- Windows: Fix possible crash when client disconnects. Closes #1137.\n- Fixed durable clients being unable to receive messages when offline, when\n  per_listener_settings was set to true. Closes #1081.\n- Add log message for the case where a client is disconnected for sending a\n  topic with invalid UTF-8. Closes #1144.\n\nLibrary:\n- Fix TLS connections not working over SOCKS.\n- Don't clear SSL context when TLS connection is closed, meaning if a user\n  provided an external SSL_CTX they have less chance of leaking references.\n\nBuild:\n- Fix comparison of boolean values in CMake build. Closes #1101.\n- Fix compilation when openssl deprecated APIs are not available.\n  Closes #1094.\n- Man pages can now be built on any system. Closes #1139.\n\n\n1.5.5 - 20181211\n================\n\nSecurity:\n- If `per_listener_settings` is set to true, then the `acl_file` setting was\n  ignored for the \"default listener\" only. This has been fixed. This does not\n  affect any listeners defined with the `listener` option. Closes #1073.\n  This is now tracked as CVE-2018-20145.\n\nBroker:\n- Add `socket_domain` option to allow listeners to disable IPv6 support.\n  This is required to work around a problem in libwebsockets that means\n  sockets only listen on IPv6 by default if IPv6 support is compiled in.\n  Closes #1004.\n- When using ADNS, don't ask for all network protocols when connecting,\n  because this can lead to confusing \"Protocol not supported\" errors if the\n  network is down. Closes #1062.\n- Fix outgoing retained messages not being sent by bridges on initial\n  connection. Closes #1040.\n- Don't reload auth_opt_ options on reload, to match the behaviour of the\n  other plugin options. Closes #1068.\n- Print message on error when installing/uninstalling as a Windows service.\n- All non-error connect/disconnect messages are controlled by the\n  `connection_messages` option. Closes #772. Closes #613. Closes #537.\n\nLibrary:\n- Fix reconnect delay backoff behaviour. Closes #1027.\n- Don't call on_disconnect() twice if keepalive tests fail. Closes #1067.\n\nClient:\n- Always print leading zeros in mosquitto_sub when output format is hex.\n  Closes #1066.\n\nBuild:\n- Fix building where TLS-PSK is not available. Closes #68.\n\n\n1.5.4 - 20181108\n================\n\nSecurity:\n- When using a TLS enabled websockets listener with \"require_certificate\"\n  enabled, the mosquitto broker does not correctly verify client certificates.\n  This is now fixed. All other security measures operate as expected, and in\n  particular non-websockets listeners are not affected by this. Closes #996.\n\nBroker:\n- Process all pending messages even when a client has disconnected. This means\n  a client that send a PUBLISH then DISCONNECT quickly, then disconnects will\n  have its DISCONNECT message processed properly and so no Will will be sent.\n  Closes #7.\n- $SYS/broker/clients/disconnected should never be negative. Closes #287.\n- Give better error message if a client sends a password without a username.\n  Closes #1015.\n- Fix bridge not honoring restart_timeout. Closes #1019.\n- Don't disconnect a client if an auth plugin denies access to SUBSCRIBE.\n  Closes #1016.\n\nLibrary:\n- Fix memory leak that occurred if mosquitto_reconnect() was used when TLS\n  errors were present. Closes #592.\n- Fix TLS connections when using an external event loop with\n  mosquitto_loop_read() and mosquitto_write(). Closes #990.\n\nBuild:\n- Fix clients not being compiled with threading support when using CMake.\n  Closes #983.\n- Header fixes for FreeBSD. Closes #977.\n- Use _GNU_SOURCE to fix build errors in websockets and getaddrinfo usage.\n  Closes #862 and #933.\n- Fix builds on QNX 7.0.0. Closes #1018.\n\n\n1.5.3 - 20180925\n================\n\nSecurity:\n- Fix CVE-2018-12543. If a message is sent to Mosquitto with a topic that\n  begins with $, but is not $SYS, then an assert that should be unreachable is\n  triggered and Mosquitto will exit.\n\nBroker:\n- Elevate log level to warning for situation when socket limit is hit.\n- Remove requirement to use `user root` in snap package config files.\n- Fix retained messages not sent by bridges on outgoing topics at the first\n  connection. Closes #701.\n- Documentation fixes. Closes #520, #600.\n- Fix duplicate clients being added to by_id hash before the old client was\n  removed. Closes #645.\n- Fix Windows version not starting if include_dir did not contain any files.\n  Closes #566.\n- When an authentication plugin denied access to a SUBSCRIBE, the client would\n  be disconnected incorrectly. This has been fixed. Closes #1016.\n\nBuild:\n- Various fixes to ease building.\n\n\n1.5.2 - 20180919\n================\n\nBroker:\n- Fix build when using WITH_ADNS=yes.\n- Fix incorrect call to setsockopt() for TCP_NODELAY. Closes #941.\n- Fix excessive CPU usage when the number of sockets exceeds the system limit.\n  Closes #948.\n- Fix for bridge connections when using WITH_ADNS=yes.\n- Fix round_robin false behaviour. Closes #481.\n- Fix segfault on HUP when bridges and security options are configured.\n  Closes #965.\n\nLibrary:\n- Fix situation where username and password is used with SOCKS5 proxy. Closes\n  #927.\n- Fix SOCKS5 behaviour when passing IP addresses. Closes #927.\n\nBuild:\n- Make it easier to build without bundled uthash.h using \"WITH_BUNDLED_DEPS=no\".\n- Fix build with OPENSSL_NO_ENGINE. Closes #932.\n\n\n1.5.1 - 20180816\n================\n\nBroker:\n- Fix plugin cleanup function not being called on exit of the broker.\n  Closes #900.\n- Print more OpenSSL errors when loading certificates/keys fail.\n- Use AF_UNSPEC etc. instead of PF_UNSPEC to comply with POSIX. Closes #863.\n- Remove use of AI_ADDRCONFIG, which means the broker can be used on systems\n  where only the loopback interface is defined. Closes #869, Closes #901.\n- Fix IPv6 addresses not being able to be used as bridge addresses.\n  Closes #886.\n- All clients now time out if they exceed their keepalive*1.5, rather than\n  just reach it. This was inconsistent in two places.\n- Fix segfault on startup if bridge CA certificates could not be read.\n  Closes #851.\n- Fix problem opening listeners on Pi caused by unsigned char being default.\n  Found via #849.\n- ACL patterns that do not contain either %c or %u now produce a warning in\n  the log. Closes #209.\n- Fix bridge publishing failing when per_listener_settings was true. Closes\n  #860.\n- Fix `use_identity_as_username true` not working. Closes #833.\n- Fix UNSUBACK messages not being logged. Closes #903.\n- Fix possible endian issue when reading the `memory_limit` option.\n- Fix building for libwebsockets < 1.6.\n- Fix accessor functions for username and client id when used in plugin auth\n  check.\n\nLibrary:\n- Fix some places where return codes were incorrect, including to the\n  on_disconnect() callback. This has resulted in two new error codes,\n  MOSQ_ERR_KEEPALIVE and MOSQ_ERR_LOOKUP.\n- Fix connection problems when mosquitto_loop_start() was called before\n  mosquitto_connect_async(). Closes #848.\n\nClients:\n- When compiled using WITH_TLS=no, the default port was incorrectly being set\n  to -1. This has been fixed.\n- Fix compiling on Mac OS X <10.12. Closes #813 and #240.\n\nBuild:\n- Fixes for building on NetBSD. Closes #258.\n- Fixes for building on FreeBSD.\n- Add support for compiling with static libwebsockets library.\n\n\n1.5 - 20180502\n==============\n\nSecurity:\n- Fix memory leak that could be caused by a malicious CONNECT packet.\n  CVE-2017-7654. Closes #533493 (on Eclipse bugtracker)\n\nBroker features:\n- Add per_listener_settings to allow authentication and access control to be\n  per listener.\n- Add limited support for reloading listener settings. This allows settings\n  for an already defined listener to be reloaded, but port numbers must not be\n  changed.\n- Add ability to deny access to SUBSCRIBE messages as well as the current\n  read/write accesses. Currently for auth plugins only.\n- Reduce calls to malloc through the use of UHPA.\n- Outgoing messages with QoS>1 are no longer retried after a timeout period.\n  Messages will be retried when a client reconnects.  This change in behaviour\n  can be justified by considering when the timeout may have occurred.\n  * If a connection is unreliable and has dropped, but without one end\n    noticing, the messages will be retried on reconnection. Sending\n    additional PUBLISH or PUBREL would not have changed anything.\n  * If a client is overloaded/unable to respond/has a slow connection then\n    sending additional PUBLISH or PUBREL would not help the client catch\n    up. Once the backlog has cleared the client will respond. If it is not\n    able to catch up, sending additional duplicates would not help either.\n- Add use_subject_as_username option for certificate based client\n  authentication to use the entire certificate subject as a username, rather\n  than just the CN. Closes #469467.\n- Change sys tree printing output. This format shouldn't be relied upon and\n  may change at any time. Closes #470246.\n- Minimum supported libwebsockets version is now 1.3.\n- Add systemd startup notification and services. Closes #471053.\n- Reduce unnecessary malloc and memcpy when receiving a message and storing\n  it. Closes #470258.\n- Support for Windows XP has been dropped.\n- Bridge connections now default to using MQTT v3.1.1.\n- mosquitto_db_dump tool can now output some stats on clients.\n- Perform utf-8 validation on incoming will, subscription and unsubscription\n  topics.\n- new $SYS/broker/store/messages/count (deprecates $SYS/broker/messages/stored)\n- new $SYS/broker/store/messages/bytes\n- max_queued_bytes feature to limit queues by real size rather than\n  than just message count. Closes Eclipse #452919 or Github #100\n- Add support for bridges to be configured to only send notifications to the\n  local broker.\n- Add set_tcp_nodelay option to allow Nagle's algorithm to be disabled on\n  client sockets. Closes #433.\n- The behaviour of allow_anonymous has changed. In the old behaviour, the\n  default if not set was to allow anonymous access. The new behaviour is to\n  default is to allow anonymous access unless another security option is set.\n  For example, if password_file is set and allow_anonymous is not set, then\n  anonymous access will be denied. It is still possible to allow anonymous\n  access by setting it explicitly.\n\nBroker fixes:\n- Fix UNSUBSCRIBE with no topic is accepted on MQTT 3.1.1. Closes #665.\n- Produce an error if two bridges share the same local_clientid.\n- Miscellaneous fixes on Windows.\n- queue_qos0_messages was not observing max_queued_** limits\n- When using the include_dir configuration option sort the files\n  alphabetically before loading them.  Closes #17.\n- IPv6 is no longer disabled for websockets listeners.\n- Remove all build timestamp information including $SYS/broker/timestamp.\n  Close #651.\n- Correctly handle incoming strings that contain a NULL byte. Closes #693.\n- Use constant time memcmp for password comparisons.\n- Fix incorrect PSK key being used if it had leading zeroes.\n- Fix memory leak if a client provided a username/password for a listener with\n  use_identity_as_username configured.\n- Fix use_identity_as_username not working on websockets clients.\n- Don't crash if an auth plugin returns MOSQ_ERR_AUTH for a username check on\n  a websockets client. Closes #490.\n- Fix 08-ssl-bridge.py test when using async dns lookups. Closes #507.\n- Lines in the config file are no longer limited to 1024 characters long.\n  Closes #652.\n- Fix $SYS counters of messages and bytes sent when message is sent over\n  a Websockets. Closes #250.\n- Fix upgrade_outgoing_qos for retained message. Closes #534.\n- Fix CONNACK message not being sent for unauthorised connect on websockets.\n  Closes #8.\n- Maximum connections on Windows increased to 2048.\n- When a client with an in-use client-id connects, if the old client has a\n  will, send the will message. Closes #26.\n- Fix parsing of configuration options that end with a space. Closes #804.\n\nClient library features:\n- Outgoing messages with QoS>1 are no longer retried after a timeout period.\n  Messages will be retried when a client reconnects.\n- DNS-SRV support is now disabled by default.\n- Add mosquitto_subscribe_simple() This is a helper function to make\n  retrieving messages from a broker very straightforward. Examples of its use\n  are in examples/subscribe_simple.\n- Add mosquitto_subscribe_callback() This is a helper function to make\n  processing messages from a broker very straightforward. An example of its use\n  is in examples/subscribe_simple.\n- Connections now default to using MQTT v3.1.1.\n- Add mosquitto_validate_utf8() to check whether a string is valid UTF-8\n  according to the UTF-8 spec and to the additional restrictions imposed by\n  the MQTT spec.\n- Topic inputs are checked for UTF-8 validity.\n- Add mosquitto_userdata function to allow retrieving the client userdata\n  member variable. Closes #111.\n- Add mosquitto_pub_topic_check2(), mosquitto_sub_topic_check2(), and\n  mosquitto_topic_matches_sub2() which are identical to the similarly named\n  functions but also take length arguments.\n- Add mosquitto_connect_with_flags_callback_set(), which allows a second\n  connect callback to be used which also exposes the connect flags parameter.\n  Closes #738 and #128.\n- Add MOSQ_OPT_SSL_CTX option to allow a user specified SSL_CTX to be used\n  instead of the one generated by libmosquitto. This allows greater control\n  over what options can be set. Closes #715.\n- Add MOSQ_OPT_SSL_CTX_WITH_DEFAULTS to work with MOSQ_OPT_SSL_CTX and have\n  the default libmosquitto SSL_CTX configuration applied to the user provided\n  SSL_CTX. Closes #567.\n\nClient library fixes:\n- Fix incorrect PSK key being used if it had leading zeroes.\n- Initialise \"result\" variable as soon as possible in\n  mosquitto_topic_matches_sub. Closes #654.\n- No need to close socket again if setting non-blocking failed. Closes #649.\n- Fix mosquitto_topic_matches_sub() not correctly matching foo/bar against\n  foo/+/#. Closes #670.\n- SNI host support added.\n\nClient features:\n- Add -F to mosquitto_sub to allow the user to choose the output format.\n- Add -U to mosquitto_sub for unsubscribing from topics.\n- Add -c (clean session) to mosquitto_pub.\n- Add --retained-only to mosquitto_sub to exit after receiving all retained\n  messages.\n- Add -W to allow mosquitto_sub to stop processing incoming messages after a\n  timeout.\n- Connections now default to using MQTT v3.1.1.\n- Default to using port 8883 when using TLS.\n- mosquitto_sub doesn't continue to keep connecting if CONNACK tells it the\n  connection was refused.\n\nClient fixes:\n- Correctly handle empty files with \"mosquitto_pub -l\". Closes #676.\n\nBuild:\n- Add WITH_STRIP option (defaulting to \"no\") that when set to \"yes\" will strip\n  executables and shared libraries when installing.\n- Add WITH_STATIC_LIBRARIES (defaulting to \"no\") that when set to \"yes\" will\n  build and install static versions of the client libraries.\n- Don't run TLS-PSK tests if TLS-PSK disabled at compile time. Closes #636.\n- Support for openssl versions 1.0.0 and 1.0.1 has been removed as these are\n  no longer supported by openssl.\n\nDocumentation:\n- Replace mentions of deprecated 'c_rehash' with 'openssl rehash'.\n\n1.4.15 - 20180228\n=================\n\nSecurity:\n- Fix CVE-2017-7652. If a SIGHUP is sent to the broker when there are no more\n  file descriptors, then opening the configuration file will fail and security\n  settings will be set back to their default values.\n- Fix CVE-2017-7651. Unauthenticated clients can cause excessive memory use by\n  setting \"remaining length\" to be a large value. This is now mitigated by\n  limiting the size of remaining length to valid values. A \"memory_limit\"\n  configuration option has also been added to allow the overall memory used by\n  the broker to be limited.\n\nBroker:\n- Use constant time memcmp for password comparisons.\n- Fix incorrect PSK key being used if it had leading zeroes.\n- Fix memory leak if a client provided a username/password for a listener with\n  use_identity_as_username configured.\n- Fix use_identity_as_username not working on websockets clients.\n- Don't crash if an auth plugin returns MOSQ_ERR_AUTH for a username check on\n  a websockets client. Closes #490.\n- Fix 08-ssl-bridge.py test when using async dns lookups. Closes #507.\n- Lines in the config file are no longer limited to 1024 characters long.\n  Closes #652.\n- Fix $SYS counters of messages and bytes sent when message is sent over\n  a Websockets. Closes #250.\n- Fix upgrade_outgoing_qos for retained message. Closes #534.\n- Fix CONNACK message not being sent for unauthorised connect on websockets.\n  Closes #8.\n\nClient library:\n- Fix incorrect PSK key being used if it had leading zeroes.\n- Initialise \"result\" variable as soon as possible in\n  mosquitto_topic_matches_sub. Closes #654.\n- No need to close socket again if setting non-blocking failed. Closes #649.\n- Fix mosquitto_topic_matches_sub() not correctly matching foo/bar against\n  foo/+/#. Closes #670.\n\nClients:\n- Correctly handle empty files with \"mosquitto_pub -l\". Closes #676.\n\nBuild:\n- Don't run TLS-PSK tests if TLS-PSK disabled at compile time. Closes #636.\n\n\n1.4.14 - 20170710\n=================\n\nBroker:\n- Fix regression from 1.4.13 where persistence data was not being saved.\n\n\n1.4.13 - 20170627\n=================\n\nSecurity:\n- Fix CVE-2017-9868. The persistence file was readable by all local users,\n  potentially allowing sensitive information to be leaked.\n  This can also be fixed administratively, by restricting access to the\n  directory in which the persistence file is stored.\n\nBroker:\n- Fix for poor websockets performance.\n- Fix lazy bridges not timing out for idle_timeout. Closes #417.\n- Fix problems with large retained messages over websockets. Closes #427.\n- Set persistence file to only be readable by owner, except on Windows. Closes\n  #468.\n- Fix CONNECT check for reserved=0, as per MQTT v3.1.1 check MQTT-3.1.2-3.\n- When the broker stop, wills for any connected clients are now \"sent\". Closes\n  #477.\n- Auth plugins can be configured to disable the check for +# in\n  usernames/client ids with the auth_plugin_deny_special_chars option.\n  Partially closes #462.\n- Restrictions for CVE-2017-7650 have been relaxed - '/' is allowed in\n  usernames/client ids. Remainder of fix for #462.\n\nClients:\n- Don't use / in auto-generated client ids.\n\n\n1.4.12 - 20170528\n=================\n\nSecurity:\n- Fix CVE-2017-7650, which allows clients with username or client id set to\n  '#' or '+' to bypass pattern based ACLs or third party plugins. The fix\n  denies message sending or receiving of messages for clients with a '#' or\n  '+' in their username or client id and if the message is subject to a\n  pattern ACL check or plugin check.\n  Patches for other versions are available at\n  https://mosquitto.org/files/cve/2017-7650/\n\nBroker:\n- Fix mosquitto.db from becoming corrupted due to client messages being\n  persisted with no stored message. Closes #424.\n- Fix bridge not restarting properly. Closes #428.\n- Fix unitialized memory in gets_quiet on Windows. Closes #426.\n- Fix building with WITH_ADNS=no for systems that don't use glibc. Closes\n  #415.\n- Fixes to readme.md.\n- Fix deprecation warning for OpenSSL 1.1. PR #416.\n- Don't segfault on duplicate bridge names. Closes #446.\n- Fix CVE-2017-7650.\n\n\n1.4.11 - 20170220\n=================\n\nBroker:\n- Fix crash when \"lazy\" type bridge attempts to reconnect. Closes #259.\n- maximum_connections now applies to websockets listeners. Closes #271.\n- Allow bridges to use TLS with IPv6.\n- Don't error on zero length persistence files. Closes #316.\n- For http only websockets clients, close files served over http in all cases\n  when the client disconnects. Closes #354.\n- Fix error message when websockets http_dir directory does not exist.\n- Improve password utility error message. Closes #379.\n\nClients:\n- Use of --ciphers no longer requires you to also pass --tls-version.\n  Closes #380.\n\nClient library:\n- Clients can now use TLS with IPv6.\n- Fix potential socket leakage when reconnecting. Closes #304.\n- Fix potential negative timeout being passed to pselect. Closes #329.\n\n\n1.4.10 - 20160816\n=================\n\nBroker:\n- Fix TLS operation with websockets listeners and libwebsockts 2.x. Closes\n  #186.\n- Don't disconnect client on HUP before reading the pending data. Closes #7.\n- Fix some $SYS messages being incorrectly persisted. Closes #191.\n- Support OpenSSL 1.1.0.\n- Call fsync after persisting data to ensure it is correctly written. Closes\n  #189.\n- Fix persistence saving of subscription QoS on big-endian machines.\n- Fix will retained flag handling on Windows. Closes #222.\n- Broker now displays an error if it is unable to open the log file. Closes\n  #234.\n\nClient library:\n- Support OpenSSL 1.1.0.\n- Fixed the C++ library not allowing SOCKS support to be used. Closes #198.\n- Fix memory leak when verifying a server certificate with a subjectAltName\n  section. Closes #237.\n\nBuild:\n- Don't attempt to install docs when WITH_DOCS=no. Closes #184.\n\n\n1.4.9 - 20160603\n================\n\nBroker:\n- Ensure websockets clients that previously connected with clean session set\n  to false have their queued messages delivered immediately on reconnecting.\n  Closes #476314.\n- Reconnecting client with clean session set to false doesn't start with mid=1\n  again.\n- Will topic isn't truncated by one byte when using a mount_point any more.\n- Network errors are printed correctly on Windows.\n- Fix incorrect $SYS heap memory reporting when using ACLs.\n- Bridge config parameters couldn't contain a space, this has been fixed.\n  Closes #150.\n- Fix saving of persistence messages that start with a '/'. Closes #151.\n- Fix reconnecting for bridges that use TLS on Windows. Closes #154.\n- Broker and bridges can now cope with unknown incoming PUBACK, PUBREC,\n  PUBREL, PUBCOMP without disconnecting. Closes #57.\n- Fix websockets listeners not being able to bind to an IP address. Closes\n  #170.\n- mosquitto_passwd utility now correctly deals with unknown command line\n  arguments in all cases. Closes #169.\n- Fix publishing of $SYS/broker/clients/maximum\n- Fix order of #includes in lib/send_mosq.c to ensure struct mosquitto doesn't\n  differ between source files when websockets is being used. Closes #180.\n- Fix possible rare crash when writing out persistence file and a client has\n  incomplete messages inflight that it has been denied the right to publish.\n\nClient library:\n- Fix the case where a message received just before the keepalive timer\n  expired would cause the client to miss the keepalive timer.\n- Return value of pthread_create is now checked.\n- _mosquitto_destroy should not cancel threads that weren't created by\n  libmosquitto. Closes #166.\n- Clients can now cope with unknown incoming PUBACK, PUBREC, PUBREL, PUBCOMP\n  without disconnecting. Closes #57.\n- Fix mosquitto_topic_matches_sub() reporting matches on some invalid\n   subscriptions.\n\nClients:\n- Handle some unchecked malloc() calls. Closes #1.\n\nBuild:\n- Fix string quoting in CMakeLists.txt. Closes #4.\n- Fix building on Visual Studio 2015. Closes #136.\n\n\n1.4.8 - 20160214\n================\n\nBroker:\n- Wills published by clients connected to a listener with mount_point defined\n  now correctly obey the mount point. This was a potential security risk\n  because it allowed clients to publish messages outside of their restricted\n  mount point. This is only affects brokers where the mount_point option is in\n  use. Closes #487178.\n- Fix detection of broken connections on Windows. Closes #485143.\n- Close stdin etc. when daemonised. Closes #485589.\n- Fix incorrect detection of FreeBSD and OpenBSD. Closes #485131.\n\nClient library:\n- mosq->want_write should be cleared immediately before a call to SSL_write,\n  to allow clients using mosquitto_want_write() to get accurate results.\n\n\n1.4.7 - 20151221\n================\n\nBroker:\n- Fix support for libwebsockets 1.22.\n\n\n1.4.6 - 20151220\n================\n\nBroker:\n- Add support for libwebsockets 1.6.\n\nClient library:\n- Fix _mosquitto_socketpair() on Windows, reducing the chance of delays when\n  publishing. Closes #483979.\n\nClients:\n- Fix \"mosquitto_pub -l\" stripping the final character on a line. Closes\n  #483981.\n\n\n1.4.5 - 20151108\n================\n\nBroker:\n- Fix possible memory leak if bridge using SSL attempts to connect to a\n  host that is not up.\n- Free unused topic tree elements (fix in 1.4.3 was incomplete). Closes\n  #468987.\n\nClients:\n- \"mosquitto_pub -l\" now no longer limited to 1024 byte lines. Closes #478917.\n\n\n1.4.4 - 20150916\n================\n\nBroker:\n- Don't leak sockets when outgoing bridge with multiple addresses cannot\n  connect. Closes #477571.\n- Fix cross compiling of websockets. Closes #475807.\n- Fix memory free related crashes on openwrt. Closes #475707.\n- Fix excessive calls to message retry check.\n\n\n1.4.3 - 20150818\n================\n\nBroker:\n- Fix incorrect bridge notification on initial connection. Closes #467096.\n- Build fixes for OpenBSD.\n- Fix incorrect behaviour for autosave_interval, most noticable for\n  autosave_interval=1. Closes #465438.\n- Fix handling of outgoing QoS>0 messages for bridges that could not be sent\n  because the bridge connection was down.\n- Free unused topic tree elements. Closes #468987.\n- Fix some potential memory leaks. Closes #470253.\n- Fix potential crash on libwebsockets error.\n\nClient library:\n- Add missing error strings to mosquitto_strerror.\n- Handle fragmented TLS packets without a delay. Closes #470660.\n- Fix incorrect loop timeout being chosen when using threaded interface and\n  keepalive = 0. Closes #471334.\n- Increment inflight messages count correctly. Closes #474935.\n\nClients:\n- Report error string on connection failure rather than error code.\n\n\n1.4.2 - 20150507\n================\n\nBroker:\n- Fix bridge prefixes only working for the first outgoing message. Closes\n  #464437.\n- Fix incorrect bridge connection notifications on local broker.\n- Fix persistent db writing on Windows. Closes #464779.\n- ACLs are now checked before sending a will message.\n- Fix possible crash when using bridges on Windows. Closes #465384.\n- Fix parsing of auth_opt_ arguments with extra spaces/tabs.\n- Broker will return CONNACK rc=5 when a username/password is not authorised.\n  This was being incorrectly set as rc=4.\n- Fix handling of payload lengths>4096 with websockets.\n\nClient library:\n- Inflight message count wasn't being decreased for outgoing messages using\n  QoS 2, meaning that only up to 20 QoS 2 messages could be sent. This has\n  been fixed. Closes #464436.\n- Fix CMake dependencies for C++ wrapper building. Closes #463884.\n- Fix possibility of select() being called with a socket that is >FD_SETSIZE.\n  This is a fix for #464632 that will be followed up by removing the select()\n  call in a future version.\n- Fix calls to mosquitto_connect*_async() not completing.\n\n\n1.4.1 - 20150403\n================\n\nBroker:\n- Fix possible crash under heavy network load. Closes #463241.\n- Fix possible crash when using pattern ACLs.\n- Fix problems parsing config strings with multiple leading spaces. Closes\n  #462154.\n- Websockets clients are now periodically disconnected if they have not\n  maintained their keepalive timer. Closes #461619.\n- Fix possible minor memory leak on acl parsing.\n\nClient library:\n- Inflight limits should only apply to outgoing messages. Closes #461620.\n- Fix reconnect bug on Windows. Closes #463000.\n- Return -1 on error from mosquitto_socket(). Closes #461705.\n- Fix crash on multiple calls to mosquitto_lib_init/mosquitto_lib_cleanup.\n  Closes #462780.\n- Allow longer paths on Windows. Closes #462781.\n- Make _mosquitto_mid_generate() thread safe. Closes #463479.\n\n\n1.4 - 20150218\n==============\n\nImportant changes:\n- Websockets support in the broker.\n- Bridge behaviour on the local broker has changed due to the introduction of\n  the local_* options. This may affect you if you are using authentication\n  and/or ACLs with bridges.\n- The default TLS behaviour has changed to accept all of TLS v1.2, v1.1 and\n  v1.0, rather than only only one version of the protocol. It is still\n  possible to restrict a listener to a single version of TLS.\n- The Python client has been removed now that the Eclipse Paho Python client\n  has had a release.\n- When a durable client reconnects, its queued messages are now checked\n  against ACLs in case of a change in username/ACL state since it last\n  connected.\n- New use_username_as_clientid option on the broker, for preventing hijacking\n  of a client id.\n- The client library and clients now have experimental SOCKS5 support.\n- Wildcard TLS certificates are now supported for bridges and clients.\n- The clients have support for config files with default options.\n- Client and client libraries have support for MQTT v3.1.1.\n- Bridge support for MQTT v3.1.1.\n\n\nBroker:\n- Websockets support in the broker.\n- Add local_clientid, local_username, local_password for bridge connections to\n  authenticate to the local broker.\n- Default TLS mode now accepts TLS v1.2, v1.1 and v1.0.\n- Support for ECDHE-ECDSA family ciphers.\n- Fix bug #1324411, which could have had unexpected consequences for delayed\n  messages in rare circumstances.\n- Add support for \"session present\" in CONNACK messages for MQTT v3.1.1.\n- Remove strict protocol #ifdefs.\n- Change $SYS/broker/clients/active -> $SYS/broker/clients/connected\n- Change $SYS/broker/clients/inactive -> $SYS/broker/clients/disconnected\n- When a durable client reconnects, its queued messages are now checked\n  against ACLs in case of a change in username/ACL state since it last\n  connected.\n- libuuid is used to generate client ids, where it is available, when an MQTT\n  v3.1.1 client connects with a zero length client id.\n- Anonymous clients are no longer accidently disconnected from the broker\n  after a SIGHUP.\n- mosquitto_passwd now supports -b (batch mode) to allow the password to be\n  provided at the command line.\n- Removed $SYS/broker/changeset. This was intended for use with debugging, but\n  in practice is of no use.\n- Add support for use_username_as_clientid which can be used with\n  authentication to restrict ownership of client ids and hence prevent one\n  client disconnecting another by using the same client id.\n- When \"require_certificate\" was false, the broker was incorrectly asking for\n  a certificate (but not checking it). This caused problems with some clients\n  and has been fixed so the broker no longer asks.\n- When using syslog logging on non-Windows OSs, it is now possible to specify\n  the logging facility to one of local0-7 instead of the default \"daemon\".\n- The bridge_attempt_unsubscribe option has been added, to allow the sending\n  of UNSUBSCRIBE requests to be disabled for topics with \"out\" direction.\n  Closes bug #456899.\n- Wildcard TLS certificates are now supported for bridges.\n- Support for \"hour\" client expiration lengths for the\n  persistent_client_expiration option. Closes bug #425835.\n- Bridge support for MQTT v3.1.1.\n- Root privileges are now dropped after starting listeners and loading\n  certificates/private keys, to allow private keys to have their permissions\n  restricted to the root user only. Closes bug #452914.\n- Usernames and topics given in ACL files can now include a space. Closes bug\n  #431780.\n- Fix hang if pattern acl contains a %u but an anonymous client connect.\n  Closes bug #455402.\n- Fix man page installation with cmake. Closes bug #458843.\n- When using \"log_dest file\" the output file is now flushed periodically.\n\nClients:\n- Both clients can now load default configuration options from a file.\n- Add -C option to mosquitto_sub to allow the client to quit after receiving a\n  certain count of messages. Closes bug #453850.\n- Add --proxy SOCKS5 support for both clients.\n- Pub client supports setting its keepalive. Closes bug #454852.\n- Add support for config files with default options.\n- Add support for MQTT v3.1.1.\n\nClient library:\n- Add experimental SOCKS5 support.\n- mosquitto_loop_forever now quits after a fatal error, rather than blindly\n  retrying.\n- SRV support is now not compiled in by default.\n- Wildcard TLS certificates are now supported.\n- mosquittopp now has a virtual destructor. Closes bug #452915.\n- Add support for MQTT v3.1.1.\n- Don't quit mosquitto_loop_forever() if broker not available on first\n  connect. Closes bug #453293, but requires more work.\n- Don't reset queued messages state on CONNACK. Fixes bug with duplicate\n  messages on connection.\n\n\n1.3.5 - 20141008\n================\n\nBroker:\n- Fix possible memory leak when using a topic that has a leading slash. Fixes\n  bug #1360985.\n- Fix saving persistent database on Windows.\n- Temporarily disable ACL checks on subscriptions when using MQTT v3.1.1. This\n  is due to the complexity of checking wildcard ACLs against wildcard\n  subscriptions. This does not have a negative impact on security because\n  checks are still made before a message is sent to a client.\n  Fixes bug #1374291.\n- When using -v and the broker receives a SIGHUP, verbose logging was being\n  disabled. This has been fixed.\n\nClient library:\n- Fix mutex being incorrectly passed by value. Fixes bug #1373785.\n\n1.3.4 - 20140806\n================\n\nBroker:\n- Don't ask client for certificate when require_certificate is false.\n- Backout incomplete functionality that was incorrectly included in 1.3.2.\n\n1.3.3 - 20140801\n================\n\nBroker:\n- Fix incorrect handling of anonymous bridges on the local broker.\n\n1.3.2 - 20140713\n================\n\nBroker:\n- Don't allow access to clients when authenticating if a security plugin\n  returns an application error. Fixes bug #1340782.\n- Ensure that bridges verify certificates by default when using TLS.\n- Fix possible crash when using pattern ACLs that do not include a %u and\n  clients that connect without a username.\n- Fix subscriptions being deleted when clients subscribed to a topic beginning\n  with a $ but that is not $SYS.\n- When a durable client reconnects, its queued messages are now checked\n  against ACLs in case of a change in username/ACL state since it last\n  connected.\n- Fix bug #1324411, which could have had unexpected consequences for delayed\n  messages in rare circumstances.\n- Anonymous clients are no longer accidently disconnected from the broker\n  after a SIGHUP.\n\nClient library:\n- Fix topic matching edge case.\n- Fix callback deadlocks after calling mosquitto_disconnect(), when using the\n  threaded interfaces. Closes bug #1313725.\n- Fix SRV support when building with CMake.\n- Remove strict protocol #ifdefs.\n\nGeneral:\n- Use $(STRIP) for stripping binaries when installing, to allow easier cross\n  compilation.\n\n1.3.1 - 20140324\n================\n\nBroker:\n- Prevent possible crash on client reconnect. Closes bug #1294108.\n- Don't accept zero length unsubscription strings (MQTT v3.1.1 fix)\n- Don't accept QoS 3 (MQTT v3.1.1 fix)\n- Don't disconnect clients immediately on HUP to give chance for all data to\n  be read.\n- Reject invalid un/subscriptions e.g. foo/+bar #/bar.\n- Take more care not to disconnect clients that are sending large messages.\n\nClient library:\n- Fix socketpair code on the Mac.\n- Fix compilation for WITH_THREADING=no.\n- Break out of select() when calling mosquitto_loop_stop().\n- Reject invalid un/subscriptions e.g. foo/+bar #/bar.\n- Add mosquitto_threaded_set().\n\nClients:\n- Fix keepalive value on mosquitto_pub.\n- Fix possibility of mosquitto_pub not exiting after sending messages when\n  using -l.\n\n1.3 - 20140316\n==============\n\nBroker:\n- The broker no longer ignores the auth_plugin_init() return value.\n- Accept SSLv2/SSLv3 HELLOs when using TLSv1, whilst keeping SSLv2 and SSLv3\n  disabled. This increases client compatibility without sacrificing security.\n- The $SYS tree can now be disabled at runtime as well as at compile time.\n- When remapping bridged topics, only check for matches when the message\n  direction is correct. This allows two identical topics to be remapped\n  differently for both in and out.\n- Change \"$SYS/broker/heap/current size\" to \"$SYS/broker/heap/current\" for\n  easier parsing.\n- Change \"$SYS/broker/heap/maximum size\" to \"$SYS/broker/heap/maximum\" for\n  easier parsing.\n- Topics are no longer normalised from e.g a///topic to a/topic. This matches\n  the behaviour as clarified by the Oasis MQTT spec. This will lead to\n  unexpected behaviour if you were using topics of this form.\n- Log when outgoing messages for a client begin to drop off the end of the\n  queue.\n- Bridge clients are recognised as bridges even after reloading from\n  persistence.\n- Basic support for MQTT v3.1.1. This does not include being able to bridge to\n  an MQTT v3.1.1 broker.\n- Username is displayed in log if present when a client connects.\n- Support for 0 length client ids (v3.1.1 only) that result in automatically\n  generated client ids on the broker (see option allow_zero_length_clientid).\n- Ability to set the prefix of automatically generated client ids (see option\n  auto_id_prefix).\n- Add support for TLS session resumption.\n- When using TLS, the server now chooses the cipher to use when negotiating\n  with the client.\n- Weak TLS ciphers are now disabled by default.\n\nClient library:\n- Fix support for Python 2.6, 3.0, 3.1.\n- Add support for un/subscribing to multiple topics at once in un/subscribe().\n- Clients now close their socket after sending DISCONNECT.\n- Python client now contains its version number.\n- C library mosquitto_want_write() now supports TLS clients.\n- Fix possible memory leak in C/C++ library when communicating with\n  a broker that doesn't follow the spec.\n- Return strerror() through mosquitto_strerror() to make error printing\n  easier.\n- Topics are no longer normalised from e.g a///topic to a/topic. This matches\n  the behaviour as clarified by the Oasis MQTT spec. This will lead to\n  unexpected behaviour if you were using topics of this form.\n- Add support for SRV lookups.\n- Break out of select() on publish(), subscribe() etc. when using the threaded\n  interface. Fixes bug #1270062.\n- Handle incoming and outgoing messages separately. Fixes bug #1263172.\n- Don't terminate threads on mosquitto_destroy() when a client is not using\n  the threaded interface but does use their own thread. Fixes bug #1291473.\n\nClients:\n- Add --ciphers to allow specifying which TLS ciphers to support.\n- Add support for SRV lookups.\n- Add -N to sub client to suppress printing of EOL after the payload.\n- Add -T to sub client to suppress printing of a topic hierarchy.\n\n1.2.3 - 20131202\n================\n\nBroker:\n- Don't always attempt to call read() for SSL clients, irrespective of whether\n  they were ready to read or not. Reduces syscalls significantly.\n- Possible memory leak fixes.\n- Further fix for bug #1226040: multiple retained messages being delivered for\n  subscriptions ending in #.\n- Fix bridge reconnections when using multiple bridge addresses.\n\nClient library:\n- Fix possible memory leak in C/C++ library when communicating with\n  a broker that doesn't follow the spec.\n- Block in Python loop_stop() until all messages are sent, as the\n  documentation states should happen.\n- Fix for asynchronous connections on Windows. Closes bug #1249202.\n- Module version is now available in mosquitto.py.\n\nClients:\n- mosquitto_sub now uses fwrite() instead of printf() to output messages, so\n  messages with NULL characters aren't truncated.\n\n1.2.2 - 20131021\n================\n\nBroker:\n- Fix compliance with max_inflight_messages when a non-clean session client\n  reconnects. Closes one of the issues on bug #1237389.\n\nClient library:\n- Fix incorrect inflight message accounting, which caused messages to go\n  unsent. Partial fix for bug #1237351.\n- Fix potential memory corruption when sending QoS>0 messages at a high rate\n  using the threaded interface. Further fix for #1237351.\n- Fix incorrect delay scaling when exponential_backoff=true in\n  mosquitto_reconnect_delay_set().\n- Some pep8 fixes for Python.\n\n1.2.1 - 20130918\n================\n\nBroker:\n- The broker no longer ignores the auth_plugin_init() return value. Closes\n  bug #1215084.\n- Use RTLD_GLOBAL when opening authentication plugins on posix systems. Fixes\n  resolving of symbols in libraries used by authentication plugins.\n- Add/fix some config documentation.\n- Fix ACLs for topics with $SYS.\n- Clients loaded from the persistence file on startup were not being added to\n  the client hash, causing subtle problems when the client reconnected,\n  including ACLs failing. This has been fixed.\n- Add note to mosquitto-tls man page stating that certificates need to be\n  unique. Closes bug #1221285.\n- Fix incorrect retained message delivery when using wildcard subs in some\n  circumstances. Fixes bug #1226040.\n\nClient library:\n- Fix support for Python 2.6, 3.0, 3.1.\n- Fix TLS subjectAltName verification and segfaults.\n- Handle EAGAIN in Python on Windows. Closes bug #1220004.\n- Fix compilation when using WITH_TLS=no.\n- Don't fail reconnecting in Python when broker is temporarily unavailable.\n\n1.2 - 20130708\n==============\n\nBroker:\n- Replace O(n) username lookup on CONNECT with a roughly O(1) hashtable version.\n- It is now possible to disable $SYS at compile time.\n- Add dropped publish messages to load tree in $SYS. Closes bug #1183318.\n- Add support for logging SUBSCRIBE/UNSUBSCRIBE events.\n- Add \"log_dest file\" logging support.\n- Auth plugin ACL check function now passes the client id as well as username\n  and password.\n- The queue_qos0_messages option wasn't working correctly, this has now been\n  fixed. Closes bug #1125200.\n- Don't drop all messages for disconnected durable clients when\n  max_queued_messages=0.\n- Add support for \"log_type all\".\n- Add support for \"-v\" option on the command line to provide the equivalent of\n  \"log_type all\" without needing a config file.\n- Add the \"upgrade_outgoing_qos\" option, a non-standard feature.\n- Persistence data is now written to a temporary file which is atomically\n  renamed on completion, so a crash during writing will not produce a corrupt\n  file.\n- mosquitto.conf is now installed as mosquitto.conf.example\n- Configuration file errors are now reported with filename and line number.\n- The broker now uses a monotonic clock if available, to avoid changes in time\n  causing client disconnections or message retries.\n- Clean session and keepalive status are now display the log when a client\n  connects.\n- Add support for TLSv1.2 and TLSv1.1.\n- Clients that connect with zero length will topics are now rejected.\n- Add the ability to set a maximum allowed PUBLISH payload size.\n- Fix an ACL with topic \"#\" incorrectly granting access to $SYS.\n- Fix retained messages incorrectly being set on wildcard topics, leading to\n  duplicate retained messages being sent on subscription. Closes bug #1116233.\n- Don't discard listener values when no \"port\" option given. Closes bug\n  #1131406.\n- Client password check was always failing when security was being reapplied\n  after a config reload. This meant that all clients were being disconnected.\n  This has been fixed.\n- Fix build when WITH_TLS=no. Closes bug #1174971.\n- Fix single outgoing packets not being sent in a timely fashion if they were\n  not sent in one call to write(). Closes bug #1176796.\n- Fix remapping of messages for clients connected to a listener with\n  mount_point set. Closes bug #1180765.\n- Fix duplicate retained messages being sent for some wildcard patterns.\n- If a client connects with a will topic to which they do not have write\n  access, they are now disconnected with CONNACK \"not authorised\".\n- Fix retained messages on topic foo being incorrectly delivered to\n  subscriptions of /#\n- Fix handling of SSL errors on SSL_accept().\n- Fix handling of QoS 2 messages on client reconnect.\n- Drop privileges now sets supplementary groups correctly.\n- Fix load reporting interval (is now 60s).\n- Be strict with malformed PUBLISH packets - clients are now disconnected\n  rather than the packet discarded. This goes inline with future OASIS spec\n  changes and makes other changes more straightforward.\n- Process incoming messages denied by ACL properly so that clients don't keep\n  resending them.\n\n- Add support for round_robin bridge option.\n- Add bridge support for verifying remote server certificate subject against\n  the remote hostname.\n- Fix problem with out of order calls to free() when restarting a lazy bridge.\n- The broker now attempts to resolve bind_address and bridge addresses\n  immediately when parsing the config file in order to detect invalid hosts.\n- Bridges now set their notification state before attempting to connect, so if\n  they fail to connect the state can still be seen.\n- Fix bridge notification payload length - no need to send a null byte.\n\n- mosquitto_passwd utility now reports errors more clearly.\n- Fix \"mosquitto_passwd -U\".\n\nClient library:\n- Add support for TLSv1.2 and TLSv1.1, except for on the Python module.\n- Add support for verifying remote server certificate subject against the\n  remote hostname.\n- Add mosquitto_reconnect_async() support and make asynchronous connections\n  truely asynchronous rather than simply deferred. DNS lookups are still\n  blocking, so asynchronous connections require an IP address instead of\n  hostname.\n- Allow control of reconnection timeouts in mosquitto_loop_forever() and after\n  mosquitto_loop_start() by using mosquitto_reconnect_delay_set().\n- Fix building on Android NDK.\n- Re-raise unhandled errors in Python so as not to provide confusing error\n  messages later on.\n- Python module supports IPv6 connections.\n- mosquitto_sub_topic_tokenise() was behaving incorrectly if the last topic\n  hierarchy had only a single character. This has been fixed. Closes bug\n  #1163348.\n- Fix possible crash after disconnects when using the threaded interface with\n  TLS.\n- Allow build/install without Python. Closes bug #1174972.\n- Add support for binding connection to a local interface.\n- Implement maximum inflight messages handling.\n- Fix Python client not handling will_payload==None.\n- Fix potential memory leak when setting username/password.\n- Fix handling of QoS 2 messages on reconnect.\n- Improve handling of mosquitto_disconnect() with threaded mode.\n\n\nClients:\n- Add support for TLSv1.2 and TLSv1.1.\n- Sub client can now suppress printing of messages with the retain bit set.\n- Add support for binding connection to a local interface.\n- Implement maximum inflight messages handling for the pub client.\n\n1.1.3 - 20130211\n================\n\nBroker:\n- mosquitto_passwd utility now uses tmpfile() to generate its temporary data\n  storage file. It also creates a backup file that can be used to recover data\n  if an errors occur.\n\nOther:\n- Build script fixes to help packaging on Debian.\n\n1.1.2 - 20130130\n================\n\nClient library:\n- Fix tls_cert_reqs not being set to SSL_VERIFY_PEER by default. This meant\n  that clients were not verifying the server certificate when connecting over\n  TLS. This affects the C, C++ and Python libraries.\n\n1.1.1 - 20130116\n================\n\nBroker:\n- Fix crash on reload if using acl patterns.\n\nClient library:\n- Fix static C++ functions not being exported on Windows. Fixes bug #1098256.\n\n1.1 - 20121219\n==============\n\nBroker:\n- Add $SYS/broker/messages/dropped\n- Add $SYS/broker/clients/expired\n- Replace $SYS/broker/+/per second/+ with moving average versions published at\n  $SYS/broker/load/#\n- Add $SYS/broker/load/sockets/+ and $SYS/broker/load/connections/+\n- Documentation on password file format has been fixed.\n- Disable SSL compression. This reduces memory usage significantly and removes\n  the possibility of CRIME type attacks.\n- Enable SSL_MODE_RELEASE_BUFFERS mode to reduce SSL memory usage further.\n- Add allow_duplicate_messages option.\n- ACL files can now have comment lines with # as the first character.\n- Display message on startup about which config is being loaded.\n- Fix max_inflight_messages and max_queued_messages not being applied.\n- Fix documentation error in mosquitto.conf.\n- Ensure that QoS 2 queued messages are sent out in a timely manner.\n- Local bridges now act on clean_session correctly.\n- Local bridges with clean_session==false now remove unused subscriptions on\n  broker restart.\n- The $SYS/broker/heap/# messages now no longer include \"bytes\" as part of the\n  string for ease of use.\n\nClient library:\n- Free memory used by OpenSSL in mosquitto_lib_cleanup() where possible.\n- Change WebSocket subprotocol name to mqttv3.1 to make future changes easier\n  and for compatibility with other implementations.\n- mosquitto_loop_read() and mosquitto_loop_write() now handle errors\n  themselves rather than having mosquitto_loop() handle their errors. This\n  makes using them in a separate event loop more straightforward.\n- Add mosquitto_loop_forever() / loop_forever() function call to make simple\n  clients easier.\n- Disable SSL compression. This reduces memory usage significantly and removes\n  the possibility of CRIME type attacks.\n- Enable SSL_MODE_RELEASE_BUFFERS mode to reduce SSL memory usage further.\n- mosquitto_tls_set() will now return an error or raise an exception\n  immediately if the CA certificate or client certificate/key cannot be\n  accessed.\n- Fix potential memory leaks on connection failures.\n- Don't produce return error from mosquitto_loop() if a system call is\n  interrupted. This prevents disconnects/reconnects in threaded mode and\n  simplifies non-threaded client handling.\n- Ignore SIGPIPE to prevent unnecessary client quits in threaded mode.\n- Fix document error for mosquitto_message_retry_set().\n- Fix mosquitto_topic_matches_sub() for subscriptions with + as the final\n  character. Fixes bug #1085797.\n- Rename all \"obj\" parameters to \"userdata\" for consistency with other\n  libraries.\n- Reset errno before network read/write to ensure EAGAIN isn't mistakenly\n  returned.\n- The message queue length is now tracked and used to determine the maximum\n  number of packets to process at once. This removes the need for the\n  max_packets parameter which is now unused.\n- Fix incorrect error value in Python error_string() function. Fixes bug\n  #1086777.\n- Reset last message in/out timer in Python module when we send a PINGREQ.\n  Fixes too-early disconnects.\n\nClients:\n- Clients now display their own version number and library version number in\n  their help messages.\n- Fix \"mosquitto_pub -l -q 2\" disconnecting before all messages were\n  transmitted.\n- Fix potential out-of-bounds array access with client ids. Fixes bug\n  #1083182.\n\nOther:\n- mosquitto_passwd can now convert password files with plain text files to\n  hashed versions.\n\n1.0.5 - 20121103\n================\n\nBroker:\n- Fix crash when the broker has use_identity_as_username set to true but a\n  client connects without a certificate.\n- mosquitto_passwd should only be installed if WITH_TLS=yes.\n\nLibrary:\n- Use symbolic errno values rather than numbers in Python module to avoid\n  cross platform issues (incorrect errno on Mac OS).\n\nOther:\n- Build script fixes for FreeBSD.\n\n1.0.4 - 20121017\n================\n\nBroker:\n- Deal with poll() POLLIN/POLLOUT before POLL[RD]HUP to correctly handle the\n  case where a client sends data and immediately closes its socket.\n\nLibrary:\n- Fix memory leak with messages of QoS=2. Fixes bug #1064981.\n- Fix potential thread synchronisation problem with outgoing packets in the\n  Python module. Fixes bug #1064977.\n\nClients:\n- Fix \"mosquitto_sub -l\" incorrectly only sending one message per second.\n\n1.0.3 - 20120927\n================\n\nBroker:\n- Fix loading of psk files.\n- Don't return an error when reloading config if an ACL file isn't defined.\n  This was preventing psk files being reloaded.\n- Clarify meaning of $SYS/broker/clients/total in mosquitto(8) man page.\n- Clarify meaning of $SYS/broker/messages/stored in mosquitto(8) man page.\n- Fix non-retained message delivery when subscribing to #.\n- Fix retained message delivery for subs to foo/# with retained messages at\n  foo.\n- Include the filename in password/acl file loading errors.\n\nLibrary:\n- Fix possible AttributeError when self._sock == None in Python module.\n- Fix reconnecting after a timeout in Python module.\n- Fix reconnecting when there were outgoing packets in the queue in the Python\n  module.\n- Fix problem with mutex initialisation causing crashes on some Windows\n  installations.\n\n1.0.2 - 20120919\n================\n\nBroker:\n- If the broker was configured for persistence, a durable client had a\n  subscription to topics in $SYS/# and had messages in its queue when the\n  broker restarted, then the persistent database would have messages missing\n  and so the broker would not restart properly. This has been fixed.\n\nLibrary:\n- Fix threading problem on some systems.\n\nTests:\n- Close socket after 08-ssl-connect-no-auth-wrong-ca.py test to prevent\n  subsequent tests having problems.\n\nBuild scripts:\n- Install pskfile.example in CMake. Fixes bug #1037504.\n\nOther:\n- Fix db_dump parameter printing message store and sub chunks.\n\n1.0.1 - 20120815\n================\n\nBroker:\n- Fix default log_dest when running as a Windows service.\n\nClient library:\n- Fix incorrect parameters in Python on_log() callback call. Fixes bug\n  #1036818.\n\nClients:\n- Clients now don't display TLS/TLS-PSK usage help if they don't support it.\n\nBuild scripts:\n- Fix TLS-PSK support in the CMake build files.\n- Fix man page installation in the CMake build files.\n- Fix SYSCONFDIR in cmake on *nix when installing to /usr. Fixes bug #1036908.\n\nDocumentation:\n- Fix mqtt/MQTT capitalisation in man pages.\n- Update compiling.txt.\n- Fix incorrect callback docs in mosquitto.py. Fixes bug #1036607.\n- Fix various doc typos and remove obsolete script. Fixes bug #1037088.\n\n1.0 - 20120814\n==============\n\nBroker:\n\n- Add SSL/TLS support.\n- Add TLS-PSK support, providing a simpler encryption method for constrained\n  devices.\n- Passwords are now salted+hashed if compiled with WITH_TLS (recommended).\n- Add mosquitto_passwd for handling password files.\n- Add $SYS/broker/publish/messages/{sent|received} to show the number of\n  PUBLISH messages sent/received.\n- Add $SYS/broker/publish/bytes/{sent|received} to show the number of\n  PUBLISH bytes sent/received.\n- Add reload parameter for security init/cleanup functions.\n- Add option for expiring disconnected persistent clients.\n- Add option for queueing of QoS 0 messages when persistent clients are\n  disconnected.\n- Enforce client id limits in the broker (only when WITH_STRICT_PROTOCOL is\n  defined).\n- Fix reloading of log configuration.\n- Add support for try_private config option for bridge connections.\n- Add support for autosave_on_changes config option.\n- Add support for include_dir config option.\n- Add support for topic remapping.\n- Usernames were being lost when a non clean-session client reconnected,\n  potentially causing problems with ACLs. This has been fixed.\n- Significant improvement to memory handling on Windows.\n- Bridges with outgoing topics will now set the retain flag correctly so that\n  messages will be retained on the remote broker.\n- Incoming bridge connections are now detected by checking if bit 8 of the\n  protocol version number is set. This requires support from the remote broker.\n- Add support for notification_topic option.\n- Add $SYS/broker/subscriptions/count and $SYS/broker/retained messages/count.\n- Add restart_timeout to control the amount of time an automatic bridge will\n  wait before reconnecting.\n- Overlapping subscriptions are now handled properly. Fixes bug #928538.\n- Fix reloading of persistence_file and persistence_location.\n- Fix broker crash on incorrect protocol number.\n- Fix missing COMPAT_ECONNRESET define on Windows.\n- Clients that had disconnected were not always being detected immediately on\n  Linux. This has been fixed.\n- Don't save $SYS messages to the on-disk persistent db. All $SYS messages\n  should be reconstructed on a restart. This means bridge connection\n  notifications will now be correct on a restart.\n- Fix reloading of bridge clients from the persistent db. This means that\n  outgoing bridged topics should always work.\n- Local bridges are now no longer restricted by local ACLs.\n- Discard publish messages with zero length topics.\n- Drop to \"mosquitto\" user even if no config file specified.\n- Don't incorrectly allow topic access if ACL patterns but no normal ACL rules\n  are defined.\n\nClient library:\n\n- Add SSL/TLS support.\n- Add TLS-PSK support, providing a simpler encryption method for constrained\n  devices.\n- Add javascript/websockets client library.\n- Add \"struct mosquitto *mosq\" parameter for all callbacks in the client\n  library. This is a binary incompatible change so the soversion of the\n  libraries has been incremented. The new parameter should make it easier to\n  use callbacks in practice.\n- Add mosquitto_want_write() for use when using own select() loop with\n  mosquitto_socket().\n- Add mosquitto_connect_async() to provide a non-blocking connect client call.\n- Add mosquitto_user_data_set() to allow user data pointer to be updated.\n- Add \"int rc\" parameter to disconnect callback to indicate whether disconnect\n  was unexpected or the result of calling mosquitto_disconnect().\n- Add mosquitto_strerror() for obtaining a string description of error numbers.\n- Add mosquitto_connack_string() for obtaining a string description of MQTT\n  connection results.\n- Add mosquitto_will_clear() and change mosquitto_will_set() to only set the\n  will.\n- Add mosquitto_sub_topic_tokenise() and mosquitto_sub_topic_tokens_free()\n  utility functions to tokenise a subscription/topic string into a string\n  array.\n- Add mosquitto_topic_matches_sub() to check whether a topic matches a\n  subscription.\n- Replaced mosquitto_log_init() with mosquitto_log_callback_set() to allow\n  clients to decide what to do with log messages.\n- Client will now disconnect itself from the broker if it doesn't receive a\n  PINGRESP in the keepalive period after sending a PINGREQ.\n- Client will now send a PINGREQ if it has not received a message from the\n  broker in keepalive seconds.\n- mosquitto_new() will now generate a random client id if the id parameter is\n  NULL.\n- Added max_packets to mosquitto_loop(), mosquitto_loop_read() and\n  mosquitto_loop_write() to control the maximum number of packets that are\n  handled per call.\n- Payload parameters are now void * instead of uint8_t *.\n- The clean_session parameter has been moved from mosquitto_connect() to\n  mosquitto_new() because it is a client parameter rather than a connection\n  parameter.\n- Functions now use int instead of uint*_t where possible.\n- mosquitto_new() now sets errno to indicate failure type.\n- Return MOSQ_ERR_INVAL on zero length topic.\n- Fix automatic client id generation on Windows.\n- mosquitto_loop_misq() can now return MOSQ_ERR_NO_CONN.\n- Compile static library as well as dynamic library with default makefiles.\n- Rename C++ namespace from mosquittopp to mosqpp to remove ambiguity.\n- C++ lib_init(), lib_version() and lib_cleanup() are now in the mosqpp\n  namespace directly, not mosquittopp class members.\n- The Python library is now written in pure Python and so no longer depends on\n  libmosquitto.\n- The Python library includes SSL/TLS support.\n- The Python library should now be compatible with Python 3.\n\nOther:\n\n- Fix db_dump reading of retained messages.\n- Add example of logging all messages to mysql.\n- Add C++ client example.\n- Fix potential buffer overflow in pub/sub clients.\n- Add \"make binary\" target that doesn't make documents.\n- Add \"--help\" arguments to pub/sub clients.\n- Fix building on Solaris.\n\n0.15 - 20120205\n===============\n\n- Add support for $SYS/broker/clients/maximum and $SYS/broker/clients/active\n  topics.\n- Add support for $SYS messages/byte per second received/sent topics.\n- Updated mosquitto man page - $SYS hierarchy and signal support were out of\n  date.\n- Auto generated pub/sub client ids now include the hostname.\n- Tool for dumping persistent DB contents is available in src/db_dump. It isn't\n  installed by default.\n- Enforce topic length checks in client library.\n- Implement \"once\" and \"lazy\" bridge start types.\n- Add new return type MOSQ_ERR_ERRNO to indicate that the errno variable should\n  be checked for the real error code.\n- Add support for connection_messages config option.\n- mosquitto_sub will now refuse to run if the -c option (disable clean session)\n  is given and no client id is provided.\n- mosquitto_pub now gives more useful error messages on invalid input or other\n  error conditions.\n- Fix Python will_set() true/True typo.\n- Fix messages to topic \"a/b\" incorrectly matching on a subscription \"a\" if\n  another subscription \"a/#\" exists.\n\n0.14.4 - 20120106\n=================\n\n- Fix local bridge notification messages.\n- Fix return values for more internal library calls.\n- Fix incorrect out of memory checks in library and broker.\n- Never time out local bridge connections.\n\n0.14.3 - 20111210\n=================\n\n- Fix potential crash when client connects with an invalid CONNECT packet.\n- Fix incorrect invalid socket comparison on Windows.\n- Server shouldn't crash when a message is published to foo/ when a\n  subscription to foo/# exists (bug #901697).\n- SO_REUSEADDR doesn't work the same on Windows, so don't use it.\n- Cygwin builds now support Windows service features.\n- Fix $SYS/broker/bytes/sent reporting.\n\n0.14.2 - 20111123\n=================\n\n- Add uninstall target for libs.\n- Don't try to write packet whilst in a callback.\n\n0.14.1 - 20111117\n=================\n\n- Fix Python sytax errors (bug #891673).\n\n0.14 - 20111116\n===============\n\n- Add support for matching ACLs based on client id and username.\n- Add a Windows installer file (NSIS based).\n- Add native support for running the broker as a Windows service. This is the\n  default when installed using the new installer.\n- Fix client count for listeners. When clients disconnect, decrement the\n  count. Allow max_connections to work again.\n- Attempt to send all packets immediately upon being queued. This will result\n  in more immediate network communication in many cases.\n- Log IP address when reporting CONNACK packets if the client id isn't yet\n  known.\n- Fix payload length calculation in python will_set function.\n- Fix Python publish and will_set functions for payload=None.\n- Fix keepalive value being lost when reconnecting a client (bug #880863).\n- Persistence file writing now uses portable file functions, so the Cygwin\n  broker build should no longer be necessary.\n- Duplicate code between the client and broker side has been reduced.\n- Queued messages for clients reconnecting with clean_session=false set were\n  not being sent until the next message for that client was received. This has\n  been fixed (bug #890724).\n- Fix subscriptions to # incorrectly matching against topics beginning with /\n\n0.13 - 20110920\n===============\n\n- Implement bridge state notification messages.\n- Save client last used mid in persistent database (DB version number bumped).\n- Expose message id in Python MosquittoMessage.\n- It is now possible to set the topic QoS level for bridges.\n- Python MosquittoMessage payload parameter is now a Python string, not a\n  ctypes object which makes it much easier to use.\n- Fix queueing of messages for disconnected clients. The max_queued_messages\n  option is now obeyed.\n- C++ library is now in its own namespace, mosquittopp.\n- Add support for adding log message timestamps in the broker.\n- Fix missing mosquitto_username_pw_set() python binding.\n- Fix keepalive timeout for reconnecting non clean-session clients. Prevents\n  immediate disconnection on reconnection.\n- Fix subscription wildcard matching - a subscription of +/+ will now match\n  against /foo\n- Fix subscription wildcard matching - a subscription of foo/# will now match\n  against foo\n- When restoring persistent database, clients should be set to non\n  clean-session or their subscriptions will be immediately removed.\n- Fix SUBACK payload for multiple topic subscriptions.\n- Don't send retained messages when a client subscribes to a topic it is\n  already subscribed to.\n\n0.12 - 20110725\n===============\n\n- Reload (most) configuration on SIGHUP.\n- Memory tracking is no longer compiled in the client library.\n- Add --help option to mosquitto to display usage.\n- Add --id-prefix option to clients to allow easier use with brokers that are\n  using the clientid_prefix option.\n- Fix compilation on QNX.\n- Add -P as a synonym argument for --pw in the clients.\n- Fix python MosquittoMessage payload parameter. This is now returned as a\n  pointer to an array of c_uint8 values so binary data is handled correctly.\n  If a string is needed, use msg.payload_str\n- Fix memory leaks on client authentication.\n- If password_file is not defined then clients can now connect even if they\n  use a username/password.\n- Add mosquitto_reconnect() to the client library.\n- Add option for compiling with liberal protocol compliance support (enabled\n  by default).\n- Fix problems with clients reconnecting and old messages remaining in the\n  message store.\n- Display both ip and client id in the log message when a client connects.\n  Change the socket connection message to make it more obvious that it is just\n  a socket connection being made (bug #801135).\n- Fix retained message delivery where a subscription contains a +.\n- Be more lenient when reloading persistent database to reduce errors with\n  empty retained messages.\n\n0.11.3 - 20110707\n=================\n\n- Don't complain and quit if persistence_file option is given (bug #802423).\n- Initialise listeners correctly when clients with duplicate client ids\n  connect. Bug #801678.\n- Memory tracking is now disabled for Symbian builds due to lack of malloc.h.\n- Fix memory tracking compilation for kFreeBSD.\n- Python callbacks can now be used with class member functions.\n- Fix persistent database writing of client message chunks which caused\n  errors when restoring (bug #798164).\n\n0.11.2 - 20110626\n=================\n\n- Don't free contexts in mqtt3_context_disconnect() (bug #799688 / #801678).\n- Only free will if present when freeing a client context.\n\n0.11.1 - 20110620\n=================\n\n- Fix buffer overrun when checking for + and # in topics (bug #799688).\n- Pub client now quits if publish fails.\n\n0.11 - 20110619\n===============\n\n- Removed all old sqlite code.\n- Remove client id limit in clients.\n- Implemented $SYS/broker/heap/maximum size\n- Implemented $SYS/broker/clients/inactive to show the number of disconnected\n  non-clean session clients.\n- $SYS/broker/heap/current size and maximum size messages now include \"bytes\"\n  to match rsmb message format.\n- Implemented the retained_persistence config file option - a synonym of the\n  \"persistence\" option.\n- Added security_external.c to broker source to make it easier for third\n  parties to add support for their existing username/password and ACL database\n  for security checks. See external_security_checks.txt.\n- $SYS messages are now only republished when their value changes.\n- Windows native broker now responds to command line arguments.\n- Simplify client disconnecting so wills gets sent in all cases (bug #792468).\n- Clients now have a --quiet option.\n- The on_disconnect() callback will always be called now, even if the client\n  has disconnected unexpectedly.\n- Always close persistent DB file after restoring.\n- Return error code when exiting the clients.\n- mosquitto_publish() now returns MOSQ_ERR_INVAL if the topic contains + or #\n- mosquitto now silently rejects published messages with + or # in the topic.\n- max_connections is now a per-listener setting instead of global.\n- Connection count is now reduced when clients disconnect (bug #797983).\n\n0.10.2 - 20110106\n=================\n\n- Don't abort when connecting if the first connection fails. This is important\n  on e.g. Windows 7, where IPV6 is offered as the first choice but may not be\n  available.\n- Deal with long logging messages properly (bug #785882).\n- Fix library compilation on Symbian - no pselect() available.\n- Don't stop processing subscriptions on received messages after a\n  subscription with # matches. (bug #791206).\n\n0.10.1 - 20110512\n=================\n\n- Fix Windows compilation.\n- Fix mosquitto.py on Windows - call lib init/cleanup.\n- Don't abort when connecting if given an unknown address type (assuming an\n  IPv4 or IPv6 address is given).\n\n0.10 - 20110429\n===============\n\n- Implement support for the password_file option and accompanying\n  authentication requirements in the broker.\n- Implement topic Access Control Lists.\n- mosquitto_will_set() and mosquitto_publish() now return\n  MOSQ_ERR_PAYLOAD_SIZE if the payload is too large (>268,435,455 bytes).\n- Bridge support can now be disabled at compile time.\n- Group together network writes for outgoing packets - don't send single byte\n  writes!\n- Add support for clientid_prefixes variable.\n- Add support for the clientid config variable for controlling bridge client\n  ids.\n- Remove 32-bit database ID support because htobe64() no longer used.\n- Multiple client subscriptions to the same topic result in only a single\n  subscription. Bug #744077.\n\n0.9.3 - 20110310\n================\n\n- Set retained message status for QoS 2 messages (bug #726535).\n- Only abort with an error when opening listening sockets if no address family\n  is available, rather than aborting when any address family is not available.\n- Don't clean queued messages when a non clean session client reconnects.\n- Make mosquitto.py compatible with Python <2.6.\n- Fix mosquitto.h header includes for Windows.\n\n0.9.2 - 20110208\n================\n\n- Only send a single DISCONNECT command when using -l in the pub client.\n- Set QoS=1 on PUBREL commands to meet protocol spec.\n- Don't leak sockets on connection failure in the library.\n- Install man pages when building under cmake.\n- Fix crash bug on malformed CONNECT message.\n- Clients are now rejected if their socket peer name cannot be obtained on\n  connection.\n- Fix a number of potential problems caused when a client with a duplicate id\n  connects.\n- Install mosquitto.conf under cmake.\n\n0.9.1 - 20101203\n================\n\n- Add missing code for parsing the \"bind_address\" configuration option.\n- Fix missing include when compiling with tcp-wrappers support.\n- Add linker version script for C library to control exported functions.\n\n0.9 - 20101114\n==============\n\n- Client and message data is now stored in memory with custom routines rather\n  than a sqlite database. This removes the dependencies on sqlite, pcre and\n  sqlite3-pcre. It also means that the persistent database format has had to\n  be reimplemented in a custom format. Optional support for importing old\n  sqlite databases is provided.\n- Added IPv6 support for mosquitto and the clients.\n- Provide username and password support for the clients and client libraries.\n  This is part of the new MQTT v3.1 spec.\n- The broker supports the username and password connection flags, but will not\n  do anything with the username and password.\n- Python callback functions now optionally take an extra argument which will\n  return the user object passed to the Mosquitto() constructor, or the calling\n  python object itself if nothing was given to Mosquitto().\n- Remove the mosquitto command line option \"-i interface\".\n- Remove the mosquitto.conf \"interface\" variable.\n- Add support for the listener config variable (replaces the interface\n  variable)\n- Add support for the bind_address config variable.\n- Change the port config variable behaviour to match that of rsmb (applies to\n  the default listener only, can be given just once).\n- Fix QoS 2 protocol compliance - stop sending duplicate messages and handle\n  timeouts correctly. Fixes bug #598290.\n- Set retain flag correctly for outgoing messages. It should only be set for\n  messages sent in response to a subscribe command (ie. stale data).\n- Fix bug in returning correct CONNACK result to on_connect client callback.\n- Don't send client will if it is disconnected for exceeding its keepalive\n  timer.\n- Fix client library unsubscribe function incorrectly sending a SUBSCRIBE\n  command when it should be UNSUBSCRIBE.\n- Fix max_inflight_messages and max_queued_messages operation. These\n  parameters now apply only to QoS 1 and 2 messages and are used regardless of\n  the client connection state.\n- mosquitto.conf now installed to /etc/mosquitto/mosquitto.conf instead of\n  /etc/mosquitto.conf. The /etc/mosquitto/ directory will be used for password\n  and access control files in the future.\n- Give the compile time option of using 32-bit integers for the database IDs\n  instead of 64-bit integers. This is useful where htobe64()/be64toh() are not\n  available or for embedded systems for example.\n- The DUP bit is now set correctly when resending PUBREL messages.\n- A port to Windows native has been partially completed. This currently drops a\n  number of features, including the ability to change configuration parameters\n  and persistent storage.\n\n0.8.3 - 20101004\n================\n\n- Fix QoS 2 protocol compliance - stop sending duplicate messages and handle\n  timeouts correctly. Fixes bug #598290. (backported from future 0.9 code)\n\n0.8.2 - 20100815\n================\n\n- Fix default loop() timeout value in mosquitto.py. Previous value was 0,\n  causing high cpu load.\n- Fix message handling problem in client library when more than one message was\n  in the client queue.\n- Fix the logic used to determine whether a QoS>0 message needs to be retried.\n- Fix the Python sub.py example so that it quits on error.\n\n0.8.1 - 20100812\n================\n\n- Improve python interface\n- Fix incorrect return value from message delete function\n- Use logging function to print error messages in clients.\n- Fix python installation script DESTDIR.\n- Fix library destination path for 64-bit machines.\n\n0.8 - 20100807\n==============\n\n- Topics starting with a / are treated as distinct to those not starting with\n  a /. For example, /topic/path is different to topic/path. This matches the\n  behaviour of rsmb.\n- Correctly calculate the will QoS on a new client connection (bug #597451).\n- Add \"addresses\" configuration file variable as an alias of \"address\", for\n  better rsmb compatibility.\n- Bridge clean_session setting is now false, to give more sensible behaviour\n  and be more compatible with rsmb.\n- Add cleansession variable for configuring bridges.\n- Add keepalive_interval variable for bridges.\n- Remove default topic subscription for mosquitto_sub because the old\n  behaviour was too confusing.\n- Added a C client library, which the pub and sub clients now use.\n- Added a C++ client library (bound to the C library).\n- Added a Python client library (bound to the C library).\n- Added CMake build scripts to allow the library and clients (not the broker)\n  to be compiled natively on Windows.\n\n0.7 - 20100615\n==============\n\n- mosquitto_pub can now send null (zero length) messages.\n- Don't store QoS=0 messages for disconnected clients with subscriptions of\n  QoS>0.\n- accept() all available sockets when new clients are connecting, rather than\n  just one.\n- Add option to print debug messages in pub and sub clients.\n- hg revision is now exported via $SYS/broker/changeset\n- Send Will when client exceeds keepalive timer and is disconnected.\n- Check to see if a client has a will before sending it.\n- Correctly deal with clients connecting with the same id multiple times.\n- Add compile time option to disable heap memory tracking.\n- Use poll() instead of select() to allow >1024 clients.\n- Implement max_connections.\n- Run VACUUM on in-memory database on receiving SIGUSR2.\n- Fix bridge keepalive timeouts and reconnects.\n- Don't attempt to drop root privileges when running on Windows as this isn't\n  well supported (bug #586231).\n\n0.6.1 - 20100506\n================\n\n- Fix DB auto upgrade for messages table.\n\n0.6 - 20100505\n==============\n\n- Basic support for connecting multiple MQTT brokers together (bridging).\n- mosquitto_sub can now subscribe to multiple topics (limited to a global QoS).\n- mosquitto_pub can now send a file as a message.\n- mosquitto_pub can now read all of stdin and send it as a message.\n- mosquitto_pub can now read stdin and send each line as a message.\n- mosquitto will now correctly run VACUUM on the persistent database on exit.\n- Implement a more efficient database design, so that only one copy of each\n  message is held in the database, rather than one per subscribed client.\n- Add the store_cleanup_interval config option for dealing with the internal\n  message store.\n- Add support for disabling \"clean session\" for the sub client.\n- Add support for automatic upgrading of the mosquitto DB from v1 to v2.\n- Add persistence_file config option to allow changing the filename of the\n  persistence database. This allows multiple mosquitto DBs to be stored in the\n  same location whilst keeping persistence_location compatible with rsmb.\n- Don't store QoS=0 messages for disconnected clients. Fixes bug #572608. This\n  wasn't correctly fixed in version 0.5.\n- Don't disconnect clients if they send a PUBLISH with zero length payload\n  (bug #573610).\n- If a retained message is received with a zero length payload, the retained\n  message for that topic is deleted.\n- Send through zero length messages.\n- Produce a warning on unsupported rsmb options instead of quitting.\n- Describe clean session flag in the mqtt man page.\n- Implement the max_inflight_messages and max_queued_messages features in the\n  broker.\n\n0.5.4 - 20100311\n================\n\n- Fix memory allocation in mqtt3_fix_sub_topic() (bug #531861).\n- Remove accidental limit of 100 client connections.\n- Fix mosquitto_pub handling of messages with QoS>0 (bug #537061).\n\n0.5.3 - 20100303\n================\n\n- Will messages are now only sent when a client disconnects unexpectedly.\n- Fix all incoming topics/subscriptions that start with a / or contain\n  multiple / in a row (//).\n- Do actually disconnect client when it sends an empty subscription/topic string.\n- Add missing $SYS/broker/clients/total to man page.\n\n0.5.2 - 20100302\n================\n\n- Always update last backup time, so that the backup doesn't run every time\n  through the main loop once autosave_interval has been reached.\n- Report $SYS/broker/uptime in the same format as rsmb.\n- Make mandatory options obvious in usage output and man page of mosquitto_pub.\n  Fixes bug #529990.\n- Treat subscriptions with a trailing slash correctly. This should fix bugs\n  #530369 and #530099.\n\n0.5.1 - 20100227\n================\n\n- Must daemonise before pid file is written.\n\n0.5 - 20100227\n==============\n\n- No longer store QoS=0 messages for disconnected clients that do not have\n  clean start set.\n- Rename msg_timeout option to retry_interval for better rsmb compatibility.\n- Change persistence behaviour. The database is now stored in memory even if\n  persistence is enabled. It is written to disk when mosquitto exits and also at\n  periodic intervals as defined by the new autosave_interval option.\n- The writing of the persistence database may be forced by sending mosquitto\n  the SIGUSR1 signal.\n- Clients that do not send CONNECT as their first command are now\n  disconnected.\n- Boolean configuration values may now be specified with true/false as well as\n  1/0.\n- Log message on CONNECT with invalid protocol or protocol version.\n- Default sqlite3-pcre path on Linux is now /usr/lib/sqlite3/pcre.so to match\n  future sqlite3-pcre packages.\n- Add mosquitto_sub and mosquitto_pub, simple clients for subscribe/publish.\n- Add man pages for clients.\n- Add general man page on mqtt.\n- Root privileges are now dropped only after attempting to write a pid file\n  (if configured). This means that the pid file can be written to /var/run/\n  directly and should fix bug #523183.\n\n0.4.2 - 20100203\n================\n\n- Fix segfault on client connect with invalid protocol name/version.\n\n0.4.1 - 20100112\n===============\n\n- Fix regex used for finding retained messages to send on new subscription.\n\n0.4 - 20100105\n==============\n\n- Added support for wildcard subscriptions using + and #.\n- All network operations are now non-blocking and can cope with partial\n  packets, meaning that networking should be a lot more reliable.\n- Total messsages/bytes sent/received are now available in $SYS.\n- Improved logging information - use client ip address and id instead of\n  socket number.\n- Broker build timestamp is available in $SYS.\n- Keepalive==0 is now correctly treated as \"never disconnect\".\n- Fixed manpage installation.\n- Fixed incorrect $SYS hierarchy locations in documentation and code.\n- Debug type log messages are no longer sent to \"topics\".\n- Default logging destination no longer includes \"topics\" to prevent possible\n  error logging to the db before it is initialised.\n- Periodic $SYS messages can now be disabled.\n- stdout and stderr are flushed when logging to them to give more timely\n  updates.\n- dup is now set correctly when resending messages.\n- Database format bumped due to topic column naming fix.\n\n0.3 - 20091217\n==============\n\n- The port option in the configuration file and --port command line argument\n  may now be given any number of times to make mosquitto listen on multiple\n  sockets.\n- Add new config file and command line option \"interface\" to specify an\n  interface to listen on, rather than all interfaces.\n- Added host access control through tcp-wrappers support.\n- Set SO_REUSEADDR on the listening socket so restart is much quicker.\n- Added support for tracking current heap memory usage - this is published on\n  the topic \"$SYS/broker/heap/current size\"\n- Added code for logging to stderr, stdout, syslog and topics.\n- Added logging to numerous places - still plenty of scope for more.\n\n0.2 - 20091204\n==============\n\n- Replaced the command line option --foreground with --daemon, swapping the\n  default behaviour.\n- Added the command line option --config-file, to specify a config file to\n  load.  If this is not given, no config file is load and the default options\n  are used.\n- Added the command line option --port for specifying the port to listen on.\n  This overrides values in the config file.\n- Don't use persistence by default.\n- Default behaviour is now more sane when run by a normal user with no command\n  line options (combination of above changes).\n- Added option user to config file, defaulting to a value of mosquitto. If\n  this value isn't blank and mosquitto is started by root, then it will drop\n  privileges by changing to the user and its primary group. This replaces the\n  current behaviour of refusing to start if run by root.\n- Fix non-persistent mode, which would never work in the previous release.\n- Added information on default values of msg_timeout and sys_interval to the\n  mosquitto.conf man page. (closes bug #492045).\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.1513671875,
          "content": "This project is dual licensed under the Eclipse Public License 2.0 and the\nEclipse Distribution License 1.0 as described in the epl-v20 and edl-v10 files.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.2529296875,
          "content": "include config.mk\n\nDIRS=lib apps client plugins src\nDOCDIRS=man\nDISTDIRS=man\nDISTFILES= \\\n\tapps/ \\\n\tclient/ \\\n\tcmake/ \\\n\tdeps/ \\\n\texamples/ \\\n\tinclude/ \\\n\tinstaller/ \\\n\tlib/ \\\n\tlogo/ \\\n\tman/ \\\n\tmisc/ \\\n\tplugins/ \\\n\tsecurity/ \\\n\tservice/ \\\n\tsnap/ \\\n\tsrc/ \\\n\ttest/ \\\n\t\\\n\tCMakeLists.txt \\\n\tCONTRIBUTING.md \\\n\tChangeLog.txt \\\n\tLICENSE.txt \\\n\tMakefile \\\n\tabout.html \\\n\taclfile.example \\\n\tconfig.h \\\n\tconfig.mk \\\n\tedl-v10 \\\n\tepl-v20 \\\n\tlibmosquitto.pc.in \\\n\tlibmosquittopp.pc.in \\\n\tmosquitto.conf \\\n\tNOTICE.md \\\n\tpskfile.example \\\n\tpwfile.example \\\n\tREADME-compiling.md \\\n\tREADME-letsencrypt.md \\\n\tREADME-windows.txt \\\n\tREADME.md\n\n.PHONY : all mosquitto api docs binary check clean reallyclean test install uninstall dist sign copy localdocker\n\nall : $(MAKE_ALL)\n\napi :\n\tmkdir -p api p\n\tnaturaldocs -o HTML api -i lib -p p\n\trm -rf p\n\ndocs :\n\tset -e; for d in ${DOCDIRS}; do $(MAKE) -C $${d}; done\n\nbinary : mosquitto\n\nmosquitto :\nifeq ($(UNAME),Darwin)\n\t$(error Please compile using CMake on Mac OS X)\nendif\n\n\tset -e; for d in ${DIRS}; do $(MAKE) -C $${d}; done\n\nclean :\n\tset -e; for d in ${DIRS}; do $(MAKE) -C $${d} clean; done\n\tset -e; for d in ${DOCDIRS}; do $(MAKE) -C $${d} clean; done\n\t$(MAKE) -C test clean\n\nreallyclean :\n\tset -e; for d in ${DIRS}; do $(MAKE) -C $${d} reallyclean; done\n\tset -e; for d in ${DOCDIRS}; do $(MAKE) -C $${d} reallyclean; done\n\t$(MAKE) -C test reallyclean\n\t-rm -f *.orig\n\ncheck : test\n\ntest : mosquitto\n\t$(MAKE) -C test test\n\nptest : mosquitto\n\t$(MAKE) -C test ptest\n\nutest : mosquitto\n\t$(MAKE) -C test utest\n\ninstall : all\n\tset -e; for d in ${DIRS}; do $(MAKE) -C $${d} install; done\nifeq ($(WITH_DOCS),yes)\n\tset -e; for d in ${DOCDIRS}; do $(MAKE) -C $${d} install; done\nendif\n\t$(INSTALL) -d \"${DESTDIR}/etc/mosquitto\"\n\t$(INSTALL) -m 644 mosquitto.conf \"${DESTDIR}/etc/mosquitto/mosquitto.conf.example\"\n\t$(INSTALL) -m 644 aclfile.example \"${DESTDIR}/etc/mosquitto/aclfile.example\"\n\t$(INSTALL) -m 644 pwfile.example \"${DESTDIR}/etc/mosquitto/pwfile.example\"\n\t$(INSTALL) -m 644 pskfile.example \"${DESTDIR}/etc/mosquitto/pskfile.example\"\n\nuninstall :\n\tset -e; for d in ${DIRS}; do $(MAKE) -C $${d} uninstall; done\n\trm -f \"${DESTDIR}/etc/mosquitto/mosquitto.conf.example\"\n\trm -f \"${DESTDIR}/etc/mosquitto/aclfile.example\"\n\trm -f \"${DESTDIR}/etc/mosquitto/pwfile.example\"\n\trm -f \"${DESTDIR}/etc/mosquitto/pskfile.example\"\n\ndist : reallyclean\n\tset -e; for d in ${DISTDIRS}; do $(MAKE) -C $${d} dist; done\n\tmkdir -p dist/mosquitto-${VERSION}\n\tcp -r ${DISTFILES} dist/mosquitto-${VERSION}/\n\tcd dist; tar -zcf mosquitto-${VERSION}.tar.gz mosquitto-${VERSION}/\n\nsign : dist\n\tcd dist; gpg --detach-sign -a mosquitto-${VERSION}.tar.gz\n\ncopy : sign\n\tcd dist; scp mosquitto-${VERSION}.tar.gz mosquitto-${VERSION}.tar.gz.asc mosquitto:site/mosquitto.org/files/source/\n\tscp ChangeLog.txt mosquitto:site/mosquitto.org/\n\ncoverage :\n\tlcov --capture --directory . --output-file coverage.info\n\tgenhtml coverage.info --output-directory out\n\nlocaldocker : reallyclean\n\tset -e; for d in ${DISTDIRS}; do $(MAKE) -C $${d} dist; done\n\trm -rf dockertmp/\n\tmkdir -p dockertmp/mosquitto-${VERSION}\n\tcp -r ${DISTFILES} dockertmp/mosquitto-${VERSION}/\n\tcd dockertmp/; tar -zcf mosq.tar.gz mosquitto-${VERSION}/\n\tcp dockertmp/mosq.tar.gz docker/local\n\trm -rf dockertmp/\n\tcd docker/local && docker build . -t eclipse-mosquitto:local\n\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 1.841796875,
          "content": "# Notices for Mosquitto\n\nThis content is produced and maintained by the Eclipse Mosquitto project.\n\n * Project home: https://projects.eclipse.org/projects/iot.mosquitto\n\n## Trademarks\n\nEclipse Mosquitto trademarks of the Eclipse Foundation. Eclipse, and the\nEclipse Logo are registered trademarks of the Eclipse Foundation.\n\n## Copyright\n\nAll content is the property of the respective authors or their employers.\nFor more information regarding authorship of content, please consult the\nlisted source code repository logs.\n\n## Declared Project Licenses\n\nThis program and the accompanying materials are made available under the terms\nof the Eclipse Public License v2.0 which is available at\nhttp://www.eclipse.org/legal/epl-v10.html, or the BSD 3 Clause license.\n\nSPDX-License-Identifier: EPL-2.0 or BSD-3-Clause\n\n## Source Code\n\nThe project maintains the following source code repositories:\n\n * https://github.com/eclipse/mosquitto\n\n## Third-party Content\n\nThis project makes use of the follow third party projects.\n\ncJSON (1.7.x)\n\n* License: MIT\n* Project: https://github.com/DaveGamble/cJSON\n\nlibwebsockets (4.x)\n\n* License: MIT\n* Project: https://github.com/warmcat/libwebsockets\n\nopenssl (1.1.1)\n\n* License: OpenSSL License and SSLeay License\n* Project: https://openssl.org\n* Source: https://github.com/openssl/openssl\n\nuthash (2.1.0)\n\n* License: BSD revised (https://troydhanson.github.io/uthash/license.html)\n* Project: https://github.com/troydhanson/uthash\n\n## Cryptography\n\nContent may contain encryption software. The country in which you are currently\nmay have restrictions on the import, possession, and use, and/or re-export to\nanother country, of encryption software. BEFORE using any encryption software,\nplease check the country's laws, regulations and policies concerning the import,\npossession, or use, and re-export of encryption software, to see if this is\npermitted.\n"
        },
        {
          "name": "README-compiling.md",
          "type": "blob",
          "size": 1.0888671875,
          "content": "The following packages can be used to add features to mosquitto. All of them\nare optional.\n\n* openssl\n* c-ares (for DNS-SRV support, disabled by default)\n* tcp-wrappers (optional, package name libwrap0-dev)\n* libwebsockets (optional, disabled by default, version 2.4 and above)\n* cJSON (optional but recommended, for dynamic-security plugin support, and\n  JSON output from mosquitto_sub/mosquitto_rr)\n* libsystemd-dev (optional, if building with systemd support on Linux)\n* On Windows, a pthreads library is required if threading support is to be\n  included.\n* xsltproc (only if building from git)\n* docbook-xsl (only if building from git)\n\nTo compile, run \"make\", but also see the file config.mk for more details on the\nvarious options that can be compiled in.\n\nWhere possible use the Makefiles to compile. This is particularly relevant for\nthe client libraries as symbol information will be included.  Use cmake to\ncompile on Windows or Mac.\n\nIf you have any questions, problems or suggestions (particularly related to\ninstalling on a more unusual device) then please get in touch using the details\nin README.md.\n"
        },
        {
          "name": "README-letsencrypt.md",
          "type": "blob",
          "size": 0.9169921875,
          "content": "# Using Lets Encrypt with Mosquitto\n\nOn Unix like operating systems, Mosquitto will attempt to drop root access as\nsoon as it has loaded its configuration file, but before it has activated any\nof that configuration. This means that if you are using Lets Encrypt TLS\ncertificates, it will be unable to access the certificates and private keys\ntypically located in /etc/letsencrypt/live/\n\nTo help with this problem there is an example `deploy` renewal hook script in\n`misc/letsencrypt/mosquitto-copy.sh` which shows how the certificate and\nprivate key for a mosquitto broker can be copied to /etc/mosquitto/certs/ and\ngiven the correct ownership and permissions so the broker can access them, but\nno other user can. It then signals Mosquitto to reload the certificates.\n\nUse of this script allows you to happily use Lets Encrypt certificates with\nMosquitto without needing root access for Mosquitto, and without having to\nrestart Mosquitto.\n"
        },
        {
          "name": "README-tests.md",
          "type": "blob",
          "size": 0.625,
          "content": "# Tests\n\n## Running\n\nThe Mosquitto test suite can be invoked using either of\n\n```\nmake test\nmake check\n```\n\nThe tests run in series and due to the nature of some of the tests being made\ncan take a while.\n\n## Parallel Tests\n\nTo run the tests with some parallelism, use\n\n```\nmake ptest\n```\n\nThis runs up to 20 tests in parallel at once, yielding much faster overall run\ntime at the expense of having up to 20 instances of Python running at once.\nThis is not a particularly CPU intensive option, but does require more memory\nand may be unsuitable on e.g. a Raspberry Pi.\n\n## Dependencies\n\nThe tests require Python 3 and CUnit to be installed.\n"
        },
        {
          "name": "README-windows.txt",
          "type": "blob",
          "size": 2.3955078125,
          "content": "Mosquitto for Windows\n=====================\n\nMosquitto for Windows comes in 64-bit and 32-bit flavours. All dependencies are\nprovided in the installer.\n\nInstalling\n----------\n\nRunning the installer will present the normal type of graphical installer. If\nyou want to install without starting the graphical part of the installer, you\ncan do so by running it from a cmd prompt with the `/S` switch:\n\n```\nmosquitto-2.0.12-install-windows-x64.exe /S\n```\n\nYou can override the installation directory with the `/D` switch:\n\n```\nmosquitto-2.0.12-install-windows-x64.exe /S /D=:\\mosquitto\n```\n\n\nCapabilities\n------------\n\nSome versions of Windows have limitations on the number of concurrent\nconnections due to the Windows API being used. In modern versions of Windows,\ne.g. Windows 10 or Windows Server 2019, this is approximately 8192 connections.\nIn earlier versions of Windows, t his limit is 2048 connections.\n\n\nWebsockets\n----------\n\nThe broker executables provided in the installers have Websockets support\nthrough a statically compiled version of libwebsockets and is being distributed\nunder the Static Linking Exception (Section 2) of the License. As a result, the\ncontent is not subject to the LGPL 2.1.\n\n\nLibrary Thread Support\n----------------------\n\nlibmosquitto on Windows is currently compiled without thread support, so\nneither of mosquitto_loop_start() nor \"mosquitto_pub -l\" are available.\n\nA better solution that the old pthreads-win32 is being looked into, so support\nwill return in the future. If you need thread support, the code still supports\nit just fine. Support has been dropped to simplify installation.\n\n\nWindows Service\n---------------\n\nIf you wish, mosquitto can be installed as a Windows service so you can\nstart/stop it from the control panel as well as running it as a normal\nexecutable.\n\nWhen running as a service, the configuration file used is mosquitto.conf in the\ndirectory that you installed to.\n\nIf you want to install/uninstall mosquitto as a Windows service run from the\ncommand line as follows:\n\nC:\\Program Files\\mosquitto\\mosquitto install\nC:\\Program Files\\mosquitto\\mosquitto uninstall\n\nLogging\n-------\n\nIf you use `log_dest file ...` in your configuration, the log file will be\ncreated with security permissions for the current user only. If running as a\nservice, this means the SYSTEM user. You will only be able to view the log file\nif you add permissions for yourself or whatever user you wish to view the logs.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.21484375,
          "content": "Eclipse Mosquitto\n=================\n\nMosquitto is an open source implementation of a server for version 5.0, 3.1.1,\nand 3.1 of the MQTT protocol. It also includes a C and C++ client library, and\nthe `mosquitto_pub` and `mosquitto_sub` utilities for publishing and\nsubscribing.\n\n## Links\n\nSee the following links for more information on MQTT:\n\n- Community page: <http://mqtt.org/>\n- MQTT v3.1.1 standard: <https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html>\n- MQTT v5.0 standard: <https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html>\n\nMosquitto project information is available at the following locations:\n\n- Main homepage: <https://mosquitto.org/>\n- Find existing bugs or submit a new bug: <https://github.com/eclipse/mosquitto/issues>\n- Source code repository: <https://github.com/eclipse/mosquitto>\n\nThere is also a public test server available at <https://test.mosquitto.org/>\n\n## Installing\n\nSee <https://mosquitto.org/download/> for details on installing binaries for\nvarious platforms.\n\n## Quick start\n\nIf you have installed a binary package the broker should have been started\nautomatically. If not, it can be started with a very basic configuration:\n\n    mosquitto\n\nThen use `mosquitto_sub` to subscribe to a topic:\n\n    mosquitto_sub -t 'test/topic' -v\n\nAnd to publish a message:\n\n    mosquitto_pub -t 'test/topic' -m 'hello world'\n\nNote that starting the broker like this allows anonymous/unauthenticated access\nbut only from the local computer, so it's only really useful for initial testing.\n\nIf you want to have clients from another computer connect, you will need to\nprovide a configuration file. If you have installed from a binary package, you\nwill probably already have a configuration file at somewhere like\n`/etc/mosquitto/mosquitto.conf`. If you've compiled from source, you can write\nyour config file then run as `mosquitto -c /path/to/mosquitto.conf`.\n\nTo start your config file you define a listener and you will need to think\nabout what authentication you require. It is not advised to run your broker\nwith anonymous access when it is publically available.\n\nFor details on how to do this, look at the\n[authentication methods](https://mosquitto.org/documentation/authentication-methods/)\navailable and the [dynamic security plugin](https://mosquitto.org/documentation/dynamic-security/).\n\n## Documentation\n\nDocumentation for the broker, clients and client library API can be found in\nthe man pages, which are available online at <https://mosquitto.org/man/>. There\nare also pages with an introduction to the features of MQTT, the\n`mosquitto_passwd` utility for dealing with username/passwords, and a\ndescription of the configuration file options available for the broker.\n\nDetailed client library API documentation can be found at <https://mosquitto.org/api/>\n\n## Building from source\n\nTo build from source the recommended route for end users is to download the\narchive from <https://mosquitto.org/download/>.\n\nOn Windows and Mac, use `cmake` to build. On other platforms, just run `make`\nto build. For Windows, see also `README-windows.md`.\n\nIf you are building from the git repository then the documentation will not\nalready be built. Use `make binary` to skip building the man pages, or install\n`docbook-xsl` on Debian/Ubuntu systems.\n\n### Build Dependencies\n\n* c-ares (libc-ares-dev on Debian based systems) - only when compiled with `make WITH_SRV=yes`\n* cJSON - for client JSON output support. Disable with `make WITH_CJSON=no` Auto detected with CMake.\n* libwebsockets (libwebsockets-dev) - enable with `make WITH_WEBSOCKETS=yes`\n* openssl (libssl-dev on Debian based systems) - disable with `make WITH_TLS=no`\n* pthreads - for client library thread support. This is required to support the\n  `mosquitto_loop_start()` and `mosquitto_loop_stop()` functions. If compiled\n  without pthread support, the library isn't guaranteed to be thread safe.\n* uthash / utlist - bundled versions of these headers are provided, disable their use with `make WITH_BUNDLED_DEPS=no`\n* xsltproc (xsltproc and docbook-xsl on Debian based systems) - only needed when building from git sources - disable with `make WITH_DOCS=no`\n\nEquivalent options for enabling/disabling features are available when using the CMake build.\n\n\n## Credits\n\nMosquitto was written by Roger Light <roger@atchoo.org>\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2109375,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nIf you think you have found a security vulnerability in Mosquitto, please follow the steps on [Eclipse Security](https://www.eclipse.org/security/) page to report it.\n"
        },
        {
          "name": "THANKS.txt",
          "type": "blob",
          "size": 1.4580078125,
          "content": "These people have reported bugs / provided patches / done something else to aid\nthe mosquitto project. Thanks to you all!\n\nIf you think I've missed you off the list, please rest assured that it wasn't\nintentional and get in touch and I'll fix it.\n\nAdam Rudd\nAlexandre Zia\nAndrew Elwell\nAndy Piper\nAndy Stanford-Clark\nAnton Prokofiev\nAxel Busch\nBart Van Der Meerssche\nBD Walker\nBen Tobin\nBob Blackrock\nBrad Stancel\nBrett Francis\nChris Willing\nChristian Sampaio\nChristoph Krey\nCraig Hollabaugh\nCristian Manuel Vertiz Fernandez\nDan Anderson\nDaniel Deadwyler\nDaniel O'Conner\nDariusz Suchojad\nDarren Oliver\nDavid Huang\nDavid Monro\nDirk O. Kaar\nDominik Obermaier\nDominik Zajac\nEd Morris\nFabian Ruff\nFang Chong\nFrank Hansen\nGary Koh\nGianfranco Costamagna\nGuido Hinderberger\nHiram van Paassen\nJan-Piet Mens\nJoan Zapata\nJoe McIlvain\nKarl Palsson\nLarry Lendo\nMartin Assarsson\nMartin Rauscher\nMartin van Wingerden\nMarty Lee\nMatt Daubney\nMichael C\nMichael Frisch\nMichael Hekel\nMichael Laing\nMichael Rushton\nMike Bush\nMilan Tucic\nNeil Bothwick\nNicholas Humfrey\nNicholas O'Leary\nNithin Kumar\nPatrick Geary\nPaul Diston\nPeter Magnusson\nPryce Jones\nPeter George\nRichard Eagland\nRob Pridham\nRobin Gingras\nRoland de Boo\nSebastian Kroll\nSergio Rubio\nSharon Ben-Asher\nsskaje\nStefan Hudelmaier\nStefano Costa\nStephen Owens\nStephen Woods\nSteven Lougheed\nSurendra Reddy\nSzymon Kochanski\nTammo Besemann\nThomas Hilbig\nTobias Assarsson\nToby Jaffey\nTomas Novotny\nVicente Ruiz\nWayne Ingram\nYun Wu\nYuvraaj Kelkar\n賴 冠廷\n"
        },
        {
          "name": "about.html",
          "type": "blob",
          "size": 2.4375,
          "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<title>About</title>\n</head>\n<body lang=\"EN-US\">\n<h2>About This Content</h2>\n\n<p><em>May 8, 2014</em></p>\n<h3>License</h3>\n\n<p>The Eclipse Foundation makes available all content in this plug-in (\"Content\").  Unless otherwise\nindicated below, the Content is provided to you under the terms and conditions of the\nEclipse Public License Version 2.0 (\"EPL\") and Eclipse Distribution License Version 1.0 (\"EDL\").\nA copy of the EPL is available at <a href=\"https://www.eclipse.org/legal/epl-2.0/\">https://www.eclipse.org/legal/epl-2.0/</a>\nand a copy of the EDL is available at\n<a href=\"http://www.eclipse.org/org/documents/edl-v10.php\">http://www.eclipse.org/org/documents/edl-v10.php</a>.\nFor purposes of the EPL, \"Program\" will mean the Content.</p>\n\n<p>If you did not receive this Content directly from the Eclipse Foundation, the Content is\nbeing redistributed by another party (\"Redistributor\") and different terms and conditions may\napply to your use of any object code in the Content.  Check the Redistributor's license that was\nprovided with the Content.  If no such license exists, contact the Redistributor.  Unless otherwise\nindicated below, the terms and conditions of the EPL still apply to any source code in the Content\nand such source code may be obtained at <a href=\"http://www.eclipse.org/\">http://www.eclipse.org</a>.</p>\n\n\n\t\t<h3>Third Party Content</h3>\n\t\t<p>The Content includes items that have been sourced from third parties as set out below. If you\n\t\tdid not receive this Content directly from the Eclipse Foundation, the following is provided\n\t\tfor informational purposes only, and you should look to the Redistributor's license for\n\t\tterms and conditions of use.</p>\n\n\t\t<h4>libwebsockets 2.4.2</h4>\n\t\t<p>This project makes use of the libwebsockets library.</p>\n\t\t<p>The use of libwebsockets is based on the terms and conditions of the\n\t\tLGPL 2.1 with some specific exceptions.\n\t\t<a href=\"https://github.com/warmcat/libwebsockets/blob/v2.4.2/LICENSE\">https://github.com/warmcat/libwebsockets/blob/v2.4.2/LICENSE</a></p>\n\t\t<p>When libwebsockets is distributed with the project, it is being used\n\t\tsubject to the Static Linking Exception (Section 2) of the License. As\n\t\ta result, the content is not subject to the LGPL 2.1.</p>\n\n</body></html>\n"
        },
        {
          "name": "aclfile.example",
          "type": "blob",
          "size": 0.224609375,
          "content": "# This affects access control for clients with no username.\ntopic read $SYS/#\n\n# This only affects clients with username \"roger\".\nuser roger\ntopic foo/bar\n\n# This affects all clients.\npattern write $SYS/broker/connection/%c/state\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.7529296875,
          "content": "os: Visual Studio 2015\n\nenvironment:\n  CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release\n\nconfiguration:\n  - Release\n\ninstall:\n\nbuild:\n\nbuild_script:\n  - md build\n  - cd build\n  - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_THREADING=no ..\n  - cmake --build . --config Release\n  - cd ..\n\nafter_build:\n  - cd installer\n  - '\"%PROGRAMFILES(x86)%\\NSIS\\makensis\" mosquitto.nsi'\n\nartifacts:\n  - name: Installer\n    path: 'installer/mosquitto-*-install-windows-x86.exe'\n  #- path: build\\src\\Release\\mosquitto.exe\n  #- path: build\\src\\Release\\mosquitto_passwd.exe\n  #- path: build\\lib\\Release\\mosquitto.dll\n  #- path: build\\lib\\Release\\mosquitto.lib\n  #- path: build\\client\\Release\\mosquitto_pub.exe\n  #- path: build\\client\\Release\\mosquitto_sub.exe\n  #- path: build\\src\\Release\\mosquitto.exe\n"
        },
        {
          "name": "buildtest.py",
          "type": "blob",
          "size": 1.4052734375,
          "content": "#!/usr/bin/python3\n\nbuild_variants = [\n    'WITH_ADNS',\n    'WITH_BRIDGE',\n    'WITH_CJSON',\n    'WITH_DOCS',\n    'WITH_EC',\n    'WITH_EPOLL',\n    'WITH_MEMORY_TRACKING',\n    'WITH_PERSISTENCE',\n    'WITH_SHARED_LIBRARIES',\n    'WITH_SOCKS',\n    'WITH_SRV',\n    'WITH_STATIC_LIBRARIES',\n    'WITH_STRIP',\n    'WITH_SYSTEMD',\n    'WITH_SYS_TREE',\n    'WITH_THREADING',\n    'WITH_TLS',\n    'WITH_TLS_PSK',\n    'WITH_UNIX_SOCKETS',\n    'WITH_WEBSOCKETS',\n    'WITH_WRAP',\n    'WITH_XTREPORT',\n]\n\nspecial_variants = [\n    'WITH_BUNDLED_DEPS',\n    'WITH_COVERAGE',\n]\n\n\nimport os\nimport random\nimport subprocess\n\ndef run_test(msg, opts):\n    subprocess.run([\"make\", \"clean\"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)\n    print(\"%s: %s\" % (msg, str(opts)))\n    args = [\"make\", \"-j%d\" % (os.cpu_count())] + opts\n    proc = subprocess.run(args, stdout=subprocess.DEVNULL)\n    if proc.returncode != 0:\n        raise RuntimeError(\"BUILD FAILED: %s\" % (' '.join(args)))\n\ndef simple_tests():\n    for bv in build_variants:\n        for enabled in [\"yes\", \"no\"]:\n            opts = \"%s=%s\" % (bv, enabled)\n            run_test(\"SIMPLE BUILD\", [opts])\n\ndef random_tests(count=10):\n    for i in range(1, count):\n        opts = []\n        for bv in build_variants:\n            opts.append(\"%s=%s\" % (bv, random.choice([\"yes\", \"no\"])))\n\n        run_test(\"RANDOM BUILD\", opts)\n\n\nif __name__ == \"__main__\":\n    simple_tests()\n    random_tests(100)\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h",
          "type": "blob",
          "size": 2.041015625,
          "content": "#ifndef CONFIG_H\n#define CONFIG_H\n/* ============================================================\n * Platform options\n * ============================================================ */\n\n#ifdef __APPLE__\n#  define __DARWIN_C_SOURCE\n#elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__SYMBIAN32__)\n#  define HAVE_NETINET_IN_H\n#elif defined(__QNX__)\n#  define _XOPEN_SOURCE 600\n#  define __BSD_VISIBLE 1\n#  define HAVE_NETINET_IN_H\n#else\n#  define _XOPEN_SOURCE 700\n#  define _DEFAULT_SOURCE 1\n#  define _POSIX_C_SOURCE 200809L\n#endif\n\n\n#ifndef _GNU_SOURCE\n#  define _GNU_SOURCE\n#endif\n\n#define OPENSSL_LOAD_CONF\n\n/* ============================================================\n * Compatibility defines\n * ============================================================ */\n#if defined(_MSC_VER) && _MSC_VER < 1900\n#  define snprintf sprintf_s\n#  define EPROTO ECONNABORTED\n#  ifndef ECONNABORTED\n#    define ECONNABORTED WSAECONNABORTED\n#  endif\n#  ifndef ENOTCONN\n#    define ENOTCONN WSAENOTCONN\n#  endif\n#  ifndef ECONNREFUSED\n#    define ECONNREFUSED WSAECONNREFUSED\n#  endif\n#endif\n\n#ifdef WIN32\n#  ifndef strcasecmp\n#    define strcasecmp strcmpi\n#  endif\n#  define strtok_r strtok_s\n#  define strerror_r(e, b, l) strerror_s(b, l, e)\n#endif\n\n\n#define uthash_malloc(sz) mosquitto_malloc(sz)\n#define uthash_free(ptr,sz) mosquitto_free(ptr)\n\n\n#ifdef WITH_TLS\n#  include <openssl/opensslconf.h>\n#  if defined(WITH_TLS_PSK) && !defined(OPENSSL_NO_PSK)\n#    define FINAL_WITH_TLS_PSK\n#  endif\n#endif\n\n\n#ifdef __COVERITY__\n#  include <stdint.h>\n/* These are \"wrong\", but we don't use them so it doesn't matter */\n#  define _Float32 uint32_t\n#  define _Float32x uint32_t\n#  define _Float64 uint64_t\n#  define _Float64x uint64_t\n#  define _Float128 uint64_t\n#endif\n\n#define UNUSED(A) (void)(A)\n\n/* Android Bionic libpthread implementation doesn't have pthread_cancel */\n#ifndef ANDROID\n#  define HAVE_PTHREAD_CANCEL\n#endif\n\n#ifdef WITH_CJSON\n#  include <cjson/cJSON.h>\n#  define CJSON_VERSION_FULL (CJSON_VERSION_MAJOR*1000000+CJSON_VERSION_MINOR*1000+CJSON_VERSION_PATCH)\n#endif\n\n#endif\n"
        },
        {
          "name": "config.mk",
          "type": "blob",
          "size": 10.6708984375,
          "content": "# =============================================================================\n# User configuration section.\n#\n# These options control compilation on all systems apart from Windows and Mac\n# OS X. Use CMake to compile on Windows and Mac.\n#\n# Largely, these are options that are designed to make mosquitto run more\n# easily in restrictive environments by removing features.\n#\n# Modify the variable below to enable/disable features.\n#\n# Can also be overriden at the command line, e.g.:\n#\n# make WITH_TLS=no\n# =============================================================================\n\n# Uncomment to compile the broker with tcpd/libwrap support.\n#WITH_WRAP:=yes\n\n# Comment out to disable SSL/TLS support in the broker and client.\n# Disabling this will also mean that passwords must be stored in plain text. It\n# is strongly recommended that you only disable WITH_TLS if you are not using\n# password authentication at all.\nWITH_TLS:=yes\n\n# Comment out to disable TLS/PSK support in the broker and client. Requires\n# WITH_TLS=yes.\n# This must be disabled if using openssl < 1.0.\nWITH_TLS_PSK:=yes\n\n# Comment out to disable client threading support.\nWITH_THREADING:=yes\n\n# Comment out to remove bridge support from the broker. This allow the broker\n# to connect to other brokers and subscribe/publish to topics. You probably\n# want to leave this included unless you want to save a very small amount of\n# memory size and CPU time.\nWITH_BRIDGE:=yes\n\n# Comment out to remove persistent database support from the broker. This\n# allows the broker to store retained messages and durable subscriptions to a\n# file periodically and on shutdown. This is usually desirable (and is\n# suggested by the MQTT spec), but it can be disabled if required.\nWITH_PERSISTENCE:=yes\n\n# Comment out to remove memory tracking support from the broker. If disabled,\n# mosquitto won't track heap memory usage nor export '$SYS/broker/heap/current\n# size', but will use slightly less memory and CPU time.\nWITH_MEMORY_TRACKING:=yes\n\n# Compile with database upgrading support? If disabled, mosquitto won't\n# automatically upgrade old database versions.\n# Not currently supported.\n#WITH_DB_UPGRADE:=yes\n\n# Comment out to remove publishing of the $SYS topic hierarchy containing\n# information about the broker state.\nWITH_SYS_TREE:=yes\n\n# Build with systemd support. If enabled, mosquitto will notify systemd after\n# initialization. See README in service/systemd/ for more information.\n# Setting to yes means the libsystemd-dev or similar package will need to be\n# installed.\nWITH_SYSTEMD:=no\n\n# Build with SRV lookup support.\nWITH_SRV:=no\n\n# Build with websockets support on the broker.\nWITH_WEBSOCKETS:=no\n\n# Use elliptic keys in broker\nWITH_EC:=yes\n\n# Build man page documentation by default.\nWITH_DOCS:=yes\n\n# Build with client support for SOCK5 proxy.\nWITH_SOCKS:=yes\n\n# Strip executables and shared libraries on install.\nWITH_STRIP:=no\n\n# Build static libraries\nWITH_STATIC_LIBRARIES:=no\n\n# Use this variable to add extra library dependencies when building the clients\n# with the static libmosquitto library. This may be required on some systems\n# where e.g. -lz or -latomic are needed for openssl.\nCLIENT_STATIC_LDADD:=\n\n# Build shared libraries\nWITH_SHARED_LIBRARIES:=yes\n\n# Build with async dns lookup support for bridges (temporary). Requires glibc.\n#WITH_ADNS:=yes\n\n# Build with epoll support.\nWITH_EPOLL:=yes\n\n# Build with bundled uthash.h\nWITH_BUNDLED_DEPS:=yes\n\n# Build with coverage options\nWITH_COVERAGE:=no\n\n# Build with unix domain socket support\nWITH_UNIX_SOCKETS:=yes\n\n# Build mosquitto_sub with cJSON support\nWITH_CJSON:=yes\n\n# Build mosquitto with support for the $CONTROL topics.\nWITH_CONTROL:=yes\n\n# Build the broker with the jemalloc allocator\nWITH_JEMALLOC:=no\n\n# Build with xtreport capability. This is for debugging purposes and is\n# probably of no particular interest to end users.\nWITH_XTREPORT=no\n\n# Build using clang and with address sanitiser enabled\nWITH_ASAN=no\n\n# =============================================================================\n# End of user configuration\n# =============================================================================\n\n\n# Also bump lib/mosquitto.h, CMakeLists.txt,\n# installer/mosquitto.nsi, installer/mosquitto64.nsi\nVERSION=2.0.20\n\n# Client library SO version. Bump if incompatible API/ABI changes are made.\nSOVERSION=1\n\n# Man page generation requires xsltproc and docbook-xsl\nXSLTPROC=xsltproc --nonet\n# For html generation\nDB_HTML_XSL=man/html.xsl\n\n#MANCOUNTRIES=en_GB\n\nUNAME:=$(shell uname -s)\nARCH:=$(shell uname -p)\n\nifeq ($(UNAME),SunOS)\n\tifeq ($(CC),cc)\n\t\tCFLAGS?=-O\n\telse\n\t\tCFLAGS?=-Wall -ggdb -O2\n\tendif\nelse\n\tCFLAGS?=-Wall -ggdb -O2 -Wconversion -Wextra\nendif\n\nifeq ($(WITH_ASAN),yes)\n\tCC:=clang\n\tCFLAGS+=-fsanitize=address\n\tLDFLAGS+=-fsanitize=address\nendif\n\nSTATIC_LIB_DEPS:=\n\nAPP_CPPFLAGS=$(CPPFLAGS) -I. -I../../ -I../../include -I../../src -I../../lib\nAPP_CFLAGS=$(CFLAGS) -DVERSION=\\\"\"${VERSION}\\\"\"\nAPP_LDFLAGS:=$(LDFLAGS)\n\nLIB_CPPFLAGS=$(CPPFLAGS) -I. -I.. -I../include -I../../include\nLIB_CFLAGS:=$(CFLAGS)\nLIB_CXXFLAGS:=$(CXXFLAGS)\nLIB_LDFLAGS:=$(LDFLAGS)\nLIB_LIBADD:=$(LIBADD)\n\nBROKER_CPPFLAGS:=$(LIB_CPPFLAGS) -I../lib\nBROKER_CFLAGS:=${CFLAGS} -DVERSION=\"\\\"${VERSION}\\\"\" -DWITH_BROKER\nBROKER_LDFLAGS:=${LDFLAGS}\nBROKER_LDADD:=\n\nCLIENT_CPPFLAGS:=$(CPPFLAGS) -I.. -I../include\nCLIENT_CFLAGS:=${CFLAGS} -DVERSION=\"\\\"${VERSION}\\\"\"\nCLIENT_LDFLAGS:=$(LDFLAGS) -L../lib\nCLIENT_LDADD:=\n\nPASSWD_LDADD:=\n\nPLUGIN_CPPFLAGS:=$(CPPFLAGS) -I../.. -I../../include\nPLUGIN_CFLAGS:=$(CFLAGS) -fPIC\nPLUGIN_LDFLAGS:=$(LDFLAGS)\n\nifneq ($(or $(findstring $(UNAME),FreeBSD), $(findstring $(UNAME),OpenBSD), $(findstring $(UNAME),NetBSD)),)\n\tBROKER_LDADD:=$(BROKER_LDADD) -lm\n\tBROKER_LDFLAGS:=$(BROKER_LDFLAGS) -Wl,--dynamic-list=linker.syms\n\tSEDINPLACE:=-i \"\"\nelse\n\tBROKER_LDADD:=$(BROKER_LDADD) -ldl -lm\n\tSEDINPLACE:=-i\nendif\n\nifeq ($(UNAME),Linux)\n\tBROKER_LDADD:=$(BROKER_LDADD) -lrt\n\tBROKER_LDFLAGS:=$(BROKER_LDFLAGS) -Wl,--dynamic-list=linker.syms\n\tLIB_LIBADD:=$(LIB_LIBADD) -lrt\nendif\n\nifeq ($(WITH_SHARED_LIBRARIES),yes)\n\tCLIENT_LDADD:=${CLIENT_LDADD} ../lib/libmosquitto.so.${SOVERSION}\nendif\n\nifeq ($(UNAME),SunOS)\n\tSEDINPLACE:=\n\tifeq ($(ARCH),sparc)\n\t\tifeq ($(CC),cc)\n\t\t\tLIB_CFLAGS:=$(LIB_CFLAGS) -xc99 -KPIC\n\t\telse\n\t\t\tLIB_CFLAGS:=$(LIB_CFLAGS) -fPIC\n\t\tendif\n\tendif\n\tifeq ($(ARCH),i386)\n\t\tLIB_CFLAGS:=$(LIB_CFLAGS) -fPIC\n\tendif\n\n\tifeq ($(CXX),CC)\n\t\tLIB_CXXFLAGS:=$(LIB_CXXFLAGS) -KPIC\n\telse\n\t\tLIB_CXXFLAGS:=$(LIB_CXXFLAGS) -fPIC\n\tendif\nelse\n\tLIB_CFLAGS:=$(LIB_CFLAGS) -fPIC\n\tLIB_CXXFLAGS:=$(LIB_CXXFLAGS) -fPIC\nendif\n\nifneq ($(UNAME),SunOS)\n\tLIB_LDFLAGS:=$(LIB_LDFLAGS) -Wl,--version-script=linker.version -Wl,-soname,libmosquitto.so.$(SOVERSION)\nendif\n\nifeq ($(UNAME),QNX)\n\tBROKER_LDADD:=$(BROKER_LDADD) -lsocket\n\tLIB_LIBADD:=$(LIB_LIBADD) -lsocket\nendif\n\nifeq ($(WITH_WRAP),yes)\n\tBROKER_LDADD:=$(BROKER_LDADD) -lwrap\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_WRAP\nendif\n\nifeq ($(WITH_TLS),yes)\n\tAPP_CPPFLAGS:=$(APP_CPPFLAGS) -DWITH_TLS -DOPENSSL_API_COMPAT=0x10100000L\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_TLS -DOPENSSL_API_COMPAT=0x10100000L\n\tBROKER_LDADD:=$(BROKER_LDADD) -lssl -lcrypto\n\tCLIENT_CPPFLAGS:=$(CLIENT_CPPFLAGS) -DWITH_TLS -DOPENSSL_API_COMPAT=0x10100000L\n\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -DWITH_TLS -DOPENSSL_API_COMPAT=0x10100000L\n\tLIB_LIBADD:=$(LIB_LIBADD) -lssl -lcrypto\n\tPASSWD_LDADD:=$(PASSWD_LDADD) -lcrypto\n\tSTATIC_LIB_DEPS:=$(STATIC_LIB_DEPS) -lssl -lcrypto\n\n\tifeq ($(WITH_TLS_PSK),yes)\n\t\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_TLS_PSK\n\t\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -DWITH_TLS_PSK\n\t\tCLIENT_CPPFLAGS:=$(CLIENT_CPPFLAGS) -DWITH_TLS_PSK\n\tendif\nendif\n\nifeq ($(WITH_THREADING),yes)\n\tLIB_LDFLAGS:=$(LIB_LDFLAGS) -pthread\n\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -DWITH_THREADING\n\tCLIENT_CPPFLAGS:=$(CLIENT_CPPFLAGS) -DWITH_THREADING\n\tSTATIC_LIB_DEPS:=$(STATIC_LIB_DEPS) -pthread\nendif\n\nifeq ($(WITH_SOCKS),yes)\n\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -DWITH_SOCKS\n\tCLIENT_CPPFLAGS:=$(CLIENT_CPPFLAGS) -DWITH_SOCKS\nendif\n\nifeq ($(WITH_BRIDGE),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_BRIDGE\nendif\n\nifeq ($(WITH_PERSISTENCE),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_PERSISTENCE\nendif\n\nifeq ($(WITH_MEMORY_TRACKING),yes)\n\tifneq ($(UNAME),SunOS)\n\t\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_MEMORY_TRACKING\n\tendif\nendif\n\nifeq ($(WITH_SYS_TREE),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_SYS_TREE\nendif\n\nifeq ($(WITH_SYSTEMD),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_SYSTEMD\n\tBROKER_LDADD:=$(BROKER_LDADD) -lsystemd\nendif\n\nifeq ($(WITH_SRV),yes)\n\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -DWITH_SRV\n\tLIB_LIBADD:=$(LIB_LIBADD) -lcares\n\tCLIENT_CPPFLAGS:=$(CLIENT_CPPFLAGS) -DWITH_SRV\n\tSTATIC_LIB_DEPS:=$(STATIC_LIB_DEPS) -lcares\nendif\n\nifeq ($(UNAME),SunOS)\n\tBROKER_LDADD:=$(BROKER_LDADD) -lsocket -lnsl\n\tLIB_LIBADD:=$(LIB_LIBADD) -lsocket -lnsl\nendif\n\nifeq ($(WITH_EC),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_EC\nendif\n\nifeq ($(WITH_ADNS),yes)\n\tBROKER_LDADD:=$(BROKER_LDADD) -lanl\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_ADNS\nendif\n\nifeq ($(WITH_CONTROL),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_CONTROL\nendif\n\nMAKE_ALL:=mosquitto\nifeq ($(WITH_DOCS),yes)\n\tMAKE_ALL:=$(MAKE_ALL) docs\nendif\n\nifeq ($(WITH_JEMALLOC),yes)\n\tBROKER_LDADD:=$(BROKER_LDADD) -ljemalloc\nendif\n\nifeq ($(WITH_UNIX_SOCKETS),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_UNIX_SOCKETS\n\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -DWITH_UNIX_SOCKETS\n\tCLIENT_CPPFLAGS:=$(CLIENT_CPPFLAGS) -DWITH_UNIX_SOCKETS\nendif\n\nifeq ($(WITH_WEBSOCKETS),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_WEBSOCKETS\n\tBROKER_LDADD:=$(BROKER_LDADD) -lwebsockets\nendif\n\nINSTALL?=install\nprefix?=/usr/local\nincdir?=${prefix}/include\nlibdir?=${prefix}/lib${LIB_SUFFIX}\nlocaledir?=${prefix}/share/locale\nmandir?=${prefix}/share/man\nSTRIP?=strip\n\nifeq ($(WITH_STRIP),yes)\n\tSTRIP_OPTS?=-s --strip-program=${CROSS_COMPILE}${STRIP}\nendif\n\nifeq ($(WITH_EPOLL),yes)\n\tifeq ($(UNAME),Linux)\n\t\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -DWITH_EPOLL\n\tendif\nendif\n\nifeq ($(WITH_BUNDLED_DEPS),yes)\n\tBROKER_CPPFLAGS:=$(BROKER_CPPFLAGS) -I../deps\n\tLIB_CPPFLAGS:=$(LIB_CPPFLAGS) -I../deps\n\tPLUGIN_CPPFLAGS:=$(PLUGIN_CPPFLAGS) -I../../deps\nendif\n\nifeq ($(WITH_COVERAGE),yes)\n\tBROKER_CFLAGS:=$(BROKER_CFLAGS) -coverage\n\tBROKER_LDFLAGS:=$(BROKER_LDFLAGS) -coverage\n\tPLUGIN_CFLAGS:=$(PLUGIN_CFLAGS) -coverage\n\tPLUGIN_LDFLAGS:=$(PLUGIN_LDFLAGS) -coverage\n\tLIB_CFLAGS:=$(LIB_CFLAGS) -coverage\n\tLIB_LDFLAGS:=$(LIB_LDFLAGS) -coverage\n\tCLIENT_CFLAGS:=$(CLIENT_CFLAGS) -coverage\n\tCLIENT_LDFLAGS:=$(CLIENT_LDFLAGS) -coverage\nendif\n\nifeq ($(WITH_CJSON),yes)\n\tCLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_CJSON\n\tCLIENT_LDADD:=$(CLIENT_LDADD) -lcjson\n\tCLIENT_STATIC_LDADD:=$(CLIENT_STATIC_LDADD) -lcjson\n\tCLIENT_LDFLAGS:=$(CLIENT_LDFLAGS)\nendif\n\nifeq ($(WITH_XTREPORT),yes)\n\tBROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_XTREPORT\nendif\n\nBROKER_LDADD:=${BROKER_LDADD} ${LDADD}\nCLIENT_LDADD:=${CLIENT_LDADD} ${LDADD}\nPASSWD_LDADD:=${PASSWD_LDADD} ${LDADD}\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "edl-v10",
          "type": "blob",
          "size": 1.53125,
          "content": "Eclipse Distribution License - v 1.0\n\nCopyright (c) 2007, Eclipse Foundation, Inc. and its licensors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n  Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n  Neither the name of the Eclipse Foundation, Inc. nor the names of its\n  contributors may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "epl-v20",
          "type": "blob",
          "size": 13.8642578125,
          "content": "Eclipse Public License - v 2.0\n\n    THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE\n    PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION\n    OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n\n  a) in the case of the initial Contributor, the initial content\n     Distributed under this Agreement, and\n\n  b) in the case of each subsequent Contributor:\n     i) changes to the Program, and\n     ii) additions to the Program;\n  where such changes and/or additions to the Program originate from\n  and are Distributed by that particular Contributor. A Contribution\n  \"originates\" from a Contributor if it was added to the Program by\n  such Contributor itself or anyone acting on such Contributor's behalf.\n  Contributions do not include changes or additions to the Program that\n  are not Modified Works.\n\n\"Contributor\" means any person or entity that Distributes the Program.\n\n\"Licensed Patents\" mean patent claims licensable by a Contributor which\nare necessarily infringed by the use or sale of its Contribution alone\nor when combined with the Program.\n\n\"Program\" means the Contributions Distributed in accordance with this\nAgreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement\nor any Secondary License (as applicable), including Contributors.\n\n\"Derivative Works\" shall mean any work, whether in Source Code or other\nform, that is based on (or derived from) the Program and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship.\n\n\"Modified Works\" shall mean any work in Source Code or other form that\nresults from an addition to, deletion from, or modification of the\ncontents of the Program, including, for purposes of clarity any new file\nin Source Code form that contains any contents of the Program. Modified\nWorks shall not include works that contain only declarations,\ninterfaces, types, classes, structures, or files of the Program solely\nin each case in order to link to, bind by name, or subclass the Program\nor Modified Works thereof.\n\n\"Distribute\" means the acts of a) distributing or b) making available\nin any manner that enables the transfer of a copy.\n\n\"Source Code\" means the form of a Program preferred for making\nmodifications, including but not limited to software source code,\ndocumentation source, and configuration files.\n\n\"Secondary License\" means either the GNU General Public License,\nVersion 2.0, or any later versions of that license, including any\nexceptions or additional permissions as identified by the initial\nContributor.\n\n2. GRANT OF RIGHTS\n\n  a) Subject to the terms of this Agreement, each Contributor hereby\n  grants Recipient a non-exclusive, worldwide, royalty-free copyright\n  license to reproduce, prepare Derivative Works of, publicly display,\n  publicly perform, Distribute and sublicense the Contribution of such\n  Contributor, if any, and such Derivative Works.\n\n  b) Subject to the terms of this Agreement, each Contributor hereby\n  grants Recipient a non-exclusive, worldwide, royalty-free patent\n  license under Licensed Patents to make, use, sell, offer to sell,\n  import and otherwise transfer the Contribution of such Contributor,\n  if any, in Source Code or other form. This patent license shall\n  apply to the combination of the Contribution and the Program if, at\n  the time the Contribution is added by the Contributor, such addition\n  of the Contribution causes such combination to be covered by the\n  Licensed Patents. The patent license shall not apply to any other\n  combinations which include the Contribution. No hardware per se is\n  licensed hereunder.\n\n  c) Recipient understands that although each Contributor grants the\n  licenses to its Contributions set forth herein, no assurances are\n  provided by any Contributor that the Program does not infringe the\n  patent or other intellectual property rights of any other entity.\n  Each Contributor disclaims any liability to Recipient for claims\n  brought by any other entity based on infringement of intellectual\n  property rights or otherwise. As a condition to exercising the\n  rights and licenses granted hereunder, each Recipient hereby\n  assumes sole responsibility to secure any other intellectual\n  property rights needed, if any. For example, if a third party\n  patent license is required to allow Recipient to Distribute the\n  Program, it is Recipient's responsibility to acquire that license\n  before distributing the Program.\n\n  d) Each Contributor represents that to its knowledge it has\n  sufficient copyright rights in its Contribution, if any, to grant\n  the copyright license set forth in this Agreement.\n\n  e) Notwithstanding the terms of any Secondary License, no\n  Contributor makes additional grants to any Recipient (other than\n  those set forth in this Agreement) as a result of such Recipient's\n  receipt of the Program under the terms of a Secondary License\n  (if permitted under the terms of Section 3).\n\n3. REQUIREMENTS\n\n3.1 If a Contributor Distributes the Program in any form, then:\n\n  a) the Program must also be made available as Source Code, in\n  accordance with section 3.2, and the Contributor must accompany\n  the Program with a statement that the Source Code for the Program\n  is available under this Agreement, and informs Recipients how to\n  obtain it in a reasonable manner on or through a medium customarily\n  used for software exchange; and\n\n  b) the Contributor may Distribute the Program under a license\n  different than this Agreement, provided that such license:\n     i) effectively disclaims on behalf of all other Contributors all\n     warranties and conditions, express and implied, including\n     warranties or conditions of title and non-infringement, and\n     implied warranties or conditions of merchantability and fitness\n     for a particular purpose;\n\n     ii) effectively excludes on behalf of all other Contributors all\n     liability for damages, including direct, indirect, special,\n     incidental and consequential damages, such as lost profits;\n\n     iii) does not attempt to limit or alter the recipients' rights\n     in the Source Code under section 3.2; and\n\n     iv) requires any subsequent distribution of the Program by any\n     party to be under a license that satisfies the requirements\n     of this section 3.\n\n3.2 When the Program is Distributed as Source Code:\n\n  a) it must be made available under this Agreement, or if the\n  Program (i) is combined with other material in a separate file or\n  files made available under a Secondary License, and (ii) the initial\n  Contributor attached to the Source Code the notice described in\n  Exhibit A of this Agreement, then the Program may be made available\n  under the terms of such Secondary Licenses, and\n\n  b) a copy of this Agreement must be included with each copy of\n  the Program.\n\n3.3 Contributors may not remove or alter any copyright, patent,\ntrademark, attribution notices, disclaimers of warranty, or limitations\nof liability (\"notices\") contained within the Program from any copy of\nthe Program which they Distribute, provided that Contributors may add\ntheir own appropriate notices.\n\n4. COMMERCIAL DISTRIBUTION\n\nCommercial distributors of software may accept certain responsibilities\nwith respect to end users, business partners and the like. While this\nlicense is intended to facilitate the commercial use of the Program,\nthe Contributor who includes the Program in a commercial product\noffering should do so in a manner which does not create potential\nliability for other Contributors. Therefore, if a Contributor includes\nthe Program in a commercial product offering, such Contributor\n(\"Commercial Contributor\") hereby agrees to defend and indemnify every\nother Contributor (\"Indemnified Contributor\") against any losses,\ndamages and costs (collectively \"Losses\") arising from claims, lawsuits\nand other legal actions brought by a third party against the Indemnified\nContributor to the extent caused by the acts or omissions of such\nCommercial Contributor in connection with its distribution of the Program\nin a commercial product offering. The obligations in this section do not\napply to any claims or Losses relating to any actual or alleged\nintellectual property infringement. In order to qualify, an Indemnified\nContributor must: a) promptly notify the Commercial Contributor in\nwriting of such claim, and b) allow the Commercial Contributor to control,\nand cooperate with the Commercial Contributor in, the defense and any\nrelated settlement negotiations. The Indemnified Contributor may\nparticipate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial\nproduct offering, Product X. That Contributor is then a Commercial\nContributor. If that Commercial Contributor then makes performance\nclaims, or offers warranties related to Product X, those performance\nclaims and warranties are such Commercial Contributor's responsibility\nalone. Under this section, the Commercial Contributor would have to\ndefend claims against the other Contributors related to those performance\nclaims and warranties, and if a court requires any other Contributor to\npay any damages as a result, the Commercial Contributor must pay\nthose damages.\n\n5. NO WARRANTY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT\nPERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN \"AS IS\"\nBASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR\nIMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF\nTITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR\nPURPOSE. Each Recipient is solely responsible for determining the\nappropriateness of using and distributing the Program and assumes all\nrisks associated with its exercise of rights under this Agreement,\nincluding but not limited to the risks and costs of program errors,\ncompliance with applicable laws, damage to or loss of data, programs\nor equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT\nPERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS\nSHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST\nPROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE\nEXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under\napplicable law, it shall not affect the validity or enforceability of\nthe remainder of the terms of this Agreement, and without further\naction by the parties hereto, such provision shall be reformed to the\nminimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity\n(including a cross-claim or counterclaim in a lawsuit) alleging that the\nProgram itself (excluding combinations of the Program with other software\nor hardware) infringes such Recipient's patent(s), then such Recipient's\nrights granted under Section 2(b) shall terminate as of the date such\nlitigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it\nfails to comply with any of the material terms or conditions of this\nAgreement and does not cure such failure in a reasonable period of\ntime after becoming aware of such noncompliance. If all Recipient's\nrights under this Agreement terminate, Recipient agrees to cease use\nand distribution of the Program as soon as reasonably practicable.\nHowever, Recipient's obligations under this Agreement and any licenses\ngranted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement,\nbut in order to avoid inconsistency the Agreement is copyrighted and\nmay only be modified in the following manner. The Agreement Steward\nreserves the right to publish new versions (including revisions) of\nthis Agreement from time to time. No one other than the Agreement\nSteward has the right to modify this Agreement. The Eclipse Foundation\nis the initial Agreement Steward. The Eclipse Foundation may assign the\nresponsibility to serve as the Agreement Steward to a suitable separate\nentity. Each new version of the Agreement will be given a distinguishing\nversion number. The Program (including Contributions) may always be\nDistributed subject to the version of the Agreement under which it was\nreceived. In addition, after a new version of the Agreement is published,\nContributor may elect to Distribute the Program (including its\nContributions) under the new version.\n\nExcept as expressly stated in Sections 2(a) and 2(b) above, Recipient\nreceives no rights or licenses to the intellectual property of any\nContributor under this Agreement, whether expressly, by implication,\nestoppel or otherwise. All rights in the Program not expressly granted\nunder this Agreement are reserved. Nothing in this Agreement is intended\nto be enforceable by any entity that is not a Contributor or Recipient.\nNo third-party beneficiary rights are created under this Agreement.\n\nExhibit A - Form of Secondary Licenses Notice\n\n\"This Source Code may also be made available under the following\nSecondary Licenses when the conditions for such availability set forth\nin the Eclipse Public License, v. 2.0 are satisfied: {name license(s),\nversion(s), and exceptions or additional permissions here}.\"\n\n  Simply including a copy of this Agreement, including this Exhibit A\n  is not sufficient to license the Source Code under Secondary Licenses.\n\n  If it is not possible or desirable to put the notice in a particular\n  file, then You may include the notice in a location (such as a LICENSE\n  file in a relevant directory) where a recipient would be likely to\n  look for such a notice.\n\n  You may add additional accurate notices of copyright ownership.\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "installer",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "libmosquitto.pc.in",
          "type": "blob",
          "size": 0.240234375,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=${prefix}\nincludedir=${prefix}/include\nlibdir=${exec_prefix}/lib\n\nName: mosquitto\nDescription: mosquitto MQTT library (C bindings)\nVersion: @VERSION@\nCflags: -I${includedir}\nLibs: -L${libdir} -lmosquitto\n"
        },
        {
          "name": "libmosquittopp.pc.in",
          "type": "blob",
          "size": 0.24609375,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=${prefix}\nincludedir=${prefix}/include\nlibdir=${exec_prefix}/lib\n\nName: mosquittopp\nDescription: mosquitto MQTT library (C++ bindings)\nVersion: @VERSION@\nCflags: -I${includedir}\nLibs: -L${libdir} -lmosquittopp\n"
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "mosquitto.conf",
          "type": "blob",
          "size": 39.5009765625,
          "content": "# Config file for mosquitto\n#\n# See mosquitto.conf(5) for more information.\n#\n# Default values are shown, uncomment to change.\n#\n# Use the # character to indicate a comment, but only if it is the\n# very first character on the line.\n\n# =================================================================\n# General configuration\n# =================================================================\n\n# Use per listener security settings.\n#\n# It is recommended this option be set before any other options.\n#\n# If this option is set to true, then all authentication and access control\n# options are controlled on a per listener basis. The following options are\n# affected:\n#\n# acl_file\n# allow_anonymous\n# allow_zero_length_clientid\n# auto_id_prefix\n# password_file\n# plugin\n# plugin_opt_*\n# psk_file\n#\n# Note that if set to true, then a durable client (i.e. with clean session set\n# to false) that has disconnected will use the ACL settings defined for the\n# listener that it was most recently connected to.\n#\n# The default behaviour is for this to be set to false, which maintains the\n# setting behaviour from previous versions of mosquitto.\n#per_listener_settings false\n\n\n# This option controls whether a client is allowed to connect with a zero\n# length client id or not. This option only affects clients using MQTT v3.1.1\n# and later. If set to false, clients connecting with a zero length client id\n# are disconnected. If set to true, clients will be allocated a client id by\n# the broker. This means it is only useful for clients with clean session set\n# to true.\n#allow_zero_length_clientid true\n\n# If allow_zero_length_clientid is true, this option allows you to set a prefix\n# to automatically generated client ids to aid visibility in logs.\n# Defaults to 'auto-'\n#auto_id_prefix auto-\n\n# This option affects the scenario when a client subscribes to a topic that has\n# retained messages. It is possible that the client that published the retained\n# message to the topic had access at the time they published, but that access\n# has been subsequently removed. If check_retain_source is set to true, the\n# default, the source of a retained message will be checked for access rights\n# before it is republished. When set to false, no check will be made and the\n# retained message will always be published. This affects all listeners.\n#check_retain_source true\n\n# QoS 1 and 2 messages will be allowed inflight per client until this limit\n# is exceeded.  Defaults to 0. (No maximum)\n# See also max_inflight_messages\n#max_inflight_bytes 0\n\n# The maximum number of QoS 1 and 2 messages currently inflight per\n# client.\n# This includes messages that are partway through handshakes and\n# those that are being retried. Defaults to 20. Set to 0 for no\n# maximum. Setting to 1 will guarantee in-order delivery of QoS 1\n# and 2 messages.\n#max_inflight_messages 20\n\n# For MQTT v5 clients, it is possible to have the server send a \"server\n# keepalive\" value that will override the keepalive value set by the client.\n# This is intended to be used as a mechanism to say that the server will\n# disconnect the client earlier than it anticipated, and that the client should\n# use the new keepalive value. The max_keepalive option allows you to specify\n# that clients may only connect with keepalive less than or equal to this\n# value, otherwise they will be sent a server keepalive telling them to use\n# max_keepalive. This only applies to MQTT v5 clients. The default, and maximum\n# value allowable, is 65535.\n#\n# Set to 0 to allow clients to set keepalive = 0, which means no keepalive\n# checks are made and the client will never be disconnected by the broker if no\n# messages are received. You should be very sure this is the behaviour that you\n# want.\n#\n# For MQTT v3.1.1 and v3.1 clients, there is no mechanism to tell the client\n# what keepalive value they should use. If an MQTT v3.1.1 or v3.1 client\n# specifies a keepalive time greater than max_keepalive they will be sent a\n# CONNACK message with the \"identifier rejected\" reason code, and disconnected.\n#\n#max_keepalive 65535\n\n# For MQTT v5 clients, it is possible to have the server send a \"maximum packet\n# size\" value that will instruct the client it will not accept MQTT packets\n# with size greater than max_packet_size bytes. This applies to the full MQTT\n# packet, not just the payload. Setting this option to a positive value will\n# set the maximum packet size to that number of bytes. If a client sends a\n# packet which is larger than this value, it will be disconnected. This applies\n# to all clients regardless of the protocol version they are using, but v3.1.1\n# and earlier clients will of course not have received the maximum packet size\n# information. Defaults to no limit. Setting below 20 bytes is forbidden\n# because it is likely to interfere with ordinary client operation, even with\n# very small payloads.\n#max_packet_size 0\n\n# QoS 1 and 2 messages above those currently in-flight will be queued per\n# client until this limit is exceeded.  Defaults to 0. (No maximum)\n# See also max_queued_messages.\n# If both max_queued_messages and max_queued_bytes are specified, packets will\n# be queued until the first limit is reached.\n#max_queued_bytes 0\n\n# Set the maximum QoS supported. Clients publishing at a QoS higher than\n# specified here will be disconnected.\n#max_qos 2\n\n# The maximum number of QoS 1 and 2 messages to hold in a queue per client\n# above those that are currently in-flight.  Defaults to 1000. Set\n# to 0 for no maximum (not recommended).\n# See also queue_qos0_messages.\n# See also max_queued_bytes.\n#max_queued_messages 1000\n#\n# This option sets the maximum number of heap memory bytes that the broker will\n# allocate, and hence sets a hard limit on memory use by the broker.  Memory\n# requests that exceed this value will be denied. The effect will vary\n# depending on what has been denied. If an incoming message is being processed,\n# then the message will be dropped and the publishing client will be\n# disconnected. If an outgoing message is being sent, then the individual\n# message will be dropped and the receiving client will be disconnected.\n# Defaults to no limit.\n#memory_limit 0\n\n# This option sets the maximum publish payload size that the broker will allow.\n# Received messages that exceed this size will not be accepted by the broker.\n# The default value is 0, which means that all valid MQTT messages are\n# accepted. MQTT imposes a maximum payload size of 268435455 bytes.\n#message_size_limit 0\n\n# This option allows the session of persistent clients (those with clean\n# session set to false) that are not currently connected to be removed if they\n# do not reconnect within a certain time frame. This is a non-standard option\n# in MQTT v3.1. MQTT v3.1.1 and v5.0 allow brokers to remove client sessions.\n#\n# Badly designed clients may set clean session to false whilst using a randomly\n# generated client id. This leads to persistent clients that connect once and\n# never reconnect. This option allows these clients to be removed.  This option\n# allows persistent clients (those with clean session set to false) to be\n# removed if they do not reconnect within a certain time frame.\n#\n# The expiration period should be an integer followed by one of h d w m y for\n# hour, day, week, month and year respectively. For example\n#\n# persistent_client_expiration 2m\n# persistent_client_expiration 14d\n# persistent_client_expiration 1y\n#\n# The default if not set is to never expire persistent clients.\n#persistent_client_expiration\n\n# Write process id to a file. Default is a blank string which means\n# a pid file shouldn't be written.\n# This should be set to /var/run/mosquitto/mosquitto.pid if mosquitto is\n# being run automatically on boot with an init script and\n# start-stop-daemon or similar.\n#pid_file\n\n# Set to true to queue messages with QoS 0 when a persistent client is\n# disconnected. These messages are included in the limit imposed by\n# max_queued_messages and max_queued_bytes\n# Defaults to false.\n# This is a non-standard option for the MQTT v3.1 spec but is allowed in\n# v3.1.1.\n#queue_qos0_messages false\n\n# Set to false to disable retained message support. If a client publishes a\n# message with the retain bit set, it will be disconnected if this is set to\n# false.\n#retain_available true\n\n# Disable Nagle's algorithm on client sockets. This has the effect of reducing\n# latency of individual messages at the potential cost of increasing the number\n# of packets being sent.\n#set_tcp_nodelay false\n\n# Time in seconds between updates of the $SYS tree.\n# Set to 0 to disable the publishing of the $SYS tree.\n#sys_interval 10\n\n# The MQTT specification requires that the QoS of a message delivered to a\n# subscriber is never upgraded to match the QoS of the subscription. Enabling\n# this option changes this behaviour. If upgrade_outgoing_qos is set true,\n# messages sent to a subscriber will always match the QoS of its subscription.\n# This is a non-standard option explicitly disallowed by the spec.\n#upgrade_outgoing_qos false\n\n# When run as root, drop privileges to this user and its primary\n# group.\n# Set to root to stay as root, but this is not recommended.\n# If set to \"mosquitto\", or left unset, and the \"mosquitto\" user does not exist\n# then it will drop privileges to the \"nobody\" user instead.\n# If run as a non-root user, this setting has no effect.\n# Note that on Windows this has no effect and so mosquitto should be started by\n# the user you wish it to run as.\n#user mosquitto\n\n# =================================================================\n# Listeners\n# =================================================================\n\n# Listen on a port/ip address combination. By using this variable\n# multiple times, mosquitto can listen on more than one port. If\n# this variable is used and neither bind_address nor port given,\n# then the default listener will not be started.\n# The port number to listen on must be given. Optionally, an ip\n# address or host name may be supplied as a second argument. In\n# this case, mosquitto will attempt to bind the listener to that\n# address and so restrict access to the associated network and\n# interface. By default, mosquitto will listen on all interfaces.\n# Note that for a websockets listener it is not possible to bind to a host\n# name.\n#\n# On systems that support Unix Domain Sockets, it is also possible\n# to create a # Unix socket rather than opening a TCP socket. In\n# this case, the port number should be set to 0 and a unix socket\n# path must be provided, e.g.\n# listener 0 /tmp/mosquitto.sock\n#\n# listener port-number [ip address/host name/unix socket path]\n#listener\n\n# By default, a listener will attempt to listen on all supported IP protocol\n# versions. If you do not have an IPv4 or IPv6 interface you may wish to\n# disable support for either of those protocol versions. In particular, note\n# that due to the limitations of the websockets library, it will only ever\n# attempt to open IPv6 sockets if IPv6 support is compiled in, and so will fail\n# if IPv6 is not available.\n#\n# Set to `ipv4` to force the listener to only use IPv4, or set to `ipv6` to\n# force the listener to only use IPv6. If you want support for both IPv4 and\n# IPv6, then do not use the socket_domain option.\n#\n#socket_domain\n\n# Bind the listener to a specific interface. This is similar to\n# the [ip address/host name] part of the listener definition, but is useful\n# when an interface has multiple addresses or the address may change. If used\n# with the [ip address/host name] part of the listener definition, then the\n# bind_interface option will take priority.\n# Not available on Windows.\n#\n# Example: bind_interface eth0\n#bind_interface\n\n# When a listener is using the websockets protocol, it is possible to serve\n# http data as well. Set http_dir to a directory which contains the files you\n# wish to serve. If this option is not specified, then no normal http\n# connections will be possible.\n#http_dir\n\n# The maximum number of client connections to allow. This is\n# a per listener setting.\n# Default is -1, which means unlimited connections.\n# Note that other process limits mean that unlimited connections\n# are not really possible. Typically the default maximum number of\n# connections possible is around 1024.\n#max_connections -1\n\n# The listener can be restricted to operating within a topic hierarchy using\n# the mount_point option. This is achieved be prefixing the mount_point string\n# to all topics for any clients connected to this listener. This prefixing only\n# happens internally to the broker; the client will not see the prefix.\n#mount_point\n\n# Choose the protocol to use when listening.\n# This can be either mqtt or websockets.\n# Certificate based TLS may be used with websockets, except that only the\n# cafile, certfile, keyfile, ciphers, and ciphers_tls13 options are supported.\n#protocol mqtt\n\n# Set use_username_as_clientid to true to replace the clientid that a client\n# connected with with its username. This allows authentication to be tied to\n# the clientid, which means that it is possible to prevent one client\n# disconnecting another by using the same clientid.\n# If a client connects with no username it will be disconnected as not\n# authorised when this option is set to true.\n# Do not use in conjunction with clientid_prefixes.\n# See also use_identity_as_username.\n# This does not apply globally, but on a per-listener basis.\n#use_username_as_clientid\n\n# Change the websockets headers size. This is a global option, it is not\n# possible to set per listener. This option sets the size of the buffer used in\n# the libwebsockets library when reading HTTP headers. If you are passing large\n# header data such as cookies then you may need to increase this value. If left\n# unset, or set to 0, then the default of 1024 bytes will be used.\n#websockets_headers_size\n\n# -----------------------------------------------------------------\n# Certificate based SSL/TLS support\n# -----------------------------------------------------------------\n# The following options can be used to enable certificate based SSL/TLS support\n# for this listener. Note that the recommended port for MQTT over TLS is 8883,\n# but this must be set manually.\n#\n# See also the mosquitto-tls man page and the \"Pre-shared-key based SSL/TLS\n# support\" section. Only one of certificate or PSK encryption support can be\n# enabled for any listener.\n\n# Both of certfile and keyfile must be defined to enable certificate based\n# TLS encryption.\n\n# Path to the PEM encoded server certificate.\n#certfile\n\n# Path to the PEM encoded keyfile.\n#keyfile\n\n# If you wish to control which encryption ciphers are used, use the ciphers\n# option. The list of available ciphers can be optained using the \"openssl\n# ciphers\" command and should be provided in the same format as the output of\n# that command. This applies to TLS 1.2 and earlier versions only. Use\n# ciphers_tls1.3 for TLS v1.3.\n#ciphers\n\n# Choose which TLS v1.3 ciphersuites are used for this listener.\n# Defaults to \"TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256\"\n#ciphers_tls1.3\n\n# If you have require_certificate set to true, you can create a certificate\n# revocation list file to revoke access to particular client certificates. If\n# you have done this, use crlfile to point to the PEM encoded revocation file.\n#crlfile\n\n# To allow the use of ephemeral DH key exchange, which provides forward\n# security, the listener must load DH parameters. This can be specified with\n# the dhparamfile option. The dhparamfile can be generated with the command\n# e.g. \"openssl dhparam -out dhparam.pem 2048\"\n#dhparamfile\n\n# By default an TLS enabled listener will operate in a similar fashion to a\n# https enabled web server, in that the server has a certificate signed by a CA\n# and the client will verify that it is a trusted certificate. The overall aim\n# is encryption of the network traffic. By setting require_certificate to true,\n# the client must provide a valid certificate in order for the network\n# connection to proceed. This allows access to the broker to be controlled\n# outside of the mechanisms provided by MQTT.\n#require_certificate false\n\n# cafile and capath define methods of accessing the PEM encoded\n# Certificate Authority certificates that will be considered trusted when\n# checking incoming client certificates.\n# cafile defines the path to a file containing the CA certificates.\n# capath defines a directory that will be searched for files\n# containing the CA certificates. For capath to work correctly, the\n# certificate files must have \".crt\" as the file ending and you must run\n# \"openssl rehash <path to capath>\" each time you add/remove a certificate.\n#cafile\n#capath\n\n\n# If require_certificate is true, you may set use_identity_as_username to true\n# to use the CN value from the client certificate as a username. If this is\n# true, the password_file option will not be used for this listener.\n#use_identity_as_username false\n\n# -----------------------------------------------------------------\n# Pre-shared-key based SSL/TLS support\n# -----------------------------------------------------------------\n# The following options can be used to enable PSK based SSL/TLS support for\n# this listener. Note that the recommended port for MQTT over TLS is 8883, but\n# this must be set manually.\n#\n# See also the mosquitto-tls man page and the \"Certificate based SSL/TLS\n# support\" section. Only one of certificate or PSK encryption support can be\n# enabled for any listener.\n\n# The psk_hint option enables pre-shared-key support for this listener and also\n# acts as an identifier for this listener. The hint is sent to clients and may\n# be used locally to aid authentication. The hint is a free form string that\n# doesn't have much meaning in itself, so feel free to be creative.\n# If this option is provided, see psk_file to define the pre-shared keys to be\n# used or create a security plugin to handle them.\n#psk_hint\n\n# When using PSK, the encryption ciphers used will be chosen from the list of\n# available PSK ciphers. If you want to control which ciphers are available,\n# use the \"ciphers\" option.  The list of available ciphers can be optained\n# using the \"openssl ciphers\" command and should be provided in the same format\n# as the output of that command.\n#ciphers\n\n# Set use_identity_as_username to have the psk identity sent by the client used\n# as its username. Authentication will be carried out using the PSK rather than\n# the MQTT username/password and so password_file will not be used for this\n# listener.\n#use_identity_as_username false\n\n\n# =================================================================\n# Persistence\n# =================================================================\n\n# If persistence is enabled, save the in-memory database to disk\n# every autosave_interval seconds. If set to 0, the persistence\n# database will only be written when mosquitto exits. See also\n# autosave_on_changes.\n# Note that writing of the persistence database can be forced by\n# sending mosquitto a SIGUSR1 signal.\n#autosave_interval 1800\n\n# If true, mosquitto will count the number of subscription changes, retained\n# messages received and queued messages and if the total exceeds\n# autosave_interval then the in-memory database will be saved to disk.\n# If false, mosquitto will save the in-memory database to disk by treating\n# autosave_interval as a time in seconds.\n#autosave_on_changes false\n\n# Save persistent message data to disk (true/false).\n# This saves information about all messages, including\n# subscriptions, currently in-flight messages and retained\n# messages.\n# retained_persistence is a synonym for this option.\n#persistence false\n\n# The filename to use for the persistent database, not including\n# the path.\n#persistence_file mosquitto.db\n\n# Location for persistent database.\n# Default is an empty string (current directory).\n# Set to e.g. /var/lib/mosquitto if running as a proper service on Linux or\n# similar.\n#persistence_location\n\n\n# =================================================================\n# Logging\n# =================================================================\n\n# Places to log to. Use multiple log_dest lines for multiple\n# logging destinations.\n# Possible destinations are: stdout stderr syslog topic file dlt\n#\n# stdout and stderr log to the console on the named output.\n#\n# syslog uses the userspace syslog facility which usually ends up\n# in /var/log/messages or similar.\n#\n# topic logs to the broker topic '$SYS/broker/log/<severity>',\n# where severity is one of D, E, W, N, I, M which are debug, error,\n# warning, notice, information and message. Message type severity is used by\n# the subscribe/unsubscribe log_types and publishes log messages to\n# $SYS/broker/log/M/susbcribe or $SYS/broker/log/M/unsubscribe.\n#\n# The file destination requires an additional parameter which is the file to be\n# logged to, e.g. \"log_dest file /var/log/mosquitto.log\". The file will be\n# closed and reopened when the broker receives a HUP signal. Only a single file\n# destination may be configured.\n#\n# The dlt destination is for the automotive `Diagnostic Log and Trace` tool.\n# This requires that Mosquitto has been compiled with DLT support.\n#\n# Note that if the broker is running as a Windows service it will default to\n# \"log_dest none\" and neither stdout nor stderr logging is available.\n# Use \"log_dest none\" if you wish to disable logging.\n#log_dest stderr\n\n# Types of messages to log. Use multiple log_type lines for logging\n# multiple types of messages.\n# Possible types are: debug, error, warning, notice, information,\n# none, subscribe, unsubscribe, websockets, all.\n# Note that debug type messages are for decoding the incoming/outgoing\n# network packets. They are not logged in \"topics\".\n#log_type error\n#log_type warning\n#log_type notice\n#log_type information\n\n\n# If set to true, client connection and disconnection messages will be included\n# in the log.\n#connection_messages true\n\n# If using syslog logging (not on Windows), messages will be logged to the\n# \"daemon\" facility by default. Use the log_facility option to choose which of\n# local0 to local7 to log to instead. The option value should be an integer\n# value, e.g. \"log_facility 5\" to use local5.\n#log_facility\n\n# If set to true, add a timestamp value to each log message.\n#log_timestamp true\n\n# Set the format of the log timestamp. If left unset, this is the number of\n# seconds since the Unix epoch.\n# This is a free text string which will be passed to the strftime function. To\n# get an ISO 8601 datetime, for example:\n# log_timestamp_format %Y-%m-%dT%H:%M:%S\n#log_timestamp_format\n\n# Change the websockets logging level. This is a global option, it is not\n# possible to set per listener. This is an integer that is interpreted by\n# libwebsockets as a bit mask for its lws_log_levels enum. See the\n# libwebsockets documentation for more details. \"log_type websockets\" must also\n# be enabled.\n#websockets_log_level 0\n\n\n# =================================================================\n# Security\n# =================================================================\n\n# If set, only clients that have a matching prefix on their\n# clientid will be allowed to connect to the broker. By default,\n# all clients may connect.\n# For example, setting \"secure-\" here would mean a client \"secure-\n# client\" could connect but another with clientid \"mqtt\" couldn't.\n#clientid_prefixes\n\n# Boolean value that determines whether clients that connect\n# without providing a username are allowed to connect. If set to\n# false then a password file should be created (see the\n# password_file option) to control authenticated client access.\n#\n# Defaults to false, unless there are no listeners defined in the configuration\n# file, in which case it is set to true, but connections are only allowed from\n# the local machine.\n#allow_anonymous false\n\n# -----------------------------------------------------------------\n# Default authentication and topic access control\n# -----------------------------------------------------------------\n\n# Control access to the broker using a password file. This file can be\n# generated using the mosquitto_passwd utility. If TLS support is not compiled\n# into mosquitto (it is recommended that TLS support should be included) then\n# plain text passwords are used, in which case the file should be a text file\n# with lines in the format:\n# username:password\n# The password (and colon) may be omitted if desired, although this\n# offers very little in the way of security.\n#\n# See the TLS client require_certificate and use_identity_as_username options\n# for alternative authentication options. If a plugin is used as well as\n# password_file, the plugin check will be made first.\n#password_file\n\n# Access may also be controlled using a pre-shared-key file. This requires\n# TLS-PSK support and a listener configured to use it. The file should be text\n# lines in the format:\n# identity:key\n# The key should be in hexadecimal format without a leading \"0x\".\n# If an plugin is used as well, the plugin check will be made first.\n#psk_file\n\n# Control access to topics on the broker using an access control list\n# file. If this parameter is defined then only the topics listed will\n# have access.\n# If the first character of a line of the ACL file is a # it is treated as a\n# comment.\n# Topic access is added with lines of the format:\n#\n# topic [read|write|readwrite|deny] <topic>\n#\n# The access type is controlled using \"read\", \"write\", \"readwrite\" or \"deny\".\n# This parameter is optional (unless <topic> contains a space character) - if\n# not given then the access is read/write.  <topic> can contain the + or #\n# wildcards as in subscriptions.\n#\n# The \"deny\" option can used to explicity deny access to a topic that would\n# otherwise be granted by a broader read/write/readwrite statement. Any \"deny\"\n# topics are handled before topics that grant read/write access.\n#\n# The first set of topics are applied to anonymous clients, assuming\n# allow_anonymous is true. User specific topic ACLs are added after a\n# user line as follows:\n#\n# user <username>\n#\n# The username referred to here is the same as in password_file. It is\n# not the clientid.\n#\n#\n# If is also possible to define ACLs based on pattern substitution within the\n# topic. The patterns available for substition are:\n#\n# %c to match the client id of the client\n# %u to match the username of the client\n#\n# The substitution pattern must be the only text for that level of hierarchy.\n#\n# The form is the same as for the topic keyword, but using pattern as the\n# keyword.\n# Pattern ACLs apply to all users even if the \"user\" keyword has previously\n# been given.\n#\n# If using bridges with usernames and ACLs, connection messages can be allowed\n# with the following pattern:\n# pattern write $SYS/broker/connection/%c/state\n#\n# pattern [read|write|readwrite] <topic>\n#\n# Example:\n#\n# pattern write sensor/%u/data\n#\n# If an plugin is used as well as acl_file, the plugin check will be\n# made first.\n#acl_file\n\n# -----------------------------------------------------------------\n# External authentication and topic access plugin options\n# -----------------------------------------------------------------\n\n# External authentication and access control can be supported with the\n# plugin option. This is a path to a loadable plugin. See also the\n# plugin_opt_* options described below.\n#\n# The plugin option can be specified multiple times to load multiple\n# plugins. The plugins will be processed in the order that they are specified\n# here. If the plugin option is specified alongside either of\n# password_file or acl_file then the plugin checks will be made first.\n#\n# If the per_listener_settings option is false, the plugin will be apply to all\n# listeners. If per_listener_settings is true, then the plugin will apply to\n# the current listener being defined only.\n#\n# This option is also available as `auth_plugin`, but this use is deprecated\n# and will be removed in the future.\n#\n#plugin\n\n# If the plugin option above is used, define options to pass to the\n# plugin here as described by the plugin instructions. All options named\n# using the format plugin_opt_* will be passed to the plugin, for example:\n#\n# This option is also available as `auth_opt_*`, but this use is deprecated\n# and will be removed in the future.\n#\n# plugin_opt_db_host\n# plugin_opt_db_port\n# plugin_opt_db_username\n# plugin_opt_db_password\n\n\n# =================================================================\n# Bridges\n# =================================================================\n\n# A bridge is a way of connecting multiple MQTT brokers together.\n# Create a new bridge using the \"connection\" option as described below. Set\n# options for the bridges using the remaining parameters. You must specify the\n# address and at least one topic to subscribe to.\n#\n# Each connection must have a unique name.\n#\n# The address line may have multiple host address and ports specified. See\n# below in the round_robin description for more details on bridge behaviour if\n# multiple addresses are used. Note that if you use an IPv6 address, then you\n# are required to specify a port.\n#\n# The direction that the topic will be shared can be chosen by\n# specifying out, in or both, where the default value is out.\n# The QoS level of the bridged communication can be specified with the next\n# topic option. The default QoS level is 0, to change the QoS the topic\n# direction must also be given.\n#\n# The local and remote prefix options allow a topic to be remapped when it is\n# bridged to/from the remote broker. This provides the ability to place a topic\n# tree in an appropriate location.\n#\n# For more details see the mosquitto.conf man page.\n#\n# Multiple topics can be specified per connection, but be careful\n# not to create any loops.\n#\n# If you are using bridges with cleansession set to false (the default), then\n# you may get unexpected behaviour from incoming topics if you change what\n# topics you are subscribing to. This is because the remote broker keeps the\n# subscription for the old topic. If you have this problem, connect your bridge\n# with cleansession set to true, then reconnect with cleansession set to false\n# as normal.\n#connection <name>\n#address <host>[:<port>] [<host>[:<port>]]\n#topic <topic> [[[out | in | both] qos-level] local-prefix remote-prefix]\n\n# If you need to have the bridge connect over a particular network interface,\n# use bridge_bind_address to tell the bridge which local IP address the socket\n# should bind to, e.g. `bridge_bind_address 192.168.1.10`\n#bridge_bind_address\n\n# If a bridge has topics that have \"out\" direction, the default behaviour is to\n# send an unsubscribe request to the remote broker on that topic. This means\n# that changing a topic direction from \"in\" to \"out\" will not keep receiving\n# incoming messages. Sending these unsubscribe requests is not always\n# desirable, setting bridge_attempt_unsubscribe to false will disable sending\n# the unsubscribe request.\n#bridge_attempt_unsubscribe true\n\n# Set the version of the MQTT protocol to use with for this bridge. Can be one\n# of mqttv50, mqttv311 or mqttv31. Defaults to mqttv311.\n#bridge_protocol_version mqttv311\n\n# Set the clean session variable for this bridge.\n# When set to true, when the bridge disconnects for any reason, all\n# messages and subscriptions will be cleaned up on the remote\n# broker. Note that with cleansession set to true, there may be a\n# significant amount of retained messages sent when the bridge\n# reconnects after losing its connection.\n# When set to false, the subscriptions and messages are kept on the\n# remote broker, and delivered when the bridge reconnects.\n#cleansession false\n\n# Set the amount of time a bridge using the lazy start type must be idle before\n# it will be stopped. Defaults to 60 seconds.\n#idle_timeout 60\n\n# Set the keepalive interval for this bridge connection, in\n# seconds.\n#keepalive_interval 60\n\n# Set the clientid to use on the local broker. If not defined, this defaults to\n# 'local.<clientid>'. If you are bridging a broker to itself, it is important\n# that local_clientid and clientid do not match.\n#local_clientid\n\n# If set to true, publish notification messages to the local and remote brokers\n# giving information about the state of the bridge connection. Retained\n# messages are published to the topic $SYS/broker/connection/<clientid>/state\n# unless the notification_topic option is used.\n# If the message is 1 then the connection is active, or 0 if the connection has\n# failed.\n# This uses the last will and testament feature.\n#notifications true\n\n# Choose the topic on which notification messages for this bridge are\n# published. If not set, messages are published on the topic\n# $SYS/broker/connection/<clientid>/state\n#notification_topic\n\n# Set the client id to use on the remote end of this bridge connection. If not\n# defined, this defaults to 'name.hostname' where name is the connection name\n# and hostname is the hostname of this computer.\n# This replaces the old \"clientid\" option to avoid confusion. \"clientid\"\n# remains valid for the time being.\n#remote_clientid\n\n# Set the password to use when connecting to a broker that requires\n# authentication. This option is only used if remote_username is also set.\n# This replaces the old \"password\" option to avoid confusion. \"password\"\n# remains valid for the time being.\n#remote_password\n\n# Set the username to use when connecting to a broker that requires\n# authentication.\n# This replaces the old \"username\" option to avoid confusion. \"username\"\n# remains valid for the time being.\n#remote_username\n\n# Set the amount of time a bridge using the automatic start type will wait\n# until attempting to reconnect.\n# This option can be configured to use a constant delay time in seconds, or to\n# use a backoff mechanism based on \"Decorrelated Jitter\", which adds a degree\n# of randomness to when the restart occurs.\n#\n# Set a constant timeout of 20 seconds:\n# restart_timeout 20\n#\n# Set backoff with a base (start value) of 10 seconds and a cap (upper limit) of\n# 60 seconds:\n# restart_timeout 10 30\n#\n# Defaults to jitter with a base of 5 and cap of 30\n#restart_timeout 5 30\n\n# If the bridge has more than one address given in the address/addresses\n# configuration, the round_robin option defines the behaviour of the bridge on\n# a failure of the bridge connection. If round_robin is false, the default\n# value, then the first address is treated as the main bridge connection. If\n# the connection fails, the other secondary addresses will be attempted in\n# turn. Whilst connected to a secondary bridge, the bridge will periodically\n# attempt to reconnect to the main bridge until successful.\n# If round_robin is true, then all addresses are treated as equals. If a\n# connection fails, the next address will be tried and if successful will\n# remain connected until it fails\n#round_robin false\n\n# Set the start type of the bridge. This controls how the bridge starts and\n# can be one of three types: automatic, lazy and once. Note that RSMB provides\n# a fourth start type \"manual\" which isn't currently supported by mosquitto.\n#\n# \"automatic\" is the default start type and means that the bridge connection\n# will be started automatically when the broker starts and also restarted\n# after a short delay (30 seconds) if the connection fails.\n#\n# Bridges using the \"lazy\" start type will be started automatically when the\n# number of queued messages exceeds the number set with the \"threshold\"\n# parameter. It will be stopped automatically after the time set by the\n# \"idle_timeout\" parameter. Use this start type if you wish the connection to\n# only be active when it is needed.\n#\n# A bridge using the \"once\" start type will be started automatically when the\n# broker starts but will not be restarted if the connection fails.\n#start_type automatic\n\n# Set the number of messages that need to be queued for a bridge with lazy\n# start type to be restarted. Defaults to 10 messages.\n# Must be less than max_queued_messages.\n#threshold 10\n\n# If try_private is set to true, the bridge will attempt to indicate to the\n# remote broker that it is a bridge not an ordinary client. If successful, this\n# means that loop detection will be more effective and that retained messages\n# will be propagated correctly. Not all brokers support this feature so it may\n# be necessary to set try_private to false if your bridge does not connect\n# properly.\n#try_private true\n\n# Some MQTT brokers do not allow retained messages. MQTT v5 gives a mechanism\n# for brokers to tell clients that they do not support retained messages, but\n# this is not possible for MQTT v3.1.1 or v3.1. If you need to bridge to a\n# v3.1.1 or v3.1 broker that does not support retained messages, set the\n# bridge_outgoing_retain option to false. This will remove the retain bit on\n# all outgoing messages to that bridge, regardless of any other setting.\n#bridge_outgoing_retain true\n\n# If you wish to restrict the size of messages sent to a remote bridge, use the\n# bridge_max_packet_size option. This sets the maximum number of bytes for\n# the total message, including headers and payload.\n# Note that MQTT v5 brokers may provide their own maximum-packet-size property.\n# In this case, the smaller of the two limits will be used.\n# Set to 0 for \"unlimited\".\n#bridge_max_packet_size 0\n\n\n# -----------------------------------------------------------------\n# Certificate based SSL/TLS support\n# -----------------------------------------------------------------\n# Either bridge_cafile or bridge_capath must be defined to enable TLS support\n# for this bridge.\n# bridge_cafile defines the path to a file containing the\n# Certificate Authority certificates that have signed the remote broker\n# certificate.\n# bridge_capath defines a directory that will be searched for files containing\n# the CA certificates. For bridge_capath to work correctly, the certificate\n# files must have \".crt\" as the file ending and you must run \"openssl rehash\n# <path to capath>\" each time you add/remove a certificate.\n#bridge_cafile\n#bridge_capath\n\n\n# If the remote broker has more than one protocol available on its port, e.g.\n# MQTT and WebSockets, then use bridge_alpn to configure which protocol is\n# requested. Note that WebSockets support for bridges is not yet available.\n#bridge_alpn\n\n# When using certificate based encryption, bridge_insecure disables\n# verification of the server hostname in the server certificate. This can be\n# useful when testing initial server configurations, but makes it possible for\n# a malicious third party to impersonate your server through DNS spoofing, for\n# example. Use this option in testing only. If you need to resort to using this\n# option in a production environment, your setup is at fault and there is no\n# point using encryption.\n#bridge_insecure false\n\n# Path to the PEM encoded client certificate, if required by the remote broker.\n#bridge_certfile\n\n# Path to the PEM encoded client private key, if required by the remote broker.\n#bridge_keyfile\n\n# -----------------------------------------------------------------\n# PSK based SSL/TLS support\n# -----------------------------------------------------------------\n# Pre-shared-key encryption provides an alternative to certificate based\n# encryption. A bridge can be configured to use PSK with the bridge_identity\n# and bridge_psk options. These are the client PSK identity, and pre-shared-key\n# in hexadecimal format with no \"0x\". Only one of certificate and PSK based\n# encryption can be used on one\n# bridge at once.\n#bridge_identity\n#bridge_psk\n\n\n# =================================================================\n# External config files\n# =================================================================\n\n# External configuration files may be included by using the\n# include_dir option. This defines a directory that will be searched\n# for config files. All files that end in '.conf' will be loaded as\n# a configuration file. It is best to have this as the last option\n# in the main file. This option will only be processed from the main\n# configuration file. The directory specified must not contain the\n# main configuration file.\n# Files within include_dir will be loaded sorted in case-sensitive\n# alphabetical order, with capital letters ordered first. If this option is\n# given multiple times, all of the files from the first instance will be\n# processed before the next instance. See the man page for examples.\n#include_dir\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pskfile.example",
          "type": "blob",
          "size": 0.0224609375,
          "content": "id:deadbeef\neasy:12345\n"
        },
        {
          "name": "pwfile.example",
          "type": "blob",
          "size": 0.3466796875,
          "content": "roger:$6$clQ4Ocu312S0qWgl$Cv2wUxgEN73c6C6jlBkswqR4AkHsvDLWvtEXZZ8NpsBLgP1WAo/qA+WXcmEN/mjDNgdUwcxRAveqNMs2xUVQYA==\nsub_client:$6$U+qg0/32F0g2Fh+n$fBPSkq/rfNyEQ/TkEjRgwGTTVBpvNhKSyGShovH9KHewsvJ731tD5Zx26IHhR5RYCICt0L9qBW0/KK31UkCliw==\npub_client:$6$vxQ89y+7WrsnL2yn$fSPMmEZn9TSrC8s/jaPmxJ9NijWpkP2e7bMJLz78JXR1vW2x8+T3FZ23byJA6xs5Mt+LeOybAHwcUv0OCl40rA==\n"
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "set-version.sh",
          "type": "blob",
          "size": 0.77734375,
          "content": "#!/bin/sh\n\nMAJOR=2\nMINOR=0\nREVISION=20\n\nsed -i \"s/^VERSION=.*/VERSION=${MAJOR}.${MINOR}.${REVISION}/\" config.mk\n\nsed -i \"s/^#define LIBMOSQUITTO_MAJOR .*/#define LIBMOSQUITTO_MAJOR ${MAJOR}/\" include/mosquitto.h\nsed -i \"s/^#define LIBMOSQUITTO_MINOR .*/#define LIBMOSQUITTO_MINOR ${MINOR}/\" include/mosquitto.h\nsed -i \"s/^#define LIBMOSQUITTO_REVISION .*/#define LIBMOSQUITTO_REVISION ${REVISION}/\" include/mosquitto.h\n\nsed -i \"s/^set (VERSION .*)/set (VERSION ${MAJOR}.${MINOR}.${REVISION})/\" CMakeLists.txt\n\nsed -i \"s/^!define VERSION .*/!define VERSION ${MAJOR}.${MINOR}.${REVISION}/\" installer/*.nsi\n\nsed -i \"s/^version: .*/version: ${MAJOR}.${MINOR}.${REVISION}/\" snap/snapcraft.yaml\n\nsed -i \"s/\\\"version-string\\\": \\\".*\\\",/\\\"version-string\\\": \\\"${MAJOR}.${MINOR}.${REVISION}\\\",/\" vcpkg.json\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis-configure.sh",
          "type": "blob",
          "size": 0.1044921875,
          "content": "#!/bin/bash\n\nif [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n\tcmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl .\nfi\n"
        },
        {
          "name": "travis-install.sh",
          "type": "blob",
          "size": 0.4638671875,
          "content": "#!/bin/bash\n\n\nif [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\n\tsudo apt-get update -qq\n\tsudo apt-get install -y debhelper libc-ares-dev libssl-dev libwrap0-dev python-all python3-all uthash-dev xsltproc docbook-xsl libcunit1-dev\n\tgit clone https://github.com/DaveGamble/cJSON\n\tmake -C cJSON\n\tsudo make PREFIX=/usr -C cJSON install\nfi\n\nif [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n\tHOMEBREW_NO_AUTO_UPDATE=1 brew install c-ares cjson openssl libwebsockets\nfi\n\nsudo pip install paho-mqtt\n"
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 0.1416015625,
          "content": "{\n  \"name\": \"mosquitto\",\n  \"version-string\": \"2.0.20\",\n  \"dependencies\": [\n    \"cjson\",\n    \"libwebsockets\",\n    \"openssl\",\n    \"pthreads\"\n  ]\n}\n"
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}