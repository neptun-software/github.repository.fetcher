{
  "metadata": {
    "timestamp": 1736710348903,
    "page": 157,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aircrack-ng/aircrack-ng",
      "stars": 5658,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.9208984375,
          "content": "---\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignOperands: true\nAlignTrailingComments: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakBeforeMultilineStrings: false\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Allman\nBreakBeforeTernaryOperators: true\nColumnLimit: 80\nContinuationIndentWidth: 4\nIndentCaseLabels: true\nIndentWidth: 4\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nPointerAlignment: Middle\nReflowComments: false\nSortIncludes: false\nSpaceAfterCStyleCast: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesInAngles: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp11\nTabWidth: 4\nUseTab: Always\n"
        },
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.240234375,
          "content": "[codespell]\nskip = *.patch,./LICENSE.OpenSSL,./test/password.lst,./test/password-2.lst,./test/password-3.lst,./include/aircrack-ng/third-party/*\nignore-words-list = aci,ba,curent,datas,inout,keep-alives,nnumber,overthere,parm,parms,ue,varian,wan\n"
        },
        {
          "name": ".coverityignore",
          "type": "blob",
          "size": 0.2744140625,
          "content": "apparmor/\ncontrib/\nmanpages/\npatches/\nscripts/\n.github/\n.vscode/\n.clang-format\n.editorconfig\n.gitignore\n.pre-commit-config.yaml\nAC_VERSION.in\nAUTHORS\ncentos_autotools.sh\nChangeLog\ndocker_package_install.sh\nDockerfile\nDockerfile.release\nINSTALLING\nLICENSE.OpenSSL\nREADME\nSECURITY.md"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.47265625,
          "content": "[*]\ncharset=utf-8\nend_of_line=lf\ninsert_final_newline=false\nindent_style=tab\nindent_size=4\n\n[{*.c,*.cp,*.cc,*.hpp,*.cpp,*.tcc,*.hp,*.cxx,*.icc,*.mm,*.hxx,*.ii,*.hh,*.m,*.i,*.h,*.h++,*.c++,*.pch,*.inl}]\nindent_style=tab\nindent_size=4\ninsert_final_newline=false\n\n[{CMakeLists.txt,*.cmake}]\nindent_style=space\nindent_size=2\n\n[{Makefile.*,Makefile,GNUmakefile,makefile,*.mk}]\nindent_style=tab\ntab_width=2\n\n[{*.yml,*.yaml}]\nindent_style=space\nindent_size=2\n\n[appveyor.yml]\nend_of_line=crlf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8037109375,
          "content": "/*-ng\n/besside-ng-crawler\n/ivstools\n/kstats\n/wpaclean\nsrc/osdep/.os.Linux\nsrc/osdep/libosdep.a\nsrc/tags\ntags\n*.a\n*.so\n*.dll\n*.o\n*.exe\n*.log\n*.trs\n*.zip\n*.tar.*\ncommon.cfg\nMakefile.in\naclocal.m4\nautom4te.cache/\ncompile\n/config.h\n/config.h.in\nconfig.guess\nconfig.log\nconfig.status\nconfig.sub\nconfigure\ninstall-sh\nlibtool\nltmain.sh\nmissing\nreautogen.sh\nsrc/Makefile.in\n*.lo\n.deps\n.libs\n.dirstamp\n/depcomp\n/aminclude_static.am\n/stamp-h1\n*.la\n*.gcda\n*.gcno\n*.orig\n/test-driver\n/**/*-coverage.info\n/**/*-coverage\n/**/*.log\n/**/*.trs\n/scripts/airdrop-ng/build\n/scripts/airgraph-ng/build\n/test-calc-4pmk\n/test-calc-mic\n/test-calc-pmk\n/test-calc-ptk\n/test-cipher-arcfour\n/test-decrypt-ccmp\n/test-digest-md5\n/test-digest-sha1\n/test-encrypt-ccmp\n/test-encrypt-wep\n/test-hex_string_to_array\n/test-kdf-pbkdf2-hmac-sha1\n/test-mac-hmac-md5\n/test-mac-hmac-sha1\n/test-mac-hmac-sha256\n/build/m4/stubs/*\n!/build/m4/stubs/.gitkeep\n/test/test-env.sh\n/.idea\n/.clang_complete\nCMakeLists.txt\n/cmake-build-*\n*.gcda\n*.gcno\nMakefile\n!/contrib/commview/Makefile\n!/contrib/airpcap/Makefile\n!/contrib/peek/Makefile\n!/scripts/airgraph-ng/lib/Makefile\n/scripts/airmon-ng\n/benchmark.csv\n/.cccc\n/cccc.opt\n/.scannerwork\n/.bash_history\n/.cproject\n/.lesshst\n/.project\n/.rpmdb\n/.settings\nbenchmark*.csv\n/bw-output\ncompile_commands.json\ncoverage*.info\n/test/cryptounittest/default.profraw\n/test-calc-one-pmk\n/test-string-has-suffix\n/test-wpapsk\n/test-wpapsk-cmac\n/test-circular-buffer\n/test-circular-queue\n/GPATH\n/GRTAGS\n/GSYMS\n/GTAGS\n/VERSION\n/AC_VERSION\n/aminclude_static.am\n/config.h\n/config.h.in\n/include/aircrack-ng/version.h\n/manpages/*.1\n/manpages/*.8\n/.ccls-cache\n/.cache\n/.gdb_history\n/cscope*\n/strace_out\n/.clangd\n/r*hs\n/r*hs-bad\n/r*tr\n/r*tr-bad\n*~\n*.pidb\n/.vscode/settings.json\n/infer-out/\nnode_modules/**\npackage.json\npackage-lock.json\nscripts/**/*.egg-info/*\n**/*-py3*.egg\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.1435546875,
          "content": "---\n# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\nexclude: >\n  (?x)^(\n      .github/|AUTHORS|ChangeLog|INSTALLING|LICENSE|README|\n      appveyor.yml|build/airpcap.dll.def|contrib/|lib/csharp|\n      lib/radiotap|include/aircrack-ng/third-party|patches/|\n      test/|scripts/|manpages/|apparmor/\n  )\n\nfail_fast: false\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.5.0\n    hooks:\n      - id: trailing-whitespace\n        exclude_types: [asm]\n      - id: check-added-large-files\n      - id: mixed-line-ending\n        exclude_types: [asm]\n      - id: check-byte-order-marker\n      - id: check-executables-have-shebangs\n      - id: check-merge-conflict\n\n  - repo: https://github.com/pocc/pre-commit-hooks\n    rev: v1.3.5\n    hooks:\n      - id: clang-format\n        args: [\"--style=file\", \"-i\"]\n\n  - repo: https://github.com/shellcheck-py/shellcheck-py\n    rev: v0.10.0.1\n    hooks:\n      - id: shellcheck\n        files: 'test/|scripts/|build/'\n\n  - repo: https://github.com/hadolint/hadolint\n    rev: v2.12.0\n    hooks:\n      - id: hadolint\n        files: 'Dockerfile|Dockerfile.release'\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AC_VERSION.in",
          "type": "blob",
          "size": 0.0244140625,
          "content": "@_MAJ@.@_MIN@.@_SUB_MIN@\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 4.224609375,
          "content": "Original Author\n===============\n\nThomas d'Otreppe <tdotreppe@aircrack-ng.org>\n\nContributors\n============\n\n* Zero Chaos\n\t- Airmon-ng maintainer\n\t- Occasional driver patch fixer\n\t- Driver tester\n\n* Joseph Benden <joe@aircrack-ng.org>\n\n\t- Instituted the project's coding style & formatting guidelines\n\t- Performed conversion from Subversion and Trac to GitHub\n\t- Continuous Integration: Buildbot system as well as AppVeyor setup and tuning TravisCI\n\t- Converted project from Makefiles to an Autotools-based build\n\t- Forged the WPA cracking engine; capable of linearly scaling up to at least 96 cores\n\t- Dynamically utilize the best SIMD instructions, at run-time, instead of build-time\n\t- Improved compilation on non-x86 platforms\n\t- Fixed many issues relating to SIMD on non-x86 architectures\n\n* Levert\n\n\t- Initial Subversion, trac and buildbot set-up\n\n* Andrea Bittau\n\n\t- osdep: OS-dependant capture/injection layer conditionally (OS) compiled\n\n* hirte (Martin Beck) <martin.beck2@gmx.de>\n\n\t- Aircrack-ng: implementation of PTW, KoreK attack speedup\n\t- Aireplay-ng: Fragmentation attack, Shared Key Authentication attack, \n\t\tinjection test, hirte attack, Caffe Latte, Client Fragmentation,\n\t\tusing two wireless interfaces in aireplay-ng (one for capture, one for injection)\n\t- Airodump-ng: Screen formatting and layout improvements\n\t- ieee80211 and mac80211 driver patches and driver-related changes/fixes in the tools\n\t- osdep improvements (mac80211 among other things) and fixes\n\t- New tools: airtun-ng, tkiptun-ng, airserv-ng, airdriver-ng, airbase-ng\n\t- IVS file format\n\t- airmon-ng improvements\n\t- Partial handshake cracking and detection\n\n* Carlos Lopez <clopez@igalia.com>\n\n\t- Added support for gcrypt instead of openssl\n\t- Crypto unit tests and tests for other tools\n\t- Manpage reorganization and improvements\n\t- Makefile fixes and improvements\n\t- Travis CI set-up\n\t- Airodump-ng: --manufacturer, --wps options\n\n* DarkAudax\n\n\t- Wiki: Documentation and tutorials\n\t- Added unit tests\n\n* ASPj (Pedro Larbig)\n\n\t- Driver-related fixes\n\t- New tools: Airtun-ng\n\t- ieee80211 driver patches (ipw3945, rt73, rt2570, prism2)\n\t- MDK3\n\t- WDS support in different tools\n\t- besside-ng-crawler\n\n* Leandro Meiners <lmeiners@coresecurity.com/gmail.com> \n   and Diego Sor <dsor@coresecurity.com/diegos@gmail.com>\n\n\t- WPA Migration mode attack and documentation\n\n* nathanh2011\n\n\t- Revamped GPS logging functionality and added logcsv format\n\n* XayOn\n\n\t- Airoscript-ng\n\t- Airgraph-ng and airdrop-ng improvements\n\n* Daouid\n\n\t- Airoscript\n\n* Chris Lundquist\n\n\t- Aircrack-ng: Crack HCCAPx files\n\t- Aircrack-ng: Improve loading speed of large capture files\n\t- Aircrack-ng: Improve processing speed of large capture files\n\n* kimocoder (Christian B.) <kimocoder@aircrack-ng.org>\n\n\t- rtl8812au driver\n\n* dzk|kuro <dzk.kuro@gmail.com>\n\n\t- Initial capture/injection on BSD\n\n* Erik Tews <e_tews@cdc.informatik.tu-darmstadt.de>\n\n\t- Author of PTW attack\n\n* Loris Degioanni\n\n\t- Airpcap support\n\n* NetRoller3D\n\n\t- mac80211 driver patches and related fixes/improvements in osdep\n\t- Airmon-ng fixes\n\t- Radiotap support (and PPI detection) in various tools\n\t- Airdriver-ng improvements\n\n* Moshe Kaplan\n\n\t- Coverity Scan set-up\n\t- Memory leak and other fixes\n\t- AppArmor profiles\n\n* TheX1le (Ben Smith)\n\n\t- airgraph-ng\n\t- versuck-ng\n\t- airdrop-ng\n\n* nx5 (Alvaro Salmador) <naplam33@msn.com>\n\n\t- Aircrack-ng: WPA SSE2 implementation\n\n* Len White\n\n\t- Aircrack-ng: WPA AVX/AVX2 code porting from JTR\n\n* Tim de Waal\n\n\t- Airventriloquist-ng\n\nThanks to\n=========\n\nAlon Bar-Lev <alon.barlev@gmail.com>\nAlmantsas\nJano\nyh0- <yysjryysjr@gmail.com>\nDarko Sancanin <darko.sancanin@gmail.com>\nFabrice Fontaine\nJulian Tyler\nLatinSud aka SuD\nlayoyo\nMarohiver\nMichael Buesch <mb@bu3sch.de>\nmyst404\nRyan Schmidt\nneheb (Rosen Penev)\nSan Foxman\nSamuel Henrique\ntjt263\nZhaoChunsheng\nKyle Fuller <inbox@kylefuller.co.uk>\nSemiSkimmedSteve\nmnt\nXBM5\nRaúl Calvo Laorden\nLars Engels\ndarkfires\nMarks\nMathy Vanhoef\nWojciech Waga\nGustavo Zacarias\nsteev\nrmh\nArnaud Fontaine\nbeini\nyadox\nRamiro Polla\nmatrix.use.linux\nm4tr1x\ndan\nChristoph J. Thompson\nstsp\nEdgan\nWiz\nWouter van Kesteren\nbuzzsaw\nslyfox\nSergei Trofimovich\nmrpisto\nPaul Fertser\nimpulse32\njeroenimo\niceblox\nLudovic Drolez\nChristian Mock\nWeedy\n\n... and to anybody else who contributed, who, sometimes wishes to remain anonymous.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 73.8310546875,
          "content": "Version 1.8 (changes from aircrack-ng 1.7) - Released XX XXX 2023:\n* Aircrack-ng: Fix heap overflow in session handling, reported by Andrew Kramer (Commit hash 3301282)\n* Aircrack-ng: Handle Apple ARM CPUs model info\n* Airodump-ng: Fix bad optimization\n* Airodump-ng: Display RXQ when using frequencies\n* Airodump-ng: Add support for multiple --bssid\n* Airodump-ng: When coloring BSSID, color newly added clients\n* Airodump-ng: Document using multiple --encrypt\n* Airodump-ng: Document using multiple --essid\n* Airodump-ng: Keep selected sorting after pressing TAB\n* Airodump-ng: Allow to use -a and -z together to hide all clients\n* Airodump-ng: Move -n option to filter in usage info, and document default value in manpage\n* Airodump-ng: Add --ignore-other-chans to hide out of range channels when used along with --channel\n* Airodump-ng: fix coloring of unassociated stations when '-n' is used\n* Airodump-ng: add support for '--min-power' and '--min-rxq' options\n* Airodump-ng: fix marking when color is enabled\n* Airodump-ng: return EXIT_SUCCESS in case of --help\n* Airodump-ng: use long options in usage info\n* Airodump-ng: fix displaying -M and -W columns\n* Airodump-ng: fix displaying of station 'Rate' and 'Lost' columns\n* Airodump-ng & Aircrack-ng: fix PMKID handling\n* Airmon-ng: Cosmetic fix - missing closing parenthesis\n* Airmon-ng: Unquote newlines when parsing sysfs\n* Airmon-ng: Ensure /sys/class/net exists before iterating\n* Airmon-ng: Check for wireless tools\n* Airmon-ng: Set interface down when it uses deprecated wireless tools\n* Airmon-ng: Add additional device ID for rtl8723cs\n* Airmon-ng: shellcheck fixes\n* Airmon-ng: in a for loop, replace ls with a glob\n* Airmon-ng: add '-type l' to two find command; fixes bug\n* Easside-ng: Remove code duplication\n* Airolib-ng: Fix getopt usage\n* Besside-ng: Fix 'Bad beacon' issue\n* Airdecloak-ng: Fix typos, and indentation in usage info\n* Airdecloak-ng: Remove dead code from getopt switch, add default branch to getopt switch\n* Scripts: replace optparse with argparse\n* Scripts: Switch from distutils to setuptools\n* Airdrop-ng: Fix typos\n* Autotools: Silence missing file\n* Autotools: Allow cross-compile python\n* Autotools: Modernize usage\n* Autotools: Various fixes and improvements\n* Autotools: Add PCRE2 support\n* Autotools: shellcheck fixes\n* Patches: Fix output file names for hostapd WPE binaries\n* Patches: Fix compilation of hostapd WPE\n* Patches: Fix -r option in hostapd WPE\n* Patches: Update WPE patch for freeradius to v3.2.3\n* Manpages: Document multiple interface usage for airodump-ng\n* Manpages: Specify that airdecloak-ng --null-packets is not yet implemented\n* Manpages: add missing aliases, arguments, and other options in airodump-ng manpage\n* Manpages: Fix typos in besside-ng and airdecloak-ng\n* CI/CD: Drop Windows 32 bit compilation\n* CI/CD: Add all currently support Ubuntu, Debian, RHEL-based distro\n* CI/CD: Add Arch, Clear Linux, Gentoo, Alpine, Manjaro\n* CI/CD: Fix PVS Studio\n* CI/CD: General maintenance, various fixes and improvements\n* CI/CD: Add Coverity Scan action\n* CI/CD: Converted all buildbots to GitHub actions, including *BSD, Windows and MacOS\n* CI/CD: Add cross-compilation for a number of CPU architectures\n* CI/CD: Switch to PCRE2, but keep one PCRE action\n* CI/CD: Rework and unify ignore path\n* CI/CD: Add workflow for previously manual release checks\n* CI/CD: Add CodeQL workflow\n* CI/CD: Add codespell workflow\n* CI/CD: Add scanbuild workflow\n* CI/CD: Updated codestyle to clang-format 12 (from 3.8)\n* CI/CD: Use more distros for testing, and keep them up to date\n* CI/CD: Add markdown broken link detector\n* Testing: shellcheck fixes\n* General: Add workflow to notify on IRC\n* General: Reorganize badges in README.md\n* General: Add PCRE2 support in autotools, airodump-ng, besside-ng, and makefiles, and document it\n* General: Create Docker container, upload it to DockerHub (multiple CPU arch), and document it\n* General: Improve sysctl usage for *BSD\n* General: Optimize strlen() calls\n* General: Use stdint.h types\n* General: Reformat source code\n* General: Fix building on s390x\n* General: Add support for OpenSSL 3.x and consolidate usage RC4, MD5, SHA-1, SHA-256, and HMAC\n* General: Update Devcontainer to Ubuntu 22.04\n* General: Improve bug report template and links\n* General: Various fixes and improvements (code, refactoring, CI, integration tests, Coverity, typos, unused #include)\n* General: Remove packagecloud.io\n* General: Reformat code with clang-format-12\n\nVersion 1.7 (changes from aircrack-ng 1.6) - Released 10 May 2022:\n* Airdecap-ng: Endianness fixes\n* Airdecap-ng: Output PCAP as little endian\n* Airodump-ng: Fixed blank encryption field when APs have TKIP (and/or CCMP) with WPA2\n* Airodump-ng: Updated encryption filter (-t/--encrypt) for WPA3 and OWE\n* Airodump-ng: Fixed out-of-order timestamp captures\n* Airodump-ng: Ignore NULL PMKID\n* Airodump-ng: Fixed dropping management frames with zeroed timestamp\n* Airodump-ng: Fixed sorting where sometimes it started with a different field\n* Airodump-ng: Allow setting colors only in AP selection mode\n* Airodump-ng: Fix crash on 4K Linux console\n* Airodump-ng: Fixed issue where existing clients not linked to an AP become hidden when hitting 'o'\n* Airodump-ng: Allow use of WiFi 6E 6GHz frequencies\n* Airodump-ng: Look for oui.txt in /usr/share/hwdata\n* Airgraph-ng: Fixed graphviz package conflict\n* Airgraph-ng: Fixed downloading OUI with python3\n* Airgraph-ng: Ensure support/ directory is created when installing\n* Aircrack-ng: Fixed static compilation\n* Aircrack-ng: Fix handshake replay counter logic\n* Aircrack-ng: Handle timeout when parsing EAPOL\n* Aircrack-ng: Fixed WEP display\n* Aircrack-ng: Fixed spurious EXIT messages\n* Aircrack-ng: Improved handshake selection by fixing EAPOL timing and clearing state\n* Aircrack-ng: Ignore NULL PMKID\n* Aircrack-ng: Added Apple M1 detection\n* Aireplay-ng: In test mode, detect tampering of sequence number by firmware/driver\n* Aireplay-ng: Fixed incorrectly rewritten loops affecting fragmentation attack, and in some cases, SKA fake auth\n* Aireplay-ng: Fixed a bunch of instances where packets had their duration updated instead of the sequence number\n* Airmon-ng: Fix avahi killing\n* Airmon-ng: rewrite service stopping entirely\n* Airmon-ng: Codestyle fixes and code cleanup\n* Airmon-ng: Added a few Raspberry Pi hardware revisions\n* Airmon-ng: Fixes for 8812au driver\n* Airmon-ng: Fix iwlwifi firmware formatting\n* Airmon-ng: Remove broken KVM detection\n* Airmon-ng: Show regdomain in verbose mode\n* Airmon-ng: Updated Raspberry Pi hardware revisions\n* Airmon-ng: Document frequency usage\n* Airmon-ng: Add a sleep to help predictable names due to udev sometimes renaming interface\n* Airmon-ng: Added warning for broken radiotap headers in kernel 5.15 to 5.15.4\n* Airmon-ng: shellcheck fixes\n* Airmon-ng: support systemctl as some systems don't support 'service' anymore\n* Airmon-ng: Fixes for pciutils 3.8, backward compatible\n* Airbase-ng: use enum for frame type/subtype\n* Airbase-ng: remove a few IE in association responses\n* Besside-ng: Support and detect all channels in 5GHz in Auto-Channel mode\n* OSdep: Search additional IE for channel information\n* OSdep: Android macro fixes\n* Patches: Add missing patches that were on https://patches.aircrack-ng.org but not in repo\n* Patches: Updated freeradius-wpe patch for v3.2.0\n* Patches: Updated hostapd-wpe patch for v2.10\n* Patches: Added docker containers to test WPE patches\n* Autotools: make dist now creates VERSION file\n* Autotools: Added maintainer mode\n* Autotools: Initial support for Link Time Optimization (LTO) builds \n* Integration tests: Added a new test, and improved some existing ones\n* Airgraph-ng: switch airodump-join to Python 3\n* Manpages: Fixes (typos, tools name, etc.) and improvements\n* README: Updated dependencies and their installation on various distros in README.md and INSTALLING\n* README: Fixed typos and spelling in README.md and INSTALLING\n* Packages: Packages on PackageCloud now support any distro using .deb and .rpm, however, it requires reinstalling repo (BREAKING CHANGE)\n* General: Fix compilation with LibreSSL 3.5\n* General: Fix issues reported by Infer\n* General: Updated buildbots\n* General: Add Linux uclibc support\n* General: Compilation fixes on macOS with the Apple M1 CPU\n* General: Removed TravisCI and AppVeyor\n* General: Use Github Actions for CI (Linux, Win, macOS, code style, and PVS-Studio)\n* General: Added vscode devcontainer and documentation\n* General: Fix warnings from PVS-Studio and build with pedantic (See PR2174)\n* General: Shell script fixes thanks to shellcheck\n* General: Fixes for GCC 10 and 11\n* General: Fixed cross-compilation\n* General: Code refactoring, deduplication, cleanup, and misc code improvements\n* General: Coverity Scan fixes, which includes memory leaks, race conditions, division by 0, and other issues\n* General: PVS Studio improvements,fixes and updates\n* General: Code formatting/style fixes\n* General: Various fixes and improvements (code, CI, integration tests, coverity)\n* General: Update bug reporting template and update the process\n\nVersion 1.6 (changes from aircrack-ng 1.5.2) - Released 25 Jan 2020:\n* Aircrack-ng: Added support for MidnightBSD\n* Aircrack-ng: Fixed ARM processors display with -u\n* Aircrack-ng: Fixed AVX-512F support\n* Aircrack-ng: Fixed cracking speed calculation\n* Aircrack-ng: Fixed cracking WEP beyond 10k IVS\n* Aircrack-ng: Fixed creating new session and added test case\n* Aircrack-ng: Fixed encryption display in some cases when prompting for network to crack\n* Aircrack-ng: Fixed exiting Aircrack-ng in some cases\n* Aircrack-ng: Fixed logical and physical processor count detection\n* Aircrack-ng: Fixed PMKID length check\n* Aircrack-ng: Various fixes and improvements to WPA cracking engine and its performance\n* Airdecap-ng: Decrypt both directions when WDS is in use\n* Airdecap-ng: Fixed decrypting WPA PCAP when BSSID changes\n* Airgraph-ng: Added support for WPA3\n* Airgraph-ng: Switch to argparse\n* Airmon-ng: Added detection for wicd, Intel Wireless Daemon (iwd), net_applet\n* Airmon-ng: Handle case when avahi keeps getting restarted\n* Airmon-ng: Indicates when interface doesn't exist\n* Airodump-ng: Added autocolorization interactive key\n* Airodump-ng: Added option to read PCAP in realtime (-T)\n* Airodump-ng: Added PMKID detection\n* Airodump-ng: Added support for GMAC\n* Airodump-ng: Added support for WPA3 and OWE (Enhanced Open)\n* Airodump-ng: Basic UTF-8 support\n* Airodump-ng: Checked management frames are complete before processing IE to avoid switch from WEP to WPA\n* Airodump-ng: Display signal when reading from PCAP\n* Airodump-ng: Fixed netxml output with hidden SSID\n* Airodump-ng: Improved rates calculation for 802.11n/ac\n* Airtun-ng: Fixed using -p with -e\n* Autoconf: Fixed order of ssl and crypto libraries\n* dcrack: Fixed client reporting benchmark\n* dcrack: Now handles chunked encoding when communicating (default in Python3)\n* Freeradius-WPE: Updated patch for v3.0.20\n* General: Added NetBSD endianness support\n* General: Added python3 support to scripts\n* General: Added script to update autotools on CentOS 7\n* General: Added security policy to report security issues\n* General: Reorganizing filesystem layout (See PR 2032), and switch to automake 1.14+\n* General: Convert to non-recursive make (part of PR 2032)\n* General: Deduplicating functions and code cleanups\n* General: Fixed packaging on cygwin due to openssl library name change\n* General: Fixed SPARC build on Solaris 11\n* General: Removed coveralls.io\n* General: Updated dependencies in README.md/INSTALLING\n* General: Use upstream radiotap library, as a sub-tree\n* General: various fixes and improvements (code, CI, integration tests, coverity)\n* HostAPd-WPE: Updated for v2.9\n* Manpages: Fixes and improvements\n* Tests: Added Integration tests for aireplay-ng, airodump-ng, aircrack-ng, airbase-ng, and others\n* Tests: Added tests for airdecap-ng, aircrack-ng\n\nVersion 1.5.2 (changes from aircrack-ng 1.4) - Released 09 Dec 2018:\n* Airodump-ng: Fixed AP selection slip in interactive mode\n* Airodump-ng: Revamped GPS logging functionality and added new logging format (logcsv)\n* Aircrack-ng: Only load the maximum supported and available crypto engine\n* Aircrack-ng: Reworked wordlist producer/consumer queue\n* Airserv-ng: Fixed communication between platforms with different size int\n* Airmon-ng: Improved detection of Raspberry Pis\n* General: Signed and unsigned comparison fixes\n* Package: Added package for Ubuntu 18.10 (Cosmic)\n* General: Code cleanups\n* General: Added more tests\n* General: Compilation improvements/fixes in autotools\n* General: Big endian fixes\n* General: Fixed building on FreeBSD and OpenBSD\n* General: Added instructions to compile on DragonflyBSD and OpenBSD\n* General: Fixed spelling errors\n\nVersion 1.4 (changes from aircrack-ng 1.3) - Released 29 Sep 2018:\n* Aircrack-ng: Added PMKID cracking\n* Aircrack-ng: Serious speed up and memory usage decrease when loading large files (multiple Gb) using AVL trees\n* Aircrack-ng: Added hwloc (Hardware Locality) to improve performance\n* Aircrack-ng: Support cracking PCAP with Protected Management Frames (802.11w)\n* Aircrack-ng: Merged check_thread() and read_thread()\n* Aircrack-ng: Allow static linking with chosen SIMD\n* Aircrack-ng: Display AVX512F when present\n* Airodump-ng: Added clients GPS coordinates in NetXML file\n* Airdecap-ng: Improve decrypting/parsing speed\n* Airmon-ng: Updated/fixed using with nexmon\n* Airmon-ng: Better check for lspci requirement on systems that don't have PCI/PCIe devices\n* Airmon-ng: Added support for rtl8812au/8814au/rtl88xxau driver\n* Build: Fixed building with a few different architectures\n* Build: Switch to new CI/CD tool, PyDeployer\n* Build: Improved building on Windows (and building/testing with AppVeyor)\n* Build: Improved and tweaked CI systems (buildbots, Travis, AppVeyor)\n* Build: Support for statically linking libraries/binaries\n* Build: Automatic development packages build for multiple Linux distro and upload to PackageCloud.io\n* Tests: Added new tests for Aircrack-ng\n* Tests: Added new capture files\n* Freeradius-WPE: Fixed opening log file twice\n* General: Fixed loading PCAP on system with a different endianness\n* General: Fixed memory leaks and issues reported by static analysis tools\n* General: Fixed \"error while loading shared libraries\"\n* General: Various other small improvements in the tools, build system, tests and documentation\n* General: Update FSF address\n* General: Code formatting\n\nVersion 1.3 (changes from aircrack-ng 1.2) - Released 10 Jul 2018:\n* Aircrack-ng: Allow using Hashcat HCCAPX files as input files.\n* Aircrack-ng: Fixed floating point exception due to division by 0 when displaying stats.\n* Aircrack-ng: Updated manpage regarding hex wordlist usage.\n* Aircrack-ng: Added save/restore session when cracking using wordlists (-N and -R).\n* Aircrack-ng: Moved crypto to its own library, aircrack-crypto/ (aka crypto engine).\n* Aircrack-ng: Now back to a single binary thanks to crypto-engine.\n* Aircrack-ng: Performance improvements of the crypto engine across various CPU architectures.\n* Aircrack-ng: Added support for AVX512 in the crypto-engine (and build).\n* Aircrack-ng: Improved building crypto-engine across CPU architectures and compilers (gcc, clang and ICC).\n* Aircrack-ng: Allow to list available SIMD optimizations.\n* Aircrack-ng: Improved benchmark tool for unusual CPU/cores count.\n* Airodump-ng: Fixed running in the background.\n* Airodump-ng: Don't show WPA handshake capture notice for out-of-scope ESSIDs.\n* Airodump-ng: Add --background 0/1 to force disable/enable background settings and override autodetection of background.\n* Airodump-ng: Added support for GCMP, GCMP-256 and CCMP-256.\n* Airolib-ng: Fixed importing data when interrupting process using Ctrl-C. \n* dcrack: Check if dictionary and capture file exists before uploading them.\n* dcrack: Clean up dictionary before uploading it to the server.\n* dcrack: Gracefully stop and display errors instead of printing stacktrace whenever possible.\n* dcrack: Move temporary user files to /tmp and cleanup when done.\n* dcrack: Fixed displaying status when no clients are connected to the server.\n* dcrack: Validate uploaded PCAP and display success/failure.\n* dcrack: Improved removing BSSID.\n* WPAClean: Fixed crash with invalid prism2 header PCAP and added tests.\n* WPAClean: Don't create output file if no handshake are present or if input file is bad.\n* WPAClean: Fixed memory leak.\n* Airmon-ng: Fixed display of interface name if name is too long.\n* OSdep: Fixed memory leak and null pointer dereference.\n* OSdep: Fixed byteorder macros and other tools crashing.\n* OSdep: Added support to build as a shared library.\n* FreeRADIUS-WPE: Updated instructions for v3.0.17.\n* HostAPd-wpe: Added Response-Identity logging and displaying NETNTLM hash in hashcat format.\n* Airgraph-ng: Renamed dump-join to airodump-join.\n* General: Added coveralls.io badge.\n* General: Added --without-opt to disable stack protector when using GCC >= 4.9\n* General: Various improvements and fixes, some from Coverity Scan and Valgrind.\n* General: Fixed typos reported by codespell.\n* General: Extracted console functions and moved to aircrack-util/.\n* General: Renamed osdep/ to aircrack-osdep/.\n* General: Fixed and added functions prototypes and commented out unused functions.\n* General: Reformat source code using clang-format and added .clang-format file for IDE.\n* General: Improvements to AppVeyor and TravisCI builds\n* Building: Added NEON intrinsic support.\n* Building: Support paths containing spaces, during autoreconf.\n* Building: Fix compilation without getauxval in the trampoline binary.\n* Building: Fixed compiler warnings on Windows, FreeBSD.\n* Building: Fixes and documentation for OSX.\n* Building: Added support for tcmalloc and jemalloc.\n* Building: Added instruction to build Windows binaries with Airpcap.\n* Unit test: Using CMocka for some tests\n* Documentation: Updated explanations regarding building some experimental tools. \n\nVersion 1.2 (changes from aircrack-ng 1.2-rc5) - Released 15 Apr 2018:\n* General: Fixed compiling Windows binaries and updated README.md/INSTALLING.\n* General: Fixed commands to install dependencies on Debian/Ubuntu and FreeBSD.\n* General: Added command to install dependencies on Fedora/CentOS/RHEL.\n* General: Removed packages/ directory.\n* General: Added Alpine Linux and Kali Linux buildbots.\n* General: Fixed configure with --with-libpcap-include=/somewhere/include and --with-libpcap-lib=/somewhere/lib.\n* General: Fixed search for ethtool when running as a non-root user.\n* General: Various fixes.\n* Airmon-ng: Fixed mktemp on Alpine Linux.\n\nVersion 1.2-rc5 (changes from aircrack-ng 1.2-rc4) - Released 03 Apr 2018:\n* General: Switching to autotools which allows compiling on more plateforms.\n* General: Updated README.md and INSTALLING files.\n* General: Fixed compilation on a lot of platforms.\n* General: Fixed compilation warnings across platforms and compilers.\n* General: Fixed typos in the tools and in manpages.\n* General: Replace %d/ld with %u/lu for unsigned printf parameters.\n* General: Added option to disable stack protector.\n* General: Improved makefile to get reproducible builds.\n* General: Fixed compilation with OpenSSL 1.1.0.\n* General: Updated radiotap parsing code.\n* General: Updated all URLs to use HTTPS.\n* General: Fixed compilation with libreSSL.\n* General: Added WPS 2.0 test PCAP.\n* General: Do not use stackguard on Windows.\n* General: Fixed warnings on GCC7.\n* General: Improved code quality using Coverity Scan.\n* General: Added badges for Coverity scan and Intel compiler buildbot\n* Aircrack-ng: Use trampoline binary to automatically select fastest executable depending on the CPU\n* Aircrack-ng: Fixed missing include for linecount.\n* Aircrack-ng: Fixed concurrency issues when reading multiple WEP PCAP.\n* Aircrack-ng: Added support for creating HCCAPx file format.\n* Airodump-ng: Get the channel from HT information.\n* Airodump-ng: Detect WPS 2.x.\n* Airodump-ng: Also check current directory for OUI file.\n* Airodump-ng: Fixed writing ESSID to CSV, Kismet CSV and Kismet NetXML files when ESSID gets decloaked and cloaked length was 1.\n* Aireplay-ng: Added deauthentication reason code option.\n* Aireplay-ng: Increase amount of AP to test when running injection test.\n* Airodump-ng: Fixed 802.11a channel hopping list.\n* Airodump-ng: Fix creation of .xor files.\n* Airodump-ng: Added support for HT channels (HT20/HT40-/HT40+).\n* Airodump-ng: Now displaying correct rate for 802.11n or 802.11ac AP.\n* Airmon-ng: Fixed checking for processes.\n* Airmon-ng: Fixed display of \"cannot access '/sys/class/ieee80211/': No such file or directory\".\n* Airmon-ng: Fixed bashisms.\n* Airmon-ng: Fixed display of specific drivers.\n* Airmon-ng: Fixed display of cards on the sdio bus.\n* Airmon-ng: Now supports nexmon driver on RPi 3 (and 0 Wireless) using Kali Linux.\n* Airmon-ng: Added identification for another realtek chipset and generic Ralink/MT.\n* Airmon-ng: Handle 2 types of rfkill commands and updated unblock text.\n* Airmon-ng: more portable modinfo usage.\n* Airmon-ng: remove grep -P references upon request.\n* Airmon-ng: Do not replace driver name by ?????? when driver is valid. \n* Airgraph-ng: Removed irrelevant comment in README.\n* Airgraph-ng: Handle SSID with double quotes.\n* Airgraph-ng: Fixed parsing OUI file.\n* Airdrop-ng: Updated lorcon2 installation instructions.\n* Besside-ng: Fixed 'wi_read(): No child processes' error.\n* Airdecloak-ng: Fixed segfault due to NULL pointer dereference.\n* osdep: Remove wi_set_channel(1) on open wifi interface (cygwin).\n* osdep: Fixed RAW socket resource leak.\n* Patches: Created WPE patches and documentation for current HostAPd and Freeradius versions.\n* Airodump-ng: Fix incorrect if conditions which always are false.\n* Airodump-ng: Remove useless not NULL check.\n* Airventriloquist: New tool from https://github.com/Caesurus/airventriloquist/\n* dcrack: Fixed indentation.\n* TravisCI: Fixed compilation on OSX.\n* AppVeyor: Added support for AppVeyor, CI for cygwin builds.\n\nVersion 1.2-rc4 (changes from aircrack-ng 1.2-rc3) - Released 14 Feb 2016:\n* Airodump-ng: Increase console window size.\n* Aircrack-ng: Added time remaining and percentage done when doing WPA cracking with a dictionary (file).\n* Aircrack-ng: Make benchmark last 15 seconds for a more accurate value.\n* Aircrack-ng: Fixed compilation on Cygwin 64 and drastically improve cracking speed for all CPUs (up to +175% performance).\n* Airmon-ng: Improved chipset detection on FreeBSD.\n* Airmon-ng: Display chipset for some Broadcom SDIO.\n* Airbase-ng: Fixed broadcasting 'default'.\n* General: Updated and cleanup TravisCI file to test compilation and testing on OSX.\n* General: Fixed reading large files on Cygwin.\n* General: Fixed a bunch of compilation warnings with gcc and clang.\n* General: Fixed compilation on Solaris, OpenBSD, DragonFlyBSD 4.4, NetBSD, OSX.\n* General: Fixed compilation on ARM and MIPS.\n* General: Improved compatibility on FreeBSD and Cygwin (RAM and CPU detection).\n* General: Fixed gcc segfault on cygwin.\n* General: Memory cleanups, fixed memory leaks and fix other issues reported by Valgrind.\n* Testing: Fixes on various OSes.\n* INSTALLING: Updated installation instructions for different OS.\n* TravisCI: Improved file.\n\nVersion 1.2-rc3 (changes from aircrack-ng 1.2-rc2) - Released 21 Nov 2015:\n* Airodump-ng: Prevent sending signal to init which caused the system to reboot/shutdown.\n* Airbase-ng: Allow to use a user-specified ANonce instead of a randomized one when doing the 4-way handshake\n* Aircrack-ng: Fixed compilation warnings.\n* Aircrack-ng: Removed redundant NULL check and fixed typo in another one.\n* Aircrack-ng: Workaround for segfault when compiling aircrack-ng with clang and gcrypt and running a check.\n* Airmon-ng: Created version for FreeBSD.\n* Airmon-ng: Prevent passing invalid values as channel.\n* Airmon-ng: Handle udev renaming interfaces.\n* Airmon-ng: Better handling of rfkill.\n* Airmon-ng: Updated OUI URL.\n* Airmon-ng: Fix VM detection.\n* Airmon-ng: Make lsusb optional if there doesn't seem to be a usb bus.  Improve pci detection slightly.\n* Airmon-ng: Various cleanup and fixes (including wording and typos).\n* Airmon-ng: Display iw errors.\n* Airmon-ng: Improved handling of non-monitor interfaces.\n* Airmon-ng: Fixed error when running 'check kill'.\n* Airdrop-ng: Display error instead of stack trace.\n* Airmon-ng: Fixed bashism.\n* Airdecap-ng: Allow specifying output file names.\n* Airtun-ng: Added missing parameter to help screen.\n* Besside-ng-crawler: Removed reference to darkircop.org (non-existent subdomain).\n* Airgraph-ng: Display error when no graph type is specified.\n* Airgraph-ng: Fixed make install.\n* Manpages: Fixed, updated and improved airodump-ng, airmon-ng, aircrack-ng, airbase-ng and aireplay-ng manpages.\n* Aircrack-ng GUI: Fixes issues with wordlists selection.\n* OSdep: Add missing RADIOTAP_SUPPORT_OVERRIDES check.\n* OSdep: Fix possible infinite loop.\n* OSdep: Use a default MTU of 1500 (Linux only).\n* OSdep: Fixed compilation on OSX.\n* AppArmor: Improved and added profiles.\n* General: Fixed warnings reported by clang.\n* General: Updated TravisCI configuration file\n* General: Fixed typos in various tools.\n* General: Fixed clang warning about 'gcry_thread_cbs()' being deprecated with gcrypt > 1.6.0.\n* General: Fixed compilation on cygwin due to undefined reference to GUID_DEVCLASS_NET\n* General: Fixed compilation with musl libc.\n* General: Improved testing and added test cases (make check).\n* General: Improved mutexes handling in various tools.\n* General: Fixed memory leaks, use after free, null termination and return values in various tools and OSdep.\n* General: Fixed compilation on FreeBSD.\n* General: Various fixes and improvements to README (wording, compilation, etc).\n* General: Updated copyrights in help screen.\n\nVersion 1.2-rc2 (changes from aircrack-ng 1.2-rc1) - Released 10 April 2015:\n* Airtun-ng: Adds WPA CCMP and TKIP decryption and CCMP encryption\n* Compilation: Added support for DUMA.\n* Makefile: Renamed 'unstable' to 'experimental'.\n* Airodump-ng: Fixed XML sanitizing.\n* Airmon-ng: Airmon-zc is now stable enough to replace airmon-ng.\n* Manpages: Removed airdriver-ng manpage and references to it (forgot to do it before the previous release).\n* Manpages: Updated 'see also' references in all manpages.\n* PCRE: Added it in various places and docs.\n* WZCook: Fixed processing values stored in register.\n* Updated a few headers files (if_llc, ieee80211, ethernet and if_arp).\n* Travis CI: updated make parameter and add testing with pcre.\n* Compilation: de-hardcode -lpcap to allow specifying pcap libraries.\n* Makefile: Fixed installing/uninstalling Airdrop-ng documentation files.\n* Makefile: Fixed uninstalling ext_scripts.\n* Airodump-ng: Added new paths (and removed one) for OUI files and simplified logic to find the OUI file.\n* Aircrack-ng: Fixed ignoring -p when specified after -S.\n* Airmon-ng: fixes for openwrt busybox ps/grep issues which do not seem present in other versions of busybox\n* Airmon-ng: fix vm detection.\n* Airserv-ng: Fixed channel setting (and assert call).\n* Airodump-ng: Fixes to NetXML (unassociated clients missing and various other small bugs) and update the code to match current NetXML output.\n* Airodump-ng: Removed requirement for 2 packets before AP is written to output (text) files.\n* Airodump-ng: Fixed formatting of ESSID and display of WPA/WPA2 (as well as a bunch of other small fixes) in CSV file.\n* Airodump-ng: Fixed GPSd.\n* Airodump-ng: Allow to specify write interval for CSV, kismet CSV and NetXML files.\n* Airserv-ng: Fixed wrong station data displayed in Airodump-ng.\n* General: Fixed 64 bit promotion issues.\n* General: Fixed a bunch of uninitialized values and non-zeroed structures (upon allocating them).\n* General: Added Stack protection.\n* Various other small fixes and improvements.\n\nVersion 1.2-rc1 (changes from aircrack-ng 1.2-beta3) - Released 31 October 2014:\n* Airodump-ng should be able to parse the canonical oui file.\n* Airodump-ng: Fixed GPS stack overflow.\n* Airodump-ng: Fixed stopping cleanly with Ctrl-C.\n* Airmon-zc: better handling for when modules are not available (incomplete).\n* Airmon-zc: users can now start the monitor interface again to change channels.\n* Airmon-zc: update to use ip instead of ifconfig if available.\n* Airmon-zc: better handling of devices without pci bus.\n* Aireplay-ng: Fixed tcp_test stack overflow.\n* OSdep: Fixed libnl detection. Also avoid detection on non Linux systems.\n* OSdep: Fixed segmentation fault that happens with a malicious server.\n* Besside-ng: Add regular expression matching for the SSID.\n* Buddy-ng: Fixed segmentation fault.\n* Makefile: Fixed 'commands commence before first target' error when building Aircrack-ng.\n* Fixed segfault when changing the optimization when compiling with gcc thanks to Ramiro Polla.\n* Removed airdriver-ng (outdated and not meant for today's kernels).\n* Added gitignore file.\n* Fixed build issues on other compilers by using stdint.h types.\n* Fixed CVE-2014-8321, CVE-2014-8322, CVE-2014-8323 and CVE-2014-8324 across multiple tools.\n* Updating installation file and added pkg-config as a requirement.\n* Various small fixes and improvements.\n\nVersion 1.2-beta3 (changes from aircrack-ng 1.2-beta2) - Released 31 March 2014:\n* Finally properly fixed the buffer overflow.\n* Fixed channel parsing (eg 108, 125) and updated radiotap parser.\n* Various other small fixes.\n\nVersion 1.2-beta2 (changes from aircrack-ng 1.2-beta1) - Released 30 November 2013:\n* Airbase-ng: Fixed order of IE when creating soft Access Point.\n* Airbase-ng: Fixed Caffe Latte Attack not working for all clients.\n* Aircrack-ng: Improved PTW speed thanks to Ramiro Polla.\n* Airmon-zc: Fixed improper use of the interface.\n* Airdecap-ng: Fixed decoding captures with WMM enabled.\n* Various: Fixed memory leaks in Aircrack-ng, Aireplay-ng, OSdep.\n* Added support for static analysis using Coverity Scan.\n* Fixed compilation due to PIC unfriendly assembly on Gentoo hardened.\n* Fixed running tests using 'make check'.\n* Fixed building aircrack-ng with recent version of gcc and also on cygwin.\n* Various other small fixes.\n\nVersion 1.2-beta1 (changes from aircrack-ng 1.1) - Released 25 May 2013:\n* Airmon-ng: Added chipset information for ar9170usb, wl, rt2800usb, ar9271, wl12xx, RT3070STA, ath9k_htc, r871x_usb_drv, ath5k, carl9170 and various Intel drivers.\n* Airmon-ng: Fixed chipset information ipw2200.\n* Airmon-ng: Fixed output for r8187 driver.\n* Airmon-ng: Improved chipset information for a few drivers.\n* Airmon-ng: Support for displaying information about ath9k.\n* Airmon-ng: Added 'check kill' to automatically kill services that could interfere.\n* Airmon-ng: Fixed issues with Intel chipsets detection.\n* Airmon-ng: Updated iw download link.\n* Airmon-ng: Better mac80211 handling.\n* Airmon-ng: Added detection for WiLink TI driver, rtl819xU, iwlwifi.\n* Airmon-zc: Improved version of Airmon-ng with more detailed information.\n* Airdecap-ng: Fixed decoding QoS frames (Closes: #667 and #858).\n* Airgraph-ng: Use Aircrack-ng Makefile instead of its own.\n* Airbase-ng: Fixed bug using clients list.\n* Airbase-ng: Fixed issue with QoS (ticket #760).\n* Airbase-ng: Fixed sending beacons with null SSID.\n* Airbase-ng: Allow non ASCII ESSID.\n* Airodump-ng: Fixed buffer overflow (ticket #728).\n* Airodump-ng: Fixed channel parsing.\n* Airodump-ng: Fixed FreeBSD battery reading.\n* Airodump-ng: Renamed \"Packets\" column to \"Frames\" (\"Packets\" was not correct).\n* Airodump-ng: Fixed XML bugs when outputting NetXML: ESSID containing '&' or chinese characters, when multiple encryption are used.\n* Airodump-ng: Add alternative paths for Airodump-ng OUI file.\n* Airodump-ng: Added GPSd 2.92+ support (JSON).\n* Airodump-ng: Add option --manufacturer to display manufacturer column on airodump-ng.\n* Airodump-ng: Add feature to show APs uptime (--uptime) based on the timestamp.\n* Airodump-ng-OUI-update: Fixed OUI URL and allow CURL redirect (ticket #829).\n* Airdrop-ng: removed .py from file names.\n* Airdrop-ng: Fixed bug in installer.\n* Airdrop-ng: Fixed OUI lookup.\n* Airdrop-ng: Fixed bug when several BSSID have the same ESSID.\n* Airdrop-ng: Doesn't constantly parse anymore, wait 5 seconds each time it parses.\n* Airdrop-ng: Fixed crash when failing to get channel or when rules file didn't exist.\n* Airdrop-ng: Fixed to use lorcon.py/lorcon2 libs.\n* Airdrop-ng: Updated README.\n* Airdrop-ng: Fixed error preventing update to work.\n* Versuck-ng: New script to do the same thing as the kismet autowep plugin from the CLI.\n* Aircrack-ng: Fixed counter display error when cracking WPA.\n* Aircrack-ng: Added output of the WPA handshake to EWSA project file.\n* Aircrack-ng: Added output of the WPA handshake to oclhashcat+ project file.\n* Aircrack-ng: Added benchmark option, -S.\n* Aircrack-ng: Fixed -u option.\n* Aircrack-ng: PIC fix for hardened systems from Francisco Blas Izquierdo Riera (klondike)\n* Aircrack-ng: Allow dictionaries larger than 2Gb.\n* Aircrack-ng: Give a better message when there's an error with the dictionary.\n* Aircrack-ng: Prevent a buffer overflow from happening (Wojciech Waga).\n* Aireplay-ng: Added migration mode attack from Leandro Meiners and Diego Sor from Core Security (BlackHat Las Vegas 2010)\n* Aireplay-ng, Airodump-ng: Added option to ignore issue with -1 channel.\n* Airserv-ng: Fixed crash when clients disconnect.\n* Besside-ng-crawler: Added EAPOL Crawler.\n* Airdecloak-ng: Fixed bug when using pcap files with PPI headers.\n* dcrack: Distributed cracking server/client.\n* wifi-detect.sh: reference script for testing wifi card detection using iwconfig vs ls /sys/class/net\n* WPA Clean: Tool to merge and clean WPA capture files.\n* Wireless Panda: C# Library to parse Airodump-ng output files (and added example project).\n* OSdep (Linux): Setting fixed bitrates on mac80211 2.6.31 and up.\n* OSdep (Linux): Added support for nl80211 thanks to impulse32. Use 'make libnl=true' to add netlink support (Ticket #1004).\n* Manpages: Improvement and fixes for Airgraph-ng, Airodump-ng, packetforge-ng, Aircrack-ng\n* Manpages: Fixed various spelling issues and single quote issues.\n* Makefiles: Added tests for the different tools.\n* Makefiles: Various fixes and improvements.\n* Makefiles: Added support for libgrypt instead of OpenSSL via parameter.\n* Patches: Added a few patches.\n* Removed useless script: patchchk.\n* Finally fixed licensing issues.\n* Fixed endianness issues in most of the tools.\n* Fixed cppcheck errors (Ticket #957).\n* Fixed various compilation issues on Linux and Cygwin, GNU/Hurd, Darwin (OSX) and Sparc.\n* Fixed compilation on recent gcc versions on Linux, Cygwin.\n* Added instructions for Travis CI: Free Hosted Continuous Integration Platform for the Open Source Community.\n* Added Readme.Md for GitHub. Aircrack-ng subversion repository is synced on GitHub: http://github.com/aircrack-ng/aircrack-ng\n* Various other small bug fixes.\n\nVersion 1.1 (changes from aircrack-ng 1.0) - Released 24 April 2010:\n* airdrop-ng: New tool by TheX1le.\n* airodump-ng, aircrack-ng, airdecap-ng, airbase-ng: Fixed buffer overflow in airodump-ng due to forged eapol frame.\n* aircrack-ng: Fixed multicast detection (WPA handshake detection).\n* airodump-ng: Added interaction (see wiki for the commands).\n* airodump-ng: Fixed client time in netxml file.\n* airtun-ng: Add WDS and bridge support.\n* airbase-ng: automatically set privacy bit to 1 if WPA or WPA2 is used (-Z or -z option).\n* airmon-ng: Updated iw URL for v0.9.19.\n* airdriver-ng: Fixed link for madwifi-ng.\n* aireplay-ng: Chopchop enhancement to not stop but wait on deauth packets.\n* tkiptun-ng: Fixed segfault.\n* wesside-ng: Fixed compilation bug with recent version of gcc.\n* cygwin: Compiling sqlite isn't necessary anymore, libsqlite3-devel package can be used.\n* osdep: Strict aliasing and x86_64 fix.\n* osdep: Add tap support for Darwin/OS X. Still require tuntaposx from sourceforge to work.\n* All: Fixed compilation on cygwin 1.7.\n* All: Fixed compilation on recent version of OSX.\n* manpages: Fixed aireplay-ng manpage for attack 0: not disassociation packets, deauth packets.\n* manpages: Added the keys for interaction in airodump-ng.\n* patches: Added regulatory domains override patches for atheros drivers (ath5k, ath9k and ar9170).\n* patches: Added 2.6.32 patch for r8187 driver (ieee80211).\n* Makefiles: Fixed make uninstall.\n\nVersion 1.0 (changes from aircrack-ng 1.0-rc4) - Released 08 September 2009:\n* airserv-ng: Now works fine between 32 and 64bit OSes.\n* wesside-ng: Fixed some endianness bugs\n* airodump-ng-oui-update: Make sure the user is root when updating the file.\n* airmon-ng: Updated iw download link (0.9.17).\n* All: Fixed compilation with some gcc.\n* patches: Added missing patches from patches.aircrack-ng.org: mac80211_2.6.28-rc4-wl_frag+ack_v3.patch\n* manpage: Updated aireplay-ng manpage.\n* INSTALLING: Removed (now) useless requirement for OSX installation.\n* GUI (windows): Fixed 2nd selection of a capture file.\n\nVersion 1.0-rc4 (changes from aircrack-ng 1.0-rc3) - Released 27 July 2009:\n* airodump-ng: Decreased time before writing text files to 5 sec (instead of 20).\n* airodump-ng: New option --output-format option (to replace --nocap): specify output files.\n* airodump-ng: Fixed encryption tag value in kismet netxml files.\n* airodump-ng: Sanitize essid before writing it into kismet netxml files.\n* airodump-ng: Log manufacturer into kismet netxml files.\n* aireplay-ng: Fake auth: reduce the number of ACKs to 2 per packet.\n* aireplay-ng: Added possibility to stop sending fake auth requests after n retry failures.\n* aircrack-ng: Fixed compilation on FreeBSD.\n* aircrack-ng: Fixed aircrack-ng --help on OSX.\n* airmon-ng: Updated iw download link (0.9.15).\n* airmon-ng: Fix chipset detection for iwlagn (show \"Intel 4965/5xxx\" instead of \"Unknown\").\n* airmon-ng: Display a message when udev rename madwifi-ng VAPs.\n* airmon-ng: sleep 1s instead of 0.1 (0.1 is not supported by all distro).\n* airolib-ng: Fixed locked database counter.\n* airdriver-ng: Updated to rt2570 k2wrlz v1.6.3\n* airdriver-ng: Updated r8187 patch.\n* aircrack-ng, airdecap-ng, ivstools, airodump-ng, airbase-ng, aireplay-ng, airtun-ng, packetforge-ng, tkiptun-ng: Added support for PPI captures support (Thanks to dragorn).\n* airdecap-ng: Fixed segfault on some capture files.\n* wesside-ng, easside-ng: \"ERROR: Packet length changed while transmitting (XX instead of YY)\" should finally be fixed.\n* All: Added compatibility file for functions like cpu_to_le32. That should fix compilation on a lot of OSes.\n* All: Temporary fix to allow compilation with recent gcc (Error message: \"dereferencing type-punned pointer will break strict-aliasing rules\"). I hope it doesn't break anything. A cleaner fix will be applied later.\n* INSTALLING: OSX patch for Intel CPU isn't required anymore\n* INSTALLING: Updated instructions to compile sqlite on cygwin for 3.6.16.\n* patches: Updated sqlite (v3.6.13) patch for cygwin.\n* patches: Updated wlanng patch for 2.6.28.\n* patches: Updated madwifi-ng patch to r4073\n* packages: Fixed spec (RPM) file.\n* GUI (windows): Use last used directory when selecting another file to crack.\n* GUI (windows): Allow .pcap files too (next to .cap, ...). \n\nVersion 1.0-rc3 (changes from aircrack-ng 1.0-rc2) - Released 26 March 2009:\n* airodump-ng: Added Active Scanning Simulation.\n* airodump-ng: Added support for kismet-newcore netxml files (DTD v3.1.0)\n* airodump-ng: Changed file extensions for CSV (.csv instead of .txt) and for kismet CSV\n  (.kismet.csv instead of .csv).\n* airodump-ng: Fixed WPA tag parsing and added QoS detection based on direction.\n* airodump-ng: Added option to only disable capture file; all other files\n  (CSV, kismet CSV, kismet netxml, GPS) will be created.\n* aircrack-ng: Fixed -w with WEP.\n* aircrack-ng: Fixed useless memory allocation.\n* aircrack-ng: Fixed compilation with gcc 2.95.\n* aircrack-ng: Fixed compilation on 64 bit (SHA-SSE2).\n* aircrack-ng: Fixed errors when compiling on OS X 10.5.6 PPC.\n* aircrack-ng: Added an option to write the key to a file.\n* airolib-ng: Fixed a bug where database is created even if parameters are not correct.\n* airmon-ng: Added wifibox to the list of network managers.\n* airmon-ng: Updated iw download link (0.9.11).\n* airmon-ng and airdriver-ng: Move them in script/ directory.\n* airmon-ng: Bypass interface checks when ps command returns an error. Needed for BusyBox limited ps command.\n* airdriver-ng: Update legacy RT73 driver to use rt73-k2wrlz v3.0.2\n* tkiptun-ng: Allow padded arp packets to the client.\n* airserv-ng & osdep: Fixed compilation on FreeBSD 7.1\n* easside-ng & wesside-ng: Fixing again \"Error Wrote 39 out of 30\" error message.\n* manpages: Fixed manpages titles.\n* Makefile: Only compile and install wesside-ng, easside-ng, buddy-ng and tkiptun-ng with \"make unstable=true\".\n* patches: Updated sqlite (v3.6.11) patch for cygwin.\n* patches: Added patch for aircrack-ng on MacOSX\n* scripts: Added a script to automatically patch and install SQLite in cygwin.\n\nVersion 1.0-rc2 (changes from aircrack-ng 1.0-rc1) - Released 22 Jan 2009:\n* aircrack-ng: Added SSE2 supports (WPA cracking speed is improved a lot) thanks to nx5.\n* aircrack-ng: Fixed detection of the number of CPU (especially with recent CPUs).\n* aircrack-ng: Fixed long lasting WPA bugs: cannot find the key with SMP computers,\n  wasn't exiting correctly, ...\n* aircrack-ng: Fixed usage of a dictionary with WEP.\n* aircrack-ng: Now only display ASCII WEP keys when 100% of the hex key can be converted to ASCII.\n* aircrack-ng: You can now specify the number of threads for cracking even if you have a non-SMP computer.\n* aircrack-ng: Now output an error message if using -r and it wasn't compiled with sqlite support.\n  It was a problem on some ubuntu.\n* airdecloak-ng: New tool to remove wep cloaked frames from a pcap file.\n  For more details see https://www.aircrack-ng.org/doku.php?id=airdecloak-ng\n* airodump-ng: Added kismet csv output support.\n* airodump-ng: Fixed power value display (for ath interface with a high number, more than 99).\n* airodump-ng: Can work on the new frequencies (allowed by frequency Chaos patch).\n* airodump-ng: Now display if the network has QoS enabled.\n* aireplay-ng: Fixed crash with too short packets (seen with zd1211).\n* aireplay-ng: Fixed STP usage in fragmentation attack.\n* aireplay-ng: Fixed bug with deauth attack.\n* airtun-ng: Fixed STP conversion.\n* airolib-ng: Added sample database in test/ directory.\n* tkip-tun: New tool to inject on WPA1 with QoS enabled networks. Full description:\n  decrypt packets coming from the AP in a TKIP network, which uses QoS (ieee802.11e).\n  It also breaks the MIC Key for sending packets towards the Client correctly encrypted and signed.\n  Stores plaintext packet and keystream in separate files.\n* airbase-ng: Several improvements ( See https://github.com/aircrack-ng/aircrack-ng/issues/466 ).\n* airbase-ng: Added compatibility with some clients. added random source IPs and MACs for cfrag attack (-N) to evade simple flood protection.\n* airmon-ng: Fixed some 'unary operator expected' errors.\n* airmon-ng: Fixed channel number setting with mac80211 drivers.\n* airmon-ng: Recognition of 4 new chipsets: acx1xx, at76_usb, adm8211 and AR9001U (otus).\n* airmon-ng: Fixed some chipset naming inconsistencies between ieee80211 and mac80211 drivers.\n* airmon-ng: Fixed display of \"airmon-ng check\".\n* airmon-ng: Improved mac80211 driver handling.\n* airdriver-ng: Fixed madwifi-ng driver download URL.\n* airdriver-ng: Updated openSuse information.\n* wesside-ng: Fixed open() with O_CREAT that needs 3 arguments.\n* osdep: Added TAP/TUN MTU getter.\n* manpages: Fixed misspelled airserv-ng manpage filename.\n* manpages: Added Airbase-ng, Tkiptun-ng manpages.\n* manpages: Updated description of all manpages.\n* Makefile: Fixed errors when compiling on OSX 10.5.\n* Makefile: Now ensure that make 3.81 or higher (mandatory) is used when compiling on OSX 10.4.\n* Makefile: Only install airolib-ng manpage if airolib-ng is installed.\n* Makefile: Added 'make check' that tests key cracking against files given in test/ directory.\n* general: Fixed 'evalrev' on Solaris.\n* general: Fixed compilation on Sun SPARC.\n* general: Fixed compilation on some distribution (with a recent version of gcc) due to warnings (because of not getting the return value of some functions).\n* general: Several compilation fixes.\n* patches: Updated ath5k patches\n* patches: Added rt2570 patch (kernel 2.6.24).\n* patches: Updated madwifi-ng patch for r3745.\n* patches: Updated mac80211 patches.\n* patches: Added zd1211rw patch for 2.6.26, b43/b43legacy for 2.6.26-wl.\n* patches: rt73, r8187 patches for fedora kernels (should work on 2.6.27).\n* patches: Added Defcon 16 patch (more frequencies than the usuals) for ath5k called frequency Chaos.\n* patches: Added injection patch for rtl8187 (mac80211).\n* patches: Added a universal mac80211 fragmentation and injection speed patch.\n* GUI (windows): Fixed: Windows GUI gives \"please specify dictionary\".\n\nVersion 1.0-rc1 (changes from aircrack-ng 1.0-beta2) - Released 09 Jun 2008:\n* airbase-ng: Multi-purpose tool aimed at attacking clients as opposed to the AP.\n* airbase-ng: Added replay tool for external packet processing feature.\n* aircrack-ng: Fixed: Displaying twice the wep key at the end and \"Warning: Previous crack is still running\".\n* aircrack-ng: Fixed detection of WPA handshake (was not working correctly in previous release).\n* aircrack-ng: Fixed PTW attack against QoS and WDS packets.\n* aircrack-ng: Added oneshot option to try PTW only once.\n* airodump-ng: Fixed channel numbers (Fixed \"fixed channel\" messages).\n* airodump-ng: Added frequency selection (-C).\n* aireplay-ng: Fixed injection on OpenBSD.\n* aireplay-ng: Fixed a rtc bug which freezed aireplay-ng in case /dev/rtc0 is not available.\n* aireplay-ng: Fixed chopchop attack against QoS packets.\n* aireplay-ng: Added Caffe-Latte attack.\n* aireplay-ng: Added CFrag attack: Turns every IP and ARP packet into an ARP request against the client.\n* airtun-ng: Added support for fragmented packets.\n* airdriver-ng: Updated drivers.\n* airserv-ng: Various fixes.\n* airmon-ng: Added nl80211 usage.\n* airmon-ng: Use 'iw' when it is found.\n* airmon-ng: Fixed error with madwifi-ng when creating new VAP.\n* wesside-ng: Added option to ignore ACKs.\n* OSdep: Fixed endieanness bugs.\n* OSdep: Orinoco: attempt to bring interface down before switching to monitor mode.\n* All: Added copyright and GPL in missing files.\n* All: Fixed compilation on Mac OSX 10.5.2 (PPC).\n* GUI: Fixed \"Choose\" button (airdecap-ng).\n* Makefile: Fixed usage of iCC versions other than 9.0.\n* patches: Updated rtl8187 patch.\n* patches: Updated madwifi-ng patch.\n* patches: Updated sqlite patch (cygwin).\n* patches: Added mac80211 frag patch.\n* patches: Added b43 and updated bcm43xx patches.\n\nVersion 1.0-beta2 (changes from aircrack-ng 1.0-beta1) - Released 01 Feb 2008:\n* aircrack-ng: Cracking WPA now does only require 2 packets (instead of 4).\n* airodump-ng: Fixed (WEP) open system and shared key system detection.\n* airodump-ng (win): Battery status is now displayed.\n* airdriver-ng: Fixed module detection.\n* airdriver-ng: Updated drivers.\n* airdriver-ng: Added firmware support.\n* airdriver-ng: Added softmac installation.\n* airdecap-ng: Save packets with ICV error in a separate file.\n* airolib-ng: Automatically create a database if it does not exist. \"init\" option is not necessary anymore.\n* airolib-ng: Now uses getopts for options.\n* airdriver-ng: Updated some drivers download locations.\n* airdriver-ng: Fixed softmac installation\n* airmon-ng: Added detection of ipwraw-ng driver.\n* airmon-ng: When stopping an interface, it is in managed mode\n* Makefile: supports DESTDIR or destdir parameter.\n* Makefile: renamed ROOT (used by gentoo for other stuff) variable by AC_ROOT.\n* manpages: Fixes for whatis\n* patches: updated cygwin sqlite patch\n* patches: updated rtl8187 patch\n* Added instructions to compile airolib-ng and using '-r' option in aircrack-ng for cygwin.\n* Fixed compilation of aircrack-ng with some gcc versions\n\nVersion 1.0-beta1 (changes from aircrack-ng 0.9.2) - Released 01 October 2007:\n* airodump-ng: Added --berlin option (see code for more information).\n* airodump-ng: Fixed 100% cpu utilization while channelhopping on rtap interface\n* airodump-ng: Fixed frame length < 10bytes bug\n* airodump-ng: Added out-of-monitor-mode, channel hop and interface down detection\n* airodump-ng: Fixed debian bug #417388: airodump-ng doesn't restore terminal after error\n* airodump-ng: Fixed opening the same interface more than once\n* airodump-ng: Fixed PWR values for some drivers\n* airodump-ng: Fixed airodump sanity check (resulted in showing WPA networks without CIPHER & AUTH)\n* airodump-ng: Added \"-f\" to set the time in ms between hopping channels\n* airodump-ng: Added partial 40bit WEP detection\n* airodump-ng: Added \"--showack\" to print statistics about ack/cts and rts frames\n* airodump-ng: Added \"-h\" to hide the known stations in ack statistics\n* airodump-ng: Added \"-r\" to read packets from a pcap file\n* aircrack-ng: Added BSSID merge option\n* aircrack-ng: Added passive ptw attack (using also IP packets for cracking)\n* aircrack-ng: Made ptw attack default, for korek attack use -K\n* aircrack-ng: Fixed huge memory usage with ptw attack on hundreds of APs\n* aircrack-ng: Added -M paramteter for specifying maximum number of IVs to be read\n* aircrack-ng: Changed ptw testpackets from first to random (fixes invalidation of found keys)\n* aircrack-ng: Added --wep-decloak mode\n* aircrack-ng: Added --ptw-debug to allow klein or ptw disabling\n* aircrack-ng: PTW: Starts a new process group\n* aircrack-ng: Increased PTW key checking speed by 20%\n* aircrack-ng: Try 1000 40bit keys before starting 104bit cracking, to get the key \"instantly\" without waiting for 104 bit to fail\n* aircrack-ng: Fixed not shown ascii keys, when found key was shorter than expected\n* aircrack-ng: Added visual inspection of the different keybytes (--visual-inspection).\n* airdecap-ng: Fixed bug in calc_pmk() function causes wrong PMK to be computed\n* aireplay-ng: Added usage of RTS/CTS, auth and ACK to --test (more stable and faster)\n* aireplay-ng: Added TCP connection test to --test\n* aireplay-ng: Changed injection rate to be more stable\n* aireplay-ng: Made essid argument optional - sniffs the essid if its broadcasted\n* aireplay-ng: Made src mac argument (-h) optional - uses default interface mac\n* aireplay-ng: Added bitrate test to --test (-B)\n* aireplay-ng: Fixed 100% cpu utilization in --test\n* aireplay-ng: Added --fast switch to use first available packet without interaction\n* aireplay-ng: chopchop now tries header recreation workaround if icv check failed\n* aireplay-ng: Fixed seq field for fragment attack\n* aireplay-ng: Now works with rtc_cmos\n* aireplay-ng: Added automatic channel changing in --test to AP channel\n* aireplay-ng: Added channel synchronization for --test between cards\n* aireplay-ng: Added possibility to limit injection test to one AP \"-a\" or \"-e\"\n* aireplay-ng: Added BSSID/ESSID detection, so it can be enough to specify one option\n* makeivs-ng: Added parameters to set length, number and first IV of generated IVs\n* makeivs-ng: Added possibility to generate IVs sequentially or randomly\n* makeivs-ng: Added parameters to set percentage of false and dupe frames\n* makeivs-ng: Added 256bit wep support\n* packetforge-ng: Added support for generating more than on packet\n* patches: updated rtl8187 patch for 2.6.22\n* patches: updated zd1211rw patch for 2.6.22\n* New IVS format for storing all relevant data\n* Auto-creation of rtap interface if it doesn't exist (ipw2200)\n* Better acx, rtl8180, orinoco and madwifi-ng detection\n* Using OpenSSL instead of built-in crypto\n* Added library rx/tx support\n* Added airpcap rx/tx support\n* Added airdriver-ng script for installing and managing patched drivers\n* Added wesside-ng as an all in one tool for recovering the wep-key\n* Added easside-ng for realtime decryption (instant rx/tx) of wep frames\n* Added buddy-ng as loopback server for easside-ng\n* Added airserv-ng - server for rx/tx on another system\n* Added airolib-ng for using hash tables to crack wpa/wpa2 psk (supports cowpatty rainbow tables)\n* Fixed compilation of optimized binaries with icc\n* Fixed compilation on FreeBSD, NetBSD, OpenBSD and MacOSX\n* Better WDS handling and display\n* Added detection and removal of trailing fcs checksum\n* Fixed several memory leaks\n* Fixed being root when connecting to airserv-ng\n* Added OpenBSD sniffing support\n\nVersion 0.9.3 (changes from aircrack-ng 0.9.2) - Released 24 February 2008:\n* Fix endianness issues in airodump-ng, aireplay-ng.\n* Several small bug fixes.\n* Updated rtl8187 patch.\n\nVersion 0.9.2 (changes from aircrack-ng 0.9.1) - Released 05 February 2008:\n* aireplay-ng: Now works with rtc_cmos\n* aireplay-ng: Fixed compilation on Fedora Rawhide\n* airodump-ng: Fixed: Wrong information printed in CSV file (PSK for WEP with Shared key instead of SKA).\n* airodump-ng (airpcap): added support for 5Ghz channels.\n* airdecap-ng: Fixed bug in calc_pmk() function causes wrong PMK to be computed\n* airmon-ng: Fixed detection of N770 wireless interface\n* airmon-ng: Fixed Ralink rt73 detection\n* airmon-ng: Added driver detection through sysfs\n* airmon-ng: Added mac80211 support\n* airmon-ng: Added networkmanager detection - airmon-ng check\n* airmon-ng: Added detection of ipwraw-ng driver\n* GUI (win): Fixed file dialog for airdecap-ng\n* manpages: updated airodump-ng manpage\n* manpages: Fixes for whatis\n* Makefiles: Fixed OpenBSD makefile.\n\nVersion 0.9.1 (changes from aircrack-ng 0.9) - Released 25 June 2007:\n* airodump-ng: wlan-ng driver now works again.\n* airodump-ng: Fixed IP address when writing to CSV file\n* airodump-ng: Fixed debian bug #417388: it doesn't restore terminal after error\n* aircrack-ng: Fixed WPA cracking on SMP computers\n* aircrack-ng: Fixed bug in calc_pmk() function causes wrong PMK to be computed\n* airmon-ng: Fixed madwifi-ng wifiX detection (due to translation in ifconfig)\n* patches: Added ACX injection patch\n* patches: Updated rtl8187 patch for 2.6.21\n* GUI (win): Added PTW option to aircrack-ng tab.\n* GUI (win): Fixed a bug when cracking with a wordlist.\n\nVersion 0.9 (changes from aircrack-ng 0.8) - Released 13 May 2007:\n* aireplay-ng: Added new 'attack': injection test (--test)\n* aireplay-ng: disallow injection with wlanng & kernel > 2.6.11\n* airtun-ng: Fixed: an option wasn't shown in usage screen.\n* airodump-ng (win): Fixed version numbering.\n* airodump-ng (win): Changed first time messagebox\n* aircrack-ng: Fixed: --help make aircrack-ng crash\n* aircrack-ng: Added PTW attack (option: -z). It require full capture.\n* airdecap-ng: now decrypt IEEE802.11 header with 802.11e header\n* airmon-ng: Fixed orinoco card detection\n* patches: updated zd1211rw patch for kernel 2.6.21\n* patches: Added bcm43xx injection patch for kernel 2.6.20\n* patches: updated rtl8187 patch (for new driver version).\n* wzcook (win): now can work in silent mode (option: --silent)\n* Makefile: added make zip (cygwin only)\n* Makefile: fixed direct call to 'make install' or 'make strip' instead of 'make'\n* GUI (win): Updated aircrack-ng tab and added an about tab.\n\nVersion 0.8 (changes from aircrack-ng 0.7) - Released 25 April 2007:\n* aireplay-ng: Works on FreeBSD-CURRENT\n* aircrack-ng: Fixed stdin dictionary usage\n* aircrack-ng: Hardcode CPUs number to 1 in case detection fails\n* aircrack-ng: Fixed too low trashvalue\n* aireplay-ng: Fixed 384 bytes keystream output\n* aireplay-ng: Fixed IV index bug\n* aireplay-ng: Better error messages for -0 and -1\n* airtun-ng: Works on FreeBSD\n* airtun-ng: Fix compilation under FC6 (missing \"linux/if.h\" include).\n* airodump-ng: Works on FreeBSD.\n* airodump-ng: Added encryption filtering\n* airodump-ng: Fixed a SIGSEGV\n* airodump-ng: Added WPA handshake detection\n* airodump-ng: Added non associated stations filter\n* airodump-ng: Added support for zd1211rw\n* airodump-ng: Fixed 100% cpu utilisation\n* airmon-ng: Added support for zd1211rw driver\n* airmon-ng: Added support for at76c503a, rt61 and rt73\n* airmon-ng: Updated some device detection\n* airmon-ng: Added Nokia 770 and PrismGT softmac\n* airmon-ng: Fixed ACX driver monitor mode startup\n* airmon-ng: Fixed syntax error\n* airtun-ng: Works on FreeBSD\n* airtun-ng: Added pcap support to replay saved wlan sessions\n* airtun-ng: Added repeater mode, bssid and netmask filter\n* packetforge-ng: Added null packet support\n* packetforge-ng: Added packet selection for -9\n* Patches: Added hostap kernel 2.6.18 patch\n* Patches: Updated rtl8187 patch.\n* Patches: Updated madwifi-ng patch.\n* Patches: Added injection patch for zd1211 (does not work for all devices).\n* Added airoscript (from daouid)\n* Makefiles: Fixed: make uninstall did not remove all files\n* Updated spec file by David Bolt to be able to build RPM packages on FC, Mandriva and Suse distro\n* Added WEP authentication example capture\n* Fixed gcc 2.95 compilation\n* Fixed compilation on MacIntel\n\nVersion 0.7 (changes from aircrack-ng 0.6.2) - Released 20 January 2007:\n* Makefiles: Improved + added makefiles for other OS\n* Makefiles: Fixed make install on Windows and MacOS\n* airtun-ng: Creates a tuntap interface, through which ordinary IP frames can be injected\n* aireplay-ng: Added fragmentation attack\n* aireplay-ng: Added shared key authentication\n* airmon-ng: Now detect the shell when installing\n* airmon-ng: Added support for rtl8187\n* aircrack-ng: Added WEP dictionary attack\n* aircrack-ng: Works with 802.11e QoS packets\n* airodump-ng: Added MAC filtering\n* airodump-ng: Now use the flaw in shared-key authentication\n\t       to generate a xor file containing the prga recovered from a shared-key authentication\n* airodump-ng: More information about encryption on the AP\n* airodump-ng: Receive quality indicator\n* airodump-ng: The way ESSID is given in the CSV file is more clear\n* packetforge-ng: Set the TTL value in the ip header\n* packetforge-ng: Close open file handles\n* Special handling of spanning tree packets\n* Added rtl8187 patch for injection\n* Other bug fixes\n\nVersion 0.6.2 (changes from aircrack-ng 0.6.1) - Released 1 October 2006:\n* aireplay-ng: Applied patch to inject packets with an ipw2200\n* aircrack-ng: Fixed: show_wpa_stats() 1 byte array overflow\n* aircrack-ng: Fixed a warning when compiling on 64bit inner_bruteforcer_thread()\n* aircrack-ng: Changed -d option. It's now a mask (use XX for unknown bytes).\n* arpforge-ng: removed. It's replaced by packetforge-ng\n* packetforge-ng: New tool to forge packets (by Martin Beck) + manpage written\n* aircrack-ng, aireplay-ng, packetforge-ng: new MAC decoding function\n* airmon-ng: Fixed a bug when using it with madwifi-ng\n* airmon-ng: Added ipw3945 detection\n* airodump-ng (windows): now automatically download peek.dll and peek5.sys if needed\n* airodump-ng: LLC null packets are skipped\n* makeivs: added manpage\n* Makefile: Fixed: make aircrack-ng-opt-prof_gen fails\n* updated madwifi-ng patch\n\nVersion 0.6.1 (changes from aircrack-ng 0.6) - Released 27 August 2006:\n* aircrack-ng: Fixed missing '-s' option\n* aircrack-ng: Fixed: Show a different ASCII key for a same hex key\n* airodump-ng: Using --band option instead of --bg, --abg, --ab, ...\n* airodump-ng: Fixed: fails to put wlanng in monitor mode\n* airodump-ng: using rtap0 as interface should now work\n* airodump-ng and aireplay-ng: \"Can't find wireless tools, exiting.\" should be fixed if they exist\n* airodump-ng and airmon-ng: rt2570 now uses prismheader (use at least beta 2 driver)\n* airmon-ng: Fixed: discards ipw2200 v1.1.x\n* airmon-ng: Fixed: show newly created madwifi-ng VAP\n* airmon-ng: Should now works with 'ash' shell (Zaurus, OpenWRT, ...)\n* INSTALL: Added a note about warnings when compiling sources\n* INSTALL: Added more information about installing aircrack-ng on windows\n* updated spec file\n* some other bugfixes\n* cygwin1.dll and msvcr70.dll are now included in windows package\n\nVersion 0.6 (changes from aircrack-ng 0.5) - Released 23 June 2006:\n* aircrack-ng: Multithreaded keybytes bruteforcer\n* aircrack-ng: Now bruteforce only last keybyte by default (faster than last 2KB)\n* aircrack-ng: Added option to show ASCII version of the key\n* aircrack-ng: Fixed: bug with -d option. It adds a leading \"0x00\" to the key\n* aireplay-ng: fixed compilaton issues on some distro\n* aireplay-ng: fixed a bug when using 'ash'\n* aireplay-ng: You can change ring buffer size (-g option)\n* airodump-ng: Log by default only one beacon (added option to log all beacons)\n* airodump-ng: Dump prefix isn't mandatory anymore, not giving it won't store any data\n* airmon-ng: Ralink devices needs be put in ad-hoc prior to inject packets\n* manpages: Added kstat manpage\n* manpages: fixed airodump-ng manpage (hyphen used as minus sign)\n* Makefile: You can now compile aircrack-ng with Intel C Compiler (really faster)\n* Updated madwifi-ng patch to r1545 (and up; can be applied on madwifi v0.9.0 and v0.9.1)\n* Added instructions to compile on different plateforms/OS\n* Added a WPA2 capture file in test directory\n* Some other fixes\n\nVersion 0.5 (changes from aircrack-ng 0.4.4) - Released 04 May 2006:\n* airodump-ng: Hop on 2.4Ghz channels by default\n* airodump-ng: Added support for OpenWrt devices (use prism0 as capture interface)\n* aircrack-ng and aireplay-ng: korek chopchop optimisation (Thanks to ASPj)\n* airodump-ng: Fixed: when starting, it captured data on channel 10\n* aircrack-ng: Fixed: Not using all CPU on SMP systems\n\nVersion 0.4.4 (changes from aircrack-ng 0.4.3) - Released 24 april 2006:\n* aircrack-ng: fixed a stupid bug that prevent cracking\n* sha1-mmx.S: GNU_STACK ELF marking\n* updated patch for madwifi-ng r1526 and upper\n\nVersion 0.4.3 (changes from aircrack-ng 0.4.2) - Released 24 april 2006:\n* airmon-ng: fixed madwifi-ng (VAP creation-destruction and a cosmetic fix)\n* aircrack-ng: fixed compilation under OSX\n* airodump-ng: added elapsed time\n* Makefile : added a MacOSX makefile (Makefile.osx)\n* updated patch for madwifi-ng r1520 and upper\n\nVersion 0.4.2 (changes from aircrack-ng 0.4.1) - Released 20 april 2006:\n* airodump-ng: Fixed: dumpfile prefix took the name of the second argument\n* airodump-ng: Fixed: .gps file creation if GPSd isn't used\n* version.c removed (the content was moved to common.c)\n\nVersion 0.4.1 (changes from aircrack-ng 0.4) - Released 19 april 2006:\n* airodump-ng: use of parameters like aircrack-ng, aireplay-ng, ...\n* airodump-ng: more sanity checks\n* airodump-ng & aireplay-ng: forbid the use of ndiswrapper\n* airodump-ng & aireplay-ng: check of iwpriv existence\n* manpages: updated and fixed typos\n* Makefile: fixed \"make doc\"\n* airmon-ng: fixed and improved madwifi detection\n\nVersion 0.4 (changes from aircrack-ng 0.3) - Released 16 april 2006:\n\n* Typos fixed and cosmetic changes in sources and in manpages\n* manpages: updated airodump-ng screenshot\n* manpages and aireplay-ng: renamed attack names\n* airodump-ng: fixed some compile warnings\n* airodump-ng: hopping also on .11a channels if available\n* airodump-ng: fixed: GPS coordinates were never shown\n* airmon-ng: fixed ipw2100 (Thx to OverThere) and madwifi-ng detection\n* aircrack-ng: speed optimizations\n* aircrack-ng: -x option disable last 2 keybytes bruteforce (WEP cracking is faster)\n* aircrack-ng: with -a option, you can use \"wep\" or \"wpa\" instead of numbers\n* ivstools: --merge option fixed\n* Makefiles: improvements\n* Lots of little changes\n* added aircrack-ng.spec for building RPM\n* added slack-desc for building slackware packages\n\nVersion 0.3 (changes from aircrack-ng 0.2.1) - Released 30 march 2006:\n\n* aireplay-ng: typo fixed\n* aireplay-ng: Madwifi-ng is now supported\n* airodump-ng: disabled GPS coordinates if connection to gpsd fail\n* airodump-ng: Battery information fixed (hacked kismet code)\n* airodump-ng: Madwifi-ng is now supported\n* aircrack-ng: corrected title (when cracking a key)\n* aircrack-ng: uses by default all CPU for cracking (Debian bug report #352877)\n* manpages: Fixed some errors (Debian bug report #356551)\n* manpages: created ivstools manpage\n* Makefiles: cleaning and improvement\n* fixed pcap2ivs bug (it wasn't using the good MAC for bssid)\n* Merged mergeivs and pcap2ivs into ivstools\n* airmon.sh: Fixed (hopefully) detection of ipw2100 and ipw2200 (Debian bug report #340057)\n* airmon.sh: renamed to airmon-ng\n* Updated madwifi-ng patch to r1486\n\n\nVersion 0.2.1 (changes from aircrack-ng 0.2) - Released 20 march 2006:\n\n* corrected 2 bugs in airmon.sh and changed another little thing\n* one word missing for option -j in aireplay\n* updated madwifi-old patch to SVN r1475\n* makefile cleaning\n* typo corrected in pcap2ivs\n\n\nVersion 0.2 (changes from aircrack-ng 0.1) - Released 19 march 2006:\n\n* updated version number and program name\n* updated airmon.sh\n  added detection of acx, madwifi-ng and bcm43xx\n* added manpages (Thanks to Adam Cecile)\n* added madwifi-ng patches\n* re-added missing drivers patches\n* added uninstall rule in makefile\n* added Sharp Zaurus binaries (Thanks to Rick Farina aka Zero_Chaos)\n* added a cygwin makefile\n\n\nVersion 0.1 (changes from aircrack 2.41)\n\n* updated windows binaries\n* compiled some files for windows\n* Separated in multiple packages\n\n\n----------------------------------------------------------------------------------------------\nOlder Changelog:\n\nVersion 2.41 released on 2005-11-22. Changes from version 2.4:\n\n    * airodump: show probing clients as \"not associated\"\n    * airodump: don't subtract the noise level unless madwifi\n    * airodump: fixed channel hopping with old orinoco\n    * airmon.sh: added detection of the zd1211 driver\n\n\nVersion 2.4 released on 2005-11-12. Changes from version 2.3:\n\n    * airodump: display ESSIDs from Probe Requests\n    * airodump: don't overwrite existing capture files\n    * airodump: create a logfile of the gps coordinates\n    * airodump: every 20s, sort the detected APs by power\n    * airodump: display the remaining battery capacity\n    * airodump: use ioctl() instead of calling iwconfig\n    * airodump: added support for radiotap headers\n    * aireplay: added option -j (FromDS packet injection)\n    * aireplay: added prismheader support for rt2500 / rt2570\n    * aireplay: fixed attack -0 when injecting on ralink usb\n    * aireplay: fixed attack -3 (ring buffer / deauth problem)\n    * aircrack: don't bruteforce the last 2 keybytes by default\n    * aircrack: changed the fudge factor type to float\n    * aircrack: added option -t (restrict keyspace to BCD)\n    * aircrack: fixed the check_wep_key false positive bug\n    * aircrack: fixed overflow of the number of tested keys\n    * aircrack: lower number of required IVs if -d is used\n    * mergeivs and pcap2ivs: initial release\n\n\nVersion 2.3 released on 2005-08-28. Changes from version 2.23:\n\n    * aireplay: added patch for injection on Ralink USB\n    * aireplay: improved deauthentication attack (-c flag)\n    * aireplay: don't enable the prism header on athXraw\n    * airodump: fixed rare hanging problem in dump_write_csv\n    * airodump: workaround for ipw2200 wep data corruption bug\n    * airodump: tweaked dump_print to make more space for ESSID\n    * aircrack: added support for 152-bit WEP cracking\n    * updated the documentation and merged versioning patch\n\n\nVersion 2.23 released on 2005-08-17. Changes from version 2.22:\n\n    * aireplay: updated the madwifi patch, fixes WEP/WPA support\n    * airodump: fixed a few buffer overflows, code cleanup for gcc4\n    * aircrack: also printf the WEP key if >= 75% ASCII characters\n\n\nVersion 2.22 released on 2005-08-14. Changes from version 2.21:\n\n    * aireplay: now compatible with madwifi CVS 2005-08-14\n    * airodump: fixed the output power with newer madwifi\n\n\nVersion 2.21 released on 2005-08-09. Changes from version 2.2:\n\n    * airodump: forcefully exit when user presses Ctrl-C\n    * airodump: bugfixed (yet again) ESSID uncloacking\n    * airodump: re-create the ivs file if no header present\n    * aircrack: changed the default fudge factor back to 2\n    * airdecap: fixed the incorrect output pcap header length\n\n\nVersion 2.2 released on 2005-08-03. Changes from version 2.2-beta12:\n\n    * aireplay: (attack 1) added G rates in the association request\n    * fixed the Makefile for compilation on FreeBSD / Mac OS X\n\n\nVersion 2.2-beta12 released on 2005-07-30. Changes from version 2.2-beta11:\n\n    * aireplay: bugfixed the madwifi patch, switched to 20050707\n    * aireplay: avoid triggering \"protocol XX00 is buggy\" messages\n    * airodump: don't reset the card when hopping between channels\n    * airodump: ipw2200 didn't like calling \"iwpriv ethX monitor 1\"\n    * airodump: added support for airodump on WRT54G / OpenWRT\n    * airodump: commit the .txt statistics file every 20 seconds\n    * aircrack: increased the default fudge factor (3 for WEP-104)\n\n\nVersion 2.2-beta11 released on 2005-07-27. Changes from version 2.2-beta10:\n\n    * aireplay: updated the madwifi patch to inject in b/g mode\n    * aireplay: fixed attack 2 (it wrongly swapped the smac & dmac)\n    * aircrack: (cygwin) added O_BINARY flag to force binary mode\n\n\nVersion 2.2-beta10 released on 2005-07-23. Changes from version 2.2-beta9:\n\n    * aireplay: fixed the status line not showing in attack -3\n    * aireplay: updated the madwifi and hostap injection patches\n    * aireplay: added patches for injection on rt2500 and rtl8180\n    * aircrack: added detection of 802.1d in check_wep_key\n    * airodump: restore prismheader link level info w/ hostap\n    * airodump: create the output file if there's no pcap header\n    * airdecap: added flag -l to disable ethernet conversion\n    * updated the win32 port and rewrote the documentation\n\n\nVersion 2.2-beta9 released on 2005-07-21. Changes from version 2.2-beta8:\n\n    * aireplay: fixed the invalid rtc file descriptor bug\n    * aircrack: actually fixed the prism header endianness bug\n\n\nVersion 2.2-beta8 released on 2005-07-21. Changes from version 2.2-beta7:\n\n    * aireplay: specify the deauth count instead of delay\n    * aircrack: fixed an endianness issue with the prism header\n    * aircrack: added the experimental single bruteforce attack\n    * airodump: do enable the prismheader with wlan-ng\n    * airodump: WEP/WPA: show the number of data packets\n    * airodump: show total number of captured beacon packets\n    * airodump: orinoco: fixed \"iwpriv ethX monitor 1\" command\n    * airdecap: fixed an endianness issue with the packet length\n    * airdecap: skip already processed duplicate packets\n\n\nVersion 2.2-beta7 released on 2005-07-14. Changes from version 2.2-beta6:\n\n    * airodump: don't enable the prismheader with wlan-ng\n    * aircrack: fixed check_wepkey() to avoid false positives\n    * completed the preliminary win32 port\n\n\nVersion 2.2-beta6 released on 2005-07-12. Changes from version 2.2-beta5:\n\n    * aireplay: fixed injection of fromds packets on Prism2\n    * aireplay: attack 0: target access point must be specified\n    * aireplay: attack 1: allow the user to change reauth delay\n    * aircrack: fixed race condition when realloc() ap->ivbuf\n    * airodump: fixed endianness issue when parsing prism header\n\n\nVersion 2.2-beta5 released on 2005-07-10. Changes from version 2.2-beta4:\n\n    * aireplay: added patch for single-nic injection on hostap\n    * aireplay: fixed chopchop attack in non-authenticated mode\n    * aireplay: don't flood the AP with authentication requests\n    * aircrack: bruteforce the last two keybytes by default\n    * aircrack: improved handling of partial WPA handshakes\n    * aircrack, airdecap: added WPA2 (RSN / 802.11i) support\n\n\nVersion 2.2-beta4 released on 2005-07-03. Changes from version 2.2-beta3:\n\n    * aircrack: new option to restrict WEP search space to ascii\n    * aircrack: fixed concurrency bug with multiple .cap files\n    * aircrack: fixed incorrect detection of WPA CCMP handshakes\n    * aircrack: fixed incorrect handling of HMAC-SHA1 WPA MIC\n    * aireplay: fixed deauth problem when chopchoping a packet\n    * aireplay: added a workaround for error \"Write buffer full\"\n    * airodump: added support for prism header on prism54\n    * airodump: save the list of detected wireless clients\n    * airunwep: renamed to airdecap, added WPA decryption support\n\n\nVersion 2.2-beta3 released on 2005-06-28. Changes from version 2.2-beta2:\n\n    * aircrack: fixed the tracking of new IVs\n    * aireplay: fixed the CPU usage bug in attack 3\n    * when reading pcap files, check the packet length\n\n\nVersion 2.2-beta2 released on 2005-06-27. Changes from version 2.2-beta1:\n\n    * aireplay: added fully automated ARP replay attack\n    * aireplay: added automated deauthentication attack\n    * aireplay: added fake authentication in Monitor mode\n    * aircrack: various pthread enhancements & bugfixes\n\n\nVersion 2.2-beta1 released on 2005-06-22. Changes from version 2.1:\n\n    * aircrack: now auto-updates if new IVs are available\n    * aircrack: fixed #285441 (struct pcap_pkthdr on AMD64)\n    * aircrack: fixed the pcap endianness problem\n    * aircrack: added essid filtering option and quiet mode\n    * aircrack: only print status info every 1/20th second\n    * aircrack: added WPA-PSK cracking support from cowpatty\n    * aircrack: added EAPOL frame type detection and display\n    * aircrack: each korek attack can be disabled selectively\n    * airodump: added 802.11 b/g (2.4 GHz) channel hopping\n    * airodump: added a file format for logging only the IVs\n    * airodump: CRC is properly removed if driver is madwifi\n    * airodump: input packets can be read from a pcap file\n    * airodump: bugfixed WPA detection and ESSID uncloaking\n    * airodump: also display a list of detected stations\n    * aireplay: implemented chopchop and arp-forgery\n    * aireplay: added patches for single-nic injection\n    * 802ether: bugfixed and renamed to airunwep\n\n\nVersion 2.1 released on 2004-10-01. Changes from version 2.0.2:\n\n    * added 11g and WPA detection support in airodump\n    * aircrack automatically avoids using WPA IVs\n    * aircrack can break 256-bit and 512-bit WEP keys\n    * win32 - fixed yet again the \"missed IVs\" bug\n    * win32 - ported the 802ether WEP decryptor program\n\n\nVersion 2.0.2 released on 2004-09-24. Changes from version 2.0.1:\n\n    * win32 - added the WZCOOK key recovery program\n    * fixed a bug in the BSSID iteration code in airodump\n    * completely rewrote the documentation, moved to /docs\n\n\nVersion 2.0.1 released on 2004-09-21. Changes from version 2.0:\n\n    * win32 - fixed the channel reset bug\n    * win32 - fixed the \"missed IVs\" bug\n    * win32 - rewrote drivers.txt\n\n\nVersion 2.0 released on 2004-09-03. Changes from version 1.4:\n\n    * native win32 port of airodump and aircrack\n    * aireplay better spots potential arp-requests\n\n\nVersion 1.4 released on 2004-08-26. Changes from version 1.3:\n\n    * fixed check_wepkey, works with exotic LLC headers\n    * airodump prints lots of information, Kismet-style\n\n\nVersion 1.3 released on 2004-08-19. Changes from version 1.2:\n\n    * bugfixed and improved KoreK's code\n    * renamed airunwep to 802ether\n\n\nVersion 1.2 released on 2004-08-17. Changes from version 1.1:\n\n    * implemented KoreK's advanced WEP attacks\n    * completely rewrote the SMP engine\n\n\nVersion 1.1 released on 2004-08-11. Changes from version 1.0:\n\n    * implemented WEP arp-requests replay attack\n    * improved the fudge calculation algorithm\n    * added multi-processor support\n\n\nVersion 1.0 released on 2004-07-29\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.8837890625,
          "content": "ARG IMAGE_BASE=debian:unstable-slim\n# hadolint ignore=DL3006\nFROM ${IMAGE_BASE} AS builder\n\n# Install dependencies for building\nCOPY docker_package_install.sh /\nRUN chmod +x docker_package_install.sh && \\\n\t /docker_package_install.sh builder\n\n# Build Aircrack-ng\n# hadolint ignore=DL3059\nRUN mkdir -p /aircrack-ng /output\nCOPY . /aircrack-ng\nWORKDIR /aircrack-ng\n# hadolint ignore=SC2006,SC2086,DL4006\nRUN set -x \\\n\t&& make distclean || : && \\\n\t\tautoreconf -vif && \\\n\t\tset -e; \\\n\t\t\t./configure --with-experimental --with-ext-scripts --enable-maintainer-mode --prefix=/usr/local && \\\n\t\t\tmake -j$(nproc) && \\\n\t\tset +e && \\\n\t\t\tif ! make check -j$(nproc); then \\\n\t\t\t\techo \"Processor: $(uname -m)\"; \\\n\t\t\t\tfor file in `grep -l \"(exit status: [1-9]\" test/*.log`; do \\\n\t\t\t\t\techo \"[*] Test ${file}:\"; \\\n\t\t\t\t\tcat \"${file}\"; \\\n\t\t\t\tdone; \\\n\t\t\t\texit 1; \\\n\t\t\tfi && \\\n\t\tset -e && \\\n\t\t\texport PYTHONPATH=\"/output/usr/local/lib/python$(python3 --version | awk '{print $2}' | awk -F. '{print $1 \".\" $2}')/site-packages/\" && \\\n\t\t\tmkdir -p ${PYTHONPATH} && \\\n\t\t\tmake install DESTDIR=/output\n\n# Stage 2\n# hadolint ignore=DL3006\nFROM ${IMAGE_BASE}\n\n# Due to the behavior of buildx failing to copy to directories being\n# a symlink (whereas docker build works), copy the content to /output\n# then manually move all the files in /usr/local\n# In Arch-based distros, /usr/local/share/man is a symlink\nRUN mkdir /output\nCOPY --from=builder /output/usr /output\n# And another workaround for Clear Linux where this directory does not exist\n# hadolint ignore=SC2015\nRUN set -x && \\\n\t[ -d /usr/local/share/man ] || \\\n\t\tmkdir -p /usr/local/share/man\nRUN cp -r /output/local/share/man/* /usr/local/share/man/ && \\\n\trm -rf /output/local/share/man && \\\n\tcp -r /output/* /usr/ && \\\n\trm -rf /output\n\nCOPY docker_package_install.sh /\n\n# Install dependencies\nRUN set -x \\\n && sh /docker_package_install.sh stage2 \\\n && rm /docker_package_install.sh \\\n && aircrack-ng -u\n"
        },
        {
          "name": "Dockerfile.release",
          "type": "blob",
          "size": 1.7958984375,
          "content": "ARG IMAGE_BASE=debian:unstable-slim\n# hadolint ignore=DL3006\nFROM ${IMAGE_BASE} AS builder\n\n# https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n# Tag name\nARG GITHUB_REF_NAME \n\n# Install dependencies for building\nCOPY docker_package_install.sh /opt\nRUN sh /opt/docker_package_install.sh builder\n\n# Create git archive\n# hadolint ignore=DL3059\nRUN mkdir -p /aircrack-ng/git /aircrack-ng/archive /output\nCOPY . /aircrack-ng/git\nWORKDIR /aircrack-ng/git\n# hadolint ignore=DL4006,SC3040\nRUN set -o pipefail && \\\n\tgit archive --format=tar ${GITHUB_REF_NAME} \\\n        | tar -xf - --directory /aircrack-ng/archive\n\n# Build Aircrack-ng\nWORKDIR /aircrack-ng/archive\nRUN set -x \\\n && make distclean || : && \\\n\tautoreconf -vif && \\\n\tset -e; \\\n\t\t./configure --with-experimental --with-ext-scripts --enable-maintainer-mode --without-opt --prefix=/usr && \\\n\t\tmake -j$(nproc) && \\\n\t\tmake check -j$(nproc) && \\\n\t\tmake install DESTDIR=/output\n\n# Stage 2\n# hadolint ignore=DL3006\nFROM ${IMAGE_BASE}\n\n# Due to the behavior of buildx failing to copy to directories being\n# a symlink (whereas docker build works), copy the content to /output\n# then manually move all the files in /usr/local\n# In Arch-based distros, /usr/local/share/man is a symlink\nRUN mkdir /output\nCOPY --from=builder /output/usr /output\n# And another workaround for Clear Linux where this directory does not exist\n# hadolint ignore=SC2015\nRUN set -x && \\\n\t[ -d /usr/local/share/man ] || \\\n\t\tmkdir -p /usr/local/share/man\nRUN mv /output/local/share/man/* /usr/local/share/man/ && \\\n\trmdir /output/local/share/man/ && \\\n\tcp -r /output/* /usr/ && \\\n\trm -rf /output\n\nCOPY docker_package_install.sh /\n\n# Install dependencies\nRUN set -x \\\n && sh /docker_package_install.sh stage2 \\\n && rm /docker_package_install.sh \\\n && aircrack-ng -u\n"
        },
        {
          "name": "INSTALLING",
          "type": "blob",
          "size": 17.724609375,
          "content": "== Building ==\n\n=== Requirements ===\n\n * Autoconf\n * Automake\n * Libtool\n * shtool\n * OpenSSL development package or libgcrypt development package.\n * Airmon-ng (Linux) requires ethtool, usbutils, and often pciutils.\n * On Windows, cygwin has to be used and it also requires w32api package.\n * On Windows, if using clang, libiconv and libiconv-devel\n * Linux: LibNetlink 1 or 3. It can be disabled by passing --disable-libnl to configure.\n * pkg-config (pkgconf on FreeBSD, DragonFlyBSD, OpenBSD and NetBSD)\n * FreeBSD, DragonFlyBSD, OpenBSD, NetBSD, Solaris and OS X with Macports: gmake\n * Linux/Cygwin: make and Standard C++ Library development package (Debian: libstdc++-dev)\n\nNote: Airmon-ng only requires pciutils if the system has a PCI/PCIe bus and it is populated. \n      Such bus can be present even if not physically visible. For example, it is present,\n      and populated on the Raspberry Pi 4, therefore pciutils is required on that device.\n\n=== Optional stuff ===\n\n * If you want SSID filtering with regular expression in airodump-ng\n   (--essid-regex) PCRE or PCRE2 development package is required.\n * If you want to use airolib-ng and '-r' option in aircrack-ng,\n   SQLite development package >= 3.3.17 (3.6.X version or better is recommended)\n * If you want to use Airpcap, the 'developer' directory from the CD/ISO/SDK is required.\n * In order to build besside-ng, besside-ng-crawler, easside-ng, tkiptun-ng and wesside-ng,\n   libpcap development package is required (on Cygwin, use the Airpcap SDK instead; see above)\n * rfkill\n * If you want Airodump-ng to log GPS coordinates, gpsd is needed\n * For best performance on SMP machines, ensure the hwloc library and headers are installed. It is strongly recommended on high core count systems, it may give a serious speed boost\n * CMocka for unit testing\n * For integration testing on Linux only: tcpdump, HostAPd, WPA Supplicant and screen\n\n=== Installing required and optional dependencies ===\n\nBelow are instructions for installing the basic requirements to build\n`aircrack-ng` for a number of operating systems.\n\nNote: CMocka, tcpdump, screen, HostAPd and WPA Supplicant should not be dependencies when packaging Aircrack-ng.\n\n==== Linux ====\n\n===== Arch Linux =====\n\n    `sudo pacman -Sy base-devel libnl openssl ethtool util-linux zlib libpcap sqlite pcre2 hwloc cmocka hostapd wpa_supplicant tcpdump screen iw usbutils pciutils`\n\n===== Debian/Ubuntu =====\n\n    `sudo apt-get install build-essential autoconf automake libtool pkg-config libnl-3-dev libnl-genl-3-dev libssl-dev ethtool shtool rfkill zlib1g-dev libpcap-dev libsqlite3-dev libpcre2-dev libhwloc-dev libcmocka-dev hostapd wpasupplicant tcpdump screen iw usbutils`\n\n==== Fedora ====\n \n    `sudo yum install libtool pkgconfig sqlite-devel autoconf automake openssl-devel libpcap-devel pcre2-devel rfkill libnl3-devel gcc gcc-c++ ethtool hwloc-devel libcmocka-devel make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel`\n \n==== CentOS/RHEL 7 ====\n\n    `sudo yum install epel-release`\n    `sudo ./centos_autotools.sh`\n    # Remove older installation of automake/autoconf\n    `sudo yum remove autoconf automake`\n    `sudo yum install sqlite-devel openssl-devel libpcap-devel pcre2-devel rfkill libnl3-devel ethtool hwloc-devel libcmocka-devel make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel`\n\nNote: autoconf, automake, libtool, and pkgconfig in the repositories are too old. The script centos_autotools.sh automatically installs dependencies to compile then install the tools.\n\n==== CentOS/RHEL 8 ====\n\n    `sudo yum config-manager --set-enabled powertools`\n    `sudo yum install epel-release`\n    `sudo yum install git libtool pkgconfig sqlite-devel autoconf automake openssl-devel libpcap-devel pcre2-devel rfkill libnl3-devel gcc gcc-c++ ethtool hwloc-devel libcmocka-devel make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel`\n\n===== openSUSE =====\n\n    `sudo zypper install autoconf automake libtool pkg-config libnl3-devel libopenssl-1_1-devel zlib-devel libpcap-devel sqlite3-devel pcre2-devel hwloc-devel libcmocka-devel hostapd wpa_supplicant tcpdump screen iw gcc-c++ gcc ethtool pciutils usbutils`\n\n===== Mageia =====\n\n    `sudo urpmi autoconf automake libtool pkgconfig libnl3-devel libopenssl-devel zlib-devel libpcap-devel sqlite3-devel pcre2-devel hwloc-devel libcmocka-devel hostapd wpa_supplicant tcpdump screen iw gcc-c++ gcc make`\n\n===== Alpine =====\n\n    `sudo apk add gcc g++ make autoconf automake libtool libnl3-dev openssl-dev ethtool libpcap-dev cmocka-dev hostapd wpa_supplicant tcpdump screen iw pkgconf util-linux sqlite-dev pcre2-dev linux-headers zlib-dev pciutils usbutils`\n\nNote: Community repository needs to be enabled for iw\n\n==== Clear Linux ====\n\n    `sudo swupd bundle-add c-basic devpkg-openssl devpkg-libnl devpkg-hwloc devpkg-libpcap devpkg-pcre2 devpkg-sqlite-autoconf ethtool wget network-basic software-testing sysadmin-basic wpa_supplicant`\n\nNote: hostapd must be compiled manually, it is not present in the repository\n\n==== BSD ====\n\n===== FreeBSD =====\n\n    `pkg install pkgconf shtool libtool gcc9 automake autoconf pcre2 sqlite3 openssl gmake hwloc cmocka`\n\n===== DragonflyBSD =====\n\n    `pkg install pkgconf shtool libtool gcc8 automake autoconf pcre2 sqlite3 libgcrypt gmake cmocka`\n\n===== OpenBSD =====\n\n    `pkg_add pkgconf shtool libtool gcc automake autoconf pcre2 sqlite3 openssl gmake cmocka`\n\n===== NetBSD =====\n\n    `pkg_add pkgconf libtool gcc7 automake autoconf pcre2 sqlite3 openssl gmake cmocka`\n\n==== macOS ====\n\nXCode, Xcode command line tools and HomeBrew are required.\n\n    `brew install autoconf automake libtool openssl shtool pkg-config hwloc pcre2 sqlite3 libpcap cmocka`\n\n==== Windows ====\n\n===== Cygwin =====\n\nCygwin requires the full path to the `setup.exe` utility, in order to\nautomate the installation of the necessary packages. In addition, it\nrequires the location of your installation, a path to the cached\npackages download location, and a mirror URL.\n\nAn example of automatically installing all the dependencies\nis as follows:\n\n    `c:\\cygwin\\setup-x86.exe -qnNdO -R C:/cygwin -s http://cygwin.mirror.constant.com -l C:/cygwin/var/cache/setup -P autoconf -P automake -P bison -P gcc-core -P gcc-g++ -P mingw-runtime -P mingw-binutils -P mingw-gcc-core -P mingw-gcc-g++ -P mingw-pthreads -P mingw-w32api -P libtool -P make -P python -P gettext-devel -P gettext -P intltool -P libiconv -P pkg-config -P git -P wget -P curl -P libpcre2-devel -P libssl-devel -P libsqlite3-devel`\n\n\n===== MSYS2 =====\n\n    `pacman -Sy autoconf automake-wrapper libtool msys2-w32api-headers msys2-w32api-runtime gcc pkg-config git python openssl-devel openssl libopenssl msys2-runtime-devel gcc binutils make pcre2-devel libsqlite-devel`\n\n\n==== GNU/Hurd ====\n\n===== Debian =====\n\n    apt-get install build-essential autoconf automake libtool pkg-config libssl-dev shtool zlib1g-dev libpcap-dev libsqlite3-dev libpcre2-dev libhwloc-dev libcmocka-dev screen expect libbsd-dev\n\n\n=== Docker containers ===\n\nWe have two repositories on DockerHub:\n- aircrackng/release (https://hub.docker.com/r/aircrackng/release): Each release\n- aircrackng/git (https://hub.docker.com/r/aircrackng/git): every commit in the git repository\n\nBase command for the git version:\n  `sudo docker run --rm -it aircrackng/git`\n\nAvailable platforms/CPU architectures:\n- linux/386 (base image: debian:unstable-slim)\n- linux/amd64 (base image: debian:unstable-slim)\n- linux/arm/v5 (base image: debian:unstable-slim)\n- linux/arm/v6 (base image: alpine:3)\n- linux/arm/v7 (base image: debian:unstable-slim)\n- linux/arm64/v8 (base image: debian:unstable-slim)\n- linux/mips64le (base image: debian:unstable-slim)\n- linux/ppc64le (base image: debian:unstable-slim)\n- linux/riscv64 (base image: debian:unstable-slim)\n- linux/s390x (base image: debian:unstable-slim)\n\n\n\n=== Compiling ===\n\nTo build `aircrack-ng`, the Autotools build system is utilized. Autotools replaces\nthe older method of compilation.\n\nNOTE: If utilizing a developer version, eg: one checked out from source control,\nyou will need to run a pre-`configure` script. The script to use is one of the\nfollowing: `autoreconf -i` or `env NOCONFIGURE=1 ./autogen.sh`.\n\nFirst, `./configure` the project for building with the appropriate options specified\nfor your environment:\n\n    `./configure <options>`\n\nTIP: If the above fails, please see above about developer source control versions.\n\nNext, compile the project (respecting if `make` or `gmake` is needed):\n\n * Compilation:\n\n    `make`\n\n * Compilation on *BSD or Solaris:\n\n    `gmake`\n\nFinally, the additional targets listed below may be of use in your environment:\n\n * Execute all unit testing:\n\n    `make check`\n\n * Execute all integration testing (requires root):\n \n    `make integration`\n\n * Installing:\n\n    `make install`\n\n * Uninstall:\n\n    `make uninstall`\n\n\n====  `./configure` flags ====\n\nWhen configuring, the following flags can be used and combined to adjust the suite\nto your choosing:\n\n* with-airpcap=DIR:  needed for supporting airpcap devices on windows (cygwin or msys2 only)\n                Replace DIR above with the absolute location to the root of the\n                extracted source code from the Airpcap CD or downloaded SDK available\n                online. Required on Windows to build besside-ng, besside-ng-crawler, \n                easside-ng, tkiptun-ng and wesside-ng when building experimental tools.\n                The developer pack (Compatible with version 4.1.1 and 4.1.3) can be downloaded at\n                https://support.riverbed.com/content/support/software/steelcentral-npm/airpcap.html\n\n* with-experimental: needed to compile tkiptun-ng, easside-ng, buddy-ng, buddy-ng-crawler,\n                    airventriloquist and wesside-ng. libpcap development package is also\n                    required to compile most of the tools.\n                    If not present, not all experimental tools will be built.\n                    On Cygwin, libpcap is not present and the Airpcap SDK replaces it.\n                    See --with-airpcap option above.\n\n* with-ext-scripts: needed to build `airoscript-ng`, `versuck-ng`, `airgraph-ng` and \n                   `airdrop-ng`. \n                   Note: Each script has its own dependencies.\n\n* with-gcrypt:   Use libgcrypt crypto library instead of the default OpenSSL.\n                And also use internal fast sha1 implementation (borrowed from GIT).\n                Dependency (Debian): libgcrypt20-dev\n\n* with-duma:\tCompile with DUMA support. DUMA is a library to detect buffer overruns and underruns.\n            \tDependency (Debian): duma\n\n* disable-libnl:  Set up the project to be compiled without libnl (1 or 3). Linux option only.\n\n* without-opt:  Do not enable -O3 optimizations.\n\n* enable-shared:   Make a OSdep a shared library.\n\n* disable-shared: When combined with enable-static, it will statically compile Aircrack-ng.\n\n* with-avx512:  On x86, add support for AVX512 instructions in aircrack-ng. Only use it when\n                the current CPU supports AVX512.\n\n* with-static-simd=<SIMD>: Compile a single optimization in aircrack-ng binary. Useful when compiling\n                    statically and/or for space-constrained devices. Valid SIMD options: x86-sse2,\n                    x86-avx, x86-avx2, x86-avx512, ppc-altivec, ppc-power8, arm-neon, arm-asimd.\n                    Must be used with --enable-static --disable-shared. When using those 2 options, the default\n                    is to compile the generic optimization in the binary. --with-static-simd merely allows\n                    to choose another one.\n\n* --enable-maintainer-mode: It is important to enable this flag when\n                            developing with Aircrack-ng. This flag enables\n                            additional compile warnings and safety features.\n\n===== Examples =====\n\n  * Configure and compiling:\n\n    `./configure --with-experimental`\n    `make`\n\n  * Compiling with gcrypt:\n\n    `./configure --with-gcrypt`\n    `make`\n\n  * Installing:\n\n    `make install`\n\n  * Installing (strip binaries):\n  \n    `make install-strip`\n\n  * Installing, with external scripts:\n\n    `./configure --with-experimental --with-ext-scripts`\n    `make`\n    `make install`\n\n  * Testing (with sqlite, experimental and pcre2)\n\n    `./configure --with-experimental`\n    `make`\n    `make check`\n\n  * Compiling on OS X with macports (and all options):\n\n    `./configure --with-experimental`\n    `gmake`\n\n  * Compiling on macOS running on M1/AARCH64 and Homebrew:\n\n    `autoreconf -vif`\n    `env CPPFLAGS=\"-Wno-deprecated-declarations\" ./configure --with-experimental`\n    `make`\n    `make check`\n\n  * Compiling on OS X 10.10 with XCode 7.1 and Homebrew:\n\n    `env CC=gcc-4.9 CXX=g++-4.9 ./configure`\n    `make`\n    `make check`\n\n    *NOTE*: Older XCode ships with a version of LLVM that does not support CPU feature\n    detection; which causes the `./configure` to fail. To work around this older LLVM,\n    it is required that a different compile suite is used, such as GCC or a newer LLVM\n    from Homebrew.\n\n    If you wish to use OpenSSL from Homebrew, you may need to specify the location\n    to its installation. To figure out where OpenSSL lives, run:\n\n    `brew --prefix openssl`\n\n    Use the output above as the DIR for `--with-openssl=DIR` in the `./configure` line:\n\n    `env CC=gcc-4.9 CXX=g++-4.9 ./configure --with-openssl=DIR`\n    `make`\n    `make check`\n\n  * Compiling on FreeBSD with gcc9\n\n    `env CC=gcc9 CXX=g++9 MAKE=gmake ./configure`\n    `gmake`\n\n  * Compiling on Cygwin with Airpcap (assuming Airpcap devpack is unpacked in Aircrack-ng directory)\n\n    ```\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-osdep\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-crypto\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-util\n    dlltool -D Airpcap_Devpack/bin/x86/airpcap.dll -d build/airpcap.dll.def -l Airpcap_Devpack/bin/x86/libairpcap.dll.a\n    autoreconf -i\n    ./configure --with-experimental --with-airpcap=$(pwd)\n    make\n    ```\n\n  * Compiling on DragonflyBSD with gcrypt using GCC 8\n\n    ```\n    autoreconf -i\n    env CC=gcc8 CXX=g++8 MAKE=gmake ./configure --with-experimental --with-gcrypt\n    gmake\n    ```\n\n  * Compiling on OpenBSD (with autoconf 2.69 and automake 1.16)\n\n    ```\n    export AUTOCONF_VERSION=2.69\n    export AUTOMAKE_VERSION=1.16\n    autoreconf -i\n    env MAKE=gmake ./configure\n    gmake\n   ```\n\n  * Compiling and debugging aircrack-ng\n\n   ```\n   export CFLAGS='-O0 -g'\n   export CXXFLAGS='-O0 -g'\n   ./configure --with-experimental --enable-maintainer-mode --without-opt\n   make\n   LD_LIBRARY_PATH=.libs gdb --args ./aircrack-ng [PARAMETERS]\n   ```\n\n== IDE development ==\n\n=== VS Code - devcontainers ===\n\nA VS Code development environment is provided, as is, for rapid setup of a development environment. This additionally adds support for GitHub Codespaces.\n\n==== Requirements ====\n\nThe first requirement is a working Docker Engine (https://docs.docker.com/engine/install/) environment.\n\nNext, an installation of VS Code (https://code.visualstudio.com/) with the following extension(s):\n\n- Remote - Containers: https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers by Microsoft.\n\nNote: The \"Remote - Containers\" extension will refuse to work with OSS Code.\n\n==== Usage ====\n\n1. Clone this repository to your working folder:\n\n  ```\n  $ git clone --recursive https://github.com/aircrack-ng/aircrack-ng.git\n  $ cd aircrack-ng\n  ```\n\n2. After cloning this repository, open the folder inside VS Code.\n\n  ```\n  $ code .\n  ```\n\nIMPORTANT: You should answer \"Yes\", if it asks if the folder should be opened inside a remote container. If it does not ask, then press `Ctrl+Shift+P` and type `open in container`. This should bring up the correct command, for which pressing enter will run said command.\n\n3. A number of warnings might appear about a missing `compile_commands.json` file. These are safe to ignore for a moment, as this file is automatically generated after the initial compilation.\n4. Now build the entire project by pressing `Ctrl+R` and selecting `Build Full` from the pop-up menu that appears.\n5. VS Code should detect the `compile_commands.json` file and ask if it should be used; selecting \"Yes, always\" will complete the initial setup of a fully working IDE.\n   IMPORTANT: If it doesn't detect the file, pressing `Ctrl+Shift+P` and typing `reload window` will bring up the selection to fully reload the environment.\n6. At this point, nearly all features of VS Code will function; from Intellisense, auto-completion, live documentation, to code formatting. Additionally, there are pre-configured tasks for builds and tests, as well as an example GDB/LLDB configuration for debugging `aircrack-ng`.\n\n\n== Packaging ==\n\nAutomatic detection of CPU optimization is done at run time. This behavior\n**is** desirable when packaging Aircrack-ng (for a Linux or other distribution.)\n\nAlso, in some cases it may be desired to provide your own flags completely and\nnot having the suite auto-detect a number of optimizations. To do this, add\nthe additional flag `--without-opt` to the `./configure` line:\n\n`./configure --without-opt`\n\n== Using pre-compiled binaries ==\n\n=== Linux/BSD ===\n\nAircrack-ng is available in most distributions repositories. However, it is not always up-to-date.\n\n=== Windows ===\n\n * Install the appropriate \"monitor\" driver for your card; standard drivers don't work for capturing data.\n * Aircrack-ng suite is command line tools. So, you have to open a command-line\n   `Start menu -> Run... -> cmd.exe` then use them\n * Run the executables without any parameters to have help\n\n== Documentation ==\n\nSome more information is present in the README file.\n\nDocumentation, tutorials, ... can be found on https://aircrack-ng.org\n\nSupport is available in the GitHub Discussions (https://github.com/aircrack-ng/aircrack-ng/discussions) and on IRC (in #aircrack-ng on Libera Chat).\n\nEvery tool has its own manpage. For aircrack-ng, `man aircrack-ng`\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.5869140625,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "LICENSE.OpenSSL",
          "type": "blob",
          "size": 6.1318359375,
          "content": "\n  LICENSE ISSUES\n  ==============\n\n  The OpenSSL toolkit stays under a dual license, i.e. both the conditions of\n  the OpenSSL License and the original SSLeay license apply to the toolkit.\n  See below for the actual license texts. Actually both licenses are BSD-style\n  Open Source licenses. In case of any license issues related to OpenSSL\n  please contact openssl-core@openssl.org.\n\n  OpenSSL License\n  ---------------\n\n/* ====================================================================\n * Copyright (c) 1998-2007 The OpenSSL Project.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. All advertising materials mentioning features or use of this\n *    software must display the following acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n *\n * 4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For written permission, please contact\n *    openssl-core@openssl.org.\n *\n * 5. Products derived from this software may not be called \"OpenSSL\"\n *    nor may \"OpenSSL\" appear in their names without prior written\n *    permission of the OpenSSL Project.\n *\n * 6. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n *\n * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY\n * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * ====================================================================\n *\n * This product includes cryptographic software written by Eric Young\n * (eay@cryptsoft.com).  This product includes software written by Tim\n * Hudson (tjh@cryptsoft.com).\n *\n */\n\n Original SSLeay License\n -----------------------\n\n/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\n * All rights reserved.\n *\n * This package is an SSL implementation written\n * by Eric Young (eay@cryptsoft.com).\n * The implementation was written so as to conform with Netscapes SSL.\n * \n * This library is free for commercial and non-commercial use as long as\n * the following conditions are aheared to.  The following conditions\n * apply to all code found in this distribution, be it the RC4, RSA,\n * lhash, DES, etc., code; not just the SSL code.  The SSL documentation\n * included with this distribution is covered by the same copyright terms\n * except that the holder is Tim Hudson (tjh@cryptsoft.com).\n * \n * Copyright remains Eric Young's, and as such any Copyright notices in\n * the code are not to be removed.\n * If this package is used in a product, Eric Young should be given attribution\n * as the author of the parts of the library used.\n * This can be in the form of a textual message at program startup or\n * in documentation (online or textual) provided with the package.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *    \"This product includes cryptographic software written by\n *     Eric Young (eay@cryptsoft.com)\"\n *    The word 'cryptographic' can be left out if the rouines from the library\n *    being used are not cryptographic related :-).\n * 4. If you include any Windows specific code (or a derivative thereof) from \n *    the apps directory (application code) you must include an acknowledgement:\n *    \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n * \n * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n * \n * The licence and distribution terms for any publically available version or\n * derivative of this code cannot be changed.  i.e. this code cannot simply be\n * copied and put under another distribution licence\n * [including the GNU Public Licence.]\n */\n\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 3.7607421875,
          "content": "# Aircrack-ng\n#\n# Copyright (C) 2017 Joseph Benden <joe@benden.us>\n#\n# Autotool support was written by: Joseph Benden <joe@benden.us>\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link the code of portions of this program with the\n# OpenSSL library under certain conditions as described in each\n# individual source file, and distribute linked combinations\n# including the two.\n#\n# You must obey the GNU General Public License in all respects\n# for all of the code used other than OpenSSL.\n#\n# If you modify file(s) with this exception, you may extend this\n# exception to your dnl version of the file(s), but you are not obligated\n# to do so.\n#\n# If you dnl do not wish to do so, delete this exception statement from your\n# version.\n#\n# If you delete this exception statement from all source files in the\n# program, then also delete it here.\n\nAM_MAKEFLAGS = --no-print-directory\n\nACLOCAL_AMFLAGS = -I build/m4/stubs -I build/m4\n\nSUBDIRS =\tmanpages \\\n\t\t\t\t\tscripts\n\nAM_CPPFLAGS = -I$(abs_srcdir) \\\n\t\t\t\t\t\t\t-I$(abs_builddir)/include \\\n\t\t\t\t\t\t\t-I$(abs_srcdir)/include \\\n\t\t\t\t\t\t\t-I$(abs_builddir)/lib \\\n\t\t\t\t\t\t\t-I$(abs_srcdir)/lib \\\n\t\t\t\t\t\t\t-I$(abs_builddir)/lib/radiotap \\\n\t\t\t\t\t\t\t-I$(abs_srcdir)/lib/radiotap \\\n\t\t\t\t\t\t\t$(CRYPTO_INCLUDES) \\\n\t\t\t\t\t\t\t$(CODE_COVERAGE_CPPFLAGS)\n\nCFLAGS\t\t+=\t$(CODE_COVERAGE_CFLAGS)\nCXXFLAGS\t+=\t$(CODE_COVERAGE_CXXFLAGS)\nLIBS\t\t\t+=\t$(CODE_COVERAGE_LIBS)\n\nCOMMON_CFLAGS\t= $(PTHREAD_CFLAGS) $(CRYPTO_CFLAGS) $(ZLIB_CFLAGS)\nCOMMON_LDADD\t= $(PTHREAD_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(ZLIB_LIBS)\n\nbin_PROGRAMS =\nsbin_PROGRAMS =\nnoinst_LTLIBRARIES =\nlib_LTLIBRARIES =\nEXTRA_DIST = AC_VERSION\ncheck_PROGRAMS =\nTESTS =\nINTEGRATION_TESTS =\n\nLIBACCRYPTO_LIBS = libaccrypto.la\nLIBAIRCRACK_CE_WEP_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wep.la\nLIBAIRCRACK_LIBS = libaircrack.la\nLIBAIRCRACK_OSDEP_LIBS= libaircrack-osdep.la\nif CYGWIN\nLIBAIRCRACK_OSDEP_LIBS+= -liphlpapi -lsetupapi\nendif\nLIBCOWPATTY_LIBS = libcowpatty.la\nLIBPTW_LIBS = libptw.la\nLIBRADIOTAP_LIBS = libradiotap.la\n\nLIBAIRCRACK_CE_WPA_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa.la\nLIBAIRCRACK_CE_WPA_X86_AVX512_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-x86-avx512.la\nLIBAIRCRACK_CE_WPA_X86_AVX2_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-x86-avx2.la\nLIBAIRCRACK_CE_WPA_X86_AVX_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-x86-avx.la\nLIBAIRCRACK_CE_WPA_X86_SSE2_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-x86-sse2.la\nLIBAIRCRACK_CE_WPA_ARM_NEON_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-arm-neon.la\nLIBAIRCRACK_CE_WPA_PPC_ALTIVEC_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-ppc-altivec.la\nLIBAIRCRACK_CE_WPA_PPC_POWER8_LIBS = $(LIBACCRYPTO_LIBS) libaircrack-ce-wpa-ppc-power8.la\n\nLIBAIRCRACK_CE_WPA_PATH = $(abs_top_builddir)/\n\ninclude $(top_srcdir)/Makefile.integration.mk\ninclude $(top_srcdir)/include/Makefile.inc\ninclude $(top_srcdir)/lib/Makefile.inc\ninclude $(top_srcdir)/src/Makefile.inc\ninclude $(top_srcdir)/test/Makefile.inc\n\ninclude $(top_srcdir)/aminclude_static.am\n\nclean-local: code-coverage-clean\ndistclean-local: code-coverage-dist-clean\n\ndist-hook:\n\t$(AM_V_GEN)echo $(VERSION) > $(distdir)/AC_VERSION\n"
        },
        {
          "name": "Makefile.integration.mk",
          "type": "blob",
          "size": 5.7265625,
          "content": "\nINTEGRATION_TEST_SUITE_LOG = integration-test-suite.log\nam__set_INTEGRATION_TESTS_bases = \\\n\tbases='$(INTEGRATION_TEST_LOGS)'; \\\n\tbases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n\tbases=`echo $$bases`\n\nam__integration_test_logs1 = $(INTEGRATION_TESTS:=.log)\nINTEGRATION_TEST_LOGS = $(am__integration_test_logs1:.log=.log)\n\n\n# Leading 'am--fnord' is there to ensure the list of targets does not\n# expand to empty, as could happen e.g. with make check TESTS=''.\nam--fnord $(INTEGRATION_TEST_LOGS) $(INTEGRATION_TEST_LOGS:.log=.trs): $(am__force_recheck)\n\n$(INTEGRATION_TEST_SUITE_LOG): $(INTEGRATION_TEST_LOGS)\n\t@$(am__set_INTEGRATION_TESTS_bases); \\\n\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n\tredo_bases=`for i in $$bases; do \\\n\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n\t            done`; \\\n\tif test -n \"$$redo_bases\"; then \\\n\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n\t  if $(am__make_dryrun); then :; else \\\n\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n\t  fi; \\\n\tfi; \\\n\tif test -n \"$$am__remaking_logs\"; then \\\n\t  echo \"fatal: making $(INTEGRATION_TEST_SUITE_LOG): possible infinite\" \\\n\t       \"recursion detected\" >&2; \\\n\telif test -n \"$$redo_logs\"; then \\\n\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n\tfi; \\\n\tif $(am__make_dryrun); then :; else \\\n\t  st=0;  \\\n\t  errmsg=\"fatal: making $(INTEGRATION_TEST_SUITE_LOG): failed to create\"; \\\n\t  for i in $$redo_bases; do \\\n\t    test -f $$i.trs && test -r $$i.trs \\\n\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n\t    test -f $$i.log && test -r $$i.log \\\n\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n\t  done; \\\n\t  test $$st -eq 0 || exit 1; \\\n\tfi\n\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_INTEGRATION_TESTS_bases); \\\n\tws='[ \t]'; \\\n\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n\ttest -n \"$$results\" || results=/dev/null; \\\n\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n\t  success=true; \\\n\telse \\\n\t  success=false; \\\n\tfi; \\\n\tbr='==================='; br=$$br$$br$$br$$br; \\\n\tresult_count () \\\n\t{ \\\n\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n\t      maybe_colorize=yes; \\\n\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n\t      maybe_colorize=no; \\\n\t    else \\\n\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n\t    fi; \\\n\t    shift; \\\n\t    desc=$$1 count=$$2; \\\n\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n\t      color_start=$$3 color_end=$$std; \\\n\t    else \\\n\t      color_start= color_end=; \\\n\t    fi; \\\n\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n\t}; \\\n\tcreate_testsuite_report () \\\n\t{ \\\n\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n\t}; \\\n\t{\t\t\t\t\t\t\t\t\\\n\t  echo \"$(PACKAGE_STRING): $(subdir)/$(INTEGRATION_TEST_SUITE_LOG)\" |\t\\\n\t    $(am__rst_title);\t\t\t\t\t\t\\\n\t  create_testsuite_report --no-color;\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n\t    | $(am__create_global_log);\t\t\t\t\t\\\n\t} >$(INTEGRATION_TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n\tmv $(INTEGRATION_TEST_SUITE_LOG).tmp $(INTEGRATION_TEST_SUITE_LOG);\t\t\t\\\n\tif $$success; then\t\t\t\t\t\t\\\n\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n\t else\t\t\t\t\t\t\t\t\\\n\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n\t  test x\"$$VERBOSE\" = x || cat $(INTEGRATION_TEST_SUITE_LOG);\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n\techo \"$${col}Integration test-suite summary for $(PACKAGE_STRING)$${std}\";\t\\\n\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n\tif $$success; then :; else\t\t\t\t\t\\\n\t  echo \"$${col}See $(subdir)/$(INTEGRATION_TEST_SUITE_LOG)$${std}\";\t\t\\\n\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n\t  fi;\t\t\t\t\t\t\t\t\\\n\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\t$$success || exit 1\n\nintegration-TESTS:\n\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n\t@test -z \"$(INTEGRATION_TEST_SUITE_LOG)\" || rm -f $(INTEGRATION_TEST_SUITE_LOG)\n\t@set +e; $(am__set_INTEGRATION_TESTS_bases); \\\n\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n\tfor b in $$bases; do \\\n\t\tp='$$b$(EXEEXT)'; \\\n\t\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$b\" \\\n\t\t--log-file $$b.log --trs-file $$b.trs \\\n\t\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\t\"$$b\" $(AM_TESTS_FD_REDIRECT); \\\n\tdone; \\\n\t$(MAKE) $(AM_MAKEFLAGS) $(INTEGRATION_TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n\texit $$?;\n\nintegration:\n\t$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(integration_PROGRAMS)\n\t$(MAKE) $(AM_MAKEFLAGS) integration-TESTS\n\nmostlyclean-local:\n\t-test -z \"$(INTEGRATION_TEST_LOGS)\" || rm -f $(INTEGRATION_TEST_LOGS)\n\t-test -z \"$(INTEGRATION_TEST_LOGS:.log=.trs)\" || rm -f $(INTEGRATION_TEST_LOGS:.log=.trs)\n\t-test -z \"$(INTEGRATION_TEST_SUITE_LOG)\" || rm -f $(INTEGRATION_TEST_SUITE_LOG)\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 6.8349609375,
          "content": "Documentation, tutorials, ... can be found on https://www.aircrack-ng.org\nSee also manpages and the forum (GitHub Discussions).\n\nInstalling\n==========\n\nThis version has more dependencies/libraries required than previous versions to be compiled. \nSee INSTALLING file for more information\n\nOpenWrt Devices\n===============\n\nYou can use airodump-ng on OpenWrt devices. You'll have to specify\nprism0 as interface. Airodump-ng will automatically create it.\nRq: Aireplay DOESN'T work on OpenWrt (2.4 kernel) with broadcom chipset since the driver doesn't support injection. It *may* work with 2.6 kernels >= 2.6.24 (kamikaze 8.09+ custom-built).\n\n\nKnown bugs:\n===========\n\nDrivers\n-------\n\n\tMadwifi-ng\n\t----------\n\t\n\tThe cause of most of these problems (1, 2 and 3) is that Madwifi-ng cannot easily change the rate in monitor mode.\n\tTechnically, when changing rate while in monitor mode, the raw socket gets invalidated and we have to get it again.\n\tMadwifi-ng is getting replaced by several drivers: ath5k, ath9k and ar9170.\n\t\n\t\n\tProblem 1: No client can associate to an airbase soft AP.\n\tSolution: Use a more recent driver. Madwifi-ng has been deprecated for years.\n\t\n\t\n\tProblem 2: When changing rate while you are capturing packet, airodump-ng stalls\n\tSolution 2: Restart airodump-ng or change rate before starting it.\n\t\n\tProblem 3: After some time it stops capturing packets and you're really sure no network managers are running at all.\n\tSolution 3: That's a known bug in the driver, it may happen at any time (the time before it fails can vary a lot: \n\t            from 5 minutes to 50 or even more). Try (as root) unloading completely the driver with 'madwifi-unload'\n\t            and then run 'modprobe ath_pci autocreate=monitor'.\n\t\t  \n\t\n\tProblem 4: When creating a new VAP airodump-ng takes up to 10-15 seconds to see the first packet\n\tSolution 4: It's the behavior of madwifi-ng, don't worry (... be happy ;)).\n\n\n\tOrinoco\n\t-------\n\n\tProblem: BSSID is not reported correctly or is 00:00:00:00:00:00 or signal is not reported correctly.\n\tSolution: None. Consider replacing your card, orinoco is really really old.\n\n\nAircrack-ng\n-----------\n\n\tAireplay-ng\n\t-----------\n\n\tProblem: Fakeauth on a WRT54G with WEP (shared authentication) doesn't work.\n\tSolution: None at this time (we'll try to fix it in an upcoming release).\n\n\n\tAirolib-ng\n\t----------\n\n\tProblem: On windows only, opening/creating a database doesn't work when airolib-ng is in directories containing\n\t         special characters like 'ç', 'é', 'è', 'à', ... (directories containing spaces are not affected).\n\tReason: It's an SQLite issue.\n\tSolution: Rename the directory or move the database into another directory.\n\n\n\tAirodump-ng\n\t-----------\n\n\tProblem: Airodump-ng stops working after some time.\n\tSolution 1: You may have a network manager running that puts back the card in managed mode. \n\t            You'll have to disable it (the fastest solution is killing the process) then restart airodump-ng.\n\tSolution 2: See Problem 3 of Madwifi-ng.\n\t\n\tProblem: On windows, it doesn't display a list of adapters like the old 0.X\n\tSolution: It requires you to develop your own DLL.\n\n\tProblem: Handshake is not captured/detected\n\tReason: You might be too far and your signal is bad (or too close with a signal too strong).\n\t        Another possibility is that Airodump-ng didn't detect the handshake properly due to\n\t        being far apart in the capture.\n\tSolution 1: Check out our tutorial 'WPA Packet Capture Explained' in the wiki.\n\tSolution 2: Try running Aircrack-ng on your capture, it might detect the capture.\n\tSolution 3: Check out our wpaclean tool.\n\tNote: It will be fixed in an upcoming release.\n\n\tCygwin\n\t------\n\n\tProblem: /usr/include/sys/reent.h:14:20: fatal error: stddef.h: No such file or directory\n\tSolution: It happens because the gcc and g++ version are different. Make sure they are the same.\n\t\nSample files\n============\n\nwep.open.system.authentication.cap:\n    It shows a connection (authentication then association) to a WEP network (open authentication).\n\nwep.shared.key.authentication.cap:\n    It shows a connection (authentication then association to a WEP network (shared authentication).\n    The difference with open authentication is that the client has to encrypt a challenge text\n    and send it back (encrypted) to the AP to prove it has the right key.\n\nwpa.cap:\n    This is a sample file with a WPA handshake. It is located in the test/ directory of the install files. \n    The passphrase is 'biscotte'. Use the password file (password.lst) which is in the same directory.\n\nwpa2.eapol.cap: \n    This is a sample file with a WPA2 handshake. \n    It is located in the test/ directory of the install files. \n    The passphrase is '12345678'. Use the password file (password.lst) which is in the same directory.\n\ntest.ivs (http://download.aircrack-ng.org/wiki-files/other/test.ivs): \n    This is a 128 bit WEP key file.\n    The key is AE:5B:7F:3A:03:D0:AF:9B:F6:8D:A5:E2:C7.\n\nwep_64_ptw.cap (http://dl.aircrack-ng.org/ptw.cap): \n    This is a 64 bit WEP key file suitable for the PTW method.\n    The key is '1F:1F:1F:1F:1F'.\n\nwpa-psk-linksys.cap:\n    This is a sample file with a WPA1 handshake along with some encrypted packets.\n    Useful for testing with airdecap-ng. The password is 'dictionary'.\n\nwpa2-psk-linksys.cap:\n    This is a sample file with a WPA2 handshake along with some encrypted packets.\n    Useful for testing with airdecap-ng. The password is 'dictionary'.\n\nwps2.0.pcap:\n    This is a test file with WPS 2.0 beacon.\n\npassword.lst and password-2.lst:\n    This is a sample wordlist for WPA key cracking. More wordlists can be found at\n    https://www.aircrack-ng.org/doku.php?id=faq#where_can_i_find_good_wordlists\n\npassword.db\n    This is a sample airolib-ng database for WPA key cracking.\n\npingreply.c\n    Replies to all ping requests. Useful for testing sniffing/injecting packets with airtun-ng.\n\nChinese-SSID-Name.pcap\n    Contains a beacon with an SSID displayed in Chinese.\n\nverify_inject.py\n    Testing DNS requests using airtun-ng.\n\nn-02.cap:\n    This is a test file with 802.11X-2004 AES-128-CMAC handshake.\n    Useful for testing with aircrack-ng. The password is 'bo$$password'.\n\ntest-pmkid.pcap:\n    This is a test file with PMKID. Passphrase for 'WLAN-771698' is 'SP-91862D361'\n\ntest1.pcap:\n    This is another test file with PMKID. Passphrase for the network\n    'ogogo' is '15211521'\n\nStayAlfred.hccapx:\n    Hashcat HCCAPx file with WPA handshake.\n    Passphrase for 'StayAlfred' ESSID is 'staytogether'\n\nwpa3-psk.pcap:\n    WPA3 PSK SAE authentication. Passphrase for the network \n    'WPA3-Network' is 'abcdefgh'\n\n3.pcap\n\tAllows to reproduce issue #672 (Fixed by commit 312bb64)\n\nfloating_point_exception.pcap\n\tAllows to reproduce issue #672 and triggers a SIGFPE (Fixed by commit 312bb64)\n\n80211ad_beacon.pcap\n\tDMG Beacon (802.11ad)\n\nMore sample pcap are available from Wireshark: \n    https://wiki.wireshark.org/SampleCaptures#Wifi_.2F_Wireless_LAN_captures_.2F_802.11\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.080078125,
          "content": "# Aircrack-ng\n\n## Badges\n\n### GitHub CI\n\n[![Alma Linux CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/almalinux.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/almalinux.yml)\n[![Alpine Linux](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/alpine.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/alpine.yml)\n[![DragonFlyBSD CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/dragonflybsd.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/dragonflybsd.yml)\n[![FreeBSD CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/freebsd.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/freebsd.yml)\n[![Gentoo CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/gentoo.yml/badge.svg)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/gentoo.yml)\n[![Kali Linux CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/kali.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/kali.yml)\n[![Linux CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/linux.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/linux.yml)\n[![Linux PCRE CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/linux-pcre.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/linux-pcre.yml)\n[![macOS CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/macos.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/macos.yml)\n[![NetBSD CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/netbsd.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/netbsd.yml)\n[![OpenBSD CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/openbsd.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/openbsd.yml)\n[![Windows CI](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/windows.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/windows.yml)\n\n### Others\n\n[![Clang Scan-build](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/scanbuild.yml/badge.svg)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/scanbuild.yml)\n[![Codespell](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/codespell.yml/badge.svg)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/codespell.yml)\n[![Coverity Scan](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/coverity.yml/badge.svg)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/coverity.yml)\n[![Docker (git) push to DockerHub](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/docker.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/docker.yml)\n[![Markdown link](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/markdown-link.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/markdown-link.yml)\n[![PVS-Studio Analysis](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/pvs-studio.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/pvs-studio.yml)\n[![Style & Consistency](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/style.yml/badge.svg?event=push)](https://github.com/aircrack-ng/aircrack-ng/actions/workflows/style.yml)\n\n### Repository versions\n\n![Arch Linux package](https://img.shields.io/archlinux/v/extra/x86_64/aircrack-ng)\n![Debian package](https://img.shields.io/debian/v/aircrack-ng/stable?label=debian%20stable)\n![Debian package](https://img.shields.io/debian/v/aircrack-ng/testing?label=debian%20testing)\n![Docker Image Version (latest by date)](https://img.shields.io/docker/v/aircrackng/git?color=blue&label=Docker%20Tag%20%7C%20git)\n![Fedora package](https://img.shields.io/fedora/v/aircrack-ng)\n![homebrew version](https://img.shields.io/homebrew/v/aircrack-ng)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/bionic?label=Ubuntu%2018.04)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/focal?label=Ubuntu%2020.04)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/jammy?label=Ubuntu%2022.04)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/kinetic?label=Ubuntu%2022.10)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/lunar?label=Ubuntu%2023.04)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/mantic?label=Ubuntu%2023.10)\n![Ubuntu package](https://img.shields.io/ubuntu/v/aircrack-ng/noble?label=Ubuntu%2024.04)\n\n## Description\n\nAircrack-ng is a complete suite of tools to assess WiFi network security.\n\nIt focuses on different areas of WiFi security:\n * Monitoring: Packet capture and export of data to text files for further processing by third party tools.\n * Attacking: Replay attacks, deauthentication, fake access points and others via packet injection.\n * Testing: Checking WiFi cards and driver capabilities (capture and injection).\n * Cracking: WEP and WPA PSK (WPA 1 and 2).\n\nAll tools are command line which allows for heavy scripting. A lot of GUIs have taken advantage of this feature. It works primarily on Linux but also Windows, macOS, FreeBSD, OpenBSD, NetBSD, as well as Solaris and even eComStation 2. \n\n# Building\n\n## Requirements\n\n * Autoconf\n * Automake\n * Libtool\n * shtool\n * OpenSSL development package or libgcrypt development package.\n * Airmon-ng (Linux) requires ethtool, usbutils, and often pciutils.\n * On Windows, cygwin has to be used and it also requires w32api package.\n * On Windows, if using clang, libiconv and libiconv-devel\n * Linux: LibNetlink 1 or 3. It can be disabled by passing --disable-libnl to configure.\n * pkg-config (pkgconf on FreeBSD, DragonFlyBSD, OpenBSD and NetBSD)\n * FreeBSD, DragonFlyBSD, OpenBSD, NetBSD, Solaris and OS X with Macports: gmake\n * Linux/Cygwin: make and Standard C++ Library development package (Debian: libstdc++-dev)\n\nNote: Airmon-ng only requires pciutils if the system has a PCI/PCIe bus and it is populated.\n      Such bus can be present even if not physically visible. For example, it is present,\n      and populated on the Raspberry Pi 4, therefore pciutils is required on that device.\n\n## Optional stuff\n\n * If you want SSID filtering with regular expression in airodump-ng\n   (--essid-regex) PCRE or PCRE2 development package is required.\n * If you want to use airolib-ng and '-r' option in aircrack-ng,\n   SQLite development package >= 3.3.17 (3.6.X version or better is recommended)\n * If you want to use Airpcap, the 'developer' directory from the CD/ISO/SDK is required.\n * In order to build `besside-ng`, `besside-ng-crawler`, `easside-ng`, `tkiptun-ng` and `wesside-ng`,\n   libpcap development package is required (on Cygwin, use the Airpcap SDK instead; see above)\n * rfkill\n * If you want Airodump-ng to log GPS coordinates, gpsd is needed\n * For best performance on SMP machines, ensure the hwloc library and headers are installed. It is strongly recommended on high core count systems, it may give a serious speed boost\n * CMocka and expect for testing\n * For integration testing on Linux only: tcpdump, HostAPd, WPA Supplicant and screen\n\n## Installing required and optional dependencies\n\nBelow are instructions for installing the basic requirements to build\n`aircrack-ng` for a number of operating systems.\n\n**Note**: CMocka, tcpdump, screen, HostAPd and WPA Supplicant should not be dependencies when packaging Aircrack-ng.\n\n### Linux\n\n#### Arch Linux\n\n    sudo pacman -Sy base-devel libnl openssl ethtool util-linux zlib libpcap sqlite pcre2 hwloc cmocka hostapd wpa_supplicant tcpdump screen iw usbutils pciutils expect\n\n#### Debian/Ubuntu\n\n    sudo apt-get install build-essential autoconf automake libtool pkg-config libnl-3-dev libnl-genl-3-dev libssl-dev ethtool shtool rfkill zlib1g-dev libpcap-dev libsqlite3-dev libpcre2-dev libhwloc-dev libcmocka-dev hostapd wpasupplicant tcpdump screen iw usbutils expect\n\n#### Fedora\n\n    sudo yum install libtool pkgconfig sqlite-devel autoconf automake openssl-devel libpcap-devel pcre2-devel rfkill libnl3-devel gcc gcc-c++ ethtool hwloc-devel libcmocka-devel make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel expect\n\n#### CentOS/RHEL 7\n\n    sudo yum install epel-release\n    sudo ./centos_autotools.sh\n    # Remove older installation of automake/autoconf\n    sudo yum remove autoconf automake\n    sudo yum install sqlite-devel openssl-devel libpcap-devel pcre2-devel rfkill libnl3-devel ethtool hwloc-devel libcmocka-devel make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel\n\n**Note**: autoconf, automake, libtool, and pkgconfig in the repositories are too old. The script centos_autotools.sh automatically installs dependencies to compile then install the tools.\n\n#### CentOS/RHEL 8\n\n    sudo yum config-manager --set-enabled powertools\n    sudo yum install epel-release\n    sudo yum install libtool pkgconfig sqlite-devel autoconf automake openssl-devel libpcap-devel pcre2-devel rfkill libnl3-devel gcc gcc-c++ ethtool hwloc-devel libcmocka-devel make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel\n\n#### openSUSE\n\n    sudo zypper install autoconf automake libtool pkg-config libnl3-devel libopenssl-1_1-devel zlib-devel libpcap-devel sqlite3-devel pcre2-devel hwloc-devel libcmocka-devel hostapd wpa_supplicant tcpdump screen iw gcc-c++ gcc ethtool pciutils usbutils expect\n\n#### Mageia\n\n    sudo urpmi autoconf automake libtool pkgconfig libnl3-devel libopenssl-devel zlib-devel libpcap-devel sqlite3-devel pcre2-devel hwloc-devel libcmocka-devel hostapd wpa_supplicant tcpdump screen iw gcc-c++ gcc make expect\n\n#### Alpine\n\n    sudo apk add gcc g++ make autoconf automake libtool libnl3-dev openssl-dev ethtool libpcap-dev cmocka-dev hostapd wpa_supplicant tcpdump screen iw pkgconf util-linux sqlite-dev pcre2-dev linux-headers zlib-dev pciutils usbutils expect\n\n**Note**: Community repository needs to be enabled for iw\n\n#### Clear Linux\n\n    sudo swupd bundle-add c-basic devpkg-openssl devpkg-libgcrypt devpkg-libnl devpkg-hwloc devpkg-libpcap devpkg-pcre2 devpkg-sqlite-autoconf ethtool wget network-basic software-testing sysadmin-basic wpa_supplicant os-testsuite\n\n**Note**: hostapd must be compiled manually, it is not present in the repository\n\n### BSD\n\n#### FreeBSD\n\n    pkg install pkgconf shtool libtool gcc9 automake autoconf pcre2 sqlite3 openssl gmake hwloc cmocka\n\n#### DragonflyBSD\n\n    pkg install pkgconf shtool libtool gcc8 automake autoconf pcre2 sqlite3 libgcrypt gmake cmocka\n\n#### OpenBSD\n\n    pkg_add pkgconf shtool libtool gcc automake autoconf pcre2 sqlite3 openssl gmake cmocka\n\n#### NetBSD\n\n    pkg_add pkgconf libtool gcc7 automake autoconf pcre2 sqlite3 openssl gmake cmocka\n\n### macOS\n\nXCode, Xcode command line tools and HomeBrew are required.\n\n    brew install autoconf automake libtool openssl shtool pkg-config hwloc pcre2 sqlite3 libpcap cmocka\n\n### Windows\n\n#### Cygwin\n\nCygwin requires the full path to the `setup.exe` utility, in order to\nautomate the installation of the necessary packages. In addition, it\nrequires the location of your installation, a path to the cached\npackages download location, and a mirror URL.\n\nAn example of automatically installing all the dependencies\nis as follows:\n\n    c:\\cygwin\\setup-x86.exe -qnNdO -R C:/cygwin -s http://cygwin.mirror.constant.com -l C:/cygwin/var/cache/setup -P autoconf -P automake -P bison -P gcc-core -P gcc-g++ -P mingw-runtime -P mingw-binutils -P mingw-gcc-core -P mingw-gcc-g++ -P mingw-pthreads -P mingw-w32api -P libtool -P make -P python -P gettext-devel -P gettext -P intltool -P libiconv -P pkg-config -P git -P wget -P curl -P libpcre2-devel -P libssl-devel -P libsqlite3-devel\n\n#### MSYS2\n\n    pacman -Sy autoconf automake-wrapper libtool msys2-w32api-headers msys2-w32api-runtime gcc pkg-config git python openssl-devel openssl libopenssl msys2-runtime-devel gcc binutils make pcre2-devel libsqlite-devel\n\n### GNU/Hurd\n\n#### Debian\n\n    apt-get install build-essential autoconf automake libtool pkg-config libssl-dev shtool zlib1g-dev libpcap-dev libsqlite3-dev libpcre2-dev libhwloc-dev libcmocka-dev screen expect libbsd-dev\n\n## Docker containers\n\nWe have two repositories on DockerHub:\n- [aircrackng/release](https://hub.docker.com/r/aircrackng/release): Each release\n- [aircrackng/git](https://hub.docker.com/r/aircrackng/git): every commit in the git repository\n\nBase command for the `git` version:\n\n`sudo docker run --rm -it aircrackng/git`\n\nAvailable platforms/CPU architectures:\n- linux/386 (base image: debian:unstable-slim)\n- linux/amd64 (base image: debian:unstable-slim)\n- linux/arm/v5 (base image: debian:unstable-slim)\n- linux/arm/v6 (base image: alpine:3)\n- linux/arm/v7 (base image: debian:unstable-slim)\n- linux/arm64/v8 (base image: debian:unstable-slim)\n- linux/mips64le (base image: debian:unstable-slim)\n- linux/ppc64le (base image: debian:unstable-slim)\n- linux/riscv64 (base image: debian:unstable-slim)\n- linux/s390x (base image: debian:unstable-slim)\n\n## Compiling\n\nTo build `aircrack-ng`, the Autotools build system is utilized. Autotools replaces\nthe older method of compilation.\n\n**NOTE**: If utilizing a developer version, eg: one checked out from source control,\nyou will need to run a pre-`configure` script. The script to use is one of the\nfollowing: `autoreconf -i` or `env NOCONFIGURE=1 ./autogen.sh`.\n\nFirst, `./configure` the project for building with the appropriate options specified\nfor your environment:\n\n    ./configure <options>\n\n**TIP**: If the above fails, please see above about developer source control versions.\n\nNext, compile the project (respecting if `make` or `gmake` is needed):\n\n * Compilation:\n\n    `make`\n\n * Compilation on *BSD or Solaris:\n\n    `gmake`\n\nFinally, the additional targets listed below may be of use in your environment:\n\n * Execute all unit testing:\n\n    `make check`\n\n * Execute all integration testing (requires root):\n \n    `make integration`\n\n * Installing:\n\n    `make install`\n\n * Uninstall:\n\n    `make uninstall`\n\n\n###  `./configure` flags\n\nWhen configuring, the following flags can be used and combined to adjust the suite\nto your choosing:\n\n* **with-airpcap=DIR**:  needed for supporting airpcap devices on Windows (Cygwin or MSYS2 only).\n                Replace DIR above with the absolute location to the root of the\n                extracted source code from the Airpcap CD or downloaded SDK available\n                online. Required on Windows to build `besside-ng`, `besside-ng-crawler`, \n                `easside-ng`, `tkiptun-ng` and `wesside-ng` when building experimental tools.\n                The developer pack (Compatible with version 4.1.1 and 4.1.3) can be downloaded at\n                https://support.riverbed.com/content/support/software/steelcentral-npm/airpcap.html\n\n* **with-experimental**: needed to compile `tkiptun-ng`, `easside-ng`, `buddy-ng`,\n                    `buddy-ng-crawler`, `airventriloquist` and `wesside-ng`.\n                    libpcap development package is also required to compile most of the tools.\n                    If not present, not all experimental tools will be built.\n                    On Cygwin, libpcap is not present and the Airpcap SDK replaces it.\n                    See --with-airpcap option above.\n\n* **with-ext-scripts**: needed to build `airoscript-ng`, `versuck-ng`, `airgraph-ng` and \n                   `airdrop-ng`. \n                   Note: Each script has its own dependencies.\n\n* **with-gcrypt**:   Use libgcrypt crypto library instead of the default OpenSSL.\n                And also use internal fast sha1 implementation (borrowed from GIT).\n                Dependency (Debian): libgcrypt20-dev\n\n* **with-duma**:\tCompile with DUMA support. DUMA is a library to detect buffer overruns and underruns.\n            \tDependency (Debian): duma\n\n* **disable-libnl**:  Set up the project to be compiled without libnl (1 or 3). Linux option only.\n\n* **without-opt**:  Do not enable -O3 optimizations.\n\n* **enable-shared**:   Make OSdep a shared library.\n\n* **disable-shared**: When combined with **enable-static**, it will statically compile Aircrack-ng.\n\n* **with-avx512**:  On x86, add support for AVX512 instructions in aircrack-ng. Only use it when\n                    the current CPU supports AVX512.\n\n* **with-static-simd=<SIMD>**: Compile a single optimization in aircrack-ng binary. Useful when compiling\n                    statically and/or for space-constrained devices. Valid SIMD options: x86-sse2,\n                    x86-avx, x86-avx2, x86-avx512, ppc-altivec, ppc-power8, arm-neon, arm-asimd.\n                    Must be used with --enable-static --disable-shared. When using those 2 options, the default\n                    is to compile the generic optimization in the binary. --with-static-simd merely allows\n                    to choose another one.\n\n* **enable-maintainer-mode**: It is important to enable this flag when developing with Aircrack-ng. This flag enables additional compile warnings and safety features.\n\n#### Examples:\n\n  * Configure and compiling:\n\n    ```\n    ./configure --with-experimental\n    make\n    ```\n\n  * Compiling with gcrypt:\n\n    ```\n    ./configure --with-gcrypt\n    make\n    ```\n\n  * Installing:\n\n    `make install`\n\n  * Installing (strip binaries):\n  \n    `make install-strip`\n\n  * Installing, with external scripts:\n\n    ```\n    ./configure --with-experimental --with-ext-scripts\n    make\n    make install\n    ```\n\n  * Testing (with sqlite, experimental and pcre2)\n\n    ```\n    ./configure --with-experimental\n    make\n    make check\n    ```\n\n  * Compiling on OS X with macports (and all options):\n\n    ```\n    ./configure --with-experimental\n    gmake\n    ```\n\n  * Compiling on macOS running on M1/AARCH64 and Homebrew:\n\n    ```\n    autoreconf -vif\n    env CPPFLAGS=\"-Wno-deprecated-declarations\" ./configure --with-experimental\n    make\n    make check\n    ```\n\n  * Compiling on OS X 10.10 with XCode 7.1 and Homebrew:\n\n    ```\n    env CC=gcc-4.9 CXX=g++-4.9 ./configure\n    make\n    make check\n    ```\n\n    *NOTE*: Older XCode ships with a version of LLVM that does not support CPU feature\n    detection; which causes the `./configure` to fail. To work around this older LLVM,\n    it is required that a different compile suite is used, such as GCC or a newer LLVM\n    from Homebrew.\n\n    If you wish to use OpenSSL from Homebrew, you may need to specify the location\n    to its installation. To figure out where OpenSSL lives, run:\n\n    `brew --prefix openssl`\n\n    Use the output above as the DIR for `--with-openssl=DIR` in the `./configure` line:\n\n    ```\n    env CC=gcc-4.9 CXX=g++-4.9 ./configure --with-openssl=DIR\n    make\n    make check\n    ```\n\n  * Compiling on FreeBSD with gcc9\n\n    ```\n    env CC=gcc9 CXX=g++9 MAKE=gmake ./configure\n    gmake\n    ```\n\n  * Compiling on Cygwin with Airpcap (assuming Airpcap devpack is unpacked in Aircrack-ng directory)\n\n    ```\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-osdep\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-crypto\n    cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-util\n    dlltool -D Airpcap_Devpack/bin/x86/airpcap.dll -d build/airpcap.dll.def -l Airpcap_Devpack/bin/x86/libairpcap.dll.a\n    autoreconf -i\n    ./configure --with-experimental --with-airpcap=$(pwd)\n    make\n    ```\n\n * Compiling on DragonflyBSD with gcrypt using GCC 8\n\n   ```\n   autoreconf -i\n   env CC=gcc8 CXX=g++8 MAKE=gmake ./configure --with-experimental --with-gcrypt\n   gmake\n   ```\n\n * Compiling on OpenBSD (with autoconf 2.69 and automake 1.16)\n\n   ```\n   export AUTOCONF_VERSION=2.69\n   export AUTOMAKE_VERSION=1.16\n   autoreconf -i\n   env MAKE=gmake CC=cc CXX=c++ ./configure\n   gmake\n   ```\n\n * Compiling and debugging aircrack-ng\n\n   ```\n   export CFLAGS='-O0 -g'\n   export CXXFLAGS='-O0 -g'\n   ./configure --with-experimental --enable-maintainer-mode --without-opt\n   make\n   LD_LIBRARY_PATH=.libs gdb --args ./aircrack-ng [PARAMETERS]\n   ```\n\n# IDE development\n\n## VS Code - devcontainers\n\nA VS Code development environment is provided, as is, for rapid setup of a development environment. This additionally adds support for GitHub Codespaces.\n\n### Requirements\n\nThe first requirement is a working [Docker Engine](https://docs.docker.com/engine/install/) environment.\n\nNext, an installation of [VS Code](https://code.visualstudio.com/) with the following extension(s):\n\n- [`Remote - Containers`](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers) by Microsoft.\n\n> The \"Remote - Containers\" extension will refuse to work with OSS Code.\n\n### Usage\n\n1. Clone this repository to your working folder:\n```\n$ git clone --recursive https://github.com/aircrack-ng/aircrack-ng.git\n$ cd aircrack-ng\n```\n2. After cloning this repository, open the folder inside VS Code.\n```\n$ code .\n```\n> IMPORTANT: You should answer \"Yes\", if it asks if the folder should be opened inside a remote container. If it does not ask, then press `Ctrl+Shift+P` and type `open in container`. This should bring up the correct command, for which pressing enter will run said command.\n\n3. A number of warnings might appear about a missing `compile_commands.json` file. These are safe to ignore for a moment, as this file is automatically generated after the initial compilation.\n4. Now build the entire project by pressing `Ctrl+R` and selecting `Build Full` from the pop-up menu that appears.\n5. VS Code should detect the `compile_commands.json` file and ask if it should be used; selecting \"Yes, always\" will complete the initial setup of a fully working IDE.\n> IMPORTANT: If it doesn't detect the file, pressing `Ctrl+Shift+P` and typing `reload window` will bring up the selection to fully reload the environment.\n6. At this point, nearly all features of VS Code will function; from Intellisense, auto-completion, live documentation, to code formatting. Additionally, there are pre-configured tasks for builds and tests, as well as an example GDB/LLDB configuration for debugging `aircrack-ng`.\n\n# Packaging\n\nAutomatic detection of CPU optimization is done at run time. This behavior\n**is** desirable when packaging Aircrack-ng (for a Linux or other distribution.)\n\nAlso, in some cases it may be desired to provide your own flags completely and\nnot having the suite auto-detect a number of optimizations. To do this, add\nthe additional flag `--without-opt` to the `./configure` line:\n\n`./configure --without-opt`\n\n# Using pre-compiled binaries\n\n## Linux/BSD\n\nAircrack-ng is available in most distributions repositories. However, it is not always up-to-date.\n\n## Windows\n * Install the appropriate \"monitor\" driver for your card; standard drivers don't work for capturing data.\n * Aircrack-ng suite is command line tools. So, you have to open a command-line\n   `Start menu -> Run... -> cmd.exe` then use them\n * Run the executables without any parameters to have help\n\n# Documentation\n\nSome more information is present in the [README](README) file.\n\nDocumentation, tutorials, ... can be found on https://aircrack-ng.org\n\nSupport is available in the [GitHub Discussions](https://github.com/aircrack-ng/aircrack-ng/discussions) and on IRC (in #aircrack-ng on Libera Chat).\n\nEvery tool has its own manpage. For aircrack-ng, `man aircrack-ng`\n\n# Infrastructure sponsors\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.9677734375,
          "content": "# Security Policy\n\nAlthough we do our best to prevent vulnerabilities, and have tools to help\ncatch most of them, we are humans after all, and there will be inevitably\nissues slipping through the cracks.\n\nThey can fall into two categories, either in any of the tools in the\nAircrack-ng suite, or in our presence online (website, forum, emails,\nDNS, etc.).\n\nDepending on which category they fall into, different information is needed. We\ndo believe in coordinated disclosure, so in order to address them, and\ncoordinate disclosure with you (and properly credit you for the discovery),\nreport them to us. Do not open bug reports or pull requests.\n\nOur contact email for security issues is security@aircrack-ng.org\n\nIf you are unsure how to proceed, need clarifications or have questions or\nremarks about this policy, feel free to email us to inquire.\n\n## Aircrack-ng suite vulnerabilities\n\n### Supported versions\n\nWe only support the latest stable present on https://aircrack-ng.org\n\nFor security issues present in our GitHub repository (master or any recently\nactive branch), open a pull request or bug report.\n\nFor any security issue affecting older versions of Aircrack-ng still present\nin currently supported Linux or BSD distributions, file a report with them,\nand email us a short description of the vulnerability along with a link to\nthe bug report.\n\n### Reporting\n\nThere is no particular template to report the vulnerabilities. Keep in mind\nthat a vulnerability is essentially a bug, so please provide us detailed\ninformation on how to reproduce it, such as:\n\n- Which Aircrack-ng tools are affected? And how? Any proof of concept to\ndemonstrate it?\n- Operating systems involved, kernel versions (`uname -a` and\n`lsb_release -a` for example).\n- CPU architecture (`aircrack-ng -u` output is useful); a vulnerability on a\nx86 32 bit may not be exploitable on ARM 64 bit. A bug may also only be present\nwhen Aircrack-ng is compiled a certain way.\n- All the commands needed to trigger the issue.\n- Did you compile it yourself or did you get it from a package?\n- What equipment did you use? A packet capture may be useful; different\nequipment behaves differently, they have different Wi-Fi stacks, drivers, and\nfirmwares.\n- A patch to fix the issue, if available.\n- If CVE numbers have been assigned, please provide them as well.\n\n### Public disclosure\n\nAlthough it is essentially a bug, do not submit a bug report or a pull request,\nbut email us the data first, so we can coordinate fixing the issue and assist\nyou in filing the bug reports, and if you provided a patch, the pull request; a\npatch may need to be broken down in multiple commits for clarity, for example.\n\n## Online presence\n\nFor any security issue affecting us specifically (any aircrack-ng.org\nsubdomain) such as misconfiguration of our hosting, DNS, email, servers,\nor misconfiguration of the software we are using, email us with all the\ndetails regarding your findings.\n\nAnything else should be reported to the author or provider of the software,\nhardware, or hosting.\n"
        },
        {
          "name": "apparmor",
          "type": "tree",
          "content": null
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 3.1845703125,
          "content": "#!/bin/sh\n#\n# Aircrack-ng\n#\n# Copyright (C) 2017 Joseph Benden <joe@benden.us>\n#\n# Autotool support was written by: Joseph Benden <joe@benden.us>\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link the code of portions of this program with the\n# OpenSSL library under certain conditions as described in each\n# individual source file, and distribute linked combinations\n# including the two.\n#\n# You must obey the GNU General Public License in all respects\n# for all of the code used other than OpenSSL.\n#\n# If you modify file(s) with this exception, you may extend this\n# exception to your dnl version of the file(s), but you are not obligated\n# to do so.\n#\n# If you dnl do not wish to do so, delete this exception statement from your\n# version.\n#\n# If you delete this exception statement from all source files in the\n# program, then also delete it here.\n\nset -euf\n\ntest -n \"${srcdir:-}\" || srcdir=\"$(dirname \"$0\")\"\ntest -n \"${srcdir:-}\" || srcdir=.\n\ncd \"$srcdir\"\n\nmissing_tool()\n{\n\t_prog=\"$1\"\n\t_env=\"$2\"\n\n\techo \"Could not auto-detect '${_prog}'; please install or specify the '${_env}' environment variable.\"\n\texit 1\n}\n\n\nif [ -z \"${LIBTOOLIZE:-}\" ]; then\n\tif which libtoolize >/dev/null 2>/dev/null; then\n\t\tLIBTOOLIZE=\"$(which libtoolize 2>/dev/null)\"\n\telif which glibtoolize >/dev/null 2>/dev/null; then\n\t\tLIBTOOLIZE=\"$(which glibtoolize 2>/dev/null)\"\n\telse\n\t\tmissing_tool libtoolize LIBTOOLIZE\n\tfi\nfi\n\nif [ -z \"${ACLOCAL:-}\" ]; then\n\tif which aclocal >/dev/null 2>/dev/null; then\n\t\tACLOCAL=\"$(which aclocal 2>/dev/null)\"\n\telse\n\t\tmissing_tool aclocal ACLOCAL\n\tfi\nfi\n\nif [ -z \"${AUTOCONF:-}\" ]; then\n\tif which autoconf >/dev/null 2>/dev/null; then\n\t\tAUTOCONF=\"$(which autoconf 2>/dev/null)\"\n\telse\n\t\tmissing_tool autoconf AUTOCONF\n\tfi\nfi\n\nif [ -z \"${AUTOHEADER:-}\" ]; then\n\tif which autoheader >/dev/null 2>/dev/null; then\n\t\tAUTOHEADER=\"$(which autoheader 2>/dev/null)\"\n\telse\n\t\tmissing_tool autoheader AUTOHEADER\n\tfi\nfi\n\nif [ -z \"${AUTOMAKE:-}\" ]; then\n\tif which automake >/dev/null 2>/dev/null; then\n\t\tAUTOMAKE=\"$(which automake 2>/dev/null)\"\n\telse\n\t\tmissing_tool automake AUTOMAKE\n\tfi\nfi\n\n\"$LIBTOOLIZE\" --force --copy --automake\n\"$ACLOCAL\" -I build/m4/stubs -I build/m4 ${ACLOCAL_FLAGS:-}\n\"$AUTOCONF\"\n\"$AUTOHEADER\"\n\"$AUTOMAKE\" \\\n    --gnu --add-missing --force --copy \\\n    -Wno-portability -Wno-portability\n\n{ cat <<EOF\n#!/usr/bin/env bash\n./autogen.sh \"$@\" \"\\$@\"\nEOF\n} > reautogen.sh\nchmod +x reautogen.sh\n\nif [ -n \"${NOCONFIGURE:-}\" ]; then\n    echo \"Done. ./configure skipped.\"\n    exit $?\nfi\n\nexec ./configure \"$@\"\n\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "centos_autotools.sh",
          "type": "blob",
          "size": 2.4482421875,
          "content": "#!/bin/sh\n# Install newer version of autotools, automake, libtool, and pkgconfig on CentOS 7\n\nif [ ! -f /etc/os-release ]; then\n\techo 'os-release not present, aborting'\n\texit 1\nfi\n\n. /etc/os-release\n\n# Untested on Red Hat\nif [ \"x${ID}\" != 'xcentos' ] && [ \"x${ID}\" != 'xredhat' ]; then\n\techo 'OS is not CentOS or Red Hat, aborting'\n\texit 1\nfi\n\nif [ \"x${VERSION_ID}\" != 'x7' ]; then\n\techo \"Invalid CentOS/Red Hat version. Expected 7, got ${VERSION_ID}, aborting\"\n\texit 1\nfi\n\nyum install epel-release\n\n# Install packages if not already present\n# Yeah, automake is required to build a newer version of automake\nPACKAGES=\"tar glib2-devel gcc gcc-c++ make m4 perl-Data-Dumper help2man automake\"\nNB_INSTALLED_PKG=$(yum list install ${PACKAGES} | sed -n '/Installed Packages/,$p' | wc -l)\n# Count includes the \"Installed Packages\" line, so decreasing count by 1\nNB_INSTALLED_PKG=$((NB_INSTALLED_PKG-1))\nNB_PKG=$(echo ${PACKAGES} | wc -w)\n[ ${NB_PKG} -ne ${NB_INSTALLED_PKG} ] && yum install ${PACKAGES}\n\nautoconf_version=2.69\nautomake_version=1.16.1\nlibtool_version=2.4.6\npkgconf_version=0.29\n\nTMP_DIR=$(mktemp -d)\ncd ${TMP_DIR}\n\necho \"Installing autoconf ${autoconf_version}\"\ncurl -L http://ftp.gnu.org/gnu/autoconf/autoconf-${autoconf_version}.tar.xz > autoconf-${autoconf_version}.tar.xz \\\n && tar xJf autoconf-${autoconf_version}.tar.xz \\\n && cd autoconf-${autoconf_version} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd ..\n\n# Requires autoconf 2.65+\necho \"Installing automake ${automake_version}\"\ncurl -L http://ftp.gnu.org/gnu/automake/automake-${automake_version}.tar.xz > automake-${automake_version}.tar.xz \\\n && tar xJf automake-${automake_version}.tar.xz \\\n && cd automake-${automake_version} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd ..\n\necho \"Installing libtool ${libtool_version}\"\ncurl -L http://ftp.gnu.org/gnu/libtool/libtool-${libtool_version}.tar.xz > libtool-${libtool_version}.tar.xz \\\n && tar xJf libtool-${libtool_version}.tar.xz \\\n && cd libtool-${libtool_version} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd ..\n\necho \"Installing pkg-config ${pkgconf_version}\"\ncurl -L https://pkg-config.freedesktop.org/releases/pkg-config-${pkgconf_version}.tar.gz > pkg-config-${pkgconf_version}.tar.gz \\\n && tar xzf pkg-config-${pkgconf_version}.tar.gz \\\n && cd pkg-config-${pkgconf_version} \\\n && ./configure --prefix=/usr/local --libdir=/usr/lib64 \\\n && make \\\n && make install \\\n && cd ..\n\necho 'Done'\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 8.650390625,
          "content": "# Aircrack-ng\n#\n# Copyright (C) 2017-2022 Joseph Benden <joe@benden.us>\n#\n# Autotool support was written by: Joseph Benden <joe@benden.us>\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link the code of portions of this program with the\n# OpenSSL library under certain conditions as described in each\n# individual source file, and distribute linked combinations\n# including the two.\n#\n# You must obey the GNU General Public License in all respects\n# for all of the code used other than OpenSSL.\n#\n# If you modify file(s) with this exception, you may extend this\n# exception to your # version of the file(s), but you are not obligated\n# to do so.\n#\n# If you # do not wish to do so, delete this exception statement from your\n# version.\n#\n# If you delete this exception statement from all source files in the\n# program, then also delete it here.\n\nm4_pattern_allow([AC_VERSION])\nm4_define([version_date], \"May 2022\")\nm4_define([version_major], 1)\nm4_define([version_minor], 7)\nm4_define([version_micro], 0)\nm4_define([version_beta],  0)\nm4_define([version_rc],    0)\nm4_define([version_scm],[m4_translit(m4_esyscmd([$(pwd)/evalrev . scm || echo]),m4_newline)])\nm4_define([version_triplet],version_major.version_minor.version_micro)\nm4_append([version_triplet],version_scm)\n\nAC_PREREQ([2.59])\nAC_INIT([aircrack-ng],[version_triplet],[https://github.com/aircrack-ng/aircrack-ng/discussions])\n\n#\n# Cross-Compilation\n#\nAC_CANONICAL_BUILD\nAC_CANONICAL_HOST\nAC_CANONICAL_TARGET\n\n#\n# Initialize Automake\n#\nAC_CONFIG_AUX_DIR([.])\nAC_CONFIG_MACRO_DIR([build/m4/stubs])\nAC_CONFIG_HEADERS([config.h])\n\nAM_INIT_AUTOMAKE([1.14 dist-bzip2 dist-zip foreign subdir-objects])\nAM_MAINTAINER_MODE([disable])\nAC_SUBST([ACLOCAL_AMFLAGS], [\"-I build/m4/stubs -I build/m4 \\${ACLOCAL_FLAGS}\"])\n\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\n#\n# Ensure MAKE is GNU compatible\n#\nif ! ${MAKE-make} --version /cannot/make/this >/dev/null 2>&1; then\n    AC_MSG_ERROR([you don't seem to have GNU make; it is required])\nfi\n\n#\n# Find tooling\n#\nAIRCRACK_NG_PROG_CC\nAIRCRACK_NG_PROG_CXX\nAX_CXX_COMPILE_STDCXX([17], [ext], [optional])\nif test \"$HAVE_CXX17\" = \"0\"; then\n    AX_CXX_COMPILE_STDCXX([14], [ext], [optional])\n    if test \"$HAVE_CXX14\" = \"0\"; then\n        AX_CXX_COMPILE_STDCXX([11], [ext], [mandatory])\n    fi\nfi\nAC_PROG_INSTALL\nAM_PROG_AS\nPKG_PROG_PKG_CONFIG\nAM_PROG_CC_C_O\nAC_C_CONST\nAC_PROG_EGREP\n\nAC_CHECK_HEADERS([locale.h stdio.h stdarg.h fcntl.h malloc.h stdlib.h string.h strings.h unistd.h sys/stat.h getopt.h sys/time.h sys/types.h dirent.h])\n\n#\n# Set versioning detail\n#\nAC_SUBST([_MAJ], [version_major])\nAC_SUBST([_MIN], [version_minor])\nAC_SUBST([_SUB_MIN], [version_micro])\nAC_SUBST([_BETA], [version_beta])\nAC_SUBST([_RC], [version_rc])\nAC_SUBST([_SCM], [version_scm])\nAC_SUBST([LT_VER], [version_major.version_minor.version_micro])\nAC_SUBST([MAN_RELEASE_DATE], [version_date])\nAC_SUBST([MAN_RELEASE_VERSION], [\"Version version_triplet\"])\nAC_DEFINE([_REVISION], [\"version_triplet\"], [The version information of the project])\nAC_DEFINE([LT_CYGWIN_VER], [\"-version_major-version_minor-version_micro.dll\"], [The Cygwin DLL version string suffix])\n\n#\n# Initialize libtool\n#\nLT_INIT([win32-dll disable-static shared])\n\n#\n# Operating Systems\n#\nAIRCRACK_NG_MAC\nAIRCRACK_NG_WINDOWS\nAIRCRACK_NG_OS_DETECT\n\n#\n# Required\n#\nAIRCRACK_NG_CRYPTO\nAIRCRACK_NG_ETHTOOL\nAIRCRACK_NG_LIBNL\n\n#\n# Optional\n#\nAIRCRACK_NG_AIRPCAP\nAIRCRACK_NG_EXPECT\nAIRCRACK_NG_EXPERIMENTAL\nAIRCRACK_NG_EXT_SCRIPTS\nAIRCRACK_NG_HWLOC\nAIRCRACK_NG_PCAP\nAIRCRACK_NG_PCRE\nAIRCRACK_NG_RFKILL\nAIRCRACK_NG_SQLITE\nAIRCRACK_NG_ZLIB\nPKG_CHECK_MODULES([CMOCKA], [cmocka], [\n\t\tCMOCKA_FOUND=yes\n\t\tAC_SUBST([CMOCKA_CFLAGS])\n\t\tAC_SUBST([CMOCKA_LIBS])\n\t], [CMOCKA_FOUND=no])\n\n#\n# Extras, but needed\n#\nAIRCRACK_NG_LARGEFILE\nAIRCRACK_NG_PTHREAD\nAX_LIB_SOCKET_NSL\nAC_CHECK_LIB([dl], [dlopen], [ LIBS=\"$LIBS -ldl\" ], [:])\nAC_CHECK_LIB([m], [sin], [ LIBS=\"$LIBS -lm\" ], [:])\nAIRCRACK_NG_COMPAT\nsaved_cflags=\"$CFLAGS\"\nCFLAGS=\"\"\nAC_CHECK_FUNCS([posix_memalign aligned_alloc memalign __mingw_aligned_malloc _aligned_malloc], break)\nCFLAGS=\"$saved_cflags\"\n\n#\n# Code Coverage Support\n#\nAIRCRACK_NG_CODE_COVERAGE\n\n#\n# Compiler set-up\n#\nAIRCRACK_NG_COMPILER_C\nAIRCRACK_NG_COMPILER_CXX\n\n#\n# Processor feature selection/detection\n#\nAIRCRACK_NG_SIMD_C\nAIRCRACK_NG_SIMD_CXX\n\n#\n# Optional analyzers\n#\nAIRCRACK_NG_ASAN\nAIRCRACK_NG_DUMA\nAIRCRACK_NG_JEMALLOC\nAIRCRACK_NG_TCMALLOC\nAIRCRACK_NG_TSAN\n\n#\n# Automake\n#\nAM_CONDITIONAL([HAVE_AIRPCAP_OR_PCAP], [test \"$AIRPCAP\" = yes -o \"$PCAP_FOUND\" = yes])\nAM_CONDITIONAL([MULTIBIN], [test \"$with_multibin\" = yes])\nAM_CONDITIONAL([ENABLE_INSTALLED_TESTS], [test \"nope\" = yes]) # for glib tests\nAM_CONDITIONAL([CMOCKA], [test \"$CMOCKA_FOUND\" = yes])\nAM_CONDITIONAL([STATIC_BUILD], [test \"$enable_static\" = yes])\nAM_CONDITIONAL([EXPECT], [test \"$EXPECT_FOUND\" = yes])\n\n#\n# Save flags for build summary\n#\nsummary_cflags=\"$CFLAGS\"\nsummary_cxxflags=\"$CXXFLAGS\"\nsummary_cppflags=\"$CPPFLAGS\"\nsummary_libs=\"$LIBS\"\n\n#\n# Set final flags for build\n#\nCFLAGS=\"$opt_cflags $CFLAGS\"\nCPPFLAGS=\"$opt_cppflags $CPPFLAGS\"\nCXXFLAGS=\"$opt_cxxflags $CXXFLAGS\"\nLDFLAGS=\"$opt_ldflags $LDFLAGS\"\nLIBS=\"$opt_libs $LIBS\"\n\n#\n# Generate all build files\n#\nAC_CONFIG_FILES([\nMakefile\nAC_VERSION\n\ninclude/aircrack-ng/version.h\n\nmanpages/airbase-ng.8\nmanpages/aircrack-ng.1\nmanpages/airdecap-ng.1\nmanpages/airdecloak-ng.1\nmanpages/aireplay-ng.8\nmanpages/airmon-ng.8\nmanpages/airodump-ng.8\nmanpages/airodump-ng-oui-update.8\nmanpages/airolib-ng.1\nmanpages/airserv-ng.8\nmanpages/airtun-ng.8\nmanpages/airventriloquist-ng.8\nmanpages/besside-ng.8\nmanpages/besside-ng-crawler.1\nmanpages/buddy-ng.1\nmanpages/easside-ng.8\nmanpages/ivstools.1\nmanpages/kstats.1\nmanpages/Makefile\nmanpages/makeivs-ng.1\nmanpages/packetforge-ng.1\nmanpages/tkiptun-ng.8\nmanpages/wesside-ng.8\nmanpages/wpaclean.1\n\nscripts/Makefile\nscripts/airdrop-ng/Makefile\nscripts/airdrop-ng/doc/Makefile\nscripts/airgraph-ng/Makefile\nscripts/airgraph-ng/man/Makefile\nscripts/versuck-ng/Makefile\n\ntest/test-env.sh\n])\nAC_OUTPUT\n\n#\n# Output a summary of the build to be performed\n#\ncat <<EOF\n\n${PACKAGE} ${VERSION}\n\n  Build Environment:\n    Build Machine:               ${build}\n    Host Machine:                ${host}\n    Target Machine:              ${target}\n\n    Install Prefix:              ${prefix}\n\n  Compiler Environment:\n    C Compiler:                  ${CC}\n    C++ Compiler:                ${CXX}\n    Python:                      ${PYTHON}\n\n    CFLAGS:                      ${summary_cflags}\n    CXXFLAGS:                    ${summary_cxxflags}\n    CPPFLAGS:                    ${summary_cppflags}\n    LDFLAGS:                     ${LDFLAGS}\n    LIBS:                        ${summary_libs}\n\n    Optimized CFLAGS:            ${opt_cflags}\n    Optimized CXXFLAGS:          ${opt_cxxflags}\n    Optimized CPPFLAGS:          ${opt_cppflags}\n    Optimized LDFLAGS:           ${opt_ldflags}\n    Optimized LIBS:              ${opt_libs}\n\n  Target Environment:\n    OS:                          ${OS}\n    ASAN:                        ${asan}\n    CPU L1 cache-line size:      ${CACHELINE_SIZE}\n    LTO                          ${with_lto:-no}\n\n  Crypto Libraries:\n    Crypto Engine:               ${CRYPTO_TYPE}\n    Gcrypt:                      ${GCRYPT_LIBS}\n    OpenSSL:                     ${OPENSSL_LIBS}\n\n  Required Libraries:\n    Ethtool:                     ${ETHTOOL_FOUND}\n    Libnl:                       ${NLLIBNAME_FOUND}\n\n  Optional Libraries:\n    Airpcap:                     ${AIRPCAP}\n    Cmocka:                      ${CMOCKA_FOUND}\n    DUMA:                        ${DUMA}\n    Hwloc:                       ${HAVE_HWLOC}\n    Jemalloc:                    ${JEMALLOC}\n    Pcap:                        ${PCAP_FOUND}\n    Pcre:                        ${HAVE_PCRE}\n    Pcre2:                       ${HAVE_PCRE2} ${PCRE2_NOTE}\n    Sqlite:                      ${HAVE_SQLITE3}\n    Tcmalloc:                    ${TCMALLOC}\n    Zlib:                        ${HAVE_ZLIB}\n\n  Features:\n    CMAC Support:                ${HAVE_CMAC}\n    Experimental Extra Scripts:  ${EXT_SCRIPTS}\n    Experimental Features:       ${EXPERIMENTAL}\n\nEOF\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker_package_install.sh",
          "type": "blob",
          "size": 13.10546875,
          "content": "#!/bin/sh\n\necho \"[*] Installing packages\"\nSTEP=$1\nif [ -z \"${STEP}\" ]; then\n    echo \"[!] Must specify 'builder' or 'stage2' as arguments\"\n    exit 1\nelif [ \"${STEP}\" = 'builder' ]; then\n    echo \"[*] Builder step\"\nelif [ \"${STEP}\" = 'stage2' ]; then\n    echo \"[*] Stage2 step\"\nfi\n\ninstall_hwloc() {\n    CUR_PWD=$(pwd)\n    cd /tmp || exit\n    wget https://download.open-mpi.org/release/hwloc/v2.10/hwloc-2.10.0.tar.bz2\n    tar -jxf hwloc-2.10.0.tar.bz2\n    rm hwloc-2.10.0.tar.bz2\n    cd hwloc-2.10.0 || exit\n    ./configure\n    make -j \"$(nproc)\"\n    make install\n    cd ..\n    rm -rf hwloc-2.10.0\n    cd \"${CUR_PWD}\" || exit\n}\n\ninstall_iw() {\n    CUR_PWD=$(pwd)\n    cd /tmp || exit\n    wget https://mirrors.edge.kernel.org/pub/software/network/iw/iw-6.9.tar.xz\n    tar -xf iw-6.9.tar.xz\n    rm iw-6.9.tar.xz\n    cd iw-6.9 || exit\n    make\n    chmod +x iw\n    mv iw /usr/local/sbin\n    cd ..\n    rm -rf iw-6.9\n    cd \"${CUR_PWD}\" || exit\n}\n\ninstall_hostapd() {\n    CUR_PWD=$(pwd)\n    cd /tmp || exit\n    wget https://w1.fi/releases/hostapd-2.10.tar.gz\n    tar -zxf hostapd-2.10.tar.gz\n    rm hostapd-2.10.tar.gz\n    cd hostapd-2.10/hostapd || exit 1\n    cp defconfig .config\n    make\n    make install\n    hostapd -v\n    cd ../..\n    rm -rf hostapd-2.10\n    cd \"${CUR_PWD}\" || exit\n}\n\ninstall_cmocka() {\n    CUR_PWD=$(pwd)\n    cd /tmp || exit\n    wget https://cmocka.org/files/1.0/cmocka-1.0.1.tar.xz\n    tar -xf cmocka-1.0.1.tar.xz\n    rm cmocka-1.0.1.tar.xz\n    cd cmocka-1.0.1 || exit\n    mkdir build\n    cd build || exit\n    cmake ..\n    make\n    make install\n    # Otherwise tests will fail because it cannot open the shared library\n    #export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64\n    ldconfig\n    cd ../..\n    rm -rf cmocka-1.0.1\n    cd \"${CUR_PWD}\" || exit\n}\n\n# Check if /etc/os-release exists and print error message\n# For example, NixOS container doesn't have one\nif [ ! -f /etc/os-release ]; then\n    echo \"Unsupported distribution, /etc/os-release does not exist\"\n    exit 1\nfi\n\n# Load OS info\n# shellcheck source=/dev/null\n. /etc/os-release\n\nif [ \"${ID}\" = 'debian' ] || [ \"${ID_LIKE}\" = 'debian' ]; then\n    [ \"${ID_LIKE}\" = 'debian' ] && echo \"[*] Detected debian-based distro: ${ID} (${VERSION_ID})\"\n    [ \"${ID}\" = 'debian' ] && echo \"[*] Detected debian (${VERSION_CODENAME}/${VERSION_ID})\"\n    if [ \"${STEP}\" = 'builder' ]; then\n        LIBTINFO=$(dpkg -l libtinfo5 > /dev/null 2>&1 && echo libtinfo5)\n        [ -z \"${LIBTINFO}\" ] && LIBTINFO=$(dpkg -l libtinfo6 > /dev/null 2>&1 && echo libtinfo6)\n\n        LIBSSL_PKG=$(dpkg -l libssl3 > /dev/null 2>&1 && echo libssl3)\n        [ -z \"${LIBSSL_PKG}\" ] && LIBSSL_PKG=$(dpkg -l libssl1.1 > /dev/null 2>&1 && echo libssl1.1)\n\n        LIBPCRE_PKG=$(apt search libpcre2-posix 2>/dev/null | grep 'libpcre2-posix' | awk -F/ '{print $1}')\n\n        apt-get update \\\n        && export DEBIAN_FRONTEND=noninteractive \\\n        && apt-get -y install --no-install-recommends \\\n            build-essential autoconf automake libtool pkg-config libnl-3-dev libnl-genl-3-dev libssl-dev \\\n            ethtool shtool rfkill zlib1g-dev libpcap-dev libsqlite3-dev libpcre2-dev libhwloc-dev \\\n            libcmocka-dev hostapd wpasupplicant tcpdump screen iw usbutils expect gawk bear \\\n            \"${LIBTINFO}\" git python3-setuptools && \\\n                rm -rf /var/lib/apt/lists/*\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        apt-get update && \\\n        apt-get -y install --no-install-recommends \\\n            libsqlite3-0 \"${LIBSSL_PKG}\" hwloc \"${LIBPCRE_PKG}\" libnl-3-200 libnl-genl-3-200 iw usbutils pciutils \\\n            iproute2 ethtool kmod wget ieee-data python3 python3-graphviz rfkill && \\\n        rm -rf /var/lib/apt/lists/*\n    fi\nelif [ \"${ID}\" = 'arch' ] || [ \"${ID_LIKE}\" = 'arch' ]; then\n    [ \"${ID}\" = 'arch' ] && echo \"[*] Detected Arch Linux\"\n    [ \"${ID_LIKE}\" = 'arch' ] && echo \"[*] Detected Arch-based Linux: ${NAME} (${ID})\"\n    if [ \"${STEP}\" = 'builder' ]; then\n\t    pacman -Sy --noconfirm libgpg-error gnupg gpgme glibc\n        pacman -Sy --noconfirm base-devel libnl openssl ethtool util-linux zlib libpcap sqlite pcre2 hwloc \\\n                                cmocka hostapd wpa_supplicant tcpdump screen iw usbutils pciutils expect git \\\n                                python python-setuptools expat\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        pacman -Sy --noconfirm libgpg-error gnupg gpgme glibc\n        pacman -Sy --noconfirm libnl openssl ethtool util-linux zlib libpcap sqlite pcre2 hwloc iw usbutils \\\n                                pciutils python-graphviz python\n    fi\nelif [ \"${ID}\" = 'alpine' ]; then\n    echo \"[*] Detected alpine (${VERSION_ID})\"\n    if [ \"${STEP}\" = 'builder' ]; then\n        apk add --no-cache \\\n            gcc g++ make autoconf automake libtool libnl3-dev openssl-dev ethtool libpcap-dev cmocka-dev \\\n            hostapd wpa_supplicant tcpdump screen iw pkgconf util-linux sqlite-dev pcre2-dev linux-headers \\\n            zlib-dev pciutils usbutils expect hwloc-dev git python3 gawk bear py3-pip\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        apk add --no-cache \\\n            libnl3 openssl ethtool libpcap util-linux sqlite-dev pcre2 zlib pciutils usbutils hwloc wget \\\n            iproute2 kmod python3 py3-graphviz urfkill iw\n    fi\nelif [ \"${ID}\" = 'fedora' ] || [ \"${ID}\" = 'almalinux' ] || [ \"${ID}\" = 'rocky' ] || [ \"${ID}\" = 'ol' ]; then\n    echo \"[*] Distribution: ${NAME} (${VERSION_ID})\"\n    LIBPCAP=libpcap-devel\n    CMOCKA=libcmocka-devel\n    DNF_BIN=dnf\n    type dnf5 >/dev/null 2>&1\n    # shellcheck disable=SC2181\n    [ $? -eq 0 ] && DNF_BIN=dnf5\n    echo \"DNF: ${DNF_BIN}\"\n    ${DNF_BIN} distro-sync -y --refresh\n    if [ \"${STEP}\" = 'builder' ]; then\n        if [ \"${ID}\" = 'almalinux' ] || [ \"${ID}\" = 'rocky' ]; then\n            echo \"[*] Install EPEL and enabling CRB\"\n            ${DNF_BIN} install epel-release dnf-plugins-core -y\n            ${DNF_BIN} config-manager --set-enabled crb\n            ${DNF_BIN} distro-sync -y --refresh\n        elif [ \"${ID}\" = 'ol' ]; then\n            echo \"[*] Install EPEL\"\n            ${DNF_BIN} install epel-release dnf-plugins-core -y\n            ${DNF_BIN} install xz cmake gcc wget -y\n            LIBPCAP=libpcap\n            # We're installing cmocka manually, not present in repos\n            CMOCKA=\"\"\n            ${DNF_BIN} distro-sync -y --refresh\n\n            export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64\n            install_cmocka\n            cd / || exit\n        fi\n\n        ${DNF_BIN} install -y libtool pkgconfig sqlite-devel autoconf automake openssl-devel ${LIBPCAP} \\\n                              pcre2-devel rfkill libnl3-devel gcc gcc-c++ ethtool hwloc-devel ${CMOCKA} \\\n                              make file expect hostapd wpa_supplicant iw usbutils tcpdump screen zlib-devel \\\n                              expect python3-pip python3-setuptools git\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        GRAPHVIZ=python3-graphviz\n        [ \"${ID}\" != 'fedora' ] && GRAPHVIZ=graphviz-python3\n        ${DNF_BIN} install -y libnl3 openssl-libs zlib libpcap sqlite-libs pcre2 hwloc iw ethtool pciutils \\\n                              usbutils expect python3 ${GRAPHVIZ} iw util-linux ethtool kmod\n    fi\nelif [ \"${ID}\" = 'opensuse-leap' ]; then\n    echo \"[*] Detected openSUSE Leap\"\n    if [ \"${STEP}\" = 'builder' ]; then\n        zypper install -y autoconf automake libtool pkg-config libnl3-devel libopenssl-1_1-devel zlib-devel \\\n                        libpcap-devel sqlite3-devel pcre2-devel hwloc-devel libcmocka-devel hostapd screen \\\n                        wpa_supplicant tcpdump iw gcc-c++ gcc ethtool pciutils usbutils expect python3-pip \\\n                        python3-setuptools git\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        zypper install -y libnl3-200 libopenssl1_1 zlib libpcap sqlite3 libpcre2-8-0 hwloc iw ethtool pciutils \\\n                        usbutils expect python3 python3-graphviz iw util-linux ethtool kmod\n    fi\nelif [ \"${ID}\" = 'gentoo' ]; then\n    echo \"[*] Detected Gentoo\"\n    export EMERGE_DEFAULT_OPTS=\"--binpkg-respect-use=y --getbinpkg=y\"\n    cat <<EOF >/etc/portage/binrepos.conf/osuosl.conf\n[binhost]\npriority = 9999\nsync-uri = https://gentoo.osuosl.org/experimental/amd64/binpkg/default/linux/17.1/x86-64/\nEOF\n    # shellcheck disable=SC2016\n    echo 'FEATURES=\"${FEATURES} -ipc-sandbox -network-sandbox -pid-sandbox\"' >> /etc/portage/make.conf\n    if [ ! -d \"/etc/portage/gnupg\" ]; then\n        getuto\n    fi\n    emerge-webrsync\n\n    if [ \"${STEP}\" = 'builder' ]; then\n        emerge app-portage/elt-patches dev-db/sqlite dev-lang/python dev-libs/libbsd dev-libs/libnl dev-libs/libpcre2 \\\n                dev-libs/openssl dev-vcs/git net-libs/libpcap net-wireless/iw net-wireless/lorcon sys-apps/hwloc \\\n                net-wireless/wireless-tools sys-apps/ethtool sys-apps/hwdata sys-apps/pciutils sys-apps/usbutils \\\n                sys-devel/autoconf sys-devel/automake sys-devel/gnuconfig sys-devel/libtool sys-libs/zlib \\\n                --jobs=\"$(nproc)\" --quiet\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        emerge dev-db/sqlite dev-lang/python dev-libs/libbsd dev-libs/libnl dev-libs/libpcre2 dev-libs/openssl \\\n                net-libs/libpcap net-wireless/iw net-wireless/lorcon net-wireless/wireless-tools sys-apps/ethtool \\\n                sys-apps/hwdata sys-apps/hwloc sys-apps/pciutils sys-apps/usbutils sys-libs/zlib app-portage/gentoolkit \\\n                --jobs=\"$(nproc)\"\n        eclean --deep distfiles && eclean --deep packages\n        emerge --depclean app-portage/gentoolkit\n        rm -fr /var/db/repos/gentoo /etc/portage/binrepos.conf/osuosl.conf\n    fi\nelif [ \"${ID}\" = 'clear-linux-os' ]; then\n    echo \"[*] Detected Clear Linux (${VERSION_ID})\"\n    if [ \"${STEP}\" = 'builder' ]; then\n        # Break swupd in multiple steps to avoid 'bundle too large by xxxM'\n        # Build hostapd\n        swupd bundle-add --skip-diskspace-check wget\n        swupd bundle-add --skip-diskspace-check c-basic\n        swupd bundle-add --skip-diskspace-check devpkg-openssl\n        swupd bundle-add --skip-diskspace-check devpkg-libnl\n        install_hostapd\n\n        # Install the rest of the packages\n        swupd bundle-add --skip-diskspace-check devpkg-libgcrypt\n        swupd bundle-add --skip-diskspace-check devpkg-hwloc\n        swupd bundle-add --skip-diskspace-check devpkg-libpcap\n        swupd bundle-add --skip-diskspace-check devpkg-pcre2\n        swupd bundle-add --skip-diskspace-check devpkg-sqlite-autoconf\n        swupd bundle-add --skip-diskspace-check git\n        swupd bundle-add --skip-diskspace-check ethtool\n        swupd bundle-add --skip-diskspace-check network-basic\n        swupd bundle-add --skip-diskspace-check software-testing\n        swupd bundle-add --skip-diskspace-check sysadmin-basic\n        swupd bundle-add --skip-diskspace-check wpa_supplicant\n        swupd bundle-add --skip-diskspace-check os-testsuite\n                         \n    elif [ \"${STEP}\" = 'stage2' ]; then\n        # Break it in multiple steps to avoid 'bundle too large by xxxM'\n        swupd bundle-add --skip-diskspace-check libnl\n        swupd bundle-add --skip-diskspace-check openssl\n        swupd bundle-add --skip-diskspace-check devpkg-zlib\n        swupd bundle-add --skip-diskspace-check devpkg-libpcap\n        swupd bundle-add --skip-diskspace-check sqlite\n        swupd bundle-add --skip-diskspace-check devpkg-pcre2\n        swupd bundle-add --skip-diskspace-check hwloc\n        swupd bundle-add --skip-diskspace-check ethtool\n        swupd bundle-add --skip-diskspace-check network-basic\n        swupd bundle-add --skip-diskspace-check sysadmin-basic\n        swupd bundle-add --skip-diskspace-check python-extras\n    fi\nelif [ \"${ID}\" = 'slackware' ]; then\n    echo \"[*] Detected Slackware Linux (${VERSION_ID})\"\n    slackpkg update\n    if [ \"${STEP}\" = 'builder' ]; then\n        slackpkg install ca-certificates perl dcron gcc g++ make guile gc wget openssl libnl3 \\\n                         binutils glibc flex kernel-headers pkg-config cmake libarchive lz4 libxml2\n        update-ca-certificates -f\n        # Otherwise tests will fail because it cannot open the shared library\n        export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64\n        install_hostapd\n        install_cmocka\n        install_hwloc\n\n        slackpkg install autoconf automake libtool ethtool libmnl libpcap tcpdump libcap-ng dbus pciutils usbutils expect tcl \\\n            screen util-linux sqlite icu4c libedit pcre2 zlib git python3 gawk python-pip wpa_supplicant expat m4\n        pip install setuptools\n    elif [ \"${STEP}\" = 'stage2' ]; then\n        slackpkg install ca-certificates perl dcron\n        slackpkg install util-linux pciutils usbutils wget iproute2 kmod python3 util-linux python-pip expat ethtool \\\n                         libmnl glibc libnl3 sqlite icu4c\n        slackpkg install make guile gc gcc wget kernel-headers pkg-config  glibc binutils\n        update-ca-certificates -f\n        pip install graphviz\n        install_iw\n        slackpkg remove perl dcron make guile gc gcc gcc-brig gcc-g++ gcc-gdc gcc-gfortran gcc-gnat gcc-go gcc-objc \\\n                        kernel-headers pkg-config binutils\n        rm -f /var/lib/slackpkg/*\n    fi\nelse\n    echo \"[!] Unsupported distro: ${ID} - PR welcome\"\n    exit 1\nfi\n\n# shellcheck disable=SC2181\nif [ $? -ne 0 ]; then\n    echo '[!] ERROR, aborting'\n    exit 1\nfi\n\nexit 0\n"
        },
        {
          "name": "evalrev",
          "type": "blob",
          "size": 1.76171875,
          "content": "#!/bin/sh\n\nset -euf\n\nDIR=${1:-}\nCMD=${2:-}\n\nSCM=\"\"\n\nif [ x$DIR = \"x\" ]\nthen\n\tDIR=\".\"\nfi\n\nif test -d \"${DIR}/.git\"; then\n    #\n    # Locate the closest annotated tag\n    #\n    REVISION=\"$(git describe --abbrev=0 --tags 2>/dev/null || echo unknown)\"\n\n    #\n    # Determine if we are a development branch, if so then append the\n    # short SHA1.\n    #\n    EXACTLY=\"$(git describe --abbrev=0 --tags --exact-match 2>/dev/null || echo)\"\n\n    if test -z \"$EXACTLY\"; then\n        REVISION=\"${REVISION}_rev-$(git rev-parse --verify --short HEAD)\"\n        SCM=\"_rev-$(git rev-parse --verify --short HEAD)\"\n    fi\nelif test -d \"${DIR}/.svn\"; then\n    REVISION=\"_r$(svnversion $DIR 2> /dev/null | sed 's/[^0-9]*//g')\"\n    SCM=\"_r$(svnversion $DIR 2> /dev/null | sed 's/[^0-9]*//g')\"\n\n    if test x$REVISION = \"x\"; then\n        REVISION=\"_r$(svn info $DIR 2> /dev/null | grep -i revision | sed 's/[^0-9]*//g')\"\n        SCM=\"_r$(svn info $DIR 2> /dev/null | grep -i revision | sed 's/[^0-9]*//g')\"\n    fi\n\n    if test x$REVISION = \"x\"; then\n        if test -f \"${DIR}/.svn/entries\"; then\n            REVISION=\"_r$(cat ${DIR}/.svn/entries | grep -i revision | head -n 1 | sed 's/[^0-9]*//g')\"\n            SCM=\"_r$(cat ${DIR}/.svn/entries | grep -i revision | head -n 1 | sed 's/[^0-9]*//g')\"\n        fi\n    fi\n\n    if test x$REVISION = \"x\"; then\n        REVISION=\"_r1\"\n        SCM=\"_r1\"\n    fi\nelif [ -n \"${GITHUB_SHA}\" ]; then\n    SHORT_SHA_REVISION=\"$(echo ${GITHUB_SHA} | cut -b 1-8)\"\n\n    VERSION=$(cat ${DIR}/AC_VERSION 2>/dev/null)\n    REVISION=\"${VERSION}_rev-${SHORT_SHA_REVISION}\"\n    SCM=\"_rev-${SHORT_SHA_REVISION}\"\nelse\n    REVISION=\"$(cat ${DIR}/AC_VERSION 2>/dev/null)\"\nfi\n\nif test \"x$CMD\" = \"xscm\"; then\n    echo $SCM\nelif test \"x$CMD\" = \"xquoted\"; then\n    echo \\\"$REVISION\\\"\nelse\n    echo $REVISION\nfi\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "manpages",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}