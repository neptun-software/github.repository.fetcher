{
  "metadata": {
    "timestamp": 1736710259866,
    "page": 16,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/xLua",
      "stars": 9473,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7255859375,
          "content": ".vs\r\n/Library\r\n/ProjectSettings\r\n/Temp\r\n/Assets/XLua/Gen\r\n/Assets/XLua/Gen.meta\r\nAssets/StreamingAssets.meta\r\nAssets/StreamingAssets/\r\nAssets/xLuaTest.meta\r\nAssets/xLuaTest/\r\n/*.csproj\r\n/*.sln\r\n/build/build*\r\nUnityVS\r\n/Assets/UnityVS.meta\r\n.DS_Store\r\n*.o\r\n/build/*/*.a\r\nluajit\r\nbuildvm\r\nminilua\r\nlibluajit.so\r\nlj_vm.S\r\nbuild/luajit-2.1.0b2/src/host/buildvm_arch.h\r\nbuild/luajit-2.1.0b2/src/jit/vmdef.lua\r\nbuild/luajit-2.1.0b2/src/lj_bcdef.h\r\nbuild/luajit-2.1.0b2/src/lj_ffdef.h\r\nbuild/luajit-2.1.0b2/src/lj_folddef.h\r\nbuild/luajit-2.1.0b2/src/lj_libdef.h\r\nbuild/luajit-2.1.0b2/src/lj_recdef.h\r\nbuild/luajit-2.1.0b2/src/lua51.lib\r\nbuild/luajit-2.1.0b2/src/luajit.exe\r\nbuild/luajit-2.1.0b2/src/luajit.exp\r\nbuild/luajit-2.1.0b2/src/luajit.lib\r\n\r\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.8076171875,
          "content": "language: csharp\r\nscript:\r\n  - cd build\r\n  - chmod +x *.sh\r\n  - ./make_linux64_lua53.sh\r\n  - ./make_linux64_luajit.sh\r\n  - cd ../General\r\n  - msbuild /property:Configuration=Release vs2013/XLua.sln\r\n  - cp ../build/build_linux64/libxlua.so Bin/\r\n  - cp ../build/build_linux64/libxlua.so Tools/\r\n  - mono Bin/XLuaUnitTest.exe\r\n  - mono Tools/XLuaGenerate.exe Bin/XLuaTest.exe\r\n  - mv Gen Gen1\r\n  - mono Tools/XLuaGenerate.exe Bin/XLuaUnitTest.exe\r\n  - mv Gen Gen2\r\n  - msbuild /property:Configuration=Release vs2013/XLuaGenTest.sln\r\n  - mono Bin/XLuaUnitTestGenCode.exe\r\n  - cp ../build/build_linux64_lj/libxlua.so Bin/\r\n  - mono Bin/XLuaUnitTest.exe\r\n  - mono Bin/XLuaUnitTestGenCode.exe\r\n#  - pdb2mdb Bin/XLuaTestGenCode.exe\r\n#  - mono Tools/XLuaHotfixInject.exe Bin/XLuaTestGenCode.exe ./\r\n#  - mono Bin/XLuaTestGenCode.exe\r\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "General",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 4.1357421875,
          "content": "Tencent is pleased to support the open source community by making xLua available.  \r\nCopyright (C) 2016 THL A29 Limited, a Tencent company.  All rights reserved.\r\nIf you have downloaded a copy of the xLua binary from Tencent, please note that the xLua binary is licensed under the MIT License.\r\nIf you have downloaded a copy of the xLua source code from Tencent, please note that xLua source code is licensed under the MIT License, except for the third-party components listed below which are subject to different license terms.  Your integration of xLua into your own projects may require compliance with the MIT License, as well as the other licenses applicable to the third-party components included within xLua.\r\nA copy of the MIT License is included in this file.\r\nOther dependencies and licenses:\r\n\r\nOpen Source Software Licensed under the BSD 3-Clause License:\r\n--------------------------------------------------------------------\r\n1. android-cmake\r\nCopyright (c) 2010-2011, Ethan Rublee\r\nCopyright (c) 2011-2014, Andrey Kamaev\r\nAll rights reserved.\r\nCopyright (c) 2014, Pavel Rojtberg\r\nAll rights reserved.\r\n\r\n\r\nTerms of the BSD 3-Clause License:\r\n--------------------------------------------------------------------\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n?Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n?Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n?Neither the name of [copyright holder] nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nOpen Source Software Licensed Under the MIT License:\r\n--------------------------------------------------------------------\r\n1. Lua  5.1.5 & 5.3.3 & 5.3.4\r\nCopyright (C) 1994-2016 Lua.org, PUC-Rio.\r\n\r\n2. LuaJIT  2.1.0beta2 \r\nCopyright (C) 2005-2016 Mike Pall. All rights reserved.\r\n\r\n3. luasocket  3.0-rc1\r\nCopyright ? 1999-2013 Diego Nehab. All rights reserved.\r\n\r\n4. Cecil 0.9.6\r\nCopyright (c) 2008 - 2015 Jb Evain\r\nCopyright (c) 2008 - 2011 Novell, Inc.\r\n\r\nTerms of the MIT License:\r\n--------------------------------------------------------------------\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.841796875,
          "content": "![](Assets/XLua/Doc/xLua.png)\r\n\r\n[![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/Tencent/xLua/blob/master/LICENSE.TXT)\r\n[![release](https://img.shields.io/badge/release-v2.1.15-blue.svg)](https://github.com/Tencent/xLua/releases)\r\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-blue.svg)](https://github.com/Tencent/xLua/pulls)\r\n[![Build status](https://github.com/Tencent/xLua/actions/workflows/build.yml/badge.svg)](https://github.com/Tencent/xLua/actions/workflows/build.yml)\r\n\r\n[(English Documents Available)](README_EN.md)\r\n\r\n## C# 下 Lua 编程支持\r\n\r\nxLua 为 Unity、.Net、Mono 等 C# 环境增加 Lua 脚本编程的能力，借助 xLua，这些 Lua 代码可以方便的和 C# 相互调用。\r\n\r\n<br/>\r\n\r\n## xLua 的突破\r\n\r\nxLua 在功能、性能、易用性都有不少突破，这几方面分别最具代表性的是：\r\n\r\n* 可以运行时把 C# 实现（方法，操作符，属性，事件等等）替换成 Lua 实现；\r\n* 出色的 GC 优化，自定义 struct，枚举在 Lua 和 C# 间传递无 C# GC Alloc；\r\n* 编辑器下无需生成代码，开发更轻量；\r\n\r\n更详细的特性、平台支持介绍请参考 [xLua 文档: 功能特性](Assets/XLua/Doc/features.md)。\r\n\r\n<br/>\r\n\r\n## 安装\r\n\r\nxLua 可以直接简单的安装在 Unity 项目中.\r\n\r\n1. 从 [Releases](https://github.com/Tencent/xLua/releases) 中下载发行版, 或直接下载本仓库代码.\r\n2. 打开下载下来的源码压缩包, 你会看到一个 Assets 目录, 这目录就对应 Unity 工程的 Assets 目录，保持这目录结构, 将其内容置入 Unity 项目即可.\r\n\r\n> 注意, Assets/Examples 目录下为示例代码, 你应该在生产环境下删去他们.\r\n\r\n如果希望安装到其它目录，请看 [FAQ](Assets/XLua/Doc/faq.md) 相关介绍。\r\n\r\n<br/>\r\n\r\n## 文档\r\n\r\n* (必看) [XLua 教程](Assets/XLua/Doc/XLua教程.md)：教程，其配套代码[这里](Assets/XLua/Tutorial/)。\r\n* (必看) [XLua 的配置](Assets/XLua/Doc/configure.md)：介绍如何配置xLua。\r\n* [常见问题解答](Assets/XLua/Doc/faq.md)：常见问题都总结在这里，初使用大多数问题都可以在这里找到答案。\r\n* [热补丁操作指南](Assets/XLua/Doc/hotfix.md)：介绍如何使用热补丁特性。\r\n* [XLua增加删除第三方lua库](Assets/XLua/Doc/XLua增加删除第三方lua库.md)：如何增删第三方lua扩展库。\r\n* [XLua API](Assets/XLua/Doc/XLua_API.md)：API文档。\r\n* [生成引擎二次开发指南](Assets/XLua/Doc/custom_generate.md)：介绍如何做生成引擎的二次开发。\r\n\r\n<br/>\r\n\r\n## 快速入门\r\n\r\n一个完整的例子仅需3行代码：\r\n\r\n安装好xLua，建一个MonoBehaviour拖到场景，在Start加入如下代码：\r\n\r\n```csharp\r\nXLua.LuaEnv luaEnv = new XLua.LuaEnv();\r\nluaEnv.DoString(\"CS.UnityEngine.Debug.Log('hello world')\");\r\nluaEnv.Dispose();\r\n```\r\n\r\n1. DoString 参数为 string，可输入任意合法的 Lua 代码，本示例在 Lua 里调用 C# 的 UnityEngine.Debug.Log 打印了个日志。\r\n2. 一个 LuaEnv 实例对应 Lua 虚拟机，出于开销的考虑，建议全局唯一。\r\n\r\nC#主动调用 Lua 也很简单，比如要调用 Lua 的系统函数，推荐方式是：\r\n\r\n* 声明\r\n\r\n  ```csharp\r\n  [XLua.CSharpCallLua]\r\n  public delegate double LuaMax(double a, double b);\r\n  ```\r\n\r\n* 绑定\r\n\r\n  ```csharp\r\n  var max = luaEnv.Global.GetInPath<LuaMax>(\"math.max\");\r\n  ```\r\n\r\n* 调用\r\n\r\n  ```csharp\r\n  Debug.Log(\"max:\" + max(32, 12));\r\n  ```\r\n\r\n注意, 请不要重复调用 `luaEnv.Global.GetInPath<LuaMax>`, 这没有任何必要.\r\n\r\n<br/>\r\n\r\n## 热补丁\r\n\r\n除了使用 Lua 在 Unity 进行脚本编写, 你也可以使用 Lua 实现 \"热补丁\". xLua 提供了使用 Lua 逻辑替换 C# 方法逻辑的方案.\r\n\r\n* 侵入性小，老项目原有代码不做任何调整就可使用。\r\n* 运行时影响小，不打补丁基本和原有程序一样。\r\n* 出问题了可以用 Lua 来打补丁，这时才会走到 Lua 代码逻辑；\r\n\r\n参考使用指南: [xLua 文档: 热补丁](Assets/XLua/Doc/hotfix.md)\r\n\r\n<br/>\r\n\r\n## 更多示例\r\n\r\n* [01_Helloworld](Assets/XLua/Examples/01_Helloworld/): 快速入门的例子。\r\n* [02_U3DScripting](Assets/XLua/Examples/02_U3DScripting/): 展示怎么用 Lua 来写 MonoBehaviour。\r\n* [03_UIEvent](Assets/XLua/Examples/03_UIEvent/): 展示怎么用 Lua 来写 UI 逻辑。\r\n* [04_LuaObjectOrented](Assets/XLua/Examples/04_LuaObjectOrented/): 展示 Lua 面向对象和 C# 的配合。\r\n* [05_NoGc](Assets/XLua/Examples/05_NoGc/): 展示怎么去避免值类型的GC。\r\n* [06_Coroutine](Assets/XLua/Examples/06_Coroutine/): 展示 Lua 协程怎么和 Unity 协程相配合。\r\n* [07_AsyncTest](Assets/XLua/Examples/07_AsyncTest/): 展示怎么用 Lua 协程来把异步逻辑同步化。\r\n* [08_Hotfix](Assets/XLua/Examples/08_Hotfix/): 热补丁的示例（需要开启热补丁特性，如何开启请参考 [xLua 文档: 热补丁](Assets/XLua/Doc/hotfix.md)）。\r\n* [09_GenericMethod](Assets/XLua/Examples/09_GenericMethod/): 泛化函数支持的演示。\r\n* [10_SignatureLoader](Assets/XLua/Examples/10_SignatureLoader/): 展示如何读取经数字签名的lua脚本，参见[数字签名](Assets/XLua/Doc/signature.md)的文档介绍。\r\n* [11_RawObject](Assets/XLua/Examples/11_RawObject/): 当 C# 参数是object时，如何把一个lua number指定以boxing后的int传递过去。\r\n* [12_ReImplementInLua](Assets/XLua/Examples/12_ReImplementInLua/): 展示如何将复杂值类型改为 Lua 实现。\r\n* [14_HotfixAsyncAwait](Assets/XLua/Examples/14_HotfixAsyncAwait/): 展示如何将异步函数和await关键字改为 Lua 实现。\r\n\r\n<br/>\r\n\r\n## 技术支持\r\n\r\n一群：612705778 (已满)\r\n\r\n二群：703073338 (已满)\r\n\r\n三群：811246782\r\n\r\n入群的问题：有问题该先从哪找答案\r\n\r\n回答：FAQ\r\n\r\n平时也要谨记这答案，90%以上问题都可以在[FAQ](Assets/XLua/Doc/faq.md)里头找到答案。这些问题就别在群刷屏了。\r\n\r\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 5.6279296875,
          "content": "![](Assets/XLua/Doc/xLua.png)\r\n\r\n[![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/Tencent/xLua/blob/master/LICENSE.TXT)\r\n[![release](https://img.shields.io/badge/release-v2.1.15-blue.svg)](https://github.com/Tencent/xLua/releases)\r\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-blue.svg)](https://github.com/Tencent/xLua/pulls)\r\n[![Build status](https://travis-ci.org/Tencent/xLua.svg?branch=master)](https://travis-ci.org/Tencent/xLua)\r\n\r\n## Lua programming solution for C#\r\n\r\nxLua adds Lua scripting capability to Unity, .Net, Mono, and other C# environments. With xLua, Lua code and C# code can easily call each other.\r\n\r\n## xLua's superior features\r\n\r\nxLua has many breakthroughs in function, performance, and ease of use. The most significant features are:\r\n\r\n* You can use C# implementations (methods, operators, properties, events, etc...) in Lua.\r\n* Outstanding GC optimization, customized struct, no C# gc alloc when passing the enumerated objects between C# and Lua;\r\n* Lightweight development with no needs to generate code in editor mode;\r\n\r\n## Installation\r\n\r\nUnpack the ZIP package and you will see an Assets directory, which corresponds to the Unity project's Assets directory. Keep the directory structure in your Unity project.\r\n\r\nIf you want to install it to another directory, please see the [FAQs](Assets/XLua/Doc/Faq_EN.md).\r\n\r\n## Documents\r\n\r\n* [FAQs](Assets/XLua/Doc/Faq_EN.md): Frequently asked questions are summarized here. You can find answers to questions for beginners.\r\n* (Must-read) [XLua Tutorial](Assets/XLua/Doc/XLua_Tutorial_EN.md): This is a tutorial. The supporting code can be found [here](Assets/XLua/Tutorial/).\r\n* (Must-read) [XLua Configuration](Assets/XLua/Doc/Configure_EN.md): Descriptions on how to configure xLua.\r\n* [Hotfix Operation Guide](Assets/XLua/Doc/Hotfix_EN.md): Description on how to use the hotfix feature.\r\n* [Add/remove third-party Lua Libraries on xLua](Assets/XLua/Doc/Add_Remove_Lua_Lib.md): Descriptions on how to add or remove third-party Lua extension libraries.\r\n* [xLua APIs](Assets/XLua/Doc/XLua_API_EN.md): API documentation\r\n* [Secondary Development of the Build Engine](Assets/XLua/Doc/Custom_Generate_EN.md): Descriptions on how to do secondary development of the build engine.\r\n\r\n## Quick Start\r\n\r\nA complete example requires only 3 lines of code:\r\n\r\nInstall xLua, create a MonoBehaviour drag scenario, add the following code to Start:\r\n\r\n```csharp\r\nXLua.LuaEnv luaenv = new XLua.LuaEnv();\r\nluaenv.DoString(\"CS.UnityEngine.Debug.Log('hello world')\");\r\nluaenv.Dispose();\r\n```\r\n\r\n1. The DoString parameter is a string, and you can enter any allowable Lua code. In this example, Lua calls C#’s UnityEngine.Debug.Log to print a log.\r\n\r\n2. A LuaEnv instance corresponds to a Lua virtual machine. Due to overhead, it is recommended that the Lua virtual machine be globally unique.\r\n\r\nIt is simple that C# actively calls Lua. For example, the recommended method to call Lua's system function is:\r\n\r\n* Declare\r\n\r\n```csharp\r\n[XLua.CSharpCallLua]\r\npublic delegate double LuaMax(double a, double b);\r\n```\r\n\r\n* Bind\r\n\r\n```csharp\r\nvar max = luaenv.Global.GetInPath<LuaMax>(\"math.max\");\r\n```\r\n\r\n* Call\r\n\r\n```csharp\r\nDebug.Log(\"max:\" + max(32, 12));\r\n```\r\n\r\nIt is recommended that you bind once and reuse it. If code is generated, no gc alloc is generated when calling max.\r\n\r\n## Hotfix\r\n\r\n* This has lower intrusiveness, and it can be used without any modification of the original code of the old project.\r\n* This has little impact on the runtime, which is almost the same as the original program which hotfix is not used.\r\n* If you have problems, you can also use Lua to patch. Then the Lua code logic is involved.\r\n\r\n[Here](Assets/XLua/Doc/Hotfix_EN.md) is the usage guide:\r\n\r\n## More Examples\r\n\r\n* [01_Helloworld](Assets/XLua/Examples/01_Helloworld/): Quick Start Examples\r\n* [02_U3DScripting](Assets/XLua/Examples/02_U3DScripting/): This example shows how to use Mono to write MonoBehaviour.\r\n* [03_UIEvent](Assets/XLua/Examples/03_UIEvent/): This example shows how to use Lua to write UI logic.\r\n* [04_LuaObjectOrented](Assets/XLua/Examples/04_LuaObjectOrented/): This example shows the cooperation between Lua's object-oriented programming and C#.\r\n* [05_NoGc](Assets/XLua/Examples/05_NoGc/): This example shows how to avoid the value type GC.\r\n* [06_Coroutine](Assets/XLua/Examples/06_Coroutine/): This example shows how Lua coroutines work with Unity coroutines.\r\n* [07_AsyncTest](Assets/XLua/Examples/07_AsyncTest/): This example shows how to use Lua coroutines to synchronize asynchronous logic.\r\n* [08_Hotfix](Assets/XLua/Examples/08_Hotfix/): These are Hotfix examples (Please enable hotfix feature. See the [Guide](Assets/XLua/Doc/Hotfix_EN.md) for details).\r\n* [09_GenericMethod](Assets/XLua/Examples/09_GenericMethod/): This is a generic function support demo.\r\n* [10_SignatureLoader](Assets/XLua/Examples/10_SignatureLoader/): This example shows how to read the Lua script with a digital signature. See the [Digital Signature](Assets/XLua/Doc/signature.md) document for details.\r\n* [11_RawObject](Assets/XLua/Examples/11_RawObject/): This example shows how to specify transferring a Lua number in the int after boxing when the C# parameter is an object.\r\n* [12_ReImplementInLua](Assets/XLua/Examples/12_ReImplementInLua/): This shows how to change complex value types to Lua implementations.\r\n* [14_HotfixAsyncAwait](Assets/XLua/Examples/14_HotfixAsyncAwait/): This shows how to change asynchronous functions and await keyword to Lua implementation.\r\n\r\n## Technical support\r\n\r\nQQ Group 1: 612705778 (may be full)\r\n\r\nQQ Group 2: 703073338\r\n\r\nQQ Group 3: 811246782\r\n\r\nCheck answers: If you encounter a problem, please read the FAQs first.\r\n\r\n"
        },
        {
          "name": "Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "WebGLPlugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}