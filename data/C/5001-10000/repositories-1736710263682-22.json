{
  "metadata": {
    "timestamp": 1736710263682,
    "page": 22,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "happyfish100/fastdfs",
      "stars": 9084,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6103515625,
          "content": "# Makefile.in\nstorage/Makefile\ntracker/Makefile\nclient/test/Makefile\nclient/Makefile\n\n# client/fdfs_link_library.sh.in \nclient/fdfs_link_library.sh\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dSYM\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\nclient/fdfs_append_file\nclient/fdfs_appender_test\nclient/fdfs_appender_test1\nclient/fdfs_crc32\nclient/fdfs_delete_file\nclient/fdfs_download_file\nclient/fdfs_file_info\nclient/fdfs_monitor\nclient/fdfs_test\nclient/fdfs_test1\nclient/fdfs_upload_appender\nclient/fdfs_upload_file\nclient/fdfs_regenerate_filename\nclient/test/fdfs_monitor\nclient/test/fdfs_test\nclient/test/fdfs_test1\nstorage/fdfs_storaged\ntracker/fdfs_trackerd\ntest/combine_result\ntest/100M\ntest/10M\ntest/1M\ntest/200K\ntest/50K\ntest/5K\ntest/gen_files\ntest/test_delete\ntest/test_download\ntest/test_upload\ntest/upload/\ntest/download/\ntest/delete/\n\n# other\nphp_client/.deps\nphp_client/.libs/\n\nphp_client/Makefile\nphp_client/Makefile.fragments\nphp_client/Makefile.global\nphp_client/Makefile.objects\nphp_client/acinclude.m4\nphp_client/aclocal.m4\nphp_client/autom4te.cache/\nphp_client/build/\nphp_client/config.guess\nphp_client/config.h\nphp_client/config.h.in\nphp_client/config.log\nphp_client/config.nice\nphp_client/config.status\nphp_client/config.sub\nphp_client/configure\nphp_client/configure.ac\nphp_client/install-sh\nphp_client/libtool\nphp_client/ltmain.sh\nphp_client/missing\nphp_client/mkinstalldirs\nphp_client/run-tests.php\n\n# fastdfs runtime paths\ndata/\nlogs/\n\n# others\n*.pid\n*.swp\n*.swo\n"
        },
        {
          "name": "COPYING-3_0.txt",
          "type": "blob",
          "size": 34.2451171875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n \n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  \n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n"
        },
        {
          "name": "HISTORY",
          "type": "blob",
          "size": 37.89453125,
          "content": "\nVersion 6.12.2  2024-09-16\n * use libfastcommon V1.75 and libserverframe 1.2.5\n\nVersion 6.12.1  2024-03-06\n * adapt to libserverframe 1.2.3\n * bugfixed: notify_leader_changed support IPv6 correctly\n * log square quoted IPv6 address\n\nVersion 6.12.0  2024-02-12\n * bugfixed: parse ip and port use parseAddress instead of splitEx\n * bugfixed: fdfs_server_info_to_string support IPv6 correctly\n * check filename duplicate by hashtable instead of file system access\n\nVersion 6.11.0  2023-12-10\n * support IPv6, config item: address_family in tracker.conf and storage.conf\n   use libfastcommon V1.71 and libserverframe 1.2.1\n * storage.conf can specify the storage server ID for NAT network\n\nVersion 6.10.0  2023-09-07\n * use libfastcommon V1.70 and libserverframe 1.2.0\n\nVersion 6.9.5  2023-06-05\n * fix possible out-of-bounds issues with array access\n * fix realloc mistakes to avoid memory leaks\n * add ExecStartPost=/bin/sleep 0.1 to systemd service files\n * fdht_client/fdht_func.c: fixed compile error\n\nVersion 6.9.4  2023-02-15\n * use epoll edge trigger to resolve github issues #608\n * bugfixed: report connections' current_count and max_count correctly\n\nVersion 6.9.3  2022-12-24\n * use prctl to set pthread name under Linux\n\nVersion 6.9.2  2022-11-28\n * space size such as total_mb and free_mb use int64_t instead of int\n * bugfixed: log connection ip_addr and port correctly\n * output port with format %u instead %d\n\nVersion 6.9.1  2022-11-25\n * bugfixed: clear task extra data correctly when the connection broken\n\nVersion 6.09  2022-09-14\n * use libfastcommon V1.60 and libserverframe 1.1.19\n * use atomic counter instead of mutex lock\n\nVersion 6.08  2022-06-21\n * use libfastcommon V1.56\n   NOTE: you MUST upgrade libfastcommon to V1.56 or later\n\nVersion 6.07  2020-12-31\n * use libfastcommon V1.44\n   NOTE: you MUST upgrade libfastcommon to V1.44 or later\n * correct spell iovent to ioevent follows libfastcommon\n\nVersion 6.06  2019-12-30\n * bugfixed: fdfs_storaged can't quit normally\n * bugfixed: init/memset return ip address to ascii 0 for Java SDK\n\nVersion 6.05  2019-12-25\n * fdfs_trackerd and fdfs_storaged print the server version in usage.\n   you can execute fdfs_trackerd or fdfs_storaged without parameters\n   to show the server version\n\n * trunk server support compress the trunk binlog periodically,\n   the config items in tracker.conf: trunk_compress_binlog_interval\n   and trunk_compress_binlog_time_base\n\n * trunk binlog compression support transaction\n\n * support backup binlog file when truncate trunk binlog,\n   the config item in tracker.conf: trunk_binlog_max_backups\n\n * support alignment size for trunk space allocation\n   the config item in tracker.conf: trunk_alloc_alignment_size \n\n * support merge free trunk spaces\n   the config item in tracker.conf: trunk_free_space_merge\n\n * support delete unused trunk files\n   the config item in tracker.conf: delete_unused_trunk_files\n\n * fdfs_monitor.c: do NOT call getHostnameByIp\n\n  NOTE: you MUST upgrade libfastcommon to V1.43 or later\n\n\nVersion 6.04  2019-12-05\n * storage_report_ip_changed ignore result EEXIST\n * use get_gzip_command_filename from libfastcommon v1.42\n * support compress error log and access log\n * disk recovery support multi-threads to speed up\n * bugfix: should use memset to init pReader in function\n   storage_reader_init, this bug is caused by v6.01\n\n  NOTE: you MUST upgrade libfastcommon to V1.42 or later\n\n\nVersion 6.03  2019-11-20\n * dual IPs support two different types of inner (intranet) IPs\n * storage server request tracker server to change it's status\n   to that of tracker leader when the storage server found \n   it's status inconsistence\n * bugfix: fdfs_monitor fix get index of the specified tracker server\n * storage server write to data_init_flag and mark file safely\n   (write to temp file then rename)\n * code refine: combine g_fdfs_store_paths and g_path_space_list,\n   and extent struct FDFSStorePathInfo\n * check store path's mark file to prevent confusion\n * new selected tracker leader do NOT notify self by network\n * larger network_timeout for fetching one-store-path binlog\n   when disk recovery\n \n  NOTE: the tracker and storage server must upgrade together\n\n\nVersion 6.02  2019-11-12\n * get_file_info calculate CRC32 for appender file type\n * disk recovery download file to local temp file then rename it\n   when the local file exists\n * support regenerate filename for appender file\n   NOTE: the regenerated file will be a normal file!\n\n\nVersion 6.01  2019-10-25\n * compress and uncompress binlog file by gzip when need,\n   config items in storage.conf: compress_binlog and compress_binlog_time\n * bugfix: must check and create data path before write_to_pid_file\n   in fdfs_storaged.c\n\n\nVersion 6.00  2019-10-16\n * tracker and storage server support dual IPs\n   1. you can config dual tracker IPs in storage.conf and client.conf,\n      the configuration item name is \"tracker_server\"\n   2. you can config dual storage IPs in storage_ids.conf\n  more detail please see the config files.\n\n  NOTE: you MUST upgrade libfastcommon to V1.41 or later\n        the tracker and storage server must upgrade together\n\n * storage server get IP from tracker server\n * storage server report current tracker IP to the tracker server when join\n * tracker server check tracker list when storage server join\n * use socketCreateExAuto and socketClientExAuto exported by libfastcommon\n\n\nVersion 5.12  2018-06-07\n * code refine for rare case\n * replace print format OFF_PRINTF_FORMAT to PRId64\n * php_ext fix zend_object_store_get_object call in php5.5\n * make.sh uses macros define in /usr/include/fastcommon/_os_define.h\n * correct CRC32, you must upgrade libfastcommon to V1.38 or later\n\nVersion 5.11  2017-05-26\n * bug fixed: file_offset has no effect when use trunk file\n * add storage access log header\n * http.conf add parameter http.multi_range.enabed\n\nVersion 5.10  2017-03-29\n * use fc_safe_read instead of read, and fc_safe_write instead of write\n   you must upgrade libfastcommon to V1.35 or later\n * fix getFileContentEx read bytes,\n   you must upgrade libfastcommon to V1.36 or later\n * do NOT sync storage server info to tracker leader\n * adjust parameter store_server when use_trunk_file is true\n * clear sync src id when tracker response ENOENT\n * log more info when fdfs_recv_header / fdfs_recv_response fail\n\nVersion 5.09  2016-12-29\n * bug fixed: list_all_groups expand buffer auto for so many groups\n * tracker.conf add parameters: min_buff_size and max_buff_size\n * php extension fix free object bug in PHP 7\n\nVersion 5.08  2016-04-08\n * install library to $(TARGET_PREFIX)/lib anyway\n * php extension compiled in PHP 7\n * dio thread use blocked_queue and php extension use php7_ext_wrapper.h,\n   you must upgrade libfastcommon to V1.25 or later\n * remove common/linux_stack_trace.[hc]\n\nVersion 5.07  2015-09-13\n * schedule task add the \"second\" field\n * make.sh changed, you must upgrade libfastcommon to V1.21 or later\n * bug fixed: storage_disk_recovery.c skip the first file (binlog first line)\n * bug fixed: should close connection after fetch binlog\n * fdfs_storaged.c: advance the position of daemon_init\n * set log rotate time format\n * bug fixed: must check store_path_index\n\nVersion 5.06  2015-05-12\n * compile passed in mac OS Darwin\n * correct scripts in subdir init.d\n * check item thread_stack_size in storage.conf, you must\n   upgrade libfastcommon to V1.14 or later\n\nVersion 5.05  2014-11-22\n * tracker_mem.c log more info\n * remove useless global variable: g_network_tv\n * storage can fetch it's group_name from tracker server\n\nVersion 5.04  2014-09-16\n * add fastdfs.spec for build RPM on Linux\n * depend on libfastcommon\n * in multi tracker servers case, when receive higher status like\n   online / active and the storage status is wait_sync or syncing,\n   the tracker adjust storage status to newer, and the storage rejoin\n   to the tracker server\n * fdfs_monitor support delete empty group\n * bug fixed: two tracker leaders occur in rare case\n * add connection stats\n * delete old log files, add parameter: log_file_keep_days\n\nVersion 5.03  2014-08-10\n * network send and recv retry when error EINTR happen\n * support mac OS Darwin\n * use newest logger from libfastcommon\n * patches by liangry@ucweb.com\n * bug fixed: can't sync large files cause by v5.02\n * use newest files from libfastcommon\n * change TRACKER_SYNC_STATUS_FILE_INTERVAL from 3600 to 300\n * socket send and recv ignore erno EINTR\n\nVersion 5.02  2014-07-20\n * corect README spell mistake\n * bug fixed: can't deal sync truncate file exception\n * remove tracker_global.c extern keyword to tracker_global.h\n * change log level from ERROR to DEBUG when IOEVENT_ERROR\n * php callback should use INIT_ZVAL to init zval variable\n * add function short2buff and buff2short\n * add get_url_content_ex to support buffer passed by caller\n * logger can set rotate time format\n * logger can log header line\n * #include <stdbool.h> to use C99 bool\n * logger can delete old rotated files\n * bug fixed: connection pool should NOT increase counter when connect fail\n * logger.c do NOT call fsync after write\n\nVersion 5.01  2014-02-02\n * trunk binlog be compressed when trunk init\n * bug fixed: sync trunk binlog file to other storage servers immediately when\n   the trunk server init done\n * move ioevent_loop.[hc] and fast_task_queue.[hc] from tracker/ to common/\n * hash table support locks\n * hash talbe support new functions: hash_inc and hash_inc_ex\n\nVersion 5.00  2013-12-23\n * discard libevent, use epoll in Linux, kqueue in FreeBSD, port in SunOS directly\n * do_notify_leader_changed force close connection when target is myself\n * modify the INSTALL file and tracker/Makefile.in\n\nVersion 4.08  2013-11-30\n * bug fixed: FDFS_DOWNLOAD_SERVER_ROUND_ROBIN change to FDFS_STORE_SERVER_ROUND_ROBIN\n * dio_init use memset to init buffer\n * disable linger setting (setsockopt with option SO_LINGER)\n * change log level from error to warning when file not exist on storage server\n\nVersion 4.07  2013-06-02\n * make.sh add -lpthread by ldconfig check\n * support multi accept threads\n * tracker and storage server close client connection when recv invalid package\n * client/storage_client.c: file_exist with silence flag\n * tracker and storage process support start, stop and restart command\n * tracker/tracker_proto.c fdfs_recv_header: logDebug change to logError\n\nVersion 4.06  2013-01-24\n * fdfs_upload_file tool enhancement\n * fdfs_download_file tool support offset and download size\n * trunk file upload support sub paths rotating correctly\n * add function: fdfs_http_get_file_extension\n * sync truncate file operation anyway\n\nVersion 4.05  2012-12-30\n * client/fdfs_upload_file.c can specify storage ip port and store path index\n * add connection pool\n * client load storage ids config\n * common/ini_file_reader.c does NOT call chdir\n * keep the mtime of file same\n * use g_current_time instead of call time function\n * remove embed HTTP support\n\nVersion 4.04  2012-12-02\n * bug fixed: get storage server id when storage daemon init\n * storage id in filename use global variable\n * dynamic alloc memory 8 bytes alignment\n * fast_task_queue support memory pool chain\n\nVersion 4.03  2012-11-18\n * trunk_mgr/trunk_mem.c: log error and add more debug info\n * file id generated by storage server can include storage server ID\n\nVersion 4.02  2012-10-30\n * validate file_ext_name and prefix_name when upload file\n * storage.conf add parameter: file_sync_skip_invalid_record\n * add offset debug info when sync file fail\n * bug fixed: log to binlog also if the file exists when sync file\n * tracker and storage error log support rotate\n * support rotate log by file size\n * rotate log when receive HUP signal\n * fdfs_monitor support set trunk server\n * bug fixed: tracker_mem.c correct double mutex lock\n\nVersion 4.01  2012-10-21\n * trunk_mgr/trunk_mem.c: trunk init flag check more strictly\n * file signature for checking file duplicate support MD5\n * slave file support both symbol link and direct file\n * tracker server log trunk server change logs\n\nVersion 4.00  2012-10-06\n * identify storage server by ID instead of IP address\n * tracker.conf: storage reserved space can use ratio such as 10%\n * storage server support access log\n * appender file and trunk file also use rand number in file id\n * bug fixed: test_upload.c: char file_id[64] change to: char file_id[128]\n * set pipe reading fd with attribute O_NOATIME\n * bug fixed: correct php extension call_user_function TSRMLS_DC with TSRMLS_CC\n\nVersion 3.11  2012-08-04\n * setsockopt set linger.l_linger to micro-seconds in FreeBSD and seconds \n   in others\n * trunk binlog reader skip incorrect records\n * bug fixed: single disk recovery support symbol link and trunk file\n * storage generate filename enhancement\n * ETIME change to ETIMEDOUT for FreeBSD\n * tracker_mem.c: load storage server ignore empty ip address\n\nVersion 3.10  2012-07-22\n * check and init trunk file more gracefully\n * remove unused-but-set-variable\n * bug fixed: return correct group name when g_check_file_duplicate is true\n * bug fixed: php extension call_user_function replace TSRMLS_CC with TSRMLS_DC\n * large the interval of tracker re-select trunk server\n * trunk free block check duplicate using avl tree\n * trunk file sync overwrite the dest file anyway\n * common/avl_tree.c: free data when delete\n * tracker.conf add parameter: trunk_init_reload_from_binlog, when this flag \n   is set to true, load all free trunk blocks from the trunk binlog\n * trunk status control only by trunk_mem.c and memcmp struct FDFSTrunkFullInfo\n   avoid memory alignment problem\n * auto remove the too old temp file\n\nVersion 3.09  2012-07-08\n * make.sh avoid override config files of /etc/fdfs/\n * common/logger.c: function log_init can be called more than once\n * php extension logInfo change to logDebug\n * c client logInfo change to logDebug\n * storage_dio.c log info more properly\n * delete the trunk space which be occupied\n * tracker.conf add parameter: trunk_init_check_occupying, when this flag \n   is set to true, do not add the trunk nodes which be occupied\n * another method to get local ip addresses\n\nVersion 3.08  2012-05-27\n * FAST_MAX_LOCAL_IP_ADDRS change from 4 to 16\n * appender file support modify\n * appender file support truncate\n\nVersion 3.07  2012-05-13\n * tracker/tracker_mem.c: check storage ip address is not empty\n * remove direct IO support\n * trunk binlog sync optimization\n * php extension compile passed in PHP 5.4.0\n * get local ip addresses enhancement\n * trunk server select the storage server whose binglog file size is max\n * sync trunk binlog file correctly when trunk server changed\n\nVersion 3.06  2012-01-22\n * add common/avl_tree.h and common/avl_tree.c\n * organize trunk free blocks using AVL tree\n * find the trunk server for each group when current tracker be a leader\n * common/sched_thread.c can add schedule entry dynamicly\n * support creating trunk file advancely\n\nVersion 3.05  2011-12-20\n * remove compile warnings\n * storage server's store_path_count can be more than that of group\n * bug fixed: common/fast_mblock.c malloc bytes are not enough\n * make.sh support OS: HP-UX\n\nVersion 3.04  2011-11-25\n * bug fixed: duplicate files only save one entry ok with trunk file mode\n * bug fixed: sync correctly with more binlog files\n * fdfs_file_info query file info from storage server\n * bug fixed: php extension compile error using gcc 4.6.1 as:\n   variable 'store_path_index' set but not used\n * bug fixed: delete the metadata of trunked file correctly\n * bug fixed: append file ok when check duplicate is on\n * storage/trunk_mgr/trunk_shared.[hc]: trunk_file_stat_func do not \n   use function pointer\n * bug fixed: storage/trunk_mgr/trunk_shared.c base64_decode_auto \n   overflow 1 byte\n * bug fixed: delete slave file correctly\n * bug fixed: remove debug info\n * md5 function name changed to avoid conflict\n\nVersion 3.03  2011-10-16\n * ignore existed link when sync link file\n * http token checking support persistent token\n * add functions: storage_file_exist and storage_file_exist1\n * php minfo add fastdfs version info\n * make.sh changed\n * client move libevent dependency\n\nVersion 3.02  2011-09-18\n * bug fixed: tracker_mem_check_add_tracker_servers add tracker server \n   correctly\n * php client compile ok with php 5.2.17\n * re-select trunk server ok\n\nVersion 3.01  2011-07-31\n * bug fixed: tracker_get_connection_ex and tracker_get_connection_r_ex \n   connect two times with multi tracker servers\n * bug fixed: tracker_mem_check_add_tracker_servers condition not correct\n * all logError add source filename and line\n * php extension support upload file callback\n * php extension support download file callback\n\nVersion 3.00  2011-06-19\n * mass small files optimization\n * add fixed block memory pool: common/fast_mblock.c\n * bug fixed: tracker_mem.c do NOT clear g_groups fields\n * bug fixed: slave file and appender file download ok\n * bug fixed: tracker / storage run by group / user, set file owner\n * tracker server support leader\n * client support static library\n * client_func.h add functions fdfs_tracker_group_equals and \n   fdfs_get_file_ext_name\n * bug fixed: test/dfs_func_pc.c compile ok\n * storage server check free space enough when upload a file\n\nVersion 2.09  2011-02-19\n * bug fixed: write_to_binlog_index then increase g_binlog_index (feedback \n   by koolcoy)\n * disk read / write supports direct mode (avoid caching by the file system)\n\nVersion 2.08  2011-01-30\n * bug fixed: fdfs_trackerd.c set g_tracker_thread_count to 0\n * add cmd TRACKER_PROTO_CMD_SERVER_LIST_ONE_GROUP to support list one group\n * support disk recovery automatically\n * support total_upload_bytes, success_upload_bytes, total_download_bytes and \n   success_download_bytes etc. 18 stat fields\n * tracker data file storage_groups.dat changes to storage_groups_new.dat, and \n   storage_servers.dat changes to storage_servers_new.dat\n * support file append, add tests: fdfs_appender_test and fdfs_appender_test1\n * storage_dio.c: dio_deal_task split to several functions\n * tracker http check thread exit normally\n * function fdfs_get_file_info_ex changed, add function fdfs_get_file_info_ex1\n * fix some type cast error when compile with c++\n * client add tools: fdfs_upload_appender and fdfs_append_file\n\nVersion 2.07  2011-01-09\n * slave file's prefix name can be empty\n * FDFS_MAX_GROUPS change from 64 to 512\n * file size field in the file id changed: high 32 bits is random integer \n   when the file size < 2GB and the highest bit set to 1\n * tracker_service.c: in function list_group_storages, use strcpy \n   intead of memcpy\n * php extension add function fastdfs_tracker_delete_storage\n * client add tool: fdfs_file_info to get file info, including file size,\n   create timestamp, source storage ip address and crc32 signature\n * fdfs_upload_file.c: omit more error info when the local file not exist\n\nVersion 2.06  2010-12-26\n * sync file op: do not sync the file which exists on dest storage server\n   and the file size are same \n * bug fixed: sync copy file will clear the existed file on dest storage\n   server (truncate the file size to 0), this bug caused by V2.04\n * bug fixed: make temp file discard system function mkstemp, \n   use file sequence No. with pthread_mutex_lock\n * bug fixed: function fastdfs_tracker_list_groups, when parameter group_name\n   is null or empty string, return all groups info\n * bug fixed: upload a file extends 2GB will fail\n * bug fixed: tracker to tracker sync system data files, in function: \n   tracker_mem_get_tracker_server, pTrackerStatus not be set properly\n\nVersion 2.05  2010-12-05\n * client/fdfs_monitor.c: add sync delay time\n * tracker/fast_task_queue.c: pTask->data = pTask->arg + arg_size; \n   change to: pTask->data = (char *)pTask->arg + arg_size;\n * bug fixed: storage_sync.c line 237 cause core dump in Ubuntu 10.04\n * upload file test use mmap, support more test_upload processes\n * client add three tools: fdfs_upload_file, fdfs_download_file and \n   fdfs_delete_file\n\nVersion 2.04  2010-11-19\n * storage.conf: tracker server ip can NOT be 127.0.0.1\n * do not catch signal SIGABRT\n * strerror change to STRERROR macro\n * sync copy file use temp filename first, rename to the correct filename \n   when sync done\n * file id use 4 bytes CRC32 signature instead of random number\n * add file: client/fdfs_crc32.c\n * one of file hash code signature function change from APHash_ex \n   to simple_hash_ex\n * bug fixed: when fdfs_storaged quit, maybe write to binlog file fail,\n   the error info is \"Bad file descriptor\"\n\nVersion 2.03  2010-11-08\n * bug fixed: core dump when http.need_find_content_type=false and \n   http.anti_steal.check_token=true\n * storage server add join_time field (create timestamp of this storage)\n * tracker server fetch system files from other tracker server when \n   first storage server join in (tracker to tracker sync system files)\n * tracker server changes the old ip address to the new address when the \n   storage server ip address changed\n * tracker to tracker sync system data files in some case, multi tracker\n   server supported well\n\nVersion 2.02  2010-10-28\n * get parameters function from tracker server changed, \n   add paramter: storage_sync_file_max_delay\n * local ip functions move to common/local_ip_func.c\n * when query all storage servers to store, do not increase the current\n   write server index\n * struct FDFSHTTPParams add field: need_find_content_type\n * symbol link client library to /usr/lib64 in 64 bits OS\n * storage_client.c: deal file extension name correctly\n\nVersion 2.01  2010-10-17\n * client/fdfs_monitor.c can specify tracker server\n * micro STORAGE_STORE_PATH_PREFIX_CHAR change to \n   FDFS_STORAGE_STORE_PATH_PREFIX_CHAR\n * php extension can set log filename\n * php extension add function: fastdfs_client_version\n * bug fixed: client/tracker_client.c tracker_get_connection_ex NULL pointer\n * set max core dump file size to at least 256MB when DEBUG_FLAG is on, \n   make sure to generate core file when core dump with DEBUG_FLAG on\n * upload file can get available storage server list of the group, \n   add command TRACKER_PROTO_CMD_SERVICE_QUERY_STORE_WITHOUT_GROUP_ALL and\n   TRACKER_PROTO_CMD_SERVICE_QUERY_STORE_WITH_GROUP_ALL\n * bug fixed: storage core dump in some case\n\nVersion 2.00  2010-08-22\n * tracker network io use libevent instead of traditional io model\n * storage network io use libevent instead of traditional io model\n * storage disk read/write use separate threads\n * tracker_mem.c malloc single group and storage struct, remove referer\n * make install copy config files\n * tracker.conf add two parameters: storage_sync_file_max_delay and \n   storage_sync_file_max_time\n * client tracker_get_connection increase server_index correctly\n * storage sync to storage server adds active test\n * test programs compile ok\n\nVersion 1.29  2010-06-30\n * add files: tracker_dump.h and tracker_dump.c, tracker dump global vars\n * add files: storage_dump.h and storage_dump.c, storage dump global vars\n * sockopt.c: tcprecvfile and tcpdiscard add parameter total_recv_bytes\n * storage server add fields: storage_port and storage_http_port\n * auto rename synced remark files when the port of all storage servers \n   in a group changed to another port\n * connect server support timeout, adding connect_timeout parameter in \n   config file\n * log_init set log to cache to false (no cache)\n\nVersion 1.28  2010-05-30\n * tracker_servive.c: set current_write_group anyway when current group\n   out of space\n * logger support context (multi instance)\n * get storage servers by filename: if the file created one day ago (the create \n   timestamp of the file < current_time - 86400), any active storage server matches\n * add files: common/pthread_func.h and common/pthread_func.c\n * common/sched_thread.h, remove statement: extern bool g_continue_flag;\n * client add libfastcommon\n * global variables: g_base_path, g_network_timeout, g_version change to \n   g_fdfs_base_path, g_fdfs_network_timeout, g_fdfs_version\n * common/fdfs_base64.h/c change name to common/base64.h/c\n * make.sh use TARGET_PREFIX instead of TARGET_PATH\n * protocol add ACTIVE_TEST, tracker and storage both support\n * php client, bug fixed: fastdfs_connect_server, the sock must init to -1\n * bug fixed: storage status not correct with multi tracker servers\n * sync storage mark file and stat file to disk properly\n\nVersion 1.27  2010-04-10\n * storage.conf: add if_alias_prefix parameter to get the ip address of the \n   local host\n * storage http support domain name\n * php extension add some parameters in fastdfs_client.ini\n * make.sh compile use debug mode\n * type off_t change to int64_t\n * redirect stdout and stderr to log file\n * php extension list_groups add fields: version and http_domain\n\nVersion 1.26  2010-02-28\n * remove compile warning of logError\n * ini reader support section\n * bug fixed: tracker/tracker_mem.c sync storage server status\n * use storage server http server port anyway\n * bug fixed: ini reader can support relative config filename\n * function enhancement: tracker server can check storage HTTP server alive\n\nVersion 1.25  2010-02-04\n * storage_sync.c if source file not exist when sync a file, change from \n   logWarning to logDebug\n * filename buff size change from 64 to 128\n * bug fixed: c client and php client, log not inited cause core dump when \n   call log functions\n * can print stack trace when process core dumped in Linux server\n * bug fixed: tracker/tracker_mem.c load storage servers fail with many groups\n   and storage servers\n * common/sockopt.c remove debug info\n * storage stat add fields: version\n * auto adjust when storage server ip address changed\n * bug fixed: when add a new storage server, other storage servers' status keep\n   the same, not changed\n * add macros, compile passed in cygwin, thanks Seapeak\n * write to system data file using lock\n * common/ini_file_reader.c: use one context parameter, not two parameters\n * storage status sync modified (the code of tracker and storage both changed)\n * when recv kill signal, worker thread quit more quickly, daemon process \n   fdfs_trackerd and fdfs_storage quit very quickly when recv kill signal\n * remove compile warning info of logError\n * tracker server start more quickly with many groups and storage servers\n * bug fixed: correct off_t printf format\n\nVersion 1.24  2010-01-06\n * call php_fdfs_close with TSRMLS_CC as php_fdfs_close(i_obj TSRMLS_CC)\n * storage server to storage server report ip address as tracker client\n * bug fixed: sendfile exceeds 2GB file in Linux\n * bug fixed: delete storage server \n * storage stat add fields: up_time and src_ip_addr\n * big static or struct memeber char array buffer change to malloc in order to\n   decrease stack size\n * FDFS_WRITE_BUFF_SIZE  change from 512KB to 256KB\n * bug fixed: client/storage_client.c, meta data miss when upload file\n * decrease thread_stack_size default value in config files: tracker.conf \n   and storage.conf\n\nVersion 1.23  2009-11-29\n * remove unuseless variable \"sleep_secs\" in tracker_report_thread_entrance\n * storage can bind an address when connect to other servers (as a client)\n * common/md5.h fix UINT4 typedef wrong type in 64 bit OS\n * client/fdfs_test.c: print the source ip address decoded from the remote \n   filename\n * client add function fdfs_get_file_info\n * php extension add functions: fastdfs_http_gen_token and fastdfs_get_file_info\n * server process will exit when the http service starts fail\n * support file group, a master file with many slave files whose file id can be \n   combined from master file id and prefix\n * php client support uploading slave file\n * ip address in filename change from host byte order to network byte order\n * storage sync performance enhancement, using read buffer of 64KB to avoid \n   reading binlog file repeatly\n * storage add prototol cmd: STORAGE_PROTO_CMD_QUERY_FILE_INFO\n * FDFS_FILE_EXT_NAME_MAX_LEN changed from 5 to 6\n * get file info support slave file\n * storage server for uploading file support priority\n\nVersion 1.22  2009-10-12\n * bug fixed: common/shared_func.c allow_hosts array maybe overflow in some case\n * tracker/tracker_mem.c: protocol TRACKER_PROTO_CMD_SERVICE_QUERY_FETCH_ALL, \n   return at least a storage server when active storage \n   server count of the group > 0\n * bug fixed: when client connection disconnected, always log debug or error info\n * make.sh: default not install FastDFS services in Linux server\n * common/sockopt.c: setsockopt level SOL_TCP only supported in Linux\n * common/http_func.c: do not use function strsep because strsep is not portable\n * client upload file support callback function\n * client support multi tracker groups (multi FastDFS clusters)\n * bug fixed: thread_stack_size not correct when the param thread_stack_size \n   not set in the config file\n * supply php extension (directory name: php_client)\n * c client reconnect server (tracker or storage) when network IO error\n * c client: make tracker server index counter thread safely\n\nVersion 1.21  2009-09-19\n * bug fixed: when source storage server synced file to new storage server done,\n   it's status changed to ONLINE (should keep as ACTIVE, report by zhouzezhong)\n * add thread_stack_size in config file, default value is 1MB (report by chhxo)\n * tracker and storage server use setsockopt to keep alive \n   (report by zhouzezhong)\n * bug fixed: storage server with multi-path, upload file fail when the free \n   space of each path <= reserved space (the total free space > reserved space,\n   report by zhouzezhong)\n * storage_sync.c: when connect fail, do not change the dest storage server '\n   status to offline\n * tracker_service.c and storage_service.c change log level from WARNING to DEBUG \n   when client connection disconnected (report by Jney402)\n * bug fixed: tracker_client.c correct store_path_index return by tracker server\n   (report by happy_fastdfs)\n * bug fixed: tracker_service.c when store_lookup set to 2 (load balance), use \n   another pthread lock to avoid long time lock waiting\n   (report by happy_fastdfs)\n * add service shell scripts in directory: init.d \n   (services will auto installed on Linux, report by hugwww)\n\nVersion 1.20  2009-09-05\n * base64 use context, functions changed\n * common/ini_file_reader.c: fix memory leak\n * tracker server support HTTP protocol, one thread mode\n * storage server support HTTP protocol, one thread mode\n * fix bug: storage server rebuild, auto sync data correctly\n * fix bug: sync data fail (correct storage server status)\n * when storage server idle time exceeds check_active_interval seconds, \n   set it's status to offline\n * tracker counter thread safely\n\nVersion 1.19  2009-07-23\n * use poll instead of select in sockopt.c\n * hash.c use chain impl by self\n * use FastDHT 1.09 client code\n * ini reader support HTTP protocol, conf file can be an url\n * correct test dir compile error\n * use non-block socket to increase network IO performance\n * add cmd TRACKER_PROTO_CMD_SERVICE_QUERY_FETCH_ALL: query all storage servers \n   from which the file can be dowloaded\n * while (1) ... break; changed to do ... while (0);\n\nVersion 1.18  2009-05-24\n * restart.sh only kill the programs match the program name and all parameters\n * correct get local ip addresses\n * common files do not use global vars like g_network_timeout and g_base_path\n * download file support offset and download bytes\n * hash function change type from unsigned int to signed int\n * file size in file name support 64 bits, old bytes is 4, new bytes is 8\n\nVersion 1.17  2009-03-19\n  * add test programs at sub directory test/\n  * common/shared_func.c: rindex change to strrchr, add #include <netinet/in.h>\n  * support SunOS (Solaris), compile passed on SunOS 5.10\n  * support AIX, compile passed on AIX 5.3\n  * sys call statfs change to statvfs\n  * use scheduling thread to sync binlog buff / cache to disk, add parameter\n   \"sync_binlog_buff_interval\" to conf file storage.conf\n  * use FastDHT v1.07 client code\n\nVersion 1.16  2009-02-14\n  * client can specify group name when upload file\n  * tracker_service.c: cmd dispatch changed to \"switch ... case\" \n    not \"if ... else if\"\n  * storage_service.c: call fdfs_quit before tracker_disconnect_server\n\nVersion 1.15  2009-01-28\n  * use FastDHT v1.04 client code\n  * use FastDHT client thread safely\n\nVersion 1.14  2009-01-18\n  * storage/storage_sync.c: \n    old: if (reader.sync_row_count % 1000 == 0)\n    new: if (reader.scan_row_count % 2000 == 0)\n  * little adjustment for common files can be used by FastDHT\n  * sched_thread.h /.c add global variable g_schedule_flag to quit normally\n  * shared_func.h / .c add function get_time_item_from_conf\n  * sched_thread.h /.c support time_base of task\n  * hash.h / .c add function CRC32, add hash function to support stream hash\n  * add FastDHT client files in storage/fdht_client/\n  * create symbol link when the file content is duplicate, \n    add item \"check_file_duplicate\" to conf file storage.conf\n  * use FastDHT v1.02 client code\n  * auto delete invalid entry in FastDHT when the source file does not exist\n\nVersion 1.13  2008-11-29\n  * re-calculate group 's free space when one of it's storage servers' \n    free space increase\n  * add parameters: sync_interval, sync_start_time and sync_end_time to \n    storage.conf\n  * performance enhancement: log to buffer, flush to disk every interval seconds\n  * standard fds closed by daemon_init: 0(stdin), 1(stdout) and 2(stderr)\n  * fix bug: pthread_kill sometimes cause core dump when program terminated\n  * fix bug: sync.c open next binlog cause loop call\n\nVersion 1.12  2008-11-12\n  * storage server support multi path (mount point)\n  * upload file support file ext name, add source storage ip address to filename\n  * add delete command to delete the invalid storage server\n  * add client functions which combine group name and filename to file id,\n    add anothor client test program: fdfs_test1.c to use file id\n  * client download file support callback function\n  * add protocol cmd TRACKER_PROTO_CMD_SERVICE_QUERY_UPDATE, \n    and client API add tracker_query_storage_update\n  * add protocol cmd TRACKER_PROTO_CMD_STORAGE_SYNC_REPORT to report last \n    synced timestamp as dest server\n  * fix sync old data files to new server bug\n  * fcntl change to pthread_mutex_lock\n\nVersion 1.11  2008-10-04\n  * kill report and sync threads when recv terminate signal\n  * add item \"store_server\" in tracker.conf, by default use the first \n    storage server to store uploaded files\n  * ini_file_reader.c changed: a conf file can include other conf files\n  * some adjustment:\n    some macro name changed\n    add common_define.h\n    remove fdfs_define.c\n    fdfs_os_bits.h change to _os_bits.h\n\nVersion 1.10  2008-09-20\n  * performance optimizing: use thread pool, create all work threads at startup\n  * trim function op in shared_func.c\n  * add Makefile template Makefile.in, delete Makefile and Makefile.freebsd\n    change make.sh to support all unix systems (passed in Linux and FreeBSD)\n\nVersion 1.9  2008-09-14\n  * security enhancement: support allow hosts which can connect to the server\n  * server can be run by the specified group and user, set by the config file\n  * change make.sh and add file common/fdfs_os_bits.h, \n    remove the warning info of printf format for int64_t param in 64 bits system\n  * storage_client.c changed: auto connect to storage server when not connected\n  * change some macro name and function name in tracker/tracker_proto.h\n\nVersion 1.8  2008-09-07\n  * communication protocol changed to support large file exceed 2GB:\n     # all integer field is 8 bytes big-endian\n     # group name fixed length: FDFS_GROUP_NAME_MAX_LEN bytes\n  * storage stat numbers (such as total_upload_count, success_upload_count) \n    use int64_t (8 bytes integer)\n  * ini_file_reader.c add function iniGetInt64Value\n  * sockopt.c add function tcpsetnonblockopt\n  * shared_func.c add function set_nonblock\n\nVersion 1.7  2008-08-31\n  * performance optimizing: \n     # change fopen to syscall open\n     # increase the efficiency of socket functions tcpsenddata and tcprecvdata\n  * change the return value of socket funtions such as tcpsenddata, \n    tcprecvdata and connectserverbyip\n      old return value: result=1 for success, result != 1 fail\n      new return value: result=0 for success, result != 0 fail, return the error code\n  * log function enhancement: \n     # support log level\n     # parameter \"log_level\" added to server config file\n     # keep the log file opened to increase performance\n  * fix log format and parameter mismatched bug (check by printf)\n  * log CRIT message to log file when program exit unexpectedly\n  * Makefile add compile flag -D_FILE_OFFSET_BITS=64 to support large files\n  * change the type of file_size and file_offset to off_t\n  * change signal to sigaction\n  * fix client Makefile to compile library correctly\n  * restart.sh modified: use external command \"expr\" to replace shell command \"let\"\n\nVersion 1.6  2008-08-24\n  * add restart daemon shell script: restart.sh\n  * use setrlimit to increase max open files if necessary\n  * security enhancement: the format of data filename must be: HH/HH/filename,\n    eg. B9/F4/SLI2NAAMRPR9r8.d\n  * fix bug: errno is not correct where the downloaded file does not exist,\n             communication is broken when the download file is a directory\n\nVersion 1.5  2008-08-17\n  * add client function storage_download_file_to_file\n  * use pthread_attr_setstacksize to increase thread stack size to 1 MB\n  * use sendfile syscall to send file in Linux and FreeBSD\n  * fix bug: add O_TRUNC flag when open file to write\n  * remove warning info compiled by gcc 4.2\n  * fcntl set lock.l_len to 0\n\nVersion 1.4  2008-08-10\n  * storage server recv file method change \n     old method: recv the whole file content/buff before write to file\n     new method: write to file once recv a certain bytes file buff, eg. 128KB buff size\n  * storage client and storage server send file method change \n     old method: get the whole file content/buff, then send to storage server\n     new method: send file to storage server more times. get a certain bytes file buff, then send to storage server\n  * upload file package remove the one pad byte field\n  * remove storage status FDFS_STORAGE_STATUS_DEACTIVE and add FDFS_STORAGE_STATUS_DELETED\n\nVersion 1.3  2008-08-03\n  * fix bug: when meta data is empty, get meta data return error\n  * support java client\n    # memset response header to 0\n    # add group_name to upload file response package\n\nVersion 1.2  2008-07-27\n  * add client function storage_set_metadata to support setting metadata(overwrite or merge)\n\nVersion 1.1  2008-07-20\n  * implement storage disk report\n  * storing load balance between storage groups(volumes) when set store_lookup to 2\n\nVersion 1.0  2008-07-12\n  * first version\n\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 8.5263671875,
          "content": "Copy right 2009 Happy Fish / YuQing\n\nFastDFS may be copied only under the terms of the GNU General\nPublic License V3, which may be found in the FastDFS source kit.\nPlease visit the FastDFS Home Page for more detail.\nChinese language: http://www.fastken.com/\n\n# step 1. download libfastcommon source codes and install it,\n#   github address:  https://github.com/happyfish100/libfastcommon.git\n#   gitee address:   https://gitee.com/fastdfs100/libfastcommon.git\n# command lines as:\n\n   git clone https://github.com/happyfish100/libfastcommon.git\n   cd libfastcommon; git checkout V1.0.75\n   ./make.sh clean && ./make.sh && ./make.sh install\n\n\n# step 2. download libserverframe source codes and install it,\n#   github address:  https://github.com/happyfish100/libserverframe.git\n#   gitee address:   https://gitee.com/fastdfs100/libserverframe.git\n# command lines as:\n\n   git clone https://github.com/happyfish100/libserverframe.git\n   cd libserverframe; git checkout V1.2.5\n   ./make.sh clean && ./make.sh && ./make.sh install\n\n# step 3. download fastdfs source codes and install it, \n#   github address:  https://github.com/happyfish100/fastdfs.git\n#   gitee address:   https://gitee.com/fastdfs100/fastdfs.git\n# command lines as:\n\n   git clone https://github.com/happyfish100/fastdfs.git\n   cd fastdfs; git checkout V6.12.2\n   ./make.sh clean && ./make.sh && ./make.sh install\n\n\n# step 4. setup the config files\n#   the setup script does NOT overwrite existing config files,\n#   please feel free to execute this script (take easy :)\n\n./setup.sh /etc/fdfs\n\n\n# step 5. edit or modify the config files of tracker, storage and client\nsuch as:\n vi /etc/fdfs/tracker.conf\n vi /etc/fdfs/storage.conf\n vi /etc/fdfs/client.conf\n\n and so on ...\n\n\n# step 6. run the server programs\n# start the tracker server:\n/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart\n\n# start the storage server:\n/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart\n\n# (optional) in Linux, you can start fdfs_trackerd and fdfs_storaged as a service:\n/sbin/service fdfs_trackerd restart\n/sbin/service fdfs_storaged restart\n\n\n# step 7. (optional) run monitor program\n# such as:\n/usr/bin/fdfs_monitor /etc/fdfs/client.conf\n\n\n# step 8. (optional) run the test program\n# such as:\n/usr/bin/fdfs_test <client_conf_filename> <operation>\n/usr/bin/fdfs_test1 <client_conf_filename> <operation>\n\n# for example, upload a file for test:\n/usr/bin/fdfs_test /etc/fdfs/client.conf upload /usr/include/stdlib.h\n\n\ntracker server config file sample please see conf/tracker.conf\n\nstorage server config file sample please see conf/storage.conf\n\nclient config file sample please see conf/client.conf\n\nItem detail\n1. server common items\n---------------------------------------------------\n|  item name            |  type  | default | Must |\n---------------------------------------------------\n| base_path             | string |         |  Y   |\n---------------------------------------------------\n| disabled              | boolean| false   |  N   |\n---------------------------------------------------\n| bind_addr             | string |         |  N   |\n---------------------------------------------------\n| network_timeout       | int    | 30(s)   |  N   |\n---------------------------------------------------\n| max_connections       | int    | 256     |  N   |\n---------------------------------------------------\n| log_level             | string | info    |  N   |\n---------------------------------------------------\n| run_by_group          | string |         |  N   |\n---------------------------------------------------\n| run_by_user           | string |         |  N   |\n---------------------------------------------------\n| allow_hosts           | string |   *     |  N   |\n---------------------------------------------------\n| sync_log_buff_interval| int    |  10(s)  |  N   |\n---------------------------------------------------\n| thread_stack_size     | string |  1M     |  N   |\n---------------------------------------------------\nmemo:\n   * base_path is the base path of sub dirs: \n     data and logs. base_path must exist and it's sub dirs will \n     be automatically created if not exist.\n       $base_path/data: store data files\n       $base_path/logs: store log files\n   * log_level is the standard log level as syslog, case insensitive\n     # emerg: for emergency\n     # alert\n     # crit: for critical\n     # error\n     # warn: for warning\n     # notice\n     # info\n     # debug\n   * allow_hosts can ocur more than once, host can be hostname or ip address,\n     \"*\" means match all ip addresses, can use range like this: 10.0.1.[1-15,20]\n      or host[01-08,20-25].domain.com, for example:\n        allow_hosts=10.0.1.[1-15,20]\n        allow_hosts=host[01-08,20-25].domain.com\n\n2. tracker server items\n---------------------------------------------------\n|  item name            |  type  | default | Must |\n---------------------------------------------------\n| port                  | int    | 22000   |  N   |\n---------------------------------------------------\n| store_lookup          | int    |  0      |  N   |\n---------------------------------------------------\n| store_group           | string |         |  N   |\n---------------------------------------------------\n| store_server          | int    |  0      |  N   |\n---------------------------------------------------\n| store_path            | int    |  0      |  N   |\n---------------------------------------------------\n| download_server       | int    |  0      |  N   |\n---------------------------------------------------\n| reserved_storage_space| string |  1GB    |  N   |\n---------------------------------------------------\n\nmemo: \n  * the value of store_lookup is:\n    0: round robin (default)\n    1: specify group\n    2: load balance (supported since V1.1)\n  * store_group is the name of group to store files.\n    when store_lookup set to 1(specify group), \n    store_group must be set to a specified group name.\n  * reserved_storage_space is the reserved storage space for system \n    or other applications. if the free(available) space of any stoarge\n    server in a group <= reserved_storage_space, no file can be uploaded\n    to this group (since V1.1)\n    bytes unit can be one of follows:\n      # G or g for gigabyte(GB)\n      # M or m for megabyte(MB)\n      # K or k for kilobyte(KB)\n      # no unit for byte(B)\n\n3. storage server items\n-------------------------------------------------\n|  item name          |  type  | default | Must |\n-------------------------------------------------\n| group_name          | string |         |  Y   |\n-------------------------------------------------\n| tracker_server      | string |         |  Y   |\n-------------------------------------------------\n| port                | int    | 23000   |  N   |\n-------------------------------------------------\n| heart_beat_interval | int    |  30(s)  |  N   |\n-------------------------------------------------\n| stat_report_interval| int    | 300(s)  |  N   |\n-------------------------------------------------\n| sync_wait_msec      | int    | 100(ms) |  N   |\n-------------------------------------------------\n| sync_interval       | int    |   0(ms) |  N   |\n-------------------------------------------------\n| sync_start_time     | string |  00:00  |  N   |\n-------------------------------------------------\n| sync_end_time       | string |  23:59  |  N   |\n-------------------------------------------------\n| store_path_count    | int    |   1     |  N   |\n-------------------------------------------------\n| store_path0         | string |base_path|  N   |\n-------------------------------------------------\n| store_path#         | string |         |  N   |\n-------------------------------------------------\n|subdir_count_per_path| int    |   256   |  N   |\n-------------------------------------------------\n|check_file_duplicate | boolean|    0    |  N   |\n-------------------------------------------------\n| key_namespace       | string |         |  N   |\n-------------------------------------------------\n| keep_alive          | boolean|    0    |  N   |\n-------------------------------------------------\n| sync_binlog_buff_interval| int |   60s |  N   |\n-------------------------------------------------\n\nmemo:\n  * tracker_server can ocur more than once, and tracker_server format is\n    \"host:port\", host can be hostname or ip address.\n  * store_path#, # for digital, based 0\n  * check_file_duplicate: when set to true, must work with FastDHT server, \n    more detail please see INSTALL of FastDHT. FastDHT download page: \n    http://code.google.com/p/fastdht/downloads/list\n  * key_namespace: FastDHT key namespace, can't be empty when \n    check_file_duplicate is true. the key namespace should short as possible\n \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.796875,
          "content": "Copyright (C) 2008 Happy Fish / YuQing\n\nFastDFS may be copied only under the terms of the GNU General\nPublic License V3, which may be found in the FastDFS source kit.\nPlease visit the FastDFS Home Page for more detail.\nChinese language: http://www.fastken.com/\n\n\nFastDFS is an open source high performance distributed file system. Its major\nfunctions include: file storing, file syncing and file accessing (file uploading\nand file downloading), and it can resolve the high capacity and load balancing\nproblem. FastDFS should meet the requirement of the website whose service based\non files such as photo sharing site and video sharing site.\n\nFastDFS has two roles: tracker and storage. The tracker takes charge of\nscheduling and load balancing for file access. The storage store files and it's\nfunction is file management including: file storing, file syncing, providing file\naccess interface. It also manage the meta data which are attributes representing\nas key value pair of the file. For example: width=1024, the key is \"width\" and\nthe value is \"1024\".\n\nThe tracker and storage contain one or more servers. The servers in the tracker\nor storage cluster can be added to or removed from the cluster by any time without\naffecting the online services. The servers in the tracker cluster are peer to peer.\n\nThe storarge servers organizing by the file volume/group to obtain high capacity.\nThe storage system contains one or more volumes whose files are independent among\nthese volumes. The capacity of the whole storage system equals to the sum of all\nvolumes' capacity. A file volume contains one or more storage servers whose files\nare same among these servers. The servers in a file volume backup each other,\nand all these servers are load balancing. When adding a storage server to a\nvolume, files already existing in this volume are replicated to this new server\nautomatically, and when this replication done, system will switch this server\nonline to providing storage services.\n\nWhen the whole storage capacity is insufficiency, you can add one or more\nvolumes to expand the storage capacity. To do this, you need to add one or\nmore storage servers.\n\nThe identification of a file is composed of two parts: the volume name and\nthe file name.\n\nClient test code use client library please refer to the directory: client/test.\n\nFor more FastDFS related articles, please subscribe the Wechat/Weixin public account\n(Chinese Language): fastdfs\n\nFastDFS is a lightweight object storage solution. If you need a general distributed\nfile system for databases, K8s and virtual machines (such as KVM), you can learn about\n[FastCFS](https://github.com/happyfish100/FastCFS) which achieves strong data consistency\nand high performance.\n\nWe provide technical support service and customized development. Welcome to use WeChat or email for discuss.\n\nemail: 384681(at)qq(dot)com\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 2.048828125,
          "content": "  FastDFS是一款开源的分布式文件系统，功能主要包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了文件大容量存储和高性能访问的问题。FastDFS特别适合以文件为载体的在线服务，如图片、视频、文档等等服务。\n\n  FastDFS作为一款轻量级分布式文件系统，版本V6.01代码量6.3万行。FastDFS用C语言实现，支持Linux、FreeBSD、MacOS等类UNIX系统。FastDFS类似google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有API访问，目前提供了C客户端和Java SDK，以及PHP扩展SDK。\n\n  FastDFS为互联网应用量身定做，解决大容量文件存储问题，实现高性能和高扩展性。FastDFS可以看做是基于文件的key value存储系统，key为文件ID，value为文件本身，因此称作分布式文件存储服务更为合适。\n\n  FastDFS的架构比较简单，如下图所示：\n  ![architect](images/architect.png)\n\n```\n  FastDFS特点：\n    1）分组存储，简单灵活；\n    2）对等结构，不存在单点；\n    3）文件ID由FastDFS生成，作为文件访问凭证。FastDFS不需要传统的name server或meta server；\n    4）大、中、小文件均可以很好支持，可以存储海量小文件；\n    5）一台storage支持多块磁盘，支持单盘数据恢复；\n    6）提供了nginx扩展模块，可以和nginx无缝衔接；\n    7）支持多线程方式上传和下载文件，支持断点续传；\n    8）存储服务器上可以保存文件附加属性。\n```\n\n  FastDFS更多更详细的功能和特性介绍，请参阅FastDFS微信公众号的其他文章，搜索公众号：fastdfs。\n\n  FastDFS是轻量级的对象存储解决方案，如果你在数据库、K8s和虚拟机（如KVM）等场景，需要使用通用分布式文件系统，可以了解一下保证数据强一致性且高性能的[FastCFS](https://gitee.com/fastdfs100/FastCFS)。\n\n  我们提供商业技术支持和定制化开发，欢迎微信或邮件洽谈。\n\n  email: 384681(at)qq(dot)com\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastdfs.spec",
          "type": "blob",
          "size": 3.044921875,
          "content": "%define FastDFS    fastdfs\n%define FDFSServer fastdfs-server\n%define FDFSClient libfdfsclient\n%define FDFSClientDevel libfdfsclient-devel\n%define FDFSTool   fastdfs-tool\n%define FDFSConfig fastdfs-config\n%define CommitVersion %(echo $COMMIT_VERSION)\n\nName: %{FastDFS}\nVersion: 6.12.2\nRelease: 1%{?dist}\nSummary: FastDFS server and client\nLicense: GPL\nGroup: Arch/Tech\nURL: \thttps://github.com/happyfish100/fastdfs/\nSource: https://github.com/happyfish100/fastdfs/%{name}-%{version}.tar.gz\n\nBuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n) \nBuildRequires: libserverframe-devel >= 1.2.5\nRequires: %__cp %__mv %__chmod %__grep %__mkdir %__install %__id\nRequires: %{FDFSServer} = %{version}-%{release}\nRequires: %{FDFSTool} = %{version}-%{release}\n\n%description\nThis package provides tracker & storage of fastdfs\ncommit version: %{CommitVersion}\n\n%package -n %{FDFSServer}\nRequires: libserverframe >= 1.2.5\nRequires: %{FDFSConfig}\nSummary: fastdfs tracker & storage\n\n%package -n %{FDFSTool}\nRequires: %{FDFSClient}\nSummary: fastdfs tools\n\n%package -n %{FDFSClient}\nRequires: libserverframe >= 1.2.5\nRequires: %{FDFSConfig}\nSummary: The client dynamic library of fastdfs\n\n%package -n %{FDFSClient}-devel\nRequires: %{FDFSClient}\nSummary: The client header of fastdfs\n\n%package -n %{FDFSConfig}\nSummary: FastDFS config files for sample\n\n%description -n %{FDFSServer}\nThis package provides tracker & storage of fastdfs\ncommit version: %{CommitVersion}\n\n%description -n %{FDFSClient}\nThis package is client dynamic library of fastdfs\ncommit version: %{CommitVersion}\n\n%description -n %{FDFSClient}-devel\nThis package is client header of fastdfs client\ncommit version: %{CommitVersion}\n\n%description -n %{FDFSTool}\nThis package is tools for fastdfs\ncommit version: %{CommitVersion}\n\n%description -n %{FDFSConfig}\nFastDFS config files for sample\ncommit version: %{CommitVersion}\n\n%prep\n%setup -q\n\n%build\n./make.sh clean && ./make.sh\n\n%install\nrm -rf %{buildroot}\nDESTDIR=$RPM_BUILD_ROOT ./make.sh install\n\n%post\n\n%postun\n\n%clean\n#rm -rf %{buildroot}\n\n%files\n\n%post -n %{FDFSServer}\nsystemctl enable fdfs_trackerd\nsystemctl enable fdfs_storaged\n\n%files -n %{FDFSServer}\n%defattr(-,root,root,-)\n/usr/bin/fdfs_trackerd\n/usr/bin/fdfs_storaged\n%config(noreplace) /usr/lib/systemd/system/fdfs_trackerd.service\n%config(noreplace) /usr/lib/systemd/system/fdfs_storaged.service\n\n%files -n %{FDFSClient}\n%defattr(-,root,root,-)\n/usr/lib64/libfdfsclient*\n/usr/lib/libfdfsclient*\n\n%files -n %{FDFSClient}-devel\n%defattr(-,root,root,-)\n/usr/include/fastdfs/*\n\n%files -n %{FDFSTool}\n%defattr(-,root,root,-)\n/usr/bin/fdfs_monitor\n/usr/bin/fdfs_test\n/usr/bin/fdfs_test1\n/usr/bin/fdfs_crc32\n/usr/bin/fdfs_upload_file\n/usr/bin/fdfs_download_file\n/usr/bin/fdfs_delete_file\n/usr/bin/fdfs_file_info\n/usr/bin/fdfs_appender_test\n/usr/bin/fdfs_appender_test1\n/usr/bin/fdfs_append_file\n/usr/bin/fdfs_upload_appender\n/usr/bin/fdfs_regenerate_filename\n\n%files -n %{FDFSConfig}\n%defattr(-,root,root,-)\n%config(noreplace) /etc/fdfs/*.conf\n\n%changelog\n* Mon Jun 23 2014  Zaixue Liao <liaozaixue@yongche.com>\n- first RPM release (1.0)\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "make.sh",
          "type": "blob",
          "size": 6.04296875,
          "content": "ENABLE_STATIC_LIB=0\nENABLE_SHARED_LIB=1\nTARGET_PREFIX=$DESTDIR/usr\nTARGET_CONF_PATH=$DESTDIR/etc/fdfs\nTARGET_SYSTEMD_PATH=$DESTDIR/usr/lib/systemd/system\n\nWITH_LINUX_SERVICE=1\n\nDEBUG_FLAG=0\n\nexport CC=gcc\nCFLAGS='-Wall'\nGCC_VERSION=$(gcc -dM -E -  < /dev/null | grep -w __GNUC__ | awk '{print $NF;}')\nif [ -n \"$GCC_VERSION\" ] && [ $GCC_VERSION -ge 7 ]; then\n  CFLAGS=\"$CFLAGS -Wformat-truncation=0 -Wformat-overflow=0\"\nfi\nCFLAGS=\"$CFLAGS -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE\"\nif [ \"$DEBUG_FLAG\" = \"1\" ]; then\n  CFLAGS=\"$CFLAGS -g -O1 -DDEBUG_FLAG\"\nelse\n  CFLAGS=\"$CFLAGS -g -O3\"\nfi\n\nif [ -f /usr/include/fastcommon/_os_define.h ]; then\n  OS_BITS=$(grep -F OS_BITS /usr/include/fastcommon/_os_define.h | awk '{print $NF;}')\nelif [ -f /usr/local/include/fastcommon/_os_define.h ]; then\n  OS_BITS=$(grep -F OS_BITS /usr/local/include/fastcommon/_os_define.h | awk '{print $NF;}')\nelse\n  OS_BITS=64\nfi\n\nuname=$(uname)\n\nif [ \"$OS_BITS\" -eq 64 ]; then\n  if [ $uname = 'Linux' ]; then\n    osname=$(cat /etc/os-release | grep -w NAME | awk -F '=' '{print $2;}' | \\\n            awk -F '\"' '{if (NF==3) {print $2} else {print $1}}' | awk '{print $1}')\n    if [ $osname = 'Ubuntu' -o $osname = 'Debian' ]; then\n      LIB_VERSION=lib\n    else\n      LIB_VERSION=lib64\n    fi\n  elif [ \"$uname\" = \"Darwin\" ]; then\n    LIB_VERSION=lib\n  else\n    LIB_VERSION=lib64\n  fi\nelse\n  LIB_VERSION=lib\nfi\n\nLIBS=''\n\n\nif [ \"$uname\" = \"Linux\" ]; then\n  if [ \"$OS_BITS\" -eq 64 ]; then\n    LIBS=\"$LIBS -L/usr/lib64\"\n  else\n    LIBS=\"$LIBS -L/usr/lib\"\n  fi\n  CFLAGS=\"$CFLAGS\"\nelif [ \"$uname\" = \"FreeBSD\" ] || [ \"$uname\" = \"Darwin\" ]; then\n  LIBS=\"$LIBS -L/usr/lib\"\n  CFLAGS=\"$CFLAGS\"\n  if [ \"$uname\" = \"Darwin\" ]; then\n    CFLAGS=\"$CFLAGS -DDARWIN\"\n    TARGET_PREFIX=$TARGET_PREFIX/local\n  fi\nelif [ \"$uname\" = \"SunOS\" ]; then\n  LIBS=\"$LIBS -L/usr/lib\"\n  CFLAGS=\"$CFLAGS -D_THREAD_SAFE\"\n  LIBS=\"$LIBS -lsocket -lnsl -lresolv\"\n  export CC=gcc\nelif [ \"$uname\" = \"AIX\" ]; then\n  LIBS=\"$LIBS -L/usr/lib\"\n  CFLAGS=\"$CFLAGS -D_THREAD_SAFE\"\n  export CC=gcc\nelif [ \"$uname\" = \"HP-UX\" ]; then\n  LIBS=\"$LIBS -L/usr/lib\"\n  CFLAGS=\"$CFLAGS\"\nfi\n\nhave_pthread=0\nif [ -f /usr/lib/libpthread.so ] || [ -f /usr/local/lib/libpthread.so ] || [ -f /lib64/libpthread.so ] || [ -f /usr/lib64/libpthread.so ] || [ -f /usr/lib/libpthread.a ] || [ -f /usr/local/lib/libpthread.a ] || [ -f /lib64/libpthread.a ] || [ -f /usr/lib64/libpthread.a ]; then\n  LIBS=\"$LIBS -lpthread\"\n  have_pthread=1\nelif [ \"$uname\" = \"HP-UX\" ]; then\n  lib_path=\"/usr/lib/hpux$OS_BITS\"\n  if [ -f $lib_path/libpthread.so ]; then\n    LIBS=\"-L$lib_path -lpthread\"\n    have_pthread=1\n  fi\nelif [ \"$uname\" = \"FreeBSD\" ]; then\n  if [ -f /usr/lib/libc_r.so ]; then\n    line=$(nm -D /usr/lib/libc_r.so | grep pthread_create | grep -w T)\n    if [ $? -eq 0 ]; then\n      LIBS=\"$LIBS -lc_r\"\n      have_pthread=1\n    fi\n  elif [ -f /lib64/libc_r.so ]; then\n    line=$(nm -D /lib64/libc_r.so | grep pthread_create | grep -w T)\n    if [ $? -eq 0 ]; then\n      LIBS=\"$LIBS -lc_r\"\n      have_pthread=1\n    fi\n  elif [ -f /usr/lib64/libc_r.so ]; then\n    line=$(nm -D /usr/lib64/libc_r.so | grep pthread_create | grep -w T)\n    if [ $? -eq 0 ]; then\n      LIBS=\"$LIBS -lc_r\"\n      have_pthread=1\n    fi\n  fi\nfi\n\nif [ $have_pthread -eq 0 ] && [ \"$uname\" != \"Darwin\" ]; then\n   /sbin/ldconfig -p | grep -F libpthread.so > /dev/null\n   if [ $? -eq 0 ]; then\n      LIBS=\"$LIBS -lpthread\"\n   else\n      echo -E 'Require pthread lib, please check!'\n      exit 2\n   fi\nfi\n\nTRACKER_EXTRA_OBJS=''\nSTORAGE_EXTRA_OBJS=''\nif [ \"$DEBUG_FLAG\" = \"1\" ]; then\n  TRACKER_EXTRA_OBJS=\"$TRACKER_EXTRA_OBJS tracker_dump.o\"\n  STORAGE_EXTRA_OBJS=\"$STORAGE_EXTRA_OBJS storage_dump.o\"\nfi\n\ncd tracker\ncp Makefile.in Makefile\nperl -pi -e \"s#\\\\\\$\\(CFLAGS\\)#$CFLAGS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(LIBS\\)#$LIBS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_PREFIX\\)#$TARGET_PREFIX#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TRACKER_EXTRA_OBJS\\)#$TRACKER_EXTRA_OBJS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_CONF_PATH\\)#$TARGET_CONF_PATH#g\" Makefile\nmake $1 $2\n\ncd ../storage\ncp Makefile.in Makefile\nperl -pi -e \"s#\\\\\\$\\(CFLAGS\\)#$CFLAGS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(LIBS\\)#$LIBS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_PREFIX\\)#$TARGET_PREFIX#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(STORAGE_EXTRA_OBJS\\)#$STORAGE_EXTRA_OBJS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_CONF_PATH\\)#$TARGET_CONF_PATH#g\" Makefile\nmake $1 $2\n\ncd ../client\ncp Makefile.in Makefile\nperl -pi -e \"s#\\\\\\$\\(CFLAGS\\)#$CFLAGS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(LIBS\\)#$LIBS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_PREFIX\\)#$TARGET_PREFIX#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(LIB_VERSION\\)#$LIB_VERSION#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_CONF_PATH\\)#$TARGET_CONF_PATH#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(ENABLE_STATIC_LIB\\)#$ENABLE_STATIC_LIB#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(ENABLE_SHARED_LIB\\)#$ENABLE_SHARED_LIB#g\" Makefile\n\ncp fdfs_link_library.sh.in fdfs_link_library.sh\nperl -pi -e \"s#\\\\\\$\\(TARGET_PREFIX\\)#$TARGET_PREFIX#g\" fdfs_link_library.sh\nmake $1 $2\n\ncd test\ncp Makefile.in Makefile\nperl -pi -e \"s#\\\\\\$\\(CFLAGS\\)#$CFLAGS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(LIBS\\)#$LIBS#g\" Makefile\nperl -pi -e \"s#\\\\\\$\\(TARGET_PREFIX\\)#$TARGET_PREFIX#g\" Makefile\ncd ..\n\ncopy_file()\n{\n    src=$1\n    dest=$2\n\n        if [ ! -f $TARGET_CONF_PATH/tracker.conf ]; then\n          cp -f conf/tracker.conf $TARGET_CONF_PATH/tracker.conf\n        fi\n}\n\nif [ \"$1\" = \"install\" ]; then\n  cd ..\n  if [ \"$uname\" = \"Linux\" ]; then\n    if [ \"$WITH_LINUX_SERVICE\" = \"1\" ]; then\n      if [ ! -d $TARGET_CONF_PATH ]; then\n        mkdir -p $TARGET_CONF_PATH\n        cp -f conf/tracker.conf $TARGET_CONF_PATH/tracker.conf\n        cp -f conf/storage.conf $TARGET_CONF_PATH/storage.conf\n        cp -f conf/client.conf $TARGET_CONF_PATH/client.conf\n        cp -f conf/storage_ids.conf $TARGET_CONF_PATH/storage_ids.conf\n        cp -f conf/http.conf $TARGET_CONF_PATH/http.conf\n        cp -f conf/mime.types $TARGET_CONF_PATH/mime.types\n      fi\n\n      if [ ! -f $TARGET_SYSTEMD_PATH/fdfs_trackerd.service ]; then\n        mkdir -p $TARGET_SYSTEMD_PATH\n        cp -f systemd/fdfs_trackerd.service $TARGET_SYSTEMD_PATH\n        cp -f systemd/fdfs_storaged.service $TARGET_SYSTEMD_PATH\n      fi\n    fi\n  fi\nfi\n"
        },
        {
          "name": "php_client",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.sh",
          "type": "blob",
          "size": 0.7451171875,
          "content": "\nif [ -n \"$1\" ]; then\n  TARGET_CONF_PATH=$1\nelse\n  TARGET_CONF_PATH=/etc/fdfs\nfi\n\nmkdir -p $TARGET_CONF_PATH\n\nif [ ! -f $TARGET_CONF_PATH/tracker.conf ]; then\n  cp -f conf/tracker.conf $TARGET_CONF_PATH/tracker.conf\nfi\n\nif [ ! -f $TARGET_CONF_PATH/storage.conf ]; then\n  cp -f conf/storage.conf $TARGET_CONF_PATH/storage.conf\nfi\n\nif [ ! -f $TARGET_CONF_PATH/client.conf ]; then\n  cp -f conf/client.conf $TARGET_CONF_PATH/client.conf\nfi\n\nif [ ! -f $TARGET_CONF_PATH/storage_ids.conf ]; then\n  cp -f conf/storage_ids.conf $TARGET_CONF_PATH/storage_ids.conf\nfi\n\nif [ ! -f $TARGET_CONF_PATH/http.conf ]; then\n  cp -f conf/http.conf $TARGET_CONF_PATH/http.conf\nfi\n\nif [ ! -f $TARGET_CONF_PATH/mime.types ]; then\n  cp -f conf/mime.types $TARGET_CONF_PATH/mime.types\nfi\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}