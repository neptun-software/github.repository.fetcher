{
  "metadata": {
    "timestamp": 1736710254613,
    "page": 6,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "libgit2/libgit2",
      "stars": 9772,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".HEADER",
          "type": "blob",
          "size": 1.1416015625,
          "content": "/*\n * This file is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2,\n * as published by the Free Software Foundation.\n *\n * In addition to the permissions in the GNU General Public License,\n * the authors give you unlimited permission to link the compiled\n * version of this file into combinations with other programs,\n * and to distribute those combinations without any restriction\n * coming from the use of this file.  (The General Public License\n * restrictions do apply in other respects; for example, they cover\n * modification of the file, and distribution when not linked into\n * a combined executable.)\n *\n * This file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; see the file COPYING.  If not, write to\n * the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n */\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.6767578125,
          "content": "# This file is an example configuration for clang-format 5.0.\n#\n# Note that this style definition should only be understood as a hint\n# for writing new code. The rules are still work-in-progress and does\n# not yet exactly match the style we have in the existing code.\n\n# C Language specifics\nLanguage: Cpp\n\n# Use tabs whenever we need to fill whitespace that spans at least from one tab\n# stop to the next one.\n#\n# These settings are mirrored in .editorconfig.  Keep them in sync.\nUseTab: ForIndentation\nTabWidth: 8\nIndentWidth: 8\nContinuationIndentWidth: 8\nColumnLimit: 80\n\nAlignAfterOpenBracket: AlwaysBreak\nAlignEscapedNewlines: Left\nAlignTrailingComments: false\n\n# Allow putting parameters onto the next line\nAllowAllArgumentsOnNextLine: false\nAllowAllParametersOfDeclarationOnNextLine: false\n\n# Don't allow short braced statements to be on a single line\n# if (a)           not       if (a) return;\n#   return;\nAllowShortBlocksOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortLoopsOnASingleLine: false\nAllowShortLambdasOnASingleLine: None\n\n# Pack as many parameters or arguments onto the same line as possible\n# int myFunction(int aaaaaaaaaaaa, int bbbbbbbb,\n#                int cccc);\nBinPackArguments: true\nBinPackParameters: false\n\nBreakBeforeBraces: Linux\nBreakBeforeBinaryOperators: None\nBreakBeforeTernaryOperators: false\nBreakStringLiterals: false\n\n# The number of spaces before trailing line comments (// - comments).\n# This does not affect trailing block comments (/* - comments).\nSpacesBeforeTrailingComments: 1\n\n# Don't insert spaces in casts\n# x = (int32) y;    not    x = ( int32 ) y;\nSpacesInCStyleCastParentheses: false\n\n# Don't insert spaces inside container literals\n# var arr = [1, 2, 3];    not    var arr = [ 1, 2, 3 ];\nSpacesInContainerLiterals: false\n\n# Don't insert spaces after '(' or before ')'\n# f(arg);    not    f( arg );\nSpacesInParentheses: false\n\n# Don't insert spaces after '[' or before ']'\n# int a[5];    not    int a[ 5 ];\nSpacesInSquareBrackets: false\n\n# Insert a space after '{' and before '}' in struct initializers\nCpp11BracedListStyle: false\n\n# A list of macros that should be interpreted as foreach loops instead of as\n# function calls.\nForEachMacros:\n  - 'git_array_foreach'\n  - 'git_vector_foreach'\n\n# The maximum number of consecutive empty lines to keep.\nMaxEmptyLinesToKeep: 1\n\n# No empty line at the start of a block.\nKeepEmptyLinesAtTheStartOfBlocks: false\n\n# Penalties\n# This decides what order things should be done if a line is too long\nPenaltyBreakAssignment: 10\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nSortIncludes: false\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.326171875,
          "content": "; Check http://editorconfig.org/ for more informations\nroot = true\n\n[*]\nindent_style = tab\ntab_width = 8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[*.md]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = false\n\n[*.py]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0966796875,
          "content": "* text=auto\nci/**/*.sh text eol=lf\nscript/**/*.sh text eol=lf\ntests/resources/** linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0615234375,
          "content": "/build/\n.DS_Store\n*~\n.*.swp\n/tags\nCMakeSettings.json\n.vs\n.idea\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.28125,
          "content": "Vicent Martí <vicent@github.com> Vicent Marti <tanoku@gmail.com>\nVicent Martí <vicent@github.com> Vicent Martí <tanoku@gmail.com>\nMichael Schubert <schu@schu.io> schu <schu-github@schulog.org>\nBen Straub <bs@github.com> Ben Straub <ben@straubnet.net>\nBen Straub <bs@github.com> Ben Straub <bstraub@github.com>\nCarlos Martín Nieto <cmn@dwim.me> <carlos@cmartin.tk>\nCarlos Martín Nieto <cmn@dwim.me> <cmn@elego.de>\nnulltoken <emeric.fermas@gmail.com> <emeric.fermas@gmail.com>\nScott J. Goldman <scottjg@github.com> <scottjgo@gmail.com>\nMartin Woodward <martin.woodward@microsoft.com> <martinwo@microsoft.com>\nPeter Drahoš <drahosp@gmail.com> <drahosp@gmail.com>\nAdam Roben <adam@github.com> <adam@roben.org>\nAdam Roben <adam@github.com> <adam@github.com>\nXavier L. <xavier.l@afrosoft.tk> <xavier.l@afrosoft.ca>\nXavier L. <xavier.l@afrosoft.tk> <xavier.l@afrosoft.tk>\nSascha Cunz <sascha@babbelbox.org> <Sascha@BabbelBox.org>\nAuthmillenon <authmillenon@googlemail.com> <martin@ucsmail.de>\nAuthmillenon <authmillenon@googlemail.com> <authmillenon@googlemail.com>\nEdward Thomson <ethomson@edwardthomson.com> <ethomson@microsoft.com>\nEdward Thomson <ethomson@edwardthomson.com> <ethomson@github.com>\nJ. David Ibáñez <jdavid.ibp@gmail.com> <jdavid@itaapy.com>\nRussell Belfer <rb@github.com> <arrbee@arrbee.com>\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.2734375,
          "content": "The following people contribute or have contributed\nto the libgit2 project (sorted alphabetically):\n\nAlex Budovski\nAlexei Sholik\nAndreas Ericsson\nAnton \"antong\" Gyllenberg\nAnkur Sethi\nArthur Schreiber\nBen Noordhuis\nBen Straub\nBenjamin C Meyer\nBrian Downing\nBrian Lopez\nCarlos Martín Nieto\nColin Timmermans\nDaniel Huckstep\nDave Borowitz\nDavid Boyce\nDavid Glesser\nDmitry Kakurin\nDmitry Kovega\nEmeric Fermas\nEmmanuel Rodriguez\nEric Myhre\nErik Aigner\nFlorian Forster\nHolger Weiss\nIngmar Vanhassel\nJ. David Ibáñez\nJacques Germishuys\nJakob Pfender\nJason Penny\nJason R. McNeil\nJerome Lambourg\nJohan 't Hart\nJohn Wiegley\nJonathan \"Duke\" Leto\nJulien Miotte\nJulio Espinoza-Sokal\nJustin Love\nKelly \"kelly.leahy\" Leahy\nKirill A. Shutemov\nLambert CLARA\nLuc Bertrand\nMarc Pegon\nMarcel Groothuis\nMarco Villegas\nMichael \"schu\" Schubert\nMicrosoft Corporation\nOlivier Ramonat\nPeter Drahoš\nPierre Habouzit\nPierre-Olivier Latour\nPrzemyslaw Pawelczyk\nRamsay Jones\nRobert G. Jakabosky\nRomain Geissler\nRomain Muller\nRussell Belfer\nSakari Jokinen\nSamuel Charles \"Sam\" Day\nSarath Lakshman\nSascha Cunz\nSascha Peilicke\nScott Chacon\nSebastian Schuberth\nSergey Nikishin\nShawn O. Pearce\nShuhei Tanuma\nSteve Frécinaux\nSven Strickroth\nTim Branyen\nTim Clem\nTim Harder\nTorsten Bögershausen\nTrent Mick\nVenus Xeon-Blonde\nVicent Marti\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.0859375,
          "content": "# libgit2: the cross-platform, linkable library implementation of git.\n# See `README.md` for build instructions.\n#\n# This top-level CMakeLists.txt sets up configuration options and\n# determines which subprojects to build.\n\ncmake_minimum_required(VERSION 3.5.1)\n\nproject(libgit2 VERSION \"1.9.0\" LANGUAGES C)\n\n# Add find modules to the path\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${PROJECT_SOURCE_DIR}/cmake\")\n\n#\n# Build options\n#\n\n# Experimental features\noption(EXPERIMENTAL_SHA256     \"Enable experimental SHA256 support (for R&D/testing)\"  OFF)\n\n# Optional subsystems\noption(BUILD_SHARED_LIBS       \"Build Shared Library (OFF for Static)\"                  ON)\noption(BUILD_TESTS             \"Build Tests using the Clar suite\"                       ON)\noption(BUILD_CLI               \"Build the command-line interface\"                       ON)\noption(BUILD_EXAMPLES          \"Build library usage example apps\"                      OFF)\noption(BUILD_FUZZERS           \"Build the fuzz targets\"                                OFF)\n\n# Feature enablement and backend selection\n   set(USE_THREADS             \"\" CACHE STRING \"Use threads for parallel processing when possible. One of ON, OFF, or a specific provider: pthreads or win32. (Defaults to ON.)\")\n   set(USE_SSH                 \"\" CACHE STRING \"Enables SSH support and optionally selects provider. One of ON, OFF, or a specific provider: libssh2 or exec. (Defaults to OFF.)\")\n   set(USE_HTTPS               \"\" CACHE STRING \"Enable HTTPS support and optionally selects the provider. One of ON, OFF, or a specific provider: OpenSSL, OpenSSL-FIPS, OpenSSL-Dynamic, mbedTLS, SecureTransport, Schannel, or WinHTTP. (Defaults to ON.)\")\n   set(USE_SHA1                \"\" CACHE STRING \"Selects SHA1 provider. One of builtin, HTTPS, or a specific provider. (Defaults to builtin.)\")\n   set(USE_SHA256              \"\" CACHE STRING \"Selects SHA256 provider. One of Builtin, HTTPS, or a specific provider. (Defaults to HTTPS.)\")\n   set(USE_HTTP_PARSER         \"\" CACHE STRING \"Selects HTTP Parser support: http-parser, llhttp, or builtin. (Defaults to builtin.)\")\n   set(USE_AUTH_NTLM           \"\" CACHE STRING \"Enables NTLM authentication support. One of Builtin or win32.\")\n   set(USE_AUTH_NEGOTIATE      \"\" CACHE STRING \"Enable Negotiate (SPNEGO) authentication support. One of GSSAPI or win32.\")\n#  set(USE_XDIFF               \"\" CACHE STRING \"Specifies the xdiff implementation; either system or builtin.\")\n   set(USE_REGEX               \"\" CACHE STRING \"Selects regex provider. One of regcomp_l, pcre2, pcre, regcomp, or builtin.\")\n   set(USE_COMPRESSION         \"\" CACHE STRING \"Selects compression backend. Either builtin or zlib.\")\n   set(USE_NSEC                \"\" CACHE STRING \"Enable nanosecond precision timestamps. One of ON, OFF, or a specific provider: mtimespec, mtim, mtime, or win32. (Defaults to ON).\")\n\nif(APPLE)\n\t# Currently only available on macOS for `precomposeUnicode` support\n\tset(USE_I18N            \"\" CACHE STRING \"Enables internationalization support.\")\nendif()\n\n# Debugging options\n   set(DEBUG_LEAK_CHECKER      \"\" CACHE STRING \"Configure for leak checking test runs. One of valgrind, leaks, or win32. Either valgrind or leaks.\")\noption(USE_STANDALONE_FUZZERS  \"Enable standalone fuzzers (compatible with gcc)\"       OFF)\noption(DEBUG_POOL              \"Enable debug pool allocator\"                           OFF)\noption(DEBUG_STRICT_ALLOC      \"Enable strict allocator behavior\"                      OFF)\noption(DEBUG_STRICT_OPEN       \"Enable path validation in open\"                        OFF)\n\n# Output options\noption(SONAME                  \"Set the (SO)VERSION of the target\"                      ON)\n   set(LIBGIT2_FILENAME        \"git2\" CACHE STRING \"Name of the produced binary\")\noption(DEPRECATE_HARD          \"Do not include deprecated functions in the library\"    OFF)\n\n# Compilation options\n# Default to c99 on Android Studio for compatibility; c90 everywhere else\nif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Android\")\n   set(CMAKE_C_STANDARD        \"99\" CACHE STRING \"The C standard to compile against\")\nelse()\n   set(CMAKE_C_STANDARD        \"90\" CACHE STRING \"The C standard to compile against\")\nendif()\noption(CMAKE_C_EXTENSIONS      \"Whether compiler extensions are supported\"             OFF)\noption(ENABLE_WERROR           \"Enable compilation with -Werror\"                       OFF)\n\nif(UNIX)\n\toption(ENABLE_REPRODUCIBLE_BUILDS \"Enable reproducible builds\"                 OFF)\nendif()\n\nif(MSVC)\n\t# This option must match the settings used in your program, in particular if you\n\t# are linking statically\n\toption(STATIC_CRT          \"Link the static CRT libraries\"                      ON)\nendif()\n\nif(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)\n\tset(CMAKE_BUILD_TYPE \"Debug\" CACHE STRING \"Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel.\" FORCE)\nendif()\n\n\n# Modules\n\ninclude(FeatureSummary)\ninclude(CheckLibraryExists)\ninclude(CheckFunctionExists)\ninclude(CheckSymbolExists)\ninclude(CheckStructHasMember)\ninclude(CheckPrototypeDefinitionSafe)\ninclude(AddCFlagIfSupported)\ninclude(FindPkgLibraries)\ninclude(FindThreads)\ninclude(FindStatNsec)\ninclude(Findfutimens)\ninclude(GNUInstallDirs)\ninclude(IdeSplitSources)\ninclude(EnableWarnings)\ninclude(DefaultCFlags)\ninclude(ExperimentalFeatures)\n\n\n#\n# Subdirectories\n#\n\nadd_subdirectory(src)\n\nif(BUILD_TESTS)\n\tenable_testing()\n\tadd_subdirectory(tests)\nendif()\n\nif(BUILD_EXAMPLES)\n\tadd_subdirectory(examples)\nendif()\n\nif(BUILD_FUZZERS)\n\tif((BUILD_TESTS OR BUILD_EXAMPLES) AND NOT USE_STANDALONE_FUZZERS)\n\t\tmessage(FATAL_ERROR \"Cannot build the fuzzer and the tests or examples together\")\n\tendif()\n\tadd_subdirectory(fuzzers)\nendif()\n\n\n# Export for people who use us as a dependency\n\nif(NOT \"${CMAKE_CURRENT_SOURCE_DIR}\" STREQUAL \"${CMAKE_SOURCE_DIR}\")\n\tset(LIBGIT2_DEPENDENCY_OBJECTS ${LIBGIT2_DEPENDENCY_OBJECTS} PARENT_SCOPE)\n\tset(LIBGIT2_SYSTEM_LIBS ${LIBGIT2_SYSTEM_LIBS} PARENT_SCOPE)\nendif()\n\n\n# Summary\n\nfeature_summary(WHAT ENABLED_FEATURES DESCRIPTION \"Enabled features:\")\nfeature_summary(WHAT DISABLED_FEATURES DESCRIPTION \"Disabled features:\")\n\n# warn for not using sha1dc\n\nforeach(WARNING ${WARNINGS})\n\tmessage(WARNING ${WARNING})\nendforeach()\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 68.92578125,
          "content": " libgit2 is Copyright (C) the libgit2 contributors,\n unless otherwise stated. See the AUTHORS file for details.\n\n Note that the only valid version of the GPL as far as this project\n is concerned is _this_ particular version of the license (ie v2, not\n v2.2 or v3.x or whatever), unless explicitly otherwise stated.\n\n----------------------------------------------------------------------\n\n\t\t\tLINKING EXCEPTION\n\n In addition to the permissions in the GNU General Public License,\n the authors give you unlimited permission to link the compiled\n version of this library into combinations with other programs,\n and to distribute those combinations without any restriction\n coming from the use of this file.  (The General Public License\n restrictions do apply in other respects; for example, they cover\n modification of the file, and distribution when not linked into\n a combined executable.)\n\n----------------------------------------------------------------------\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n\n----------------------------------------------------------------------\n\nThe bundled ZLib code is licensed under the ZLib license:\n\n (C) 1995-2022 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n\n----------------------------------------------------------------------\n\nThe Clar framework is licensed under the ISC license:\n\nCopyright (c) 2011-2015 Vicent Marti\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n----------------------------------------------------------------------\n\nThe bundled PCRE implementation (deps/pcre/) is licensed under the BSD\nlicense.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the name of the University of Cambridge nor the name of Google\n      Inc. nor the names of their contributors may be used to endorse or\n      promote products derived from this software without specific prior\n      written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\n\nThe bundled winhttp definition files (deps/winhttp/) are licensed under\nthe GNU LGPL (available at the end of this file).\n\nCopyright (C) 2007 Francois Gouget\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n\n----------------------------------------------------------------------\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n----------------------------------------------------------------------\n\nThe bundled SHA1 collision detection code is licensed under the MIT license:\n\nMIT License\n\nCopyright (c) 2017:\n    Marc Stevens\n    Cryptology Group\n    Centrum Wiskunde & Informatica\n    P.O. Box 94079, 1090 GB Amsterdam, Netherlands\n    marc@marc-stevens.nl\n\n    Dan Shumow\n    Microsoft Research\n    danshu@microsoft.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n----------------------------------------------------------------------\n\nThe bundled wildmatch code is licensed under the BSD license:\n\nCopyright Rich Salz.\nAll rights reserved.\n\nRedistribution and use in any form are permitted provided that the\nfollowing restrictions are are met:\n\n1.  Source distributions must retain this entire copyright notice\n    and comment.\n2.  Binary distributions must include the acknowledgement ``This\n    product includes software developed by Rich Salz'' in the\n    documentation or other materials provided with the\n    distribution.  This must not be represented as an endorsement\n   or promotion without specific prior written permission.\n3.  The origin of this software must not be misrepresented, either\n    by explicit claim or by omission.  Credits must appear in the\n    source and documentation.\n4.  Altered versions must be plainly marked as such in the source\n    and documentation and must not be misrepresented as being the\n    original software.\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n\n----------------------------------------------------------------------\n\nPortions of the OpenSSL headers are included under the OpenSSL license:\n\nCopyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\nAll rights reserved.\n\nThis package is an SSL implementation written\nby Eric Young (eay@cryptsoft.com).\nThe implementation was written so as to conform with Netscapes SSL.\n\nThis library is free for commercial and non-commercial use as long as\nthe following conditions are aheared to.  The following conditions\napply to all code found in this distribution, be it the RC4, RSA,\nlhash, DES, etc., code; not just the SSL code.  The SSL documentation\nincluded with this distribution is covered by the same copyright terms\nexcept that the holder is Tim Hudson (tjh@cryptsoft.com).\n\nCopyright remains Eric Young's, and as such any Copyright notices in\nthe code are not to be removed.\nIf this package is used in a product, Eric Young should be given attribution\nas the author of the parts of the library used.\nThis can be in the form of a textual message at program startup or\nin documentation (online or textual) provided with the package.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n   \"This product includes cryptographic software written by\n    Eric Young (eay@cryptsoft.com)\"\n   The word 'cryptographic' can be left out if the rouines from the library\n   being used are not cryptographic related :-).\n4. If you include any Windows specific code (or a derivative thereof) from\n   the apps directory (application code) you must include an acknowledgement:\n   \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n\nTHIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\nThe licence and distribution terms for any publically available version or\nderivative of this code cannot be changed.  i.e. this code cannot simply be\ncopied and put under another distribution licence\n[including the GNU Public Licence.]\n\n====================================================================\nCopyright (c) 1998-2007 The OpenSSL Project.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in\n   the documentation and/or other materials provided with the\n   distribution.\n\n3. All advertising materials mentioning features or use of this\n   software must display the following acknowledgment:\n   \"This product includes software developed by the OpenSSL Project\n   for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n\n4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n   endorse or promote products derived from this software without\n   prior written permission. For written permission, please contact\n   openssl-core@openssl.org.\n\n5. Products derived from this software may not be called \"OpenSSL\"\n   nor may \"OpenSSL\" appear in their names without prior written\n   permission of the OpenSSL Project.\n\n6. Redistributions of any form whatsoever must retain the following\n   acknowledgment:\n   \"This product includes software developed by the OpenSSL Project\n   for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n\nTHIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY\nEXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\nITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\n\nThe xoroshiro256** implementation is licensed in the public domain:\n\nWritten in 2018 by David Blackman and Sebastiano Vigna (vigna@acm.org)\n\nTo the extent possible under law, the author has dedicated all copyright\nand related and neighboring rights to this software to the public domain\nworldwide. This software is distributed without any warranty.\n\nSee <http://creativecommons.org/publicdomain/zero/1.0/>.\n\n----------------------------------------------------------------------\n\nThe built-in SHA256 support (src/hash/rfc6234) is taken from RFC 6234\nunder the following license:\n\nCopyright (c) 2011 IETF Trust and the persons identified as\nauthors of the code.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or\nwithout modification, are permitted provided that the following\nconditions are met:\n\n- Redistributions of source code must retain the above\n  copyright notice, this list of conditions and\n  the following disclaimer.\n\n- Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following\n  disclaimer in the documentation and/or other materials provided\n  with the distribution.\n\n- Neither the name of Internet Society, IETF or IETF Trust, nor\n  the names of specific contributors, may be used to endorse or\n  promote products derived from this software without specific\n  prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\n\nThe built-in git_fs_path_basename_r() function is based on the\nAndroid implementation, BSD licensed:\n\nCopyright (C) 2008 The Android Open Source Project\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in\n  the documentation and/or other materials provided with the\n  distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\nAS IS AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\nFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS\nOF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\nAND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n----------------------------------------------------------------------\n\nThe bundled ntlmclient code is licensed under the MIT license:\n\nCopyright (c) Edward Thomson.  All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n----------------------------------------------------------------------\n\nPortions of this software derived from Team Explorer Everywhere:\n\nCopyright (c) Microsoft Corporation\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n---------------------------------------------------------------------------\n\nPortions of this software derived from the LLVM Compiler Infrastructure:\n\nCopyright (c) 2003-2016 University of Illinois at Urbana-Champaign.\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\n---------------------------------------------------------------------------\n\nPortions of this software derived from Unicode, Inc:\n\nCopyright 2001-2004 Unicode, Inc.\n\nDisclaimer\n\nThis source code is provided as is by Unicode, Inc. No claims are\nmade as to fitness for any particular purpose. No warranties of any\nkind are expressed or implied. The recipient agrees to determine\napplicability of information provided. If this file has been\npurchased on magnetic or optical media from Unicode, Inc., the\nsole remedy for any claim will be exchange of defective media\nwithin 90 days of receipt.\n\nLimitations on Rights to Redistribute This Code\n\nUnicode, Inc. hereby grants the right to freely use the information\nsupplied in this file in the creation of products supporting the\nUnicode Standard, and to make copies of this file in any form\nfor internal or external distribution as long as this notice\nremains attached.\n\n---------------------------------------------------------------------------\n\nPortions of this software derived from sheredom/utf8.h:\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org/>\n\n---------------------------------------------------------------------------\n\nPortions of this software derived from RFC 1320:\n\nCopyright (C) 1990-2, RSA Data Security, Inc. All rights reserved.\n\nLicense to copy and use this software is granted provided that it\nis identified as the \"RSA Data Security, Inc. MD4 Message-Digest\nAlgorithm\" in all material mentioning or referencing this software\nor this function.\n\nLicense is also granted to make and use derivative works provided\nthat such works are identified as \"derived from the RSA Data\nSecurity, Inc. MD4 Message-Digest Algorithm\" in all material\nmentioning or referencing the derived work.\n\nRSA Data Security, Inc. makes no representations concerning either\nthe merchantability of this software or the suitability of this\nsoftware for any particular purpose. It is provided \"as is\"\nwithout express or implied warranty of any kind.\n\nThese notices must be retained in any copies of any part of this\ndocumentation and/or software.\n\n----------------------------------------------------------------------\n\nThe bundled llhttp dependency is licensed under the MIT license:\n\nCopyright Fedor Indutny, 2018.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "FUNDING.json",
          "type": "blob",
          "size": 0.1044921875,
          "content": "{\n  \"drips\": {\n    \"ethereum\": {\n      \"ownedBy\": \"0x939121dD13f796C69d0Ac4185787285518081f8D\"\n    }\n  }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.3447265625,
          "content": "libgit2 - the Git linkable library\n==================================\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9609/badge)](https://www.bestpractices.dev/projects/9609)\n\n| Build Status | |\n| ------------ | - |\n| **main** branch builds | [![CI Build](https://github.com/libgit2/libgit2/actions/workflows/main.yml/badge.svg?branch=main&event=push)](https://github.com/libgit2/libgit2/actions/workflows/main.yml?query=event%3Apush+branch%3Amain) [![Experimental Features](https://github.com/libgit2/libgit2/actions/workflows/experimental.yml/badge.svg?branch=main)](https://github.com/libgit2/libgit2/actions/workflows/experimental.yml?query=event%3Apush+branch%3Amain) |\n| **v1.9 branch** builds | [![CI Build](https://github.com/libgit2/libgit2/actions/workflows/main.yml/badge.svg?branch=maint%2Fv1.9&event=push)](https://github.com/libgit2/libgit2/actions/workflows/main.yml?query=event%3Apush+branch%3Amaint%2Fv1.9) [![Experimental Features](https://github.com/libgit2/libgit2/actions/workflows/experimental.yml/badge.svg?branch=maint%2Fv1.9)](https://github.com/libgit2/libgit2/actions/workflows/experimental.yml?query=event%3Apush+branch%3Amaint%2Fv1.9) |\n| **v1.8 branch** builds | [![CI Build](https://github.com/libgit2/libgit2/actions/workflows/main.yml/badge.svg?branch=maint%2Fv1.8&event=push)](https://github.com/libgit2/libgit2/actions/workflows/main.yml?query=event%3Apush+branch%3Amaint%2Fv1.8) [![Experimental Features](https://github.com/libgit2/libgit2/actions/workflows/experimental.yml/badge.svg?branch=maint%2Fv1.8)](https://github.com/libgit2/libgit2/actions/workflows/experimental.yml?query=event%3Apush+branch%3Amaint%2Fv1.8) |\n| **Nightly** builds | [![Nightly Build](https://github.com/libgit2/libgit2/actions/workflows/nightly.yml/badge.svg?branch=main&event=schedule)](https://github.com/libgit2/libgit2/actions/workflows/nightly.yml) [![Coverity Scan Status](https://scan.coverity.com/projects/639/badge.svg)](https://scan.coverity.com/projects/639) |\n\n`libgit2` is a portable, pure C implementation of the Git core methods\nprovided as a linkable library with a solid API, allowing to build Git\nfunctionality into your application.\n\n`libgit2` is used in a variety of places, from GUI clients to hosting\nproviders (\"forges\") and countless utilities and applications in\nbetween. Because it's written in C, it can be made available to any\nother programming language through \"bindings\", so you can use it in\n[Ruby](https://github.com/libgit2/rugged),\n[.NET](https://github.com/libgit2/libgit2sharp),\n[Python](http://www.pygit2.org/),\n[Node.js](http://nodegit.org),\n[Rust](https://github.com/rust-lang/git2-rs), and more.\n\n`libgit2` is licensed under a **very permissive license** (GPLv2 with\na special Linking Exception). This means that you can link against\nthe library with any kind of software without making that software\nfall under the GPL. Changes to libgit2 would still be covered under\nits GPL license.\n\nTable of Contents\n=================\n\n* [Using libgit2](#using-libgit2)\n* [Quick Start](#quick-start)\n* [Getting Help](#getting-help)\n* [What It Can Do](#what-it-can-do)\n* [Optional dependencies](#optional-dependencies)\n* [Initialization](#initialization)\n* [Threading](#threading)\n* [Conventions](#conventions)\n* [Building libgit2 - Using CMake](#building-libgit2---using-cmake)\n    * [Building](#building)\n    * [Installation](#installation)\n    * [Advanced Usage](#advanced-usage)\n    * [Compiler and linker options](#compiler-and-linker-options)\n    * [macOS](#macos)\n    * [iOS](#ios)\n    * [Android](#android)\n    * [MinGW](#mingw)\n* [Language Bindings](#language-bindings)\n* [How Can I Contribute?](#how-can-i-contribute)\n* [License](#license)\n\nUsing libgit2\n=============\n\nMost of these instructions assume that you're writing an application\nin C and want to use libgit2 directly.  If you're _not_ using C,\nand you're writing in a different language or platform like .NET,\nNode.js, or Ruby, then there is probably a\n\"[language binding](#language-bindings)\" that you can use to take care\nof the messy tasks of calling into native code.\n\nBut if you _do_ want to use libgit2 directly - because you're building\nan application in C - then you may be able use an existing binary.\nThere are packages for the\n[vcpkg](https://github.com/Microsoft/vcpkg) and\n[conan](https://conan.io/center/recipes/libgit2)\npackage managers.  And libgit2 is available in \n[Homebrew](https://formulae.brew.sh/formula/libgit2) and most Linux\ndistributions.\n\nHowever, these versions _may_ be outdated and we recommend using the\nlatest version if possible.  Thankfully libgit2 is not hard to compile.\n\nQuick Start\n===========\n\n**Prerequisites** for building libgit2:\n\n1. [CMake](https://cmake.org/), and is recommended to be installed into\n   your `PATH`.\n2. [Python](https://www.python.org) is used by our test framework, and\n   should be installed into your `PATH`.\n3. C compiler: libgit2 is C90 and should compile on most compilers.\n   * Windows: Visual Studio is recommended\n   * Mac: Xcode is recommended\n   * Unix: gcc or clang is recommended.\n\n**Build**\n\n1. Create a build directory beneath the libgit2 source directory,\n   and change into it: `mkdir build && cd build`\n2. Create the cmake build environment: `cmake ..`\n3. Build libgit2: `cmake --build .`\n\nTrouble with these steps?  Read our [troubleshooting guide](docs/troubleshooting.md).\nMore detailed build guidance is available below.\n\nGetting Help\n============\n\n**Chat with us**\n\n- via IRC: join [#libgit2](https://web.libera.chat/#libgit2) on\n  [libera](https://libera.chat).\n- via Slack: visit [slack.libgit2.org](http://slack.libgit2.org/)\n  to sign up, then join us in `#libgit2`\n\n**Getting Help**\n\nIf you have questions about the library, please be sure to check out the\n[API documentation](https://libgit2.org/libgit2/).  If you still have\nquestions, reach out to us on Slack or post a question on \n[StackOverflow](http://stackoverflow.com/questions/tagged/libgit2)\n(with the `libgit2` tag).\n\n**Reporting Bugs**\n\nPlease open a [GitHub Issue](https://github.com/libgit2/libgit2/issues)\nand include as much information as possible.  If possible, provide\nsample code that illustrates the problem you're seeing.  If you're\nseeing a bug only on a specific repository, please provide a link to\nit if possible.\n\nWe ask that you not open a GitHub Issue for help, only for bug reports.\n\n**Reporting Security Issues**\n\nPlease have a look at SECURITY.md.\n\nWhat It Can Do\n==============\n\nlibgit2 provides you with the ability to manage Git repositories in the\nprogramming language of your choice.  It's used in production to power many\napplications including GitHub.com, Plastic SCM and Azure DevOps.\n\nIt does not aim to replace the git tool or its user-facing commands. Some\nAPIs resemble the plumbing commands as those align closely with the\nconcepts of the Git system, but most commands a user would type are out\nof scope for this library to implement directly.\n\nThe library provides:\n\n* SHA conversions, formatting and shortening\n* abstracted ODB backend system\n* commit, tag, tree and blob parsing, editing, and write-back\n* tree traversal\n* revision walking\n* index file (staging area) manipulation\n* reference management (including packed references)\n* config file management\n* high level repository management\n* thread safety and reentrancy\n* descriptive and detailed error messages\n* ...and more (over 175 different API calls)\n\nAs libgit2 is purely a consumer of the Git system, we have to\nadjust to changes made upstream. This has two major consequences:\n\n* Some changes may require us to change provided interfaces. While\n  we try to implement functions in a generic way so that no future\n  changes are required, we cannot promise a completely stable API.\n* As we have to keep up with changes in behavior made upstream, we\n  may lag behind in some areas. We usually to document these\n  incompatibilities in our issue tracker with the label \"git change\".\n\nOptional dependencies\n=====================\n\nWhile the library provides git functionality with very few\ndependencies, some recommended dependencies are used for performance\nor complete functionality.\n\n- Hash generation: Git uses SHA1DC (collision detecting SHA1) for\n  its default hash generation. SHA256 support is experimental, and\n  optimized support is provided by system libraries on macOS and\n  Windows, or by the HTTPS library on Unix systems when available.\n- Threading: is provided by the system libraries on Windows, and\n  pthreads on Unix systems.\n- HTTPS: is provided by the system libraries on macOS and Windows,\n  or by OpenSSL or mbedTLS on other Unix systems.\n- SSH: is provided by [libssh2](https://libssh2.org/) or by invoking\n  [OpenSSH](https://www.openssh.com).\n- Unicode: is provided by the system libraries on Windows and macOS.\n\nInitialization\n===============\n\nThe library needs to keep track of some global state. Call\n\n    git_libgit2_init();\n\nbefore calling any other libgit2 functions. You can call this function many times. A matching number of calls to\n\n    git_libgit2_shutdown();\n\nwill free the resources.  Note that if you have worker threads, you should\ncall `git_libgit2_shutdown` *after* those threads have exited.  If you\nrequire assistance coordinating this, simply have the worker threads call\n`git_libgit2_init` at startup and `git_libgit2_shutdown` at shutdown.\n\nThreading\n=========\n\nSee [threading](docs/threading.md) for information\n\nConventions\n===========\n\nSee [conventions](docs/conventions.md) for an overview of the external\nand internal API/coding conventions we use.\n\nBuilding libgit2 - Using CMake\n==============================\n\nBuilding\n--------\n\n`libgit2` builds cleanly on most platforms without any external\ndependencies as a requirement. `libgit2` is built using\n[CMake](<https://cmake.org/>) (version 2.8 or newer) on all platforms.\n\nOn most systems you can build the library using the following commands\n\n\t$ mkdir build && cd build\n\t$ cmake ..\n\t$ cmake --build .\n\nTo include the examples in the build, use `cmake -DBUILD_EXAMPLES=ON ..`\ninstead of `cmake ..`. The built executable for the examples can then\nbe found in `build/examples`, relative to the toplevel directory.\n\nAlternatively you can point the CMake GUI tool to the CMakeLists.txt file and generate platform specific build project or IDE workspace.\n\nIf you're not familiar with CMake, [a more detailed explanation](https://preshing.com/20170511/how-to-build-a-cmake-based-project/) may be helpful.\n\nAdvanced Options\n----------------\n\nYou can specify a number of options to `cmake` that will change the\nway `libgit2` is built. To use this, specify `-Doption=value` during\nthe initial `cmake` configuration. For example, to enable SHA256\ncompatibility:\n\n\t$ mkdir build && cd build\n\t$ cmake -DEXPERIMENTAL_SHA256=ON ..\n\t$ cmake --build .\n\nlibgit2 options:\n\n* `EXPERIMENTAL_SHA256=ON`: turns on SHA256 compatibility; note that\n  this is an API-incompatible change, hence why it is labeled\n  \"experimental\"\n\nBuild options:\n\n* `BUILD_EXAMPLES=ON`: builds the suite of example code\n* `BUILD_FUZZERS=ON`: builds the fuzzing suite\n* `ENABLE_WERROR=ON`: build with `-Werror` or the equivalent, which turns\n  compiler warnings into errors in the libgit2 codebase (but not its\n  dependencies)\n\nDependency options:\n\n* `USE_SSH=type`: enables SSH support and optionally selects the provider;\n  `type` can be set to `libssh2` or `exec` (which will execute an external\n  OpenSSH command). `ON` implies `libssh2`; defaults to `OFF`.\n* `USE_HTTPS=type`: enables HTTPS support and optionally selects the\n  provider; `type` can be set to `OpenSSL`, `OpenSSL-Dynamic` (to not\n  link against OpenSSL, but load it dynamically), `SecureTransport`,\n  `Schannel` or `WinHTTP`; the default is `SecureTransport` on macOS,\n  `WinHTTP` on Windows, and whichever of `OpenSSL` or `mbedTLS` is\n  detected on other platforms. Defaults to `ON`.\n* `USE_SHA1=type`: selects the SHA1 mechanism to use; `type` can be set\n  to `CollisionDetection`, `HTTPS` to use the system or HTTPS provider,\n  or one of `OpenSSL`, `OpenSSL-Dynamic`, `OpenSSL-FIPS` (to use FIPS\n  compliant routines in OpenSSL), `CommonCrypto`, or `Schannel`.\n  Defaults to `CollisionDetection`. This option is retained for\n  backward compatibility and should not be changed.\n* `USE_SHA256=type`: selects the SHA256 mechanism to use; `type` can be\n  set to `HTTPS` to use the system or HTTPS driver, `builtin`, or one of\n  `OpenSSL`, `OpenSSL-Dynamic`, `OpenSSL-FIPS` (to use FIPS compliant\n  routines in OpenSSL), `CommonCrypto`, or `Schannel`. Defaults to `HTTPS`.\n* `USE_GSSAPI=<on/off>`: enables GSSAPI for SPNEGO authentication on\n  Unix. Defaults to `OFF`.\n* `USE_HTTP_PARSER=type`: selects the HTTP Parser; either `http-parser`\n  for an external\n  [`http-parser`](https://github.com/nodejs/http-parser) dependency,\n  `llhttp` for an external [`llhttp`](https://github.com/nodejs/llhttp)\n  dependency, or `builtin`. Defaults to `builtin`.\n* `REGEX_BACKEND=type`: selects the regular expression backend to use;\n  one of `regcomp_l`, `pcre2`, `pcre`, `regcomp`, or `builtin`. The\n  default is to use `regcomp_l` where available, PCRE if found, otherwise,\n  to use the builtin.\n* `USE_BUNDLED_ZLIB=type`: selects the bundled zlib; either `ON` or `OFF`.\n  Defaults to using the system zlib if available, falling back to the\n  bundled zlib.\n\nLocating Dependencies\n---------------------\n\nThe `libgit2` project uses `cmake` since it helps with cross-platform\nprojects, especially those with many dependencies. If your dependencies\nare in non-standard places, you may want to use the `_ROOT_DIR` options\nto specify their location. For example, to specify an OpenSSL location:\n\n\t$ cmake -DOPENSSL_ROOT_DIR=/tmp/openssl-3.3.2 ..\n\nSince these options are general to CMake, their\n[documentation](https://cmake.org/documentation/) may be helpful. If\nyou have questions about dependencies, please [contact us](#getting-help).\n\nRunning Tests\n-------------\n\nOnce built, you can run the tests from the `build` directory with the command\n\n\t$ ctest -V\n\nAlternatively you can run the test suite directly using,\n\n\t$ ./libgit2_tests\n\nInvoking the test suite directly is useful because it allows you to execute\nindividual tests, or groups of tests using the `-s` flag.  For example, to\nrun the index tests:\n\n\t$ ./libgit2_tests -sindex\n\nTo run a single test named `index::racy::diff`, which corresponds to\nthe test function\n[`test_index_racy__diff`](https://github.com/libgit2/libgit2/blob/main/tests/index/racy.c#L23):\n\n\t$ ./libgit2_tests -sindex::racy::diff\n\nThe test suite will print a `.` for every passing test, and an `F` for any\nfailing test.  An `S` indicates that a test was skipped because it is not\napplicable to your platform or is particularly expensive.\n\n**Note:** There should be _no_ failing tests when you build an unmodified\nsource tree from a [release](https://github.com/libgit2/libgit2/releases),\nor from the [main branch](https://github.com/libgit2/libgit2/tree/main).\nPlease contact us or\n[open an issue](https://github.com/libgit2/libgit2/issues)\nif you see test failures.\n\nInstallation\n------------\n\nTo install the library you can specify the install prefix by setting:\n\n\t$ cmake .. -DCMAKE_INSTALL_PREFIX=/install/prefix\n\t$ cmake --build . --target install\n\nAdvanced Usage\n--------------\n\nFor more advanced use or questions about CMake please read the\n[CMake FAQ](https://cmake.org/Wiki/CMake_FAQ).\n\nThe following CMake variables are declared:\n\n- `CMAKE_INSTALL_BINDIR`: Where to install binaries to.\n- `CMAKE_INSTALL_LIBDIR`: Where to install libraries to.\n- `CMAKE_INSTALL_INCLUDEDIR`: Where to install headers to.\n- `BUILD_SHARED_LIBS`: Build libgit2 as a Shared Library (defaults to ON)\n- `BUILD_TESTS`: Build the unit and integration test suites (defaults to ON)\n- `USE_THREADS`: Build libgit2 with threading support (defaults to ON)\n\nTo list all build options and their current value, you can do the\nfollowing:\n\n\t# Create and set up a build directory\n\t$ mkdir build && cd build\n\t$ cmake ..\n\n\t# List all build options and their values\n\t$ cmake -L\n\nCompiler and linker options\n---------------------------\n\nThere are several options that control the behavior of the compiler and\nlinker. These flags may be useful for cross-compilation or specialized\nsetups.\n\n- `CMAKE_C_FLAGS`: Set your own compiler flags\n- `CMAKE_C_STANDARD`: the C standard to compile against; defaults to `C90`\n- `CMAKE_C_EXTENSIONS`: whether compiler extensions are supported; defaults to `OFF`\n- `CMAKE_FIND_ROOT_PATH`: Override the search path for libraries\n- `ZLIB_LIBRARY`, `OPENSSL_SSL_LIBRARY` AND `OPENSSL_CRYPTO_LIBRARY`:\nTell CMake where to find those specific libraries\n- `LINK_WITH_STATIC_LIBRARIES`: Link only with static versions of\nsystem libraries\n\nmacOS\n-------\n\nIf you'd like to work with Xcode, you can generate an Xcode project with \"-G Xcode\".\n\n\t# Create and set up a build directory\n\t$ mkdir build && cd build\n\t$ cmake -G Xcode ..\n\n> [!TIP]\n> Universal binary support:\n> \n> If you want to build a universal binary for macOS 11.0+, CMake sets it\n> all up for you if you use `-DCMAKE_OSX_ARCHITECTURES=\"x86_64;arm64\"`\n> when configuring.\n> \n> [Deprecated] If you want to build a universal binary for Mac OS X\n> (10.4.4 ~ 10.6), CMake sets it all up for you if you use\n> `-DCMAKE_OSX_ARCHITECTURES=\"i386;x86_64\"` when configuring.\n\niOS\n-------\n\n1. Get an iOS cmake toolchain File:\n\nYou can use a pre-existing toolchain file like [ios-cmake](https://github.com/leetal/ios-cmake) or write your own.\n\n2. Specify the toolchain and system Name:\n\n- The CMAKE_TOOLCHAIN_FILE variable points to the toolchain file for iOS.\n- The CMAKE_SYSTEM_NAME should be set to iOS.\n\n3. Example Command:\n\nAssuming you're using the ios-cmake toolchain, the command might look like this:\n\n```\ncmake -G Xcode -DCMAKE_TOOLCHAIN_FILE=path/to/ios.toolchain.cmake -DCMAKE_SYSTEM_NAME=iOS -DPLATFORM=OS64 ..\n```\n\n4. Build the Project:\n\nAfter generating the project, open the .xcodeproj file in Xcode, select your iOS device or simulator as the target, and build your project.\n\nAndroid\n-------\n\nExtract toolchain from NDK using, `make-standalone-toolchain.sh` script.\nOptionally, crosscompile and install OpenSSL inside of it. Then create CMake\ntoolchain file that configures paths to your crosscompiler (substitute `{PATH}`\nwith full path to the toolchain):\n\n\tSET(CMAKE_SYSTEM_NAME Linux)\n\tSET(CMAKE_SYSTEM_VERSION Android)\n\n\tSET(CMAKE_C_COMPILER   {PATH}/bin/arm-linux-androideabi-gcc)\n\tSET(CMAKE_CXX_COMPILER {PATH}/bin/arm-linux-androideabi-g++)\n\tSET(CMAKE_FIND_ROOT_PATH {PATH}/sysroot/)\n\n\tSET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\tSET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n\tSET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n\nAdd `-DCMAKE_TOOLCHAIN_FILE={pathToToolchainFile}` to cmake command\nwhen configuring.\n\nMinGW\n-----\n\nIf you want to build the library in MinGW environment with SSH support\nenabled, you may need to pass\n`-DCMAKE_LIBRARY_PATH=\"${MINGW_PREFIX}/${MINGW_CHOST}/lib/\"` flag\nto CMake when configuring. This is because CMake cannot find the\nWin32 libraries in MinGW folders by default and you might see an\nerror message stating that CMake could not resolve `ws2_32` library\nduring configuration.\n\nAnother option would be to install `msys2-w32api-runtime` package before\nconfiguring. This package installs the Win32 libraries into `/usr/lib`\nfolder which is by default recognized as the library path by CMake.\nPlease note though that this package is meant for MSYS subsystem which\nis different from MinGW.\n\nLanguage Bindings\n==================================\n\nHere are the bindings to libgit2 that are currently available:\n\n* C++\n    * libqgit2, Qt bindings <https://projects.kde.org/projects/playground/libs/libqgit2/repository/>\n* Chicken Scheme\n    * chicken-git <https://wiki.call-cc.org/egg/git>\n* D\n    * dlibgit <https://github.com/s-ludwig/dlibgit>\n* Delphi\n    * GitForDelphi <https://github.com/libgit2/GitForDelphi>\n    * libgit2-delphi <https://github.com/todaysoftware/libgit2-delphi>\n* Erlang\n    * Geef <https://github.com/carlosmn/geef>\n* Go\n    * git2go <https://github.com/libgit2/git2go>\n* GObject\n    * libgit2-glib <https://wiki.gnome.org/Projects/Libgit2-glib>\n* Guile\n\t* Guile-Git <https://gitlab.com/guile-git/guile-git>\n* Haskell\n    * hgit2 <https://github.com/jwiegley/gitlib>\n* Java\n    * Jagged <https://github.com/ethomson/jagged>\n    * Git24j <https://github.com/git24j/git24j>\n* Javascript / WebAssembly ( browser and nodejs )\n    * WASM-git <https://github.com/petersalomonsen/wasm-git>\n* Julia\n    * LibGit2.jl <https://github.com/JuliaLang/julia/tree/master/stdlib/LibGit2>\n* Lua\n    * luagit2 <https://github.com/libgit2/luagit2>\n* .NET\n    * libgit2sharp <https://github.com/libgit2/libgit2sharp>\n* Node.js\n    * nodegit <https://github.com/nodegit/nodegit>\n* Objective-C\n    * objective-git <https://github.com/libgit2/objective-git>\n* OCaml\n    * ocaml-libgit2 <https://github.com/fxfactorial/ocaml-libgit2>\n* Parrot Virtual Machine\n    * parrot-libgit2 <https://github.com/letolabs/parrot-libgit2>\n* Perl\n    * Git-Raw <https://github.com/jacquesg/p5-Git-Raw>\n* Pharo Smalltalk\n    * libgit2-pharo-bindings <https://github.com/pharo-vcs/libgit2-pharo-bindings>\n* PHP\n    * php-git2 <https://github.com/RogerGee/php-git2>\n* Python\n    * pygit2 <https://github.com/libgit2/pygit2>\n* R\n    * gert <https://docs.ropensci.org/gert>\n    * git2r <https://github.com/ropensci/git2r>\n* Ruby\n    * Rugged <https://github.com/libgit2/rugged>\n* Rust\n    * git2-rs <https://github.com/rust-lang/git2-rs>\n* Swift\n    * SwiftGit2 <https://github.com/SwiftGit2/SwiftGit2>\n* Tcl\n    * lg2 <https://github.com/apnadkarni/tcl-libgit2>\n* Vala\n    * libgit2.vapi <https://github.com/apmasell/vapis/blob/master/libgit2.vapi>\n\nIf you start another language binding to libgit2, please let us know so\nwe can add it to the list.\n\nHow Can I Contribute?\n==================================\n\nWe welcome new contributors!  We have a number of issues marked as\n[\"up for grabs\"](https://github.com/libgit2/libgit2/issues?q=is%3Aissue+is%3Aopen+label%3A%22up+for+grabs%22)\nand\n[\"easy fix\"](https://github.com/libgit2/libgit2/issues?utf8=✓&q=is%3Aissue+is%3Aopen+label%3A%22easy+fix%22)\nthat are good places to jump in and get started.  There's much more detailed\ninformation in our list of [outstanding projects](docs/projects.md).\n\nPlease be sure to check the [contribution guidelines](docs/contributing.md)\nto understand our workflow, and the libgit2\n[coding conventions](docs/conventions.md).\n\nLicense\n==================================\n\n`libgit2` is under GPL2 **with linking exception**. This means you can\nlink to and use the library from any program, proprietary or open source;\npaid or gratis. However, if you modify libgit2 itself, you must distribute\nthe source to your modified version of libgit2.\n\nSee the [COPYING file](COPYING) for the full license text.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5888671875,
          "content": "# Security Policy\n\n## Supported Versions\n\nThis project will always provide security fixes for the latest two released\nversions. E.g. if the latest version is v0.28.x, then we will provide security\nfixes for both v0.28.x and v0.27.y, but no earlier versions.\n\n## Reporting a Vulnerability\n\nIn case you think to have found a security issue with libgit2, please do not\nopen a public issue.  Instead, you can report the issue to the private mailing\nlist [security@libgit2.com](mailto:security@libgit2.com). We will acknowledge\nreceipt of your message in at most three days and try to clarify further steps.\n"
        },
        {
          "name": "api.docurium",
          "type": "blob",
          "size": 0.2607421875,
          "content": "{\n \"name\":   \"libgit2\",\n \"github\": \"libgit2/libgit2\",\n \"input\":  \"include\",\n \"prefix\": \"git_\",\n \"output\": \"docs\",\n \"branch\": \"gh-pages\",\n \"examples\": \"examples\",\n \"legacy\":  {\n    \"input\": {\"src/git\": [\"v0.1.0\"],\n              \"src/git2\": [\"v0.2.0\", \"v0.3.0\"]}\n  }\n}\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzers",
          "type": "tree",
          "content": null
        },
        {
          "name": "git.git-authors",
          "type": "blob",
          "size": 3.0283203125,
          "content": "# This document lists the authors that have given voice to\n# their decision regarding relicensing the GPL'd code from\n# git.git to the GPL + gcc-exception license used by libgit2.\n#\n# Note that the permission is given for libgit2 use only. For\n# other uses, you must ask each of the contributors yourself.\n#\n# To show the owners of a file in git.git, one can run the\n# following command:\n#\n#  git blame -C -C -M -- file | \\\n#    sed -e 's/[^(]*(\\([^0-9]*\\).*/\\1/' -e 's/[\\t ]*$//' | \\\n#      sort | uniq -c | sort -nr\n#\n# If everyone on the list that produces are on the list in\n# the recently added file \"git.git-authors\", it *should* be\n# safe to include that code in libgit2, but make sure to\n# read the file to ensure the code doesn't originate from\n# somewhere else.\n#\n# The format of this list is\n# \"ok/no/ask/???\"<tab>\"Author\"<space>\"<email>\"\n#\n# \"ok\" means the author consents to relicensing all their\n#   contributed code (possibly with some exceptions)\n# \"no\" means the author does not consent\n# \"ask\" means that the contributor wants to give/withhold\n#   their consent on a patch-by-patch basis.\n# \"???\" means the person is a prominent contributor who has\n#   not yet made their standpoint clear.\n#\n# Please try to keep the list alphabetically ordered. It will\n# help in case we get all 600-ish git.git authors on it.\n#\n# (Paul Kocher is the author of the mozilla-sha1 implementation\n#  but has otherwise not contributed to git.)\n#\nok\tAdam Simpkins <adam@adamsimpkins.net> (http transport)\nok\tAdrian Johnson <ajohnson@redneon.com>\nok\tAlexey Shumkin <alex.crezoff@gmail.com>\nok\tAndreas Ericsson <ae@op5.se>\nok\tAntoine Pelisse <apelisse@gmail.com>\nok\tBoyd Lynn Gerber <gerberb@zenez.com>\nok\tBrandon Casey <drafnel@gmail.com>\nok\tBrian Downing <bdowning@lavos.net>\nok\tBrian Gernhardt <benji@silverinsanity.com>\nok\tChristian Couder <chriscool@tuxfamily.org>\nok\tDaniel Barkalow <barkalow@iabervon.org>\nok\tElijah Newren <newren@gmail.com>\nok\tFlorian Forster <octo@verplant.org>\nok\tGustaf Hendeby <hendeby@isy.liu.se>\nok\tHolger Weiss <holger@zedat.fu-berlin.de>\nok\tJeff King <peff@peff.net>\nok\tJohannes Schindelin <Johannes.Schindelin@gmx.de>\nok\tJohannes Sixt <j6t@kdbg.org>\nask\tJonathan Nieder <jrnieder@gmail.com>\nok\tJonathan Tan <jonathantanmy@google.com>\nok\tJunio C Hamano <gitster@pobox.com>\nok\tKristian Høgsberg <krh@redhat.com>\nok\tLinus Torvalds <torvalds@linux-foundation.org>\nok\tLukas Sandström <lukass@etek.chalmers.se>\nok\tMatthieu Moy <Matthieu.Moy@imag.fr>\nok\tMichael Haggerty <mhagger@alum.mit.edu>\nok\tNicolas Pitre <nico@fluxnic.net> <nico@cam.org>\nok\tPaolo Bonzini <bonzini@gnu.org>\nok\tPaul Kocher <paul@cryptography.com>\nok\tPeter Hagervall <hager@cs.umu.se>\nok\tPetr Onderka <gsvick@gmail.com>\nok\tPierre Habouzit <madcoder@debian.org>\nok\tPieter de Bie <pdebie@ai.rug.nl>\nok\tRené Scharfe <rene.scharfe@lsrfire.ath.cx>\nok\tSebastian Schuberth <sschuberth@gmail.com>\nok\tShawn O. Pearce <spearce@spearce.org>\nok\tSteffen Prohaska <prohaska@zib.de>\nok\tSven Verdoolaege <skimo@kotnet.org>\nask\tThomas Rast <tr@thomasrast.ch> (ok before 6-Oct-2013)\nok\tTorsten Bögershausen <tboegi@web.de>\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.2744140625,
          "content": "{\n  \"name\": \"libgit2\",\n  \"version\": \"1.9.0\",\n  \"repo\": \"https://github.com/libgit2/libgit2\",\n  \"description\": \" A cross-platform, linkable library implementation of Git that you can use in your application.\",\n  \"install\": \"mkdir build && cd build && cmake .. && cmake --build .\"\n}\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}