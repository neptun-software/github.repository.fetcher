{
  "metadata": {
    "timestamp": 1736710343168,
    "page": 151,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ldcsaa/HP-Socket",
      "stars": 5804,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4765625,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n\n*.sh text eol=lf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6787109375,
          "content": "ï»¿# Compiled Object files\n*.slo\n*.lo\n*.o\n*.pdb\n*.exp\n*.idb\n*.ipdb\n*.iobj\n*.ilk\n*.obj\n*.log\n*.tlog\n*.cki\n*.exe.config\n\n# Compiled executable files\n\n# Compiled Dynamic libraries\n#*.so\n#*.dylib\n\n# Compiled Static libraries\n#*.lai\n#*.la\n#*.a\n\n# Intermediate directorys\nStatic/\nstatic/\nDebug/\ndebug/\n!Windows/Src/Common/Debug/\n!Windows/Src/Common/debug/\n\nObj/\nobj/\ntlog/\nlog/\nreadme/\nnetstandard2.0/\n\n# IDE Internal Files\n*.xml\n*.layout\n*.sdf\n*.opensdf\n*.VC.db\n*.opendb\n*.aps\n*.swp\n*.suo\n.vs/\nipch/\nVSMacros80/\n\n# symbolic link files\nLinux/lib/**/*.so.*\n\n# binary output files\nLinux/demo/Release/\nLinux/lib/\nWindows/Demo/Release/\nWindows/Lib/\nWindows/Bin/\nWindows/Other Languages/C#/HPSocketCS/bin/\n"
        },
        {
          "name": "Doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "DotNet",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.8173828125,
          "content": "/*\n * Copyright JessMA Open Source (ldcsaa@gmail.com)\n *\n * Author\t: Bruce Liang\n * Website\t: http://www.jessma.org\n * Project\t: https://github.com/ldcsaa\n * Blog\t\t: http://www.cnblogs.com/ldcsaa\n * Wiki\t\t: http://www.oschina.net/p/hp-socket\n * QQ Group\t: 75375912, 44636872\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"
        },
        {
          "name": "Linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "MacOS",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5380859375,
          "content": "![HP-Socket](Doc/HP-Socket%20Logo.png \"HP-Socket\")\n---\n*High Performance Network Framework*\n## Description\n- ***Server*** Based on IOCP/EPOLL communication model, combined with technology of memory pool, private heap etc., efficient memory management is implemented to support large scale and high concurrent communication scenarios.\n- ***Agent*** The Agent component is essentially a Multi-Client component that uses the same technical architecture as the Server component. An Agent component object can create and efficiently handle large-scale Socket connections at the same time.\n- ***Client*** Based on Event-Select/POLL communication model, each component object creates a communication thread and manages a Socket connection. Client components are suitable for small-scale client scenarios.\n## Document\n- HP-Socket Development Guide \n[[pdf]](Doc/HP-Socket%20Development%20Guide.pdf)\n- HP-Socket Class Diagram \n[[uml]](Doc/HP-Socket%20Class%20Diagram.uml)\n- HP-Socket Class Diagram \n[[jpg]](Doc/HP-Socket%20Class%20Diagram.jpg)\n- HP-Socket SSL Class Diagram \n[[jpg]](Doc/HP-Socket%20SSL%20Class%20Diagram.jpg)\n- HP-Socket HTTP Class Diagram \n[[jpg]](Doc/HP-Socket%20HTTP%20Class%20Diagram.jpg)\n## Workflow\n1. Create listener object\n2. Create component object (and binding with listener object)\n3. Start component object\n4. Connect to dest host (for *Agent* Component only)\n5. process network events (*OnConnect/OnReceive/OnClose* etc.)\n6. Stop component object (optional: component object will be stopped before destroy in step 7)\n7. Destroy component object\n8. Destroy listener object\n\n![Agent Workflow](Doc/HP-Socket-Agent-Demo.jpg \"Agent-Workflow\")\n## Example\n- ***C++ Example***\n\n``` C++\n#include <hpsocket/HPSocket.h>\n\n/* Listener Class */\nclass CListenerImpl : public CTcpPullServerListener\n{\n\npublic:\n\t// 5. process network events\n\tvirtual EnHandleResult OnPrepareListen(ITcpServer* pSender, SOCKET soListen);\n\tvirtual EnHandleResult OnAccept(ITcpServer* pSender, CONNID dwConnID, UINT_PTR soClient);\n\tvirtual EnHandleResult OnHandShake(ITcpServer* pSender, CONNID dwConnID);\n\tvirtual EnHandleResult OnReceive(ITcpServer* pSender, CONNID dwConnID, int iLength);\n\tvirtual EnHandleResult OnSend(ITcpServer* pSender, CONNID dwConnID, const BYTE* pData, int iLength);\n\tvirtual EnHandleResult OnClose(ITcpServer* pSender, CONNID dwConnID, EnSocketOperation enOperation, int iErrorCode);\n\tvirtual EnHandleResult OnShutdown(ITcpServer* pSender);\n};\n\nint main(int argc, char* const argv[])\n{\n\t// 1. Create listener object\n\tCListenerImpl s_listener;\n\t// 2. Create component object (and binding with listener object)\n\tCTcpPullServerPtr s_pserver(&s_listener);\n\t\n\t// 3. Start component object\n\tif(!s_pserver->Start(\"0.0.0.0\", 5555))\n\t\texit(1);\n\t\n\t/* wait for exit */\n\t// ... ... \n\t\n\t// 6. (optional) Stop component object\n\ts_pserver->Stop();\n\n\treturn 0;\n\t\n\t// 7. Destroy component object automatically\n\t// 8. Destroy listener object automatically\n}\n```\n\n- ***C Example***\n\n``` C\n#include <hpsocket/HPSocket4C.h>\n\n// 5. process network events\nEnHandleResult __HP_CALL OnConnect(HP_Agent pSender, HP_CONNID dwConnID);\nEnHandleResult __HP_CALL OnReceive(HP_Agent pSender, HP_CONNID dwConnID, int iLength);\nEnHandleResult __HP_CALL OnSend(HP_Agent pSender, HP_CONNID dwConnID, const BYTE* pData, int iLength);\nEnHandleResult __HP_CALL OnClose(HP_Agent pSender, HP_CONNID dwConnID, En_HP_SocketOperation enOperation, int iErrorCode);\nEnHandleResult __HP_CALL OnShutdown(HP_Agent pSender);\n\nint main(int argc, char* const argv[])\n{\n\tHP_TcpPullAgentListener s_listener;\n\tHP_TcpPullAgent s_agent;\n\n\t// 1. Create listener object\n\ts_listener = ::Create_HP_TcpPullAgentListener();\n\t// 2. Create component object (and binding with listener object)\n\ts_agent    = ::Create_HP_TcpPullAgent(s_listener);\n\t\n\t/* Set listener callbacks */\n\t::HP_Set_FN_Agent_OnConnect(s_listener, OnConnect);\n\t::HP_Set_FN_Agent_OnSend(s_listener, OnSend);\n\t::HP_Set_FN_Agent_OnPullReceive(s_listener, OnReceive);\n\t::HP_Set_FN_Agent_OnClose(s_listener, OnClose);\n\t::HP_Set_FN_Agent_OnShutdown(s_listener, OnShutdown);\n\t\n\t// 3. Start component object\n\tif(!::HP_Agent_Start(s_agent, \"0.0.0.0\", TRUE))\n\t\texit(1);\n\t\n\t// 4. Connect to dest host\n\t::HP_Agent_Connect(s_agent, REMOTE_HOST_1, REMOTE_PORT_1, nullptr);\n\t::HP_Agent_Connect(s_agent, REMOTE_HOST_2, REMOTE_PORT_2, nullptr);\n\t::HP_Agent_Connect(s_agent, REMOTE_HOST_3, REMOTE_PORT_3, nullptr);\n\t\n\t/* wait for exit */\n\t// ... ... \n\t\n\t// 6. (optional) Stop component object\n\t::HP_Agent_Stop(s_agent);\n\n\t// 7. Destroy component object\n\t::Destroy_HP_TcpPullAgent(s_agent);\n\t// 8. Destroy listener object\n\t::Destroy_HP_TcpPullAgentListener(s_listener);\n\t\n\treturn 0;\n}\n```\n\n## Component List\n- ***Basic Components***\n\n![Basic Component](Doc/Basic%20Component%20-%20mini.jpg \"Basic Component\")\n\n- ***SSL Components***\n\n![SSL Component](Doc/SSL%20Component%20-%20mini.jpg \"SSL Component\")\n\n- ***HTTP Components***\n\n![HTTP Component](Doc/HTTP%20Component%20-%20mini.jpg \"HTTP Component\")\n\n## Reference Projects\n\n- *[mimalloc](https://github.com/microsoft/mimalloc)*\n- *[jemalloc](https://github.com/jemalloc/jemalloc)*\n- *[openssl](https://github.com/openssl/openssl)*\n- *[llhttp](https://github.com/nodejs/llhttp)*\n- *[zlib](https://github.com/madler/zlib)*\n- *[brotli](https://github.com/google/brotli)*\n- *[kcp](https://github.com/skywind3000/kcp)*\n\n## Extension Projects\n\n- *[HP-Socket for MacOS](https://gitee.com/xin_chong/HP-Socket-for-macOS)*\n- *[HP-Socket for .Net](https://gitee.com/int2e/HPSocket.Net)*\n\n## Technical Exchange Groups\n\n- *[QQ Group - 1](https://jq.qq.com/?_wv=1027&k=3UAbrhTG)*\n- *[QQ Group - 2](https://jq.qq.com/?_wv=1027&k=uYBpc6bG)*"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 5.267578125,
          "content": "![HP-Socket](Doc/HP-Socket%20Logo.png \"HP-Socket\")\n---\n*é«æ§è½è·¨å¹³å°ç½ç»éä¿¡æ¡æ¶*\n## æè¿°\n- ***Server*** åºäºIOCP / EPOLLéä¿¡æ¨¡åï¼å¹¶ç»åç¼å­æ± ãç§æå ç­ææ¯å®ç°é«æåå­ç®¡çï¼æ¯æè¶å¤§è§æ¨¡ãé«å¹¶åéä¿¡åºæ¯ã\n- ***Agent*** Agentç»ä»¶å®è´¨ä¸æ¯Multi-Clientç»ä»¶ï¼ä¸Serverç»ä»¶éç¨ç¸åçææ¯æ¶æãä¸ä¸ªAgentç»ä»¶å¯¹è±¡å¯åæ¶å»ºç«åé«æå¤çå¤§è§æ¨¡Socketè¿æ¥ã\n- ***Client*** åºäºEvent Select / POLLéä¿¡æ¨¡åï¼æ¯ä¸ªç»ä»¶å¯¹è±¡åå»ºä¸ä¸ªéä¿¡çº¿ç¨å¹¶ç®¡çä¸ä¸ªSocketè¿æ¥ï¼éç¨äºå°è§æ¨¡å®¢æ·ç«¯åºæ¯ã\n## ææ¡£\n- HP-Socketå¼åæå \n[[pdf]](Doc/HP-Socket%20Development%20Guide.pdf)\n- HP-Socketåºç¡ç»ä»¶ç±»å¾ \n[[uml]](Doc/HP-Socket%20Class%20Diagram.uml)\n- HP-Socketåºç¡ç»ä»¶ç±»å¾ \n[[jpg]](Doc/HP-Socket%20Class%20Diagram.jpg)\n- HP-Socket SSLç»ä»¶ç±»å¾ç»ä»¶ \n[[jpg]](Doc/HP-Socket%20SSL%20Class%20Diagram.jpg)\n- HP-Socket HTTPç»ä»¶ç±»å¾\n[[jpg]](Doc/HP-Socket%20HTTP%20Class%20Diagram.jpg)\n## å·¥ä½æµç¨\n1. åå»ºçå¬å¨\n2. åå»ºéä¿¡ç»ä»¶ï¼åæ¶ç»å®çå¬å¨ï¼\n3. å¯å¨éä¿¡ç»ä»¶\n4. è¿æ¥å°ç®æ ä¸»æºï¼*Agent*ç»ä»¶ï¼\n5. å¤çéä¿¡äºä»¶ï¼*OnConnect/OnReceive/OnClose*ç­ï¼\n6. åæ­¢éä¿¡ç»ä»¶ï¼å¯éï¼å¨ç¬¬7æ­¥éæ¯éä¿¡ç»ä»¶æ¶ä¼èªå¨åæ­¢ç»ä»¶ï¼\n7. éæ¯éä¿¡ç»ä»¶\n8. éæ¯çå¬å¨\n\n![Agentå·¥ä½æµç¨](Doc/HP-Socket-Agent-Demo.jpg \"Agentå·¥ä½æµç¨\")\n## ç¤ºä¾\n- ***C++ç¤ºä¾***\n\n``` C++\n#include <hpsocket/HPSocket.h>\n\n/* Listener Class */\nclass CListenerImpl : public CTcpPullServerListener\n{\n\npublic:\n\t// 5. process network events\n\tvirtual EnHandleResult OnPrepareListen(ITcpServer* pSender, SOCKET soListen);\n\tvirtual EnHandleResult OnAccept(ITcpServer* pSender, CONNID dwConnID, UINT_PTR soClient);\n\tvirtual EnHandleResult OnHandShake(ITcpServer* pSender, CONNID dwConnID);\n\tvirtual EnHandleResult OnReceive(ITcpServer* pSender, CONNID dwConnID, int iLength);\n\tvirtual EnHandleResult OnSend(ITcpServer* pSender, CONNID dwConnID, const BYTE* pData, int iLength);\n\tvirtual EnHandleResult OnClose(ITcpServer* pSender, CONNID dwConnID, EnSocketOperation enOperation, int iErrorCode);\n\tvirtual EnHandleResult OnShutdown(ITcpServer* pSender);\n};\n\nint main(int argc, char* const argv[])\n{\n\t// 1. Create listener object\n\tCListenerImpl s_listener;\n\t// 2. Create component object (and binding with listener object)\n\tCTcpPullServerPtr s_pserver(&s_listener);\n\t\n\t// 3. Start component object\n\tif(!s_pserver->Start(\"0.0.0.0\", 5555))\n\t\texit(1);\n\t\n\t/* wait for exit */\n\t// ... ... \n\t\n\t// 6. (optional) Stop component object\n\ts_pserver->Stop();\n\n\treturn 0;\n\t\n\t// 7. Destroy component object automatically\n\t// 8. Destroy listener object automatically\n}\n```\n\n- ***Cç¤ºä¾***\n\n``` C\n#include <hpsocket/HPSocket4C.h>\n\n// 5. process network events\nEnHandleResult __HP_CALL OnConnect(HP_Agent pSender, HP_CONNID dwConnID);\nEnHandleResult __HP_CALL OnReceive(HP_Agent pSender, HP_CONNID dwConnID, int iLength);\nEnHandleResult __HP_CALL OnSend(HP_Agent pSender, HP_CONNID dwConnID, const BYTE* pData, int iLength);\nEnHandleResult __HP_CALL OnClose(HP_Agent pSender, HP_CONNID dwConnID, En_HP_SocketOperation enOperation, int iErrorCode);\nEnHandleResult __HP_CALL OnShutdown(HP_Agent pSender);\n\nint main(int argc, char* const argv[])\n{\n\tHP_TcpPullAgentListener s_listener;\n\tHP_TcpPullAgent s_agent;\n\n\t// 1. Create listener object\n\ts_listener = ::Create_HP_TcpPullAgentListener();\n\t// 2. Create component object (and binding with listener object)\n\ts_agent    = ::Create_HP_TcpPullAgent(s_listener);\n\t\n\t/* Set listener callbacks */\n\t::HP_Set_FN_Agent_OnConnect(s_listener, OnConnect);\n\t::HP_Set_FN_Agent_OnSend(s_listener, OnSend);\n\t::HP_Set_FN_Agent_OnPullReceive(s_listener, OnReceive);\n\t::HP_Set_FN_Agent_OnClose(s_listener, OnClose);\n\t::HP_Set_FN_Agent_OnShutdown(s_listener, OnShutdown);\n\t\n\t// 3. Start component object\n\tif(!::HP_Agent_Start(s_agent, \"0.0.0.0\", TRUE))\n\t\texit(1);\n\t\n\t// 4. Connect to dest host\n\t::HP_Agent_Connect(s_agent, REMOTE_HOST_1, REMOTE_PORT_1, nullptr);\n\t::HP_Agent_Connect(s_agent, REMOTE_HOST_2, REMOTE_PORT_2, nullptr);\n\t::HP_Agent_Connect(s_agent, REMOTE_HOST_3, REMOTE_PORT_3, nullptr);\n\t\n\t/* wait for exit */\n\t// ... ... \n\t\n\t// 6. (optional) Stop component object\n\t::HP_Agent_Stop(s_agent);\n\n\t// 7. Destroy component object\n\t::Destroy_HP_TcpPullAgent(s_agent);\n\t// 8. Destroy listener object\n\t::Destroy_HP_TcpPullAgentListener(s_listener);\n\t\n\treturn 0;\n}\n```\n\n## ç»ä»¶åè¡¨\n- ***åºç¡ç»ä»¶***\n\n![Basic Component](Doc/Basic%20Component%20-%20mini.jpg \"åºç¡ç»ä»¶\")\n\n- ***SSLç»ä»¶***\n\n![SSL Component](Doc/SSL%20Component%20-%20mini.jpg \"SSL ç»ä»¶\")\n\n- ***HTTPç»ä»¶***\n\n![HTTP Component](Doc/HTTP%20Component%20-%20mini.jpg \"HTTP ç»ä»¶\")\n\n## å¼ç¨é¡¹ç®\n\n- *[mimalloc](https://github.com/microsoft/mimalloc)*\n- *[jemalloc](https://github.com/jemalloc/jemalloc)*\n- *[openssl](https://github.com/openssl/openssl)*\n- *[llhttp](https://github.com/nodejs/llhttp)*\n- *[zlib](https://github.com/madler/zlib)*\n- *[brotli](https://github.com/google/brotli)*\n- *[kcp](https://github.com/skywind3000/kcp)*\n\n## æ©å±é¡¹ç®\n\n- *[HP-Socket for MacOS](https://gitee.com/xin_chong/HP-Socket-for-macOS)*\n- *[HP-Socket for .Net](https://gitee.com/int2e/HPSocket.Net)*\n\n## ææ¯äº¤æµ\n\n- *[æªå½ä¹å­â ç¾¤](https://jq.qq.com/?_wv=1027&k=3UAbrhTG)*\n- *[æªå½ä¹å­â¡ç¾¤](https://jq.qq.com/?_wv=1027&k=uYBpc6bG)*"
        },
        {
          "name": "Windows",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}