{
  "metadata": {
    "timestamp": 1736710361411,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nginx/unit",
      "stars": 5437,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.5673828125,
          "content": "root = true\n\n[{configure,{*.{c,cpp,h,go,java,js,py,rs}}}]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\n\n[Makefile]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = tab\nindent_size = 8\n\n[{auto/**,*.toml}]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.yaml]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.115234375,
          "content": "*.c\tdiff=cpp\n*.h\tdiff=cpp\n\n.hg*\texport-ignore\npkg/**\texport-ignore\ndocs/*.*\texport-ignore\ndocs/Makefile\texport-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "/build/\nMakefile\n*.pyc\n__pycache__/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.3837890625,
          "content": "Alejandro Colomar <alx@kernel.org> <alx@nginx.com>\nAlejandro Colomar <alx@kernel.org> <a.colomar@f5.com>\nAlejandro Colomar <alx@kernel.org> <alx.manpages@gmail.com>\nAndrei Zeliankou <zelenkov@nginx.com>\nAndrei Zeliankou <zelenkov@nginx.com> <xim.andrew@gmail.com>\nAndrew Clayton <a.clayton@nginx.com> <andrew@digital-domain.net>\nAndrew Clayton <a.clayton@nginx.com> <a.clayton@f5.com>\nArtem Konev <artem.konev@nginx.com> <41629299+artemkonev@users.noreply.github.com>\nAva Hahn <a.hahn@f5.com> <110854134+avahahn@users.noreply.github.com>\nDan Callahan <d.callahan@f5.com> <dan.callahan@gmail.com>\nDanielle De Leo <d.deleo@f5.com> <danielle@fastmail.net>\nDylan Arbour <d.arbour@f5.com> <arbourd@users.noreply.github.com>\nDylan Arbour <d.arbour@f5.com> <7211830+arbourd@users.noreply.github.com>\nIgor Ippolitov <i.ippolitov@f5.com> <iippolitov@gmail.com>\nKonstantin Pavlov <thresh@nginx.com> <thresh@videolan.org>\nKonstantin Pavlov <thresh@nginx.com> <pavlov.konstantin@gmail.com>\nMax Romanov <max.romanov@gmail.com> <max.romanov@nginx.com>\nOutOfFocus4 <jeff.iadarola@gmail.com> <jeffrey_iadarola@urmc.rochester.edu>\nSergey A. Osokin <sergey.osokin@nginx.com> <osa@FreeBSD.org.ru>\nTaryn Musgrave <t.musgrave@f5.com> <34845739+tarynmusgrave@users.noreply.github.com>\nTiago Natel de Moura <t.nateldemoura@f5.com>\nTimo Stark <t.stark@nginx.com> <tippexs91@googlemail.com>\nZhidao HONG <z.hong@f5.com> <hongzhidao@gmail.com>\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "max_width = 80\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 39.54296875,
          "content": "\nChanges with Unit 1.34.0                                         19 Dec 2024\n\n    *) Feature: initial OpenTelemetry (OTEL) support. (Disabled by default).\n\n    *) Feature: support for JSON formatted access logs.\n\n    *) Bugfix: tweak the Perl language module to avoid breaking scripts in\n       some circumstances.\n\n\nChanges with Unit 1.33.0                                         17 Sep 2024\n\n    *) Feature: make the number of router threads configurable.\n\n    *) Feature: make the listen(2) backlog configurable.\n\n    *) Feature: add Python application factory support.\n\n    *) Feature: add experimental chunked request body support. (Disabled by\n       default).\n\n    *) Feature: add fuzzing via oss-fuzz.\n\n    *) Feature: add \"if\" option to the \"match\" object.\n\n    *) Feature: show list of loaded language modules in the /status\n       endpoint.\n\n    *) Feature: Unit ships with a new Rust based CLI application \"unitctl\".\n\n    *) Feature: the wasm-wasi-component language module now inherits the\n       processes environment.\n\n    *) Change: under systemd unit runs in forking mode (once again).\n\n    *) Change: if building with njs, version 0.8.3 or later is now required.\n\n    *) Change: Unit now builds with -std=gnu11 (C11 with GNU extensions).\n\n    *) Change: Unit now creates the full directory path for the PID file and\n       control socket.\n\n    *) Change: build system improvements, including pretty printing the make\n       output and enabling various make variables to influence the build\n       process (see: make help).\n\n    *) Change: better detection of available runnable CPUs on Linux.\n\n    *) Change: default listen(2) backlog on Linux now defaults to Kernel\n       default.\n\n    *) Bugfix: don't modify REQUEST_URI.\n\n    *) Bugfix: fix a crash when interrupting a download via a proxy.\n\n    *) Bugfix: wasm-wasi-component application process hangs after receiving\n       restart signal from the control endpoint.\n\n    *) Bugfix: njs variables accessed with a JS template literal should not\n       be cacheable.\n\n    *) Bugfix: properly handle deleting arrays of certificates.\n\n    *) Bugfix: don't create the $runstatedir directory which triggered an\n       Alpine packaging error.\n\n\nChanges with Unit 1.32.0                                         27 Feb 2024\n\n    *) Feature: WebAssembly Components using WASI interfaces defined in\n       wasi:http/proxy@0.2.0.\n\n    *) Feature: conditional access logging.\n\n    *) Feature: njs variables access.\n\n    *) Feature: $request_id variable contains a string that is formed using\n       random data and can be used as a unique request identifier.\n\n    *) Feature: options to set control socket permissions.\n\n    *) Feature: Ruby arrays in response headers, improving compatibility\n       with Rack v3.0.\n\n    *) Feature: Python bytearray response bodies for ASGI applications.\n\n    *) Bugfix: router could crash while sending large files. Thanks to\n       rustedsword.\n\n    *) Bugfix: serving static files from a network filesystem could lead to\n       error.\n\n    *) Bugfix: \"uidmap\" and \"gidmap\" isolation options validation.\n\n    *) Bugfix: abstract UNIX socket name could be corrupted during\n       configuration validation. Thanks to Alejandro Colomar.\n\n    *) Bugfix: HTTP header field value encoding could be misinterpreted in\n       Python module.\n\n    *) Bugfix: Node.js http.createServer() accepts and ignores the \"options\"\n       argument, improving compatibility with strapi applications, among\n       others.\n\n    *) Bugfix: ServerRequest.flushHeaders() implemented in Node.js module to\n       make it compatible with Next.js.\n\n    *) Bugfix: ServerRequest.httpVersion variable format in Node.js module.\n\n    *) Bugfix: Node.js module handles standard library imports prefixed with\n       \"node:\", making it possible to run newer Nuxt applications, among\n       others.\n\n    *) Bugfix: Node.js tarball location changed to avoid build/install\n       errors.\n\n    *) Bugfix: Go module sets environment variables necessary for building\n       on macOS/arm64 systems.\n\n\nChanges with Unit 1.31.1                                         19 Oct 2023\n\n    *) Feature: allow to set the HTTP response status in Wasm module.\n\n    *) Feature: allow uploads larger than 4GiB in Wasm module.\n\n    *) Bugfix: application process could crash while rewriting URLs with\n       query strings.\n\n    *) Bugfix: requests larger than about 64MiB could cause error in Wasm\n       module.\n\n    *) Bugfix: when using many headers in Java module some of them could be\n       corrupted due to memory realocation issue.\n\n    *) Bugfix: ServerRequest.destroy() implemented in Node.js module to make\n       it compatible with some frameworks that might use it.\n\n    *) Bugfix: chunk argument of ServerResponse.write() can now be a\n       Uint8Array to improve compatibility with Node.js 15.0.0 and above.\n\n    *) Bugfix: Node.JS unit-http NPM module now has appropriate default\n       paths for macOS/arm64 systems.\n\n    *) Bugfix: build on musl libc with clang.\n\n\nChanges with Unit 1.31.0                                         31 Aug 2023\n\n    *) Change: if building with njs, version 0.8.0 or later is now required.\n\n    *) Feature: technology preview of WebAssembly application module.\n\n    *) Feature: \"response_headers\" option to manage headers in the action\n       and fallback.\n\n    *) Feature: HTTP response header variables.\n\n    *) Feature: ASGI lifespan state support. Thanks to synodriver.\n\n    *) Bugfix: ensure that $uri variable is not cached.\n\n    *) Bugfix: deprecated options were unavailable.\n\n    *) Bugfix: ASGI applications inaccessible over IPv6.\n\n\nChanges with Unit 1.30.0                                         10 May 2023\n\n    *) Change: remove Unix domain listen sockets upon reconfiguration.\n\n    *) Feature: basic URI rewrite support.\n\n    *) Feature: njs loadable modules support.\n\n    *) Feature: per-application logging.\n\n    *) Feature: conditional logging of route selection.\n\n    *) Feature: support the keys API on the request objects in njs.\n\n    *) Feature: default values for 'make install' pathnames such as prefix;\n       this allows to './configure && make && sudo make install'.\n\n    *) Feature: \"server_version\" setting to omit the version token from\n       \"Server\" header field.\n\n    *) Bugfix: request header field values could be corrupted in some cases;\n       the bug had appeared in 1.29.0.\n\n    *) Bugfix: PHP error handling (added missing 403 and 404 errors).\n\n    *) Bugfix: Perl applications crash on second responder call.\n\n\nChanges with Unit 1.29.1                                         28 Feb 2023\n\n    *) Bugfix: stop creating world-writeable directories.\n\n    *) Bugfix: memory leak related to njs.\n\n    *) Bugfix: path parsing in PHP applications.\n\n    *) Bugfix: enabled UTF-8 for Python config by default to avoid\n       applications failing in some cases.\n\n    *) Bugfix: using asyncio.get_running_loop() instead of\n       asyncio.get_event_loop() when it's available to prevent errors in\n       some Python ASGI applications.\n\n    *) Bugfix: applications that make use of various low level APIs such as\n       pthreads could fail to work correctly.\n\n    *) Bugfix: websocket endianness detection for obscure operating systems.\n\n\nChanges with Unit 1.29.0                                         15 Dec 2022\n\n    *) Change: removed $uri auto-append for \"share\" when loading\n       configuration.\n\n    *) Change: prefer system crypto policy instead of hardcoding a default.\n\n    *) Feature: njs support with the basic syntax of JS template literals.\n\n    *) Feature: support per-application cgroups on Linux.\n\n    *) Feature: the $request_time variable contains the request processing\n       time.\n\n    *) Feature: \"prefix\" option in Python applications to set WSGI\n       \"SCRIPT_NAME\" and ASGI root-path variables.\n\n    *) Feature: compatibility with Python 3.11.\n\n    *) Feature: compatibility with OpenSSL 3.\n\n    *) Feature: compatibility with PHP 8.2.\n\n    *) Feature: compatibility with Node.js 19.0.\n\n    *) Feature: Ruby Rack v3 support.\n\n    *) Bugfix: fix error in connection statistics when using proxy.\n\n    *) Bugfix: fix HTTP cookie parsing when the value contains an equals\n       sign.\n\n    *) Bugfix: PHP directory URLs without a trailing '/' would give a 503\n       error (fixed with a 301 re-direct).\n\n    *) Bugfix: missing error checks in the C API.\n\n    *) Bugfix: report the regex status in configure summary.\n\n\nChanges with Unit 1.28.0                                         13 Sep 2022\n\n    *) Change: increased the applications' startup timeout.\n\n    *) Change: disallowed abstract Unix domain socket syntax in non-Linux\n       systems.\n\n    *) Feature: basic statistics API.\n\n    *) Feature: customizable access log format.\n\n    *) Feature: more HTTP variables support.\n\n    *) Feature: forwarded header to replace client address and protocol.\n\n    *) Feature: ability to get dynamic variables.\n\n    *) Feature: support for abstract Unix sockets.\n\n    *) Feature: support for Unix sockets in address matching.\n\n    *) Feature: the $dollar variable translates to a literal \"$\" during\n       variable substitution.\n\n    *) Bugfix: router process could crash if index file didn't contain an\n       extension.\n\n    *) Bugfix: force SCRIPT_NAME in Ruby to always be an empty string.\n\n    *) Bugfix: when isolated PID numbers reach the prototype process host\n       PID, the prototype crashed.\n\n    *) Bugfix: the Ruby application process could crash on SIGTERM.\n\n    *) Bugfix: the Ruby application process could crash on SIGINT.\n\n    *) Bugfix: mutex leak in the C API.\n\n\nChanges with Unit 1.27.0                                         02 Jun 2022\n\n    *) Feature: ability to specify a custom index file name when serving\n       static files.\n\n    *) Feature: variables support in the \"location\" option of the \"return\"\n       action.\n\n    *) Feature: support empty strings in the \"location\" option of the\n       \"return\" action.\n\n    *) Feature: added a new variable, $request_uri, that includes both the\n       path and the query parts as per RFC 3986, sections 3-4.\n\n    *) Feature: Ruby Rack environment parameter \"SCRIPT_NAME\" support.\n\n    *) Feature: compatibility with GCC 12.\n\n    *) Bugfix: Ruby Sinatra applications don't work without custom logging.\n\n    *) Bugfix: the controller process could crash when a chain of more than\n       four certificates was uploaded.\n\n    *) Bugfix: some Perl applications failed to process the request body,\n       notably with Plack.\n\n    *) Bugfix: some Spring Boot applications failed to start, notably with\n       Grails.\n\n    *) Bugfix: incorrect Python protocol auto detection (ASGI or WSGI) for\n       native callable object, notably with Falcon.\n\n    *) Bugfix: ECMAScript modules did not work with the recent Node.js\n       versions.\n\n\nChanges with Unit 1.26.1                                         02 Dec 2021\n\n    *) Bugfix: occasionally, the Unit daemon was unable to fully terminate;\n       the bug had appeared in 1.26.0.\n\n    *) Bugfix: a prototype process could crash on an application process\n       exit; the bug had appeared in 1.26.0.\n\n    *) Bugfix: the router process crashed on reconfiguration if \"access_log\"\n       was configured without listeners.\n\n    *) Bugfix: a segmentation fault occurred in the PHP module if chdir() or\n       fastcgi_finish_request() was called in the OPcache preloading script.\n\n    *) Bugfix: fatal errors on DragonFly BSD; the bug had appeared in\n       1.26.0.\n\n\nChanges with Unit 1.26.0                                         18 Nov 2021\n\n    *) Change: the \"share\" option now specifies the entire path to the files\n       it serves, rather than a document root directory to be prepended to\n       the request URI.\n\n    *) Feature: automatic adjustment of existing configurations to the new\n       \"share\" behavior when updating from previous versions.\n\n    *) Feature: variables support in the \"share\" option.\n\n    *) Feature: multiple paths in the \"share\" option.\n\n    *) Feature: variables support in the \"chroot\" option.\n\n    *) Feature: PHP opcache is shared between application processes.\n\n    *) Feature: request routing by the query string.\n\n    *) Bugfix: the router and app processes could crash when the requests\n       limit was reached by asynchronous or multithreaded apps.\n\n    *) Bugfix: established WebSocket connections could stop reading frames\n       from the client after the corresponding listener had been\n       reconfigured.\n\n    *) Bugfix: fixed building with glibc 2.34, notably Fedora 35.\n\n\nChanges with Unit 1.25.0                                         19 Aug 2021\n\n    *) Feature: client IP address replacement from a specified HTTP header\n       field.\n\n    *) Feature: TLS sessions cache.\n\n    *) Feature: TLS session tickets.\n\n    *) Feature: application restart control.\n\n    *) Feature: process and thread lifecycle hooks in Ruby.\n\n    *) Bugfix: the router process could crash on TLS connection open when\n       multiple listeners with TLS certificates were configured; the bug had\n       appeared in 1.23.0.\n\n    *) Bugfix: TLS connections were rejected for configurations with\n       multiple certificate bundles in a listener if the client did not use\n       SNI.\n\n    *) Bugfix: the router process could crash with frequent multithreaded\n       application reconfiguration.\n\n    *) Bugfix: compatibility issues with some Python ASGI apps, notably\n       based on the Starlette framework.\n\n    *) Bugfix: a descriptor and memory leak occurred in the router process\n       when an app process stopped or crashed.\n\n    *) Bugfix: the controller or router process could crash if the\n       configuration contained a full-form IPv6 in a listener address.\n\n    *) Bugfix: the router process crashed when a request was passed to an\n       empty \"routes\" or \"upstreams\" using a variable \"pass\" option.\n\n    *) Bugfix: the router process crashed while matching a request to an\n       empty array of source or destination address patterns.\n\n\nChanges with Unit 1.24.0                                         27 May 2021\n\n    *) Change: PHP added to the default MIME type list.\n\n    *) Feature: arbitrary configuration of TLS connections via OpenSSL\n       commands.\n\n    *) Feature: the ability to limit static file serving by MIME types.\n\n    *) Feature: support for chrooting, rejecting symlinks, and rejecting\n       mount point traversal on a per-request basis when serving static\n       files.\n\n    *) Feature: a loader for automatically overriding the \"http\" and\n       \"websocket\" modules in Node.js.\n\n    *) Feature: multiple \"targets\" in Python applications.\n\n    *) Feature: compatibility with Ruby 3.0.\n\n    *) Bugfix: the router process could crash while closing a TLS\n       connection.\n\n    *) Bugfix: a segmentation fault might have occurred in the PHP module if\n       fastcgi_finish_request() was used with the \"auto_globals_jit\" option\n       enabled.\n\n\nChanges with Unit 1.23.0                                         25 Mar 2021\n\n    *) Feature: support for multiple certificate bundles on a listener via\n       the Server Name Indication (SNI) TLS extension.\n\n    *) Feature: \"--mandir\" ./configure option to specify the directory for\n       man page installation.\n\n    *) Bugfix: the router process could crash on premature TLS connection\n       close; the bug had appeared in 1.17.0.\n\n    *) Bugfix: a connection leak occurred on premature TLS connection close;\n       the bug had appeared in 1.6.\n\n    *) Bugfix: a descriptor and memory leak occurred in the router process\n       when processing small WebSocket frames from a client; the bug had\n       appeared in 1.19.0.\n\n    *) Bugfix: a descriptor leak occurred in the router process when\n       removing or reconfiguring an application; the bug had appeared in\n       1.19.0.\n\n    *) Bugfix: persistent storage of certificates might've not worked with\n       some filesystems in Linux, and all uploaded certificate bundles were\n       forgotten after restart.\n\n    *) Bugfix: the controller process could crash while requesting\n       information about a certificate with a non-DNS SAN entry.\n\n    *) Bugfix: the controller process could crash on manipulations with a\n       certificate containing a SAN and no standard name attributes in\n       subject or issuer.\n\n    *) Bugfix: the Ruby module didn't respect the user locale for defaults\n       in the Encoding class.\n\n    *) Bugfix: the PHP 5 module failed to build with thread safety enabled;\n       the bug had appeared in 1.22.0.\n\n\nChanges with Unit 1.22.0                                         04 Feb 2021\n\n    *) Feature: the ServerRequest and ServerResponse objects of Node.js\n       module are now compliant with Stream API.\n\n    *) Feature: support for specifying multiple directories in the \"path\"\n       option of Python apps.\n\n    *) Bugfix: a memory leak occurred in the router process when serving\n       files larger than 128K; the bug had appeared in 1.13.0.\n\n    *) Bugfix: apps could stop processing new requests under high load; the\n       bug had appeared in 1.19.0.\n\n    *) Bugfix: app processes could terminate unexpectedly under high load;\n       the bug had appeared in 1.19.0.\n\n    *) Bugfix: invalid HTTP responses were generated for some unusual status\n       codes.\n\n    *) Bugfix: the PHP_AUTH_USER, PHP_AUTH_PW, and PHP_AUTH_DIGEST server\n       variables were missing in the PHP module.\n\n    *) Bugfix: the router process could crash with multithreaded apps under\n       high load.\n\n    *) Bugfix: Ruby apps with multithreading configured could crash on start\n       under load.\n\n    *) Bugfix: mount points weren't unmounted when the \"mount\" namespace\n       isolation was used; the bug had appeared in 1.21.0.\n\n    *) Bugfix: the router process could crash while removing or\n       reconfiguring an app that used WebSocket.\n\n    *) Bugfix: a memory leak occurring in the router process when removing\n       or reconfiguring an application; the bug had appeared in 1.19.0.\n\n\nChanges with Unit 1.21.0                                         19 Nov 2020\n\n    *) Change: procfs is mounted by default for all languages when \"rootfs\"\n       isolation is used.\n\n    *) Change: any characters valid according to RFC 7230 are now allowed in\n       HTTP header field names.\n\n    *) Change: HTTP header fields with underscores (\"_\") are now discarded\n       from requests by default.\n\n    *) Feature: optional multithreaded request processing for Java, Python,\n       Perl, and Ruby apps.\n\n    *) Feature: regular expressions in route matching patterns.\n\n    *) Feature: compatibility with Python 3.9.\n\n    *) Feature: the Python module now supports ASGI 2.0 legacy applications.\n\n    *) Feature: the \"protocol\" option in Python applications aids choice\n       between ASGI and WSGI.\n\n    *) Feature: the fastcgi_finish_request() PHP function that finalizes\n       request processing and continues code execution without holding onto\n       the client connection.\n\n    *) Feature: the \"discard_unsafe_fields\" HTTP option that enables\n       discarding request header fields with irregular (but still valid)\n       characters in the field name.\n\n    *) Feature: the \"procfs\" and \"tmpfs\" automount isolation options to\n       disable automatic mounting of eponymous filesystems.\n\n    *) Bugfix: the router process could crash when running Go applications\n       under high load; the bug had appeared in 1.19.0.\n\n    *) Bugfix: some language dependencies could remain mounted after using\n       \"rootfs\" isolation.\n\n    *) Bugfix: various compatibility issues in Java applications.\n\n    *) Bugfix: the Java module built with the musl C library couldn't run\n       applications that use \"rootfs\" isolation.\n\n\nChanges with Unit 1.20.0                                         08 Oct 2020\n\n    *) Change: the PHP module is now initialized before chrooting; this\n       enables loading all extensions from the host system.\n\n    *) Change: AVIF and APNG image formats added to the default MIME type\n       list.\n\n    *) Change: functional tests migrated to the pytest framework.\n\n    *) Feature: the Python module now fully supports applications that use\n       the ASGI 3.0 server interface.\n\n    *) Feature: the Python module now has a built-in WebSocket server\n       implementation for applications, compatible with the HTTP & WebSocket\n       ASGI Message Format 2.1 specification.\n\n    *) Feature: automatic mounting of an isolated \"/tmp\" file system into\n       chrooted application environments.\n\n    *) Feature: the $host variable contains a normalized \"Host\" request\n       value.\n\n    *) Feature: the \"callable\" option sets Python application callable\n       names.\n\n    *) Feature: compatibility with PHP 8 RC 1. Thanks to Remi Collet.\n\n    *) Feature: the \"automount\" option in the \"isolation\" object allows to\n       turn off the automatic mounting of language module dependencies.\n\n    *) Bugfix: \"pass\"-ing requests to upstreams from a route was broken; the\n       bug had appeared in 1.19.0. Thanks to 洪志道 (Hong Zhi Dao) for\n       discovering and fixing it.\n\n    *) Bugfix: the router process could crash during reconfiguration.\n\n    *) Bugfix: a memory leak occurring in the router process; the bug had\n       appeared in 1.18.0.\n\n    *) Bugfix: the \"!\" (non-empty) pattern was matched incorrectly; the bug\n       had appeared in 1.19.0.\n\n    *) Bugfix: fixed building on platforms without sendfile() support,\n       notably NetBSD; the bug had appeared in 1.16.0.\n\n\nChanges with Unit 1.19.0                                         13 Aug 2020\n\n    *) Feature: reworked IPC between the router process and the applications\n       to lower latencies, increase performance, and improve scalability.\n\n    *) Feature: support for an arbitrary number of wildcards in route\n       matching patterns.\n\n    *) Feature: chunked transfer encoding in proxy responses.\n\n    *) Feature: basic variables support in the \"pass\" option.\n\n    *) Feature: compatibility with PHP 8 Beta 1. Thanks to Remi Collet.\n\n    *) Bugfix: the router process could crash while passing requests to an\n       application under high load.\n\n    *) Bugfix: a number of language modules failed to build on some systems;\n       the bug had appeared in 1.18.0.\n\n    *) Bugfix: time in error log messages from PHP applications could lag.\n\n    *) Bugfix: reconfiguration requests could hang if an application had\n       failed to start; the bug had appeared in 1.18.0.\n\n    *) Bugfix: memory leak during reconfiguration.\n\n    *) Bugfix: the daemon didn't start without language modules; the bug had\n       appeared in 1.18.0.\n\n    *) Bugfix: the router process could crash at exit.\n\n    *) Bugfix: Node.js applications could crash at exit.\n\n    *) Bugfix: the Ruby module could be linked against a wrong library\n       version.\n\n\nChanges with Unit 1.18.0                                         28 May 2020\n\n    *) Feature: the \"rootfs\" isolation option for changing root filesystem\n       for an application.\n\n    *) Feature: multiple \"targets\" in PHP applications.\n\n    *) Feature: support for percent-encoding in the \"uri\" and \"arguments\"\n       matching options and in the \"pass\" option.\n\n\nChanges with Unit 1.17.0                                         16 Apr 2020\n\n    *) Feature: a \"return\" action with optional \"location\" for immediate\n       responses and external redirection.\n\n    *) Feature: fractional weights support for upstream servers.\n\n    *) Bugfix: accidental 502 \"Bad Gateway\" errors might have occurred in\n       applications under high load.\n\n    *) Bugfix: memory leak in the router; the bug had appeared in 1.13.0.\n\n    *) Bugfix: segmentation fault might have occurred in the router process\n       when reaching open connections limit.\n\n    *) Bugfix: \"close() failed (9: Bad file descriptor)\" alerts might have\n       appeared in the log while processing large request bodies; the bug\n       had appeared in 1.16.0.\n\n    *) Bugfix: existing application processes didn't reopen the log file.\n\n    *) Bugfix: incompatibility with some Node.js applications.\n\n    *) Bugfix: broken build on DragonFly BSD; the bug had appeared in\n       1.16.0.\n\n\nChanges with Unit 1.16.0                                         12 Mar 2020\n\n    *) Feature: basic load-balancing support with round-robin.\n\n    *) Feature: a \"fallback\" option that performs an alternative action if a\n       request can't be served from the \"share\" directory.\n\n    *) Feature: reduced memory consumption by dumping large request bodies\n       to disk.\n\n    *) Feature: stripping UTF-8 BOM and JavaScript-style comments from\n       uploaded JSON.\n\n    *) Bugfix: negative address matching in router might work improperly in\n       combination with non-negative patterns.\n\n    *) Bugfix: Java Spring applications failed to run; the bug had appeared\n       in 1.10.0.\n\n    *) Bugfix: PHP 7.4 was broken if it was built with thread safety\n       enabled.\n\n    *) Bugfix: compatibility issues with some Python applications.\n\n\nChanges with Unit 1.15.0                                         06 Feb 2020\n\n    *) Change: extensions of dynamically requested PHP scripts were\n       restricted to \".php\".\n\n    *) Feature: compatibility with Ruby 2.7.\n\n    *) Bugfix: segmentation fault might have occurred in the router process\n       with multiple application processes under load; the bug had appeared\n       in 1.14.0.\n\n    *) Bugfix: receiving request body over TLS connection might have\n       stalled.\n\n\nChanges with Unit 1.14.0                                         26 Dec 2019\n\n    *) Change: the Go package import name changed to \"unit.nginx.org/go\".\n\n    *) Change: Go package now links to libunit instead of including library\n       sources.\n\n    *) Feature: ability to change user and group for isolated applications\n       when Unit daemon runs as an unprivileged user.\n\n    *) Feature: request routing by source and destination addresses and\n       ports.\n\n    *) Bugfix: memory bloat on large responses.\n\n\nChanges with Unit 1.13.0                                         14 Nov 2019\n\n    *) Feature: basic support for HTTP reverse proxying.\n\n    *) Feature: compatibility with Python 3.8.\n\n    *) Bugfix: memory leak in Python application processes when the close\n       handler was used.\n\n    *) Bugfix: threads in Python applications might not work correctly.\n\n    *) Bugfix: Ruby on Rails applications might not work on Ruby 2.6.\n\n    *) Bugfix: backtraces for uncaught exceptions in Python 3 might be\n       logged with significant delays.\n\n    *) Bugfix: explicit setting a namespaces isolation option to false might\n       have enabled it.\n\n\nChanges with Unit 1.12.0                                         03 Oct 2019\n\n    *) Feature: compatibility with PHP 7.4.\n\n    *) Bugfix: descriptors leak on process creation; the bug had appeared in\n       1.11.0.\n\n    *) Bugfix: TLS connection might be closed prematurely while sending\n       response.\n\n    *) Bugfix: segmentation fault might have occurred if an irregular file\n       was requested.\n\n\nChanges with Unit 1.11.0                                         19 Sep 2019\n\n    *) Feature: basic support for serving static files.\n\n    *) Feature: isolation of application processes with Linux namespaces.\n\n    *) Feature: built-in WebSocket server implementation for Java Servlet\n       Containers.\n\n    *) Feature: direct addressing of API configuration options containing\n       slashes \"/\" using URI encoding (%2F).\n\n    *) Bugfix: segmentation fault might have occurred in Go applications\n       under high load.\n\n    *) Bugfix: WebSocket support was broken if Unit was built with some\n       linkers other than GNU ld (e.g. gold or LLD).\n\n\nChanges with Unit 1.10.0                                         22 Aug 2019\n\n    *) Change: matching of cookies in routes made case sensitive.\n\n    *) Change: decreased log level of common errors when clients close\n       connections.\n\n    *) Change: removed the Perl module's \"--include=\" ./configure option.\n\n    *) Feature: built-in WebSocket server implementation for Node.js module.\n\n    *) Feature: splitting PATH_INFO from request URI in PHP module.\n\n    *) Feature: request routing by scheme (HTTP or HTTPS).\n\n    *) Feature: support for multipart requests body in Java module.\n\n    *) Feature: improved API compatibility with Node.js 11.10 or later.\n\n    *) Bugfix: reconfiguration failed if \"listeners\" or \"applications\"\n       objects were missing.\n\n    *) Bugfix: applying a large configuration might have failed.\n\n\nChanges with Unit 1.9.0                                          30 May 2019\n\n    *) Feature: request routing by arguments, headers, and cookies.\n\n    *) Feature: route matching patterns allow a wildcard in the middle.\n\n    *) Feature: POST operation for appending elements to arrays in\n       configuration.\n\n    *) Feature: support for changing credentials using CAP_SETUID and\n       CAP_SETGID capabilities on Linux without running main process as\n       privileged user.\n\n    *) Bugfix: memory leak in the router process might have happened when a\n       client prematurely closed the connection.\n\n    *) Bugfix: applying a large configuration might have failed.\n\n    *) Bugfix: PUT and DELETE operations on array elements in configuration\n       did not work.\n\n    *) Bugfix: request schema in applications did not reflect TLS\n       connections.\n\n    *) Bugfix: restored compatibility with Node.js applications that use\n       ServerResponse._implicitHeader() function; the bug had appeared in\n       1.7.\n\n    *) Bugfix: various compatibility issues with Node.js applications.\n\n\nChanges with Unit 1.8.0                                          01 Mar 2019\n\n    *) Change: now three numbers are always used for versioning: major,\n       minor, and patch versions.\n\n    *) Change: now QUERY_STRING is always defined even if the request does\n       not include the query component.\n\n    *) Feature: basic internal request routing by Host, URI, and method.\n\n    *) Feature: experimental support for Java Servlet Containers.\n\n    *) Bugfix: segmentation fault might have occurred in the router process.\n\n    *) Bugfix: various potential memory leaks.\n\n    *) Bugfix: TLS connections might have stalled.\n\n    *) Bugfix: some Perl applications might have failed to send the response\n       body.\n\n    *) Bugfix: some compilers with specific flags might have produced\n       non-functioning builds; the bug had appeared in 1.5.\n\n    *) Bugfix: Node.js package had wrong version number when installed from\n       sources.\n\n\nChanges with Unit 1.7.1                                          07 Feb 2019\n\n    *) Security: a heap memory buffer overflow might have been caused in the\n       router process by a specially crafted request, potentially resulting\n       in a segmentation fault or other unspecified behavior\n       (CVE-2019-7401).\n\n    *) Bugfix: install of Go module failed without prior building of Unit\n       daemon; the bug had appeared in 1.7.\n\n\nChanges with Unit 1.7                                            20 Dec 2018\n\n    *) Change: now rpath is set in Ruby module only if the library was not\n       found in default search paths; this allows to meet packaging\n       restrictions on some systems.\n\n    *) Bugfix: \"disable_functions\" and \"disable_classes\" PHP options set via\n       Control API did not work.\n\n    *) Bugfix: Promises on request data in Node.js were not triggered.\n\n    *) Bugfix: various compatibility issues with Node.js applications.\n\n    *) Bugfix: a segmentation fault occurred in Node.js module if\n       application tried to read request body after request.end() was\n       called.\n\n    *) Bugfix: a segmentation fault occurred in Node.js module if\n       application attempted to send header twice.\n\n    *) Bugfix: names of response header fields in Node.js module were\n       erroneously treated as case-sensitive.\n\n    *) Bugfix: uncatched exceptions in Node.js were not logged.\n\n    *) Bugfix: global install of Node.js module from sources was broken on\n       some systems; the bug had appeared in 1.6.\n\n    *) Bugfix: traceback for exceptions during initialization of Python\n       applications might not be logged.\n\n    *) Bugfix: PHP module build failed if PHP interpreter was built with\n       thread safety enabled.\n\n\nChanges with Unit 1.6                                            15 Nov 2018\n\n    *) Change: \"make install\" now installs Node.js module as well if it was\n       configured.\n\n    *) Feature: \"--local\" ./configure option to install Node.js module\n       locally.\n\n    *) Bugfix: Node.js module might have crashed due to broken reference\n       counting.\n\n    *) Bugfix: asynchronous operations in Node.js might not have worked.\n\n    *) Bugfix: various compatibility issues with Node.js applications.\n\n    *) Bugfix: \"freed pointer is out of pool\" alerts might have appeared in\n       log.\n\n    *) Bugfix: module discovery did not work on 64-bit big-endian systems\n       like IBM/S390x.\n\n\nChanges with Unit 1.5                                            25 Oct 2018\n\n    *) Change: the \"type\" of application object for Go was changed to\n       \"external\".\n\n    *) Feature: initial version of Node.js package with basic HTTP\n       request-response support.\n\n    *) Feature: compatibility with LibreSSL.\n\n    *) Feature: --libdir and --incdir ./configure options to install libunit\n       headers and static library.\n\n    *) Bugfix: connection might be closed prematurely while sending\n       response; the bug had appeared in 1.3.\n\n    *) Bugfix: application processes might have stopped handling requests,\n       producing \"last message send failed: Resource temporarily\n       unavailable\" alerts in log; the bug had appeared in 1.4.\n\n    *) Bugfix: Go applications did not work when Unit was built with musl C\n       library.\n\n\nChanges with Unit 1.4                                            20 Sep 2018\n\n    *) Change: the control API maps the configuration object only at\n       \"/config/\".\n\n    *) Feature: TLS support for client connections.\n\n    *) Feature: TLS certificates storage control API.\n\n    *) Feature: Unit library (libunit) to streamline language module\n       integration.\n\n    *) Feature: \"408 Request Timeout\" responses while closing HTTP\n       keep-alive connections.\n\n    *) Feature: improvements in OpenBSD support. Thanks to David Carlier.\n\n    *) Bugfix: a segmentation fault might have occurred after\n       reconfiguration.\n\n    *) Bugfix: building on systems with non-default locale might be broken.\n\n    *) Bugfix: \"header_read_timeout\" might not work properly.\n\n    *) Bugfix: header fields values with non-ASCII bytes might be handled\n       incorrectly in Python 3 module.\n\n\nChanges with Unit 1.3                                            13 Jul 2018\n\n    *) Change: UTF-8 characters are now allowed in request header field\n       values.\n\n    *) Feature: configuration of the request body size limit.\n\n    *) Feature: configuration of various HTTP connection timeouts.\n\n    *) Feature: Ruby module now automatically uses Bundler where possible.\n\n    *) Feature: http.Flusher interface in Go module.\n\n    *) Bugfix: various issues in HTTP connection errors handling.\n\n    *) Bugfix: requests with body data might be handled incorrectly in PHP\n       module.\n\n    *) Bugfix: individual PHP configuration options specified via control\n       API were reset to previous values after the first request in\n       application process.\n\n\nChanges with Unit 1.2                                            07 Jun 2018\n\n    *) Feature: configuration of environment variables for application\n       processes.\n\n    *) Feature: customization of php.ini path.\n\n    *) Feature: setting of individual PHP configuration options.\n\n    *) Feature: configuration of execution arguments for Go applications.\n\n    *) Bugfix: keep-alive connections might hang after reconfiguration.\n\n\nChanges with Unit 1.1                                            26 Apr 2018\n\n    *) Bugfix: Python applications that use the write() callable did not\n       work.\n\n    *) Bugfix: virtual environments created with Python 3.3 or above might\n       not have worked.\n\n    *) Bugfix: the request.Read() function in Go applications did not\n       produce EOF when the whole body was read.\n\n    *) Bugfix: a segmentation fault might have occurred while access log\n       reopening.\n\n    *) Bugfix: in parsing of IPv6 control socket addresses.\n\n    *) Bugfix: loading of application modules was broken on OpenBSD.\n\n    *) Bugfix: a segmentation fault might have occurred when there were two\n       modules with the same type and version; the bug had appeared in 1.0.\n\n    *) Bugfix: alerts \"freed pointer points to non-freeble page\" might have\n       appeared in log on 32-bit platforms.\n\n\nChanges with Unit 1.0                                            12 Apr 2018\n\n    *) Change: configuration object moved into \"/config/\" path.\n\n    *) Feature: basic access logging.\n\n    *) Bugfix: 503 error occurred if Go application did not write response\n       header or body.\n\n    *) Bugfix: Ruby applications that use encoding conversions might not\n       have worked.\n\n    *) Bugfix: various stability issues.\n\n\nChanges with Unit 0.7                                            22 Mar 2018\n\n    *) Feature: Ruby application module.\n\n    *) Bugfix: in discovering modules.\n\n    *) Bugfix: various race conditions on reconfiguration and during\n       shutting down.\n\n    *) Bugfix: tabs and trailing spaces were not allowed in header fields\n       values.\n\n    *) Bugfix: a segmentation fault occurred in Python module if\n       start_response() was called outside of WSGI callable.\n\n    *) Bugfix: a segmentation fault might have occurred in PHP module if\n       there was an error while initialization.\n\n\nChanges with Unit 0.6                                            09 Feb 2018\n\n    *) Bugfix: the main process died when the \"type\" application option\n       contained version; the bug had appeared in 0.5.\n\n\nChanges with Unit 0.5                                            08 Feb 2018\n\n    *) Change: the \"workers\" application option was removed, the \"processes\"\n       application option should be used instead.\n\n    *) Feature: the \"processes\" application option with prefork and dynamic\n       process management support.\n\n    *) Feature: Perl application module.\n\n    *) Bugfix: in reading client request body; the bug had appeared in 0.3.\n\n    *) Bugfix: some Python applications might not have worked due to missing\n       \"wsgi.errors\" environ variable.\n\n    *) Bugfix: HTTP chunked responses might be encoded incorrectly on 32-bit\n       platforms.\n\n    *) Bugfix: infinite looping in HTTP parser.\n\n    *) Bugfix: segmentation fault in router.\n\n\nChanges with Unit 0.4                                            15 Jan 2018\n\n    *) Feature: compatibility with DragonFly BSD.\n\n    *) Feature: \"configure php --lib-static\" option.\n\n    *) Bugfix: HTTP request body was not passed to application; the bug had\n       appeared in 0.3.\n\n    *) Bugfix: HTTP large header buffers allocation and deallocation fixed;\n       the bug had appeared in 0.3.\n\n    *) Bugfix: some PHP applications might not have worked with relative\n       \"root\" path.\n\n\nChanges with Unit 0.3                                            28 Dec 2017\n\n    *) Change: the Go package name changed to \"nginx/unit\".\n\n    *) Change: in the \"limits.timeout\" application option: application start\n       time and time in queue now are not accounted.\n\n    *) Feature: the \"limits.requests\" application option.\n\n    *) Feature: application request processing latency optimization.\n\n    *) Feature: HTTP keep-alive connections support.\n\n    *) Feature: the \"home\" Python virtual environment configuration option.\n\n    *) Feature: Python atexit hook support.\n\n    *) Feature: various Go package improvements.\n\n    *) Bugfix: various crashes fixed.\n\n\nChanges with Unit 0.2                                            19 Oct 2017\n\n    *) Feature: configuration persistence.\n\n    *) Feature: improved handling of configuration errors.\n\n    *) Feature: application \"timeout\" property.\n\n    *) Bugfix: POST request for PHP were handled incorrectly.\n\n    *) Bugfix: the router exited abnormally if all listeners had been\n       deleted.\n\n    *) Bugfix: the router crashed under load.\n\n    *) Bugfix: memory leak in the router.\n\n\nChanges with Unit 0.1                                            06 Sep 2017\n\n    *) First public release.\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.267578125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the moderation team at nginx-oss-community@f5.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org), version 1.4,\navailable at <https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>\n\nFor answers to common questions about this code of conduct, see\n<https://www.contributor-covenant.org/faq>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.2275390625,
          "content": "# Contributing Guidelines\n\nThe following is a set of guidelines for contributing to NGINX Unit.  We do\nappreciate that you are considering contributing!\n\n## Table Of Contents\n\n- [Getting Started](#getting-started)\n- [Ask a Question](#ask-a-question)\n- [Contributing](#contributing)\n- [Git Style Guide](#git-style-guide)\n\n\n## Getting Started\n\nCheck out the [Quick Installation](README.md#quick-installation) and\n[Howto](https://unit.nginx.org/howto/) guides to get NGINX Unit up and\nrunning.\n\n\n## Ask a Question\n\nPlease open an [issue](https://github.com/nginx/unit/issues/new) on GitHub\nwith the label `question`.  You can also ask a question on\n[GitHub Discussions](https://github.com/nginx/unit/discussions) or the NGINX\nUnit mailing list, unit@nginx.org (subscribe\n[here](https://mailman.nginx.org/mailman3/lists/unit.nginx.org/)).\n\n\n## Contributing\n\n### Report a Bug\n\nEnsure the bug was not already reported by searching on GitHub under\n[Issues](https://github.com/nginx/unit/issues).\n\nIf the bug is a potential security vulnerability, please report using our\n[security policy](https://unit.nginx.org/troubleshooting/#getting-support).\n\nTo report a non-security bug, open an\n[issue](https://github.com/nginx/unit/issues/new) on GitHub with the label\n`bug`.  Be sure to include a title and clear description, as much relevant\ninformation as possible, and a code sample or an executable test case showing\nthe expected behavior that doesn't occur.\n\n\n### Suggest an Enhancement\n\nTo suggest an enhancement, open an\n[issue](https://github.com/nginx/unit/issues/new) on GitHub with the label\n`enhancement`.  Please do this before implementing a new feature to discuss\nthe feature first.\n\n\n### Open a Pull Request\n\nBefore submitting a PR, please read the NGINX Unit code guidelines to know\nmore about coding conventions and benchmarks.  Fork the repo, create a branch,\nand submit a PR when your changes are tested and ready for review.  Again, if\nyou'd like to implement a new feature, please consider creating a feature\nrequest issue first to start a discussion about the feature.\n\n\n## Git Style Guide\n\n- Create atomic commits.  A commit should do just one thing, i.e. you\n  shouldn't mix refactoring with functional code changes.  Do the\n  refactoring in one or more commits first.\n\n  Ideally you should rebase locally and force push new commits up.\n\n- In the subject line, use the imperative mood.  I.e. write the subject like\n  you're giving git a command, e.g. \"Free memory before exiting\". Do not\n  terminate the subject with a `.`\n\n- Try to limit the subject line to around 50 characters, but try not to\n  exceed 72.\n\n- Wrap the body of the commit message after 72 characters.\n\n- Use lowercase subject line prefixes for commits that affect a specific\n  portion of the code; examples include \"tests:\", \"ci:\", or \"http:\", and\n  also individual languages such as \"python:\" or \"php:\".  If multiple areas\n  are affected you can specify multiple prefixes, e.g. \"auto, perl:\"\n\n- If the commit fixes an open issue then you can use the \"Closes:\"\n  tag/trailer to reference it and have GitHub automatically close it once\n  it's been merged.  E.g.:\n\n  `Closes: https://github.com/nginx/unit/issues/9999`\n\n  That should go at the end of the commit message, separated by a blank line,\n  along with any other tags.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.9365234375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 1.3330078125,
          "content": "\n   NGINX Unit.\n\n   Copyright 2017-2024 NGINX, Inc.\n   Copyright 2017-2024 Andrei Zeliankou\n   Copyright 2018-2024 Konstantin Pavlov\n   Copyright 2021-2024 Zhidao Hong\n   Copyright 2022-2024 Andrew Clayton\n   Copyright 2022-2024 Liam Crilly\n   Copyright 2023-2024 Dan Callahan\n   Copyright 2023-2024 Danielle De Leo\n   Copyright 2023-2024 Dylan Arbour\n   Copyright 2023-2024 Gabor Javorszky\n   Copyright 2023-2024 Igor Ippolitov\n   Copyright 2023-2024 Taryn Musgrave\n   Copyright 2021-2023 Alejandro Colomar\n   Copyright 2017-2022 Valentin V. Bartenev\n   Copyright 2017-2022 Max Romanov\n   Copyright 2021-2022 Oisín Canty\n   Copyright 2017-2021 Igor Sysoev\n   Copyright 2017-2021 Andrei Belov\n   Copyright 2019-2021 Tiago Natel de Moura\n   Copyright 2019-2020 Axel Duch\n   Copyright 2018-2019 Alexander Borisov\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.345703125,
          "content": "# NGINX Unit\n\n[![Project Status: Active – The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active)\n[![CI](https://github.com/nginx/unit/actions/workflows/ci.yml/badge.svg)](https://github.com/nginx/unit/actions/workflows/ci.yml \"GitHub workflow CI\")\n[![GitHub Discussions](https://img.shields.io/badge/GitHub-discussions-009639)](https://github.com/nginx/unit/discussions \"GitHub Discussions\")\n\n## Universal Web App Server\n\n![NGINX Unit Logo](docs/unitlogo.svg)\n\nNGINX Unit is a lightweight and versatile open-source server that has\ntwo primary capabilities:\n\n- serves static media assets,\n- runs application code in eight languages.\n\nUnit compresses several layers of the modern application stack into a potent,\ncoherent solution with a focus on performance, low latency, and scalability. It\nis intended as a universal building block for any web architecture regardless\nof its complexity, from enterprise-scale deployments to your pet's homepage.\n\nIts native [RESTful JSON API](#openapi-specification) enables dynamic\nupdates with zero interruptions and flexible configuration, while its\nout-of-the-box productivity reliably scales to production-grade workloads. We\nachieve that with a complex, asynchronous, multithreading architecture\ncomprising multiple processes to ensure security and robustness while getting\nthe most out of today's computing platforms.\n\n## Installation\n\n### macOS\n\nRun the following command to install both `unitd` (the Unit daemon) and `unitctl` (the control tool).\n\n``` console\n$ brew install nginx/unit/unit\n```\n\nFor details and available language packages, see the\n[docs](https://unit.nginx.org/installation/#homebrew).\n\n### Docker\n\n``` console\n$ docker pull unit:<TAG>\n$ mkdir /tmp/unit-control # customize as needed.\n$ docker run -d \\\n      --mount type=bind,src=/tmp/unit-control,dst=/var/run \\\n      --mount type=bind,src=.,dst=/www \\\n      --network host \\\n      unit\n```\n\nFor a description of image tags, see the\n[docs](https://unit.nginx.org/installation/#docker-images).\n\nWARNING: latest image tag may not provide support for specific language\nmodules, *do* check the available image tags from the link above before\npulling your image.\n\nYour current working directory will now be mounted to the Unit image at `/www`.\nYou can reach its socket at `/tmp/unit-control/control.unit.sock` assuming no\nfurther customizations have been made.\n\n### Debian, Ubuntu, Amazon Linux, Fedora, Red Hat\n\nThis helper script configures the correct package repositories for system.\n``` console\n$ wget https://raw.githubusercontent.com/nginx/unit/master/tools/setup-unit && chmod +x setup-unit\n# ./setup-unit repo-config\n```\n\nDebian derivatives:\n``` console\n# apt install unit\n```\n\nFedora derivatives:\n``` console\n# yum install unit\n```\n\nFor details and available language packages, see the\n[docs](https://unit.nginx.org/installation/#official-packages).\n\n## Getting Started with `unitctl`\n\n[`unitctl`](tools/README.md) streamlines the management of NGINX Unit processes\nthrough an easy-to-use command line interface. To get started with `unitctl`,\ndownload it from the\n[official GitHub releases](https://github.com/nginx/unit/releases)\nor [Homebrew](#macos).\n\n### Installation\n\n> [!NOTE]\n> If you installed Unit with [Homebrew](#macos), you can skip this step\n> as `unitctl` is included by default.\n\nDownload the appropriate `unitctl` binary for your system from the\n[NGINX Unit releases](https://github.com/nginx/unit/releases/).\n\n``` console\n$ tar xzvf unitctl-master-x86_64-unknown-linux-gnu.tar.gz\n# mv unitctl /usr/local/bin/\n```\n\n\n## Launch Unit using Docker\nIf you have [Docker installed](https://docs.docker.com/engine/install/) on\nyour machine, and then you can effortlessly spin up one of\n[Unit's official Docker images](https://hub.docker.com/_/unit)\nalongside your application.\n\n> [!TIP]\n> How-to and configuration guides are available on\n[unit.nginx.org](https://unit.nginx.org/howto/) for web application frameworks\nbuilt with Python, PHP, WebAssembly, Node.js, Ruby, and more.\n\nHere's an example using the `unit:python` Docker image:\n``` console\n$ unitctl instances new 127.0.0.1:8001 /path/to/app 'unit:python'\n```\n\n`/path/to/app` will mount to `/www` in the Docker filesystem.\n\nSave this to `/path/to/app/wsgi.py`:\n```python\ndef application(environ, start_response):\n    start_response(\"200 OK\", [(\"Content-Type\", \"text/plain\")])\n    return (b\"Hello, Python on Unit!\")\n```\n\nYou can then interactively edit the currently active configuration:\n``` console\n$ unitctl edit\n```\n```jsonc\n{\n  \"listeners\": {\n    \"*:8000\": {\n      // Point listener to new application\n      \"pass\": \"applications/python\"\n    }\n  },\n\n  // Add an application definition\n  \"applications\": {\n    \"python\": {\n        \"type\": \"python\",\n        \"path\": \"/www/\",\n        \"module\": \"wsgi\"\n    }\n  }\n}\n```\nValid configurations will be applied upon save and close.\n\n``` console\n$ curl localhost:8000\n\nHello, Python on Unit!\n```\nMore Python configuration examples can be found in the\n[Unit docs](https://unit.nginx.org/howto/samples/#python).\n\n## Hello World with PHP and curl\n\nUnit runs apps in a\n[variety of languages](https://unit.nginx.org/howto/samples/).\nLet's explore the configuration of a simple PHP app on Unit with `curl`.\n\nSuppose you saved a PHP script as `/www/helloworld/index.php`:\n``` php\n<?php echo \"Hello, PHP on Unit!\"; ?>\n```\n\nTo run it on Unit with the `unit-php` module installed, first set up an\napplication object. Let's store our first config snippet in a file called\n`config.json`:\n\n``` json\n{\n    \"helloworld\": {\n        \"type\": \"php\",\n        \"root\": \"/www/helloworld/\"\n    }\n}\n```\n\nSaving it as a file isn't necessary, but can come in handy with larger objects.\n\nNow, `PUT` it into the `/config/applications` section of Unit's control API,\nusually available by default via a Unix domain socket:\n\n``` console\n# curl -X PUT --data-binary @config.json --unix-socket  \\\n       /path/to/control.unit.sock http://localhost/config/applications\n```\n``` json\n{\n\t\"success\": \"Reconfiguration done.\"\n}\n```\n\nNext, reference the app from a listener object in the `/config/listeners`\nsection of the API.  This time, we pass the config snippet straight from the\ncommand line:\n\n``` console\n# curl -X PUT -d '{\"127.0.0.1:8080\": {\"pass\": \"applications/helloworld\"}}'  \\\n       --unix-socket /path/to/control.unit.sock http://localhost/config/listeners\n```\n``` json\n{\n    \"success\": \"Reconfiguration done.\"\n}\n```\n\nNow Unit accepts requests at the specified IP and port, passing them to the\napplication process. Your app works!\n\n``` console\n$ curl 127.0.0.1:8080\n\n      Hello, PHP on Unit!\n```\n\nFinally, query the entire `/config` section of the control API:\n\n``` console\n# curl --unix-socket /path/to/control.unit.sock http://localhost/config/\n```\n\nUnit's output should contain both snippets, neatly organized:\n\n``` json\n{\n    \"listeners\": {\n        \"127.0.0.1:8080\": {\n            \"pass\": \"applications/helloworld\"\n        }\n    },\n\n    \"applications\": {\n        \"helloworld\": {\n            \"type\": \"php\",\n            \"root\": \"/www/helloworld/\"\n        }\n    }\n}\n```\n\n## WebAssembly\nUnit supports running WebAssembly Components (WASI 0.2).\nFor more information see the\n[Unit Configuration Docs](https://unit.nginx.org/configuration/#configuration-wasm).\n\n## OpenAPI Specification\n\nOur [OpenAPI specification](docs/unit-openapi.yaml) aims to simplify\nconfiguring and integrating NGINX Unit deployments and provide an authoritative\nsource of knowledge about the control API.\n\n## Community\n\n- The go-to place to start asking questions and share your thoughts is\n [GitHub Discussions](https://github.com/nginx/unit/discussions).\n\n- Our [GitHub issues page](https://github.com/nginx/unit/issues) offers\n  space for a more technical discussion at your own pace.\n\n- The [project map](https://github.com/orgs/nginx/projects/1) on\n  GitHub sheds some light on our current work and plans for the future.\n\n- Our [official website](https://unit.nginx.org/) may provide answers\n  not easily found otherwise.\n\n- Get involved with the project by contributing! See the\n  [contributing guide](CONTRIBUTING.md) for details.\n\n- To reach the team directly, subscribe to the\n  [mailing list](https://mailman.nginx.org/mailman/listinfo/unit).\n\n- For security issues, [email us](mailto:security-alert@nginx.org),\n  mentioning NGINX Unit in the subject and following the [CVSS\n  v3.1](https://www.first.org/cvss/v3.1/specification-document) spec.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.900390625,
          "content": "# Security Policy\n\n## Latest Versions\n\nWe advise users to run or update to the most recent release of this\nproject. Older versions of this project may not have all enhancements\nand/or bug fixes applied to them.\n\n## Reporting a Vulnerability\n\nThe F5 Security Incident Response Team (F5 SIRT) has an email alias that\nmakes it easy to report potential security vulnerabilities:\n\n- If you’re an F5 customer with an active support contract, please\ncontact [F5 Technical Support](https://www.f5.com/services/support).\n- If you aren’t an F5 customer, please report any potential or current\ninstances of security vulnerabilities with any F5 product to the\nF5 Security Incident Response Team at <F5SIRT@f5.com>.\n\nFor more information please read the F5 SIRT vulnerability reporting\nguidelines available at [https://www.f5.com/services/support/report-a-vulnerability](https://www.f5.com/services/support/report-a-vulnerability)."
        },
        {
          "name": "auto",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 3.505859375,
          "content": "#!/bin/sh\n\n# Copyright (C) Igor Sysoev\n# Copyright (C) NGINX, Inc.\n\n\n# Disable localized program messages.\nLC_ALL=C\nexport LC_ALL\n\n# Stop on error exit status.\nset -e\n\n# Stop on uninitialized variable.\nset -u\n\n# Initialize variables with null values if they are not defined.\nCFLAGS=${CFLAGS=}\nNXT_TEST_CFLAGS=${NXT_TEST_CFLAGS=}\nNXT_TEST_LIBS=${NXT_TEST_LIBS=}\n\nNXT_BUILD_DIR=${NXT_BUILD_DIR:-build}\n\nNXT_AUTOTEST=$NXT_BUILD_DIR/autotest\nNXT_AUTOCONF_ERR=$NXT_BUILD_DIR/autoconf.err\nNXT_AUTOCONF_DATA=$NXT_BUILD_DIR/autoconf.data\nNXT_AUTO_CONFIG_H=$NXT_BUILD_DIR/include/nxt_auto_config.h\nNXT_VERSION_H=$NXT_BUILD_DIR/include/nxt_version.h\nNXT_MAKEFILE=$NXT_BUILD_DIR/Makefile\n\nCC=${CC:-cc}\n\nNXT_DAEMON=unitd\nNXT_USER=\"nobody\"\nNXT_GROUP=\n\nnxt_module=${1:-\"\"}\n\ncase $nxt_module in\n    \"\"|--*)\n    ;;\n\n    unit)\n        shift\n    ;;\n\n    *)\n        . auto/modules/conf\n        exit 0\n    ;;\nesac\n\n\n. ./version\n. auto/os/test\n. auto/options\n\nmkdir -p $NXT_BUILD_DIR\nmkdir -p $NXT_BUILD_DIR/bin\nmkdir -p $NXT_BUILD_DIR/fuzzing\nmkdir -p $NXT_BUILD_DIR/include\nmkdir -p $NXT_BUILD_DIR/lib\nmkdir -p $NXT_BUILD_DIR/lib/unit/modules\nmkdir -p $NXT_BUILD_DIR/sbin\nmkdir -p $NXT_BUILD_DIR/share/man/man8\nmkdir -p $NXT_BUILD_DIR/share/pkgconfig\nmkdir -p $NXT_BUILD_DIR/src\nmkdir -p $NXT_BUILD_DIR/src/test\nmkdir -p $NXT_BUILD_DIR/var/lib/unit\nmkdir -p $NXT_BUILD_DIR/var/log/unit\n\n\n> $NXT_AUTOCONF_ERR\n> $NXT_AUTO_CONFIG_H\n\n. auto/cc/test\n\n\ncat << END >> $NXT_AUTO_CONFIG_H\n\n#define NXT_CONFIGURE_OPTIONS  \"$NXT_CONFIGURE_OPTIONS\"\n#define NXT_SYSTEM_VERSION     \"$NXT_SYSTEM $NXT_SYSTEM_VERSION $NXT_SYSTEM_PLATFORM\"\n#define NXT_COMPILER_VERSION   \"$NXT_CC_VERSION\"\n\n#define NXT_PID                \"$NXT_PID\"\n#define NXT_LOG                \"$NXT_LOG\"\n#define NXT_MODULESDIR         \"$NXT_MODULESDIR\"\n#define NXT_STATEDIR           \"$NXT_STATEDIR\"\n#define NXT_TMPDIR             \"$NXT_TMPDIR\"\n\n#define NXT_CONTROL_SOCK       \"$NXT_CONTROL\"\n\n#define NXT_USER               \"$NXT_USER\"\n#define NXT_GROUP              \"$NXT_GROUP\"\n\nEND\n\n\nif [ $echo = echo ]; then\n    # Build a portable \"echo\" program that supports only \"-n\" option.\n    # This also tests C compiler ability to create executables.\n    . auto/echo/build\nfi\n\n\nnxt_have=NXT_UNIX . auto/have\n\nif [ $NXT_UNIX_DOMAIN = YES ]; then\n    nxt_have=NXT_HAVE_UNIX_DOMAIN . auto/have\nfi\n\nNXT_LIBRT=\n\n. auto/endian\n. auto/types\n. auto/clang\n. auto/atomic\n. auto/malloc\n. auto/mmap\n. auto/shmem\n. auto/time\n. auto/threads\n. auto/events\n. auto/sockets\n. auto/sendfile\n. auto/files\n. auto/unix\n. auto/os/conf\n. auto/ssltls\n\nif [ $NXT_REGEX = YES ]; then\n    . auto/pcre\nfi\n\n. auto/cgroup\n. auto/isolation\n. auto/capability\n. auto/sched\n\n\ncase \"$NXT_SYSTEM_PLATFORM\" in\n    i386 | amd64 | x86_64)\n        nxt_have=NXT_HAVE_NONALIGNED . auto/have\n    ;;\nesac\n\n\nif [ $NXT_DEBUG = YES ]; then\n    nxt_debug=1\nelse\n    nxt_debug=0\nfi\n\ncat << END >> $NXT_AUTO_CONFIG_H\n\n#ifndef NXT_DEBUG\n#define NXT_DEBUG  $nxt_debug\n#endif\n\n#define NXT_SHM_PREFIX  \"$NXT_SHM_PREFIX\"\n\nEND\n\n. auto/test_build\n. auto/sources\n. auto/save\n\n# LOOK\n\nNXT_LIB_AUX_CFLAGS=\"$NXT_OPENSSL_CFLAGS $NXT_GNUTLS_CFLAGS \\\\\n                    $NXT_CYASSL_CFLAGS $NXT_POLARSSL_CFLAGS \\\\\n                    $NXT_PCRE_CFLAGS\"\n\nNXT_LIB_AUX_LIBS=\"$NXT_OPENSSL_LIBS $NXT_GNUTLS_LIBS \\\\\n                    $NXT_CYASSL_LIBS $NXT_POLARSSL_LIBS \\\\\n                    $NXT_PCRE_LIB\"\n\nif [ $NXT_NJS != NO ]; then\n    . auto/njs\nfi\n\nNXT_OTEL_LIB_DIR=src/otel\nif [ $NXT_OTEL != NO ]; then\n    . auto/otel\n    NXT_LIB_AUX_LIBS=\"$NXT_LIB_AUX_LIBS $NXT_OTEL_LIBS\"\nfi\n\n. auto/make\n. auto/fuzzing\n. auto/summary\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzing",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "blob",
          "size": 0.064453125,
          "content": "\n# Copyright (C) NGINX, Inc.\n\nNXT_VERSION=1.35.0\nNXT_VERNUM=13500\n"
        }
      ]
    }
  ]
}