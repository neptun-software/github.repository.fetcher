{
  "metadata": {
    "timestamp": 1736710265565,
    "page": 25,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xmrig/xmrig",
      "stars": 8975,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1044921875,
          "content": "/build\nscripts/build\nscripts/deps\n/CMakeLists.txt.user\n/.idea\n/src/backend/opencl/cl/cn/cryptonight_gen.cl\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 42.015625,
          "content": "# v6.22.2\n- [#3569](https://github.com/xmrig/xmrig/pull/3569) Fixed corrupted API output in some rare conditions.\n- [#3571](https://github.com/xmrig/xmrig/pull/3571) Fixed number of threads on the new Intel Core Ultra CPUs.\n\n# v6.22.1\n- [#3531](https://github.com/xmrig/xmrig/pull/3531) Always reset nonce on RandomX dataset change.\n- [#3534](https://github.com/xmrig/xmrig/pull/3534) Fixed threads auto-config on Zen5.\n- [#3535](https://github.com/xmrig/xmrig/pull/3535) RandomX: tweaks for Zen5.\n- [#3539](https://github.com/xmrig/xmrig/pull/3539) Added Zen5 to `randomx_boost.sh`.\n- [#3540](https://github.com/xmrig/xmrig/pull/3540) Detect AMD engineering samples in `randomx_boost.sh`.\n\n# v6.22.0\n- [#2411](https://github.com/xmrig/xmrig/pull/2411) Added support for [Yada](https://yadacoin.io/) (`rx/yada` algorithm).\n- [#3492](https://github.com/xmrig/xmrig/pull/3492) Fixed `--background` option on Unix systems.\n- [#3518](https://github.com/xmrig/xmrig/pull/3518) Possible fix for corrupted API output in rare cases.\n- [#3522](https://github.com/xmrig/xmrig/pull/3522) Removed `rx/keva` algorithm.\n- [#3525](https://github.com/xmrig/xmrig/pull/3525) Added Zen5 detection.\n- [#3528](https://github.com/xmrig/xmrig/pull/3528) Added `rx/yada` OpenCL support.\n\n# v6.21.3\n- [#3462](https://github.com/xmrig/xmrig/pull/3462) RandomX: correct memcpy size for JIT initialization.\n\n# v6.21.2\n- The dependencies of all prebuilt releases have been updated. Support for old Ubuntu releases has been dropped.\n- [#2800](https://github.com/xmrig/xmrig/issues/2800) Fixed donation with GhostRider algorithm for builds without KawPow algorithm.\n- [#3436](https://github.com/xmrig/xmrig/pull/3436) Fixed, the file log writer was not thread-safe.\n- [#3450](https://github.com/xmrig/xmrig/pull/3450) Fixed RandomX crash when compiled with fortify_source.\n\n# v6.21.1\n- [#3391](https://github.com/xmrig/xmrig/pull/3391) Added support for townforge (monero fork using randomx).\n- [#3399](https://github.com/xmrig/xmrig/pull/3399) Fixed Zephyr mining (OpenCL).\n- [#3420](https://github.com/xmrig/xmrig/pull/3420) Fixed segfault in HTTP API rebind.\n\n# v6.21.0\n- [#3302](https://github.com/xmrig/xmrig/pull/3302) [#3312](https://github.com/xmrig/xmrig/pull/3312) Enabled keepalive for Windows (>= Vista).\n- [#3320](https://github.com/xmrig/xmrig/pull/3320) Added \"built for OS/architecture/bits\" to \"ABOUT\".\n- [#3339](https://github.com/xmrig/xmrig/pull/3339) Added SNI option for TLS connections.\n- [#3342](https://github.com/xmrig/xmrig/pull/3342) Update `cn_main_loop.asm`.\n- [#3346](https://github.com/xmrig/xmrig/pull/3346) ARM64 JIT: don't use `x18` register.\n- [#3348](https://github.com/xmrig/xmrig/pull/3348) Update to latest `sse2neon.h`.\n- [#3356](https://github.com/xmrig/xmrig/pull/3356) Updated pricing record size for **Zephyr** solo mining.\n- [#3358](https://github.com/xmrig/xmrig/pull/3358) **Zephyr** solo mining: handle multiple outputs.\n\n# v6.20.0\n- Added new ARM CPU names.\n- [#2394](https://github.com/xmrig/xmrig/pull/2394) Added new CMake options `ARM_V8` and `ARM_V7`.\n- [#2830](https://github.com/xmrig/xmrig/pull/2830) Added API rebind polling.\n- [#2927](https://github.com/xmrig/xmrig/pull/2927) Fixed compatibility with hwloc 1.11.x.\n- [#3060](https://github.com/xmrig/xmrig/pull/3060) Added x86 to `README.md`.\n- [#3236](https://github.com/xmrig/xmrig/pull/3236) Fixed: receive CUDA loader error on Linux too.\n- [#3290](https://github.com/xmrig/xmrig/pull/3290) Added [Zephyr](https://www.zephyrprotocol.com/) coin support for solo mining.\n\n# v6.19.3\n- [#3245](https://github.com/xmrig/xmrig/issues/3245) Improved algorithm negotiation for donation rounds by sending extra information about current mining job.\n- [#3254](https://github.com/xmrig/xmrig/pull/3254) Tweaked auto-tuning for Intel CPUs.\n- [#3271](https://github.com/xmrig/xmrig/pull/3271) RandomX: optimized program generation.\n- [#3273](https://github.com/xmrig/xmrig/pull/3273) RandomX: fixed undefined behavior.\n- [#3275](https://github.com/xmrig/xmrig/pull/3275) RandomX: fixed `jccErratum` list.\n- [#3280](https://github.com/xmrig/xmrig/pull/3280) Updated example scripts.\n\n# v6.19.2\n- [#3230](https://github.com/xmrig/xmrig/pull/3230) Fixed parsing of `TX_EXTRA_MERGE_MINING_TAG`.\n- [#3232](https://github.com/xmrig/xmrig/pull/3232) Added new `X-Hash-Difficulty` HTTP header.\n- [#3240](https://github.com/xmrig/xmrig/pull/3240) Improved .cmd files when run by shortcuts on another drive.\n- [#3241](https://github.com/xmrig/xmrig/pull/3241) Added view tag calculation (fixes Wownero solo mining issue).\n\n# v6.19.1\n- Resolved deprecated methods warnings with OpenSSL 3.0.\n- [#3213](https://github.com/xmrig/xmrig/pull/3213) Fixed build with 32-bit clang 15.\n- [#3218](https://github.com/xmrig/xmrig/pull/3218) Fixed: `--randomx-wrmsr=-1` worked only on Intel.\n- [#3228](https://github.com/xmrig/xmrig/pull/3228) Fixed build with gcc 13.\n\n# v6.19.0\n- [#3144](https://github.com/xmrig/xmrig/pull/3144) Update to latest `sse2neon.h`.\n- [#3161](https://github.com/xmrig/xmrig/pull/3161) MSVC build: enabled parallel compilation.\n- [#3163](https://github.com/xmrig/xmrig/pull/3163) Improved Zen 3 MSR mod.\n- [#3176](https://github.com/xmrig/xmrig/pull/3176) Update cmake required version to 3.1.\n- [#3182](https://github.com/xmrig/xmrig/pull/3182) DragonflyBSD compilation fixes.\n- [#3196](https://github.com/xmrig/xmrig/pull/3196) Show IP address for failed connections.\n- [#3185](https://github.com/xmrig/xmrig/issues/3185) Fixed macOS DMI reader.\n- [#3198](https://github.com/xmrig/xmrig/pull/3198) Fixed broken RandomX light mode mining.\n- [#3202](https://github.com/xmrig/xmrig/pull/3202) Solo mining: added job timeout (default is 15 seconds).\n\n# v6.18.1\n- [#3129](https://github.com/xmrig/xmrig/pull/3129) Fix: protectRX flushed CPU cache only on MacOS/iOS.\n- [#3126](https://github.com/xmrig/xmrig/pull/3126) Don't reset when pool sends the same job blob.\n- [#3120](https://github.com/xmrig/xmrig/pull/3120) RandomX: optimized `CFROUND` elimination.\n- [#3109](https://github.com/xmrig/xmrig/pull/3109) RandomX: added Blake2 AVX2 version.\n- [#3082](https://github.com/xmrig/xmrig/pull/3082) Fixed GCC 12 warnings.\n- [#3075](https://github.com/xmrig/xmrig/pull/3075) Recognize `armv7ve` as valid ARMv7 target.\n- [#3132](https://github.com/xmrig/xmrig/pull/3132) RandomX: added MSR mod for Zen 4.\n- [#3134](https://github.com/xmrig/xmrig/pull/3134) Added Zen4 to `randomx_boost.sh`.\n\n# v6.18.0\n- [#3067](https://github.com/xmrig/xmrig/pull/3067) Monero v15 network upgrade support and more house keeping.\n  - Removed deprecated AstroBWTv1 and v2.\n  - Fixed debug GhostRider build.\n  - Monero v15 network upgrade support.\n  - Fixed ZMQ debug log.\n  - Improved daemon ZMQ mining stability.\n- [#3054](https://github.com/xmrig/xmrig/pull/3054) Fixes for 32-bit ARM.\n- [#3042](https://github.com/xmrig/xmrig/pull/3042) Fixed being unable to resume from `pause-on-battery`.\n- [#3031](https://github.com/xmrig/xmrig/pull/3031) Fixed `--cpu-priority` not working sometimes.\n- [#3020](https://github.com/xmrig/xmrig/pull/3020) Removed old AstroBWT algorithm.\n\n# v6.17.0\n- [#2954](https://github.com/xmrig/xmrig/pull/2954) **Dero HE fork support (`astrobwt/v2` algorithm).**\n  - [#2961](https://github.com/xmrig/xmrig/pull/2961) Dero HE (`astrobwt/v2`) CUDA config generator.\n  - [#2969](https://github.com/xmrig/xmrig/pull/2969) Dero HE (`astrobwt/v2`) OpenCL support.\n- Fixed displayed DMI memory information for empty slots.\n- [#2932](https://github.com/xmrig/xmrig/pull/2932) Fixed GhostRider with hwloc disabled.\n\n# v6.16.4\n- [#2904](https://github.com/xmrig/xmrig/pull/2904) Fixed unaligned memory accesses.\n- [#2908](https://github.com/xmrig/xmrig/pull/2908) Added MSVC/2022 to `version.h`.\n- [#2910](https://github.com/xmrig/xmrig/issues/2910) Fixed donation for GhostRider/RTM.\n\n# v6.16.3\n- [#2778](https://github.com/xmrig/xmrig/pull/2778) Fixed `READY threads X/X` display after algorithm switching.\n- [#2782](https://github.com/xmrig/xmrig/pull/2782) Updated GhostRider documentation.\n- [#2815](https://github.com/xmrig/xmrig/pull/2815) Fixed `cn-heavy` in 32-bit builds.\n- [#2827](https://github.com/xmrig/xmrig/pull/2827) GhostRider: set correct priority for helper threads.\n- [#2837](https://github.com/xmrig/xmrig/pull/2837) RandomX: don't restart mining threads when the seed changes.\n- [#2848](https://github.com/xmrig/xmrig/pull/2848) GhostRider: added support for `client.reconnect` method.\n- [#2856](https://github.com/xmrig/xmrig/pull/2856) Fix for short responses from some Raptoreum pools.\n- [#2873](https://github.com/xmrig/xmrig/pull/2873) Fixed GhostRider benchmark on single-core systems.\n- [#2882](https://github.com/xmrig/xmrig/pull/2882) Fixed ARMv7 compilation.\n- [#2893](https://github.com/xmrig/xmrig/pull/2893) KawPow OpenCL: use separate UV loop for building programs.\n\n# v6.16.2\n- [#2751](https://github.com/xmrig/xmrig/pull/2751) Fixed crash on CPUs supporting VAES and running GCC-compiled xmrig.\n- [#2761](https://github.com/xmrig/xmrig/pull/2761) Fixed broken auto-tuning in GCC Windows build.\n- [#2771](https://github.com/xmrig/xmrig/issues/2771) Fixed environment variables support for GhostRider and KawPow. \n- [#2769](https://github.com/xmrig/xmrig/pull/2769) Performance fixes:\n  - Fixed several performance bottlenecks introduced in v6.16.1.\n  - Fixed overall GCC-compiled build performance, it's the same speed as MSVC build now.\n  - **Linux builds are up to 10% faster now compared to v6.16.0 GCC build.**\n  - **Windows builds are up to 5% faster now compared to v6.16.0 MSVC build.**\n\n# v6.16.1\n- [#2729](https://github.com/xmrig/xmrig/pull/2729) GhostRider fixes:\n  - Added average hashrate display.\n  - Fixed the number of threads shown at startup.\n  - Fixed `--threads` or `-t` command line option (but `--cpu-max-threads-hint` is recommended to use).\n- [#2738](https://github.com/xmrig/xmrig/pull/2738) GhostRider fixes:\n  - Fixed \"difficulty is not a number\" error when diff is high on some pools.\n  - Fixed GhostRider compilation when `WITH_KAWPOW=OFF`.\n- [#2740](https://github.com/xmrig/xmrig/pull/2740) Added VAES support for Cryptonight variants **+4% speedup on Zen3**.\n  - VAES instructions are available on Intel Ice Lake/AMD Zen3 and newer CPUs.\n  - +4% speedup on Ryzen 5 5600X.\n\n# v6.16.0\n- [#2712](https://github.com/xmrig/xmrig/pull/2712) **GhostRider algorithm (Raptoreum) support**: read the [RELEASE NOTES](src/crypto/ghostrider/README.md) for quick start guide and performance comparisons.\n- [#2682](https://github.com/xmrig/xmrig/pull/2682) Fixed: use cn-heavy optimization only for Vermeer CPUs.\n- [#2684](https://github.com/xmrig/xmrig/pull/2684) MSR mod: fix for error 183.\n\n# v6.15.3\n- [#2614](https://github.com/xmrig/xmrig/pull/2614) OpenCL fixes for non-AMD platforms.\n- [#2623](https://github.com/xmrig/xmrig/pull/2623) Fixed compiling without kawpow.\n- [#2636](https://github.com/xmrig/xmrig/pull/2636) [#2639](https://github.com/xmrig/xmrig/pull/2639) AstroBWT speedup (up to +35%).\n- [#2646](https://github.com/xmrig/xmrig/pull/2646) Fixed MSVC compilation error.\n\n# v6.15.2\n- [#2606](https://github.com/xmrig/xmrig/pull/2606) Fixed: AstroBWT auto-config ignored `max-threads-hint`.\n- Fixed possible crash on Windows (regression in v6.15.1).\n\n# v6.15.1\n- [#2586](https://github.com/xmrig/xmrig/pull/2586) Fixed Windows 7 compatibility.\n- [#2594](https://github.com/xmrig/xmrig/pull/2594) Added Windows taskbar icon colors.\n\n# v6.15.0\n- [#2548](https://github.com/xmrig/xmrig/pull/2548) Added automatic coin detection for daemon mining.\n- [#2563](https://github.com/xmrig/xmrig/pull/2563) Added new algorithm RandomX Graft (`rx/graft`).\n- [#2565](https://github.com/xmrig/xmrig/pull/2565) AstroBWT: added AVX2 Salsa20 implementation.\n- Added support for new CUDA plugin API (previous API still supported).\n\n# v6.14.1\n- [#2532](https://github.com/xmrig/xmrig/pull/2532) Refactoring: stable (persistent) algorithms IDs.\n- [#2537](https://github.com/xmrig/xmrig/pull/2537) Fixed Termux build.\n\n# v6.14.0\n- [#2484](https://github.com/xmrig/xmrig/pull/2484) Added ZeroMQ support for solo mining.\n- [#2476](https://github.com/xmrig/xmrig/issues/2476) Fixed crash in DMI memory reader.\n- [#2492](https://github.com/xmrig/xmrig/issues/2492) Added missing `--huge-pages-jit` command line option.\n- [#2512](https://github.com/xmrig/xmrig/pull/2512) Added show the number of transactions in pool job.\n\n# v6.13.1\n- [#2468](https://github.com/xmrig/xmrig/pull/2468) Fixed regression in previous version: don't send miner signature during regular mining.\n\n# v6.13.0\n- [#2445](https://github.com/xmrig/xmrig/pull/2445) Added support for solo mining with miner signatures for the upcoming Wownero fork.\n\n# v6.12.2\n- [#2280](https://github.com/xmrig/xmrig/issues/2280) GPU backends are now disabled in benchmark mode.\n- [#2322](https://github.com/xmrig/xmrig/pull/2322) Improved MSR compatibility with recent Linux kernels and updated `randomx_boost.sh`.\n- [#2340](https://github.com/xmrig/xmrig/pull/2340) Fixed AES detection on FreeBSD on ARM.\n- [#2341](https://github.com/xmrig/xmrig/pull/2341) `sse2neon` updated to the latest version.\n- [#2351](https://github.com/xmrig/xmrig/issues/2351) Fixed help output for `--cpu-priority` and `--cpu-affinity` option.\n- [#2375](https://github.com/xmrig/xmrig/pull/2375) Fixed macOS CUDA backend default loader name.\n- [#2378](https://github.com/xmrig/xmrig/pull/2378) Fixed broken light mode mining on x86.\n- [#2379](https://github.com/xmrig/xmrig/pull/2379) Fixed CL code for KawPow where it assumes everything is AMD.\n- [#2386](https://github.com/xmrig/xmrig/pull/2386) RandomX: enabled `IMUL_RCP` optimization for light mode mining.\n- [#2393](https://github.com/xmrig/xmrig/pull/2393) RandomX: added BMI2 version for scratchpad prefetch.\n- [#2395](https://github.com/xmrig/xmrig/pull/2395) RandomX: rewrote dataset read code.\n- [#2398](https://github.com/xmrig/xmrig/pull/2398) RandomX: optimized ARMv8 dataset read.\n- Added `argon2/ninja` alias for `argon2/wrkz` algorithm.\n\n# v6.12.1\n- [#2296](https://github.com/xmrig/xmrig/pull/2296) Fixed Zen3 assembly code for `cn/upx2` algorithm.\n\n# v6.12.0\n- [#2276](https://github.com/xmrig/xmrig/pull/2276) Added support for Uplexa (`cn/upx2` algorithm).\n- [#2261](https://github.com/xmrig/xmrig/pull/2261) Show total hashrate if compiled without OpenCL.\n- [#2289](https://github.com/xmrig/xmrig/pull/2289) RandomX: optimized `IMUL_RCP` instruction.\n- Added support for `--user` command line option for online benchmark.\n\n# v6.11.2\n- [#2207](https://github.com/xmrig/xmrig/issues/2207) Fixed regression in HTTP parser and llhttp updated to v5.1.0.\n\n# v6.11.1\n- [#2239](https://github.com/xmrig/xmrig/pull/2239) Fixed broken `coin` setting functionality.\n\n# v6.11.0\n- [#2196](https://github.com/xmrig/xmrig/pull/2196) Improved DNS subsystem and added new DNS specific options.\n- [#2172](https://github.com/xmrig/xmrig/pull/2172) Fixed build on Alpine 3.13.\n- [#2177](https://github.com/xmrig/xmrig/pull/2177) Fixed ARM specific compilation error with GCC 10.2.\n- [#2214](https://github.com/xmrig/xmrig/pull/2214) [#2216](https://github.com/xmrig/xmrig/pull/2216) [#2235](https://github.com/xmrig/xmrig/pull/2235) Optimized `cn-heavy` algorithm.\n- [#2217](https://github.com/xmrig/xmrig/pull/2217) Fixed mining job creation sequence.\n- [#2225](https://github.com/xmrig/xmrig/pull/2225) Fixed build without OpenCL support on some systems.\n- [#2229](https://github.com/xmrig/xmrig/pull/2229) Don't use RandomX JIT if `WITH_ASM=OFF`.\n- [#2228](https://github.com/xmrig/xmrig/pull/2228) Removed useless code for cryptonight algorithms.\n- [#2234](https://github.com/xmrig/xmrig/pull/2234) Fixed build error on gcc 4.8.\n\n# v6.10.0\n- [#2122](https://github.com/xmrig/xmrig/pull/2122) Fixed pause logic when both pause on battery and user activity are enabled.\n- [#2123](https://github.com/xmrig/xmrig/issues/2123) Fixed compatibility with gcc 4.8.\n- [#2147](https://github.com/xmrig/xmrig/pull/2147) Fixed many `new job` messages when solo mining.\n- [#2150](https://github.com/xmrig/xmrig/pull/2150) Updated `sse2neon.h` to the latest master, fixes build on ARMv7.\n- [#2157](https://github.com/xmrig/xmrig/pull/2157) Fixed crash in `cn-heavy` on Zen3 with manual thread count.\n- Fixed possible out of order write to log file.\n- [http-parser](https://github.com/nodejs/http-parser) replaced to [llhttp](https://github.com/nodejs/llhttp).\n- For official builds: libuv, hwloc and OpenSSL updated to latest versions.\n\n# v6.9.0\n- [#2104](https://github.com/xmrig/xmrig/pull/2104) Added [pause-on-active](https://xmrig.com/docs/miner/config/misc#pause-on-active) config option and `--pause-on-active=N` command line option.\n- [#2112](https://github.com/xmrig/xmrig/pull/2112) Added support for [Tari merge mining](https://github.com/tari-project/tari/blob/development/README.md#tari-merge-mining).\n- [#2117](https://github.com/xmrig/xmrig/pull/2117) Fixed crash when GPU mining `cn-heavy` on Zen3 system.\n\n# v6.8.2\n- [#2080](https://github.com/xmrig/xmrig/pull/2080) Fixed compile error in Termux.\n- [#2089](https://github.com/xmrig/xmrig/pull/2089) Optimized CryptoNight-Heavy for Zen3, 7-8% speedup.\n\n# v6.8.1\n- [#2064](https://github.com/xmrig/xmrig/pull/2064) Added documentation for config.json CPU options.\n- [#2066](https://github.com/xmrig/xmrig/issues/2066) Fixed AMD GPUs health data readings on Linux.\n- [#2067](https://github.com/xmrig/xmrig/pull/2067) Fixed compilation error when RandomX and Argon2 are disabled.\n- [#2076](https://github.com/xmrig/xmrig/pull/2076) Added support for flexible huge page sizes on Linux.\n- [#2077](https://github.com/xmrig/xmrig/pull/2077) Fixed `illegal instruction` crash on ARM.\n\n# v6.8.0\n- [#2052](https://github.com/xmrig/xmrig/pull/2052) Added DMI/SMBIOS reader.\n  - Added information about memory modules on the miner startup and for online benchmark.\n  - Added new HTTP API endpoint: `GET /2/dmi`.\n  - Added new command line option `--no-dmi` or config option `\"dmi\"`.\n  - Added new CMake option `-DWITH_DMI=OFF`.\n- [#2057](https://github.com/xmrig/xmrig/pull/2057) Improved MSR subsystem code quality.\n- [#2058](https://github.com/xmrig/xmrig/pull/2058) RandomX JIT x86: removed unnecessary instructions.\n\n# v6.7.2\n- [#2039](https://github.com/xmrig/xmrig/pull/2039) Fixed solo mining.\n\n# v6.7.1\n- [#1995](https://github.com/xmrig/xmrig/issues/1995) Fixed log initialization.\n- [#1998](https://github.com/xmrig/xmrig/pull/1998) Added hashrate in the benchmark finished message.\n- [#2009](https://github.com/xmrig/xmrig/pull/2009) AstroBWT OpenCL fixes.\n- [#2028](https://github.com/xmrig/xmrig/pull/2028) RandomX x86 JIT: removed redundant `CFROUND`.\n\n# v6.7.0\n- **[#1991](https://github.com/xmrig/xmrig/issues/1991) Added Apple M1 processor support.**\n- **[#1986](https://github.com/xmrig/xmrig/pull/1986) Up to 20-30% faster RandomX dataset initialization with AVX2 on some CPUs.**\n- [#1964](https://github.com/xmrig/xmrig/pull/1964) Cleanup and refactoring.\n- [#1966](https://github.com/xmrig/xmrig/pull/1966) Removed libcpuid support.\n- [#1968](https://github.com/xmrig/xmrig/pull/1968) Added virtual machine detection.\n- [#1969](https://github.com/xmrig/xmrig/pull/1969) [#1970](https://github.com/xmrig/xmrig/pull/1970) Fixed errors found by static analysis.\n- [#1977](https://github.com/xmrig/xmrig/pull/1977) Fixed: secure JIT and huge pages are incompatible on Windows.\n- [#1979](https://github.com/xmrig/xmrig/pull/1979) Term `x64` replaced to `64-bit`.\n- [#1980](https://github.com/xmrig/xmrig/pull/1980) Fixed build on gcc 11.\n- [#1989](https://github.com/xmrig/xmrig/pull/1989) Fixed broken Dero solo mining.\n\n# v6.6.2\n- [#1958](https://github.com/xmrig/xmrig/pull/1958) Added example mining scripts to help new miners.\n- [#1959](https://github.com/xmrig/xmrig/pull/1959) Optimized JIT compiler.\n- [#1960](https://github.com/xmrig/xmrig/pull/1960) Fixed RandomX init when switching to other algo and back.\n\n# v6.6.1\n- Fixed, benchmark validation on NUMA hardware produced incorrect results in some conditions.\n\n# v6.6.0\n- Online benchmark protocol upgraded to v2, validation not compatible with previous versions.\n  - Single thread benchmark now is cheat-resistant, not possible speedup it with multiple threads.\n  - RandomX dataset is now always initialized with static seed, to prevent time cheat by report slow dataset initialization.\n  - Zero delay online submission, to make time validation much more precise and strict.\n  - DNS cache for online benchmark to prevent unexpected delays.\n\n# v6.5.3\n- [#1946](https://github.com/xmrig/xmrig/pull/1946) Fixed MSR mod names in JSON API (v6.5.2 affected).\n\n# v6.5.2\n- [#1935](https://github.com/xmrig/xmrig/pull/1935) Separate MSR mod for Zen/Zen2 and Zen3.\n- [#1937](https://github.com/xmrig/xmrig/issues/1937) Print path to existing WinRing0 service without verbose option.\n- [#1939](https://github.com/xmrig/xmrig/pull/1939) Fixed build with gcc 4.8.\n- [#1941](https://github.com/xmrig/xmrig/pull/1941) Added CPUID info to JSON report.\n- [#1941](https://github.com/xmrig/xmrig/pull/1942) Fixed alignment modification in memory pool.\n- [#1944](https://github.com/xmrig/xmrig/pull/1944) Updated `randomx_boost.sh` with new MSR mod.\n- Added `250K` and `500K` offline benchmarks.\n\n# v6.5.1\n- [#1932](https://github.com/xmrig/xmrig/pull/1932) New MSR mod for Ryzen, up to +3.5% on Zen2 and +1-2% on Zen3.\n- [#1918](https://github.com/xmrig/xmrig/issues/1918) Fixed 1GB huge pages support on ARMv8.\n- [#1926](https://github.com/xmrig/xmrig/pull/1926) Fixed compilation on ARMv8 with GCC 9.3.0.\n- [#1929](https://github.com/xmrig/xmrig/issues/1929) Fixed build without HTTP.\n\n# v6.5.0\n- **Added [online benchmark](https://xmrig.com/benchmark) mode for sharing results.**\n  - Added new command line options: `--submit`, `\t--verify=ID`, `\t--seed=SEED`, `--hash=HASH`.\n- [#1912](https://github.com/xmrig/xmrig/pull/1912) Fixed MSR kernel module warning with new Linux kernels.\n- [#1925](https://github.com/xmrig/xmrig/pull/1925) Add checking for config files in user home directory.\n- Added vendor to ARM CPUs name and added `\"arch\"` field to API.\n- Removed legacy CUDA plugin API.\n\n# v6.4.0\n- [#1862](https://github.com/xmrig/xmrig/pull/1862) **RandomX: removed `rx/loki` algorithm.**\n- [#1890](https://github.com/xmrig/xmrig/pull/1890) **Added `argon2/chukwav2` algorithm.**\n- [#1895](https://github.com/xmrig/xmrig/pull/1895) [#1897](https://github.com/xmrig/xmrig/pull/1897) **Added [benchmark and stress test](https://github.com/xmrig/xmrig/blob/dev/doc/BENCHMARK.md).**\n- [#1864](https://github.com/xmrig/xmrig/pull/1864) RandomX: improved software AES performance.\n- [#1870](https://github.com/xmrig/xmrig/pull/1870) RandomX: fixed unexpected resume due to disconnect during dataset init.\n- [#1872](https://github.com/xmrig/xmrig/pull/1872) RandomX: fixed `randomx_create_vm` call.\n- [#1875](https://github.com/xmrig/xmrig/pull/1875) RandomX: fixed crash on x86.\n- [#1876](https://github.com/xmrig/xmrig/pull/1876) RandomX: added `huge-pages-jit` config parameter.\n- [#1881](https://github.com/xmrig/xmrig/pull/1881) Fixed possible race condition in hashrate counting code.\n- [#1882](https://github.com/xmrig/xmrig/pull/1882) [#1886](https://github.com/xmrig/xmrig/pull/1886) [#1887](https://github.com/xmrig/xmrig/pull/1887) [#1893](https://github.com/xmrig/xmrig/pull/1893) General code improvements.\n- [#1885](https://github.com/xmrig/xmrig/pull/1885) Added more precise hashrate calculation.\n- [#1889](https://github.com/xmrig/xmrig/pull/1889) Fixed libuv performance issue on Linux.\n\n# v6.3.5\n- [#1845](https://github.com/xmrig/xmrig/pull/1845) [#1861](https://github.com/xmrig/xmrig/pull/1861) Fixed ARM build and added CMake option `WITH_SSE4_1`.\n- [#1846](https://github.com/xmrig/xmrig/pull/1846) KawPow: fixed OpenCL memory leak.\n- [#1849](https://github.com/xmrig/xmrig/pull/1849) [#1859](https://github.com/xmrig/xmrig/pull/1859) RandomX: optimized soft AES code.\n- [#1850](https://github.com/xmrig/xmrig/pull/1850) [#1852](https://github.com/xmrig/xmrig/pull/1852) General code improvements.\n- [#1853](https://github.com/xmrig/xmrig/issues/1853) [#1856](https://github.com/xmrig/xmrig/pull/1856) [#1857](https://github.com/xmrig/xmrig/pull/1857) Fixed crash on old CPUs.\n\n# v6.3.4\n- [#1823](https://github.com/xmrig/xmrig/pull/1823) RandomX: added new option `scratchpad_prefetch_mode`.\n- [#1827](https://github.com/xmrig/xmrig/pull/1827) [#1831](https://github.com/xmrig/xmrig/pull/1831) Improved nonce iteration performance.\n- [#1828](https://github.com/xmrig/xmrig/pull/1828) RandomX: added SSE4.1-optimized Blake2b.\n- [#1830](https://github.com/xmrig/xmrig/pull/1830) RandomX: added performance profiler (for developers).\n- [#1835](https://github.com/xmrig/xmrig/pull/1835) RandomX: returned old soft AES implementation and added auto-select between the two.\n- [#1840](https://github.com/xmrig/xmrig/pull/1840) RandomX: moved more stuff to compile time, small x86 JIT compiler speedup.\n- [#1841](https://github.com/xmrig/xmrig/pull/1841) Fixed Cryptonight OpenCL for AMD 20.7.2 drivers.\n- [#1842](https://github.com/xmrig/xmrig/pull/1842) RandomX: AES improvements, a bit faster hardware AES code when compiled with MSVC.\n- [#1843](https://github.com/xmrig/xmrig/pull/1843) RandomX: improved performance of GCC compiled binaries.\n\n# v6.3.3\n- [#1817](https://github.com/xmrig/xmrig/pull/1817) Fixed self-select login sequence.\n- Added brand new [build from source](https://xmrig.com/docs/miner/build) documentation.\n- New binary downloads for macOS (`macos-x64`), FreeBSD (`freebsd-static-x64`), Linux (`linux-static-x64`), Ubuntu 18.04 (`bionic-x64`), Ubuntu 20.04 (`focal-x64`).\n- Generic Linux download `xenial-x64` renamed to `linux-x64`.\n- Builds without SSL/TLS support are no longer provided.\n- Improved CUDA loader error reporting and fixed plugin load on Linux.\n- Fixed build warnings with Clang compiler.\n- Fixed colors on macOS.\n\n# v6.3.2\n- [#1794](https://github.com/xmrig/xmrig/pull/1794) More robust 1 GB pages handling.\n  - Don't allocate 1 GB per thread if 1 GB is the default huge page size.\n  - Try to allocate scratchpad from dataset's 1 GB huge pages, if normal huge pages are not available.\n  - Correctly initialize RandomX cache if 1 GB pages fail to allocate on a first NUMA node.\n- [#1806](https://github.com/xmrig/xmrig/pull/1806) Fixed macOS battery detection.\n- [#1809](https://github.com/xmrig/xmrig/issues/1809) Improved auto configuration on ARM CPUs.\n  - Added retrieving ARM CPU names, based on lscpu code and database.\n\n# v6.3.1\n- [#1786](https://github.com/xmrig/xmrig/pull/1786) Added `pause-on-battery` option, supported on Windows and Linux.\n- Added command line options `--randomx-cache-qos` and `--argon2-impl`.\n\n# v6.3.0\n- [#1771](https://github.com/xmrig/xmrig/pull/1771) Adopted new SSE2NEON and reduced ARM-specific changes.\n- [#1774](https://github.com/xmrig/xmrig/pull/1774) RandomX: Added new option `cache_qos` in `randomx` object for cache QoS support.\n- [#1777](https://github.com/xmrig/xmrig/pull/1777) Added support for upcoming Haven offshore fork.\n  - [#1780](https://github.com/xmrig/xmrig/pull/1780) CryptoNight OpenCL: fix for long input data.\n\n# v6.2.3\n- [#1745](https://github.com/xmrig/xmrig/pull/1745) AstroBWT: fixed OpenCL compilation on some systems.\n- [#1749](https://github.com/xmrig/xmrig/pull/1749) KawPow: optimized CPU share verification.\n- [#1752](https://github.com/xmrig/xmrig/pull/1752) RandomX: added error message when MSR mod fails.\n- [#1754](https://github.com/xmrig/xmrig/issues/1754) Fixed GPU health readings for pre Vega GPUs on Linux.\n- [#1756](https://github.com/xmrig/xmrig/issues/1756) Added results and connection reports.\n- [#1759](https://github.com/xmrig/xmrig/pull/1759) KawPow: fixed DAG initialization on slower AMD GPUs.\n- [#1763](https://github.com/xmrig/xmrig/pull/1763) KawPow: fixed rare duplicate share errors.\n- [#1766](https://github.com/xmrig/xmrig/pull/1766) RandomX: small speedup on Ryzen CPUs.\n\n# v6.2.2\n- [#1742](https://github.com/xmrig/xmrig/issues/1742) Fixed crash when use HTTP API.\n\n# v6.2.1\n- [#1726](https://github.com/xmrig/xmrig/issues/1726) Fixed detection of AVX2/AVX512.\n- [#1728](https://github.com/xmrig/xmrig/issues/1728) Fixed, 32 bit Windows builds was crash on start.\n- [#1729](https://github.com/xmrig/xmrig/pull/1729) Fixed KawPow crash on old CPUs.\n- [#1730](https://github.com/xmrig/xmrig/pull/1730) Improved displaying information for compute errors on GPUs.\n- [#1732](https://github.com/xmrig/xmrig/pull/1732) Fixed NiceHash disconnects for KawPow.\n- Fixed AMD GPU health (temperatures/power/clocks/fans) readings on Linux.\n\n# v6.2.0-beta\n- [#1717](https://github.com/xmrig/xmrig/pull/1717) Added new algorithm `cn/ccx` for Conceal.\n- [#1718](https://github.com/xmrig/xmrig/pull/1718) Fixed, linker on Linux was marking entire executable as having an executable stack.\n- [#1720](https://github.com/xmrig/xmrig/pull/1720) Fixed broken CryptoNight algorithms family with gcc 10.1.\n\n# v6.0.1-beta\n- [#1708](https://github.com/xmrig/xmrig/issues/1708) Added `title` option.\n- [#1711](https://github.com/xmrig/xmrig/pull/1711) [cuda] Print errors from KawPow DAG initialization.\n- [#1713](https://github.com/xmrig/xmrig/pull/1713) [cuda] Reduced memory usage for KawPow, minimum CUDA plugin version now is 6.1.0.\n\n# v6.0.0-beta\n- [#1694](https://github.com/xmrig/xmrig/pull/1694) Added support for KawPow algorithm (Ravencoin) on AMD/NVIDIA.\n- Removed previously deprecated `cn/gpu` algorithm.\n- Default donation level reduced to 1% but you still can increase it if you like.\n\n# v5.11.3\n- [#1718](https://github.com/xmrig/xmrig/pull/1718) Fixed, linker on Linux was marking entire executable as having an executable stack.\n- [#1720](https://github.com/xmrig/xmrig/pull/1720) Fixed broken CryptoNight algorithms family with gcc 10.1.\n\n# v5.11.2\n- [#1664](https://github.com/xmrig/xmrig/pull/1664) Improved JSON config error reporting.\n- [#1668](https://github.com/xmrig/xmrig/pull/1668) Optimized RandomX dataset initialization.\n- [#1675](https://github.com/xmrig/xmrig/pull/1675) Fixed cross-compiling on Linux.\n- Fixed memory leak in HTTP client.\n- Build [dependencies](https://github.com/xmrig/xmrig-deps/releases/tag/v4.1) updated to recent versions.\n- Compiler for Windows gcc builds updated to v10.1.\n\n# v5.11.1\n- [#1652](https://github.com/xmrig/xmrig/pull/1652) Up to 1% RandomX perfomance improvement on recent AMD CPUs.\n- [#1306](https://github.com/xmrig/xmrig/issues/1306) Fixed possible double connection to a pool.\n- [#1654](https://github.com/xmrig/xmrig/issues/1654) Fixed build with LibreSSL.\n\n# v5.11.0\n- **[#1632](https://github.com/xmrig/xmrig/pull/1632) Added AstroBWT CUDA support ([CUDA plugin](https://github.com/xmrig/xmrig-cuda) v3.0.0 or newer required).**\n- [#1605](https://github.com/xmrig/xmrig/pull/1605) Fixed AstroBWT OpenCL for NVIDIA GPUs.\n- [#1635](https://github.com/xmrig/xmrig/pull/1635) Added pooled memory allocation of RandomX VMs (+0.5% speedup on Zen2).\n- [#1641](https://github.com/xmrig/xmrig/pull/1641) RandomX JIT refactoring, smaller memory footprint and a bit faster overall.\n- [#1643](https://github.com/xmrig/xmrig/issues/1643) Fixed build on CentOS 7.\n\n# v5.10.0\n- [#1602](https://github.com/xmrig/xmrig/pull/1602) Added AMD GPUs support for AstroBWT algorithm.\n- [#1590](https://github.com/xmrig/xmrig/pull/1590) MSR mod automatically deactivated after switching from RandomX algorithms.\n- [#1592](https://github.com/xmrig/xmrig/pull/1592) Added AVX2 optimized code for AstroBWT algorithm.\n  - Added new config option `astrobwt-avx2` in `cpu` object and command line option `--astrobwt-avx2`.\n- [#1596](https://github.com/xmrig/xmrig/issues/1596) Major TLS (Transport Layer Security) subsystem update.\n  - Added new TLS options, please check [xmrig-proxy documentation](https://xmrig.com/docs/proxy/tls) for details.\n- `cn/gpu` algorithm now disabled by default and will be removed in next major (v6.x.x) release, no ETA for it right now.\n- Added command line option `--data-dir`.\n\n# v5.9.0\n- [#1578](https://github.com/xmrig/xmrig/pull/1578) Added new RandomKEVA algorithm for upcoming Kevacoin fork, as `\"algo\": \"rx/keva\"` or `\"coin\": \"keva\"`.\n- [#1584](https://github.com/xmrig/xmrig/pull/1584) Fixed invalid AstroBWT hashes after algorithm switching.\n- [#1585](https://github.com/xmrig/xmrig/issues/1585) Fixed build without HTTP support.\n- Added command line option `--astrobwt-max-size`.\n\n# v5.8.2\n- [#1580](https://github.com/xmrig/xmrig/pull/1580) AstroBWT algorithm 20-50% speedup.\n  - Added new option `astrobwt-max-size`.\n- [#1581](https://github.com/xmrig/xmrig/issues/1581) Fixed macOS build.\n\n# v5.8.1\n- [#1575](https://github.com/xmrig/xmrig/pull/1575) Fixed new block detection for DERO solo mining.\n\n# v5.8.0\n- [#1573](https://github.com/xmrig/xmrig/pull/1573) Added new AstroBWT algorithm for upcoming DERO fork, as `\"algo\": \"astrobwt\"` or `\"coin\": \"dero\"`.\n\n# v5.7.0\n- **Added SOCKS5 proxies support for Tor https://xmrig.com/docs/miner/tor.**\n- [#377](https://github.com/xmrig/xmrig-proxy/issues/377) Fixed duplicate jobs in daemon (solo) mining client.\n- [#1560](https://github.com/xmrig/xmrig/pull/1560) RandomX 0.3-0.4% speedup depending on CPU.\n- Fixed possible crashes in HTTP client.\n\n# v5.6.0\n- [#1536](https://github.com/xmrig/xmrig/pull/1536) Added workaround for new AMD GPU drivers.\n- [#1546](https://github.com/xmrig/xmrig/pull/1546) Fixed generic OpenCL code for AMD Navi GPUs.\n- [#1551](https://github.com/xmrig/xmrig/pull/1551) Added RandomX JIT for AMD Navi  GPUs.\n- Added health information for AMD GPUs (clocks/power/fan/temperature) via ADL (Windows) and sysfs (Linux).\n- Fixed possible nicehash nonce overflow in some conditions.\n- Fixed wrong OpenCL platform on macOS, option `platform` now ignored on this OS.\n\n# v5.5.3\n- [#1529](https://github.com/xmrig/xmrig/pull/1529) Fixed crash on Bulldozer CPUs.\n\n# v5.5.2\n- [#1500](https://github.com/xmrig/xmrig/pull/1500) Removed unnecessary code from RandomX JIT compiler.\n- [#1502](https://github.com/xmrig/xmrig/pull/1502) Optimizations for AMD Bulldozer.\n- [#1508](https://github.com/xmrig/xmrig/pull/1508) Added support for BMI2 instructions.\n- [#1510](https://github.com/xmrig/xmrig/pull/1510) Optimized `CFROUND` instruction for RandomX.\n- [#1520](https://github.com/xmrig/xmrig/pull/1520) Fixed thread affinity.\n\n# v5.5.1\n- [#1469](https://github.com/xmrig/xmrig/issues/1469) Fixed build with gcc 4.8.\n- [#1473](https://github.com/xmrig/xmrig/pull/1473) Added RandomX auto-config for mobile Ryzen APUs.\n- [#1477](https://github.com/xmrig/xmrig/pull/1477) Fixed build with Clang.\n- [#1489](https://github.com/xmrig/xmrig/pull/1489) RandomX JIT compiler tweaks.\n- [#1493](https://github.com/xmrig/xmrig/pull/1493) Default value for Intel MSR preset changed to `15`.\n- Fixed unwanted resume after RandomX dataset change.\n\n# v5.5.0\n- [#179](https://github.com/xmrig/xmrig/issues/179) Added support for [environment variables](https://xmrig.com/docs/miner/environment-variables) in config file.\n- [#1445](https://github.com/xmrig/xmrig/pull/1445) Removed `rx/v` algorithm.\n- [#1453](https://github.com/xmrig/xmrig/issues/1453) Fixed crash on 32bit systems.\n- [#1459](https://github.com/xmrig/xmrig/issues/1459) Fixed crash on very low memory systems.\n- [#1465](https://github.com/xmrig/xmrig/pull/1465) Added fix for 1st-gen Ryzen crashes.\n- [#1466](https://github.com/xmrig/xmrig/pull/1466) Added `cn-pico/tlo` algorithm.\n- Added `--randomx-no-rdmsr` command line option.\n- Added console title for Windows with miner name and version.\n- On Windows `priority` option now also change base priority.\n\n# v5.4.0\n- [#1434](https://github.com/xmrig/xmrig/pull/1434) Added RandomSFX (`rx/sfx`) algorithm for Safex Cash.\n- [#1445](https://github.com/xmrig/xmrig/pull/1445) Added RandomV (`rx/v`) algorithm for *new* MoneroV.\n- [#1419](https://github.com/xmrig/xmrig/issues/1419) Added reverting MSR changes on miner exit, use `\"rdmsr\": false,` in `\"randomx\"` object to disable this feature.\n- [#1423](https://github.com/xmrig/xmrig/issues/1423) Fixed conflicts with exists WinRing0 driver service.\n- [#1425](https://github.com/xmrig/xmrig/issues/1425) Fixed crash on first generation Zen CPUs (MSR mod accidentally enable Opcache), additionally now you can disable Opcache and enable MSR mod via config `\"wrmsr\": [\"0xc0011020:0x0\", \"0xc0011021:0x60\", \"0xc0011022:0x510000\", \"0xc001102b:0x1808cc16\"],`.\n- Added advanced usage for `wrmsr` option, for example: `\"wrmsr\": [\"0x1a4:0x6\"],` (Intel) and `\"wrmsr\": [\"0xc0011020:0x0\", \"0xc0011021:0x40:0xffffffffffffffdf\", \"0xc0011022:0x510000\", \"0xc001102b:0x1808cc16\"],` (Ryzen).\n- Added new config option `\"verbose\"` and command line option `--verbose`.\n\n# v5.3.0\n- [#1414](https://github.com/xmrig/xmrig/pull/1414) Added native MSR support for Windows, by using signed **WinRing0 driver** (© 2007-2009 OpenLibSys.org).\n- Added new [MSR documentation](https://xmrig.com/docs/miner/randomx-optimization-guide/msr).\n- [#1418](https://github.com/xmrig/xmrig/pull/1418) Increased stratum send buffer size.\n\n# v5.2.1\n- [#1408](https://github.com/xmrig/xmrig/pull/1408) Added RandomX boost script for Linux (if you don't like run miner with root privileges).\n- Added support for [AMD Ryzen MSR registers](https://www.reddit.com/r/MoneroMining/comments/e962fu/9526_hs_on_ryzen_7_3700x_xmrig_520_1gb_pages_msr/) (Linux only).\n- Fixed command line option `--randomx-wrmsr` option without parameters.\n\n# v5.2.0\n- **[#1388](https://github.com/xmrig/xmrig/pull/1388) Added [1GB huge pages support](https://xmrig.com/docs/miner/hugepages#onegb-huge-pages) for Linux.**\n  - Added new option `1gb-pages` in `randomx` object with command line equivalent `--randomx-1gb-pages`.\n  - Added automatic huge pages configuration on Linux if use the miner with root privileges.\n- **Added [automatic Intel prefetchers configuration](https://xmrig.com/docs/miner/randomx-optimization-guide#intel-specific-optimizations) on Linux.**\n   - Added new option `wrmsr` in `randomx` object with command line equivalent `--randomx-wrmsr=6`.\n- [#1396](https://github.com/xmrig/xmrig/pull/1396) [#1401](https://github.com/xmrig/xmrig/pull/1401) New performance optimizations for Ryzen CPUs. \n- [#1385](https://github.com/xmrig/xmrig/issues/1385) Added `max-threads-hint` option support for RandomX dataset initialization threads.  \n- [#1386](https://github.com/xmrig/xmrig/issues/1386) Added `priority` option support for RandomX dataset initialization threads. \n- For official builds all dependencies (libuv, hwloc, openssl) updated to recent versions.\n- Windows `msvc` builds now use Visual Studio 2019 instead of 2017.\n\n# v5.1.1\n- [#1365](https://github.com/xmrig/xmrig/issues/1365) Fixed various system response/stability issues.\n  - Added new CPU option `yield` and command line equivalent `--cpu-no-yield`.\n- [#1363](https://github.com/xmrig/xmrig/issues/1363) Fixed wrong priority of main miner thread.\n\n# v5.1.0\n- [#1351](https://github.com/xmrig/xmrig/pull/1351) RandomX optimizations and fixes.\n  - Improved RandomX performance (up to +6-7% on Intel CPUs, +2-3% on Ryzen CPUs)\n  - Added workaround for Intel JCC erratum bug see https://www.phoronix.com/scan.php?page=article&item=intel-jcc-microcode&num=1 for details.\n  - Note! Always disable \"Hardware prefetcher\" and \"Adjacent cacheline prefetch\" in BIOS for Intel CPUs to get the optimal RandomX performance.\n- [#1307](https://github.com/xmrig/xmrig/issues/1307) Fixed mining resume after donation round for pools with `self-select` feature.\n- [#1318](https://github.com/xmrig/xmrig/issues/1318#issuecomment-559676080) Added option `\"mode\"` (or `--randomx-mode`) for RandomX.\n  - Added memory information on miner startup.\n  - Added `resources` field to summary API with memory information and load average.\n\n# v5.0.1\n- [#1234](https://github.com/xmrig/xmrig/issues/1234) Fixed compatibility with some AMD GPUs.\n- [#1284](https://github.com/xmrig/xmrig/issues/1284) Fixed build without RandomX.\n- [#1285](https://github.com/xmrig/xmrig/issues/1285) Added command line options `--cuda-bfactor-hint` and `--cuda-bsleep-hint`.\n- [#1290](https://github.com/xmrig/xmrig/pull/1290) Fixed 32-bit ARM compilation.\n\n# v5.0.0\nThis version is first stable unified 3 in 1 GPU+CPU release, OpenCL support built in in miner and not require additional external dependencies on compile time, NVIDIA CUDA available as external [CUDA plugin](https://github.com/xmrig/xmrig-cuda), for convenient, 3 in 1 downloads with recent CUDA version also provided.\n\nThis release based on 4.x.x series and include all features from v4.6.2-beta, changelog below include only the most important changes, [full changelog](doc/CHANGELOG_OLD.md) available separately.\n\n- [#1272](https://github.com/xmrig/xmrig/pull/1272) Optimized hashrate calculation.\n- [#1263](https://github.com/xmrig/xmrig/pull/1263) Added new option `dataset_host` for NVIDIA GPUs with less than 4 GB memory (RandomX only).\n- [#1068](https://github.com/xmrig/xmrig/pull/1068) Added support for `self-select` stratum protocol extension.\n- [#1227](https://github.com/xmrig/xmrig/pull/1227) Added new algorithm `rx/arq`, RandomX variant for upcoming ArQmA fork.\n- [#808](https://github.com/xmrig/xmrig/issues/808#issuecomment-539297156) Added experimental support for persistent memory for CPU mining threads.\n- [#1221](https://github.com/xmrig/xmrig/issues/1221) Improved RandomX dataset memory usage and initialization speed for NUMA machines.\n- [#1175](https://github.com/xmrig/xmrig/issues/1175) Fixed support for systems where total count of NUMA nodes not equal usable nodes count.\n- Added config option `cpu/max-threads-hint` and command line option `--cpu-max-threads-hint`.\n- [#1185](https://github.com/xmrig/xmrig/pull/1185) Added JIT compiler for RandomX on ARMv8.\n- Improved API endpoint `GET /2/backends` and added support for this endpoint to [workers.xmrig.info](http://workers.xmrig.info).\n- Added command line option `--no-cpu` to disable CPU backend.\n- Added OpenCL specific command line options: `--opencl`, `--opencl-devices`, `--opencl-platform`, `--opencl-loader` and `--opencl-no-cache`.\n- Added CUDA specific command line options: `--cuda`, `--cuda-loader` and `--no-nvml`.\n- Removed command line option `--http-enabled`, HTTP API enabled automatically if any other `--http-*` option provided.\n- [#1172](https://github.com/xmrig/xmrig/issues/1172) **Added OpenCL mining backend.**\n  - [#268](https://github.com/xmrig/xmrig-amd/pull/268) [#270](https://github.com/xmrig/xmrig-amd/pull/270) [#271](https://github.com/xmrig/xmrig-amd/pull/271) [#273](https://github.com/xmrig/xmrig-amd/pull/273) [#274](https://github.com/xmrig/xmrig-amd/pull/274) [#1171](https://github.com/xmrig/xmrig/pull/1171) Added RandomX support for OpenCL, thanks [@SChernykh](https://github.com/SChernykh).\n- Algorithm `cn/wow` removed, as no longer alive. \n\n# Previous versions\n[doc/CHANGELOG_OLD.md](doc/CHANGELOG_OLD.md)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.4306640625,
          "content": "cmake_minimum_required(VERSION 3.5)\nproject(xmrig)\n\noption(WITH_HWLOC           \"Enable hwloc support\" ON)\noption(WITH_CN_LITE         \"Enable CryptoNight-Lite algorithms family\" ON)\noption(WITH_CN_HEAVY        \"Enable CryptoNight-Heavy algorithms family\" ON)\noption(WITH_CN_PICO         \"Enable CryptoNight-Pico algorithm\" ON)\noption(WITH_CN_FEMTO        \"Enable CryptoNight-UPX2 algorithm\" ON)\noption(WITH_RANDOMX         \"Enable RandomX algorithms family\" ON)\noption(WITH_ARGON2          \"Enable Argon2 algorithms family\" ON)\noption(WITH_KAWPOW          \"Enable KawPow algorithms family\" ON)\noption(WITH_GHOSTRIDER      \"Enable GhostRider algorithm\" ON)\noption(WITH_HTTP            \"Enable HTTP protocol support (client/server)\" ON)\noption(WITH_DEBUG_LOG       \"Enable debug log output\" OFF)\noption(WITH_TLS             \"Enable OpenSSL support\" ON)\noption(WITH_ASM             \"Enable ASM PoW implementations\" ON)\noption(WITH_MSR             \"Enable MSR mod & 1st-gen Ryzen fix\" ON)\noption(WITH_ENV_VARS        \"Enable environment variables support in config file\" ON)\noption(WITH_EMBEDDED_CONFIG \"Enable internal embedded JSON config\" OFF)\noption(WITH_OPENCL          \"Enable OpenCL backend\" ON)\nset(WITH_OPENCL_VERSION 200 CACHE STRING \"Target OpenCL version\")\nset_property(CACHE WITH_OPENCL_VERSION PROPERTY STRINGS 120 200 210 220)\noption(WITH_CUDA            \"Enable CUDA backend\" ON)\noption(WITH_NVML            \"Enable NVML (NVIDIA Management Library) support (only if CUDA backend enabled)\" ON)\noption(WITH_ADL             \"Enable ADL (AMD Display Library) or sysfs support (only if OpenCL backend enabled)\" ON)\noption(WITH_STRICT_CACHE    \"Enable strict checks for OpenCL cache\" ON)\noption(WITH_INTERLEAVE_DEBUG_LOG \"Enable debug log for threads interleave\" OFF)\noption(WITH_PROFILING       \"Enable profiling for developers\" OFF)\noption(WITH_SSE4_1          \"Enable SSE 4.1 for Blake2\" ON)\noption(WITH_AVX2            \"Enable AVX2 for Blake2\" ON)\noption(WITH_VAES            \"Enable VAES instructions for Cryptonight\" ON)\noption(WITH_BENCHMARK       \"Enable builtin RandomX benchmark and stress test\" ON)\noption(WITH_SECURE_JIT      \"Enable secure access to JIT memory\" OFF)\noption(WITH_DMI             \"Enable DMI/SMBIOS reader\" ON)\n\noption(BUILD_STATIC         \"Build static binary\" OFF)\noption(ARM_V8               \"Force ARMv8 (64 bit) architecture, use with caution if automatic detection fails, but you sure it may work\" OFF)\noption(ARM_V7               \"Force ARMv7 (32 bit) architecture, use with caution if automatic detection fails, but you sure it may work\" OFF)\noption(HWLOC_DEBUG          \"Enable hwloc debug helpers and log\" OFF)\n\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake\")\n\n\ninclude (CheckIncludeFile)\ninclude (cmake/cpu.cmake)\ninclude (cmake/os.cmake)\ninclude (src/base/base.cmake)\ninclude (src/backend/backend.cmake)\n\n\nset(HEADERS\n    \"${HEADERS_BASE}\"\n    \"${HEADERS_BASE_HTTP}\"\n    \"${HEADERS_BACKEND}\"\n    src/App.h\n    src/core/config/Config_default.h\n    src/core/config/Config_platform.h\n    src/core/config/Config.h\n    src/core/config/ConfigTransform.h\n    src/core/config/usage.h\n    src/core/Controller.h\n    src/core/Miner.h\n    src/core/Taskbar.h\n    src/net/interfaces/IJobResultListener.h\n    src/net/JobResult.h\n    src/net/JobResults.h\n    src/net/Network.h\n    src/net/strategies/DonateStrategy.h\n    src/Summary.h\n    src/version.h\n   )\n\nset(HEADERS_CRYPTO\n    src/backend/common/interfaces/IMemoryPool.h\n    src/crypto/cn/asm/CryptonightR_template.h\n    src/crypto/cn/c_blake256.h\n    src/crypto/cn/c_groestl.h\n    src/crypto/cn/c_jh.h\n    src/crypto/cn/c_skein.h\n    src/crypto/cn/CnAlgo.h\n    src/crypto/cn/CnCtx.h\n    src/crypto/cn/CnHash.h\n    src/crypto/cn/CryptoNight_monero.h\n    src/crypto/cn/CryptoNight_test.h\n    src/crypto/cn/CryptoNight.h\n    src/crypto/cn/groestl_tables.h\n    src/crypto/cn/hash.h\n    src/crypto/cn/skein_port.h\n    src/crypto/cn/soft_aes.h\n    src/crypto/common/HugePagesInfo.h\n    src/crypto/common/MemoryPool.h\n    src/crypto/common/Nonce.h\n    src/crypto/common/portable/mm_malloc.h\n    src/crypto/common/VirtualMemory.h\n   )\n\nif (XMRIG_ARM)\n    set(HEADERS_CRYPTO \"${HEADERS_CRYPTO}\" src/crypto/cn/CryptoNight_arm.h)\nelse()\n    set(HEADERS_CRYPTO \"${HEADERS_CRYPTO}\" src/crypto/cn/CryptoNight_x86.h)\nendif()\n\nset(SOURCES\n    \"${SOURCES_BASE}\"\n    \"${SOURCES_BASE_HTTP}\"\n    \"${SOURCES_BACKEND}\"\n    src/App.cpp\n    src/core/config/Config.cpp\n    src/core/config/ConfigTransform.cpp\n    src/core/Controller.cpp\n    src/core/Miner.cpp\n    src/core/Taskbar.cpp\n    src/net/JobResults.cpp\n    src/net/Network.cpp\n    src/net/strategies/DonateStrategy.cpp\n    src/Summary.cpp\n    src/xmrig.cpp\n   )\n\nset(SOURCES_CRYPTO\n    src/crypto/cn/c_blake256.c\n    src/crypto/cn/c_groestl.c\n    src/crypto/cn/c_jh.c\n    src/crypto/cn/c_skein.c\n    src/crypto/cn/CnCtx.cpp\n    src/crypto/cn/CnHash.cpp\n    src/crypto/common/HugePagesInfo.cpp\n    src/crypto/common/MemoryPool.cpp\n    src/crypto/common/Nonce.cpp\n    src/crypto/common/VirtualMemory.cpp\n   )\n\nif (CMAKE_C_COMPILER_ID MATCHES GNU)\n    set_source_files_properties(src/crypto/cn/CnHash.cpp PROPERTIES COMPILE_FLAGS \"-Ofast -fno-tree-vectorize\")\nendif()\n\nif (WITH_VAES)\n    add_definitions(-DXMRIG_VAES)\n    set(HEADERS_CRYPTO \"${HEADERS_CRYPTO}\" src/crypto/cn/CryptoNight_x86_vaes.h)\n    set(SOURCES_CRYPTO \"${SOURCES_CRYPTO}\" src/crypto/cn/CryptoNight_x86_vaes.cpp)\n    if (CMAKE_C_COMPILER_ID MATCHES GNU OR CMAKE_C_COMPILER_ID MATCHES Clang)\n        set_source_files_properties(src/crypto/cn/CryptoNight_x86_vaes.cpp PROPERTIES COMPILE_FLAGS \"-Ofast -fno-tree-vectorize -mavx2 -mvaes\")\n    endif()\nendif()\n\nif (WITH_HWLOC)\n    list(APPEND HEADERS_CRYPTO\n        src/crypto/common/NUMAMemoryPool.h\n        )\n\n    list(APPEND SOURCES_CRYPTO\n        src/crypto/common/NUMAMemoryPool.cpp\n        src/crypto/common/VirtualMemory_hwloc.cpp\n        )\nendif()\n\nif (XMRIG_OS_WIN)\n    list(APPEND SOURCES_OS\n        res/app.rc\n        src/App_win.cpp\n        src/crypto/common/VirtualMemory_win.cpp\n        )\n\n    set(EXTRA_LIBS ws2_32 psapi iphlpapi userenv dbghelp)\nelseif (XMRIG_OS_APPLE)\n    list(APPEND SOURCES_OS\n        src/App_unix.cpp\n        src/crypto/common/VirtualMemory_unix.cpp\n        )\n\n    find_library(IOKIT_LIBRARY IOKit)\n    find_library(CORESERVICES_LIBRARY CoreServices)\n    set(EXTRA_LIBS ${IOKIT_LIBRARY} ${CORESERVICES_LIBRARY})\nelse()\n    list(APPEND SOURCES_OS\n        src/App_unix.cpp\n        src/crypto/common/VirtualMemory_unix.cpp\n        )\n\n    if (XMRIG_OS_ANDROID)\n        set(EXTRA_LIBS pthread rt dl log)\n    elseif (XMRIG_OS_LINUX)\n        list(APPEND SOURCES_OS\n            src/crypto/common/LinuxMemory.h\n            src/crypto/common/LinuxMemory.cpp\n            )\n\n        set(EXTRA_LIBS pthread rt dl)\n    elseif (XMRIG_OS_FREEBSD)\n        set(EXTRA_LIBS kvm pthread)\n    endif()\nendif()\n\nadd_definitions(-DXMRIG_MINER_PROJECT -DXMRIG_JSON_SINGLE_LINE_ARRAY)\nadd_definitions(-D__STDC_FORMAT_MACROS -DUNICODE -D_FILE_OFFSET_BITS=64)\n\nfind_package(UV REQUIRED)\n\ninclude(cmake/flags.cmake)\ninclude(cmake/randomx.cmake)\ninclude(cmake/argon2.cmake)\ninclude(cmake/kawpow.cmake)\ninclude(cmake/ghostrider.cmake)\ninclude(cmake/OpenSSL.cmake)\ninclude(cmake/asm.cmake)\n\nif (WITH_CN_LITE)\n    add_definitions(/DXMRIG_ALGO_CN_LITE)\nendif()\n\nif (WITH_CN_HEAVY)\n    add_definitions(/DXMRIG_ALGO_CN_HEAVY)\nendif()\n\nif (WITH_CN_PICO)\n    add_definitions(/DXMRIG_ALGO_CN_PICO)\nendif()\n\nif (WITH_CN_FEMTO)\n    add_definitions(/DXMRIG_ALGO_CN_FEMTO)\nendif()\n\nif (WITH_EMBEDDED_CONFIG)\n    add_definitions(/DXMRIG_FEATURE_EMBEDDED_CONFIG)\nendif()\n\ninclude(src/hw/api/api.cmake)\ninclude(src/hw/dmi/dmi.cmake)\n\ninclude_directories(src)\ninclude_directories(src/3rdparty)\ninclude_directories(${UV_INCLUDE_DIR})\n\nif (WITH_DEBUG_LOG)\n    add_definitions(/DAPP_DEBUG)\nendif()\n\nadd_executable(${CMAKE_PROJECT_NAME} ${HEADERS} ${SOURCES} ${SOURCES_OS} ${HEADERS_CRYPTO} ${SOURCES_CRYPTO} ${SOURCES_SYSLOG} ${TLS_SOURCES} ${XMRIG_ASM_SOURCES})\ntarget_link_libraries(${CMAKE_PROJECT_NAME} ${XMRIG_ASM_LIBRARY} ${OPENSSL_LIBRARIES} ${UV_LIBRARIES} ${EXTRA_LIBS} ${CPUID_LIB} ${ARGON2_LIBRARY} ${ETHASH_LIBRARY} ${GHOSTRIDER_LIBRARY})\n\nif (WIN32)\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${CMAKE_SOURCE_DIR}/bin/WinRing0/WinRing0x64.sys\" $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${CMAKE_SOURCE_DIR}/scripts/benchmark_1M.cmd\" $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${CMAKE_SOURCE_DIR}/scripts/benchmark_10M.cmd\" $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${CMAKE_SOURCE_DIR}/scripts/pool_mine_example.cmd\" $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${CMAKE_SOURCE_DIR}/scripts/solo_mine_example.cmd\" $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${CMAKE_SOURCE_DIR}/scripts/rtm_ghostrider_example.cmd\" $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)\nendif()\n\nif (CMAKE_CXX_COMPILER_ID MATCHES Clang AND CMAKE_BUILD_TYPE STREQUAL Release AND NOT CMAKE_GENERATOR STREQUAL Xcode)\n    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_STRIP} ${CMAKE_PROJECT_NAME})\nendif()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3173828125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.423828125,
          "content": "# XMRig\n\n[![Github All Releases](https://img.shields.io/github/downloads/xmrig/xmrig/total.svg)](https://github.com/xmrig/xmrig/releases)\n[![GitHub release](https://img.shields.io/github/release/xmrig/xmrig/all.svg)](https://github.com/xmrig/xmrig/releases)\n[![GitHub Release Date](https://img.shields.io/github/release-date/xmrig/xmrig.svg)](https://github.com/xmrig/xmrig/releases)\n[![GitHub license](https://img.shields.io/github/license/xmrig/xmrig.svg)](https://github.com/xmrig/xmrig/blob/master/LICENSE)\n[![GitHub stars](https://img.shields.io/github/stars/xmrig/xmrig.svg)](https://github.com/xmrig/xmrig/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/xmrig/xmrig.svg)](https://github.com/xmrig/xmrig/network)\n\nXMRig is a high performance, open source, cross platform RandomX, KawPow, CryptoNight and [GhostRider](https://github.com/xmrig/xmrig/tree/master/src/crypto/ghostrider#readme) unified CPU/GPU miner and [RandomX benchmark](https://xmrig.com/benchmark). Official binaries are available for Windows, Linux, macOS and FreeBSD.\n\n## Mining backends\n- **CPU** (x86/x64/ARMv7/ARMv8)\n- **OpenCL** for AMD GPUs.\n- **CUDA** for NVIDIA GPUs via external [CUDA plugin](https://github.com/xmrig/xmrig-cuda).\n\n## Download\n* **[Binary releases](https://github.com/xmrig/xmrig/releases)**\n* **[Build from source](https://xmrig.com/docs/miner/build)**\n\n## Usage\nThe preferred way to configure the miner is the [JSON config file](https://xmrig.com/docs/miner/config) as it is more flexible and human friendly. The [command line interface](https://xmrig.com/docs/miner/command-line-options) does not cover all features, such as mining profiles for different algorithms. Important options can be changed during runtime without miner restart by editing the config file or executing [API](https://xmrig.com/docs/miner/api) calls.\n\n* **[Wizard](https://xmrig.com/wizard)** helps you create initial configuration for the miner.\n* **[Workers](http://workers.xmrig.info)** helps manage your miners via HTTP API.\n\n## Donations\n* Default donation 1% (1 minute in 100 minutes) can be increased via option `donate-level` or disabled in source code.\n* XMR: `48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD`\n\n## Developers\n* **[xmrig](https://github.com/xmrig)**\n* **[sech1](https://github.com/SChernykh)**\n\n## Contacts\n* support@xmrig.com\n* [reddit](https://www.reddit.com/user/XMRig/)\n* [twitter](https://twitter.com/xmrig_dev)\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.4892578125,
          "content": "{\n  \"name\": \"xmrig\",\n  \"version\": \"3.0.0\",\n  \"description\": \"RandomX, CryptoNight and Argon2 miner\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"doc\": \"doc\"\n  },\n  \"scripts\": {\n    \"build\": \"node scripts/generate_cl.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/xmrig/xmrig.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"GPLv3\",\n  \"bugs\": {\n    \"url\": \"https://github.com/xmrig/xmrig/issues\"\n  },\n  \"homepage\": \"https://github.com/xmrig/xmrig#readme\"\n}\n"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}