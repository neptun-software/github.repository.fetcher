{
  "metadata": {
    "timestamp": 1736710362953,
    "page": 178,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "libusb/libusb",
      "stars": 5398,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.9091796875,
          "content": "---\nChecks: \"-*,\\\nboost-*,\\\nbugprone-*,\\\n-bugprone-easily-swappable-parameters,\\\n-bugprone-narrowing-conversions,\\\n-bugprone-signed-char-misuse,\\\n-bugprone-switch-missing-default-case,\\\nclang-analyzer-*,\\\n-clang-analyzer-core.NullDereference,\\\n-clang-analyzer-deadcode.DeadStores,\\\n-clang-analyzer-optin.portability.UnixAPI,\\\n-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,\\\n-clang-analyzer-security.insecureAPI.strcpy,\\\n-clang-analyzer-unix.Malloc,\\\nmisc-*,\\\n-misc-no-recursion,\\\n-misc-include-cleaner,\\\nmodernize-*,\\\n-modernize-macro-to-enum,\\\nperformance-*,\\\n-performance-no-int-to-ptr,\\\n-performance-type-promotion-in-math-fn,\\\nportability-*,\\\nreadability-*,\\\n-readability-braces-around-statements,\\\n-readability-else-after-return,\\\n-readability-identifier-length,\\\n-readability-function-cognitive-complexity,\\\n-readability-isolate-declaration,\\\n-readability-magic-numbers,\\\n\"\n#WarningsAsErrors: \"*\"\n...\n"
        },
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.0751953125,
          "content": "[codespell]\nskip = strerror.c,AUTHORS\nignore-words-list = numer,ser,xwindows\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1748046875,
          "content": "*.ac            eol=lf\n*.am            eol=lf\n*.bat           eol=crlf\n*.sh            eol=lf\n.gitattributes  export-ignore\n.gitignore      export-ignore\nINSTALL_WIN.txt eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8916015625,
          "content": ".deps\n.libs\nMakefile\nMakefile.in\n!doc/Makefile.in\n*.la\n*.lo\n*.o\n*.js\n!/tests/webusb-test-shim/*.js\n*.wasm\n*.html\nlibtool\nltmain.sh\nmissing\nstamp-h1\nm4/\nautom4te.cache\nINSTALL\ninstall-sh\ndepcomp\nconfigure\naclocal.m4\ncompile\ntest-driver\nconfig.guess\nconfig.h*\n!msvc/config.h\n!android/config.h\n!Xcode/config.h\n.vs\nconfig.log\nconfig.status\nconfig.sub\n*.swp\ndoxygen.cfg\nexamples/listdevs\nexamples/xusb\nexamples/dpfp\nexamples/dpfp_threaded\nexamples/fxload\nexamples/hotplugtest\nexamples/sam3u_benchmark\nexamples/testlibusb\ntests/init_context\ntests/macos\ntests/set_option\ntests/stress\ntests/stress_mt\ntests/*.log\ntests/*.trs\nandroid/libs\nandroid/obj\n*.exe\n*.pc\ndoc/api-1.0\n*.plg\n*.ncb\n*.opt\nDebug\nRelease\nDebug-MT\nRelease-MT\n*.db\n*.user\n*.suo\n*.sdf\n*.opensdf\n*.patch\n*~\n*.orig\n.dirstamp\n.amend\n.DS_Store\nXcode/build\nxcshareddata\nxcuserdata\n*.xcuserdatad\n*.xccheckout\n*.xcscmblueprint\n*.xcworkspace\nbuild/\ntags\ncscope.out\n"
        },
        {
          "name": ".private",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.3740234375,
          "content": "language: c\n\ngit:\n    depth: 1\n\nmatrix:\n    include:\n        - os: linux\n          dist: focal\n          compiler: clang\n        - os: linux\n          dist: focal\n          compiler: gcc\n        - os: linux\n          dist: bionic\n          compiler: clang\n        - os: linux\n          dist: bionic\n          compiler: gcc\n        - os: linux\n          dist: xenial\n          compiler: clang\n        - os: linux\n          dist: xenial\n          compiler: gcc\n        - os: osx\n          osx_image: xcode12.2\n          compiler: clang\n        - os: osx\n          osx_image: xcode11.3\n          compiler: clang\n        - os: osx\n          osx_image: xcode9.4\n          compiler: clang\n\naddons:\n    apt:\n        packages:\n            - autoconf\n            - automake\n            - libtool\n            - libudev-dev\n            - m4\n    homebrew:\n        packages:\n            - autoconf\n            - automake\n            - libtool\n            - m4\n\nbefore_script:\n    - ./bootstrap.sh\n\nscript:\n    - if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then .private/ci-build.sh --build-dir build-netlink -- --disable-udev; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then .private/ci-build.sh --build-dir build-udev -- --enable-udev; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then .private/ci-build.sh --build-dir build; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then cd Xcode && xcodebuild -project libusb.xcodeproj; fi\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 3.61328125,
          "content": "Copyright © 2001 Johannes Erdfelt <johannes@erdfelt.com>\nCopyright © 2007-2009 Daniel Drake <dsd@gentoo.org>\nCopyright © 2010-2012 Peter Stuge <peter@stuge.se>\nCopyright © 2008-2016 Nathan Hjelm <hjelmn@users.sourceforge.net>\nCopyright © 2009-2013 Pete Batard <pete@akeo.ie>\nCopyright © 2009-2013 Ludovic Rousseau <ludovic.rousseau@gmail.com>\nCopyright © 2010-2012 Michael Plante <michael.plante@gmail.com>\nCopyright © 2011-2013 Hans de Goede <hdegoede@redhat.com>\nCopyright © 2012-2013 Martin Pieuchot <mpi@openbsd.org>\nCopyright © 2012-2013 Toby Gray <toby.gray@realvnc.com>\nCopyright © 2013-2018 Chris Dickens <christopher.a.dickens@gmail.com>\n\nOther contributors:\nAaron Luft\nAdam Korcz\nAddison Crump\nAdrian Bunk\nAdrien Destugues\nAkshay Jaggi\nAlan Ott\nAlan Stern\nAleksandr Mezin\nAlexander Mot\nAlexander Pyhalov\nAlexander Schlarb\nAlexander Stein\nAlex Feinman\nAlex Vatchenko\nAndrew Aldridge\nAndrew Fernandes\nAndrew Goodney\nAndy Chunyu\nAndy McFadden\nAngus Gratton\nAnil Nair\nAnkur Verma\nAnthony Clay\nAntonio Ospite\nArtem Egorkine\nAurelien Jarno\nAxel Gembe\nAymeric Vincent\nBaruch Siach\nBastien Nocera\nBei Zhang\nBence Csokas\nBenjamin Berg\nBenjamin Dobell\nBohdan Tymkiv\nBrad Smith\nBrent Rector\nBruno Harbulot\nCarl Karsten\nChristophe Zeitouny\nChris Zhu\nChunyu Xie\nColin Walters\nCraig Hutchinson\nDave Camarillo\nDavid Engraf\nDavidlohr Bueso\nDavid Moore\nDmitry Fleytman\nDmitry Kostjuchenko\nDmitry Zakablukov\nDominik Boehi\nDoug Johnston\nEdgar Fuß\nEvan Hunter\nEvan Miller\nFabrice Fontaine\nFederico Manzan\nFelipe Balbi\nFlorian Albrechtskirchinger\nFrancesco Montorsi\nFrancisco Facioni\nFrancis Hart\nFrank Li\nFrederik Carlier\nFreek Dijkstra\nGaurav Gupta\nGraeme Gill\nGreg Kroah-Hartman\nGustavo Zacarias\nHaidong Zheng\nHans Ulrich Niedermann\nHarry Mallon\nHector Martin\nHoi-Ho Chan\nIdo Yariv\nIgor Anokhin\nIhor Dutchak\nIlya Konstantinov\nIngvar Stepanyan\nJakub Klama\nJames Hanko\nJeffrey Nichols\nJie Zhang\nJim Chen\nJohann Richard\nJohn Keeping\nJohn Sheu\nJonas Malaco\nJonathon Jongsma\nJoost Muller\nJosh Gao\nJoshua Blake\nJoshua Hou\nJoshua M. Clulow\nJuan Cruz Viotti\nJulian Scheel\nJustin Bischoff\nKarsten Koenig\nKeith Ahluwalia\nKenjiro Tsuji\nKimura Masaru\nKonrad Rzepecki\nKuangye Guo\nLars Kanis\nLars Wirzenius\nLei Chen\nLéo Lam\nLiang Yunwang\nLonnie Abelbeck\nLuca Longinotti\nLuz Paz\nMac Wang\nMarco Trevisan (Treviño)\nMarcus Meissner\nMario Kleiner\nMark Kuo\nMarkus Heidelberg\nMartin Ettl\nMartin Koegler\nMartin Ling\nMartin Thierer\nMathias Hjärtström\nMatthew Stapleton\nMatthias Bolte\nMichael Dickens\nMichel Zou\nMike Frysinger\nMikhail Gusarov\nMikolaj Kucharski\nMorgan Leborgne\nMoritz Fischer\nNancy Li\nNia Alarie\nNicholas Corgan\nNiklas Gürtler\nOmri Iluz\nOrhan aib Kavrakoglu\nOrin Eman\nOzkan Sezer\nPablo Prietz\nPatrick Stewart\nPaul Cercueil\nPaul Fertser\nPaul Qureshi\nPekka Nikander\nPetr Pazourek\nPhilémon Favrod\nPino Toscano\nRob Walker\nRomain Vimont\nRoman Kalashnikov\nRosen Penev\nRyan Hileman\nRyan Metcalfe\nRyan Schmidt\nSaleem Rashid\nSameeh Jubran\nSean McBride\nSebastian Pipping\nSebastian von Ohr\nSergey Serb\nShawn Hoffman\nSimon Chan\nSimon Haggett\nSimon Newton\nSlash Gordon\nStefan Agner\nStefan Tauner\nSteinar H. Gunderson\nStephen Groat\nSylvain Fasel\nTheo Buehler\nThomas Röfer\nTim Hutt\nTim Roberts\nTobias Klauser\nToby Peterson\nTormod Volden\nTrygve Laugstøl\nUri Lublin\nUwe Bonnes\nVasily Khoruzhick\nVegard Storheil Eriksen\nVenkatesh Shukla\nVianney le Clément de Saint-Marcq\nVictor Toso\nVinicius Tinti\nVitali Lovich\nVladimir Beloborodov\nWilliam Orr\nWilliam Skellenger\nXiaofan Chen\nYegor Yefremov\nZeng Guang\nZhiqiang Liu\nZoltán Kovács\nСергей Валерьевич\nЛарионов Даниил\nРоман Донченко\njonner\norbitcowboy\nosy\nparafin\nRipleyTom\nSeneral\nsaur0n\nSomeAlphabetGuy\nwinterrace\nxloem\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 25.81640625,
          "content": "\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 14.900390625,
          "content": "For detailed information about the changes below, please see the git log\nor visit: http://log.libusb.info\n\n2024-01-31: v1.0.27\n* New libusb_init_context API to replace libusb_init\n* New libusb_get_max_alt_packet_size API\n* New libusb_get_platform_descriptor API (BOS)\n* Allow setting log callback with libusb_set_option/libusb_init_context\n* New WebAssembly + WebUSB backend using Emscripten\n* Fix regression in libusb_set_interface_alt_setting\n* Fix sync transfer completion race and use-after-free\n* Fix hotplug exit ordering\n* Linux: NO_DEVICE_DISCOVERY option set per context\n* macOS: Fix missing device list cleanup locking\n* macOS: Do not clear device data toggle for newer OS versions\n* macOS: Fix running binaries on older OS than build host\n* Windows: Allow claiming multiple associated interfaces\n* Windows: Ignore non-configured devices instead of waiting\n* Windows: Improved root hub detection\n\n2022-04-10: v1.0.26\n* Fix regression with transfer free's after closing device\n* Fix regression with destroyed context if API is misused\n* Workaround for applications using missing default context\n* Fix hotplog enumeration regression\n* Fix Windows isochronous transfer regression since 1.0.24\n* Fix macOS exit crash in some multi-context cases\n* Build fixes for various platforms and configurations\n* Fix Windows HID multi-interface product string retrieval\n* Update isochronous OUT packet actual lengths on Windows\n* Add interface bound checking for broken devices\n* Add umockdev tests on Linux\n\n2022-01-31: v1.0.25\n* Linux: Fix regression with some particular devices\n* Linux: Fix regression with libusb_handle_events_timeout_completed()\n* Linux: Fix regression with cpu usage in libusb_bulk_transfer\n* Darwin (macOS): Add support for detaching kernel drivers with authorization.\n* Darwin (macOS): Do not drop partial data on timeout.\n* Darwin (macOS): Silence pipe error in set_interface_alt_setting().\n* Windows: Fix HID backend missing byte\n* Windows: Fix segfault with libusbk driver\n* Windows: Fix regression when using libusb0 driver\n* Windows: Support LIBUSB_TRANSFER_ADD_ZERO_PACKET on winusb\n* New NO_DEVICE_DISCOVERY option replaces WEAK_AUTHORITY option\n* Various other bug fixes and improvements\n\n2020-12-09: v1.0.24\n* Add new platform abstraction (#252)\n* Add Null POSIX backend\n* Add support for eventfd\n* Add support for thread IDs on Haiku, NetBSD and Solaris\n* New API libusb_hotplug_get_user_data()\n* Darwin (macOS): Fix race condition that results in segmentation fault (#701)\n* Darwin (macOS): Fix stale descriptor information post reset (#733)\n* Darwin (macOS): use IOUSBDevice as darwin_device_class explicitly (#693)\n* Linux: Drop support for kernel older than 2.6.32\n* Linux: Provide an event thread name (#689)\n* Linux: Wait until all URBs have been reaped before freeing them (#607)\n* NetBSD: Recognize device timeouts (#710)\n* OpenBSD: Allow opening ugen devices multiple times (#763)\n* OpenBSD: Support libusb_get_port_number() (#764)\n* SunOS: Fix a memory leak (#756)\n* SunOS: Various fixes (#627, #628, #629)\n* Windows: Add Visual Studio 2019 support\n* Windows: Drop support for WinCE and Visual Studio older than 2013\n* Windows: Drop support for Windows XP\n* Windows: Support building all examples using Visual Studio (#151)\n* Documentation fixes and improvements\n* Various other bug fixes and improvements\n\n2019-08-28: v1.0.23\n* Add German translation (#446)\n* Add Hungarian translation (#493)\n* Android: Improved support for Android\n* BSD: Remove infinite recursion in OpenBSD backend\n* configure.ac: Fix detection of clock_gettime library (#439)\n* Core: abandon synchronous transfers when device closure is detected.\n* Core: fix error in handling the removal of file descriptors while handling\n  events.\n* Darwin(macOS): Switch from using ResetDevice to USBDeviceReEnumerate (#455)\n* Darwin(macOS): Remove code that changed the device class used (#428)\n* Darwin(macOS): Reduce hotplug timeout to 1ms (from 5s)\n* New API libusb_set_log_cb() to redirect global and per context log\n  messages to the provided log handling function\n* New API libusb_wrap_sys_device to allow the user to specify the\n  usb device to use.\n* Solaris: Break infinite recursion in backend clock_gettime\n* Solaris: Enable timerfd on sunos when available\n* Windows: Add support for isochronous transfers with WinUSB\n* Various other bug fixes and improvements\n\n2018-03-24: v1.0.22\n* New libusb_set_option() API\n* Fix transfer timeout not being cleared upon resubmission\n* Report super speed plus devices on modern Linux and macOS\n* Darwin: Improve support for macOS Sierra and High Sierra\n* Darwin: SDK fixes and improvements\n* Linux: Let initialization succeed when no devices are present\n* Linux: Mark internal file descriptors with CLOEXEC flag\n* Solaris: Add support for attach/detach kernel driver\n* Windows: Add dynamic UsbDk backend selection\n* Windows: Add isochronous transfer support via libusbK\n* Windows: Add Visual Studio 2017 support\n* Windows: Fix enumeration problems on Windows 8 and later\n* Windows: Major rework of poll() emulation\n* Windows: Numerous HID API fixes\n* Windows: Support cancellation of individual transfers (Vista and later)\n* Various other bug fixes and improvements\n\n2016-10-01: v1.0.21\n* Core: Refactor code related to transfer flags and timeout handling\n* Darwin: Ignore root hub simulation devices\n* Darwin: Improved support for OS X El Capitan\n* Darwin: Work around devices with buggy endpoint descriptors\n* Darwin: Do not use objc_registerThreadWithCollector after its deprecation\n* Darwin: Use C11 atomics on 10.12+ as the OS atomics are now deprecated\n* Linux: Support preallocating kernel memory for zerocopy USB\n* Linux: Deal with receiving POLLERR before all transfers have completed\n* Solaris: Add solaris backend\n* Windows: Add Visual Studio 2015 support\n* Windows: Add usbdk backend\n* Prevent attempts to recursively handle events\n* Fix race condition in handle_timeout()\n* Allow transferred argument to be optional in bulk APIs\n* Various other bug fixes and improvements\n\n2015-09-13: v1.0.20\n* Add Haiku support\n* Fix multiple memory and resource leaks (#16, #52, #76, #81)\n* Fix possible deadlock when executing transfer callback\n* New libusb_free_pollfds() API\n* Darwin: Fix devices not being detected on OS X 10.8 (#48)\n* Linux: Allow larger isochronous transfer submission (#23)\n* Windows: Fix broken builds Cygwin/MinGW builds and compiler warnings\n* Windows: Fix broken bus number lookup\n* Windows: Improve submission of control requests for composite devices\n* Examples: Add two-stage load support to fxload (#12)\n* Correctly report cancellations due to timeouts\n* Improve efficiency of event handling\n* Improve speed of transfer submission in multi-threaded environments\n* Various other bug fixes and improvements\nThe (#xx) numbers are libusb issue numbers, see ie:\nhttps://github.com/libusb/libusb/issues/16\n\n2014-05-30: v1.0.19\n* Add support for USB bulk streams on Linux and Mac OS X (#11)\n* Windows: Add AMD and Intel USB-3.0 root hub support\n* Windows: Fix USB 3.0 speed detection on Windows 8 or later (#10)\n* Added Russian translation for libusb_strerror strings\n* All: Various small fixes and cleanups\n\n2014-01-25: v1.0.18\n* Fix multiple memory leaks\n* Fix a crash when HID transfers return no data on Windows\n* Ensure all pending events are consumed\n* Improve Android and ucLinux support\n* Multiple Windows improvements (error logging, VS2013, VIA xHCI support)\n* Multiple OS X improvements (broken compilation, SIGFPE, 64bit support)\n\n2013-09-06: v1.0.17\n* Hotplug callbacks now always get passed a libusb_context, even if it is\n  the default context. Previously NULL would be passed for the default context,\n  but since the first context created is the default context, and most apps\n  use only 1 context, this meant that apps explicitly creating a context would\n  still get passed NULL\n* Android: Add .mk files to build with the Android NDK\n* Darwin: Add Xcode project\n* Darwin: Fix crash on unplug (#121)\n* Linux: Fix hang (deadlock) on libusb_exit\n* Linux: Fix libusb build failure with --disable-udev (#124)\n* Linux: Fix libusb_get_device_list() hang with --disable-udev (#130)\n* OpenBSD: Update OpenBSD backend with support for control transfers to\n  non-ugen(4) devices and make get_configuration() no longer generate I/O.\n  Note that using this libusb version on OpenBSD requires using\n  OpenBSD 5.3-current or later. Users of older OpenBSD versions are advised\n  to stay with the libusb shipped with OpenBSD (mpi)\n* Windows: fix libusb_dll_2010.vcxproj link errors (#129)\n* Various other bug fixes and improvements\n\n2013-07-11: v1.0.16\n* Add hotplug support for Darwin and Linux (#9)\n* Add superspeed endpoint companion descriptor support (#15)\n* Add BOS descriptor support (#15)\n* Make descriptor parsing code more robust\n* New libusb_get_port_numbers API, this is libusb_get_port_path without\n  the unnecessary context parameter, libusb_get_port_path is now deprecated\n* New libusb_strerror API (#14)\n* New libusb_set_auto_detach_kernel_driver API (#17)\n* Improve topology API docs (#95)\n* Logging now use a single write call per log-message, avoiding log-message\n  \"interlacing\" when using multiple threads.\n* Android: use Android logging when building on Android (#101)\n* Darwin: make libusb_reset reenumerate device on descriptors change (#89)\n* Darwin: add support for the LIBUSB_TRANSFER_ADD_ZERO_PACKET flag (#91)\n* Darwin: add a device cache (#112, #114)\n* Examples: Add sam3u_benchmark isochronous example by Harald Welte (#109)\n* Many other bug fixes and improvements\nThe (#xx) numbers are libusbx issue numbers, see ie:\nhttps://github.com/libusbx/libusbx/issues/9\n\n2013-04-15: v1.0.15\n* Improve transfer cancellation and avoid short read failures on broken descriptors\n* Filter out 8-bit characters in libusb_get_string_descriptor_ascii()\n* Add WinCE support\n* Add library stress tests\n* Add Cypress FX3 firmware upload support for fxload sample\n* Add HID and kernel driver detach support capabilities detection\n* Add SuperSpeed detection on OS X\n* Fix bInterval value interpretation on OS X\n* Fix issues with autoclaim, composite HID devices, interface autoclaim and\n  early abort in libusb_close() on Windows. Also add VS2012 solution files.\n* Improve fd event handling on Linux\n* Other bug fixes and improvements\n\n2012-09-26: v1.0.14\n* Reverts the previous API change with regards to bMaxPower.\n  If this doesn't matter to you, you are encouraged to keep using v1.0.13,\n  as it will use the same attribute as v2.0, to be released soon.\n* Note that LIBUSB_API_VERSION is *decreased* to 0x010000FF and the previous\n  guidelines with regards to concurrent use of MaxPower/bMaxPower still apply.\n\n2012-09-20: v1.0.13\n* [MAJOR] Fix a typo in the API with struct libusb_config_descriptor where\n  MaxPower was used instead of bMaxPower, as defined in the specs. If your \n  application was accessing the MaxPower attribute, and you need to maintain\n  compatibility with libusb or older versions, see APPENDIX A below.\n* Fix broken support for the 0.1 -> 1.0 libusb-compat layer\n* Fix unwanted cancellation of pending timeouts as well as major timeout related bugs\n* Fix handling of HID and composite devices on Windows\n* Introduce LIBUSB_API_VERSION macro\n* Add Cypress FX/FX2 firmware upload sample, based on fxload from\n  http://linux-hotplug.sourceforge.net\n* Add libusb0 (libusb-win32) and libusbK driver support on Windows. Note that while\n  the drivers allow it, isochronous transfers are not supported yet in libusb. Also\n  not supported yet is the use of libusb-win32 filter drivers on composite interfaces\n* Add support for the new get_capabilities ioctl on Linux and avoid unnecessary\n  splitting of bulk transfers\n* Improve support for newer Intel and Renesas USB 3.0 controllers on Windows\n* Harmonize the device number for root hubs across platforms\n* Other bug fixes and improvements\n\n2012-06-15: v1.0.12\n* Fix a potential major regression with pthread on Linux\n* Fix missing thread ID from debug log output on cygwin\n* Fix possible crash when using longjmp and MinGW's gcc 4.6\n* Add topology calls: libusb_get_port_number(), libusb_get_parent() & libusb_get_port_path()\n* Add toggleable debug, using libusb_set_debug() or the LIBUSB_DEBUG environment variable\n* Define log levels in libusb.h and set timestamp origin to first libusb_init() call\n* All logging is now sent to to stderr (info was sent to stdout previously)\n* Update log messages severity and avoid polluting log output on OS-X\n* Add HID driver support on Windows\n* Enable interchangeability of MSVC and MinGW DLLs\n* Additional bug fixes and improvements\n\n2012-05-08: v1.0.11\n* Revert removal of critical Windows event handling that was introduced in 1.0.10\n* Fix a possible deadlock in Windows when submitting transfers\n* Add timestamped logging\n* Add NetBSD support (experimental) and BSD libusb_get_device_speed() data\n* Add bootstrap.sh alongside autogen.sh (bootstrap.sh doesn't invoke configure)\n* Search for device nodes in /dev for Android support\n* Other bug fixes\n\n2012-04-17: v1.0.10\n* Public release\n* Add libusb_get_version\n* Add Visual Studio 2010 project files\n* Some Windows code cleanup\n* Fix xusb sample warnings \n\n2012-04-02: v1.0.9\n* First libusbx release\n* Add libusb_get_device_speed (all, except BSD) and libusb_error_name\n* Add Windows support (WinUSB driver only)\n* Add OpenBSD support\n* Add xusb sample\n* Tons of bug fixes\n\n2010-05-07: v1.0.8\n* Bug fixes\n\n2010-04-19: v1.0.7\n* Bug fixes and documentation tweaks\n* Add more interface class definitions\n\n2009-11-22: v1.0.6\n* Bug fixes\n* Increase libusb_handle_events() timeout to 60s for powersaving\n\n2009-11-15: v1.0.5\n * Use timerfd when available for timer management\n * Small fixes/updates\n\n2009-11-06: v1.0.4 release\n * Bug fixes including transfer locking to fix some potential threading races\n * More flexibility with clock types on Linux\n * Use new bulk continuation tracking in Linux 2.6.32 for improved handling\n   of short/failed transfers\n\n2009-08-27: v1.0.3 release\n * Bug fixes\n * Add libusb_get_max_iso_packet_size()\n\n2009-06-13: v1.0.2 release\n * Bug fixes\n\n2009-05-12: v1.0.1 release\n * Bug fixes\n * Darwin backend\n\n2008-12-13: v1.0.0 release\n * Bug fixes\n\n2008-11-21: v0.9.4 release\n * Bug fixes\n * Add libusb_attach_kernel_driver()\n\n2008-08-23: v0.9.3 release\n * Bug fixes\n\n2008-07-19: v0.9.2 release\n * Bug fixes\n\n2008-06-28: v0.9.1 release\n * Bug fixes\n * Introduce contexts to the API\n * Compatibility with new Linux kernel features\n\n2008-05-25: v0.9.0 release\n * First libusb-1.0 beta release\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAPPENDIX A - How to maintain code compatibility with versions of libusb and\nlibusb that use MaxPower:\n\nIf you must to maintain compatibility with versions of the library that aren't\nusing the bMaxPower attribute in struct libusb_config_descriptor, the \nrecommended way is to use the new LIBUSB_API_VERSION macro with an #ifdef.\nFor instance, if your code was written as follows:\n\n  if (dev->config[0].MaxPower < 250)\n\nThen you should modify it to have:\n\n#if defined(LIBUSB_API_VERSION) && (LIBUSB_API_VERSION >= 0x01000100)\n  if (dev->config[0].bMaxPower < 250)\n#else\n  if (dev->config[0].MaxPower < 250)\n#endif\n"
        },
        {
          "name": "HACKING",
          "type": "blob",
          "size": 1.06640625,
          "content": "Contributing to libusb\n**********************\n\nFor larger changes or API changes/extensions it may be wise to first\ndiscuss on the mailing list or in the issue tracker before larger\ncoding efforts are initiated.\n\nIf you extend or change the API make sure documentation is updated.\nPlease run make -C doc and check for any Doxygen warnings.\n\nCommit messages should be formatted to 72 chars width and have a\nfree-standing summary line. See for instance \"Commit Guidelines\" on\nhttps://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project\nor https://cbea.ms/git-commit/ about how to make well-formed commit\nmessages.\n\nPut detailed information in the commit message itself, which will end\nup in the git history. On the other hand the description that you fill\nin the GitHub pull request web page does not go anywhere.\n\nFor copyright reasons it is preferable to have your full name in the\ncommit author field. Do not update the AUTHOR file yourself, the\nmaintainers will update it as part of the release preparation.\n\nPlease don't touch version_nano.h in your patches or pull requests.\n"
        },
        {
          "name": "INSTALL_WIN.txt",
          "type": "blob",
          "size": 1.875,
          "content": "Installation Instructions for Windows\n*************************************\n\nIf you are compiling for MinGW or cygwin, please refer to the INSTALL file,\nwhich is automatically generated by autotools (e.g. running bootstrap.sh).\n\nIf you are using Microsoft Visual Studio:\n- Using Visual Studio 2022, open /msvc/libusb.sln\n- If you want to debug the library, uncomment the ENABLE_DEBUG_LOGGING define\n  in msvc/config.h\n- Select your configuration and compile the project.\n- To target a specific toolset (previous version of Visual Studio), either\n  edit PlatformToolset in /msvc/Configuration.Base.props, or supply the value\n  to msbuild on the command line.\n- For example, to build for VS2015 (from a different version):\n  msbuild -p:PlatformToolset=v140,Platform=x64,Configuration=Release libusb.sln\n\nInstalling and building libusb via vcpkg\n****************************************\n\nYou can download and install libusb using the vcpkg dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.bat\n    ./vcpkg integrate install\n    vcpkg install libusb\n\nThe libusb port in vcpkg is kept up to date by Microsoft team members and\ncommunity contributors. If the version is out of date, please create an issue\nor pull request (https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\nDestination directories\n***********************\n\nThe binaries are located at:\n/build/<PlatformToolset>/<Platform>/<Configuration>/(lib|dll)/libusb-1.0.(lib|dll)\nFor example: /build/v143/x64/Release/dll/libusb-1.0.dll\n\nTroubleshooting\n***************\n\nIf the compilation process complains about missing libraries, ensure that the\ndefault library paths for your project points to the relevant directories.\nIf needed, these libraries can be obtained by installing the latest Windows\nSDK.\n\nLinks\n*****\n\nAdditional information related to the Windows backend:\n  http://windows.libusb.info\n"
        },
        {
          "name": "KEYS",
          "type": "blob",
          "size": 6.8828125,
          "content": "This file contains the PGP keys of libusb release managers.\n\nUsers:\n       pgp < KEYS\nor\n       gpg --import KEYS\n\nMaintainers:\n    pgp -kxa <your name> and append it to this file.\nor\n    (pgpk -ll <your name> && pgpk -xa <your name>) >> this file.\nor\n    (gpg --list-sigs <your name> && gpg --armor --export <your name>) >> this file.\n\npub   rsa4096 2020-06-23 [SC]\n      C68187379B23DE9EFC46651E2C80FF56C6830A0E\nuid           [ultimate] Tormod Volden <debian.tormod@gmail.com>\nsub   rsa4096 2020-06-23 [E]\nsub   rsa4096 2020-06-23 [S]\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n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\n=5EaQ\n-----END PGP PUBLIC KEY BLOCK-----\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 1.4111328125,
          "content": "AUTOMAKE_OPTIONS = dist-bzip2 no-dist-gzip\nACLOCAL_AMFLAGS = -I m4\nEXTRA_DIST = INSTALL_WIN.txt PORTING doc/libusb.png \\\n\t     android msvc Xcode\nSUBDIRS = libusb\n\nif BUILD_EXAMPLES\nSUBDIRS += examples\nendif\n\nif BUILD_TESTS\nSUBDIRS += tests\nendif\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = libusb-1.0.pc\n\n# The package name is libusb-1.0, but we want the distribution\n# to be created as libusb-x.y.z instead of libusb-1.0-x.y.z\ndistdir = libusb-$(VERSION)\n\n# Ensure any generated docs are cleaned out\n# We need this here because make does not recurse into doc/\nclean-local:\n\trm -rf doc/$(DOXYGEN_HTMLDIR)\n\n# Use dist-hook to accomplish the following things for the dist recipe:\n#   1) Remove the GitHub Markdown from the README file\n#   2) Remove the .gitattributes file from the msvc directory\ndist-hook:\n\tchmod u+w $(distdir)/README $(distdir)/msvc\n\t$(SED) -i.orig -e '/Build Status/d' $(distdir)/README\n\t$(SED) -i.orig -e '/^$$/N;/^\\n$$/D' $(distdir)/README\n\t$(SED) -i.orig -e 's/\\[\\([A-Z]*\\)\\](\\1)/\\1/' $(distdir)/README\n\trm -f $(distdir)/README.orig\n\trm -f $(distdir)/msvc/.gitattributes\n\nreldir = .release/$(distdir)\nsfurl = frs.sourceforge.net:/home/frs/project/libusb/libusb-1.0\n.PHONY: dist-upload\ndist-upload: dist\n\trm -rf $(reldir)\n\tmkdir -p $(reldir)\n\tcp $(distdir).tar.bz2 $(reldir)\n\tif [ -z \"$$SF_USER\" ]; then \\\n\t\trsync -rv $(reldir) $(sfurl); \\\n\telse \\\n\t\trsync -rv $(reldir) $$SF_USER@$(sfurl); \\\n\tfi\n\trm -rf $(reldir)\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.091796875,
          "content": "For the latest libusb news, please refer to the ChangeLog file, or visit:\nhttps://libusb.info\n"
        },
        {
          "name": "PORTING",
          "type": "blob",
          "size": 3.7568359375,
          "content": "PORTING LIBUSB TO OTHER PLATFORMS\n\nIntroduction\n============\n\nThis document is aimed at developers wishing to port libusb to unsupported\nplatforms. I believe the libusb API is OS-independent, so by supporting\nmultiple operating systems we pave the way for cross-platform USB device\ndrivers.\n\nImplementation-wise, the basic idea is that you provide an interface to\nlibusb's internal \"backend\" API, which performs the appropriate operations on\nyour target platform.\n\nIn terms of USB I/O, your backend provides functionality to submit\nasynchronous transfers (synchronous transfers are implemented in the higher\nlayers, based on the async interface). Your backend must also provide\nfunctionality to cancel those transfers.\n\nYour backend must also provide an event handling function to \"reap\" ongoing\ntransfers and process their results.\n\nThe backend must also provide standard functions for other USB operations,\ne.g. setting configuration, obtaining descriptors, etc.\n\n\nFile descriptors for I/O polling\n================================\n\nFor libusb to work, your event handling function obviously needs to be called\nat various points in time. Your backend must provide a set of file descriptors\nwhich libusb and its users can pass to poll() or select() to determine when\nit is time to call the event handling function.\n\nOn Linux, this is easy: the usbfs kernel interface exposes a file descriptor\nwhich can be passed to poll(). If something similar is not true for your\nplatform, you can emulate this using an internal library thread to reap I/O as\nnecessary, and a pipe() with the main library to raise events. The file\ndescriptor of the pipe can then be provided to libusb as an event source.\n\n\nInterface semantics and documentation\n=====================================\n\nDocumentation of the backend interface can be found in libusbi.h inside the\nusbi_os_backend structure definition.\n\nYour implementations of these functions will need to call various internal\nlibusb functions, prefixed with \"usbi_\". Documentation for these functions\ncan be found in the .c files where they are implemented.\n\nYou probably want to skim over *all* the documentation before starting your\nimplementation. For example, you probably need to allocate and store private\nOS-specific data for device handles, but the documentation for the mechanism\nfor doing so is probably not the first thing you will see.\n\nThe Linux backend acts as a good example - view it as a reference\nimplementation which you should try to match the behaviour of.\n\n\nGetting started\n===============\n\n1. Modify configure.ac to detect your platform appropriately (see the OS_LINUX\nstuff for an example).\n\n2. Implement your backend in the libusb/os/ directory, modifying\nlibusb/os/Makefile.am appropriately.\n\n3. Add preprocessor logic to the top of libusb/core.c to statically assign the\nright usbi_backend for your platform.\n\n4. Produce and test your implementation.\n\n5. Send your implementation to libusb-devel mailing list.\n\n\nImplementation difficulties? Questions?\n=======================================\n\nIf you encounter difficulties porting libusb to your platform, please raise\nthese issues on the libusb-devel mailing list. Where possible and sensible, I\nam interested in solving problems preventing libusb from operating on other\nplatforms.\n\nThe libusb-devel mailing list is also a good place to ask questions and\nmake suggestions about the internal API. Hopefully we can produce some\nbetter documentation based on your questions and other input.\n\nYou are encouraged to get involved in the process; if the library needs\nsome infrastructure additions/modifications to better support your platform,\nyou are encouraged to make such changes (in cleanly distinct patch\nsubmissions). Even if you do not make such changes yourself, please do raise\nthe issues on the mailing list at the very minimum.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 1.3310546875,
          "content": "# libusb\n\n[![Build Status](https://travis-ci.org/libusb/libusb.svg?branch=master)](https://travis-ci.org/libusb/libusb)\n[![Build Status](https://ci.appveyor.com/api/projects/status/xvrfam94jii4a6lw?svg=true)](https://ci.appveyor.com/project/LudovicRousseau/libusb)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/2180/badge.svg)](https://scan.coverity.com/projects/libusb-libusb)\n\nlibusb is a library for USB device access from Linux, macOS,\nWindows, OpenBSD/NetBSD, Haiku, Solaris userspace, and WebAssembly\nvia WebUSB.\nIt is written in C (Haiku backend in C++) and licensed under the GNU\nLesser General Public License version 2.1 or, at your option, any later\nversion (see [COPYING](COPYING)).\n\nlibusb is abstracted internally in such a way that it can hopefully\nbe ported to other operating systems. Please see the [PORTING](PORTING)\nfile for more information.\n\nlibusb homepage:\nhttps://libusb.info/\n\nDevelopers will wish to consult the API documentation:\nhttp://api.libusb.info\n\nUse the mailing list for questions, comments, etc:\nhttp://mailing-list.libusb.info\n\n- Hans de Goede <hdegoede@redhat.com>\n- Xiaofan Chen <xiaofanc@gmail.com>\n- Ludovic Rousseau <ludovic.rousseau@gmail.com>\n- Nathan Hjelm <hjelmn@cs.unm.edu>\n- Chris Dickens <christopher.a.dickens@gmail.com>\n\n(Please use the mailing list rather than mailing developers directly)\n"
        },
        {
          "name": "README.git",
          "type": "blob",
          "size": 1.810546875,
          "content": "Notes related to git compilation:\n--------------------------------\n\nIf you retrieved the libusb repository from git and are using a gcc based\ntoolchain, be mindful that you should have the autotools installed (autoconf,\nautomake) and will need to run either ./autogen.sh or ./bootstrap.sh to produce\nthe configure file.\n\nThe difference between autogen.sh and bootstrap.sh is that the former invokes\nconfigure with a default set of options, and will therefore generate a Makefile,\nwhereas the latter does not invoke configure at all. If using autogen.sh, note\nthat you can also append options, that will be passed as is to configure.\n\nmacOS-specific notes:\n-------------------\n\nStarting with Xcode 4.3, neither Xcode.app nor the Xcode 'command line tools'\nincludes autotools and so running either autogen.sh or bootstrap.sh will result\nin the message:\n\nlibtoolize or glibtoolize was not found! Please install libtool.\n\nTo proceed, you must find and install it from somewhere.\n\nAlternatively, you can use the Xcode project at Xcode/libusb.xcodeproj.\n\nNotes related to submitting new developments:\n--------------------------------------------\n\nIf you submit a new development to libusb (eg: new backend), that is unlikely\nto fit in a couple of small patches, we would kindly suggest that you create a\npublic account on github, if you don't have one already, and then fork a new\nlibusb repository under this account from https://github.com/libusb/libusb.\n\nThen you can create a git branch for your work, that we will be able to better\nreference and test.\n\nWe also suggest that, if you are planning to bring in a large development, you\ntry to involve the libusb community early by letting the mailing list know, as\nyou may find that other people might be eager to help you out.\nSee http://mailing-list.libusb.info for details on how to join the mailing list.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.005859375,
          "content": "README"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.123046875,
          "content": "Please see the libusb roadmap by visiting:\nhttps://github.com/libusb/libusb/milestones?direction=asc&sort=due_date&state=open\n"
        },
        {
          "name": "Xcode",
          "type": "tree",
          "content": null
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 3.625,
          "content": "version: 1.0.{build}\nimage:\n  - Visual Studio 2013\n  - Visual Studio 2015\n  - Visual Studio 2017\n  - Visual Studio 2019\n  - Visual Studio 2022\nplatform:\n  - Win32\n  - x64\nconfiguration:\n  - Debug\n  - Release\nenvironment:\n  toolset: UNK\nclone_depth: 1\nbuild:\n  parallel: true\nfor:\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2013\n    environment:\n      toolset: v120\n    build:\n      project: msvc\\libusb.sln\n\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2015\n          configuration: Debug\n    environment:\n      toolset: v140\n    build:\n      project: msvc\\libusb.sln\n\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2015\n          platform: Win32\n          configuration: Release\n    environment:\n      toolset: v140\n    install:\n      - cmd: xcopy /S /I \"%APPVEYOR_BUILD_FOLDER%\" C:\\msys64\\home\\appveyor\\libusb\n      - cmd: xcopy /S /I \"%APPVEYOR_BUILD_FOLDER%\" C:\\cygwin\\home\\appveyor\\libusb\n    build_script:\n      - cmd: msbuild \"%APPVEYOR_BUILD_FOLDER%\\msvc\\libusb.sln\" /m /logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n      - cmd: C:\\msys64\\usr\\bin\\bash -l \"%APPVEYOR_BUILD_FOLDER%\\.private\\appveyor_build.sh\" MinGW\n      - cmd: C:\\cygwin\\bin\\bash -l \"%APPVEYOR_BUILD_FOLDER%\\.private\\appveyor_build.sh\" cygwin\n    after_build:\n      - cmd: 7z a \"libusb-build_%APPVEYOR_BUILD_WORKER_IMAGE%_%PLATFORM%_%CONFIGURATION%.7z\" tag_* README-build.txt build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\dll build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\lib build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\*.exe C:\\msys64\\home\\appveyor\\libusb-MinGW-Win32 C:\\cygwin\\home\\appveyor\\libusb-cygwin-Win32\n\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2015\n          platform: x64\n          configuration: Release\n    environment:\n      toolset: v140\n    install:\n      - cmd: xcopy /S /I \"%APPVEYOR_BUILD_FOLDER%\" C:\\msys64\\home\\appveyor\\libusb\n      - cmd: xcopy /S /I \"%APPVEYOR_BUILD_FOLDER%\" C:\\cygwin64\\home\\appveyor\\libusb\n    build_script:\n      - cmd: msbuild \"%APPVEYOR_BUILD_FOLDER%\\msvc\\libusb.sln\" /m /logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n      - cmd: C:\\msys64\\usr\\bin\\bash -l \"%APPVEYOR_BUILD_FOLDER%\\.private\\appveyor_build.sh\" MinGW\n      - cmd: C:\\cygwin64\\bin\\bash -l \"%APPVEYOR_BUILD_FOLDER%\\.private\\appveyor_build.sh\" cygwin\n    after_build:\n      - cmd: 7z a \"libusb-build_%APPVEYOR_BUILD_WORKER_IMAGE%_%PLATFORM%_%CONFIGURATION%.7z\" tag_* README-build.txt build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\dll build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\lib build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\*.exe C:\\msys64\\home\\appveyor\\libusb-MinGW-x64 C:\\cygwin64\\home\\appveyor\\libusb-cygwin-x64\n\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2017\n    environment:\n      toolset: v141\n    build:\n      project: msvc\\libusb.sln\n\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2019\n    environment:\n      toolset: v142\n    build:\n      project: msvc\\libusb.sln\n\n  -\n    matrix:\n      only:\n        - image: Visual Studio 2022\n    environment:\n      toolset: v143\n    build:\n      project: msvc\\libusb.sln\n\nafter_build:\n  - cmd: ECHO This was built by %APPVEYOR_BUILD_WORKER_IMAGE% from %APPVEYOR_REPO_NAME% commit %APPVEYOR_REPO_COMMIT% > README-build.txt\n  - cmd: ECHO > tag_%APPVEYOR_REPO_TAG_NAME%_commit_%APPVEYOR_REPO_COMMIT%\n  - cmd: 7z a \"libusb-build_%APPVEYOR_BUILD_WORKER_IMAGE%_%PLATFORM%_%CONFIGURATION%.7z\" tag_* README-build.txt build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\dll build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\lib build\\%TOOLSET%\\%PLATFORM%\\%CONFIGURATION%\\*.exe\n\nartifacts:\n  - path: \"libusb-build_%APPVEYOR_BUILD_WORKER_IMAGE%_%PLATFORM%_%CONFIGURATION%.7z\"\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.1767578125,
          "content": "#!/bin/sh\n\nset -e\n\nsrcdir=\"$(dirname \"$0\")\"\n\n\"$srcdir\"/bootstrap.sh\nif [ -z \"$NOCONFIGURE\" ]; then\n    exec \"$srcdir\"/configure --enable-examples-build --enable-tests-build \"$@\"\nfi\n"
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 0.0966796875,
          "content": "#!/bin/sh\n\nset -e\n\ncd \"$(dirname \"$0\")\"\n\nif [ ! -d m4 ]; then\n    mkdir m4\nfi\nexec autoreconf -ivf\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 16.2783203125,
          "content": "dnl These m4 macros are whitespace sensitive and break if moved around much.\nm4_define([LU_VERSION_H], m4_include([libusb/version.h]))\nm4_define([LU_DEFINE_VERSION_ATOM],\n\t[m4_define([$1], m4_bregexp(LU_VERSION_H,\n\t[^#define\\s*$1\\s*\\([0-9]*\\).*], [\\1]))])\nm4_define([LU_DEFINE_VERSION_RC_ATOM],\n\t[m4_define([$1], m4_bregexp(LU_VERSION_H,\n\t[^#define\\s*$1\\s*\"\\(-rc[0-9]*\\)\".*], [\\1]))])\ndnl The m4_bregexp() returns (only) the numbers following the #define named\ndnl in the first macro parameter. m4_define() then defines the name for use\ndnl in AC_INIT.\n\nLU_DEFINE_VERSION_ATOM([LIBUSB_MAJOR])\nLU_DEFINE_VERSION_ATOM([LIBUSB_MINOR])\nLU_DEFINE_VERSION_ATOM([LIBUSB_MICRO])\nLU_DEFINE_VERSION_RC_ATOM([LIBUSB_RC])\n\nAC_PREREQ([2.69])\nAC_INIT([libusb-1.0], [LIBUSB_MAJOR[.]LIBUSB_MINOR[.]LIBUSB_MICRO[]LIBUSB_RC], [libusb-devel@lists.sourceforge.net], [libusb-1.0], [https://libusb.info])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_SRCDIR([libusb/core.c])\nAC_CONFIG_MACRO_DIR([m4])\nAC_PROG_CC\nAC_PROG_CXX\nAC_C_INLINE\nAM_INIT_AUTOMAKE\nLT_INIT\nLT_LANG([Windows Resource])\n\ndnl Library versioning\ndnl These numbers should be tweaked on every release. Read carefully:\ndnl http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\ndnl http://sourceware.org/autobook/autobook/autobook_91.html\nlt_current=4\nlt_revision=0\nlt_age=4\nLT_LDFLAGS=\"-version-info ${lt_current}:${lt_revision}:${lt_age} -no-undefined\"\n\nm4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])\n\nEXTRA_CPPFLAGS=\nEXTRA_CFLAGS=\n\ndnl check for -std=gnu11 compiler support (optional)\ndnl note that we don't just check if the compiler accepts '-std=x11'\ndnl but also that it supports the _Thread_local keyword because some compilers\ndnl (e.g. gcc 4.8) accept the command line option but do not implement TLS\nsaved_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"-std=gnu11\"\nAC_MSG_CHECKING([if $CC supports -std=gnu11])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([_Thread_local int x;], [x = 42;])],\n\t[AC_MSG_RESULT([yes])\n\t c_dialect=gnu],\n\t[AC_MSG_RESULT([no])\n\t c_dialect=])\nif test \"x$c_dialect\" != xgnu; then\n\tdnl fallback check for -std=c11 compiler support (required)\n\tCFLAGS=\"-std=c11\"\n\tAC_MSG_CHECKING([if $CC supports -std=c11])\n\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([_Thread_local int x;], [x = 42;])],\n\t\t[AC_MSG_RESULT([yes])],\n\t\t[AC_MSG_RESULT([no])\n\t\t AC_MSG_ERROR([compiler with C11 support is required to build libusb])])\n\tc_dialect=c\nfi\nCFLAGS=\"${saved_CFLAGS}\"\n\nAC_DEFINE([_GNU_SOURCE], [1], [Enable GNU extensions.])\nAC_DEFINE([DEFAULT_VISIBILITY], [__attribute__ ((visibility (\"default\")))], [Define to the attribute for default visibility.])\nAC_DEFINE([PRINTF_FORMAT(a, b)], [__attribute__ ((__format__ (__printf__, a, b)))], [Define to the attribute for enabling parameter checks on printf-like functions.])\n\ncreate_import_lib=\nis_android_linux=\nAC_MSG_CHECKING([operating system])\ncase $host in\n*-darwin*)\n\tAC_MSG_RESULT([Darwin/Mac OS X])\n\tbackend=darwin\n\tplatform=posix\n\t;;\n*-haiku*)\n\tAC_MSG_RESULT([Haiku])\n\tbackend=haiku\n\tplatform=posix\n\t;;\nwasm*-emscripten)\n\tAC_MSG_RESULT([Emscripten])\n\tbackend=emscripten\n\tplatform=posix\n\t;;\nwasm*-unknown-none)\n\tAC_MSG_ERROR([\n--host=$host_alias is not accepted as it might become ambiguous in the future.\nPlease use an explicit --host=$host_cpu-emscripten instead.\n\t])\n\t;;\n*-linux* | *-uclinux*)\n\tdnl on Android Linux, some functions are in different places\n\tcase $host in\n\t*-linux-android*)\n\t\tAC_MSG_RESULT([Android Linux])\n\t\tis_android_linux=yes\n\t\t;;\n\t*)\n\t\tAC_MSG_RESULT([Linux])\n\t\t;;\n\tesac\n\tbackend=linux\n\tplatform=posix\n\t;;\n*-netbsd*)\n\tAC_MSG_RESULT([NetBSD])\n\tbackend=netbsd\n\tplatform=posix\n\t;;\n*-openbsd*)\n\tAC_MSG_RESULT([OpenBSD])\n\tbackend=openbsd\n\tplatform=posix\n\t;;\n*-solaris*)\n\tAC_MSG_RESULT([SunOS])\n\tbackend=sunos\n\tplatform=posix\n\t;;\n*-cygwin*)\n\tAC_MSG_RESULT([Windows (using Cygwin)])\n\tbackend=windows\n\tplatform=windows\n\tEXTRA_CFLAGS=\"-mwin32\"\n\t;;\n*-mingw* | *msys*)\n\tAC_MSG_RESULT([Windows])\n\tbackend=windows\n\tplatform=windows\n\ttest \"x$enable_shared\" = xyes && create_import_lib=yes\n\tEXTRA_CFLAGS=\"-fno-omit-frame-pointer\"\n\tEXTRA_LDFLAGS=\"-static-libgcc\"\n\t;;\n*)\n\tAC_MSG_RESULT([Null])\n\tAC_MSG_WARN([The host being compiled for is not supported.])\n\tAC_MSG_WARN([The library may compile but will not function in any useful manner.])\n\tbackend=null\n\tplatform=posix\n\t;;\nesac\n\nif test \"x$platform\" = xposix; then\n\tAC_DEFINE([PLATFORM_POSIX], [1], [Define to 1 if compiling for a POSIX platform.])\n\tAC_CHECK_TYPES([nfds_t], [], [], [[#include <poll.h>]])\n\tif test \"x$backend\" != xemscripten; then\n\t\t# pipe2 is detected as present on Emscripten, but it isn't actually ported and always\n\t\t# returns an error. https://github.com/emscripten-core/emscripten/issues/14824\n\t\tAC_CHECK_FUNCS([pipe2])\n\tfi\n\tdnl Some compilers do not support the '-pthread' option so check for it here\n\tsaved_CFLAGS=\"${CFLAGS}\"\n\tCFLAGS=\"-Wall -Werror -pthread\"\n\tAC_MSG_CHECKING([if $CC recognizes -pthread])\n\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [])],\n\t\t[AC_MSG_RESULT([yes])\n\t\t AC_SUBST(THREAD_CFLAGS, [-pthread])],\n\t\t[AC_MSG_RESULT([no])])\n\tCFLAGS=\"${saved_CFLAGS}\"\n\tdnl Android Linux and Darwin provide pthread functions directly in libc\n\tdnl glibc also provides some pthread functions directly, so search for a thread-specific function\n\tAC_SEARCH_LIBS([pthread_create], [pthread],\n\t\t[test \"x$ac_cv_search_pthread_create\" != \"xnone required\" && AC_SUBST(THREAD_LIBS, [-lpthread])],\n\t\t[], [])\n\tdnl Check for new-style atomic builtins. We first check without linking to -latomic.\n\tAC_MSG_CHECKING(whether __atomic_load_n is supported)\n\tAC_LINK_IFELSE([AC_LANG_SOURCE([[\n\t#include <stdint.h>\n\tint main() {\n\t\tstruct {\n\t\t\tuint64_t *v;\n\t\t} x;\n\t\treturn (int)__atomic_load_n(x.v, __ATOMIC_ACQUIRE) &\n\t\t       (int)__atomic_add_fetch(x.v, (uint64_t)1, __ATOMIC_ACQ_REL);\n\t}]])], GCC_ATOMIC_BUILTINS_SUPPORTED=yes, GCC_ATOMIC_BUILTINS_SUPPORTED=no)\n\tAC_MSG_RESULT($GCC_ATOMIC_BUILTINS_SUPPORTED)\n\tif test \"x$GCC_ATOMIC_BUILTINS_SUPPORTED\" != xyes; then\n\t\tAC_SEARCH_LIBS([__atomic_fetch_add_4], [atomic])\n\tfi\nelif test \"x$platform\" = xwindows; then\n\tAC_DEFINE([PLATFORM_WINDOWS], [1], [Define to 1 if compiling for a Windows platform.])\nelse\n\tAC_MSG_ERROR([Unknown platform])\nfi\n\ncase $backend in\ndarwin)\n\tAC_CHECK_FUNCS([pthread_threadid_np])\n\tLIBS=\"${LIBS} -lobjc -Wl,-framework,IOKit -Wl,-framework,CoreFoundation -Wl,-framework,Security\"\n\tAC_CHECK_HEADERS([IOKit/usb/IOUSBHostFamilyDefinitions.h])\n\t;;\nhaiku)\n\tLIBS=\"${LIBS} -lbe\"\n\t;;\nlinux)\n\tAC_SEARCH_LIBS([clock_gettime], [rt], [], [], [])\n\tAC_CHECK_FUNCS([pthread_setname_np])\n\tAC_ARG_ENABLE([udev],\n\t\t[AS_HELP_STRING([--enable-udev], [use udev for device enumeration and hotplug support (recommended) [default=yes]])],\n\t\t[use_udev=$enableval], [use_udev=yes])\n\tif test \"x$use_udev\" = xyes; then\n\t\tdnl system has udev. use it or fail!\n\t\tAC_CHECK_HEADER([libudev.h], [], [AC_MSG_ERROR([udev support requested but libudev header not installed])])\n\t\tAC_CHECK_LIB([udev], [udev_new], [], [AC_MSG_ERROR([udev support requested but libudev not installed])])\n\n\t\t# We can build umockdev tests (if available)\n\t\tm4_ifdef([PKG_PROG_PKG_CONFIG],[\n\t\t\tPKG_PROG_PKG_CONFIG\n\t\t   \tPKG_CHECK_MODULES([UMOCKDEV], [umockdev-1.0 >= 0.16.0], [ac_have_umockdev=yes], [ac_have_umockdev=no])\n\t\t   \tPKG_CHECK_MODULES([UMOCKDEV_HOTPLUG], [umockdev-1.0 >= 0.17.7], [ac_umockdev_hotplug=yes], [ac_umockdev_hotplug=no])\n\t\t\tif test $ac_umockdev_hotplug = yes; then\n\t\t\t   AC_DEFINE([UMOCKDEV_HOTPLUG], [1], [UMockdev hotplug code is not racy])\n\t\t\tfi\n\t\t], [])\n\telse\n\t\tAC_CHECK_HEADERS([asm/types.h])\n\t\tAC_CHECK_HEADER([linux/netlink.h], [], [AC_MSG_ERROR([Linux netlink header not found])])\n\t\tAC_CHECK_HEADER([sys/socket.h], [], [AC_MSG_ERROR([Linux socket header not found])])\n\tfi\n\t;;\nsunos)\n\tLIBS=\"${LIBS} -ldevinfo\"\n\t;;\nwindows)\n\tAC_CHECK_TYPES([struct timespec], [], [], [[#include <time.h>]])\n\tAC_DEFINE([_WIN32_WINNT], [_WIN32_WINNT_VISTA], [Define to the oldest supported Windows version.])\n\tLT_LDFLAGS=\"${LT_LDFLAGS} -avoid-version\"\n\t;;\nemscripten)\n\t# Note: LT_LDFLAGS is not enough here because we need link flags for executable.\n\tEM_LDFLAGS=\"--bind -s ASYNCIFY\"\n\tAM_LDFLAGS=\"${AM_LDFLAGS} ${EM_LDFLAGS} -s ASSERTIONS -s ALLOW_MEMORY_GROWTH\"\n\tLIBS=\"${LIBS} ${EM_LDFLAGS}\"\n\t;;\n*)\n\tdnl no special handling required\n\t;;\nesac\n\ndnl headers not available on all platforms but required on others\nAC_CHECK_HEADERS([sys/time.h])\n\ndnl check availability of clock_gettime(), except don't bother on Darwin, because the result is not used.\nif test \"x$platform\" = xposix && test \"x$backend\" != xdarwin; then\n\tAC_CHECK_FUNCS([clock_gettime], [have_clock_gettime=yes], [AC_MSG_ERROR([clock_gettime() is required on this platform])])\n\n\tif test \"x$have_clock_gettime\" = xyes; then\n\t\tdnl the clock_gettime() function needs certain clock IDs defined\n\t\tAC_CHECK_DECL([CLOCK_MONOTONIC], [], [AC_MSG_ERROR([C library headers missing definition for CLOCK_MONOTONIC])], [[#include <time.h>]])\n\t\tdnl use the monotonic clock for condition variable timed waits if possible\n\t\tAC_CHECK_FUNCS([pthread_condattr_setclock], [need_clock_realtime=], [need_clock_realtime=yes])\n\t\tif test \"x$need_clock_realtime\" = xyes; then\n\t\t\tAC_CHECK_DECL([CLOCK_REALTIME], [], [AC_MSG_ERROR([C library headers missing definition for CLOCK_REALTIME])], [[#include <time.h>]])\n\t\tfi\n\tfi\nfi\n\ndnl eventfd support\nif test \"x$backend\" = xlinux || test \"x$backend\" = xsunos; then\n\tAC_ARG_ENABLE([eventfd],\n\t\t[AS_HELP_STRING([--enable-eventfd], [use eventfd for signalling [default=auto]])],\n\t\t[use_eventfd=$enableval],\n\t\t[use_eventfd=auto])\n\tif test \"x$use_eventfd\" != xno; then\n\t\tAC_CHECK_HEADER([sys/eventfd.h], [eventfd_h=yes], [eventfd_h=])\n\t\tif test \"x$eventfd_h\" = xyes; then\n\t\t\tAC_CHECK_DECLS([EFD_NONBLOCK, EFD_CLOEXEC], [eventfd_h_ok=yes], [eventfd_h_ok=], [[#include <sys/eventfd.h>]])\n\t\t\tif test \"x$eventfd_h_ok\" = xyes; then\n\t\t\t\tAC_CHECK_FUNC([eventfd], [eventfd_ok=yes], [eventfd_ok=])\n\t\t\t\tif test \"x$eventfd_ok\" = xyes; then\n\t\t\t\t\tAC_DEFINE([HAVE_EVENTFD], [1], [Define to 1 if the system has eventfd functionality.])\n\t\t\t\telif test \"x$use_eventfd\" = xyes; then\n\t\t\t\t\tAC_MSG_ERROR([eventfd() function not found; glibc 2.9+ required])\n\t\t\t\tfi\n\t\t\telif test \"x$use_eventfd\" = xyes; then\n\t\t\t\tAC_MSG_ERROR([eventfd header not usable; glibc 2.9+ required])\n\t\t\tfi\n\t\telif test \"x$use_eventfd\" = xyes; then\n\t\t\tAC_MSG_ERROR([eventfd header not available; glibc 2.9+ required])\n\t\tfi\n\tfi\n\tAC_MSG_CHECKING([whether to use eventfd for signalling])\n\tif test \"x$use_eventfd\" = xno; then\n\t\tAC_MSG_RESULT([no (disabled by user)])\n\telif test \"x$eventfd_h\" != xyes; then\n\t\tAC_MSG_RESULT([no (header not available)])\n\telif test \"x$eventfd_h_ok\" != xyes; then\n\t\tAC_MSG_RESULT([no (header not usable)])\n\telif test \"x$eventfd_ok\" != xyes; then\n\t\tAC_MSG_RESULT([no (functions not available)])\n\telse\n\t\tAC_MSG_RESULT([yes])\n\tfi\nfi\n\ndnl timerfd support\nif test \"x$backend\" = xlinux || test \"x$backend\" = xsunos; then\n\tAC_ARG_ENABLE([timerfd],\n\t\t[AS_HELP_STRING([--enable-timerfd], [use timerfd for timing [default=auto]])],\n\t\t[use_timerfd=$enableval],\n\t\t[use_timerfd=auto])\n\tif test \"x$use_timerfd\" != xno; then\n\t\tAC_CHECK_HEADER([sys/timerfd.h], [timerfd_h=yes], [timerfd_h=])\n\t\tif test \"x$timerfd_h\" = xyes; then\n\t\t\tAC_CHECK_DECLS([TFD_NONBLOCK, TFD_CLOEXEC], [timerfd_h_ok=yes], [timerfd_h_ok=], [[#include <sys/timerfd.h>]])\n\t\t\tif test \"x$timerfd_h_ok\" = xyes; then\n\t\t\t\tAC_CHECK_FUNC([timerfd_create], [timerfd_ok=yes], [timerfd_ok=])\n\t\t\t\tif test \"x$timerfd_ok\" = xyes; then\n\t\t\t\t\tAC_DEFINE([HAVE_TIMERFD], [1], [Define to 1 if the system has timerfd functionality.])\n\t\t\t\telif test \"x$use_timerfd\" = xyes; then\n\t\t\t\t\tAC_MSG_ERROR([timerfd_create() function not found; glibc 2.9+ required])\n\t\t\t\tfi\n\t\t\telif test \"x$use_timerfd\" = xyes; then\n\t\t\t\tAC_MSG_ERROR([timerfd header not usable; glibc 2.9+ required])\n\t\t\tfi\n\t\telif test \"x$use_timerfd\" = xyes; then\n\t\t\tAC_MSG_ERROR([timerfd header not available; glibc 2.9+ required])\n\t\tfi\n\tfi\n\tAC_MSG_CHECKING([whether to use timerfd for timing])\n\tif test \"x$use_timerfd\" = xno; then\n\t\tAC_MSG_RESULT([no (disabled by user)])\n\telif test \"x$timerfd_h\" != xyes; then\n\t\tAC_MSG_RESULT([no (header not available)])\n\telif test \"x$timerfd_h_ok\" != xyes; then\n\t\tAC_MSG_RESULT([no (header not usable)])\n\telif test \"x$timerfd_ok\" != xyes; then\n\t\tAC_MSG_RESULT([no (functions not available)])\n\telse\n\t\tAC_MSG_RESULT([yes])\n\tfi\nfi\n\ndnl Message logging\nAC_ARG_ENABLE([log],\n\t[AS_HELP_STRING([--disable-log], [disable all logging])],\n\t[log_enabled=$enableval],\n\t[log_enabled=yes])\nif test \"x$log_enabled\" != xno; then\n\tAC_DEFINE([ENABLE_LOGGING], [1], [Define to 1 to enable message logging.])\nfi\n\nAC_ARG_ENABLE([debug-log],\n\t[AS_HELP_STRING([--enable-debug-log], [start with debug message logging enabled [default=no]])],\n\t[debug_log_enabled=$enableval],\n\t[debug_log_enabled=no])\nif test \"x$debug_log_enabled\" != xno; then\n\tAC_DEFINE([ENABLE_DEBUG_LOGGING], [1], [Define to 1 to start with debug message logging enabled.])\nfi\n\nAC_ARG_ENABLE([system-log],\n\t[AS_HELP_STRING([--enable-system-log], [output logging messages to the systemwide log, if supported by the OS [default=no]])],\n\t[system_log_enabled=$enableval],\n\t[system_log_enabled=no])\nif test \"x$system_log_enabled\" != xno; then\n\tAC_DEFINE([USE_SYSTEM_LOGGING_FACILITY], [1], [Define to 1 to output logging messages to the systemwide log.])\n\tif test \"x$backend\" != xwindows && test \"x$is_android_linux\" != xyes; then\n\t\tdnl Check if syslog is available in standard C library\n\t\tAC_CHECK_HEADER([syslog.h], [syslog_h=yes], [syslog_h=])\n\t\tif test \"x$syslog_h\" = xyes; then\n\t\t\tAC_CHECK_FUNCS([syslog])\n\t\tfi\n\tfi\nfi\n\ndnl Examples build\nAC_ARG_ENABLE([examples-build],\n\t[AS_HELP_STRING([--enable-examples-build], [build example applications [default=no]])],\n\t[build_examples=$enableval],\n\t[build_examples=no])\n\ndnl Tests build\nAC_ARG_ENABLE([tests-build],\n\t[AS_HELP_STRING([--enable-tests-build], [build test applications [default=no]])],\n\t[build_tests=$enableval],\n\t[build_tests=no])\n\nAM_CONDITIONAL([BUILD_EXAMPLES], [test \"x$build_examples\" != xno])\nAM_CONDITIONAL([BUILD_TESTS], [test \"x$build_tests\" != xno])\nAM_CONDITIONAL([BUILD_UMOCKDEV_TEST], [test \"x$ac_have_umockdev\" = xyes -a \"x$log_enabled\" != xno -a \"x$debug_log_enabled\" != xyes])\nAM_CONDITIONAL([CREATE_IMPORT_LIB], [test \"x$create_import_lib\" = xyes])\nAM_CONDITIONAL([OS_DARWIN], [test \"x$backend\" = xdarwin])\nAM_CONDITIONAL([OS_HAIKU], [test \"x$backend\" = xhaiku])\nAM_CONDITIONAL([OS_LINUX], [test \"x$backend\" = xlinux])\nAM_CONDITIONAL([OS_NETBSD], [test \"x$backend\" = xnetbsd])\nAM_CONDITIONAL([OS_NULL], [test \"x$backend\" = xnull])\nAM_CONDITIONAL([OS_OPENBSD], [test \"x$backend\" = xopenbsd])\nAM_CONDITIONAL([OS_SUNOS], [test \"x$backend\" = xsunos])\nAM_CONDITIONAL([OS_WINDOWS], [test \"x$backend\" = xwindows])\nAM_CONDITIONAL([OS_EMSCRIPTEN], [test \"x$backend\" = xemscripten])\nAM_CONDITIONAL([PLATFORM_POSIX], [test \"x$platform\" = xposix])\nAM_CONDITIONAL([PLATFORM_WINDOWS], [test \"x$platform\" = xwindows])\nAM_CONDITIONAL([USE_UDEV], [test \"x$use_udev\" = xyes])\n\ndnl The -Wcast-function-type warning causes a flurry of warnings when compiling\ndnl Windows with GCC 8 or later because of dynamically loaded functions\nif test \"x$backend\" = xwindows; then\n\tsaved_CFLAGS=\"${CFLAGS}\"\n\tCFLAGS=\"-Werror -Wcast-function-type\"\n\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [])],\n\t\t[EXTRA_CFLAGS=\"${EXTRA_CFLAGS} -Wno-cast-function-type\"],\n\t\t[])\n\tCFLAGS=\"${saved_CFLAGS}\"\nfi\n\ndnl Some linkers do not support the '--add-stdcall-alias' option so check for it here\nif test \"x$backend\" = xwindows; then\n\tsaved_CFLAGS=\"${CFLAGS}\"\n\tCFLAGS=\"-Wl,--add-stdcall-alias\"\n\tAC_MSG_CHECKING([if linker supports --add-stdcall-alias])\n\tAC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],\n\t\t[AC_MSG_RESULT([yes])\n\t\t LT_LDFLAGS=\"${LT_LDFLAGS} -Wl,--add-stdcall-alias\"],\n\t\t[AC_MSG_RESULT([no])])\n\tCFLAGS=\"${saved_CFLAGS}\"\nfi\n\nSHARED_CFLAGS=\"-Wall -Wextra -Wshadow -Wunused -Wwrite-strings -Werror=format-security -Werror=implicit-function-declaration -Werror=implicit-int -Werror=init-self -Werror=missing-prototypes -Werror=strict-prototypes -Werror=undef -Werror=uninitialized\"\n\nAM_CPPFLAGS=\"${EXTRA_CPPFLAGS}\"\nAC_SUBST(AM_CPPFLAGS)\n\nAM_CFLAGS=\"-std=${c_dialect}11 ${EXTRA_CFLAGS} ${SHARED_CFLAGS}\"\nAC_SUBST(AM_CFLAGS)\n\nAM_CXXFLAGS=\"-std=${c_dialect}++11 ${EXTRA_CFLAGS} ${SHARED_CFLAGS} -Wmissing-declarations\"\nAC_SUBST(AM_CXXFLAGS)\n\nAC_SUBST(LT_LDFLAGS)\nAC_SUBST(AM_LDFLAGS)\n\nAC_SUBST([EXTRA_LDFLAGS])\n\ndnl set name of html output directory for doxygen\nAC_SUBST(DOXYGEN_HTMLDIR, [api-1.0])\n\nAC_CONFIG_FILES([libusb-1.0.pc])\nAC_CONFIG_FILES([Makefile])\nAC_CONFIG_FILES([libusb/Makefile])\nAC_CONFIG_FILES([examples/Makefile])\nAC_CONFIG_FILES([tests/Makefile])\nAC_CONFIG_FILES([doc/Makefile])\nAC_CONFIG_FILES([doc/doxygen.cfg])\nAC_OUTPUT\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "libusb-1.0.pc.in",
          "type": "blob",
          "size": 0.3046875,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: libusb-1.0\nDescription: C API for USB device access from Linux, Mac OS X, Windows, OpenBSD/NetBSD and Solaris userspace\nVersion: @VERSION@\nLibs: -L${libdir} -lusb-1.0\nLibs.private: @LIBS@\nCflags: -I${includedir}/libusb-1.0\n"
        },
        {
          "name": "libusb",
          "type": "tree",
          "content": null
        },
        {
          "name": "msvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}