{
  "metadata": {
    "timestamp": 1736710315638,
    "page": 109,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fulldecent/system-bus-radio",
      "stars": 6518,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.263671875,
          "content": "# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n\n/main\nmain\ngmain\ncmain\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 William Entriken\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.5224609375,
          "content": "# System Bus Radio\n\nThis program transmits radio on computers / phones without radio transmitting hardware.\n\n## Thank you to our sponsors\n\n<img src=\"https://radiostay.com/images/logo.svg\" width=200>\n\nListen to online radio - <https://radiostay.com/>\n\n## Why?\n\nSome computers are intentionally disconnected from the rest of the world. This includes having their internet, wireless, bluetooth, USB, external file storage and audio capabilities removed. This is called \"air gapping\". Even in such a situation, this program can transmit radio.\n\nPublicly available documents already discuss exfiltration from secured systems using various electromagnetic radiations. This is documented in the TEMPEST guidelines published by the US National Security Agency and the US Department of Defense. This project simply adds to that discussion.\n\n## How to use it\n\n**NEW:** Try it in your browser, click here: <http://fulldecent.github.io/system-bus-radio/>\n\nEnter the implementations folder, select any of them and compile using `make`.\n\n```sh\nmake\n```\n\nRun this using a 2015 model MacBook Air. Then use a Sony STR-K670P radio receiver with the included antenna and tune it to 1580 kHz on AM.\n\nRun it and reference the a tune file or make your own!\n\n```sh\n./main ../../tunes/mary_had_a_little_lamb.tune\n```\n\nYou should hear the \"Mary Had a Little Lamb\" tune playing repeatedly. Other equipment and tuning may work as well. On the equipment above, the author has achieved clear transmission over two meters of open air or one meter through drywall. Different results will be achievable with different equipment.\n\nAre you using an antenna? At the beginning, the author placed the antenna directly on top of the number 4 key and that worked best (on any AM frequency). It was a round antenna. Then once they knew it worked they moved the antenna back. Moving it back reduced the number of frequencies that it worked on, and eventually only that one (1580 kHz) worked. Different hardware will certainly have different frequency response. Here are some results that have been sent in by readers. Please mail <github.com@phor.net> with your results (including makes and models of all equipment involved) or [edit this file directly](https://github.com/fulldecent/system-bus-radio/edit/master/TEST-DATA.tsv) and create a pull request.\n\n**WANTED:** Please post your test results using Raspberry Pi and other embedded systems. This may be particularly good targets because of less shielding/hardening of their hardware.\n\n**NEW:** See our [basic RTL SDR guide] to receive system bus signals using another computer with RTL SDR hardware.\n\n## Technical explanation\n\nThis program runs instructions on the computer that cause electromagnetic radiation. The emissions are of a broad frequency range. To be accepted by the radio, those frequencies must:\n\n* Be emitted by the computer processor and other subsystems\n* Escape the computer shielding\n* Pass through the air or other obstructions\n* Be accepted by the antenna\n* Be selected by the receiver\n\nBy trial and error, the above frequency was found to be ideal for that equipment.\n\nThe actual emissions are caused by the `_mm_stream_si128` instruction that writes through to a memory address. Inspiration for using this instruction was provided in:\n\n> Guri, M., Kachlon, A., Hasson, O., Kedma, G., Mirsky, Y. and Elovici, Y., 2015. GSMem: data exfiltration from air-gapped computers over GSM frequencies. In 24th USENIX Security Symposium (USENIX Security 15) (pp. 849-864).\n>\n> <https://www.usenix.org/node/190937>\n\nPlease note that replacing `_mm_stream_si128` with a simple `x++;` will work too. The author's experience has been that  `_mm_stream_si128` produces a stronger signal. There may be other ideas that work even better, and it would be nice to improve this method to be more portable (not require SSE extensions).\n\nThe program uses square wave modulation, which is depicted below:\n\n```\n|<--------------------TIME-------------------->|\n|                                              |\n|‾|_|‾|_|‾|_____________|‾|_|‾|_|‾|_____________\n|                       |   |   |\n|<------SIGNAL--------->|   |   |\n                            |   |\n                            |<->| CARRIER\n```\n\nNotes on high precision time APIs:\n\n* Get current time\n  * mach_absolute_time() gives time in int64_t of nanoseconds\n    * Converting to nanoseconds <https://developer.apple.com/library/mac/qa/qa1398/_index.html>\n    * Declared <https://opensource.apple.com/source/xnu/xnu-1456.1.26/osfmk/mach/mach_time.h>\n    * Definition <https://opensource.apple.com/source/Libc/Libc-320/i386/mach/mach_absolute_time.c>\n  * clock_get_time() gives a mach_timespec_t time\n    * Called from mach_absolute_time()\n  * mach_timespec_t\n    * Type documentation <https://developer.apple.com/library/mac/documentation/Darwin/Conceptual/KernelProgramming/services/services.html>\n    * Declaration <https://opensource.apple.com/source/xnu/xnu-1456.1.26/osfmk/mach/clock_types.h>\n  * <http://stackoverflow.com/a/21352348/300224>\n  * <https://stackoverflow.com/questions/5167269/clock-gettime-alternative-in-mac-os-x>\n* Sleep\n  * mach_wait_until()\n    * Notes <https://developer.apple.com/library/ios/technotes/tn2169/_index.html>\n  * nanosleep()\n    * Apple doc <https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/nanosleep.2.html>\n    * Definition <https://opensource.apple.com/source/Libc/Libc-320.1.3/gen/nanosleep.c?txt>\n  * clock_sleep_trap()\n    * Used from nanosleep()\n    * Declared <https://opensource.apple.com/source/xnu/xnu-1456.1.26/osfmk/mach/mach_traps.h>\n    * Definition <http://unix.superglobalmegacorp.com/xnu/newsrc/osfmk/kern/clock.c.html>\n    * Uses clock_sleep_internal()\n    * Uses ADD_MACH_TIMESPEC\n  * clock type constants <https://opensource.apple.com/source/xnu/xnu-1456.1.26/osfmk/mach/clock_types.h?txt>\n    * TIME_ABSOLUTE\n    * TIME_RELATIVE\n    * Defines ADD_MACH_TIMESPEC(t1, t2) // t1  += t2\n    * Defines CMP_MACH_TIMESPEC(t1, t2) // t1 <=> t2, also (t1 - t2) in nsec with max of +- 1 sec\n  * msleep() <https://developer.apple.com/library/mac/documentation/Darwin/Conceptual/KernelProgramming/services/services.html>\n    * time/timer.c /  <http://lxr.free-electrons.com/source/kernel/time/timer.c#L1673>\n  * kern/clock.h <https://opensource.apple.com/source/xnu/xnu-1456.1.26/osfmk/kern/clock.h>\n\n## Press coverage\n\n* <https://hardware.slashdot.org/story/16/03/01/1727226/microcasting-color-tv-by-abusing-a-wi-fi-chip>\n* <https://news.softpedia.com/news/emitting-radio-waves-from-a-computer-with-no-radio-transmitting-hardware-501260.shtml>\n* <https://tenwatts.blogspot.com/2018/01/system-bus-radio.html>"
        },
        {
          "name": "RTL-SDR-GUIDE.md",
          "type": "blob",
          "size": 5.32421875,
          "content": "# RTL STR Basic Setup\n\n## Test subject\n\nFor this guide, we are inspecting a **MacBook Pro M1 (13-inch, 2020)** for electromagnetic radiation.\n\nThis subject is tough because:\n\n- Low power (wattage)\n- System is tightly integrated (no user-replaceable RAM)\n- Aluminum casing\n\nIf we are successful with the approaches in this paper, you should get even better results with other kinds of laptops.\n\n## Hardware\n\n*Other setups will work too. But this guide is explored with the following hardware:*\n\n* Computer running macOS (to run SDR)\n* RTL-SDR Blog V3 / [buy from manufacturer](https://www.rtl-sdr.com/buy-rtl-sdr-dvb-t-dongles/) / [data sheet](https://www.rtl-sdr.com/wp-content/uploads/2018/02/RTL-SDR-Blog-V3-Datasheet.pdf)\n* Ham It Up Plus / [buy from manufacturer](https://nooelec.com/store/ham-it-up-plus.html) / [data sheet](https://www.nooelec.com/store/downloads/dl/file/id/99/product/284/ham_it_up_plus_datasheet_revision_2.pdf)\n  * Requires a USB A/B cable and a USB power source (do not use the same device running your SDR)\n* Balun One Nine / [buy from manufacturer](https://www.nooelec.com/store/balun-one-nine-v2.html) / could not find data sheet\n* An AM loop antenna\n* Affiliate link to buy everything / [from Amazon](https://www.amazon.com/ideas/amzn1.account.AHUITP6B2VTROJ7IMNP2LCUA5QDA/18H46X17FDG76?type=explore&_encoding=UTF8&tag=phornetandrel-20&linkCode=ur2&linkId=dedd255a129c5ac7415a9dcb713ae618&camp=1789&creative=9325)\n\nYou may have seen that the RTL-SDR Blog V3 above [already includes support for lower frequencies](https://www.rtl-sdr.com/rtl-sdr-blog-v-3-dongles-user-guide/), obviating the upconverter (Ham It Up Plus). General advice on the scene has been that you want to use an upconverter rather than the built-in bias tee. If I can get better results with the bias tee approach I will update this guide to recommend that simpler and more ecoromical approach.\n\n## Setup\n\nYour equipment is plugged in as:\n\n```\nComputer --M/M-plug-- RTL-SDR --M/M-plug-- Ham It Up Plus --optional-long-wire-- Balun One Nine --spring-terminal-- antenna\n```\n\n![RF test setup](https://user-images.githubusercontent.com/382183/115773678-98d16a80-a37e-11eb-9f4b-4dabb9d401a2.jpg)\n\nNote that the upconverter means you will be tuning your radio to +125 MHz offset versus the frequencies you want.\n\n## Software\n\n**Test subject**\n\nFor quick browsing and playing, I used the [counter and threads](https://github.com/fulldecent/system-bus-radio/tree/master/Using%20counter%20and%20threads) implementation running on the M1 test subject. This allowed me to quickly edit the code and rerun it at different frequencies. (I ran the compiler command by hand as the Makefile did not work on the M1. Not sure if this needs fixing.)\n\n**Radio**\n\nThis was an 2018 MacBook Pro (Intel). [CubicSDR](https://cubicsdr.com) was easy to set up. Also it claimed to let me try the bias tee approach, but I failed to make it work.\n\nAlternately, I tried running [RTL Power](http://kmkeen.com/rtl-power/) to sweep various frequencies. Try it like this with the test subject off:\n\n```sh\ntime rtl_power -f 125M:126M:20K -g 50 -i 1m -1 noise.csv; say done\n```\n\nAnd then run it again with `signal.csv`. And compare those two results.\n\nHere is a quick Swift program to convert from RTL power into something you can use in Excel:\n\n```swift\nimport Foundation\nwhile let line = readLine() {\n    //\tdate, time, Hz low, Hz high, Hz step, samples, dbm, dbm, ...\n    let columns = line.components(separatedBy: \", \")\n\n    let hzLow = Double(columns[2])!\n    let hzStep = Double(columns[4])!\n    var hzCurrent = hzLow\n    for dbm in columns[6...] {\n        print(Int(hzCurrent), dbm)\n        hzCurrent += hzStep\n    }\n}\n```\n\nAnd of course:\n\n```sh\npaste -d, noise-transpose.csv signal-transpose.csv > merged.csv\n```\n\nNow you can plot the signal-to-noise ratio.\n\n## Results\n\nThe antenna placed directly over the bottom left of the keyboard produces the best signal. Start here so you can clearly hear the signal and as your tuning improves, begin backing away the antenna.\n\nI could clearly hear the signal between 63 kHz and 5.5 MHz using bandwidths between 10 kHz and 50 kHz. The best signal was 1.52 MHz at 40 kHz bandwidth. Using the AM demodulator.\n\nWith this approach I achieved audible signals up to only several inches away from the M1 Mac. Not very useful for spying/exfiltration. Possible ways to improve that are below.\n\n## Further research\n\n*These are a little more advanced idea I'd like to try with a mentor. If you'd like to pick up the ball and explain how to improve with these techniques, please feel free to open a new wiki page, and ping @fulldecent in a new issue.*\n\n* It may be possible to improve the signal by adding a low-noise amplifier between the antenna and the upconverter. I'd like to test the signal levels around these compenents and read specs before considering that further.\n* I could not get GNU Radio to connect to the RTL-SDR V3. It could certainly create a better custom receiver for this project:\n  1. Wideband 2.5MHz (or, somehow, twin 5.0MHz) signal input\n  2. A 1,000-band equalizer based on the envelope above (see RTL Power above)\n  3. Demodulate with AM\n  4. Tight bandpass at 440 Hz (for a 440 Hz system bus signal)\n* Better hardware. If you can recommend a better RTL-SDR, antenna, LNA, upconverter that might help, please let me know and I can add to my [project tip jar](https://github.com/fulldecent/system-bus-radio#system-bus-radio)."
        },
        {
          "name": "TEST-DATA.tsv",
          "type": "blob",
          "size": 5.9404296875,
          "content": "Date\tTester\tTransmitter\tReceiver\tSoftware\tFrequency\tResult\tRecording\r\n2016-03-01\tWilliam Entriken\tMacBook Air (13-inch, Early 2015)\tSony STR-K670P, stock antenna\t_mm_stream_si128\t1580 kHz\t2m thru air, 1m thru drywall\thttps://youtu.be/caGPmyMLYUI\r\n2016-03-01\tScott Buchanan\t\"MacBook Pro Retina 15\"\", early 2013\"\tN/A\t_mm_stream_si128\t\t?m audible\thttps://goo.gl/ll3PxH\r\n2016-03-01\tSamuel Steele\tMacBook Air (13-inch, Mid-2013)\tOnkyo HT-R550, JVC Loop antenna\t_mm_stream_si128\t1580 kHz\t\"2\"\", noisy by 6\"\t \r\n2016-03-01\tChris Smolinski\tMBP (??-inch, 2010)\tnetSDR, ??? antenna\t_mm_stream_si128\tEntire AM band\tNo signal found\t \r\n2016-03-01\tChris Smolinski\tiMac (??-inch, 2015)\tnetSDR, ??? antenna\t_mm_stream_si128\tEntire AM band\tNo signal found\t \r\n2016-03-01\tChris Smolinski\tMBP (??-inch, 2010)\tSony 7600G, no antenna\t_mm_stream_si128\t1580 kHz, Long wave\t4\thttps://youtu.be/l8AYHnF8ZrA\r\n2016-03-01\tChris\tHP ENVY 15-j142na (i7 version), Linux\tIcom IC-R10, ??? antenna\tPR #19\t\t?m audible\thttps://youtu.be/TXkh1ANSFGw\r\n2016-03-01\tJoão Ventura\tMacBook Pro (15-inch, Late 2013)\tTech Fuzzion, tele antenna\t_mm_stream_si128\t1600 kHz\t4\thttps://youtu.be/oXAeGZaka7o\r\n2016-03-01\tElvis Pfutzenreuter\tMacBook (12-inch, Early 2015)\tSony ICF-SW11, internal antenna\t_mm_stream_si128\t1580 kHz\t2m, recommends turning off mains & light\t \r\n2016-03-01\tsomini\tAsus X201E, Linux\tClock radio, internal antenna\t_mm_stream_si128\t1580 kHz\t4\thttps://youtu.be/Nroc2BtO6NU\r\n2016-03-01\tjanka102\tMacBook Pro (15-inch, Early 2011)\tiHome iP90, included AM antenna\t_mm_stream_si128\t1580 kHz\t8\thttps://youtu.be/qN9D3bxkbXk\r\n2016-03-01\tRyan Faerman\tMacBook Air (11-inch, 2014)\tGrundid Traveler 2 Digital, internal antenna\t_mm_stream_si128\t1600 kHz\t\"6\"\"-8\"\t \r\n2016-03-02\tTomi Salmi\tMac mini (Late 2014)\tSharp stereo cassette recorder WQ-T282H(GR), tele antenna\t_mm_stream_si128\t1580 kHz\t\"4\"\" noisy\"\t \r\n2016-03-02\tFe Yi\tMacBook Pro (13-inch, Early 2015)\tTECSUN PL-310ET, internal antenna\t_mm_stream_si128\t1580 kHz\t~10cm above keyboard\t \r\n2016-03-02\tRyou Ezoe\tAcer ASPIRE 5750, GNU/Linux\tTecsun PL-310 fm/am Stereo World Band Dsp Receiver, internal antenna\tPR #12\t1440 kHz\t30cm\t \r\n2016-03-02\tYuval Adam\tMacBook Pro (13-inch, Mid-2010)\tHackRF, 125Mhz upconverter, random wire antenna\t_mm_stream_si128\t1580 kHz\tNo discernible signal\t \r\n2016-03-02\tKyohei Takahashi\tMacBook Pro (Retina, 13-inch, Late 2012)\tKOIZUMI SAD-7701-R AM mode\t_mm_stream_si128\t500 kHz – 1400 kHz\t30cm\thttps://youtu.be/RJlOnoK5WpQ\r\n2016-03-02\tDavid Haberthür\t\"MacBook Pro Core i7 2.4 15\"\" Late 2011\"\tSony CFD-S38L\t_mm_stream_si128\t1584 kHz\t6cm\t \r\n2016-03-02\tJeremy Zerfas\tMacBook Pro (15-inch, Mid 2012) 2.3\tSony CFS-201 boom-box, internal antenna\t_mm_stream_si128\tVarious AM channels\t6'\t \r\n2016-03-02\tJeremy Zerfas\tMacBook Pro (15-inch, Early 2008) 2.4\tYamaha RX-V675, Loop antenna\tnanosleep mod\tVarious AM channels\t7', definitely farther than Mid 2012 model w/ same rcvr\t \r\n2016-03-02\tJeremy Zerfas\tAthlon II X2 240, Gigabyte GA-MA785GM-US2H, Antec FusionRemote 350\tYamaha RX-V675, Loop antenna\tPR #12\tVarious AM channels\t\"6\"\" from the processor\"\t \r\n2016-03-02\tNipun Gunawardena\tMacBook Pro Retina (13-inch, Late 2013)\tOnkyo CR305TX, Loop antenna\t_mm_stream_si128\t1610 kHz\t85cm\tOther frequencies also usable when very close\r\n2016-03-02\tMasahiko Uota\tMacBook Pro 2.8GHz i7 15-inch Mid 2014\tSony ICF-T46, no antenna\t_mm_stream_si128\t1300 kHz, 900 kHz\t6 inches\thttps://twitter.com/muota_here/status/704924596802342913\r\n2016-03-02\tYuji Fujita\tThinkpad X200\tSony ICF-SW100\tPR #12\t1363 kHz\t0.5m\thttps://youtu.be/li9hHM4NkWA\r\n2017-07-25\tErnesto Sanchez\tLenovo Thinkpad X201\tINDIN BC-R28\tmaster\t1600 kHz\t0.3m\tNone\r\n2016-03-02\tRedgar Nord\tHP ProBook 4340s, Linux\tSharp radio, whip antenna\tPR #12\t~1590 kHz\t\"6-7\"\", very orientation dependent\"\t \r\n2016-03-02\tRedgar Nord\tRaspberryPi, Linux\tSharp radio, whip antenna\tPR #12\t~1590 kHz\tNo signal at all\t \r\n2016-03-02\tErin Pinheiro\tAcer Aspire E1-572-6 BR691\tGeneric AM radio, retractable antenna\tPR #12\t~1590 kHz\t10-20cm Slightly noisy\thttps://dl.dropboxusercontent.com/u/9435923/code/audio_2016-03-02_18-24-30.ogg\r\n2016-03-02\tTrevor Summerfield\tMacBook Pro (Retina, 15-inch, Mid 2015)\tGrundig G8 Traveler II Digital, Internal AM Antenna\t_mm_stream_si128\t1580 kHz\t8” above keyboard 50dbu signal, 0db SNR, audible\t \r\n2016-03-05\tAlessio Gerace\tMacBookPro Retina (13-inch, 2014)\tMajestic TT34CD/TP/USB\t_mm_stream_si128\t~1610 kHz\t10/30 cm\t \r\n2016-03-05\tQuan Yang\tMacBookPro Retina (Late 2013)\tAR1741 Multiband Receiver\tJavascript\t1560 khz\t0.5m, more frequencies usable if charging\thttps://youtu.be/6tM4EKUYogI\r\n2016-03-07\tMehdi Asgari\tMacBook Pro Retina (13-inch, 2015)\tTecsun PL680, internal whip antenna\t_mm_stream_si128\t1610 kHz\t90cm\t \r\n2016-03-10\tGabriel Tremblay\tCooler Master HAF 912, ASUS M5A97, AMD FX-8120, Corsair Vengeance 32GB\tNot known\tPR #12\t~1550 kHz\t~20-30cm\t \r\n2016-09-05\tChris Rochford\tMacbook Pro Retina (13-inch, 2015)\tYamaha HTR-5730, loop antenna\tJavascript\t1580 kHz\t6 inches\t \r\n2016-10-13\tJohn Sampson\tMacBook Pro Retina (15-inch, Mid 2014)\tSony ICFCS15IPN (stock antenna)\t_mm_stream_si128\t~1560 kHz\t5 inches\t \r\n2018-01-24\tPhilipp Hanslovsky\tLenovo X1 Carbon (14-inch, 2014)\tYamaha RX-V675, Loop antenna\t_mm_stream_si128 @ 03c3689\t1590 kHz, 1600kHz\t5 inches\t \r\n2018-01-24\tFabian Briese\tDell Inspiron 17 7000 (7737)\tTevion Compact Disk Player\tWebbrowser (Chrome)\t1560 kHz\t125-150cm\t \r\n2018-01-30\tTroy Giorshev\tMacBook Air (13-inch, Early 2014)\tEton Mini 300\t_mm_stream_si128\t1535 kHz\t30cm\t \r\n2020-12-17\tSteven Shim\tMacBook Pro M1 (13-inch, 2020)\tSony AM/FM Clock Radio\t_mm_stream_si128\t1560kHz\t2-3 inches from bottom right of trackpad\t\r\n2022-02-01\tIlya Semichastnov\tMacBook Pro (16-inch, 2019)\tYaesu FT-817\t_mm_stream_si128\t1530kHz\twire antenna 50cm below the laptop\t\r\n2024-01-03\tChristian Mürtz\tMacBook Pro Late 2016\tNORDMENDE - Compact Recorder 5043 K\t_mm_stream_si128\t1550 kHz\t~30cm\thttps://www.youtube.com/watch?v=jUKchOM_TjM\r\n2024-07-09  Noah King MacBook Late 2007  1958 Orion 10 Transistor Radio  _mm_stream_si128  ~1690 kHz No antenna 10cm-1m  https://www.youtube.com/watch?v=YCXruZPXfss  \r\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "implementations",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tunes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}