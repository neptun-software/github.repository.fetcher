{
  "metadata": {
    "timestamp": 1736710388809,
    "page": 212,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjIxMg==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "uber/h3",
      "stars": 5004,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0888671875,
          "content": "BasedOnStyle: Google\nIndentWidth: 4\n\nDerivePointerAlignment: false\nPointerAlignment: Right\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.1083984375,
          "content": "---\nChecks:          'clang-diagnostic-*,clang-analyzer-*'\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\nFormatStyle:     none\nUser:            isaachier\nCheckOptions:    \n  - key:             google-readability-braces-around-statements.ShortStatementLines\n    value:           '1'\n  - key:             google-readability-function-size.StatementThreshold\n    value:           '800'\n  - key:             google-readability-namespace-comments.ShortNamespaceLines\n    value:           '10'\n  - key:             google-readability-namespace-comments.SpacesBeforeComments\n    value:           '2'\n  - key:             modernize-loop-convert.MaxCopySize\n    value:           '16'\n  - key:             modernize-loop-convert.MinConfidence\n    value:           reasonable\n  - key:             modernize-loop-convert.NamingStyle\n    value:           CamelCase\n  - key:             modernize-pass-by-value.IncludeStyle\n    value:           llvm\n  - key:             modernize-replace-auto-ptr.IncludeStyle\n    value:           llvm\n  - key:             modernize-use-nullptr.NullMacros\n    value:           'NULL'\n...\n\n"
        },
        {
          "name": ".cmake-format.yaml",
          "type": "blob",
          "size": 0.0234375,
          "content": "format:\n    tab_size: 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3916015625,
          "content": "# vi swap files\n.*.swp\n\n# make depends files\n*.depends\n\n# built binaries\n/bin/\n/examples/bin/\n/lib/\n# Travis CI build directory\n/build/\n/build*/\n# Local build directories\n/Debug/\n/Release/\n\n# random temp files\n.DS_Store\n*.bak\n\n### example C.gitignore ###\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n\n# Docs builds\ndev-docs/_build/\nenv_docs/\nnode_modules/\nwebsite/dist/\nwebsite/package-lock.json\nwebsite/.cache/\nwebsite/public/\n# Generated Doxyfile\ndev-docs/Doxyfile\n\n# CMake generated\nCMakeFiles\nCMakeCache.txt\nCPackConfig.cmake\nCPackSourceConfig.cmake\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncmake-build-debug/\ngenerated/\nh3Config.cmake\nh3ConfigVersion.cmake\nCMakeDoxyfile.in\nCMakeDoxygenDefaults.cmake\nDartConfiguration.tcl\ncompile_commands.json\nRunCoverage.cmake\n# Generated coverage runner\nscripts/coverage.sh\n\n\n# CTest / coverage\nCTestTestfile.cmake\nTesting/\ncoverage/\ncoverage.info\ncoverage.cleaned.info\n\n# IDEs (CodeBlocks/CLion/VSCode)\n*.cbp\n.idea\n.vscode\n.ipynb_checkpoints\n\n# Generated by `make binding-functions`\nbinding-functions\n\n# These KML files are generated by `make kml`\nKML/res*cells.kml\nKML/res*centers.kml\n\n# Generated files\nsrc/h3lib/include/h3api.h\nsrc/apps/benchmarks/benchmarkCountries.c\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.087890625,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe public API of this library consists of the functions declared in file\n[h3api.h.in](./src/h3lib/include/h3api.h.in).\n\n## [Unreleased]\n\n### Changed\n- Moved `ContainmentMode` enum for `polygonToCellsExperimental` to `h3api.h`. (#958)\n\n## [4.2.0] - 2024-12-04\n### Added\n- Added experimental new algorithm for `polygonToCells`, called `polygonToCellsExperimental`, that supports more containment flags and is more memory-efficient (#785, #800, #947)\n- `h3` binary for shell scripts ready for use (#818, #826, #846, #923, #924, #931, #933)\n\n### Fixed\n- Fixed compacting all or many resolution 1 cells (#919)\n\n### Changed\n- `compactCells` internally uses int64 for array indexing. (#920)\n- Reorganize tests into public / internal. (#762)\n- Performance enhancement for aarch64, may improve other platforms (#790, #792, #852, #905, #913)\n- `clang-format` upgraded to version 14. (#834)\n- Fixed tests that incorrectly did not test resolution 15. (#820)\n- Use `CMAKE_INSTALL_LIBDIR` when choosing where to install library files. (#819)\n\n## [4.1.0] - 2023-01-18\n### Added\n- Functions for `cellToChildPos` and `childPosToCell` (#719)\n\n### Fixed\n- Fixed possible signed integer overflow in `h3NeighborRotations` (#707)\n- Fixed possible signed integer overflow in `localIjToCell` (#706, #735)\n\n### Changed\n- `assert` on defensive code blocks that are not already covered. (#720)\n- `clang-format` upgraded to version 11. (#734)\n\n## [4.0.1] - 2022-09-15\n### Fixed\n- Changing an internal `float` to `double` improves the precision of geographic coordinate output (#652)\n- Fixed compacting all children of a resolution 0 cell (#679)\n- Fixed possible signed integer overflow in `maxGridDiskSize` (#686)\n- Fixed possible use of uninitialized values in `cellToVertex` (#683, #690)\n- Fixed possible out of bounds read in `localIjToCell` (#684)\n- Fixed possible memory leak in `compactCells` (#685)\n- Fixed possible out of bounds read in `areNeighborCells` (#677)\n- Fixed possible memory leak in `cellsToLinkedMultiPolygon` (#673)\n\n### Changed\n- Build script does not use toolchain file (#641)\n- Removed a duplicated include preprocessor directive (#682)\n- Improvements to the fuzzer suite and their automatic runs in CI (#671, #674, #687)\n- Increased test coverage (#642)\n- Added a fuzzer targetting internal `algos.c` functions (#675)\n\n## [4.0.0] - 2022-08-23\n### Breaking changes\n- Rename functions according to the terminology RFC (#622, #586, #571, #403, #466, #495, #466)\n- Functions that can experience errors now have an `H3Error` return value. (#617, #586, #581, #551, #550, #509, #505, #507, #508, #503, #478, #468, #436, #359)\n- Cell count parameters use `int64_t` instead of `int`.\n- `polygonToCells` (previously `polyfill`) accepts a flags argument for future expansion. (#570)\n- `cellToLocalIj` and `localIjToCell` accept a mode argument for future expansion. (#586)\n- `exactEdgeLength` functions renamed to `edgeLength` (#639)\n\n### Fixed\n- Fix polyfill bug when vertex latitude exactly matches cell center. (#603)\n- A number of issues detected via unit tests and fuzzers were fixed. (#568, #562, #558, #559, #560, #430)\n- `polygonToCells` returns an error if Infinity is passed in. (#636)\n\n### Changed\n- The file `CMakeTests.cmake` is no longer included if `ENABLE_TESTING` is off. (#609)\n\n### Added\n- Vertex mode and associated functions: (#422, #420, #417)\n    - `cellToVertex(cell, vertexNum)`\n    - `cellToVertexes(cell, out)`\n    - `vertexToLatLng(vertex, out)`\n    - `isValidVertex(vertex)`\n- `h3` CLI application. (#556, #497)\n\n### Other changes\n- Generally use `lng` instead of `lon`\n- Closed-form implementation of `numHexagons`\n- A number of fuzzer harnesses are now included in the H3 core library. (#557, #553, #545, #433)\n- Additional benchmarks are added and benchmarks are regularly run in CI. (#524, #518)\n\n## [4.0.0-rc5] - 2022-08-16\n### Breaking changes\n- `exactEdgeLength` functions renamed to `edgeLength` (#639)\n\n### Fixed\n- `polygonToCells` returns an error if Infinity is passed in. (#636)\n\n## [4.0.0-rc4] - 2022-07-25\n### Breaking changes\n- `distance*` functions (`distanceKm`, etc) renamed to `greatCircleDistance*`. (#622)\n- Error code `E_MEMORY` renamed to `E_MEMORY_ALLOC`. (#617)\n\n## [4.0.0-rc3] - 2022-06-03\n### Fixed\n- Fix polyfill bug when vertex latitude exactly matches cell center. (#603)\n\n### Changed\n- The file `CMakeTests.cmake` is no longer included if `ENABLE_TESTING` is off. (#609)\n\n## [4.0.0-rc2] - 2022-03-16\n### Breaking changes\n- `experimentalH3ToLocalIj` and `experimentalLocalIjToH3` renamed to `cellToLocalIj` and `localIjToCell` respectively. (#586)\n- `cellToLocalIj` and `localIjToCell` accept a mode argument for future expansion. (#586)\n- `cellToCenterChild` (previously `h3ToCenterChild`) returns an error code. (#581)\n\n### Added\n- `E_OPTION_INVALID` error code added. (#586)\n\n## [4.0.0-rc1] - 2022-02-07\n### Breaking changes\n- Rename functions according to the terminology RFC (#571, #403, #466, #495, #466)\n- Functions that can experience errors now have an `H3Error` return value. (#551, #550, #509, #505, #507, #508, #503, #478, #468, #436, #359)\n- Cell count parameters use `int64_t` instead of `int`.\n- `polygonToCells` (previously `polyfill`) accepts a flags argument for future expansion. (#570)\n\n### Added\n- Vertex mode and associated functions: (#422, #420, #417)\n    - `cellToVertex(cell, vertexNum)`\n    - `cellToVertexes(cell, out)`\n    - `vertexToLatLng(vertex, out)`\n    - `isValidVertex(vertex)` \n- `h3` CLI application. (#556, #497)\n\n### Fixed\n- A number of issues detected via unit tests and fuzzers were fixed. (#568, #562, #558, #559, #560, #430)\n\n### Other changes\n- Generally use `lng` instead of `lon`\n- Closed-form implementation of `numHexagons`\n- A number of fuzzer harnesses are now included in the H3 core library. (#557, #553, #545, #433)\n- Additional benchmarks are added and benchmarks are regularly run in CI. (#524, #518)\n\n## [3.7.2] - 2021-07-15\n### Fixed\n- `gridDisk` of invalid indexes should not crash. (#498)\n\n## [3.7.1] - 2020-10-05\n### Fixed\n- Finding invalid edge boundaries should not crash. (#399)\n- Build fixes for FreeBSD. (#397)\n\n## [3.7.0] - 2020-09-28\n### Added\n- Area and haversine distance functions (#377):\n    - `cellAreaRads2`\n    - `cellAreaKm2`\n    - `cellAreaM2`\n    - `pointDistRads`\n    - `pointDistKm`\n    - `pointDistM`\n    - `exactEdgeLengthRads`\n    - `exactEdgeLengthKm`\n    - `exactEdgeLengthM`\n- Refactor `getH3UnidirectionalEdgeBoundary` for accuracy at small resolutions. (#391)\n    - Speeds up `getH3UnidirectionalEdgeBoundary` by about 3x.\n    - Implement core logic for future vertex mode.\n### Fixed\n- Fixed building the library with custom memory allocation functions on Mac OSX. (#362)\n- The installed H3 CMake target should have include directories specified. (#381)\n### Changed\n- Tests now use `bash` on Windows. (#381)\n\n## [3.6.4] - 2020-06-19\n### Added\n- `H3_MEMORY_PREFIX` CMake option for replacing the memory management functions used in H3. (#317)\n- Support for building Debian packages of H3. (#352)\n### Fixed\n- Removed duplicate include statements. (#333)\n- Fixed macro `H3_DIGIT_MASK_NEGATIVE`. (#329)\n## Changed\n- Again implement new `polyfill` algorithm. (#313)\n\n## [3.6.3] - 2020-01-21\n### Fixed\n- `compact` detects and fails on cases with duplicated input indexes. (#299)\n### Changed\n- `h3IsValid` returns false for indexes that have non-zero reserved bits. (#300)\n- `h3IsValid` and `h3UnidirectionalEdgeIsValid` return false for indexes with the high bit set. (#300)\n\n## [3.6.2] - 2019-12-9\n- Revert new `polyfill` algorithm until reported issues are fixed. (#293)\n\n## [3.6.1] - 2019-11-11\n### Fixed\n- `compact` handles zero length input correctly. (#278)\n- `bboxHexRadius` scaling factor adjusted to guarantee containment for `polyfill`. (#279)\n- `polyfill` new algorithm for up to 3x perf boost. (#282)\n- Fix CMake targets for KML generation. (#285)\n\n## [3.6.0] - 2019-08-12\n### Added\n- `h3ToCenterChild` function to find center child at given resolution (#267)\n- `getPentagonIndexes` (and `pentagonIndexCount`) function to find pentagons at given resolution (#267)\n### Fixed\n- Fix bounds check for local IJ coordinates (#271)\n\n## [3.5.0] - 2019-07-22\n### Added\n- CMake options for excluding filter applications or benchmarks from the build. (#247)\n- `h3GetFaces` function to find icosahedron faces for an index, and helper function `maxFaceCount` (#253)\n### Changed\n- Argument parsing for all filter applications is more flexible. (#238)\n### Fixed\n- Fix printing program name in `h3ToHier` error messages. (#254)\n\n## [3.4.4] - 2019-05-30\n### Changed\n- Local coordinate spaces cannot cross more than one icosahedron edge. (#234)\n- All dynamic internal memory allocations happen on the heap instead of the stack. (#235)\n- Argument parsing for `h3ToGeo`, `geoToH3`, and `h3ToGeoBoundary` is more flexible. (#227)\n\n## [3.4.3] - 2019-05-02\n### Added\n- `localIjToH3` filter application (#222)\n- An option to print distances in the `kRing` filter application (#222)\n### Changed\n- Arguments parsing for `kRing` filter application is more flexible. (#224)\n### Fixed\n- `benchmarkPolyfill` allocates its memory on the heap (#198)\n- Fixed constraints of vertex longitudes (#213)\n- Zero only input to `uncompact` does not produce an error (#223)\n\n## [3.4.2] - 2019-02-21\n### Changed\n- `binding-functions` build target generates an ASCII file on Windows (#193)\n\n## [3.4.1] - 2019-02-15\n### Fixed\n- `binding-functions` build target fixed when running the build out of source (#188)\n\n## [3.4.0] - 2019-01-23\n### Added\n- `getRes0Indexes` function for getting all base cells, and helper function `res0IndexCount` (#174)\n- Include defined constants for current library version (#173)\n\n## [3.3.0] - 2018-12-25\n### Added\n- `h3Line` and `h3LineSize` functions for getting the line of indexes between some start and end (inclusive) (#165)\n### Changed\n- Indexes in deleted pentagon subsequences are not considered valid.\n\n## [3.2.0] - 2018-10-04\n### Added\n- `experimentalH3ToLocalIj` function for getting local coordinates for an index. (#102)\n- `experimentalLocalIjToH3` function for getting an index from local coordinates. (#102)\n- Benchmarks for the kRing method for k's of size 10, 20, 30, and 40. (#142, #144)\n### Changed\n- Internal `h3ToIjk` function renamed to `h3ToLocalIjk`. (#102)\n- `h3ToIjk` filter application replaced with `h3ToLocalIj`. (#102)\n### Fixed\n- Added `#include <stdio.h>` to `benchmark.h` (#142)\n\n## [3.1.1] - 2018-08-29\n### Fixed\n- Fixed bounding box bug for polygons crossing the antimeridian (#130)\n- Normalize output of h3SetToMultiPolygon to align with the GeoJSON spec, ensuring that each polygon has only one outer loop, followed by holes (#131)\n### Changed\n- Longitude outputs are now guaranteed to be in the range [-Pi, Pi]. (#93)\n- Implemented closed form formula for maxKringSize. Source: https://oeis.org/A003215 (#138)\n- Improved test and benchmark harnesses (#126, #128)\n\n## [3.1.0] - 2018-08-03\n### Added\n- `h3Distance` function for determining the grid distance between H3 indexes (#83)\n- Internal `h3ToIjk` function for getting IJK+ coordinates from an index (#83)\n- Internal `ijkDistance` function for determining the grid distance between IJK+ coordinates (#83)\n- `h3ToIjk` filter application for experimenting with `h3ToIjk` (#83)\n### Fixed\n- Don't require a C++ compiler (#107)\n### Changed\n- Most dynamic internal memory allocations happen on the heap instead of the stack (#100)\n\n## [3.0.8] - 2018-07-18\n### Added\n- Added Direction enum, replacing int and defined constants (#77)\n### Fixed\n- Ensured unused memory is cleared for pentagon children. (#84)\n- Fixed compiler warnings in `h3ToGeoHier` and `h3ToGeoBoundaryHier`. (#90)\n- Fixed a segfault in `h3SetToLinkedGeo` (#94)\n### Changed\n- Warnings are not errors by default. (#90)\n\n## [3.0.7] - 2018-06-08\n### Added\n- Generator for the faceCenterPoint table (#67)\n- Generator for number of indexes per resolution (#69)\n- Added CMake `WARNINGS_AS_ERRORS` option, default on, for Clang and GCC (#70)\n- Added CMake `TEST_WRAPPER` setting when `WRAP_VALGRIND` is on (#66)\n### Changed\n- Moved Vec3d structure to `vec3d.h` (#67)\n- Added input validation when getting the origin or destination of an edge (#74)\n\n## [3.0.6] - 2018-06-01\n### Changed\n- Changed signature of internal function h3NeighborRotations.\n- Do not require support for `hexRange`, `hexRanges`, or `hexRangeDistances` in the bindings. These functions may be deprecated in the public API in future releases; consumers should use `kRing` and `kRingDistances` instead.\n- Performance improvement in core indexing logic for `geoToH3` (thanks @wewei!)\n\n## [3.0.5] - 2018-04-27\n### Fixed\n- Fixed duplicate vertex in h3ToGeoBoundary for certain class III hexagons (#46)\n### Added\n- Release guide\n\n## [3.0.4] - 2018-04-16\n### Added\n- Assertions when allocating memory on the heap.\n### Changed\n- Most internal memory allocations happen on the stack instead of the heap.\n\n## [3.0.3] - 2018-03-19\n### Added\n- CMake config installation to ease use of h3 from CMake projects.\n- Add CMake toolchain file to set build options upfront.\n- Add CMake `C_CLANG_TIDY` property to integrate clang-tidy checks during build.\n- YouCompleteMe completion support.\n### Changed\n- Improved resilience to out of range inputs.\n- Minimum CMake version to 3.1.\n- Set `CMAKE_C_STANDARD` to `11` instead of using compiler flag `-std=c1x`.\n- Use `CMAKE_POSITION_INDEPENDENT_CODE` instead of using compiler flag `-fPIC`.\n- Rename library target from `h3.1` to `h3` with `SONAME` property of 1.\n### Removed\n- CMake `H3_COMPILER` option in favor of built-in `CMAKE_C_COMPILER`.\n- CMake `BUILD_STATIC` option in favor of built-in `BUILD_SHARED_LIBS`.\n- CMake `ENABLE_TESTS` option in favor of built-in `BUILD_TESTING`.\n- File globbing in CMake in favor of listing source files.\n\n## [3.0.2] - 2018-01-24\n### Removed\n- Removed the `H3IndexFat` internal structure.\n### Changed\n- Simplified build process on Windows.\n### Fixed\n- Fixed an issue where tests would fail on ARM systems.\n\n## [3.0.1] - 2018-01-18\n### Added\n- Added a `make install` target.\n### Changed\n- Improved compatability with building on Windows.\n- Fixed various cases where the test suite could crash or not compile.\n\n## [3.0.0] - 2018-01-08\n### Added\n- First public release.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 29.9677734375,
          "content": "# Copyright 2017-2022 Uber Technologies, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n# License for the specific language governing permissions and limitations under\n# the License.\n\ncmake_minimum_required(VERSION 3.20) # Due to dependency on CMP0115\n\n# Do not try to append extensions to source files\ncmake_policy(SET CMP0115 NEW)\n\nfile(READ VERSION H3_VERSION LIMIT_COUNT 1)\n# Clean any newlines\nstring(REPLACE \"\\n\" \"\" H3_VERSION \"${H3_VERSION}\")\n# Remove any trailing qualifier\nstring(REGEX REPLACE \"-.*$\" \"\" H3_VERSION \"${H3_VERSION}\")\n\nproject(\n    h3\n    LANGUAGES C\n    VERSION ${H3_VERSION})\n\nset(H3_PREFIX\n    \"\"\n    CACHE STRING \"Prefix for exported symbols\")\nset(H3_ALLOC_PREFIX\n    \"\"\n    CACHE STRING \"Prefix for allocation functions\")\n\n# Needed due to CMP0042\nset(CMAKE_MACOSX_RPATH 1)\n# YCM needs compilation database\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\n\n# Some misc apps do not work with shared libraries on Windows because they\n# require access to internal H3 functions. Build these using either static\n# libraries or an option to expose all function symbols.\nif(NOT (WIN32 AND BUILD_SHARED_LIBS))\n    set(ENABLE_REQUIRES_ALL_SYMBOLS ON)\nelse()\n    set(ENABLE_REQUIRES_ALL_SYMBOLS OFF)\nendif()\n\noption(ENABLE_COVERAGE \"Enable compiling tests with coverage.\" OFF)\noption(BUILD_BENCHMARKS \"Build benchmarking applications.\" ON)\noption(ENABLE_COUNTRY_BENCHMARKS\n       \"Build benchmarking applications with Natural Earth geometries.\" OFF)\noption(BUILD_FUZZERS \"Build fuzzer applications (for use with afl).\" ON)\noption(BUILD_FILTERS \"Build filter applications.\" ON)\noption(BUILD_GENERATORS \"Build code generation applications.\" ON)\n# If ON, libfuzzer settings are used to build the fuzzer harnesses. If OFF, a\n# frontend for afl++ is provided instead.\noption(ENABLE_LIBFUZZER \"Build fuzzers with libFuzzer support.\" OFF)\n\n# These options exist for integration with OSS-Fuzz, so that the fuzzer options\n# can be passed through only to the fuzzer executables but not the H3 library,\n# since passing those options to the library too may result in too many\n# implementations of main in the fuzzer executables.\noption(H3_FUZZER_NO_MAIN \"Build fuzzers with no main.\" OFF)\nmark_as_advanced(H3_FUZZER_NO_MAIN)\nset(H3_FUZZER_EXTRA_OPTIONS\n    \"\"\n    CACHE STRING \"Extra compilation options for fuzzers particularly.\")\nmark_as_advanced(H3_FUZZER_EXTRA_OPTIONS)\n\nif(WIN32)\n    # Use bash (usually from Git for Windows) for piping results\n    set(SHELL bash -c)\n\n    set(EXECUTABLE_OUTPUT_PATH bin)\n    set(LIBRARY_OUTPUT_PATH bin)\nelse()\n    set(SHELL sh -c)\n\n    set(EXECUTABLE_OUTPUT_PATH bin)\n    set(LIBRARY_OUTPUT_PATH lib)\nendif()\n\nstring(REPLACE \".\" \";\" H3_VERSION_LIST \"${H3_VERSION}\")\nlist(GET H3_VERSION_LIST 0 H3_VERSION_MAJOR)\nlist(GET H3_VERSION_LIST 1 H3_VERSION_MINOR)\nlist(GET H3_VERSION_LIST 2 H3_VERSION_PATCH)\nset(H3_SOVERSION 1)\n\n# Detect if someone else is including the package\nif(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)\n    set(H3_IS_ROOT_PROJECT ON)\nendif()\n\nset(H3_COMPILE_FLAGS \"\")\nset(H3_LINK_FLAGS \"\")\noption(ENABLE_WARNINGS \"Enables compiler warnings\" ON)\nif(ENABLE_WARNINGS)\n    if(WIN32)\n        list(APPEND H3_COMPILE_FLAGS /W2)\n    else()\n        list(APPEND H3_COMPILE_FLAGS -Wall)\n    endif()\nendif()\n\nif(NOT WIN32)\n    # Compiler options are set only on non-Windows, since these options are not\n    # correct for MSVC.\n    list(\n        APPEND\n        H3_COMPILE_FLAGS\n        $<$<CONFIG:Debug>:-gdwarf-2\n        -g3\n        -O0\n        -fno-inline\n        -fno-eliminate-unused-debug-types>)\n\n    if(ENABLE_COVERAGE)\n        list(APPEND H3_COMPILE_FLAGS $<$<CONFIG:Debug>:--coverage>)\n        # --coverage is not passed to the linker, so this option is needed to\n        # fully enable coverage.\n        list(APPEND H3_LINK_FLAGS $<$<CONFIG:Debug>:--coverage>)\n    endif()\n    if(ENABLE_LIBFUZZER)\n        list(APPEND H3_COMPILE_FLAGS -fsanitize=fuzzer,address,undefined)\n        list(APPEND H3_LINK_FLAGS -fsanitize=fuzzer,address,undefined)\n    endif()\nendif()\n\noption(WARNINGS_AS_ERRORS \"Warnings are treated as errors\" OFF)\nif(WARNINGS_AS_ERRORS)\n    if(WIN32)\n        list(APPEND H3_COMPILE_FLAGS /WX)\n    else()\n        list(APPEND H3_COMPILE_FLAGS -Werror)\n    endif()\nendif()\n\ninclude(CMakeDependentOption)\ninclude(CheckIncludeFile)\nif(H3_IS_ROOT_PROJECT)\n    include(CTest)\nendif()\n\nset(LIB_SOURCE_FILES\n    src/h3lib/include/h3Assert.h\n    src/h3lib/include/alloc.h\n    src/h3lib/include/bbox.h\n    src/h3lib/include/polygon.h\n    src/h3lib/include/polygonAlgos.h\n    src/h3lib/include/polyfill.h\n    src/h3lib/include/h3Index.h\n    src/h3lib/include/directedEdge.h\n    src/h3lib/include/latLng.h\n    src/h3lib/include/vec2d.h\n    src/h3lib/include/vec3d.h\n    src/h3lib/include/linkedGeo.h\n    src/h3lib/include/localij.h\n    src/h3lib/include/baseCells.h\n    src/h3lib/include/faceijk.h\n    src/h3lib/include/vertex.h\n    src/h3lib/include/vertexGraph.h\n    src/h3lib/include/mathExtensions.h\n    src/h3lib/include/iterators.h\n    src/h3lib/include/constants.h\n    src/h3lib/include/coordijk.h\n    src/h3lib/include/algos.h\n    src/h3lib/lib/h3Assert.c\n    src/h3lib/lib/algos.c\n    src/h3lib/lib/coordijk.c\n    src/h3lib/lib/bbox.c\n    src/h3lib/lib/polygon.c\n    src/h3lib/lib/polyfill.c\n    src/h3lib/lib/h3Index.c\n    src/h3lib/lib/vec2d.c\n    src/h3lib/lib/vec3d.c\n    src/h3lib/lib/vertex.c\n    src/h3lib/lib/linkedGeo.c\n    src/h3lib/lib/localij.c\n    src/h3lib/lib/latLng.c\n    src/h3lib/lib/directedEdge.c\n    src/h3lib/lib/mathExtensions.c\n    src/h3lib/lib/iterators.c\n    src/h3lib/lib/vertexGraph.c\n    src/h3lib/lib/faceijk.c\n    src/h3lib/lib/baseCells.c)\nset(APP_SOURCE_FILES\n    src/apps/applib/include/kml.h\n    src/apps/applib/include/benchmark.h\n    src/apps/applib/include/utility.h\n    src/apps/applib/include/args.h\n    src/apps/applib/include/aflHarness.h\n    src/apps/applib/lib/kml.c\n    src/apps/applib/lib/utility.c\n    src/apps/applib/lib/args.c)\nset(TEST_APP_SOURCE_FILES src/apps/applib/include/test.h\n                          src/apps/applib/lib/test.c)\nset(EXAMPLE_SOURCE_FILES\n    examples/index.c examples/distance.c examples/neighbors.c\n    examples/compactCells.c examples/edge.c)\nset(H3_BIN_SOURCE_FILES src/apps/filters/h3.c)\nset(OTHER_SOURCE_FILES\n    src/apps/filters/cellToLatLng.c\n    src/apps/filters/cellToLocalIj.c\n    src/apps/filters/localIjToCell.c\n    src/apps/filters/h3ToComponents.c\n    src/apps/filters/latLngToCell.c\n    src/apps/filters/cellToBoundary.c\n    src/apps/filters/gridDisk.c\n    src/apps/filters/gridDiskUnsafe.c\n    src/apps/testapps/testBaseCells.c\n    src/apps/testapps/testBaseCellsInternal.c\n    src/apps/testapps/testVertexGraphInternal.c\n    src/apps/testapps/testCompactCells.c\n    src/apps/testapps/testPolygonToCells.c\n    src/apps/testapps/testPolygonToCellsExperimental.c\n    src/apps/testapps/testPolygonToCellsReported.c\n    src/apps/testapps/testPolygonToCellsReportedExperimental.c\n    src/apps/testapps/testPentagonIndexes.c\n    src/apps/testapps/testGridDisk.c\n    src/apps/testapps/testGridDiskInternal.c\n    src/apps/testapps/testCellToBoundary.c\n    src/apps/testapps/testCellToBoundaryEdgeCases.c\n    src/apps/testapps/testCellToParent.c\n    src/apps/testapps/testH3Index.c\n    src/apps/testapps/testH3IndexInternal.c\n    src/apps/testapps/mkRandGeoBoundary.c\n    src/apps/testapps/testLatLngToCell.c\n    src/apps/testapps/testH3NeighborRotations.c\n    src/apps/testapps/testCellToChildrenSize.c\n    src/apps/testapps/testGridDisksUnsafe.c\n    src/apps/testapps/testCellToLatLng.c\n    src/apps/testapps/testCellToCenterChild.c\n    src/apps/testapps/testCellToChildren.c\n    src/apps/testapps/testCellToBBoxExhaustive.c\n    src/apps/testapps/testCellToChildPos.c\n    src/apps/testapps/testGetIcosahedronFaces.c\n    src/apps/testapps/testLatLng.c\n    src/apps/testapps/testLatLngInternal.c\n    src/apps/testapps/testGridRingUnsafe.c\n    src/apps/testapps/testH3SetToVertexGraphInternal.c\n    src/apps/testapps/testBBoxInternal.c\n    src/apps/testapps/testVertex.c\n    src/apps/testapps/testVertexInternal.c\n    src/apps/testapps/testVertexExhaustive.c\n    src/apps/testapps/testPolygonInternal.c\n    src/apps/testapps/testPolyfillInternal.c\n    src/apps/testapps/testVec2dInternal.c\n    src/apps/testapps/testVec3dInternal.c\n    src/apps/testapps/testDirectedEdge.c\n    src/apps/testapps/testDirectedEdgeExhaustive.c\n    src/apps/testapps/testLinkedGeoInternal.c\n    src/apps/testapps/mkRandGeo.c\n    src/apps/testapps/testH3Api.c\n    src/apps/testapps/testCellsToLinkedMultiPolygon.c\n    src/apps/testapps/testCellToLocalIj.c\n    src/apps/testapps/testCellToLocalIjInternal.c\n    src/apps/testapps/testCellToLocalIjExhaustive.c\n    src/apps/testapps/testGridDistance.c\n    src/apps/testapps/testGridDistanceInternal.c\n    src/apps/testapps/testGridDistanceExhaustive.c\n    src/apps/testapps/testGridPathCells.c\n    src/apps/testapps/testGridPathCellsExhaustive.c\n    src/apps/testapps/testH3CellArea.c\n    src/apps/testapps/testH3CellAreaExhaustive.c\n    src/apps/testapps/testCoordIjInternal.c\n    src/apps/testapps/testCoordIjkInternal.c\n    src/apps/testapps/testH3Memory.c\n    src/apps/testapps/testH3IteratorsInternal.c\n    src/apps/testapps/testMathExtensionsInternal.c\n    src/apps/testapps/testDescribeH3Error.c\n    src/apps/miscapps/cellToBoundaryHier.c\n    src/apps/miscapps/cellToLatLngHier.c\n    src/apps/miscapps/generateBaseCellNeighbors.c\n    src/apps/miscapps/generatePentagonDirectionFaces.c\n    src/apps/miscapps/generateFaceCenterPoint.c\n    src/apps/miscapps/h3ToHier.c\n    src/apps/fuzzers/fuzzerLatLngToCell.c\n    src/apps/fuzzers/fuzzerCellToLatLng.c\n    src/apps/fuzzers/fuzzerGridDisk.c\n    src/apps/fuzzers/fuzzerCellsToLinkedMultiPolygon.c\n    src/apps/fuzzers/fuzzerDistances.c\n    src/apps/fuzzers/fuzzerCellArea.c\n    src/apps/fuzzers/fuzzerEdgeLength.c\n    src/apps/fuzzers/fuzzerCellProperties.c\n    src/apps/fuzzers/fuzzerIndexIO.c\n    src/apps/fuzzers/fuzzerResolutions.c\n    src/apps/fuzzers/fuzzerHierarchy.c\n    src/apps/fuzzers/fuzzerVertexes.c\n    src/apps/fuzzers/fuzzerCompact.c\n    src/apps/fuzzers/fuzzerDirectedEdge.c\n    src/apps/fuzzers/fuzzerLocalIj.c\n    src/apps/fuzzers/fuzzerPolygonToCells.c\n    src/apps/fuzzers/fuzzerPolygonToCellsExperimental.c\n    src/apps/fuzzers/fuzzerPolygonToCellsNoHoles.c\n    src/apps/fuzzers/fuzzerPolygonToCellsExperimentalNoHoles.c\n    src/apps/fuzzers/fuzzerCellToChildPos.c\n    src/apps/fuzzers/fuzzerInternalAlgos.c\n    src/apps/fuzzers/fuzzerInternalCoordIjk.c\n    src/apps/benchmarks/benchmarkPolygonToCells.c\n    src/apps/benchmarks/benchmarkPolygonToCellsExperimental.c\n    src/apps/benchmarks/benchmarkPolygon.c\n    src/apps/benchmarks/benchmarkCellsToLinkedMultiPolygon.c\n    src/apps/benchmarks/benchmarkCellToChildren.c\n    src/apps/benchmarks/benchmarkGridDiskCells.c\n    src/apps/benchmarks/benchmarkGridPathCells.c\n    src/apps/benchmarks/benchmarkDirectedEdge.c\n    src/apps/benchmarks/benchmarkVertex.c\n    src/apps/benchmarks/benchmarkIsValidCell.c\n    src/apps/benchmarks/benchmarkH3Api.c)\n\nset(ALL_SOURCE_FILES\n    ${LIB_SOURCE_FILES} ${APP_SOURCE_FILES} ${TEST_APP_SOURCE_FILES}\n    ${H3_BIN_SOURCE_FILES} ${OTHER_SOURCE_FILES})\n\n# This is done for quality control purposes (to detect if any source files are\n# missing from our list), but is not done as the authoritative list as per CMake\n# developer recommendations. See\n# https://cmake.org/cmake/help/latest/command/file.html#glob-recurse\noption(AUDIT_SOURCE_FILE_LIST\n       \"Compare source file list against glob expression\" OFF)\nif(AUDIT_SOURCE_FILE_LIST)\n    file(\n        GLOB_RECURSE QA_SRC_SOURCE_FILES\n        RELATIVE \"${CMAKE_SOURCE_DIR}\"\n        \"src/*.c\" \"src/*.h\")\n    file(\n        GLOB_RECURSE QA_EXAMPLE_SOURCE_FILES\n        RELATIVE \"${CMAKE_SOURCE_DIR}\"\n        \"examples/*.c\" \"examples/*.h\")\n    foreach(QA_FILE IN LISTS QA_SRC_SOURCE_FILES)\n        if(NOT QA_FILE IN_LIST ALL_SOURCE_FILES)\n            message(FATAL_ERROR \"${QA_FILE} not in ALL_SOURCE_FILES\")\n        endif()\n    endforeach()\n    foreach(QA_FILE IN LISTS QA_EXAMPLE_SOURCE_FILES)\n        if(NOT QA_FILE IN_LIST EXAMPLE_SOURCE_FILES)\n            message(FATAL_ERROR \"${QA_FILE} not in EXAMPLE_SOURCE_FILES\")\n        endif()\n    endforeach()\nendif()\n\nset(UNCONFIGURED_API_HEADER src/h3lib/include/h3api.h.in)\nset(CONFIGURED_API_HEADER src/h3lib/include/h3api.h)\nconfigure_file(${UNCONFIGURED_API_HEADER} ${CONFIGURED_API_HEADER})\n\nset(INSTALL_TARGETS)\n\nfunction(add_h3_library name h3_alloc_prefix_override)\n    add_library(${name} ${LIB_SOURCE_FILES} ${CONFIGURED_API_HEADER})\n\n    target_compile_options(${name} PRIVATE ${H3_COMPILE_FLAGS})\n    target_link_libraries(${name} PRIVATE ${H3_LINK_FLAGS})\n    target_compile_features(${name} PUBLIC c_std_99)\n\n    find_library(M_LIB m)\n    if(M_LIB)\n        target_link_libraries(${name} PUBLIC ${M_LIB})\n    endif()\n\n    if(BUILD_SHARED_LIBS)\n        set_target_properties(${name} PROPERTIES SOVERSION ${H3_SOVERSION})\n        target_compile_definitions(${name} PRIVATE BUILD_SHARED_LIBS=1)\n    endif()\n    if(ENABLE_COVERAGE)\n        target_compile_definitions(${name} PRIVATE H3_COVERAGE_TEST=1)\n    endif()\n\n    target_compile_definitions(${name} PUBLIC H3_PREFIX=${H3_PREFIX})\n    target_compile_definitions(${name} PRIVATE BUILDING_H3=1)\n    set(has_alloc_prefix NO)\n    if(h3_alloc_prefix_override)\n        set(has_alloc_prefix YES)\n        target_compile_definitions(\n            ${name} PUBLIC H3_ALLOC_PREFIX=${h3_alloc_prefix_override})\n    elseif(H3_ALLOC_PREFIX)\n        set(has_alloc_prefix YES)\n        target_compile_definitions(${name}\n                                   PUBLIC H3_ALLOC_PREFIX=${H3_ALLOC_PREFIX})\n    endif()\n    # Mac OSX defaults to not looking up undefined symbols dynamically, so\n    # enable that explicitly. Windows needs something similar.\n    if(has_alloc_prefix AND APPLE)\n        target_link_libraries(${name} PRIVATE \"-undefined dynamic_lookup\")\n    elseif(has_alloc_prefix AND MSVC)\n        set(TARGET ${name} PROPERTY APPEND LINK_FLAGS \"/FORCE:UNRESOLVED\")\n    endif()\n\n    if(have_alloca)\n        target_compile_definitions(${name} PUBLIC H3_HAVE_ALLOCA)\n    endif()\n    if(have_vla)\n        target_compile_definitions(${name} PUBLIC H3_HAVE_VLA)\n    endif()\n    target_include_directories(\n        ${name}\n        PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/h3lib/include>\n               $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/src/h3lib/include>)\nendfunction()\n\n# Build the H3 library\nadd_h3_library(h3 \"\")\n\n# Automatic code formatting Give preference to clang-format-14\nfind_program(CLANG_FORMAT_PATH NAMES clang-format-14 clang-format)\ncmake_dependent_option(\n    ENABLE_FORMAT \"Enable running clang-format before compiling\" ON\n    \"CLANG_FORMAT_PATH\" OFF)\nif(ENABLE_FORMAT)\n    # Format\n    add_custom_target(\n        format\n        COMMAND ${CLANG_FORMAT_PATH} -style=file -i ${ALL_SOURCE_FILES}\n                ${EXAMPLE_SOURCE_FILES} ${UNCONFIGURED_API_HEADER}\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        COMMENT \"Formatting sources\")\n    # Always do formatting\n    add_dependencies(h3 format)\nelseif(NOT CLANG_FORMAT_PATH)\n    message(WARNING \"clang-format was not detected, \"\n                    \"so automatic source code reformatting is disabled\")\nendif()\n\noption(ENABLE_LINTING \"Run clang-tidy on source files\" ON)\nfind_program(CLANG_TIDY_PATH \"clang-tidy\")\ncmake_dependent_option(\n    ENABLE_LINTING \"Enable running clang-tidy on sources during compilation\" ON\n    \"CLANG_TIDY_PATH\" OFF)\nif(ENABLE_LINTING)\n    set_target_properties(h3 PROPERTIES C_CLANG_TIDY \"${CLANG_TIDY_PATH}\")\nelseif(NOT CLANG_TIDY_PATH)\n    message(WARNING \"clang-tidy was not detected, \"\n                    \"so source code linting is disabled\")\nendif()\n\n# Docs\nfind_package(Doxygen)\noption(ENABLE_DOCS \"Enable building documentation.\" ON)\nif(DOXYGEN_FOUND AND ENABLE_DOCS)\n    set_property(\n        DIRECTORY\n        APPEND\n        PROPERTY ADDITIONAL_MAKE_CLEAN_FILES\n                 \"${CMAKE_CURRENT_BINARY_DIR}/dev-docs/_build\")\n    configure_file(dev-docs/Doxyfile.in dev-docs/Doxyfile ESCAPE_QUOTES)\n    add_custom_target(\n        docs ALL\n        ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/dev-docs/Doxyfile\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dev-docs\n        COMMENT \"Generating API documentation with Doxygen\"\n        VERBATIM)\nelse()\n    add_custom_target(\n        docs\n        echo\n        \"Doxygen was not installed when CMake was run or ENABLE_DOCS was OFF. Check that Doxygen is installed and rerun `cmake .`\"\n        VERBATIM)\nendif()\n\n# Metadata for bindings\nif(WIN32)\n    add_custom_target(\n        binding-functions\n        COMMAND PowerShell -ExecutionPolicy Bypass -File\n                ${CMAKE_CURRENT_SOURCE_DIR}/scripts/binding_functions.ps1\n        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})\nelse()\n    add_custom_target(\n        binding-functions\n        COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/scripts/binding_functions.sh\n        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})\nendif()\n\n# Release publishing\nadd_custom_target(\n    update-version\n    COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/scripts/update_version.sh\n    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n\n# Link all executables against H3\nmacro(add_h3_executable name)\n    # invoke built-in add_executable\n    add_executable(${ARGV})\n    if(TARGET ${name})\n        target_link_libraries(${name} PUBLIC h3)\n        target_include_directories(\n            ${name}\n            PUBLIC\n                $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/apps/applib/include>\n        )\n        target_compile_options(${name} PRIVATE ${H3_COMPILE_FLAGS})\n        target_link_libraries(${name} PRIVATE ${H3_LINK_FLAGS})\n    endif()\nendmacro()\n\nif(BUILD_FILTERS)\n    macro(add_h3_filter name)\n        add_h3_executable(${ARGV})\n        list(APPEND INSTALL_TARGETS ${name})\n    endmacro()\n\n    add_h3_filter(h3_bin src/apps/filters/h3.c ${APP_SOURCE_FILES})\n    set_target_properties(\n        h3_bin PROPERTIES OUTPUT_NAME h3) # Special logic for the `h3`\n                                          # executable\n    add_h3_filter(latLngToCell src/apps/filters/latLngToCell.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(h3ToComponents src/apps/filters/h3ToComponents.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(cellToLatLng src/apps/filters/cellToLatLng.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(cellToLocalIj src/apps/filters/cellToLocalIj.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(localIjToCell src/apps/filters/localIjToCell.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(cellToBoundary src/apps/filters/cellToBoundary.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(gridDiskUnsafe src/apps/filters/gridDiskUnsafe.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(gridDisk src/apps/filters/gridDisk.c ${APP_SOURCE_FILES})\n    add_h3_filter(cellToBoundaryHier src/apps/miscapps/cellToBoundaryHier.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(cellToLatLngHier src/apps/miscapps/cellToLatLngHier.c\n                  ${APP_SOURCE_FILES})\n    add_h3_filter(h3ToHier src/apps/miscapps/h3ToHier.c ${APP_SOURCE_FILES})\n\n    # Generate KML files for visualizing the H3 grid\n    add_custom_target(create-kml-dir COMMAND ${CMAKE_COMMAND} -E make_directory\n                                             KML)\n    add_custom_target(kml)\n\n    # Only the first 3 resolution grids are generated. The others can be\n    # generated, but the file sizes would be very, very large.\n    foreach(resolution RANGE 3)\n        set_property(\n            DIRECTORY\n            APPEND\n            PROPERTY ADDITIONAL_MAKE_CLEAN_FILES\n                     \"KML/res${resolution}cells.kml\")\n        set_property(\n            DIRECTORY\n            APPEND\n            PROPERTY ADDITIONAL_MAKE_CLEAN_FILES\n                     \"KML/res${resolution}centers.kml\")\n        add_custom_target(\n            kml_cells_${resolution}\n            COMMAND\n                ${SHELL}\n                \"$<TARGET_FILE:h3ToHier> -r ${resolution} | $<TARGET_FILE:cellToBoundary> --kml --kml-name res${resolution}cells.kml --kml-description \\\"Res ${resolution} Cells\\\" > KML/res${resolution}cells.kml\"\n            VERBATIM\n            DEPENDS create-kml-dir)\n        add_custom_target(\n            kml_centers_${resolution}\n            COMMAND\n                ${SHELL}\n                \"$<TARGET_FILE:h3ToHier> -r ${resolution} | $<TARGET_FILE:cellToLatLng> --kml --kml-name res${resolution}centers.kml --kml-description \\\"Res ${resolution} Centers\\\" > KML/res${resolution}centers.kml\"\n            VERBATIM\n            DEPENDS create-kml-dir)\n        add_dependencies(kml kml_cells_${resolution} kml_centers_${resolution})\n    endforeach()\nendif()\n\nif(BUILD_GENERATORS AND ENABLE_REQUIRES_ALL_SYMBOLS)\n    # Code generation\n    add_h3_executable(\n        generateBaseCellNeighbors src/apps/miscapps/generateBaseCellNeighbors.c\n        ${APP_SOURCE_FILES})\n    add_h3_executable(\n        generateFaceCenterPoint src/apps/miscapps/generateFaceCenterPoint.c\n        ${APP_SOURCE_FILES})\n    add_h3_executable(\n        generatePentagonDirectionFaces\n        src/apps/miscapps/generatePentagonDirectionFaces.c ${APP_SOURCE_FILES})\n\n    # Miscellaneous testing applications - generating random data\n    add_h3_executable(mkRandGeo src/apps/testapps/mkRandGeo.c\n                      ${APP_SOURCE_FILES})\n    add_h3_executable(mkRandGeoBoundary src/apps/testapps/mkRandGeoBoundary.c\n                      ${APP_SOURCE_FILES})\nendif()\n\nif(H3_IS_ROOT_PROJECT AND BUILD_TESTING)\n    include(CMakeTests.cmake)\nendif()\n\nif(BUILD_FUZZERS)\n    add_custom_target(fuzzers)\n\n    macro(add_h3_fuzzer name srcfile)\n        add_h3_executable(${name} ${srcfile} ${APP_SOURCE_FILES})\n        if(ENABLE_LIBFUZZER OR H3_FUZZER_NO_MAIN)\n            target_compile_definitions(${name} PRIVATE H3_USE_LIBFUZZER)\n        endif()\n        if(H3_FUZZER_EXTRA_OPTIONS)\n            target_compile_options(${name} PRIVATE ${H3_FUZZER_EXTRA_OPTIONS})\n        endif()\n        add_dependencies(fuzzers ${name})\n    endmacro()\n\n    add_h3_fuzzer(fuzzerLatLngToCell src/apps/fuzzers/fuzzerLatLngToCell.c)\n    add_h3_fuzzer(fuzzerCellToLatLng src/apps/fuzzers/fuzzerCellToLatLng.c)\n    add_h3_fuzzer(fuzzerGridDisk src/apps/fuzzers/fuzzerGridDisk.c)\n    add_h3_fuzzer(fuzzerCellsToLinkedMultiPolygon\n                  src/apps/fuzzers/fuzzerCellsToLinkedMultiPolygon.c)\n    add_h3_fuzzer(fuzzerDistances src/apps/fuzzers/fuzzerDistances.c)\n    add_h3_fuzzer(fuzzerCellArea src/apps/fuzzers/fuzzerCellArea.c)\n    add_h3_fuzzer(fuzzerEdgeLength src/apps/fuzzers/fuzzerEdgeLength.c)\n    add_h3_fuzzer(fuzzerCellProperties src/apps/fuzzers/fuzzerCellProperties.c)\n    add_h3_fuzzer(fuzzerIndexIO src/apps/fuzzers/fuzzerIndexIO.c)\n    add_h3_fuzzer(fuzzerResolutions src/apps/fuzzers/fuzzerResolutions.c)\n    add_h3_fuzzer(fuzzerHierarchy src/apps/fuzzers/fuzzerHierarchy.c)\n    add_h3_fuzzer(fuzzerVertexes src/apps/fuzzers/fuzzerVertexes.c)\n    add_h3_fuzzer(fuzzerCompact src/apps/fuzzers/fuzzerCompact.c)\n    add_h3_fuzzer(fuzzerDirectedEdge src/apps/fuzzers/fuzzerDirectedEdge.c)\n    add_h3_fuzzer(fuzzerLocalIj src/apps/fuzzers/fuzzerLocalIj.c)\n    add_h3_fuzzer(fuzzerPolygonToCells src/apps/fuzzers/fuzzerPolygonToCells.c)\n    add_h3_fuzzer(fuzzerPolygonToCellsExperimental\n                  src/apps/fuzzers/fuzzerPolygonToCellsExperimental.c)\n    add_h3_fuzzer(fuzzerPolygonToCellsNoHoles\n                  src/apps/fuzzers/fuzzerPolygonToCellsNoHoles.c)\n    add_h3_fuzzer(fuzzerPolygonToCellsExperimentalNoHoles\n                  src/apps/fuzzers/fuzzerPolygonToCellsExperimentalNoHoles.c)\n    add_h3_fuzzer(fuzzerCellToChildPos src/apps/fuzzers/fuzzerCellToChildPos.c)\n    if(ENABLE_REQUIRES_ALL_SYMBOLS)\n        add_h3_fuzzer(fuzzerInternalAlgos\n                      src/apps/fuzzers/fuzzerInternalAlgos.c)\n        add_h3_fuzzer(fuzzerInternalCoordIjk\n                      src/apps/fuzzers/fuzzerInternalCoordIjk.c)\n    endif()\nendif()\n\nif(BUILD_BENCHMARKS)\n    # Benchmarks\n    add_custom_target(benchmarks)\n\n    macro(add_h3_benchmark name srcfile)\n        add_h3_executable(${name} ${srcfile} ${APP_SOURCE_FILES})\n        add_custom_target(bench_${name} COMMAND ${TEST_WRAPPER}\n                                                $<TARGET_FILE:${name}>)\n        add_dependencies(benchmarks bench_${name})\n    endmacro()\n\n    add_h3_benchmark(benchmarkH3Api src/apps/benchmarks/benchmarkH3Api.c)\n    add_h3_benchmark(benchmarkGridDiskCells\n                     src/apps/benchmarks/benchmarkGridDiskCells.c)\n    add_h3_benchmark(benchmarkGridPathCells\n                     src/apps/benchmarks/benchmarkGridPathCells.c)\n    add_h3_benchmark(benchmarkDirectedEdge\n                     src/apps/benchmarks/benchmarkDirectedEdge.c)\n    add_h3_benchmark(benchmarkVertex src/apps/benchmarks/benchmarkVertex.c)\n    add_h3_benchmark(benchmarkIsValidCell\n                     src/apps/benchmarks/benchmarkIsValidCell.c)\n    add_h3_benchmark(benchmarkCellsToLinkedMultiPolygon\n                     src/apps/benchmarks/benchmarkCellsToLinkedMultiPolygon.c)\n    add_h3_benchmark(benchmarkCellToChildren\n                     src/apps/benchmarks/benchmarkCellToChildren.c)\n    add_h3_benchmark(benchmarkPolygonToCells\n                     src/apps/benchmarks/benchmarkPolygonToCells.c)\n    add_h3_benchmark(benchmarkPolygonToCellsExperimental\n                     src/apps/benchmarks/benchmarkPolygonToCellsExperimental.c)\n    if(ENABLE_REQUIRES_ALL_SYMBOLS)\n        add_h3_benchmark(benchmarkPolygon\n                         src/apps/benchmarks/benchmarkPolygon.c)\n    endif()\n\n    if(ENABLE_COUNTRY_BENCHMARKS)\n        # Country benchmark: Downloads country geometry and generates the\n        # benchmark file\n        add_custom_command(\n            OUTPUT src/apps/benchmarks/benchmarkCountries.c\n            COMMAND\n                node ${CMAKE_CURRENT_SOURCE_DIR}/scripts/make_countries.js\n                ${CMAKE_CURRENT_BINARY_DIR}/src/apps/benchmarks/benchmarkCountries.c\n        )\n\n        add_h3_benchmark(\n            benchmarkCountries\n            ${CMAKE_CURRENT_BINARY_DIR}/src/apps/benchmarks/benchmarkCountries.c\n        )\n        # add_dependencies(bench_benchmarkCountries )\n    endif()\nendif()\n\n# Installation (https://github.com/forexample/package-example)\n\n# Layout. This works for all platforms: *\n# <prefix>/<CMAKE_INSTALL_LIBDIR>/cmake/<PROJECT-NAME> *\n# <prefix>/<CMAKE_INSTALL_LIBDIR>/ * <prefix>/include/\ninclude(GNUInstallDirs)\nset(config_install_dir \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\")\nset(include_install_dir \"include\")\n\nset(generated_dir \"${CMAKE_CURRENT_BINARY_DIR}/generated\")\n\n# Configuration\nset(version_config \"${generated_dir}/${PROJECT_NAME}ConfigVersion.cmake\")\nset(project_config \"${generated_dir}/${PROJECT_NAME}Config.cmake\")\nset(TARGETS_EXPORT_NAME \"${PROJECT_NAME}Targets\")\nset(namespace \"${PROJECT_NAME}::\")\n\n# TODO: Unclear why this is needed to get the libh3 Debian package to build\n# correctly with shared libraries.\nset(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME \"libh3\")\n\n# Include module with fuction 'write_basic_package_version_file'\ninclude(CMakePackageConfigHelpers)\n\n# Configure '<PROJECT-NAME>ConfigVersion.cmake' Use: * PROJECT_VERSION\nwrite_basic_package_version_file(\"${version_config}\"\n                                 COMPATIBILITY SameMajorVersion)\n\n# Configure '<PROJECT-NAME>Config.cmake' Use variables: * TARGETS_EXPORT_NAME *\n# PROJECT_NAME\nconfigure_package_config_file(\"cmake/Config.cmake.in\" \"${project_config}\"\n                              INSTALL_DESTINATION \"${config_install_dir}\")\n\n# Targets: * <prefix>/<CMAKE_INSTALL_LIBDIR>/libh3.so * header location after\n# install: <prefix>/include/h3/h3api.h * headers can be included by C++ code\n# `#include <h3/h3api.h>` Installing the library and filters system-wide.\ninstall(\n    TARGETS ${INSTALL_TARGETS}\n    EXPORT \"${TARGETS_EXPORT_NAME}\"\n    DESTINATION \"bin\"\n    COMPONENT h3)\n\ninstall(\n    TARGETS h3\n    EXPORT \"${TARGETS_EXPORT_NAME}\"\n    COMPONENT libh3\n    LIBRARY DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    ARCHIVE DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    RUNTIME DESTINATION \"bin\"\n    INCLUDES\n    DESTINATION \"${include_install_dir}\")\n\n# Headers: * src/h3lib/include/h3api.h -> <prefix>/include/h3/h3api.h Only the\n# h3api.h header is needed by applications using H3.\ninstall(\n    FILES \"${CMAKE_CURRENT_BINARY_DIR}/src/h3lib/include/h3api.h\"\n    DESTINATION \"${include_install_dir}/h3\"\n    COMPONENT libh3-dev)\n\n# Config * <prefix>/<CMAKE_INSTALL_LIBDIR>/cmake/h3/h3Config.cmake *\n# <prefix>/<CMAKE_INSTALL_LIBDIR>/cmake/h3/h3ConfigVersion.cmake\ninstall(\n    FILES \"${project_config}\" \"${version_config}\"\n    DESTINATION \"${config_install_dir}\"\n    COMPONENT libh3-dev)\n\n# Config * <prefix>/<CMAKE_INSTALL_LIBDIR>/cmake/h3/h3Targets.cmake\ninstall(\n    EXPORT \"${TARGETS_EXPORT_NAME}\"\n    NAMESPACE \"${namespace}\"\n    DESTINATION \"${config_install_dir}\"\n    COMPONENT libh3-dev)\n\n# Debian package build\nset(CPACK_DEB_COMPONENT_INSTALL 1)\nset(CPACK_GENERATOR \"DEB\")\nset(CPACK_DEBIAN_FILE_NAME \"DEB-DEFAULT\")\n# set(CPACK_DEBIAN_PACKAGE_MAINTAINER \"TEST PACKAGE\") # Required\nset(CPACK_PACKAGE_HOMEPAGE_URL \"https://www.h3geo.org\")\nset(CPACK_RESOURCE_FILE_LICENSE \"${PROJECT_SOURCE_DIR}/LICENSE\")\nset(CPACK_DEBIAN_LIBH3_PACKAGE_DEPENDS \"libc6 (>= 2.27)\")\nset(CPACK_DEBIAN_LIBH3-DEV_PACKAGE_DEPENDS \"libh3 (= ${H3_VERSION})\")\nset(CPACK_DEBIAN_H3_PACKAGE_DEPENDS \"libc6 (>= 2.27), libh3 (= ${H3_VERSION})\")\nset(CPACK_DEBIAN_LIBH3_DESCRIPTION\n    \"Library files for the H3 hexagonal discrete global grid system.\")\nset(CPACK_DEBIAN_LIBH3-DEV_DESCRIPTION\n    \"Development files and headers for the H3 hexagonal discrete global grid system.\"\n)\nset(CPACK_DEBIAN_H3_DESCRIPTION\n    \"UNIX style filter (command line) tools for the H3 hexagonal discrete global grid system.\"\n)\nset(CPACK_DEBIAN_LIBH3_PACKAGE_NAME \"libh3\")\nset(CPACK_DEBIAN_LIBH3-DEV_PACKAGE_NAME \"libh3-dev\")\nset(CPACK_DEBIAN_H3_PACKAGE_NAME \"h3\")\nset(CPACK_DEBIAN_LIBH3_PACKAGE_SECTION \"libs\")\nset(CPACK_DEBIAN_LIBH3-DEV_PACKAGE_SECTION \"libdevel\")\nset(CPACK_DEBIAN_H3_PACKAGE_SECTION \"science\")\n\ninclude(CPack)\n"
        },
        {
          "name": "CMakeTests.cmake",
          "type": "blob",
          "size": 11.66015625,
          "content": "# Copyright 2017-2022, 2024 Uber Technologies, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n# License for the specific language governing permissions and limitations under\n# the License.\n\n# Test code for H3\n\noption(BUILD_ALLOC_TESTS \"Build tests for custom allocation functions\" ON)\noption(PRINT_TEST_FILES \"Print which test files correspond to which tests\" OFF)\n\ninclude(TestWrapValgrind)\n\nenable_testing()\n\n# Macros and support code needed to build and add the tests\nset(test_number 0)\n\nif(ENABLE_COVERAGE)\n    file(\n        GENERATE\n        OUTPUT \"${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/scripts/coverage.sh\"\n        INPUT \"${CMAKE_CURRENT_SOURCE_DIR}/scripts/coverage.sh.in\")\n    set_property(\n        DIRECTORY\n        APPEND\n        PROPERTY ADDITIONAL_MAKE_CLEAN_FILES \"coverage.info\")\n    set_property(\n        DIRECTORY\n        APPEND\n        PROPERTY ADDITIONAL_MAKE_CLEAN_FILES \"coverage.cleaned.info\")\n    set_property(\n        DIRECTORY\n        APPEND\n        PROPERTY ADDITIONAL_MAKE_CLEAN_FILES \"coverage\")\n    add_custom_target(\n        coverage\n        COMMAND\n            bash \"${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/scripts/coverage.sh\"\n            \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_BINARY_DIR}\")\n    add_custom_target(\n        clean-coverage\n        # Before running coverage, clear all counters\n        COMMAND lcov --rc lcov_branch_coverage=1 --directory\n                '${CMAKE_CURRENT_BINARY_DIR}' --zerocounters\n        COMMENT \"Zeroing counters\")\nendif()\n\nmacro(add_h3_memory_test name srcfile)\n    # Like other test code, but these need to be linked against a different copy\n    # of the H3 library which has known intercepted allocator functions.\n    add_executable(${ARGV} ${APP_SOURCE_FILES} ${TEST_APP_SOURCE_FILES})\n\n    if(TARGET ${name})\n        target_link_libraries(${name} PUBLIC h3WithTestAllocators)\n        target_include_directories(\n            ${name}\n            PUBLIC\n                $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/apps/applib/include>\n        )\n        target_compile_options(${name} PRIVATE ${H3_COMPILE_FLAGS})\n        target_link_libraries(${name} PRIVATE ${H3_LINK_FLAGS})\n    endif()\n\n    math(EXPR test_number \"${test_number}+1\")\n\n    add_test(NAME ${name}_test${test_number} COMMAND ${TEST_WRAPPER}\n                                                     \"$<TARGET_FILE:${name}>\")\n\n    if(ENABLE_COVERAGE)\n        add_custom_target(\n            ${name}_coverage${test_number}\n            COMMAND ${name} > /dev/null\n            COMMENT \"Running ${name}_coverage${test_number}\")\n\n        add_dependencies(coverage ${name}_coverage${test_number})\n        add_dependencies(${name}_coverage${test_number} clean-coverage)\n    endif()\nendmacro()\n\nmacro(add_h3_test_common name srcfile)\n    # need to actually make the test target\n    if(NOT TARGET ${name})\n        add_h3_executable(${name} ${srcfile} ${APP_SOURCE_FILES}\n                          ${TEST_APP_SOURCE_FILES})\n    endif()\n\n    math(EXPR test_number \"${test_number}+1\")\nendmacro()\n\nmacro(add_h3_test name srcfile)\n    add_h3_test_common(${name} ${srcfile})\n    add_test(NAME ${name}_test${test_number} COMMAND ${TEST_WRAPPER}\n                                                     \"$<TARGET_FILE:${name}>\")\n\n    if(ENABLE_COVERAGE)\n        add_custom_target(\n            ${name}_coverage${test_number}\n            COMMAND ${name} > /dev/null\n            COMMENT \"Running ${name}_coverage${test_number}\")\n\n        add_dependencies(coverage ${name}_coverage${test_number})\n        add_dependencies(${name}_coverage${test_number} clean-coverage)\n    endif()\nendmacro()\n\nmacro(add_h3_test_with_file name srcfile argfile)\n    add_h3_test_common(${name} ${srcfile})\n    # add a special command (so we don't need to read the test file from the\n    # test program)\n    set(dump_command \"cat\")\n\n    add_test(\n        NAME ${name}_test${test_number}\n        COMMAND\n            ${SHELL}\n            \"${dump_command} ${argfile} | ${TEST_WRAPPER_STR} $<TARGET_FILE:${name}>\"\n    )\n\n    if(PRINT_TEST_FILES)\n        message(\"${name}_test${test_number} - ${argfile}\")\n    endif()\n\n    if(ENABLE_COVERAGE)\n        add_custom_target(\n            ${name}_coverage${test_number}\n            COMMAND ${name} < ${argfile} > /dev/null\n            COMMENT \"Running ${name}_coverage${test_number}\")\n\n        add_dependencies(coverage ${name}_coverage${test_number})\n        add_dependencies(${name}_coverage${test_number} clean-coverage)\n    endif()\nendmacro()\n\nmacro(add_h3_cli_test name h3_args expect_string)\n    add_test(\n        NAME ${name}_test${test_number}\n        COMMAND\n            ${SHELL}\n            \"test \\\"`$<TARGET_FILE:h3_bin> ${h3_args}`\\\" = '${expect_string}'\")\n\n    if(PRINT_TEST_FILES)\n        message(\"${name}_test${test_number} - ${h3_args} - ${expect_string}\")\n    endif()\n\n    # TODO: Build a coverage-enabled variant of the h3 cli app to enable\n    # coverage\nendmacro()\n\nmacro(add_h3_test_with_arg name srcfile arg)\n    add_h3_test_common(${name} ${srcfile})\n    add_test(NAME ${name}_test${test_number}\n             COMMAND ${TEST_WRAPPER} $<TARGET_FILE:${name}> ${arg})\n    if(PRINT_TEST_FILES)\n        message(\"${name}_test${test_number} - ${arg}\")\n    endif()\n\n    if(ENABLE_COVERAGE)\n        add_custom_target(\n            ${name}_coverage${test_number}\n            COMMAND ${name} ${arg}\n            COMMENT \"Running ${name}_coverage${test_number}\")\n\n        add_dependencies(coverage ${name}_coverage${test_number})\n        add_dependencies(${name}_coverage${test_number} clean-coverage)\n    endif()\nendmacro()\n\n# Add each individual test\nfile(GLOB all_centers tests/inputfiles/bc*centers.txt)\nforeach(file ${all_centers})\n    add_h3_test_with_file(testLatLngToCell src/apps/testapps/testLatLngToCell.c\n                          ${file})\nendforeach()\n\nfile(GLOB all_ic_files tests/inputfiles/res*ic.txt)\nforeach(file ${all_ic_files})\n    add_h3_test_with_file(testCellToLatLng src/apps/testapps/testCellToLatLng.c\n                          ${file})\nendforeach()\n\nfile(GLOB all_centers tests/inputfiles/rand*centers.txt)\nforeach(file ${all_centers})\n    add_h3_test_with_file(testLatLngToCell src/apps/testapps/testLatLngToCell.c\n                          ${file})\nendforeach()\n\nfile(GLOB all_cells tests/inputfiles/*cells.txt)\nforeach(file ${all_cells})\n    add_h3_test_with_file(testCellToBoundary\n                          src/apps/testapps/testCellToBoundary.c ${file})\nendforeach()\n\nadd_h3_test(testCellToBoundaryEdgeCases\n            src/apps/testapps/testCellToBoundaryEdgeCases.c)\nadd_h3_test(testCompactCells src/apps/testapps/testCompactCells.c)\nadd_h3_test(testGridDisk src/apps/testapps/testGridDisk.c)\nadd_h3_test(testGridDiskInternal src/apps/testapps/testGridDiskInternal.c)\nadd_h3_test(testGridRingUnsafe src/apps/testapps/testGridRingUnsafe.c)\nadd_h3_test(testGridDisksUnsafe src/apps/testapps/testGridDisksUnsafe.c)\nadd_h3_test(testCellToParent src/apps/testapps/testCellToParent.c)\nadd_h3_test(testCellToCenterChild src/apps/testapps/testCellToCenterChild.c)\nadd_h3_test(testCellToChildren src/apps/testapps/testCellToChildren.c)\nadd_h3_test(testCellToChildPos src/apps/testapps/testCellToChildPos.c)\nadd_h3_test(testGetIcosahedronFaces src/apps/testapps/testGetIcosahedronFaces.c)\nadd_h3_test(testCellToChildrenSize src/apps/testapps/testCellToChildrenSize.c)\nadd_h3_test(testH3Index src/apps/testapps/testH3Index.c)\nadd_h3_test(testH3IndexInternal src/apps/testapps/testH3IndexInternal.c)\nadd_h3_test(testH3Api src/apps/testapps/testH3Api.c)\nadd_h3_test(testCellsToLinkedMultiPolygon\n            src/apps/testapps/testCellsToLinkedMultiPolygon.c)\nadd_h3_test(testH3SetToVertexGraphInternal\n            src/apps/testapps/testH3SetToVertexGraphInternal.c)\nadd_h3_test(testLinkedGeoInternal src/apps/testapps/testLinkedGeoInternal.c)\nadd_h3_test(testPolygonToCells src/apps/testapps/testPolygonToCells.c)\nadd_h3_test(testPolygonToCellsExperimental\n            src/apps/testapps/testPolygonToCellsExperimental.c)\nadd_h3_test(testPolygonToCellsReported\n            src/apps/testapps/testPolygonToCellsReported.c)\nadd_h3_test(testPolygonToCellsReportedExperimental\n            src/apps/testapps/testPolygonToCellsReportedExperimental.c)\nadd_h3_test(testVertexGraphInternal src/apps/testapps/testVertexGraphInternal.c)\nadd_h3_test(testDirectedEdge src/apps/testapps/testDirectedEdge.c)\nadd_h3_test(testLatLng src/apps/testapps/testLatLng.c)\nadd_h3_test(testLatLngInternal src/apps/testapps/testLatLngInternal.c)\nadd_h3_test(testBBoxInternal src/apps/testapps/testBBoxInternal.c)\nadd_h3_test(testVertex src/apps/testapps/testVertex.c)\nadd_h3_test(testVertexInternal src/apps/testapps/testVertexInternal.c)\nadd_h3_test(testPolygonInternal src/apps/testapps/testPolygonInternal.c)\nadd_h3_test(testPolyfillInternal src/apps/testapps/testPolyfillInternal.c)\nadd_h3_test(testVec2dInternal src/apps/testapps/testVec2dInternal.c)\nadd_h3_test(testVec3dInternal src/apps/testapps/testVec3dInternal.c)\nadd_h3_test(testCellToLocalIj src/apps/testapps/testCellToLocalIj.c)\nadd_h3_test(testCellToLocalIjInternal\n            src/apps/testapps/testCellToLocalIjInternal.c)\nadd_h3_test(testGridDistance src/apps/testapps/testGridDistance.c)\nadd_h3_test(testGridDistanceInternal\n            src/apps/testapps/testGridDistanceInternal.c)\nadd_h3_test(testGridPathCells src/apps/testapps/testGridPathCells.c)\nadd_h3_test(testH3CellArea src/apps/testapps/testH3CellArea.c)\nadd_h3_test(testCoordIjInternal src/apps/testapps/testCoordIjInternal.c)\nadd_h3_test(testCoordIjkInternal src/apps/testapps/testCoordIjkInternal.c)\nadd_h3_test(testBaseCells src/apps/testapps/testBaseCells.c)\nadd_h3_test(testBaseCellsInternal src/apps/testapps/testBaseCellsInternal.c)\nadd_h3_test(testPentagonIndexes src/apps/testapps/testPentagonIndexes.c)\nadd_h3_test(testH3IteratorsInternal src/apps/testapps/testH3IteratorsInternal.c)\nadd_h3_test(testMathExtensionsInternal\n            src/apps/testapps/testMathExtensionsInternal.c)\nadd_h3_test(testDescribeH3Error src/apps/testapps/testDescribeH3Error.c)\n\nadd_h3_test_with_arg(testH3NeighborRotations\n                     src/apps/testapps/testH3NeighborRotations.c 0)\nadd_h3_test_with_arg(testH3NeighborRotations\n                     src/apps/testapps/testH3NeighborRotations.c 1)\nadd_h3_test_with_arg(testH3NeighborRotations\n                     src/apps/testapps/testH3NeighborRotations.c 2)\n\n# The \"Exhaustive\" part of the test name is used by the test-fast to exclude\n# these files. test-fast exists so that Travis CI can run Valgrind on tests\n# without taking a very long time.\nadd_h3_test(testDirectedEdgeExhaustive\n            src/apps/testapps/testDirectedEdgeExhaustive.c)\nadd_h3_test(testVertexExhaustive src/apps/testapps/testVertexExhaustive.c)\nadd_h3_test(testCellToLocalIjExhaustive\n            src/apps/testapps/testCellToLocalIjExhaustive.c)\nadd_h3_test(testGridPathCellsExhaustive\n            src/apps/testapps/testGridPathCellsExhaustive.c)\nadd_h3_test(testGridDistanceExhaustive\n            src/apps/testapps/testGridDistanceExhaustive.c)\nadd_h3_test(testH3CellAreaExhaustive\n            src/apps/testapps/testH3CellAreaExhaustive.c)\nadd_h3_test(testCellToBBoxExhaustive\n            src/apps/testapps/testCellToBBoxExhaustive.c)\n\nfile(GLOB cli_tests tests/cli/*.txt)\nforeach(file ${cli_tests})\n    include(${file})\nendforeach()\n\nif(BUILD_ALLOC_TESTS)\n    add_h3_library(h3WithTestAllocators test_prefix_)\n\n    add_h3_memory_test(testH3Memory src/apps/testapps/testH3Memory.c)\nendif()\n\nadd_custom_target(test-fast COMMAND ctest -E Exhaustive)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.388671875,
          "content": "# Contributing to the H3 project\n\nPull requests and Github issues are welcome!\n\nPlanned improvements and changes are discussed in Github issues. Feel free to open a discussion proposing a new one.\n\n## Pull requests\n\n* Please include tests that show the bug is fixed or feature works as intended.\n* Please include fuzzer tests for public API functions.\n* Please add a description of your change to the Unreleased section of the [changelog](./CHANGELOG.md).\n* Please open issues to discuss large features or changes which would break compatibility, before submitting pull requests.\n* Please keep H3 compatible with major C compilers, such as GCC, Clang, and MSVC. We use clang-format-14 for source code formatting, if you have another version the CI job may error on formatting differences.\n* Please keep code coverage of the core H3 library at 100%.\n\nBefore we can merge your changes, you must agree to the [Uber Contributor License Agreement](https://cla-assistant.io/uber/h3).\n\n## Other ways to contribute\n\nIn addition to making pull requests and Github issues on the @uber/h3 repository, there are other ways you can contribute. Here are some suggestions:\n\n* Writing and updating the [documentation website](./website/docs/).\n* Writing [bindings](./website/docs/community/bindings.md) for your preferred language.\n* Writing components so that your preferred GIS, mapping, or visualization system can display H3 indexes.\n"
        },
        {
          "name": "KML",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.5546875,
          "content": "Copyright 2017-2021 Uber Technologies, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.673828125,
          "content": "<img align=\"right\" src=\"https://uber.github.io/img/h3Logo-color.svg\" alt=\"H3 Logo\" width=\"200\">\n\n# H3: A Hexagonal Hierarchical Geospatial Indexing System\n\n[![test-linux](https://github.com/uber/h3/workflows/test-linux/badge.svg)](https://github.com/uber/h3/actions)\n[![test-macos](https://github.com/uber/h3/workflows/test-macos/badge.svg)](https://github.com/uber/h3/actions)\n[![test-windows](https://github.com/uber/h3/workflows/test-windows/badge.svg)](https://github.com/uber/h3/actions)\n[![test-website](https://github.com/uber/h3/workflows/test-website/badge.svg)](https://github.com/uber/h3/actions)\n[![Coverage Status](https://coveralls.io/repos/github/uber/h3/badge.svg?branch=master)](https://coveralls.io/github/uber/h3?branch=master)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENSE)\n\nH3 is a geospatial indexing system using a hexagonal grid that can be (approximately) subdivided into finer and finer hexagonal grids, combining the benefits of a hexagonal grid with [S2](https://code.google.com/archive/p/s2-geometry-library/)'s hierarchical subdivisions.\n\nDocumentation is available at [https://h3geo.org/](https://h3geo.org/). Developer documentation in Markdown format is available under the [dev-docs](./dev-docs/) directory.\n\n * Post **bug reports or feature requests** to the [GitHub Issues page](https://github.com/uber/h3/issues)\n * Ask **questions** by posting to the [H3 tag on StackOverflow](https://stackoverflow.com/questions/tagged/h3)\n * There is also an [H3 Slack workspace](https://join.slack.com/t/h3-core/shared_invite/zt-g6u5r1hf-W_~uVJmfeiWtMQuBGc1NNg)\n\n## Installing\n\nWe recommend using prebuilt bindings if they are available for your programming language. Bindings for [Java](https://github.com/uber/h3-java), [JavaScript](https://github.com/uber/h3-js), [Python](https://github.com/uber/h3-py), and [others](https://h3geo.org/docs/community/bindings) are available.\n\nOn macOS, you can install H3 using `brew`:\n```\nbrew install h3\n```\nOtherwise, to build H3 from source, please see the following instructions.\n\n### Building from source\n\nStill here? To build the H3 C library, you'll need a C compiler (tested with `gcc` and `clang`), [CMake](https://cmake.org/), and [Make](https://www.gnu.org/software/make/). If you intend to contribute to H3, you must have [clang-format](https://clang.llvm.org/docs/ClangFormat.html) installed and we recommend installing [ccmake](https://cmake.org/cmake/help/v3.0/manual/ccmake.1.html) and [LCOV](http://ltp.sourceforge.net/coverage/lcov.php) to configure the `cmake` arguments to build and run the tests and generate the code coverage report. We also recommend using `gcc` for the code coverage as some versions of `clang` generate annotations that aren't compatible with `lcov`. [Doxygen](https://www.doxygen.nl/index.html) is needed to build the API documentation.\n\n#### Install build-time dependencies\n\n* Alpine\n```\n# Installing the bare build requirements\napk add cmake make gcc libtool musl-dev\n```\n\n* Debian/Ubuntu\n\n```\n# Installing the bare build requirements\nsudo apt install cmake make gcc libtool\n# Installing useful tools for development\nsudo apt install clang-format cmake-curses-gui lcov doxygen\n```\n\n* macOS (using `brew`)\n\nFirst make sure you [have the developer tools installed](http://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/) and then\n\n```\n# Installing the bare build requirements\nbrew install cmake\n# Installing useful tools for development\nbrew install clang-format lcov doxygen\n```\n\n* Windows (Visual Studio)\n\nYou will need to install CMake and Visual Studio, including the Visual C++ compiler. For building on Windows, please follow the [Windows build instructions](dev-docs/build_windows.md).\n\n* FreeBSD\n\n ```\n# Installing the build requirements\nsudo pkg install bash cmake gmake doxygen lcov\n```\n\n#### Compilation\n\nWhen checking out the H3 Git repository, by default you will check out the latest\ndevelopment version of H3. When using H3 in an application, you will want to check\nout the most recently released version:\n\n```\ngit checkout v$(<VERSION)\n```\n\nFrom the repository root, you can compile H3 with:\n\n```\nmkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Release ..\nmake\n```\n\nAll subsequent `make` commands should be run from within the `build` directory.\n\n**Note**: There are several ways to build H3 with CMake; the method above is just one example that restricts all build artifacts to the `build` directory.\n\nYou can install system-wide with:\n\n```\nsudo make install\n```\n\nIf using the method above, from the repository root, you can clean all build artifacts with:\n\n```\nrm -rf build\n```\n\n#### Testing\n\nAfter making the project, you can test with `make test`.\nYou can run a faster test suite that excludes the most expensive tests with `make test-fast`.\n\n#### Coverage\n\nYou can generate a code coverage report if `lcov` is installed, and if the project was built with the `CMAKE_BUILD_TYPE=Debug` and `ENABLE_COVERAGE=ON` options.\nFor example, from a clean repository, you could run:\n\n```\nmkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON ..\nmake\nmake coverage\n```\n\nYou can then view a detailed HTML coverage report by opening `coverage/index.html` in your browser.\n\n#### Benchmarks\n\nYou can run timing benchmarks by building with the `CMAKE_BUILD_TYPE=Release`, and running `make benchmarks`:\n\n```\nmkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Release ..\nmake\nmake benchmarks\n```\n\n#### Documentation\n\nYou can build developer documentation with `make docs` if Doxygen was installed when CMake was run. Index of the documentation will be `dev-docs/_build/html/index.html`.\n\nAfter making the project, you can build KML files to visualize the hexagon grid with `make kml`. The files will be placed in `KML`.\n\nTo build the documentation website, see the [website/](./website/) directory.\n\n## Usage\n\n### From the command line\n\nTo get the H3 index for some location:\n\n```\n./bin/latLngToCell --resolution 10 --latitude 40.689167 --longitude -74.044444\n```\n\n10 is the H3 resolution, between 0 (coarsest) and 15 (finest). The coordinates entered are the latitude and longitude, in degrees, you want the index for (these coordinates are the Statue of Liberty).  You should get an H3 index as output, like `8a2a1072b59ffff`.\n\nYou can then take this index and get some information about it, for example:\n\n```\n./bin/cellToBoundary --index 8a2a1072b59ffff\n```\n\nThis will produce the vertices of the hexagon at this location:\n\n```\n8a2a1072b59ffff\n{\n   40.690058601 -74.044151762\n   40.689907695 -74.045061792\n   40.689270936 -74.045341418\n   40.688785091 -74.044711031\n   40.688935993 -74.043801021\n   40.689572744 -74.043521377\n}\n```\n\nYou can get the center coordinate of the hexagon like so:\n\n```\n./bin/cellToLatLng --index 8a2a1072b59ffff\n```\n\nThis will produce some coordinate:\n\n```\n40.6894218437 -74.0444313999\n```\n\n### From C\n\nThe above features of H3 can also be used from C. For example, you can compile and run [examples/index.c](./examples/index.c) like so:\n\n```\ncc -lh3 examples/index.c -o example\n./example\n```\n\nYou should get output like:\n\n```\nThe index is: 8a2a1072b59ffff\nBoundary vertex #0: 40.690059, -74.044152\nBoundary vertex #1: 40.689908, -74.045062\nBoundary vertex #2: 40.689271, -74.045341\nBoundary vertex #3: 40.688785, -74.044711\nBoundary vertex #4: 40.688936, -74.043801\nBoundary vertex #5: 40.689573, -74.043521\nCenter coordinates: 40.689422, -74.044431\n```\n\n## Contributing\n\nPull requests and Github issues are welcome. Please see our [contributing guide](./CONTRIBUTING.md) for more information.\n\nBefore we can merge your changes, you must agree to the [Uber Contributor License Agreement](https://cla-assistant.io/uber/h3).\n\n## Legal and Licensing\n\nH3 is licensed under the [Apache 2.0 License](./LICENSE).\n\nDGGRID\nCopyright (c) 2015 Southern Oregon University\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 0.5791015625,
          "content": "# Release Process\n\n1. Create a PR \"Preparing for release X.Y.Z\" against master branch\n    * Alter CHANGELOG.md from `[Unreleased]` to `[X.Y.Z] YYYY-MM-DD`\n    * Run `make update-version` and give `X.Y.Z` when prompted (this updates\n      the VERSION file, so don't change it manually)\n    * Check that all merges that need to be in the changelog are present\n    * Get reviews and merge the PR\n\n2. Create a release \"Release X.Y.Z\" on Github\n    * Create Tag `vX.Y.Z`\n    * Copy CHANGELOG.md into the release notes\n\n3. Publish the website to display the latest docs\n    * `make publish-website`\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "4.2.0\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}