{
  "metadata": {
    "timestamp": 1736710373167,
    "page": 194,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "memononen/nanovg",
      "stars": 5242,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.251953125,
          "content": "## Compiled source #\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.so\ntest\n\n## Logs and databases #\n*.log\n*.sql\n*.sqlite\n\n## OS generated files #\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n\n## Build dir\nbuild/*\n\n## xcode specific\n*xcuserdata*\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.8564453125,
          "content": "Copyright (c) 2013 Mikko Mononen memon@inside.org\r\n\r\nThis software is provided 'as-is', without any express or implied\r\nwarranty.  In no event will the authors be held liable for any damages\r\narising from the use of this software.\r\n\r\nPermission is granted to anyone to use this software for any purpose,\r\nincluding commercial applications, and to alter it and redistribute it\r\nfreely, subject to the following restrictions:\r\n\r\n1. The origin of this software must not be misrepresented; you must not\r\nclaim that you wrote the original software. If you use this software\r\nin a product, an acknowledgment in the product documentation would be\r\nappreciated but is not required.\r\n2. Altered source versions must be plainly marked as such, and must not be\r\nmisrepresented as being the original software.\r\n3. This notice may not be removed or altered from any source distribution.\r\n\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7998046875,
          "content": "*This project is not actively maintained.*\n\nNanoVG\n==========\n\nNanoVG is small antialiased vector graphics rendering library for OpenGL. It has lean API modeled after HTML5 canvas API. It is aimed to be a practical and fun toolset for building scalable user interfaces and visualizations.\n\n## Screenshot\n\n![screenshot of some text rendered witht the sample program](/example/screenshot-01.png?raw=true)\n\nUsage\n=====\n\nThe NanoVG API is modeled loosely on HTML5 canvas API. If you know canvas, you're up to speed with NanoVG in no time.\n\n## Creating drawing context\n\nThe drawing context is created using platform specific constructor function. If you're using the OpenGL 2.0 back-end the context is created as follows:\n```C\n#define NANOVG_GL2_IMPLEMENTATION\t// Use GL2 implementation.\n#include \"nanovg_gl.h\"\n...\nstruct NVGcontext* vg = nvgCreateGL2(NVG_ANTIALIAS | NVG_STENCIL_STROKES);\n```\n\nThe first parameter defines flags for creating the renderer.\n\n- `NVG_ANTIALIAS` means that the renderer adjusts the geometry to include anti-aliasing. If you're using MSAA, you can omit this flags. \n- `NVG_STENCIL_STROKES` means that the render uses better quality rendering for (overlapping) strokes. The quality is mostly visible on wider strokes. If you want speed, you can omit this flag.\n\nCurrently there is an OpenGL back-end for NanoVG: [nanovg_gl.h](/src/nanovg_gl.h) for OpenGL 2.0, OpenGL ES 2.0, OpenGL 3.2 core profile and OpenGL ES 3. The implementation can be chosen using a define as in above example. See the header file and examples for further info. \n\n*NOTE:* The render target you're rendering to must have stencil buffer.\n\n## Drawing shapes with NanoVG\n\nDrawing a simple shape using NanoVG consists of four steps: 1) begin a new shape, 2) define the path to draw, 3) set fill or stroke, 4) and finally fill or stroke the path.\n\n```C\nnvgBeginPath(vg);\nnvgRect(vg, 100,100, 120,30);\nnvgFillColor(vg, nvgRGBA(255,192,0,255));\nnvgFill(vg);\n```\n\nCalling `nvgBeginPath()` will clear any existing paths and start drawing from blank slate. There are number of number of functions to define the path to draw, such as rectangle, rounded rectangle and ellipse, or you can use the common moveTo, lineTo, bezierTo and arcTo API to compose the paths step by step.\n\n## Understanding Composite Paths\n\nBecause of the way the rendering backend is build in NanoVG, drawing a composite path, that is path consisting from multiple paths defining holes and fills, is a bit more involved. NanoVG uses even-odd filling rule and by default the paths are wound in counter clockwise order. Keep that in mind when drawing using the low level draw API. In order to wind one of the predefined shapes as a hole, you should call `nvgPathWinding(vg, NVG_HOLE)`, or `nvgPathWinding(vg, NVG_CW)` _after_ defining the path.\n\n``` C\nnvgBeginPath(vg);\nnvgRect(vg, 100,100, 120,30);\nnvgCircle(vg, 120,120, 5);\nnvgPathWinding(vg, NVG_HOLE);\t// Mark circle as a hole.\nnvgFillColor(vg, nvgRGBA(255,192,0,255));\nnvgFill(vg);\n```\n\n## Rendering is wrong, what to do?\n\n- make sure you have created NanoVG context using one of the `nvgCreatexxx()` calls\n- make sure you have initialised OpenGL with *stencil buffer*\n- make sure you have cleared stencil buffer\n- make sure all rendering calls happen between `nvgBeginFrame()` and `nvgEndFrame()`\n- to enable more checks for OpenGL errors, add `NVG_DEBUG` flag to `nvgCreatexxx()`\n- if the problem still persists, please report an issue!\n\n## OpenGL state touched by the backend\n\nThe OpenGL back-end touches following states:\n\nWhen textures are uploaded or updated, the following pixel store is set to defaults: `GL_UNPACK_ALIGNMENT`, `GL_UNPACK_ROW_LENGTH`, `GL_UNPACK_SKIP_PIXELS`, `GL_UNPACK_SKIP_ROWS`. Texture binding is also affected. Texture updates can happen when the user loads images, or when new font glyphs are added. Glyphs are added as needed between calls to  `nvgBeginFrame()` and `nvgEndFrame()`.\n\nThe data for the whole frame is buffered and flushed in `nvgEndFrame()`. The following code illustrates the OpenGL state touched by the rendering code:\n```C\n\tglUseProgram(prog);\n\tglBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n\tglEnable(GL_CULL_FACE);\n\tglCullFace(GL_BACK);\n\tglFrontFace(GL_CCW);\n\tglEnable(GL_BLEND);\n\tglDisable(GL_DEPTH_TEST);\n\tglDisable(GL_SCISSOR_TEST);\n\tglColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);\n\tglStencilMask(0xffffffff);\n\tglStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);\n\tglStencilFunc(GL_ALWAYS, 0, 0xffffffff);\n\tglActiveTexture(GL_TEXTURE0);\n\tglBindBuffer(GL_UNIFORM_BUFFER, buf);\n\tglBindVertexArray(arr);\n\tglBindBuffer(GL_ARRAY_BUFFER, buf);\n\tglBindTexture(GL_TEXTURE_2D, tex);\n\tglUniformBlockBinding(... , GLNVG_FRAG_BINDING);\n```\n\n## API Reference\n\nSee the header file [nanovg.h](/src/nanovg.h) for API reference.\n\n## Ports\n\n- [DX11 port](https://github.com/cmaughan/nanovg) by [Chris Maughan](https://github.com/cmaughan)\n- [Metal port](https://github.com/ollix/MetalNanoVG) by [Olli Wang](https://github.com/olliwang)\n- [bgfx port](https://github.com/bkaradzic/bgfx/tree/master/examples/20-nanovg) by [Branimir Karadžić](https://github.com/bkaradzic)\n\n## Projects using NanoVG\n\n- [Processing API simulation by vinjn](https://github.com/island-org/island/blob/master/include/sketch2d.h)\n- [NanoVG for .NET, C# P/Invoke binding](https://github.com/sbarisic/nanovg_dotnet)\n\n## License\nThe library is licensed under [zlib license](LICENSE.txt)\nFonts used in examples:\n- Roboto licensed under [Apache license](http://www.apache.org/licenses/LICENSE-2.0)\n- Entypo licensed under CC BY-SA 4.0.\n- Noto Emoji licensed under [SIL Open Font License, Version 1.1](http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL)\n\n## Discussions\n[NanoVG mailing list](https://groups.google.com/forum/#!forum/nanovg)\n\n## Links\nUses [stb_truetype](http://nothings.org) (or, optionally, [freetype](http://freetype.org)) for font rendering.\nUses [stb_image](http://nothings.org) for image loading.\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "obsolete",
          "type": "tree",
          "content": null
        },
        {
          "name": "premake4.lua",
          "type": "blob",
          "size": 6.5556640625,
          "content": "\nlocal action = _ACTION or \"\"\n\nsolution \"nanovg\"\n\tlocation ( \"build\" )\n\tconfigurations { \"Debug\", \"Release\" }\n\tplatforms {\"native\", \"x64\", \"x32\"}\n\n   \tproject \"nanovg\"\n\t\tlanguage \"C\"\n\t\tkind \"StaticLib\"\n\t\tincludedirs { \"src\" }\n\t\tfiles { \"src/*.c\" }\n\t\ttargetdir(\"build\")\n\t\tdefines { \"_CRT_SECURE_NO_WARNINGS\" } --,\"FONS_USE_FREETYPE\" } Uncomment to compile with FreeType support\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_gl2\"\n\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tfiles { \"example/example_gl2.c\", \"example/demo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\t\t\t defines { \"NANOVG_GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_gl3\"\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tfiles { \"example/example_gl3.c\", \"example/demo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\t\t\t defines { \"NANOVG_GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_gl2_msaa\"\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tdefines { \"DEMO_MSAA\" }\n\t\tfiles { \"example/example_gl2.c\", \"example/demo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\t\t\t defines { \"NANOVG_GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_gl3_msaa\"\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tdefines { \"DEMO_MSAA\" }\n\t\tfiles { \"example/example_gl3.c\", \"example/demo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\t\t\t defines { \"NANOVG_GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_fbo\"\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tfiles { \"example/example_fbo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_gles2\"\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tfiles { \"example/example_gles2.c\", \"example/demo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n\n\tproject \"example_gles3\"\n\t\tkind \"ConsoleApp\"\n\t\tlanguage \"C\"\n\t\tfiles { \"example/example_gles3.c\", \"example/demo.c\", \"example/perf.c\" }\n\t\tincludedirs { \"src\", \"example\" }\n\t\ttargetdir(\"build\")\n\t\tlinks { \"nanovg\" }\n\n\t\tconfiguration { \"linux\" }\n\t\t\t linkoptions { \"`pkg-config --libs glfw3`\" }\n\t\t\t links { \"GL\", \"GLU\", \"m\", \"GLEW\" }\n\n\t\tconfiguration { \"windows\" }\n\t\t\t links { \"glfw3\", \"gdi32\", \"winmm\", \"user32\", \"GLEW\", \"glu32\",\"opengl32\", \"kernel32\" }\n\t\t\t defines { \"NANOVG_GLEW\", \"_CRT_SECURE_NO_WARNINGS\" }\n\n\t\tconfiguration { \"macosx\" }\n\t\t\tlinks { \"glfw3\" }\n\t\t\tlinkoptions { \"-framework OpenGL\", \"-framework Cocoa\", \"-framework IOKit\", \"-framework CoreVideo\", \"-framework Carbon\" }\n\n\t\tconfiguration \"Debug\"\n\t\t\tdefines { \"DEBUG\" }\n\t\t\tflags { \"Symbols\", \"ExtraWarnings\"}\n\n\t\tconfiguration \"Release\"\n\t\t\tdefines { \"NDEBUG\" }\n\t\t\tflags { \"Optimize\", \"ExtraWarnings\"}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}