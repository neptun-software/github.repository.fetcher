{
  "metadata": {
    "timestamp": 1736710368518,
    "page": 182,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CameraKit/camerakit-android",
      "stars": 5372,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6044921875,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# Intellij\n*.iml\n.idea/workspace.xml\n\n# Eclipse\n*.project\n*.classpath\n*.prefs\n\n# Keystore files\n*.jks\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n.idea\n.DS_Store\n\n"
        },
        {
          "name": ".repo",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "Copyright 2018 CameraKit (https://camerakit.website)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.60546875,
          "content": "<p align=\"center\">\n    <a href=\"https://camerakit.io\" target=\"_blank\">\n        <img alt='CameraKit Header' src='.repo/gh-readme-header.svg' />\n    </a>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://play.google.com/store/apps/details?id=com.wonderkiln.camerakit.demo\" target=\"_blank\">\n        <img alt='Google Play Link' height=\"42px\" src='.repo/gh-readme-googleplay-demo-button.svg'/>\n    </a>\n        <a href=\"https://spectrum.chat/camerakit/\">\n        <img alt=\"Join Spectrum\" height=\"42px\" src=\".repo/gh-readme-spectrum-button.svg\" >\n    </a>\n    <a href=\"https://buddy.works/\" target=\"_blank\">\n        <img alt='Buddy.Works' height=\"41px\" src='https://assets.buddy.works/automated-dark.svg'/>\n    </a>\n</p>\n\nCameraKit helps you add reliable camera to your app quickly. Our open source camera platform provides consistent capture results, service that scales, and endless camera possibilities.\n\nWith CameraKit you are able to effortlessly do the following: \n\n- Image and video capture seamlessly working with the same preview session.\n- Automatic system permission handling.\n- Automatic preview scaling.\n  - Create a `CameraView` of any size (not just presets!).\n  - Automatic output cropping to match your `CameraView` bounds.\n- Multiple capture methods.\n  - `METHOD_STANDARD`: an image captured normally using the camera APIs.\n  - `METHOD_STILL`: a freeze frame of the `CameraView` preview (similar to SnapChat and Instagram) for devices with slower cameras.\n  - `METHOD_SPEED`: automatic capture method determination based on measured speed.\n- Built-in continuous focus.\n- Built-in tap to focus.\n- Built-in pinch to zoom.\n\n## Sponsored By\n<a href=\"https://www.expensify.com/\"><img alt=\"Expensify\" src=\".repo/gh-readme-expensify-logo.svg\" height=\"45px\" width=\"375px\" align=\"center\"></a>\n<a href=\"https://www.buddy.works/\"><img alt=\"Buddy.Works\" src=\".repo/gh-readme-buddyworks-logo.png\" height=\"100px\"  width=\"250px\" align=\"center\"></a>\n\n\n## Trusted By\n<a href=\"https://www.infitting.com/\"><img alt=\"InFitting\" src=\".repo/gh-readme-infitting-logo.svg\" height=\"30px\" width=\"110px\" align=\"center\"></a>\n<a href=\"https://www.goosechase.com/\"><img alt=\"GooseChase\" src=\".repo/gh-readme-goosechase-logo.svg\" height=\"30px\" width=\"175px\" align=\"center\"></a>\n<a href=\"https://www.alpha-apps.ae/\"><img alt=\"Alpha Apps\" src=\".repo/gh-readme-alphaapps-logo.png\" height=\"30px\" width=\"78px\" align=\"center\"></a>\n<a href=\"https://www.expensify.com/\"><img alt=\"Expensify\" src=\".repo/gh-readme-expensify-logo.svg\" height=\"26px\" width=\"220px\" align=\"center\"></a>\n\n&nbsp;\n\n# Get The Most From CameraKit\nThere are currently two versions of CameraKit that we support, `v1.0.0-beta3.X` and `v0.13.X`. \n\nIf photo is your only need, try out the latest and greatest CameraKit features with `v1.0.0-beta3.11`. Our `beta3.11` release does not yet support video, but that feature is coming! \n\nIn the meantime, if your application requires video we recommend sticking with `v0.13.4`; the latest stable release with video implementation.\n\n\n| Use Case | Version | Notes | Documentation Link |\n| --- | --- | --- | --- |\n| Photo only | `v1.0.0-beta3.11` | The latest and greatest CameraKit has to offer. Video support coming soon! | [camerakit.io/docs/beta3.11](https://camerakit.io/docs?v=1.0.0-beta3.10) |\n| Photo and Video | `v0.13.4` | Stable build with full photo and video support | [camerakit.io/docs/0.13.4](https://camerakit.io/docs?v=0.13.2) |\n\n\n## Documentation Site\nSetup instructions for `1.0.0-beta3.11` are below. To see the full documentation head over to our website, [camerakit.io/docs](https://camerakit.io/docs).\n\n\n## Setup\nTo include __CameraKit__ in your project, add the following to your `app` level `build.gradle`.\n```java\ndependencies {\n    implementation 'com.camerakit:camerakit:1.0.0-beta3.11'\n    implementation 'com.camerakit:jpegkit:0.1.0'\n    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0'\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'\n}\n```\n## Usage\nCreate a `CameraKitView` in your layout as follows:\n```\n<com.camerakit.CameraKitView\n    android:id=\"@+id/camera\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:adjustViewBounds=\"true\"\n    android:keepScreenOn=\"true\"   <!-- keep screen awake while CameraKitView is active -->\n    app:camera_flash=\"auto\"\n    app:camera_facing=\"back\"\n    app:camera_focus=\"continuous\"\n    app:camera_permissions=\"camera\" />\n```\n\nThen create a new `CameraKitView` object in your `Activity` and override the following methods.\n```java\nprivate CameraKitView cameraKitView;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    cameraKitView = findViewById(R.id.camera);\n}\n\n@Override\nprotected void onStart() {\n    super.onStart();\n    cameraKitView.onStart();\n}\n\n@Override\nprotected void onResume() {\n    super.onResume();\n    cameraKitView.onResume();\n}\n\n@Override\nprotected void onPause() {\n    cameraKitView.onPause();\n    super.onPause();\n}\n\n@Override\nprotected void onStop() {\n    cameraKitView.onStop();\n    super.onStop();\n}\n\n@Override\npublic void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    cameraKitView.onRequestPermissionsResult(requestCode, permissions, grantResults);\n}\n```\n## ProGuard\nIf using ProGuard, add the following rules:\n```\n-dontwarn com.google.android.gms.**\n-keepclasseswithmembers class com.camerakit.preview.CameraSurfaceView {\n    native <methods>;\n}\n```\n\n## License\nCameraKit is [MIT License](https://github.com/CameraKit/CameraKit-Android/blob/master/LICENSE)\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.6298828125,
          "content": "buildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.2.1'\n        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.0'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.1'\n    }\n}\n\nsubprojects { project ->\n    group = 'com.camerakit'\n    version = '1.0.0-beta3.11'\n\n    repositories {\n        google()\n        jcenter()\n    }\n\n    ext {\n        versions = [\n            minSdk     : 15,\n            targetSdk  : 28,\n            compileSdk : 28,\n        ]\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "camerakit",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy.sh",
          "type": "blob",
          "size": 0.0546875,
          "content": "#!/bin/bash\n\n./gradlew camerakit:deploySnapshot\n\nexit 0\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.1044921875,
          "content": "org.gradle.jvmargs=-Xmx1536m\nkotlin.coroutines=enable\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8642578125,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle openCamera up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to openCamera the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto operate\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto operate\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:operate\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0283203125,
          "content": "include ':app', ':camerakit'\n"
        }
      ]
    }
  ]
}