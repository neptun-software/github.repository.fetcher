{
  "metadata": {
    "timestamp": 1736710386341,
    "page": 209,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TelegramMessenger/MTProxy",
      "stars": 5047,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0087890625,
          "content": "objs\ndep\n"
        },
        {
          "name": "GPLv2",
          "type": "blob",
          "size": 0.9287109375,
          "content": "/*\n    This file is part of MTProto-proxy.\n\n    MTProto-proxy is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 2 of the License, or\n    (at your option) any later version.\n\n    MTProto-proxy is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with MTProto-proxy.  If not, see <http://www.gnu.org/licenses/>.\n\n    This program is released under the GPL with the additional exemption \n    that compiling, linking, and/or using OpenSSL is allowed.\n    You are free to remove this exemption from derived works.\n\n    Copyright 2014-2018 Telegram Messenger Inc\n\n*/\n\n"
        },
        {
          "name": "LGPLv2",
          "type": "blob",
          "size": 0.7861328125,
          "content": "/*\n    This file is part of MTProto-proxy Library.\n\n    MTProto-proxy Library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 2 of the License, or\n    (at your option) any later version.\n\n    MTProto-proxy Library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with MTProto-proxy Library.  If not, see <http://www.gnu.org/licenses/>.\n\n    Copyright 2014-2018 Telegram Messenger Inc\n\n*/\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.1474609375,
          "content": "OBJ\t=\tobjs\nDEP\t=\tdep\nEXE = ${OBJ}/bin\n\nCOMMIT := $(shell git log -1 --pretty=format:\"%H\")\n\nARCH =\nifeq ($m, 32)\nARCH = -m32\nendif\nifeq ($m, 64)\nARCH = -m64\nendif\n\nCFLAGS = $(ARCH) -O3 -std=gnu11 -Wall -mpclmul -march=core2 -mfpmath=sse -mssse3 -fno-strict-aliasing -fno-strict-overflow -fwrapv -DAES=1 -DCOMMIT=\\\"${COMMIT}\\\" -D_GNU_SOURCE=1 -D_FILE_OFFSET_BITS=64\nLDFLAGS = $(ARCH) -ggdb -rdynamic -lm -lrt -lcrypto -lz -lpthread -lcrypto\n\nLIB = ${OBJ}/lib\nCINCLUDE = -iquote common -iquote .\n\nLIBLIST = ${LIB}/libkdb.a\n\nPROJECTS = common jobs mtproto net crypto engine\n\nOBJDIRS := ${OBJ} $(addprefix ${OBJ}/,${PROJECTS}) ${EXE} ${LIB}\nDEPDIRS := ${DEP} $(addprefix ${DEP}/,${PROJECTS})\nALLDIRS := ${DEPDIRS} ${OBJDIRS}\n\n\n.PHONY:\tall clean \n\nEXELIST\t:= ${EXE}/mtproto-proxy\n\n\nOBJECTS\t=\t\\\n  ${OBJ}/mtproto/mtproto-proxy.o ${OBJ}/mtproto/mtproto-config.o ${OBJ}/net/net-tcp-rpc-ext-server.o\n\nDEPENDENCE_CXX\t\t:=\t$(subst ${OBJ}/,${DEP}/,$(patsubst %.o,%.d,${OBJECTS_CXX}))\nDEPENDENCE_STRANGE\t:=\t$(subst ${OBJ}/,${DEP}/,$(patsubst %.o,%.d,${OBJECTS_STRANGE}))\nDEPENDENCE_NORM\t:=\t$(subst ${OBJ}/,${DEP}/,$(patsubst %.o,%.d,${OBJECTS}))\n\nLIB_OBJS_NORMAL := \\\n\t${OBJ}/common/crc32c.o \\\n\t${OBJ}/common/pid.o \\\n\t${OBJ}/common/sha1.o \\\n\t${OBJ}/common/sha256.o \\\n\t${OBJ}/common/md5.o \\\n\t${OBJ}/common/resolver.o \\\n\t${OBJ}/common/parse-config.o \\\n\t${OBJ}/crypto/aesni256.o \\\n\t${OBJ}/jobs/jobs.o ${OBJ}/common/mp-queue.o \\\n\t${OBJ}/net/net-events.o ${OBJ}/net/net-msg.o ${OBJ}/net/net-msg-buffers.o \\\n\t${OBJ}/net/net-config.o ${OBJ}/net/net-crypto-aes.o ${OBJ}/net/net-crypto-dh.o ${OBJ}/net/net-timers.o \\\n\t${OBJ}/net/net-connections.o \\\n\t${OBJ}/net/net-rpc-targets.o \\\n\t${OBJ}/net/net-tcp-connections.o ${OBJ}/net/net-tcp-rpc-common.o ${OBJ}/net/net-tcp-rpc-client.o ${OBJ}/net/net-tcp-rpc-server.o \\\n\t${OBJ}/net/net-http-server.o \\\n\t${OBJ}/common/tl-parse.o ${OBJ}/common/common-stats.o \\\n\t${OBJ}/engine/engine.o ${OBJ}/engine/engine-signals.o \\\n\t${OBJ}/engine/engine-net.o \\\n\t${OBJ}/engine/engine-rpc.o \\\n\t${OBJ}/engine/engine-rpc-common.o \\\n\t${OBJ}/net/net-thread.o ${OBJ}/net/net-stats.o ${OBJ}/common/proc-stat.o \\\n\t${OBJ}/common/kprintf.o \\\n\t${OBJ}/common/precise-time.o ${OBJ}/common/cpuid.o \\\n\t${OBJ}/common/server-functions.o ${OBJ}/common/crc32.o \\\n\nLIB_OBJS := ${LIB_OBJS_NORMAL}\n\nDEPENDENCE_LIB\t:=\t$(subst ${OBJ}/,${DEP}/,$(patsubst %.o,%.d,${LIB_OBJS}))\n\nDEPENDENCE_ALL\t\t:=\t${DEPENDENCE_NORM} ${DEPENDENCE_STRANGE} ${DEPENDENCE_LIB}\n\nOBJECTS_ALL\t\t:=\t${OBJECTS} ${LIB_OBJS}\n\nall:\t${ALLDIRS} ${EXELIST} \ndirs: ${ALLDIRS}\ncreate_dirs_and_headers: ${ALLDIRS} \n\n${ALLDIRS}:\t\n\t@test -d $@ || mkdir -p $@\n\n-include ${DEPENDENCE_ALL}\n\n${OBJECTS}: ${OBJ}/%.o: %.c | create_dirs_and_headers\n\t${CC} ${CFLAGS} ${CINCLUDE} -c -MP -MD -MF ${DEP}/$*.d -MQ ${OBJ}/$*.o -o $@ $<\n\n${LIB_OBJS_NORMAL}: ${OBJ}/%.o: %.c | create_dirs_and_headers\n\t${CC} ${CFLAGS} -fpic ${CINCLUDE} -c -MP -MD -MF ${DEP}/$*.d -MQ ${OBJ}/$*.o -o $@ $<\n\n${EXELIST}: ${LIBLIST}\n\n${EXE}/mtproto-proxy:\t${OBJ}/mtproto/mtproto-proxy.o ${OBJ}/mtproto/mtproto-config.o ${OBJ}/net/net-tcp-rpc-ext-server.o\n\t${CC} -o $@ $^ ${LIB}/libkdb.a ${LDFLAGS}\n\n${LIB}/libkdb.a: ${LIB_OBJS}\n\trm -f $@ && ar rcs $@ $^\n\nclean:\n\trm -rf ${OBJ} ${DEP} ${EXE} || true\n\nforce-clean: clean\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.384765625,
          "content": "# MTProxy\nSimple MT-Proto proxy\n\n## Building\nInstall dependencies, you would need common set of tools for building from source, and development packages for `openssl` and `zlib`.\n\nOn Debian/Ubuntu:\n```bash\napt install git curl build-essential libssl-dev zlib1g-dev\n```\nOn CentOS/RHEL:\n```bash\nyum install openssl-devel zlib-devel\nyum groupinstall \"Development Tools\"\n```\n\nClone the repo:\n```bash\ngit clone https://github.com/TelegramMessenger/MTProxy\ncd MTProxy\n```\n\nTo build, simply run `make`, the binary will be in `objs/bin/mtproto-proxy`:\n\n```bash\nmake && cd objs/bin\n```\n\nIf the build has failed, you should run `make clean` before building it again.\n\n## Running\n1. Obtain a secret, used to connect to telegram servers.\n```bash\ncurl -s https://core.telegram.org/getProxySecret -o proxy-secret\n```\n2. Obtain current telegram configuration. It can change (occasionally), so we encourage you to update it once per day.\n```bash\ncurl -s https://core.telegram.org/getProxyConfig -o proxy-multi.conf\n```\n3. Generate a secret to be used by users to connect to your proxy.\n```bash\nhead -c 16 /dev/urandom | xxd -ps\n```\n4. Run `mtproto-proxy`:\n```bash\n./mtproto-proxy -u nobody -p 8888 -H 443 -S <secret> --aes-pwd proxy-secret proxy-multi.conf -M 1\n```\n... where:\n- `nobody` is the username. `mtproto-proxy` calls `setuid()` to drop privilegies.\n- `443` is the port, used by clients to connect to the proxy.\n- `8888` is the local port. You can use it to get statistics from `mtproto-proxy`. Like `wget localhost:8888/stats`. You can only get this stat via loopback.\n- `<secret>` is the secret generated at step 3. Also you can set multiple secrets: `-S <secret1> -S <secret2>`.\n- `proxy-secret` and `proxy-multi.conf` are obtained at steps 1 and 2.\n- `1` is the number of workers. You can increase the number of workers, if you have a powerful server.\n\nAlso feel free to check out other options using `mtproto-proxy --help`.\n\n5. Generate the link with following schema: `tg://proxy?server=SERVER_NAME&port=PORT&secret=SECRET` (or let the official bot generate it for you).\n6. Register your proxy with [@MTProxybot](https://t.me/MTProxybot) on Telegram.\n7. Set received tag with arguments: `-P <proxy tag>`\n8. Enjoy.\n\n## Random padding\nDue to some ISPs detecting MTProxy by packet sizes, random padding is\nadded to packets if such mode is enabled.\n\nIt's only enabled for clients which request it.\n\nAdd `dd` prefix to secret (`cafe...babe` => `ddcafe...babe`) to enable\nthis mode on client side.\n\n## Systemd example configuration\n1. Create systemd service file (it's standard path for the most Linux distros, but you should check it before):\n```bash\nnano /etc/systemd/system/MTProxy.service\n```\n2. Edit this basic service (especially paths and params):\n```bash\n[Unit]\nDescription=MTProxy\nAfter=network.target\n\n[Service]\nType=simple\nWorkingDirectory=/opt/MTProxy\nExecStart=/opt/MTProxy/mtproto-proxy -u nobody -p 8888 -H 443 -S <secret> -P <proxy tag> <other params>\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n```\n3. Reload daemons:\n```bash\nsystemctl daemon-reload\n```\n4. Test fresh MTProxy service:\n```bash\nsystemctl restart MTProxy.service\n# Check status, it should be active\nsystemctl status MTProxy.service\n```\n5. Enable it, to autostart service after reboot:\n```bash\nsystemctl enable MTProxy.service\n```\n\n## Docker image\nTelegram is also providing [official Docker image](https://hub.docker.com/r/telegrammessenger/proxy/).\nNote: the image is outdated.\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "jobs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mtproto",
          "type": "tree",
          "content": null
        },
        {
          "name": "net",
          "type": "tree",
          "content": null
        },
        {
          "name": "vv",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}