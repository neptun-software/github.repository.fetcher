{
  "metadata": {
    "timestamp": 1736710273783,
    "page": 38,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "VirusTotal/yara",
      "stars": 8455,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.0732421875,
          "content": "# Build in C++17 mode without a custom CROSSTOOL\nbuild --cxxopt=-std=c++17\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 4.267578125,
          "content": "# clang-format configuration applied to all source files in this project.\n# Requires clang-format version 10.0.0 or newer.\n---\nLanguage: Cpp\nBasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: AlwaysBreak\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignConsecutiveMacros: true\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: true\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     true\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     true\n  BeforeElse:      true\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Allman\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: false\nIndentPPDirectives: None\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: \"^\\\nbegin_declarations|\\\nbegin_struct.*$\"\nMacroBlockEnd: \"^\\\nend_declarations|\\\nend_struct.*$\"\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Never\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 100\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 1000\nPointerAlignment: Left\nRawStringFormats:\n  - Language:        Cpp\n    Delimiters:\n      - cc\n      - CC\n      - cpp\n      - Cpp\n      - CPP\n      - 'c++'\n      - 'C++'\n    CanonicalDelimiter: ''\n    BasedOnStyle:    google\n  - Language:        TextProto\n    Delimiters:\n      - pb\n      - PB\n      - proto\n      - PROTO\n    EnclosingFunctions:\n      - EqualsProto\n      - EquivToProto\n      - PARSE_PARTIAL_TEXT_PROTO\n      - PARSE_TEST_PROTO\n      - PARSE_TEXT_PROTO\n      - ParseTextOrDie\n      - ParseTextProtoOrDie\n    CanonicalDelimiter: ''\n    BasedOnStyle:    google\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.123046875,
          "content": "# https://pete.akeo.ie/2010/12/that-darn-libtoolize-acconfigmacrodirm4.html\n*.sh text eol=lf\n*.ac text eol=lf\n*.am text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.94140625,
          "content": "# Generic auto-generated build files\n*~\n*.a\n*.gcda\n*.gcno\n*.gcov\n*.la\n*.lai\n*.lo\n*.Plo\n*.Po\n*.o\n*.so\n*.so.[0-9][0-9]*\n*.so.[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*\n*.Tpo\n*.m4\n*.dSYM\n.deps\n.libs\nINSTALL\nMakefile\nMakefile.in\nstamp-h1\n\n# Specific auto-generated build files\n/ABOUT-NLS\n/aclocal.m4\n/ar-lib\n/autom4te.cache/\n/build-aux\n/compile\n/config.guess\n/config.h\n/config.h.in\n/config.log\n/config.rpath\n/config.status\n/config.sub\n/configure\n/depcomp\n/install-sh\n/libtool\n/ltmain.sh\n/missing\n/test-driver\n/ylwrap\n/m4\n!/m4/acx_pthread.m4\n\n# Project specific files\n/yara\n/yarac\n/libyara/modules/.dirstamp\nlibyara/proc/.dirstamp\n/yara.pc\n/tests/.dirstamp\n\n# Linux and Mac files\n*.swp\n.DS_Store\n\n# Files generated by tests\ntest-*[^.c]\ntest-async\ntest-magic\ntest-rules.yarc\n\n# Bazel\nbazel-*\n\n# Visual Studio files\nRelease/\nDebug/\nwindows/*/.vs\nx64/\n*.obj\n*.suo\n*.sdf\n*.opendb\n*.opensdf\n*.VC.db\n\n# NuGet\nwindows/*/packages/\n*.trs\n*.log\n.dirstamp\n\n.idea/\n.vscode/\n\ntests/mapper\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.00390625,
          "content": "# Read the Docs configuration file for Sphinx projects\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n    # You can also specify other tool versions:\n    # nodejs: \"20\"\n    # rust: \"1.70\"\n    # golang: \"1.20\"\n\n# Build documentation in the \"docs/\" directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n  # You can configure Sphinx to use a different builder, for instance use the dirhtml builder for simpler URLs\n  # builder: \"dirhtml\"\n  # Fail on all warnings to avoid broken references\n  # fail_on_warning: true\n\n# Optionally build your docs in additional formats such as PDF and ePub\n# formats:\n#   - pdf\n#   - epub\n\n# Optional but recommended, declare the Python requirements required\n# to build your documentation\n# See https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.5556640625,
          "content": "# This is the official list of YARA authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n\n# Names should be added to this file as\n# Name or Organization <email address>\n# The email address is not required for organizations.\n\n# Please keep the list sorted.\n\nAvast\nGoogle Inc.\nHilko Bengen <bengen@hilluzination.de>\nJoachim Metz <joachim.metz@gmail.com>\nStefan Buehlmann <stefan.buehlmann@joebox.org>\nVictor M. Alvarez <plusvic@gmail.com>;<vmalvarez@virustotal.com>\nWesley Shields <wxs@atarininja.org>\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 4.375,
          "content": "# Copyright (c) 2019. The YARA Authors. All Rights Reserved.\n#\n# Redistribution and use in source and binary forms, with or without modification,\n# are permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice, this\n# list of conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n# this list of conditions and the following disclaimer in the documentation and/or\n# other materials provided with the distribution.\n#\n# 3. Neither the name of the copyright holder nor the names of its contributors\n# may be used to endorse or promote products derived from this software without\n# specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Bazel (http://bazel.io/) WORKSPACE file for YARA.\n\nload(\"@com_github_virustotal_yara//:bazel/yara.bzl\", \"yara_library\")\n\n# Just YARA's error codes. This is useful for sandboxing as it avoids pulling\n# in the whole library.\ncc_library(\n    name = \"yara_errors\",\n    hdrs = [\"libyara/include/yara/error.h\"],\n    visibility = [\"//visibility:public\"],\n)\n\n# Configuration setting for enabling profiling. Usage:\n#   bazel build ... --define yara_profiling=enabled\nconfig_setting(\n    name = \"profiling_enabled\",\n    values = {\"define\": \"yara_profiling=enabled\"},\n)\n\n# Configuration setting for using BoringSSL instead of OpenSSL. Notice that\n# some features related to PE signatures in the \"pe\" module will be disabled\n# because of missing functionality in BoringSSL. Usage:\n#   bazel build ... --define yara_crypto_library=boringssl\nconfig_setting(\n    name = \"crypto_library_boringssl\",\n    values = {\"define\": \"yara_crypto_library=boringssl\"},\n)\n\nyara_library(\n    name = \"libyara\",\n    crypto_libs = select({\n        \":crypto_library_boringssl\": [\"@boringssl//:crypto\"],\n        \"//conditions:default\": [\"@openssl//:crypto\"],\n    }),\n    defines = select({\n        \":profiling_enabled\": [\"YR_PROFILING_ENABLED\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \":crypto_library_boringssl\": [\"BORINGSSL\"],\n        \"//conditions:default\": [],\n    }),\n    modules = [\n        \"cuckoo\",\n        \"dex\",\n        \"dotnet\",\n        \"elf\",\n        \"hash\",\n        \"macho\",\n        \"magic\",\n        \"math\",\n        \"pe\",\n        \"tests\",\n        \"time\",\n        \"console\",\n        \"string\",\n    ],\n    modules_srcs = [\n        \"libyara/modules/cuckoo/cuckoo.c\",\n        \"libyara/modules/dex/dex.c\",\n        \"libyara/modules/dotnet/dotnet.c\",\n        \"libyara/modules/elf/elf.c\",\n        \"libyara/modules/hash/hash.c\",\n        \"libyara/modules/magic/magic.c\",\n        \"libyara/modules/macho/macho.c\",\n        \"libyara/modules/math/math.c\",\n        \"libyara/modules/pe/pe.c\",\n        \"libyara/modules/pe/pe_utils.c\",\n        \"libyara/modules/tests/tests.c\",\n        \"libyara/modules/time/time.c\",\n        \"libyara/modules/console/console.c\",\n        \"libyara/modules/string/string.c\",\n    ],\n    deps = [\n        \"@jansson\",\n        \"@magic\",\n    ],\n)\n\n# Code shared by the command-line tools.\ncc_library(\n    name = \"cli_shared\",\n    srcs = [\n        \"cli/args.c\",\n        \"cli/common.c\",\n        \"cli/threading.c\",\n    ],\n    hdrs = [\n        \"cli/args.h\",\n        \"cli/common.h\",\n        \"cli/threading.h\",\n        \"cli/unicode.h\",\n    ],\n    deps = [\":libyara\"],\n)\n\n# YARA command-line tool\ncc_binary(\n    name = \"yara\",\n    srcs = [\"cli/yara.c\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cli_shared\",\n        \":libyara\",\n    ],\n)\n\n# YARA compiler\ncc_binary(\n    name = \"yarac\",\n    srcs = [\"cli/yarac.c\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cli_shared\",\n        \":libyara\",\n    ],\n)\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.587890625,
          "content": "# This is the official list of people who can contribute\n# (and typically have contributed) code to the YARA repository.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n#\n# The submission process automatically checks to make sure\n# that people submitting code are listed in this file (by email address).\n#\n# Names should be added to this file only after verifying that\n# the individual or the individual's organization has agreed to\n# the appropriate Contributor License Agreement, found here:\n#\n#     http://code.google.com/legal/individual-cla-v1.0.html\n#     http://code.google.com/legal/corporate-cla-v1.0.html\n#\n# The agreement for individuals can be filled out on the web.\n#\n# When adding J Random Contributor's name to this file,\n# either J's name or J's organization's name should be\n# added to the AUTHORS file, depending on whether the\n# individual or corporate CLA was used.\n\n# Names should be added to this file like so:\n#     Name <email address>\n\n# Please keep the list sorted.\n\nAnthony Desnos <adesnos@google.com>\nAntonio Vargas Gonzalez <winden@google.com>\nChristian Blichmann <cblichmann@google.com>\nHilko Bengen <bengen@hilluzination.de>\nJoachim Metz <joachim.metz@gmail.com>\nKarel Hajek <houndthe@protonmail.com>\nKarl Hiramoto <karl.hiramoto@virustotal.com>\nMike Wiacek <mjwiacek@google.com>\nShane Huntley <shuntley@google.com>\nStefan Buehlmann <stefan.buehlmann@joebox.org>\nVictor M. Alvarez <plusvic@gmail.com>;<vmalvarez@virustotal.com>\nWesley Shields <wxs@atarininja.org>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.4580078125,
          "content": "Copyright (c) 2007-2016. The YARA Authors. All Rights Reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 10.3203125,
          "content": "# ABI_VERSION is passed to libtool as --version-number $(ABI_VERSION). This is\n# not related to YARA's release version, this is used for tracking changes in\n# the ABI, not in the project as a whole.\n#\n# The three number mean [current]:[revision]:[age], and they should updated as\n# follow:\n#\n# 1. With every release increment \"revision\".\n#\n# 2. If any interfaces have been added, removed, or changed since the last\n#    update, increment \"current\" and set \"revision\" to 0.\n#\n# 3. If the changes in the interface were backward compatible (i.e: only adding\n#    new APIs) increment \"age\", or set it to 0 if otherwise.\n#\n# See https://autotools.io/libtool/version.html for more details.\n#\nABI_VERSION = 10:0:0\n\nAM_CFLAGS=-Wall -D_GNU_SOURCE -I$(srcdir)/libyara/include\n\n#\n# When bison is used in POSIX yacc emulation mode (-y/--yacc option) it\n# produces warnings if we use Bison-specific features that are not supported\n# by yacc. With -Wno-yacc we turn off those warnings. Ideally we should call\n# bison without the -y/--yacc option, but autoconf insists on using bison in\n# yacc compatibility mode because of AC_PROG_YACC, and AC_PROG_BISON doesn't\n# exist.\n#\nAM_YFLAGS=-d -Wno-yacc\n\nif GCOV\n\ncheck:\n\t@tests/gcov-summary\n\nMOSTLYCLEANFILES = {cli,tests,libyara,libyara/proc,libyara/modules/*}/*.gc{no,da,ov}\nAM_CFLAGS+=-O0 -g -ftest-coverage -fprofile-arcs\n\nelse\n\nif DEBUG\nAM_CFLAGS+=-g -fno-omit-frame-pointer\nendif\n\nif OPTIMIZATION\nAM_CFLAGS+=-O3\nelse\nAM_CFLAGS+=-O0\nendif\n\nendif\n\nif ADDRESS_SANITIZER\nAM_CFLAGS+=-fsanitize=address\nendif\n\nif UB_SANITIZER\nAM_CFLAGS+=-fsanitize=undefined -fno-sanitize-recover=undefined\nendif\n\nif GCC\nAM_CFLAGS+=-fvisibility=hidden\nendif\n\nACLOCAL_AMFLAGS=-I m4\n\n# Rules for generating YARA modules from .proto files. For each .proto file\n# three files are generated: .c, .pb-c.c, and .pb-c.h. The .c file is generated\n# by protoc-gen-yara and the other two by protoc-gen-c. This is done only if\n# protoc is found, if not, files already in the repository are used instead\n# of generating fresh ones from the .proto file.\n#\nif PROTOC\n# SUFFIXES = .proto .pb-c.c .pb-c.h .c\n.proto.pb-c.c:\n\t\t$(PROTOC) --c_out=$(builddir) $^ -Ilibyara/pb/ -I=$(srcdir)\n\n.proto.pb-c.h:\n\t\t$(PROTOC) --c_out=$(builddir) $^ -Ilibyara/pb/ -I=$(srcdir)\n\n.proto.c:\n\t\t$(PROTOC) --c_out=$(builddir) $^ -Ilibyara/pb/ -I=$(srcdir)\nendif\n\nMODULES =  libyara/modules/tests/tests.c\n\nMODULES += libyara/modules/elf/elf.c\n\nMODULES += libyara/modules/math/math.c\n\nMODULES += libyara/modules/time/time.c\n\nMODULES += libyara/modules/pe/pe.c\nMODULES += libyara/modules/pe/pe_utils.c\n\nMODULES += libyara/modules/console/console.c\n\nMODULES += libyara/modules/string/string.c\n\nif CUCKOO_MODULE\nMODULES += libyara/modules/cuckoo/cuckoo.c\nendif\n\nif MAGIC_MODULE\nMODULES += libyara/modules/magic/magic.c\nendif\n\nif HASH_MODULE\nMODULES += libyara/modules/hash/hash.c\nendif\n\nif DOTNET_MODULE\nMODULES += libyara/modules/dotnet/dotnet.c\nendif\n\nif MACHO_MODULE\nMODULES += libyara/modules/macho/macho.c\nendif\n\nif DEX_MODULE\nMODULES += libyara/modules/dex/dex.c\nendif\n\nif PB_TESTS_MODULE\nMODULES += libyara/modules/pb_tests/pb_tests.c\nMODULES += libyara/modules/pb_tests/pb_tests.pb-c.c\nendif\n\nif AUTHENTICODE_MODULE\nMODULES += libyara/modules/pe/authenticode-parser/authenticode.c\nMODULES += libyara/modules/pe/authenticode-parser/certificate.c\nMODULES += libyara/modules/pe/authenticode-parser/helper.c\nMODULES += libyara/modules/pe/authenticode-parser/countersignature.c\nMODULES += libyara/modules/pe/authenticode-parser/structs.c\nendif\n\n#\n# Add your modules here:\n#\n# MODULES += libyara/modules/yourmodule.c\n#\n\ninclude_HEADERS = libyara/include/yara.h\n\nyaraincludedir = $(includedir)/yara\nyarainclude_HEADERS = \\\n\tlibyara/include/yara/ahocorasick.h \\\n\tlibyara/include/yara/arena.h \\\n\tlibyara/include/yara/atoms.h \\\n\tlibyara/include/yara/base64.h \\\n\tlibyara/include/yara/bitmask.h \\\n\tlibyara/include/yara/compiler.h \\\n\tlibyara/include/yara/error.h \\\n\tlibyara/include/yara/exec.h \\\n\tlibyara/include/yara/exefiles.h \\\n\tlibyara/include/yara/filemap.h \\\n\tlibyara/include/yara/hash.h \\\n\tlibyara/include/yara/integers.h \\\n\tlibyara/include/yara/libyara.h \\\n\tlibyara/include/yara/limits.h \\\n\tlibyara/include/yara/mem.h \\\n\tlibyara/include/yara/modules.h \\\n\tlibyara/include/yara/notebook.h \\\n\tlibyara/include/yara/object.h \\\n\tlibyara/include/yara/parser.h \\\n\tlibyara/include/yara/proc.h \\\n\tlibyara/include/yara/re.h \\\n\tlibyara/include/yara/rules.h \\\n\tlibyara/include/yara/scan.h \\\n\tlibyara/include/yara/scanner.h \\\n\tlibyara/include/yara/simple_str.h \\\n\tlibyara/include/yara/sizedstr.h \\\n\tlibyara/include/yara/stack.h \\\n\tlibyara/include/yara/stopwatch.h \\\n\tlibyara/include/yara/stream.h \\\n\tlibyara/include/yara/strutils.h \\\n\tlibyara/include/yara/threading.h \\\n\tlibyara/include/yara/types.h \\\n\tlibyara/include/yara/unaligned.h \\\n\tlibyara/include/yara/utils.h\n\nnoinst_HEADERS = \\\n\tlibyara/crypto.h \\\n\tlibyara/exception.h \\\n\tlibyara/include/yara/dotnet.h \\\n\tlibyara/include/yara/elf.h \\\n\tlibyara/include/yara/endian.h \\\n\tlibyara/include/yara/globals.h \\\n\tlibyara/include/yara/hex_lexer.h \\\n\tlibyara/include/yara/lexer.h \\\n\tlibyara/include/yara/pe.h \\\n\tlibyara/include/yara/pe_utils.h \\\n\tlibyara/include/yara/re_lexer.h \\\n\tlibyara/modules/module_list\n\ndist_noinst_DATA = libyara/pb/yara.proto\n\nlib_LTLIBRARIES = libyara.la\n\nlibyara_la_CFLAGS = $(AM_CFLAGS) -I$(srcdir)/libyara\nlibyara_la_LDFLAGS = -version-number $(ABI_VERSION)\n\nBUILT_SOURCES = \\\n\tlibyara/lexer.c \\\n\tlibyara/hex_lexer.c \\\n\tlibyara/re_lexer.c \\\n\tlibyara/grammar.c libyara/grammar.h \\\n\tlibyara/hex_grammar.c libyara/hex_grammar.h \\\n\tlibyara/re_grammar.c libyara/re_grammar.h\n\nlibyara_la_SOURCES = \\\n\t$(MODULES) \\\n\tlibyara/grammar.y \\\n\tlibyara/ahocorasick.c \\\n\tlibyara/arena.c \\\n\tlibyara/atoms.c \\\n\tlibyara/base64.c \\\n\tlibyara/bitmask.c \\\n\tlibyara/compiler.c \\\n\tlibyara/endian.c \\\n\tlibyara/exec.c \\\n\tlibyara/exefiles.c \\\n\tlibyara/filemap.c \\\n\tlibyara/hash.c \\\n\tlibyara/hex_grammar.y \\\n\tlibyara/hex_lexer.l \\\n\tlibyara/lexer.l \\\n\tlibyara/libyara.c \\\n\tlibyara/mem.c \\\n\tlibyara/modules.c \\\n\tlibyara/notebook.c \\\n\tlibyara/object.c \\\n\tlibyara/parser.c \\\n\tlibyara/proc.c \\\n\tlibyara/re.c \\\n\tlibyara/re_grammar.y \\\n\tlibyara/re_lexer.l \\\n\tlibyara/rules.c \\\n\tlibyara/scan.c \\\n\tlibyara/scanner.c \\\n\tlibyara/simple_str.c \\\n\tlibyara/sizedstr.c \\\n\tlibyara/stack.c \\\n\tlibyara/stopwatch.c \\\n\tlibyara/strutils.c \\\n\tlibyara/stream.c \\\n\tlibyara/tlshc/tlsh.c \\\n\tlibyara/tlshc/tlsh_impl.c \\\n\tlibyara/tlshc/tlsh_util.c \\\n\tlibyara/threading.c\n\n\nif USE_WINDOWS_PROC\nlibyara_la_SOURCES += libyara/proc/windows.c\nendif\n\nif USE_LINUX_PROC\nlibyara_la_SOURCES += libyara/proc/linux.c\nendif\n\nif USE_FREEBSD_PROC\nlibyara_la_SOURCES += libyara/proc/freebsd.c\nendif\n\nif USE_OPENBSD_PROC\nlibyara_la_SOURCES += libyara/proc/openbsd.c\nendif\n\nif USE_MACH_PROC\nlibyara_la_SOURCES += libyara/proc/mach.c\nendif\n\nif USE_NO_PROC\nlibyara_la_SOURCES += libyara/proc/none.c\nendif\n\npkgconfigdir = $(libdir)/pkgconfig\nnodist_pkgconfig_DATA = yara.pc\n\nbin_PROGRAMS = yara yarac\n\nyara_SOURCES = \\\n  cli/args.c \\\n  cli/args.h \\\n  cli/common.c \\\n  cli/common.h \\\n  cli/threading.c \\\n  cli/threading.h \\\n  cli/yara.c\n\nyara_LDADD = libyara.la\n\nyarac_SOURCES = \\\n   cli/args.c \\\n   cli/args.h \\\n   cli/common.c \\\n   cli/common.h \\\n   cli/yarac.c\n\nyarac_LDADD = libyara.la\n\ntests_mapper_SOURCES = tests/mapper.c\ntests_mapper_CFLAGS = -O0\n\ntest_alignment_SOURCES = tests/test-alignment.c tests/util.c\ntest_alignment_LDADD = libyara.la\ntest_alignment_LDFLAGS = -static\ntest_arena_SOURCES = tests/test-arena.c tests/util.c\ntest_arena_LDADD = libyara.la\ntest_arena_LDFLAGS = -static\ntest_atoms_SOURCES = tests/test-atoms.c tests/util.c\ntest_atoms_LDADD = libyara.la\ntest_atoms_LDFLAGS = -static\ntest_rules_SOURCES = tests/test-rules.c tests/util.c\ntest_rules_LDADD = libyara.la\ntest_rules_LDFLAGS = -static\nif POSIX\nEXTRA_test_rules_DEPENDENCIES = tests/mapper$(EXEEXT)\nendif\ntest_pe_SOURCES = tests/test-pe.c tests/util.c\ntest_pe_LDADD = libyara.la\ntest_pe_LDFLAGS = -static\ntest_elf_SOURCES = tests/test-elf.c tests/util.c\ntest_elf_LDADD = libyara.la\ntest_elf_LDFLAGS = -static\ntest_version_SOURCES = tests/test-version.c tests/util.c\ntest_version_LDADD = libyara.la\ntest_version_LDFLAGS = -static\ntest_api_SOURCES = tests/test-api.c tests/util.c\ntest_api_LDADD = libyara.la\ntest_api_LDFLAGS = -static\ntest_bitmask_SOURCES = tests/test-bitmask.c tests/util.c\ntest_bitmask_LDADD = libyara.la\ntest_bitmask_LDFLAGS = -static\ntest_math_SOURCES = tests/test-math.c tests/util.c\ntest_math_LDADD = libyara.la\ntest_math_LDFLAGS = -static\ntest_string_SOURCES = tests/test-string.c tests/util.c\ntest_string_LDADD = libyara.la\ntest_string_LDFLAGS = -static\ntest_stack_SOURCES = tests/test-stack.c tests/util.c\ntest_stack_LDADD = libyara.la\ntest_stack_LDFLAGS = -static\ntest_re_split_SOURCES = tests/test-re-split.c tests/util.c\ntest_re_split_LDADD = libyara.la\ntest_re_split_LDFLAGS = -static\ntest_async_SOURCES = tests/test-async.c tests/util.c\ntest_async_LDADD = libyara.la\ntest_async_LDFLAGS = -static\n\nTESTS = $(check_PROGRAMS)\nTESTS_ENVIRONMENT = TOP_SRCDIR=$(top_srcdir) TOP_BUILDDIR=$(top_builddir)\n\ncheck_PROGRAMS = \\\n  test-arena \\\n  test-alignment \\\n  test-atoms \\\n  test-api \\\n  test-rules \\\n  test-pe \\\n  test-elf \\\n  test-version \\\n  test-bitmask \\\n  test-math \\\n  test-stack \\\n  test-re-split \\\n  test-async \\\n  test-string\n\nEXTRA_PROGRAMS = tests/mapper\nCLEANFILES = tests/mapper$(EXEEXT)\n\nif POSIX\n# The -fsanitize=address option makes test-exception fail. Include the test\n# only if the option is not enabled.\nif !ADDRESS_SANITIZER\ncheck_PROGRAMS+=test-exception\ntest_exception_SOURCES = tests/test-exception.c tests/util.c\ntest_exception_LDADD = libyara.la\ntest_exception_LDFLAGS = -static\nendif\nendif\n\nif MACHO_MODULE\ncheck_PROGRAMS+=test-macho\ntest_macho_SOURCES = tests/test-macho.c tests/util.c\ntest_macho_LDADD = libyara.la\ntest_macho_LDFLAGS = -static\nendif\n\nif DEX_MODULE\ncheck_PROGRAMS+=test-dex\ntest_dex_SOURCES = tests/test-dex.c tests/util.c\ntest_dex_LDADD = libyara.la\ntest_dex_LDFLAGS = -static\nendif\n\nif DOTNET_MODULE\ncheck_PROGRAMS+=test-dotnet\ntest_dotnet_SOURCES = tests/test-dotnet.c tests/util.c\ntest_dotnet_LDADD = libyara.la\ntest_dotnet_LDFLAGS = -static\nendif\n\nif MAGIC_MODULE\ncheck_PROGRAMS+=test-magic\ntest_magic_SOURCES = tests/test-magic.c tests/util.c\ntest_magic_LDADD = libyara.la\ntest_magic_LDFLAGS = -static\nendif\n\nif PB_TESTS_MODULE\ncheck_PROGRAMS+=test-pb\ntest_pb_SOURCES = tests/test-pb.c tests/util.c\ntest_pb_LDADD = libyara.la\ntest_pb_LDFLAGS = -static\nendif\n\n# man pages\nman1_MANS = yara.man yarac.man\n\nEXTRA_DIST = $(man1_MANS) README.md bootstrap.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6064453125,
          "content": "[![Join the chat at https://gitter.im/VirusTotal/yara](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/VirusTotal/yara?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![AppVeyor build status](https://ci.appveyor.com/api/projects/status/7glqg19w4oolm7pr?svg=true)](https://ci.appveyor.com/project/plusvic/yara)\n[![Coverity status](https://scan.coverity.com/projects/9057/badge.svg?flat=1)](https://scan.coverity.com/projects/plusvic-yara)\n\n\n\n## YARA in a nutshell\n\nYARA is a tool aimed at (but not limited to) helping malware researchers to\nidentify and classify malware samples. With YARA you can create descriptions of\nmalware families (or whatever you want to describe) based on textual or binary\npatterns. Each description, a.k.a. rule, consists of a set of strings and a\nboolean expression which determine its logic. Let's see an example:\n\n```yara\nrule silent_banker : banker\n{\n    meta:\n        description = \"This is just an example\"\n        threat_level = 3\n        in_the_wild = true\n\n    strings:\n        $a = {6A 40 68 00 30 00 00 6A 14 8D 91}\n        $b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\n        $c = \"UVODFRYSIHLNWPEJXQZAKCBGMT\"\n\n    condition:\n        $a or $b or $c\n}\n```\n\nThe above rule is telling YARA that any file containing one of the three strings\nmust be reported as *silent_banker*. This is just a simple example, more\ncomplex and powerful rules can be created by using wild-cards, case-insensitive\nstrings, regular expressions, special operators and many other features that\nyou'll find explained in [YARA's documentation](https://yara.readthedocs.org/).\n\nYARA is multi-platform, running on Windows, Linux and Mac OS X, and can be used\nthrough its command-line interface or from your own Python scripts with the\nyara-python extension.\n\n## Additional resources\n\nDo you use GitHub for storing your YARA rules? [YARA-CI](https://yara-ci.cloud.virustotal.com)\nmay be a useful addition to your toolbelt. This is GitHub application that provides\ncontinuous testing for your rules, helping you to identify common mistakes and\nfalse positives.\n\nIf you plan to use YARA to scan compressed files (.zip, .tar, etc) you should\ntake a look at [yextend](https://github.com/BayshoreNetworks/yextend), a very\nhelpful extension to YARA developed and open-sourced by Bayshore Networks.\n\nAdditionally, the guys from [InQuest](https://inquest.net/) have curated an\nawesome list of [YARA-related stuff](https://github.com/InQuest/awesome-yara).\n\n## Who's using YARA\n\n* [0x101 Cyber Security](https://0x101-cyber-security.de)\n* [Adlice](https://www.adlice.com/)\n* [AlienVault](https://otx.alienvault.com/)\n* [Avast](https://www.avast.com/)\n* [BAE Systems](https://www.baesystems.com/home?r=ai)\n* [Bayshore Networks, Inc.](https://www.bayshorenetworks.com)\n* [Binalyze](https://www.binalyze.com/)\n* [BinaryAlert](https://github.com/airbnb/binaryalert)\n* [Blueliv](https://www.blueliv.com)\n* [Cado Security](https://docs.cadosecurity.com/cado-response/investigate/detections#setting-up-detections)\n* [Cisco Talos Intelligence Group](https://talosintelligence.com/)\n* [Cloudina Security](https://cloudina.co.uk)\n* [Cofense](https://cofense.com)\n* [Conix](https://www.conix.fr)\n* [Corelight](https://corelight.com/products/yara)\n* [CounterCraft](https://www.countercraft.eu)\n* [Cuckoo Sandbox](https://github.com/cuckoosandbox/cuckoo)\n* [Cyber Triage](https://www.cybertriage.com)\n* [Cybereason](https://www.cybereason.com)\n* [Digita Security](https://digitasecurity.com/product/uxprotect)\n* [Dragos Platform](https://dragos.com/platform/)\n* [Dtex Systems](https://dtexsystems.com)\n* [ESET](https://www.eset.com)\n* [ESTsecurity](https://www.estsecurity.com)\n* [Elastic Security](https://github.com/elastic/protections-artifacts)\n* [Fidelis XPS](https://www.fidelissecurity.com/network-security-appliance/Fidelis-XPS)\n* [FireEye, Inc.](https://www.fireeye.com)\n* [Forcepoint](https://www.forcepoint.com)\n* [Fox-IT](https://www.fox-it.com)\n* [FSF](https://github.com/EmersonElectricCo/fsf)\n* [Guidance Software](https://www.guidancesoftware.com/endpointsecurity)\n* [Heroku](https://heroku.com)\n* [Hornetsecurity](https://www.hornetsecurity.com/en/)\n* [ICS Defense](https://icsdefense.net/)\n* [InQuest](https://www.inquest.net/)\n* [IntelOwl](https://github.com/intelowlproject/IntelOwl)\n* [Joe Security](https://www.joesecurity.org)\n* [Kaspersky Lab](https://www.kaspersky.com)\n* [KnowBe4](https://www.knowbe4.com)\n* [Koodous](https://koodous.com/)\n* [Laika BOSS](https://github.com/lmco/laikaboss)\n* [Lastline, Inc.](https://www.lastline.com)\n* [libguestfs](https://www.libguestfs.org/)\n* [LimaCharlie](https://limacharlie.io/)\n* [Malpedia](https://malpedia.caad.fkie.fraunhofer.de/)\n* [Malwation](https://malwation.com/)\n* [McAfee Advanced Threat Defense](https://mcafee.com/atd)\n* [Metaflows](https://www.metaflows.com)\n* [NBS System](https://www.nbs-system.com/)\n* [ndaal](https://ndaal.eu)\n* [NetLock](https://netlockendpoint.com)\n* [Nextron Systems](https://www.nextron-systems.com)\n* [Nozomi Networks](https://www.nozominetworks.com)\n* [osquery](https://www.osquery.io)\n* [Payload Security](https://www.payload-security.com)\n* [PhishMe](https://phishme.com/)\n* [Picus Security](https://www.picussecurity.com/)\n* [Radare2](https://rada.re)\n* [RedSocks Security](https://redsocks.eu/)\n* [ReversingLabs](https://reversinglabs.com)\n* [Scanii](https://scanii.com)\n* [SecondWrite](https://www.secondwrite.com)\n* [SonicWall](https://www.sonicwall.com/)\n* [SpamStopsHere](https://www.spamstopshere.com)\n* [Spyre](https://github.com/spyre-project/spyre)\n* [stoQ](https://stoq.punchcyber.com)\n* [Sublime Security](https://sublime.security)\n* [SumoLogic](https://sumologic.com)\n* [Tanium](https://www.tanium.com/)\n* [Tenable Network Security](https://www.tenable.com/)\n* [Tenzir](https://tenzir.com)\n* [The DigiTrust Group](https://www.digitrustgroup.com/)\n* [ThreatConnect](https://www.threatconnect.com/)\n* [ThreatStream, Inc.](https://www.threatstream.com)\n* [Thug](https://github.com/buffer/thug)\n* [Threat.Zone](https://threat.zone)\n* [TouchWeb](https://www.touchweb.fr)\n* [Trend Micro](https://www.trendmicro.com)\n* [UnpacMe](https://www.unpac.me)\n* [UpSight Security Inc.](https://upsight.ai/)\n* [Uptycs Inc](https://www.uptycs.com/)\n* [Veeam](https://www.veeam.com/)\n* [Verisys Antivirus API](https://www.ionxsolutions.com/products/verisys-virus-api)\n* [VirusTotal Intelligence](https://www.virustotal.com/intelligence/)\n* [VMRay](https://www.vmray.com/)\n* [Volexity](https://www.volexity.com/products-overview/volcano/)\n* [We Watch Your Website](https://www.wewatchyourwebsite.com/)\n* [x64dbg](https://x64dbg.com)\n* [YALIH](https://github.com/Masood-M/YALIH)\n\nAre you using it? Want to see your site listed here?\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.58984375,
          "content": "Reporting security issues\n=========================\n\nThe YARA authors try their best to keep this software free of security issues,\nbut 100% secure software does not exist. We appreciate all kinds of bug reports,\nbut those that constitute a security vulnerability are specially welcomed and\nthey will be prioritized and publicly acknowledged.\n\n Please do not open a GitHub issue to report a security vulnerability. If you\n believe you have found a security vulnerability, please submit your report to\n\n ```\n vmalvarez@virustotal.com\n ```\n\nWe'll get back to you as soon as possible (usually in 1-2 days).\n"
        },
        {
          "name": "WORKSPACE.bazel",
          "type": "blob",
          "size": 1.923828125,
          "content": "# Copyright (c) 2019. The YARA Authors. All Rights Reserved.\n#\n# Redistribution and use in source and binary forms, with or without modification,\n# are permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice, this\n# list of conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n# this list of conditions and the following disclaimer in the documentation and/or\n# other materials provided with the distribution.\n#\n# 3. Neither the name of the copyright holder nor the names of its contributors\n# may be used to endorse or promote products derived from this software without\n# specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Bazel (http://bazel.io/) WORKSPACE file for YARA.\n\nworkspace(name = \"com_github_virustotal_yara\")\n\nload(\"//:bazel/yara_deps.bzl\", \"yara_deps\")\n\nyara_deps()\n\nload(\n    \"@rules_proto//proto:repositories.bzl\",\n    \"rules_proto_dependencies\",\n    \"rules_proto_toolchains\",\n)\n\nrules_proto_dependencies()\n\nrules_proto_toolchains()\n\nload(\n    \"@com_google_sandboxed_api//sandboxed_api/bazel:sapi_deps.bzl\",\n    \"sapi_deps\",\n)\n\nsapi_deps()\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.9375,
          "content": "# AppVeyor CI for Windows\n\nversion: '{branch}-{build}'\n\npull_requests:\n  do_not_increment_build_number: true\n\nenvironment:\n  matrix:\n  - TARGET: vs2015\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n    VisualStudioVersion: 14.0\n    platform: x86\n    configuration: Release\n    artifact_postfix: win32\n  - TARGET: vs2015\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n    VisualStudioVersion: 14.0\n    platform: x86\n    configuration: Debug\n  - TARGET: vs2015\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n    VisualStudioVersion: 14.0\n    platform: x64\n    configuration: Release\n    artifact_postfix: win64\n  - TARGET: vs2015\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n    VisualStudioVersion: 14.0\n    platform: x64\n    configuration: Debug\n  - TARGET: cygwin\n\nfor:\n-\n  matrix:\n    only:\n    - TARGET: cygwin\n\n  # Disable the installation of flex and bison packages. For some reason this\n  # now (2021-04-19) upgrades the perl_base package to version 5.32.1-1 which\n  # later fails with error:\n  # Can't locate threads.pm in @INC (you may need to install the threads module)\n  #\n  # before_build:\n  # - cmd: C:\\cygwin64\\setup-x86_64.exe --quiet-mode --no-desktop --no-shortcuts --no-startmenu --no-admin --packages flex,bison\n\n  build_script:\n  - cmd: C:\\cygwin64\\bin\\bash -e -l -c \"cd c:/projects/yara && ./build.sh\"\n\n  test_script:\n  - cmd: C:\\cygwin64\\bin\\bash -e -l -c \"cd c:/projects/yara && make check\"\n\n-\n  matrix:\n    only:\n      - TARGET: vs2015\n      - configuration: Release\n\n  before_build:\n  - ps: nuget restore windows/vs2015/yara.sln\n\n  build:\n    project: windows/vs2015/yara.sln\n    verbosity: minimal\n\n  after_build:\n  - cmd: 7z a yara-%APPVEYOR_BUILD_VERSION%-%ARTIFACT_POSTFIX%.zip %APPVEYOR_BUILD_FOLDER%\\windows\\%TARGET%\\%CONFIGURATION%\\yara*.exe\n\n  artifacts:\n  - path: yara-$(APPVEYOR_BUILD_VERSION)-$(ARTIFACT_POSTFIX).zip\n    name: yara-$(APPVEYOR_BUILD_VERSION)-$(ARTIFACT_POSTFIX)\n    type: zip\n\n  deploy:\n    tag: $(APPVEYOR_REPO_TAG_NAME)\n    release: YARA $(APPVEYOR_REPO_TAG_NAME)\n    provider: GitHub\n    auth_token:\n      secure: k+4xp4M/IEqXhKKYwo3DY2ko6VenOfSBEij3AasSiz1i8vsCwfcGxhuae0kj7Gj2\n    artifact: yara-$(APPVEYOR_BUILD_VERSION)-$(ARTIFACT_POSTFIX)\n    draft: true\n    on:\n      APPVEYOR_REPO_TAG: true        # deploy on tag push only\n\n  test_script:\n  - cmd: c:/projects/yara/windows/vs2015/%CONFIGURATION%/test-alignment.exe\n\n-\n  matrix:\n    only:\n      - TARGET: vs2015\n      - configuration: Debug\n\n  before_build:\n  - ps: nuget restore windows/vs2015/yara.sln\n\n  build:\n    project: windows/vs2015/yara.sln\n    verbosity: minimal\n\n  test_script:\n  - cmd: c:/projects/yara/windows/vs2015/%CONFIGURATION%/test-alignment.exe\n\n\n# Uncomment the lines below for enabling Remote Desktop in the Appveyor. This\n# allows connecting to the remote machine and debug issues.\n# on_finish:\n# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 0.0380859375,
          "content": "#!/bin/sh\nautoreconf --force --install\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.0400390625,
          "content": "#!/bin/sh\n./bootstrap.sh\n./configure\nmake"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 13.423828125,
          "content": "AC_INIT([yara], [4.5.2], [vmalvarez@virustotal.com])\n\nAM_SILENT_RULES([yes])\nAC_CONFIG_SRCDIR([cli/yara.c])\n\nAC_CONFIG_AUX_DIR([build-aux])\n\nAM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects])\n\nAC_CONFIG_MACRO_DIR([m4])\n\n# AC_PROG_CC sets CFLAGS to \"-g -O2\" if it wasn't previously set. Let's set\n# an empty CFLAGS.\n: ${CFLAGS=\"\"}\n\nno_std_allocator=\"-fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free\"\n\n# automake 1.12 seems to require AM_PROG_AR, but automake 1.11 doesn't\n# recognize it.\nm4_ifdef([AM_PROG_AR], [AM_PROG_AR])\n\nAC_PROG_CC\nAC_PROG_CC_C99\nAM_PROG_CC_C_O\nAM_PROG_LEX\nAC_PROG_YACC\n\n# If the C compiler supports the keyword inline, do nothing. Otherwise define\n# inline to __inline__ or __inline if it accepts one of those, otherwise define\n# inline to be empty.\nAC_C_INLINE\n# Defines WORDS_BIGENDIAN if building in a big-endian host.\nAC_C_BIGENDIAN\n\nLT_INIT\nAC_CANONICAL_HOST\n\ncase $host_alias in\n     i?86-*-mingw*) CFLAGS=\"$CFLAGS -D__MINGW_USE_VC2005_COMPAT\" ;;\nesac\n\nAC_ARG_ENABLE([proc-scan],\n  [AS_HELP_STRING([--disable-proc-scan], [disable process scanning])],\n  [if test x$enableval = xyes; then\n    AC_MSG_ERROR([\n*****************************************************************\n  Process scanning is enabled by default, remove --enable-proc-scan.\n*****************************************************************\n])\n  else\n    proc_interface=none\n    CFLAGS=\"$CFLAGS -DUSE_NO_PROC\"\n  fi],\n  [case $host_os in\n    darwin*) CFLAGS=\"$CFLAGS -I/opt/local/include\"\n             # Starting with Mac OS X 10.11 (El Capitan) the OpenSSL headers\n             # are in /usr/local/opt/openssl/include\n             CFLAGS=\"$CFLAGS -DUSE_MACH_PROC -I/usr/local/opt/openssl/include\"\n             LDFLAGS=\"$LDFLAGS -L/usr/local/opt/openssl/lib\"\n             posix=true\n             proc_interface=mach\n             jemalloc_prefix=je_ ;;\n    mingw*|msys*|cygwin*) CFLAGS=\"$CFLAGS -DUSE_WINDOWS_PROC\"\n            proc_interface=windows\n            jemalloc_prefix= ;;\n    linux*|netbsd*|dragonfly*|kfreebsd*)\n            CFLAGS=\"$CFLAGS -DUSE_LINUX_PROC\"\n            posix=true\n            proc_interface=linux\n            jemalloc_prefix= ;;\n    freebsd*)\n            CFLAGS=\"$CFLAGS -DUSE_FREEBSD_PROC\"\n            posix=true\n            proc_interface=freebsd\n            jemalloc_prefix= ;;\n    openbsd*)\n            CFLAGS=\"$CFLAGS -DUSE_OPENBSD_PROC\"\n            CFLAGS=\"$CFLAGS -I/usr/local/include -L/usr/local/lib\"\n            posix=true\n            proc_interface=openbsd\n            jemalloc_prefix= ;;\n    *)\n            CFLAGS=\"$CFLAGS -DUSE_NO_PROC\"\n            proc_interface=none\n            jemalloc_prefix= ;;\n  esac])\n\n\n\nACX_PTHREAD(\n    [LIBS=\"$PTHREAD_LIBS $LIBS\"\n     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n     CC=\"$PTHREAD_CC\"],\n    [AC_MSG_ERROR([pthread API support is required.])])\n\nAC_CHECK_LIB(m, isnan)\nAC_CHECK_LIB(m, log2)\nAS_IF([test \"ac_cv_lib_m_isnan\" = yes || test \"$ac_cv_lib_m_log2\" = yes],\n    [PC_LIBS_PRIVATE=\"$PC_LIBS_PRIVATE -lm\"])\nAC_CHECK_FUNCS([strlcpy strlcat memmem timegm _mkgmtime clock_gettime])\nAC_CHECK_HEADERS([stdbool.h])\n\nAC_ARG_ENABLE([debug],\n  [AS_HELP_STRING([--enable-debug], [compiles with -g option])],\n  [if test x$enableval = xyes; then\n    debug=true\n  fi])\n\nAC_ARG_ENABLE([gcov],\n  [AS_HELP_STRING([--enable-gcov], [compiles with -O0 -g -ftest-coverage -fprofile-arcs])],\n  [if test x$enableval = xyes; then\n    gcov=true\n  fi])\n\nAC_ARG_ENABLE([optimization],\n  [AS_HELP_STRING([--disable-optimization], [disable compiler optimizations with -O0])],\n  [if test x$enableval = xyes; then\n    optimization=false\n  fi],\n  [optimization=true])\n\nAC_ARG_ENABLE([address-sanitizer],\n  [AS_HELP_STRING([--enable-address-sanitizer], [compiles with -fsanitize=address])],\n  [if test x$enableval = xyes; then\n    address_sanitizer=true\n  fi])\n\nAC_ARG_ENABLE([undefined-behaviour-sanitizer],\n  [AS_HELP_STRING([--enable-undefined-behaviour-sanitizer], [compiles with -fsanitize=undefined])],\n  [if test x$enableval = xyes; then\n    undefined_behaviour_sanitizer=true\n  fi])\n\n\nAC_ARG_ENABLE([profiling],\n  [AS_HELP_STRING([--enable-profiling], [enable rules profiling support])],\n  [if test x$enableval = xyes; then\n    profiling_enabled=true\n    CFLAGS=\"$CFLAGS -DYR_PROFILING_ENABLED\"\n  fi])\n\nAC_ARG_WITH([debug-verbose],\n  [AS_HELP_STRING([--with-debug-verbose=[[NUM]]], [Turn on runtime debugging information])],\n  [if test $withval -gt 0; then\n    AC_DEFINE_UNQUOTED([YR_DEBUG_VERBOSITY], [$withval])\n   else\n    AC_MSG_ERROR([debug verbosity must be greater than 0])\n  fi])\n\nAC_ARG_ENABLE([cuckoo],\n  [AS_HELP_STRING([--enable-cuckoo], [enable cuckoo module])],\n  [if test x$enableval = xyes; then\n    build_cuckoo_module=true\n    AC_CHECK_HEADERS([jansson.h],,\n      AC_MSG_ERROR([please install Jansson library]))\n    AC_CHECK_LIB(jansson, json_loadb,,\n      AC_MSG_ERROR([please install Jansson library]))\n    CFLAGS=\"$CFLAGS -DCUCKOO_MODULE\"\n    PC_REQUIRES_PRIVATE=\"$PC_REQUIRES_PRIVATE jansson\"\n  fi])\n\nAC_ARG_ENABLE([magic],\n  [AS_HELP_STRING([--enable-magic], [enable magic module])],\n  [if test x$enableval = xyes; then\n    build_magic_module=true\n    AC_CHECK_HEADERS([magic.h],,\n      AC_MSG_ERROR([please install libmagic library]))\n    AC_CHECK_LIB(magic, magic_open,,\n      AC_MSG_ERROR([please install libmagic library]))\n    CFLAGS=\"$CFLAGS -DMAGIC_MODULE\"\n    PC_LIBS_PRIVATE=\"$PC_LIBS_PRIVATE -lmagic\"\n  fi])\n\nAC_ARG_ENABLE([macho],\n  [AS_HELP_STRING([--enable-macho], [enable macho module])],\n  [if test x$enableval = xyes; then\n    build_macho_module=true\n    CFLAGS=\"$CFLAGS -DMACHO_MODULE\"\n  fi])\n\nAC_ARG_ENABLE([dex],\n  [AS_HELP_STRING([--enable-dex], [enable dex module])],\n  [if test x$enableval = xyes; then\n    build_dex_module=true\n    CFLAGS=\"$CFLAGS -DDEX_MODULE\"\n  fi])\n\nAC_ARG_ENABLE([debug-dex],\n  [AS_HELP_STRING([--enable-debug-dex], [enable dex module debugging])],\n  [if test x$enableval = xyes; then\n    debug_dex_module=true\n    CFLAGS=\"$CFLAGS -DDEBUG_DEX_MODULE\"\n  fi])\n\nAC_ARG_ENABLE([pb-tests],\n  [AS_HELP_STRING([--enable-pb-tests], [enable protobuf test module])],\n  [if test x$enableval = xyes; then\n    build_pb_tests_module=true\n    AC_CHECK_PROG(PROTOC, protoc, protoc)\n    AS_IF([test \"x${PROTOC}\" == \"x\"],\n        [AC_MSG_ERROR([protobuf compiler \"protoc\" not found])])\n    # AC_CHECK_PROG(PROTOC_GEN_YARA, protoc-gen-yara, protoc-gen-yara)\n    # AS_IF([test \"x${PROTOC_GEN_YARA}\" == \"x\"],\n    #    [AC_MSG_ERROR([please install https://github.com/VirusTotal/protoc-gen-yara])])\n    PKG_CHECK_MODULES([PROTOBUF_C], [libprotobuf-c >= 1.0.0])\n    AC_CHECK_LIB([protobuf-c], protobuf_c_message_unpack,,\n      AC_MSG_ERROR([please install libprotobuf-c library]))\n    CFLAGS=\"$CFLAGS -DPB_TESTS_MODULE\"\n    PC_REQUIRES_PRIVATE=\"$PC_REQUIRES_PRIVATE libprotobuf-c\"\n  fi])\n\n# \"dotnet\" module is enabled by default. It can be disabled with --disable-dotnet.\nAC_ARG_ENABLE([dotnet],\n  [AS_HELP_STRING([--disable-dotnet], [disable dotnet module])],\n  [if test x$enableval = xyes; then\n        AC_MSG_WARN([\n*****************************************************************\n  The dotnet module is enabled by default now. No need to specify\n  --enable-dotnet. To disable this module please use\n  --disable-dotnet.\n*****************************************************************\n])\n    build_dotnet_module=true\n    CFLAGS=\"$CFLAGS -DDOTNET_MODULE\"\n  else\n    build_dotnet_module=false\n  fi],\n  [\n    build_dotnet_module=true\n    CFLAGS=\"$CFLAGS -DDOTNET_MODULE\"\n  ] )\n\nAC_ARG_WITH([jemalloc],\n  [AS_HELP_STRING([--with-jemalloc],\n    [use jemalloc to debug heap-related issues])],\n  [if test x$withval = xyes; then\n    mallctl=mallctl\n    malloc_stats_print=malloc_stats_print\n    AC_CHECK_LIB(jemalloc, $jemalloc_prefix$mallctl,,\n      AC_MSG_ERROR([please install jemalloc library]))\n    CFLAGS=\"$CFLAGS -DJEMALLOC -Dmallctl=$jemalloc_prefix$mallctl -Dmalloc_stats_print=$jemalloc_prefix$malloc_stats_print $no_std_allocator\"\n    PC_REQUIRES_PRIVATE=\"$PC_REQUIRES_PRIVATE jemalloc\"\n  fi])\n\nAC_ARG_WITH([tcmalloc],\n  [AS_HELP_STRING([--with-tcmalloc],\n    [use tcmalloc as the default heap allocator])],\n  [if test x$withval = xyes; then\n    if test \"x$with_jemalloc\" = \"xyes\"; then\n      AC_MSG_ERROR([Cannot compile with both tcmalloc and jemalloc])\n    fi\n    AC_CHECK_LIB(tcmalloc, tc_cfree,,\n      AC_MSG_ERROR([please install https://github.com/gperftools/gperftools]))\n    CFLAGS=\"$CFLAGS -DTCMALLOC $no_std_allocator\"\n    PC_REQUIRES_PRIVATE=\"$PC_REQUIRES_PRIVATE tcmalloc\"\n  fi])\n\nAC_ARG_WITH([cpu-profiler],\n  [AS_HELP_STRING([--with-cpu-profiler],\n    [compile with CPU profiling support])],\n  [if test x$withval = xyes; then\n    AC_CHECK_LIB(profiler, ProfilerStart,,\n      AC_MSG_ERROR([please install https://github.com/gperftools/gperftools]))\n    PC_REQUIRES_PRIVATE=\"$PC_REQUIRES_PRIVATE libprofiler\"\n  fi])\n\nAC_ARG_WITH([crypto],\n  AS_HELP_STRING([--without-crypto],\n    [ignore presence of OpenSSL and disable it]))\n\nAS_IF([test \"x$with_crypto\" != \"xno\"],\n  [\n    AC_CHECK_HEADERS([openssl/evp.h],, [have_crypto=no])\n    AC_CHECK_HEADERS([openssl/asn1.h],, [have_crypto=no])\n    AC_CHECK_HEADERS([openssl/crypto.h],, [have_crypto=no])\n    AC_CHECK_HEADERS([openssl/bio.h],, [have_crypto=no])\n    AC_CHECK_HEADERS([openssl/pkcs7.h],, [have_crypto=no])\n    AC_CHECK_HEADERS([openssl/x509.h],, [have_crypto=no])\n    AC_CHECK_HEADERS([openssl/safestack.h],, [have_crypto=no])\n    AC_CHECK_LIB(crypto, EVP_DigestInit,, [have_crypto=no])\n    AC_CHECK_LIB(crypto, EVP_DigestUpdate,, [have_crypto=no])\n    AC_CHECK_LIB(crypto, EVP_DigestFinal,, [have_crypto=no])\n    AC_CHECK_LIB(crypto, EVP_md5,, [have_crypto=no])\n    AC_CHECK_LIB(crypto, EVP_sha1,, [have_crypto=no])\n    AC_CHECK_LIB(crypto, EVP_sha256,, [have_crypto=no])\n  ],\n  [\n    have_crypto=no\n  ])\n\n\nAS_IF([test \"x$have_crypto\" = \"xno\"],\n  [\n    AS_IF([test \"x$with_crypto\" = \"xyes\"],\n      [\n        AC_MSG_ERROR([please install OpenSSL library])\n      ],\n      [\n        AC_MSG_WARN([\n\n*****************************************************************\n  Could not find OpenSSL library. Some features in \"pe\" module\n  have been disabled. If you want to enable all features please\n  install OpenSSL and run this script again.\n*****************************************************************\n])\n\t      AC_MSG_CHECKING([for Microsoft Crypto API])\n        AC_CHECK_HEADERS([wincrypt.h],\n          [\n\t          AC_MSG_RESULT([The \"hash\" module functions will be provided through the Microsoft Crypto API])\n            # FIXME: Add PC_LIBS_PRIVATE entries?\n            build_hash_module=true\n          ],\n          [],\n          [#include <windows.h>])\n\t      AC_MSG_CHECKING([for MacOSX Common Crypto API])\n        AC_CHECK_HEADERS([CommonCrypto/CommonCrypto.h],\n          [\n\t          AC_MSG_RESULT([\n*****************************************************************\n  As an alternative to OpenSSL the \"hash\" module functions will\n  be provided through the MacOSX Common Crypto API.\n*****************************************************************\n])\n            # FIXME: Add PC_LIBS_PRIVATE entries?\n            build_hash_module=true\n          ])\n        AS_IF([test x$build_hash_module = xtrue],\n          [\n            build_hash_module=true\n            CFLAGS=\"$CFLAGS -DHASH_MODULE\"\n          ],\n          [\n            AC_MSG_WARN([\n\n*****************************************************************\n  Could not find alternative APIs for hash functions. The \"hash\"\n  module has been disabled.\n*****************************************************************\n            ])\n          ])\n      ])\n  ],\n  [\n    build_authenticode_module=true # Authenticode relies on openssl\n    build_hash_module=true\n    CFLAGS=\"$CFLAGS -DHASH_MODULE\"\n    PC_REQUIRES_PRIVATE=\"$PC_REQUIRES_PRIVATE libcrypto\"\n  ])\n\n\n\nAM_CONDITIONAL([GCC], [test \"x$GCC\" = xyes])\nAM_CONDITIONAL([PROTOC], [test \"x${PROTOC}\" != \"x\"])\nAM_CONDITIONAL([DEBUG], [test x$debug = xtrue])\nAM_CONDITIONAL([GCOV], [test x$gcov = xtrue])\nAM_CONDITIONAL([POSIX], [test x$posix = xtrue])\nAM_CONDITIONAL([PROFILING_ENABLED], [test x$profiling_enabled = xtrue])\nAM_CONDITIONAL([OPTIMIZATION], [test x$optimization = xtrue])\nAM_CONDITIONAL([ADDRESS_SANITIZER], [test x$address_sanitizer = xtrue])\nAM_CONDITIONAL([UB_SANITIZER], [test x$undefined_behaviour_sanitizer = xtrue])\nAM_CONDITIONAL([CUCKOO_MODULE], [test x$build_cuckoo_module = xtrue])\nAM_CONDITIONAL([MAGIC_MODULE], [test x$build_magic_module = xtrue])\nAM_CONDITIONAL([HASH_MODULE], [test x$build_hash_module = xtrue])\nAM_CONDITIONAL([AUTHENTICODE_MODULE], [test x$build_authenticode_module = xtrue])\nAM_CONDITIONAL([DOTNET_MODULE], [test x$build_dotnet_module = xtrue])\nAM_CONDITIONAL([MACHO_MODULE], [test x$build_macho_module = xtrue])\nAM_CONDITIONAL([PB_TESTS_MODULE], [test x$build_pb_tests_module = xtrue])\nAM_CONDITIONAL([DEX_MODULE], [test x$build_dex_module = xtrue])\nAM_CONDITIONAL([DEBUG_DEX_MODULE], [test x$debug_dex_module = xtrue])\n\nAM_CONDITIONAL([USE_WINDOWS_PROC], [test x$proc_interface = xwindows ])\nAM_CONDITIONAL([USE_LINUX_PROC], [test x$proc_interface = xlinux ])\nAM_CONDITIONAL([USE_FREEBSD_PROC], [test x$proc_interface = xfreebsd ])\nAM_CONDITIONAL([USE_OPENBSD_PROC], [test x$proc_interface = xopenbsd ])\nAM_CONDITIONAL([USE_MACH_PROC], [test x$proc_interface = xmach ])\nAM_CONDITIONAL([USE_NO_PROC], [test x$proc_interface = xnone ])\nAS_IF(\n  [test x$proc_interface != xnone],[AC_DEFINE([HAVE_SCAN_PROC_IMPL],[1])],\n  [test x$proc_interface = xnone],[AC_DEFINE([HAVE_SCAN_PROC_IMPL],[0])])\n\n# Configure TLSH function\nCFLAGS=\"$CFLAGS -DBUCKETS_128=1 -DCHECKSUM_1B=1\"\n\nAC_SUBST([PC_REQUIRES_PRIVATE])\nAC_SUBST([PC_LIBS_PRIVATE])\n\nAC_CONFIG_FILES([Makefile])\nAC_CONFIG_FILES([yara.pc])\n\nAC_OUTPUT\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "libyara",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample.file",
          "type": "blob",
          "size": 0.005859375,
          "content": "abbbb\n"
        },
        {
          "name": "sample.rules",
          "type": "blob",
          "size": 0.1748046875,
          "content": "import \"pe\"\n\nrule UPX : Packer\n{\n    strings: \n        $a = {60 E8 00 00 00 00 58 83 E8 3D 50 8D B8}\n\n    condition:\n        $a at pe.entry_point\n}\n\n\nrule test {condition: false}\n"
        },
        {
          "name": "sandbox",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "yara.man",
          "type": "blob",
          "size": 3.9677734375,
          "content": ".TH yara 1 \"September 22, 2008\" \"Victor M. Alvarez\"\n.SH NAME\nyara \\- find files matching patterns and rules written in a special-purpose\nlanguage.\n.SH SYNOPSIS\n.B yara\n[OPTION]... [NAMESPACE:]RULES_FILE... FILE | DIR | PID\n.SH DESCRIPTION\nyara scans the given FILE, all files contained in directory DIR, or the process\nidentified by PID looking for matches of patterns and rules provided in a\nspecial purpose-language. The rules are read from one or more RULES_FILE.\n.PP\nThe options to\n.IR yara (1)\nare:\n.TP\n.B \"    --atom-quality-table\"\nPath to a file with the atom quality table.\n.TP\n.B \\-C \" --compiled-rules\"\nRULES_FILE contains rules already compiled with yarac.\n.TP\n.B \\-c \" --count\"\nPrint number of matches only.\n.TP\n.BI \"\\-d  --define\"=identifier=value\nDefine an external variable. This option can be used multiple times.\n.TP\n.B \"    --fail-on-warnings\"\nTreat warnings as errors. Has no effect if used with\n.B --no-warnings.\n.TP\n.B \\-f \" --fast-scan\"\nSpeeds up scanning by searching only for the first occurrence of each pattern.\n.TP\n.BI \\-i \" identifier\" \" --identifier=\" identifier\nPrint rules named\n.I identifier\nand ignore the rest. This option can be used multiple times.\n.TP\n.BI \"    --max-process-memory-chunk=\" size\nWhile scanning process memory read data in chunks of the given\n.I size\nin bytes.\n.TP\n.BI \\-l \" number\" \" --max-rules=\" number\nAbort scanning after a\n.I number\nof rules matched.\n.TP\n.BI \"    --max-strings-per-rule=\" number\nSet maximum number of strings per rule (default=10000)\n.TP\n.BI \"\\-x  --module-data\"=module=file\nPass file's content as extra data to module. This option can be used multiple\ntimes.\n.TP\n.B \\-n \" --negate\"\nPrint rules that doesn't apply (negate).\n.TP\n.B \\-w \" --no-warnings\"\nDisable warnings.\n.TP\n.B \\-m \" --print-meta\"\nPrint metadata associated to the rule.\n.TP\n.B \\-D \" --print-module-data\"\nPrint module data.\n.TP\n.B \\-M \" --module-names\"\nshow module names\n.TP\n.B \\-e \" --print-namespace\"\nPrint namespace associated to the rule.\n.TP\n.B \\-S \" --print-stats\"\nPrint rules' statistics.\n.TP\n.B \\-s \" --print-strings\"\nPrint strings found in the file.\n.TP\n.B \\-L \" --print-string-length\"\nPrint length of strings found in the file.\n.TP\n.B \\-X \" --print-xor-key\"\nPrint xor key of matched strings.\n.TP\n.B \\-g \" --print-tags\"\nPrint the tags associated to the rule.\n.TP\n.B \\-r \" --recursive\"\nScan files in directories recursively. It follows symlinks.\n.TP\n.BI \"    --scan-list\"\nScan files listed in FILE, one per line.\n.TP\n.BI \\-z \" size\" \" --skip-larger=\" size\nSkip files larger than the given\n.I size\nin bytes when scanning a directory.\n.TP\n.BI \\-k \" slots\" \" --stack-size=\" slots\nSet maximum stack size to the specified number of\n.I slots.\n.TP\n.BI \"    --strict-escape\"\nPrint warnings if rules contain ambiguous escape statements.\n.TP\n.BI \\-t \" tag\" \" --tag=\" tag\nPrint rules tagged as\n.I tag\nand ignore the rest. This option can be used multiple times.\n.TP\n.BI \\-p \" number\" \" --threads=\" number\nUse the specified\n.I number\nof threads to scan a directory.\n.TP\n.BI \\-a \" seconds\" \" --timeout=\" seconds\nAbort scanning after a number of\n.I seconds\nhas elapsed.\n.TP\n.B \\-v \" --version\"\nShow version information.\n.SH EXAMPLES\n$ yara /foo/bar/rules .\n.RS\n.PP\nApply rules on\n.I /foo/bar/rules\nto all files on current directory. Subdirectories are not scanned.\n.RE\n.PP\n$ yara -t Packer -t Compiler /foo/bar/rules bazfile\n.RS\n.PP\nApply rules on\n.I /foo/bar/rules\nto\n.I bazfile.\nOnly reports rules tagged as\n.I Packer\nor\n.I Compiler.\n.RE\n.PP\n$ cat /foo/bar/rules | yara -r /foo\n.RS\n.PP\nScan all files in the\n.I /foo\ndirectory and its subdirectories. Rules are read from standard input.\n.RE\n.PP\n$ yara -d mybool=true -d myint=5 -d mystring=\"my string\" /foo/bar/rules bazfile\n.RS\n.PP\nDefines three external variables\n.I mybool\n.I myint\nand\n.I mystring.\n.RE\n.PP\n$ yara -x cuckoo=cuckoo_json_report /foo/bar/rules bazfile\n.RS\n.PP\nApply rules on\n.I /foo/bar/rules\nto\n.I bazfile\nwhile passing the content of\n.I cuckoo_json_report\nto the cuckoo module.\n.RE\n\n.SH AUTHOR\nVictor M. Alvarez <plusvic@gmail.com>;<vmalvarez@virustotal.com>\n"
        },
        {
          "name": "yara.pc.in",
          "type": "blob",
          "size": 0.3154296875,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nincludedir=@includedir@\nlibdir=@libdir@\n\nName: yara\nDescription: YARA library\nURL: https://virustotal.github.io/yara/\nVersion: @PACKAGE_VERSION@\nRequires.private: @PC_REQUIRES_PRIVATE@\nCflags: -I${includedir}\nLibs: -L${libdir} -lyara\nLibs.private: @PC_LIBS_PRIVATE@ @PTHREAD_LIBS@\n"
        },
        {
          "name": "yarac.man",
          "type": "blob",
          "size": 1.63671875,
          "content": ".\\\"Text automatically generated by txt2man\n.TH YARAC \"1\"  \"Jan 2014\" \"YARAC 2.0\" \"compile rules to yara\"\n.SH NAME\n\\fByarac \\fP- compile rules to yara\n.SH SYNOPSIS\n.nf\n.fam C\n\\fByarac\\fP [OPTION]\\.\\.\\. [RULE_FILE]\\.\\.\\. \\fIOUTPUT_FILE\\fP\n.fam T\n.fi\n.fam T\n.fi\n.SH DESCRIPTION\nTo invoke YARA you will need two things: a file with the rules you want to\nuse (either in source code or compiled form) and the target to be scanned.\nThe target can be a file, a folder, or a process.\n.PP\nRule files can be passed directly in source code form, or can be previously\ncompiled with the \\fByarac\\fP tool. You may prefer to use your rules in compiled\nform if you are going to invoke YARA multiple times with the same rules.\nThis way you’ll save time, because for YARA is faster to load compiled rules\nthan compiling the same rules over and over again.\n.PP\nThe rules will be applied to the target specified as the last argument to YARA,\nif it’s a path to a directory all the files contained in it will be scanned.\n.SH OPTIONS\n.TP\n.B\n\\fB-d\\fP <identifier>=<value>\ndefine external variable.\n.TP\n.B \\-w \" --no-warnings\"\nDisable warnings.\n.TP\n.B \"    --fail-on-warnings\"\nTreat warnings as errors. Has no effect if used with\n.B --no-warnings.\n.TP\n.B \\-v \" --version\"\nShow version information.\n.SH EXAMPLE\nThe \\fB-d\\fP is used to define external variables. For example:\n.PP\n\\fB-d\\fP flag=true\n.PP\n\\fB-d\\fP beast=666\n.PP\n\\fB-d\\fP name=\"James Bond\"\n.SH SEE ALSO\n\\fByara\\fP(1)\n.SH AUTHOR\n\\fByarac\\fP was written by Victor M. Alvarez <vmalvarez@virustotal.com>.\nThis manual page was written by Joao Eriberto Mota Filho <eriberto@eriberto.pro.br> for the Debian project (but may be used by others).\n"
        }
      ]
    }
  ]
}