{
  "metadata": {
    "timestamp": 1736710274709,
    "page": 40,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nonstriater/Learn-Algorithms",
      "stars": 8428,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0810546875,
          "content": "\n*.gitignore\n*.out\n*.dSYM\n\n*.dat\n*.txt\n*ipslice*\n*.log\n\ncmake-build-debug\n*.idea\n\n\n"
        },
        {
          "name": "0 Numeral",
          "type": "tree",
          "content": null
        },
        {
          "name": "1 String",
          "type": "tree",
          "content": null
        },
        {
          "name": "2 List",
          "type": "tree",
          "content": null
        },
        {
          "name": "2 Queue",
          "type": "tree",
          "content": null
        },
        {
          "name": "3 Hash Table",
          "type": "tree",
          "content": null
        },
        {
          "name": "4 Tree",
          "type": "tree",
          "content": null
        },
        {
          "name": "5 Graph",
          "type": "tree",
          "content": null
        },
        {
          "name": "6 Sort",
          "type": "tree",
          "content": null
        },
        {
          "name": "7 Search",
          "type": "tree",
          "content": null
        },
        {
          "name": "8 Algorithms Analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "9 Algorithms Job Interview",
          "type": "tree",
          "content": null
        },
        {
          "name": "91 Algorithms In Big Data",
          "type": "tree",
          "content": null
        },
        {
          "name": "92 Algorithms In DB",
          "type": "tree",
          "content": null
        },
        {
          "name": "93 Algorithms In Open Source",
          "type": "tree",
          "content": null
        },
        {
          "name": "94 15-Classic-Algorithms",
          "type": "tree",
          "content": null
        },
        {
          "name": "C Language Code Specification.md",
          "type": "blob",
          "size": 2.123046875,
          "content": "\n\n## 补充:C语言代码规范\n\n这里面的算法代码均使用C语言完成，养成良好的代码规范习惯，不但可以写出优质的代码，也可以更快的阅读其他优秀开源代码。代码规范主要有：\n\n### 符号命名\n\n**局部变量** 尽量短，能表达清楚意思即可，能简写就简写，比如\"err\" 表示 \"error\"; \"fd\" 表示文件描述符 ，循环变量可以使用i,j,k ;结构体成员变量不需要\"m_\"前缀;全局变量\"g_\"开头\n\n**常量名** 全大写，单词之间\"_\"分割，如 \"MAX_NUMBER_OF_SLAB_CLASSES\" ;\n\n**宏定义** 对于options 宏定义，适当使用前缀 ，比如：\n```\n/* Client classes for client limits, currently used only for\n * the max-client-output-buffer limit implementation. */\n#define CLIENT_TYPE_NORMAL 0 /* Normal req-reply clients + MONITORs */\n#define CLIENT_TYPE_SLAVE 1  /* Slaves. */\n#define CLIENT_TYPE_PUBSUB 2 /* Clients subscribed to PubSub channels. */\n#define CLIENT_TYPE_MASTER 3 /* Master. */\n#define CLIENT_TYPE_OBUF_COUNT 3 \n```\n\n**枚举** 使用前缀:\n```\nenum conn_states {\n    conn_listening,  /**< the socket which listens for connections */\n    conn_new_cmd,    /**< Prepare connection for next command */\n    conn_waiting,    /**< waiting for a readable socket */\n    conn_read,       /**< reading in a command line */\n    conn_parse_cmd,  /**< try to parse a command from the input buffer */\n    conn_write,      /**< writing out a simple response */\n    conn_nread,      /**< reading in a fixed number of bytes */\n    conn_swallow,    /**< swallowing unnecessary bytes w/o storing */\n    conn_closing,    /**< closing this connection */\n    conn_mwrite,     /**< writing out many items sequentially */\n    conn_closed,     /**< connection is closed */\n    conn_max_state   /**< Max state value (used for assertion) */\n};\n```\n\n**函数命名** 全小写，单词之间\"_\"分割。如\"split_cmdline_strerror()\"  \n\n\n### 注释\n\n所有注释使用 \"/* 这里是注释 */ \"\n\n\n### 其他\n\n合理使用static,const 等关键字,能提升程序的安全性，也能避免函数命名冲突  \n合理使用数据类型：rel_time_t,uint8_t,uint32_t,uint64_t,size_t,off_t\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.697265625,
          "content": "#The file is in Chinese\n\n>算法虐我千百遍，我待算法如初恋\n\n这里的内容是我学习算法过程的一些记录，希望能一直坚持下去。\n\n## 学习方法\n \n* 把所有经典算法写一遍  \n* 看算法有关源码   \n* 加入算法学习社区，相互鼓励学习(加我vx:tiger-ran, 备注入群理由, 拉你入群)   \n* 看经典书籍  \n* 刷题   \n\n\n## 基本数据结构和算法\n\n这些算法全部自己敲一遍：\n\n### [链表](2%20List/README.md)\n\n* 链表\n* 双向链表\n\n### [数组](2%20List/数组.md)\n\n* [数组数列问题](9%20Algorithms%20Job%20Interview/5%20数组数列问题.md)\n\n数组和链表结构是基础结构，散列表、栈、队列、堆、树、图等等各种数据结构都基于数组和链表结构实现。\n\n### [队列](2%20Queue/README.md)\n \n* 队列\n* 堆栈\n\n### [哈希表 HashTable](3%20Hash%20Table/README.md)\n\n* 散列函数\n* 碰撞解决\n\n### [字符串算法](1%20String/README.md)\n\n* 子串查找 [字符串常见题目参考这里](9%20Algorithms%20Job%20Interview/1%20字符串.md) \n    * BF算法  \n    * KMP算法  \n    * BM算法  \n* 正则表达式\n* 数据压缩\n* 排序\n\n\n### [树](4%20Tree/README.md)\n\n* 二叉树  [快速排序](6%20Sort/README.md)就是个二叉树的前序遍历，归并排序就是个二叉树的后序遍历  \n* [二叉查找树BST](4%20Tree/2-二叉查找树/二叉查找树.md)  有序的二叉树，中序遍历结果是递增的\n* [平衡二叉树 AVL树](4%20Tree/3-平衡树AVL/README.md)   绝对平衡二叉树；\n* [红黑树](4%20Tree/9-红黑树%20R-B%20tree/红黑树.md)  弱平衡二叉树；使用广泛\n* [B树](4%20Tree/7-B树/B树.md)\n* [B+树](4%20Tree/7-B树/B+树.md)  mysql 索引使用 B+树 的数据结构\t  \n* [字典树trie](4%20Tree/4-字典树Trie/README.md) 字典树也叫前缀树，单词查找树\n* [二叉堆](4%20Tree/8-堆/堆.md)  \n* [伸展树](4%20Tree/5-伸展树/伸展树.md)\n* [后缀树](4%20Tree/6-后缀树/后缀树.md)\n* 斐波那契堆(Fibonacci Heap)   \n* 最优二叉树(赫夫曼树)  \n\n\n\n### [图的算法](5%20Graph/README.md)\n\n* 图的存储结构和基本操作（建立，遍历，删除节点，添加节点）   \n* 最小生成树  \n* 拓扑排序  \n* 关键路径  \n* 最短路径: Floyd,Dijkstra,bellman-ford,spfa  \n  \n  \n  \n### [排序算法](6%20Sort/README.md)\n\n**交换排序算法**\n\n* 冒泡排序\n* 插入排序    \n* 选择排序    \n* 希尔排序\n* 快排   \n* 归并排序  \n* 堆排序\n\n**线性排序算法**\n    \n* 桶排序 \n  \n  \n### [查找算法](7%20Search/README.md)  \n\n\n* 哈希表： O(1)  [hashtable实现参考这里](../3%20Hash%20Table/README.md)\n* 有序表查找：二分查找 \n* 顺序表查找：顺序查找, 复杂度O(N)  \n* 分块查找： 块内无序，块之间有序；可以先二分查找定位到块，然后再到`块`中顺序查找  \n* 动态查找:  二叉排序树，AVL树，B- ，B+（这里之所以叫 `动态查找表`，是因为表结构是查找的过程中动态生成的）\n   \n\n\n## [算法设计思想](8%20Algorithms%20Analysis/README.md)\n\n\n* [递归](8%20Algorithms%20Analysis/递归.md) \n* [分治算法](8%20Algorithms%20Analysis/分治算法.md) \n* [动态规划](8%20Algorithms%20Analysis/动态规划.md)  \n* [回溯法](8%20Algorithms%20Analysis/回溯法.md)\n* [迭代法](8%20Algorithms%20Analysis/迭代法.md)  \n* [穷举搜索法](8%20Algorithms%20Analysis/穷举搜索法.md)   \n* [贪心算法](8%20Algorithms%20Analysis/贪心算法.md) \n\n\n\n## [面试算法题目](9%20Algorithms%20Job%20Interview/README.md)\n\n这是一个算法题目合集，题目是我从网络和书籍之中整理而来，部分题目已经做了思路整理。问题分类包括：\n\n* 字符串\n* 堆和栈\n* 链表\n* 数值问题\n* 数组和数列问题\n* 矩阵问题\n* 二叉树\n* 图\n* 海量数据处理\n* 智力思维训练\n* 系统设计\n\n还有部分来自算法网站和书籍：\n\n* 九度OJ\n* leetcode\n* 剑指offer\n\n\n## [海量数据处理](91%20Algorithms%20In%20Big%20Data/README.md)\n\n* Hash映射/分而治之\n* Bitmap\n* Bloom filter(布隆过滤器)\n* Trie树\n* 数据库索引\n* 倒排索引(Inverted Index)\n* 双层桶划分\n* 外排序\n* simhash算法\n* 分布处理之Mapreduce\n\n\n\n## [开源项目中的算法](93%20Algorithms%20In%20Open%20Source/README.md)\n\n* YYCache\n* cocos2d-objc\n* bitcoin\n* geohash\n* kafka\n* nginx\n* zookeeper\n* ...\n\n\n\n\n## 15个经典基础算法\n\n\n* [KMP 字符串匹配算法](1%20String/KMP.md)\n* [Hash](3%20Hash%20Table/README.md)   \n* [快速排序](6%20Sort/README.md)\n* 快速选择SELECT \n* [红黑树 （一种弱/自平衡的`二叉查找树`）](4%20Tree/9-红黑树%20R-B%20tree/红黑树.md)\n* [BFS/DFS （广度/深度优先遍历）](5%20Graph/DFS%20和%20BFS.md)\n* [`A*`寻路算法： 求解最短路径](5%20Graph/最短路径.md)\n* Dijkstra：最短路径算法\n* `SPFA(Shortest Path Faster Algorithm)` 单元最短路径算法  \n* 启发式搜索\n* 遗传算法 `GA`  \n* [DP (动态规划 dynamic programming)](8%20Algorithms%20Analysis/动态规划.md)\n* 图像特征提取之`SIFT` 算法 , 广泛的应用于图像识别，图像检索，3D重建等CV的各种领域 \n* 傅立叶变换  \n\n\n## 推荐阅读\n\n### 刷题必备  \n\n* 《剑指offer》  \n* 《编程之美》  \n* 《编程之法:面试和算法心得》      \n* 《算法谜题》 都是思维题 \n\n### 基础\n\n* 《编程珠玑》Programming Pearls   \n* 《编程珠玑(续)》   \n* 《数据结构与算法分析》   \n* 《Algorithms》 这本近千页的书只有6章,其中四章分别是排序，查找，图，字符串，足见介绍细致     \n\n### 算法设计 \n\n* 《算法设计与分析基础》    \n* 《算法引论》 告诉你如何创造算法   断货        \n* 《Algorithm Design Manual》算法设计手册 红皮书  \n* 《算法导论》 是一本对算法介绍比较全面的经典书籍     \n* 《Algorithms on Strings,Trees and Sequences》    \n* 《Advanced Data Structures》 各种诡异高级的数据结构和算法 如元胞自动机、斐波纳契堆、线段树  600块    \n  \n \n### 延伸阅读 \n   \n* 《深入理解计算机系统》    \n* 《TCP/IP详解三卷》    \n* 《UNIX网络编程二卷》  \n* 《UNIX环境高级编程：第2版》  \n* 《The practice of programming》   Brian Kernighan和Rob Pike    \n* 《writing efficient programs》  优化   \n* 《The science of programming》 证明代码段的正确性   800块一本   \n\n\n## 参考链接和学习网站\n\n### [July 博客](http://blog.csdn.net/v_july_v) \n\n* 《数学建模十大经典算法》    \n* 《数据挖掘领域十大经典算法》    \n* 《十道海量数据处理面试题》      \n* 《数字图像处理领域的二十四个经典算法》    \n* 《精选微软等公司经典的算法面试100题》 \n* [The-Art-Of-Programming-By-July](https://github.com/julycoding/The-Art-Of-Programming-By-July)\n* [微软面试100题](http://blog.csdn.net/column/details/ms100.html)    \n* [程序员编程艺术](http://blog.csdn.net/v_JULY_v/article/details/6460494)   \n\n\n### 基本算法演示 \n\nhttp://sjjg.js.zwu.edu.cn/SFXX/sf1/sfys.html  \nhttp://www.cs.usfca.edu/~galles/visualization/Algorithms.html  \n  \n   \n### 编程网站\n\n* [leetcode](http://leetcode.com/)   \n* [codetop](https://codetop.cc/home) 企业高频面试题库，刷题必备\n* [openjudge](http://openjudge.cn/)  开放在线程序评测平台，可以创建自己的OJ小组   \n* [九度OJ](http://ac.jobdu.com/index.php)     \n* 这有个[ACM训练方案](http://www.java3z.com/cwbwebhome/article/article19/res041.html)   \n\n\n### 网课\n\n[高级数据结构和算法](https://www.coursera.org/learn/gaoji-shuju-jiegou/)  北大教授张铭老师在coursera上的课程。完成这门课之时，你将掌握多维数组、广义表、Trie树、AVL树、伸展树等高级数据结构，并结合内排序、外排序、检索、索引有关的算法，高效地解决现实生活中一些比较复杂的应用问题。当然coursera上也还有很多其它算法方面的视频课程。\n\n\n[算法设计与分析 Design and Analysis of Algorithms](https://class.coursera.org/algorithms-001/lecture) 由北大教授Wanling Qu在coursera讲授的一门算法课程。首先介绍一些与算法有关的基础知识，然后阐述经典的算法设计思想和分析技术，主要涉及的算法设计技术是：分治策略、动态规划、贪心法、回溯与分支限界等。每个视频都配有相应的讲义（pdf文件）以便阅读和复习。\n\n\n### 其它\n\n[OI Wiki](https://github.com/24OI/OI-wiki/) 主要内容是 OI/ACM-ICPC 编程竞赛 (competitive programming) 相关的知识整理, 包括基础知识、常见题型、解题思路以及常用工具等内容。\n\n[labuladong 的算法小抄](https://labuladong.gitee.io/algo/) 作者整理了很多的解题套路框架，看完获益良多\n\n## 联系\n\n[@移动开发小冉](http://weibo.com/ranwj)\n\n\n\n"
        }
      ]
    }
  ]
}