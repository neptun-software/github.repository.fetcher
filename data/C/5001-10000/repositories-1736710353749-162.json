{
  "metadata": {
    "timestamp": 1736710353749,
    "page": 162,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Meituan-Dianping/SQLAdvisor",
      "stars": 5601,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 18.6318359375,
          "content": "# Copyright (c) 2006, 2014, Oracle and/or its affiliates. All rights reserved.\n# \n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; version 2 of the License.\n# \n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA\n\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6)\n# Avoid warnings in higher versions\nif(\"${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}\" GREATER 2.6)\n CMAKE_POLICY(VERSION 2.8)\nendif()\n\n# We use PROPERTIES LINK_INTERFACE_LIBRARIES. See cmake --help-policy CMP0022\nIF(CMAKE_VERSION VERSION_EQUAL \"2.8.12\" OR\n   CMAKE_VERSION VERSION_GREATER \"2.8.12\")\n CMAKE_POLICY(SET CMP0022 OLD)\nENDIF()\n\n# We use the LOCATION target property (CMP0026)\n# and get_target_property() for non-existent targets (CMP0045)\n# and INSTALL_NAME_DIR (CMP0042)\nIF(CMAKE_VERSION VERSION_EQUAL \"3.0.0\" OR\n   CMAKE_VERSION VERSION_GREATER \"3.0.0\")\n CMAKE_POLICY(SET CMP0026 OLD)\n CMAKE_POLICY(SET CMP0045 OLD)\n CMAKE_POLICY(SET CMP0042 OLD)\nENDIF()\n\nMESSAGE(STATUS \"Running cmake version ${CMAKE_VERSION}\")\n\n# Will set GIT_EXECUTABLE and GIT_FOUND\nFIND_PACKAGE(Git)\n\nSET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)\n\n# First, decide about build type (debug or release)\n# If custom compiler flags are set or cmake is invoked with -DCMAKE_BUILD_TYPE, \n# respect user wishes and do not (re)define CMAKE_BUILD_TYPE. If WITH_DEBUG{_FULL} \n# is given, set CMAKE_BUILD_TYPE = Debug. Otherwise, use Relwithdebinfo.\n\n\nIF(DEFINED CMAKE_BUILD_TYPE)\n  SET(HAVE_CMAKE_BUILD_TYPE TRUE)\nENDIF()\nSET(CUSTOM_C_FLAGS $ENV{CFLAGS})\n\nOPTION(WITH_DEBUG \"Use dbug/safemutex\" OFF)\n\n# Distinguish between community and non-community builds, with the\n# default being a community build. This does not impact the feature\n# set that will be compiled in; it's merely provided as a hint to\n# custom packaging steps.\nOPTION(COMMUNITY_BUILD \"Set to true if this is a community build\" ON) \n\n# Use a default manufacturer if no manufacturer was identified.\nSET(MANUFACTURER_DOCSTRING\n  \"Set the entity that appears as the manufacturer of packages that support a manufacturer field.\")\nIF(NOT DEFINED MANUFACTURER) \n  SET(MANUFACTURER \"Built from Source\" CACHE  STRING ${MANUFACTURER_DOCSTRING})\n  MARK_AS_ADVANCED(MANUFACTURER)\nENDIF()\n\n#PAM build Handling\nOPTION(WITH_PAM \"Build with Percona PAM plugin\" OFF)\n# We choose to provide WITH_DEBUG as alias to standard CMAKE_BUILD_TYPE=Debug\n# which turns out to be not trivial, as this involves synchronization \n# between CMAKE_BUILD_TYPE and WITH_DEBUG. Besides, we have to deal with cases\n# where WITH_DEBUG is  reset from ON to OFF  and here we need to reset \n# CMAKE_BUILD_TYPE to either none or default RelWithDebInfo\n\nSET(BUILDTYPE_DOCSTRING\n \"Choose the type of build, options are: None(CMAKE_CXX_FLAGS or\n CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel\")\n\nIF(WITH_DEBUG)\n  SET(CMAKE_BUILD_TYPE \"Debug\" CACHE STRING ${BUILDTYPE_DOCSTRING} FORCE)\n  IF(UNIX AND NOT APPLE)\n    # Compiling with PIC speeds up embedded build, on PIC sensitive systems \n    # Predefine it to ON, in case user chooses to build embedded. \n    SET(WITH_PIC ON CACHE BOOL \"Compile with PIC\")\n  ENDIF()\n  SET(OLD_WITH_DEBUG 1 CACHE INTERNAL \"\" FORCE)\nELSEIF(NOT HAVE_CMAKE_BUILD_TYPE OR OLD_WITH_DEBUG)\n  IF(CUSTOM_C_FLAGS)\n    SET(CMAKE_BUILD_TYPE \"\" CACHE STRING ${BUILDTYPE_DOCSTRING} FORCE)\n  ELSE(CMAKE_BUILD_TYPE MATCHES \"Debug\" OR NOT HAVE_CMAKE_BUILD_TYPE)\n    SET(CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING \n       ${BUILDTYPE_DOCSTRING} FORCE)\n  ENDIF()\n  SET(OLD_WITH_DEBUG 0 CACHE INTERNAL \"\" FORCE)\nENDIF()\n\n# Optionally set project name, e.g.\n# foo.xcodeproj (mac) or foo.sln (windows)\nSET(MYSQL_PROJECT_NAME_DOCSTRING \"MySQL project name\")\nIF(DEFINED MYSQL_PROJECT_NAME)\n  SET(MYSQL_PROJECT_NAME ${MYSQL_PROJECT_NAME} CACHE STRING\n      ${MYSQL_PROJECT_NAME_DOCSTRING} FORCE)\nELSE()\n  SET(MYSQL_PROJECT_NAME \"MySQL\" CACHE STRING\n      ${MYSQL_PROJECT_NAME_DOCSTRING} FORCE)\n  MARK_AS_ADVANCED(MYSQL_PROJECT_NAME)\nENDIF()\nPROJECT(${MYSQL_PROJECT_NAME})\n\n# Maintainer mode is default on only for Linux debug builds using GCC/G++\nIF(CMAKE_BUILD_TYPE MATCHES \"Debug\" OR WITH_DEBUG)\n  IF(CMAKE_SYSTEM_NAME MATCHES \"Linux\" AND\n     CMAKE_COMPILER_IS_GNUCC AND CMAKE_COMPILER_IS_GNUCXX)\n    SET(MYSQL_MAINTAINER_MODE ON CACHE BOOL\n        \"MySQL maintainer-specific development environment\")\n  ENDIF()\nENDIF()\n\nOPTION(WITH_DEFAULT_COMPILER_OPTIONS\n  \"Use flags from cmake/build_configurations/compiler_options.cmake\"\n  ON)\nOPTION(WITH_DEFAULT_FEATURE_SET\n  \"Use feature set in cmake/build_configurations/feature_set.cmake\"\n  ON)\nIF(BUILD_CONFIG)\n  INCLUDE(\n  ${CMAKE_SOURCE_DIR}/cmake/build_configurations/${BUILD_CONFIG}.cmake)\nENDIF()\n\n#cmake on 64bit windows/mac/solaris doesn't set CMAKE_SYSTEM_PROCESSOR correctly\nSET(MYSQL_MACHINE_TYPE ${CMAKE_SYSTEM_PROCESSOR})\n\n\n# Include the platform-specific file. To allow exceptions, this code\n# looks for files in order of how specific they are. If there is, for\n# example, a generic Linux.cmake and a version-specific\n# Linux-2.6.28-11-generic, it will pick Linux-2.6.28-11-generic and\n# include it. It is then up to the file writer to include the generic\n# version if necessary.\nFOREACH(_base\n    ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_VERSION}-${CMAKE_SYSTEM_PROCESSOR}\n    ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_VERSION}\n    ${CMAKE_SYSTEM_NAME})\n  SET(_file ${CMAKE_SOURCE_DIR}/cmake/os/${_base}.cmake)\n  IF(EXISTS ${_file})\n    INCLUDE(${_file})\n    BREAK()\n  ENDIF()\nENDFOREACH()\n\n\nIF(UNIX)\n  OPTION(WITH_INNODB_MEMCACHED \"\" OFF)\n  OPTION(ENABLE_MEMCACHED_SASL \"Enable SASL on InnoDB Memcached\" OFF)\n  OPTION(ENABLE_MEMCACHED_SASL_PWDB \"Enable SASL on InnoDB Memcached\" OFF)\nELSE()\n  OPTION(WITH_INNODB_MEMCACHED \"\" OFF)\nENDIF()\n \n# Following autotools tradition, add preprocessor definitions\n# specified in environment variable CPPFLAGS\nIF(DEFINED ENV{CPPFLAGS})\n  ADD_DEFINITIONS($ENV{CPPFLAGS})\nENDIF()\n\nINCLUDE(CheckTypeSize)\nCHECK_TYPE_SIZE(\"void *\" SIZEOF_VOIDP)\nIF(WITH_DEFAULT_COMPILER_OPTIONS)\n  INCLUDE(${CMAKE_SOURCE_DIR}/cmake/build_configurations/compiler_options.cmake)\nENDIF()\nIF(WITH_DEFAULT_FEATURE_SET)\n  INCLUDE(${CMAKE_SOURCE_DIR}/cmake/build_configurations/feature_set.cmake)\nENDIF()\n\n# Add macros\nINCLUDE(character_sets)\nINCLUDE(cpu_info)\nINCLUDE(zlib)\nINCLUDE(ssl)\nINCLUDE(readline)\nINCLUDE(mysql_version)\nINCLUDE(libutils)\nINCLUDE(dtrace)\nINCLUDE(plugin)\nINCLUDE(install_macros)\nINCLUDE(install_layout)\nINCLUDE(mysql_add_executable)\n\n# Handle options\nOPTION(DISABLE_SHARED \n \"Don't build shared libraries, compile code as position-dependent\" OFF)\nIF(DISABLE_SHARED)\n  SET(WITHOUT_DYNAMIC_PLUGINS 1)\nENDIF()\nOPTION(ENABLED_PROFILING \"Enable profiling\" ON)\nOPTION(ENABLE_DTRACE \"Include support for DTrace probes\" OFF)\nOPTION(CYBOZU \"\" OFF)\nOPTION(BACKUP_TEST \"\" OFF)\nOPTION(WITHOUT_SERVER OFF)\nIF(UNIX)\n  OPTION(WITH_VALGRIND \"Valgrind instrumentation\" OFF)\nENDIF()\nIF(NOT WITHOUT_SERVER)\n  OPTION (WITH_UNIT_TESTS \"Compile MySQL with unit tests\" ON)\nENDIF()\nMARK_AS_ADVANCED(CYBOZU BACKUP_TEST WITHOUT_SERVER DISABLE_SHARED)\n\n\ninclude(CheckCSourceCompiles)\ninclude(CheckCXXSourceCompiles)\n# We need some extra FAIL_REGEX patterns\n# Note that CHECK_C_SOURCE_COMPILES is a misnomer, it will also link.\nMACRO (MY_CHECK_C_COMPILER_FLAG FLAG RESULT)\n  SET(SAVE_CMAKE_REQUIRED_FLAGS \"${CMAKE_REQUIRED_FLAGS}\")\n  SET(CMAKE_REQUIRED_FLAGS \"${CMAKE_REQUIRED_FLAGS} ${FLAG}\")\n  CHECK_C_SOURCE_COMPILES(\"int main(void) { return 0; }\" ${RESULT}\n    FAIL_REGEX \"argument unused during compilation\"\n    FAIL_REGEX \"unsupported .*option\"\n    FAIL_REGEX \"unknown .*option\"\n    FAIL_REGEX \"unrecognized .*option\"\n    FAIL_REGEX \"ignoring unknown option\"\n    FAIL_REGEX \"[Ww]arning: [Oo]ption\"\n    )\n  SET(CMAKE_REQUIRED_FLAGS \"${SAVE_CMAKE_REQUIRED_FLAGS}\")\nENDMACRO()\n\nMACRO (MY_CHECK_CXX_COMPILER_FLAG FLAG RESULT)\n  SET(SAVE_CMAKE_REQUIRED_FLAGS \"${CMAKE_REQUIRED_FLAGS}\")\n  SET(CMAKE_REQUIRED_FLAGS \"${CMAKE_REQUIRED_FLAGS} ${FLAG}\")\n  CHECK_CXX_SOURCE_COMPILES(\"int main(void) { return 0; }\" ${RESULT}\n    FAIL_REGEX \"argument unused during compilation\"\n    FAIL_REGEX \"unsupported .*option\"\n    FAIL_REGEX \"unknown .*option\"\n    FAIL_REGEX \"unrecognized .*option\"\n    FAIL_REGEX \"ignoring unknown option\"\n    FAIL_REGEX \"[Ww]arning: [Oo]ption\"\n    )\n  SET(CMAKE_REQUIRED_FLAGS \"${SAVE_CMAKE_REQUIRED_FLAGS}\")\nENDMACRO()\n\nOPTION(WITH_ASAN \"Enable address sanitizer\" OFF)\nIF (WITH_ASAN)\n  # gcc 4.8.1 and new versions of clang\n  MY_CHECK_C_COMPILER_FLAG(\"-fsanitize=address\" HAVE_C_FSANITIZE)\n  MY_CHECK_CXX_COMPILER_FLAG(\"-fsanitize=address\" HAVE_CXX_FSANITIZE)\n\n  IF(HAVE_C_FSANITIZE AND HAVE_CXX_FSANITIZE)\n    # We switch on basic optimization also for debug builds.\n    # With optimization we may get some warnings, so we switch off -Werror\n    SET(CMAKE_C_FLAGS_DEBUG\n      \"${CMAKE_C_FLAGS_DEBUG} -fsanitize=address -O1 -Wno-error -fPIC\")\n    SET(CMAKE_C_FLAGS_RELWITHDEBINFO\n      \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -fsanitize=address -fPIC\")\n    SET(CMAKE_CXX_FLAGS_DEBUG\n      \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address -O1 -Wno-error -fPIC\")\n    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO\n      \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -fsanitize=address -fPIC\")\n    SET(WITH_ASAN_OK 1)\n  ELSE()\n    # older versions of clang\n    MY_CHECK_C_COMPILER_FLAG(\"-faddress-sanitizer\" HAVE_C_FADDRESS)\n    MY_CHECK_CXX_COMPILER_FLAG(\"-faddress-sanitizer\" HAVE_CXX_FFADDRESS)\n\n    IF(HAVE_C_FADDRESS AND HAVE_CXX_FFADDRESS)\n      # We switch on basic optimization also for debug builds.\n      SET(CMAKE_C_FLAGS_DEBUG\n        \"${CMAKE_C_FLAGS_DEBUG} -faddress-sanitizer -O1 -fPIC\")\n      SET(CMAKE_C_FLAGS_RELWITHDEBINFO\n        \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -faddress-sanitizer -fPIC\")\n      SET(CMAKE_CXX_FLAGS_DEBUG\n        \"${CMAKE_CXX_FLAGS_DEBUG} -faddress-sanitizer -O1 -fPIC\")\n      SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO\n        \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -faddress-sanitizer -fPIC\")\n      SET(WITH_ASAN_OK 1)\n    ENDIF()\n  ENDIF()\n\n  IF(NOT WITH_ASAN_OK)\n    MESSAGE(FATAL_ERROR \"Do not know how to enable address sanitizer\")\n  ENDIF()\nENDIF()\n\n\nOPTION(ENABLE_DEBUG_SYNC \"Enable debug sync (debug builds only)\" ON) \nIF(ENABLE_DEBUG_SYNC) \n  SET(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -DENABLED_DEBUG_SYNC\") \n  SET(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -DENABLED_DEBUG_SYNC\") \nENDIF() \n \n# Older versions of ccache must be disabled: export CCACHE_DISABLE=1\n# See http://www.cmake.org/Wiki/CTest/Coverage\nOPTION(ENABLE_GCOV \"Enable gcov (debug, Linux builds only)\" OFF)\nIF (ENABLE_GCOV AND NOT WIN32 AND NOT APPLE)\n  SET(CMAKE_CXX_FLAGS_DEBUG\n    \"${CMAKE_CXX_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage -DHAVE_GCOV\")\n  SET(CMAKE_C_FLAGS_DEBUG\n    \"${CMAKE_C_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage -DHAVE_GCOV\")\n  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG\n    \"${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage -lgcov\")\nENDIF()\n\nOPTION(ENABLE_GPROF \"Enable gprof (optimized, Linux builds only)\" OFF)\nIF (ENABLE_GPROF AND NOT WIN32 AND NOT APPLE)\n  SET(CMAKE_C_FLAGS_RELWITHDEBINFO\n    \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -pg\")\n  SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO\n    \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -pg\")\n  SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO\n    \"${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} -pg\")\nENDIF()\n\nOPTION(ENABLED_LOCAL_INFILE\n \"If we should should enable LOAD DATA LOCAL by default\" ${IF_WIN})\nMARK_AS_ADVANCED(ENABLED_LOCAL_INFILE)\n\nOPTION(WITH_FAST_MUTEXES \"Compile with fast mutexes\" OFF)\nMARK_AS_ADVANCED(WITH_FAST_MUTEXES)\n\nOPTION(OPTIMIZER_TRACE \"Support tracing of Optimizer\" ON)\n\nOPTION(INNODB_COMPILER_HINTS \"Compile InnoDB with compiler hints\" ON)\nMARK_AS_ADVANCED(INNODB_COMPILER_HINTS)\n\nOPTION(INNODB_PAGE_ATOMIC_REF_COUNT \"Use atomics for the page reference count\"\n       ON)\nMARK_AS_ADVANCED(INNODB_PAGE_ATOMIC_REF_COUNT)\n\nIF (NOT MAX_INDEXES)\n  SET(MAX_INDEXES 64)\nENDIF()\nSET(MAX_INDEXES ${MAX_INDEXES} CACHE STRING \"Sets the maximum number of indexes per table, default 64\")\n\n# Set DBUG_OFF and other optional release-only flags for non-debug project types\nFOREACH(BUILD_TYPE RELEASE RELWITHDEBINFO MINSIZEREL)\n  FOREACH(LANG C CXX)\n    SET(CMAKE_${LANG}_FLAGS_${BUILD_TYPE} \n     \"${CMAKE_${LANG}_FLAGS_${BUILD_TYPE}} -DDBUG_OFF\")\n    IF(WITH_FAST_MUTEXES)\n      SET(CMAKE_${LANG}_FLAGS_${BUILD_TYPE} \n        \"${CMAKE_${LANG}_FLAGS_${BUILD_TYPE}} -DMY_PTHREAD_FASTMUTEX=1\")\n    ENDIF()\n  ENDFOREACH()\nENDFOREACH()\n\nIF(NOT CMAKE_BUILD_TYPE\n    AND NOT CMAKE_GENERATOR MATCHES \"Visual Studio\" \n    AND NOT CMAKE_GENERATOR MATCHES \"Xcode\") \n    # This is the case of no CMAKE_BUILD_TYPE choosen, typical for VS and Xcode\n    # or if custom C flags are set. In VS and Xcode for non-Debug configurations \n    # DBUG_OFF is already correctly set. Use DBUG_OFF for Makefile based projects \n    # without build type too, unless user specifically requests DBUG. \n    IF(NOT CMAKE_C_FLAGS MATCHES \"-DDBUG_ON\")\n      ADD_DEFINITIONS(-DDBUG_OFF)\n    ENDIF()\nENDIF()\n\n# Add safemutex for debug configurations, except on Windows\n# (safemutex has never worked on Windows)\nIF(WITH_DEBUG AND NOT WIN32 AND NOT WITH_INNODB_MEMCACHED)\n  FOREACH(LANG C CXX)\n      SET(CMAKE_${LANG}_FLAGS_DEBUG\n          \"${CMAKE_${LANG}_FLAGS_DEBUG} -DSAFE_MUTEX\")\n  ENDFOREACH()\nENDIF()\n\n\n# Set commonly used variables\nIF(WIN32)\n  SET(DEFAULT_MYSQL_HOME \"C:/Program Files/MySQL/MySQL Server ${MYSQL_BASE_VERSION}\" )\n  SET(SHAREDIR share)\nELSE()\n  SET(DEFAULT_MYSQL_HOME ${CMAKE_INSTALL_PREFIX})\n  SET(SHAREDIR ${DEFAULT_MYSQL_HOME}/${INSTALL_MYSQLSHAREDIR})\nENDIF()\n\nSET(DEFAULT_BASEDIR \"${DEFAULT_MYSQL_HOME}\")\nIF(INSTALL_MYSQLDATADIR MATCHES \"^/.*\")\n  SET(MYSQL_DATADIR ${INSTALL_MYSQLDATADIR} CACHE PATH \"default MySQL data directory\")\nELSE()\n  SET(MYSQL_DATADIR \"${DEFAULT_MYSQL_HOME}/${INSTALL_MYSQLDATADIR}\" CACHE PATH \"default MySQL data directory\")\nENDIF()\nSET(DEFAULT_CHARSET_HOME \"${DEFAULT_MYSQL_HOME}\")\nSET(PLUGINDIR \"${DEFAULT_MYSQL_HOME}/${INSTALL_PLUGINDIR}\")\nIF(SYSCONFDIR)\n  SET(DEFAULT_SYSCONFDIR \"${SYSCONFDIR}\")\nENDIF()\n\nSET(TMPDIR \"P_tmpdir\"\n  CACHE PATH\n  \"PATH to MySQL TMP dir. Defaults to the P_tmpdir macro in <stdio.h>\")\nIF(TMPDIR STREQUAL \"P_tmpdir\")\n  # Do not quote it, to refer to the P_tmpdir macro.\n  SET(DEFAULT_TMPDIR \"P_tmpdir\")\nELSE()\n  # Quote it, to make it a const char string.\n  SET(DEFAULT_TMPDIR \"\\\"${TMPDIR}\\\"\")\nENDIF()\n\n# Run platform tests\nINCLUDE(configure.cmake)\n\n# Common defines and includes\nADD_DEFINITIONS(-DHAVE_CONFIG_H)\nINCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/include)\n\n# Add bundled or system zlib.\nMYSQL_CHECK_ZLIB_WITH_COMPRESS()\n# Add bundled yassl/taocrypt or system openssl.\nMYSQL_CHECK_SSL()\n\n#\n# Setup maintainer mode options by the end. Platform checks are\n# not run with the warning options as to not perturb fragile checks\n# (i.e. do not make warnings into errors).\n#\n# Why doesn't these flags affect the entire build?\n# Because things may already have been included with ADD_SUBDIRECTORY\n#\nOPTION(MYSQL_MAINTAINER_MODE\n       \"MySQL maintainer-specific development environment\" OFF)\n\nINCLUDE(maintainer)\n\nIF(WITH_UNIT_TESTS)\n ENABLE_TESTING()\nENDIF()\n\nIF(NOT WITHOUT_SERVER)\n  SET (MYSQLD_STATIC_PLUGIN_LIBS \"\" CACHE INTERNAL \"\")\n  # Add storage engines and plugins.\n  CONFIGURE_PLUGINS()\nELSE()\n  # We may still want Cluster client libraries, use -DWITH_NDBCLUSTER=1\n  ADD_SUBDIRECTORY(storage/ndb)\nENDIF()\n\nADD_SUBDIRECTORY(include)\nADD_SUBDIRECTORY(dbug)\nADD_SUBDIRECTORY(strings)\nADD_SUBDIRECTORY(regex)\nADD_SUBDIRECTORY(mysys)\nADD_SUBDIRECTORY(mysys_ssl)\nADD_SUBDIRECTORY(extra)\nADD_SUBDIRECTORY(sql/share)\n\n\nIF(NOT WITHOUT_SERVER)\n  ADD_SUBDIRECTORY(sql)\nENDIF()\n\nIF(NOT WITHOUT_SERVER)\n  IF(EXISTS ${CMAKE_SOURCE_DIR}/internal/CMakeLists.txt)\n    ADD_SUBDIRECTORY(internal)\n  ENDIF()\nENDIF()\n\nINCLUDE(cmake/abi_check.cmake)\nINCLUDE(cmake/tags.cmake)\n\nCONFIGURE_FILE(config.h.cmake   ${CMAKE_BINARY_DIR}/include/my_config.h)\nCONFIGURE_FILE(config.h.cmake   ${CMAKE_BINARY_DIR}/include/config.h)\nCONFIGURE_FILE(${CMAKE_SOURCE_DIR}/include/mysql_version.h.in\n               ${CMAKE_BINARY_DIR}/include/mysql_version.h )\nCONFIGURE_FILE(\n    ${CMAKE_SOURCE_DIR}/cmake/info_macros.cmake.in\n    ${CMAKE_BINARY_DIR}/info_macros.cmake @ONLY)\n\n# Handle the \"INFO_*\" files.\nINCLUDE(${CMAKE_BINARY_DIR}/info_macros.cmake)\n# Source: This can be done during the cmake phase, all information is\n# available, but should be repeated on each \"make\" just in case someone\n# does \"cmake ; make ; git pull ; make\".\nCREATE_INFO_SRC(${CMAKE_BINARY_DIR}/Docs)\nADD_CUSTOM_TARGET(INFO_SRC ALL\n  COMMAND ${CMAKE_COMMAND} -P ${CMAKE_SOURCE_DIR}/cmake/info_src.cmake\n  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}\n)\n# Build flags: This must be postponed to the make phase.\nADD_CUSTOM_TARGET(INFO_BIN ALL\n  COMMAND ${CMAKE_COMMAND} -P ${CMAKE_SOURCE_DIR}/cmake/info_bin.cmake\n  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}\n)\n\n# Packaging\nIF(WIN32)\n  SET(CPACK_GENERATOR \"ZIP\")\nELSE()\n  SET(CPACK_GENERATOR \"TGZ\")\nENDIF()\n\n# Create a single package with \"make package\"\n# (see http://public.kitware.com/Bug/view.php?id=11452)\nSET(CPACK_MONOLITHIC_INSTALL 1 CACHE INTERNAL \"\")\n\nINCLUDE(CPack)\n\n# C compiler flags consist of:\n# CPPFLAGS        Taken from environment, see above.\n# ADD_DEFINITIONS In each individual CMakeLists.txt\n# CMAKE_C_FLAGS   From command line.\n#                 We extend these in maintainer.cmake\n# ENV{CFLAGS}     From environment, but environment is ignored if\n#                 CMAKE_C_FLAGS is also given on command line\n# CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE}\n#                 We extend these in compiler_options.cmake\n#\n# Note that CMakeCache.txt contains cmake builtins for these variables,\n# *not* the values that will actually be used:\n\nIF(CMAKE_GENERATOR MATCHES \"Makefiles\")\n  MESSAGE(STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\nENDIF()\nGET_PROPERTY(cwd_definitions DIRECTORY PROPERTY COMPILE_DEFINITIONS)\nMESSAGE(STATUS \"COMPILE_DEFINITIONS: ${cwd_definitions}\")\nMESSAGE(STATUS \"CMAKE_C_FLAGS: ${CMAKE_C_FLAGS}\")\nMESSAGE(STATUS \"CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}\")\nIF(CMAKE_BUILD_TYPE AND CMAKE_GENERATOR MATCHES \"Makefiles\")\n  STRING(TOUPPER \"${CMAKE_BUILD_TYPE}\" CMAKEBT)\n  MESSAGE(STATUS \"CMAKE_C_FLAGS_${CMAKEBT}: ${CMAKE_C_FLAGS_${CMAKEBT}}\")\n  MESSAGE(STATUS \"CMAKE_CXX_FLAGS_${CMAKEBT}: ${CMAKE_CXX_FLAGS_${CMAKEBT}}\")\nENDIF()\nIF(NOT CMAKE_GENERATOR MATCHES \"Makefiles\")\n  MESSAGE(STATUS \"CMAKE_C_FLAGS_DEBUG: ${CMAKE_C_FLAGS_DEBUG}\")\n  MESSAGE(STATUS \"CMAKE_CXX_FLAGS_DEBUG: ${CMAKE_CXX_FLAGS_DEBUG}\")\n  MESSAGE(STATUS\n    \"CMAKE_C_FLAGS_RELWITHDEBINFO: ${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n  MESSAGE(STATUS\n    \"CMAKE_CXX_FLAGS_RELWITHDEBINFO: ${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\nENDIF()\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.6494140625,
          "content": " GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.056640625,
          "content": "### 一、简介\n\nSQLAdvisor是由美团点评公司技术工程部DBA团队（北京）开发维护的一个分析SQL给出索引优化建议的工具。它基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系 给出索引优化建议。**目前SQLAdvisor在美团点评内部广泛应用，公司内部对SQLAdvisor的开发全面转到github上，开源和内部使用保持一致**。\n    \n**主要功能：输出SQL索引优化建议**\n\n### 二、SQLAdvisor详细说明\n\n1. [SQLAdvisor快速入门教程](./doc/QUICK_START.md)\n2. [SQLAdvisor架构和实践](./doc/THEORY_PRACTICES.md)\n3. [SQLAdvisor release notes](./doc/RELEASE_NOTES.md)\n4. [SQLAdvisor开发规范](./doc/DEVELOPMENT_NORM.md)\n5. [FAQ](./doc/FAQ.md)\n\n### 三、SQLAdvisor的需求及Bug反馈方式\n\n如果用户在实际的应用场景中对SQLAdvisor有新的功能需求，或者在使用SQLAdvisor的过程中发现了bug，在github上进行交流或是PullRequest，也可以在讨论组/群进行反馈，我们会及时维护。\n\n![QQ](./doc/img/qq.png)\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0908203125,
          "content": "MYSQL_VERSION_MAJOR=5\nMYSQL_VERSION_MINOR=6\nMYSQL_VERSION_PATCH=23\nMYSQL_VERSION_EXTRA=-72.1\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.cmake",
          "type": "blob",
          "size": 19.326171875,
          "content": "/* Copyright (c) 2009, 2014, Oracle and/or its affiliates. All rights reserved.\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA */\n\n#ifndef MY_CONFIG_H\n#define MY_CONFIG_H\n#cmakedefine DOT_FRM_VERSION @DOT_FRM_VERSION@\n/* Headers we may want to use. */\n#cmakedefine STDC_HEADERS 1\n#cmakedefine _GNU_SOURCE 1\n#cmakedefine HAVE_LLVM_LIBCPP 1\n#cmakedefine HAVE_ALLOCA_H 1\n#cmakedefine HAVE_AIO_H 1\n#cmakedefine HAVE_ARPA_INET_H 1\n#cmakedefine HAVE_ASM_MSR_H 1\n#cmakedefine HAVE_ASM_TERMBITS_H 1\n#cmakedefine HAVE_BSEARCH 1\n#cmakedefine HAVE_CRYPT_H 1\n#cmakedefine HAVE_CURSES_H 1\n#cmakedefine HAVE_CXXABI_H 1\n#cmakedefine HAVE_NCURSES_H 1\n#cmakedefine HAVE_NDIR_H 1\n#cmakedefine HAVE_DIRENT_H 1\n#cmakedefine HAVE_DLFCN_H 1\n#cmakedefine HAVE_EXECINFO_H 1\n#cmakedefine HAVE_FCNTL_H 1\n#cmakedefine HAVE_FENV_H 1\n#cmakedefine HAVE_FLOAT_H 1\n#cmakedefine HAVE_FLOATINGPOINT_H 1\n#cmakedefine HAVE_FNMATCH_H 1\n#cmakedefine HAVE_FPU_CONTROL_H 1\n#cmakedefine HAVE_GRP_H 1\n#cmakedefine HAVE_IA64INTRIN_H 1\n#cmakedefine HAVE_IEEEFP_H 1\n#cmakedefine HAVE_INTTYPES_H 1\n#cmakedefine HAVE_LIMITS_H 1\n#cmakedefine HAVE_LOCALE_H 1\n#cmakedefine HAVE_MALLOC_H 1\n#cmakedefine HAVE_MEMORY_H 1\n#cmakedefine HAVE_NETINET_IN_H 1\n#cmakedefine HAVE_PATHS_H 1\n#cmakedefine HAVE_POLL_H 1\n#cmakedefine HAVE_PORT_H 1\n#cmakedefine HAVE_PWD_H 1\n#cmakedefine HAVE_SCHED_H 1\n#cmakedefine HAVE_SELECT_H 1\n#cmakedefine HAVE_SOLARIS_LARGE_PAGES 1\n#cmakedefine HAVE_STDDEF_H 1\n#cmakedefine HAVE_STDLIB_H 1\n#cmakedefine HAVE_STDARG_H 1\n#cmakedefine HAVE_STRINGS_H 1\n#cmakedefine HAVE_STRING_H 1\n#cmakedefine HAVE_STDINT_H 1\n#cmakedefine HAVE_SEMAPHORE_H 1\n#cmakedefine HAVE_SYNCH_H 1\n#cmakedefine HAVE_SYSENT_H 1\n#cmakedefine HAVE_SYS_DIR_H 1\n#cmakedefine HAVE_SYS_CDEFS_H 1\n#cmakedefine HAVE_SYS_FILE_H 1\n#cmakedefine HAVE_SYS_FPU_H 1\n#cmakedefine HAVE_SYS_IOCTL_H 1\n#cmakedefine HAVE_SYS_IPC_H 1\n#cmakedefine HAVE_SYS_MALLOC_H 1\n#cmakedefine HAVE_SYS_MMAN_H 1\n#cmakedefine HAVE_SYS_NDIR_H 1\n#cmakedefine HAVE_SYS_PTE_H 1\n#cmakedefine HAVE_SYS_PTEM_H 1\n#cmakedefine HAVE_SYS_PRCTL_H 1\n#cmakedefine HAVE_SYS_RESOURCE_H 1\n#cmakedefine HAVE_SYS_SELECT_H 1\n#cmakedefine HAVE_SYS_SHM_H 1\n#cmakedefine HAVE_SYS_SOCKET_H 1\n#cmakedefine HAVE_SYS_STAT_H 1\n#cmakedefine HAVE_SYS_STREAM_H 1\n#cmakedefine HAVE_SYS_TERMCAP_H 1\n#cmakedefine HAVE_SYS_TIMEB_H 1\n#cmakedefine HAVE_SYS_TIMES_H 1\n#cmakedefine HAVE_SYS_TIME_H 1\n#cmakedefine HAVE_SYS_TYPES_H 1\n#cmakedefine HAVE_SYS_UN_H 1\n#cmakedefine HAVE_SYS_VADVISE_H 1\n#cmakedefine HAVE_TERM_H 1\n#cmakedefine HAVE_TERMBITS_H 1\n#cmakedefine HAVE_TERMIOS_H 1\n#cmakedefine HAVE_TERMIO_H 1\n#cmakedefine HAVE_TERMCAP_H 1\n#cmakedefine HAVE_TIME_H 1\n#cmakedefine HAVE_UNISTD_H 1\n#cmakedefine HAVE_UTIME_H 1\n#cmakedefine HAVE_VARARGS_H 1\n#cmakedefine HAVE_VIS_H 1\n#cmakedefine HAVE_SYS_UTIME_H 1\n#cmakedefine HAVE_SYS_WAIT_H 1\n#cmakedefine HAVE_SYS_PARAM_H 1\n\n/* Libraries */\n#cmakedefine HAVE_LIBPTHREAD 1\n#cmakedefine HAVE_LIBM 1\n#cmakedefine HAVE_LIBDL 1\n#cmakedefine HAVE_LIBRT 1\n#cmakedefine HAVE_LIBSOCKET 1\n#cmakedefine HAVE_LIBNSL 1\n#cmakedefine HAVE_LIBCRYPT 1\n#cmakedefine HAVE_LIBMTMALLOC 1\n#cmakedefine HAVE_LIBWRAP 1\n#cmakedefine HAVE_LIBRESOLV 1\n/* Does \"struct timespec\" have a \"sec\" and \"nsec\" field? */\n#cmakedefine HAVE_TIMESPEC_TS_SEC 1\n\n/* Readline */\n#cmakedefine HAVE_HIST_ENTRY 1\n#cmakedefine USE_LIBEDIT_INTERFACE 1\n\n#cmakedefine FIONREAD_IN_SYS_IOCTL 1\n#cmakedefine GWINSZ_IN_SYS_IOCTL 1\n#cmakedefine TIOCSTAT_IN_SYS_IOCTL 1\n#cmakedefine FIONREAD_IN_SYS_FILIO 1\n\n/* Functions we may want to use. */\n#cmakedefine HAVE_ALIGNED_MALLOC 1\n#cmakedefine HAVE_ALIGNED_FREE 1\n#cmakedefine HAVE_AIOWAIT 1\n#cmakedefine HAVE_ALARM 1\n#cmakedefine HAVE_ALLOCA 1\n#cmakedefine HAVE_BMOVE 1\n#cmakedefine HAVE_INDEX 1\n#cmakedefine HAVE_CHOWN 1\n#cmakedefine HAVE_CLOCK_GETTIME 1\n#cmakedefine HAVE_CRYPT 1\n#cmakedefine HAVE_CUSERID 1\n#cmakedefine HAVE_DIRECTIO 1\n#cmakedefine HAVE_DLERROR 1\n#cmakedefine HAVE_DLOPEN 1\n#cmakedefine HAVE_DOPRNT 1\n#cmakedefine HAVE_FCHMOD 1\n#cmakedefine HAVE_FCNTL 1\n#cmakedefine HAVE_FCONVERT 1\n#cmakedefine HAVE_FDATASYNC 1\n#cmakedefine HAVE_FESETROUND 1\n#cmakedefine HAVE_FINITE 1\n#cmakedefine HAVE_FP_EXCEPT 1\n#cmakedefine HAVE_FPSETMASK 1\n#cmakedefine HAVE_FSEEKO 1\n#cmakedefine HAVE_FSYNC 1\n#cmakedefine HAVE_FTIME 1\n#cmakedefine HAVE_GETADDRINFO 1\n#cmakedefine HAVE_GETCWD 1\n#cmakedefine HAVE_GETHOSTBYADDR_R 1\n#cmakedefine HAVE_GETHRTIME 1\n#cmakedefine HAVE_GETLINE 1\n#cmakedefine HAVE_GETNAMEINFO 1\n#cmakedefine HAVE_GETPAGESIZE 1\n#cmakedefine HAVE_GETPASS 1\n#cmakedefine HAVE_GETPASSPHRASE 1\n#cmakedefine HAVE_GETPWNAM 1\n#cmakedefine HAVE_GETPWUID 1\n#cmakedefine HAVE_GETRLIMIT 1\n#cmakedefine HAVE_GETRUSAGE 1\n#cmakedefine HAVE_GETTIMEOFDAY 1\n#cmakedefine HAVE_GETWD 1\n#cmakedefine HAVE_GMTIME_R 1\n#cmakedefine gmtime_r @gmtime_r@\n#cmakedefine HAVE_INITGROUPS 1\n#cmakedefine HAVE_ISSETUGID 1\n#cmakedefine HAVE_GETUID 1\n#cmakedefine HAVE_GETEUID 1\n#cmakedefine HAVE_GETGID 1\n#cmakedefine HAVE_GETEGID 1\n#cmakedefine HAVE_ISNAN 1\n#cmakedefine HAVE_ISINF 1\n#cmakedefine HAVE_LARGE_PAGE_OPTION 1\n#cmakedefine HAVE_LDIV 1\n#cmakedefine HAVE_LRAND48 1\n#cmakedefine HAVE_LOCALTIME_R 1\n#cmakedefine HAVE_LOG2 1\n#cmakedefine HAVE_LONGJMP 1\n#cmakedefine HAVE_LSTAT 1\n#cmakedefine HAVE_MEMALIGN 1\n/* #cmakedefine HAVE_MLOCK 1 see Bug#54662 */\n#cmakedefine HAVE_NL_LANGINFO 1\n#cmakedefine HAVE_MADVISE 1\n#cmakedefine HAVE_DECL_MADVISE 1\n#cmakedefine HAVE_DECL_TGOTO 1\n#cmakedefine HAVE_DECL_MHA_MAPSIZE_VA\n#cmakedefine HAVE_MALLOC_INFO 1\n#cmakedefine HAVE_MEMCPY 1\n#cmakedefine HAVE_MEMMOVE 1\n#cmakedefine HAVE_MKSTEMP 1\n#cmakedefine HAVE_MLOCKALL 1\n#cmakedefine HAVE_MMAP 1\n#cmakedefine HAVE_MMAP64 1\n#cmakedefine HAVE_PERROR 1\n#cmakedefine HAVE_POLL 1\n#cmakedefine HAVE_PORT_CREATE 1\n#cmakedefine HAVE_POSIX_FALLOCATE 1\n#cmakedefine HAVE_POSIX_MEMALIGN 1\n#cmakedefine HAVE_PREAD 1\n#cmakedefine HAVE_PAUSE_INSTRUCTION 1\n#cmakedefine HAVE_FAKE_PAUSE_INSTRUCTION 1\n#cmakedefine HAVE_RDTSCLL 1\n#cmakedefine HAVE_READ_REAL_TIME 1\n#cmakedefine HAVE_PTHREAD_ATTR_CREATE 1\n#cmakedefine HAVE_PTHREAD_ATTR_GETGUARDSIZE 1\n#cmakedefine HAVE_PTHREAD_ATTR_GETSTACKSIZE 1\n#cmakedefine HAVE_PTHREAD_ATTR_SETPRIO 1\n#cmakedefine HAVE_PTHREAD_ATTR_SETSCHEDPARAM 1\n#cmakedefine HAVE_PTHREAD_ATTR_SETSCOPE 1\n#cmakedefine HAVE_PTHREAD_ATTR_SETSTACKSIZE 1\n#cmakedefine HAVE_PTHREAD_CONDATTR_CREATE 1\n#cmakedefine HAVE_PTHREAD_CONDATTR_SETCLOCK 1\n#cmakedefine HAVE_PTHREAD_KEY_DELETE 1\n#cmakedefine HAVE_PTHREAD_KEY_DELETE 1\n#cmakedefine HAVE_PTHREAD_KILL 1\n#cmakedefine HAVE_PTHREAD_RWLOCK_RDLOCK 1\n#cmakedefine HAVE_PTHREAD_SETPRIO_NP 1\n#cmakedefine HAVE_PTHREAD_SETSCHEDPARAM 1\n#cmakedefine HAVE_PTHREAD_SIGMASK 1\n#cmakedefine HAVE_PTHREAD_THREADMASK 1\n#cmakedefine HAVE_PTHREAD_YIELD_NP 1\n#cmakedefine HAVE_PTHREAD_YIELD_ZERO_ARG 1\n#cmakedefine PTHREAD_ONCE_INITIALIZER @PTHREAD_ONCE_INITIALIZER@\n#cmakedefine HAVE_PUTENV 1\n#cmakedefine HAVE_RE_COMP 1\n#cmakedefine HAVE_REGCOMP 1\n#cmakedefine HAVE_READDIR_R 1\n#cmakedefine HAVE_READLINK 1\n#cmakedefine HAVE_REALPATH 1\n#cmakedefine HAVE_RENAME 1\n#cmakedefine HAVE_RINT 1\n#cmakedefine HAVE_RWLOCK_INIT 1\n#cmakedefine HAVE_SCHED_YIELD 1\n#cmakedefine HAVE_SELECT 1\n#cmakedefine HAVE_SETFD 1\n#cmakedefine HAVE_SETENV 1\n#cmakedefine HAVE_SETLOCALE 1\n#cmakedefine HAVE_SIGADDSET 1\n#cmakedefine HAVE_SIGEMPTYSET 1\n#cmakedefine HAVE_SIGHOLD 1\n#cmakedefine HAVE_SIGSET 1\n#cmakedefine HAVE_SIGSET_T 1\n#cmakedefine HAVE_SIGACTION 1\n#cmakedefine HAVE_SIGTHREADMASK 1\n#cmakedefine HAVE_SIGWAIT 1\n#cmakedefine HAVE_SLEEP 1\n#cmakedefine HAVE_SNPRINTF 1\n#cmakedefine HAVE_STPCPY 1\n#cmakedefine HAVE_STRERROR 1\n#cmakedefine HAVE_STRCOLL 1\n#cmakedefine HAVE_STRSIGNAL 1\n#cmakedefine HAVE_STRLCPY 1\n#cmakedefine HAVE_STRLCAT 1\n#cmakedefine HAVE_FGETLN 1\n#cmakedefine HAVE_STRNLEN 1\n#cmakedefine HAVE_STRPBRK 1\n#cmakedefine HAVE_STRSEP 1\n#cmakedefine HAVE_STRSTR 1\n#cmakedefine HAVE_STRTOK_R 1\n#cmakedefine HAVE_STRTOL 1\n#cmakedefine HAVE_STRTOLL 1\n#cmakedefine HAVE_STRTOUL 1\n#cmakedefine HAVE_STRTOULL 1\n#cmakedefine HAVE_SHMAT 1\n#cmakedefine HAVE_SHMCTL 1\n#cmakedefine HAVE_SHMDT 1\n#cmakedefine HAVE_SHMGET 1\n#cmakedefine HAVE_TELL 1\n#cmakedefine HAVE_TEMPNAM 1\n#cmakedefine HAVE_THR_SETCONCURRENCY 1\n#cmakedefine HAVE_THR_YIELD 1\n#cmakedefine HAVE_TIME 1\n#cmakedefine HAVE_TIMES 1\n#cmakedefine HAVE_VALLOC 1\n#define HAVE_VIO_READ_BUFF 1\n#cmakedefine HAVE_VASPRINTF 1\n#cmakedefine HAVE_VPRINTF 1\n#cmakedefine HAVE_VSNPRINTF 1\n#cmakedefine HAVE_FTRUNCATE 1\n#cmakedefine HAVE_TZNAME 1\n#cmakedefine HAVE_AIO_READ 1\n/* Symbols we may use */\n/* used by stacktrace functions */\n#cmakedefine HAVE_BSS_START 1\n#cmakedefine HAVE_BACKTRACE 1\n#cmakedefine HAVE_BACKTRACE_SYMBOLS 1\n#cmakedefine HAVE_BACKTRACE_SYMBOLS_FD 1\n#cmakedefine HAVE_PRINTSTACK 1\n#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 1\n#cmakedefine HAVE_STRUCT_IN6_ADDR 1\n#cmakedefine HAVE_NETINET_IN6_H 1\n#cmakedefine HAVE_IPV6 1\n#cmakedefine ss_family @ss_family@\n#cmakedefine HAVE_SOCKADDR_IN_SIN_LEN 1\n#cmakedefine HAVE_SOCKADDR_IN6_SIN6_LEN 1\n#cmakedefine HAVE_TIMESPEC_TS_SEC 1\n#cmakedefine STRUCT_DIRENT_HAS_D_INO 1\n#cmakedefine STRUCT_DIRENT_HAS_D_NAMLEN 1\n#cmakedefine SPRINTF_RETURNS_INT 1\n\n#cmakedefine HAVE_POSIX_TIMERS 1\n#cmakedefine HAVE_KQUEUE_TIMERS 1\n#cmakedefine HAVE_MY_TIMER 1\n\n#cmakedefine DNS_USE_CPU_CLOCK_FOR_ID 1\n#cmakedefine HAVE_EPOLL 1\n#cmakedefine HAVE_EPOLL_CTL 1\n/* #cmakedefine HAVE_EVENT_PORTS 1 */\n#cmakedefine HAVE_INET_NTOP 1\n#cmakedefine HAVE_KQUEUE 1\n#cmakedefine HAVE_WORKING_KQUEUE 1\n#cmakedefine HAVE_SIGNAL 1\n#cmakedefine HAVE_TIMERADD 1\n#cmakedefine HAVE_TIMERCLEAR 1\n#cmakedefine HAVE_TIMERCMP 1\n#cmakedefine HAVE_TIMERISSET 1\n\n#cmakedefine HAVE_DEVPOLL 1\n#cmakedefine HAVE_SIGNAL_H 1\n#cmakedefine HAVE_SYS_DEVPOLL_H 1\n#cmakedefine HAVE_SYS_EPOLL_H 1\n#cmakedefine HAVE_SYS_EVENT_H 1\n#cmakedefine HAVE_SYS_QUEUE_H 1\n#cmakedefine HAVE_TAILQFOREACH 1\n#define USE_MB 1\n#define USE_MB_IDENT 1\n\n#cmakedefine HAVE_VALGRIND\n\n/* Types we may use */\n#ifdef __APPLE__\n  /*\n    Special handling required for OSX to support universal binaries that \n    mix 32 and 64 bit architectures.\n  */\n  #if(__LP64__)\n    #define SIZEOF_LONG 8\n  #else\n    #define SIZEOF_LONG 4\n  #endif\n  #define SIZEOF_VOIDP   SIZEOF_LONG\n  #define SIZEOF_CHARP   SIZEOF_LONG\n  #define SIZEOF_SIZE_T  SIZEOF_LONG\n#else\n/* No indentation, to fetch the lines from verification scripts */\n#cmakedefine SIZEOF_LONG   @SIZEOF_LONG@\n#cmakedefine SIZEOF_VOIDP  @SIZEOF_VOIDP@\n#cmakedefine SIZEOF_CHARP  @SIZEOF_CHARP@\n#cmakedefine SIZEOF_SIZE_T @SIZEOF_CHARP@\n#endif\n\n#cmakedefine SIZEOF_CHAR @SIZEOF_CHAR@\n#define HAVE_CHAR 1\n#define HAVE_LONG 1\n#define HAVE_CHARP 1\n#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@\n#define HAVE_SHORT 1\n#cmakedefine SIZEOF_INT @SIZEOF_INT@\n#define HAVE_INT 1\n#cmakedefine SIZEOF_LONG_LONG @SIZEOF_LONG_LONG@\n#cmakedefine HAVE_LONG_LONG 1\n#cmakedefine SIZEOF_OFF_T @SIZEOF_OFF_T@\n#cmakedefine HAVE_OFF_T 1\n#cmakedefine SIZEOF_SIGSET_T @SIZEOF_SIGSET_T@\n#cmakedefine HAVE_SIGSET_T 1\n#cmakedefine HAVE_SIZE_T 1\n#cmakedefine SIZEOF_UCHAR @SIZEOF_UCHAR@\n#cmakedefine HAVE_UCHAR 1\n#cmakedefine SIZEOF_UINT @SIZEOF_UINT@\n#cmakedefine HAVE_UINT 1\n#cmakedefine SIZEOF_ULONG @SIZEOF_ULONG@\n#cmakedefine HAVE_ULONG 1\n#cmakedefine SIZEOF_INT8 @SIZEOF_INT8@\n#cmakedefine HAVE_INT8 1\n#cmakedefine SIZEOF_UINT8 @SIZEOF_UINT8@\n#cmakedefine HAVE_UINT8 1\n#cmakedefine SIZEOF_INT16 @SIZEOF_INT16@\n#cmakedefine HAVE_INT16 1\n#cmakedefine SIZEOF_UINT16 @SIZEOF_UINT16@\n#cmakedefine HAVE_UINT16 1\n#cmakedefine SIZEOF_INT32 @SIZEOF_INT32@\n#cmakedefine HAVE_INT32 1\n#cmakedefine SIZEOF_UINT32 @SIZEOF_UINT32@\n#cmakedefine HAVE_UINT32 1\n#cmakedefine SIZEOF_U_INT32_T @SIZEOF_U_INT32_T@\n#cmakedefine HAVE_U_INT32_T 1\n#cmakedefine SIZEOF_INT64 @SIZEOF_INT64@\n#cmakedefine HAVE_INT64 1\n#cmakedefine SIZEOF_UINT64 @SIZEOF_UINT64@\n#cmakedefine HAVE_UINT64 1\n#cmakedefine SIZEOF_BOOL @SIZEOF_BOOL@\n#cmakedefine HAVE_BOOL 1\n\n#cmakedefine SOCKET_SIZE_TYPE @SOCKET_SIZE_TYPE@\n\n#cmakedefine HAVE_MBSTATE_T\n\n#cmakedefine MAX_INDEXES @MAX_INDEXES@\n\n#cmakedefine QSORT_TYPE_IS_VOID 1\n#cmakedefine RETQSORTTYPE @RETQSORTTYPE@\n\n#cmakedefine SIGNAL_RETURN_TYPE_IS_VOID 1\n#cmakedefine RETSIGTYPE @RETSIGTYPE@\n#cmakedefine VOID_SIGHANDLER 1\n#define STRUCT_RLIMIT struct rlimit\n\n#ifdef __APPLE__\n  #if __BIG_ENDIAN\n    #define WORDS_BIGENDIAN 1\n  #endif\n#else\n#cmakedefine WORDS_BIGENDIAN 1 \n#endif\n\n/*\n  Define to `__inline__' or `__inline' if that's what the C compiler calls it.\n*/\n#cmakedefine C_HAS_inline 1\n#if !(C_HAS_inline)\n#ifndef __cplusplus\n# define inline @C_INLINE@\n#endif\n#endif\n\n\n#cmakedefine TARGET_OS_LINUX 1\n\n#cmakedefine HAVE_WCTYPE_H 1\n#cmakedefine HAVE_WCHAR_H 1\n#cmakedefine HAVE_LANGINFO_H 1\n#cmakedefine HAVE_MBRLEN\n#cmakedefine HAVE_MBSCMP\n#cmakedefine HAVE_MBSRTOWCS\n#cmakedefine HAVE_WCRTOMB\n#cmakedefine HAVE_MBRTOWC\n#cmakedefine HAVE_WCSCOLL\n#cmakedefine HAVE_WCSDUP\n#cmakedefine HAVE_WCWIDTH\n#cmakedefine HAVE_WCTYPE\n#cmakedefine HAVE_ISWLOWER 1\n#cmakedefine HAVE_ISWUPPER 1\n#cmakedefine HAVE_TOWLOWER 1\n#cmakedefine HAVE_TOWUPPER 1\n#cmakedefine HAVE_ISWCTYPE 1\n#cmakedefine HAVE_WCHAR_T 1\n#cmakedefine HAVE_WCTYPE_T 1\n#cmakedefine HAVE_WINT_T 1\n\n\n#cmakedefine HAVE_STRCASECMP 1\n#cmakedefine HAVE_STRNCASECMP 1\n#cmakedefine HAVE_STRDUP 1\n#cmakedefine HAVE_LANGINFO_CODESET \n#cmakedefine HAVE_TCGETATTR 1\n#cmakedefine HAVE_FLOCKFILE 1\n\n#cmakedefine HAVE_WEAK_SYMBOL 1\n#cmakedefine HAVE_ABI_CXA_DEMANGLE 1\n\n\n#cmakedefine HAVE_POSIX_SIGNALS 1\n#cmakedefine HAVE_BSD_SIGNALS 1\n#cmakedefine HAVE_SVR3_SIGNALS 1\n#cmakedefine HAVE_V7_SIGNALS 1\n\n\n#cmakedefine HAVE_SOLARIS_STYLE_GETHOST 1\n\n#cmakedefine MY_ATOMIC_MODE_DUMMY 1\n#cmakedefine MY_ATOMIC_MODE_RWLOCKS 1\n#cmakedefine HAVE_GCC_ATOMIC_BUILTINS 1\n#cmakedefine HAVE_SOLARIS_ATOMIC 1\n#cmakedefine HAVE_DECL_SHM_HUGETLB 1\n#cmakedefine HAVE_LARGE_PAGES 1\n#cmakedefine HUGETLB_USE_PROC_MEMINFO 1\n#cmakedefine NO_FCNTL_NONBLOCK 1\n#cmakedefine NO_ALARM 1\n\n#cmakedefine _LARGE_FILES 1\n#cmakedefine _LARGEFILE_SOURCE 1\n#cmakedefine _LARGEFILE64_SOURCE 1\n#cmakedefine _FILE_OFFSET_BITS @_FILE_OFFSET_BITS@\n\n#cmakedefine TIME_WITH_SYS_TIME 1\n\n#cmakedefine STACK_DIRECTION @STACK_DIRECTION@\n\n#define SYSTEM_TYPE \"@SYSTEM_TYPE@\"\n#define MACHINE_TYPE \"@MYSQL_MACHINE_TYPE@\"\n#cmakedefine HAVE_DTRACE 1\n\n#cmakedefine SIGNAL_WITH_VIO_SHUTDOWN 1\n\n/* Windows stuff, mostly functions, that have Posix analogs but named differently */\n#cmakedefine S_IROTH @S_IROTH@\n#cmakedefine S_IFIFO @S_IFIFO@\n#cmakedefine IPPROTO_IPV6 @IPPROTO_IPV6@\n#cmakedefine IPV6_V6ONLY @IPV6_V6ONLY@\n#cmakedefine sigset_t @sigset_t@\n#cmakedefine mode_t @mode_t@\n#cmakedefine SIGQUIT @SIGQUIT@\n#cmakedefine SIGPIPE @SIGPIPE@\n#cmakedefine isnan @isnan@\n#cmakedefine finite @finite@\n#cmakedefine popen @popen@\n#cmakedefine pclose @pclose@\n#cmakedefine ssize_t @ssize_t@\n#cmakedefine strcasecmp @strcasecmp@\n#cmakedefine strncasecmp @strncasecmp@\n#cmakedefine snprintf @snprintf@\n#cmakedefine strtok_r @strtok_r@\n#cmakedefine strtoll @strtoll@\n#cmakedefine strtoull @strtoull@\n#cmakedefine vsnprintf @vsnprintf@\n#if (_MSC_VER > 1310)\n# define HAVE_SETENV\n#define setenv(a,b,c) _putenv_s(a,b)\n#endif\n/* We don't want the min/max macros */\n#ifdef __WIN__\n#define NOMINMAX\n#endif\n\n/*\n   Memcached config options\n*/\n#cmakedefine WITH_INNODB_MEMCACHED 1\n#cmakedefine ENABLE_MEMCACHED_SASL 1\n#cmakedefine ENABLE_MEMCACHED_SASL_PWDB 1\n#cmakedefine HAVE_SASL_SASL_H 1\n#cmakedefine HAVE_HTONLL 1\n\n/*\n  MySQL features\n*/\n#cmakedefine ENABLED_LOCAL_INFILE 1\n#cmakedefine ENABLED_PROFILING 1\n#cmakedefine EXTRA_DEBUG 1\n#cmakedefine BACKUP_TEST 1\n#cmakedefine CYBOZU 1\n#cmakedefine OPTIMIZER_TRACE 1\n#cmakedefine USE_SYMDIR 1\n\n/*\n   InnoDB config options\n*/\n#cmakedefine INNODB_COMPILER_HINTS\n#cmakedefine INNODB_PAGE_ATOMIC_REF_COUNT\n\n/* Character sets and collations */\n#cmakedefine MYSQL_DEFAULT_CHARSET_NAME \"@MYSQL_DEFAULT_CHARSET_NAME@\"\n#cmakedefine MYSQL_DEFAULT_COLLATION_NAME \"@MYSQL_DEFAULT_COLLATION_NAME@\"\n\n#cmakedefine USE_MB 1\n#cmakedefine USE_MB_IDENT 1\n#cmakedefine USE_STRCOLL 1\n\n/* This should mean case insensitive file system */\n#cmakedefine FN_NO_CASE_SENSE 1\n\n#cmakedefine HAVE_CHARSET_armscii8 1\n#cmakedefine HAVE_CHARSET_ascii 1\n#cmakedefine HAVE_CHARSET_big5 1\n#cmakedefine HAVE_CHARSET_cp1250 1\n#cmakedefine HAVE_CHARSET_cp1251 1\n#cmakedefine HAVE_CHARSET_cp1256 1\n#cmakedefine HAVE_CHARSET_cp1257 1\n#cmakedefine HAVE_CHARSET_cp850 1\n#cmakedefine HAVE_CHARSET_cp852 1 \n#cmakedefine HAVE_CHARSET_cp866 1\n#cmakedefine HAVE_CHARSET_cp932 1\n#cmakedefine HAVE_CHARSET_dec8 1\n#cmakedefine HAVE_CHARSET_eucjpms 1\n#cmakedefine HAVE_CHARSET_euckr 1\n#cmakedefine HAVE_CHARSET_gb2312 1\n#cmakedefine HAVE_CHARSET_gbk 1\n#cmakedefine HAVE_CHARSET_geostd8 1\n#cmakedefine HAVE_CHARSET_greek 1\n#cmakedefine HAVE_CHARSET_hebrew 1\n#cmakedefine HAVE_CHARSET_hp8 1\n#cmakedefine HAVE_CHARSET_keybcs2 1\n#cmakedefine HAVE_CHARSET_koi8r 1\n#cmakedefine HAVE_CHARSET_koi8u 1\n#cmakedefine HAVE_CHARSET_latin1 1\n#cmakedefine HAVE_CHARSET_latin2 1\n#cmakedefine HAVE_CHARSET_latin5 1\n#cmakedefine HAVE_CHARSET_latin7 1\n#cmakedefine HAVE_CHARSET_macce 1\n#cmakedefine HAVE_CHARSET_macroman 1\n#cmakedefine HAVE_CHARSET_sjis 1\n#cmakedefine HAVE_CHARSET_swe7 1\n#cmakedefine HAVE_CHARSET_tis620 1\n#cmakedefine HAVE_CHARSET_ucs2 1\n#cmakedefine HAVE_CHARSET_ujis 1\n#cmakedefine HAVE_CHARSET_utf8mb4 1\n#cmakedefine HAVE_CHARSET_utf8mb3 1\n#cmakedefine HAVE_CHARSET_utf8 1\n#cmakedefine HAVE_CHARSET_utf16 1\n#cmakedefine HAVE_CHARSET_utf32 1\n#cmakedefine HAVE_UCA_COLLATIONS 1\n#cmakedefine HAVE_COMPRESS 1\n#cmakedefine COMPILE_FLAG_WERROR 1\n\n/*\n  Stuff that always need to be defined (compile breaks without it)\n*/\n#define HAVE_SPATIAL 1\n#define HAVE_RTREE_KEYS 1\n#define HAVE_QUERY_CACHE 1\n#define BIG_TABLES 1\n\n/*\n  Important storage engines (those that really need define \n  WITH_<ENGINE>_STORAGE_ENGINE for the whole server)\n*/\n#cmakedefine WITH_MYISAM_STORAGE_ENGINE 1\n#cmakedefine WITH_MYISAMMRG_STORAGE_ENGINE 1\n#cmakedefine WITH_HEAP_STORAGE_ENGINE 1\n#cmakedefine WITH_CSV_STORAGE_ENGINE 1\n#cmakedefine WITH_PARTITION_STORAGE_ENGINE 1\n#cmakedefine WITH_PERFSCHEMA_STORAGE_ENGINE 1\n#cmakedefine WITH_NDBCLUSTER_STORAGE_ENGINE 1\n#if (WITH_NDBCLUSTER_STORAGE_ENGINE) && !defined(EMBEDDED_LIBRARY)\n# define HAVE_NDB_BINLOG 1\n#endif\n\n#cmakedefine DEFAULT_MYSQL_HOME \"@DEFAULT_MYSQL_HOME@\"\n#cmakedefine SHAREDIR \"@SHAREDIR@\"\n#cmakedefine DEFAULT_BASEDIR \"@DEFAULT_BASEDIR@\"\n#cmakedefine MYSQL_DATADIR \"@MYSQL_DATADIR@\"\n#cmakedefine DEFAULT_CHARSET_HOME \"@DEFAULT_CHARSET_HOME@\"\n#cmakedefine PLUGINDIR \"@PLUGINDIR@\"\n#cmakedefine DEFAULT_SYSCONFDIR \"@DEFAULT_SYSCONFDIR@\"\n#cmakedefine DEFAULT_TMPDIR @DEFAULT_TMPDIR@\n\n#cmakedefine SO_EXT \"@CMAKE_SHARED_MODULE_SUFFIX@\"\n\n#define MYSQL_VERSION_MAJOR @MAJOR_VERSION@\n#define MYSQL_VERSION_MINOR @MINOR_VERSION@\n#define MYSQL_VERSION_PATCH @PATCH_VERSION@\n#define MYSQL_VERSION_EXTRA \"@EXTRA_VERSION@\"\n\n#define PACKAGE \"mysql\"\n#define PACKAGE_BUGREPORT \"\"\n#define PACKAGE_NAME \"MySQL Server\"\n#define PACKAGE_STRING \"MySQL Server @VERSION@\"\n#define PACKAGE_TARNAME \"mysql\"\n#define PACKAGE_VERSION \"@VERSION@\"\n#define VERSION \"@VERSION@\"\n#define PROTOCOL_VERSION 10\n\n\n/* time_t related defines */\n\n#cmakedefine SIZEOF_TIME_T @SIZEOF_TIME_T@\n#cmakedefine TIME_T_UNSIGNED @TIME_T_UNSIGNED@\n\n/* CPU information */\n\n#cmakedefine CPU_LEVEL1_DCACHE_LINESIZE @CPU_LEVEL1_DCACHE_LINESIZE@\n\n#endif\n"
        },
        {
          "name": "configure.cmake",
          "type": "blob",
          "size": 36.796875,
          "content": "# Copyright (c) 2009, 2014, Oracle and/or its affiliates. All rights reserved.\n# \n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; version 2 of the License.\n# \n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n#\n\nINCLUDE (CheckCSourceCompiles)\nINCLUDE (CheckCXXSourceCompiles)\nINCLUDE (CheckStructHasMember)\nINCLUDE (CheckLibraryExists)\nINCLUDE (CheckFunctionExists)\nINCLUDE (CheckCCompilerFlag)\nINCLUDE (CheckCSourceRuns)\nINCLUDE (CheckCXXSourceRuns)\nINCLUDE (CheckSymbolExists)\n\n\n# WITH_PIC options.Not of much use, PIC is taken care of on platforms\n# where it makes sense anyway.\nIF(UNIX)\n  IF(APPLE)  \n    # OSX  executable are always PIC\n    SET(WITH_PIC ON)\n  ELSE()\n    OPTION(WITH_PIC \"Generate PIC objects\" OFF)\n    IF(WITH_PIC)\n      SET(CMAKE_C_FLAGS \n        \"${CMAKE_C_FLAGS} ${CMAKE_SHARED_LIBRARY_C_FLAGS}\")\n      SET(CMAKE_CXX_FLAGS \n        \"${CMAKE_CXX_FLAGS} ${CMAKE_SHARED_LIBRARY_CXX_FLAGS}\")\n    ENDIF()\n  ENDIF()\nENDIF()\n\n\n\n# System type affects version_compile_os variable \nIF(NOT SYSTEM_TYPE)\n  IF(PLATFORM)\n    SET(SYSTEM_TYPE ${PLATFORM})\n  ELSE()\n    SET(SYSTEM_TYPE ${CMAKE_SYSTEM_NAME})\n  ENDIF()\nENDIF()\n\n# As a consequence of ALARMs no longer being used, thread\n# notification for KILL must close the socket to wake up\n# other threads.\nSET(SIGNAL_WITH_VIO_SHUTDOWN 1)\n\n# The default C++ library for SunPro is really old, and not standards compliant.\n# http://www.oracle.com/technetwork/server-storage/solaris10/cmp-stlport-libcstd-142559.html\n# Use stlport rather than Rogue Wave.\nIF(CMAKE_SYSTEM_NAME MATCHES \"SunOS\")\n  IF(CMAKE_CXX_COMPILER_ID MATCHES \"SunPro\")\n    IF(SUNPRO_CXX_LIBRARY)\n      SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -library=${SUNPRO_CXX_LIBRARY}\")\n    ELSE()\n      SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -library=stlport4\")\n    ENDIF()\n  ENDIF()\nENDIF()\n\n# Check to see if we are using LLVM's libc++ rather than e.g. libstd++\n# Can then check HAVE_LLBM_LIBCPP later without including e.g. ciso646.\nCHECK_CXX_SOURCE_RUNS(\"\n#include <ciso646>\nint main()\n{\n#ifdef _LIBCPP_VERSION\n  return 0;\n#else\n  return 1;\n#endif\n}\" HAVE_LLVM_LIBCPP)\n\nMACRO(DIRNAME IN OUT)\n  GET_FILENAME_COMPONENT(${OUT} ${IN} PATH)\nENDMACRO()\n\nIF(CMAKE_SYSTEM_NAME MATCHES \"SunOS\" AND\n   CMAKE_C_COMPILER_ID MATCHES \"SunPro\" AND\n   CMAKE_CXX_FLAGS MATCHES \"stlport4\")\n  DIRNAME(${CMAKE_CXX_COMPILER} CXX_PATH)\n  SET(STLPORT_SUFFIX \"lib/stlport4\")\n  IF(CMAKE_SIZEOF_VOID_P EQUAL 8 AND CMAKE_SYSTEM_PROCESSOR MATCHES \"sparc\")\n    SET(STLPORT_SUFFIX \"lib/stlport4/v9\")\n  ENDIF()\n  IF(CMAKE_SIZEOF_VOID_P EQUAL 8 AND CMAKE_SYSTEM_PROCESSOR MATCHES \"i386\")\n    SET(STLPORT_SUFFIX \"lib/stlport4/amd64\")\n  ENDIF()\n\n  FIND_LIBRARY(STL_LIBRARY_NAME\n    NAMES \"stlport\"\n    PATHS ${CXX_PATH}/../${STLPORT_SUFFIX}\n  )\n  MESSAGE(STATUS \"STL_LIBRARY_NAME ${STL_LIBRARY_NAME}\")\n  IF(STL_LIBRARY_NAME)\n    DIRNAME(${STL_LIBRARY_NAME} STLPORT_PATH)\n    # We re-distribute libstlport.so which is a symlink to libstlport.so.1\n    # There is no 'readlink' on solaris, so we use perl to follow links:\n    SET(PERLSCRIPT\n      \"my $link= $ARGV[0]; use Cwd qw(abs_path); my $file = abs_path($link); print $file;\")\n    EXECUTE_PROCESS(\n      COMMAND perl -e \"${PERLSCRIPT}\" ${STL_LIBRARY_NAME}\n      RESULT_VARIABLE result\n      OUTPUT_VARIABLE real_library\n    )\n    MESSAGE(STATUS \"INSTALL ${STL_LIBRARY_NAME} ${real_library}\")\n    INSTALL(FILES ${STL_LIBRARY_NAME} ${real_library}\n            DESTINATION ${INSTALL_LIBDIR} COMPONENT Development)\n    # Using the $ORIGIN token with the -R option to locate the libraries\n    # on a path relative to the executable:\n    # We need an extra backslash to pass $ORIGIN to the mysql_config script...\n    SET(QUOTED_CMAKE_CXX_LINK_FLAGS\n      \"${CMAKE_CXX_LINK_FLAGS} -R'\\\\$ORIGIN/../lib' -R${STLPORT_PATH}\")\n    SET(CMAKE_CXX_LINK_FLAGS\n      \"${CMAKE_CXX_LINK_FLAGS} -R'\\$ORIGIN/../lib' -R${STLPORT_PATH}\")\n    MESSAGE(STATUS \"CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}\")\n  ENDIF()\nENDIF()\n\nIF(CMAKE_COMPILER_IS_GNUCXX)\n  IF (CMAKE_EXE_LINKER_FLAGS MATCHES \" -static \" \n     OR CMAKE_EXE_LINKER_FLAGS MATCHES \" -static$\")\n     SET(HAVE_DLOPEN FALSE CACHE \"Disable dlopen due to -static flag\" FORCE)\n     SET(WITHOUT_DYNAMIC_PLUGINS TRUE)\n  ENDIF()\nENDIF()\n\nIF(WITHOUT_DYNAMIC_PLUGINS)\n  MESSAGE(\"Dynamic plugins are disabled.\")\nENDIF(WITHOUT_DYNAMIC_PLUGINS)\n\n# Large files, common flag\nSET(_LARGEFILE_SOURCE  1)\n\n# If finds the size of a type, set SIZEOF_<type> and HAVE_<type>\nFUNCTION(MY_CHECK_TYPE_SIZE type defbase)\n  CHECK_TYPE_SIZE(\"${type}\" SIZEOF_${defbase})\n  IF(SIZEOF_${defbase})\n    SET(HAVE_${defbase} 1 PARENT_SCOPE)\n  ENDIF()\nENDFUNCTION()\n\n# Same for structs, setting HAVE_STRUCT_<name> instead\nFUNCTION(MY_CHECK_STRUCT_SIZE type defbase)\n  CHECK_TYPE_SIZE(\"struct ${type}\" SIZEOF_${defbase})\n  IF(SIZEOF_${defbase})\n    SET(HAVE_STRUCT_${defbase} 1 PARENT_SCOPE)\n  ENDIF()\nENDFUNCTION()\n\n# Searches function in libraries\n# if function is found, sets output parameter result to the name of the library\n# if function is found in libc, result will be empty \nFUNCTION(MY_SEARCH_LIBS func libs result)\n  IF(${${result}})\n    # Library is already found or was predefined\n    RETURN()\n  ENDIF()\n  CHECK_FUNCTION_EXISTS(${func} HAVE_${func}_IN_LIBC)\n  IF(HAVE_${func}_IN_LIBC)\n    SET(${result} \"\" PARENT_SCOPE)\n    RETURN()\n  ENDIF()\n  FOREACH(lib  ${libs})\n    CHECK_LIBRARY_EXISTS(${lib} ${func} \"\" HAVE_${func}_IN_${lib}) \n    IF(HAVE_${func}_IN_${lib})\n      SET(${result} ${lib} PARENT_SCOPE)\n      SET(HAVE_${result} 1 PARENT_SCOPE)\n      RETURN()\n    ENDIF()\n  ENDFOREACH()\nENDFUNCTION()\n\n# Find out which libraries to use.\nIF(UNIX)\n  MY_SEARCH_LIBS(floor m LIBM)\n  IF(NOT LIBM)\n    MY_SEARCH_LIBS(__infinity m LIBM)\n  ENDIF()\n  MY_SEARCH_LIBS(gethostbyname_r  \"nsl_r;nsl\" LIBNSL)\n  MY_SEARCH_LIBS(bind \"bind;socket\" LIBBIND)\n  MY_SEARCH_LIBS(crypt crypt LIBCRYPT)\n  MY_SEARCH_LIBS(setsockopt socket LIBSOCKET)\n  MY_SEARCH_LIBS(dlopen dl LIBDL)\n  MY_SEARCH_LIBS(sched_yield rt LIBRT)\n  IF(NOT LIBRT)\n    MY_SEARCH_LIBS(clock_gettime rt LIBRT)\n  ENDIF()\n  MY_SEARCH_LIBS(timer_create rt LIBRT)\n  FIND_PACKAGE(Threads)\n\n  SET(CMAKE_REQUIRED_LIBRARIES \n    ${LIBM} ${LIBNSL} ${LIBBIND} ${LIBCRYPT} ${LIBSOCKET} ${LIBDL} ${CMAKE_THREAD_LIBS_INIT} ${LIBRT})\n  # Need explicit pthread for gcc -fsanitize=address\n  IF(CMAKE_USE_PTHREADS_INIT AND CMAKE_C_FLAGS MATCHES \"-fsanitize=\")\n    SET(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} pthread)\n  ENDIF()\n\n  LIST(LENGTH CMAKE_REQUIRED_LIBRARIES required_libs_length)\n  IF(${required_libs_length} GREATER 0)\n    LIST(REMOVE_DUPLICATES CMAKE_REQUIRED_LIBRARIES)\n  ENDIF()  \n  LINK_LIBRARIES(${CMAKE_THREAD_LIBS_INIT})\n  \n  OPTION(WITH_LIBWRAP \"Compile with tcp wrappers support\" OFF)\n  IF(WITH_LIBWRAP)\n    SET(SAVE_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES})\n    SET(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} wrap)\n    CHECK_C_SOURCE_COMPILES(\n    \"\n    #include <tcpd.h>\n    int allow_severity = 0;\n    int deny_severity  = 0;\n    int main()\n    {\n      hosts_access(0);\n    }\"\n    HAVE_LIBWRAP)\n    SET(CMAKE_REQUIRED_LIBRARIES ${SAVE_CMAKE_REQUIRED_LIBRARIES})\n    IF(HAVE_LIBWRAP)\n      SET(MYSYS_LIBWRAP_SOURCE  ${CMAKE_SOURCE_DIR}/mysys/my_libwrap.c)\n      SET(LIBWRAP \"wrap\")\n    ELSE()\n      MESSAGE(FATAL_ERROR \n      \"WITH_LIBWRAP is defined, but can not find a working libwrap. \"\n      \"Make sure both the header files (tcpd.h) \"\n      \"and the library (libwrap) are installed.\")\n    ENDIF()\n  ENDIF()\nENDIF()\n\n#\n# Tests for header files\n#\nINCLUDE (CheckIncludeFiles)\n\nCHECK_INCLUDE_FILES (\"stdlib.h;stdarg.h;string.h;float.h\" STDC_HEADERS)\nCHECK_INCLUDE_FILES (sys/types.h HAVE_SYS_TYPES_H)\nCHECK_INCLUDE_FILES (alloca.h HAVE_ALLOCA_H)\nCHECK_INCLUDE_FILES (aio.h HAVE_AIO_H)\nCHECK_INCLUDE_FILES (arpa/inet.h HAVE_ARPA_INET_H)\nCHECK_INCLUDE_FILES (crypt.h HAVE_CRYPT_H)\nCHECK_INCLUDE_FILES (cxxabi.h HAVE_CXXABI_H)\nCHECK_INCLUDE_FILES (dirent.h HAVE_DIRENT_H)\nCHECK_INCLUDE_FILES (dlfcn.h HAVE_DLFCN_H)\nCHECK_INCLUDE_FILES (execinfo.h HAVE_EXECINFO_H)\nCHECK_INCLUDE_FILES (fcntl.h HAVE_FCNTL_H)\nCHECK_INCLUDE_FILES (fenv.h HAVE_FENV_H)\nCHECK_INCLUDE_FILES (float.h HAVE_FLOAT_H)\nCHECK_INCLUDE_FILES (floatingpoint.h HAVE_FLOATINGPOINT_H)\nCHECK_INCLUDE_FILES (fpu_control.h HAVE_FPU_CONTROL_H)\nCHECK_INCLUDE_FILES (grp.h HAVE_GRP_H)\nCHECK_INCLUDE_FILES (ieeefp.h HAVE_IEEEFP_H)\nCHECK_INCLUDE_FILES (inttypes.h HAVE_INTTYPES_H)\nCHECK_INCLUDE_FILES (langinfo.h HAVE_LANGINFO_H)\nCHECK_INCLUDE_FILES (limits.h HAVE_LIMITS_H)\nCHECK_INCLUDE_FILES (locale.h HAVE_LOCALE_H)\nCHECK_INCLUDE_FILES (malloc.h HAVE_MALLOC_H)\nCHECK_INCLUDE_FILES (memory.h HAVE_MEMORY_H)\nCHECK_INCLUDE_FILES (ndir.h HAVE_NDIR_H)\nCHECK_INCLUDE_FILES (netinet/in.h HAVE_NETINET_IN_H)\nCHECK_INCLUDE_FILES (paths.h HAVE_PATHS_H)\nCHECK_INCLUDE_FILES (port.h HAVE_PORT_H)\nCHECK_INCLUDE_FILES (poll.h HAVE_POLL_H)\nCHECK_INCLUDE_FILES (pwd.h HAVE_PWD_H)\nCHECK_INCLUDE_FILES (sched.h HAVE_SCHED_H)\nCHECK_INCLUDE_FILES (select.h HAVE_SELECT_H)\nCHECK_INCLUDE_FILES (semaphore.h HAVE_SEMAPHORE_H)\nCHECK_INCLUDE_FILES (\"sys/types.h;sys/dir.h\" HAVE_SYS_DIR_H)\nCHECK_INCLUDE_FILES (sys/ndir.h HAVE_SYS_NDIR_H)\nCHECK_INCLUDE_FILES (sys/pte.h HAVE_SYS_PTE_H)\nCHECK_INCLUDE_FILES (stddef.h HAVE_STDDEF_H)\nCHECK_INCLUDE_FILES (stdint.h HAVE_STDINT_H)\nCHECK_INCLUDE_FILES (stdlib.h HAVE_STDLIB_H)\nCHECK_INCLUDE_FILES (strings.h HAVE_STRINGS_H)\nCHECK_INCLUDE_FILES (string.h HAVE_STRING_H)\nCHECK_INCLUDE_FILES (synch.h HAVE_SYNCH_H)\nCHECK_INCLUDE_FILES (sysent.h HAVE_SYSENT_H)\nCHECK_INCLUDE_FILES (sys/cdefs.h HAVE_SYS_CDEFS_H)\nCHECK_INCLUDE_FILES (sys/file.h HAVE_SYS_FILE_H)\nCHECK_INCLUDE_FILES (sys/fpu.h HAVE_SYS_FPU_H)\nCHECK_INCLUDE_FILES (sys/ioctl.h HAVE_SYS_IOCTL_H)\nCHECK_INCLUDE_FILES (sys/ipc.h HAVE_SYS_IPC_H)\nCHECK_INCLUDE_FILES (sys/malloc.h HAVE_SYS_MALLOC_H)\nCHECK_INCLUDE_FILES (sys/mman.h HAVE_SYS_MMAN_H)\nCHECK_INCLUDE_FILES (sys/prctl.h HAVE_SYS_PRCTL_H)\nCHECK_INCLUDE_FILES (sys/resource.h HAVE_SYS_RESOURCE_H)\nCHECK_INCLUDE_FILES (sys/select.h HAVE_SYS_SELECT_H)\nCHECK_INCLUDE_FILES (sys/shm.h HAVE_SYS_SHM_H)\nCHECK_INCLUDE_FILES (sys/socket.h HAVE_SYS_SOCKET_H)\nCHECK_INCLUDE_FILES (sys/stat.h HAVE_SYS_STAT_H)\nCHECK_INCLUDE_FILES (sys/stream.h HAVE_SYS_STREAM_H)\nCHECK_INCLUDE_FILES (sys/termcap.h HAVE_SYS_TERMCAP_H)\nCHECK_INCLUDE_FILES (\"time.h;sys/timeb.h\" HAVE_SYS_TIMEB_H)\nCHECK_INCLUDE_FILES (\"curses.h;term.h\" HAVE_TERM_H)\nCHECK_INCLUDE_FILES (asm/termbits.h HAVE_ASM_TERMBITS_H)\nCHECK_INCLUDE_FILES (termbits.h HAVE_TERMBITS_H)\nCHECK_INCLUDE_FILES (termios.h HAVE_TERMIOS_H)\nCHECK_INCLUDE_FILES (termio.h HAVE_TERMIO_H)\nCHECK_INCLUDE_FILES (termcap.h HAVE_TERMCAP_H)\nCHECK_INCLUDE_FILES (unistd.h HAVE_UNISTD_H)\nCHECK_INCLUDE_FILES (utime.h HAVE_UTIME_H)\nCHECK_INCLUDE_FILES (varargs.h HAVE_VARARGS_H)\nCHECK_INCLUDE_FILES (sys/time.h HAVE_SYS_TIME_H)\nCHECK_INCLUDE_FILES (sys/utime.h HAVE_SYS_UTIME_H)\nCHECK_INCLUDE_FILES (sys/wait.h HAVE_SYS_WAIT_H)\nCHECK_INCLUDE_FILES (sys/param.h HAVE_SYS_PARAM_H)\nCHECK_INCLUDE_FILES (sys/vadvise.h HAVE_SYS_VADVISE_H)\nCHECK_INCLUDE_FILES (fnmatch.h HAVE_FNMATCH_H)\nCHECK_INCLUDE_FILES (stdarg.h  HAVE_STDARG_H)\nCHECK_INCLUDE_FILES (\"stdlib.h;sys/un.h\" HAVE_SYS_UN_H)\nCHECK_INCLUDE_FILES (vis.h HAVE_VIS_H)\nCHECK_INCLUDE_FILES (wchar.h HAVE_WCHAR_H)\nCHECK_INCLUDE_FILES (wctype.h HAVE_WCTYPE_H)\nCHECK_INCLUDE_FILES (sasl/sasl.h HAVE_SASL_SASL_H)\n\n# For libevent\nCHECK_INCLUDE_FILES(sys/devpoll.h HAVE_DEVPOLL)\nCHECK_INCLUDE_FILES(signal.h HAVE_SIGNAL_H)\nCHECK_INCLUDE_FILES(sys/devpoll.h HAVE_SYS_DEVPOLL_H)\nCHECK_INCLUDE_FILES(sys/epoll.h HAVE_SYS_EPOLL_H)\nCHECK_INCLUDE_FILES(sys/event.h HAVE_SYS_EVENT_H)\nCHECK_INCLUDE_FILES(sys/queue.h HAVE_SYS_QUEUE_H)\nCHECK_SYMBOL_EXISTS (TAILQ_FOREACH \"sys/queue.h\" HAVE_TAILQFOREACH)\n\nIF(HAVE_SYS_STREAM_H)\n  # Needs sys/stream.h on Solaris\n  CHECK_INCLUDE_FILES (\"sys/stream.h;sys/ptem.h\" HAVE_SYS_PTEM_H)\nELSE()\n  CHECK_INCLUDE_FILES (sys/ptem.h HAVE_SYS_PTEM_H)\nENDIF()\n\n# Figure out threading library\n# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\nFIND_PACKAGE (Threads)\n\nFUNCTION(MY_CHECK_PTHREAD_ONCE_INIT)\n  CHECK_C_COMPILER_FLAG(\"-Werror\" HAVE_WERROR_FLAG)\n  IF(HAVE_WERROR_FLAG)\n    SET(CMAKE_REQUIRED_FLAGS \"${CMAKE_REQUIRED_FLAGS} -Werror\")\n  ENDIF()\n  CHECK_C_SOURCE_COMPILES(\"\n    #include <pthread.h>\n    void foo(void) {}\n    int main()\n    {\n      pthread_once_t once_control = PTHREAD_ONCE_INIT;\n      pthread_once(&once_control, foo);\n      return 0;\n    }\"\n    HAVE_PTHREAD_ONCE_INIT\n  )\n  # http://bugs.opensolaris.org/bugdatabase/printableBug.do?bug_id=6611808\n  IF(NOT HAVE_PTHREAD_ONCE_INIT)\n    CHECK_C_SOURCE_COMPILES(\"\n      #include <pthread.h>\n      void foo(void) {}\n      int main()\n      {\n        pthread_once_t once_control = { PTHREAD_ONCE_INIT };\n        pthread_once(&once_control, foo);\n        return 0;\n      }\"\n      HAVE_ARRAY_PTHREAD_ONCE_INIT\n    )\n  ENDIF()\n  IF(HAVE_PTHREAD_ONCE_INIT)\n    SET(PTHREAD_ONCE_INITIALIZER \"PTHREAD_ONCE_INIT\" PARENT_SCOPE)\n  ENDIF()\n  IF(HAVE_ARRAY_PTHREAD_ONCE_INIT)\n    SET(PTHREAD_ONCE_INITIALIZER \"{ PTHREAD_ONCE_INIT }\" PARENT_SCOPE)\n  ENDIF()\nENDFUNCTION()\n\nIF(CMAKE_USE_PTHREADS_INIT)\n  MY_CHECK_PTHREAD_ONCE_INIT()\nENDIF()\n\n#\n# Tests for functions\n#\nCHECK_FUNCTION_EXISTS (_aligned_malloc HAVE_ALIGNED_MALLOC)\nCHECK_FUNCTION_EXISTS (_aligned_free HAVE_ALIGNED_FREE)\n#CHECK_FUNCTION_EXISTS (aiowait HAVE_AIOWAIT)\nCHECK_FUNCTION_EXISTS (aio_read HAVE_AIO_READ)\nCHECK_FUNCTION_EXISTS (alarm HAVE_ALARM)\nSET(HAVE_ALLOCA 1)\nCHECK_FUNCTION_EXISTS (backtrace HAVE_BACKTRACE)\nCHECK_FUNCTION_EXISTS (backtrace_symbols HAVE_BACKTRACE_SYMBOLS)\nCHECK_FUNCTION_EXISTS (backtrace_symbols_fd HAVE_BACKTRACE_SYMBOLS_FD)\nCHECK_FUNCTION_EXISTS (printstack HAVE_PRINTSTACK)\nCHECK_FUNCTION_EXISTS (bmove HAVE_BMOVE)\nCHECK_FUNCTION_EXISTS (bsearch HAVE_BSEARCH)\nCHECK_FUNCTION_EXISTS (index HAVE_INDEX)\nCHECK_FUNCTION_EXISTS (clock_gettime HAVE_CLOCK_GETTIME)\nCHECK_FUNCTION_EXISTS (cuserid HAVE_CUSERID)\nCHECK_FUNCTION_EXISTS (directio HAVE_DIRECTIO)\nCHECK_FUNCTION_EXISTS (_doprnt HAVE_DOPRNT)\nCHECK_FUNCTION_EXISTS (flockfile HAVE_FLOCKFILE)\nCHECK_FUNCTION_EXISTS (ftruncate HAVE_FTRUNCATE)\nCHECK_FUNCTION_EXISTS (getline HAVE_GETLINE)\nCHECK_FUNCTION_EXISTS (compress HAVE_COMPRESS)\nCHECK_FUNCTION_EXISTS (crypt HAVE_CRYPT)\nCHECK_FUNCTION_EXISTS (dlerror HAVE_DLERROR)\nCHECK_FUNCTION_EXISTS (dlopen HAVE_DLOPEN)\nCHECK_FUNCTION_EXISTS (fchmod HAVE_FCHMOD)\nCHECK_FUNCTION_EXISTS (fcntl HAVE_FCNTL)\nCHECK_FUNCTION_EXISTS (fconvert HAVE_FCONVERT)\nCHECK_FUNCTION_EXISTS (fdatasync HAVE_FDATASYNC)\nCHECK_SYMBOL_EXISTS(fdatasync \"unistd.h\" HAVE_DECL_FDATASYNC)\nCHECK_FUNCTION_EXISTS (fedisableexcept HAVE_FEDISABLEEXCEPT)\nCHECK_FUNCTION_EXISTS (fpsetmask HAVE_FPSETMASK)\nCHECK_FUNCTION_EXISTS (fseeko HAVE_FSEEKO)\nCHECK_FUNCTION_EXISTS (fsync HAVE_FSYNC)\nCHECK_FUNCTION_EXISTS (getcwd HAVE_GETCWD)\nCHECK_FUNCTION_EXISTS (gethostbyaddr_r HAVE_GETHOSTBYADDR_R)\nCHECK_FUNCTION_EXISTS (gethrtime HAVE_GETHRTIME)\nCHECK_FUNCTION_EXISTS (getnameinfo HAVE_GETNAMEINFO)\nCHECK_FUNCTION_EXISTS (getpass HAVE_GETPASS)\nCHECK_FUNCTION_EXISTS (getpassphrase HAVE_GETPASSPHRASE)\nCHECK_FUNCTION_EXISTS (getpwnam HAVE_GETPWNAM)\nCHECK_FUNCTION_EXISTS (getpwuid HAVE_GETPWUID)\nCHECK_FUNCTION_EXISTS (getrlimit HAVE_GETRLIMIT)\nCHECK_FUNCTION_EXISTS (getrusage HAVE_GETRUSAGE)\nCHECK_FUNCTION_EXISTS (getwd HAVE_GETWD)\nCHECK_FUNCTION_EXISTS (gmtime_r HAVE_GMTIME_R)\nCHECK_FUNCTION_EXISTS (initgroups HAVE_INITGROUPS)\nCHECK_FUNCTION_EXISTS (issetugid HAVE_ISSETUGID)\nCHECK_FUNCTION_EXISTS (getuid HAVE_GETUID)\nCHECK_FUNCTION_EXISTS (geteuid HAVE_GETEUID)\nCHECK_FUNCTION_EXISTS (getgid HAVE_GETGID)\nCHECK_FUNCTION_EXISTS (getegid HAVE_GETEGID)\nCHECK_FUNCTION_EXISTS (ldiv HAVE_LDIV)\nCHECK_FUNCTION_EXISTS (localtime_r HAVE_LOCALTIME_R)\nCHECK_FUNCTION_EXISTS (longjmp HAVE_LONGJMP)\nCHECK_FUNCTION_EXISTS (lstat HAVE_LSTAT)\nCHECK_FUNCTION_EXISTS (madvise HAVE_MADVISE)\nCHECK_FUNCTION_EXISTS (malloc_info HAVE_MALLOC_INFO)\nCHECK_FUNCTION_EXISTS (memcpy HAVE_MEMCPY)\nCHECK_FUNCTION_EXISTS (memmove HAVE_MEMMOVE)\nCHECK_FUNCTION_EXISTS (mkstemp HAVE_MKSTEMP)\nCHECK_FUNCTION_EXISTS (mlock HAVE_MLOCK)\nCHECK_FUNCTION_EXISTS (mlockall HAVE_MLOCKALL)\nCHECK_FUNCTION_EXISTS (mmap HAVE_MMAP)\nCHECK_FUNCTION_EXISTS (mmap64 HAVE_MMAP64)\nCHECK_FUNCTION_EXISTS (perror HAVE_PERROR)\nCHECK_FUNCTION_EXISTS (poll HAVE_POLL)\nCHECK_FUNCTION_EXISTS (port_create HAVE_PORT_CREATE)\nCHECK_FUNCTION_EXISTS (posix_fallocate HAVE_POSIX_FALLOCATE)\nCHECK_FUNCTION_EXISTS (posix_memalign HAVE_POSIX_MEMALIGN)\nCHECK_FUNCTION_EXISTS (pread HAVE_PREAD)\nCHECK_FUNCTION_EXISTS (pthread_attr_create HAVE_PTHREAD_ATTR_CREATE)\nCHECK_FUNCTION_EXISTS (pthread_attr_getguardsize HAVE_PTHREAD_ATTR_GETGUARDSIZE)\nCHECK_FUNCTION_EXISTS (pthread_attr_getstacksize HAVE_PTHREAD_ATTR_GETSTACKSIZE)\nCHECK_FUNCTION_EXISTS (pthread_attr_setscope HAVE_PTHREAD_ATTR_SETSCOPE)\nCHECK_FUNCTION_EXISTS (pthread_attr_setstacksize HAVE_PTHREAD_ATTR_SETSTACKSIZE)\nCHECK_FUNCTION_EXISTS (pthread_condattr_create HAVE_PTHREAD_CONDATTR_CREATE)\nCHECK_FUNCTION_EXISTS (pthread_condattr_setclock HAVE_PTHREAD_CONDATTR_SETCLOCK)\nCHECK_FUNCTION_EXISTS (pthread_key_delete HAVE_PTHREAD_KEY_DELETE)\nCHECK_FUNCTION_EXISTS (pthread_rwlock_rdlock HAVE_PTHREAD_RWLOCK_RDLOCK)\nCHECK_FUNCTION_EXISTS (pthread_sigmask HAVE_PTHREAD_SIGMASK)\nCHECK_FUNCTION_EXISTS (pthread_threadmask HAVE_PTHREAD_THREADMASK)\nCHECK_FUNCTION_EXISTS (pthread_yield_np HAVE_PTHREAD_YIELD_NP)\nCHECK_FUNCTION_EXISTS (putenv HAVE_PUTENV)\nCHECK_FUNCTION_EXISTS (readdir_r HAVE_READDIR_R)\nCHECK_FUNCTION_EXISTS (readlink HAVE_READLINK)\nCHECK_FUNCTION_EXISTS (re_comp HAVE_RE_COMP)\nCHECK_FUNCTION_EXISTS (regcomp HAVE_REGCOMP)\nCHECK_FUNCTION_EXISTS (realpath HAVE_REALPATH)\nCHECK_FUNCTION_EXISTS (rename HAVE_RENAME)\nCHECK_FUNCTION_EXISTS (rwlock_init HAVE_RWLOCK_INIT)\nCHECK_FUNCTION_EXISTS (sched_yield HAVE_SCHED_YIELD)\nCHECK_FUNCTION_EXISTS (setenv HAVE_SETENV)\nCHECK_FUNCTION_EXISTS (setlocale HAVE_SETLOCALE)\nCHECK_FUNCTION_EXISTS (setfd HAVE_SETFD)\nCHECK_FUNCTION_EXISTS (sigaction HAVE_SIGACTION)\nCHECK_FUNCTION_EXISTS (sigthreadmask HAVE_SIGTHREADMASK)\nCHECK_FUNCTION_EXISTS (sigwait HAVE_SIGWAIT)\nCHECK_FUNCTION_EXISTS (sigaddset HAVE_SIGADDSET)\nCHECK_FUNCTION_EXISTS (sigemptyset HAVE_SIGEMPTYSET)\nCHECK_FUNCTION_EXISTS (sighold HAVE_SIGHOLD) \nCHECK_FUNCTION_EXISTS (sigset HAVE_SIGSET)\nCHECK_FUNCTION_EXISTS (sleep HAVE_SLEEP)\nCHECK_FUNCTION_EXISTS (snprintf HAVE_SNPRINTF)\nCHECK_FUNCTION_EXISTS (stpcpy HAVE_STPCPY)\nCHECK_FUNCTION_EXISTS (strcoll HAVE_STRCOLL)\nCHECK_FUNCTION_EXISTS (strerror HAVE_STRERROR)\nCHECK_FUNCTION_EXISTS (strlcpy HAVE_STRLCPY)\nCHECK_FUNCTION_EXISTS (strnlen HAVE_STRNLEN)\nCHECK_FUNCTION_EXISTS (strlcat HAVE_STRLCAT)\nCHECK_FUNCTION_EXISTS (strsignal HAVE_STRSIGNAL)\nCHECK_FUNCTION_EXISTS (fgetln HAVE_FGETLN)\nCHECK_FUNCTION_EXISTS (strpbrk HAVE_STRPBRK)\nCHECK_FUNCTION_EXISTS (strsep HAVE_STRSEP)\nCHECK_FUNCTION_EXISTS (strstr HAVE_STRSTR)\nCHECK_FUNCTION_EXISTS (strtok_r HAVE_STRTOK_R)\nCHECK_FUNCTION_EXISTS (strtol HAVE_STRTOL)\nCHECK_FUNCTION_EXISTS (strtoll HAVE_STRTOLL)\nCHECK_FUNCTION_EXISTS (strtoul HAVE_STRTOUL)\nCHECK_FUNCTION_EXISTS (strtoull HAVE_STRTOULL)\nCHECK_FUNCTION_EXISTS (strcasecmp HAVE_STRCASECMP)\nCHECK_FUNCTION_EXISTS (strncasecmp HAVE_STRNCASECMP)\nCHECK_FUNCTION_EXISTS (strdup HAVE_STRDUP)\nCHECK_FUNCTION_EXISTS (shmat HAVE_SHMAT) \nCHECK_FUNCTION_EXISTS (shmctl HAVE_SHMCTL)\nCHECK_FUNCTION_EXISTS (shmdt HAVE_SHMDT)\nCHECK_FUNCTION_EXISTS (shmget HAVE_SHMGET)\nCHECK_FUNCTION_EXISTS (tell HAVE_TELL)\nCHECK_FUNCTION_EXISTS (tempnam HAVE_TEMPNAM)\nCHECK_FUNCTION_EXISTS (thr_setconcurrency HAVE_THR_SETCONCURRENCY)\nCHECK_FUNCTION_EXISTS (thr_yield HAVE_THR_YIELD)\nCHECK_FUNCTION_EXISTS (vasprintf HAVE_VASPRINTF)\nCHECK_FUNCTION_EXISTS (vsnprintf HAVE_VSNPRINTF)\nCHECK_FUNCTION_EXISTS (vprintf HAVE_VPRINTF)\nCHECK_FUNCTION_EXISTS (valloc HAVE_VALLOC)\nCHECK_FUNCTION_EXISTS (memalign HAVE_MEMALIGN)\nCHECK_FUNCTION_EXISTS (chown HAVE_CHOWN)\nCHECK_FUNCTION_EXISTS (nl_langinfo HAVE_NL_LANGINFO)\nCHECK_FUNCTION_EXISTS (ntohll HAVE_HTONLL)\n\nCHECK_FUNCTION_EXISTS (timer_create HAVE_TIMER_CREATE)\nCHECK_FUNCTION_EXISTS (timer_settime HAVE_TIMER_SETTIME)\nCHECK_FUNCTION_EXISTS (kqueue HAVE_KQUEUE)\n\nCHECK_FUNCTION_EXISTS (clock_gettime DNS_USE_CPU_CLOCK_FOR_ID)\nCHECK_FUNCTION_EXISTS (epoll_create HAVE_EPOLL)\nCHECK_FUNCTION_EXISTS (epoll_ctl HAVE_EPOLL_CTL)\n# Temperarily  Quote event port out as we encounter error in port_getn\n# on solaris x86\n# CHECK_FUNCTION_EXISTS (port_create HAVE_EVENT_PORTS)\nCHECK_FUNCTION_EXISTS (inet_ntop HAVE_INET_NTOP)\nCHECK_FUNCTION_EXISTS (kqueue HAVE_KQUEUE)\nCHECK_FUNCTION_EXISTS (kqueue HAVE_WORKING_KQUEUE)\nCHECK_FUNCTION_EXISTS (signal HAVE_SIGNAL)\nCHECK_SYMBOL_EXISTS (timeradd \"sys/time.h\" HAVE_TIMERADD)\nCHECK_SYMBOL_EXISTS (timerclear \"sys/time.h\" HAVE_TIMERCLEAR)\nCHECK_SYMBOL_EXISTS (timercmp \"sys/time.h\" HAVE_TIMERCMP)\nCHECK_SYMBOL_EXISTS (timerisset \"sys/time.h\" HAVE_TIMERISSET)\n\n\n#--------------------------------------------------------------------\n# Support for WL#2373 (Use cycle counter for timing)\n#--------------------------------------------------------------------\n\nCHECK_INCLUDE_FILES(time.h HAVE_TIME_H)\nCHECK_INCLUDE_FILES(sys/time.h HAVE_SYS_TIME_H)\nCHECK_INCLUDE_FILES(sys/times.h HAVE_SYS_TIMES_H)\nCHECK_INCLUDE_FILES(asm/msr.h HAVE_ASM_MSR_H)\n#msr.h has rdtscll()\n\nCHECK_INCLUDE_FILES(ia64intrin.h HAVE_IA64INTRIN_H)\n\nCHECK_FUNCTION_EXISTS(times HAVE_TIMES)\nCHECK_FUNCTION_EXISTS(gettimeofday HAVE_GETTIMEOFDAY)\nCHECK_FUNCTION_EXISTS(read_real_time HAVE_READ_REAL_TIME)\n# This should work on AIX.\n\nCHECK_FUNCTION_EXISTS(ftime HAVE_FTIME)\n# This is still a normal call for milliseconds.\n\nCHECK_FUNCTION_EXISTS(time HAVE_TIME)\n# We can use time() on Macintosh if there is no ftime().\n\nCHECK_FUNCTION_EXISTS(rdtscll HAVE_RDTSCLL)\n# I doubt that we'll ever reach the check for this.\n\n\n#\n# Tests for symbols\n#\n\nCHECK_SYMBOL_EXISTS(madvise \"sys/mman.h\" HAVE_DECL_MADVISE)\nCHECK_SYMBOL_EXISTS(tzname \"time.h\" HAVE_TZNAME)\nCHECK_SYMBOL_EXISTS(lrand48 \"stdlib.h\" HAVE_LRAND48)\nCHECK_SYMBOL_EXISTS(getpagesize \"unistd.h\" HAVE_GETPAGESIZE)\nCHECK_SYMBOL_EXISTS(TIOCGWINSZ \"sys/ioctl.h\" GWINSZ_IN_SYS_IOCTL)\nCHECK_SYMBOL_EXISTS(FIONREAD \"sys/ioctl.h\" FIONREAD_IN_SYS_IOCTL)\nCHECK_SYMBOL_EXISTS(TIOCSTAT \"sys/ioctl.h\" TIOCSTAT_IN_SYS_IOCTL)\nCHECK_SYMBOL_EXISTS(FIONREAD \"sys/filio.h\" FIONREAD_IN_SYS_FILIO)\nCHECK_SYMBOL_EXISTS(gettimeofday \"sys/time.h\" HAVE_GETTIMEOFDAY)\nCHECK_SYMBOL_EXISTS(SIGEV_THREAD_ID \"signal.h;time.h\" HAVE_SIGEV_THREAD_ID)\nCHECK_SYMBOL_EXISTS(EVFILT_TIMER \"sys/types.h;sys/event.h;sys/time.h\" HAVE_EVFILT_TIMER)\n\nCHECK_SYMBOL_EXISTS(finite  \"math.h\" HAVE_FINITE_IN_MATH_H)\nIF(HAVE_FINITE_IN_MATH_H)\n  SET(HAVE_FINITE TRUE CACHE INTERNAL \"\")\nELSE()\n  CHECK_SYMBOL_EXISTS(finite  \"ieeefp.h\" HAVE_FINITE)\nENDIF()\nCHECK_SYMBOL_EXISTS(log2  math.h HAVE_LOG2)\nCHECK_SYMBOL_EXISTS(isnan math.h HAVE_ISNAN)\nCHECK_SYMBOL_EXISTS(rint  math.h HAVE_RINT)\n\n# isinf() prototype not found on Solaris\nCHECK_CXX_SOURCE_COMPILES(\n\"#include  <math.h>\nint main() { \n  isinf(0.0); \n  return 0;\n}\" HAVE_ISINF)\n\n\n# fesetround() prototype not found in gcc compatibility file fenv.h\nCHECK_CXX_SOURCE_COMPILES(\n\"#include  <fenv.h>\nint main() { \n  fesetround(FE_TONEAREST);\n  return 0;\n}\" HAVE_FESETROUND)\n\n# Check for the Linux-specific POSIX timers API.\nIF(HAVE_TIMER_CREATE AND HAVE_TIMER_SETTIME AND HAVE_SIGEV_THREAD_ID)\n  SET(HAVE_POSIX_TIMERS 1 CACHE INTERNAL \"Have POSIX timer-related functions\")\nENDIF()\n\nIF(HAVE_KQUEUE AND HAVE_EVFILT_TIMER)\n  SET(HAVE_KQUEUE_TIMERS 1 CACHE INTERNAL \"Have kqueue timer-related filter\")\nENDIF()\n\nIF(HAVE_POSIX_TIMERS OR HAVE_KQUEUE_TIMERS)\n  SET(HAVE_MY_TIMER 1 CACHE INTERNAL \"Have mysys timer-related functions\")\nENDIF()\n\n#\n# Test for endianess\n#\nINCLUDE(TestBigEndian)\nIF(APPLE)\n  # Cannot run endian test on universal PPC/Intel binaries \n  # would return inconsistent result.\n  # config.h.cmake includes a special #ifdef for Darwin\nELSE()\n  TEST_BIG_ENDIAN(WORDS_BIGENDIAN)\nENDIF()\n\n#\n# Tests for type sizes (and presence)\n#\nINCLUDE (CheckTypeSize)\nset(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}\n        -D_LARGEFILE_SOURCE -D_LARGE_FILES -D_FILE_OFFSET_BITS=64\n        -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS)\nSET(CMAKE_EXTRA_INCLUDE_FILES signal.h)\nMY_CHECK_TYPE_SIZE(sigset_t SIGSET_T)\nIF(NOT SIZEOF_SIGSET_T)\n SET(sigset_t int)\nENDIF()\nMY_CHECK_TYPE_SIZE(mode_t MODE_T)\nIF(NOT SIZEOF_MODE_T)\n SET(mode_t int)\nENDIF()\n\n\nIF(HAVE_STDINT_H)\n  SET(CMAKE_EXTRA_INCLUDE_FILES stdint.h)\nENDIF(HAVE_STDINT_H)\n\nSET(HAVE_VOIDP 1)\nSET(HAVE_CHARP 1)\nSET(HAVE_LONG 1)\nSET(HAVE_SIZE_T 1)\n\nIF(NOT APPLE)\nMY_CHECK_TYPE_SIZE(\"void *\" VOIDP)\nMY_CHECK_TYPE_SIZE(\"char *\" CHARP)\nMY_CHECK_TYPE_SIZE(long LONG)\nMY_CHECK_TYPE_SIZE(size_t SIZE_T)\nENDIF()\n\nMY_CHECK_TYPE_SIZE(char CHAR)\nMY_CHECK_TYPE_SIZE(short SHORT)\nMY_CHECK_TYPE_SIZE(int INT)\nMY_CHECK_TYPE_SIZE(\"long long\" LONG_LONG)\nSET(CMAKE_EXTRA_INCLUDE_FILES stdio.h sys/types.h)\nMY_CHECK_TYPE_SIZE(off_t OFF_T)\nMY_CHECK_TYPE_SIZE(uchar UCHAR)\nMY_CHECK_TYPE_SIZE(uint UINT)\nMY_CHECK_TYPE_SIZE(ulong ULONG)\nMY_CHECK_TYPE_SIZE(int8 INT8)\nMY_CHECK_TYPE_SIZE(uint8 UINT8)\nMY_CHECK_TYPE_SIZE(int16 INT16)\nMY_CHECK_TYPE_SIZE(uint16 UINT16)\nMY_CHECK_TYPE_SIZE(int32 INT32)\nMY_CHECK_TYPE_SIZE(uint32 UINT32)\nMY_CHECK_TYPE_SIZE(u_int32_t U_INT32_T)\nMY_CHECK_TYPE_SIZE(int64 INT64)\nMY_CHECK_TYPE_SIZE(uint64 UINT64)\nMY_CHECK_TYPE_SIZE(time_t TIME_T)\nSET (CMAKE_EXTRA_INCLUDE_FILES sys/types.h)\nMY_CHECK_TYPE_SIZE(bool  BOOL)\nSET(CMAKE_EXTRA_INCLUDE_FILES)\nIF(HAVE_SYS_SOCKET_H)\n  SET(CMAKE_EXTRA_INCLUDE_FILES sys/socket.h)\nENDIF(HAVE_SYS_SOCKET_H)\nMY_CHECK_TYPE_SIZE(socklen_t SOCKLEN_T)\nSET(CMAKE_EXTRA_INCLUDE_FILES)\n\nIF(HAVE_IEEEFP_H)\n  SET(CMAKE_EXTRA_INCLUDE_FILES ieeefp.h)\n  MY_CHECK_TYPE_SIZE(fp_except FP_EXCEPT)\nENDIF()\n\n\n#\n# Code tests\n#\n\n# check whether time_t is unsigned\nCHECK_C_SOURCE_COMPILES(\"\n#include <time.h>\nint main()\n{\n  int array[(((time_t)-1) > 0) ? 1 : -1];\n  return 0;\n}\"\nTIME_T_UNSIGNED)\n\n\nCHECK_C_SOURCE_COMPILES(\"\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n#else\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\n#endif\nint main()\n{\n  getaddrinfo( 0, 0, 0, 0);\n  return 0;\n}\"\nHAVE_GETADDRINFO)\n\nCHECK_C_SOURCE_COMPILES(\"\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n#else\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\n#endif\nint main()\n{\n  select(0,0,0,0,0);\n  return 0;\n}\"\nHAVE_SELECT)\n\n#\n# Check if timespec has ts_sec and ts_nsec fields\n#\n\nCHECK_C_SOURCE_COMPILES(\"\n#include <pthread.h>\n\nint main(int ac, char **av)\n{\n  struct timespec abstime;\n  abstime.ts_sec = time(NULL)+1;\n  abstime.ts_nsec = 0;\n}\n\" HAVE_TIMESPEC_TS_SEC)\n\n\n#\n# Check return type of qsort()\n#\nCHECK_C_SOURCE_COMPILES(\"\n#include <stdlib.h>\n#ifdef __cplusplus\nextern \\\"C\\\"\n#endif\nvoid qsort(void *base, size_t nel, size_t width,\n  int (*compar) (const void *, const void *));\nint main(int ac, char **av) {}\n\" QSORT_TYPE_IS_VOID)\nIF(QSORT_TYPE_IS_VOID)\n  SET(RETQSORTTYPE \"void\")\nELSE(QSORT_TYPE_IS_VOID)\n  SET(RETQSORTTYPE \"int\")\nENDIF(QSORT_TYPE_IS_VOID)\n\nIF(WIN32)\nSET(SOCKET_SIZE_TYPE int)\nELSE()\nCHECK_CXX_SOURCE_COMPILES(\"\n#include <sys/socket.h>\nint main(int argc, char **argv)\n{\n  getsockname(0,0,(socklen_t *) 0);\n  return 0; \n}\"\nHAVE_SOCKET_SIZE_T_AS_socklen_t)\n\nIF(HAVE_SOCKET_SIZE_T_AS_socklen_t)\n  SET(SOCKET_SIZE_TYPE socklen_t)\nELSE()\n  CHECK_CXX_SOURCE_COMPILES(\"\n  #include <sys/socket.h>\n  int main(int argc, char **argv)\n  {\n    getsockname(0,0,(int *) 0);\n    return 0; \n  }\"\n  HAVE_SOCKET_SIZE_T_AS_int)\n  IF(HAVE_SOCKET_SIZE_T_AS_int)\n    SET(SOCKET_SIZE_TYPE int)\n  ELSE()\n    CHECK_CXX_SOURCE_COMPILES(\"\n    #include <sys/socket.h>\n    int main(int argc, char **argv)\n    {\n      getsockname(0,0,(size_t *) 0);\n      return 0; \n    }\"\n    HAVE_SOCKET_SIZE_T_AS_size_t)\n    IF(HAVE_SOCKET_SIZE_T_AS_size_t)\n      SET(SOCKET_SIZE_TYPE size_t)\n    ELSE()\n      SET(SOCKET_SIZE_TYPE int)\n    ENDIF()\n  ENDIF()\nENDIF()\nENDIF()\n\nCHECK_CXX_SOURCE_COMPILES(\"\n#include <pthread.h>\nint main()\n{\n  pthread_yield();\n  return 0;\n}\n\" HAVE_PTHREAD_YIELD_ZERO_ARG)\n\nIF(NOT STACK_DIRECTION)\n  IF(CMAKE_CROSSCOMPILING)\n   MESSAGE(FATAL_ERROR \n   \"STACK_DIRECTION is not defined.  Please specify -DSTACK_DIRECTION=1 \"\n   \"or -DSTACK_DIRECTION=-1 when calling cmake.\")\n  ELSE()\n    TRY_RUN(STACKDIR_RUN_RESULT STACKDIR_COMPILE_RESULT    \n     ${CMAKE_BINARY_DIR} \n     ${CMAKE_SOURCE_DIR}/cmake/stack_direction.c\n     )\n     # Test program returns 0 (down) or 1 (up).\n     # Convert to -1 or 1\n     IF(STACKDIR_RUN_RESULT EQUAL 0)\n       SET(STACK_DIRECTION -1 CACHE INTERNAL \"Stack grows direction\")\n     ELSE()\n       SET(STACK_DIRECTION 1 CACHE INTERNAL \"Stack grows direction\")\n     ENDIF()\n     MESSAGE(STATUS \"Checking stack direction : ${STACK_DIRECTION}\")\n   ENDIF()\nENDIF()\n\n#\n# Check return type of signal handlers\n#\nCHECK_C_SOURCE_COMPILES(\"\n#include <signal.h>\n#ifdef signal\n# undef signal\n#endif\n#ifdef __cplusplus\nextern \\\"C\\\" void (*signal (int, void (*)(int)))(int);\n#else\nvoid (*signal ()) ();\n#endif\nint main(int ac, char **av) {}\n\" SIGNAL_RETURN_TYPE_IS_VOID)\nIF(SIGNAL_RETURN_TYPE_IS_VOID)\n  SET(RETSIGTYPE void)\n  SET(VOID_SIGHANDLER 1)\nELSE(SIGNAL_RETURN_TYPE_IS_VOID)\n  SET(RETSIGTYPE int)\nENDIF(SIGNAL_RETURN_TYPE_IS_VOID)\n\n\nCHECK_INCLUDE_FILES(\"time.h;sys/time.h\" TIME_WITH_SYS_TIME)\nCHECK_SYMBOL_EXISTS(O_NONBLOCK \"unistd.h;fcntl.h\" HAVE_FCNTL_NONBLOCK)\nIF(NOT HAVE_FCNTL_NONBLOCK)\n SET(NO_FCNTL_NONBLOCK 1)\nENDIF()\n\n#\n# Test for how the C compiler does inline.\n# If both of these tests fail, then there is probably something wrong\n# in the environment (flags and/or compiling and/or linking).\n#\nCHECK_C_SOURCE_COMPILES(\"\nstatic inline int foo(){return 0;}\nint main(int argc, char *argv[]){return 0;}\"\n                            C_HAS_inline)\nIF(NOT C_HAS_inline)\n  CHECK_C_SOURCE_COMPILES(\"\n  static __inline int foo(){return 0;}\n  int main(int argc, char *argv[]){return 0;}\"\n                            C_HAS___inline)\n  SET(C_INLINE __inline)\nENDIF()\n\nIF(NOT C_HAS_inline AND NOT C_HAS___inline)\n  MESSAGE(FATAL_ERROR \"It seems like ${CMAKE_C_COMPILER} does not support \"\n    \"inline or __inline. Please verify compiler and flags. \"\n    \"See CMakeFiles/CMakeError.log for why the test failed to compile/link.\")\nENDIF()\n\nIF(NOT CMAKE_CROSSCOMPILING AND NOT MSVC)\n  STRING(TOLOWER ${CMAKE_SYSTEM_PROCESSOR}  processor)\n  IF(processor MATCHES \"86\" OR processor MATCHES \"amd64\" OR processor MATCHES \"x64\")\n  #Check for x86 PAUSE instruction\n  # We have to actually try running the test program, because of a bug\n  # in Solaris on x86_64, where it wrongly reports that PAUSE is not\n  # supported when trying to run an application.  See\n  # http://bugs.opensolaris.org/bugdatabase/printableBug.do?bug_id=6478684\n  CHECK_C_SOURCE_RUNS(\"\n  int main()\n  { \n    __asm__ __volatile__ (\\\"pause\\\"); \n    return 0;\n  }\"  HAVE_PAUSE_INSTRUCTION)\n  ENDIF()\n  IF (NOT HAVE_PAUSE_INSTRUCTION)\n    CHECK_C_SOURCE_COMPILES(\"\n    int main()\n    {\n     __asm__ __volatile__ (\\\"rep; nop\\\");\n     return 0;\n    }\n   \" HAVE_FAKE_PAUSE_INSTRUCTION)\n  ENDIF()\nENDIF()\n  \nCHECK_SYMBOL_EXISTS(tcgetattr \"termios.h\" HAVE_TCGETATTR 1)\n\n#\n# Check type of signal routines (posix, 4.2bsd, 4.1bsd or v7)\n#\nCHECK_C_SOURCE_COMPILES(\"\n  #include <signal.h>\n  int main(int ac, char **av)\n  {\n    sigset_t ss;\n    struct sigaction sa;\n    sigemptyset(&ss); sigsuspend(&ss);\n    sigaction(SIGINT, &sa, (struct sigaction *) 0);\n    sigprocmask(SIG_BLOCK, &ss, (sigset_t *) 0);\n  }\"\n  HAVE_POSIX_SIGNALS)\n\nIF(NOT HAVE_POSIX_SIGNALS)\n CHECK_C_SOURCE_COMPILES(\"\n  #include <signal.h>\n  int main(int ac, char **av)\n  {\n    int mask = sigmask(SIGINT);\n    sigsetmask(mask); sigblock(mask); sigpause(mask);\n  }\"\n  HAVE_BSD_SIGNALS)\n  IF (NOT HAVE_BSD_SIGNALS)\n    CHECK_C_SOURCE_COMPILES(\"\n    #include <signal.h>\n    void foo() { }\n    int main(int ac, char **av)\n    {\n      int mask = sigmask(SIGINT);\n      sigset(SIGINT, foo); sigrelse(SIGINT);\n      sighold(SIGINT); sigpause(SIGINT);\n    }\"\n   HAVE_SVR3_SIGNALS)  \n   IF (NOT HAVE_SVR3_SIGNALS)\n    SET(HAVE_V7_SIGNALS 1)\n   ENDIF(NOT HAVE_SVR3_SIGNALS)\n ENDIF(NOT HAVE_BSD_SIGNALS)\nENDIF(NOT HAVE_POSIX_SIGNALS)\n\n# Assume regular sprintf\nSET(SPRINTFS_RETURNS_INT 1)\n\nIF(CMAKE_COMPILER_IS_GNUCXX AND HAVE_CXXABI_H)\nCHECK_CXX_SOURCE_COMPILES(\"\n #include <cxxabi.h>\n int main(int argc, char **argv) \n  {\n    char *foo= 0; int bar= 0;\n    foo= abi::__cxa_demangle(foo, foo, 0, &bar);\n    return 0;\n  }\"\n  HAVE_ABI_CXA_DEMANGLE)\nENDIF()\n\nCHECK_C_SOURCE_COMPILES(\"\n  int main(int argc, char **argv) \n  {\n    extern char *__bss_start;\n    return __bss_start ? 1 : 0;\n  }\"\nHAVE_BSS_START)\n\nCHECK_C_SOURCE_COMPILES(\"\n    int main()\n    {\n      extern void __attribute__((weak)) foo(void);\n      return 0;\n    }\"\n    HAVE_WEAK_SYMBOL\n)\n\n\nCHECK_CXX_SOURCE_COMPILES(\"\n    #undef inline\n    #if !defined(SCO) && !defined(__osf__) && !defined(_REENTRANT)\n    #define _REENTRANT\n    #endif\n    #include <pthread.h>\n    #include <sys/types.h>\n    #include <sys/socket.h>\n    #include <netinet/in.h>\n    #include <arpa/inet.h>\n    #include <netdb.h>\n    int main()\n    {\n\n       struct hostent *foo =\n       gethostbyaddr_r((const char *) 0,\n          0, 0, (struct hostent *) 0, (char *) NULL,  0, (int *)0);\n       return 0;\n    }\n  \"\n  HAVE_SOLARIS_STYLE_GETHOST)\n\nIF(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\nIF(WITH_ATOMIC_OPS STREQUAL \"up\")\n  SET(MY_ATOMIC_MODE_DUMMY 1 CACHE BOOL \"Assume single-CPU mode, no concurrency\")\nELSEIF(WITH_ATOMIC_OPS STREQUAL \"rwlocks\")\n  SET(MY_ATOMIC_MODE_RWLOCK 1 CACHE BOOL \"Use pthread rwlocks for atomic ops\")\nELSEIF(WITH_ATOMIC_OPS STREQUAL \"smp\")\nELSEIF(NOT WITH_ATOMIC_OPS)\n  CHECK_CXX_SOURCE_COMPILES(\"\n  int main()\n  {\n    int foo= -10; int bar= 10;\n    long long int foo64= -10; long long int bar64= 10;\n    if (!__sync_fetch_and_add(&foo, bar) || foo)\n      return -1;\n    bar= __sync_lock_test_and_set(&foo, bar);\n    if (bar || foo != 10)\n      return -1;\n    bar= __sync_val_compare_and_swap(&bar, foo, 15);\n    if (bar)\n      return -1;\n    if (!__sync_fetch_and_add(&foo64, bar64) || foo64)\n      return -1;\n    bar64= __sync_lock_test_and_set(&foo64, bar64);\n    if (bar64 || foo64 != 10)\n      return -1;\n    bar64= __sync_val_compare_and_swap(&bar64, foo, 15);\n    if (bar64)\n      return -1;\n    return 0;\n  }\"\n  HAVE_GCC_ATOMIC_BUILTINS)\n  IF(NOT HAVE_GCC_ATOMIC_BUILTINS)\n    MESSAGE(WARNING\n    \"Unsupported version of GCC/Clang is used which does not support Atomic \"\n    \"Builtins. Using pthread rwlocks instead.\")\n  ENDIF(NOT HAVE_GCC_ATOMIC_BUILTINS)\nELSE()\n  MESSAGE(FATAL_ERROR \"${WITH_ATOMIC_OPS} is not a valid value for WITH_ATOMIC_OPS!\")\nENDIF()\nENDIF()\n\nSET(WITH_ATOMIC_LOCKS \"${WITH_ATOMIC_LOCKS}\" CACHE STRING\n\"Implement atomic operations using pthread rwlocks or atomic CPU\ninstructions for multi-processor or uniprocessor\nconfiguration. By default gcc built-in sync functions are used,\nif available and 'smp' configuration otherwise.\")\nMARK_AS_ADVANCED(WITH_ATOMIC_LOCKS MY_ATOMIC_MODE_RWLOCK MY_ATOMIC_MODE_DUMMY)\n\nIF(WITH_VALGRIND)\n  SET(VALGRIND_HEADERS \"valgrind/memcheck.h;valgrind/valgrind.h\")\n  CHECK_INCLUDE_FILES(\"${VALGRIND_HEADERS}\" HAVE_VALGRIND_HEADERS)\n  IF(HAVE_VALGRIND_HEADERS)\n    SET(HAVE_VALGRIND 1)\n    ADD_DEFINITIONS(-DHAVE_purify)\n  ELSE()\n    MESSAGE(FATAL_ERROR \"Unable to find Valgrind header files ${VALGRIND_HEADERS}. Make sure you have them in your include path.\")\n  ENDIF()\nENDIF()\n\n#--------------------------------------------------------------------\n# Check for IPv6 support\n#--------------------------------------------------------------------\nCHECK_INCLUDE_FILE(netinet/in6.h HAVE_NETINET_IN6_H)\n\nIF(UNIX)\n  SET(CMAKE_EXTRA_INCLUDE_FILES sys/types.h netinet/in.h sys/socket.h)\n  IF(HAVE_NETINET_IN6_H)\n    SET(CMAKE_EXTRA_INCLUDE_FILES ${CMAKE_EXTRA_INCLUDE_FILES} netinet/in6.h)\n  ENDIF()\nELSEIF(WIN32)\n  SET(CMAKE_EXTRA_INCLUDE_FILES ${CMAKE_EXTRA_INCLUDE_FILES} winsock2.h ws2ipdef.h)\nENDIF()\n\nMY_CHECK_STRUCT_SIZE(\"sockaddr_in6\" SOCKADDR_IN6)\nMY_CHECK_STRUCT_SIZE(\"in6_addr\" IN6_ADDR)\n\nIF(HAVE_STRUCT_SOCKADDR_IN6 OR HAVE_STRUCT_IN6_ADDR)\n  SET(HAVE_IPV6 TRUE CACHE INTERNAL \"\")\nENDIF()\n\n\n# Check for sockaddr_storage.ss_family\n# It is called differently under OS400 and older AIX\n\nCHECK_STRUCT_HAS_MEMBER(\"struct sockaddr_storage\"\n ss_family \"${CMAKE_EXTRA_INCLUDE_FILES}\" HAVE_SOCKADDR_STORAGE_SS_FAMILY)\nIF(NOT HAVE_SOCKADDR_STORAGE_SS_FAMILY)\n  CHECK_STRUCT_HAS_MEMBER(\"struct sockaddr_storage\"\n  __ss_family \"${CMAKE_EXTRA_INCLUDE_FILES}\" HAVE_SOCKADDR_STORAGE___SS_FAMILY)\n  IF(HAVE_SOCKADDR_STORAGE___SS_FAMILY)\n    SET(ss_family __ss_family)\n  ENDIF()\nENDIF()\n\n#\n# Check if struct sockaddr_in::sin_len is available.\n#\n\nCHECK_STRUCT_HAS_MEMBER(\"struct sockaddr_in\" sin_len\n  \"${CMAKE_EXTRA_INCLUDE_FILES}\" HAVE_SOCKADDR_IN_SIN_LEN)\n\n#\n# Check if struct sockaddr_in6::sin6_len is available.\n#\n\nCHECK_STRUCT_HAS_MEMBER(\"struct sockaddr_in6\" sin6_len\n  \"${CMAKE_EXTRA_INCLUDE_FILES}\" HAVE_SOCKADDR_IN6_SIN6_LEN)\n\nSET(CMAKE_EXTRA_INCLUDE_FILES) \n\nCHECK_STRUCT_HAS_MEMBER(\"struct dirent\" d_ino \"dirent.h\"  STRUCT_DIRENT_HAS_D_INO)\nCHECK_STRUCT_HAS_MEMBER(\"struct dirent\" d_namlen \"dirent.h\"  STRUCT_DIRENT_HAS_D_NAMLEN)\nSET(SPRINTF_RETURNS_INT 1)\n"
        },
        {
          "name": "dbug",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "mysys",
          "type": "tree",
          "content": null
        },
        {
          "name": "mysys_ssl",
          "type": "tree",
          "content": null
        },
        {
          "name": "regex",
          "type": "tree",
          "content": null
        },
        {
          "name": "sql-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "sql",
          "type": "tree",
          "content": null
        },
        {
          "name": "sqladvisor",
          "type": "tree",
          "content": null
        },
        {
          "name": "strings",
          "type": "tree",
          "content": null
        },
        {
          "name": "zlib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}