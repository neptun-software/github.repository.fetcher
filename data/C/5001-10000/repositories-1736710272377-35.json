{
  "metadata": {
    "timestamp": 1736710272377,
    "page": 35,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pocoproject/poco",
      "stars": 8562,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.591796875,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.txt text\n*.cpp text\n*.c text\n*.h text\n*.cmd text \n*.sln text \n*.vcproj text \n*.vcxproj text \n*.vcxproj.filters text \n*.page text\n*.html text\n*.xhtml text\n*.css text\n*.js text\n*.progen text\n*.xml text\n*.xsd text\n*.template text\n*.properties text\n*.ini text\n*.vxbuild text\n\n# Denote all files that are truly binary and should not be modified.\n*.bin binary\n*.mc binary\n*.png binary\n*.jpg binary\n*.gif binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.87109375,
          "content": "# Compiled #\n############\n*.com\n*.class\n*.dll\n*.dylib\n*.exe\n*.slo\n*.lo\n*.o\n*.so\n*.lai\n*.la\n*.a\n*.d\n*.vsp\n*.psess\n\n# Gradle #\n##########\n!gradle.properties\n!settings.gradle\n!build.gradle\n!build.gradle.win\n!travis/.gradle/gradle.properties\n.gradle/\n**/guild/\ncoverage/\n\n# NuGet #\n#########\n*.nupkg\n\n# WiX #\n#######\n*.msi\n*.wixobj\n*.wixpdb\n\n# Make #\n########\nconfig.build\nconfig.make\n\n# CLion #\n#########\n.idea/\n\n# Qt Creator #\n#########\nbuild/Qt_*\n\n# CMake #\n########\ncmake_install.cmake\ncmake_uninstall.cmake\nCMakeFiles\nCMakeCache.txt\nCPackConfig.cmake\nCPackSourceConfig.cmake\ncmake_*\ncmake-build-*\n\n# Packages #\n############\n# it's better to unpack these files and commit the raw source\n# git has its own built in compression methods\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n\n# Logs and databases #\n######################\n*.log*\n*.sqlite\n*.db\ntest*.txt\nXML/testsuite/rss.xml\n\n# OS generated files #\n######################\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\nThumbs.db\n*~\n\n# VS generated files #\n######################\n*.obj\n*.exe\n*.pdb\n*.user\n*.aps\n*.pch\n*.ipch\n*.ncb\n*.suo\n*.sdf\n*.opensdf\n*.tlb\n*.tlh\n*.ilk\n*.lib\n*.exp\n*.idb\n*.rc\n*.res\n*.manifest\n*.tlog\n*.lastbuildstate\n*.unsuccessfulbuild\n*.opendb\n.vs/\nrelease_shared/\ndebug_shared/\nrelease_static/\ndebug_static/\nrelease_static_md/\ndebug_static_md/\nrelease_static_mt/\ndebug_static_mt/\nbin/\nbin64/\nlib/\nlib64/\npocomsg.h\n**/UpgradeLog*.XML\n/out/build/x64-Debug\n.vs/\nvcpkg_installed/\n\n# Eclipse generated files #\n###########################\n.project\n.cproject\n.settings\ncmake-build/\n\n# Temporary files #\n###################\n*.bak\nstage/\nreleases/\npoco_build_stderr.out\n\n# vim #\n#######\n*.orig\n*.swp\n*.vim\ntags\n\n# Javascript #\n##############\npackage-lock.json\nnode_modules\n\n# Old Visual Studio files #\n###########################\n*_vs1[45]0.sln\n*_vs1[45]0.vcxproj\n*_vs1[45]0.vcxproj.filters\n\n# Debug files #\n##############\n*.core\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "ActiveRecord",
          "type": "tree",
          "content": null
        },
        {
          "name": "ApacheConnector",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 204.2685546875,
          "content": "This is the changelog file for the POCO C++ Libraries.\n\n\nRelease 1.14.0 (2024-12-01)\n===========================\n\nSummary of Changes:\n\nThis release marks many functions and classes as deprecated with C++ [[deprecated]]\nattribute. Warnings can be silenced by defining POCO_SILENCE_DEPRECATED.\n\nDeprecated functionality will be removed in one of the next releases.\n\nMinimal supported standard is C++17 since version 1.13. Decent part of the\nsource code is modernised in this release.\n\nBundled software libraries are updated to latest versions:\n\n- zlib 1.3.1\n- expat 2.6.4\n- pcre2 10.44\n- libpng 1.6.43\n- SQLite 3.47.1\n\nPoco::Foundation:\n\n- Support for Version 6 and Version 7 UUIDs\n\nPoco::MongoDB:\n\n- Obsolete wire-protocol (pre 3.6) that was removed from MongoDB in version 5.1\nis obsolete in this version of Poco. It will be removed in one of next versions. Update code to use\nOpMsg-based interface.\n\nPoco::Data:\n\n- Full Nullable support (including bulk inserts)\n- ODBC SQL Server big strings support\n\n\nBreaking Changes:\n\n- GH #4426 Mark deprecated code for removal\n\nSecurity Fixes:\n\n- GH #4760 Upgrade libexpat to release 2.6.4\n- GH #4690 Net: stack-buffer-overflow if HTTP request contains a header with invalid UTF32 sequence\n- GH #4687 Net::MailMessage: Double free if Content-Disposition header is empty\n- GH #4629 XML: fuzzing stack overflow\n- GH #4123 DoS vulnerability in XML/src/xmlparse.cpp\n- GH #4478 Upgrade bundled PCRE2 to 10.44\n- PR #4677 libpng version 1.6.43\n\nFeatures, Enhancements and Third Party Updates:\n\n- PR #4787 NetSSL_OpenSSL and NetSSL_Win: non-blocking support, shutdown behavior fix\n- PR #4681 zlib: Version 1.3.1 in module PDF (#4582)\n- PR #4788 Update bundled SQLite to version 3.47.1 (released 2024-11-25)\n- GH #4669 Upgrade JSON parser\n- GH #4580 Poco::UUID/UUIDGenerator: add support for Version 6 and Version 7 UUIDs\n- PR #4724 Hide zlib and expat libs from the user of Poco libraries (replaces #4579)\n- GH #4766 ProcessRunner sync\n- GH #4750 DBLogger sample\n- GH #4712 Error code for pthread_mutex_lock failure\n- GH #4710 UTF8::normalize()\n- GH #4680 Poco::Path::forDirectory(\"C:\") throws if the path is disk-letter only\n- GH #4556 Overriding SocketReactor::run() is not reasonably possible\n- GH #4553 Poco::Logger can not output __FILE__ and __LINE__\n- GH #4544 The load balancing issue in Poco::ActiveThreadPool\n- GH #4502 Optional and Nullable Improvements\n- GH #4431 Consolidate LogFile implementation to use FileOutputStream\n- GH #4423 `Dynamic::Var` silently loses precision on int->float conversion\n- GH #4230 Poco::Data fixes and improvements\n- GH #3997 operator<<() for SocketAddress doesn't work with ADL\n- GH #3801 ODBC: DataFormatException getting Time value from SQL Server\n- GH #3656 Parse json into specified descendant class\n- GH #2808 Failed to insert Poco::Nullable< Poco::Data::Date> data into MSSQL using ODBC\n- GH #1540 Poco::DateTime uses assertions for validation\n- GH #4769 pocoNetworkInitializer - change fixed path (Windows Platform related)\n- GH #4716 Logging: JSONFormatter\n- GH #4692 Stacktrace\n- GH #4643 `ServerApplication` callbacks\n- GH #4632 Add `prebuild` action to make build\n- GH #4630 Make `Util::Application::getApplicationPath()` and `findAppConfigFile()` protected\n- GH #4559 ServerApplication has no pidfile option on windows\n- GH #4536 Serializable Isolation level for SQLite Databases\n- GH #4529 SQLChannel stops logging on LoggingSubsystem shutdown\n- GH #4493 PocoDoc: search support\n- GH #4447 Add checkers for Any holding nullptr\n- GH #4414 Improve NotificationCenter speed and usability\n- GH #4413 StreamCopier range support\n- GH #4409 Add string_view format type spec\n- GH #4365 `Poco::Data::Statement`: unified '?' placeholder support\n- GH #4341 1.12.4 version Json set enum value failed\n- GH #4324 Poco:Data::ODBC - MSSQL (n)varchar(max) length issue\n- GH #4001 Insert NULL using BULK\n- GH #3281 DTLS 1.2 support\n- PR #4777 enh(ODBC): ODBC: DataFormatException getting Time value from SQL Serv…\n- PR #4774 Non-blocking sockets support (TLS, WebSocket)\n- PR #4770 feat(WindowsBuild): customizable path to include for pocoNetworkInitializer #4769\n- PR #4755 Insert NULL using BULK #4001\n- PR #4748 Activity now sets _running flag to false when it finishes or throws.\n- PR #4721 fix(Data::ODBC): use connection and login timeouts in ODBC session implementation\n- PR #4714 Add missing relational operators to VarIterator\n- PR #4699 Apply patches from Debian packaging\n- PR #4693 Serializable Isolation level for SQLite Databases\n- PR #4663 Fixed incorrect SSL_CTX_set0_tmp_dh_pkey() usage\n- PR #4624 enh(Poco::ActiveThreadPool): make it easy to use correctly\n- PR #4621 enh(FileStream): Add FileStreamBuf::resizeBuffer\n- PR #4617 enh(CI): Add unbundled build on Linux.\n- PR #4616 Cppunit and data test enhancements\n- PR #4569 Allow ADL for swapping Optional values\n- PR #4563 enh(MongoDB): Document::get returns value by const reference\n- PR #3040 HTTPS proxy support\n- PR #4734 File lock\n- PR #4424 Allow using Poco::FileStream to wrap arbitrary file handles/descriptors as C++ streams\n- PR #4685 CMake: Remove possibility to build with internal OpenSSL\n\nBug Fixes and Improvements:\n\n- GH #4773 Non-blocking sockets support (TLS, WebSocket)\n- GH #4768 Data:  warning: 'isNull' overrides a member function but is not marked 'override'\n- GH #4742 Poco does not build on AIX\n- GH #4722 libcxx: error: implicit instantiation of undefined template 'std::char_traits<unsigned char>'\n- GH #4713 replaceInPlace std::wstring\n- GH #4711 Poco::Placeholder initialization uses wrong size\n- GH #4703 File Channel Logs in UTC Despite ‘times = local’\n- GH #4695 Build error with GCC-15 (class Poco::PriorityDelegate<TObj, void, true>’ has no member named ‘_pTarget’)\n- GH #4689 SMTPClientSession: replace bare newlines in message content with CRLF.\n- GH #4668 Cross-module exception issue with pre-compiler define _HAS_EXCEPTIONS=0 used in an application\n- GH #4664 HTTPCookie Constructor Fails to Handle Discard Attribute Properly\n- GH #4648 ProcessRunner erases its PID file name\n- GH #4644 TryParse scoped ipv6 addressess for addresses enclosed in [  ]\n- GH #4634 Poco::ActiveThreadPool _targetCompleted event never reset\n- GH #4610 Incorrect setting of ciphersuites for TLSv1.3\n- GH #4592 Significant performance degradation of Poco::DateTimeParser\n- GH #4586 MacOS ARM64 build error: symbol `fdopen` is duplicated defined\n- GH #4585 MacOS ARM64 build warning: 'OS_CODE' macro redefined\n- GH #4557 NestedDiagnosticContext should be thread local\n- GH #4540 Postgres CMakeList.txt\n- GH #4535 decodeWord adds spaces at folding borders, when there are special characters encoded\n- GH #4525 RecordSet issue since 1.10.0\n- GH #4503 GitHub runner: Linux thread sanitizer tests fail with \"unexpected memory mapping\"\n- GH #4482 ProcessRunner does not detect launch errors\n- GH #4395 There is no way to resolve host in advance and connect to HTTPS server with SNI.\n- GH #4368 fix Oracle failing ODBC tests\n- GH #3913 Missing sources in release package - buildwin.ps1 and NetSSL_Win\n- GH #3896 TryParse scoped ipv6 addressess\n- GH #3180 Poco::Environment::osDisplayName\n- GH #2971 Poco::NamedEvent does not release System V semaphore on Linux\n- GH #2439 Issue with log purging when FileChannel compression is enabled\n- PR #4762 Properly define POCO_DLL and POCO_STATIC based on BUILD_SHARED_LIBS\n- PR #4753 Openssl DH key size\n- PR #4737 fix(cmake): fix Data::PostgreSQL target include, remove unnecessary cmake modules.\n- PR #4727 GitHub runner ubuntu 24.04 and resolve some issues\n- PR #4726 Explicitly define conditional LOB constructors for const (w)string &\n- PR #4725 Exception (VS): static assert to make sure that _HAS_EXCEPTIONS is set\n- PR #4702 SimpleRowFormatter.h: fix the build on `gcc-15` (unsatisfied `noexcept`)\n- PR #4688 Fix double free in Net::MailMessage if Content-Disposition header is empty\n- PR #4657 LibPNG Unbundled\n- PR #4652 enh(ScopedLockWithUnlock): make it more alike std::unique_lock\n- PR #4647 Use Int64 for TcpServerDispatcher::totalConnections()\n- PR #4635 fix(Poco::Zip::ZipLocalFileHeader) Fix const-correctness\n- PR #4622 fix(SimpleFileChannel): unify default \"flush\" to be false as it is in FileChannel\n- PR #4613 Usage modern C++ features on JSON modules (enhanced)\n- PR #4597 Fix MinGW build error\n- PR #4593 DateTimeParser Validation and Performance Improvements\n- PR #4550 enh: resolve unit test and few other warnings.\n- PR #4545 Add CACHE PATH to multi-config output directory variables\n- PR #4542 Decode word\n- PR #4417 fix(logs): synchronise log file rotation and compression.\n- PR #4085 Usage modern C++ features on JSON modules\n\n\nRelease 1.13.3 (2024-04-04)\n===========================\n\nSummary of Changes:\n\nThis is a bugfix release.\n\nSecurity Fixes:\n\n- GH #4496 Upgrade bundled libexpat to 2.6.2\n\nFeatures, Enhancements and Third Party Updates:\n\n- GH #4488 Add Poco::Util::Timer::idle() method to check if timer has any tasks scheduled\n- GH #3807 DNS.resolve() should not be sorted in HostEntry::removeDuplicates()\n- GH #4515 Upgrade bundled SQLite to 3.45.2\n- PR #4517 Optimize Net module for Android\n\nBug Fixes and Improvements:\n\n- GH #4505 ODBC Unicode wrappers do not check for null length pointers\n- GH #4492 Poco::BasicMemoryStreamBuf is missing seekpos()\n- GH #4486 DateTimeFormat RFC1036 Sunday name is short (should be long)\n- GH #4468 Poco::URI: don't lowercase host part if it's a Unix domain socket\n- GH #4450 Error between Poco::ActiveRecord and Poco::Data::PostgreSQL\n- GH #4435 SecureStreamSocket is not thread-safe\n- GH #4415 SecureSocketImpl::reset shouldn't close socket\n- GH #3857 Thread_POSIX.cpp shouldn't convert thread IDs to long\n- GH #3725 secure socket receiveTimeout throwing after configured timeout * 2\n\n\nRelease 1.13.2 (2024-02-19)\n===========================\n\nSummary of Changes:\n\nThis is a bugfix release.\n\nBreaking Changes:\n\n- GH #4378 [Data] Unconditionally includes of SQLParser.h\n\nBug fixes and Improvements:\n\n- GH #4462 Disable SQL parsing by default\n\n\nRelease 1.13.1 (2024-02-05)\n===========================\n\nSummary of Changes:\n\nThis is a bugfix release.\n\nFeatures and Enhancements:\n\n- GH #4367 `SQLite` `FTS5` (full text search)\n- GH #4335 Implement patches that Debian/Ubuntu applies when preparing deb packages\n- GH #4216 Replace C string literals (const char*) with C++ std::string literals for std::string parameters.\n- GH #3890 Get rid of SingletonHolder\n- GH #2450 Why does it take the ThreadPool 10+ seconds to shutdown when there is nothing running.\n- GH #2443 FileChannel doesn't flush to disk on unix until close\n- GH #4437 Add arm cross-compile config and CI\n- PR #4422 enh(File): Linux, macOS: microsecond precision for file times\n- PR #4390 enh(DateTimeParser): option to cleanup input string before parsing (#569)\n\nBug Fixes and Improvements:\n\n- GH #4443 Upgrade libexpat to 2.6.0\n- GH #4425 Unit tests: optional testing of deprecated functionality\n- GH #4421 Multiple calls to initializeSSL/uninitializeSSL cause assert failure during certificate validation\n- GH #4411 NULL pointer: strategy when setting rotation never in FileChannel\n- GH #4404 qnx build error: 'prctl' was not declared in this scope\n- GH #4400 SocketReactor deadlock test intermittently hangs\n- GH #4398 Can not install CppUnit target\n- GH #4393 iOS ARM64 : Invalid access: Can not convert empty value.\n- GH #4392 Environment_WIN32U nodeIdImpl access violation in 1.13.0\n- GH #4375 UUID parser silently ignores too long strings\n- GH #4347 github check job on macOS: testEncryptDecryptGCM occasionally fails\n- GH #4313 Add macos sanitizer CI jobs\n- GH #4019 MSYS2/mingw cmake linking problem\n- GH #4018 cmake MSYS2 compile error for poco/net project\n- GH #3908 JWT token unitest fail with POCO_NO_SOO on vs 2019\n- GH #3650 MailMessage::read() chokes on \"Content-disposition\"\n- GH #3331 Apple Silicon ARM64 :  Invalid access: Can not convert empty value.\n- GH #3213 NetSSL_Win\\src\\SecureSocketImpl.cpp CertFreeCertificateContext on nullptr\n- GH #661 Automatic Lib Init (NetworkInitializer) is not working on MinGW\n- PR #4427 enh(tests): Ability to enable/disable testing of deprecated functionality\n- PR #4381 fix(Crypto): Compile error if EVP_CIPHER_CTX_init not defined.\n\n\nRelease 1.13.0 (2023-12-22)\n===========================\n\nHighlights\n\n- Support for MongoDB 5.1 and newer\n- C++17 is the lowest supported standard\n- Poco::Data SQLParser (experimental, optional at build and runtime)\n\nBreaking Changes\n\n- GH #4305 Remove deprecated `toJSON` functions\n- GH #4304 NumericString conversions inconsistencies\n- GH #4235 Minimum standards: C++17 and C11\n- GH #4230 Poco::Data fixes and improvements\n- GH #3701 SocketReactor: Remove not useful handlers calls\n- GH #569 SyntaxException for DateTimeParser::parse not working\n\nFeatures and Enhancements\n\n- GH #4276 MongoDB default function deleted clang warning\n- GH #4261 Move autoCommit to AbstractSessionImpl\n- GH #4254 MessageHeader: provide original HTTP header values before RFC2047 decoding\n- GH #4249 Separate CI ODBC tests into separate job\n- GH #4217 Protect Reactor stop() and wakeUp() from reentrance\n- GH #4208 Add Unix socket support on windows\n- GH #4206 Improve Data::SessionPool thread safety\n- GH #4205 Data CI Improvements\n- GH #4198 Poco::Data fixes and improvements\n- GH #4183 Return Transaction execution status and error\n- GH #4181 Virtualize ServerApplication::handlePidFile()\n- GH #4160 Allow row count statements in Data::Recordset\n- GH #4148 SQL server stored procedures fail\n- GH #4146 ODBC max field size fails with int\n- GH #4129 make clean and distclean should not trigger dependencies creation\n- GH #4112 Redirect build stderr to a file\n- GH #4107 SQLChannel fixes and improvements\n- GH #4064 Add ProcessRunner and PIDFile\n- GH #4063 pthread_setname_np was not declared in this scope\n- GH #3951 Poco::Data::SessionPool: avoid sessions staying idle too long\n- GH #3833 DynamicStruct::toString() escaping\n- GH #3808 ICMPEventArgs Statistics bugs\n- GH #3740 buildwin.ps1 failed to build x64\n- GH #3713 SocketReactor improvements\n- GH #3710 Thread::trySleep() assertion\n- GH #3703 POSIX Thread::sleep() poor performance\n- GH #3702 SocketReactor: post ErrorNotification on exception\n- GH #3667 NumberFormatter: add Options enum for controlling prefix and lowercase\n- GH #2967 build Poco Net failed MinGW [TIMESTAMP_REQUEST enum vs macro]\n- GH #2770 Support for AF_UNIX on windows in recent windows builds.\n- GH #2707 Trying to Compile with emscripten: Target architecture was not detected as supported by Double-Conversion\n- GH #2578 HTTPClientSession not working with UNIX_LOCAL SocketAddress\n- GH #2403 File::exists() wrong result\n- GH #2331 Improve implementation of logging macros.\n- GH #2282 Add Path::self()\n- GH #1258 Poco::DateTimeParser::tryParse issue\n- GH #3845 Poco::XML::Node `insertAfter` API\n- GH #3659 Add thread name support\n- GH #2291 Visitor Pattern for Dynamic::Var\n- PR #4059 Update ICMPv4PacketImpl.h\n- PR #4021 Fix compile with `-DPOCO_NET_NO_IPv6`\n- PR #3885 Use map from key to count instead of multiset\n- PR #3864 Remove unnecessary dup. of std::string in NumberParser::tryParseFloat\n- PR #3802 ODBC: Fix DataFormatException getting Time value from SQL Server\n- PR #3797 HTTPServer Applications Slow to Terminate #3796\n- PR #3787 fix(Crypto) Update method to extract friendlyName from certificate\n- PR #3705 Fix/posix sleep\n- PR #3664 set thread name\n- PR #3657 Add lower case format for `NumberFormatter`\n- PR #4144 add visitor pattern implementation for Poco::Dynamic::Var\n- PR #3476 add separate accessors and mutators for connect, send and receive tim…\n\nBug fixes and Improvements\n\n- GH #4328 Environment::nodeId Should Throw SystemException When Node ID is 0\n- GH #4311 Canceled `Task` shouldn't start running\n- GH #4310 `ActiveThread` data race\n- GH #4309 `ArchiveStrategy` data race\n- GH #4308 `DirectoryWatcher` data race\n- GH #4307 `NotificationCenter` data race\n- GH #4274 Remove VS 140, 150 Projects\n- GH #4259 Progen uses wrong AdditionalOptions separator\n- GH #4252 SecureSocketImpl::currentSession() always return null\n- GH #4244 Poco::Data::PostgreSQL::SessionHandle::setAutoCommit(bool) should not call commit() or startTransaction()\n- GH #4241 Poco::FileInputStream broken in 1.12.5 and 1.11.8.\n- GH #4231 Poco::Data::PostgreSQL::SessionHandle::disconnect() leaks memory for failed connections\n- GH #4207 VS170 binary names mismatch on ARM\n- GH #4187 Sync 1.11.-1.12-devel(1.13)\n- GH #4109 Skip reset for null Binder\n- GH #4106 ODBC Binder does not retrieve proper type precision\n- GH #4093 PostgreSQL get sqlcode\n- GH #4028 Incompatibility with gcc 13.1\n- GH #3923 UDP Multicast : `leaveGroup()` method always throw an exception\n- GH #3835 DynamicStruct::toString not wrapping empty strings\n- GH #3823 Possibility of memory leak in Windows Environment nodeIdImpl?\n- GH #3812 Poco::Data::Session::reconnect throw Connection in use\n- GH #3704 TaskManager waits for all threads in the ThreadPool\n- GH #3557 HTTPSClientSession read infinite loop on IOS\n- GH #3484 Poco::MongoDB support for MongoDB 5.0?\n- GH #3331 Apple Silicon ARM64 :  Invalid access: Can not convert empty value.\n- GH #3277 Use sendfile system call on Linux in HTTPServerResponseImpl::sendFile\n- GH #3165 Can't reuse Poco::Data::Statement with a new set of bindings\n- GH #2978 waitForTermination is unreliable on Linux.\n- GH #2976 SharedMemoryImpl x64 size error\n- GH #2965 Net fails to build with MinGW 9.20\n- GH #2634 Data race in Poco::Net::HTTPServerConnection::onServerStopped\n- GH #2366 Poco::Process::launch (UNIX) - possible memory leak when launching invalid command\n- GH #2332 Optimize multi-arg logger methods to only call format() if log level allows\n- PR #4353 Fix some issues found with clang-tidy\n- PR #4345 Build.macos.openssl@1.1\n- PR #4339 Fix RemoteSyslogChannel setProperty value check\n- PR #4333 enh(NumberFormatter): Introduce backward compatible options for formatHex functions\n- PR #4321 Github Action for Android NDK\n- PR #4319 Implementation of Path::self()\n- PR #4317 enh(ci): Add ENABLE_COMPILER_WARNINGS to cmake\n- PR #4306 3102 json lowercase hex\n- PR #4275 fix(NetSSL_Win): Error during handshake: failed to read data\n- PR #4270 SplitterChannel addChannel - Prevent Duplicate Channels\n- PR #4256 Implement MySQL::SessionHandle::startTransaction as submitting the SQL statement 'BEGIN'\n- PR #4223 Virtualize ServerApplication::handlePidFile()\n- PR #4211 Improve FifoEvent, ActiveMethod, ActiveResult\n- PR #4200 fixed infinite loops\n- PR #4199 fix(Poco::Data): fixes and improvements #4198\n- PR #4190 CMake: Use CMAKE_INSTALL_* variables from GNUInstallDirs\n- PR #4156 Allow passing raw fd's into ServerSocket\n- PR #4138 add missing check when activerecord is enabled\n- PR #4137 Fix platform when building for iPhoneSimulator\n- PR #4103 Fix openssl session resumption, FTPS certificate validation vs hostname\n- PR #4099 added new memeber SqlState to PostgreSQLException and made use of it.\n- PR #4068 AutoPtr: do 'duplicate' before 'release'\n- PR #4061 Adding API XML::AbstractContainerNode::insertAfterNP()\n- PR #4025 EVPPKey constructor for modulus/exponent\n- PR #4022 Make Binding and CopyBinding specializations final\n- PR #4020 MongoDB: add missing name accessor to get database name.\n- PR #4007 add sendfile method for streamsocket\n- PR #4004 Mongodb op msg database commands fix\n- PR #3989 Fix thread compilation issues on FreeBSD\n- PR #3976 fix(devel): add missing 1.11 releases commits\n- PR #3954 Complimentary to #3918 (std::*mutex wrapper)\n- PR #3946 Add GNU Hurd support\n- PR #3939 Solaris.build fix #3843 and #3643\n- PR #3932 Cross-compiling with ming32-w64 on Linux #3815\n- PR #3929 Fix multicast leave group\n- PR #3863 testDynamicStructEmptyString always failed\n- PR #3861 Do not incur insane stack limit in Foundation-ThreadPool test.\n- PR #3860 Fix Aix Build\n- PR #3842 hasMicrosecond is undefined\n- PR #3821 chore(Net): correct spelling, remove some unused codes fix(SocketProactor): missing adding sock to read pollset fix(DialogServer): _lastCommands data race\n- PR #3810 Custom rotate, archive and purge strategies for FileChannel\n- PR #3749 buildwin.ps1 script error building the x64 version of Poco\n- PR #3502 Add ODBC DirectExec public API\n- PR #3102 Made it possible to use lowercase hex numbers, also when encoding JSON\n- PR #3009 switching iPhoneSimulator arch to 64 bit\n\n\nRelease 1.12.5p2 (2023-12-04)\n=============================\n\n- GH #4320: Integer overflow in Poco::UTF32Encoding\n\n\nRelease 1.12.5p1 (2023-11-02)\n=============================\n\n- GH #4241: Poco::FileInputStream broken in 1.12.5 and 1.11.8\n\n\nRelease 1.12.5 (2023-10-25)\n===========================\n\n- GH #4219 Make POSIX event thread safe\n- GH #4215 Remove SocketReactor dependency on Poco::Thread for sleeping\n- GH #4197 ODBC::Binder UUID new/free mismatch\n- GH #4194 PollSet filters out some events\n- GH #4189 Use after free warnings\n- GH #4180 receiveResponse() may not return response body stream\n- GH #4177 Upgrade bundled pcre2 to 10.42\n- GH #4147 missing \\r\\n when setting trailer header in chunked response\n- GH #4134 Initialisation of _socketIndex in SSLManager (OpenSSL)\n- GH #3867 Add options to disable STDIO in child process\n- GH #3832 pthread_getname_np' was not declared in this scope\n- GH #3786 FileChannel::setRotation overflow\n- GH #2776 Shutdown TLS1.3 connection\n- GH #4176 PCRE2 10.40 version has security vulnerabilities（CVE-2022-41409）, when is the plan to fix it third-party\n- GH #4150 Use Poco format instead of sprintf in Util\n- GH #4116 Logging should evaluate only if the logging level is active\n- GH #4071 PageCompiler: add referrerPolicy to page directive feature\n- GH #4057 ODBC: SQL Anywhere Support\n- GH #4031 Classes with virtual functions missing virtual destructors (compilation issues)\n- GH #4023 CPPParser: Losing data if parameter std::function<void(bool)> is used\n- GH #4014 wrong string offset in HTTPCredentials::isNTLMCredentials\n- GH #4005 On UNIX platform, Poco::Path::getExtension() returns name of the hidden file if no extension is present\n- GH #3986 Fix dead lock on Timer destructor\n- GH #3968 Poco::Net::SocketConnector constructor should take SocketAddress by const reference\n- GH #3935 The extractor in postgresql drops milliseconds\n- GH #3926 CppParser throws exception when return value is specified to be in global namespace\n- GH #3921 Deadlock in Timer when one sync and one async cancel requests are issued\n- GH #3918 Static FastMutex fails to lock when issued from another thread on linux\n- GH #3880 NetSSL_OpenSSL: Support session resumption with TLSv1.3\n- GH #3876 Replace sprintf with snprintf in Environment and NumberFormatter to avoid deprecation warnings\n- GH #3859 zlib headers not updated\n- GH #3806 HTTPClientSession::receiveResponse() gives NoMessage instead of Timeout exception for SSL connection on Windows when using OpenSSL 3.0.x\n- GH #3723 DateTimeFormatter creates invalid ISO8601 string\n- GH #3147 Reading from request stream hangs when \"Transfer-Encoding: chunked\" is used\n- GH #4218 Upgrade double-conversion to 3.3.0\n- PR #4210 Fix pthread_setname not declared\n- PR #4072 optimize checkUpperLimit and checkLowerLimit in VarHolder.h  enhancement\n- PR #4050 rename arc -> poco_arc\n- PR #4038 Fixed Poco::format specifier for error code  bug platform_specific\n- PR #4011 fix #4005 Poco::Path::getExtension()\n- PR #3999 Fix hang in destructor\n- PR #3992 Fix thread counter leak\n- PR #3987 Fix dead lock on Timer destructor\n- PR #3971 Fix error handling with OpenSSL 3.0 in SecureSocketImpl.cpp (fixes #3806)\n- PR #3943 Fix build for QNX  platform_specific\n- PR #3942 Fix data race when create POSIX thread\n- PR #3912 Fixed compile error for OpenSSL 1.0 systems (#3739)\n- PR #3883 Added system_error header to SockerProactor for std::error_code\n- PR #3855 Fix epollfd validity checks when compiling with wepoll\n- PR #3809 improve Windows OpenSSL 3.0.x error handling #3806\n- PR #3769 Fixed converting/correcting pre-gregorian dates (#3723)\n\n\nRelease 1.12.4 (2022-10-31)\n===========================\n\n- GH #3849: Upgrade bundled libexpat to 2.5.0 [fixes CVE]\n- GH #3852: SocketReactor - 100 % CPU usage on single-core system\n\n\nRelease 1.12.3 (2022-10-24)\n===========================\n\n- GH #3682: Including Any.h causes Compiler error on Visual Studio\n- GH #3683: Poco::format receives empty Vector<Any>\n- GH #3692: v1.12.0 and v1.12.1 Poco::Any compile problem\n- GH #3723: DateTimeFormatter creates invalid ISO8601 string\n- GH #3737: Poco EventImpl for Win32 breaks INFINITE wait\n- GH #3744: bindImplLOB zero size (or NULL) HY104 \"Invalid precision value\"\n- GH #3748: Poco 1.12.2 - Building DataMySQL still fails (issue #3689)\n- GH #3753: Fix optional JSON support for MySQL\n- GH #3763: Poco::Util::Application VxWorks main is incorrect\n- GH #3769: Fixed converting/correcting pre-gregorian dates (#3723).\n- GH #3795: aix system NumberFormatter.cpp build error\n- GH #3805: Upgrade expat to 2.4.9\n- GH #3814: Security Vulnerability identified in POCO version 1.12.2\n- GH #3825: VS 2022 Net project missing ARM64 config\n- GH #3834: SocketImpl::available()\n- GH #3846: Upgrade bundled zlib to 1.2.13 [fixes CVE]\n- GH #3847: Upgrade bundled SQLite to 3.39.4\n\n\nRelease 1.12.2 (2022-08-08)\n===========================\n\n- GH #3460 fix(Platform): LoongArch support\n- GH #3688 Linking Crypto-testrunner fails\n- GH #3693 VS2022 compilation issues\n- GH #3698 SIGABRT in OSSL_PROVIDER_unload with static OpenSSL3\n- GH #3699 POSIX Event state need not be atomic\n- GH #3700 Release script must include build_vs170.cmd\n- GH #3708 wakeup fd is never read\n- GH #3711 lowercase winsock2 and iphlpapi to allow cross compile\n- GH #3716 Compiling with clang_cl_x64_x64 on Visual Studio 2022 failed\n- GH #3717 Only support extracting JSON fields when the SDK supports it\n- GH #3719 PocoNet Project File does not support Visual Studio 2022\n- GH #3720 Update max MSVC version information\n- GH #3721 fails to build with Visual Studio projects\n- GH #3722 Added missing Crypto Header to ProGen source\n- GH #3724 Crypto: Progen again to add new files and bring back ARM64 configuration\n- GH #3727 Add how to install using Conan section on README\n- GH #3733 Poco::format and C++20\n- GH #3734 g++ C++20 warnings\n\n\nRelease 1.12.1 (2022-07-18)\n===========================\n\n- GH #3677 PocoFoundationConfig.cmake should now check for PCRE2\n- GH #3686 SIGSEGV in OSSL_PROVIDER_unload with static OpenSSL3\n\n\nRelease 1.12.0 (2022-07-08)\n===========================\n\n- This release introduces Prometheus library\n- Upgraded bundled PCRE to PCRE2 10.40\n- Small object optimization for Any and Dynamic::Var (compile-time option, enabled by default)\n- All swap operations are noexcept now\n- PollSet::add() is mode-cumulative now\n- UDPServer now requires explicit starting\n- Move semantics for sockets and SocketAddress (compile-time option, disabled by default)\n\n- GH #709: Poco::Dynamic::Var memory leak\n- GH #1039 Race condition in AsyncChannel close/log\n- GH #1459 Fix Socket::select() epoll and poll implementations\n- GH #1687 SQLite Notifier has no table information\n- GH #1884 TCPServerDispatcher::run() issue\n- GH #2084 LogFile_STD (LogFileImpl) fails to recover from getting out of space\n- GH #2085 Crash due to race condition in TCPServerDispatcher\n- GH #2091 Integrate windows poll\n- GH #2222 Warning when compiling my that's use VarHolder\n- GH #2270 HTTPClientSession not supporting binding source address for proxy connect\n- GH #2271 HTTPClientSession source IP address\n- GH #2285 SQLite::Connector::open() crashes on db file with non existing directory\n- GH #2287 Poco::Data::Statement becomes unusable after exception\n- GH #2352 Allow setting the socket of SecureSocketImpl to no-blocking\n- GH #2386 As of C++11, std::swap is noexcept\n- GH #2401 Net::MailMessage::read hangs on missing final multipart boundary\n- GH #2457 Poco::Redis after executing \"auth\" command next command always return \"OK\"\n- GH #2465 Operating system specific thread ID is not available any more in Logger/Formatter\n- GH #2470 Can't use Poco::MongoDB::Cursor on aggregation cursor\n- GH #2511 Negative precision in NumberFormatter::format()\n- GH #2513 Poco::Net::SocketConnector unregistering\n- GH #2516 SHA3Engine hard to use with HMACEngine duplicate enhancement\n- GH #2521 MySQL Extractor null value extraction\n- GH #2538 Poco::Data::Session::connector() returns empty string for MySQL session\n- GH #2569 MySQL timestamp\n- GH #2576 Add std::chrono support to Timespan\n- GH #2590 Zip 64-bit extensions not set\n- GH #2614 NTPClient ignores second fractions enhancement\n- GH #2619 Decoding URI query parameters incompatible with Spring 5\n- GH #2638 Upgrade Windows SDK Used for Building Poco\n- GH #2688 Static code analyzer warnings\n- GH #2691 MinGW: fatal error: kernelspecs.h: No such file\n- GH #2706 [windows bug] pollset WSAPoll with non blocking socket will not report error\n- GH #2755 MySQL LONGTEXT\n- GH #2821 Poco::Buffer: full on creation\n- GH #2849 setPadding does nothing when OpenSSL 1.1.x is used\n- GH #2864 SessionImpl begin\n- GH #2940 Add vcpkg installation instructions\n- GH #2943 Avoid clang 10 -Wimplicit-int-float-conversion warning/error when converting int into float\n- GH #2959 Fix percent-encoded fragment modification in Poco::URI\n- GH #2980 Memory leaks in Poco::Any\n- GH #2986 Once exhausted, Poco::ObjectPool does not lend out returned objects\n- GH #3016 MongoDB::Array interface improvements\n- GH #3026 HTTPDigestCredentials added support for RFC7616 algorithms\n- GH #3039 Poco errors with _DEBUG and NDEBUG\n- GH #3052 Fix constness of URI::getPathSegments\n- GH #3088 Fix error in find_package example\n- GH #3056 Inconsistent behavior ConsoleChannel vs. WindowsConsoleChannel\n- GH #3062 Makefile: space(s) following target name will break build (during link)\n- GH #3073 libPocoCrypto.so: undefined reference to `pthread_atfork' when linking statically with OpenSSL 1.1\n- GH #3104 Publicly expose Poco::Message parameters\n- GH #3105 CMake: use GNUInstallDirs\n- GH #3175 SharedLibrary::isLoaded() not thread safe\n- GH #3195 MinGW also defines __GNUC__\n- GH #3240 Task::postNotification possible leak\n- GH #3241 Poco::Data::SessionPool change connection timeout\n- GH #3251 JSON Serializing NAN\n- GH #3253 Arbitrary indent of 2 applied to JSON string objects Var conversion\n- GH #3261 Upgrade to PCRE2 latest version\n- GH #3283 DatagramSocket does not allow IPV6_V6ONLY\n- GH #3296 Add move semantics to Net (sockets and addresses)\n- GH #3297 Poco Foundation Fails to Compile With POCO_ENABLE_SOO Defined\n- GH #3323 Extend format patterns %T and %I to support native threads\n- GH #3342 DB into() does not compile for more than 20 members in a tuple\n- GH #3357 Add socket proactor\n- GH #3359 Make PollSet::poll() interruptible\n- GH #3371 SocketReactor::getNotifier() does not use socket.impl()\n- GH #3372 FTPClientSession::activeDataConnection 1.11.0 cannot set specific data port\n- GH #3374 No access to padding in Cipher\n- GH #3375 PollSet::SocketModeMap poll(const Poco::Timespan& timeout) hasSignaledFDs issue slow down connections\n- GH #3378 PollSet function setMode 1.11.0 cause while(1) on windows\n- GH #3380 Windows SO_REUSEADDR is neither reliable nor safe\n- GH #3384 Always set thread names on POSIX platforms\n- GH #3385 IPAddress::tryParse does not work for \"::\"\n- GH #3396 Poco::Data::ODBC - dbEncoding property not used for insert/update\n- GH #3399 IPAddress::isLoopback() returns false for IPv4 mapped in IPv6\n- GH #3404 Net: make MessageHeader limits configurable\n- GH #3415 OpenSSL 3.0 support\n- GH #3417 Calling SocketReactor's run() method in a program's main thread yields a lot of null pointer exceptions\n- GH #3421 Cannot use HMACEngine with SHA2Engine\n- GH #3452 Syslog: Include Facility to Syslog Message\n- GH #3453 added facility to SyslogChannel\n- GH #3460 LoongArch support\n- GH #3481 JSON DataType support for MySQL\n- GH #3482 Visual Studio 2022 (v170) missing from buildwin.cmd\n- GH #3486 Windows on ARM64 support\n- GH #3516 Fix OpenSSL 3.0 deprecated warnings\n- GH #3529 Added LocalConfigurationView to only search inside the viewed scope\n- GH #3543 Visual Studio Warning C4244\n- GH #3558 Race condition in SSLManager\n- GH #3561 Add envelope to crypto\n- GH #3569 Readded named substring support for regexes\n- GH #3580 Rounds very large negative numbers to the incorrect values\n- GH #3592 Add 425 / HTTP_TOO_EARLY to HTTPResponse::HTTPStatus\n- GH #3598 Socket::available does not always return correct value for UDP\n- GH #3602 Add Data::JSONRowFormatter\n- GH #3603 Update minimum GCC version information\n- GH #3611 VS2022 Arm64 projects missing or do not load\n- GH #3613 UDPHandler data race\n- GH #3620 MariaDB still uses tx_isolation for transaction isolation unlike MySQL 8+ which uses transaction_isolation\n- GH #3624 Upgrade double-conversion to v3.2.0\n- GH #3628 PollSet data race\n- GH #3629 Event data race\n- GH #3633 Redis: Support Authentication\n- GH #3635 ConfigurationView and JSON is broken for array access\n- GH #3639 Bugcheck: indicate compiler that functions will never return\n- GH #3640 fix warning C4717: 'format<vector<any>': recursive on all control paths, function will cause runtime stack overflow\n- GH #3641 FifoBuffer.advance method not throw exception when length==0\n- GH #3642 Make ParallelSocketReactor thread namable\n- GH #3651 TCPserver missing from Net/samples/CMakeLists.txt\n- GH #3652 Linking with Foundation on Android gives error\n- GH #3655 Socket::select EPOLL implementation returns socket in exceptList when empty list is given\n- GH #3658 Support for chunked transfer encoding trailer\n- GH #3661 PollSet::add()/update() semantics\n- GH #3665 MSVC does not properly recognize std version\n\n\nRelease 1.11.8p2 (2023-12-04)\n=============================\n\n- GH #4320: Integer overflow in Poco::UTF32Encoding\n\n\nRelease 1.11.8p1 (2023-11-02)\n=============================\n\n- GH #4241: Poco::FileInputStream broken in 1.12.5 and 1.11.8\n\n\nRelease 1.11.8 (2023-10-18)\n===========================\n\n- GH #1372: Possible deadlock in SessionPool\n- GH #4170: Poco::FileStream is always opened with std::ios::in | std::ios::out bug\n- GH #4169: Upgrade bundled zlib to 1.3.\n- GH #4171: Upgrade bundled sqlite to 3.43.1\n- GH #4162: [Bug] class KeylessActiveRecord is missing export macro\n- GH #4164: [Bug] SharedLibraryImpl::loadImpl uses an incorrect format specifier\n- GH #4173: AbstractConfiguration: when expanding property references, allow specifying a default value\n- GH #4174: AbstractConfiguration: support Int16/UInt16 and Int32/UInt32\n- GH #4182: Util: Make load()/save()/clear() operations on configurations thread-safe\n- GH #4184: Poco::TemporaryFile: make filenames less predictable\n- GH #4195: Poco::File::created() on macOS should use birthtime\n\n\nRelease 1.11.7 (2023-07-11)\n===========================\n\n- GH #4023: CPPParser: Losing data if parameter std::function<void(bool)> is used\n- GH #4031: Classes with virtual functions missing virtual destructors (compilation issues)\n- GH #4014: wrong string offset in HTTPCredentials::isNTLMCredentials\n- GH #4071: PageCompiler: add referrerPolicy to page directive\n- GH #4077: OpenSSL 3: Don't throw if legacy provider is not available\n- GH #4078: Upgrade bundled SQLite to 3.42\n- GH #4079: SocketConnector: constructor should take SocketAddress by const reference\n- GH #4082: Logger performance improvement with formatting\n\n\nRelease 1.11.6 (2022-12-08)\n===========================\n\n- GH #3147: Reading from request stream hangs when \"Transfer-Encoding: chunked\" is used\n- GH #3859: zlib headers not updated\n- GH #3876: Replace sprintf with snprintf in Environment and NumberFormatter to avoid deprecation warnings\n- Build system improvements for Xcode on Apple Silicon.\n- Upgrade bundled SQLite to 3.40.0\n\n\nRelease 1.11.5 (2022-10-31)\n===========================\n\n- GH #3849: Upgrade bundled libexpat to 2.5.0 [fixes CVE]\n\n\nRelease 1.11.4 (2022-10-24)\n===========================\n\n- GH #3805: Upgrade expat to 2.4.9\n- GH #3846: Upgrade bundled zlib to 1.2.13 [fixes CVE]\n- GH #3847: Upgrade bundled SQLite to 3.39.4\n\n\nRelease 1.11.3 (2022-06-12)\n===========================\n\n- GH #3567: fix(openssl-initializer): check legacy provider existence for legacy exception\n- GH #3587: MySQL UUID binding temporary string\n- GH #3632: Redis - add TLS support\n- updated a few copyright dates\n\n\nRelease 1.11.2 (2022-04-16)\n===========================\n\n- GH #2882: Handle negative DST offset\n- GH #3268: Poco redis command set have a bug when you want to set nx ex or expireTime\n- GH #3338: NamedMutex does not work on Linux distributions where fs.protected_regular=1\n- GH #3448: Basic support for OpenSSL 3.0.0\n- GH #3458: encryptString() crash on redhat/centos 8 with FIPS enabled using md5 default digest\n- GH #3465: NetSSL_Win: bad error handling when decodeMessage() fails\n- GH #3466: DefinePlatformSpecific.cmake: handle RelWithDebInfo and MinSizeRel configurations\n- GH #3470: bug in JSON ParseHandler.cpp (RFC 7159 should be valid)\n- GH #3472: Add Windows 11 detection to Environment_WIN32U\n- GH #3483: Adds Windows 11 and Server 2022 to Environment::osDisplayName()\n- GH #3485: Adds Visual Studio 2022 (v170) to buildwin.cmd\n- GH #3495: Should the Array::operator[] throw?\n- GH #3500: Sandbox all iFrames in PocoDoc\n- GH #3504: OpenSSL 3 compatibility\n- GH #3505: JSON::PrintHandler.value(bool) prints incorrect value\n- GH #3507: Reference counting for bound configuration in Util::Option is broken\n- GH #3508: #3507: Fix bound configuration reference counting in Poco::Util::Option.\n- GH #3509: fix dst and utcOffset handling for Dublin time zone\n- GH #3515: NetSSL_OpenSSL Testsuite: testInterop() and testProxy() fail due to changed certificate\n- GH #3518: Expat version check in #defines incorrect.\n- GH #3519: Add convertation to string in Redis Command#set\n- GH #3524: [linux] Why is Poco::XML linked to Poco::Zip target?\n- GH #3525: Bad management of file in case of OpenSSLException in X509Certificate::readPEM and X509Certificate::writePEM\n- GH #3538: Upgrade bundled expat to 2.4.7\n- GH #3544: Add back NIOS2 double conversion detection to fix compile errors\n- GH #3549: Test against the correct signatures in the JWT ES384 and ES512 tests\n- GH #3553: Upgrade bundled zlib to 1.2.12\n- GH #3559: Poco::Data::PostgreSQL - DateTime extraction truncates fractional seconds\n- GH #3563: Remove support for OpenSSL < 1.0\n\n\nRelease 1.11.1 (2021-11-05)\n===========================\n\n- Upgraded bundled PCRE to 8.45\n- Upgraded bundled SQLite to 3.36.0\n- GH #2823: error: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648\n- GH #2966: SocketReactor loads one core of CPU up to 100%\n- GH #3221: Crash reported on Windows in X509Certificate verification\n- GH #3330: Poco::Data::ODBC::ODBCStatementImpl causes crash\n- GH #3334: Fork error on tvOS and watchOS\n- GH #3335: XML error when build 1.11.0\n- GH #3344: [bug] MacOS bundle destination path is not set\n- GH #3345: fix cmake bundle\n- GH #3347: The definition POCO_NO_FORK_EXEC is not respected or something like this\n- GH #3353: fix fork option\n- GH #3360: Add POCO_PGSQL_{INCLUDE,LIB} variables\n- GH #3363: Fixed compilation error with MongoDB::Connection and Util::Application\n- GH #3377: Updates comments for windows\n- GH #3381: DNS::hostByAddress not thread-safe\n- GH #3397: Fix crash due to X.509 certificates with Subject Alternative Name other than DNS Host\n- GH #3400: fix std::localtime not thread safe\n- GH #3414: fix missing expat definition\n- GH #3425: Fixed suspend/resumeEvents pair in DirectoryWatcher\n\n\nRelease 1.11.0 (2021-06-28)\n===========================\n\n- This release introduces ActiveRecord, a simple and lightweight object-relational mapping\n  (ORM) framework based on the Active Record pattern and the Data library.\n- Upgraded bundled expat to 2.4.1\n- Upgraded bundled PCRE to 8.44\n- Upgraded bundled pdjson to latest master\n- Upgraded bundled SQLite to 3.35.5\n- GH #2205: Start POCO as Windows service with parameters fix #2190\n- GH #2418: SecureServerSocket doesn't work with IpV6\n- GH #2677: Fix CLOB type support in StatementImpl and RecordSet\n- GH #2746: Race in TCPServerDispatcher::stop\n- GH #2783: Invalid condition [ICMPv4PacketImpl.cpp:234]\n- GH #2825: riscv: Enable double operations when using double float abi\n- GH #2895: Settings to verify OCSP stapling response (if received any) for client connections\n- GH #2904: Support environments without hardware floating point\n- GH #2906: Support environments without hardware floating point\n- GH #2927: Fix assigned value to wrong pointer\n- GH #2928: Fix clang issue\n- GH #2929: Zip and SevenZip do not depend on Util, XML, JSON\n- GH #2932: Poco::Net::NTLMContext is missing dllexport/dllimport symbols\n- GH #2935: Configuration to receive OCSP stapling response for client connection…\n- GH #2942: Avoid clang 10 -Wimplicit-int-float-conversion warning/error when con…\n- GH #2945: Iterating over Var containing empty container throws \"Out of range\" exception\n- GH #2970: Poco::Data::TypeHandler<Poco::Nullable<T>>::prepare() must prepare with underlying type, not Poco::Data::Keywords::null\n- GH #2982: Poco::Net - return value from close needs to be checked in SocketImpl\n- GH #2984: Fixed linking with Data ODBC error on some platforms\n- GH #2989: setting priorityNames property on PatternFormatter has no effect\n- GH #2992: CryptoTransformImpl::setPadding(int padding) incorrect for OpenSSL >= 1.1\n- GH #2993: The Sec-WebSocket-Key of WebSocket is always the same one\n- GH #3019: ObjectPool wait on borrow condition fix\n- GH #3021: PatternFormatter priorityNames fix\n- GH #3022: Process::isRunning(PID pid) causes handle leak on Windows\n- GH #3023: Link to \"discussion forums\" on \"How to get help\" advice broken\n- GH #3025: PKCS12Container: fix memory leaks on exceptions (1.10.1)\n- GH #3027: PKCS12Container: fix memory leaks on exceptions (devel)\n- GH #3037: Poco::toJSON: Don't escape forward slash in JSON strings\n- GH #3041: PostgreSQL and TEXT column type\n- GH #3044: Upgrading PCRE to 8.44 is it in immediate plan?\n- GH #3045: PostgreSQL and BYTEA column type\n- GH #3057: Poco::Data::PostgreSQL::SessionImpl::connectorName() returns empty string\n- GH #3059: MessageHeader::splitParameters fails on 'httponly' cookie with 'string too long' exception\n- GH #3061: SocketImpl::bind --> bind wrong config\n- GH #3064: PostgreSQL: Extraction of 16-bit integers corrupts result\n- GH #3066: CMake warning about MYSQL casing\n- GH #3067: Fix pkg-name in find_package_handle_standard_args\n- GH #3068: Documented ENABLE_JWT option\n- GH #3074: Fix sessions may not return back to the pool\n- GH #3076: Avoid access to already freed memory in JSON code\n- GH #3078: Fix typo in the ThreadPool's docs\n- GH #3086: Use POCO_IOS_INIT_HACK for Linux in combination with libc++\n- GH #3089: HTTPSessionFactory does not support HTTPClientSession::ProxyConfig\n- GH #3090: Do not initialize value with undefined behavior\n- GH #3091: feat(SharedLibrary): add more detailed error description when LoadLib…\n- GH #3092: feat(SharedLibrary): add more detailed error description when LoadLib…\n- GH #3095: Digest proxy authentication does not work in 1.10.1\n- GH #3097: Support for building Arm64 Apple Silicon\n- GH #3099: Fixed Postgres extraction into Dynamic::Var\n- GH #3107: unused variable\n- GH #3114: Added JSON Array::empty() method\n- GH #3116: Changed EventHandlerMap key\n- GH #3130: Possible use-after-free bug on the method copyToImpl\n- GH #3133: POCO_STATIC has been deprecated\n- GH #3135: Poco::Data::SQLite::Utility::fileToMemory unsuccessful if journal exists\n- GH #3136: Fixed null character issue when parsing a JSON\n- GH #3138: Add support of arch riscv32\n- GH #3141: allow to handle hot-journal (fixes #3135)\n- GH #3151: fix(JSON::Object): crash when a key is removed from object with JSON_PRESERVE_KEY_ORDER\n- GH #3153: Poco::Data::ODBC [N]VARCHAR(MAX) wrong maxDataSize() result\n- GH #3155: Fixed typo in overridden\n- GH #3157: fix(openssl): add missing dependency to OpenSSL components\n- GH #3159: Bug in NumericString with decSep != '.'\n- GH #3163: Correct Var::parse null value\n- GH #3166: Fix PostgresSQL BLOB extractor\n- GH #3168: Reference documentation contains invalid links.\n- GH #3169: #2746: Fix race condition on TCPServerDispatcher stop\n- GH #3182: Poco::Process:launch on MacOS BigSur\n- GH #3183: fix setPadding\n- GH #3190: [NetSSL_Win]: SSL-connection fails with \"Host name verification failed error\" (Regression bug)\n- GH #3191: Fixing a bug in the NetSSL_Win module (Host name verification failed error)\n- GH #3193: ServerApplication::registerService() unquoted path security vulnerability\n- GH #3196: std::forward for Poco::Optional ctor with rvalue\n- GH #3202: JWT: ESxxx signature must include padding for ECDSA R and S values\n- GH #3204: CryptoTransformImpl::setPadding wrong call\n- GH #3215: XML parser returns item from different element in a array\n- GH #3217: CMake: warning message with -DPOCO_STATIC confusing\n- GH #3219: SMTPClientSession: invalid SMTP command if empty recipients list in MailMessage\n- GH #3223: Compilation failure since OpenSSL (alpha 13)\n- GH #3224: Remove SSL23 support from Poco/Crypto\n- GH #3229: Upgrade bundled expat to 2.3.0\n- GH #3230: ECDSADigestEngine: include missing header\n- GH #3233: Feat/hash range\n- GH #3237: An error in the documentation for Poco/JSON/Parser.h\n- GH #3239: XML parser returns item from different element in a array #3215\n- GH #3242: RemoteSyslogListener: add reusePort option\n- GH #3245: find_package(Poco REQUIRED COMPONENTS ... NetSSL) requires an aditional find_package(OpenSSL) since poco-10\n- GH #3248: PollSet not working as intended on Windows\n- GH #3249: PollSet - poll() timeout not properly used\n- GH #3250: fix(PollSet): #3248 #3249\n- GH #3260: Memory leak in EVPPKey::loadKey used with files & wrong password\n- GH #3266: Order of Util::Application::uninitialize() is not in reverse as documented\n- GH #3269: Poco::Net::Context initialization with empty certificateFile\n- GH #3274: Fix localtime_r for VxWorks 6.9 and later\n- GH #3278: Fixing no hardware floating point support - Part II\n- GH #3279: Update bundled expat to 2.4.0\n- GH #3282: Update constant in setContentType documentation\n- GH #3284: JSON Fuzzing: Undefined-shift in poco_double_conversion::DiyFpStrtod\n- GH #3285: JSON Fuzzing: Stack-overflow in Poco::JSON::ParserImpl::handle\n- GH #3291: JSON Fuzzing: Stack-overflow with empty stacktrace\n- GH #3292: JSON Fuzzing: Stack-overflow in Poco::JSON::Array::~Array\n- GH #3295: A variation on Issue 949 comes back to life?\n- GH #3299: NetSSL: Allow per-Context InvalidCertificateHandler\n- GH #3301: Unterminated string possible  in NetworkInterfaceImpl::setPhyParams()\n- GH #3302: MSVC: Poco hides warnings (C4996) for the C++14 attribute [[deprecated]]\n- GH #3303: DNS HostEntry returns multiple entries\n- GH #3307: Poco::Crypto::X509Certificate: obtain certificate fingerprint\n- GH #3309: JSON parser copies entire JSON document to memory when parsing from stream.\n- GH #3310: Upgrade bundled SQLite to 3.35.5.\n- GH #3313: Upgrade bundled double-conversion\n- GH #3314: NetSSL_OpenSSL: any.pem certificate error: ca md too weak\n- GH #3315: Unintended sign/type conversion out of RecordSet\n- GH #3317: Data::MySQL MySQL headers and library search paths\n- GH #3318: Data: Support Poco::UUID for data binding\n- GH #3321: Feat/data db encoding\n- GH #3322: why is  useless MyStruct present in Thread_posix.cpp :: ThreadImpl::setPriorityImpl (easy to fix I guess)\n- GH #3326: [asan] Undefined behavior in ICMPv4PacketImpl.cpp\n\n\nRelease 1.10.1 (2020-02-10)\n===========================\n\n- Upgraded bundled SQLite to version 3.31.1.\n- GH #2894: Poco 1.10.0 doesn't build with cmake & POCO_UNBUNDLED\n- GH #2898: poco 1.10/ NetSSL / openssl < 1.1 : default server usage changed (compare to 1.9.4)\n- GH #2834: Wrong cancelation of the fix: incorrect type of store name parameter in\n  CertOpenStore API call into NetSSL_Win. Release 1.10.0\n- GH #2791: allow pre-allocation of the buffer in Poco::LogStreamBuf.\n- GH #2816: Modernise TLS configuration\n- GH #2818: Add getSpecifiedPort() method in Poco::URI.\n- GH #2909: Test failures on s390x architecture with 1.10.0\n- GH #2911: Poco::UTF16Encoding and Poco::UTF32Encoding byte order conversion bug\n- GH #2912: Poco::SHA2Engine computes incorrect hash on big-endian systems\n- GH #2923: cmake: Version 1.10.0 not parsed correctly from VERSION file\n- GH #2908: [Windows] Process arguments quoting is broken.\n- GH #2894: Poco 1.10.0 doesn't build with cmake & POCO_UNBUNDLED\n- GH #2920: Close Service Handle after DeleteService Function call\n- GH #2919: Fixed Crash in WinService::setFailureActions\n- GH #2922: 1.10 cmake build fails on FreeBSD 11.2 Release\n- MySQL: resetting the session when putting it back into a SessionPool is now optional\n  (and disabled by default) due to a bug in MySQL messing up the character encoding when doing so.\n- Poco::AutoPtr and Poco::SharedPtr now support comparison with nullptr.\n\n\nRelease 1.10.0 (2020-01-27)\n===========================\n\n- This release now requires a C++14 compiler (GCC 5, Clang 3.4, Visual C++ 2015).\n- Visual Studio project and solution files for versions prior to 2015 have\n  been removed. Furthermore, the separate projects and solutions for 64-bit builds\n  have been removed and configurations have been merged in a single project file.\n- POCO's fixed-size integer types are now based on <cstdint> types. This changes\n  the definition of Poco::Int64 and Poco::UInt64 on some platforms.\n- Many methods exposing raw pointers have been changed to use smart pointers\n  (usually Poco::SharedPtr or Poco::AutoPtr) instead. This may break some existing\n  code. Specifically, the Logging framework in the Foundation library and the\n  Configuration framework in the Util library have been changed.\n- New JWT library for dealing with JSON Web Tokens.\n- Upgrade bundled SQLite to version 3.31.0.\n- The NetSSL_OpenSSL library supports TLS 1.3 with OpenSSL 1.1.1 or later.\n- The NetSSL_Win library supports TLS 1.3 if it's supported by the underlying SChannel\n  implementation.\n- Added support for NTLM authentication in the Net library.\n- NetSSL_OpenSSL now has a Poco::Net::FTPSClientSession and Poco::Net::FTPSStreamOpener\n  class for connecting to FTP servers over TLS.\n- Fixed a potential crash in Poco::Net::NetworkInterface on Linux and macOS due to\n  an invalid cast when obtaining the MAC address of an interface.\n- GH #2624: Poco::FileChannel/Poco:LogFileImpl::writeImpl() on Windows should translate \\n to \\r\\n.\n- GH #2869: X509Certificate does not render UTF-8 characters in subjectName\n- GH #2863: NetworkInterface::map can fail to reveal some interfaces if an earlier one can not be handled\n- GH #2807: Poco::Data::ODBC Binding of SQL Decimal Type\n- GH #2812: String trimInPlace crashes with 0 size on Visual Studio Express 2017\n- GH #2830: Fix wrong buffer size in client handshake when re-using a SecureSocket [NetSSL_Win]\n- GH #2809: Allow to filter long tests using a command line argument\n- GH #2853: Poco::Process::launch process environment unicode support is broken on Windows\n- GH #2843: Poco::Net::MediaType::parse() does not split parameters\n- GH #2772: On iOS real device (not simulator) the home directory is not usable\n- GH #2689: Added tryWait() into Process and ProcessHandle. Handle kill()-ed UNIX process exit codes.\n- GH #2866: unescape Backslash char in UTF8 unescape method\n- GH #2879: Add support for SameSite attribute in HTTPCookie\n- GH #2824: Poco::Environment missing UTF8/wstring support on Windows\n- GH #2295: setEscapeUnicode() functions in JSON Array and Object classes ignore their boolean parameter\n- GH #2306: Why does Poco explicitly define _WIN32_WINNT?\n- GH #2802: Deprecated warning when building POCO with OpenSSL in submodule + cmake\n- GH #2884: Is it a description error about setReceiveTimeout()?\n- GH #2780: Allow Poco::Net::Context::usePrivateKey to accept ECKey and/or general EVPPKey\n- GH #2747: NetSSL_Win: Context constructor usage argument should specify minimum supported SSL/TLS version\n- GH #2745: Small problem in the code\n- GH #2743: X509Certificate validFrom expiresOn Date parsing\n- GH #2744: Poco::Mysql does not build with MySQL 8.0+\n- GH #2686: Uploads larger than 2GB fail\n- GH #2217: UUIDGenerator should allow random seed\n- GH #1609: Improve XDG Base Directory Specification implementation\n- GH #561: Support for XDG Base Directory Specification\n- GH #2881: Add an option to force the use of PollingDirectoryWatcherStrategy\n- GH #2584: Adding standard macOS legacy encodings\n- GH #2885: fix Dynamic::Var parse string issue\n- GH #2616: Restore pre-1.8.0 behaviour of Poco::Net::ServerSocket::bind.\n- GH #2641: Implement DataURIStream for extracting data from data URIs.\n- GH #2842: File fail on overwrite\n- GH #2840: Deleting Registry Keys on the WOW6432Node is not possible on 64Bit Applications\n- GH #2841: Service manager improvments\n- GH #2827: X509Certificate: Get rid of deprecated OpenSSL 1.1 APIs\n- GH #2826: CipherImpl: Fix small error with OpenSSL 1.1\n- GH #2775: Fix issue in NetSSL_Win. Windows Server 2016 reboots while trying to establish an SSL connection.\n- GH #2773: Fix the issue with incorrect type of store name parameter in CertOpenStore API call into NetSSL_Win\n- GH #2766: Support qnx sdp7\n- GH #2308: SocketAcceptor::setReactor() is broken\n- GH #2250: Poco::strToInt<> fails for values right above the type's boundary / limit\n- GH #2249: Poco::JSON::Object::set() should return reference to this to allow chaining.\n- GH #2275: SQLite mismatch open/close API calls\n- GH #1921: ICMPSocket does not check reply address\n- GH #2092: Use PollSet in SocketReactor\n- GH #2552: Poco::MongoDB test cases failed in Linux on IBM z\n- GH #2546: MySQL session state is not cleared in SessionPool\n- GH #2410: Preserve entries order in DynamicStruct\n- GH #2467: Can not open certain zip files include data descriptor\n- GH #2398: Poco 1.9.1 branch cmake build on FreeBSD 11.1 failed\n- GH #2365: add struct tm support to DateTime\n- GH #2348: NTPClient not checking reply address\n- GH #2346: lock-order-inversion in SocketReactor\n- GH #2330: add socket gather/scatter capabilities\n- GH #2343: UDPServer and client\n- GH #2329: add PMTU discovery\n- GH #2345: SocketNotifier not thread-safe\n- GH #2323: WebSocketTest.cpp faults reported by valgrind\n- GH #1160: Poco::Net::NetException \"SSL Exception: error:1409F07F:SSL routines:ssl3_write_pending:bad write retry\"\n- GH #2547: Reset connection when a session is returned to the SessionPool\n- GH #2451: http client timeout on Windows 7 and Server 2008 R2\n- GH #2417: Added missing IPv6 methods to SecureSocketImpl\n- GH #2408: add ordered containers\n- GH #2042: Android abstract namespace local socket address\n- GH #2088: Fix race condition in TCPServerDispatcher.cpp\n- GH #2892: SocketImpl::bind --> bind wrong config\n\n\nRelease 1.9.4 (2019-09-18)\n==========================\n\n- fixed GH #2784: Upgrade bundled expat XML parser library to release 2.2.8,\n  which fixes CVE-2019-15903.\n\n\nRelease 1.9.3 (2019-08-20)\n==========================\n\n- fixed GH #2603: Remove incorrect upper size limits for SSL certificates in NetSSL_Win\n- fixed GH #2661: Poco::Zip::ZipArchive cannot load new tomcat.zip file (additional fix)\n- fixed GH #2742: Support of vs150 & vs160 with the official Microsoft localization executable,\n  vswhere.exe, installed by MSVC starting from VS2017\n- Data/ODBC: make binding of std::string configurable (SQL_LONGVARCHAR - default or SQL_VARCHAR)\n  through a global setting (Poco::Data::ODBC::Connector::bindStringToLongVarChar()).\n- added Poco::SharedLibrary::setSearchPath() (currently implemented on Windows only)\n- Windows required minimum version is now Windows XP SP2\n- upgraded bundled SQLite to 3.29.0\n- CppParser now supports type aliases defined with using keyword.\n- PageCompiler: added support for adding Content-Security-Policy and Cache-Control headers.\n\n\nRelease 1.9.2 (2019-07-02)\n==========================\n\n- fixed GH #2736: Error using CMake gui - latest version\n- fixed GH #2737: Bundles vulnerable copy of Expat — please upgrade to Expat 2.2.7\n- fixed GH #2738: Poco::AccessExpireStrategy::onGet() must not extend expiration time after expiration\n\n\nRelease 1.9.1 (2019-06-24)\n==========================\n\n- Added support for building with different OpenSSL distributions on Windows.\n  See the POCO_EXTERNAL_OPENSSL macro defined in Foundation/include/Poco/Config.h\n  for options.\n- Added Poco::Net::HTTPClientSession::flushRequest()\n- Added Poco::Net::WebSocket::setMaxPayloadSize() and Poco::Net::WebSocket::getMaxPayloadSize()\n  to specify a maximum acceptable payload size for Poco::Net::WebSocket::receiveFrame().\n- Poco::Net::WebSocket: don't attempt to send empty credentials in response to 401 response.\n- Redis: added support for additional commands (exists, expire, ping, multi, exec, discard)\n- Redis: added Poco::Redis::Client::isConnected()\n- Upgraded bundled PCRE to version 8.43\n- Upgraded bundled SQLite to version 3.28.0\n- Added project/solution files for Visual Studio 2019\n- Fixed Visual Studio project files (version information from DLLVersion.rc not included in DLLs)\n- Include version resource in DLLs built with CMake\n- Added HTTP*Credentials::empty() and HTTPCredentials::clear()\n- fixed GH #2220: Encoding/DoubleByteEncoding.cpp fails to compile with VS2008 and _DEBUG\n- fixed GH #2243: DLLVersion.rc is excluded from build, missing detail information in properties of *.dll\n- fixed GH #2277: SQLite null pointer dereference occurs when exception is being thrown\n- fixed GH #2313: PollSet behaves differently on windows\n- fixed GH #2316: cmake can't find MySQL and ODBC libraries\n- fixed GH #2336: Omit ContentLength in WebSocket accept response\n- fixed GH #2358: Don't include <openssl/fips.h> for later OpenSSL\n- fixed GH #2364: Stringify escapes every unicode symbol when object contain an array\n- fixed GH #2380: Calling Poco::Net::X509Certificate::addChainCertificate() leads to double free.\n- fixed GH #2492: Net::Socket::address() crash on Android\n- fixed GH #2549: Fix keepAlive in http client session\n- fixed GH #2565: HTMLForm: optional enforcement of Content-Length instead of Chunked Transfer-Encoding\n- fixed GH #2570: DialogSocket: receiveStatusMessage() - line length limit applies to entire multi-line message\n- fixed GH #2583: Crypto library does not build with OpenSSL 1.0.0\n- fixed GH #2655: MongoDB Binary element to string - bug\n- fixed GH #2661: Poco::Zip::ZipArchive cannot load new tomcat.zip file\n- fixed GH #2700: Invalid read of memory in Poco::Environment::set which may cause crashes.\n- fixed GH #2712: File_WIN32.cpp(168): error C2065: \"_upath\":Undeclared identifier\n- fixed GH #2723: Access violation when trying to decompress .zip file with unsupported compression method.\n\n\nRelease 1.9.0 (2018-03-07)\n==========================\n\n- Added additional text encodings, available in the new PocoEncodings library (GH #2165)\n- Added Punycode support for resolving Internationalized Domain Names to Poco::Net::DNS (GH #2164)\n- Added XDG Base Directory Specification support in Poco::Path, Poco::Util::SystemConfiguration\n  and Poco::Util::Application (GH #1609, GH #561, GH #1609)\n- Added support for GCM ciphers in Crypto library (GH #2129)\n- Poco::Net::RemoteSyslogChannel and Poco::Net::RemoteSyslogListener now have basic\n  support for RFC 5424 structured data (GH #2173)\n- Poco::File now has methods for obtaining partition space (GH #1545)\n- Added Poco::Net::Context::addCertificateAuthority() (GH #2197)\n- Added Poco::AutoPtr::reset() and Poco::SharedPtr::reset() to improve compatibility\n  with std::shared_ptr() (GH #2172)\n- fixed GH #703: Poco::Data::SQLite data types (INTEGER is now mapped to Int64)\n- fixed GH #1426: inttypes.h is available on sun solaris\n- fixed GH #1912: Run ping with custom data size #1912\n- fixed GH #2177: Run ping with custom timeout instead of the default\n- fixed GH #2058 and GH #2095: Synchronization issue/deadlock in Poco::Util::Timer at destruction\n- fixed GH #2089: Allow hyphen in HTTP authentication scheme names\n- fixed GH #2106: Undefined behavior in Delegate::equals()\n- fixed GH #2108: POCO SQLite Data Connector hangs for 20 secs waiting for thread timeouts on Windows\n- fixed GH #2142: JSON::Object preserveOrder keys not synced on assignment\n- fixed GH #2199 and GH #2188: Illegal header in zip file exception/assertion failure during JAR file decompression\n- fixed GH #2203: Use MAX_ADDRESS_LENGTH to determine buffer size\n\nRelease 1.8.1 (2018-01-09)\n==========================\n\n- Added Poco::File::linkTo()\n- fixed GH #2044: Poco::Net::NetworkInterface::list does not list inactive interfaces\n  even when explicitly being asked for it.\n- fixed GH #2042: Android abstract namespace local socket address\n- fixed GH #2038: Poco::Net::MultipartWriter::createBoundary() always returns the same string.\n- fixed GH #2020: SQLite not handling parameter count mismatch correctly.\n- fixed GH #2012: Data/SQLite: Exception messages contain duplicate text\n- fixed GH #2005: Upgraded bundled PCRE to 8.41\n- fixed GH #2000: Fix building XMLStreamParser with unbundled expat\n- fixed GH #1603: fix MinGW 4.8.2 Compilation\n- fixed GH #1991: Support building poco 1.8.0 as cmake sub-project\n- fixed GH #2080: Bugs in Poco::Net::Socket::select when POCO_HAVE_FD_POLL is defined\n\n\nRelease 1.8.0.1 (2017-11-11)\n============================\n\n- Reverted change for GH #1828; DeflatingStreamBuf::sync() no longer flushes\n  underlying stream as this causes corruption for some Zip files.\n- PocoDoc: fix for handling compiler configuration for Gradle builds.\n\n\nRelease 1.8.0 (2017-11-10)\n==========================\n\n- Poco::Base64Encoder: add support for base64url encoding (GH #1967)\n- Add Poco::Net::PollSet class to Net library (GH #1763)\n- The Net library now supports Unix Domain Sockets, where available.\n- Added stream parser (Poco::XML::XMLStreamParser) to XML library (GH #1697)\n- Added Poco::Net::TCPServerConnectionFilter and Poco::Net::TCPServer::setConnectionFilter()\n  to support connection filtering and IP blacklisting (GH #1485)\n- Added Redis library (GH #1383)\n- Added Zip64 support to Zip library (GH #1356)\n- Upgraded bundled SQLite to 3.21.0\n- Removed OpenVMS support (GH #1988)\n- fixed GH #271: NamedMutex_UNIX.cpp must remove semid\n- fixed GH #739: Add WebSocket::receiveFrame() that appends to a Poco::Buffer<char>\n- fixed GH #749: NTP Packet impl not according to RFC958\n- fixed GH #896: Sample \"TwitterClient\" of NetSSL_OpenSSL can't be build\n- fixed GH #1172: Poco::Data default storage should be std::vector\n- fixed GH #1337: Poco::HTMLForm throws exception HTMLFormException(\"Form must be prepared\")\n  even after form is prepared.\n- fixed GH #1373: SessionImpl::close() does not check return code of close handle specific function\n- fixed GH #1425: Workaround bug in SolarisStudio 12.4 on RVO-ed objects.\n- fixed GH #1614: Problematic license for JSON component: the previously used JSON.org parser\n  has been replaced with pdjson\n- fixed GH #1659: wrong field size calculation in ODBC code\n- fixed GH #1683: Poco::Data ODBC impl doesn't bind to unsigned numeric types properly\n- fixed GH #1705: MongoDB: support URI in Connection\n- fixed GH #1708: \"SocketReactor::addEventHandler\" and \"SocketReactor::removeEventHandler\"\n  must protect the access to \"NotifierPtr pNotifier\"\n- fixed GH #1729: getConnectionTimeout of SQLite DB wrapper returns wrong value\n  (in milliseconds, should be in seconds)\n- fixed GH #1739: OpenSSLInitializer isn't threadsafe\n- fixed GH #1750: double_conversion in NumericString is in conflict with Qt5 Core\n- fixed GH #1804 and GH #1805: Integer Overflow or Wraparound\n- fixed GH #1828: DeflatingStreamBuf::sync() should also flush underlying stream.\n- fixed GH #1880: FTPClientSession::close() error\n- fixed GH #1897: DateTime wrong binding/extraction for MySQL database\n- fixed GH #1905: Compiling Foundation library with POCO_NO_FPENVIRONMENT in Config.h fails\n- fixed GH #1906: Race condition in ThreadPool\n- fixed GH #1913: Message Doesn't Support 64-bit Thread IDs\n- fixed GH #1921: ICMPSocket does not check reply address\n- fixed GH #1926: Exception when using SortedDirectoryIterator\n- fixed GH #1934: File::setExecutable() on POSIX should set executable bit for group and\n  other if corresponding readable bit is set\n- fixed GH #1950: Net Exception: Address family not supported with clang\n- fixed GH #1964: Buffer<> swap miss ownMem\n\n\nRelease 1.7.9p2 (2017-11-06)\n============================\n\n- fixed GH #1628: Export Poco::Zip::ZipUtil class\n\n\nRelease 1.7.9p1 (2017-11-02)\n============================\n\n- fixed GH #1968: Zip Decompress Parent Path Injection\n\n\nRelease 1.7.9 (2017-09-11)\n==========================\n\n- fixed GH #1813: xmlparse.cpp doesn't compile in WinCE (poco 1.7.8p3)\n- fixed GH #1826: XPath query error\n- fixed GH #1834: Visual Studio 2008 cannot find stdint.h\n- fixed GH #1842: Upgrade bundled expat to 2.2.3\n- fixed GH #1843: Use random salt for Poco::XML::NamePool\n- fixed GH #1865: AbstractEvent::hasDelegates() is not thread-safe\n- improved/fixed QNX support\n- Poco::Util::LayeredConfiguration: added support for labelling configurations and\n  finding them by their label\n- upgraded bundled SQLite to 3.20.1\n- PageCompiler: support <%@ include file=\"<path>\" %> syntax for includes, in addition\n  to <%@ include page=\"<path>\" %>\n- PageCompiler: optimize generated request handler code by removing useless\n  statements, e.g. writing empty strings.\n- added POCO_DEPRECATED macro which will be used in the future to deprecate\n  classes and methods.\n- Poco::NamedMutex and Poco::NamedEvent (System V Semaphores implementation): files are\n  now opened with O_RDONLY | O_CREAT instead of O_WRONLY | O_CREAT, allowing sharing\n  between different users. Furthermore, ftok() is called with 'p' as project ID\n  argument.\n\n\nRelease 1.7.8p3 (2017-06-22)\n============================\n\n- fixed GH #1760: Upgrade bundled expat to 2.2.1 which fixes some vulnerabilities:\n  http://seclists.org/oss-sec/2017/q2/499\n\n\nRelease 1.7.8p2 (2017-04-18)\n============================\n\n- fixed GH #1655: CipherImpl memory leak with OpenSSL 1.1\n\n\nRelease 1.7.8 (2017-02-21)\n==========================\n\n- fixed GH #1212: Lost WebSocket Frames after Client Websocket Handshake is complete\n- fixed GH #1260: URI encoding\n- fixed GH #1501: Alpine 3.4 trouble with Foundation/src/Error.cpp\n- fixed GH #1523: Long path names under Windows\n- fixed GH #1536: Building with OS X 10.12 SDK and 10.7 deployment target without libc++ fails\n- fixed GH #1537: Need to add multiple cflags parameters to configure\n- fixed GH #1539: Allow overriding POCO_TARGET_OSARCH for iPhoneSimulator\n- fixed GH #1546: Enable bitcode for iPhone build config\n- fixed GH #1549: Latin2Encoding and 0xFF\n- fixed GH #1551: Unable to use Poco on macOS 10.12\n- fixed GH #1552: IPv6 & operator throws an exception when scope = 0\n- fixed GH #1566: Poco/Zip issue with some CM_DEFLATE archives\n- fixed GH #1567: Poco/ZIP issue with uncompressed archives\n- fixed GH #1570: IPv6AddressImpl::toString() returns wrong output for IPv6 address \"::\"\n- fixed GH #1571: ODBC Preparator memory leak\n- fixed GH #1573: Poco::File::createDirectories() should not throw Poco::FileExistsException\n- fixed GH #1580: Unable to unzip zip file created using non-seeking stream\n- fixed GH #1581: Cannot find 'pcre.h' when using POCO_UNBUNDLED, a non-system PCRE, and CMake\n- fixed GH #1588: Poco::Net::HTTPChunkedStreamBuf::readFromDevice(): restrict maximum\n  size of chunk length\n- fixed GH #1589: Poco::Net::HTMLForm: restrict maximum field and value length\n- fixed GH #1590: Poco::Net::DialogSocket: restrict maximum line length\n- fixed GH #1591: Poco::Net::MultipartReader: restrict maximum boundary string length\n- fixed GH #1597: adding empty file to zip leads to archive that can't be unzipped by windows\n- fixed GH #1599: readFromDevice() in AutoDetectStream.cpp in Poco Zip cannot detect signature\n- fixed GH #1534: Upgraded bundled zlib to 1.2.11\n- fixed GH #1558: Upgraded bundled SQLite to 3.16.2\n- fixed GH #1586: Upgraded bundled PCRE to 8.40\n- fixed GH #1538: Upgraded bundled double-conversion to 1.1.5\n- MongoDB: added support for authentication using \"MONGODB-CR\" and \"SCRAM-SHA-1\"\n  authentication schemes.\n- MongoDB: additional documentation and fixes for style and consistency and minor\n  API improvements (e.g., Poco::MongoDB::Binary)\n  Note: some flag enumeration values have been renamed for better consistency\n  and readability; existing code using these will have to be updated.\n\n\nRelease 1.7.7 (2016-12-31)\n==========================\n\n- fixed GH #865: FileChannel compress fails leaving empty .gz files\n- fixed GH #990: Potential race condition in Poco::File on Windows\n- fixed GH #1157: Fixing a bug in the NetSSL_Win module (Host name verification failed error)\n- fixed GH #1351: Fix for android include pthread.h from /usr/include\n- fixed GH #1436: ODBC Bug: Unicode text(NVARCHAT) read from DB is truncated to half\n- fixed GH #1453: _clock_gettime Symbol not found on Mac 10.11\n- fixed GH #1460: POCO does not build with OpenSSL 1.1\n- fixed GH #1461: Poco::Data::SQLite::SQLiteStatementImpl::next() error\n- fixed GH #1462: AbstractConfiguration::getUInt does not parse hex numbers\n- fixed GH #1464: ODBCMetaColumn::init() always maps integer NUMERIC/DECIMAL to Int32\n- fixed GH #1465: Assertion violation in DateTime.cpp using ZipArchive\n- fixed GH #1472: HTTP(S)StreamFactory should send a User-Agent header.\n- fixed GH #1476: Fixed error with Poco::UTF8Encoding::isLegal()\n- fixed GH #1484: ODBC: fix uninitialized variable\n- fixed GH #1486: Support ODBC GUID data type as string\n- fixed GH #1488: Poco::ObjectPool shrinks if returned object is not valid\n- fixed GH #1515: Detection of closed websocket connection\n- fixed GH #1521: bug in JSON ParseHandler.cpp (empty keys should be valid)\n- fixed GH #1526: iOS app rejected, IPv6 not working\n- fixed GH #1532: RecordSet and RowFilter: bad use of reference counter\n\n\nRelease 1.7.6 (2016-10-18)\n==========================\n\n- fixed GH #1298: ZipFileInfo: Assertion violation when reading ods files\n- fixed GH #1315: Redefine Poco assertions for static analysis\n- fixed GH #1397: Fix issues reported by static source code analysis\n- fixed GH #1403: Android compile with poco-1.7.5 no 'pthread_condattr_setclock' error\n- fixed GH #1416: Assertion violation when unzipping\n- fixed GH #1418: Poco::Delegate assignment operator fails to compile for some specializations\n- fixed GH #1422: Can't build poco 1.7.4 or 1.7.5 on centos5 32 bit\n- fixed GH #1429: exception thrown in MongoDB when using replicaset\n- fixed GH #1431: Poco/FIFOBuffer.h copy issue\n- fixed GH #1445: Use stable_sort to preserve order of IP addresses from DNS\n- fixed GH #1456: better handle leap seconds in Poco::DateTime and Poco::LocalDateTime\n- fixed GH #1458: Probably invalid epoll_create() usage inside Poco/Socket.cpp\n- Poco::XML::NamePool: increased default size from 251 to 509. Default size can now\n  be changed by defining the POCO_XML_NAMEPOOL_DEFAULT_SIZE macro accordingly.\n- Enchancements: Poco::XML::Document and Poco::XML::DOMParser have new constructors\n  taking a NamePool size. Poco::Util::XMLConfiguration::load() also has a new overload\n  for that purpose.\n- Improved error handling in the Zip library (getting rid of some poco_assert macros\n  and did proper error handling instead).\n- Added Poco::URISyntaxException (subclass of Poco::SyntaxException), which is now\n  thrown by Poco::URI.\n- Improved error handling in Poco::URIStreamOpener::open().\n- Poco::Data::MySQL: Handle connection lost/server gone error when starting a transaction\n  and retry.\n- XMLConfiguration default (and single-argument delimiter) constructor now loads an empty\n  XML document with \"config\" root element to make the configuration usable without an\n  additional call to load() or loadEmpty().\n\n\nRelease 1.7.5 (2016-08-29)\n==========================\n\n- fixed GH #1252: Unable to compile Poco::Data for Windows Compact Embedded 2013\n- fixed GH #1344: Poco::Event::wait(timeout) should use CLOCK_MONOTONIC on Linux\n- fixed GH #1355: [JSON::Object] After copy-ctor, JSON::Object::_keys still points to\n  keys in map of copied object\n- GH #1361: Shell expansion rules say that tilde must be replaced with $HOME before\n  calling getpwuid\n- Poco::SingletonHolder: added reset() method\n- prefer clock_getttime() over gettimeofday() if available\n- Upgraded bundled SQLite to 3.14.1\n\n\nRelease 1.7.4 (2016-07-20)\n==========================\n\n- fixed GH #1300: Session constructor hangs\n- fixed GH #1303: HTTPSClientSession::sendRequest() fails if server has wildcard cert\n- fixed GH #1304: URI doesn't know \"ws:/\" or \"wss://\" schemes\n- fixed GH #1307: Upgrade bundled expat to 2.2.0\n- fixed GH #1313: XML library compilation error\n- fixed GH #1316: Empty SocketReactor never sleeps\n- Upgraded bundled SQLite to 3.13.0\n\n\nRelease 1.7.3 (2016-05-02)\n==========================\n\n- fixed GH #993: Invalid zip format when opening a docx in word\n- fixed GH #1235: Poco::Net::HTTPClientSession::sendRequest() should also handle HTTP_PATCH\n- fixed GH #1236: Remove Poco::Data::Row::checkEmpty() as it prevents Row from being used\n  with all NULL rows\n- fixed GH #1239: Poco::Zip::Compress with non-seekable stream fails for CM_STORE\n- fixed GH #1242: Poco::Data::RowFormatter generate exception if the first column of first\n  row is null\n- fixed GH #1253: ListMap does not maintain insertion order if key already exists\n- Upgraded bundled SQLite to 3.12.2\n\n\nRelease 1.7.2 (2016-03-21)\n==========================\n\n- fixed GH #1197: Upgrade bundled expat to 2.1.1\n  Expat 2.1.1 fixes a CVE: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-1283\n- fixed GH #1204: getdtablesize has been removed on Android 21\n- fixed GH #1203: Poco::Data::RecordSet should be reusable\n- fixed GH #1198: Upgrade bundled SQLite to 3.12.1\n\n\nRelease 1.7.1 (2016-03-14)\n==========================\n\n- fixed GH #1187: Data/MySQL: Seeing frequent \"MySQL server has gone away\" errors\n- fixed GH #1184: Attempting to connect via a proxy throws a DNS error \"Host not found\"\n- fixed GH #1180: Possible deadlock when TaskManager::count() is called in onFinished\n- NetSSL_OpenSSL: use TLS_*_method() instead of deprecated SSLv23_*_method()\n  if OpenSSL version is >= 1.1; initialize default/fallback client context to support\n  all TLS protocols, not just TLSv1\n\n\nRelease 1.7.0 (2016-03-07)\n==========================\n\n- POSSIBLE BREAKING CHANGE: removed automatic registration of Data connectors due to\n  issues with static initialization order.\n- NetSSL_OpenSSL: added support for ECDH and DH ciphers; added support to disable\n  specific protocols (Poco::Net::Context::disableProtocols());\n  new Poco::Net::Context constructor taking a Poco::Net::Context::Params structure that\n  allows specifying ECDH and DH parameters.\n- Poco::Net::TCPServer: add additional try ... catch block around poll() to\n  gracefully deal with errors due to high system load (e.g., out of file descriptors).\n- fixed GH #1171: Poco::Data::RecordSet: rowCount not reset after execute\n- fixed GH #1167: CMake & POCO_UNBUNDLED: expat sources are compiled in libPocoXML\n- fixed GH #1160: Poco::Net::NetException\n  \"SSL Exception: error:1409F07F:SSL routines:ssl3_write_pending:bad write retry\"\n- fixed GH #1152: Wrong TaskProgressNotification description\n- fixed GH #1141: Poco::StringTokenizer::TOK_TRIM changes behavior between 1.4 and 1.6\n- fixed GH #1137: Missing 'longint' type in SQLite\n- fixed GH #1135: Different package on github and official web site\n- fixed GH #1030: tvOS / WatchOS bitcode enabled for simulators\n- fixed GH #1114: World-write permissions on files created by daemon\n- fixed GH #1087: prevent line breaks in base64-encoded creds\n- fixed GH #1026: Fixes for producing the poco-1.6.2 release on a Cygwin x86 platform\n- fixed GH #1022: Abbreviation in setThreadName can happen even if thread name is not too long\n- fixed GH #1002: ActiveDispatcher saves reference to event context after event was\n  performed until it gets new event\n- fixed GH #973: overwrite existing files on windows when moving files\n- fixed GH #969: Poco::File::renameTo() behaviour differs on windows and linux\n- fixed GH #967: Missing data types in SQLite\n- fixed GH #966: Possible crash when processing a corrupted Zip file\n- fixed GH #958: Bug while reading X509Certificate subjectName\n- fixed GH #937: Missing build_vs140.cmd\n- fixed GH #933: Change in JSON::Object::set(key,value) behavior in 1.6.1\n- fixed GH #931: make strToInt() more strict in what it accepts\n- fixed GH #921: `BasicUnbufferedStreamBuf` needs to be marked for import/export\n- fixed GH #848: MailMessage::_encoding is not set when retrieving plain/text message\n- fixed GH #767: Inconsistency in getPath & getPathAndQuery returns\n- fixed GH #724: Poco 1.6.0 is not compiled with openssl 1.0.0\n- fixed GH #713: Improved support for producing Canonical XML in XMLWriter\n- fixed GH #696: bug in parsing name of attachment poco c++ 1.6.0\n- fixed GH #335: Compress with nonseekable\n- upgraded bundled SQLite to 3.11.0\n- added Poco::Crypto::X509Certificate::equals() to compare two certificates\n- support for detecting Win8/Win10 in Poco::Environment\n- Poco::Net::HTTPServerRequestImpl: fixed an issue with DELETE in persistent connections\n- NetSSL: added Context::preferServerCiphers()\n- NetSSL: added support for ECDH, new Context constructor\n- NetSSL: add support for disabling certain protocols\n- SMTPClientSession: added support for XOAUTH2 authentication\n- Poco::Data::SessionPool: re-added customizeSession() method from 1.4.x releases\n- improved SSLManager to automatically set-up a reasonable client Context if\n  none is configured\n- add brew OpenSSL search paths to Darwin configs\n- add HTTP/1.1 version to HTTPRequest for client WebSocket, as this is required for\n  most servers\n- remove GCC_DIAG_OFF as this caused more issues than it solved\n- respect POCO_NO_FORK_EXEC in ServerApplication (tvOS)\n- tvOS and WatchOS support\n- fix: need an implementation of available() for WebSocketImpl\n- HTTPSessionInstantiator: respect global proxy config\n- added constant for HTTP PATCH method to Poco::Net::HTTPRequest\n- NumberParser::parseHex[64](): allow 0x/0X prefix\n\n\nRelease 1.6.1 (2015-08-03)\n==========================\n\n- added project and solution files for Visual Studio 2015\n- upgraded bundled SQLite to 3.8.11.1\n- fixed GH #782: Poco::JSON::PrintHandler not working for nested arrays\n- fixed GH #819: JSON Stringifier fails with preserve insert order\n- fixed GH #878: UUID tryParse\n- fixed GH #869: FIFOBuffer::read(T*, std::size_t) documentation inaccurate\n- fixed GH #861: Var BadCastException\n- fixed GH #779: BUG in 1.6.0 Zip code\n- fixed GH #769: Poco::Var operator== throws exception\n- fixed GH #766: Poco::JSON::PrintHandler not working for objects in array\n- fixed GH #763: Unable to build static with NetSSL_OpenSSL for OS X\n- fixed GH #750: BsonWriter::write<Binary::Ptr> missing size ?\n- fixed GH #741: Timestamp anomaly in Poco::Logger on WindowsCE\n- fixed GH #735: WEC2013 build fails due to missing Poco::Path methods.\n- fixed GH #722: poco-1.6.0: Unicode Converter Test confuses string and char types\n- fixed GH #719: StreamSocket::receiveBytes and FIFOBuffer issue in 1.6\n- fixed GH #706: POCO1.6 Sample EchoServer BUG\n- fixed GH #646: Prevent possible data race in access to Timer::_periodicInerval\n- DeflatingStream: do not flush underlying stream on sync() as these can cause\n  corrupted files in Zip archives\n\n\nRelease 1.6.0 (2014-12-22)\n==========================\n\n- fixed GH #625: MongoDB ensureIndex double insert?\n- fixed GH #622: Crypto: RSATest::testSign() should verify with public key only\n- fixed GH #620: Data documentation sample code outdated\n- fixed GH #618: OS X 10.10 defines PAGE_SIZE macro, conflicts with PAGE_SIZE in Thread_POSIX.cpp\n- fixed GH #616: Visual Studio warning C4244\n- fixed GH #612: OpenSSLInitializer calls OPENSSL_config but not CONF_modules_free\n- fixed GH #608: (Parallel)SocketAcceptor ctor/dtor call virtual functions\n- fixed GH #607: Idle Reactor high CPU usage\n- fixed GH #606: HTMLForm constructor read application/x-www-form-urlencoded UTF-8 request\n  body first parameter with BOM in name\n- fixed GH #596: For OpenSSL 1.0.1, include openssl/crypto.h not openssl/fips.h\n- fixed GH #592: Incorrect format string in Poco::Dynamic::Struct\n- fixed GH #590: Poco::Data::SQlite doesn't support URI filenames\n- fixed GH #564: URI::encode\n- fixed GH #560: DateTime class calculates a wrong day\n- fixed GH #549: Memory allocation is not safe between fork() and execve()\n- fixed GH #500: SSLManager causes a crash\n- fixed GH #490: 2 byte frame with payload length of 0 throws \"Incomplete Frame Received\" exception\n- fixed GH #483: multiple cases for sqlite_busy\n- fixed GH #482: Poco::JSON::Stringifier::stringify bad behaviour\n- fixed GH #478: HTTPCredentials not according to HTTP spec\n- fixed GH #471: vs2010 release builds have optimization disabled ?\n- fixed GH #468: HTTPClientSession/HTTPResponse not forwarding exceptions\n- fixed GH #438: Poco::File::setLastModified() doesn't work\n- fixed GH #402: StreamSocket::receiveBytes(FIFOBuffer&) and sendBytes(FIFOBuffer&) are\n  not thread safe\n- fixed GH #345: Linker warning LNK4221 in Foundation for SignalHandler.obj, String.obj\n  and ByteOrder.obj\n- fixed GH #331: Poco::Zip does not support files with \"..\" in the name.\n- fixed GH #318: Logger local time doesn't automatically account for DST\n- fixed GH #294: Poco::Net::TCPServerParams::setMaxThreads(int count) will not accept count == 0.\n- fixed GH #215: develop WinCE build broken\n- fixed GH #63: Net::NameValueCollection::size() returns int\n- Poco::Logger: formatting methods now support up to 10 arguments.\n- added Poco::Timestamp::raw()\n- Poco::DeflatingOutputStream and Poco::InflatingOutputStreams also flush underlying stream\n  on flush()/sync().\n- Poco::Util::Timer: prevent re-schedule of cancelled TimerTask\n- enabled WinRegistryKey and WinRegistryConfiguration for WinCE\n- Poco::BasicEvent improvements and preparations for future support of lambdas/std::function\n- upgraded bundled sqlite to 3.8.7.2\n- Poco::Thread: added support for starting functors/lambdas\n- Poco::Net::HTTPClientSession: added support for global proxy configuration\n- added support for OAuth 1.0/2.0 via Poco::Net::OAuth10Credentials and\n  Poco::Net::OAuth20Credentials classes.\n- Poco::Net::IPAddress: fixed IPv6 prefix handling issue on Windows\n- added Poco::Timestamp::TIMEVAL_MIN and Poco::Timestamp::TIMEVAL_MAX\n- added Poco::Clock::CLOCKVAL_MIN and Poco::Clock::CLOCKVAL_MAX\n- added poco_assert_msg() and poco_assert_msg_dbg() macros\n- Poco::Net::Context: fixed a memory leak if the CA file was not found while creating the\n  Context object (the underlying OpenSSL context would leak)\n- Poco::URI: added new constructor to create URI from Path\n- Various documentation and style fixes\n- Removed support (project/solution files) for Visual Studio.NET 2003 and Visual Studio 2005.\n- Improved CMake support\n\n\nRelease 1.5.4 (2014-10-14)\n==========================\n\n- fixed GH #326: compile Net lib 1.5.2 without UTF8 support enabled\n- fixed GH #518: NetworkInterface.cpp compile error w/ POCO_NO_WSTRING (1.5.3)\n- Fixed MSVC 2010 warnings on large alignment\n- make HTTPAuthenticationParams::parse() add value on end of string\n- fixed GH #482: Poco::JSON::Stringifier::stringify bad behaviour\n- fixed GH #508: Can't compile for arm64 architecture\n- fixed GH #510: Incorrect RSAKey construction from istream\n- fix SharedMemory for WinCE/WEC2013\n- Add NIOS2 double conversion detection, fixes compile errors\n- added VS2013 project/solution files for Windows Embedded Compact 2013\n- added Process::isRunning()\n- NetSSL: Fix typo in documentation\n- NetSSL_OpenSSL: support for TLS 1.1 and 1.2\n- Zip: Added CM_AUTO, which automatically selects CM_STORE or CM_DEFLATE based\n  on file extension. Used to avoid double-compression of already compressed file\n  formats such as images.\n- added %L modifier to PatternFormatter to switch to local time\n- removed unnecessary explicit in some multi-arg constructors\n- Allow SecureStreamSocket::attach() to be used in server connections\n- added Var::isBoolean() and fixed JSON stringifier\n- added poco_unexpected() macro invoking Bugcheck::unexpected() to deal\n  with unexpected exceptions in destructors\n- fixed GH #538 prevent destructors from throwing exceptions\n- improved HTTP server handling of errors while reading header\n- fixed GH #545: use short for sign\n- upgraded SQLite to 3.8.6\n- fixed GH #550 WebSocket fragmented message problem\n- improved HTTPClientSession handling of network errors while sending the request\n- updated bundled PCRE to 8.35.0\n- fixed GH #552: FIFOBuffer drain() problem\n- fixed GH #402: StreamSocket::receiveBytes(FIFOBuffer&) and sendBytes(FIFOBuffer&) are\n  not thread safe\n- HTTPCookie: fix documentation for max age\n- added Timestamp::raw() and Clock::raw()\n- Poco::Buffer properly handles zero-sized buffers\n- GH #512: Poco:Data:ODBC:Binder.h causes a crash\n- Added Crypto_Win and NetSSL_Win libraries which are re-implementations of existing\n  Crypto and NetSSL_OpenSSL libraries based on WinCrypt/Schannel. The new libraries\n  can be used as an almost drop-in replacement for the OpenSSL based libraries on\n  Windows and Windows Embedded Compact platforms. Only available from GitHub for now.\n\n\nRelease 1.5.3 (2014-06-30)\n==========================\n\n- fixed GH# 316: Poco::DateTimeFormatter::append() gives wrong result for\n  Poco::LocalDateTime\n- Poco::Data::MySQL: added SQLite thread cleanup handler\n- Poco::Net::X509Certificate: improved and fixed domain name verification for\n  wildcard domains\n- added Poco::Clock class, which uses a system-provided monotonic clock\n  (if available) and is thus not affected by system realtime clock changes.\n  Monotonic Clock is available on Windows, Linux, OS X and on POSIX platforms\n  supporting clock_gettime() and CLOCK_MONOTONIC.\n- Poco::Timer, Poco::Stopwatch, Poco::TimedNotificationQueue and Poco::Util::Timer\n  have been changed to use Poco::Clock instead of Poco::Timestamp and are now\n  unaffected by system realtime clock changes.\n- fixed GH# 350: Memory leak in Data/ODBC with BLOB\n- Correctly set MySQL time_type for Poco::Data::Date.\n- fixed GH #352: Removed redundant #includes and fixed spelling mistakes.\n- fixed setting of MYSQL_BIND is_unsigned value.\n- fixed GH #360: CMakeLists foundation: add Clock.cpp in the list of source files\n- Add extern \"C\" around <net/if.h> on HPUX platform.\n- added runtests.sh\n- fixed CPPUNIT_IGNORE parsing\n- fixed Glob from start path, for platforms not alowing transverse from root (Android)\n- added NTPClient (Rangel Reale)\n- added PowerShell build script\n- added SmartOS build support\n- fix warnings in headers\n- XMLWriter: removed unnecessary apostrophe escaping (&apos)\n- MongoDB: use Int32 for messageLength\n- fixed GH #380: SecureSocket+DialogSocket crashes with SIGSEGV when timeout occours\n- Improve RSADigestEngine, using Poco::Crypto::DigestEngine to calculate hash before signing\n- added Poco::PBKDF2Engine\n- Fixed GH #380: SecureSocket+DialogSocket crashes with SIGSEGV when timeout occours\n- added support for a 'Priority' attribute on cookies.\n- GH #386: fixed bug in MailMessage without content-transfer-encoding header\n- GH #384: ew hash algorithms support for RSADigestEngine\n- fixed Clock overflow bug on Windows\n- Poco::ByteOrder now uses intrinsics, if available\n- CMake: added /bigobj option for msvc\n- Fix typo to restore Net/TestSuite_x64_vs120 build\n- correct path for CONFIGURE_FILE in CMakeLists.txt\n- Building Poco 1.5.2 for Synology RS812+ (Intel Atom) (honor POCO_NO_INOTIFY)\n- added WEC2013 support to buildwin.cmd and buildwin.ps1\n- HTMLForm: in URL encoding, percent-encode more characters\n- Fixed #include <linux/if.h> conflict with other libraries\n- Poco::Net::X509Certificate::verify() no longer uses DNS reverse lookups to validate host names\n- cert hostname validation is case insensitive and stricter for wildcard certificates\n- TCPServer: do not reduce the capacity of the default ThreadPool\n- added POCO_LOG_DEBUG flag\n- Zip: fixed a crash caused by an I/O error\n- added runtest script for windows\n- added SQlite Full Text Search support\n- added Thread::trySleep() and Thread::wakeUp()\n- fixed GH #410: Bug in JSON::Object.stringify() in 1.5.2\n- fixed GH #362: Defect in Var::parseString when there is no space between value and newline\n- fixed GH #314: JSON parsing bug\n- added GH #313: MetaColumn additions for Data::ODBC and Data::SQLite\n- fixed GH #346: Make Poco::Data::Date and Poco::Data::Time compare functions const.\n- fixed GH #341: Compiling poco-1.5.2 for Cygwin\n- fixed GH #305: There are bugs in Buffer.h\n- fixed GH #321: trivial build fixes (BB QNX build)\n- fixed GH #440: MongoDB ObjectId string formatting\n- added SevenZip library (Guenter Obiltschnig)\n- fixed GH #442: Use correct prefix length field of Windows IP_ADAPTER_PREFIX structure\n- improved GH #328: NetworkInterface on Windows XP\n- fixed GH #154 Add support for MYSQL_TYPE_NEWDECIMAL to Poco::Data::MySQL\n- fixed GH #290: Unicode support\n- fixed GH #318: Logger local time doesn't automatically account for DST\n- fixed GH #363: DateTimeParser tryParse/parse\n- added HTMLForm Content-Length calculation (Rangel Reale)\n- Make TemporaryFile append a slash to tempDir\n- fixed GH #319 android build with cmake\n- added hasDelegates() method to AbstractEvent\n- fixed GH #230: Poco::Timer problem\n- fixed GH #317: Poco::Zip does not support newer Zip file versions.\n- fixed GH #176: Poco::JSON::Stringifier UTF encoding\n- fixed GH #458: Broadcast address and subnet mask for IEEE802.11 network interface\n- fixed GH #456: poco: library install dirs per RUNTIME/LIBRARY/ARCHIVE\n\n\nRelease 1.5.2 (2013-09-16)\n==========================\n\n- added MongoDB library\n- fixed GH #57: poco-1.5.1: Doesn't compile for Android\n- added VoidEvent (Arturo Castro)\n- fixed GH #80: NumberFormatter::append broken\n- fixed GH #93: ParallelSocketAcceptor virtual functions\n- optional small object optimization for IPAddress, SocketAddress, Any and Dynamic::Var\n- SQLite events (insert, update, delete, commit, rollback) handlers\n- merged GH #91: Improve SQLite multi-threaded use (Rangel Reale)\n- merged GH #86: Invalid pointers to vector internals (Adrian Imboden)\n- automatic library initialization macros\n- fixed GH #110: WebSocket accept() fails when Connection header contains multiple tokens\n- fixed GH #71: WebSocket and broken Timeouts (POCO_BROKEN_TIMEOUTS)\n- fixed a warning in Poco/Crypto/OpenSSLInitializer.h\n- fixed GH #109: Bug in Poco::Net::SMTPClientSession::loginUsingPlain\n- added clang libc++ build configurations for Darwin and iPhone (Andrea Bigagli)\n- fixed GH #116: Wrong timezone parsing in DateTimeParse (Matej Knopp)\n- fixed GH #118: JSON::Object::stringify endless loop\n- added Recursive and SortedDirectoryIterator (Marian Krivos)\n- added ListMap (map-like container with preserving insertion order)\n- MailMessage: attachments saving support and consistent read/write\n- fixed GH #124: Possible buffer overrun in Foundation/EventLogChannel\n- fixed GH #119: JSON::Object holds values in ordered map\n- added JSON::PrintHandler\n- renamed JSON::DefaultHandler to ParseHandler (breaking change!)\n- fixed GH #127: Eliminate -Wshadow warnings\n- fixed GH #79: Poco::Thread leak on Linux\n- fixed GH #61: static_md build configs for Crypto and NetSSL\n- fixed GH #130: prefer sysconf over sysctlbyname\n- fixed GH #131: no timezone global var on OpenBSD\n- fixed GH #102: Some subprojects don't have x64 solutions for VS 2010\n- added GH #75: Poco::Uri addQueryParameter method\n- Poco::Environment::osDisplayName() now recognizes Windows 8/Server 2012\n- fixed GH #140: Poco::Runnable threading cleanup issue\n- simplified default TCP/HTTPServer construction\n- fixed GH #141: Application::run() documentation/implementation discrepancy\n- changed RowFormatter to SharedPtr<RowFormatter> in Data::RecordSet interface (breaking change!)\n- fixed GH #144: Poco::Dynamic emits invalid JSON\n- removed naked pointers from Data interfaces\n- fixed GH #82: name conflict in Data::Keywords::bind\n- fixed GH #157: MySQL: cannot bind to 'long' data type on Windows/Visual C++\n- fixed GH #158: MySQL: MYSQL_BIND 'is_unsigned' member is not set\n- fixed GH #160: MultipartReader ignores first part, if preamble is missing\n- fixed GH #156: Possible buffer overrun in Foundation/EventLogChannel\n- XML: fixed an issue with parsing a memory buffer > 2 GB\n- upgraded to expat 2.1.0\n- Data/ODBC: added support for setting query timeout (via setProperty\n  of \"queryTimeout\"). Timeout is int, given in seconds.\n- fixed a potential endless loop in SecureStreamSocketImpl::sendBytes()\n  and also removed unnecessary code.\n- fixed GH #159: Crash in openssl CRYPTO_thread_id() after library libPocoCrypto.so\n  has been unloaded.\n- fixed GH #155: MailOutputStream mangles consecutive newline sequences\n- fixed GH #139: FileChannel::PROP_FLUSH is invalid (contains a tab character)\n- fixed GH #173: HTTPClientSession::proxyConnect forces DNS lookup of host names\n- fixed GH #194: MessageNotification constructor is inefficient.\n- fixed GH #189: Poco::NumberParser::tryParse() documentation bug\n- fixed GH #172: IPv6 Host field is stripped of Brackets in HTTPClientSession\n- fixed GH #188: Net: SocketAddress operator < unusable for std::map key\n- fixed GH #128: DOMWriter incorrectly adds SYSTEM keyword to DTD if PUBLIC is\n  already specified\n- fixed GH #65: Poco::format() misorders sign and padding specifiers\n- upgraded bundled SQLite to 3.7.17\n- replaced JSON parser with Poco::Web::JSON parser (from sandbox)\n- added JSON conversion to Dynamic Struct and Array\n- added VarIterator\n- modified behavior of empty Var (empty == empty)\n- added Alignment.h header for C++03 alignment needs\n- added Data/WebNotifier (DB, WebSocket) example\n- fixed GH #209: Poco::NumberFormatter double length\n- fixed GH #204: Upgrade zlib to 1.2.8\n- fixed GH #198: The \"application.configDir\" property is not always created.\n- fixed GH #185: Poco::NumberFormatter::format(double value, int precision)\n  ignore precision == 0\n- fixed GH #138: FreeBSD JSON tests fail\n- fixed GH #99: JSON::Query an JSON::Object\n- limited allowed types for JSON::Query to Object, Array, Object::Ptr,\n  Array::Ptr and empty\n- fixed GH #175: HTMLForm does not read URL parameters on POST or PUT\n- added GH #187: MySQL: allow access to the underlying connection handle\n- added GH #186: MySQL: support for MYSQL_SECURE_AUTH\n- fixed GH #174: MySQL: 4GB allocated when reading any largetext or largeblob field\n- fixed a potential memory leak in Poco::Net::HTTPClientSession if it is misused\n  (e.g., sendRequest() is sent two times in a row without an intermediate call to\n  receiveResponse(), or by calling receiveResponse() two times in a row without\n  an intermediate call to sendRequest()) - GH #217\n- removed a few unnecessary protected accessor methods from Poco::Net::HTTPClientSession\n  that would provide inappropriate access to internal state\n- merged GH #210: Don't call CloseHandle() twice on Windows; Ability to select the\n  threadpool that will be used to start an Activity(Patrice Tarabbia)\n- fixed GH #212: JSONConfiguration was missing from the vs90 project(Patrice Tarabbia)\n- fixed GH #220: add qualifiers for FPEnvironment in C99 (Lucas Clemente)\n- fixed GH #222: HTTPCookie doesn't support expiry times in the past (Karl Reid)\n- fixed GH #224: building 1.5.1 on Windows for x64\n- fixed GH# 233: ServerSocket::bind6(Poco::UInt16 port, bool reuseAddress, bool ipV6Only) does not work\n- fixed GH# 231: Compatibility issue with Poco::Net::NetworkInterface\n- fixed GH# 236: Bug in RecursiveDirectoryIterator\n- added ColorConsoleChannel and WindowsColorConsoleChannel classes supporting\n  colorizing log messages\n- fixed GH# 259: Poco::EventLogChannel fails to find 64bit Poco Foundation dll\n- fixed GH# 254: UTF8::icompare unexpected behavior\n- Poco::UUID::tryParse() also accepts UUIDs without hyphens. Also updated documentation\n  (links to specifications).\n- added GH# 268: Method to get JSON object value using Poco::Nullable\n- fixed GH# 267: JSON 'find' not returning empty result if object is expected but another value is found\n- Added support for ARM64 architecture and iPhone 5s 64-bit builds\n  (POCO_TARGET_OSARCH=arm64).\n\n\nRelease 1.5.1 (2013-01-11)\n==========================\n\n- using double-conversion library for floating-point numeric/string conversions\n- added Poco::istring (case-insensitive string) and Poco::isubstr\n- added SQLite sys.dual (in-memory system table)\n- applied SF Patch #120: The ExpireLRUCache does not compile with a tuple as key on Visual Studio 2010\n- fixed SF Bug #599: JSON::Array and JSON::Object size() member can implicitly lose precision\n- fixed SF Bug #602: iterating database table rows not correct if no data in table\n- fixed SF Bug #603: count() is missing in HashMap\n- fixed GH #23: JSON::Object::stringify throw BadCastException\n- fixed GH #16: NetworkInterface::firstAddress() should not throw on unconfigured interfaces\n- Android compile/build support (by Rangel Reale)\n- TypeHandler::prepare() now takes const-reference\n- fixed GH #27: Poco::URI::decode() doesn't properly handle '+'\n- fixed GH #31: JSON implementation bug\n- fixed SF #597: Configure script ignores cflags\n- fixed SF #593: Poco 1.5.0 on FreeBSD: cannot find -ldl\n- added SF #542: SocketAddress() needs port-only constructor\n- fixed SF #215: Wrong return type in SocketConnector.h\n- applied SF Patch #97: fix c++0x / clang++ bugs\n- fixed GH32/SF596: Poco::JSON: Parsing long integer (int64) value fails.\n- added Net ifconfig sample (contributed by Philip Prindeville)\n- merged GH #34: add algorithm header (Roger Meier/Philip Prindeville)\n- fixed GH #26: Cannot compile on gcc\n- merged SF #111: FTP Client logging (Marian Krivos)\n- fixed GH #30: Poco::Path::home() throws when called from Windows Service\n- fixed GH #22: MySQL connection string lowercased\n- added MySQL support for Date/Time\n- upgraded SQLite to version 3.7.15.1 (2012-12-19)\n- improved SQLite execute() return (affected rows) value and added tests\n- added SQLite::Utility::isThreadSafe() function\n- added SQLite::Utility::setThreadMode(int mode) function\n- fixed GH #36: 'distclean' requires 3 traversals of project tree\n- fixed GH #41: Buffer::resize crash\n- fixed GH #42: Linux unbundled builds don't link\n- fixed GH #44: Problems with win x64 build\n- fixed GH #46: 1.5.1 build fails on OS X when using libc++\n- fixed GH #48: Need getArgs() accessor to Util::Application to retrieve start-up arguments\n- fixed GH #49: NetworkInterface::list doesn't return MAC addresses\n- fixed GH #51: Android should use isfinite, isinf, isnan and signbit from the std namespace\n- fixed GH #53: JSON unicode fixes and running tests on invalid unicode JSON\n- added ParallelAcceptor and ParallelReactor classes\n- added EOF and error to FIFOBuffer\n\n\nRelease 1.5.0 (2012-10-14)\n==========================\n\n- added JSON library\n- added Util::JSONConfiguration\n- added FIFOBuffer and FIFOBufferStream\n- fixed SF# 3522906: Unregistering handlers from SocketReactor\n- fixed SF# 3522084: AbstractConfiguration does not support 64-bit integers\n- HTTPServer::stopAll(): close the socket instead of just shutting it down, as the latter won't wake up a select() on Windows\n- added SMTPLogger\n- added cmake support\n- fixed SF#3538778: NetworkInterface enumeration uses deprecated API\n- fixed SF#3538779: IPAddress lacks useful constructors: from prefix mask, native SOCKADDR\n- fixed SF#3538780: SocketAddress needs operator < function\n- fixed SF#3538775: Issues building on Fedora/Centos, etc. for AMD64\n- fixed SF#3538786: Use size_t for describing data-blocks in DigestEngine\n- added IPAddress bitwise operators (&,|,^,~)\n- added IPAddress BinaryReader/Writer << and >> operators\n- modified IPAddress to force IPv6 to lowercase (RFC 5952)\n- fixed SF#3538785: SMTPClientSession::sendMessage() should take recipient list\n- added IPAddress::prefixLength()\n- UTF portability improvements\n- fixed SF#3556186: Linux shouldn't use <net/if.h> in Net/SocketDefs.h\n- added IPAddress RFC 4291 compatible site-local prefix support\n- fixed SF#3012166: IPv6 patch\n- added SF#3558085: Add formatter to MACAddress object\n- fixed SF#3552774: Don't hide default target in subordinate makefile\n- fixed SF#3534307: Building IPv6 for Linux by default\n- fixed SF#3516844: poco missing symbols with external >=lipcre-8.13\n- added SF#3544720: AbstractConfigurator to support 64bit values\n- fixed SF#3522081: WinRegistryConfiguration unable to read REG_QWORD values\n- fixed SF#3563626: For Win32 set Up/Running flags on NetworkInterface\n- fixed SF#3560807: Deprecate setPeerAddress() as this is now done in getifaddrs\n- fixed SF#3560776: Fix byte-ordering issues with INADDR_* literals\n- fixed SF#3563627: Set IP address on multicast socket from socket family\n- fixed SF#3563999: Size BinaryWriter based on buffer's capacity(), not size()\n- fixed SF#102 Fix building Poco on Debian GNU/kFreeBSD\n- fixed SF#321 Binding DatTime or Timestamp\n- fixed SF#307 Detect the SQL driver type at run time\n- added VS 2012 Projects/Solutions\n- enhanced and accelerated numeric parsing for integers and floats\n- fixed SF#590 Segfault on FreeBSD when stack size not rounded\n- added warn function and warnmsg macro in CppUnit\n- fixed SF# 3558012 Compilation fails when building with -ansi or -std=c++0x\n- fixed SF# 3563517 Get rid of loss-of-precision warnings on x64 MacOS\n- fixed SF#3562244: Portability fix for AF_LINK\n- fixed SF #3562400: DatagramSocketImpl comment is incorrect\n\n\nRelease 1.4.7p1 (2014-11-25)\n============================\n\n- Fixed Visual C++ 2010-2013 project files. Release builds now have optimization enabled.\n- Poco::URI: added constructor to create URI from Path.\n- fixed GH #618: OS X 10.10 defines PAGE_SIZE macro, conflicts with PAGE_SIZE in Thread_POSIX.cpp\n- Poco::Net::HTTPClientSession: added support for global proxy configuration\n- fixed GH #331: Poco::Zip does not support files with .. in the name.\n- fixed a memory leak in Poco::Net::Context constructor when it fails to load the certificate\n  or private key files.\n- upgraded bundled SQLite to 3.8.7.2\n- fixed GH #229: added missing value() function\n- fixed GH #69: MySQL empty text/blob\n\n\nRelease 1.4.7 (2014-10-06)\n==========================\n\n- fixed GH #398: PropertyFileConfiguration: input != output\n- fixed GH #368: Build failure of Poco 1.4.6p2 on FreeBSD 9.2\n- fixed GH #318: Logger local time doesn't automatically account for DST\n- fixed GH #317: Poco::Zip does not support newer Zip file versions.\n- fixed GH #454: Fix: handle unhandled exceptions\n- fixed GH #463: XML does not compile with XML_UNICODE_WCHAR_T\n- fixed GH #282: Using Thread in a global can cause crash on Windows\n- fixed GH #424: Poco::Timer deadlock\n- fixed GH #465: Fix result enum type XML_Error -> XML_Status\n- fixed GH #510: Incorrect RSAKey construction from istream\n- fixed GH #332: POCO::ConsoleChannnel::initColors() assigns no color to\n  PRIO_TRACE and wrong color to PRIO_FATAL\n- fixed GH #550: WebSocket fragmented message problem\n- Poco::Data::MySQL: added SQLite thread cleanup handler\n- Poco::Net::X509Certificate: improved and fixed domain name verification for\n  wildcard domains\n- fixed a crash in Foundation testsuite with Visual C++ 2012\n- improved and fixed domain name verification for wildcard domains in\n  Poco::Net::X509Certificate\n- updated TwitterClient sample to use new 1.1 API and OAuth\n- added Poco::Clock class, which uses a system-provided monotonic clock\n  (if available) and is thus not affected by system realtime clock changes.\n  Monotonic Clock is available on Windows, Linux, OS X and on POSIX platforms\n  supporting clock_gettime() and CLOCK_MONOTONIC.\n- Poco::Timer, Poco::Stopwatch, Poco::TimedNotificationQueue and Poco::Util::Timer\n  have been changed to use Poco::Clock instead of Poco::Timestamp and are now\n  unaffected by system realtime clock changes.\n- added Poco::PBKDF2Engine class template\n- Poco::Net::HTTPCookie: added support for Priority attribute (backport from develop)\n- fixed makedepend.* scripts to work in paths containing '.o*'\n  (contributed by Per-Erik Bjorkstad, Hakan Bengtsen)\n- Upgraded bundled SQLite to 3.8.6\n- Support for Windows Embedded Compact 2013 (Visual Studio 2012)\n- Project and solution files for Visual Studio 2013\n- Changes for C++11 compatibility.\n- fixed an issue with receiving empty web socket frames (such as ping)\n- improved error handling in secure socket classes\n- Poco::ByteOrder now uses intrinsics if available\n- added new text encoding classes: Latin2Encoding, Windows1250Encoding, Windows1251Encoding\n- Zip: Added CM_AUTO, which automatically selects CM_STORE or CM_DEFLATE based on file extension.\n  Used to avoid double-compression of already compressed file formats such as images.\n\n\nRelease 1.4.6p4 (2014-04-18)\n============================\n\n- no longer use reverse DNS lookups for cert hostname validation\n- cert hostname validation is case insensitive and more strict\n- HTMLForm: in URL encoding, percent-encode more special characters\n- fixed thread priority issues on POSIX platforms with non-standard scheduling policy\n- XMLWriter no longer escapes apostrophe character\n- fixed GH #316: Poco::DateTimeFormatter::append() gives wrong result for Poco::LocalDateTime\n- fixed GH #305 (memcpy in Poco::Buffer uses wrong size if type != char)\n- Zip: fixed a crash caused by an I/O error (e.g., full disk) while creating a Zip archive\n\n\nRelease 1.4.6p3 (2014-04-02)\n============================\n\n- Fixed a potential security vulnerability in client-side X509\n  certificate verification.\n\n\nRelease 1.4.6p2 (2013-09-16)\n============================\n\n- fixed GH #156: Possible buffer overrun in Foundation/EventLogChannel\n- XML: fixed an issue with parsing a memory buffer > 2 GB\n- upgraded to expat 2.1.0\n- Data/ODBC: added support for setting query timeout (via setProperty\n  of \"queryTimeout\"). Timeout is int, given in seconds.\n- fixed a potential endless loop in SecureStreamSocketImpl::sendBytes()\n  and also removed unnecessary code.\n- fixed GH #159: Crash in openssl CRYPTO_thread_id() after library libPocoCrypto.so\n  has been unloaded.\n- fixed GH #155: MailOutputStream mangles consecutive newline sequences\n- fixed GH# 139: FileChannel::PROP_FLUSH is invalid (contains a tab character)\n- fixed GH# 173: HTTPClientSession::proxyConnect forces DNS lookup of host names\n- fixed GH# 194: MessageNotification constructor is inefficient.\n- fixed GH# 189: Poco::NumberParser::tryParse() documentation bug\n- fixed GH# 172: IPv6 Host field is stripped of Brackets in HTTPClientSession\n- fixed GH# 188: Net: SocketAddress operator < unusable for std::map key\n- fixed GH# 128: DOMWriter incorrectly adds SYSTEM keyword to DTD if PUBLIC is\n  already specified\n- fixed GH# 65: Poco::format() misorders sign and padding specifiers\n- upgraded bundled SQLite to 3.7.17\n- upgraded bundled zlib to 1.2.8\n- fixed a potential memory leak in Poco::Net::HTTPClientSession if it is misused\n  (e.g., sendRequest() is sent two times in a row without an intermediate call to\n  receiveResponse(), or by calling receiveResponse() two times in a row without\n  an intermediate call to sendRequest()) - GH #217\n- removed a few unnecessary protected accessor methods from Poco::Net::HTTPClientSession\n  that would provide inappropriate access to internal state\n- fixed GH# 223 (Poco::Net::HTTPCookie does not support expiry times in the past)\n- fixed GH# 233: ServerSocket::bind6(Poco::UInt16 port, bool reuseAddress, bool ipV6Only)\n  does not work\n- added ColorConsoleChannel and WindowsColorConsoleChannel classes supporting\n  colorizing log messages\n- fixed GH# 259: Poco::EventLogChannel fails to find 64bit Poco Foundation dll\n- fixed GH# 254: UTF8::icompare unexpected behavior\n- Poco::UUID::tryParse() also accepts UUIDs without hyphens. Also updated documentation\n  (links to specifications).\n- Added support for ARM64 architecture and iPhone 5s 64-bit builds\n  (POCO_TARGET_OSARCH=arm64).\n\n\nRelease 1.4.6p1 (2013-03-06)\n============================\n\n- fixed GH# 71: WebSocket and broken Timeouts (POCO_BROKEN_TIMEOUTS)\n- fixed an ambiguity error with VC++ 2010 in Data/MySQL testsuite\n- Poco::Net::NetworkInterface now provides the interface index even for IPv4\n- added DNS::reload() as a wrapper for res_init().\n- On Linux, Poco::Environment::nodeId() first always tries to obtain the\n  MAC address of eth0, before looking for other interfaces.\n- Poco::Net::HTTPSession now always resets the buffer in connect() to clear\n  any leftover data from a (failed) previous session\n- fixed copysign namespace issue in FPEnvironment_DUMMY.h\n- fixed a warning in Poco/Crypto/OpenSSLInitializer.h\n- added a build configuration for BeagleBoard/Angstrom\n- fixed GH# 109: Bug in Poco::Net::SMTPClientSession::loginUsingPlain)\n- fixed compile errors with clang -std=c++11\n- fixed GH# 116: Wrong timezone parsing in DateTimeParse (fix by Matej Knopp)\n- updated bundled SQLite to 3.7.15.2\n\n\nRelease 1.4.6 (2013-01-10)\n==========================\n\n- changed FPEnvironment_DUMMY.h to include <cmath> instead of <math.h>\n- updated bundled SQLite to 3.7.15.1\n- fixed GH# 30: Poco::Path::home() throws\n- fixed SF Patch# 120 The ExpireLRUCache does not compile with a tuple as key on VS2010\n- fixed SF# 603 count() is missing in HashMap\n- Crypto and NetSSL_OpenSSL project files now use OpenSSL *MD.lib library files for\n  static_md builds. Previously, the DLL import libs were used.\n- Poco::Environment::osDisplayName() now recognizes Windows 8/Server 2012\n\n\nRelease 1.4.5 (2012-11-19)\n==========================\n\n- added Visual Studio 2012 project files\n- buildwin.cmd now support building with msbuild for VS2010 and 2012.\n- added Poco::Optional class\n- fixed SF# 3558012 Compilation fails when building with -ansi or -std=c++0x\n- fixed SF# 3563517 Get rid of loss-of-precision warnings on x64 MacOS\n- fixed SF# 3562244: Portability fix for AF_LINK\n- fixed SF# 3562400: DatagramSocketImpl comment\n- fixed SF# 594: Websocket fails with small masked payloads\n- fixed SF# 588: Missing POCO_ARCH and POCO_ARCH_LITTLE_ENDIAN define for WinCE on SH4\n- fixed SF# 581: Out-of-bound array access in Unicode::properties() function.\n- fixed SF# 590: Segfault on FreeBSD when stack size not rounded\n- fixed SF# 586: Poco::DateTimeParser and ISO8601 issues when seconds fraction has more than 6 digits\n- Poco::Net::HTTPSSessionInstantiator::registerInstantiator() now optionally accepts a\n  Poco::Net::Context object.\n- added Poco::XML::XMLWriter::depth() member function.\n- added Poco::XML::XMLWriter::uniquePrefix() and Poco::XML::XMLWriter::isNamespaceMapped().\n- Poco::FileChannel now supports a new rotateOnOpen property (true/false) which can be used\n  to force rotation of the log file when it's opened.\n- fixed a bug in Poco::XML::XMLWriter::emptyElement(): need to pop namespace context\n- OS X builds now use Clang as default compiler\n- Updated SQLite to 3.7.14.1\n- POCO_SERVER_MAIN macro now has a try ... catch block for Poco::Exception and writes\n  the displayText to stderr.\n- Poco/Platform.h now defines POCO_LOCAL_STATIC_INIT_IS_THREADSAFE macro if the compiler\n  generates thread-safe static local initialization code.\n\n\nRelease 1.4.4 (2012-09-03)\n==========================\n\n- ZipStream now builds correctly in unbundled build.\n- added proxy digest authentication support to Net library\n- integrated MySQL BLOB fixes from Franky Braem.\n- use standard OpenSSL import libraries (libeay32.lib, ssleay32.lib) for Crypto and\n  NetSSL_OpenSSL Visual Studio project files.\n- fixed a potential buffer corruption issue in Poco::Net::SecureStreamSocket if lazy\n  handshake is enabled and the first attempt to complete the handshake fails\n- Poco::DateTimeParser::tryParse() without format specifier now correctly parses ISO8601\n  date/times with fractional seconds.\n- Poco::Process::launch() now has additional overloads allowing to specify an initial\n  directory and/or environment.\n- Poco::Net::FTPClientSession: timeout was not applied to data connection, only to\n  control connection.\n- Fixed potential IPv6 issue with socket constructors if IPv6 SocketAddress is given\n  (contributed by ??????? ????????? <milovidov@yandex-team.ru>).\n- Added an additional (optional) parameter to Poco::Thread::setOSPriority() allowing to\n  specify a scheduling policy. Currently this is only used on POSIX platforms and allows\n  specifying SCHED_OTHER (default), SCHED_FIFO or SCHED_RR, as well as other\n  platform-specific policy values.\n- Added Poco::Crypto::DigestEngine class providing a Poco::DigestEngine interface to\n  the digest algorithms provided by OpenSSL.\n- Fixed some potential compiler warnings in Crypto library\n- In some cases, when an SSL exception was unexpectedly closed, a generic Poco::IOException\n  was thrown. This was fixed to throw a SSLConnectionUnexpectedlyClosedException instead.\n- Added Poco::ObjectPool class template.\n- Poco::Net::HTTPServer has a new stopAll() method allowing stopping/aborting of all\n  currently active client connections.\n- The HTTP server framework now actively prevents sending a message body in the\n  response to a HEAD request, or in case of a 204 No Content or 304 Not Modified\n  response status.\n- fixed a DOM parser performance bug (patch by Peter Klotz)\n- fixed SF# 3559325: Util Windows broken in non-Unicode\n- updated iOS build configuration to use xcode-select for finding toolchain\n- Poco::Net::SecureSocketImpl::shutdown() now also shuts down the underlying socket.\n- fixed SF# 3552597: Crypto  des-ecb error\n- fixed SF# 3550553: SecureSocketImpl::connect hangs\n- fixed SF# 3543047: Poco::Timer bug for long startInterval/periodic interval\n- fixed SF# 3539695: Thread attributes should be destroyed using the pthread_attr_destroy()\n- fixed SF# 3532311: Not able to set socket option on ServerSocket before bind\n  Added Poco::Net::Socket::init(int af) which can be used to explicitely\n  initialize the underlying socket before calling bind(), connect(), etc.\n- fixed SF# 3521347: Typo in UnWindows.h undef\n- fixed SF# 3519474: WinRegistryConfiguration bug\n  Also added tests and fixed another potential issue with an empty root path passed to the constructor.\n- fixed SF# 3516827: wrong return value of WinRegistryKey::exists()\n- fixed SF# 3515284: RSA publickey format(X.509 SubjectPublicKeyInfo)\n- fixed SF# 3503267: VxWorks OS prio is not set in standard constructor\n- fixed SF# 3500438: HTTPResponse failure when reason is empty\n- fixed SF# 3495656: numberformater, numberparser error in mingw\n- fixed SF# 3496493: Reference counting broken in TaskManager postNotification\n- fixed SF# 3483174: LogFile flushing behavior on Windows\n  Flushing is now configurable for FileChannel and SimpleFileChannel\n  using the \"flush\" property (true or false).\n- fixed SF# 3479561: Subsequent IPs on a NIC is not enumerated\n- fixed SF# 3478665: Permission checks in Poco::File not correct for root\n- fixed SF# 3475050: Threading bug in initializeNetwork() on Windows\n- fixed SF# 3552680: websocket small frames bug and proposed fix\n- fixed a WebSocket interop issue with Firefox\n- added Poco::Net::MessageHeader::hasToken()\n- Poco::AtomicCounter now uses GCC 4.3 builtin atomics on more platforms\n- fixed SF# 3555938: NetSSL: socket closed twice\n- socket exceptions now include OS error code\n- fixed SF# 3556975: Need to fix Shared Memory for memory map\n- Poco::Net::SecureSocketImpl::close() now catches exceptions thrown by its call to shutdown().\n- fixed SF# 3535990: POCO_HAVE_IPv6 without POCO_WIN32_UTF8 conflict\n- fixed SF# 3559665: Poco::InflatingInputStream may not always inflate completely\n- added Poco::DirectoryWatcher class\n- fixed SF# 3561464: Poco::File::isDevice() can throw due to sharing violation\n- Poco::Zip::Compress::addRecursive() has a second variant that allows to specify the compression method.\n- Upgraded internal SQLite to 3.7.14\n\n\nRelease 1.4.3p1 (2012-01-23)\n============================\n\n- fixed SF# 3476926: RegDeleteKeyEx not available on Windows XP 32-bit\n\n\nRelease 1.4.3 (2012-01-16)\n==========================\n\n- fixed a compilation error with Data/MySQL on QNX.\n- fixed Util project files for WinCE (removed sources not compileable on CE)\n- removed MD2 license text from Ackowledgements document\n- fixed iPhone build config for Xcode 4.2 (compiler name changed to llvm-g++)\n- Poco::Util::XMLConfiguration: delimiter char (default '.') is now configurable.\n  This allows for working with XML documents having element names with '.' in them.\n- Poco::Util::OptionProcessor: Required option arguments can now be specified as\n  separate command line arguments, as in \"--option value\" in addition to the\n  \"--option=value\" format.\n- Poco::Util::HelpFormatter: improved option help formatting if  indentation has\n  been set explicitely.\n- added Mail sample to NetSSL_OpenSSL, showing use of Poco::Net::SecureSMTPClientSession.\n- added additional read() overloads to Poco::Net::HTMLForm.\n- fixed SF# 3440769: Poco::Net::HTTPResponse doesn't like Amazon EC2 cookies.\n- added support for requiring TLSv1 to Poco::Net::Context.\n- added an additional constructor to Poco::Net::HTTPBasicCredentials, allowing\n  the object to be created from a string containing a base64-encoded, colon-separated\n  username and password.\n- Poco::Zip::ZipStreamBuf: fixed a crash if CM_STORE was used.\n- Added setContentLength64() and getContentLength64() to Poco::Net::HTTPMessage.\n- added Poco::Environment::osDisplayName().\n- fixed SF# 3463096: WinService leaves dangling handles (open() now does not reopen the\n  service handle if it's already open)\n- fixed SF# 3426537: WinRegistryConfiguration can't read virtualized keys\n- added Poco::Buffer::resize()\n- fixed SF# 3441822: thread safety issue in HTTPClientSession:\n  always use getaddrinfo() instead of gethostbyname() on all platforms supporting it\n- added version resource to POCO DLLs\n- fixed SF# 3440599: Dir Path in Quotes in PATH cause PathTest::testFind to fail.\n- fixed SF# 3406030: Glob::collect problem\n- added Poco::Util::AbstractConfiguration::enableEvents()\n- Poco::AtomicCounter now uses GCC builtins with GCC 4.1 or newer\n  (contributed by Alexey Milovidov)\n- made Poco::Logger::formatDump() public as it may be useful for others as well\n  (SF# 3453446)\n- Poco::Net::DialogSocket now has a proper copy constructor (SF# 3414602)\n- Poco::Net::MessageHeader and Poco::Net::HTMLForm now limit the maximum number of\n  fields parsed from a message to prevent certain kinds of denial-of-service\n  attacks. The field limit can be changed with the new method setFieldLimit().\n  The default limit is 100.\n- Poco::NumberFormatter, Poco::NumberParser and Poco::format() now always use the\n  classic (\"C\") locale to format and parse floating-point numbers.\n- added Poco::StreamCopier::copyStream64(), Poco::StreamCopier::copyStreamUnbuffered64()\n  and Poco::StreamCopier::copyToString64(). These functions use a 64-bit integer\n  to count the number of bytes copied.\n- upgraded internal zlib to 1.2.5\n- upgraded internal sqlite to 3.7.9\n- XML: integrated bugfix for Expat bug# 2958794 (memory leak in poolGrow)\n- Added support for HTTP Digest authentication (based on a contribution by\n  Anton V. Yabchinskiy (arn at bestmx dot ru)). For information on how\n  to use this, see the Poco::Net::HTTPCredentials, Poco::Net::HTTPDigestCredentials\n  and Poco::Net::HTTPAuthenticationParams classes.\n- Poco::Net::HTTPStreamFactory and Poco::Net::HTTPSStreamFactory now support Basic\n  and Digest authentication. Username and password must be provided in the URI.\n- added Poco::Net::WebSocket, supporting the WebSocket protocol as described in RFC 6455\n- NetSSL_OpenSSL: added client-side support for Server Name Indication.\n  Poco::Net::SecureSocketImpl::connectSSL() now calls SSL_set_tlsext_host_name()\n  if its available (OpenSSL 9.8.6f and later).\n- added Poco::Net::HTTPClientSession::proxyConnect() (factored out from\n  Poco::Net::HTTPSClientSession::connect())\n- added Poco::Process::kill(const Poco::ProcessHandle&) which is preferable to\n  kill(pid) on Windows, as process IDs on Windows may be reused.\n- fixed SF# 3471463: Compiler warnings with -Wformat\n- Poco::Util::Application::run() now catches and logs exceptions thrown in initialize()\n- Fixed a WinCE-specific bug in Poco::Util::ServerApplication where uninitialize() would\n  be called twice.\n- fixed SF# 3471957: WinRegistryKey::deleteKey() unable to delete alt views\n- Added additional constructor to Poco::ScopedLock and Poco::ScopedLockWithUnlock\n  accepting a timeout as second argument.\n- Added Poco::Logger::parseLevel()\n- Poco::format(): an argument that does not match the format\n  specifier no longer results in a BadCastException. The string [ERRFMT] is\n  written to the result string instead.\n- PageCompiler: added createSession page attribute.\n\n\nRelease 1.4.2p1 (2011-09-24)\n============================\n\n- On Linux, the RTLD_DEEPBIND option is no longer passed to dlopen().\n  This change was introduced in 1.4.2 to solve a specific problem one customer\n  was having. Unfortunately, it leads to problems with RTTI.\n- It's now possible to pass flags (SHLIB_GLOBAL, SHLIB_LOCAL) to\n  Poco::SharedLibrary::load() (and the constructor implicitly calling load()),\n  controlling the mode flags (RTLD_GLOBAL, RTLD_LOCAL) passed to dlopen().\n  On platforms not using dlopen(), these flags are ignored.\n- fixed SF# 3400267: Path_WIN32.cpp bug\n\n\nRelease 1.4.2 (2011-08-28)\n==========================\n\n- added Poco::DateTimeFormat::ISO8601_FRAC_FORMAT\n- added new Poco::DateTimeFormatter and Poco::DateTimeParser format specifier:\n  %s for seconds with optional fractions of a second\n- fixed a problem with ioctl() on BSD platforms (including OS X) where the\n  second argument to ioctl() is unsigned long instead of int, causing bad\n  things on a OS X 64-bit kernel.\n- fixed a potential endless loop when enumerating IPv6 network addresses\n  (reported by Laurent Carcagno)\n- new compile-time config option on Windows to set thread names in\n  debugger. Enable with -DPOCO_WIN32_DEBUGGER_THREAD_NAMES. Available\n  only in debug builds.\n- Cipher can now create Base64 and HexBinary encoded output without linefeeds\n  (suitable for use in cookies, etc.)\n- added Poco::Path::popFrontDirectory()\n- improved VxWorks support\n- IPv6 fixes: added proper scope id handling in IPAddress, SocketAddress\n  and related classes.\n- Added Poco::Net::ServerSocket::bind6() which allows control over the\n  IPPROTO_IPV6/IPV6_V6ONLY socket option.\n- Removed Poco::MD2Engine class due to licensing issues (the\n  license for the MD2 code from RSA only allows non-commercial\n  use). Note that the MD4 and MD5 code from RSA does not have\n  this issue.\n- fixed a Net HTTP client testsuite issue where some tests might\n  have failed due to prematurely aborted connections by\n  the HTTPTestServer.\n- Poco::Net::SocketAddress: when there is more than one address\n  returned by a DNS lookup for a name, IPv4 addresses will be\n  preferred to IPv6 ones.\n- NetworkInterface::list() now also returns IPv4 interfaces on Windows when\n  built with -DPOCO_HAVE_IPv6\n- XMLWriter: fixed a bug with attribute namespaces (no namespace prefix\n  written if attribute namespace is the same as element namespace)\n- fixed SF# 3378588: Mismatched new[]/delete (in RSAEncryptImpl and RSADecryptImpl)\n- fixed SF# 3212954 (OpenSSLInitializer::uninitialize() crash) and\n  SF# 3196862 (Static OpenSSLInitializer instance causes Windows deadlocks) by\n  removing the static Poco::Crypto::OpenSSLInitializer instance. Automatic OpenSSL\n  initialization is now done through Poco::Crypto::Cipher, Poco::Crypto::CipherKey,\n  Poco::Crypto::X509Certificate, Poco::Net::Context classes; however, it is still\n  recommended to call Poco::Crypto::initializeCrypto() and\n  Poco::Crypto::uninitializeCrypto() early at application startup, and late at\n  shutdown respectively (or Poco::Net::initializeSSL()/Poco::Net::uninitializeSSL()\n  if the NetSSL library is used) to avoid multiple full OpenSSL init/uninit cycles\n  during application runtime.\n- Poco::Logger now also support a symbolic log level \"none\"\n  (for use with setLevel()) that disables logging completely\n  for that Logger (equivalent to setLevel(0)).\n- Added experimental Android support, using the existing gmake-based\n  build system.\n- fixed SF# 3288584: DateTimeFormatter link error\n- fixed SF# 3187117: Typo in InflatingInputStream doc\n- fixed SF# 3309731: _WIN32_WCE comparison should be with 0x600 not 600\n- fixed SF# 3393026: RegularExpression.h identical enum value\n- fixed SF# 3274222: AtomicCounter's postfix operators aren't atomic on Windows\n- fixed SF# 3317177: Handle leak on windows\n- fixed SF# 3181882: Poco::URI::getPathEtc() double-encodes query\n- fixed SF# 3379935: ThreadPool Start Bug\n- fixed SF# 3354451: Poco::Format::parsePrec never sets the precision to zero\n- fixed SF# 3387258: _MAX_PATH used but unknown in Path_WIN32\n- fixed a problem in RSAKeyImpl where direct access to the RSA in a EVP_PKEY\n  would no longer work in recent OpenSSL versions. Using EVP_PKEY_get1_RSA()\n  fixes the issue.\n- added Poco::Crypto::EncryptingInputStream, Poco::Crypto::EncryptingOutputStream,\n  Poco::Crypto::DecryptingInputStream and Poco::Crypto::DecryptingOutputStream.\n- fixed SF# 3148126: HTTPSClientSession destructor (!) throws an IOException\n- fixed SF# 3178098: Add constructor to Poco::TemporaryFile to specify directory\n- fixed SF# 3175310: Absolute path when device\n- fixed SF# 3301207: Guided tour example contradicts apidoc (API doc was wrong)\n- Poco::Net::HTTPMessage::setContentLength() and Poco::Net::HTTPMessage::getContentLength() now\n  use std::streamsize instead of int. This enables 64-bit Content-Length support at least\n  on 64-bit platforms.\n- fixed SF# 3177530: TemporaryFile::tempName() + glob bug on xp\n- fixed SF# 3177372: FileChannel documentation inconsistency\n- added %E format specifier to Poco::PattermFormatter (epoch time in seconds\n  since midnight, January 1 1970)\n- On Windows, Poco::Util::ServerApplication now supports a /description command\n  line argument for specifying a service description (together with /registerService)\n- added Poco::Util::WinService::setDescription() and\n  Poco::Util::WinService::getDescription()\n- fixed SF# 3155477: Incorrect URI path handling\n- fixed SF# 3309736: Extended Exception macros to set default exception code\n  new macro is named POCO_DECLARE_EXCEPTION_CODE\n- added getter functions for modulus and exponents to Poco::Crypto::RSAKey.\n- added Poco::Net::SocketAddress::operator == () and\n  Poco::Net::SocketAddress::operator != ()\n- fixed SF# 3182746: IPAddress.cpp IPv6 bug on big-endian\n- fixed SF# 3196961: Unix daemon fails to loadConfiguration() if started from cwd\n- fixed SF# 3393700: NotificationCenter may call a removed observer and crash.\n- Reworked implementation of the events framework (Poco::BasicEvent and friends).\n  The framework is now completely multithreading save (even in the case that\n  an event subscriber object unsubscribes and is deleted while an event is\n  being dispatched). Also, the restriction that any object can only register\n  one delegate for each event has been removed. For most cases, dispatching\n  events should be faster, as dispatching an event now needs less dynamic memory\n  allocations.\n- fixed SF# 3178109: getNodeByPath() changes:\n  getNodeByPath() and getNodeByPathNS() have been moved to Poco::XML::Node.\n  Furthermore, when invoked on a Poco::XML::Document, the behavior has changed\n  so that the document element is now included when traversing the path (previously,\n  traversal would start at the document element, now it starts at the document).\n  The path expression can now start with a double-slash, which results in a recursive\n  search for the path's first element in the DOM tree.\n- fixed SF# 3382935: String data being truncated using ODBC, and\n  SF# 2921813: Wrong implementation of the ODBC string binding\n\n\nRelease 1.4.1p1 (2011-02-08)\n============================\n\n- Poco::Mutex is now a recursive mutex again on Linux\n  (this was caused by an unfortunate feature test for\n  PTHREAD_MUTEX_RECURSIVE which did not work on Linux\n  as PTHREAD_MUTEX_RECURSIVE is an enum value and not\n  a macro)\n- Poco::Net::SecureSocketImpl::abort() now only shuts\n  down the underlying socket connection and does not free\n  the SSL object, due to multithreading issues.\n\n\nRelease 1.4.1 (2011-01-29)\n==========================\n\n- fixed SF# 3150223: Poco::BinaryReader cannot read std::vector correctly\n- fixed SF# 3146326: SharedMemory issue\n- made Poco::Net::HTTPSession::abort() virtual\n- added Poco::Net::SecureStreamSocket::abort() to immediately close\n  a SSL/TLS connection without performing an orderly SSL/TLS shutdown.\n- fixed SF# 3148126: HTTPSClientSession destructor (!) throws an IOException.\n  Added try/catch block to Poco::Net::SecureSocketImpl destructor.\n- added additional constructor to Poco::Net::HTTPSClientSession, taking\n  both a socket and a session object.\n- Poco::Net::HTTPSession::abort() now also can be used with a\n  Poco::Net::HTTPSClientSession.\n- fixed SF# 3148045: make clean and distclean issues\n- changed Data library names on Unix/Linux platforms to\n  match the names on Windows (PocoSQLite -> PocoDataSQLite,\n  PocoMySQL -> PocoDataMySQL, PocoODBC -> PocoDataODBC)\n- added additional options to configure script\n- added additional documentation to Poco::Net::HTTPClientSession\n- Poco::Net::HTTPClientSession::receiveResponse() closes the connection\n  if an exception is thrown while reading the response header.\n  This ensures that a new connection will be set up for the next request\n  if persistent connections are used.\n- improved Poco::Net::MultipartDecoder performance by reading directly from streambuf\n- improved performance of Poco::Base64Encoder, Poco::Base64Decoder,\n  Poco::HexBinaryEncoder and Poco::HexBinaryDecoder by working directly with the\n  given stream's streambuf.\n- improved performance of MessageHeader::read() by reading directly from streambuf\n  instead of istream.\n- it is now possible to specify additional MIME part header fields\n  for a MIME part through the Poco::Net::PartSource class.\n- upgraded SQLite to release 3.7.4\n- added experimental VxWorks support for VxWorks 5.5.1/Tornado 2.2 and\n  newer. Please see the VxWorks Platform Notes in the reference documentation\n  for more information. Currently, the VxWorks is untested; full support\n  will be available in release 1.4.2.\n- fixed SF# 3165918: Poco::DynamicAny fails to convert from string to float\n- fixed SF# 3165910: Poco::Net::MessageHeader does not accept HTTP conforming header\n- made Poco::Task::cancel() virtual so that tasks can implement custom\n  cancellation behavior.\n- added optional argument to Poco::Util::WinRegistryKey constructor\n  to specify additional flags (in addition to KEY_READ and KEY_WRITE)\n  for the samDesired argument of RegOpenKeyEx() or RegCreateKeyEx().\n- improved Poco::BasicEvent::notify() performance by avoiding an unnecessary heap\n  allocation.\n- added additional well-known port numbers to Poco::URI: rtsp, sip, sips, xmpp.\n- added Poco::Net::MediaType::matchesRange()\n- improved invalid socket handling: a Poco::Net::InvalidSocketException is\n  now thrown instead of an assertion when an operation is attempted on a closed or\n  otherwise uninitialized socket.\n\n\nRelease 1.4.0 (2010-12-14)\n==========================\n\n- SSLManager: documentation fixes, code cleanup\n- SSLManager: renamed PrivateKeyPassPhrase event to PrivateKeyPassphraseRequired\n- added HTTPServerRequestImpl::socket() to get access to the underlying socket\n- added Socket::secure() to find out whether a given socket supports SSL/TLS\n- added SecureStreamSocket::havePeerCertificate()\n- NetSSL: added support for turning off extended certificate validation (hostname matching)\n- fixed SF# 2941228: ICMPClient::ping() issues on Mac OS X\n- fixed SF# 2941231: ICMPEventArgs out of bounds array access\n- added PageCompiler sample\n- added missing newline at end of xmlparse.c\n- Poco::Glob can now be used with an empty pattern which will match nothing (patch from Kim Graesman)\n- added support for HTTP proxy authentication (Basic authentication only)\n- fixed SF# 2958959: XMLWriter must encode CR, LF and TAB in attribute values as character entities.\n- HTMLForm now supports PUT requests as well (see <http://pocoproject.org/forum/viewtopic.php?f=12&t=2163&p=3930#p3930>)\n- fixed SF# #2970521: FileOutputStream and file permissions.\n  (also fixed in File class)\n- removed an unused (and wrong) default parameter from EventImpl constructor for WIN32.\n- added full support for session caching to NetSSL_OpenSSL\n- fixed SF# 2984454: Poco::Util::Timer::scheduleAtFixedRate() works incorrectly\n- fixed a bug in Poco::Util::Timer that could lead to high CPU load if\n  the system clock is moved forward.\n- added system.nodeId to SystemConfiguration\n- added a note to Poco::Util::ServerApplication documentation regarding\n  creation of threads\n- added Poco::Net::IPAddress::broadcast() and Poco::Net::IPAddress::wildcard() to\n  create broadcast (255.255.255.255) and wildcard (0.0.0.0) addresses.\n- fixed SF# 2916154: Poco::Net::IPAddress::isLoopback() only works for 127.0.0.1.\n- added build configuration for iPhone Simulator\n- GNU Make based build system provides new variables: POCO_HOST_BINDIR, POCO_HOST_BINPATH,\n  POCO_HOST_LIBDIR, POCO_HOST_LIBPATH and POCO_TARGET_* equivalents.\n- Application::initialize() and Application::uninitialize() will now be called from within run().\n  This solves various issues with uninitialize() not being called, or being called inappropriately\n  from the Application destructor.\n  Please note that this change will break applications that use the Application class,\n  but only call init() and not run().\n- added /startup option to specify startup mode for Windows services (automatic or manual)\n- fixed SF# 2967354: SecureSocketImpl shutdown/close problem\n- fixed SF# 3006340: LinearHashTable grows even if key already exists\n- fixed a particularly nasty Windows error handling issue that manifested itself on WinCE:\n  WSAGetLastError() would be called after a std::string was created. The string creation could result\n  in a heap operation which called a Windows API to allocate memory. This would reset the\n  GetLastError() error code. Since WSAGetLastError() is just an alias for GetLastError(), the actual\n  error code from the socket operation would be lost.\n- upgraded SQLite to 3.7.3\n- added --header-prefix option to PageCompiler\n- fixed SF# 3003875: SQLite data binding is broken\n- fixed SF# 2993988: Issue with multiple calls to open()/close() on File*Stream\n- fixed SF# 2990256: HTMLForm and file uploads\n- fixed SF# 2969227: DateTimeParser bug\n- fixed SF# 2966698: Socket connect with timeout issue\n- fixed SF# 2981041: Bind NULL to a query (patch supplied)\n- fixed SF# 2961419: UTF8Encoding::convert() doesn't work properly in DEBUG mode\n- fixed SF# 2957068: Timeout value not picked up by proxy in HTTPSClientSession\n- fixed NetSSL_OpenSSL test runner for Poco::Util::Application class changes\n- Poco::AbstractEvent, Poco::AbstractCache and related classes now accept a Mutex class as additional template argument.\n  Poco::NullMutex can be used if no synchronization is desired.\n- Added Poco::AbstractEvent::empty() to check whether an event has registered delegates.\n- Poco::URI now correctly handles IPv6 addresses.\n- Added Poco::Nullable class template.\n- Added Poco::NullMutex, a no-op mutex to be used as template argument for template classes\n  taking a mutex policy argument.\n- Poco::XML::XMLWriter: fixed a namespace handling issue that occured with startPrefixMapping() and endPrefixMapping()\n- Poco::Net::Context now allows for loading certificates and private keys from Poco::Crypto::X509Certificate objects\n  and Poco::Crypto::RSAKey objects.\n- Poco::Crypto::RSAKey no longer uses temporary files for stream operations. Memory buffers are used instead.\n- fixed SF# 2957865: added Poco::UUID::tryParse()\n- All Zip classes now use Poco::File[Input|Output]Stream instead of std::[i|o]fstream.\n  UTF-8 filenames will now be handled correctly on Windows.\n- fixed SF# 2902029: zlib flush support (Z_SYNC_FLUSH)\n- added Poco::TextBufferIterator class\n- fixed SF# 2977249: Use epoll instead select under Linux\n  Socket::select() and Socket::poll() will use epoll under Linux if the Net library is compiled\n  with -DPOCO_HAVE_FD_EPOLL. This is the default for the Linux build configuration (but not for\n  the various build configurations targeting embedded Linux platforms).\n- fixed SF# 2941664: Memory leak in DeflatingStream with zero-length streams (also fixed some other potential,\n  but unlikely, memory leaks)\n- fixed SF# 2946457: added RejectCertificateHandler\n- fixed SF# 2946621: Poco::Path bug with POCO_WIN32_UTF8\n- fixed SF# 2929805: Environment::nodeId() does not work if no eth0 device exists\n- Environment::nodeId() no longer throws if no hardware ethernet address can be determined.\n  It returns an all-zero address instead.\n- Added additional classification functions to Poco::Unicode class; made classification functions inline.\n- added Ascii class for ASCII character classification.\n  Methods of the Ascii class are now used instead of the\n  standard library functions (std::isspace(), etc.) due to\n  possible inconsistent results or assertions when the\n  standard library functions are used with character codes\n  outside the ASCII range.\n- Poco::Net::MailMessage: fixed a bug in StringPartHandler that resulted in incorrect handling of non-ASCII data if\n  char is signed.\n- Improved Poco::Net::SMTPClientSession compatibility with various mail servers when using AUTH_LOGIN authentication.\n- Added CRAM-SHA1 support to Poco::Net::SMTPClientSession\n- Poco::Net::SMTPClientSession now also supports login with AUTH PLAIN.\n- Added Poco::Net::SecureSMTPClientSession class, supporting STARTTLS for secure SMTP connections.\n- fixed an issue with SharedMemory on POSIX systems, where a shared memory region would be deleted\n  despite the server flag set to true (see http://pocoproject.org/forum/viewtopic.php?f=12&t=3494).\n- PageCompiler: added a new page context directive, to allow passing custom context objects to the\n  request handler.\n- fixed StreamSocketImpl::sendBytes() for non-blocking sockets\n- added Poco::Net::DialogSocket::receiveRawBytes(), which should be used instead of receiveBytes() due to internal\n  buffering by DialogSocket.\n- DOMParser: FEATURE_WHITESPACE has been renamed to FEATURE_FILTER_WHITESPACE (which now matches the underlying URI)\n  and is now handled correctly (previously we did the exact reverse thing)\n- added Poco::Util::AbstractConfiguration::remove() to remove a configuration property; added removeRaw() implementations\n  to all implementations (contributions by Daniel Hobi and Alexey Shults).\n- fixed NetSSL_OpenSSL compilation error on Windows with OpenSSL 1.0\n- Added optional FIPS mode support to NetSSL_OpenSSL (contributed by Lior Okman).\n  If OpenSSL has been configured and built with FIPS support, then FIPS support can\n  be enabled by calling Poco::Crypto::OpenSSLInitializer::enableFIPSMode(true); or\n  by setting the fips property in the OpenSSL configuration to true (see Poco::Net::SSLManager\n  for details).\n- fixed SF# 3031530: Ping and possible no timeout\n- added Poco::Net::SocketReactor::onBusy(), called whenever at least one notification will\n  be dispatched.\n- fixed SF# 3034863: Compiler warning in net/IPAddress.h with poco 1.3.2\n- added support for CRAM-SHA1 authentication to SMTPClientSession\n- Poco::format(): arguments can now be addressed by their index, e.g. %[2]d\n- Poco::Util::Timer::cancel() now accepts an optional boolean argument.\n  If true is passed, cancel() waits until the task queue has been purged.\n  Otherwise, it returns immediately and works asynchronously, as before.\n- Poco::Net::HTTPServerResponse::redirect() now accepts an optional additional\n  argument to specify the HTTP status code for the redirection.\n- fixed a warning (BinaryReader.cpp) and error (ThreadLocal.cpp) in Foundation when compiling with Visual Studio 2010\n- fixed a wrong exception in Poco::Net::POP3ClientSession\n- Poco::Net::FTPClientSession and Poco::Net::SMTPClientSession now set the error code in exceptions they throw\n- fixed a potential race condition with terminating a Windows service based on Poco::Util::ServerApplication\n- fixed a bug in global build configuration file: explicitly setting POCO_CONFIG did not work on Solaris platforms,\n  as it was always overridden by the automatically determined configuration.\n- Added support for MinGW cross builds on Linux.\n- Changed location of statically linked build products in the gmake-based build system.\n  Statically linked executables are now in bin/$(OSNAME)/$(OSARCH)/static and no longer\n  have the _s suffix\n- The POCO_VERSION macro now is in its own header file, \"Poco/Version.h\". It is no longer\n  available through \"Poco/Foundation.h\".\n- added Poco::Net::HTTPCookie::escape() and Poco::Net::HTTPCookie::unescape().\n- fixed SF# 3021173: Thread (POSIX) returns uninitialised value for OS priority\n- fixed SF# 3040870: ThreadPool has no function to get assigned name\n- fixed SF# 3044303: Can't use own config file on Solaris & OSARCH_64BITS ignored\n- fixed SF# 2943896: AsyncChannel::log blocks\n- fixed a bug in Poco::Util::WinRegistryKey::getInt():\n  The size variable passed to RegQueryValueExW() should be initialized to the size\n  of the output buffer.\n- Added rudimentary support for compiling with Clang 2.0 (Xcode 4) on Mac OS X.\n- New build configurations for Mac OS X: Darwin32 and Darwin64 for explicit\n  32-bit and 64-bit builds. Note that the default Darwin build configuration\n  will build 64-bit on Snow Leopard and 32-bit on Leopard, but will always place\n  build products in Darwin/i386. The new Darwin32 and Darwin64 configurations\n  will use the correct directories.\n- fixed SF# 3051598: Bug in URL encoding\n- Poco::ThreadPool::stopAll() (and thus also the destructor) will now wait for each\n  pooled thread to terminate before returning. This fixes an issue with creating\n  and orderly shutting down a thread pool in a plugin. Previously, a pooled thread\n  in a thread pool created by a dynamically loaded library might still be running\n  when the plugin's shared library was unloaded, resulting in Bad Things happening.\n  This can now no longer happen. As a downside, a pooled thread that fails to\n  finish will block stopAll() and the destructor forever.\n- NetSSL_OpenSSL: for a SecureStreamSocket, available() now returns the number of bytes that\n  are pending in the SSL buffer (SSL_pending()), not the actual socket buffer.\n- Added Poco::Net::HTTPClientSession::secure() to check for a secure connection.\n- Poco::Net::HTTPRequest::setHost() now does not include the port number in the Host header\n  if it's either 80 or 443.\n- log messages can now optionally include source file path and line number\n- Poco::PatternFormatter can format source file path and line number (%U, %u)\n- logging macros (poco_information(), etc.) now use __LINE__ and __FILE__\n- new logging macros that incorporate Poco::format(): poco_information_f1(logger, format, arg) with up to 4 arguments\n- added Poco::Net::HTTPSession::attachSessionData() and Poco::Net::HTTPSession::sessionData()\n  to attach arbitrary data to a HTTP session.\n- added additional constructors to zlib stream classes that allow passing\n  a windowBits parameter to the underlying zlib library.\n- fixed a potential error handling issue in Poco::Net::SecureSocketImpl.\n- fixed SF# 3110272: RSACipherImpl bug.\n- fixed SF# 3081677: ConfigurationView's getRaw not retrieving xml attributes.\n- added basic support for Canonical XML and better pretty-printing support to Poco::XML::XMLWriter.\n- Poco::Util::AbstractConfiguration now supports events fired when changing or\n  removing properties.\n- XML: added support for finding DOM nodes by XPath-like\n  expressions. Only a very minimal subset of XPath is supported.\n  See Poco::XML::Element::getNodeByPath(), Poco::XML::Element::getNodeByPathNS()\n  and the same methods in Poco::XML::Document.\n- Poco::Timer: If the callback takes longer to execute than the\n  timer interval, the callback function will not be called until the next\n  proper interval. The number of skipped invocations since the last\n  invocation will be recorded and can be obtained by the callback\n  by calling skipped().\n- Poco::BinaryReader and Poco::BinaryWriter now support reading and\n  writing std::vectors of the supported basic types. Also, strings\n  can now be written in a different encoding (a Poco::TextEncoding\n  can be optionally passed to the constructor).\n- Poco::UUID::nil() and Poco::UUID::isNil() have been renamed to\n  Poco::UUID::null() and Poco::UUID::isNull(), respectively, to avoid\n  issues with Objective-C++ projects on Mac OS X and iOS where nil is\n  a system-provided macro.\n- Crypto bugfixes: RSACipherImpl now pads every block of data, not just the\n  last (or last two).\n- Improved Crypto testsuite by adding new tests\n- Added new Visual Studio project configurations: debug_static_mt and release_static_mt\n  (linking with static runtime libraries). The existing configurations debug_static\n  and release_static have been renamed to debug_static_md and release_static_md, respectively.\n  The suffixes of the static libraries have also changed. The static_md configurations\n  now build libraries with suffixes md[d], while the libraries built by the static_mt\n  configurations have mt[d] suffixes.\n- Added Visual Studio project files for 64-bit builds.\n- Added Visual Studio 2010 project files.\n- Removed the use of local static objects in various methods due to\n  their construction not being threadsafe (and thus leading to\n  potential race conditions) on Windows/Visual C++.\n- Fixed some warning on 64-bit Windows builds.\n- The name of the Data connector libraries have changed. They are now\n  named PocoDataMySQL, PocoDataODBC and PocoDataSQLite.\n- fixed SF# 3125498: Linux NetworkInterface::list() doesn't return IPv6 IPs\n- fixed SF# 3125457: IPv6 IPAddress tests are wrong\n- Added initialization functions for the NetSSL_OpenSSL and Crypto libraries.\n  These should be called instead of relying on automatic initialization,\n  implemented with static initializer objects, as this won't work with\n  statically linked executables (where the linker won't include the\n  static initializer object).\n  The functions are Poco::Crypto::initializeCrypto(), Poco::Crypto::uninitializeCrypto(),\n  Poco::Net::initializeSSL() and Poco::Net::uninitializeSSL().\n  Applications using Crypto and/or NetSSL should call these methods appropriately at\n  program startup and shutdown.\n  Note: In release 1.3.6, similar functions have been added to the Net library.\n\n\nRelease 1.3.6p2 (2010-01-15)\n============================\n\n- fixed an issue in the Windows implementation Poco::RWLock, where\n  tryReadLock() sometimes would return false even if no writers\n  were using the lock (fix contributed by Bjrn Carlsson)\n- added Poco::Environment::libraryVersion().\n- fixed SF# 2919461: Context ignores parameter cypherList\n- removed an unused enum from RSACipherImpl.cpp (Crypto)\n- integrated a new expat patch for CVE-2009-3560.\n- fixed SF# 2926458: SSL Context Problem. The Poco::Net::Context\n  class now makes sure that OpenSSL is properly initialized.\n- updated iPhone build configuration (contributed by Martin York)\n- fixed SF# 1815124 (reopened): XML Compile failed on VS7.1 with\n  XML_UNICODE_WCHAR_T\n- fixed SF# 2932647: FTPClientSession::getWorkingDirectory() returns a bad result\n\n\nRelease 1.3.6p1 (2009-12-21)\n============================\n\n- added support for using external zlib, pcre, expat and sqlite3 instead of\n  bundled ones (-DPOCO_UNBUNDLED, configure --unbundled)\n- fixed SF# 2911407: Add sh4 support\n- fixed SF# 2912746: RSAKey::EXP_LARGE doesn't work\n- fixed SF# 2904119: abstractstrategy uses std::set but do not includes it\n- fixed SF# 2909946: localtime NULL pointer\n- fixed SF# 2914986: potential expat DoS security issues (CVE-2009-3560 and CVE-2009-3720)\n- fixed SF# 2916305: SSL Manager crashes\n- fixed SF# 2903676: Tuple TypeHander does not handle composites.\n\n\nRelease 1.3.6 (2009-11-24)\n==========================\n\n- added Environment::processorCount()\n- added POCO_VERSION macro to Poco/Foundation.h\n- fixed SF# 2807527: Poco::Timer bug for long startInterval/periodic interval\n- fixed a bug similar to SF# 2807527 in Poco::Util::Timer.\n- fixed SF# 2795395: Constructor doesn't treat the params \"key\" and \"iv\"\n- fixed SF# 2804457: DateTime::checkLimit looks wrong\n- fixed SF# 2804546: DateTimeParser requires explicit RFC1123 format\n- added ReleaseArrayPolicy to Poco::SharedPtr\n- upgraded to SQLite 3.6.20\n- fixed SF# 2782709: Missing semicolons in \"Logger.h\" convenience\n- fixed SF# 2526407: DefaultStrategy.h ++it instead of it++ in a loop\n- fixed SF# 2502235: Poco STLPort patch\n- fixed SF# 2186643: Data::Statement::reset() not implemented in 1.3.3\n- fixed SF# 2164227: Allow File opened read only by FileInputSteam to be writable\n- fixed SF# 2791934: use of char_traits::copy in BufferedStreamBuf::underflow\n- fixed SF# 2807750: Support additional SQL types in SQLite\n- fixed documentation bugs in Timed/PriorityNotificationQueue\n- fixed SF# 2828401: Deadlock in SocketReactor/NotificationCenter (also fixes patch# 1956490)\n  NotificationCenter now uses a std::vector internally instead of a std::list, and the mutex is\n  no longer held while notifications are sent to observers.\n- fixed SF# 2835206: File_WIN32 not checking aganist INVALID_HANDLE_VALUE\n- fixed SF# 2841812: Posix ThreadImpl::sleepImpl throws exceptions on EINTR\n- fixed SF# 2839579: simple DoS for SSL TCPServer, HTTPS server\n  No SSL handshake is performed during accept() - the handshake is delayed until\n  sendBytes(), receiveBytes() or completeHandshake() is called for the first time.\n  This also allows for better handshake and certificate validation when using\n  nonblocking connections.\n- fixed SF# 2836049: Possible handle leak in FileStream\n  If sync() fails, close() now simply set's the stream's bad bit.\n  In any case, close() closes the file handle/descriptor.\n- fixed SF# 2814451: NetSSL: receiveBytes crashes if socket is closed\n- added a workaround for Vista service network initialization issue\n  (an Windows service using the Net library running under Vista will\n  crash in the call to WSAStartup() done in NetworkInitializer).\n  Workaround is to call WSAStartup() in the application's main().\n  Automatic call to WSAStartup() in the Net library can now be disabled\n  by compiling Net with -DPOCO_NET_NO_AUTOMATIC_WSASTARTUP. Also\n  the new Poco::Net::initializeNetwork() and Poco::Net::uninitializeNetwork()\n  functions can be used to call WSAStartup() and WSACleanup(), respectively,\n  in a platform-independent way (on platforms other than Windows, these\n  functions will simply do nothing).\n- added VCexpress build script support (contributed by Jolyon Wright)\n- fixed SF# 2851052: Poco::DirectoryIterator copy constructor is broken\n- fixed SF# 2851197: IPAddress ctor throw keyword missing\n- added Poco::ProtocolException\n- PageCompiler improvements: new tags, support for buffered output, etc.\n- better error reporting in Data MySQL connector (patch #2881270 by Jan \"HanzZ\" Kaluza)\n- fixed SF# 1892462: FTPClient:Choose explicitely between EPSV and PASV\n- fixed SF# 2806365: Option for PageCompiler to write output to different dir\n- fixed a documentation bug (wrong sample code) in Process::launch() documentation\n- added --header-output-dir option to PageCompiler\n- fixed SF# 2849144: Zip::Decompress notifications error\n- SAXParser has a new feature: \"http://www.appinf.com/features/enable-partial-reads\".\n  See ParserEngine::setEnablePartialReads() for a description of what this does.\n- fixed SF# 2876179: MySQL Signed/Unsigned value bug\n- fixed SF# 2877970: possible bug in timer task\n- fixed SF# 2874104: wrong parsing empty http headers\n- fixed SF# 2860694: Incorrect return code from SecureStreamSocketImpl::sendBytes\n- fixed SF# 2849750: Possible bug with XMLWriter?\n- added MailMessage::encodeWord() to support RFC 2047 word encoded\n  mail header fields when sending out mail containing non-ASCII\n  characters.\n- fixed SF# 2890975: SMTPClientSession bug with 7BIT encoding\n- fixed an issue with retrieving the value of socket options on Windows 7.\n  Before obtaining the value of a socket, we now initialize the variable receiving the\n  socket option value to zero.\n- fixed SF# 2836141: Documentation errors\n- fixed SF# 2864232: Socket::select() does not detect closed sockets on windows\n- fixed SF# 2812143: Socket::select() should check socket descriptors...\n- fixed SF# 2801750: NetworkInterface <iface-Obj>forName returns wrong subnetMask\n- fixed SF# 2816315: Problem with POSIX Thread::sleepImpl\n- fixed SF# 2795646: IPv6 address parsing bug\n- fixed #0000092: ServerApplication::waitForTerminationRequest(), SIGINT and GDB.\n  Poco::Util::ServerApplication::waitForTerminationRequest() no longer registers a\n  signal handler for SIGINT if the environment variable POCO_ENABLE_DEBUGGER\n  is defined.\n- fixed SF# 2896070: Poco::Net::Context with non-ASCII paths\n- added Unicode Surrogate support to Poco::UTF16Encoding.\n  See Poco::TextEncoding::queryConvert() and Poco::TextEncoding::sequenceLength()\n  for how this is implemented. Contributed by Philippe Cuvillier.\n- fixed SF# 2897650: [branch 1.3.6] Net.SocketAddress won't compile for CYGWIN\n- fixed SF# 2896161: Building on Windows fails when basedir has space in it\n- fixed SF# 2864380: Memory leak when using secure sockets\n- NetSSL_OpenSSL: the SSL/TLS session cache is now disabled by default and\n  can be enabled per Context using Poco::Net::Context::enableSessionCache().\n- fixed SF# 2899039: Wrong DST handling in LocalDateTime\n- added RWLock::ScopedReadLock and RWLock::ScopedWriteLock (contributed by Marc Chevrier)\n- added Thread::TID type, as well as Thread::tid() and Thread::currentTid() to obtain the native\n  thread handle/ID\n- added Zip file comment support\n- On Windows, Poco::SharedLibrary::load() now uses LoadLibraryEx instead of LoadLibrary\n  and uses the LOAD_WITH_ALTERED_SEARCH_PATH if an absolute path is specified. This will\n  add the directory containing the library to the search path for DLLs that the\n  loaded library depends upon.\n- Mac OS X build settings now match those used by default Xcode projects, making linking the\n  POCO libs to Xcode projects easier\n- Replaced use of std::valarray in Poco::Net::ICMPEventArgs with std::vector due to issues with\n  std::valarray together with STDCXX debug mode on OS X\n\n\nRelease 1.3.5 (2009-05-11)\n==========================\n\n- fixed SF# 2779410: Poco::Data::ODBC::HandleException impovement\n- fixed wrong exception text for Poco::UnhandledException\n- Fixed a problem with SSL shutdown that causes clients (web browsers)\n  to hang when the server attempts to perform a clean SSL shutdown. We now call\n  SSL_shutdown() once, even if the shutdown is not complete after the first call.\n- added Poco::Crypto::X509Certificate::save()\n- fixed a bug in Poco::Zip::Decompress that results in wrong paths for extracted files\n- fixed a bug in Poco::Zip::ZipManipulator where the Zip file was opened in text format\n  on Windows.\n- added Poco::Crypto::X509Certificate::issuedBy() to verify certificate chain.\n- fixed 0000089: Thread::sleep() on Linux is extremely inaccurate\n- added methods to extract the contents of specific fields from the\n  subject and issuer distinguished names of a certificate.\n\n\nRelease 1.3.4 (2009-04-21)\n==========================\n\n- fixed SF# 2611804: PropertyFileConfiguration continuation lines\n- fixed SF# 2529788: ServerApplication::beDaemon() broken\n- fixed SF# 2445467: Bug in Thread_WIN32.cpp\n- Improved performance of HTTP Server by removing some\n  string copy operations\n- fixed SF# 2310735: HTTPServer: Keep-Alive only works with send()\n- fixed appinf.com IP address in Net testsuite\n- fixed RFC-00188: NumberFormatter and float/double numbers\n- added --pidfile option to ServerApplication on Unix\n- fixed SF# 2499504: Bug in Win32_Thread when using from dll (fixed also for POSIX threads)\n- fixed SF# 2465794: HTTPServerRequestImpl memory leak\n- fixed SF# 2583934: Zip: No Unix permissions set\n- the NetSSL_OpenSSL library has been heavily refactored\n- added NumberFormatter::append*() and DateTimeFormatter::append() functions\n- use NumberFormatter::append() and DateTimeFormatter::append() instead of format() where\n  it makes sense to gain some performance\n- added system.dateTime and system.pid to Poco::Util::SystemConfiguration\n- added %F format specifier (fractional seconds/microseconds) to DateTimeFormatter,\n  DateTimeParser and PatternFormatter.\n- fixed SF# 2630476: Thread_POSIX::setStackSize() failure with g++ 4.3\n- fixed SF# 2679279: Handling of -- option broken\n- added compile options to reduce memory footprint of statically linked applications\n  by excluding various classes from automatically being linked.\n  See the POCO_NO_* macros in Poco/Config.h.\n- fixed SF# 2644940: on Windows the COMPUTER-NAME and the HOSTNAME can be different\n- added DNS::hostName() function\n- added build configuration for iPhone (using Apple's SDK)\n- basic support for AIX 5.x/xlC 8\n- fixed a bug resulting in a badly formatted exception message with IOException\n  thrown due to a socket-related error\n- fixed SF# 2644718: NetworkInterface name conflict in MinGW\n- added a missing #include to CryptoTransform.h\n- fixed SF# 2635377: HTTPServer::HTTPServer should take AutoPtr<HTTPServerParams>\n- replaced plain pointers with smart pointers in some interfaces\n- upgraded to sqlite 3.6.13\n- improved Data::SQLite error reporting\n- Poco::Glob now works with UTF-8 encoded strings and supports case-insensitive comparison.\n  This also fixes SF# 1944831: Glob::glob on windows should be case insensitve\n- added Twitter client sample to Net library\n- Fixed SF# 2513643: Seg fault in Poco::UTF8::toLower on 64-bit Linux\n- Poco::Data::SessionPool: the janitor can be disabled by specifying a zero idle time.\n- added Poco::Data::SessionPool::customizeSession()\n- added support for different SQLite transaction modes (DEFERRED, IMMEDIATE, EXCLUSIVE)\n- fixed a few wrong #if POCO_HAVE_IPv6 in the Net library\n- added support for creating an initialized, but unconnected StreamSocket.\n- added File::isDevice()\n- added family() member function to SocketAddress,\n- Data::SQLite: added support for automatic retries if the database is locked\n- XMLConfiguration is now writable\n- fixed an IPv6 implementation for Windows bug in HostEntry\n- Timer class improvement: interval between callback is no longer influenced by the\n  time needed to execute the callback.\n- added PriorityNotificationQueue and TimedNotificationQueue classes to Foundation.\n  These are variants of the NotificationQueue class that support priority and\n  timestamp-tagged notifications.\n- added Poco::Util::Timer class. This implements a timer that can schedule different\n  tasks at different times, using only one thread.\n- the signatures of Poco::NotificationQueue and Poco::NotificationCenter member functions\n  have been changed to accept a Poco::Notification::Ptr instead of Poco::Notification*\n  to improve exception safety. This change should be transparent and fully backwards\n  compatible. The signature of the methods returning a Poco::Notification* have not been\n  changed for backwards compatibility. It is recommended, that any Notification* obtained\n  should be immediately assigned to a Notification::Ptr.\n- SQLite::SessionImpl::isTransaction() now uses sqlite3_get_autocommit() to find out\n  about the transaction state.\n- refactored Crypto library to make it independent from NetSSL_OpenSSL.\n- added support for RSA-MD5 digital signatures to Crypto library.\n- removed SSLInitializer from NetSSL library (now moved to Crypto library)\n- added build configs for static libraries to Crypto library\n- OpenSSL now depends on Crypto library (which makes more sense than\n  vice versa, as it was before). Poco::Net::X509Certificate is now\n  a subclass of Poco::Crypto::X509Certificate (adding the verify()\n  member function) and the Poco::Net::SSLInitializer class was\n  moved to Poco::Crypto::OpenSSLInitializer.\n- added build configs for static libraries to Zip\n- added batch mode to CppUnit::WinTestRunner.\n  WinTestRunnerApp supports a batch mode, which runs the\n  test using the standard text-based TestRunner from CppUnit.\n  To enable batch mode, start the application with the \"/b\"\n  or \"/B\" command line argument. Optionally, a path to a file\n  where the test output will be written to may be given:\n  \"/b:<path>\" or \"/B:<path>\".\n  When run in batch mode, the exit code of the application\n  will denote test success (0) or failure (1).\n- testsuites now also work for static builds on Windows\n- The IPv6 support for Windows now basically works (Net library compiled with POCO_HAVE_IPv6)\n- fixed a potential error when shutting down openssl in a statically linked application\n- added static build configs to Data library\n- added Poco::AtomicCounter class, which uses OS-specific APIs for atomic (thread-safe)\n  manipulation of counter values.\n- Poco::RefCountedObject and Poco::SharedPtr now use Poco::AtomicCounter for\n  reference counting\n- fixed SF# 2765569: LoadConfiguration failing from current directory\n\n\nRelease 1.3.3p1 (2008-10-09)\n============================\n\n- Fixed SF# 2153031: 1.3.3 Crypto won't compile on 64-bit Linux\n- Fixed a warning in MySQL connector\n- Updated README\n- The global Makefile in the Zip archive is no longer broken\n\n\nRelease 1.3.3 (2008-10-07)\n==========================\n\n- Threads now have optional user-settable stack size (if the OS supports that feature)\n- Events now support simplified delegate syntax based on delegate function template.\n  See Poco::AbstractEvent documentation for new syntax.\n- Cache supports new access expire strategy.\n- Upgraded to SQLite 3.6.2\n- Upgraded to PCRE 7.8\n- added HttpOnly support to Poco::Net::HTTPCookie\n- NetworkInterface now has displayName() member (useful only on Windows)\n- Poco::Util::WinRegistryKey now has a read-only mode\n- Poco::Util::WinRegistryKey::deleteKey() can now recursively delete registry keys\n- Poco::File::created() now returns 0 if the creation date/time is not known, as\n  it's the case on most Unix platforms (including Linux).\n  On FreeBSD and Mac OS X, it returns the real creation time.\n- Time interval based log file rotation (Poco::FileChannel) now works\n  correctly. Since there's no reliable and portable way to find out the creation\n  date of a file (Windows has the tunneling \"feature\", most Unixes don't provide\n  the creation date), the creation/rotation date of the log file is written into\n  the log file as the first line.\n- added Environment::nodeId() for obtaining the Ethernet address of the system\n  (this is now also used by UUIDGenerator - the corresponding code from UUIDGenerator\n  was moved into Environment)\n- added a release policy argument to SharedPtr template\n- Socket::select() will no longer throw an InvalidArgumentException\n  on Windows when called with no sockets at all. If all three socket\n  sets are empty, Socket::select() will return 0 immediately.\n- SocketReactor::run() now catches exceptions and reports them via\n  the ErrorHandler.\n- SocketReactor has a new IdleNotification, which will be posted when\n  the SocketReactor has no sockets to handle.\n- added referenceCount() method to Poco::SharedPtr.\n- POCO now builds with GCC 4.3 (but there are some stupid warnings:\n  \"suggest parentheses around && within ||\".\n- Solution and project files for Visual Studio 2008 are included\n- The Zip library is now officially part of the standard POCO release.\n- The Crypto library (based on OpenSSL) has been added. The original code\n  was kindly contributed by Ferdinand Beyer.\n- A Data Connector to MySQL, contributed by Sergey Kholodilov, is now part\n  of the POCO release.\n- fixed SF# 1859738: AsyncChannel stall\n- fixed SF# 1815124: XML Compile failed on VS7.1 with XML_UNICODE_WCHAR_T\n- fixed SF# 1867340: Net and NetSSL additional dependency not set - ws2_32.lib\n- fixed SF# 1871946: no exception thrown on error\n- fixed SF# 1881113: LinearHashTable does not conform to stl iterators\n- fixed SF# 1899808: HTMLForm.load() should call clear() first\n- fixed SF# 2030074: Cookie problem with .NET server\n- fixed SF# 2009707: small bug in Net/ICMPPacketImpl.cpp\n- fixed SF# 1988579: Intel Warning: invalid multibyte character sequence\n- fixed SF# 2007486: Please clarify license for Data/samples/*\n- fixed SF# 1985180: Poco::Net::DNS multithreading issue\n- fixed SF# 1968106: DigestOutputStream losing data\n- fixed SF# 1980478: FileChannel loses messages with \"archive\"=\"timestamp\"\n- fixed SF# 1906481: mingw build WC_NO_BEST_FIT_CHARS is not defined\n- fixed SF# 1916763: Bug in Activity?\n- fixed SF# 1956300: HTTPServerConnection hanging\n- fixed SF# 1963214: Typo in documentation for NumberParser::parseFloat\n- fixed SF# 1981865: Cygwin Makefile lacks ThreadTarget.cpp\n- fixed SF# 1981130: pointless comparison of unsigned integer with zero\n- fixed SF# 1943728: POCO_APP_MAIN namespace issue\n- fixed SF# 1981139: initial value of reference to non-const must be an lvalue\n- fixed SF# 1995073: setupRegistry is broken if POCO_WIN32_UTF8 enabled\n- fixed SF# 1981125: std::swap_ranges overloading resolution failed\n- fixed SF# 2019857: Memory leak in Data::ODBC Extractor\n- fixed SF# 1916761: Bug in Stopwatch?\n- fixed SF# 1951443: NetworkInterface::list BSD/QNX no netmask and broadcast addr\n- fixed SF# 1935310: Unhandled characters in Windows1252Encoding\n- fixed SF# 1948361: a little bug for win32\n- fixed SF# 1896482: tryReadLock intermittent error\n- workaround for SF# 1959059: Poco::SignalHandler deadlock\n  the SignalHandler can now be disabled globally by adding a\n  #define POCO_NO_SIGNAL_HANDLER to Poco/Config.h\n- fixed SF# 2012050: Configuration key created on read access\n- fixed SF# 1895483: PCRE - possible buffer overflow\n- fixed SF# 2062835: Logfile _creationDate is wrong\n- fixed SF# 2118943: out_of_bound access in Poco::Data::BLOB:rawContent\n- fixed SF# 2121732: Prevent InvalidArgumentException in SocketReactor\n- fixed SF# 1891132: Poco::Data::StatementImpl::executeWithLimit is not correct\n- fixed SF# 1951604: POCO refuses to compile with g++ 4.3.0\n- fixed SF# 1954327: CYGWIN's pthread does not define PTHREAD_STACK_MIN\n- fixed SF# 2124636: Discrepancy between FileWIN32(U)::handleLastError\n- fixed SF# 1558300: MinGW/MSYS Builds\n- fixed SF# 2123266: Memory leak under QNX6 with dinkum library\n- fixed SF# 2140411: ScopedUnlock documentation bug\n- fixed SF# 2036460: UUID regression tests are failing on Linux with g++ 4.3.1\n- fixed SF# 2150438: Tuple TypeHandler position increment size is wrong\n\n\nRelease 1.3.2 (2008-02-04)\n==========================\n\nFoundation, XML, Net, Util:\n- added POCO_NO_SHAREDMEMORY to Config.h\n- POCO_NO_WSTRING now really disables all wide string related calls\n- added template specialization for string hashfunction (performance)\n- XML parser performance improvements (SAX parser is now up to 40 % faster\n- added parseMemoryNP() to XMLReader and friends\n- URIStreamOpener improvement: redirect logic is now in URIStreamOpener.\n  this enables support for redirects from http to https.\n- added support for temporary redirects and useproxy return code\n- added getBlocking() to Socket\n- added File::isHidden()\n- better WIN64 support (AMD64 and IA64 platforms are recognized)\n- added support for timed lock operations to [Fast]Mutex\n- SharedLibrary: dlopen() is called with RTLD_GLOBAL instead of RTLD_LOCAL\n  (see http://gcc.gnu.org/faq.html#dso)\n- Poco::Timer threads can now run with a specified priority\n- added testcase for SF# 1774351\n- fixed SF# 1784772: Message::swap omits _tid mem\n- fixed SF# 1790894: IPAddress(addr,family) doesn't fail on invalid address\n- fixed SF# 1804395: Constructor argument name wrong\n- fixed SF# 1806807: XMLWriter::characters should ignore empty strings\n- fixed SF# 1806994: property application.runAsService set too late\n- fixed SF# 1828908: HTMLForm does not encode '+'\n- fixed SF# 1831871: Windows configuration file line endings not correct.\n- fixed SF# 1845545: TCP server hangs on shutdown\n- fixed SF# 1846734: Option::validator() does not behave according to doc\n- fixed SF# 1856567: Assertion in DateTimeParser::tryParse()\n- fixed SF# 1864832: HTTP server sendFile() uses incorrect date\n- HTTPServerResponseImpl now always sets the Date header automatically\n  in the constructor.\n- fixed SF# 1787667: DateTimeFormatter and time related classes\n  (also SF# 1800031: The wrong behavior of time related classes)\n- fixed SF# 1829700: TaskManager::_taskList contains tasks that never started\n- fixed SF# 1834127: Anonymous enums in Tuple.h result in invalid C++\n- fixed SF# 1834130: RunnableAdapter::operator= not returning a value\n- fixed SF# 1873924: Add exception code to NetException\n- fixed SF# 1873929: SMTPClientSession support for name in sender field\n- logging performance improvements (PatternFormatter)\n- fixed SF# 1883871: TypeList operator < fails for tuples with duplicate values\n- CYGWIN build works again (most things work but Foundation testsuite still fails)\n- new build configuration for Digi Embedded Linux (ARM9, uclibc)\n- new build configuration for PowerPC Linux\n\nData:\n- fixed SF# 1724388: ODBC Diagnostics\n- fixed SF# 1804797: ODBC Statement multiple execution fails\n- fixed SF# 1803435: SessionPool onJanitorTimer called too often?\n- fixed SF# 1851997: Undefined Behavior in ODBC::Preparation\n- updated SQlite to 3.5.5\n\n\nRelease 1.3.1 (2007-08-08)\n==========================\n\nFoundation, XML, Net, Util:\n- DynamicAny fixes for char conversions\n- fixed SF# 1733362: Strange timeout handling in SocketImpl::poll and Socket::select\n- fixed SF patch# 1728912: crash in POCO on Solaris\n- fixed SF# 1732138: Bug in WinRegistryConfiguration::getString\n- fixed SF# 1730790: Reference counting breaks NetworkInterface::list()\n- fixed SF# 1720733: Poco::SignalHandler bug\n- fixed SF# 1718724: Poco::StreamCopier::copyStream loops forever\n- fixed SF# 1718437: HashMap bug\n- changed LinearHashTable iterator implementation. less templates -> good thing.\n- fixed SF# 1733964: DynamicAny compile error\n- UUIDGenerator: fixed infinite loop with non ethernet interfaces\n- updated expat to 2.0.1\n- fixed SF# 1730566: HTTP server throws exception\n- Glob supports symbolic links (additional flag to control behavior)\n- fixed a problem with non blocking connect in NetSSL_OpenSSL\n  (see http://www.appinf.com/poco/wiki/tiki-view_forum_thread.php?comments_parentId=441&topics_threshold=0&topics_offset=29&topics_sort_mode=commentDate_desc&topics_find=&forumId=6)\n- fixed a problem with SSL renegotiation in NetSSL_OpenSSL (thanks to Sanjay Chouksey for the fix)\n- fixed SF# 1714753: NetSSL_OpenSSL: HTTPS connections fail with wildcard certs\n- HTTPClientSession: set Host header only if it's not already set (proposed by EHL)\n- NetworkInterface (Windows): Loopback interface now has correct netmask;\n  interfaces that do not have an IP address assigned are no longer reported.\n- Fixes for VC++ W4 warnings from EHL\n- SharedMemory: first constructor has an additional \"server\" parameter\n  Setting to true does not unlink the shared memory region when the SharedMemory object is destroyed. (Alessandro Oliveira Ungaro)\n- fixed SF# 1768231: MemoryPool constructor\n\nData:\n- fixed SF# 1739989: Data::RecordSet::operator = () (in 1.3 branch)\n- fixed SF# 1747525: SQLite, Transactions and Session Pooling (in 1.3 branch)\n- upgraded to SQLite 3.4.1\n\n\nRelease 1.3.0 (2007-05-07)\n==========================\n\n- added HashMap, HashSet classes\n- the HashFunction class template has been changed in an incompatible\n  way. The member function formerly named hash() is now the function\n  call operator. If you have defined your own HashFunction classes,\n  you have to update your code. Sorry for the inconvenience.\n- added Poco::Tuple\n- added AbstractCache::getAllKeys(), improved performance of the get operation\n- fixed AbstractCache::size() to do cache replacement before returning the size\n- added additional match() method to RegularExpression and documented the fact that the simple\n  match() method internally sets RE_ANCHORED and RE_NOTEMPTY.\n- added ExpirationDecorator template. Decorates data types so that they can be used with UniqueExpireCaches\n- added operator ! to AutoPtr and SharedPtr\n- Buffer uses std::size_t instead of int\n- Exception::what() now returns exception name instead of message\n- added poco_ndc_dbg() macro (same as poco_ndc(), but only enabled in debug builds)\n- added Environment::get(name, defaultValue);\n- Foundation.h now includes Config.h at the very beginning.\n- added replace() and replaceInPlace() to Poco/String.h\n- added AutoPtr::assign() and SharedPtr::assign()\n- added operator () to AbstractEvent\n- gcc Makefiles now strip release builds\n- Void now has a == and != operator\n- Base64Encoder and HexBinaryEncoder now support an unlimited line length\n  (no newlines written), by specifying a line length of 0\n- NumberParser now has stricter syntax requirements: garbage following a number leads to a SyntaxException\n  (Thanks to phireis@gmail.com for the suggestion)\n- fixed SF# 1676830: Don't use -rpath in libraries\n- fixed SF# 1670279: AbstractConfiguration::unckeckedExpand crash\n- fixed a warning in Hashtable\n- HTTPClientSession now uses a keepAliveTimeout for better persistent connection handling\n- added DateTime::makeUTC() and DateTime::makeLocal()\n- added another constructor to LocalDateTime\n- POCO_WIN32_UTF8 is ignored on non-Windows platforms\n- fixed a timeout bug (with NetSSL) in HTTPSession\n- AsyncChannel is automatically opened with first log()\n- minor fix to NotificationQueue sample (reported by Laszlo Keresztfalvi)\n- added File::canExecute() and File::setExecutable()\n- added SharedMemory class to Foundation\n- added FileStream, FileInputStream, FileOutputStream to Foundation\n- added NodeAppender class to XML for faster DOM tree creation\n- HTTPServerRequest and HTTPServerResponse are now abstract base classes,\n  actual functionality has moved into HTTPServerRequestImpl and\n  HTTPServerResponseImpl. This allows us to plug other HTTP servers\n  into POCO.\n- added DynamicAny class to Foundation\n- replaced std::fstream with Poco::FileStream across POCO.\n- added Poco::Checksum class to Foundation.\n- fixed SF# 1700811: conflict in threadpool\n- bugfix: File::moveTo() does not work if the target is a directory\n- File::copyTo() and File::moveTo() now copy/move directories recursively\n- refactored NetworkInterface (now using pimpl idiom);\n  added broadcast address and netmask support\n- fixed SF# 1688982: POP3ClientSession fails when retrieving mails with attachment\n- fixed SF# 1655104: Enhance Poco::TextEncoding functionality\n- added Poco::Condition class, implementing a POSIX-style condition variable\n- fixed a bug in File::create() for Windows\n- added poco_static_assert (imported from boost)\n- added Thread::join(timeout) and Thread::tryJoin()\n- ClassLoader support for named manifests (see ClassLibrary.h - POCO_EXPORT_NAMED_MANIFEST)\n- POCO_WIN32_UTF8: UNICODE #define is no longer required (and no longer\n  automatically defined in POCO_WIN32_UTF8 is defined)\n- PCRE: upgraded to PCRE version 7.1\n- fixed SF# 1682162: Suggestion on thread priority\n- fixed SF# 1613460: MSVC/STLPort warnings\n- fixed SF# 1709358: Format double percent std::String bug\n- added WindowsConsoleChannel class to Foundation\n- added AutoPtr::unsafeCast<>() and SharedPtr::unsafeCast<>()\n- fixed SF# 1708552: Failed to build on arm and powerpc\n- fixed SF$ 1708529: Failed to build using GCC 4.3: missing #includes\n- fixed SF# 1710053: LogStream proposal\n- fixed a bug involving empty root directories in Windows DirectoryIterator implementation\n  (see http://www.appinf.com/poco/wiki/tiki-view_forum_thread.php?comments_parentId=343&forumId=6)\n- robustness improvements to ActiveMethod - removed the opportunity for memory leaks in\n  case something goes while invoking the method\n- made C library usage more C++-like - use C++ headers (e.g. <cstring>) instead of\n  C ones (<string.h>). Also, use C library functions in std namespace.\n- added Unicode and UTF8String for improved Unicode support.\n  The Unicode class can be used to obtain the Unicode properties of a character.\n  The UTF8 class provides case insensitive comparison and case conversion\n  for UTF-8 encoded strings.\n- added UnWindows.h header file, replaced all #include <windows.h> with #include \"Poco/UnWindows.h\".\n  See the Poco/UnWindows.h header file for a rationale and explanations.\n- fixed SF# 1713820: StreamSocketImpl::sendBytes sends too many bytes\n- File::copyTo(): on Windows, the copy now always has the read-only flag reset, to be consistent\n  with other platforms.\n- With Microsoft Visual C++, the necessary POCO libraries are now implicitly linked when\n  the corresponding header files are included (#pragma comment(lib, \"PocoXYZ.lib\") is used).\n  To disable this, compile POCO with the preprocessor symbol POCO_NO_AUTOMATIC_LIBS #define'd\n  (see Poco/Foundation.h and Poco/Config.h).\n- The Visual Studio project files for the POCO libraries now include configurations\n  for building static libraries.\n\n\nRelease 1.2.9 (2007-02-26)\n==========================\n\n- fixed a formatting problem in Util::HelpFormatter\n- HTTPClientSession::sendRequest() now attempts to send the complete request in one network packet.\n- improved network performance of ChunkedOutputStream: chunk size and chunk data\n  are sent in one network packet if possible\n- fixed SF# 1655035: Wrong expires field calculation in HTTPCookie\n  (thanks to Sergey N. Yatskevich for this and other fixes)\n- fixed SF# 1655049: Fix discrepancy of a code to the description\n- fixed SF# 1655170: Poco::Timezone::standardName() problem on WIN32\n- fixed SF# 1629095: POCO_WIN32_UTF8 problem\n  There is a new function Path::transcode() that can be used to convert a path (or any other string)\n  from UTF-8 to the current Windows code page. This string can the be passed as a filename\n  to an fstream or fopen(). This function only does the conversion on Windows,\n  and only, if POCO_WIN32_UTF8 is defined. Otherwise, it simply returns the unmodified argument.\n- fixed SF# 1659607: Probably a bug in Poco::Net::DialogSocket\n- HTTPServer network performance improvement: responses that fit into a single network packet\n  sent with HTTPServerResponse::sendFile() or the new HTTPServerResponse::sendBuffer() are\n  sent in only one packet.\n- added HTTPServerResponse::sendBuffer()\n- HTTPServer now sends a Bad Request response if it fails to parse the HTTP request header.\n- HTTPServer now sends an Internal Server Error response if the request handler throws an\n  exception prior to sending a response.- enabled TCP_NODELAY per default on TCPServer/HTTPServer\n- fixed a bug in HTTP persistent connection handling\n  (server does not send Connection: close when it reaches connection maximum)\n- HTMLForm - POST submission of URL encoded form no longer uses chunked transfer encoding\n  (thus improving interoperability with certain web servers)\n- integrated Environment.cpp from Main (missing get(var, default))\n- added missing AutoPtr include to Util/Application\n  (and using Poco::AutoPtr is no longer necessary for POCO_APP_MAIN macro)\n- fixed SF# 1635420: Per Regents of the University of Calfornia letter,\n  remove advertising from BSD licensed parts\n- fixed SF# 1633133: MultipartWriter writes superluous CR-LF at beginning\n\n\nRelease 1.2.8 (2007-01-04)\n==========================\n\n- fixed SF# 1613906: Util/Application.h and GCC 3.3\n- fixed a byte order issue (failed test) in IPv6 address formatting\n- fixed SF# 1626640: Poco::Net::SocketReactor bug\n- fixed client side chunked transfer encoding handling\n- fixed client side persistent connection handling\n- fixed SF# 1623536: HTTP Server Chunked Transfer Encoding Bug\n- improved HTTP server exception text\n- fixed SF# 1616294: KeepAlive HTTPServerSession patch\n- fixed SF# 1616296: Trivial Poco::TaskCustomNotification patch\n- fixed SF# 1619282: PurgeStrategy bug fix\n- fixed SF# 1620855: Format problem\n  there is a new format specifier %z for std::size_t, as well as a new\n  flag ? for %d, %i, %o, %x meaning any signed or unsigned integer\n\n\nRelease 1.2.7 (2006-12-07)\n==========================\n\n- Poco::File: fixed root directory handling\n- fixed UUIDGenerator documentation\n- clarified Application::setUnixOptions() documentation\n- fixes for issue [SOAPLite Transport 0000023]: SOAP Transport Listener should be able to use existing HTTPServer instance\n- fixing mantis issues 13, 14, 15, 16, 17, 18, 19, 21\n- fixed SF# 1597022: Signed/unsigned warning in StringTokenizer::operator[]\n- fixed SF# 1598601: Message::op= leaks\n- fixed SF# 1605960: PatternFormatter crashes on custom property\n- fixed SF# 1605950: Memory leak in Logger sample code\n- fixed SF# 1591635: Copy Paste Error in sample code\n- fixed SF# 1591512: SMTPClientSession response stream\n- fixed SF #1592776: LayeredConfiguration: getRaw should enumerate in reverse order\n- SF Patch # 1599848 ] VS 2005 Util build fails\n- Logger::dump() now uses std::size_t instead of int for buffer size\n- LayeredConfiguration now supports a priority value for each configuration.\n  Also, it's possible to specify for each configuration added whether it\n  should be writeable.\n- ServerApplication: cd to root directory only if running as a daemon\n- added Message::swap()\n- improvements to build system:\n  global Makefile has correct dependencies for samples\n  on Windows, samples build after libraries are ready\n  configure supports --no-wstring and --no-fpenvironment flags\n  build system supports POCO_FLAGS environment variable for compiler flags\n- RemoteGen: fixed error handling for write protected files (SystemException)\n  fixing integral constant overflow messages with large cache expiration, m_ support for type serializers,\n  case-insensitive comparison added\n\n\nRelease 1.2.6 (2006-11-19)\n==========================\n\n- added additional match() method to RegularExpression and documented the fact that the simple\n  match() method internally sets RE_ANCHORED and RE_NOTEMPTY.\n- added ExpirationDecorator template. Decorates data types so that they can be used with UniqueExpireCaches\n- added operator ! to AutoPtr and SharedPtr\n- Buffer uses std::size_t instead of int\n- added poco_ndc_dbg() macro (same as poco_ndc(), but only enabled in debug builds)\n- Foundation.h now includes Config.h at the very beginning.\n- added AutoPtr::assign() and SharedPtr::assign()\n- added operator () to AbstractEvent\n- gcc Makefiles now strip release builds\n- documentation improvements\n\n\nRelease 1.2.5 (2006-10-23)\n==========================\n\n- Improved LoggingConfigurator: channel creation and configuration is now a two-step process.\n  This means that the previous problems with PropertyFileConfiguration and IniFileConfiguration when referencing other channels are solved.\n- improved options handling: better handling of (non) ambiguities.\n  If both an option named \"help\" and one named \"helper\" is specified, this no longer causes ambiguity errors.\n- added check for duplicate option definition\n- ThreadPool bugfix: fixed a crash that occurs on Linux multiprocessor machines\n  (caused by an thread unsafe string assignment corrupting the heap...)\n  (SF# 1575315)\n- improved ThreadPool performance\n- XML now compiles with -DXML_UNICODE_WCHAR_T (SF# 1575174)\n- fixed SF# 1572757: HTML forms can have more than one key/value pair with the same name\n- got rid of the dynamic casts in Events, Events/Cache: simpler/faster Delegate < operator,\n  prevents some rare dynamic casts error from occuring when using StrategyCollection with Caches\n- improvements to Logger and LoggingConfigurator:\n  * added Logger::unsafeGet()\n  * added Logger::setProperty(loggerName, propertyName, value)\n  * LoggingConfigurator now correctly (re)configures existing Loggers\n    (prior to this change, if a Logger named \"a.b.c\" existed before\n    the LoggingConfigurator started its work, and the LoggingConfigurator\n    configured a Logger named \"a.b\", then \"a.b.c\" would not inherit\n    the new configuration).\n- improvements to SplitterChannel and EventLogChannel configuration\n- improved LoggingRegistry exception messages\n- MessageHeader::read() is more liberal with malformed message headers.\n  This fixes problems with certain network cameras sending malformed HTTP headers.\n\n\nRelease 1.2.4 (2006-10-02)\n==========================\n\n- some code beautifying and improvements to comments\n- DOMParser now automatically sets FEATURE_NAMESPACE_PREFIXES\n- fixed SF #1567051:  DOMBuilder/DOMParser/NamespaceStrategy bug\n- fixed SF #1567364: POCO_APP_MAIN\n- added Document::getElementById() (two-argument) and getElementByIdNS()\n- added another test for DOMParser\n- added AutoPtr::isNull() (to be consistent with SharedPtr)\n- this release again compiles on PA-RISC HP-UX systems with aCC\n- added CMAKE support files contributed by Andrew J. P. Maclean\n\n\nRelease 1.2.3 (2006-09-14)\n==========================\n\n- configure script now checks if (auto)selected configuration is supported\n- fixed SF #1552904: NamedEvent bug?\n- fixed SF #1552787: POCO not handling EINTR\n- fixed SF #1552846: Random::~Random uses scalar delete\n- fixed SF #1552987: TLSSlot should explicitly default-construct _value\n- IPAddress no longer accepts an empty address string\n- split up Observer.h into AbstractObserver.h and Observer.h\n- added NObserver class template which supports an AutoPtr\n  argument for the notification callback\n- changed EchoServer sample to use NObserver\n- some Windows-specific files were missing in the tarballs\n\n\nRelease 1.2.2 (2006-09-01)\n==========================\n\n- fixed SF # 1549973: NotificationCenter::hasObservers() returns wrong result\n- fixed a memory leak in EchoServer sample\n- fixed SocketReactor TimeoutNotification bug (SF #1549365, SocketNotifier::addObserver() incorrect behavior)\n- fixed SF# 1549513: MultipartReader does not work with Unix-style linefeeds\n- MailMessage and HTMLForm: processing of multipart messages will no longer fail if a PartHandler does not read all data from the part stream.\n- added additional test case (Unix-style line ends) to MultipartReaderTest\n\n\nRelease 1.2.1 (2006-08-29)\n==========================\n\n- fixed Config.h header (no more #undefs)\n\nRelease 1.2.0 (2006-08-29)\n==========================\n\n- DateTime fixes: Julian Day is no longer stored internally.\n  Times (hours, minutes, seconds, ...) are now always taken from an utcValue (if available) and not from the Julian day.\n  The Julian day is only used for calculating year, month and day (except when the Julian day is the only thing we have)\n  This helps us get rid of rounding errors that the Julian Day arithmetic introduced.- on Windows, UUIDGenerator no longer uses Netbios, but GetAdaptersInfo instead\n- The main Makefile now has correct dependencies\n- updated poco-doc.pl with latest version by Caleb Epstein\n- fixed SF #1542722: InflatingInputStream: buffer error\n- improved Windows UTF-8 support\n- added Logger::names()\n- added configure script and make install target\n- XMLWriter bugfix: pretty-print bug with characters() and rawCharacters()\n- improvements to build system: support builds outside of source tree\n- added header doc conversion tool contributed by Caleb Epstein\n- fixed SF #1542618 (build/config/Linux patch)\n- bugfix: BinaryReader/BinaryWriter BOM is now 16 bits, as documented\n- fixed SF #1542247 (Compiler warning from OptionCallback)\n- fixed SF #1542253 (ServerApplication::handleOption doesn't call Application::handleOption)\n- added Application::stopOptionsProcessing()\n- updated samples\n- Util::Application command line handling now supports:\n  * argument validation (Option::validator(); see Validator, IntValidator, RegExpValidator)\n  * binding of argument values to config properties (Option::binding())\n  * callbacks for arguments (Option::callback())\n  * checking of required parameters\n- changed header file locations:\n  Foundation headers are now in Poco (#include \"Poco/Foundation.h\")\n  XML headers are now in Poco/XML, Poco/SAX and Poco/DOM (#include \"Poco/XML/XML.h\")\n  Util headers are now in Poco/Util (#include \"Poco/Util/Util.h\")\n  etc.\n  Unfortunately, this change will break existing code. However, fixing the code is\n  a matter of a few global search/replace operations and can be done quickly.\n  On the plus side, POCO is now a much better citizen when used with other\n  libraries.\n- changed namespaces:\n  Foundation is now Poco\n  XML is now Poco::XML\n  Util is now Poco::Util\n  Net is now Poco::Net\n- removed namespace macros\n- fixed some warnings reported by gcc -Wall -Wextra\n- fixed AutoPtr and LayeredConfiguration documentation\n- improved StreamSocket::receiveBytes() doc\n- added Pipe and PipeStream classes\n- added support for I/O redirection (pipes) to Process::launch()\n- added LogStream class (ostream interface to Logger)\n- improved Makefiles (no more double-building if clean all is specified)\n- added CppUnit and DateTime testsuite contributions by Andrew Marlow\n- improved Cygwin and minimal MinGW support\n- FileChannel: gzip compression if archived files now runs in a background thread (SF #1537481)\n- POCO now compiles with large (64-bit) file support on Linux (SF #1536634)\n- added format() function, which provides typesafe sprintf-like functionality (SF #1327621)\n- added File::isLink()\n- bugfix: dangling symbolic links in a directory no longer cause recursive remove to fail with file not found error\n- added Void class (useful as argument to ActiveMethod)\n- ActiveResult now supports exceptions\n- bugfix: Timezone::utcOffset() and Timezone::dst() returned wrong values on Unix platforms (SF #1535428)\n- added ActiveDispatcher class\n- added ActiveStarter class, which is a policy used by ActiveMethod for starting methods\n- ActiveRunnable moved to its own header file\n- ThreadPool: added startWithPriority(), which allows for running threads with a different priority\n- added error handling to dir sample\n- added additional test case to HTTPServer test suite- HTMLForm: should now work with request methods other than POST and GET (all non-POST requests are treated the same as GET)\n- clarified HTMLForm documentation\n- HTMLForm bugfix: uploaded files no longer end up in value; PartHandler is called instead\n- NameValueCollection: added get(name, defaultValue)\n- added HTTPFormServer sample\n- added Foundation::HashTable and SimpleHashTable\n- added Net::HTTPSessionFactory\n- improvements to AutoPtr and SharedPtr\n- improvements to namespaces handling in XMLWriter\n- Foundation Cache: fixed add implementation to match the docu: a 2nd add will now simply overwrite existing entries\n- added DateTime::isValid()\n- added Exception::rethrow() (virtual, must be overridden by all subclasses)\n- Timer can now use a user-supplied ThreadPool\n- added rethrow() to exception classes\n- Net: made some constructors explicit\n- Net: added SocketAddress constructor to HTTPClientSession\n- Net: added HTTPSession::networkException() to check for exceptions swallowed by stream classes\n- Net: added single string argument constructor to SocketAddress.\n- Net: improved HTTPClientSession error handling (no more \"Invalid HTTP version string\" exceptions when the server prematurely closes the connection due to too much load)\n- Net: improved HTTPSession error handling. Exceptions while sending and receiving data are stored for later retrieval and no longer get lost since streambufs swallow them.\n- Net: added HTTPLoadTest sample\n- fixed a bug when opening logfiles on Unix platforms causing an existing logfile to be truncated\n- bugfix: log file purge intervals given in months did not work, due to a stupid typo\n- added RawSocket and ICMP classes\n- UUID: fixed a doc formatting bug\n- NetworkInterface::list() now includes loopback interface on Windows (SF #1460309)\n- made Exception::message() and Exception::nested() inline\n- added Net::UnsupportedRedirectException\n- HTTPStreamFactory throws an UnsupportedRedirectException if it encounters a redirect to https\n- HTTP: fixed bad 100 Continue handling in client and server code\n- added CONTRIBUTORS file\n\n\nRelease 1.1.2 (2006-07-07)\n==========================\n\n- Changed license to Boost license\n- DBlite and NetSSL have been removed from the Boost-licensed release.\n  Please contact Applied Informatics (info@appinf.com) if you're interested in them.\n\n\nRelease 1.1.1 (2006-04-03)\n==========================\n\n- NetSSL_OpenSSL now supports separate certificate verification\n  settings for client and server.\n- fixed SF #1460309 (enumerating network interfaces failed on 64bit Linux)\n- TCPServer no longer crashes if accept() fails\n\n\nRelease 1.1.0 (2006-03-23)\n==========================\n\n- events no longer require awkward += new syntax\n- source code and documentation cleanups\n- basic support for new compilers and platforms\n\n\nRelease 1.1b2 (2006-03-04)\n==========================\n\n- made NetSSL threadsafe (added locking callbacks for OpenSSL)\n- improved OpenSSL initialization (random generator seeding)\n- various changes to improve compatibility with various platforms\n\n\nRelease 1.1b1 (2006-03-03)\n==========================\n\n- New Events package in Foundation. The package supports C#-style event handling\n- New Cache package in Foundation: a templates-based caching framework\n- added Any class to Foundation\n- added DBLite library\n- fixed a memory leak with layered configurations in the application\n- made POCO_DLL the default (unless POCO_STATIC is #defined)\n  It is no longer necessary to specify POCO_DLL in projects that use Poco\n  (SourceForge Patch #1408231 and Feature Request #1407575).\n- added Buffer template class to Foundation\n- added the UnicodeConverter utility class. This is mainly used for Windows Unicode support and probably of little use for anything else.\n- added Path::resolve()\n- added Windows Unicode support. This calls the Unicode variant of the Windows API functions.\n  For this to work, all strings must be UTF-8 encoded and POCO_WIN32_UTF8 must be defined in all compilation units.\n- added StreamCopier::copyToString()\n- added URIStreamOpener::unregisterStreamFactory() and new variants of URIStreamOpener::open() that also work with filesystem paths.\n  This fixes SourceForge Bug #1409064 and Feature Request #1409062.\n- added NodeIterator::currentNodeNP() to XML library\n- added some sanity checks to UTF8Encoding::convert()\n- added NetSSL - SSL support for Net library, based on OpenSSL\n- console output of processes launched with Process::launch() is now visible\n\n\nRelease 1.0.0 (2006-01-19)\n==========================\n\n- removed unnecessary console output from ProcessTest\n- documentation fixes\n\n\nRelease 1.0b2 (2006-01-16)\n==========================\n\n- added ProcessHandle class\n- Process::launch() now returns a ProcessHandle instead of a process ID.\n  This fixes a potential problem on Windows with Process::wait() when\n  the process terminates before wait() is called.\n- added SplitterChannel::close()\n- added Logger::destroy()\n- added POP3ClientSession::deleteMessage()\n- added test for Process::launch()\n- documentation fixes\n\n\nRelease 1.0b1 (2006-01-09)\n==========================\n\n- improved recognition of Windows paths in Path::parseGuess()\n- added setCurrentLineNumber()/getCurrentLineNumber() to CountingStreamBuf\n- improvememts to StreamTokenizer and Token; fixed documentation\n- added a workaround for some strange istream behaviour with VS 2005 and FTPClientSessionTest\n- improved exception/error reporting in cppunit\n- added POP3ClientSession\n- added Process::launch() and Process::wait()\n- added Mail sample\n- added MailStream and SMTPClientSession classes\n- renamed some methods in DialogSocket to make them more general\n- NullPartHandler has moved out of HTMLForm.cpp into a separate file\n- Base64Encoder now always writes \\r\\n line ends\n- MessageHeader::quote has an optional addition arg controlling the treatment of whitespace\n- bugfix: MultipartReader had a problem with empty lines (\\r\\n sequences) in a part\n- added MailMessage and MailRecipient classes\n- added text encoding support for Windows-1252 codepage\n\n\nRelease 1.0a1 (2006-01-03) [internal]\n=====================================\n\n- mediaType is used consistently to refer to a MIME media type (some occurences of contentType and mimeType have been replaced)\n- moved MediaType::quote() to MessageHeader and made it public\n- added MultipartWriter::stream()\n- Renamed AttachmentSource to PartSource and AttachmentHandler to PartHandler\n- SIGPIPE is always blocked in main thread on Unix systems\n- added EchoServer sample\n- fixed a bug in SocketImpl::setBlocking() - did exactly the opposite (value to ioctl was wrong)\n- fixed a memory leak in NotificationQueue sample\n- added comparison operators to Socket so that Sockets can be used as keys in maps\n- added Socket::setBlocking()\n- added StreamSocket::connectNB() (non-blocking connect)\n- added Observer::accepts()\n- added SocketReactor, SocketConnector and SocketAcceptor classes to support event-based socket programming\n- NamespacePrefixesStrategy now uses expat's XML_SetReturnNSTriplet().\n  The previously used separate namespace handling code has been removed.\n  This improves performance if NamespacePrefixesStrategy is used (both the n\n  amespaces and namespace-prefixes SAX2 features are used)\n- upgraded expat to 2.0 pre-release (2005-12-27) snapshot\n- added TeeInputStream and TeeOutputStream classes\n- added download sample for URIStreamOpener\n- renamed registerOpener() to registerFactory() in HTTPStreamFactory and FTPStreamFactory\n- added LineEndingConverter streams\n- added FTPClientSession\n- code and documentation clean-up\n- added DialogSocket class\n- reorganized HTTP test suites\n- added FTPClientSession and FTPStreamFactory\n- added DialogSocket class\n\n\nRelease 0.96.1 (2005-12-28)\n===========================\n\n- fixed a memory leak caused by a bug in Microsoft's stream implementation (see the comment in Foundation/StreamUtil.h for an explanation)\n- added samples for Net library\n- added uptime() and startTime() to Util::Application\n- added DateTimeFormatter::format() for Timespan\n- added ErrorHandler class and better exception handling for threads\n- added poco_debugger() and poco_debugger_msg() macros\n- added project and solution files for Visual Studio 2005 (due to some bugs/leaks in Microsofts standard library - see\n  http://lab.msdn.microsoft.com/productfeedback/viewfeedback.aspx?feedbackid=e08bd793-3fef-40ff-adda-ed313e0eafcc\n  we do not recommend using this for production purposes)\n- fixed two problems with out-of-range string iterator in Path (the testsuite triggered an assertion in VC++ 8.0)\n- fixed mac line endings in a few files\n- added a workaround to the class loader that fixes strange behavior with VC++ 8.0. There seems to be a problem with typeid() not returning a valid typeinfo under certain circumstances.\n- added buffer allocator argument to buffered stream buffer templates\n- added buffer pools to HTTP to reduce memory fragmentation and to improve performance\n- added Net to Windows build.cmd script\n- added swap() to various classes that already support assignment\n- added a null pointer check in DOMWriter::writeNode()\n- fixed documentation in BinaryWriter.h and BinaryReader.h\n- added explicit support for network byte order to BinaryReader and BinaryWriter\n- added basic support for FreeBSD (needs more testing)\n- BinaryReader: renamed readRawData() to readRaw() to be consistent with BinaryWriter::writeRaw()\n- added support for uppercase output to HexBinaryEncoder.\n- added MediaType class\n- added QuotedPrintableEncoder and QuotedPrintableDecoder classes\n- renamed ObjectFactory to Instantiator. This should prevent the confusion caused by DynamicFactory and ObjectFactory. Sorry for the inconvenience if you are already using this.\n- AttachmentSource::filename() now returns const string&\n- added StringAttachmentSource\n- replaced old-style C casts with C++ casts in NetworkInterface.cpp\n- MutexImpl (WIN32): replaced InitializeCriticalSection with InitializeCriticalSectionAndSpinCount, which should increase performance on multiprocessor or multicore systems when many locks are used.\n- fixed a problem with STLport 5.0 when compiling StreamTokenizer\n- HTTPStreamOpener now also works with no-path URIs (like http://www.appinf.com)\n- fixed wrong delete usage (plain delete instead of delete [] was used in a few cases)\n- fixed a handle leak in WinTestRunner\n\n\nRelease 0.95.4 (2005-11-07)\n===========================\n\n- fixed #1348006 and #1348005\n\n\nRelease 0.95.3 (2005-10-28) [internal]\n======================================\n\n- updated build scripts (patch #1339015)\n- added support for AMD64 platforms (patch #1339015)\n- MultipartWriter creates its own boundary if an empty string is passed in as boundary\n- made MultipartWriter::createBoundary() public\n- fixed wrong documentation for DateTimeFormat::HTTP_FORMAT\n- added support for HTTP Basic authentication\n- added support for HTTP Cookies\n- added support for HTML forms\n\n\nRelease 0.95.2 (2005-10-22) [internal]\n======================================\n\n- fixed a potential problems with streams when close in destructor fails (added try..catch block around close in destructors)\n- added HTTPServer & friends\n- added hasIdleThreads() method to NotificationQueue\n- added TCPServer and friend\n- added support for HTTP proxies to HTTPClientSession and HTTPStreamOpener\n- fixed documentation bugs (Mutex.h, ClassLoader.h)\n\n\nRelesae 0.95.1 (2005-10-15) [internal]\n======================================\n\n- Tasks can now throw custom notifications (contributed by Alex Fabijanic)\n- renamed URIFileStreamFactory to FileStreamFactory\n- added a few methods to URI (setPathEtc(), getPathEtc(), getPathAndQuery())\n- added new exception classes\n- fixed some documentation\n- added basic checks when reading a MessageHeader from a stream\n- added HTTP classes (testsuite still incomplete)\n- added MessageHeader, NameValueCollection, MultipartReader and MultipartWriter classes\n- added Timespan::useconds()\n- added ClassLoader::isLibraryLoaded()\n- Socket classes use Timespan::useconds() to fill struct timeval\n- added DatagramSocket, MulticastSocket and NetworkInterface classes\n- added socket classes and related basic stuff\n- added additonal constructor/assign to Timespan- added BasicBufferedBidirectionalStreamBuf\n- fixed a potential MT issue in Base64Decoder\n- code beautifying in [Un]BufferedStreamBuf\n- more improvements to ClassLoader\n- code cleanup and naming convention fixes (changed all *Imp classes to *Impl for consistency)\n\n\nRelease 0.94.1 (2005-09-30) [internal]\n======================================\n\n- added MetaSingleton (based on a contribution by Alex Fabijanic)\n- added ClassLoader::create()\n- added ClassLoader::instance()\n- code clean-ups in FileChannel and related classes\n- added SimpleFileChannel\n- RotateAtTimeStrategy:\n  ::getNextRollover() rewritten (buggy)\n- DateTime\n  microseconds assert corrected\n  asserts in computeGregorian() (except for year - see comment in computeGregorian())\n  milliseconds calculation modified in computeGregorian()\n  microseconds assigned in computeGregorian()\n  normalize() and checkLimit() private functions to correct cases of overflow for milli/microseconds\n- LocalDateTime: added timestamp() method\n- FileChannel:\n  added \"times\" property (used to determine whether to use UTC or local time with RotateAtTimeStrategy)\n  ::setProperty() modified (whenever \"times\" property is set, methods setRotation and setArchive are\n  reinvoked to reflect the change)\n- FileChannel: added support for archived file compression and archived file purging\n- FileChannel tests modified\n- FileChannel: put LogFile, RotateStrategy and ArchiveStrategy into their own files\n- Message: added thread id field\n- PatternFormatter: added %I specifier for thread id\n- ThreadPool: PooledThread can be assigned a name\n- TaskManager: task name is reflected in thread name\n- fixed  LocalDateTime::operator - (const Timespan&) [#0000004]\n- upon startup all loggers' channels are set to a console channel\n- improved search for application configuration files (see loadConfiguration()).\n- added Glob class (fixes #1249700)\n- upgraded to zlib 1.2.3 (fixes #1261712)\n- added Logger::dump()\n- fixed a wrong condition in Logger::log(const Message&)\n- Path::find() now also works with relative paths in addition to plain file names\n- added Path(const Path&, const Path&) constructor\n- added SharedPtr template\n- added Path::tryParse()\n- SAXParser::parse()/EntityResolverImpl now works for both URIs and local filesystem paths (fixes #1254812)\n\n\nRelease 0.93.1 (2005-08-01)\n===========================\n\nThis release contains various new features, improvements and bugfixes:\n- bugfix: UUIDGenerator throws an exception if no connected ethernet adapter can\n  be found (and thus no MAC address can be obtained)\n- added UUIDGenerator::createOne() method\n- added error handling to UUID sample application\n- added relational (==, !=, <, <=, >, >=) and arithmetic operators (+, -, +=, -=) to DateTime\n- added LocalDateTime class\n- added support for LocalDateTime to DateTimeParser and DateTimeFormatter\n- added enqueueUrgentNotification() to NotificationQueue\n- added support for timezone specifiers (%z, %Z) to PatternFormatter\n- added [] operator and count() to StringTokenizer\n- added elapsed() and isElapsed() to Timestamp\n- added tzd() to Timezone\n- added WinRegistryKey and WinService classes (Windows only)\n- added index operator and count() to StringTokenizer\n- added day/time-based log rotation (thanks to Alex Fabijanic), minor improvements to DateTimeParser\n- support for Mac OS X 10.4/gcc 4.0.0\n- added NamedMutex and NamedEvent\n- added Process::kill()\n- added NoPermissionException\n- added Task and TaskManager classes\n- added ServerApplication class\n- bugfix: EventLogChannel - _logFile was not properly initialized in one constructor\n- bugfix: File::createDirectories did not work for hierarchies deeper than three\n- added Util::FilesystemConfiguration\n- documented logging policy: log() must open channel if it hasn't been opened yet\n- FileChannel::log() opens channel if necessary\n- the application reference passed to initialize() and reinitialize() is no longer const\n- improved application logging initialization\n- fixed a problem with configuration view and property placeholders\n- fixed Util build configuration for Visual Studio\n- improved application samples\n- fixed documentation for Semaphore class\n\n\nRelease 0.92.1 (2005-05-09)\n===========================\n\nThis release introduces the Util library that provides support for\nconfiguration file parsing (different file formats), command line\nargument processing, logging configuration and a framework for\ncommand line/server applications.\nThere have also been various changes to the Foundation library:\n- a new RefCountedObject class that acts as a base class for\n  various classes that use reference counting\n- some missing members have been added to the AutoPtr template\n- various improvements and bugfixes to the Logging framework, as well as\n  new LoggingFactory and LoggingRegistry classses, and a NullChannel class\n- the SignalHandler class (Unix platforms only)\n- ObjectFactory and DynamicFactory template classes\n- the Path::find method for searching a file in a list of directories\n- various new Exception classes\n\n\nRelease 0.91.4 (2005-04-11)\n===========================\n\nThis is mainly a maintenance release that adds support for QNX Neutrino\nand OpenVMS. There are also minor bugfixes and improvements.\n\nThe Unix build system has been modified to work on QNX Neutrino.\nThe OpenVMS build system has been fixed and works now.\nSome missing #include's have been added for QNX Neutrino.\nFoundation/String.h: icompare now supports comparison with const char*;\nthe classic C version of isspace() has been used in a few places instead of the\nC++ <locale> version, this has been fixed.\nFoundation/Exception.h: IllegalStateException added.\n\n\nRelease 0.91.3 (2005-03-19)\n===========================\n\nThis is a maintenance release that adds support for Solaris/Sun Forte C++.\nNo new features have been added.\n\nAn implementation of FPEnvironment for Solaris has been included.\nAll stream classes have been modified to work around an initialization\nproblem that surfaced with Sun's C++ compiler when using STLport.\nSource-code compatibility with the previous release is not affected. Various\nminor changes, mostly adding missing #include's for Solaris.\n\n\nRelease 0.91.2 (2005-02-27)\n===========================\n\nMinor improvements to the Unix build system. No actual changes in the\nlibraries.\n\n\nRelease 0.91.1 (2005-02-21)\n===========================\n\nThis is the first public release of the C++ Portable Components.\nThe release does not contain all features planned for the later 1.0 release\n(the NET library is missing, for example), but is already quite usable.\nPlease refer to the README file for more information and instructions for\nbuilding the libraries.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 18.3779296875,
          "content": "cmake_minimum_required(VERSION 3.15.0)\n\nproject(Poco)\n\nfile(STRINGS \"${PROJECT_SOURCE_DIR}/libversion\" SHARED_LIBRARY_VERSION)\n# Read the version information from the VERSION file\nfile(STRINGS \"${PROJECT_SOURCE_DIR}/VERSION\" PACKAGE_VERSION)\nstring(REGEX REPLACE \"([0-9]+)\\\\.[0-9]+\\\\.[0-9]+.*\" \"\\\\1\" CPACK_PACKAGE_VERSION_MAJOR ${PACKAGE_VERSION})\nstring(REGEX REPLACE \"[0-9]+\\\\.([0-9]+)\\\\.[0-9]+.*\" \"\\\\1\" CPACK_PACKAGE_VERSION_MINOR ${PACKAGE_VERSION})\nstring(REGEX REPLACE \"[0-9]+\\\\.[0-9]+\\\\.([0-9]+).*\" \"\\\\1\" CPACK_PACKAGE_VERSION_PATCH ${PACKAGE_VERSION})\n\nset(PROJECT_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH})\nset(RELEASE_NAME \"Unstable-trunk\")\n\n# Put the libaries and binaries that get built into directories at the\n# top of the build tree rather than in hard-to-find leaf\n# directories. This simplifies manual testing and the use of the build\n# tree rather than installed Boost libraries.\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib CACHE PATH \"Library output\")\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib CACHE PATH \"Archive output\")\n# Windows DLLs are \"runtime\" for CMake. Output them to \"bin\" like the Visual Studio projects do.\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin CACHE PATH \"Runtime output\")\n\n# Reset output dirs for multi-config builds\nforeach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})\n\tstring(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)\n\tset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/bin CACHE PATH \"Runtime output for ${OUTPUTCONFIG}\")\n\tset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/lib CACHE PATH \"Library output for ${OUTPUTCONFIG}\")\n\tset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/lib CACHE PATH \"Archive output for ${OUTPUTCONFIG}\")\nendforeach(OUTPUTCONFIG)\n\n# Append our module directory to CMake\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n\n#################################################################################\n# Setup C/C++ compiler options\n#################################################################################\n\n# C++17 compiler flags\ninclude(CXX1x)\ncheck_for_cxx17_compiler(CXX17_COMPILER)\n\n# If a C++17 compiler is available, then set the appropriate flags\nif(CXX17_COMPILER)\n\tset(CMAKE_CXX_STANDARD 17)\n\tset(CMAKE_CXX_STANDARD_REQUIRED ON)\nelse()\n\tmessage(FATAL_ERROR \"Compiler does not support C++17.\")\nendif()\n\nif(NOT CMAKE_BUILD_TYPE)\n\tset(CMAKE_BUILD_TYPE \"RelWithDebInfo\")\nendif()\n\n# Enable standard installation directories\ninclude(GNUInstallDirs)\n\n# Include some common macros to simpilfy the Poco CMake files\ninclude(PocoMacros)\n\noption(BUILD_SHARED_LIBS \"Build shared libraries\" ON)\n\nset(POCO_SANITIZEFLAGS CACHE STRING \"Compiler-dependent sanitizer flags (like -fsanitize=address or /fsanitize=address\")\n\nif(MSVC)\n\toption(POCO_MT \"Set to OFF|ON (default is OFF) to control static build of POCO as /MT instead of /MD\" OFF)\n\n\tif(BUILD_SHARED_LIBS AND POCO_MT)\n\t\tmessage(FATAL_ERROR \"Cannot have both BUILD_SHARED_LIBS and POCO_MT\")\n\tendif()\n\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Zc:__cplusplus\")\nendif()\n\noption(ENABLE_NETSSL_WIN \"Enable NetSSL Windows\" OFF)\n\n#\n# Path to OpenSSL installation root can be provided by setting a variable\n# OPENSSL_ROOT_DIR.\n#\n\nif(ENABLE_CRYPTO OR ENABLE_NETSSL OR ENABLE_JWT)\n\tfind_package(OpenSSL REQUIRED)\nelse()\n\tfind_package(OpenSSL)\nendif()\n\nif(OPENSSL_FOUND)\n\toption(ENABLE_NETSSL \"Enable NetSSL\" ON)\n\toption(ENABLE_CRYPTO \"Enable Crypto\" ON)\n\toption(ENABLE_JWT \"Enable JWT\" ON)\nelse()\n\toption(ENABLE_NETSSL \"Enable NetSSL\" OFF)\n\toption(ENABLE_CRYPTO \"Enable Crypto\" OFF)\n\toption(ENABLE_JWT \"Enable JWT\" OFF)\nendif()\n\nif(ENABLE_APACHECONNECTOR)\n\tfind_package(APR REQUIRED)\n\tfind_package(APRUTIL REQUIRED)\n\tfind_package(Apache2 REQUIRED)\nelse()\n\tfind_package(APR)\n\tfind_package(APRUTIL)\n\tfind_package(Apache2)\nendif()\n\nif(APR_FOUND AND APRUTIL_FOUND AND APACHE2_FOUND AND\n\tEXISTS ${PROJECT_SOURCE_DIR}/ApacheConnector AND ENABLE_APACHECONNECTOR)\n\toption(ENABLE_APACHECONNECTOR \"Enable ApacheConnector\" ON)\nelse()\n\toption(ENABLE_APACHECONNECTOR \"Enable ApacheConnector\" OFF)\nendif()\n\nif(ENABLE_DATA_MYSQL)\n\tfind_package(MySQL REQUIRED)\nelse()\n\tfind_package(MySQL)\nendif()\n\nif(MYSQL_FOUND)\n\toption(ENABLE_DATA \"Enable Data\" ON)\n\toption(ENABLE_DATA_MYSQL \"Enable Data MySQL or MariaDB\" ON)\nelse()\n\toption(ENABLE_DATA \"Enable Data\" OFF)\n\toption(ENABLE_DATA_MYSQL \"Enable Data MySQL or MariaDB\" OFF)\nendif()\n\nif(ENABLE_DATA_POSTGRESQL)\n\tfind_package(PostgreSQL REQUIRED)\nelse()\n\tfind_package(PostgreSQL)\nendif()\n\nif(PostgreSQL_FOUND)\n\toption(ENABLE_DATA \"Enable Data\" ON)\n\toption(ENABLE_DATA_POSTGRESQL \"Enable Data PosgreSQL\" ON)\nelse()\n\toption(ENABLE_DATA \"Enable Data\" OFF)\n\toption(ENABLE_DATA_POSTGRESQL \"Enable Data PosgreSQL\" OFF)\nendif()\n\nif(ENABLE_DATA_ODBC)\n\tfind_package(ODBC REQUIRED)\nelse()\n\tfind_package(ODBC)\nendif()\n\nif(ODBC_FOUND)\n\toption(ENABLE_DATA \"Enable Data\" ON)\n\toption(ENABLE_DATA_ODBC \"Enable Data ODBC\" ON)\n\toption(ENABLE_DATA_SQL_SERVER_BIG_STRINGS \"Enable MS SQL Server big strings\" ON)\nelse()\n\toption(ENABLE_DATA \"Enable Data\" OFF)\n\toption(ENABLE_DATA_ODBC \"Enable Data ODBC\" OFF)\n\toption(ENABLE_DATA_SQL_SERVER_BIG_STRINGS \"Enable MS SQL Server big strings\" OFF)\nendif()\n\n# Allow enabling and disabling components\noption(ENABLE_FOUNDATION \"Enable Foundation\" ON)\noption(ENABLE_ENCODINGS \"Enable Encodings\" ON)\noption(ENABLE_ENCODINGS_COMPILER \"Enable Encodings Compiler\" OFF)\noption(ENABLE_XML \"Enable XML\" ON)\noption(ENABLE_JSON \"Enable JSON\" ON)\noption(ENABLE_MONGODB \"Enable MongoDB\" ON)\noption(ENABLE_DATA_SQLITE \"Enable Data SQlite\" ON)\noption(ENABLE_REDIS \"Enable Redis\" ON)\noption(ENABLE_DNSSD \"Enable DNSSD\" OFF)\noption(ENABLE_DNSSD_DEFAULT \"Enable DNSSD Default\" OFF)\n\noption(ENABLE_DNSSD_AVAHI \"Enable DNSSD Avahi\" OFF)\noption(ENABLE_DNSSD_BONJOUR \"Enable DNSSD Bonjour\" OFF)\n\noption(ENABLE_PROMETHEUS \"Enable Prometheus\" ON)\noption(ENABLE_PDF \"Enable PDF\" OFF)\noption(ENABLE_UTIL \"Enable Util\" ON)\noption(ENABLE_NET \"Enable Net\" ON)\n\noption(ENABLE_SEVENZIP \"Enable SevenZip\" OFF)\noption(ENABLE_ZIP \"Enable Zip\" ON)\noption(ENABLE_CPPPARSER \"Enable C++ parser\" OFF)\noption(ENABLE_POCODOC \"Enable Poco Documentation Generator\" OFF)\noption(ENABLE_PAGECOMPILER \"Enable PageCompiler\" ON)\noption(ENABLE_PAGECOMPILER_FILE2PAGE \"Enable File2Page\" ON)\n\noption(ENABLE_ACTIVERECORD \"Enable ActiveRecord\" ON)\noption(ENABLE_ACTIVERECORD_COMPILER \"Enable ActiveRecord Compiler\" ON)\n\noption(ENABLE_TRACE \"Enable stack tracing\" OFF)\n\nif(ENABLE_ACTIVERECORD AND NOT ENABLE_DATA)\n\tset(ENABLE_DATA ON CACHE BOOL \"Enable Data\" FORCE)\nendif()\n\nif(ENABLE_ACTIVERECORD AND NOT ENABLE_XML)\n\tset(ENABLE_XML ON CACHE BOOL \"Enable XML\" FORCE)\nendif()\n\noption(ENABLE_TESTS\n\t\"Set to OFF|ON (default is OFF) to control build of POCO tests\" OFF)\n\noption(ENABLE_TEST_DEPRECATED\n\t\"Set to OFF|ON (default is OFF) to enable build of tests for deprecated functionality\" OFF)\n\noption(ENABLE_COMPILER_WARNINGS\n\t\"Set to OFF|ON (default is OFF) to enable additional compiler warnings. Intended primarily for maintainers.\" OFF)\n\noption(ENABLE_SAMPLES\n\t\"Set to OFF|ON (default is OFF) to control build of POCO samples\" OFF)\n\noption(ENABLE_FUZZING\n\t\"Set to OFF|ON (default is OFF) to control build of fuzzing targets for oss-fuzz (Clang compiler is required)\" OFF)\n\noption(POCO_UNBUNDLED\n\t\"Set to OFF|ON (default is OFF) to control linking dependencies as external\" OFF)\n\nif(ENABLE_TESTS)\n\tinclude(CTest)\n\tenable_testing()\n\tmessage(STATUS \"Building with unittests & samples\")\n\tif(ENABLE_TEST_DEPRECATED)\n\t\tadd_compile_definitions(POCO_TEST_DEPRECATED)\n\tendif()\nelse()\n\tmessage(STATUS \"Building without tests & samples\")\nendif()\n\nif(ENABLE_FUZZING)\n\tif(NOT \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n\t\tmessage(FATAL_ERROR \"ENABLE_FUZZING flag requires using Clang compiler\")\n\telse()\n\t\tmessage(STATUS \"Building fuzzing test targets with engine $ENV{LIB_FUZZING_ENGINE}\")\n\tendif()\nendif()\n\nif(POCO_UNBUNDLED)\n\tmessage(STATUS \"Using external sqlite, zlib, pcre2, expat, libpng, ...\")\nelse()\n\tmessage(STATUS \"Using internal sqlite, zlib, pcre2, expat, libpng, ...\")\nendif()\n\n# Disable fork exec\noption(POCO_NO_FORK_EXEC \"Set to OFF|ON (default is OFF) to disable use of fork() and exec*() which are not allowed on some Apple platforms (iOS, watchOS, iPadOS, tvOS).\" OFF)\n\nif(POCO_NO_FORK_EXEC)\n\tadd_definitions(-DPOCO_NO_FORK_EXEC=1)\nendif()\n\noption(POCO_ENABLE_STD_MUTEX \"Set to OFF|NO using mutex from standard library (default OFF)\" OFF)\n\nif (POCO_ENABLE_STD_MUTEX)\n\tadd_compile_definitions(POCO_ENABLE_STD_MUTEX)\nendif ()\n\nif(ENABLE_TRACE)\n\tadd_compile_definitions(POCO_ENABLE_TRACE)\nendif()\n\ninclude(DefinePlatformSpecific)\n\n# Collect the built libraries and include dirs, the will be used to create the PocoConfig.cmake file\nset(Poco_COMPONENTS \"\")\n\nif(ENABLE_TESTS)\n\tadd_subdirectory(CppUnit)\n\tset(ENABLE_XML ON CACHE BOOL \"Enable XML\" FORCE)\n\tset(ENABLE_JSON ON CACHE BOOL \"Enable JSON\" FORCE)\nendif()\n\nif(ENABLE_ENCODINGS_COMPILER OR ENABLE_APACHECONNECTOR)\n\tset(ENABLE_NET ON CACHE BOOL \"Enable Net\" FORCE)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_PAGECOMPILER_FILE2PAGE)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_PAGECOMPILER)\n\tset(ENABLE_NET ON CACHE BOOL \"Enable Net\" FORCE)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_MONGODB OR ENABLE_REDIS OR ENABLE_PROMETHEUS)\n\tset(ENABLE_NET ON CACHE BOOL \"Enable Net\" FORCE)\nendif()\n\nif(ENABLE_DATA_SQLITE OR ENABLE_DATA_MYSQL OR ENABLE_DATA_ODBC OR ENABLE_DATA_POSTGRESQL)\n\tset(ENABLE_DATA ON CACHE BOOL \"Enable Data\" FORCE)\n\tif(ENABLE_TESTS)\n\t\tset(ENABLE_NET ON CACHE BOOL \"Enable Net\" FORCE)\n\t\tset(ENABLE_DATA_SQLITE ON CACHE BOOL \"Enable Data SQlite\" FORCE)\n\tendif()\nendif()\n\nif(ENABLE_DATA AND ENABLE_TESTS)\n\tset(ENABLE_DATA_SQLITE ON CACHE BOOL \"Enable Data SQlite\" FORCE)\nendif()\n\nif(ENABLE_ACTIVERECORD AND ENABLE_TESTS)\n\tset(ENABLE_DATA_SQLITE ON CACHE BOOL \"Enable Data SQlite\" FORCE)\nendif()\n\nif(ENABLE_NETSSL_WIN)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_NETSSL)\n\tset(ENABLE_CRYPTO ON CACHE BOOL \"Enable Crypto\" FORCE)\n\tset(ENABLE_NET ON CACHE BOOL \"Enable Net\" FORCE)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_CRYPTO AND ENABLE_TESTS)\n\tset(ENABLE_NETSSL ON CACHE BOOL \"Enable NetSSL\" FORCE)\n\tset(ENABLE_NET ON CACHE BOOL \"Enable Net\" FORCE)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_NET AND ENABLE_TESTS)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\nendif()\n\nif(ENABLE_PDF)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\n\tset(ENABLE_XML ON CACHE BOOL \"Enable XML\" FORCE)\nendif()\n\nif(ENABLE_POCODOC)\n\tset(ENABLE_UTIL ON CACHE BOOL \"Enable Util\" FORCE)\n\tset(ENABLE_XML ON CACHE BOOL \"Enable XML\" FORCE)\n\tset(ENABLE_CPPPARSER ON CACHE BOOL \"Enable C++ parser\" FORCE)\n\tset(ENABLE_DATA ON CACHE BOOL \"Enable Data\" FORCE)\n\tset(ENABLE_DATA_SQLITE ON CACHE BOOL \"Enable Data SQLite\" FORCE)\nendif()\n\nif(ENABLE_UTIL AND ENABLE_TESTS)\n\tset(ENABLE_JSON ON CACHE BOOL \"Enable JSON\" FORCE)\n\tset(ENABLE_XML ON CACHE BOOL \"Enable XML\" FORCE)\nendif()\n\nif(ENABLE_JWT)\n\tset(ENABLE_CRYPTO ON CACHE BOOL \"Enable Crypto\" FORCE)\n\tset(ENABLE_JSON ON CACHE BOOL \"Enable JSON\" FORCE)\nendif()\n\nif(ENABLE_FOUNDATION)\n\tadd_subdirectory(Foundation)\nendif()\n\nif(ENABLE_ENCODINGS)\n\tadd_subdirectory(Encodings)\n\tlist(APPEND Poco_COMPONENTS \"Encodings\")\nendif()\n\nif(ENABLE_XML)\n\tadd_subdirectory(XML)\n\tlist(APPEND Poco_COMPONENTS \"XML\")\nendif()\n\nif(ENABLE_JSON)\n\tadd_subdirectory(JSON)\n\tlist(APPEND Poco_COMPONENTS \"JSON\")\nendif()\n\nif(ENABLE_UTIL)\n\tadd_subdirectory(Util)\n\tlist(APPEND Poco_COMPONENTS \"Util\")\nendif()\n\nif(ENABLE_NET)\n\tadd_subdirectory(Net)\n\tlist(APPEND Poco_COMPONENTS \"Net\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/MongoDB AND ENABLE_MONGODB)\n\tadd_subdirectory(MongoDB)\n\tlist(APPEND Poco_COMPONENTS \"MongoDB\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Redis AND ENABLE_REDIS)\n\tadd_subdirectory(Redis)\n\tlist(APPEND Poco_COMPONENTS \"Redis\")\nendif()\n\nif(ENABLE_DNSSD)\n\tadd_subdirectory(DNSSD)\n\tlist(APPEND Poco_COMPONENTS \"DNSSD\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Prometheus AND ENABLE_PROMETHEUS)\n\tadd_subdirectory(Prometheus)\n\tlist(APPEND Poco_COMPONENTS \"Prometheus\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/PDF AND ENABLE_PDF)\n\tadd_subdirectory(PDF)\n\tlist(APPEND Poco_COMPONENTS \"PDF\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/JWT AND ENABLE_JWT)\n\tadd_subdirectory(JWT)\n\tlist(APPEND Poco_COMPONENTS \"JWT\")\nendif()\n\n#NetSSL\n\nif(WIN32 AND EXISTS ${PROJECT_SOURCE_DIR}/NetSSL_Win AND ENABLE_NETSSL_WIN)\n\tadd_subdirectory(NetSSL_Win)\n\tlist(APPEND Poco_COMPONENTS \"NetSSL_Win\")\nendif(WIN32 AND EXISTS ${PROJECT_SOURCE_DIR}/NetSSL_Win AND ENABLE_NETSSL_WIN)\n\nif(OPENSSL_FOUND)\n\tif(EXISTS ${PROJECT_SOURCE_DIR}/NetSSL_OpenSSL AND ENABLE_NETSSL)\n\t\tadd_subdirectory(NetSSL_OpenSSL)\n\t\tlist(APPEND Poco_COMPONENTS \"NetSSL_OpenSSL\")\n\tendif()\n\tif(EXISTS ${PROJECT_SOURCE_DIR}/Crypto AND ENABLE_CRYPTO)\n\t\tadd_subdirectory(Crypto)\n\t\tlist(APPEND Poco_COMPONENTS \"Crypto\")\n\tendif()\nendif(OPENSSL_FOUND)\n\n\noption(POCO_DATA_NO_SQL_PARSER \"Disable SQL parser\" OFF)\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Data AND ENABLE_DATA)\n\tif(POCO_DATA_NO_SQL_PARSER)\n\t\tadd_compile_definitions(POCO_DATA_NO_SQL_PARSER=1)\n\tendif()\n\tadd_subdirectory(Data)\n\tlist(APPEND Poco_COMPONENTS \"Data\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Data/SQLite AND ENABLE_DATA_SQLITE)\n\tlist(APPEND Poco_COMPONENTS \"Data/SQLite\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Data/MySQL AND ENABLE_DATA_MYSQL)\n\tlist(APPEND Poco_COMPONENTS \"Data/MySQL\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Data/PostgreSQL AND ENABLE_DATA_POSTGRESQL)\n\tlist(APPEND Poco_COMPONENTS \"Data/PostgreSQL\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/ActiveRecord AND ENABLE_ACTIVERECORD)\n\tadd_subdirectory(ActiveRecord)\n\tlist(APPEND Poco_COMPONENTS \"ActiveRecord\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/ActiveRecord/Compiler AND ENABLE_ACTIVERECORD_COMPILER)\n\tadd_subdirectory(ActiveRecord/Compiler)\n\tlist(APPEND Poco_COMPONENTS \"ActiveRecordCompiler\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/SevenZip AND ENABLE_SEVENZIP AND ENABLE_XML)\n\tadd_subdirectory(SevenZip)\n\tlist(APPEND Poco_COMPONENTS \"SevenZip\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Zip AND ENABLE_ZIP AND ENABLE_XML)\n\tadd_subdirectory(Zip)\n\tlist(APPEND Poco_COMPONENTS \"Zip\")\nendif()\n\nif(APRUTIL_FOUND AND APACHE_FOUND AND\n\tEXISTS ${PROJECT_SOURCE_DIR}/ApacheConnector AND ENABLE_APACHECONNECTOR)\n\tadd_subdirectory(ApacheConnector)\n\tlist(APPEND Poco_COMPONENTS \"ApacheConnector\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/CppParser AND ENABLE_CPPPARSER)\n\tadd_subdirectory(CppParser)\n\tlist(APPEND Poco_COMPONENTS \"CppParser\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/PocoDoc AND ENABLE_POCODOC)\n\tadd_subdirectory(PocoDoc)\n\tlist(APPEND Poco_COMPONENTS \"PocoDoc\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/PageCompiler AND ENABLE_PAGECOMPILER)\n\tadd_subdirectory(PageCompiler)\n\tlist(APPEND Poco_COMPONENTS \"PageCompiler\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/PageCompiler/File2Page AND ENABLE_PAGECOMPILER_FILE2PAGE)\n\tadd_subdirectory(PageCompiler/File2Page)\n\tlist(APPEND Poco_COMPONENTS \"File2Page\")\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/Encodings/Compiler AND ENABLE_ENCODINGS_COMPILER)\n\tadd_subdirectory(Encodings/Compiler)\n\tlist(APPEND Poco_COMPONENTS \"EncodingsCompiler\")\nendif()\n\nif(ENABLE_TRACE)\n\tadd_subdirectory(Trace)\n\tlist(APPEND Poco_COMPONENTS \"Trace\")\nendif()\n\n\n#############################################################\n# Uninstall stuff see: http://www.vtk.org/Wiki/CMake_FAQ\nconfigure_file(\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n\t\"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n\tIMMEDIATE @ONLY)\n\nadd_custom_target(uninstall\n\t\"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n)\n\n#############################################################\n# Enable packaging\n\nif (CMAKE_HOST_SYSTEM_NAME STREQUAL \"Windows\")\n\tinclude(InstallRequiredSystemLibraries)\nendif()\n\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"Poco Libraries\")\nset(CPACK_PACKAGE_VENDOR \"Applied Informatics Software Engineering GmbH\")\nset(CPACK_PACKAGE_DESCRIPTION_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/README\")\nset(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/LICENSE\")\nset(CPACK_PACKAGE_INSTALL_DIRECTORY \"/usr/local\")\n\ninclude(CPack)\n\n#############################################################\n# cmake config files\n\ninclude(CMakePackageConfigHelpers)\nwrite_basic_package_version_file(\n\t\"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}ConfigVersion.cmake\"\n\tVERSION ${PROJECT_VERSION}\n\tCOMPATIBILITY AnyNewerVersion\n)\n\n# Set config script install location in a location that find_package() will\n# look for, which is different on MS Windows than for UNIX\n# Note: also set in POCO_GENERATE_PACKAGE macro in cmake/PocoMacros.cmake\nif(WIN32)\n\tset(PocoConfigPackageLocation \"cmake\")\nelse()\n\tset(PocoConfigPackageLocation \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\")\nendif()\n\nconfigure_file(cmake/${PROJECT_NAME}Config.cmake.in \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Config.cmake\" @ONLY)\ninstall(\n\tFILES\n\t\t${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Config.cmake\n\t\t${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}ConfigVersion.cmake\n\tDESTINATION\n\t\t\"${PocoConfigPackageLocation}\"\n\tCOMPONENT\n\t\tDevel\n)\n\nif(POCO_UNBUNDLED)\n\tinstall(FILES cmake/FindPCRE2.cmake DESTINATION \"${PocoConfigPackageLocation}\")\n\tinstall(FILES cmake/FindUtf8Proc.cmake DESTINATION \"${PocoConfigPackageLocation}\")\nendif()\n\nmessage(STATUS \"CMake ${CMAKE_VERSION} successfully configured ${PROJECT_NAME} using ${CMAKE_GENERATOR} generator\")\nmessage(STATUS \"${PROJECT_NAME} package version: ${PROJECT_VERSION}\")\nif(BUILD_SHARED_LIBS)\n\tmessage(STATUS \"Building dynamic libraries\")\nelse()\n\tmessage(STATUS \"Building static libraries\")\nendif()\nmessage(STATUS \"[cmake] Installation target path: ${CMAKE_INSTALL_PREFIX}\")\nif(CMAKE_TOOLCHAIN_FILE)\n\tmessage(STATUS \"[cmake] Use toolchain file:\t\t${CMAKE_TOOLCHAIN_FILE}\")\nendif()\nmessage(STATUS \"[cmake] Build for OS type:      ${CMAKE_SYSTEM_NAME}\")\nmessage(STATUS \"[cmake] Build for OS version:   ${CMAKE_SYSTEM_VERSION}\")\nmessage(STATUS \"[cmake] Build for CPU type:     ${CMAKE_SYSTEM_PROCESSOR}\")\nmessage(STATUS \"[cmake] Build type:             ${CMAKE_BUILD_TYPE}\")\nstring(TOUPPER \"${CMAKE_BUILD_TYPE}\" BUILD_TYPE)\nmessage(STATUS \"[cmake] Build with C++ flags:   ${CMAKE_CXX_FLAGS_${BUILD_TYPE}} ${CMAKE_CXX_FLAGS}\")\nmessage(STATUS \"[cmake] Build with C flags:     ${CMAKE_C_FLAGS_${BUILD_TYPE}} ${CMAKE_C_FLAGS}\")\nmessage(STATUS \"[cmake] C++ symbol visibility:  ${CMAKE_CXX_VISIBILITY_PRESET}\")\n\nforeach(component ${Poco_COMPONENTS})\n\tmessage(STATUS \"Building: ${component}\")\nendforeach()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1416015625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at poco@pocoproject.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.6689453125,
          "content": "# Contributing\n\n---\n## Bug Reports and Feature Requests\n---\nIf you think you've found a bug or would like to see a feature in one of the [upcoming releases](https://github.com/pocoproject/poco/milestones), file an [issue](https://github.com/pocoproject/poco/issues). Please make sure that your explanations are clear and coherent; do the homework of understanding the problem and searching for existing solutions before posting.\n\nPossible security issues or vulnerabilities can also be reported via email directly to the core team security AT pocoproject.org. The core team will respond to security issues within 24 hours.\n\nIf you're in a hurry, the fastest way to have bugs fixed or features added are code contributions. Good code contributions, to be precise; if you want to contribute, read on ...\n\n---\n\n\n## Code Contributions\n---\nBefore writing any code, please read the\n\n* [C++ Coding Style Guide](http://www.appinf.com/download/CppCodingStyleGuide.pdf) and\n* [Git branching model](http://nvie.com/posts/a-successful-git-branching-model/)\n\n[Pull requests](https://help.github.com/articles/using-pull-requests/) are our favorite channel for code contributions and the quickest way to get your fix or feature upstreamed and released. Here's a quick guide.\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) the [POCO](https://github.com/pocoproject/poco) repo\n\n2. Keep your repo [synced](https://help.github.com/articles/syncing-a-fork/) with the upstream to ensure smooth progress (i.e. that your changes do not interfere or conflict with someone elses's work). Note that the [devel](https://github.com/pocoproject/poco/tree/devel) branch is where most of the ongoing development happens. For new features or libraries, create a new branch with a descriptive name. See the mentioned [branching model](http://nvie.com/posts/a-successful-git-branching-model/) for details.\n\n3. Write the code changes; make sure they compile\n\n4. Write the tests (if applicable, and it is in most cases); make sure they pass\n\n5. Test your changes (preferably at least on major platforms - Linux, Windows, Mac)\n\n6. Send [pull request](https://help.github.com/articles/using-pull-requests/) with a descriptive and clear commit message\n\nImportant: Pull requests should either target a specific release branch (if in ongoing development), or the `main` branch.\n\nAt this point, it's our turn; if you've done everything well, we may just thank you and merge your request. Otherwise, we may provide some comments or suggestions to steer the contribution in the right direction.\n\n---\n\n## Contributing Mini-FAQ\n---\n**Q:** Is there any type of contributing license agreement that I have to sign to contribute new features to POCO?\n\n**A:** Currently, you are not required to sign a contributing license agreement. What we require is that you put all your contributions under the [Boost license](https://spdx.org/licenses/BSL-1.0). Also, for contributions that go into existing libraries, you are requested, for reasons of maintaining consistency, to assign the copyright to **\"Applied Informatics Software Engineering GmbH and Contributors\"**, by putting the corresponding license header in your source file (see the existing source files). If you want to contribute a complete library, you are free to keep the copyright to yourself, if you want, as long as you put the sources under the Boost license used by POCO.\n\n---\n\n**Q:** How can I get write access to the Git repository?\n\n**A:** For simplicity purposes, we keep the direct write access to the main repository within a small group of core contributors. Since git forks , merges and pull requests are very easy and simple, this was not an obstacle so far. If you believe you really, really need write access to main repo, please contact the project maintainers at poco@pocoproject.org.\n\n---\n\n**Q:** Why does compilation or test run fail on MinGW, Cygwin, [your platform of choice here]?\n\n**A:** Because we have limited manpower/resources available and can't keep up with every minute detail of every platform. Core team makes sure reasonably recent versions of **Visual Studio**, **clang** and **gcc** build/tests pass on Windows, OSX and Linux; the rest is left to the contributors and other parties with interest in particular platforms. As its name says, POCO is very portable and typically it is a minor code fix or ifdef that is needed to iron a wrinkle out; please consider changing it yourself and send us pull request - that will make everyone happy. If you are inclined to do so, please consider \"owning\" a platform or build system. It is not much of a commitment - you will be expected to (**a**) keep things tidy (i.e building cleanly with tests passing) in regards to your area and (**b**) respond to user's inquiries thereof.\n\n---\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.2998046875,
          "content": "Guenter Obiltschnig\nAlex Fabijanic\nPeter Schojer\nFerdinand Beyer\nKrzysztof Burghardt\nClaus Dabringer\nCaleb Epstein\nEran Hammer-Lahav\nChris Johnson\nSergey Kholodilov\nRyan Kraay\nLarry Lewis\nAndrew J. P. Maclean\nAndrew Marlow\nPaschal Mushubi\nJiang Shan\nDavid Shawley\nSergey Skorokhodov\nTom Tan\nSergey N. Yatskevich\nMarc Chevrier\nPhilippe Cuvillier\nMarian Krivos\nFranky Braem\nPhilip Prindeville\nAnton Yabchinskiy\nRangel Reale\nFabrizio Duhem\nPatrick White\nMike Naquin\nRoger Meier\nMathaus Mendel\nArturo Castro\nAdrian Imboden\nMatej Knopp\nPatrice Tarabbia\nLucas Clemente\nKarl Reid\nPascal Bach\nCristian Thiago Moecke\nSergei Nikulov\nAaron Kaluszka\nIyed Bennour\nScott Davis\nKristin Cowalcijk\nYuval Kashtan\nChristopher Baker\nJeff Adams\nMartin Osborne\nBjörn Schramke\nFrancis Andre\nKacper Piwiński\nHernan Martinez\nJacky Woo\nJörg-Christian Böhme\nMatej Kenda\nTomaž Beltram\nFriedrich Wilckens\nPavle Dragišić\nNino Belušić\nKari Argillander\nAlexander Bychuk\nAndrew Auclair\nJochen Sprickerhof\nJesse Hoogervorst\nAron Budea\nTou Zhu\nDaniel Grunwald\nDan Rosser\nEric Eichhorn\nJeremy Rifkin\nJouke Witteveen\nMarc Schlatter\nMarco Rebhan\nMert Övün\nMikhail Khachayants\nNicolau Leal Werneck\nSergei Trofimovich\nSeyyed Soroosh Hosseinalipour\nFelix Wang\nThomas Beutlich\nÉtienne Dupuis\nlanthora\nsiren186\nLara Dzivdzanovic\nMilan Tepic\nPeter Klotz\nnitram96\n"
        },
        {
          "name": "CppParser",
          "type": "tree",
          "content": null
        },
        {
          "name": "CppUnit",
          "type": "tree",
          "content": null
        },
        {
          "name": "Crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "DLLVersion.rc",
          "type": "blob",
          "size": 0.951171875,
          "content": "#ifdef APSTUDIO_INVOKED\n    #error This file is not editable by Visual C++.\n#endif //APSTUDIO_INVOKED\n\n#include \"winres.h\"\n\n#define POCO_VERSION 1,14,0,0\n#define POCO_VERSION_STR \"1.14.0\"\n\nVS_VERSION_INFO VERSIONINFO\n FILEVERSION POCO_VERSION\n PRODUCTVERSION POCO_VERSION\n FILEFLAGSMASK 0x17L\n#ifdef _DEBUG\n FILEFLAGS 0x1L\n#else\n FILEFLAGS 0x0L\n#endif\n FILEOS 0x4L\n FILETYPE 0x2L\n FILESUBTYPE 0x0L\nBEGIN\n    BLOCK \"StringFileInfo\"\n    BEGIN\n        BLOCK \"000004b0\"\n        BEGIN\n            VALUE \"CompanyName\", \"Applied Informatics Software Engineering GmbH\"\n            VALUE \"FileDescription\", \"This file is part of the POCO C++ Libraries.\"\n            VALUE \"FileVersion\", POCO_VERSION_STR\n            VALUE \"InternalName\", \"POCO\"\n            VALUE \"ProductName\", \"POCO C++ Libraries - https://pocoproject.org\"\n            VALUE \"ProductVersion\", POCO_VERSION_STR\n        END\n    END\n    BLOCK \"VarFileInfo\"\n    BEGIN\n        VALUE \"Translation\", 0x0, 1200\n    END\nEND\n"
        },
        {
          "name": "DNSSD",
          "type": "tree",
          "content": null
        },
        {
          "name": "Data",
          "type": "tree",
          "content": null
        },
        {
          "name": "Encodings",
          "type": "tree",
          "content": null
        },
        {
          "name": "Foundation",
          "type": "tree",
          "content": null
        },
        {
          "name": "JSON",
          "type": "tree",
          "content": null
        },
        {
          "name": "JWT",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.638671875,
          "content": "Boost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n---------------------------------------------------------------------------\nNote:\nIndividual files contain the following tag instead of the full license text.\n\n\tSPDX-License-Identifier:\tBSL-1.0\n\nThis enables machine processing of license information based on the SPDX\nLicense Identifiers that are here available: http://spdx.org/licenses/\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 13.587890625,
          "content": "#\n# Makefile\n#\n# The global Makefile for POCO [generated by mkrelease]\n#\n\nsinclude config.make\nsinclude config.build\nPOCO_CONFIG_INCLUDED = 1\n\nifndef POCO_BASE\n$(warning WARNING: POCO_BASE is not defined. Assuming current directory.)\nexport POCO_BASE=$(shell pwd)\nendif\nifdef POCO_VERBOSE\n$(info POCO_BASE           = $(POCO_BASE))\nendif\n\nifndef POCO_BUILD\nexport POCO_BUILD=$(POCO_BASE)\nendif\nifdef POCO_VERBOSE\n$(info POCO_BUILD          = $(POCO_BUILD))\nendif\n\n#\n# Determine OS\n#\nPOCO_HOST_OSNAME = $(shell uname)\nifeq ($(findstring CYGWIN,$(POCO_HOST_OSNAME)),CYGWIN)\nPOCO_HOST_OSNAME = CYGWIN\nendif\n\nifeq ($(findstring MINGW,$(POCO_HOST_OSNAME)),MINGW)\nPOCO_HOST_OSNAME = MinGW\nendif\nPOCO_HOST_OSARCH ?= $(subst /,-,$(shell uname -m | tr ' ' _))\n\n#\n# If POCO_CONFIG is not set, use the OS name as configuration name\n#\nifndef POCO_CONFIG\nPOCO_CONFIG = $(POCO_HOST_OSNAME)\nendif\nifdef POCO_VERBOSE\n$(info POCO_CONFIG         = $(POCO_CONFIG))\nendif\n\n#\n# Include System Specific Settings\n#\ninclude $(POCO_BASE)/build/config/$(POCO_CONFIG)\n\n#\n# Determine operating system\n#\nifndef POCO_TARGET_OSNAME\nOSNAME   := $(POCO_HOST_OSNAME)\nelse\nOSNAME   := $(POCO_TARGET_OSNAME)\nendif\nifdef POCO_VERBOSE\n$(info OSNAME              = $(OSNAME))\nendif\n\nifndef POCO_TARGET_OSARCH\nOSARCH   := $(POCO_HOST_OSARCH)\nelse\nOSARCH   := $(POCO_TARGET_OSARCH)\nendif\nifdef POCO_VERBOSE\n$(info OSARCH              = $(OSARCH))\nendif\n\n.PHONY: poco all libexecs cppunit trace tests samples cleans clean distclean install uninstall\n\n# TESTS and SAMPLES are set in config.make\npoco: libexecs $(if $(TESTS),tests) $(if $(SAMPLES),samples)\nall: libexecs tests samples\n\nINSTALLDIR = $(DESTDIR)$(POCO_PREFIX)\nCOMPONENTS = Foundation Encodings XML JSON Util Net Crypto NetSSL_OpenSSL Data Data/SQLite Data/ODBC Data/MySQL Data/PostgreSQL ActiveRecord ActiveRecord/Compiler Zip PageCompiler PageCompiler/File2Page JWT CppParser PDF MongoDB Redis Prometheus\n\ncppunit:\n\t$(MAKE) -C $(POCO_BASE)/CppUnit\n\nCppUnit-clean:\n\t$(MAKE) -C $(POCO_BASE)/CppUnit clean\n\ntrace:\nifdef POCO_ENABLE_TRACE\n\t$(MAKE) -C $(POCO_BASE)/Trace\nendif\n\nTrace-clean:\nifdef POCO_ENABLE_TRACE\n\t$(MAKE) -C $(POCO_BASE)/Trace clean\nendif\n\ninstall: libexecs\n\tmkdir -p $(INSTALLDIR)/include/Poco\n\tmkdir -p $(INSTALLDIR)/lib\n\tmkdir -p $(INSTALLDIR)/bin\n\tfor comp in $(filter-out $(foreach f,$(OMIT),$f%),$(COMPONENTS)) ; do \\\n\t\tif [ -d \"$(POCO_BASE)/$$comp/include\" ] ; then \\\n\t\t\tcp -Rf $(POCO_BASE)/$$comp/include/* $(INSTALLDIR)/include/ ; \\\n\t\tfi ; \\\n\t\tif [ -d \"$(POCO_BUILD)/$$comp/bin\" ] ; then \\\n\t\t\tfind $(POCO_BUILD)/$$comp/bin -perm -700 -type f -exec cp -f {} $(INSTALLDIR)/bin \\; ; \\\n\t\tfi ; \\\n\tdone\nifeq ($(OSNAME), CYGWIN)\n\tfind $(POCO_BUILD)/lib/$(OSNAME)/$(OSARCH) -name \"cygPoco*\" -type f -exec cp -f  {} $(INSTALLDIR)/bin \\;\n\tfind $(POCO_BUILD)/lib/$(OSNAME)/$(OSARCH) -name \"cygPoco*\" -type l -exec cp -Rf {} $(INSTALLDIR)/bin \\;\nendif\n\tfind $(POCO_BUILD)/lib/$(OSNAME)/$(OSARCH) -name \"libPoco*\" -type f -exec cp -f  {} $(INSTALLDIR)/lib \\;\n\tfind $(POCO_BUILD)/lib/$(OSNAME)/$(OSARCH) -name \"libPoco*\" -type l -exec cp -Rf {} $(INSTALLDIR)/lib \\;\n\nuninstall:\n\t[ -d $(INSTALLDIR)/include/Poco ] && rm -rf $(INSTALLDIR)/include/Poco || echo \"No installed Poco headers found\";\n\t[ -d $(INSTALLDIR)/include/CppUnit ] && rm -rf $(INSTALLDIR)/include/CppUnit || echo \"No installed CppUnit headers found\";\nifeq ($(OSNAME), Cygwin)\n\tfind $(INSTALLDIR)/bin -name \"cygPoco*\" -type f -exec rm -f  {} \\;\n\tfind $(INSTALLDIR)/bin -name \"cygPoco*\" -type l -exec rm -f {} \\;\nendif\n\tfind $(INSTALLDIR)/lib -name \"libPoco*\" -type f -exec rm -f  {} \\;\n\tfind $(INSTALLDIR)/lib -name \"libPoco*\" -type l -exec rm -f {} \\;\n\nlibexecs =  Foundation-libexec Encodings-libexec XML-libexec JSON-libexec Util-libexec Net-libexec Crypto-libexec NetSSL_OpenSSL-libexec Data-libexec Data/SQLite-libexec Data/ODBC-libexec Data/MySQL-libexec Data/PostgreSQL-libexec ActiveRecord-libexec ActiveRecord/Compiler-libexec Zip-libexec JWT-libexec PageCompiler-libexec PageCompiler/File2Page-libexec CppParser-libexec PDF-libexec MongoDB-libexec Redis-libexec Prometheus-libexec\ntests    =  Foundation-tests Encodings-tests XML-tests JSON-tests Util-tests Net-tests Crypto-tests NetSSL_OpenSSL-tests Data-tests Data/SQLite-tests Data/ODBC-tests Data/MySQL-tests Data/PostgreSQL-tests ActiveRecord-tests JWT-tests Zip-tests CppParser-tests PDF-tests MongoDB-tests Redis-tests Prometheus-tests\nsamples  =  Foundation-samples Encodings-samples XML-samples JSON-samples Util-samples Net-samples Crypto-samples NetSSL_OpenSSL-samples Data-samples MongoDB-samples Prometheus-samples Zip-samples PageCompiler-samples PDF-samples\ncleans   =  Foundation-clean Encodings-clean XML-clean JSON-clean Util-clean Net-clean Crypto-clean NetSSL_OpenSSL-clean Data-clean Data/SQLite-clean Data/ODBC-clean Data/MySQL-clean Data/PostgreSQL-clean ActiveRecord-clean ActiveRecord/Compiler-clean JWT-clean Zip-clean PageCompiler-clean PageCompiler/File2Page-clean CppParser-clean PDF-clean MongoDB-clean Redis-clean Prometheus-clean\n\n.PHONY: $(libexecs)\n.PHONY: $(tests)\n.PHONY: $(samples)\n.PHONY: $(cleans)\n\nlibexecs: $(filter-out $(foreach f,$(OMIT),$f%),$(libexecs))\ntests: $(filter-out $(foreach f,$(OMIT),$f%),$(tests))\nsamples: $(filter-out $(foreach f,$(OMIT),$f%),$(samples))\ncleans: $(filter-out $(foreach f,$(OMIT),$f%),$(cleans))\n\nFoundation-libexec: trace\n\t$(MAKE) -C $(POCO_BASE)/Foundation\n\nFoundation-tests: Foundation-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Foundation/testsuite\n\nFoundation-samples: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/Foundation/samples\n\nFoundation-clean:\n\t$(MAKE) -C $(POCO_BASE)/Foundation clean\n\t$(MAKE) -C $(POCO_BASE)/Foundation/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Foundation/samples clean\n\nEncodings-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/Encodings\n\nEncodings-tests: Encodings-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Encodings/testsuite\n\nEncodings-samples: Encodings-libexec\n\t$(MAKE) -C $(POCO_BASE)/Encodings/samples\n\nEncodings-clean:\n\t$(MAKE) -C $(POCO_BASE)/Encodings clean\n\t$(MAKE) -C $(POCO_BASE)/Encodings/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Encodings/samples clean\n\nXML-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/XML\n\nXML-tests: XML-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/XML/testsuite\n\nXML-samples: XML-libexec\n\t$(MAKE) -C $(POCO_BASE)/XML/samples\n\nXML-clean:\n\t$(MAKE) -C $(POCO_BASE)/XML clean\n\t$(MAKE) -C $(POCO_BASE)/XML/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/XML/samples clean\n\nJSON-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/JSON\n\nJSON-tests: JSON-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/JSON/testsuite\n\nJSON-samples: JSON-libexec\n\t$(MAKE) -C $(POCO_BASE)/JSON/samples\n\nJSON-clean:\n\t$(MAKE) -C $(POCO_BASE)/JSON clean\n\t$(MAKE) -C $(POCO_BASE)/JSON/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/JSON/samples clean\n\nUtil-libexec: Foundation-libexec XML-libexec JSON-libexec\n\t$(MAKE) -C $(POCO_BASE)/Util\n\nUtil-tests: Util-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Util/testsuite\n\nUtil-samples: Util-libexec\n\t$(MAKE) -C $(POCO_BASE)/Util/samples\n\nUtil-clean:\n\t$(MAKE) -C $(POCO_BASE)/Util clean\n\t$(MAKE) -C $(POCO_BASE)/Util/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Util/samples clean\n\nNet-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/Net\n\nNet-tests: Net-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Net/testsuite\n\nNet-samples: Net-libexec  Foundation-libexec XML-libexec Util-libexec\n\t$(MAKE) -C $(POCO_BASE)/Net/samples\n\nNet-clean:\n\t$(MAKE) -C $(POCO_BASE)/Net clean\n\t$(MAKE) -C $(POCO_BASE)/Net/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Net/samples clean\n\nCrypto-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/Crypto\n\nCrypto-tests: Crypto-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Crypto/testsuite\n\nCrypto-samples: Crypto-libexec  Foundation-libexec Util-libexec\n\t$(MAKE) -C $(POCO_BASE)/Crypto/samples\n\nCrypto-clean:\n\t$(MAKE) -C $(POCO_BASE)/Crypto clean\n\t$(MAKE) -C $(POCO_BASE)/Crypto/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Crypto/samples clean\n\nNetSSL_OpenSSL-libexec: Foundation-libexec Net-libexec Util-libexec Crypto-libexec\n\t$(MAKE) -C $(POCO_BASE)/NetSSL_OpenSSL\n\nNetSSL_OpenSSL-tests: NetSSL_OpenSSL-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/NetSSL_OpenSSL/testsuite\n\nNetSSL_OpenSSL-samples: NetSSL_OpenSSL-libexec\n\t$(MAKE) -C $(POCO_BASE)/NetSSL_OpenSSL/samples\n\nNetSSL_OpenSSL-clean:\n\t$(MAKE) -C $(POCO_BASE)/NetSSL_OpenSSL clean\n\t$(MAKE) -C $(POCO_BASE)/NetSSL_OpenSSL/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/NetSSL_OpenSSL/samples clean\n\nData-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data\n\nDataTest-libexec: Data-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data/DataTest\n\nData-tests: Data-libexec DataTest-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Data/testsuite\n\nData-samples: Data-libexec Data-libexec Data/SQLite-libexec Net-libexec Util-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data/samples\n\nData-clean:\n\t$(MAKE) -C $(POCO_BASE)/Data clean\n\t$(MAKE) -C $(POCO_BASE)/Data/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Data/samples clean\n\nData/SQLite-libexec: Foundation-libexec Data-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data/SQLite\n\nData/SQLite-tests: Data/SQLite-libexec DataTest-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Data/SQLite/testsuite\n\nData/SQLite-clean:\n\t$(MAKE) -C $(POCO_BASE)/Data/SQLite clean\n\t$(MAKE) -C $(POCO_BASE)/Data/SQLite/testsuite clean\n\nData/ODBC-libexec: Foundation-libexec Data-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data/ODBC\n\nData/ODBC-tests: Data/ODBC-libexec DataTest-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Data/ODBC/testsuite\n\nData/ODBC-clean:\n\t$(MAKE) -C $(POCO_BASE)/Data/ODBC clean\n\t$(MAKE) -C $(POCO_BASE)/Data/ODBC/testsuite clean\n\nData/MySQL-libexec: Foundation-libexec Data-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data/MySQL\n\nData/MySQL-tests: Data/MySQL-libexec DataTest-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Data/MySQL/testsuite\n\nData/MySQL-clean:\n\t$(MAKE) -C $(POCO_BASE)/Data/MySQL clean\n\t$(MAKE) -C $(POCO_BASE)/Data/MySQL/testsuite clean\n\nData/PostgreSQL-libexec: Foundation-libexec Data-libexec\n\t$(MAKE) -C $(POCO_BASE)/Data/PostgreSQL\n\nData/PostgreSQL-tests: Data/PostgreSQL-libexec DataTest-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Data/PostgreSQL/testsuite\n\nData/PostgreSQL-clean:\n\t$(MAKE) -C $(POCO_BASE)/Data/PostgreSQL clean\n\t$(MAKE) -C $(POCO_BASE)/Data/PostgreSQL/testsuite clean\n\nActiveRecord-libexec: Foundation-libexec Data-libexec\n\t$(MAKE) -C $(POCO_BASE)/ActiveRecord\n\nActiveRecord-tests: ActiveRecord-libexec Data/SQLite-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/ActiveRecord/testsuite\n\nActiveRecord-clean:\n\t$(MAKE) -C $(POCO_BASE)/ActiveRecord clean\n\t$(MAKE) -C $(POCO_BASE)/ActiveRecord/testsuite clean\n\nActiveRecord/Compiler-libexec: Foundation-libexec Util-libexec\n\t$(MAKE) -C $(POCO_BASE)/ActiveRecord/Compiler\n\nActiveRecord/Compiler-clean:\n\t$(MAKE) -C $(POCO_BASE)/ActiveRecord/Compiler clean\n\nZip-libexec: Foundation-libexec Net-libexec Util-libexec XML-libexec\n\t$(MAKE) -C $(POCO_BASE)/Zip\n\nZip-tests: Zip-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Zip/testsuite\n\nZip-samples: Zip-libexec\n\t$(MAKE) -C $(POCO_BASE)/Zip/samples\n\nZip-clean:\n\t$(MAKE) -C $(POCO_BASE)/Zip clean\n\t$(MAKE) -C $(POCO_BASE)/Zip/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Zip/samples clean\n\nPageCompiler-libexec: Net-libexec Util-libexec XML-libexec Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/PageCompiler\n\nPageCompiler-samples: PageCompiler-libexec\n\t$(MAKE) -C $(POCO_BASE)/PageCompiler/samples\n\nPageCompiler-clean:\n\t$(MAKE) -C $(POCO_BASE)/PageCompiler clean\n\t$(MAKE) -C $(POCO_BASE)/PageCompiler/samples clean\n\nPageCompiler/File2Page-libexec: Net-libexec Util-libexec XML-libexec Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/PageCompiler/File2Page\n\nPageCompiler/File2Page-clean:\n\t$(MAKE) -C $(POCO_BASE)/PageCompiler/File2Page clean\n\nJWT-libexec: Foundation-libexec JSON-libexec Crypto-libexec\n\t$(MAKE) -C $(POCO_BASE)/JWT\n\nJWT-tests: JWT-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/JWT/testsuite\n\nJWT-clean:\n\t$(MAKE) -C $(POCO_BASE)/JWT clean\n\t$(MAKE) -C $(POCO_BASE)/JWT/testsuite clean\n\nCppParser-libexec: Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/CppParser\n\nCppParser-tests: CppParser-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/CppParser/testsuite\n\nCppParser-clean:\n\t$(MAKE) -C $(POCO_BASE)/CppParser clean\n\t$(MAKE) -C $(POCO_BASE)/CppParser/testsuite clean\n\nPDF-libexec: Util-libexec XML-libexec JSON-libexec Foundation-libexec\n\t$(MAKE) -C $(POCO_BASE)/PDF\n\nPDF-tests: PDF-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/PDF/testsuite\n\nPDF-samples: PDF-libexec\n\t$(MAKE) -C $(POCO_BASE)/PDF/samples\n\nPDF-clean:\n\t$(MAKE) -C $(POCO_BASE)/PDF clean\n\t$(MAKE) -C $(POCO_BASE)/PDF/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/PDF/samples clean\n\nMongoDB-libexec: Foundation-libexec Net-libexec\n\t$(MAKE) -C $(POCO_BASE)/MongoDB\n\nMongoDB-tests: MongoDB-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/MongoDB/testsuite\n\nMongoDB-samples: MongoDB-libexec\n\t$(MAKE) -C $(POCO_BASE)/MongoDB/samples\n\nMongoDB-clean:\n\t$(MAKE) -C $(POCO_BASE)/MongoDB clean\n\t$(MAKE) -C $(POCO_BASE)/MongoDB/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/MongoDB/samples clean\n\nRedis-libexec: Foundation-libexec Net-libexec\n\t$(MAKE) -C $(POCO_BASE)/Redis\n\nRedis-tests: Redis-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Redis/testsuite\n\nRedis-clean:\n\t$(MAKE) -C $(POCO_BASE)/Redis clean\n\t$(MAKE) -C $(POCO_BASE)/Redis/testsuite clean\n\nPrometheus-libexec: Foundation-libexec Net-libexec\n\t$(MAKE) -C $(POCO_BASE)/Prometheus\n\nPrometheus-tests: Prometheus-libexec cppunit\n\t$(MAKE) -C $(POCO_BASE)/Prometheus/testsuite\n\nPrometheus-samples: Prometheus-libexec Util-libexec\n\t$(MAKE) -C $(POCO_BASE)/Prometheus/samples\n\nPrometheus-clean:\n\t$(MAKE) -C $(POCO_BASE)/Prometheus clean\n\t$(MAKE) -C $(POCO_BASE)/Prometheus/testsuite clean\n\t$(MAKE) -C $(POCO_BASE)/Prometheus/samples clean\n\nclean: cleans Trace-clean CppUnit-clean\n\ndistclean:\n\trm -rf $(POCO_BUILD)/lib\n\tfind $(POCO_BUILD) -name obj -type d -print0 | xargs -0 rm -rf\n\tfind $(POCO_BUILD) -name .dep -type d -print0 | xargs -0 rm -rf\n\tfind $(POCO_BUILD) -name bin -type d -print0 | xargs -0 rm -rf\n"
        },
        {
          "name": "MongoDB",
          "type": "tree",
          "content": null
        },
        {
          "name": "Net",
          "type": "tree",
          "content": null
        },
        {
          "name": "NetSSL_OpenSSL",
          "type": "tree",
          "content": null
        },
        {
          "name": "NetSSL_Win",
          "type": "tree",
          "content": null
        },
        {
          "name": "PDF",
          "type": "tree",
          "content": null
        },
        {
          "name": "PageCompiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "PocoDoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProGen",
          "type": "tree",
          "content": null
        },
        {
          "name": "Prometheus",
          "type": "tree",
          "content": null
        },
        {
          "name": "README",
          "type": "blob",
          "size": 11.9521484375,
          "content": "This is the README file for the POCO C++ Libraries.\n\nIn this document you will find a brief description of the directory layout,\nas well as a description necessary steps to build the POCO C++ Libraries.\n\nThe Foundation library contains a platform abstraction layer (including classes\nfor multithreading, file system access, logging, etc.), as well as\na large number of useful utility classes, such various stream buffer and stream\nclasses, URI handling, and many more.\nThe XML library contains an XML parser with SAX2 and DOM interfaces,\nas well as an XMLWriter.\nThe Util library contains classes for working with configuration files and\ncommand line arguments, as well as various utility classes.\nThe Net library contains network classes (sockets, HTTP client/server, etc.).\nAll libraries come with a test suite and a number of sample programs.\n\nThe basic directory layout is as follows:\n\nbuild/                     the build system for Unix and additional utility scripts\n    config/                build configurations for various Unix platforms\n    rules/                 common build rules for all platforms\n    scripts/               build and utility scripts\n    vxconfig/              VxWorks build configurations\n\ncmake/                     Support files for CMake\n\nbin/                       all executables (dynamic link libraries on Windows)\nbin64/                     64-bit executables (and DLLs) on Windows\n\ndoc/                       additional documentation\n\nlib/                       all libraries (import libraries on Windows)\nlib64/                     64-bit libraries on Windows\n\nCppUnit/                   project and make/build files for the CppUnit unit testing framework\n    doc/                   additional documentation\n    include/\n        CppUnit/           header files for CppUnit\n    src/                   source files for CppUnit\n    WinTestRunner/         Windows GUI for CppUnit\n\nFoundation/                project and make/build files for the Foundation library\n    include/\n        Poco/              header files for the Foundation library\n    src/                   source files for the Foundation library\n    testsuite/             project and make/build files for the Foundation testsuite\n              src/         source files for the Foundation testsuite\n              bin/         test suite executables\n    samples/               sample applications for the Foundation library\n\nXML/                       project and make/build files for the XML library\n    include/\n        Poco/\n            XML/           header files for the core XML library\n            SAX/           header files for SAX support\n            DOM/           header files for DOM support\n    src/                   source files for the XML library\n    testsuite/             project and make/build files for the XML testsuite\n              src/         source files for the XML testsuite\n              bin/         test suite executables\n    samples/               sample applications for the XML library\n\nNet/                       project and make/build files for the Net library\n    include/\n        Poco/\n            Net/           header files for the Net library\n    src/                   source files for the Net library\n    testsuite/             project and make/build files for the Net testsuite\n              src/         source files for the Net testsuite\n              bin/         test suite executables\n    samples/               sample applications for the Net library\n\n\nDepending on what package you have downloaded, there may be other libraries\nas well (such as Data, Crypto, NetSSL_OpenSSL and Zip).\n\n\nDOCUMENTATION\n=============\n\nPlenty of documentation (tutorial slides, articles and SDK reference)\nis available at <https://docs.pocoproject.org/>.\n\n\nEXTERNAL DEPENDENCIES\n=====================\n\nThe following libraries require third-party software (header files and\nlibraries) being installed to build properly:\n\n- NetSSL_OpenSSL, Crypto and JWT require OpenSSL.\n- Data/ODBC requires ODBC\n  (Microsoft ODBC on Windows, unixODBC or iODBC on Unix/Linux)\n- Data/MySQL requires the MySQL or MariaDB client library.\n- Data/PostgreSQL requires the PostgreSQL client library (libpq).\n\nMost Unix/Linux systems already have OpenSSL preinstalled. If your system\ndoes not have OpenSSL, please get it from https://www.openssl.org or\nanother source. You do not have to build OpenSSL yourself - a binary\ndistribution is fine (e.g., apt-get install openssl libssl-dev).\nOn macOS, install OpenSSL via Homebrew (brew install openssl).\nOn Windows, OpenSSL can be installed with vcpkg.\n\nThe easiest way to install OpenSSL on Windows is to get the pre-built\nlibraries from the pocoproject/openssl Git repository at\n<https://github.com/pocoproject/openssl>. This repository is included\nas a submodule in the poco GitHub repository, but not in the release\nsource code packages. You can also provide your own OpenSSL build by\nediting the Visual Studio project files.\n\nDepending on where you have installed the OpenSSL libraries,\nyou might have to edit the build script (buildwin.cmd), or add the\nnecessary paths to the INCLUDE and LIB environment variables.\n\nThe Data library requires ODBC support on your system if you want\nto build the ODBC connector (which is the default). On Windows\nplatforms, ODBC should be readily available if you have the\nWindows SDK. On Unix/Linux platforms, you can use iODBC\n(preinstalled on macOS X) or unixODBC. For the MySQL connector,\nthe MySQL client libraries and header files are required.\n\nThe Data/ODBC and Data/MySQL Makefiles will search for the ODBC\nand MySQL headers and libraries in various places. Nevertheless,\nthe Makefiles may not be able to find the headers and libraries.\nIn this case, please edit the Makefile in Data/ODBC and/or Data/MySQL\naccordingly.\n\n\nBUILDING WITH CMAKE\n===================\n\nThe POCO C++ Libraries support CMake as a build system on Linux, macOS and Windows.\nTo build the POCO C++ Libraries with CMake:\n\n1. create a cmake-build directory (e.g. in the POCO root directory):\n\n$ mkdir cmake-build\n\n2. and run CMake from there:\n\n$ cd cmake-build\n$ cmake ..\n$ make -s -j (or build the generated Visual Studio solution on Windows)\n\nIf you cannot or do not want to build with CMake, there are other options,\ndescribed in the following.\n\n\nBUILDING - USING VCPKG\n======================\n\nYou can download and install poco using the vcpkg (https://vcpkg.io)\ndependency manager:\n\n$ git clone https://github.com/Microsoft/vcpkg.git\n$ cd vcpkg\n$ ./bootstrap-vcpkg.sh\n$ ./vcpkg integrate install\n$ ./vcpkg install poco\n\nThe Poco port in vcpkg is kept up to date by Microsoft team members and community contributors.\nIf the version is out of date, please create an issue or pull request(https://github.com/Microsoft/vcpkg)\non the vcpkg repository.\n\n\nBUILDING - USING CONAN\n======================\n\nYou can download and install poco using the Conan(https://github.com/conan-io/conan)\npackage manager. It needed to be installed first(https://conan.io/downloads.html):\n\nYou can install Poco libraries from Conan Center(https://conan.io/center.html):\n\n$ conan install -r conancenter poco/1.13.3@\n\nOr, you can download Poco recipe and build locally:\n\n$ conan install -r conancenter poco/1.13.3@ --build=poco\n\nThe Poco recipe and packages in Conan Center are kept up to date by Conan team members and community contributors.\nIf the version is out of date, or you detect any wrong behavior, please create an issue or pull request(https://github.com/conan-io/conan-center-index)\non the Conan Center Index repository.\n\n\nBUILDING ON WINDOWS\n===================\n\nMicrosoft Visual Studio 2019 or newer is required to build the POCO C++ Libraries on\nWindows platforms. Solution and project files for Visual Studio 2019 to 2022 are included.\n64-bit (x64) builds are supported as well.\nYou can either build from within Visual Studio (Build->Batch Build->Select All;Rebuild)\nor from the command line. To build from the command line, start the\nDeveloper PowerShell for Visual Studio and cd to the directory where you\nhave extracted the POCO C++ Libraries sources. Then, run the buildwin.ps1 script\nand pass the desired options.\n\nTo show available options, run:\n\n> buildwin.ps1 -help\n\nExample:\n\n> buildwin.ps1 -vs 170 -action build -linkmode shared -config release -platform x64 -samples -tests\n\nCertain libraries, like NetSSL_OpenSSL, Crypto or Data/MySQL have dependencies\nto other libraries. The Visual Studio project files have been configured to\nuse vcpkg to install the required packages.\n\nIn order to run the test suite and the samples, the top-most bin directory containing\nthe shared libraries must be in the PATH environment variable.\n\nIMPORTANT NOTE: Please make sure that the path to the directory containing the\nPOCO C++ Libraries source tree does not contain spaces. Otherwise, the Microsoft\nmessage compiler may fail when building the Foundation library.\n\n\nBUILDING ON UNIX/LINUX/macOS\n============================\n\nFor building on Unix platforms, the POCO C++ Libraries come with their own\nbuild system. The build system is based on GNU Make 5.0 (or newer), with the help\nfrom a few shell scripts. If you do not have GNU Make 5.0 (or later) installed on\nyour machine, you will need to download it from\nhttp://directory.fsf.org/devel/build/make.html>,\nbuild and install it prior to building the POCO C++ Libraries.\n\nYou can check the version of GNU Make installed on your system with\n\n> make --version\n\nor\n\n> gmake --version\n\nOnce you have GNU Make up and running, the rest is quite simple.\nTo extract the sources and build all libraries, testsuites and samples, simply\n\n> gunzip poco-X.Y.tar.gz\n> tar -xf poco-X.Y.tar\n> cd poco-X.Y\n> ./configure\n> make -s\n\nSee the configure script source for a list of possible options.\nFor starters, we recommend --no-tests and --no-samples, to reduce build times.\nOn a multicore or multiprocessor machine, use parallel makes to speed up\nthe build (make -j4).\n\nOnce you have successfully built POCO, you can install it\nto /usr/local (or another directory specified as parameter\nto configure --prefix=<path>):\n\n> sudo make -s install\n\nYou can omit certain components from the build. For example, you might\nwant to omit Data/ODBC or Data/MySQL if you do not have the corresponding\nthird-party libraries (iodbc or unixodbc, mysqlclient) installed\non your system. To do this, use the --omit argument to configure:\n\n> ./configure --omit=Data/ODBC,Data/MySQL\n\n\nIMPORTANT: Make sure that the path to the build directory does not\ncontain symbolic links. Furthermore, on macOS (or other systems\nwith case insensitive filesystems), make sure that the characters in\nthe path have the correct case. Otherwise you'll get an error saying\n\"Current working directory not under $PROJECT_BASE.\".\n\n\nBUILDING ON QNX NEUTRINO\n========================\n\nFor QNX Neutrino, the Unix build system (see the instructions above) is used.\nYou can use the build system to cross-compile for a target platform on a Solaris or\nLinux host. Unfortunately, the Cygwin-based Windows host environment has some major\nquirks that prevent the build system from working there. You can also use the\nbuild system on a self-hosted QNX system. The default build configuration for QNX\n(found in build/config/QNX) is for a self-hosted x86 platform. To specify another\ntarget, edit the CCVER setting in the build configuration file. For example, to\ncompile for a PowerPC target, specify CCVER=3.3.1,gcc_ntoppcbe.\n\nService Pack 1 for QNX Neutrino 6.3 must be installed, otherwise compiling the\nFoundation library will fail due to a problem with the <list> header in the\ndefault (Dinkumware) C++ standard library.\n\nWhen building on QNX, you might want to disable NetSSL_OpenSSL, Crypto and\nsome Data connectors, unless you have the necessary third party components\navailable:\n\n> ./configure --omit=NetSSL_OpenSSL,Crypto,Data/ODBC,Data/MySQL\n\n\nBUILDING FOR VXWORKS\n====================\n\nPlease see the VxWorks Platform Notes in the Reference Documentation for\nmore information. The Reference Documentation can be found online\nat <http://pocoproject.org/docs/>.\n\n\nMORE INFORMATION\n================\n\nFor more information, see the POCO C++ Libraries website\nat <https://pocoproject.org>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.666015625,
          "content": "![alt text][logo]\n\n[![poco-ci](https://github.com/pocoproject/poco/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/pocoproject/poco/actions/workflows/ci.yml)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/370/badge)](https://bestpractices.coreinfrastructure.org/projects/370)\n\n\n### POCO (Portable Components) C++ Libraries are:\n\n- A collection of C++ class libraries, conceptually similar to the Java Class Library or the .NET Framework.\n- Focused on solutions to frequently-encountered practical problems.\n- Focused on \"internet-age\" network-centric applications.\n- Written in efficient, modern, 100% ANSI/ISO Standard C++.\n- Based on and complementing the C++ Standard Library/STL.\n- Highly portable and available on many different platforms, from embedded to server.\n- Open Source, licensed under the [Boost Software License](https://spdx.org/licenses/BSL-1.0).\n\n![alt text][overview]\n\nTo start using POCO, see the [Guided Tour](https://pocoproject.org/docs/00100-GuidedTour.html)\nand [Getting Started](https://pocoproject.org/docs/00200-GettingStarted.html) documents.\n\n\n## Quick Start (with CMake)\n\n### Prerequisites\n\n- CMake 3.15 or newer\n- A C++17 compiler (Visual C++ 2017, GCC 8.0, Clang 5, or newer)\n- OpenSSL headers and libraries (optional, but recommended)\n- MySQL, PostgreSQL and ODBC client libraries (optional)\n\nMost Unix/Linux systems already have OpenSSL preinstalled. If your system\ndoes not have OpenSSL, please get it from <https://www.openssl.org> or\nanother source. You do not have to build OpenSSL yourself - a binary\ndistribution is fine. For example, via Debian APT:\n\n```\n$ apt-get install openssl libssl-dev\n```\n\nOn macOS, the easiest way to install OpenSSL is via [Homebrew](https://brew.sh):\n\n```\n$ brew install openssl\n```\n\nThe easiest way to install OpenSSL on Windows is to use a binary\n(prebuild) release, for example the one from Shining Light\nProductions that comes with a\n[Windows installer](https://www.slproweb.com/products/Win32OpenSSL.html).\nOpenSSL can also be installed via the `vcpkg` package manager.\n\nOn Windows, POCO can also use the native Windows TLS APIs (SChannel).\n\n### Installing All Dependencies (Linux and macOS)\n\nAll dependencies can be installed with the following commands:\n\n#### Debian Linux (including Ubuntu and Raspbian)\n\n```\n$ sudo apt-get -y update && sudo apt-get -y install git g++ make cmake libssl-dev libmysqlclient-dev libpq-dev\n```\n\n#### RedHat Linux\n\n```\n$ sudo yum install -y git gcc-c++ make cmake3 openssl-devel mysql-devel postgresql-devel \n```\n\n#### macOS (with Homebrew)\n\n```\n$ brew install cmake openssl mysql-client libpq\n```\n\n### Building with CMake (Linux, macOS, Windows)\n\n[CMake](https://cmake.org) (version 3.15 or newer) is the recommended build system for\nbuilding the POCO C++ Libraries.\n\n```\n$ git clone -b main https://github.com/pocoproject/poco.git\n$ cd poco\n$ mkdir cmake-build\n$ cd cmake-build\n$ cmake ..\n$ cmake --build . --config Release\n```\n\nOn macOS, it's necessary to tell CMake where to find the OpenSSL headers\nand libraries by setting the `OPENSSL_ROOT_DIR` CMake variable.\nFor example, if OpenSSL has been installed with Homebrew,\nthe `cmake` invocation becomes:\n\n```\n$ cmake .. -DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl@3\n```\n\nSimilarly, the locations of other external libraries can be specified:\n\n```\n$ cmake .. -DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl@3 -DMYSQL_ROOT_DIR=/opt/homebrew/opt/mysql-client -DPostgreSQL_ROOT_DIR=/opt/homebrew/opt/libpq\n```\n\nOther common ways of building with CMake (e.g., `cmake-gui`) will also work.\n\nThere are also a number of project-specific CMake variables that can be changed.\n\n\n#### Cross-Compiling\n\nWith a proper CMake toolchain file (specified via the `CMAKE_TOOLCHAIN_FILE` CMake variable),\nthe POCO C++ Libraries can be cross-compiled for embedded Linux systems:\n\n```\n$ cmake .. -DCMAKE_TOOLCHAIN_FILE=/path/to/mytoolchain.cmake -DCMAKE_INSTALL_PREFIX=/path/to/target\n```\n\n\n#### Installing\n\nThe POCO C++ Libraries headers and libraries can be optionally be installed by building the `install` target.\n\n```\n$ sudo cmake --build . --target install\n```\n\nThe default install location is `/usr/local/` on Linux and macOS and\n`C:\\Program Files (x64)\\` on Windows and can be overridden by setting\nthe `CMAKE_INSTALL_PREFIX` CMake variable.\n\n\n#### Building and Installing - Using vcpkg\n\nYou can download and install poco using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n```\n$ git clone https://github.com/Microsoft/vcpkg.git\n$ cd vcpkg\n$ ./bootstrap-vcpkg.sh\n$ ./vcpkg integrate install\n$ ./vcpkg install poco\n```\nThe poco port in vcpkg is kept up to date by Microsoft team members and community contributors.\nIf the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg)\non the vcpkg repository.\n\n\n#### Building and Installing - Using Conan\n\nYou can download and install poco using the Conan(https://github.com/conan-io/conan)\npackage manager. It needed to be installed first(https://conan.io/downloads.html):\n\nYou can install Poco libraries from Conan Center(https://conan.io/center.html):\n\n    $ conan install -r conancenter poco/1.12.0@\n\nOr, you can download Poco recipe and build locally:\n\n    $ conan install -r conancenter poco/1.12.0@ --build=poco\n\nThe Poco recipe and packages in Conan Center are kept up to date by Conan team members and community contributors.\nIf the version is out of date, or you detect any wrong behavior, please create an issue or pull request(https://github.com/conan-io/conan-center-index)\non the Conan Center Index repository.\n\n\n### Building Without CMake\n\nIf you do not want to or cannot use CMake, POCO can also be built with Visual Studio\n(project and solution files included) or GNU Make (Linux, macOS and other supported Unix platforms).\n\nPlease refer to the [documentation](https://pocoproject.org/docs) for more information.\n\n\n### Getting POCO via a Package Manager\n\nPOCO can also be obtained via different [package managers](https://pocoproject.org/download.html).\n\n\n## Community and Contributing\n\nPOCO has an active user and contributing community, please visit our [website](https://pocoproject.org) and [blog](https://pocoproject.org/blog).\nAnswers to POCO-related questions can also be found on [Stack Overflow](https://stackoverflow.com/questions/tagged/poco-libraries).\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for submitting contributions, bugs reports, feature requests or security issues.\n\n### POCO vs. Boost\n\nIn regards to Boost, in spite of some functional overlapping,\nPOCO is best thought of as a Boost complement (rather than replacement).\nSide-by-side use of Boost and POCO is a very common occurrence.\n\n[overview]: doc/images/overview.png \"Poco Overview\"\n[logo]: doc/images/logo.png \"Poco Logo\"\n"
        },
        {
          "name": "Redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "SevenZip",
          "type": "tree",
          "content": null
        },
        {
          "name": "Trace",
          "type": "tree",
          "content": null
        },
        {
          "name": "Util",
          "type": "tree",
          "content": null
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "1.14.0\n"
        },
        {
          "name": "XML",
          "type": "tree",
          "content": null
        },
        {
          "name": "Zip",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_cmake.cmd",
          "type": "blob",
          "size": 0.4990234375,
          "content": "# POCO_STATIC=1 - for static build\n# POCO_UNBUNDLED - for no built-in version of libs\n# CMAKE_INSTALL_PREFIX=path - for install path\n\n\ncmake -H. -Bcmake-build -DCMAKE_BUILD_TYPE=Debug -G\"NMake Makefiles JOM\" %1 %2 %3 %4 %5\ncmake --build cmake-build --target all -- /j3\ncmake --build cmake-build --target install\n\nrmdir cmake-build\n\ncmake -H. -Bcmake-build -DCMAKE_BUILD_TYPE=Release -G\"NMake Makefiles JOM\" %1 %2 %3 %4 %5\ncmake --build cmake-build --target all -- /j3\ncmake --build cmake-build --target install\n"
        },
        {
          "name": "build_cmake.sh",
          "type": "blob",
          "size": 0.4931640625,
          "content": "#!/bin/bash\n\n# BUILD_SHARED_LIBS=OFF - for static build\n# POCO_UNBUNDLED - for no built-in version of libs\n# CMAKE_INSTALL_PREFIX=path - for install path\n\nrm -rf cmake-build\n\ncmake -H. -Bcmake-build -DCMAKE_BUILD_TYPE=Debug  $1 $2 $3 $4 $5\ncmake --build cmake-build --target all -- -j3\ncmake --build cmake-build --target install\n\nrm -rf cmake-build\n\ncmake -H. -Bcmake-build -DCMAKE_BUILD_TYPE=Release $1 $2 $3 $4 $5\ncmake --build cmake-build --target all -- -j3\ncmake --build cmake-build --target install\n"
        },
        {
          "name": "build_vs160.cmd",
          "type": "blob",
          "size": 0.0595703125,
          "content": "@echo off\nbuildwin 160 build shared both Win32 samples tests\n"
        },
        {
          "name": "build_vs170.cmd",
          "type": "blob",
          "size": 0.0595703125,
          "content": "@echo off\nbuildwin 170 build shared both Win32 samples tests\n"
        },
        {
          "name": "buildwin.cmd",
          "type": "blob",
          "size": 20.482421875,
          "content": "@echo off\nsetlocal enableextensions enabledelayedexpansion\n\nrem\nrem buildwin.cmd\nrem\nrem POCO C++ Libraries command-line build script\nrem for MS Visual Studio 2015 to 2022\nrem\nrem Copyright (c) 2006-2020 by Applied Informatics Software Engineering GmbH\nrem and Contributors.\nrem\nrem Original version by Aleksandar Fabijanic.\nrem Modified by Guenter Obiltschnig.\nrem\nrem Usage:\nrem ------\nrem buildwin VS_VERSION [ACTION] [LINKMODE] [CONFIGURATION] [PLATFORM] [SAMPLES] [TESTS] [TOOL] [ENV] [VERBOSITY [LOGGER] ]\nrem VS_VERSION:    140|150|160|170\nrem ACTION:        build|rebuild|clean\nrem LINKMODE:      static_mt|static_md|shared|all\nrem CONFIGURATION: release|debug|both\nrem PLATFORM:      Win32|x64|ARM64\nrem SAMPLES:       samples|nosamples\nrem TESTS:         tests|notests\nrem TOOL:          devenv|vcexpress|wdexpress|msbuild\nrem ENV:           env|noenv (active only with msbuild, defaulted to env)\nrem VERBOSITY      quiet|minimal|normal|detailed|diagnostic\nrem LOGGER         <logger path> see msbuild /?\nrem\nrem VS_VERSION is required argument. Default is build all.\n\nset POCO_BASE=%CD%\nset PATH=%POCO_BASE%\\bin64;%POCO_BASE%\\bin;%PATH%\n\nrem VS_VERSION {140 | 150 | 160 | 170}\nif \"%1\"==\"\" goto usage\n\nrem -version ^^[16.0^^,17.0^^)\nrem  should be set \"VSWHERE='%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe  -property installationPath -version ^[16.0^,17.0^)'\"\n\nset VS_VERSION=vs%1\nif %VS_VERSION%==vs170 (\n  set \"VSWHERE='C:\\PROGRA~2\\\"Microsoft Visual Studio\"\\Installer\\vswhere.exe  -latest -property installationPath -version ^[17.0^,18.0^)'\"\n) else (\nif %VS_VERSION%==vs160 (\n  set \"VSWHERE='C:\\PROGRA~2\\\"Microsoft Visual Studio\"\\Installer\\vswhere.exe  -latest -property installationPath -version ^[16.0^,17.0^)'\"\n) else (\nif %VS_VERSION%==vs150 (\n  set \"VSWHERE='C:\\PROGRA~2\\\"Microsoft Visual Studio\"\\Installer\\vswhere.exe  -latest -property installationPath -version ^[15.0^,16.0^)'\"\n)\n)\n)\nfor /f \" delims=\" %%a in (%VSWHERE%) do @set \"VSCOMNTOOLS=%%a\"\n\necho ============= %VSCOMNTOOLS% =============\n\nif %VS_VERSION%==vs170 (\n  set VS_VARSALL=..\\..\\VC\\Auxiliary\\Build\\vcvarsall.bat\n  set \"VS170COMNTOOLS=%VSCOMNTOOLS%\\Common7\\Tools\\\"\n) else (\n  if %VS_VERSION%==vs160 (\n    set VS_VARSALL=..\\..\\VC\\Auxiliary\\Build\\vcvarsall.bat\n    set \"VS160COMNTOOLS=%VSCOMNTOOLS%\\Common7\\Tools\\\"\n  ) else (\n    if %VS_VERSION%==vs150 (\n      set VS_VARSALL=..\\..\\VC\\Auxiliary\\Build\\vcvarsall.bat\n      set \"VS150COMNTOOLS=%VSCOMNTOOLS%\\Common7\\Tools\\\"\n    ) else (\n      set VS_VARSALL=..\\..\\VC\\vcvarsall.bat\n    )\n  )\n)\n\nshift /1\nrem ACTION [build|rebuild|clean]\nset ACTION=%1\nif \"%ACTION%\"==\"\" (set ACTION=build)\nif not \"%ACTION%\"==\"build\" (\nif not \"%ACTION%\"==\"rebuild\" (\nif not \"%ACTION%\"==\"clean\" goto usage))\n\nshift /1\nrem LINKMODE [static_mt|static_md|shared|all]\nset LINK_MODE=%1\nif \"%LINK_MODE%\"==\"\" (set LINK_MODE=all)\nif not \"%LINK_MODE%\"==\"static_mt\" (\nif not \"%LINK_MODE%\"==\"static_md\" (\nif not \"%LINK_MODE%\"==\"shared\" (\nif not \"%LINK_MODE%\"==\"all\" goto usage)))\n\nrem CONFIGURATION [release|debug|both]\nset CONFIGURATION=%2\nif \"%CONFIGURATION%\"==\"\" (set CONFIGURATION=both)\nif not \"%CONFIGURATION%\"==\"release\" (\nif not \"%CONFIGURATION%\"==\"debug\" (\nif not \"%CONFIGURATION%\"==\"both\" goto usage))\n\nrem PLATFORM [Win32|x64]\nset PLATFORM=%3\nif \"%PLATFORM%\"==\"\" (set PLATFORM=Win32)\nif not \"%PLATFORM%\"==\"Win32\" (\nif not \"%PLATFORM%\"==\"x64\" (\nif not \"%PLATFORM%\"==\"ARM64\" goto usage))\n\nrem SAMPLES [samples|nosamples]\nset SAMPLES=%4\nif \"%SAMPLES%\"==\"\" (set SAMPLES=samples)\n\nrem TESTS [tests|notests]\nset TESTS=%5\nif \"%TESTS%\"==\"\" (set TESTS=notests)\n\nif not defined VCINSTALLDIR (\n  if %VS_VERSION%==vs140 (\n    if %PLATFORM%==x64 (\n      call \"%VS140COMNTOOLS%%VS_VARSALL%\" x86_amd64 8.1\n    ) else (\n      call \"%VS140COMNTOOLS%%VS_VARSALL%\" x86 8.1\n    )\n  ) else (\n    if %VS_VERSION%==vs150 (\n      if %PLATFORM%==x64 (\n        call \"%VS150COMNTOOLS%%VS_VARSALL%\" x86_amd64 8.1\n      ) else (\n        call \"%VS150COMNTOOLS%%VS_VARSALL%\" x86 8.1\n      )\n    ) else (\n      if %VS_VERSION%==vs160 (\n        if %PLATFORM%==x64 (\n          call \"%VS160COMNTOOLS%%VS_VARSALL%\" x86_amd64 8.1\n        ) else (\n          call \"%VS160COMNTOOLS%%VS_VARSALL%\" x86 8.1\n        )\n      ) else (\n        if %VS_VERSION%==vs170 (\n          if %PLATFORM%==x64 (\n            call \"%VS170COMNTOOLS%%VS_VARSALL%\" x86_amd64\n          ) else (\n            if %PLATFORM%==arm64 (\n              call \"%VS170COMNTOOLS%%VS_VARSALL%\" x86_arm64\n            ) else (\n              call \"%VS170COMNTOOLS%%VS_VARSALL%\" x86\n            )\n          )\n        )\n      )\n    )\n  )\n)\n\nif not defined VSINSTALLDIR (\n  echo Error: No Visual C++ environment found.\n  echo Please run this script from a Visual Studio Command Prompt\n  echo or run \"%%VSnnCOMNTOOLS%%\\vsvars32.bat\" first.\n  goto :buildfailed\n)\n\nset VCPROJ_EXT=vcproj\nif %VS_VERSION%==vs140 (set VCPROJ_EXT=vcxproj)\nif %VS_VERSION%==vs150 (set VCPROJ_EXT=vcxproj)\nif %VS_VERSION%==vs160 (set VCPROJ_EXT=vcxproj)\nif %VS_VERSION%==vs170 (set VCPROJ_EXT=vcxproj)\n\n\nrem ENV      \tenv|noenv\nset USEENV=%7\nif \"%USEENV%\"==\"\" (set USEENV=env)\nif not \"%USEENV%\"==\"env\" (\nif not \"%USEENV%\"==\"noenv\"  goto usage)\n\nrem VERBOSITY      quiet|minimal|normal|detailed\nset VERBOSITY=%8\nif \"%VERBOSITY%\"==\"\" (set VERBOSITY=minimal)\nif not \"%VERBOSITY%\"==\"quiet\" (\nif not \"%VERBOSITY%\"==\"minimal\" (\nif not \"%VERBOSITY%\"==\"normal\" (\nif not \"%VERBOSITY%\"==\"detailed\" (\nif not \"%VERBOSITY%\"==\"diagnostic\" goto usage))))\n\nif \"%6\"==\"\" goto use_devenv\nset BUILD_TOOL=%6\ngoto use_custom\n:use_devenv\nset BUILD_TOOL=devenv\nif \"%VS_VERSION%\"==\"vs140\" (set BUILD_TOOL=msbuild)\nif \"%VS_VERSION%\"==\"vs150\" (set BUILD_TOOL=msbuild)\nif \"%VS_VERSION%\"==\"vs160\" (set BUILD_TOOL=msbuild)\nif \"%VS_VERSION%\"==\"vs170\" (set BUILD_TOOL=msbuild)\n:use_custom\nif \"%BUILD_TOOL%\"==\"msbuild\" (\n  if \"%PLATFORM%\"==\"Win32\" (set PLATFORMSW=/p:Platform=Win32) else (\n  if \"%PLATFORM%\"==\"x86\"   (set PLATFORMSW=/p:Platform=Win32) else (\n  if \"%PLATFORM%\"==\"x64\"   (set PLATFORMSW=/p:Platform=x64) else (\n  if \"%PLATFORM%\"==\"ARM64\"   (set PLATFORMSW=/p:Platform=ARM64))))\n\n  set ACTIONSW=/t:\n  set CONFIGSW=/p:Configuration=\n  set EXTRASW=/m\n  if \"%USEENV%\"==\"env\"   set USEENVP=/p:UseEnv=true\n  if \"%USEENV%\"==\"noenv\" set USEENVP=/p:UseEnv=false\n\n  set BUILD_TOOL_FLAGS=/clp:NoSummary\n  set BUILD_TOOL_FLAGS=!BUILD_TOOL_FLAGS! /nologo /v:%VERBOSITY%\n)\nif not \"%BUILD_TOOL%\"==\"msbuild\" (\n  set USEENVP=/useenv\n  set ACTIONSW=/\n)\n\n\nrem LOGGER         <logger path> see msbuild /?\nset LOGGER=%9\nif not \"%LOGGER%\"==\"\" (\n  if \"%BUILD_TOOL%\"==\"msbuild\" (\n    if not %LOGGER%X==X (\n       set BUILD_TOOL_FLAGS=!BUILD_TOOL_FLAGS! /logger:%LOGGER%\n    )\n  )\n)\n\nif \"%VS_VERSION%\"==\"vs140\" (goto msbuildok)\nif \"%VS_VERSION%\"==\"vs150\" (goto msbuildok)\nif \"%VS_VERSION%\"==\"vs160\" (goto msbuildok)\nif \"%VS_VERSION%\"==\"vs170\" (goto msbuildok)\nif \"%BUILD_TOOL%\"==\"msbuild\" (\n  echo \"Cannot use msbuild with Visual Studio 2013 or earlier.\"\n  exit /b 2\n)\n:msbuildok\n\nset DEBUG_SHARED=0\nset RELEASE_SHARED=0\nset DEBUG_STATIC_MT=0\nset RELEASE_STATIC_MT=0\nset DEBUG_STATIC_MD=0\nset RELEASE_STATIC_MD=0\n\nif %LINK_MODE%==shared (\nif %CONFIGURATION%==release (set RELEASE_SHARED=1) else (\nif %CONFIGURATION%==both (set RELEASE_SHARED=1) else (\nif \"%CONFIGURATION%\"==\"\" (set RELEASE_SHARED=1))))\n\nif %LINK_MODE%==shared (\nif %CONFIGURATION%==debug (set DEBUG_SHARED=1) else (\nif %CONFIGURATION%==both (set DEBUG_SHARED=1) else (\nif \"%CONFIGURATION%\"==\"\" (set DEBUG_SHARED=1))))\n\nif %LINK_MODE%==static_mt (\nif %CONFIGURATION%==release (set RELEASE_STATIC_MT=1) else (\nif %CONFIGURATION%==both (set RELEASE_STATIC_MT=1) else (\nif \"%CONFIGURATION%\"==\"\" (set RELEASE_STATIC_MT=1))))\n\nif %LINK_MODE%==static_md (\nif %CONFIGURATION%==release (set RELEASE_STATIC_MD=1) else (\nif %CONFIGURATION%==both (set RELEASE_STATIC_MD=1) else (\nif \"%CONFIGURATION%\"==\"\" (set RELEASE_STATIC_MD=1))))\n\nif %LINK_MODE%==static_mt (\nif %CONFIGURATION%==debug (set DEBUG_STATIC_MT=1) else (\nif %CONFIGURATION%==both (set DEBUG_STATIC_MT=1) else (\nif \"%CONFIGURATION%\"==\"\" (set DEBUG_STATIC_MT=1))))\n\nif %LINK_MODE%==static_md (\nif %CONFIGURATION%==debug (set DEBUG_STATIC_MD=1) else (\nif %CONFIGURATION%==both (set DEBUG_STATIC_MD=1) else (\nif \"%CONFIGURATION%\"==\"\" (set DEBUG_STATIC_MD=1))))\n\nif %LINK_MODE%==all (\nif %CONFIGURATION%==debug (\nset DEBUG_STATIC_MT=1\nset DEBUG_STATIC_MD=1\nset DEBUG_SHARED=1) else (\nif %CONFIGURATION%==release (\nset RELEASE_STATIC_MT=1\nset RELEASE_STATIC_MD=1\nset RELEASE_SHARED=1) else (\nif %CONFIGURATION%==both (\nset DEBUG_STATIC_MT=1\nset DEBUG_STATIC_MD=1\nset DEBUG_SHARED=1\nset RELEASE_STATIC_MT=1\nset RELEASE_STATIC_MD=1\nset RELEASE_SHARED=1) else (\nif \"%CONFIGURATION%\"==\"\" (\nset DEBUG_STATIC_MT=1\nset DEBUG_STATIC_MD=1\nset DEBUG_SHARED=1\nset RELEASE_STATIC_MT=1\nset RELEASE_STATIC_MD=1\nset RELEASE_SHARED=1)))))\n\nif \"%LINK_MODE%\"==\"\" (\nif %CONFIGURATION%==debug (\nset DEBUG_STATIC_MT=1\nset DEBUG_STATIC_MD=1\nset DEBUG_SHARED=1) else (\nif %CONFIGURATION%==release (\nset RELEASE_STATIC_MT=1\nset RELEASE_STATIC_MD=1\nset RELEASE_SHARED=1) else (\nif %CONFIGURATION%==both (\nset DEBUG_STATIC_MT=1\nset DEBUG_STATIC_MD=1\nset DEBUG_SHARED=1\nset RELEASE_STATIC_MT=1\nset RELEASE_STATIC_MD=1\nset RELEASE_SHARED=1) else (\nif \"%CONFIGURATION%\"==\"\" (\nset DEBUG_STATIC_MT=1\nset DEBUG_STATIC_MD=1\nset DEBUG_SHARED=1\nset RELEASE_STATIC_MT=1\nset RELEASE_STATIC_MD=1\nset RELEASE_SHARED=1)))))\n\necho.\necho.\necho ########################################################################\necho ####\necho #### STARTING VISUAL STUDIO BUILD (%VS_VERSION%, %PLATFORM%)\necho ####\necho ########################################################################\necho.\necho.\necho buildwin %VS_VERSION% %ACTION% %LINK_MODE% %CONFIGURATION% %PLATFORM% %SAMPLES% %TESTS% !BUILD_TOOL! %USEENV% %VERBOSITY%\necho.\necho The following configurations will be built:\n\nif %DEBUG_SHARED%==1      (echo debug_shared)\nif %RELEASE_SHARED%==1    (echo release_shared)\nif %DEBUG_STATIC_MT%==1   (echo debug_static_mt)\nif %DEBUG_STATIC_MD%==1   (echo debug_static_md)\nif %RELEASE_STATIC_MT%==1 (echo release_static_mt)\nif %RELEASE_STATIC_MD%==1 (echo release_static_md)\n\nrem build for up to 4 levels deep\nfor /f %%G in ('findstr /R \".\" components') do (\n  if exist %%G (\n    cd %%G\n    for /f \"tokens=1,2,3,4 delims=/\" %%Q in (\"%%G\") do (\n      set PROJECT_FILE=%%Q_%VS_VERSION%.%VCPROJ_EXT%\n      set TEST_PROJECT_FILE=testsuite/TestSuite_%VS_VERSION%.%VCPROJ_EXT%\n      set TEST_APP_PROJECT_FILE=testsuite/TestApp_%VS_VERSION%.%VCPROJ_EXT%\n      set TEST_LIB_PROJECT_FILE=testsuite/TestLibrary_%VS_VERSION%.%VCPROJ_EXT%\n      if exist !PROJECT_FILE! (\n        call :build %%G\n        if ERRORLEVEL 1 goto buildfailed\n      )\n      set PROJECT_FILE=%%R_%VS_VERSION%.%VCPROJ_EXT%\n      if exist !PROJECT_FILE! (\n        call :build %%G\n        if ERRORLEVEL 1 goto buildfailed\n      )\n      set PROJECT_FILE=%%S_%VS_VERSION%.%VCPROJ_EXT%\n      if exist !PROJECT_FILE! (\n        call :build %%G\n        if ERRORLEVEL 1 goto buildfailed\n      )\n      set PROJECT_FILE=%%T_%VS_VERSION%.%VCPROJ_EXT%\n      if exist !PROJECT_FILE! (\n        call :build %%G\n        if ERRORLEVEL 1 goto buildfailed\n      )\n    )\n  )\n  cd \"%POCO_BASE%\"\n)\n\ngoto samples\n\nrem ////////////////////\nrem / build subroutine /\nrem ////////////////////\n:build\n\necho.\necho ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\necho ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\necho ++++ Building [!PROJECT_FILE!]\necho ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\necho ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\necho.\n\nif %DEBUG_SHARED%==1 (\n  echo !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_shared %PLATFORMSW% !PROJECT_FILE!\n  !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_shared %PLATFORMSW% !PROJECT_FILE!\n  if ERRORLEVEL 1 exit /b 1\n  echo. && echo.\n  if %TESTS%==tests (\n    if exist !TEST_PROJECT_FILE! (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_shared %PLATFORMSW% !TEST_PROJECT_FILE!\n      if ERRORLEVEL 1 exit /b 1\n      if %1==Foundation (\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_shared %PLATFORMSW% !TEST_APP_PROJECT_FILE!\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_shared %PLATFORMSW% !TEST_LIB_PROJECT_FILE!\n        if ERRORLEVEL 1 exit /b 1\n      )\n      echo. && echo.\n    )\n  )\n)\nif %RELEASE_SHARED%==1 (\n  echo   !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_shared %PLATFORMSW% !PROJECT_FILE!\n\n  !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_shared %PLATFORMSW% !PROJECT_FILE!\n  if ERRORLEVEL 1 exit /b 1\n  echo. && echo.\n  if %TESTS%==tests (\n    if exist !TEST_PROJECT_FILE! (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_shared %PLATFORMSW% !TEST_PROJECT_FILE!\n      if ERRORLEVEL 1 exit /b 1\n      if %1==Foundation (\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_shared %PLATFORMSW% !TEST_APP_PROJECT_FILE!\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_shared %PLATFORMSW% !TEST_LIB_PROJECT_FILE!\n        if ERRORLEVEL 1 exit /b 1\n      )\n      echo. && echo.\n    )\n  )\n)\nif %DEBUG_STATIC_MT%==1 (\n  echo !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_mt %PLATFORMSW% !PROJECT_FILE!\n  !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_mt %PLATFORMSW% !PROJECT_FILE!\n  if ERRORLEVEL 1 exit /b 1\n  echo. && echo.\n  if %TESTS%==tests (\n    if exist !TEST_PROJECT_FILE! (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_mt %PLATFORMSW% !TEST_PROJECT_FILE!\n      if ERRORLEVEL 1 exit /b 1\n      if %1==Foundation (\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_mt %PLATFORMSW% !TEST_APP_PROJECT_FILE!\n        if ERRORLEVEL 1 exit /b 1\n      )\n      echo. && echo.\n    )\n  )\n)\nif %RELEASE_STATIC_MT%==1 (\n  echo !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_mt %PLATFORMSW% !PROJECT_FILE!\n  !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_mt %PLATFORMSW% !PROJECT_FILE!\n  if ERRORLEVEL 1 exit /b 1\n  echo. && echo.\n  if %TESTS%==tests (\n    if exist !TEST_PROJECT_FILE! (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_mt %PLATFORMSW% !TEST_PROJECT_FILE!\n      if ERRORLEVEL 1 exit /b 1\n      if %1==Foundation (\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_mt %PLATFORMSW% !TEST_APP_PROJECT_FILE!\n        if ERRORLEVEL 1 exit /b 1\n      )\n      echo. && echo.\n    )\n  )\n)\nif %DEBUG_STATIC_MD%==1 (\n  echo !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_md %PLATFORMSW% !PROJECT_FILE!\n  !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_md %PLATFORMSW% !PROJECT_FILE!\n  if ERRORLEVEL 1 exit /b 1\n  echo. && echo.\n  if %TESTS%==tests (\n    if exist !TEST_PROJECT_FILE! (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_md %PLATFORMSW% !TEST_PROJECT_FILE!\n      if ERRORLEVEL 1 exit /b 1\n      if %1==Foundation (\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_md %PLATFORMSW% !TEST_APP_PROJECT_FILE!\n        if ERRORLEVEL 1 exit /b 1\n      )\n      echo. && echo.\n    )\n  )\n)\nif %RELEASE_STATIC_MD%==1 (\n  echo !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_md %PLATFORMSW% !PROJECT_FILE!\n  !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_md %PLATFORMSW% !PROJECT_FILE!\n  if ERRORLEVEL 1 exit /b 1\n  echo. && echo.\n  if %TESTS%==tests (\n    if exist !TEST_PROJECT_FILE! (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_md %PLATFORMSW% !TEST_PROJECT_FILE!\n      if ERRORLEVEL 1 exit /b 1\n      if %1==Foundation (\n        echo.\n        !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_md %PLATFORMSW% !TEST_APP_PROJECT_FILE!\n        if ERRORLEVEL 1 exit /b 1\n      )\n      echo. && echo.\n    )\n  )\n)\n\necho.\necho ------------------------------------------------------------------------\necho ------------------------------------------------------------------------\necho ---- Done building [!PROJECT_FILE!]\necho ------------------------------------------------------------------------\necho ------------------------------------------------------------------------\necho.\n\nexit /b\n\nrem ////////////////////\nrem / build samples /\nrem ////////////////////\n\n:samples\n\nif %SAMPLES%==nosamples goto :EOF\n\nrem root level component samples\nfor /f %%G in ('findstr /R \".\" components') do (\n  if exist %%G\\samples\\samples_%VS_VERSION%.sln (\n    cd %%G\\samples\n    echo.\n    echo.\n    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    echo ++++ Building [%%G/samples]\n    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    echo.\n    set SOLUTION_FILE=samples_%VS_VERSION%.sln\n\n    if %DEBUG_SHARED%==1 (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_shared %PLATFORMSW% !SOLUTION_FILE!\n      if ERRORLEVEL 1 goto buildfailed\n      echo. && echo.\n    )\n    if %RELEASE_SHARED%==1 (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_shared %PLATFORMSW% !SOLUTION_FILE!\n      if ERRORLEVEL 1 goto buildfailed\n      echo. && echo.\n    )\n    if %DEBUG_STATIC_MT%==1 (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_mt %PLATFORMSW% !SOLUTION_FILE!\n      if ERRORLEVEL 1 goto buildfailed\n      echo. && echo.\n    )\n    if %RELEASE_STATIC_MT%==1 (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_mt %PLATFORMSW% !SOLUTION_FILE!\n      if ERRORLEVEL 1 goto buildfailed\n      echo. && echo.\n    )\n    if %DEBUG_STATIC_MD%==1 (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%debug_static_md %PLATFORMSW% !SOLUTION_FILE!\n      if ERRORLEVEL 1 goto buildfailed\n      echo. && echo.\n    )\n    if %RELEASE_STATIC_MD%==1 (\n      !BUILD_TOOL! !BUILD_TOOL_FLAGS! !USEENVP! %EXTRASW% %ACTIONSW%%ACTION% %CONFIGSW%release_static_md %PLATFORMSW% !SOLUTION_FILE!\n      if ERRORLEVEL 1 goto buildfailed\n      echo. && echo.\n    )\n\n    cd \"%POCO_BASE%\"\n\n    echo.\n    echo ------------------------------------------------------------------------\n    echo ------------------------------------------------------------------------\n    echo ---- Done building [%%G/samples]\n    echo ------------------------------------------------------------------------\n    echo ------------------------------------------------------------------------\n    echo.\n  )\n)\n\necho.\necho ------------------------------------------------------------------------\necho ------------------------------------------------------------------------\necho ---- Build completed.\necho ------------------------------------------------------------------------\necho ------------------------------------------------------------------------\necho.\n\ngoto :EOF\n\nrem ////////////////\nrem / build failed /\nrem ////////////////\n\n:buildfailed\n\necho.\necho.\necho XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\necho XXX  BUILD FAILED. EXITING. XXX\necho XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\necho.\necho.\nexit /b 1\n\n:usage\necho Usage:\necho ------\necho buildwin VS_VERSION [ACTION] [LINKMODE] [CONFIGURATION] [PLATFORM] [SAMPLES] [TESTS] [TOOL] [ENV] [VERBOSITY]\necho VS_VERSION:    \"140|150|160|170\"\necho ACTION:        \"build|rebuild|clean\"\necho LINKMODE:      \"static_mt|static_md|shared|all\"\necho CONFIGURATION: \"release|debug|both\"\necho PLATFORM:      \"Win32|x64|ARM64\"\necho SAMPLES:       \"samples|nosamples\"\necho TESTS:         \"tests|notests\"\necho TOOL:          \"devenv|vcexpress|wdexpress|msbuild\"\necho ENV:           \"env|noenv\" (active only with msbuild, defaulted to env)\necho VERBOSITY:     \"quiet|minimal|normal|detailed|diagnostic\" only for msbuild\necho.\necho Default is build all.\nendlocal\n"
        },
        {
          "name": "buildwin.ps1",
          "type": "blob",
          "size": 14.9716796875,
          "content": "#\n# POCO build script\n#\n# Usage:\n# ------\n# buildwin.ps1 [-poco_base    dir]\n#              [-vs           160| 170]\n#              [-action       build | rebuild | clean]\n#              [-linkmode     shared | static_mt | static_md | all]\n#              [-config       release | debug | both]\n#              [-platform     Win32 | x64 | ARM64]\n#              [-samples]\n#              [-tests]\n#              [-omit         \"Lib1X,LibY,LibZ,...\"]\n#              [-components   \"Lib1X,LibY,LibZ,...\"]\n#              [-tool         msbuild | devenv]\n#              [-useenv       env | noenv]\n#              [-verbosity    minimal | quiet | normal | detailed | diagnostic]\n#              [-openssl_base dir]\n#              [-mysql_base   dir]\n\n[CmdletBinding()]\nParam\n(\n\t[Parameter()]\n\t[string] $poco_base = $([System.Environment]::GetEnvironmentVariable('POCO_BASE')),\n\n\t[Parameter()]\n\t[ValidateSet(160, 170)]\n\t[int] $vs = 170,\n\n\t[Parameter()]\n\t[ValidateSet('build', 'rebuild', 'clean')]\n\t[string] $action = 'build',\n\n\t[Parameter()]\n\t[ValidateSet('shared', 'static_mt', 'static_md', 'all')]\n\t[string] $linkmode = 'shared',\n\n\t[Parameter()]\n\t[ValidateSet('release', 'debug', 'both')]\n\t[string] $config = 'release',\n\n\t[Parameter()]\n\t[ValidateSet('Win32', 'x64', 'ARM64')]\n\t[string] $platform = 'x64',\n\n\t[switch] $tests = $false,\n\t[switch] $samples = $false,\n\t[string] $omit,\n\t[string] $components,\n\n\t[Parameter()]\n\t[ValidateSet('msbuild', 'devenv')]\n\t[string] $tool = 'msbuild',\n\n\t[Parameter()]\n\t[ValidateSet('env', 'noenv')]\n\t[string] $useenv = 'env',\n\n\t[Parameter()]\n\t[ValidateSet('quiet', 'minimal', 'normal', 'detailed', 'diagnostic')]\n\t[string] $verbosity = 'minimal',\n\n\t[Parameter()]\n\t[string] $openssl_base,\n\n\t[Parameter()]\n\t[string] $mysql_base,\n\n\t[switch] $help\n)\n\nfunction Add-VSCOMNTOOLS([int] $vsver)\n{\n\tif ($vsver -ge 160)\n\t{\n\t\t$vssetup= $([Environment]::GetFolderPath(\"MyDocuments\"))\n\t\t$vssetup= Join-Path $vssetup \"WindowsPowerShell\"\n\t\t$vssetup= Join-Path $vssetup \"Modules\"\n\t\t$vssetup= Join-Path $vssetup \"VSSetup\"\n\t\tif (-not (Test-Path $vssetup))\n\t\t{\n\t\t\tInstall-Module VSSetup -Scope CurrentUser -Force\n\t\t}\n\t\tif ($vsver -eq 160)\n\t\t{\n\t\t\t$range='[16.0,17.0)'\n\t\t}\n\t\tif ($vsver -eq 170)\n\t\t{\n\t\t\t$range='[17.0,18.0)'\n\t\t}\n\n\t\tif ($platform -eq 'ARM64')\n\t\t{\n\t\t\t$global:installationPath = Get-VSSetupInstance | `\n\t\t\t\tSelect-VSSetupInstance -Version $range -product * -Latest -Require Microsoft.VisualStudio.Component.VC.Tools.ARM64 | `\n\t\t\t\tSelect-Object InstallationPath\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$global:installationPath = Get-VSSetupInstance | `\n\t\t\t\tSelect-VSSetupInstance -Version $range -product * -Latest -Require Microsoft.VisualStudio.Component.VC.Tools.x86.x64 | `\n\t\t\t\tSelect-Object InstallationPath\n\t\t}\n\n\t\t$vscomntools = $installationPath.psobject.properties.Value;\n\t\tif ($vsver -eq 160)\n\t\t{\n\t\t\tset-item -force -path \"ENV:VS160COMNTOOLS\"  -value \"$vscomntools\\Common7\\Tools\\\"\n\t\t\tWrite-Host \"`n----------------------------------------\" -ForegroundColor Yellow\n\t\t\tWrite-Host \"VS160COMNTOOLS=$env:VS160COMNTOOLS\" -ForegroundColor Yellow\n\t\t\tWrite-Host \"----------------------------------------\" -ForegroundColor Yellow\n\t\t\tWrite-Host \"\"\n\t\t}\n\t\tif ($vsver -eq 170)\n\t\t{\n\t\t\tset-item -force -path \"ENV:VS170COMNTOOLS\"  -value \"$vscomntools\\Common7\\Tools\\\"\n\t\t\tWrite-Host \"`n----------------------------------------\" -ForegroundColor Yellow\n\t\t\tWrite-Host \"VS170COMNTOOLS=$env:VS170COMNTOOLS\" -ForegroundColor Yellow\n\t\t\tWrite-Host \"----------------------------------------\" -ForegroundColor Yellow\n\t\t\tWrite-Host \"\"\n\t\t}\n\t}\n}\n\nfunction Add-Env-Var([string] $lib, [string] $var)\n{\n\t$envvar = if (Test-Path \"Env:$var\") { Get-Content \"Env:$var\" } Else { \"\" }\n\n\t$libvar = Get-Content \"Env:${lib}_$var\"\n\tif (-not $envvar.Contains($libvar))\n\t{\n\t\t$envvar = $envvar + \";$libvar\"\n\t\tSet-Content \"Env:${var}\" $envvar\n\t}\n}\n\n\nfunction Set-Environment\n{\n\tif ($poco_base -eq '') { $script:poco_base = Get-Location }\n\n\tAdd-VSCOMNTOOLS $vs\n\n\tif (-Not $Env:PATH.Contains(\"$Env:POCO_BASE\\bin64;$Env:POCO_BASE\\bin;\"))\n\t{ $Env:PATH = \"$Env:POCO_BASE\\bin64;$Env:POCO_BASE\\bin;$Env:PATH\" }\n\n\tif ($openssl_base -eq '')\n\t{\n\t\t$script:openssl_base = \"$poco_base\\openssl\"\n\t}\n\n\t$Env:OPENSSL_DIR     = \"$openssl_base\"\n\t$Env:OPENSSL_INCLUDE = \"$Env:OPENSSL_DIR\\include\"\n\t$Env:OPENSSL_LIB     = \"$Env:OPENSSL_DIR\\lib;$Env:OPENSSL_DIR\\lib\\VC\"\n\tAdd-Env-Var \"OPENSSL\" \"INCLUDE\"\n\tAdd-Env-Var \"OPENSSL\" \"LIB\"\n\n\tif ($mysql_base -ne '')\n\t{\n\t\t$Env:MYSQL_DIR     = \"$mysql_base\"\n\t\t$Env:MYSQL_INCLUDE = \"$Env:MYSQL_DIR\\include\"\n\t\t$Env:MYSQL_LIB     = \"$Env:MYSQL_DIR\\lib\"\n\t\tAdd-Env-Var \"MYSQL\" \"INCLUDE\"\n\t\tAdd-Env-Var \"MYSQL\" \"LIB\"\n\t}\n\n\t$vsct = \"VS$($vs)COMNTOOLS\"\n\t$vsdir = ''\n\t$vsdir = (Get-Item Env:$vsct).Value\n\t$Command = ''\n\t$CommandArg = ''\n\tif ($platform -eq 'x64') { $CommandArg = \"amd64\" }\n\telseif ($platform -eq 'ARM64') { $CommandArg = \"ARM64\" }\n\telse { $CommandArg = \"x86\" }\n\n\tif ($vs -eq 160)\n\t{\n\t\t$Command = Resolve-Path \"$($vsdir)\\..\\..\\VC\\Auxiliary\\Build\\vcvarsall.bat\"\n\t\t$script:msbuild_exe = Resolve-Path \"$($vsdir)\\..\\..\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n\t}\n\telse\n\t{\n\t\tif ($vs -eq 170)\n\t\t{\n\t\t\t$Command = Resolve-Path \"$($vsdir)\\..\\..\\VC\\Auxiliary\\Build\\vcvarsall.bat\"\n\t\t\t$script:msbuild_exe = Resolve-Path \"$($vsdir)\\..\\..\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$Command = Resolve-Path \"$($vsdir)\\..\\..\\VC\\vcvarsall.bat\"\n\t\t\t$script:msbuild_exe = \"MSBuild.exe\"\n\t\t}\n\t}\n\n\t$tempFile = [IO.Path]::GetTempFileName()\n\tcmd /c \" `\"$Command`\" $CommandArg && set > `\"$tempFile`\" \"\n\tGet-Content $tempFile | Foreach-Object {\n\t\tif($_ -match \"^(.*?)=(.*)$\")\n\t\t{\n\t\t\tSet-Content \"Env:$($matches[1])\" $matches[2]\n\t\t}\n\t}\n\tRemove-Item $tempFile\n}\n\n\nfunction Process-Input\n{\n\tif ($help -eq $true)\n\t{\n\t\tWrite-Host 'Usage:'\n\t\tWrite-Host '------'\n\t\tWrite-Host 'buildwin.ps1 [-poco_base <dir>]'\n\t\tWrite-Host '    [-vs           160 | 170]'\n\t\tWrite-Host '    [-action       build | rebuild | clean]'\n\t\tWrite-Host '    [-linkmode     shared | static_mt | static_md | all]'\n\t\tWrite-Host '    [-config       release | debug | both]'\n\t\tWrite-Host '    [-platform     Win32 | x64 | ARM64]'\n\t\tWrite-Host '    [-samples]'\n\t\tWrite-Host '    [-tests]'\n\t\tWrite-Host '    [-omit         \"Lib1X,LibY,LibZ,...\"]'\n\t\tWrite-Host '    [-components   \"Lib1X,LibY,LibZ,...\"]'\n\t\tWrite-Host '    [-tool         msbuild | devenv]'\n\t\tWrite-Host '    [-useenv       env | noenv]'\n\t\tWrite-Host '    [-verbosity    minimal | quiet | normal | detailed | diagnostic'\n\t\tWrite-Host '    [-openssl_base <dir>]'\n\t\tWrite-Host '    [-mysql_base   <dir>]'\n\t\tExit\n\t}\n\telse\n\t{\n\t\tif($components -ne '' -and $omit -ne '') {\n\t\t\tWrite-Host \"-components and -omit cannot be used simultaneously, exiting...\"\n\t\t\tExit 1\n\t\t}\n\t\tSet-Environment\n\n\t\tWrite-Host \"\"\n\t\tWrite-Host \"--------------------\"\n\t\tWrite-Host \"PS Version: \" $PSVersionTable.PSVersion\n\t\tWrite-Host \"--------------------\"\n\n\t\tWrite-Host \"\"\n\t\tWrite-Host \"--------------------\"\n\t\tWrite-Host \"Build configuration:\"\n\t\tWrite-Host \"--------------------\"\n\t\tWrite-Host \"Poco Base:     $poco_base\"\n\t\tWrite-Host \"Version:       $vs\"\n\t\tWrite-Host \"Action:        $action\"\n\t\tWrite-Host \"Link Mode:     $linkmode\"\n\t\tWrite-Host \"Configuration: $config\"\n\t\tWrite-Host \"Platform:      $platform\"\n\t\tWrite-Host \"Tests:         $tests\"\n\t\tWrite-Host \"Samples:       $samples\"\n\t\tWrite-Host \"Build Tool:    $tool\"\n\n\t\tif ($omit -ne '')\n\t\t{\n\t\t\tWrite-Host \"Omit:          $omit\"\n\t\t}\n\n\t\tif ($components -ne '')\n\t\t{\n\t\t\tWrite-Host \"Components:    $components\"\n\t\t}\n\n\t\tif ($openssl_base -ne '')\n\t\t{\n\t\t\tWrite-Host \"OpenSSL:       $openssl_base\"\n\t\t}\n\n\t\tif ($mysql_base -ne '')\n\t\t{\n\t\t\tWrite-Host \"MySQL:         $mysql_base\"\n\t\t}\n\n\t\tWrite-Host \"----------------------------------------\"\n\t\tWrite-Host \"\"\n\n\t\t# NB: this won't work in PowerShell ISE\n\t\t#Write-Host \"Press Ctrl-C to exit or any other key to continue ...\"\n\t\t#$x = $host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyUp\")\n\t}\n}\n\n\nfunction ExecuteMSBuild([string] $vsProject, [string] $projectConfig)\n{\n\tif (!(Test-Path -Path $vsProject -PathType leaf)) {\n\t\tWrite-Host \"Project $vsProject not found, skipping.\"\n\t\treturn\n\t}\n\n\t$cmd = \"&`\"$script:msbuild_exe`\" $vsProject /nologo /m /t:$action /p:Configuration=$projectConfig /p:BuildProjectReferences=false /p:Platform=$platform /p:useenv=$($useenv -eq 'env') /v:$verbosity\"\n\tWrite-Host $cmd\n\tInvoke-Expression $cmd\n\tif ($LastExitCode -ne 0) { Exit $LastExitCode }\n}\n\n\nfunction RunMSBuild([string] $vsProject, [switch] $skipStatic)\n{\n\tif ($linkmode -contains \"static\" -and $skipStatic) { Return }\n\tif ($linkmode.Contains(\"static\") -and $vsProject.Contains(\"TestLibrary\"))\n\t{\n\t\tWrite-Host \"Skipping static build of DLL-only $vsProject\"\n\t\treturn\n\t}\n\n\tif ($linkmode -eq 'all')\n\t{\n\t\t$linkModeArr = @('shared')\n\t\tif (-not $skipStatic)\n\t\t{\n\t\t\t$linkModeArr += 'static_mt', 'static_md'\n\t\t}\n\n\t\tforeach ($mode in $linkModeArr)\n\t\t{\n\t\t\tif ($config -eq 'both')\n\t\t\t{\n\t\t\t\t$configArr = 'release', 'debug'\n\t\t\t\tforeach ($cfg in $configArr)\n\t\t\t\t{\n\t\t\t\t\tExecuteMSBuild $vsProject \"$($cfg)_$($mode)\"\n\t\t\t\t}\n\t\t\t}\n\t\t\telse #config\n\t\t\t{\n\t\t\t\tExecuteMSBuild $vsProject \"$($config)_$($mode)\"\n\t\t\t}\n\t\t}\n\t}\n\telse #linkmode\n\t{\n\t\tif ($config -eq 'both')\n\t\t{\n\t\t\t$configArr = 'release', 'debug'\n\t\t\tforeach ($cfg in $configArr)\n\t\t\t{\n\t\t\t\tExecuteMSBuild $vsProject \"$($cfg)_$($linkmode)\"\n\t\t\t}\n\t\t}\n\t\telse #config\n\t\t{\n\t\t\tExecuteMSBuild $vsProject \"$($config)_$($linkmode)\"\n\t\t}\n\t}\n}\n\n\nfunction ExecuteDevenv([string] $projectConfig, [string] $vsProject)\n{\n\t$cmd = \"devenv /useenv /$action $projectConfig $vsProject\"\n\tWrite-Host $cmd\n\tInvoke-Expression $cmd\n}\n\n\nfunction BuildDevenv([string] $vsProject, [switch] $skipStatic)\n{\n\tif ($linkmode -contains \"static\" -and $skipStatic) { Return }\n\n\tif ($linkmode -eq 'all')\n\t{\n\t\t$linkModeArr = @('shared')\n\t\tif (-not $skipStatic)\n\t\t{\n\t\t\t$linkModeArr += 'static_mt', 'static_md'\n\t\t}\n\n\t\tforeach ($mode in $linkModeArr)\n\t\t{\n\t\t\tif ($config -eq 'both')\n\t\t\t{\n\t\t\t\t$configArr = 'release', 'debug'\n\t\t\t\tforeach ($cfg in $configArr)\n\t\t\t\t{\n\t\t\t\t\tExecuteDevenv \"$($cfg)_$($mode)\" $vsProject\n\t\t\t\t}\n\t\t\t}\n\t\t\telse #config\n\t\t\t{\n\t\t\t\tExecuteDevenv \"$($config)_$($mode)\" $vsProject\n\t\t\t}\n\t\t}\n\t}\n\telse #linkmode\n\t{\n\t\tif ($config -eq 'both')\n\t\t{\n\t\t\t$configArr = 'release', 'debug'\n\t\t\tforeach ($cfg in $configArr)\n\t\t\t{\n\t\t\t\tExecuteDevenv \"$($cfg)_$($linkmode)\" $vsProject\n\t\t\t}\n\t\t}\n\t\telse #config\n\t\t{\n\t\t\tExecuteDevenv \"$($config)_$($linkmode)\" $vsProject\n\t\t}\n\t}\n}\n\n\nfunction BuildSamples\n{\n\tprocess {\n\t\t$sampleName = $_.BaseName.split(\"_\")[0]\n\t\t$sampleProjName = \"$($poco_base)\\$($componentDir)\\samples\\$($sampleName)\\$($_)\"\n\t\tif ($tool -eq 'devenv') { BuildDevenv $sampleProjName }\n\t\telseif ($tool -eq 'msbuild') { RunMSBuild $sampleProjName }\n\t\telse{ Write-Host \"Tool not supported: $tool\" }\n\t}\n}\n\n\nfunction BuildExecute([string] $tool, [string] $vsProject, [switch] $skipStatic)\n{\n\t if (!(Test-Path -Path $vsProject)) # not found\n\t {\n\t\t\tWrite-Host \"+------------------------------------------------------------------\"\n\t\t\tWrite-Host \"| VS project $vsProject not found, skipping.\"\n\t\t\tWrite-Host \"+------------------------------------------------------------------\"\n\t\t\tReturn\n\t }\n\t if\t\t ($tool -eq 'devenv')\t{ BuildDevenv $vsProject -skipStatic:$skipStatic }\n\t elseif ($tool -eq 'msbuild') { RunMSBuild $vsProject -skipStatic:$skipStatic }\n\t else\n\t {\n\t\t\tWrite-Host \"Build tool $tool not supported. Exiting.\"\n\t\t\tExit -1\n\t }\n}\n\n\nfunction BuildComponents([string] $extension, [string] $type)\n{\n\tGet-Content \"$poco_base\\components\" | Foreach-Object {\n\n\t\t$component = $_\n\t\t$componentDir = $_.Replace(\"/\", \"\\\")\n\t\t$componentArr = $_.split('/')\n\t\t$componentName = $componentArr[$componentArr.Length - 1]\n\t\t$suffix = \"_vs$vs\"\n\n\t\t$omitArray = @()\n\t\t$omit.Split(',') | ForEach-Object {\n\t\t\t\t$omitArray += $_.Trim()\n\t\t}\n\n\t\t$componentsArray = @()\n\t\t$components.Split(',') | ForEach-Object {\n\t\t\t\t$componentsArray += $_.Trim()\n\t\t}\n\n\t\tif ($omitArray -NotContains $component -and (($componentsArray -Contains $component) -or ($components -eq '')))\n\t\t{\n\t\t\t$vsProject = \"$poco_base\\$componentDir\\$componentName$($suffix).$($extension)\"\n\n\t\t\tif (!(Test-Path -Path $vsProject)) # when VS project name is not same as directory name\n\t\t\t{\n\t\t\t\t$vsProject = \"$poco_base\\$componentDir$($suffix).$($extension)\"\n\t\t\t\tif (!(Test-Path -Path $vsProject)) # not found\n\t\t\t\t{\n\t\t\t\t\tWrite-Host \"+------------------------------------------------------------------\"\n\t\t\t\t\tWrite-Host \"| VS project $vsProject not found, skipping.\"\n\t\t\t\t\tWrite-Host \"+------------------------------------------------------------------\"\n\t\t\t\t\tReturn # since Foreach-Object is a function, this is actually loop \"continue\"\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\tWrite-Host \"| Building $vsProject\"\n\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\n\t\t\tif ($type -eq \"lib\")\n\t\t\t{\n\t\t\t\tBuildExecute $tool $vsProject\n\t\t\t}\n\t\t\tElseIf ($tests -and ($type -eq \"test\"))\n\t\t\t{\n\t\t\t\t$vsTestProject = \"$poco_base\\$componentDir\\testsuite\\TestSuite$($suffix).$($extension)\"\n\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\tWrite-Host \"| Building $vsTestProject\"\n\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\tBuildExecute $tool $vsTestProject\n\n\t\t\t\tif ($component -eq \"Foundation\") # special case for Foundation, which needs test app and dll\n\t\t\t\t{\n\t\t\t\t\t$vsTestProject = \"$poco_base\\$componentDir\\testsuite\\TestApp$($suffix).$($extension)\"\n\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\tWrite-Host \"| Building $vsTestProject\"\n\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\tBuildExecute $tool $vsTestProject\n\n\t\t\t\t\t$vsTestProject = \"$poco_base\\$componentDir\\testsuite\\TestLibrary$($suffix).$($extension)\"\n\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\tWrite-Host \"| Building $vsTestProject\"\n\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\tBuildExecute $tool $vsTestProject -skipStatic\n\t\t\t\t}\n\t\t\t\telseif ($component -eq \"Data\") # special case for Data, which needs DataTest lib\n\t\t\t\t{\n\t\t\t\t\t$vsTestProject = \"$poco_base\\$componentDir\\DataTest\\DataTest$($suffix).$($extension)\"\n\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\tWrite-Host \"| Building $vsTestProject\"\n\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\tBuildExecute $tool $vsTestProject\n\t\t\t\t}\n\t\t\t}\n\t\t\tElseIf ($samples -and ($type -eq \"sample\"))\n\t\t\t{\n\t\t\t\tif ($platform -eq 'x64')\n\t\t\t\t{\n\t\t\t\t\tGet-Childitem \"$poco_base\\$($componentDir)\" -Recurse |`\n\t\t\t\t\t\tWhere-Object {$_.Extension -Match $extension -And $_.DirectoryName -Like \"*samples*\" -And $_.BaseName -Like \"*$($suffix)\" } `\n\t\t\t\t\t\t| BuildSamples \"$_\"\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tGet-Childitem \"$poco_base\\$($componentDir)\" -Recurse |`\n\t\t\t\t\t\tWhere-Object {$_.Extension -Match $extension -And $_.DirectoryName -Like \"*samples*\" -And $_.BaseName -Like \"*$($suffix)\" -And $_.BaseName -NotLike \"*_x64_*\" } `\n\t\t\t\t\t\t| BuildSamples \"$_\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tWrite-Host \"-------------------------------\"\n\t\t\tWrite-Host \"# Skipping $componentDir\"\n\t\t\tWrite-Host \"-------------------------------\"\n\t\t}\n\t}\n}\n\n\nfunction Build\n{\n\tProcess-Input\n\n\t$extension = 'vcxproj'\n\tBuildComponents $extension \"lib\"\n\tBuildComponents $extension \"test\"\n\tBuildComponents $extension \"sample\"\n}\n\n\nBuild\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "blob",
          "size": 0.3115234375,
          "content": "Foundation\nCppUnit\nEncodings\nXML\nJSON\nUtil\nNet\nCrypto\nNetSSL_OpenSSL\nNetSSL_Win\nData\nData/SQLite\nData/ODBC\nData/MySQL\nData/PostgreSQL\nData/DataTest\nZip\nPageCompiler\nPageCompiler/File2Page\nJWT\nPDF\nCppParser\nMongoDB\nRedis\nPrometheus\nActiveRecord\nActiveRecord/Compiler\nDNSSD\nDNSSD/Avahi\nDNSSD/Bonjour\nPocoDoc\nProGen\nTrace\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 11.83203125,
          "content": "#! /bin/sh\n#\n# configure\n#\n# Configuration script for POCO.\n#\n# Invoke configure --help for help.\n#\n\nshowhelp()\n{\ncat << ENDHELP\nusage: configure {options}\nConfigure the POCO C++ Libraries.\n\nOptions:\n  --help\n    Display this help screen.\n\n  --config=<config_name>\n    Use the given build configuration.\n    Available configurations are:\n\n$(ls -C \"$base\"/build/config/)\n\n  --prefix=<install_prefix>\n    Use the given install directory for make install.\n    Default is /usr/local.\n\n  --no-prefix\n    Do not use /usr/local as default install directory and do not\n    define POCO_PREFIX.\n\n  --stdcxx-base=<apache_stdcxx_install_prefix>\n    If (and only if) the $base/build/config selected with --config\n    uses the Apache stdcxx library, then apache_stdcxx_install_prefix\n    specifies the base directory where stdcxx is installed.\n\n  --no-tests\n    Do not build testsuites.\n\n  --no-samples\n    Do not build samples.\n\n  --minimal\n    Build only Foundation, XML, JSON, Util and Net.\n\n  --typical (default)\n    Build only Foundation, XML, JSON, Util, Net, Crypto, NetSSL, Data/SQLite and Zip.\n\n  --everything\n    Build everything.\n\n  --no-wstring\n    Compile with -DPOCO_NO_WSTRING.\n    Useful if your C++ compiler does not support std::wstring\n    (such as uClibc-based systems).\n\n  --no-fpenvironment\n    Compile with -DPOCO_NO_FPENVIRONMENT.\n    Useful if your C++ compiler has incomplete floating-point support\n    (such as uClibc-based systems).\n\n  --no-sharedmemory\n    Compile with -DPOCO_NO_SHAREDMEMORY.\n    For systems that don't support shared memory API's,\n    like uClibc-based Linux systems.\n\n  --no-sharedlibs\n    Compile with -DPOCO_NO_SHAREDLIBS.\n    For systems that don't support shared library loading.\n\n  --no-ipv6\n    Compile with -DPOCO_NET_NO_IPv6.\n    For systems that don't support IPv6.\n\n  --no-soo\n    Compile with -DPOCO_NO_SOO.\n    Disables small object optimization.\n\n  --no-sqlparser\n    Compile with -DPOCO_DATA_NO_SQL_PARSER\n    Disables compilation of the SQLParser.\n\n  --mssql-bigstring\n    Compile with -DPOCO_DATA_SQL_SERVER_BIG_STRINGS=1\n    Enables strings over 8000 bytes on MS SQL Server.\n\n  --sqlite-fts\n    Compile with -DPOCO_DATA_SQLITE_FTS.\n    Compile SQLite with Full Text Search support.\n\n  --sqlite-thread-safe=<value>\n    Compile with -DSQLITE_THREADSAFE=<value>.\n    Valid values are:\n\t\t- 0 single-thread, no thread safety\n\t\t- 1 serial access, highest thread safety\n\t\t- 2 multi-threaded, without session sharing support\n\n\n  --omit=<component>{,<component>}\n    Do not build the specified component(s).\n    Example: --omit=Data/MySQL,Data/ODBC,Zip\n\n  --include-path=<path>\n    Add search path for header files.\n\n  --library-path=<path>\n    Add search path for library files.\n\n  --odbc-lib=<path>\n    Specify the directory where ODBC library is located.\n\n  --odbc-include=<path>\n    Specify the directory where ODBC header files are located.\n\n  --mssql-include=<path>\n    Specify the directory where MS SQL Server ODBC header files are located.\n\n  --mysql-lib=<path>\n    Specify the directory where MySQL library is located.\n\n  --mysql-include=<path>\n    Specify the directory where MySQL header files are located.\n\n  --pgsql-lib=<path>\n    Specify the directory where PostgreSQL library is located.\n\n  --pgsql-include=<path>\n    Specify the directory where PostgreSQL header files are located.\n\n  --cflags=<flags>\n    Pass additional flags to compiler.\n    Example: --cflags=-wall\n\n  --ldflags=<flags>\n    Pass additional flags to linker.\n    Example: --ldflags=-latomic\n\n  --poquito\n    Omit a few features for smaller codesize when linking\n    statically for embedded targets.\n\n  --unbundled\n    Use system-provided zlib, pcre, expat and sqlite instead of\n    bundled ones.\n\n  --trace\n    Enable stack trace. Implicitly disables stripping in release build.\n\n  --static\n    Build static libraries. Overrides default mode, which\n    depends upon target. Can be specified together\n    with --shared to build both.\n\n  --shared\n    Build shared libraries. Overrides default mode, which\n    depends upon target. Can be specified together\n    with --static to build both.\n\nENDHELP\n}\n\n# save cwd\nbuild=$(pwd)\n# get directory where we are located\ncd \"$(dirname \"$0\")\" || exit\nbase=$(pwd)\ncd \"$build\" || exit\n\ntests=1\nsamples=1\nnoprefix=0\nflags=\"\"\nldflags=\"\"\nincludepath=\"\"\nlibrarypath=\"\"\nodbclib=\"\"\nodbcinclude=\"\"\nmssqlinclude=\"\"\nunbundled=\"\"\ntrace=\"\"\nstatic=\"\"\nshared=\"\"\nnosqlparser=\nmssqlbigstring=\nomitMinimal=\"Crypto NetSSL_OpenSSL Zip Data Data/SQLite Data/ODBC Data/MySQL Data/PostgreSQL MongoDB Redis PDF DNSSD DNSSD/Avahi DNSSD/Bonjour CppParser PageCompiler\"\nomitTypical=\"Data/ODBC Data/MySQL Data/PostgreSQL MongoDB Redis PDF DNSSD DNSSD/Avahi DNSSD/Bonjour CppParser\"\nomit=$omitTypical\n# parse arguments\nwhile [ $# -ge 1 ]; do\n\tcase \"$1\" in\n\t--config=*)\n\t\tconfig=\"$(echo \"${1}\" | awk '{print substr($0,10)}')\" ;;\n\n\t--prefix=*)\n\t\tprefix=\"$(echo \"${1}\" | awk '{print substr($0,10)}')\" ;;\n\n\t--no-prefix)\n\t\tnoprefix=1 ;;\n\n\t--stdcxx-base=*)\n\t\tstdcxx_base=\"$(echo \"${1}\" | awk '{print substr($0,15)}')\" ;;\n\n\t--omit=*)\n\t\tomit=\"$(echo \"${1}\" | awk '{print substr($0,8)}' | tr ',;' '  ')\" ;;\n\n\t--include-path=*)\n\t\tincludepath=\"$(echo \"${1}\" | awk '{print substr($0,16)}' | tr ',;' '  ')\" ;;\n\n\t--library-path=*)\n\t\tlibrarypath=\"$(echo \"${1}\" | awk '{print substr($0,16)}' | tr ',;' '  ')\" ;;\n\n\t--odbc-lib=*)\n\t\todbclib=\"$(echo \"${1}\" | awk '{print substr($0,12)}')\" ;;\n\n\t--odbc-include=*)\n\t\todbcinclude=\"$(echo \"${1}\" | awk '{print substr($0,16)}')\" ;;\n\n\t--mssql-include=*)\n\t\tmssqlinclude=\"$(echo \"${1}\" | awk '{print substr($0,16)}')\" ;;\n\n\t--mysql-lib=*)\n\t\tmysqllib=\"$(echo \"${1}\" | awk '{print substr($0,13)}')\" ;;\n\n\t--mysql-include=*)\n\t\tmysqlinclude=\"$(echo \"${1}\" | awk '{print substr($0,17)}')\" ;;\n\n\t--pgsql-lib=*)\n\t\tpgsqllib=\"$(echo \"${1}\" | awk '{print substr($0,13)}')\" ;;\n\n\t--pgsql-include=*)\n\t\tpgsqlinclude=\"$(echo \"${1}\" | awk '{print substr($0,17)}')\" ;;\n\n\t--cflags=*)\n\t\tflags=\"$flags $(echo \"${1}\" | awk '{print substr($0,10)}')\" ;;\n\n\t--ldflags=*)\n\t\tldflags=\"$ldflags $(echo \"${1}\" | awk '{print substr($0,11)}')\" ;;\n\n\t--no-samples)\n\t\tsamples=\"\" ;;\n\n\t--no-tests)\n\t\ttests=\"\" ;;\n\n\t--no-wstring)\n\t\tflags=\"$flags -DPOCO_NO_WSTRING\" ;;\n\n\t--no-fpenvironment)\n\t\tflags=\"$flags -DPOCO_NO_FPENVIRONMENT\" ;;\n\n\t--no-sharedmemory)\n\t\tflags=\"$flags -DPOCO_NO_SHAREDMEMORY\" ;;\n\n\t--no-sharedlibs)\n\t\tflags=\"$flags -DPOCO_NO_SHAREDLIBS\" ;;\n\n\t--no-ipv6)\n\t\tflags=\"$flags -DPOCO_NET_NO_IPv6\" ;;\n\n\t--no-soo)\n\t\tflags=\"$flags -DPOCO_NO_SOO\" ;;\n\n\t--no-sqlparser)\n\t\tflags=\"$flags -DPOCO_DATA_NO_SQL_PARSER\"\n\t\tnosqlparser=1\n\t\t;;\n\n\t--mssql-bigstring)\n\t\tflags=\"$flags -DPOCO_DATA_SQL_SERVER_BIG_STRINGS=1\"\n\t\tmssqlbigstring=1\n\t\t;;\n\n\t--sqlite-thread-safe=*)\n\t\tflags=\"$flags -DSQLITE_THREADSAFE=$(echo \"${1}\" | awk '{print substr($0,22)}')\" ;;\n\n\t--sqlite-fts)\n\t\tflags=\"$flags -DSQLITE_ENABLE_FTS5\" ;;\n\n\t--poquito)\n\t\tflags=\"$flags -DPOCO_NO_FILECHANNEL -DPOCO_NO_SPLITTERCHANNEL -DPOCO_NO_SYSLOGCHANNEL -DPOCO_UTIL_NO_INIFILECONFIGURATION -DPOCO_UTIL_NO_JSONCONFIGURATION -DPOCO_UTIL_NO_XMLCONFIGURATION\" ;;\n\n\t--unbundled)\n\t\tflags=\"$flags -DPOCO_UNBUNDLED\"\n\t\tunbundled=1\n\t\t;;\n\n\t--trace)\n\t\tflags=\"$flags -DPOCO_ENABLE_TRACE\"\n\t\ttrace=1\n\t\t;;\n\n\t--minimal)\n\t\tomit=$omitMinimal ;;\n\n\t--typical)\n\t\tomit=$omitTypical ;;\n\n\t--everything)\n\t\tomit=\"\" ;;\n\n\t--static)\n\t\tstatic=1 ;;\n\n\t--shared)\n\t\tshared=1 ;;\n\n\t--help)\n \t\tshowhelp\n \t\texit 0\n\t\t;;\n\n\t*)\n\t\tshowhelp\n\t\texit 1\n\t\t;;\n\tesac\n\n \tshift\ndone\n# autodetect build environment\n# ...special cases for CYGWIN or MinGW\nif [ \"$config\" = \"\" ] ; then\n\tconfig=$(uname)\n\tcase \"$config\" in\n\tCYGWIN*)\n\t\tconfig=CYGWIN ;;\n\tMINGW*)\n\t\tconfig=MinGW ;;\n\tesac\nfi\n\nif [ ! -f \"$base/build/config/$config\" ] ; then\n\techo \"Unknown configuration: $config\"\n\techo \"Please use the --config option to specify another build configuration\"\n\techo \"The following configurations are available:\"\n\tls \"$base\"/build/config\n\texit 1\nfi\n\nif [ -z \"$prefix\" ] ; then\n\tif [ $noprefix -eq 0 ] ; then\n\t\tprefix=/usr/local\n\tfi\nfi\n\n# check for patches\nif [ -d \"$base\"/patches/\"$config\" ] ; then\n\techo \"NOTE: There are patches for your configuration available. Please apply them before compiling.\"\nfi\n\n# copy Makefile to build dir\nif [ \"$base\" != \"$build\" ] ; then\n\tcp \"$base\"/Makefile \"$build\"\nfi\n\nif [ -n \"$static\" ] && [ -n \"$shared\" ] ; then\n\tlinkmode=BOTH\nelif [ -n \"$static\" ] ; then\n\tlinkmode=STATIC\nelif [ -n \"$shared\" ] ; then\n\tlinkmode=SHARED\nelse\n\tlinkmode=\"\"\nfi\n\n# create config.make\necho '# config.make generated by configure script' > \"$build\"/config.make\n{\n\techo \"POCO_CONFIG = $config\"\n\techo \"POCO_BASE = $base\"\n\techo \"POCO_BUILD = $build\"\n\techo \"POCO_FLAGS = $flags\"\n\techo \"POCO_LDFLAGS = $ldflags\"\n} >> \"$build\"/config.make\n\nif [ -n \"$prefix\" ] ; then\n\techo \"POCO_PREFIX = $prefix\" >>\"$build\"/config.make\nfi\necho \"OMIT = $omit\" >>\"$build\"/config.make\nif [ -n \"$stdcxx_base\" ] ; then\n\techo \"STDCXX_BASE = $stdcxx_base\" >>\"$build\"/config.make\nfi\nif [ -n \"$includepath\" ] ; then\n\techo \"POCO_ADD_INCLUDE = $includepath\" >>\"$build\"/config.make\nfi\nif [ -n \"$librarypath\" ] ; then\n\techo \"POCO_ADD_LIBRARY = $librarypath\" >>\"$build\"/config.make\nfi\nif [ -n \"$odbclib\" ] ; then\n\techo \"POCO_ODBC_LIB = $odbclib\" >>\"$build\"/config.make\nfi\nif [ -n \"$odbcinclude\" ] ; then\n\techo \"POCO_ODBC_INCLUDE = $odbcinclude\" >>\"$build\"/config.make\nfi\nif [ -n \"$mssqlinclude\" ] ; then\n\techo \"POCO_MSSQL_INCLUDE = $mssqlinclude\" >>\"$build\"/config.make\nfi\nif [ -n \"$mysqllib\" ] ; then\n\techo \"POCO_MYSQL_LIB = $mysqllib\" >>\"$build\"/config.make\nfi\nif [ -n \"$mysqlinclude\" ] ; then\n\techo \"POCO_MYSQL_INCLUDE = $mysqlinclude\" >>\"$build\"/config.make\nfi\nif [ -n \"$pgsqllib\" ] ; then\n\techo \"POCO_PGSQL_LIB = $pgsqllib\" >>\"$build\"/config.make\nfi\nif [ -n \"$pgsqlinclude\" ] ; then\n\techo \"POCO_PGSQL_INCLUDE = $pgsqlinclude\" >>\"$build\"/config.make\nfi\nif [ -n \"$unbundled\" ] ; then\n\techo \"POCO_UNBUNDLED = 1\" >>\"$build\"/config.make\nfi\nif [ -n \"$trace\" ] ; then\n\techo \"POCO_ENABLE_TRACE = 1\" >>\"$build\"/config.make\nfi\nif [ -n \"$linkmode\" ] ; then\n\techo \"LINKMODE = $linkmode\" >>\"$build\"/config.make\nfi\nif [ -n \"$nosqlparser\" ] ; then\n\techo \"POCO_DATA_NO_SQL_PARSER = $nosqlparser\" >>\"$build\"/config.make\nfi\nif [ -n \"$mssqlbigstring\" ] ; then\n\techo \"POCO_DATA_SQL_SERVER_BIG_STRINGS = $mssqlbigstring\" >>\"$build\"/config.make\nfi\n\ncat <<__EOF__ >>\"$build\"/config.make\nexport POCO_CONFIG\nexport POCO_BASE\nexport POCO_BUILD\nexport POCO_FLAGS\nexport POCO_LDFLAGS\n__EOF__\n\nif [ -n \"$prefix\" ] ; then\n\techo \"export POCO_PREFIX\" >>\"$build\"/config.make\nfi\nif [ -n \"$stdcxx_base\" ] ; then\n\techo \"export STDCXX_BASE\" >>\"$build\"/config.make\nfi\nif [ -n \"$includepath\" ] ; then\n\techo \"export POCO_ADD_INCLUDE\" >>\"$build\"/config.make\nfi\nif [ -n \"$librarypath\" ] ; then\n\techo \"export POCO_ADD_LIBRARY\" >>\"$build\"/config.make\nfi\nif [ -n \"$odbclib\" ] ; then\n\techo \"export POCO_ODBC_LIB\" >>\"$build\"/config.make\nfi\nif [ -n \"$odbcinclude\" ] ; then\n\techo \"export POCO_ODBC_INCLUDE\" >>\"$build\"/config.make\nfi\nif [ -n \"$mssqlinclude\" ] ; then\n\techo \"export POCO_MSSQL_INCLUDE\" >>\"$build\"/config.make\nfi\nif [ -n \"$mysqllib\" ] ; then\n\techo \"export POCO_MYSQL_LIB\" >>\"$build\"/config.make\nfi\nif [ -n \"$mysqlinclude\" ] ; then\n\techo \"export POCO_MYSQL_INCLUDE\" >>\"$build\"/config.make\nfi\nif [ -n \"$pgsqllib\" ] ; then\n\techo \"export POCO_PGSQL_LIB\" >>\"$build\"/config.make\nfi\nif [ -n \"$pgsqlinclude\" ] ; then\n\techo \"export POCO_PGSQL_INCLUDE\" >>\"$build\"/config.make\nfi\nif [ -n \"$unbundled\" ] ; then\n\techo \"export POCO_UNBUNDLED\" >>\"$build\"/config.make\nfi\nif [ -n \"$trace\" ] ; then\n\techo \"export POCO_ENABLE_TRACE\" >>\"$build\"/config.make\nfi\nif [ -n \"$linkmode\" ] ; then\n\techo \"export LINKMODE\" >>\"$build\"/config.make\nfi\nif [ -n \"$nosqlparser\" ] ; then\n\techo \"export POCO_DATA_NO_SQL_PARSER\" >>\"$build\"/config.make\nfi\nif [ -n \"$mssqlbigstring\" ] ; then\n\techo \"POCO_DATA_SQL_SERVER_BIG_STRINGS=$mssqlbigstring\" >>\"$build\"/config.make\nfi\n# create config.build\necho '# config.build generated by configure script' >\"$build\"/config.build\ncat <<__EOF__ >>\"$build\"/config.build\nTESTS = $tests\nSAMPLES = $samples\n__EOF__\n\necho \"Configured for $config\"\necho \"======================\"\necho\ncat \"$build\"/config.make\necho\ncat \"$build\"/config.build\necho\necho \"======================\"\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "cppignore.lnx",
          "type": "blob",
          "size": 1.5927734375,
          "content": "CppUnit::TestCaller<ThreadTest>.testSleep\nCppUnit::TestCaller<ExpireCacheTest>.testAccessExpireN\nCppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN\nCppUnit::TestCaller<ExpireCacheTest>.testExpireN\nCppUnit::TestCaller<UniqueExpireCacheTest>.testExpireN\nCppUnit::TestCaller<FileChannelTest>.testPurgeAge\nCppUnit::TestCaller<FileTest>.testFileAttributes2\nCppUnit::TestCaller<PathTest>.testExpand\nCppUnit::TestCaller<PathTest>.testExpandVariableFromPath\nCppUnit::TestCaller<SyslogTest>.testOldBSD\nCppUnit::TestCaller<ClockTest>.testClock\nCppUnit::TestCaller<TimerTest>.testScheduleAtFixedRate\nCppUnit::TestCaller<TimerTest>.testScheduleInterval\nCppUnit::TestCaller<TimerTest>.testScheduleIntervalClock\nCppUnit::TestCaller<TimerTest>.testScheduleIntervalTimestamp\nCppUnit::TestCaller<TimerTest>.testTimer\nCppUnit::TestCaller<SocketAddressTest>.testSocketAddress\nCppUnit::TestCaller<RawSocketTest>.testEchoIPv4\nCppUnit::TestCaller<RawSocketTest>.testSendToReceiveFromIPv4\nCppUnit::TestCaller<RawSocketTest>.testEchoIPv4Move\nCppUnit::TestCaller<ICMPClientTest>.testPing\nCppUnit::TestCaller<ICMPClientTest>.testBigPing\nCppUnit::TestCaller<ICMPSocketTest>.testSendToReceiveFrom\nCppUnit::TestCaller<ICMPSocketTest>.testAssign\nCppUnit::TestCaller<ICMPSocketTest>.testMTU\nCppUnit::TestCaller<NTPClientTest>.testTimeSync\nCppUnit::TestCaller<MulticastSocketTest>.testMulticast\nCppUnit::TestCaller<HTTPSClientSessionTest>.testCachedSession\nCppUnit::TestCaller<HTTPSClientSessionTest>.testProxy\nCppUnit::TestCaller<HTTPSStreamFactoryTest>.testProxy\nCppUnit::TestCaller<DNSTest>.testHostByAddress\nCppUnit::TestCaller<DNSTest>.testHostByName\n"
        },
        {
          "name": "cppignore.win",
          "type": "blob",
          "size": 1.4365234375,
          "content": "class CppUnit::TestCaller<class NTPClientTest>.testTimeSync\nclass CppUnit::TestCaller<class GlobTest>.testGlob\nclass CppUnit::TestCaller<class RawSocketTest>.testEchoIPv4\nclass CppUnit::TestCaller<class RawSocketTest>.testSendToReceiveFromIPv4\nclass CppUnit::TestCaller<class RawSocketTest>.testEchoIPv4Move\nclass CppUnit::TestCaller<class ICMPClientTest>.testPing\nclass CppUnit::TestCaller<class ICMPClientTest>.testBigPing\nclass CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy\nclass CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy\nclass CppUnit::TestCaller<class TCPServerTest>.testReuseSocket\nclass CppUnit::TestCaller<class HTTPSClientSessionTest>.testInterop\nclass CppUnit::TestCaller<class PathTest>.testFind\nclass CppUnit::TestCaller<class ThreadTest>.testSleep\nclass CppUnit::TestCaller<class TimerTest>.testTimer\nclass CppUnit::TestCaller<class TimerTest>.testScheduleInterval\nclass CppUnit::TestCaller<class TimerTest>.testScheduleIntervalTimestamp\nclass CppUnit::TestCaller<class TimerTest>.testScheduleIntervalClock\nclass CppUnit::TestCaller<class TimerTest>.testScheduleAtFixedRate\nclass CppUnit::TestCaller<class SystemConfigurationTest>.testProperties\nclass CppUnit::TestCaller<class WinServiceTest>.testServiceReturnsTrueIfStopped\nclass CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom\nclass CppUnit::TestCaller<class ICMPSocketTest>.testMTU\nclass CppUnit::TestCaller<class HTTPSClientSessionTest>.testCachedSession\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "env.bat",
          "type": "blob",
          "size": 0.0283203125,
          "content": "@echo off\nset POCO_BASE=%CD%\n"
        },
        {
          "name": "env.sh",
          "type": "blob",
          "size": 0.064453125,
          "content": "export POCO_BASE=`pwd`\nexport PATH=$POCO_BASE/release/script:$PATH"
        },
        {
          "name": "gh-cli-for-release-notes.sh",
          "type": "blob",
          "size": 2.90625,
          "content": "#!/usr/bin/env bash\n\n#\n# Helper script to prepare changelog for a release.\n#\n# It filters GitHub issues and pull requests for the specified milestone and\n# prints a list on standard output. The generated list needs to be reviewed by\n# a maintainer before including it to the CHANGELOG.\n#\n# It uses GitHub CLI from https://github.com/cli/cli\n#\n# Usage: gh-cli-release-notes.sh <GitHub milestone name>\n#\n\nif [[ $# -eq 0 ]] ; then\n    echo 'Usage: gh-cli-release-notes.sh <GitHub milestone name>'\n    exit 1\nfi\n\n\nMILESTONE=$1\n\necho\necho \"${MILESTONE} ($(date \"+%Y-%m-%d\"))\"\necho ===========================\necho\necho \"Summary of Changes:\"\necho\necho \"Breaking Changes:\"\necho\n\ngh issue list -S 'milestone:\"'\"${MILESTONE}\"'\" label:breaking' -s all -L 500 --json number,title --jq '.[] | \"- GH #\\(.number) \\(.title)\"'\ngh pr    list -S 'milestone:\"'\"${MILESTONE}\"'\" label:breaking' -s all -L 500 --json number,title --jq '.[] | \"- PR #\\(.number) \\(.title)\"'\n\n\necho\necho \"Security Fixes:\"\necho\n\ngh issue list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking label:security' -s all -L 500 --json number,title --jq '.[] | \"- GH #\\(.number) \\(.title)\"'\ngh pr    list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking label:security' -s all -L 500 --json number,title --jq '.[] | \"- PR #\\(.number) \\(.title)\"'\n\necho\necho \"Features, Enhancements and Third Party Updates:\"\necho\n\ngh issue list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:security label:enhancement' -s all -L 500 --json number,title --jq '.[] | \"- GH #\\(.number) \\(.title)\"'\ngh issue list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:security -label:enhancement label:feature' -s all -L 500 --json number,title --jq '.[] | \"- GH #\\(.number) \\(.title)\"'\ngh issue list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:security -label:enhancement -label:feature label:third-party' -s all -L 500 --json number,title --jq '.[] | \"- GH #\\(.number) \\(.title)\"'\ngh pr    list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:security label:enhancement' -s all -L 500 --json number,title --jq '.[] | \"- PR #\\(.number) \\(.title)\"'\ngh pr    list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:security -label:enhancement label:feature' -s all -L 500 --json number,title --jq '.[] | \"- PR #\\(.number) \\(.title)\"'\ngh pr    list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:security -label:enhancement -label:feature label:third-party' -s all -L 500 --json number,title --jq '.[] | \"- PR #\\(.number) \\(.title)\"'\n\necho\necho \"Bug Fixes and Improvements:\"\necho\n\ngh issue list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:enhancement -label:feature -label:security -label:third-party' -s all -L 500 --json number,title --jq '.[] | \"- GH #\\(.number) \\(.title)\"'\ngh pr    list -S 'milestone:\"'\"${MILESTONE}\"'\" -label:breaking -label:enhancement -label:feature -label:security -label:third-party' -s all -L 500 --json number,title --jq '.[] | \"- PR #\\(.number) \\(.title)\"'\n\necho\n"
        },
        {
          "name": "libversion",
          "type": "blob",
          "size": 0.00390625,
          "content": "110\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "poco_env.bash",
          "type": "blob",
          "size": 2.3291015625,
          "content": "# usage:\n# . env.bash\n# or\n# source env.bash\n\nself=\"${BASH_SOURCE[0]}\"\n\nif [ \"$self\" == \"$0\" ] ; then\n\techo \"This file must be sourced from bash, not run.\"\n\techo \"Usage: . $0\"\n\texit 1\nfi\n\nif [ -d \"$self\" ] ; then\n\tbasedir=\"$(cd \"$self\" || exit; pwd -P)\"\nelse\n\tbasedir=\"$(cd \"$(dirname \"$self\")\" || exit; pwd -P)\"\nfi\n\nOSNAME=\"${OSNAME:=$(uname -s)}\"\nexport OSNAME\nOSARCH=\"${OSARCH:=$(uname -m)}\"\nexport OSARCH\nPOCO_BASE=\"$basedir\"\nexport POCO_BASE\n\nPOCO_LIB_PATH=$POCO_BASE/lib/$OSNAME/$OSARCH:$POCO_BASE/lib/$OSNAME/$OSARCH/lib\nPOCO_BIN_PATH=$POCO_BASE/Foundation/testsuite/bin/$OSNAME/$OSARCH\nPOCO_PATHS=$POCO_BASE:$POCO_LIB_PATH:$POCO_BIN_PATH\nif [[ \"$PATH\" != *\"$POCO_PATHS\"* ]]; then\n\tPATH=$POCO_PATHS:$PATH\n\texport PATH\nfi\n\nexplibpath=\nexpbinpath=\nexppocopath=\nfunction setPath {\n# adds POCO_PATHS to system PATH only if they are not there already\n\tIFS=':' read -ra PATHDIR <<< \"$1\"\n\tfor i in \"${PATHDIR[@]}\"; do\n\t\tif [[ \"$POCO_LIB_PATH\" == \"$i\" ]]; then\n\t\t\texplibpath+=\"$i\"\n\t\telif [[ \"$POCO_BIN_PATH\" == \"$i\" ]]; then\n\t\t\texpbinpath+=\"$i\"\n\t\telif [[ \"$POCO_BASE\" == \"$i\" ]]; then\n\t\t\texppocopath+=\"$i\"\n\t\tfi\n\tdone\n}\n\nsetPath \"$PATH\"\n\nif [[ -z \"$exppocopath\" ]]; then\n\texport PATH=\"$POCO_BASE:$PATH\"\nfi\n\nif [[ -z \"$explibpath\" ]]; then\n\texport PATH=\"$POCO_LIB_PATH:$PATH\"\nfi\n\nif [[ -z \"$expbinpath\" ]]; then\n\texport PATH=\"$POCO_BIN_PATH:$PATH\"\nfi\n\nexplibpath=\nfunction setLibPath {\n# adds POCO_LIB_PATH to (DY)LD_LIBRARY_PATH only if it is not there already\n\tIFS=':' read -ra LIBDIR <<< \"$1\"\n\tfor i in \"${LIBDIR[@]}\"; do\n\t\tif [[ \"$POCO_LIB_PATH\" == \"$i\" ]]; then\n\t\t\texplibpath=\"$1\"\n\t\t\tbreak\n\t\tfi\n\tdone\n}\n\ncase \"${OSNAME}\" in\n\tLinux*)\n\t\tsetLibPath \"$LD_LIBRARY_PATH\"\n\t\tif [[ -z \"$explibpath\" ]]; then\n\t\t\texport LD_LIBRARY_PATH=\"$POCO_LIB_PATH:$DYLD_LIBRARY_PATH\"\n\t\tfi\n\t\t;;\n\tDarwin*)\n\t\tsetLibPath \"$DYLD_LIBRARY_PATH\"\n\t\tif [[ -z \"$explibpath\" ]]; then\n\t\t\texport DYLD_LIBRARY_PATH=\"$POCO_LIB_PATH:$DYLD_LIBRARY_PATH\"\n\t\tfi\n\t\t;;\nesac\n\n# uncomment for sanitizer builds\n#LSAN_OPTIONS=verbosity=1:log_threads=1\n#export LSAN_OPTIONS\n#TSAN_OPTIONS=\"suppressions=$POCO_BASE/tsan.suppress,second_deadlock_stack=1\"\n#export TSAN_OPTIONS\n\necho \"\\$OSNAME    = $OSNAME\"\necho \"\\$OSARCH    = $OSARCH\"\necho \"\\$POCO_BASE = $POCO_BASE\"\necho \"\\$PATH      = $PATH\"\ncase \"${OSNAME}\" in\n\tLinux*)  echo \"\\$LD_LIBRARY_PATH   = $LD_LIBRARY_PATH\";;\n\tDarwin*) echo \"\\$DYLD_LIBRARY_PATH = $DYLD_LIBRARY_PATH\";;\nesac\n"
        },
        {
          "name": "progen.ps1",
          "type": "blob",
          "size": 7.080078125,
          "content": "#\n# POCO progen automation script\n#\n# Usage:\n# ------\n# progen.ps1   [-poco_base    dir]\n#              [-vs           160| 170]\n#              [-omit         \"Lib1X,LibY,LibZ,...\"]\n#              [-components   \"Lib1X,LibY,LibZ,...\"]\n#              [-platform     Win32 | x64 | ARM64 | WEC2013]\n#              [-samples]\n#              [-tests]\n#              [-nobuild]\n\n[CmdletBinding()]\nParam\n(\n\t[Parameter()]\n\t[string] $poco_base = $([System.Environment]::GetEnvironmentVariable('POCO_BASE')),\n\n\t[Parameter()]\n\t[ValidateSet(160, 170)]\n\t[int] $vs = 170,\n\n\t[string] $omit,\n\t[string] $components,\n\n\t[Parameter()]\n\t[ValidateSet('Win32', 'x64', 'ARM64', 'WEC2013')]\n\t[string] $platform = 'x64',\n\n\t[switch] $samples = $false,\n\t[switch] $tests = $false,\n\t[switch] $nobuild = $false,\n\n\n\t[switch] $help\n)\n\nfunction ProcessInput\n{\n\tif ($help -eq $true)\n\t{\n\t\tWrite-Host 'Usage:'\n\t\tWrite-Host '------'\n\t\tWrite-Host 'progen.ps1 [-poco_base <dir>]'\n\t\tWrite-Host '    [-vs           160 | 170]'\n\t\tWrite-Host '    [-omit         \"Lib1X,LibY,LibZ,...\"]'\n\t\tWrite-Host '    [-components   \"Lib1X,LibY,LibZ,...\"]'\n\t\tWrite-Host '    [-samples]'\n\t\tWrite-Host '    [-tests]'\n\t\tWrite-Host '    [-nobuild]'\n\t\tExit\n\t}\n\telse\n\t{\n\t\tif($components -ne '' -and $omit -ne '') {\n\t\t\tWrite-Host \"-components and -omit cannot be used simultaneously, exiting...\"\n\t\t\tExit\n\t\t}\n\t\tWrite-Host \"\"\n\t\tWrite-Host \"--------------------\"\n\t\tWrite-Host \"Progen configuration:\"\n\t\tWrite-Host \"--------------------\"\n\t\tWrite-Host \"Poco Base:     $poco_base\"\n\t\tWrite-Host \"Version:       $vs\"\n\t\tWrite-Host \"Samples:       $samples\"\n\t\tWrite-Host \"Tests:         $tests\"\n\t\tWrite-Host \"No Build:      $nobuild\"\n\n\t\tif ($omit -ne '')\n\t\t{\n\t\t\tWrite-Host \"Omit:          $omit\"\n\t\t}\n\n\t\tif ($components -ne '')\n\t\t{\n\t\t\tWrite-Host \"Components:          $components\"\n\t\t}\n\n\t\tWrite-Host \"----------------------------------------\"\n\t\tWrite-Host \"\"\n\n\t\t# NB: this won't work in PowerShell ISE\n\t\t#Write-Host \"Press Ctrl-C to exit or any other key to continue ...\"\n\t\t#$x = $host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyUp\")\n\t}\n}\n\nfunction InvokeProcess([string] $exe, [string] $arguments)\n{\n\t$proc = Start-Process -NoNewWindow  -FilePath $exe -ArgumentList $arguments -PassThru\n\t$handle = $proc.Handle # cache proc.Handle, necessary to get exit code\n\t$proc.WaitForExit();\n\tif ($proc.ExitCode -ne 0) {\n\t    Write-Warning \"$_ exited with status code $($proc.ExitCode)\"\n\t}\n}\n\nfunction InvokeProgenSamples\n{\n\tprocess {\n\t\t$sampleName = $_.BaseName.split(\".\")[0]\n\t\tif($_.Name -eq \"samples.progen\") {\n\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\tWrite-Host \"| Running Progen for $componentDir\\$sampleName\"\n\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t$sampleProgenPath = \"$($poco_base)\\$($componentDir)\\$($sampleName)\\$($_)\"\n\t\t}\n\t\telse {\n\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\tWrite-Host \"| Running Progen for $componentDir\\samples\\$sampleName\"\n\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t$sampleProgenPath = \"$($poco_base)\\$($componentDir)\\samples\\$($sampleName)\\$($_)\"\n\t\t}\n\t\tif (Test-Path -Path $sampleProgenPath) {\n\t\t\tInvokeProcess $progenPath \"/tool=vs$vs $sampleProgenPath\"\n\t\t}\n\t\telse {\n\t\t\tWrite-Host \"NOTICE: No .progen file for $sampleName\"\n\t\t}\n\t}\n}\n\nfunction InvokeProgenComponents([string] $type)\n{\n\tif(Test-Path \"$poco_base\\ProGen\\bin64\\static_mt\\progen.exe\") {\n\t\t$progenPath = Resolve-Path \"$poco_base\\ProGen\\bin64\\static_mt\\progen.exe\"\n\t}\n\telseif(Test-Path \"$poco_base\\ProGen\\bin64\\static_md\\progen.exe\") {\n\t\t$progenPath = Resolve-Path \"$poco_base\\ProGen\\bin64\\static_md\\progen.exe\"\n\t}\n\telse {\n\t\t$progenPath = Resolve-Path \"$poco_base\\ProGen\\bin64\\progen.exe\"\n\t}\n\t$exists = Test-Path \"$poco_base\\ProGen\\bin64\\static_mt\\progen.exe\"\n\tif (-not $exists) {\n\t\tWrite-Error \"Progen not found, exiting...\"\n\t\tExit -1\n\t}\n\n\tGet-Content \"$poco_base\\components\" | Foreach-Object {\n\n\t\t$component = $_\n\t\t$componentDir = $_.Replace(\"/\", \"\\\")\n\t\t$componentArr = $_.split('/')\n\t\t$componentName = $componentArr[$componentArr.Length - 1]\n\n\t\t$omitArray = @()\n\t\t$omit.Split(',') | ForEach-Object {\n\t\t\t\t$omitArray += $_.Trim()\n\t\t}\n\n\t\t$componentsArray = @()\n\t\t$components.Split(',') | ForEach-Object {\n\t\t\t\t$componentsArray += $_.Trim()\n\t\t}\n\n\t\tif ($omitArray -NotContains $component -and ((-not ($component -Contains \"Foundation\")) -or ($type -eq \"sample\")) -and (($componentsArray -Contains $component) -or ($components -eq '')))\n\t\t{\n\t\t\tif($type -eq \"lib\") {\n\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\tWrite-Host \"| Running ProGen for $componentDir\"\n\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t$componentProgenPath = \"$poco_base\\$componentDir\\$componentName.progen\"\n\t\t\t\tInvokeProcess $progenPath \"/tool=vs$vs $componentProgenPath\"\n\t\t\t}\n\t\t\tElseIf ($tests -and ($type -eq \"test\")) {\n\t\t\t\tif (Test-Path -Path \"$poco_base\\$componentDir\\testsuite\") {\n\t\t\t\t\t$componentTestProgenPath = \"$poco_base\\$componentDir\\testsuite\\TestSuite.Progen\"\n\t\t\t\t\tif (Test-Path -Path $componentTestProgenPath) {\n\t\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\t\tWrite-Host \"| Running Progen for $componentDir\\testsuite\"\n\t\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\t\tInvokeProcess $progenPath \"/tool=vs$vs $componentTestProgenPath\"\n\n\t\t\t\t\t\tif ($component -eq \"Data\") # special case for Data\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$componentTestProgenPath = \"$poco_base\\$componentDir\\DataTest\\DataTest.progen\"\n\t\t\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\t\t\tWrite-Host \"| Running Progen for $componentDir\\DataTest\"\n\t\t\t\t\t\t\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\t\t\t\t\t\t\tInvokeProcess $progenPath \"/tool=vs$vs $componentTestProgenPath\"\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tElse {\n\t\t\t\t\t\tWrite-Host \"NOTICE: Missing .progen file for $componentDir\\testsuite\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tElseIf ($samples -and ($type -eq \"sample\")) {\n\t\t\t\tGet-Childitem \"$poco_base\\$($componentDir)\" -Recurse |`\n\t\t\t\tWhere-Object {$_.Extension -Match \".progen\" -And $_.DirectoryName -Like \"*samples*\" } `\n\t\t\t\t| InvokeProgenSamples \"$_\"\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tWrite-Host \"-------------------------------\"\n\t\t\tWrite-Host \"# Skipping $componentDir\"\n\t\t\tWrite-Host \"-------------------------------\"\n\t\t}\n\t}\n}\n\nfunction InvokeBuildWin {\n\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\tWrite-Host \"| Building Foundation,XML,JSON,Util,Progen\"\n\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\tInvoke-Expression \"$poco_base\\buildwin.ps1 -poco_base $poco_base -platform $platform -linkmode static_mt -vs $vs -action build -components `\"Foundation,XML,JSON,Util,Progen`\" \"\n\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n\tWrite-Host \"| Build finished.\"\n\tWrite-Host \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\"\n}\n\nfunction Run\n{\n\tProcessInput\n\n\tif($nobuild -eq $false) {\n\t\tInvokeBuildWin\n\t}\n\n\tInvokeProgenComponents \"lib\"\n\tInvokeProgenComponents \"test\"\n\tInvokeProgenComponents \"sample\"\n}\n\n\nRun"
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "runLibTests.sh",
          "type": "blob",
          "size": 2.1630859375,
          "content": "#!/bin/bash\n#\n# Script to rebuild libraries and dependencies\n# (with or without a sanitizer) and run the tests.\n#\n# The use case of the script is mainly for development purposes -\n# to clean and rebuild a single library, with all of its dependencies,\n# and run the tests.\n#\n# Usage: ./runLibTests.sh library [address | undefined | thread] [<test> | -all | none]\n#\n# Example: ./runLibTests.sh Data/SQLite address\n# (distcleans, rebuilds and runs tests for Data/SQLite with address sanitizer)\n#\n# Known shortcomings (TODO):\n# - the script does not check if the library is a dependency of another library\n#   workaround: run the script for the dependent libraries first\n#\n\n# g++ does not like empty quoted arguments, but\n# the shellcheck wants them quoted to remain quiet\n# shellcheck disable=SC2086\n\npath=$1\nif [ -z \"${path}\" ]; then\n\techo \"Library not specified\"\n\techo \"Usage: $0 path [address | undefined | thread] [<test> | -all | none]\"\n\texit 1\nfi\n\nlibraries=\nIFS='/' read -r -a libraries <<< \"$path\"\n\nself=\"${BASH_SOURCE[0]}\"\n\nif [ -d \"$self\" ] ; then\n\tbasedir=\"$(cd \"$self\" || exit; pwd -P)\"\nelse\n\tbasedir=\"$(cd \"$(dirname \"$self\")\" || exit; pwd -P)\"\nfi\n\n# shellcheck disable=SC1091\n. \"$basedir\"/poco_env.bash\n\nflag=$2\nflags=\nif [ -n \"${flag}\" ]; then\n\tflags=SANITIZEFLAGS+=-fsanitize=\"$flag\"\nfi\n\npath=\"$basedir\"/\"${libraries[0]}\"\n\nmake distclean -C \"$basedir\"/Foundation\nmake distclean -C \"$basedir\"/CppUnit\n\nmake -s -j4 -C \"$basedir\"/Foundation $flags\nmake -s -j4 -C \"$basedir\"/CppUnit $flags\n\ntest=$3\nif [ -z \"${test}\" ]; then\n\ttest=\"-all\"\nfi\n\n# Foundation requested, build/run tests and exit\nif [[ \"$path\" == \"$basedir\"/\"Foundation\" ]]; then\n\tcd \"$path/testsuite/\" || exit\n\tmake -s -j4 -C ./ $flags\n\tcd \"bin/$OSNAME/$OSARCH/\" || exit\n\tif [[ \"$test\" != \"none\" ]]; then\n\t\t./testrunner \"${test}\"\n\t\t./testrunnerd \"${test}\"\n\tfi\n\techo \"$path $flags done.\"\n\texit 0\nfi\n\nfor library in \"${libraries[@]}\"\ndo\n\tcd \"$library\" || exit\n\tmake distclean\n\tmake -s -j4 -C ./ $flags\n\tcd testsuite || exit\n\tmake distclean\n\tmake -s -j4 -C ./ $flags\n\tcd bin/\"$OSNAME\"/\"$OSARCH\"/ || exit\n\tif [[ \"$test\" != \"none\" ]]; then\n\t\t./testrunner \"${test}\"\n\t\t./testrunnerd \"${test}\"\n\tfi\n\techo \"$1 $flags done.\"\n\tcd ../../../../ || exit\ndone\n"
        },
        {
          "name": "runVSCode.sh",
          "type": "blob",
          "size": 0.322265625,
          "content": "#!/bin/bash\n#\n# this script sets the proper build/runtime\n# environment before opening poco in vscode\n\nself=\"${BASH_SOURCE[0]}\"\n\nif [ -d \"$self\" ] ; then\n\tbasedir=\"$(cd \"$self\" || exit; pwd -P)\"\nelse\n\tbasedir=\"$(cd \"$(dirname \"$self\")\" || exit; pwd -P)\"\nfi\n\n# shellcheck disable=SC1091\n. \"$basedir\"/poco_env.bash\n\ncode \"$basedir\"\n"
        },
        {
          "name": "tsan.suppress",
          "type": "blob",
          "size": 0.65625,
          "content": "# Suppressed thread sanitizer tests\n#\n# https://github.com/google/sanitizers/wiki/ThreadSanitizerSuppressions\n#\n# To apply:\n# export TSAN_OPTIONS=\"suppressions=$POCO_BASE/tsan.suppress,second_deadlock_stack=1\"\n\n##############\n# Suppressions:\n##############\n\n#\n# Foundation\n#\n\n# ActiveDispatcher false positives\n# strictly speaking, yes - ActiveDispatcher::run() is started\n# in a thread before the inheriting object is fully constructed;\n# however, nothing can happen there before some events are\n# enqueued, which can't happen until after the inheriting object\n# is fully constructed\nrace:ActiveDispatcherTest\nrace:ArchiveStrategy::moveFile\n\nrace:ThreadTest::testNotJoin\n"
        }
      ]
    }
  ]
}