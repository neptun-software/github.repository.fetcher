{
  "metadata": {
    "timestamp": 1736710261881,
    "page": 20,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tporadowski/redis",
      "stars": 9208,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.849609375,
          "content": ".*.swp\n*.o\n*.log\n*.bak\ndump.rdb\nredis-benchmark\nredis-check-aof\nredis-check-rdb\nredis-check-dump\nredis-cli\nredis-sentinel\nredis-server\ndoc-tools\nrelease\nbin/\nobj/\nDebug/\nRelease/\nx64/\nmisc/*\nsrc/release.h\nappendonly.aof\nSHORT_TERM_TODO\nrelease.h\nsrc/transfer.sh\nsrc/configs\nredis.ds\nsrc/redis.conf\nsrc/nodes.conf\ndeps/lua/src/lua\ndeps/lua/src/luac\ndeps/lua/src/liblua.a\n.make-*\n.prerequisites\n*.dSYM\n*.user\n*.exe\n*.sdf\n*.suo\nmsvs/ReleasePackagingTool/bin/\nmsvs/ReleasePackagingTool/obj/\nmsvs/ReleasePackagingTool/packages/\nmsvs/ipch\nmsvs/RedisServer.opensdf\n!msvs/RedisWaInst/bin/*\n!msvs/RedisWaInst/bin/Inst4WA/*\n!msvs/RedisWaInst/bin/RedisPkgBin/*\nmsvs/RedisWAInst/src/RedisInstBin/\nmsvs/RedisWAInst/src/RedisInstWA/app.config\nmsvs/jemalloc\nmsvs/BuildRelease\nmsvs/Documentation\ntests/tmp/\n\n/msvs/.vs/RedisServer/v15\n/msvs/msi/.vs/RedisMsi/v15/Server/sqlite3\n.vs/\n*.rdb"
        },
        {
          "name": "00-RELEASENOTES",
          "type": "blob",
          "size": 120.390625,
          "content": "Redis 5.0 release notes\n=======================\n\n--------------------------------------------------------------------------------\nUpgrade urgency levels:\n\nLOW:      No need to upgrade unless there are new features you want to use.\nMODERATE: Program an upgrade of the server, but it's not urgent.\nHIGH:     There is a critical bug that may affect a subset of users. Upgrade!\nCRITICAL: There is a critical bug affecting MOST USERS. Upgrade ASAP.\nSECURITY: There are security fixes in the release.\n--------------------------------------------------------------------------------\n\n================================================================================\nRedis 5.0.10     Released Mon Oct 26 09:21:49 IST 2020\n================================================================================\n\nUpgrade urgency: SECURITY if you use an affected platform (see below).\n                 Otherwise the upgrade urgency is MODERATE.\n\nThis release fixes a potential heap overflow when using a heap allocator other\nthan jemalloc or glibc's malloc. See:\nhttps://github.com/redis/redis/pull/7963\n\nOther fixes in this release:\n\n* Avoid case of Lua scripts being consistently aborted due to OOM\n* XPENDING will not update consumer's seen-time\n* A blocked XREADGROUP didn't propagated the XSETID to replicas / AOF\n* UNLINK support for streams\n* RESTORE ABSTTL won't store expired keys into the DB\n* Hide AUTH from MONITOR\n* Cluster: reduce spurious PFAIL/FAIL states upon delayed PONG receival\n* Cluster: Fix case of clusters mixing accidentally by gossip\n* Cluster: Allow blocked XREAD on a cluster replica\n* Cluster: Optimize memory usage CLUSTER SLOTS command\n* RedisModule_ValueLength support for stream data type\n* Minor fixes in redis-check-rdb and redis-cli\n* Fix redis-check-rdb support for modules aux data\n* Add fsync in replica when full RDB payload was received\n\nFull list of commits:\n\nYossi Gottlieb in commit ce0d74d8f:\n Fix wrong zmalloc_size() assumption. (#7963)\n 1 file changed, 3 deletions(-)\n\nYossi Gottlieb in commit 066699240:\n Backport Lua 5.2.2 stack overflow fix. (#7733)\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nWuYunlong in commit 8a90c7ef3:\n Add fsync to readSyncBulkPayload(). (#7839)\n 1 file changed, 11 insertions(+)\n\nAriel Shtul in commit f0df2bb3c:\n Fix redis-check-rdb support for modules aux data (#7826)\n 3 files changed, 21 insertions(+), 1 deletion(-)\n\nhwware in commit 7add2a412:\n fix memory leak in sentinel connection sharing\n 1 file changed, 1 insertion(+)\n\nOran Agra in commit 315e648f8:\n Allow blocked XREAD on a cluster replica (#7881)\n 3 files changed, 100 insertions(+), 2 deletions(-)\n\nguybe7 in commit 4967ee94e:\n Modules: Invalidate saved_oparray after use (#7688)\n 1 file changed, 2 insertions(+)\n\nantirez in commit 065003e8f:\n Modules: remove spurious call from moduleHandleBlockedClients().\n 1 file changed, 1 deletion(-)\n\nAngus Pearson in commit 6cdf62928:\n Fix broken interval and repeat bahaviour in redis-cli (incluing cluster mode)\n 1 file changed, 11 insertions(+), 6 deletions(-)\n\nantirez in commit cb6a4971c:\n Cluster: introduce data_received field.\n 2 files changed, 27 insertions(+), 10 deletions(-)\n\nMadelyn Olson in commit 83f4de865:\n Hide AUTH from monitor\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nGuy Benoish in commit 3ba08d185:\n Support streams in general module API functions\n 3 files changed, 11 insertions(+), 1 deletion(-)\n\nItamar Haber in commit 109c0635c:\n Expands lazyfree's effort estimate to include Streams (#5794)\n 1 file changed, 24 insertions(+)\n\nhuangzhw in commit 235210d5b:\n defrag.c activeDefragSdsListAndDict when defrag sdsele, We can't use (#7492)\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nOran Agra in commit fdd3162fe:\n RESTORE ABSTTL skip expired keys - leak (#7511)\n 1 file changed, 1 insertion(+)\n\nOran Agra in commit 6139d6d18:\n RESTORE ABSTTL won't store expired keys into the db (#7472)\n 4 files changed, 45 insertions(+), 15 deletions(-)\n\nLiu Zhen in commit 0f502c58d:\n fix clusters mixing accidentally by gossip\n 1 file changed, 10 insertions(+), 2 deletions(-)\n\nGuy Benoish in commit 37fd50718:\n XPENDING should not update consumer's seen-time\n 4 files changed, 30 insertions(+), 18 deletions(-)\n\nantirez in commit a3ca53e4a:\n Also use propagate() in streamPropagateGroupID().\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\nyanhui13 in commit 7a62eb96e:\n optimize the output of cluster slots\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\nsrzhao in commit 0efb93d0c:\n Check OOM at script start to get stable lua OOM state.\n 3 files changed, 11 insertions(+), 4 deletions(-)\n\n================================================================================\nRedis 5.0.9     Released Thu Apr 17 12:41:00 CET 2020\n================================================================================\n\nUpgrade urgency:CRITICAL if you use Streams with AOF ore replicas.\n                Otherwise the upgrade urgency is LOW.\n\nThis release has a speed improvement and a critical fix:\n\n    * FIX: XREADGROUP when fetching data in a blocking way, would not\n           emit the XCLAIM in the AOF file and to replicas. This means\n           that the last ID is not updated, and that restarting the server\n           will have the effect of reprocessing some entries.\n    * NEW: Clients blocked on the same key are now unblocked on\n           O(1) time. Backported from Redis 6.\n\nCommits:\n\n    1fc8ef81a Fix XCLAIM propagation in AOF/replicas for blocking XREADGROUP.\n    a5e24eabc Speedup: unblock clients on keys in O(1).\n\n================================================================================\nRedis 5.0.8     Released Thu Mar 12 16:05:41 CET 2020\n================================================================================\n\nUpgrade urgency HIGH: This release fixes security issues.\n\nThis is a list of fixes in this release:\n\nSalvatore Sanfilippo in commit 2bea502d:\n Merge pull request #6975 from dustinmm80/add-arm-latomic-linking\nDustin Collins in commit b5931405:\n Fix Pi building needing -latomic, backport\n 1 file changed, 9 insertions(+)\n\nsrzhao in commit fd441300:\n fix impl of aof-child whitelist SIGUSR1 feature.\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\nAriel in commit 77ff332b:\n fix ThreadSafeContext lock/unlock function names\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nGuy Benoish in commit 4f0f799c:\n XREADGROUP should propagate XCALIM/SETID in MULTI/EXEC\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nOran Agra in commit 0c1273c3:\n Fix client flags to be int64 in module.c\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nGuy Benoish in commit 708a4e8a:\n Fix small bugs related to replica and monitor ambiguity\n 2 files changed, 8 insertions(+), 6 deletions(-)\n\nWuYunlong in commit eac4115d:\n Fix lua related memory leak.\n 1 file changed, 1 insertion(+)\n\nantirez in commit d075df17:\n Simplify #6379 changes.\n 2 files changed, 4 insertions(+), 9 deletions(-)\n\nWuYunlong in commit 80a49c37:\n Free allocated sds in pfdebugCommand() to avoid memory leak.\n 1 file changed, 1 insertion(+)\n\nantirez in commit 60870d3a:\n Jump to right label on AOF parsing error.\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\nantirez in commit d90f599b:\n Free fakeclient argv on AOF error.\n 1 file changed, 11 insertions(+), 3 deletions(-)\n\nWuYunlong in commit 8ee3bddf:\n Fix potential memory leak of rioWriteBulkStreamID().\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\nWuYunlong in commit 4780fe78:\n Fix potential memory leak of clusterLoadConfig().\n 1 file changed, 20 insertions(+), 5 deletions(-)\n\nLeo Murillo in commit f3b77510:\n Fix bug on KEYS command where pattern starts with * followed by \\x00 (null char).\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nGuy Benoish in commit 7f3fcedb:\n Blocking XREAD[GROUP] should always reply with valid data (or timeout)\n 3 files changed, 44 insertions(+), 10 deletions(-)\n\nantirez in commit f93b2fa5:\n XCLAIM: Create the consumer only on successful claims.\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\nGuy Benoish in commit 89682d96:\n Stream: Handle streamID-related edge cases\n 4 files changed, 54 insertions(+), 4 deletions(-)\n\nantirez in commit 920e108f:\n Fix ip and missing mode in RM_GetClusterNodeInfo().\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\nantirez in commit 7569b210:\n Inline protocol: handle empty strings well.\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\nKhem Raj in commit 3c610b4e:\n Mark extern definition of SDS_NOINIT in sds.h\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSeunghoon Woo in commit 16b2d07f:\n [FIX] revisit CVE-2015-8080 vulnerability\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\nyz1509 in commit 19f33585:\n avoid sentinel changes promoted_slave to be its own replica.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n================================================================================\nRedis 5.0.7     Released Tue Nov 19 17:52:44 CET 2019\n================================================================================\n\nUpgrade urgency HIGH: many issues fixed, some may have an impact.\n\nHi all, Redis 5.0.7 fixes a number of bugs, none is very critical, however\nthere are a few that may have an impact. It's a good idea to upgrade.\nThere are fixes in the area of replication from modules commands and\ncallbacks, AOF fsync (non critical issue), memory leaks (very rare and small),\nstreams beahvior (non critical), and a potential crash in commands\nprocessing multiple keys at the same time that is there for years, and happens\nvery rarely, but is not impossible to trigger.\n\nThe following is the list of commits in this release.\n\nantirez in commit 4d2a31ae:\n Test: fix implementation-dependent test after code change.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nOran Agra in commit 9f63fc98:\n RED-31295 - redis: avoid race between dlopen and thread creation\n 2 files changed, 17 insertions(+)\n\nantirez in commit 1a9e70c1:\n Cluster: fix memory leak of cached master.\n 2 files changed, 9 insertions(+), 4 deletions(-)\n\nGuy Benoish in commit 69b1b5be:\n Fix usage of server.stream_node_max_*\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\n喜欢兰花山丘 in commit 1fd97ee7:\n Update mkreleasehdr.sh\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 1a9855d7:\n Remove additional space from comment.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 32a6e3e4:\n Fix stream test after addition of 0-0 ID test.\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nYuan Zhou in commit c9e6cda9:\n aof: fix assignment for aof_fsync_offset\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit d3eeacf9:\n Merge branch '5.0' of github.com:/antirez/redis into 5.0\nantirez in commit da5dc458:\n Rename var to fixed_time_expire now that is more general.\n 4 files changed, 7 insertions(+), 8 deletions(-)\n\nantirez in commit 0fefed25:\n Fix patch provided in #6554.\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit e9fbc960:\n expires & blocking: handle ready keys as call()\n 1 file changed, 5 insertions(+)\n\nGuy Benoish in commit 08ec8f71:\n XADD with ID 0-0 stores an empty key\n 2 files changed, 14 insertions(+)\n\nLoris Cro in commit 09e1fe27:\n fix unreported overflow in autogerenared stream IDs\n 2 files changed, 19 insertions(+), 10 deletions(-)\n\nSalvatore Sanfilippo in commit 09f9e4b0:\n Merge pull request #6600 from oranagra/5_module_flags\nOran Agra in commit 8d8d68dd:\n module documentation mismatches: loading and fork child for 5.0 branch\n 3 files changed, 11 insertions(+)\n\nantirez in commit 7a7fbe70:\n Modules: RM_GetContextFlags(): remove non Redis 5 features.\n 1 file changed, 3 deletions(-)\n\nantirez in commit b5830486:\n Modules: fix moduleCreateArgvFromUserFormat() casting bug.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit b7a2a53a:\n module: fix propagation API bug.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 278bd6e3:\n Modules: add new flags to context, replica state + more.\n 2 files changed, 48 insertions(+), 1 deletion(-)\n\nantirez in commit 61d9a154:\n Modules: RM_Call(): give pointer to documentation.\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\nantirez in commit 0e7ea0aa:\n Modules: RM_Call/Replicate() ability to exclude AOF/replicas.\n 1 file changed, 28 insertions(+), 9 deletions(-)\n\nantirez in commit 3b38164e:\n Modules: RM_Replicate() in thread safe contexts.\n 1 file changed, 26 insertions(+), 4 deletions(-)\n\nantirez in commit ef9fe9b0:\n Modules: implement RM_Replicate() from async callbacks.\n 2 files changed, 33 insertions(+), 2 deletions(-)\n\nantirez in commit 8066d2a1:\n Modules: handle propagation when ctx is freed. Flag modules commands ctx.\n 1 file changed, 23 insertions(+), 19 deletions(-)\n\nantirez in commit d3f4dec4:\n Update PR #6537: use a fresh time outside call().\n 3 files changed, 27 insertions(+), 7 deletions(-)\n\nantirez in commit 33f42665:\n Update PR #6537 patch to for generality.\n 4 files changed, 40 insertions(+), 23 deletions(-)\n\nzhaozhao.zz in commit 68d71d83:\n expires: refactoring judgment about whether a key is expired\n 3 files changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit 62588dbf:\n Modules: fix thread safe context creation crash.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n================================================================================\nRedis 5.0.6     Released Wed Sep 25 12:33:56 CEST 2019\n================================================================================\n\nUpgrade urgency CRITICAL: Only in case of exposed instances to untrusted users.\n\nThis Redis release, 5.0.6, is a bugfix and enhancement release. The most\nimportant bugfix is a corruption related to the HyperLogLog. A malformed\nHyperLogLog string could cause an invalid access to the memory. At a first\nglance the vulnerability appears to be not exploitable but just a DoS. The\nway to trigger the issue is complex, we'll not provide any information about\nhow to do that for the users safety.\n\nOther significant changes in this release:\n\n* New modules APIs merged from Redis unstable to Redis 5.\n* Some memory optimization related to objects creation.\n* Fixes to flushSlaveOutputBuffer() that make sure that SHUTDOWN will\n  transfer pending buffers to replicas.\n\nThis is the full list of commits:\n\nantirez in commit 7a41047a:\n RDB: fix MODULE_AUX loading by continuing to next opcode.\n 1 file changed, 1 insertion(+)\n\nOran Agra in commit 4eb3028b:\n missing per-skiplist overheads in MEMORY USAGE\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nOran Agra in commit 5d09f9bc:\n RM_Log - add support for logging without a context or context without module\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\nantirez in commit 2810de9f:\n Cluster: abort loading nodes data if vars arguments are unbalanced.\n 1 file changed, 1 insertion(+)\n\nantirez in commit f5c63ce0:\n More strict checks and better comments in flushSlaveOutputBuffers().\n 1 file changed, 18 insertions(+), 7 deletions(-)\n\nantirez in commit 7f289c3b:\n Improve comment in flushSlavesOutputBuffers().\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nantirez in commit 7ab62d4b:\n Replication: clarify why repl_put_online_on_ack exists at all.\n 2 files changed, 34 insertions(+), 10 deletions(-)\n\nzhaozhao.zz in commit 495dd0da:\n networking: flushSlavesOutputBuffers bugfix\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\nSalvatore Sanfilippo in commit c1ccf0f1:\n Merge pull request #6366 from oranagra/5.0_rm_reply_cstring\nSalvatore Sanfilippo in commit a50dad73:\n Merge pull request #6365 from oranagra/5.0_module_aux\nOran Agra in commit d6294d05:\n RM_ReplyWithCString was missing registration\n 1 file changed, 1 insertion(+)\n\nOran Agra in commit 8c56fc86:\n Fix to module aux data rdb format for backwards compatibility with old check-rdb\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\nOran Agra in commit 98b1314f:\n Implement module api for aux data in rdb\n 9 files changed, 431 insertions(+), 18 deletions(-)\n\nantirez in commit 08b03e23:\n redis-cli: always report server errors on read errors.\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\nwubostc in commit 239069de:\n Reduce the calling stack\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\nantirez in commit 90bf6313:\n Make EMBSTR case of #6261 more obvious.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nchendianqiang in commit 2f8a0749:\n make memory usage consistent of robj with OBJ_ENCODING_INT\n 1 file changed, 9 insertions(+), 4 deletions(-)\n\nantirez in commit 436ed56d:\n HyperLogLog: fix the fix of a corruption bug.\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\nJohn Sully in commit 680f89fb:\n Fix HLL corruption bug\n 1 file changed, 1 insertion(+)\n\nswilly22 in commit 388efbf8:\n Extend REDISMODULE_CTX_FLAGS to indicate if redis is currently loading from either RDB or AOF\n 2 files changed, 5 insertions(+)\n\nItamar Haber in commit 0ccbdcee:\n Uses addReplyBulkCString\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nItamar Haber in commit 707a59c6:\n Adds RedisModule_ReplyWithCString\n 2 files changed, 13 insertions(+)\n\n================================================================================\nRedis 5.0.5     Released Wed May 15 17:57:41 CEST 2019\n================================================================================\n\nUpgrade urgency CRITICAL: This release fixes an important AOF fysnc bug\n                          and other less critical issues.\n\n\nDear user,\n\nRedis 5.0.5 fixes an important issue with AOF and adds multiple very useful\nmodules APIs. Moreover smaller bugs in other parts of Redis are fixed in\nthis release.\n\nThe AOF bug\n-----------\n\nThe AOF bug happens when the fsync policy is set to \"everysec\", which is the\ndefault: if the write load in the server drops immediately, the commands\nexecuted in the latest second may not be fsync-ed to disk as it should.\nThis may lead to data loss in case the write load drops immediately and\nsuccessively a server crash happens.\n\nOther things in this release\n----------------------------\n\n* Streams: a bug in the iterator could prevent certain items to be returned in\n           range queries under specific conditions.\n* Memleak in bitfieldCommand fixed.\n* Modules API: Preserve client->id for blocked clients.\n* Fix memory leak when rewriting config file in case of write errors.\n* New modules API: RedisModule_GetKeyNameFromIO().\n* Fix non critical bugs in diskless replication.\n* New mdouels API: command filtering. See RedisModule_RegisterCommandFilter();\n* Tests improved to be more deterministic.\n* Fix a Redis Cluster bug, manual failover may abort because of the master\n  sending PINGs to the replicas.\n\nThe following is the full list of commmits.\n\nRegards,\nSalvatore\n\nChristian Zeller in commit 1cac9b4b:\n Typo fixes in CONTRIBUTING\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit f63c5c7b:\n Update CONTRIBUTING with present info.\n 1 file changed, 15 insertions(+), 5 deletions(-)\n\nantirez in commit 668661da:\n Narrow the effects of PR #6029 to the exact state.\n 1 file changed, 17 insertions(+), 5 deletions(-)\n\nchendianqiang in commit 3c2800e3:\n stop ping when client pause\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 7ac7ffd5:\n Test: fix slowlog test false positive.\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit cc101721:\n Make comment in getClientOutputBufferMemoryUsage() describing the present.\n 1 file changed, 1 insertion(+), 8 deletions(-)\n\nWuYunlong in commit 72420b0d:\n Do not active expire keys in the background when the switch is off.\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\nliaotonglang in commit 33a50d24:\n delete sdsTest() from REDIS_TEST\n 1 file changed, 2 deletions(-)\n\nzhaozhao.zz in commit 6a92836f:\n test cases: skiptill -> skip-till\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nOran Agra in commit f179f71e:\n make replication tests more stable on slow machines\n 3 files changed, 34 insertions(+), 4 deletions(-)\n\nYossi Gottlieb in commit 1825a4ec:\n Add runtest-moduleapi with commandfilter coverage.\n 5 files changed, 63 insertions(+), 28 deletions(-)\n\nYossi Gottlieb in commit 9d20fdb4:\n fix: missing initialization.\n 3 files changed, 1 insertion(+)\n\nantirez in commit ded1980e:\n Test: disable module testing for now.\n 1 file changed, 1 deletion(-)\n\nYossi Gottlieb in commit c3df78c2:\n CommandFilter API: REDISMODULE_CMDFILTER_NOSELF.\n 4 files changed, 62 insertions(+), 15 deletions(-)\n\nYossi Gottlieb in commit 8d38ef20:\n CommandFilter API: fix UnregisterCommandFilter.\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\nYossi Gottlieb in commit 9b7009b1:\n CommandFilter API: Add unregister option.\n 4 files changed, 126 insertions(+), 32 deletions(-)\n\nYossi Gottlieb in commit 05802442:\n CommandFilter API: Extend documentation.\n 1 file changed, 43 insertions(+), 5 deletions(-)\n\nYossi Gottlieb in commit d5194daf:\n CommandFilter API: hellofilter and tests.\n 2 files changed, 47 insertions(+), 5 deletions(-)\n\nYossi Gottlieb in commit 8897c154:\n CommandFilter API: Support Lua and RM_call() flows.\n 2 files changed, 18 insertions(+), 7 deletions(-)\n\nYossi Gottlieb in commit 6dd5bad4:\n CommandFilter API: More cleanup.\n 2 files changed, 10 insertions(+), 29 deletions(-)\n\nYossi Gottlieb in commit 83026101:\n Add command filter Module API tests.\n 2 files changed, 28 insertions(+)\n\nYossi Gottlieb in commit dc5edc7b:\n Add command filtering argument handling API.\n 3 files changed, 132 insertions(+), 13 deletions(-)\n\nYossi Gottlieb in commit 5f29e2e2:\n Initial command filter experiment.\n 6 files changed, 161 insertions(+), 2 deletions(-)\n\nOran Agra in commit e1839ab3:\n diskless fork kept streaming RDB to a disconnected slave\n 1 file changed, 10 insertions(+)\n\nOran Agra in commit 3b207b89:\n diskless replication - notify slave when rdb transfer failed\n 1 file changed, 1 insertion(+)\n\nantirez in commit 7e350b09:\n More sensible name for function: restartAOFAfterSYNC().\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\nantirez in commit 91238a60:\n Mostly aesthetic changes to restartAOF().\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\noranagra in commit ee2da67c:\n bugfix to restartAOF, exit will never happen since retry will get negative.\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\nOran Agra in commit 78022492:\n Add log when server dies of SIGTERM during loading\n 1 file changed, 1 insertion(+)\n\nYossi Gottlieb in commit 232dca7f:\n Add RedisModule_GetKeyNameFromIO().\n 8 files changed, 30 insertions(+), 17 deletions(-)\n\nantirez in commit 7f98129a:\n MANIFESTO: simplicity and lock-in.\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\nantirez in commit 71265fe3:\n MANIFESTO v2.\n 1 file changed, 41 insertions(+), 6 deletions(-)\n\nyongman in commit 8115be6e:\n Fix uint64_t hash value in active defrag\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nAngus Pearson in commit 90e7b5a9:\n Enlarge error buffer in redis-check-aof.c to remove compiler warning of output truncation through snprintf format string\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit 43151baf:\n fix memory leak when rewrite config file\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\n唐权 in commit d3c17c9d:\n Update ziplist.c\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nstan011 in commit 296bd097:\n change the comments there may have a mis type\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nYossi Gottlieb in commit e08c9c15:\n Preserve client->id for blocked clients.\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit c6b1252f:\n aof: enhance AOF_FSYNC_EVERYSEC, more details in #5985\n 2 files changed, 32 insertions(+), 3 deletions(-)\n\nDavid Carlier in commit ce54e299:\n build fix\n 1 file changed, 1 insertion(+)\n\nyongman in commit c9274498:\n Fix memleak in bitfieldCommand\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\nJames Rouzier in commit 635d8d83:\n Fix start and end key initialize\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit 7c23e534:\n Merge pull request #6047 from abhaynahar/removed-obsolete-warning-5.0\nabhay in commit 9ea8ec42:\n removed obsolete warning as per - https://github.com/antirez/redis/issues/5291\n 1 file changed, 1 insertion(+), 7 deletions(-)\n\nantirez in commit 1b7407fa:\n Aesthetic change to #5962 to conform to Redis style.\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\nOran Agra in commit 3bbf9747:\n slave corrupts replication stream when module blocked client uses large reply (or POSTPONED_ARRAY)\n 3 files changed, 15 insertions(+), 6 deletions(-)\n\n================================================================================\nRedis 5.0.4     Released Mon Mar 18 17:12:53 CET 2019\n================================================================================\n\nUpgrade urgency HIGH: This release fixes several Redis stability issues.\n\nDear Redis users, this release includes a number of fixes for bugs that may\nresult in Redis crashing in special conditions (not normal usage, but specific\nartificial conditions), fixes to certain Redis behaviors especially around\nRedis streams, and finally a set of new APIs for Redis Modules.\n\nSpecifically:\n\n* Hyperloglog different coding errors leading to potential crashes were fixed.\n* A replication bug leading to a potential crash in case of plain misuse of handshake commands was fixed.\n* XCLAIM command incrementing of number of deliveries was fixed.\n* LFU field management in objects was improved.\n* A potential overflow in the redis-check-aof was fixed.\n* A memory leak in case of API misuse was fixed.\n* ZPOP* behavior when count is 0 is fixed.\n* A few redis-cli --cluster bugs were fixed, plus a few improvements.\n* Many other smaller bugs.\n\nWe suggest to upgrade Redis, especially in case your instance is facing\nuntrusted users (for instance Cloud providers) because several of these\nbugs could result in unwanted crashes.\n\nThis is the list of commits:\n\nantirez in commit 84bdd440:\n HyperLogLog: fix comment in hllCount().\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit ef1833b3:\n HyperLogLog: handle wrong offset in the base case.\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\nantirez in commit 623afd5e:\n HyperLogLog: speedup fuzz test.\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\nantirez in commit 12b5ff10:\n HyperLogLog: enlarge reghisto variable for safety.\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\nantirez in commit 254d897e:\n HyperLogLog: dense/sparse repr parsing fuzz test.\n 1 file changed, 29 insertions(+)\n\nJohn Sully in commit 7f79849c:\n Fix hyperloglog corruption\n 1 file changed, 6 insertions(+)\n\nBrad Solomon in commit 3ef2c831:\n Provide an uninstall target in Makefile\n 1 file changed, 3 insertions(+)\n\nantirez in commit 57aea463:\n redis-check-aof: fix potential overflow.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit ba5145b8:\n Fix objectSetLRUOrLFU() when LFU underflows.\n 1 file changed, 11 insertions(+), 7 deletions(-)\n\nantirez in commit 76c59f0e:\n Fix ZPOP return type when COUNT=0. Related to #5799.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 1c636714:\n Improve comments after merging #5834.\n 2 files changed, 14 insertions(+), 8 deletions(-)\n\nGuy Benoish in commit 6a3fca4c:\n Trim SDS free space of retained module strings\n 4 files changed, 28 insertions(+), 5 deletions(-)\n\nGuy Benoish in commit 9ec144ea:\n Fix mismatching keyspace notification classes\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\nGuy Benoish in commit d04b5211:\n Fix zlexrangespec mem-leak in genericZrangebylexCommand\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\nGuy Benoish in commit 516f1c77:\n Use memtoll() in 'CONFIG SET client-output-buffer-limit'\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nGuy Benoish in commit 8db67a55:\n Increase string2ld's buffer size (and fix HINCRBYFLOAT)\n 2 files changed, 5 insertions(+), 1 deletion(-)\n\nGuy Benoish in commit db3d626b:\n Check server.verbosity in RM_LogRaw\n 1 file changed, 2 insertions(+)\n\nGuy Benoish in commit 71439a07:\n ZPOP should return an empty array if COUNT=0\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\nantirez in commit c8a26834:\n Modules shared API: export new core APIs.\n 2 files changed, 6 insertions(+)\n\nantirez in commit a13ba750:\n Modules shared API: also unregister the module as user.\n 1 file changed, 23 insertions(+)\n\nantirez in commit 500e5117:\n Modules shared API: prevent unloading of used modules.\n 1 file changed, 10 insertions(+), 4 deletions(-)\n\nantirez in commit 7854daa1:\n Modules shared API: unregister APIs function.\n 1 file changed, 25 insertions(+)\n\nantirez in commit d38d82af:\n Modules shared API: initial core functions.\n 2 files changed, 89 insertions(+), 1 deletion(-)\n\nantirez in commit 4d747bb8:\n Revert shared APIs to modify the design.\n 3 files changed, 120 deletions(-)\n\nMeirShpilraien in commit 8824b509:\n added module ability to register api to be used by other modules\n 3 files changed, 120 insertions(+)\n\nzhaozhao.zz in commit 000b055b:\n Streams: checkType before XGROUP CREATE\n 1 file changed, 7 insertions(+), 5 deletions(-)\n\nantirez in commit 9b2a0d54:\n Fix BZPOP arity, backport from fix in cd2743c.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nchendianqiang in commit 134b2582:\n optimize cluster failover\n 1 file changed, 1 insertion(+)\n\nSteve Webster in commit 1293e2a5:\n Only increment delivery count if JUSTID option is omitted\n 2 files changed, 18 insertions(+), 3 deletions(-)\n\nSteve Webster in commit 3cc4f469:\n Increment delivery counter on XCLAIM unless RETRYCOUNT specified\n 2 files changed, 35 insertions(+), 2 deletions(-)\n\nantirez in commit f4edd2b9:\n Merge branch '5.0' of github.com:/antirez/redis into 5.0\nswilly22 in commit cedcc54e:\n document additional flag of RM_GetContextFlags\n 1 file changed, 3 insertions(+)\n\nswilly22 in commit 26e98da2:\n Extend REDISMODULE_CTX_FLAGS to indicate if command was sent by master\n 2 files changed, 6 insertions(+)\n\nSalvatore Sanfilippo in commit 0e910939:\n Merge pull request #5879 from meierfra-ergon/redis-cli-assume-yes\nantirez in commit 67452e91:\n Make comment in #5911 stay inside 80 cols.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nJohn Sully in commit 30f666ef:\n Replicas aren't allowed to run the replicaof command\n 1 file changed, 8 insertions(+)\n\nFrank Meier in commit bc6c1c40:\n extend use of cluster-yes option to other confimation questions\n 1 file changed, 9 insertions(+)\n\nantirez in commit 76419d8d:\n Merge branch '5.0' of github.com:/antirez/redis into 5.0\nOran Agra in commit 72ba6069:\n redis-cli add support for --memkeys, fix --bigkeys for module types\n 1 file changed, 132 insertions(+), 81 deletions(-)\n\nchendianqiang in commit 2ca21753:\n fix replicationid will not change for server.masterhost==NULL in cluster mode when restart slave\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit bd7ddd79:\n Merge pull request #5870 from fengweiyuan/5.0\nvarianfeng in commit d13bc143:\n fix corrupt_rdb.c bug.Let the name of input rdb file name be valid.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nartix in commit 44c5bce0:\n Cluster Manager: fix replica assigment anti-affinity (create)\n 1 file changed, 6 insertions(+)\n\nartix in commit f066e526:\n Cluster Manager: remove unused code elements\n 1 file changed, 8 insertions(+), 13 deletions(-)\n\nZhicheng Wei in commit 23214966:\n fix clusterManagerGetAntiAffinityScore double free otypes\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nantirez in commit 80bccd71:\n Remove debugging printf from replication.tcl test.\n 1 file changed, 1 deletion(-)\n\n================================================================================\nRedis 5.0.3     Released Tue Dec 11 18:17:26 CET 2018\n================================================================================\n\nUpgrade urgency HIGH: Redis 5 is consolidating, upgrading is a good idea.\n                      However there is nothing very critical here, but certain\n                      issues resolved could lead to very rare crashes.\n\nWelcome to Redis 5.0.3, several interesting bug fixes here:\n\n* Redis no longer panics when you send data to a replica-mode connection that\n  is in MONITOR or SYNC mode.\n\n* Fixes to certain sorted set edge cases. You are unlikely to ever notice those\n  issues, but now it is more correct.\n\n* Certain BSD variants now are better supported: build & register logging\n  on crash.\n\n* The networking core now recovers if an IPv6 address is listed in bind but\n  is actually not able to work because there is no such protocol in the\n  system.\n\n* redis-cli cluster mode improved in many ways. Especially the fix subcommand\n  work was enhanced to cover other edge cases that were still not covered\n  after the work done for Redis 5.\n\n* MEMORY USAGE is now more accurate.\n\n* DEBUG DIGEST-VALUE added in case you want to make sure a given set of keys\n  (and not the whole DB) are excatly the same between two instances.\n\n* Fix a potential crash in the networking code related to recent changes\n  to the way the reply is consumed.\n\n* Reject EXEC containing write commands against an instance that changed role\n  from master to replica during our transaction.\n\n* Fix a crash in KEYS and other commands using pattern matching, in an edge\n  case where the pattern contains a zero byte.\n\n* Fix eviction during AOF loading due to maxmemory triggered by commands\n  executed in loading state.\n\nThe following is the list of commmits if you want to check credits or dig\nfurther in the details.\n\ncommit 2c6ee0f9b3d9ca48c6da8bd18796186784216bff\nAuthor: antirez <antirez@gmail.com>\nDate:   Wed Dec 12 11:37:15 2018 +0100\n\n    freeMemoryIfNeeded() small refactoring.\n\n    Related to issue #5686 and PR #5689.\n\ncommit 107e93e75acfd5def0252efb6870751940816395\nAuthor: zhaozhao.zz <zhaozhao.zz@alibaba-inc.com>\nDate:   Wed Dec 12 00:25:24 2018 +0800\n\n    evict: don't care about mem if loading\n\n    When loading data, we call processEventsWhileBlocked\n    to process events and execute commands.\n    But if we are loading AOF it's dangerous, because\n    processCommand would call freeMemoryIfNeeded to evict,\n    and that will break data consistency, see issue #5686.\n\nantirez in commit ee93dc0b:\n Crashing is too much in addReplyErrorLength().\n 1 file changed, 6 deletions(-)\n\nhdmg in commit c55254a5:\n fix comments fault discription\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nlsytj0413 in commit dfd25013:\n fix a typo: craeted -> created\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 392a2566:\n stringmatchlen() fuzz test added.\n 3 files changed, 22 insertions(+)\n\nantirez in commit 7602f695:\n Fix stringmatchlen() read past buffer bug.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit c4f3585e:\n multi: ignore multiState's cmd_flags when loading AOF\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit d037e987:\n Reject EXEC containing write commands against RO replica.\n 2 files changed, 20 insertions(+)\n\nartix in commit e00ab324:\n Cluster Manager: - Multiple owners checking in 'fix'/'check' commands is\n now optional (using --cluster-search-multiple-owners). - Updated help.\n 1 file changed, 14 insertions(+), 5 deletions(-)\n\nartix in commit 94f64de3:\n Cluster Manager: FixOpenSlot now correctly updates in-memory cluster\n configuration. Improved output messages.\n 1 file changed, 17 insertions(+), 5 deletions(-)\n\nartix in commit 752d636f:\n Cluster Manager: 'fix' command now handles open slots with migrating state\n in one node and importing state in multiple nodes.\n 1 file changed, 74 insertions(+), 6 deletions(-)\n\nartix in commit 552091f9:\n Cluster Manager: setting new slot owner is now handled atomically in\n 'fix' command.\n 1 file changed, 72 insertions(+), 31 deletions(-)\n\nartix in commit 2280f4f7:\n Cluster Manager: code cleanup.\n 1 file changed, 41 insertions(+), 87 deletions(-)\n\nartix in commit e084b8cc:\n Cluster Manager: check/fix commands now handle multiple owners even\n if all slots are covered and not open.\n 1 file changed, 129 insertions(+), 6 deletions(-)\n\nzhaozhao.zz in commit fa726e2a:\n remove useless tryObjectEncoding in debug assert\n 1 file changed, 1 deletion(-)\n\nOran Agra in commit 40244b10:\n fix #5580, display fragmentation and rss overhead bytes as signed\n 2 files changed, 6 insertions(+), 6 deletions(-)\n\nzhaozhao.zz in commit beab3151:\n networking: current_client should not be NULL when trim qb_pos\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 07ccb642:\n Remove no longer relevant comment in processCommand().\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\nantirez in commit 60fdaf07:\n DEBUG DIGEST-VALUE implemented.\n 1 file changed, 17 insertions(+), 3 deletions(-)\n\nantirez in commit 48b31b0d:\n DEBUG DIGEST refactoring: extract function to digest a value.\n 1 file changed, 142 insertions(+), 131 deletions(-)\n\nyura in commit ef3ff402:\n redis-cli reshard/rebalance: ability to force replacement on existing keys\n 1 file changed, 6 insertions(+), 5 deletions(-)\n\nThomas Orozco in commit ee223fb8:\n cli: pass auth through REDISCLI_AUTH\n 1 file changed, 14 insertions(+)\n\nyongman in commit 41295e55:\n Fix cluster call reply format readable\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nOran Agra in commit 0ed3970f:\n fix small test suite race conditions\n 3 files changed, 11 insertions(+)\n\nzhaozhao.zz in commit 605dddbb:\n MEMORY command: make USAGE more accurate\n 1 file changed, 7 insertions(+), 6 deletions(-)\n\nyongman in commit 1f43bf29:\n Fix choose a random master node for slot assignment\n 1 file changed, 29 insertions(+), 5 deletions(-)\n\nWeiliang Li in commit 69f0c678:\n fix comment typo in util.c\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nChris Lamb in commit bc53a3ab:\n Clarify the \"Creating Server TCP listening socket\" error.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nChris Lamb in commit fefe5460:\n Don't treat unsupported protocols as fatal errors\n 1 file changed, 4 insertions(+)\n\nDavid Carlier in commit a8862972:\n OpenBSD support.\n 3 files changed, 74 insertions(+), 1 deletion(-)\n\nDavid Carlier in commit 5e86daf9:\n Backtrace/register dump on BSD.\n 3 files changed, 97 insertions(+), 3 deletions(-)\n\nGuy Benoish in commit 7c8cf5ac:\n Don't call sdscmp() with shared.maxstring or shared.minstring\n 2 files changed, 23 insertions(+), 9 deletions(-)\n\nQu Chen in commit 39e9eda3:\n Add unit test for stream XCLAIM command.\n 1 file changed, 48 insertions(+)\n\nantirez in commit 62485232:\n Abort instead of crashing when loading bad stream master key.\n 1 file changed, 3 insertions(+)\n\nMadelyn Olson in commit a5487309:\n Fixed a serverPanic when sending an invalid command to a monitor client\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n================================================================================\nRedis 5.0.2     Released Thu Nov 22 11:22:37 CET 2018\n================================================================================\n\nUpgrade urgency: CRITICAL if you use streams and consumer groups.\n                 HIGH if you use redis-cli with Redis Cluster.\n                 LOW otherwise.\n\nWelcome to Redis 5.0.2. This release fixes two issues with Streams consumer\ngroups, where items could be returned duplicated by XREADGROUP when accessing\nthe history, and another bug where XREADGROUP can report some history even\nif the comsumer pending list is empty. Both problems were addressed and unit\ntests to avoid regressions implemented. Moreover this release fixes some\nissue with redis-cli when in cluster mode. Finally some FreeBSD and DragonFly\nbuild problems are now resolved. The list of the commits is below.\n\nEnjoy,\nSalvatore\n\nDavid Carlier in commit e8b4291a:\n DragonFlyBSD little build fix\n 2 files changed, 6 insertions(+), 1 deletion(-)\n\nyongman in commit 8fcfd374:\n skip slave nodes when sending cluster setslot command\n 1 file changed, 1 insertion(+)\n\nyongman in commit d7089ddd:\n Fix pointer access and memory leak in redis-cli.\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\nantirez in commit 17b4cd83:\n Test: regression test for #5570.\n 1 file changed, 15 insertions(+)\n\nantirez in commit 45123169:\n Stream: fix XREADGROUP history reading of deleted messages.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nDavid Carlier in commit 5ad588f0:\n only FreeBSD change/little warning addressing\n 2 files changed, 7 insertions(+), 4 deletions(-)\n\nDavid Carlier in commit 11801e1a:\n tweak form feedback\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nDavid Carlier in commit c1f13575:\n allow flavors\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nDavid Carlier in commit 275a2d49:\n Fix clang build.\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\nantirez in commit 44ad5141:\n Test: regression test for #5577.\n 1 file changed, 24 insertions(+)\n\nantirez in commit c7951f43:\n Streams: fix XREADGROUP history reading when CG last_id is low.\n 1 file changed, 12 insertions(+), 9 deletions(-)\n\nantirez in commit a69bc5be:\n t_stream.c comment resized to 80 cols.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nantirez in commit 5314099d:\n Redis 5 changelog: don't expect Lua replies to be ordered.\n 1 file changed, 14 insertions(+), 5 deletions(-)\n\n================================================================================\nRedis 5.0.1     Released Wed Nov 07 13:09:30 CET 2018\n================================================================================\n\nUpgrade urgency: URGENT if you use Redis Streams. MODERATE otherwise.\n\nHi all, this is the first patch level release of Redis 5. It contains\nboth fixes and improvements. Here there is a list of the major ones, however\nread the commit messages at the end of the changelog if you want to know\nmore about the smaller things. Let's start with the new features:\n\n* Sentinel now supports authentication! Check the Sentinel official doc\n  for more info.\n\n* Redis-cli cluster \"fix\" is now able to fix a big number of clusters put\n  in a bad condition. Previously many corner cases were not covered.\n\nNow the critical fixes:\n\n1. Fix RESTORE mismatch reply when certain keys already expired.\n2. Fix an XCLAIM non trivial issue: sometimes the command returned a wrong\n   entry or desynchronized the protocol.\n\nAnd now the other fixes:\n\n3. Stack trace generation on the Raspberry PI (and 32bit ARM) fixed.\n4. Don't evict expired keys when the KEYS command is called, in order to\n   avoid a mass deletion event. However expired keys are not displayed\n   by KEYS as usually.\n5. Improvements in the computation of the memory used, when estimating\n   the AOF buffers.\n6. XRANGE COUNT of 0 fixed.\n7. \"key misses\" stats accounting fixed. Many cache misses were not counted.\n8. When in MULTI state, return OOM while accumulating commands and there\n   is no longer memory available.\n9. Fix build on FreeBSD and possibly others.\n10. Fix a crash in Redis modules, thread safe context reply accumulation.\n11. Fix a race condition when producing the RDB file for full SYNC.\n12. Disable protected mode in Sentinel.\n13. More commands now have the HELP subcommand.\n14. Fixed an issue about adaptive server HZ timer.\n15. Fix cluster-replica-no-failover option name.\n\nFinally, this is the list of commits. Enjoy Redis 5.0.1!\n\nantirez in commit c801283f:\n Fix cluster-replica-no-failover option name.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 4c4f50e1:\n MEMORY command: make strcasecmp() conditional like the following.\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\nItamar Haber in commit a7b46e0e:\n Uppercases subcommands in MEMORY HELP\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\nItamar Haber in commit 80e129d9:\n Standardizes `MEMORY HELP` subcommand\n 1 file changed, 13 insertions(+), 14 deletions(-)\n\nvalentino in commit 88805cbb:\n fix short period of server.hz being uninitialized\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nItamar Haber in commit 6b402733:\n Adds HELP to LATENCY\n 1 file changed, 14 insertions(+), 2 deletions(-)\n\nyongman in commit 1c637de9:\n fix malloc in clusterManagerComputeReshardTable\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nartix in commit 90b52fde:\n Cluster Manager: removed unused var.\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\nartix in commit 89cbb5df:\n Cluster Manager: further improvements to \"fix\": - clusterManagerFixOpenSlot: ensure that the   slot is unassigned before ADDSLOTS - clusterManagerFixSlotsCoverage: after cold   migration, the slot configuration   is now updated on all the nodes.\n 1 file changed, 49 insertions(+), 10 deletions(-)\n\nartix in commit 175515c9:\n Cluster Manager: fixed string parsing issue in clusterManagerGetConfigSignature\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nartix in commit 3997dd6e:\n Cluster Manager: better fix subcommand.\n 1 file changed, 78 insertions(+), 20 deletions(-)\n\nartix in commit bd80291c:\n Cluster Manager: fixed typos in comments.\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nartix in commit 4369cbce:\n Cluster Manager: fixed 'DELSLOT' subcommand typo.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 1ed821e2:\n Fix XCLAIM missing entry bug.\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\nmichael-grunder in commit b49bcd01:\n Use typedef'd mstime_t instead of time_t\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 09d1849e:\n Improve streamReplyWithRange() top comment.\n 1 file changed, 9 insertions(+), 5 deletions(-)\n\nantirez in commit bdf6306f:\n Add support for Sentinel authentication.\n 1 file changed, 17 insertions(+), 3 deletions(-)\n\nantirez in commit 50222af5:\n Disable protected mode in Sentinel mode.\n 1 file changed, 1 insertion(+)\n\nantirez in commit 643ee6e3:\n When replica kills a pending RDB save during SYNC, log it.\n 1 file changed, 6 insertions(+)\n\nAndrey Bugaevskiy in commit 8b609c99:\n Move child termination to readSyncBulkPayload\n 1 file changed, 6 insertions(+), 7 deletions(-)\n\nAndrey Bugaevskiy in commit 27102605:\n Prevent RDB autosave from overwriting full resync results\n 1 file changed, 7 insertions(+)\n\nantirez in commit a677923d:\n asyncCloseClientOnOutputBufferLimitReached(): don't free fake clients.\n 1 file changed, 1 insertion(+)\n\nDavid Carlier in commit 427e440a:\n needs it for the global\n 1 file changed, 1 insertion(+)\n\nDavid Carlier in commit 28f9ca4e:\n Fix non Linux build.\n 3 files changed, 20 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit 4bf9efe2:\n MULTI: OOM err if cannot free enough memory in MULTI/EXEC context\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\nantirez in commit 4fbd7a39:\n Add command fingerprint comment for XSETID.\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nItamar Haber in commit 2480db53:\n Plugs a potential underflow\n 1 file changed, 1 insertion(+)\n\nItamar Haber in commit e5e4d2ef:\n Corrects inline documentation of syntax\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit 713800d2:\n if we read a expired key, misses++\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\nantirez in commit e79ee263:\n Fix XRANGE COUNT option for value of 0.\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\nantirez in commit 505cc70f:\n Fix typo in streamReplyWithRange() top comment.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nDamien Tournoud in commit 3c36561d:\n Overhead is the allocated size of the AOF buffer, not its length\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 3761582f:\n Simplify part of the #5470 patch.\n 1 file changed, 11 insertions(+), 12 deletions(-)\n\nzhaozhao.zz in commit edc47a3a:\n do not delete expired keys in KEYS command\n 1 file changed, 34 insertions(+), 27 deletions(-)\n\nantirez in commit 9872af6d:\n Use guide comments to make changes in #5462 more obvious.\n 1 file changed, 6 insertions(+)\n\nyoujiali1995 in commit 3f399c3b:\n migrate: fix mismatch of RESTORE reply when some keys have expired.\n 1 file changed, 8 insertions(+), 6 deletions(-)\n\nhujie in commit eaaff621:\n fix typo in config.c\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nhujiecs in commit 43ebb7ee:\n several typos fixed, optimize MSETNX to avoid unnecessary loop\n 4 files changed, 4 insertions(+), 4 deletions(-)\n\nantirez in commit de8fdaac:\n Remove useless complexity from MSET implementation.\n 1 file changed, 5 insertions(+), 7 deletions(-)\n\nantirez in commit dc8f1112:\n Fix again stack generation on the Raspberry Pi.\n 1 file changed, 4 insertions(+)\n\nantirez in commit 83a6e81d:\n Get rid of the word slave in the release note of Redis 5.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\n================================================================================\nRedis 5.0.0     Released Wed Oct 17 13:28:26 CEST 2018\n================================================================================\n\nUpgrade urgency CRITICAL: Several fixes to streams AOF and replication.\n\nHi all and welcome to the first stable release of Redis 5! \\o/\n\nTo start a quick recap of what's new in Redis 5:\n\n1. The new Stream data type. https://redis.io/topics/streams-intro\n2. New Redis modules APIs: Timers, Cluster and Dictionary APIs.\n3. RDB now store LFU and LRU information.\n4. The cluster manager was ported from Ruby (redis-trib.rb) to C code\n   inside redis-cli. Check `redis-cli --cluster help` for more info.\n5. New sorted set commands: ZPOPMIN/MAX and blocking variants.\n6. Active defragmentation version 2.\n7. Improvemenets in HyperLogLog implementations.\n8. Better memory reporting capabilities.\n9. Many commands with sub-commands now have an HELP subcommand.\n10. Better performances when clients connect and disconnect often.\n11. Many bug fixes and other random improvements.\n12. Jemalloc was upgraded to version 5.1\n13. CLIENT UNBLOCK and CLIENT ID.\n14. The LOLWUT command was added. http://antirez.com/news/123\n15. We no longer use the \"slave\" word if not for API backward compatibility.\n16. Differnet optimizations in the networking layer.\n17. Lua improvements:\n    - Better propagation of Lua scripts to replicas / AOF.\n    - Lua scripts can now timeout and get in -BUSY state in the replica as well.\n18. Dynamic HZ to balance idle CPU usage with responsiveness.\n19. The Redis core was refactored and improved in many ways.\n\nHowever the list above really does not do justice to the changes of Redis 5\nsince the core was improved in many ways during the development of the new\nversion. However certain changes were back ported into Redis 4 once they were\nsensed as safe, because many improvements were hard to distinguish from fixes.\n\nThe most important user facing improvement is without doubts the introduction\nof the new general purpose data type after years: the streams.\n\nNote that we worked to improve and fix streams till a few hours ago, so while\nwe are not aware of critical bugs in this release, surely there is to handle it\nwith some care for the first weeks. Bug reporting will be highly appreciated and\nwe are ready to work immediately to release 5.0.1 once there is enough important\nstuff to justify a new release (probably soon).\n\nPeople not using the streams can have probably a better production-ready\nexperience with Redis 5, also because many internals are shared with Redis 4\nso the jump is not as big as it was between 3.2 and 4 in terms of how things\ninternally work.\n\nWell, many thanks to the Redis community and the developers that made\nthis release possible, contributing bug reports, patches, new features, working\non the clients, sometimes debugging problems for days. Also thank to everybody\nthat adopted Redis for their use cases making things work for users worldwide.\n\nThe list of commits in this release follows.\n\nCheers,\nSalvatore\n\nantirez in commit bcc0916d:\n Fix conditional in XGROUP.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 1b2f23f3:\n Update help.h for redis-cli.\n 1 file changed, 57 insertions(+), 7 deletions(-)\n\nantirez in commit de0ae56c:\n Tests for XGROUP CREATE MKSTREAM.\n 1 file changed, 11 insertions(+)\n\nantirez in commit 56c3dfa1:\n Fix XGROUP CREATE MKSTREAM handling of .\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\nantirez in commit 2687f228:\n Process MKSTREAM option of XGROUP CREATE at a later time.\n 1 file changed, 28 insertions(+), 17 deletions(-)\n\nzhaozhao.zz in commit cfbaf8f1:\n Scripting & Streams: some commands need right flags\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\nantirez in commit 4e4099b9:\n XGROUP CREATE: MKSTREAM option for automatic stream creation.\n 1 file changed, 29 insertions(+), 5 deletions(-)\n\nzhaozhao.zz in commit 6dd4d864:\n Streams: Tests modified XSTREAM -> XSETID\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nzhaozhao.zz in commit 3aff0e8c:\n Streams: rewrite empty streams with certain lastid\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 880b563e:\n Tests modified to use XADD MAXLEN 0 + XSETID.\n 1 file changed, 12 insertions(+), 26 deletions(-)\n\nantirez in commit 83c87835:\n Streams: rewrite empty streams with XADD MAXLEN 0. Use XSETID.\n 1 file changed, 18 insertions(+), 12 deletions(-)\n\nantirez in commit fd22e3ac:\n XSETID: accept IDs based on last entry.\n 1 file changed, 18 insertions(+), 5 deletions(-)\n\nantirez in commit dfab3cba:\n Streams: XSTREAM SETID -> XSETID.\n 3 files changed, 17 insertions(+), 67 deletions(-)\n\nzhaozhao.zz in commit a3fb28ed:\n Streams: rewrite id in XSTREAM CREATE *\n 1 file changed, 4 insertions(+)\n\nzhaozhao.zz in commit f4b4db13:\n Streams: add tests for aof rewrite\n 1 file changed, 23 insertions(+)\n\nzhaozhao.zz in commit d22f1ef0:\n Stream & AOF: rewrite stream in correct way\n 1 file changed, 32 insertions(+), 16 deletions(-)\n\nzhaozhao.zz in commit 6455274d:\n Streams: add tests for XSTREAM command\n 1 file changed, 39 insertions(+)\n\nzhaozhao.zz in commit 0edbe953:\n Streams: add a new command XTREAM\n 3 files changed, 67 insertions(+)\n\nHamid Alaei in commit 9714bba2:\n fix timer context selected database\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit eb53f15a:\n Make comment about nack->consumer test for minidle more obvious.\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\nantirez in commit a77f836e:\n Streams: use propagate_last_id itself as streamPropagateGroupID trigger.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 0f0610eb:\n Streams: better naming: lastid_updated -> propagate_last_id.\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\nzhaozhao.zz in commit a745e423:\n Streams: panic if streamID invalid after check, should not be possible.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit 9974be13:\n Streams: propagate lastid in XCLAIM when it has effect\n 1 file changed, 13 insertions(+), 6 deletions(-)\n\nzhaozhao.zz in commit 69a628d0:\n Streams: XCLAIM ignore minidle if NACK is created by FORCE\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\nzhaozhao.zz in commit a04b43c7:\n Streams: bugfix XCLAIM should propagate group name not consumer name\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSergey Chupov in commit 8977a90c:\n fixed typos in readme\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 3a745674:\n redis.conf typo fixed: ingore -> ignore.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 22770d76:\n Rax: radix tree updated to latest version from antirez/rax.\n 2 files changed, 233 insertions(+), 68 deletions(-)\n\nantirez in commit fbac534f:\n Test: avoid time related false positive in RESTORE test.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 49872337:\n LOLWUT: capitalize Nees.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 80c471f5:\n Test: cgroup propagation test also for NOACK variant.\n 1 file changed, 39 insertions(+), 29 deletions(-)\n\nantirez in commit 8defa5da:\n Test: consumer group last ID slave propagation test.\n 1 file changed, 39 insertions(+)\n\nzhaozhao.zz in commit e1e3eaca:\n Avoid recreate write handler for protected client.\n 1 file changed, 4 insertions(+)\n\nantirez in commit b501fd5d:\n Fix propagation of consumer groups last ID.\n 3 files changed, 56 insertions(+), 9 deletions(-)\n\n\n================================================================================\nRedis 5.0-rc6     Released Wed Oct 10 11:03:54 CEST 2018\n================================================================================\n\nUpgrade urgency HIGH: Many bugs fixed especially in the context of streams.\n\nThis is probably the last release candidate of Redis 5. The Redis 5 GA version\nwill be released 17th of October. The main highlights of this release are:\n\n* Critical AOF bug, as old as AOF itself: if an open MULTI/EXEC block is at\n  the end of the AOF file, Redis would still read the half-transaction when\n  reloading back the AOF.\n* The slave name was removed from logs and documentation, now replica is used\n  instead.\n* LOLWUT command added.\n* New modules APIs: Disable Redis Cluster redirection.\n* New modules APIs: Sorted dictionaries data type.\n* Modules APIs fixes: timer / cluster messages callback now can call RM_Call().\n* Fix for #5024 - commandstats for multi-exec were logged as EXEC.\n* A number of optimizations and fixes for the stream data type.\n* Many other stability improvements.\n\nThis is the list of comments and contributors:\n\nantirez in commit 9a6fa7d0:\n changelog.tcl: get optional argument for number of commits.\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\nantirez in commit 101e419f:\n Free protected clients asynchronously.\n 1 file changed, 7 insertions(+)\n\nantirez in commit 726debb8:\n Actually use the protectClient() API where needed.\n 2 files changed, 8 insertions(+), 9 deletions(-)\n\nantirez in commit 0b87f78a:\n Introduce protectClient() + some refactoring.\n 2 files changed, 60 insertions(+), 18 deletions(-)\n\nzhaozhao.zz in commit 6aa8ac70:\n debug: avoid free client unexpectedly when reload & loadaof\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\nantirez in commit 48040b02:\n aof.c: improve indentation and change warning message.\n 1 file changed, 11 insertions(+), 4 deletions(-)\n\nzhaozhao.zz in commit 7cc20569:\n AOF: discard if we lost EXEC when loading aof\n 2 files changed, 14 insertions(+), 3 deletions(-)\n\nantirez in commit 2007d30c:\n Refactoring of XADD / XTRIM MAXLEN rewriting.\n 1 file changed, 15 insertions(+), 22 deletions(-)\n\nzhaozhao.zz in commit 6a298110:\n Streams: add test cases for XADD/XTRIM maxlen\n 1 file changed, 46 insertions(+)\n\nzhaozhao.zz in commit 041161b7:\n Streams: propagate specified MAXLEN instead of approximated\n 1 file changed, 35 insertions(+), 6 deletions(-)\n\nzhaozhao.zz in commit f04d799b:\n Streams: reset approx_maxlen in every maxlen loop\n 1 file changed, 2 insertions(+)\n\nzhaozhao.zz in commit affd9365:\n Streams: XTRIM  will return an error if MAXLEN with a count < 0\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit 4c405ad0:\n Streams: propagate original MAXLEN argument in XADD context\n 1 file changed, 3 insertions(+), 12 deletions(-)\n\nantirez in commit 5c6d4b4a:\n Fix typo in replicationCron() comment.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit a67a8dbf:\n Fix typo in design comment of bio.c.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit c4ab5a05:\n xclaimCommand(): fix comment typos.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit dc0b628a:\n streamAppendItem(): Update the radix tree pointer only if changed.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nantirez in commit 4566fbc7:\n Listpack: optionally force reallocation on inserts.\n 1 file changed, 20 insertions(+)\n\nantirez in commit 5eca170c:\n Fix printf type mismatch in genRedisInfoString().\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 260b53a2:\n streamIteratorRemoveEntry(): set back lp only if pointer changed.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit 5d12f9d9:\n Streams: update listpack with new pointer in XDEL\n 1 file changed, 3 insertions(+)\n\nzhaozhao.zz in commit 6b7ad838:\n bugfix: replace lastcmd with cmd when rewrite BRPOPLPUSH as RPOPLPUSH\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nOran Agra in commit 3454a043:\n script cache memory in INFO and MEMORY includes both script code and overheads\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\nOran Agra in commit d6aeca86:\n fix #5024 - commandstats for multi-exec were logged as EXEC.\n 2 files changed, 63 insertions(+), 2 deletions(-)\n\nantirez in commit a996b2a2:\n Fix XINFO comment for consistency.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nBruce Merry in commit 1a8447b6:\n Fix invalid use of sdsZmallocSize on an embedded string\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nBruce Merry in commit 8dde46ad:\n Fix incorrect memory usage accounting in zrealloc\n 3 files changed, 24 insertions(+), 2 deletions(-)\n\nHamid Alaei in commit b362a1b7:\n fix dict get on not found\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 55e9df8a:\n Try to avoid issues with GCC pragmas and older compilers.\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\nantirez in commit b0d22702:\n Modules: hellodict example WIP #3: KEYRANGE.\n 1 file changed, 40 insertions(+)\n\nantirez in commit af2f6682:\n Modules: Modules: dictionary API WIP #13: Compare API exported.\n 2 files changed, 6 insertions(+)\n\nantirez in commit f9a3e6ef:\n Modules: Modules: dictionary API WIP #12: DictCompare API.\n 1 file changed, 8 insertions(+)\n\nantirez in commit 01e0341a:\n Modules: Modules: dictionary API WIP #11: DictCompareC API.\n 1 file changed, 18 insertions(+)\n\nantirez in commit f9b3ce9a:\n Modules: hellodict example WIP #1: GET command.\n 1 file changed, 18 insertions(+)\n\nantirez in commit 36e66d86:\n Modules: hellodict example WIP #1: SET command.\n 1 file changed, 74 insertions(+)\n\nantirez in commit e33fdbe8:\n Modules: remove useless defines in hellotimer.c\n 2 files changed, 6 insertions(+), 4 deletions(-)\n\nantirez in commit 1c8b2248:\n Modules: fix top comment of hellotimer.c\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nGuy Korland in commit 7ded552d:\n add missing argument to function doc\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nPavel Skuratovich in commit f92b3273:\n Fix typo in comment\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 57b6c343:\n Modules: dictionary API WIP #10: export API to modules.\n 2 files changed, 60 insertions(+)\n\nantirez in commit 3f82e59c:\n Modules: dictionary API WIP #9: iterator returning string object.\n 1 file changed, 23 insertions(+), 6 deletions(-)\n\nantirez in commit 6a73aca3:\n Modules: dictionary API WIP #8: Iterator next/prev.\n 1 file changed, 42 insertions(+)\n\nantirez in commit ef8413db:\n Modules: dictionary API WIP #7: don't store the context.\n 1 file changed, 7 insertions(+), 8 deletions(-)\n\nantirez in commit 05579e38:\n Modules: dictionary API WIP #6: implement automatic memory management.\n 1 file changed, 21 insertions(+), 7 deletions(-)\n\nantirez in commit 11c53f8c:\n Modules: dictionary API work in progress #5: rename API for consistency.\n 1 file changed, 25 insertions(+), 25 deletions(-)\n\nantirez in commit 0bd7091b:\n Modules: change RedisModuleString API to allow NULL context.\n 1 file changed, 33 insertions(+), 12 deletions(-)\n\nantirez in commit 5fc16f17:\n Modules: dictionary API work in progress #4: reseek API.\n 1 file changed, 25 insertions(+), 6 deletions(-)\n\nantirez in commit 45b7f779:\n Modules: dictionary API work in progress #3: Iterator creation.\n 1 file changed, 41 insertions(+), 1 deletion(-)\n\nantirez in commit 8576b0ae:\n Modules: dictionary API work in progress #2: Del API.\n 1 file changed, 17 insertions(+), 2 deletions(-)\n\nantirez in commit 4b0fa7a7:\n Modules: dictionary API work in progress #1.\n 2 files changed, 95 insertions(+), 1 deletion(-)\n\nantirez in commit 28210760:\n Module cluster flags: use RM_SetClusterFlags() in the example.\n 2 files changed, 11 insertions(+)\n\nantirez in commit 18c5ab93:\n Module cluster flags: add RM_SetClusterFlags() API.\n 3 files changed, 33 insertions(+)\n\nantirez in commit 4ce6bff2:\n Module cluster flags: add hooks for NO_FAILOVER flag.\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\nantirez in commit 2ba52889:\n Module cluster flags: add hooks for NO_REDIRECTION flag.\n 3 files changed, 14 insertions(+), 4 deletions(-)\n\nantirez in commit 6a39ece6:\n Module cluster flags: initial vars / defines added.\n 5 files changed, 20 insertions(+)\n\nantirez in commit 0ff35370:\n Modules: rename the reused static client to something more general.\n 1 file changed, 10 insertions(+), 8 deletions(-)\n\nantirez in commit 2d11ee95:\n Modules: associate a fake client to timer context callback.\n 1 file changed, 2 insertions(+)\n\nantirez in commit 851b2ed3:\n Modules: associate a fake client to cluster message context callback.\n 1 file changed, 2 insertions(+)\n\nartix in commit 148e4911:\n Cluster Manager: clusterManagerFixOpenSlot now counts node's keys in slot if node is neither migrating nor importing.\n 1 file changed, 20 insertions(+), 1 deletion(-)\n\nGuy Korland in commit 8afca145:\n No need to return \"OK\"\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nGuy Korland in commit 9a278db2:\n typo fix\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 26479036:\n Revert \"fix repeat argument issue and reduce unnessary loop times for redis-cli.\"\n 1 file changed, 7 insertions(+), 12 deletions(-)\n\nGuy Korland in commit 27b7fb5a:\n Fix few typos\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\nGuy Korland in commit 233aa2d3:\n RedisModule_HashSet call must end with NULL\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit a8494072:\n Sentinel: document how to undo a renamed command.\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\nantirez in commit 6c8a8f2e:\n LOLWUT: split the command from version-specific implementations.\n 3 files changed, 297 insertions(+), 241 deletions(-)\n\nantirez in commit 5c758406:\n Slave removal: add a few forgotten aliases for CONFIG SET.\n 1 file changed, 10 insertions(+)\n\nantirez in commit 2da823c4:\n LOLWUT: add Redis version in the output.\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit bfcba420:\n LOLWUT: Ness -> Nees.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit efed898a:\n LOLWUT: Limit maximum CPU effort.\n 1 file changed, 5 insertions(+)\n\nantirez in commit eb0fbd71:\n LOLWUT: change padding conditional to a more direct one.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSlobodan Mišković in commit ed08feb7:\n Fix spelling descrive -> describe\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 2ffb4413:\n LOLWUT: fix crash when col < 2.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 55dae693:\n LOLWUT: fix structure typo in comment.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 9b3098b9:\n LOLWUT: Fix license copyright year.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 263dbadc:\n LOLWUT: increase the translation factor.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit a622f6c0:\n LOLWUT: change default size to fit a normal terminal better.\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\nantirez in commit 38b0d25a:\n LOLWUT: wrap it into a proper command.\n 4 files changed, 40 insertions(+), 15 deletions(-)\n\nantirez in commit 34ebd898:\n LOLWUT: draw Schotter by Georg Nees.\n 1 file changed, 47 insertions(+), 3 deletions(-)\n\nantirez in commit 46286e64:\n LOLWUT: draw rotated squares using trivial trigonometry.\n 1 file changed, 44 insertions(+)\n\nantirez in commit 2d4143fd:\n LOLWUT: draw lines using Bresenham algorithm.\n 1 file changed, 26 insertions(+), 2 deletions(-)\n\nantirez in commit 3546d9ce:\n LOLWUT: Rendering of the virtual canvas to a string.\n 1 file changed, 78 insertions(+), 7 deletions(-)\n\nantirez in commit b404a6ce:\n LOLWUT: show the output verbatim in redis-cli.\n 1 file changed, 1 insertion(+)\n\nantirez in commit e30ba94f:\n LOLWUT: canvas structure and BSD license on top.\n 1 file changed, 46 insertions(+)\n\nantirez in commit 9c771145:\n LOLWUT: Emit Braille unicode according to pixel pattern.\n 1 file changed, 23 insertions(+)\n\nJakub Vrana in commit 4a1d6c7d:\n Slave removal: capitalize Replica\n 2 files changed, 5 insertions(+), 5 deletions(-)\n\nantirez in commit 72e0368a:\n Slave removal: remove slave from integration tests descriptions.\n 8 files changed, 36 insertions(+), 36 deletions(-)\n\nantirez in commit c7841c2b:\n Slave removal: remove slave from top-level tests descriptions.\n 3 files changed, 12 insertions(+), 12 deletions(-)\n\nantirez in commit 1b9b19ba:\n Slave removal: remove slave from object.c.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 7da266e6:\n Slave removal: remove slave from the README.\n 1 file changed, 7 insertions(+), 7 deletions(-)\n\nantirez in commit 93d803c9:\n Slave removal: server.c logs fixed.\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\nantirez in commit 89434032:\n Slave removal: remove slave from sentinel.conf when possible.\n 1 file changed, 18 insertions(+), 18 deletions(-)\n\nantirez in commit 7673d88d:\n Slave removal: replace very few things in Sentinel.\n 1 file changed, 12 insertions(+), 8 deletions(-)\n\nantirez in commit f1de29b3:\n Slave removal: scripting.c logs and other stuff fixed.\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\nantirez in commit 53fe558e:\n Slave removal: replication.c logs fixed.\n 1 file changed, 35 insertions(+), 35 deletions(-)\n\nantirez in commit c92b02dd:\n Slave removal: networking.c logs fixed.\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\nantirez in commit be76ed0c:\n Slave removal: blocked.c logs fixed.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 3fd73151:\n Slave removal: Make obvious in redis.conf what a replica is.\n 1 file changed, 5 insertions(+)\n\nantirez in commit a22168e4:\n Slave removal: slave mode -> replica mode text in redis-cli.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 0e222fbe:\n Slave removal: fix typo of replicaof.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 34a5615e:\n Slave removal: slave -> replica in redis.conf and output buffer option.\n 3 files changed, 132 insertions(+), 129 deletions(-)\n\nantirez in commit 1d2fcf6f:\n Slave removal: Convert cluster.c log messages and command names.\n 1 file changed, 12 insertions(+), 11 deletions(-)\n\nantirez in commit 2546158d:\n Slave removal: config.c converted + config rewriting hacks.\n 1 file changed, 117 insertions(+), 38 deletions(-)\n\nantirez in commit c0952c0d:\n Slave removal: redis-cli --slave -> --replica.\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit 1f37f1dd:\n Slave removal: SLAVEOF -> REPLICAOF. SLAVEOF is now an alias.\n 3 files changed, 4 insertions(+), 3 deletions(-)\n\nAmin Mesbah in commit 7928f578:\n Use geohash limit defines in constraint check\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nJeffrey Lovitz in commit bb2bed78:\n CLI Help text loop verifies arg count\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nyoujiali1995 in commit 246980d0:\n sentinel: fix randomized sentinelTimer.\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\nyoujiali1995 in commit fa7de8c4:\n bio: fix bioWaitStepOfType.\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nWeiliang Li in commit 7642f9d5:\n fix usage typo in redis-cli\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n================================================================================\nRedis 5.0 RC5     Released Thu Sep 06 12:54:29 CEST 2018\n================================================================================\n\nUpgrade urgency HIGH: Several imporant bugs fixed.\n\nHi all,\n\nThis is the release candidate number five, and has a lot of bug fixes inside,\ntogether with a few big changes to the Redis behavior from the point of view\nof replication of scripts and handling of the maxmemory directive in slaves.\nMake sure to read the whole list!\n\n* BREAKING BEHAVIOR: Slaves now ignore maxmemory by default.\n* BREAKING BEHAVIOR: Now scripts are always replicated for their effects, and\n                     never sending the script itself to slaves/AOF.\n* Improvement: Big pipelining performances improved significantly.\n* Fix: Rewrite BRPOPLPUSH as RPOPLPUSH to propagate.\n* Fix: False positives in tests.\n* Fix: Certain command flags were modified because not correct.\n* Fix: Fix blocking XREAD for streams that are empty.\n* Improvement: Allow scripts to timeout on slaves as well.\n* Fix: Different corner cases due to CLIENT PAUSE are now fixed.\n* Improvement: Optimize parsing large bulk greater than 32k.\n* Fix: Propagate read-only scripts as SCRIPT LOAD, not as EVAL.\n\nThe following is the list of commits, so that you can read the details and\ncheck the credits of the commits.\n\nantirez in commit 1d1bf7f0:\n Document that effects replication is Redis 5 default.\n 1 file changed, 8 insertions(+)\n\nantirez in commit cfd969c7:\n Fix scripting tests now that we default to commands repl.\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\nantirez in commit 3e1fb5ff:\n Use commands (effects) replication by default in scripts.\n 3 files changed, 8 insertions(+), 1 deletion(-)\n\nantirez in commit c6c71abe:\n Safer script stop condition on OOM.\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\nantirez in commit dfbce91a:\n Propagate read-only scripts as SCRIPT LOAD.\n 1 file changed, 16 insertions(+), 3 deletions(-)\n\nantirez in commit 1705e42e:\n Don't perform eviction when re-entering the event loop.\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\nantirez in commit a0dd6f82:\n Clarify why remaining may be zero in readQueryFromClient().\n 1 file changed, 2 insertions(+)\n\nzhaozhao.zz in commit 2eed31a5:\n networking: fix unexpected negative or zero readlen\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 37fb606c:\n Merge branch '5.0' of github.com:/antirez/redis into 5.0\nzhaozhao.zz in commit 1898e6ce:\n networking: optimize parsing large bulk greater than 32k\n 1 file changed, 13 insertions(+), 10 deletions(-)\n\nantirez in commit 82fc63d1:\n Unblocked clients API refactoring. See #4418.\n 4 files changed, 33 insertions(+), 15 deletions(-)\n\nzhaozhao.zz in commit 839bb52c:\n if master is already unblocked, do not unblock it twice\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit 2e1cd82d:\n fix multiple unblock for clientsArePaused()\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nantirez in commit 17233080:\n Make pending buffer processing safe for CLIENT_MASTER client.\n 3 files changed, 22 insertions(+), 13 deletions(-)\n\nantirez in commit 42bce87a:\n Test: processing of master stream in slave -BUSY state.\n 1 file changed, 44 insertions(+)\n\nantirez in commit 8bf42f60:\n After slave Lua script leaves busy state, re-process the master buffer.\n 2 files changed, 5 insertions(+), 2 deletions(-)\n\nantirez in commit c2b104c7:\n While the slave is busy, just accumulate master input.\n 2 files changed, 6 insertions(+), 1 deletion(-)\n\nantirez in commit 7b75f4ae:\n Allow scripts to timeout even if from the master instance.\n 1 file changed, 6 insertions(+), 11 deletions(-)\n\nantirez in commit adc4e031:\n Allow scripts to timeout on slaves as well.\n 2 files changed, 10 insertions(+), 3 deletions(-)\n\ndejun.xdj in commit 20ec1f0c:\n Revise the comments of latency command.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nChris Lamb in commit 8e5423eb:\n Correct \"did not received\" -> \"did not receive\" typos/grammar.\n 6 files changed, 10 insertions(+), 10 deletions(-)\n\nzhaozhao.zz in commit 395063d7:\n remove duplicate bind in sentinel.conf\n 1 file changed, 10 deletions(-)\n\nSalvatore Sanfilippo in commit b221ca41:\n Merge pull request #5300 from SaschaRoland/xread-block-5299\nSascha Roland in commit eea0d3c5:\n #5299 Fix blocking XREAD for streams that ran dry\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 4cb9ee11:\n Add maxmemory slave behavior change in the change log.\n 1 file changed, 8 insertions(+)\n\nzhaozhao.zz in commit 5ad888ba:\n Supplement to PR #4835, just take info/memory/command as random commands\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nzhaozhao.zz in commit d928487f:\n some commands' flags should be set correctly, issue #4834\n 1 file changed, 14 insertions(+), 14 deletions(-)\n\nOran Agra in commit af675f0a:\n Fix unstable tests on slow machines.\n 3 files changed, 23 insertions(+), 17 deletions(-)\n\nantirez in commit f2cd16be:\n Document slave-ignore-maxmemory in redis.conf.\n 1 file changed, 20 insertions(+)\n\nantirez in commit 02d729b4:\n Make slave-ignore-maxmemory configurable.\n 1 file changed, 9 insertions(+)\n\nantirez in commit 447da44d:\n Introduce repl_slave_ignore_maxmemory flag internally.\n 3 files changed, 7 insertions(+)\n\nantirez in commit 868b2925:\n Better variable meaning in processCommand().\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 319f2ee6:\n Re-apply rebased #2358.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit 22c166da:\n block: format code\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nzhaozhao.zz in commit c03c5913:\n block: rewrite BRPOPLPUSH as RPOPLPUSH to propagate\n 3 files changed, 5 insertions(+), 1 deletion(-)\n\nzhaozhao.zz in commit fcd5ef16:\n networking: make setProtocolError simple and clear\n 1 file changed, 11 insertions(+), 13 deletions(-)\n\nzhaozhao.zz in commit 656e4b2f:\n networking: just move qb_pos instead of sdsrange in processInlineBuffer\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\nzhaozhao.zz in commit 2c7972ce:\n networking: just return C_OK if multibulk processing saw a <= 0 length.\n 1 file changed, 2 insertions(+), 5 deletions(-)\n\nzhaozhao.zz in commit 1203a04f:\n adjust qbuf to 26 in test case for client list\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit aff86fa1:\n pipeline: do not sdsrange querybuf unless all commands processed\n 2 files changed, 48 insertions(+), 40 deletions(-)\n\nChris Lamb in commit 45a6c5be:\n Use SOURCE_DATE_EPOCH over unreproducible uname + date calls.\n 1 file changed, 3 insertions(+)\n\nChris Lamb in commit 186df148:\n Make some defaults explicit in the sentinel.conf for package maintainers\n 1 file changed, 25 insertions(+)\n\ndejun.xdj in commit b59f04a0:\n Streams: ID of xclaim command starts from the sixth argument.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nshenlongxing in commit a3f2437b:\n Fix stream command paras\n 2 files changed, 7 insertions(+), 7 deletions(-)\n\nantirez in commit df911235:\n Fix AOF comment to report the current behavior.\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\n\n\n================================================================================\nRedis 5.0 RC4     Released Fri Aug 03 13:51:02 CEST 2018\n================================================================================\n\nUpgrade urgency\n\n    HIGH: Many non critical but important issues fixed.\n    CRITICAL for Stream users: Many important bugs fixed.\n\nHi all, welcome to Redis 5.0 RC4.\n\nThis release is a huge step forward in Redis 5 maturity and fixes a number\nof issues. It also provides interesting improvements. Here I'll summarize\nthe biggest one, but laster you can find the full list of commits:\n\nFixes:\n\n* A number of fixes related to Streams: stability and correctnes.\n* Fix dbRandomKey() potential infinite loop.\n* Improve eviction LFU/LRU when keys are created by INCR commands family.\n* Active defragmentation is now working on Redis 5.\n* Fix corner case in Redis CLuster / Sentinel failover, by resetting the\n  disconnection time with master in a more appropriate place.\n* Use a private version of localtime() to avoid potential deadlocks.\n* Different redis-cli non critical fixes.\n* Fix rare replication stream corruption with disk-based replication.\n\nImprovements:\n\n* Sentinel: add an option to deny online script reconfiguration.\n* Improved RESTORE command.\n* Sentinel command renaming: allows to use Sentinel with Redis instances\n  that have non standard command names.\n* CLIENT ID and CLIENT UNBLOCK.\n* CLIENT LIST now supports a TYPE option.\n* redis-cli --cluster now supports authentication.\n* redis-trib is now deprecated (use redis-cli --cluster).\n* Better slaves output buffers efficiency.\n* Faster INFO when there are many clients connected.\n* Dynamic HZ feature.\n* Improvements in what the MEMORY command is able to report.\n* Add year in log. (WARNING: may be incompatible with log scraping tools)\n* Lazy freeing now works even when values are overwritten (for instance SET).\n* Faster ZADD when elements scores are updated.\n* Improvements to the test suite, including many new options.\n\nantirez in commit a4d1201e:\n Test suite: add --loop option.\n 1 file changed, 12 insertions(+), 5 deletions(-)\n\nantirez in commit 273d8191:\n Test suite: new --stop option.\n 1 file changed, 13 insertions(+), 4 deletions(-)\n\nantirez in commit fbbcc6a6:\n Streams IDs parsing refactoring.\n 1 file changed, 32 insertions(+), 17 deletions(-)\n\nantirez in commit 70c4bcb7:\n Test: new sorted set skiplist order consistency.\n 1 file changed, 26 insertions(+)\n\nantirez in commit 63addc5c:\n Fix zslUpdateScore() edge case.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 724740cc:\n More commenting of zslUpdateScore().\n 1 file changed, 2 insertions(+)\n\nantirez in commit ddc87eef:\n Explain what's the point of zslUpdateScore() in top comment.\n 1 file changed, 5 insertions(+)\n\nantirez in commit 741f29ea:\n Remove old commented zslUpdateScore() from source.\n 1 file changed, 13 deletions(-)\n\nantirez in commit 20116836:\n Optimize zslUpdateScore() as asked in #5179.\n 1 file changed, 44 insertions(+)\n\nantirez in commit 8c297e8b:\n zsetAdd() refactored adding zslUpdateScore().\n 1 file changed, 18 insertions(+), 7 deletions(-)\n\ndejun.xdj in commit bd2f3f6b:\n Streams: rearrange the usage of '-' and '+' IDs in stream commands.\n 1 file changed, 13 insertions(+), 13 deletions(-)\n\ndejun.xdj in commit c0c06b84:\n Streams: add mmid_supp argument in streamParseIDOrReply().\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\nantirez in commit ab237a8e:\n Minor improvements to PR #5187.\n 2 files changed, 13 insertions(+), 6 deletions(-)\n\nOran Agra in commit 1ce3cf7a:\n test suite conveniency improvements\n 3 files changed, 79 insertions(+), 3 deletions(-)\n\nOran Agra in commit 36622899:\n add DEBUG LOG, to to assist test suite debugging\n 1 file changed, 4 insertions(+)\n\nantirez in commit 83d4311a:\n Cluster cron announce IP minor refactoring.\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\nshenlongxing in commit a633f8e1:\n Fix cluster-announce-ip memory leak\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\nantirez in commit 24c45538:\n Tranfer -> transfer typo fixed.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nzhaozhao.zz in commit c609f240:\n refactor dbOverwrite to make lazyfree work\n 4 files changed, 27 insertions(+), 12 deletions(-)\n\nantirez in commit 9e971739:\n Refactoring: replace low-level checks with writeCommandsDeniedByDiskError().\n 2 files changed, 6 insertions(+), 13 deletions(-)\n\nantirez in commit 0e77cef0:\n Fix writeCommandsDeniedByDiskError() inverted return value.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit acfe9d13:\n Better top comment for writeCommandsDeniedByDiskError().\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\nantirez in commit 4e933e00:\n Introduce writeCommandsDeniedByDiskError().\n 2 files changed, 24 insertions(+)\n\nWuYunlong in commit 41607dfd:\n Consider aof write error as well as rdb in lua script.\n 1 file changed, 14 insertions(+), 4 deletions(-)\n\nSalvatore Sanfilippo in commit 1d073a64:\n Merge pull request #5168 from rpv-tomsk/issue-5033\nGuy Korland in commit 2db31fd4:\n Few typo fixes\n 1 file changed, 13 insertions(+), 13 deletions(-)\n\nantirez in commit 64242757:\n Add year in log.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 50be4a1f:\n Document dynamic-hz in the example redis.conf.\n 1 file changed, 16 insertions(+)\n\nantirez in commit 9a76472d:\n Make dynamic hz actually configurable.\n 1 file changed, 9 insertions(+)\n\nantirez in commit a330d06c:\n Control dynamic HZ via server configuration.\n 2 files changed, 13 insertions(+), 6 deletions(-)\n\nantirez in commit d42602ff:\n Dynamic HZ: adapt cron frequency to number of clients.\n 2 files changed, 17 insertions(+), 5 deletions(-)\n\nantirez in commit 7b5f0223:\n Dynamic HZ: separate hz from the configured hz.\n 3 files changed, 15 insertions(+), 9 deletions(-)\n\nantirez in commit 037b00de:\n Remove useless conditional from emptyDb().\n 1 file changed, 1 deletion(-)\n\nantirez in commit 0e97ae79:\n Make emptyDb() change introduced in #4852 simpler to read.\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\nzhaozhao.zz in commit f7740faf:\n optimize flushdb, avoid useless loops\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\nzhaozhao.zz in commit 0c008376:\n Streams: fix xdel memory leak\n 1 file changed, 1 insertion(+)\n\nantirez in commit dc600a25:\n Example the magic +1 in migrateCommand().\n 1 file changed, 4 insertions(+)\n\nantirez in commit d6827ab6:\n Make changes of PR #5154 hopefully simpler.\n 1 file changed, 10 insertions(+), 5 deletions(-)\n\nWuYunlong in commit 89ec1453:\n Do not migrate already expired keys.\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\nPavel Rochnyack in commit cd25ed17:\n INFO CPU: higher precision of reported values\n 1 file changed, 8 insertions(+), 8 deletions(-)\n\nantirez in commit 6bfb4745:\n Streams: refactoring of next entry seek in the iterator.\n 1 file changed, 11 insertions(+), 7 deletions(-)\n\nzhaozhao.zz in commit 4724548e:\n Streams: skip master fileds only when we are going forward in streamIteratorGetID\n 1 file changed, 8 insertions(+), 5 deletions(-)\n\nOran Agra in commit 4b79fdf1:\n fix slave buffer test suite false positives\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit a1e081f7:\n string2ll(): better commenting.\n 1 file changed, 6 insertions(+)\n\ndsomeshwar in commit 8b4fe752:\n removing redundant check\n 1 file changed, 3 deletions(-)\n\nantirez in commit 9e5bf047:\n Restore string2ll() to original version.\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\nOran Agra in commit c2ecdcde:\n fix recursion typo in zmalloc_usable\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 4f742bd6:\n string2ll(): remove duplicated check for special case.\n 1 file changed, 1 insertion(+), 6 deletions(-)\n\nantirez in commit a4efac00:\n string2ll(): test for NULL pointer in all the cases.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 2c07c107:\n Change 42 to 1000 as warning level for cached scripts.\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nItamar Haber in commit 270903d6:\n Adds Lua overheads to MEMORY STATS, smartens the MEMORY DOCTOR\n 3 files changed, 30 insertions(+), 4 deletions(-)\n\nItamar Haber in commit faf3dbfc:\n Adds memory information about the script's cache to INFO\n 3 files changed, 12 insertions(+)\n\nantirez in commit 49841a54:\n Fix merge errors.\n 2 files changed, 7 deletions(-)\n\nantirez in commit 77a7ec72:\n Merge branch 'unstable' into 5.0 branch\nantirez in commit 4ff47a0b:\n Top comment clientsCron().\n 1 file changed, 19 insertions(+), 4 deletions(-)\n\nantirez in commit aba68552:\n Clarify that clientsCronTrackExpansiveClients() indexes may jump ahead.\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\nantirez in commit be88c0b1:\n Rename INFO CLIENT max buffers field names for correctness.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 0cf3794e:\n Fix wrong array index variable in getExpansiveClientsInfo().\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit ea3a20c5:\n Change INFO CLIENTS sections to report pre-computed max/min client buffers.\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\nantirez in commit 8f7e496b:\n Rename var in clientsCronTrackExpansiveClients() for clarity.\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nantirez in commit 8d617596:\n Implement a function to retrieve the expansive clients mem usage.\n 1 file changed, 12 insertions(+)\n\nantirez in commit 85a1b4f8:\n clientsCronTrackExpansiveClients() actual implementation.\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\nantirez in commit d4c5fc57:\n clientsCronTrackExpansiveClients() skeleton and ideas.\n 1 file changed, 23 insertions(+)\n\nantirez in commit 1c95c075:\n Make vars used only by INFO CLIENTS local to the block.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit 16b8d364:\n Merge pull request #4727 from kingpeterpaule/redis-fix-info-cli\nantirez in commit 0aca977c:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit 313b2240:\n In addReplyErrorLength() only panic when replying to slave.\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\nantirez in commit 6183f059:\n Refine comment in addReplyErrorLength() about replying to masters/slaves.\n 1 file changed, 11 insertions(+)\n\nSalvatore Sanfilippo in commit 22e9321c:\n Merge pull request #5138 from oranagra/improve_defrag_test\nOran Agra in commit f89c93c8:\n make active defrag test more stable\n 2 files changed, 6 insertions(+), 5 deletions(-)\n\nSalvatore Sanfilippo in commit 8213f64d:\n Merge pull request #5122 from trevor211/allowWritesWhenAofDisabled\nSalvatore Sanfilippo in commit 46fd9278:\n Merge pull request #4237 from aspirewit/update-comment\nantirez in commit 6201f7b4:\n Streams: better error when $ is given with XREADGROUP.\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit 4bff45c7:\n Merge pull request #5136 from 0xtonyxia/fix-xread-id-parse\nantirez in commit afc7e08a:\n Panic when we are sending an error to our master/slave.\n 1 file changed, 5 insertions(+)\n\nSalvatore Sanfilippo in commit e03358c0:\n Merge pull request #5135 from oranagra/rare_repl_corruption\ndejun.xdj in commit 846cf12a:\n Streams: remove meaningless if condition.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit 6501b6bb:\n Streams: return an error message if using xreadgroup with '$' ID.\n 1 file changed, 5 insertions(+)\n\nOran Agra in commit d5559898:\n fix rare replication stream corruption with disk-based replication\n 3 files changed, 18 insertions(+), 9 deletions(-)\n\nantirez in commit cefe21d2:\n dict.c: remove a few trailing spaces.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit 4fc20992:\n Merge pull request #5128 from kingpeterpaule/remove-one-loop-in-freeMemoryIfNeeded\nSalvatore Sanfilippo in commit 9fbd49bb:\n Merge pull request #5113 from 0xtonyxia/using-compare-func-instead\nSalvatore Sanfilippo in commit cab39676:\n Merge pull request #5127 from oranagra/sds_req_type\nantirez in commit f9c84d6d:\n Hopefully improve commenting of #5126.\n 2 files changed, 22 insertions(+), 10 deletions(-)\n\nSalvatore Sanfilippo in commit e22a1218:\n Merge pull request #5126 from oranagra/slave_buf_memory_2\nSalvatore Sanfilippo in commit 28dd8dd1:\n Merge pull request #5132 from soloestoy/propagate-xdel-correctly\nOran Agra in commit bf680b6f:\n slave buffers were wasteful and incorrectly counted causing eviction\n 10 files changed, 182 insertions(+), 50 deletions(-)\n\nzhaozhao.zz in commit 73306c6f:\n Streams: correctly propagate xdel if needed\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\nantirez in commit 103c5a1a:\n Add a few comments to streamIteratorRemoveEntry().\n 1 file changed, 4 insertions(+)\n\nSalvatore Sanfilippo in commit a317f55d:\n Merge pull request #5131 from soloestoy/optimize-xdel\nantirez in commit 185e0d9c:\n Modify XINFO field from last-id to last-generated-id.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit 4215e74b:\n Merge pull request #5129 from soloestoy/xinfo-show-last-id\nzhaozhao.zz in commit c9324f81:\n Streams: free lp if all elements are deleted\n 1 file changed, 9 insertions(+), 4 deletions(-)\n\npaule in commit b6ce7d5d:\n Update dict.c\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\nzhaozhao.zz in commit b4ba5ac8:\n Streams: show last id for streams and groups\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\npeterpaule in commit 816fc6cb:\n remove one ineffective loop in dictGetSomeKeys.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nOran Agra in commit b05a22e2:\n bugfix in sdsReqType creating 64bit sds headers on 32bit systems\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndejun.xdj in commit 491682a6:\n Streams: using streamCompareID() instead of direct compare in block.c.\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\ndejun.xdj in commit a2177cd2:\n Streams: add streamCompareID() declaration in stream.h.\n 1 file changed, 1 insertion(+)\n\ndejun.xdj in commit 0484dbcf:\n Streams: using streamCompareID() instead of direct compare.\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\nWuYunlong in commit 2d4366c5:\n Accept write commands if persisting is disabled, event if we do have problems persisting on disk previously.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit ab33bcd3:\n Merge pull request #5120 from andrewsensus/leap-year-comment-patch-1\nantirez in commit 2352a519:\n Test: XDEL fuzz testing. Remove and check stage.\n 1 file changed, 15 insertions(+)\n\nantirez in commit 3d7d20b7:\n Test: fix lshuffle by providing the \"K\" combinator.\n 1 file changed, 2 insertions(+)\n\nantirez in commit 967ad364:\n Test: add lshuffle in the Tcl utility functions set.\n 1 file changed, 14 insertions(+)\n\nantirez in commit d6efd5fc:\n Test: XDEL fuzz testing, stream creation.\n 1 file changed, 20 insertions(+)\n\nandrewsensus in commit 8dc08ae2:\n update leap year comment\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 69997153:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit a93f8f09:\n Test: XDEL basic test.\n 1 file changed, 12 insertions(+)\n\nSalvatore Sanfilippo in commit a44a5934:\n Merge pull request #5119 from trevor211/fixSlowlogConfig\nWuYunlong in commit d6ba4fd5:\n Fix config set slowlog-log-slower-than and condition in createLatencyReport\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\nWuYunlong in commit b3660be8:\n Add test in slowlog.tcl\n 1 file changed, 10 insertions(+)\n\nartix in commit d4182a0a:\n Cluster Manager: more checks on --cluster-weight option.\n 1 file changed, 12 insertions(+), 2 deletions(-)\n\nartix in commit d222eda9:\n Redis-trib deprecated: it no longer works and it outputs a warning to the user.\n 1 file changed, 103 insertions(+), 1804 deletions(-)\n\nartix in commit 513eb572:\n Cluster Manager: auth support (-a argument).\n 1 file changed, 41 insertions(+), 19 deletions(-)\n\nSalvatore Sanfilippo in commit f3980bb9:\n Merge pull request #5115 from shenlongxing/patch-1\nShen Longxing in commit c2a85fb3:\n Delete unused role checking.\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\nSalvatore Sanfilippo in commit 4cb5bd4e:\n Merge pull request #4820 from charpty/wip-serverc-simplify\nantirez in commit 8d6b7861:\n Add regression test for #5111.\n 1 file changed, 15 insertions(+)\n\nantirez in commit b6260a02:\n Streams: when re-delivering because of SETID, reset deliveries counter.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit a7c180e5:\n Simplify duplicated NACK #5112 fix.\n 1 file changed, 18 insertions(+), 21 deletions(-)\n\nSalvatore Sanfilippo in commit bf4def0f:\n Merge pull request #5112 from 0xtonyxia/fix-xreadgroup-crash-after-setid\nSalvatore Sanfilippo in commit 16770551:\n Merge pull request #5114 from oranagra/defrag_32\nOran Agra in commit 920158ec:\n Active defrag fixes for 32bit builds (again)\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit f45e7901:\n Merge pull request #4967 from JingchengLi/unstable\ntengfeng in commit 9505dd20:\n fix repeat argument issue and reduce unnessary loop times for redis-cli.\n 1 file changed, 12 insertions(+), 7 deletions(-)\n\nantirez in commit 0420c327:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit 28e95c7c:\n Streams: fix typo \"consumer\".\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit a8c1bb31:\n Streams: fix new XREADGROUP sync logic.\n 1 file changed, 13 insertions(+), 3 deletions(-)\n\nantirez in commit 1a02b5f6:\n Streams: make blocking for > a truly special case.\n 1 file changed, 29 insertions(+), 4 deletions(-)\n\nantirez in commit a71e8148:\n Streams: send an error to consumers blocked on non-existing group.\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\nantirez in commit 09327f11:\n Streams: fix unblocking logic into a consumer group.\n 1 file changed, 24 insertions(+), 14 deletions(-)\n\ndejun.xdj in commit 3f8a3efe:\n Streams: fix xreadgroup crash after xgroup SETID is sent.\n 1 file changed, 20 insertions(+), 15 deletions(-)\n\nSalvatore Sanfilippo in commit 7239e9ca:\n Merge pull request #5095 from 0xtonyxia/fix-indentation\ndejun.xdj in commit 61f12973:\n Bugfix: PEL is incorrect when consumer is blocked using xreadgroup with NOACK option.\n 4 files changed, 6 insertions(+), 1 deletion(-)\n\nantirez in commit b67f0276:\n redis-cli: fix #4990 additional argument in help.\n 1 file changed, 1 insertion(+)\n\nantirez in commit 18d65849:\n redis-cli: fix #5096 double error message.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 84620327:\n redis-cli: cliConnect() flags CC_FORCE and CC_QUIET.\n 1 file changed, 23 insertions(+), 13 deletions(-)\n\nAmit Dey in commit a3a5a25f:\n fixing broken link in CONTRIBUTING\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit 289d8d9c:\n CLIENT UNBLOCK: fix client unblock help message.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nminkikim89 in commit 62a4a8c1:\n fix whitespace in redis-cli.c\n 1 file changed, 362 insertions(+), 362 deletions(-)\n\nWuYunlong in commit 0a5805d7:\n fix compile warning in addReplySubcommandSyntaxError\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit cb78c842:\n Use nolocks_localtime() for safer logging.\n 2 files changed, 8 insertions(+), 2 deletions(-)\n\nantirez in commit 81778d91:\n Cache timezone and daylight active flag for safer logging.\n 2 files changed, 14 insertions(+), 1 deletion(-)\n\nantirez in commit 18d8205b:\n Localtime: clarify is_leap_year() working with comments.\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\nantirez in commit 29644144:\n Localtime: fix comment about leap year.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 0ea39aa4:\n Localtime: fix daylight saving adjustment. Use * not +.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 6614d305:\n Localtime: fix daylight time documentation and computation.\n 1 file changed, 14 insertions(+), 4 deletions(-)\n\ndejun.xdj in commit 46f5a2ca:\n Fix indentation.\n 2 files changed, 14 insertions(+), 14 deletions(-)\n\nantirez in commit 243c5a7a:\n Localtime: add a test main() function to check the output.\n 1 file changed, 15 insertions(+), 1 deletion(-)\n\nantirez in commit c25ee35a:\n Localtime: day of month is 1 based. Convert from 0 based \"days\".\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit b9f33830:\n Localtime: fix timezone adjustment.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nantirez in commit 0c12cbed:\n Localtime: compute year, month and day of the month.\n 1 file changed, 26 insertions(+)\n\nantirez in commit 06ca400f:\n Localtime: basics initial calculations. Year missing.\n 1 file changed, 30 insertions(+), 2 deletions(-)\n\nantirez in commit 6a529067:\n Localtime function skeleton and file added.\n 1 file changed, 44 insertions(+)\n\nJack Drogon in commit 93238575:\n Fix typo\n 40 files changed, 99 insertions(+), 99 deletions(-)\n\nantirez in commit 94b3ee61:\n Clarify the pending_querybuf field of clients.\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\nantirez in commit 549b8b99:\n Improve style of PR #5084.\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit 526b30a7:\n Merge pull request #5084 from chendq8/pending-querybuf\nantirez in commit 677d10b2:\n Set repl_down_since to zero on state change.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit 02e38516:\n Merge pull request #5081 from trevor211/fixClusterFailover\nchendianqiang in commit cbb2ac07:\n Merge branch 'unstable' into pending-querybuf\nantirez in commit 2edcafb3:\n addReplySubSyntaxError() renamed to addReplySubcommandSyntaxError().\n 12 files changed, 14 insertions(+), 14 deletions(-)\n\nSalvatore Sanfilippo in commit bc6a0045:\n Merge pull request #4998 from itamarhaber/module_command_help\nSalvatore Sanfilippo in commit ee09b5ed:\n Merge pull request #5071 from akshaynagpal/patch-2\nSalvatore Sanfilippo in commit f03ad962:\n Merge pull request #5068 from shenlongxing/fix-rename-command\nSalvatore Sanfilippo in commit e4881cd0:\n Merge pull request #5090 from trevor211/test_helper_tcl\nWuYunlong in commit 2833cfbe:\n fix tests/test_helper.tcl with --wait-server option. Issue #5063 added --wait-server option, but can not work.\n 1 file changed, 1 deletion(-)\n\nchendianqiang in commit 7de1ada0:\n limit the size of pending-querybuf in masterclient\n 4 files changed, 48 insertions(+)\n\nWuYunlong in commit 2e167f7d:\n fix server.repl_down_since resetting, so that slaves could failover automatically as expected.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nWuYunlong in commit aeb7bc3e:\n cluster.tcl: Add master consecutively down test.\n 1 file changed, 77 insertions(+)\n\nantirez in commit d751d98b:\n Change CLIENT LIST TYPE help string.\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit a0b05a04:\n Merge pull request #5075 from soloestoy/client-list-types\nSalvatore Sanfilippo in commit aa2c390e:\n Merge pull request #5074 from soloestoy/fix-compile-warning\nSalvatore Sanfilippo in commit a4ef94d2:\n Merge pull request #5076 from 0xtonyxia/add-no-auth-warning-option\ndejun.xdj in commit 9f185626:\n Check if password is used on command line interface.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit 1139070a:\n Fix trailing white space.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit bbd0ca95:\n Fix code format issue.\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndejun.xdj in commit 7becf54e:\n Don't output password warning message when --no-auth-warning is used.\n 1 file changed, 10 insertions(+), 1 deletion(-)\n\ndejun.xdj in commit bde05e9c:\n Avoid -Woverlength-strings compile warning.\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\nantirez in commit 5baf50d8:\n Rax library updated (node callback).\n 2 files changed, 19 insertions(+), 5 deletions(-)\n\ndejun.xdj in commit 0b74fd67:\n Add --no-auth-warning help message.\n 1 file changed, 2 insertions(+)\n\nzhaozhao.zz in commit b9cbd04b:\n clients: add type option for client list\n 4 files changed, 20 insertions(+), 6 deletions(-)\n\nzhaozhao.zz in commit f5538642:\n clients: show pubsub flag in client list\n 1 file changed, 1 insertion(+)\n\nzhaozhao.zz in commit 1fcf2737:\n fix some compile warnings\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\nAkshay Nagpal in commit 007e3cbd:\n Added link to Google Group\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\nantirez in commit ab55f9da:\n Make CLIENT HELP output nicer to the eyes.\n 1 file changed, 11 insertions(+), 11 deletions(-)\n\nantirez in commit 75f1a7bd:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit 4a70ff74:\n Add unblock in CLIENT HELP.\n 1 file changed, 1 insertion(+)\n\nshenlongxing in commit 3c27db1c:\n fix empty string for sentinel rename-command\n 1 file changed, 5 insertions(+)\n\nSalvatore Sanfilippo in commit f7b21bc7:\n Merge pull request #5066 from oranagra/defrag_jemalloc5_fix\nSalvatore Sanfilippo in commit 730a4cfa:\n Merge pull request #5067 from mpaltun/mpaltun-doc-fix\nantirez in commit 2214043b:\n CLIENT UNBLOCK: support unblocking by error.\n 1 file changed, 22 insertions(+), 3 deletions(-)\n\nMustafa Paltun in commit 010dc172:\n Update t_stream.c\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nMustafa Paltun in commit 6d0acb33:\n Update help.h\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nOran Agra in commit de495ee7:\n minor fix in creating a stream NACK for rdb and defrag tests\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\nantirez in commit 71295ee3:\n CLIENT UNBLOCK implemented.\n 1 file changed, 22 insertions(+)\n\nantirez in commit fb39bfd7:\n Take clients in a ID -> Client handle dictionary.\n 3 files changed, 6 insertions(+)\n\nantirez in commit ed65d734:\n CLIENT ID implemented.\n 1 file changed, 4 insertions(+)\n\nSalvatore Sanfilippo in commit 345b4809:\n Merge pull request #5063 from oranagra/test_suite_improvements\nSalvatore Sanfilippo in commit 35c5f3fa:\n Merge pull request #5065 from oranagra/defrag_jemalloc5\nOran Agra in commit 5616d4c6:\n add active defrag support for streams\n 6 files changed, 230 insertions(+), 25 deletions(-)\n\nOran Agra in commit e8099cab:\n add defrag hint support into jemalloc 5\n 3 files changed, 43 insertions(+)\n\nOran Agra in commit 751eea24:\n test suite infra improvements and fix\n 2 files changed, 19 insertions(+)\n\nSalvatore Sanfilippo in commit bb666d44:\n Merge pull request #5027 from tigertv/unstable\nantirez in commit b9058c73:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit 43831779:\n Sentinel: test command renaming feature.\n 1 file changed, 10 insertions(+)\n\nSalvatore Sanfilippo in commit eb052ba9:\n Merge pull request #5059 from guybe7/fix_restore_warning\nantirez in commit 27178a3f:\n Fix type of argslen in sendSynchronousCommand().\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 1f1e724f:\n Remove black space.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit aa5eaad4:\n Merge pull request #5037 from madolson/repl-auth-fix\nantirez in commit 3cf8dd2c:\n Sentinel: fix SENTINEL SET error reporting.\n 1 file changed, 18 insertions(+), 9 deletions(-)\n\nMadelyn Olson in commit 45731edc:\n Addressed comments\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nMadelyn Olson in commit e8d68b6b:\n Fixed replication authentication with whitespace in password\n 1 file changed, 12 insertions(+), 5 deletions(-)\n\nantirez in commit fc0c9c80:\n Sentinel: drop the renamed-command entry in a more natural way.\n 1 file changed, 4 insertions(+), 7 deletions(-)\n\nantirez in commit 8ba670f5:\n Sentinel command renaming: document it into sentinel.conf.\n 1 file changed, 19 insertions(+)\n\nantirez in commit a8a76bda:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit 2358de68:\n Sentinel command renaming: use case sensitive hashing for the dict.\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nantirez in commit a9c50088:\n Sentinel command renaming: fix CONFIG SET event logging.\n 1 file changed, 17 insertions(+), 1 deletion(-)\n\nantirez in commit b72cecd7:\n Sentinel command renaming: fix CONFIG SET after refactoring.\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\nantirez in commit 91a384a5:\n Sentinel command renaming: implement SENTINEL SET.\n 1 file changed, 19 insertions(+)\n\nantirez in commit 903582dd:\n Sentinel: make SENTINEL SET able to handle different arities.\n 1 file changed, 19 insertions(+), 12 deletions(-)\n\nantirez in commit c303e768:\n Sentinel command renaming: config rewriting.\n 1 file changed, 12 insertions(+)\n\nantirez in commit 60df7dbe:\n Sentinel command renaming: rename-command option parsing.\n 1 file changed, 11 insertions(+)\n\nantirez in commit 72e8a33b:\n Sentinel command renaming: base machanism implemented.\n 1 file changed, 64 insertions(+), 15 deletions(-)\n\nGuy Benoish in commit dfcc20f4:\n Fix compiler warning in restoreCommand\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit cf7fcdbe:\n Merge pull request #4634 from soloestoy/special-auth\nSalvatore Sanfilippo in commit 70b7fa2c:\n Merge pull request #5049 from youjiali1995/fix-load-rdb\nSalvatore Sanfilippo in commit 54d66d39:\n Merge pull request #5053 from michael-grunder/zpopminmax-keypos\nSalvatore Sanfilippo in commit 199e704a:\n Merge pull request #5050 from shenlongxing/fix-typo\nmichael-grunder in commit db6b99f9:\n Update ZPOPMIN/ZPOPMAX command declaration\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit a16aa03a:\n Merge pull request #5051 from oranagra/streams_mem_estimate\nOran Agra in commit 20e10dc7:\n fix streams memory estimation, missing raxSeek\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nshenlongxing in commit ec55df11:\n fix typo\n 4 files changed, 4 insertions(+), 4 deletions(-)\n\nyoujiali1995 in commit df6644fe:\n Fix rdbLoadIntegerObject() to create shared objects when needed.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nSalvatore Sanfilippo in commit 1527bcad:\n Merge pull request #5036 from bepahol/unstable\nSalvatore Sanfilippo in commit c1e82405:\n Merge pull request #5039 from oranagra/rdb_dbsize_hint\nSalvatore Sanfilippo in commit 79f55eed:\n Merge pull request #5040 from oranagra/memrev64ifbe_fix\nSalvatore Sanfilippo in commit c6f4118c:\n Merge pull request #5045 from guybe7/restore_fix\nGuy Benoish in commit b5197f1f:\n Enhance RESTORE with RDBv9 new features\n 5 files changed, 100 insertions(+), 22 deletions(-)\n\nSalvatore Sanfilippo in commit c6fdebf5:\n Merge pull request #5042 from oranagra/malloc_usable_size_libc\nOran Agra in commit 482785ac:\n add malloc_usable_size for libc malloc\n 2 files changed, 8 insertions(+), 3 deletions(-)\n\nSalvatore Sanfilippo in commit 4da29630:\n Merge pull request #5023 from FX-HAO/unstable\nantirez in commit e7219025:\n Test RDB stream encoding saving/loading.\n 1 file changed, 17 insertions(+)\n\nSalvatore Sanfilippo in commit 5f5e1199:\n Merge pull request #5041 from oranagra/redis-rdb-check_rdbLoadMillisecondTime\nantirez in commit 4848fbec:\n Modules: convert hash to hash table for big objects.\n 1 file changed, 3 insertions(+)\n\nOran Agra in commit f31b0405:\n fix redis-rdb-check to provide proper arguments to rdbLoadMillisecondTime\n 2 files changed, 3 insertions(+), 2 deletions(-)\n\nantirez in commit 333c98c4:\n AOF: remove no longer used variable \"now\".\n 1 file changed, 1 deletion(-)\n\nantirez in commit e94b2053:\n Modify clusterRedirectClient() to handle ZPOP and XREAD.\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\nOran Agra in commit 26229aa6:\n use safe macro (non empty) in memrev64ifbe to eliminate empty if warning\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nOran Agra in commit 5cd3c952:\n 64 bit RDB_OPCODE_RESIZEDB in rdb saving\n 1 file changed, 3 insertions(+), 7 deletions(-)\n\nantirez in commit ba92b517:\n Remove AOF optimization to skip expired keys.\n 1 file changed, 3 deletions(-)\n\nBenjamin Holst in commit 36524060:\n Update README.md\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 44571088:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit 6967d0bd:\n Revert fix #4976 just leaving the flush() part.\n 1 file changed, 1 insertion(+), 5 deletions(-)\n\nantirez in commit 0ed0dc3c:\n Fix incrDecrCommand() to create shared objects when needed.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit bd92389c:\n Refactor createObjectFromLongLong() to be suitable for value objects.\n 2 files changed, 33 insertions(+), 2 deletions(-)\n\nSalvatore Sanfilippo in commit 3518bb66:\n Merge pull request #5020 from shenlongxing/fix-config\nantirez in commit 20766608:\n Streams: fix xreadGetKeys() for correctness.\n 1 file changed, 19 insertions(+), 5 deletions(-)\n\nSalvatore Sanfilippo in commit e670ccff:\n Merge pull request #4857 from youjiali1995/fix-command-getkeys\nantirez in commit a0b27dae:\n Streams: fix xreadGetKeys() buffer overflow.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit 62f9ac6f:\n Streams: Change XADD MAXLEN handling of values <= 0.\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\nMax Vetrov in commit d4c4f20a:\n Update sort.c\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\nantirez in commit 79a1c19a:\n XADD MAXLEN should return an error for values < 0.\n 1 file changed, 5 insertions(+)\n\nSalvatore Sanfilippo in commit 2e0ab4a8:\n Merge pull request #4976 from trevor211/fixDebugLoadaof\nSalvatore Sanfilippo in commit 94658303:\n Merge pull request #4758 from soloestoy/rdb-save-incremental-fsync\nantirez in commit 6a66b93b:\n Sentinel: add an option to deny online script reconfiguration.\n 2 files changed, 41 insertions(+)\n\nantirez in commit d353023a:\n Merge branch 'unstable' of github.com:/antirez/redis into unstable\nantirez in commit d6e8fe77:\n Fix infinite loop in dbRandomKey().\n 1 file changed, 13 insertions(+)\n\nSalvatore Sanfilippo in commit 40d5df65:\n Merge pull request #5008 from zwkno1/unstable\nSalvatore Sanfilippo in commit 8bc3ffcb:\n Merge pull request #5021 from soloestoy/fix-exists\nSalvatore Sanfilippo in commit 6c7847a1:\n Merge pull request #5018 from soloestoy/optimize-reply\nantirez in commit 1e92fde3:\n Fix SCAN bug regression test, avoiding empty SREM call.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nFuxin Hao in commit a4f658b2:\n Fix update_zmalloc_stat_alloc in zrealloc\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n================================================================================\nRedis 5.0 RC3     Released Wed Jun 14 9:51:44 CEST 2018\n================================================================================\n\nUpgrade urgency LOW:\n\nThis release fixes compilation of Redis RC2. For an error the commit from unstable\nupdating the Rax library was not merged into the 5.0 branch.\n\n================================================================================\nRedis 5.0 RC2     Released Wed Jun 13 12:49:13 CEST 2018\n================================================================================\n\nUpgrade urgency CRITICAL: This release fixes important security issues.\n                    HIGH: This release fixes a SCAN commands family bug.\n                MODERATE: This release fixes a PSYNC2 edge case with expires.\n                MODERATE: Sentinel related fixes.\n                     LOW: All the other issues\n\nNOTE: This release breaks API compatibility with certain APIs that were\nintroduced in Redis 5.0 RC1. Notably ZPOP* now returns score/element in reverse\norder. XINFO <key> special form was removed, now XINFO STREAM <key> must be\nused to obtain general information about the stream.\n\nRedis 5.0 RC2 ixes a number of important issues:\n\n* Important security issues related to the Lua scripting engine.\n  Please check https://github.com/antirez/redis/issues/5017\n  for more information.\n\n* A bug with SCAN, SSCAN, HSCAN and ZSCAN, that may not return all the elements.\n  We also add a regression test that can trigger the issue often when present, and\n  may in theory be able to find unrelated regressions.\n\n* A PSYNC2 bug is fixed: Redis should not expire keys when saving RDB files\n  because otherwise it is no longer possible to use such RDB file as a base\n  for partial resynchronization. It no longer represents the right state.\n\n* Compatibility of AOF with RDB preamble when the RDB checksum is disabled.\n\n* Sentinel bug that in some cases prevented Sentinel to detect that the master\n  was down immediately. A delay was added to the detection.\n\n* XREADGROUP would crash when the master had attacked slaves.\n\n* Replication and events generation of several streams command were fixed.\n\n* XREVRANGE fixed, in some cases it could not return elements, or crash the\n  server, or in general not behave correctly.\n\n* ZPOP can now unblock multiple clients in a sane way.\n\n* Other minor issues.\n\nMoreover this release adds new features:\n\n* XGROUP DESTROY and XGROUP SETID.\n\n* RDB loading speedup.\n\n* Configurable stream macro node limits (number of elements / bytes).\n\n* More smaller improvements.\n\nThe following is the list of commits composing the release, please check\nthe commit messages and authors for credits.\n\nantirez in commit 9fdcc159:\n Security: fix redis-cli buffer overflow.\n 1 file changed, 16 insertions(+), 11 deletions(-)\n\nantirez in commit cf760071:\n Security: fix Lua struct package offset handling.\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\nantirez in commit a57595ca:\n Security: more cmsgpack fixes by @soloestoy.\n 1 file changed, 7 insertions(+)\n\nantirez in commit 8783fb94:\n Security: update Lua struct package for security.\n 1 file changed, 23 insertions(+), 23 deletions(-)\n\nantirez in commit 8cb9344b:\n Security: fix Lua cmsgpack library stack overflow.\n 1 file changed, 3 insertions(+)\n\n赵磊 in commit 59080f60:\n Fix dictScan(): It can't scan all buckets when dict is shrinking.\n 1 file changed, 14 insertions(+), 11 deletions(-)\n\ndejun.xdj in commit ac2a824a:\n Fix redis-cli memory leak when sending set preference command.\n 1 file changed, 2 insertions(+)\n\ndejun.xdj in commit c7197ff5:\n Check if the repeat value is positive in while loop of cliSendCommand().\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit 3f77777f:\n Change the type of repeat argument to long for function cliSendCommand.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit 7a565d72:\n Fix negtive repeat command value issue.\n 1 file changed, 11 insertions(+), 3 deletions(-)\n\ndejun.xdj in commit 64bf60fb:\n Detect and stop saving history for auth command with repeat option.\n 1 file changed, 17 insertions(+), 10 deletions(-)\n\ndejun.xdj in commit 5bed12aa:\n Change the warning message a little bit to avoid trademark issuses.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndejun.xdj in commit d71c4961:\n Stop saving auth command in redis-cli history.\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ndejun.xdj in commit fca99e41:\n Add warning message when using password on command line\n 1 file changed, 1 insertion(+)\n\nantirez in commit 01407a3a:\n Don't expire keys while loading RDB from AOF preamble.\n 3 files changed, 5 insertions(+), 5 deletions(-)\n\nWuYunlong in commit fb5408cf:\n Fix rdb save by allowing dumping of expire keys, so that when we add a new slave, and do a failover, eighter by manual or not, other local slaves will delete the expired keys properly.\n 2 files changed, 3 insertions(+), 7 deletions(-)\n\nantirez in commit 0b8b6df4:\n Backport hiredis issue 525 fix to compile on FreeBSD.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nantirez in commit e98627c5:\n Add INIT INFO to the provided init script.\n 1 file changed, 8 insertions(+)\n\nantirez in commit 17f5de89:\n Fix ae.c when a timer finalizerProc adds an event.\n 2 files changed, 10 insertions(+), 6 deletions(-)\n\nantirez in commit 266e6423:\n Sentinel: fix delay in detecting ODOWN.\n 1 file changed, 9 insertions(+), 5 deletions(-)\n\nzhaozhao.zz in commit eafaf172:\n AOF & RDB: be compatible with rdbchecksum no\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\nhuijing.whj in commit 4630da37:\n fix int overflow problem in freeMemoryIfNeeded\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n================================================================================\nRedis 5.0 RC1   Released Tue May 29 14:14:11 CEST 2018\n================================================================================\n\nUpgrade urgency LOW: This is the first RC of Redis 5.\n\nIntroduction to the Redis 5 release\n===================================\n\nRedis 5 is a release focused on a few important features. While Redis 4\nwas very very focused on operations, Redis 5 changes are mostly user-facing,\nwith the implementation of new data types and operations on top of existing\ntypes. The following are the major features of this release:\n\n1. The new Stream data type. https://redis.io/topics/streams-intro\n2. New Redis modules APIs: Timers, Cluster and Dictionary APIs.\n3. RDB now store LFU and LRU information.\n4. The cluster manager was ported from Ruby (redis-trib.rb) to C code\n   inside redis-cli. Check `redis-cli --cluster help` for more info.\n5. New sorted set commands: ZPOPMIN/MAX and blocking variants.\n6. Active defragmentation version 2.\n7. Improvemenets in HyperLogLog implementations.\n8. Better memory reporting capabilities.\n9. Many commands with sub-commands now have an HELP subcommand.\n10. Better performances when clients connect and disconnect often.\n11. Many bug fixes and other random improvements.\n12. Jemalloc was upgraded to version 5.1\n13. CLIENT UNBLOCK and CLIENT ID.\n14. The LOLWUT command was added. http://antirez.com/news/123\n15. We no longer use the \"slave\" word if not for API backward compatibility.\n16. Differnet optimizations in the networking layer.\n17. Lua improvements:\n    - Better propagation of Lua scripts to slaves / AOF.\n    - Lua scripts can now timeout and get in -BUSY state in the slave as well.\n18. Dynamic HZ to balance idle CPU usage with responsiveness.\n19. The Redis core was refactored and improved in many ways.\n\nThanks to all the users and developers who made this release possible.\nWe'll follow up with more RC releases, until the code looks production ready\nand we don't get reports of serious issues for a while.\n\nA special thank you for the amount of work put into this release\n(in decreasing number of commits) by:\n\nFabio Nicotra, <artix2@gmail.com>\nSoloestoy <zhaozhao.zz@alibaba-inc.com>\nItamar Haber <itamar@redislabs.com>\nOran Agra <oran@redislabs.com>\nDvir Volk <dvirsky@gmail.com>\ndejun.xdj <dejun.xdj@alibaba-inc.com>\nGuy Benoish <guy.benoish@redislabs.com>\nCharsyam <charsyam@gmail.com>\nOtmar Ertl <otmar.ertl@gmail.com>\nJan-Erik Rediger <janerik@fnordig.de>\nSpinlock <wnzheng@gmail.com>\n\nMigrating from 4.0 to 5.0\n=========================\n\nRedis 4.0 is mostly a strict subset of 5.0, you should not have any problem\nupgrading your application from 4.0 to 5.0. However this is a list of small\nnon-backward compatible changes introduced in the 5.0 release:\n\n* redis-cli now implements the cluster management tool. We still ship the\n  old redis-trib, but new fixes will be implemented only in redis-cli.\n  See `redis-cli --cluster help` for more info.\n\n* The RDB format changed. Redis 5.0 is still able to read 4.0 (and all the\n  past versions) files, but not the other way around.\n\n* Certain log formats and sentences are different in Redis 5.0.\n\n* Now by default maxmemory is ignored by slaves, and used only once a slave\n  is promoted to master. It means that in setups where you want slaves to\n  enforce maxmemory in an independent way from the master (that will anyway\n  stream the key eviction DEL commands), you should active this feature manually\n  and make sure you understand that it breaks consistency if writes are not\n  always idempotent. TLDR: the new behavior is much better for 99.999% of use\n  cases, revert it if you really know what you are doing.\n\n* Scripts are only replicated by their *effects* and not by sending EVAL/EVALSHA\n  to slaves or the AOF log itself. This is much better in the general case\n  and in the future we want to totally remove the other possiblity of\n  propagating scripts the old way (as EVAL). However you can still turn this\n  back to the default via the non-documented (if not here) Redis configuration\n  directive \"lua-replicate-commands yes\" or\n  \"DEBUG lua-always-replicate-commands 0\". However note that Redis 6 may\n  completely remove such feature.\n\n* Because of the above change related to scripts replication, certain Redis\n  commands that in Redis 4 had their result ordered lexicographically before\n  being passed to Lua via the return value of redis.call(), now have a behavior\n  more similar to calling the commands directly from a normal client. For\n  instance the ordering of elements returned by SMEMBERS or SDIFF is now\n  undetermined in Lua, exactly as it is by default when calling the commands\n  from a non-scripting context.\n\n--------------------------------------------------------------------------------\n\nCredits: For each release, a list of changes with the relative author is\nprovided. Where not specified the implementation and design is done by\nSalvatore Sanfilippo. Thanks to Redis Labs for making all this possible.\nAlso many thanks to all the other contributors and the amazing community\nwe have.\n\nCommit messages may contain additional credits.\n\nEnjoy,\nSalvatore\n"
        },
        {
          "name": "BUGS",
          "type": "blob",
          "size": 0.0517578125,
          "content": "Please check https://github.com/antirez/redis/issues\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 2.3251953125,
          "content": "Note: by contributing code to the Redis project in any form, including sending\na pull request via Github, a code fragment or patch via private email or\npublic discussion groups, you agree to release your code under the terms\nof the BSD license that you can find in the COPYING file included in the Redis\nsource distribution. You will include BSD license in the COPYING file within\neach source file that you contribute.\n\n# IMPORTANT: HOW TO USE REDIS GITHUB ISSUES\n\n* Github issues SHOULD ONLY BE USED to report bugs, and for DETAILED feature\n  requests. Everything else belongs to the Redis Google Group:\n      \n      https://groups.google.com/forum/m/#!forum/Redis-db\n\n  PLEASE DO NOT POST GENERAL QUESTIONS that are not about bugs or suspected\n  bugs in the Github issues system. We'll be very happy to help you and provide\n  all the support in the mailing list.\n\n  There is also an active community of Redis users at Stack Overflow:\n\n      http://stackoverflow.com/questions/tagged/redis\n\n# How to provide a patch for a new feature\n\n1. If it is a major feature or a semantical change, please don't start coding\nstraight away: if your feature is not a conceptual fit you'll lose a lot of\ntime writing the code without any reason. Start by posting in the mailing list\nand creating an issue at Github with the description of, exactly, what you want\nto accomplish and why. Use cases are important for features to be accepted.\nHere you'll see if there is consensus about your idea.\n\n2. If in step 1 you get an acknowledgment from the project leaders, use the\n   following procedure to submit a patch:\n\n    a. Fork Redis on github ( http://help.github.com/fork-a-repo/ )\n    b. Create a topic branch (git checkout -b my_branch)\n    c. Push to your branch (git push origin my_branch)\n    d. Initiate a pull request on github ( https://help.github.com/articles/creating-a-pull-request/ )\n    e. Done :)\n\n3. Keep in mind that we are very overloaded, so issues and PRs sometimes wait\nfor a *very* long time. However this is not lack of interest, as the project\ngets more and more users, we find ourselves in a constant need to prioritize\ncertain issues/PRs over others. If you think your issue/PR is very important\ntry to popularize it, have other users commenting and sharing their point of\nview and so forth. This helps.\n\n4. For minor fixes just open a pull request on Github.\n\nThanks!\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.4521484375,
          "content": "Copyright (c) 2006-2015, Salvatore Sanfilippo\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n    * Neither the name of Redis nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 0.0107421875,
          "content": "See README\n"
        },
        {
          "name": "MANIFESTO",
          "type": "blob",
          "size": 6.7265625,
          "content": "[Note: this is the Redis manifesto, for general information about\n       installing and running Redis read the README file instead.]\n\nRedis Manifesto\n===============\n\n1 - A DSL for Abstract Data Types. Redis is a DSL (Domain Specific Language)\n    that manipulates abstract data types and implemented as a TCP daemon.\n    Commands manipulate a key space where keys are binary-safe strings and\n    values are different kinds of abstract data types. Every data type\n    represents an abstract version of a fundamental data structure. For instance\n    Redis Lists are an abstract representation of linked lists. In Redis, the\n    essence of a data type isn't just the kind of operations that the data types\n    support, but also the space and time complexity of the data type and the\n    operations performed upon it.\n\n2 - Memory storage is #1. The Redis data set, composed of defined key-value\n    pairs, is primarily stored in the computer's memory. The amount of memory in\n    all kinds of computers, including entry-level servers, is increasing\n    significantly each year. Memory is fast, and allows Redis to have very\n    predictable performance. Datasets composed of 10k or 40 millions keys will\n    perform similarly. Complex data types like Redis Sorted Sets are easy to\n    implement and manipulate in memory with good performance, making Redis very\n    simple. Redis will continue to explore alternative options (where data can\n    be optionally stored on disk, say) but the main goal of the project remains\n    the development of an in-memory database.\n\n3 - Fundamental data structures for a fundamental API. The Redis API is a direct\n    consequence of fundamental data structures. APIs can often be arbitrary but\n    not an API that resembles the nature of fundamental data structures. If we\n    ever meet intelligent life forms from another part of the universe, they'll\n    likely know, understand and recognize the same basic data structures we have\n    in our computer science books. Redis will avoid intermediate layers in API,\n    so that the complexity is obvious and more complex operations can be\n    performed as the sum of the basic operations.\n\n4 - We believe in code efficiency. Computers get faster and faster, yet we\n    believe that abusing computing capabilities is not wise: the amount of\n    operations you can do for a given amount of energy remains anyway a\n    significant parameter: it allows to do more with less computers and, at\n    the same time, having a smaller environmental impact. Similarly Redis is\n    able to \"scale down\" to smaller devices. It is perfectly usable in a\n    Raspberry Pi and other small ARM based computers. Faster code having\n    just the layers of abstractions that are really needed will also result,\n    often, in more predictable performances. We think likewise about memory\n    usage, one of the fundamental goals of the Redis project is to\n    incrementally build more and more memory efficient data structures, so that\n    problems that were not approachable in RAM in the past will be perfectly\n    fine to handle in the future.\n\n5 - Code is like a poem; it's not just something we write to reach some\n    practical result. Sometimes people that are far from the Redis philosophy\n    suggest using other code written by other authors (frequently in other\n    languages) in order to implement something Redis currently lacks. But to us\n    this is like if Shakespeare decided to end Enrico IV using the Paradiso from\n    the Divina Commedia. Is using any external code a bad idea? Not at all. Like\n    in \"One Thousand and One Nights\" smaller self contained stories are embedded\n    in a bigger story, we'll be happy to use beautiful self contained libraries\n    when needed. At the same time, when writing the Redis story we're trying to\n    write smaller stories that will fit in to other code.\n\n6 - We're against complexity. We believe designing systems is a fight against\n    complexity. We'll accept to fight the complexity when it's worthwhile but\n    we'll try hard to recognize when a small feature is not worth 1000s of lines\n    of code. Most of the time the best way to fight complexity is by not\n    creating it at all. Complexity is also a form of lock-in: code that is\n    very hard to understand cannot be modified by users in an independent way\n    regardless of the license. One of the main Redis goals is to remain\n    understandable, enough for a single programmer to have a clear idea of how\n    it works in detail just reading the source code for a couple of weeks.\n\n7 - Threading is not a silver bullet. Instead of making Redis threaded we\n    believe on the idea of an efficient (mostly) single threaded Redis core.\n    Multiple of such cores, that may run in the same computer or may run\n    in multiple computers, are abstracted away as a single big system by\n    higher order protocols and features: Redis Cluster and the upcoming\n    Redis Proxy are our main goals. A shared nothing approach is not just\n    much simpler (see the previous point in this document), is also optimal\n    in NUMA systems. In the specific case of Redis it allows for each instance\n    to have a more limited amount of data, making the Redis persist-by-fork\n    approach more sounding. In the future we may explore parallelism only for\n    I/O, which is the low hanging fruit: minimal complexity could provide an\n    improved single process experience.\n\n8 - Two levels of API. The Redis API has two levels: 1) a subset of the API fits\n    naturally into a distributed version of Redis and 2) a more complex API that\n    supports multi-key operations. Both are useful if used judiciously but\n    there's no way to make the more complex multi-keys API distributed in an\n    opaque way without violating our other principles. We don't want to provide\n    the illusion of something that will work magically when actually it can't in\n    all cases. Instead we'll provide commands to quickly migrate keys from one\n    instance to another to perform multi-key operations and expose the\n    trade-offs to the user.\n\n9 - We optimize for joy. We believe writing code is a lot of hard work, and the\n    only way it can be worth is by enjoying it. When there is no longer joy in\n    writing code, the best thing to do is stop. To prevent this, we'll avoid\n    taking paths that will make Redis less of a joy to develop.\n\n10 - All the above points are put together in what we call opportunistic\n     programming: trying to get the most for the user with minimal increases\n     in complexity (hanging fruits). Solve 95% of the problem with 5% of the\n     code when it is acceptable. Avoid a fixed schedule but follow the flow of\n     user requests, inspiration, Redis internal readiness for certain features\n     (sometimes many past changes reach a critical point making a previously\n     complex feature very easy to obtain).\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1474609375,
          "content": "# Top level makefile, the real shit is at src/Makefile\n\ndefault: all\n\n.DEFAULT:\n\tcd src && $(MAKE) $@\n\ninstall:\n\tcd src && $(MAKE) $@\n\n.PHONY: install\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.57421875,
          "content": "# Redis 5.0.14 for Windows\n\nYou can find the release of **Redis 5.0.14 for Windows** on [releases page](https://github.com/tporadowski/redis/releases). Please test it and [report any issues](https://github.com/tporadowski/redis/wiki/Submitting-an-Issue), thanks in advance!\n\n## Redis 4.0.14 for Windows\n\nYou can find the release of **Redis 4.0.14 for Windows** on [releases page](https://github.com/tporadowski/redis/releases). Please test it and [report any issues](https://github.com/tporadowski/redis/wiki/Submitting-an-Issue), thanks in advance!\n\n**DISCLAIMER**\n\nAt the moment [win-4.0.14 branch](https://github.com/tporadowski/redis/tree/win-4.0.14) provides a **stable port of [Redis 4.0.14](https://github.com/antirez/redis/releases/tag/4.0.14) for Windows x64** and [win-5.0 branch](https://github.com/tporadowski/redis/tree/win-5.0) provides a **stable port of [Redis 5.0.14](https://github.com/redis/redis/releases/tag/5.0.14) for Windows x64**, both merged with archived port of [win-3.2.100 version](https://github.com/MicrosoftArchive/redis/releases/tag/win-3.2.100) from MS Open Tech team. Since the latter is no longer maintained - the sources were merged by hand, projects updated to Visual Studio 2019 (v16.2.5) and any findings (mostly via unit tests) were fixed.\n\nYou can find the original description of what this fork provides, how it evolved, what are its requirements, etc. on Wiki: https://github.com/tporadowski/redis/wiki/Old-MSOpenTech-redis-README.md\n\n**Building from source code**\n\nIn order to build this project from source code you need to have:\n  1. Visual Studio 2019 (i.e. Community Edition, version 16.2.5 or newer) with \"C/C++ features\" enabled,\n  1. Windows SDK 10,\n  1. [Git Bash](https://gitforwindows.org/) for Windows or [Cygwin](http://cygwin.com/) with Git - after cloning this repository you need to run `src/mkreleasehdr.sh` script that creates `src/release.h` with some information taken from Git; optionally you can create that file by hand.\n\n**Dependencies**\n\nThis project depends on [`jemalloc`](https://github.com/jemalloc/jemalloc) memory allocator, which is slightly customized\nin regard to calls to `VirtualAlloc` and `VirtualFree` WinAPI functions. They are being replaced with calls to `AllocHeapBlock/PurgePages`\nand `FreeHeapBlock` from `src/Win32_Interop/Win32_QFork.cpp` in order to keep track which memory regions are to be made\navailable to child processes (for saving RDB/AOF).\n\nChanges to `jemalloc` that provide those customizations are being maintained in [tporadowski/jemalloc repository](https://github.com/tporadowski/jemalloc)\nand are copied over to `deps/jemalloc`.\n"
        },
        {
          "name": "RELEASENOTES.txt",
          "type": "blob",
          "size": 3.5341796875,
          "content": "Redis for Windows - https://github.com/tporadowski/redis\n========================================================\n\nThis file provides information about Windows-specific changes to Redis.\nFor release notes related to original Redis project - please see 00-RELEASENOTES.\n\n--------------------------------------------------------\n\n2020-11-08: Redis 5.0.10 for Windows\nhttps://github.com/tporadowski/redis/releases/tag/v5.0.10\n\nBugfix/maintenance release of Redis for Windows, updated to be in sync with\nredis/5.0.10 (https://github.com/redis/redis/releases/tag/5.0.10)\n\nNOTE: active memory defragmentation feature (\"activedefrag\" option) is turned OFF.\n\n--------------------------------------------------------\n\n2020-05-02: Redis 5.0.9 for Windows\nhttps://github.com/tporadowski/redis/releases/tag/v5.0.9\n\nFirst release of Redis 5.x for Windows, updated to be in sync with antirez/5.0.9.\n\n--------------------------------------------------------\n\n2020-01-26: Redis 4.0.14.2 for Windows\nhttps://github.com/tporadowski/redis/releases/tag/v4.0.14.2\n\nThis is a hotfix release of 4.0.14 branch that fixes #50 related to running in\nSentinel mode.\n\n--------------------------------------------------------\n\n2020-01-15: Redis 4.0.14.1 for Windows\nhttps://github.com/tporadowski/redis/releases/tag/v4.0.14.1\n\nThis is a hotfix release of 4.0.14 branch that fixes 2 Windows-specific issues:\n\n  * #46 - added support for older Windows versions (prior Windows 8 and Windows Server 2012)\n  * #47 - fixed problem with parsing command-line arguments.\n\n--------------------------------------------------------\n\n2019-08-29: Redis 4.0.14 for Windows\nhttps://github.com/tporadowski/redis/releases/tag/v4.0.14\n\nRedis 4.0.14 for Windows is a merge of Windows-specific changes from latest (unsupported) 3.2.100 release from MSOpenTech and original Redis 4.0.14.\n\n--------------------------------------------------------\n\n2018-10-01: Redis for Windows 4.0.2.3 (alpha)\n\nThis 4.0.2.3 release is still an alpha version, but contains enhancements and fixes for:\n\n  * #14: decrease logging verbosity of some cluster-related messages\n  * #23: ZRANK/ZREVRANK bugfix (win-port only)\n  * failed unit tests (bdcf80e).\n\n--------------------------------------------------------\n\n2018-03-26: Redis for Windows 4.0.2.2 (alpha)\nhttps://github.com/tporadowski/redis/releases/tag/v4.0.2.2-alpha\n\nThis 4.0.2.2 release is still an alpha version, but contains a fix to issue #12\n(crash when rewriting AOF file - this issue was specific to Windows port only).\n\n--------------------------------------------------------\n\n2018-03-17: Redis for Windows 4.0.2.1 (alpha)\nhttps://github.com/tporadowski/redis/releases/tag/v4.0.2.1-alpha\n\nThis 4.0.2.1 release is still an alpha version, but contains a fix to issue #11,\nwhich was related to sending back larger amounts of data to Redis clients\n(this issue was specific to Windows port only).\n\n--------------------------------------------------------\n\n2017-11-22: Redis 4.0.2 for Windows (alpha)\nhttps://github.com/tporadowski/redis/releases/tag/v4.0.2-alpha\n\nAlpha version of Redis 4.0.2 for Windows.\n\nRedis 4.0.2 for Windows is a merge of Windows-specific changes from latest (unsupported) 3.2.100 release\nfrom MSOpenTech and Redis 4.0.2 and this alpha release consists of:\n\n  * all Redis 4.0.2 features except modules,\n  * all executables of Redis (redis-server, redis-cli, redis-benchmark, redis-check-aof, redis-check-rdb).\n\nMain difference to official Redis 4.0.2 (except no support for modules at the moment) is old version\nof jemalloc-win dependency, which is planned to be updated to the same version in beta release."
        },
        {
          "name": "Redis on Windows Release Notes.md",
          "type": "blob",
          "size": 1.255859375,
          "content": "MSOpenTech Redis on Windows 3.2 Release Notes\n=============================================\n--[ Redis on Windows 3.2.100 ] Release date: Jul 01 2016\n\n This is the first stable release of Redis on Windows 3.2.\n This release is based on antirez/redis/3.2.1 plus some Windows specific fixes.\n It has passed all the standard tests but it hasn't been tested in a production\n environment. Therefore before considering using this release in production\n make sure to test it thoroughly in your own test environment.\n\n Changelog:\n \n - [Portability] strtol and strtoul fixes.\n - [Fix] Possible AV during background save.\n - [Fix] Use overlapped sockets for cluster failover communication.\n - [Cleanup cleanup] Minor changes.\n - [Portability] Windows portability fixes.\n - Merged tag 3.2.1 from antirez/3.2.\n - [Setup] Removed subdir for log, the log is now saved in the main redis dir.\n - [Cleanup] Removed unused project. \n \n \n--[ Redis on Windows 3.2.000-preview ] Release date: Jun 14 2016\n\n This is a technical preview of Redis on Windows 3.2.\n There are still known issues/bugs, in particular there is a bug that prevents\n the cluster fail-over functionality to work properly in certain scenarios.\n This release SHOULD NOT be used in production.\n\nChangelog:\n\n - Windows port of antirez/3.2.\n"
        },
        {
          "name": "Redis on Windows.md",
          "type": "blob",
          "size": 8.59765625,
          "content": "MSOpenTech’s Redis on Windows\n=============================\n\nRedis is an open source, high performance, key-value store. Values may contain strings, hashes, lists, sets and sorted sets. Redis has been developed primarily for UNIX-like operating systems.\nOur goal is to provide a version of Redis that runs on Windows with a performance essentially equal to the performance of Redis on an equivalent UNIX machine.\nWe strive to have a stable, functionally equivalent and comparably performing version of Redis on Windows. We have achieved performance nearly identical to the POSIX version running head-to-head on identical hardware across the network. Aside from feature differences that help Redis take advantage of the Windows infrastructure, our version of Redis should work in most situations with the identical setup and configuration that one would use on a POSIX operating system.\n\nHow is Redis on Windows implemented?\n====================================\n\nRedis is a C code base that compiles under Visual Studio. Most of the code compiles with only minor changes to the code due to syntactical differences between compilers and low level API differences on Windows. There are a few areas where there are significant differences in how efficient Windows programs operate relative to POSIX programs. We have encapsulated most these differences in a platform specific library. The areas where there are significant differences are:\n\n-   Networking APIs\n\n-   POSIX File Descriptors\n\n-   POSIX fork()\n\n-   Logging\n\n-   Windows Services API\n\nNetworking Differences\n----------------------\n\nThe Windows networking stack is split between user mode code and kernel mode code. Transitions between user and kernel mode are expensive operations. The POSIX networking APIs on Windows utilize a programming model that incurs significant performance loss due to the kernel/user mode transitions. Efficient Windows networking code instead uses the IO Completion Port model to reduce the impact of this behavior. The APIs used and the programming model for IO Completion is different enough that we were forced to implement a new networking layer in Redis.\n\nFile Descriptors\n----------------\n\nIn a POSIX operating system all data sources (files, pipes, sockets, mail slots, etc.) are referenced in code with a handle called a file descriptor. These are low value integers that increment by one with each successive file descriptor created in a given program. All POSIX APIs that work with file descriptors will function without the programmer having to know what kind of data source a file descriptor represents. On Windows generally each kind of data source has a separate kind of HANDLE. APIs that work with one HANDLE type will not work with another kind of HANDLE. In order to make Redis operate with its assumptions about file descriptor values and data source agnosticism, we implemented a Redis File Descriptor API layer.\n\nfork()\n------\n\nThe POSIX version of Redis uses the fork() API. There is no equivalent in Windows, and it is an exceedingly difficult API to completely simulate. For most of the uses of fork() we have used Windows specific programming idioms to bypass the need to use a fork()-like API. The one case where we could not do so was with the point-in-time heap snapshot behavior that the Redis persistence model is based on. We tried several different approaches to work around the need for a fork()-like API, but always ran into significant performance penalties and stability issues.\n\nOur current approach is to simulate the point-in-time snapshot behavior aspect of fork() without doing a complete simulation of fork(). We do this with the system-paging file that contains the Redis heap. When a fork() operation is required we do the following:\n\n-   Mark every page in the system-paging file with the Copy on Write page protection\n\n-   Start a child process and pass it the handle to the system-paging file\n\n-   Signal the child to start the AOF or RDB persistence process on the memory shared via the system-paging file\n\n-   Wait (asynchronously) for the child process to finish\n\n-   Map the changes in the Redis heap that occurred during the fork() operation back into the system-paging file.\n\nThe upside with this implementation is that our performance and stability is now on par with the POSIX version of Redis. The down side is that we have a runtime disk space requirement for Redis equal to the size of the Redis memory heap. The disk space requirement defaults to:\n\n-   50% more than the --maxmemory setting if present, otherwise\n\n-   The size of physical RAM\n\nWe also have a runtime page file commit requirement that varies depending on the amount data in the Redis heap during the quasi-fork operation. The maximum for this is about 3 times the size of the max-memory This is usually not a problem because the default configuration of Windows allows the page file to grow to 3.5 times the size of physical memory. There are scenarios where 3<sup>rd</sup> party programs also compete for system swap space at runtime.\n\nLogging\n-------\n\nIn addition to file based logging, the POSIX version of Redis supports logging via the syslog facility. The equivalent in Windows is the Event Log. With the recent addition of the Windows Service code we have added support for logging to the Event Log. We have mapped the –syslogxxxx flags for this purpose.\n\nWindows Service\n---------------\n\nIn version 2.8.9 we are adding support to make Redis operate as a service. See the RedisService.docx file included with the GitHub binary distribution for a description of the service commands available.\n\nRedis on Windows Best Practices\n===============================\n\nBinary Distributions\n--------------------\n\nThe GitHub repository should be considered a work in progress until we release the NuGet and Chocolatey packages and tag the repository at that released version.\n\nFor instance, the Windows Service feature has taken many iterations with community input to get right. The initial Windows service code was checked in on April 3. Since that time we have added the following to the service based on community input:\n\n-   Self elevation of the Redis executable so that service commands would work from a non-elevated command prompt.\n\n-   Service naming so that multiple instances of the Redis service could be installed on one machine.\n\n-   Automatically adjusting folder permissions so that when Redis is run under the NETWORK SERVICE account it could modify the files in the installation directory.\n\n-   Moved all of the pre-main() error reporting code (service and quasi-fork code) that could write errors to stdout to use the Redis logging code. This allows service initialization errors to reach the Event Log. This required intercepting all of the command line and conf file arguments before main() in order to properly initialize the logging engine. There were several fixes related to the intricacies of how to interpret the arguments passed to Redis.\n\nThe final service code has been released as of June 25 in the 2.8.9 Redis-64 packages.\n\nHeap Sizing\n-----------\n\nNative heaps are prone to fragmentation. If we are not able to allocate more heap space due to fragmentation Redis will flag the problem and exit. Unlike the POSIX version of Redis, our heap size is constrained by both by disk space and by swap file space. It is important to consider how much data you are expecting to put into Redis, and how much fragmentation you are likely to see in the Redis heap. With very high levels of fragmentation the 50% overhead that –maxmemory imposes may not be enough to prevent running out of heap space. In this case, the use of –maxheap will supersede the –maxmemory default heap setting.\n\nInstallation and Maintenance\n----------------------------\n\nSince Redis uses system swap space, the most stable configurations will only have Redis running on essentially a virgin operating system install.\n\nRedis is xcopy deployable. There should be no problem upgrading versions by simply copying new binaries over old ones (assuming they are not currently in use).\n\nService Account\n---------------\n\nWhen using Redis as a Windows service, the default installation configures Redis to run under the system’s NETWORK SERVICE account. There are some environments where another account must be used (perhaps a domain service account). Configuration of this account needs to be done manually at this point with the service control manager. If this is done, it is also important to give read/write/create permission to the folder that the Redis executable is in to this user identity.\n\nHow to develop for Redis\n========================\n\nYou will need a client library for accessing Redis. There are a wide variety of client libraries available as listed at <http://redis.io/clients>.\n"
        },
        {
          "name": "Windows Service Documentation.md",
          "type": "blob",
          "size": 3.7177734375,
          "content": "﻿Running Redis as a Service\n==========================\n\nIf you installed Redis using the MSI package, then Redis was already installed as a Windows service. Nothing further to do. If you would like to change its settings, you can update the *redis.windows-service.conf* file and then restart the Redis service (Run -\\> services.msc -\\> Redis -\\> Restart).\n\nDuring installation of the MSI you can either use the installer’s user interface to update the port that Redis listens at and the firewall exception or run it silently without a UI. The following examples show how to install from the command line:\n\n**default install (port 6379 and firewall exception ON):**\n\n*msiexec /i Redis-x64.msi *\n\n**set port and turn OFF firewall exception:**\n\n*msiexec /i Redis-x64.msi PORT=1234 FIREWALL\\_ON=\"\"*\n\n**set port and turn ON firewall exception:**\n\n*msiexec /i Redis-x64.msi PORT=1234 FIREWALL\\_ON=1*\n\n**install with no user interface:**\n\n*msiexec /quiet /i Redis-x64.msi*\n\nIf you did *not* install Redis using the MSI package, then you still run Redis as a Windows service by following these instructions:\n\nIn order to better integrate with the Windows Services model, new command line arguments have been introduced to Redis. These service arguments require an elevated user context in order to connect to the service control manager. If these commands are invoked from a non-elevated context, Redis will attempt to create an elevated context in which to execute these commands. This will cause a User Account Control dialog to be displayed by Windows and may require Administrative user credentials in order to proceed.\n\nInstalling the Service\n----------------------\n\n*--service-install*\n\nThis must be the first argument on the redis-server command line. Arguments after this are passed in the order they occur to Redis when the service is launched. The service will be configured as Autostart and will be launched as \"NT AUTHORITY\\\\NetworkService\". Upon successful installation a success message will be displayed and Redis will exit.\n\nThis command does not start the service.\n\nFor instance:\n\nredis-server --service-install redis.windows.conf --loglevel verbose\n\nUninstalling the Service\n------------------------\n\n*--service-uninstall*\n\nThis will remove the Redis service configuration information from the registry. Upon successful uninstallation a success message will be displayed and Redis will exit.\n\nThis does command not stop the service.\n\nFor instance:\n\nredis-server --service-uninstall\n\nStarting the Service\n--------------------\n\n*--service-start*\n\nThis will start the Redis service. Upon successful start, a success message will be displayed and Redis will begin running.\n\nFor instance:\n\nredis-server --service-start\n\nStopping the Service\n--------------------\n\n*--service-stop*\n\nThis will stop the Redis service. Upon successful termination a success message will be displayed and Redis will exit.\n\nFor instance:\n\nredis-server --service-stop\n\nNaming the Service\n------------------\n\n*--service-name **name***\n\nThis optional argument may be used with any of the preceding commands to set the name of the installed service. This argument should follow the service-install, service-start, service-stop or service-uninstall commands, and precede any arguments to be passed to Redis via the service-install command.\n\nThe following would install and start three separate instances of Redis as a service:\n\nredis-server --service-install --service-name redisService1 --port 10001\n\nredis-server --service-start --service-name redisService1\n\nredis-server --service-install --service-name redisService2 --port 10002\n\nredis-server --service-start --service-name redisService2\n\nredis-server --service-install --service-name redisService3 --port 10003\n\nredis-server --service-start --service-name redisService3\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.177734375,
          "content": "version: 3.2.100.{build}\n\nbranches:\n# whitelist\n    only:\n        - '3.2'\n        - appveyor\n\ninstall:\n    - git submodule -q update --init\n\nbuild:\n    project: msvs\\RedisServer.sln\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.5517578125,
          "content": "Copyright (c) 2006-2020, Salvatore Sanfilippo\nModifications copyright (c) Microsoft Open Technologies, Inc. \nModifications copyright (c) Tomasz Poradowski\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: \n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. \n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. \n* Neither the name of Redis nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. \n \nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\nOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\nAND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "msvs",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis.conf",
          "type": "blob",
          "size": 60.3486328125,
          "content": "# Redis configuration file example.\n#\n# Note that in order to read the configuration file, Redis must be\n# started with the file path as first argument:\n#\n# ./redis-server /path/to/redis.conf\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis servers but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# Notice option \"include\" won't be rewritten by command \"CONFIG REWRITE\"\n# from admin or Redis Sentinel. Since Redis always uses the last processed\n# line as value of a configuration directive, you'd better put includes\n# at the beginning of this file to avoid overwriting config change at runtime.\n#\n# If instead you are interested in using includes to override configuration\n# options, it is better to use include as the last line.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n\n################################## MODULES #####################################\n\n# Load modules at startup. If the server is not able to load modules\n# it will abort. It is possible to use multiple loadmodule directives.\n#\n# loadmodule /path/to/my_module.so\n# loadmodule /path/to/other_module.so\n\n################################## NETWORK #####################################\n\n# By default, if no \"bind\" configuration directive is specified, Redis listens\n# for connections from all the network interfaces available on the server.\n# It is possible to listen to just one or multiple selected interfaces using\n# the \"bind\" configuration directive, followed by one or more IP addresses.\n#\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1\n# bind 127.0.0.1 ::1\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only into\n# the IPv4 loopback interface address (this means Redis will be able to\n# accept connections only from clients running into the same computer it\n# is running).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# JUST COMMENT THE FOLLOWING LINE.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nbind 127.0.0.1\n\n# Protected mode is a layer of security protection, in order to avoid that\n# Redis instances left open on the internet are accessed and exploited.\n#\n# When protected mode is on and if:\n#\n# 1) The server is not binding explicitly to a set of addresses using the\n#    \"bind\" directive.\n# 2) No password is configured.\n#\n# The server only accepts connections from clients connecting from the\n# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain\n# sockets.\n#\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured, nor a specific set of interfaces\n# are explicitly listed using the \"bind\" directive.\nprotected-mode yes\n\n# Accept connections on the specified port, default is 6379 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# TCP listen() backlog.\n#\n# In high requests-per-second environments you need an high backlog in order\n# to avoid slow clients connections issues. Note that the Linux kernel\n# will silently truncate it to the value of /proc/sys/net/core/somaxconn so\n# make sure to raise both the value of somaxconn and tcp_max_syn_backlog\n# in order to get the desired effect.\ntcp-backlog 511\n\n# Unix socket.\n#\n# Specify the path for the Unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /tmp/redis.sock\n# unixsocketperm 700\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Take the connection alive from the point of view of network\n#    equipment in the middle.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 300 seconds, which is the new\n# Redis default starting with Redis 3.2.1.\ntcp-keepalive 300\n\n################################# GENERAL #####################################\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\ndaemonize no\n\n# If you run Redis from upstart or systemd, Redis can interact with your\n# supervision tree. Options:\n#   supervised no      - no supervision interaction\n#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode\n#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET\n#   supervised auto    - detect upstart or systemd method based on\n#                        UPSTART_JOB or NOTIFY_SOCKET environment variables\n# Note: these supervision methods only signal \"process is ready.\"\n#       They do not enable continuous liveness pings back to your supervisor.\nsupervised no\n\n# If a pid file is specified, Redis writes it where specified at startup\n# and removes it at exit.\n#\n# When the server runs non daemonized, no pid file is created if none is\n# specified in the configuration. When the server is daemonized, the pid file\n# is used even if not specified, defaulting to \"/var/run/redis.pid\".\n#\n# Creating a pid file is best effort: if Redis is not able to create it\n# nothing bad happens, the server will start and run normally.\npidfile /var/run/redis_6379.pid\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also the empty string can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile \"\"\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n# By default Redis shows an ASCII art logo only when started to log to the\n# standard output and if the standard output is a TTY. Basically this means\n# that normally a logo is displayed only in interactive sessions.\n#\n# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo yes\n\n################################ SNAPSHOTTING  ################################\n#\n# Save the DB on disk:\n#\n#   save <seconds> <changes>\n#\n#   Will save the DB if both the given number of seconds and the given\n#   number of write operations against the DB occurred.\n#\n#   In the example below the behaviour will be to save:\n#   after 900 sec (15 min) if at least 1 key changed\n#   after 300 sec (5 min) if at least 10 keys changed\n#   after 60 sec if at least 10000 keys changed\n#\n#   Note: you can disable saving completely by commenting out all \"save\" lines.\n#\n#   It is also possible to remove all the previously configured save\n#   points by adding a save directive with a single empty string argument\n#   like in the following example:\n#\n#   save \"\"\n\nsave 900 1\nsave 300 10\nsave 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in a hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# disaster will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usual even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# For default that's set to 'yes' as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n#\n# The Append Only File will also be created inside this directory.\n#\n# Note that you must specify a directory here, not a file name.\ndir ./\n\n################################# REPLICATION #################################\n\n# Master-Replica replication. Use replicaof to make a Redis instance a copy of\n# another Redis server. A few things to understand ASAP about Redis replication.\n#\n#   +------------------+      +---------------+\n#   |      Master      | ---> |    Replica    |\n#   | (receive writes) |      |  (exact copy) |\n#   +------------------+      +---------------+\n#\n# 1) Redis replication is asynchronous, but you can configure a master to\n#    stop accepting writes if it appears to be not connected with at least\n#    a given number of replicas.\n# 2) Redis replicas are able to perform a partial resynchronization with the\n#    master if the replication link is lost for a relatively small amount of\n#    time. You may want to configure the replication backlog size (see the next\n#    sections of this file) with a sensible value depending on your needs.\n# 3) Replication is automatic and does not need user intervention. After a\n#    network partition replicas automatically try to reconnect to masters\n#    and resynchronize with them.\n#\n# replicaof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the replica to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the replica request.\n#\n# masterauth <master-password>\n\n# When a replica loses its connection with the master, or when the replication\n# is still in progress, the replica can act in two different ways:\n#\n# 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) if replica-serve-stale-data is set to 'no' the replica will reply with\n#    an error \"SYNC with master in progress\" to all the kind of commands\n#    but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG,\n#    SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB,\n#    COMMAND, POST, HOST: and LATENCY.\n#\nreplica-serve-stale-data yes\n\n# You can configure a replica instance to accept writes or not. Writing against\n# a replica instance may be useful to store some ephemeral data (because data\n# written on a replica will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default replicas are read-only.\n#\n# Note: read only replicas are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only replica exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve\n# security of read only replicas using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nreplica-read-only yes\n\n# Replication SYNC strategy: disk or socket.\n#\n# -------------------------------------------------------\n# WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY\n# -------------------------------------------------------\n#\n# New replicas and reconnecting replicas that are not able to continue the replication\n# process just receiving differences, need to do what is called a \"full\n# synchronization\". An RDB file is transmitted from the master to the replicas.\n# The transmission can happen in two different ways:\n#\n# 1) Disk-backed: The Redis master creates a new process that writes the RDB\n#                 file on disk. Later the file is transferred by the parent\n#                 process to the replicas incrementally.\n# 2) Diskless: The Redis master creates a new process that directly writes the\n#              RDB file to replica sockets, without touching the disk at all.\n#\n# With disk-backed replication, while the RDB file is generated, more replicas\n# can be queued and served with the RDB file as soon as the current child producing\n# the RDB file finishes its work. With diskless replication instead once\n# the transfer starts, new replicas arriving will be queued and a new transfer\n# will start when the current one terminates.\n#\n# When diskless replication is used, the master waits a configurable amount of\n# time (in seconds) before starting the transfer in the hope that multiple replicas\n# will arrive and the transfer can be parallelized.\n#\n# With slow disks and fast (large bandwidth) networks, diskless replication\n# works better.\nrepl-diskless-sync no\n\n# When diskless replication is enabled, it is possible to configure the delay\n# the server waits in order to spawn the child that transfers the RDB via socket\n# to the replicas.\n#\n# This is important since once the transfer starts, it is not possible to serve\n# new replicas arriving, that will be queued for the next RDB transfer, so the server\n# waits a delay in order to let more replicas arrive.\n#\n# The delay is specified in seconds, and by default is 5 seconds. To disable\n# it entirely just set it to 0 seconds and the transfer will start ASAP.\nrepl-diskless-sync-delay 5\n\n# Replicas send PINGs to server in a predefined interval. It's possible to change\n# this interval with the repl_ping_replica_period option. The default value is 10\n# seconds.\n#\n# repl-ping-replica-period 10\n\n# The following option sets the replication timeout for:\n#\n# 1) Bulk transfer I/O during SYNC, from the point of view of replica.\n# 2) Master timeout from the point of view of replicas (data, pings).\n# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-replica-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the replica.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the replica socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to replicas. But this can add a delay for\n# the data to appear on the replica side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the replica side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and replicas are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# Set the replication backlog size. The backlog is a buffer that accumulates\n# replica data when replicas are disconnected for some time, so that when a replica\n# wants to reconnect again, often a full resync is not needed, but a partial\n# resync is enough, just passing the portion of data the replica missed while\n# disconnected.\n#\n# The bigger the replication backlog, the longer the time the replica can be\n# disconnected and later be able to perform a partial resynchronization.\n#\n# The backlog is only allocated once there is at least a replica connected.\n#\n# repl-backlog-size 1mb\n\n# After a master has no longer connected replicas for some time, the backlog\n# will be freed. The following option configures the amount of seconds that\n# need to elapse, starting from the time the last replica disconnected, for\n# the backlog buffer to be freed.\n#\n# Note that replicas never free the backlog for timeout, since they may be\n# promoted to masters later, and should be able to correctly \"partially\n# resynchronize\" with the replicas: hence they should always accumulate backlog.\n#\n# A value of 0 means to never release the backlog.\n#\n# repl-backlog-ttl 3600\n\n# The replica priority is an integer number published by Redis in the INFO output.\n# It is used by Redis Sentinel in order to select a replica to promote into a\n# master if the master is no longer working correctly.\n#\n# A replica with a low priority number is considered better for promotion, so\n# for instance if there are three replicas with priority 10, 100, 25 Sentinel will\n# pick the one with priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the replica as not able to perform the\n# role of master, so a replica with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nreplica-priority 100\n\n# It is possible for a master to stop accepting writes if there are less than\n# N replicas connected, having a lag less or equal than M seconds.\n#\n# The N replicas need to be in \"online\" state.\n#\n# The lag in seconds, that must be <= the specified value, is calculated from\n# the last ping received from the replica, that is usually sent every second.\n#\n# This option does not GUARANTEE that N replicas will accept the write, but\n# will limit the window of exposure for lost writes in case not enough replicas\n# are available, to the specified number of seconds.\n#\n# For example to require at least 3 replicas with a lag <= 10 seconds use:\n#\n# min-replicas-to-write 3\n# min-replicas-max-lag 10\n#\n# Setting one or the other to 0 disables the feature.\n#\n# By default min-replicas-to-write is set to 0 (feature disabled) and\n# min-replicas-max-lag is set to 10.\n\n# A Redis master is able to list the address and port of the attached\n# replicas in different ways. For example the \"INFO replication\" section\n# offers this information, which is used, among other tools, by\n# Redis Sentinel in order to discover replica instances.\n# Another place where this info is available is in the output of the\n# \"ROLE\" command of a master.\n#\n# The listed IP and address normally reported by a replica is obtained\n# in the following way:\n#\n#   IP: The address is auto detected by checking the peer address\n#   of the socket used by the replica to connect with the master.\n#\n#   Port: The port is communicated by the replica during the replication\n#   handshake, and is normally the port that the replica is using to\n#   listen for connections.\n#\n# However when port forwarding or Network Address Translation (NAT) is\n# used, the replica may be actually reachable via different IP and port\n# pairs. The following two options can be used by a replica in order to\n# report to its master a specific set of IP and port, so that both INFO\n# and ROLE will report those values.\n#\n# There is no need to use both the options if you need to override just\n# the port or the IP address.\n#\n# replica-announce-ip 5.5.5.5\n# replica-announce-port 1234\n\n################################## SECURITY ###################################\n\n# Require clients to issue AUTH <PASSWORD> before processing any other\n# commands.  This might be useful in environments in which you do not trust\n# others with access to the host running redis-server.\n#\n# This should stay commented out for backward compatibility and because most\n# people do not need auth (e.g. they run their own servers).\n#\n# Warning: since Redis is pretty fast an outside user can try up to\n# 150k passwords per second against a good box. This means that you should\n# use a very strong password otherwise it will be very easy to break.\n#\n# requirepass foobared\n\n# Command renaming.\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to replicas may cause problems.\n\n################################### CLIENTS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# maxclients 10000\n\n############################## MEMORY MANAGEMENT ################################\n\n# Set a memory usage limit to the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# according to the eviction policy selected (see maxmemory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU or LFU cache, or to\n# set a hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have replicas attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the replicas are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of replicas is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have replicas attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for replica\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\n# maxmemory <bytes>\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select among five behaviors:\n#\n# volatile-lru -> Evict using approximated LRU among the keys with an expire set.\n# allkeys-lru -> Evict any key using approximated LRU.\n# volatile-lfu -> Evict using approximated LFU among the keys with an expire set.\n# allkeys-lfu -> Evict any key using approximated LFU.\n# volatile-random -> Remove a random key among the ones with an expire set.\n# allkeys-random -> Remove a random key, any key.\n# volatile-ttl -> Remove the key with the nearest expire time (minor TTL)\n# noeviction -> Don't evict anything, just return an error on write operations.\n#\n# LRU means Least Recently Used\n# LFU means Least Frequently Used\n#\n# Both LRU, LFU and volatile-ttl are implemented using approximated\n# randomized algorithms.\n#\n# Note: with any of the above policies, Redis will return an error on write\n#       operations, when there are no suitable keys for eviction.\n#\n#       At the date of writing these commands are: set setnx setex append\n#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n#       getset mset msetnx exec sort\n#\n# The default is:\n#\n# maxmemory-policy noeviction\n\n# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can tune it for speed or\n# accuracy. For default Redis will check five keys and pick the one that was\n# used less recently, you can change the sample size using the following\n# configuration directive.\n#\n# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n\n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\n# (unless it is promoted to master after a failover or manually). It means\n# that the eviction of keys will be just handled by the master, sending the\n# DEL commands to the replica as keys evict in the master side.\n#\n# This behavior ensures that masters and replicas stay consistent, and is usually\n# what you want, however if your replica is writable, or you want the replica to have\n# a different memory setting, and you are sure all the writes performed to the\n# replica are idempotent, then you may change this default (but be sure to understand\n# what you are doing).\n#\n# Note that since the replica by default does not evict, it may end using more\n# memory than the one set via maxmemory (there are certain buffers that may\n# be larger on the replica, or data structures may sometimes take more memory and so\n# forth). So make sure you monitor your replicas and make sure they have enough\n# memory to never hit a real out-of-memory condition before the master hits\n# the configured maxmemory setting.\n#\n# replica-ignore-maxmemory yes\n\n############################# LAZY FREEING ####################################\n\n# Redis has two primitives to delete keys. One is called DEL and is a blocking\n# deletion of the object. It means that the server stops processing new commands\n# in order to reclaim all the memory associated with an object in a synchronous\n# way. If the key deleted is associated with a small object, the time needed\n# in order to execute the DEL command is very small and comparable to most other\n# O(1) or O(log_N) commands in Redis. However if the key is associated with an\n# aggregated value containing millions of elements, the server can block for\n# a long time (even seconds) in order to complete the operation.\n#\n# For the above reasons Redis also offers non blocking deletion primitives\n# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and\n# FLUSHDB commands, in order to reclaim memory in background. Those commands\n# are executed in constant time. Another thread will incrementally free the\n# object in the background as fast as possible.\n#\n# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.\n# It's up to the design of the application to understand when it is a good\n# idea to use one or the other. However the Redis server sometimes has to\n# delete keys or flush the whole database as a side effect of other operations.\n# Specifically Redis deletes objects independently of a user call in the\n# following scenarios:\n#\n# 1) On eviction, because of the maxmemory and maxmemory policy configurations,\n#    in order to make room for new data, without going over the specified\n#    memory limit.\n# 2) Because of expire: when a key with an associated time to live (see the\n#    EXPIRE command) must be deleted from memory.\n# 3) Because of a side effect of a command that stores data on a key that may\n#    already exist. For example the RENAME command may delete the old key\n#    content when it is replaced with another one. Similarly SUNIONSTORE\n#    or SORT with STORE option may delete existing keys. The SET command\n#    itself removes any old content of the specified key in order to replace\n#    it with the specified string.\n# 4) During replication, when a replica performs a full resynchronization with\n#    its master, the content of the whole database is removed in order to\n#    load the RDB file just transferred.\n#\n# In all the above cases the default is to delete objects in a blocking way,\n# like if DEL was called. However you can configure each case specifically\n# in order to instead release memory in a non-blocking way like if UNLINK\n# was called, using the following configuration directives:\n\nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check http://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n\nappendfilename \"appendonly.aof\"\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead of waiting for more data in the output buffer. Some OS will really flush\n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log. Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n#\n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\n\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n#\n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n# An AOF file may be found to be truncated at the end during the Redis\n# startup process, when the AOF data gets loaded back into memory.\n# This may happen when the system where Redis is running\n# crashes, especially when an ext4 filesystem is mounted without the\n# data=ordered option (however this can't happen when Redis itself\n# crashes or aborts but the operating system still works correctly).\n#\n# Redis can either exit with an error when this happens, or load as much\n# data as possible (the default now) and start if the AOF file is found\n# to be truncated at the end. The following option controls this behavior.\n#\n# If aof-load-truncated is set to yes, a truncated AOF file is loaded and\n# the Redis server starts emitting a log to inform the user of the event.\n# Otherwise if the option is set to no, the server aborts with an error\n# and refuses to start. When the option is set to no, the user requires\n# to fix the AOF file using the \"redis-check-aof\" utility before to restart\n# the server.\n#\n# Note that if the AOF file will be found to be corrupted in the middle\n# the server will still exit with an error. This option only applies when\n# Redis will try to read more data from the AOF file but not enough bytes\n# will be found.\naof-load-truncated yes\n\n# When rewriting the AOF file, Redis is able to use an RDB preamble in the\n# AOF file for faster rewrites and recoveries. When this option is turned\n# on the rewritten AOF file is composed of two different stanzas:\n#\n#   [RDB file][AOF tail]\n#\n# When loading Redis recognizes that the AOF file starts with the \"REDIS\"\n# string and loads the prefixed RDB file, and continues loading the AOF\n# tail.\naof-use-rdb-preamble yes\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceeds the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet called write commands. The second\n# is the only way to shut down the server in the case a write command was\n# already issued by the script but the user doesn't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################ REDIS CLUSTER  ###############################\n\n# Normal Redis instances can't be part of a Redis Cluster; only nodes that are\n# started as cluster nodes can. In order to start a Redis instance as a\n# cluster node enable the cluster support uncommenting the following:\n#\n# cluster-enabled yes\n\n# Every cluster node has a cluster configuration file. This file is not\n# intended to be edited by hand. It is created and updated by Redis nodes.\n# Every Redis Cluster node requires a different cluster configuration file.\n# Make sure that instances running in the same system do not have\n# overlapping cluster configuration file names.\n#\n# cluster-config-file nodes-6379.conf\n\n# Cluster node timeout is the amount of milliseconds a node must be unreachable\n# for it to be considered in failure state.\n# Most other internal time limits are multiple of the node timeout.\n#\n# cluster-node-timeout 15000\n\n# A replica of a failing master will avoid to start a failover if its data\n# looks too old.\n#\n# There is no simple way for a replica to actually have an exact measure of\n# its \"data age\", so the following two checks are performed:\n#\n# 1) If there are multiple replicas able to failover, they exchange messages\n#    in order to try to give an advantage to the replica with the best\n#    replication offset (more data from the master processed).\n#    Replicas will try to get their rank by offset, and apply to the start\n#    of the failover a delay proportional to their rank.\n#\n# 2) Every single replica computes the time of the last interaction with\n#    its master. This can be the last ping or command received (if the master\n#    is still in the \"connected\" state), or the time that elapsed since the\n#    disconnection with the master (if the replication link is currently down).\n#    If the last interaction is too old, the replica will not try to failover\n#    at all.\n#\n# The point \"2\" can be tuned by user. Specifically a replica will not perform\n# the failover if, since the last interaction with the master, the time\n# elapsed is greater than:\n#\n#   (node-timeout * replica-validity-factor) + repl-ping-replica-period\n#\n# So for example if node-timeout is 30 seconds, and the replica-validity-factor\n# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the\n# replica will not try to failover if it was not able to talk with the master\n# for longer than 310 seconds.\n#\n# A large replica-validity-factor may allow replicas with too old data to failover\n# a master, while a too small value may prevent the cluster from being able to\n# elect a replica at all.\n#\n# For maximum availability, it is possible to set the replica-validity-factor\n# to a value of 0, which means, that replicas will always try to failover the\n# master regardless of the last time they interacted with the master.\n# (However they'll always try to apply a delay proportional to their\n# offset rank).\n#\n# Zero is the only value able to guarantee that when all the partitions heal\n# the cluster will always be able to continue.\n#\n# cluster-replica-validity-factor 10\n\n# Cluster replicas are able to migrate to orphaned masters, that are masters\n# that are left without working replicas. This improves the cluster ability\n# to resist to failures as otherwise an orphaned master can't be failed over\n# in case of failure if it has no working replicas.\n#\n# Replicas migrate to orphaned masters only if there are still at least a\n# given number of other working replicas for their old master. This number\n# is the \"migration barrier\". A migration barrier of 1 means that a replica\n# will migrate only if there is at least 1 other working replica for its master\n# and so forth. It usually reflects the number of replicas you want for every\n# master in your cluster.\n#\n# Default is 1 (replicas migrate only if their masters remain with at least\n# one replica). To disable migration just set it to a very large value.\n# A value of 0 can be set but is useful only for debugging and dangerous\n# in production.\n#\n# cluster-migration-barrier 1\n\n# By default Redis Cluster nodes stop accepting queries if they detect there\n# is at least an hash slot uncovered (no available node is serving it).\n# This way if the cluster is partially down (for example a range of hash slots\n# are no longer covered) all the cluster becomes, eventually, unavailable.\n# It automatically returns available as soon as all the slots are covered again.\n#\n# However sometimes you want the subset of the cluster which is working,\n# to continue to accept queries for the part of the key space that is still\n# covered. In order to do so, just set the cluster-require-full-coverage\n# option to no.\n#\n# cluster-require-full-coverage yes\n\n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the master can still perform a\n# manual failover, if forced to do so.\n#\n# This is useful in different scenarios, especially in the case of multiple\n# data center operations, where we want one side to never be promoted if not\n# in the case of a total DC failure.\n#\n# cluster-replica-no-failover no\n\n# In order to setup your cluster make sure to read the documentation\n# available at http://redis.io web site.\n\n########################## CLUSTER DOCKER/NAT support  ########################\n\n# In certain deployments, Redis Cluster nodes address discovery fails, because\n# addresses are NAT-ted or because ports are forwarded (the typical case is\n# Docker and other containers).\n#\n# In order to make Redis Cluster working in such environments, a static\n# configuration where each node knows its public address is needed. The\n# following two options are used for this scope, and are:\n#\n# * cluster-announce-ip\n# * cluster-announce-port\n# * cluster-announce-bus-port\n#\n# Each instruct the node about its address, client port, and cluster message\n# bus port. The information is then published in the header of the bus packets\n# so that other nodes will be able to correctly map the address of the node\n# publishing the information.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection\n# will be used instead.\n#\n# Note that when remapped, the bus port may not be at the fixed offset of\n# clients port + 10000, so you can specify any port and bus-port depending\n# on how they get remapped. If the bus-port is not set, a fixed offset of\n# 10000 will be used as usually.\n#\n# Example:\n#\n# cluster-announce-ip 10.1.1.5\n# cluster-announce-port 6379\n# cluster-announce-bus-port 6380\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n#\n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n################################ LATENCY MONITOR ##############################\n\n# The Redis latency monitoring subsystem samples different operations\n# at runtime in order to collect data related to possible sources of\n# latency of a Redis instance.\n#\n# Via the LATENCY command this information is available to the user that can\n# print graphs and obtain reports.\n#\n# The system only logs operations that were performed in a time equal or\n# greater than the amount of milliseconds specified via the\n# latency-monitor-threshold configuration directive. When its value is set\n# to zero, the latency monitor is turned off.\n#\n# By default latency monitoring is disabled since it is mostly not needed\n# if you don't have latency issues, and collecting data has a performance\n# impact, that while very small, can be measured under big load. Latency\n# monitoring can easily be enabled at runtime using the command\n# \"CONFIG SET latency-monitor-threshold <milliseconds>\" if needed.\nlatency-monitor-threshold 0\n\n############################# EVENT NOTIFICATION ##############################\n\n# Redis can notify Pub/Sub clients about events happening in the key space.\n# This feature is documented at http://redis.io/topics/notifications\n#\n# For instance if keyspace events notification is enabled, and a client\n# performs a DEL operation on key \"foo\" stored in the Database 0, two\n# messages will be published via Pub/Sub:\n#\n# PUBLISH __keyspace@0__:foo del\n# PUBLISH __keyevent@0__:del foo\n#\n# It is possible to select the events that Redis will notify among a set\n# of classes. Every class is identified by a single character:\n#\n#  K     Keyspace events, published with __keyspace@<db>__ prefix.\n#  E     Keyevent events, published with __keyevent@<db>__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  A     Alias for g$lshzxe, so that the \"AKE\" string means all the events.\n#\n#  The \"notify-keyspace-events\" takes as argument a string that is composed\n#  of zero or multiple characters. The empty string means that notifications\n#  are disabled.\n#\n#  Example: to enable list and generic events, from the point of view of the\n#           event name, use:\n#\n#  notify-keyspace-events Elg\n#\n#  Example 2: to get the stream of the expired keys subscribing to channel\n#             name __keyevent@0__:expired use:\n#\n#  notify-keyspace-events Ex\n#\n#  By default all notifications are disabled because most users don't need\n#  this feature and the feature has some overhead. Note that if you don't\n#  specify at least one of K or E, no events will be delivered.\nnotify-keyspace-events \"\"\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Lists are also encoded in a special way to save a lot of space.\n# The number of entries allowed per internal list node can be specified\n# as a fixed maximum size or a maximum number of elements.\n# For a fixed maximum size, use -5 through -1, meaning:\n# -5: max size: 64 Kb  <-- not recommended for normal workloads\n# -4: max size: 32 Kb  <-- not recommended\n# -3: max size: 16 Kb  <-- probably not recommended\n# -2: max size: 8 Kb   <-- good\n# -1: max size: 4 Kb   <-- good\n# Positive numbers mean store up to _exactly_ that number of elements\n# per list node.\n# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),\n# but if your use case is unique, adjust the settings as necessary.\nlist-max-ziplist-size -2\n\n# Lists may also be compressed.\n# Compress depth is the number of quicklist ziplist nodes from *each* side of\n# the list to *exclude* from compression.  The head and tail of the list\n# are always uncompressed for fast push/pop operations.  Settings are:\n# 0: disable all list compression\n# 1: depth 1 means \"don't start compressing until after 1 node into the list,\n#    going from either the head or tail\"\n#    So: [head]->node->node->...->node->[tail]\n#    [head], [tail] will always be uncompressed; inner nodes will compress.\n# 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n#    2 here means: don't compress head or head->next or tail->prev or tail,\n#    but compress all nodes between them.\n# 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n# etc.\nlist-compress-depth 0\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happen to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# HyperLogLog sparse representation bytes limit. The limit includes the\n# 16 bytes header. When an HyperLogLog using the sparse representation crosses\n# this limit, it is converted into the dense representation.\n#\n# A value greater than 16000 is totally useless, since at that point the\n# dense representation is more memory efficient.\n#\n# The suggested value is ~ 3000 in order to have the benefits of\n# the space efficient encoding without slowing down too much PFADD,\n# which is O(N) with the sparse encoding. The value can be raised to\n# ~ 10000 when CPU is not a concern, but space is, and the data set is\n# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.\nhll-sparse-max-bytes 3000\n\n# Streams macro node max size / items. The stream data structure is a radix\n# tree of big nodes that encode multiple items inside. Using this configuration\n# it is possible to configure how big a single node can be in bytes, and the\n# maximum number of items it may contain before switching to a new node when\n# appending new stream entries. If any of the following settings are set to\n# zero, the limit is ignored, so for instance it is possible to set just a\n# max entires limit by setting max-bytes to 0 and max-entries to the desired\n# value.\nstream-node-max-bytes 4096\nstream-node-max-entries 100\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into a hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n#\n# The default is to use this millisecond 10 times every second in order to\n# actively rehash the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply from time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients including MONITOR clients\n# replica  -> replica clients\n# pubsub -> clients subscribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and replica clients, since\n# subscribers and replicas receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Client query buffers accumulate new commands. They are limited to a fixed\n# amount by default in order to avoid that a protocol desynchronization (for\n# instance due to a bug in the client) will lead to unbound memory usage in\n# the query buffer. However you can configure it here if you have very special\n# needs, such us huge multi/exec requests or alike.\n#\n# client-query-buffer-limit 1gb\n\n# In the Redis protocol, bulk requests, that are, elements representing single\n# strings, are normally limited ot 512 mb. However you can change this limit\n# here.\n#\n# proto-max-bulk-len 512mb\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeout, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are performed with the same frequency, but Redis checks for\n# tasks to perform according to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# Normally it is useful to have an HZ value which is proportional to the\n# number of clients connected. This is useful in order, for instance, to\n# avoid too many clients are processed for each background task invocation\n# in order to avoid latency spikes.\n#\n# Since the default HZ value by default is conservatively set to 10, Redis\n# offers, and enables by default, the ability to use an adaptive HZ value\n# which will temporary raise when there are many connected clients.\n#\n# When dynamic HZ is enabled, the actual configured HZ will be used as\n# as a baseline, but multiples of the configured HZ value will be actually\n# used as needed once more clients are connected. In this way an idle\n# instance will use very little CPU time while a busy instance will be\n# more responsive.\ndynamic-hz yes\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n# When redis saves RDB file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\nrdb-save-incremental-fsync yes\n\n# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good\n# idea to start with the default settings and only change them after investigating\n# how to improve the performances and how the keys LFU change over time, which\n# is possible to inspect via the OBJECT FREQ command.\n#\n# There are two tunable parameters in the Redis LFU implementation: the\n# counter logarithm factor and the counter decay time. It is important to\n# understand what the two parameters mean before changing them.\n#\n# The LFU counter is just 8 bits per key, it's maximum value is 255, so Redis\n# uses a probabilistic increment with logarithmic behavior. Given the value\n# of the old counter, when a key is accessed, the counter is incremented in\n# this way:\n#\n# 1. A random number R between 0 and 1 is extracted.\n# 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n# 3. The counter is incremented only if R < P.\n#\n# The default lfu-log-factor is 10. This is a table of how the frequency\n# counter changes with a different number of accesses with different\n# logarithmic factors:\n#\n# +--------+------------+------------+------------+------------+------------+\n# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n# +--------+------------+------------+------------+------------+------------+\n# | 0      | 104        | 255        | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 1      | 18         | 49         | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 10     | 10         | 18         | 142        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 100    | 8          | 11         | 49         | 143        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n#\n# NOTE: The above table was obtained by running the following commands:\n#\n#   redis-benchmark -n 1000000 incr foo\n#   redis-cli object freq foo\n#\n# NOTE 2: The counter initial value is 5 in order to give new objects a chance\n# to accumulate hits.\n#\n# The counter decay time is the time, in minutes, that must elapse in order\n# for the key counter to be divided by two (or decremented if it has a value\n# less <= 10).\n#\n# The default value for the lfu-decay-time is 1. A Special value of 0 means to\n# decay the counter every time it happens to be scanned.\n#\n# lfu-log-factor 10\n# lfu-decay-time 1\n\n########################### ACTIVE DEFRAGMENTATION #######################\n#\n# WARNING THIS FEATURE IS EXPERIMENTAL. However it was stress tested\n# even in production and manually tested by multiple engineers for some\n# time.\n#\n# What is active defragmentation?\n# -------------------------------\n#\n# Active (online) defragmentation allows a Redis server to compact the\n# spaces left between small allocations and deallocations of data in memory,\n# thus allowing to reclaim back memory.\n#\n# Fragmentation is a natural process that happens with every allocator (but\n# less so with Jemalloc, fortunately) and certain workloads. Normally a server\n# restart is needed in order to lower the fragmentation, or at least to flush\n# away all the data and create it again. However thanks to this feature\n# implemented by Oran Agra for Redis 4.0 this process can happen at runtime\n# in an \"hot\" way, while the server is running.\n#\n# Basically when the fragmentation is over a certain level (see the\n# configuration options below) Redis will start to create new copies of the\n# values in contiguous memory regions by exploiting certain specific Jemalloc\n# features (in order to understand if an allocation is causing fragmentation\n# and to allocate it in a better place), and at the same time, will release the\n# old copies of the data. This process, repeated incrementally for all the keys\n# will cause the fragmentation to drop back to normal values.\n#\n# Important things to understand:\n#\n# 1. This feature is disabled by default, and only works if you compiled Redis\n#    to use the copy of Jemalloc we ship with the source code of Redis.\n#    This is the default with Linux builds.\n#\n# 2. You never need to enable this feature if you don't have fragmentation\n#    issues.\n#\n# 3. Once you experience fragmentation, you can enable this feature when\n#    needed with the command \"CONFIG SET activedefrag yes\".\n#\n# The configuration parameters are able to fine tune the behavior of the\n# defragmentation process. If you are not sure about what they mean it is\n# a good idea to leave the defaults untouched.\n\n# Enabled active defragmentation\n# activedefrag yes\n\n# Minimum amount of fragmentation waste to start active defrag\n# active-defrag-ignore-bytes 100mb\n\n# Minimum percentage of fragmentation to start active defrag\n# active-defrag-threshold-lower 10\n\n# Maximum percentage of fragmentation at which we use maximum effort\n# active-defrag-threshold-upper 100\n\n# Minimal effort for defrag in CPU percentage\n# active-defrag-cycle-min 5\n\n# Maximal effort for defrag in CPU percentage\n# active-defrag-cycle-max 75\n\n# Maximum number of set/hash/zset/list fields that will be processed from\n# the main dictionary scan\n# active-defrag-max-scan-fields 1000\n\n"
        },
        {
          "name": "runtest",
          "type": "blob",
          "size": 0.2685546875,
          "content": "#!/bin/sh\nTCL_VERSIONS=\"8.5 8.6\"\nTCLSH=\"\"\n\nfor VERSION in $TCL_VERSIONS; do\n\tTCL=`which tclsh$VERSION 2>/dev/null` && TCLSH=$TCL\ndone\n\nif [ -z $TCLSH ]\nthen\n    echo \"You need tcl 8.5 or newer in order to run the Redis test\"\n    exit 1\nfi\n$TCLSH tests/test_helper.tcl \"${@}\"\n"
        },
        {
          "name": "runtest-cluster",
          "type": "blob",
          "size": 0.2734375,
          "content": "#!/bin/sh\nTCL_VERSIONS=\"8.5 8.6\"\nTCLSH=\"\"\n\nfor VERSION in $TCL_VERSIONS; do\n\tTCL=`which tclsh$VERSION 2>/dev/null` && TCLSH=$TCL\ndone\n\nif [ -z $TCLSH ]\nthen\n    echo \"You need tcl 8.5 or newer in order to run the Redis Sentinel test\"\n    exit 1\nfi\n$TCLSH tests/cluster/run.tcl $*\n"
        },
        {
          "name": "runtest-sentinel",
          "type": "blob",
          "size": 0.2744140625,
          "content": "#!/bin/sh\nTCL_VERSIONS=\"8.5 8.6\"\nTCLSH=\"\"\n\nfor VERSION in $TCL_VERSIONS; do\n\tTCL=`which tclsh$VERSION 2>/dev/null` && TCLSH=$TCL\ndone\n\nif [ -z $TCLSH ]\nthen\n    echo \"You need tcl 8.5 or newer in order to run the Redis Sentinel test\"\n    exit 1\nfi\n$TCLSH tests/sentinel/run.tcl $*\n"
        },
        {
          "name": "sentinel.conf",
          "type": "blob",
          "size": 9.482421875,
          "content": "# Example sentinel.conf\n\n# *** IMPORTANT ***\n#\n# By default Sentinel will not be reachable from interfaces different than\n# localhost, either use the 'bind' directive to bind to a list of network\n# interfaces, or disable protected mode with \"protected-mode no\" by\n# adding it to this configuration file.\n#\n# Before doing that MAKE SURE the instance is protected from the outside\n# world via firewalling or other means.\n#\n# For example you may use one of the following:\n#\n# bind 127.0.0.1 192.168.1.1\n#\n# protected-mode no\n\n# port <sentinel-port>\n# The port that this sentinel instance will run on\nport 26379\n\n# By default Redis Sentinel does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis-sentinel.pid when\n# daemonized.\ndaemonize no\n\n# When running daemonized, Redis Sentinel writes a pid file in\n# /var/run/redis-sentinel.pid by default. You can specify a custom pid file\n# location here.\npidfile /var/run/redis-sentinel.pid\n\n# Specify the log file name. Also the empty string can be used to force\n# Sentinel to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile \"\"\n\n# sentinel announce-ip <ip>\n# sentinel announce-port <port>\n#\n# The above two configuration directives are useful in environments where,\n# because of NAT, Sentinel is reachable from outside via a non-local address.\n#\n# When announce-ip is provided, the Sentinel will claim the specified IP address\n# in HELLO messages used to gossip its presence, instead of auto-detecting the\n# local address as it usually does.\n#\n# Similarly when announce-port is provided and is valid and non-zero, Sentinel\n# will announce the specified TCP port.\n#\n# The two options don't need to be used together, if only announce-ip is\n# provided, the Sentinel will announce the specified IP and the server port\n# as specified by the \"port\" option. If only announce-port is provided, the\n# Sentinel will announce the auto-detected local IP and the specified port.\n#\n# Example:\n#\n# sentinel announce-ip 1.2.3.4\n\n# dir <working-directory>\n# Every long running process should have a well-defined working directory.\n# For Redis Sentinel to chdir to /tmp at startup is the simplest thing\n# for the process to don't interfere with administrative tasks such as\n# unmounting filesystems.\ndir /tmp\n\n# sentinel monitor <master-name> <ip> <redis-port> <quorum>\n#\n# Tells Sentinel to monitor this master, and to consider it in O_DOWN\n# (Objectively Down) state only if at least <quorum> sentinels agree.\n#\n# Note that whatever is the ODOWN quorum, a Sentinel will require to\n# be elected by the majority of the known Sentinels in order to\n# start a failover, so no failover can be performed in minority.\n#\n# Replicas are auto-discovered, so you don't need to specify replicas in\n# any way. Sentinel itself will rewrite this configuration file adding\n# the replicas using additional configuration options.\n# Also note that the configuration file is rewritten when a\n# replica is promoted to master.\n#\n# Note: master name should not include special characters or spaces.\n# The valid charset is A-z 0-9 and the three characters \".-_\".\nsentinel monitor mymaster 127.0.0.1 6379 2\n\n# sentinel auth-pass <master-name> <password>\n#\n# Set the password to use to authenticate with the master and replicas.\n# Useful if there is a password set in the Redis instances to monitor.\n#\n# Note that the master password is also used for replicas, so it is not\n# possible to set a different password in masters and replicas instances\n# if you want to be able to monitor these instances with Sentinel.\n#\n# However you can have Redis instances without the authentication enabled\n# mixed with Redis instances requiring the authentication (as long as the\n# password set is the same for all the instances requiring the password) as\n# the AUTH command will have no effect in Redis instances with authentication\n# switched off.\n#\n# Example:\n#\n# sentinel auth-pass mymaster MySUPER--secret-0123passw0rd\n\n# sentinel down-after-milliseconds <master-name> <milliseconds>\n#\n# Number of milliseconds the master (or any attached replica or sentinel) should\n# be unreachable (as in, not acceptable reply to PING, continuously, for the\n# specified period) in order to consider it in S_DOWN state (Subjectively\n# Down).\n#\n# Default is 30 seconds.\nsentinel down-after-milliseconds mymaster 30000\n\n# sentinel parallel-syncs <master-name> <numreplicas>\n#\n# How many replicas we can reconfigure to point to the new replica simultaneously\n# during the failover. Use a low number if you use the replicas to serve query\n# to avoid that all the replicas will be unreachable at about the same\n# time while performing the synchronization with the master.\nsentinel parallel-syncs mymaster 1\n\n# sentinel failover-timeout <master-name> <milliseconds>\n#\n# Specifies the failover timeout in milliseconds. It is used in many ways:\n#\n# - The time needed to re-start a failover after a previous failover was\n#   already tried against the same master by a given Sentinel, is two\n#   times the failover timeout.\n#\n# - The time needed for a replica replicating to a wrong master according\n#   to a Sentinel current configuration, to be forced to replicate\n#   with the right master, is exactly the failover timeout (counting since\n#   the moment a Sentinel detected the misconfiguration).\n#\n# - The time needed to cancel a failover that is already in progress but\n#   did not produced any configuration change (SLAVEOF NO ONE yet not\n#   acknowledged by the promoted replica).\n#\n# - The maximum time a failover in progress waits for all the replicas to be\n#   reconfigured as replicas of the new master. However even after this time\n#   the replicas will be reconfigured by the Sentinels anyway, but not with\n#   the exact parallel-syncs progression as specified.\n#\n# Default is 3 minutes.\nsentinel failover-timeout mymaster 180000\n\n# SCRIPTS EXECUTION\n#\n# sentinel notification-script and sentinel reconfig-script are used in order\n# to configure scripts that are called to notify the system administrator\n# or to reconfigure clients after a failover. The scripts are executed\n# with the following rules for error handling:\n#\n# If script exits with \"1\" the execution is retried later (up to a maximum\n# number of times currently set to 10).\n#\n# If script exits with \"2\" (or an higher value) the script execution is\n# not retried.\n#\n# If script terminates because it receives a signal the behavior is the same\n# as exit code 1.\n#\n# A script has a maximum running time of 60 seconds. After this limit is\n# reached the script is terminated with a SIGKILL and the execution retried.\n\n# NOTIFICATION SCRIPT\n#\n# sentinel notification-script <master-name> <script-path>\n# \n# Call the specified notification script for any sentinel event that is\n# generated in the WARNING level (for instance -sdown, -odown, and so forth).\n# This script should notify the system administrator via email, SMS, or any\n# other messaging system, that there is something wrong with the monitored\n# Redis systems.\n#\n# The script is called with just two arguments: the first is the event type\n# and the second the event description.\n#\n# The script must exist and be executable in order for sentinel to start if\n# this option is provided.\n#\n# Example:\n#\n# sentinel notification-script mymaster /var/redis/notify.sh\n\n# CLIENTS RECONFIGURATION SCRIPT\n#\n# sentinel client-reconfig-script <master-name> <script-path>\n#\n# When the master changed because of a failover a script can be called in\n# order to perform application-specific tasks to notify the clients that the\n# configuration has changed and the master is at a different address.\n# \n# The following arguments are passed to the script:\n#\n# <master-name> <role> <state> <from-ip> <from-port> <to-ip> <to-port>\n#\n# <state> is currently always \"failover\"\n# <role> is either \"leader\" or \"observer\"\n# \n# The arguments from-ip, from-port, to-ip, to-port are used to communicate\n# the old address of the master and the new address of the elected replica\n# (now a master).\n#\n# This script should be resistant to multiple invocations.\n#\n# Example:\n#\n# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh\n\n# SECURITY\n#\n# By default SENTINEL SET will not be able to change the notification-script\n# and client-reconfig-script at runtime. This avoids a trivial security issue\n# where clients can set the script to anything and trigger a failover in order\n# to get the program executed.\n\nsentinel deny-scripts-reconfig yes\n\n# REDIS COMMANDS RENAMING\n#\n# Sometimes the Redis server has certain commands, that are needed for Sentinel\n# to work correctly, renamed to unguessable strings. This is often the case\n# of CONFIG and SLAVEOF in the context of providers that provide Redis as\n# a service, and don't want the customers to reconfigure the instances outside\n# of the administration console.\n#\n# In such case it is possible to tell Sentinel to use different command names\n# instead of the normal ones. For example if the master \"mymaster\", and the\n# associated replicas, have \"CONFIG\" all renamed to \"GUESSME\", I could use:\n#\n# SENTINEL rename-command mymaster CONFIG GUESSME\n#\n# After such configuration is set, every time Sentinel would use CONFIG it will\n# use GUESSME instead. Note that there is no actual need to respect the command\n# case, so writing \"config guessme\" is the same in the example above.\n#\n# SENTINEL SET can also be used in order to perform this configuration at runtime.\n#\n# In order to set a command back to its original name (undo the renaming), it\n# is possible to just rename a command to itsef:\n#\n# SENTINEL rename-command mymaster CONFIG CONFIG\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}