{
  "metadata": {
    "timestamp": 1736710369199,
    "page": 184,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dokan-dev/dokany",
      "stars": 5358,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.677734375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: false\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     80\nCommentPragmas:  '^'\n\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '$'\nIndentCaseLabels: false\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    false\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\nJavaScriptQuotes: Leave\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8564453125,
          "content": "*.suo\n*.opensdf\n*.sdf\n*.pch\n*.aps\n*.user\n*.cache\nWin7Debug\nWin7Release\nWin8Debug\nWin8Release\nWin8.1Debug\nWin8.1Release\nWin32\nx64\nARM\nARM64\nDebug\nRelease\nipch\nbin\nobj\n*.exe\nReleasePS\n*.zip\n/chocolatey/build/\n/dokan_wix/Bootstrapper/Redist\n/*.opendb\n/dokan_wix/msbuild.log\n/dokan_wix/packages\n/dokan_fuse/build/\n/dokan_fuse/CMakeFiles\n/dokan_fuse/CMakeCache.txt\n/dokan_fuse/cygdokanfuse1.dll\n/dokan_fuse/libdokanfuse1.dll.a\n/dokan_fuse/Makefile\n/dokan_fuse/cmake_install.cmake\n/samples/fuse_mirror/cygdokanfuse.dll\n/dokan_vsix/ProjectTemplates/dokanfs\n/dokan_fuse/libdokanfuse1.dll\n/dokan.VC.db\n/documentations/doc\n/dokan_wix/disk1\n/dokan_wix/setup.inf\n/dokan_wix/setup.rpt\n/fstools\n/winfstest\n/dokan_wix/UpgradeLog.htm\n/.vs\n/dokan_wix/.vs\n/sys/dokanfs_msg.h\n/sys/dokanfs_msg.rc\n/sys/MSG00409.bin\n/dokan_wix/Dokan.cab\n/msbuild.log\n/setup.inf\n/setup.rpt\n*.bak\n*.log\n*.msi\n*.wixpdb"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1181640625,
          "content": "[submodule \"samples/dokan_memory/spdlog\"]\n\tpath = samples/dokan_memfs/spdlog\n\turl = https://github.com/gabime/spdlog.git\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 41.4150390625,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/) and this project adheres to [Semantic Versioning](http://semver.org/).\n\n## [2.2.0.1000] - 2024-08-18\n\n### Changed\n- Installer - Migrate to WiX 5 and Add ARM64 MSI (bundled in the bootstrapper).\n- Library - Keep network drive isolated between users when browsing with UNC path (#1235).\n- FUSE - Add option `-b` to enable Dokan ipc batching option.\n\n### Fixed\n- Library - Fix missing return value on `DokanNetworkProviderUninstall` failure.\n- Memfs - Release instance resources on unmount.\n- Kernel - Prevent MountEntry node access when concurrently removed.\n\n## [2.1.0.1000] - 2023-12-22\n\n### Added\n- Libary - New dismount callbacks were added `DokanRegisterWaitForFileSystemClosed` & `DokanUnregisterWaitForFileSystemClosed`.\n- Dokanctl - New parameters: `/i` and `/r` can now use `a` to install the driver and network provider together.\n\n### Changed\n- Installer - Due to the migration of the `INF` to primitive drivers that no longer accepts creating services for `system32/drivers`, `dokanctl` is now used to install the driver service and register `EventLog`.\n- Kernel - Migrate `INF` to primitive driver and discard service and `EventLog` section.\n- Multiple documentation enhancement.\n- Memfs - Replace deprecated `lock_guard` by `scoped_lock`.\n- Mirror - Use `OVERLAPPED` for offset write and read.\n- Library - Improve failure logging `ResetTimeout` `SendReleaseIRP` `OpenRequestorToken`.\n- Library - Fix `MatchFiles` not checking the pattern when `FindFilesWithPattern` returned `STATUS_NOT_IMPLEMENTED`.\n- Library - Async call `BroadcastSystemMessage` to avoid possible hangs from receiver apps during un/mount.\n\n### Fixed\n- Library - Allow directory listing without open handle (v2 regression).\n- Library - `FindFiles` - Add `.` and `..` at the front of the results.\n- FUSE - Fix bool wrongly used as bitwise operation.\n- FUSE - Fix unsafe uncName buffer usage in dokanOptions.\n- FUSE - Fix unsafe nullptr mountpoint free.\n- Kernel - Fix log BSOD due to incorrect parameter type passed when forward logs are enabled.\n- Kernel - Fix IRP cancellation BSOD.\n- Kernel - Remove from `PendingIrp` list the IRP already freed or canceled during `DokanEventWrite`.\n- Kernel - Fix deadlock due to `CcPurgeCacheSection` closing another `FileObject` for the `FCB` re-entrantly from cleanup.\n\n## [2.0.6.1000] - 2022-10-02\n\n### Changed\n- Library - Improve documentation.\n\n### Fixed\n- Kernel - Don't notify deletion on `FileDispositionInformation` completion but on `Cleanup`.\n\n## [2.0.5.1000] - 2022-07-04\n\n### Changed\n- FUSE - Allow override default max read size by option.\n- Kernel - Remove `UNCName` `CaseInSensitive` prefix during Create.\n- Library - Allow `FindFilesWithPattern` to return `STATUS_NOT_IMPLEMENTED` (like on v1).\n\n### Fixed\n- Kernel - Add `Vcb` null check before marking the volume as having wait events.\n- Library - Use Case sensitive option when listing filtering is done by the library.\n\n## [2.0.4.1000] - 2022-04-30\n\n### Changed\n- Kernel - Remove possible `UNCName` prefix in `Filename` during `CreateFile`.\n- Library - Doc - Recommend `FindFiles` to be implemented.\n- Library - Allow `FindFiles` to be optional by using `FindFilesWithPattern` with wildcard.\n\n### Fixed\n- Library - Move `UserContext` under `OpenCount` lock to reduce incorrect value used when calling `Close`.\n- Kernel - Clear write change flag when FCB is being reused.\n- Kernel - Remove unsupported eject media support (deadlock).\n- FUSE - Update library name in module definition.\n\n## [2.0.3.2000] - 2022-02-27\n\n### Fixed\n- Installer - Regenerate all `GUID` to fix uninstall and conflict with v1.\n\n## [2.0.3.1000] - 2022-02-06\n\n### Added\n- Library - Add 16-128k `IoBatch/EventResult` pool for read and write.\n\n### Changed\n- MemFS - Replace `std::mutex` by `std::shared_mutex`.\n- Library - Detect and use the best number of pulling threads with a minimum of two (unless single thread mode enabled) and a max of 16. Above 16, the io batch is enabled to use the extra threads to execute the possible extra request pulled.\n- Library - Expensive `ZeroMemory` on large Read and Write buffers were removed.\n- Library - Use absolute path for `NetworkProvider` registration `ProviderPath`.\n\n### Fixed\n- Installer - Change driver `GUID` to avoid installer to uninstall v1 files during the installation.\n- Library - Fix incorrect lock hold when manipulating IoBatch.\n- Library - Add lock to avoid `Unmounted` callback to be called multiple times (each pulling thread).\n- MemFS - Fix double instance free on `CTRL+C`.\n\n## [2.0.2.1000] - 2022-02-06\n\n### Fixed\n- Library - Fix `DokanResetTimeout` DokanFileInfo usage.\n- Library - Correctly set PullEventTimeoutMs value.\n- Kernel - Fix notify queue timeout value and timeout detection.\n- Memfs - Fix `SetFileAttributes` behavior.\n- Library - Fix incorrect lock used for DokanOpenInfo `OpenCount` increments.\n\n### Changed\n- Library - Use multiple main pull thread (4 instead of 1) to avoid deadlock during low activity.\n\n## [2.0.1.2000] - 2022-01-28\n\n### Fixed\n- Installer - Set new BundleUpgradeCode for v2.\n- Kernel - Lock Fcb during setFileInfo notify report change\n\n## [2.0.1.1000] - 2022-01-23\n\n### Added\n- Kernel - Use the Rtl API to store DokanFCB in a Adelson-Velsky/Landis(AVL) table\n\n### Fixed\n- Kernel - Fix possible `PullEvents` infinite loop.\n- Kernel - Fix crash when v2 and v1 are installed.\n- Kernel - Make `RemoveSessionDevices` thread safe.\n- Library - Fix `OpenRequestToken` crash when called outside `CreateFile`.\n- Kernel - Fix subfolder property when using mount manager.\n\n### Changed\n- Installer - Allow installation side to side with 1.x.x.\n- Library / Kernel - Enforce UNC usage with network drive option.\n- Memfs - Update mount point in memfs after mount in case it changes.\n- Library - Silence expected failures during unmount and make `DeleteDokanInstance` safer.\n- Memfs - Use the new mount async API.\n- Kernel - Release `NotifyEvent` memory on unmount.\n- Kernel - Use IRP buffer fct for `GetMountPointList`.\n- Kernel - Cleanup `SetInformation` completion and remove `DokanCCB::ERESOURCE`.\n\n## [2.0.0.2000] - 2022-01-01\n\n### Fixed\n- Library - Missing new 2.0.0 API export.\n- Library - Move `DOKAN_FILE_INFO.ProcessingContext` offset in struct to avoid padding issues.\n\n## [2.0.0.1000] - 2021-12-30\n\nSee [here](https://github.com/dokan-dev/dokany/wiki/Update-Dokan-1.1.0-application-to-Dokany-2.0.0) how to migrate an existing > 1.1.0 filesystem to 2.0.0.\n\n### Added\n- Kernel / Library - Introduce Thread & Memory pool to process and pull events. This is highly based on #307 but without the async logic. The reason is to avoid using the kernel `NotificationLoop` that was dispatching requests to workers (userland thread) sequentially since wake up workers have a high cost of thread context switch.\nThe previous logic is nice when you want workers to be async (like #307) but as we have threads (and now even a thread poll) dedicated to pull and process events, there is no issue to make them synchronously wait in kernel for new events and directly take them from the pending request list.\nThe library will start with a single main thread that pulls events by batch and dispatches them to the thread pool but keeps the last one to be executed (or the only one) to be executed on the same thread. Each thread waken will do the same and pull new events at the same time. If none is returned, the thread goes back to sleep and otherwise does the same as the main thread (dispatch and process...etc). Only the main thread waits indefinitely for new events while others wait 100ms in the kernel before returning back to userland.Batching events, thread and memory pool offers a great flexibility of resources especially on heavy load.Thousands of lines of code were changed in the library (thanks again to @Corillian contribution of full rewrite) but the public API hasn't changed much.After running multiple benchmarks against `memfs`, sequential requests are about 10-35% faster but in the real world with the thread pool the perf are way above. @Corillian full rewrite of `FindFiles` actually improved an astonishing +100-250%...crazy.\n- Library - `DokanCreateFileSystem` creates a filesystem like `DokanMain` but is async and will directly return when mount happens. `DokanWaitForFileSystemClosed` will wait until the filesystem is unmount and `DokanIsFileSystemRunning` can be used to check if it is still running. `DokanCloseHandle` will trigger an unmount and wait for it to be completed.\n- Library - `DokanInit` and `DokanShutdown` are two new API that need to be called before creating filesystems and when dokan is no longer needed. They allocate internal mandatory dokan resources.  \n- Kernel / Library - A Volume Security descriptor can now be assigned to `DOKAN_OPTIONS.VolumeSecurityDescriptor` to personalize the volume security permissions.\n- Kernel - `FSCTL_EVENT_PROCESS_N_PULL` replace `IOCTL_EVENT_WAIT` and `IOCTL_EVENT_INFO` to process a possible answer and pull new events.\n- Kernel - If Mount manager is enabled and the drive letter provided is busy, the drive will try to release the drive letter if it owns it. This can be useful during fast mount & unmount. If the drive letter is still busy after that, Mount manager is asked to assign a new one for us and will be provided to userland through `EVENT_DRIVER_INFO.ActualDriveLetter`.\n- Library - `DOKAN_OPERATIONS.Mounted` now has a `MountPoint` param that will return the actual mount point used (see above on why it can be different).\n- Library - `DOKAN_FILE_INFO.ProcessingContext` is a new Dokan reserved field currently used to pass information during a `FindFiles`.\n\n### Changed\n- Kernel - Major API has moved to version 2. This version is not compatible with dokan version 1.x.x.\n- Kernel - Remove legacy Keepalive logic.\n- Kernel - Remove legacy IOCTL.\n- Kernel - Enable `DOKAN_EVENT_ENABLE_FCB_GC` by default and the interval can be set from userland (currently not public).\n- Memfs - Unmount drive when `Ctrl + C` is used.\n- Kernel - Move back `DOKAN_CONTROL` to the private kernel header to avoid sharing kernel variables to userland. Instead, `DOKAN_MOUNT_POINT_INFO` was created for this purpose and taken over in the different userland API that was using `DOKAN_CONTROL`.\n- Library - `DOKAN_OPTION_*` values were reordered and reassigned.\n- Library - `DOKAN_OPTIONS.ThreadCount` was replaced by `DOKAN_OPTIONS.SingleThread` since the library now uses a thread pool that allocats workers depending on workload and the available resources.\n- Library - `PFillFindStreamData` now returns `FALSE` if the buffer is full, otherwise `TRUE`. It also requires to pass the `FindStreamContext` argument received during `FindStreams` instead of the previous `DokanFileInfo`.\n- Library - `DokanGetMountPointList` and `DokanReleaseMountPointList` use the new `DOKAN_MOUNT_POINT_INFO` instead of the now private `DOKAN_CONTROL`.\n- Library - All `DokanNotify*` functions now require the `DOKAN_HANDLE` created by `DokanCreateFileSystem`.\n- Memfs - Pass already processed `stream_names` when adding the node.\n\n### Fixed\n- Library - `DOKAN_EVENT_DISPATCH_DRIVER_LOGS` is now usable to retrieve Kernel logs even on release build due to the batching events now enabled by default.\n\n## [1.5.1.1000] - 2021-11-26\n### Added\n- Mirror - Add an option to personalize the volume name.\n\n### Changed\n- Installer - Add Debug drivers in cab for submission (Driver signature).\n- Dokanctl - Remove non available unmount by id option.\n\n### Fixed\n- Memfs - Invalid create disposition log type.\n- FUSE - Use `stbuf` in `readdir` callback.\n- Kernel - Fix relative rename with Volume device as `RootDirectory` BSOD.\n- Kernel - Return a mount failure and cleanup the devices when the driver fails to set the mount point folder reparse point.\n- Kernel - Reset top-level IRP when creating / deleting reparse points.\n- Kernel - Delete device on `InsertMountEntry` failure.\n\n## [1.5.0.3000] - 2021-05-31\n### Changed\n- Installer - Add Win7 KB4474419 requirements (replace previous KB3033929).\n\n### Fixed\n- Kernel - Fix break exit type no longer having the wanted effect.\n\n## [1.5.0.2000] - 2021-05-26\n### Fixed\n- Kernel - Incorrect eventLength usage for read/flush/security event after merge 981575c.\n\n## [1.5.0.1000] - 2021-05-25\n### Added\n- Kernel - Add AllowIpcBatching option. [Looking for help to implement in the library.](https://github.com/dokan-dev/dokany/issues/981)\n- Kernel - Allow kernel driver logs to be dispatched to userland.\n- Kernel/Library - Add an option to use FSCTL Event type instead of IOCTL with dwDesiredAccess nullified.\n- Kernel - Support Simple / Fully Qualified / Relative rename.\n\n### Changed\n- Kernel - Remove legacy -1 status value conversion.\n- Kernel - Remove unused QueryDeviceRelations.\n- Kernel - Convert `DokanLogInfo` to `DDbgPrint` temporarily in `DokanMountVolume` until we have a better logging solution.\n- Kernel - Remove unused PNP IRP.\n- Kernel/Library - Removing `DOKAN_EVENT_DISABLE_OPLOCKS` flag.\n- Kernel - Centralize Irp Completion & Logging (Begin / End) and wrap request information into a `RequestContext`.\n- Mirror - Use `GetDiskFreeSpaceEx` to support larger volume space.\n- Kernel - Remove legacy mount service IOCTL code.\n- FUSE - Return a valid fuse instance during `fuse_get_context`.\n- Mirror - Enable long path support by default.\n- Kernel - Fill `FILE_NAME_INFORMATION` in Kernel side during `FILE_ALL_INFORMATION`.\n- Kernel - Remove unsupported `FileNetworkPhysicalNameInformation` QueryInformation.\n\n### Fixed\n- Library - Fix rename with double `\\` for drive network shared.\n- FUSE - Reuse `fuse_unmount` during `fuse_exit` to trigger `fuse_loop` to exit after Driver unmount the drive.\n- Kernel - Fix a very rare race condition that make library fail to detect unmount.\n- Kernel - Release CancelRoutine during Create timeout.\n- Kernel - Fix invalid buffer size count when `PREPARE_OUTPUT` is used with types ending with a dynamic size field that are later filled with `AppendVarSizeOutputString`.\n\n## [1.4.1.1000] - 2021-01-14\n### Added\n- Kernel/Library - Added support for `FileIdExtdDirectoryInformation`. Fixes directory listings under WSL2.\n- Kernel/Library - Add `DOKAN_OPTION_CASE_SENSITIVE` mount option.\n- Library - Add `DOKAN_OPTION_ENABLE_UNMOUNT_NETWORK_DRIVE` to allow unmounting network drive from explorer.\n- FUSE - Add removable drive option and use local drive as default type now.\n\n### Changed\n- Library - C++ redistributable dependencies is fully removed for this release.\n- Installer - Remove no longer needed dependency to KB2999226 (VC Redist).\n- Kernel - Change `DOKAN_CONTROL.VolumeDeviceObject` to `ULONG64` for other compiler than MSVC.\n- FUSE - Change default filesystem name to NTFS.\n\n### Fixed\n- Library - Reduce desired access rights for loop device handle and keepalive handle. Avoid some antivirus incompatibility.\n- Library - No longer wait for apps to answer `BroadcastSystemMessage` during mount.\n- Library - Return `STATUS_INVALID_PARAMETER` where appropriate. Fixes directory listings under WSL2.\n- FUSE - Incorrect convertion for MountPoint using chinese characters.\n- MemFS - Fix out of range read when the offset is bigger than the buffer.\n- MemFS - Always remove `FILE_ATTRIBUTE_NORMAL` as we set `FILE_ATTRIBUTE_ARCHIVE` before.\n- MemFS - Correctly handle current session option\n\n## [1.4.0.1000] - 2020-01-06\n### Added\n- MemFS - Add a new FS sample project: dokan_memfs. MemFS is a better example to debug and know the dokan driver/library feature supported and NTFS compliant. The FS pass most of WinFSTest and IFSTest. It looks to be stable enough to be included in the installer. It hasn't been test with real usage but it is expected to run without issue. MemFS is written in c++ and is under MIT license.\n- Installer - You can now find two installers with binaries built with and without VC redistributable. If no issue is reported, the next release will only have without the VC redistributable.\n- Kernel - Support directory path mount with mount manager. \n- Kernel - Add `DokanAllocZero` that Alloc and ZeroMemory buffer size requested sys - Rename `ExAllocatePool` to `DokanAlloc`.\n- Kernel - Add Input IRP Buffer Help macro.\n- Kernel - Use `GET_IRP` for `Type3InputBuffer` and start using Output buffer function helpers for IRP.\n- FUSE - Add mount manager option.\n\n### Changed\n- Kernel - Replace `DOKAN_OPTION_OPTIMIZE_SINGLE_NAME_SEARCH` by `DOKAN_OPTION_ENABLE_FCB_GARBAGE_COLLECTION`. The advantage of the GC approach is that it prevents filter drivers from exponentially slowing down procedures like zip file extraction due to repeatedly rebuilding state that they attach to the FCB header.\n- Kernel - Multiple code refactoring.\n- Kernel - Move and Improve `FixFileNameForReparseMountPoint`.\n- Kernel - `FileNetworkPhysicalNameInformation` now return directly the FileName instead of sending the request to userland.\n- Kernel - `FileAllocationInformation` - return `STATUS_USER_MAPPED`_FILE when trying to truncate a memory mapped file.\n- Kernel - Do not rethrow exception during `EXCEPTION_EXECUTE_HANDLER`.\n- Kernel - During EventRelease directly call `FsRtlNotifyCleanupAll` instead of going through all Fcb & Ccb.\n- Kernel - Change `DokanPrintNTStatus` with limited number of `NTSTATUS` values print to use `DokanGetNTSTATUSStr`. `DokanGetNTSTATUSStr` use `ntstatus_log.inc` that has all ntstatus from <ntstatus.h>.\n- Library - Add support for compiling with GCC.\n- Library - Move `DokanRemoveMountPointEx` to internal header as it is not available to the public API.\n\n### Fixed\n- FUSE - Read keep local filename instance.\n- Installer - Fix incorrect pdb file copied for driver.\n- Library - `DokanNetworkProviderInstall` return earlier if a Reg failure happens and not corrupt the registry.\n- Kernel - Catch `FsRtlNotifyFullReportChange` `STATUS_ACCESS_VIOLATION` exception.\n- Library - Correct newName format when a stream name is renamed. \n\n## [1.3.1.1000] - 2019-12-16\n### Added\n- Kernel - Added support for `FileIdExtdBothDirectoryInformation`, which is required when the target is mapped as a volume into docker containers.\n\n### Changed\n- Kernel - Single build target Win7 / enable new features according to OS during runtime. Remove supported XP/Vista code.\n- Kernel - Only log to event viewer when debug default log is enabled.\n- Library - Clarified documentation of dokan file-change notification functions.\n- Build - Run Code Analysis on all builds of debug build configurations within Visual Studio, but not by default from msbuild.\n- Mirror - Add `GetDiskFreeSpace` UNC as Root support.\n\n### Fixed\n- Library - Incorrect call to `legacyKeepAliveThreadIds` `WaitForObject`.\n- Kernel - `FileNameInformation` - Only concat `UNCName` / `DiskDeviceName` for network devices.\n- FUSE - Infinite loop when using characters from Unicode supplementary planes ('🔈' for example).\n- FUSE - Support `WriteFile` with offset `-1`.\n- FUSE - `get_file` - Do not use the current file shared mode.\n\n## [1.3.0.1000] - 2019-07-24\n### Added\n- Mirror - Use `GetDiskFreeSpace` during `MirrorDokanGetDiskFreeSpace`.\n- Kernel - Add most important log msg to Event Viewer.\n- Kernel - Add `DOKAN_OPTION_DISABLE_OPLOCKS` dokan option.\n- Kernel - Add check that `DeviceControl` are performed on a volume handle and not a file.\n- Kernel - Add `DOKAN_OPTION_OPTIMIZE_SINGLE_NAME_SEARCH` dokan option to speedup Win7 file name normalization.\n- Library - Add functions to notify Dokan Kernel that files in use fs has changed `DokanNotifyCreate / DokanNotifyDelete / DokanNotifyUpdate / DokanNotifyXAttrUpdate / DokanNotifyRename`.\n- SetAssemblyVersion - Now update `DOKAN_MAJOR_API_VERSION`.\n- Kernel - Write - Check total event length is not longer than what we can allocate.\n\n### Changed\n- Use latest WDK & SDK for Windows 10 version 1903 and toolset v142.\n- Installer - Update VCRedistVersion to VS 2019 14.21.27702.\n- Mirror - Improve ShowUsage.\n- Library - `DokanGetMountPointList` now returns his own buffer that need to be released with `DokanReleaseMountPointList`.\n- Kernel - Return proper error status for `DFileSystemControl`.\n- Kernel - Fix OpLocks / Remove FCB Retry lock.\n- Kernel - Use debug mode option to enable lock or/and oplock kernel log.\n- Kernel - Rename `DOKAN_KEEPALIVE_TIMEOUT` to `DOKAN_KEEPALIVE_TIMEOUT_DEFAULT`\n\n### Fixed\n- Kernel - Fix long rename BSOD with network option enabled.\n- Kernel - Fix root rename with 360 antivirus.\n- Library - Use `DbgPrintW` instead of `DbgPrint` when printing wide characters.\n- Library - Add error check for `_vscprintf` and `vsprintf_s` in `DokanDbgPrint`, and `_vscwprintf` and `vswprintf_s` in `DokanDbgPrintW`.\n- Library - Fix `DokanUnmount` possible oob memory.\n- Mirror - Fix possible oob memory during long findfiles path.\n- Mirror - Fix possible oob memory during long DeleteDirectory path.\n- Kernel - Lock global resources during `DokanGetMountPointList` avoid possible BSOD.\n- Kernel - Send correct notify change during `FileRenameInformation` when move to a diff folder.\n- Kernel - Move all `Io ShareAccess` under fcb RW lock.\n- Dokannp - Add leading `\\` to `UNCName` during `NPGetConnection`.\n\n## [1.2.2.1000] - 2019-03-08\n### Added\n- FUSE - Expose allocation unit size and sector size.\n- Kernel - Add new `FileDispositionInformationEx` for Windows 10, version 1709\n\n### Changed\n- Library - Increase `DOKAN_MAX_THREAD` from 15 to 63 for better performance.\n- Kernel - `FileStreamInformation` now return directly `STATUS_NOT_IMPLEMENTED` if `UseAltStream` is disabled.\n- Library - Improve `DokanIsNameInExpression` documentation\n\n### Fixed\n- Kernel - Wrong `szMountPoint->length` usage in `DokanGlobalEventRelease`\n- Kernel - Fix handle KeepAlive calls before device fully started \n\n## [1.2.1.2000] - 2018-12-21\n### Added\n- SetAssemblyVersion - Add update dokan version define\n\n### Fixed\n- Library - Bump Dokan version to 121\n\n## [1.2.1.1000] - 2018-12-18\n### Changed\n- Kernel/Library - Replace keepalive ping event by a single keep alive file handle\n- Cert - Runs with admin rights and checks Secureboot is enabled\n\n### Fixed\n- Kernel - Fix Buffer Overflow by adding mount length path check \n\n## [1.2.0.1000] - 2018-08-09\n### Added\n- Build - Add ARM64\n\n### Changed\n- Installer - Remove .NET dependency.\n- Build - Remove Windows 10 build for ARM\n- Library - Allow usage driver letter `A`\n- Documentation - Add `FSName` notice for `NTFS` & `FAT`\n- Documentation - Add `GetFileSecurity` return `STATUS_NOT_IMPLEMENTED` remark\n- Library - Update `DOKAN_VERSION` to 120 and `DOKAN_MINIMUM_COMPATIBLE_VERSION` to 110\n- Kernel - Only set FO_FILE_MODIFIED for no paging io during write complete\n\n### Fixed\n- Library - Missing session id in `DOKAN_CONTROL` for user space\n- NetworkProvider - UNC paths using only for current session show offline for other session.\n- Installer - Dokan Network Provider - Move back `dokannp1.dll` to `system32` folder and `SysWow64`\n- Mirror - Initialize `userTokenHandle` correctly\n- FUSE -  Return correct status when file is open `FILE_OVERWRITE_IF` or `FILE_OPEN_IF` successfully\n- Kernel - PageIO Dead lock\n- Library - Get correct name (not uppercase) when repase point mount is used\n\n## [1.1.0.2000] - 2018-01-19\n### Fixed\n- Installer - Fix Wrong redist download link rename\n- Installer - Fix vc++ version number displayed\n- Installer - Update message download VC link\n\n## [1.1.0.1000] - 2017-11-28\n### Added\n- Mirror - Add Impersonate Option for Security Enhancement.\n- FUSE - Add read-only option\n- Installer - Add VCRedistVersion variable / Now display version needed\n- Dokanctl - Add usage option /?\n- Kernel / Library - Add New FileRenameInformationEx since Windows 10 RS1\n\n### Changed\n- FUSE - cross-compile 32-bit Cygwin DLL from 64-bit\n- Library - Merge DokanMapStandardToGenericAccess with DokanMapKernelToUserCreateFileFlags\n- Move to VS 2017 / v141 / SDK 10.0.16299.0 / Installer Redist 2017\n\n### Fixed\n- Kernel - Fix current session unmount not releasing the device properly\n- Mirror - Cannot open a read only file for delete \n- Mirror - Fix SetFileAttributes implementation by not updating when FileAttributes is 0x00\n- Installer - Wrong new logo size \n- Kernel - Fixes #616 Only lock when not paging io \n\n## [1.0.5.1000] - 2017-09-19\n### Added\n- Kernel - Add `FILE_NOTIFY_CHANGE_SECURITY` during SetSecurity\n\n### Changed\n- Kernel - Createfile move `DOKAN_DELETE_ON_CLOSE` set flag after create success\n- Kernel - Return access denied for paging file open request\n\n### Fixed\n- Kernel - CreateFile return `STATUS_DELETE_PENDING` for a request without share delete during a pending delete\n- Mirror - `FindClose` is not being called if `GetLastError` returns anything other `ERROR_NO_MORE_FILES`\n\n## [1.0.4.1000] - 2017-08-31\n### Added\n- Library - Support `FileIdFullDirectoryInformation`\n- CI - IFSTest !\n- Kernel - Add `FILE_NOTIFY_CHANGE_LAST_WRITE` in cleanup after write\n- Kernel - Notify file size changed after a write beyond old size\n\n### Changed\n- Mirror -  Query underlying fs for filesystem flags and AND them with mirror default flags.\n\t\t\tGet filesystem name and maximum component length from underlying fs.\n\t\t\tChange default maximum component length from 256 to 255.\n- Library - Doc Add context release info in CreateFile\n- Build - PS Sign - Add env variables required in comments\n- Mirror - Ensure the Security Descriptor length is set in mirror\n- Library - `DokanNetworkProviderUninstall` Make a single call of wcsstr\n- Library - `DokanNetworkProviderUninstall` if `DOKAN_NP_NAME` is already removed return `TRUE`\n- Mirror - Return `STATUS_INVALID_PARAMETER` error when folder is asked to be created with `FILE_ATTRIBUTE_TEMPORARY`\n- Mirror - Always set `FILE_SHARE_READ` for directory to avoid sharing violation for `FindFirstFile`\n- Library - When looking parent folder if we have the right to remove a file, cleanup `FILE_NON_DIRECTORY_FILE`\n- Library - Set proper information for `FILE_OVERWRITE` (`TRUNCATE_EXISTING`) \n- Mirror - Microsoft doc say `TRUNCATE_EXISTING` need GENERIC_WRITE so we add it\n\n### Fixed\n- Installer - Exe not signed\n- Mirror - add `FILE_NAMED_STREAMS` to FileSystemFlags\n- Kernel - Issue #490 #502 #503 #554 #412\n- Library - Fix dokanctl UAC execution level\n- FUSE - Warning due to `DWORD` printed as %d\n- FUSE - Braces warning and remove commented code\n- Kernel - BSOD with verifier enabled\n- Kernel - BSOD during searching the backslash\n- Kernel - Buffer len check `IOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME`\n- Kernel - Fix wrong error return for invalid relative file creation with leading slash\n- Mirror - Return proper error when open a directory with `FILE_NON_DIRECTORY_FILE`\n- Mirror - Cannot overwrite a hidden or system file if flag not set return `STATUS_ACCESS_DENIED`\n- Mirror - Update FileAttributes with previous when `TRUNCATE_EXISTING` file \n\n## [1.0.3.1000] - 2017-03-24\n### Added\n- Installer - WiX: Ship PDB-files for `dokanfuse.dll`.\n- Add Windows on ARM support.\n- FUSE - Add uncname option\n- Mirror - Add optional long path max\n- Library - Add `DefaultGetFileSecurity` when `GetFileSecurity` is not handled by user mode\n\n### Changed\n- Library - Improve some mount error messages.\n- FUSE - Return error when file open as directory with `FILE_NON_DIRECTORY_FILE`.\n- Kernel - Clean all global disk device data in `CleanupGlobalDiskDevice`\n- Kernel - Update mount point if mount manager did not follow our suggestion.\n\n### Fixed\n- Installer - Win10 x86 driver not properly signed for x86 anniversary.\n- Kernel - Fix deadlock in `DokanDispatchCleanup`.\n- Kernel - Do `MmFlushImageSection` if `ImageSectionObject` is set during cleanup.\n- Library - Don't send free'd `DOKAN_OPEN_INFO` pointer to the driver.\n- Library - Fix printf param for unsigned int.\n- Kernel - Add `DokanFreeMdl` for read operation in `DokanCompleteRead`.\n- Kernel - Fix crash issue cause by canceling the copy operation.\n- FUSE - Replace wrong error type returned\n- Library - Change rename fixed buffer to dynamic alloc\n- Library - Rename return directly if `MoveFile` is not implemented\n- Library - Low buffer handling correction on `QueryDirectory`\n- Library - Fix wrong buffer size provided to the kernel in `DokanGetMountPointList`\n- Kernel - Fix `dokanGlobal` wrongly zeroed and clean resource in `DokanUnload`\n- Kernel - Add missing `IoDeleteDevice` when `IoCreateSymbolicLink` fail\n- FUSE - Check for non-empty directories on delete #270.\n- Library - Use `NT_SUCCESS` in `CreateFile`\n\n## [1.0.2.1000] - 2017-01-20\n### Added\n- FUSE - Add libfuse-compatible pkg-config\n- Mirror - Add `DOKAN_OPTION_FILELOCK_USER_MODE` option with `/f`\n\n### Changed\n- FUSE - Use pkg-config for building mirror\n- Kernel - Many improvement allocation stack and heap\n- Kernel - Enable `PAGED_CODE` for `DokanCheckShareAccess`\n- Mirror - Return empty SACL if mirror doesn't have SeSecurityPrivilege\n- Library - Use `DeleteMountPoint` for removing reparse point instead of `DeleteVolumeMountPoint`\n- Library - Remove Redundant control flow jump \n\n### Fixed\n- Driver - Less wide locking\n- Kernel - Align security descriptor to 4-byte boundary in `DokanDispatchSetSecurity`\n- Library - Fix dokan context leak when CreateFile fail \n- Kernel - Fix BSOD. When drive is started using n option and procmon is attached the rename of files in the root folder is not possible\n- Kernel - Relative path rename\n- Library - Write Set correctly the userland NtStatus\n\n## [1.0.1.1000] - 2016-11-04\n### Added\n- Library - `DokanMapStandardToGenericAccess` - Convert `IRP_MJ_CREATE` DesiredAccess to generic rights.\n\n### Changed\n- Driver - Use atomic operations for FCB and CCB flags instead of locks.\n- Update Windows SDK to 10.0.14393\n- Library - Call now `DeleteFile` and `DeleteDirectory` with `DeleteOnClose` set at a delete request OR canceled.\n- Driver -  Double check that the returned security descriptor is valid before returning success on QuerySecurity.\n- Installer - Enable dev tools by default.\n- Driver - Return `STATUS_FILE_LOCKED_WITH_ONLY_READERS` during `PreAcquireForSectionSynchronization` when locked only with readers.\n- Mirror - Open handle when `GetFileInformation` requested after cleanup.\n- Kernel - Remove FCB `Resource` and `MainResource`. Use FCB Header `Resource` instead allocated with LookasideList.\n\n### Fixed\n- Driver - `CcPurgeCacheSection` could cause deadlock when FCB was locked in the same time.\n- Driver - Deadlock on related FCB.\n- FUSE - Race condition in Dokan FUSE.\n- Driver - BSOD issue related to filesystem mount on Windows 10 build 14936.\n- Driver - Unlock FCB during `FsRtlOplockBreakH` to let other request Lock FCB.\n- FUSE - Set correctly Authenticated Users rights (Explorer menu context).\n- Mirror - Reject when trying to open a file as a directory.\n- Driver - Return correct status for `FSCTL_FILESYSTEM_GET_STATISTICS` - Can now net share on Windows Server 2012 R2\n\n## [1.0.0.5000] - 2016-09-20\n### Added\n- MAJOR version to binary name\n- Resource information to library with full dokan version\n- Installer - Move to WiX toolset\n- Library - DokanOption to mount the drive on current session only \n- FUSE - Export utils fonctions\n- FUSE - `daemon_timeout=<milisec>`, background and network option parameter as options. \n- Library - Notify drive arrival/removal\n- Driver - `dokan.inf` to solution - `.cab` file is now build and embedded with installer\n- FUSE Cygwin / Msys2 binaries in installer (optional)\n- FUSE Cygwin mirror as example\n- Driver - log for unknown `IOCTL_STORAGE_QUERY_PROPERTY`\n- Mirror - Use control handler function to gracefully close on Ctrl+C\n- FUSE - handle `SetAllocationSize`\n- Installer - Environement variable to dokan path: `DokanLibrary1` / `DokanLibrary1_LibraryPath_x64` / `DokanLibrary1_LibraryPath_x86`\n- Dokan NP - Totally new Dokan network provider\n- Driver - Oplock implementation\n- Logo Dokan in VSIX\n- Library - Parameters on `DokanGetMountPointList` to only retrieve instances with UNC\n- Mirror - `MirrorDokanGetDiskFreeSpace` as example\n- Driver - Handle `FileFsLabelInformation` (Rename label device name)\n- Library - Handle `GetFileSecurity` callbacks for directories.\n- Library - Default `QueryVolumeInformation` file system name\n- Use WinFSTest as test suits\n- Library - Auto add current and parent folder in `FindFiles` request when missing\n- Installer - `Install development files` option at installations time\n- Installer - NET 4.0 in bundles\n- Library - `DokanNtStatusFromWin32` helper\n- Library - `FileDispositionInformation` check attribute `FILE_ATTRIBUTE_READONLY`\n- Driver - `SL_OPEN_TARGET_DIRECTORY` is now handle directly by the driver\n- A website with the [documentation](https://dokan-dev.github.io/dokany-doc/html/).\n- Support PagingIO\n- FUSE - Use FUSE-compatible dir-hierarchy\n\n### Changed\n- Installer - Update redistributable link to VS Update 2\n- Installer - Add `dokan.dll` to install folder\n- Installer - Move `dokanfuse.dll` to install folder\n- Installer - Destination folder have now the dokan version in the name\n- Sign binary and installer with SHA1 & SHA2 \n- Library - Call FindFiles if FindFilesWithPattern returns `STATUS_NOT_IMPLEMENTED`\n- Library - Disable network device when mount point folder is specified. \n- Dokanctl - Register `dokannp dll` from Dokan Library install instead of sys32.\n- FUSE - use `_WIN32` in FUSE wrapper instead of `WIN32` define\n- Driver - `WriteFile` directly return `STATUS_SUCCESS` when there is nothing to write\n- Library - When a delete fail, we now request parent folder if we can delete child\n- Library - `DokanRemoveMountPointEx` has now a Safe option (force during remove if safe)\n- Dokanctl - No longer need admin permission for listing mount point, show usage and print version\n- Mirror - Update show usage\n- Driver - Use LookasideLists for DokanCCB and DokanFCB\n- FUSE - Improve and fix debug logs\n- FUSE - Add cmake-install target\n- FUSE - Make utils.h usable under C\n\n### Fixed\n- Driver - Support hibernation mode \n- Driver- BSOD during unmounts -> Restore `DokanStopCheckThread`\n- Mirror - Use `NTFS` as default file system name \n- Driver - Application using `SocketConnection` in dokan device \n- Library - `QueryServiceStatus` return value check\n- FUSE - Fix directory deleting if opendir is not hooked\n- Driver - Start failure on Win7 x86\n- Mirror - Fix all issues reported by WinFSTest\n- Driver - BSOD: network drive fileObject has no Vpb\n- Library - Null-terminate string in unmount\n- Library - Capitalization of `windows.h` include & `CMakeLists` file name\n- FUSE - mount that was calling destroy ops\n- Driver - `DokanGetFCB` was not case sensitive\n- FUSE - Force getattr since Windows use readdir information compared to libfuse behavior\n- FUSE - Call statfs with the root directory /\n- FUSE - Wrong opt default value\n- Driver - Save `DOKAN_DELETE_ON_CLOSE` in CCB and restore CCB flag during cleanup\n- Mirror - Replace main return -1 by `EXIT_FAILURE`\n- Mirror - Low and high param inversions for Un/LockFile\n- Installer - Correctly check KB3033929 is installed on Win7\n- Driver - Notify correctly when a file is removed with `FILE_FLAG_DELETE_ON_CLOSE`\n\n### Removed\n- Dokanctl - unused /f option during unmount\n- Library - `SetLastError(ERROR_ALREADY_EXISTS);` in CreateFile logic by directly return `STATUS_OBJECT_NAME_COLLISION`\n\n## [0.8.0] - 2015-12-10\n### Added\n- Installer - Embed VC++ redistributable in DokanInstall_X.X.X_redist.exe\n- Alternative Streams enumeration support #48\n- `IOCTL_DISK_GET_DRIVE_GEOMETRY_EX` and `IOCTL_STORAGE_GET_MEDIA_TYPES_EX` disk device `IOCTL` https://github.com/dokan-dev/dokany/commit/08b09a3910dbac0e902a81ad9e9ae1a06d4a6d90\n- The timeout per device has been implemented. The DokanOptions has a new property Timeout (Milliseconds) #55 \n- Installer - include PDB files\n- Coverity\n- FUSE - readonly flag https://github.com/dokan-dev/dokany/pull/90\n- Write protect device option https://github.com/dokan-dev/dokany/pull/105\n- Mounted DokanOperation is now called when device is mounted\n- Library - Logs in DispatchQueryInformation and DokanPrintNTStatus\n\n### Changed\n- Installer - Move dokan include and lib files\n- Driver - Central error handling #56\n- Library - Return type Dokan API to NTSTATUS #65\n- Installer - Move install-pdb to the main installer as an option\n- Move to WDK 10 & Visual Studio 2015\n- Move to clang-format code style LLVM\n- `CreateFile` is moved to CreateFileW https://github.com/dokan-dev/dokany/pull/91\n- Library - `CreateDirectory` & `OpenDirectory` have been merged with CreateFileW\n- FUSE - Use struct stat from cygwin as struct `FUSE_STAT` for better compatibility https://github.com/dokan-dev/dokany/pull/88\n- Dokanctl - Driver path is now resolved from %SystemRoot% https://github.com/dokan-dev/dokany/pull/104\n- FUSE - Library is now a dynamic library (was static)\n- Dokanctl - update showusage\n- Library - Unmount has been renamed as Unmounted and are now called when device is unmounted #117\n- Mirror - Ensure to have `SE_SECURITY_NAME` privilege and fix `GetFileSecurity` \n- FUSE - get_disk_free_space() return error changed #114\n\n### Fixed\n- Library - Use _malloca() for debug strings to avoid buffer overflows https://github.com/dokan-dev/dokany/pull/84\n- Driver - `CreateFile` with empty FileName\n- Driver - BSOD in security #55 \n- Prevent thread termination if not enough resources #55\n- Mirror - cannot delete empty directory #54\n- Installer - Clean the register after uninstall\n- Installer - Remove the driver after reboot\n- Installer - Move dokan include and lib files  1f94c875bc90c339b1f7bb2e57dcbac514e0a6bc\n- Library - `DokanMain` Deadlock with Network device #81 \n- Library -  `DokanUnmount `failing to unmount a drive https://github.com/dokan-dev/dokany/pull/79\n- Driver - Remove potential memory leak in `DokanCreateDiskDevice` on allocation failure https://github.com/dokan-dev/dokany/pull/108\n- Miror - Wrong success when `CreateFile` was called to open directory for delete\n- Library - `CreateFile` now correctly set last-error code to `ERROR_ALREADY_EXISTS` when open success with `CREATE_ALWAYS` and `OPEN_ALWAYS` (see mirror)\n\n### Removed\n- Library - Keep Alive option - Enabled as default\n- Driver - Deadcode in `IRP_MJ_SHUTDOWN`\n\n\n## [0.7.4] - 2015-08-21\n### Added\n- Fuse include to installer #37 \n\n### Changed\n- Doc updated #41 & Fix grammar #38 \n\n### Fixed\n- #26\n- MoveFileEx #39\n\n## [0.7.2] - 2015-05-12\n### Added\n- AppVeyor CI build\n\n### Changed\n- Code style standardization\n\n### Fixed\n- `DokanUnmount` driver letter name (#14)\n- Bad Pool BSOD on DokanGetFCB function (#11 / https://code.google.com/p/dokan/issues/detail?id=229)\n- DbgPrint message on `CreateDisposition` function (#13)\n\n## [0.7.1] - 2015-02-04\n### Fixed\n- Dokan.lib exported functions name\n- Missing `KeEnterCriticalRegion` function call in sys/fileinfo.c\n\n### Removed\n- Japan readme\n\n\n## [0.7.0] - 2015-01-30\n### Added\n- Extended drive letters usage range from D - Z to B - Z (https://github.com/BenjaminKim/dokanx/pull/13)\n\n### Changed\n- Moved to WDK8.1 with Visual Studio 2013 support\n- Improved DotNet wrapper with nullable datetime\n\n### Fixed\n- Fixed dokan_mirror offset processing on large files (https://github.com/BenjaminKim/dokanx/pull/18)\n- Build warnings\n- Dokan installer\n\n### Removed\n- PAGED_CODE declarations\n\n## [0.6.0] - 2014-12-10\nLatest Dokan version from Hiroki Asakawa.\n [http://dokan-dev.net/en]( http://web.archive.org/web/20150419082954/http://dokan-dev.net/en/)\n\n\n[2.2.0.1000]: https://github.com/dokan-dev/dokany/compare/v2.1.0.1000...v2.2.0.1000\n[2.1.0.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.6.1000...v2.1.0.1000\n[2.0.6.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.5.1000...v2.0.6.1000\n[2.0.5.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.4.1000...v2.0.5.1000\n[2.0.4.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.3.2000...v2.0.4.1000\n[2.0.3.2000]: https://github.com/dokan-dev/dokany/compare/v2.0.3.1000...v2.0.3.2000\n[2.0.3.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.2.1000...v2.0.3.1000\n[2.0.2.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.1.2000...v2.0.2.1000\n[2.0.1.2000]: https://github.com/dokan-dev/dokany/compare/v2.0.1.1000...v2.0.1.2000\n[2.0.1.1000]: https://github.com/dokan-dev/dokany/compare/v2.0.0.2000...v2.0.1.1000\n[2.0.0.2000]: https://github.com/dokan-dev/dokany/compare/v2.0.0.1000...v2.0.0.2000\n[2.0.0.1000]: https://github.com/dokan-dev/dokany/compare/v1.5.1.1000...v2.0.0.1000\n[1.5.1.1000]: https://github.com/dokan-dev/dokany/compare/v1.5.0.3000...v1.5.1.1000\n[1.5.0.3000]: https://github.com/dokan-dev/dokany/compare/v1.5.0.2000...v1.5.0.3000\n[1.5.0.2000]: https://github.com/dokan-dev/dokany/compare/v1.5.0.1000...v1.5.0.2000\n[1.5.0.1000]: https://github.com/dokan-dev/dokany/compare/v1.4.1.1000...v1.5.0.1000\n[1.4.1.1000]: https://github.com/dokan-dev/dokany/compare/v1.4.0.1000...v1.4.1.1000\n[1.4.0.1000]: https://github.com/dokan-dev/dokany/compare/v1.3.1.1000...v1.4.0.1000\n[1.3.1.1000]: https://github.com/dokan-dev/dokany/compare/v1.3.0.1000...v1.3.1.1000\n[1.3.0.1000]: https://github.com/dokan-dev/dokany/compare/v1.2.2.1000...v1.3.0.1000\n[1.2.2.1000]: https://github.com/dokan-dev/dokany/compare/v1.2.1.2000...v1.2.2.1000\n[1.2.1.2000]: https://github.com/dokan-dev/dokany/compare/v1.2.1.1000...v1.2.1.2000\n[1.2.1.1000]: https://github.com/dokan-dev/dokany/compare/v1.2.0.1000...v1.2.1.1000\n[1.2.0.1000]: https://github.com/dokan-dev/dokany/compare/v1.1.0.2000...v1.2.0.1000\n[1.1.0.2000]: https://github.com/dokan-dev/dokany/compare/v1.1.0...v1.1.0.2000\n[1.1.0.1000]: https://github.com/dokan-dev/dokany/compare/v1.0.5...v1.1.0\n[1.0.5.1000]: https://github.com/dokan-dev/dokany/compare/v1.0.4...v1.0.5\n[1.0.4.1000]: https://github.com/dokan-dev/dokany/compare/v1.0.3...v1.0.4\n[1.0.3.1000]: https://github.com/dokan-dev/dokany/compare/v1.0.2...v1.0.3\n[1.0.2.1000]: https://github.com/dokan-dev/dokany/compare/v1.0.1...v1.0.2\n[1.0.1.1000]: https://github.com/dokan-dev/dokany/compare/v1.0.0...v1.0.1\n[1.0.0.5000]: https://github.com/dokan-dev/dokany/compare/v0.8.0...v1.0.0\n[0.8.0]: https://github.com/dokan-dev/dokany/compare/v0.7.4...v0.8.0\n[0.7.4]: https://github.com/dokan-dev/dokany/compare/0.7.2...v0.7.4\n[0.7.2]: https://github.com/dokan-dev/dokany/compare/0.7.1...0.7.2\n[0.7.1]: https://github.com/dokan-dev/dokany/compare/0.7.0...0.7.1\n[0.7.0]: https://github.com/dokan-dev/dokany/compare/0.6.0...0.7.0\n[0.6.0]: https://github.com/dokan-dev/dokany/tree/0.6.0\n"
        },
        {
          "name": "Dokan.props",
          "type": "blob",
          "size": 0.6806640625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ImportGroup Label=\"PropertySheets\" />\n  <PropertyGroup Label=\"UserMacros\">\n    <DOKANAPIVersion>2</DOKANAPIVersion>\n    <DOKANVersion>2.2.0</DOKANVersion>\n  </PropertyGroup>\n  <PropertyGroup />\n  <ItemDefinitionGroup />\n  <ItemGroup>\n    <BuildMacro Include=\"DOKANAPIVersion\">\n      <Value>$(DOKANAPIVersion)</Value>\n      <EnvironmentVariable>true</EnvironmentVariable>\n    </BuildMacro>\n      <BuildMacro Include=\"DOKANVersion\">\n      <Value>$(DOKANVersion)</Value>\n      <EnvironmentVariable>true</EnvironmentVariable>\n    </BuildMacro>\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.234375,
          "content": "# Dokany\n\n[![Github All Releases](https://img.shields.io/github/downloads/dokan-dev/dokany/total.svg)](https://github.com/dokan-dev/dokany/releases)\n[![Build status](https://ci.appveyor.com/api/projects/status/4tpt4v8btyahh3le/branch/master?svg=true)](https://ci.appveyor.com/project/Maxhy/dokany/branch/master)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=dokany&metric=alert_status)](https://sonarcloud.io/dashboard?id=dokany)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/5c2ecf8d8f734437beb795dbe5aaa918)](https://app.codacy.com/gh/dokan-dev/dokany/dashboard?utm_source=gh&utm_medium=referral&utm_content=&utm_campaign=Badge_grade)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1234/badge)](https://bestpractices.coreinfrastructure.org/projects/1234)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fdokan-dev%2Fdokany.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fdokan-dev%2Fdokany?ref=badge_shield)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/dokan-dev/dokany.svg)](http://isitmaintained.com/project/dokan-dev/dokany \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/dokan-dev/dokany.svg)](http://isitmaintained.com/project/dokan-dev/dokany \"Percentage of issues still open\")\n\n![Dokan Demo](http://dokan-dev.github.io/images/screencast.gif)\n\n## What is Dokan\n\nWhen you want to create a new file system on Windows, other than FAT or NTFS,\nyou need to develop a file system driver. Developing a device driver that works\nin kernel mode on windows is extremely technical. By using Dokan, you can create\nyour own file systems very easily without writing device drivers. Dokan is\nsimilar to FUSE (Linux file system in user space) but works on Windows. Moreover,\ndokany includes a [FUSE wrapper](https://github.com/dokan-dev/dokany/wiki/FUSE)\nthat helps you to port your FUSE filesystems without changes.\n\n## What is Dokany\n\n*Dokany is a fork of Dokan 0.6.0 with bug fixes, clean change history and\nupdated to build with latest tools.*\n\nBecause the original Dokan Legacy (< 0.6.0) project is no longer maintained.\n\nSince version 0.8.0, dokany broke compatibility with the dokan API. See\n[Choose a version](https://github.com/dokan-dev/dokany/wiki/Installation#choose-a-version)\nfor more information.\n\nThe API has then again changed over time in [1.1.0](https://github.com/dokan-dev/dokany/wiki/Update-Dokan-1.0.0-application-to-Dokany-1.1.0) and [2.0.0](https://github.com/dokan-dev/dokany/wiki/Update-Dokan-1.1.0-application-to-Dokany-2.0.0).\n\n## Benchmark v1.5.1.1000 vs v2.0.3.1000\n\nA benchmark that is testing multiple scenarios repeaditly and sequentially was run 5 times against the `memfs` sample of v1.5.1.1000 and v2.0.3.1000 in an idle environment to precise results.\nThe detail results can be seen in this spreadsheet [here](https://docs.google.com/spreadsheets/d/1zdJ6fmP_sqUGCM7SLtTle9N3JLyBOEAMRlwDLfUqm4Q/edit?usp=sharing).\nAs better threading and memory poll were added in v2, it is expected that concurrent scenarios (like those tests) would be even more highly improved.\n\nA sample of the results:\n```\nCreate New      |  +13.55% | List          |  +60.69% | GetAttributes |  +48.78% | Read  | +18-42% |\nOpen/Overwrite  | +153.41% | ListExactFile | +131.91% | SetAttributes | +120.91% | Write | +10-32% |\nRandomOpenClose | +173.05% |               |          | Delete        |  +90.83% |       |         |\n```\n\n## Licensing\n\nDokan contains LGPL and MIT licensed programs.\n\n- user-mode library (dokan2.dll)   **LGPL**\n- driver (dokan2.sys)              **LGPL**\n- network library (dokannp2.dll)   **LGPL**\n- fuse library (dokanfuse2.dll)    **LGPL**\n- installer (DokanSetup.exe)       **LGPL**\n- control program (dokanctl.exe)   **MIT**\n- samples (mirror.exe / memfs.exe) **MIT**\n\nFor details, please check the license files.\n * **LGPL** license.lgpl.txt\n * **MIT**  license.mit.txt\n\nYou can obtain source files from https://dokan-dev.github.io\n\n## Environment\n\nDokan works on\n * Windows Server 2022 / 2019 / 2016 / 2012 (R2) / 2008 R2 SP1\n * Windows 11 / 10 / 8.1 / 8 / 7 SP1\n \nPlatform\n * x86\n * x64\n * ARM\n * ARM64\n\n**Signed Release and Debug drivers** are provided at each release for all platforms.\n\n## How it works\n\nDokan library contains a user mode DLL (dokan2.dll) and a kernel mode file\nsystem driver (dokan2.sys). Once the Dokan file system driver is installed, you can\ncreate file systems which can be seen as normal file systems in Windows. The\napplication that creates file systems using Dokan library is called File system\napplication.\n\nFile operation requests from user programs (e.g., CreateFile, ReadFile,\nWriteFile, ...) will be sent to the Windows I/O subsystem (runs in kernel mode)\nwhich will subsequently forward the requests to the Dokan file system driver\n(dokan2.sys). By using functions provided by the Dokan user mode library\n(dokan2.dll), file system applications are able to register callback functions\nto the file system driver. The file system driver will invoke these callback\nroutines in order to respond to the requests it received. The results of the\ncallback routines will be sent back to the user program.\n\nFor example, when Windows Explorer requests to open a directory, the CreateFile\nwith Direction option request will be sent to Dokan file system driver and the\ndriver will invoke the CreateFile callback provided by the file system\napplication. The results of this routine are sent back to Windows Explorer as\nthe response to the CreateFile request. Therefore, the Dokan file system driver\nacts as a proxy between user programs and file system applications. The\nadvantage of this approach is that it allows programmers to develop file systems\nin user mode which is safe and easy to debug.\n \nTo learn more about Dokan file system development, see the\n[![API documentation](https://img.shields.io/badge/Documentation-API-green.svg)](https://dokan-dev.github.io/dokany-doc/html/) and the [samples](https://github.com/dokan-dev/dokany/tree/master/samples), especially [dokan_memfs](https://github.com/dokan-dev/dokany/tree/master/samples/dokan_memfs).\n\n## Build\n\nIn short, download and install the\n[Visual Studio 2019](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx), select [Windows 10 SDK](https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/) component during the install or from the Tools menu &\ninstall the [WDK 10](https://msdn.microsoft.com/en-us/windows/hardware/hh852365.aspx)\n\nFor details, see the\n[build page](https://github.com/dokan-dev/dokany/wiki/Build).\n\n## Installation\n\nThe latest official and signed build can be downloaded from:\n* [Github release page](https://github.com/dokan-dev/dokany/releases)\n* `choco install dokany2`\n\nFor manual installation, see the\n[installation page](https://github.com/dokan-dev/dokany/wiki/Installation).\n\n## Contribute\n\nYou want Dokan to get better? Contribute!\n\nLearn the code and suggest your changes on\n[GitHub repository](https://github.com/dokan-dev).\n\nDetect defects and report them on\n[GitHub issue tracker](https://github.com/dokan-dev/dokany/issues).\n\nAsk and answer questions on\n[Github Discussions](https://github.com/dokan-dev/dokany/discussions) or \n[Google discussion group](https://groups.google.com/forum/#!forum/dokan).\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 19.40625,
          "content": "-\n  environment:\n    AccessTokenDokanDoc:\n      secure: Omu2AD4ooK5Owx+v4XS3VPuWc0xJyZXGZlgv4ipJqmt0wY2LN7bzev8y3OLHsARU\n    SonarQubeToken:\n      secure: /gni/fn6VjMyw7qdAvkHuB2h3NoRFdXNqlQSAvqiYsuODhOPDkGGX/yNeOP5F2On\n    global:\n      DOKAN_CI_CACHE: C:\\dokan_ci_cache\n      DOXYGEN_INST_DIR: '%DOKAN_CI_CACHE%\\doxygen'\n      CYG_CACHE: '%DOKAN_CI_CACHE%\\cygwin'\n      MSYS2_CACHE: '%DOKAN_CI_CACHE%\\msys2-cache'\n#     CHOCO_CACHE: '%DOKAN_CI_CACHE%\\choco'\n      WLK_INST_CACHE: '%DOKAN_CI_CACHE%\\wlk_inst'\n      DOKAN_MAIN_BUILD_JOB_NAME: \"Image: Visual Studio 2019; Configuration: All\"\n\n  skip_tags: true\n  version: 2.1.0-{build}\n  configuration:\n  - All\n  - SonarQube\n  - FsTest\n  - Documentation\n\n  image:\n    - Visual Studio 2019\n    - Visual Studio 2017\n    - Visual Studio 2015\n    - Visual Studio 2022\n# If you suspect some changes on the AppVeyor-side breaking things,\n# uncomment below. https://www.appveyor.com/updates/\n#    - Previous Visual Studio 2019\n#    - Previous Visual Studio 2015\n#    - Previous Visual Studio 2017\n  matrix:\n    exclude:\n      - configuration: All\n        image: Visual Studio 2015\n      - configuration: SonarQube\n        image: Visual Studio 2015\n      - configuration: Documentation\n        image: Visual Studio 2015\n      - configuration: All\n        image: Visual Studio 2017\n      - configuration: SonarQube\n        image: Visual Studio 2017\n      - configuration: Documentation\n        image: Visual Studio 2017\n      - configuration: All\n        image: Visual Studio 2022\n      - configuration: SonarQube\n        image: Visual Studio 2022\n      - configuration: Documentation\n        image: Visual Studio 2022\n  max_jobs: 1\n  cache:\n  - '%DOKAN_CI_CACHE% -> appveyor.yml'\n\n# To debug build issues, add your own fork to AppVeyor and uncomment below.\n# Connection details will be printed to the console output.\n# $blockRdp makes the build block until a file is deleted from the desktop.\n#  init:\n#    - ps: Invoke-Expression (Invoke-WebRequest 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')\n#  on_finish:\n#    - ps: $blockRdp = $true; Invoke-Expression (Invoke-WebRequest 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')\n\n  install:\n    - ps: |\n        New-Item -ItemType Directory -Force -Path ${env:DOKAN_CI_CACHE} | Out-Null\n    - ps: |\n        if ($env:CONFIGURATION -eq \"FsTest\" -or $env:CONFIGURATION -eq \"All\") {\n          .\\cert\\dokan-import.ps1\n        }\n    - ps: |\n        if ($env:CONFIGURATION -eq \"FsTest\") {\n          & verifier /standard /driver dokan2.sys\n          Write-Host \"Before reboot\"\n          Start-Sleep -s 30 # Wait appveyor to be ready https://github.com/appveyor/ci/issues/3650\n          Restart-Computer\n          Start-Sleep -s 240 # will reboot before this is finished and proceed with next build step\n          Write-Host \"Did not reboot for some reason, trying Restart-Computer -Force\"\n          Start-Sleep -s 2\n          Restart-Computer -Force\n          Start-Sleep -s 240\n          Write-Host \"Still has not rebooted\"\n          throw (\"Tried rebooting two times, failed\")\n        }\n    - ps: |\n        . .\\scripts\\build_helper.ps1\n    - ps: |\n        if ($env:CONFIGURATION -eq \"FsTest\") {\n          Exec-External {& net user dokan_ifstest D0kan_1fstest /ADD }\n        }\n    - ps: |\n        if ($env:CONFIGURATION -eq \"FsTest\") {\n          Exec-External {& powershell .\\scripts\\install_wlk_ifstest.ps1 }\n        }\n    - ps: |\n        if ($env:CONFIGURATION -eq \"Documentation\") {\n          # choco doxygen.portable has ftp download issue for now\n          # Exec-External {& choco install \"--cache-location=${env:CHOCO_CACHE}\" doxygen.portable}\n          $env:PATH = \"$env:DOXYGEN_INST_DIR;$env:PATH\"\n          if (Test-Path $env:DOXYGEN_INST_DIR) {\n            Write-Host \"Doxygen in cache, skipping.\"\n            return\n          }\n          New-Item -Force -Type Directory $env:DOXYGEN_INST_DIR | Out-Null\n          cd $env:DOXYGEN_INST_DIR\n          $doxygen_zip = \"$env:TEMP\\doxygen.zip\"\n          # Version has to be < 1.8.12 because doxyboot theme is incompatible with later versions\n          # https://github.com/Velron/doxygen-bootstrapped/issues/20\n          # https://github.com/Velron/doxygen-bootstrapped/issues/27\n          Write-Host \"Downloading Doxygen...\"\n          Invoke-WebRequest https://netcologne.dl.sourceforge.net/project/doxygen/rel-1.8.11/doxygen-1.8.11.windows.x64.bin.zip -OutFile $doxygen_zip -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::FireFox\n          if ($(Get-FileHash -Algorithm SHA256 $doxygen_zip).Hash -ne \"6CE7C259975FB3DC449313913DE71B89665D15C49CF674DB6952F304BB3DFAAA\") {\n            throw \"Hash mismatch while downloading Doxygen\"\n          }\n          Exec-External {& 7z x -y \"$doxygen_zip\"}\n          cd $env:APPVEYOR_BUILD_FOLDER\n        }\n    - git submodule update --init --recursive\n    - ps: |\n        if ($env:CONFIGURATION -eq \"All\") {\n          function downloadIfOlderThanDays($url, $path, $days) {\n            if ( !(Test-Path $path -NewerThan (Get-Date).AddDays(-$days)) ) {\n              Write-Host \"$path does not exist or is older than $days days, downloading from $url\"\n              Invoke-WebRequest $url -OutFile $path\n            }\n          }\n\n          downloadIfOlderThanDays \"https://cygwin.com/setup-x86_64.exe\" \"${env:DOKAN_CI_CACHE}\\setup-x86_64.exe\" 7\n\n          function updateCygwin($cygwinexe, $installFolder, $cacheFolder) {\n            Write-Host \"Update Cygwin: $cygwinexe\"\n            Exec-External {& cmd /c $cygwinexe -gqnNdO -R $installFolder -s http://mirrors.kernel.org/sourceware/cygwin/ -l $cacheFolder -P cmake -P make -P gcc-core -P gcc-g++ -P pkg-config}\n            Write-Host \"Update Cygwin: $cygwinexe \" -NoNewLine\n            Write-Host \"[ OK ]\" -ForegroundColor Green\n          }\n\n          updateCygwin \"${env:DOKAN_CI_CACHE}\\setup-x86_64.exe\" C:/cygwin64 $env:CYG_CACHE\n        }\n\n    - ps: |\n        if ($env:CONFIGURATION -eq \"All\") {\n          function bash($bash_command) {\n            Write-Host \"MSYS2-Bash: $bash_command\"\n            Exec-External {& C:\\msys64\\usr\\bin\\bash.exe --login -c $bash_command }\n            Write-Host \"MSYS2-Bash $bash_command \" -NoNewLine\n            Write-Host \"[ OK ]\" -ForegroundColor Green\n          }\n          New-Item -Force -Type Directory $env:MSYS2_CACHE\n          $unix_msys2_cache = (Exec-External {& C:\\msys64\\usr\\bin\\bash.exe --login -c \"cygpath '${env:MSYS2_CACHE}'\"})\n\n          # Update keyring to fix possible package signatures we faced in the past.\n          bash \"pacman -Sy --noconfirm --cache `\"$unix_msys2_cache`\" msys2-keyring\"\n\n          # We run the upgrade three times, because MSYS2 cannot upgrade itself without restarting\n          # TODO: detect if restart is necessary and only run as many times as needed.\n          #       Maybe two times is enough in all cases, but better be safe than sorry and run it three times.\n          # See https://github.com/msys2/msys2/wiki/MSYS2-installation#iii-updating-packages\n          # For the `--ask 20` option, see\n          # <https://github.com/Alexpux/MSYS2-packages/issues/1141>.\n          #\n          # Otherwise the message\n          #\n          #     :: msys2-runtime and catgets are in conflict. Remove catgets? [y/N]\n          #\n          # is displayed when trying to update followed by an exit rather\n          # than selecting yes.\n\n          for ($i = 0; $i -lt 3; $i++) {\n            bash \"pacman -Syuu --ask 20 --noconfirm --cache `\"$unix_msys2_cache`\"\"\n          }\n          # install MinGW toolchain\n          bash \"pacman --sync --needed --noconfirm --cache `\"$unix_msys2_cache`\" mingw-w64-{x86_64,i686}-toolchain mingw-w64-{x86_64,i686}-cmake make\"\n        }\n\n  build_script:\n  - ps: |\n      Write-Host Start building...\n      $buildCmd = $(cmd /c where msbuild)\n\n  - ps: |\n      if ($env:CONFIGURATION -eq \"SonarQube\" -and \"$env:APPVEYOR_REPO_BRANCH\" -eq \"master\") {\n       \n        if ($env:APPVEYOR_PULL_REQUEST_NUMBER) {\n          Add-AppveyorMessage -Message \"Not running SonarQube on pull request.\" -Category Information\n          return;\n        }\n      \n        Add-Type -assembly system.io.compression.filesystem\n\n        New-Item -Path \"sonar-scanner\" -ItemType \"directory\"\n        cd sonar-scanner\n        Invoke-WebRequest https://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip -OutFile .\\build-wrapper-win-x86.zip\n        Exec-External { & 7z e .\\build-wrapper-win-x86.zip }\n        Invoke-WebRequest https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/6.0.0.81631/sonar-scanner-6.0.0.81631-net-framework.zip -OutFile .\\sonar-scanner-msbuild.zip\n        Exec-External { & 7z x .\\sonar-scanner-msbuild.zip }\n        $env:Path = \"$((Get-Location).Path);\" + $env:Path\n        $env:JAVA_HOME = \"C:\\Program Files\\Java\\jdk21\"\n        cd ..\n\n        .\\scripts\\sonar-build.ps1 dokany $env:SonarQubeToken dokan-dev https://sonarcloud.io $env:APPVEYOR_BUILD_VERSION\n      }\n\n  - ps: |\n      # Available in all configurations\n      $xmlversion = [xml](Get-Content \"${env:APPVEYOR_BUILD_FOLDER}\\dokan_wix\\version.xml\")\n      $current_build_version = $xmlversion.Include.define | Where { $_.StartsWith(\"BuildVersion=\") }\n      $mm_version = $current_build_version.Split(\"=\")[1] -replace '\"','';\n      $mm_version = $mm_version.Substring(0, $mm_version.Length - $env:APPVEYOR_BUILD_NUMBER.Length - 1);\n      $mm_version += $env:APPVEYOR_BUILD_NUMBER;\n      (Get-Content \"${env:APPVEYOR_BUILD_FOLDER}\\CHANGELOG.md\") -replace '[0-9]{1,2}\\.[0-9]{1,2}\\.[0-9]{1,2}\\.[0-9]{1,4}', ($env:APPVEYOR_BUILD_VERSION.Split(\"-\")[0] + '.' + $mm_version) | out-file \"${env:APPVEYOR_BUILD_FOLDER}\\CHANGELOG.md\"\n      $installer_version = $env:APPVEYOR_BUILD_VERSION.Split(\"-\")[0] + '.' + $mm_version;\n  - ps: |\n      if ($env:CONFIGURATION -eq \"All\") {\n        $env:Path += \";C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.18362.0\\x64\\\"\n        $env:CERTISSUER=\"DokanCA\"\n        $env:ADDITIONALCERT=\"$pwd\\cert\\DokanCA.cer\"\n        $env:SIGNTOOL=\"C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.18362.0\\x64\\signtool.exe\"\n\n        cd dokan_wix\n        $Platform = \"Any CPU\"\n        $buildArgs = @(\n        \"SetAssemblyVersion.sln\",\n        \"/m\",\n        \"/l:C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\",\n        \"/p:Configuration=Release\",\n        \"/p:Platform=${Platform}\")\n        Exec-External { & $buildCmd $buildArgs }\n\n        & .\\SetAssemblyVersion\\bin\\Release\\SetAssemblyVersion ..\\CHANGELOG.md version.xml ..\\\n\n        # Flip the config to Debug for a Debug build and installer\n        $BuildConfig=\"Release\"\n\n        cd ${env:APPVEYOR_BUILD_FOLDER}\n        Exec-External {& .\\scripts\\build.ps1 -Configurations $BuildConfig }\n        .\\cert\\dokan-sign.ps1\n\n        cd dokan_wix\n\n        Exec-External {& dotnet tool install --global wix }\n        # Nuget restore sln fails to restore all the project of the solution for some reason so lets do it manually\n        dir .\\* -include ('*.wixproj', '*.vcxproj') -recurse | ForEach-Object { nuget restore $_.FullName -SolutionDirectory . }\n\n        (gc version.xml) -replace 'BuildCygwin=\"false\"', 'BuildCygwin=\"true\"' | sc version.xml\n        (gc version.xml) -replace 'Compressed=\"no\"', 'Compressed=\"yes\"' | sc version.xml\n\n        $Platform = \"Mixed Platforms\"\n        $buildArgs = @(\n        \"Dokan_WiX.sln\",\n        \"/m\",\n        \"/l:C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\",\n        \"/p:Configuration=${BuildConfig}\",\n        \"/p:Platform=${Platform}\")\n\n        Exec-External {& $buildCmd $buildArgs}\n\n        Write-Host Build archive ...\n        Exec-External { 7z a -tzip dokan.zip ..\\Win32 ..\\x64 ..\\ARM ..\\ARM64 }\n        Write-Host Build archive done !\n\n        Write-Host Upload Artifact...\n        Push-AppveyorArtifact \"${env:APPVEYOR_BUILD_FOLDER}\\dokan_wix\\Bootstrapper\\bin\\x86\\${BuildConfig}\\DokanSetup.exe\" -FileName (\"DokanSetup-\" + $installer_version + \".exe\")\n        Push-AppveyorArtifact \"${env:APPVEYOR_BUILD_FOLDER}\\dokan_wix\\dokan.zip\" -FileName (\"dokan-\" + $installer_version + \".zip\")\n        Write-Host Artifact uploaded!\n      }\n\n  - ps: |\n      if ($env:CONFIGURATION -eq \"FsTest\") {\n        Write-Host \"Getting main build job id via API...\"\n        $api_build_info_url = \"${env:APPVEYOR_URL}/api/projects/${env:APPVEYOR_ACCOUNT_NAME}/${env:APPVEYOR_PROJECT_SLUG}/build/${env:APPVEYOR_BUILD_VERSION}\"\n        $headers = @{\n          \"Content-Type\" = \"application/json\"\n        }\n        $build_info = Invoke-RestMethod -Method Get -Uri $api_build_info_url -Headers $headers -UserAgent \"Dokany CI-Script ${env:APPVEYOR_JOB_ID}\"\n        $main_build_job_id = ($build_info.Build.jobs | Where-Object {$_.name -eq $env:DOKAN_MAIN_BUILD_JOB_NAME}).jobId\n        $installer_url = \"${env:APPVEYOR_URL}/api/buildjobs/${main_build_job_id}/artifacts/DokanSetup-${installer_version}.exe\"\n\n        Write-Host \"Downloading installer artifact from main build job ${main_build_job_id}...\"\n        Invoke-WebRequest $installer_url -OutFile DokanSetup.exe\n\n        Write-Host \"Installing Dokan...\"\n        $install_process = Start-Process -PassThru -Wait -FilePath .\\DokanSetup.exe -ArgumentList @(\"/quiet\", \"/norestart\", \"/log\", \"dokan_install.log\")\n        if ($install_process.ExitCode -ne 0) {\n          Write-Error \"Dokan-Installation failed. Log below this line:\"\n          Get-Content dokan_install*.log   # wildcard for getting both MSI and bundle log\n          throw \"Dokan-Installation failed. Log above this line\"\n        }\n      }\n  - ps: |\n      Write-Host Build finished!\n\n  test_script:\n  - ps: |\n      if ($env:CONFIGURATION -eq \"FsTest\") {\n        Write-Host Running tests...\n        $env:DokanLibrary2 = [System.Environment]::GetEnvironmentVariable(\"DokanLibrary2\", \"Machine\")\n        $memfs = @(\"${env:DokanLibrary2}\\sample\\memfs\\memfs.exe\", \"${env:DokanLibrary2}\\x86\\sample\\memfs\\memfs.exe\")\n        $mirrors = @(\"${env:DokanLibrary2}\\sample\\mirror\\mirror.exe\", \"${env:DokanLibrary2}\\x86\\sample\\mirror\\mirror.exe\")\n\n        cd .\\samples\n        .\\memfs_test.ps1 -Memfs $memfs\n        .\\mirror_test.ps1 -Mirrors $mirrors\n      }\n  - ps: |\n      if ($env:CONFIGURATION -eq \"FsTest\") {\n        Write-Host Test finished!\n      }\n\n  after_test:\n  - ps: |\n      # This function has already been defined above, but in case of a reboot caused by a BSOD, we cannot\n      # rely on it being defined!\n      function Exec-External {\n        param(\n          [Parameter(Position=0,Mandatory=1)][scriptblock] $command\n        )\n        & $command\n        if ($LASTEXITCODE -ne 0) {\n          throw (\"Command returned non-zero error-code ${LASTEXITCODE}: $command\")\n        }\n      }\n  - ps: |\n      if ($env:CONFIGURATION -eq \"FsTest\") {\n        Exec-External {& verifier /query}\n      }\n  - ps: |\n      # checking for BSOD\n      $bugchecks = (Get-EventLog -LogName system | Where-Object {$_.eventID -eq '1001' -and $_.Source -eq 'BugCheck'} | Select-Object -Property *)\n      if ($bugchecks) {\n        Write-Host \"It seems like we rebooted due to a bugcheck (BSOD).\"\n        Format-List -InputObject $bugchecks | Out-String | Out-Host\n        # events are sorted descendingly by time, so $bugchecks[0] is the latest BSOD\n        $memory_dmp = $bugchecks[0].ReplacementStrings[1]\n\n        Write-Host Calling KD to get more information...\n        # somehow the env-var-changes by the installer are sometimes lost after the BSOD. Hardcode the path!\n        $driver_and_pdb_path = Resolve-Path 'C:\\Program Files\\Dokan\\Dokan Library-*\\driver\\'\n        & \"C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x64\\kd.exe\" -lines -z $memory_dmp -y \"SRV*;${driver_and_pdb_path};http://msdl.microsoft.com/download/symbols\" -c \"!analyze -v; kp; dv /t /i /V; q\"\n        $memdumpArchive = \"memory_dmp_$(& git rev-parse --short HEAD)_${env:APPVEYOR_BUILD_VERSION}.7z\"\n        Write-Host \"Compressing $memory_dmp\"\n        Exec-External { &7z a -t7z $memdumpArchive $memory_dmp }\n        Push-AppveyorArtifact $memdumpArchive\n        Write-Host \"MEMORY.DMP uploaded as build artifact $memdumpArchive\"\n        Add-AppveyorMessage `\n          -Category Error `\n          -Message \"BSOD encountered during $env:CONFIGURATION. Link to MEMORY.DMP in the description\" `\n          -Details (\"MEMORY.DMP is available here: \" + `\n            \"https://ci.appveyor.com/api/buildjobs/$([System.Web.HttpUtility]::UrlEncode($env:APPVEYOR_JOB_ID))/artifacts/$([System.Web.HttpUtility]::UrlEncode($memdumpArchive))\")\n\n        throw \"Build failed due to BSOD during $env:CONFIGURATION\"\n      }\n\n  on_success:\n    - ps: |\n        # AppVeyor does not provide us with the SHA1 before the push\n        # Thus we have no baseline for pushes and can only run this for PRs\n        if ($env:CONFIGURATION -eq \"All\" -and $env:APPVEYOR_PULL_REQUEST_NUMBER) {\n          $parents = (Exec-External {& git rev-list --parents -n1 HEAD}).Split()\n          $head = $parents[0]\n          $mergeBranchHead = $parents[1]\n          $prBranchHead = $parents[2]\n\n          # Python 3 is needed by git clang-format\n          # https://help.appveyor.com/discussions/problems/6832-appveyor-doesnt-recognizes-python3-command\n          Copy-Item -Path \"C:\\Python38\\python.exe\" -Destination \"C:\\Python38\\python3.exe\"\n          $env:PATH =\"C:\\Python38;$env:PATH\"\n\n          $diffFile = \"clang_format_$(& git rev-parse --short $prBranchHead)_into_$(& git rev-parse --short $mergeBranchHead).diff\"\n          Exec-External {& git config --global core.autocrlf true }\n          Exec-External {& git clang-format --quiet --style=file --diff $mergeBranchHead} |\n            Select-String -NotMatch \"^no modified files to format$\" > $diffFile\n          if ((Get-Item $diffFile).length -gt 0) {\n            Write-Host \"Ran git clang-format on PR, found changes, uploading as artifact\"\n            Add-AppveyorMessage `\n              -Category Warning `\n              -Message \"Please check your indentation.\" `\n              -Details (\"You may want to run ``git clang-format --style file`` on each of your commits.`n\" + `\n                \"A diff of the suggested changes is available here:`n\" + `\n                \"https://ci.appveyor.com/api/buildjobs/$([System.Web.HttpUtility]::UrlEncode($env:APPVEYOR_JOB_ID))/artifacts/$([System.Web.HttpUtility]::UrlEncode($diffFile))\")\n            Push-AppveyorArtifact $diffFile\n          }\n          else {\n            Write-Host \"Ran git clang-format on PR, no changes necessary\"\n            Add-AppveyorMessage `\n              -Category Information `\n              -Message \"Your indentation is fine. clang-format did not suggest any changes.\"\n          }\n        }\n    - ps: |\n        if ($env:CONFIGURATION -eq \"Documentation\") {\n            if (!$env:AccessTokenDokanDoc -or \"$env:APPVEYOR_PULL_REQUEST_TITLE\" -or \"$env:APPVEYOR_REPO_BRANCH\" -ne \"master\") {\n              return;\n            }\n\n            cd $env:APPVEYOR_BUILD_FOLDER\\documentations\n            Exec-External {& git config --global user.email \"appveyor@appveyor.org\"}\n            Exec-External {& git config --global user.name \"appveyor\"}\n            Exec-External {& git clone -b gh-pages --single-branch https://$($env:AccessTokenDokanDoc)@github.com/dokan-dev/dokany-doc.git doc}\n            Exec-External {& doxygen Doxyfile}\n            cd doc\n            if ($(git status --porcelain)) {\n              Write-Host \"Update documentation...\" -ForegroundColor Green\n              Exec-External {& git add -A}\n              Exec-External {& git commit -m \"Latest documentation on successful appveyor build $env:APPVEYOR_BUILD_VERSION auto-pushed to gh-pages\"}\n              Exec-External {& git push -fq origin gh-pages}\n              Write-Host \"Documentation updated!\" -ForegroundColor Green\n            } else {\n              Write-Host \"No documentation changes detected.\" -ForegroundColor Green\n            }\n        }\n"
        },
        {
          "name": "cert",
          "type": "tree",
          "content": null
        },
        {
          "name": "chocolatey",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentations",
          "type": "tree",
          "content": null
        },
        {
          "name": "dokan.sln",
          "type": "blob",
          "size": 10.7412109375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.29411.108\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"sys\", \"sys\\sys.vcxproj\", \"{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dokan\", \"dokan\\dokan.vcxproj\", \"{F25BA22F-2AB8-4859-9B89-8FE1E774B472}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dokan_mirror\", \"samples\\dokan_mirror\\dokan_mirror.vcxproj\", \"{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dokan_control\", \"dokan_control\\dokan_control.vcxproj\", \"{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dokan_np\", \"dokan_np\\dokan_np.vcxproj\", \"{EC90ED56-551B-4784-9B07-4B49B972448F}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dokan_fuse\", \"dokan_fuse\\dokan_fuse.vcxproj\", \"{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"samples\", \"samples\", \"{05730645-41B5-4B84-9068-17193932E5AE}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dokan_memfs\", \"samples\\dokan_memfs\\dokan_memfs.vcxproj\", \"{07E55DA5-7237-465A-8338-0B582452CC78}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|ARM = Debug|ARM\n\t\tDebug|ARM64 = Debug|ARM64\n\t\tDebug|Win32 = Debug|Win32\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|ARM = Release|ARM\n\t\tRelease|ARM64 = Release|ARM64\n\t\tRelease|Win32 = Release|Win32\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|ARM.Deploy.0 = Debug|ARM\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|Win32.Deploy.0 = Debug|Win32\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|x64.Build.0 = Debug|x64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|ARM.Build.0 = Release|ARM\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|Win32.Build.0 = Release|Win32\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|x64.ActiveCfg = Release|x64\n\t\t{C0269F86-24E0-40DD-B5C8-29CDFDFF2AFB}.Release|x64.Build.0 = Release|x64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Debug|x64.Build.0 = Debug|x64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|ARM.Build.0 = Release|ARM\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|Win32.Build.0 = Release|Win32\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|x64.ActiveCfg = Release|x64\n\t\t{F25BA22F-2AB8-4859-9B89-8FE1E774B472}.Release|x64.Build.0 = Release|x64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Debug|x64.Build.0 = Debug|x64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|ARM.Build.0 = Release|ARM\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|Win32.Build.0 = Release|Win32\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|x64.ActiveCfg = Release|x64\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94}.Release|x64.Build.0 = Release|x64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Debug|x64.Build.0 = Debug|x64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|ARM.Build.0 = Release|ARM\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|Win32.Build.0 = Release|Win32\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|x64.ActiveCfg = Release|x64\n\t\t{A1881DF2-0A37-4AF4-86DC-EE0251CC6EA6}.Release|x64.Build.0 = Release|x64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Debug|x64.Build.0 = Debug|x64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|ARM.Build.0 = Release|ARM\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|Win32.Build.0 = Release|Win32\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|x64.ActiveCfg = Release|x64\n\t\t{EC90ED56-551B-4784-9B07-4B49B972448F}.Release|x64.Build.0 = Release|x64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Debug|x64.Build.0 = Debug|x64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|ARM.Build.0 = Release|ARM\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|Win32.Build.0 = Release|Win32\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|x64.ActiveCfg = Release|x64\n\t\t{4AF8149D-C526-4D38-A4BC-9FFA67EDF924}.Release|x64.Build.0 = Release|x64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|ARM.ActiveCfg = Debug|ARM\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|ARM.Build.0 = Debug|ARM\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Debug|x64.Build.0 = Debug|x64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|ARM.ActiveCfg = Release|ARM\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|ARM.Build.0 = Release|ARM\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|Win32.Build.0 = Release|Win32\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|x64.ActiveCfg = Release|x64\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{DADCBCAD-4429-422E-9FA9-D8E538D0EF94} = {05730645-41B5-4B84-9068-17193932E5AE}\n\t\t{07E55DA5-7237-465A-8338-0B582452CC78} = {05730645-41B5-4B84-9068-17193932E5AE}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {285EC6E0-52A5-496A-BCD3-DC5FA161D0FC}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "dokan",
          "type": "tree",
          "content": null
        },
        {
          "name": "dokan_control",
          "type": "tree",
          "content": null
        },
        {
          "name": "dokan_fuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "dokan_np",
          "type": "tree",
          "content": null
        },
        {
          "name": "dokan_vsix",
          "type": "tree",
          "content": null
        },
        {
          "name": "dokan_wix",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.lgpl.txt",
          "type": "blob",
          "size": 7.4599609375,
          "content": "\t\t   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions. \n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version. \n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "license.mit.txt",
          "type": "blob",
          "size": 1.15234375,
          "content": "Copyright (C) 2015 - 2020 Adrien J. <liryna.stark@gmail.com> and Maxime C. <maxime@islog.com>\nCopyright (C) 2007 - 2011 Hiroki Asakawa <info@dokan-dev.net>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sys",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}