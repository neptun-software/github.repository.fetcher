{
  "metadata": {
    "timestamp": 1736710284348,
    "page": 53,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "unicorn-engine/unicorn",
      "stars": 7784,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.44921875,
          "content": "BasedOnStyle: LLVM\nIndentWidth: 4\nUseTab: Never\nBreakBeforeBraces: Linux\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortBlocksOnASingleLine: Empty\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortLoopsOnASingleLine: false\nIndentCaseLabels: false\nColumnLimit: 80\nSortIncludes: false\nAllowShortLambdasOnASingleLine: Inline\nAlwaysBreakBeforeMultilineStrings: false\nBreakStringLiterals: true\nPointerAlignment: Right\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0185546875,
          "content": ".DS_Store\n*.swp\n*.d\n*.o\n*.a\n*.dSYM\n*.so\n*.so.*\n*.exe\n*.dll\n*.class\n*.jar\n*.gem\n*~\n\nqemu/*-softmmu/\n\ntags\nqemu/config-host.ld\nqemu/config.log\nqemu/config.status\nqemu/config-host.h\nqemu/config-host.h-timestamp\nqemu/config-host.mak\n\nlibunicorn*.dll\nlibunicorn*.so\nlibunicorn*.dylib\n\nunicorn.pc\n\nunicorn.lib\nunicorn.dll\nunicorn.exp\nunicorn.def\nunicorn_*.lib\nunicorn_*.exp\nunicorn_*.dll\n\n\n*.tgz\n*.zip\n*.pyc\n_*.txt\n_*.diff\ntmp/\n\nbindings/python/build/\nbindings/python/dist/\nbindings/python/src/\nbindings/python/unicorn.egg-info/\nbindings/python/unicorn/lib/\nbindings/python/unicorn/include/\nbindings/python/MANIFEST\n/target/\nCargo.lock\nconfig.log\n\n\n#################\n## Visual Studio\n#################\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# vscode\n.vscode\n.vscode/\n\n# User-specific files\n*.opensdf\n*.sdf\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n\n[Dd]ebug/\n[Rr]elease/\nx64/\nWin32/\nbuild/\nbuild_*\nrust_build\n[Bb]in/\n[Oo]bj/\npackages/\ncmocka/\nzig-cache/\nzig-out/\n.cache"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1484375,
          "content": "[submodule \"docs/Unicorn_Engine_Documentation\"]\n\tpath = docs/Unicorn_Engine_Documentation\n\turl = https://github.com/kabeor/Unicorn-Engine-Documentation\n"
        },
        {
          "name": "AUTHORS.TXT",
          "type": "blob",
          "size": 0.0791015625,
          "content": "Nguyen Anh Quynh <aquynh -at- gmail.com>\nDang Hoang Vu <dang.hvu -at- gmail.com>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 47.6494140625,
          "content": "# CMake setup for Unicorn 2.\n# By Huitao Chen & Nguyen Anh Quynh, 2019-2020\n\ncmake_minimum_required(VERSION 3.5)\n\n# Only required for MSVC, but we can't know the compiler at this point because we haven't\n# called enable_language() or project(), and if we did that it would lock in the old\n# policy. Setting these policies is harmless for non-MSVC though, so just enable them\n# always.\nif(CMAKE_VERSION VERSION_GREATER_EQUAL \"3.15\")\n    # Set explicitly the policies we want rather than raising the base to the current\n    # version. This prevents unintended behavior changes as CMake evolves and provides a\n    # consistent experience across different CMake versions.\n    # CMP0091: prevent msvcrt flags being added to default CMAKE_<LANG>_FLAGS_<CONFIG>\n    cmake_policy(SET CMP0091 NEW)\n    # CMP0092: prevent warning flags being added to default CMAKE_<LANG>_FLAGS for MSVC\n    cmake_policy(SET CMP0092 NEW)\nendif()\n\n# Honor visibility properties for all target types.\ncmake_policy(SET CMP0063 NEW)\n\noption(ZIG_BUILD \"Enable zig build\" OFF)\nif(ZIG_BUILD)\n    include(cmake/zig.cmake)\nendif()\n\n# Workaround to fix wrong compiler on macos.\nif(APPLE AND NOT CMAKE_C_COMPILER)\n    set(CMAKE_C_COMPILER \"/usr/bin/cc\")\nendif()\n\n# Detect if unicorn is compiled as the top-level project\nset(PROJECT_IS_TOP_LEVEL OFF)\nif(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    set(PROJECT_IS_TOP_LEVEL ON)\n\n    # Enable folder support\n    set_property(GLOBAL PROPERTY USE_FOLDERS ON)\nendif()\n\nproject(unicorn C)\n\n# We depend on the availability of the CMAKE_MSVC_RUNTIME_LIBRARY, which is only\n# available in CMake 3.15 and above (see also the comments above in regards to policy\n# CMP0091).\nif(MSVC AND CMAKE_VERSION VERSION_LESS \"3.15\")\n    message(FATAL_ERROR \"Please update CMake to 3.15 or greater.\")\nendif()\n\n# mainline qemu mostly just uses compiler default\nset(CMAKE_C_STANDARD 11)\n\nset(UNICORN_VERSION_MAJOR 2)\nset(UNICORN_VERSION_MINOR 1)\nset(UNICORN_VERSION_PATCH 1)\n\ninclude(cmake/bundle_static.cmake)\n\n# Even though we generate shared lib and static archive at the same time, we still support\n# using unicorn as a subdirectory so we have to respect BUILD_SHARED_LIBS.\n#\n# Also we would like users to link a native cmake target, instead of a custom target for better\n# compatability.\noption(BUILD_SHARED_LIBS \"Build shared instead of static library\" ${PROJECT_IS_TOP_LEVEL})\noption(UNICORN_FUZZ \"Enable fuzzing\" OFF)\noption(UNICORN_LOGGING \"Enable logging\" OFF)\noption(UNICORN_BUILD_TESTS \"Build unicorn tests\" ${PROJECT_IS_TOP_LEVEL})\noption(UNICORN_INSTALL \"Enable unicorn installation\" ${PROJECT_IS_TOP_LEVEL})\nset(UNICORN_ARCH \"x86;arm;aarch64;riscv;mips;sparc;m68k;ppc;s390x;tricore\" CACHE STRING \"Enabled unicorn architectures\")\noption(UNICORN_TRACER \"Trace unicorn execution\" OFF)\n\nforeach(ARCH_LOOP ${UNICORN_ARCH})\n    string(TOUPPER \"${ARCH_LOOP}\" ARCH_LOOP)\n    set(UNICORN_HAS_${ARCH_LOOP} TRUE)\nendforeach()\n\nif(MSVC)\n    include_directories(\n        ${CMAKE_CURRENT_SOURCE_DIR}/msvc\n    )\nelse()\n    include_directories(\n        ${CMAKE_BINARY_DIR}\n    )\nendif()\n\ninclude_directories(\n    glib_compat\n    qemu\n    qemu/include\n    include\n    qemu/tcg\n)\n\n# QEMU logging facility\nif (UNICORN_LOGGING)\n    add_compile_options(-DUNICORN_LOGGING)\nendif()\n\n# Some distributions on some rare architecures don't auto link atomic for us and\n# we do this manually by adding flags.\nset(ATOMIC_LINKAGE_FIX FALSE)\nif(MSVC)\n    if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n        set(MSVC_FLAG  -D__x86_64__)\n    elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)\n        set(MSVC_FLAG  -D__i386__)\n    else()\n        message(FATAL_ERROR \"Neither WIN64 or WIN32!\")\n    endif()\n\n    add_compile_options(\n        -Dinline=__inline\n        -D__func__=__FUNCTION__\n        -D_CRT_SECURE_NO_WARNINGS\n        -DWIN32_LEAN_AND_MEAN\n        ${MSVC_FLAG}\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/tcg/i386\n    )\n\n    # Disable some warnings\n    add_compile_options($<$<COMPILE_LANGUAGE:C>:/wd4018>)\n    add_compile_options($<$<COMPILE_LANGUAGE:C>:/wd4098>)\n    add_compile_options($<$<COMPILE_LANGUAGE:C>:/wd4244>)\n    add_compile_options($<$<COMPILE_LANGUAGE:C>:/wd4267>)\n\n    # handle msvcrt setting being passed in CMAKE_C_FLAGS\n    if(CMAKE_C_FLAGS MATCHES \"[/-]M[TD]d?\")\n        # ensure CMAKE_MSVC_RUNTIME_LIBRARY is not already defined\n        if(DEFINED CMAKE_MSVC_RUNTIME_LIBRARY)\n            message(FATAL_ERROR \"please set the runtime library via either CMAKE_C_FLAGS or CMAKE_MSVC_RUNTIME_LIBRARY, not both\")\n        endif()\n\n        if(CMAKE_C_FLAGS MATCHES \"[/-]MTd\")\n            set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreadedDebug\")\n        elseif(CMAKE_C_FLAGS MATCHES \"[/-]MDd\")\n            set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreadedDebugDLL\")\n        elseif(CMAKE_C_FLAGS MATCHES \"[/-]MT\")\n            set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded\")\n        elseif(CMAKE_C_FLAGS MATCHES \"[/-]MD\")\n            set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreadedDLL\")\n        endif()\n\n        # prevent the arg from occurring more than once (not a big deal, just to keep tidy)\n        string(REGEX REPLACE \"[/-]M[TD]d?\" \"\" CMAKE_C_FLAGS ${CMAKE_C_FLAGS})\n    endif()\nelse()\n    if(MINGW)\n        execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpmachine\n            OUTPUT_VARIABLE UC_COMPILER_VERSION)\n\n        string(FIND \"${UC_COMPILER_VERSION}\" \"i686\" UC_RET)\n        if(${UC_RET} GREATER_EQUAL \"0\")\n            set(UNICORN_TARGET_ARCH \"i386\")\n            set(UNICORN_CFLAGS -m32 -static-libgcc) # Workaround for github action bugs\n            set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -m32\")\n            set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -m32\")\n        else()\n            set(UNICORN_TARGET_ARCH \"i386\")\n            set(UNICORN_CFLAGS -m64 -mcx16)\n            set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -m64\")\n            set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -m64\")\n        endif()\n    elseif(ANDROID_ABI)\n        string(FIND \"${ANDROID_ABI}\" \"arm64\" UC_RET)\n        file(WRITE ${CMAKE_BINARY_DIR}/adb.sh \"#!/bin/bash\\n\\n# Auto-generated by CMakeLists.txt\\n\\nadb shell mkdir -p /data/local/tmp/build\\n\")\n\n        if(${UC_RET} GREATER_EQUAL \"0\")\n            set(UNICORN_TARGET_ARCH \"aarch64\")\n        else()\n            string(FIND \"${ANDROID_ABI}\" \"armeabi\" UC_RET)\n\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"arm\")\n            else()\n                set(UNICORN_TARGET_ARCH \"i386\")\n            endif()\n        endif()\n    else()\n        execute_process(COMMAND ${CMAKE_C_COMPILER} -dM -E -\n            INPUT_FILE /dev/null\n            OUTPUT_VARIABLE UC_COMPILER_MACRO)\n\n        while(TRUE)\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__x86_64__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"i386\")\n                string(FIND \"${UC_COMPILER_MACRO}\" \"__ILP32__\" UC_RET)\n                if(${UC_RET} GREATER_EQUAL \"0\")\n                    set(UNICORN_CFLAGS -mx32)\n                    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -mx32\")\n                    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -mx32\")\n                else()\n                    set(UNICORN_CFLAGS -m64 -mcx16)\n                    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -m64\")\n                    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -m64\")\n                endif()\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__i386__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"i386\")\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__arm__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"arm\")\n                set(ATOMIC_LINKAGE_FIX TRUE)\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__aarch64__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"aarch64\")\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__mips__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"mips\")\n                set(ATOMIC_LINKAGE_FIX TRUE)\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__sparc__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"sparc\")\n                set(ATOMIC_LINKAGE_FIX TRUE)\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__ia64__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"ia64\")\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"_ARCH_PPC\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"ppc\")\n                set(ATOMIC_LINKAGE_FIX TRUE)\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__riscv\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"riscv\")\n                set(ATOMIC_LINKAGE_FIX TRUE)\n                break()\n            endif()\n            string(FIND \"${UC_COMPILER_MACRO}\" \"__s390__\" UC_RET)\n            if(${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"s390\")\n                set(ATOMIC_LINKAGE_FIX TRUE)\n                break()\n            endif()\n            string(FIND ${UC_COMPILER_MACRO} \"__tricore__\" UC_RET)\n            if (${UC_RET} GREATER_EQUAL \"0\")\n                set(UNICORN_TARGET_ARCH \"tricore\")\n                break()\n            endif()\n            message(FATAL_ERROR \"Unknown host compiler: ${CMAKE_C_COMPILER}.\")\n        endwhile(TRUE)\n    endif()\n\n    set(EXTRA_CFLAGS \"--extra-cflags=\")\n    if(UNICORN_HAS_X86)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_X86 \")\n    endif()\n    if(UNICORN_HAS_ARM)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_ARM \")\n    endif()\n    if(UNICORN_HAS_AARCH64)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_ARM64 \")\n    endif()\n    if(UNICORN_HAS_M68K)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_M68K \")\n    endif()\n    if(UNICORN_HAS_MIPS)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_MIPS -DUNICORN_HAS_MIPSEL -DUNICORN_HAS_MIPS64 -DUNICORN_HAS_MIPS64EL \")\n    endif()\n    if(UNICORN_HAS_SPARC)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_SPARC \")\n    endif()\n    if(UNICORN_HAS_PPC)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_PPC \")\n    endif()\n    if(UNICORN_HAS_RISCV)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_RISCV \")\n    endif()\n    if (UNICORN_HAS_S390X)\n        set (EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_S390X \")\n    endif()\n    if (UNICORN_HAS_TRICORE)\n        set (EXTRA_CFLAGS \"${EXTRA_CFLAGS}-DUNICORN_HAS_TRICORE \")\n    endif()\n\n    set(EXTRA_CFLAGS \"${EXTRA_CFLAGS}-fPIC\")\n    if(ANDROID_ABI)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS} --target=${CMAKE_C_COMPILER_TARGET}\")\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS} --sysroot=${CMAKE_SYSROOT}\")\n    endif()\n    if(UNICORN_FUZZ)\n        set(EXTRA_CFLAGS \"${EXTRA_CFLAGS} ${CMAKE_C_FLAGS}\")\n    endif()\n    if(UNICORN_TRACER)\n        set (EXTRA_CFLAGS \"${EXTRA_CFLAGS} -DUNICORN_TRACER\")\n    endif()\n    if (ATOMIC_LINKAGE_FIX)\n        set (EXTRA_CFLAGS \"${EXTRA_CFLAGS} -latomic\")\n    endif()\n    if (CMAKE_OSX_SYSROOT)\n        # https://github.com/unicorn-engine/unicorn/issues/1917\n        set (EXTRA_CFLAGS \"${EXTRA_CFLAGS} -isysroot ${CMAKE_OSX_SYSROOT} \")\n    endif()\n\n    set(TARGET_LIST \"--target-list=\")\n    if(UNICORN_HAS_X86)\n        set(TARGET_LIST \"${TARGET_LIST}x86_64-softmmu, \")\n    endif()\n    if(UNICORN_HAS_ARM)\n        set(TARGET_LIST \"${TARGET_LIST}arm-softmmu, \")\n    endif()\n    if(UNICORN_HAS_AARCH64)\n        set(TARGET_LIST \"${TARGET_LIST}aarch64-softmmu, \")\n    endif()\n    if(UNICORN_HAS_M68K)\n        set(TARGET_LIST \"${TARGET_LIST}m68k-softmmu, \")\n    endif()\n    if(UNICORN_HAS_MIPS)\n        set(TARGET_LIST \"${TARGET_LIST}mips-softmmu, mipsel-softmmu, mips64-softmmu, mips64el-softmmu, \")\n    endif()\n    if(UNICORN_HAS_SPARC)\n        set(TARGET_LIST \"${TARGET_LIST}sparc-softmmu, sparc64-softmmu, \")\n    endif()\n    if(UNICORN_HAS_PPC)\n        set(TARGET_LIST \"${TARGET_LIST}ppc-softmmu, ppc64-softmmu, \")\n    endif()\n    if(UNICORN_HAS_RISCV)\n        set(TARGET_LIST \"${TARGET_LIST}riscv32-softmmu, riscv64-softmmu, \")\n    endif()\n    if(UNICORN_HAS_S390X)\n        set(TARGET_LIST \"${TARGET_LIST}s390x-softmmu, \")\n    endif()\n    if (UNICORN_HAS_TRICORE)\n        set (TARGET_LIST \"${TARGET_LIST}tricore-softmmu, \")\n    endif()\n    set(TARGET_LIST \"${TARGET_LIST} \")\n\n    # GEN config-host.mak & target directories\n    execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/configure\n        --cc=${CMAKE_C_COMPILER}\n        ${EXTRA_CFLAGS}\n        ${TARGET_LIST}\n        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}\n    )\n    execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n        INPUT_FILE ${CMAKE_BINARY_DIR}/config-host.mak\n        OUTPUT_FILE ${CMAKE_BINARY_DIR}/config-host.h\n    )\n    if(UNICORN_HAS_X86)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/x86_64-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/x86_64-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_ARM)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/arm-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/arm-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_AARCH64)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/aarch64-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/aarch64-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_M68K)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/m68k-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/m68k-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_MIPS)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/mips-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/mips-softmmu/config-target.h\n        )\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/mipsel-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/mipsel-softmmu/config-target.h\n        )\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/mips64-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/mips64-softmmu/config-target.h\n        )\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/mips64el-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/mips64el-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_SPARC)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/sparc-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/sparc-softmmu/config-target.h\n        )\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/sparc64-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/sparc64-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_PPC)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/ppc-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/ppc-softmmu/config-target.h\n        )\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/ppc64-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/ppc64-softmmu/config-target.h\n        )\n    endif()\n    if(UNICORN_HAS_RISCV)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/riscv32-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/riscv32-softmmu/config-target.h\n        )\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/riscv64-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/riscv64-softmmu/config-target.h\n        )\n    endif()\n    if (UNICORN_HAS_S390X)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/s390x-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/s390x-softmmu/config-target.h\n        )\n    endif()\n    if (UNICORN_HAS_TRICORE)\n        execute_process(COMMAND sh ${CMAKE_CURRENT_SOURCE_DIR}/qemu/scripts/create_config\n            INPUT_FILE ${CMAKE_BINARY_DIR}/tricore-softmmu/config-target.mak\n            OUTPUT_FILE ${CMAKE_BINARY_DIR}/tricore-softmmu/config-target.h\n        )\n    endif()\n    add_compile_options(\n        ${UNICORN_CFLAGS}\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/tcg/${UNICORN_TARGET_ARCH}\n        -D_GNU_SOURCE\n        -D_FILE_OFFSET_BITS=64\n        -D_LARGEFILE_SOURCE\n        -Wall\n        -fPIC\n    )\n    if (ATOMIC_LINKAGE_FIX)\n        add_compile_options(\n            -latomic\n        )\n    endif()\n    if(APPLE)\n        # This warning is disabled by default for gcc and doesn't cause any bug.\n        add_compile_options(\n            -Wno-missing-braces\n        )\n    endif()\nendif()\n\nset(UNICORN_ARCH_COMMON\n    qemu/exec.c\n    qemu/exec-vary.c\n\n    qemu/softmmu/cpus.c\n    qemu/softmmu/ioport.c\n    qemu/softmmu/memory.c\n    qemu/softmmu/memory_mapping.c\n\n    qemu/fpu/softfloat.c\n\n    qemu/tcg/optimize.c\n    qemu/tcg/tcg.c\n    qemu/tcg/tcg-op.c\n    qemu/tcg/tcg-op-gvec.c\n    qemu/tcg/tcg-op-vec.c\n\n    qemu/accel/tcg/cpu-exec.c\n    qemu/accel/tcg/cpu-exec-common.c\n    qemu/accel/tcg/cputlb.c\n    qemu/accel/tcg/tcg-all.c\n    qemu/accel/tcg/tcg-runtime.c\n    qemu/accel/tcg/tcg-runtime-gvec.c\n    qemu/accel/tcg/translate-all.c\n    qemu/accel/tcg/translator.c\n\n    qemu/softmmu/unicorn_vtlb.c\n)\n\nif(UNICORN_HAS_X86)\nadd_library(x86_64-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/hw/i386/x86.c\n\n    qemu/target/i386/arch_memory_mapping.c\n    qemu/target/i386/bpt_helper.c\n    qemu/target/i386/cc_helper.c\n    qemu/target/i386/cpu.c\n    qemu/target/i386/excp_helper.c\n    qemu/target/i386/fpu_helper.c\n    qemu/target/i386/helper.c\n    qemu/target/i386/int_helper.c\n    qemu/target/i386/machine.c\n    qemu/target/i386/mem_helper.c\n    qemu/target/i386/misc_helper.c\n    qemu/target/i386/mpx_helper.c\n    qemu/target/i386/seg_helper.c\n    qemu/target/i386/smm_helper.c\n    qemu/target/i386/svm_helper.c\n    qemu/target/i386/translate.c\n    qemu/target/i386/xsave_helper.c\n    qemu/target/i386/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(x86_64-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIx86_64.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/x86_64-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/i386\n    )\nelse()\n    target_compile_options(x86_64-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include x86_64.h\n        -I${CMAKE_BINARY_DIR}/x86_64-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/i386\n    )\n\n    # Log and pow\n    target_link_libraries(x86_64-softmmu PRIVATE m)\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(x86_64-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_ARM)\nadd_library(arm-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/arm/cpu.c\n    qemu/target/arm/crypto_helper.c\n    qemu/target/arm/debug_helper.c\n    qemu/target/arm/helper.c\n    qemu/target/arm/iwmmxt_helper.c\n    qemu/target/arm/m_helper.c\n    qemu/target/arm/neon_helper.c\n    qemu/target/arm/op_helper.c\n    qemu/target/arm/psci.c\n    qemu/target/arm/tlb_helper.c\n    qemu/target/arm/translate.c\n    qemu/target/arm/vec_helper.c\n    qemu/target/arm/vfp_helper.c\n    qemu/target/arm/unicorn_arm.c\n)\n\nif(MSVC)\n    target_compile_options(arm-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIarm.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/arm-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/arm\n    )\nelse()\n    target_compile_options(arm-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include arm.h\n        -I${CMAKE_BINARY_DIR}/arm-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/arm\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(arm-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_AARCH64)\nadd_library(aarch64-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/arm/cpu64.c\n    qemu/target/arm/cpu.c\n    qemu/target/arm/crypto_helper.c\n    qemu/target/arm/debug_helper.c\n    qemu/target/arm/helper-a64.c\n    qemu/target/arm/helper.c\n    qemu/target/arm/iwmmxt_helper.c\n    qemu/target/arm/m_helper.c\n    qemu/target/arm/neon_helper.c\n    qemu/target/arm/op_helper.c\n    qemu/target/arm/pauth_helper.c\n    qemu/target/arm/psci.c\n    qemu/target/arm/sve_helper.c\n    qemu/target/arm/tlb_helper.c\n    qemu/target/arm/translate-a64.c\n    qemu/target/arm/translate.c\n    qemu/target/arm/translate-sve.c\n    qemu/target/arm/vec_helper.c\n    qemu/target/arm/vfp_helper.c\n    qemu/target/arm/unicorn_aarch64.c\n)\n\nif(MSVC)\n    target_compile_options(aarch64-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIaarch64.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/aarch64-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/arm\n    )\nelse()\n    target_compile_options(aarch64-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include aarch64.h\n        -I${CMAKE_BINARY_DIR}/aarch64-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/arm\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(aarch64-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_M68K)\nadd_library(m68k-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/m68k/cpu.c\n    qemu/target/m68k/fpu_helper.c\n    qemu/target/m68k/helper.c\n    qemu/target/m68k/op_helper.c\n    qemu/target/m68k/softfloat.c\n    qemu/target/m68k/translate.c\n    qemu/target/m68k/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(m68k-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIm68k.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/m68k-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/m68k\n    )\nelse()\n    target_compile_options(m68k-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include m68k.h\n        -I${CMAKE_BINARY_DIR}/m68k-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/m68k\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(m68k-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_MIPS)\nadd_library(mips-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/mips/cp0_helper.c\n    qemu/target/mips/cp0_timer.c\n    qemu/target/mips/cpu.c\n    qemu/target/mips/dsp_helper.c\n    qemu/target/mips/fpu_helper.c\n    qemu/target/mips/helper.c\n    qemu/target/mips/lmi_helper.c\n    qemu/target/mips/msa_helper.c\n    qemu/target/mips/op_helper.c\n    qemu/target/mips/translate.c\n    qemu/target/mips/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(mips-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FImips.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/mips-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nelse()\n    target_compile_options(mips-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include mips.h\n        -I${CMAKE_BINARY_DIR}/mips-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(mips-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nadd_library(mipsel-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/mips/cp0_helper.c\n    qemu/target/mips/cp0_timer.c\n    qemu/target/mips/cpu.c\n    qemu/target/mips/dsp_helper.c\n    qemu/target/mips/fpu_helper.c\n    qemu/target/mips/helper.c\n    qemu/target/mips/lmi_helper.c\n    qemu/target/mips/msa_helper.c\n    qemu/target/mips/op_helper.c\n    qemu/target/mips/translate.c\n    qemu/target/mips/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(mipsel-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FImipsel.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/mipsel-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nelse()\n    target_compile_options(mipsel-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include mipsel.h\n        -I${CMAKE_BINARY_DIR}/mipsel-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(mipsel-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nadd_library(mips64-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/mips/cp0_helper.c\n    qemu/target/mips/cp0_timer.c\n    qemu/target/mips/cpu.c\n    qemu/target/mips/dsp_helper.c\n    qemu/target/mips/fpu_helper.c\n    qemu/target/mips/helper.c\n    qemu/target/mips/lmi_helper.c\n    qemu/target/mips/msa_helper.c\n    qemu/target/mips/op_helper.c\n    qemu/target/mips/translate.c\n    qemu/target/mips/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(mips64-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FImips64.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/mips64-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nelse()\n    target_compile_options(mips64-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include mips64.h\n        -I${CMAKE_BINARY_DIR}/mips64-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(mips64-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nadd_library(mips64el-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/mips/cp0_helper.c\n    qemu/target/mips/cp0_timer.c\n    qemu/target/mips/cpu.c\n    qemu/target/mips/dsp_helper.c\n    qemu/target/mips/fpu_helper.c\n    qemu/target/mips/helper.c\n    qemu/target/mips/lmi_helper.c\n    qemu/target/mips/msa_helper.c\n    qemu/target/mips/op_helper.c\n    qemu/target/mips/translate.c\n    qemu/target/mips/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(mips64el-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FImips64el.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/mips64el-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nelse()\n    target_compile_options(mips64el-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include mips64el.h\n        -I${CMAKE_BINARY_DIR}/mips64el-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/mips\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(mips64el-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_SPARC)\nadd_library(sparc-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/sparc/cc_helper.c\n    qemu/target/sparc/cpu.c\n    qemu/target/sparc/fop_helper.c\n    qemu/target/sparc/helper.c\n    qemu/target/sparc/int32_helper.c\n    qemu/target/sparc/ldst_helper.c\n    qemu/target/sparc/mmu_helper.c\n    qemu/target/sparc/translate.c\n    qemu/target/sparc/win_helper.c\n    qemu/target/sparc/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(sparc-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIsparc.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/sparc-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/sparc\n    )\nelse()\n    target_compile_options(sparc-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include sparc.h\n        -I${CMAKE_BINARY_DIR}/sparc-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/sparc\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(sparc-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nadd_library(sparc64-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/sparc/cc_helper.c\n    qemu/target/sparc/cpu.c\n    qemu/target/sparc/fop_helper.c\n    qemu/target/sparc/helper.c\n    qemu/target/sparc/int64_helper.c\n    qemu/target/sparc/ldst_helper.c\n    qemu/target/sparc/mmu_helper.c\n    qemu/target/sparc/translate.c\n    qemu/target/sparc/vis_helper.c\n    qemu/target/sparc/win_helper.c\n    qemu/target/sparc/unicorn64.c\n)\n\nif(MSVC)\n    target_compile_options(sparc64-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIsparc64.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/sparc64-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/sparc\n    )\nelse()\n    target_compile_options(sparc64-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include sparc64.h\n        -I${CMAKE_BINARY_DIR}/sparc64-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/sparc\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(sparc64-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_PPC)\nadd_library(ppc-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/hw/ppc/ppc.c\n    qemu/hw/ppc/ppc_booke.c\n\n    qemu/libdecnumber/decContext.c\n    qemu/libdecnumber/decNumber.c\n    qemu/libdecnumber/dpd/decimal128.c\n    qemu/libdecnumber/dpd/decimal32.c\n    qemu/libdecnumber/dpd/decimal64.c\n\n    qemu/target/ppc/cpu.c\n    qemu/target/ppc/cpu-models.c\n    qemu/target/ppc/dfp_helper.c\n    qemu/target/ppc/excp_helper.c\n    qemu/target/ppc/fpu_helper.c\n    qemu/target/ppc/int_helper.c\n    qemu/target/ppc/machine.c\n    qemu/target/ppc/mem_helper.c\n    qemu/target/ppc/misc_helper.c\n    qemu/target/ppc/mmu-hash32.c\n    qemu/target/ppc/mmu_helper.c\n    qemu/target/ppc/timebase_helper.c\n    qemu/target/ppc/translate.c\n    qemu/target/ppc/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(ppc-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIppc.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/ppc-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/ppc\n    )\nelse()\n    target_compile_options(ppc-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include ppc.h\n        -I${CMAKE_BINARY_DIR}/ppc-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/ppc\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(ppc-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nadd_library(ppc64-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/hw/ppc/ppc.c\n    qemu/hw/ppc/ppc_booke.c\n\n    qemu/libdecnumber/decContext.c\n    qemu/libdecnumber/decNumber.c\n    qemu/libdecnumber/dpd/decimal128.c\n    qemu/libdecnumber/dpd/decimal32.c\n    qemu/libdecnumber/dpd/decimal64.c\n\n    qemu/target/ppc/compat.c\n    qemu/target/ppc/cpu.c\n    qemu/target/ppc/cpu-models.c\n    qemu/target/ppc/dfp_helper.c\n    qemu/target/ppc/excp_helper.c\n    qemu/target/ppc/fpu_helper.c\n    qemu/target/ppc/int_helper.c\n    qemu/target/ppc/machine.c\n    qemu/target/ppc/mem_helper.c\n    qemu/target/ppc/misc_helper.c\n    qemu/target/ppc/mmu-book3s-v3.c\n    qemu/target/ppc/mmu-hash32.c\n    qemu/target/ppc/mmu-hash64.c\n    qemu/target/ppc/mmu_helper.c\n    qemu/target/ppc/mmu-radix64.c\n    qemu/target/ppc/timebase_helper.c\n    qemu/target/ppc/translate.c\n    qemu/target/ppc/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(ppc64-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIppc64.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/ppc64-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/ppc\n    )\nelse()\n    target_compile_options(ppc64-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include ppc64.h\n        -I${CMAKE_BINARY_DIR}/ppc64-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/ppc\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(ppc64-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif(UNICORN_HAS_RISCV)\nadd_library(riscv32-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/riscv/cpu.c\n    qemu/target/riscv/cpu_helper.c\n    qemu/target/riscv/csr.c\n    qemu/target/riscv/fpu_helper.c\n    qemu/target/riscv/op_helper.c\n    qemu/target/riscv/pmp.c\n    qemu/target/riscv/translate.c\n    qemu/target/riscv/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(riscv32-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIriscv32.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/riscv32-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/riscv\n    )\nelse()\n    target_compile_options(riscv32-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include riscv32.h\n        -I${CMAKE_BINARY_DIR}/riscv32-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/riscv\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(riscv32-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nadd_library(riscv64-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/riscv/cpu.c\n    qemu/target/riscv/cpu_helper.c\n    qemu/target/riscv/csr.c\n    qemu/target/riscv/fpu_helper.c\n    qemu/target/riscv/op_helper.c\n    qemu/target/riscv/pmp.c\n    qemu/target/riscv/translate.c\n    qemu/target/riscv/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(riscv64-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIriscv64.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/riscv64-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/riscv\n    )\nelse()\n    target_compile_options(riscv64-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include riscv64.h\n        -I${CMAKE_BINARY_DIR}/riscv64-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/riscv\n    )\nendif()\n\nif(UNICORN_TRACER)\n    target_compile_options(riscv64-softmmu PRIVATE -DUNICORN_TRACER)\nendif()\n\nendif()\n\nif (UNICORN_HAS_S390X)\nadd_library(s390x-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/hw/s390x/s390-skeys.c\n\n    qemu/target/s390x/cc_helper.c\n    qemu/target/s390x/cpu.c\n    qemu/target/s390x/cpu_features.c\n    qemu/target/s390x/cpu_models.c\n    qemu/target/s390x/crypto_helper.c\n    qemu/target/s390x/excp_helper.c\n    qemu/target/s390x/fpu_helper.c\n    qemu/target/s390x/helper.c\n    qemu/target/s390x/interrupt.c\n    qemu/target/s390x/int_helper.c\n    qemu/target/s390x/ioinst.c\n    qemu/target/s390x/mem_helper.c\n    qemu/target/s390x/misc_helper.c\n    qemu/target/s390x/mmu_helper.c\n    qemu/target/s390x/sigp.c\n    qemu/target/s390x/tcg-stub.c\n    qemu/target/s390x/translate.c\n    qemu/target/s390x/vec_fpu_helper.c\n    qemu/target/s390x/vec_helper.c\n    qemu/target/s390x/vec_int_helper.c\n    qemu/target/s390x/vec_string_helper.c\n    qemu/target/s390x/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(s390x-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FIs390x.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/s390x-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/s390x\n    )\nelse()\n    target_compile_options(s390x-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include s390x.h\n        -I${CMAKE_BINARY_DIR}/s390x-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/s390x\n    )\nendif()\nendif()\n\n\nif (UNICORN_HAS_TRICORE)\nadd_library(tricore-softmmu STATIC\n    ${UNICORN_ARCH_COMMON}\n\n    qemu/target/tricore/cpu.c\n    qemu/target/tricore/fpu_helper.c\n    qemu/target/tricore/helper.c\n    qemu/target/tricore/op_helper.c\n    qemu/target/tricore/translate.c\n    qemu/target/tricore/unicorn.c\n)\n\nif(MSVC)\n    target_compile_options(tricore-softmmu PRIVATE\n        -DNEED_CPU_H\n        /FItricore.h\n        /I${CMAKE_CURRENT_SOURCE_DIR}/msvc/tricore-softmmu\n        /I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/tricore\n    )\nelse()\n    target_compile_options(tricore-softmmu PRIVATE\n        -DNEED_CPU_H\n        -include tricore.h\n        -I${CMAKE_BINARY_DIR}/tricore-softmmu\n        -I${CMAKE_CURRENT_SOURCE_DIR}/qemu/target/tricore\n    )\nendif()\nendif()\n\n\nset(UNICORN_SRCS\n    uc.c\n\n    qemu/softmmu/vl.c\n\n    qemu/hw/core/cpu.c\n)\n\nset(UNICORN_COMMON_SRCS\n\n    list.c\n\n    glib_compat/glib_compat.c\n    glib_compat/gtestutils.c\n    glib_compat/garray.c\n    glib_compat/gtree.c\n    glib_compat/grand.c\n    glib_compat/glist.c\n    glib_compat/gmem.c\n    glib_compat/gpattern.c\n    glib_compat/gslice.c\n\n    qemu/util/bitmap.c\n    qemu/util/bitops.c\n    qemu/util/crc32c.c\n    qemu/util/cutils.c\n    qemu/util/getauxval.c\n    qemu/util/guest-random.c\n    qemu/util/host-utils.c\n    qemu/util/osdep.c\n    qemu/util/qdist.c\n    qemu/util/qemu-timer.c\n    qemu/util/qemu-timer-common.c\n    qemu/util/range.c\n    qemu/util/qht.c\n    qemu/util/pagesize.c\n    qemu/util/cacheinfo.c\n\n    qemu/crypto/aes.c\n)\n\n# A workaround to avoid circle dependency between unicorn and *-softmmu\nif(MSVC)\n    set(UNICORN_COMMON_SRCS\n        ${UNICORN_COMMON_SRCS}\n        qemu/util/oslib-win32.c\n        qemu/util/qemu-thread-win32.c\n    )\n    if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n        if(MSVC_VERSION LESS 1600 AND MSVC_IDE)\n            add_custom_command(OUTPUT \"${CMAKE_CURRENT_SOURCE_DIR}/build/setjmp-wrapper-win32.dir/setjmp-wrapper-win32.obj\"\n                COMMAND ml64 /c /nologo /Fo\"${CMAKE_CURRENT_SOURCE_DIR}/build/setjmp-wrapper-win32.dir/setjmp-wrapper-win32.obj\" /W3 /errorReport:prompt /Ta\"${CMAKE_CURRENT_SOURCE_DIR}/qemu/util/setjmp-wrapper-win32.asm\"\n                DEPENDS \"${CMAKE_CURRENT_SOURCE_DIR}/qemu/util/setjmp-wrapper-win32.asm\"\n            )\n            set(UNICORN_SRCS ${UNICORN_SRCS} \"${CMAKE_CURRENT_SOURCE_DIR}/build/setjmp-wrapper-win32.dir/setjmp-wrapper-win32.obj\")\n        else()\n            enable_language(ASM_MASM)\n        endif()\n        set(UNICORN_COMMON_SRCS ${UNICORN_COMMON_SRCS} qemu/util/setjmp-wrapper-win32.asm)\n        set_property(SOURCE qemu/util/setjmp-wrapper-win32.asm PROPERTY LANGUAGE ASM_MASM)\n    endif()\nelse()\n    set(UNICORN_COMMON_SRCS\n        ${UNICORN_COMMON_SRCS}\n        qemu/util/oslib-posix.c\n        qemu/util/qemu-thread-posix.c\n    )\nendif()\n\nadd_library(unicorn-common STATIC\n    ${UNICORN_COMMON_SRCS}\n)\n\nset_target_properties(unicorn-common\n                      PROPERTIES\n                      C_VISIBILITY_PRESET\n                      hidden)\n\nif(NOT MSVC AND NOT ANDROID_ABI)\n    target_link_libraries(unicorn-common PRIVATE pthread)\nendif()\n\nadd_library(unicorn ${UNICORN_SRCS})\n# For static archive\nif (BUILD_SHARED_LIBS)\n    add_library(unicorn_static STATIC ${UNICORN_SRCS})\nendif()\n\nif(BUILD_SHARED_LIBS)\n    if(ANDROID_ABI)\n        file(APPEND ${CMAKE_BINARY_DIR}/adb.sh \"adb push ./libunicorn.so /data/local/tmp/build/\\n\")\n    endif()\nendif()\n\nset(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} unicorn-common)\nif (ATOMIC_LINKAGE_FIX)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -latomic)\nendif()\nif(UNICORN_HAS_X86)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_X86)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} x86_64-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_x86 sample_x86_32_gdt_and_seg_regs sample_batch_reg mem_apis shellcode sample_mmu)\n    target_link_libraries(x86_64-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_x86)\nendif()\nif(UNICORN_HAS_ARM)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_ARM)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} arm-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_arm)\n    target_link_libraries(arm-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_arm)\nendif()\nif(UNICORN_HAS_AARCH64)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_ARM64)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} aarch64-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_arm64)\n    target_link_libraries(aarch64-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_arm64)\nendif()\nif(UNICORN_HAS_M68K)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_M68K)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} m68k-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_m68k)\n    target_link_libraries(m68k-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_m68k)\nendif()\nif(UNICORN_HAS_MIPS)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_MIPS -DUNICORN_HAS_MIPSEL -DUNICORN_HAS_MIPS64 -DUNICORN_HAS_MIPS64EL)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} mips-softmmu mipsel-softmmu mips64-softmmu mips64el-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_mips)\n    target_link_libraries(mips-softmmu PRIVATE unicorn-common)\n    target_link_libraries(mipsel-softmmu PRIVATE unicorn-common)\n    target_link_libraries(mips64-softmmu PRIVATE unicorn-common)\n    target_link_libraries(mips64el-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_mips)\nendif()\nif(UNICORN_HAS_SPARC)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_SPARC)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} sparc-softmmu sparc64-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_sparc)\n    target_link_libraries(sparc-softmmu PRIVATE unicorn-common)\n    target_link_libraries(sparc64-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_sparc)\nendif()\nif(UNICORN_HAS_PPC)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_PPC)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} ppc-softmmu ppc64-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_ppc)\n    target_link_libraries(ppc-softmmu PRIVATE unicorn-common)\n    target_link_libraries(ppc64-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_ppc)\nendif()\nif(UNICORN_HAS_RISCV)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_RISCV)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} riscv32-softmmu riscv64-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_riscv)\n    target_link_libraries(riscv32-softmmu PRIVATE unicorn-common)\n    target_link_libraries(riscv64-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_riscv)\nendif()\nif (UNICORN_HAS_S390X)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_S390X)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} s390x-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_s390x)\n    target_link_libraries(s390x-softmmu PRIVATE unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_s390x)\nendif()\nif (UNICORN_HAS_TRICORE)\n    set(UNICORN_COMPILE_OPTIONS ${UNICORN_COMPILE_OPTIONS} -DUNICORN_HAS_TRICORE)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} tricore-softmmu)\n    set(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_tricore)\n    target_link_libraries(tricore-softmmu unicorn-common)\n    set(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_tricore)\nendif()\n\n# Extra tests\nset(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_mem)\nset(UNICORN_TEST_FILE ${UNICORN_TEST_FILE} test_ctl)\nset(UNICORN_SAMPLE_FILE ${UNICORN_SAMPLE_FILE} sample_ctl)\n\nif(UNICORN_TRACER)\n    target_compile_options(unicorn-common PRIVATE -DUNICORN_TRACER)\n    target_compile_options(unicorn PRIVATE -DUNICORN_TRACER)\nendif()\n\ntarget_compile_options(unicorn-common PRIVATE\n    ${UNICORN_COMPILE_OPTIONS}\n)\n\ntarget_compile_options(unicorn PRIVATE\n    ${UNICORN_COMPILE_OPTIONS}\n)\n\n# For static archive\nif (BUILD_SHARED_LIBS)\n    target_compile_options(unicorn_static PRIVATE\n        ${UNICORN_COMPILE_OPTIONS}\n    )\nendif()\n\nif(MINGW)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} pthread)\nendif()\n\nif(ATOMIC_LINKAGE_FIX)\n    set(UNICORN_LINK_LIBRARIES ${UNICORN_LINK_LIBRARIES} atomic)\nendif()\n\nif(MSVC)\n    if(BUILD_SHARED_LIBS)\n        target_compile_options(unicorn PRIVATE\n            -DUNICORN_SHARED\n        )\n\n        # For static archive\n        target_link_libraries(unicorn_static PRIVATE\n            ${UNICORN_LINK_LIBRARIES}\n        )\n    endif()\n\n    target_link_libraries(unicorn PRIVATE\n        ${UNICORN_LINK_LIBRARIES}\n    )\n\n    set_target_properties(unicorn PROPERTIES\n        VERSION \"${UNICORN_VERSION_MAJOR}.${UNICORN_VERSION_MINOR}\"\n    )\nelse()\n    target_link_libraries(unicorn PRIVATE\n        ${UNICORN_LINK_LIBRARIES}\n        m\n    )\n\n    target_link_libraries(unicorn PUBLIC\n        m\n    )\n\n    # For static archive\n    if (BUILD_SHARED_LIBS)\n        target_link_libraries(unicorn_static PUBLIC\n            m\n        )\n\n        target_link_libraries(unicorn_static PRIVATE\n            ${UNICORN_LINK_LIBRARIES}\n            m\n        )\n    endif()\n\n    set_target_properties(unicorn PROPERTIES\n        VERSION ${UNICORN_VERSION_MAJOR}\n        SOVERSION ${UNICORN_VERSION_MAJOR}\n    )\nendif()\n\nif(MSVC)\n    set(SAMPLES_LIB\n        unicorn\n    )\nelseif(NOT ANDROID_ABI)\n    set(SAMPLES_LIB\n        unicorn\n        pthread\n    )\nelse()\n    set(SAMPLES_LIB\n        unicorn\n    )\nendif()\n\nif(ATOMIC_LINKAGE_FIX)\n    set(SAMPLES_LIB\n        ${SAMPLES_LIB}\n        atomic\n    )\nendif()\n\ntarget_include_directories(unicorn PUBLIC\n    include\n)\n\n# For static archive\nif (BUILD_SHARED_LIBS)\n    target_include_directories(unicorn_static PUBLIC\n        include\n    )\nendif()\n\n# Black magic for generating static archives...\nif (BUILD_SHARED_LIBS)\n    if (MSVC)\n        # Avoid the import lib built by MVSC clash with our archive.\n        set_target_properties(unicorn PROPERTIES ARCHIVE_OUTPUT_NAME \"unicorn-import\")\n    endif()\n    bundle_static_library(unicorn_static unicorn_archive unicorn)\nelse()\n    # Rename the \"static\" lib to avoid filename clash.\n    set_target_properties(unicorn PROPERTIES OUTPUT_NAME \"unicorn-static\")\n    bundle_static_library(unicorn unicorn_archive unicorn)\nendif()\n\nif(UNICORN_FUZZ)\n    set(UNICORN_FUZZ_SUFFIX \"arm_arm;arm_armbe;arm_thumb;arm64_arm;arm64_armbe;m68k_be;mips_32be;mips_32le;sparc_32be;x86_16;x86_32;x86_64;s390x_be\")\n    if (NOT APPLE)\n        set(SAMPLES_LIB ${SAMPLES_LIB} rt)\n    endif()\n    foreach(SUFFIX ${UNICORN_FUZZ_SUFFIX})\n        add_executable(fuzz_emu_${SUFFIX}\n            ${CMAKE_CURRENT_SOURCE_DIR}/tests/fuzz/fuzz_emu_${SUFFIX}.c\n            ${CMAKE_CURRENT_SOURCE_DIR}/tests/fuzz/onedir.c\n        )\n        target_link_libraries(fuzz_emu_${SUFFIX} PRIVATE\n            ${SAMPLES_LIB}\n        )\n    endforeach()\nendif()\n\nif(UNICORN_BUILD_TESTS)\n    enable_testing()\n    foreach(SAMPLE_FILE ${UNICORN_SAMPLE_FILE})\n        add_executable(${SAMPLE_FILE}\n            ${CMAKE_CURRENT_SOURCE_DIR}/samples/${SAMPLE_FILE}.c\n        )\n        target_link_libraries(${SAMPLE_FILE} PRIVATE\n            ${SAMPLES_LIB}\n        )\n        endforeach()\n\n        foreach(TEST_FILE ${UNICORN_TEST_FILE})\n        add_executable(${TEST_FILE}\n            ${CMAKE_CURRENT_SOURCE_DIR}/tests/unit/${TEST_FILE}.c\n        )\n        target_compile_options(${TEST_FILE} PRIVATE\n            ${UNICORN_COMPILE_OPTIONS}\n        )\n        target_link_libraries(${TEST_FILE} PRIVATE\n            ${SAMPLES_LIB}\n        )\n        add_test(${TEST_FILE} ${TEST_FILE})\n        if(ANDROID_ABI)\n            file(APPEND ${CMAKE_BINARY_DIR}/adb.sh \"adb push ${TEST_FILE} /data/local/tmp/build/\\n\")\n            file(APPEND ${CMAKE_BINARY_DIR}/adb.sh \"adb shell \\\"chmod +x /data/local/tmp/build/${TEST_FILE}\\\"\\n\")\n            file(APPEND ${CMAKE_BINARY_DIR}/adb.sh \"adb shell \\'LD_LIBRARY_PATH=/data/local/tmp/build:$LD_LIBRARY_PATH /data/local/tmp/build/${TEST_FILE}\\' || exit -1\\n\")\n        endif()\n        if (UNICORN_TARGET_ARCH STREQUAL \"aarch64\" OR UNICORN_TARGET_ARCH STREQUAL \"ppc\")\n            target_compile_definitions(${TEST_FILE} PRIVATE TARGET_READ_INLINED)\n        endif()\n    endforeach()\nendif()\n\n\nif(UNICORN_INSTALL AND NOT MSVC)\n    include(\"GNUInstallDirs\")\n    file(GLOB UNICORN_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/include/unicorn/*.h)\n    if (BUILD_SHARED_LIBS)\n        install(TARGETS unicorn\n            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n        )\n    endif()\n    install(FILES $<TARGET_FILE:unicorn_archive> DESTINATION ${CMAKE_INSTALL_LIBDIR})\n    install(FILES ${UNICORN_HEADERS} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/unicorn)\n    if (ATOMIC_LINKAGE_FIX)\n        set(ATOMIC_LINK_PKG_CONFIG \" -latomic\")\n    else()\n        set(ATOMIC_LINK_PKG_CONFIG \"\")\n    endif()\n    file(WRITE ${CMAKE_BINARY_DIR}/unicorn.pc \"Name: unicorn\\n\\\nDescription: Unicorn emulator engine\\n\\\nVersion: ${UNICORN_VERSION_MAJOR}.${UNICORN_VERSION_MINOR}.${UNICORN_VERSION_PATCH}\\n\\\nlibdir=${CMAKE_INSTALL_FULL_LIBDIR}\\n\\\nincludedir=${CMAKE_INSTALL_FULL_INCLUDEDIR}\\n\\\nLibs: -L\\$\\{libdir\\} -lunicorn\\n\\\nLibs.private: -lpthread -lm${ATOMIC_LINK_PKG_CONFIG}\\n\\\nCflags: -I\\$\\{includedir\\}\\n\"\n    )\n    install(FILES ${CMAKE_BINARY_DIR}/unicorn.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\nendif()\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5703125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.LGPL2",
          "type": "blob",
          "size": 24.7880859375,
          "content": "                  GNU LIBRARY GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1991 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the library GPL.  It is\n numbered 2 because it goes with version 2 of the ordinary GPL.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Library General Public License, applies to some\nspecially designated Free Software Foundation software, and to any\nother libraries whose authors decide to use it.  You can use it for\nyour libraries, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if\nyou distribute copies of the library, or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link a program with the library, you must provide\ncomplete object files to the recipients so that they can relink them\nwith the library, after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  Our method of protecting your rights has two steps: (1) copyright\nthe library, and (2) offer you this license which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  Also, for each distributor's protection, we want to make certain\nthat everyone understands that there is no warranty for this free\nlibrary.  If the library is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original\nversion, so that any problems introduced by others will not reflect on\nthe original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\nlicense, the GNU Library General Public License, applies to certain\ndesignated libraries.  This license is quite different from the ordinary\none; be sure to read it in full, and don't assume that anything in it is\nthe same as in the ordinary license.\n\n  The reason we have a separate public license for some libraries is that\nthey blur the distinction we usually make between modifying or adding to a\nprogram and simply using it.  Linking a program with a library, without\nchanging the library, is in some sense simply using the library, and is\nanalogous to running a utility program or application program.  However, in\na textual and legal sense, the linked executable is a combined work, a\nderivative of the original library, and the ordinary General Public License\ntreats it as such.\n\n  Because of this blurred distinction, using the ordinary General\nPublic License for libraries did not effectively promote software\nsharing, because most developers did not use the libraries.  We\nconcluded that weaker conditions might promote sharing better.\n\n  However, unrestricted linking of non-free programs would deprive the\nusers of those programs of all benefit from the free status of the\nlibraries themselves.  This Library General Public License is intended to\npermit developers of non-free programs to use free libraries, while\npreserving your freedom as a user of such programs to change the free\nlibraries that are incorporated in them.  (We have not seen how to achieve\nthis as regards changes in header files, but we have achieved it as regards\nchanges in the actual functions of the Library.)  The hope is that this\nwill lead to faster development of free libraries.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, while the latter only\nworks together with the library.\n\n  Note that it is possible for a library to be covered by the ordinary\nGeneral Public License rather than by this special one.\n\f\n                  GNU LIBRARY GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library which\ncontains a notice placed by the copyright holder or other authorized\nparty saying it may be distributed under the terms of this Library\nGeneral Public License (also called \"this License\").  Each licensee is\naddressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also compile or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    c) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    d) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe source code distributed need not include anything that is normally\ndistributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Library General Public\n    License as published by the Free Software Foundation; either\n    version 2 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Library General Public License for more details.\n\n    You should have received a copy of the GNU Library General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "COPYING_GLIB",
          "type": "blob",
          "size": 24.69921875,
          "content": "\t\t  GNU LIBRARY GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1991 Free Software Foundation, Inc.\n    \t\t    59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the library GPL.  It is\n numbered 2 because it goes with version 2 of the ordinary GPL.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Library General Public License, applies to some\nspecially designated Free Software Foundation software, and to any\nother libraries whose authors decide to use it.  You can use it for\nyour libraries, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if\nyou distribute copies of the library, or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link a program with the library, you must provide\ncomplete object files to the recipients so that they can relink them\nwith the library, after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  Our method of protecting your rights has two steps: (1) copyright\nthe library, and (2) offer you this license which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  Also, for each distributor's protection, we want to make certain\nthat everyone understands that there is no warranty for this free\nlibrary.  If the library is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original\nversion, so that any problems introduced by others will not reflect on\nthe original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\nlicense, the GNU Library General Public License, applies to certain\ndesignated libraries.  This license is quite different from the ordinary\none; be sure to read it in full, and don't assume that anything in it is\nthe same as in the ordinary license.\n\n  The reason we have a separate public license for some libraries is that\nthey blur the distinction we usually make between modifying or adding to a\nprogram and simply using it.  Linking a program with a library, without\nchanging the library, is in some sense simply using the library, and is\nanalogous to running a utility program or application program.  However, in\na textual and legal sense, the linked executable is a combined work, a\nderivative of the original library, and the ordinary General Public License\ntreats it as such.\n\n  Because of this blurred distinction, using the ordinary General\nPublic License for libraries did not effectively promote software\nsharing, because most developers did not use the libraries.  We\nconcluded that weaker conditions might promote sharing better.\n\n  However, unrestricted linking of non-free programs would deprive the\nusers of those programs of all benefit from the free status of the\nlibraries themselves.  This Library General Public License is intended to\npermit developers of non-free programs to use free libraries, while\npreserving your freedom as a user of such programs to change the free\nlibraries that are incorporated in them.  (We have not seen how to achieve\nthis as regards changes in header files, but we have achieved it as regards\nchanges in the actual functions of the Library.)  The hope is that this\nwill lead to faster development of free libraries.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, while the latter only\nworks together with the library.\n\n  Note that it is possible for a library to be covered by the ordinary\nGeneral Public License rather than by this special one.\n\f\n\t\t  GNU LIBRARY GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library which\ncontains a notice placed by the copyright holder or other authorized\nparty saying it may be distributed under the terms of this Library\nGeneral Public License (also called \"this License\").  Each licensee is\naddressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also compile or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    c) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    d) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe source code distributed need not include anything that is normally\ndistributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Library General Public\n    License as published by the Free Software Foundation; either\n    version 2 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Library General Public License for more details.\n\n    You should have received a copy of the GNU Library General Public\n    License along with this library; if not, write to the \n    Free Software Foundation, Inc., 59 Temple Place - Suite 330, \n    Boston, MA  02111-1307  USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "CREDITS.TXT",
          "type": "blob",
          "size": 2.1455078125,
          "content": "This file credits all the contributors of the Unicorn engine project.\n\n\nKey developers\n==============\nNguyen Anh Quynh <aquynh -at- gmail.com>\nDang Hoang Vu <dang.hvu -at- gmail.com>\nHuitao Chen (chenhuitao)\nZiqiao Kong (lazymio)\nKaiJernLau (xwings)\n\n\nBeta testers (in no particular order)\n==============================\nNguyen Tan Cong\nLoi Anh Tuan\nEdgar Barbosa\nJoxean Koret\nChris Eagle\nJay Little, Trail of Bits\nJeong Wook Oh\nLuis Miras\nYan Shoshitaishvili, Shellphish & UC Santa Barbara\nErik Fischer\nDarel Griffin, NCC Group\nAnton Cherepanov\nMohamed Saher (halsten)\nTyler Colgan\nJonathon Reinhart\nBlue Skeye\nChris Maixner\nSergi Alvarez, aka pancake (author of radare)\nRyan Hileman\nTim \"diff\" Strazzere\nWanderingGlitch of the Zero Day Initiative\nSascha Schirra\nFrançois Serman\nSean Heelan\nLuke Burnett\nParker Thompson\nDaniel Godas-Lopez\nAntonio \"s4tan\" Parata\nCorey Kallenberg\nShift\nGabriel Quadros\nFabian Yamaguchi\nRalf-Philipp Weinmann\nMike Guidry\nJoshua \"posixninja\" Hill\n\n\nContributors (in no particular order)\n=====================================\n(Please let us know if you want to have your name here)\n\nNguyen Tan Cong\nLoi Anh Tuan\nShaun Wheelhouse: Homebrew package\nKamil Rytarowski: Pkgsrc package\nZak Escano: MSVC support.\nChris Eagle: Java binding\nRyan Hileman: Go binding\nAntonio Parata: .NET binding\nJonathon Reinhart: C unit test\nSascha Schirra: Ruby binding\nAdrian Herrera: Haskell binding\npracticalswift: Various cool bugs found by fuzzing\nfarmdve: Memory leaking fix\nAndrew Dutcher: uc_context_{save, restore} API.\nStephen Groat: improved CI setup.\nDavid Zimmer: VB6 binding.\nzhangwm: ARM & ARM64 big endian.\nMohamed Osama: FreePascal/Delphi binding.\nPhilippe Antoine (Catena cyber): fuzzing \nHuitao Chen (chenhuitao) & KaiJern Lau (xwings): Cmake support\nHuitao Chen (chenhuitao) & KaiJern Lau (xwings): Python3 support for building\nKevin Foo (chfl4gs): Travis-CI migration\nSimon Gorchakov: PowerPC target\nStuart Dootson (studoot): MSVC compatibility with PowerPC target support\nZiqiao Kong (lazymio): uc_context_free() API and various bug fix & improvement.\nSven Almgren (blindmatrix): bug fix\nChenxu Wu (kabeor): Documentation\nPhilipp Takacs: virtual tlb, memory snapshots\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.326171875,
          "content": "[package]\nname = \"unicorn-engine\"\nversion = \"2.1.1\"\nauthors = [\"Ziqiao Kong\", \"Lukas Seidel\"]\ndocumentation = \"https://github.com/unicorn-engine/unicorn/wiki\"\nedition = \"2021\"\nlicense = \"GPL-2.0\"\nreadme = \"README.md\"\nrepository = \"https://github.com/unicorn-engine/unicorn\"\ndescription = \"Rust bindings for the Unicorn emulator with utility functions\"\nbuild = \"bindings/rust/build.rs\"\nlinks = \"unicorn\"\n# use `cargo publish --list` to see files to be included\n# the resulting list what cargo uses to check for out-of-date files during build\nexclude = [\n    \"/docs\",\n    \"/bindings/dotnet\",\n    \"/bindings/go\",\n    \"/bindings/haskell\",\n    \"/bindings/java\",\n    \"/bindings/pascal\",\n    \"/bindings/python\",\n    \"/bindings/ruby\",\n    \"/bindings/vb6\",\n    \"/bindings/zig\",\n    \"/samples\",\n    \"/tests\",\n]\n\n[lib]\npath = \"bindings/rust/src/lib.rs\"\n\n[dependencies]\nbitflags = \"2.3.3\"\nlibc = \"0.2\"\n\n[build-dependencies]\ncc = { version = \"1.0\" }\ncmake = { version = \"0.1\" }\npkg-config = { version = \"0.3\" }\n\n[features]\ndefault = [\"arch_all\"]\ndynamic_linkage = []\narch_all = [\"arch_x86\", \"arch_arm\", \"arch_aarch64\", \"arch_riscv\", \"arch_mips\", \"arch_sparc\", \"arch_m68k\", \"arch_ppc\", \"arch_s390x\", \"arch_tricore\"]\narch_x86 = []\narch_arm = []\narch_aarch64 = []\narch_riscv = []\narch_mips = []\narch_sparc = []\narch_m68k = []\narch_ppc = []\narch_s390x = []\narch_tricore = []\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 15.3291015625,
          "content": "This file details the changelog of Unicorn Engine.\n\n-------------------------------\n[Version 2.1.1]: Sept 26th, 2024\n\nThis is a small release to fix a few urgent issues.\n\n- Remove pkg_resources usage\n- Fix wheels distribution for x86_64 macos\n- Fix redundant wheel hacks\n- Support musllinux distribution\n\n-------------------------------\n[Version 2.1.0]: Sept 22nd, 2024\n\nIt has been a while since the last release, and 2.1.0 brings several exciting features. Below is the changelog from the latest to the oldest (though not strictly).\n\nHighlights\n\n- Revive QEMU logs, now we have `-DUNICORN_LOGGING=yes` to enable all qemu logs. @BitMaskMixer \n- Faster (up to 40x) write performance by not always doing `store_helper` and cleaning page locks. @tunz @boborjan2\n- Brand new python bindings, with strongly typed and many improvements. @elicn \n- Fix to a long-standing MinGW random segfault bug.\n- We bring python2 compatibility back.\n- We now fully support M1, both building and a pre-built wheel.\n- We support snapshot memory now, with a very low overhead copy-on-write fashion. @PhilippTakacs \n- An option to bypass MMU is also added, check our FAQ. @PhilippTakacs \n- A brand new (and modern) java bindings. We are also working to publish it to maven. @nneonneo\n- We have zig integrated. @kassane @atipls \n- Now Unicorn no longer allocates 2GB memory for every instance. The memory will be only committed once used and the upper limit can be adjusted with `uc_ctl`.\n- New DotNet binding, with published to both Github and Nuget. @TSRBerry \n- The release will attach all binaries, thanks to @marameref \n\nFixes & Improvements\n\n- RISCV improvements, but we still have a long way to go. @apparentlymart @ks0777 \n- cmake improvements @scribam @es3n1n \n- Various python bindings fix and improvements @bet4it @rhelmot \n- Docs. @gerph @BitMaskMixer \n- Rust bindings. @lockbox @mlgiraud @deadash\n- TCG backend fixes. @redoste @StalkR @dglynos \n- PPC32 fixes. @dotCirill \n- Haiku fixes. @kallisti5 \n- Improvements to avoid simulator detection. @mrexodia \n\nNew Contributors\n\n* @ks0777 made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1736\n* @LG3696 made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1764\n* @PhilippTakacs made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1765\n* @edsky made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1754\n* @tunz made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1790\n* @kassane made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1809\n* @Xeonacid made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1807\n* @nneonneo made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1830\n* @lockbox made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1847\n* @mlgiraud made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1849\n* @basavesh made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1861\n* @hamarituc made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1886\n* @StalkR made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1907\n* @dotCirill made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1910\n* @marameref made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1897\n* @redoste made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1922\n* @xclusivor made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1929\n* @elicn made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1629\n* @nganhkhoa made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1942\n* @es3n1n made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1960\n* @BitMaskMixer made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1977\n* @apparentlymart made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1995\n* @atipls made their first contribution in https://github.com/unicorn-engine/unicorn/pull/1985\n* @omer54463 made their first contribution in https://github.com/unicorn-engine/unicorn/pull/2005\n\nFull Changelog: https://github.com/unicorn-engine/unicorn/compare/2.0.1...2.1.0\n\n\nAgain, thanks for all contributors and sorry if I missed your name here (please tell me @wtdcode !). 2.1.1 is also coming because we expect some minor break changes to fix.\n\n-------------------------------\n[Version 2.0.1.post1]: Nov 22nd, 2022\n\nThis is a small release to complement the previous 2.0.1 release.\n\nFix:\n\n- Fix the endianness detection in tests.\n- Fix the version number in CMakeLists.txt.\n\n-------------------------------\n[Version 2.0.1]: Nov 1st, 2022\n\nUnicorn2 makes the first step to [Debian packages](https://tracker.debian.org/pkg/unicorn-engine) and [vcpkg](https://github.com/microsoft/vcpkg/pull/26101)! Thanks @roehling and @LilyWangL !\n\nFeatures:\n\n- Support building & running on BE hosts. #1710 \n- Fix and support `clang-cl` on Windows. #1687 \n- Fix python `sdist` and add aarch64 Linux wheels. Note `pip` can build Unicorn2 on M1 now!\n- C# binding is refined and upgraded to .Net 6. #1723 \n\nFix/Improvements:\n\n- Various bindings improvements. #1723\n- Improvements for tests. #1684 #1683 #1691 #1711 \n- Fail explicitly when VEX.L is set. #1658 \n- Fix endianness when writing PPC32 CR register. #1659 \n- Fix a bug in `uc_ctl_set_cpu_model` check.\n- Fix Tricore PC not updating. #1668 \n- Fix the mapping not updated if users modify the mappings in the hooks.\n- Handle pathological cases consistently. #1651 \n- Fix memory leaks in PPC target. #1680 \n- Fix memory leaks in Tricore target. #1681\n- Fix MSVC handling in cmake. #1693  \n- Fix PC sync-ing problems for `UC_HOOK_BLOCK` hooks.\n- Fix PC sync-ed twice when users request a soft restart.\n- Prevent overflow with pre-allocated RAM blocks. #1712 \n- Add FPCR and FPSR registers #1722 \n- Fix ARM CPU state not deep copied.\n- Fix PC not sync-ed for memory operation on aarch64.\n- Exit invalid store operations early to avoid the target registers being overwritten.\n- Improve the support for ARM BE32.\n\nThanks:\n\n@roehling @LilyWangL @mrexodia @zachriggle @Yu3H0 @rhelmot @relapids @sh4w1 @TSRBerry\n\n-------------------------------\n[Version 2.0.0]: July 7th, 2022\n\nFeatures:\n\n- TriCore Support (#1568)\n\nFixes/Improvements:\n\n- Build both shared library and static archive as unicorn1 does.\n- Misc bindings improvements. #1569 #1600 #1609  #1613 #1616\n- Make sure setjmp-setjmp-wrapper-win32 participates in the build. #1604 \n- Improve Rust bindings build logic.\n- Fix wrong python binding for UC_CTL_TB_REMOVE_CACHE\n- Flush translation blocks when the count hook is removed.\n- Fix unicorn crash when nested `uc_emu_start` deletes a hook\n- Fix CPU not fully resumed when writing PC.\n- Don't quit TB if `uc_mem_protect` doesn't change the protection of current TB memory.\n- Add type annotations for python bindings.\n- Add CPUID hook for python bindings. #1618 \n- Don't repeat memory hooks if there is already an unhandled error. #1618 \n- Support reads and writes over all Arm SIMD registers #1621\n- Fix wrong registers range in python bindings.\n- Fix uc_mem_protect on mmio regions\n- Fix a UAF caused by hook cache.\n- Fix the value collision between UC_MODE_ARMBE8 and UC_MODE_ARM926\n\nThanks:\n\n@AfoHT @mrexodia @bet4it @lowlyw @ekilmer @ondryaso @QDucasse @PalumboN @uberwoozle\n\n----------------------------------\n[Version 2.0.0 rc7]: April 17, 2022\n\nThis release is expected to be the real last RC release of Unicorn2. ;)\n\nFeatures:\n\n- Correctly generate static archives for the static build and have CI auto-tested.\n- Rust bindings revised. #1584 \n- Compatible with clang-cl compiler. #1581 \n- Implement UC_HOOK_INSN for aarch64 MRS/MSR/SYS/SYSL\n\nFixes/Improvements:\n\n- Several corner cases on our API. #1587 #1595 \n- Fix the codegen buffer leak. \n- Rust bindins improvements. #1574 #1575 \n- Add \"holes\" to allow unicorn lib as a drop-in replacement for older ones. #1572 \n- s390x backports. #1570 \n- Fix exits wrongly removed in nested uc_emu_start\n- Fix a possible endless loop for only one translation block in a multithreaded environment.\n- Fix wrong PC without `UC_HOOK_CODE` installed.\n- Update vb6 bindings license. #1563 \n- Fix buffer allocation failure on M1. #1559 \n- Fix wrong EFLAGS on startup.\n- Fix wrong internal states on nested uc_emu_start.\n- Remove armeb-softmmu and aarcheb-softmmu which are usermode targets.\n- Advance PPC32 PC. #1558 \n- Support UC_PPC_REG_CR.\n- Update CI to windows-2019\n\nThanks:\n\n@shuffle2 @liyansong2018 @rose4096 @nviennot @n1tram1 @iii-i @dzzie @yrashk @bet4it \n\n----------------------------------\n[Version 2.0.0 rc6]: Feburary 13, 2022\n\nThis release is expected to be the last RC release of Unicorn2.\n\nFeatures:\n\n- SystemZ (aka. s390x) support.  #1521   #1547 \n- CPUID hook now may return a bool to indicate whether skipping the CPUID instruction.\n- ARM/AARCH64 coprocessor registers read/write support. #889 \n\nFixes/Improvements:\n\n- Rust improvements. More registers enums #1504 Easier to use #1543 #1545 \n- M68k improvements. #1507 \n- Golang improvements. Enable `uc_ctl_set_model` #1506 \n- Unit tests improvements. #1512 \n- Various ARM system mode fixes. #1500 #1520 #1525  #1531 \n- Read/write arm FPSCR and FPSID. #1453 \n- Fix the support for ARMv8\n- Fix a large number of memory leaks and unicorn2 now goes with google/oss-fuzz!\n- Add more X87 registers.  #1524 \n- Add more PPC registers.\n- Fix the exception not cleared in python bindings. #1537 \n- Correctly support ARM big endian and drops `armeb-softmmu` and `aarch64eb-softmmu`\n- Fix ARM CPSR.E not reflected during runtime.\n- Resolve fuzzing speed problem on macOS.\n- Modernize CmakeFileLists.txt. #1544 \n- Fix an issue in nested `uc_emu_start`\n\nThanks:\n\n@Kritzefitz @zznop @QDucasse @gerph @bet4it @mrexodia @iii-i @jbcayrou @scribam\n\n----------------------------------\n[Version 2.0.0 rc5]: November 25, 2021\n\nThis release fixes a few urgent bugs and improves performance.\n\nFixes/Improvements:\n\n- Rust bindings improvements. #1480 #1483\n- Allow R/W to cp15 registers. #1481 \n- Fix `UC_HOOK_EDGE_GENERATED` not calling for indirect jumps.\n- Python bindings build improvements. #1486\n- Fix bindings on m1 macOS.\n- Support nested `uc_emu_start` calls without context save/restore\n- Fix wrong MMIO offset for 32bit targets.\n- Fix wrong `uc_mem_unmap` logic for both ram and mmio memory.\n- Inline `uc_trace_code` and PC sync to improve performance.\n- Various fixes in tests.\n- Allow writing to CPSR to switch bank registers.\n- Implement MMIO in rust bindings. #1499 \n\nThanks:\n\n- @domenukk \n- @bet4it \n- @mid-kid\n- @Kritzefitz\n\n----------------------------------\n[Version 2.0.0 rc4]: November 09, 2021\n\nThis is a big release of Unicorn and introduces a few powerful new features and a bunch of fixes. \n\nNew Features:\n\n- New API: uc_ctl, by which you could control CPU models, TB caches or multiple exits etc.\n- New Hook: UC_HOOK_EDGE_GENERATED, UC_HOOK_TCG_OPCODE\n- RISCV CSR read/write.\n- Support reading MIPS hi/lo regs. 7268c2a19bce2db72b90e3ea3b133482c3ff4e58\n- OSS Fuzzing building support.\n- MSVC 32bit and Android build support.\n- Introduce clang-format.\n\nFixes/Improvements:\n\n- Java bindings improvements. unicorn-engine/unicorn#1461\n- API Documents updates. unicorn-engine/unicorn#1459\n- Rust bindings improvements. unicorn-engine/unicorn#1462\n- Add a go.mod for go bindings.\n- CMakeLists.txt improvements as a subproject. #1373\n- Fix rust bindings build script and add CI.\n- Use binary search to find mappings. unicorn-engine/unicorn#1414\n- RISCV:\n  - Update pc when exiting execution. unicorn-engine/unicorn#1465\n  - Add RISCV control status registers to enable floating. unicorn-engine/unicorn#1469 unicorn-engine/unicorn#1478\n  - After `ecall`, pc not advanced. unicorn-engine/unicorn#1477\n- Fix tb not invalidated when exiting.\n- Fix bindings makefile.\n- Fix uc_mem_protect not working. unicorn-engine/unicorn#1468\n\nThanks:\n\n- @bet4it\n- @kabeor\n- @chfl4gs \n- @QDucasse\n- @h33p\n- @geohot\n- @cla7aye15I4nd\n- @jcalabres\n\n----------------------------------\n[Version 2.0.0 rc3]: October 06, 2021\n\nThis is an urgent pre-release regarding python bindings on older Linux systems.\n\n- Support older Linux distribution, e.g. prior to Ubuntu 19.04\n- Fix a memory leak in `uc_close`\n- Support building on Android\n- Support hooking CPUID instruction.\n\nEnjoy.\n\n----------------------------------\n[Version 2.0.0 rc2]: October 05, 2021\n\nThis is an urgent pre-release regarding the packaging problem of python bindings.\n\n- Set `zip_false` and `is_pure` to `False` to avoid issues on some Linux distributions.\n- Link to `libm` to make sure our libraries work.\n- Support to read ST registers in rust bindings.\n- Fix #1450\n\nEnjoy.\n\n----------------------------------\n[Version 2.0.0 rc1]: October 04, 2021\n\nUnicorn2 first release candidate!\n\n- Based on Qemu 5.0.1\n- Remain backward compatible with Unicorn 1.x\n- Update ISA of all existing architectures\n- Support 2 new architectures in PowerPC & RISCV\n\n----------------------------------\n[Unicorn2-beta]: October 3rd, 2021\n\n- Release Unicorn2 beta to public.\n- New logo to celebrate this important milestone!\n\n----------------------------------\n[Version 1.0.1]: April 20th, 2017\n\n- Properly handle selected-architecture build.\n- Fix compilation issues on PPC & S390x.\n- Fix a memory leak on uc_mem_protect().\n- ARM:\n    - Support big-endian mode.\n    - Correct instruction size of Thumb/Thumb2 code.\n    - Support read/write APSR register.\n- ARM64:\n    - Support read/write NEON registers.\n    - Support read/write NZCV registers.\n- Mips: Support read/write Mips64 registers.\n- X86: Support read/write MSR.\n- Haskell binding: update to the latest API.\n- Python: allow not having PATH setup.\n\n----------------------------------\n[Version 1.0]: February 23rd, 2017\n\n- Fix build script for BSD host.\n- Fix building Unicorn on Arm/PPC/Sparc/S390 hosts.\n- X86:\n    - Fix 16bit address computation.\n    - Fix initial state of segment registers.\n\n----------------------------------\n[Version 1.0-rc3]: January 25th, 2017\n\n- Rename API uc_context_free() to uc_free().\n- ARM:\n    - uc_reg_write() now can modify CPSR register.\n\t- Add some ARM coproc registers.\n- ARM64: uc_reg_read|write() now handles W0-W31 registers.\n- Windows: fix a double free bug in uc_close().\n- New VB6 binding.\n- Java: update to support new APIs from v1.0-rc1.\n- Python:\n    - Fix memory leaking that prevents UC instances from being GC.\n    - Remove some dependencies leftover from glib time.\n\t- Add new method mem_regions() (linked to uc_mem_regions() API)\n\n----------------------------------\n[Version 1.0-rc2]: January 4th, 2017\n\n- Remove glib & pkconfig dependency.\n- Python: fix an issue to restore support for FreeBSD (and other *BSD Unix).\n- ARM: support MCLASS cpu (Cortex-M3).\n- Windows: export a static lib that can be used outside of Mingw\n\n----------------------------------\n[Version 1.0-rc1]: December 22nd, 2016\n\n- Lots of bugfixes in all architectures.\n- Better support for ARM Thumb.\n- Fix many memory leaking issues.\n- New bindings: Haskell, MSVC.\n- Better support for Python3.\n- New APIs: uc_query, uc_reg_write_batch, uc_reg_read_batch, uc_mem_map_ptr, uc_mem_regions, uc_context_alloc, uc_context_save & uc_context_restore.\n- New memory hook type: UC_HOOK_MEM_READ_AFTER.\n- Add new version macros UC_VERSION_{MAJOR, MINOR, EXTRA}\n\n----------------------------------\n[Version 0.9]: October 15th, 2015\n\n- Initial public release.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0537109375,
          "content": "Unicorn Engine\n==============\n\n[![pypi downloads](https://pepy.tech/badge/unicorn)](https://pepy.tech/project/unicorn)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/unicorn.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:unicorn)\n\n\n<p align=\"center\">\n<img width=\"250\" src=\"docs/unicorn-logo.png\">\n</p>\n\nUnicorn is a lightweight, multi-platform, multi-architecture CPU emulator framework, based on [QEMU](http://qemu.org).\n\nUnicorn offers some unparalleled features:\n\n- Multi-architecture: ARM, ARM64 (ARMv8), M68K, MIPS, PowerPC, RISCV, SPARC, S390X, TriCore and X86 (16, 32, 64-bit)\n- Clean/simple/lightweight/intuitive architecture-neutral API\n- Implemented in pure C language, with bindings for Crystal, Clojure, Visual Basic, Perl, Rust, Ruby, Python, Java, .NET, Go, Delphi/Free Pascal, Haskell, Pharo, Lua and Zig.\n- Native support for Windows & *nix (with Mac OSX, Linux, Android, *BSD & Solaris confirmed)\n- High performance via Just-In-Time compilation\n- Support for fine-grained instrumentation at various levels\n- Thread-safety by design\n- Distributed under free software license GPLv2\n\nFurther information is available at http://www.unicorn-engine.org\n\n\nLicense\n-------\n\nThis project is released under the [GPL license](COPYING).\n\n\nCompilation & Docs\n------------------\n\nSee [docs/COMPILE.md](docs/COMPILE.md) file for how to compile and install Unicorn.\n\nMore documentation is available in [docs/README.md](docs/README.md).\n\n\nContact\n-------\n\n[Contact us](http://www.unicorn-engine.org/contact/) via mailing list, email or twitter for any questions.\n\n\nContribute\n----------\n\nIf you want to contribute, please pick up something from our [Github issues](https://github.com/unicorn-engine/unicorn/issues).\n\nWe also maintain a list of more challenged problems in [milestones](https://github.com/unicorn-engine/unicorn/milestones) for our regular release.\n\nPlease send pull request to our [dev branch](https://github.com/unicorn-engine/unicorn/tree/dev).\n\n[CREDITS.TXT](CREDITS.TXT) records important contributors of our project.\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0400390625,
          "content": "aquynh -at- gmail.com\n\nmio -at- lazym.io\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.0595703125,
          "content": "Moved to https://github.com/unicorn-engine/unicorn/milestones"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.zig",
          "type": "blob",
          "size": 9.1796875,
          "content": "//! License: GNU GENERAL PUBLIC LICENSE Version 2\n\nconst std = @import(\"std\");\nconst MIN_ZIG_VERSION: []const u8 = \"0.13.0\";\nconst MIN_ZIG_VERSION_ERR_MSG = \"Please! Update zig toolchain to >= v\" ++ MIN_ZIG_VERSION;\n\nconst SampleFileTypes = enum {\n    c,\n    cpp,\n    zig,\n};\n\nconst SampleDescripton = struct {\n    file_type: SampleFileTypes,\n    root_file_path: []const u8,\n};\n\n/// Create a module for the Zig Bindings\n///\n/// This will also get exported as a library that other zig projects can use\n/// as a dependency via the zig build system.\nfn create_unicorn_sys(b: *std.Build, target: std.Build.ResolvedTarget, optimize: std.builtin.OptimizeMode) *std.Build.Module {\n    const unicorn_sys = b.addModule(\"unicorn-sys\", .{\n        .target = target,\n        .optimize = optimize,\n        .root_source_file = b.path(\"bindings/zig/unicorn/unicorn.zig\"),\n    });\n\n    // link libc\n    unicorn_sys.link_libc = true;\n\n    // we need the c header for the zig-bindings\n    unicorn_sys.addIncludePath(b.path(\"include\"));\n    unicorn_sys.addLibraryPath(b.path(\"build\"));\n\n    // Linking to the Unicorn library\n    if (target.result.abi == .msvc and target.result.os.tag == .windows) {\n        unicorn_sys.linkSystemLibrary(\"unicorn.dll\", .{});\n    } else {\n        unicorn_sys.linkSystemLibrary(\"unicorn\", .{});\n    }\n\n    return unicorn_sys;\n}\n\n// Although this function looks imperative, note that its job is to\n// declaratively construct a build graph that will be executed by an external\n// runner.\npub fn build(b: *std.Build) void {\n    if (comptime !checkVersion())\n        @compileError(MIN_ZIG_VERSION_ERR_MSG);\n\n    // Standard target options allows the person running `zig build` to choose\n    // what target to build for. Here we do not override the defaults, which\n    // means any target is allowed, and the default is native. Other options\n    // for restricting supported target set are available.\n    const target = b.standardTargetOptions(.{});\n\n    // Standard optimization options allow the person running `zig build` to select\n    // between Debug, ReleaseSafe, ReleaseFast, and ReleaseSmall. Here we do not\n    // set a preferred release mode, allowing the user to decide how to optimize.\n    const optimize = b.standardOptimizeOption(.{});\n\n    // Give the user the options to perform the cmake build in parallel or not\n    // (eg. ci on macos will fail if parallel is enabled)\n    //\n    // flag: -Dparallel=true/false\n    const parallel_cmake = b.option(bool, \"parallel\", \"Enable parallel cmake build\") orelse true;\n\n    // flag: -DSamples=True/False\n    const samples = b.option(bool, \"Samples\", \"Build all Samples [default: true]\") orelse true;\n\n    const sample_bins = [_]SampleDescripton{\n        .{ .file_type = .zig, .root_file_path = \"bindings/zig/sample/sample_riscv_zig.zig\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_arm.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_arm64.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_ctl.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_batch_reg.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_m68k.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_riscv.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_sparc.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_s390x.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/shellcode.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_tricore.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_x86.c\" },\n        .{ .file_type = .c, .root_file_path = \"samples/sample_x86_32_gdt_and_seg_regs.c\" },\n    };\n\n    // make a module for Zig Bindings\n    const unicorn_sys = create_unicorn_sys(b, target, optimize);\n\n    // Build Samples\n    if (samples) {\n        for (sample_bins) |sample| {\n            const sample_bin = buildExe(b, .{\n                .target = target,\n                .optimize = optimize,\n                .filetype = sample.file_type,\n                .filepath = sample.root_file_path,\n            });\n\n            // import the unicorn sys module if this is a zig build\n            if (sample.file_type == .zig) {\n                sample_bin.root_module.addImport(\"unicorn\", unicorn_sys);\n            }\n        }\n    }\n\n    // CMake Build\n    const cmake = cmakeBuild(b, parallel_cmake);\n    const cmake_step = b.step(\"cmake\", \"Run cmake build\");\n    cmake_step.dependOn(&cmake.step);\n}\n\nfn buildExe(b: *std.Build, info: BuildInfo) *std.Build.Step.Compile {\n    const target = info.stdTarget();\n\n    const execonfig: std.Build.ExecutableOptions = switch (info.filetype) {\n        .c, .cpp => .{\n            .name = info.filename(),\n            .target = info.target,\n            .optimize = info.optimize,\n        },\n        else => .{\n            .name = info.filename(),\n            .target = info.target,\n            .optimize = info.optimize,\n            .root_source_file = b.path(info.filepath),\n        },\n    };\n    const exe = b.addExecutable(execonfig);\n\n    if (info.filetype != .zig) {\n        exe.addCSourceFile(.{\n            .file = b.path(info.filepath),\n            .flags = &.{\n                \"-Wall\",\n                \"-Werror\",\n                \"-fno-sanitize=all\",\n                \"-Wshadow\",\n            },\n        });\n\n        // Ensure the C headers are available\n        exe.addIncludePath(b.path(\"include\"));\n\n        // Ensure the C library is available\n        exe.addLibraryPath(b.path(\"build\"));\n\n        // linking to OS-LibC or static-linking for:\n        // Musl(Linux) [e.g: -Dtarget=native-linux-musl]\n        // MinGW(Windows) [e.g: -Dtarget=native-windows-gnu (default)]\n        if (info.filetype == .cpp and target.abi != .msvc)\n            exe.linkLibCpp() // static-linking LLVM-libcxx (all targets) + libC\n        else\n            exe.linkLibC();\n\n        // Now link the C library\n        if (target.abi == .msvc and target.os.tag == .windows) {\n            exe.linkSystemLibrary(\"unicorn.dll\");\n        } else exe.linkSystemLibrary(\"unicorn\");\n    }\n\n    // Linking to the Unicorn library\n    if (target.abi == .msvc and target.os.tag == .windows) {\n        exe.want_lto = false;\n    }\n\n    // This declares intent for the executable to be installed into the\n    // standard location when the user invokes the \"install\" step (the default\n    // step when running `zig build`).\n    b.installArtifact(exe);\n\n    // This *creates* a RunStep in the build graph, to be executed when another\n    // step is evaluated that depends on it. The next line below will establish\n    // such a dependency.\n    const run_cmd = b.addRunArtifact(exe);\n\n    // By making the run step depend on the install step, it will be run from the\n    // installation directory rather than directly from within the cache directory.\n    // This is not necessary, however, if the application depends on other installed\n    // files, this ensures they will be present and in the expected location.\n    run_cmd.step.dependOn(b.getInstallStep());\n\n    // This allows the user to pass arguments to the application in the build\n    // command itself, like this: `zig build run -- arg1 arg2 etc`\n    if (b.args) |args| {\n        run_cmd.addArgs(args);\n    }\n\n    // This creates a build step. It will be visible in the `zig build --help` menu,\n    // and can be selected like this: `zig build run`\n    // This will evaluate the `run` step rather than the default, which is \"install\".\n    const run_step = b.step(info.filename(), b.fmt(\"Run the {s}.\", .{info.filename()}));\n    run_step.dependOn(&run_cmd.step);\n\n    return exe;\n}\n\nconst PARALLEL_CMAKE_COMMAND = [_][]const u8{\n    \"cmake\",\n    \"--build\",\n    \"build\",\n    \"--config\",\n    \"release\",\n    \"--parallel\",\n};\n\nconst SINGLE_CMAKE_COMMAND = [_][]const u8{\n    \"cmake\",\n    \"--build\",\n    \"build\",\n    \"--config\",\n    \"release\",\n};\nfn cmakeBuild(b: *std.Build, parallel_cmake: bool) *std.Build.Step.Run {\n    const preconf = b.addSystemCommand(&.{\n        \"cmake\",\n        \"-B\",\n        \"build\",\n        \"-DZIG_BUILD=ON\",\n        \"-DUNICORN_BUILD_TESTS=OFF\",\n        \"-DUNICORN_INSTALL=OFF\",\n        \"-DCMAKE_BUILD_TYPE=Release\",\n    });\n\n    // build in parallel if requested\n    const cmakebuild = b.addSystemCommand(blk: {\n        if (parallel_cmake) {\n            break :blk &PARALLEL_CMAKE_COMMAND;\n        } else {\n            break :blk &SINGLE_CMAKE_COMMAND;\n        }\n    });\n    cmakebuild.step.dependOn(&preconf.step);\n    return cmakebuild;\n}\n\n// ensures the currently in-use zig version is at least the minimum required\nfn checkVersion() bool {\n    const builtin = @import(\"builtin\");\n    if (!@hasDecl(builtin, \"zig_version\")) {\n        return false;\n    }\n\n    const needed_version = std.SemanticVersion.parse(MIN_ZIG_VERSION) catch unreachable;\n    const version = builtin.zig_version;\n    const order = version.order(needed_version);\n    return order != .lt;\n}\n\nconst BuildInfo = struct {\n    filepath: []const u8,\n    filetype: SampleFileTypes,\n    target: std.Build.ResolvedTarget,\n    optimize: std.builtin.OptimizeMode,\n\n    fn filename(self: BuildInfo) []const u8 {\n        var split = std.mem.splitSequence(u8, std.fs.path.basename(self.filepath), \".\");\n        return split.first();\n    }\n\n    fn stdTarget(self: *const BuildInfo) std.Target {\n        return self.target.result;\n    }\n};\n"
        },
        {
          "name": "build.zig.zon",
          "type": "blob",
          "size": 0.0703125,
          "content": ".{\n    .name = \"unicorn\",\n    .version = \"2.1.1\",\n    .paths = .{\"\"},\n}\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 0.677734375,
          "content": "#!/bin/bash\n\nfind . -maxdepth 1 \"(\" -name \"*.c\" -or -name \"*.h\" \")\" -exec clang-format -i -style=file \"{}\" \";\"\nfind ./msvc -maxdepth 1 \"(\" -name \"*.c\" -or -name \"*.h\" \")\" -exec clang-format -i -style=file \"{}\" \";\"\nfind ./include -maxdepth 2 \"(\" -name \"*.c\" -or -name \"*.h\" \")\" -exec clang-format -i -style=file \"{}\" \";\"\nfind ./tests/unit -maxdepth 1 \"(\" -name \"*.c\" -or -name \"*.h\" \")\" -exec clang-format -i -style=file \"{}\" \";\"\nfind ./samples -maxdepth 1 \"(\" -name \"*.c\" -or -name \"*.h\" \")\" -exec clang-format -i -style=file \"{}\" \";\"\nfind ./qemu \"(\" -name \"unicorn.c\" -or -name \"unicorn.h\" -or -name \"unicorn_arm.c\" -or -name \"unicorn_aarch64.c\" \")\" -exec clang-format -i -style=file \"{}\" \";\"\n"
        },
        {
          "name": "glib_compat",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.0498046875,
          "content": "module github.com/unicorn-engine/unicorn\n\ngo 1.17\n\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "list.c",
          "type": "blob",
          "size": 2.5810546875,
          "content": "#include <stdlib.h>\n#include \"unicorn/platform.h\"\n#include \"list.h\"\n\n// simple linked list implementation\n\nstruct list *list_new(void)\n{\n    return calloc(1, sizeof(struct list));\n}\n\n// removed linked list nodes but does not free their content\nvoid list_clear(struct list *list)\n{\n    struct list_item *next, *cur = list->head;\n    while (cur != NULL) {\n        next = cur->next;\n        if (list->delete_fn) {\n            list->delete_fn(cur->data);\n        }\n        free(cur);\n        cur = next;\n    }\n    list->head = NULL;\n    list->tail = NULL;\n}\n\n// insert a new item at the begin of the list.\n// returns generated linked list node, or NULL on failure\nvoid *list_insert(struct list *list, void *data)\n{\n    struct list_item *item = malloc(sizeof(struct list_item));\n    if (item == NULL) {\n        return NULL;\n    }\n\n    item->data = data;\n    item->next = list->head;\n\n    if (list->tail == NULL) {\n        list->tail = item;\n    }\n\n    list->head = item;\n\n    return item;\n}\n\n// append a new item at the end of the list.\n// returns generated linked list node, or NULL on failure\nvoid *list_append(struct list *list, void *data)\n{\n    struct list_item *item = malloc(sizeof(struct list_item));\n    if (item == NULL) {\n        return NULL;\n    }\n    item->next = NULL;\n    item->data = data;\n    if (list->head == NULL) {\n        list->head = item;\n    } else {\n        list->tail->next = item;\n    }\n    list->tail = item;\n    return item;\n}\n\n// returns true if entry was removed, false otherwise\nbool list_remove(struct list *list, void *data)\n{\n    struct list_item *next, *cur, *prev = NULL;\n    // is list empty?\n    if (list->head == NULL) {\n        return false;\n    }\n    cur = list->head;\n    while (cur != NULL) {\n        next = cur->next;\n        if (cur->data == data) {\n            if (cur == list->head) {\n                list->head = next;\n            } else {\n                prev->next = next;\n            }\n            if (cur == list->tail) {\n                list->tail = prev;\n            }\n            if (list->delete_fn) {\n                list->delete_fn(cur->data);\n            }\n            free(cur);\n            return true;\n        }\n        prev = cur;\n        cur = next;\n    }\n    return false;\n}\n\n// returns true if the data exists in the list\nbool list_exists(struct list *list, void *data)\n{\n    struct list_item *next, *cur = NULL;\n    // is list empty?\n    if (list->head == NULL) {\n        return false;\n    }\n    cur = list->head;\n    while (cur != NULL) {\n        next = cur->next;\n        if (cur->data == data) {\n            return true;\n        }\n        cur = next;\n    }\n    return false;\n}"
        },
        {
          "name": "msvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "qemu",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "symbols.sh",
          "type": "blob",
          "size": 131.1123046875,
          "content": "#!/bin/bash\n\nCMD_PATH=$(realpath $0)\nSOURCE_DIR=$(dirname ${CMD_PATH})\n\nCOMMON_SYMBOLS=\"\nunicorn_fill_tlb \\\nreg_read \\\nreg_write \\\nuc_init \\\nuc_add_inline_hook \\\nuc_del_inline_hook \\\ntb_invalidate_phys_range \\\nuse_idiv_instructions \\\narm_arch \\\ntb_target_set_jmp_target \\\nhave_bmi1 \\\nhave_popcnt \\\nhave_avx1 \\\nhave_avx2 \\\nhave_isa \\\nhave_altivec \\\nhave_vsx \\\nflush_icache_range \\\ns390_facilities \\\ntcg_dump_op \\\ntcg_dump_ops \\\ntcg_gen_and_i64 \\\ntcg_gen_discard_i64 \\\ntcg_gen_ld16s_i64 \\\ntcg_gen_ld16u_i64 \\\ntcg_gen_ld32s_i64 \\\ntcg_gen_ld32u_i64 \\\ntcg_gen_ld8s_i64 \\\ntcg_gen_ld8u_i64 \\\ntcg_gen_ld_i64 \\\ntcg_gen_mov_i64 \\\ntcg_gen_movi_i64 \\\ntcg_gen_mul_i64 \\\ntcg_gen_or_i64 \\\ntcg_gen_sar_i64 \\\ntcg_gen_shl_i64 \\\ntcg_gen_shr_i64 \\\ntcg_gen_st_i64 \\\ntcg_gen_xor_i64 \\\ncpu_icount_to_ns \\\ncpu_is_stopped \\\ncpu_get_ticks \\\ncpu_get_clock \\\ncpu_resume \\\nqemu_init_vcpu \\\ncpu_stop_current \\\nresume_all_vcpus \\\nvm_start \\\naddress_space_dispatch_compact \\\nflatview_translate \\\naddress_space_translate_for_iotlb \\\nqemu_get_cpu \\\ncpu_address_space_init \\\ncpu_get_address_space \\\ncpu_exec_unrealizefn \\\ncpu_exec_initfn \\\ncpu_exec_realizefn \\\ntb_invalidate_phys_addr \\\ncpu_watchpoint_insert \\\ncpu_watchpoint_remove_by_ref \\\ncpu_watchpoint_remove_all \\\ncpu_watchpoint_address_matches \\\ncpu_breakpoint_insert \\\ncpu_breakpoint_remove \\\ncpu_breakpoint_remove_by_ref \\\ncpu_breakpoint_remove_all \\\ncpu_abort \\\ncpu_physical_memory_test_and_clear_dirty \\\nmemory_region_section_get_iotlb \\\nflatview_add_to_dispatch \\\nqemu_ram_get_host_addr \\\nqemu_ram_get_offset \\\nqemu_ram_get_used_length \\\nqemu_ram_is_shared \\\nqemu_ram_pagesize \\\nqemu_ram_alloc_from_ptr \\\nqemu_ram_alloc \\\nqemu_ram_free \\\nqemu_map_ram_ptr \\\nqemu_ram_block_host_offset \\\nqemu_ram_block_from_host \\\nqemu_ram_addr_from_host \\\ncpu_check_watchpoint \\\niotlb_to_section \\\naddress_space_dispatch_new \\\naddress_space_dispatch_free \\\nflatview_read_continue \\\naddress_space_read_full \\\naddress_space_write \\\naddress_space_rw \\\ncpu_physical_memory_rw \\\naddress_space_write_rom \\\ncpu_flush_icache_range \\\ncpu_exec_init_all \\\naddress_space_access_valid \\\naddress_space_map \\\naddress_space_unmap \\\ncpu_physical_memory_map \\\ncpu_physical_memory_unmap \\\ncpu_memory_rw_debug \\\nqemu_target_page_size \\\nqemu_target_page_bits \\\nqemu_target_page_bits_min \\\ntarget_words_bigendian \\\ncpu_physical_memory_is_io \\\nram_block_discard_range \\\nramblock_is_pmem \\\npage_size_init \\\nset_preferred_target_page_bits \\\nfinalize_target_page_bits \\\ncpu_outb \\\ncpu_outw \\\ncpu_outl \\\ncpu_inb \\\ncpu_inw \\\ncpu_inl \\\nmemory_map \\\nmemory_map_io \\\nmemory_map_ptr \\\nmemory_cow \\\nmemory_unmap \\\nmemory_moveout \\\nmemory_movein \\\nmemory_free \\\nflatview_unref \\\naddress_space_get_flatview \\\nmemory_region_transaction_begin \\\nmemory_region_transaction_commit \\\nmemory_region_init \\\nmemory_region_access_valid \\\nmemory_region_dispatch_read \\\nmemory_region_dispatch_write \\\nmemory_region_init_io \\\nmemory_region_init_ram_ptr \\\nmemory_region_size \\\nmemory_region_set_readonly \\\nmemory_region_get_ram_ptr \\\nmemory_region_from_host \\\nmemory_region_get_ram_addr \\\nmemory_region_add_subregion \\\nmemory_region_del_subregion \\\nmemory_region_add_subregion_overlap \\\nmemory_region_find \\\nmemory_region_filter_subregions \\\nmemory_listener_register \\\nmemory_listener_unregister \\\naddress_space_remove_listeners \\\naddress_space_init \\\naddress_space_destroy \\\nmemory_region_init_ram \\\nmemory_mapping_list_add_merge_sorted \\\nfind_memory_mapping \\\nexec_inline_op \\\nfloatx80_default_nan \\\nfloat_raise \\\nfloat16_is_quiet_nan \\\nfloat16_is_signaling_nan \\\nfloat32_is_quiet_nan \\\nfloat32_is_signaling_nan \\\nfloat64_is_quiet_nan \\\nfloat64_is_signaling_nan \\\nfloatx80_is_quiet_nan \\\nfloatx80_is_signaling_nan \\\nfloatx80_silence_nan \\\npropagateFloatx80NaN \\\nfloat128_is_quiet_nan \\\nfloat128_is_signaling_nan \\\nfloat128_silence_nan \\\nfloat16_add \\\nfloat16_sub \\\nfloat32_add \\\nfloat32_sub \\\nfloat64_add \\\nfloat64_sub \\\nfloat16_mul \\\nfloat32_mul \\\nfloat64_mul \\\nfloat16_muladd \\\nfloat32_muladd \\\nfloat64_muladd \\\nfloat16_div \\\nfloat32_div \\\nfloat64_div \\\nfloat16_to_float32 \\\nfloat16_to_float64 \\\nfloat32_to_float16 \\\nfloat32_to_float64 \\\nfloat64_to_float16 \\\nfloat64_to_float32 \\\nfloat16_round_to_int \\\nfloat32_round_to_int \\\nfloat64_round_to_int \\\nfloat16_to_int16_scalbn \\\nfloat16_to_int32_scalbn \\\nfloat16_to_int64_scalbn \\\nfloat32_to_int16_scalbn \\\nfloat32_to_int32_scalbn \\\nfloat32_to_int64_scalbn \\\nfloat64_to_int16_scalbn \\\nfloat64_to_int32_scalbn \\\nfloat64_to_int64_scalbn \\\nfloat16_to_int16 \\\nfloat16_to_int32 \\\nfloat16_to_int64 \\\nfloat32_to_int16 \\\nfloat32_to_int32 \\\nfloat32_to_int64 \\\nfloat64_to_int16 \\\nfloat64_to_int32 \\\nfloat64_to_int64 \\\nfloat16_to_int16_round_to_zero \\\nfloat16_to_int32_round_to_zero \\\nfloat16_to_int64_round_to_zero \\\nfloat32_to_int16_round_to_zero \\\nfloat32_to_int32_round_to_zero \\\nfloat32_to_int64_round_to_zero \\\nfloat64_to_int16_round_to_zero \\\nfloat64_to_int32_round_to_zero \\\nfloat64_to_int64_round_to_zero \\\nfloat16_to_uint16_scalbn \\\nfloat16_to_uint32_scalbn \\\nfloat16_to_uint64_scalbn \\\nfloat32_to_uint16_scalbn \\\nfloat32_to_uint32_scalbn \\\nfloat32_to_uint64_scalbn \\\nfloat64_to_uint16_scalbn \\\nfloat64_to_uint32_scalbn \\\nfloat64_to_uint64_scalbn \\\nfloat16_to_uint16 \\\nfloat16_to_uint32 \\\nfloat16_to_uint64 \\\nfloat32_to_uint16 \\\nfloat32_to_uint32 \\\nfloat32_to_uint64 \\\nfloat64_to_uint16 \\\nfloat64_to_uint32 \\\nfloat64_to_uint64 \\\nfloat16_to_uint16_round_to_zero \\\nfloat16_to_uint32_round_to_zero \\\nfloat16_to_uint64_round_to_zero \\\nfloat32_to_uint16_round_to_zero \\\nfloat32_to_uint32_round_to_zero \\\nfloat32_to_uint64_round_to_zero \\\nfloat64_to_uint16_round_to_zero \\\nfloat64_to_uint32_round_to_zero \\\nfloat64_to_uint64_round_to_zero \\\nint64_to_float16_scalbn \\\nint32_to_float16_scalbn \\\nint16_to_float16_scalbn \\\nint64_to_float16 \\\nint32_to_float16 \\\nint16_to_float16 \\\nint64_to_float32_scalbn \\\nint32_to_float32_scalbn \\\nint16_to_float32_scalbn \\\nint64_to_float32 \\\nint32_to_float32 \\\nint16_to_float32 \\\nint64_to_float64_scalbn \\\nint32_to_float64_scalbn \\\nint16_to_float64_scalbn \\\nint64_to_float64 \\\nint32_to_float64 \\\nint16_to_float64 \\\nuint64_to_float16_scalbn \\\nuint32_to_float16_scalbn \\\nuint16_to_float16_scalbn \\\nuint64_to_float16 \\\nuint32_to_float16 \\\nuint16_to_float16 \\\nuint64_to_float32_scalbn \\\nuint32_to_float32_scalbn \\\nuint16_to_float32_scalbn \\\nuint64_to_float32 \\\nuint32_to_float32 \\\nuint16_to_float32 \\\nuint64_to_float64_scalbn \\\nuint32_to_float64_scalbn \\\nuint16_to_float64_scalbn \\\nuint64_to_float64 \\\nuint32_to_float64 \\\nuint16_to_float64 \\\nfloat16_min \\\nfloat16_minnum \\\nfloat16_minnummag \\\nfloat16_max \\\nfloat16_maxnum \\\nfloat16_maxnummag \\\nfloat32_min \\\nfloat32_minnum \\\nfloat32_minnummag \\\nfloat32_max \\\nfloat32_maxnum \\\nfloat32_maxnummag \\\nfloat64_min \\\nfloat64_minnum \\\nfloat64_minnummag \\\nfloat64_max \\\nfloat64_maxnum \\\nfloat64_maxnummag \\\nfloat16_compare \\\nfloat16_compare_quiet \\\nfloat32_compare \\\nfloat32_compare_quiet \\\nfloat64_compare \\\nfloat64_compare_quiet \\\nfloat16_scalbn \\\nfloat32_scalbn \\\nfloat64_scalbn \\\nfloat16_sqrt \\\nfloat32_sqrt \\\nfloat64_sqrt \\\nfloat16_default_nan \\\nfloat32_default_nan \\\nfloat64_default_nan \\\nfloat128_default_nan \\\nfloat16_silence_nan \\\nfloat32_silence_nan \\\nfloat64_silence_nan \\\nfloat16_squash_input_denormal \\\nfloat32_squash_input_denormal \\\nfloat64_squash_input_denormal \\\nnormalizeFloatx80Subnormal \\\nroundAndPackFloatx80 \\\nnormalizeRoundAndPackFloatx80 \\\nint32_to_floatx80 \\\nint32_to_float128 \\\nint64_to_floatx80 \\\nint64_to_float128 \\\nuint64_to_float128 \\\nfloat32_to_floatx80 \\\nfloat32_to_float128 \\\nfloat32_rem \\\nfloat32_exp2 \\\nfloat32_log2 \\\nfloat32_eq \\\nfloat32_le \\\nfloat32_lt \\\nfloat32_unordered \\\nfloat32_eq_quiet \\\nfloat32_le_quiet \\\nfloat32_lt_quiet \\\nfloat32_unordered_quiet \\\nfloat64_to_floatx80 \\\nfloat64_to_float128 \\\nfloat64_rem \\\nfloat64_log2 \\\nfloat64_eq \\\nfloat64_le \\\nfloat64_lt \\\nfloat64_unordered \\\nfloat64_eq_quiet \\\nfloat64_le_quiet \\\nfloat64_lt_quiet \\\nfloat64_unordered_quiet \\\nfloatx80_to_int32 \\\nfloatx80_to_int32_round_to_zero \\\nfloatx80_to_int64 \\\nfloatx80_to_int64_round_to_zero \\\nfloatx80_to_float32 \\\nfloatx80_to_float64 \\\nfloatx80_to_float128 \\\nfloatx80_round \\\nfloatx80_round_to_int \\\nfloatx80_add \\\nfloatx80_sub \\\nfloatx80_mul \\\nfloatx80_div \\\nfloatx80_rem \\\nfloatx80_sqrt \\\nfloatx80_eq \\\nfloatx80_le \\\nfloatx80_lt \\\nfloatx80_unordered \\\nfloatx80_eq_quiet \\\nfloatx80_le_quiet \\\nfloatx80_lt_quiet \\\nfloatx80_unordered_quiet \\\nfloat128_to_int32 \\\nfloat128_to_int32_round_to_zero \\\nfloat128_to_int64 \\\nfloat128_to_int64_round_to_zero \\\nfloat128_to_uint64 \\\nfloat128_to_uint64_round_to_zero \\\nfloat128_to_uint32_round_to_zero \\\nfloat128_to_uint32 \\\nfloat128_to_float32 \\\nfloat128_to_float64 \\\nfloat128_to_floatx80 \\\nfloat128_round_to_int \\\nfloat128_add \\\nfloat128_sub \\\nfloat128_mul \\\nfloat128_div \\\nfloat128_rem \\\nfloat128_sqrt \\\nfloat128_eq \\\nfloat128_le \\\nfloat128_lt \\\nfloat128_unordered \\\nfloat128_eq_quiet \\\nfloat128_le_quiet \\\nfloat128_lt_quiet \\\nfloat128_unordered_quiet \\\nfloatx80_compare \\\nfloatx80_compare_quiet \\\nfloat128_compare \\\nfloat128_compare_quiet \\\nfloatx80_scalbn \\\nfloat128_scalbn \\\nsoftfloat_init \\\ntcg_optimize \\\ngen_new_label \\\ntcg_can_emit_vec_op \\\ntcg_expand_vec_op \\\ntcg_register_jit \\\ntcg_tb_insert \\\ntcg_tb_remove \\\ntcg_tb_lookup \\\ntcg_tb_foreach \\\ntcg_nb_tbs \\\ntcg_region_reset_all \\\ntcg_region_init \\\ntcg_code_size \\\ntcg_code_capacity \\\ntcg_tb_phys_invalidate_count \\\ntcg_malloc_internal \\\ntcg_pool_reset \\\ntcg_context_init \\\ntcg_tb_alloc \\\ntcg_prologue_init \\\ntcg_func_start \\\ntcg_set_frame \\\ntcg_global_mem_new_internal \\\ntcg_temp_new_internal \\\ntcg_temp_new_vec \\\ntcg_temp_new_vec_matching \\\ntcg_temp_free_internal \\\ntcg_const_i32 \\\ntcg_const_i64 \\\ntcg_const_local_i32 \\\ntcg_const_local_i64 \\\ntcg_op_supported \\\ntcg_gen_callN \\\ntcg_op_remove \\\ntcg_emit_op \\\ntcg_op_insert_before \\\ntcg_op_insert_after \\\ntcg_cpu_exec_time \\\ntcg_gen_code \\\ntcg_gen_op1 \\\ntcg_gen_op2 \\\ntcg_gen_op3 \\\ntcg_gen_op4 \\\ntcg_gen_op5 \\\ntcg_gen_op6 \\\ntcg_gen_mb \\\ntcg_gen_addi_i32 \\\ntcg_gen_subfi_i32 \\\ntcg_gen_subi_i32 \\\ntcg_gen_andi_i32 \\\ntcg_gen_ori_i32 \\\ntcg_gen_xori_i32 \\\ntcg_gen_shli_i32 \\\ntcg_gen_shri_i32 \\\ntcg_gen_sari_i32 \\\ntcg_gen_brcond_i32 \\\ntcg_gen_brcondi_i32 \\\ntcg_gen_setcond_i32 \\\ntcg_gen_setcondi_i32 \\\ntcg_gen_muli_i32 \\\ntcg_gen_div_i32 \\\ntcg_gen_rem_i32 \\\ntcg_gen_divu_i32 \\\ntcg_gen_remu_i32 \\\ntcg_gen_andc_i32 \\\ntcg_gen_eqv_i32 \\\ntcg_gen_nand_i32 \\\ntcg_gen_nor_i32 \\\ntcg_gen_orc_i32 \\\ntcg_gen_clz_i32 \\\ntcg_gen_clzi_i32 \\\ntcg_gen_ctz_i32 \\\ntcg_gen_ctzi_i32 \\\ntcg_gen_clrsb_i32 \\\ntcg_gen_ctpop_i32 \\\ntcg_gen_rotl_i32 \\\ntcg_gen_rotli_i32 \\\ntcg_gen_rotr_i32 \\\ntcg_gen_rotri_i32 \\\ntcg_gen_deposit_i32 \\\ntcg_gen_deposit_z_i32 \\\ntcg_gen_extract_i32 \\\ntcg_gen_sextract_i32 \\\ntcg_gen_extract2_i32 \\\ntcg_gen_movcond_i32 \\\ntcg_gen_add2_i32 \\\ntcg_gen_sub2_i32 \\\ntcg_gen_mulu2_i32 \\\ntcg_gen_muls2_i32 \\\ntcg_gen_mulsu2_i32 \\\ntcg_gen_ext8s_i32 \\\ntcg_gen_ext16s_i32 \\\ntcg_gen_ext8u_i32 \\\ntcg_gen_ext16u_i32 \\\ntcg_gen_bswap16_i32 \\\ntcg_gen_bswap32_i32 \\\ntcg_gen_smin_i32 \\\ntcg_gen_umin_i32 \\\ntcg_gen_smax_i32 \\\ntcg_gen_umax_i32 \\\ntcg_gen_abs_i32 \\\ntcg_gen_addi_i64 \\\ntcg_gen_subfi_i64 \\\ntcg_gen_subi_i64 \\\ntcg_gen_andi_i64 \\\ntcg_gen_ori_i64 \\\ntcg_gen_xori_i64 \\\ntcg_gen_shli_i64 \\\ntcg_gen_shri_i64 \\\ntcg_gen_sari_i64 \\\ntcg_gen_brcond_i64 \\\ntcg_gen_brcondi_i64 \\\ntcg_gen_setcond_i64 \\\ntcg_gen_setcondi_i64 \\\ntcg_gen_muli_i64 \\\ntcg_gen_div_i64 \\\ntcg_gen_rem_i64 \\\ntcg_gen_divu_i64 \\\ntcg_gen_remu_i64 \\\ntcg_gen_ext8s_i64 \\\ntcg_gen_ext16s_i64 \\\ntcg_gen_ext32s_i64 \\\ntcg_gen_ext8u_i64 \\\ntcg_gen_ext16u_i64 \\\ntcg_gen_ext32u_i64 \\\ntcg_gen_bswap16_i64 \\\ntcg_gen_bswap32_i64 \\\ntcg_gen_bswap64_i64 \\\ntcg_gen_not_i64 \\\ntcg_gen_andc_i64 \\\ntcg_gen_eqv_i64 \\\ntcg_gen_nand_i64 \\\ntcg_gen_nor_i64 \\\ntcg_gen_orc_i64 \\\ntcg_gen_clz_i64 \\\ntcg_gen_clzi_i64 \\\ntcg_gen_ctz_i64 \\\ntcg_gen_ctzi_i64 \\\ntcg_gen_clrsb_i64 \\\ntcg_gen_ctpop_i64 \\\ntcg_gen_rotl_i64 \\\ntcg_gen_rotli_i64 \\\ntcg_gen_rotr_i64 \\\ntcg_gen_rotri_i64 \\\ntcg_gen_deposit_i64 \\\ntcg_gen_deposit_z_i64 \\\ntcg_gen_extract_i64 \\\ntcg_gen_sextract_i64 \\\ntcg_gen_extract2_i64 \\\ntcg_gen_movcond_i64 \\\ntcg_gen_add2_i64 \\\ntcg_gen_sub2_i64 \\\ntcg_gen_mulu2_i64 \\\ntcg_gen_muls2_i64 \\\ntcg_gen_mulsu2_i64 \\\ntcg_gen_smin_i64 \\\ntcg_gen_umin_i64 \\\ntcg_gen_smax_i64 \\\ntcg_gen_umax_i64 \\\ntcg_gen_abs_i64 \\\ntcg_gen_extrl_i64_i32 \\\ntcg_gen_extrh_i64_i32 \\\ntcg_gen_extu_i32_i64 \\\ntcg_gen_ext_i32_i64 \\\ntcg_gen_concat_i32_i64 \\\ntcg_gen_extr_i64_i32 \\\ntcg_gen_extr32_i64 \\\ntcg_gen_exit_tb \\\ntcg_gen_goto_tb \\\ntcg_gen_lookup_and_goto_ptr \\\ncheck_exit_request \\\ntcg_gen_qemu_ld_i32 \\\ntcg_gen_qemu_st_i32 \\\ntcg_gen_qemu_ld_i64 \\\ntcg_gen_qemu_st_i64 \\\ntcg_gen_atomic_cmpxchg_i32 \\\ntcg_gen_atomic_cmpxchg_i64 \\\ntcg_gen_atomic_fetch_add_i32 \\\ntcg_gen_atomic_fetch_add_i64 \\\ntcg_gen_atomic_fetch_and_i32 \\\ntcg_gen_atomic_fetch_and_i64 \\\ntcg_gen_atomic_fetch_or_i32 \\\ntcg_gen_atomic_fetch_or_i64 \\\ntcg_gen_atomic_fetch_xor_i32 \\\ntcg_gen_atomic_fetch_xor_i64 \\\ntcg_gen_atomic_fetch_smin_i32 \\\ntcg_gen_atomic_fetch_smin_i64 \\\ntcg_gen_atomic_fetch_umin_i32 \\\ntcg_gen_atomic_fetch_umin_i64 \\\ntcg_gen_atomic_fetch_smax_i32 \\\ntcg_gen_atomic_fetch_smax_i64 \\\ntcg_gen_atomic_fetch_umax_i32 \\\ntcg_gen_atomic_fetch_umax_i64 \\\ntcg_gen_atomic_add_fetch_i32 \\\ntcg_gen_atomic_add_fetch_i64 \\\ntcg_gen_atomic_and_fetch_i32 \\\ntcg_gen_atomic_and_fetch_i64 \\\ntcg_gen_atomic_or_fetch_i32 \\\ntcg_gen_atomic_or_fetch_i64 \\\ntcg_gen_atomic_xor_fetch_i32 \\\ntcg_gen_atomic_xor_fetch_i64 \\\ntcg_gen_atomic_smin_fetch_i32 \\\ntcg_gen_atomic_smin_fetch_i64 \\\ntcg_gen_atomic_umin_fetch_i32 \\\ntcg_gen_atomic_umin_fetch_i64 \\\ntcg_gen_atomic_smax_fetch_i32 \\\ntcg_gen_atomic_smax_fetch_i64 \\\ntcg_gen_atomic_umax_fetch_i32 \\\ntcg_gen_atomic_umax_fetch_i64 \\\ntcg_gen_atomic_xchg_i32 \\\ntcg_gen_atomic_xchg_i64 \\\nsimd_desc \\\ntcg_gen_gvec_2_ool \\\ntcg_gen_gvec_2i_ool \\\ntcg_gen_gvec_3_ool \\\ntcg_gen_gvec_4_ool \\\ntcg_gen_gvec_5_ool \\\ntcg_gen_gvec_2_ptr \\\ntcg_gen_gvec_3_ptr \\\ntcg_gen_gvec_4_ptr \\\ntcg_gen_gvec_5_ptr \\\ntcg_gen_gvec_2 \\\ntcg_gen_gvec_2i \\\ntcg_gen_gvec_2s \\\ntcg_gen_gvec_3 \\\ntcg_gen_gvec_3i \\\ntcg_gen_gvec_4 \\\ntcg_gen_gvec_mov \\\ntcg_gen_gvec_dup_i32 \\\ntcg_gen_gvec_dup_i64 \\\ntcg_gen_gvec_dup_mem \\\ntcg_gen_gvec_dup64i \\\ntcg_gen_gvec_dup32i \\\ntcg_gen_gvec_dup16i \\\ntcg_gen_gvec_dup8i \\\ntcg_gen_gvec_not \\\ntcg_gen_vec_add8_i64 \\\ntcg_gen_vec_add16_i64 \\\ntcg_gen_vec_add32_i64 \\\ntcg_gen_gvec_add \\\ntcg_gen_gvec_adds \\\ntcg_gen_gvec_addi \\\ntcg_gen_gvec_subs \\\ntcg_gen_vec_sub8_i64 \\\ntcg_gen_vec_sub16_i64 \\\ntcg_gen_vec_sub32_i64 \\\ntcg_gen_gvec_sub \\\ntcg_gen_gvec_mul \\\ntcg_gen_gvec_muls \\\ntcg_gen_gvec_muli \\\ntcg_gen_gvec_ssadd \\\ntcg_gen_gvec_sssub \\\ntcg_gen_gvec_usadd \\\ntcg_gen_gvec_ussub \\\ntcg_gen_gvec_smin \\\ntcg_gen_gvec_umin \\\ntcg_gen_gvec_smax \\\ntcg_gen_gvec_umax \\\ntcg_gen_vec_neg8_i64 \\\ntcg_gen_vec_neg16_i64 \\\ntcg_gen_vec_neg32_i64 \\\ntcg_gen_gvec_neg \\\ntcg_gen_gvec_abs \\\ntcg_gen_gvec_and \\\ntcg_gen_gvec_or \\\ntcg_gen_gvec_xor \\\ntcg_gen_gvec_andc \\\ntcg_gen_gvec_orc \\\ntcg_gen_gvec_nand \\\ntcg_gen_gvec_nor \\\ntcg_gen_gvec_eqv \\\ntcg_gen_gvec_ands \\\ntcg_gen_gvec_andi \\\ntcg_gen_gvec_xors \\\ntcg_gen_gvec_xori \\\ntcg_gen_gvec_ors \\\ntcg_gen_gvec_ori \\\ntcg_gen_vec_shl8i_i64 \\\ntcg_gen_vec_shl16i_i64 \\\ntcg_gen_gvec_shli \\\ntcg_gen_vec_shr8i_i64 \\\ntcg_gen_vec_shr16i_i64 \\\ntcg_gen_gvec_shri \\\ntcg_gen_vec_sar8i_i64 \\\ntcg_gen_vec_sar16i_i64 \\\ntcg_gen_gvec_sari \\\ntcg_gen_gvec_shls \\\ntcg_gen_gvec_shrs \\\ntcg_gen_gvec_sars \\\ntcg_gen_gvec_shlv \\\ntcg_gen_gvec_shrv \\\ntcg_gen_gvec_sarv \\\ntcg_gen_gvec_cmp \\\ntcg_gen_gvec_bitsel \\\ntcg_can_emit_vecop_list \\\nvec_gen_2 \\\nvec_gen_3 \\\nvec_gen_4 \\\ntcg_gen_mov_vec \\\ntcg_const_zeros_vec \\\ntcg_const_ones_vec \\\ntcg_const_zeros_vec_matching \\\ntcg_const_ones_vec_matching \\\ntcg_gen_dup64i_vec \\\ntcg_gen_dup32i_vec \\\ntcg_gen_dup16i_vec \\\ntcg_gen_dup8i_vec \\\ntcg_gen_dupi_vec \\\ntcg_gen_dup_i64_vec \\\ntcg_gen_dup_i32_vec \\\ntcg_gen_dup_mem_vec \\\ntcg_gen_ld_vec \\\ntcg_gen_st_vec \\\ntcg_gen_stl_vec \\\ntcg_gen_and_vec \\\ntcg_gen_or_vec \\\ntcg_gen_xor_vec \\\ntcg_gen_andc_vec \\\ntcg_gen_orc_vec \\\ntcg_gen_nand_vec \\\ntcg_gen_nor_vec \\\ntcg_gen_eqv_vec \\\ntcg_gen_not_vec \\\ntcg_gen_neg_vec \\\ntcg_gen_abs_vec \\\ntcg_gen_shli_vec \\\ntcg_gen_shri_vec \\\ntcg_gen_sari_vec \\\ntcg_gen_cmp_vec \\\ntcg_gen_add_vec \\\ntcg_gen_sub_vec \\\ntcg_gen_mul_vec \\\ntcg_gen_ssadd_vec \\\ntcg_gen_usadd_vec \\\ntcg_gen_sssub_vec \\\ntcg_gen_ussub_vec \\\ntcg_gen_smin_vec \\\ntcg_gen_umin_vec \\\ntcg_gen_smax_vec \\\ntcg_gen_umax_vec \\\ntcg_gen_shlv_vec \\\ntcg_gen_shrv_vec \\\ntcg_gen_sarv_vec \\\ntcg_gen_shls_vec \\\ntcg_gen_shrs_vec \\\ntcg_gen_sars_vec \\\ntcg_gen_bitsel_vec \\\ntcg_gen_cmpsel_vec \\\ntb_htable_lookup \\\ntb_set_jmp_target \\\ncpu_exec \\\ncpu_loop_exit_noexc \\\ncpu_reloading_memory_map \\\ncpu_loop_exit \\\ncpu_loop_exit_restore \\\ncpu_loop_exit_atomic \\\ntlb_init \\\ntlb_flush_by_mmuidx \\\ntlb_flush \\\ntlb_flush_by_mmuidx_all_cpus \\\ntlb_flush_all_cpus \\\ntlb_flush_by_mmuidx_all_cpus_synced \\\ntlb_flush_all_cpus_synced \\\ntlb_flush_page_by_mmuidx \\\ntlb_flush_page \\\ntlb_flush_page_by_mmuidx_all_cpus \\\ntlb_flush_page_all_cpus \\\ntlb_flush_page_by_mmuidx_all_cpus_synced \\\ntlb_flush_page_all_cpus_synced \\\ntlb_protect_code \\\ntlb_unprotect_code \\\ntlb_reset_dirty \\\ntlb_set_dirty \\\ntlb_set_page_with_attrs \\\ntlb_set_page \\\nget_page_addr_code_hostp \\\nget_page_addr_code \\\nprobe_access \\\ntlb_vaddr_to_host \\\nhelper_ret_ldub_mmu \\\nhelper_le_lduw_mmu \\\nhelper_be_lduw_mmu \\\nhelper_le_ldul_mmu \\\nhelper_be_ldul_mmu \\\nhelper_le_ldq_mmu \\\nhelper_be_ldq_mmu \\\nhelper_ret_ldsb_mmu \\\nhelper_le_ldsw_mmu \\\nhelper_be_ldsw_mmu \\\nhelper_le_ldsl_mmu \\\nhelper_be_ldsl_mmu \\\ncpu_ldub_mmuidx_ra \\\ncpu_ldsb_mmuidx_ra \\\ncpu_lduw_mmuidx_ra \\\ncpu_ldsw_mmuidx_ra \\\ncpu_ldl_mmuidx_ra \\\ncpu_ldq_mmuidx_ra \\\ncpu_ldub_data_ra \\\ncpu_ldsb_data_ra \\\ncpu_lduw_data_ra \\\ncpu_ldsw_data_ra \\\ncpu_ldl_data_ra \\\ncpu_ldq_data_ra \\\ncpu_ldub_data \\\ncpu_ldsb_data \\\ncpu_lduw_data \\\ncpu_ldsw_data \\\ncpu_ldl_data \\\ncpu_ldq_data \\\nhelper_ret_stb_mmu \\\nhelper_le_stw_mmu \\\nhelper_be_stw_mmu \\\nhelper_le_stl_mmu \\\nhelper_be_stl_mmu \\\nhelper_le_stq_mmu \\\nhelper_be_stq_mmu \\\ncpu_stb_mmuidx_ra \\\ncpu_stw_mmuidx_ra \\\ncpu_stl_mmuidx_ra \\\ncpu_stq_mmuidx_ra \\\ncpu_stb_data_ra \\\ncpu_stw_data_ra \\\ncpu_stl_data_ra \\\ncpu_stq_data_ra \\\ncpu_stb_data \\\ncpu_stw_data \\\ncpu_stl_data \\\ncpu_stq_data \\\nhelper_atomic_cmpxchgb_mmu \\\nhelper_atomic_xchgb_mmu \\\nhelper_atomic_fetch_addb_mmu \\\nhelper_atomic_fetch_andb_mmu \\\nhelper_atomic_fetch_orb_mmu \\\nhelper_atomic_fetch_xorb_mmu \\\nhelper_atomic_add_fetchb_mmu \\\nhelper_atomic_and_fetchb_mmu \\\nhelper_atomic_or_fetchb_mmu \\\nhelper_atomic_xor_fetchb_mmu \\\nhelper_atomic_fetch_sminb_mmu \\\nhelper_atomic_fetch_uminb_mmu \\\nhelper_atomic_fetch_smaxb_mmu \\\nhelper_atomic_fetch_umaxb_mmu \\\nhelper_atomic_smin_fetchb_mmu \\\nhelper_atomic_umin_fetchb_mmu \\\nhelper_atomic_smax_fetchb_mmu \\\nhelper_atomic_umax_fetchb_mmu \\\nhelper_atomic_cmpxchgw_le_mmu \\\nhelper_atomic_xchgw_le_mmu \\\nhelper_atomic_fetch_addw_le_mmu \\\nhelper_atomic_fetch_andw_le_mmu \\\nhelper_atomic_fetch_orw_le_mmu \\\nhelper_atomic_fetch_xorw_le_mmu \\\nhelper_atomic_add_fetchw_le_mmu \\\nhelper_atomic_and_fetchw_le_mmu \\\nhelper_atomic_or_fetchw_le_mmu \\\nhelper_atomic_xor_fetchw_le_mmu \\\nhelper_atomic_fetch_sminw_le_mmu \\\nhelper_atomic_fetch_uminw_le_mmu \\\nhelper_atomic_fetch_smaxw_le_mmu \\\nhelper_atomic_fetch_umaxw_le_mmu \\\nhelper_atomic_smin_fetchw_le_mmu \\\nhelper_atomic_umin_fetchw_le_mmu \\\nhelper_atomic_smax_fetchw_le_mmu \\\nhelper_atomic_umax_fetchw_le_mmu \\\nhelper_atomic_cmpxchgw_be_mmu \\\nhelper_atomic_xchgw_be_mmu \\\nhelper_atomic_fetch_andw_be_mmu \\\nhelper_atomic_fetch_orw_be_mmu \\\nhelper_atomic_fetch_xorw_be_mmu \\\nhelper_atomic_and_fetchw_be_mmu \\\nhelper_atomic_or_fetchw_be_mmu \\\nhelper_atomic_xor_fetchw_be_mmu \\\nhelper_atomic_fetch_sminw_be_mmu \\\nhelper_atomic_fetch_uminw_be_mmu \\\nhelper_atomic_fetch_smaxw_be_mmu \\\nhelper_atomic_fetch_umaxw_be_mmu \\\nhelper_atomic_smin_fetchw_be_mmu \\\nhelper_atomic_umin_fetchw_be_mmu \\\nhelper_atomic_smax_fetchw_be_mmu \\\nhelper_atomic_umax_fetchw_be_mmu \\\nhelper_atomic_fetch_addw_be_mmu \\\nhelper_atomic_add_fetchw_be_mmu \\\nhelper_atomic_cmpxchgl_le_mmu \\\nhelper_atomic_xchgl_le_mmu \\\nhelper_atomic_fetch_addl_le_mmu \\\nhelper_atomic_fetch_andl_le_mmu \\\nhelper_atomic_fetch_orl_le_mmu \\\nhelper_atomic_fetch_xorl_le_mmu \\\nhelper_atomic_add_fetchl_le_mmu \\\nhelper_atomic_and_fetchl_le_mmu \\\nhelper_atomic_or_fetchl_le_mmu \\\nhelper_atomic_xor_fetchl_le_mmu \\\nhelper_atomic_fetch_sminl_le_mmu \\\nhelper_atomic_fetch_uminl_le_mmu \\\nhelper_atomic_fetch_smaxl_le_mmu \\\nhelper_atomic_fetch_umaxl_le_mmu \\\nhelper_atomic_smin_fetchl_le_mmu \\\nhelper_atomic_umin_fetchl_le_mmu \\\nhelper_atomic_smax_fetchl_le_mmu \\\nhelper_atomic_umax_fetchl_le_mmu \\\nhelper_atomic_cmpxchgl_be_mmu \\\nhelper_atomic_xchgl_be_mmu \\\nhelper_atomic_fetch_andl_be_mmu \\\nhelper_atomic_fetch_orl_be_mmu \\\nhelper_atomic_fetch_xorl_be_mmu \\\nhelper_atomic_and_fetchl_be_mmu \\\nhelper_atomic_or_fetchl_be_mmu \\\nhelper_atomic_xor_fetchl_be_mmu \\\nhelper_atomic_fetch_sminl_be_mmu \\\nhelper_atomic_fetch_uminl_be_mmu \\\nhelper_atomic_fetch_smaxl_be_mmu \\\nhelper_atomic_fetch_umaxl_be_mmu \\\nhelper_atomic_smin_fetchl_be_mmu \\\nhelper_atomic_umin_fetchl_be_mmu \\\nhelper_atomic_smax_fetchl_be_mmu \\\nhelper_atomic_umax_fetchl_be_mmu \\\nhelper_atomic_fetch_addl_be_mmu \\\nhelper_atomic_add_fetchl_be_mmu \\\nhelper_atomic_cmpxchgq_le_mmu \\\nhelper_atomic_xchgq_le_mmu \\\nhelper_atomic_fetch_addq_le_mmu \\\nhelper_atomic_fetch_andq_le_mmu \\\nhelper_atomic_fetch_orq_le_mmu \\\nhelper_atomic_fetch_xorq_le_mmu \\\nhelper_atomic_add_fetchq_le_mmu \\\nhelper_atomic_and_fetchq_le_mmu \\\nhelper_atomic_or_fetchq_le_mmu \\\nhelper_atomic_xor_fetchq_le_mmu \\\nhelper_atomic_fetch_sminq_le_mmu \\\nhelper_atomic_fetch_uminq_le_mmu \\\nhelper_atomic_fetch_smaxq_le_mmu \\\nhelper_atomic_fetch_umaxq_le_mmu \\\nhelper_atomic_smin_fetchq_le_mmu \\\nhelper_atomic_umin_fetchq_le_mmu \\\nhelper_atomic_smax_fetchq_le_mmu \\\nhelper_atomic_umax_fetchq_le_mmu \\\nhelper_atomic_cmpxchgq_be_mmu \\\nhelper_atomic_xchgq_be_mmu \\\nhelper_atomic_fetch_andq_be_mmu \\\nhelper_atomic_fetch_orq_be_mmu \\\nhelper_atomic_fetch_xorq_be_mmu \\\nhelper_atomic_and_fetchq_be_mmu \\\nhelper_atomic_or_fetchq_be_mmu \\\nhelper_atomic_xor_fetchq_be_mmu \\\nhelper_atomic_fetch_sminq_be_mmu \\\nhelper_atomic_fetch_uminq_be_mmu \\\nhelper_atomic_fetch_smaxq_be_mmu \\\nhelper_atomic_fetch_umaxq_be_mmu \\\nhelper_atomic_smin_fetchq_be_mmu \\\nhelper_atomic_umin_fetchq_be_mmu \\\nhelper_atomic_smax_fetchq_be_mmu \\\nhelper_atomic_umax_fetchq_be_mmu \\\nhelper_atomic_fetch_addq_be_mmu \\\nhelper_atomic_add_fetchq_be_mmu \\\nhelper_atomic_cmpxchgb \\\nhelper_atomic_xchgb \\\nhelper_atomic_fetch_addb \\\nhelper_atomic_fetch_andb \\\nhelper_atomic_fetch_orb \\\nhelper_atomic_fetch_xorb \\\nhelper_atomic_add_fetchb \\\nhelper_atomic_and_fetchb \\\nhelper_atomic_or_fetchb \\\nhelper_atomic_xor_fetchb \\\nhelper_atomic_fetch_sminb \\\nhelper_atomic_fetch_uminb \\\nhelper_atomic_fetch_smaxb \\\nhelper_atomic_fetch_umaxb \\\nhelper_atomic_smin_fetchb \\\nhelper_atomic_umin_fetchb \\\nhelper_atomic_smax_fetchb \\\nhelper_atomic_umax_fetchb \\\nhelper_atomic_cmpxchgw_le \\\nhelper_atomic_xchgw_le \\\nhelper_atomic_fetch_addw_le \\\nhelper_atomic_fetch_andw_le \\\nhelper_atomic_fetch_orw_le \\\nhelper_atomic_fetch_xorw_le \\\nhelper_atomic_add_fetchw_le \\\nhelper_atomic_and_fetchw_le \\\nhelper_atomic_or_fetchw_le \\\nhelper_atomic_xor_fetchw_le \\\nhelper_atomic_fetch_sminw_le \\\nhelper_atomic_fetch_uminw_le \\\nhelper_atomic_fetch_smaxw_le \\\nhelper_atomic_fetch_umaxw_le \\\nhelper_atomic_smin_fetchw_le \\\nhelper_atomic_umin_fetchw_le \\\nhelper_atomic_smax_fetchw_le \\\nhelper_atomic_umax_fetchw_le \\\nhelper_atomic_cmpxchgw_be \\\nhelper_atomic_xchgw_be \\\nhelper_atomic_fetch_andw_be \\\nhelper_atomic_fetch_orw_be \\\nhelper_atomic_fetch_xorw_be \\\nhelper_atomic_and_fetchw_be \\\nhelper_atomic_or_fetchw_be \\\nhelper_atomic_xor_fetchw_be \\\nhelper_atomic_fetch_sminw_be \\\nhelper_atomic_fetch_uminw_be \\\nhelper_atomic_fetch_smaxw_be \\\nhelper_atomic_fetch_umaxw_be \\\nhelper_atomic_smin_fetchw_be \\\nhelper_atomic_umin_fetchw_be \\\nhelper_atomic_smax_fetchw_be \\\nhelper_atomic_umax_fetchw_be \\\nhelper_atomic_fetch_addw_be \\\nhelper_atomic_add_fetchw_be \\\nhelper_atomic_cmpxchgl_le \\\nhelper_atomic_xchgl_le \\\nhelper_atomic_fetch_addl_le \\\nhelper_atomic_fetch_andl_le \\\nhelper_atomic_fetch_orl_le \\\nhelper_atomic_fetch_xorl_le \\\nhelper_atomic_add_fetchl_le \\\nhelper_atomic_and_fetchl_le \\\nhelper_atomic_or_fetchl_le \\\nhelper_atomic_xor_fetchl_le \\\nhelper_atomic_fetch_sminl_le \\\nhelper_atomic_fetch_uminl_le \\\nhelper_atomic_fetch_smaxl_le \\\nhelper_atomic_fetch_umaxl_le \\\nhelper_atomic_smin_fetchl_le \\\nhelper_atomic_umin_fetchl_le \\\nhelper_atomic_smax_fetchl_le \\\nhelper_atomic_umax_fetchl_le \\\nhelper_atomic_cmpxchgl_be \\\nhelper_atomic_xchgl_be \\\nhelper_atomic_fetch_andl_be \\\nhelper_atomic_fetch_orl_be \\\nhelper_atomic_fetch_xorl_be \\\nhelper_atomic_and_fetchl_be \\\nhelper_atomic_or_fetchl_be \\\nhelper_atomic_xor_fetchl_be \\\nhelper_atomic_fetch_sminl_be \\\nhelper_atomic_fetch_uminl_be \\\nhelper_atomic_fetch_smaxl_be \\\nhelper_atomic_fetch_umaxl_be \\\nhelper_atomic_smin_fetchl_be \\\nhelper_atomic_umin_fetchl_be \\\nhelper_atomic_smax_fetchl_be \\\nhelper_atomic_umax_fetchl_be \\\nhelper_atomic_fetch_addl_be \\\nhelper_atomic_add_fetchl_be \\\nhelper_atomic_cmpxchgq_le \\\nhelper_atomic_xchgq_le \\\nhelper_atomic_fetch_addq_le \\\nhelper_atomic_fetch_andq_le \\\nhelper_atomic_fetch_orq_le \\\nhelper_atomic_fetch_xorq_le \\\nhelper_atomic_add_fetchq_le \\\nhelper_atomic_and_fetchq_le \\\nhelper_atomic_or_fetchq_le \\\nhelper_atomic_xor_fetchq_le \\\nhelper_atomic_fetch_sminq_le \\\nhelper_atomic_fetch_uminq_le \\\nhelper_atomic_fetch_smaxq_le \\\nhelper_atomic_fetch_umaxq_le \\\nhelper_atomic_smin_fetchq_le \\\nhelper_atomic_umin_fetchq_le \\\nhelper_atomic_smax_fetchq_le \\\nhelper_atomic_umax_fetchq_le \\\nhelper_atomic_cmpxchgq_be \\\nhelper_atomic_xchgq_be \\\nhelper_atomic_fetch_andq_be \\\nhelper_atomic_fetch_orq_be \\\nhelper_atomic_fetch_xorq_be \\\nhelper_atomic_and_fetchq_be \\\nhelper_atomic_or_fetchq_be \\\nhelper_atomic_xor_fetchq_be \\\nhelper_atomic_fetch_sminq_be \\\nhelper_atomic_fetch_uminq_be \\\nhelper_atomic_fetch_smaxq_be \\\nhelper_atomic_fetch_umaxq_be \\\nhelper_atomic_smin_fetchq_be \\\nhelper_atomic_umin_fetchq_be \\\nhelper_atomic_smax_fetchq_be \\\nhelper_atomic_umax_fetchq_be \\\nhelper_atomic_fetch_addq_be \\\nhelper_atomic_add_fetchq_be \\\ncpu_ldub_code \\\ncpu_lduw_code \\\ncpu_ldl_code \\\ncpu_ldq_code \\\nhelper_div_i32 \\\nhelper_rem_i32 \\\nhelper_divu_i32 \\\nhelper_remu_i32 \\\nhelper_shl_i64 \\\nhelper_shr_i64 \\\nhelper_sar_i64 \\\nhelper_div_i64 \\\nhelper_rem_i64 \\\nhelper_divu_i64 \\\nhelper_remu_i64 \\\nhelper_muluh_i64 \\\nhelper_mulsh_i64 \\\nhelper_clz_i32 \\\nhelper_ctz_i32 \\\nhelper_clz_i64 \\\nhelper_ctz_i64 \\\nhelper_clrsb_i32 \\\nhelper_clrsb_i64 \\\nhelper_ctpop_i32 \\\nhelper_ctpop_i64 \\\nhelper_lookup_tb_ptr \\\nhelper_exit_atomic \\\nhelper_gvec_add8 \\\nhelper_gvec_add16 \\\nhelper_gvec_add32 \\\nhelper_gvec_add64 \\\nhelper_gvec_adds8 \\\nhelper_gvec_adds16 \\\nhelper_gvec_adds32 \\\nhelper_gvec_adds64 \\\nhelper_gvec_sub8 \\\nhelper_gvec_sub16 \\\nhelper_gvec_sub32 \\\nhelper_gvec_sub64 \\\nhelper_gvec_subs8 \\\nhelper_gvec_subs16 \\\nhelper_gvec_subs32 \\\nhelper_gvec_subs64 \\\nhelper_gvec_mul8 \\\nhelper_gvec_mul16 \\\nhelper_gvec_mul32 \\\nhelper_gvec_mul64 \\\nhelper_gvec_muls8 \\\nhelper_gvec_muls16 \\\nhelper_gvec_muls32 \\\nhelper_gvec_muls64 \\\nhelper_gvec_neg8 \\\nhelper_gvec_neg16 \\\nhelper_gvec_neg32 \\\nhelper_gvec_neg64 \\\nhelper_gvec_abs8 \\\nhelper_gvec_abs16 \\\nhelper_gvec_abs32 \\\nhelper_gvec_abs64 \\\nhelper_gvec_mov \\\nhelper_gvec_dup64 \\\nhelper_gvec_dup32 \\\nhelper_gvec_dup16 \\\nhelper_gvec_dup8 \\\nhelper_gvec_not \\\nhelper_gvec_and \\\nhelper_gvec_or \\\nhelper_gvec_xor \\\nhelper_gvec_andc \\\nhelper_gvec_orc \\\nhelper_gvec_nand \\\nhelper_gvec_nor \\\nhelper_gvec_eqv \\\nhelper_gvec_ands \\\nhelper_gvec_xors \\\nhelper_gvec_ors \\\nhelper_gvec_shl8i \\\nhelper_gvec_shl16i \\\nhelper_gvec_shl32i \\\nhelper_gvec_shl64i \\\nhelper_gvec_shr8i \\\nhelper_gvec_shr16i \\\nhelper_gvec_shr32i \\\nhelper_gvec_shr64i \\\nhelper_gvec_sar8i \\\nhelper_gvec_sar16i \\\nhelper_gvec_sar32i \\\nhelper_gvec_sar64i \\\nhelper_gvec_shl8v \\\nhelper_gvec_shl16v \\\nhelper_gvec_shl32v \\\nhelper_gvec_shl64v \\\nhelper_gvec_shr8v \\\nhelper_gvec_shr16v \\\nhelper_gvec_shr32v \\\nhelper_gvec_shr64v \\\nhelper_gvec_sar8v \\\nhelper_gvec_sar16v \\\nhelper_gvec_sar32v \\\nhelper_gvec_sar64v \\\nhelper_gvec_eq8 \\\nhelper_gvec_ne8 \\\nhelper_gvec_lt8 \\\nhelper_gvec_le8 \\\nhelper_gvec_ltu8 \\\nhelper_gvec_leu8 \\\nhelper_gvec_eq16 \\\nhelper_gvec_ne16 \\\nhelper_gvec_lt16 \\\nhelper_gvec_le16 \\\nhelper_gvec_ltu16 \\\nhelper_gvec_leu16 \\\nhelper_gvec_eq32 \\\nhelper_gvec_ne32 \\\nhelper_gvec_lt32 \\\nhelper_gvec_le32 \\\nhelper_gvec_ltu32 \\\nhelper_gvec_leu32 \\\nhelper_gvec_eq64 \\\nhelper_gvec_ne64 \\\nhelper_gvec_lt64 \\\nhelper_gvec_le64 \\\nhelper_gvec_ltu64 \\\nhelper_gvec_leu64 \\\nhelper_gvec_ssadd8 \\\nhelper_gvec_ssadd16 \\\nhelper_gvec_ssadd32 \\\nhelper_gvec_ssadd64 \\\nhelper_gvec_sssub8 \\\nhelper_gvec_sssub16 \\\nhelper_gvec_sssub32 \\\nhelper_gvec_sssub64 \\\nhelper_gvec_usadd8 \\\nhelper_gvec_usadd16 \\\nhelper_gvec_usadd32 \\\nhelper_gvec_usadd64 \\\nhelper_gvec_ussub8 \\\nhelper_gvec_ussub16 \\\nhelper_gvec_ussub32 \\\nhelper_gvec_ussub64 \\\nhelper_gvec_smin8 \\\nhelper_gvec_smin16 \\\nhelper_gvec_smin32 \\\nhelper_gvec_smin64 \\\nhelper_gvec_smax8 \\\nhelper_gvec_smax16 \\\nhelper_gvec_smax32 \\\nhelper_gvec_smax64 \\\nhelper_gvec_umin8 \\\nhelper_gvec_umin16 \\\nhelper_gvec_umin32 \\\nhelper_gvec_umin64 \\\nhelper_gvec_umax8 \\\nhelper_gvec_umax16 \\\nhelper_gvec_umax32 \\\nhelper_gvec_umax64 \\\nhelper_gvec_bitsel \\\ncpu_restore_state \\\npage_collection_lock \\\npage_collection_unlock \\\nfree_code_gen_buffer \\\ntcg_exec_init \\\ntb_cleanup \\\ntb_flush \\\ntb_phys_invalidate \\\ntb_gen_code \\\ntb_exec_lock \\\ntb_exec_unlock \\\ntb_invalidate_phys_page_range \\\ntb_invalidate_phys_range \\\ntb_invalidate_phys_page_fast \\\ntb_check_watchpoint \\\ncpu_io_recompile \\\ntb_flush_jmp_cache \\\ntcg_flush_softmmu_tlb \\\ntranslator_loop_temp_check \\\ntranslator_loop \\\nhelper_atomic_cmpxchgo_le_mmu \\\nhelper_atomic_cmpxchgo_be_mmu \\\nhelper_atomic_ldo_le_mmu \\\nhelper_atomic_ldo_be_mmu \\\nhelper_atomic_sto_le_mmu \\\nhelper_atomic_sto_be_mmu \\\nunassigned_mem_ops \\\nfloatx80_infinity \\\ndup_const_func \\\ngen_helper_raise_exception \\\ngen_helper_raise_interrupt \\\ngen_helper_vfp_get_fpscr \\\ngen_helper_vfp_set_fpscr \\\ngen_helper_cpsr_read \\\ngen_helper_cpsr_write \\\ntlb_reset_dirty_by_vaddr \\\n\"\n\nx86_64_SYMBOLS=\"\ncpu_get_tsc \\\nx86_cpu_get_memory_mapping \\\ncpu_x86_update_dr7 \\\nbreakpoint_handler \\\nhelper_single_step \\\nhelper_rechecking_single_step \\\nhelper_set_dr \\\nhelper_get_dr \\\nhelper_bpt_io \\\nhelper_cc_compute_all \\\ncpu_cc_compute_all \\\nhelper_cc_compute_c \\\nhelper_write_eflags \\\nhelper_read_eflags \\\nhelper_clts \\\nhelper_reset_rf \\\nhelper_cli \\\nhelper_sti \\\nhelper_clac \\\nhelper_stac \\\nget_register_name_32 \\\nhost_cpuid \\\nhost_vendor_fms \\\nx86_cpu_set_default_version \\\ncpu_clear_apic_feature \\\ncpu_x86_cpuid \\\nx86_cpu_pending_interrupt \\\nx86_update_hflags \\\ncpu_x86_init \\\nhelper_raise_interrupt \\\nhelper_raise_exception \\\nraise_interrupt \\\nraise_exception_err \\\nraise_exception_err_ra \\\nraise_exception \\\nraise_exception_ra \\\nx86_cpu_tlb_fill \\\ncpu_set_ignne \\\nhelper_flds_FT0 \\\nhelper_fldl_FT0 \\\nhelper_fildl_FT0 \\\nhelper_flds_ST0 \\\nhelper_fldl_ST0 \\\nhelper_fildl_ST0 \\\nhelper_fildll_ST0 \\\nhelper_fsts_ST0 \\\nhelper_fstl_ST0 \\\nhelper_fist_ST0 \\\nhelper_fistl_ST0 \\\nhelper_fistll_ST0 \\\nhelper_fistt_ST0 \\\nhelper_fisttl_ST0 \\\nhelper_fisttll_ST0 \\\nhelper_fldt_ST0 \\\nhelper_fstt_ST0 \\\nhelper_fpush \\\nhelper_fpop \\\nhelper_fdecstp \\\nhelper_fincstp \\\nhelper_ffree_STN \\\nhelper_fmov_ST0_FT0 \\\nhelper_fmov_FT0_STN \\\nhelper_fmov_ST0_STN \\\nhelper_fmov_STN_ST0 \\\nhelper_fxchg_ST0_STN \\\nhelper_fcom_ST0_FT0 \\\nhelper_fucom_ST0_FT0 \\\nhelper_fcomi_ST0_FT0 \\\nhelper_fucomi_ST0_FT0 \\\nhelper_fadd_ST0_FT0 \\\nhelper_fmul_ST0_FT0 \\\nhelper_fsub_ST0_FT0 \\\nhelper_fsubr_ST0_FT0 \\\nhelper_fdiv_ST0_FT0 \\\nhelper_fdivr_ST0_FT0 \\\nhelper_fadd_STN_ST0 \\\nhelper_fmul_STN_ST0 \\\nhelper_fsub_STN_ST0 \\\nhelper_fsubr_STN_ST0 \\\nhelper_fdiv_STN_ST0 \\\nhelper_fdivr_STN_ST0 \\\nhelper_fchs_ST0 \\\nhelper_fabs_ST0 \\\nhelper_fld1_ST0 \\\nhelper_fldl2t_ST0 \\\nhelper_fldl2e_ST0 \\\nhelper_fldpi_ST0 \\\nhelper_fldlg2_ST0 \\\nhelper_fldln2_ST0 \\\nhelper_fldz_ST0 \\\nhelper_fldz_FT0 \\\nhelper_fnstsw \\\nhelper_fnstcw \\\nupdate_fp_status \\\nhelper_fldcw \\\nhelper_fclex \\\nhelper_fwait \\\nhelper_fninit \\\nhelper_fbld_ST0 \\\nhelper_fbst_ST0 \\\nhelper_f2xm1 \\\nhelper_fyl2x \\\nhelper_fptan \\\nhelper_fpatan \\\nhelper_fxtract \\\nhelper_fprem1 \\\nhelper_fprem \\\nhelper_fyl2xp1 \\\nhelper_fsqrt \\\nhelper_fsincos \\\nhelper_frndint \\\nhelper_fscale \\\nhelper_fsin \\\nhelper_fcos \\\nhelper_fxam_ST0 \\\nhelper_fstenv \\\nhelper_fldenv \\\nhelper_fsave \\\nhelper_frstor \\\nhelper_fxsave \\\nhelper_xsave \\\nhelper_xsaveopt \\\nhelper_fxrstor \\\nhelper_xrstor \\\nhelper_xgetbv \\\nhelper_xsetbv \\\nupdate_mxcsr_status \\\nhelper_ldmxcsr \\\nhelper_enter_mmx \\\nhelper_emms \\\nhelper_movq \\\nhelper_psrlw_mmx \\\nhelper_psraw_mmx \\\nhelper_psllw_mmx \\\nhelper_psrld_mmx \\\nhelper_psrad_mmx \\\nhelper_pslld_mmx \\\nhelper_psrlq_mmx \\\nhelper_psllq_mmx \\\nhelper_paddb_mmx \\\nhelper_paddw_mmx \\\nhelper_paddl_mmx \\\nhelper_paddq_mmx \\\nhelper_psubb_mmx \\\nhelper_psubw_mmx \\\nhelper_psubl_mmx \\\nhelper_psubq_mmx \\\nhelper_paddusb_mmx \\\nhelper_paddsb_mmx \\\nhelper_psubusb_mmx \\\nhelper_psubsb_mmx \\\nhelper_paddusw_mmx \\\nhelper_paddsw_mmx \\\nhelper_psubusw_mmx \\\nhelper_psubsw_mmx \\\nhelper_pminub_mmx \\\nhelper_pmaxub_mmx \\\nhelper_pminsw_mmx \\\nhelper_pmaxsw_mmx \\\nhelper_pand_mmx \\\nhelper_pandn_mmx \\\nhelper_por_mmx \\\nhelper_pxor_mmx \\\nhelper_pcmpgtb_mmx \\\nhelper_pcmpgtw_mmx \\\nhelper_pcmpgtl_mmx \\\nhelper_pcmpeqb_mmx \\\nhelper_pcmpeqw_mmx \\\nhelper_pcmpeql_mmx \\\nhelper_pmullw_mmx \\\nhelper_pmulhrw_mmx \\\nhelper_pmulhuw_mmx \\\nhelper_pmulhw_mmx \\\nhelper_pavgb_mmx \\\nhelper_pavgw_mmx \\\nhelper_pmuludq_mmx \\\nhelper_pmaddwd_mmx \\\nhelper_psadbw_mmx \\\nhelper_maskmov_mmx \\\nhelper_movl_mm_T0_mmx \\\nhelper_movq_mm_T0_mmx \\\nhelper_pshufw_mmx \\\nhelper_pmovmskb_mmx \\\nhelper_packsswb_mmx \\\nhelper_packuswb_mmx \\\nhelper_packssdw_mmx \\\nhelper_punpcklbw_mmx \\\nhelper_punpcklwd_mmx \\\nhelper_punpckldq_mmx \\\nhelper_punpckhbw_mmx \\\nhelper_punpckhwd_mmx \\\nhelper_punpckhdq_mmx \\\nhelper_pi2fd \\\nhelper_pi2fw \\\nhelper_pf2id \\\nhelper_pf2iw \\\nhelper_pfacc \\\nhelper_pfadd \\\nhelper_pfcmpeq \\\nhelper_pfcmpge \\\nhelper_pfcmpgt \\\nhelper_pfmax \\\nhelper_pfmin \\\nhelper_pfmul \\\nhelper_pfnacc \\\nhelper_pfpnacc \\\nhelper_pfrcp \\\nhelper_pfrsqrt \\\nhelper_pfsub \\\nhelper_pfsubr \\\nhelper_pswapd \\\nhelper_pshufb_mmx \\\nhelper_phaddw_mmx \\\nhelper_phaddd_mmx \\\nhelper_phaddsw_mmx \\\nhelper_pmaddubsw_mmx \\\nhelper_phsubw_mmx \\\nhelper_phsubd_mmx \\\nhelper_phsubsw_mmx \\\nhelper_pabsb_mmx \\\nhelper_pabsw_mmx \\\nhelper_pabsd_mmx \\\nhelper_pmulhrsw_mmx \\\nhelper_psignb_mmx \\\nhelper_psignw_mmx \\\nhelper_psignd_mmx \\\nhelper_palignr_mmx \\\nhelper_psrlw_xmm \\\nhelper_psraw_xmm \\\nhelper_psllw_xmm \\\nhelper_psrld_xmm \\\nhelper_psrad_xmm \\\nhelper_pslld_xmm \\\nhelper_psrlq_xmm \\\nhelper_psllq_xmm \\\nhelper_psrldq_xmm \\\nhelper_pslldq_xmm \\\nhelper_paddb_xmm \\\nhelper_paddw_xmm \\\nhelper_paddl_xmm \\\nhelper_paddq_xmm \\\nhelper_psubb_xmm \\\nhelper_psubw_xmm \\\nhelper_psubl_xmm \\\nhelper_psubq_xmm \\\nhelper_paddusb_xmm \\\nhelper_paddsb_xmm \\\nhelper_psubusb_xmm \\\nhelper_psubsb_xmm \\\nhelper_paddusw_xmm \\\nhelper_paddsw_xmm \\\nhelper_psubusw_xmm \\\nhelper_psubsw_xmm \\\nhelper_pminub_xmm \\\nhelper_pmaxub_xmm \\\nhelper_pminsw_xmm \\\nhelper_pmaxsw_xmm \\\nhelper_pand_xmm \\\nhelper_pandn_xmm \\\nhelper_por_xmm \\\nhelper_pxor_xmm \\\nhelper_pcmpgtb_xmm \\\nhelper_pcmpgtw_xmm \\\nhelper_pcmpgtl_xmm \\\nhelper_pcmpeqb_xmm \\\nhelper_pcmpeqw_xmm \\\nhelper_pcmpeql_xmm \\\nhelper_pmullw_xmm \\\nhelper_pmulhuw_xmm \\\nhelper_pmulhw_xmm \\\nhelper_pavgb_xmm \\\nhelper_pavgw_xmm \\\nhelper_pmuludq_xmm \\\nhelper_pmaddwd_xmm \\\nhelper_psadbw_xmm \\\nhelper_maskmov_xmm \\\nhelper_movl_mm_T0_xmm \\\nhelper_movq_mm_T0_xmm \\\nhelper_shufps \\\nhelper_shufpd \\\nhelper_pshufd_xmm \\\nhelper_pshuflw_xmm \\\nhelper_pshufhw_xmm \\\nhelper_addps \\\nhelper_addss \\\nhelper_addpd \\\nhelper_addsd \\\nhelper_subps \\\nhelper_subss \\\nhelper_subpd \\\nhelper_subsd \\\nhelper_mulps \\\nhelper_mulss \\\nhelper_mulpd \\\nhelper_mulsd \\\nhelper_divps \\\nhelper_divss \\\nhelper_divpd \\\nhelper_divsd \\\nhelper_minps \\\nhelper_minss \\\nhelper_minpd \\\nhelper_minsd \\\nhelper_maxps \\\nhelper_maxss \\\nhelper_maxpd \\\nhelper_maxsd \\\nhelper_sqrtps \\\nhelper_sqrtss \\\nhelper_sqrtpd \\\nhelper_sqrtsd \\\nhelper_cvtps2pd \\\nhelper_cvtpd2ps \\\nhelper_cvtss2sd \\\nhelper_cvtsd2ss \\\nhelper_cvtdq2ps \\\nhelper_cvtdq2pd \\\nhelper_cvtpi2ps \\\nhelper_cvtpi2pd \\\nhelper_cvtsi2ss \\\nhelper_cvtsi2sd \\\nhelper_cvtsq2ss \\\nhelper_cvtsq2sd \\\nhelper_cvtps2dq \\\nhelper_cvtpd2dq \\\nhelper_cvtps2pi \\\nhelper_cvtpd2pi \\\nhelper_cvtss2si \\\nhelper_cvtsd2si \\\nhelper_cvtss2sq \\\nhelper_cvtsd2sq \\\nhelper_cvttps2dq \\\nhelper_cvttpd2dq \\\nhelper_cvttps2pi \\\nhelper_cvttpd2pi \\\nhelper_cvttss2si \\\nhelper_cvttsd2si \\\nhelper_cvttss2sq \\\nhelper_cvttsd2sq \\\nhelper_rsqrtps \\\nhelper_rsqrtss \\\nhelper_rcpps \\\nhelper_rcpss \\\nhelper_extrq_r \\\nhelper_extrq_i \\\nhelper_insertq_r \\\nhelper_insertq_i \\\nhelper_haddps \\\nhelper_haddpd \\\nhelper_hsubps \\\nhelper_hsubpd \\\nhelper_addsubps \\\nhelper_addsubpd \\\nhelper_cmpeqps \\\nhelper_cmpeqss \\\nhelper_cmpeqpd \\\nhelper_cmpeqsd \\\nhelper_cmpltps \\\nhelper_cmpltss \\\nhelper_cmpltpd \\\nhelper_cmpltsd \\\nhelper_cmpleps \\\nhelper_cmpless \\\nhelper_cmplepd \\\nhelper_cmplesd \\\nhelper_cmpunordps \\\nhelper_cmpunordss \\\nhelper_cmpunordpd \\\nhelper_cmpunordsd \\\nhelper_cmpneqps \\\nhelper_cmpneqss \\\nhelper_cmpneqpd \\\nhelper_cmpneqsd \\\nhelper_cmpnltps \\\nhelper_cmpnltss \\\nhelper_cmpnltpd \\\nhelper_cmpnltsd \\\nhelper_cmpnleps \\\nhelper_cmpnless \\\nhelper_cmpnlepd \\\nhelper_cmpnlesd \\\nhelper_cmpordps \\\nhelper_cmpordss \\\nhelper_cmpordpd \\\nhelper_cmpordsd \\\nhelper_ucomiss \\\nhelper_comiss \\\nhelper_ucomisd \\\nhelper_comisd \\\nhelper_movmskps \\\nhelper_movmskpd \\\nhelper_pmovmskb_xmm \\\nhelper_packsswb_xmm \\\nhelper_packuswb_xmm \\\nhelper_packssdw_xmm \\\nhelper_punpcklbw_xmm \\\nhelper_punpcklwd_xmm \\\nhelper_punpckldq_xmm \\\nhelper_punpcklqdq_xmm \\\nhelper_punpckhbw_xmm \\\nhelper_punpckhwd_xmm \\\nhelper_punpckhdq_xmm \\\nhelper_punpckhqdq_xmm \\\nhelper_pshufb_xmm \\\nhelper_phaddw_xmm \\\nhelper_phaddd_xmm \\\nhelper_phaddsw_xmm \\\nhelper_pmaddubsw_xmm \\\nhelper_phsubw_xmm \\\nhelper_phsubd_xmm \\\nhelper_phsubsw_xmm \\\nhelper_pabsb_xmm \\\nhelper_pabsw_xmm \\\nhelper_pabsd_xmm \\\nhelper_pmulhrsw_xmm \\\nhelper_psignb_xmm \\\nhelper_psignw_xmm \\\nhelper_psignd_xmm \\\nhelper_palignr_xmm \\\nhelper_pblendvb_xmm \\\nhelper_blendvps_xmm \\\nhelper_blendvpd_xmm \\\nhelper_ptest_xmm \\\nhelper_pmovsxbw_xmm \\\nhelper_pmovsxbd_xmm \\\nhelper_pmovsxbq_xmm \\\nhelper_pmovsxwd_xmm \\\nhelper_pmovsxwq_xmm \\\nhelper_pmovsxdq_xmm \\\nhelper_pmovzxbw_xmm \\\nhelper_pmovzxbd_xmm \\\nhelper_pmovzxbq_xmm \\\nhelper_pmovzxwd_xmm \\\nhelper_pmovzxwq_xmm \\\nhelper_pmovzxdq_xmm \\\nhelper_pmuldq_xmm \\\nhelper_pcmpeqq_xmm \\\nhelper_packusdw_xmm \\\nhelper_pminsb_xmm \\\nhelper_pminsd_xmm \\\nhelper_pminuw_xmm \\\nhelper_pminud_xmm \\\nhelper_pmaxsb_xmm \\\nhelper_pmaxsd_xmm \\\nhelper_pmaxuw_xmm \\\nhelper_pmaxud_xmm \\\nhelper_pmulld_xmm \\\nhelper_phminposuw_xmm \\\nhelper_roundps_xmm \\\nhelper_roundpd_xmm \\\nhelper_roundss_xmm \\\nhelper_roundsd_xmm \\\nhelper_blendps_xmm \\\nhelper_blendpd_xmm \\\nhelper_pblendw_xmm \\\nhelper_dpps_xmm \\\nhelper_dppd_xmm \\\nhelper_mpsadbw_xmm \\\nhelper_pcmpgtq_xmm \\\nhelper_pcmpestri_xmm \\\nhelper_pcmpestrm_xmm \\\nhelper_pcmpistri_xmm \\\nhelper_pcmpistrm_xmm \\\nhelper_crc32 \\\nhelper_pclmulqdq_xmm \\\nhelper_aesdec_xmm \\\nhelper_aesdeclast_xmm \\\nhelper_aesenc_xmm \\\nhelper_aesenclast_xmm \\\nhelper_aesimc_xmm \\\nhelper_aeskeygenassist_xmm \\\ncpu_sync_bndcs_hflags \\\ncpu_x86_support_mca_broadcast \\\nx86_cpu_set_a20 \\\ncpu_x86_update_cr0 \\\ncpu_x86_update_cr3 \\\ncpu_x86_update_cr4 \\\nx86_cpu_get_phys_page_attrs_debug \\\ncpu_x86_get_descr_debug \\\ndo_cpu_init \\\ndo_cpu_sipi \\\nx86_cpu_exec_enter \\\nx86_cpu_exec_exit \\\nx86_ldub_phys \\\nx86_lduw_phys \\\nx86_ldl_phys \\\nx86_ldq_phys \\\nx86_stb_phys \\\nx86_stl_phys_notdirty \\\nx86_stw_phys \\\nx86_stl_phys \\\nx86_stq_phys \\\nhelper_divb_AL \\\nhelper_idivb_AL \\\nhelper_divw_AX \\\nhelper_idivw_AX \\\nhelper_divl_EAX \\\nhelper_idivl_EAX \\\nhelper_aam \\\nhelper_aad \\\nhelper_aaa \\\nhelper_aas \\\nhelper_daa \\\nhelper_das \\\nhelper_divq_EAX \\\nhelper_idivq_EAX \\\nhelper_pdep \\\nhelper_pext \\\nhelper_rclb \\\nhelper_rcrb \\\nhelper_rclw \\\nhelper_rcrw \\\nhelper_rcll \\\nhelper_rcrl \\\nhelper_rclq \\\nhelper_rcrq \\\nhelper_cr4_testbit \\\nhelper_rdrand \\\nhelper_cmpxchg8b_unlocked \\\nhelper_cmpxchg8b \\\nhelper_cmpxchg16b_unlocked \\\nhelper_cmpxchg16b \\\nhelper_boundw \\\nhelper_boundl \\\nhelper_outb \\\nhelper_inb \\\nhelper_outw \\\nhelper_inw \\\nhelper_outl \\\nhelper_inl \\\nhelper_into \\\nhelper_cpuid \\\nhelper_read_crN \\\nhelper_write_crN \\\nhelper_lmsw \\\nhelper_invlpg \\\nhelper_rdtsc \\\nhelper_rdtscp \\\nhelper_rdpmc \\\nhelper_wrmsr \\\nhelper_rdmsr \\\nhelper_hlt \\\nhelper_monitor \\\nhelper_mwait \\\nhelper_pause \\\nhelper_debug \\\nhelper_rdpkru \\\nhelper_wrpkru \\\nhelper_bndck \\\nhelper_bndldx64 \\\nhelper_bndldx32 \\\nhelper_bndstx64 \\\nhelper_bndstx32 \\\nhelper_bnd_jmp \\\nhelper_syscall \\\nhelper_sysret \\\nx86_cpu_do_interrupt \\\ndo_interrupt_x86_hardirq \\\nx86_cpu_exec_interrupt \\\nhelper_lldt \\\nhelper_ltr \\\nuc_check_cpu_x86_load_seg \\\nhelper_load_seg \\\nhelper_ljmp_protected \\\nhelper_lcall_real \\\nhelper_lcall_protected \\\nhelper_iret_real \\\nhelper_iret_protected \\\nhelper_lret_protected \\\nhelper_sysenter \\\nhelper_sysexit \\\nhelper_lsl \\\nhelper_lar \\\nhelper_verr \\\nhelper_verw \\\ncpu_x86_load_seg \\\nhelper_check_iob \\\nhelper_check_iow \\\nhelper_check_iol \\\ndo_smm_enter \\\nhelper_rsm \\\nhelper_vmrun \\\nhelper_vmmcall \\\nhelper_vmload \\\nhelper_vmsave \\\nhelper_stgi \\\nhelper_clgi \\\nhelper_skinit \\\nhelper_invlpga \\\ncpu_svm_check_intercept_param \\\nhelper_svm_check_intercept_param \\\nhelper_svm_check_io \\\ncpu_vmexit \\\ndo_vmexit \\\ntcg_x86_init \\\ngen_intermediate_code \\\nrestore_state_to_opc \\\nx86_cpu_xsave_all_areas \\\nx86_cpu_xrstor_all_areas \\\ncpu_get_fp80 \\\ncpu_set_fp80 \\\n\"\n\narm_SYMBOLS=\"\narm_cpu_exec_interrupt \\\narm_cpu_update_virq \\\narm_cpu_update_vfiq \\\narm_cpu_initfn \\\ngt_cntfrq_period_ns \\\narm_cpu_post_init \\\narm_cpu_realizefn \\\na15_l2ctlr_read \\\narm_cpu_class_init \\\ncpu_arm_init \\\nhelper_crypto_aese \\\nhelper_crypto_aesmc \\\nhelper_crypto_sha1_3reg \\\nhelper_crypto_sha1h \\\nhelper_crypto_sha1su1 \\\nhelper_crypto_sha256h \\\nhelper_crypto_sha256h2 \\\nhelper_crypto_sha256su0 \\\nhelper_crypto_sha256su1 \\\nhelper_crypto_sha512h \\\nhelper_crypto_sha512h2 \\\nhelper_crypto_sha512su0 \\\nhelper_crypto_sha512su1 \\\nhelper_crypto_sm3partw1 \\\nhelper_crypto_sm3partw2 \\\nhelper_crypto_sm3tt \\\nhelper_crypto_sm4e \\\nhelper_crypto_sm4ekey \\\nhelper_check_breakpoints \\\narm_debug_check_watchpoint \\\narm_debug_excp_handler \\\narm_adjust_watchpoint_address \\\nread_raw_cp_reg \\\npmu_init \\\npmu_op_start \\\npmu_op_finish \\\npmu_pre_el_change \\\npmu_post_el_change \\\narm_pmu_timer_cb \\\narm_gt_ptimer_cb \\\narm_gt_vtimer_cb \\\narm_gt_htimer_cb \\\narm_gt_stimer_cb \\\narm_gt_hvtimer_cb \\\narm_hcr_el2_eff \\\nsve_exception_el \\\nsve_zcr_len_for_el \\\nhw_watchpoint_update \\\nhw_watchpoint_update_all \\\nhw_breakpoint_update \\\nhw_breakpoint_update_all \\\nregister_cp_regs_for_features \\\ndefine_one_arm_cp_reg_with_opaque \\\ndefine_arm_cp_regs_with_opaque \\\nmodify_arm_cp_regs \\\nget_arm_cp_reginfo \\\narm_cp_write_ignore \\\narm_cp_read_zero \\\narm_cp_reset_ignore \\\ncpsr_read \\\ncpsr_write \\\nhelper_sxtb16 \\\nhelper_uxtb16 \\\nhelper_sdiv \\\nhelper_udiv \\\nhelper_rbit \\\narm_phys_excp_target_el \\\naarch64_sync_32_to_64 \\\naarch64_sync_64_to_32 \\\narm_cpu_do_interrupt \\\narm_sctlr \\\narm_s1_regime_using_lpae_format \\\naa64_va_parameters \\\nv8m_security_lookup \\\npmsav8_mpu_lookup \\\nget_phys_addr \\\narm_cpu_get_phys_page_attrs_debug \\\nhelper_qadd16 \\\nhelper_qadd8 \\\nhelper_qsub16 \\\nhelper_qsub8 \\\nhelper_qsubaddx \\\nhelper_qaddsubx \\\nhelper_uqadd16 \\\nhelper_uqadd8 \\\nhelper_uqsub16 \\\nhelper_uqsub8 \\\nhelper_uqsubaddx \\\nhelper_uqaddsubx \\\nhelper_sadd16 \\\nhelper_sadd8 \\\nhelper_ssub16 \\\nhelper_ssub8 \\\nhelper_ssubaddx \\\nhelper_saddsubx \\\nhelper_uadd16 \\\nhelper_uadd8 \\\nhelper_usub16 \\\nhelper_usub8 \\\nhelper_usubaddx \\\nhelper_uaddsubx \\\nhelper_shadd16 \\\nhelper_shadd8 \\\nhelper_shsub16 \\\nhelper_shsub8 \\\nhelper_shsubaddx \\\nhelper_shaddsubx \\\nhelper_uhadd16 \\\nhelper_uhadd8 \\\nhelper_uhsub16 \\\nhelper_uhsub8 \\\nhelper_uhsubaddx \\\nhelper_uhaddsubx \\\nhelper_usad8 \\\nhelper_sel_flags \\\nhelper_crc32 \\\nhelper_crc32c \\\nfp_exception_el \\\narm_mmu_idx_to_el \\\narm_mmu_idx_el \\\narm_mmu_idx \\\narm_stage1_mmu_idx \\\narm_rebuild_hflags \\\nhelper_rebuild_hflags_m32_newel \\\nhelper_rebuild_hflags_m32 \\\nhelper_rebuild_hflags_a32_newel \\\nhelper_rebuild_hflags_a32 \\\nhelper_rebuild_hflags_a64 \\\ncpu_get_tb_cpu_state \\\nhelper_iwmmxt_maddsq \\\nhelper_iwmmxt_madduq \\\nhelper_iwmmxt_sadb \\\nhelper_iwmmxt_sadw \\\nhelper_iwmmxt_mulslw \\\nhelper_iwmmxt_mulshw \\\nhelper_iwmmxt_mululw \\\nhelper_iwmmxt_muluhw \\\nhelper_iwmmxt_macsw \\\nhelper_iwmmxt_macuw \\\nhelper_iwmmxt_unpacklb \\\nhelper_iwmmxt_unpacklw \\\nhelper_iwmmxt_unpackll \\\nhelper_iwmmxt_unpacklub \\\nhelper_iwmmxt_unpackluw \\\nhelper_iwmmxt_unpacklul \\\nhelper_iwmmxt_unpacklsb \\\nhelper_iwmmxt_unpacklsw \\\nhelper_iwmmxt_unpacklsl \\\nhelper_iwmmxt_unpackhb \\\nhelper_iwmmxt_unpackhw \\\nhelper_iwmmxt_unpackhl \\\nhelper_iwmmxt_unpackhub \\\nhelper_iwmmxt_unpackhuw \\\nhelper_iwmmxt_unpackhul \\\nhelper_iwmmxt_unpackhsb \\\nhelper_iwmmxt_unpackhsw \\\nhelper_iwmmxt_unpackhsl \\\nhelper_iwmmxt_cmpeqb \\\nhelper_iwmmxt_cmpeqw \\\nhelper_iwmmxt_cmpeql \\\nhelper_iwmmxt_cmpgtsb \\\nhelper_iwmmxt_cmpgtsw \\\nhelper_iwmmxt_cmpgtsl \\\nhelper_iwmmxt_cmpgtub \\\nhelper_iwmmxt_cmpgtuw \\\nhelper_iwmmxt_cmpgtul \\\nhelper_iwmmxt_minsb \\\nhelper_iwmmxt_minsw \\\nhelper_iwmmxt_minsl \\\nhelper_iwmmxt_minub \\\nhelper_iwmmxt_minuw \\\nhelper_iwmmxt_minul \\\nhelper_iwmmxt_maxsb \\\nhelper_iwmmxt_maxsw \\\nhelper_iwmmxt_maxsl \\\nhelper_iwmmxt_maxub \\\nhelper_iwmmxt_maxuw \\\nhelper_iwmmxt_maxul \\\nhelper_iwmmxt_subnb \\\nhelper_iwmmxt_subnw \\\nhelper_iwmmxt_subnl \\\nhelper_iwmmxt_addnb \\\nhelper_iwmmxt_addnw \\\nhelper_iwmmxt_addnl \\\nhelper_iwmmxt_subub \\\nhelper_iwmmxt_subuw \\\nhelper_iwmmxt_subul \\\nhelper_iwmmxt_addub \\\nhelper_iwmmxt_adduw \\\nhelper_iwmmxt_addul \\\nhelper_iwmmxt_subsb \\\nhelper_iwmmxt_subsw \\\nhelper_iwmmxt_subsl \\\nhelper_iwmmxt_addsb \\\nhelper_iwmmxt_addsw \\\nhelper_iwmmxt_addsl \\\nhelper_iwmmxt_avgb0 \\\nhelper_iwmmxt_avgb1 \\\nhelper_iwmmxt_avgw0 \\\nhelper_iwmmxt_avgw1 \\\nhelper_iwmmxt_align \\\nhelper_iwmmxt_insr \\\nhelper_iwmmxt_setpsr_nz \\\nhelper_iwmmxt_bcstb \\\nhelper_iwmmxt_bcstw \\\nhelper_iwmmxt_bcstl \\\nhelper_iwmmxt_addcb \\\nhelper_iwmmxt_addcw \\\nhelper_iwmmxt_addcl \\\nhelper_iwmmxt_msbb \\\nhelper_iwmmxt_msbw \\\nhelper_iwmmxt_msbl \\\nhelper_iwmmxt_srlw \\\nhelper_iwmmxt_srll \\\nhelper_iwmmxt_srlq \\\nhelper_iwmmxt_sllw \\\nhelper_iwmmxt_slll \\\nhelper_iwmmxt_sllq \\\nhelper_iwmmxt_sraw \\\nhelper_iwmmxt_sral \\\nhelper_iwmmxt_sraq \\\nhelper_iwmmxt_rorw \\\nhelper_iwmmxt_rorl \\\nhelper_iwmmxt_rorq \\\nhelper_iwmmxt_shufh \\\nhelper_iwmmxt_packuw \\\nhelper_iwmmxt_packul \\\nhelper_iwmmxt_packuq \\\nhelper_iwmmxt_packsw \\\nhelper_iwmmxt_packsl \\\nhelper_iwmmxt_packsq \\\nhelper_iwmmxt_muladdsl \\\nhelper_iwmmxt_muladdsw \\\nhelper_iwmmxt_muladdswl \\\narmv7m_nvic_set_pending \\\nhelper_v7m_preserve_fp_state \\\nwrite_v7m_exception \\\nhelper_v7m_bxns \\\nhelper_v7m_blxns \\\narmv7m_nvic_neg_prio_requested \\\nhelper_v7m_vlstm \\\nhelper_v7m_vlldm \\\narm_v7m_cpu_do_interrupt \\\nhelper_v7m_mrs \\\nhelper_v7m_msr \\\nhelper_v7m_tt \\\narm_v7m_mmu_idx_all \\\narm_v7m_mmu_idx_for_secstate_and_priv \\\narm_v7m_mmu_idx_for_secstate \\\nhelper_neon_qadd_u8 \\\nhelper_neon_qadd_u16 \\\nhelper_neon_qadd_u32 \\\nhelper_neon_qadd_u64 \\\nhelper_neon_qadd_s8 \\\nhelper_neon_qadd_s16 \\\nhelper_neon_qadd_s32 \\\nhelper_neon_qadd_s64 \\\nhelper_neon_uqadd_s8 \\\nhelper_neon_uqadd_s16 \\\nhelper_neon_uqadd_s32 \\\nhelper_neon_uqadd_s64 \\\nhelper_neon_sqadd_u8 \\\nhelper_neon_sqadd_u16 \\\nhelper_neon_sqadd_u32 \\\nhelper_neon_sqadd_u64 \\\nhelper_neon_qsub_u8 \\\nhelper_neon_qsub_u16 \\\nhelper_neon_qsub_u32 \\\nhelper_neon_qsub_u64 \\\nhelper_neon_qsub_s8 \\\nhelper_neon_qsub_s16 \\\nhelper_neon_qsub_s32 \\\nhelper_neon_qsub_s64 \\\nhelper_neon_hadd_s8 \\\nhelper_neon_hadd_u8 \\\nhelper_neon_hadd_s16 \\\nhelper_neon_hadd_u16 \\\nhelper_neon_hadd_s32 \\\nhelper_neon_hadd_u32 \\\nhelper_neon_rhadd_s8 \\\nhelper_neon_rhadd_u8 \\\nhelper_neon_rhadd_s16 \\\nhelper_neon_rhadd_u16 \\\nhelper_neon_rhadd_s32 \\\nhelper_neon_rhadd_u32 \\\nhelper_neon_hsub_s8 \\\nhelper_neon_hsub_u8 \\\nhelper_neon_hsub_s16 \\\nhelper_neon_hsub_u16 \\\nhelper_neon_hsub_s32 \\\nhelper_neon_hsub_u32 \\\nhelper_neon_cgt_s8 \\\nhelper_neon_cgt_u8 \\\nhelper_neon_cgt_s16 \\\nhelper_neon_cgt_u16 \\\nhelper_neon_cgt_s32 \\\nhelper_neon_cgt_u32 \\\nhelper_neon_cge_s8 \\\nhelper_neon_cge_u8 \\\nhelper_neon_cge_s16 \\\nhelper_neon_cge_u16 \\\nhelper_neon_cge_s32 \\\nhelper_neon_cge_u32 \\\nhelper_neon_pmin_s8 \\\nhelper_neon_pmin_u8 \\\nhelper_neon_pmin_s16 \\\nhelper_neon_pmin_u16 \\\nhelper_neon_pmax_s8 \\\nhelper_neon_pmax_u8 \\\nhelper_neon_pmax_s16 \\\nhelper_neon_pmax_u16 \\\nhelper_neon_abd_s8 \\\nhelper_neon_abd_u8 \\\nhelper_neon_abd_s16 \\\nhelper_neon_abd_u16 \\\nhelper_neon_abd_s32 \\\nhelper_neon_abd_u32 \\\nhelper_neon_shl_u16 \\\nhelper_neon_shl_s16 \\\nhelper_neon_rshl_s8 \\\nhelper_neon_rshl_s16 \\\nhelper_neon_rshl_s32 \\\nhelper_neon_rshl_s64 \\\nhelper_neon_rshl_u8 \\\nhelper_neon_rshl_u16 \\\nhelper_neon_rshl_u32 \\\nhelper_neon_rshl_u64 \\\nhelper_neon_qshl_u8 \\\nhelper_neon_qshl_u16 \\\nhelper_neon_qshl_u32 \\\nhelper_neon_qshl_u64 \\\nhelper_neon_qshl_s8 \\\nhelper_neon_qshl_s16 \\\nhelper_neon_qshl_s32 \\\nhelper_neon_qshl_s64 \\\nhelper_neon_qshlu_s8 \\\nhelper_neon_qshlu_s16 \\\nhelper_neon_qshlu_s32 \\\nhelper_neon_qshlu_s64 \\\nhelper_neon_qrshl_u8 \\\nhelper_neon_qrshl_u16 \\\nhelper_neon_qrshl_u32 \\\nhelper_neon_qrshl_u64 \\\nhelper_neon_qrshl_s8 \\\nhelper_neon_qrshl_s16 \\\nhelper_neon_qrshl_s32 \\\nhelper_neon_qrshl_s64 \\\nhelper_neon_add_u8 \\\nhelper_neon_add_u16 \\\nhelper_neon_padd_u8 \\\nhelper_neon_padd_u16 \\\nhelper_neon_sub_u8 \\\nhelper_neon_sub_u16 \\\nhelper_neon_mul_u8 \\\nhelper_neon_mul_u16 \\\nhelper_neon_tst_u8 \\\nhelper_neon_tst_u16 \\\nhelper_neon_tst_u32 \\\nhelper_neon_ceq_u8 \\\nhelper_neon_ceq_u16 \\\nhelper_neon_ceq_u32 \\\nhelper_neon_clz_u8 \\\nhelper_neon_clz_u16 \\\nhelper_neon_cls_s8 \\\nhelper_neon_cls_s16 \\\nhelper_neon_cls_s32 \\\nhelper_neon_cnt_u8 \\\nhelper_neon_rbit_u8 \\\nhelper_neon_qdmulh_s16 \\\nhelper_neon_qrdmulh_s16 \\\nhelper_neon_qdmulh_s32 \\\nhelper_neon_qrdmulh_s32 \\\nhelper_neon_narrow_u8 \\\nhelper_neon_narrow_u16 \\\nhelper_neon_narrow_high_u8 \\\nhelper_neon_narrow_high_u16 \\\nhelper_neon_narrow_round_high_u8 \\\nhelper_neon_narrow_round_high_u16 \\\nhelper_neon_unarrow_sat8 \\\nhelper_neon_narrow_sat_u8 \\\nhelper_neon_narrow_sat_s8 \\\nhelper_neon_unarrow_sat16 \\\nhelper_neon_narrow_sat_u16 \\\nhelper_neon_narrow_sat_s16 \\\nhelper_neon_unarrow_sat32 \\\nhelper_neon_narrow_sat_u32 \\\nhelper_neon_narrow_sat_s32 \\\nhelper_neon_widen_u8 \\\nhelper_neon_widen_s8 \\\nhelper_neon_widen_u16 \\\nhelper_neon_widen_s16 \\\nhelper_neon_addl_u16 \\\nhelper_neon_addl_u32 \\\nhelper_neon_paddl_u16 \\\nhelper_neon_paddl_u32 \\\nhelper_neon_subl_u16 \\\nhelper_neon_subl_u32 \\\nhelper_neon_addl_saturate_s32 \\\nhelper_neon_addl_saturate_s64 \\\nhelper_neon_abdl_u16 \\\nhelper_neon_abdl_s16 \\\nhelper_neon_abdl_u32 \\\nhelper_neon_abdl_s32 \\\nhelper_neon_abdl_u64 \\\nhelper_neon_abdl_s64 \\\nhelper_neon_mull_u8 \\\nhelper_neon_mull_s8 \\\nhelper_neon_mull_u16 \\\nhelper_neon_mull_s16 \\\nhelper_neon_negl_u16 \\\nhelper_neon_negl_u32 \\\nhelper_neon_qabs_s8 \\\nhelper_neon_qneg_s8 \\\nhelper_neon_qabs_s16 \\\nhelper_neon_qneg_s16 \\\nhelper_neon_qabs_s32 \\\nhelper_neon_qneg_s32 \\\nhelper_neon_qabs_s64 \\\nhelper_neon_qneg_s64 \\\nhelper_neon_abd_f32 \\\nhelper_neon_ceq_f32 \\\nhelper_neon_cge_f32 \\\nhelper_neon_cgt_f32 \\\nhelper_neon_acge_f32 \\\nhelper_neon_acgt_f32 \\\nhelper_neon_acge_f64 \\\nhelper_neon_acgt_f64 \\\nhelper_neon_qunzip8 \\\nhelper_neon_qunzip16 \\\nhelper_neon_qunzip32 \\\nhelper_neon_unzip8 \\\nhelper_neon_unzip16 \\\nhelper_neon_qzip8 \\\nhelper_neon_qzip16 \\\nhelper_neon_qzip32 \\\nhelper_neon_zip8 \\\nhelper_neon_zip16 \\\nraise_exception \\\nraise_exception_ra \\\nhelper_neon_tbl \\\nhelper_v8m_stackcheck \\\nhelper_add_setq \\\nhelper_add_saturate \\\nhelper_sub_saturate \\\nhelper_add_usaturate \\\nhelper_sub_usaturate \\\nhelper_ssat \\\nhelper_ssat16 \\\nhelper_usat \\\nhelper_usat16 \\\nhelper_setend \\\nhelper_wfi \\\nhelper_wfe \\\nhelper_yield \\\nhelper_exception_internal \\\nhelper_exception_with_syndrome \\\nhelper_exception_bkpt_insn \\\nhelper_cpsr_read \\\nhelper_cpsr_write \\\nhelper_cpsr_write_eret \\\nhelper_get_user_reg \\\nhelper_set_user_reg \\\nhelper_set_r13_banked \\\nhelper_get_r13_banked \\\nhelper_msr_banked \\\nhelper_mrs_banked \\\nhelper_access_check_cp_reg \\\nhelper_set_cp_reg \\\nhelper_get_cp_reg \\\nhelper_set_cp_reg64 \\\nhelper_get_cp_reg64 \\\nhelper_pre_hvc \\\nhelper_pre_smc \\\nhelper_shl_cc \\\nhelper_shr_cc \\\nhelper_sar_cc \\\nhelper_ror_cc \\\narm_is_psci_call \\\narm_handle_psci_call \\\narm_cpu_do_unaligned_access \\\narm_cpu_do_transaction_failed \\\narm_cpu_tlb_fill \\\narm_translate_init \\\narm_test_cc \\\narm_free_cc \\\narm_jump_cc \\\narm_gen_test_cc \\\nvfp_expand_imm \\\ngen_cmtst_i64 \\\ngen_ushl_i32 \\\ngen_ushl_i64 \\\ngen_sshl_i32 \\\ngen_sshl_i64 \\\ngen_intermediate_code \\\nrestore_state_to_opc \\\nhelper_neon_qrdmlah_s16 \\\nhelper_gvec_qrdmlah_s16 \\\nhelper_neon_qrdmlsh_s16 \\\nhelper_gvec_qrdmlsh_s16 \\\nhelper_neon_qrdmlah_s32 \\\nhelper_gvec_qrdmlah_s32 \\\nhelper_neon_qrdmlsh_s32 \\\nhelper_gvec_qrdmlsh_s32 \\\nhelper_gvec_sdot_b \\\nhelper_gvec_udot_b \\\nhelper_gvec_sdot_h \\\nhelper_gvec_udot_h \\\nhelper_gvec_sdot_idx_b \\\nhelper_gvec_udot_idx_b \\\nhelper_gvec_sdot_idx_h \\\nhelper_gvec_udot_idx_h \\\nhelper_gvec_fcaddh \\\nhelper_gvec_fcadds \\\nhelper_gvec_fcaddd \\\nhelper_gvec_fcmlah \\\nhelper_gvec_fcmlah_idx \\\nhelper_gvec_fcmlas \\\nhelper_gvec_fcmlas_idx \\\nhelper_gvec_fcmlad \\\nhelper_gvec_frecpe_h \\\nhelper_gvec_frecpe_s \\\nhelper_gvec_frecpe_d \\\nhelper_gvec_frsqrte_h \\\nhelper_gvec_frsqrte_s \\\nhelper_gvec_frsqrte_d \\\nhelper_gvec_fadd_h \\\nhelper_gvec_fadd_s \\\nhelper_gvec_fadd_d \\\nhelper_gvec_fsub_h \\\nhelper_gvec_fsub_s \\\nhelper_gvec_fsub_d \\\nhelper_gvec_fmul_h \\\nhelper_gvec_fmul_s \\\nhelper_gvec_fmul_d \\\nhelper_gvec_ftsmul_h \\\nhelper_gvec_ftsmul_s \\\nhelper_gvec_ftsmul_d \\\nhelper_gvec_fmul_idx_h \\\nhelper_gvec_fmul_idx_s \\\nhelper_gvec_fmul_idx_d \\\nhelper_gvec_fmla_idx_h \\\nhelper_gvec_fmla_idx_s \\\nhelper_gvec_fmla_idx_d \\\nhelper_gvec_uqadd_b \\\nhelper_gvec_uqadd_h \\\nhelper_gvec_uqadd_s \\\nhelper_gvec_sqadd_b \\\nhelper_gvec_sqadd_h \\\nhelper_gvec_sqadd_s \\\nhelper_gvec_uqsub_b \\\nhelper_gvec_uqsub_h \\\nhelper_gvec_uqsub_s \\\nhelper_gvec_sqsub_b \\\nhelper_gvec_sqsub_h \\\nhelper_gvec_sqsub_s \\\nhelper_gvec_uqadd_d \\\nhelper_gvec_uqsub_d \\\nhelper_gvec_sqadd_d \\\nhelper_gvec_sqsub_d \\\nhelper_gvec_fmlal_a32 \\\nhelper_gvec_fmlal_a64 \\\nhelper_gvec_fmlal_idx_a32 \\\nhelper_gvec_fmlal_idx_a64 \\\nhelper_gvec_sshl_b \\\nhelper_gvec_sshl_h \\\nhelper_gvec_ushl_b \\\nhelper_gvec_ushl_h \\\nhelper_gvec_pmul_b \\\nhelper_gvec_pmull_q \\\nhelper_neon_pmull_h \\\nhelper_vfp_get_fpscr \\\nvfp_get_fpscr \\\nhelper_vfp_set_fpscr \\\nvfp_set_fpscr \\\nhelper_vfp_adds \\\nhelper_vfp_addd \\\nhelper_vfp_subs \\\nhelper_vfp_subd \\\nhelper_vfp_muls \\\nhelper_vfp_muld \\\nhelper_vfp_divs \\\nhelper_vfp_divd \\\nhelper_vfp_mins \\\nhelper_vfp_mind \\\nhelper_vfp_maxs \\\nhelper_vfp_maxd \\\nhelper_vfp_minnums \\\nhelper_vfp_minnumd \\\nhelper_vfp_maxnums \\\nhelper_vfp_maxnumd \\\nhelper_vfp_negs \\\nhelper_vfp_negd \\\nhelper_vfp_abss \\\nhelper_vfp_absd \\\nhelper_vfp_sqrts \\\nhelper_vfp_sqrtd \\\nhelper_vfp_cmps \\\nhelper_vfp_cmpes \\\nhelper_vfp_cmpd \\\nhelper_vfp_cmped \\\nhelper_vfp_sitoh \\\nhelper_vfp_tosih \\\nhelper_vfp_tosizh \\\nhelper_vfp_sitos \\\nhelper_vfp_tosis \\\nhelper_vfp_tosizs \\\nhelper_vfp_sitod \\\nhelper_vfp_tosid \\\nhelper_vfp_tosizd \\\nhelper_vfp_uitoh \\\nhelper_vfp_touih \\\nhelper_vfp_touizh \\\nhelper_vfp_uitos \\\nhelper_vfp_touis \\\nhelper_vfp_touizs \\\nhelper_vfp_uitod \\\nhelper_vfp_touid \\\nhelper_vfp_touizd \\\nhelper_vfp_fcvtds \\\nhelper_vfp_fcvtsd \\\nhelper_vfp_shtod \\\nhelper_vfp_toshd_round_to_zero \\\nhelper_vfp_toshd \\\nhelper_vfp_sltod \\\nhelper_vfp_tosld_round_to_zero \\\nhelper_vfp_tosld \\\nhelper_vfp_sqtod \\\nhelper_vfp_tosqd \\\nhelper_vfp_uhtod \\\nhelper_vfp_touhd_round_to_zero \\\nhelper_vfp_touhd \\\nhelper_vfp_ultod \\\nhelper_vfp_tould_round_to_zero \\\nhelper_vfp_tould \\\nhelper_vfp_uqtod \\\nhelper_vfp_touqd \\\nhelper_vfp_shtos \\\nhelper_vfp_toshs_round_to_zero \\\nhelper_vfp_toshs \\\nhelper_vfp_sltos \\\nhelper_vfp_tosls_round_to_zero \\\nhelper_vfp_tosls \\\nhelper_vfp_sqtos \\\nhelper_vfp_tosqs \\\nhelper_vfp_uhtos \\\nhelper_vfp_touhs_round_to_zero \\\nhelper_vfp_touhs \\\nhelper_vfp_ultos \\\nhelper_vfp_touls_round_to_zero \\\nhelper_vfp_touls \\\nhelper_vfp_uqtos \\\nhelper_vfp_touqs \\\nhelper_vfp_sltoh \\\nhelper_vfp_ultoh \\\nhelper_vfp_sqtoh \\\nhelper_vfp_uqtoh \\\nhelper_vfp_toshh \\\nhelper_vfp_touhh \\\nhelper_vfp_toslh \\\nhelper_vfp_toulh \\\nhelper_vfp_tosqh \\\nhelper_vfp_touqh \\\nhelper_set_rmode \\\nhelper_set_neon_rmode \\\nhelper_vfp_fcvt_f16_to_f32 \\\nhelper_vfp_fcvt_f32_to_f16 \\\nhelper_vfp_fcvt_f16_to_f64 \\\nhelper_vfp_fcvt_f64_to_f16 \\\nhelper_recps_f32 \\\nhelper_rsqrts_f32 \\\nhelper_recpe_f16 \\\nhelper_recpe_f32 \\\nhelper_recpe_f64 \\\nhelper_rsqrte_f16 \\\nhelper_rsqrte_f32 \\\nhelper_rsqrte_f64 \\\nhelper_recpe_u32 \\\nhelper_rsqrte_u32 \\\nhelper_vfp_muladds \\\nhelper_vfp_muladdd \\\nhelper_rints_exact \\\nhelper_rintd_exact \\\nhelper_rints \\\nhelper_rintd \\\narm_rmode_to_sf \\\nhelper_fjcvtzs \\\nhelper_vjcvt \\\nhelper_frint32_s \\\nhelper_frint64_s \\\nhelper_frint32_d \\\nhelper_frint64_d \\\nhelper_check_hcr_el2_trap \\\nmla_op \\\nmls_op \\\nsshl_op \\\nushl_op \\\nuqsub_op \\\nsqsub_op \\\nuqadd_op \\\nsqadd_op \\\nsli_op \\\ncmtst_op \\\nsri_op \\\nusra_op \\\nssra_op \\\n\"\n\naarch64_SYMBOLS=\"\ncpu_aarch64_init \\\narm_cpu_exec_interrupt \\\narm_cpu_update_virq \\\narm_cpu_update_vfiq \\\narm_cpu_initfn \\\ngt_cntfrq_period_ns \\\narm_cpu_post_init \\\narm_cpu_realizefn \\\narm_cpu_class_init \\\ncpu_arm_init \\\nhelper_crypto_aese \\\nhelper_crypto_aesmc \\\nhelper_crypto_sha1_3reg \\\nhelper_crypto_sha1h \\\nhelper_crypto_sha1su1 \\\nhelper_crypto_sha256h \\\nhelper_crypto_sha256h2 \\\nhelper_crypto_sha256su0 \\\nhelper_crypto_sha256su1 \\\nhelper_crypto_sha512h \\\nhelper_crypto_sha512h2 \\\nhelper_crypto_sha512su0 \\\nhelper_crypto_sha512su1 \\\nhelper_crypto_sm3partw1 \\\nhelper_crypto_sm3partw2 \\\nhelper_crypto_sm3tt \\\nhelper_crypto_sm4e \\\nhelper_crypto_sm4ekey \\\nhelper_check_breakpoints \\\narm_debug_check_watchpoint \\\narm_debug_excp_handler \\\narm_adjust_watchpoint_address \\\nhelper_udiv64 \\\nhelper_sdiv64 \\\nhelper_rbit64 \\\nhelper_msr_i_spsel \\\nhelper_msr_i_daifset \\\nhelper_msr_i_daifclear \\\nhelper_vfp_cmph_a64 \\\nhelper_vfp_cmpeh_a64 \\\nhelper_vfp_cmps_a64 \\\nhelper_vfp_cmpes_a64 \\\nhelper_vfp_cmpd_a64 \\\nhelper_vfp_cmped_a64 \\\nhelper_vfp_mulxs \\\nhelper_vfp_mulxd \\\nhelper_simd_tbl \\\nhelper_neon_ceq_f64 \\\nhelper_neon_cge_f64 \\\nhelper_neon_cgt_f64 \\\nhelper_recpsf_f16 \\\nhelper_recpsf_f32 \\\nhelper_recpsf_f64 \\\nhelper_rsqrtsf_f16 \\\nhelper_rsqrtsf_f32 \\\nhelper_rsqrtsf_f64 \\\nhelper_neon_addlp_s8 \\\nhelper_neon_addlp_u8 \\\nhelper_neon_addlp_s16 \\\nhelper_neon_addlp_u16 \\\nhelper_frecpx_f16 \\\nhelper_frecpx_f32 \\\nhelper_frecpx_f64 \\\nhelper_fcvtx_f64_to_f32 \\\nhelper_crc32_64 \\\nhelper_crc32c_64 \\\nhelper_paired_cmpxchg64_le \\\nhelper_paired_cmpxchg64_le_parallel \\\nhelper_paired_cmpxchg64_be \\\nhelper_paired_cmpxchg64_be_parallel \\\nhelper_casp_le_parallel \\\nhelper_casp_be_parallel \\\nhelper_advsimd_addh \\\nhelper_advsimd_subh \\\nhelper_advsimd_mulh \\\nhelper_advsimd_divh \\\nhelper_advsimd_minh \\\nhelper_advsimd_maxh \\\nhelper_advsimd_minnumh \\\nhelper_advsimd_maxnumh \\\nhelper_advsimd_add2h \\\nhelper_advsimd_sub2h \\\nhelper_advsimd_mul2h \\\nhelper_advsimd_div2h \\\nhelper_advsimd_min2h \\\nhelper_advsimd_max2h \\\nhelper_advsimd_minnum2h \\\nhelper_advsimd_maxnum2h \\\nhelper_advsimd_mulxh \\\nhelper_advsimd_mulx2h \\\nhelper_advsimd_muladdh \\\nhelper_advsimd_muladd2h \\\nhelper_advsimd_ceq_f16 \\\nhelper_advsimd_cge_f16 \\\nhelper_advsimd_cgt_f16 \\\nhelper_advsimd_acge_f16 \\\nhelper_advsimd_acgt_f16 \\\nhelper_advsimd_rinth_exact \\\nhelper_advsimd_rinth \\\nhelper_advsimd_f16tosinth \\\nhelper_advsimd_f16touinth \\\nhelper_exception_return \\\nhelper_sqrt_f16 \\\nhelper_dc_zva \\\nread_raw_cp_reg \\\npmu_init \\\npmu_op_start \\\npmu_op_finish \\\npmu_pre_el_change \\\npmu_post_el_change \\\narm_pmu_timer_cb \\\narm_gt_ptimer_cb \\\narm_gt_vtimer_cb \\\narm_gt_htimer_cb \\\narm_gt_stimer_cb \\\narm_gt_hvtimer_cb \\\narm_hcr_el2_eff \\\nsve_exception_el \\\nsve_zcr_len_for_el \\\nhw_watchpoint_update \\\nhw_watchpoint_update_all \\\nhw_breakpoint_update \\\nhw_breakpoint_update_all \\\nregister_cp_regs_for_features \\\ndefine_one_arm_cp_reg_with_opaque \\\ndefine_arm_cp_regs_with_opaque \\\nmodify_arm_cp_regs \\\nget_arm_cp_reginfo \\\narm_cp_write_ignore \\\narm_cp_read_zero \\\narm_cp_reset_ignore \\\ncpsr_read \\\ncpsr_write \\\nhelper_sxtb16 \\\nhelper_uxtb16 \\\nhelper_sdiv \\\nhelper_udiv \\\nhelper_rbit \\\narm_phys_excp_target_el \\\naarch64_sync_32_to_64 \\\naarch64_sync_64_to_32 \\\narm_cpu_do_interrupt \\\narm_sctlr \\\narm_s1_regime_using_lpae_format \\\naa64_va_parameters \\\nv8m_security_lookup \\\npmsav8_mpu_lookup \\\nget_phys_addr \\\narm_cpu_get_phys_page_attrs_debug \\\nhelper_qadd16 \\\nhelper_qadd8 \\\nhelper_qsub16 \\\nhelper_qsub8 \\\nhelper_qsubaddx \\\nhelper_qaddsubx \\\nhelper_uqadd16 \\\nhelper_uqadd8 \\\nhelper_uqsub16 \\\nhelper_uqsub8 \\\nhelper_uqsubaddx \\\nhelper_uqaddsubx \\\nhelper_sadd16 \\\nhelper_sadd8 \\\nhelper_ssub16 \\\nhelper_ssub8 \\\nhelper_ssubaddx \\\nhelper_saddsubx \\\nhelper_uadd16 \\\nhelper_uadd8 \\\nhelper_usub16 \\\nhelper_usub8 \\\nhelper_usubaddx \\\nhelper_uaddsubx \\\nhelper_shadd16 \\\nhelper_shadd8 \\\nhelper_shsub16 \\\nhelper_shsub8 \\\nhelper_shsubaddx \\\nhelper_shaddsubx \\\nhelper_uhadd16 \\\nhelper_uhadd8 \\\nhelper_uhsub16 \\\nhelper_uhsub8 \\\nhelper_uhsubaddx \\\nhelper_uhaddsubx \\\nhelper_usad8 \\\nhelper_sel_flags \\\nhelper_crc32 \\\nhelper_crc32c \\\nfp_exception_el \\\narm_mmu_idx_to_el \\\narm_mmu_idx_el \\\narm_mmu_idx \\\narm_stage1_mmu_idx \\\narm_rebuild_hflags \\\nhelper_rebuild_hflags_m32_newel \\\nhelper_rebuild_hflags_m32 \\\nhelper_rebuild_hflags_a32_newel \\\nhelper_rebuild_hflags_a32 \\\nhelper_rebuild_hflags_a64 \\\ncpu_get_tb_cpu_state \\\naarch64_sve_narrow_vq \\\naarch64_sve_change_el \\\nhelper_iwmmxt_maddsq \\\nhelper_iwmmxt_madduq \\\nhelper_iwmmxt_sadb \\\nhelper_iwmmxt_sadw \\\nhelper_iwmmxt_mulslw \\\nhelper_iwmmxt_mulshw \\\nhelper_iwmmxt_mululw \\\nhelper_iwmmxt_muluhw \\\nhelper_iwmmxt_macsw \\\nhelper_iwmmxt_macuw \\\nhelper_iwmmxt_unpacklb \\\nhelper_iwmmxt_unpacklw \\\nhelper_iwmmxt_unpackll \\\nhelper_iwmmxt_unpacklub \\\nhelper_iwmmxt_unpackluw \\\nhelper_iwmmxt_unpacklul \\\nhelper_iwmmxt_unpacklsb \\\nhelper_iwmmxt_unpacklsw \\\nhelper_iwmmxt_unpacklsl \\\nhelper_iwmmxt_unpackhb \\\nhelper_iwmmxt_unpackhw \\\nhelper_iwmmxt_unpackhl \\\nhelper_iwmmxt_unpackhub \\\nhelper_iwmmxt_unpackhuw \\\nhelper_iwmmxt_unpackhul \\\nhelper_iwmmxt_unpackhsb \\\nhelper_iwmmxt_unpackhsw \\\nhelper_iwmmxt_unpackhsl \\\nhelper_iwmmxt_cmpeqb \\\nhelper_iwmmxt_cmpeqw \\\nhelper_iwmmxt_cmpeql \\\nhelper_iwmmxt_cmpgtsb \\\nhelper_iwmmxt_cmpgtsw \\\nhelper_iwmmxt_cmpgtsl \\\nhelper_iwmmxt_cmpgtub \\\nhelper_iwmmxt_cmpgtuw \\\nhelper_iwmmxt_cmpgtul \\\nhelper_iwmmxt_minsb \\\nhelper_iwmmxt_minsw \\\nhelper_iwmmxt_minsl \\\nhelper_iwmmxt_minub \\\nhelper_iwmmxt_minuw \\\nhelper_iwmmxt_minul \\\nhelper_iwmmxt_maxsb \\\nhelper_iwmmxt_maxsw \\\nhelper_iwmmxt_maxsl \\\nhelper_iwmmxt_maxub \\\nhelper_iwmmxt_maxuw \\\nhelper_iwmmxt_maxul \\\nhelper_iwmmxt_subnb \\\nhelper_iwmmxt_subnw \\\nhelper_iwmmxt_subnl \\\nhelper_iwmmxt_addnb \\\nhelper_iwmmxt_addnw \\\nhelper_iwmmxt_addnl \\\nhelper_iwmmxt_subub \\\nhelper_iwmmxt_subuw \\\nhelper_iwmmxt_subul \\\nhelper_iwmmxt_addub \\\nhelper_iwmmxt_adduw \\\nhelper_iwmmxt_addul \\\nhelper_iwmmxt_subsb \\\nhelper_iwmmxt_subsw \\\nhelper_iwmmxt_subsl \\\nhelper_iwmmxt_addsb \\\nhelper_iwmmxt_addsw \\\nhelper_iwmmxt_addsl \\\nhelper_iwmmxt_avgb0 \\\nhelper_iwmmxt_avgb1 \\\nhelper_iwmmxt_avgw0 \\\nhelper_iwmmxt_avgw1 \\\nhelper_iwmmxt_align \\\nhelper_iwmmxt_insr \\\nhelper_iwmmxt_setpsr_nz \\\nhelper_iwmmxt_bcstb \\\nhelper_iwmmxt_bcstw \\\nhelper_iwmmxt_bcstl \\\nhelper_iwmmxt_addcb \\\nhelper_iwmmxt_addcw \\\nhelper_iwmmxt_addcl \\\nhelper_iwmmxt_msbb \\\nhelper_iwmmxt_msbw \\\nhelper_iwmmxt_msbl \\\nhelper_iwmmxt_srlw \\\nhelper_iwmmxt_srll \\\nhelper_iwmmxt_srlq \\\nhelper_iwmmxt_sllw \\\nhelper_iwmmxt_slll \\\nhelper_iwmmxt_sllq \\\nhelper_iwmmxt_sraw \\\nhelper_iwmmxt_sral \\\nhelper_iwmmxt_sraq \\\nhelper_iwmmxt_rorw \\\nhelper_iwmmxt_rorl \\\nhelper_iwmmxt_rorq \\\nhelper_iwmmxt_shufh \\\nhelper_iwmmxt_packuw \\\nhelper_iwmmxt_packul \\\nhelper_iwmmxt_packuq \\\nhelper_iwmmxt_packsw \\\nhelper_iwmmxt_packsl \\\nhelper_iwmmxt_packsq \\\nhelper_iwmmxt_muladdsl \\\nhelper_iwmmxt_muladdsw \\\nhelper_iwmmxt_muladdswl \\\narmv7m_nvic_set_pending \\\nhelper_v7m_preserve_fp_state \\\nwrite_v7m_exception \\\nhelper_v7m_bxns \\\nhelper_v7m_blxns \\\narmv7m_nvic_neg_prio_requested \\\nhelper_v7m_vlstm \\\nhelper_v7m_vlldm \\\narm_v7m_cpu_do_interrupt \\\nhelper_v7m_mrs \\\nhelper_v7m_msr \\\nhelper_v7m_tt \\\narm_v7m_mmu_idx_all \\\narm_v7m_mmu_idx_for_secstate_and_priv \\\narm_v7m_mmu_idx_for_secstate \\\nhelper_neon_qadd_u8 \\\nhelper_neon_qadd_u16 \\\nhelper_neon_qadd_u32 \\\nhelper_neon_qadd_u64 \\\nhelper_neon_qadd_s8 \\\nhelper_neon_qadd_s16 \\\nhelper_neon_qadd_s32 \\\nhelper_neon_qadd_s64 \\\nhelper_neon_uqadd_s8 \\\nhelper_neon_uqadd_s16 \\\nhelper_neon_uqadd_s32 \\\nhelper_neon_uqadd_s64 \\\nhelper_neon_sqadd_u8 \\\nhelper_neon_sqadd_u16 \\\nhelper_neon_sqadd_u32 \\\nhelper_neon_sqadd_u64 \\\nhelper_neon_qsub_u8 \\\nhelper_neon_qsub_u16 \\\nhelper_neon_qsub_u32 \\\nhelper_neon_qsub_u64 \\\nhelper_neon_qsub_s8 \\\nhelper_neon_qsub_s16 \\\nhelper_neon_qsub_s32 \\\nhelper_neon_qsub_s64 \\\nhelper_neon_hadd_s8 \\\nhelper_neon_hadd_u8 \\\nhelper_neon_hadd_s16 \\\nhelper_neon_hadd_u16 \\\nhelper_neon_hadd_s32 \\\nhelper_neon_hadd_u32 \\\nhelper_neon_rhadd_s8 \\\nhelper_neon_rhadd_u8 \\\nhelper_neon_rhadd_s16 \\\nhelper_neon_rhadd_u16 \\\nhelper_neon_rhadd_s32 \\\nhelper_neon_rhadd_u32 \\\nhelper_neon_hsub_s8 \\\nhelper_neon_hsub_u8 \\\nhelper_neon_hsub_s16 \\\nhelper_neon_hsub_u16 \\\nhelper_neon_hsub_s32 \\\nhelper_neon_hsub_u32 \\\nhelper_neon_cgt_s8 \\\nhelper_neon_cgt_u8 \\\nhelper_neon_cgt_s16 \\\nhelper_neon_cgt_u16 \\\nhelper_neon_cgt_s32 \\\nhelper_neon_cgt_u32 \\\nhelper_neon_cge_s8 \\\nhelper_neon_cge_u8 \\\nhelper_neon_cge_s16 \\\nhelper_neon_cge_u16 \\\nhelper_neon_cge_s32 \\\nhelper_neon_cge_u32 \\\nhelper_neon_pmin_s8 \\\nhelper_neon_pmin_u8 \\\nhelper_neon_pmin_s16 \\\nhelper_neon_pmin_u16 \\\nhelper_neon_pmax_s8 \\\nhelper_neon_pmax_u8 \\\nhelper_neon_pmax_s16 \\\nhelper_neon_pmax_u16 \\\nhelper_neon_abd_s8 \\\nhelper_neon_abd_u8 \\\nhelper_neon_abd_s16 \\\nhelper_neon_abd_u16 \\\nhelper_neon_abd_s32 \\\nhelper_neon_abd_u32 \\\nhelper_neon_shl_u16 \\\nhelper_neon_shl_s16 \\\nhelper_neon_rshl_s8 \\\nhelper_neon_rshl_s16 \\\nhelper_neon_rshl_s32 \\\nhelper_neon_rshl_s64 \\\nhelper_neon_rshl_u8 \\\nhelper_neon_rshl_u16 \\\nhelper_neon_rshl_u32 \\\nhelper_neon_rshl_u64 \\\nhelper_neon_qshl_u8 \\\nhelper_neon_qshl_u16 \\\nhelper_neon_qshl_u32 \\\nhelper_neon_qshl_u64 \\\nhelper_neon_qshl_s8 \\\nhelper_neon_qshl_s16 \\\nhelper_neon_qshl_s32 \\\nhelper_neon_qshl_s64 \\\nhelper_neon_qshlu_s8 \\\nhelper_neon_qshlu_s16 \\\nhelper_neon_qshlu_s32 \\\nhelper_neon_qshlu_s64 \\\nhelper_neon_qrshl_u8 \\\nhelper_neon_qrshl_u16 \\\nhelper_neon_qrshl_u32 \\\nhelper_neon_qrshl_u64 \\\nhelper_neon_qrshl_s8 \\\nhelper_neon_qrshl_s16 \\\nhelper_neon_qrshl_s32 \\\nhelper_neon_qrshl_s64 \\\nhelper_neon_add_u8 \\\nhelper_neon_add_u16 \\\nhelper_neon_padd_u8 \\\nhelper_neon_padd_u16 \\\nhelper_neon_sub_u8 \\\nhelper_neon_sub_u16 \\\nhelper_neon_mul_u8 \\\nhelper_neon_mul_u16 \\\nhelper_neon_tst_u8 \\\nhelper_neon_tst_u16 \\\nhelper_neon_tst_u32 \\\nhelper_neon_ceq_u8 \\\nhelper_neon_ceq_u16 \\\nhelper_neon_ceq_u32 \\\nhelper_neon_clz_u8 \\\nhelper_neon_clz_u16 \\\nhelper_neon_cls_s8 \\\nhelper_neon_cls_s16 \\\nhelper_neon_cls_s32 \\\nhelper_neon_cnt_u8 \\\nhelper_neon_rbit_u8 \\\nhelper_neon_qdmulh_s16 \\\nhelper_neon_qrdmulh_s16 \\\nhelper_neon_qdmulh_s32 \\\nhelper_neon_qrdmulh_s32 \\\nhelper_neon_narrow_u8 \\\nhelper_neon_narrow_u16 \\\nhelper_neon_narrow_high_u8 \\\nhelper_neon_narrow_high_u16 \\\nhelper_neon_narrow_round_high_u8 \\\nhelper_neon_narrow_round_high_u16 \\\nhelper_neon_unarrow_sat8 \\\nhelper_neon_narrow_sat_u8 \\\nhelper_neon_narrow_sat_s8 \\\nhelper_neon_unarrow_sat16 \\\nhelper_neon_narrow_sat_u16 \\\nhelper_neon_narrow_sat_s16 \\\nhelper_neon_unarrow_sat32 \\\nhelper_neon_narrow_sat_u32 \\\nhelper_neon_narrow_sat_s32 \\\nhelper_neon_widen_u8 \\\nhelper_neon_widen_s8 \\\nhelper_neon_widen_u16 \\\nhelper_neon_widen_s16 \\\nhelper_neon_addl_u16 \\\nhelper_neon_addl_u32 \\\nhelper_neon_paddl_u16 \\\nhelper_neon_paddl_u32 \\\nhelper_neon_subl_u16 \\\nhelper_neon_subl_u32 \\\nhelper_neon_addl_saturate_s32 \\\nhelper_neon_addl_saturate_s64 \\\nhelper_neon_abdl_u16 \\\nhelper_neon_abdl_s16 \\\nhelper_neon_abdl_u32 \\\nhelper_neon_abdl_s32 \\\nhelper_neon_abdl_u64 \\\nhelper_neon_abdl_s64 \\\nhelper_neon_mull_u8 \\\nhelper_neon_mull_s8 \\\nhelper_neon_mull_u16 \\\nhelper_neon_mull_s16 \\\nhelper_neon_negl_u16 \\\nhelper_neon_negl_u32 \\\nhelper_neon_qabs_s8 \\\nhelper_neon_qneg_s8 \\\nhelper_neon_qabs_s16 \\\nhelper_neon_qneg_s16 \\\nhelper_neon_qabs_s32 \\\nhelper_neon_qneg_s32 \\\nhelper_neon_qabs_s64 \\\nhelper_neon_qneg_s64 \\\nhelper_neon_abd_f32 \\\nhelper_neon_ceq_f32 \\\nhelper_neon_cge_f32 \\\nhelper_neon_cgt_f32 \\\nhelper_neon_acge_f32 \\\nhelper_neon_acgt_f32 \\\nhelper_neon_acge_f64 \\\nhelper_neon_acgt_f64 \\\nhelper_neon_qunzip8 \\\nhelper_neon_qunzip16 \\\nhelper_neon_qunzip32 \\\nhelper_neon_unzip8 \\\nhelper_neon_unzip16 \\\nhelper_neon_qzip8 \\\nhelper_neon_qzip16 \\\nhelper_neon_qzip32 \\\nhelper_neon_zip8 \\\nhelper_neon_zip16 \\\nraise_exception \\\nraise_exception_ra \\\nhelper_neon_tbl \\\nhelper_v8m_stackcheck \\\nhelper_add_setq \\\nhelper_add_saturate \\\nhelper_sub_saturate \\\nhelper_add_usaturate \\\nhelper_sub_usaturate \\\nhelper_ssat \\\nhelper_ssat16 \\\nhelper_usat \\\nhelper_usat16 \\\nhelper_setend \\\nhelper_wfi \\\nhelper_wfe \\\nhelper_yield \\\nhelper_exception_internal \\\nhelper_exception_with_syndrome \\\nhelper_exception_bkpt_insn \\\nhelper_cpsr_read \\\nhelper_cpsr_write \\\nhelper_cpsr_write_eret \\\nhelper_get_user_reg \\\nhelper_set_user_reg \\\nhelper_set_r13_banked \\\nhelper_get_r13_banked \\\nhelper_msr_banked \\\nhelper_mrs_banked \\\nhelper_access_check_cp_reg \\\nhelper_set_cp_reg \\\nhelper_get_cp_reg \\\nhelper_set_cp_reg64 \\\nhelper_get_cp_reg64 \\\nhelper_pre_hvc \\\nhelper_pre_smc \\\nhelper_shl_cc \\\nhelper_shr_cc \\\nhelper_sar_cc \\\nhelper_ror_cc \\\nhelper_pacia \\\nhelper_pacib \\\nhelper_pacda \\\nhelper_pacdb \\\nhelper_pacga \\\nhelper_autia \\\nhelper_autib \\\nhelper_autda \\\nhelper_autdb \\\nhelper_xpaci \\\nhelper_xpacd \\\narm_is_psci_call \\\narm_handle_psci_call \\\nhelper_sve_predtest1 \\\nhelper_sve_predtest \\\nhelper_sve_and_pppp \\\nhelper_sve_bic_pppp \\\nhelper_sve_eor_pppp \\\nhelper_sve_sel_pppp \\\nhelper_sve_orr_pppp \\\nhelper_sve_orn_pppp \\\nhelper_sve_nor_pppp \\\nhelper_sve_nand_pppp \\\nhelper_sve_and_zpzz_b \\\nhelper_sve_and_zpzz_h \\\nhelper_sve_and_zpzz_s \\\nhelper_sve_and_zpzz_d \\\nhelper_sve_orr_zpzz_b \\\nhelper_sve_orr_zpzz_h \\\nhelper_sve_orr_zpzz_s \\\nhelper_sve_orr_zpzz_d \\\nhelper_sve_eor_zpzz_b \\\nhelper_sve_eor_zpzz_h \\\nhelper_sve_eor_zpzz_s \\\nhelper_sve_eor_zpzz_d \\\nhelper_sve_bic_zpzz_b \\\nhelper_sve_bic_zpzz_h \\\nhelper_sve_bic_zpzz_s \\\nhelper_sve_bic_zpzz_d \\\nhelper_sve_add_zpzz_b \\\nhelper_sve_add_zpzz_h \\\nhelper_sve_add_zpzz_s \\\nhelper_sve_add_zpzz_d \\\nhelper_sve_sub_zpzz_b \\\nhelper_sve_sub_zpzz_h \\\nhelper_sve_sub_zpzz_s \\\nhelper_sve_sub_zpzz_d \\\nhelper_sve_smax_zpzz_b \\\nhelper_sve_smax_zpzz_h \\\nhelper_sve_smax_zpzz_s \\\nhelper_sve_smax_zpzz_d \\\nhelper_sve_umax_zpzz_b \\\nhelper_sve_umax_zpzz_h \\\nhelper_sve_umax_zpzz_s \\\nhelper_sve_umax_zpzz_d \\\nhelper_sve_smin_zpzz_b \\\nhelper_sve_smin_zpzz_h \\\nhelper_sve_smin_zpzz_s \\\nhelper_sve_smin_zpzz_d \\\nhelper_sve_umin_zpzz_b \\\nhelper_sve_umin_zpzz_h \\\nhelper_sve_umin_zpzz_s \\\nhelper_sve_umin_zpzz_d \\\nhelper_sve_sabd_zpzz_b \\\nhelper_sve_sabd_zpzz_h \\\nhelper_sve_sabd_zpzz_s \\\nhelper_sve_sabd_zpzz_d \\\nhelper_sve_uabd_zpzz_b \\\nhelper_sve_uabd_zpzz_h \\\nhelper_sve_uabd_zpzz_s \\\nhelper_sve_uabd_zpzz_d \\\nhelper_sve_mul_zpzz_b \\\nhelper_sve_mul_zpzz_h \\\nhelper_sve_mul_zpzz_s \\\nhelper_sve_mul_zpzz_d \\\nhelper_sve_smulh_zpzz_b \\\nhelper_sve_smulh_zpzz_h \\\nhelper_sve_smulh_zpzz_s \\\nhelper_sve_smulh_zpzz_d \\\nhelper_sve_umulh_zpzz_b \\\nhelper_sve_umulh_zpzz_h \\\nhelper_sve_umulh_zpzz_s \\\nhelper_sve_umulh_zpzz_d \\\nhelper_sve_sdiv_zpzz_s \\\nhelper_sve_sdiv_zpzz_d \\\nhelper_sve_udiv_zpzz_s \\\nhelper_sve_udiv_zpzz_d \\\nhelper_sve_asr_zpzz_b \\\nhelper_sve_lsr_zpzz_b \\\nhelper_sve_lsl_zpzz_b \\\nhelper_sve_asr_zpzz_h \\\nhelper_sve_lsr_zpzz_h \\\nhelper_sve_lsl_zpzz_h \\\nhelper_sve_asr_zpzz_s \\\nhelper_sve_lsr_zpzz_s \\\nhelper_sve_lsl_zpzz_s \\\nhelper_sve_asr_zpzz_d \\\nhelper_sve_lsr_zpzz_d \\\nhelper_sve_lsl_zpzz_d \\\nhelper_sve_asr_zpzw_b \\\nhelper_sve_lsr_zpzw_b \\\nhelper_sve_lsl_zpzw_b \\\nhelper_sve_asr_zpzw_h \\\nhelper_sve_lsr_zpzw_h \\\nhelper_sve_lsl_zpzw_h \\\nhelper_sve_asr_zpzw_s \\\nhelper_sve_lsr_zpzw_s \\\nhelper_sve_lsl_zpzw_s \\\nhelper_sve_cls_b \\\nhelper_sve_cls_h \\\nhelper_sve_cls_s \\\nhelper_sve_cls_d \\\nhelper_sve_clz_b \\\nhelper_sve_clz_h \\\nhelper_sve_clz_s \\\nhelper_sve_clz_d \\\nhelper_sve_cnt_zpz_b \\\nhelper_sve_cnt_zpz_h \\\nhelper_sve_cnt_zpz_s \\\nhelper_sve_cnt_zpz_d \\\nhelper_sve_cnot_b \\\nhelper_sve_cnot_h \\\nhelper_sve_cnot_s \\\nhelper_sve_cnot_d \\\nhelper_sve_fabs_h \\\nhelper_sve_fabs_s \\\nhelper_sve_fabs_d \\\nhelper_sve_fneg_h \\\nhelper_sve_fneg_s \\\nhelper_sve_fneg_d \\\nhelper_sve_not_zpz_b \\\nhelper_sve_not_zpz_h \\\nhelper_sve_not_zpz_s \\\nhelper_sve_not_zpz_d \\\nhelper_sve_sxtb_h \\\nhelper_sve_sxtb_s \\\nhelper_sve_sxth_s \\\nhelper_sve_sxtb_d \\\nhelper_sve_sxth_d \\\nhelper_sve_sxtw_d \\\nhelper_sve_uxtb_h \\\nhelper_sve_uxtb_s \\\nhelper_sve_uxth_s \\\nhelper_sve_uxtb_d \\\nhelper_sve_uxth_d \\\nhelper_sve_uxtw_d \\\nhelper_sve_abs_b \\\nhelper_sve_abs_h \\\nhelper_sve_abs_s \\\nhelper_sve_abs_d \\\nhelper_sve_neg_b \\\nhelper_sve_neg_h \\\nhelper_sve_neg_s \\\nhelper_sve_neg_d \\\nhelper_sve_revb_h \\\nhelper_sve_revb_s \\\nhelper_sve_revb_d \\\nhelper_sve_revh_s \\\nhelper_sve_revh_d \\\nhelper_sve_revw_d \\\nhelper_sve_rbit_b \\\nhelper_sve_rbit_h \\\nhelper_sve_rbit_s \\\nhelper_sve_rbit_d \\\nhelper_sve_asr_zzw_b \\\nhelper_sve_lsr_zzw_b \\\nhelper_sve_lsl_zzw_b \\\nhelper_sve_asr_zzw_h \\\nhelper_sve_lsr_zzw_h \\\nhelper_sve_lsl_zzw_h \\\nhelper_sve_asr_zzw_s \\\nhelper_sve_lsr_zzw_s \\\nhelper_sve_lsl_zzw_s \\\nhelper_sve_orv_b \\\nhelper_sve_orv_h \\\nhelper_sve_orv_s \\\nhelper_sve_orv_d \\\nhelper_sve_eorv_b \\\nhelper_sve_eorv_h \\\nhelper_sve_eorv_s \\\nhelper_sve_eorv_d \\\nhelper_sve_andv_b \\\nhelper_sve_andv_h \\\nhelper_sve_andv_s \\\nhelper_sve_andv_d \\\nhelper_sve_saddv_b \\\nhelper_sve_saddv_h \\\nhelper_sve_saddv_s \\\nhelper_sve_uaddv_b \\\nhelper_sve_uaddv_h \\\nhelper_sve_uaddv_s \\\nhelper_sve_uaddv_d \\\nhelper_sve_smaxv_b \\\nhelper_sve_smaxv_h \\\nhelper_sve_smaxv_s \\\nhelper_sve_smaxv_d \\\nhelper_sve_umaxv_b \\\nhelper_sve_umaxv_h \\\nhelper_sve_umaxv_s \\\nhelper_sve_umaxv_d \\\nhelper_sve_sminv_b \\\nhelper_sve_sminv_h \\\nhelper_sve_sminv_s \\\nhelper_sve_sminv_d \\\nhelper_sve_uminv_b \\\nhelper_sve_uminv_h \\\nhelper_sve_uminv_s \\\nhelper_sve_uminv_d \\\nhelper_sve_subri_b \\\nhelper_sve_subri_h \\\nhelper_sve_subri_s \\\nhelper_sve_subri_d \\\nhelper_sve_smaxi_b \\\nhelper_sve_smaxi_h \\\nhelper_sve_smaxi_s \\\nhelper_sve_smaxi_d \\\nhelper_sve_smini_b \\\nhelper_sve_smini_h \\\nhelper_sve_smini_s \\\nhelper_sve_smini_d \\\nhelper_sve_umaxi_b \\\nhelper_sve_umaxi_h \\\nhelper_sve_umaxi_s \\\nhelper_sve_umaxi_d \\\nhelper_sve_umini_b \\\nhelper_sve_umini_h \\\nhelper_sve_umini_s \\\nhelper_sve_umini_d \\\nhelper_sve_pfirst \\\nhelper_sve_pnext \\\nhelper_sve_clr_b \\\nhelper_sve_clr_h \\\nhelper_sve_clr_s \\\nhelper_sve_clr_d \\\nhelper_sve_movz_b \\\nhelper_sve_movz_h \\\nhelper_sve_movz_s \\\nhelper_sve_movz_d \\\nhelper_sve_asr_zpzi_b \\\nhelper_sve_asr_zpzi_h \\\nhelper_sve_asr_zpzi_s \\\nhelper_sve_asr_zpzi_d \\\nhelper_sve_lsr_zpzi_b \\\nhelper_sve_lsr_zpzi_h \\\nhelper_sve_lsr_zpzi_s \\\nhelper_sve_lsr_zpzi_d \\\nhelper_sve_lsl_zpzi_b \\\nhelper_sve_lsl_zpzi_h \\\nhelper_sve_lsl_zpzi_s \\\nhelper_sve_lsl_zpzi_d \\\nhelper_sve_asrd_b \\\nhelper_sve_asrd_h \\\nhelper_sve_asrd_s \\\nhelper_sve_asrd_d \\\nhelper_sve_mla_b \\\nhelper_sve_mls_b \\\nhelper_sve_mla_h \\\nhelper_sve_mls_h \\\nhelper_sve_mla_s \\\nhelper_sve_mls_s \\\nhelper_sve_mla_d \\\nhelper_sve_mls_d \\\nhelper_sve_index_b \\\nhelper_sve_index_h \\\nhelper_sve_index_s \\\nhelper_sve_index_d \\\nhelper_sve_adr_p32 \\\nhelper_sve_adr_p64 \\\nhelper_sve_adr_s32 \\\nhelper_sve_adr_u32 \\\nhelper_sve_fexpa_h \\\nhelper_sve_fexpa_s \\\nhelper_sve_fexpa_d \\\nhelper_sve_ftssel_h \\\nhelper_sve_ftssel_s \\\nhelper_sve_ftssel_d \\\nhelper_sve_sqaddi_b \\\nhelper_sve_sqaddi_h \\\nhelper_sve_sqaddi_s \\\nhelper_sve_sqaddi_d \\\nhelper_sve_uqaddi_b \\\nhelper_sve_uqaddi_h \\\nhelper_sve_uqaddi_s \\\nhelper_sve_uqaddi_d \\\nhelper_sve_uqsubi_d \\\nhelper_sve_cpy_m_b \\\nhelper_sve_cpy_m_h \\\nhelper_sve_cpy_m_s \\\nhelper_sve_cpy_m_d \\\nhelper_sve_cpy_z_b \\\nhelper_sve_cpy_z_h \\\nhelper_sve_cpy_z_s \\\nhelper_sve_cpy_z_d \\\nhelper_sve_ext \\\nhelper_sve_insr_b \\\nhelper_sve_insr_h \\\nhelper_sve_insr_s \\\nhelper_sve_insr_d \\\nhelper_sve_rev_b \\\nhelper_sve_rev_h \\\nhelper_sve_rev_s \\\nhelper_sve_rev_d \\\nhelper_sve_tbl_b \\\nhelper_sve_tbl_h \\\nhelper_sve_tbl_s \\\nhelper_sve_tbl_d \\\nhelper_sve_sunpk_h \\\nhelper_sve_sunpk_s \\\nhelper_sve_sunpk_d \\\nhelper_sve_uunpk_h \\\nhelper_sve_uunpk_s \\\nhelper_sve_uunpk_d \\\nhelper_sve_zip_p \\\nhelper_sve_uzp_p \\\nhelper_sve_trn_p \\\nhelper_sve_rev_p \\\nhelper_sve_punpk_p \\\nhelper_sve_zip_b \\\nhelper_sve_zip_h \\\nhelper_sve_zip_s \\\nhelper_sve_zip_d \\\nhelper_sve_uzp_b \\\nhelper_sve_uzp_h \\\nhelper_sve_uzp_s \\\nhelper_sve_uzp_d \\\nhelper_sve_trn_b \\\nhelper_sve_trn_h \\\nhelper_sve_trn_s \\\nhelper_sve_trn_d \\\nhelper_sve_compact_s \\\nhelper_sve_compact_d \\\nhelper_sve_last_active_element \\\nhelper_sve_splice \\\nhelper_sve_sel_zpzz_b \\\nhelper_sve_sel_zpzz_h \\\nhelper_sve_sel_zpzz_s \\\nhelper_sve_sel_zpzz_d \\\nhelper_sve_cmpeq_ppzz_b \\\nhelper_sve_cmpeq_ppzz_h \\\nhelper_sve_cmpeq_ppzz_s \\\nhelper_sve_cmpeq_ppzz_d \\\nhelper_sve_cmpne_ppzz_b \\\nhelper_sve_cmpne_ppzz_h \\\nhelper_sve_cmpne_ppzz_s \\\nhelper_sve_cmpne_ppzz_d \\\nhelper_sve_cmpgt_ppzz_b \\\nhelper_sve_cmpgt_ppzz_h \\\nhelper_sve_cmpgt_ppzz_s \\\nhelper_sve_cmpgt_ppzz_d \\\nhelper_sve_cmpge_ppzz_b \\\nhelper_sve_cmpge_ppzz_h \\\nhelper_sve_cmpge_ppzz_s \\\nhelper_sve_cmpge_ppzz_d \\\nhelper_sve_cmphi_ppzz_b \\\nhelper_sve_cmphi_ppzz_h \\\nhelper_sve_cmphi_ppzz_s \\\nhelper_sve_cmphi_ppzz_d \\\nhelper_sve_cmphs_ppzz_b \\\nhelper_sve_cmphs_ppzz_h \\\nhelper_sve_cmphs_ppzz_s \\\nhelper_sve_cmphs_ppzz_d \\\nhelper_sve_cmpeq_ppzw_b \\\nhelper_sve_cmpeq_ppzw_h \\\nhelper_sve_cmpeq_ppzw_s \\\nhelper_sve_cmpne_ppzw_b \\\nhelper_sve_cmpne_ppzw_h \\\nhelper_sve_cmpne_ppzw_s \\\nhelper_sve_cmpgt_ppzw_b \\\nhelper_sve_cmpgt_ppzw_h \\\nhelper_sve_cmpgt_ppzw_s \\\nhelper_sve_cmpge_ppzw_b \\\nhelper_sve_cmpge_ppzw_h \\\nhelper_sve_cmpge_ppzw_s \\\nhelper_sve_cmphi_ppzw_b \\\nhelper_sve_cmphi_ppzw_h \\\nhelper_sve_cmphi_ppzw_s \\\nhelper_sve_cmphs_ppzw_b \\\nhelper_sve_cmphs_ppzw_h \\\nhelper_sve_cmphs_ppzw_s \\\nhelper_sve_cmplt_ppzw_b \\\nhelper_sve_cmplt_ppzw_h \\\nhelper_sve_cmplt_ppzw_s \\\nhelper_sve_cmple_ppzw_b \\\nhelper_sve_cmple_ppzw_h \\\nhelper_sve_cmple_ppzw_s \\\nhelper_sve_cmplo_ppzw_b \\\nhelper_sve_cmplo_ppzw_h \\\nhelper_sve_cmplo_ppzw_s \\\nhelper_sve_cmpls_ppzw_b \\\nhelper_sve_cmpls_ppzw_h \\\nhelper_sve_cmpls_ppzw_s \\\nhelper_sve_cmpeq_ppzi_b \\\nhelper_sve_cmpeq_ppzi_h \\\nhelper_sve_cmpeq_ppzi_s \\\nhelper_sve_cmpeq_ppzi_d \\\nhelper_sve_cmpne_ppzi_b \\\nhelper_sve_cmpne_ppzi_h \\\nhelper_sve_cmpne_ppzi_s \\\nhelper_sve_cmpne_ppzi_d \\\nhelper_sve_cmpgt_ppzi_b \\\nhelper_sve_cmpgt_ppzi_h \\\nhelper_sve_cmpgt_ppzi_s \\\nhelper_sve_cmpgt_ppzi_d \\\nhelper_sve_cmpge_ppzi_b \\\nhelper_sve_cmpge_ppzi_h \\\nhelper_sve_cmpge_ppzi_s \\\nhelper_sve_cmpge_ppzi_d \\\nhelper_sve_cmphi_ppzi_b \\\nhelper_sve_cmphi_ppzi_h \\\nhelper_sve_cmphi_ppzi_s \\\nhelper_sve_cmphi_ppzi_d \\\nhelper_sve_cmphs_ppzi_b \\\nhelper_sve_cmphs_ppzi_h \\\nhelper_sve_cmphs_ppzi_s \\\nhelper_sve_cmphs_ppzi_d \\\nhelper_sve_cmplt_ppzi_b \\\nhelper_sve_cmplt_ppzi_h \\\nhelper_sve_cmplt_ppzi_s \\\nhelper_sve_cmplt_ppzi_d \\\nhelper_sve_cmple_ppzi_b \\\nhelper_sve_cmple_ppzi_h \\\nhelper_sve_cmple_ppzi_s \\\nhelper_sve_cmple_ppzi_d \\\nhelper_sve_cmplo_ppzi_b \\\nhelper_sve_cmplo_ppzi_h \\\nhelper_sve_cmplo_ppzi_s \\\nhelper_sve_cmplo_ppzi_d \\\nhelper_sve_cmpls_ppzi_b \\\nhelper_sve_cmpls_ppzi_h \\\nhelper_sve_cmpls_ppzi_s \\\nhelper_sve_cmpls_ppzi_d \\\nhelper_sve_brkpa \\\nhelper_sve_brkpas \\\nhelper_sve_brkpb \\\nhelper_sve_brkpbs \\\nhelper_sve_brka_z \\\nhelper_sve_brkas_z \\\nhelper_sve_brkb_z \\\nhelper_sve_brkbs_z \\\nhelper_sve_brka_m \\\nhelper_sve_brkas_m \\\nhelper_sve_brkb_m \\\nhelper_sve_brkbs_m \\\nhelper_sve_brkn \\\nhelper_sve_brkns \\\nhelper_sve_cntp \\\nhelper_sve_while \\\nhelper_sve_faddv_h \\\nhelper_sve_faddv_s \\\nhelper_sve_faddv_d \\\nhelper_sve_fminnmv_h \\\nhelper_sve_fminnmv_s \\\nhelper_sve_fminnmv_d \\\nhelper_sve_fmaxnmv_h \\\nhelper_sve_fmaxnmv_s \\\nhelper_sve_fmaxnmv_d \\\nhelper_sve_fminv_h \\\nhelper_sve_fminv_s \\\nhelper_sve_fminv_d \\\nhelper_sve_fmaxv_h \\\nhelper_sve_fmaxv_s \\\nhelper_sve_fmaxv_d \\\nhelper_sve_fadda_h \\\nhelper_sve_fadda_s \\\nhelper_sve_fadda_d \\\nhelper_sve_fadd_h \\\nhelper_sve_fadd_s \\\nhelper_sve_fadd_d \\\nhelper_sve_fsub_h \\\nhelper_sve_fsub_s \\\nhelper_sve_fsub_d \\\nhelper_sve_fmul_h \\\nhelper_sve_fmul_s \\\nhelper_sve_fmul_d \\\nhelper_sve_fdiv_h \\\nhelper_sve_fdiv_s \\\nhelper_sve_fdiv_d \\\nhelper_sve_fmin_h \\\nhelper_sve_fmin_s \\\nhelper_sve_fmin_d \\\nhelper_sve_fmax_h \\\nhelper_sve_fmax_s \\\nhelper_sve_fmax_d \\\nhelper_sve_fminnum_h \\\nhelper_sve_fminnum_s \\\nhelper_sve_fminnum_d \\\nhelper_sve_fmaxnum_h \\\nhelper_sve_fmaxnum_s \\\nhelper_sve_fmaxnum_d \\\nhelper_sve_fabd_h \\\nhelper_sve_fabd_s \\\nhelper_sve_fabd_d \\\nhelper_sve_fscalbn_h \\\nhelper_sve_fscalbn_s \\\nhelper_sve_fscalbn_d \\\nhelper_sve_fmulx_h \\\nhelper_sve_fmulx_s \\\nhelper_sve_fmulx_d \\\nhelper_sve_fadds_h \\\nhelper_sve_fadds_s \\\nhelper_sve_fadds_d \\\nhelper_sve_fsubs_h \\\nhelper_sve_fsubs_s \\\nhelper_sve_fsubs_d \\\nhelper_sve_fmuls_h \\\nhelper_sve_fmuls_s \\\nhelper_sve_fmuls_d \\\nhelper_sve_fsubrs_h \\\nhelper_sve_fsubrs_s \\\nhelper_sve_fsubrs_d \\\nhelper_sve_fmaxnms_h \\\nhelper_sve_fmaxnms_s \\\nhelper_sve_fmaxnms_d \\\nhelper_sve_fminnms_h \\\nhelper_sve_fminnms_s \\\nhelper_sve_fminnms_d \\\nhelper_sve_fmaxs_h \\\nhelper_sve_fmaxs_s \\\nhelper_sve_fmaxs_d \\\nhelper_sve_fmins_h \\\nhelper_sve_fmins_s \\\nhelper_sve_fmins_d \\\nhelper_sve_fcvt_sh \\\nhelper_sve_fcvt_hs \\\nhelper_sve_fcvt_dh \\\nhelper_sve_fcvt_hd \\\nhelper_sve_fcvt_ds \\\nhelper_sve_fcvt_sd \\\nhelper_sve_fcvtzs_hh \\\nhelper_sve_fcvtzs_hs \\\nhelper_sve_fcvtzs_ss \\\nhelper_sve_fcvtzs_hd \\\nhelper_sve_fcvtzs_sd \\\nhelper_sve_fcvtzs_ds \\\nhelper_sve_fcvtzs_dd \\\nhelper_sve_fcvtzu_hh \\\nhelper_sve_fcvtzu_hs \\\nhelper_sve_fcvtzu_ss \\\nhelper_sve_fcvtzu_hd \\\nhelper_sve_fcvtzu_sd \\\nhelper_sve_fcvtzu_ds \\\nhelper_sve_fcvtzu_dd \\\nhelper_sve_frint_h \\\nhelper_sve_frint_s \\\nhelper_sve_frint_d \\\nhelper_sve_frintx_h \\\nhelper_sve_frintx_s \\\nhelper_sve_frintx_d \\\nhelper_sve_frecpx_h \\\nhelper_sve_frecpx_s \\\nhelper_sve_frecpx_d \\\nhelper_sve_fsqrt_h \\\nhelper_sve_fsqrt_s \\\nhelper_sve_fsqrt_d \\\nhelper_sve_scvt_hh \\\nhelper_sve_scvt_sh \\\nhelper_sve_scvt_ss \\\nhelper_sve_scvt_sd \\\nhelper_sve_scvt_dh \\\nhelper_sve_scvt_ds \\\nhelper_sve_scvt_dd \\\nhelper_sve_ucvt_hh \\\nhelper_sve_ucvt_sh \\\nhelper_sve_ucvt_ss \\\nhelper_sve_ucvt_sd \\\nhelper_sve_ucvt_dh \\\nhelper_sve_ucvt_ds \\\nhelper_sve_ucvt_dd \\\nhelper_sve_fmla_zpzzz_h \\\nhelper_sve_fmls_zpzzz_h \\\nhelper_sve_fnmla_zpzzz_h \\\nhelper_sve_fnmls_zpzzz_h \\\nhelper_sve_fmla_zpzzz_s \\\nhelper_sve_fmls_zpzzz_s \\\nhelper_sve_fnmla_zpzzz_s \\\nhelper_sve_fnmls_zpzzz_s \\\nhelper_sve_fmla_zpzzz_d \\\nhelper_sve_fmls_zpzzz_d \\\nhelper_sve_fnmla_zpzzz_d \\\nhelper_sve_fnmls_zpzzz_d \\\nhelper_sve_fcmge_h \\\nhelper_sve_fcmge_s \\\nhelper_sve_fcmge_d \\\nhelper_sve_fcmgt_h \\\nhelper_sve_fcmgt_s \\\nhelper_sve_fcmgt_d \\\nhelper_sve_fcmeq_h \\\nhelper_sve_fcmeq_s \\\nhelper_sve_fcmeq_d \\\nhelper_sve_fcmne_h \\\nhelper_sve_fcmne_s \\\nhelper_sve_fcmne_d \\\nhelper_sve_fcmuo_h \\\nhelper_sve_fcmuo_s \\\nhelper_sve_fcmuo_d \\\nhelper_sve_facge_h \\\nhelper_sve_facge_s \\\nhelper_sve_facge_d \\\nhelper_sve_facgt_h \\\nhelper_sve_facgt_s \\\nhelper_sve_facgt_d \\\nhelper_sve_fcmge0_h \\\nhelper_sve_fcmge0_s \\\nhelper_sve_fcmge0_d \\\nhelper_sve_fcmgt0_h \\\nhelper_sve_fcmgt0_s \\\nhelper_sve_fcmgt0_d \\\nhelper_sve_fcmle0_h \\\nhelper_sve_fcmle0_s \\\nhelper_sve_fcmle0_d \\\nhelper_sve_fcmlt0_h \\\nhelper_sve_fcmlt0_s \\\nhelper_sve_fcmlt0_d \\\nhelper_sve_fcmeq0_h \\\nhelper_sve_fcmeq0_s \\\nhelper_sve_fcmeq0_d \\\nhelper_sve_fcmne0_h \\\nhelper_sve_fcmne0_s \\\nhelper_sve_fcmne0_d \\\nhelper_sve_ftmad_h \\\nhelper_sve_ftmad_s \\\nhelper_sve_ftmad_d \\\nhelper_sve_fcadd_h \\\nhelper_sve_fcadd_s \\\nhelper_sve_fcadd_d \\\nhelper_sve_fcmla_zpzzz_h \\\nhelper_sve_fcmla_zpzzz_s \\\nhelper_sve_fcmla_zpzzz_d \\\nhelper_sve_ld1bb_r \\\nhelper_sve_ld1bhu_r \\\nhelper_sve_ld1bhs_r \\\nhelper_sve_ld1bsu_r \\\nhelper_sve_ld1bss_r \\\nhelper_sve_ld1bdu_r \\\nhelper_sve_ld1bds_r \\\nhelper_sve_ld1hh_le_r \\\nhelper_sve_ld1hh_be_r \\\nhelper_sve_ld1hsu_le_r \\\nhelper_sve_ld1hsu_be_r \\\nhelper_sve_ld1hss_le_r \\\nhelper_sve_ld1hss_be_r \\\nhelper_sve_ld1hdu_le_r \\\nhelper_sve_ld1hdu_be_r \\\nhelper_sve_ld1hds_le_r \\\nhelper_sve_ld1hds_be_r \\\nhelper_sve_ld1ss_le_r \\\nhelper_sve_ld1ss_be_r \\\nhelper_sve_ld1sdu_le_r \\\nhelper_sve_ld1sdu_be_r \\\nhelper_sve_ld1sds_le_r \\\nhelper_sve_ld1sds_be_r \\\nhelper_sve_ld1dd_le_r \\\nhelper_sve_ld1dd_be_r \\\nhelper_sve_ld2bb_r \\\nhelper_sve_ld3bb_r \\\nhelper_sve_ld4bb_r \\\nhelper_sve_ld2hh_le_r \\\nhelper_sve_ld2hh_be_r \\\nhelper_sve_ld3hh_le_r \\\nhelper_sve_ld3hh_be_r \\\nhelper_sve_ld4hh_le_r \\\nhelper_sve_ld4hh_be_r \\\nhelper_sve_ld2ss_le_r \\\nhelper_sve_ld2ss_be_r \\\nhelper_sve_ld3ss_le_r \\\nhelper_sve_ld3ss_be_r \\\nhelper_sve_ld4ss_le_r \\\nhelper_sve_ld4ss_be_r \\\nhelper_sve_ld2dd_le_r \\\nhelper_sve_ld2dd_be_r \\\nhelper_sve_ld3dd_le_r \\\nhelper_sve_ld3dd_be_r \\\nhelper_sve_ld4dd_le_r \\\nhelper_sve_ld4dd_be_r \\\nhelper_sve_ldff1bb_r \\\nhelper_sve_ldnf1bb_r \\\nhelper_sve_ldff1bhu_r \\\nhelper_sve_ldnf1bhu_r \\\nhelper_sve_ldff1bhs_r \\\nhelper_sve_ldnf1bhs_r \\\nhelper_sve_ldff1bsu_r \\\nhelper_sve_ldnf1bsu_r \\\nhelper_sve_ldff1bss_r \\\nhelper_sve_ldnf1bss_r \\\nhelper_sve_ldff1bdu_r \\\nhelper_sve_ldnf1bdu_r \\\nhelper_sve_ldff1bds_r \\\nhelper_sve_ldnf1bds_r \\\nhelper_sve_ldff1hh_le_r \\\nhelper_sve_ldnf1hh_le_r \\\nhelper_sve_ldff1hh_be_r \\\nhelper_sve_ldnf1hh_be_r \\\nhelper_sve_ldff1hsu_le_r \\\nhelper_sve_ldnf1hsu_le_r \\\nhelper_sve_ldff1hsu_be_r \\\nhelper_sve_ldnf1hsu_be_r \\\nhelper_sve_ldff1hss_le_r \\\nhelper_sve_ldnf1hss_le_r \\\nhelper_sve_ldff1hss_be_r \\\nhelper_sve_ldnf1hss_be_r \\\nhelper_sve_ldff1hdu_le_r \\\nhelper_sve_ldnf1hdu_le_r \\\nhelper_sve_ldff1hdu_be_r \\\nhelper_sve_ldnf1hdu_be_r \\\nhelper_sve_ldff1hds_le_r \\\nhelper_sve_ldnf1hds_le_r \\\nhelper_sve_ldff1hds_be_r \\\nhelper_sve_ldnf1hds_be_r \\\nhelper_sve_ldff1ss_le_r \\\nhelper_sve_ldnf1ss_le_r \\\nhelper_sve_ldff1ss_be_r \\\nhelper_sve_ldnf1ss_be_r \\\nhelper_sve_ldff1sdu_le_r \\\nhelper_sve_ldnf1sdu_le_r \\\nhelper_sve_ldff1sdu_be_r \\\nhelper_sve_ldnf1sdu_be_r \\\nhelper_sve_ldff1sds_le_r \\\nhelper_sve_ldnf1sds_le_r \\\nhelper_sve_ldff1sds_be_r \\\nhelper_sve_ldnf1sds_be_r \\\nhelper_sve_ldff1dd_le_r \\\nhelper_sve_ldnf1dd_le_r \\\nhelper_sve_ldff1dd_be_r \\\nhelper_sve_ldnf1dd_be_r \\\nhelper_sve_st1bb_r \\\nhelper_sve_st1bh_r \\\nhelper_sve_st1bs_r \\\nhelper_sve_st1bd_r \\\nhelper_sve_st2bb_r \\\nhelper_sve_st3bb_r \\\nhelper_sve_st4bb_r \\\nhelper_sve_st1hh_le_r \\\nhelper_sve_st1hh_be_r \\\nhelper_sve_st1hs_le_r \\\nhelper_sve_st1hs_be_r \\\nhelper_sve_st1hd_le_r \\\nhelper_sve_st1hd_be_r \\\nhelper_sve_st2hh_le_r \\\nhelper_sve_st2hh_be_r \\\nhelper_sve_st3hh_le_r \\\nhelper_sve_st3hh_be_r \\\nhelper_sve_st4hh_le_r \\\nhelper_sve_st4hh_be_r \\\nhelper_sve_st1ss_le_r \\\nhelper_sve_st1ss_be_r \\\nhelper_sve_st1sd_le_r \\\nhelper_sve_st1sd_be_r \\\nhelper_sve_st2ss_le_r \\\nhelper_sve_st2ss_be_r \\\nhelper_sve_st3ss_le_r \\\nhelper_sve_st3ss_be_r \\\nhelper_sve_st4ss_le_r \\\nhelper_sve_st4ss_be_r \\\nhelper_sve_st1dd_le_r \\\nhelper_sve_st1dd_be_r \\\nhelper_sve_st2dd_le_r \\\nhelper_sve_st2dd_be_r \\\nhelper_sve_st3dd_le_r \\\nhelper_sve_st3dd_be_r \\\nhelper_sve_st4dd_le_r \\\nhelper_sve_st4dd_be_r \\\nhelper_sve_ldbsu_zsu \\\nhelper_sve_ldbsu_zss \\\nhelper_sve_ldbdu_zsu \\\nhelper_sve_ldbdu_zss \\\nhelper_sve_ldbdu_zd \\\nhelper_sve_ldbss_zsu \\\nhelper_sve_ldbss_zss \\\nhelper_sve_ldbds_zsu \\\nhelper_sve_ldbds_zss \\\nhelper_sve_ldbds_zd \\\nhelper_sve_ldhsu_le_zsu \\\nhelper_sve_ldhsu_le_zss \\\nhelper_sve_ldhdu_le_zsu \\\nhelper_sve_ldhdu_le_zss \\\nhelper_sve_ldhdu_le_zd \\\nhelper_sve_ldhsu_be_zsu \\\nhelper_sve_ldhsu_be_zss \\\nhelper_sve_ldhdu_be_zsu \\\nhelper_sve_ldhdu_be_zss \\\nhelper_sve_ldhdu_be_zd \\\nhelper_sve_ldhss_le_zsu \\\nhelper_sve_ldhss_le_zss \\\nhelper_sve_ldhds_le_zsu \\\nhelper_sve_ldhds_le_zss \\\nhelper_sve_ldhds_le_zd \\\nhelper_sve_ldhss_be_zsu \\\nhelper_sve_ldhss_be_zss \\\nhelper_sve_ldhds_be_zsu \\\nhelper_sve_ldhds_be_zss \\\nhelper_sve_ldhds_be_zd \\\nhelper_sve_ldss_le_zsu \\\nhelper_sve_ldss_le_zss \\\nhelper_sve_ldsdu_le_zsu \\\nhelper_sve_ldsdu_le_zss \\\nhelper_sve_ldsdu_le_zd \\\nhelper_sve_ldss_be_zsu \\\nhelper_sve_ldss_be_zss \\\nhelper_sve_ldsdu_be_zsu \\\nhelper_sve_ldsdu_be_zss \\\nhelper_sve_ldsdu_be_zd \\\nhelper_sve_ldsds_le_zsu \\\nhelper_sve_ldsds_le_zss \\\nhelper_sve_ldsds_le_zd \\\nhelper_sve_ldsds_be_zsu \\\nhelper_sve_ldsds_be_zss \\\nhelper_sve_ldsds_be_zd \\\nhelper_sve_lddd_le_zsu \\\nhelper_sve_lddd_le_zss \\\nhelper_sve_lddd_le_zd \\\nhelper_sve_lddd_be_zsu \\\nhelper_sve_lddd_be_zss \\\nhelper_sve_lddd_be_zd \\\nhelper_sve_ldffbsu_zsu \\\nhelper_sve_ldffbsu_zss \\\nhelper_sve_ldffbdu_zsu \\\nhelper_sve_ldffbdu_zss \\\nhelper_sve_ldffbdu_zd \\\nhelper_sve_ldffbss_zsu \\\nhelper_sve_ldffbss_zss \\\nhelper_sve_ldffbds_zsu \\\nhelper_sve_ldffbds_zss \\\nhelper_sve_ldffbds_zd \\\nhelper_sve_ldffhsu_le_zsu \\\nhelper_sve_ldffhsu_le_zss \\\nhelper_sve_ldffhdu_le_zsu \\\nhelper_sve_ldffhdu_le_zss \\\nhelper_sve_ldffhdu_le_zd \\\nhelper_sve_ldffhsu_be_zsu \\\nhelper_sve_ldffhsu_be_zss \\\nhelper_sve_ldffhdu_be_zsu \\\nhelper_sve_ldffhdu_be_zss \\\nhelper_sve_ldffhdu_be_zd \\\nhelper_sve_ldffhss_le_zsu \\\nhelper_sve_ldffhss_le_zss \\\nhelper_sve_ldffhds_le_zsu \\\nhelper_sve_ldffhds_le_zss \\\nhelper_sve_ldffhds_le_zd \\\nhelper_sve_ldffhss_be_zsu \\\nhelper_sve_ldffhss_be_zss \\\nhelper_sve_ldffhds_be_zsu \\\nhelper_sve_ldffhds_be_zss \\\nhelper_sve_ldffhds_be_zd \\\nhelper_sve_ldffss_le_zsu \\\nhelper_sve_ldffss_le_zss \\\nhelper_sve_ldffsdu_le_zsu \\\nhelper_sve_ldffsdu_le_zss \\\nhelper_sve_ldffsdu_le_zd \\\nhelper_sve_ldffss_be_zsu \\\nhelper_sve_ldffss_be_zss \\\nhelper_sve_ldffsdu_be_zsu \\\nhelper_sve_ldffsdu_be_zss \\\nhelper_sve_ldffsdu_be_zd \\\nhelper_sve_ldffsds_le_zsu \\\nhelper_sve_ldffsds_le_zss \\\nhelper_sve_ldffsds_le_zd \\\nhelper_sve_ldffsds_be_zsu \\\nhelper_sve_ldffsds_be_zss \\\nhelper_sve_ldffsds_be_zd \\\nhelper_sve_ldffdd_le_zsu \\\nhelper_sve_ldffdd_le_zss \\\nhelper_sve_ldffdd_le_zd \\\nhelper_sve_ldffdd_be_zsu \\\nhelper_sve_ldffdd_be_zss \\\nhelper_sve_ldffdd_be_zd \\\nhelper_sve_stbs_zsu \\\nhelper_sve_sths_le_zsu \\\nhelper_sve_sths_be_zsu \\\nhelper_sve_stss_le_zsu \\\nhelper_sve_stss_be_zsu \\\nhelper_sve_stbs_zss \\\nhelper_sve_sths_le_zss \\\nhelper_sve_sths_be_zss \\\nhelper_sve_stss_le_zss \\\nhelper_sve_stss_be_zss \\\nhelper_sve_stbd_zsu \\\nhelper_sve_sthd_le_zsu \\\nhelper_sve_sthd_be_zsu \\\nhelper_sve_stsd_le_zsu \\\nhelper_sve_stsd_be_zsu \\\nhelper_sve_stdd_le_zsu \\\nhelper_sve_stdd_be_zsu \\\nhelper_sve_stbd_zss \\\nhelper_sve_sthd_le_zss \\\nhelper_sve_sthd_be_zss \\\nhelper_sve_stsd_le_zss \\\nhelper_sve_stsd_be_zss \\\nhelper_sve_stdd_le_zss \\\nhelper_sve_stdd_be_zss \\\nhelper_sve_stbd_zd \\\nhelper_sve_sthd_le_zd \\\nhelper_sve_sthd_be_zd \\\nhelper_sve_stsd_le_zd \\\nhelper_sve_stsd_be_zd \\\nhelper_sve_stdd_le_zd \\\nhelper_sve_stdd_be_zd \\\narm_cpu_do_unaligned_access \\\narm_cpu_do_transaction_failed \\\narm_cpu_tlb_fill \\\na64_translate_init \\\ngen_a64_set_pc_im \\\nunallocated_encoding \\\nnew_tmp_a64 \\\nnew_tmp_a64_zero \\\ncpu_reg \\\ncpu_reg_sp \\\nread_cpu_reg \\\nread_cpu_reg_sp \\\nwrite_fp_dreg \\\nget_fpstatus_ptr \\\nsve_access_check \\\nlogic_imm_decode_wmask \\\narm_translate_init \\\narm_test_cc \\\narm_free_cc \\\narm_jump_cc \\\narm_gen_test_cc \\\nvfp_expand_imm \\\ngen_cmtst_i64 \\\ngen_ushl_i32 \\\ngen_ushl_i64 \\\ngen_sshl_i32 \\\ngen_sshl_i64 \\\ngen_intermediate_code \\\nrestore_state_to_opc \\\ndisas_sve \\\nhelper_neon_qrdmlah_s16 \\\nhelper_gvec_qrdmlah_s16 \\\nhelper_neon_qrdmlsh_s16 \\\nhelper_gvec_qrdmlsh_s16 \\\nhelper_neon_qrdmlah_s32 \\\nhelper_gvec_qrdmlah_s32 \\\nhelper_neon_qrdmlsh_s32 \\\nhelper_gvec_qrdmlsh_s32 \\\nhelper_gvec_sdot_b \\\nhelper_gvec_udot_b \\\nhelper_gvec_sdot_h \\\nhelper_gvec_udot_h \\\nhelper_gvec_sdot_idx_b \\\nhelper_gvec_udot_idx_b \\\nhelper_gvec_sdot_idx_h \\\nhelper_gvec_udot_idx_h \\\nhelper_gvec_fcaddh \\\nhelper_gvec_fcadds \\\nhelper_gvec_fcaddd \\\nhelper_gvec_fcmlah \\\nhelper_gvec_fcmlah_idx \\\nhelper_gvec_fcmlas \\\nhelper_gvec_fcmlas_idx \\\nhelper_gvec_fcmlad \\\nhelper_gvec_frecpe_h \\\nhelper_gvec_frecpe_s \\\nhelper_gvec_frecpe_d \\\nhelper_gvec_frsqrte_h \\\nhelper_gvec_frsqrte_s \\\nhelper_gvec_frsqrte_d \\\nhelper_gvec_fadd_h \\\nhelper_gvec_fadd_s \\\nhelper_gvec_fadd_d \\\nhelper_gvec_fsub_h \\\nhelper_gvec_fsub_s \\\nhelper_gvec_fsub_d \\\nhelper_gvec_fmul_h \\\nhelper_gvec_fmul_s \\\nhelper_gvec_fmul_d \\\nhelper_gvec_ftsmul_h \\\nhelper_gvec_ftsmul_s \\\nhelper_gvec_ftsmul_d \\\nhelper_gvec_recps_h \\\nhelper_gvec_recps_s \\\nhelper_gvec_recps_d \\\nhelper_gvec_rsqrts_h \\\nhelper_gvec_rsqrts_s \\\nhelper_gvec_rsqrts_d \\\nhelper_gvec_fmul_idx_h \\\nhelper_gvec_fmul_idx_s \\\nhelper_gvec_fmul_idx_d \\\nhelper_gvec_fmla_idx_h \\\nhelper_gvec_fmla_idx_s \\\nhelper_gvec_fmla_idx_d \\\nhelper_gvec_uqadd_b \\\nhelper_gvec_uqadd_h \\\nhelper_gvec_uqadd_s \\\nhelper_gvec_sqadd_b \\\nhelper_gvec_sqadd_h \\\nhelper_gvec_sqadd_s \\\nhelper_gvec_uqsub_b \\\nhelper_gvec_uqsub_h \\\nhelper_gvec_uqsub_s \\\nhelper_gvec_sqsub_b \\\nhelper_gvec_sqsub_h \\\nhelper_gvec_sqsub_s \\\nhelper_gvec_uqadd_d \\\nhelper_gvec_uqsub_d \\\nhelper_gvec_sqadd_d \\\nhelper_gvec_sqsub_d \\\nhelper_gvec_fmlal_a32 \\\nhelper_gvec_fmlal_a64 \\\nhelper_gvec_fmlal_idx_a32 \\\nhelper_gvec_fmlal_idx_a64 \\\nhelper_gvec_sshl_b \\\nhelper_gvec_sshl_h \\\nhelper_gvec_ushl_b \\\nhelper_gvec_ushl_h \\\nhelper_gvec_pmul_b \\\nhelper_gvec_pmull_q \\\nhelper_neon_pmull_h \\\nhelper_sve2_pmull_h \\\nhelper_vfp_get_fpscr \\\nvfp_get_fpscr \\\nhelper_vfp_set_fpscr \\\nvfp_set_fpscr \\\nhelper_vfp_adds \\\nhelper_vfp_addd \\\nhelper_vfp_subs \\\nhelper_vfp_subd \\\nhelper_vfp_muls \\\nhelper_vfp_muld \\\nhelper_vfp_divs \\\nhelper_vfp_divd \\\nhelper_vfp_mins \\\nhelper_vfp_mind \\\nhelper_vfp_maxs \\\nhelper_vfp_maxd \\\nhelper_vfp_minnums \\\nhelper_vfp_minnumd \\\nhelper_vfp_maxnums \\\nhelper_vfp_maxnumd \\\nhelper_vfp_negs \\\nhelper_vfp_negd \\\nhelper_vfp_abss \\\nhelper_vfp_absd \\\nhelper_vfp_sqrts \\\nhelper_vfp_sqrtd \\\nhelper_vfp_cmps \\\nhelper_vfp_cmpes \\\nhelper_vfp_cmpd \\\nhelper_vfp_cmped \\\nhelper_vfp_sitoh \\\nhelper_vfp_tosih \\\nhelper_vfp_tosizh \\\nhelper_vfp_sitos \\\nhelper_vfp_tosis \\\nhelper_vfp_tosizs \\\nhelper_vfp_sitod \\\nhelper_vfp_tosid \\\nhelper_vfp_tosizd \\\nhelper_vfp_uitoh \\\nhelper_vfp_touih \\\nhelper_vfp_touizh \\\nhelper_vfp_uitos \\\nhelper_vfp_touis \\\nhelper_vfp_touizs \\\nhelper_vfp_uitod \\\nhelper_vfp_touid \\\nhelper_vfp_touizd \\\nhelper_vfp_fcvtds \\\nhelper_vfp_fcvtsd \\\nhelper_vfp_shtod \\\nhelper_vfp_toshd_round_to_zero \\\nhelper_vfp_toshd \\\nhelper_vfp_sltod \\\nhelper_vfp_tosld_round_to_zero \\\nhelper_vfp_tosld \\\nhelper_vfp_sqtod \\\nhelper_vfp_tosqd \\\nhelper_vfp_uhtod \\\nhelper_vfp_touhd_round_to_zero \\\nhelper_vfp_touhd \\\nhelper_vfp_ultod \\\nhelper_vfp_tould_round_to_zero \\\nhelper_vfp_tould \\\nhelper_vfp_uqtod \\\nhelper_vfp_touqd \\\nhelper_vfp_shtos \\\nhelper_vfp_toshs_round_to_zero \\\nhelper_vfp_toshs \\\nhelper_vfp_sltos \\\nhelper_vfp_tosls_round_to_zero \\\nhelper_vfp_tosls \\\nhelper_vfp_sqtos \\\nhelper_vfp_tosqs \\\nhelper_vfp_uhtos \\\nhelper_vfp_touhs_round_to_zero \\\nhelper_vfp_touhs \\\nhelper_vfp_ultos \\\nhelper_vfp_touls_round_to_zero \\\nhelper_vfp_touls \\\nhelper_vfp_uqtos \\\nhelper_vfp_touqs \\\nhelper_vfp_sltoh \\\nhelper_vfp_ultoh \\\nhelper_vfp_sqtoh \\\nhelper_vfp_uqtoh \\\nhelper_vfp_toshh \\\nhelper_vfp_touhh \\\nhelper_vfp_toslh \\\nhelper_vfp_toulh \\\nhelper_vfp_tosqh \\\nhelper_vfp_touqh \\\nhelper_set_rmode \\\nhelper_set_neon_rmode \\\nhelper_vfp_fcvt_f16_to_f32 \\\nhelper_vfp_fcvt_f32_to_f16 \\\nhelper_vfp_fcvt_f16_to_f64 \\\nhelper_vfp_fcvt_f64_to_f16 \\\nhelper_recps_f32 \\\nhelper_rsqrts_f32 \\\nhelper_recpe_f16 \\\nhelper_recpe_f32 \\\nhelper_recpe_f64 \\\nhelper_rsqrte_f16 \\\nhelper_rsqrte_f32 \\\nhelper_rsqrte_f64 \\\nhelper_recpe_u32 \\\nhelper_rsqrte_u32 \\\nhelper_vfp_muladds \\\nhelper_vfp_muladdd \\\nhelper_rints_exact \\\nhelper_rintd_exact \\\nhelper_rints \\\nhelper_rintd \\\narm_rmode_to_sf \\\nhelper_fjcvtzs \\\nhelper_vjcvt \\\nhelper_frint32_s \\\nhelper_frint64_s \\\nhelper_frint32_d \\\nhelper_frint64_d \\\nhelper_check_hcr_el2_trap \\\nmla_op \\\nmls_op \\\nsshl_op \\\nushl_op \\\nuqsub_op \\\nsqsub_op \\\nuqadd_op \\\nsqadd_op \\\nsli_op \\\ncmtst_op \\\nsri_op \\\nusra_op \\\nssra_op \\\naarch64_translator_ops \\\npred_esz_masks \\\nhelper_uc_hooksys64 \\\n\"\n\nriscv32_SYMBOLS=\"\nriscv_cpu_mmu_index \\\nriscv_cpu_exec_interrupt \\\nriscv_cpu_fp_enabled \\\nriscv_cpu_swap_hypervisor_regs \\\nriscv_cpu_virt_enabled \\\nriscv_cpu_set_virt_enabled \\\nriscv_cpu_force_hs_excep_enabled \\\nriscv_cpu_set_force_hs_excep \\\nriscv_cpu_claim_interrupts \\\nriscv_cpu_update_mip \\\nriscv_cpu_set_rdtime_fn \\\nriscv_cpu_set_mode \\\nriscv_cpu_get_phys_page_debug \\\nriscv_cpu_do_transaction_failed \\\nriscv_cpu_do_unaligned_access \\\nriscv_cpu_tlb_fill \\\nriscv_cpu_do_interrupt \\\nriscv_get_csr_ops \\\nriscv_set_csr_ops \\\nriscv_csrrw \\\nriscv_csrrw_debug \\\nriscv_cpu_get_fflags \\\nriscv_cpu_set_fflags \\\nhelper_set_rounding_mode \\\nhelper_fmadd_s \\\nhelper_fmadd_d \\\nhelper_fmsub_s \\\nhelper_fmsub_d \\\nhelper_fnmsub_s \\\nhelper_fnmsub_d \\\nhelper_fnmadd_s \\\nhelper_fnmadd_d \\\nhelper_fadd_s \\\nhelper_fsub_s \\\nhelper_fmul_s \\\nhelper_fdiv_s \\\nhelper_fmin_s \\\nhelper_fmax_s \\\nhelper_fsqrt_s \\\nhelper_fle_s \\\nhelper_flt_s \\\nhelper_feq_s \\\nhelper_fcvt_w_s \\\nhelper_fcvt_wu_s \\\nhelper_fcvt_s_w \\\nhelper_fcvt_s_wu \\\nhelper_fclass_s \\\nhelper_fadd_d \\\nhelper_fsub_d \\\nhelper_fmul_d \\\nhelper_fdiv_d \\\nhelper_fmin_d \\\nhelper_fmax_d \\\nhelper_fcvt_s_d \\\nhelper_fcvt_d_s \\\nhelper_fsqrt_d \\\nhelper_fle_d \\\nhelper_flt_d \\\nhelper_feq_d \\\nhelper_fcvt_w_d \\\nhelper_fcvt_wu_d \\\nhelper_fcvt_d_w \\\nhelper_fcvt_d_wu \\\nhelper_fclass_d \\\nriscv_raise_exception \\\nhelper_raise_exception \\\nhelper_uc_riscv_exit \\\nhelper_csrrw \\\nhelper_csrrs \\\nhelper_csrrc \\\nhelper_sret \\\nhelper_mret \\\nhelper_wfi \\\nhelper_tlb_flush \\\npmp_hart_has_privs \\\npmpcfg_csr_write \\\npmpcfg_csr_read \\\npmpaddr_csr_write \\\npmpaddr_csr_read \\\ngen_intermediate_code \\\nriscv_translate_init \\\nrestore_state_to_opc \\\ncpu_riscv_init \\\nhelper_fcvt_l_s \\\nhelper_fcvt_lu_s \\\nhelper_fcvt_s_l \\\nhelper_fcvt_s_lu \\\nhelper_fcvt_l_d \\\nhelper_fcvt_lu_d \\\nhelper_fcvt_d_l \\\nhelper_fcvt_d_lu \\\ngen_helper_tlb_flush \\\nriscv_fpr_regnames \\\nriscv_int_regnames \\\n\"\n\nriscv64_SYMBOLS=${riscv32_SYMBOLS}\n\nmips_SYMBOLS=\"\nhelper_mfc0_mvpcontrol \\\nhelper_mfc0_mvpconf0 \\\nhelper_mfc0_mvpconf1 \\\nhelper_mfc0_random \\\nhelper_mfc0_tcstatus \\\nhelper_mftc0_tcstatus \\\nhelper_mfc0_tcbind \\\nhelper_mftc0_tcbind \\\nhelper_mfc0_tcrestart \\\nhelper_mftc0_tcrestart \\\nhelper_mfc0_tchalt \\\nhelper_mftc0_tchalt \\\nhelper_mfc0_tccontext \\\nhelper_mftc0_tccontext \\\nhelper_mfc0_tcschedule \\\nhelper_mftc0_tcschedule \\\nhelper_mfc0_tcschefback \\\nhelper_mftc0_tcschefback \\\nhelper_mfc0_count \\\nhelper_mfc0_saar \\\nhelper_mfhc0_saar \\\nhelper_mftc0_entryhi \\\nhelper_mftc0_cause \\\nhelper_mftc0_status \\\nhelper_mfc0_lladdr \\\nhelper_mfc0_maar \\\nhelper_mfhc0_maar \\\nhelper_mfc0_watchlo \\\nhelper_mfc0_watchhi \\\nhelper_mfhc0_watchhi \\\nhelper_mfc0_debug \\\nhelper_mftc0_debug \\\nhelper_dmfc0_tcrestart \\\nhelper_dmfc0_tchalt \\\nhelper_dmfc0_tccontext \\\nhelper_dmfc0_tcschedule \\\nhelper_dmfc0_tcschefback \\\nhelper_dmfc0_lladdr \\\nhelper_dmfc0_maar \\\nhelper_dmfc0_watchlo \\\nhelper_dmfc0_watchhi \\\nhelper_dmfc0_saar \\\nhelper_mtc0_index \\\nhelper_mtc0_mvpcontrol \\\nhelper_mtc0_vpecontrol \\\nhelper_mttc0_vpecontrol \\\nhelper_mftc0_vpecontrol \\\nhelper_mftc0_vpeconf0 \\\nhelper_mtc0_vpeconf0 \\\nhelper_mttc0_vpeconf0 \\\nhelper_mtc0_vpeconf1 \\\nhelper_mtc0_yqmask \\\nhelper_mtc0_vpeopt \\\nhelper_mtc0_entrylo0 \\\nhelper_dmtc0_entrylo0 \\\nhelper_mtc0_tcstatus \\\nhelper_mttc0_tcstatus \\\nhelper_mtc0_tcbind \\\nhelper_mttc0_tcbind \\\nhelper_mtc0_tcrestart \\\nhelper_mttc0_tcrestart \\\nhelper_mtc0_tchalt \\\nhelper_mttc0_tchalt \\\nhelper_mtc0_tccontext \\\nhelper_mttc0_tccontext \\\nhelper_mtc0_tcschedule \\\nhelper_mttc0_tcschedule \\\nhelper_mtc0_tcschefback \\\nhelper_mttc0_tcschefback \\\nhelper_mtc0_entrylo1 \\\nhelper_dmtc0_entrylo1 \\\nhelper_mtc0_context \\\nhelper_mtc0_memorymapid \\\nupdate_pagemask \\\nhelper_mtc0_pagemask \\\nhelper_mtc0_pagegrain \\\nhelper_mtc0_segctl0 \\\nhelper_mtc0_segctl1 \\\nhelper_mtc0_segctl2 \\\nhelper_mtc0_pwfield \\\nhelper_mtc0_pwsize \\\nhelper_mtc0_wired \\\nhelper_mtc0_pwctl \\\nhelper_mtc0_srsconf0 \\\nhelper_mtc0_srsconf1 \\\nhelper_mtc0_srsconf2 \\\nhelper_mtc0_srsconf3 \\\nhelper_mtc0_srsconf4 \\\nhelper_mtc0_hwrena \\\nhelper_mtc0_count \\\nhelper_mtc0_saari \\\nhelper_mtc0_saar \\\nhelper_mthc0_saar \\\nhelper_mtc0_entryhi \\\nhelper_mttc0_entryhi \\\nhelper_mtc0_compare \\\nhelper_mtc0_status \\\nhelper_mttc0_status \\\nhelper_mtc0_intctl \\\nhelper_mtc0_srsctl \\\nhelper_mtc0_cause \\\nhelper_mttc0_cause \\\nhelper_mftc0_epc \\\nhelper_mftc0_ebase \\\nhelper_mtc0_ebase \\\nhelper_mttc0_ebase \\\nhelper_mftc0_configx \\\nhelper_mtc0_config0 \\\nhelper_mtc0_config2 \\\nhelper_mtc0_config3 \\\nhelper_mtc0_config4 \\\nhelper_mtc0_config5 \\\nhelper_mtc0_lladdr \\\nhelper_mtc0_maar \\\nhelper_mthc0_maar \\\nhelper_mtc0_maari \\\nhelper_mtc0_watchlo \\\nhelper_mtc0_watchhi \\\nhelper_mthc0_watchhi \\\nhelper_mtc0_xcontext \\\nhelper_mtc0_framemask \\\nhelper_mtc0_debug \\\nhelper_mttc0_debug \\\nhelper_mtc0_performance0 \\\nhelper_mtc0_errctl \\\nhelper_mtc0_taglo \\\nhelper_mtc0_datalo \\\nhelper_mtc0_taghi \\\nhelper_mtc0_datahi \\\nhelper_mftgpr \\\nhelper_mftlo \\\nhelper_mfthi \\\nhelper_mftacx \\\nhelper_mftdsp \\\nhelper_mttgpr \\\nhelper_mttlo \\\nhelper_mtthi \\\nhelper_mttacx \\\nhelper_mttdsp \\\nhelper_dmt \\\nhelper_emt \\\nhelper_dvpe \\\nhelper_evpe \\\nhelper_dvp \\\nhelper_evp \\\ncpu_mips_get_random \\\ncpu_mips_init \\\nhelper_absq_s_ph \\\nhelper_absq_s_qb \\\nhelper_absq_s_w \\\nhelper_absq_s_ob \\\nhelper_absq_s_qh \\\nhelper_absq_s_pw \\\nhelper_addqh_ph \\\nhelper_addqh_r_ph \\\nhelper_addqh_r_w \\\nhelper_addqh_w \\\nhelper_adduh_qb \\\nhelper_adduh_r_qb \\\nhelper_subqh_ph \\\nhelper_subqh_r_ph \\\nhelper_subqh_r_w \\\nhelper_subqh_w \\\nhelper_addq_ph \\\nhelper_addq_s_ph \\\nhelper_addq_s_w \\\nhelper_addu_ph \\\nhelper_addu_qb \\\nhelper_addu_s_ph \\\nhelper_addu_s_qb \\\nhelper_subq_ph \\\nhelper_subq_s_ph \\\nhelper_subq_s_w \\\nhelper_subu_ph \\\nhelper_subu_qb \\\nhelper_subu_s_ph \\\nhelper_subu_s_qb \\\nhelper_adduh_ob \\\nhelper_adduh_r_ob \\\nhelper_subuh_ob \\\nhelper_subuh_r_ob \\\nhelper_addq_pw \\\nhelper_addq_qh \\\nhelper_addq_s_pw \\\nhelper_addq_s_qh \\\nhelper_addu_ob \\\nhelper_addu_qh \\\nhelper_addu_s_ob \\\nhelper_addu_s_qh \\\nhelper_subq_pw \\\nhelper_subq_qh \\\nhelper_subq_s_pw \\\nhelper_subq_s_qh \\\nhelper_subu_ob \\\nhelper_subu_qh \\\nhelper_subu_s_ob \\\nhelper_subu_s_qh \\\nhelper_subuh_qb \\\nhelper_subuh_r_qb \\\nhelper_addsc \\\nhelper_addwc \\\nhelper_modsub \\\nhelper_raddu_w_qb \\\nhelper_raddu_l_ob \\\nhelper_precr_qb_ph \\\nhelper_precrq_qb_ph \\\nhelper_precr_sra_ph_w \\\nhelper_precr_sra_r_ph_w \\\nhelper_precrq_ph_w \\\nhelper_precrq_rs_ph_w \\\nhelper_precr_ob_qh \\\nhelper_precr_sra_qh_pw \\\nhelper_precr_sra_r_qh_pw \\\nhelper_precrq_ob_qh \\\nhelper_precrq_qh_pw \\\nhelper_precrq_rs_qh_pw \\\nhelper_precrq_pw_l \\\nhelper_precrqu_s_qb_ph \\\nhelper_precrqu_s_ob_qh \\\nhelper_preceq_pw_qhl \\\nhelper_preceq_pw_qhr \\\nhelper_preceq_pw_qhla \\\nhelper_preceq_pw_qhra \\\nhelper_precequ_ph_qbl \\\nhelper_precequ_ph_qbr \\\nhelper_precequ_ph_qbla \\\nhelper_precequ_ph_qbra \\\nhelper_precequ_qh_obl \\\nhelper_precequ_qh_obr \\\nhelper_precequ_qh_obla \\\nhelper_precequ_qh_obra \\\nhelper_preceu_ph_qbl \\\nhelper_preceu_ph_qbr \\\nhelper_preceu_ph_qbla \\\nhelper_preceu_ph_qbra \\\nhelper_preceu_qh_obl \\\nhelper_preceu_qh_obr \\\nhelper_preceu_qh_obla \\\nhelper_preceu_qh_obra \\\nhelper_shll_qb \\\nhelper_shrl_qb \\\nhelper_shra_qb \\\nhelper_shra_r_qb \\\nhelper_shll_ob \\\nhelper_shrl_ob \\\nhelper_shra_ob \\\nhelper_shra_r_ob \\\nhelper_shll_ph \\\nhelper_shll_s_ph \\\nhelper_shll_qh \\\nhelper_shll_s_qh \\\nhelper_shrl_qh \\\nhelper_shra_qh \\\nhelper_shra_r_qh \\\nhelper_shll_s_w \\\nhelper_shra_r_w \\\nhelper_shll_pw \\\nhelper_shll_s_pw \\\nhelper_shra_pw \\\nhelper_shra_r_pw \\\nhelper_shrl_ph \\\nhelper_shra_ph \\\nhelper_shra_r_ph \\\nhelper_muleu_s_ph_qbl \\\nhelper_muleu_s_ph_qbr \\\nhelper_mulq_rs_ph \\\nhelper_mul_ph \\\nhelper_mul_s_ph \\\nhelper_mulq_s_ph \\\nhelper_muleq_s_w_phl \\\nhelper_muleq_s_w_phr \\\nhelper_mulsaq_s_w_ph \\\nhelper_mulsa_w_ph \\\nhelper_muleu_s_qh_obl \\\nhelper_muleu_s_qh_obr \\\nhelper_mulq_rs_qh \\\nhelper_muleq_s_pw_qhl \\\nhelper_muleq_s_pw_qhr \\\nhelper_mulsaq_s_w_qh \\\nhelper_dpau_h_qbl \\\nhelper_dpau_h_qbr \\\nhelper_dpsu_h_qbl \\\nhelper_dpsu_h_qbr \\\nhelper_dpau_h_obl \\\nhelper_dpau_h_obr \\\nhelper_dpsu_h_obl \\\nhelper_dpsu_h_obr \\\nhelper_dpa_w_ph \\\nhelper_dpax_w_ph \\\nhelper_dps_w_ph \\\nhelper_dpsx_w_ph \\\nhelper_dpaq_s_w_ph \\\nhelper_dpaqx_s_w_ph \\\nhelper_dpsq_s_w_ph \\\nhelper_dpsqx_s_w_ph \\\nhelper_dpaqx_sa_w_ph \\\nhelper_dpsqx_sa_w_ph \\\nhelper_dpa_w_qh \\\nhelper_dpaq_s_w_qh \\\nhelper_dps_w_qh \\\nhelper_dpsq_s_w_qh \\\nhelper_dpaq_sa_l_w \\\nhelper_dpsq_sa_l_w \\\nhelper_dpaq_sa_l_pw \\\nhelper_dpsq_sa_l_pw \\\nhelper_mulsaq_s_l_pw \\\nhelper_maq_s_w_phl \\\nhelper_maq_s_w_phr \\\nhelper_maq_sa_w_phl \\\nhelper_maq_sa_w_phr \\\nhelper_mulq_s_w \\\nhelper_mulq_rs_w \\\nhelper_maq_s_w_qhll \\\nhelper_maq_s_w_qhlr \\\nhelper_maq_s_w_qhrl \\\nhelper_maq_s_w_qhrr \\\nhelper_maq_sa_w_qhll \\\nhelper_maq_sa_w_qhlr \\\nhelper_maq_sa_w_qhrl \\\nhelper_maq_sa_w_qhrr \\\nhelper_maq_s_l_pwl \\\nhelper_maq_s_l_pwr \\\nhelper_dmadd \\\nhelper_dmaddu \\\nhelper_dmsub \\\nhelper_dmsubu \\\nhelper_bitrev \\\nhelper_insv \\\nhelper_dinsv \\\nhelper_cmpgu_eq_qb \\\nhelper_cmpgu_lt_qb \\\nhelper_cmpgu_le_qb \\\nhelper_cmpgu_eq_ob \\\nhelper_cmpgu_lt_ob \\\nhelper_cmpgu_le_ob \\\nhelper_cmpu_eq_qb \\\nhelper_cmpu_lt_qb \\\nhelper_cmpu_le_qb \\\nhelper_cmp_eq_ph \\\nhelper_cmp_lt_ph \\\nhelper_cmp_le_ph \\\nhelper_cmpu_eq_ob \\\nhelper_cmpu_lt_ob \\\nhelper_cmpu_le_ob \\\nhelper_cmp_eq_qh \\\nhelper_cmp_lt_qh \\\nhelper_cmp_le_qh \\\nhelper_cmp_eq_pw \\\nhelper_cmp_lt_pw \\\nhelper_cmp_le_pw \\\nhelper_cmpgdu_eq_ob \\\nhelper_cmpgdu_lt_ob \\\nhelper_cmpgdu_le_ob \\\nhelper_pick_qb \\\nhelper_pick_ph \\\nhelper_pick_ob \\\nhelper_pick_qh \\\nhelper_pick_pw \\\nhelper_packrl_ph \\\nhelper_packrl_pw \\\nhelper_extr_w \\\nhelper_extr_r_w \\\nhelper_extr_rs_w \\\nhelper_dextr_w \\\nhelper_dextr_r_w \\\nhelper_dextr_rs_w \\\nhelper_dextr_l \\\nhelper_dextr_r_l \\\nhelper_dextr_rs_l \\\nhelper_extr_s_h \\\nhelper_dextr_s_h \\\nhelper_extp \\\nhelper_extpdp \\\nhelper_dextp \\\nhelper_dextpdp \\\nhelper_shilo \\\nhelper_dshilo \\\nhelper_mthlip \\\nhelper_dmthlip \\\ncpu_wrdsp \\\nhelper_wrdsp \\\ncpu_rddsp \\\nhelper_rddsp \\\nhelper_cfc1 \\\nhelper_ctc1 \\\nieee_ex_to_mips \\\nhelper_float_sqrt_d \\\nhelper_float_sqrt_s \\\nhelper_float_cvtd_s \\\nhelper_float_cvtd_w \\\nhelper_float_cvtd_l \\\nhelper_float_cvt_l_d \\\nhelper_float_cvt_l_s \\\nhelper_float_cvtps_pw \\\nhelper_float_cvtpw_ps \\\nhelper_float_cvts_d \\\nhelper_float_cvts_w \\\nhelper_float_cvts_l \\\nhelper_float_cvts_pl \\\nhelper_float_cvts_pu \\\nhelper_float_cvt_w_s \\\nhelper_float_cvt_w_d \\\nhelper_float_round_l_d \\\nhelper_float_round_l_s \\\nhelper_float_round_w_d \\\nhelper_float_round_w_s \\\nhelper_float_trunc_l_d \\\nhelper_float_trunc_l_s \\\nhelper_float_trunc_w_d \\\nhelper_float_trunc_w_s \\\nhelper_float_ceil_l_d \\\nhelper_float_ceil_l_s \\\nhelper_float_ceil_w_d \\\nhelper_float_ceil_w_s \\\nhelper_float_floor_l_d \\\nhelper_float_floor_l_s \\\nhelper_float_floor_w_d \\\nhelper_float_floor_w_s \\\nhelper_float_cvt_2008_l_d \\\nhelper_float_cvt_2008_l_s \\\nhelper_float_cvt_2008_w_d \\\nhelper_float_cvt_2008_w_s \\\nhelper_float_round_2008_l_d \\\nhelper_float_round_2008_l_s \\\nhelper_float_round_2008_w_d \\\nhelper_float_round_2008_w_s \\\nhelper_float_trunc_2008_l_d \\\nhelper_float_trunc_2008_l_s \\\nhelper_float_trunc_2008_w_d \\\nhelper_float_trunc_2008_w_s \\\nhelper_float_ceil_2008_l_d \\\nhelper_float_ceil_2008_l_s \\\nhelper_float_ceil_2008_w_d \\\nhelper_float_ceil_2008_w_s \\\nhelper_float_floor_2008_l_d \\\nhelper_float_floor_2008_l_s \\\nhelper_float_floor_2008_w_d \\\nhelper_float_floor_2008_w_s \\\nhelper_float_abs_d \\\nhelper_float_abs_s \\\nhelper_float_abs_ps \\\nhelper_float_chs_d \\\nhelper_float_chs_s \\\nhelper_float_chs_ps \\\nhelper_float_recip_d \\\nhelper_float_recip_s \\\nhelper_float_rsqrt_d \\\nhelper_float_rsqrt_s \\\nhelper_float_recip1_d \\\nhelper_float_recip1_s \\\nhelper_float_recip1_ps \\\nhelper_float_rsqrt1_d \\\nhelper_float_rsqrt1_s \\\nhelper_float_rsqrt1_ps \\\nhelper_float_rint_s \\\nhelper_float_rint_d \\\nfloat_class_s \\\nhelper_float_class_s \\\nfloat_class_d \\\nhelper_float_class_d \\\nhelper_float_add_d \\\nhelper_float_add_s \\\nhelper_float_add_ps \\\nhelper_float_sub_d \\\nhelper_float_sub_s \\\nhelper_float_sub_ps \\\nhelper_float_mul_d \\\nhelper_float_mul_s \\\nhelper_float_mul_ps \\\nhelper_float_div_d \\\nhelper_float_div_s \\\nhelper_float_div_ps \\\nhelper_float_recip2_d \\\nhelper_float_recip2_s \\\nhelper_float_recip2_ps \\\nhelper_float_rsqrt2_d \\\nhelper_float_rsqrt2_s \\\nhelper_float_rsqrt2_ps \\\nhelper_float_addr_ps \\\nhelper_float_mulr_ps \\\nhelper_float_max_s \\\nhelper_float_max_d \\\nhelper_float_maxa_s \\\nhelper_float_maxa_d \\\nhelper_float_min_s \\\nhelper_float_min_d \\\nhelper_float_mina_s \\\nhelper_float_mina_d \\\nhelper_float_madd_d \\\nhelper_float_madd_s \\\nhelper_float_madd_ps \\\nhelper_float_msub_d \\\nhelper_float_msub_s \\\nhelper_float_msub_ps \\\nhelper_float_nmadd_d \\\nhelper_float_nmadd_s \\\nhelper_float_nmadd_ps \\\nhelper_float_nmsub_d \\\nhelper_float_nmsub_s \\\nhelper_float_nmsub_ps \\\nhelper_float_maddf_s \\\nhelper_float_maddf_d \\\nhelper_float_msubf_s \\\nhelper_float_msubf_d \\\nhelper_cmp_d_f \\\nhelper_cmpabs_d_f \\\nhelper_cmp_d_un \\\nhelper_cmpabs_d_un \\\nhelper_cmp_d_eq \\\nhelper_cmpabs_d_eq \\\nhelper_cmp_d_ueq \\\nhelper_cmpabs_d_ueq \\\nhelper_cmp_d_olt \\\nhelper_cmpabs_d_olt \\\nhelper_cmp_d_ult \\\nhelper_cmpabs_d_ult \\\nhelper_cmp_d_ole \\\nhelper_cmpabs_d_ole \\\nhelper_cmp_d_ule \\\nhelper_cmpabs_d_ule \\\nhelper_cmp_d_sf \\\nhelper_cmpabs_d_sf \\\nhelper_cmp_d_ngle \\\nhelper_cmpabs_d_ngle \\\nhelper_cmp_d_seq \\\nhelper_cmpabs_d_seq \\\nhelper_cmp_d_ngl \\\nhelper_cmpabs_d_ngl \\\nhelper_cmp_d_lt \\\nhelper_cmpabs_d_lt \\\nhelper_cmp_d_nge \\\nhelper_cmpabs_d_nge \\\nhelper_cmp_d_le \\\nhelper_cmpabs_d_le \\\nhelper_cmp_d_ngt \\\nhelper_cmpabs_d_ngt \\\nhelper_cmp_s_f \\\nhelper_cmpabs_s_f \\\nhelper_cmp_s_un \\\nhelper_cmpabs_s_un \\\nhelper_cmp_s_eq \\\nhelper_cmpabs_s_eq \\\nhelper_cmp_s_ueq \\\nhelper_cmpabs_s_ueq \\\nhelper_cmp_s_olt \\\nhelper_cmpabs_s_olt \\\nhelper_cmp_s_ult \\\nhelper_cmpabs_s_ult \\\nhelper_cmp_s_ole \\\nhelper_cmpabs_s_ole \\\nhelper_cmp_s_ule \\\nhelper_cmpabs_s_ule \\\nhelper_cmp_s_sf \\\nhelper_cmpabs_s_sf \\\nhelper_cmp_s_ngle \\\nhelper_cmpabs_s_ngle \\\nhelper_cmp_s_seq \\\nhelper_cmpabs_s_seq \\\nhelper_cmp_s_ngl \\\nhelper_cmpabs_s_ngl \\\nhelper_cmp_s_lt \\\nhelper_cmpabs_s_lt \\\nhelper_cmp_s_nge \\\nhelper_cmpabs_s_nge \\\nhelper_cmp_s_le \\\nhelper_cmpabs_s_le \\\nhelper_cmp_s_ngt \\\nhelper_cmpabs_s_ngt \\\nhelper_cmp_ps_f \\\nhelper_cmpabs_ps_f \\\nhelper_cmp_ps_un \\\nhelper_cmpabs_ps_un \\\nhelper_cmp_ps_eq \\\nhelper_cmpabs_ps_eq \\\nhelper_cmp_ps_ueq \\\nhelper_cmpabs_ps_ueq \\\nhelper_cmp_ps_olt \\\nhelper_cmpabs_ps_olt \\\nhelper_cmp_ps_ult \\\nhelper_cmpabs_ps_ult \\\nhelper_cmp_ps_ole \\\nhelper_cmpabs_ps_ole \\\nhelper_cmp_ps_ule \\\nhelper_cmpabs_ps_ule \\\nhelper_cmp_ps_sf \\\nhelper_cmpabs_ps_sf \\\nhelper_cmp_ps_ngle \\\nhelper_cmpabs_ps_ngle \\\nhelper_cmp_ps_seq \\\nhelper_cmpabs_ps_seq \\\nhelper_cmp_ps_ngl \\\nhelper_cmpabs_ps_ngl \\\nhelper_cmp_ps_lt \\\nhelper_cmpabs_ps_lt \\\nhelper_cmp_ps_nge \\\nhelper_cmpabs_ps_nge \\\nhelper_cmp_ps_le \\\nhelper_cmpabs_ps_le \\\nhelper_cmp_ps_ngt \\\nhelper_cmpabs_ps_ngt \\\nhelper_r6_cmp_d_af \\\nhelper_r6_cmp_d_un \\\nhelper_r6_cmp_d_eq \\\nhelper_r6_cmp_d_ueq \\\nhelper_r6_cmp_d_lt \\\nhelper_r6_cmp_d_ult \\\nhelper_r6_cmp_d_le \\\nhelper_r6_cmp_d_ule \\\nhelper_r6_cmp_d_saf \\\nhelper_r6_cmp_d_sun \\\nhelper_r6_cmp_d_seq \\\nhelper_r6_cmp_d_sueq \\\nhelper_r6_cmp_d_slt \\\nhelper_r6_cmp_d_sult \\\nhelper_r6_cmp_d_sle \\\nhelper_r6_cmp_d_sule \\\nhelper_r6_cmp_d_or \\\nhelper_r6_cmp_d_une \\\nhelper_r6_cmp_d_ne \\\nhelper_r6_cmp_d_sor \\\nhelper_r6_cmp_d_sune \\\nhelper_r6_cmp_d_sne \\\nhelper_r6_cmp_s_af \\\nhelper_r6_cmp_s_un \\\nhelper_r6_cmp_s_eq \\\nhelper_r6_cmp_s_ueq \\\nhelper_r6_cmp_s_lt \\\nhelper_r6_cmp_s_ult \\\nhelper_r6_cmp_s_le \\\nhelper_r6_cmp_s_ule \\\nhelper_r6_cmp_s_saf \\\nhelper_r6_cmp_s_sun \\\nhelper_r6_cmp_s_seq \\\nhelper_r6_cmp_s_sueq \\\nhelper_r6_cmp_s_slt \\\nhelper_r6_cmp_s_sult \\\nhelper_r6_cmp_s_sle \\\nhelper_r6_cmp_s_sule \\\nhelper_r6_cmp_s_or \\\nhelper_r6_cmp_s_une \\\nhelper_r6_cmp_s_ne \\\nhelper_r6_cmp_s_sor \\\nhelper_r6_cmp_s_sune \\\nhelper_r6_cmp_s_sne \\\nno_mmu_map_address \\\nfixed_mmu_map_address \\\nr4k_map_address \\\ncpu_mips_tlb_flush \\\nsync_c0_status \\\ncpu_mips_store_status \\\ncpu_mips_store_cause \\\nmips_cpu_get_phys_page_debug \\\nmips_cpu_tlb_fill \\\ncpu_mips_translate_address \\\nexception_resume_pc \\\nmips_cpu_do_interrupt \\\nmips_cpu_exec_interrupt \\\nr4k_invalidate_tlb \\\ndo_raise_exception_err \\\nhelper_paddsb \\\nhelper_paddusb \\\nhelper_paddsh \\\nhelper_paddush \\\nhelper_paddb \\\nhelper_paddh \\\nhelper_paddw \\\nhelper_psubsb \\\nhelper_psubusb \\\nhelper_psubsh \\\nhelper_psubush \\\nhelper_psubb \\\nhelper_psubh \\\nhelper_psubw \\\nhelper_pshufh \\\nhelper_packsswh \\\nhelper_packsshb \\\nhelper_packushb \\\nhelper_punpcklwd \\\nhelper_punpckhwd \\\nhelper_punpcklhw \\\nhelper_punpckhhw \\\nhelper_punpcklbh \\\nhelper_punpckhbh \\\nhelper_pavgh \\\nhelper_pavgb \\\nhelper_pmaxsh \\\nhelper_pminsh \\\nhelper_pmaxub \\\nhelper_pminub \\\nhelper_pcmpeqw \\\nhelper_pcmpgtw \\\nhelper_pcmpeqh \\\nhelper_pcmpgth \\\nhelper_pcmpeqb \\\nhelper_pcmpgtb \\\nhelper_psllw \\\nhelper_psrlw \\\nhelper_psraw \\\nhelper_psllh \\\nhelper_psrlh \\\nhelper_psrah \\\nhelper_pmullh \\\nhelper_pmulhh \\\nhelper_pmulhuh \\\nhelper_pmaddhw \\\nhelper_pasubub \\\nhelper_biadd \\\nhelper_pmovmskb \\\nhelper_msa_nloc_b \\\nhelper_msa_nloc_h \\\nhelper_msa_nloc_w \\\nhelper_msa_nloc_d \\\nhelper_msa_nlzc_b \\\nhelper_msa_nlzc_h \\\nhelper_msa_nlzc_w \\\nhelper_msa_nlzc_d \\\nhelper_msa_pcnt_b \\\nhelper_msa_pcnt_h \\\nhelper_msa_pcnt_w \\\nhelper_msa_pcnt_d \\\nhelper_msa_binsl_b \\\nhelper_msa_binsl_h \\\nhelper_msa_binsl_w \\\nhelper_msa_binsl_d \\\nhelper_msa_binsr_b \\\nhelper_msa_binsr_h \\\nhelper_msa_binsr_w \\\nhelper_msa_binsr_d \\\nhelper_msa_bmnz_v \\\nhelper_msa_bmz_v \\\nhelper_msa_bsel_v \\\nhelper_msa_bclr_b \\\nhelper_msa_bclr_h \\\nhelper_msa_bclr_w \\\nhelper_msa_bclr_d \\\nhelper_msa_bneg_b \\\nhelper_msa_bneg_h \\\nhelper_msa_bneg_w \\\nhelper_msa_bneg_d \\\nhelper_msa_bset_b \\\nhelper_msa_bset_h \\\nhelper_msa_bset_w \\\nhelper_msa_bset_d \\\nhelper_msa_add_a_b \\\nhelper_msa_add_a_h \\\nhelper_msa_add_a_w \\\nhelper_msa_add_a_d \\\nhelper_msa_adds_a_b \\\nhelper_msa_adds_a_h \\\nhelper_msa_adds_a_w \\\nhelper_msa_adds_a_d \\\nhelper_msa_adds_s_b \\\nhelper_msa_adds_s_h \\\nhelper_msa_adds_s_w \\\nhelper_msa_adds_s_d \\\nhelper_msa_adds_u_b \\\nhelper_msa_adds_u_h \\\nhelper_msa_adds_u_w \\\nhelper_msa_adds_u_d \\\nhelper_msa_addv_b \\\nhelper_msa_addv_h \\\nhelper_msa_addv_w \\\nhelper_msa_addv_d \\\nhelper_msa_hadd_s_h \\\nhelper_msa_hadd_s_w \\\nhelper_msa_hadd_s_d \\\nhelper_msa_hadd_u_h \\\nhelper_msa_hadd_u_w \\\nhelper_msa_hadd_u_d \\\nhelper_msa_ave_s_b \\\nhelper_msa_ave_s_h \\\nhelper_msa_ave_s_w \\\nhelper_msa_ave_s_d \\\nhelper_msa_ave_u_b \\\nhelper_msa_ave_u_h \\\nhelper_msa_ave_u_w \\\nhelper_msa_ave_u_d \\\nhelper_msa_aver_s_b \\\nhelper_msa_aver_s_h \\\nhelper_msa_aver_s_w \\\nhelper_msa_aver_s_d \\\nhelper_msa_aver_u_b \\\nhelper_msa_aver_u_h \\\nhelper_msa_aver_u_w \\\nhelper_msa_aver_u_d \\\nhelper_msa_ceq_b \\\nhelper_msa_ceq_h \\\nhelper_msa_ceq_w \\\nhelper_msa_ceq_d \\\nhelper_msa_cle_s_b \\\nhelper_msa_cle_s_h \\\nhelper_msa_cle_s_w \\\nhelper_msa_cle_s_d \\\nhelper_msa_cle_u_b \\\nhelper_msa_cle_u_h \\\nhelper_msa_cle_u_w \\\nhelper_msa_cle_u_d \\\nhelper_msa_clt_s_b \\\nhelper_msa_clt_s_h \\\nhelper_msa_clt_s_w \\\nhelper_msa_clt_s_d \\\nhelper_msa_clt_u_b \\\nhelper_msa_clt_u_h \\\nhelper_msa_clt_u_w \\\nhelper_msa_clt_u_d \\\nhelper_msa_div_s_b \\\nhelper_msa_div_s_h \\\nhelper_msa_div_s_w \\\nhelper_msa_div_s_d \\\nhelper_msa_div_u_b \\\nhelper_msa_div_u_h \\\nhelper_msa_div_u_w \\\nhelper_msa_div_u_d \\\nhelper_msa_max_a_b \\\nhelper_msa_max_a_h \\\nhelper_msa_max_a_w \\\nhelper_msa_max_a_d \\\nhelper_msa_max_s_b \\\nhelper_msa_max_s_h \\\nhelper_msa_max_s_w \\\nhelper_msa_max_s_d \\\nhelper_msa_max_u_b \\\nhelper_msa_max_u_h \\\nhelper_msa_max_u_w \\\nhelper_msa_max_u_d \\\nhelper_msa_min_a_b \\\nhelper_msa_min_a_h \\\nhelper_msa_min_a_w \\\nhelper_msa_min_a_d \\\nhelper_msa_min_s_b \\\nhelper_msa_min_s_h \\\nhelper_msa_min_s_w \\\nhelper_msa_min_s_d \\\nhelper_msa_min_u_b \\\nhelper_msa_min_u_h \\\nhelper_msa_min_u_w \\\nhelper_msa_min_u_d \\\nhelper_msa_mod_s_b \\\nhelper_msa_mod_s_h \\\nhelper_msa_mod_s_w \\\nhelper_msa_mod_s_d \\\nhelper_msa_mod_u_b \\\nhelper_msa_mod_u_h \\\nhelper_msa_mod_u_w \\\nhelper_msa_mod_u_d \\\nhelper_msa_asub_s_b \\\nhelper_msa_asub_s_h \\\nhelper_msa_asub_s_w \\\nhelper_msa_asub_s_d \\\nhelper_msa_asub_u_b \\\nhelper_msa_asub_u_h \\\nhelper_msa_asub_u_w \\\nhelper_msa_asub_u_d \\\nhelper_msa_hsub_s_h \\\nhelper_msa_hsub_s_w \\\nhelper_msa_hsub_s_d \\\nhelper_msa_hsub_u_h \\\nhelper_msa_hsub_u_w \\\nhelper_msa_hsub_u_d \\\nhelper_msa_ilvev_b \\\nhelper_msa_ilvev_h \\\nhelper_msa_ilvev_w \\\nhelper_msa_ilvev_d \\\nhelper_msa_ilvod_b \\\nhelper_msa_ilvod_h \\\nhelper_msa_ilvod_w \\\nhelper_msa_ilvod_d \\\nhelper_msa_ilvl_b \\\nhelper_msa_ilvl_h \\\nhelper_msa_ilvl_w \\\nhelper_msa_ilvl_d \\\nhelper_msa_ilvr_b \\\nhelper_msa_ilvr_h \\\nhelper_msa_ilvr_w \\\nhelper_msa_ilvr_d \\\nhelper_msa_and_v \\\nhelper_msa_nor_v \\\nhelper_msa_or_v \\\nhelper_msa_xor_v \\\nhelper_msa_move_v \\\nhelper_msa_pckev_b \\\nhelper_msa_pckev_h \\\nhelper_msa_pckev_w \\\nhelper_msa_pckev_d \\\nhelper_msa_pckod_b \\\nhelper_msa_pckod_h \\\nhelper_msa_pckod_w \\\nhelper_msa_pckod_d \\\nhelper_msa_sll_b \\\nhelper_msa_sll_h \\\nhelper_msa_sll_w \\\nhelper_msa_sll_d \\\nhelper_msa_sra_b \\\nhelper_msa_sra_h \\\nhelper_msa_sra_w \\\nhelper_msa_sra_d \\\nhelper_msa_srar_b \\\nhelper_msa_srar_h \\\nhelper_msa_srar_w \\\nhelper_msa_srar_d \\\nhelper_msa_srl_b \\\nhelper_msa_srl_h \\\nhelper_msa_srl_w \\\nhelper_msa_srl_d \\\nhelper_msa_srlr_b \\\nhelper_msa_srlr_h \\\nhelper_msa_srlr_w \\\nhelper_msa_srlr_d \\\nhelper_msa_andi_b \\\nhelper_msa_ori_b \\\nhelper_msa_nori_b \\\nhelper_msa_xori_b \\\nhelper_msa_bmnzi_b \\\nhelper_msa_bmzi_b \\\nhelper_msa_bseli_b \\\nhelper_msa_shf_df \\\nhelper_msa_addvi_df \\\nhelper_msa_subvi_df \\\nhelper_msa_ceqi_df \\\nhelper_msa_clei_s_df \\\nhelper_msa_clei_u_df \\\nhelper_msa_clti_s_df \\\nhelper_msa_clti_u_df \\\nhelper_msa_maxi_s_df \\\nhelper_msa_maxi_u_df \\\nhelper_msa_mini_s_df \\\nhelper_msa_mini_u_df \\\nhelper_msa_ldi_df \\\nhelper_msa_slli_df \\\nhelper_msa_srai_df \\\nhelper_msa_srli_df \\\nhelper_msa_bclri_df \\\nhelper_msa_bseti_df \\\nhelper_msa_bnegi_df \\\nhelper_msa_sat_s_df \\\nhelper_msa_sat_u_df \\\nhelper_msa_srari_df \\\nhelper_msa_srlri_df \\\nhelper_msa_binsli_df \\\nhelper_msa_binsri_df \\\nhelper_msa_subv_df \\\nhelper_msa_subs_s_df \\\nhelper_msa_subs_u_df \\\nhelper_msa_subsus_u_df \\\nhelper_msa_subsuu_s_df \\\nhelper_msa_mulv_df \\\nhelper_msa_dotp_s_df \\\nhelper_msa_dotp_u_df \\\nhelper_msa_mul_q_df \\\nhelper_msa_mulr_q_df \\\nhelper_msa_sld_df \\\nhelper_msa_maddv_df \\\nhelper_msa_msubv_df \\\nhelper_msa_dpadd_s_df \\\nhelper_msa_dpadd_u_df \\\nhelper_msa_dpsub_s_df \\\nhelper_msa_dpsub_u_df \\\nhelper_msa_binsl_df \\\nhelper_msa_binsr_df \\\nhelper_msa_madd_q_df \\\nhelper_msa_msub_q_df \\\nhelper_msa_maddr_q_df \\\nhelper_msa_msubr_q_df \\\nhelper_msa_splat_df \\\nhelper_msa_vshf_df \\\nhelper_msa_sldi_df \\\nhelper_msa_splati_df \\\nhelper_msa_copy_s_b \\\nhelper_msa_copy_s_h \\\nhelper_msa_copy_s_w \\\nhelper_msa_copy_s_d \\\nhelper_msa_copy_u_b \\\nhelper_msa_copy_u_h \\\nhelper_msa_copy_u_w \\\nhelper_msa_insert_b \\\nhelper_msa_insert_h \\\nhelper_msa_insert_w \\\nhelper_msa_insert_d \\\nhelper_msa_insve_df \\\nhelper_msa_ctcmsa \\\nhelper_msa_cfcmsa \\\nhelper_msa_fill_df \\\nhelper_msa_fcaf_df \\\nhelper_msa_fcun_df \\\nhelper_msa_fceq_df \\\nhelper_msa_fcueq_df \\\nhelper_msa_fclt_df \\\nhelper_msa_fcult_df \\\nhelper_msa_fcle_df \\\nhelper_msa_fcule_df \\\nhelper_msa_fsaf_df \\\nhelper_msa_fsun_df \\\nhelper_msa_fseq_df \\\nhelper_msa_fsueq_df \\\nhelper_msa_fslt_df \\\nhelper_msa_fsult_df \\\nhelper_msa_fsle_df \\\nhelper_msa_fsule_df \\\nhelper_msa_fcor_df \\\nhelper_msa_fcune_df \\\nhelper_msa_fcne_df \\\nhelper_msa_fsor_df \\\nhelper_msa_fsune_df \\\nhelper_msa_fsne_df \\\nhelper_msa_fadd_df \\\nhelper_msa_fsub_df \\\nhelper_msa_fmul_df \\\nhelper_msa_fdiv_df \\\nhelper_msa_fmadd_df \\\nhelper_msa_fmsub_df \\\nhelper_msa_fexp2_df \\\nhelper_msa_fexdo_df \\\nhelper_msa_ftq_df \\\nhelper_msa_fmin_df \\\nhelper_msa_fmin_a_df \\\nhelper_msa_fmax_df \\\nhelper_msa_fmax_a_df \\\nhelper_msa_fclass_df \\\nhelper_msa_ftrunc_s_df \\\nhelper_msa_ftrunc_u_df \\\nhelper_msa_fsqrt_df \\\nhelper_msa_frsqrt_df \\\nhelper_msa_frcp_df \\\nhelper_msa_frint_df \\\nhelper_msa_flog2_df \\\nhelper_msa_fexupl_df \\\nhelper_msa_fexupr_df \\\nhelper_msa_ffql_df \\\nhelper_msa_ffqr_df \\\nhelper_msa_ftint_s_df \\\nhelper_msa_ftint_u_df \\\nhelper_msa_ffint_s_df \\\nhelper_msa_ffint_u_df \\\nhelper_raise_exception_err \\\nhelper_raise_exception \\\nhelper_raise_exception_debug \\\nhelper_muls \\\nhelper_mulsu \\\nhelper_macc \\\nhelper_macchi \\\nhelper_maccu \\\nhelper_macchiu \\\nhelper_msac \\\nhelper_msachi \\\nhelper_msacu \\\nhelper_msachiu \\\nhelper_mulhi \\\nhelper_mulhiu \\\nhelper_mulshi \\\nhelper_mulshiu \\\nhelper_dbitswap \\\nhelper_bitswap \\\nhelper_rotx \\\nhelper_ll \\\nhelper_lld \\\nhelper_swl \\\nhelper_swr \\\nhelper_sdl \\\nhelper_sdr \\\nhelper_lwm \\\nhelper_swm \\\nhelper_ldm \\\nhelper_sdm \\\nhelper_fork \\\nhelper_yield \\\nr4k_helper_tlbinv \\\nr4k_helper_tlbinvf \\\nr4k_helper_tlbwi \\\nr4k_helper_tlbwr \\\nr4k_helper_tlbp \\\nr4k_helper_tlbr \\\nhelper_tlbwi \\\nhelper_tlbwr \\\nhelper_tlbp \\\nhelper_tlbr \\\nhelper_tlbinv \\\nhelper_tlbinvf \\\nhelper_ginvt \\\nhelper_di \\\nhelper_ei \\\nhelper_eret \\\nhelper_eretnc \\\nhelper_deret \\\nhelper_rdhwr_cpunum \\\nhelper_rdhwr_synci_step \\\nhelper_rdhwr_cc \\\nhelper_rdhwr_ccres \\\nhelper_rdhwr_performance \\\nhelper_rdhwr_xnp \\\nhelper_pmon \\\nhelper_wait \\\nmips_cpu_do_unaligned_access \\\nmips_cpu_do_transaction_failed \\\nhelper_msa_ld_b \\\nhelper_msa_ld_h \\\nhelper_msa_ld_w \\\nhelper_msa_ld_d \\\nhelper_msa_st_b \\\nhelper_msa_st_h \\\nhelper_msa_st_w \\\nhelper_msa_st_d \\\nhelper_cache \\\ngen_intermediate_code \\\nmips_tcg_init \\\ncpu_mips_realize_env \\\ncpu_state_reset \\\nrestore_state_to_opc \\\nieee_rm \\\nmips_defs \\\nmips_defs_number \\\ngen_helper_float_class_s \\\ngen_helper_float_class_d \\\n\"\n\nmipsel_SYMBOLS=${mips_SYMBOLS}\n\nmips64_SYMBOLS=${mips_SYMBOLS}\n\nmips64el_SYMBOLS=${mips_SYMBOLS}\n\nsparc_SYMBOLS=\"\nhelper_compute_psr \\\nhelper_compute_C_icc \\\ncpu_sparc_set_id \\\ncpu_sparc_init \\\nhelper_check_ieee_exceptions \\\nhelper_fadds \\\nhelper_faddd \\\nhelper_faddq \\\nhelper_fsubs \\\nhelper_fsubd \\\nhelper_fsubq \\\nhelper_fmuls \\\nhelper_fmuld \\\nhelper_fmulq \\\nhelper_fdivs \\\nhelper_fdivd \\\nhelper_fdivq \\\nhelper_fsmuld \\\nhelper_fsmulq \\\nhelper_fdmulq \\\nhelper_fnegs \\\nhelper_fnegd \\\nhelper_fnegq \\\nhelper_fitos \\\nhelper_fitod \\\nhelper_fitoq \\\nhelper_fxtos \\\nhelper_fxtod \\\nhelper_fxtoq \\\nhelper_fdtos \\\nhelper_fstod \\\nhelper_fqtos \\\nhelper_fstoq \\\nhelper_fqtod \\\nhelper_fdtoq \\\nhelper_fstoi \\\nhelper_fdtoi \\\nhelper_fqtoi \\\nhelper_fstox \\\nhelper_fdtox \\\nhelper_fqtox \\\nhelper_fabss \\\nhelper_fabsd \\\nhelper_fabsq \\\nhelper_fsqrts \\\nhelper_fsqrtd \\\nhelper_fsqrtq \\\nhelper_fcmps \\\nhelper_fcmpd \\\nhelper_fcmpes \\\nhelper_fcmped \\\nhelper_fcmpq \\\nhelper_fcmpeq \\\nhelper_fcmps_fcc1 \\\nhelper_fcmpd_fcc1 \\\nhelper_fcmpq_fcc1 \\\nhelper_fcmps_fcc2 \\\nhelper_fcmpd_fcc2 \\\nhelper_fcmpq_fcc2 \\\nhelper_fcmps_fcc3 \\\nhelper_fcmpd_fcc3 \\\nhelper_fcmpq_fcc3 \\\nhelper_fcmpes_fcc1 \\\nhelper_fcmped_fcc1 \\\nhelper_fcmpeq_fcc1 \\\nhelper_fcmpes_fcc2 \\\nhelper_fcmped_fcc2 \\\nhelper_fcmpeq_fcc2 \\\nhelper_fcmpes_fcc3 \\\nhelper_fcmped_fcc3 \\\nhelper_fcmpeq_fcc3 \\\nhelper_ldfsr \\\nhelper_ldxfsr \\\ncpu_raise_exception_ra \\\nhelper_raise_exception \\\nhelper_debug \\\nhelper_tick_set_count \\\nhelper_tick_get_count \\\nhelper_tick_set_limit \\\nhelper_udiv \\\nhelper_udiv_cc \\\nhelper_sdiv \\\nhelper_sdiv_cc \\\nhelper_sdivx \\\nhelper_udivx \\\nhelper_taddcctv \\\nhelper_tsubcctv \\\nhelper_power_down \\\nsparc_cpu_do_interrupt \\\nleon3_irq_manager \\\nsparc_cpu_do_interrupt \\\ncpu_tsptr \\\nhelper_set_softint \\\nhelper_clear_softint \\\nhelper_write_softint \\\nhelper_check_align \\\nhelper_ld_asi \\\nhelper_st_asi \\\nsparc_cpu_do_transaction_failed \\\nsparc_cpu_do_unaligned_access \\\nsparc_cpu_tlb_fill \\\nmmu_probe \\\nsparc_cpu_memory_rw_debug \\\ncpu_get_phys_page_nofault \\\nsparc_cpu_get_phys_page_debug \\\ngen_intermediate_code \\\nsparc_tcg_init \\\nrestore_state_to_opc \\\ncpu_set_cwp \\\ncpu_get_psr \\\ncpu_put_psr_raw \\\ncpu_put_psr \\\ncpu_cwp_inc \\\ncpu_cwp_dec \\\nhelper_rett \\\nhelper_save \\\nhelper_restore \\\nhelper_flushw \\\nhelper_saved \\\nhelper_restored \\\nhelper_wrpsr \\\nhelper_rdpsr \\\ncpu_get_ccr \\\ncpu_put_ccr \\\ncpu_get_cwp64 \\\ncpu_put_cwp64 \\\nhelper_rdccr \\\nhelper_wrccr \\\nhelper_rdcwp \\\nhelper_wrcwp \\\ncpu_gl_switch_gregs \\\nhelper_wrgl \\\ncpu_change_pstate \\\nhelper_wrpstate \\\nhelper_wrpil \\\nhelper_done \\\nhelper_retry \\\n\"\n\nsparc64_SYMBOLS=${sparc_SYMBOLS}\n\nm68k_SYMBOLS=\"\ncpu_m68k_init \\\nhelper_reds32 \\\nhelper_redf32 \\\nhelper_exts32 \\\nhelper_extf32 \\\nhelper_extf64 \\\nhelper_redf64 \\\nhelper_firound \\\ncpu_m68k_set_fpcr \\\nhelper_fitrunc \\\nhelper_set_fpcr \\\nhelper_fsround \\\nhelper_fdround \\\nhelper_fsqrt \\\nhelper_fssqrt \\\nhelper_fdsqrt \\\nhelper_fabs \\\nhelper_fsabs \\\nhelper_fdabs \\\nhelper_fneg \\\nhelper_fsneg \\\nhelper_fdneg \\\nhelper_fadd \\\nhelper_fsadd \\\nhelper_fdadd \\\nhelper_fsub \\\nhelper_fssub \\\nhelper_fdsub \\\nhelper_fmul \\\nhelper_fsmul \\\nhelper_fdmul \\\nhelper_fsglmul \\\nhelper_fdiv \\\nhelper_fsdiv \\\nhelper_fddiv \\\nhelper_fsgldiv \\\nhelper_fcmp \\\nhelper_ftst \\\nhelper_fconst \\\nhelper_fmovemx_st_predec \\\nhelper_fmovemx_st_postinc \\\nhelper_fmovemx_ld_postinc \\\nhelper_fmovemd_st_predec \\\nhelper_fmovemd_st_postinc \\\nhelper_fmovemd_ld_postinc \\\nhelper_fmod \\\nhelper_frem \\\nhelper_fgetexp \\\nhelper_fgetman \\\nhelper_fscale \\\nhelper_flognp1 \\\nhelper_flogn \\\nhelper_flog10 \\\nhelper_flog2 \\\nhelper_fetox \\\nhelper_ftwotox \\\nhelper_ftentox \\\nhelper_ftan \\\nhelper_fsin \\\nhelper_fcos \\\nhelper_fsincos \\\nhelper_fatan \\\nhelper_fasin \\\nhelper_facos \\\nhelper_fatanh \\\nhelper_ftanh \\\nhelper_fsinh \\\nhelper_fcosh \\\nhelper_cf_movec_to \\\nhelper_m68k_movec_to \\\nhelper_m68k_movec_from \\\nhelper_set_macsr \\\nm68k_switch_sp \\\nm68k_cpu_get_phys_page_debug \\\nm68k_set_irq_level \\\nm68k_cpu_tlb_fill \\\nhelper_bitrev \\\nhelper_ff1 \\\nhelper_sats \\\ncpu_m68k_set_sr \\\nhelper_set_sr \\\nhelper_mac_move \\\nhelper_macmuls \\\nhelper_macmulu \\\nhelper_macmulf \\\nhelper_macsats \\\nhelper_macsatu \\\nhelper_macsatf \\\nhelper_mac_set_flags \\\ncpu_m68k_get_ccr \\\nhelper_get_ccr \\\ncpu_m68k_set_ccr \\\nhelper_set_ccr \\\nhelper_flush_flags \\\nhelper_get_macf \\\nhelper_get_macs \\\nhelper_get_macu \\\nhelper_get_mac_extf \\\nhelper_get_mac_exti \\\nhelper_set_mac_extf \\\nhelper_set_mac_exts \\\nhelper_set_mac_extu \\\nhelper_ptest \\\nhelper_pflush \\\nhelper_reset \\\nm68k_cpu_do_interrupt \\\nm68k_cpu_transaction_failed \\\nm68k_cpu_exec_interrupt \\\nhelper_raise_exception \\\nhelper_divuw \\\nhelper_divsw \\\nhelper_divul \\\nhelper_divsl \\\nhelper_divull \\\nhelper_divsll \\\nhelper_cas2w \\\nhelper_cas2l \\\nhelper_cas2l_parallel \\\nhelper_bfexts_mem \\\nhelper_bfextu_mem \\\nhelper_bfins_mem \\\nhelper_bfchg_mem \\\nhelper_bfclr_mem \\\nhelper_bfset_mem \\\nhelper_bfffo_reg \\\nhelper_bfffo_mem \\\nhelper_chk \\\nhelper_chk2 \\\nfloatx80_mod \\\nfloatx80_getman \\\nfloatx80_getexp \\\nfloatx80_scale \\\nfloatx80_move \\\nfloatx80_lognp1 \\\nfloatx80_logn \\\nfloatx80_log10 \\\nfloatx80_log2 \\\nfloatx80_etox \\\nfloatx80_twotox \\\nfloatx80_tentox \\\nfloatx80_tan \\\nfloatx80_sin \\\nfloatx80_cos \\\nfloatx80_atan \\\nfloatx80_asin \\\nfloatx80_acos \\\nfloatx80_atanh \\\nfloatx80_etoxm1 \\\nfloatx80_tanh \\\nfloatx80_sinh \\\nfloatx80_cosh \\\nm68k_tcg_init \\\nregister_m68k_insns \\\ngen_intermediate_code \\\nrestore_state_to_opc \\\n\"\n\nppc_SYMBOLS=\"\nppc_cpu_unrealize \\\nppc_cpu_instance_finalize \\\nppc_cpu_do_interrupt \\\nppc_cpu_do_system_reset \\\nppc_cpu_do_fwnmi_machine_check \\\nppc_cpu_exec_interrupt \\\nraise_exception_err_ra \\\nraise_exception_err \\\nraise_exception \\\nraise_exception_ra \\\nhelper_raise_exception_err \\\nhelper_store_msr \\\nhelper_rfi \\\nhelper_40x_rfci \\\nhelper_rfdi \\\nhelper_rfci \\\nhelper_rfmci \\\nhelper_tw \\\nhelper_rfsvc \\\nhelper_msgclr \\\nhelper_msgsnd \\\nhelper_book3s_msgclr \\\nppc_cpu_do_unaligned_access \\\nhelper_divweu \\\nhelper_divwe \\\nhelper_sraw \\\nhelper_popcntb \\\nhelper_div \\\nhelper_divo \\\nhelper_divs \\\nhelper_divso \\\nhelper_602_mfrom \\\nhelper_mtvscr \\\nhelper_vaddcuw \\\nhelper_vprtybw \\\nhelper_vprtybd \\\nhelper_vprtybq \\\nhelper_vmuluwm \\\nhelper_vaddfp \\\nhelper_vsubfp \\\nhelper_vminfp \\\nhelper_vmaxfp \\\nhelper_vmaddfp \\\nhelper_vnmsubfp \\\nhelper_vaddsbs \\\nhelper_vsubsbs \\\nhelper_vsubshs \\\nhelper_vaddsws \\\nhelper_vsubsws \\\nhelper_vaddubs \\\nhelper_vsububs \\\nhelper_vadduhs \\\nhelper_vsubuhs \\\nhelper_vadduws \\\nhelper_vsubuws \\\nhelper_vavgsb \\\nhelper_vavgub \\\nhelper_vavgsh \\\nhelper_vavguh \\\nhelper_vavgsw \\\nhelper_vabsdub \\\nhelper_vabsduh \\\nhelper_vabsduw \\\nhelper_vcfux \\\nhelper_vcfsx \\\nhelper_vcmpequb \\\nhelper_vcmpequb_dot \\\nhelper_vcmpequw \\\nhelper_vcmpequw_dot \\\nhelper_vcmpequd \\\nhelper_vcmpequd_dot \\\nhelper_vcmpgtub \\\nhelper_vcmpgtub_dot \\\nhelper_vcmpgtuh \\\nhelper_vcmpgtuh_dot \\\nhelper_vcmpgtuw \\\nhelper_vcmpgtuw_dot \\\nhelper_vcmpgtud \\\nhelper_vcmpgtud_dot \\\nhelper_vcmpgtud \\\nhelper_vcmpgtud_dot \\\nhelper_vcmpgtsb \\\nhelper_vcmpgtsb_dot \\\nhelper_vcmpgtsh \\\nhelper_vcmpgtsh_dot \\\nhelper_vcmpgtsw \\\nhelper_vcmpgtsw_dot \\\nhelper_vcmpgtsd \\\nhelper_vcmpgtsd_dot \\\nhelper_vcmpnezb \\\nhelper_vcmpnezb_dot \\\nhelper_vcmpnezb \\\nhelper_vcmpnezb_dot \\\nhelper_vcmpnezw \\\nhelper_vcmpnezw_dot \\\nhelper_vcmpneb \\\nhelper_vcmpneb_dot \\\nhelper_vcmpneb \\\nhelper_vcmpneb_dot \\\nhelper_vcmpneh \\\nhelper_vcmpneh_dot \\\nhelper_vcmpnew \\\nhelper_vcmpnew_dot \\\nhelper_vcmpeqfp \\\nhelper_vcmpeqfp_dot \\\nhelper_vcmpgefp \\\nhelper_vcmpgefp_dot \\\nhelper_vcmpgtfp \\\nhelper_vcmpgtfp_dot \\\nhelper_vcmpbfp \\\nhelper_vcmpbfp_dot \\\nhelper_vcmpbfp \\\nhelper_vcmpbfp_dot \\\nhelper_vctuxs \\\nhelper_vctsxs \\\nhelper_vclzlsbb \\\nhelper_vctzlsbb \\\nhelper_vmhaddshs \\\nhelper_vmhraddshs \\\nhelper_vmladduhm \\\nhelper_vmhraddshs \\\nhelper_vmladduhm \\\nhelper_vmrglb \\\nhelper_vmrghb \\\nhelper_vmrglh \\\nhelper_vmrghh \\\nhelper_vmrglw \\\nhelper_vmrghw \\\nhelper_vmsummbm \\\nhelper_vmsumshs \\\nhelper_vmsumubm \\\nhelper_vmsumuhm \\\nhelper_vmulesb \\\nhelper_vmulosb \\\nhelper_vmulesh \\\nhelper_vmulesw \\\nhelper_vmuleub \\\nhelper_vmuloub \\\nhelper_vmuleuh \\\nhelper_vmulouh \\\nhelper_vmuleuw \\\nhelper_vmulouw \\\nhelper_vperm \\\nhelper_vpermr \\\nhelper_vbpermd \\\nhelper_vpmsumb \\\nhelper_vpmsumh \\\nhelper_vpmsumw \\\nhelper_vpmsumd \\\nhelper_vpkpx \\\nhelper_vpkshss \\\nhelper_vpkshus \\\nhelper_vpkswss \\\nhelper_vpkswus \\\nhelper_vpksdss \\\nhelper_vpksdus \\\nhelper_vpkuhus \\\nhelper_vpkuwus \\\nhelper_vpkudus \\\nhelper_vpkuhum \\\nhelper_vpkuwum \\\nhelper_vpkudum \\\nhelper_vrefp \\\nhelper_vrfin \\\nhelper_vrfim \\\nhelper_vrfip \\\nhelper_vrfiz \\\nhelper_vrlb \\\nhelper_vrlh \\\nhelper_vrlw \\\nhelper_vrld \\\nhelper_vrsqrtefp \\\nhelper_vrldmi \\\nhelper_vrlwmi \\\nhelper_vrldnm \\\nhelper_vrlwnm \\\nhelper_vsel \\\nhelper_vexptefp \\\nhelper_vlogefp \\\nhelper_vextublx \\\nhelper_vextuhlx \\\nhelper_vextuwlx \\\nhelper_vextubrx \\\nhelper_vextuhrx \\\nhelper_vextuwrx \\\nhelper_vslv \\\nhelper_vsrv \\\nhelper_vsldoi \\\nhelper_vslo \\\nhelper_vinsertb \\\nhelper_vinserth \\\nhelper_vinsertw \\\nhelper_vinsertd \\\nhelper_vextractub \\\nhelper_vextractuh \\\nhelper_vextractuw \\\nhelper_vextractd \\\nhelper_xxextractuw \\\nhelper_xxinsertw \\\nhelper_vextsb2w \\\nhelper_vextsb2d \\\nhelper_vextsh2w \\\nhelper_vextsh2d \\\nhelper_vnegw \\\nhelper_vnegd \\\nhelper_vsro \\\nhelper_vsubcuw \\\nhelper_vsumsws \\\nhelper_vsum2sws \\\nhelper_vsum4sbs \\\nhelper_vsum4shs \\\nhelper_vsum4ubs \\\nhelper_vupklpx \\\nhelper_vupkhpx \\\nhelper_vupkhsb \\\nhelper_vupkhsh \\\nhelper_vupkhsw \\\nhelper_vupklsb \\\nhelper_vupklsh \\\nhelper_vupklsw \\\nhelper_vclzb \\\nhelper_vclzh \\\nhelper_vctzb \\\nhelper_vctzh \\\nhelper_vctzw \\\nhelper_vctzd \\\nhelper_vpopcntb \\\nhelper_vpopcnth \\\nhelper_vpopcntw \\\nhelper_vpopcntd \\\nhelper_vadduqm \\\nhelper_vaddeuqm \\\nhelper_vaddcuq \\\nhelper_vaddecuq \\\nhelper_vsubuqm \\\nhelper_vsubeuqm \\\nhelper_vsubcuq \\\nhelper_vsubecuq \\\nhelper_bcdadd \\\nhelper_bcdsub \\\nhelper_bcdcfn \\\nhelper_bcdctn \\\nhelper_bcdcfz \\\nhelper_bcdctz \\\nhelper_bcdcfsq \\\nhelper_bcdctsq \\\nhelper_bcdcpsgn \\\nhelper_bcdsetsgn \\\nhelper_bcds \\\nhelper_bcdus \\\nhelper_bcdsr \\\nhelper_bcdtrunc \\\nhelper_bcdutrunc \\\nhelper_vsbox \\\nhelper_vcipher \\\nhelper_vcipherlast \\\nhelper_vncipher \\\nhelper_vncipherlast \\\nhelper_vshasigmaw \\\nhelper_vshasigmad \\\nhelper_vpermxor \\\nhelper_brinc \\\nhelper_cntlsw32 \\\nhelper_cntlzw32 \\\nhelper_dlmzb \\\nhelper_lmw \\\nhelper_lsw \\\nhelper_lswx \\\nhelper_stsw \\\nhelper_dcbz \\\nhelper_dcbzep \\\nhelper_icbi \\\nhelper_icbiep \\\nhelper_lscbx \\\nhelper_lvebx \\\nhelper_lvehx \\\nhelper_lvewx \\\nhelper_stvebx \\\nhelper_stvehx \\\nhelper_stvewx \\\nhelper_tbegin \\\nhelper_load_dump_spr \\\nhelper_store_dump_spr \\\nhelper_hfscr_facility_check \\\nhelper_fscr_facility_check \\\nhelper_msr_facility_check \\\nhelper_store_sdr1 \\\nhelper_store_pidr \\\nhelper_store_lpidr \\\nhelper_store_hid0_601 \\\nhelper_store_403_pbr \\\nhelper_store_40x_dbcr0 \\\nhelper_store_40x_sler \\\nhelper_clcs \\\nppc_store_msr \\\nhelper_fixup_thrm \\\nstore_40x_sler \\\ndump_mmu \\\nppc_cpu_get_phys_page_debug \\\nhelper_store_ibatu \\\nhelper_store_ibatl \\\nhelper_store_dbatu \\\nhelper_store_dbatl \\\nhelper_store_601_batu \\\nhelper_store_601_batl \\\nppc_tlb_invalidate_all \\\nppc_tlb_invalidate_one \\\nppc_store_sdr1 \\\nhelper_load_sr \\\nhelper_store_sr \\\nhelper_tlbia \\\nhelper_tlbie \\\nhelper_tlbiva \\\nhelper_6xx_tlbd \\\nhelper_6xx_tlbi \\\nhelper_74xx_tlbd \\\nhelper_74xx_tlbi \\\nhelper_rac \\\nhelper_4xx_tlbre_hi \\\nhelper_4xx_tlbre_lo \\\nhelper_4xx_tlbwe_hi \\\nhelper_4xx_tlbwe_lo \\\nhelper_4xx_tlbsx \\\nhelper_440_tlbwe \\\nhelper_440_tlbre \\\nhelper_440_tlbsx \\\nhelper_booke_setpid \\\nhelper_booke_set_eplc \\\nhelper_booke_set_epsc \\\nhelper_booke206_tlbwe \\\nhelper_booke206_tlbre \\\nhelper_booke206_tlbsx \\\nhelper_booke206_tlbivax \\\nhelper_booke206_tlbilx0 \\\nhelper_booke206_tlbilx1 \\\nhelper_booke206_tlbilx3 \\\nhelper_booke206_tlbflush \\\nhelper_check_tlb_flush_local \\\nhelper_check_tlb_flush_global \\\nppc_cpu_tlb_fill \\\nhelper_load_tbl \\\nhelper_load_tbu \\\nhelper_load_atbl \\\nhelper_load_atbu \\\nhelper_load_vtb \\\nhelper_load_601_rtcl \\\nhelper_load_601_rtcu \\\nhelper_store_tbl \\\nhelper_store_tbu \\\nhelper_store_atbl \\\nhelper_store_atbu \\\nhelper_store_601_rtcl \\\nhelper_store_601_rtcu \\\nhelper_load_decr \\\nhelper_store_decr \\\nhelper_load_hdecr \\\nhelper_store_hdecr \\\nhelper_store_vtb \\\nhelper_store_tbu40 \\\nhelper_load_40x_pit \\\nhelper_store_40x_pit \\\nhelper_store_booke_tcr \\\nhelper_store_booke_tsr \\\nhelper_load_dcr \\\nhelper_store_dcr \\\nhelper_raise_exception \\\nhelper_book3s_msgsnd \\\nhelper_cmpb \\\nhelper_mfvscr \\\nhelper_vaddshs \\\nhelper_vavguw \\\nhelper_vcmpequh \\\nhelper_vcmpequh_dot \\\nhelper_vcmpnezh \\\nhelper_vcmpnezh_dot \\\nhelper_vmsumshm \\\nhelper_vmsumuhs \\\nhelper_vmulosh \\\nhelper_vmulosw \\\nhelper_vbpermq \\\nhelper_vextsw2d \\\nhelper_stmw \\\nppc_translate_init \\\ncpu_ppc_init \\\ngen_intermediate_code \\\nrestore_state_to_opc \\\nppc_set_irq \\\nppc6xx_irq_init \\\nppc40x_core_reset \\\nppc40x_chip_reset \\\nppc40x_system_reset \\\nstore_40x_dbcr0 \\\nppc40x_irq_init \\\nppce500_irq_init \\\nppce500_set_mpic_proxy \\\ncpu_ppc_get_tb \\\ncpu_ppc_load_tbl \\\ncpu_ppc_load_tbu \\\ncpu_ppc_store_tbl \\\ncpu_ppc_store_tbu \\\ncpu_ppc_load_atbl \\\ncpu_ppc_load_atbu \\\ncpu_ppc_store_atbl \\\ncpu_ppc_store_atbu \\\ncpu_ppc_load_vtb \\\ncpu_ppc_store_vtb \\\ncpu_ppc_store_tbu40 \\\nppc_decr_clear_on_delivery \\\ncpu_ppc_load_decr \\\ncpu_ppc_load_hdecr \\\ncpu_ppc_load_purr \\\ncpu_ppc_store_decr \\\ncpu_ppc_store_hdecr \\\ncpu_ppc_store_purr \\\ncpu_ppc_tb_init \\\ncpu_ppc601_load_rtcu \\\ncpu_ppc601_store_rtcu \\\ncpu_ppc601_load_rtcl \\\ncpu_ppc601_store_rtcl \\\nload_40x_pit \\\nstore_40x_pit \\\nppc_40x_timers_init \\\nppc_dcr_read \\\nppc_dcr_write \\\nppc_dcr_register \\\nppc_dcr_init \\\nppc_cpu_pir \\\nppc_irq_reset \\\nstore_booke_tsr \\\nget_pteg_offset32 \\\nppc_booke_timers_init \\\nppc_hash32_handle_mmu_fault \\\ngen_helper_store_booke_tsr \\\ngen_helper_store_booke_tcr \\\nstore_booke_tcr \\\nppc_hash32_get_phys_page_debug \\\n\"\n\nppc64_SYMBOLS=${ppc_SYMBOLS}\n\ns390x_SYMBOLS=\"helper_uc_s390x_exit \\\ntcg_s390_tod_updated \\\ntcg_s390_program_interrupt \\\ntcg_s390_data_exception \\\n\"\n\ntricore_SYMBOLS=\"\nhelper_fadd \\\nhelper_fsub \\\nhelper_fmul \\\nhelper_fdiv \\\nhelper_fmadd \\\nhelper_fmsub \\\nhelper_pack \\\ngen_intermediate_code \\\nrestore_state_to_opc \\\nhelper_uc_tricore_exit \\\n\"\n\nARCHS=\"x86_64 arm aarch64 riscv32 riscv64 mips mipsel mips64 mips64el sparc sparc64 m68k ppc ppc64 s390x tricore\"\n\nfor arch in $ARCHS; do\n\necho \"Generating header for $arch\"\necho \"/* Autogen header for Unicorn Engine - DONOT MODIFY */\" > $SOURCE_DIR/qemu/$arch.h\necho \"#ifndef UNICORN_AUTOGEN_${arch}_H\" >> $SOURCE_DIR/qemu/$arch.h\necho \"#define UNICORN_AUTOGEN_${arch}_H\" >> $SOURCE_DIR/qemu/$arch.h\necho \"#ifndef UNICORN_ARCH_POSTFIX\" >> $SOURCE_DIR/qemu/$arch.h\necho \"#define UNICORN_ARCH_POSTFIX _$arch\" >> $SOURCE_DIR/qemu/$arch.h\necho \"#endif\" >> $SOURCE_DIR/qemu/$arch.h\n\nfor loop in $COMMON_SYMBOLS; do\n    echo \"#define $loop ${loop}_${arch}\" >> $SOURCE_DIR/qemu/$arch.h\ndone\n\nARCH_SYMBOLS=$(eval echo '$'\"${arch}_SYMBOLS\")\n\n#echo ${ARCH_SYMBOLS}\n\nfor loop in $ARCH_SYMBOLS; do\n    echo \"#define $loop ${loop}_${arch}\" >> $SOURCE_DIR/qemu/$arch.h\ndone\n\necho \"#endif\" >> $SOURCE_DIR/qemu/$arch.h\n\ndone\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "uc.c",
          "type": "blob",
          "size": 74.984375,
          "content": "/* Unicorn Emulator Engine */\n/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2015 */\n/* Modified for Unicorn Engine by Chen Huitao<chenhuitao@hfmrit.com>, 2020 */\n\n#include \"unicorn/unicorn.h\"\n#if defined(UNICORN_HAS_OSXKERNEL)\n#include <libkern/libkern.h>\n#else\n#include <stddef.h>\n#include <stdio.h>\n#include <stdlib.h>\n#endif\n\n#include <time.h> // nanosleep\n#include <string.h>\n\n#include \"uc_priv.h\"\n\n// target specific headers\n#include \"qemu/target/m68k/unicorn.h\"\n#include \"qemu/target/i386/unicorn.h\"\n#include \"qemu/target/arm/unicorn.h\"\n#include \"qemu/target/mips/unicorn.h\"\n#include \"qemu/target/sparc/unicorn.h\"\n#include \"qemu/target/ppc/unicorn.h\"\n#include \"qemu/target/riscv/unicorn.h\"\n#include \"qemu/target/s390x/unicorn.h\"\n#include \"qemu/target/tricore/unicorn.h\"\n\n#include \"qemu/include/tcg/tcg-apple-jit.h\"\n#include \"qemu/include/qemu/queue.h\"\n#include \"qemu-common.h\"\n\nstatic void clear_deleted_hooks(uc_engine *uc);\nstatic uc_err uc_snapshot(uc_engine *uc);\nstatic uc_err uc_restore_latest_snapshot(uc_engine *uc);\n\n#if defined(__APPLE__) && defined(HAVE_PTHREAD_JIT_PROTECT) &&                 \\\n    defined(HAVE_SPRR) && (defined(__arm__) || defined(__aarch64__))\nstatic void save_jit_state(uc_engine *uc)\n{\n    if (!uc->nested) {\n        uc->thread_executable_entry = thread_executable();\n        uc->current_executable = uc->thread_executable_entry;\n    }\n\n    uc->nested += 1;\n}\n\nstatic void restore_jit_state(uc_engine *uc)\n{\n    assert(uc->nested > 0);\n    if (uc->nested == 1) {\n        assert(uc->current_executable == thread_executable());\n        if (uc->current_executable != uc->thread_executable_entry) {\n            if (uc->thread_executable_entry) {\n                jit_write_protect(true);\n            } else {\n                jit_write_protect(false);\n            }\n        }\n    }\n    uc->nested -= 1;\n}\n#else\nstatic void save_jit_state(uc_engine *uc)\n{\n    (void)uc;\n}\nstatic void restore_jit_state(uc_engine *uc)\n{\n    (void)uc;\n}\n#endif\n\nstatic void *hook_insert(struct list *l, struct hook *h)\n{\n    void *item = list_insert(l, (void *)h);\n    if (item) {\n        h->refs++;\n    }\n    return item;\n}\n\nstatic void *hook_append(struct list *l, struct hook *h)\n{\n    void *item = list_append(l, (void *)h);\n    if (item) {\n        h->refs++;\n    }\n    return item;\n}\n\nstatic void hook_invalidate_region(void *key, void *data, void *opaq)\n{\n    uc_engine *uc = (uc_engine *)opaq;\n    HookedRegion *region = (HookedRegion *)key;\n\n    uc->uc_invalidate_tb(uc, region->start, region->length);\n}\n\nstatic void hook_delete(void *data)\n{\n    struct hook *h = (struct hook *)data;\n\n    h->refs--;\n\n    if (h->refs == 0) {\n        g_hash_table_destroy(h->hooked_regions);\n        free(h);\n    }\n}\n\nUNICORN_EXPORT\nunsigned int uc_version(unsigned int *major, unsigned int *minor)\n{\n    if (major != NULL && minor != NULL) {\n        *major = UC_API_MAJOR;\n        *minor = UC_API_MINOR;\n    }\n\n    return (UC_API_MAJOR << 24) + (UC_API_MINOR << 16) + (UC_API_PATCH << 8) +\n           UC_API_EXTRA;\n}\n\nstatic uc_err default_reg_read(void *env, int mode, unsigned int regid,\n                               void *value, size_t *size)\n{\n    return UC_ERR_HANDLE;\n}\n\nstatic uc_err default_reg_write(void *env, int mode, unsigned int regid,\n                                const void *value, size_t *size, int *setpc)\n{\n    return UC_ERR_HANDLE;\n}\n\nUNICORN_EXPORT\nuc_err uc_errno(uc_engine *uc)\n{\n    return uc->errnum;\n}\n\nUNICORN_EXPORT\nconst char *uc_strerror(uc_err code)\n{\n    switch (code) {\n    default:\n        return \"Unknown error code\";\n    case UC_ERR_OK:\n        return \"OK (UC_ERR_OK)\";\n    case UC_ERR_NOMEM:\n        return \"No memory available or memory not present (UC_ERR_NOMEM)\";\n    case UC_ERR_ARCH:\n        return \"Invalid/unsupported architecture (UC_ERR_ARCH)\";\n    case UC_ERR_HANDLE:\n        return \"Invalid handle (UC_ERR_HANDLE)\";\n    case UC_ERR_MODE:\n        return \"Invalid mode (UC_ERR_MODE)\";\n    case UC_ERR_VERSION:\n        return \"Different API version between core & binding (UC_ERR_VERSION)\";\n    case UC_ERR_READ_UNMAPPED:\n        return \"Invalid memory read (UC_ERR_READ_UNMAPPED)\";\n    case UC_ERR_WRITE_UNMAPPED:\n        return \"Invalid memory write (UC_ERR_WRITE_UNMAPPED)\";\n    case UC_ERR_FETCH_UNMAPPED:\n        return \"Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)\";\n    case UC_ERR_HOOK:\n        return \"Invalid hook type (UC_ERR_HOOK)\";\n    case UC_ERR_INSN_INVALID:\n        return \"Invalid instruction (UC_ERR_INSN_INVALID)\";\n    case UC_ERR_MAP:\n        return \"Invalid memory mapping (UC_ERR_MAP)\";\n    case UC_ERR_WRITE_PROT:\n        return \"Write to write-protected memory (UC_ERR_WRITE_PROT)\";\n    case UC_ERR_READ_PROT:\n        return \"Read from non-readable memory (UC_ERR_READ_PROT)\";\n    case UC_ERR_FETCH_PROT:\n        return \"Fetch from non-executable memory (UC_ERR_FETCH_PROT)\";\n    case UC_ERR_ARG:\n        return \"Invalid argument (UC_ERR_ARG)\";\n    case UC_ERR_READ_UNALIGNED:\n        return \"Read from unaligned memory (UC_ERR_READ_UNALIGNED)\";\n    case UC_ERR_WRITE_UNALIGNED:\n        return \"Write to unaligned memory (UC_ERR_WRITE_UNALIGNED)\";\n    case UC_ERR_FETCH_UNALIGNED:\n        return \"Fetch from unaligned memory (UC_ERR_FETCH_UNALIGNED)\";\n    case UC_ERR_RESOURCE:\n        return \"Insufficient resource (UC_ERR_RESOURCE)\";\n    case UC_ERR_EXCEPTION:\n        return \"Unhandled CPU exception (UC_ERR_EXCEPTION)\";\n    case UC_ERR_OVERFLOW:\n        return \"Provided buffer is too small (UC_ERR_OVERFLOW)\";\n    }\n}\n\nUNICORN_EXPORT\nbool uc_arch_supported(uc_arch arch)\n{\n    switch (arch) {\n#ifdef UNICORN_HAS_ARM\n    case UC_ARCH_ARM:\n        return true;\n#endif\n#ifdef UNICORN_HAS_ARM64\n    case UC_ARCH_ARM64:\n        return true;\n#endif\n#ifdef UNICORN_HAS_M68K\n    case UC_ARCH_M68K:\n        return true;\n#endif\n#ifdef UNICORN_HAS_MIPS\n    case UC_ARCH_MIPS:\n        return true;\n#endif\n#ifdef UNICORN_HAS_PPC\n    case UC_ARCH_PPC:\n        return true;\n#endif\n#ifdef UNICORN_HAS_SPARC\n    case UC_ARCH_SPARC:\n        return true;\n#endif\n#ifdef UNICORN_HAS_X86\n    case UC_ARCH_X86:\n        return true;\n#endif\n#ifdef UNICORN_HAS_RISCV\n    case UC_ARCH_RISCV:\n        return true;\n#endif\n#ifdef UNICORN_HAS_S390X\n    case UC_ARCH_S390X:\n        return true;\n#endif\n#ifdef UNICORN_HAS_TRICORE\n    case UC_ARCH_TRICORE:\n        return true;\n#endif\n    /* Invalid or disabled arch */\n    default:\n        return false;\n    }\n}\n\n#define UC_INIT(uc)                                                            \\\n    save_jit_state(uc);                                                        \\\n    if (unlikely(!(uc)->init_done)) {                                          \\\n        int __init_ret = uc_init_engine(uc);                                   \\\n        if (unlikely(__init_ret != UC_ERR_OK)) {                               \\\n            return __init_ret;                                                 \\\n        }                                                                      \\\n    }\n\nstatic gint uc_exits_cmp(gconstpointer a, gconstpointer b, gpointer user_data)\n{\n    uint64_t lhs = *((uint64_t *)a);\n    uint64_t rhs = *((uint64_t *)b);\n\n    if (lhs < rhs) {\n        return -1;\n    } else if (lhs == rhs) {\n        return 0;\n    } else {\n        return 1;\n    }\n}\n\nstatic uc_err uc_init_engine(uc_engine *uc)\n{\n    if (uc->init_done) {\n        return UC_ERR_HANDLE;\n    }\n\n    uc->hooks_to_del.delete_fn = hook_delete;\n\n    for (int i = 0; i < UC_HOOK_MAX; i++) {\n        uc->hook[i].delete_fn = hook_delete;\n    }\n\n    uc->ctl_exits = g_tree_new_full(uc_exits_cmp, NULL, g_free, NULL);\n\n    if (machine_initialize(uc)) {\n        return UC_ERR_RESOURCE;\n    }\n\n    // init tlb function\n    if (!uc->cpu->cc->tlb_fill) {\n        uc->set_tlb(uc, UC_TLB_CPU);\n    }\n\n    // init fpu softfloat\n    uc->softfloat_initialize();\n\n    if (uc->reg_reset) {\n        uc->reg_reset(uc);\n    }\n\n    uc->context_content = UC_CTL_CONTEXT_CPU;\n\n    uc->unmapped_regions = g_array_new(false, false, sizeof(MemoryRegion *));\n\n    uc->init_done = true;\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_open(uc_arch arch, uc_mode mode, uc_engine **result)\n{\n    struct uc_struct *uc;\n\n    if (arch < UC_ARCH_MAX) {\n        uc = calloc(1, sizeof(*uc));\n        if (!uc) {\n            // memory insufficient\n            return UC_ERR_NOMEM;\n        }\n\n        /* qemu/exec.c: phys_map_node_reserve() */\n        uc->alloc_hint = 16;\n        uc->errnum = UC_ERR_OK;\n        uc->arch = arch;\n        uc->mode = mode;\n        uc->reg_read = default_reg_read;\n        uc->reg_write = default_reg_write;\n\n        // uc->ram_list = { .blocks = QLIST_HEAD_INITIALIZER(ram_list.blocks) };\n        QLIST_INIT(&uc->ram_list.blocks);\n\n        QTAILQ_INIT(&uc->memory_listeners);\n\n        QTAILQ_INIT(&uc->address_spaces);\n\n        switch (arch) {\n        default:\n            break;\n#ifdef UNICORN_HAS_M68K\n        case UC_ARCH_M68K:\n            if ((mode & ~UC_MODE_M68K_MASK) || !(mode & UC_MODE_BIG_ENDIAN)) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            uc->init_arch = uc_init_m68k;\n            break;\n#endif\n#ifdef UNICORN_HAS_X86\n        case UC_ARCH_X86:\n            if ((mode & ~UC_MODE_X86_MASK) || (mode & UC_MODE_BIG_ENDIAN) ||\n                !(mode & (UC_MODE_16 | UC_MODE_32 | UC_MODE_64))) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            uc->init_arch = uc_init_x86_64;\n            break;\n#endif\n#ifdef UNICORN_HAS_ARM\n        case UC_ARCH_ARM:\n            if ((mode & ~UC_MODE_ARM_MASK)) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            uc->init_arch = uc_init_arm;\n\n            if (mode & UC_MODE_THUMB) {\n                uc->thumb = 1;\n            }\n            break;\n#endif\n#ifdef UNICORN_HAS_ARM64\n        case UC_ARCH_ARM64:\n            if (mode & ~UC_MODE_ARM_MASK) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            uc->init_arch = uc_init_aarch64;\n            break;\n#endif\n\n#if defined(UNICORN_HAS_MIPS) || defined(UNICORN_HAS_MIPSEL) ||                \\\n    defined(UNICORN_HAS_MIPS64) || defined(UNICORN_HAS_MIPS64EL)\n        case UC_ARCH_MIPS:\n            if ((mode & ~UC_MODE_MIPS_MASK) ||\n                !(mode & (UC_MODE_MIPS32 | UC_MODE_MIPS64))) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            if (mode & UC_MODE_BIG_ENDIAN) {\n#ifdef UNICORN_HAS_MIPS\n                if (mode & UC_MODE_MIPS32) {\n                    uc->init_arch = uc_init_mips;\n                }\n#endif\n#ifdef UNICORN_HAS_MIPS64\n                if (mode & UC_MODE_MIPS64) {\n                    uc->init_arch = uc_init_mips64;\n                }\n#endif\n            } else { // little endian\n#ifdef UNICORN_HAS_MIPSEL\n                if (mode & UC_MODE_MIPS32) {\n                    uc->init_arch = uc_init_mipsel;\n                }\n#endif\n#ifdef UNICORN_HAS_MIPS64EL\n                if (mode & UC_MODE_MIPS64) {\n                    uc->init_arch = uc_init_mips64el;\n                }\n#endif\n            }\n            break;\n#endif\n\n#ifdef UNICORN_HAS_SPARC\n        case UC_ARCH_SPARC:\n            if ((mode & ~UC_MODE_SPARC_MASK) || !(mode & UC_MODE_BIG_ENDIAN) ||\n                !(mode & (UC_MODE_SPARC32 | UC_MODE_SPARC64))) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            if (mode & UC_MODE_SPARC64) {\n                uc->init_arch = uc_init_sparc64;\n            } else {\n                uc->init_arch = uc_init_sparc;\n            }\n            break;\n#endif\n#ifdef UNICORN_HAS_PPC\n        case UC_ARCH_PPC:\n            if ((mode & ~UC_MODE_PPC_MASK) || !(mode & UC_MODE_BIG_ENDIAN) ||\n                !(mode & (UC_MODE_PPC32 | UC_MODE_PPC64))) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            if (mode & UC_MODE_PPC64) {\n                uc->init_arch = uc_init_ppc64;\n            } else {\n                uc->init_arch = uc_init_ppc;\n            }\n            break;\n#endif\n#ifdef UNICORN_HAS_RISCV\n        case UC_ARCH_RISCV:\n            if ((mode & ~UC_MODE_RISCV_MASK) ||\n                !(mode & (UC_MODE_RISCV32 | UC_MODE_RISCV64))) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            if (mode & UC_MODE_RISCV32) {\n                uc->init_arch = uc_init_riscv32;\n            } else if (mode & UC_MODE_RISCV64) {\n                uc->init_arch = uc_init_riscv64;\n            } else {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            break;\n#endif\n#ifdef UNICORN_HAS_S390X\n        case UC_ARCH_S390X:\n            if ((mode & ~UC_MODE_S390X_MASK) || !(mode & UC_MODE_BIG_ENDIAN)) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            uc->init_arch = uc_init_s390x;\n            break;\n#endif\n#ifdef UNICORN_HAS_TRICORE\n        case UC_ARCH_TRICORE:\n            if ((mode & ~UC_MODE_TRICORE_MASK)) {\n                free(uc);\n                return UC_ERR_MODE;\n            }\n            uc->init_arch = uc_init_tricore;\n            break;\n#endif\n        }\n\n        if (uc->init_arch == NULL) {\n            free(uc);\n            return UC_ERR_ARCH;\n        }\n\n        uc->init_done = false;\n        uc->cpu_model = INT_MAX; // INT_MAX means the default cpu model.\n\n        *result = uc;\n\n        return UC_ERR_OK;\n    } else {\n        return UC_ERR_ARCH;\n    }\n}\n\nUNICORN_EXPORT\nuc_err uc_close(uc_engine *uc)\n{\n    int i;\n    MemoryRegion *mr;\n\n    if (!uc->init_done) {\n        free(uc);\n        return UC_ERR_OK;\n    }\n\n    // Cleanup internally.\n    if (uc->release) {\n        uc->release(uc->tcg_ctx);\n    }\n    g_free(uc->tcg_ctx);\n\n    // Cleanup CPU.\n    g_free(uc->cpu->cpu_ases);\n    g_free(uc->cpu->thread);\n\n    /* cpu */\n    free(uc->cpu);\n\n    /* flatviews */\n    g_hash_table_destroy(uc->flat_views);\n\n    // During flatviews destruction, we may still access memory regions.\n    // So we free them afterwards.\n    /* memory */\n    mr = &uc->io_mem_unassigned;\n    mr->destructor(mr);\n    mr = uc->system_io;\n    mr->destructor(mr);\n    mr = uc->system_memory;\n    mr->destructor(mr);\n    g_free(uc->system_memory);\n    g_free(uc->system_io);\n    for (size_t i = 0; i < uc->unmapped_regions->len; i++) {\n        mr = g_array_index(uc->unmapped_regions, MemoryRegion *, i);\n        mr->destructor(mr);\n        g_free(mr);\n    }\n    g_array_free(uc->unmapped_regions, true);\n\n    // Thread relateds.\n    if (uc->qemu_thread_data) {\n        g_free(uc->qemu_thread_data);\n    }\n\n    /* free */\n    g_free(uc->init_target_page);\n\n    // Other auxilaries.\n    g_free(uc->l1_map);\n\n    if (uc->bounce.buffer) {\n        qemu_vfree(uc->bounce.buffer);\n    }\n\n    // free hooks and hook lists\n    clear_deleted_hooks(uc);\n\n    for (i = 0; i < UC_HOOK_MAX; i++) {\n        list_clear(&uc->hook[i]);\n    }\n\n    free(uc->mapped_blocks);\n\n    g_tree_destroy(uc->ctl_exits);\n\n    // finally, free uc itself.\n    memset(uc, 0, sizeof(*uc));\n    free(uc);\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_read_batch(uc_engine *uc, int *regs, void **vals, int count)\n{\n    UC_INIT(uc);\n    reg_read_t reg_read = uc->reg_read;\n    void *env = uc->cpu->env_ptr;\n    int mode = uc->mode;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        void *value = vals[i];\n        size_t size = (size_t)-1;\n        uc_err err = reg_read(env, mode, regid, value, &size);\n        if (err) {\n            restore_jit_state(uc);\n            return err;\n        }\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_write_batch(uc_engine *uc, int *regs, void *const *vals,\n                          int count)\n{\n    UC_INIT(uc);\n    reg_write_t reg_write = uc->reg_write;\n    void *env = uc->cpu->env_ptr;\n    int mode = uc->mode;\n    int setpc = 0;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        const void *value = vals[i];\n        size_t size = (size_t)-1;\n        uc_err err = reg_write(env, mode, regid, value, &size, &setpc);\n        if (err) {\n            restore_jit_state(uc);\n            return err;\n        }\n    }\n    if (setpc) {\n        // force to quit execution and flush TB\n        uc->quit_request = true;\n        break_translation_loop(uc);\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_read_batch2(uc_engine *uc, int *regs, void *const *vals,\n                          size_t *sizes, int count)\n{\n    UC_INIT(uc);\n    reg_read_t reg_read = uc->reg_read;\n    void *env = uc->cpu->env_ptr;\n    int mode = uc->mode;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        void *value = vals[i];\n        uc_err err = reg_read(env, mode, regid, value, sizes + i);\n        if (err) {\n            restore_jit_state(uc);\n            return err;\n        }\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_write_batch2(uc_engine *uc, int *regs, const void *const *vals,\n                           size_t *sizes, int count)\n{\n    UC_INIT(uc);\n    reg_write_t reg_write = uc->reg_write;\n    void *env = uc->cpu->env_ptr;\n    int mode = uc->mode;\n    int setpc = 0;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        const void *value = vals[i];\n        uc_err err = reg_write(env, mode, regid, value, sizes + i, &setpc);\n        if (err) {\n            restore_jit_state(uc);\n            return err;\n        }\n    }\n    if (setpc) {\n        // force to quit execution and flush TB\n        uc->quit_request = true;\n        break_translation_loop(uc);\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_read(uc_engine *uc, int regid, void *value)\n{\n    UC_INIT(uc);\n    size_t size = (size_t)-1;\n    uc_err err = uc->reg_read(uc->cpu->env_ptr, uc->mode, regid, value, &size);\n    restore_jit_state(uc);\n    return err;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_write(uc_engine *uc, int regid, const void *value)\n{\n    UC_INIT(uc);\n    int setpc = 0;\n    size_t size = (size_t)-1;\n    uc_err err =\n        uc->reg_write(uc->cpu->env_ptr, uc->mode, regid, value, &size, &setpc);\n    if (err) {\n        restore_jit_state(uc);\n        return err;\n    }\n    if (setpc) {\n        // force to quit execution and flush TB\n        uc->quit_request = true;\n        break_translation_loop(uc);\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_read2(uc_engine *uc, int regid, void *value, size_t *size)\n{\n    UC_INIT(uc);\n    uc_err err = uc->reg_read(uc->cpu->env_ptr, uc->mode, regid, value, size);\n    restore_jit_state(uc);\n    return err;\n}\n\nUNICORN_EXPORT\nuc_err uc_reg_write2(uc_engine *uc, int regid, const void *value, size_t *size)\n{\n    UC_INIT(uc);\n    int setpc = 0;\n    uc_err err =\n        uc->reg_write(uc->cpu->env_ptr, uc->mode, regid, value, size, &setpc);\n    if (err) {\n        restore_jit_state(uc);\n        return err;\n    }\n    if (setpc) {\n        // force to quit execution and flush TB\n        uc->quit_request = true;\n        break_translation_loop(uc);\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nstatic size_t memory_region_len(uc_engine *uc, MemoryRegion *mr,\n                                uint64_t address, size_t count)\n{\n    hwaddr end = mr->end;\n    while (mr->container != uc->system_memory) {\n        mr = mr->container;\n        end += mr->addr;\n    }\n    return (size_t)MIN(count, end - address);\n}\n\n// check if a memory area is mapped\n// this is complicated because an area can overlap adjacent blocks\nstatic bool check_mem_area(uc_engine *uc, uint64_t address, size_t size)\n{\n    size_t count = 0, len;\n\n    while (count < size) {\n        MemoryRegion *mr = uc->memory_mapping(uc, address);\n        if (mr) {\n            len = memory_region_len(uc, mr, address, size - count);\n            count += len;\n            address += len;\n        } else { // this address is not mapped in yet\n            break;\n        }\n    }\n\n    return (count == size);\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_read(uc_engine *uc, uint64_t address, void *_bytes, size_t size)\n{\n    size_t count = 0, len;\n    uint8_t *bytes = _bytes;\n\n    UC_INIT(uc);\n\n    // qemu cpu_physical_memory_rw() size is an int\n    if (size > INT_MAX) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    if (!check_mem_area(uc, address, size)) {\n        restore_jit_state(uc);\n        return UC_ERR_READ_UNMAPPED;\n    }\n\n    // memory area can overlap adjacent memory blocks\n    while (count < size) {\n        MemoryRegion *mr = uc->memory_mapping(uc, address);\n        if (mr) {\n            len = memory_region_len(uc, mr, address, size - count);\n            if (uc->read_mem(&uc->address_space_memory, address, bytes, len) ==\n                false) {\n                break;\n            }\n            count += len;\n            address += len;\n            bytes += len;\n        } else { // this address is not mapped in yet\n            break;\n        }\n    }\n\n    if (count == size) {\n        restore_jit_state(uc);\n        return UC_ERR_OK;\n    } else {\n        restore_jit_state(uc);\n        return UC_ERR_READ_UNMAPPED;\n    }\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_write(uc_engine *uc, uint64_t address, const void *_bytes,\n                    size_t size)\n{\n    size_t count = 0, len;\n    const uint8_t *bytes = _bytes;\n\n    UC_INIT(uc);\n\n    // qemu cpu_physical_memory_rw() size is an int\n    if (size > INT_MAX) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    if (!check_mem_area(uc, address, size)) {\n        restore_jit_state(uc);\n        return UC_ERR_WRITE_UNMAPPED;\n    }\n\n    // memory area can overlap adjacent memory blocks\n    while (count < size) {\n        MemoryRegion *mr = uc->memory_mapping(uc, address);\n        if (mr) {\n            uint32_t operms = mr->perms;\n            uint64_t align = uc->target_page_align;\n            if (!(operms & UC_PROT_WRITE)) { // write protected\n                // but this is not the program accessing memory, so temporarily\n                // mark writable\n                uc->readonly_mem(mr, false);\n            }\n\n            len = memory_region_len(uc, mr, address, size - count);\n            if (uc->snapshot_level && uc->snapshot_level > mr->priority) {\n                mr = uc->memory_cow(uc, mr, address & ~align,\n                                    (len + (address & align) + align) & ~align);\n                if (!mr) {\n                    return UC_ERR_NOMEM;\n                }\n            }\n            if (uc->write_mem(&uc->address_space_memory, address, bytes, len) ==\n                false) {\n                break;\n            }\n\n            if (!(operms & UC_PROT_WRITE)) { // write protected\n                // now write protect it again\n                uc->readonly_mem(mr, true);\n            }\n\n            count += len;\n            address += len;\n            bytes += len;\n        } else { // this address is not mapped in yet\n            break;\n        }\n    }\n\n    if (count == size) {\n        restore_jit_state(uc);\n        return UC_ERR_OK;\n    } else {\n        restore_jit_state(uc);\n        return UC_ERR_WRITE_UNMAPPED;\n    }\n}\n\n#define TIMEOUT_STEP 2 // microseconds\nstatic void *_timeout_fn(void *arg)\n{\n    struct uc_struct *uc = arg;\n    int64_t current_time = get_clock();\n\n    do {\n        usleep(TIMEOUT_STEP);\n        // perhaps emulation is even done before timeout?\n        if (uc->emulation_done) {\n            break;\n        }\n    } while ((uint64_t)(get_clock() - current_time) < uc->timeout);\n\n    // timeout before emulation is done?\n    if (!uc->emulation_done) {\n        uc->timed_out = true;\n        // force emulation to stop\n        uc_emu_stop(uc);\n    }\n\n    return NULL;\n}\n\nstatic void enable_emu_timer(uc_engine *uc, uint64_t timeout)\n{\n    uc->timeout = timeout;\n    qemu_thread_create(uc, &uc->timer, \"timeout\", _timeout_fn, uc,\n                       QEMU_THREAD_JOINABLE);\n}\n\nstatic void hook_count_cb(struct uc_struct *uc, uint64_t address, uint32_t size,\n                          void *user_data)\n{\n    // count this instruction. ah ah ah.\n    uc->emu_counter++;\n    // printf(\":: emu counter = %u, at %lx\\n\", uc->emu_counter, address);\n\n    if (uc->emu_counter > uc->emu_count) {\n        // printf(\":: emu counter = %u, stop emulation\\n\", uc->emu_counter);\n        uc_emu_stop(uc);\n    }\n}\n\nstatic void clear_deleted_hooks(uc_engine *uc)\n{\n    struct list_item *cur;\n    struct hook *hook;\n    int i;\n\n    for (cur = uc->hooks_to_del.head;\n         cur != NULL && (hook = (struct hook *)cur->data); cur = cur->next) {\n        assert(hook->to_delete);\n        for (i = 0; i < UC_HOOK_MAX; i++) {\n            if (list_remove(&uc->hook[i], (void *)hook)) {\n                break;\n            }\n        }\n    }\n\n    list_clear(&uc->hooks_to_del);\n}\n\nUNICORN_EXPORT\nuc_err uc_emu_start(uc_engine *uc, uint64_t begin, uint64_t until,\n                    uint64_t timeout, size_t count)\n{\n    uc_err err;\n\n    // reset the counter\n    uc->emu_counter = 0;\n    uc->invalid_error = UC_ERR_OK;\n    uc->emulation_done = false;\n    uc->size_recur_mem = 0;\n    uc->timed_out = false;\n    uc->first_tb = true;\n\n    // Avoid nested uc_emu_start saves wrong jit states.\n    if (uc->nested_level == 0) {\n        UC_INIT(uc);\n    }\n\n    // Advance the nested levels. We must decrease the level count by one when\n    // we return from uc_emu_start.\n    if (uc->nested_level >= UC_MAX_NESTED_LEVEL) {\n        // We can't support so many nested levels.\n        return UC_ERR_RESOURCE;\n    }\n    uc->nested_level++;\n\n    uint32_t begin_pc32 = READ_DWORD(begin);\n    switch (uc->arch) {\n    default:\n        break;\n#ifdef UNICORN_HAS_M68K\n    case UC_ARCH_M68K:\n        uc_reg_write(uc, UC_M68K_REG_PC, &begin_pc32);\n        break;\n#endif\n#ifdef UNICORN_HAS_X86\n    case UC_ARCH_X86:\n        switch (uc->mode) {\n        default:\n            break;\n        case UC_MODE_16: {\n            uint16_t ip;\n            uint16_t cs;\n\n            uc_reg_read(uc, UC_X86_REG_CS, &cs);\n            // compensate for later adding up IP & CS\n            ip = begin - cs * 16;\n            uc_reg_write(uc, UC_X86_REG_IP, &ip);\n            break;\n        }\n        case UC_MODE_32:\n            uc_reg_write(uc, UC_X86_REG_EIP, &begin_pc32);\n            break;\n        case UC_MODE_64:\n            uc_reg_write(uc, UC_X86_REG_RIP, &begin);\n            break;\n        }\n        break;\n#endif\n#ifdef UNICORN_HAS_ARM\n    case UC_ARCH_ARM:\n        uc_reg_write(uc, UC_ARM_REG_R15, &begin_pc32);\n        break;\n#endif\n#ifdef UNICORN_HAS_ARM64\n    case UC_ARCH_ARM64:\n        uc_reg_write(uc, UC_ARM64_REG_PC, &begin);\n        break;\n#endif\n#ifdef UNICORN_HAS_MIPS\n    case UC_ARCH_MIPS:\n        // TODO: MIPS32/MIPS64/BIGENDIAN etc\n        uc_reg_write(uc, UC_MIPS_REG_PC, &begin_pc32);\n        break;\n#endif\n#ifdef UNICORN_HAS_SPARC\n    case UC_ARCH_SPARC:\n        // TODO: Sparc/Sparc64\n        uc_reg_write(uc, UC_SPARC_REG_PC, &begin);\n        break;\n#endif\n#ifdef UNICORN_HAS_PPC\n    case UC_ARCH_PPC:\n        if (uc->mode & UC_MODE_PPC64) {\n            uc_reg_write(uc, UC_PPC_REG_PC, &begin);\n        } else {\n            uc_reg_write(uc, UC_PPC_REG_PC, &begin_pc32);\n        }\n        break;\n#endif\n#ifdef UNICORN_HAS_RISCV\n    case UC_ARCH_RISCV:\n        if (uc->mode & UC_MODE_RISCV64) {\n            uc_reg_write(uc, UC_RISCV_REG_PC, &begin);\n        } else {\n            uc_reg_write(uc, UC_RISCV_REG_PC, &begin_pc32);\n        }\n        break;\n#endif\n#ifdef UNICORN_HAS_S390X\n    case UC_ARCH_S390X:\n        uc_reg_write(uc, UC_S390X_REG_PC, &begin);\n        break;\n#endif\n#ifdef UNICORN_HAS_TRICORE\n    case UC_ARCH_TRICORE:\n        uc_reg_write(uc, UC_TRICORE_REG_PC, &begin_pc32);\n        break;\n#endif\n    }\n\n    uc->stop_request = false;\n\n    uc->emu_count = count;\n    // remove count hook if counting isn't necessary\n    if (count <= 0 && uc->count_hook != 0) {\n        uc_hook_del(uc, uc->count_hook);\n        uc->count_hook = 0;\n\n        // In this case, we have to drop all translated blocks.\n        uc->tb_flush(uc);\n    }\n    // set up count hook to count instructions.\n    if (count > 0 && uc->count_hook == 0) {\n        uc_err err;\n        // callback to count instructions must be run before everything else,\n        // so instead of appending, we must insert the hook at the begin\n        // of the hook list\n        uc->hook_insert = 1;\n        err = uc_hook_add(uc, &uc->count_hook, UC_HOOK_CODE, hook_count_cb,\n                          NULL, 1, 0);\n        // restore to append mode for uc_hook_add()\n        uc->hook_insert = 0;\n        if (err != UC_ERR_OK) {\n            uc->nested_level--;\n            return err;\n        }\n    }\n\n    // If UC_CTL_UC_USE_EXITS is set, then the @until param won't have any\n    // effect. This is designed for the backward compatibility.\n    if (!uc->use_exits) {\n        uc->exits[uc->nested_level - 1] = until;\n    }\n\n    if (timeout) {\n        enable_emu_timer(uc, timeout * 1000); // microseconds -> nanoseconds\n    }\n\n    uc->vm_start(uc);\n\n    uc->nested_level--;\n\n    // emulation is done if and only if we exit the outer uc_emu_start\n    // or we may lost uc_emu_stop\n    if (uc->nested_level == 0) {\n        uc->emulation_done = true;\n\n        // remove hooks to delete\n        // make sure we delete all hooks at the first level.\n        clear_deleted_hooks(uc);\n\n        restore_jit_state(uc);\n    }\n\n    if (timeout) {\n        // wait for the timer to finish\n        qemu_thread_join(&uc->timer);\n    }\n\n    // We may be in a nested uc_emu_start and thus clear invalid_error\n    // once we are done.\n    err = uc->invalid_error;\n    uc->invalid_error = 0;\n    return err;\n}\n\nUNICORN_EXPORT\nuc_err uc_emu_stop(uc_engine *uc)\n{\n    UC_INIT(uc);\n    uc->stop_request = true;\n    uc_err err = break_translation_loop(uc);\n    restore_jit_state(uc);\n    return err;\n}\n\n// return target index where a memory region at the address exists, or could be\n// inserted\n//\n// address either is inside the mapping at the returned index, or is in free\n// space before the next mapping.\n//\n// if there is overlap, between regions, ending address will be higher than the\n// starting address of the mapping at returned index\nstatic int bsearch_mapped_blocks(const uc_engine *uc, uint64_t address)\n{\n    int left, right, mid;\n    MemoryRegion *mapping;\n\n    left = 0;\n    right = uc->mapped_block_count;\n\n    while (left < right) {\n        mid = left + (right - left) / 2;\n\n        mapping = uc->mapped_blocks[mid];\n\n        if (mapping->end - 1 < address) {\n            left = mid + 1;\n        } else if (mapping->addr > address) {\n            right = mid;\n        } else {\n            return mid;\n        }\n    }\n\n    return left;\n}\n\n// find if a memory range overlaps with existing mapped regions\nstatic bool memory_overlap(struct uc_struct *uc, uint64_t begin, size_t size)\n{\n    unsigned int i;\n    uint64_t end = begin + size - 1;\n\n    i = bsearch_mapped_blocks(uc, begin);\n\n    // is this the highest region with no possible overlap?\n    if (i >= uc->mapped_block_count)\n        return false;\n\n    // end address overlaps this region?\n    if (end >= uc->mapped_blocks[i]->addr)\n        return true;\n\n    // not found\n\n    return false;\n}\n\n// common setup/error checking shared between uc_mem_map and uc_mem_map_ptr\nstatic uc_err mem_map(uc_engine *uc, MemoryRegion *block)\n{\n\n    MemoryRegion **regions;\n    int pos;\n\n    if (block == NULL) {\n        return UC_ERR_NOMEM;\n    }\n\n    if ((uc->mapped_block_count & (MEM_BLOCK_INCR - 1)) == 0) { // time to grow\n        regions = (MemoryRegion **)g_realloc(\n            uc->mapped_blocks,\n            sizeof(MemoryRegion *) * (uc->mapped_block_count + MEM_BLOCK_INCR));\n        if (regions == NULL) {\n            return UC_ERR_NOMEM;\n        }\n        uc->mapped_blocks = regions;\n    }\n\n    pos = bsearch_mapped_blocks(uc, block->addr);\n\n    // shift the array right to give space for the new pointer\n    memmove(&uc->mapped_blocks[pos + 1], &uc->mapped_blocks[pos],\n            sizeof(MemoryRegion *) * (uc->mapped_block_count - pos));\n\n    uc->mapped_blocks[pos] = block;\n    uc->mapped_block_count++;\n\n    return UC_ERR_OK;\n}\n\nstatic uc_err mem_map_check(uc_engine *uc, uint64_t address, size_t size,\n                            uint32_t perms)\n{\n    if (size == 0) {\n        // invalid memory mapping\n        return UC_ERR_ARG;\n    }\n\n    // address cannot wrapp around\n    if (address + size - 1 < address) {\n        return UC_ERR_ARG;\n    }\n\n    // address must be aligned to uc->target_page_size\n    if ((address & uc->target_page_align) != 0) {\n        return UC_ERR_ARG;\n    }\n\n    // size must be multiple of uc->target_page_size\n    if ((size & uc->target_page_align) != 0) {\n        return UC_ERR_ARG;\n    }\n\n    // check for only valid permissions\n    if ((perms & ~UC_PROT_ALL) != 0) {\n        return UC_ERR_ARG;\n    }\n\n    // this area overlaps existing mapped regions?\n    if (memory_overlap(uc, address, size)) {\n        return UC_ERR_MAP;\n    }\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_map(uc_engine *uc, uint64_t address, size_t size, uint32_t perms)\n{\n    uc_err res;\n\n    UC_INIT(uc);\n\n    res = mem_map_check(uc, address, size, perms);\n    if (res) {\n        restore_jit_state(uc);\n        return res;\n    }\n\n    res = mem_map(uc, uc->memory_map(uc, address, size, perms));\n    restore_jit_state(uc);\n    return res;\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_map_ptr(uc_engine *uc, uint64_t address, size_t size,\n                      uint32_t perms, void *ptr)\n{\n    uc_err res;\n\n    UC_INIT(uc);\n\n    if (ptr == NULL) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    res = mem_map_check(uc, address, size, perms);\n    if (res) {\n        restore_jit_state(uc);\n        return res;\n    }\n\n    res = mem_map(uc, uc->memory_map_ptr(uc, address, size, perms, ptr));\n    restore_jit_state(uc);\n    return res;\n}\n\nUNICORN_EXPORT\nuc_err uc_mmio_map(uc_engine *uc, uint64_t address, size_t size,\n                   uc_cb_mmio_read_t read_cb, void *user_data_read,\n                   uc_cb_mmio_write_t write_cb, void *user_data_write)\n{\n    uc_err res;\n\n    UC_INIT(uc);\n\n    res = mem_map_check(uc, address, size, UC_PROT_ALL);\n    if (res) {\n        restore_jit_state(uc);\n        return res;\n    }\n\n    // The callbacks do not need to be checked for NULL here, as their presence\n    // (or lack thereof) will determine the permissions used.\n    res = mem_map(uc, uc->memory_map_io(uc, address, size, read_cb, write_cb,\n                                        user_data_read, user_data_write));\n    restore_jit_state(uc);\n    return res;\n}\n\n// Create a backup copy of the indicated MemoryRegion.\n// Generally used in prepartion for splitting a MemoryRegion.\nstatic uint8_t *copy_region(struct uc_struct *uc, MemoryRegion *mr)\n{\n    uint8_t *block = (uint8_t *)g_malloc0((size_t)int128_get64(mr->size));\n    if (block != NULL) {\n        uc_err err =\n            uc_mem_read(uc, mr->addr, block, (size_t)int128_get64(mr->size));\n        if (err != UC_ERR_OK) {\n            free(block);\n            block = NULL;\n        }\n    }\n\n    return block;\n}\n\n/*\n    This function is similar to split_region, but for MMIO memory.\n\n    Note this function may be called recursively.\n*/\nstatic bool split_mmio_region(struct uc_struct *uc, MemoryRegion *mr,\n                              uint64_t address, size_t size, bool do_delete)\n{\n    uint64_t begin, end, chunk_end;\n    size_t l_size, r_size, m_size;\n    mmio_cbs backup;\n\n    chunk_end = address + size;\n\n    // This branch also break recursion.\n    if (address <= mr->addr && chunk_end >= mr->end) {\n        return true;\n    }\n\n    if (size == 0) {\n        return false;\n    }\n\n    begin = mr->addr;\n    end = mr->end;\n\n    memcpy(&backup, mr->opaque, sizeof(mmio_cbs));\n\n    /* overlapping cases\n     *               |------mr------|\n     * case 1    |---size--|            // Is it possible???\n     * case 2           |--size--|\n     * case 3                  |---size--|\n     */\n\n    // unmap this region first, then do split it later\n    if (uc_mem_unmap(uc, mr->addr, (size_t)int128_get64(mr->size)) !=\n        UC_ERR_OK) {\n        return false;\n    }\n\n    // adjust some things\n    if (address < begin) {\n        address = begin;\n    }\n    if (chunk_end > end) {\n        chunk_end = end;\n    }\n\n    // compute sub region sizes\n    l_size = (size_t)(address - begin);\n    r_size = (size_t)(end - chunk_end);\n    m_size = (size_t)(chunk_end - address);\n\n    if (l_size > 0) {\n        if (uc_mmio_map(uc, begin, l_size, backup.read, backup.user_data_read,\n                        backup.write, backup.user_data_write) != UC_ERR_OK) {\n            return false;\n        }\n    }\n\n    if (m_size > 0 && !do_delete) {\n        if (uc_mmio_map(uc, address, m_size, backup.read, backup.user_data_read,\n                        backup.write, backup.user_data_write) != UC_ERR_OK) {\n            return false;\n        }\n    }\n\n    if (r_size > 0) {\n        if (uc_mmio_map(uc, chunk_end, r_size, backup.read,\n                        backup.user_data_read, backup.write,\n                        backup.user_data_write) != UC_ERR_OK) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/*\n   Split the given MemoryRegion at the indicated address for the indicated size\n   this may result in the create of up to 3 spanning sections. If the delete\n   parameter is true, the no new section will be created to replace the indicate\n   range. This functions exists to support uc_mem_protect and uc_mem_unmap.\n\n   This is a static function and callers have already done some preliminary\n   parameter validation.\n\n   The do_delete argument indicates that we are being called to support\n   uc_mem_unmap. In this case we save some time by choosing NOT to remap\n   the areas that are intended to get unmapped\n */\n// TODO: investigate whether qemu region manipulation functions already offered\n// this capability\nstatic bool split_region(struct uc_struct *uc, MemoryRegion *mr,\n                         uint64_t address, size_t size, bool do_delete)\n{\n    uint8_t *backup;\n    uint32_t perms;\n    uint64_t begin, end, chunk_end;\n    size_t l_size, m_size, r_size;\n    RAMBlock *block = NULL;\n    bool prealloc = false;\n\n    chunk_end = address + size;\n\n    // if this region belongs to area [address, address+size],\n    // then there is no work to do.\n    if (address <= mr->addr && chunk_end >= mr->end) {\n        return true;\n    }\n\n    if (size == 0) {\n        // trivial case\n        return true;\n    }\n\n    if (address >= mr->end || chunk_end <= mr->addr) {\n        // impossible case\n        return false;\n    }\n\n    // Find the correct and large enough (which contains our target mr)\n    // to create the content backup.\n    block = mr->ram_block;\n\n    if (block == NULL) {\n        return false;\n    }\n\n    // RAM_PREALLOC is not defined outside exec.c and I didn't feel like\n    // moving it\n    prealloc = !!(block->flags & 1);\n\n    if (block->flags & 1) {\n        backup = block->host;\n    } else {\n        backup = copy_region(uc, mr);\n        if (backup == NULL) {\n            return false;\n        }\n    }\n\n    // save the essential information required for the split before mr gets\n    // deleted\n    perms = mr->perms;\n    begin = mr->addr;\n    end = mr->end;\n\n    // unmap this region first, then do split it later\n    if (uc_mem_unmap(uc, mr->addr, (size_t)int128_get64(mr->size)) !=\n        UC_ERR_OK) {\n        goto error;\n    }\n\n    /* overlapping cases\n     *               |------mr------|\n     * case 1    |---size--|\n     * case 2           |--size--|\n     * case 3                  |---size--|\n     */\n\n    // adjust some things\n    if (address < begin) {\n        address = begin;\n    }\n    if (chunk_end > end) {\n        chunk_end = end;\n    }\n\n    // compute sub region sizes\n    l_size = (size_t)(address - begin);\n    r_size = (size_t)(end - chunk_end);\n    m_size = (size_t)(chunk_end - address);\n\n    // If there are error in any of the below operations, things are too far\n    // gone at that point to recover. Could try to remap orignal region, but\n    // these smaller allocation just failed so no guarantee that we can recover\n    // the original allocation at this point\n    if (l_size > 0) {\n        if (!prealloc) {\n            if (uc_mem_map(uc, begin, l_size, perms) != UC_ERR_OK) {\n                goto error;\n            }\n            if (uc_mem_write(uc, begin, backup, l_size) != UC_ERR_OK) {\n                goto error;\n            }\n        } else {\n            if (uc_mem_map_ptr(uc, begin, l_size, perms, backup) != UC_ERR_OK) {\n                goto error;\n            }\n        }\n    }\n\n    if (m_size > 0 && !do_delete) {\n        if (!prealloc) {\n            if (uc_mem_map(uc, address, m_size, perms) != UC_ERR_OK) {\n                goto error;\n            }\n            if (uc_mem_write(uc, address, backup + l_size, m_size) !=\n                UC_ERR_OK) {\n                goto error;\n            }\n        } else {\n            if (uc_mem_map_ptr(uc, address, m_size, perms, backup + l_size) !=\n                UC_ERR_OK) {\n                goto error;\n            }\n        }\n    }\n\n    if (r_size > 0) {\n        if (!prealloc) {\n            if (uc_mem_map(uc, chunk_end, r_size, perms) != UC_ERR_OK) {\n                goto error;\n            }\n            if (uc_mem_write(uc, chunk_end, backup + l_size + m_size, r_size) !=\n                UC_ERR_OK) {\n                goto error;\n            }\n        } else {\n            if (uc_mem_map_ptr(uc, chunk_end, r_size, perms,\n                               backup + l_size + m_size) != UC_ERR_OK) {\n                goto error;\n            }\n        }\n    }\n\n    if (!prealloc) {\n        free(backup);\n    }\n    return true;\n\nerror:\n    if (!prealloc) {\n        free(backup);\n    }\n    return false;\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_protect(struct uc_struct *uc, uint64_t address, size_t size,\n                      uint32_t perms)\n{\n    MemoryRegion *mr;\n    uint64_t addr = address;\n    uint64_t pc;\n    size_t count, len;\n    bool remove_exec = false;\n\n    UC_INIT(uc);\n\n    // snapshot and protection can't be mixed\n    if (uc->snapshot_level > 0) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    if (size == 0) {\n        // trivial case, no change\n        restore_jit_state(uc);\n        return UC_ERR_OK;\n    }\n\n    // address must be aligned to uc->target_page_size\n    if ((address & uc->target_page_align) != 0) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    // size must be multiple of uc->target_page_size\n    if ((size & uc->target_page_align) != 0) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    // check for only valid permissions\n    if ((perms & ~UC_PROT_ALL) != 0) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    // check that user's entire requested block is mapped\n    // TODO check if protected is possible\n    // deny after cow\n    if (!check_mem_area(uc, address, size)) {\n        restore_jit_state(uc);\n        return UC_ERR_NOMEM;\n    }\n\n    // Now we know entire region is mapped, so change permissions\n    // We may need to split regions if this area spans adjacent regions\n    addr = address;\n    count = 0;\n    while (count < size) {\n        mr = uc->memory_mapping(uc, addr);\n        len = memory_region_len(uc, mr, addr, size - count);\n        if (mr->ram) {\n            if (!split_region(uc, mr, addr, len, false)) {\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n\n            mr = uc->memory_mapping(uc, addr);\n            // will this remove EXEC permission?\n            if (((mr->perms & UC_PROT_EXEC) != 0) &&\n                ((perms & UC_PROT_EXEC) == 0)) {\n                remove_exec = true;\n            }\n            mr->perms = perms;\n            uc->readonly_mem(mr, (perms & UC_PROT_WRITE) == 0);\n\n        } else {\n            if (!split_mmio_region(uc, mr, addr, len, false)) {\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n\n            mr = uc->memory_mapping(uc, addr);\n            mr->perms = perms;\n        }\n\n        count += len;\n        addr += len;\n    }\n\n    // if EXEC permission is removed, then quit TB and continue at the same\n    // place\n    if (remove_exec) {\n        pc = uc->get_pc(uc);\n        if (pc < address + size && pc >= address) {\n            uc->quit_request = true;\n            uc_emu_stop(uc);\n        }\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nstatic uc_err uc_mem_unmap_snapshot(struct uc_struct *uc, uint64_t address,\n                                    size_t size, MemoryRegion **ret)\n{\n    MemoryRegion *mr;\n\n    mr = uc->memory_mapping(uc, address);\n    while (mr->container != uc->system_memory) {\n        mr = mr->container;\n    }\n\n    if (mr->addr != address || int128_get64(mr->size) != size) {\n        return UC_ERR_ARG;\n    }\n\n    if (ret) {\n        *ret = mr;\n    }\n\n    uc->memory_moveout(uc, mr);\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_unmap(struct uc_struct *uc, uint64_t address, size_t size)\n{\n    MemoryRegion *mr;\n    uint64_t addr;\n    size_t count, len;\n\n    UC_INIT(uc);\n\n    if (size == 0) {\n        // nothing to unmap\n        restore_jit_state(uc);\n        return UC_ERR_OK;\n    }\n\n    // address must be aligned to uc->target_page_size\n    if ((address & uc->target_page_align) != 0) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    // size must be multiple of uc->target_page_size\n    if ((size & uc->target_page_align) != 0) {\n        restore_jit_state(uc);\n        return UC_ERR_ARG;\n    }\n\n    // check that user's entire requested block is mapped\n    if (!check_mem_area(uc, address, size)) {\n        restore_jit_state(uc);\n        return UC_ERR_NOMEM;\n    }\n\n    if (uc->snapshot_level > 0) {\n        uc_err res = uc_mem_unmap_snapshot(uc, address, size, NULL);\n        restore_jit_state(uc);\n        return res;\n    }\n\n    // Now we know entire region is mapped, so do the unmap\n    // We may need to split regions if this area spans adjacent regions\n    addr = address;\n    count = 0;\n    while (count < size) {\n        mr = uc->memory_mapping(uc, addr);\n        len = memory_region_len(uc, mr, addr, size - count);\n        if (!mr->ram) {\n            if (!split_mmio_region(uc, mr, addr, len, true)) {\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n        } else {\n            if (!split_region(uc, mr, addr, len, true)) {\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n        }\n\n        // if we can retrieve the mapping, then no splitting took place\n        // so unmap here\n        mr = uc->memory_mapping(uc, addr);\n        if (mr != NULL) {\n            uc->memory_unmap(uc, mr);\n        }\n        count += len;\n        addr += len;\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_hook_add(uc_engine *uc, uc_hook *hh, int type, void *callback,\n                   void *user_data, uint64_t begin, uint64_t end, ...)\n{\n    int ret = UC_ERR_OK;\n    int i = 0;\n\n    UC_INIT(uc);\n\n    struct hook *hook = calloc(1, sizeof(struct hook));\n    if (hook == NULL) {\n        restore_jit_state(uc);\n        return UC_ERR_NOMEM;\n    }\n\n    hook->begin = begin;\n    hook->end = end;\n    hook->type = type;\n    hook->callback = callback;\n    hook->user_data = user_data;\n    hook->refs = 0;\n    hook->to_delete = false;\n    hook->hooked_regions = g_hash_table_new_full(\n        hooked_regions_hash, hooked_regions_equal, g_free, NULL);\n    *hh = (uc_hook)hook;\n\n    // UC_HOOK_INSN has an extra argument for instruction ID\n    if (type & UC_HOOK_INSN) {\n        va_list valist;\n\n        va_start(valist, end);\n        hook->insn = va_arg(valist, int);\n        va_end(valist);\n\n        if (uc->insn_hook_validate) {\n            if (!uc->insn_hook_validate(hook->insn)) {\n                free(hook);\n                restore_jit_state(uc);\n                return UC_ERR_HOOK;\n            }\n        }\n\n        if (uc->hook_insert) {\n            if (hook_insert(&uc->hook[UC_HOOK_INSN_IDX], hook) == NULL) {\n                free(hook);\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n        } else {\n            if (hook_append(&uc->hook[UC_HOOK_INSN_IDX], hook) == NULL) {\n                free(hook);\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n        }\n\n        uc->hooks_count[UC_HOOK_INSN_IDX]++;\n        restore_jit_state(uc);\n        return UC_ERR_OK;\n    }\n\n    if (type & UC_HOOK_TCG_OPCODE) {\n        va_list valist;\n\n        va_start(valist, end);\n        hook->op = va_arg(valist, int);\n        hook->op_flags = va_arg(valist, int);\n        va_end(valist);\n\n        if (uc->opcode_hook_invalidate) {\n            if (!uc->opcode_hook_invalidate(hook->op, hook->op_flags)) {\n                free(hook);\n                restore_jit_state(uc);\n                return UC_ERR_HOOK;\n            }\n        }\n\n        if (uc->hook_insert) {\n            if (hook_insert(&uc->hook[UC_HOOK_TCG_OPCODE_IDX], hook) == NULL) {\n                free(hook);\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n        } else {\n            if (hook_append(&uc->hook[UC_HOOK_TCG_OPCODE_IDX], hook) == NULL) {\n                free(hook);\n                restore_jit_state(uc);\n                return UC_ERR_NOMEM;\n            }\n        }\n\n        uc->hooks_count[UC_HOOK_TCG_OPCODE_IDX]++;\n        return UC_ERR_OK;\n    }\n\n    while ((type >> i) > 0) {\n        if ((type >> i) & 1) {\n            // TODO: invalid hook error?\n            if (i < UC_HOOK_MAX) {\n                if (uc->hook_insert) {\n                    if (hook_insert(&uc->hook[i], hook) == NULL) {\n                        free(hook);\n                        restore_jit_state(uc);\n                        return UC_ERR_NOMEM;\n                    }\n                } else {\n                    if (hook_append(&uc->hook[i], hook) == NULL) {\n                        free(hook);\n                        restore_jit_state(uc);\n                        return UC_ERR_NOMEM;\n                    }\n                }\n                uc->hooks_count[i]++;\n            }\n        }\n        i++;\n    }\n\n    // we didn't use the hook\n    // TODO: return an error?\n    if (hook->refs == 0) {\n        free(hook);\n    }\n\n    restore_jit_state(uc);\n    return ret;\n}\n\nUNICORN_EXPORT\nuc_err uc_hook_del(uc_engine *uc, uc_hook hh)\n{\n    int i;\n    struct hook *hook = (struct hook *)hh;\n\n    UC_INIT(uc);\n\n    // we can't dereference hook->type if hook is invalid\n    // so for now we need to iterate over all possible types to remove the hook\n    // which is less efficient\n    // an optimization would be to align the hook pointer\n    // and store the type mask in the hook pointer.\n    for (i = 0; i < UC_HOOK_MAX; i++) {\n        if (list_exists(&uc->hook[i], (void *)hook)) {\n            g_hash_table_foreach(hook->hooked_regions, hook_invalidate_region,\n                                 uc);\n            g_hash_table_remove_all(hook->hooked_regions);\n            hook->to_delete = true;\n            uc->hooks_count[i]--;\n            hook_append(&uc->hooks_to_del, hook);\n        }\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\n// TCG helper\n// 2 arguments are enough for most opcodes. Load/Store needs 3 arguments but we\n// have memory hooks already. We may exceed the maximum arguments of a tcg\n// helper but that's easy to extend.\nvoid helper_uc_traceopcode(struct hook *hook, uint64_t arg1, uint64_t arg2,\n                           uint32_t size, void *handle, uint64_t address);\nvoid helper_uc_traceopcode(struct hook *hook, uint64_t arg1, uint64_t arg2,\n                           uint32_t size, void *handle, uint64_t address)\n{\n    struct uc_struct *uc = handle;\n\n    if (unlikely(uc->stop_request)) {\n        return;\n    }\n\n    if (unlikely(hook->to_delete)) {\n        return;\n    }\n\n    // We did all checks in translation time.\n    //\n    // This could optimize the case that we have multiple hooks with different\n    // opcodes and have one callback per opcode. Note that the assumption don't\n    // hold in most cases for uc_tracecode.\n    //\n    // TODO: Shall we have a flag to allow users to control whether updating PC?\n    JIT_CALLBACK_GUARD(((uc_hook_tcg_op_2)hook->callback)(\n        uc, address, arg1, arg2, size, hook->user_data));\n\n    if (unlikely(uc->stop_request)) {\n        return;\n    }\n}\n\nvoid helper_uc_tracecode(int32_t size, uc_hook_idx index, void *handle,\n                         int64_t address);\nvoid helper_uc_tracecode(int32_t size, uc_hook_idx index, void *handle,\n                         int64_t address)\n{\n    struct uc_struct *uc = handle;\n    struct list_item *cur;\n    struct hook *hook;\n    int hook_flags =\n        index &\n        UC_HOOK_FLAG_MASK; // The index here may contain additional flags. See\n                           // the comments of uc_hook_idx for details.\n\n    index = index & UC_HOOK_IDX_MASK;\n\n    // This has been done in tcg code.\n    // sync PC in CPUArchState with address\n    // if (uc->set_pc) {\n    //     uc->set_pc(uc, address);\n    // }\n\n    // the last callback may already asked to stop emulation\n    if (uc->stop_request && !(hook_flags & UC_HOOK_FLAG_NO_STOP)) {\n        return;\n    }\n\n    for (cur = uc->hook[index].head;\n         cur != NULL && (hook = (struct hook *)cur->data); cur = cur->next) {\n        if (hook->to_delete) {\n            continue;\n        }\n\n        // on invalid block/instruction, call instruction counter (if enable),\n        // then quit\n        if (size == 0) {\n            if (index == UC_HOOK_CODE_IDX && uc->count_hook) {\n                // this is the instruction counter (first hook in the list)\n                JIT_CALLBACK_GUARD(((uc_cb_hookcode_t)hook->callback)(\n                    uc, address, size, hook->user_data));\n            }\n\n            return;\n        }\n\n        if (HOOK_BOUND_CHECK(hook, (uint64_t)address)) {\n            JIT_CALLBACK_GUARD(((uc_cb_hookcode_t)hook->callback)(\n                uc, address, size, hook->user_data));\n        }\n\n        // the last callback may already asked to stop emulation\n        // Unicorn:\n        //   In an ARM IT block, we behave like the emulation continues\n        //   normally. No check_exit_request is generated and the hooks are\n        //   triggered normally. In other words, the whole IT block is treated\n        //   as a single instruction.\n        if (uc->stop_request && !(hook_flags & UC_HOOK_FLAG_NO_STOP)) {\n            break;\n        }\n    }\n}\n\nUNICORN_EXPORT\nuc_err uc_mem_regions(uc_engine *uc, uc_mem_region **regions, uint32_t *count)\n{\n    uint32_t i;\n    uc_mem_region *r = NULL;\n\n    UC_INIT(uc);\n\n    *count = uc->mapped_block_count;\n\n    if (*count) {\n        r = g_malloc0(*count * sizeof(uc_mem_region));\n        if (r == NULL) {\n            // out of memory\n            restore_jit_state(uc);\n            return UC_ERR_NOMEM;\n        }\n    }\n\n    for (i = 0; i < *count; i++) {\n        r[i].begin = uc->mapped_blocks[i]->addr;\n        r[i].end = uc->mapped_blocks[i]->end - 1;\n        r[i].perms = uc->mapped_blocks[i]->perms;\n    }\n\n    *regions = r;\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_query(uc_engine *uc, uc_query_type type, size_t *result)\n{\n    UC_INIT(uc);\n\n    switch (type) {\n    default:\n        return UC_ERR_ARG;\n\n    case UC_QUERY_PAGE_SIZE:\n        *result = uc->target_page_size;\n        break;\n\n    case UC_QUERY_ARCH:\n        *result = uc->arch;\n        break;\n\n    case UC_QUERY_MODE:\n#ifdef UNICORN_HAS_ARM\n        if (uc->arch == UC_ARCH_ARM) {\n            return uc->query(uc, type, result);\n        }\n#endif\n        *result = uc->mode;\n        break;\n\n    case UC_QUERY_TIMEOUT:\n        *result = uc->timed_out;\n        break;\n    }\n\n    restore_jit_state(uc);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_alloc(uc_engine *uc, uc_context **context)\n{\n    struct uc_context **_context = context;\n    size_t size = uc_context_size(uc);\n\n    UC_INIT(uc);\n\n    *_context = g_malloc(size);\n    if (*_context) {\n        (*_context)->context_size = size - sizeof(uc_context);\n        (*_context)->arch = uc->arch;\n        (*_context)->mode = uc->mode;\n        restore_jit_state(uc);\n        return UC_ERR_OK;\n    } else {\n        restore_jit_state(uc);\n        return UC_ERR_NOMEM;\n    }\n}\n\nUNICORN_EXPORT\nuc_err uc_free(void *mem)\n{\n    g_free(mem);\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nsize_t uc_context_size(uc_engine *uc)\n{\n    UC_INIT(uc);\n\n    restore_jit_state(uc);\n    if (!uc->context_size) {\n        // return the total size of struct uc_context\n        return sizeof(uc_context) + uc->cpu_context_size;\n    } else {\n        return sizeof(uc_context) + uc->context_size(uc);\n    }\n}\n\nUNICORN_EXPORT\nuc_err uc_context_save(uc_engine *uc, uc_context *context)\n{\n    UC_INIT(uc);\n    uc_err ret = UC_ERR_OK;\n\n    if (uc->context_content & UC_CTL_CONTEXT_MEMORY) {\n        ret = uc_snapshot(uc);\n        if (ret != UC_ERR_OK) {\n            restore_jit_state(uc);\n            return ret;\n        }\n    }\n\n    context->snapshot_level = uc->snapshot_level;\n\n    if (uc->context_content & UC_CTL_CONTEXT_CPU) {\n        if (!uc->context_save) {\n            memcpy(context->data, uc->cpu->env_ptr, context->context_size);\n            restore_jit_state(uc);\n            return UC_ERR_OK;\n        } else {\n            ret = uc->context_save(uc, context);\n            restore_jit_state(uc);\n            return ret;\n        }\n    }\n    restore_jit_state(uc);\n    return ret;\n}\n\n// Keep in mind that we don't a uc_engine when r/w the registers of a context.\nstatic context_reg_rw_t find_context_reg_rw(uc_arch arch, uc_mode mode)\n{\n    // We believe that the arch/mode pair is correct.\n    context_reg_rw_t rw = {default_reg_read, default_reg_write};\n    switch (arch) {\n    default:\n        break;\n#ifdef UNICORN_HAS_M68K\n    case UC_ARCH_M68K:\n        rw.read = reg_read_m68k;\n        rw.write = reg_write_m68k;\n        break;\n#endif\n#ifdef UNICORN_HAS_X86\n    case UC_ARCH_X86:\n        rw.read = reg_read_x86_64;\n        rw.write = reg_write_x86_64;\n        break;\n#endif\n#ifdef UNICORN_HAS_ARM\n    case UC_ARCH_ARM:\n        rw.read = reg_read_arm;\n        rw.write = reg_write_arm;\n        break;\n#endif\n#ifdef UNICORN_HAS_ARM64\n    case UC_ARCH_ARM64:\n        rw.read = reg_read_aarch64;\n        rw.write = reg_write_aarch64;\n        break;\n#endif\n\n#if defined(UNICORN_HAS_MIPS) || defined(UNICORN_HAS_MIPSEL) ||                \\\n    defined(UNICORN_HAS_MIPS64) || defined(UNICORN_HAS_MIPS64EL)\n    case UC_ARCH_MIPS:\n        if (mode & UC_MODE_BIG_ENDIAN) {\n#ifdef UNICORN_HAS_MIPS\n            if (mode & UC_MODE_MIPS32) {\n                rw.read = reg_read_mips;\n                rw.write = reg_write_mips;\n            }\n#endif\n#ifdef UNICORN_HAS_MIPS64\n            if (mode & UC_MODE_MIPS64) {\n                rw.read = reg_read_mips64;\n                rw.write = reg_write_mips64;\n            }\n#endif\n        } else { // little endian\n#ifdef UNICORN_HAS_MIPSEL\n            if (mode & UC_MODE_MIPS32) {\n                rw.read = reg_read_mipsel;\n                rw.write = reg_write_mipsel;\n            }\n#endif\n#ifdef UNICORN_HAS_MIPS64EL\n            if (mode & UC_MODE_MIPS64) {\n                rw.read = reg_read_mips64el;\n                rw.write = reg_write_mips64el;\n            }\n#endif\n        }\n        break;\n#endif\n\n#ifdef UNICORN_HAS_SPARC\n    case UC_ARCH_SPARC:\n        if (mode & UC_MODE_SPARC64) {\n            rw.read = reg_read_sparc64;\n            rw.write = reg_write_sparc64;\n        } else {\n            rw.read = reg_read_sparc;\n            rw.write = reg_write_sparc;\n        }\n        break;\n#endif\n#ifdef UNICORN_HAS_PPC\n    case UC_ARCH_PPC:\n        if (mode & UC_MODE_PPC64) {\n            rw.read = reg_read_ppc64;\n            rw.write = reg_write_ppc64;\n        } else {\n            rw.read = reg_read_ppc;\n            rw.write = reg_write_ppc;\n        }\n        break;\n#endif\n#ifdef UNICORN_HAS_RISCV\n    case UC_ARCH_RISCV:\n        if (mode & UC_MODE_RISCV32) {\n            rw.read = reg_read_riscv32;\n            rw.write = reg_write_riscv32;\n        } else if (mode & UC_MODE_RISCV64) {\n            rw.read = reg_read_riscv64;\n            rw.write = reg_write_riscv64;\n        }\n        break;\n#endif\n#ifdef UNICORN_HAS_S390X\n    case UC_ARCH_S390X:\n        rw.read = reg_read_s390x;\n        rw.write = reg_write_s390x;\n        break;\n#endif\n#ifdef UNICORN_HAS_TRICORE\n    case UC_ARCH_TRICORE:\n        rw.read = reg_read_tricore;\n        rw.write = reg_write_tricore;\n        break;\n#endif\n    }\n\n    return rw;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_write(uc_context *ctx, int regid, const void *value)\n{\n    int setpc = 0;\n    size_t size = (size_t)-1;\n    return find_context_reg_rw(ctx->arch, ctx->mode)\n        .write(ctx->data, ctx->mode, regid, value, &size, &setpc);\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_read(uc_context *ctx, int regid, void *value)\n{\n    size_t size = (size_t)-1;\n    return find_context_reg_rw(ctx->arch, ctx->mode)\n        .read(ctx->data, ctx->mode, regid, value, &size);\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_write2(uc_context *ctx, int regid, const void *value,\n                             size_t *size)\n{\n    int setpc = 0;\n    return find_context_reg_rw(ctx->arch, ctx->mode)\n        .write(ctx->data, ctx->mode, regid, value, size, &setpc);\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_read2(uc_context *ctx, int regid, void *value,\n                            size_t *size)\n{\n    return find_context_reg_rw(ctx->arch, ctx->mode)\n        .read(ctx->data, ctx->mode, regid, value, size);\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_write_batch(uc_context *ctx, int *regs, void *const *vals,\n                                  int count)\n{\n    reg_write_t reg_write = find_context_reg_rw(ctx->arch, ctx->mode).write;\n    void *env = ctx->data;\n    int mode = ctx->mode;\n    int setpc = 0;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        const void *value = vals[i];\n        size_t size = (size_t)-1;\n        uc_err err = reg_write(env, mode, regid, value, &size, &setpc);\n        if (err) {\n            return err;\n        }\n    }\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_read_batch(uc_context *ctx, int *regs, void **vals,\n                                 int count)\n{\n    reg_read_t reg_read = find_context_reg_rw(ctx->arch, ctx->mode).read;\n    void *env = ctx->data;\n    int mode = ctx->mode;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        void *value = vals[i];\n        size_t size = (size_t)-1;\n        uc_err err = reg_read(env, mode, regid, value, &size);\n        if (err) {\n            return err;\n        }\n    }\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_write_batch2(uc_context *ctx, int *regs,\n                                   const void *const *vals, size_t *sizes,\n                                   int count)\n{\n    reg_write_t reg_write = find_context_reg_rw(ctx->arch, ctx->mode).write;\n    void *env = ctx->data;\n    int mode = ctx->mode;\n    int setpc = 0;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        const void *value = vals[i];\n        uc_err err = reg_write(env, mode, regid, value, sizes + i, &setpc);\n        if (err) {\n            return err;\n        }\n    }\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_reg_read_batch2(uc_context *ctx, int *regs, void *const *vals,\n                                  size_t *sizes, int count)\n{\n    reg_read_t reg_read = find_context_reg_rw(ctx->arch, ctx->mode).read;\n    void *env = ctx->data;\n    int mode = ctx->mode;\n    int i;\n\n    for (i = 0; i < count; i++) {\n        unsigned int regid = regs[i];\n        void *value = vals[i];\n        uc_err err = reg_read(env, mode, regid, value, sizes + i);\n        if (err) {\n            return err;\n        }\n    }\n\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_restore(uc_engine *uc, uc_context *context)\n{\n    UC_INIT(uc);\n    uc_err ret;\n\n    if (uc->context_content & UC_CTL_CONTEXT_MEMORY) {\n        uc->snapshot_level = context->snapshot_level;\n        ret = uc_restore_latest_snapshot(uc);\n        if (ret != UC_ERR_OK) {\n            return ret;\n        }\n        uc_snapshot(uc);\n    }\n\n    if (uc->context_content & UC_CTL_CONTEXT_CPU) {\n        if (!uc->context_restore) {\n            memcpy(uc->cpu->env_ptr, context->data, context->context_size);\n            return UC_ERR_OK;\n        } else {\n            return uc->context_restore(uc, context);\n        }\n    }\n    return UC_ERR_OK;\n}\n\nUNICORN_EXPORT\nuc_err uc_context_free(uc_context *context)\n{\n    return uc_free(context);\n}\n\ntypedef struct _uc_ctl_exit_request {\n    uint64_t *array;\n    size_t len;\n} uc_ctl_exit_request;\n\nstatic inline gboolean uc_read_exit_iter(gpointer key, gpointer val,\n                                         gpointer data)\n{\n    uc_ctl_exit_request *req = (uc_ctl_exit_request *)data;\n\n    req->array[req->len++] = *(uint64_t *)key;\n\n    return false;\n}\n\nUNICORN_EXPORT\nuc_err uc_ctl(uc_engine *uc, uc_control_type control, ...)\n{\n    int rw, type;\n    uc_err err = UC_ERR_OK;\n    va_list args;\n\n    // MSVC Would do signed shift on signed integers.\n    rw = (uint32_t)control >> 30;\n    type = (control & ((1 << 16) - 1));\n    va_start(args, control);\n\n    switch (type) {\n    case UC_CTL_UC_MODE: {\n        if (rw == UC_CTL_IO_READ) {\n            int *pmode = va_arg(args, int *);\n            *pmode = uc->mode;\n        } else {\n            err = UC_ERR_ARG;\n        }\n        break;\n    }\n\n    case UC_CTL_UC_ARCH: {\n        if (rw == UC_CTL_IO_READ) {\n            int *arch = va_arg(args, int *);\n            *arch = uc->arch;\n        } else {\n            err = UC_ERR_ARG;\n        }\n        break;\n    }\n\n    case UC_CTL_UC_TIMEOUT: {\n        if (rw == UC_CTL_IO_READ) {\n            uint64_t *arch = va_arg(args, uint64_t *);\n            *arch = uc->timeout;\n        } else {\n            err = UC_ERR_ARG;\n        }\n        break;\n    }\n\n    case UC_CTL_UC_PAGE_SIZE: {\n        if (rw == UC_CTL_IO_READ) {\n\n            UC_INIT(uc);\n\n            uint32_t *page_size = va_arg(args, uint32_t *);\n            *page_size = uc->target_page_size;\n\n            restore_jit_state(uc);\n        } else {\n            uint32_t page_size = va_arg(args, uint32_t);\n            int bits = 0;\n\n            if (uc->init_done) {\n                err = UC_ERR_ARG;\n                break;\n            }\n\n            if (uc->arch != UC_ARCH_ARM) {\n                err = UC_ERR_ARG;\n                break;\n            }\n\n            if ((page_size & (page_size - 1))) {\n                err = UC_ERR_ARG;\n                break;\n            }\n\n            while (page_size) {\n                bits++;\n                page_size >>= 1;\n            }\n\n            uc->target_bits = bits;\n\n            err = UC_ERR_OK;\n        }\n\n        break;\n    }\n\n    case UC_CTL_UC_USE_EXITS: {\n        if (rw == UC_CTL_IO_WRITE) {\n            int use_exits = va_arg(args, int);\n            uc->use_exits = use_exits;\n        } else {\n            err = UC_ERR_ARG;\n        }\n        break;\n    }\n\n    case UC_CTL_UC_EXITS_CNT: {\n\n        UC_INIT(uc);\n\n        if (!uc->use_exits) {\n            err = UC_ERR_ARG;\n        } else if (rw == UC_CTL_IO_READ) {\n            size_t *exits_cnt = va_arg(args, size_t *);\n            *exits_cnt = g_tree_nnodes(uc->ctl_exits);\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n    }\n\n    case UC_CTL_UC_EXITS: {\n\n        UC_INIT(uc);\n\n        if (!uc->use_exits) {\n            err = UC_ERR_ARG;\n        } else if (rw == UC_CTL_IO_READ) {\n            uint64_t *exits = va_arg(args, uint64_t *);\n            size_t cnt = va_arg(args, size_t);\n            if (cnt < g_tree_nnodes(uc->ctl_exits)) {\n                err = UC_ERR_ARG;\n            } else {\n                uc_ctl_exit_request req;\n                req.array = exits;\n                req.len = 0;\n\n                g_tree_foreach(uc->ctl_exits, uc_read_exit_iter, (void *)&req);\n            }\n        } else if (rw == UC_CTL_IO_WRITE) {\n            uint64_t *exits = va_arg(args, uint64_t *);\n            size_t cnt = va_arg(args, size_t);\n\n            g_tree_remove_all(uc->ctl_exits);\n\n            for (size_t i = 0; i < cnt; i++) {\n                uc_add_exit(uc, exits[i]);\n            }\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n    }\n\n    case UC_CTL_CPU_MODEL: {\n        if (rw == UC_CTL_IO_READ) {\n\n            UC_INIT(uc);\n\n            int *model = va_arg(args, int *);\n            *model = uc->cpu_model;\n\n            save_jit_state(uc);\n        } else {\n            int model = va_arg(args, int);\n\n            if (model < 0 || uc->init_done) {\n                err = UC_ERR_ARG;\n                break;\n            }\n\n            if (uc->arch == UC_ARCH_X86) {\n                if (model >= UC_CPU_X86_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_ARM) {\n                if (model >= UC_CPU_ARM_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n\n                if (uc->mode & UC_MODE_BIG_ENDIAN) {\n                    // These cpu models don't support big endian code access.\n                    if (model <= UC_CPU_ARM_CORTEX_A15 &&\n                        model >= UC_CPU_ARM_CORTEX_A7) {\n                        err = UC_ERR_ARG;\n                        break;\n                    }\n                }\n            } else if (uc->arch == UC_ARCH_ARM64) {\n                if (model >= UC_CPU_ARM64_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_MIPS) {\n                if (uc->mode & UC_MODE_32 && model >= UC_CPU_MIPS32_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n\n                if (uc->mode & UC_MODE_64 && model >= UC_CPU_MIPS64_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_PPC) {\n                // UC_MODE_PPC32 == UC_MODE_32\n                if (uc->mode & UC_MODE_32 && model >= UC_CPU_PPC32_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n\n                if (uc->mode & UC_MODE_64 && model >= UC_CPU_PPC64_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_RISCV) {\n                if (uc->mode & UC_MODE_32 && model >= UC_CPU_RISCV32_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n\n                if (uc->mode & UC_MODE_64 && model >= UC_CPU_RISCV64_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_S390X) {\n                if (model >= UC_CPU_S390X_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_SPARC) {\n                if (uc->mode & UC_MODE_32 && model >= UC_CPU_SPARC32_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n                if (uc->mode & UC_MODE_64 && model >= UC_CPU_SPARC64_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else if (uc->arch == UC_ARCH_M68K) {\n                if (model >= UC_CPU_M68K_ENDING) {\n                    err = UC_ERR_ARG;\n                    break;\n                }\n            } else {\n                err = UC_ERR_ARG;\n                break;\n            }\n\n            uc->cpu_model = model;\n\n            err = UC_ERR_OK;\n        }\n        break;\n    }\n\n    case UC_CTL_TB_REQUEST_CACHE: {\n\n        UC_INIT(uc);\n\n        if (rw == UC_CTL_IO_READ_WRITE) {\n            uint64_t addr = va_arg(args, uint64_t);\n            uc_tb *tb = va_arg(args, uc_tb *);\n            err = uc->uc_gen_tb(uc, addr, tb);\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n    }\n\n    case UC_CTL_TB_REMOVE_CACHE: {\n\n        UC_INIT(uc);\n\n        if (rw == UC_CTL_IO_WRITE) {\n            uint64_t addr = va_arg(args, uint64_t);\n            uint64_t end = va_arg(args, uint64_t);\n            if (end <= addr) {\n                err = UC_ERR_ARG;\n            } else {\n                uc->uc_invalidate_tb(uc, addr, end - addr);\n            }\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n    }\n\n    case UC_CTL_TB_FLUSH:\n\n        UC_INIT(uc);\n\n        if (rw == UC_CTL_IO_WRITE) {\n            uc->tb_flush(uc);\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n\n    case UC_CTL_TLB_FLUSH:\n\n        UC_INIT(uc);\n\n        if (rw == UC_CTL_IO_WRITE) {\n            uc->tcg_flush_tlb(uc);\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n\n    case UC_CTL_TLB_TYPE: {\n\n        UC_INIT(uc);\n\n        if (rw == UC_CTL_IO_WRITE) {\n            int mode = va_arg(args, int);\n            err = uc->set_tlb(uc, mode);\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n    }\n\n    case UC_CTL_TCG_BUFFER_SIZE: {\n        if (rw == UC_CTL_IO_WRITE) {\n            uint32_t size = va_arg(args, uint32_t);\n            uc->tcg_buffer_size = size;\n        } else {\n\n            UC_INIT(uc);\n\n            uint32_t *size = va_arg(args, uint32_t *);\n            *size = uc->tcg_buffer_size;\n\n            restore_jit_state(uc);\n        }\n        break;\n    }\n\n    case UC_CTL_CONTEXT_MODE:\n\n        UC_INIT(uc);\n\n        if (rw == UC_CTL_IO_WRITE) {\n            int mode = va_arg(args, int);\n            uc->context_content = mode;\n            err = UC_ERR_OK;\n        } else {\n            err = UC_ERR_ARG;\n        }\n\n        restore_jit_state(uc);\n        break;\n\n    default:\n        err = UC_ERR_ARG;\n        break;\n    }\n\n    va_end(args);\n\n    return err;\n}\n\nstatic uc_err uc_snapshot(struct uc_struct *uc)\n{\n    if (uc->snapshot_level == INT32_MAX) {\n        return UC_ERR_RESOURCE;\n    }\n    uc->snapshot_level++;\n    return UC_ERR_OK;\n}\n\nstatic uc_err uc_restore_latest_snapshot(struct uc_struct *uc)\n{\n    MemoryRegion *subregion, *subregion_next, *mr, *initial_mr;\n    int level;\n\n    QTAILQ_FOREACH_SAFE(subregion, &uc->system_memory->subregions,\n                        subregions_link, subregion_next)\n    {\n        uc->memory_filter_subregions(subregion, uc->snapshot_level);\n        if (subregion->priority >= uc->snapshot_level ||\n            (!subregion->terminates && QTAILQ_EMPTY(&subregion->subregions))) {\n            uc->memory_unmap(uc, subregion);\n        }\n    }\n\n    for (size_t i = uc->unmapped_regions->len; i-- > 0;) {\n        mr = g_array_index(uc->unmapped_regions, MemoryRegion *, i);\n        // same dirty hack as in memory_moveout see qemu/softmmu/memory.c\n        initial_mr = QTAILQ_FIRST(&mr->subregions);\n        if (!initial_mr) {\n            initial_mr = mr;\n        }\n        /* same dirty hack as in memory_moveout see qemu/softmmu/memory.c */\n        level = (intptr_t)mr->container;\n        mr->container = NULL;\n\n        if (level < uc->snapshot_level) {\n            break;\n        }\n        if (memory_overlap(uc, mr->addr, int128_get64(mr->size))) {\n            return UC_ERR_MAP;\n        }\n        uc->memory_movein(uc, mr);\n        uc->memory_filter_subregions(mr, uc->snapshot_level);\n        if (initial_mr != mr && QTAILQ_EMPTY(&mr->subregions)) {\n            uc->memory_unmap(uc, subregion);\n        }\n        mem_map(uc, initial_mr);\n        g_array_remove_range(uc->unmapped_regions, i, 1);\n    }\n    uc->snapshot_level--;\n    return UC_ERR_OK;\n}\n\n#ifdef UNICORN_TRACER\nuc_tracer *get_tracer()\n{\n    static uc_tracer tracer;\n    return &tracer;\n}\n\nvoid trace_start(uc_tracer *tracer, trace_loc loc)\n{\n    tracer->starts[loc] = get_clock();\n}\n\nvoid trace_end(uc_tracer *tracer, trace_loc loc, const char *fmt, ...)\n{\n    va_list args;\n    int64_t end = get_clock();\n\n    va_start(args, fmt);\n\n    vfprintf(stderr, fmt, args);\n\n    va_end(args);\n\n    fprintf(stderr, \"%.6fus\\n\",\n            (double)(end - tracer->starts[loc]) / (double)(1000));\n}\n#endif\n"
        }
      ]
    }
  ]
}