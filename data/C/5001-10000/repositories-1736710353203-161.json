{
  "metadata": {
    "timestamp": 1736710353203,
    "page": 161,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RediSearch/RediSearch",
      "stars": 5611,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.8642578125,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -1\nAlignAfterOpenBracket: true\nAlignConsecutiveAssignments: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIndentCaseLabels: true\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        4\nUseTab:          Never\nSortIncludes: false\n...\n\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1435546875,
          "content": "**/*.rdb*\n**/*.aof*\n**/*.rdb\n**/*.out\n**/*.md\n**/*.zip\n**/*.gz\n**/*.so\n**/*.o\n**/*.a\n# .git\n/bin/\n/site/\n/deps/RedisJSON/\n/tests/pytests/logs/\n/1/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.283203125,
          "content": "*.pyc\n*.o\n*.d\n*.pyo\n*.so\n*.a\n*.out\n*.log\n*.aof\n*.rdb\n*.DS_Store\n*.dSYM\n/bin/\n/site/\n/venv*/\n/srcutil/lemon\n/src/query_parser/lemon\n/.vscode/\n/.idea/\n.project\n.cproject\nVSCODE.DB*\ncallgrind.out.*\n**/.ipynb_checkpoints/\n/tests/logs/\n/tests/pytests/logs/\n/deps/RedisJSON/\n/1/\n/.install/boost*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.708984375,
          "content": "[submodule \"deps/readies\"]\n\tpath = deps/readies\n\turl = https://github.com/RedisLabsModules/readies.git\n[submodule \"deps/googletest\"]\n\tpath = deps/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"deps/hiredis\"]\n\tpath = deps/hiredis\n\turl = https://github.com/redis/hiredis.git\n[submodule \"deps/libuv\"]\n\tpath = deps/libuv\n\turl = https://github.com/libuv/libuv.git\n[submodule \"deps/VectorSimilarity\"]\n\tpath = deps/VectorSimilarity\n\turl = https://github.com/RedisAI/VectorSimilarity.git\n[submodule \"deps/s2geometry\"]\n\tpath = deps/s2geometry\n\turl = https://github.com/google/s2geometry.git\n[submodule \"deps/RedisModulesSDK\"]\n\tpath = deps/RedisModulesSDK\n\turl = https://github.com/RedisLabs/RedisModulesSDK.git\n"
        },
        {
          "name": ".install",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.091796875,
          "content": "cmake_minimum_required(VERSION 3.13)\n\nget_filename_component(root ${CMAKE_CURRENT_LIST_DIR} ABSOLUTE)\ninclude(${root}/deps/readies/cmake/main)\n\nget_filename_component(binroot ${CMAKE_CURRENT_BINARY_DIR}/.. ABSOLUTE)\n\n#----------------------------------------------------------------------------------------------\n\noption(BUILD_STATIC \"Build a static library\" OFF)\noption(USE_REDIS_ALLOCATOR \"Use redis allocator\" ON)\noption(BUILD_SEARCH_UNIT_TESTS \"Build unit tests\" OFF)\n\n#----------------------------------------------------------------------------------------------\n\nproject(redisearch)\n\nif (NOT MODULE_NAME)\n    set(MODULE_NAME \"search\")  # unless it was already set to \"searchlite\"\nendif()\n\n#----------------------------------------------------------------------------------------------\n\nsetup_cc_options()\n\n# ugly hack for cpu_features::list_cpu_features coming from VecSim\nset(CMAKE_LINKER_FLAGS \"${CMAKE_LINKER_FLAGS} ${CMAKE_LD_FLAGS}\")\n\nmessage(STATUS \"SAN: ${SAN}\")\n\n# check if env sanitizers are set, and set ld_flags accordingly\nif (SAN)\n    if (SAN STREQUAL \"address\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-omit-frame-pointer -fsanitize=address -fsanitize-recover=all\")\n        set(CMAKE_LINKER_FLAGS \"${CMAKE_LINKER_FLAGS} -fsanitize=address\")\n        set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -fsanitize=address\")\n        # print the flags\n        message(STATUS \"CMAKE_C_FLAGS: ${CMAKE_C_FLAGS}\")\n        message(STATUS \"CMAKE_LINKER_FLAGS: ${CMAKE_LINKER_FLAGS}\")\n        message(STATUS \"CMAKE_SHARED_LINKER_FLAGS: ${CMAKE_SHARED_LINKER_FLAGS}\")\n    endif()\nendif()\n\n\nadd_compile_definitions(\n    \"REDISEARCH_MODULE_NAME=\\\"${MODULE_NAME}\\\"\"\n    \"GIT_VERSPEC=\\\"${GIT_VERSPEC}\\\"\"\n    \"GIT_SHA=\\\"${GIT_SHA}\\\"\"\n    REDISMODULE_SDK_RLEC\n    _GNU_SOURCE)\n\nif (BUILD_LITE)\n    message(WARNING \"Building artifact under the name searchlight for backward compatibility, but coordinator will be activated in clustered environment\")\nendif()\n\nif (MAX_WORKER_THREADS)\n    set_source_files_properties(src/config.c PROPERTIES COMPILE_DEFINITIONS MAX_WORKER_THREADS=${MAX_WORKER_THREADS})\nendif()\n\nif (USE_REDIS_ALLOCATOR)\n    add_compile_definitions(REDIS_MODULE_TARGET)\nendif()\n\nif (APPLE)\n    include_directories(/usr/local/opt/openssl/include)\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -L/usr/local/opt/openssl/lib\")\n\n    include_directories(${LIBSSL_DIR}/include)\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -L${LIBSSL_DIR}/lib\")\n    set(SSL_LIBS crypto ssl)\nelse()\n    set(SSL_LIBS crypto crypt ssl)\nendif()\n\n#----------------------------------------------------------------------------------------------\n\ninclude(${root}/build/libuv/libuv.cmake)\ninclude(${root}/build/hiredis/hiredis.cmake)\n\ninclude_directories(\n    ${root}/src\n    ${root}/src/coord\n    ${root}/deps/libuv/include\n    ${root}/deps\n    ${root}/deps/RedisModulesSDK\n    ${root}/deps/VectorSimilarity/src\n    ${BOOST_DIR}\n    ${root})\n\nadd_subdirectory(deps/rmutil)\nadd_subdirectory(deps/friso)\nadd_subdirectory(deps/snowball)\nadd_subdirectory(deps/phonetics)\n\noption(VECSIM_STATIC \"Build as static library\" ON)\noption(VECSIM_BUILD_TESTS \"Build vecsim tests\" OFF)\n\nadd_subdirectory(deps/VectorSimilarity)\nadd_subdirectory(src/geometry)\nadd_subdirectory(src/coord)\n\n#----------------------------------------------------------------------------------------------\n\nfile(GLOB SOURCES\n    \"src/*.c\"\n    \"src/aggregate/*.c\"\n    \"src/aggregate/expr/*.c\"\n    \"src/aggregate/functions/*.c\"\n    \"src/aggregate/reducers/*.c\"\n    \"src/ext/*.c\"\n    \"src/hll/*.c\"\n    \"src/query_parser/v1/*.c\"\n    \"src/query_parser/v2/*.c\"\n    \"src/util/*.c\"\n    \"src/trie/*.c\"\n    \"src/info/*.c\"\n    \"src/module-init/*.c\"\n    \"src/obfuscation/*.c\"\n\n    \"deps/cndict/cndict_data.c\"\n    \"deps/libnu/*.c\"\n    \"deps/miniz/*.c\"\n    \"deps/base64/*.c\"\n    \"deps/thpool/*.c\"\n    \"deps/triemap/*.c\"\n    \"deps/geohash/*.c\")\n\nadd_library(rscore OBJECT ${SOURCES})\n\nset(FINAL_OBJECTS\n    $<TARGET_OBJECTS:rscore>\n    $<TARGET_OBJECTS:rmutil>\n    $<TARGET_OBJECTS:friso>\n    $<TARGET_OBJECTS:snowball>\n    $<TARGET_OBJECTS:metaphone>\n    $<TARGET_OBJECTS:redisearch-coord>\n)\n\n#----------------------------------------------------------------------------------------------\n\nif (BUILD_STATIC)\n    add_library(redisearch-static STATIC ${FINAL_OBJECTS})\n    add_library(redisearch SHARED ${FINAL_OBJECTS})\n\n    set_target_properties(redisearch PROPERTIES LINKER_LANGUAGE CXX)\n    setup_shared_object_target(redisearch \"\")\n    target_link_libraries(redisearch redisearch-geometry VectorSimilarity ${REDISEARCH_LIBS} ${CMAKE_LD_LIBS})\n\n    set(TEST_MODULE \"redisearch-static\")\n    set(TEST_MODULE_SO $<TARGET_FILE:redisearch>)\n\nelse() # OSS RediSearch\n    add_library(redisearch SHARED ${FINAL_OBJECTS})\n\n    set_target_properties(redisearch PROPERTIES LINKER_LANGUAGE CXX)\n    setup_shared_object_target(redisearch \"\")\n    target_link_libraries(redisearch\n            redisearch-geometry\n            VectorSimilarity\n            redisearch-coord\n            ${LIBUV_LIBS}\n            ${HIREDIS_LIBS}\n            ${SSL_LIBS}\n            ${REDISEARCH_LIBS}\n            ${CMAKE_LD_LIBS})\n\n    extract_debug_symbols(redisearch)\n\n    add_dependencies(redisearch VectorSimilarity)\n\nendif()\n\nif (${COORD_TYPE} STREQUAL \"oss\")\n    add_compile_definitions(PRIVATE)\nelseif (${COORD_TYPE} STREQUAL \"rlec\")\n    add_compile_definitions(PRIVATE RS_CLUSTER_ENTERPRISE)\n    # TODO: why calling it module and not redisearch???\n    set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME \"module-enterprise\")\nelse()\n    message(FATAL_ERROR \"Invalid TYPE (='${TYPE}'). Should be either 'oss' or 'rlec'\")\nendif()\n\n#----------------------------------------------------------------------------------------------\n\nif (BUILD_SEARCH_UNIT_TESTS)\n    enable_testing()\n\n    add_subdirectory(tests/cpptests/redismock)\n\n    set(BUILD_GTEST ON CACHE BOOL \"enable gtest\" FORCE)\n    set(BUILD_GMOCK OFF CACHE BOOL \"disable gmock\" FORCE)\n\n    add_subdirectory(deps/googletest)\n    add_subdirectory(tests/cpptests)\n    add_subdirectory(tests/ctests)\n    add_subdirectory(tests/ctests/ext-example example_extension)\n    add_subdirectory(tests/ctests/coord_tests)\n\nendif()\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.251953125,
          "content": "Except as otherwise specified in the source code headers for specific files, the source code in this repository is made available to you under your choice of \n(i) Redis Source Available License 2.0 (RSALv2) or (ii) the Server Side Public License v1 (SSPLv1)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 15.8779296875,
          "content": "\n.NOTPARALLEL:\n\nROOT=.\n\nMK.cmake=1\nSRCDIR=.\n\nMACOS_PACKAGES=openssl\n\ninclude deps/readies/mk/main\n\n#----------------------------------------------------------------------------------------------\n\ndefine HELPTEXT\nmake setup         # install prerequisited (CAUTION: THIS WILL MODIFY YOUR SYSTEM)\nmake fetch         # download and prepare dependant modules\n\nmake build          # compile and link\n  COORD=oss|rlec      # build coordinator (oss: Open Source, rlec: Enterprise) default: oss\n  STATIC=1            # build as static lib\n  LITE=1              # build RediSearchLight\n  DEBUG=1             # build for debugging\n  TESTS=0             # do not build unit tests\n  WHY=1               # explain CMake decisions (in /tmp/cmake-why)\n  FORCE=1             # Force CMake rerun (default)\n  CMAKE_ARGS=...      # extra arguments to CMake\n  VG=1                # build for Valgrind\n  SAN=type            # build with LLVM sanitizer (type=address|memory|leak|thread)\n  SLOW=1              # do not parallelize build (for diagnostics)\n  GCC=1               # build with GCC (default unless Sanitizer)\n  CLANG=1             # build with CLang\n  STATIC_LIBSTDCXX=0  # link libstdc++ dynamically (default: 1)\n  BOOST_DIR= \t\t  # Custom boost headers location path (default value: .install/boost).\n  \t\t\t\t\t  # Can be left empty if boost is located in the standard system includes path.\n  VERBOSE_UTESTS=1    # enable logging in cpp tests\n  REDIS_VER=\t\t  # Hint the redis version to run against so we choose the appopriate build params.\n\nmake parsers       # build parsers code\nmake clean         # remove build artifacts\n  ALL=1|all          # remove entire artifacts directory (all: remove Conan artifacts)\nmake cc            # compile a single file\n  FILE=file          # source of file to build\nmake run           # run redis with RediSearch\n  COORD=1|oss        # run cluster\n  WITH_RLTEST=1      # run with RLTest wrapper\n  GDB=1              # invoke using gdb\n\nmake test          # run all tests\n  REDIS_STANDALONE=1|0 # test with standalone/cluster Redis\n  SA=1|0               # alias for REDIS_STANDALONE\n  TEST=name            # run specified test\n\nmake pytest        # run python tests (tests/pytests)\n  REDIS_STANDALONE=1|0 # test with standalone/cluster Redis\n  SA=1|0               # alias for REDIS_STANDALONE\n  TEST=name            # e.g. TEST=test:testSearch\n  RLTEST_ARGS=...      # pass args to RLTest\n  REJSON=1|0|get       # also load RedisJSON module (default: 1)\n  REJSON_PATH=path     # use RedisJSON module at `path`\n  EXT=1                # External (existing) environment\n  GDB=1                # RLTest interactive debugging\n  VG=1                 # use Valgrind\n  VG_LEAKS=0           # do not search leaks with Valgrind\n  SAN=type             # use LLVM sanitizer (type=address|memory|leak|thread)\n  ONLY_STABLE=1        # skip unstable tests\n  TEST_PARALLEL=n      # test parallalization\n  LOG_LEVEL=<level>    # server log level (default: debug)\n\nmake unit-tests    # run unit tests (C and C++)\n  TEST=name          # e.g. TEST=FGCTest.testRemoveLastBlock\nmake c-tests       # run C tests (from tests/ctests)\nmake cpp-tests     # run C++ tests (from tests/cpptests)\nmake vecsim-bench  # run VecSim micro-benchmark\n\nmake callgrind     # produce a call graph\n  REDIS_ARGS=\"args\"\n\nmake pack             # create installation packages (default: 'redisearch-oss' package)\n  COORD=rlec|oss        # pack RLEC coordinator ('redisearch' package)\n  LITE=1                # pack RediSearchLight ('redisearch-light' package)\n\nmake upload-artifacts   # copy snapshot packages to S3\n  OSNICK=nick             # copy snapshots for specific OSNICK\nmake upload-release     # copy release packages to S3\n\ncommon options for upload operations:\n  STAGING=1             # copy to staging lab area (for validation)\n  FORCE=1               # allow operation outside CI environment\n  VERBOSE=1             # show more details\n  NOP=1                 # do not copy, just print commands\n\nmake docker        # build for specified platform\n  OSNICK=nick        # platform to build for (default: host platform)\n  TEST=1             # run tests after build\n  PACK=1             # create package\n  ARTIFACTS=1        # copy artifacts to host\n  VERIFY=1           # verify docker is intact\n\nmake box           # create container with volumen mapping into /search\n  OSNICK=nick        # platform spec\nmake sanbox        # create container with CLang Sanitizer\n\nendef\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(COORD),1)\n\toverride COORD:=oss\nelse ifeq ($(COORD),) # Default: OSS Coordinator build\n\toverride COORD:=oss\nendif\n\nifeq ($(COORD),oss) # OSS (community distribution) Coordinator\n\tBINDIR=$(BINROOT)/search-community\n\tSRCDIR=.\n\tTARGET=$(BINDIR)/redisearch.so\n\tPACKAGE_NAME=redisearch-community\n\tMODULE_NAME=search\n\tRAMP_YAML=pack/ramp-community.yml\n\tPACKAGE_S3_DIR=redisearch-oss\n\nelse ifeq ($(COORD),rlec) # RLEC Coordinator\n\tBINDIR=$(BINROOT)/search-enterprise\n\tSRCDIR=.\n\tTARGET=$(BINDIR)/module-enterprise.so\n\tPACKAGE_NAME=redisearch\n\tMODULE_NAME=search\n\tRAMP_YAML=pack/ramp-enterprise.yml\n\tPACKAGE_S3_DIR=redisearch\n\nelse\n\t___:=$(error COORD should be either oss or rlec)\nendif\n\nifeq ($(LITE),1) # Search Lite - overwrite the above settings (todo: retire lite completely)\n\tBINDIR=$(BINROOT)/search-lite\n\tSRCDIR=.\n\tTARGET=$(BINDIR)/redisearch.so\n\tPACKAGE_NAME=redisearch-light\n\tMODULE_NAME=searchlight\n\tRAMP_YAML=pack/ramp-light.yml\n\tPACKAGE_S3_DIR=redisearch\nendif\n\nifeq ($(STATIC),1) # Static build - overwrite the above settings\n\tBINDIR=$(BINROOT)/search-static\n\tSRCDIR=.\n\tTARGET=$(BINDIR)/redisearch.a\n\tPACKAGE_NAME=\n\tMODULE_NAME=\n\tRAMP_YAML=\n\tPACKAGE_S3_DIR=\nendif\n\nLIBUV_DIR=$(ROOT)/deps/libuv\nexport LIBUV_BINDIR=$(ROOT)/bin/$(FULL_VARIANT.release)/libuv\ninclude build/libuv/Makefile.defs\n\nHIREDIS_DIR=$(ROOT)/deps/hiredis\nHIREDIS_BINDIR=$(ROOT)/bin/$(FULL_VARIANT.release)/hiredis\ninclude build/hiredis/Makefile.defs\n\nexport COORD\nexport PACKAGE_NAME\n\n#----------------------------------------------------------------------------------------------\n\nCC_C_STD=gnu11\n# CC_CXX_STD=c++20\n\n# Todo: currently when we run sanitizer against latest stable redis version where libstd++ is NOT dynamically linked\n# we must use static with sanitizer. When we run sanitizer against redis unstable where libstd++ is dynamically\n# linked to redis, we have to use dynamic as well.\nexport CC_STATIC_LIBSTDCXX=0\n\n# Equivalent to: if we run on sanitizer AND version isn't unstable (\nifneq ($(SAN),)\nifneq ($(REDIS_VER), 'unstable')\nexport CC_STATIC_LIBSTDCXX=1\nendif\nendif\n#----------------------------------------------------------------------------------------------\n\nifeq ($(VERBOSE_UTESTS),1)\nCC_FLAGS.common += -DVERBOSE_UTESTS\nendif\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(TESTS),0)\nCMAKE_TEST=-DBUILD_SEARCH_UNIT_TESTS=OFF\nelse\nCMAKE_TEST=-DBUILD_SEARCH_UNIT_TESTS=ON\nendif\n\nifeq ($(STATIC),1)\nCMAKE_STATIC += -DBUILD_STATIC=ON\nendif\n\nifeq ($(LITE),1)\nCMAKE_LITE = -DBUILD_LITE=ON\nendif\n\n#----------------------------------------------------------------------------------------------\nBOOST_DIR ?= $(ROOT)/.install/boost\n_CMAKE_FLAGS += -DMODULE_NAME=$(MODULE_NAME) -DBOOST_DIR=$(BOOST_DIR) -DMAX_WORKER_THREADS=$(MAX_WORKER_THREADS) -DSAN=$(SAN)\n\nifeq ($(OS),macos)\n_CMAKE_FLAGS += -DLIBSSL_DIR=$(openssl_prefix) -DAPPLE=ON\nendif\n\nCMAKE_COORD += -DCOORD_TYPE=$(COORD)\n_CMAKE_FLAGS += $(CMAKE_ARGS) $(CMAKE_STATIC) $(CMAKE_COORD) $(CMAKE_TEST) $(CMAKE_LITE)\n\ninclude $(MK)/defs\n\nMK_CUSTOM_CLEAN=1\n\n#----------------------------------------------------------------------------------------------\n\nMISSING_DEPS:=\n\nifeq ($(wildcard $(LIBUV)),)\nMISSING_DEPS += $(LIBUV)\nendif\n\nifeq ($(wildcard $(HIREDIS)),)\n#@@ MISSING_DEPS += $(HIREDIS)\nendif\n\nifneq ($(MISSING_DEPS),)\nDEPS=1\nendif\n\nDEPENDENCIES=libuv #@@  s2geometry hiredis\n\nifneq ($(filter all deps $(DEPENDENCIES) pack,$(MAKECMDGOALS)),)\nDEPS=1\nendif\n\n.PHONY: deps $(DEPENDENCIES)\n\n#----------------------------------------------------------------------------------------------\n\ninclude $(MK)/rules\n\n#----------------------------------------------------------------------------------------------\n\nexport REJSON ?= 1\n\nPLATFORM_TRI:=$(shell $(READIES)/bin/platform -t)\nREJSON_BINDIR=$(ROOT)/bin/$(PLATFORM_TRI)/RedisJSON\n\nifneq ($(REJSON),0)\n\nifneq ($(SAN),)\nREJSON_BRANCH ?= master\nREJSON_SO=$(BINROOT)/RedisJSON/$(REJSON_BRANCH)/rejson.so\nREJSON_PATH=$(REJSON_SO)\n\n$(REJSON_SO):\n\t$(SHOW)BINROOT=$(BINROOT) SAN=$(SAN) ./sbin/build-redisjson\nelse\nREJSON_SO=\nendif\n\nendif # REJSON=0\n\n#----------------------------------------------------------------------------------------------\n\nclean:\nifeq ($(ALL),1)\n\t$(SHOW)rm -rf $(BINROOT)\nelse ifeq ($(ALL),all)\n\t$(SHOW)rm -rf $(BINROOT) $(REJSON_BINDIR)\nelse\n\t$(SHOW)$(MAKE) -C $(BINDIR) clean\nendif\n\n#----------------------------------------------------------------------------------------------\n\nparsers:\nifeq ($(FORCE),1)\n\t$(SHOW)cd src/aggregate/expr ;\\\n\trm -f lexer.c parser.c\n\t$(SHOW)$(MAKE) -C src/query_parser/v1 clean\n\t$(SHOW)$(MAKE) -C src/query_parser/v2 clean\nendif\n\t$(SHOW)$(MAKE) -C src/aggregate/expr\n\t$(SHOW)$(MAKE) -C src/query_parser/v1\n\t$(SHOW)$(MAKE) -C src/query_parser/v2\n\n.PHONY: parsers\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(DEPS),1)\n\n# s2geometry: $(S2GEOMETRY)\n#\n# $(S2GEOMETRY):\n# \t@echo Building s2geometry...\n# \t$(SHOW)$(MAKE) --no-print-directory -C build/s2geometry DEBUG=''\n\nlibuv: $(LIBUV)\n\n$(LIBUV):\n\t@echo Building libuv...\n\t$(SHOW)$(MAKE) --no-print-directory -C build/libuv DEBUG=''\n\nhiredis: $(HIREDIS)\n\n$(HIREDIS):\n\t@echo Building hiredis...\n\t$(SHOW)$(MAKE) --no-print-directory -C build/hiredis DEBUG=''\n\n#----------------------------------------------------------------------------------------------\n\nelse\n\ndeps: ;\n\nendif # DEPS\n\n#----------------------------------------------------------------------------------------------\n\nsetup:\n\t@echo Setting up system...\n\t$(SHOW)./sbin/setup\n\nfetch:\n\t-git submodule update --init --recursive\n\n.PHONY: setup fetch\n\n#----------------------------------------------------------------------------------------------\n\nCMAKE_TARGET_BUILD_DIR=$(CMAKE_TARGET_DIR)CMakeFiles/$(CMAKE_TARGET).dir\n\ncc:\n\t@$(READIES)/bin/sep1\n\t$(SHOW)$(MAKE) -C $(BINDIR) -f $(CMAKE_TARGET_BUILD_DIR)/build.make $(CMAKE_TARGET_BUILD_DIR)/$(FILE).o\n\n.PHONY: cc\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(REDIS_STANDALONE),0)\nWITH_RLTEST=1\nelse ifeq ($(SA),0)\nWITH_RLTEST=1\nendif\n\nrun:\nifeq ($(WITH_RLTEST),1)\n\t$(SHOW)REJSON=$(REJSON) REJSON_PATH=$(REJSON_PATH) FORCE='' RLTEST= ENV_ONLY=1 LOG_LEVEL=$(LOG_LEVEL) \\\n\tMODULE=$(MODULE) REDIS_STANDALONE=$(REDIS_STANDALONE) SA=$(SA) \\\n\t\t$(ROOT)/tests/pytests/runtests.sh $(abspath $(TARGET))\nelse\nifeq ($(GDB),1)\nifeq ($(CLANG),1)\n\t$(SHOW)lldb -o run -- redis-server --loadmodule $(abspath $(TARGET))\nelse\n\t$(SHOW)gdb -ex r --args redis-server --loadmodule $(abspath $(TARGET))\nendif\nelse\n\t$(SHOW)redis-server --loadmodule $(abspath $(TARGET))\nendif\nendif\n\n.PHONY: run\n\n#----------------------------------------------------------------------------------------------\n\nCTEST_DEFS=\\\n\tBINROOT=$(BINROOT) \\\n\tBINDIR=$(BINDIR) \\\n\tCOV=$(COV) \\\n\tSAN=$(SAN) \\\n\tSLOW=$(SLOW)\n\n#----------------------------------------------------------------------------------------------\n\nFLOW_TESTS_DEFS=\\\n\tBINROOT=$(BINROOT) \\\n\tVG=$(VALGRIND) \\\n\tVG_LEAKS=0 \\\n\tSAN=$(SAN) \\\n\tEXT=$(EXT)\n\nexport EXT_TEST_PATH:=$(BINDIR)/example_extension/libexample_extension.so\n\nifeq ($(SLOW),1)\n_TEST_PARALLEL=0\nelse ifeq ($(TEST_PARALLEL),)\n_TEST_PARALLEL=1\nelse\n_TEST_PARALLEL=$(TEST_PARALLEL)\nendif\n\ntest: unit-tests pytest\n\nunit-tests:\n\t$(SHOW)BINROOT=$(BINROOT) BENCH=$(BENCHMARK) TEST=$(TEST) GDB=$(GDB) $(ROOT)/sbin/unit-tests\n\npytest: $(REJSON_SO)\nifneq ($(REJSON_PATH),)\n\t@echo Testing with $(REJSON_PATH)\nendif\n\t$(SHOW)REJSON=$(REJSON) REJSON_PATH=$(REJSON_PATH) TEST=$(TEST) $(FLOW_TESTS_DEFS) FORCE='' PARALLEL=$(_TEST_PARALLEL) \\\n\tLOG_LEVEL=$(LOG_LEVEL) TEST_TIMEOUT=$(TEST_TIMEOUT) MODULE=$(MODULE) REDIS_STANDALONE=$(REDIS_STANDALONE) SA=$(SA) \\\n\t\t$(ROOT)/tests/pytests/runtests.sh $(abspath $(TARGET))\n\n#----------------------------------------------------------------------------------------------\n\nc-tests:\n\t$(SHOW)BINROOT=$(BINROOT) C_TESTS=1 TEST=$(TEST) GDB=$(GDB) $(ROOT)/sbin/unit-tests\n\ncpp-tests:\n\t$(SHOW)BINROOT=$(BINROOT) CPP_TESTS=1 BENCH=$(BENCHMARK) TEST=$(TEST) GDB=$(GDB) $(ROOT)/sbin/unit-tests\n\nvecsim-bench:\n\t$(SHOW)$(BINROOT)/search/tests/cpptests/rsbench\n\n.PHONY: test unit-tests pytest c_tests cpp_tests vecsim-bench\n\n#----------------------------------------------------------------------------------------------\n\nREDIS_ARGS +=\n\nCALLGRIND_ARGS=\\\n\t--tool=callgrind \\\n\t--dump-instr=yes \\\n\t--simulate-cache=no \\\n\t--collect-jumps=yes \\\n\t--collect-atstart=yes \\\n\t--collect-systime=yes \\\n\t--instr-atstart=yes \\\n\t-v redis-server \\\n\t--protected-mode no \\\n\t--save \"\" \\\n\t--appendonly no\n\ncallgrind: $(TARGET)\n\t$(SHOW)valgrind $(CALLGRIND_ARGS) --loadmodule $(abspath $(TARGET)) $(REDIS_ARGS)\n\n#----------------------------------------------------------------------------------------------\n\nifneq ($(RAMP_YAML),)\n\n# RAMP_VARIANT=$(subst release,,$(FLAVOR))$(_VARIANT.string)\n\nPACK_ARGS=\\\n\tVARIANT=$(VARIANT) \\\n\tPACKAGE_NAME=$(PACKAGE_NAME) \\\n\tMODULE_NAME=$(MODULE_NAME) \\\n\tRAMP_YAML=$(RAMP_YAML) \\\n\tRAMP_ARGS=$(RAMP_ARGS)\n\nRAMP.release:=$(shell JUST_PRINT=1 RAMP=1 DEPS=0 RELEASE=1 SNAPSHOT=0 $(PACK_ARGS) $(ROOT)/sbin/pack.sh)\n\nifneq ($(FORCE),1)\nbin/artifacts/$(RAMP.release): $(RAMP_YAML) # $(TARGET)\nelse\nbin/artifacts/$(RAMP.release): __force\nendif\n\n\t@echo Packing module...\n\t$(SHOW)$(PACK_ARGS) $(ROOT)/sbin/pack.sh $(TARGET)\n\npack: bin/artifacts/$(RAMP.release)\n\nelse\n\npack:\n\t@echo \"Nothing to pack for this configuration.\"\n\nendif # RAML_YAML\n\nupload-release:\n\t$(SHOW)RELEASE=1 ./sbin/upload-artifacts\n\nupload-artifacts:\n\t$(SHOW)SNAPSHOT=1 ./sbin/upload-artifacts\n\n.PHONY: pack upload-artifacts upload-release\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(REMOTE),1)\nBENCHMARK_ARGS=run-remote\nelse\nBENCHMARK_ARGS=run-local\nendif\n\nBENCHMARK_ARGS += --module_path $(realpath $(TARGET)) --required-module search\n\nifeq ($(REJSON),1)\nBENCHMARK_ARGS += --module_path $(realpath $(REJSON_PATH)) --required-module ReJSON\nendif\n\nifneq ($(BENCHMARK),)\nBENCHMARK_ARGS += --test $(BENCHMARK)\nendif\n\nbenchmark:\n\t$(SHOW)cd tests/benchmarks ;\\\n\tredisbench-admin $(BENCHMARK_ARGS)\n\n.PHONY: benchmark\n\n#----------------------------------------------------------------------------------------------\n\nCOV_EXCLUDE_DIRS += \\\n\tbin \\\n\tdeps \\\n\ttests \\\n\tcoord/tests\n\nCOV_EXCLUDE+=$(foreach D,$(COV_EXCLUDE_DIRS),'$(realpath $(ROOT))/$(D)/*')\n\nifeq ($(REJSON_PATH),)\nREJSON_MODULE_FILE:=$(shell mktemp /tmp/rejson.XXXXXX)\nREJSON_COV_ARG=REJSON_PATH=$$(cat $(REJSON_MODULE_FILE))\nendif\n\ncoverage:\nifeq ($(REJSON_PATH),)\n\t$(SHOW)OSS=1 MODULE_FILE=$(REJSON_MODULE_FILE) ./sbin/get-redisjson\nendif\n\t$(SHOW)$(MAKE) build COV=1\n\t$(SHOW)$(COVERAGE_RESET)\n\t-$(SHOW)$(MAKE) unit-tests COV=1 $(REJSON_COV_ARG)\n\t-$(SHOW)$(MAKE) pytest REDIS_STANDALONE=1 COV=1 $(REJSON_COV_ARG)\n\t-$(SHOW)$(MAKE) pytest REDIS_STANDALONE=0 COV=1 $(REJSON_COV_ARG)\n\t$(SHOW)$(COVERAGE_COLLECT_REPORT)\n\n.PHONY: coverage\n\n#----------------------------------------------------------------------------------------------\n\ndocker:\n\t$(SHOW)$(MAKE) -C build/docker\nifeq ($(VERIFY),1)\n\t$(SHOW)$(MAKE) -C build/docker verify\nendif\n\n# box:\n# ifneq ($(OSNICK),)\n# \t@docker run -it -v $(PWD):/build --cap-add=SYS_PTRACE --security-opt seccomp=unconfined $(shell $(ROOT)/deps/readies/bin/platform --docker-from-osnick $(OSNICK)) bash\n# else\n# \t@docker run -it -v $(PWD):/build --cap-add=SYS_PTRACE --security-opt seccomp=unconfined $(shell $(ROOT)/deps/readies/bin/platform --docker) bash\n# endif\n\nifneq ($(wildcard /w/*),)\nSANBOX_ARGS += -v /w:/w\nendif\n\nsanbox:\n\t@docker run -it -v $(PWD):/search -w /search --cap-add=SYS_PTRACE --security-opt seccomp=unconfined $(SANBOX_ARGS) redisfab/clang:16-$(ARCH)-bullseye bash\n\n.PHONY: box sanbox\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.71875,
          "content": "[![Dockerhub](https://img.shields.io/docker/pulls/redis/redis-stack-server?label=redis-stack-server)](https://hub.docker.com/r/redis/redis-stack-server/)\n[![Codecov](https://codecov.io/gh/RediSearch/RediSearch/branch/master/graph/badge.svg)](https://codecov.io/gh/RediSearch/RediSearch)\n[![Forum](https://img.shields.io/badge/Forum-RediSearch-blue)](https://forum.redis.com/c/modules/redisearch/)\n[![Discord](https://img.shields.io/discord/697882427875393627)](https://discord.gg/xTbqgTB)\n\n[![Latest Release](https://img.shields.io/github/v/release/RediSearch/RediSearch?label=latest%20release)](https://github.com/RediSearch/RediSearch/releases/latest)\n\n[![Latest 2.8](https://img.shields.io/github/v/release/RediSearch/RediSearch?filter=v2.8*&label=latest%20maintenance%20release%20for%202.8)](https://github.com/RediSearch/RediSearch/releases?q=tag:v2.8%20draft:false)\n[![Latest 2.6](https://img.shields.io/github/v/release/RediSearch/RediSearch?filter=v2.6*&label=latest%20maintenance%20release%20for%202.6)](https://github.com/RediSearch/RediSearch/releases?q=tag:v2.6%20draft:false)\n\n\n# RediSearch\n## Querying, secondary indexing, and full-text search for Redis\n<picture>\n<img src=\"https://redis.io/docs/interact/search-and-query/img/logo.svg\" title=\"RediSearch's Logo\" width=\"300\">\n</picture>\n\n## Overview\n\nRediSearch is a [Redis module](https://redis.io/modules) that provides querying, secondary indexing, and full-text search for Redis. To use RediSearch, you first declare indexes on your Redis data. You can then use the RediSearch query language to query that data.\n\nRediSearch uses compressed, inverted indexes for fast indexing with a low memory footprint.\n\nRediSearch indexes enhance Redis by providing exact-phrase matching, fuzzy search, and numeric filtering, among many other features.\n\n## Getting started\n\nIf you're just getting started with RediSearch, check out the [official RediSearch tutorial](https://github.com/RediSearch/redisearch-getting-started). Also, consider viewing our [RediSearch video explainer](https://www.youtube.com/watch?v=B10nHEdW3NA).\n\nThe fastest way to get up and running with RediSearch is by using the [Redis Stack Docker image](https://hub.docker.com/r/redis/redis-stack/).\n\n### How do I Redis?\n\n[Learn for free at Redis University](https://university.redis.com/)\n\n[Build faster with the Redis Launchpad](https://launchpad.redis.com/)\n\n[Try the Redis Cloud](https://redis.com/try-free/)\n\n[Dive in developer tutorials](https://developer.redis.com/)\n\n[Join the Redis community](https://redis.com/community/)\n\n[Work at Redis](https://redis.com/company/careers/jobs/)\n\n## Trying RediSearch\n\nTo try RediSearch, either use the RediSearch Docker image, or [create a free Redis Cloud Essentials account](https://redis.com/try-free/?utm_source=redisio&utm_medium=referral&utm_campaign=2023-09-try_free&utm_content=cu-redis_cloud_users) to get a RediSearch instance in the cloud.\n\n### Docker image\n\nThe [Redis Stack Docker image](https://hub.docker.com/r/redis/redis-stack-server/) makes it easy to try RediSearch.\n\nTo create a local RediSearch container, run:\n\n```sh\n$ docker run -p 6379:6379 redis/redis-stack-server:latest\n```\n\nTo connect to this instance, run:\n\n```sh\n$ redis-cli\n```\n\n## Documentation\n\nThe [RediSearch documentation](https://redis.io/docs/interact/search-and-query/) provides a complete overview of RediSearch. Helpful sections include:\n\n* The [RediSearch quick start](https://redis.io/docs/latest/develop/get-started/document-database/)\n* The [RediSearch command reference](https://redis.io/commands/?group=search)\n* References on features such as [aggregations](https://redis.io/docs/interact/search-and-query/search/aggregations/), [highlights](https://redis.io/docs/interact/search-and-query/advanced-concepts/highlight/), [stemming](https://redis.io/docs/interact/search-and-query/advanced-concepts/stemming/), and [spelling correction](https://redis.io/docs/interact/search-and-query/advanced-concepts/spellcheck/).\n\n## Mailing list and forum\n\nGot questions? Join us in [#redisearch on the Redis Discord](https://discord.gg/knMsnYmwXu) server.\n\nIf you have a more detailed question, drop us a line on the [RediSearch Discussion Forum](http://forum.redis.com/c/modules/redisearch).\n\n## Client libraries\n\n### Official clients\n| [<img width=\"75\" src=\"https://user-images.githubusercontent.com/1655867/228534778-d0b41ce8-3ce4-4340-bd32-754f01ebed43.svg\" />][dotnet-quickstart]  | [<img width=\"75\" src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/java/java-plain-wordmark.svg\" />][java-quickstart] | [<img width=\"75\" src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original-wordmark.svg\" />][nodejs-quickstart]   | [<img width=\"75\" src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original-wordmark.svg\" />][python-quickstart]  |\n|---|------------------------------------------------------------------------------------------------------------------------------------------|---|---|\n|  [NRedisStack][dotnet-quickstart] | [Jedis][java-quickstart]                                                                                                                 | [node-redis][nodejs-quickstart]  |  [redis-py][python-quickstart] |\n|  [Redis.OM][dotnet-om] | [Redis OM Spring][java-om]                                                                                                               | [redis-om-node][nodejs-om]  |  [redis-om][python-om] |\n\n[dotnet-quickstart]: https://redis.io/docs/clients/dotnet/\n[dotnet-om]: https://github.com/redis/redis-om-dotnet\n\n[java-quickstart]: https://redis.io/docs/clients/java/\n[java-om]: https://github.com/redis/redis-om-spring\n\n[nodejs-quickstart]: https://redis.io/docs/clients/nodejs/\n[nodejs-om]: https://github.com/redis/redis-om-node\n\n[python-quickstart]: https://redis.io/docs/clients/python/\n[python-om]: https://github.com/redis/redis-om-python\n\n### Community-maintained clients\n\n| Project | Language | License | Author                                         | Stars |\n|----------|---------|--------|------------------------------------------------|-------|\n| [redisson][redisson-url] | Java | MIT | [Redisson][redisson-url] | ![Stars][redisson-stars] | |\n| [redisearch-go][redisearch-go-url] | Go | BSD | [Redis][redisearch-go-author]                  | [![redisearch-go-stars]][redisearch-go-url] |\n| [rueidis][rueidis-url] | Go | Apache 2.0 | [Rueian][rueidis-author]                       | [![rueidis-stars]][rueidis-url] |\n| [redisearch-php][redisearch-php-url] | PHP | MIT | [Ethan Hann][redisearch-php-author]            | [![redisearch-php-stars]][redisearch-php-url] |\n| [php-redisearch][php-redisearch-url] | PHP | MIT | [MacFJA][php-redisearch-author]                | [![php-redisearch-stars]][php-redisearch-url] |\n| [redisearch-api-rs][redisearch-api-rs-url] | Rust | BSD | [Redis][redisearch-api-rs-author]              | [![redisearch-api-rs-stars]][redisearch-api-rs-url] |\n| [redi_search_rails][redi_search_rails-url] | Ruby | MIT | [Dmitry Polyakovsky][redi_search_rails-author] | [![redi_search_rails-stars]][redi_search_rails-url]|\n| [redisearch-rb][redisearch-rb-url] | Ruby | MIT | [Victor Ruiz][redisearch-rb-author] | [![redisearch-rb-stars]][redisearch-rb-url]|\n| [redi_search][redi_search-url] | Ruby | MIT | [Nick Pezza][redi_search-author] | [![redi_search-stars]][redi_search-url] |\n| [coredis][coredis-url] | Python | MIT | [Ali-Akber Saifee][coredis-author] | [![coredis-stars]][coredis-url] | [Documentation][coredis-documentation]\n\n[redis-url]: https://redis.com\n\n[redisson-url]: https://github.com/redisson/redisson\n[redisson-stars]: https://img.shields.io/github/stars/redisson/redisson.svg?style=social&amp;label=Star&amp;maxAge=2592000\n[redisson-package]: https://central.sonatype.com/artifact/org.redisson/redisson\n\n[redisearch-go-url]: https://github.com/RediSearch/redisearch-go\n[redisearch-go-author]: https://redis.com\n[redisearch-go-stars]: https://img.shields.io/github/stars/RediSearch/redisearch-go.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[rueidis-url]: https://github.com/rueian/rueidis\n[rueidis-author]: https://github.com/rueian\n[rueidis-stars]: https://img.shields.io/github/stars/rueian/rueidis.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[redisearch-php-url]: https://github.com/ethanhann/redisearch-php\n[redisearch-php-author]: https://github.com/ethanhann\n[redisearch-php-stars]: https://img.shields.io/github/stars/ethanhann/redisearch-php.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[php-redisearch-url]: https://github.com/MacFJA/php-redisearch\n[php-redisearch-author]: https://github.com/MacFJA\n[php-redisearch-stars]: https://img.shields.io/github/stars/MacFJA/php-redisearch.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[redi_search_rails-url]: https://github.com/dmitrypol/redi_search_rails\n[redi_search_rails-author]: https://github.com/dmitrypol\n[redi_search_rails-stars]: https://img.shields.io/github/stars/dmitrypol/redi_search_rails.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[redisearch-rb-url]: https://github.com/vruizext/redisearch-rb\n[redisearch-rb-author]: https://github.com/vruizext\n[redisearch-rb-stars]: https://img.shields.io/github/stars/vruizext/redisearch-rb.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[redi_search-url]: https://github.com/npezza93/redi_search\n[redi_search-author]: https://github.com/npezza93\n[redi_search-stars]: https://img.shields.io/github/stars/npezza93/redi_search.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[redisearch-api-rs-url]: https://github.com/RediSearch/redisearch-api-rs\n[redisearch-api-rs-author]: https://redis.com\n[redisearch-api-rs-stars]: https://img.shields.io/github/stars/RediSearch/redisearch-api-rs.svg?style=social&amp;label=Star&amp;maxAge=2592000\n\n[coredis-url]: https://github.com/alisaifee/coredis\n[coredis-author]: https://github.com/alisaifee\n[coredis-stars]: https://img.shields.io/github/stars/alisaifee/coredis.svg?style=social&amp;label=Star&amp;maxAge=2592000\n[coredis-documentation]: https://coredis.readthedocs.io/en/stable/handbook/modules.html#redisearch\n\n## RediSearch features\n\n* Full-Text indexing of multiple fields in Redis hashes\n* Incremental indexing without performance loss\n* Document ranking (using [tf-idf](https://en.wikipedia.org/wiki/Tf%E2%80%93idf), with optional user-provided weights)\n* Field weighting\n* Complex boolean queries with AND, OR, and NOT operators\n* Prefix matching, fuzzy matching, and exact-phrase queries\n* Support for [double-metaphone phonetic matching](https://redis.io/docs/interact/search-and-query/advanced-concepts/phonetic_matching/)\n* Auto-complete suggestions (with fuzzy prefix suggestions)\n* Stemming-based query expansion in [many languages](https://redis.io/docs/stack/search/reference/stemming/) (using [Snowball](http://snowballstem.org/))\n* Support for Chinese-language tokenization and querying (using [Friso](https://github.com/lionsoul2014/friso))\n* Numeric filters and ranges\n* Geospatial searches using [Redis geospatial indexing](/commands/georadius)\n* A powerful aggregations engine\n* Supports for all utf-8 encoded text\n* Retrieve full documents, selected fields, or only the document IDs\n* Sorting results (for example, by creation date)\n\n## Cluster support\n\nRediSearch has a distributed cluster version that scales to billions of documents across hundreds of servers. At the moment, distributed RediSearch is available as part of [Redis Cloud](https://redis.com/redis-enterprise-cloud/overview/) and [Redis Enterprise Software](https://redis.com/redis-enterprise-software/overview/).\n\nSee [RediSearch on Redis Enterprise](https://redis.com/modules/redisearch/) for more information.\n\n### License\n\nRediSearch is licensed under the [Redis Source Available License 2.0 (RSALv2)](https://redis.com/legal/rsalv2-agreement) or the [Server Side Public License v1 (SSPLv1)](https://www.mongodb.com/licensing/server-side-public-license).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.265625,
          "content": "# Security Policy\n\n## Supported Versions\n\nRediSearch is generally backwards compatible with very few exceptions, so we\nrecommend users to always use the latest version to experience stability,\nperformance and security.\n\nWe generally backport security issues to a single previous major version,\nunless this is not possible or feasible with a reasonable effort.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.8     | :white_check_mark: |\n| 2.6     | :white_check_mark: |\n| < 2.6   | :x:                |\n\n## Reporting a Vulnerability\n\nIf you believe you've discovered a serious vulnerability, please contact the\nRedis core team at redis@redis.io. We will evaluate your report and if\nnecessary issue a fix and an advisory. If the issue was previously undisclosed,\nwe'll also mention your name in the credits.\n\n## Responsible Disclosure\n\nIn some cases, we may apply a responsible disclosure process to reported or\notherwise discovered vulnerabilities. We will usually do that for a critical\nvulnerability, and only if we have a good reason to believe information about\nit is not yet public.\n\nThis process involves providing an early notification about the vulnerability,\nits impact and mitigations to a short list of vendors under a time-limited\nembargo on public disclosure.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands.json",
          "type": "blob",
          "size": 31.7578125,
          "content": "{\n  \"FT.CREATE\": {\n    \"summary\": \"Creates an index with the given spec\",\n    \"complexity\": \n      \"O(K) at creation where K is the number of fields, O(N) if scanning the keyspace is triggered, where N is the number of keys in the keyspace\",\n      \"history\": [        \n        [\n          \"2.0.0\",\n          \"Added `PAYLOAD_FIELD` argument for backward support of `FT.SEARCH` deprecated `WITHPAYLOADS` argument\"\n        ],\n        [\n          \"2.0.0\",\n          \"Deprecated `PAYLOAD_FIELD` argument\"\n        ]\n      ],\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"data_type\",\n        \"token\": \"ON\",\n        \"type\": \"oneof\",\n        \"arguments\": [\n          {\n              \"name\": \"hash\",\n              \"type\": \"pure-token\",\n              \"token\": \"HASH\"\n          },\n          {\n              \"name\": \"json\",\n              \"type\": \"pure-token\",\n              \"token\": \"JSON\"\n          }\n        ],\n        \"optional\": true\n      },\n      {\n        \"name\": \"prefix\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"count\",\n            \"type\": \"integer\",\n            \"token\":\"PREFIX\"\n          },\n          {\n            \"name\": \"prefix\",\n            \"type\": \"string\",\n            \"multiple\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"filter\",\n        \"type\": \"string\",\n        \"optional\": true,\n        \"token\": \"FILTER\"\n      },\n      {\n        \"name\": \"default_lang\",\n        \"type\": \"string\",\n        \"token\":\"LANGUAGE\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"lang_attribute\",\n        \"type\": \"string\",\n        \"token\":\"LANGUAGE_FIELD\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"default_score\",\n        \"type\": \"double\",\n        \"token\":\"SCORE\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"score_attribute\",\n        \"type\": \"string\",\n        \"token\":\"SCORE_FIELD\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"payload_attribute\",\n        \"type\": \"string\",\n        \"token\":\"PAYLOAD_FIELD\",\n        \"optional\": true\n      },\n      {\n          \"name\": \"maxtextfields\",\n          \"type\": \"pure-token\",\n          \"token\": \"MAXTEXTFIELDS\",\n          \"optional\": true\n      },\n      {\n        \"name\": \"seconds\",\n        \"type\": \"double\",\n        \"token\":\"TEMPORARY\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nooffsets\",\n        \"type\": \"pure-token\",\n        \"token\": \"NOOFFSETS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nohl\",\n        \"type\": \"pure-token\",\n        \"token\": \"NOHL\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nofields\",\n        \"type\": \"pure-token\",\n        \"token\": \"NOFIELDS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nofreqs\",\n        \"type\": \"pure-token\",\n        \"token\": \"NOFREQS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"stopwords\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"token\":\"STOPWORDS\",\n        \"arguments\": [\n          {\n            \"name\": \"count\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"stopword\",\n            \"type\": \"string\",\n            \"multiple\": true,\n            \"optional\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"skipinitialscan\",\n        \"type\": \"pure-token\",\n        \"token\": \"SKIPINITIALSCAN\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"schema\",\n        \"type\": \"pure-token\",\n        \"token\": \"SCHEMA\"\n      },\n      {\n        \"name\": \"field\",\n        \"type\": \"block\",\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"field_name\",\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"alias\",\n            \"type\": \"string\",\n            \"token\": \"AS\",\n            \"optional\": true\n          },\n          {\n            \"name\": \"field_type\",\n            \"type\": \"oneof\",\n            \"arguments\": [\n              {\n                \"name\": \"text\",\n                \"type\": \"pure-token\",\n                \"token\": \"TEXT\"\n              },\n              {\n                \"name\": \"tag\",\n                \"type\": \"pure-token\",\n                \"token\": \"TAG\"\n              },\n              {\n                \"name\": \"numeric\",\n                \"type\": \"pure-token\",\n                \"token\": \"NUMERIC\"\n              },\n              {\n                \"name\": \"geo\",\n                \"type\": \"pure-token\",\n                \"token\": \"GEO\"\n              },\n              {\n                \"name\": \"vector\",\n                \"type\": \"pure-token\",\n                \"token\": \"VECTOR\"\n              }\n            ]\n          },\n          {\n            \"name\": \"withsuffixtrie\",\n            \"type\": \"pure-token\",\n            \"token\": \"WITHSUFFIXTRIE\",\n            \"optional\": true\n          },\n          {\n            \"name\": \"INDEXEMPTY\",\n            \"type\": \"pure-token\",\n            \"token\": \"INDEXEMPTY\",\n            \"optional\": true\n          },\n          {\n            \"name\": \"indexmissing\",\n            \"type\": \"pure-token\",\n            \"token\": \"INDEXMISSING\",\n            \"optional\": true\n          },\n          {\n            \"name\": \"sortable\",\n            \"type\": \"block\",\n            \"optional\": true,\n            \"arguments\": [\n              {\n                \"name\": \"sortable\",\n                \"type\": \"pure-token\",\n                \"token\": \"SORTABLE\"\n              },\n              {\n                \"name\": \"UNF\",\n                \"type\": \"pure-token\",\n                \"token\": \"UNF\",\n                \"optional\": true\n              }\n            ]\n          },\n          {\n            \"name\": \"noindex\",\n            \"type\": \"pure-token\",\n            \"token\": \"NOINDEX\",\n            \"optional\": true\n          }\n        ]\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.INFO\": {\n    \"summary\": \"Returns information and statistics on the index\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.EXPLAIN\": {\n    \"summary\": \"Returns the execution plan for a complex query\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"query\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"dialect\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\": \"DIALECT\",\n        \"since\": \"2.4.3\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.EXPLAINCLI\": {\n    \"summary\": \"Returns the execution plan for a complex query\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"query\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"dialect\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\": \"DIALECT\",\n        \"since\": \"2.4.3\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.ALTER\": {\n    \"summary\": \"Adds a new field to the index\",\n    \"complexity\": \"O(N) where N is the number of keys in the keyspace\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"skipinitialscan\",\n        \"type\": \"pure-token\",\n        \"token\": \"SKIPINITIALSCAN\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"schema\",\n        \"type\": \"pure-token\",\n        \"token\": \"SCHEMA\"\n      },\n      {\n        \"name\": \"add\",\n        \"type\": \"pure-token\",\n        \"token\": \"ADD\"\n      },\n      {\n        \"name\": \"field\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"options\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.DROPINDEX\": {\n    \"summary\": \"Deletes the index\",\n    \"complexity\": \"O(1) or O(N) if documents are deleted, where N is the number of keys in the keyspace\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"delete docs\",\n        \"type\": \"oneof\",\n        \"arguments\": [\n          {\n            \"name\": \"delete docs\",\n            \"type\": \"pure-token\",\n            \"token\":\"DD\"\n          }\n        ],\n        \"optional\": true\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.ALIASADD\": {\n    \"summary\": \"Adds an alias to the index\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"alias\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.ALIASUPDATE\": {\n    \"summary\": \"Adds or updates an alias to the index\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"alias\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.ALIASDEL\": {\n    \"summary\": \"Deletes an alias from the index\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"alias\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.TAGVALS\": {\n    \"summary\": \"Returns the distinct tags indexed in a Tag field\",\n    \"complexity\": \"O(N)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"field_name\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.SUGADD\": {\n    \"summary\": \"Adds a suggestion string to an auto-complete suggestion dictionary\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"string\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"score\",\n        \"type\": \"double\"\n      },\n      {\n        \"name\": \"increment score\",\n        \"type\": \"oneof\",\n        \"arguments\": [\n          {\n            \"name\": \"incr\",\n            \"type\": \"pure-token\",\n            \"token\":\"INCR\"\n          }\n        ],\n        \"optional\": true\n      },\n      {\n          \"name\": \"payload\",\n          \"token\": \"PAYLOAD\",\n          \"type\": \"string\",\n          \"optional\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"suggestion\"\n  },\n  \"FT.SUGGET\": {\n    \"summary\": \"Gets completion suggestions for a prefix\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"prefix\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"fuzzy\",\n        \"type\": \"pure-token\",\n        \"token\": \"FUZZY\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"withscores\",\n        \"type\": \"pure-token\",\n        \"token\": \"WITHSCORES\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"withpayloads\",\n        \"type\": \"pure-token\",\n        \"token\": \"WITHPAYLOADS\",\n        \"optional\": true\n      },\n      {\n          \"name\": \"max\",\n          \"token\": \"MAX\",\n          \"type\": \"integer\",\n          \"optional\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"suggestion\"\n  },\n  \"FT.SUGDEL\": {\n    \"summary\": \"Deletes a string from a suggestion index\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"string\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"suggestion\"\n  },\n  \"FT.SUGLEN\": {\n    \"summary\": \"Gets the size of an auto-complete suggestion dictionary\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"suggestion\"\n  },\n  \"FT.SYNUPDATE\": {\n    \"summary\": \"Creates or updates a synonym group with additional terms\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"synonym_group_id\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"skipinitialscan\",\n        \"type\": \"pure-token\",\n        \"token\": \"SKIPINITIALSCAN\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"term\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.2.0\",\n    \"group\": \"search\"\n  },\n  \"FT.SYNDUMP\": {\n    \"summary\": \"Dumps the contents of a synonym group\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.2.0\",\n    \"group\": \"search\"\n  },\n  \"FT.SPELLCHECK\": {\n    \"summary\": \"Performs spelling correction on a query, returning suggestions for misspelled terms\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"query\",\n        \"type\": \"string\"\n      },\n      {\n          \"name\": \"distance\",\n          \"token\": \"DISTANCE\",\n          \"type\": \"integer\",\n          \"optional\": true\n      },\n      {\n        \"name\": \"terms\",\n        \"token\": \"TERMS\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"inclusion\",\n            \"type\": \"oneof\",\n            \"arguments\": [\n              {\n                \"name\": \"include\",\n                \"type\": \"pure-token\",\n                \"token\": \"INCLUDE\"\n              },\n              {\n                \"name\": \"exclude\",\n                \"type\": \"pure-token\",\n                \"token\": \"EXCLUDE\"\n              }\n            ]\n          },\n          {\n            \"name\": \"dictionary\",\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"terms\",\n            \"type\": \"string\",\n            \"multiple\": true,\n            \"optional\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"dialect\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\": \"DIALECT\",\n        \"since\": \"2.4.3\"\n      }\n    ],\n    \"since\": \"1.4.0\",\n    \"group\": \"search\"\n  },\n  \"FT.DICTADD\": {\n    \"summary\": \"Adds terms to a dictionary\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"dict\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"term\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.4.0\",\n    \"group\": \"search\"\n  },\n  \"FT.DICTDEL\": {\n    \"summary\": \"Deletes terms from a dictionary\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"dict\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"term\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.4.0\",\n    \"group\": \"search\"\n  },\n  \"FT.DICTDUMP\": {\n    \"summary\": \"Dumps all terms in the given dictionary\",\n    \"complexity\": \"O(N), where N is the size of the dictionary\",\n    \"arguments\": [\n      {\n        \"name\": \"dict\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.4.0\",\n    \"group\": \"search\"\n  },\n  \"FT._LIST\": {\n    \"summary\": \"Returns a list of all existing indexes\",\n    \"complexity\": \"O(1)\",\n    \"since\": \"2.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.CONFIG SET\": {\n    \"summary\": \"Sets runtime configuration options\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"option\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.CONFIG GET\": {\n    \"summary\": \"Retrieves runtime configuration options\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"option\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.CONFIG HELP\": {\n    \"summary\": \"Help description of runtime configuration options\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"option\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n  \"FT.SEARCH\": {\n    \"summary\": \"Searches the index with a textual query, returning either documents or just ids\",\n    \"complexity\": \"O(N)\",\n    \"history\": [\n      [\n          \"2.0.0\",\n          \"Deprecated `WITHPAYLOADS` and `PAYLOAD` arguments\"\n      ]\n    ],\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"query\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"nocontent\",\n        \"type\": \"pure-token\",\n        \"token\": \"NOCONTENT\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"verbatim\",\n        \"type\": \"pure-token\",\n        \"token\":\"VERBATIM\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nostopwords\",\n        \"type\": \"pure-token\",\n        \"token\": \"NOSTOPWORDS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"withscores\",\n        \"type\": \"pure-token\",\n        \"token\": \"WITHSCORES\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"withpayloads\",\n        \"type\": \"pure-token\",\n        \"token\": \"WITHPAYLOADS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"withsortkeys\",\n        \"type\": \"pure-token\",\n        \"token\": \"WITHSORTKEYS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"filter\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"numeric_field\",\n            \"type\": \"string\",\n            \"token\":\"FILTER\"\n          },\n          {\n            \"name\": \"min\",\n            \"type\": \"double\"\n          },\n          {\n            \"name\": \"max\",\n            \"type\": \"double\"\n          }\n        ]\n      },\n      {\n        \"name\": \"geo_filter\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"geo_field\",\n            \"type\": \"string\",\n            \"token\":\"GEOFILTER\"\n          },\n          {\n            \"name\": \"lon\",\n            \"type\": \"double\"\n          },\n          {\n            \"name\": \"lat\",\n            \"type\": \"double\"\n          },\n          {\n            \"name\": \"radius\",\n            \"type\": \"double\"\n          },\n          {\n            \"name\": \"radius_type\",\n            \"type\": \"oneof\",\n            \"arguments\": [\n              {\n                \"name\": \"m\",\n                \"type\": \"pure-token\",\n                \"token\": \"m\"\n              },\n              {\n                \"name\": \"km\",\n                \"type\": \"pure-token\",\n                \"token\": \"km\"\n              },\n              {\n                \"name\": \"mi\",\n                \"type\": \"pure-token\",\n                \"token\": \"mi\"\n              },\n              {\n                \"name\": \"ft\",\n                \"type\": \"pure-token\",\n                \"token\": \"ft\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"in_keys\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"count\",\n            \"type\": \"string\",\n            \"token\":\"INKEYS\"\n          },\n          {\n            \"name\": \"key\",\n            \"type\": \"string\",\n            \"multiple\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"in_fields\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"count\",\n            \"type\": \"string\",\n            \"token\":\"INFIELDS\"\n          },\n          {\n            \"name\": \"field\",\n            \"type\": \"string\",\n            \"multiple\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"return\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"count\",\n            \"type\": \"string\",\n            \"token\":\"RETURN\"\n          },\n          {\n            \"name\": \"identifiers\",\n            \"type\": \"block\",\n            \"multiple\": true,\n            \"arguments\": [\n              {\n                \"name\": \"identifier\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"property\",\n                \"type\": \"string\",\n                \"token\": \"AS\",\n                \"optional\": true\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"summarize\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"summarize\",\n            \"type\": \"pure-token\",\n            \"token\": \"SUMMARIZE\"\n          },\n          {\n            \"name\": \"fields\",\n            \"type\": \"block\",\n            \"optional\": true,\n            \"arguments\": [\n              {\n                \"name\": \"count\",\n                \"type\": \"string\",\n                \"token\":\"FIELDS\"\n              },\n              {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"multiple\": true\n              }\n            ]\n          },\n          {\n            \"name\": \"num\",\n            \"type\": \"integer\",\n            \"token\":\"FRAGS\",\n            \"optional\": true\n          },\n          {\n            \"name\": \"fragsize\",\n            \"type\": \"integer\",\n            \"token\":\"LEN\",\n            \"optional\": true\n          },\n          {\n            \"name\": \"separator\",\n            \"type\": \"string\",\n            \"token\":\"SEPARATOR\",\n            \"optional\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"highlight\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"highlight\",\n            \"type\": \"pure-token\",\n            \"token\": \"HIGHLIGHT\"\n          },\n          {\n            \"name\": \"fields\",\n            \"type\": \"block\",\n            \"optional\": true,\n            \"arguments\": [\n              {\n                \"name\": \"count\",\n                \"type\": \"string\",\n                \"token\":\"FIELDS\"\n              },\n              {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"multiple\": true\n              }\n            ]\n          },\n          {\n            \"name\": \"tags\",\n            \"type\": \"block\",\n            \"optional\": true,\n            \"arguments\": [\n              {\n                \"name\": \"tags\",\n                \"type\": \"pure-token\",\n                \"token\": \"TAGS\"\n              },\n              {\n                \"name\": \"open\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"close\",\n                \"type\": \"string\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"slop\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\":\"SLOP\"\n      },\n      {\n        \"name\": \"timeout\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\":\"TIMEOUT\"\n      },\n      {\n        \"name\": \"inorder\",\n        \"type\": \"pure-token\",\n        \"token\": \"INORDER\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"language\",\n        \"type\": \"string\",\n        \"optional\": true,\n        \"token\":\"LANGUAGE\"\n      },\n      {\n        \"name\": \"expander\",\n        \"type\": \"string\",\n        \"optional\": true,\n        \"token\":\"EXPANDER\"\n      },\n      {\n        \"name\": \"scorer\",\n        \"type\": \"string\",\n        \"optional\": true,\n        \"token\":\"SCORER\"\n      },\n      {\n        \"name\": \"explainscore\",\n        \"type\": \"pure-token\",\n        \"token\": \"EXPLAINSCORE\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"payload\",\n        \"type\": \"string\",\n        \"optional\": true,\n        \"token\":\"PAYLOAD\"\n      },\n      {\n        \"name\": \"sortby\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"sortby\",\n            \"type\": \"string\",\n            \"token\":\"SORTBY\"\n          },\n          {\n            \"name\": \"order\",\n            \"type\": \"oneof\",\n            \"optional\": true,\n            \"arguments\": [\n              {\n                \"name\": \"asc\",\n                \"type\": \"pure-token\",\n                \"token\": \"ASC\"\n              },\n              {\n                \"name\": \"desc\",\n                \"type\": \"pure-token\",\n                \"token\": \"DESC\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"limit\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"limit\",\n            \"type\": \"pure-token\",\n            \"token\": \"LIMIT\"\n          },\n          {\n            \"name\": \"offset\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"num\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"name\": \"params\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [          \n          {\n            \"name\": \"params\",\n            \"type\": \"pure-token\",\n            \"token\": \"PARAMS\"\n          },\n          {\n            \"name\": \"nargs\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"values\",\n            \"type\": \"block\",\n            \"multiple\": true,\n            \"arguments\": [\n              {\n                \"name\": \"name\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"value\",\n                \"type\": \"string\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"dialect\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\": \"DIALECT\",\n        \"since\": \"2.4.3\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"search\"\n  },\n\n  \"FT.AGGREGATE\": {\n    \"summary\": \"Run a search query on an index and perform aggregate transformations on the results\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"query\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"verbatim\",\n        \"type\": \"pure-token\",\n        \"token\": \"VERBATIM\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"load\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"count\",\n            \"type\": \"string\",\n            \"token\": \"LOAD\"\n          },\n          {\n            \"name\": \"field\",\n            \"type\": \"string\",\n            \"multiple\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"timeout\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\": \"TIMEOUT\"\n      },\n      {\n        \"name\": \"loadall\",\n        \"type\": \"pure-token\",\n        \"token\": \"LOAD *\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"groupby\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"nargs\",\n            \"type\": \"integer\",\n            \"token\": \"GROUPBY\"\n          },\n          {\n            \"name\": \"property\",\n            \"type\": \"string\",\n            \"multiple\": true\n          },\n          {\n            \"name\": \"reduce\",\n            \"type\": \"block\",\n            \"optional\": true,\n            \"multiple\": true,\n            \"arguments\": [\n              {\n                \"name\": \"function\",\n                \"type\": \"string\",\n                \"token\": \"REDUCE\"\n              },\n              {\n                \"name\": \"nargs\",\n                \"type\": \"integer\"\n              },\n              {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"multiple\": true\n              },\n              {\n                \"name\": \"name\",\n                \"type\": \"string\",\n                \"token\": \"AS\",\n                \"optional\": true\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"sortby\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"nargs\",\n            \"type\": \"integer\",\n            \"token\": \"SORTBY\"\n          },\n          {\n            \"name\": \"fields\",\n            \"type\": \"block\",\n            \"optional\": true,\n            \"multiple\": true,\n            \"arguments\": [\n              {\n                \"name\": \"property\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                  {\n                    \"name\": \"asc\",\n                    \"type\": \"pure-token\",\n                    \"token\": \"ASC\"\n                  },\n                  {\n                    \"name\": \"desc\",\n                    \"type\": \"pure-token\",\n                    \"token\": \"DESC\"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"name\": \"num\",\n            \"type\": \"integer\",\n            \"token\": \"MAX\",\n            \"optional\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"apply\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"expression\",\n            \"type\": \"string\",\n            \"token\": \"APPLY\"\n          },\n          {\n            \"name\": \"name\",\n            \"type\": \"string\",\n            \"token\": \"AS\"\n          }\n        ]\n      },\n      {\n        \"name\": \"limit\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"limit\",\n            \"type\": \"pure-token\",\n            \"token\": \"LIMIT\"\n          },\n          {\n            \"name\": \"offset\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"num\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"name\": \"filter\",\n        \"type\": \"string\",\n        \"optional\": true,\n        \"token\": \"FILTER\"\n      },\n      {\n        \"name\": \"cursor\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"withcursor\",\n            \"type\": \"pure-token\",\n            \"token\": \"WITHCURSOR\"\n          },\n          {\n            \"name\": \"read_size\",\n            \"type\": \"integer\",\n            \"optional\": true,\n            \"token\": \"COUNT\"\n          },\n          {\n            \"name\": \"idle_time\",\n            \"type\": \"integer\",\n            \"optional\": true,\n            \"token\": \"MAXIDLE\"\n          }\n        ]\n      },\n      {\n        \"name\": \"params\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"params\",\n            \"type\": \"pure-token\",\n            \"token\": \"PARAMS\"\n          },\n          {\n            \"name\": \"nargs\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"values\",\n            \"type\": \"block\",\n            \"multiple\": true,\n            \"arguments\": [\n              {\n                \"name\": \"name\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"value\",\n                \"type\": \"string\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"dialect\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\": \"DIALECT\",\n        \"since\": \"2.4.3\"\n      }\n    ],\n    \"since\": \"1.1.0\",\n    \"group\": \"search\"\n  },\n\n  \"FT.PROFILE\": {\n    \"summary\": \"Performs a `FT.SEARCH` or `FT.AGGREGATE` command and collects performance information\",\n    \"complexity\": \"O(N)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"querytype\",\n        \"type\": \"oneof\",\n        \"arguments\": [\n          {\n            \"name\": \"search\",\n            \"type\": \"pure-token\",\n            \"token\": \"SEARCH\"\n          },\n          {\n            \"name\": \"aggregate\",\n            \"type\": \"pure-token\",\n            \"token\": \"AGGREGATE\"\n          }\n        ]\n      },\n      {\n        \"name\": \"limited\",\n        \"type\": \"pure-token\",\n        \"token\": \"LIMITED\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"queryword\",\n        \"type\": \"pure-token\",\n        \"token\": \"QUERY\"\n      },\n      {\n        \"name\": \"query\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"2.2.0\",\n    \"group\": \"search\"\n  },\n\n  \"FT.CURSOR READ\": {\n    \"summary\": \"Reads from a cursor\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"cursor_id\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"read size\",\n        \"type\": \"integer\",\n        \"optional\": true,\n        \"token\":\"COUNT\"\n      }\n    ],\n    \"since\": \"1.1.0\",\n    \"group\": \"search\"\n  },\n  \"FT.CURSOR DEL\": {\n    \"summary\": \"Deletes a cursor\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"index\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"cursor_id\",\n        \"type\": \"integer\"\n      }\n    ],\n    \"since\": \"1.1.0\",\n    \"group\": \"search\"\n  }\n}\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "pack",
          "type": "tree",
          "content": null
        },
        {
          "name": "sbin",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "srcutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}