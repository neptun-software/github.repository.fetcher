{
  "metadata": {
    "timestamp": 1736710480875,
    "page": 15,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjE5",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ggreer/the_silver_searcher",
      "stars": 26284,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.150390625,
          "content": "AlignEscapedNewlinesLeft: false\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: false\nAlwaysBreakBeforeMultilineStrings: false\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nColumnLimit: 0\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nIndentFunctionDeclarationAfterType: false\nIndentWidth: 4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nLanguage: Cpp\nMaxEmptyLinesToKeep: 2\nPointerAlignment: Right\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nUseTab: Never\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3505859375,
          "content": "*.dSYM\n*.gcda\n*.o\n*.plist\n.deps\n.dirstamp\n.DS_Store\naclocal.m4\nag\nag.exe\nautom4te.cache\ncachegrind.out.*\ncallgrind.out.*\nclang_output_*\ncompile\nconfig.guess\nconfig.log\nconfig.status\nconfig.sub\nconfigure\ndepcomp\ngmon.out\ninstall-sh\nMakefile\nMakefile.in\nmissing\nsrc/config.h*\nstamp-h1\ntests/*.err\ntests/big/*.err\ntests/big/big_file.txt\nthe_silver_searcher.spec\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.865234375,
          "content": "language: c\ndist: xenial\nsudo: false\n\nbranches:\n  only:\n    - master\n    - ppc64le\narch:\n  - amd64\n  - ppc64le\n\ncompiler:\n  - clang\n  - gcc\n\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - automake\n      - liblzma-dev\n      - libpcre3-dev\n      - pkg-config\n      - zlib1g-dev\n\nenv:\n  global:\n    - LLVM_VERSION=6.0.1\n    - LLVM_PATH=$HOME/clang+llvm\n    - CLANG_FORMAT=$LLVM_PATH/bin/clang-format\n\nbefore_install:\n  - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-16.04.tar.xz -O $LLVM_PATH.tar.xz\n  - mkdir $LLVM_PATH\n  - tar xf $LLVM_PATH.tar.xz -C $LLVM_PATH --strip-components=1\n  - export PATH=$HOME/.local/bin:$PATH\n\ninstall:\n  - pip install --user cram\n\nscript:\n  - ./build.sh && make test\n\nnotifications:\n  irc: 'chat.freenode.net#ag'\n  on_success: change\n  on_failure: always\n  use_notice: true\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4677734375,
          "content": "## Contributing\n\nI like when people send pull requests. It validates my existence. If you want to help out, check the [issue list](https://github.com/ggreer/the_silver_searcher/issues?sort=updated&state=open) or search the codebase for `TODO`. Don't worry if you lack experience writing C. If I think a pull request isn't ready to be merged, I'll give feedback in comments. Once everything looks good, I'll comment on your pull request with a cool animated gif and hit the merge button.\n\n### Running the test suite\n\nIf you contribute, you might want to run the test suite before and after writing\nsome code, just to make sure you did not break anything. Adding tests along with\nyour code is nice to have, because it makes regressions less likely to happen.\nAlso, if you think you have found a bug, contributing a failing test case is a\ngood way of making your point and adding value at the same time.\n\nThe test suite uses [Cram](https://bitheap.org/cram/). You'll need to build ag\nfirst, and then you can run the suite from the root of the repository :\n\n    make test\n\n### Adding filetypes\n\nAg can search files which belong to a certain class for example `ag --html test` \nsearches all files with the extension defined in [lang.c](src/lang.c).\n\nIf you want to add a new file 'class' to ag please modify [lang.c](src/lang.c) and [list_file_types.t](tests/list_file_types.t).\n\n`lang.c` adds the functionality and `list_file_types.t` adds the test case. \nWithout adding a test case the test __will__ fail.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.9716796875,
          "content": "ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}\n\nbin_PROGRAMS = ag\nag_SOURCES = src/ignore.c src/ignore.h src/log.c src/log.h src/options.c src/options.h src/print.c src/print_w32.c src/print.h src/scandir.c src/scandir.h src/search.c src/search.h src/lang.c src/lang.h src/util.c src/util.h src/decompress.c src/decompress.h src/uthash.h src/main.c src/zfile.c\nag_LDADD = ${PCRE_LIBS} ${LZMA_LIBS} ${ZLIB_LIBS} $(PTHREAD_LIBS)\n\ndist_man_MANS = doc/ag.1\n\nbashcompdir = $(pkgdatadir)/completions\ndist_bashcomp_DATA = ag.bashcomp.sh\nzshcompdir = $(datadir)/zsh/site-functions\ndist_zshcomp_DATA = _the_silver_searcher\n\nEXTRA_DIST = Makefile.w32 LICENSE NOTICE the_silver_searcher.spec README.md\n\nall:\n\t@$(MAKE) ag -r\n\ntest: ag\n\tcram -v tests/*.t\nif HAS_CLANG_FORMAT\n\tCLANG_FORMAT=${CLANG_FORMAT} ./format.sh test\nelse\n\t@echo \"clang-format is not available. Skipped clang-format test.\"\nendif\n\ntest_big: ag\n\tcram -v tests/big/*.t\n\ntest_fail: ag\n\tcram -v tests/fail/*.t\n\n.PHONY : all clean test test_big test_fail\n"
        },
        {
          "name": "Makefile.w32",
          "type": "blob",
          "size": 0.65234375,
          "content": "SED=sed\nVERSION:=$(shell \"$(SED)\" -n \"s/[^[]*\\[\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\)\\],/\\1/p\" configure.ac)\n\nCC=gcc\nRM=/bin/rm\n\nSRCS = \\\n\tsrc/decompress.c \\\n\tsrc/ignore.c \\\n\tsrc/lang.c \\\n\tsrc/log.c \\\n\tsrc/main.c \\\n\tsrc/options.c \\\n\tsrc/print.c \\\n\tsrc/scandir.c \\\n\tsrc/search.c \\\n\tsrc/util.c \\\n\tsrc/print_w32.c\nOBJS = $(subst .c,.o,$(SRCS))\n\nCFLAGS = -O2 -Isrc/win32 -DPACKAGE_VERSION=\\\"$(VERSION)\\\"\nLIBS = -lz -lpthread -lpcre -llzma -lshlwapi\nTARGET = ag.exe\n\nall : $(TARGET)\n\n# depend on configure.ac to account for version changes\n$(TARGET) : $(OBJS) configure.ac\n\t$(CC) -o $@ $(OBJS) $(LIBS)\n\n.c.o :\n\t$(CC) -c $(CFLAGS) -Isrc $< -o $@\n\nclean :\n\t$(RM) -f src/*.o $(TARGET)\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.05078125,
          "content": "The Silver Searcher\nCopyright 2011-2016 Geoff Greer\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.7978515625,
          "content": "# The Silver Searcher\n\nA code searching tool similar to `ack`, with a focus on speed.\n\n[![Build Status](https://travis-ci.org/ggreer/the_silver_searcher.svg?branch=master)](https://travis-ci.org/ggreer/the_silver_searcher)\n\n[![Floobits Status](https://floobits.com/ggreer/ag.svg)](https://floobits.com/ggreer/ag/redirect)\n\n[![#ag on Freenode](https://img.shields.io/badge/Freenode-%23ag-brightgreen.svg)](https://webchat.freenode.net/?channels=ag)\n\nDo you know C? Want to improve ag? [I invite you to pair with me](http://geoff.greer.fm/2014/10/13/help-me-get-to-ag-10/).\n\n\n## What's so great about Ag?\n\n* It is an order of magnitude faster than `ack`.\n* It ignores file patterns from your `.gitignore` and `.hgignore`.\n* If there are files in your source repo you don't want to search, just add their patterns to a `.ignore` file. (\\*cough\\* `*.min.js` \\*cough\\*)\n* The command name is 33% shorter than `ack`, and all keys are on the home row!\n\nAg is quite stable now. Most changes are new features, minor bug fixes, or performance improvements. It's much faster than Ack in my benchmarks:\n\n    ack test_blah ~/code/  104.66s user 4.82s system 99% cpu 1:50.03 total\n\n    ag test_blah ~/code/  4.67s user 4.58s system 286% cpu 3.227 total\n\nAck and Ag found the same results, but Ag was 34x faster (3.2 seconds vs 110 seconds). My `~/code` directory is about 8GB. Thanks to git/hg/ignore, Ag only searched 700MB of that.\n\nThere are also [graphs of performance across releases](http://geoff.greer.fm/ag/speed/).\n\n## How is it so fast?\n\n* Ag uses [Pthreads](https://en.wikipedia.org/wiki/POSIX_Threads) to take advantage of multiple CPU cores and search files in parallel.\n* Files are `mmap()`ed instead of read into a buffer.\n* Literal string searching uses [Boyer-Moore strstr](https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm).\n* Regex searching uses [PCRE's JIT compiler](http://sljit.sourceforge.net/pcre.html) (if Ag is built with PCRE >=8.21).\n* Ag calls `pcre_study()` before executing the same regex on every file.\n* Instead of calling `fnmatch()` on every pattern in your ignore files, non-regex patterns are loaded into arrays and binary searched.\n\nI've written several blog posts showing how I've improved performance. These include how I [added pthreads](http://geoff.greer.fm/2012/09/07/the-silver-searcher-adding-pthreads/), [wrote my own `scandir()`](http://geoff.greer.fm/2012/09/03/profiling-ag-writing-my-own-scandir/), [benchmarked every revision to find performance regressions](http://geoff.greer.fm/2012/08/25/the-silver-searcher-benchmarking-revisions/), and profiled with [gprof](http://geoff.greer.fm/2012/02/08/profiling-with-gprof/) and [Valgrind](http://geoff.greer.fm/2012/01/23/making-programs-faster-profiling/).\n\n\n## Installing\n\n### macOS\n\n    brew install the_silver_searcher\n\nor\n\n    port install the_silver_searcher\n\n\n### Linux\n\n* Ubuntu >= 13.10 (Saucy) or Debian >= 8 (Jessie)\n\n        apt-get install silversearcher-ag\n* Fedora 21 and lower\n\n        yum install the_silver_searcher\n* Fedora 22+\n\n        dnf install the_silver_searcher\n* RHEL7+\n\n        yum install epel-release.noarch the_silver_searcher\n* Gentoo\n\n        emerge -a sys-apps/the_silver_searcher\n* Arch\n\n        pacman -S the_silver_searcher\n\n* Slackware\n\n        sbopkg -i the_silver_searcher\n\n* openSUSE\n\n        zypper install the_silver_searcher\n\n* CentOS\n\n        yum install the_silver_searcher\n\n* NixOS/Nix/Nixpkgs\n\n        nix-env -iA silver-searcher\n\n* SUSE Linux Enterprise: Follow [these simple instructions](https://software.opensuse.org/download.html?project=utilities&package=the_silver_searcher).\n\n\n### BSD\n\n* FreeBSD\n\n        pkg install the_silver_searcher\n* OpenBSD/NetBSD\n\n        pkg_add the_silver_searcher\n\n### Windows\n\n* Win32/64\n\n  Unofficial daily builds are [available](https://github.com/k-takata/the_silver_searcher-win32).\n  \n* winget\n\n        winget install \"The Silver Searcher\"\n  \n  Notes:\n  - This installs a [release](https://github.com/JFLarvoire/the_silver_searcher/releases) of ag.exe optimized for Windows.\n  - winget is intended to become the default package manager client for Windows.  \n    As of June 2020, it's still in beta, and can be installed using instructions [there](https://github.com/microsoft/winget-cli).\n  - The setup script in the Ag's winget package installs ag.exe in the first directory that matches one of these criteria:\n     1. Over a previous instance of ag.exe *from the same [origin](https://github.com/JFLarvoire/the_silver_searcher)* found in the PATH\n     2. In the directory defined in environment variable bindir_%PROCESSOR_ARCHITECTURE%\n     3. In the directory defined in environment variable bindir\n     4. In the directory defined in environment variable windir\n  \n* Chocolatey\n\n        choco install ag\n* MSYS2\n\n        pacman -S mingw-w64-{i686,x86_64}-ag\n* Cygwin\n\n  Run the relevant [`setup-*.exe`](https://cygwin.com/install.html), and select \"the\\_silver\\_searcher\" in the \"Utils\" category.\n\n## Building from source\n\n### Building master\n\n1. Install dependencies (Automake, pkg-config, PCRE, LZMA):\n    * macOS:\n\n            brew install automake pkg-config pcre xz\n        or\n\n            port install automake pkgconfig pcre xz\n    * Ubuntu/Debian:\n\n            apt-get install -y automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev\n    * Fedora:\n\n            yum -y install pkgconfig automake gcc zlib-devel pcre-devel xz-devel\n    * CentOS:\n\n            yum -y groupinstall \"Development Tools\"\n            yum -y install pcre-devel xz-devel zlib-devel\n    * openSUSE:\n\n            zypper source-install --build-deps-only the_silver_searcher\n\n    * Windows: It's complicated. See [this wiki page](https://github.com/ggreer/the_silver_searcher/wiki/Windows).\n2. Run the build script (which just runs aclocal, automake, etc):\n\n        ./build.sh\n\n   On Windows (inside an msys/MinGW shell):\n\n        make -f Makefile.w32\n3. Make install:\n\n        sudo make install\n\n\n### Building a release tarball\n\nGPG-signed releases are available [here](http://geoff.greer.fm/ag).\n\nBuilding release tarballs requires the same dependencies, except for automake and pkg-config. Once you've installed the dependencies, just run:\n\n    ./configure\n    make\n    make install\n\nYou may need to use `sudo` or run as root for the make install.\n\n\n## Editor Integration\n\n### Vim\n\nYou can use Ag with [ack.vim](https://github.com/mileszs/ack.vim) by adding the following line to your `.vimrc`:\n\n    let g:ackprg = 'ag --nogroup --nocolor --column'\n\nor:\n\n    let g:ackprg = 'ag --vimgrep'\n\nWhich has the same effect but will report every match on the line.\n\n### Emacs\n\nYou can use [ag.el][] as an Emacs front-end to Ag. See also: [helm-ag].\n\n[ag.el]: https://github.com/Wilfred/ag.el\n[helm-ag]: https://github.com/syohex/emacs-helm-ag\n\n### TextMate\n\nTextMate users can use Ag with [my fork](https://github.com/ggreer/AckMate) of the popular AckMate plugin, which lets you use both Ack and Ag for searching. If you already have AckMate you just want to replace Ack with Ag, move or delete `\"~/Library/Application Support/TextMate/PlugIns/AckMate.tmplugin/Contents/Resources/ackmate_ack\"` and run `ln -s /usr/local/bin/ag \"~/Library/Application Support/TextMate/PlugIns/AckMate.tmplugin/Contents/Resources/ackmate_ack\"`\n\n## Other stuff you might like\n\n* [Ack](https://github.com/petdance/ack3) - Better than grep. Without Ack, Ag would not exist.\n* [ack.vim](https://github.com/mileszs/ack.vim)\n* [Exuberant Ctags](http://ctags.sourceforge.net/) - Faster than Ag, but it builds an index beforehand. Good for *really* big codebases.\n* [Git-grep](http://git-scm.com/docs/git-grep) - As fast as Ag but only works on git repos.\n* [fzf](https://github.com/junegunn/fzf) - A command-line fuzzy finder \n* [ripgrep](https://github.com/BurntSushi/ripgrep)\n* [Sack](https://github.com/sampson-chen/sack) - A utility that wraps Ack and Ag. It removes a lot of repetition from searching and opening matching files.\n"
        },
        {
          "name": "_the_silver_searcher",
          "type": "blob",
          "size": 4.86328125,
          "content": "#compdef ag\n\n# Completion function for zsh\n\nlocal ret=1\nlocal -a args expl\n\n# Intentionally avoided many possible mutual exlusions because it is\n# likely that earlier options come from an alias. In line with this\n# the following conditionally adds options that assert defaults.\n[[ -n $words[(r)(-[is]|--ignore-case|--case-sensitive)] ]] && args+=(\n  '(-S --smart-case -s -s --ignore-case --case-sensitive)'{-S,--smart-case}'[insensitive match unless pattern includes uppercase]'\n)\n[[ -n $words[(r)--nobreak] ]] && args+=(\n  \"(--nobreak)--break[print newlines between matches in different files]\"\n)\n[[ -n $words[(r)--nogroup] ]] && args+=(\n    \"(--nogroup)--group[don't repeat filename for each match line]\"\n)\n\n_tags normal-options file-types\nwhile _tags; do\n  _requested normal-options && _arguments -S -s $args \\\n    '--ackmate[print results in AckMate-parseable format]' \\\n    '(--after -A)'{--after=-,-A+}'[specify lines of trailing context]::lines [2]' \\\n    '(--before -B)'{--before=-,-B+}'[specify lines of leading context]::lines [2]' \\\n    \"--nobreak[don't print newlines between matches in different files]\" \\\n    '(--count -c)'{--count,-c}'[only print a count of matching lines]' \\\n    '--color[enable color highlighting of output]' \\\n    '(--color-line-number --color-match --color-path)--nocolor[disable color highlighting of output]' \\\n    '--color-line-number=[specify color for line numbers]:color [1;33]' \\\n    '--color-match=[specify color for result match numbers]:color [30;43]' \\\n    '--color-path=[specify color for path names]:color [1;32]' \\\n    '--column[print column numbers in results]' \\\n    '(--context -C)'{--context=-,-C+}'[specify lines of context]::lines' \\\n    '(--debug -D)'{--debug,-D}'[output debug information]' \\\n    '--depth=[specify directory levels to descend when searching]:levels [25]' \\\n    '(--noheading)--nofilename[suppress printing of filenames]' \\\n    '(-f --follow)'{-f,--follow}'[follow symlinks]' \\\n    '(-F --fixed-strings --literal -Q)'{--fixed-strings,-F,--literal,-Q}'[use literal strings]' \\\n    '--nogroup[repeat filename for each match line]' \\\n    '(1 -G --file-search-regex)-g+[print filenames matching a pattern]:regex' \\\n    '(-G --file-search-regex)'{-G+,--file-search-regex=}'[limit search to filenames matching pattern]:regex' \\\n    '(-H --heading --noheading)'{-H,--heading}'[print filename with each match]' \\\n    '(-H --heading --noheading --nofilename)--noheading[suppress printing of filenames]' \\\n    '--hidden[search hidden files (obeying .*ignore files)]' \\\n    {--ignore=,--ignore-dir=}'[ignore files/directories matching pattern]:regex' \\\n    '(-i --ignore-case)'{-i,--ignore-case}'[match case-insensitively]' \\\n    '(-l --files-with-matches)'{-l,--files-with-matches}\"[output matching files' names only]\" \\\n    '(-L --files-without-matches)'{-L,--files-without-matches}\"[output non-matching files' names only]\" \\\n    '(--max-count -m)'{--max-count=,-m+}'[stop after specified no of matches in each file]:max number of matches' \\\n    '--numbers[prefix output with line numbers, even for streams]' \\\n    '--nonumbers[suppress printing of line numbers]' \\\n    '(--only-matching -o)'{--only-matching,-o}'[show only matching part of line]' \\\n    '(-p --path-to-ignore)'{-p+,--path-to-ignore=}'[use specified .ignore file]:file:_files' \\\n    '--print-long-lines[print matches on very long lines]' \\\n    \"--passthrough[when searching a stream, print all lines even if they don't match]\" \\\n    '(-s --case-sensitive)'{-s,--case-sensitive}'[match case]' \\\n    '--silent[suppress all log messages, including errors]' \\\n    '(--stats-only)--stats[print stats (files scanned, time taken, etc.)]' \\\n    '(--stats)--stats-only[print stats and nothing else]' \\\n    '(-U --skip-vcs-ignores)'{-U,--skip-vcs-ignores}'[ignore VCS files (stil obey .ignore)]' \\\n    '(-v --invert-match)'{-v,--invert-match}'[select non-matching lines]' \\\n    '--vimgrep[output results like vim :vimgrep /pattern/g would]' \\\n    '(-w --word-regexp)'{-w,--word-regexp}'[force pattern to match only whole words]' \\\n    '(-z --search-zip)'{-z,--search-zip}'[search contents of compressed files]' \\\n    '(-0 --null)'{-0,--null}'[separate filenames with null]' \\\n    ': :_guard \"^-*\" pattern' \\\n    '*:file:_files' \\\n    '(- :)--list-file-types[list supported file types]' \\\n    '(- :)'{-h,--help}'[display help information]' \\\n    '(- :)'{-V,--version}'[display version information]' \\\n    - '(ignores)' \\\n    '(-a --all-types)'{-a,--all-types}'[search all files]' \\\n    '--search-binary[search binary files for matches]' \\\n    {-t,--all-text}'[search all text files (not including hidden files)]' \\\n    {-u,--unrestricted}'[search all files]' && ret=0\n\n _requested file-types && { ! zstyle -T \":completion:${curcontext}:options\" prefix-needed ||\n     [[ -prefix - ]] } && _all_labels file-types expl 'file type' \\\n     compadd - ${(M)$(_call_program file-types $words[1] --list-file-types):#--*} && ret=0\n\n  (( ret )) || break\ndone\n\nreturn ret\n"
        },
        {
          "name": "ag.bashcomp.sh",
          "type": "blob",
          "size": 2.4130859375,
          "content": "_ag() {\n  local lngopt shtopt split=false\n  local cur prev\n\n  COMPREPLY=()\n  cur=$(_get_cword \"=\")\n  prev=\"${COMP_WORDS[COMP_CWORD-1]}\"\n\n  _expand || return 0\n\n  lngopt='\n    --ackmate\n    --ackmate-dir-filter\n    --affinity\n    --after\n    --all-text\n    --all-types\n    --before\n    --break\n    --case-sensitive\n    --color\n    --color-line-number\n    --color-match\n    --color-path\n    --color-win-ansi\n    --column\n    --context\n    --count\n    --debug\n    --depth\n    --file-search-regex\n    --filename\n    --files-with-matches\n    --files-without-matches\n    --fixed-strings\n    --follow\n    --group\n    --heading\n    --help\n    --hidden\n    --ignore\n    --ignore-case\n    --ignore-dir\n    --invert-match\n    --line-numbers\n    --list-file-types\n    --literal\n    --match\n    --max-count\n    --no-numbers\n    --no-recurse\n    --noaffinity\n    --nobreak\n    --nocolor\n    --nofilename\n    --nofollow\n    --nogroup\n    --noheading\n    --nonumbers\n    --nopager\n    --norecurse\n    --null\n    --numbers\n    --one-device\n    --only-matching\n    --pager\n    --parallel\n    --passthrough\n    --passthru\n    --path-to-ignore\n    --print-long-lines\n    --print0\n    --recurse\n    --search-binary\n    --search-files\n    --search-zip\n    --silent\n    --skip-vcs-ignores\n    --smart-case\n    --stats\n    --unrestricted\n    --version\n    --vimgrep\n    --word-regexp\n    --workers\n  '\n  shtopt='\n    -a -A -B -C -D\n    -f -F -g -G -h\n    -i -l -L -m -n\n    -p -Q -r -R -s\n    -S -t -u -U -v\n    -V -w -z\n  '\n\n  types=$(ag --list-file-types |grep -- '--')\n\n  # these options require an argument\n  if [[ \"${prev}\" == -[ABCGgm] ]] ; then\n    return 0\n  fi\n\n  _split_longopt && split=true\n\n  case \"${prev}\" in\n    --ignore-dir) # directory completion\n              _filedir -d\n              return 0;;\n    --path-to-ignore) # file completion\n              _filedir\n              return 0;;\n    --pager) # command completion\n              COMPREPLY=( $(compgen -c -- \"${cur}\") )\n              return 0;;\n    --ackmate-dir-filter|--after|--before|--color-*|--context|--depth\\\n    |--file-search-regex|--ignore|--max-count|--workers)\n              return 0;;\n  esac\n\n  $split && return 0\n\n  case \"${cur}\" in\n    -*)\n          COMPREPLY=( $(compgen -W \\\n            \"${lngopt} ${shtopt} ${types}\" -- \"${cur}\") )\n          return 0;;\n    *)\n          _filedir\n          return 0;;\n  esac\n} &&\n\n# shellcheck disable=SC2086\n# shellcheck disable=SC2154,SC2086\ncomplete -F _ag ${nospace} ag\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.4638671875,
          "content": "#!/bin/sh\n\nset -e\ncd \"$(dirname \"$0\")\"\n\nAC_SEARCH_OPTS=\"\"\n# For those of us with pkg-config and other tools in /usr/local\nPATH=$PATH:/usr/local/bin\n\n# This is to make life easier for people who installed pkg-config in /usr/local\n# but have autoconf/make/etc in /usr/. AKA most mac users\nif [ -d \"/usr/local/share/aclocal\" ]\nthen\n    AC_SEARCH_OPTS=\"-I /usr/local/share/aclocal\"\nfi\n\n# shellcheck disable=2086\naclocal $AC_SEARCH_OPTS\nautoconf\nautoheader\nautomake --add-missing\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.0771484375,
          "content": "#!/bin/sh\n\nset -e\ncd \"$(dirname \"$0\")\"\n\n./autogen.sh\n./configure \"$@\"\nmake -j4\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 2.67578125,
          "content": "AC_INIT(\n    [the_silver_searcher],\n    [2.2.0],\n    [https://github.com/ggreer/the_silver_searcher/issues],\n    [the_silver_searcher],\n    [https://github.com/ggreer/the_silver_searcher])\n\nAM_INIT_AUTOMAKE([no-define foreign subdir-objects])\n\nAC_PROG_CC\nAM_PROG_CC_C_O\nAC_PREREQ([2.59])\nAC_PROG_GREP\n\nm4_ifdef(\n    [AM_SILENT_RULES],\n    [AM_SILENT_RULES([yes])])\n\nPKG_CHECK_MODULES([PCRE], [libpcre])\n\nm4_include([m4/ax_pthread.m4])\nAX_PTHREAD(\n    [AC_CHECK_HEADERS([pthread.h])],\n    [AC_MSG_WARN([No pthread support. Ag will be slower due to running single-threaded.])]\n)\n\n# Run CFLAGS=\"-pg\" ./configure if you want debug symbols\nif ! echo \"$CFLAGS\" | \"$GREP\" '\\(^\\|[[[:space:]]]\\)-O' > /dev/null; then\n    CFLAGS=\"$CFLAGS -O2\"\nfi\n\nCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $PCRE_CFLAGS -Wall -Wextra -Wformat=2 -Wno-format-nonliteral -Wshadow\"\nCFLAGS=\"$CFLAGS -Wpointer-arith -Wcast-qual -Wmissing-prototypes -Wno-missing-braces -std=gnu89 -D_GNU_SOURCE\"\nLDFLAGS=\"$LDFLAGS\"\n\ncase $host in\n*mingw*)\n    AC_CHECK_LIB(shlwapi, main,, AC_MSG_ERROR(libshlwapi missing))\nesac\n\nLIBS=\"$PTHREAD_LIBS $LIBS\"\n\nAC_ARG_ENABLE([zlib],\n    AS_HELP_STRING([--disable-zlib], [Disable zlib compressed search support]))\n\nAS_IF([test \"x$enable_zlib\" != \"xno\"], [\n    AC_CHECK_HEADERS([zlib.h])\n    AC_SEARCH_LIBS([inflate], [zlib, z])\n])\n\nAC_ARG_ENABLE([lzma],\n    AS_HELP_STRING([--disable-lzma], [Disable lzma compressed search support]))\n\nAS_IF([test \"x$enable_lzma\" != \"xno\"], [\n    AC_CHECK_HEADERS([lzma.h])\n    PKG_CHECK_MODULES([LZMA], [liblzma])\n])\n\nAC_CHECK_DECL([PCRE_CONFIG_JIT], [AC_DEFINE([USE_PCRE_JIT], [], [Use PCRE JIT])], [], [#include <pcre.h>])\n\nAC_CHECK_DECL([CPU_ZERO, CPU_SET], [AC_DEFINE([USE_CPU_SET], [], [Use CPU_SET macros])] , [], [#include <sched.h>])\nAC_CHECK_HEADERS([sys/cpuset.h err.h])\n\nAC_CHECK_MEMBER([struct dirent.d_type], [AC_DEFINE([HAVE_DIRENT_DTYPE], [], [Have dirent struct member d_type])], [], [[#include <dirent.h>]])\nAC_CHECK_MEMBER([struct dirent.d_namlen], [AC_DEFINE([HAVE_DIRENT_DNAMLEN], [], [Have dirent struct member d_namlen])], [], [[#include <dirent.h>]])\n\nAC_CHECK_FUNCS(fgetln fopencookie getline realpath strlcpy strndup vasprintf madvise posix_fadvise pthread_setaffinity_np pledge)\n\nAC_CONFIG_FILES([Makefile the_silver_searcher.spec])\nAC_CONFIG_HEADERS([src/config.h])\n\nAC_CHECK_PROGS(\n    [CLANG_FORMAT],\n    [clang-format-3.8 clang-format-3.7 clang-format-3.6 clang-format],\n    [no]\n)\nAM_CONDITIONAL([HAS_CLANG_FORMAT], [test x$CLANG_FORMAT != xno])\nAM_COND_IF(\n    [HAS_CLANG_FORMAT],\n    [AC_MSG_NOTICE([clang-format found. 'make test' will detect improperly-formatted files.])],\n    [AC_MSG_WARN([clang-format not found. 'make test' will not detect improperly-formatted files.])]\n)\n\nAC_OUTPUT\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 1.2607421875,
          "content": "#!/bin/bash\n\nfunction usage() {\n    echo \"Usage: $0 test|reformat\"\n}\n\nif [ $# -eq 0 ]\nthen\n    usage\n    exit 0\nfi\n\nif [ -z \"$CLANG_FORMAT\" ]\nthen\n    CLANG_FORMAT=clang-format\n    echo \"No CLANG_FORMAT set. Using $CLANG_FORMAT\"\nfi\n\nif ! type \"$CLANG_FORMAT\" &> /dev/null\nthen\n    echo \"The command \\\"$CLANG_FORMAT\\\" was not found\"\n    exit 1\nfi\n\nSOURCE_FILES=$(git ls-files src/)\n\nif [ \"$1\" == \"reformat\" ]\nthen\n    echo \"Reformatting source files\"\n    # shellcheck disable=2086\n    echo $CLANG_FORMAT -style=file -i $SOURCE_FILES\n    # shellcheck disable=2086\n    $CLANG_FORMAT -style=file -i $SOURCE_FILES\n    exit 0\nelif  [ \"$1\" == \"test\" ]\nthen\n    # shellcheck disable=2086\n    RESULT=$($CLANG_FORMAT -style=file -output-replacements-xml $SOURCE_FILES | grep -c '<replacement ')\n    if [ \"$RESULT\" -eq 0 ]\n    then\n        echo \"code is formatted correctly :)\"\n        exit 0\n    else\n        echo \"code is not formatted correctly! :(\"\n        echo \"Suggested change:\"\n        cp -r src clang_format_src\n        $CLANG_FORMAT -style=file -i clang_format_src/*.c clang_format_src/*.h\n        diff -ur src clang_format_src\n        rm -r clang_format_src\n        echo \"Run '$0 reformat' to fix formatting\"\n        exit 1\n    fi\nelse\n    echo \"invalid command: $1\"\n    usage\n    exit 1\nfi\n"
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "pgo.sh",
          "type": "blob",
          "size": 0.18359375,
          "content": "#!/bin/sh\n\nset -e\ncd \"$(dirname \"$0\")\"\n\nmake clean\n./build.sh CFLAGS=\"$CFLAGS -fprofile-generate\"\n./ag example ..\nmake clean\n./build.sh CFLAGS=\"$CFLAGS -fprofile-correction -fprofile-use\"\n"
        },
        {
          "name": "sanitize.sh",
          "type": "blob",
          "size": 4.82421875,
          "content": "#!/bin/bash\n# Copyright 2016 Allen Wild\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nAVAILABLE_SANITIZERS=(\n    address\n    thread\n    undefined\n    valgrind\n)\n\nDEFAULT_SANITIZERS=(\n    address\n    thread\n    undefined\n)\n\nusage() {\n    cat <<EOF\nUsage: $0 [-h] [valgrind | [SANITIZERS ...]]\n\n    This script recompiles ag using -fsanitize=<SANITIZER> and then runs the test suite.\n    Memory leaks or other errors will be printed in ag's output, thus failing the test.\n\n    Available LLVM sanitizers are: ${AVAILABLE_SANITIZERS[*]}\n\n    The compile-time sanitizers are supported in clang/llvm >= 3.1 and gcc >= 4.8\n    for x86_64 Linux only. clang is preferred and will be used, if available.\n\n    For function names and line numbers in error output traces, llvm-symbolizer needs\n    to be available in PATH or set through ASAN_SYMBOLIZER_PATH.\n\n    If 'valgrind' is passed as the sanitizer, then ag will be run through valgrind\n    without recompiling. If $(dirname $0)/ag doesn't exist, then it will be built.\n\n    WARNING: This script will run \"make distclean\" and \"./configure\" to recompile ag\n             once per sanitizer (except for valgrind). If you need to pass additional\n             options to ./configure, put them in the CONFIGOPTS environment variable.\nEOF\n}\n\nvrun() {\n    echo \"Running: $*\"\n    \"$@\"\n}\n\ndie() {\n    echo \"Fatal: $*\"\n    exit 1\n}\n\nvalid_sanitizer() {\n    for san in \"${AVAILABLE_SANITIZERS[@]}\"; do\n        if [[ \"$1\" == \"$san\" ]]; then\n            return 0\n        fi\n    done\n    return 1\n}\n\nrun_sanitizer() {\n    sanitizer=$1\n    if [[ \"$sanitizer\" == \"valgrind\" ]]; then\n        run_valgrind\n        return $?\n    fi\n\n    echo -e \"\\nCompiling for sanitizer '$sanitizer'\"\n    [[ -f Makefile ]] && vrun make distclean\n    vrun ./configure $CONFIGOPTS CC=$SANITIZE_CC \\\n                     CFLAGS=\"-g -O0 -fsanitize=$sanitizer $EXTRA_CFLAGS\"\n    if [[ $? != 0 ]]; then\n        echo \"ERROR: Failed to configure. Try setting CONFIGOPTS?\"\n        return 1\n    fi\n\n    vrun make\n    if [[ $? != 0 ]]; then\n        echo \"ERROR: failed to build\"\n        return 1\n    fi\n\n    echo \"Testing with sanitizer '$sanitizer'\"\n    vrun make test\n    if [[ $? != 0 ]]; then\n        echo \"Tests for sanitizer '$sanitizer' FAIL!\"\n        echo \"Check the above output for failure information\"\n        return 2\n    else\n        echo \"Tests for sanitizer '$sanitizer' PASS!\"\n        return 0\n    fi\n}\n\nrun_valgrind() {\n    echo \"Compiling ag normally for use with valgrind\"\n    [[ -f Makefile ]] && vrun make distclean\n    vrun ./configure $CONFIGOPTS\n    if [[ $? != 0 ]]; then\n        echo \"ERROR: Failed to configure. Try setting CONFIGOPTS?\"\n        return 1\n    fi\n\n    vrun make\n    if [[ $? != 0 ]]; then\n        echo \"ERROR: failed to build\"\n        return 1\n    fi\n\n    echo \"Running: AGPROG=\\\"valgrind -q $PWD/ag\\\" make test\"\n    AGPROG=\"valgrind -q $PWD/ag\" make test\n    if [[ $? != 0 ]]; then\n        echo \"Valgrind tests FAIL!\"\n        return 1\n    else\n        echo \"Valgrind tests PASS!\"\n        return 0\n    fi\n}\n\n#### MAIN ####\nrun_sanitizers=()\nfor opt in \"$@\"; do\n    if [[ \"$opt\" == -* ]]; then\n        case opt in\n            -h|--help)\n                usage\n                exit 0\n                ;;\n            *)\n                echo \"Unknown option: '$opt'\"\n                usage\n                exit 1\n                ;;\n        esac\n    else\n        if valid_sanitizer \"$opt\"; then\n            run_sanitizers+=(\"$opt\")\n        else\n            echo \"Invalid Sanitizer: '$opt'\"\n            usage\n            exit 1\n        fi\n    fi\ndone\n\nif [[ ${#run_sanitizers[@]} == 0 ]]; then\n    run_sanitizers=(${DEFAULT_SANITIZERS[@]})\nfi\n\nif [[ -n $CC ]]; then\n    echo \"Using CC=$CC\"\n    SANITIZE_CC=\"$CC\"\nelif which clang &>/dev/null; then\n    SANITIZE_CC=\"clang\"\nelse\n    echo \"Warning: CC unset and clang not found\"\nfi\n\nif [[ -n $CFLAGS ]]; then\n    EXTRA_CFLAGS=\"$CFLAGS\"\n    unset CFLAGS\nfi\n\nif [[ ! -e ./configure ]]; then\n    echo \"Warning: ./configure not found. Running autogen\"\n    vrun ./autogen.sh || die \"autogen.sh failed\"\nfi\n\necho \"Running sanitizers: ${run_sanitizers[*]}\"\nfailedsan=()\nfor san in \"${run_sanitizers[@]}\"; do\n    run_sanitizer $san\n    if [[ $? != 0 ]]; then\n        failedsan+=($san)\n    fi\ndone\n\nif [[ ${#failedsan[@]} == 0 ]]; then\n    echo \"All sanitizers PASSED\"\n    exit 0\nelse\n    echo \"The following sanitizers FAILED: ${failedsan[*]}\"\n    exit ${#failedsan[@]}\nfi\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "the_silver_searcher.spec.in",
          "type": "blob",
          "size": 2.263671875,
          "content": "%define _bashcompdir %_sysconfdir/bash_completion.d\n%define _zshcompdir %{_datadir}/zsh/site-functions\n\nName:\t\tthe_silver_searcher\nVersion:\t@VERSION@\nRelease:\t1%{?dist}\nSummary:\tA code-searching tool similar to ack, but faster\n\nGroup:\t\tApplications/Utilities\nLicense:\tApache v2.0\nURL:\t\thttps://github.com/ggreer/%{name}\nSource0:\thttps://github.com/downloads/ggreer/%{name}/%{name}-%{version}.tar.gz\nBuildRoot:\t%(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXX)\n\nBuildRequires:\tpcre-devel, xz-devel, zlib-devel\nRequires:\tpcre, xz, zlib\n\n%description\nThe Silver Searcher\nAn attempt to make something better than ack (which itself is better than grep).\n\nWhy use Ag?\n* It searches code about 3–5× faster than ack.\n* It ignores file patterns from your .gitignore and .hgignore.\n* If there are files in your source repo you don't want to search, just add their patterns to a .ignore file. *cough* extern *cough*\n* The command name is 33% shorter than ack!\n\nHow is it so fast?\n* Searching for literals (no regex) uses Boyer-Moore-Horspool strstr.\n* Files are mmap()ed instead of read into a buffer.\n* If you're building with PCRE 8.21 or greater, regex searches use the JIT compiler.\n* Ag calls pcre_study() before executing the regex on a jillion files.\n* Instead of calling fnmatch() on every pattern in your ignore files, non-regex patterns are loaded into an array and binary searched.\n* Ag uses Pthreads to take advantage of multiple CPU cores and search files in parallel.\n\n%prep\n%setup -q\n\n\n%build\naclocal\nautoconf\nautoheader\nautomake --add-missing\n%configure \nmake %{?_smp_mflags}\n\n\n%install\nrm -rf ${RPM_BUILD_ROOT}\nmake install DESTDIR=${RPM_BUILD_ROOT}\nmkdir -p ${RPM_BUILD_ROOT}%{_bashcompdir}\ninstall -m 644 ag.bashcomp.sh ${RPM_BUILD_ROOT}%{_bashcompdir}\n\n%clean\nrm -rf ${RPM_BUILD_ROOT}\n\n\n%files\n%defattr(-,root,root,-)\n%{_bindir}/*\n%{_mandir}/*\n%config %{_bashcompdir}/ag.bashcomp.sh\n%config %{_datadir}/%{name}/completions/ag.bashcomp.sh\n%config %{_datadir}/zsh/site-functions/_the_silver_searcher\n\n%changelog\n* Thu Dec 5 2013 Emily Strickland <code@emily.st> - 0.18.1-1\n- More accurate build and install requirements\n\n* Fri Aug 16 2013 Andrew Seidl <git@aas.io> - 0.15.0-1\n- Install bash completion file\n\n* Wed Dec 05 2012 Daniel Nelson <packetcollision@gmail.com> - 0.13.1-1\n- Initial Build\n"
        }
      ]
    }
  ]
}