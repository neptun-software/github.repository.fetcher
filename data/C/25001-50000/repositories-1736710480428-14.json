{
  "metadata": {
    "timestamp": 1736710480428,
    "page": 14,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjE5",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openssl/openssl",
      "stars": 26344,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ctags.d",
          "type": "tree",
          "content": null
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.080078125,
          "content": "# Run util/openssl-format-source -v -c .\n0f113f3ee4d629ef9a4a30911b22b224772085e5\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6767578125,
          "content": "*.bin binary\n*.der binary\n/fuzz/corpora/** binary\n*.pfx binary\n\n# For git archive\nfuzz/corpora/**                         export-ignore\nConfigurations/*.norelease.conf         export-ignore\n# We generally avoid anything with a name starting with a period.\n# However, .ctags.d is precious, so we don't ignore that.\n.*                                      export-ignore\n.ctags.d                                !export-ignore\nutil/mktar.sh                           export-ignore\nkrb5                                    export-ignore\npyca-cryptography                       export-ignore\ndev                                     export-ignore\ngost-engine                             export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.73828125,
          "content": "# Ignore editor artefacts\n/.dir-locals.el\n\n# Top level excludes\n/Makefile.in\n/Makefile\n/MINFO\n/TABLE\n/rehash.time\n/inc.*\n/makefile.*\n/out.*\n/tmp.*\n/configdata.pm\n/builddata.pm\n/installdata.pm\n\n# Exporters\n/*.pc\n/OpenSSLConfig*.cmake\n/exporters/*.pc\n/exporters/OpenSSLConfig*.cmake\n\n# Links under apps\n/apps/CA.pl\n/apps/tsget\n/apps/tsget.pl\n/apps/md4.c\n\n# Auto generated headers\n/crypto/buildinf.h\n/include/crypto/*_conf.h\n/include/openssl/asn1.h\n/include/openssl/asn1t.h\n/include/openssl/bio.h\n/include/openssl/cmp.h\n/include/openssl/cms.h\n/include/openssl/comp.h\n/include/openssl/conf.h\n/include/openssl/configuration.h\n/include/openssl/crmf.h\n/include/openssl/crypto.h\n/include/openssl/ct.h\n/include/openssl/err.h\n/include/openssl/ess.h\n/include/openssl/fipskey.h\n/include/openssl/lhash.h\n/include/openssl/ocsp.h\n/include/openssl/opensslv.h\n/include/openssl/pkcs12.h\n/include/openssl/pkcs7.h\n/include/openssl/safestack.h\n/include/openssl/srp.h\n/include/openssl/ssl.h\n/include/openssl/ui.h\n/include/openssl/x509.h\n/include/openssl/x509v3.h\n/include/openssl/x509_acert.h\n/include/openssl/x509_vfy.h\n/include/openssl/core_names.h\n/include/internal/param_names.h\n\n# Auto generated parameter name files\n/crypto/params_idx.c\n\n# Auto generated doc files\ndoc/man1/openssl-*.pod\n\n# Auto generated der files\nproviders/common/der/der_digests_gen.c\nproviders/common/der/der_dsa_gen.c\nproviders/common/der/der_ec_gen.c\nproviders/common/der/der_ecx_gen.c\nproviders/common/der/der_rsa_gen.c\nproviders/common/der/der_wrap_gen.c\nproviders/common/der/der_sm2_gen.c\nproviders/common/include/prov/der_dsa.h\nproviders/common/include/prov/der_ec.h\nproviders/common/include/prov/der_ecx.h\nproviders/common/include/prov/der_rsa.h\nproviders/common/include/prov/der_digests.h\nproviders/common/include/prov/der_wrap.h\nproviders/common/include/prov/der_sm2.h\n\n# error code files\n/crypto/err/openssl.txt.old\n/engines/e_afalg.txt.old\n/engines/e_capi.txt.old\n/engines/e_dasync.txt.old\n/engines/e_ossltest.txt.old\n\n# Executables\n/apps/openssl\n/test/sha256t\n/test/sha512t\n/test/gost2814789t\n/test/ssltest_old\n/test/*test\n/test/fips_aesavs\n/test/fips_desmovs\n/test/fips_dhvs\n/test/fips_drbgvs\n/test/fips_dssvs\n/test/fips_ecdhvs\n/test/fips_ecdsavs\n/test/fips_rngvs\n/test/fips_test_suite\n/test/ssltest_old\n/test/x509aux\n/test/v3ext\n/test/versions\n/test/ossl_shim/ossl_shim\n/test/rsa_complex\n/test/confdump\n/test/bio_prefix_text\n/test/evp_extra_test2\n/test/evp_pkey_ctx_new_from_name\n/test/threadstest_fips\n/test/timing_load_creds\n\n# Demo applications\n/demos/bio/client-arg\n/demos/bio/client-conf\n/demos/bio/saccept\n/demos/bio/sconnect\n/demos/bio/server-arg\n/demos/bio/server-cmod\n/demos/bio/server-conf\n/demos/cipher/aesccm\n/demos/cipher/aesgcm\n/demos/cipher/aeskeywrap\n/demos/cipher/ariacbc\n/demos/digest/BIO_f_md\n/demos/digest/EVP_MD_demo\n/demos/digest/EVP_MD_stdin\n/demos/digest/EVP_MD_xof\n/demos/encode/ec_encode\n/demos/encode/rsa_encode\n/demos/encrypt/rsa_encrypt\n/demos/http3/libnghttp3.pc\n/demos/http3/nghttp3/\n/demos/kdf/argon2\n/demos/kdf/hkdf\n/demos/kdf/pbkdf2\n/demos/kdf/scrypt\n/demos/keyexch/x25519\n/demos/mac/cmac-aes256\n/demos/mac/gmac\n/demos/mac/hmac-sha512\n/demos/mac/poly1305\n/demos/pkey/EVP_PKEY_DSA_keygen\n/demos/pkey/EVP_PKEY_DSA_paramfromdata\n/demos/pkey/EVP_PKEY_DSA_paramgen\n/demos/pkey/EVP_PKEY_DSA_paramvalidate\n/demos/pkey/EVP_PKEY_EC_keygen\n/demos/pkey/EVP_PKEY_RSA_keygen\n/demos/signature/EVP_DSA_Signature_demo\n/demos/signature/EVP_EC_Signature_demo\n/demos/signature/EVP_ED_Signature_demo\n/demos/signature/rsa_pss_direct\n/demos/signature/rsa_pss_hash\n/demos/sslecho/sslecho\n\n# Certain files that get created by tests on the fly\n/test-runs\n/test/buildtest_*\n/test/provider_internal_test.cnf\n/test/fipsmodule.cnf\n/providers/fipsmodule.cnf\n\n# Fuzz stuff.\n# Anything without an extension is an executable on Unix, so we keep files\n# with extensions.  And we keep the corpora subddir versioned as well.\n# Anything more generic with extensions that should be ignored will be taken\n# care of by general ignores for those extensions (*.o, *.obj, *.exe, ...)\n/fuzz/*\n!/fuzz/README*\n!/fuzz/corpora\n!/fuzz/*.*\n\n# Misc auto generated files\n/doc/man7/openssl_user_macros.pod\n/tools/c_rehash\n/tools/c_rehash.pl\n/util/shlib_wrap.sh\n/util/wrap.pl\n/util/quicserver\n/tags\n/TAGS\n*.map\n*.ld\n/apps/progs.c\n/apps/progs.h\n\n# macOS\n.DS_Store\n\n# Windows (legacy)\n/tmp32\n/tmp32.dbg\n/tmp32dll\n/tmp32dll.dbg\n/out32\n/out32.dbg\n/out32dll\n/out32dll.dbg\n/inc32\n/MINFO\n/ms/bcb.mak\n/ms/libeay32.def\n/ms/nt.mak\n/ms/ntdll.mak\n/ms/ssleay32.def\n/ms/version32.rc\n\n# Files created on other branches that are not held in git, and are not\n# needed on this branch\n/include/openssl/asn1_mac.h\n/include/openssl/des_old.h\n/include/openssl/fips.h\n/include/openssl/fips_rand.h\n/include/openssl/krb5_asn.h\n/include/openssl/kssl.h\n/include/openssl/pq_compat.h\n/include/openssl/ssl23.h\n/include/openssl/tmdiff.h\n/include/openssl/ui_compat.h\n/test/fips_aesavs.c\n/test/fips_desmovs.c\n/test/fips_dsatest.c\n/test/fips_dssvs.c\n/test/fips_hmactest.c\n/test/fips_randtest.c\n/test/fips_rngvs.c\n/test/fips_rsagtest.c\n/test/fips_rsastest.c\n/test/fips_rsavtest.c\n/test/fips_shatest.c\n/test/fips_test_suite.c\n/test/shatest.c\n\n# Generated docs directories\n/doc/html\n/doc/man\n\n##### Generic patterns\n# Auto generated assembly language source files\n*.s\n!/crypto/*/asm/*.s\n/crypto/arm*.S\n/crypto/*/*.S\n*.asm\n!/crypto/*/asm/*.asm\n\n# Object files\n*.o\n*.obj\n\n# editor artefacts\n*.swp\n.#*\n\\#*#\n*~\n\n# Certificate symbolic links\n*.0\n\n# All kinds of libraries and executables\n*.a\n*.so\n*.so.*\n*.dylib\n*.dylib.*\n*.dll\n*.dll.*\n*.exe\n*.pyc\n*.exp\n*.lib\n*.pdb\n*.tds\n*.ilk\n*.def\n*.rc\n*.res\n\n# Misc generated stuff\nMakefile.save\n/crypto/**/lib\n/engines/**/lib\n/ssl/**/lib\n*.bak\ncscope.*\n*.d\n!.ctags.d\n*.d.tmp\npod2htmd.tmp\nMAKE0[0-9][0-9][0-9].@@@\n\n# Windows manifest files\n*.manifest\ndoc-nits\n\n# LSP (Language Server Protocol) support\n.cache/\ncompile_commands.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.052734375,
          "content": "[submodule \"pyca.cryptography\"]\n\tpath = pyca-cryptography\n\turl = https://github.com/pyca/cryptography.git\n\n[submodule \"krb5\"]\n\tpath = krb5\n\turl = https://github.com/krb5/krb5\n\n[submodule \"gost-engine\"]\n\tpath = gost-engine\n\turl = https://github.com/gost-engine/engine\n\tupdate = rebase\n[submodule \"wycheproof\"]\n\tpath = wycheproof\n\turl = https://github.com/google/wycheproof\n[submodule \"tlsfuzzer\"]\n\tpath = tlsfuzzer\n\turl = https://github.com/tlsfuzzer/tlsfuzzer\n[submodule \"python-ecdsa\"]\n\tpath = python-ecdsa\n\turl = https://github.com/tlsfuzzer/python-ecdsa\n[submodule \"tlslite-ng\"]\n\tpath = tlslite-ng\n\turl = https://github.com/tlsfuzzer/tlslite-ng\n[submodule \"oqs-provider\"]\n\tpath = oqs-provider\n\turl = https://github.com/open-quantum-safe/oqs-provider.git\n[submodule \"cloudflare-quiche\"]\n\tpath = cloudflare-quiche\n\turl = https://github.com/cloudflare/quiche\n[submodule \"fuzz/corpora\"]\n\tpath = fuzz/corpora\n\turl = https://github.com/openssl/fuzz-corpora\n\tbranch = main\n[submodule \"pkcs11-provider\"]\n\tpath = pkcs11-provider\n\turl = https://github.com/latchset/pkcs11-provider.git\n"
        },
        {
          "name": "ACKNOWLEDGEMENTS.md",
          "type": "blob",
          "size": 0.1552734375,
          "content": "Acknowledgements\n================\n\nPlease see our [Thanks!][] page for the current acknowledgements.\n\n[Thanks!]: https://www.openssl.org/community/thanks.html\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 0.966796875,
          "content": "Authors\n=======\n\nThis is the list of OpenSSL authors for copyright purposes.\nIt does not necessarily list everyone who has contributed code,\nsince in some cases, their employer may be the copyright holder.\nTo see the full list of contributors, see the revision history in\nsource control.\n\nGroups\n------\n\n * OpenSSL Software Services, Inc.\n * OpenSSL Software Foundation, Inc.\n\nIndividuals\n-----------\n\n * Andy Polyakov\n * Ben Laurie\n * Ben Kaduk\n * Bernd Edlinger\n * Bodo Möller\n * David Benjamin\n * David von Oheimb\n * Dmitry Belyavskiy (Дмитрий Белявский)\n * Emilia Käsper\n * Eric Young\n * Geoff Thorpe\n * Holger Reif\n * Kurt Roeckx\n * Lutz Jänicke\n * Mark J. Cox\n * Matt Caswell\n * Matthias St. Pierre\n * Nicola Tuveri\n * Nils Larsch\n * Patrick Steuer\n * Paul Dale\n * Paul C. Sutton\n * Paul Yang\n * Ralf S. Engelschall\n * Rich Salz\n * Richard Levitte\n * Shane Lontis\n * Stephen Henson\n * Steve Marquess\n * Tim Hudson\n * Tomáš Mráz\n * Ulf Möller\n * Viktor Dukhovni\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 777.3642578125,
          "content": "OpenSSL CHANGES\n===============\n\nThis is a detailed breakdown of significant changes. For a high-level overview\nof changes in each release, see [NEWS.md](./NEWS.md).\n\nFor a full list of changes, see the [git commit log][log] and pick the\nappropriate release branch.\n\n  [log]: https://github.com/openssl/openssl/commits/\n\nOpenSSL Releases\n----------------\n\n - [OpenSSL 3.5](#openssl-35)\n - [OpenSSL 3.4](#openssl-34)\n - [OpenSSL 3.3](#openssl-33)\n - [OpenSSL 3.2](#openssl-32)\n - [OpenSSL 3.1](#openssl-31)\n - [OpenSSL 3.0](#openssl-30)\n - [OpenSSL 1.1.1](#openssl-111)\n - [OpenSSL 1.1.0](#openssl-110)\n - [OpenSSL 1.0.2](#openssl-102)\n - [OpenSSL 1.0.1](#openssl-101)\n - [OpenSSL 1.0.0](#openssl-100)\n - [OpenSSL 0.9.x](#openssl-09x)\n\nOpenSSL 3.5\n-----------\n\n### Changes between 3.4 and 3.5 [xx XXX xxxx]\n\n* All the BIO_meth_get_*() functions allowing reuse of the internal OpenSSL\n  BIO method implementations were deprecated. The reuse is unsafe due to\n  dependency on the code of the internal methods not changing.\n\n  *Tomáš Mráz*\n\n* Support DEFAULT keyword and '-' prefix in SSL_CTX_set1_groups_list().\n  SSL_CTX_set1_groups_list() now supports the DEFAULT keyword which sets the\n  available groups to the default selection. The '-' prefix allows the calling\n  application to remove a group from the selection.\n\n  *Frederik Wedel-Heinen*\n\n * Updated the default encryption cipher for the `req`, `cms`, and `smime` applications\n   from `des-ede3-cbc` to `aes-256-cbc`.\n\n   AES-256 provides a stronger 256-bit key encryption than legacy 3DES.\n\n   *Aditya*\n\n * Enhanced PKCS#7 inner contents verification.\n   In the PKCS7_verify() function, the BIO *indata parameter refers to the\n   signed data if the content is detached from p7. Otherwise, indata should be\n   NULL, and then the signed data must be in p7.\n\n   The previous OpenSSL implementation only supported MIME inner content\n   [RFC 5652, section 5.2].\n\n   The added functionality now enables support for PKCS#7 inner content\n   [RFC 2315, section 7].\n\n   *Małgorzata Olszówka*\n\n * The `-rawin` option of the `pkeyutl` command is now implied (and thus no\n   longer required) when using `-digest` or when signing or verifying with an\n   Ed25519 or Ed448 key.\n   The `-digest` and `-rawin` option may only be given with `-sign` or `verify`.\n\n   *David von Oheimb*\n\n * Optionally allow the FIPS provider to use the `JITTER` entropy source.\n   Note that using this option will require the resulting FIPS provider\n   to undergo entropy source validation [ESV] by the [CMVP], without this\n   the FIPS provider will not be FIPS compliant.  Enable this using the\n   configuration option `enable-fips-jitter`.\n\n   *Paul Dale*\n\n * Extended `OPENSSL_ia32cap` support to accommodate additional `CPUID`\n   feature/capability bits in leaf `0x7` (Extended Feature Flags) as well\n   as leaf `0x24` (Converged Vector ISA).\n\n   *Dan Zimmerman, Alina Elizarova*\n\n * Cipher pipelining support for provided ciphers with new API functions\n   EVP_CIPHER_can_pipeline(), EVP_CipherPipelineEncryptInit(),\n   EVP_CipherPipelineDecryptInit(), EVP_CipherPipelineUpdate(),\n   and EVP_CipherPipelineFinal(). Cipher pipelining support allows application to\n   submit multiple chunks of data in one cipher update call, thereby allowing the\n   provided implementation to take advantage of parallel computing. There are\n   currently no built-in ciphers that support pipelining. This new API replaces\n   the legacy pipeline API [SSL_CTX_set_max_pipelines](https://docs.openssl.org/3.3/man3/SSL_CTX_set_split_send_fragment/) used with Engines.\n\n   *Ramkumar*\n\n * Add CMS_NO_SIGNING_TIME flag to CMS_sign(), CMS_add1_signer()\n\n   Previously there was no way to create a CMS SignedData signature without a\n   signing time attribute, because CMS_SignerInfo_sign added it unconditionally.\n   However, there is a use case (PAdES signatures [ETSI EN 319 142-1](https://www.etsi.org/deliver/etsi_en/319100_319199/31914201/01.01.01_60/en_31914201v010101p.pdf) )\n   where this attribute is not allowed, so a new flag was added to the CMS API\n   that causes this attribute to be omitted at signing time.\n\n   The new `-no_signing_time` option of the `cms` command enables this flag.\n\n   *Juhász Péter*\n\nOpenSSL 3.4\n-----------\n\n### Changes between 3.4.0 and 3.4.1 [xx XXX xxxx]\n\n * Reverted the behavior change of CMS_get1_certs() and CMS_get1_crls()\n   that happened in the 3.4.0 release. These functions now return NULL\n   again if there are no certs or crls in the CMS object.\n\n   *Tomáš Mráz*\n\n### Changes between 3.3 and 3.4.0 [22 Oct 2024]\n\n * For the FIPS provider only, replaced the primary DRBG with a continuous\n   health check module.  This also removes the now forbidden DRBG chaining.\n\n   *Paul Dale*\n\n * Improved base64 BIO correctness and error reporting.\n\n   *Viktor Dukhovni*\n\n * Added support for directly fetched composite signature algorithms such as\n   RSA-SHA2-256 including new API functions in the EVP_PKEY_sign,\n   EVP_PKEY_verify and EVP_PKEY_verify_recover groups.\n\n   *Richard Levitte*\n\n * XOF Digest API improvements\n\n   EVP_MD_CTX_get_size() and EVP_MD_CTX_size are macros that were aliased to\n   EVP_MD_get_size which returns a constant value. XOF Digests such as SHAKE\n   have an output size that is not fixed, so calling EVP_MD_get_size() is not\n   sufficent. The existing macros now point to the new function\n   EVP_MD_CTX_get_size_ex() which will retrieve the \"size\" for a XOF digest,\n   otherwise it falls back to calling EVP_MD_get_size(). Note that the SHAKE\n   implementation did not have a context getter previously, so the \"size\" will\n   only be able to be retrieved with new providers.\n\n   Also added a EVP_xof() helper.\n\n   *Shane Lontis*\n\n * Added FIPS indicators to the FIPS provider.\n\n   FIPS 140-3 requires indicators to be used if the FIPS provider allows\n   non-approved algorithms. An algorithm is approved if it passes all\n   required checks such as minimum key size. By default an error will\n   occur if any check fails. For backwards compatibility individual\n   algorithms may override the checks by using either an option in the\n   FIPS configuration OR in code using an algorithm context setter.\n   Overriding the check means that the algorithm is not FIPS compliant.\n   OSSL_INDICATOR_set_callback() can be called to register a callback\n   to log unapproved algorithms. At the end of any algorithm operation\n   the approved status can be queried using an algorithm context getter.\n   FIPS provider configuration options are set using 'openssl fipsinstall'.\n\n   Note that new FIPS 140-3 restrictions have been enforced such as\n   RSA Encryption using PKCS1 padding is no longer approved.\n   Documentation related to the changes can be found on the [fips_module(7)]\n   manual page.\n\n   [fips_module(7)]: https://docs.openssl.org/master/man7/fips_module/#FIPS indicators\n\n   *Shane Lontis, Paul Dale, Po-Hsing Wu and Dimitri John Ledkov*\n\n * Added support for hardware acceleration for HMAC on S390x architecture.\n\n   *Ingo Franzki*\n\n * Added debuginfo Makefile target for unix platforms to produce\n   a separate DWARF info file from the corresponding shared libs.\n\n   *Neil Horman*\n\n * Added support for encapsulation and decapsulation operations in the\n   pkeyutl command.\n\n   *Dmitry Belyavskiy*\n\n * Added implementation of RFC 9579 (PBMAC1) in PKCS#12.\n\n   *Dmitry Belyavskiy*\n\n * Add a new random seed source RNG `JITTER` using a statically linked\n   jitterentropy library.\n\n   *Dimitri John Ledkov*\n\n * Added a feature to retrieve configured TLS signature algorithms,\n   e.g., via the openssl list command.\n\n   *Michael Baentsch*\n\n * Deprecated TS_VERIFY_CTX_set_* functions and added replacement\n   TS_VERIFY_CTX_set0_* functions with improved semantics.\n\n   *Tobias Erbsland*\n\n * Redesigned Windows use of OPENSSLDIR/ENGINESDIR/MODULESDIR such that\n   what were formerly build time locations can now be defined at run time\n   with registry keys. See NOTES-WINDOWS.md.\n\n   *Neil Horman*\n\n * Added options `-not_before` and `-not_after` for explicit setting\n   start and end dates of certificates created with the `req` and `x509`\n   commands. Added the same options also to `ca` command as alias for\n   `-startdate` and `-enddate` options.\n\n   *Stephan Wurm*\n\n * The X25519 and X448 key exchange implementation in the FIPS provider\n   is unapproved and has `fips=no` property.\n\n   *Tomáš Mráz*\n\n * SHAKE-128 and SHAKE-256 implementations have no default digest length\n   anymore. That means these algorithms cannot be used with\n   EVP_DigestFinal/_ex() unless the `xoflen` param is set before.\n\n   This change was necessary because the preexisting default lengths were\n   half the size necessary for full collision resistance supported by these\n   algorithms.\n\n   *Tomáš Mráz*\n\n * Setting `config_diagnostics=1` in the config file will cause errors to\n   be returned from SSL_CTX_new() and SSL_CTX_new_ex() if there is an error\n   in the ssl module configuration.\n\n   *Tomáš Mráz*\n\n * An empty renegotiate extension will be used in TLS client hellos instead\n   of the empty renegotiation SCSV, for all connections with a minimum TLS\n   version > 1.0.\n\n   *Tim Perry*\n\n * Added support for integrity-only cipher suites TLS_SHA256_SHA256 and\n   TLS_SHA384_SHA384 in TLS 1.3, as defined in RFC 9150.\n\n   This work was sponsored by Siemens AG.\n\n   *Rajeev Ranjan*\n\n * Added support for requesting CRL in CMP.\n\n   This work was sponsored by Siemens AG.\n\n   *Rajeev Ranjan*\n\n * Added support for issuedOnBehalfOf, auditIdentity, basicAttConstraints,\n   userNotice, acceptablePrivilegePolicies, acceptableCertPolicies,\n   subjectDirectoryAttributes, associatedInformation, delegatedNameConstraints,\n   holderNameConstraints and targetingInformation X.509v3 extensions.\n\n   *Jonathan M. Wilbur*\n\n * Added Attribute Certificate (RFC 5755) support. Attribute\n   Certificates can be created, parsed, modified and printed via the\n   public API. There is no command-line tool support at this time.\n\n   *Damian Hobson-Garcia*\n\n * Added support to build Position Independent Executables (PIE). Configuration\n   option `enable-pie` configures the cflag '-fPIE' and ldflag '-pie' to\n   support Address Space Layout Randomization (ASLR) in the openssl executable,\n   removes reliance on external toolchain configurations.\n\n   *Craig Lorentzen*\n\n * SSL_SESSION_get_time()/SSL_SESSION_set_time()/SSL_CTX_flush_sessions() have\n   been deprecated in favour of their respective ..._ex() replacement functions\n   which are Y2038-safe.\n\n   *Alexander Kanavin*\n\n * ECC groups may now customize their initialization to save CPU by using\n   precomputed values. This is used by the P-256 implementation.\n\n   *Watson Ladd*\n\nOpenSSL 3.3\n-----------\n\n### Changes between 3.3.2 and 3.3.3 [xx XXX xxxx]\n\n * Fixed possible OOB memory access with invalid low-level GF(2^m) elliptic\n   curve parameters.\n\n   Use of the low-level GF(2^m) elliptic curve APIs with untrusted\n   explicit values for the field polynomial can lead to out-of-bounds memory\n   reads or writes.\n   Applications working with \"exotic\" explicit binary (GF(2^m)) curve\n   parameters, that make it possible to represent invalid field polynomials\n   with a zero constant term, via the above or similar APIs, may terminate\n   abruptly as a result of reading or writing outside of array bounds. Remote\n   code execution cannot easily be ruled out.\n\n   ([CVE-2024-9143])\n\n   *Viktor Dukhovni*\n\n### Changes between 3.3.1 and 3.3.2 [3 Sep 2024]\n\n * Fixed possible denial of service in X.509 name checks.\n\n   Applications performing certificate name checks (e.g., TLS clients checking\n   server certificates) may attempt to read an invalid memory address when\n   comparing the expected name with an `otherName` subject alternative name of\n   an X.509 certificate. This may result in an exception that terminates the\n   application program.\n\n   ([CVE-2024-6119])\n\n   *Viktor Dukhovni*\n\n * Fixed possible buffer overread in SSL_select_next_proto().\n\n   Calling the OpenSSL API function SSL_select_next_proto with an empty\n   supported client protocols buffer may cause a crash or memory contents\n   to be sent to the peer.\n\n   ([CVE-2024-5535])\n\n   *Matt Caswell*\n\n### Changes between 3.3.0 and 3.3.1 [4 Jun 2024]\n\n * Fixed potential use after free after SSL_free_buffers() is called.\n\n   The SSL_free_buffers function is used to free the internal OpenSSL\n   buffer used when processing an incoming record from the network.\n   The call is only expected to succeed if the buffer is not currently\n   in use. However, two scenarios have been identified where the buffer\n   is freed even when still in use.\n\n   The first scenario occurs where a record header has been received\n   from the network and processed by OpenSSL, but the full record body\n   has not yet arrived. In this case calling SSL_free_buffers will succeed\n   even though a record has only been partially processed and the buffer\n   is still in use.\n\n   The second scenario occurs where a full record containing application\n   data has been received and processed by OpenSSL but the application has\n   only read part of this data. Again a call to SSL_free_buffers will\n   succeed even though the buffer is still in use.\n\n   ([CVE-2024-4741])\n\n   *Matt Caswell*\n\n * Fixed an issue where checking excessively long DSA keys or parameters may\n   be very slow.\n\n   Applications that use the functions EVP_PKEY_param_check() or\n   EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\n   experience long delays. Where the key or parameters that are being checked\n   have been obtained from an untrusted source this may lead to a Denial of\n   Service.\n\n   To resolve this issue DSA keys larger than OPENSSL_DSA_MAX_MODULUS_BITS\n   will now fail the check immediately with a DSA_R_MODULUS_TOO_LARGE error\n   reason.\n\n   ([CVE-2024-4603])\n\n   *Tomáš Mráz*\n\n * Improved EC/DSA nonce generation routines to avoid bias and timing\n   side channel leaks.\n\n   Thanks to Florian Sieck from Universität zu Lübeck and George Pantelakis\n   and Hubert Kario from Red Hat for reporting the issues.\n\n   *Tomáš Mráz and Paul Dale*\n\n### Changes between 3.2 and 3.3.0 [9 Apr 2024]\n\n * The `-verify` option to the `openssl crl` and `openssl req` will make\n   the program exit with 1 on failure.\n\n   *Vladimír Kotal*\n\n * The BIO_get_new_index() function can only be called 127 times before it\n   reaches its upper bound of BIO_TYPE_MASK. It will now correctly return an\n   error of -1 once it is exhausted. Users may need to reserve using this\n   function for cases where BIO_find_type() is required. Either BIO_TYPE_NONE\n   or BIO_get_new_index() can be used to supply a type to BIO_meth_new().\n\n   *Shane Lontis*\n\n * Added API functions SSL_SESSION_get_time_ex(), SSL_SESSION_set_time_ex()\n   using time_t which is Y2038 safe on 32 bit systems when 64 bit time\n   is enabled (e.g via setting glibc macro _TIME_BITS=64).\n\n   *Ijtaba Hussain*\n\n * The d2i_ASN1_GENERALIZEDTIME(), d2i_ASN1_UTCTIME(), ASN1_TIME_check(), and\n   related functions have been augmented to check for a minimum length of\n   the input string, in accordance with ITU-T X.690 section 11.7 and 11.8.\n\n   *Job Snijders*\n\n * Unknown entries in TLS SignatureAlgorithms, ClientSignatureAlgorithms\n   config options and the respective calls to SSL[_CTX]_set1_sigalgs() and\n   SSL[_CTX]_set1_client_sigalgs() that start with `?` character are\n   ignored and the configuration will still be used.\n\n   Similarly unknown entries that start with `?` character in a TLS\n   Groups config option or set with SSL[_CTX]_set1_groups_list() are ignored\n   and the configuration will still be used.\n\n   In both cases if the resulting list is empty, an error is returned.\n\n   *Tomáš Mráz*\n\n * The EVP_PKEY_fromdata function has been augmented to allow for the derivation\n   of CRT (Chinese Remainder Theorem) parameters when requested.  See the\n   OSSL_PKEY_PARAM_RSA_DERIVE_FROM_PQ param in the EVP_PKEY-RSA documentation.\n\n   *Neil Horman*\n\n * The activate and soft_load configuration settings for providers in\n   openssl.cnf have been updated to require a value of [1|yes|true|on]\n   (in lower or UPPER case) to enable the setting. Conversely a value\n   of [0|no|false|off] will disable the setting. All other values, or the\n   omission of a value for these settings will result in an error.\n\n    *Neil Horman*\n\n * Added `-set_issuer` and `-set_subject` options to `openssl x509` to\n   override the Issuer and Subject when creating a certificate. The `-subj`\n   option now is an alias for `-set_subject`.\n\n    *Job Snijders, George Michaelson*\n\n * OPENSSL_sk_push() and sk_<TYPE>_push() functions now return 0 instead of -1\n   if called with a NULL stack argument.\n\n   *Tomáš Mráz*\n\n * In `openssl speed`, changed the default hash function used with `hmac` from\n   `md5` to `sha256`.\n\n   *James Muir*\n\n * Added several new features of CMPv3 defined in RFC 9480 and RFC 9483:\n   - `certProfile` request message header and respective `-profile` CLI option\n   - support for delayed delivery of all types of response messages\n\n   *David von Oheimb*\n\n * The build of exporters (such as `.pc` files for pkg-config) cleaned up to\n   be less hard coded in the build file templates, and to allow easier\n   addition of more exporters.  With that, an exporter for CMake is also\n   added.\n\n   *Richard Levitte*\n\n * The BLAKE2s hash algorithm matches BLAKE2b's support\n   for configurable output length.\n\n   *Ahelenia Ziemiańska*\n\n * New option `SSL_OP_PREFER_NO_DHE_KEX`, which allows configuring a TLS1.3\n   server to prefer session resumption using PSK-only key exchange over PSK\n   with DHE, if both are available.\n\n   *Markus Minichmayr, Tapkey GmbH*\n\n * New API `SSL_write_ex2`, which can be used to send an end-of-stream (FIN)\n   condition in an optimised way when using QUIC.\n\n   *Hugo Landau*\n\n * New atexit configuration switch, which controls whether the OPENSSL_cleanup\n   is registered when libcrypto is unloaded. This is turned off on NonStop\n   configurations because of loader differences on that platform compared to\n   Linux.\n\n   *Randall S. Becker*\n\n * Support for qlog for tracing QUIC connections has been added.\n\n   The qlog output from OpenSSL currently uses a pre-standard draft version of\n   qlog. The output from OpenSSL will change in incompatible ways in future\n   releases, and is not subject to any format stability or compatibility\n   guarantees at this time. This functionality can be\n   disabled with the build-time option `no-unstable-qlog`. See the\n   openssl-qlog(7) manpage for details.\n\n   *Hugo Landau*\n\n * Added APIs to allow configuring the negotiated idle timeout for QUIC\n   connections, and to allow determining the number of additional streams\n   that can currently be created for a QUIC connection.\n\n   *Hugo Landau*\n\n * Added APIs to allow disabling implicit QUIC event processing for\n   QUIC SSL objects, allowing applications to control when event handling\n   occurs. Refer to the SSL_get_value_uint(3) manpage for details.\n\n   *Hugo Landau*\n\n * Limited support for polling of QUIC connection and stream objects in a\n   non-blocking manner. Refer to the SSL_poll(3) manpage for details.\n\n   *Hugo Landau*\n\n * Added APIs to allow querying the size and utilisation of a QUIC stream's\n   write buffer. Refer to the SSL_get_value_uint(3) manpage for details.\n\n   *Hugo Landau*\n\n * New limit on HTTP response headers is introduced to HTTP client. The\n   default limit is set to 256 header lines. If limit is exceeded the\n   response processing stops with error HTTP_R_RESPONSE_TOO_MANY_HDRLINES.\n   Application may call OSSL_HTTP_REQ_CTX_set_max_response_hdr_lines(3)\n   to change the default. Setting the value to 0 disables the limit.\n\n   *Alexandr Nedvedicky*\n\n * Applied AES-GCM unroll8 optimisation to Microsoft Azure Cobalt 100\n\n   *Tom Cosgrove*\n\n * Added X509_STORE_get1_objects to avoid issues with the existing\n   X509_STORE_get0_objects API in multi-threaded applications. Refer to the\n   documentation for details.\n\n   *David Benjamin*\n\n * Added assembly implementation for md5 on loongarch64\n\n   *Min Zhou*\n\n * Optimized AES-CTR for ARM Neoverse V1 and V2\n\n   *Fisher Yu*\n\n * Enable AES and SHA3 optimisations on Apple Silicon M3-based MacOS systems\n   similar to M1/M2.\n\n   *Tom Cosgrove*\n\n * Added a new EVP_DigestSqueeze() API. This allows SHAKE to squeeze multiple\n   times with different output sizes.\n\n   *Shane Lontis, Holger Dengler*\n\n * Various optimizations for cryptographic routines using RISC-V vector crypto\n   extensions\n\n   *Christoph Müllner, Charalampos Mitrodimas, Ard Biesheuvel, Phoebe Chen,\n    Jerry Shih*\n\n * Accept longer context for TLS 1.2 exporters\n\n   While RFC 5705 implies that the maximum length of a context for exporters is\n   65535 bytes as the length is embedded in uint16, the previous implementation\n   enforced a much smaller limit, which is less than 1024 bytes. This\n   restriction has been removed.\n\n   *Daiki Ueno*\n\nOpenSSL 3.2\n-----------\n\n### Changes between 3.2.1 and 3.2.2 [xx XXX xxxx]\n\n * Fixed an issue where some non-default TLS server configurations can cause\n   unbounded memory growth when processing TLSv1.3 sessions. An attacker may\n   exploit certain server configurations to trigger unbounded memory growth that\n   would lead to a Denial of Service\n\n   This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option\n   is being used (but not if early_data is also configured and the default\n   anti-replay protection is in use). In this case, under certain conditions,\n   the session cache can get into an incorrect state and it will fail to flush\n   properly as it fills. The session cache will continue to grow in an unbounded\n   manner. A malicious client could deliberately create the scenario for this\n   failure to force a Denial of Service. It may also happen by accident in\n   normal operation.\n\n   ([CVE-2024-2511])\n\n   *Matt Caswell*\n\n * Fixed bug where SSL_export_keying_material() could not be used with QUIC\n   connections. (#23560)\n\n   *Hugo Landau*\n\n### Changes between 3.2.0 and 3.2.1 [30 Jan 2024]\n\n * A file in PKCS12 format can contain certificates and keys and may come from\n   an untrusted source. The PKCS12 specification allows certain fields to be\n   NULL, but OpenSSL did not correctly check for this case. A fix has been\n   applied to prevent a NULL pointer dereference that results in OpenSSL\n   crashing. If an application processes PKCS12 files from an untrusted source\n   using the OpenSSL APIs then that application will be vulnerable to this\n   issue prior to this fix.\n\n   OpenSSL APIs that were vulnerable to this are: PKCS12_parse(),\n   PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\n   and PKCS12_newpass().\n\n   We have also fixed a similar issue in SMIME_write_PKCS7(). However since this\n   function is related to writing data we do not consider it security\n   significant.\n\n   ([CVE-2024-0727])\n\n   *Matt Caswell*\n\n * When function EVP_PKEY_public_check() is called on RSA public keys,\n   a computation is done to confirm that the RSA modulus, n, is composite.\n   For valid RSA keys, n is a product of two or more large primes and this\n   computation completes quickly. However, if n is an overly large prime,\n   then this computation would take a long time.\n\n   An application that calls EVP_PKEY_public_check() and supplies an RSA key\n   obtained from an untrusted source could be vulnerable to a Denial of Service\n   attack.\n\n   The function EVP_PKEY_public_check() is not called from other OpenSSL\n   functions however it is called from the OpenSSL pkey command line\n   application. For that reason that application is also vulnerable if used\n   with the \"-pubin\" and \"-check\" options on untrusted data.\n\n   To resolve this issue RSA keys larger than OPENSSL_RSA_MAX_MODULUS_BITS will\n   now fail the check immediately with an RSA_R_MODULUS_TOO_LARGE error reason.\n\n   ([CVE-2023-6237])\n\n   *Tomáš Mráz*\n\n * Restore the encoding of SM2 PrivateKeyInfo and SubjectPublicKeyInfo to\n   have the contained AlgorithmIdentifier.algorithm set to id-ecPublicKey\n   rather than SM2.\n\n   *Richard Levitte*\n\n * The POLY1305 MAC (message authentication code) implementation in OpenSSL\n   for PowerPC CPUs saves the contents of vector registers in different\n   order than they are restored. Thus the contents of some of these vector\n   registers is corrupted when returning to the caller. The vulnerable code is\n   used only on newer PowerPC processors supporting the PowerISA 2.07\n   instructions.\n\n   The consequences of this kind of internal application state corruption can\n   be various - from no consequences, if the calling application does not\n   depend on the contents of non-volatile XMM registers at all, to the worst\n   consequences, where the attacker could get complete control of the\n   application process. However unless the compiler uses the vector registers\n   for storing pointers, the most likely consequence, if any, would be an\n   incorrect result of some application dependent calculations or a crash\n   leading to a denial of service.\n\n   ([CVE-2023-6129])\n\n   *Rohan McLure*\n\n * Disable building QUIC server utility when OpenSSL is configured with\n   `no-apps`.\n\n   *Vitalii Koshura*\n\n### Changes between 3.1 and 3.2.0 [23 Nov 2023]\n\n * Fix excessive time spent in DH check / generation with large Q parameter\n   value.\n\n   Applications that use the functions DH_generate_key() to generate an\n   X9.42 DH key may experience long delays. Likewise, applications that use\n   DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\n   to check an X9.42 DH key or X9.42 DH parameters may experience long delays.\n   Where the key or parameters that are being checked have been obtained from\n   an untrusted source this may lead to a Denial of Service.\n\n   ([CVE-2023-5678])\n\n   *Richard Levitte*\n\n * The BLAKE2b hash algorithm supports a configurable output length\n   by setting the \"size\" parameter.\n\n   *Čestmír Kalina and Tomáš Mráz*\n\n * Enable extra Arm64 optimization on Windows for GHASH, RAND and AES.\n\n   *Evgeny Karpov*\n\n * Added a function to delete objects from store by URI - OSSL_STORE_delete()\n   and the corresponding provider-storemgmt API function\n   OSSL_FUNC_store_delete().\n\n   *Dmitry Belyavskiy*\n\n * Added OSSL_FUNC_store_open_ex() provider-storemgmt API function to pass\n   a passphrase callback when opening a store.\n\n   *Simo Sorce*\n\n * Changed the default salt length used by PBES2 KDF's (PBKDF2 and scrypt)\n   from 8 bytes to 16 bytes.\n   The PKCS5 (RFC 8018) standard uses a 64 bit salt length for PBE, and\n   recommends a minimum of 64 bits for PBES2. For FIPS compliance PBKDF2\n   requires a salt length of 128 bits. This affects OpenSSL command line\n   applications such as \"genrsa\" and \"pkcs8\" and API's such as\n   PEM_write_bio_PrivateKey() that are reliant on the default value.\n   The additional commandline option 'saltlen' has been added to the\n   OpenSSL command line applications for \"pkcs8\" and \"enc\" to allow the\n   salt length to be set to a non default value.\n\n   *Shane Lontis*\n\n * Changed the default value of the `ess_cert_id_alg` configuration\n   option which is used to calculate the TSA's public key certificate\n   identifier. The default algorithm is updated to be sha256 instead\n   of sha1.\n\n   *Małgorzata Olszówka*\n\n * Added optimization for SM2 algorithm on aarch64. It uses a huge precomputed\n   table for point multiplication of the base point, which increases the size of\n   libcrypto from 4.4 MB to 4.9 MB. A new configure option `no-sm2-precomp` has\n   been added to disable the precomputed table.\n\n   *Xu Yizhou*\n\n * Added client side support for QUIC\n\n   *Hugo Landau, Matt Caswell, Paul Dale, Tomáš Mráz, Richard Levitte*\n\n * Added multiple tutorials on the OpenSSL library and in particular\n   on writing various clients (using TLS and QUIC protocols) with libssl.\n\n   *Matt Caswell*\n\n * Added secp384r1 implementation using Solinas' reduction to improve\n   speed of the NIST P-384 elliptic curve. To enable the implementation\n   the build option `enable-ec_nistp_64_gcc_128` must be used.\n\n   *Rohan McLure*\n\n * Improved RFC7468 compliance of the asn1parse command.\n\n   *Matthias St. Pierre*\n\n * Added SHA256/192 algorithm support.\n\n   *Fergus Dall*\n\n * Added support for securely getting root CA certificate update in\n   CMP.\n\n   *David von Oheimb*\n\n * Improved contention on global write locks by using more read locks where\n   appropriate.\n\n   *Matt Caswell*\n\n * Improved performance of OSSL_PARAM lookups in performance critical\n   provider functions.\n\n   *Paul Dale*\n\n * Added the SSL_get0_group_name() function to provide access to the\n   name of the group used for the TLS key exchange.\n\n   *Alex Bozarth*\n\n * Provide a new configure option `no-http` that can be used to disable the\n   HTTP support. Provide new configure options `no-apps` and `no-docs` to\n   disable building the openssl command line application and the documentation.\n\n   *Vladimír Kotal*\n\n * Provide a new configure option `no-ecx` that can be used to disable the\n   X25519, X448, and EdDSA support.\n\n   *Yi Li*\n\n * When multiple OSSL_KDF_PARAM_INFO parameters are passed to\n   the EVP_KDF_CTX_set_params() function they are now concatenated not just\n   for the HKDF algorithm but also for SSKDF and X9.63 KDF algorithms.\n\n   *Paul Dale*\n\n * Added OSSL_FUNC_keymgmt_im/export_types_ex() provider functions that get\n   the provider context as a parameter.\n\n   *Ingo Franzki*\n\n * TLS round-trip time calculation was added by a Brigham Young University\n   Capstone team partnering with Sandia National Laboratories. A new function\n   in ssl_lib titled SSL_get_handshake_rtt will calculate and retrieve this\n   value.\n\n   *Jairus Christensen*\n\n * Added the \"-quic\" option to s_client to enable connectivity to QUIC servers.\n   QUIC requires the use of ALPN, so this must be specified via the \"-alpn\"\n   option. Use of the \"advanced\" s_client command command via the \"-adv\" option\n   is recommended.\n\n   *Matt Caswell*\n\n * Added an \"advanced\" command mode to s_client. Use this with the \"-adv\"\n   option. The old \"basic\" command mode recognises certain letters that must\n   always appear at the start of a line and cannot be escaped. The advanced\n   command mode enables commands to be entered anywhere and there is an\n   escaping mechanism. After starting s_client with \"-adv\" type \"{help}\"\n   to show a list of available commands.\n\n   *Matt Caswell*\n\n * Add Raw Public Key (RFC7250) support. Authentication is supported\n   by matching keys against either local policy (TLSA records synthesised\n   from the expected keys) or DANE (TLSA records obtained by the\n   application from DNS). TLSA records will also match the same key in\n   the server certificate, should RPK use not happen to be negotiated.\n\n   *Todd Short*\n\n * Added support for modular exponentiation and CRT offloading for the\n   S390x architecture.\n\n   *Juergen Christ*\n\n * Added further assembler code for the RISC-V architecture.\n\n   *Christoph Müllner*\n\n * Added EC_GROUP_to_params() which creates an OSSL_PARAM array\n   from a given EC_GROUP.\n\n   *Oliver Mihatsch*\n\n * Improved support for non-default library contexts and property queries\n   when parsing PKCS#12 files.\n\n   *Shane Lontis*\n\n * Implemented support for all five instances of EdDSA from RFC8032:\n   Ed25519, Ed25519ctx, Ed25519ph, Ed448, and Ed448ph.\n   The streaming is not yet supported for the HashEdDSA variants\n   (Ed25519ph and Ed448ph).\n\n   *James Muir*\n\n * Added SM4 optimization for ARM processors using ASIMD and AES HW\n   instructions.\n\n   *Xu Yizhou*\n\n * Implemented SM4-XTS support.\n\n   *Xu Yizhou*\n\n * Added platform-agnostic OSSL_sleep() function.\n\n   *Richard Levitte*\n\n * Implemented deterministic ECDSA signatures (RFC6979) support.\n\n   *Shane Lontis*\n\n * Implemented AES-GCM-SIV (RFC8452) support.\n\n   *Todd Short*\n\n * Added support for pluggable (provider-based) TLS signature algorithms.\n   This enables TLS 1.3 authentication operations with algorithms embedded\n   in providers not included by default in OpenSSL. In combination with\n   the already available pluggable KEM and X.509 support, this enables\n   for example suitable providers to deliver post-quantum or quantum-safe\n   cryptography to OpenSSL users.\n\n   *Michael Baentsch*\n\n * Added support for pluggable (provider-based) CMS signature algorithms.\n   This enables CMS sign and verify operations with algorithms embedded\n   in providers not included by default in OpenSSL.\n\n   *Michael Baentsch*\n\n * Added support for Hybrid Public Key Encryption (HPKE) as defined\n   in RFC9180. HPKE is required for TLS Encrypted ClientHello (ECH),\n   Message Layer Security (MLS) and other IETF specifications.\n   HPKE can also be used by other applications that require\n   encrypting \"to\" an ECDH public key. External APIs are defined in\n   include/openssl/hpke.h and documented in doc/man3/OSSL_HPKE_CTX_new.pod\n\n   *Stephen Farrell*\n\n * Implemented HPKE DHKEM support in providers used by HPKE (RFC9180)\n   API.\n\n   *Shane Lontis*\n\n * Add support for certificate compression (RFC8879), including\n   library support for Brotli and Zstandard compression.\n\n   *Todd Short*\n\n * Add the ability to add custom attributes to PKCS12 files. Add a new API\n   PKCS12_create_ex2, identical to the existing PKCS12_create_ex but allows\n   for a user specified callback and optional argument.\n   Added a new PKCS12_SAFEBAG_set0_attr, which allows for a new attr to be\n   added to the existing STACK_OF attrs.\n\n   *Graham Woodward*\n\n * Major refactor of the libssl record layer.\n\n   *Matt Caswell*\n\n * Add a mac salt length option for the pkcs12 command.\n\n   *Xinping Chen*\n\n * Add more SRTP protection profiles from RFC8723 and RFC8269.\n\n   *Kijin Kim*\n\n * Extended Kernel TLS (KTLS) to support TLS 1.3 receive offload.\n\n   *Daiki Ueno, John Baldwin and Dmitry Podgorny*\n\n * Add support for TCP Fast Open (RFC7413) to macOS, Linux, and FreeBSD where\n   supported and enabled.\n\n   *Todd Short*\n\n * Add ciphersuites based on DHE_PSK (RFC 4279) and ECDHE_PSK (RFC 5489)\n   to the list of ciphersuites providing Perfect Forward Secrecy as\n   required by SECLEVEL >= 3.\n\n   *Dmitry Belyavskiy, Nicola Tuveri*\n\n * Add new SSL APIs to aid in efficiently implementing TLS/SSL fingerprinting.\n   The SSL_CTRL_GET_IANA_GROUPS control code, exposed as the\n   SSL_get0_iana_groups() function-like macro, retrieves the list of\n   supported groups sent by the peer.\n   The function SSL_client_hello_get_extension_order() populates\n   a caller-supplied array with the list of extension types present in the\n   ClientHello, in order of appearance.\n\n   *Phus Lu*\n\n * Fixed PEM_write_bio_PKCS8PrivateKey() and PEM_write_bio_PKCS8PrivateKey_nid()\n   to make it possible to use empty passphrase strings.\n\n   *Darshan Sen*\n\n * The PKCS12_parse() function now supports MAC-less PKCS12 files.\n\n   *Daniel Fiala*\n\n * Added ASYNC_set_mem_functions() and ASYNC_get_mem_functions() calls to be able\n   to change functions used for allocating the memory of asynchronous call stack.\n\n   *Arran Cudbard-Bell*\n\n * Added support for signed BIGNUMs in the OSSL_PARAM APIs.\n\n   *Richard Levitte*\n\n * A failure exit code is returned when using the openssl x509 command to check\n   certificate attributes and the checks fail.\n\n   *Rami Khaldi*\n\n * The default SSL/TLS security level has been changed from 1 to 2. RSA,\n   DSA and DH keys of 1024 bits and above and less than 2048 bits and ECC keys\n   of 160 bits and above and less than 224 bits were previously accepted by\n   default but are now no longer allowed. By default TLS compression was\n   already disabled in previous OpenSSL versions. At security level 2 it cannot\n   be enabled.\n\n   *Matt Caswell*\n\n * The SSL_CTX_set_cipher_list family functions now accept ciphers using their\n   IANA standard names.\n\n   *Erik Lax*\n\n * The PVK key derivation function has been moved from b2i_PVK_bio_ex() into\n   the legacy crypto provider as an EVP_KDF. Applications requiring this KDF\n   will need to load the legacy crypto provider.\n\n   *Paul Dale*\n\n * CCM8 cipher suites in TLS have been downgraded to security level zero\n   because they use a short authentication tag which lowers their strength.\n\n   *Paul Dale*\n\n * Subject or issuer names in X.509 objects are now displayed as UTF-8 strings\n   by default. Also spaces surrounding `=` in DN output are removed.\n\n   *Dmitry Belyavskiy*\n\n * Add X.509 certificate codeSigning purpose and related checks on key usage and\n   extended key usage of the leaf certificate according to the CA/Browser Forum.\n\n   * Lutz Jänicke*\n\n * The `x509`, `ca`, and `req` commands now produce X.509 v3 certificates.\n   The `-x509v1` option of `req` prefers generation of X.509 v1 certificates.\n   `X509_sign()` and `X509_sign_ctx()` make sure that the certificate has\n   X.509 version 3 if the certificate information includes X.509 extensions.\n\n   *David von Oheimb*\n\n * Fix and extend certificate handling and the commands `x509`, `verify` etc.\n   such as adding a trace facility for debugging certificate chain building.\n\n   *David von Oheimb*\n\n * Various fixes and extensions to the CMP+CRMF implementation and the `cmp` app\n   in particular supporting requests for central key generation, generalized\n   polling, and various types of genm/genp exchanges defined in CMP Updates.\n\n   *David von Oheimb*\n\n * Fixes and extensions to the HTTP client and to the HTTP server in `apps/`\n   like correcting the TLS and proxy support and adding tracing for debugging.\n\n   *David von Oheimb*\n\n * Extended the CMS API for handling `CMS_SignedData` and `CMS_EnvelopedData`.\n\n   *David von Oheimb*\n\n * `CMS_add0_cert()` and `CMS_add1_cert()` no longer throw an error if\n   a certificate to be added is already present. `CMS_sign_ex()` and\n   `CMS_sign()` now ignore any duplicate certificates in their `certs` argument\n   and no longer throw an error for them.\n\n   *David von Oheimb*\n\n * Fixed and extended `util/check-format.pl` for checking adherence to the\n   coding style <https://www.openssl.org/policies/technical/coding-style.html>.\n   The checks are meanwhile more complete and yield fewer false positives.\n\n   *David von Oheimb*\n\n * Added BIO_s_dgram_pair() and BIO_s_dgram_mem() that provide memory-based\n   BIOs with datagram semantics and support for BIO_sendmmsg() and BIO_recvmmsg()\n   calls. They can be used as the transport BIOs for QUIC.\n\n   *Hugo Landau, Matt Caswell and Tomáš Mráz*\n\n * Add new BIO_sendmmsg() and BIO_recvmmsg() BIO methods which allow\n   sending and receiving multiple messages in a single call. An implementation\n   is provided for BIO_dgram. For further details, see BIO_sendmmsg(3).\n\n   *Hugo Landau*\n\n * Support for loading root certificates from the Windows certificate store\n   has been added. The support is in the form of a store which recognises the\n   URI string of `org.openssl.winstore://`. This URI scheme currently takes no\n   arguments. This store is built by default and can be disabled using the new\n   compile-time option `no-winstore`. This store is not currently used by\n   default and must be loaded explicitly using the above store URI. It is\n   expected to be loaded by default in the future.\n\n   *Hugo Landau*\n\n * Enable KTLS with the TLS 1.3 CCM mode ciphersuites. Note that some linux\n   kernel versions that support KTLS have a known bug in CCM processing. That\n   has been fixed in stable releases starting from 5.4.164, 5.10.84, 5.15.7,\n   and all releases since 5.16. KTLS with CCM ciphersuites should be only used\n   on these releases.\n\n   *Tianjia Zhang*\n\n * Added `-ktls` option to `s_server` and `s_client` commands to enable the\n   KTLS support.\n\n   *Tianjia Zhang*\n\n * Zerocopy KTLS sendfile() support on Linux.\n\n   *Maxim Mikityanskiy*\n\n * The OBJ_ calls are now thread safe using a global lock.\n\n   *Paul Dale*\n\n * New parameter `-digest` for openssl cms command allowing signing\n   pre-computed digests and new CMS API functions supporting that\n   functionality.\n\n   *Viktor Söderqvist*\n\n * OPENSSL_malloc() and other allocation functions now raise errors on\n   allocation failures. The callers do not need to explicitly raise errors\n   unless they want to for tracing purposes.\n\n   *David von Oheimb*\n\n * Added and enabled by default implicit rejection in RSA PKCS#1 v1.5\n   decryption as a protection against Bleichenbacher-like attacks.\n   The RSA decryption API will now return a randomly generated deterministic\n   message instead of an error in case it detects an error when checking\n   padding during PKCS#1 v1.5 decryption. This is a general protection against\n   issues like CVE-2020-25659 and CVE-2020-25657. This protection can be\n   disabled by calling\n   `EVP_PKEY_CTX_ctrl_str(ctx, \"rsa_pkcs1_implicit_rejection\". \"0\")`\n   on the RSA decryption context.\n\n   *Hubert Kario*\n\n * Added support for Brainpool curves in TLS-1.3.\n\n   *Bernd Edlinger and Matt Caswell*\n\n * Added OpenBSD specific build targets.\n\n   *David Carlier*\n\n * Support for Argon2d, Argon2i, Argon2id KDFs has been added along with\n   a basic thread pool implementation for select platforms.\n\n   *Čestmír Kalina*\n\nOpenSSL 3.1\n-----------\n\n### Changes between 3.1.3 and 3.1.4 [24 Oct 2023]\n\n * Fix incorrect key and IV resizing issues when calling EVP_EncryptInit_ex2(),\n   EVP_DecryptInit_ex2() or EVP_CipherInit_ex2() with OSSL_PARAM parameters\n   that alter the key or IV length ([CVE-2023-5363]).\n\n   *Paul Dale*\n\n### Changes between 3.1.2 and 3.1.3 [19 Sep 2023]\n\n * Fix POLY1305 MAC implementation corrupting XMM registers on Windows.\n\n   The POLY1305 MAC (message authentication code) implementation in OpenSSL\n   does not save the contents of non-volatile XMM registers on Windows 64\n   platform when calculating the MAC of data larger than 64 bytes. Before\n   returning to the caller all the XMM registers are set to zero rather than\n   restoring their previous content. The vulnerable code is used only on newer\n   x86_64 processors supporting the AVX512-IFMA instructions.\n\n   The consequences of this kind of internal application state corruption can\n   be various - from no consequences, if the calling application does not\n   depend on the contents of non-volatile XMM registers at all, to the worst\n   consequences, where the attacker could get complete control of the\n   application process. However given the contents of the registers are just\n   zeroized so the attacker cannot put arbitrary values inside, the most likely\n   consequence, if any, would be an incorrect result of some application\n   dependent calculations or a crash leading to a denial of service.\n\n   ([CVE-2023-4807])\n\n   *Bernd Edlinger*\n\n### Changes between 3.1.1 and 3.1.2 [1 Aug 2023]\n\n * Fix excessive time spent checking DH q parameter value.\n\n   The function DH_check() performs various checks on DH parameters. After\n   fixing CVE-2023-3446 it was discovered that a large q parameter value can\n   also trigger an overly long computation during some of these checks.\n   A correct q value, if present, cannot be larger than the modulus p\n   parameter, thus it is unnecessary to perform these checks if q is larger\n   than p.\n\n   If DH_check() is called with such q parameter value,\n   DH_CHECK_INVALID_Q_VALUE return flag is set and the computationally\n   intensive checks are skipped.\n\n   ([CVE-2023-3817])\n\n   *Tomáš Mráz*\n\n * Fix DH_check() excessive time with over sized modulus.\n\n   The function DH_check() performs various checks on DH parameters. One of\n   those checks confirms that the modulus (\"p\" parameter) is not too large.\n   Trying to use a very large modulus is slow and OpenSSL will not normally use\n   a modulus which is over 10,000 bits in length.\n\n   However the DH_check() function checks numerous aspects of the key or\n   parameters that have been supplied. Some of those checks use the supplied\n   modulus value even if it has already been found to be too large.\n\n   A new limit has been added to DH_check of 32,768 bits. Supplying a\n   key/parameters with a modulus over this size will simply cause DH_check() to\n   fail.\n\n   ([CVE-2023-3446])\n\n   *Matt Caswell*\n\n * Do not ignore empty associated data entries with AES-SIV.\n\n   The AES-SIV algorithm allows for authentication of multiple associated\n   data entries along with the encryption. To authenticate empty data the\n   application has to call `EVP_EncryptUpdate()` (or `EVP_CipherUpdate()`)\n   with NULL pointer as the output buffer and 0 as the input buffer length.\n   The AES-SIV implementation in OpenSSL just returns success for such call\n   instead of performing the associated data authentication operation.\n   The empty data thus will not be authenticated. ([CVE-2023-2975])\n\n   Thanks to Juerg Wullschleger (Google) for discovering the issue.\n\n   The fix changes the authentication tag value and the ciphertext for\n   applications that use empty associated data entries with AES-SIV.\n   To decrypt data encrypted with previous versions of OpenSSL the application\n   has to skip calls to `EVP_DecryptUpdate()` for empty associated data\n   entries.\n\n   *Tomáš Mráz*\n\n * When building with the `enable-fips` option and using the resulting\n   FIPS provider, TLS 1.2 will, by default, mandate the use of an extended\n   master secret (FIPS 140-3 IG G.Q) and the Hash and HMAC DRBGs will\n   not operate with truncated digests (FIPS 140-3 IG G.R).\n\n   *Paul Dale*\n\n### Changes between 3.1.0 and 3.1.1 [30 May 2023]\n\n * Mitigate for the time it takes for `OBJ_obj2txt` to translate gigantic\n   OBJECT IDENTIFIER sub-identifiers to canonical numeric text form.\n\n   OBJ_obj2txt() would translate any size OBJECT IDENTIFIER to canonical\n   numeric text form.  For gigantic sub-identifiers, this would take a very\n   long time, the time complexity being O(n^2) where n is the size of that\n   sub-identifier.  ([CVE-2023-2650])\n\n   To mitigitate this, `OBJ_obj2txt()` will only translate an OBJECT\n   IDENTIFIER to canonical numeric text form if the size of that OBJECT\n   IDENTIFIER is 586 bytes or less, and fail otherwise.\n\n   The basis for this restriction is [RFC 2578 (STD 58), section 3.5]. OBJECT\n   IDENTIFIER values, which stipulates that OBJECT IDENTIFIERS may have at\n   most 128 sub-identifiers, and that the maximum value that each sub-\n   identifier may have is 2^32-1 (4294967295 decimal).\n\n   For each byte of every sub-identifier, only the 7 lower bits are part of\n   the value, so the maximum amount of bytes that an OBJECT IDENTIFIER with\n   these restrictions may occupy is 32 * 128 / 7, which is approximately 586\n   bytes.\n\n   *Richard Levitte*\n\n * Multiple algorithm implementation fixes for ARM BE platforms.\n\n   *Liu-ErMeng*\n\n * Added a -pedantic option to fipsinstall that adjusts the various\n   settings to ensure strict FIPS compliance rather than backwards\n   compatibility.\n\n   *Paul Dale*\n\n * Fixed buffer overread in AES-XTS decryption on ARM 64 bit platforms which\n   happens if the buffer size is 4 mod 5 in 16 byte AES blocks. This can\n   trigger a crash of an application using AES-XTS decryption if the memory\n   just after the buffer being decrypted is not mapped.\n   Thanks to Anton Romanov (Amazon) for discovering the issue.\n   ([CVE-2023-1255])\n\n   *Nevine Ebeid*\n\n * Reworked the Fix for the Timing Oracle in RSA Decryption ([CVE-2022-4304]).\n   The previous fix for this timing side channel turned out to cause\n   a severe 2-3x performance regression in the typical use case\n   compared to 3.0.7. The new fix uses existing constant time\n   code paths, and restores the previous performance level while\n   fully eliminating all existing timing side channels.\n   The fix was developed by Bernd Edlinger with testing support\n   by Hubert Kario.\n\n   *Bernd Edlinger*\n\n * Add FIPS provider configuration option to disallow the use of\n   truncated digests with Hash and HMAC DRBGs (q.v. FIPS 140-3 IG D.R.).\n   The option '-no_drbg_truncated_digests' can optionally be\n   supplied to 'openssl fipsinstall'.\n\n   *Paul Dale*\n\n * Corrected documentation of X509_VERIFY_PARAM_add0_policy() to mention\n   that it does not enable policy checking. Thanks to David Benjamin for\n   discovering this issue.\n   ([CVE-2023-0466])\n\n   *Tomáš Mráz*\n\n * Fixed an issue where invalid certificate policies in leaf certificates are\n   silently ignored by OpenSSL and other certificate policy checks are skipped\n   for that certificate. A malicious CA could use this to deliberately assert\n   invalid certificate policies in order to circumvent policy checking on the\n   certificate altogether.\n   ([CVE-2023-0465])\n\n   *Matt Caswell*\n\n * Limited the number of nodes created in a policy tree to mitigate\n   against CVE-2023-0464.  The default limit is set to 1000 nodes, which\n   should be sufficient for most installations.  If required, the limit\n   can be adjusted by setting the OPENSSL_POLICY_TREE_NODES_MAX build\n   time define to a desired maximum number of nodes or zero to allow\n   unlimited growth.\n   ([CVE-2023-0464])\n\n   *Paul Dale*\n\n### Changes between 3.0 and 3.1.0 [14 Mar 2023]\n\n * Add FIPS provider configuration option to enforce the\n   Extended Master Secret (EMS) check during the TLS1_PRF KDF.\n   The option '-ems_check' can optionally be supplied to\n   'openssl fipsinstall'.\n\n   *Shane Lontis*\n\n * The FIPS provider includes a few non-approved algorithms for\n   backward compatibility purposes and the \"fips=yes\" property query\n   must be used for all algorithm fetches to ensure FIPS compliance.\n\n   The algorithms that are included but not approved are Triple DES ECB,\n   Triple DES CBC and EdDSA.\n\n   *Paul Dale*\n\n * Added support for KMAC in KBKDF.\n\n   *Shane Lontis*\n\n * RNDR and RNDRRS support in provider functions to provide\n   random number generation for Arm CPUs (aarch64).\n\n   *Orr Toledano*\n\n * `s_client` and `s_server` commands now explicitly say when the TLS version\n   does not include the renegotiation mechanism. This avoids confusion\n   between that scenario versus when the TLS version includes secure\n   renegotiation but the peer lacks support for it.\n\n   *Felipe Gasper*\n\n * AES-GCM enabled with AVX512 vAES and vPCLMULQDQ.\n\n   *Tomasz Kantecki, Andrey Matyukov*\n\n * The various OBJ_* functions have been made thread safe.\n\n   *Paul Dale*\n\n * Parallel dual-prime 1536/2048-bit modular exponentiation for\n   AVX512_IFMA capable processors.\n\n   *Sergey Kirillov, Andrey Matyukov (Intel Corp)*\n\n * The functions `OPENSSL_LH_stats`, `OPENSSL_LH_node_stats`,\n   `OPENSSL_LH_node_usage_stats`, `OPENSSL_LH_stats_bio`,\n   `OPENSSL_LH_node_stats_bio` and `OPENSSL_LH_node_usage_stats_bio` are now\n   marked deprecated from OpenSSL 3.1 onwards and can be disabled by defining\n   `OPENSSL_NO_DEPRECATED_3_1`.\n\n   The macro `DEFINE_LHASH_OF` is now deprecated in favour of the macro\n   `DEFINE_LHASH_OF_EX`, which omits the corresponding type-specific function\n   definitions for these functions regardless of whether\n   `OPENSSL_NO_DEPRECATED_3_1` is defined.\n\n   Users of `DEFINE_LHASH_OF` may start receiving deprecation warnings for these\n   functions regardless of whether they are using them. It is recommended that\n   users transition to the new macro, `DEFINE_LHASH_OF_EX`.\n\n   *Hugo Landau*\n\n * When generating safe-prime DH parameters set the recommended private key\n   length equivalent to minimum key lengths as in RFC 7919.\n\n   *Tomáš Mráz*\n\n * Change the default salt length for PKCS#1 RSASSA-PSS signatures to the\n   maximum size that is smaller or equal to the digest length to comply with\n   FIPS 186-4 section 5. This is implemented by a new option\n   `OSSL_PKEY_RSA_PSS_SALT_LEN_AUTO_DIGEST_MAX` (\"auto-digestmax\") for the\n   `rsa_pss_saltlen` parameter, which is now the default. Signature\n   verification is not affected by this change and continues to work as before.\n\n   *Clemens Lang*\n\nOpenSSL 3.0\n-----------\n\nFor OpenSSL 3.0 a [Migration guide][] has been added, so the CHANGES entries\nlisted here are only a brief description.\nThe migration guide contains more detailed information related to new features,\nbreaking changes, and mappings for the large list of deprecated functions.\n\n[Migration guide]: https://github.com/openssl/openssl/tree/master/doc/man7/migration_guide.pod\n\n### Changes between 3.0.7 and 3.0.8 [7 Feb 2023]\n\n * Fixed NULL dereference during PKCS7 data verification.\n\n   A NULL pointer can be dereferenced when signatures are being\n   verified on PKCS7 signed or signedAndEnveloped data. In case the hash\n   algorithm used for the signature is known to the OpenSSL library but\n   the implementation of the hash algorithm is not available the digest\n   initialization will fail. There is a missing check for the return\n   value from the initialization function which later leads to invalid\n   usage of the digest API most likely leading to a crash.\n   ([CVE-2023-0401])\n\n   PKCS7 data is processed by the SMIME library calls and also by the\n   time stamp (TS) library calls. The TLS implementation in OpenSSL does\n   not call these functions however third party applications would be\n   affected if they call these functions to verify signatures on untrusted\n   data.\n\n   *Tomáš Mráz*\n\n * Fixed X.400 address type confusion in X.509 GeneralName.\n\n   There is a type confusion vulnerability relating to X.400 address processing\n   inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING\n   but the public structure definition for GENERAL_NAME incorrectly specified\n   the type of the x400Address field as ASN1_TYPE. This field is subsequently\n   interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather\n   than an ASN1_STRING.\n\n   When CRL checking is enabled (i.e. the application sets the\n   X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to\n   pass arbitrary pointers to a memcmp call, enabling them to read memory\n   contents or enact a denial of service.\n   ([CVE-2023-0286])\n\n   *Hugo Landau*\n\n * Fixed NULL dereference validating DSA public key.\n\n   An invalid pointer dereference on read can be triggered when an\n   application tries to check a malformed DSA public key by the\n   EVP_PKEY_public_check() function. This will most likely lead\n   to an application crash. This function can be called on public\n   keys supplied from untrusted sources which could allow an attacker\n   to cause a denial of service attack.\n\n   The TLS implementation in OpenSSL does not call this function\n   but applications might call the function if there are additional\n   security requirements imposed by standards such as FIPS 140-3.\n   ([CVE-2023-0217])\n\n   *Shane Lontis, Tomáš Mráz*\n\n * Fixed Invalid pointer dereference in d2i_PKCS7 functions.\n\n   An invalid pointer dereference on read can be triggered when an\n   application tries to load malformed PKCS7 data with the\n   d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\n   The result of the dereference is an application crash which could\n   lead to a denial of service attack. The TLS implementation in OpenSSL\n   does not call this function however third party applications might\n   call these functions on untrusted data.\n   ([CVE-2023-0216])\n\n   *Tomáš Mráz*\n\n * Fixed Use-after-free following BIO_new_NDEF.\n\n   The public API function BIO_new_NDEF is a helper function used for\n   streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL\n   to support the SMIME, CMS and PKCS7 streaming capabilities, but may also\n   be called directly by end user applications.\n\n   The function receives a BIO from the caller, prepends a new BIO_f_asn1\n   filter BIO onto the front of it to form a BIO chain, and then returns\n   the new head of the BIO chain to the caller. Under certain conditions,\n   for example if a CMS recipient public key is invalid, the new filter BIO\n   is freed and the function returns a NULL result indicating a failure.\n   However, in this case, the BIO chain is not properly cleaned up and the\n   BIO passed by the caller still retains internal pointers to the previously\n   freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO\n   then a use-after-free will occur. This will most likely result in a crash.\n   ([CVE-2023-0215])\n\n   *Viktor Dukhovni, Matt Caswell*\n\n * Fixed Double free after calling PEM_read_bio_ex.\n\n   The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\n   decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload\n   data. If the function succeeds then the \"name_out\", \"header\" and \"data\"\n   arguments are populated with pointers to buffers containing the relevant\n   decoded data. The caller is responsible for freeing those buffers. It is\n   possible to construct a PEM file that results in 0 bytes of payload data.\n   In this case PEM_read_bio_ex() will return a failure code but will populate\n   the header argument with a pointer to a buffer that has already been freed.\n   If the caller also frees this buffer then a double free will occur. This\n   will most likely lead to a crash.\n\n   The functions PEM_read_bio() and PEM_read() are simple wrappers around\n   PEM_read_bio_ex() and therefore these functions are also directly affected.\n\n   These functions are also called indirectly by a number of other OpenSSL\n   functions including PEM_X509_INFO_read_bio_ex() and\n   SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL\n   internal uses of these functions are not vulnerable because the caller does\n   not free the header argument if PEM_read_bio_ex() returns a failure code.\n   ([CVE-2022-4450])\n\n   *Kurt Roeckx, Matt Caswell*\n\n * Fixed Timing Oracle in RSA Decryption.\n\n   A timing based side channel exists in the OpenSSL RSA Decryption\n   implementation which could be sufficient to recover a plaintext across\n   a network in a Bleichenbacher style attack. To achieve a successful\n   decryption an attacker would have to be able to send a very large number\n   of trial messages for decryption. The vulnerability affects all RSA padding\n   modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.\n   ([CVE-2022-4304])\n\n   *Dmitry Belyavsky, Hubert Kario*\n\n * Fixed X.509 Name Constraints Read Buffer Overflow.\n\n   A read buffer overrun can be triggered in X.509 certificate verification,\n   specifically in name constraint checking. The read buffer overrun might\n   result in a crash which could lead to a denial of service attack.\n   In a TLS client, this can be triggered by connecting to a malicious\n   server. In a TLS server, this can be triggered if the server requests\n   client authentication and a malicious client connects.\n   ([CVE-2022-4203])\n\n   *Viktor Dukhovni*\n\n * Fixed X.509 Policy Constraints Double Locking security issue.\n\n   If an X.509 certificate contains a malformed policy constraint and\n   policy processing is enabled, then a write lock will be taken twice\n   recursively.  On some operating systems (most widely: Windows) this\n   results in a denial of service when the affected process hangs.  Policy\n   processing being enabled on a publicly facing server is not considered\n   to be a common setup.\n   ([CVE-2022-3996])\n\n   *Paul Dale*\n\n * Our provider implementations of `OSSL_FUNC_KEYMGMT_EXPORT` and\n   `OSSL_FUNC_KEYMGMT_GET_PARAMS` for EC and SM2 keys now honor\n   `OSSL_PKEY_PARAM_EC_POINT_CONVERSION_FORMAT` as set (and\n   default to `POINT_CONVERSION_UNCOMPRESSED`) when exporting\n   `OSSL_PKEY_PARAM_PUB_KEY`, instead of unconditionally using\n   `POINT_CONVERSION_COMPRESSED` as in previous 3.x releases.\n   For symmetry, our implementation of `EVP_PKEY_ASN1_METHOD->export_to`\n   for legacy EC and SM2 keys is also changed similarly to honor the\n   equivalent conversion format flag as specified in the underlying\n   `EC_KEY` object being exported to a provider, when this function is\n   called through `EVP_PKEY_export()`.\n\n   *Nicola Tuveri*\n\n### Changes between 3.0.6 and 3.0.7 [1 Nov 2022]\n\n * Fixed two buffer overflows in punycode decoding functions.\n\n   A buffer overrun can be triggered in X.509 certificate verification,\n   specifically in name constraint checking. Note that this occurs after\n   certificate chain signature verification and requires either a CA to\n   have signed the malicious certificate or for the application to continue\n   certificate verification despite failure to construct a path to a trusted\n   issuer.\n\n   In a TLS client, this can be triggered by connecting to a malicious\n   server.  In a TLS server, this can be triggered if the server requests\n   client authentication and a malicious client connects.\n\n   An attacker can craft a malicious email address to overflow\n   an arbitrary number of bytes containing the `.`  character (decimal 46)\n   on the stack.  This buffer overflow could result in a crash (causing a\n   denial of service).\n   ([CVE-2022-3786])\n\n   An attacker can craft a malicious email address to overflow four\n   attacker-controlled bytes on the stack.  This buffer overflow could\n   result in a crash (causing a denial of service) or potentially remote code\n   execution depending on stack layout for any given platform/compiler.\n   ([CVE-2022-3602])\n\n   *Paul Dale*\n\n * Removed all references to invalid OSSL_PKEY_PARAM_RSA names for CRT\n   parameters in OpenSSL code.\n   Applications should not use the names OSSL_PKEY_PARAM_RSA_FACTOR,\n   OSSL_PKEY_PARAM_RSA_EXPONENT and OSSL_PKEY_PARAM_RSA_COEFFICIENT.\n   Use the numbered names such as OSSL_PKEY_PARAM_RSA_FACTOR1 instead.\n   Using these invalid names may cause algorithms to use slower methods\n   that ignore the CRT parameters.\n\n   *Shane Lontis*\n\n * Fixed a regression introduced in 3.0.6 version raising errors on some stack\n   operations.\n\n   *Tomáš Mráz*\n\n * Fixed a regression introduced in 3.0.6 version not refreshing the certificate\n   data to be signed before signing the certificate.\n\n   *Gibeom Gwon*\n\n * Added RIPEMD160 to the default provider.\n\n   *Paul Dale*\n\n * Ensured that the key share group sent or accepted for the key exchange\n   is allowed for the protocol version.\n\n   *Matt Caswell*\n\n### Changes between 3.0.5 and 3.0.6 [11 Oct 2022]\n\n * OpenSSL supports creating a custom cipher via the legacy\n   EVP_CIPHER_meth_new() function and associated function calls. This function\n   was deprecated in OpenSSL 3.0 and application authors are instead encouraged\n   to use the new provider mechanism in order to implement custom ciphers.\n\n   OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers\n   passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and\n   EVP_CipherInit_ex2() functions (as well as other similarly named encryption\n   and decryption initialisation functions). Instead of using the custom cipher\n   directly it incorrectly tries to fetch an equivalent cipher from the\n   available providers. An equivalent cipher is found based on the NID passed to\n   EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a\n   given cipher. However it is possible for an application to incorrectly pass\n   NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef\n   is used in this way the OpenSSL encryption/decryption initialisation function\n   will match the NULL cipher as being equivalent and will fetch this from the\n   available providers. This will succeed if the default provider has been\n   loaded (or if a third party provider has been loaded that offers this\n   cipher). Using the NULL cipher means that the plaintext is emitted as the\n   ciphertext.\n\n   Applications are only affected by this issue if they call\n   EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an\n   encryption/decryption initialisation function. Applications that only use\n   SSL/TLS are not impacted by this issue.\n   ([CVE-2022-3358])\n\n   *Matt Caswell*\n\n * Fix LLVM vs Apple LLVM version numbering confusion that caused build failures\n   on MacOS 10.11\n\n   *Richard Levitte*\n\n * Fixed the linux-mips64 Configure target which was missing the\n   SIXTY_FOUR_BIT bn_ops flag. This was causing heap corruption on that\n   platform.\n\n   *Adam Joseph*\n\n * Fix handling of a ticket key callback that returns 0 in TLSv1.3 to not send a\n   ticket\n\n   *Matt Caswell*\n\n * Correctly handle a retransmitted ClientHello in DTLS\n\n   *Matt Caswell*\n\n * Fixed detection of ktls support in cross-compile environment on Linux\n\n   *Tomas Mraz*\n\n * Fixed some regressions and test failures when running the 3.0.0 FIPS provider\n   against 3.0.x\n\n   *Paul Dale*\n\n * Fixed SSL_pending() and SSL_has_pending() with DTLS which were failing to\n   report correct results in some cases\n\n   *Matt Caswell*\n\n * Fix UWP builds by defining VirtualLock\n\n   *Charles Milette*\n\n * For known safe primes use the minimum key length according to RFC 7919.\n   Longer private key sizes unnecessarily raise the cycles needed to compute the\n   shared secret without any increase of the real security. This fixes a\n   regression from 1.1.1 where these shorter keys were generated for the known\n   safe primes.\n\n   *Tomas Mraz*\n\n * Added the loongarch64 target\n\n   *Shi Pujin*\n\n * Fixed EC ASM flag passing. Flags for ASM implementations of EC curves were\n   only passed to the FIPS provider and not to the default or legacy provider.\n\n   *Juergen Christ*\n\n * Fixed reported performance degradation on aarch64. Restored the\n   implementation prior to commit 2621751 (\"aes/asm/aesv8-armx.pl: avoid\n   32-bit lane assignment in CTR mode\") for 64bit targets only, since it is\n   reportedly 2-17% slower and the silicon errata only affects 32bit targets.\n   The new algorithm is still used for 32 bit targets.\n\n   *Bernd Edlinger*\n\n * Added a missing header for memcmp that caused compilation failure on some\n   platforms\n\n   *Gregor Jasny*\n\n### Changes between 3.0.4 and 3.0.5 [5 Jul 2022]\n\n * The OpenSSL 3.0.4 release introduced a serious bug in the RSA\n   implementation for X86_64 CPUs supporting the AVX512IFMA instructions.\n   This issue makes the RSA implementation with 2048 bit private keys\n   incorrect on such machines and memory corruption will happen during\n   the computation. As a consequence of the memory corruption an attacker\n   may be able to trigger a remote code execution on the machine performing\n   the computation.\n\n   SSL/TLS servers or other servers using 2048 bit RSA private keys running\n   on machines supporting AVX512IFMA instructions of the X86_64 architecture\n   are affected by this issue.\n   ([CVE-2022-2274])\n\n   *Xi Ruoyao*\n\n * AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised\n   implementation would not encrypt the entirety of the data under some\n   circumstances.  This could reveal sixteen bytes of data that was\n   preexisting in the memory that wasn't written.  In the special case of\n   \"in place\" encryption, sixteen bytes of the plaintext would be revealed.\n\n   Since OpenSSL does not support OCB based cipher suites for TLS and DTLS,\n   they are both unaffected.\n   ([CVE-2022-2097])\n\n   *Alex Chernyakhovsky, David Benjamin, Alejandro Sedeño*\n\n### Changes between 3.0.3 and 3.0.4 [21 Jun 2022]\n\n * In addition to the c_rehash shell command injection identified in\n   CVE-2022-1292, further bugs where the c_rehash script does not\n   properly sanitise shell metacharacters to prevent command injection have been\n   fixed.\n\n   When the CVE-2022-1292 was fixed it was not discovered that there\n   are other places in the script where the file names of certificates\n   being hashed were possibly passed to a command executed through the shell.\n\n   This script is distributed by some operating systems in a manner where\n   it is automatically executed.  On such operating systems, an attacker\n   could execute arbitrary commands with the privileges of the script.\n\n   Use of the c_rehash script is considered obsolete and should be replaced\n   by the OpenSSL rehash command line tool.\n   (CVE-2022-2068)\n\n   *Daniel Fiala, Tomáš Mráz*\n\n * Case insensitive string comparison no longer uses locales.  It has instead\n   been directly implemented.\n\n   *Paul Dale*\n\n### Changes between 3.0.2 and 3.0.3 [3 May 2022]\n\n * Case insensitive string comparison is reimplemented via new locale-agnostic\n   comparison functions OPENSSL_str[n]casecmp always using the POSIX locale for\n   comparison. The previous implementation had problems when the Turkish locale\n   was used.\n\n   *Dmitry Belyavskiy*\n\n * Fixed a bug in the c_rehash script which was not properly sanitising shell\n   metacharacters to prevent command injection.  This script is distributed by\n   some operating systems in a manner where it is automatically executed.  On\n   such operating systems, an attacker could execute arbitrary commands with the\n   privileges of the script.\n\n   Use of the c_rehash script is considered obsolete and should be replaced\n   by the OpenSSL rehash command line tool.\n   (CVE-2022-1292)\n\n   *Tomáš Mráz*\n\n * Fixed a bug in the function `OCSP_basic_verify` that verifies the signer\n   certificate on an OCSP response. The bug caused the function in the case\n   where the (non-default) flag OCSP_NOCHECKS is used to return a postivie\n   response (meaning a successful verification) even in the case where the\n   response signing certificate fails to verify.\n\n   It is anticipated that most users of `OCSP_basic_verify` will not use the\n   OCSP_NOCHECKS flag. In this case the `OCSP_basic_verify` function will return\n   a negative value (indicating a fatal error) in the case of a certificate\n   verification failure. The normal expected return value in this case would be\n   0.\n\n   This issue also impacts the command line OpenSSL \"ocsp\" application. When\n   verifying an ocsp response with the \"-no_cert_checks\" option the command line\n   application will report that the verification is successful even though it\n   has in fact failed. In this case the incorrect successful response will also\n   be accompanied by error messages showing the failure and contradicting the\n   apparently successful result.\n   ([CVE-2022-1343])\n\n   *Matt Caswell*\n\n * Fixed a bug where the RC4-MD5 ciphersuite incorrectly used the\n   AAD data as the MAC key. This made the MAC key trivially predictable.\n\n   An attacker could exploit this issue by performing a man-in-the-middle attack\n   to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such\n   that the modified data would still pass the MAC integrity check.\n\n   Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0\n   endpoint will always be rejected by the recipient and the connection will\n   fail at that point. Many application protocols require data to be sent from\n   the client to the server first. Therefore, in such a case, only an OpenSSL\n   3.0 server would be impacted when talking to a non-OpenSSL 3.0 client.\n\n   If both endpoints are OpenSSL 3.0 then the attacker could modify data being\n   sent in both directions. In this case both clients and servers could be\n   affected, regardless of the application protocol.\n\n   Note that in the absence of an attacker this bug means that an OpenSSL 3.0\n   endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete\n   the handshake when using this ciphersuite.\n\n   The confidentiality of data is not impacted by this issue, i.e. an attacker\n   cannot decrypt data that has been encrypted using this ciphersuite - they can\n   only modify it.\n\n   In order for this attack to work both endpoints must legitimately negotiate\n   the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in\n   OpenSSL 3.0, and is not available within the default provider or the default\n   ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been\n   negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the\n   following must have occurred:\n\n   1) OpenSSL must have been compiled with the (non-default) compile time option\n      enable-weak-ssl-ciphers\n\n   2) OpenSSL must have had the legacy provider explicitly loaded (either\n      through application code or via configuration)\n\n   3) The ciphersuite must have been explicitly added to the ciphersuite list\n\n   4) The libssl security level must have been set to 0 (default is 1)\n\n   5) A version of SSL/TLS below TLSv1.3 must have been negotiated\n\n   6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any\n      others that both endpoints have in common\n   (CVE-2022-1434)\n\n   *Matt Caswell*\n\n * Fix a bug in the OPENSSL_LH_flush() function that breaks reuse of the memory\n   occupied by the removed hash table entries.\n\n   This function is used when decoding certificates or keys. If a long lived\n   process periodically decodes certificates or keys its memory usage will\n   expand without bounds and the process might be terminated by the operating\n   system causing a denial of service. Also traversing the empty hash table\n   entries will take increasingly more time.\n\n   Typically such long lived processes might be TLS clients or TLS servers\n   configured to accept client certificate authentication.\n   (CVE-2022-1473)\n\n   *Hugo Landau, Aliaksei Levin*\n\n * The functions `OPENSSL_LH_stats` and `OPENSSL_LH_stats_bio` now only report\n   the `num_items`, `num_nodes` and `num_alloc_nodes` statistics. All other\n   statistics are no longer supported. For compatibility, these statistics are\n   still listed in the output but are now always reported as zero.\n\n   *Hugo Landau*\n\n### Changes between 3.0.1 and 3.0.2 [15 Mar 2022]\n\n * Fixed a bug in the BN_mod_sqrt() function that can cause it to loop forever\n   for non-prime moduli.\n\n   Internally this function is used when parsing certificates that contain\n   elliptic curve public keys in compressed form or explicit elliptic curve\n   parameters with a base point encoded in compressed form.\n\n   It is possible to trigger the infinite loop by crafting a certificate that\n   has invalid explicit curve parameters.\n\n   Since certificate parsing happens prior to verification of the certificate\n   signature, any process that parses an externally supplied certificate may thus\n   be subject to a denial of service attack. The infinite loop can also be\n   reached when parsing crafted private keys as they can contain explicit\n   elliptic curve parameters.\n\n   Thus vulnerable situations include:\n\n    - TLS clients consuming server certificates\n    - TLS servers consuming client certificates\n    - Hosting providers taking certificates or private keys from customers\n    - Certificate authorities parsing certification requests from subscribers\n    - Anything else which parses ASN.1 elliptic curve parameters\n\n   Also any other applications that use the BN_mod_sqrt() where the attacker\n   can control the parameter values are vulnerable to this DoS issue.\n   ([CVE-2022-0778])\n\n   *Tomáš Mráz*\n\n * Add ciphersuites based on DHE_PSK (RFC 4279) and ECDHE_PSK (RFC 5489)\n   to the list of ciphersuites providing Perfect Forward Secrecy as\n   required by SECLEVEL >= 3.\n\n   *Dmitry Belyavskiy, Nicola Tuveri*\n\n * Made the AES constant time code for no-asm configurations\n   optional due to the resulting 95% performance degradation.\n   The AES constant time code can be enabled, for no assembly\n   builds, with: ./config no-asm -DOPENSSL_AES_CONST_TIME\n\n   *Paul Dale*\n\n * Fixed PEM_write_bio_PKCS8PrivateKey() to make it possible to use empty\n   passphrase strings.\n\n   *Darshan Sen*\n\n * The negative return value handling of the certificate verification callback\n   was reverted. The replacement is to set the verification retry state with\n   the SSL_set_retry_verify() function.\n\n   *Tomáš Mráz*\n\n### Changes between 3.0.0 and 3.0.1 [14 Dec 2021]\n\n * Fixed invalid handling of X509_verify_cert() internal errors in libssl\n   Internally libssl in OpenSSL calls X509_verify_cert() on the client side to\n   verify a certificate supplied by a server. That function may return a\n   negative return value to indicate an internal error (for example out of\n   memory). Such a negative return value is mishandled by OpenSSL and will cause\n   an IO function (such as SSL_connect() or SSL_do_handshake()) to not indicate\n   success and a subsequent call to SSL_get_error() to return the value\n   SSL_ERROR_WANT_RETRY_VERIFY. This return value is only supposed to be\n   returned by OpenSSL if the application has previously called\n   SSL_CTX_set_cert_verify_callback(). Since most applications do not do this\n   the SSL_ERROR_WANT_RETRY_VERIFY return value from SSL_get_error() will be\n   totally unexpected and applications may not behave correctly as a result. The\n   exact behaviour will depend on the application but it could result in\n   crashes, infinite loops or other similar incorrect responses.\n\n   This issue is made more serious in combination with a separate bug in OpenSSL\n   3.0 that will cause X509_verify_cert() to indicate an internal error when\n   processing a certificate chain. This will occur where a certificate does not\n   include the Subject Alternative Name extension but where a Certificate\n   Authority has enforced name constraints. This issue can occur even with valid\n   chains.\n   ([CVE-2021-4044])\n\n   *Matt Caswell*\n\n * Corrected a few file name and file reference bugs in the build,\n   installation and setup scripts, which lead to installation verification\n   failures.  Slightly enhanced the installation verification script.\n\n   *Richard Levitte*\n\n * Fixed EVP_PKEY_eq() to make it possible to use it with strictly private\n   keys.\n\n   *Richard Levitte*\n\n * Fixed PVK encoder to properly query for the passphrase.\n\n   *Tomáš Mráz*\n\n * Multiple fixes in the OSSL_HTTP API functions.\n\n   *David von Oheimb*\n\n * Allow sign extension in OSSL_PARAM_allocate_from_text() for the\n   OSSL_PARAM_INTEGER data type and return error on negative numbers\n   used with the OSSL_PARAM_UNSIGNED_INTEGER data type. Make\n   OSSL_PARAM_BLD_push_BN{,_pad}() return an error on negative numbers.\n\n   *Richard Levitte*\n\n * Allow copying uninitialized digest contexts with EVP_MD_CTX_copy_ex.\n\n   *Tomáš Mráz*\n\n * Fixed detection of ARMv7 and ARM64 CPU features on FreeBSD.\n\n   *Allan Jude*\n\n * Multiple threading fixes.\n\n   *Matt Caswell*\n\n * Added NULL digest implementation to keep compatibility with 1.1.1 version.\n\n   *Tomáš Mráz*\n\n * Allow fetching an operation from the provider that owns an unexportable key\n   as a fallback if that is still allowed by the property query.\n\n   *Richard Levitte*\n\n### Changes between 1.1.1 and 3.0.0 [7 Sep 2021]\n\n * TLS_MAX_VERSION, DTLS_MAX_VERSION and DTLS_MIN_VERSION constants are now\n   deprecated.\n\n   *Matt Caswell*\n\n * The `OPENSSL_s390xcap` environment variable can be used to set bits in the\n   S390X capability vector to zero. This simplifies testing of different code\n   paths on S390X architecture.\n\n   *Patrick Steuer*\n\n * Encrypting more than 2^64 TLS records with AES-GCM is disallowed\n   as per FIPS 140-2 IG A.5 \"Key/IV Pair Uniqueness Requirements from\n   SP 800-38D\". The communication will fail at this point.\n\n   *Paul Dale*\n\n * The EC_GROUP_clear_free() function is deprecated as there is nothing\n   confidential in EC_GROUP data.\n\n   *Nicola Tuveri*\n\n * The byte order mark (BOM) character is ignored if encountered at the\n   beginning of a PEM-formatted file.\n\n   *Dmitry Belyavskiy*\n\n * Added CMS support for the Russian GOST algorithms.\n\n   *Dmitry Belyavskiy*\n\n * Due to move of the implementation of cryptographic operations\n   to the providers, validation of various operation parameters can\n   be postponed until the actual operation is executed where previously\n   it happened immediately when an operation parameter was set.\n\n   For example when setting an unsupported curve with\n   EVP_PKEY_CTX_set_ec_paramgen_curve_nid() this function call will not\n   fail but later keygen operations with the EVP_PKEY_CTX will fail.\n\n   *OpenSSL team members and many third party contributors*\n\n * The EVP_get_cipherbyname() function will return NULL for algorithms such as\n   \"AES-128-SIV\", \"AES-128-CBC-CTS\" and \"CAMELLIA-128-CBC-CTS\" which were\n   previously only accessible via low-level interfaces. Use EVP_CIPHER_fetch()\n   instead to retrieve these algorithms from a provider.\n\n   *Shane Lontis*\n\n * On build targets where the multilib postfix is set in the build\n   configuration the libdir directory was changing based on whether\n   the lib directory with the multilib postfix exists on the system\n   or not. This unpredictable behavior was removed and eventual\n   multilib postfix is now always added to the default libdir. Use\n   `--libdir=lib` to override the libdir if adding the postfix is\n   undesirable.\n\n   *Jan Lána*\n\n * The triple DES key wrap functionality now conforms to RFC 3217 but is\n   no longer interoperable with OpenSSL 1.1.1.\n\n   *Paul Dale*\n\n * The ERR_GET_FUNC() function was removed.  With the loss of meaningful\n   function codes, this function can only cause problems for calling\n   applications.\n\n   *Paul Dale*\n\n * Add a configurable flag to output date formats as ISO 8601. Does not\n   change the default date format.\n\n   *William Edmisten*\n\n * Version of MSVC earlier than 1300 could get link warnings, which could\n   be suppressed if the undocumented -DI_CAN_LIVE_WITH_LNK4049 was set.\n   Support for this flag has been removed.\n\n   *Rich Salz*\n\n * Rework and make DEBUG macros consistent. Remove unused -DCONF_DEBUG,\n   -DBN_CTX_DEBUG, and REF_PRINT. Add a new tracing category and use it for\n   printing reference counts. Rename -DDEBUG_UNUSED to -DUNUSED_RESULT_DEBUG\n   Fix BN_DEBUG_RAND so it compiles and, when set, force DEBUG_RAND to be set\n   also. Rename engine_debug_ref to be ENGINE_REF_PRINT also for consistency.\n\n   *Rich Salz*\n\n * The signatures of the functions to get and set options on SSL and\n   SSL_CTX objects changed from \"unsigned long\" to \"uint64_t\" type.\n   Some source code changes may be required.\n\n   *Rich Salz*\n\n * The public definitions of conf_method_st and conf_st have been\n   deprecated. They will be made opaque in a future release.\n\n   *Rich Salz and Tomáš Mráz*\n\n * Client-initiated renegotiation is disabled by default. To allow it, use\n   the -client_renegotiation option, the SSL_OP_ALLOW_CLIENT_RENEGOTIATION\n   flag, or the \"ClientRenegotiation\" config parameter as appropriate.\n\n   *Rich Salz*\n\n * Add \"abspath\" and \"includedir\" pragma's to config files, to prevent,\n   or modify relative pathname inclusion.\n\n   *Rich Salz*\n\n * OpenSSL includes a cryptographic module that is intended to be FIPS 140-2\n   validated. Please consult the README-FIPS and\n   README-PROVIDERS files, as well as the migration guide.\n\n   *OpenSSL team members and many third party contributors*\n\n * For the key types DH and DHX the allowed settable parameters are now different.\n\n   *Shane Lontis*\n\n * The openssl commands that read keys, certificates, and CRLs now\n   automatically detect the PEM or DER format of the input files.\n\n   *David von Oheimb, Richard Levitte, and Tomáš Mráz*\n\n * Added enhanced PKCS#12 APIs which accept a library context.\n\n   *Jon Spillett*\n\n * The default manual page suffix ($MANSUFFIX) has been changed to \"ossl\"\n\n   *Matt Caswell*\n\n * Added support for Kernel TLS (KTLS).\n\n   *Boris Pismenny, John Baldwin and Andrew Gallatin*\n\n * Support for RFC 5746 secure renegotiation is now required by default for\n   SSL or TLS connections to succeed.\n\n   *Benjamin Kaduk*\n\n * The signature of the `copy` functional parameter of the\n   EVP_PKEY_meth_set_copy() function has changed so its `src` argument is\n   now `const EVP_PKEY_CTX *` instead of `EVP_PKEY_CTX *`. Similarly\n   the signature of the `pub_decode` functional parameter of the\n   EVP_PKEY_asn1_set_public() function has changed so its `pub` argument is\n   now `const X509_PUBKEY *` instead of `X509_PUBKEY *`.\n\n   *David von Oheimb*\n\n * The error return values from some control calls (ctrl) have changed.\n\n   *Paul Dale*\n\n * A public key check is now performed during EVP_PKEY_derive_set_peer().\n\n   *Shane Lontis*\n\n * Many functions in the EVP_ namespace that are getters of values from\n   implementations or contexts were renamed to include get or get0 in their\n   names. Old names are provided as macro aliases for compatibility and\n   are not deprecated.\n\n   *Tomáš Mráz*\n\n * The EVP_PKEY_CTRL_PKCS7_ENCRYPT, EVP_PKEY_CTRL_PKCS7_DECRYPT,\n   EVP_PKEY_CTRL_PKCS7_SIGN, EVP_PKEY_CTRL_CMS_ENCRYPT,\n   EVP_PKEY_CTRL_CMS_DECRYPT, and EVP_PKEY_CTRL_CMS_SIGN control operations\n   are deprecated.\n\n   *Tomáš Mráz*\n\n * The EVP_PKEY_public_check() and EVP_PKEY_param_check() functions now work for\n   more key types.\n\n * The output from the command line applications may have minor\n   changes.\n\n   *Paul Dale*\n\n * The output from numerous \"printing\" may have minor changes.\n\n   *David von Oheimb*\n\n * Windows thread synchronization uses read/write primitives (SRWLock) when\n   supported by the OS, otherwise CriticalSection continues to be used.\n\n   *Vincent Drake*\n\n * Add filter BIO BIO_f_readbuffer() that allows BIO_tell() and BIO_seek() to\n   work on read only BIO source/sinks that do not support these functions.\n   This allows piping or redirection of a file BIO using stdin to be buffered\n   into memory. This is used internally in OSSL_DECODER_from_bio().\n\n   *Shane Lontis*\n\n * OSSL_STORE_INFO_get_type() may now return an additional value. In 1.1.1\n   this function would return one of the values OSSL_STORE_INFO_NAME,\n   OSSL_STORE_INFO_PKEY, OSSL_STORE_INFO_PARAMS, OSSL_STORE_INFO_CERT or\n   OSSL_STORE_INFO_CRL. Decoded public keys would previously have been reported\n   as type OSSL_STORE_INFO_PKEY in 1.1.1. In 3.0 decoded public keys are now\n   reported as having the new type OSSL_STORE_INFO_PUBKEY. Applications\n   using this function should be amended to handle the changed return value.\n\n   *Richard Levitte*\n\n * Improved adherence to Enhanced Security Services (ESS, RFC 2634 and RFC 5035)\n   for the TSP and CMS Advanced Electronic Signatures (CAdES) implementations.\n   As required by RFC 5035 check both ESSCertID and ESSCertIDv2 if both present.\n   Correct the semantics of checking the validation chain in case ESSCertID{,v2}\n   contains more than one certificate identifier: This means that all\n   certificates referenced there MUST be part of the validation chain.\n\n   *David von Oheimb*\n\n * The implementation of older EVP ciphers related to CAST, IDEA, SEED, RC2, RC4,\n   RC5, DESX and DES have been moved to the legacy provider.\n\n   *Matt Caswell*\n\n * The implementation of the EVP digests MD2, MD4, MDC2, WHIRLPOOL and\n   RIPEMD-160 have been moved to the legacy provider.\n\n   *Matt Caswell*\n\n * The deprecated function EVP_PKEY_get0() now returns NULL being called for a\n   provided key.\n\n   *Dmitry Belyavskiy*\n\n * The deprecated functions EVP_PKEY_get0_RSA(),\n   EVP_PKEY_get0_DSA(), EVP_PKEY_get0_EC_KEY(), EVP_PKEY_get0_DH(),\n   EVP_PKEY_get0_hmac(), EVP_PKEY_get0_poly1305() and EVP_PKEY_get0_siphash() as\n   well as the similarly named \"get1\" functions behave differently in\n   OpenSSL 3.0.\n\n   *Matt Caswell*\n\n * A number of functions handling low-level keys or engines were deprecated\n   including EVP_PKEY_set1_engine(), EVP_PKEY_get0_engine(), EVP_PKEY_assign(),\n   EVP_PKEY_get0(), EVP_PKEY_get0_hmac(), EVP_PKEY_get0_poly1305() and\n   EVP_PKEY_get0_siphash().\n\n   *Matt Caswell*\n\n * PKCS#5 PBKDF1 key derivation has been moved from PKCS5_PBE_keyivgen() into\n   the legacy crypto provider as an EVP_KDF. Applications requiring this KDF\n   will need to load the legacy crypto provider. This includes these PBE\n   algorithms which use this KDF:\n   - NID_pbeWithMD2AndDES_CBC\n   - NID_pbeWithMD5AndDES_CBC\n   - NID_pbeWithSHA1AndRC2_CBC\n   - NID_pbeWithMD2AndRC2_CBC\n   - NID_pbeWithMD5AndRC2_CBC\n   - NID_pbeWithSHA1AndDES_CBC\n\n   *Jon Spillett*\n\n * Deprecated obsolete BIO_set_callback(), BIO_get_callback(), and\n   BIO_debug_callback() functions.\n\n   *Tomáš Mráz*\n\n * Deprecated obsolete EVP_PKEY_CTX_get0_dh_kdf_ukm() and\n   EVP_PKEY_CTX_get0_ecdh_kdf_ukm() functions.\n\n   *Tomáš Mráz*\n\n * The RAND_METHOD APIs have been deprecated.\n\n   *Paul Dale*\n\n * The SRP APIs have been deprecated.\n\n   *Matt Caswell*\n\n * Add a compile time option to prevent the caching of provider fetched\n   algorithms.  This is enabled by including the no-cached-fetch option\n   at configuration time.\n\n   *Paul Dale*\n\n * pkcs12 now uses defaults of PBKDF2, AES and SHA-256, with a MAC iteration\n   count of PKCS12_DEFAULT_ITER.\n\n   *Tomáš Mráz and Sahana Prasad*\n\n * The openssl speed command does not use low-level API calls anymore.\n\n   *Tomáš Mráz*\n\n * Parallel dual-prime 1024-bit modular exponentiation for AVX512_IFMA\n   capable processors.\n\n   *Ilya Albrekht, Sergey Kirillov, Andrey Matyukov (Intel Corp)*\n\n * Combining the Configure options no-ec and no-dh no longer disables TLSv1.3.\n\n   *Matt Caswell*\n\n * Implemented support for fully \"pluggable\" TLSv1.3 groups. This means that\n   providers may supply their own group implementations (using either the \"key\n   exchange\" or the \"key encapsulation\" methods) which will automatically be\n   detected and used by libssl.\n\n   *Matt Caswell, Nicola Tuveri*\n\n * The undocumented function X509_certificate_type() has been deprecated;\n\n   *Rich Salz*\n\n * Deprecated the obsolete BN_pseudo_rand() and BN_pseudo_rand_range().\n\n   *Tomáš Mráz*\n\n * Removed RSA padding mode for SSLv23 (which was only used for\n   SSLv2). This includes the functions RSA_padding_check_SSLv23() and\n   RSA_padding_add_SSLv23() and the `-ssl` option in the deprecated\n   `rsautl` command.\n\n   *Rich Salz*\n\n * Deprecated the obsolete X9.31 RSA key generation related functions.\n\n * While a callback function set via `SSL_CTX_set_cert_verify_callback()`\n   is not allowed to return a value > 1, this is no more taken as failure.\n\n   *Viktor Dukhovni and David von Oheimb*\n\n * Deprecated the obsolete X9.31 RSA key generation related functions\n   BN_X931_generate_Xpq(), BN_X931_derive_prime_ex(), and\n   BN_X931_generate_prime_ex().\n\n   *Tomáš Mráz*\n\n * The default key generation method for the regular 2-prime RSA keys was\n   changed to the FIPS 186-4 B.3.6 method.\n\n   *Shane Lontis*\n\n * Deprecated the BN_is_prime_ex() and BN_is_prime_fasttest_ex() functions.\n\n   *Kurt Roeckx*\n\n * Deprecated EVP_MD_CTX_set_update_fn() and EVP_MD_CTX_update_fn().\n\n   *Rich Salz*\n\n * Deprecated the type OCSP_REQ_CTX and the functions OCSP_REQ_CTX_*() and\n   replaced with OSSL_HTTP_REQ_CTX and the functions OSSL_HTTP_REQ_CTX_*().\n\n   *Rich Salz, Richard Levitte, and David von Oheimb*\n\n * Deprecated `X509_http_nbio()` and `X509_CRL_http_nbio()`.\n\n   *David von Oheimb*\n\n * Deprecated `OCSP_parse_url()`.\n\n   *David von Oheimb*\n\n * Validation of SM2 keys has been separated from the validation of regular EC\n   keys.\n\n   *Nicola Tuveri*\n\n * Behavior of the `pkey` command is changed,\n   when using the `-check` or `-pubcheck`\n   switches: a validation failure triggers an early exit, returning a failure\n   exit status to the parent process.\n\n   *Nicola Tuveri*\n\n * Changed behavior of SSL_CTX_set_ciphersuites() and SSL_set_ciphersuites()\n   to ignore unknown ciphers.\n\n   *Otto Hollmann*\n\n * The `-cipher-commands` and `-digest-commands` options\n   of the command line utility `list` have been deprecated.\n   Instead use the `-cipher-algorithms` and `-digest-algorithms` options.\n\n   *Dmitry Belyavskiy*\n\n * Added convenience functions for generating asymmetric key pairs:\n   The 'quick' one-shot (yet somewhat limited) function L<EVP_PKEY_Q_keygen(3)>\n   and macros for the most common cases: <EVP_RSA_gen(3)> and L<EVP_EC_gen(3)>.\n\n   *David von Oheimb*\n\n * All of the low-level EC_KEY functions have been deprecated.\n\n   *Shane Lontis, Paul Dale, Richard Levitte, and Tomáš Mráz*\n\n * Deprecated all the libcrypto and libssl error string loading\n   functions.\n\n   *Richard Levitte*\n\n * The functions SSL_CTX_set_tmp_dh_callback and SSL_set_tmp_dh_callback, as\n   well as the macros SSL_CTX_set_tmp_dh() and SSL_set_tmp_dh() have been\n   deprecated.\n\n   *Matt Caswell*\n\n * The `-crypt` option to the `passwd` command line tool has been removed.\n\n   *Paul Dale*\n\n * The -C option to the `x509`, `dhparam`, `dsaparam`, and `ecparam` commands\n   were removed.\n\n   *Rich Salz*\n\n * Add support for AES Key Wrap inverse ciphers to the EVP layer.\n\n   *Shane Lontis*\n\n * Deprecated EVP_PKEY_set1_tls_encodedpoint() and\n   EVP_PKEY_get1_tls_encodedpoint().\n\n   *Matt Caswell*\n\n * The security callback, which can be customised by application code, supports\n   the security operation SSL_SECOP_TMP_DH. One location of the \"other\" parameter\n   was incorrectly passing a DH object. It now passed an EVP_PKEY in all cases.\n\n   *Matt Caswell*\n\n * Add PKCS7_get_octet_string() and PKCS7_type_is_other() to the public\n   interface. Their functionality remains unchanged.\n\n   *Jordan Montgomery*\n\n * Added new option for 'openssl list', '-providers', which will display the\n   list of loaded providers, their names, version and status.  It optionally\n   displays their gettable parameters.\n\n   *Paul Dale*\n\n * Removed EVP_PKEY_set_alias_type().\n\n   *Richard Levitte*\n\n * Deprecated `EVP_PKEY_CTX_set_rsa_keygen_pubexp()` and introduced\n   `EVP_PKEY_CTX_set1_rsa_keygen_pubexp()`, which is now preferred.\n\n   *Jeremy Walch*\n\n * Changed all \"STACK\" functions to be macros instead of inline functions. Macro\n   parameters are still checked for type safety at compile time via helper\n   inline functions.\n\n   *Matt Caswell*\n\n * Remove the RAND_DRBG API\n\n   *Paul Dale and Matthias St. Pierre*\n\n * Allow `SSL_set1_host()` and `SSL_add1_host()` to take IP literal addresses\n   as well as actual hostnames.\n\n   *David Woodhouse*\n\n * The 'MinProtocol' and 'MaxProtocol' configuration commands now silently\n   ignore TLS protocol version bounds when configuring DTLS-based contexts, and\n   conversely, silently ignore DTLS protocol version bounds when configuring\n   TLS-based contexts.  The commands can be repeated to set bounds of both\n   types.  The same applies with the corresponding \"min_protocol\" and\n   \"max_protocol\" command-line switches, in case some application uses both TLS\n   and DTLS.\n\n   SSL_CTX instances that are created for a fixed protocol version (e.g.\n   `TLSv1_server_method()`) also silently ignore version bounds.  Previously\n   attempts to apply bounds to these protocol versions would result in an\n   error.  Now only the \"version-flexible\" SSL_CTX instances are subject to\n   limits in configuration files in command-line options.\n\n   *Viktor Dukhovni*\n\n * Deprecated the `ENGINE` API.  Engines should be replaced with providers\n   going forward.\n\n   *Paul Dale*\n\n * Reworked the recorded ERR codes to make better space for system errors.\n   To distinguish them, the macro `ERR_SYSTEM_ERROR()` indicates if the\n   given code is a system error (true) or an OpenSSL error (false).\n\n   *Richard Levitte*\n\n * Reworked the test perl framework to better allow parallel testing.\n\n   *Nicola Tuveri and David von Oheimb*\n\n * Added ciphertext stealing algorithms AES-128-CBC-CTS, AES-192-CBC-CTS and\n   AES-256-CBC-CTS to the providers. CS1, CS2 and CS3 variants are supported.\n\n   *Shane Lontis*\n\n * 'Configure' has been changed to figure out the configuration target if\n   none is given on the command line.  Consequently, the 'config' script is\n   now only a mere wrapper.  All documentation is changed to only mention\n   'Configure'.\n\n   *Rich Salz and Richard Levitte*\n\n * Added a library context `OSSL_LIB_CTX` that applications as well as\n   other libraries can use to form a separate context within which\n   libcrypto operations are performed.\n\n   *Richard Levitte*\n\n * Added various `_ex` functions to the OpenSSL API that support using\n   a non-default `OSSL_LIB_CTX`.\n\n   *OpenSSL team*\n\n * Handshake now fails if Extended Master Secret extension is dropped\n   on renegotiation.\n\n   *Tomáš Mráz*\n\n * Dropped interactive mode from the `openssl` program.\n\n   *Richard Levitte*\n\n * Deprecated `EVP_PKEY_cmp()` and `EVP_PKEY_cmp_parameters()`.\n\n   *David von Oheimb and Shane Lontis*\n\n * Deprecated `EC_METHOD_get_field_type()`.\n\n   *Billy Bob Brumley*\n\n * Deprecated EC_GFp_simple_method(), EC_GFp_mont_method(),\n   EC_GF2m_simple_method(), EC_GFp_nist_method(), EC_GFp_nistp224_method()\n   EC_GFp_nistp256_method(), and EC_GFp_nistp521_method().\n\n   *Billy Bob Brumley*\n\n * Deprecated EC_GROUP_new(), EC_GROUP_method_of(), and EC_POINT_method_of().\n\n   *Billy Bob Brumley*\n\n * Add CAdES-BES signature verification support, mostly derived\n   from ESSCertIDv2 TS (RFC 5816) contribution by Marek Klein.\n\n   *Filipe Raimundo da Silva*\n\n * Add CAdES-BES signature scheme and attributes support (RFC 5126) to CMS API.\n\n   *Antonio Iacono*\n\n * Added the AuthEnvelopedData content type structure (RFC 5083) with AES-GCM\n   parameter (RFC 5084) for the Cryptographic Message Syntax (CMS).\n\n   *Jakub Zelenka*\n\n * Deprecated EC_POINT_make_affine() and EC_POINTs_make_affine().\n\n   *Billy Bob Brumley*\n\n * Deprecated EC_GROUP_precompute_mult(), EC_GROUP_have_precompute_mult(), and\n   EC_KEY_precompute_mult().\n\n   *Billy Bob Brumley*\n\n * Deprecated EC_POINTs_mul().\n\n   *Billy Bob Brumley*\n\n * Removed FIPS_mode() and FIPS_mode_set().\n\n   *Shane Lontis*\n\n * The SSL option SSL_OP_IGNORE_UNEXPECTED_EOF is introduced.\n\n   *Dmitry Belyavskiy*\n\n * Deprecated EC_POINT_set_Jprojective_coordinates_GFp() and\n   EC_POINT_get_Jprojective_coordinates_GFp().\n\n   *Billy Bob Brumley*\n\n * Added OSSL_PARAM_BLD to the public interface.  This allows OSSL_PARAM\n   arrays to be more easily constructed via a series of utility functions.\n   Create a parameter builder using OSSL_PARAM_BLD_new(), add parameters using\n   the various push functions and finally convert to a passable OSSL_PARAM\n   array using OSSL_PARAM_BLD_to_param().\n\n   *Paul Dale*\n\n * The security strength of SHA1 and MD5 based signatures in TLS has been\n   reduced.\n\n   *Kurt Roeckx*\n\n * Added EVP_PKEY_set_type_by_keymgmt(), to initialise an EVP_PKEY to\n   contain a provider side internal key.\n\n   *Richard Levitte*\n\n * ASN1_verify(), ASN1_digest() and ASN1_sign() have been deprecated.\n\n   *Richard Levitte*\n\n * Project text documents not yet having a proper file name extension\n   (`HACKING`, `LICENSE`, `NOTES*`, `README*`, `VERSION`) have been renamed to\n   `*.md` as far as reasonable, else `*.txt`, for better use with file managers.\n\n   *David von Oheimb*\n\n * The main project documents (README, NEWS, CHANGES, INSTALL, SUPPORT)\n   have been converted to Markdown with the goal to produce documents\n   which not only look pretty when viewed online in the browser, but\n   remain well readable inside a plain text editor.\n\n   To achieve this goal, a 'minimalistic' Markdown style has been applied\n   which avoids formatting elements that interfere too much with the\n   reading flow in the text file. For example, it\n\n   * avoids [ATX headings][] and uses [setext headings][] instead\n     (which works for `<h1>` and `<h2>` headings only).\n   * avoids [inline links][] and uses [reference links][] instead.\n   * avoids [fenced code blocks][] and uses [indented code blocks][] instead.\n\n     [ATX headings]:         https://github.github.com/gfm/#atx-headings\n     [setext headings]:      https://github.github.com/gfm/#setext-headings\n     [inline links]:         https://github.github.com/gfm/#inline-link\n     [reference links]:      https://github.github.com/gfm/#reference-link\n     [fenced code blocks]:   https://github.github.com/gfm/#fenced-code-blocks\n     [indented code blocks]: https://github.github.com/gfm/#indented-code-blocks\n\n   *Matthias St. Pierre*\n\n * The test suite is changed to preserve results of each test recipe.\n   A new directory test-runs/ with subdirectories named like the\n   test recipes are created in the build tree for this purpose.\n\n   *Richard Levitte*\n\n * Added an implementation of CMP and CRMF (RFC 4210, RFC 4211 RFC 6712).\n   This adds `crypto/cmp/`, `crpyto/crmf/`, `apps/cmp.c`, and `test/cmp_*`.\n   See L<openssl-cmp(1)> and L<OSSL_CMP_exec_IR_ses(3)> as starting points.\n\n   *David von Oheimb, Martin Peylo*\n\n * Generalized the HTTP client code from `crypto/ocsp/` into `crpyto/http/`.\n   It supports arbitrary request and response content types, GET redirection,\n   TLS, connections via HTTP(S) proxies, connections and exchange via\n   user-defined BIOs (allowing implicit connections), persistent connections,\n   and timeout checks.  See L<OSSL_HTTP_transfer(3)> etc. for details.\n   The legacy OCSP-focused (and only partly documented) API\n   is retained for backward compatibility, while most of it is deprecated.\n\n   *David von Oheimb*\n\n * Added `util/check-format.pl`, a tool for checking adherence to the\n   OpenSSL coding style <https://www.openssl.org/policies/codingstyle.html>.\n   The checks performed are incomplete and yield some false positives.\n   Still the tool should be useful for detecting most typical glitches.\n\n   *David von Oheimb*\n\n * `BIO_do_connect()` and `BIO_do_handshake()` have been extended:\n   If domain name resolution yields multiple IP addresses all of them are tried\n   after `connect()` failures.\n\n   *David von Oheimb*\n\n * All of the low-level RSA functions have been deprecated.\n\n   *Paul Dale*\n\n * X509 certificates signed using SHA1 are no longer allowed at security\n   level 1 and above.\n\n   *Kurt Roeckx*\n\n * The command line utilities dhparam, dsa, gendsa and dsaparam have been\n   modified to use PKEY APIs.  These commands are now in maintenance mode\n   and no new features will be added to them.\n\n   *Paul Dale*\n\n * The command line utility rsautl has been deprecated.\n\n   *Paul Dale*\n\n * The command line utilities genrsa and rsa have been modified to use PKEY\n   APIs. They now write PKCS#8 keys by default. These commands are now in\n   maintenance mode and no new features will be added to them.\n\n   *Paul Dale*\n\n * All of the low-level DH functions have been deprecated.\n\n   *Paul Dale and Matt Caswell*\n\n * All of the low-level DSA functions have been deprecated.\n\n   *Paul Dale*\n\n * Reworked the treatment of EC EVP_PKEYs with the SM2 curve to\n   automatically become EVP_PKEY_SM2 rather than EVP_PKEY_EC.\n\n   *Richard Levitte*\n\n * Deprecated low-level ECDH and ECDSA functions.\n\n   *Paul Dale*\n\n * Deprecated EVP_PKEY_decrypt_old() and EVP_PKEY_encrypt_old().\n\n   *Richard Levitte*\n\n * Enhanced the documentation of EVP_PKEY_get_size(), EVP_PKEY_get_bits()\n   and EVP_PKEY_get_security_bits().  Especially EVP_PKEY_get_size() needed\n   a new formulation to include all the things it can be used for,\n   as well as words of caution.\n\n   *Richard Levitte*\n\n * The SSL_CTX_set_tlsext_ticket_key_cb(3) function has been deprecated.\n\n   *Paul Dale*\n\n * All of the low-level HMAC functions have been deprecated.\n\n   *Paul Dale and David von Oheimb*\n\n * Over two thousand fixes were made to the documentation, including:\n   - Common options (such as -rand/-writerand, TLS version control, etc)\n     were refactored and point to newly-enhanced descriptions in openssl.pod.\n   - Added style conformance for all options (with help from Richard Levitte),\n     documented all reported missing options, added a CI build to check\n     that all options are documented and that no unimplemented options\n     are documented.\n   - Documented some internals, such as all use of environment variables.\n   - Addressed all internal broken L<> references.\n\n   *Rich Salz*\n\n * All of the low-level CMAC functions have been deprecated.\n\n   *Paul Dale*\n\n * The low-level MD2, MD4, MD5, MDC2, RIPEMD160 and Whirlpool digest\n   functions have been deprecated.\n\n   *Paul Dale and David von Oheimb*\n\n * Corrected the documentation of the return values from the `EVP_DigestSign*`\n   set of functions.  The documentation mentioned negative values for some\n   errors, but this was never the case, so the mention of negative values\n   was removed.\n\n   Code that followed the documentation and thereby check with something\n   like `EVP_DigestSignInit(...) <= 0` will continue to work undisturbed.\n\n   *Richard Levitte*\n\n * All of the low-level cipher functions have been deprecated.\n\n   *Matt Caswell and Paul Dale*\n\n * Removed include/openssl/opensslconf.h.in and replaced it with\n   include/openssl/configuration.h.in, which differs in not including\n   <openssl/macros.h>.  A short header include/openssl/opensslconf.h\n   was added to include both.\n\n   This allows internal hacks where one might need to modify the set\n   of configured macros, for example this if deprecated symbols are\n   still supposed to be available internally:\n\n       #include <openssl/configuration.h>\n\n       #undef OPENSSL_NO_DEPRECATED\n       #define OPENSSL_SUPPRESS_DEPRECATED\n\n       #include <openssl/macros.h>\n\n   This should not be used by applications that use the exported\n   symbols, as that will lead to linking errors.\n\n   *Richard Levitte*\n\n * Fixed an overflow bug in the x64_64 Montgomery squaring procedure\n   used in exponentiation with 512-bit moduli. No EC algorithms are\n   affected. Analysis suggests that attacks against 2-prime RSA1024,\n   3-prime RSA1536, and DSA1024 as a result of this defect would be very\n   difficult to perform and are not believed likely. Attacks against DH512\n   are considered just feasible. However, for an attack the target would\n   have to reuse the DH512 private key, which is not recommended anyway.\n   Also applications directly using the low-level API BN_mod_exp may be\n   affected if they use BN_FLG_CONSTTIME.\n   ([CVE-2019-1551])\n\n   *Andy Polyakov*\n\n * Most memory-debug features have been deprecated, and the functionality\n   replaced with no-ops.\n\n   *Rich Salz*\n\n * Added documentation for the STACK API.\n\n   *Rich Salz*\n\n * Introduced a new method type and API, OSSL_ENCODER, to represent\n   generic encoders.  These do the same sort of job that PEM writers\n   and d2i functions do, but with support for methods supplied by\n   providers, and the possibility for providers to support other\n   formats as well.\n\n   *Richard Levitte*\n\n * Introduced a new method type and API, OSSL_DECODER, to represent\n   generic decoders.  These do the same sort of job that PEM readers\n   and i2d functions do, but with support for methods supplied by\n   providers, and the possibility for providers to support other\n   formats as well.\n\n   *Richard Levitte*\n\n * Added a .pragma directive to the syntax of configuration files, to\n   allow varying behavior in a supported and predictable manner.\n   Currently added pragma:\n\n           .pragma dollarid:on\n\n   This allows dollar signs to be a keyword character unless it's\n   followed by a opening brace or parenthesis.  This is useful for\n   platforms where dollar signs are commonly used in names, such as\n   volume names and system directory names on VMS.\n\n   *Richard Levitte*\n\n * Added functionality to create an EVP_PKEY from user data.\n\n   *Richard Levitte*\n\n * Change the interpretation of the '--api' configuration option to\n   mean that this is a desired API compatibility level with no\n   further meaning.  The previous interpretation, that this would\n   also mean to remove all deprecated symbols up to and including\n   the given version, no requires that 'no-deprecated' is also used\n   in the configuration.\n\n   When building applications, the desired API compatibility level\n   can be set with the OPENSSL_API_COMPAT macro like before.  For\n   API compatibility version below 3.0, the old style numerical\n   value is valid as before, such as -DOPENSSL_API_COMPAT=0x10100000L.\n   For version 3.0 and on, the value is expected to be the decimal\n   value calculated from the major and minor version like this:\n\n           MAJOR * 10000 + MINOR * 100\n\n   Examples:\n\n           -DOPENSSL_API_COMPAT=30000             For 3.0\n           -DOPENSSL_API_COMPAT=30200             For 3.2\n\n   To hide declarations that are deprecated up to and including the\n   given API compatibility level, -DOPENSSL_NO_DEPRECATED must be\n   given when building the application as well.\n\n   *Richard Levitte*\n\n * Added the X509_LOOKUP_METHOD called X509_LOOKUP_store, to allow\n   access to certificate and CRL stores via URIs and OSSL_STORE\n   loaders.\n\n   This adds the following functions:\n\n   - X509_LOOKUP_store()\n   - X509_STORE_load_file()\n   - X509_STORE_load_path()\n   - X509_STORE_load_store()\n   - SSL_add_store_cert_subjects_to_stack()\n   - SSL_CTX_set_default_verify_store()\n   - SSL_CTX_load_verify_file()\n   - SSL_CTX_load_verify_dir()\n   - SSL_CTX_load_verify_store()\n\n   *Richard Levitte*\n\n * Added a new method to gather entropy on VMS, based on SYS$GET_ENTROPY.\n   The presence of this system service is determined at run-time.\n\n   *Richard Levitte*\n\n * Added functionality to create an EVP_PKEY context based on data\n   for methods from providers.  This takes an algorithm name and a\n   property query string and simply stores them, with the intent\n   that any operation that uses this context will use those strings\n   to fetch the needed methods implicitly, thereby making the port\n   of application written for pre-3.0 OpenSSL easier.\n\n   *Richard Levitte*\n\n * The undocumented function NCONF_WIN32() has been deprecated; for\n   conversion details see the HISTORY section of doc/man5/config.pod\n\n   *Rich Salz*\n\n * Introduced the new functions EVP_DigestSignInit_ex() and\n   EVP_DigestVerifyInit_ex(). The macros EVP_DigestSignUpdate() and\n   EVP_DigestVerifyUpdate() have been converted to functions. See the man\n   pages for further details.\n\n   *Matt Caswell*\n\n * Over two thousand fixes were made to the documentation, including:\n   adding missing command flags, better style conformance, documentation\n   of internals, etc.\n\n   *Rich Salz, Richard Levitte*\n\n * s390x assembly pack: add hardware-support for P-256, P-384, P-521,\n   X25519, X448, Ed25519 and Ed448.\n\n   *Patrick Steuer*\n\n * Print all values for a PKCS#12 attribute with 'openssl pkcs12', not just\n   the first value.\n\n   *Jon Spillett*\n\n * Deprecated the public definition of `ERR_STATE` as well as the function\n   `ERR_get_state()`.  This is done in preparation of making `ERR_STATE` an\n   opaque type.\n\n   *Richard Levitte*\n\n * Added ERR functionality to give callers access to the stored function\n   names that have replaced the older function code based functions.\n\n   New functions are ERR_peek_error_func(), ERR_peek_last_error_func(),\n   ERR_peek_error_data(), ERR_peek_last_error_data(), ERR_get_error_all(),\n   ERR_peek_error_all() and ERR_peek_last_error_all().\n\n   Deprecate ERR functions ERR_get_error_line(), ERR_get_error_line_data(),\n   ERR_peek_error_line_data(), ERR_peek_last_error_line_data() and\n   ERR_func_error_string().\n\n   *Richard Levitte*\n\n * Extended testing to be verbose for failing tests only.  The make variables\n   VERBOSE_FAILURE or VF can be used to enable this:\n\n           $ make VF=1 test                           # Unix\n           $ mms /macro=(VF=1) test                   ! OpenVMS\n           $ nmake VF=1 test                          # Windows\n\n   *Richard Levitte*\n\n * Added the `-copy_extensions` option to the `x509` command for use with\n   `-req` and `-x509toreq`. When given with the `copy` or `copyall` argument,\n   all extensions in the request are copied to the certificate or vice versa.\n\n   *David von Oheimb*, *Kirill Stefanenkov <kirill_stefanenkov@rambler.ru>*\n\n * Added the `-copy_extensions` option to the `req` command for use with\n   `-x509`. When given with the `copy` or `copyall` argument,\n   all extensions in the certification request are copied to the certificate.\n\n   *David von Oheimb*\n\n * The `x509`, `req`, and `ca` commands now make sure that X.509v3 certificates\n   they generate are by default RFC 5280 compliant in the following sense:\n   There is a subjectKeyIdentifier extension with a hash value of the public key\n   and for not self-signed certs there is an authorityKeyIdentifier extension\n   with a keyIdentifier field or issuer information identifying the signing key.\n   This is done unless some configuration overrides the new default behavior,\n   such as `subjectKeyIdentifier = none` and `authorityKeyIdentifier = none`.\n\n   *David von Oheimb*\n\n * Added several checks to `X509_verify_cert()` according to requirements in\n   RFC 5280 in case `X509_V_FLAG_X509_STRICT` is set\n   (which may be done by using the CLI option `-x509_strict`):\n   * The basicConstraints of CA certificates must be marked critical.\n   * CA certificates must explicitly include the keyUsage extension.\n   * If a pathlenConstraint is given the key usage keyCertSign must be allowed.\n   * The issuer name of any certificate must not be empty.\n   * The subject name of CA certs, certs with keyUsage crlSign,\n     and certs without subjectAlternativeName must not be empty.\n   * If a subjectAlternativeName extension is given it must not be empty.\n   * The signatureAlgorithm field and the cert signature must be consistent.\n   * Any given authorityKeyIdentifier and any given subjectKeyIdentifier\n     must not be marked critical.\n   * The authorityKeyIdentifier must be given for X.509v3 certs\n     unless they are self-signed.\n   * The subjectKeyIdentifier must be given for all X.509v3 CA certs.\n\n   *David von Oheimb*\n\n * Certificate verification using `X509_verify_cert()` meanwhile rejects EC keys\n   with explicit curve parameters (specifiedCurve) as required by RFC 5480.\n\n   *Tomáš Mráz*\n\n * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n   used even when parsing explicit parameters, when loading a encoded key\n   or calling `EC_GROUP_new_from_ecpkparameters()`/\n   `EC_GROUP_new_from_ecparameters()`.\n   This prevents bypass of security hardening and performance gains,\n   especially for curves with specialized EC_METHODs.\n   By default, if a key encoded with explicit parameters is loaded and later\n   encoded, the output is still encoded with explicit parameters, even if\n   internally a \"named\" EC_GROUP is used for computation.\n\n   *Nicola Tuveri*\n\n * Compute ECC cofactors if not provided during EC_GROUP construction. Before\n   this change, EC_GROUP_set_generator would accept order and/or cofactor as\n   NULL. After this change, only the cofactor parameter can be NULL. It also\n   does some minimal sanity checks on the passed order.\n   ([CVE-2019-1547])\n\n   *Billy Bob Brumley*\n\n * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey.\n   An attack is simple, if the first CMS_recipientInfo is valid but the\n   second CMS_recipientInfo is chosen ciphertext. If the second\n   recipientInfo decodes to PKCS #1 v1.5 form plaintext, the correct\n   encryption key will be replaced by garbage, and the message cannot be\n   decoded, but if the RSA decryption fails, the correct encryption key is\n   used and the recipient will not notice the attack.\n   As a work around for this potential attack the length of the decrypted\n   key must be equal to the cipher default key length, in case the\n   certificate is not given and all recipientInfo are tried out.\n   The old behaviour can be re-enabled in the CMS code by setting the\n   CMS_DEBUG_DECRYPT flag.\n\n   *Bernd Edlinger*\n\n * Early start up entropy quality from the DEVRANDOM seed source has been\n   improved for older Linux systems.  The RAND subsystem will wait for\n   /dev/random to be producing output before seeding from /dev/urandom.\n   The seeded state is stored for future library initialisations using\n   a system global shared memory segment.  The shared memory identifier\n   can be configured by defining OPENSSL_RAND_SEED_DEVRANDOM_SHM_ID to\n   the desired value.  The default identifier is 114.\n\n   *Paul Dale*\n\n * Revised BN_generate_prime_ex to not avoid factors 2..17863 in p-1\n   when primes for RSA keys are computed.\n   Since we previously always generated primes == 2 (mod 3) for RSA keys,\n   the 2-prime and 3-prime RSA modules were easy to distinguish, since\n   `N = p*q = 1 (mod 3)`, but `N = p*q*r = 2 (mod 3)`. Therefore, fingerprinting\n   2-prime vs. 3-prime RSA keys was possible by computing N mod 3.\n   This avoids possible fingerprinting of newly generated RSA modules.\n\n   *Bernd Edlinger*\n\n * Correct the extended master secret constant on EBCDIC systems. Without this\n   fix TLS connections between an EBCDIC system and a non-EBCDIC system that\n   negotiate EMS will fail. Unfortunately this also means that TLS connections\n   between EBCDIC systems with this fix, and EBCDIC systems without this\n   fix will fail if they negotiate EMS.\n\n   *Matt Caswell*\n\n * Changed the library initialisation so that the config file is now loaded\n   by default. This was already the case for libssl. It now occurs for both\n   libcrypto and libssl. Use the OPENSSL_INIT_NO_LOAD_CONFIG option to\n   `OPENSSL_init_crypto()` to suppress automatic loading of a config file.\n\n   *Matt Caswell*\n\n * Introduced new error raising macros, `ERR_raise()` and `ERR_raise_data()`,\n   where the former acts as a replacement for `ERR_put_error()`, and the\n   latter replaces the combination `ERR_put_error()` + `ERR_add_error_data()`.\n   `ERR_raise_data()` adds more flexibility by taking a format string and\n   an arbitrary number of arguments following it, to be processed with\n   `BIO_snprintf()`.\n\n   *Richard Levitte*\n\n * Introduced a new function, `OSSL_PROVIDER_available()`, which can be used\n   to check if a named provider is loaded and available.  When called, it\n   will also activate all fallback providers if such are still present.\n\n   *Richard Levitte*\n\n * Enforce a minimum DH modulus size of 512 bits.\n\n   *Bernd Edlinger*\n\n * Changed DH parameters to generate the order q subgroup instead of 2q.\n   Previously generated DH parameters are still accepted by DH_check\n   but DH_generate_key works around that by clearing bit 0 of the\n   private key for those. This avoids leaking bit 0 of the private key.\n\n   *Bernd Edlinger*\n\n * Significantly reduce secure memory usage by the randomness pools.\n\n   *Paul Dale*\n\n * `{CRYPTO,OPENSSL}_mem_debug_{push,pop}` are now no-ops and have been\n   deprecated.\n\n   *Rich Salz*\n\n * A new type, EVP_KEYEXCH, has been introduced to represent key exchange\n   algorithms. An implementation of a key exchange algorithm can be obtained\n   by using the function EVP_KEYEXCH_fetch(). An EVP_KEYEXCH algorithm can be\n   used in a call to EVP_PKEY_derive_init_ex() which works in a similar way to\n   the older EVP_PKEY_derive_init() function. See the man pages for the new\n   functions for further details.\n\n   *Matt Caswell*\n\n * The EVP_PKEY_CTX_set_dh_pad() macro has now been converted to a function.\n\n   *Matt Caswell*\n\n * Removed the function names from error messages and deprecated the\n   xxx_F_xxx define's.\n\n   *Richard Levitte*\n\n * Removed NextStep support and the macro OPENSSL_UNISTD\n\n   *Rich Salz*\n\n * Removed DES_check_key.  Also removed OPENSSL_IMPLEMENT_GLOBAL,\n   OPENSSL_GLOBAL_REF, OPENSSL_DECLARE_GLOBAL.\n   Also removed \"export var as function\" capability; we do not export\n   variables, only functions.\n\n   *Rich Salz*\n\n * RC5_32_set_key has been changed to return an int type, with 0 indicating\n   an error and 1 indicating success. In previous versions of OpenSSL this\n   was a void type. If a key was set longer than the maximum possible this\n   would crash.\n\n   *Matt Caswell*\n\n * Support SM2 signing and verification schemes with X509 certificate.\n\n   *Paul Yang*\n\n * Use SHA256 as the default digest for TS query in the `ts` app.\n\n   *Tomáš Mráz*\n\n * Change PBKDF2 to conform to SP800-132 instead of the older PKCS5 RFC2898.\n\n   *Shane Lontis*\n\n * Default cipher lists/suites are now available via a function, the\n   #defines are deprecated.\n\n   *Todd Short*\n\n * Add target VC-WIN32-UWP, VC-WIN64A-UWP, VC-WIN32-ARM-UWP and\n   VC-WIN64-ARM-UWP in Windows OneCore target for making building libraries\n   for Windows Store apps easier. Also, the \"no-uplink\" option has been added.\n\n   *Kenji Mouri*\n\n * Join the directories crypto/x509 and crypto/x509v3\n\n   *Richard Levitte*\n\n * Added command 'openssl kdf' that uses the EVP_KDF API.\n\n   *Shane Lontis*\n\n * Added command 'openssl mac' that uses the EVP_MAC API.\n\n   *Shane Lontis*\n\n * Added OPENSSL_info() to get diverse built-in OpenSSL data, such\n   as default directories.  Also added the command 'openssl info'\n   for scripting purposes.\n\n   *Richard Levitte*\n\n * The functions AES_ige_encrypt() and AES_bi_ige_encrypt() have been\n   deprecated.\n\n   *Matt Caswell*\n\n * Add prediction resistance to the DRBG reseeding process.\n\n   *Paul Dale*\n\n * Limit the number of blocks in a data unit for AES-XTS to 2^20 as\n   mandated by IEEE Std 1619-2018.\n\n   *Paul Dale*\n\n * Added newline escaping functionality to a filename when using openssl dgst.\n   This output format is to replicate the output format found in the `*sum`\n   checksum programs. This aims to preserve backward compatibility.\n\n   *Matt Eaton, Richard Levitte, and Paul Dale*\n\n * Removed the heartbeat message in DTLS feature, as it has very\n   little usage and doesn't seem to fulfill a valuable purpose.\n   The configuration option is now deprecated.\n\n   *Richard Levitte*\n\n * Changed the output of 'openssl {digestname} < file' to display the\n   digest name in its output.\n\n   *Richard Levitte*\n\n * Added a new generic trace API which provides support for enabling\n   instrumentation through trace output.\n\n   *Richard Levitte & Matthias St. Pierre*\n\n * Added build tests for C++.  These are generated files that only do one\n   thing, to include one public OpenSSL head file each.  This tests that\n   the public header files can be usefully included in a C++ application.\n\n   This test isn't enabled by default.  It can be enabled with the option\n   'enable-buildtest-c++'.\n\n   *Richard Levitte*\n\n * Added KB KDF (EVP_KDF_KB) to EVP_KDF.\n\n   *Robbie Harwood*\n\n * Added SSH KDF (EVP_KDF_SSHKDF) and KRB5 KDF (EVP_KDF_KRB5KDF) to EVP_KDF.\n\n   *Simo Sorce*\n\n * Added Single Step KDF (EVP_KDF_SS), X963 KDF, and X942 KDF to EVP_KDF.\n\n   *Shane Lontis*\n\n * Added KMAC to EVP_MAC.\n\n   *Shane Lontis*\n\n * Added property based algorithm implementation selection framework to\n   the core.\n\n   *Paul Dale*\n\n * Added SCA hardening for modular field inversion in EC_GROUP through\n   a new dedicated field_inv() pointer in EC_METHOD.\n   This also addresses a leakage affecting conversions from projective\n   to affine coordinates.\n\n   *Billy Bob Brumley, Nicola Tuveri*\n\n * Added EVP_KDF, an EVP layer KDF API, to simplify adding KDF and PRF\n   implementations.  This includes an EVP_PKEY to EVP_KDF bridge for\n   those algorithms that were already supported through the EVP_PKEY API\n   (scrypt, TLS1 PRF and HKDF).  The low-level KDF functions for PBKDF2\n   and scrypt are now wrappers that call EVP_KDF.\n\n   *David Makepeace*\n\n * Build devcrypto engine as a dynamic engine.\n\n   *Eneas U de Queiroz*\n\n * Add keyed BLAKE2 to EVP_MAC.\n\n   *Antoine Salon*\n\n * Fix a bug in the computation of the endpoint-pair shared secret used\n   by DTLS over SCTP. This breaks interoperability with older versions\n   of OpenSSL like OpenSSL 1.1.0 and OpenSSL 1.0.2. There is a runtime\n   switch SSL_MODE_DTLS_SCTP_LABEL_LENGTH_BUG (off by default) enabling\n   interoperability with such broken implementations. However, enabling\n   this switch breaks interoperability with correct implementations.\n\n * Fix a use after free bug in d2i_X509_PUBKEY when overwriting a\n   reused X509_PUBKEY object if the second PUBKEY is malformed.\n\n   *Bernd Edlinger*\n\n * Move strictness check from EVP_PKEY_asn1_new() to EVP_PKEY_asn1_add0().\n\n   *Richard Levitte*\n\n * Changed the license to the Apache License v2.0.\n\n   *Richard Levitte*\n\n * Switch to a new version scheme using three numbers MAJOR.MINOR.PATCH.\n\n   - Major releases (indicated by incrementing the MAJOR release number)\n     may introduce incompatible API/ABI changes.\n   - Minor releases (indicated by incrementing the MINOR release number)\n     may introduce new features but retain API/ABI compatibility.\n   - Patch releases (indicated by incrementing the PATCH number)\n     are intended for bug fixes and other improvements of existing\n     features only (like improving performance or adding documentation)\n     and retain API/ABI compatibility.\n\n   *Richard Levitte*\n\n * Add support for RFC5297 SIV mode (siv128), including AES-SIV.\n\n   *Todd Short*\n\n * Remove the 'dist' target and add a tarball building script.  The\n   'dist' target has fallen out of use, and it shouldn't be\n   necessary to configure just to create a source distribution.\n\n   *Richard Levitte*\n\n * Recreate the OS390-Unix config target.  It no longer relies on a\n   special script like it did for OpenSSL pre-1.1.0.\n\n   *Richard Levitte*\n\n * Instead of having the source directories listed in Configure, add\n   a 'build.info' keyword SUBDIRS to indicate what sub-directories to\n   look into.\n\n   *Richard Levitte*\n\n * Add GMAC to EVP_MAC.\n\n   *Paul Dale*\n\n * Ported the HMAC, CMAC and SipHash EVP_PKEY_METHODs to EVP_MAC.\n\n   *Richard Levitte*\n\n * Added EVP_MAC, an EVP layer MAC API, to simplify adding MAC\n   implementations.  This includes a generic EVP_PKEY to EVP_MAC bridge,\n   to facilitate the continued use of MACs through raw private keys in\n   functionality such as `EVP_DigestSign*` and `EVP_DigestVerify*`.\n\n   *Richard Levitte*\n\n * Deprecate ECDH_KDF_X9_62().\n\n   *Antoine Salon*\n\n * Added EVP_PKEY_ECDH_KDF_X9_63 and ecdh_KDF_X9_63() as replacements for\n   the EVP_PKEY_ECDH_KDF_X9_62 KDF type and ECDH_KDF_X9_62(). The old names\n   are retained for backwards compatibility.\n\n   *Antoine Salon*\n\n * AES-XTS mode now enforces that its two keys are different to mitigate\n   the attacked described in \"Efficient Instantiations of Tweakable\n   Blockciphers and Refinements to Modes OCB and PMAC\" by Phillip Rogaway.\n   Details of this attack can be obtained from:\n   <http://web.cs.ucdavis.edu/%7Erogaway/papers/offsets.pdf>\n\n   *Paul Dale*\n\n * Rename the object files, i.e. give them other names than in previous\n   versions.  Their names now include the name of the final product, as\n   well as its type mnemonic (bin, lib, shlib).\n\n   *Richard Levitte*\n\n * Added new option for 'openssl list', '-objects', which will display the\n   list of built in objects, i.e. OIDs with names.\n\n   *Richard Levitte*\n\n * Added the options `-crl_lastupdate` and `-crl_nextupdate` to `openssl ca`,\n   allowing the `lastUpdate` and `nextUpdate` fields in the generated CRL to\n   be set explicitly.\n\n   *Chris Novakovic*\n\n * Added support for Linux Kernel TLS data-path. The Linux Kernel data-path\n   improves application performance by removing data copies and providing\n   applications with zero-copy system calls such as sendfile and splice.\n\n   *Boris Pismenny*\n\n * The SSL option SSL_OP_CLEANSE_PLAINTEXT is introduced.\n\n   *Martin Elshuber*\n\n * `PKCS12_parse` now maintains the order of the parsed certificates\n   when outputting them via `*ca` (rather than reversing it).\n\n   *David von Oheimb*\n\n * Deprecated pthread fork support methods.\n\n   *Randall S. Becker*\n\n * Added support for FFDHE key exchange in TLS 1.3.\n\n   *Raja Ashok*\n\n * Added a new concept for OpenSSL plugability: providers.  This\n   functionality is designed to replace the ENGINE API and ENGINE\n   implementations, and to be much more dynamic, allowing provider\n   authors to introduce new algorithms among other things, as long as\n   there's an API that supports the algorithm type.\n\n   With this concept comes a new core API for interaction between\n   libcrypto and provider implementations.  Public libcrypto functions\n   that want to use providers do so through this core API.\n\n   The main documentation for this core API is found in\n   doc/man7/provider.pod, doc/man7/provider-base.pod, and they in turn\n   refer to other manuals describing the API specific for supported\n   algorithm types (also called operations).\n\n   *The OpenSSL team*\n\nOpenSSL 1.1.1\n-------------\n\n### Changes between 1.1.1m and 1.1.1n [xx XXX xxxx]\n\n### Changes between 1.1.1l and 1.1.1m [14 Dec 2021]\n\n * Avoid loading of a dynamic engine twice.\n\n   *Bernd Edlinger*\n\n * Prioritise DANE TLSA issuer certs over peer certs\n\n   *Viktor Dukhovni*\n\n * Fixed random API for MacOS prior to 10.12\n\n   These MacOS versions don't support the CommonCrypto APIs\n\n   *Lenny Primak*\n\n### Changes between 1.1.1k and 1.1.1l [24 Aug 2021]\n\n * Fixed an SM2 Decryption Buffer Overflow.\n\n   In order to decrypt SM2 encrypted data an application is expected to\n   call the API function EVP_PKEY_decrypt(). Typically an application will\n   call this function twice. The first time, on entry, the \"out\" parameter\n   can be NULL and, on exit, the \"outlen\" parameter is populated with the\n   buffer size required to hold the decrypted plaintext. The application\n   can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt()\n   again, but this time passing a non-NULL value for the \"out\" parameter.\n\n   A bug in the implementation of the SM2 decryption code means that the\n   calculation of the buffer size required to hold the plaintext returned\n   by the first call to EVP_PKEY_decrypt() can be smaller than the actual\n   size required by the second call. This can lead to a buffer overflow\n   when EVP_PKEY_decrypt() is called by the application a second time with\n   a buffer that is too small.\n\n   A malicious attacker who is able present SM2 content for decryption to\n   an application could cause attacker chosen data to overflow the buffer\n   by up to a maximum of 62 bytes altering the contents of other data held\n   after the buffer, possibly changing application behaviour or causing\n   the application to crash. The location of the buffer is application\n   dependent but is typically heap allocated.\n   ([CVE-2021-3711])\n\n   *Matt Caswell*\n\n * Fixed various read buffer overruns processing ASN.1 strings\n\n   ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING\n   structure which contains a buffer holding the string data and a field\n   holding the buffer length. This contrasts with normal C strings which\n   are represented as a buffer for the string data which is terminated\n   with a NUL (0) byte.\n\n   Although not a strict requirement, ASN.1 strings that are parsed using\n   OpenSSL's own \"d2i\" functions (and other similar parsing functions) as\n   well as any string whose value has been set with the ASN1_STRING_set()\n   function will additionally NUL terminate the byte array in the\n   ASN1_STRING structure.\n\n   However, it is possible for applications to directly construct valid\n   ASN1_STRING structures which do not NUL terminate the byte array by\n   directly setting the \"data\" and \"length\" fields in the ASN1_STRING\n   array. This can also happen by using the ASN1_STRING_set0() function.\n\n   Numerous OpenSSL functions that print ASN.1 data have been found to\n   assume that the ASN1_STRING byte array will be NUL terminated, even\n   though this is not guaranteed for strings that have been directly\n   constructed. Where an application requests an ASN.1 structure to be\n   printed, and where that ASN.1 structure contains ASN1_STRINGs that have\n   been directly constructed by the application without NUL terminating\n   the \"data\" field, then a read buffer overrun can occur.\n\n   The same thing can also occur during name constraints processing\n   of certificates (for example if a certificate has been directly\n   constructed by the application instead of loading it via the OpenSSL\n   parsing functions, and the certificate contains non NUL terminated\n   ASN1_STRING structures). It can also occur in the X509_get1_email(),\n   X509_REQ_get1_email() and X509_get1_ocsp() functions.\n\n   If a malicious actor can cause an application to directly construct an\n   ASN1_STRING and then process it through one of the affected OpenSSL\n   functions then this issue could be hit. This might result in a crash\n   (causing a Denial of Service attack). It could also result in the\n   disclosure of private memory contents (such as private keys, or\n   sensitive plaintext).\n   ([CVE-2021-3712])\n\n   *Matt Caswell*\n\n### Changes between 1.1.1j and 1.1.1k [25 Mar 2021]\n\n * Fixed a problem with verifying a certificate chain when using the\n   X509_V_FLAG_X509_STRICT flag. This flag enables additional security checks of\n   the certificates present in a certificate chain. It is not set by default.\n\n   Starting from OpenSSL version 1.1.1h a check to disallow certificates in\n   the chain that have explicitly encoded elliptic curve parameters was added\n   as an additional strict check.\n\n   An error in the implementation of this check meant that the result of a\n   previous check to confirm that certificates in the chain are valid CA\n   certificates was overwritten. This effectively bypasses the check\n   that non-CA certificates must not be able to issue other certificates.\n\n   If a \"purpose\" has been configured then there is a subsequent opportunity\n   for checks that the certificate is a valid CA.  All of the named \"purpose\"\n   values implemented in libcrypto perform this check.  Therefore, where\n   a purpose is set the certificate chain will still be rejected even when the\n   strict flag has been used. A purpose is set by default in libssl client and\n   server certificate verification routines, but it can be overridden or\n   removed by an application.\n\n   In order to be affected, an application must explicitly set the\n   X509_V_FLAG_X509_STRICT verification flag and either not set a purpose\n   for the certificate verification or, in the case of TLS client or server\n   applications, override the default purpose.\n   ([CVE-2021-3450])\n\n   *Tomáš Mráz*\n\n * Fixed an issue where an OpenSSL TLS server may crash if sent a maliciously\n   crafted renegotiation ClientHello message from a client. If a TLSv1.2\n   renegotiation ClientHello omits the signature_algorithms extension (where it\n   was present in the initial ClientHello), but includes a\n   signature_algorithms_cert extension then a NULL pointer dereference will\n   result, leading to a crash and a denial of service attack.\n\n   A server is only vulnerable if it has TLSv1.2 and renegotiation enabled\n   (which is the default configuration). OpenSSL TLS clients are not impacted by\n   this issue.\n   ([CVE-2021-3449])\n\n   *Peter Kästle and Samuel Sapalski*\n\n### Changes between 1.1.1i and 1.1.1j [16 Feb 2021]\n\n * Fixed the X509_issuer_and_serial_hash() function. It attempts to\n   create a unique hash value based on the issuer and serial number data\n   contained within an X509 certificate. However, it was failing to correctly\n   handle any errors that may occur while parsing the issuer field (which might\n   occur if the issuer field is maliciously constructed). This may subsequently\n   result in a NULL pointer deref and a crash leading to a potential denial of\n   service attack.\n   ([CVE-2021-23841])\n\n   *Matt Caswell*\n\n * Fixed the RSA_padding_check_SSLv23() function and the RSA_SSLV23_PADDING\n   padding mode to correctly check for rollback attacks. This is considered a\n   bug in OpenSSL 1.1.1 because it does not support SSLv2. In 1.0.2 this is\n   CVE-2021-23839.\n\n   *Matt Caswell*\n\n   Fixed the EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate\n   functions. Previously they could overflow the output length argument in some\n   cases where the input length is close to the maximum permissible length for\n   an integer on the platform. In such cases the return value from the function\n   call would be 1 (indicating success), but the output length value would be\n   negative. This could cause applications to behave incorrectly or crash.\n   ([CVE-2021-23840])\n\n   *Matt Caswell*\n\n * Fixed SRP_Calc_client_key so that it runs in constant time. The previous\n   implementation called BN_mod_exp without setting BN_FLG_CONSTTIME. This\n   could be exploited in a side channel attack to recover the password. Since\n   the attack is local host only this is outside of the current OpenSSL\n   threat model and therefore no CVE is assigned.\n\n   Thanks to Mohammed Sabt and Daniel De Almeida Braga for reporting this\n   issue.\n\n   *Matt Caswell*\n\n### Changes between 1.1.1h and 1.1.1i [8 Dec 2020]\n\n * Fixed NULL pointer deref in the GENERAL_NAME_cmp function\n   This function could crash if both GENERAL_NAMEs contain an EDIPARTYNAME.\n    If an attacker can control both items being compared  then this could lead\n    to a possible denial of service attack. OpenSSL itself uses the\n    GENERAL_NAME_cmp function for two purposes:\n    1) Comparing CRL distribution point names between an available CRL and a\n       CRL distribution point embedded in an X509 certificate\n    2) When verifying that a timestamp response token signer matches the\n       timestamp authority name (exposed via the API functions\n       TS_RESP_verify_response and TS_RESP_verify_token)\n   ([CVE-2020-1971])\n\n   *Matt Caswell*\n\n### Changes between 1.1.1g and 1.1.1h [22 Sep 2020]\n\n * Certificates with explicit curve parameters are now disallowed in\n   verification chains if the X509_V_FLAG_X509_STRICT flag is used.\n\n   *Tomáš Mráz*\n\n * The 'MinProtocol' and 'MaxProtocol' configuration commands now silently\n   ignore TLS protocol version bounds when configuring DTLS-based contexts, and\n   conversely, silently ignore DTLS protocol version bounds when configuring\n   TLS-based contexts.  The commands can be repeated to set bounds of both\n   types.  The same applies with the corresponding \"min_protocol\" and\n   \"max_protocol\" command-line switches, in case some application uses both TLS\n   and DTLS.\n\n   SSL_CTX instances that are created for a fixed protocol version (e.g.\n   TLSv1_server_method()) also silently ignore version bounds.  Previously\n   attempts to apply bounds to these protocol versions would result in an\n   error.  Now only the \"version-flexible\" SSL_CTX instances are subject to\n   limits in configuration files in command-line options.\n\n   *Viktor Dukhovni*\n\n * Handshake now fails if Extended Master Secret extension is dropped\n   on renegotiation.\n\n   *Tomáš Mráz*\n\n * The Oracle Developer Studio compiler will start reporting deprecated APIs\n\n### Changes between 1.1.1f and 1.1.1g [21 Apr 2020]\n\n * Fixed segmentation fault in SSL_check_chain()\n   Server or client applications that call the SSL_check_chain() function\n   during or after a TLS 1.3 handshake may crash due to a NULL pointer\n   dereference as a result of incorrect handling of the\n   \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid\n   or unrecognised signature algorithm is received from the peer. This could\n   be exploited by a malicious peer in a Denial of Service attack.\n   ([CVE-2020-1967])\n\n   *Benjamin Kaduk*\n\n * Added AES consttime code for no-asm configurations\n   an optional constant time support for AES was added\n   when building openssl for no-asm.\n   Enable with: ./config no-asm -DOPENSSL_AES_CONST_TIME\n   Disable with: ./config no-asm -DOPENSSL_NO_AES_CONST_TIME\n   At this time this feature is by default disabled.\n   It will be enabled by default in 3.0.\n\n   *Bernd Edlinger*\n\n### Changes between 1.1.1e and 1.1.1f [31 Mar 2020]\n\n * Revert the change of EOF detection while reading in libssl to avoid\n   regressions in applications depending on the current way of reporting\n   the EOF. As the existing method is not fully accurate the change to\n   reporting the EOF via SSL_ERROR_SSL is kept on the current development\n   branch and will be present in the 3.0 release.\n\n   *Tomáš Mráz*\n\n * Revised BN_generate_prime_ex to not avoid factors 3..17863 in p-1\n   when primes for RSA keys are computed.\n   Since we previously always generated primes == 2 (mod 3) for RSA keys,\n   the 2-prime and 3-prime RSA modules were easy to distinguish, since\n   N = p*q = 1 (mod 3), but N = p*q*r = 2 (mod 3). Therefore, fingerprinting\n   2-prime vs. 3-prime RSA keys was possible by computing N mod 3.\n   This avoids possible fingerprinting of newly generated RSA modules.\n\n   *Bernd Edlinger*\n\n### Changes between 1.1.1d and 1.1.1e [17 Mar 2020]\n\n * Properly detect EOF while reading in libssl. Previously if we hit an EOF\n   while reading in libssl then we would report an error back to the\n   application (SSL_ERROR_SYSCALL) but errno would be 0. We now add\n   an error to the stack (which means we instead return SSL_ERROR_SSL) and\n   therefore give a hint as to what went wrong.\n\n   *Matt Caswell*\n\n * Check that ed25519 and ed448 are allowed by the security level. Previously\n   signature algorithms not using an MD were not being checked that they were\n   allowed by the security level.\n\n   *Kurt Roeckx*\n\n * Fixed SSL_get_servername() behaviour. The behaviour of SSL_get_servername()\n   was not quite right. The behaviour was not consistent between resumption\n   and normal handshakes, and also not quite consistent with historical\n   behaviour. The behaviour in various scenarios has been clarified and\n   it has been updated to make it match historical behaviour as closely as\n   possible.\n\n   *Matt Caswell*\n\n * *[VMS only]* The header files that the VMS compilers include automatically,\n   `__DECC_INCLUDE_PROLOGUE.H` and `__DECC_INCLUDE_EPILOGUE.H`, use pragmas\n   that the C++ compiler doesn't understand.  This is a shortcoming in the\n   compiler, but can be worked around with `__cplusplus` guards.\n\n   C++ applications that use OpenSSL libraries must be compiled using the\n   qualifier `/NAMES=(AS_IS,SHORTENED)` to be able to use all the OpenSSL\n   functions.  Otherwise, only functions with symbols of less than 31\n   characters can be used, as the linker will not be able to successfully\n   resolve symbols with longer names.\n\n   *Richard Levitte*\n\n * Added a new method to gather entropy on VMS, based on SYS$GET_ENTROPY.\n   The presence of this system service is determined at run-time.\n\n   *Richard Levitte*\n\n * Print all values for a PKCS#12 attribute with 'openssl pkcs12', not just\n   the first value.\n\n   *Jon Spillett*\n\n### Changes between 1.1.1c and 1.1.1d [10 Sep 2019]\n\n * Fixed a fork protection issue. OpenSSL 1.1.1 introduced a rewritten random\n   number generator (RNG). This was intended to include protection in the\n   event of a fork() system call in order to ensure that the parent and child\n   processes did not share the same RNG state. However, this protection was not\n   being used in the default case.\n\n   A partial mitigation for this issue is that the output from a high\n   precision timer is mixed into the RNG state so the likelihood of a parent\n   and child process sharing state is significantly reduced.\n\n   If an application already calls OPENSSL_init_crypto() explicitly using\n   OPENSSL_INIT_ATFORK then this problem does not occur at all.\n   ([CVE-2019-1549])\n\n   *Matthias St. Pierre*\n\n * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n   used even when parsing explicit parameters, when loading a encoded key\n   or calling `EC_GROUP_new_from_ecpkparameters()`/\n   `EC_GROUP_new_from_ecparameters()`.\n   This prevents bypass of security hardening and performance gains,\n   especially for curves with specialized EC_METHODs.\n   By default, if a key encoded with explicit parameters is loaded and later\n   encoded, the output is still encoded with explicit parameters, even if\n   internally a \"named\" EC_GROUP is used for computation.\n\n   *Nicola Tuveri*\n\n * Compute ECC cofactors if not provided during EC_GROUP construction. Before\n   this change, EC_GROUP_set_generator would accept order and/or cofactor as\n   NULL. After this change, only the cofactor parameter can be NULL. It also\n   does some minimal sanity checks on the passed order.\n   ([CVE-2019-1547])\n\n   *Billy Bob Brumley*\n\n * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey.\n   An attack is simple, if the first CMS_recipientInfo is valid but the\n   second CMS_recipientInfo is chosen ciphertext. If the second\n   recipientInfo decodes to PKCS #1 v1.5 form plaintext, the correct\n   encryption key will be replaced by garbage, and the message cannot be\n   decoded, but if the RSA decryption fails, the correct encryption key is\n   used and the recipient will not notice the attack.\n   As a work around for this potential attack the length of the decrypted\n   key must be equal to the cipher default key length, in case the\n   certificate is not given and all recipientInfo are tried out.\n   The old behaviour can be re-enabled in the CMS code by setting the\n   CMS_DEBUG_DECRYPT flag.\n   ([CVE-2019-1563])\n\n   *Bernd Edlinger*\n\n * Early start up entropy quality from the DEVRANDOM seed source has been\n   improved for older Linux systems.  The RAND subsystem will wait for\n   /dev/random to be producing output before seeding from /dev/urandom.\n   The seeded state is stored for future library initialisations using\n   a system global shared memory segment.  The shared memory identifier\n   can be configured by defining OPENSSL_RAND_SEED_DEVRANDOM_SHM_ID to\n   the desired value.  The default identifier is 114.\n\n   *Paul Dale*\n\n * Correct the extended master secret constant on EBCDIC systems. Without this\n   fix TLS connections between an EBCDIC system and a non-EBCDIC system that\n   negotiate EMS will fail. Unfortunately this also means that TLS connections\n   between EBCDIC systems with this fix, and EBCDIC systems without this\n   fix will fail if they negotiate EMS.\n\n   *Matt Caswell*\n\n * Use Windows installation paths in the mingw builds\n\n   Mingw isn't a POSIX environment per se, which means that Windows\n   paths should be used for installation.\n   ([CVE-2019-1552])\n\n   *Richard Levitte*\n\n * Changed DH_check to accept parameters with order q and 2q subgroups.\n   With order 2q subgroups the bit 0 of the private key is not secret\n   but DH_generate_key works around that by clearing bit 0 of the\n   private key for those. This avoids leaking bit 0 of the private key.\n\n   *Bernd Edlinger*\n\n * Significantly reduce secure memory usage by the randomness pools.\n\n   *Paul Dale*\n\n * Revert the DEVRANDOM_WAIT feature for Linux systems\n\n   The DEVRANDOM_WAIT feature added a select() call to wait for the\n   /dev/random device to become readable before reading from the\n   /dev/urandom device.\n\n   It turned out that this change had negative side effects on\n   performance which were not acceptable. After some discussion it\n   was decided to revert this feature and leave it up to the OS\n   resp. the platform maintainer to ensure a proper initialization\n   during early boot time.\n\n   *Matthias St. Pierre*\n\n### Changes between 1.1.1b and 1.1.1c [28 May 2019]\n\n * Add build tests for C++.  These are generated files that only do one\n   thing, to include one public OpenSSL head file each.  This tests that\n   the public header files can be usefully included in a C++ application.\n\n   This test isn't enabled by default.  It can be enabled with the option\n   'enable-buildtest-c++'.\n\n   *Richard Levitte*\n\n * Enable SHA3 pre-hashing for ECDSA and DSA.\n\n   *Patrick Steuer*\n\n * Change the default RSA, DSA and DH size to 2048 bit instead of 1024.\n   This changes the size when using the `genpkey` command when no size is given.\n   It fixes an omission in earlier changes that changed all RSA, DSA and DH\n   generation commands to use 2048 bits by default.\n\n   *Kurt Roeckx*\n\n * Reorganize the manual pages to consistently have RETURN VALUES,\n   EXAMPLES, SEE ALSO and HISTORY come in that order, and adjust\n   util/fix-doc-nits accordingly.\n\n   *Paul Yang, Joshua Lock*\n\n * Add the missing accessor EVP_PKEY_get0_engine()\n\n   *Matt Caswell*\n\n * Have commands like `s_client` and `s_server` output the signature scheme\n   along with other cipher suite parameters when debugging.\n\n   *Lorinczy Zsigmond*\n\n * Make OPENSSL_config() error agnostic again.\n\n   *Richard Levitte*\n\n * Do the error handling in RSA decryption constant time.\n\n   *Bernd Edlinger*\n\n * Prevent over long nonces in ChaCha20-Poly1305.\n\n   ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input\n   for every encryption operation. RFC 7539 specifies that the nonce value\n   (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length\n   and front pads the nonce with 0 bytes if it is less than 12\n   bytes. However it also incorrectly allows a nonce to be set of up to 16\n   bytes. In this case only the last 12 bytes are significant and any\n   additional leading bytes are ignored.\n\n   It is a requirement of using this cipher that nonce values are\n   unique. Messages encrypted using a reused nonce value are susceptible to\n   serious confidentiality and integrity attacks. If an application changes\n   the default nonce length to be longer than 12 bytes and then makes a\n   change to the leading bytes of the nonce expecting the new value to be a\n   new unique nonce then such an application could inadvertently encrypt\n   messages with a reused nonce.\n\n   Additionally the ignored bytes in a long nonce are not covered by the\n   integrity guarantee of this cipher. Any application that relies on the\n   integrity of these ignored leading bytes of a long nonce may be further\n   affected. Any OpenSSL internal use of this cipher, including in SSL/TLS,\n   is safe because no such use sets such a long nonce value. However user\n   applications that use this cipher directly and set a non-default nonce\n   length to be longer than 12 bytes may be vulnerable.\n\n   This issue was reported to OpenSSL on 16th of March 2019 by Joran Dirk\n   Greef of Ronomon.\n   ([CVE-2019-1543])\n\n   *Matt Caswell*\n\n * Add DEVRANDOM_WAIT feature for Linux systems\n\n   On older Linux systems where the getrandom() system call is not available,\n   OpenSSL normally uses the /dev/urandom device for seeding its CSPRNG.\n   Contrary to getrandom(), the /dev/urandom device will not block during\n   early boot when the kernel CSPRNG has not been seeded yet.\n\n   To mitigate this known weakness, use select() to wait for /dev/random to\n   become readable before reading from /dev/urandom.\n\n * Ensure that SM2 only uses SM3 as digest algorithm\n\n   *Paul Yang*\n\n### Changes between 1.1.1a and 1.1.1b [26 Feb 2019]\n\n * Change the info callback signals for the start and end of a post-handshake\n   message exchange in TLSv1.3. In 1.1.1/1.1.1a we used SSL_CB_HANDSHAKE_START\n   and SSL_CB_HANDSHAKE_DONE. Experience has shown that many applications get\n   confused by this and assume that a TLSv1.2 renegotiation has started. This\n   can break KeyUpdate handling. Instead we no longer signal the start and end\n   of a post handshake message exchange (although the messages themselves are\n   still signalled). This could break some applications that were expecting\n   the old signals. However without this KeyUpdate is not usable for many\n   applications.\n\n   *Matt Caswell*\n\n### Changes between 1.1.1 and 1.1.1a [20 Nov 2018]\n\n * Timing vulnerability in DSA signature generation\n\n   The OpenSSL DSA signature algorithm has been shown to be vulnerable to a\n   timing side channel attack. An attacker could use variations in the signing\n   algorithm to recover the private key.\n\n   This issue was reported to OpenSSL on 16th October 2018 by Samuel Weiser.\n   ([CVE-2018-0734])\n\n   *Paul Dale*\n\n * Timing vulnerability in ECDSA signature generation\n\n   The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a\n   timing side channel attack. An attacker could use variations in the signing\n   algorithm to recover the private key.\n\n   This issue was reported to OpenSSL on 25th October 2018 by Samuel Weiser.\n   ([CVE-2018-0735])\n\n   *Paul Dale*\n\n * Fixed the issue that RAND_add()/RAND_seed() silently discards random input\n   if its length exceeds 4096 bytes. The limit has been raised to a buffer size\n   of two gigabytes and the error handling improved.\n\n   This issue was reported to OpenSSL by Dr. Falko Strenzke. It has been\n   categorized as a normal bug, not a security issue, because the DRBG reseeds\n   automatically and is fully functional even without additional randomness\n   provided by the application.\n\n### Changes between 1.1.0i and 1.1.1 [11 Sep 2018]\n\n * Add a new ClientHello callback. Provides a callback interface that gives\n   the application the ability to adjust the nascent SSL object at the\n   earliest stage of ClientHello processing, immediately after extensions have\n   been collected but before they have been processed. In particular, this\n   callback can adjust the supported TLS versions in response to the contents\n   of the ClientHello\n\n   *Benjamin Kaduk*\n\n * Add SM2 base algorithm support.\n\n   *Jack Lloyd*\n\n * s390x assembly pack: add (improved) hardware-support for the following\n   cryptographic primitives: sha3, shake, aes-gcm, aes-ccm, aes-ctr, aes-ofb,\n   aes-cfb/cfb8, aes-ecb.\n\n   *Patrick Steuer*\n\n * Make EVP_PKEY_asn1_new() a bit stricter about its input.  A NULL pem_str\n   parameter is no longer accepted, as it leads to a corrupt table.  NULL\n   pem_str is reserved for alias entries only.\n\n   *Richard Levitte*\n\n * Use the new ec_scalar_mul_ladder scaffold to implement a specialized ladder\n   step for prime curves. The new implementation is based on formulae from\n   differential addition-and-doubling in homogeneous projective coordinates\n   from Izu-Takagi \"A fast parallel elliptic curve multiplication resistant\n   against side channel attacks\" and Brier-Joye \"Weierstrass Elliptic Curves\n   and Side-Channel Attacks\" Eq. (8) for y-coordinate recovery, modified\n   to work in projective coordinates.\n\n   *Billy Bob Brumley, Nicola Tuveri*\n\n * Change generating and checking of primes so that the error rate of not\n   being prime depends on the intended use based on the size of the input.\n   For larger primes this will result in more rounds of Miller-Rabin.\n   The maximal error rate for primes with more than 1080 bits is lowered\n   to 2^-128.\n\n   *Kurt Roeckx, Annie Yousar*\n\n * Increase the number of Miller-Rabin rounds for DSA key generating to 64.\n\n   *Kurt Roeckx*\n\n * The 'tsget' script is renamed to 'tsget.pl', to avoid confusion when\n   moving between systems, and to avoid confusion when a Windows build is\n   done with mingw vs with MSVC.  For POSIX installs, there's still a\n   symlink or copy named 'tsget' to avoid that confusion as well.\n\n   *Richard Levitte*\n\n * Revert blinding in ECDSA sign and instead make problematic addition\n   length-invariant. Switch even to fixed-length Montgomery multiplication.\n\n   *Andy Polyakov*\n\n * Use the new ec_scalar_mul_ladder scaffold to implement a specialized ladder\n   step for binary curves. The new implementation is based on formulae from\n   differential addition-and-doubling in mixed Lopez-Dahab projective\n   coordinates, modified to independently blind the operands.\n\n   *Billy Bob Brumley, Sohaib ul Hassan, Nicola Tuveri*\n\n * Add a scaffold to optionally enhance the Montgomery ladder implementation\n   for `ec_scalar_mul_ladder` (formerly `ec_mul_consttime`) allowing\n   EC_METHODs to implement their own specialized \"ladder step\", to take\n   advantage of more favorable coordinate systems or more efficient\n   differential addition-and-doubling algorithms.\n\n   *Billy Bob Brumley, Sohaib ul Hassan, Nicola Tuveri*\n\n * Modified the random device based seed sources to keep the relevant\n   file descriptors open rather than reopening them on each access.\n   This allows such sources to operate in a chroot() jail without\n   the associated device nodes being available. This behaviour can be\n   controlled using RAND_keep_random_devices_open().\n\n   *Paul Dale*\n\n * Numerous side-channel attack mitigations have been applied. This may have\n   performance impacts for some algorithms for the benefit of improved\n   security. Specific changes are noted in this change log by their respective\n   authors.\n\n   *Matt Caswell*\n\n * AIX shared library support overhaul. Switch to AIX \"natural\" way of\n   handling shared libraries, which means collecting shared objects of\n   different versions and bitnesses in one common archive. This allows to\n   mitigate conflict between 1.0 and 1.1 side-by-side installations. It\n   doesn't affect the way 3rd party applications are linked, only how\n   multi-version installation is managed.\n\n   *Andy Polyakov*\n\n * Make ec_group_do_inverse_ord() more robust and available to other\n   EC cryptosystems, so that irrespective of BN_FLG_CONSTTIME, SCA\n   mitigations are applied to the fallback BN_mod_inverse().\n   When using this function rather than BN_mod_inverse() directly, new\n   EC cryptosystem implementations are then safer-by-default.\n\n   *Billy Bob Brumley*\n\n * Add coordinate blinding for EC_POINT and implement projective\n   coordinate blinding for generic prime curves as a countermeasure to\n   chosen point SCA attacks.\n\n   *Sohaib ul Hassan, Nicola Tuveri, Billy Bob Brumley*\n\n * Add blinding to ECDSA and DSA signatures to protect against side channel\n   attacks discovered by Keegan Ryan (NCC Group).\n\n   *Matt Caswell*\n\n * Enforce checking in the `pkeyutl` command to ensure that the input\n   length does not exceed the maximum supported digest length when performing\n   a sign, verify or verifyrecover operation.\n\n   *Matt Caswell*\n\n * SSL_MODE_AUTO_RETRY is enabled by default. Applications that use blocking\n   I/O in combination with something like select() or poll() will hang. This\n   can be turned off again using SSL_CTX_clear_mode().\n   Many applications do not properly handle non-application data records, and\n   TLS 1.3 sends more of such records. Setting SSL_MODE_AUTO_RETRY works\n   around the problems in those applications, but can also break some.\n   It's recommended to read the manpages about SSL_read(), SSL_write(),\n   SSL_get_error(), SSL_shutdown(), SSL_CTX_set_mode() and\n   SSL_CTX_set_read_ahead() again.\n\n   *Kurt Roeckx*\n\n * When unlocking a pass phrase protected PEM file or PKCS#8 container, we\n   now allow empty (zero character) pass phrases.\n\n   *Richard Levitte*\n\n * Apply blinding to binary field modular inversion and remove patent\n   pending (OPENSSL_SUN_GF2M_DIV) BN_GF2m_mod_div implementation.\n\n   *Billy Bob Brumley*\n\n * Deprecate ec2_mult.c and unify scalar multiplication code paths for\n   binary and prime elliptic curves.\n\n   *Billy Bob Brumley*\n\n * Remove ECDSA nonce padding: EC_POINT_mul is now responsible for\n   constant time fixed point multiplication.\n\n   *Billy Bob Brumley*\n\n * Revise elliptic curve scalar multiplication with timing attack\n   defenses: ec_wNAF_mul redirects to a constant time implementation\n   when computing fixed point and variable point multiplication (which\n   in OpenSSL are mostly used with secret scalars in keygen, sign,\n   ECDH derive operations).\n   *Billy Bob Brumley, Nicola Tuveri, Cesar Pereida García,\n    Sohaib ul Hassan*\n\n * Updated CONTRIBUTING\n\n   *Rich Salz*\n\n * Updated DRBG / RAND to request nonce and additional low entropy\n   randomness from the system.\n\n   *Matthias St. Pierre*\n\n * Updated 'openssl rehash' to use OpenSSL consistent default.\n\n   *Richard Levitte*\n\n * Moved the load of the ssl_conf module to libcrypto, which helps\n   loading engines that libssl uses before libssl is initialised.\n\n   *Matt Caswell*\n\n * Added EVP_PKEY_sign() and EVP_PKEY_verify() for EdDSA\n\n   *Matt Caswell*\n\n * Fixed X509_NAME_ENTRY_set to get multi-valued RDNs right in all cases.\n\n   *Ingo Schwarze, Rich Salz*\n\n * Added output of accepting IP address and port for 'openssl s_server'\n\n   *Richard Levitte*\n\n * Added a new API for TLSv1.3 ciphersuites:\n      SSL_CTX_set_ciphersuites()\n      SSL_set_ciphersuites()\n\n   *Matt Caswell*\n\n * Memory allocation failures consistently add an error to the error\n   stack.\n\n   *Rich Salz*\n\n * Don't use OPENSSL_ENGINES and OPENSSL_CONF environment values\n   in libcrypto when run as setuid/setgid.\n\n   *Bernd Edlinger*\n\n * Load any config file by default when libssl is used.\n\n   *Matt Caswell*\n\n * Added new public header file <openssl/rand_drbg.h> and documentation\n   for the RAND_DRBG API. See manual page RAND_DRBG(7) for an overview.\n\n   *Matthias St. Pierre*\n\n * QNX support removed (cannot find contributors to get their approval\n   for the license change).\n\n   *Rich Salz*\n\n * TLSv1.3 replay protection for early data has been implemented. See the\n   SSL_read_early_data() man page for further details.\n\n   *Matt Caswell*\n\n * Separated TLSv1.3 ciphersuite configuration out from TLSv1.2 ciphersuite\n   configuration. TLSv1.3 ciphersuites are not compatible with TLSv1.2 and\n   below. Similarly TLSv1.2 ciphersuites are not compatible with TLSv1.3.\n   In order to avoid issues where legacy TLSv1.2 ciphersuite configuration\n   would otherwise inadvertently disable all TLSv1.3 ciphersuites the\n   configuration has been separated out. See the ciphers man page or the\n   SSL_CTX_set_ciphersuites() man page for more information.\n\n   *Matt Caswell*\n\n * On POSIX (BSD, Linux, ...) systems the ocsp(1) command running\n   in responder mode now supports the new \"-multi\" option, which\n   spawns the specified number of child processes to handle OCSP\n   requests.  The \"-timeout\" option now also limits the OCSP\n   responder's patience to wait to receive the full client request\n   on a newly accepted connection. Child processes are respawned\n   as needed, and the CA index file is automatically reloaded\n   when changed.  This makes it possible to run the \"ocsp\" responder\n   as a long-running service, making the OpenSSL CA somewhat more\n   feature-complete.  In this mode, most diagnostic messages logged\n   after entering the event loop are logged via syslog(3) rather than\n   written to stderr.\n\n   *Viktor Dukhovni*\n\n * Added support for X448 and Ed448. Heavily based on original work by\n   Mike Hamburg.\n\n   *Matt Caswell*\n\n * Extend OSSL_STORE with capabilities to search and to narrow the set of\n   objects loaded.  This adds the functions OSSL_STORE_expect() and\n   OSSL_STORE_find() as well as needed tools to construct searches and\n   get the search data out of them.\n\n   *Richard Levitte*\n\n * Support for TLSv1.3 added. Note that users upgrading from an earlier\n   version of OpenSSL should review their configuration settings to ensure\n   that they are still appropriate for TLSv1.3. For further information see:\n   <https://wiki.openssl.org/index.php/TLS1.3>\n\n   *Matt Caswell*\n\n * Grand redesign of the OpenSSL random generator\n\n   The default RAND method now utilizes an AES-CTR DRBG according to\n   NIST standard SP 800-90Ar1. The new random generator is essentially\n   a port of the default random generator from the OpenSSL FIPS 2.0\n   object module. It is a hybrid deterministic random bit generator\n   using an AES-CTR bit stream and which seeds and reseeds itself\n   automatically using trusted system entropy sources.\n\n   Some of its new features are:\n    - Support for multiple DRBG instances with seed chaining.\n    - The default RAND method makes use of a DRBG.\n    - There is a public and private DRBG instance.\n    - The DRBG instances are fork-safe.\n    - Keep all global DRBG instances on the secure heap if it is enabled.\n    - The public and private DRBG instance are per thread for lock free\n      operation\n\n   *Paul Dale, Benjamin Kaduk, Kurt Roeckx, Rich Salz, Matthias St. Pierre*\n\n * Changed Configure so it only says what it does and doesn't dump\n   so much data.  Instead, ./configdata.pm should be used as a script\n   to display all sorts of configuration data.\n\n   *Richard Levitte*\n\n * Added processing of \"make variables\" to Configure.\n\n   *Richard Levitte*\n\n * Added SHA512/224 and SHA512/256 algorithm support.\n\n   *Paul Dale*\n\n * The last traces of Netware support, first removed in 1.1.0, have\n   now been removed.\n\n   *Rich Salz*\n\n * Get rid of Makefile.shared, and in the process, make the processing\n   of certain files (rc.obj, or the .def/.map/.opt files produced from\n   the ordinal files) more visible and hopefully easier to trace and\n   debug (or make silent).\n\n   *Richard Levitte*\n\n * Make it possible to have environment variable assignments as\n   arguments to config / Configure.\n\n   *Richard Levitte*\n\n * Add multi-prime RSA (RFC 8017) support.\n\n   *Paul Yang*\n\n * Add SM3 implemented according to GB/T 32905-2016\n   *Jack Lloyd <jack.lloyd@ribose.com>,*\n   *Ronald Tse <ronald.tse@ribose.com>,*\n   *Erick Borsboom <erick.borsboom@ribose.com>*\n\n * Add 'Maximum Fragment Length' TLS extension negotiation and support\n   as documented in RFC6066.\n   Based on a patch from Tomasz Moń\n\n   *Filipe Raimundo da Silva*\n\n * Add SM4 implemented according to GB/T 32907-2016.\n   *Jack Lloyd <jack.lloyd@ribose.com>,*\n   *Ronald Tse <ronald.tse@ribose.com>,*\n   *Erick Borsboom <erick.borsboom@ribose.com>*\n\n * Reimplement -newreq-nodes and ERR_error_string_n; the\n   original author does not agree with the license change.\n\n   *Rich Salz*\n\n * Add ARIA AEAD TLS support.\n\n   *Jon Spillett*\n\n * Some macro definitions to support VS6 have been removed.  Visual\n   Studio 6 has not worked since 1.1.0\n\n   *Rich Salz*\n\n * Add ERR_clear_last_mark(), to allow callers to clear the last mark\n   without clearing the errors.\n\n   *Richard Levitte*\n\n * Add \"atfork\" functions.  If building on a system that without\n   pthreads, see doc/man3/OPENSSL_fork_prepare.pod for application\n   requirements.  The RAND facility now uses/requires this.\n\n   *Rich Salz*\n\n * Add SHA3.\n\n   *Andy Polyakov*\n\n * The UI API becomes a permanent and integral part of libcrypto, i.e.\n   not possible to disable entirely.  However, it's still possible to\n   disable the console reading UI method, UI_OpenSSL() (use UI_null()\n   as a fallback).\n\n   To disable, configure with 'no-ui-console'.  'no-ui' is still\n   possible to use as an alias.  Check at compile time with the\n   macro OPENSSL_NO_UI_CONSOLE.  The macro OPENSSL_NO_UI is still\n   possible to check and is an alias for OPENSSL_NO_UI_CONSOLE.\n\n   *Richard Levitte*\n\n * Add a STORE module, which implements a uniform and URI based reader of\n   stores that can contain keys, certificates, CRLs and numerous other\n   objects.  The main API is loosely based on a few stdio functions,\n   and includes OSSL_STORE_open, OSSL_STORE_load, OSSL_STORE_eof,\n   OSSL_STORE_error and OSSL_STORE_close.\n   The implementation uses backends called \"loaders\" to implement arbitrary\n   URI schemes.  There is one built in \"loader\" for the 'file' scheme.\n\n   *Richard Levitte*\n\n * Add devcrypto engine.  This has been implemented against cryptodev-linux,\n   then adjusted to work on FreeBSD 8.4 as well.\n   Enable by configuring with 'enable-devcryptoeng'.  This is done by default\n   on BSD implementations, as cryptodev.h is assumed to exist on all of them.\n\n   *Richard Levitte*\n\n * Module names can prefixed with OSSL_ or OPENSSL_.  This affects\n   util/mkerr.pl, which is adapted to allow those prefixes, leading to\n   error code calls like this:\n\n           OSSL_FOOerr(OSSL_FOO_F_SOMETHING, OSSL_FOO_R_WHATEVER);\n\n   With this change, we claim the namespaces OSSL and OPENSSL in a manner\n   that can be encoded in C.  For the foreseeable future, this will only\n   affect new modules.\n\n   *Richard Levitte and Tim Hudson*\n\n * Removed BSD cryptodev engine.\n\n   *Rich Salz*\n\n * Add a build target 'build_all_generated', to build all generated files\n   and only that.  This can be used to prepare everything that requires\n   things like perl for a system that lacks perl and then move everything\n   to that system and do the rest of the build there.\n\n   *Richard Levitte*\n\n * In the UI interface, make it possible to duplicate the user data.  This\n   can be used by engines that need to retain the data for a longer time\n   than just the call where this user data is passed.\n\n   *Richard Levitte*\n\n * Ignore the '-named_curve auto' value for compatibility of applications\n   with OpenSSL 1.0.2.\n\n   *Tomáš Mráz <tmraz@fedoraproject.org>*\n\n * Fragmented SSL/TLS alerts are no longer accepted. An alert message is 2\n   bytes long. In theory it is permissible in SSLv3 - TLSv1.2 to fragment such\n   alerts across multiple records (some of which could be empty). In practice\n   it make no sense to send an empty alert record, or to fragment one. TLSv1.3\n   prohibits this altogether and other libraries (BoringSSL, NSS) do not\n   support this at all. Supporting it adds significant complexity to the\n   record layer, and its removal is unlikely to cause interoperability\n   issues.\n\n   *Matt Caswell*\n\n * Add the ASN.1 types INT32, UINT32, INT64, UINT64 and variants prefixed\n   with Z.  These are meant to replace LONG and ZLONG and to be size safe.\n   The use of LONG and ZLONG is discouraged and scheduled for deprecation\n   in OpenSSL 1.2.0.\n\n   *Richard Levitte*\n\n * Add the 'z' and 'j' modifiers to BIO_printf() et al formatting string,\n   'z' is to be used for [s]size_t, and 'j' - with [u]int64_t.\n\n   *Richard Levitte, Andy Polyakov*\n\n * Add EC_KEY_get0_engine(), which does for EC_KEY what RSA_get0_engine()\n   does for RSA, etc.\n\n   *Richard Levitte*\n\n * Have 'config' recognise 64-bit mingw and choose 'mingw64' as the target\n   platform rather than 'mingw'.\n\n   *Richard Levitte*\n\n * The functions X509_STORE_add_cert and X509_STORE_add_crl return\n   success if they are asked to add an object which already exists\n   in the store. This change cascades to other functions which load\n   certificates and CRLs.\n\n   *Paul Dale*\n\n * x86_64 assembly pack: annotate code with DWARF CFI directives to\n   facilitate stack unwinding even from assembly subroutines.\n\n   *Andy Polyakov*\n\n * Remove VAX C specific definitions of OPENSSL_EXPORT, OPENSSL_EXTERN.\n   Also remove OPENSSL_GLOBAL entirely, as it became a no-op.\n\n   *Richard Levitte*\n\n * Remove the VMS-specific reimplementation of gmtime from crypto/o_times.c.\n   VMS C's RTL has a fully up to date gmtime() and gmtime_r() since V7.1,\n   which is the minimum version we support.\n\n   *Richard Levitte*\n\n * Certificate time validation (X509_cmp_time) enforces stricter\n   compliance with RFC 5280. Fractional seconds and timezone offsets\n   are no longer allowed.\n\n   *Emilia Käsper*\n\n * Add support for ARIA\n\n   *Paul Dale*\n\n * s_client will now send the Server Name Indication (SNI) extension by\n   default unless the new \"-noservername\" option is used. The server name is\n   based on the host provided to the \"-connect\" option unless overridden by\n   using \"-servername\".\n\n   *Matt Caswell*\n\n * Add support for SipHash\n\n   *Todd Short*\n\n * OpenSSL now fails if it receives an unrecognised record type in TLS1.0\n   or TLS1.1. Previously this only happened in SSLv3 and TLS1.2. This is to\n   prevent issues where no progress is being made and the peer continually\n   sends unrecognised record types, using up resources processing them.\n\n   *Matt Caswell*\n\n * 'openssl passwd' can now produce SHA256 and SHA512 based output,\n   using the algorithm defined in\n   <https://www.akkadia.org/drepper/SHA-crypt.txt>\n\n   *Richard Levitte*\n\n * Heartbeat support has been removed; the ABI is changed for now.\n\n   *Richard Levitte, Rich Salz*\n\n * Support for SSL_OP_NO_ENCRYPT_THEN_MAC in SSL_CONF_cmd.\n\n   *Emilia Käsper*\n\n * The RSA \"null\" method, which was partially supported to avoid patent\n   issues, has been replaced to always returns NULL.\n\n   *Rich Salz*\n\nOpenSSL 1.1.0\n-------------\n\n### Changes between 1.1.0k and 1.1.0l [10 Sep 2019]\n\n * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n   used even when parsing explicit parameters, when loading a encoded key\n   or calling `EC_GROUP_new_from_ecpkparameters()`/\n   `EC_GROUP_new_from_ecparameters()`.\n   This prevents bypass of security hardening and performance gains,\n   especially for curves with specialized EC_METHODs.\n   By default, if a key encoded with explicit parameters is loaded and later\n   encoded, the output is still encoded with explicit parameters, even if\n   internally a \"named\" EC_GROUP is used for computation.\n\n   *Nicola Tuveri*\n\n * Compute ECC cofactors if not provided during EC_GROUP construction. Before\n   this change, EC_GROUP_set_generator would accept order and/or cofactor as\n   NULL. After this change, only the cofactor parameter can be NULL. It also\n   does some minimal sanity checks on the passed order.\n   ([CVE-2019-1547])\n\n   *Billy Bob Brumley*\n\n * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey.\n   An attack is simple, if the first CMS_recipientInfo is valid but the\n   second CMS_recipientInfo is chosen ciphertext. If the second\n   recipientInfo decodes to PKCS #1 v1.5 form plaintext, the correct\n   encryption key will be replaced by garbage, and the message cannot be\n   decoded, but if the RSA decryption fails, the correct encryption key is\n   used and the recipient will not notice the attack.\n   As a work around for this potential attack the length of the decrypted\n   key must be equal to the cipher default key length, in case the\n   certificate is not given and all recipientInfo are tried out.\n   The old behaviour can be re-enabled in the CMS code by setting the\n   CMS_DEBUG_DECRYPT flag.\n   ([CVE-2019-1563])\n\n   *Bernd Edlinger*\n\n * Use Windows installation paths in the mingw builds\n\n   Mingw isn't a POSIX environment per se, which means that Windows\n   paths should be used for installation.\n   ([CVE-2019-1552])\n\n   *Richard Levitte*\n\n### Changes between 1.1.0j and 1.1.0k [28 May 2019]\n\n * Change the default RSA, DSA and DH size to 2048 bit instead of 1024.\n   This changes the size when using the `genpkey` command when no size is given.\n   It fixes an omission in earlier changes that changed all RSA, DSA and DH\n   generation commands to use 2048 bits by default.\n\n   *Kurt Roeckx*\n\n * Prevent over long nonces in ChaCha20-Poly1305.\n\n   ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input\n   for every encryption operation. RFC 7539 specifies that the nonce value\n   (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length\n   and front pads the nonce with 0 bytes if it is less than 12\n   bytes. However it also incorrectly allows a nonce to be set of up to 16\n   bytes. In this case only the last 12 bytes are significant and any\n   additional leading bytes are ignored.\n\n   It is a requirement of using this cipher that nonce values are\n   unique. Messages encrypted using a reused nonce value are susceptible to\n   serious confidentiality and integrity attacks. If an application changes\n   the default nonce length to be longer than 12 bytes and then makes a\n   change to the leading bytes of the nonce expecting the new value to be a\n   new unique nonce then such an application could inadvertently encrypt\n   messages with a reused nonce.\n\n   Additionally the ignored bytes in a long nonce are not covered by the\n   integrity guarantee of this cipher. Any application that relies on the\n   integrity of these ignored leading bytes of a long nonce may be further\n   affected. Any OpenSSL internal use of this cipher, including in SSL/TLS,\n   is safe because no such use sets such a long nonce value. However user\n   applications that use this cipher directly and set a non-default nonce\n   length to be longer than 12 bytes may be vulnerable.\n\n   This issue was reported to OpenSSL on 16th of March 2019 by Joran Dirk\n   Greef of Ronomon.\n   ([CVE-2019-1543])\n\n   *Matt Caswell*\n\n * Added SCA hardening for modular field inversion in EC_GROUP through\n   a new dedicated field_inv() pointer in EC_METHOD.\n   This also addresses a leakage affecting conversions from projective\n   to affine coordinates.\n\n   *Billy Bob Brumley, Nicola Tuveri*\n\n * Fix a use after free bug in d2i_X509_PUBKEY when overwriting a\n   reused X509_PUBKEY object if the second PUBKEY is malformed.\n\n   *Bernd Edlinger*\n\n * Move strictness check from EVP_PKEY_asn1_new() to EVP_PKEY_asn1_add0().\n\n   *Richard Levitte*\n\n * Remove the 'dist' target and add a tarball building script.  The\n   'dist' target has fallen out of use, and it shouldn't be\n   necessary to configure just to create a source distribution.\n\n   *Richard Levitte*\n\n### Changes between 1.1.0i and 1.1.0j [20 Nov 2018]\n\n * Timing vulnerability in DSA signature generation\n\n   The OpenSSL DSA signature algorithm has been shown to be vulnerable to a\n   timing side channel attack. An attacker could use variations in the signing\n   algorithm to recover the private key.\n\n   This issue was reported to OpenSSL on 16th October 2018 by Samuel Weiser.\n   ([CVE-2018-0734])\n\n   *Paul Dale*\n\n * Timing vulnerability in ECDSA signature generation\n\n   The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a\n   timing side channel attack. An attacker could use variations in the signing\n   algorithm to recover the private key.\n\n   This issue was reported to OpenSSL on 25th October 2018 by Samuel Weiser.\n   ([CVE-2018-0735])\n\n   *Paul Dale*\n\n * Add coordinate blinding for EC_POINT and implement projective\n   coordinate blinding for generic prime curves as a countermeasure to\n   chosen point SCA attacks.\n\n   *Sohaib ul Hassan, Nicola Tuveri, Billy Bob Brumley*\n\n### Changes between 1.1.0h and 1.1.0i [14 Aug 2018]\n\n * Client DoS due to large DH parameter\n\n   During key agreement in a TLS handshake using a DH(E) based ciphersuite a\n   malicious server can send a very large prime value to the client. This will\n   cause the client to spend an unreasonably long period of time generating a\n   key for this prime resulting in a hang until the client has finished. This\n   could be exploited in a Denial Of Service attack.\n\n   This issue was reported to OpenSSL on 5th June 2018 by Guido Vranken\n   ([CVE-2018-0732])\n\n   *Guido Vranken*\n\n * Cache timing vulnerability in RSA Key Generation\n\n   The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to\n   a cache timing side channel attack. An attacker with sufficient access to\n   mount cache timing attacks during the RSA key generation process could\n   recover the private key.\n\n   This issue was reported to OpenSSL on 4th April 2018 by Alejandro Cabrera\n   Aldaya, Billy Brumley, Cesar Pereida Garcia and Luis Manuel Alvarez Tapia.\n   ([CVE-2018-0737])\n\n   *Billy Brumley*\n\n * Make EVP_PKEY_asn1_new() a bit stricter about its input.  A NULL pem_str\n   parameter is no longer accepted, as it leads to a corrupt table.  NULL\n   pem_str is reserved for alias entries only.\n\n   *Richard Levitte*\n\n * Revert blinding in ECDSA sign and instead make problematic addition\n   length-invariant. Switch even to fixed-length Montgomery multiplication.\n\n   *Andy Polyakov*\n\n * Change generating and checking of primes so that the error rate of not\n   being prime depends on the intended use based on the size of the input.\n   For larger primes this will result in more rounds of Miller-Rabin.\n   The maximal error rate for primes with more than 1080 bits is lowered\n   to 2^-128.\n\n   *Kurt Roeckx, Annie Yousar*\n\n * Increase the number of Miller-Rabin rounds for DSA key generating to 64.\n\n   *Kurt Roeckx*\n\n * Add blinding to ECDSA and DSA signatures to protect against side channel\n   attacks discovered by Keegan Ryan (NCC Group).\n\n   *Matt Caswell*\n\n * When unlocking a pass phrase protected PEM file or PKCS#8 container, we\n   now allow empty (zero character) pass phrases.\n\n   *Richard Levitte*\n\n * Certificate time validation (X509_cmp_time) enforces stricter\n   compliance with RFC 5280. Fractional seconds and timezone offsets\n   are no longer allowed.\n\n   *Emilia Käsper*\n\n * Fixed a text canonicalisation bug in CMS\n\n   Where a CMS detached signature is used with text content the text goes\n   through a canonicalisation process first prior to signing or verifying a\n   signature. This process strips trailing space at the end of lines, converts\n   line terminators to CRLF and removes additional trailing line terminators\n   at the end of a file. A bug in the canonicalisation process meant that\n   some characters, such as form-feed, were incorrectly treated as whitespace\n   and removed. This is contrary to the specification (RFC5485). This fix\n   could mean that detached text data signed with an earlier version of\n   OpenSSL 1.1.0 may fail to verify using the fixed version, or text data\n   signed with a fixed OpenSSL may fail to verify with an earlier version of\n   OpenSSL 1.1.0. A workaround is to only verify the canonicalised text data\n   and use the \"-binary\" flag (for the \"cms\" command line application) or set\n   the SMIME_BINARY/PKCS7_BINARY/CMS_BINARY flags (if using CMS_verify()).\n\n   *Matt Caswell*\n\n### Changes between 1.1.0g and 1.1.0h [27 Mar 2018]\n\n * Constructed ASN.1 types with a recursive definition could exceed the stack\n\n   Constructed ASN.1 types with a recursive definition (such as can be found\n   in PKCS7) could eventually exceed the stack given malicious input with\n   excessive recursion. This could result in a Denial Of Service attack. There\n   are no such structures used within SSL/TLS that come from untrusted sources\n   so this is considered safe.\n\n   This issue was reported to OpenSSL on 4th January 2018 by the OSS-fuzz\n   project.\n   ([CVE-2018-0739])\n\n   *Matt Caswell*\n\n * Incorrect CRYPTO_memcmp on HP-UX PA-RISC\n\n   Because of an implementation bug the PA-RISC CRYPTO_memcmp function is\n   effectively reduced to only comparing the least significant bit of each\n   byte. This allows an attacker to forge messages that would be considered as\n   authenticated in an amount of tries lower than that guaranteed by the\n   security claims of the scheme. The module can only be compiled by the\n   HP-UX assembler, so that only HP-UX PA-RISC targets are affected.\n\n   This issue was reported to OpenSSL on 2nd March 2018 by Peter Waltenberg\n   (IBM).\n   ([CVE-2018-0733])\n\n   *Andy Polyakov*\n\n * Add a build target 'build_all_generated', to build all generated files\n   and only that.  This can be used to prepare everything that requires\n   things like perl for a system that lacks perl and then move everything\n   to that system and do the rest of the build there.\n\n   *Richard Levitte*\n\n * Backport SSL_OP_NO_RENGOTIATION\n\n   OpenSSL 1.0.2 and below had the ability to disable renegotiation using the\n   (undocumented) SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS flag. Due to the opacity\n   changes this is no longer possible in 1.1.0. Therefore, the new\n   SSL_OP_NO_RENEGOTIATION option from 1.1.1-dev has been backported to\n   1.1.0 to provide equivalent functionality.\n\n   Note that if an application built against 1.1.0h headers (or above) is run\n   using an older version of 1.1.0 (prior to 1.1.0h) then the option will be\n   accepted but nothing will happen, i.e. renegotiation will not be prevented.\n\n   *Matt Caswell*\n\n * Removed the OS390-Unix config target.  It relied on a script that doesn't\n   exist.\n\n   *Rich Salz*\n\n * rsaz_1024_mul_avx2 overflow bug on x86_64\n\n   There is an overflow bug in the AVX2 Montgomery multiplication procedure\n   used in exponentiation with 1024-bit moduli. No EC algorithms are affected.\n   Analysis suggests that attacks against RSA and DSA as a result of this\n   defect would be very difficult to perform and are not believed likely.\n   Attacks against DH1024 are considered just feasible, because most of the\n   work necessary to deduce information about a private key may be performed\n   offline. The amount of resources required for such an attack would be\n   significant. However, for an attack on TLS to be meaningful, the server\n   would have to share the DH1024 private key among multiple clients, which is\n   no longer an option since CVE-2016-0701.\n\n   This only affects processors that support the AVX2 but not ADX extensions\n   like Intel Haswell (4th generation).\n\n   This issue was reported to OpenSSL by David Benjamin (Google). The issue\n   was originally found via the OSS-Fuzz project.\n   ([CVE-2017-3738])\n\n   *Andy Polyakov*\n\n### Changes between 1.1.0f and 1.1.0g [2 Nov 2017]\n\n * bn_sqrx8x_internal carry bug on x86_64\n\n   There is a carry propagating bug in the x86_64 Montgomery squaring\n   procedure. No EC algorithms are affected. Analysis suggests that attacks\n   against RSA and DSA as a result of this defect would be very difficult to\n   perform and are not believed likely. Attacks against DH are considered just\n   feasible (although very difficult) because most of the work necessary to\n   deduce information about a private key may be performed offline. The amount\n   of resources required for such an attack would be very significant and\n   likely only accessible to a limited number of attackers. An attacker would\n   additionally need online access to an unpatched system using the target\n   private key in a scenario with persistent DH parameters and a private\n   key that is shared between multiple clients.\n\n   This only affects processors that support the BMI1, BMI2 and ADX extensions\n   like Intel Broadwell (5th generation) and later or AMD Ryzen.\n\n   This issue was reported to OpenSSL by the OSS-Fuzz project.\n   ([CVE-2017-3736])\n\n   *Andy Polyakov*\n\n * Malformed X.509 IPAddressFamily could cause OOB read\n\n   If an X.509 certificate has a malformed IPAddressFamily extension,\n   OpenSSL could do a one-byte buffer overread. The most likely result\n   would be an erroneous display of the certificate in text format.\n\n   This issue was reported to OpenSSL by the OSS-Fuzz project.\n   ([CVE-2017-3735])\n\n   *Rich Salz*\n\n### Changes between 1.1.0e and 1.1.0f [25 May 2017]\n\n * Have 'config' recognise 64-bit mingw and choose 'mingw64' as the target\n   platform rather than 'mingw'.\n\n   *Richard Levitte*\n\n * Remove the VMS-specific reimplementation of gmtime from crypto/o_times.c.\n   VMS C's RTL has a fully up to date gmtime() and gmtime_r() since V7.1,\n   which is the minimum version we support.\n\n   *Richard Levitte*\n\n### Changes between 1.1.0d and 1.1.0e [16 Feb 2017]\n\n * Encrypt-Then-Mac renegotiation crash\n\n   During a renegotiation handshake if the Encrypt-Then-Mac extension is\n   negotiated where it was not in the original handshake (or vice-versa) then\n   this can cause OpenSSL to crash (dependent on ciphersuite). Both clients\n   and servers are affected.\n\n   This issue was reported to OpenSSL by Joe Orton (Red Hat).\n   ([CVE-2017-3733])\n\n   *Matt Caswell*\n\n### Changes between 1.1.0c and 1.1.0d [26 Jan 2017]\n\n * Truncated packet could crash via OOB read\n\n   If one side of an SSL/TLS path is running on a 32-bit host and a specific\n   cipher is being used, then a truncated packet can cause that host to\n   perform an out-of-bounds read, usually resulting in a crash.\n\n   This issue was reported to OpenSSL by Robert Święcki of Google.\n   ([CVE-2017-3731])\n\n   *Andy Polyakov*\n\n * Bad (EC)DHE parameters cause a client crash\n\n   If a malicious server supplies bad parameters for a DHE or ECDHE key\n   exchange then this can result in the client attempting to dereference a\n   NULL pointer leading to a client crash. This could be exploited in a Denial\n   of Service attack.\n\n   This issue was reported to OpenSSL by Guido Vranken.\n   ([CVE-2017-3730])\n\n   *Matt Caswell*\n\n * BN_mod_exp may produce incorrect results on x86_64\n\n   There is a carry propagating bug in the x86_64 Montgomery squaring\n   procedure. No EC algorithms are affected. Analysis suggests that attacks\n   against RSA and DSA as a result of this defect would be very difficult to\n   perform and are not believed likely. Attacks against DH are considered just\n   feasible (although very difficult) because most of the work necessary to\n   deduce information about a private key may be performed offline. The amount\n   of resources required for such an attack would be very significant and\n   likely only accessible to a limited number of attackers. An attacker would\n   additionally need online access to an unpatched system using the target\n   private key in a scenario with persistent DH parameters and a private\n   key that is shared between multiple clients. For example this can occur by\n   default in OpenSSL DHE based SSL/TLS ciphersuites. Note: This issue is very\n   similar to CVE-2015-3193 but must be treated as a separate problem.\n\n   This issue was reported to OpenSSL by the OSS-Fuzz project.\n   ([CVE-2017-3732])\n\n   *Andy Polyakov*\n\n### Changes between 1.1.0b and 1.1.0c [10 Nov 2016]\n\n * ChaCha20/Poly1305 heap-buffer-overflow\n\n   TLS connections using `*-CHACHA20-POLY1305` ciphersuites are susceptible to\n   a DoS attack by corrupting larger payloads. This can result in an OpenSSL\n   crash. This issue is not considered to be exploitable beyond a DoS.\n\n   This issue was reported to OpenSSL by Robert Święcki (Google Security Team)\n   ([CVE-2016-7054])\n\n   *Richard Levitte*\n\n * CMS Null dereference\n\n   Applications parsing invalid CMS structures can crash with a NULL pointer\n   dereference. This is caused by a bug in the handling of the ASN.1 CHOICE\n   type in OpenSSL 1.1.0 which can result in a NULL value being passed to the\n   structure callback if an attempt is made to free certain invalid encodings.\n   Only CHOICE structures using a callback which do not handle NULL value are\n   affected.\n\n   This issue was reported to OpenSSL by Tyler Nighswander of ForAllSecure.\n   ([CVE-2016-7053])\n\n   *Stephen Henson*\n\n * Montgomery multiplication may produce incorrect results\n\n   There is a carry propagating bug in the Broadwell-specific Montgomery\n   multiplication procedure that handles input lengths divisible by, but\n   longer than 256 bits. Analysis suggests that attacks against RSA, DSA\n   and DH private keys are impossible. This is because the subroutine in\n   question is not used in operations with the private key itself and an input\n   of the attacker's direct choice. Otherwise the bug can manifest itself as\n   transient authentication and key negotiation failures or reproducible\n   erroneous outcome of public-key operations with specially crafted input.\n   Among EC algorithms only Brainpool P-512 curves are affected and one\n   presumably can attack ECDH key negotiation. Impact was not analyzed in\n   detail, because pre-requisites for attack are considered unlikely. Namely\n   multiple clients have to choose the curve in question and the server has to\n   share the private key among them, neither of which is default behaviour.\n   Even then only clients that chose the curve will be affected.\n\n   This issue was publicly reported as transient failures and was not\n   initially recognized as a security issue. Thanks to Richard Morgan for\n   providing reproducible case.\n   ([CVE-2016-7055])\n\n   *Andy Polyakov*\n\n * Removed automatic addition of RPATH in shared libraries and executables,\n   as this was a remainder from OpenSSL 1.0.x and isn't needed any more.\n\n   *Richard Levitte*\n\n### Changes between 1.1.0a and 1.1.0b [26 Sep 2016]\n\n * Fix Use After Free for large message sizes\n\n   The patch applied to address CVE-2016-6307 resulted in an issue where if a\n   message larger than approx 16k is received then the underlying buffer to\n   store the incoming message is reallocated and moved. Unfortunately a\n   dangling pointer to the old location is left which results in an attempt to\n   write to the previously freed location. This is likely to result in a\n   crash, however it could potentially lead to execution of arbitrary code.\n\n   This issue only affects OpenSSL 1.1.0a.\n\n   This issue was reported to OpenSSL by Robert Święcki.\n   ([CVE-2016-6309])\n\n   *Matt Caswell*\n\n### Changes between 1.1.0 and 1.1.0a [22 Sep 2016]\n\n * OCSP Status Request extension unbounded memory growth\n\n   A malicious client can send an excessively large OCSP Status Request\n   extension. If that client continually requests renegotiation, sending a\n   large OCSP Status Request extension each time, then there will be unbounded\n   memory growth on the server. This will eventually lead to a Denial Of\n   Service attack through memory exhaustion. Servers with a default\n   configuration are vulnerable even if they do not support OCSP. Builds using\n   the \"no-ocsp\" build time option are not affected.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6304])\n\n   *Matt Caswell*\n\n * SSL_peek() hang on empty record\n\n   OpenSSL 1.1.0 SSL/TLS will hang during a call to SSL_peek() if the peer\n   sends an empty record. This could be exploited by a malicious peer in a\n   Denial Of Service attack.\n\n   This issue was reported to OpenSSL by Alex Gaynor.\n   ([CVE-2016-6305])\n\n   *Matt Caswell*\n\n * Excessive allocation of memory in tls_get_message_header() and\n   dtls1_preprocess_fragment()\n\n   A (D)TLS message includes 3 bytes for its length in the header for the\n   message. This would allow for messages up to 16Mb in length. Messages of\n   this length are excessive and OpenSSL includes a check to ensure that a\n   peer is sending reasonably sized messages in order to avoid too much memory\n   being consumed to service a connection. A flaw in the logic of version\n   1.1.0 means that memory for the message is allocated too early, prior to\n   the excessive message length check. Due to way memory is allocated in\n   OpenSSL this could mean an attacker could force up to 21Mb to be allocated\n   to service a connection. This could lead to a Denial of Service through\n   memory exhaustion. However, the excessive message length check still takes\n   place, and this would cause the connection to immediately fail. Assuming\n   that the application calls SSL_free() on the failed connection in a timely\n   manner then the 21Mb of allocated memory will then be immediately freed\n   again. Therefore, the excessive memory allocation will be transitory in\n   nature. This then means that there is only a security impact if:\n\n   1) The application does not call SSL_free() in a timely manner in the event\n   that the connection fails\n   or\n   2) The application is working in a constrained environment where there is\n   very little free memory\n   or\n   3) The attacker initiates multiple connection attempts such that there are\n   multiple connections in a state where memory has been allocated for the\n   connection; SSL_free() has not yet been called; and there is insufficient\n   memory to service the multiple requests.\n\n   Except in the instance of (1) above any Denial Of Service is likely to be\n   transitory because as soon as the connection fails the memory is\n   subsequently freed again in the SSL_free() call. However there is an\n   increased risk during this period of application crashes due to the lack of\n   memory - which would then mean a more serious Denial of Service.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   (CVE-2016-6307 and CVE-2016-6308)\n\n   *Matt Caswell*\n\n * solaris-x86-cc, i.e. 32-bit configuration with vendor compiler,\n   had to be removed. Primary reason is that vendor assembler can't\n   assemble our modules with -KPIC flag. As result it, assembly\n   support, was not even available as option. But its lack means\n   lack of side-channel resistant code, which is incompatible with\n   security by todays standards. Fortunately gcc is readily available\n   prepackaged option, which we firmly point at...\n\n   *Andy Polyakov*\n\n### Changes between 1.0.2h and 1.1.0  [25 Aug 2016]\n\n * Windows command-line tool supports UTF-8 opt-in option for arguments\n   and console input. Setting OPENSSL_WIN32_UTF8 environment variable\n   (to any value) allows Windows user to access PKCS#12 file generated\n   with Windows CryptoAPI and protected with non-ASCII password, as well\n   as files generated under UTF-8 locale on Linux also protected with\n   non-ASCII password.\n\n   *Andy Polyakov*\n\n * To mitigate the SWEET32 attack ([CVE-2016-2183]), 3DES cipher suites\n   have been disabled by default and removed from DEFAULT, just like RC4.\n   See the RC4 item below to re-enable both.\n\n   *Rich Salz*\n\n * The method for finding the storage location for the Windows RAND seed file\n   has changed. First we check %RANDFILE%. If that is not set then we check\n   the directories %HOME%, %USERPROFILE% and %SYSTEMROOT% in that order. If\n   all else fails we fall back to C:\\.\n\n   *Matt Caswell*\n\n * The EVP_EncryptUpdate() function has had its return type changed from void\n   to int. A return of 0 indicates and error while a return of 1 indicates\n   success.\n\n   *Matt Caswell*\n\n * The flags RSA_FLAG_NO_CONSTTIME, DSA_FLAG_NO_EXP_CONSTTIME and\n   DH_FLAG_NO_EXP_CONSTTIME which previously provided the ability to switch\n   off the constant time implementation for RSA, DSA and DH have been made\n   no-ops and deprecated.\n\n   *Matt Caswell*\n\n * Windows RAND implementation was simplified to only get entropy by\n   calling CryptGenRandom(). Various other RAND-related tickets\n   were also closed.\n\n   *Joseph Wylie Yandle, Rich Salz*\n\n * The stack and lhash API's were renamed to start with `OPENSSL_SK_`\n   and `OPENSSL_LH_`, respectively.  The old names are available\n   with API compatibility.  They new names are now completely documented.\n\n   *Rich Salz*\n\n * Unify TYPE_up_ref(obj) methods signature.\n   SSL_CTX_up_ref(), SSL_up_ref(), X509_up_ref(), EVP_PKEY_up_ref(),\n   X509_CRL_up_ref(), X509_OBJECT_up_ref_count() methods are now returning an\n   int (instead of void) like all others TYPE_up_ref() methods.\n   So now these methods also check the return value of CRYPTO_atomic_add(),\n   and the validity of object reference counter.\n\n   *fdasilvayy@gmail.com*\n\n * With Windows Visual Studio builds, the .pdb files are installed\n   alongside the installed libraries and executables.  For a static\n   library installation, ossl_static.pdb is the associate compiler\n   generated .pdb file to be used when linking programs.\n\n   *Richard Levitte*\n\n * Remove openssl.spec.  Packaging files belong with the packagers.\n\n   *Richard Levitte*\n\n * Automatic Darwin/OSX configuration has had a refresh, it will now\n   recognise x86_64 architectures automatically.  You can still decide\n   to build for a different bitness with the environment variable\n   KERNEL_BITS (can be 32 or 64), for example:\n\n           KERNEL_BITS=32 ./config\n\n   *Richard Levitte*\n\n * Change default algorithms in pkcs8 utility to use PKCS#5 v2.0,\n   256 bit AES and HMAC with SHA256.\n\n   *Steve Henson*\n\n * Remove support for MIPS o32 ABI on IRIX (and IRIX only).\n\n   *Andy Polyakov*\n\n * Triple-DES ciphers have been moved from HIGH to MEDIUM.\n\n   *Rich Salz*\n\n * To enable users to have their own config files and build file templates,\n   Configure looks in the directory indicated by the environment variable\n   OPENSSL_LOCAL_CONFIG_DIR as well as the in-source Configurations/\n   directory.  On VMS, OPENSSL_LOCAL_CONFIG_DIR is expected to be a logical\n   name and is used as is.\n\n   *Richard Levitte*\n\n * The following datatypes were made opaque: X509_OBJECT, X509_STORE_CTX,\n   X509_STORE, X509_LOOKUP, and X509_LOOKUP_METHOD.  The unused type\n   X509_CERT_FILE_CTX was removed.\n\n   *Rich Salz*\n\n * \"shared\" builds are now the default. To create only static libraries use\n   the \"no-shared\" Configure option.\n\n   *Matt Caswell*\n\n * Remove the no-aes, no-hmac, no-rsa, no-sha and no-md5 Configure options.\n   All of these option have not worked for some while and are fundamental\n   algorithms.\n\n   *Matt Caswell*\n\n * Make various cleanup routines no-ops and mark them as deprecated. Most\n   global cleanup functions are no longer required because they are handled\n   via auto-deinit (see OPENSSL_init_crypto and OPENSSL_init_ssl man pages).\n   Explicitly de-initing can cause problems (e.g. where a library that uses\n   OpenSSL de-inits, but an application is still using it). The affected\n   functions are CONF_modules_free(), ENGINE_cleanup(), OBJ_cleanup(),\n   EVP_cleanup(), BIO_sock_cleanup(), CRYPTO_cleanup_all_ex_data(),\n   RAND_cleanup(), SSL_COMP_free_compression_methods(), ERR_free_strings() and\n   COMP_zlib_cleanup().\n\n   *Matt Caswell*\n\n * --strict-warnings no longer enables runtime debugging options\n   such as REF_DEBUG. Instead, debug options are automatically\n   enabled with '--debug' builds.\n\n   *Andy Polyakov, Emilia Käsper*\n\n * Made DH and DH_METHOD opaque. The structures for managing DH objects\n   have been moved out of the public header files. New functions for managing\n   these have been added.\n\n   *Matt Caswell*\n\n * Made RSA and RSA_METHOD opaque. The structures for managing RSA\n   objects have been moved out of the public header files. New\n   functions for managing these have been added.\n\n   *Richard Levitte*\n\n * Made DSA and DSA_METHOD opaque. The structures for managing DSA objects\n   have been moved out of the public header files. New functions for managing\n   these have been added.\n\n   *Matt Caswell*\n\n * Made BIO and BIO_METHOD opaque. The structures for managing BIOs have been\n   moved out of the public header files. New functions for managing these\n   have been added.\n\n   *Matt Caswell*\n\n * Removed no-rijndael as a config option. Rijndael is an old name for AES.\n\n   *Matt Caswell*\n\n * Removed the mk1mf build scripts.\n\n   *Richard Levitte*\n\n * Headers are now wrapped, if necessary, with OPENSSL_NO_xxx, so\n   it is always safe to #include a header now.\n\n   *Rich Salz*\n\n * Removed the aged BC-32 config and all its supporting scripts\n\n   *Richard Levitte*\n\n * Removed support for Ultrix, Netware, and OS/2.\n\n   *Rich Salz*\n\n * Add support for HKDF.\n\n   *Alessandro Ghedini*\n\n * Add support for blake2b and blake2s\n\n   *Bill Cox*\n\n * Added support for \"pipelining\". Ciphers that have the\n   EVP_CIPH_FLAG_PIPELINE flag set have a capability to process multiple\n   encryptions/decryptions simultaneously. There are currently no built-in\n   ciphers with this property but the expectation is that engines will be able\n   to offer it to significantly improve throughput. Support has been extended\n   into libssl so that multiple records for a single connection can be\n   processed in one go (for >=TLS 1.1).\n\n   *Matt Caswell*\n\n * Added the AFALG engine. This is an async capable engine which is able to\n   offload work to the Linux kernel. In this initial version it only supports\n   AES128-CBC. The kernel must be version 4.1.0 or greater.\n\n   *Catriona Lucey*\n\n * OpenSSL now uses a new threading API. It is no longer necessary to\n   set locking callbacks to use OpenSSL in a multi-threaded environment. There\n   are two supported threading models: pthreads and windows threads. It is\n   also possible to configure OpenSSL at compile time for \"no-threads\". The\n   old threading API should no longer be used. The functions have been\n   replaced with \"no-op\" compatibility macros.\n\n   *Alessandro Ghedini, Matt Caswell*\n\n * Modify behavior of ALPN to invoke callback after SNI/servername\n   callback, such that updates to the SSL_CTX affect ALPN.\n\n   *Todd Short*\n\n * Add SSL_CIPHER queries for authentication and key-exchange.\n\n   *Todd Short*\n\n * Changes to the DEFAULT cipherlist:\n   - Prefer (EC)DHE handshakes over plain RSA.\n   - Prefer AEAD ciphers over legacy ciphers.\n   - Prefer ECDSA over RSA when both certificates are available.\n   - Prefer TLSv1.2 ciphers/PRF.\n   - Remove DSS, SEED, IDEA, CAMELLIA, and AES-CCM from the\n     default cipherlist.\n\n   *Emilia Käsper*\n\n * Change the ECC default curve list to be this, in order: x25519,\n   secp256r1, secp521r1, secp384r1.\n\n   *Rich Salz*\n\n * RC4 based libssl ciphersuites are now classed as \"weak\" ciphers and are\n   disabled by default. They can be re-enabled using the\n   enable-weak-ssl-ciphers option to Configure.\n\n   *Matt Caswell*\n\n * If the server has ALPN configured, but supports no protocols that the\n   client advertises, send a fatal \"no_application_protocol\" alert.\n   This behaviour is SHALL in RFC 7301, though it isn't universally\n   implemented by other servers.\n\n   *Emilia Käsper*\n\n * Add X25519 support.\n   Add ASN.1 and EVP_PKEY methods for X25519. This includes support\n   for public and private key encoding using the format documented in\n   draft-ietf-curdle-pkix-02. The corresponding EVP_PKEY method supports\n   key generation and key derivation.\n\n   TLS support complies with draft-ietf-tls-rfc4492bis-08 and uses\n   X25519(29).\n\n   *Steve Henson*\n\n * Deprecate SRP_VBASE_get_by_user.\n   SRP_VBASE_get_by_user had inconsistent memory management behaviour.\n   In order to fix an unavoidable memory leak ([CVE-2016-0798]),\n   SRP_VBASE_get_by_user was changed to ignore the \"fake user\" SRP\n   seed, even if the seed is configured.\n\n   Users should use SRP_VBASE_get1_by_user instead. Note that in\n   SRP_VBASE_get1_by_user, caller must free the returned value. Note\n   also that even though configuring the SRP seed attempts to hide\n   invalid usernames by continuing the handshake with fake\n   credentials, this behaviour is not constant time and no strong\n   guarantees are made that the handshake is indistinguishable from\n   that of a valid user.\n\n   *Emilia Käsper*\n\n * Configuration change; it's now possible to build dynamic engines\n   without having to build shared libraries and vice versa.  This\n   only applies to the engines in `engines/`, those in `crypto/engine/`\n   will always be built into libcrypto (i.e. \"static\").\n\n   Building dynamic engines is enabled by default; to disable, use\n   the configuration option \"disable-dynamic-engine\".\n\n   The only requirements for building dynamic engines are the\n   presence of the DSO module and building with position independent\n   code, so they will also automatically be disabled if configuring\n   with \"disable-dso\" or \"disable-pic\".\n\n   The macros OPENSSL_NO_STATIC_ENGINE and OPENSSL_NO_DYNAMIC_ENGINE\n   are also taken away from openssl/opensslconf.h, as they are\n   irrelevant.\n\n   *Richard Levitte*\n\n * Configuration change; if there is a known flag to compile\n   position independent code, it will always be applied on the\n   libcrypto and libssl object files, and never on the application\n   object files.  This means other libraries that use routines from\n   libcrypto / libssl can be made into shared libraries regardless\n   of how OpenSSL was configured.\n\n   If this isn't desirable, the configuration options \"disable-pic\"\n   or \"no-pic\" can be used to disable the use of PIC.  This will\n   also disable building shared libraries and dynamic engines.\n\n   *Richard Levitte*\n\n * Removed JPAKE code.  It was experimental and has no wide use.\n\n   *Rich Salz*\n\n * The INSTALL_PREFIX Makefile variable has been renamed to\n   DESTDIR.  That makes for less confusion on what this variable\n   is for.  Also, the configuration option --install_prefix is\n   removed.\n\n   *Richard Levitte*\n\n * Heartbeat for TLS has been removed and is disabled by default\n   for DTLS; configure with enable-heartbeats.  Code that uses the\n   old #define's might need to be updated.\n\n   *Emilia Käsper, Rich Salz*\n\n * Rename REF_CHECK to REF_DEBUG.\n\n   *Rich Salz*\n\n * New \"unified\" build system\n\n   The \"unified\" build system is aimed to be a common system for all\n   platforms we support.  With it comes new support for VMS.\n\n   This system builds supports building in a different directory tree\n   than the source tree.  It produces one Makefile (for unix family\n   or lookalikes), or one descrip.mms (for VMS).\n\n   The source of information to make the Makefile / descrip.mms is\n   small files called 'build.info', holding the necessary\n   information for each directory with source to compile, and a\n   template in Configurations, like unix-Makefile.tmpl or\n   descrip.mms.tmpl.\n\n   With this change, the library names were also renamed on Windows\n   and on VMS.  They now have names that are closer to the standard\n   on Unix, and include the major version number, and in certain\n   cases, the architecture they are built for.  See \"Notes on shared\n   libraries\" in INSTALL.\n\n   We rely heavily on the perl module Text::Template.\n\n   *Richard Levitte*\n\n * Added support for auto-initialisation and de-initialisation of the library.\n   OpenSSL no longer requires explicit init or deinit routines to be called,\n   except in certain circumstances. See the OPENSSL_init_crypto() and\n   OPENSSL_init_ssl() man pages for further information.\n\n   *Matt Caswell*\n\n * The arguments to the DTLSv1_listen function have changed. Specifically the\n   \"peer\" argument is now expected to be a BIO_ADDR object.\n\n * Rewrite of BIO networking library. The BIO library lacked consistent\n   support of IPv6, and adding it required some more extensive\n   modifications.  This introduces the BIO_ADDR and BIO_ADDRINFO types,\n   which hold all types of addresses and chains of address information.\n   It also introduces a new API, with functions like BIO_socket,\n   BIO_connect, BIO_listen, BIO_lookup and a rewrite of BIO_accept.\n   The source/sink BIOs BIO_s_connect, BIO_s_accept and BIO_s_datagram\n   have been adapted accordingly.\n\n   *Richard Levitte*\n\n * RSA_padding_check_PKCS1_type_1 now accepts inputs with and without\n   the leading 0-byte.\n\n   *Emilia Käsper*\n\n * CRIME protection: disable compression by default, even if OpenSSL is\n   compiled with zlib enabled. Applications can still enable compression\n   by calling SSL_CTX_clear_options(ctx, SSL_OP_NO_COMPRESSION), or by\n   using the SSL_CONF library to configure compression.\n\n   *Emilia Käsper*\n\n * The signature of the session callback configured with\n   SSL_CTX_sess_set_get_cb was changed. The read-only input buffer\n   was explicitly marked as `const unsigned char*` instead of\n   `unsigned char*`.\n\n   *Emilia Käsper*\n\n * Always DPURIFY. Remove the use of uninitialized memory in the\n   RNG, and other conditional uses of DPURIFY. This makes -DPURIFY a no-op.\n\n   *Emilia Käsper*\n\n * Removed many obsolete configuration items, including\n      DES_PTR, DES_RISC1, DES_RISC2, DES_INT\n      MD2_CHAR, MD2_INT, MD2_LONG\n      BF_PTR, BF_PTR2\n      IDEA_SHORT, IDEA_LONG\n      RC2_SHORT, RC2_LONG, RC4_LONG, RC4_CHUNK, RC4_INDEX\n\n   *Rich Salz, with advice from Andy Polyakov*\n\n * Many BN internals have been moved to an internal header file.\n\n   *Rich Salz with help from Andy Polyakov*\n\n * Configuration and writing out the results from it has changed.\n   Files such as Makefile include/openssl/opensslconf.h and are now\n   produced through general templates, such as Makefile.in and\n   crypto/opensslconf.h.in and some help from the perl module\n   Text::Template.\n\n   Also, the center of configuration information is no longer\n   Makefile.  Instead, Configure produces a perl module in\n   configdata.pm which holds most of the config data (in the hash\n   table %config), the target data that comes from the target\n   configuration in one of the `Configurations/*.conf` files (in\n   %target).\n\n   *Richard Levitte*\n\n * To clarify their intended purposes, the Configure options\n   --prefix and --openssldir change their semantics, and become more\n   straightforward and less interdependent.\n\n   --prefix shall be used exclusively to give the location INSTALLTOP\n   where programs, scripts, libraries, include files and manuals are\n   going to be installed.  The default is now /usr/local.\n\n   --openssldir shall be used exclusively to give the default\n   location OPENSSLDIR where certificates, private keys, CRLs are\n   managed.  This is also where the default openssl.cnf gets\n   installed.\n   If the directory given with this option is a relative path, the\n   values of both the --prefix value and the --openssldir value will\n   be combined to become OPENSSLDIR.\n   The default for --openssldir is INSTALLTOP/ssl.\n\n   Anyone who uses --openssldir to specify where OpenSSL is to be\n   installed MUST change to use --prefix instead.\n\n   *Richard Levitte*\n\n * The GOST engine was out of date and therefore it has been removed. An up\n   to date GOST engine is now being maintained in an external repository.\n   See: <https://wiki.openssl.org/index.php/Binaries>. Libssl still retains\n   support for GOST ciphersuites (these are only activated if a GOST engine\n   is present).\n\n   *Matt Caswell*\n\n * EGD is no longer supported by default; use enable-egd when\n   configuring.\n\n   *Ben Kaduk and Rich Salz*\n\n * The distribution now has Makefile.in files, which are used to\n   create Makefile's when Configure is run.  *Configure must be run\n   before trying to build now.*\n\n   *Rich Salz*\n\n * The return value for SSL_CIPHER_description() for error conditions\n   has changed.\n\n   *Rich Salz*\n\n * Support for RFC6698/RFC7671 DANE TLSA peer authentication.\n\n   Obtaining and performing DNSSEC validation of TLSA records is\n   the application's responsibility.  The application provides\n   the TLSA records of its choice to OpenSSL, and these are then\n   used to authenticate the peer.\n\n   The TLSA records need not even come from DNS.  They can, for\n   example, be used to implement local end-entity certificate or\n   trust-anchor \"pinning\", where the \"pin\" data takes the form\n   of TLSA records, which can augment or replace verification\n   based on the usual WebPKI public certification authorities.\n\n   *Viktor Dukhovni*\n\n * Revert default OPENSSL_NO_DEPRECATED setting.  Instead OpenSSL\n   continues to support deprecated interfaces in default builds.\n   However, applications are strongly advised to compile their\n   source files with -DOPENSSL_API_COMPAT=0x10100000L, which hides\n   the declarations of all interfaces deprecated in 0.9.8, 1.0.0\n   or the 1.1.0 releases.\n\n   In environments in which all applications have been ported to\n   not use any deprecated interfaces OpenSSL's Configure script\n   should be used with the --api=1.1.0 option to entirely remove\n   support for the deprecated features from the library and\n   unconditionally disable them in the installed headers.\n   Essentially the same effect can be achieved with the \"no-deprecated\"\n   argument to Configure, except that this will always restrict\n   the build to just the latest API, rather than a fixed API\n   version.\n\n   As applications are ported to future revisions of the API,\n   they should update their compile-time OPENSSL_API_COMPAT define\n   accordingly, but in most cases should be able to continue to\n   compile with later releases.\n\n   The OPENSSL_API_COMPAT versions for 1.0.0, and 0.9.8 are\n   0x10000000L and 0x00908000L, respectively.  However those\n   versions did not support the OPENSSL_API_COMPAT feature, and\n   so applications are not typically tested for explicit support\n   of just the undeprecated features of either release.\n\n   *Viktor Dukhovni*\n\n * Add support for setting the minimum and maximum supported protocol.\n   It can bet set via the SSL_set_min_proto_version() and\n   SSL_set_max_proto_version(), or via the SSL_CONF's MinProtocol and\n   MaxProtocol.  It's recommended to use the new APIs to disable\n   protocols instead of disabling individual protocols using\n   SSL_set_options() or SSL_CONF's Protocol.  This change also\n   removes support for disabling TLS 1.2 in the OpenSSL TLS\n   client at compile time by defining OPENSSL_NO_TLS1_2_CLIENT.\n\n   *Kurt Roeckx*\n\n * Support for ChaCha20 and Poly1305 added to libcrypto and libssl.\n\n   *Andy Polyakov*\n\n * New EC_KEY_METHOD, this replaces the older ECDSA_METHOD and ECDH_METHOD\n   and integrates ECDSA and ECDH functionality into EC. Implementations can\n   now redirect key generation and no longer need to convert to or from\n   ECDSA_SIG format.\n\n   Note: the ecdsa.h and ecdh.h headers are now no longer needed and just\n   include the ec.h header file instead.\n\n   *Steve Henson*\n\n * Remove support for all 40 and 56 bit ciphers.  This includes all the export\n   ciphers who are no longer supported and drops support the ephemeral RSA key\n   exchange. The LOW ciphers currently doesn't have any ciphers in it.\n\n   *Kurt Roeckx*\n\n * Made EVP_MD_CTX, EVP_MD, EVP_CIPHER_CTX, EVP_CIPHER and HMAC_CTX\n   opaque.  For HMAC_CTX, the following constructors and destructors\n   were added:\n\n       HMAC_CTX *HMAC_CTX_new(void);\n       void HMAC_CTX_free(HMAC_CTX *ctx);\n\n   For EVP_MD and EVP_CIPHER, complete APIs to create, fill and\n   destroy such methods has been added.  See EVP_MD_meth_new(3) and\n   EVP_CIPHER_meth_new(3) for documentation.\n\n   Additional changes:\n   1) `EVP_MD_CTX_cleanup()`, `EVP_CIPHER_CTX_cleanup()` and\n      `HMAC_CTX_cleanup()` were removed. `HMAC_CTX_reset()` and\n      `EVP_MD_CTX_reset()` should be called instead to reinitialise\n      an already created structure.\n   2) For consistency with the majority of our object creators and\n      destructors, `EVP_MD_CTX_(create|destroy)` were renamed to\n      `EVP_MD_CTX_(new|free)`.  The old names are retained as macros\n      for deprecated builds.\n\n   *Richard Levitte*\n\n * Added ASYNC support. Libcrypto now includes the async sub-library to enable\n   cryptographic operations to be performed asynchronously as long as an\n   asynchronous capable engine is used. See the ASYNC_start_job() man page for\n   further details. Libssl has also had this capability integrated with the\n   introduction of the new mode SSL_MODE_ASYNC and associated error\n   SSL_ERROR_WANT_ASYNC. See the SSL_CTX_set_mode() and SSL_get_error() man\n   pages. This work was developed in partnership with Intel Corp.\n\n   *Matt Caswell*\n\n * SSL_{CTX_}set_ecdh_auto() has been removed and ECDH is support is\n   always enabled now.  If you want to disable the support you should\n   exclude it using the list of supported ciphers. This also means that the\n   \"-no_ecdhe\" option has been removed from s_server.\n\n   *Kurt Roeckx*\n\n * SSL_{CTX}_set_tmp_ecdh() which can set 1 EC curve now internally calls\n   SSL_{CTX_}set1_curves() which can set a list.\n\n   *Kurt Roeckx*\n\n * Remove support for SSL_{CTX_}set_tmp_ecdh_callback().  You should set the\n   curve you want to support using SSL_{CTX_}set1_curves().\n\n   *Kurt Roeckx*\n\n * State machine rewrite. The state machine code has been significantly\n   refactored in order to remove much duplication of code and solve issues\n   with the old code (see [ssl/statem/README.md](ssl/statem/README.md) for\n   further details). This change does have some associated API changes.\n   Notably the SSL_state() function has been removed and replaced by\n   SSL_get_state which now returns an \"OSSL_HANDSHAKE_STATE\" instead of an int.\n   SSL_set_state() has been removed altogether. The previous handshake states\n   defined in ssl.h and ssl3.h have also been removed.\n\n   *Matt Caswell*\n\n * All instances of the string \"ssleay\" in the public API were replaced\n   with OpenSSL (case-matching; e.g., OPENSSL_VERSION for #define's)\n   Some error codes related to internal RSA_eay API's were renamed.\n\n   *Rich Salz*\n\n * The demo files in crypto/threads were moved to demo/threads.\n\n   *Rich Salz*\n\n * Removed obsolete engines: 4758cca, aep, atalla, cswift, nuron, gmp,\n   sureware and ubsec.\n\n   *Matt Caswell, Rich Salz*\n\n * New ASN.1 embed macro.\n\n   New ASN.1 macro ASN1_EMBED. This is the same as ASN1_SIMPLE except the\n   structure is not allocated: it is part of the parent. That is instead of\n\n           FOO *x;\n\n   it must be:\n\n           FOO x;\n\n   This reduces memory fragmentation and make it impossible to accidentally\n   set a mandatory field to NULL.\n\n   This currently only works for some fields specifically a SEQUENCE, CHOICE,\n   or ASN1_STRING type which is part of a parent SEQUENCE. Since it is\n   equivalent to ASN1_SIMPLE it cannot be tagged, OPTIONAL, SET OF or\n   SEQUENCE OF.\n\n   *Steve Henson*\n\n * Remove EVP_CHECK_DES_KEY, a compile-time option that never compiled.\n\n   *Emilia Käsper*\n\n * Removed DES and RC4 ciphersuites from DEFAULT. Also removed RC2 although\n   in 1.0.2 EXPORT was already removed and the only RC2 ciphersuite is also\n   an EXPORT one. COMPLEMENTOFDEFAULT has been updated accordingly to add\n   DES and RC4 ciphersuites.\n\n   *Matt Caswell*\n\n * Rewrite EVP_DecodeUpdate (base64 decoding) to fix several bugs.\n   This changes the decoding behaviour for some invalid messages,\n   though the change is mostly in the more lenient direction, and\n   legacy behaviour is preserved as much as possible.\n\n   *Emilia Käsper*\n\n * Fix no-stdio build.\n   *David Woodhouse <David.Woodhouse@intel.com> and also*\n   *Ivan Nestlerode <ivan.nestlerode@sonos.com>*\n\n * New testing framework\n   The testing framework has been largely rewritten and is now using\n   perl and the perl modules Test::Harness and an extended variant of\n   Test::More called OpenSSL::Test to do its work.  All test scripts in\n   test/ have been rewritten into test recipes, and all direct calls to\n   executables in test/Makefile have become individual recipes using the\n   simplified testing OpenSSL::Test::Simple.\n\n   For documentation on our testing modules, do:\n\n           perldoc test/testlib/OpenSSL/Test/Simple.pm\n           perldoc test/testlib/OpenSSL/Test.pm\n\n   *Richard Levitte*\n\n * Revamped memory debug; only -DCRYPTO_MDEBUG and -DCRYPTO_MDEBUG_ABORT\n   are used; the latter aborts on memory leaks (usually checked on exit).\n   Some undocumented \"set malloc, etc., hooks\" functions were removed\n   and others were changed.  All are now documented.\n\n   *Rich Salz*\n\n * In DSA_generate_parameters_ex, if the provided seed is too short,\n   return an error\n\n   *Rich Salz and Ismo Puustinen <ismo.puustinen@intel.com>*\n\n * Rewrite PSK to support ECDHE_PSK, DHE_PSK and RSA_PSK. Add ciphersuites\n   from RFC4279, RFC4785, RFC5487, RFC5489.\n\n   Thanks to Christian J. Dietrich and Giuseppe D'Angelo for the\n   original RSA_PSK patch.\n\n   *Steve Henson*\n\n * Dropped support for the SSL3_FLAGS_DELAY_CLIENT_FINISHED flag. This SSLeay\n   era flag was never set throughout the codebase (only read). Also removed\n   SSL3_FLAGS_POP_BUFFER which was only used if\n   SSL3_FLAGS_DELAY_CLIENT_FINISHED was also set.\n\n   *Matt Caswell*\n\n * Changed the default name options in the \"ca\", \"crl\", \"req\" and \"x509\"\n   to be \"oneline\" instead of \"compat\".\n\n   *Richard Levitte*\n\n * Remove SSL_OP_TLS_BLOCK_PADDING_BUG. This is SSLeay legacy, we're\n   not aware of clients that still exhibit this bug, and the workaround\n   hasn't been working properly for a while.\n\n   *Emilia Käsper*\n\n * The return type of BIO_number_read() and BIO_number_written() as well as\n   the corresponding num_read and num_write members in the BIO structure has\n   changed from unsigned long to uint64_t. On platforms where an unsigned\n   long is 32 bits (e.g. Windows) these counters could overflow if >4Gb is\n   transferred.\n\n   *Matt Caswell*\n\n * Given the pervasive nature of TLS extensions it is inadvisable to run\n   OpenSSL without support for them. It also means that maintaining\n   the OPENSSL_NO_TLSEXT option within the code is very invasive (and probably\n   not well tested). Therefore, the OPENSSL_NO_TLSEXT option has been removed.\n\n   *Matt Caswell*\n\n * Removed support for the two export grade static DH ciphersuites\n   EXP-DH-RSA-DES-CBC-SHA and EXP-DH-DSS-DES-CBC-SHA. These two ciphersuites\n   were newly added (along with a number of other static DH ciphersuites) to\n   1.0.2. However the two export ones have *never* worked since they were\n   introduced. It seems strange in any case to be adding new export\n   ciphersuites, and given \"logjam\" it also does not seem correct to fix them.\n\n   *Matt Caswell*\n\n * Version negotiation has been rewritten. In particular SSLv23_method(),\n   SSLv23_client_method() and SSLv23_server_method() have been deprecated,\n   and turned into macros which simply call the new preferred function names\n   TLS_method(), TLS_client_method() and TLS_server_method(). All new code\n   should use the new names instead. Also as part of this change the ssl23.h\n   header file has been removed.\n\n   *Matt Caswell*\n\n * Support for Kerberos ciphersuites in TLS (RFC2712) has been removed. This\n   code and the associated standard is no longer considered fit-for-purpose.\n\n   *Matt Caswell*\n\n * RT2547 was closed.  When generating a private key, try to make the\n   output file readable only by the owner.  This behavior change might\n   be noticeable when interacting with other software.\n\n * Documented all exdata functions.  Added CRYPTO_free_ex_index.\n   Added a test.\n\n   *Rich Salz*\n\n * Added HTTP GET support to the ocsp command.\n\n   *Rich Salz*\n\n * Changed default digest for the dgst and enc commands from MD5 to\n   sha256\n\n   *Rich Salz*\n\n * RAND_pseudo_bytes has been deprecated. Users should use RAND_bytes instead.\n\n   *Matt Caswell*\n\n * Added support for TLS extended master secret from\n   draft-ietf-tls-session-hash-03.txt. Thanks for Alfredo Pironti for an\n   initial patch which was a great help during development.\n\n   *Steve Henson*\n\n * All libssl internal structures have been removed from the public header\n   files, and the OPENSSL_NO_SSL_INTERN option has been removed (since it is\n   now redundant). Users should not attempt to access internal structures\n   directly. Instead they should use the provided API functions.\n\n   *Matt Caswell*\n\n * config has been changed so that by default OPENSSL_NO_DEPRECATED is used.\n   Access to deprecated functions can be re-enabled by running config with\n   \"enable-deprecated\". In addition applications wishing to use deprecated\n   functions must define OPENSSL_USE_DEPRECATED. Note that this new behaviour\n   will, by default, disable some transitive includes that previously existed\n   in the header files (e.g. ec.h will no longer, by default, include bn.h)\n\n   *Matt Caswell*\n\n * Added support for OCB mode. OpenSSL has been granted a patent license\n   compatible with the OpenSSL license for use of OCB. Details are available\n   at <https://www.openssl.org/source/OCB-patent-grant-OpenSSL.pdf>. Support\n   for OCB can be removed by calling config with no-ocb.\n\n   *Matt Caswell*\n\n * SSLv2 support has been removed.  It still supports receiving an SSLv2\n   compatible client hello.\n\n   *Kurt Roeckx*\n\n * Increased the minimal RSA keysize from 256 to 512 bits [Rich Salz],\n   done while fixing the error code for the key-too-small case.\n\n   *Annie Yousar <a.yousar@informatik.hu-berlin.de>*\n\n * CA.sh has been removed; use CA.pl instead.\n\n   *Rich Salz*\n\n * Removed old DES API.\n\n   *Rich Salz*\n\n * Remove various unsupported platforms:\n      Sony NEWS4\n      BEOS and BEOS_R5\n      NeXT\n      SUNOS\n      MPE/iX\n      Sinix/ReliantUNIX RM400\n      DGUX\n      NCR\n      Tandem\n      Cray\n      16-bit platforms such as WIN16\n\n   *Rich Salz*\n\n * Clean up OPENSSL_NO_xxx #define's\n   - Use setbuf() and remove OPENSSL_NO_SETVBUF_IONBF\n   - Rename OPENSSL_SYSNAME_xxx to OPENSSL_SYS_xxx\n   - OPENSSL_NO_EC{DH,DSA} merged into OPENSSL_NO_EC\n   - OPENSSL_NO_RIPEMD160, OPENSSL_NO_RIPEMD merged into OPENSSL_NO_RMD160\n   - OPENSSL_NO_FP_API merged into OPENSSL_NO_STDIO\n   - Remove OPENSSL_NO_BIO OPENSSL_NO_BUFFER OPENSSL_NO_CHAIN_VERIFY\n     OPENSSL_NO_EVP OPENSSL_NO_FIPS_ERR OPENSSL_NO_HASH_COMP\n     OPENSSL_NO_LHASH OPENSSL_NO_OBJECT OPENSSL_NO_SPEED OPENSSL_NO_STACK\n     OPENSSL_NO_X509 OPENSSL_NO_X509_VERIFY\n   - Remove MS_STATIC; it's a relic from platforms <32 bits.\n\n   *Rich Salz*\n\n * Cleaned up dead code\n     Remove all but one '#ifdef undef' which is to be looked at.\n\n   *Rich Salz*\n\n * Clean up calling of xxx_free routines.\n      Just like free(), fix most of the xxx_free routines to accept\n      NULL.  Remove the non-null checks from callers.  Save much code.\n\n   *Rich Salz*\n\n * Add secure heap for storage of private keys (when possible).\n   Add BIO_s_secmem(), CBIGNUM, etc.\n   Contributed by Akamai Technologies under our Corporate CLA.\n\n   *Rich Salz*\n\n * Experimental support for a new, fast, unbiased prime candidate generator,\n   bn_probable_prime_dh_coprime(). Not currently used by any prime generator.\n\n   *Felix Laurie von Massenbach <felix@erbridge.co.uk>*\n\n * New output format NSS in the sess_id command line tool. This allows\n   exporting the session id and the master key in NSS keylog format.\n\n   *Martin Kaiser <martin@kaiser.cx>*\n\n * Harmonize version and its documentation. -f flag is used to display\n   compilation flags.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix eckey_priv_encode so it immediately returns an error upon a failure\n   in i2d_ECPrivateKey.  Thanks to Ted Unangst for feedback on this issue.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix some double frees. These are not thought to be exploitable.\n\n   *mancha <mancha1@zoho.com>*\n\n * A missing bounds check in the handling of the TLS heartbeat extension\n   can be used to reveal up to 64k of memory to a connected client or\n   server.\n\n   Thanks for Neel Mehta of Google Security for discovering this bug and to\n   Adam Langley <agl@chromium.org> and Bodo Moeller <bmoeller@acm.org> for\n   preparing the fix ([CVE-2014-0160])\n\n   *Adam Langley, Bodo Moeller*\n\n * Fix for the attack described in the paper \"Recovering OpenSSL\n   ECDSA Nonces Using the FLUSH+RELOAD Cache Side-channel Attack\"\n   by Yuval Yarom and Naomi Benger. Details can be obtained from:\n   <http://eprint.iacr.org/2014/140>\n\n   Thanks to Yuval Yarom and Naomi Benger for discovering this\n   flaw and to Yuval Yarom for supplying a fix ([CVE-2014-0076])\n\n   *Yuval Yarom and Naomi Benger*\n\n * Use algorithm specific chains in SSL_CTX_use_certificate_chain_file():\n   this fixes a limitation in previous versions of OpenSSL.\n\n   *Steve Henson*\n\n * Experimental encrypt-then-mac support.\n\n   Experimental support for encrypt then mac from\n   draft-gutmann-tls-encrypt-then-mac-02.txt\n\n   To enable it set the appropriate extension number (0x42 for the test\n   server) using e.g. -DTLSEXT_TYPE_encrypt_then_mac=0x42\n\n   For non-compliant peers (i.e. just about everything) this should have no\n   effect.\n\n   WARNING: EXPERIMENTAL, SUBJECT TO CHANGE.\n\n   *Steve Henson*\n\n * Add EVP support for key wrapping algorithms, to avoid problems with\n   existing code the flag EVP_CIPHER_CTX_WRAP_ALLOW has to be set in\n   the EVP_CIPHER_CTX or an error is returned. Add AES and DES3 wrap\n   algorithms and include tests cases.\n\n   *Steve Henson*\n\n * Extend CMS code to support RSA-PSS signatures and RSA-OAEP for\n   enveloped data.\n\n   *Steve Henson*\n\n * Extended RSA OAEP support via EVP_PKEY API. Options to specify digest,\n   MGF1 digest and OAEP label.\n\n   *Steve Henson*\n\n * Make openssl verify return errors.\n\n   *Chris Palmer <palmer@google.com> and Ben Laurie*\n\n * New function ASN1_TIME_diff to calculate the difference between two\n   ASN1_TIME structures or one structure and the current time.\n\n   *Steve Henson*\n\n * Update fips_test_suite to support multiple command line options. New\n   test to induce all self test errors in sequence and check expected\n   failures.\n\n   *Steve Henson*\n\n * Add FIPS_{rsa,dsa,ecdsa}_{sign,verify} functions which digest and\n   sign or verify all in one operation.\n\n   *Steve Henson*\n\n * Add fips_algvs: a multicall fips utility incorporating all the algorithm\n   test programs and fips_test_suite. Includes functionality to parse\n   the minimal script output of fipsalgest.pl directly.\n\n   *Steve Henson*\n\n * Add authorisation parameter to FIPS_module_mode_set().\n\n   *Steve Henson*\n\n * Add FIPS selftest for ECDH algorithm using P-224 and B-233 curves.\n\n   *Steve Henson*\n\n * Use separate DRBG fields for internal and external flags. New function\n   FIPS_drbg_health_check() to perform on demand health checking. Add\n   generation tests to fips_test_suite with reduced health check interval to\n   demonstrate periodic health checking. Add \"nodh\" option to\n   fips_test_suite to skip very slow DH test.\n\n   *Steve Henson*\n\n * New function FIPS_get_cipherbynid() to lookup FIPS supported ciphers\n   based on NID.\n\n   *Steve Henson*\n\n * More extensive health check for DRBG checking many more failure modes.\n   New function FIPS_selftest_drbg_all() to handle every possible DRBG\n   combination: call this in fips_test_suite.\n\n   *Steve Henson*\n\n * Add support for canonical generation of DSA parameter 'g'. See\n   FIPS 186-3 A.2.3.\n\n * Add support for HMAC DRBG from SP800-90. Update DRBG algorithm test and\n   POST to handle HMAC cases.\n\n   *Steve Henson*\n\n * Add functions FIPS_module_version() and FIPS_module_version_text()\n   to return numerical and string versions of the FIPS module number.\n\n   *Steve Henson*\n\n * Rename FIPS_mode_set and FIPS_mode to FIPS_module_mode_set and\n   FIPS_module_mode. FIPS_mode and FIPS_mode_set will be implemented\n   outside the validated module in the FIPS capable OpenSSL.\n\n   *Steve Henson*\n\n * Minor change to DRBG entropy callback semantics. In some cases\n   there is no multiple of the block length between min_len and\n   max_len. Allow the callback to return more than max_len bytes\n   of entropy but discard any extra: it is the callback's responsibility\n   to ensure that the extra data discarded does not impact the\n   requested amount of entropy.\n\n   *Steve Henson*\n\n * Add PRNG security strength checks to RSA, DSA and ECDSA using\n   information in FIPS186-3, SP800-57 and SP800-131A.\n\n   *Steve Henson*\n\n * CCM support via EVP. Interface is very similar to GCM case except we\n   must supply all data in one chunk (i.e. no update, final) and the\n   message length must be supplied if AAD is used. Add algorithm test\n   support.\n\n   *Steve Henson*\n\n * Initial version of POST overhaul. Add POST callback to allow the status\n   of POST to be monitored and/or failures induced. Modify fips_test_suite\n   to use callback. Always run all selftests even if one fails.\n\n   *Steve Henson*\n\n * XTS support including algorithm test driver in the fips_gcmtest program.\n   Note: this does increase the maximum key length from 32 to 64 bytes but\n   there should be no binary compatibility issues as existing applications\n   will never use XTS mode.\n\n   *Steve Henson*\n\n * Extensive reorganisation of FIPS PRNG behaviour. Remove all dependencies\n   to OpenSSL RAND code and replace with a tiny FIPS RAND API which also\n   performs algorithm blocking for unapproved PRNG types. Also do not\n   set PRNG type in FIPS_mode_set(): leave this to the application.\n   Add default OpenSSL DRBG handling: sets up FIPS PRNG and seeds with\n   the standard OpenSSL PRNG: set additional data to a date time vector.\n\n   *Steve Henson*\n\n * Rename old X9.31 PRNG functions of the form `FIPS_rand*` to `FIPS_x931*`.\n   This shouldn't present any incompatibility problems because applications\n   shouldn't be using these directly and any that are will need to rethink\n   anyway as the X9.31 PRNG is now deprecated by FIPS 140-2\n\n   *Steve Henson*\n\n * Extensive self tests and health checking required by SP800-90 DRBG.\n   Remove strength parameter from FIPS_drbg_instantiate and always\n   instantiate at maximum supported strength.\n\n   *Steve Henson*\n\n * Add ECDH code to fips module and fips_ecdhvs for primitives only testing.\n\n   *Steve Henson*\n\n * New algorithm test program fips_dhvs to handle DH primitives only testing.\n\n   *Steve Henson*\n\n * New function DH_compute_key_padded() to compute a DH key and pad with\n   leading zeroes if needed: this complies with SP800-56A et al.\n\n   *Steve Henson*\n\n * Initial implementation of SP800-90 DRBGs for Hash and CTR. Not used by\n   anything, incomplete, subject to change and largely untested at present.\n\n   *Steve Henson*\n\n * Modify fipscanisteronly build option to only build the necessary object\n   files by filtering FIPS_EX_OBJ through a perl script in crypto/Makefile.\n\n   *Steve Henson*\n\n * Add experimental option FIPSSYMS to give all symbols in\n   fipscanister.o and FIPS or fips prefix. This will avoid\n   conflicts with future versions of OpenSSL. Add perl script\n   util/fipsas.pl to preprocess assembly language source files\n   and rename any affected symbols.\n\n   *Steve Henson*\n\n * Add selftest checks and algorithm block of non-fips algorithms in\n   FIPS mode. Remove DES2 from selftests.\n\n   *Steve Henson*\n\n * Add ECDSA code to fips module. Add tiny fips_ecdsa_check to just\n   return internal method without any ENGINE dependencies. Add new\n   tiny fips sign and verify functions.\n\n   *Steve Henson*\n\n * New build option no-ec2m to disable characteristic 2 code.\n\n   *Steve Henson*\n\n * New build option \"fipscanisteronly\". This only builds fipscanister.o\n   and (currently) associated fips utilities. Uses the file Makefile.fips\n   instead of Makefile.org as the prototype.\n\n   *Steve Henson*\n\n * Add some FIPS mode restrictions to GCM. Add internal IV generator.\n   Update fips_gcmtest to use IV generator.\n\n   *Steve Henson*\n\n * Initial, experimental EVP support for AES-GCM. AAD can be input by\n   setting output buffer to NULL. The `*Final` function must be\n   called although it will not retrieve any additional data. The tag\n   can be set or retrieved with a ctrl. The IV length is by default 12\n   bytes (96 bits) but can be set to an alternative value. If the IV\n   length exceeds the maximum IV length (currently 16 bytes) it cannot be\n   set before the key.\n\n   *Steve Henson*\n\n * New flag in ciphers: EVP_CIPH_FLAG_CUSTOM_CIPHER. This means the\n   underlying do_cipher function handles all cipher semantics itself\n   including padding and finalisation. This is useful if (for example)\n   an ENGINE cipher handles block padding itself. The behaviour of\n   do_cipher is subtly changed if this flag is set: the return value\n   is the number of characters written to the output buffer (zero is\n   no longer an error code) or a negative error code. Also if the\n   input buffer is NULL and length 0 finalisation should be performed.\n\n   *Steve Henson*\n\n * If a candidate issuer certificate is already part of the constructed\n   path ignore it: new debug notification X509_V_ERR_PATH_LOOP for this case.\n\n   *Steve Henson*\n\n * Improve forward-security support: add functions\n\n           void SSL_CTX_set_not_resumable_session_callback(\n                    SSL_CTX *ctx, int (*cb)(SSL *ssl, int is_forward_secure))\n           void SSL_set_not_resumable_session_callback(\n                    SSL *ssl, int (*cb)(SSL *ssl, int is_forward_secure))\n\n   for use by SSL/TLS servers; the callback function will be called whenever a\n   new session is created, and gets to decide whether the session may be\n   cached to make it resumable (return 0) or not (return 1).  (As by the\n   SSL/TLS protocol specifications, the session_id sent by the server will be\n   empty to indicate that the session is not resumable; also, the server will\n   not generate RFC 4507 (RFC 5077) session tickets.)\n\n   A simple reasonable callback implementation is to return is_forward_secure.\n   This parameter will be set to 1 or 0 depending on the ciphersuite selected\n   by the SSL/TLS server library, indicating whether it can provide forward\n   security.\n\n   *Emilia Käsper <emilia.kasper@esat.kuleuven.be> (Google)*\n\n * New -verify_name option in command line utilities to set verification\n   parameters by name.\n\n   *Steve Henson*\n\n * Initial CMAC implementation. WARNING: EXPERIMENTAL, API MAY CHANGE.\n   Add CMAC pkey methods.\n\n   *Steve Henson*\n\n * Experimental renegotiation in s_server -www mode. If the client\n   browses /reneg connection is renegotiated. If /renegcert it is\n   renegotiated requesting a certificate.\n\n   *Steve Henson*\n\n * Add an \"external\" session cache for debugging purposes to s_server. This\n   should help trace issues which normally are only apparent in deployed\n   multi-process servers.\n\n   *Steve Henson*\n\n * Extensive audit of libcrypto with DEBUG_UNUSED. Fix many cases where\n   return value is ignored. NB. The functions RAND_add(), RAND_seed(),\n   BIO_set_cipher() and some obscure PEM functions were changed so they\n   can now return an error. The RAND changes required a change to the\n   RAND_METHOD structure.\n\n   *Steve Henson*\n\n * New macro `__owur` for \"OpenSSL Warn Unused Result\". This makes use of\n   a gcc attribute to warn if the result of a function is ignored. This\n   is enable if DEBUG_UNUSED is set. Add to several functions in evp.h\n   whose return value is often ignored.\n\n   *Steve Henson*\n\n * New -noct, -requestct, -requirect and -ctlogfile options for s_client.\n   These allow SCTs (signed certificate timestamps) to be requested and\n   validated when establishing a connection.\n\n   *Rob Percival <robpercival@google.com>*\n\nOpenSSL 1.0.2\n-------------\n\n### Changes between 1.0.2s and 1.0.2t [10 Sep 2019]\n\n * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n   used even when parsing explicit parameters, when loading a encoded key\n   or calling `EC_GROUP_new_from_ecpkparameters()`/\n   `EC_GROUP_new_from_ecparameters()`.\n   This prevents bypass of security hardening and performance gains,\n   especially for curves with specialized EC_METHODs.\n   By default, if a key encoded with explicit parameters is loaded and later\n   encoded, the output is still encoded with explicit parameters, even if\n   internally a \"named\" EC_GROUP is used for computation.\n\n   *Nicola Tuveri*\n\n * Compute ECC cofactors if not provided during EC_GROUP construction. Before\n   this change, EC_GROUP_set_generator would accept order and/or cofactor as\n   NULL. After this change, only the cofactor parameter can be NULL. It also\n   does some minimal sanity checks on the passed order.\n   ([CVE-2019-1547])\n\n   *Billy Bob Brumley*\n\n * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey.\n   An attack is simple, if the first CMS_recipientInfo is valid but the\n   second CMS_recipientInfo is chosen ciphertext. If the second\n   recipientInfo decodes to PKCS #1 v1.5 form plaintext, the correct\n   encryption key will be replaced by garbage, and the message cannot be\n   decoded, but if the RSA decryption fails, the correct encryption key is\n   used and the recipient will not notice the attack.\n   As a work around for this potential attack the length of the decrypted\n   key must be equal to the cipher default key length, in case the\n   certificate is not given and all recipientInfo are tried out.\n   The old behaviour can be re-enabled in the CMS code by setting the\n   CMS_DEBUG_DECRYPT flag.\n   ([CVE-2019-1563])\n\n   *Bernd Edlinger*\n\n * Document issue with installation paths in diverse Windows builds\n\n   '/usr/local/ssl' is an unsafe prefix for location to install OpenSSL\n   binaries and run-time config file.\n   ([CVE-2019-1552])\n\n   *Richard Levitte*\n\n### Changes between 1.0.2r and 1.0.2s [28 May 2019]\n\n * Change the default RSA, DSA and DH size to 2048 bit instead of 1024.\n   This changes the size when using the `genpkey` command when no size is given.\n   It fixes an omission in earlier changes that changed all RSA, DSA and DH\n   generation commands to use 2048 bits by default.\n\n   *Kurt Roeckx*\n\n * Add FIPS support for Android Arm 64-bit\n\n   Support for Android Arm 64-bit was added to the OpenSSL FIPS Object\n   Module in Version 2.0.10. For some reason, the corresponding target\n   'android64-aarch64' was missing OpenSSL 1.0.2, whence it could not be\n   built with FIPS support on Android Arm 64-bit. This omission has been\n   fixed.\n\n   *Matthias St. Pierre*\n\n### Changes between 1.0.2q and 1.0.2r [26 Feb 2019]\n\n * 0-byte record padding oracle\n\n   If an application encounters a fatal protocol error and then calls\n   SSL_shutdown() twice (once to send a close_notify, and once to receive one)\n   then OpenSSL can respond differently to the calling application if a 0 byte\n   record is received with invalid padding compared to if a 0 byte record is\n   received with an invalid MAC. If the application then behaves differently\n   based on that in a way that is detectable to the remote peer, then this\n   amounts to a padding oracle that could be used to decrypt data.\n\n   In order for this to be exploitable \"non-stitched\" ciphersuites must be in\n   use. Stitched ciphersuites are optimised implementations of certain\n   commonly used ciphersuites. Also the application must call SSL_shutdown()\n   twice even if a protocol error has occurred (applications should not do\n   this but some do anyway).\n\n   This issue was discovered by Juraj Somorovsky, Robert Merget and Nimrod\n   Aviram, with additional investigation by Steven Collison and Andrew\n   Hourselt. It was reported to OpenSSL on 10th December 2018.\n   ([CVE-2019-1559])\n\n   *Matt Caswell*\n\n * Move strictness check from EVP_PKEY_asn1_new() to EVP_PKEY_asn1_add0().\n\n   *Richard Levitte*\n\n### Changes between 1.0.2p and 1.0.2q [20 Nov 2018]\n\n * Microarchitecture timing vulnerability in ECC scalar multiplication\n\n   OpenSSL ECC scalar multiplication, used in e.g. ECDSA and ECDH, has been\n   shown to be vulnerable to a microarchitecture timing side channel attack.\n   An attacker with sufficient access to mount local timing attacks during\n   ECDSA signature generation could recover the private key.\n\n   This issue was reported to OpenSSL on 26th October 2018 by Alejandro\n   Cabrera Aldaya, Billy Brumley, Sohaib ul Hassan, Cesar Pereida Garcia and\n   Nicola Tuveri.\n   ([CVE-2018-5407])\n\n   *Billy Brumley*\n\n * Timing vulnerability in DSA signature generation\n\n   The OpenSSL DSA signature algorithm has been shown to be vulnerable to a\n   timing side channel attack. An attacker could use variations in the signing\n   algorithm to recover the private key.\n\n   This issue was reported to OpenSSL on 16th October 2018 by Samuel Weiser.\n   ([CVE-2018-0734])\n\n   *Paul Dale*\n\n * Resolve a compatibility issue in EC_GROUP handling with the FIPS Object\n   Module, accidentally introduced while backporting security fixes from the\n   development branch and hindering the use of ECC in FIPS mode.\n\n   *Nicola Tuveri*\n\n### Changes between 1.0.2o and 1.0.2p [14 Aug 2018]\n\n * Client DoS due to large DH parameter\n\n   During key agreement in a TLS handshake using a DH(E) based ciphersuite a\n   malicious server can send a very large prime value to the client. This will\n   cause the client to spend an unreasonably long period of time generating a\n   key for this prime resulting in a hang until the client has finished. This\n   could be exploited in a Denial Of Service attack.\n\n   This issue was reported to OpenSSL on 5th June 2018 by Guido Vranken\n   ([CVE-2018-0732])\n\n   *Guido Vranken*\n\n * Cache timing vulnerability in RSA Key Generation\n\n   The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to\n   a cache timing side channel attack. An attacker with sufficient access to\n   mount cache timing attacks during the RSA key generation process could\n   recover the private key.\n\n   This issue was reported to OpenSSL on 4th April 2018 by Alejandro Cabrera\n   Aldaya, Billy Brumley, Cesar Pereida Garcia and Luis Manuel Alvarez Tapia.\n   ([CVE-2018-0737])\n\n   *Billy Brumley*\n\n * Make EVP_PKEY_asn1_new() a bit stricter about its input.  A NULL pem_str\n   parameter is no longer accepted, as it leads to a corrupt table.  NULL\n   pem_str is reserved for alias entries only.\n\n   *Richard Levitte*\n\n * Revert blinding in ECDSA sign and instead make problematic addition\n   length-invariant. Switch even to fixed-length Montgomery multiplication.\n\n   *Andy Polyakov*\n\n * Change generating and checking of primes so that the error rate of not\n   being prime depends on the intended use based on the size of the input.\n   For larger primes this will result in more rounds of Miller-Rabin.\n   The maximal error rate for primes with more than 1080 bits is lowered\n   to 2^-128.\n\n   *Kurt Roeckx, Annie Yousar*\n\n * Increase the number of Miller-Rabin rounds for DSA key generating to 64.\n\n   *Kurt Roeckx*\n\n * Add blinding to ECDSA and DSA signatures to protect against side channel\n   attacks discovered by Keegan Ryan (NCC Group).\n\n   *Matt Caswell*\n\n * When unlocking a pass phrase protected PEM file or PKCS#8 container, we\n   now allow empty (zero character) pass phrases.\n\n   *Richard Levitte*\n\n * Certificate time validation (X509_cmp_time) enforces stricter\n   compliance with RFC 5280. Fractional seconds and timezone offsets\n   are no longer allowed.\n\n   *Emilia Käsper*\n\n### Changes between 1.0.2n and 1.0.2o [27 Mar 2018]\n\n * Constructed ASN.1 types with a recursive definition could exceed the stack\n\n   Constructed ASN.1 types with a recursive definition (such as can be found\n   in PKCS7) could eventually exceed the stack given malicious input with\n   excessive recursion. This could result in a Denial Of Service attack. There\n   are no such structures used within SSL/TLS that come from untrusted sources\n   so this is considered safe.\n\n   This issue was reported to OpenSSL on 4th January 2018 by the OSS-fuzz\n   project.\n   ([CVE-2018-0739])\n\n   *Matt Caswell*\n\n### Changes between 1.0.2m and 1.0.2n [7 Dec 2017]\n\n * Read/write after SSL object in error state\n\n   OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\"\n   mechanism. The intent was that if a fatal error occurred during a handshake\n   then OpenSSL would move into the error state and would immediately fail if\n   you attempted to continue the handshake. This works as designed for the\n   explicit handshake functions (SSL_do_handshake(), SSL_accept() and\n   SSL_connect()), however due to a bug it does not work correctly if\n   SSL_read() or SSL_write() is called directly. In that scenario, if the\n   handshake fails then a fatal error will be returned in the initial function\n   call. If SSL_read()/SSL_write() is subsequently called by the application\n   for the same SSL object then it will succeed and the data is passed without\n   being decrypted/encrypted directly from the SSL/TLS record layer.\n\n   In order to exploit this issue an application bug would have to be present\n   that resulted in a call to SSL_read()/SSL_write() being issued after having\n   already received a fatal error.\n\n   This issue was reported to OpenSSL by David Benjamin (Google).\n   ([CVE-2017-3737])\n\n   *Matt Caswell*\n\n * rsaz_1024_mul_avx2 overflow bug on x86_64\n\n   There is an overflow bug in the AVX2 Montgomery multiplication procedure\n   used in exponentiation with 1024-bit moduli. No EC algorithms are affected.\n   Analysis suggests that attacks against RSA and DSA as a result of this\n   defect would be very difficult to perform and are not believed likely.\n   Attacks against DH1024 are considered just feasible, because most of the\n   work necessary to deduce information about a private key may be performed\n   offline. The amount of resources required for such an attack would be\n   significant. However, for an attack on TLS to be meaningful, the server\n   would have to share the DH1024 private key among multiple clients, which is\n   no longer an option since CVE-2016-0701.\n\n   This only affects processors that support the AVX2 but not ADX extensions\n   like Intel Haswell (4th generation).\n\n   This issue was reported to OpenSSL by David Benjamin (Google). The issue\n   was originally found via the OSS-Fuzz project.\n   ([CVE-2017-3738])\n\n   *Andy Polyakov*\n\n### Changes between 1.0.2l and 1.0.2m [2 Nov 2017]\n\n * bn_sqrx8x_internal carry bug on x86_64\n\n   There is a carry propagating bug in the x86_64 Montgomery squaring\n   procedure. No EC algorithms are affected. Analysis suggests that attacks\n   against RSA and DSA as a result of this defect would be very difficult to\n   perform and are not believed likely. Attacks against DH are considered just\n   feasible (although very difficult) because most of the work necessary to\n   deduce information about a private key may be performed offline. The amount\n   of resources required for such an attack would be very significant and\n   likely only accessible to a limited number of attackers. An attacker would\n   additionally need online access to an unpatched system using the target\n   private key in a scenario with persistent DH parameters and a private\n   key that is shared between multiple clients.\n\n   This only affects processors that support the BMI1, BMI2 and ADX extensions\n   like Intel Broadwell (5th generation) and later or AMD Ryzen.\n\n   This issue was reported to OpenSSL by the OSS-Fuzz project.\n   ([CVE-2017-3736])\n\n   *Andy Polyakov*\n\n * Malformed X.509 IPAddressFamily could cause OOB read\n\n   If an X.509 certificate has a malformed IPAddressFamily extension,\n   OpenSSL could do a one-byte buffer overread. The most likely result\n   would be an erroneous display of the certificate in text format.\n\n   This issue was reported to OpenSSL by the OSS-Fuzz project.\n\n   *Rich Salz*\n\n### Changes between 1.0.2k and 1.0.2l [25 May 2017]\n\n * Have 'config' recognise 64-bit mingw and choose 'mingw64' as the target\n   platform rather than 'mingw'.\n\n   *Richard Levitte*\n\n### Changes between 1.0.2j and 1.0.2k [26 Jan 2017]\n\n * Truncated packet could crash via OOB read\n\n   If one side of an SSL/TLS path is running on a 32-bit host and a specific\n   cipher is being used, then a truncated packet can cause that host to\n   perform an out-of-bounds read, usually resulting in a crash.\n\n   This issue was reported to OpenSSL by Robert Święcki of Google.\n   ([CVE-2017-3731])\n\n   *Andy Polyakov*\n\n * BN_mod_exp may produce incorrect results on x86_64\n\n   There is a carry propagating bug in the x86_64 Montgomery squaring\n   procedure. No EC algorithms are affected. Analysis suggests that attacks\n   against RSA and DSA as a result of this defect would be very difficult to\n   perform and are not believed likely. Attacks against DH are considered just\n   feasible (although very difficult) because most of the work necessary to\n   deduce information about a private key may be performed offline. The amount\n   of resources required for such an attack would be very significant and\n   likely only accessible to a limited number of attackers. An attacker would\n   additionally need online access to an unpatched system using the target\n   private key in a scenario with persistent DH parameters and a private\n   key that is shared between multiple clients. For example this can occur by\n   default in OpenSSL DHE based SSL/TLS ciphersuites. Note: This issue is very\n   similar to CVE-2015-3193 but must be treated as a separate problem.\n\n   This issue was reported to OpenSSL by the OSS-Fuzz project.\n   ([CVE-2017-3732])\n\n   *Andy Polyakov*\n\n * Montgomery multiplication may produce incorrect results\n\n   There is a carry propagating bug in the Broadwell-specific Montgomery\n   multiplication procedure that handles input lengths divisible by, but\n   longer than 256 bits. Analysis suggests that attacks against RSA, DSA\n   and DH private keys are impossible. This is because the subroutine in\n   question is not used in operations with the private key itself and an input\n   of the attacker's direct choice. Otherwise the bug can manifest itself as\n   transient authentication and key negotiation failures or reproducible\n   erroneous outcome of public-key operations with specially crafted input.\n   Among EC algorithms only Brainpool P-512 curves are affected and one\n   presumably can attack ECDH key negotiation. Impact was not analyzed in\n   detail, because pre-requisites for attack are considered unlikely. Namely\n   multiple clients have to choose the curve in question and the server has to\n   share the private key among them, neither of which is default behaviour.\n   Even then only clients that chose the curve will be affected.\n\n   This issue was publicly reported as transient failures and was not\n   initially recognized as a security issue. Thanks to Richard Morgan for\n   providing reproducible case.\n   ([CVE-2016-7055])\n\n   *Andy Polyakov*\n\n * OpenSSL now fails if it receives an unrecognised record type in TLS1.0\n   or TLS1.1. Previously this only happened in SSLv3 and TLS1.2. This is to\n   prevent issues where no progress is being made and the peer continually\n   sends unrecognised record types, using up resources processing them.\n\n   *Matt Caswell*\n\n### Changes between 1.0.2i and 1.0.2j [26 Sep 2016]\n\n * Missing CRL sanity check\n\n   A bug fix which included a CRL sanity check was added to OpenSSL 1.1.0\n   but was omitted from OpenSSL 1.0.2i. As a result any attempt to use\n   CRLs in OpenSSL 1.0.2i will crash with a null pointer exception.\n\n   This issue only affects the OpenSSL 1.0.2i\n   ([CVE-2016-7052])\n\n   *Matt Caswell*\n\n### Changes between 1.0.2h and 1.0.2i [22 Sep 2016]\n\n * OCSP Status Request extension unbounded memory growth\n\n   A malicious client can send an excessively large OCSP Status Request\n   extension. If that client continually requests renegotiation, sending a\n   large OCSP Status Request extension each time, then there will be unbounded\n   memory growth on the server. This will eventually lead to a Denial Of\n   Service attack through memory exhaustion. Servers with a default\n   configuration are vulnerable even if they do not support OCSP. Builds using\n   the \"no-ocsp\" build time option are not affected.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6304])\n\n   *Matt Caswell*\n\n * In order to mitigate the SWEET32 attack, the DES ciphers were moved from\n   HIGH to MEDIUM.\n\n   This issue was reported to OpenSSL Karthikeyan Bhargavan and Gaetan\n   Leurent (INRIA)\n   ([CVE-2016-2183])\n\n   *Rich Salz*\n\n * OOB write in MDC2_Update()\n\n   An overflow can occur in MDC2_Update() either if called directly or\n   through the EVP_DigestUpdate() function using MDC2. If an attacker\n   is able to supply very large amounts of input data after a previous\n   call to EVP_EncryptUpdate() with a partial block then a length check\n   can overflow resulting in a heap corruption.\n\n   The amount of data needed is comparable to SIZE_MAX which is impractical\n   on most platforms.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6303])\n\n   *Stephen Henson*\n\n * Malformed SHA512 ticket DoS\n\n   If a server uses SHA512 for TLS session ticket HMAC it is vulnerable to a\n   DoS attack where a malformed ticket will result in an OOB read which will\n   ultimately crash.\n\n   The use of SHA512 in TLS session tickets is comparatively rare as it requires\n   a custom server callback and ticket lookup mechanism.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6302])\n\n   *Stephen Henson*\n\n * OOB write in BN_bn2dec()\n\n   The function BN_bn2dec() does not check the return value of BN_div_word().\n   This can cause an OOB write if an application uses this function with an\n   overly large BIGNUM. This could be a problem if an overly large certificate\n   or CRL is printed out from an untrusted source. TLS is not affected because\n   record limits will reject an oversized certificate before it is parsed.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-2182])\n\n   *Stephen Henson*\n\n * OOB read in TS_OBJ_print_bio()\n\n   The function TS_OBJ_print_bio() misuses OBJ_obj2txt(): the return value is\n   the total length the OID text representation would use and not the amount\n   of data written. This will result in OOB reads when large OIDs are\n   presented.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-2180])\n\n   *Stephen Henson*\n\n * Pointer arithmetic undefined behaviour\n\n   Avoid some undefined pointer arithmetic\n\n   A common idiom in the codebase is to check limits in the following manner:\n   \"p + len > limit\"\n\n   Where \"p\" points to some malloc'd data of SIZE bytes and\n   limit == p + SIZE\n\n   \"len\" here could be from some externally supplied data (e.g. from a TLS\n   message).\n\n   The rules of C pointer arithmetic are such that \"p + len\" is only well\n   defined where len <= SIZE. Therefore the above idiom is actually\n   undefined behaviour.\n\n   For example this could cause problems if some malloc implementation\n   provides an address for \"p\" such that \"p + len\" actually overflows for\n   values of len that are too big and therefore p + len < limit.\n\n   This issue was reported to OpenSSL by Guido Vranken\n   ([CVE-2016-2177])\n\n   *Matt Caswell*\n\n * Constant time flag not preserved in DSA signing\n\n   Operations in the DSA signing algorithm should run in constant time in\n   order to avoid side channel attacks. A flaw in the OpenSSL DSA\n   implementation means that a non-constant time codepath is followed for\n   certain operations. This has been demonstrated through a cache-timing\n   attack to be sufficient for an attacker to recover the private DSA key.\n\n   This issue was reported by César Pereida (Aalto University), Billy Brumley\n   (Tampere University of Technology), and Yuval Yarom (The University of\n   Adelaide and NICTA).\n   ([CVE-2016-2178])\n\n   *César Pereida*\n\n * DTLS buffered message DoS\n\n   In a DTLS connection where handshake messages are delivered out-of-order\n   those messages that OpenSSL is not yet ready to process will be buffered\n   for later use. Under certain circumstances, a flaw in the logic means that\n   those messages do not get removed from the buffer even though the handshake\n   has been completed. An attacker could force up to approx. 15 messages to\n   remain in the buffer when they are no longer required. These messages will\n   be cleared when the DTLS connection is closed. The default maximum size for\n   a message is 100k. Therefore, the attacker could force an additional 1500k\n   to be consumed per connection. By opening many simultaneous connections an\n   attacker could cause a DoS attack through memory exhaustion.\n\n   This issue was reported to OpenSSL by Quan Luo.\n   ([CVE-2016-2179])\n\n   *Matt Caswell*\n\n * DTLS replay protection DoS\n\n   A flaw in the DTLS replay attack protection mechanism means that records\n   that arrive for future epochs update the replay protection \"window\" before\n   the MAC for the record has been validated. This could be exploited by an\n   attacker by sending a record for the next epoch (which does not have to\n   decrypt or have a valid MAC), with a very large sequence number. This means\n   that all subsequent legitimate packets are dropped causing a denial of\n   service for a specific DTLS connection.\n\n   This issue was reported to OpenSSL by the OCAP audit team.\n   ([CVE-2016-2181])\n\n   *Matt Caswell*\n\n * Certificate message OOB reads\n\n   In OpenSSL 1.0.2 and earlier some missing message length checks can result\n   in OOB reads of up to 2 bytes beyond an allocated buffer. There is a\n   theoretical DoS risk but this has not been observed in practice on common\n   platforms.\n\n   The messages affected are client certificate, client certificate request\n   and server certificate. As a result the attack can only be performed\n   against a client or a server which enables client authentication.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6306])\n\n   *Stephen Henson*\n\n### Changes between 1.0.2g and 1.0.2h [3 May 2016]\n\n * Prevent padding oracle in AES-NI CBC MAC check\n\n   A MITM attacker can use a padding oracle attack to decrypt traffic\n   when the connection uses an AES CBC cipher and the server support\n   AES-NI.\n\n   This issue was introduced as part of the fix for Lucky 13 padding\n   attack ([CVE-2013-0169]). The padding check was rewritten to be in\n   constant time by making sure that always the same bytes are read and\n   compared against either the MAC or padding bytes. But it no longer\n   checked that there was enough data to have both the MAC and padding\n   bytes.\n\n   This issue was reported by Juraj Somorovsky using TLS-Attacker.\n\n   *Kurt Roeckx*\n\n * Fix EVP_EncodeUpdate overflow\n\n   An overflow can occur in the EVP_EncodeUpdate() function which is used for\n   Base64 encoding of binary data. If an attacker is able to supply very large\n   amounts of input data then a length check can overflow resulting in a heap\n   corruption.\n\n   Internally to OpenSSL the EVP_EncodeUpdate() function is primarily used by\n   the `PEM_write_bio*` family of functions. These are mainly used within the\n   OpenSSL command line applications, so any application which processes data\n   from an untrusted source and outputs it as a PEM file should be considered\n   vulnerable to this issue. User applications that call these APIs directly\n   with large amounts of untrusted data may also be vulnerable.\n\n   This issue was reported by Guido Vranken.\n   ([CVE-2016-2105])\n\n   *Matt Caswell*\n\n * Fix EVP_EncryptUpdate overflow\n\n   An overflow can occur in the EVP_EncryptUpdate() function. If an attacker\n   is able to supply very large amounts of input data after a previous call to\n   EVP_EncryptUpdate() with a partial block then a length check can overflow\n   resulting in a heap corruption. Following an analysis of all OpenSSL\n   internal usage of the EVP_EncryptUpdate() function all usage is one of two\n   forms. The first form is where the EVP_EncryptUpdate() call is known to be\n   the first called function after an EVP_EncryptInit(), and therefore that\n   specific call must be safe. The second form is where the length passed to\n   EVP_EncryptUpdate() can be seen from the code to be some small value and\n   therefore there is no possibility of an overflow. Since all instances are\n   one of these two forms, it is believed that there can be no overflows in\n   internal code due to this problem. It should be noted that\n   EVP_DecryptUpdate() can call EVP_EncryptUpdate() in certain code paths.\n   Also EVP_CipherUpdate() is a synonym for EVP_EncryptUpdate(). All instances\n   of these calls have also been analysed too and it is believed there are no\n   instances in internal usage where an overflow could occur.\n\n   This issue was reported by Guido Vranken.\n   ([CVE-2016-2106])\n\n   *Matt Caswell*\n\n * Prevent ASN.1 BIO excessive memory allocation\n\n   When ASN.1 data is read from a BIO using functions such as d2i_CMS_bio()\n   a short invalid encoding can cause allocation of large amounts of memory\n   potentially consuming excessive resources or exhausting memory.\n\n   Any application parsing untrusted data through d2i BIO functions is\n   affected. The memory based functions such as d2i_X509() are *not* affected.\n   Since the memory based functions are used by the TLS library, TLS\n   applications are not affected.\n\n   This issue was reported by Brian Carpenter.\n   ([CVE-2016-2109])\n\n   *Stephen Henson*\n\n * EBCDIC overread\n\n   ASN1 Strings that are over 1024 bytes can cause an overread in applications\n   using the X509_NAME_oneline() function on EBCDIC systems. This could result\n   in arbitrary stack data being returned in the buffer.\n\n   This issue was reported by Guido Vranken.\n   ([CVE-2016-2176])\n\n   *Matt Caswell*\n\n * Modify behavior of ALPN to invoke callback after SNI/servername\n   callback, such that updates to the SSL_CTX affect ALPN.\n\n   *Todd Short*\n\n * Remove LOW from the DEFAULT cipher list.  This removes singles DES from the\n   default.\n\n   *Kurt Roeckx*\n\n * Only remove the SSLv2 methods with the no-ssl2-method option. When the\n   methods are enabled and ssl2 is disabled the methods return NULL.\n\n   *Kurt Roeckx*\n\n### Changes between 1.0.2f and 1.0.2g [1 Mar 2016]\n\n* Disable weak ciphers in SSLv3 and up in default builds of OpenSSL.\n  Builds that are not configured with \"enable-weak-ssl-ciphers\" will not\n  provide any \"EXPORT\" or \"LOW\" strength ciphers.\n\n  *Viktor Dukhovni*\n\n* Disable SSLv2 default build, default negotiation and weak ciphers.  SSLv2\n  is by default disabled at build-time.  Builds that are not configured with\n  \"enable-ssl2\" will not support SSLv2.  Even if \"enable-ssl2\" is used,\n  users who want to negotiate SSLv2 via the version-flexible SSLv23_method()\n  will need to explicitly call either of:\n\n      SSL_CTX_clear_options(ctx, SSL_OP_NO_SSLv2);\n  or\n      SSL_clear_options(ssl, SSL_OP_NO_SSLv2);\n\n  as appropriate.  Even if either of those is used, or the application\n  explicitly uses the version-specific SSLv2_method() or its client and\n  server variants, SSLv2 ciphers vulnerable to exhaustive search key\n  recovery have been removed.  Specifically, the SSLv2 40-bit EXPORT\n  ciphers, and SSLv2 56-bit DES are no longer available.\n  ([CVE-2016-0800])\n\n   *Viktor Dukhovni*\n\n * Fix a double-free in DSA code\n\n   A double free bug was discovered when OpenSSL parses malformed DSA private\n   keys and could lead to a DoS attack or memory corruption for applications\n   that receive DSA private keys from untrusted sources.  This scenario is\n   considered rare.\n\n   This issue was reported to OpenSSL by Adam Langley(Google/BoringSSL) using\n   libFuzzer.\n   ([CVE-2016-0705])\n\n   *Stephen Henson*\n\n * Disable SRP fake user seed to address a server memory leak.\n\n   Add a new method SRP_VBASE_get1_by_user that handles the seed properly.\n\n   SRP_VBASE_get_by_user had inconsistent memory management behaviour.\n   In order to fix an unavoidable memory leak, SRP_VBASE_get_by_user\n   was changed to ignore the \"fake user\" SRP seed, even if the seed\n   is configured.\n\n   Users should use SRP_VBASE_get1_by_user instead. Note that in\n   SRP_VBASE_get1_by_user, caller must free the returned value. Note\n   also that even though configuring the SRP seed attempts to hide\n   invalid usernames by continuing the handshake with fake\n   credentials, this behaviour is not constant time and no strong\n   guarantees are made that the handshake is indistinguishable from\n   that of a valid user.\n   ([CVE-2016-0798])\n\n   *Emilia Käsper*\n\n * Fix BN_hex2bn/BN_dec2bn NULL pointer deref/heap corruption\n\n   In the BN_hex2bn function the number of hex digits is calculated using an\n   int value `i`. Later `bn_expand` is called with a value of `i * 4`. For\n   large values of `i` this can result in `bn_expand` not allocating any\n   memory because `i * 4` is negative. This can leave the internal BIGNUM data\n   field as NULL leading to a subsequent NULL ptr deref. For very large values\n   of `i`, the calculation `i * 4` could be a positive value smaller than `i`.\n   In this case memory is allocated to the internal BIGNUM data field, but it\n   is insufficiently sized leading to heap corruption. A similar issue exists\n   in BN_dec2bn. This could have security consequences if BN_hex2bn/BN_dec2bn\n   is ever called by user applications with very large untrusted hex/dec data.\n   This is anticipated to be a rare occurrence.\n\n   All OpenSSL internal usage of these functions use data that is not expected\n   to be untrusted, e.g. config file data or application command line\n   arguments. If user developed applications generate config file data based\n   on untrusted data then it is possible that this could also lead to security\n   consequences. This is also anticipated to be rare.\n\n   This issue was reported to OpenSSL by Guido Vranken.\n   ([CVE-2016-0797])\n\n   *Matt Caswell*\n\n * Fix memory issues in `BIO_*printf` functions\n\n   The internal `fmtstr` function used in processing a \"%s\" format string in\n   the `BIO_*printf` functions could overflow while calculating the length of a\n   string and cause an OOB read when printing very long strings.\n\n   Additionally the internal `doapr_outch` function can attempt to write to an\n   OOB memory location (at an offset from the NULL pointer) in the event of a\n   memory allocation failure. In 1.0.2 and below this could be caused where\n   the size of a buffer to be allocated is greater than INT_MAX. E.g. this\n   could be in processing a very long \"%s\" format string. Memory leaks can\n   also occur.\n\n   The first issue may mask the second issue dependent on compiler behaviour.\n   These problems could enable attacks where large amounts of untrusted data\n   is passed to the `BIO_*printf` functions. If applications use these functions\n   in this way then they could be vulnerable. OpenSSL itself uses these\n   functions when printing out human-readable dumps of ASN.1 data. Therefore\n   applications that print this data could be vulnerable if the data is from\n   untrusted sources. OpenSSL command line applications could also be\n   vulnerable where they print out ASN.1 data, or if untrusted data is passed\n   as command line arguments.\n\n   Libssl is not considered directly vulnerable. Additionally certificates etc\n   received via remote connections via libssl are also unlikely to be able to\n   trigger these issues because of message size limits enforced within libssl.\n\n   This issue was reported to OpenSSL Guido Vranken.\n   ([CVE-2016-0799])\n\n   *Matt Caswell*\n\n * Side channel attack on modular exponentiation\n\n   A side-channel attack was found which makes use of cache-bank conflicts on\n   the Intel Sandy-Bridge microarchitecture which could lead to the recovery\n   of RSA keys.  The ability to exploit this issue is limited as it relies on\n   an attacker who has control of code in a thread running on the same\n   hyper-threaded core as the victim thread which is performing decryptions.\n\n   This issue was reported to OpenSSL by Yuval Yarom, The University of\n   Adelaide and NICTA, Daniel Genkin, Technion and Tel Aviv University, and\n   Nadia Heninger, University of Pennsylvania with more information at\n   <http://cachebleed.info>.\n   ([CVE-2016-0702])\n\n   *Andy Polyakov*\n\n * Change the `req` command to generate a 2048-bit RSA/DSA key by default,\n   if no keysize is specified with default_bits. This fixes an\n   omission in an earlier change that changed all RSA/DSA key generation\n   commands to use 2048 bits by default.\n\n   *Emilia Käsper*\n\n### Changes between 1.0.2e and 1.0.2f [28 Jan 2016]\n\n * DH small subgroups\n\n   Historically OpenSSL only ever generated DH parameters based on \"safe\"\n   primes. More recently (in version 1.0.2) support was provided for\n   generating X9.42 style parameter files such as those required for RFC 5114\n   support. The primes used in such files may not be \"safe\". Where an\n   application is using DH configured with parameters based on primes that are\n   not \"safe\" then an attacker could use this fact to find a peer's private\n   DH exponent. This attack requires that the attacker complete multiple\n   handshakes in which the peer uses the same private DH exponent. For example\n   this could be used to discover a TLS server's private DH exponent if it's\n   reusing the private DH exponent or it's using a static DH ciphersuite.\n\n   OpenSSL provides the option SSL_OP_SINGLE_DH_USE for ephemeral DH (DHE) in\n   TLS. It is not on by default. If the option is not set then the server\n   reuses the same private DH exponent for the life of the server process and\n   would be vulnerable to this attack. It is believed that many popular\n   applications do set this option and would therefore not be at risk.\n\n   The fix for this issue adds an additional check where a \"q\" parameter is\n   available (as is the case in X9.42 based parameters). This detects the\n   only known attack, and is the only possible defense for static DH\n   ciphersuites. This could have some performance impact.\n\n   Additionally the SSL_OP_SINGLE_DH_USE option has been switched on by\n   default and cannot be disabled. This could have some performance impact.\n\n   This issue was reported to OpenSSL by Antonio Sanso (Adobe).\n   ([CVE-2016-0701])\n\n   *Matt Caswell*\n\n * SSLv2 doesn't block disabled ciphers\n\n   A malicious client can negotiate SSLv2 ciphers that have been disabled on\n   the server and complete SSLv2 handshakes even if all SSLv2 ciphers have\n   been disabled, provided that the SSLv2 protocol was not also disabled via\n   SSL_OP_NO_SSLv2.\n\n   This issue was reported to OpenSSL on 26th December 2015 by Nimrod Aviram\n   and Sebastian Schinzel.\n   ([CVE-2015-3197])\n\n   *Viktor Dukhovni*\n\n### Changes between 1.0.2d and 1.0.2e [3 Dec 2015]\n\n * BN_mod_exp may produce incorrect results on x86_64\n\n   There is a carry propagating bug in the x86_64 Montgomery squaring\n   procedure. No EC algorithms are affected. Analysis suggests that attacks\n   against RSA and DSA as a result of this defect would be very difficult to\n   perform and are not believed likely. Attacks against DH are considered just\n   feasible (although very difficult) because most of the work necessary to\n   deduce information about a private key may be performed offline. The amount\n   of resources required for such an attack would be very significant and\n   likely only accessible to a limited number of attackers. An attacker would\n   additionally need online access to an unpatched system using the target\n   private key in a scenario with persistent DH parameters and a private\n   key that is shared between multiple clients. For example this can occur by\n   default in OpenSSL DHE based SSL/TLS ciphersuites.\n\n   This issue was reported to OpenSSL by Hanno Böck.\n   ([CVE-2015-3193])\n\n   *Andy Polyakov*\n\n * Certificate verify crash with missing PSS parameter\n\n   The signature verification routines will crash with a NULL pointer\n   dereference if presented with an ASN.1 signature using the RSA PSS\n   algorithm and absent mask generation function parameter. Since these\n   routines are used to verify certificate signature algorithms this can be\n   used to crash any certificate verification operation and exploited in a\n   DoS attack. Any application which performs certificate verification is\n   vulnerable including OpenSSL clients and servers which enable client\n   authentication.\n\n   This issue was reported to OpenSSL by Loïc Jonas Etienne (Qnective AG).\n   ([CVE-2015-3194])\n\n   *Stephen Henson*\n\n * X509_ATTRIBUTE memory leak\n\n   When presented with a malformed X509_ATTRIBUTE structure OpenSSL will leak\n   memory. This structure is used by the PKCS#7 and CMS routines so any\n   application which reads PKCS#7 or CMS data from untrusted sources is\n   affected. SSL/TLS is not affected.\n\n   This issue was reported to OpenSSL by Adam Langley (Google/BoringSSL) using\n   libFuzzer.\n   ([CVE-2015-3195])\n\n   *Stephen Henson*\n\n * Rewrite EVP_DecodeUpdate (base64 decoding) to fix several bugs.\n   This changes the decoding behaviour for some invalid messages,\n   though the change is mostly in the more lenient direction, and\n   legacy behaviour is preserved as much as possible.\n\n   *Emilia Käsper*\n\n * In DSA_generate_parameters_ex, if the provided seed is too short,\n   return an error\n\n   *Rich Salz and Ismo Puustinen <ismo.puustinen@intel.com>*\n\n### Changes between 1.0.2c and 1.0.2d [9 Jul 2015]\n\n * Alternate chains certificate forgery\n\n   During certificate verification, OpenSSL will attempt to find an\n   alternative certificate chain if the first attempt to build such a chain\n   fails. An error in the implementation of this logic can mean that an\n   attacker could cause certain checks on untrusted certificates to be\n   bypassed, such as the CA flag, enabling them to use a valid leaf\n   certificate to act as a CA and \"issue\" an invalid certificate.\n\n   This issue was reported to OpenSSL by Adam Langley/David Benjamin\n   (Google/BoringSSL).\n\n   *Matt Caswell*\n\n### Changes between 1.0.2b and 1.0.2c [12 Jun 2015]\n\n * Fix HMAC ABI incompatibility. The previous version introduced an ABI\n   incompatibility in the handling of HMAC. The previous ABI has now been\n   restored.\n\n   *Matt Caswell*\n\n### Changes between 1.0.2a and 1.0.2b [11 Jun 2015]\n\n * Malformed ECParameters causes infinite loop\n\n   When processing an ECParameters structure OpenSSL enters an infinite loop\n   if the curve specified is over a specially malformed binary polynomial\n   field.\n\n   This can be used to perform denial of service against any\n   system which processes public keys, certificate requests or\n   certificates.  This includes TLS clients and TLS servers with\n   client authentication enabled.\n\n   This issue was reported to OpenSSL by Joseph Barr-Pixton.\n   ([CVE-2015-1788])\n\n   *Andy Polyakov*\n\n * Exploitable out-of-bounds read in X509_cmp_time\n\n   X509_cmp_time does not properly check the length of the ASN1_TIME\n   string and can read a few bytes out of bounds. In addition,\n   X509_cmp_time accepts an arbitrary number of fractional seconds in the\n   time string.\n\n   An attacker can use this to craft malformed certificates and CRLs of\n   various sizes and potentially cause a segmentation fault, resulting in\n   a DoS on applications that verify certificates or CRLs. TLS clients\n   that verify CRLs are affected. TLS clients and servers with client\n   authentication enabled may be affected if they use custom verification\n   callbacks.\n\n   This issue was reported to OpenSSL by Robert Swiecki (Google), and\n   independently by Hanno Böck.\n   ([CVE-2015-1789])\n\n   *Emilia Käsper*\n\n * PKCS7 crash with missing EnvelopedContent\n\n   The PKCS#7 parsing code does not handle missing inner EncryptedContent\n   correctly. An attacker can craft malformed ASN.1-encoded PKCS#7 blobs\n   with missing content and trigger a NULL pointer dereference on parsing.\n\n   Applications that decrypt PKCS#7 data or otherwise parse PKCS#7\n   structures from untrusted sources are affected. OpenSSL clients and\n   servers are not affected.\n\n   This issue was reported to OpenSSL by Michal Zalewski (Google).\n   ([CVE-2015-1790])\n\n   *Emilia Käsper*\n\n * CMS verify infinite loop with unknown hash function\n\n   When verifying a signedData message the CMS code can enter an infinite loop\n   if presented with an unknown hash function OID. This can be used to perform\n   denial of service against any system which verifies signedData messages using\n   the CMS code.\n   This issue was reported to OpenSSL by Johannes Bauer.\n   ([CVE-2015-1792])\n\n   *Stephen Henson*\n\n * Race condition handling NewSessionTicket\n\n   If a NewSessionTicket is received by a multi-threaded client when attempting to\n   reuse a previous ticket then a race condition can occur potentially leading to\n   a double free of the ticket data.\n   ([CVE-2015-1791])\n\n   *Matt Caswell*\n\n * Only support 256-bit or stronger elliptic curves with the\n   'ecdh_auto' setting (server) or by default (client). Of supported\n   curves, prefer P-256 (both).\n\n   *Emilia Kasper*\n\n### Changes between 1.0.2 and 1.0.2a [19 Mar 2015]\n\n * ClientHello sigalgs DoS fix\n\n   If a client connects to an OpenSSL 1.0.2 server and renegotiates with an\n   invalid signature algorithms extension a NULL pointer dereference will\n   occur. This can be exploited in a DoS attack against the server.\n\n   This issue was was reported to OpenSSL by David Ramos of Stanford\n   University.\n   ([CVE-2015-0291])\n\n   *Stephen Henson and Matt Caswell*\n\n * Multiblock corrupted pointer fix\n\n   OpenSSL 1.0.2 introduced the \"multiblock\" performance improvement. This\n   feature only applies on 64 bit x86 architecture platforms that support AES\n   NI instructions. A defect in the implementation of \"multiblock\" can cause\n   OpenSSL's internal write buffer to become incorrectly set to NULL when\n   using non-blocking IO. Typically, when the user application is using a\n   socket BIO for writing, this will only result in a failed connection.\n   However if some other BIO is used then it is likely that a segmentation\n   fault will be triggered, thus enabling a potential DoS attack.\n\n   This issue was reported to OpenSSL by Daniel Danner and Rainer Mueller.\n   ([CVE-2015-0290])\n\n   *Matt Caswell*\n\n * Segmentation fault in DTLSv1_listen fix\n\n   The DTLSv1_listen function is intended to be stateless and processes the\n   initial ClientHello from many peers. It is common for user code to loop\n   over the call to DTLSv1_listen until a valid ClientHello is received with\n   an associated cookie. A defect in the implementation of DTLSv1_listen means\n   that state is preserved in the SSL object from one invocation to the next\n   that can lead to a segmentation fault. Errors processing the initial\n   ClientHello can trigger this scenario. An example of such an error could be\n   that a DTLS1.0 only client is attempting to connect to a DTLS1.2 only\n   server.\n\n   This issue was reported to OpenSSL by Per Allansson.\n   ([CVE-2015-0207])\n\n   *Matt Caswell*\n\n * Segmentation fault in ASN1_TYPE_cmp fix\n\n   The function ASN1_TYPE_cmp will crash with an invalid read if an attempt is\n   made to compare ASN.1 boolean types. Since ASN1_TYPE_cmp is used to check\n   certificate signature algorithm consistency this can be used to crash any\n   certificate verification operation and exploited in a DoS attack. Any\n   application which performs certificate verification is vulnerable including\n   OpenSSL clients and servers which enable client authentication.\n   ([CVE-2015-0286])\n\n   *Stephen Henson*\n\n * Segmentation fault for invalid PSS parameters fix\n\n   The signature verification routines will crash with a NULL pointer\n   dereference if presented with an ASN.1 signature using the RSA PSS\n   algorithm and invalid parameters. Since these routines are used to verify\n   certificate signature algorithms this can be used to crash any\n   certificate verification operation and exploited in a DoS attack. Any\n   application which performs certificate verification is vulnerable including\n   OpenSSL clients and servers which enable client authentication.\n\n   This issue was was reported to OpenSSL by Brian Carpenter.\n   ([CVE-2015-0208])\n\n   *Stephen Henson*\n\n * ASN.1 structure reuse memory corruption fix\n\n   Reusing a structure in ASN.1 parsing may allow an attacker to cause\n   memory corruption via an invalid write. Such reuse is and has been\n   strongly discouraged and is believed to be rare.\n\n   Applications that parse structures containing CHOICE or ANY DEFINED BY\n   components may be affected. Certificate parsing (d2i_X509 and related\n   functions) are however not affected. OpenSSL clients and servers are\n   not affected.\n   ([CVE-2015-0287])\n\n   *Stephen Henson*\n\n * PKCS7 NULL pointer dereferences fix\n\n   The PKCS#7 parsing code does not handle missing outer ContentInfo\n   correctly. An attacker can craft malformed ASN.1-encoded PKCS#7 blobs with\n   missing content and trigger a NULL pointer dereference on parsing.\n\n   Applications that verify PKCS#7 signatures, decrypt PKCS#7 data or\n   otherwise parse PKCS#7 structures from untrusted sources are\n   affected. OpenSSL clients and servers are not affected.\n\n   This issue was reported to OpenSSL by Michal Zalewski (Google).\n   ([CVE-2015-0289])\n\n   *Emilia Käsper*\n\n * DoS via reachable assert in SSLv2 servers fix\n\n   A malicious client can trigger an OPENSSL_assert (i.e., an abort) in\n   servers that both support SSLv2 and enable export cipher suites by sending\n   a specially crafted SSLv2 CLIENT-MASTER-KEY message.\n\n   This issue was discovered by Sean Burford (Google) and Emilia Käsper\n   (OpenSSL development team).\n   ([CVE-2015-0293])\n\n   *Emilia Käsper*\n\n * Empty CKE with client auth and DHE fix\n\n   If client auth is used then a server can seg fault in the event of a DHE\n   ciphersuite being selected and a zero length ClientKeyExchange message\n   being sent by the client. This could be exploited in a DoS attack.\n   ([CVE-2015-1787])\n\n   *Matt Caswell*\n\n * Handshake with unseeded PRNG fix\n\n   Under certain conditions an OpenSSL 1.0.2 client can complete a handshake\n   with an unseeded PRNG. The conditions are:\n   - The client is on a platform where the PRNG has not been seeded\n   automatically, and the user has not seeded manually\n   - A protocol specific client method version has been used (i.e. not\n   SSL_client_methodv23)\n   - A ciphersuite is used that does not require additional random data from\n   the PRNG beyond the initial ClientHello client random (e.g. PSK-RC4-SHA).\n\n   If the handshake succeeds then the client random that has been used will\n   have been generated from a PRNG with insufficient entropy and therefore the\n   output may be predictable.\n\n   For example using the following command with an unseeded openssl will\n   succeed on an unpatched platform:\n\n   openssl s_client -psk 1a2b3c4d -tls1_2 -cipher PSK-RC4-SHA\n   ([CVE-2015-0285])\n\n   *Matt Caswell*\n\n * Use After Free following d2i_ECPrivatekey error fix\n\n   A malformed EC private key file consumed via the d2i_ECPrivateKey function\n   could cause a use after free condition. This, in turn, could cause a double\n   free in several private key parsing functions (such as d2i_PrivateKey\n   or EVP_PKCS82PKEY) and could lead to a DoS attack or memory corruption\n   for applications that receive EC private keys from untrusted\n   sources. This scenario is considered rare.\n\n   This issue was discovered by the BoringSSL project and fixed in their\n   commit 517073cd4b.\n   ([CVE-2015-0209])\n\n   *Matt Caswell*\n\n * X509_to_X509_REQ NULL pointer deref fix\n\n   The function X509_to_X509_REQ will crash with a NULL pointer dereference if\n   the certificate key is invalid. This function is rarely used in practice.\n\n   This issue was discovered by Brian Carpenter.\n   ([CVE-2015-0288])\n\n   *Stephen Henson*\n\n * Removed the export ciphers from the DEFAULT ciphers\n\n   *Kurt Roeckx*\n\n### Changes between 1.0.1l and 1.0.2 [22 Jan 2015]\n\n * Facilitate \"universal\" ARM builds targeting range of ARM ISAs, e.g.\n   ARMv5 through ARMv8, as opposite to \"locking\" it to single one.\n   So far those who have to target multiple platforms would compromise\n   and argue that binary targeting say ARMv5 would still execute on\n   ARMv8. \"Universal\" build resolves this compromise by providing\n   near-optimal performance even on newer platforms.\n\n   *Andy Polyakov*\n\n * Accelerated NIST P-256 elliptic curve implementation for x86_64\n   (other platforms pending).\n\n   *Shay Gueron & Vlad Krasnov (Intel Corp), Andy Polyakov*\n\n * Add support for the SignedCertificateTimestampList certificate and\n   OCSP response extensions from RFC6962.\n\n   *Rob Stradling*\n\n * Fix ec_GFp_simple_points_make_affine (thus, EC_POINTs_mul etc.)\n   for corner cases. (Certain input points at infinity could lead to\n   bogus results, with non-infinity inputs mapped to infinity too.)\n\n   *Bodo Moeller*\n\n * Initial support for PowerISA 2.0.7, first implemented in POWER8.\n   This covers AES, SHA256/512 and GHASH. \"Initial\" means that most\n   common cases are optimized and there still is room for further\n   improvements. Vector Permutation AES for Altivec is also added.\n\n   *Andy Polyakov*\n\n * Add support for little-endian ppc64 Linux target.\n\n   *Marcelo Cerri (IBM)*\n\n * Initial support for AMRv8 ISA crypto extensions. This covers AES,\n   SHA1, SHA256 and GHASH. \"Initial\" means that most common cases\n   are optimized and there still is room for further improvements.\n   Both 32- and 64-bit modes are supported.\n\n   *Andy Polyakov, Ard Biesheuvel (Linaro)*\n\n * Improved ARMv7 NEON support.\n\n   *Andy Polyakov*\n\n * Support for SPARC Architecture 2011 crypto extensions, first\n   implemented in SPARC T4. This covers AES, DES, Camellia, SHA1,\n   SHA256/512, MD5, GHASH and modular exponentiation.\n\n   *Andy Polyakov, David Miller*\n\n * Accelerated modular exponentiation for Intel processors, a.k.a.\n   RSAZ.\n\n   *Shay Gueron & Vlad Krasnov (Intel Corp)*\n\n * Support for new and upcoming Intel processors, including AVX2,\n   BMI and SHA ISA extensions. This includes additional \"stitched\"\n   implementations, AESNI-SHA256 and GCM, and multi-buffer support\n   for TLS encrypt.\n\n   This work was sponsored by Intel Corp.\n\n   *Andy Polyakov*\n\n * Support for DTLS 1.2. This adds two sets of DTLS methods: DTLS_*_method()\n   supports both DTLS 1.2 and 1.0 and should use whatever version the peer\n   supports and DTLSv1_2_*_method() which supports DTLS 1.2 only.\n\n   *Steve Henson*\n\n * Use algorithm specific chains in SSL_CTX_use_certificate_chain_file():\n   this fixes a limitation in previous versions of OpenSSL.\n\n   *Steve Henson*\n\n * Extended RSA OAEP support via EVP_PKEY API. Options to specify digest,\n   MGF1 digest and OAEP label.\n\n   *Steve Henson*\n\n * Add EVP support for key wrapping algorithms, to avoid problems with\n   existing code the flag EVP_CIPHER_CTX_WRAP_ALLOW has to be set in\n   the EVP_CIPHER_CTX or an error is returned. Add AES and DES3 wrap\n   algorithms and include tests cases.\n\n   *Steve Henson*\n\n * Add functions to allocate and set the fields of an ECDSA_METHOD\n   structure.\n\n   *Douglas E. Engert, Steve Henson*\n\n * New functions OPENSSL_gmtime_diff and ASN1_TIME_diff to find the\n   difference in days and seconds between two tm or ASN1_TIME structures.\n\n   *Steve Henson*\n\n * Add -rev test option to s_server to just reverse order of characters\n   received by client and send back to server. Also prints an abbreviated\n   summary of the connection parameters.\n\n   *Steve Henson*\n\n * New option -brief for s_client and s_server to print out a brief summary\n   of connection parameters.\n\n   *Steve Henson*\n\n * Add callbacks for arbitrary TLS extensions.\n\n   *Trevor Perrin <trevp@trevp.net> and Ben Laurie*\n\n * New option -crl_download in several openssl utilities to download CRLs\n   from CRLDP extension in certificates.\n\n   *Steve Henson*\n\n * New options -CRL and -CRLform for s_client and s_server for CRLs.\n\n   *Steve Henson*\n\n * New function X509_CRL_diff to generate a delta CRL from the difference\n   of two full CRLs. Add support to \"crl\" utility.\n\n   *Steve Henson*\n\n * New functions to set lookup_crls function and to retrieve\n   X509_STORE from X509_STORE_CTX.\n\n   *Steve Henson*\n\n * Print out deprecated issuer and subject unique ID fields in\n   certificates.\n\n   *Steve Henson*\n\n * Extend OCSP I/O functions so they can be used for simple general purpose\n   HTTP as well as OCSP. New wrapper function which can be used to download\n   CRLs using the OCSP API.\n\n   *Steve Henson*\n\n * Delegate command line handling in s_client/s_server to SSL_CONF APIs.\n\n   *Steve Henson*\n\n * `SSL_CONF*` functions. These provide a common framework for application\n   configuration using configuration files or command lines.\n\n   *Steve Henson*\n\n * SSL/TLS tracing code. This parses out SSL/TLS records using the\n   message callback and prints the results. Needs compile time option\n   \"enable-ssl-trace\". New options to s_client and s_server to enable\n   tracing.\n\n   *Steve Henson*\n\n * New ctrl and macro to retrieve supported points extensions.\n   Print out extension in s_server and s_client.\n\n   *Steve Henson*\n\n * New functions to retrieve certificate signature and signature\n   OID NID.\n\n   *Steve Henson*\n\n * Add functions to retrieve and manipulate the raw cipherlist sent by a\n   client to OpenSSL.\n\n   *Steve Henson*\n\n * New Suite B modes for TLS code. These use and enforce the requirements\n   of RFC6460: restrict ciphersuites, only permit Suite B algorithms and\n   only use Suite B curves. The Suite B modes can be set by using the\n   strings \"SUITEB128\", \"SUITEB192\" or \"SUITEB128ONLY\" for the cipherstring.\n\n   *Steve Henson*\n\n * New chain verification flags for Suite B levels of security. Check\n   algorithms are acceptable when flags are set in X509_verify_cert.\n\n   *Steve Henson*\n\n * Make tls1_check_chain return a set of flags indicating checks passed\n   by a certificate chain. Add additional tests to handle client\n   certificates: checks for matching certificate type and issuer name\n   comparison.\n\n   *Steve Henson*\n\n * If an attempt is made to use a signature algorithm not in the peer\n   preference list abort the handshake. If client has no suitable\n   signature algorithms in response to a certificate request do not\n   use the certificate.\n\n   *Steve Henson*\n\n * If server EC tmp key is not in client preference list abort handshake.\n\n   *Steve Henson*\n\n * Add support for certificate stores in CERT structure. This makes it\n   possible to have different stores per SSL structure or one store in\n   the parent SSL_CTX. Include distinct stores for certificate chain\n   verification and chain building. New ctrl SSL_CTRL_BUILD_CERT_CHAIN\n   to build and store a certificate chain in CERT structure: returning\n   an error if the chain cannot be built: this will allow applications\n   to test if a chain is correctly configured.\n\n   Note: if the CERT based stores are not set then the parent SSL_CTX\n   store is used to retain compatibility with existing behaviour.\n\n   *Steve Henson*\n\n * New function ssl_set_client_disabled to set a ciphersuite disabled\n   mask based on the current session, check mask when sending client\n   hello and checking the requested ciphersuite.\n\n   *Steve Henson*\n\n * New ctrls to retrieve and set certificate types in a certificate\n   request message. Print out received values in s_client. If certificate\n   types is not set with custom values set sensible values based on\n   supported signature algorithms.\n\n   *Steve Henson*\n\n * Support for distinct client and server supported signature algorithms.\n\n   *Steve Henson*\n\n * Add certificate callback. If set this is called whenever a certificate\n   is required by client or server. An application can decide which\n   certificate chain to present based on arbitrary criteria: for example\n   supported signature algorithms. Add very simple example to s_server.\n   This fixes many of the problems and restrictions of the existing client\n   certificate callback: for example you can now clear an existing\n   certificate and specify the whole chain.\n\n   *Steve Henson*\n\n * Add new \"valid_flags\" field to CERT_PKEY structure which determines what\n   the certificate can be used for (if anything). Set valid_flags field\n   in new tls1_check_chain function. Simplify ssl_set_cert_masks which used\n   to have similar checks in it.\n\n   Add new \"cert_flags\" field to CERT structure and include a \"strict mode\".\n   This enforces some TLS certificate requirements (such as only permitting\n   certificate signature algorithms contained in the supported algorithms\n   extension) which some implementations ignore: this option should be used\n   with caution as it could cause interoperability issues.\n\n   *Steve Henson*\n\n * Update and tidy signature algorithm extension processing. Work out\n   shared signature algorithms based on preferences and peer algorithms\n   and print them out in s_client and s_server. Abort handshake if no\n   shared signature algorithms.\n\n   *Steve Henson*\n\n * Add new functions to allow customised supported signature algorithms\n   for SSL and SSL_CTX structures. Add options to s_client and s_server\n   to support them.\n\n   *Steve Henson*\n\n * New function SSL_certs_clear() to delete all references to certificates\n   from an SSL structure. Before this once a certificate had been added\n   it couldn't be removed.\n\n   *Steve Henson*\n\n * Integrate hostname, email address and IP address checking with certificate\n   verification. New verify options supporting checking in openssl utility.\n\n   *Steve Henson*\n\n * Fixes and wildcard matching support to hostname and email checking\n   functions. Add manual page.\n\n   *Florian Weimer (Red Hat Product Security Team)*\n\n * New functions to check a hostname email or IP address against a\n   certificate. Add options x509 utility to print results of checks against\n   a certificate.\n\n   *Steve Henson*\n\n * Fix OCSP checking.\n\n   *Rob Stradling <rob.stradling@comodo.com> and Ben Laurie*\n\n * Initial experimental support for explicitly trusted non-root CAs.\n   OpenSSL still tries to build a complete chain to a root but if an\n   intermediate CA has a trust setting included that is used. The first\n   setting is used: whether to trust (e.g., -addtrust option to the x509\n   utility) or reject.\n\n   *Steve Henson*\n\n * Add -trusted_first option which attempts to find certificates in the\n   trusted store even if an untrusted chain is also supplied.\n\n   *Steve Henson*\n\n * MIPS assembly pack updates: support for MIPS32r2 and SmartMIPS ASE,\n   platform support for Linux and Android.\n\n   *Andy Polyakov*\n\n * Support for linux-x32, ILP32 environment in x86_64 framework.\n\n   *Andy Polyakov*\n\n * Experimental multi-implementation support for FIPS capable OpenSSL.\n   When in FIPS mode the approved implementations are used as normal,\n   when not in FIPS mode the internal unapproved versions are used instead.\n   This means that the FIPS capable OpenSSL isn't forced to use the\n   (often lower performance) FIPS implementations outside FIPS mode.\n\n   *Steve Henson*\n\n * Transparently support X9.42 DH parameters when calling\n   PEM_read_bio_DHparameters. This means existing applications can handle\n   the new parameter format automatically.\n\n   *Steve Henson*\n\n * Initial experimental support for X9.42 DH parameter format: mainly\n   to support use of 'q' parameter for RFC5114 parameters.\n\n   *Steve Henson*\n\n * Add DH parameters from RFC5114 including test data to dhtest.\n\n   *Steve Henson*\n\n * Support for automatic EC temporary key parameter selection. If enabled\n   the most preferred EC parameters are automatically used instead of\n   hardcoded fixed parameters. Now a server just has to call:\n   SSL_CTX_set_ecdh_auto(ctx, 1) and the server will automatically\n   support ECDH and use the most appropriate parameters.\n\n   *Steve Henson*\n\n * Enhance and tidy EC curve and point format TLS extension code. Use\n   static structures instead of allocation if default values are used.\n   New ctrls to set curves we wish to support and to retrieve shared curves.\n   Print out shared curves in s_server. New options to s_server and s_client\n   to set list of supported curves.\n\n   *Steve Henson*\n\n * New ctrls to retrieve supported signature algorithms and\n   supported curve values as an array of NIDs. Extend openssl utility\n   to print out received values.\n\n   *Steve Henson*\n\n * Add new APIs EC_curve_nist2nid and EC_curve_nid2nist which convert\n   between NIDs and the more common NIST names such as \"P-256\". Enhance\n   ecparam utility and ECC method to recognise the NIST names for curves.\n\n   *Steve Henson*\n\n * Enhance SSL/TLS certificate chain handling to support different\n   chains for each certificate instead of one chain in the parent SSL_CTX.\n\n   *Steve Henson*\n\n * Support for fixed DH ciphersuite client authentication: where both\n   server and client use DH certificates with common parameters.\n\n   *Steve Henson*\n\n * Support for fixed DH ciphersuites: those requiring DH server\n   certificates.\n\n   *Steve Henson*\n\n * New function i2d_re_X509_tbs for re-encoding the TBS portion of\n   the certificate.\n   Note: Related 1.0.2-beta specific macros X509_get_cert_info,\n   X509_CINF_set_modified, X509_CINF_get_issuer, X509_CINF_get_extensions and\n   X509_CINF_get_signature were reverted post internal team review.\n\nOpenSSL 1.0.1\n-------------\n\n### Changes between 1.0.1t and 1.0.1u [22 Sep 2016]\n\n * OCSP Status Request extension unbounded memory growth\n\n   A malicious client can send an excessively large OCSP Status Request\n   extension. If that client continually requests renegotiation, sending a\n   large OCSP Status Request extension each time, then there will be unbounded\n   memory growth on the server. This will eventually lead to a Denial Of\n   Service attack through memory exhaustion. Servers with a default\n   configuration are vulnerable even if they do not support OCSP. Builds using\n   the \"no-ocsp\" build time option are not affected.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6304])\n\n   *Matt Caswell*\n\n * In order to mitigate the SWEET32 attack, the DES ciphers were moved from\n   HIGH to MEDIUM.\n\n   This issue was reported to OpenSSL Karthikeyan Bhargavan and Gaetan\n   Leurent (INRIA)\n   ([CVE-2016-2183])\n\n   *Rich Salz*\n\n * OOB write in MDC2_Update()\n\n   An overflow can occur in MDC2_Update() either if called directly or\n   through the EVP_DigestUpdate() function using MDC2. If an attacker\n   is able to supply very large amounts of input data after a previous\n   call to EVP_EncryptUpdate() with a partial block then a length check\n   can overflow resulting in a heap corruption.\n\n   The amount of data needed is comparable to SIZE_MAX which is impractical\n   on most platforms.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6303])\n\n   *Stephen Henson*\n\n * Malformed SHA512 ticket DoS\n\n   If a server uses SHA512 for TLS session ticket HMAC it is vulnerable to a\n   DoS attack where a malformed ticket will result in an OOB read which will\n   ultimately crash.\n\n   The use of SHA512 in TLS session tickets is comparatively rare as it requires\n   a custom server callback and ticket lookup mechanism.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6302])\n\n   *Stephen Henson*\n\n * OOB write in BN_bn2dec()\n\n   The function BN_bn2dec() does not check the return value of BN_div_word().\n   This can cause an OOB write if an application uses this function with an\n   overly large BIGNUM. This could be a problem if an overly large certificate\n   or CRL is printed out from an untrusted source. TLS is not affected because\n   record limits will reject an oversized certificate before it is parsed.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-2182])\n\n   *Stephen Henson*\n\n * OOB read in TS_OBJ_print_bio()\n\n   The function TS_OBJ_print_bio() misuses OBJ_obj2txt(): the return value is\n   the total length the OID text representation would use and not the amount\n   of data written. This will result in OOB reads when large OIDs are\n   presented.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-2180])\n\n   *Stephen Henson*\n\n * Pointer arithmetic undefined behaviour\n\n   Avoid some undefined pointer arithmetic\n\n   A common idiom in the codebase is to check limits in the following manner:\n   \"p + len > limit\"\n\n   Where \"p\" points to some malloc'd data of SIZE bytes and\n   limit == p + SIZE\n\n   \"len\" here could be from some externally supplied data (e.g. from a TLS\n   message).\n\n   The rules of C pointer arithmetic are such that \"p + len\" is only well\n   defined where len <= SIZE. Therefore, the above idiom is actually\n   undefined behaviour.\n\n   For example this could cause problems if some malloc implementation\n   provides an address for \"p\" such that \"p + len\" actually overflows for\n   values of len that are too big and therefore p + len < limit.\n\n   This issue was reported to OpenSSL by Guido Vranken\n   ([CVE-2016-2177])\n\n   *Matt Caswell*\n\n * Constant time flag not preserved in DSA signing\n\n   Operations in the DSA signing algorithm should run in constant time in\n   order to avoid side channel attacks. A flaw in the OpenSSL DSA\n   implementation means that a non-constant time codepath is followed for\n   certain operations. This has been demonstrated through a cache-timing\n   attack to be sufficient for an attacker to recover the private DSA key.\n\n   This issue was reported by César Pereida (Aalto University), Billy Brumley\n   (Tampere University of Technology), and Yuval Yarom (The University of\n   Adelaide and NICTA).\n   ([CVE-2016-2178])\n\n   *César Pereida*\n\n * DTLS buffered message DoS\n\n   In a DTLS connection where handshake messages are delivered out-of-order\n   those messages that OpenSSL is not yet ready to process will be buffered\n   for later use. Under certain circumstances, a flaw in the logic means that\n   those messages do not get removed from the buffer even though the handshake\n   has been completed. An attacker could force up to approx. 15 messages to\n   remain in the buffer when they are no longer required. These messages will\n   be cleared when the DTLS connection is closed. The default maximum size for\n   a message is 100k. Therefore, the attacker could force an additional 1500k\n   to be consumed per connection. By opening many simultaneous connections an\n   attacker could cause a DoS attack through memory exhaustion.\n\n   This issue was reported to OpenSSL by Quan Luo.\n   ([CVE-2016-2179])\n\n   *Matt Caswell*\n\n * DTLS replay protection DoS\n\n   A flaw in the DTLS replay attack protection mechanism means that records\n   that arrive for future epochs update the replay protection \"window\" before\n   the MAC for the record has been validated. This could be exploited by an\n   attacker by sending a record for the next epoch (which does not have to\n   decrypt or have a valid MAC), with a very large sequence number. This means\n   that all subsequent legitimate packets are dropped causing a denial of\n   service for a specific DTLS connection.\n\n   This issue was reported to OpenSSL by the OCAP audit team.\n   ([CVE-2016-2181])\n\n   *Matt Caswell*\n\n * Certificate message OOB reads\n\n   In OpenSSL 1.0.2 and earlier some missing message length checks can result\n   in OOB reads of up to 2 bytes beyond an allocated buffer. There is a\n   theoretical DoS risk but this has not been observed in practice on common\n   platforms.\n\n   The messages affected are client certificate, client certificate request\n   and server certificate. As a result the attack can only be performed\n   against a client or a server which enables client authentication.\n\n   This issue was reported to OpenSSL by Shi Lei (Gear Team, Qihoo 360 Inc.)\n   ([CVE-2016-6306])\n\n   *Stephen Henson*\n\n### Changes between 1.0.1s and 1.0.1t [3 May 2016]\n\n * Prevent padding oracle in AES-NI CBC MAC check\n\n   A MITM attacker can use a padding oracle attack to decrypt traffic\n   when the connection uses an AES CBC cipher and the server support\n   AES-NI.\n\n   This issue was introduced as part of the fix for Lucky 13 padding\n   attack ([CVE-2013-0169]). The padding check was rewritten to be in\n   constant time by making sure that always the same bytes are read and\n   compared against either the MAC or padding bytes. But it no longer\n   checked that there was enough data to have both the MAC and padding\n   bytes.\n\n   This issue was reported by Juraj Somorovsky using TLS-Attacker.\n   ([CVE-2016-2107])\n\n   *Kurt Roeckx*\n\n * Fix EVP_EncodeUpdate overflow\n\n   An overflow can occur in the EVP_EncodeUpdate() function which is used for\n   Base64 encoding of binary data. If an attacker is able to supply very large\n   amounts of input data then a length check can overflow resulting in a heap\n   corruption.\n\n   Internally to OpenSSL the EVP_EncodeUpdate() function is primarily used by\n   the `PEM_write_bio*` family of functions. These are mainly used within the\n   OpenSSL command line applications, so any application which processes data\n   from an untrusted source and outputs it as a PEM file should be considered\n   vulnerable to this issue. User applications that call these APIs directly\n   with large amounts of untrusted data may also be vulnerable.\n\n   This issue was reported by Guido Vranken.\n   ([CVE-2016-2105])\n\n   *Matt Caswell*\n\n * Fix EVP_EncryptUpdate overflow\n\n   An overflow can occur in the EVP_EncryptUpdate() function. If an attacker\n   is able to supply very large amounts of input data after a previous call to\n   EVP_EncryptUpdate() with a partial block then a length check can overflow\n   resulting in a heap corruption. Following an analysis of all OpenSSL\n   internal usage of the EVP_EncryptUpdate() function all usage is one of two\n   forms. The first form is where the EVP_EncryptUpdate() call is known to be\n   the first called function after an EVP_EncryptInit(), and therefore that\n   specific call must be safe. The second form is where the length passed to\n   EVP_EncryptUpdate() can be seen from the code to be some small value and\n   therefore there is no possibility of an overflow. Since all instances are\n   one of these two forms, it is believed that there can be no overflows in\n   internal code due to this problem. It should be noted that\n   EVP_DecryptUpdate() can call EVP_EncryptUpdate() in certain code paths.\n   Also EVP_CipherUpdate() is a synonym for EVP_EncryptUpdate(). All instances\n   of these calls have also been analysed too and it is believed there are no\n   instances in internal usage where an overflow could occur.\n\n   This issue was reported by Guido Vranken.\n   ([CVE-2016-2106])\n\n   *Matt Caswell*\n\n * Prevent ASN.1 BIO excessive memory allocation\n\n   When ASN.1 data is read from a BIO using functions such as d2i_CMS_bio()\n   a short invalid encoding can casuse allocation of large amounts of memory\n   potentially consuming excessive resources or exhausting memory.\n\n   Any application parsing untrusted data through d2i BIO functions is\n   affected. The memory based functions such as d2i_X509() are *not* affected.\n   Since the memory based functions are used by the TLS library, TLS\n   applications are not affected.\n\n   This issue was reported by Brian Carpenter.\n   ([CVE-2016-2109])\n\n   *Stephen Henson*\n\n * EBCDIC overread\n\n   ASN1 Strings that are over 1024 bytes can cause an overread in applications\n   using the X509_NAME_oneline() function on EBCDIC systems. This could result\n   in arbitrary stack data being returned in the buffer.\n\n   This issue was reported by Guido Vranken.\n   ([CVE-2016-2176])\n\n   *Matt Caswell*\n\n * Modify behavior of ALPN to invoke callback after SNI/servername\n   callback, such that updates to the SSL_CTX affect ALPN.\n\n   *Todd Short*\n\n * Remove LOW from the DEFAULT cipher list.  This removes singles DES from the\n   default.\n\n   *Kurt Roeckx*\n\n * Only remove the SSLv2 methods with the no-ssl2-method option. When the\n   methods are enabled and ssl2 is disabled the methods return NULL.\n\n   *Kurt Roeckx*\n\n### Changes between 1.0.1r and 1.0.1s [1 Mar 2016]\n\n* Disable weak ciphers in SSLv3 and up in default builds of OpenSSL.\n  Builds that are not configured with \"enable-weak-ssl-ciphers\" will not\n  provide any \"EXPORT\" or \"LOW\" strength ciphers.\n\n  *Viktor Dukhovni*\n\n* Disable SSLv2 default build, default negotiation and weak ciphers.  SSLv2\n  is by default disabled at build-time.  Builds that are not configured with\n  \"enable-ssl2\" will not support SSLv2.  Even if \"enable-ssl2\" is used,\n  users who want to negotiate SSLv2 via the version-flexible SSLv23_method()\n  will need to explicitly call either of:\n\n      SSL_CTX_clear_options(ctx, SSL_OP_NO_SSLv2);\n  or\n      SSL_clear_options(ssl, SSL_OP_NO_SSLv2);\n\n  as appropriate.  Even if either of those is used, or the application\n  explicitly uses the version-specific SSLv2_method() or its client and\n  server variants, SSLv2 ciphers vulnerable to exhaustive search key\n  recovery have been removed.  Specifically, the SSLv2 40-bit EXPORT\n  ciphers, and SSLv2 56-bit DES are no longer available.\n  ([CVE-2016-0800])\n\n  *Viktor Dukhovni*\n\n * Fix a double-free in DSA code\n\n   A double free bug was discovered when OpenSSL parses malformed DSA private\n   keys and could lead to a DoS attack or memory corruption for applications\n   that receive DSA private keys from untrusted sources.  This scenario is\n   considered rare.\n\n   This issue was reported to OpenSSL by Adam Langley(Google/BoringSSL) using\n   libFuzzer.\n   ([CVE-2016-0705])\n\n   *Stephen Henson*\n\n * Disable SRP fake user seed to address a server memory leak.\n\n   Add a new method SRP_VBASE_get1_by_user that handles the seed properly.\n\n   SRP_VBASE_get_by_user had inconsistent memory management behaviour.\n   In order to fix an unavoidable memory leak, SRP_VBASE_get_by_user\n   was changed to ignore the \"fake user\" SRP seed, even if the seed\n   is configured.\n\n   Users should use SRP_VBASE_get1_by_user instead. Note that in\n   SRP_VBASE_get1_by_user, caller must free the returned value. Note\n   also that even though configuring the SRP seed attempts to hide\n   invalid usernames by continuing the handshake with fake\n   credentials, this behaviour is not constant time and no strong\n   guarantees are made that the handshake is indistinguishable from\n   that of a valid user.\n   ([CVE-2016-0798])\n\n   *Emilia Käsper*\n\n * Fix BN_hex2bn/BN_dec2bn NULL pointer deref/heap corruption\n\n   In the BN_hex2bn function the number of hex digits is calculated using an\n   int value `i`. Later `bn_expand` is called with a value of `i * 4`. For\n   large values of `i` this can result in `bn_expand` not allocating any\n   memory because `i * 4` is negative. This can leave the internal BIGNUM data\n   field as NULL leading to a subsequent NULL ptr deref. For very large values\n   of `i`, the calculation `i * 4` could be a positive value smaller than `i`.\n   In this case memory is allocated to the internal BIGNUM data field, but it\n   is insufficiently sized leading to heap corruption. A similar issue exists\n   in BN_dec2bn. This could have security consequences if BN_hex2bn/BN_dec2bn\n   is ever called by user applications with very large untrusted hex/dec data.\n   This is anticipated to be a rare occurrence.\n\n   All OpenSSL internal usage of these functions use data that is not expected\n   to be untrusted, e.g. config file data or application command line\n   arguments. If user developed applications generate config file data based\n   on untrusted data then it is possible that this could also lead to security\n   consequences. This is also anticipated to be rare.\n\n   This issue was reported to OpenSSL by Guido Vranken.\n   ([CVE-2016-0797])\n\n   *Matt Caswell*\n\n * Fix memory issues in `BIO_*printf` functions\n\n   The internal `fmtstr` function used in processing a \"%s\" format string in\n   the `BIO_*printf` functions could overflow while calculating the length of a\n   string and cause an OOB read when printing very long strings.\n\n   Additionally the internal `doapr_outch` function can attempt to write to an\n   OOB memory location (at an offset from the NULL pointer) in the event of a\n   memory allocation failure. In 1.0.2 and below this could be caused where\n   the size of a buffer to be allocated is greater than INT_MAX. E.g. this\n   could be in processing a very long \"%s\" format string. Memory leaks can\n   also occur.\n\n   The first issue may mask the second issue dependent on compiler behaviour.\n   These problems could enable attacks where large amounts of untrusted data\n   is passed to the `BIO_*printf` functions. If applications use these functions\n   in this way then they could be vulnerable. OpenSSL itself uses these\n   functions when printing out human-readable dumps of ASN.1 data. Therefore\n   applications that print this data could be vulnerable if the data is from\n   untrusted sources. OpenSSL command line applications could also be\n   vulnerable where they print out ASN.1 data, or if untrusted data is passed\n   as command line arguments.\n\n   Libssl is not considered directly vulnerable. Additionally certificates etc\n   received via remote connections via libssl are also unlikely to be able to\n   trigger these issues because of message size limits enforced within libssl.\n\n   This issue was reported to OpenSSL Guido Vranken.\n   ([CVE-2016-0799])\n\n   *Matt Caswell*\n\n * Side channel attack on modular exponentiation\n\n   A side-channel attack was found which makes use of cache-bank conflicts on\n   the Intel Sandy-Bridge microarchitecture which could lead to the recovery\n   of RSA keys.  The ability to exploit this issue is limited as it relies on\n   an attacker who has control of code in a thread running on the same\n   hyper-threaded core as the victim thread which is performing decryptions.\n\n   This issue was reported to OpenSSL by Yuval Yarom, The University of\n   Adelaide and NICTA, Daniel Genkin, Technion and Tel Aviv University, and\n   Nadia Heninger, University of Pennsylvania with more information at\n   <http://cachebleed.info>.\n   ([CVE-2016-0702])\n\n   *Andy Polyakov*\n\n * Change the req command to generate a 2048-bit RSA/DSA key by default,\n   if no keysize is specified with default_bits. This fixes an\n   omission in an earlier change that changed all RSA/DSA key generation\n   commands to use 2048 bits by default.\n\n   *Emilia Käsper*\n\n### Changes between 1.0.1q and 1.0.1r [28 Jan 2016]\n\n * Protection for DH small subgroup attacks\n\n   As a precautionary measure the SSL_OP_SINGLE_DH_USE option has been\n   switched on by default and cannot be disabled. This could have some\n   performance impact.\n\n   *Matt Caswell*\n\n * SSLv2 doesn't block disabled ciphers\n\n   A malicious client can negotiate SSLv2 ciphers that have been disabled on\n   the server and complete SSLv2 handshakes even if all SSLv2 ciphers have\n   been disabled, provided that the SSLv2 protocol was not also disabled via\n   SSL_OP_NO_SSLv2.\n\n   This issue was reported to OpenSSL on 26th December 2015 by Nimrod Aviram\n   and Sebastian Schinzel.\n   ([CVE-2015-3197])\n\n   *Viktor Dukhovni*\n\n * Reject DH handshakes with parameters shorter than 1024 bits.\n\n   *Kurt Roeckx*\n\n### Changes between 1.0.1p and 1.0.1q [3 Dec 2015]\n\n * Certificate verify crash with missing PSS parameter\n\n   The signature verification routines will crash with a NULL pointer\n   dereference if presented with an ASN.1 signature using the RSA PSS\n   algorithm and absent mask generation function parameter. Since these\n   routines are used to verify certificate signature algorithms this can be\n   used to crash any certificate verification operation and exploited in a\n   DoS attack. Any application which performs certificate verification is\n   vulnerable including OpenSSL clients and servers which enable client\n   authentication.\n\n   This issue was reported to OpenSSL by Loïc Jonas Etienne (Qnective AG).\n   ([CVE-2015-3194])\n\n   *Stephen Henson*\n\n * X509_ATTRIBUTE memory leak\n\n   When presented with a malformed X509_ATTRIBUTE structure OpenSSL will leak\n   memory. This structure is used by the PKCS#7 and CMS routines so any\n   application which reads PKCS#7 or CMS data from untrusted sources is\n   affected. SSL/TLS is not affected.\n\n   This issue was reported to OpenSSL by Adam Langley (Google/BoringSSL) using\n   libFuzzer.\n   ([CVE-2015-3195])\n\n   *Stephen Henson*\n\n * Rewrite EVP_DecodeUpdate (base64 decoding) to fix several bugs.\n   This changes the decoding behaviour for some invalid messages,\n   though the change is mostly in the more lenient direction, and\n   legacy behaviour is preserved as much as possible.\n\n   *Emilia Käsper*\n\n * In DSA_generate_parameters_ex, if the provided seed is too short,\n   use a random seed, as already documented.\n\n   *Rich Salz and Ismo Puustinen <ismo.puustinen@intel.com>*\n\n### Changes between 1.0.1o and 1.0.1p [9 Jul 2015]\n\n * Alternate chains certificate forgery\n\n   During certificate verification, OpenSSL will attempt to find an\n   alternative certificate chain if the first attempt to build such a chain\n   fails. An error in the implementation of this logic can mean that an\n   attacker could cause certain checks on untrusted certificates to be\n   bypassed, such as the CA flag, enabling them to use a valid leaf\n   certificate to act as a CA and \"issue\" an invalid certificate.\n\n   This issue was reported to OpenSSL by Adam Langley/David Benjamin\n   (Google/BoringSSL).\n   ([CVE-2015-1793])\n\n   *Matt Caswell*\n\n * Race condition handling PSK identify hint\n\n   If PSK identity hints are received by a multi-threaded client then\n   the values are wrongly updated in the parent SSL_CTX structure. This can\n   result in a race condition potentially leading to a double free of the\n   identify hint data.\n   ([CVE-2015-3196])\n\n   *Stephen Henson*\n\n### Changes between 1.0.1n and 1.0.1o [12 Jun 2015]\n\n * Fix HMAC ABI incompatibility. The previous version introduced an ABI\n   incompatibility in the handling of HMAC. The previous ABI has now been\n   restored.\n\n### Changes between 1.0.1m and 1.0.1n [11 Jun 2015]\n\n * Malformed ECParameters causes infinite loop\n\n   When processing an ECParameters structure OpenSSL enters an infinite loop\n   if the curve specified is over a specially malformed binary polynomial\n   field.\n\n   This can be used to perform denial of service against any\n   system which processes public keys, certificate requests or\n   certificates.  This includes TLS clients and TLS servers with\n   client authentication enabled.\n\n   This issue was reported to OpenSSL by Joseph Barr-Pixton.\n   ([CVE-2015-1788])\n\n   *Andy Polyakov*\n\n * Exploitable out-of-bounds read in X509_cmp_time\n\n   X509_cmp_time does not properly check the length of the ASN1_TIME\n   string and can read a few bytes out of bounds. In addition,\n   X509_cmp_time accepts an arbitrary number of fractional seconds in the\n   time string.\n\n   An attacker can use this to craft malformed certificates and CRLs of\n   various sizes and potentially cause a segmentation fault, resulting in\n   a DoS on applications that verify certificates or CRLs. TLS clients\n   that verify CRLs are affected. TLS clients and servers with client\n   authentication enabled may be affected if they use custom verification\n   callbacks.\n\n   This issue was reported to OpenSSL by Robert Swiecki (Google), and\n   independently by Hanno Böck.\n   ([CVE-2015-1789])\n\n   *Emilia Käsper*\n\n * PKCS7 crash with missing EnvelopedContent\n\n   The PKCS#7 parsing code does not handle missing inner EncryptedContent\n   correctly. An attacker can craft malformed ASN.1-encoded PKCS#7 blobs\n   with missing content and trigger a NULL pointer dereference on parsing.\n\n   Applications that decrypt PKCS#7 data or otherwise parse PKCS#7\n   structures from untrusted sources are affected. OpenSSL clients and\n   servers are not affected.\n\n   This issue was reported to OpenSSL by Michal Zalewski (Google).\n   ([CVE-2015-1790])\n\n   *Emilia Käsper*\n\n * CMS verify infinite loop with unknown hash function\n\n   When verifying a signedData message the CMS code can enter an infinite loop\n   if presented with an unknown hash function OID. This can be used to perform\n   denial of service against any system which verifies signedData messages using\n   the CMS code.\n   This issue was reported to OpenSSL by Johannes Bauer.\n   ([CVE-2015-1792])\n\n   *Stephen Henson*\n\n * Race condition handling NewSessionTicket\n\n   If a NewSessionTicket is received by a multi-threaded client when attempting to\n   reuse a previous ticket then a race condition can occur potentially leading to\n   a double free of the ticket data.\n   ([CVE-2015-1791])\n\n   *Matt Caswell*\n\n * Reject DH handshakes with parameters shorter than 768 bits.\n\n   *Kurt Roeckx and Emilia Kasper*\n\n * dhparam: generate 2048-bit parameters by default.\n\n   *Kurt Roeckx and Emilia Kasper*\n\n### Changes between 1.0.1l and 1.0.1m [19 Mar 2015]\n\n * Segmentation fault in ASN1_TYPE_cmp fix\n\n   The function ASN1_TYPE_cmp will crash with an invalid read if an attempt is\n   made to compare ASN.1 boolean types. Since ASN1_TYPE_cmp is used to check\n   certificate signature algorithm consistency this can be used to crash any\n   certificate verification operation and exploited in a DoS attack. Any\n   application which performs certificate verification is vulnerable including\n   OpenSSL clients and servers which enable client authentication.\n   ([CVE-2015-0286])\n\n   *Stephen Henson*\n\n * ASN.1 structure reuse memory corruption fix\n\n   Reusing a structure in ASN.1 parsing may allow an attacker to cause\n   memory corruption via an invalid write. Such reuse is and has been\n   strongly discouraged and is believed to be rare.\n\n   Applications that parse structures containing CHOICE or ANY DEFINED BY\n   components may be affected. Certificate parsing (d2i_X509 and related\n   functions) are however not affected. OpenSSL clients and servers are\n   not affected.\n   ([CVE-2015-0287])\n\n   *Stephen Henson*\n\n * PKCS7 NULL pointer dereferences fix\n\n   The PKCS#7 parsing code does not handle missing outer ContentInfo\n   correctly. An attacker can craft malformed ASN.1-encoded PKCS#7 blobs with\n   missing content and trigger a NULL pointer dereference on parsing.\n\n   Applications that verify PKCS#7 signatures, decrypt PKCS#7 data or\n   otherwise parse PKCS#7 structures from untrusted sources are\n   affected. OpenSSL clients and servers are not affected.\n\n   This issue was reported to OpenSSL by Michal Zalewski (Google).\n   ([CVE-2015-0289])\n\n   *Emilia Käsper*\n\n * DoS via reachable assert in SSLv2 servers fix\n\n   A malicious client can trigger an OPENSSL_assert (i.e., an abort) in\n   servers that both support SSLv2 and enable export cipher suites by sending\n   a specially crafted SSLv2 CLIENT-MASTER-KEY message.\n\n   This issue was discovered by Sean Burford (Google) and Emilia Käsper\n   (OpenSSL development team).\n   ([CVE-2015-0293])\n\n   *Emilia Käsper*\n\n * Use After Free following d2i_ECPrivatekey error fix\n\n   A malformed EC private key file consumed via the d2i_ECPrivateKey function\n   could cause a use after free condition. This, in turn, could cause a double\n   free in several private key parsing functions (such as d2i_PrivateKey\n   or EVP_PKCS82PKEY) and could lead to a DoS attack or memory corruption\n   for applications that receive EC private keys from untrusted\n   sources. This scenario is considered rare.\n\n   This issue was discovered by the BoringSSL project and fixed in their\n   commit 517073cd4b.\n   ([CVE-2015-0209])\n\n   *Matt Caswell*\n\n * X509_to_X509_REQ NULL pointer deref fix\n\n   The function X509_to_X509_REQ will crash with a NULL pointer dereference if\n   the certificate key is invalid. This function is rarely used in practice.\n\n   This issue was discovered by Brian Carpenter.\n   ([CVE-2015-0288])\n\n   *Stephen Henson*\n\n * Removed the export ciphers from the DEFAULT ciphers\n\n   *Kurt Roeckx*\n\n### Changes between 1.0.1k and 1.0.1l [15 Jan 2015]\n\n * Build fixes for the Windows and OpenVMS platforms\n\n   *Matt Caswell and Richard Levitte*\n\n### Changes between 1.0.1j and 1.0.1k [8 Jan 2015]\n\n * Fix DTLS segmentation fault in dtls1_get_record. A carefully crafted DTLS\n   message can cause a segmentation fault in OpenSSL due to a NULL pointer\n   dereference. This could lead to a Denial Of Service attack. Thanks to\n   Markus Stenberg of Cisco Systems, Inc. for reporting this issue.\n   ([CVE-2014-3571])\n\n   *Steve Henson*\n\n * Fix DTLS memory leak in dtls1_buffer_record. A memory leak can occur in the\n   dtls1_buffer_record function under certain conditions. In particular this\n   could occur if an attacker sent repeated DTLS records with the same\n   sequence number but for the next epoch. The memory leak could be exploited\n   by an attacker in a Denial of Service attack through memory exhaustion.\n   Thanks to Chris Mueller for reporting this issue.\n   ([CVE-2015-0206])\n\n   *Matt Caswell*\n\n * Fix issue where no-ssl3 configuration sets method to NULL. When openssl is\n   built with the no-ssl3 option and an SSL v3 ClientHello is received the ssl\n   method would be set to NULL which could later result in a NULL pointer\n   dereference. Thanks to Frank Schmirler for reporting this issue.\n   ([CVE-2014-3569])\n\n   *Kurt Roeckx*\n\n * Abort handshake if server key exchange message is omitted for ephemeral\n   ECDH ciphersuites.\n\n   Thanks to Karthikeyan Bhargavan of the PROSECCO team at INRIA for\n   reporting this issue.\n   ([CVE-2014-3572])\n\n   *Steve Henson*\n\n * Remove non-export ephemeral RSA code on client and server. This code\n   violated the TLS standard by allowing the use of temporary RSA keys in\n   non-export ciphersuites and could be used by a server to effectively\n   downgrade the RSA key length used to a value smaller than the server\n   certificate. Thanks for Karthikeyan Bhargavan of the PROSECCO team at\n   INRIA or reporting this issue.\n   ([CVE-2015-0204])\n\n   *Steve Henson*\n\n * Fixed issue where DH client certificates are accepted without verification.\n   An OpenSSL server will accept a DH certificate for client authentication\n   without the certificate verify message. This effectively allows a client to\n   authenticate without the use of a private key. This only affects servers\n   which trust a client certificate authority which issues certificates\n   containing DH keys: these are extremely rare and hardly ever encountered.\n   Thanks for Karthikeyan Bhargavan of the PROSECCO team at INRIA or reporting\n   this issue.\n   ([CVE-2015-0205])\n\n   *Steve Henson*\n\n * Ensure that the session ID context of an SSL is updated when its\n   SSL_CTX is updated via SSL_set_SSL_CTX.\n\n   The session ID context is typically set from the parent SSL_CTX,\n   and can vary with the CTX.\n\n   *Adam Langley*\n\n * Fix various certificate fingerprint issues.\n\n   By using non-DER or invalid encodings outside the signed portion of a\n   certificate the fingerprint can be changed without breaking the signature.\n   Although no details of the signed portion of the certificate can be changed\n   this can cause problems with some applications: e.g. those using the\n   certificate fingerprint for blacklists.\n\n   1. Reject signatures with non zero unused bits.\n\n   If the BIT STRING containing the signature has non zero unused bits reject\n   the signature. All current signature algorithms require zero unused bits.\n\n   2. Check certificate algorithm consistency.\n\n   Check the AlgorithmIdentifier inside TBS matches the one in the\n   certificate signature. NB: this will result in signature failure\n   errors for some broken certificates.\n\n   Thanks to Konrad Kraszewski from Google for reporting this issue.\n\n   3. Check DSA/ECDSA signatures use DER.\n\n   Re-encode DSA/ECDSA signatures and compare with the original received\n   signature. Return an error if there is a mismatch.\n\n   This will reject various cases including garbage after signature\n   (thanks to Antti Karjalainen and Tuomo Untinen from the Codenomicon CROSS\n   program for discovering this case) and use of BER or invalid ASN.1 INTEGERs\n   (negative or with leading zeroes).\n\n   Further analysis was conducted and fixes were developed by Stephen Henson\n   of the OpenSSL core team.\n\n   ([CVE-2014-8275])\n\n   *Steve Henson*\n\n * Correct Bignum squaring. Bignum squaring (BN_sqr) may produce incorrect\n   results on some platforms, including x86_64. This bug occurs at random\n   with a very low probability, and is not known to be exploitable in any\n   way, though its exact impact is difficult to determine. Thanks to Pieter\n   Wuille (Blockstream) who reported this issue and also suggested an initial\n   fix. Further analysis was conducted by the OpenSSL development team and\n   Adam Langley of Google. The final fix was developed by Andy Polyakov of\n   the OpenSSL core team.\n   ([CVE-2014-3570])\n\n   *Andy Polyakov*\n\n * Do not resume sessions on the server if the negotiated protocol\n   version does not match the session's version. Resuming with a different\n   version, while not strictly forbidden by the RFC, is of questionable\n   sanity and breaks all known clients.\n\n   *David Benjamin, Emilia Käsper*\n\n * Tighten handling of the ChangeCipherSpec (CCS) message: reject\n   early CCS messages during renegotiation. (Note that because\n   renegotiation is encrypted, this early CCS was not exploitable.)\n\n   *Emilia Käsper*\n\n * Tighten client-side session ticket handling during renegotiation:\n   ensure that the client only accepts a session ticket if the server sends\n   the extension anew in the ServerHello. Previously, a TLS client would\n   reuse the old extension state and thus accept a session ticket if one was\n   announced in the initial ServerHello.\n\n   Similarly, ensure that the client requires a session ticket if one\n   was advertised in the ServerHello. Previously, a TLS client would\n   ignore a missing NewSessionTicket message.\n\n   *Emilia Käsper*\n\n### Changes between 1.0.1i and 1.0.1j [15 Oct 2014]\n\n * SRTP Memory Leak.\n\n   A flaw in the DTLS SRTP extension parsing code allows an attacker, who\n   sends a carefully crafted handshake message, to cause OpenSSL to fail\n   to free up to 64k of memory causing a memory leak. This could be\n   exploited in a Denial Of Service attack. This issue affects OpenSSL\n   1.0.1 server implementations for both SSL/TLS and DTLS regardless of\n   whether SRTP is used or configured. Implementations of OpenSSL that\n   have been compiled with OPENSSL_NO_SRTP defined are not affected.\n\n   The fix was developed by the OpenSSL team.\n   ([CVE-2014-3513])\n\n   *OpenSSL team*\n\n * Session Ticket Memory Leak.\n\n   When an OpenSSL SSL/TLS/DTLS server receives a session ticket the\n   integrity of that ticket is first verified. In the event of a session\n   ticket integrity check failing, OpenSSL will fail to free memory\n   causing a memory leak. By sending a large number of invalid session\n   tickets an attacker could exploit this issue in a Denial Of Service\n   attack.\n   ([CVE-2014-3567])\n\n   *Steve Henson*\n\n * Build option no-ssl3 is incomplete.\n\n   When OpenSSL is configured with \"no-ssl3\" as a build option, servers\n   could accept and complete an SSL 3.0 handshake, and clients could be\n   configured to send them.\n   ([CVE-2014-3568])\n\n   *Akamai and the OpenSSL team*\n\n * Add support for TLS_FALLBACK_SCSV.\n   Client applications doing fallback retries should call\n   SSL_set_mode(s, SSL_MODE_SEND_FALLBACK_SCSV).\n   ([CVE-2014-3566])\n\n   *Adam Langley, Bodo Moeller*\n\n * Add additional DigestInfo checks.\n\n   Re-encode DigestInto in DER and check against the original when\n   verifying RSA signature: this will reject any improperly encoded\n   DigestInfo structures.\n\n   Note: this is a precautionary measure and no attacks are currently known.\n\n   *Steve Henson*\n\n### Changes between 1.0.1h and 1.0.1i [6 Aug 2014]\n\n * Fix SRP buffer overrun vulnerability. Invalid parameters passed to the\n   SRP code can be overrun an internal buffer. Add sanity check that\n   g, A, B < N to SRP code.\n\n   Thanks to Sean Devlin and Watson Ladd of Cryptography Services, NCC\n   Group for discovering this issue.\n   ([CVE-2014-3512])\n\n   *Steve Henson*\n\n * A flaw in the OpenSSL SSL/TLS server code causes the server to negotiate\n   TLS 1.0 instead of higher protocol versions when the ClientHello message\n   is badly fragmented. This allows a man-in-the-middle attacker to force a\n   downgrade to TLS 1.0 even if both the server and the client support a\n   higher protocol version, by modifying the client's TLS records.\n\n   Thanks to David Benjamin and Adam Langley (Google) for discovering and\n   researching this issue.\n   ([CVE-2014-3511])\n\n   *David Benjamin*\n\n * OpenSSL DTLS clients enabling anonymous (EC)DH ciphersuites are subject\n   to a denial of service attack. A malicious server can crash the client\n   with a null pointer dereference (read) by specifying an anonymous (EC)DH\n   ciphersuite and sending carefully crafted handshake messages.\n\n   Thanks to Felix Gröbert (Google) for discovering and researching this\n   issue.\n   ([CVE-2014-3510])\n\n   *Emilia Käsper*\n\n * By sending carefully crafted DTLS packets an attacker could cause openssl\n   to leak memory. This can be exploited through a Denial of Service attack.\n   Thanks to Adam Langley for discovering and researching this issue.\n   ([CVE-2014-3507])\n\n   *Adam Langley*\n\n * An attacker can force openssl to consume large amounts of memory whilst\n   processing DTLS handshake messages. This can be exploited through a\n   Denial of Service attack.\n   Thanks to Adam Langley for discovering and researching this issue.\n   ([CVE-2014-3506])\n\n   *Adam Langley*\n\n * An attacker can force an error condition which causes openssl to crash\n   whilst processing DTLS packets due to memory being freed twice. This\n   can be exploited through a Denial of Service attack.\n   Thanks to Adam Langley and Wan-Teh Chang for discovering and researching\n   this issue.\n   ([CVE-2014-3505])\n\n   *Adam Langley*\n\n * If a multithreaded client connects to a malicious server using a resumed\n   session and the server sends an ec point format extension it could write\n   up to 255 bytes to freed memory.\n\n   Thanks to Gabor Tyukasz (LogMeIn Inc) for discovering and researching this\n   issue.\n   ([CVE-2014-3509])\n\n   *Gabor Tyukasz*\n\n * A malicious server can crash an OpenSSL client with a null pointer\n   dereference (read) by specifying an SRP ciphersuite even though it was not\n   properly negotiated with the client. This can be exploited through a\n   Denial of Service attack.\n\n   Thanks to Joonas Kuorilehto and Riku Hietamäki (Codenomicon) for\n   discovering and researching this issue.\n   ([CVE-2014-5139])\n\n   *Steve Henson*\n\n * A flaw in OBJ_obj2txt may cause pretty printing functions such as\n   X509_name_oneline, X509_name_print_ex et al. to leak some information\n   from the stack. Applications may be affected if they echo pretty printing\n   output to the attacker.\n\n   Thanks to Ivan Fratric (Google) for discovering this issue.\n   ([CVE-2014-3508])\n\n   *Emilia Käsper, and Steve Henson*\n\n * Fix ec_GFp_simple_points_make_affine (thus, EC_POINTs_mul etc.)\n   for corner cases. (Certain input points at infinity could lead to\n   bogus results, with non-infinity inputs mapped to infinity too.)\n\n   *Bodo Moeller*\n\n### Changes between 1.0.1g and 1.0.1h [5 Jun 2014]\n\n * Fix for SSL/TLS MITM flaw. An attacker using a carefully crafted\n   handshake can force the use of weak keying material in OpenSSL\n   SSL/TLS clients and servers.\n\n   Thanks to KIKUCHI Masashi (Lepidum Co. Ltd.) for discovering and\n   researching this issue. ([CVE-2014-0224])\n\n   *KIKUCHI Masashi, Steve Henson*\n\n * Fix DTLS recursion flaw. By sending an invalid DTLS handshake to an\n   OpenSSL DTLS client the code can be made to recurse eventually crashing\n   in a DoS attack.\n\n   Thanks to Imre Rad (Search-Lab Ltd.) for discovering this issue.\n   ([CVE-2014-0221])\n\n   *Imre Rad, Steve Henson*\n\n * Fix DTLS invalid fragment vulnerability. A buffer overrun attack can\n   be triggered by sending invalid DTLS fragments to an OpenSSL DTLS\n   client or server. This is potentially exploitable to run arbitrary\n   code on a vulnerable client or server.\n\n   Thanks to Jüri Aedla for reporting this issue. ([CVE-2014-0195])\n\n   *Jüri Aedla, Steve Henson*\n\n * Fix bug in TLS code where clients enable anonymous ECDH ciphersuites\n   are subject to a denial of service attack.\n\n   Thanks to Felix Gröbert and Ivan Fratric at Google for discovering\n   this issue. ([CVE-2014-3470])\n\n   *Felix Gröbert, Ivan Fratric, Steve Henson*\n\n * Harmonize version and its documentation. -f flag is used to display\n   compilation flags.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix eckey_priv_encode so it immediately returns an error upon a failure\n   in i2d_ECPrivateKey.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix some double frees. These are not thought to be exploitable.\n\n   *mancha <mancha1@zoho.com>*\n\n### Changes between 1.0.1f and 1.0.1g [7 Apr 2014]\n\n * A missing bounds check in the handling of the TLS heartbeat extension\n   can be used to reveal up to 64k of memory to a connected client or\n   server.\n\n   Thanks for Neel Mehta of Google Security for discovering this bug and to\n   Adam Langley <agl@chromium.org> and Bodo Moeller <bmoeller@acm.org> for\n   preparing the fix ([CVE-2014-0160])\n\n   *Adam Langley, Bodo Moeller*\n\n * Fix for the attack described in the paper \"Recovering OpenSSL\n   ECDSA Nonces Using the FLUSH+RELOAD Cache Side-channel Attack\"\n   by Yuval Yarom and Naomi Benger. Details can be obtained from:\n   <http://eprint.iacr.org/2014/140>\n\n   Thanks to Yuval Yarom and Naomi Benger for discovering this\n   flaw and to Yuval Yarom for supplying a fix ([CVE-2014-0076])\n\n   *Yuval Yarom and Naomi Benger*\n\n * TLS pad extension: draft-agl-tls-padding-03\n\n   Workaround for the \"TLS hang bug\" (see FAQ and PR#2771): if the\n   TLS client Hello record length value would otherwise be > 255 and\n   less that 512 pad with a dummy extension containing zeroes so it\n   is at least 512 bytes long.\n\n   *Adam Langley, Steve Henson*\n\n### Changes between 1.0.1e and 1.0.1f [6 Jan 2014]\n\n * Fix for TLS record tampering bug. A carefully crafted invalid\n   handshake could crash OpenSSL with a NULL pointer exception.\n   Thanks to Anton Johansson for reporting this issues.\n   ([CVE-2013-4353])\n\n * Keep original DTLS digest and encryption contexts in retransmission\n   structures so we can use the previous session parameters if they need\n   to be resent. ([CVE-2013-6450])\n\n   *Steve Henson*\n\n * Add option SSL_OP_SAFARI_ECDHE_ECDSA_BUG (part of SSL_OP_ALL) which\n   avoids preferring ECDHE-ECDSA ciphers when the client appears to be\n   Safari on OS X.  Safari on OS X 10.8..10.8.3 advertises support for\n   several ECDHE-ECDSA ciphers, but fails to negotiate them.  The bug\n   is fixed in OS X 10.8.4, but Apple have ruled out both hot fixing\n   10.8..10.8.3 and forcing users to upgrade to 10.8.4 or newer.\n\n   *Rob Stradling, Adam Langley*\n\n### Changes between 1.0.1d and 1.0.1e [11 Feb 2013]\n\n * Correct fix for CVE-2013-0169. The original didn't work on AES-NI\n   supporting platforms or when small records were transferred.\n\n   *Andy Polyakov, Steve Henson*\n\n### Changes between 1.0.1c and 1.0.1d [5 Feb 2013]\n\n * Make the decoding of SSLv3, TLS and DTLS CBC records constant time.\n\n   This addresses the flaw in CBC record processing discovered by\n   Nadhem Alfardan and Kenny Paterson. Details of this attack can be found\n   at: <http://www.isg.rhul.ac.uk/tls/>\n\n   Thanks go to Nadhem Alfardan and Kenny Paterson of the Information\n   Security Group at Royal Holloway, University of London\n   (www.isg.rhul.ac.uk) for discovering this flaw and Adam Langley and\n   Emilia Käsper for the initial patch.\n   ([CVE-2013-0169])\n\n   *Emilia Käsper, Adam Langley, Ben Laurie, Andy Polyakov, Steve Henson*\n\n * Fix flaw in AESNI handling of TLS 1.2 and 1.1 records for CBC mode\n   ciphersuites which can be exploited in a denial of service attack.\n   Thanks go to and to Adam Langley <agl@chromium.org> for discovering\n   and detecting this bug and to Wolfgang Ettlinger\n   <wolfgang.ettlinger@gmail.com> for independently discovering this issue.\n   ([CVE-2012-2686])\n\n   *Adam Langley*\n\n * Return an error when checking OCSP signatures when key is NULL.\n   This fixes a DoS attack. ([CVE-2013-0166])\n\n   *Steve Henson*\n\n * Make openssl verify return errors.\n\n   *Chris Palmer <palmer@google.com> and Ben Laurie*\n\n * Call OCSP Stapling callback after ciphersuite has been chosen, so\n   the right response is stapled. Also change SSL_get_certificate()\n   so it returns the certificate actually sent.\n   See <http://rt.openssl.org/Ticket/Display.html?id=2836>.\n\n   *Rob Stradling <rob.stradling@comodo.com>*\n\n * Fix possible deadlock when decoding public keys.\n\n   *Steve Henson*\n\n * Don't use TLS 1.0 record version number in initial client hello\n   if renegotiating.\n\n   *Steve Henson*\n\n### Changes between 1.0.1b and 1.0.1c [10 May 2012]\n\n * Sanity check record length before skipping explicit IV in TLS\n   1.2, 1.1 and DTLS to fix DoS attack.\n\n   Thanks to Codenomicon for discovering this issue using Fuzz-o-Matic\n   fuzzing as a service testing platform.\n   ([CVE-2012-2333])\n\n   *Steve Henson*\n\n * Initialise tkeylen properly when encrypting CMS messages.\n   Thanks to Solar Designer of Openwall for reporting this issue.\n\n   *Steve Henson*\n\n * In FIPS mode don't try to use composite ciphers as they are not\n   approved.\n\n   *Steve Henson*\n\n### Changes between 1.0.1a and 1.0.1b [26 Apr 2012]\n\n * OpenSSL 1.0.0 sets SSL_OP_ALL to 0x80000FFFL and OpenSSL 1.0.1 and\n   1.0.1a set SSL_OP_NO_TLSv1_1 to 0x00000400L which would unfortunately\n   mean any application compiled against OpenSSL 1.0.0 headers setting\n   SSL_OP_ALL would also set SSL_OP_NO_TLSv1_1, unintentionally disabling\n   TLS 1.1 also. Fix this by changing the value of SSL_OP_NO_TLSv1_1 to\n   0x10000000L Any application which was previously compiled against\n   OpenSSL 1.0.1 or 1.0.1a headers and which cares about SSL_OP_NO_TLSv1_1\n   will need to be recompiled as a result. Letting be results in\n   inability to disable specifically TLS 1.1 and in client context,\n   in unlike event, limit maximum offered version to TLS 1.0 [see below].\n\n   *Steve Henson*\n\n * In order to ensure interoperability SSL_OP_NO_protocolX does not\n   disable just protocol X, but all protocols above X *if* there are\n   protocols *below* X still enabled. In more practical terms it means\n   that if application wants to disable TLS1.0 in favor of TLS1.1 and\n   above, it's not sufficient to pass `SSL_OP_NO_TLSv1`, one has to pass\n   `SSL_OP_NO_TLSv1|SSL_OP_NO_SSLv3|SSL_OP_NO_SSLv2`. This applies to\n   client side.\n\n   *Andy Polyakov*\n\n### Changes between 1.0.1 and 1.0.1a [19 Apr 2012]\n\n * Check for potentially exploitable overflows in asn1_d2i_read_bio\n   BUF_mem_grow and BUF_mem_grow_clean. Refuse attempts to shrink buffer\n   in CRYPTO_realloc_clean.\n\n   Thanks to Tavis Ormandy, Google Security Team, for discovering this\n   issue and to Adam Langley <agl@chromium.org> for fixing it.\n   ([CVE-2012-2110])\n\n   *Adam Langley (Google), Tavis Ormandy, Google Security Team*\n\n * Don't allow TLS 1.2 SHA-256 ciphersuites in TLS 1.0, 1.1 connections.\n\n   *Adam Langley*\n\n * Workarounds for some broken servers that \"hang\" if a client hello\n   record length exceeds 255 bytes.\n\n   1. Do not use record version number > TLS 1.0 in initial client\n      hello: some (but not all) hanging servers will now work.\n   2. If we set OPENSSL_MAX_TLS1_2_CIPHER_LENGTH this will truncate\n      the number of ciphers sent in the client hello. This should be\n      set to an even number, such as 50, for example by passing:\n      -DOPENSSL_MAX_TLS1_2_CIPHER_LENGTH=50 to config or Configure.\n      Most broken servers should now work.\n   3. If all else fails setting OPENSSL_NO_TLS1_2_CLIENT will disable\n      TLS 1.2 client support entirely.\n\n   *Steve Henson*\n\n * Fix SEGV in Vector Permutation AES module observed in OpenSSH.\n\n   *Andy Polyakov*\n\n### Changes between 1.0.0h and 1.0.1  [14 Mar 2012]\n\n * Add compatibility with old MDC2 signatures which use an ASN1 OCTET\n   STRING form instead of a DigestInfo.\n\n   *Steve Henson*\n\n * The format used for MDC2 RSA signatures is inconsistent between EVP\n   and the RSA_sign/RSA_verify functions. This was made more apparent when\n   OpenSSL used RSA_sign/RSA_verify for some RSA signatures in particular\n   those which went through EVP_PKEY_METHOD in 1.0.0 and later. Detect\n   the correct format in RSA_verify so both forms transparently work.\n\n   *Steve Henson*\n\n * Some servers which support TLS 1.0 can choke if we initially indicate\n   support for TLS 1.2 and later renegotiate using TLS 1.0 in the RSA\n   encrypted premaster secret. As a workaround use the maximum permitted\n   client version in client hello, this should keep such servers happy\n   and still work with previous versions of OpenSSL.\n\n   *Steve Henson*\n\n * Add support for TLS/DTLS heartbeats.\n\n   *Robin Seggelmann <seggelmann@fh-muenster.de>*\n\n * Add support for SCTP.\n\n   *Robin Seggelmann <seggelmann@fh-muenster.de>*\n\n * Improved PRNG seeding for VOS.\n\n   *Paul Green <Paul.Green@stratus.com>*\n\n * Extensive assembler packs updates, most notably:\n\n   - x86[_64]:     AES-NI, PCLMULQDQ, RDRAND support;\n   - x86[_64]:     SSSE3 support (SHA1, vector-permutation AES);\n   - x86_64:       bit-sliced AES implementation;\n   - ARM:          NEON support, contemporary platforms optimizations;\n   - s390x:        z196 support;\n   - `*`:            GHASH and GF(2^m) multiplication implementations;\n\n   *Andy Polyakov*\n\n * Make TLS-SRP code conformant with RFC 5054 API cleanup\n   (removal of unnecessary code)\n\n   *Peter Sylvester <peter.sylvester@edelweb.fr>*\n\n * Add TLS key material exporter from RFC 5705.\n\n   *Eric Rescorla*\n\n * Add DTLS-SRTP negotiation from RFC 5764.\n\n   *Eric Rescorla*\n\n * Add Next Protocol Negotiation,\n   <http://tools.ietf.org/html/draft-agl-tls-nextprotoneg-00>. Can be\n   disabled with a no-npn flag to config or Configure. Code donated\n   by Google.\n\n   *Adam Langley <agl@google.com> and Ben Laurie*\n\n * Add optional 64-bit optimized implementations of elliptic curves NIST-P224,\n   NIST-P256, NIST-P521, with constant-time single point multiplication on\n   typical inputs. Compiler support for the nonstandard type `__uint128_t` is\n   required to use this (present in gcc 4.4 and later, for 64-bit builds).\n   Code made available under Apache License version 2.0.\n\n   Specify \"enable-ec_nistp_64_gcc_128\" on the Configure (or config) command\n   line to include this in your build of OpenSSL, and run \"make depend\" (or\n   \"make update\"). This enables the following EC_METHODs:\n\n           EC_GFp_nistp224_method()\n           EC_GFp_nistp256_method()\n           EC_GFp_nistp521_method()\n\n   EC_GROUP_new_by_curve_name() will automatically use these (while\n   EC_GROUP_new_curve_GFp() currently prefers the more flexible\n   implementations).\n\n   *Emilia Käsper, Adam Langley, Bodo Moeller (Google)*\n\n * Use type ossl_ssize_t instead of ssize_t which isn't available on\n   all platforms. Move ssize_t definition from e_os.h to the public\n   header file e_os2.h as it now appears in public header file cms.h\n\n   *Steve Henson*\n\n * New -sigopt option to the ca, req and x509 utilities. Additional\n   signature parameters can be passed using this option and in\n   particular PSS.\n\n   *Steve Henson*\n\n * Add RSA PSS signing function. This will generate and set the\n   appropriate AlgorithmIdentifiers for PSS based on those in the\n   corresponding EVP_MD_CTX structure. No application support yet.\n\n   *Steve Henson*\n\n * Support for companion algorithm specific ASN1 signing routines.\n   New function ASN1_item_sign_ctx() signs a pre-initialised\n   EVP_MD_CTX structure and sets AlgorithmIdentifiers based on\n   the appropriate parameters.\n\n   *Steve Henson*\n\n * Add new algorithm specific ASN1 verification initialisation function\n   to EVP_PKEY_ASN1_METHOD: this is not in EVP_PKEY_METHOD since the ASN1\n   handling will be the same no matter what EVP_PKEY_METHOD is used.\n   Add a PSS handler to support verification of PSS signatures: checked\n   against a number of sample certificates.\n\n   *Steve Henson*\n\n * Add signature printing for PSS. Add PSS OIDs.\n\n   *Steve Henson, Martin Kaiser <lists@kaiser.cx>*\n\n * Add algorithm specific signature printing. An individual ASN1 method\n   can now print out signatures instead of the standard hex dump.\n\n   More complex signatures (e.g. PSS) can print out more meaningful\n   information. Include DSA version that prints out the signature\n   parameters r, s.\n\n   *Steve Henson*\n\n * Password based recipient info support for CMS library: implementing\n   RFC3211.\n\n   *Steve Henson*\n\n * Split password based encryption into PBES2 and PBKDF2 functions. This\n   neatly separates the code into cipher and PBE sections and is required\n   for some algorithms that split PBES2 into separate pieces (such as\n   password based CMS).\n\n   *Steve Henson*\n\n * Session-handling fixes:\n   - Fix handling of connections that are resuming with a session ID,\n     but also support Session Tickets.\n   - Fix a bug that suppressed issuing of a new ticket if the client\n     presented a ticket with an expired session.\n   - Try to set the ticket lifetime hint to something reasonable.\n   - Make tickets shorter by excluding irrelevant information.\n   - On the client side, don't ignore renewed tickets.\n\n   *Adam Langley, Bodo Moeller (Google)*\n\n * Fix PSK session representation.\n\n   *Bodo Moeller*\n\n * Add RC4-MD5 and AESNI-SHA1 \"stitched\" implementations.\n\n   This work was sponsored by Intel.\n\n   *Andy Polyakov*\n\n * Add GCM support to TLS library. Some custom code is needed to split\n   the IV between the fixed (from PRF) and explicit (from TLS record)\n   portions. This adds all GCM ciphersuites supported by RFC5288 and\n   RFC5289. Generalise some `AES*` cipherstrings to include GCM and\n   add a special AESGCM string for GCM only.\n\n   *Steve Henson*\n\n * Expand range of ctrls for AES GCM. Permit setting invocation\n   field on decrypt and retrieval of invocation field only on encrypt.\n\n   *Steve Henson*\n\n * Add HMAC ECC ciphersuites from RFC5289. Include SHA384 PRF support.\n   As required by RFC5289 these ciphersuites cannot be used if for\n   versions of TLS earlier than 1.2.\n\n   *Steve Henson*\n\n * For FIPS capable OpenSSL interpret a NULL default public key method\n   as unset and return the appropriate default but do *not* set the default.\n   This means we can return the appropriate method in applications that\n   switch between FIPS and non-FIPS modes.\n\n   *Steve Henson*\n\n * Redirect HMAC and CMAC operations to FIPS module in FIPS mode. If an\n   ENGINE is used then we cannot handle that in the FIPS module so we\n   keep original code iff non-FIPS operations are allowed.\n\n   *Steve Henson*\n\n * Add -attime option to openssl utilities.\n\n   *Peter Eckersley <pde@eff.org>, Ben Laurie and Steve Henson*\n\n * Redirect DSA and DH operations to FIPS module in FIPS mode.\n\n   *Steve Henson*\n\n * Redirect ECDSA and ECDH operations to FIPS module in FIPS mode. Also use\n   FIPS EC methods unconditionally for now.\n\n   *Steve Henson*\n\n * New build option no-ec2m to disable characteristic 2 code.\n\n   *Steve Henson*\n\n * Backport libcrypto audit of return value checking from 1.1.0-dev; not\n   all cases can be covered as some introduce binary incompatibilities.\n\n   *Steve Henson*\n\n * Redirect RSA operations to FIPS module including keygen,\n   encrypt, decrypt, sign and verify. Block use of non FIPS RSA methods.\n\n   *Steve Henson*\n\n * Add similar low-level API blocking to ciphers.\n\n   *Steve Henson*\n\n * low-level digest APIs are not approved in FIPS mode: any attempt\n   to use these will cause a fatal error. Applications that *really* want\n   to use them can use the `private_*` version instead.\n\n   *Steve Henson*\n\n * Redirect cipher operations to FIPS module for FIPS builds.\n\n   *Steve Henson*\n\n * Redirect digest operations to FIPS module for FIPS builds.\n\n   *Steve Henson*\n\n * Update build system to add \"fips\" flag which will link in fipscanister.o\n   for static and shared library builds embedding a signature if needed.\n\n   *Steve Henson*\n\n * Output TLS supported curves in preference order instead of numerical\n   order. This is currently hardcoded for the highest order curves first.\n   This should be configurable so applications can judge speed vs strength.\n\n   *Steve Henson*\n\n * Add TLS v1.2 server support for client authentication.\n\n   *Steve Henson*\n\n * Add support for FIPS mode in ssl library: disable SSLv3, non-FIPS ciphers\n   and enable MD5.\n\n   *Steve Henson*\n\n * Functions FIPS_mode_set() and FIPS_mode() which call the underlying\n   FIPS modules versions.\n\n   *Steve Henson*\n\n * Add TLS v1.2 client side support for client authentication. Keep cache\n   of handshake records longer as we don't know the hash algorithm to use\n   until after the certificate request message is received.\n\n   *Steve Henson*\n\n * Initial TLS v1.2 client support. Add a default signature algorithms\n   extension including all the algorithms we support. Parse new signature\n   format in client key exchange. Relax some ECC signing restrictions for\n   TLS v1.2 as indicated in RFC5246.\n\n   *Steve Henson*\n\n * Add server support for TLS v1.2 signature algorithms extension. Switch\n   to new signature format when needed using client digest preference.\n   All server ciphersuites should now work correctly in TLS v1.2. No client\n   support yet and no support for client certificates.\n\n   *Steve Henson*\n\n * Initial TLS v1.2 support. Add new SHA256 digest to ssl code, switch\n   to SHA256 for PRF when using TLS v1.2 and later. Add new SHA256 based\n   ciphersuites. At present only RSA key exchange ciphersuites work with\n   TLS v1.2. Add new option for TLS v1.2 replacing the old and obsolete\n   SSL_OP_PKCS1_CHECK flags with SSL_OP_NO_TLSv1_2. New TLSv1.2 methods\n   and version checking.\n\n   *Steve Henson*\n\n * New option OPENSSL_NO_SSL_INTERN. If an application can be compiled\n   with this defined it will not be affected by any changes to ssl internal\n   structures. Add several utility functions to allow openssl application\n   to work with OPENSSL_NO_SSL_INTERN defined.\n\n   *Steve Henson*\n\n * A long standing patch to add support for SRP from EdelWeb (Peter\n   Sylvester and Christophe Renou) was integrated.\n   *Christophe Renou <christophe.renou@edelweb.fr>, Peter Sylvester\n   <peter.sylvester@edelweb.fr>, Tom Wu <tjw@cs.stanford.edu>, and\n   Ben Laurie*\n\n * Add functions to copy EVP_PKEY_METHOD and retrieve flags and id.\n\n   *Steve Henson*\n\n * Permit abbreviated handshakes when renegotiating using the function\n   SSL_renegotiate_abbreviated().\n\n   *Robin Seggelmann <seggelmann@fh-muenster.de>*\n\n * Add call to ENGINE_register_all_complete() to\n   ENGINE_load_builtin_engines(), so some implementations get used\n   automatically instead of needing explicit application support.\n\n   *Steve Henson*\n\n * Add support for TLS key exporter as described in RFC5705.\n\n   *Robin Seggelmann <seggelmann@fh-muenster.de>, Steve Henson*\n\n * Initial TLSv1.1 support. Since TLSv1.1 is very similar to TLS v1.0 only\n   a few changes are required:\n\n     Add SSL_OP_NO_TLSv1_1 flag.\n     Add TLSv1_1 methods.\n     Update version checking logic to handle version 1.1.\n     Add explicit IV handling (ported from DTLS code).\n     Add command line options to s_client/s_server.\n\n   *Steve Henson*\n\nOpenSSL 1.0.0\n-------------\n\n### Changes between 1.0.0s and 1.0.0t [3 Dec 2015]\n\n * X509_ATTRIBUTE memory leak\n\n   When presented with a malformed X509_ATTRIBUTE structure OpenSSL will leak\n   memory. This structure is used by the PKCS#7 and CMS routines so any\n   application which reads PKCS#7 or CMS data from untrusted sources is\n   affected. SSL/TLS is not affected.\n\n   This issue was reported to OpenSSL by Adam Langley (Google/BoringSSL) using\n   libFuzzer.\n   ([CVE-2015-3195])\n\n   *Stephen Henson*\n\n * Race condition handling PSK identify hint\n\n   If PSK identity hints are received by a multi-threaded client then\n   the values are wrongly updated in the parent SSL_CTX structure. This can\n   result in a race condition potentially leading to a double free of the\n   identify hint data.\n   ([CVE-2015-3196])\n\n   *Stephen Henson*\n\n### Changes between 1.0.0r and 1.0.0s [11 Jun 2015]\n\n * Malformed ECParameters causes infinite loop\n\n   When processing an ECParameters structure OpenSSL enters an infinite loop\n   if the curve specified is over a specially malformed binary polynomial\n   field.\n\n   This can be used to perform denial of service against any\n   system which processes public keys, certificate requests or\n   certificates.  This includes TLS clients and TLS servers with\n   client authentication enabled.\n\n   This issue was reported to OpenSSL by Joseph Barr-Pixton.\n   ([CVE-2015-1788])\n\n   *Andy Polyakov*\n\n * Exploitable out-of-bounds read in X509_cmp_time\n\n   X509_cmp_time does not properly check the length of the ASN1_TIME\n   string and can read a few bytes out of bounds. In addition,\n   X509_cmp_time accepts an arbitrary number of fractional seconds in the\n   time string.\n\n   An attacker can use this to craft malformed certificates and CRLs of\n   various sizes and potentially cause a segmentation fault, resulting in\n   a DoS on applications that verify certificates or CRLs. TLS clients\n   that verify CRLs are affected. TLS clients and servers with client\n   authentication enabled may be affected if they use custom verification\n   callbacks.\n\n   This issue was reported to OpenSSL by Robert Swiecki (Google), and\n   independently by Hanno Böck.\n   ([CVE-2015-1789])\n\n   *Emilia Käsper*\n\n * PKCS7 crash with missing EnvelopedContent\n\n   The PKCS#7 parsing code does not handle missing inner EncryptedContent\n   correctly. An attacker can craft malformed ASN.1-encoded PKCS#7 blobs\n   with missing content and trigger a NULL pointer dereference on parsing.\n\n   Applications that decrypt PKCS#7 data or otherwise parse PKCS#7\n   structures from untrusted sources are affected. OpenSSL clients and\n   servers are not affected.\n\n   This issue was reported to OpenSSL by Michal Zalewski (Google).\n   ([CVE-2015-1790])\n\n   *Emilia Käsper*\n\n * CMS verify infinite loop with unknown hash function\n\n   When verifying a signedData message the CMS code can enter an infinite loop\n   if presented with an unknown hash function OID. This can be used to perform\n   denial of service against any system which verifies signedData messages using\n   the CMS code.\n   This issue was reported to OpenSSL by Johannes Bauer.\n   ([CVE-2015-1792])\n\n   *Stephen Henson*\n\n * Race condition handling NewSessionTicket\n\n   If a NewSessionTicket is received by a multi-threaded client when attempting to\n   reuse a previous ticket then a race condition can occur potentially leading to\n   a double free of the ticket data.\n   ([CVE-2015-1791])\n\n   *Matt Caswell*\n\n### Changes between 1.0.0q and 1.0.0r [19 Mar 2015]\n\n * Segmentation fault in ASN1_TYPE_cmp fix\n\n   The function ASN1_TYPE_cmp will crash with an invalid read if an attempt is\n   made to compare ASN.1 boolean types. Since ASN1_TYPE_cmp is used to check\n   certificate signature algorithm consistency this can be used to crash any\n   certificate verification operation and exploited in a DoS attack. Any\n   application which performs certificate verification is vulnerable including\n   OpenSSL clients and servers which enable client authentication.\n   ([CVE-2015-0286])\n\n   *Stephen Henson*\n\n * ASN.1 structure reuse memory corruption fix\n\n   Reusing a structure in ASN.1 parsing may allow an attacker to cause\n   memory corruption via an invalid write. Such reuse is and has been\n   strongly discouraged and is believed to be rare.\n\n   Applications that parse structures containing CHOICE or ANY DEFINED BY\n   components may be affected. Certificate parsing (d2i_X509 and related\n   functions) are however not affected. OpenSSL clients and servers are\n   not affected.\n   ([CVE-2015-0287])\n\n   *Stephen Henson*\n\n * PKCS7 NULL pointer dereferences fix\n\n   The PKCS#7 parsing code does not handle missing outer ContentInfo\n   correctly. An attacker can craft malformed ASN.1-encoded PKCS#7 blobs with\n   missing content and trigger a NULL pointer dereference on parsing.\n\n   Applications that verify PKCS#7 signatures, decrypt PKCS#7 data or\n   otherwise parse PKCS#7 structures from untrusted sources are\n   affected. OpenSSL clients and servers are not affected.\n\n   This issue was reported to OpenSSL by Michal Zalewski (Google).\n   ([CVE-2015-0289])\n\n   *Emilia Käsper*\n\n * DoS via reachable assert in SSLv2 servers fix\n\n   A malicious client can trigger an OPENSSL_assert (i.e., an abort) in\n   servers that both support SSLv2 and enable export cipher suites by sending\n   a specially crafted SSLv2 CLIENT-MASTER-KEY message.\n\n   This issue was discovered by Sean Burford (Google) and Emilia Käsper\n   (OpenSSL development team).\n   ([CVE-2015-0293])\n\n   *Emilia Käsper*\n\n * Use After Free following d2i_ECPrivatekey error fix\n\n   A malformed EC private key file consumed via the d2i_ECPrivateKey function\n   could cause a use after free condition. This, in turn, could cause a double\n   free in several private key parsing functions (such as d2i_PrivateKey\n   or EVP_PKCS82PKEY) and could lead to a DoS attack or memory corruption\n   for applications that receive EC private keys from untrusted\n   sources. This scenario is considered rare.\n\n   This issue was discovered by the BoringSSL project and fixed in their\n   commit 517073cd4b.\n   ([CVE-2015-0209])\n\n   *Matt Caswell*\n\n * X509_to_X509_REQ NULL pointer deref fix\n\n   The function X509_to_X509_REQ will crash with a NULL pointer dereference if\n   the certificate key is invalid. This function is rarely used in practice.\n\n   This issue was discovered by Brian Carpenter.\n   ([CVE-2015-0288])\n\n   *Stephen Henson*\n\n * Removed the export ciphers from the DEFAULT ciphers\n\n   *Kurt Roeckx*\n\n### Changes between 1.0.0p and 1.0.0q [15 Jan 2015]\n\n * Build fixes for the Windows and OpenVMS platforms\n\n   *Matt Caswell and Richard Levitte*\n\n### Changes between 1.0.0o and 1.0.0p [8 Jan 2015]\n\n * Fix DTLS segmentation fault in dtls1_get_record. A carefully crafted DTLS\n   message can cause a segmentation fault in OpenSSL due to a NULL pointer\n   dereference. This could lead to a Denial Of Service attack. Thanks to\n   Markus Stenberg of Cisco Systems, Inc. for reporting this issue.\n   ([CVE-2014-3571])\n\n   *Steve Henson*\n\n * Fix DTLS memory leak in dtls1_buffer_record. A memory leak can occur in the\n   dtls1_buffer_record function under certain conditions. In particular this\n   could occur if an attacker sent repeated DTLS records with the same\n   sequence number but for the next epoch. The memory leak could be exploited\n   by an attacker in a Denial of Service attack through memory exhaustion.\n   Thanks to Chris Mueller for reporting this issue.\n   ([CVE-2015-0206])\n\n   *Matt Caswell*\n\n * Fix issue where no-ssl3 configuration sets method to NULL. When openssl is\n   built with the no-ssl3 option and an SSL v3 ClientHello is received the ssl\n   method would be set to NULL which could later result in a NULL pointer\n   dereference. Thanks to Frank Schmirler for reporting this issue.\n   ([CVE-2014-3569])\n\n   *Kurt Roeckx*\n\n * Abort handshake if server key exchange message is omitted for ephemeral\n   ECDH ciphersuites.\n\n   Thanks to Karthikeyan Bhargavan of the PROSECCO team at INRIA for\n   reporting this issue.\n   ([CVE-2014-3572])\n\n   *Steve Henson*\n\n * Remove non-export ephemeral RSA code on client and server. This code\n   violated the TLS standard by allowing the use of temporary RSA keys in\n   non-export ciphersuites and could be used by a server to effectively\n   downgrade the RSA key length used to a value smaller than the server\n   certificate. Thanks for Karthikeyan Bhargavan of the PROSECCO team at\n   INRIA or reporting this issue.\n   ([CVE-2015-0204])\n\n   *Steve Henson*\n\n * Fixed issue where DH client certificates are accepted without verification.\n   An OpenSSL server will accept a DH certificate for client authentication\n   without the certificate verify message. This effectively allows a client to\n   authenticate without the use of a private key. This only affects servers\n   which trust a client certificate authority which issues certificates\n   containing DH keys: these are extremely rare and hardly ever encountered.\n   Thanks for Karthikeyan Bhargavan of the PROSECCO team at INRIA or reporting\n   this issue.\n   ([CVE-2015-0205])\n\n   *Steve Henson*\n\n * Correct Bignum squaring. Bignum squaring (BN_sqr) may produce incorrect\n   results on some platforms, including x86_64. This bug occurs at random\n   with a very low probability, and is not known to be exploitable in any\n   way, though its exact impact is difficult to determine. Thanks to Pieter\n   Wuille (Blockstream) who reported this issue and also suggested an initial\n   fix. Further analysis was conducted by the OpenSSL development team and\n   Adam Langley of Google. The final fix was developed by Andy Polyakov of\n   the OpenSSL core team.\n   ([CVE-2014-3570])\n\n   *Andy Polyakov*\n\n * Fix various certificate fingerprint issues.\n\n   By using non-DER or invalid encodings outside the signed portion of a\n   certificate the fingerprint can be changed without breaking the signature.\n   Although no details of the signed portion of the certificate can be changed\n   this can cause problems with some applications: e.g. those using the\n   certificate fingerprint for blacklists.\n\n   1. Reject signatures with non zero unused bits.\n\n   If the BIT STRING containing the signature has non zero unused bits reject\n   the signature. All current signature algorithms require zero unused bits.\n\n   2. Check certificate algorithm consistency.\n\n   Check the AlgorithmIdentifier inside TBS matches the one in the\n   certificate signature. NB: this will result in signature failure\n   errors for some broken certificates.\n\n   Thanks to Konrad Kraszewski from Google for reporting this issue.\n\n   3. Check DSA/ECDSA signatures use DER.\n\n   Re-encode DSA/ECDSA signatures and compare with the original received\n   signature. Return an error if there is a mismatch.\n\n   This will reject various cases including garbage after signature\n   (thanks to Antti Karjalainen and Tuomo Untinen from the Codenomicon CROSS\n   program for discovering this case) and use of BER or invalid ASN.1 INTEGERs\n   (negative or with leading zeroes).\n\n   Further analysis was conducted and fixes were developed by Stephen Henson\n   of the OpenSSL core team.\n\n   ([CVE-2014-8275])\n\n   *Steve Henson*\n\n### Changes between 1.0.0n and 1.0.0o [15 Oct 2014]\n\n * Session Ticket Memory Leak.\n\n   When an OpenSSL SSL/TLS/DTLS server receives a session ticket the\n   integrity of that ticket is first verified. In the event of a session\n   ticket integrity check failing, OpenSSL will fail to free memory\n   causing a memory leak. By sending a large number of invalid session\n   tickets an attacker could exploit this issue in a Denial Of Service\n   attack.\n   ([CVE-2014-3567])\n\n   *Steve Henson*\n\n * Build option no-ssl3 is incomplete.\n\n   When OpenSSL is configured with \"no-ssl3\" as a build option, servers\n   could accept and complete an SSL 3.0 handshake, and clients could be\n   configured to send them.\n   ([CVE-2014-3568])\n\n   *Akamai and the OpenSSL team*\n\n * Add support for TLS_FALLBACK_SCSV.\n   Client applications doing fallback retries should call\n   SSL_set_mode(s, SSL_MODE_SEND_FALLBACK_SCSV).\n   ([CVE-2014-3566])\n\n   *Adam Langley, Bodo Moeller*\n\n * Add additional DigestInfo checks.\n\n   Re-encode DigestInto in DER and check against the original when\n   verifying RSA signature: this will reject any improperly encoded\n   DigestInfo structures.\n\n   Note: this is a precautionary measure and no attacks are currently known.\n\n   *Steve Henson*\n\n### Changes between 1.0.0m and 1.0.0n [6 Aug 2014]\n\n * OpenSSL DTLS clients enabling anonymous (EC)DH ciphersuites are subject\n   to a denial of service attack. A malicious server can crash the client\n   with a null pointer dereference (read) by specifying an anonymous (EC)DH\n   ciphersuite and sending carefully crafted handshake messages.\n\n   Thanks to Felix Gröbert (Google) for discovering and researching this\n   issue.\n   ([CVE-2014-3510])\n\n   *Emilia Käsper*\n\n * By sending carefully crafted DTLS packets an attacker could cause openssl\n   to leak memory. This can be exploited through a Denial of Service attack.\n   Thanks to Adam Langley for discovering and researching this issue.\n   ([CVE-2014-3507])\n\n   *Adam Langley*\n\n * An attacker can force openssl to consume large amounts of memory whilst\n   processing DTLS handshake messages. This can be exploited through a\n   Denial of Service attack.\n   Thanks to Adam Langley for discovering and researching this issue.\n   ([CVE-2014-3506])\n\n   *Adam Langley*\n\n * An attacker can force an error condition which causes openssl to crash\n   whilst processing DTLS packets due to memory being freed twice. This\n   can be exploited through a Denial of Service attack.\n   Thanks to Adam Langley and Wan-Teh Chang for discovering and researching\n   this issue.\n   ([CVE-2014-3505])\n\n   *Adam Langley*\n\n * If a multithreaded client connects to a malicious server using a resumed\n   session and the server sends an ec point format extension it could write\n   up to 255 bytes to freed memory.\n\n   Thanks to Gabor Tyukasz (LogMeIn Inc) for discovering and researching this\n   issue.\n   ([CVE-2014-3509])\n\n   *Gabor Tyukasz*\n\n * A flaw in OBJ_obj2txt may cause pretty printing functions such as\n   X509_name_oneline, X509_name_print_ex et al. to leak some information\n   from the stack. Applications may be affected if they echo pretty printing\n   output to the attacker.\n\n   Thanks to Ivan Fratric (Google) for discovering this issue.\n   ([CVE-2014-3508])\n\n   *Emilia Käsper, and Steve Henson*\n\n * Fix ec_GFp_simple_points_make_affine (thus, EC_POINTs_mul etc.)\n   for corner cases. (Certain input points at infinity could lead to\n   bogus results, with non-infinity inputs mapped to infinity too.)\n\n   *Bodo Moeller*\n\n### Changes between 1.0.0l and 1.0.0m [5 Jun 2014]\n\n * Fix for SSL/TLS MITM flaw. An attacker using a carefully crafted\n   handshake can force the use of weak keying material in OpenSSL\n   SSL/TLS clients and servers.\n\n   Thanks to KIKUCHI Masashi (Lepidum Co. Ltd.) for discovering and\n   researching this issue. ([CVE-2014-0224])\n\n   *KIKUCHI Masashi, Steve Henson*\n\n * Fix DTLS recursion flaw. By sending an invalid DTLS handshake to an\n   OpenSSL DTLS client the code can be made to recurse eventually crashing\n   in a DoS attack.\n\n   Thanks to Imre Rad (Search-Lab Ltd.) for discovering this issue.\n   ([CVE-2014-0221])\n\n   *Imre Rad, Steve Henson*\n\n * Fix DTLS invalid fragment vulnerability. A buffer overrun attack can\n   be triggered by sending invalid DTLS fragments to an OpenSSL DTLS\n   client or server. This is potentially exploitable to run arbitrary\n   code on a vulnerable client or server.\n\n   Thanks to Jüri Aedla for reporting this issue. ([CVE-2014-0195])\n\n   *Jüri Aedla, Steve Henson*\n\n * Fix bug in TLS code where clients enable anonymous ECDH ciphersuites\n   are subject to a denial of service attack.\n\n   Thanks to Felix Gröbert and Ivan Fratric at Google for discovering\n   this issue. ([CVE-2014-3470])\n\n   *Felix Gröbert, Ivan Fratric, Steve Henson*\n\n * Harmonize version and its documentation. -f flag is used to display\n   compilation flags.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix eckey_priv_encode so it immediately returns an error upon a failure\n   in i2d_ECPrivateKey.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix some double frees. These are not thought to be exploitable.\n\n   *mancha <mancha1@zoho.com>*\n\n * Fix for the attack described in the paper \"Recovering OpenSSL\n   ECDSA Nonces Using the FLUSH+RELOAD Cache Side-channel Attack\"\n   by Yuval Yarom and Naomi Benger. Details can be obtained from:\n   <http://eprint.iacr.org/2014/140>\n\n   Thanks to Yuval Yarom and Naomi Benger for discovering this\n   flaw and to Yuval Yarom for supplying a fix ([CVE-2014-0076])\n\n   *Yuval Yarom and Naomi Benger*\n\n### Changes between 1.0.0k and 1.0.0l [6 Jan 2014]\n\n * Keep original DTLS digest and encryption contexts in retransmission\n   structures so we can use the previous session parameters if they need\n   to be resent. ([CVE-2013-6450])\n\n   *Steve Henson*\n\n * Add option SSL_OP_SAFARI_ECDHE_ECDSA_BUG (part of SSL_OP_ALL) which\n   avoids preferring ECDHE-ECDSA ciphers when the client appears to be\n   Safari on OS X.  Safari on OS X 10.8..10.8.3 advertises support for\n   several ECDHE-ECDSA ciphers, but fails to negotiate them.  The bug\n   is fixed in OS X 10.8.4, but Apple have ruled out both hot fixing\n   10.8..10.8.3 and forcing users to upgrade to 10.8.4 or newer.\n\n   *Rob Stradling, Adam Langley*\n\n### Changes between 1.0.0j and 1.0.0k [5 Feb 2013]\n\n * Make the decoding of SSLv3, TLS and DTLS CBC records constant time.\n\n   This addresses the flaw in CBC record processing discovered by\n   Nadhem Alfardan and Kenny Paterson. Details of this attack can be found\n   at: <http://www.isg.rhul.ac.uk/tls/>\n\n   Thanks go to Nadhem Alfardan and Kenny Paterson of the Information\n   Security Group at Royal Holloway, University of London\n   (www.isg.rhul.ac.uk) for discovering this flaw and Adam Langley and\n   Emilia Käsper for the initial patch.\n   ([CVE-2013-0169])\n\n   *Emilia Käsper, Adam Langley, Ben Laurie, Andy Polyakov, Steve Henson*\n\n * Return an error when checking OCSP signatures when key is NULL.\n   This fixes a DoS attack. ([CVE-2013-0166])\n\n   *Steve Henson*\n\n * Call OCSP Stapling callback after ciphersuite has been chosen, so\n   the right response is stapled. Also change SSL_get_certificate()\n   so it returns the certificate actually sent.\n   See <http://rt.openssl.org/Ticket/Display.html?id=2836>.\n   (This is a backport)\n\n   *Rob Stradling <rob.stradling@comodo.com>*\n\n * Fix possible deadlock when decoding public keys.\n\n   *Steve Henson*\n\n### Changes between 1.0.0i and 1.0.0j [10 May 2012]\n\n[NB: OpenSSL 1.0.0i and later 1.0.0 patch levels were released after\nOpenSSL 1.0.1.]\n\n * Sanity check record length before skipping explicit IV in DTLS\n   to fix DoS attack.\n\n   Thanks to Codenomicon for discovering this issue using Fuzz-o-Matic\n   fuzzing as a service testing platform.\n   ([CVE-2012-2333])\n\n   *Steve Henson*\n\n * Initialise tkeylen properly when encrypting CMS messages.\n   Thanks to Solar Designer of Openwall for reporting this issue.\n\n   *Steve Henson*\n\n### Changes between 1.0.0h and 1.0.0i [19 Apr 2012]\n\n * Check for potentially exploitable overflows in asn1_d2i_read_bio\n   BUF_mem_grow and BUF_mem_grow_clean. Refuse attempts to shrink buffer\n   in CRYPTO_realloc_clean.\n\n   Thanks to Tavis Ormandy, Google Security Team, for discovering this\n   issue and to Adam Langley <agl@chromium.org> for fixing it.\n   ([CVE-2012-2110])\n\n   *Adam Langley (Google), Tavis Ormandy, Google Security Team*\n\n### Changes between 1.0.0g and 1.0.0h [12 Mar 2012]\n\n * Fix MMA (Bleichenbacher's attack on PKCS #1 v1.5 RSA padding) weakness\n   in CMS and PKCS7 code. When RSA decryption fails use a random key for\n   content decryption and always return the same error. Note: this attack\n   needs on average 2^20 messages so it only affects automated senders. The\n   old behaviour can be re-enabled in the CMS code by setting the\n   CMS_DEBUG_DECRYPT flag: this is useful for debugging and testing where\n   an MMA defence is not necessary.\n   Thanks to Ivan Nestlerode <inestlerode@us.ibm.com> for discovering\n   this issue. ([CVE-2012-0884])\n\n   *Steve Henson*\n\n * Fix CVE-2011-4619: make sure we really are receiving a\n   client hello before rejecting multiple SGC restarts. Thanks to\n   Ivan Nestlerode <inestlerode@us.ibm.com> for discovering this bug.\n\n   *Steve Henson*\n\n### Changes between 1.0.0f and 1.0.0g [18 Jan 2012]\n\n * Fix for DTLS DoS issue introduced by fix for CVE-2011-4109.\n   Thanks to Antonio Martin, Enterprise Secure Access Research and\n   Development, Cisco Systems, Inc. for discovering this bug and\n   preparing a fix. ([CVE-2012-0050])\n\n   *Antonio Martin*\n\n### Changes between 1.0.0e and 1.0.0f [4 Jan 2012]\n\n * Nadhem Alfardan and Kenny Paterson have discovered an extension\n   of the Vaudenay padding oracle attack on CBC mode encryption\n   which enables an efficient plaintext recovery attack against\n   the OpenSSL implementation of DTLS. Their attack exploits timing\n   differences arising during decryption processing. A research\n   paper describing this attack can be found at:\n   <http://www.isg.rhul.ac.uk/~kp/dtls.pdf>\n   Thanks go to Nadhem Alfardan and Kenny Paterson of the Information\n   Security Group at Royal Holloway, University of London\n   (www.isg.rhul.ac.uk) for discovering this flaw and to Robin Seggelmann\n   <seggelmann@fh-muenster.de> and Michael Tuexen <tuexen@fh-muenster.de>\n   for preparing the fix. ([CVE-2011-4108])\n\n   *Robin Seggelmann, Michael Tuexen*\n\n * Clear bytes used for block padding of SSL 3.0 records.\n   ([CVE-2011-4576])\n\n   *Adam Langley (Google)*\n\n * Only allow one SGC handshake restart for SSL/TLS. Thanks to George\n   Kadianakis <desnacked@gmail.com> for discovering this issue and\n   Adam Langley for preparing the fix. ([CVE-2011-4619])\n\n   *Adam Langley (Google)*\n\n * Check parameters are not NULL in GOST ENGINE. ([CVE-2012-0027])\n\n   *Andrey Kulikov <amdeich@gmail.com>*\n\n * Prevent malformed RFC3779 data triggering an assertion failure.\n   Thanks to Andrew Chi, BBN Technologies, for discovering the flaw\n   and Rob Austein <sra@hactrn.net> for fixing it. ([CVE-2011-4577])\n\n   *Rob Austein <sra@hactrn.net>*\n\n * Improved PRNG seeding for VOS.\n\n   *Paul Green <Paul.Green@stratus.com>*\n\n * Fix ssl_ciph.c set-up race.\n\n   *Adam Langley (Google)*\n\n * Fix spurious failures in ecdsatest.c.\n\n   *Emilia Käsper (Google)*\n\n * Fix the BIO_f_buffer() implementation (which was mixing different\n   interpretations of the `..._len` fields).\n\n   *Adam Langley (Google)*\n\n * Fix handling of BN_BLINDING: now BN_BLINDING_invert_ex (rather than\n   BN_BLINDING_invert_ex) calls BN_BLINDING_update, ensuring that concurrent\n   threads won't reuse the same blinding coefficients.\n\n   This also avoids the need to obtain the CRYPTO_LOCK_RSA_BLINDING\n   lock to call BN_BLINDING_invert_ex, and avoids one use of\n   BN_BLINDING_update for each BN_BLINDING structure (previously,\n   the last update always remained unused).\n\n   *Emilia Käsper (Google)*\n\n * In ssl3_clear, preserve s3->init_extra along with s3->rbuf.\n\n   *Bob Buckholz (Google)*\n\n### Changes between 1.0.0d and 1.0.0e [6 Sep 2011]\n\n * Fix bug where CRLs with nextUpdate in the past are sometimes accepted\n   by initialising X509_STORE_CTX properly. ([CVE-2011-3207])\n\n   *Kaspar Brand <ossl@velox.ch>*\n\n * Fix SSL memory handling for (EC)DH ciphersuites, in particular\n   for multi-threaded use of ECDH. ([CVE-2011-3210])\n\n   *Adam Langley (Google)*\n\n * Fix x509_name_ex_d2i memory leak on bad inputs.\n\n   *Bodo Moeller*\n\n * Remove hard coded ecdsaWithSHA1 signature tests in ssl code and check\n   signature public key algorithm by using OID xref utilities instead.\n   Before this you could only use some ECC ciphersuites with SHA1 only.\n\n   *Steve Henson*\n\n * Add protection against ECDSA timing attacks as mentioned in the paper\n   by Billy Bob Brumley and Nicola Tuveri, see:\n   <http://eprint.iacr.org/2011/232.pdf>\n\n   *Billy Bob Brumley and Nicola Tuveri*\n\n### Changes between 1.0.0c and 1.0.0d [8 Feb 2011]\n\n * Fix parsing of OCSP stapling ClientHello extension. CVE-2011-0014\n\n   *Neel Mehta, Adam Langley, Bodo Moeller (Google)*\n\n * Fix bug in string printing code: if *any* escaping is enabled we must\n   escape the escape character (backslash) or the resulting string is\n   ambiguous.\n\n   *Steve Henson*\n\n### Changes between 1.0.0b and 1.0.0c  [2 Dec 2010]\n\n * Disable code workaround for ancient and obsolete Netscape browsers\n   and servers: an attacker can use it in a ciphersuite downgrade attack.\n   Thanks to Martin Rex for discovering this bug. CVE-2010-4180\n\n   *Steve Henson*\n\n * Fixed J-PAKE implementation error, originally discovered by\n   Sebastien Martini, further info and confirmation from Stefan\n   Arentz and Feng Hao. Note that this fix is a security fix. CVE-2010-4252\n\n   *Ben Laurie*\n\n### Changes between 1.0.0a and 1.0.0b  [16 Nov 2010]\n\n * Fix extension code to avoid race conditions which can result in a buffer\n   overrun vulnerability: resumed sessions must not be modified as they can\n   be shared by multiple threads. CVE-2010-3864\n\n   *Steve Henson*\n\n * Fix WIN32 build system to correctly link an ENGINE directory into\n   a DLL.\n\n   *Steve Henson*\n\n### Changes between 1.0.0 and 1.0.0a  [01 Jun 2010]\n\n * Check return value of int_rsa_verify in pkey_rsa_verifyrecover\n   ([CVE-2010-1633])\n\n   *Steve Henson, Peter-Michael Hager <hager@dortmund.net>*\n\n### Changes between 0.9.8n and 1.0.0  [29 Mar 2010]\n\n * Add \"missing\" function EVP_CIPHER_CTX_copy(). This copies a cipher\n   context. The operation can be customised via the ctrl mechanism in\n   case ENGINEs want to include additional functionality.\n\n   *Steve Henson*\n\n * Tolerate yet another broken PKCS#8 key format: private key value negative.\n\n   *Steve Henson*\n\n * Add new -subject_hash_old and -issuer_hash_old options to x509 utility to\n   output hashes compatible with older versions of OpenSSL.\n\n   *Willy Weisz <weisz@vcpc.univie.ac.at>*\n\n * Fix compression algorithm handling: if resuming a session use the\n   compression algorithm of the resumed session instead of determining\n   it from client hello again. Don't allow server to change algorithm.\n\n   *Steve Henson*\n\n * Add load_crls() function to commands tidying load_certs() too. Add option\n   to verify utility to allow additional CRLs to be included.\n\n   *Steve Henson*\n\n * Update OCSP request code to permit adding custom headers to the request:\n   some responders need this.\n\n   *Steve Henson*\n\n * The function EVP_PKEY_sign() returns <=0 on error: check return code\n   correctly.\n\n   *Julia Lawall <julia@diku.dk>*\n\n * Update verify callback code in `apps/s_cb.c` and `apps/verify.c`, it\n   needlessly dereferenced structures, used obsolete functions and\n   didn't handle all updated verify codes correctly.\n\n   *Steve Henson*\n\n * Disable MD2 in the default configuration.\n\n   *Steve Henson*\n\n * In BIO_pop() and BIO_push() use the ctrl argument (which was NULL) to\n   indicate the initial BIO being pushed or popped. This makes it possible\n   to determine whether the BIO is the one explicitly called or as a result\n   of the ctrl being passed down the chain. Fix BIO_pop() and SSL BIOs so\n   it handles reference counts correctly and doesn't zero out the I/O bio\n   when it is not being explicitly popped. WARNING: applications which\n   included workarounds for the old buggy behaviour will need to be modified\n   or they could free up already freed BIOs.\n\n   *Steve Henson*\n\n * Extend the uni2asc/asc2uni => OPENSSL_uni2asc/OPENSSL_asc2uni\n   renaming to all platforms (within the 0.9.8 branch, this was\n   done conditionally on Netware platforms to avoid a name clash).\n\n   *Guenter <lists@gknw.net>*\n\n * Add ECDHE and PSK support to DTLS.\n\n   *Michael Tuexen <tuexen@fh-muenster.de>*\n\n * Add CHECKED_STACK_OF macro to safestack.h, otherwise safestack can't\n   be used on C++.\n\n   *Steve Henson*\n\n * Add \"missing\" function EVP_MD_flags() (without this the only way to\n   retrieve a digest flags is by accessing the structure directly. Update\n   `EVP_MD_do_all*()` and `EVP_CIPHER_do_all*()` to include the name a digest\n   or cipher is registered as in the \"from\" argument. Print out all\n   registered digests in the dgst usage message instead of manually\n   attempting to work them out.\n\n   *Steve Henson*\n\n * If no SSLv2 ciphers are used don't use an SSLv2 compatible client hello:\n   this allows the use of compression and extensions. Change default cipher\n   string to remove SSLv2 ciphersuites. This effectively avoids ancient SSLv2\n   by default unless an application cipher string requests it.\n\n   *Steve Henson*\n\n * Alter match criteria in PKCS12_parse(). It used to try to use local\n   key ids to find matching certificates and keys but some PKCS#12 files\n   don't follow the (somewhat unwritten) rules and this strategy fails.\n   Now just gather all certificates together and the first private key\n   then look for the first certificate that matches the key.\n\n   *Steve Henson*\n\n * Support use of registered digest and cipher names for dgst and cipher\n   commands instead of having to add each one as a special case. So now\n   you can do:\n\n           openssl sha256 foo\n\n   as well as:\n\n           openssl dgst -sha256 foo\n\n   and this works for ENGINE based algorithms too.\n\n   *Steve Henson*\n\n * Update Gost ENGINE to support parameter files.\n\n   *Victor B. Wagner <vitus@cryptocom.ru>*\n\n * Support GeneralizedTime in ca utility.\n\n   *Oliver Martin <oliver@volatilevoid.net>, Steve Henson*\n\n * Enhance the hash format used for certificate directory links. The new\n   form uses the canonical encoding (meaning equivalent names will work\n   even if they aren't identical) and uses SHA1 instead of MD5. This form\n   is incompatible with the older format and as a result c_rehash should\n   be used to rebuild symbolic links.\n\n   *Steve Henson*\n\n * Make PKCS#8 the default write format for private keys, replacing the\n   traditional format. This form is standardised, more secure and doesn't\n   include an implicit MD5 dependency.\n\n   *Steve Henson*\n\n * Add a $gcc_devteam_warn option to Configure. The idea is that any code\n   committed to OpenSSL should pass this lot as a minimum.\n\n   *Steve Henson*\n\n * Add session ticket override functionality for use by EAP-FAST.\n\n   *Jouni Malinen <j@w1.fi>*\n\n * Modify HMAC functions to return a value. Since these can be implemented\n   in an ENGINE errors can occur.\n\n   *Steve Henson*\n\n * Type-checked OBJ_bsearch_ex.\n\n   *Ben Laurie*\n\n * Type-checked OBJ_bsearch. Also some constification necessitated\n   by type-checking.  Still to come: TXT_DB, bsearch(?),\n   OBJ_bsearch_ex, qsort, CRYPTO_EX_DATA, ASN1_VALUE, ASN1_STRING,\n   CONF_VALUE.\n\n   *Ben Laurie*\n\n * New function OPENSSL_gmtime_adj() to add a specific number of days and\n   seconds to a tm structure directly, instead of going through OS\n   specific date routines. This avoids any issues with OS routines such\n   as the year 2038 bug. New `*_adj()` functions for ASN1 time structures\n   and X509_time_adj_ex() to cover the extended range. The existing\n   X509_time_adj() is still usable and will no longer have any date issues.\n\n   *Steve Henson*\n\n * Delta CRL support. New use deltas option which will attempt to locate\n   and search any appropriate delta CRLs available.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Support for CRLs partitioned by reason code. Reorganise CRL processing\n   code and add additional score elements. Validate alternate CRL paths\n   as part of the CRL checking and indicate a new error \"CRL path validation\n   error\" in this case. Applications wanting additional details can use\n   the verify callback and check the new \"parent\" field. If this is not\n   NULL CRL path validation is taking place. Existing applications won't\n   see this because it requires extended CRL support which is off by\n   default.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Support for freshest CRL extension.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Initial indirect CRL support. Currently only supported in the CRLs\n   passed directly and not via lookup. Process certificate issuer\n   CRL entry extension and lookup CRL entries by bother issuer name\n   and serial number. Check and process CRL issuer entry in IDP extension.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Add support for distinct certificate and CRL paths. The CRL issuer\n   certificate is validated separately in this case. Only enabled if\n   an extended CRL support flag is set: this flag will enable additional\n   CRL functionality in future.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Add support for policy mappings extension.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Fixes to pathlength constraint, self issued certificate handling,\n   policy processing to align with RFC3280 and PKITS tests.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Support for name constraints certificate extension. DN, email, DNS\n   and URI types are currently supported.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * To cater for systems that provide a pointer-based thread ID rather\n   than numeric, deprecate the current numeric thread ID mechanism and\n   replace it with a structure and associated callback type. This\n   mechanism allows a numeric \"hash\" to be extracted from a thread ID in\n   either case, and on platforms where pointers are larger than 'long',\n   mixing is done to help ensure the numeric 'hash' is usable even if it\n   can't be guaranteed unique. The default mechanism is to use \"&errno\"\n   as a pointer-based thread ID to distinguish between threads.\n\n   Applications that want to provide their own thread IDs should now use\n   CRYPTO_THREADID_set_callback() to register a callback that will call\n   either CRYPTO_THREADID_set_numeric() or CRYPTO_THREADID_set_pointer().\n\n   Note that ERR_remove_state() is now deprecated, because it is tied\n   to the assumption that thread IDs are numeric.  ERR_remove_state(0)\n   to free the current thread's error state should be replaced by\n   ERR_remove_thread_state(NULL).\n\n   (This new approach replaces the functions CRYPTO_set_idptr_callback(),\n   CRYPTO_get_idptr_callback(), and CRYPTO_thread_idptr() that existed in\n   OpenSSL 0.9.9-dev between June 2006 and August 2008. Also, if an\n   application was previously providing a numeric thread callback that\n   was inappropriate for distinguishing threads, then uniqueness might\n   have been obtained with &errno that happened immediately in the\n   intermediate development versions of OpenSSL; this is no longer the\n   case, the numeric thread callback will now override the automatic use\n   of &errno.)\n\n   *Geoff Thorpe, with help from Bodo Moeller*\n\n * Initial support for different CRL issuing certificates. This covers a\n   simple case where the self issued certificates in the chain exist and\n   the real CRL issuer is higher in the existing chain.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Removed effectively defunct crypto/store from the build.\n\n   *Ben Laurie*\n\n * Revamp of STACK to provide stronger type-checking. Still to come:\n   TXT_DB, bsearch(?), OBJ_bsearch, qsort, CRYPTO_EX_DATA, ASN1_VALUE,\n   ASN1_STRING, CONF_VALUE.\n\n   *Ben Laurie*\n\n * Add a new SSL_MODE_RELEASE_BUFFERS mode flag to release unused buffer\n   RAM on SSL connections.  This option can save about 34k per idle SSL.\n\n   *Nick Mathewson*\n\n * Revamp of LHASH to provide stronger type-checking. Still to come:\n   STACK, TXT_DB, bsearch, qsort.\n\n   *Ben Laurie*\n\n * Initial support for Cryptographic Message Syntax (aka CMS) based\n   on RFC3850, RFC3851 and RFC3852. New cms directory and cms utility,\n   support for data, signedData, compressedData, digestedData and\n   encryptedData, envelopedData types included. Scripts to check against\n   RFC4134 examples draft and interop and consistency checks of many\n   content types and variants.\n\n   *Steve Henson*\n\n * Add options to enc utility to support use of zlib compression BIO.\n\n   *Steve Henson*\n\n * Extend mk1mf to support importing of options and assembly language\n   files from Configure script, currently only included in VC-WIN32.\n   The assembly language rules can now optionally generate the source\n   files from the associated perl scripts.\n\n   *Steve Henson*\n\n * Implement remaining functionality needed to support GOST ciphersuites.\n   Interop testing has been performed using CryptoPro implementations.\n\n   *Victor B. Wagner <vitus@cryptocom.ru>*\n\n * s390x assembler pack.\n\n   *Andy Polyakov*\n\n * ARMv4 assembler pack. ARMv4 refers to v4 and later ISA, not CPU\n   \"family.\"\n\n   *Andy Polyakov*\n\n * Implement Opaque PRF Input TLS extension as specified in\n   draft-rescorla-tls-opaque-prf-input-00.txt.  Since this is not an\n   official specification yet and no extension type assignment by\n   IANA exists, this extension (for now) will have to be explicitly\n   enabled when building OpenSSL by providing the extension number\n   to use.  For example, specify an option\n\n           -DTLSEXT_TYPE_opaque_prf_input=0x9527\n\n   to the \"config\" or \"Configure\" script to enable the extension,\n   assuming extension number 0x9527 (which is a completely arbitrary\n   and unofficial assignment based on the MD5 hash of the Internet\n   Draft).  Note that by doing so, you potentially lose\n   interoperability with other TLS implementations since these might\n   be using the same extension number for other purposes.\n\n   SSL_set_tlsext_opaque_prf_input(ssl, src, len) is used to set the\n   opaque PRF input value to use in the handshake.  This will create\n   an internal copy of the length-'len' string at 'src', and will\n   return non-zero for success.\n\n   To get more control and flexibility, provide a callback function\n   by using\n\n           SSL_CTX_set_tlsext_opaque_prf_input_callback(ctx, cb)\n           SSL_CTX_set_tlsext_opaque_prf_input_callback_arg(ctx, arg)\n\n   where\n\n           int (*cb)(SSL *, void *peerinput, size_t len, void *arg);\n           void *arg;\n\n   Callback function 'cb' will be called in handshakes, and is\n   expected to use SSL_set_tlsext_opaque_prf_input() as appropriate.\n   Argument 'arg' is for application purposes (the value as given to\n   SSL_CTX_set_tlsext_opaque_prf_input_callback_arg() will directly\n   be provided to the callback function).  The callback function\n   has to return non-zero to report success: usually 1 to use opaque\n   PRF input just if possible, or 2 to enforce use of the opaque PRF\n   input.  In the latter case, the library will abort the handshake\n   if opaque PRF input is not successfully negotiated.\n\n   Arguments 'peerinput' and 'len' given to the callback function\n   will always be NULL and 0 in the case of a client.  A server will\n   see the client's opaque PRF input through these variables if\n   available (NULL and 0 otherwise).  Note that if the server\n   provides an opaque PRF input, the length must be the same as the\n   length of the client's opaque PRF input.\n\n   Note that the callback function will only be called when creating\n   a new session (session resumption can resume whatever was\n   previously negotiated), and will not be called in SSL 2.0\n   handshakes; thus, SSL_CTX_set_options(ctx, SSL_OP_NO_SSLv2) or\n   SSL_set_options(ssl, SSL_OP_NO_SSLv2) is especially recommended\n   for applications that need to enforce opaque PRF input.\n\n   *Bodo Moeller*\n\n * Update ssl code to support digests other than SHA1+MD5 for handshake\n   MAC.\n\n   *Victor B. Wagner <vitus@cryptocom.ru>*\n\n * Add RFC4507 support to OpenSSL. This includes the corrections in\n   RFC4507bis. The encrypted ticket format is an encrypted encoded\n   SSL_SESSION structure, that way new session features are automatically\n   supported.\n\n   If a client application caches session in an SSL_SESSION structure\n   support is transparent because tickets are now stored in the encoded\n   SSL_SESSION.\n\n   The SSL_CTX structure automatically generates keys for ticket\n   protection in servers so again support should be possible\n   with no application modification.\n\n   If a client or server wishes to disable RFC4507 support then the option\n   SSL_OP_NO_TICKET can be set.\n\n   Add a TLS extension debugging callback to allow the contents of any client\n   or server extensions to be examined.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Final changes to avoid use of pointer pointer casts in OpenSSL.\n   OpenSSL should now compile cleanly on gcc 4.2\n\n   *Peter Hartley <pdh@utter.chaos.org.uk>, Steve Henson*\n\n * Update SSL library to use new EVP_PKEY MAC API. Include generic MAC\n   support including streaming MAC support: this is required for GOST\n   ciphersuite support.\n\n   *Victor B. Wagner <vitus@cryptocom.ru>, Steve Henson*\n\n * Add option -stream to use PKCS#7 streaming in smime utility. New\n   function i2d_PKCS7_bio_stream() and PEM_write_PKCS7_bio_stream()\n   to output in BER and PEM format.\n\n   *Steve Henson*\n\n * Experimental support for use of HMAC via EVP_PKEY interface. This\n   allows HMAC to be handled via the `EVP_DigestSign*()` interface. The\n   EVP_PKEY \"key\" in this case is the HMAC key, potentially allowing\n   ENGINE support for HMAC keys which are unextractable. New -mac and\n   -macopt options to dgst utility.\n\n   *Steve Henson*\n\n * New option -sigopt to dgst utility. Update dgst to use\n   `EVP_Digest{Sign,Verify}*`. These two changes make it possible to use\n   alternative signing parameters such as X9.31 or PSS in the dgst\n   utility.\n\n   *Steve Henson*\n\n * Change ssl_cipher_apply_rule(), the internal function that does\n   the work each time a ciphersuite string requests enabling\n   (\"foo+bar\"), moving (\"+foo+bar\"), disabling (\"-foo+bar\", or\n   removing (\"!foo+bar\") a class of ciphersuites: Now it maintains\n   the order of disabled ciphersuites such that those ciphersuites\n   that most recently went from enabled to disabled not only stay\n   in order with respect to each other, but also have higher priority\n   than other disabled ciphersuites the next time ciphersuites are\n   enabled again.\n\n   This means that you can now say, e.g., \"PSK:-PSK:HIGH\" to enable\n   the same ciphersuites as with \"HIGH\" alone, but in a specific\n   order where the PSK ciphersuites come first (since they are the\n   most recently disabled ciphersuites when \"HIGH\" is parsed).\n\n   Also, change ssl_create_cipher_list() (using this new\n   functionality) such that between otherwise identical\n   ciphersuites, ephemeral ECDH is preferred over ephemeral DH in\n   the default order.\n\n   *Bodo Moeller*\n\n * Change ssl_create_cipher_list() so that it automatically\n   arranges the ciphersuites in reasonable order before starting\n   to process the rule string.  Thus, the definition for \"DEFAULT\"\n   (SSL_DEFAULT_CIPHER_LIST) now is just \"ALL:!aNULL:!eNULL\", but\n   remains equivalent to `\"AES:ALL:!aNULL:!eNULL:+aECDH:+kRSA:+RC4:@STRENGTH\"`.\n   This makes it much easier to arrive at a reasonable default order\n   in applications for which anonymous ciphers are OK (meaning\n   that you can't actually use DEFAULT).\n\n   *Bodo Moeller; suggested by Victor Duchovni*\n\n * Split the SSL/TLS algorithm mask (as used for ciphersuite string\n   processing) into multiple integers instead of setting\n   \"SSL_MKEY_MASK\" bits, \"SSL_AUTH_MASK\" bits, \"SSL_ENC_MASK\",\n   \"SSL_MAC_MASK\", and \"SSL_SSL_MASK\" bits all in a single integer.\n   (These masks as well as the individual bit definitions are hidden\n   away into the non-exported interface ssl/ssl_locl.h, so this\n   change to the definition of the SSL_CIPHER structure shouldn't\n   affect applications.)  This give us more bits for each of these\n   categories, so there is no longer a need to coagulate AES128 and\n   AES256 into a single algorithm bit, and to coagulate Camellia128\n   and Camellia256 into a single algorithm bit, which has led to all\n   kinds of kludges.\n\n   Thus, among other things, the kludge introduced in 0.9.7m and\n   0.9.8e for masking out AES256 independently of AES128 or masking\n   out Camellia256 independently of AES256 is not needed here in 0.9.9.\n\n   With the change, we also introduce new ciphersuite aliases that\n   so far were missing: \"AES128\", \"AES256\", \"CAMELLIA128\", and\n   \"CAMELLIA256\".\n\n   *Bodo Moeller*\n\n * Add support for dsa-with-SHA224 and dsa-with-SHA256.\n   Use the leftmost N bytes of the signature input if the input is\n   larger than the prime q (with N being the size in bytes of q).\n\n   *Nils Larsch*\n\n * Very *very* experimental PKCS#7 streaming encoder support. Nothing uses\n   it yet and it is largely untested.\n\n   *Steve Henson*\n\n * Add support for the ecdsa-with-SHA224/256/384/512 signature types.\n\n   *Nils Larsch*\n\n * Initial incomplete changes to avoid need for function casts in OpenSSL\n   some compilers (gcc 4.2 and later) reject their use. Safestack is\n   reimplemented.  Update ASN1 to avoid use of legacy functions.\n\n   *Steve Henson*\n\n * Win32/64 targets are linked with Winsock2.\n\n   *Andy Polyakov*\n\n * Add an X509_CRL_METHOD structure to allow CRL processing to be redirected\n   to external functions. This can be used to increase CRL handling\n   efficiency especially when CRLs are very large by (for example) storing\n   the CRL revoked certificates in a database.\n\n   *Steve Henson*\n\n * Overhaul of by_dir code. Add support for dynamic loading of CRLs so\n   new CRLs added to a directory can be used. New command line option\n   -verify_return_error to s_client and s_server. This causes real errors\n   to be returned by the verify callback instead of carrying on no matter\n   what. This reflects the way a \"real world\" verify callback would behave.\n\n   *Steve Henson*\n\n * GOST engine, supporting several GOST algorithms and public key formats.\n   Kindly donated by Cryptocom.\n\n   *Cryptocom*\n\n * Partial support for Issuing Distribution Point CRL extension. CRLs\n   partitioned by DP are handled but no indirect CRL or reason partitioning\n   (yet). Complete overhaul of CRL handling: now the most suitable CRL is\n   selected via a scoring technique which handles IDP and AKID in CRLs.\n\n   *Steve Henson*\n\n * New X509_STORE_CTX callbacks lookup_crls() and lookup_certs() which\n   will ultimately be used for all verify operations: this will remove the\n   X509_STORE dependency on certificate verification and allow alternative\n   lookup methods.  X509_STORE based implementations of these two callbacks.\n\n   *Steve Henson*\n\n * Allow multiple CRLs to exist in an X509_STORE with matching issuer names.\n   Modify get_crl() to find a valid (unexpired) CRL if possible.\n\n   *Steve Henson*\n\n * New function X509_CRL_match() to check if two CRLs are identical. Normally\n   this would be called X509_CRL_cmp() but that name is already used by\n   a function that just compares CRL issuer names. Cache several CRL\n   extensions in X509_CRL structure and cache CRLDP in X509.\n\n   *Steve Henson*\n\n * Store a \"canonical\" representation of X509_NAME structure (ASN1 Name)\n   this maps equivalent X509_NAME structures into a consistent structure.\n   Name comparison can then be performed rapidly using memcmp().\n\n   *Steve Henson*\n\n * Non-blocking OCSP request processing. Add -timeout option to ocsp\n   utility.\n\n   *Steve Henson*\n\n * Allow digests to supply their own micalg string for S/MIME type using\n   the ctrl EVP_MD_CTRL_MICALG.\n\n   *Steve Henson*\n\n * During PKCS7 signing pass the PKCS7 SignerInfo structure to the\n   EVP_PKEY_METHOD before and after signing via the EVP_PKEY_CTRL_PKCS7_SIGN\n   ctrl. It can then customise the structure before and/or after signing\n   if necessary.\n\n   *Steve Henson*\n\n * New function OBJ_add_sigid() to allow application defined signature OIDs\n   to be added to OpenSSLs internal tables. New function OBJ_sigid_free()\n   to free up any added signature OIDs.\n\n   *Steve Henson*\n\n * New functions EVP_CIPHER_do_all(), EVP_CIPHER_do_all_sorted(),\n   EVP_MD_do_all() and EVP_MD_do_all_sorted() to enumerate internal\n   digest and cipher tables. New options added to openssl utility:\n   list-message-digest-algorithms and list-cipher-algorithms.\n\n   *Steve Henson*\n\n * Change the array representation of binary polynomials: the list\n   of degrees of non-zero coefficients is now terminated with -1.\n   Previously it was terminated with 0, which was also part of the\n   value; thus, the array representation was not applicable to\n   polynomials where t^0 has coefficient zero.  This change makes\n   the array representation useful in a more general context.\n\n   *Douglas Stebila*\n\n * Various modifications and fixes to SSL/TLS cipher string\n   handling.  For ECC, the code now distinguishes between fixed ECDH\n   with RSA certificates on the one hand and with ECDSA certificates\n   on the other hand, since these are separate ciphersuites.  The\n   unused code for Fortezza ciphersuites has been removed.\n\n   For consistency with EDH, ephemeral ECDH is now called \"EECDH\"\n   (not \"ECDHE\").  For consistency with the code for DH\n   certificates, use of ECDH certificates is now considered ECDH\n   authentication, not RSA or ECDSA authentication (the latter is\n   merely the CA's signing algorithm and not actively used in the\n   protocol).\n\n   The temporary ciphersuite alias \"ECCdraft\" is no longer\n   available, and ECC ciphersuites are no longer excluded from \"ALL\"\n   and \"DEFAULT\".  The following aliases now exist for RFC 4492\n   ciphersuites, most of these by analogy with the DH case:\n\n           kECDHr   - ECDH cert, signed with RSA\n           kECDHe   - ECDH cert, signed with ECDSA\n           kECDH    - ECDH cert (signed with either RSA or ECDSA)\n           kEECDH   - ephemeral ECDH\n           ECDH     - ECDH cert or ephemeral ECDH\n\n           aECDH    - ECDH cert\n           aECDSA   - ECDSA cert\n           ECDSA    - ECDSA cert\n\n           AECDH    - anonymous ECDH\n           EECDH    - non-anonymous ephemeral ECDH (equivalent to \"kEECDH:-AECDH\")\n\n   *Bodo Moeller*\n\n * Add additional S/MIME capabilities for AES and GOST ciphers if supported.\n   Use correct micalg parameters depending on digest(s) in signed message.\n\n   *Steve Henson*\n\n * Add engine support for EVP_PKEY_ASN1_METHOD. Add functions to process\n   an ENGINE asn1 method. Support ENGINE lookups in the ASN1 code.\n\n   *Steve Henson*\n\n * Initial engine support for EVP_PKEY_METHOD. New functions to permit\n   an engine to register a method. Add ENGINE lookups for methods and\n   functional reference processing.\n\n   *Steve Henson*\n\n * New functions `EVP_Digest{Sign,Verify)*`. These are enhanced versions of\n   `EVP_{Sign,Verify}*` which allow an application to customise the signature\n   process.\n\n   *Steve Henson*\n\n * New -resign option to smime utility. This adds one or more signers\n   to an existing PKCS#7 signedData structure. Also -md option to use an\n   alternative message digest algorithm for signing.\n\n   *Steve Henson*\n\n * Tidy up PKCS#7 routines and add new functions to make it easier to\n   create PKCS7 structures containing multiple signers. Update smime\n   application to support multiple signers.\n\n   *Steve Henson*\n\n * New -macalg option to pkcs12 utility to allow setting of an alternative\n   digest MAC.\n\n   *Steve Henson*\n\n * Initial support for PKCS#5 v2.0 PRFs other than default SHA1 HMAC.\n   Reorganize PBE internals to lookup from a static table using NIDs,\n   add support for HMAC PBE OID translation. Add a EVP_CIPHER ctrl:\n   EVP_CTRL_PBE_PRF_NID this allows a cipher to specify an alternative\n   PRF which will be automatically used with PBES2.\n\n   *Steve Henson*\n\n * Replace the algorithm specific calls to generate keys in \"req\" with the\n   new API.\n\n   *Steve Henson*\n\n * Update PKCS#7 enveloped data routines to use new API. This is now\n   supported by any public key method supporting the encrypt operation. A\n   ctrl is added to allow the public key algorithm to examine or modify\n   the PKCS#7 RecipientInfo structure if it needs to: for RSA this is\n   a no op.\n\n   *Steve Henson*\n\n * Add a ctrl to asn1 method to allow a public key algorithm to express\n   a default digest type to use. In most cases this will be SHA1 but some\n   algorithms (such as GOST) need to specify an alternative digest. The\n   return value indicates how strong the preference is 1 means optional and\n   2 is mandatory (that is it is the only supported type). Modify\n   ASN1_item_sign() to accept a NULL digest argument to indicate it should\n   use the default md. Update openssl utilities to use the default digest\n   type for signing if it is not explicitly indicated.\n\n   *Steve Henson*\n\n * Use OID cross reference table in ASN1_sign() and ASN1_verify(). New\n   EVP_MD flag EVP_MD_FLAG_PKEY_METHOD_SIGNATURE. This uses the relevant\n   signing method from the key type. This effectively removes the link\n   between digests and public key types.\n\n   *Steve Henson*\n\n * Add an OID cross reference table and utility functions. Its purpose is to\n   translate between signature OIDs such as SHA1WithrsaEncryption and SHA1,\n   rsaEncryption. This will allow some of the algorithm specific hackery\n   needed to use the correct OID to be removed.\n\n   *Steve Henson*\n\n * Remove algorithm specific dependencies when setting PKCS7_SIGNER_INFO\n   structures for PKCS7_sign(). They are now set up by the relevant public\n   key ASN1 method.\n\n   *Steve Henson*\n\n * Add provisional EC pkey method with support for ECDSA and ECDH.\n\n   *Steve Henson*\n\n * Add support for key derivation (agreement) in the API, DH method and\n   pkeyutl.\n\n   *Steve Henson*\n\n * Add DSA pkey method and DH pkey methods, extend DH ASN1 method to support\n   public and private key formats. As a side effect these add additional\n   command line functionality not previously available: DSA signatures can be\n   generated and verified using pkeyutl and DH key support and generation in\n   pkey, genpkey.\n\n   *Steve Henson*\n\n * BeOS support.\n\n   *Oliver Tappe <zooey@hirschkaefer.de>*\n\n * New make target \"install_html_docs\" installs HTML renditions of the\n   manual pages.\n\n   *Oliver Tappe <zooey@hirschkaefer.de>*\n\n * New utility \"genpkey\" this is analogous to \"genrsa\" etc except it can\n   generate keys for any algorithm. Extend and update EVP_PKEY_METHOD to\n   support key and parameter generation and add initial key generation\n   functionality for RSA.\n\n   *Steve Henson*\n\n * Add functions for main EVP_PKEY_method operations. The undocumented\n   functions `EVP_PKEY_{encrypt,decrypt}` have been renamed to\n   `EVP_PKEY_{encrypt,decrypt}_old`.\n\n   *Steve Henson*\n\n * Initial definitions for EVP_PKEY_METHOD. This will be a high level public\n   key API, doesn't do much yet.\n\n   *Steve Henson*\n\n * New function EVP_PKEY_asn1_get0_info() to retrieve information about\n   public key algorithms. New option to openssl utility:\n   \"list-public-key-algorithms\" to print out info.\n\n   *Steve Henson*\n\n * Implement the Supported Elliptic Curves Extension for\n   ECC ciphersuites from draft-ietf-tls-ecc-12.txt.\n\n   *Douglas Stebila*\n\n * Don't free up OIDs in OBJ_cleanup() if they are in use by EVP_MD or\n   EVP_CIPHER structures to avoid later problems in EVP_cleanup().\n\n   *Steve Henson*\n\n * New utilities pkey and pkeyparam. These are similar to algorithm specific\n   utilities such as rsa, dsa, dsaparam etc except they process any key\n   type.\n\n   *Steve Henson*\n\n * Transfer public key printing routines to EVP_PKEY_ASN1_METHOD. New\n   functions EVP_PKEY_print_public(), EVP_PKEY_print_private(),\n   EVP_PKEY_print_param() to print public key data from an EVP_PKEY\n   structure.\n\n   *Steve Henson*\n\n * Initial support for pluggable public key ASN1.\n   De-spaghettify the public key ASN1 handling. Move public and private\n   key ASN1 handling to a new EVP_PKEY_ASN1_METHOD structure. Relocate\n   algorithm specific handling to a single module within the relevant\n   algorithm directory. Add functions to allow (near) opaque processing\n   of public and private key structures.\n\n   *Steve Henson*\n\n * Implement the Supported Point Formats Extension for\n   ECC ciphersuites from draft-ietf-tls-ecc-12.txt.\n\n   *Douglas Stebila*\n\n * Add initial support for RFC 4279 PSK TLS ciphersuites. Add members\n   for the psk identity [hint] and the psk callback functions to the\n   SSL_SESSION, SSL and SSL_CTX structure.\n\n   New ciphersuites:\n           PSK-RC4-SHA, PSK-3DES-EDE-CBC-SHA, PSK-AES128-CBC-SHA,\n           PSK-AES256-CBC-SHA\n\n   New functions:\n           SSL_CTX_use_psk_identity_hint\n           SSL_get_psk_identity_hint\n           SSL_get_psk_identity\n           SSL_use_psk_identity_hint\n\n   *Mika Kousa and Pasi Eronen of Nokia Corporation*\n\n * Add RFC 3161 compliant time stamp request creation, response generation\n   and response verification functionality.\n\n   *Zoltán Glózik <zglozik@opentsa.org>, The OpenTSA Project*\n\n * Add initial support for TLS extensions, specifically for the server_name\n   extension so far.  The SSL_SESSION, SSL_CTX, and SSL data structures now\n   have new members for a hostname.  The SSL data structure has an\n   additional member `SSL_CTX *initial_ctx` so that new sessions can be\n   stored in that context to allow for session resumption, even after the\n   SSL has been switched to a new SSL_CTX in reaction to a client's\n   server_name extension.\n\n   New functions (subject to change):\n\n           SSL_get_servername()\n           SSL_get_servername_type()\n           SSL_set_SSL_CTX()\n\n   New CTRL codes and macros (subject to change):\n\n           SSL_CTRL_SET_TLSEXT_SERVERNAME_CB\n                               - SSL_CTX_set_tlsext_servername_callback()\n           SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG\n                                    - SSL_CTX_set_tlsext_servername_arg()\n           SSL_CTRL_SET_TLSEXT_HOSTNAME           - SSL_set_tlsext_host_name()\n\n   openssl s_client has a new '-servername ...' option.\n\n   openssl s_server has new options '-servername_host ...', '-cert2 ...',\n   '-key2 ...', '-servername_fatal' (subject to change).  This allows\n   testing the HostName extension for a specific single hostname ('-cert'\n   and '-key' remain fallbacks for handshakes without HostName\n   negotiation).  If the unrecognized_name alert has to be sent, this by\n   default is a warning; it becomes fatal with the '-servername_fatal'\n   option.\n\n   *Peter Sylvester,  Remy Allais, Christophe Renou*\n\n * Whirlpool hash implementation is added.\n\n   *Andy Polyakov*\n\n * BIGNUM code on 64-bit SPARCv9 targets is switched from bn(64,64) to\n   bn(64,32). Because of instruction set limitations it doesn't have\n   any negative impact on performance. This was done mostly in order\n   to make it possible to share assembler modules, such as bn_mul_mont\n   implementations, between 32- and 64-bit builds without hassle.\n\n   *Andy Polyakov*\n\n * Move code previously exiled into file crypto/ec/ec2_smpt.c\n   to ec2_smpl.c, and no longer require the OPENSSL_EC_BIN_PT_COMP\n   macro.\n\n   *Bodo Moeller*\n\n * New candidate for BIGNUM assembler implementation, bn_mul_mont,\n   dedicated Montgomery multiplication procedure, is introduced.\n   BN_MONT_CTX is modified to allow bn_mul_mont to reach for higher\n   \"64-bit\" performance on certain 32-bit targets.\n\n   *Andy Polyakov*\n\n * New option SSL_OP_NO_COMP to disable use of compression selectively\n   in SSL structures. New SSL ctrl to set maximum send fragment size.\n   Save memory by setting the I/O buffer sizes dynamically instead of\n   using the maximum available value.\n\n   *Steve Henson*\n\n * New option -V for 'openssl ciphers'. This prints the ciphersuite code\n   in addition to the text details.\n\n   *Bodo Moeller*\n\n * Very, very preliminary EXPERIMENTAL support for printing of general\n   ASN1 structures. This currently produces rather ugly output and doesn't\n   handle several customised structures at all.\n\n   *Steve Henson*\n\n * Integrated support for PVK file format and some related formats such\n   as MS PUBLICKEYBLOB and PRIVATEKEYBLOB. Command line switches to support\n   these in the 'rsa' and 'dsa' utilities.\n\n   *Steve Henson*\n\n * Support for PKCS#1 RSAPublicKey format on rsa utility command line.\n\n   *Steve Henson*\n\n * Remove the ancient ASN1_METHOD code. This was only ever used in one\n   place for the (very old) \"NETSCAPE\" format certificates which are now\n   handled using new ASN1 code equivalents.\n\n   *Steve Henson*\n\n * Let the TLSv1_method() etc. functions return a 'const' SSL_METHOD\n   pointer and make the SSL_METHOD parameter in SSL_CTX_new,\n   SSL_CTX_set_ssl_version and SSL_set_ssl_method 'const'.\n\n   *Nils Larsch*\n\n * Modify CRL distribution points extension code to print out previously\n   unsupported fields. Enhance extension setting code to allow setting of\n   all fields.\n\n   *Steve Henson*\n\n * Add print and set support for Issuing Distribution Point CRL extension.\n\n   *Steve Henson*\n\n * Change 'Configure' script to enable Camellia by default.\n\n   *NTT*\n\nOpenSSL 0.9.x\n-------------\n\n### Changes between 0.9.8m and 0.9.8n [24 Mar 2010]\n\n * When rejecting SSL/TLS records due to an incorrect version number, never\n   update s->server with a new major version number.  As of\n   - OpenSSL 0.9.8m if 'short' is a 16-bit type,\n   - OpenSSL 0.9.8f if 'short' is longer than 16 bits,\n   the previous behavior could result in a read attempt at NULL when\n   receiving specific incorrect SSL/TLS records once record payload\n   protection is active.  ([CVE-2010-0740])\n\n   *Bodo Moeller, Adam Langley <agl@chromium.org>*\n\n * Fix for CVE-2010-0433 where some kerberos enabled versions of OpenSSL\n   could be crashed if the relevant tables were not present (e.g. chrooted).\n\n   *Tomas Hoger <thoger@redhat.com>*\n\n### Changes between 0.9.8l and 0.9.8m [25 Feb 2010]\n\n * Always check bn_wexpand() return values for failure.  ([CVE-2009-3245])\n\n   *Martin Olsson, Neel Mehta*\n\n * Fix X509_STORE locking: Every 'objs' access requires a lock (to\n   accommodate for stack sorting, always a write lock!).\n\n   *Bodo Moeller*\n\n * On some versions of WIN32 Heap32Next is very slow. This can cause\n   excessive delays in the RAND_poll(): over a minute. As a workaround\n   include a time check in the inner Heap32Next loop too.\n\n   *Steve Henson*\n\n * The code that handled flushing of data in SSL/TLS originally used the\n   BIO_CTRL_INFO ctrl to see if any data was pending first. This caused\n   the problem outlined in PR#1949. The fix suggested there however can\n   trigger problems with buggy BIO_CTRL_WPENDING (e.g. some versions\n   of Apache). So instead simplify the code to flush unconditionally.\n   This should be fine since flushing with no data to flush is a no op.\n\n   *Steve Henson*\n\n * Handle TLS versions 2.0 and later properly and correctly use the\n   highest version of TLS/SSL supported. Although TLS >= 2.0 is some way\n   off ancient servers have a habit of sticking around for a while...\n\n   *Steve Henson*\n\n * Modify compression code so it frees up structures without using the\n   ex_data callbacks. This works around a problem where some applications\n   call CRYPTO_cleanup_all_ex_data() before application exit (e.g. when\n   restarting) then use compression (e.g. SSL with compression) later.\n   This results in significant per-connection memory leaks and\n   has caused some security issues including CVE-2008-1678 and\n   CVE-2009-4355.\n\n   *Steve Henson*\n\n * Constify crypto/cast (i.e., <openssl/cast.h>): a CAST_KEY doesn't\n   change when encrypting or decrypting.\n\n   *Bodo Moeller*\n\n * Add option SSL_OP_LEGACY_SERVER_CONNECT which will allow clients to\n   connect and renegotiate with servers which do not support RI.\n   Until RI is more widely deployed this option is enabled by default.\n\n   *Steve Henson*\n\n * Add \"missing\" ssl ctrls to clear options and mode.\n\n   *Steve Henson*\n\n * If client attempts to renegotiate and doesn't support RI respond with\n   a no_renegotiation alert as required by RFC5746.  Some renegotiating\n   TLS clients will continue a connection gracefully when they receive\n   the alert. Unfortunately OpenSSL mishandled this alert and would hang\n   waiting for a server hello which it will never receive. Now we treat a\n   received no_renegotiation alert as a fatal error. This is because\n   applications requesting a renegotiation might well expect it to succeed\n   and would have no code in place to handle the server denying it so the\n   only safe thing to do is to terminate the connection.\n\n   *Steve Henson*\n\n * Add ctrl macro SSL_get_secure_renegotiation_support() which returns 1 if\n   peer supports secure renegotiation and 0 otherwise. Print out peer\n   renegotiation support in s_client/s_server.\n\n   *Steve Henson*\n\n * Replace the highly broken and deprecated SPKAC certification method with\n   the updated NID creation version. This should correctly handle UTF8.\n\n   *Steve Henson*\n\n * Implement RFC5746. Re-enable renegotiation but require the extension\n   as needed. Unfortunately, SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION\n   turns out to be a bad idea. It has been replaced by\n   SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION which can be set with\n   SSL_CTX_set_options(). This is really not recommended unless you\n   know what you are doing.\n\n   *Eric Rescorla <ekr@networkresonance.com>, Ben Laurie, Steve Henson*\n\n * Fixes to stateless session resumption handling. Use initial_ctx when\n   issuing and attempting to decrypt tickets in case it has changed during\n   servername handling. Use a non-zero length session ID when attempting\n   stateless session resumption: this makes it possible to determine if\n   a resumption has occurred immediately after receiving server hello\n   (several places in OpenSSL subtly assume this) instead of later in\n   the handshake.\n\n   *Steve Henson*\n\n * The functions ENGINE_ctrl(), OPENSSL_isservice(),\n   CMS_get1_RecipientRequest() and RAND_bytes() can return <=0 on error\n   fixes for a few places where the return code is not checked\n   correctly.\n\n   *Julia Lawall <julia@diku.dk>*\n\n * Add --strict-warnings option to Configure script to include devteam\n   warnings in other configurations.\n\n   *Steve Henson*\n\n * Add support for --libdir option and LIBDIR variable in makefiles. This\n   makes it possible to install openssl libraries in locations which\n   have names other than \"lib\", for example \"/usr/lib64\" which some\n   systems need.\n\n   *Steve Henson, based on patch from Jeremy Utley*\n\n * Don't allow the use of leading 0x80 in OIDs. This is a violation of\n   X690 8.9.12 and can produce some misleading textual output of OIDs.\n\n   *Steve Henson, reported by Dan Kaminsky*\n\n * Delete MD2 from algorithm tables. This follows the recommendation in\n   several standards that it is not used in new applications due to\n   several cryptographic weaknesses. For binary compatibility reasons\n   the MD2 API is still compiled in by default.\n\n   *Steve Henson*\n\n * Add compression id to {d2i,i2d}_SSL_SESSION so it is correctly saved\n   and restored.\n\n   *Steve Henson*\n\n * Rename uni2asc and asc2uni functions to OPENSSL_uni2asc and\n   OPENSSL_asc2uni conditionally on Netware platforms to avoid a name\n   clash.\n\n   *Guenter <lists@gknw.net>*\n\n * Fix the server certificate chain building code to use X509_verify_cert(),\n   it used to have an ad-hoc builder which was unable to cope with anything\n   other than a simple chain.\n\n   *David Woodhouse <dwmw2@infradead.org>, Steve Henson*\n\n * Don't check self signed certificate signatures in X509_verify_cert()\n   by default (a flag can override this): it just wastes time without\n   adding any security. As a useful side effect self signed root CAs\n   with non-FIPS digests are now usable in FIPS mode.\n\n   *Steve Henson*\n\n * In dtls1_process_out_of_seq_message() the check if the current message\n   is already buffered was missing. For every new message was memory\n   allocated, allowing an attacker to perform an denial of service attack\n   with sending out of seq handshake messages until there is no memory\n   left. Additionally every future message was buffered, even if the\n   sequence number made no sense and would be part of another handshake.\n   So only messages with sequence numbers less than 10 in advance will be\n   buffered.  ([CVE-2009-1378])\n\n   *Robin Seggelmann, discovered by Daniel Mentz*\n\n * Records are buffered if they arrive with a future epoch to be\n   processed after finishing the corresponding handshake. There is\n   currently no limitation to this buffer allowing an attacker to perform\n   a DOS attack with sending records with future epochs until there is no\n   memory left. This patch adds the pqueue_size() function to determine\n   the size of a buffer and limits the record buffer to 100 entries.\n   ([CVE-2009-1377])\n\n   *Robin Seggelmann, discovered by Daniel Mentz*\n\n * Keep a copy of frag->msg_header.frag_len so it can be used after the\n   parent structure is freed.  ([CVE-2009-1379])\n\n   *Daniel Mentz*\n\n * Handle non-blocking I/O properly in SSL_shutdown() call.\n\n   *Darryl Miles <darryl-mailinglists@netbauds.net>*\n\n * Add `2.5.4.*` OIDs\n\n   *Ilya O. <vrghost@gmail.com>*\n\n### Changes between 0.9.8k and 0.9.8l  [5 Nov 2009]\n\n * Disable renegotiation completely - this fixes a severe security\n   problem ([CVE-2009-3555]) at the cost of breaking all\n   renegotiation. Renegotiation can be re-enabled by setting\n   SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION in s3->flags at\n   run-time. This is really not recommended unless you know what\n   you're doing.\n\n   *Ben Laurie*\n\n### Changes between 0.9.8j and 0.9.8k  [25 Mar 2009]\n\n * Don't set val to NULL when freeing up structures, it is freed up by\n   underlying code. If `sizeof(void *) > sizeof(long)` this can result in\n   zeroing past the valid field. ([CVE-2009-0789])\n\n   *Paolo Ganci <Paolo.Ganci@AdNovum.CH>*\n\n * Fix bug where return value of CMS_SignerInfo_verify_content() was not\n   checked correctly. This would allow some invalid signed attributes to\n   appear to verify correctly. ([CVE-2009-0591])\n\n   *Ivan Nestlerode <inestlerode@us.ibm.com>*\n\n * Reject UniversalString and BMPString types with invalid lengths. This\n   prevents a crash in ASN1_STRING_print_ex() which assumes the strings have\n   a legal length. ([CVE-2009-0590])\n\n   *Steve Henson*\n\n * Set S/MIME signing as the default purpose rather than setting it\n   unconditionally. This allows applications to override it at the store\n   level.\n\n   *Steve Henson*\n\n * Permit restricted recursion of ASN1 strings. This is needed in practice\n   to handle some structures.\n\n   *Steve Henson*\n\n * Improve efficiency of mem_gets: don't search whole buffer each time\n   for a '\\n'\n\n   *Jeremy Shapiro <jnshapir@us.ibm.com>*\n\n * New -hex option for openssl rand.\n\n   *Matthieu Herrb*\n\n * Print out UTF8String and NumericString when parsing ASN1.\n\n   *Steve Henson*\n\n * Support NumericString type for name components.\n\n   *Steve Henson*\n\n * Allow CC in the environment to override the automatically chosen\n   compiler. Note that nothing is done to ensure flags work with the\n   chosen compiler.\n\n   *Ben Laurie*\n\n### Changes between 0.9.8i and 0.9.8j  [07 Jan 2009]\n\n * Properly check EVP_VerifyFinal() and similar return values\n   ([CVE-2008-5077]).\n\n   *Ben Laurie, Bodo Moeller, Google Security Team*\n\n * Enable TLS extensions by default.\n\n   *Ben Laurie*\n\n * Allow the CHIL engine to be loaded, whether the application is\n   multithreaded or not. (This does not release the developer from the\n   obligation to set up the dynamic locking callbacks.)\n\n   *Sander Temme <sander@temme.net>*\n\n * Use correct exit code if there is an error in dgst command.\n\n   *Steve Henson; problem pointed out by Roland Dirlewanger*\n\n * Tweak Configure so that you need to say \"experimental-jpake\" to enable\n   JPAKE, and need to use -DOPENSSL_EXPERIMENTAL_JPAKE in applications.\n\n   *Bodo Moeller*\n\n * Add experimental JPAKE support, including demo authentication in\n   s_client and s_server.\n\n   *Ben Laurie*\n\n * Set the comparison function in v3_addr_canonize().\n\n   *Rob Austein <sra@hactrn.net>*\n\n * Add support for XMPP STARTTLS in s_client.\n\n   *Philip Paeps <philip@freebsd.org>*\n\n * Change the server-side SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG behavior\n   to ensure that even with this option, only ciphersuites in the\n   server's preference list will be accepted.  (Note that the option\n   applies only when resuming a session, so the earlier behavior was\n   just about the algorithm choice for symmetric cryptography.)\n\n   *Bodo Moeller*\n\n### Changes between 0.9.8h and 0.9.8i  [15 Sep 2008]\n\n * Fix NULL pointer dereference if a DTLS server received\n   ChangeCipherSpec as first record ([CVE-2009-1386]).\n\n   *PR #1679*\n\n * Fix a state transition in s3_srvr.c and d1_srvr.c\n   (was using SSL3_ST_CW_CLNT_HELLO_B, should be `..._ST_SW_SRVR_...`).\n\n   *Nagendra Modadugu*\n\n * The fix in 0.9.8c that supposedly got rid of unsafe\n   double-checked locking was incomplete for RSA blinding,\n   addressing just one layer of what turns out to have been\n   doubly unsafe triple-checked locking.\n\n   So now fix this for real by retiring the MONT_HELPER macro\n   in crypto/rsa/rsa_eay.c.\n\n   *Bodo Moeller; problem pointed out by Marius Schilder*\n\n * Various precautionary measures:\n\n   - Avoid size_t integer overflow in HASH_UPDATE (md32_common.h).\n\n   - Avoid a buffer overflow in d2i_SSL_SESSION() (ssl_asn1.c).\n     (NB: This would require knowledge of the secret session ticket key\n     to exploit, in which case you'd be SOL either way.)\n\n   - Change bn_nist.c so that it will properly handle input BIGNUMs\n     outside the expected range.\n\n   - Enforce the 'num' check in BN_div() (bn_div.c) for non-BN_DEBUG\n     builds.\n\n   *Neel Mehta, Bodo Moeller*\n\n * Allow engines to be \"soft loaded\" - i.e. optionally don't die if\n   the load fails. Useful for distros.\n\n   *Ben Laurie and the FreeBSD team*\n\n * Add support for Local Machine Keyset attribute in PKCS#12 files.\n\n   *Steve Henson*\n\n * Fix BN_GF2m_mod_arr() top-bit cleanup code.\n\n   *Huang Ying*\n\n * Expand ENGINE to support engine supplied SSL client certificate functions.\n\n   This work was sponsored by Logica.\n\n   *Steve Henson*\n\n * Add CryptoAPI ENGINE to support use of RSA and DSA keys held in Windows\n   keystores. Support for SSL/TLS client authentication too.\n   Not compiled unless enable-capieng specified to Configure.\n\n   This work was sponsored by Logica.\n\n   *Steve Henson*\n\n * Fix bug in X509_ATTRIBUTE creation: don't set attribute using\n   ASN1_TYPE_set1 if MBSTRING flag set. This bug would crash certain\n   attribute creation routines such as certificate requests and PKCS#12\n   files.\n\n   *Steve Henson*\n\n### Changes between 0.9.8g and 0.9.8h  [28 May 2008]\n\n * Fix flaw if 'Server Key exchange message' is omitted from a TLS\n   handshake which could lead to a client crash as found using the\n   Codenomicon TLS test suite ([CVE-2008-1672])\n\n   *Steve Henson, Mark Cox*\n\n * Fix double free in TLS server name extensions which could lead to\n   a remote crash found by Codenomicon TLS test suite ([CVE-2008-0891])\n\n   *Joe Orton*\n\n * Clear error queue in SSL_CTX_use_certificate_chain_file()\n\n   Clear the error queue to ensure that error entries left from\n   older function calls do not interfere with the correct operation.\n\n   *Lutz Jaenicke, Erik de Castro Lopo*\n\n * Remove root CA certificates of commercial CAs:\n\n   The OpenSSL project does not recommend any specific CA and does not\n   have any policy with respect to including or excluding any CA.\n   Therefore, it does not make any sense to ship an arbitrary selection\n   of root CA certificates with the OpenSSL software.\n\n   *Lutz Jaenicke*\n\n * RSA OAEP patches to fix two separate invalid memory reads.\n   The first one involves inputs when 'lzero' is greater than\n   'SHA_DIGEST_LENGTH' (it would read about SHA_DIGEST_LENGTH bytes\n   before the beginning of from). The second one involves inputs where\n   the 'db' section contains nothing but zeroes (there is a one-byte\n   invalid read after the end of 'db').\n\n   *Ivan Nestlerode <inestlerode@us.ibm.com>*\n\n * Partial backport from 0.9.9-dev:\n\n   Introduce bn_mul_mont (dedicated Montgomery multiplication\n   procedure) as a candidate for BIGNUM assembler implementation.\n   While 0.9.9-dev uses assembler for various architectures, only\n   x86_64 is available by default here in the 0.9.8 branch, and\n   32-bit x86 is available through a compile-time setting.\n\n   To try the 32-bit x86 assembler implementation, use Configure\n   option \"enable-montasm\" (which exists only for this backport).\n\n   As \"enable-montasm\" for 32-bit x86 disclaims code stability\n   anyway, in this constellation we activate additional code\n   backported from 0.9.9-dev for further performance improvements,\n   namely BN_from_montgomery_word.  (To enable this otherwise,\n   e.g. x86_64, try `-DMONT_FROM_WORD___NON_DEFAULT_0_9_8_BUILD`.)\n\n   *Andy Polyakov (backport partially by Bodo Moeller)*\n\n * Add TLS session ticket callback. This allows an application to set\n   TLS ticket cipher and HMAC keys rather than relying on hardcoded fixed\n   values. This is useful for key rollover for example where several key\n   sets may exist with different names.\n\n   *Steve Henson*\n\n * Reverse ENGINE-internal logic for caching default ENGINE handles.\n   This was broken until now in 0.9.8 releases, such that the only way\n   a registered ENGINE could be used (assuming it initialises\n   successfully on the host) was to explicitly set it as the default\n   for the relevant algorithms. This is in contradiction with 0.9.7\n   behaviour and the documentation. With this fix, when an ENGINE is\n   registered into a given algorithm's table of implementations, the\n   'uptodate' flag is reset so that auto-discovery will be used next\n   time a new context for that algorithm attempts to select an\n   implementation.\n\n   *Ian Lister (tweaked by Geoff Thorpe)*\n\n * Backport of CMS code to OpenSSL 0.9.8. This differs from the 0.9.9\n   implementation in the following ways:\n\n   Lack of EVP_PKEY_ASN1_METHOD means algorithm parameters have to be\n   hard coded.\n\n   Lack of BER streaming support means one pass streaming processing is\n   only supported if data is detached: setting the streaming flag is\n   ignored for embedded content.\n\n   CMS support is disabled by default and must be explicitly enabled\n   with the enable-cms configuration option.\n\n   *Steve Henson*\n\n * Update the GMP engine glue to do direct copies between BIGNUM and\n   mpz_t when openssl and GMP use the same limb size. Otherwise the\n   existing \"conversion via a text string export\" trick is still used.\n\n   *Paul Sheer <paulsheer@gmail.com>*\n\n * Zlib compression BIO. This is a filter BIO which compressed and\n   uncompresses any data passed through it.\n\n   *Steve Henson*\n\n * Add AES_wrap_key() and AES_unwrap_key() functions to implement\n   RFC3394 compatible AES key wrapping.\n\n   *Steve Henson*\n\n * Add utility functions to handle ASN1 structures. ASN1_STRING_set0():\n   sets string data without copying. X509_ALGOR_set0() and\n   X509_ALGOR_get0(): set and retrieve X509_ALGOR (AlgorithmIdentifier)\n   data. Attribute function X509at_get0_data_by_OBJ(): retrieves data\n   from an X509_ATTRIBUTE structure optionally checking it occurs only\n   once. ASN1_TYPE_set1(): set and ASN1_TYPE structure copying supplied\n   data.\n\n   *Steve Henson*\n\n * Fix BN flag handling in RSA_eay_mod_exp() and BN_MONT_CTX_set()\n   to get the expected BN_FLG_CONSTTIME behavior.\n\n   *Bodo Moeller (Google)*\n\n * Netware support:\n\n   - fixed wrong usage of ioctlsocket() when build for LIBC BSD sockets\n   - fixed do_tests.pl to run the test suite with CLIB builds too (CLIB_OPT)\n   - added some more tests to do_tests.pl\n   - fixed RunningProcess usage so that it works with newer LIBC NDKs too\n   - removed usage of BN_LLONG for CLIB builds to avoid runtime dependency\n   - added new Configure targets netware-clib-bsdsock, netware-clib-gcc,\n     netware-clib-bsdsock-gcc, netware-libc-bsdsock-gcc\n   - various changes to netware.pl to enable gcc-cross builds on Win32\n     platform\n   - changed crypto/bio/b_sock.c to work with macro functions (CLIB BSD)\n   - various changes to fix missing prototype warnings\n   - fixed x86nasm.pl to create correct asm files for NASM COFF output\n   - added AES, WHIRLPOOL and CPUID assembler code to build files\n   - added missing AES assembler make rules to mk1mf.pl\n   - fixed order of includes in `apps/ocsp.c` so that `e_os.h` settings apply\n\n   *Guenter Knauf <eflash@gmx.net>*\n\n * Implement certificate status request TLS extension defined in RFC3546.\n   A client can set the appropriate parameters and receive the encoded\n   OCSP response via a callback. A server can query the supplied parameters\n   and set the encoded OCSP response in the callback. Add simplified examples\n   to s_client and s_server.\n\n   *Steve Henson*\n\n### Changes between 0.9.8f and 0.9.8g  [19 Oct 2007]\n\n * Fix various bugs:\n   + Binary incompatibility of ssl_ctx_st structure\n   + DTLS interoperation with non-compliant servers\n   + Don't call get_session_cb() without proposed session\n   + Fix ia64 assembler code\n\n   *Andy Polyakov, Steve Henson*\n\n### Changes between 0.9.8e and 0.9.8f  [11 Oct 2007]\n\n * DTLS Handshake overhaul. There were longstanding issues with\n   OpenSSL DTLS implementation, which were making it impossible for\n   RFC 4347 compliant client to communicate with OpenSSL server.\n   Unfortunately just fixing these incompatibilities would \"cut off\"\n   pre-0.9.8f clients. To allow for hassle free upgrade post-0.9.8e\n   server keeps tolerating non RFC compliant syntax. The opposite is\n   not true, 0.9.8f client can not communicate with earlier server.\n   This update even addresses CVE-2007-4995.\n\n   *Andy Polyakov*\n\n * Changes to avoid need for function casts in OpenSSL: some compilers\n   (gcc 4.2 and later) reject their use.\n   *Kurt Roeckx <kurt@roeckx.be>, Peter Hartley <pdh@utter.chaos.org.uk>,\n    Steve Henson*\n\n * Add RFC4507 support to OpenSSL. This includes the corrections in\n   RFC4507bis. The encrypted ticket format is an encrypted encoded\n   SSL_SESSION structure, that way new session features are automatically\n   supported.\n\n   If a client application caches session in an SSL_SESSION structure\n   support is transparent because tickets are now stored in the encoded\n   SSL_SESSION.\n\n   The SSL_CTX structure automatically generates keys for ticket\n   protection in servers so again support should be possible\n   with no application modification.\n\n   If a client or server wishes to disable RFC4507 support then the option\n   SSL_OP_NO_TICKET can be set.\n\n   Add a TLS extension debugging callback to allow the contents of any client\n   or server extensions to be examined.\n\n   This work was sponsored by Google.\n\n   *Steve Henson*\n\n * Add initial support for TLS extensions, specifically for the server_name\n   extension so far.  The SSL_SESSION, SSL_CTX, and SSL data structures now\n   have new members for a hostname.  The SSL data structure has an\n   additional member `SSL_CTX *initial_ctx` so that new sessions can be\n   stored in that context to allow for session resumption, even after the\n   SSL has been switched to a new SSL_CTX in reaction to a client's\n   server_name extension.\n\n   New functions (subject to change):\n\n           SSL_get_servername()\n           SSL_get_servername_type()\n           SSL_set_SSL_CTX()\n\n   New CTRL codes and macros (subject to change):\n\n           SSL_CTRL_SET_TLSEXT_SERVERNAME_CB\n                               - SSL_CTX_set_tlsext_servername_callback()\n           SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG\n                                    - SSL_CTX_set_tlsext_servername_arg()\n           SSL_CTRL_SET_TLSEXT_HOSTNAME           - SSL_set_tlsext_host_name()\n\n   openssl s_client has a new '-servername ...' option.\n\n   openssl s_server has new options '-servername_host ...', '-cert2 ...',\n   '-key2 ...', '-servername_fatal' (subject to change).  This allows\n   testing the HostName extension for a specific single hostname ('-cert'\n   and '-key' remain fallbacks for handshakes without HostName\n   negotiation).  If the unrecognized_name alert has to be sent, this by\n   default is a warning; it becomes fatal with the '-servername_fatal'\n   option.\n\n   *Peter Sylvester,  Remy Allais, Christophe Renou, Steve Henson*\n\n * Add AES and SSE2 assembly language support to VC++ build.\n\n   *Steve Henson*\n\n * Mitigate attack on final subtraction in Montgomery reduction.\n\n   *Andy Polyakov*\n\n * Fix crypto/ec/ec_mult.c to work properly with scalars of value 0\n   (which previously caused an internal error).\n\n   *Bodo Moeller*\n\n * Squeeze another 10% out of IGE mode when in != out.\n\n   *Ben Laurie*\n\n * AES IGE mode speedup.\n\n   *Dean Gaudet (Google)*\n\n * Add the Korean symmetric 128-bit cipher SEED (see\n   <http://www.kisa.or.kr/kisa/seed/jsp/seed_eng.jsp>) and\n   add SEED ciphersuites from RFC 4162:\n\n           TLS_RSA_WITH_SEED_CBC_SHA      =  \"SEED-SHA\"\n           TLS_DHE_DSS_WITH_SEED_CBC_SHA  =  \"DHE-DSS-SEED-SHA\"\n           TLS_DHE_RSA_WITH_SEED_CBC_SHA  =  \"DHE-RSA-SEED-SHA\"\n           TLS_DH_anon_WITH_SEED_CBC_SHA  =  \"ADH-SEED-SHA\"\n\n   To minimize changes between patchlevels in the OpenSSL 0.9.8\n   series, SEED remains excluded from compilation unless OpenSSL\n   is configured with 'enable-seed'.\n\n   *KISA, Bodo Moeller*\n\n * Mitigate branch prediction attacks, which can be practical if a\n   single processor is shared, allowing a spy process to extract\n   information.  For detailed background information, see\n   <http://eprint.iacr.org/2007/039> (O. Aciicmez, S. Gueron,\n   J.-P. Seifert, \"New Branch Prediction Vulnerabilities in OpenSSL\n   and Necessary Software Countermeasures\").  The core of the change\n   are new versions BN_div_no_branch() and\n   BN_mod_inverse_no_branch() of BN_div() and BN_mod_inverse(),\n   respectively, which are slower, but avoid the security-relevant\n   conditional branches.  These are automatically called by BN_div()\n   and BN_mod_inverse() if the flag BN_FLG_CONSTTIME is set for one\n   of the input BIGNUMs.  Also, BN_is_bit_set() has been changed to\n   remove a conditional branch.\n\n   BN_FLG_CONSTTIME is the new name for the previous\n   BN_FLG_EXP_CONSTTIME flag, since it now affects more than just\n   modular exponentiation.  (Since OpenSSL 0.9.7h, setting this flag\n   in the exponent causes BN_mod_exp_mont() to use the alternative\n   implementation in BN_mod_exp_mont_consttime().)  The old name\n   remains as a deprecated alias.\n\n   Similarly, RSA_FLAG_NO_EXP_CONSTTIME is replaced by a more general\n   RSA_FLAG_NO_CONSTTIME flag since the RSA implementation now uses\n   constant-time implementations for more than just exponentiation.\n   Here too the old name is kept as a deprecated alias.\n\n   BN_BLINDING_new() will now use BN_dup() for the modulus so that\n   the BN_BLINDING structure gets an independent copy of the\n   modulus.  This means that the previous `BIGNUM *m` argument to\n   BN_BLINDING_new() and to BN_BLINDING_create_param() now\n   essentially becomes `const BIGNUM *m`, although we can't actually\n   change this in the header file before 0.9.9.  It allows\n   RSA_setup_blinding() to use BN_with_flags() on the modulus to\n   enable BN_FLG_CONSTTIME.\n\n   *Matthew D Wood (Intel Corp)*\n\n * In the SSL/TLS server implementation, be strict about session ID\n   context matching (which matters if an application uses a single\n   external cache for different purposes).  Previously,\n   out-of-context reuse was forbidden only if SSL_VERIFY_PEER was\n   set.  This did ensure strict client verification, but meant that,\n   with applications using a single external cache for quite\n   different requirements, clients could circumvent ciphersuite\n   restrictions for a given session ID context by starting a session\n   in a different context.\n\n   *Bodo Moeller*\n\n * Include \"!eNULL\" in SSL_DEFAULT_CIPHER_LIST to make sure that\n   a ciphersuite string such as \"DEFAULT:RSA\" cannot enable\n   authentication-only ciphersuites.\n\n   *Bodo Moeller*\n\n * Update the SSL_get_shared_ciphers() fix CVE-2006-3738 which was\n   not complete and could lead to a possible single byte overflow\n   ([CVE-2007-5135]) [Ben Laurie]\n\n### Changes between 0.9.8d and 0.9.8e  [23 Feb 2007]\n\n * Since AES128 and AES256 (and similarly Camellia128 and\n   Camellia256) share a single mask bit in the logic of\n   ssl/ssl_ciph.c, the code for masking out disabled ciphers needs a\n   kludge to work properly if AES128 is available and AES256 isn't\n   (or if Camellia128 is available and Camellia256 isn't).\n\n   *Victor Duchovni*\n\n * Fix the BIT STRING encoding generated by crypto/ec/ec_asn1.c\n   (within i2d_ECPrivateKey, i2d_ECPKParameters, i2d_ECParameters):\n   When a point or a seed is encoded in a BIT STRING, we need to\n   prevent the removal of trailing zero bits to get the proper DER\n   encoding.  (By default, crypto/asn1/a_bitstr.c assumes the case\n   of a NamedBitList, for which trailing 0 bits need to be removed.)\n\n   *Bodo Moeller*\n\n * Have SSL/TLS server implementation tolerate \"mismatched\" record\n   protocol version while receiving ClientHello even if the\n   ClientHello is fragmented.  (The server can't insist on the\n   particular protocol version it has chosen before the ServerHello\n   message has informed the client about his choice.)\n\n   *Bodo Moeller*\n\n * Add RFC 3779 support.\n\n   *Rob Austein for ARIN, Ben Laurie*\n\n * Load error codes if they are not already present instead of using a\n   static variable. This allows them to be cleanly unloaded and reloaded.\n   Improve header file function name parsing.\n\n   *Steve Henson*\n\n * extend SMTP and IMAP protocol emulation in s_client to use EHLO\n   or CAPABILITY handshake as required by RFCs.\n\n   *Goetz Babin-Ebell*\n\n### Changes between 0.9.8c and 0.9.8d  [28 Sep 2006]\n\n * Introduce limits to prevent malicious keys being able to\n   cause a denial of service.  ([CVE-2006-2940])\n\n   *Steve Henson, Bodo Moeller*\n\n * Fix ASN.1 parsing of certain invalid structures that can result\n   in a denial of service.  ([CVE-2006-2937])  [Steve Henson]\n\n * Fix buffer overflow in SSL_get_shared_ciphers() function.\n   ([CVE-2006-3738]) [Tavis Ormandy and Will Drewry, Google Security Team]\n\n * Fix SSL client code which could crash if connecting to a\n   malicious SSLv2 server.  ([CVE-2006-4343])\n\n   *Tavis Ormandy and Will Drewry, Google Security Team*\n\n * Since 0.9.8b, ciphersuite strings naming explicit ciphersuites\n   match only those.  Before that, \"AES256-SHA\" would be interpreted\n   as a pattern and match \"AES128-SHA\" too (since AES128-SHA got\n   the same strength classification in 0.9.7h) as we currently only\n   have a single AES bit in the ciphersuite description bitmap.\n   That change, however, also applied to ciphersuite strings such as\n   \"RC4-MD5\" that intentionally matched multiple ciphersuites --\n   namely, SSL 2.0 ciphersuites in addition to the more common ones\n   from SSL 3.0/TLS 1.0.\n\n   So we change the selection algorithm again: Naming an explicit\n   ciphersuite selects this one ciphersuite, and any other similar\n   ciphersuite (same bitmap) from *other* protocol versions.\n   Thus, \"RC4-MD5\" again will properly select both the SSL 2.0\n   ciphersuite and the SSL 3.0/TLS 1.0 ciphersuite.\n\n   Since SSL 2.0 does not have any ciphersuites for which the\n   128/256 bit distinction would be relevant, this works for now.\n   The proper fix will be to use different bits for AES128 and\n   AES256, which would have avoided the problems from the beginning;\n   however, bits are scarce, so we can only do this in a new release\n   (not just a patchlevel) when we can change the SSL_CIPHER\n   definition to split the single 'unsigned long mask' bitmap into\n   multiple values to extend the available space.\n\n   *Bodo Moeller*\n\n### Changes between 0.9.8b and 0.9.8c  [05 Sep 2006]\n\n * Avoid PKCS #1 v1.5 signature attack discovered by Daniel Bleichenbacher\n   ([CVE-2006-4339])  [Ben Laurie and Google Security Team]\n\n * Add AES IGE and biIGE modes.\n\n   *Ben Laurie*\n\n * Change the Unix randomness entropy gathering to use poll() when\n   possible instead of select(), since the latter has some\n   undesirable limitations.\n\n   *Darryl Miles via Richard Levitte and Bodo Moeller*\n\n * Disable \"ECCdraft\" ciphersuites more thoroughly.  Now special\n   treatment in ssl/ssl_ciph.s makes sure that these ciphersuites\n   cannot be implicitly activated as part of, e.g., the \"AES\" alias.\n   However, please upgrade to OpenSSL 0.9.9[-dev] for\n   non-experimental use of the ECC ciphersuites to get TLS extension\n   support, which is required for curve and point format negotiation\n   to avoid potential handshake problems.\n\n   *Bodo Moeller*\n\n * Disable rogue ciphersuites:\n\n   - SSLv2 0x08 0x00 0x80 (\"RC4-64-MD5\")\n   - SSLv3/TLSv1 0x00 0x61 (\"EXP1024-RC2-CBC-MD5\")\n   - SSLv3/TLSv1 0x00 0x60 (\"EXP1024-RC4-MD5\")\n\n   The latter two were purportedly from\n   draft-ietf-tls-56-bit-ciphersuites-0[01].txt, but do not really\n   appear there.\n\n   Also deactivate the remaining ciphersuites from\n   draft-ietf-tls-56-bit-ciphersuites-01.txt.  These are just as\n   unofficial, and the ID has long expired.\n\n   *Bodo Moeller*\n\n * Fix RSA blinding Heisenbug (problems sometimes occurred on\n   dual-core machines) and other potential thread-safety issues.\n\n   *Bodo Moeller*\n\n * Add the symmetric cipher Camellia (128-bit, 192-bit, 256-bit key\n   versions), which is now available for royalty-free use\n   (see <http://info.isl.ntt.co.jp/crypt/eng/info/chiteki.html>).\n   Also, add Camellia TLS ciphersuites from RFC 4132.\n\n   To minimize changes between patchlevels in the OpenSSL 0.9.8\n   series, Camellia remains excluded from compilation unless OpenSSL\n   is configured with 'enable-camellia'.\n\n   *NTT*\n\n * Disable the padding bug check when compression is in use. The padding\n   bug check assumes the first packet is of even length, this is not\n   necessarily true if compression is enabled and can result in false\n   positives causing handshake failure. The actual bug test is ancient\n   code so it is hoped that implementations will either have fixed it by\n   now or any which still have the bug do not support compression.\n\n   *Steve Henson*\n\n### Changes between 0.9.8a and 0.9.8b  [04 May 2006]\n\n * When applying a cipher rule check to see if string match is an explicit\n   cipher suite and only match that one cipher suite if it is.\n\n   *Steve Henson*\n\n * Link in manifests for VC++ if needed.\n\n   *Austin Ziegler <halostatue@gmail.com>*\n\n * Update support for ECC-based TLS ciphersuites according to\n   draft-ietf-tls-ecc-12.txt with proposed changes (but without\n   TLS extensions, which are supported starting with the 0.9.9\n   branch, not in the OpenSSL 0.9.8 branch).\n\n   *Douglas Stebila*\n\n * New functions EVP_CIPHER_CTX_new() and EVP_CIPHER_CTX_free() to support\n   opaque EVP_CIPHER_CTX handling.\n\n   *Steve Henson*\n\n * Fixes and enhancements to zlib compression code. We now only use\n   \"zlib1.dll\" and use the default `__cdecl` calling convention on Win32\n   to conform with the standards mentioned here:\n   <http://www.zlib.net/DLL_FAQ.txt>\n   Static zlib linking now works on Windows and the new --with-zlib-include\n   --with-zlib-lib options to Configure can be used to supply the location\n   of the headers and library. Gracefully handle case where zlib library\n   can't be loaded.\n\n   *Steve Henson*\n\n * Several fixes and enhancements to the OID generation code. The old code\n   sometimes allowed invalid OIDs (1.X for X >= 40 for example), couldn't\n   handle numbers larger than ULONG_MAX, truncated printing and had a\n   non standard OBJ_obj2txt() behaviour.\n\n   *Steve Henson*\n\n * Add support for building of engines under engine/ as shared libraries\n   under VC++ build system.\n\n   *Steve Henson*\n\n * Corrected the numerous bugs in the Win32 path splitter in DSO.\n   Hopefully, we will not see any false combination of paths any more.\n\n   *Richard Levitte*\n\n### Changes between 0.9.8 and 0.9.8a  [11 Oct 2005]\n\n * Remove the functionality of SSL_OP_MSIE_SSLV2_RSA_PADDING\n   (part of SSL_OP_ALL).  This option used to disable the\n   countermeasure against man-in-the-middle protocol-version\n   rollback in the SSL 2.0 server implementation, which is a bad\n   idea.  ([CVE-2005-2969])\n\n   *Bodo Moeller; problem pointed out by Yutaka Oiwa (Research Center\n   for Information Security, National Institute of Advanced Industrial\n   Science and Technology [AIST], Japan)*\n\n * Add two function to clear and return the verify parameter flags.\n\n   *Steve Henson*\n\n * Keep cipherlists sorted in the source instead of sorting them at\n   runtime, thus removing the need for a lock.\n\n   *Nils Larsch*\n\n * Avoid some small subgroup attacks in Diffie-Hellman.\n\n   *Nick Mathewson and Ben Laurie*\n\n * Add functions for well-known primes.\n\n   *Nick Mathewson*\n\n * Extended Windows CE support.\n\n   *Satoshi Nakamura and Andy Polyakov*\n\n * Initialize SSL_METHOD structures at compile time instead of during\n   runtime, thus removing the need for a lock.\n\n   *Steve Henson*\n\n * Make PKCS7_decrypt() work even if no certificate is supplied by\n   attempting to decrypt each encrypted key in turn. Add support to\n   smime utility.\n\n   *Steve Henson*\n\n### Changes between 0.9.7h and 0.9.8  [05 Jul 2005]\n\n[NB: OpenSSL 0.9.7i and later 0.9.7 patch levels were released after\nOpenSSL 0.9.8.]\n\n * Add libcrypto.pc and libssl.pc for those who feel they need them.\n\n   *Richard Levitte*\n\n * Change CA.sh and CA.pl so they don't bundle the CSR and the private\n   key into the same file any more.\n\n   *Richard Levitte*\n\n * Add initial support for Win64, both IA64 and AMD64/x64 flavors.\n\n   *Andy Polyakov*\n\n * Add -utf8 command line and config file option to 'ca'.\n\n   *Stefan <stf@udoma.org*\n\n * Removed the macro des_crypt(), as it seems to conflict with some\n   libraries.  Use DES_crypt().\n\n   *Richard Levitte*\n\n * Correct naming of the 'chil' and '4758cca' ENGINEs. This\n   involves renaming the source and generated shared-libs for\n   both. The engines will accept the corrected or legacy ids\n   ('ncipher' and '4758_cca' respectively) when binding. NB,\n   this only applies when building 'shared'.\n\n   *Corinna Vinschen <vinschen@redhat.com> and Geoff Thorpe*\n\n * Add attribute functions to EVP_PKEY structure. Modify\n   PKCS12_create() to recognize a CSP name attribute and\n   use it. Make -CSP option work again in pkcs12 utility.\n\n   *Steve Henson*\n\n * Add new functionality to the bn blinding code:\n   - automatic re-creation of the BN_BLINDING parameters after\n     a fixed number of uses (currently 32)\n   - add new function for parameter creation\n   - introduce flags to control the update behaviour of the\n     BN_BLINDING parameters\n   - hide BN_BLINDING structure\n   Add a second BN_BLINDING slot to the RSA structure to improve\n   performance when a single RSA object is shared among several\n   threads.\n\n   *Nils Larsch*\n\n * Add support for DTLS.\n\n   *Nagendra Modadugu <nagendra@cs.stanford.edu> and Ben Laurie*\n\n * Add support for DER encoded private keys (SSL_FILETYPE_ASN1)\n   to SSL_CTX_use_PrivateKey_file() and SSL_use_PrivateKey_file()\n\n   *Walter Goulet*\n\n * Remove buggy and incomplete DH cert support from\n   ssl/ssl_rsa.c and ssl/s3_both.c\n\n   *Nils Larsch*\n\n * Use SHA-1 instead of MD5 as the default digest algorithm for\n   the `apps/openssl` commands.\n\n   *Nils Larsch*\n\n * Compile clean with \"-Wall -Wmissing-prototypes\n   -Wstrict-prototypes -Wmissing-declarations -Werror\". Currently\n   DEBUG_SAFESTACK must also be set.\n\n   *Ben Laurie*\n\n * Change ./Configure so that certain algorithms can be disabled by default.\n   The new counterpiece to \"no-xxx\" is \"enable-xxx\".\n\n   The patented RC5 and MDC2 algorithms will now be disabled unless\n   \"enable-rc5\" and \"enable-mdc2\", respectively, are specified.\n\n   (IDEA remains enabled despite being patented.  This is because IDEA\n   is frequently required for interoperability, and there is no license\n   fee for non-commercial use.  As before, \"no-idea\" can be used to\n   avoid this algorithm.)\n\n   *Bodo Moeller*\n\n * Add processing of proxy certificates (see RFC 3820).  This work was\n   sponsored by KTH (The Royal Institute of Technology in Stockholm) and\n   EGEE (Enabling Grids for E-science in Europe).\n\n   *Richard Levitte*\n\n * RC4 performance overhaul on modern architectures/implementations, such\n   as Intel P4, IA-64 and AMD64.\n\n   *Andy Polyakov*\n\n * New utility extract-section.pl. This can be used specify an alternative\n   section number in a pod file instead of having to treat each file as\n   a separate case in Makefile. This can be done by adding two lines to the\n   pod file:\n\n   =for comment openssl_section:XXX\n\n   The blank line is mandatory.\n\n   *Steve Henson*\n\n * New arguments -certform, -keyform and -pass for s_client and s_server\n   to allow alternative format key and certificate files and passphrase\n   sources.\n\n   *Steve Henson*\n\n * New structure X509_VERIFY_PARAM which combines current verify parameters,\n   update associated structures and add various utility functions.\n\n   Add new policy related verify parameters, include policy checking in\n   standard verify code. Enhance 'smime' application with extra parameters\n   to support policy checking and print out.\n\n   *Steve Henson*\n\n * Add a new engine to support VIA PadLock ACE extensions in the VIA C3\n   Nehemiah processors. These extensions support AES encryption in hardware\n   as well as RNG (though RNG support is currently disabled).\n\n   *Michal Ludvig <michal@logix.cz>, with help from Andy Polyakov*\n\n * Deprecate `BN_[get|set]_params()` functions (they were ignored internally).\n\n   *Geoff Thorpe*\n\n * New FIPS 180-2 algorithms, SHA-224/-256/-384/-512 are implemented.\n\n   *Andy Polyakov and a number of other people*\n\n * Improved PowerPC platform support. Most notably BIGNUM assembler\n   implementation contributed by IBM.\n\n   *Suresh Chari, Peter Waltenberg, Andy Polyakov*\n\n * The new 'RSA_generate_key_ex' function now takes a BIGNUM for the public\n   exponent rather than 'unsigned long'. There is a corresponding change to\n   the new 'rsa_keygen' element of the RSA_METHOD structure.\n\n   *Jelte Jansen, Geoff Thorpe*\n\n * Functionality for creating the initial serial number file is now\n   moved from CA.pl to the 'ca' utility with a new option -create_serial.\n\n   (Before OpenSSL 0.9.7e, CA.pl used to initialize the serial\n   number file to 1, which is bound to cause problems.  To avoid\n   the problems while respecting compatibility between different 0.9.7\n   patchlevels, 0.9.7e  employed 'openssl x509 -next_serial' in\n   CA.pl for serial number initialization.  With the new release 0.9.8,\n   we can fix the problem directly in the 'ca' utility.)\n\n   *Steve Henson*\n\n * Reduced header interdependencies by declaring more opaque objects in\n   ossl_typ.h. As a consequence, including some headers (eg. engine.h) will\n   give fewer recursive includes, which could break lazy source code - so\n   this change is covered by the OPENSSL_NO_DEPRECATED symbol. As always,\n   developers should define this symbol when building and using openssl to\n   ensure they track the recommended behaviour, interfaces, [etc], but\n   backwards-compatible behaviour prevails when this isn't defined.\n\n   *Geoff Thorpe*\n\n * New function X509_POLICY_NODE_print() which prints out policy nodes.\n\n   *Steve Henson*\n\n * Add new EVP function EVP_CIPHER_CTX_rand_key and associated functionality.\n   This will generate a random key of the appropriate length based on the\n   cipher context. The EVP_CIPHER can provide its own random key generation\n   routine to support keys of a specific form. This is used in the des and\n   3des routines to generate a key of the correct parity. Update S/MIME\n   code to use new functions and hence generate correct parity DES keys.\n   Add EVP_CHECK_DES_KEY #define to return an error if the key is not\n   valid (weak or incorrect parity).\n\n   *Steve Henson*\n\n * Add a local set of CRLs that can be used by X509_verify_cert() as well\n   as looking them up. This is useful when the verified structure may contain\n   CRLs, for example PKCS#7 signedData. Modify PKCS7_verify() to use any CRLs\n   present unless the new PKCS7_NO_CRL flag is asserted.\n\n   *Steve Henson*\n\n * Extend ASN1 oid configuration module. It now additionally accepts the\n   syntax:\n\n   shortName = some long name, 1.2.3.4\n\n   *Steve Henson*\n\n * Reimplemented the BN_CTX implementation. There is now no more static\n   limitation on the number of variables it can handle nor the depth of the\n   \"stack\" handling for BN_CTX_start()/BN_CTX_end() pairs. The stack\n   information can now expand as required, and rather than having a single\n   static array of bignums, BN_CTX now uses a linked-list of such arrays\n   allowing it to expand on demand whilst maintaining the usefulness of\n   BN_CTX's \"bundling\".\n\n   *Geoff Thorpe*\n\n * Add a missing BN_CTX parameter to the 'rsa_mod_exp' callback in RSA_METHOD\n   to allow all RSA operations to function using a single BN_CTX.\n\n   *Geoff Thorpe*\n\n * Preliminary support for certificate policy evaluation and checking. This\n   is initially intended to pass the tests outlined in \"Conformance Testing\n   of Relying Party Client Certificate Path Processing Logic\" v1.07.\n\n   *Steve Henson*\n\n * bn_dup_expand() has been deprecated, it was introduced in 0.9.7 and\n   remained unused and not that useful. A variety of other little bignum\n   tweaks and fixes have also been made continuing on from the audit (see\n   below).\n\n   *Geoff Thorpe*\n\n * Constify all or almost all d2i, c2i, s2i and r2i functions, along with\n   associated ASN1, EVP and SSL functions and old ASN1 macros.\n\n   *Richard Levitte*\n\n * BN_zero() only needs to set 'top' and 'neg' to zero for correct results,\n   and this should never fail. So the return value from the use of\n   BN_set_word() (which can fail due to needless expansion) is now deprecated;\n   if OPENSSL_NO_DEPRECATED is defined, BN_zero() is a void macro.\n\n   *Geoff Thorpe*\n\n * BN_CTX_get() should return zero-valued bignums, providing the same\n   initialised value as BN_new().\n\n   *Geoff Thorpe, suggested by Ulf Möller*\n\n * Support for inhibitAnyPolicy certificate extension.\n\n   *Steve Henson*\n\n * An audit of the BIGNUM code is underway, for which debugging code is\n   enabled when BN_DEBUG is defined. This makes stricter enforcements on what\n   is considered valid when processing BIGNUMs, and causes execution to\n   assert() when a problem is discovered. If BN_DEBUG_RAND is defined,\n   further steps are taken to deliberately pollute unused data in BIGNUM\n   structures to try and expose faulty code further on. For now, openssl will\n   (in its default mode of operation) continue to tolerate the inconsistent\n   forms that it has tolerated in the past, but authors and packagers should\n   consider trying openssl and their own applications when compiled with\n   these debugging symbols defined. It will help highlight potential bugs in\n   their own code, and will improve the test coverage for OpenSSL itself. At\n   some point, these tighter rules will become openssl's default to improve\n   maintainability, though the assert()s and other overheads will remain only\n   in debugging configurations. See bn.h for more details.\n\n   *Geoff Thorpe, Nils Larsch, Ulf Möller*\n\n * BN_CTX_init() has been deprecated, as BN_CTX is an opaque structure\n   that can only be obtained through BN_CTX_new() (which implicitly\n   initialises it). The presence of this function only made it possible\n   to overwrite an existing structure (and cause memory leaks).\n\n   *Geoff Thorpe*\n\n * Because of the callback-based approach for implementing LHASH as a\n   template type, lh_insert() adds opaque objects to hash-tables and\n   lh_doall() or lh_doall_arg() are typically used with a destructor callback\n   to clean up those corresponding objects before destroying the hash table\n   (and losing the object pointers). So some over-zealous constifications in\n   LHASH have been relaxed so that lh_insert() does not take (nor store) the\n   objects as \"const\" and the `lh_doall[_arg]` callback wrappers are not\n   prototyped to have \"const\" restrictions on the object pointers they are\n   given (and so aren't required to cast them away any more).\n\n   *Geoff Thorpe*\n\n * The tmdiff.h API was so ugly and minimal that our own timing utility\n   (speed) prefers to use its own implementation. The two implementations\n   haven't been consolidated as yet (volunteers?) but the tmdiff API has had\n   its object type properly exposed (MS_TM) instead of casting to/from\n   `char *`. This may still change yet if someone realises MS_TM and\n   `ms_time_***`\n   aren't necessarily the greatest nomenclatures - but this is what was used\n   internally to the implementation so I've used that for now.\n\n   *Geoff Thorpe*\n\n * Ensure that deprecated functions do not get compiled when\n   OPENSSL_NO_DEPRECATED is defined. Some \"openssl\" subcommands and a few of\n   the self-tests were still using deprecated key-generation functions so\n   these have been updated also.\n\n   *Geoff Thorpe*\n\n * Reorganise PKCS#7 code to separate the digest location functionality\n   into PKCS7_find_digest(), digest addition into PKCS7_bio_add_digest().\n   New function PKCS7_set_digest() to set the digest type for PKCS#7\n   digestedData type. Add additional code to correctly generate the\n   digestedData type and add support for this type in PKCS7 initialization\n   functions.\n\n   *Steve Henson*\n\n * New function PKCS7_set0_type_other() this initializes a PKCS7\n   structure of type \"other\".\n\n   *Steve Henson*\n\n * Fix prime generation loop in crypto/bn/bn_prime.pl by making\n   sure the loop does correctly stop and breaking (\"division by zero\")\n   modulus operations are not performed. The (pre-generated) prime\n   table crypto/bn/bn_prime.h was already correct, but it could not be\n   re-generated on some platforms because of the \"division by zero\"\n   situation in the script.\n\n   *Ralf S. Engelschall*\n\n * Update support for ECC-based TLS ciphersuites according to\n   draft-ietf-tls-ecc-03.txt: the KDF1 key derivation function with\n   SHA-1 now is only used for \"small\" curves (where the\n   representation of a field element takes up to 24 bytes); for\n   larger curves, the field element resulting from ECDH is directly\n   used as premaster secret.\n\n   *Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Add code for kP+lQ timings to crypto/ec/ectest.c, and add SEC2\n   curve secp160r1 to the tests.\n\n   *Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Add the possibility to load symbols globally with DSO.\n\n   *Götz Babin-Ebell <babin-ebell@trustcenter.de> via Richard Levitte*\n\n * Add the functions ERR_set_mark() and ERR_pop_to_mark() for better\n   control of the error stack.\n\n   *Richard Levitte*\n\n * Add support for STORE in ENGINE.\n\n   *Richard Levitte*\n\n * Add the STORE type.  The intention is to provide a common interface\n   to certificate and key stores, be they simple file-based stores, or\n   HSM-type store, or LDAP stores, or...\n   NOTE: The code is currently UNTESTED and isn't really used anywhere.\n\n   *Richard Levitte*\n\n * Add a generic structure called OPENSSL_ITEM.  This can be used to\n   pass a list of arguments to any function as well as provide a way\n   for a function to pass data back to the caller.\n\n   *Richard Levitte*\n\n * Add the functions BUF_strndup() and BUF_memdup().  BUF_strndup()\n   works like BUF_strdup() but can be used to duplicate a portion of\n   a string.  The copy gets NUL-terminated.  BUF_memdup() duplicates\n   a memory area.\n\n   *Richard Levitte*\n\n * Add the function sk_find_ex() which works like sk_find(), but will\n   return an index to an element even if an exact match couldn't be\n   found.  The index is guaranteed to point at the element where the\n   searched-for key would be inserted to preserve sorting order.\n\n   *Richard Levitte*\n\n * Add the function OBJ_bsearch_ex() which works like OBJ_bsearch() but\n   takes an extra flags argument for optional functionality.  Currently,\n   the following flags are defined:\n\n      OBJ_BSEARCH_VALUE_ON_NOMATCH\n      This one gets OBJ_bsearch_ex() to return a pointer to the first\n      element where the comparing function returns a negative or zero\n      number.\n\n      OBJ_BSEARCH_FIRST_VALUE_ON_MATCH\n      This one gets OBJ_bsearch_ex() to return a pointer to the first\n      element where the comparing function returns zero.  This is useful\n      if there are more than one element where the comparing function\n      returns zero.\n\n   *Richard Levitte*\n\n * Make it possible to create self-signed certificates with 'openssl ca'\n   in such a way that the self-signed certificate becomes part of the\n   CA database and uses the same mechanisms for serial number generation\n   as all other certificate signing.  The new flag '-selfsign' enables\n   this functionality.  Adapt CA.sh and CA.pl.in.\n\n   *Richard Levitte*\n\n * Add functionality to check the public key of a certificate request\n   against a given private.  This is useful to check that a certificate\n   request can be signed by that key (self-signing).\n\n   *Richard Levitte*\n\n * Make it possible to have multiple active certificates with the same\n   subject in the CA index file.  This is done only if the keyword\n   'unique_subject' is set to 'no' in the main CA section (default\n   if 'CA_default') of the configuration file.  The value is saved\n   with the database itself in a separate index attribute file,\n   named like the index file with '.attr' appended to the name.\n\n   *Richard Levitte*\n\n * Generate multi-valued AVAs using '+' notation in config files for\n   req and dirName.\n\n   *Steve Henson*\n\n * Support for nameConstraints certificate extension.\n\n   *Steve Henson*\n\n * Support for policyConstraints certificate extension.\n\n   *Steve Henson*\n\n * Support for policyMappings certificate extension.\n\n   *Steve Henson*\n\n * Make sure the default DSA_METHOD implementation only uses its\n   dsa_mod_exp() and/or bn_mod_exp() handlers if they are non-NULL,\n   and change its own handlers to be NULL so as to remove unnecessary\n   indirection. This lets alternative implementations fallback to the\n   default implementation more easily.\n\n   *Geoff Thorpe*\n\n * Support for directoryName in GeneralName related extensions\n   in config files.\n\n   *Steve Henson*\n\n * Make it possible to link applications using Makefile.shared.\n   Make that possible even when linking against static libraries!\n\n   *Richard Levitte*\n\n * Support for single pass processing for S/MIME signing. This now\n   means that S/MIME signing can be done from a pipe, in addition\n   cleartext signing (multipart/signed type) is effectively streaming\n   and the signed data does not need to be all held in memory.\n\n   This is done with a new flag PKCS7_STREAM. When this flag is set\n   PKCS7_sign() only initializes the PKCS7 structure and the actual signing\n   is done after the data is output (and digests calculated) in\n   SMIME_write_PKCS7().\n\n   *Steve Henson*\n\n * Add full support for -rpath/-R, both in shared libraries and\n   applications, at least on the platforms where it's known how\n   to do it.\n\n   *Richard Levitte*\n\n * In crypto/ec/ec_mult.c, implement fast point multiplication with\n   precomputation, based on wNAF splitting: EC_GROUP_precompute_mult()\n   will now compute a table of multiples of the generator that\n   makes subsequent invocations of EC_POINTs_mul() or EC_POINT_mul()\n   faster (notably in the case of a single point multiplication,\n   scalar * generator).\n\n   *Nils Larsch, Bodo Moeller*\n\n * IPv6 support for certificate extensions. The various extensions\n   which use the IP:a.b.c.d can now take IPv6 addresses using the\n   formats of RFC1884 2.2 . IPv6 addresses are now also displayed\n   correctly.\n\n   *Steve Henson*\n\n * Added an ENGINE that implements RSA by performing private key\n   exponentiations with the GMP library. The conversions to and from\n   GMP's mpz_t format aren't optimised nor are any montgomery forms\n   cached, and on x86 it appears OpenSSL's own performance has caught up.\n   However there are likely to be other architectures where GMP could\n   provide a boost. This ENGINE is not built in by default, but it can be\n   specified at Configure time and should be accompanied by the necessary\n   linker additions, eg;\n           ./config -DOPENSSL_USE_GMP -lgmp\n\n   *Geoff Thorpe*\n\n * \"openssl engine\" will not display ENGINE/DSO load failure errors when\n   testing availability of engines with \"-t\" - the old behaviour is\n   produced by increasing the feature's verbosity with \"-tt\".\n\n   *Geoff Thorpe*\n\n * ECDSA routines: under certain error conditions uninitialized BN objects\n   could be freed. Solution: make sure initialization is performed early\n   enough. (Reported and fix supplied by Nils Larsch <nla@trustcenter.de>\n   via PR#459)\n\n   *Lutz Jaenicke*\n\n * Key-generation can now be implemented in RSA_METHOD, DSA_METHOD\n   and DH_METHOD (eg. by ENGINE implementations) to override the normal\n   software implementations. For DSA and DH, parameter generation can\n   also be overridden by providing the appropriate method callbacks.\n\n   *Geoff Thorpe*\n\n * Change the \"progress\" mechanism used in key-generation and\n   primality testing to functions that take a new BN_GENCB pointer in\n   place of callback/argument pairs. The new API functions have `_ex`\n   postfixes and the older functions are reimplemented as wrappers for\n   the new ones. The OPENSSL_NO_DEPRECATED symbol can be used to hide\n   declarations of the old functions to help (graceful) attempts to\n   migrate to the new functions. Also, the new key-generation API\n   functions operate on a caller-supplied key-structure and return\n   success/failure rather than returning a key or NULL - this is to\n   help make \"keygen\" another member function of RSA_METHOD etc.\n\n   Example for using the new callback interface:\n\n           int (*my_callback)(int a, int b, BN_GENCB *cb) = ...;\n           void *my_arg = ...;\n           BN_GENCB my_cb;\n\n           BN_GENCB_set(&my_cb, my_callback, my_arg);\n\n           return BN_is_prime_ex(some_bignum, BN_prime_checks, NULL, &cb);\n           /* For the meaning of a, b in calls to my_callback(), see the\n            * documentation of the function that calls the callback.\n            * cb will point to my_cb; my_arg can be retrieved as cb->arg.\n            * my_callback should return 1 if it wants BN_is_prime_ex()\n            * to continue, or 0 to stop.\n            */\n\n   *Geoff Thorpe*\n\n * Change the ZLIB compression method to be stateful, and make it\n   available to TLS with the number defined in\n   draft-ietf-tls-compression-04.txt.\n\n   *Richard Levitte*\n\n * Add the ASN.1 structures and functions for CertificatePair, which\n   is defined as follows (according to X.509_4thEditionDraftV6.pdf):\n\n           CertificatePair ::= SEQUENCE {\n              forward         [0]     Certificate OPTIONAL,\n              reverse         [1]     Certificate OPTIONAL,\n              -- at least one of the pair shall be present -- }\n\n   Also implement the PEM functions to read and write certificate\n   pairs, and defined the PEM tag as \"CERTIFICATE PAIR\".\n\n   This needed to be defined, mostly for the sake of the LDAP\n   attribute crossCertificatePair, but may prove useful elsewhere as\n   well.\n\n   *Richard Levitte*\n\n * Make it possible to inhibit symlinking of shared libraries in\n   Makefile.shared, for Cygwin's sake.\n\n   *Richard Levitte*\n\n * Extend the BIGNUM API by creating a function\n           void BN_set_negative(BIGNUM *a, int neg);\n   and a macro that behave like\n           int  BN_is_negative(const BIGNUM *a);\n\n   to avoid the need to access 'a->neg' directly in applications.\n\n   *Nils Larsch*\n\n * Implement fast modular reduction for pseudo-Mersenne primes\n   used in NIST curves (crypto/bn/bn_nist.c, crypto/ec/ecp_nist.c).\n   EC_GROUP_new_curve_GFp() will now automatically use this\n   if applicable.\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Add new lock type (CRYPTO_LOCK_BN).\n\n   *Bodo Moeller*\n\n * Change the ENGINE framework to automatically load engines\n   dynamically from specific directories unless they could be\n   found to already be built in or loaded.  Move all the\n   current engines except for the cryptodev one to a new\n   directory engines/.\n   The engines in engines/ are built as shared libraries if\n   the \"shared\" options was given to ./Configure or ./config.\n   Otherwise, they are inserted in libcrypto.a.\n   /usr/local/ssl/engines is the default directory for dynamic\n   engines, but that can be overridden at configure time through\n   the usual use of --prefix and/or --openssldir, and at run\n   time with the environment variable OPENSSL_ENGINES.\n\n   *Geoff Thorpe and Richard Levitte*\n\n * Add Makefile.shared, a helper makefile to build shared\n   libraries.  Adapt Makefile.org.\n\n   *Richard Levitte*\n\n * Add version info to Win32 DLLs.\n\n   *Peter 'Luna' Runestig\" <peter@runestig.com>*\n\n * Add new 'medium level' PKCS#12 API. Certificates and keys\n   can be added using this API to created arbitrary PKCS#12\n   files while avoiding the low-level API.\n\n   New options to PKCS12_create(), key or cert can be NULL and\n   will then be omitted from the output file. The encryption\n   algorithm NIDs can be set to -1 for no encryption, the mac\n   iteration count can be set to 0 to omit the mac.\n\n   Enhance pkcs12 utility by making the -nokeys and -nocerts\n   options work when creating a PKCS#12 file. New option -nomac\n   to omit the mac, NONE can be set for an encryption algorithm.\n   New code is modified to use the enhanced PKCS12_create()\n   instead of the low-level API.\n\n   *Steve Henson*\n\n * Extend ASN1 encoder to support indefinite length constructed\n   encoding. This can output sequences tags and octet strings in\n   this form. Modify pk7_asn1.c to support indefinite length\n   encoding. This is experimental and needs additional code to\n   be useful, such as an ASN1 bio and some enhanced streaming\n   PKCS#7 code.\n\n   Extend template encode functionality so that tagging is passed\n   down to the template encoder.\n\n   *Steve Henson*\n\n * Let 'openssl req' fail if an argument to '-newkey' is not\n   recognized instead of using RSA as a default.\n\n   *Bodo Moeller*\n\n * Add support for ECC-based ciphersuites from draft-ietf-tls-ecc-01.txt.\n   As these are not official, they are not included in \"ALL\";\n   the \"ECCdraft\" ciphersuite group alias can be used to select them.\n\n   *Vipul Gupta and Sumit Gupta (Sun Microsystems Laboratories)*\n\n * Add ECDH engine support.\n\n   *Nils Gura and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Add ECDH in new directory crypto/ecdh/.\n\n   *Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Let BN_rand_range() abort with an error after 100 iterations\n   without success (which indicates a broken PRNG).\n\n   *Bodo Moeller*\n\n * Change BN_mod_sqrt() so that it verifies that the input value\n   is really the square of the return value.  (Previously,\n   BN_mod_sqrt would show GIGO behaviour.)\n\n   *Bodo Moeller*\n\n * Add named elliptic curves over binary fields from X9.62, SECG,\n   and WAP/WTLS; add OIDs that were still missing.\n\n   *Sheueling Chang Shantz and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Extend the EC library for elliptic curves over binary fields\n   (new files ec2_smpl.c, ec2_smpt.c, ec2_mult.c in crypto/ec/).\n   New EC_METHOD:\n\n           EC_GF2m_simple_method\n\n   New API functions:\n\n           EC_GROUP_new_curve_GF2m\n           EC_GROUP_set_curve_GF2m\n           EC_GROUP_get_curve_GF2m\n           EC_POINT_set_affine_coordinates_GF2m\n           EC_POINT_get_affine_coordinates_GF2m\n           EC_POINT_set_compressed_coordinates_GF2m\n\n   Point compression for binary fields is disabled by default for\n   patent reasons (compile with OPENSSL_EC_BIN_PT_COMP defined to\n   enable it).\n\n   As binary polynomials are represented as BIGNUMs, various members\n   of the EC_GROUP and EC_POINT data structures can be shared\n   between the implementations for prime fields and binary fields;\n   the above `..._GF2m functions` (except for EX_GROUP_new_curve_GF2m)\n   are essentially identical to their `..._GFp` counterparts.\n   (For simplicity, the `..._GFp` prefix has been dropped from\n   various internal method names.)\n\n   An internal 'field_div' method (similar to 'field_mul' and\n   'field_sqr') has been added; this is used only for binary fields.\n\n   *Sheueling Chang Shantz and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Optionally dispatch EC_POINT_mul(), EC_POINT_precompute_mult()\n   through methods ('mul', 'precompute_mult').\n\n   The generic implementations (now internally called 'ec_wNAF_mul'\n   and 'ec_wNAF_precomputed_mult') remain the default if these\n   methods are undefined.\n\n   *Sheueling Chang Shantz and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * New function EC_GROUP_get_degree, which is defined through\n   EC_METHOD.  For curves over prime fields, this returns the bit\n   length of the modulus.\n\n   *Sheueling Chang Shantz and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * New functions EC_GROUP_dup, EC_POINT_dup.\n   (These simply call ..._new  and ..._copy).\n\n   *Sheueling Chang Shantz and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Add binary polynomial arithmetic software in crypto/bn/bn_gf2m.c.\n   Polynomials are represented as BIGNUMs (where the sign bit is not\n   used) in the following functions [macros]:\n\n           BN_GF2m_add\n           BN_GF2m_sub             [= BN_GF2m_add]\n           BN_GF2m_mod             [wrapper for BN_GF2m_mod_arr]\n           BN_GF2m_mod_mul         [wrapper for BN_GF2m_mod_mul_arr]\n           BN_GF2m_mod_sqr         [wrapper for BN_GF2m_mod_sqr_arr]\n           BN_GF2m_mod_inv\n           BN_GF2m_mod_exp         [wrapper for BN_GF2m_mod_exp_arr]\n           BN_GF2m_mod_sqrt        [wrapper for BN_GF2m_mod_sqrt_arr]\n           BN_GF2m_mod_solve_quad  [wrapper for BN_GF2m_mod_solve_quad_arr]\n           BN_GF2m_cmp             [= BN_ucmp]\n\n   (Note that only the 'mod' functions are actually for fields GF(2^m).\n   BN_GF2m_add() is misnomer, but this is for the sake of consistency.)\n\n   For some functions, an the irreducible polynomial defining a\n   field can be given as an 'unsigned int[]' with strictly\n   decreasing elements giving the indices of those bits that are set;\n   i.e., p[] represents the polynomial\n           f(t) = t^p[0] + t^p[1] + ... + t^p[k]\n   where\n           p[0] > p[1] > ... > p[k] = 0.\n   This applies to the following functions:\n\n           BN_GF2m_mod_arr\n           BN_GF2m_mod_mul_arr\n           BN_GF2m_mod_sqr_arr\n           BN_GF2m_mod_inv_arr        [wrapper for BN_GF2m_mod_inv]\n           BN_GF2m_mod_div_arr        [wrapper for BN_GF2m_mod_div]\n           BN_GF2m_mod_exp_arr\n           BN_GF2m_mod_sqrt_arr\n           BN_GF2m_mod_solve_quad_arr\n           BN_GF2m_poly2arr\n           BN_GF2m_arr2poly\n\n   Conversion can be performed by the following functions:\n\n           BN_GF2m_poly2arr\n           BN_GF2m_arr2poly\n\n   bntest.c has additional tests for binary polynomial arithmetic.\n\n   Two implementations for BN_GF2m_mod_div() are available.\n   The default algorithm simply uses BN_GF2m_mod_inv() and\n   BN_GF2m_mod_mul().  The alternative algorithm is compiled in only\n   if OPENSSL_SUN_GF2M_DIV is defined (patent pending; read the\n   copyright notice in crypto/bn/bn_gf2m.c before enabling it).\n\n   *Sheueling Chang Shantz and Douglas Stebila (Sun Microsystems Laboratories)*\n\n * Add new error code 'ERR_R_DISABLED' that can be used when some\n   functionality is disabled at compile-time.\n\n   *Douglas Stebila <douglas.stebila@sun.com>*\n\n * Change default behaviour of 'openssl asn1parse' so that more\n   information is visible when viewing, e.g., a certificate:\n\n   Modify asn1_parse2 (crypto/asn1/asn1_par.c) so that in non-'dump'\n   mode the content of non-printable OCTET STRINGs is output in a\n   style similar to INTEGERs, but with '[HEX DUMP]' prepended to\n   avoid the appearance of a printable string.\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Add 'asn1_flag' and 'asn1_form' member to EC_GROUP with access\n   functions\n           EC_GROUP_set_asn1_flag()\n           EC_GROUP_get_asn1_flag()\n           EC_GROUP_set_point_conversion_form()\n           EC_GROUP_get_point_conversion_form()\n   These control ASN1 encoding details:\n   - Curves (i.e., groups) are encoded explicitly unless asn1_flag\n     has been set to OPENSSL_EC_NAMED_CURVE.\n   - Points are encoded in uncompressed form by default; options for\n     asn1_for are as for point2oct, namely\n           POINT_CONVERSION_COMPRESSED\n           POINT_CONVERSION_UNCOMPRESSED\n           POINT_CONVERSION_HYBRID\n\n   Also add 'seed' and 'seed_len' members to EC_GROUP with access\n   functions\n           EC_GROUP_set_seed()\n           EC_GROUP_get0_seed()\n           EC_GROUP_get_seed_len()\n   This is used only for ASN1 purposes (so far).\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Add 'field_type' member to EC_METHOD, which holds the NID\n   of the appropriate field type OID.  The new function\n   EC_METHOD_get_field_type() returns this value.\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Add functions\n           EC_POINT_point2bn()\n           EC_POINT_bn2point()\n           EC_POINT_point2hex()\n           EC_POINT_hex2point()\n   providing useful interfaces to EC_POINT_point2oct() and\n   EC_POINT_oct2point().\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Change internals of the EC library so that the functions\n           EC_GROUP_set_generator()\n           EC_GROUP_get_generator()\n           EC_GROUP_get_order()\n           EC_GROUP_get_cofactor()\n   are implemented directly in crypto/ec/ec_lib.c and not dispatched\n   to methods, which would lead to unnecessary code duplication when\n   adding different types of curves.\n\n   *Nils Larsch <nla@trustcenter.de> with input by Bodo Moeller*\n\n * Implement compute_wNAF (crypto/ec/ec_mult.c) without BIGNUM\n   arithmetic, and such that modified wNAFs are generated\n   (which avoid length expansion in many cases).\n\n   *Bodo Moeller*\n\n * Add a function EC_GROUP_check_discriminant() (defined via\n   EC_METHOD) that verifies that the curve discriminant is non-zero.\n\n   Add a function EC_GROUP_check() that makes some sanity tests\n   on a EC_GROUP, its generator and order.  This includes\n   EC_GROUP_check_discriminant().\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Add ECDSA in new directory crypto/ecdsa/.\n\n   Add applications 'openssl ecparam' and 'openssl ecdsa'\n   (these are based on 'openssl dsaparam' and 'openssl dsa').\n\n   ECDSA support is also included in various other files across the\n   library.  Most notably,\n   - 'openssl req' now has a '-newkey ecdsa:file' option;\n   - EVP_PKCS82PKEY (crypto/evp/evp_pkey.c) now can handle ECDSA;\n   - X509_PUBKEY_get (crypto/asn1/x_pubkey.c) and\n     d2i_PublicKey (crypto/asn1/d2i_pu.c) have been modified to make\n     them suitable for ECDSA where domain parameters must be\n     extracted before the specific public key;\n   - ECDSA engine support has been added.\n\n   *Nils Larsch <nla@trustcenter.de>*\n\n * Include some named elliptic curves, and add OIDs from X9.62,\n   SECG, and WAP/WTLS.  Each curve can be obtained from the new\n   function\n           EC_GROUP_new_by_curve_name(),\n   and the list of available named curves can be obtained with\n           EC_get_builtin_curves().\n   Also add a 'curve_name' member to EC_GROUP objects, which can be\n   accessed via\n           EC_GROUP_set_curve_name()\n           EC_GROUP_get_curve_name()\n\n   *Nils Larsch <larsch@trustcenter.de, Bodo Moeller*\n\n * Remove a few calls to bn_wexpand() in BN_sqr() (the one in there\n   was actually never needed) and in BN_mul().  The removal in BN_mul()\n   required a small change in bn_mul_part_recursive() and the addition\n   of the functions bn_cmp_part_words(), bn_sub_part_words() and\n   bn_add_part_words(), which do the same thing as bn_cmp_words(),\n   bn_sub_words() and bn_add_words() except they take arrays with\n   differing sizes.\n\n   *Richard Levitte*\n\n### Changes between 0.9.7l and 0.9.7m  [23 Feb 2007]\n\n * Cleanse PEM buffers before freeing them since they may contain\n   sensitive data.\n\n   *Benjamin Bennett <ben@psc.edu>*\n\n * Include \"!eNULL\" in SSL_DEFAULT_CIPHER_LIST to make sure that\n   a ciphersuite string such as \"DEFAULT:RSA\" cannot enable\n   authentication-only ciphersuites.\n\n   *Bodo Moeller*\n\n * Since AES128 and AES256 share a single mask bit in the logic of\n   ssl/ssl_ciph.c, the code for masking out disabled ciphers needs a\n   kludge to work properly if AES128 is available and AES256 isn't.\n\n   *Victor Duchovni*\n\n * Expand security boundary to match 1.1.1 module.\n\n   *Steve Henson*\n\n * Remove redundant features: hash file source, editing of test vectors\n   modify fipsld to use external fips_premain.c signature.\n\n   *Steve Henson*\n\n * New perl script mkfipsscr.pl to create shell scripts or batch files to\n   run algorithm test programs.\n\n   *Steve Henson*\n\n * Make algorithm test programs more tolerant of whitespace.\n\n   *Steve Henson*\n\n * Have SSL/TLS server implementation tolerate \"mismatched\" record\n   protocol version while receiving ClientHello even if the\n   ClientHello is fragmented.  (The server can't insist on the\n   particular protocol version it has chosen before the ServerHello\n   message has informed the client about his choice.)\n\n   *Bodo Moeller*\n\n * Load error codes if they are not already present instead of using a\n   static variable. This allows them to be cleanly unloaded and reloaded.\n\n   *Steve Henson*\n\n### Changes between 0.9.7k and 0.9.7l  [28 Sep 2006]\n\n * Introduce limits to prevent malicious keys being able to\n   cause a denial of service.  ([CVE-2006-2940])\n\n   *Steve Henson, Bodo Moeller*\n\n * Fix ASN.1 parsing of certain invalid structures that can result\n   in a denial of service.  ([CVE-2006-2937])  [Steve Henson]\n\n * Fix buffer overflow in SSL_get_shared_ciphers() function.\n   ([CVE-2006-3738]) [Tavis Ormandy and Will Drewry, Google Security Team]\n\n * Fix SSL client code which could crash if connecting to a\n   malicious SSLv2 server.  ([CVE-2006-4343])\n\n   *Tavis Ormandy and Will Drewry, Google Security Team*\n\n * Change ciphersuite string processing so that an explicit\n   ciphersuite selects this one ciphersuite (so that \"AES256-SHA\"\n   will no longer include \"AES128-SHA\"), and any other similar\n   ciphersuite (same bitmap) from *other* protocol versions (so that\n   \"RC4-MD5\" will still include both the SSL 2.0 ciphersuite and the\n   SSL 3.0/TLS 1.0 ciphersuite).  This is a backport combining\n   changes from 0.9.8b and 0.9.8d.\n\n   *Bodo Moeller*\n\n### Changes between 0.9.7j and 0.9.7k  [05 Sep 2006]\n\n * Avoid PKCS #1 v1.5 signature attack discovered by Daniel Bleichenbacher\n   ([CVE-2006-4339])  [Ben Laurie and Google Security Team]\n\n * Change the Unix randomness entropy gathering to use poll() when\n   possible instead of select(), since the latter has some\n   undesirable limitations.\n\n   *Darryl Miles via Richard Levitte and Bodo Moeller*\n\n * Disable rogue ciphersuites:\n\n   - SSLv2 0x08 0x00 0x80 (\"RC4-64-MD5\")\n   - SSLv3/TLSv1 0x00 0x61 (\"EXP1024-RC2-CBC-MD5\")\n   - SSLv3/TLSv1 0x00 0x60 (\"EXP1024-RC4-MD5\")\n\n   The latter two were purportedly from\n   draft-ietf-tls-56-bit-ciphersuites-0[01].txt, but do not really\n   appear there.\n\n   Also deactivate the remaining ciphersuites from\n   draft-ietf-tls-56-bit-ciphersuites-01.txt.  These are just as\n   unofficial, and the ID has long expired.\n\n   *Bodo Moeller*\n\n * Fix RSA blinding Heisenbug (problems sometimes occurred on\n   dual-core machines) and other potential thread-safety issues.\n\n   *Bodo Moeller*\n\n### Changes between 0.9.7i and 0.9.7j  [04 May 2006]\n\n * Adapt fipsld and the build system to link against the validated FIPS\n   module in FIPS mode.\n\n   *Steve Henson*\n\n * Fixes for VC++ 2005 build under Windows.\n\n   *Steve Henson*\n\n * Add new Windows build target VC-32-GMAKE for VC++. This uses GNU make\n   from a Windows bash shell such as MSYS. It is autodetected from the\n   \"config\" script when run from a VC++ environment. Modify standard VC++\n   build to use fipscanister.o from the GNU make build.\n\n   *Steve Henson*\n\n### Changes between 0.9.7h and 0.9.7i  [14 Oct 2005]\n\n * Wrapped the definition of EVP_MAX_MD_SIZE in a #ifdef OPENSSL_FIPS.\n   The value now differs depending on if you build for FIPS or not.\n   BEWARE!  A program linked with a shared FIPSed libcrypto can't be\n   safely run with a non-FIPSed libcrypto, as it may crash because of\n   the difference induced by this change.\n\n   *Andy Polyakov*\n\n### Changes between 0.9.7g and 0.9.7h  [11 Oct 2005]\n\n * Remove the functionality of SSL_OP_MSIE_SSLV2_RSA_PADDING\n   (part of SSL_OP_ALL).  This option used to disable the\n   countermeasure against man-in-the-middle protocol-version\n   rollback in the SSL 2.0 server implementation, which is a bad\n   idea.  ([CVE-2005-2969])\n\n   *Bodo Moeller; problem pointed out by Yutaka Oiwa (Research Center\n   for Information Security, National Institute of Advanced Industrial\n   Science and Technology [AIST, Japan)]*\n\n * Minimal support for X9.31 signatures and PSS padding modes. This is\n   mainly for FIPS compliance and not fully integrated at this stage.\n\n   *Steve Henson*\n\n * For DSA signing, unless DSA_FLAG_NO_EXP_CONSTTIME is set, perform\n   the exponentiation using a fixed-length exponent.  (Otherwise,\n   the information leaked through timing could expose the secret key\n   after many signatures; cf. Bleichenbacher's attack on DSA with\n   biased k.)\n\n   *Bodo Moeller*\n\n * Make a new fixed-window mod_exp implementation the default for\n   RSA, DSA, and DH private-key operations so that the sequence of\n   squares and multiplies and the memory access pattern are\n   independent of the particular secret key.  This will mitigate\n   cache-timing and potential related attacks.\n\n   BN_mod_exp_mont_consttime() is the new exponentiation implementation,\n   and this is automatically used by BN_mod_exp_mont() if the new flag\n   BN_FLG_EXP_CONSTTIME is set for the exponent.  RSA, DSA, and DH\n   will use this BN flag for private exponents unless the flag\n   RSA_FLAG_NO_EXP_CONSTTIME, DSA_FLAG_NO_EXP_CONSTTIME, or\n   DH_FLAG_NO_EXP_CONSTTIME, respectively, is set.\n\n   *Matthew D Wood (Intel Corp), with some changes by Bodo Moeller*\n\n * Change the client implementation for SSLv23_method() and\n   SSLv23_client_method() so that is uses the SSL 3.0/TLS 1.0\n   Client Hello message format if the SSL_OP_NO_SSLv2 option is set.\n   (Previously, the SSL 2.0 backwards compatible Client Hello\n   message format would be used even with SSL_OP_NO_SSLv2.)\n\n   *Bodo Moeller*\n\n * Add support for smime-type MIME parameter in S/MIME messages which some\n   clients need.\n\n   *Steve Henson*\n\n * New function BN_MONT_CTX_set_locked() to set montgomery parameters in\n   a threadsafe manner. Modify rsa code to use new function and add calls\n   to dsa and dh code (which had race conditions before).\n\n   *Steve Henson*\n\n * Include the fixed error library code in the C error file definitions\n   instead of fixing them up at runtime. This keeps the error code\n   structures constant.\n\n   *Steve Henson*\n\n### Changes between 0.9.7f and 0.9.7g  [11 Apr 2005]\n\n[NB: OpenSSL 0.9.7h and later 0.9.7 patch levels were released after\nOpenSSL 0.9.8.]\n\n * Fixes for newer kerberos headers. NB: the casts are needed because\n   the 'length' field is signed on one version and unsigned on another\n   with no (?) obvious way to tell the difference, without these VC++\n   complains. Also the \"definition\" of FAR (blank) is no longer included\n   nor is the error ENOMEM. KRB5_PRIVATE has to be set to 1 to pick up\n   some needed definitions.\n\n   *Steve Henson*\n\n * Undo Cygwin change.\n\n   *Ulf Möller*\n\n * Added support for proxy certificates according to RFC 3820.\n   Because they may be a security thread to unaware applications,\n   they must be explicitly allowed in run-time.  See\n   docs/HOWTO/proxy_certificates.txt for further information.\n\n   *Richard Levitte*\n\n### Changes between 0.9.7e and 0.9.7f  [22 Mar 2005]\n\n * Use (SSL_RANDOM_VALUE - 4) bytes of pseudo random data when generating\n   server and client random values. Previously\n   (SSL_RANDOM_VALUE - sizeof(time_t)) would be used which would result in\n   less random data when sizeof(time_t) > 4 (some 64 bit platforms).\n\n   This change has negligible security impact because:\n\n   1. Server and client random values still have 24 bytes of pseudo random\n      data.\n\n   2. Server and client random values are sent in the clear in the initial\n      handshake.\n\n   3. The master secret is derived using the premaster secret (48 bytes in\n      size for static RSA ciphersuites) as well as client server and random\n      values.\n\n   The OpenSSL team would like to thank the UK NISCC for bringing this issue\n   to our attention.\n\n   *Stephen Henson, reported by UK NISCC*\n\n * Use Windows randomness collection on Cygwin.\n\n   *Ulf Möller*\n\n * Fix hang in EGD/PRNGD query when communication socket is closed\n   prematurely by EGD/PRNGD.\n\n   *Darren Tucker <dtucker@zip.com.au> via Lutz Jänicke, resolves #1014*\n\n * Prompt for pass phrases when appropriate for PKCS12 input format.\n\n   *Steve Henson*\n\n * Back-port of selected performance improvements from development\n   branch, as well as improved support for PowerPC platforms.\n\n   *Andy Polyakov*\n\n * Add lots of checks for memory allocation failure, error codes to indicate\n   failure and freeing up memory if a failure occurs.\n\n   *Nauticus Networks SSL Team <openssl@nauticusnet.com>, Steve Henson*\n\n * Add new -passin argument to dgst.\n\n   *Steve Henson*\n\n * Perform some character comparisons of different types in X509_NAME_cmp:\n   this is needed for some certificates that re-encode DNs into UTF8Strings\n   (in violation of RFC3280) and can't or won't issue name rollover\n   certificates.\n\n   *Steve Henson*\n\n * Make an explicit check during certificate validation to see that\n   the CA setting in each certificate on the chain is correct.  As a\n   side effect always do the following basic checks on extensions,\n   not just when there's an associated purpose to the check:\n\n   - if there is an unhandled critical extension (unless the user\n     has chosen to ignore this fault)\n   - if the path length has been exceeded (if one is set at all)\n   - that certain extensions fit the associated purpose (if one has\n     been given)\n\n   *Richard Levitte*\n\n### Changes between 0.9.7d and 0.9.7e  [25 Oct 2004]\n\n * Avoid a race condition when CRLs are checked in a multi threaded\n   environment. This would happen due to the reordering of the revoked\n   entries during signature checking and serial number lookup. Now the\n   encoding is cached and the serial number sort performed under a lock.\n   Add new STACK function sk_is_sorted().\n\n   *Steve Henson*\n\n * Add Delta CRL to the extension code.\n\n   *Steve Henson*\n\n * Various fixes to s3_pkt.c so alerts are sent properly.\n\n   *David Holmes <d.holmes@f5.com>*\n\n * Reduce the chances of duplicate issuer name and serial numbers (in\n   violation of RFC3280) using the OpenSSL certificate creation utilities.\n   This is done by creating a random 64 bit value for the initial serial\n   number when a serial number file is created or when a self signed\n   certificate is created using 'openssl req -x509'. The initial serial\n   number file is created using 'openssl x509 -next_serial' in CA.pl\n   rather than being initialized to 1.\n\n   *Steve Henson*\n\n### Changes between 0.9.7c and 0.9.7d  [17 Mar 2004]\n\n * Fix null-pointer assignment in do_change_cipher_spec() revealed\n   by using the Codenomicon TLS Test Tool ([CVE-2004-0079])\n\n   *Joe Orton, Steve Henson*\n\n * Fix flaw in SSL/TLS handshaking when using Kerberos ciphersuites\n   ([CVE-2004-0112])\n\n   *Joe Orton, Steve Henson*\n\n * Make it possible to have multiple active certificates with the same\n   subject in the CA index file.  This is done only if the keyword\n   'unique_subject' is set to 'no' in the main CA section (default\n   if 'CA_default') of the configuration file.  The value is saved\n   with the database itself in a separate index attribute file,\n   named like the index file with '.attr' appended to the name.\n\n   *Richard Levitte*\n\n * X509 verify fixes. Disable broken certificate workarounds when\n   X509_V_FLAGS_X509_STRICT is set. Check CRL issuer has cRLSign set if\n   keyUsage extension present. Don't accept CRLs with unhandled critical\n   extensions: since verify currently doesn't process CRL extensions this\n   rejects a CRL with *any* critical extensions. Add new verify error codes\n   for these cases.\n\n   *Steve Henson*\n\n * When creating an OCSP nonce use an OCTET STRING inside the extnValue.\n   A clarification of RFC2560 will require the use of OCTET STRINGs and\n   some implementations cannot handle the current raw format. Since OpenSSL\n   copies and compares OCSP nonces as opaque blobs without any attempt at\n   parsing them this should not create any compatibility issues.\n\n   *Steve Henson*\n\n * New md flag EVP_MD_CTX_FLAG_REUSE this allows md_data to be reused when\n   calling EVP_MD_CTX_copy_ex() to avoid calling OPENSSL_malloc(). Without\n   this HMAC (and other) operations are several times slower than OpenSSL\n   < 0.9.7.\n\n   *Steve Henson*\n\n * Print out GeneralizedTime and UTCTime in ASN1_STRING_print_ex().\n\n   *Peter Sylvester <Peter.Sylvester@EdelWeb.fr>*\n\n * Use the correct content when signing type \"other\".\n\n   *Steve Henson*\n\n### Changes between 0.9.7b and 0.9.7c  [30 Sep 2003]\n\n * Fix various bugs revealed by running the NISCC test suite:\n\n   Stop out of bounds reads in the ASN1 code when presented with\n   invalid tags (CVE-2003-0543 and CVE-2003-0544).\n\n   Free up ASN1_TYPE correctly if ANY type is invalid ([CVE-2003-0545]).\n\n   If verify callback ignores invalid public key errors don't try to check\n   certificate signature with the NULL public key.\n\n   *Steve Henson*\n\n * New -ignore_err option in ocsp application to stop the server\n   exiting on the first error in a request.\n\n   *Steve Henson*\n\n * In ssl3_accept() (ssl/s3_srvr.c) only accept a client certificate\n   if the server requested one: as stated in TLS 1.0 and SSL 3.0\n   specifications.\n\n   *Steve Henson*\n\n * In ssl3_get_client_hello() (ssl/s3_srvr.c), tolerate additional\n   extra data after the compression methods not only for TLS 1.0\n   but also for SSL 3.0 (as required by the specification).\n\n   *Bodo Moeller; problem pointed out by Matthias Loepfe*\n\n * Change X509_certificate_type() to mark the key as exported/exportable\n   when it's 512 *bits* long, not 512 bytes.\n\n   *Richard Levitte*\n\n * Change AES_cbc_encrypt() so it outputs exact multiple of\n   blocks during encryption.\n\n   *Richard Levitte*\n\n * Various fixes to base64 BIO and non blocking I/O. On write\n   flushes were not handled properly if the BIO retried. On read\n   data was not being buffered properly and had various logic bugs.\n   This also affects blocking I/O when the data being decoded is a\n   certain size.\n\n   *Steve Henson*\n\n * Various S/MIME bugfixes and compatibility changes:\n   output correct application/pkcs7 MIME type if\n   PKCS7_NOOLDMIMETYPE is set. Tolerate some broken signatures.\n   Output CR+LF for EOL if PKCS7_CRLFEOL is set (this makes opening\n   of files as .eml work). Correctly handle very long lines in MIME\n   parser.\n\n   *Steve Henson*\n\n### Changes between 0.9.7a and 0.9.7b  [10 Apr 2003]\n\n * Countermeasure against the Klima-Pokorny-Rosa extension of\n   Bleichbacher's attack on PKCS #1 v1.5 padding: treat\n   a protocol version number mismatch like a decryption error\n   in ssl3_get_client_key_exchange (ssl/s3_srvr.c).\n\n   *Bodo Moeller*\n\n * Turn on RSA blinding by default in the default implementation\n   to avoid a timing attack. Applications that don't want it can call\n   RSA_blinding_off() or use the new flag RSA_FLAG_NO_BLINDING.\n   They would be ill-advised to do so in most cases.\n\n   *Ben Laurie, Steve Henson, Geoff Thorpe, Bodo Moeller*\n\n * Change RSA blinding code so that it works when the PRNG is not\n   seeded (in this case, the secret RSA exponent is abused as\n   an unpredictable seed -- if it is not unpredictable, there\n   is no point in blinding anyway).  Make RSA blinding thread-safe\n   by remembering the creator's thread ID in rsa->blinding and\n   having all other threads use local one-time blinding factors\n   (this requires more computation than sharing rsa->blinding, but\n   avoids excessive locking; and if an RSA object is not shared\n   between threads, blinding will still be very fast).\n\n   *Bodo Moeller*\n\n * Fixed a typo bug that would cause ENGINE_set_default() to set an\n   ENGINE as defaults for all supported algorithms irrespective of\n   the 'flags' parameter. 'flags' is now honoured, so applications\n   should make sure they are passing it correctly.\n\n   *Geoff Thorpe*\n\n * Target \"mingw\" now allows native Windows code to be generated in\n   the Cygwin environment as well as with the MinGW compiler.\n\n   *Ulf Moeller*\n\n### Changes between 0.9.7 and 0.9.7a  [19 Feb 2003]\n\n * In ssl3_get_record (ssl/s3_pkt.c), minimize information leaked\n   via timing by performing a MAC computation even if incorrect\n   block cipher padding has been found.  This is a countermeasure\n   against active attacks where the attacker has to distinguish\n   between bad padding and a MAC verification error. ([CVE-2003-0078])\n\n   *Bodo Moeller; problem pointed out by Brice Canvel (EPFL),\n   Alain Hiltgen (UBS), Serge Vaudenay (EPFL), and\n   Martin Vuagnoux (EPFL, Ilion)*\n\n * Make the no-err option work as intended.  The intention with no-err\n   is not to have the whole error stack handling routines removed from\n   libcrypto, it's only intended to remove all the function name and\n   reason texts, thereby removing some of the footprint that may not\n   be interesting if those errors aren't displayed anyway.\n\n   NOTE: it's still possible for any application or module to have its\n   own set of error texts inserted.  The routines are there, just not\n   used by default when no-err is given.\n\n   *Richard Levitte*\n\n * Add support for FreeBSD on IA64.\n\n   *dirk.meyer@dinoex.sub.org via Richard Levitte, resolves #454*\n\n * Adjust DES_cbc_cksum() so it returns the same value as the MIT\n   Kerberos function mit_des_cbc_cksum().  Before this change,\n   the value returned by DES_cbc_cksum() was like the one from\n   mit_des_cbc_cksum(), except the bytes were swapped.\n\n   *Kevin Greaney <Kevin.Greaney@hp.com> and Richard Levitte*\n\n * Allow an application to disable the automatic SSL chain building.\n   Before this a rather primitive chain build was always performed in\n   ssl3_output_cert_chain(): an application had no way to send the\n   correct chain if the automatic operation produced an incorrect result.\n\n   Now the chain builder is disabled if either:\n\n   1. Extra certificates are added via SSL_CTX_add_extra_chain_cert().\n\n   2. The mode flag SSL_MODE_NO_AUTO_CHAIN is set.\n\n   The reasoning behind this is that an application would not want the\n   auto chain building to take place if extra chain certificates are\n   present and it might also want a means of sending no additional\n   certificates (for example the chain has two certificates and the\n   root is omitted).\n\n   *Steve Henson*\n\n * Add the possibility to build without the ENGINE framework.\n\n   *Steven Reddie <smr@essemer.com.au> via Richard Levitte*\n\n * Under Win32 gmtime() can return NULL: check return value in\n   OPENSSL_gmtime(). Add error code for case where gmtime() fails.\n\n   *Steve Henson*\n\n * DSA routines: under certain error conditions uninitialized BN objects\n   could be freed. Solution: make sure initialization is performed early\n   enough. (Reported and fix supplied by Ivan D Nestlerode <nestler@MIT.EDU>,\n   Nils Larsch <nla@trustcenter.de> via PR#459)\n\n   *Lutz Jaenicke*\n\n * Another fix for SSLv2 session ID handling: the session ID was incorrectly\n   checked on reconnect on the client side, therefore session resumption\n   could still fail with a \"ssl session id is different\" error. This\n   behaviour is masked when SSL_OP_ALL is used due to\n   SSL_OP_MICROSOFT_SESS_ID_BUG being set.\n   Behaviour observed by Crispin Flowerday <crispin@flowerday.cx> as\n   followup to PR #377.\n\n   *Lutz Jaenicke*\n\n * IA-32 assembler support enhancements: unified ELF targets, support\n   for SCO/Caldera platforms, fix for Cygwin shared build.\n\n   *Andy Polyakov*\n\n * Add support for FreeBSD on sparc64.  As a consequence, support for\n   FreeBSD on non-x86 processors is separate from x86 processors on\n   the config script, much like the NetBSD support.\n\n   *Richard Levitte & Kris Kennaway <kris@obsecurity.org>*\n\n### Changes between 0.9.6h and 0.9.7  [31 Dec 2002]\n\n[NB: OpenSSL 0.9.6i and later 0.9.6 patch levels were released after\nOpenSSL 0.9.7.]\n\n * Fix session ID handling in SSLv2 client code: the SERVER FINISHED\n   code (06) was taken as the first octet of the session ID and the last\n   octet was ignored consequently. As a result SSLv2 client side session\n   caching could not have worked due to the session ID mismatch between\n   client and server.\n   Behaviour observed by Crispin Flowerday <crispin@flowerday.cx> as\n   PR #377.\n\n   *Lutz Jaenicke*\n\n * Change the declaration of needed Kerberos libraries to use EX_LIBS\n   instead of the special (and badly supported) LIBKRB5.  LIBKRB5 is\n   removed entirely.\n\n   *Richard Levitte*\n\n * The hw_ncipher.c engine requires dynamic locks.  Unfortunately, it\n   seems that in spite of exi"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.1650390625,
          "content": "Code of Conduct\n===============\n\nThe OpenSSL [Code of Conduct] is published on the project's website.\n\n[Code of Conduct]: https://www.openssl.org/community/conduct.html\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.513671875,
          "content": "HOW TO CONTRIBUTE TO OpenSSL\n============================\n\nPlease visit our [Getting Started] page for other ideas about how to contribute.\n\n  [Getting Started]: <https://openssl-library.org/community/getting-started>\n\nDevelopment is done on GitHub in the [openssl/openssl] repository.\n\n  [openssl/openssl]: <https://github.com/openssl/openssl>\n\nTo request a new feature, ask a question, or report a bug,\nplease open an [issue on GitHub](https://github.com/openssl/openssl/issues).\n\nTo submit a patch or implement a new feature, please open a\n[pull request on GitHub](https://github.com/openssl/openssl/pulls).\nIf you are thinking of making a large contribution,\nopen an issue for it before starting work, to get comments from the community.\nSomeone may be already working on the same thing,\nor there may be special reasons why a feature is not implemented.\n\nTo make it easier to review and accept your pull request, please follow these\nguidelines:\n\n 1. Anything other than a trivial contribution requires a [Contributor\n    License Agreement] (CLA), giving us permission to use your code.\n    If your contribution is too small to require a CLA (e.g., fixing a spelling\n    mistake), then place the text \"`CLA: trivial`\" on a line by itself below\n    the rest of your commit message separated by an empty line, like this:\n\n    ```\n        One-line summary of trivial change\n\n        Optional main body of commit message. It might contain a sentence\n        or two explaining the trivial change.\n\n        CLA: trivial\n    ```\n\n    It is not sufficient to only place the text \"`CLA: trivial`\" in the GitHub\n    pull request description.\n\n    [Contributor License Agreement]: <https://www.openssl.org/policies/cla.html>\n\n    To amend a missing \"`CLA: trivial`\" line after submission, do the following:\n\n    ```\n        git commit --amend\n        # add the line, save and quit the editor\n        git push -f [<repository> [<branch>]]\n    ```\n\n 2. All source files should start with the following text (with\n    appropriate comment characters at the start of each line and the\n    year(s) updated):\n\n    ```\n        Copyright 20xx-20yy The OpenSSL Project Authors. All Rights Reserved.\n\n        Licensed under the Apache License 2.0 (the \"License\").  You may not use\n        this file except in compliance with the License.  You can obtain a copy\n        in the file LICENSE in the source distribution or at\n        https://www.openssl.org/source/license.html\n    ```\n\n 3. Patches should be as current as possible; expect to have to rebase\n    often. We do not accept merge commits, you will have to remove them\n    (usually by rebasing) before it will be acceptable.\n\n 4. Code provided should follow our [coding style] and [documentation policy]\n    and compile without warnings.\n    There is a [Perl tool](util/check-format.pl) that helps\n    finding code formatting mistakes and other coding style nits.\n    Where `gcc` or `clang` is available, you should use the\n    `--strict-warnings` `Configure` option.  OpenSSL compiles on many varied\n    platforms: try to ensure you only use portable features.\n    Clean builds via GitHub Actions are required. They are started automatically\n    whenever a PR is created or updated by committers.\n\n    [coding style]: https://openssl-library.org/policies/technical/coding-style/\n    [documentation policy]: https://openssl-library.org/policies/technical/documentation-policy/\n\n 5. When at all possible, code contributions should include tests. These can\n    either be added to an existing test, or completely new.  Please see\n    [test/README.md](test/README.md) for information on the test framework.\n\n 6. New features or changed functionality must include\n    documentation. Please look at the `.pod` files in `doc/man[1357]` for\n    examples of our style. Run `make doc-nits` to make sure that your\n    documentation changes are clean.\n\n 7. For user visible changes (API changes, behaviour changes, ...),\n    consider adding a note in [CHANGES.md](CHANGES.md).\n    This could be a summarising description of the change, and could\n    explain the grander details.\n    Have a look through existing entries for inspiration.\n    Please note that this is NOT simply a copy of git-log one-liners.\n    Also note that security fixes get an entry in [CHANGES.md](CHANGES.md).\n    This file helps users get more in-depth information of what comes\n    with a specific release without having to sift through the higher\n    noise ratio in git-log.\n\n 8. Guidelines on how to integrate error output of new crypto library modules\n    can be found in [crypto/err/README.md](crypto/err/README.md).\n"
        },
        {
          "name": "Configurations",
          "type": "tree",
          "content": null
        },
        {
          "name": "Configure",
          "type": "blob",
          "size": 138.2705078125,
          "content": "#! /usr/bin/env perl\n# -*- mode: perl; -*-\n# Copyright 2016-2024 The OpenSSL Project Authors. All Rights Reserved.\n#\n# Licensed under the Apache License 2.0 (the \"License\").  You may not use\n# this file except in compliance with the License.  You can obtain a copy\n# in the file LICENSE in the source distribution or at\n# https://www.openssl.org/source/license.html\n\n##  Configure -- OpenSSL source tree configuration script\n\nuse 5.10.0;\nuse strict;\nuse Config;\nuse FindBin;\nuse lib \"$FindBin::Bin/util/perl\";\nuse File::Basename;\nuse File::Spec::Functions qw/:DEFAULT abs2rel rel2abs splitdir/;\nuse File::Path qw/mkpath/;\nuse OpenSSL::fallback \"$FindBin::Bin/external/perl/MODULES.txt\";\nuse OpenSSL::Glob;\nuse OpenSSL::Template;\nuse OpenSSL::config;\n\n# see INSTALL.md for instructions.\n\nmy $orig_death_handler = $SIG{__DIE__};\n$SIG{__DIE__} = \\&death_handler;\n\nmy $usage=\"Usage: Configure [no-<feature> ...] [enable-<feature> ...] [-Dxxx] [-lxxx] [-Lxxx] [-fxxx] [-Kxxx] [no-hw-xxx|no-hw] [[no-]threads] [[no-]thread-pool] [[no-]default-thread-pool] [[no-]shared] [[no-]zlib|zlib-dynamic] [no-asm] [no-egd] [sctp] [386] [--prefix=DIR] [--openssldir=OPENSSLDIR] [--with-xxx[=vvv]] [--config=FILE] os/compiler[:flags]\\n\";\n\nmy $banner = <<\"EOF\";\n\n**********************************************************************\n***                                                                ***\n***   OpenSSL has been successfully configured                     ***\n***                                                                ***\n***   If you encounter a problem while building, please open an    ***\n***   issue on GitHub <https://github.com/openssl/openssl/issues>  ***\n***   and include the output from the following command:           ***\n***                                                                ***\n***       perl configdata.pm --dump                                ***\n***                                                                ***\n***   (If you are new to OpenSSL, you might want to consult the    ***\n***   'Troubleshooting' section in the INSTALL.md file first)      ***\n***                                                                ***\n**********************************************************************\nEOF\n\n# Options:\n#\n# --config      add the given configuration file, which will be read after\n#               any \"Configurations*\" files that are found in the same\n#               directory as this script.\n# --prefix      prefix for the OpenSSL installation, which includes the\n#               directories bin, lib, include, share/man, share/doc/openssl\n#               This becomes the value of INSTALLTOP in Makefile\n#               (Default: /usr/local)\n# --openssldir  OpenSSL data area, such as openssl.cnf, certificates and keys.\n#               If it's a relative directory, it will be added on the directory\n#               given with --prefix.\n#               This becomes the value of OPENSSLDIR in Makefile and in C.\n#               (Default: PREFIX/ssl)\n# --banner=\"..\" Output specified text instead of default completion banner\n#\n# -w            Don't wait after showing a Configure warning\n#\n# --cross-compile-prefix Add specified prefix to binutils components.\n#\n# --api         One of 0.9.8, 1.0.0, 1.0.1, 1.0.2, 1.1.0, 1.1.1, or 3.0\n#               Define the public APIs as they were for that version\n#               including patch releases.  If 'no-deprecated' is also\n#               given, do not compile support for interfaces deprecated\n#               up to and including the specified OpenSSL version.\n#\n# no-hw-xxx     do not compile support for specific crypto hardware.\n#               Generic OpenSSL-style methods relating to this support\n#               are always compiled but return NULL if the hardware\n#               support isn't compiled.\n#\n# enable-demos  Enable the building of the example code in the demos directory\n# enable-h3demo Enable the http3 demo, which currently only links to the\n#               external nghttp3 library on unix platforms\n# no-hw         do not compile support for any crypto hardware.\n# [no-]threads  [don't] try to create a library that is suitable for\n#               multithreaded applications (default is \"threads\" if we\n#               know how to do it)\n# [no-]thread-pool\n#               [don't] allow thread pool functionality\n# [no-]default-thread-pool\n#               [don't] allow default thread pool functionality\n# [no-]shared   [don't] try to create shared libraries when supported.\n# [no-]pic      [don't] try to build position independent code when supported.\n#               If disabled, it also disables shared and dynamic-engine.\n# no-asm        do not use assembler\n# no-egd        do not compile support for the entropy-gathering daemon APIs\n# [no-]zlib     [don't] compile support for zlib compression.\n# zlib-dynamic  Like \"zlib\", but the zlib library is expected to be a shared\n#               library and will be loaded at run-time by the OpenSSL library.\n# sctp          include SCTP support\n# no-quic       disable QUIC support\n# no-uplink     Don't build support for UPLINK interface.\n# enable-weak-ssl-ciphers\n#               Enable weak ciphers that are disabled by default.\n# 386           generate 80386 code in assembly modules\n# no-sse2       disables IA-32 SSE2 code in assembly modules, the above\n#               mentioned '386' option implies this one\n# no-<cipher>   build without specified algorithm (dsa, idea, rc5, ...)\n# -<xxx> +<xxx> All options which are unknown to the 'Configure' script are\n# /<xxx>        passed through to the compiler. Unix-style options beginning\n#               with a '-' or '+' are recognized, as well as Windows-style\n#               options beginning with a '/'. If the option contains arguments\n#               separated by spaces, then the URL-style notation %20 can be\n#               used for the space character in order to avoid having to quote\n#               the option. For example, -opt%20arg gets expanded to -opt arg.\n#               In fact, any ASCII character can be encoded as %xx using its\n#               hexadecimal encoding.\n# -static       while -static is also a pass-through compiler option (and\n#               as such is limited to environments where it's actually\n#               meaningful), it triggers a number configuration options,\n#               namely no-pic, no-shared and no-threads. It is\n#               argued that the only reason to produce statically linked\n#               binaries (and in context it means executables linked with\n#               -static flag, and not just executables linked with static\n#               libcrypto.a) is to eliminate dependency on specific run-time,\n#               a.k.a. libc version. The mentioned config options are meant\n#               to achieve just that. Unfortunately on Linux it's impossible\n#               to eliminate the dependency completely for openssl executable\n#               because of getaddrinfo and gethostbyname calls, which can\n#               invoke dynamically loadable library facility anyway to meet\n#               the lookup requests. For this reason on Linux statically\n#               linked openssl executable has rather debugging value than\n#               production quality.\n#\n# BN_LLONG      use the type 'long long' in crypto/bn/bn.h\n# RC4_CHAR      use 'char' instead of 'int' for RC4_INT in crypto/rc4/rc4.h\n# Following are set automatically by this script\n#\n# MD5_ASM       use some extra md5 assembler,\n# SHA1_ASM      use some extra sha1 assembler, must define L_ENDIAN for x86\n# RMD160_ASM    use some extra ripemd160 assembler,\n# SHA256_ASM    sha256_block is implemented in assembler\n# SHA512_ASM    sha512_block is implemented in assembler\n# AES_ASM       AES_[en|de]crypt is implemented in assembler\n\n# Minimum warning options... any contributions to OpenSSL should at least\n# get past these.  Note that we only use these with C compilers, not with\n# C++ compilers.\n\n# -DPEDANTIC complements -pedantic and is meant to mask code that\n# is not strictly standard-compliant and/or implementation-specific,\n# e.g. inline assembly, disregards to alignment requirements, such\n# that -pedantic would complain about. Incidentally -DPEDANTIC has\n# to be used even in sanitized builds, because sanitizer too is\n# supposed to and does take notice of non-standard behaviour. Then\n# -pedantic with pre-C9x compiler would also complain about 'long\n# long' not being supported. As 64-bit algorithms are common now,\n# it grew impossible to resolve this without sizeable additional\n# code, so we just tell compiler to be pedantic about everything\n# but 'long long' type.\n\nmy @gcc_devteam_warn = qw(\n    -DPEDANTIC -pedantic -Wno-long-long -DUNUSEDRESULT_DEBUG\n    -Wall\n    -Wmissing-declarations\n    -Wextra\n    -Wno-unused-parameter\n    -Wno-missing-field-initializers\n    -Wswitch\n    -Wsign-compare\n    -Wshadow\n    -Wformat\n    -Wno-type-limits\n    -Wundef\n    -Werror\n    -Wmissing-prototypes\n    -Wstrict-prototypes\n);\n\n# These are used in addition to $gcc_devteam_warn when the compiler is clang.\n# TODO(openssl-team): fix problems and investigate if (at least) the\n# following warnings can also be enabled:\n#       -Wcast-align\n#       -Wunreachable-code -- no, too ugly/compiler-specific\n#       -Wlanguage-extension-token -- no, we use asm()\n#       -Wunused-macros -- no, too tricky for BN and _XOPEN_SOURCE etc\n#       -Wextended-offsetof -- no, needed in CMS ASN1 code\nmy @clang_devteam_warn = qw(\n    -Wno-unknown-warning-option\n    -Wno-parentheses-equality\n    -Wno-language-extension-token\n    -Wno-extended-offsetof\n    -Wno-missing-braces\n    -Wno-tautological-constant-out-of-range-compare\n    -Wconditional-uninitialized\n    -Wincompatible-pointer-types-discards-qualifiers\n    -Wmissing-variable-declarations\n);\n\nmy @cl_devteam_warn = qw(\n    /WX\n);\n\nmy $strict_warnings = 0;\n\n# As for $BSDthreads. Idea is to maintain \"collective\" set of flags,\n# which would cover all BSD flavors. -pthread applies to them all,\n# but is treated differently. OpenBSD expands is as -D_POSIX_THREAD\n# -lc_r, which is sufficient. FreeBSD 4.x expands it as -lc_r,\n# which has to be accompanied by explicit -D_THREAD_SAFE and\n# sometimes -D_REENTRANT. FreeBSD 5.x expands it as -lc_r, which\n# seems to be sufficient?\nour $BSDthreads=\"-pthread -D_THREAD_SAFE -D_REENTRANT\";\n\n#\n# API compatibility name to version number mapping.\n#\nmy $apitable = {\n    # This table expresses when API additions or changes can occur.\n    # The numbering used changes from 3.0 and on because we updated\n    # (solidified) our version numbering scheme at that point.\n\n    # From 3.0 and on, we internalise the given version number in decimal\n    # as MAJOR * 10000 + MINOR * 100 + 0\n    \"3.0.0\" => 30000,\n    \"3.0\"   => 30000,\n\n    # Note that before 3.0, we didn't have the same version number scheme.\n    # Still, the numbering we use here covers what we need.\n    \"1.1.1\" => 10101,\n    \"1.1.0\" => 10100,\n    \"1.0.2\" => 10002,\n    \"1.0.1\" => 10001,\n    \"1.0.0\" => 10000,\n    \"0.9.8\" =>   908,\n};\n\n# For OpenSSL::config::get_platform\nmy %guess_opts = ();\n\nmy $dryrun = 0;\n\nour %table = ();\nour %config = ();\nour %withargs = ();\nour $now_printing;      # set to current entry's name in print_table_entry\n                        # (todo: right thing would be to encapsulate name\n                        # into %target [class] and make print_table_entry\n                        # a method)\n\n# Forward declarations ###############################################\n\n# read_config(filename)\n#\n# Reads a configuration file and populates %table with the contents\n# (which the configuration file places in %targets).\nsub read_config;\n\n# resolve_config(target)\n#\n# Resolves all the late evaluations, inheritances and so on for the\n# chosen target and any target it inherits from.\nsub resolve_config;\n\n\n# Information collection #############################################\n\n# Unified build supports separate build dir\nmy $srcdir = catdir(absolutedir(dirname($0))); # catdir ensures local syntax\nmy $blddir = catdir(absolutedir(\".\"));         # catdir ensures local syntax\n\n# File::Spec::Unix doesn't detect case insensitivity, so we make sure to\n# check if the source and build directory are really the same, and make\n# them so.  This avoids all kinds of confusion later on.\n# We must check @File::Spec::ISA rather than using File::Spec->isa() to\n# know if File::Spec ended up loading File::Spec::Unix.\n$srcdir = $blddir\n    if (grep(/::Unix$/, @File::Spec::ISA)\n        && samedir($srcdir, $blddir));\n\nmy $dofile = abs2rel(catfile($srcdir, \"util/dofile.pl\"));\n\nmy $local_config_envname = 'OPENSSL_LOCAL_CONFIG_DIR';\n\n$config{sourcedir} = abs2rel($srcdir, $blddir);\n$config{builddir} = abs2rel($blddir, $blddir);\n# echo -n 'holy hand grenade of antioch' | openssl sha256\n$config{FIPSKEY} =\n    'f4556650ac31d35461610bac4ed81b1a181b2d8a43ea2854cbae22ca74560813';\n\n# Collect reconfiguration information if needed\nmy @argvcopy=@ARGV;\n\nif (grep /^reconf(igure)?$/, @argvcopy) {\n    die \"reconfiguring with other arguments present isn't supported\"\n        if scalar @argvcopy > 1;\n    if (-f \"./configdata.pm\") {\n        my $file = \"./configdata.pm\";\n        unless (my $return = do $file) {\n            die \"couldn't parse $file: $@\" if $@;\n            die \"couldn't do $file: $!\"    unless defined $return;\n            die \"couldn't run $file\"       unless $return;\n        }\n\n        @argvcopy = defined($configdata::config{perlargv}) ?\n            @{$configdata::config{perlargv}} : ();\n        die \"Incorrect data to reconfigure, please do a normal configuration\\n\"\n            if (grep(/^reconf/,@argvcopy));\n        $config{perlenv} = $configdata::config{perlenv} // {};\n    } else {\n        die \"Insufficient data to reconfigure, please do a normal configuration\\n\";\n    }\n}\n\n$config{perlargv} = [ @argvcopy ];\n\n# Historical: if known directories in crypto/ have been removed, it means\n# that those sub-systems are disabled.\n# (the other option would be to removed them from the SUBDIRS statement in\n# crypto/build.info)\n# We reverse the input list for cosmetic purely reasons, to compensate that\n# 'unshift' adds at the front of the list (i.e. in reverse input order).\nforeach ( reverse sort( 'aes', 'aria', 'bf', 'camellia', 'cast', 'des', 'dh',\n                        'dsa', 'ec', 'hmac', 'idea', 'md2', 'md5', 'mdc2',\n                        'rc2', 'rc4', 'rc5', 'ripemd', 'seed', 'sha',\n                        'sm2', 'sm3', 'sm4') ) {\n    unshift @argvcopy, \"no-$_\" if ! -d catdir($srcdir, 'crypto', $_);\n}\n\n# Collect version numbers\nmy %version = ();\n\ncollect_information(\n    collect_from_file(catfile($srcdir,'VERSION.dat')),\n    qr/\\s*(\\w+)\\s*=\\s*(.*?)\\s*$/ =>\n        sub {\n            # Only define it if there is a value at all\n            if ($2 ne '') {\n                my $k = $1;\n                my $v = $2;\n                # Some values are quoted.  Trim the quotes\n                $v = $1 if $v =~ /^\"(.*)\"$/;\n                $version{uc $k} = $v;\n            }\n        },\n    \"OTHERWISE\" =>\n        sub { die \"Something wrong with this line:\\n$_\\nin $srcdir/VERSION.dat\" },\n    );\n\n$config{major} = $version{MAJOR} // 'unknown';\n$config{minor} = $version{MINOR} // 'unknown';\n$config{patch} = $version{PATCH} // 'unknown';\n$config{prerelease} =\n    defined $version{PRE_RELEASE_TAG} ? \"-$version{PRE_RELEASE_TAG}\" : '';\n$config{build_metadata} =\n    defined $version{BUILD_METADATA} ? \"+$version{BUILD_METADATA}\" : '';\n$config{shlib_version} = $version{SHLIB_VERSION} // 'unknown';\n$config{release_date} = $version{RELEASE_DATE} // 'xx XXX xxxx';\n\n$config{version} = \"$config{major}.$config{minor}.$config{patch}\";\n$config{full_version} = \"$config{version}$config{prerelease}$config{build_metadata}\";\n\ndie \"erroneous version information in VERSION.dat: \",\n    \"$config{version}, $config{shlib_version}\\n\"\n    unless (defined $version{MAJOR}\n            && defined $version{MINOR}\n            && defined $version{PATCH}\n            && defined $version{SHLIB_VERSION});\n\n# Collect target configurations\n\nmy $pattern = catfile(dirname($0), \"Configurations\", \"*.conf\");\nforeach (sort glob($pattern)) {\n    &read_config($_);\n}\n\nif (defined env($local_config_envname)) {\n    if ($^O eq 'VMS') {\n        # VMS environment variables are logical names,\n        # which can be used as is\n        $pattern = $local_config_envname . ':' . '*.conf';\n    } else {\n        $pattern = catfile(env($local_config_envname), '*.conf');\n    }\n\n    foreach (sort glob($pattern)) {\n        &read_config($_);\n    }\n}\n\n# Fail if no configuration is apparent\nif (!%table) {\n    print \"Failed to find any os/compiler configurations. Please make sure the Configurations directory is included.\\n\";\n    &usage;\n}\n\n# Save away perl command information\n$config{perl_cmd} = $^X;\n$config{perl_version} = $Config{version};\n$config{perl_archname} = $Config{archname};\n\n$config{prefix}=\"\";\n$config{openssldir}=\"\";\n$config{processor}=\"\";\n$config{libdir}=\"\";\nmy $auto_threads=1;    # enable threads automatically? true by default\nmy $default_ranlib;\n\n# Known TLS and DTLS protocols\nmy @tls = qw(ssl3 tls1 tls1_1 tls1_2 tls1_3);\nmy @dtls = qw(dtls1 dtls1_2);\n\n# Explicitly known options that are possible to disable.  They can\n# be regexps, and will be used like this: /^no-${option}$/\n# For developers: keep it sorted alphabetically\n\nmy @disablables = (\n    \"acvp-tests\",\n    \"afalgeng\",\n    \"apps\",\n    \"argon2\",\n    \"aria\",\n    \"asan\",\n    \"asm\",\n    \"async\",\n    \"atexit\",\n    \"autoalginit\",\n    \"autoerrinit\",\n    \"autoload-config\",\n    \"bf\",\n    \"blake2\",\n    \"brotli\",\n    \"brotli-dynamic\",\n    \"buildtest-c++\",\n    \"bulk\",\n    \"cached-fetch\",\n    \"camellia\",\n    \"capieng\",\n    \"winstore\",\n    \"cast\",\n    \"chacha\",\n    \"cmac\",\n    \"cmp\",\n    \"cms\",\n    \"comp\",\n    \"crypto-mdebug\",\n    \"ct\",\n    \"default-thread-pool\",\n    \"demos\",\n    \"h3demo\",\n    \"deprecated\",\n    \"des\",\n    \"devcryptoeng\",\n    \"dgram\",\n    \"dh\",\n    \"docs\",\n    \"dsa\",\n    \"dso\",\n    \"dtls\",\n    \"dynamic-engine\",\n    \"ec\",\n    \"ec2m\",\n    \"ec_nistp_64_gcc_128\",\n    \"ecdh\",\n    \"ecdsa\",\n    \"ecx\",\n    \"egd\",\n    \"engine\",\n    \"err\",\n    \"external-tests\",\n    \"filenames\",\n    \"fips\",\n    \"fips-securitychecks\",\n    \"fips-post\",\n    \"fips-jitter\",\n    \"fuzz-afl\",\n    \"fuzz-libfuzzer\",\n    \"gost\",\n    \"http\",\n    \"idea\",\n    \"jitter\",\n    \"ktls\",\n    \"legacy\",\n    \"loadereng\",\n    \"makedepend\",\n    \"md2\",\n    \"md4\",\n    \"mdc2\",\n    \"module\",\n    \"msan\",\n    \"multiblock\",\n    \"nextprotoneg\",\n    \"ocb\",\n    \"ocsp\",\n    \"padlockeng\",\n    \"pic\",\n    \"pie\",\n    \"pinshared\",\n    \"poly1305\",\n    \"posix-io\",\n    \"psk\",\n    \"quic\",\n    \"unstable-qlog\",\n    \"rc2\",\n    \"rc4\",\n    \"rc5\",\n    \"rdrand\",\n    \"rfc3779\",\n    \"rmd160\",\n    \"scrypt\",\n    \"sctp\",\n    \"secure-memory\",\n    \"seed\",\n    \"shared\",\n    \"siphash\",\n    \"siv\",\n    \"sm2\",\n    \"sm2-precomp\",\n    \"sm3\",\n    \"sm4\",\n    \"sock\",\n    \"srp\",\n    \"srtp\",\n    \"sse2\",\n    \"ssl\",\n    \"ssl-trace\",\n    \"static-engine\",\n    \"stdio\",\n    \"sslkeylog\",\n    \"tests\",\n    \"tfo\",\n    \"thread-pool\",\n    \"threads\",\n    \"tls\",\n    \"integrity-only-ciphers\",\n    \"trace\",\n    \"ts\",\n    \"ubsan\",\n    \"ui-console\",\n    \"unit-test\",\n    \"uplink\",\n    \"weak-ssl-ciphers\",\n    \"whirlpool\",\n    \"zlib\",\n    \"zlib-dynamic\",\n    \"zstd\",\n    \"zstd-dynamic\",\n    );\nforeach my $proto ((@tls, @dtls))\n        {\n        push(@disablables, $proto);\n        push(@disablables, \"$proto-method\") unless $proto eq \"tls1_3\";\n        }\n\n# Internal disablables, for aliasing purposes.  They serve no special\n# purpose here, but allow scripts to get to know them through configdata.pm,\n# where these are merged with @disablables.\n# The actual aliasing mechanism is done via %disable_cascades\nmy @disablables_int = qw(\n    crmf\n    );\n\nmy %deprecated_disablables = (\n    \"ssl2\" => undef,\n    \"buf-freelists\" => undef,\n    \"crypto-mdebug-backtrace\" => undef,\n    \"hw\" => \"hw\",               # causes cascade, but no macro\n    \"hw-padlock\" => \"padlockeng\",\n    \"ripemd\" => \"rmd160\",\n    \"ui\" => \"ui-console\",\n    \"heartbeats\" => undef,\n    );\n\n# All of the following are disabled by default:\n\nour %disabled = ( # \"what\"         => \"comment\"\n                  \"fips\"                => \"default\",\n                  \"fips-jitter\"         => \"default\",\n                  \"asan\"                => \"default\",\n                  \"brotli\"              => \"default\",\n                  \"brotli-dynamic\"      => \"default\",\n                  \"buildtest-c++\"       => \"default\",\n                  \"crypto-mdebug\"       => \"default\",\n                  \"crypto-mdebug-backtrace\" => \"default\",\n                  \"demos\"               => \"default\",\n                  \"h3demo\"              => \"default\",\n                  \"devcryptoeng\"        => \"default\",\n                  \"ec_nistp_64_gcc_128\" => \"default\",\n                  \"egd\"                 => \"default\",\n                  \"external-tests\"      => \"default\",\n                  \"fuzz-afl\"            => \"default\",\n                  \"fuzz-libfuzzer\"      => \"default\",\n                  \"pie\"                 => \"default\",\n                  \"jitter\"              => \"default\",\n                  \"ktls\"                => \"default\",\n                  \"md2\"                 => \"default\",\n                  \"msan\"                => \"default\",\n                  \"rc5\"                 => \"default\",\n                  \"sctp\"                => \"default\",\n                  \"ssl3\"                => \"default\",\n                  \"ssl3-method\"         => \"default\",\n                  \"sslkeylog\"           => \"default\",\n                  \"tfo\"                 => \"default\",\n                  \"trace\"               => \"default\",\n                  \"ubsan\"               => \"default\",\n                  \"unit-test\"           => \"default\",\n                  \"weak-ssl-ciphers\"    => \"default\",\n                  \"zlib\"                => \"default\",\n                  \"zlib-dynamic\"        => \"default\",\n                  \"zstd\"                => \"default\",\n                  \"zstd-dynamic\"        => \"default\",\n                );\n\n# Note: => pair form used for aesthetics, not to truly make a hash table\nmy @disable_cascades = (\n    # \"what\"            => [ \"cascade\", ... ]\n    \"bulk\"              => [ \"shared\", \"dso\",\n                             \"aria\", \"async\", \"atexit\", \"autoload-config\",\n                             \"blake2\", \"bf\", \"camellia\", \"cast\", \"chacha\",\n                             \"cmac\", \"cms\", \"cmp\", \"comp\", \"ct\",\n                             \"des\", \"dgram\", \"dh\", \"dsa\",\n                             \"ec\", \"engine\",\n                             \"filenames\",\n                             \"idea\", \"ktls\",\n                             \"md4\", \"multiblock\", \"nextprotoneg\",\n                             \"ocsp\", \"ocb\", \"poly1305\", \"psk\",\n                             \"rc2\", \"rc4\", \"rmd160\",\n                             \"seed\", \"siphash\", \"siv\",\n                             \"sm3\", \"sm4\", \"srp\",\n                             \"srtp\", \"ssl3-method\", \"ssl-trace\",\n                             \"tfo\",\n                             \"ts\", \"ui-console\", \"whirlpool\",\n                             \"fips-securitychecks\" ],\n    sub { $config{processor} eq \"386\" }\n                        => [ \"sse2\" ],\n    \"ssl\"               => [ \"ssl3\" ],\n    \"ssl3-method\"       => [ \"ssl3\" ],\n    \"zlib\"              => [ \"zlib-dynamic\" ],\n    \"brotli\"            => [ \"brotli-dynamic\" ],\n    \"zstd\"              => [ \"zstd-dynamic\" ],\n    \"des\"               => [ \"mdc2\" ],\n    \"ec\"                => [ \"ec2m\", \"ecdsa\", \"ecdh\", \"sm2\", \"gost\", \"ecx\" ],\n    \"dgram\"             => [ \"dtls\", \"quic\", \"sctp\" ],\n    \"sock\"              => [ \"dgram\", \"tfo\" ],\n    \"dtls\"              => [ @dtls ],\n    sub { 0 == scalar grep { !$disabled{$_} } @dtls }\n                        => [ \"dtls\" ],\n\n    \"tls\"               => [ @tls ],\n    sub { 0 == scalar grep { !$disabled{$_} } @tls }\n                        => [ \"tls\" ],\n    \"tls1_3\"            => [ \"quic\" ],\n    \"quic\"              => [ \"unstable-qlog\" ],\n\n    \"crypto-mdebug\"     => [ \"crypto-mdebug-backtrace\" ],\n\n    \"module\"            => [ \"dynamic-engine\", \"fips\" ],\n\n    # Without shared libraries, dynamic engines aren't possible.\n    # This is due to them having to link with libcrypto and register features\n    # using the ENGINE functionality, and since that relies on global tables,\n    # those *have* to be exactly the same as the ones accessed from the app,\n    # which cannot be guaranteed if shared libraries aren't present.\n    # (note that even with shared libraries, both the app and dynamic engines\n    # must be linked with the same library)\n    \"shared\"            => [ \"dynamic-engine\", \"uplink\" ],\n    \"dso\"               => [ \"dynamic-engine\", \"module\" ],\n    # Other modules don't necessarily have to link with libcrypto, so shared\n    # libraries do not have to be a condition to produce those.\n\n    # Without position independent code, there can be no shared libraries\n    # or modules.\n    \"pic\"               => [ \"shared\", \"module\" ],\n\n    \"engine\"            => [ \"dynamic-engine\", grep(/eng$/, @disablables) ],\n    \"dynamic-engine\"    => [ \"loadereng\" ],\n    \"hw\"                => [ \"padlockeng\" ],\n\n    # no-autoalginit is only useful when building non-shared\n    \"autoalginit\"       => [ \"shared\", \"apps\", \"fips\" ],\n\n    \"stdio\"             => [ \"apps\", \"capieng\", \"egd\" ],\n    \"apps\"              => [ \"tests\" ],\n    \"tests\"             => [ \"external-tests\" ],\n    \"comp\"              => [ \"zlib\", \"brotli\", \"zstd\" ],\n    \"sm3\"               => [ \"sm2\" ],\n    sub { !$disabled{\"unit-test\"} } => [ \"heartbeats\" ],\n\n    sub { !$disabled{\"msan\"} } => [ \"asm\" ],\n\n    \"cmac\"              => [ \"siv\" ],\n    \"legacy\"            => [ \"md2\" ],\n\n    \"cmp\"               => [ \"crmf\" ],\n\n    \"fips\"              => [ \"fips-securitychecks\", \"fips-post\", \"acvp-tests\",\n                             \"fips-jitter\" ],\n\n    \"threads\"           => [ \"thread-pool\" ],\n    \"thread-pool\"       => [ \"default-thread-pool\" ],\n\n    \"blake2\"            => [ \"argon2\" ],\n\n    \"deprecated-3.0\"    => [ \"engine\", \"srp\" ],\n\n    \"http\"              => [ \"ocsp\" ]\n    );\n\n# Avoid protocol support holes.  Also disable all versions below N, if version\n# N is disabled while N+1 is enabled.\n#\nmy @list = (reverse @tls);\nwhile ((my $first, my $second) = (shift @list, shift @list)) {\n    last unless @list;\n    push @disable_cascades, ( sub { !$disabled{$first} && $disabled{$second} }\n                              => [ @list ] );\n    unshift @list, $second;\n}\nmy @list = (reverse @dtls);\nwhile ((my $first, my $second) = (shift @list, shift @list)) {\n    last unless @list;\n    push @disable_cascades, ( sub { !$disabled{$first} && $disabled{$second} }\n                              => [ @list ] );\n    unshift @list, $second;\n}\n\n# Explicit \"no-...\" options will be collected in %disabled along with the defaults.\n# To remove something from %disabled, use \"enable-foo\".\n# For symmetry, \"disable-foo\" is a synonym for \"no-foo\".\n\n# For the \"make variables\" CPPINCLUDES and CPPDEFINES, we support lists with\n# platform specific list separators.  Users from those platforms should\n# recognise those separators from how you set up the PATH to find executables.\n# The default is the Unix like separator, :, but as an exception, we also\n# support the space as separator.\nmy $list_separator_re =\n    { VMS           => qr/(?<!\\^),/,\n      MSWin32       => qr/(?<!\\\\);/ } -> {$^O} // qr/(?<!\\\\)[:\\s]/;\n# All the \"make variables\" we support\n# Some get pre-populated for the sake of backward compatibility\n# (we supported those before the change to \"make variable\" support.\nmy %user = (\n    AR          => env('AR'),\n    ARFLAGS     => [],\n    AS          => undef,\n    ASFLAGS     => [],\n    CC          => env('CC'),\n    CFLAGS      => [ env('CFLAGS') || () ],\n    CXX         => env('CXX'),\n    CXXFLAGS    => [ env('CXXFLAGS') || () ],\n    CPP         => undef,\n    CPPFLAGS    => [ env('CPPFLAGS') || () ],  # -D, -I, -Wp,\n    CPPDEFINES  => [],  # Alternative for -D\n    CPPINCLUDES => [],  # Alternative for -I\n    CROSS_COMPILE => env('CROSS_COMPILE'),\n    HASHBANGPERL=> env('HASHBANGPERL') || env('PERL'),\n    LD          => undef,\n    LDFLAGS     => [ env('LDFLAGS') || () ],  # -L, -Wl,\n    LDLIBS      => [ env('LDLIBS') || () ],  # -l\n    MT          => undef,\n    MTFLAGS     => [],\n    PERL        => env('PERL') || ($^O ne \"VMS\" ? $^X : \"perl\"),\n    RANLIB      => env('RANLIB'),\n    RC          => env('RC') || env('WINDRES'),\n    RCFLAGS     => [ env('RCFLAGS') || () ],\n    OBJCOPY     => undef,\n    RM          => undef,\n   );\n# Info about what \"make variables\" may be prefixed with the cross compiler\n# prefix.  This should NEVER mention any such variable with a list for value.\nmy @user_crossable = qw ( AR AS CC CXX CPP LD MT RANLIB RC );\n# The same but for flags given as Configure options.  These are *additional*\n# input, as opposed to the VAR=string option that override the corresponding\n# config target attributes\nmy %useradd = (\n    ASFLAGS     => [],\n    CPPDEFINES  => [],\n    CPPINCLUDES => [],\n    CPPFLAGS    => [],\n    CFLAGS      => [],\n    CXXFLAGS    => [],\n    LDFLAGS     => [],\n    LDLIBS      => [],\n    RCFLAGS     => [],\n   );\n\nmy %user_synonyms = (\n    HASHBANGPERL=> 'PERL',\n    RC          => 'WINDRES',\n   );\n\n# Some target attributes have been renamed, this is the translation table\nmy %target_attr_translate =(\n    ar          => 'AR',\n    as          => 'AS',\n    cc          => 'CC',\n    cxx         => 'CXX',\n    cpp         => 'CPP',\n    hashbangperl => 'HASHBANGPERL',\n    ld          => 'LD',\n    mt          => 'MT',\n    ranlib      => 'RANLIB',\n    rc          => 'RC',\n    rm          => 'RM',\n   );\n\n# Initialisers coming from 'config' scripts\n$config{defines} = [ split(/$list_separator_re/, env('__CNF_CPPDEFINES')) ];\n$config{includes} = [ split(/$list_separator_re/, env('__CNF_CPPINCLUDES')) ];\n$config{cppflags} = [ env('__CNF_CPPFLAGS') || () ];\n$config{cflags} = [ env('__CNF_CFLAGS') || () ];\n$config{cxxflags} = [ env('__CNF_CXXFLAGS') || () ];\n$config{lflags} = [ env('__CNF_LDFLAGS') || () ];\n$config{ex_libs} = [ env('__CNF_LDLIBS') || () ];\n\n$config{openssl_api_defines}=[];\n$config{openssl_sys_defines}=[];\n$config{openssl_feature_defines}=[];\n$config{options}=\"\";\n$config{build_type} = \"release\";\nmy $target=\"\";\n\nmy %cmdvars = ();               # Stores FOO='blah' type arguments\nmy %unsupported_options = ();\nmy %deprecated_options = ();\n# If you change this, update apps/version.c\nmy @known_seed_sources = qw(getrandom devrandom os egd none rdcpu);\nmy @seed_sources = ();\nwhile (@argvcopy)\n        {\n        $_ = shift @argvcopy;\n\n        # Support env variable assignments among the options\n        if (m|^(\\w+)=(.+)?$|)\n                {\n                $cmdvars{$1} = $2;\n                # Every time a variable is given as a configuration argument,\n                # it acts as a reset if the variable.\n                if (exists $user{$1})\n                        {\n                        $user{$1} = ref $user{$1} eq \"ARRAY\" ? [] : undef;\n                        }\n                #if (exists $useradd{$1})\n                #       {\n                #       $useradd{$1} = [];\n                #       }\n                next;\n                }\n\n        # VMS is a case insensitive environment, and depending on settings\n        # out of our control, we may receive options uppercased.  Let's\n        # downcase at least the part before any equal sign.\n        if ($^O eq \"VMS\")\n                {\n                s/^([^=]*)/lc($1)/e;\n                }\n\n        # some people just can't read the instructions, clang people have to...\n        s/^-no-(?!integrated-as)/no-/;\n\n        # rewrite some options in \"enable-...\" form\n        s /^-?-?shared$/enable-shared/;\n        s /^sctp$/enable-sctp/;\n        s /^threads$/enable-threads/;\n        s /^zlib$/enable-zlib/;\n        s /^zlib-dynamic$/enable-zlib-dynamic/;\n        s /^fips$/enable-fips/;\n\n        if (/^(no|disable|enable)-(.+)$/)\n                {\n                my $word = $2;\n                if ($word !~ m|hw(?:-.+)| # special treatment for hw regexp opt\n                        && !exists $deprecated_disablables{$word}\n                        && !grep { $word eq $_ } @disablables)\n                        {\n                        $unsupported_options{$_} = 1;\n                        next;\n                        }\n                }\n        if (/^no-(.+)$/ || /^disable-(.+)$/)\n                {\n                foreach my $proto ((@tls, @dtls))\n                        {\n                        if ($1 eq \"$proto-method\")\n                                {\n                                $disabled{\"$proto\"} = \"option($proto-method)\";\n                                last;\n                                }\n                        }\n                if ($1 eq \"dtls\")\n                        {\n                        foreach my $proto (@dtls)\n                                {\n                                $disabled{$proto} = \"option(dtls)\";\n                                }\n                        $disabled{\"dtls\"} = \"option(dtls)\";\n                        }\n                elsif ($1 eq \"ssl\")\n                        {\n                        # Last one of its kind\n                        $disabled{\"ssl3\"} = \"option(ssl)\";\n                        }\n                elsif ($1 eq \"tls\")\n                        {\n                        # XXX: Tests will fail if all SSL/TLS\n                        # protocols are disabled.\n                        foreach my $proto (@tls)\n                                {\n                                $disabled{$proto} = \"option(tls)\";\n                                }\n                        }\n                elsif ($1 eq \"static-engine\")\n                        {\n                        delete $disabled{\"dynamic-engine\"};\n                        }\n                elsif ($1 eq \"dynamic-engine\")\n                        {\n                        $disabled{\"dynamic-engine\"} = \"option\";\n                        }\n                elsif (exists $deprecated_disablables{$1})\n                        {\n                        $deprecated_options{$_} = 1;\n                        if (defined $deprecated_disablables{$1})\n                                {\n                                $disabled{$deprecated_disablables{$1}} = \"option\";\n                                }\n                        }\n                elsif ($1 =~ m|hw(?:-.+)|) # deprecate hw options in regexp form\n                        {\n                        $deprecated_options{$_} = 1;\n                        }\n                else\n                        {\n                        $disabled{$1} = \"option\";\n                        }\n                # No longer an automatic choice\n                $auto_threads = 0 if ($1 eq \"threads\");\n                }\n        elsif (/^enable-(.+)$/)\n                {\n                if ($1 eq \"static-engine\")\n                        {\n                        $disabled{\"dynamic-engine\"} = \"option\";\n                        }\n                elsif ($1 eq \"dynamic-engine\")\n                        {\n                        delete $disabled{\"dynamic-engine\"};\n                        }\n                elsif ($1 eq \"zlib-dynamic\")\n                        {\n                        delete $disabled{\"zlib\"};\n                        }\n                elsif ($1 eq \"brotli-dynamic\")\n                        {\n                        delete $disabled{\"brotli\"};\n                        }\n                elsif ($1 eq \"pie\")\n                        {\n                        delete $disabled{\"pie\"};\n                        }\n                elsif ($1 eq \"zstd-dynamic\")\n                        {\n                        delete $disabled{\"zstd\"};\n                        }\n                elsif ($1 eq \"fips-jitter\")\n                        {\n                        delete $disabled{\"fips\"};\n                        delete $disabled{\"jitter\"};\n                        }\n                my $algo = $1;\n                delete $disabled{$algo};\n\n                # No longer an automatic choice\n                $auto_threads = 0 if ($1 eq \"threads\");\n                }\n        elsif (/^-d$/)          # From older 'config'\n                {\n                $config{build_type} = \"debug\";\n                }\n        elsif (/^-v$/)          # From older 'config'\n                {\n                $guess_opts{verbose} = 1;\n                }\n        elsif (/^-w$/)\n                {\n                $guess_opts{nowait} = 1;\n                }\n        elsif (/^-t$/)          # From older 'config'\n                {\n                $dryrun = 1;\n                }\n        elsif (/^--strict-warnings$/)\n                {\n                # Pretend that our strict flags is a C flag, and replace it\n                # with the proper flags later on\n                push @{$useradd{CFLAGS}}, '--ossl-strict-warnings';\n                $strict_warnings=1;\n                }\n        elsif (/^--debug$/)\n                {\n                $config{build_type} = \"debug\";\n                }\n        elsif (/^--release$/)\n                {\n                $config{build_type} = \"release\";\n                }\n        elsif (/^386$/)\n                { $config{processor}=386; }\n        elsif (/^rsaref$/)\n                {\n                # No RSAref support any more since it's not needed.\n                # The check for the option is there so scripts aren't\n                # broken\n                }\n        elsif (m|^[-+/]|)\n                {\n                if (/^--prefix=(.*)$/)\n                        {\n                        $config{prefix}=$1;\n                        }\n                elsif (/^--api=(.*)$/)\n                        {\n                        my $api = $1;\n                        die \"Unknown API compatibility level $api\"\n                                unless defined $apitable->{$api};\n                        $config{api}=$apitable->{$api};\n                        }\n                elsif (/^--libdir=(.*)$/)\n                        {\n                        $config{libdir}=$1;\n                        }\n                elsif (/^--openssldir=(.*)$/)\n                        {\n                        $config{openssldir}=$1;\n                        }\n                elsif (/^--with-jitter-include=(.*)$/)\n                        {\n                        $withargs{jitter_include}=$1;\n                        }\n                elsif (/^--with-jitter-lib=(.*)$/)\n                        {\n                        $withargs{jitter_lib}=$1;\n                        }\n                elsif (/^--with-zlib-lib=(.*)$/)\n                        {\n                        $withargs{zlib_lib}=$1;\n                        }\n                elsif (/^--with-zlib-include=(.*)$/)\n                        {\n                        $withargs{zlib_include}=$1;\n                        }\n                elsif (/^--with-brotli-lib=(.*)$/)\n                        {\n                        $withargs{brotli_lib}=$1;\n                        }\n                elsif (/^--with-brotli-include=(.*)$/)\n                        {\n                        $withargs{brotli_include}=$1;\n                        }\n                elsif (/^--with-zstd-lib=(.*)$/)\n                        {\n                        $withargs{zstd_lib}=$1;\n                        }\n                elsif (/^--with-zstd-include=(.*)$/)\n                        {\n                        $withargs{zstd_include}=$1;\n                        }\n                elsif (/^--with-fuzzer-lib=(.*)$/)\n                        {\n                        $withargs{fuzzer_lib}=$1;\n                        }\n                elsif (/^--with-fuzzer-include=(.*)$/)\n                        {\n                        $withargs{fuzzer_include}=$1;\n                        }\n                elsif (/^--with-rand-seed=(.*)$/)\n                        {\n                        foreach my $x (split(m|,|, $1))\n                            {\n                            die \"Unknown --with-rand-seed choice $x\\n\"\n                                if ! grep { $x eq $_ } @known_seed_sources;\n                            push @seed_sources, $x;\n                            }\n                        }\n                elsif (/^--fips-key=(.*)$/)\n                        {\n                        $user{FIPSKEY}=lc($1);\n                        die \"Non-hex character in FIPS key\\n\"\n                           if $user{FIPSKEY} =~ /[^a-f0-9]/;\n                        die \"FIPS key must have even number of characters\\n\"\n                           if length $1 & 1;\n                        die \"FIPS key too long (64 bytes max)\\n\"\n                           if length $1 > 64;\n                        }\n                elsif (/^--banner=(.*)$/)\n                        {\n                        $banner = $1 . \"\\n\";\n                        }\n                elsif (/^--cross-compile-prefix=(.*)$/)\n                        {\n                        $user{CROSS_COMPILE}=$1;\n                        }\n                elsif (/^--config=(.*)$/)\n                        {\n                        read_config $1;\n                        }\n                elsif (/^-l(.*)$/)\n                        {\n                        push @{$useradd{LDLIBS}}, $_;\n                        }\n                elsif (/^-framework$/)\n                        {\n                        push @{$useradd{LDLIBS}}, $_, shift(@argvcopy);\n                        }\n                elsif (/^-L(.*)$/ or /^-Wl,/)\n                        {\n                        push @{$useradd{LDFLAGS}}, $_;\n                        }\n                elsif (/^-rpath$/ or /^-R$/)\n                        # -rpath is the OSF1 rpath flag\n                        # -R is the old Solaris rpath flag\n                        {\n                        my $rpath = shift(@argvcopy) || \"\";\n                        $rpath .= \" \" if $rpath ne \"\";\n                        push @{$useradd{LDFLAGS}}, $_, $rpath;\n                        }\n                elsif (/^-static$/)\n                        {\n                        push @{$useradd{LDFLAGS}}, $_;\n                        }\n                elsif (m|^[-/]D(.*)$|)\n                        {\n                        push @{$useradd{CPPDEFINES}}, $1;\n                        }\n                elsif (m|^[-/]I(.*)$|)\n                        {\n                        push @{$useradd{CPPINCLUDES}}, $1;\n                        }\n                elsif (/^-Wp,$/)\n                        {\n                        push @{$useradd{CPPFLAGS}}, $1;\n                        }\n                else    # common if (/^[-+]/), just pass down...\n                        {\n                        # Treat %xx as an ASCII code (e.g. replace %20 by a space character).\n                        # This provides a simple way to pass options with arguments separated\n                        # by spaces without quoting (e.g. -opt%20arg translates to -opt arg).\n                        $_ =~ s/%([0-9a-f]{1,2})/chr(hex($1))/gei;\n                        push @{$useradd{CFLAGS}}, $_;\n                        push @{$useradd{CXXFLAGS}}, $_;\n                        }\n                }\n        elsif (m|^/|)\n                {\n                # Treat %xx as an ASCII code (e.g. replace %20 by a space character).\n                # This provides a simple way to pass options with arguments separated\n                # by spaces without quoting (e.g. /opt%20arg translates to /opt arg).\n                $_ =~ s/%([0-9a-f]{1,2})/chr(hex($1))/gei;\n                push @{$useradd{CFLAGS}}, $_;\n                push @{$useradd{CXXFLAGS}}, $_;\n                }\n        else\n                {\n                die \"target already defined - $target (offending arg: $_)\\n\" if ($target ne \"\");\n                $target=$_;\n                }\n        unless ($_ eq $target || /^no-/ || /^disable-/)\n                {\n                # \"no-...\" follows later after implied deactivations\n                # have been derived.  (Don't take this too seriously,\n                # we really only write OPTIONS to the Makefile out of\n                # nostalgia.)\n\n                if ($config{options} eq \"\")\n                        { $config{options} = $_; }\n                else\n                        { $config{options} .= \" \".$_; }\n                }\n        }\n\nif (keys %deprecated_options)\n        {\n        warn \"***** Deprecated options: \",\n                join(\", \", keys %deprecated_options), \"\\n\";\n        }\nif (keys %unsupported_options)\n        {\n        die \"***** Unsupported options: \",\n                join(\", \", keys %unsupported_options), \"\\n\";\n        }\n\n# If any %useradd entry has been set, we must check that the \"make\n# variables\" haven't been set.  We start by checking of any %useradd entry\n# is set.\nif (grep { scalar @$_ > 0 } values %useradd) {\n    # Hash of env / make variables names.  The possible values are:\n    # 1 - \"make vars\"\n    # 2 - %useradd entry set\n    # 3 - both set\n    my %detected_vars =\n        map { my $v = 0;\n              $v += 1 if $cmdvars{$_};\n              $v += 2 if @{$useradd{$_}};\n              $_ => $v }\n        keys %useradd;\n\n    # If any of the corresponding \"make variables\" is set, we error\n    if (grep { $_ & 1 } values %detected_vars) {\n        my $names = join(', ', grep { $detected_vars{$_} > 0 }\n                               sort keys %detected_vars);\n        die <<\"_____\";\n***** Mixing make variables and additional compiler/linker flags as\n***** configure command line option is not permitted.\n***** Affected make variables: $names\n_____\n    }\n}\n\n# Check through all supported command line variables to see if any of them\n# were set, and canonicalise the values we got.  If no compiler or linker\n# flag or anything else that affects %useradd was set, we also check the\n# environment for values.\nmy $anyuseradd =\n    grep { defined $_ && (ref $_ ne 'ARRAY' || @$_) } values %useradd;\nforeach (keys %user) {\n    my $value = $cmdvars{$_};\n    $value //= env($_) unless $anyuseradd;\n    $value //=\n        defined $user_synonyms{$_} ? $cmdvars{$user_synonyms{$_}} : undef;\n    $value //= defined $user_synonyms{$_} ? env($user_synonyms{$_}) : undef\n        unless $anyuseradd;\n\n    if (defined $value) {\n        if (ref $user{$_} eq 'ARRAY') {\n            if ($_ eq 'CPPDEFINES' || $_ eq 'CPPINCLUDES') {\n                $user{$_} = [ split /$list_separator_re/, $value ];\n            } else {\n                $user{$_} = [ $value ];\n            }\n        } elsif (!defined $user{$_}) {\n            $user{$_} = $value;\n        }\n    }\n}\n\nif (grep { /-rpath\\b/ } ($user{LDFLAGS} ? @{$user{LDFLAGS}} : ())\n    && !$disabled{shared}\n    && !($disabled{asan} && $disabled{msan} && $disabled{ubsan})) {\n    die \"***** Cannot simultaneously use -rpath, shared libraries, and\\n\",\n        \"***** any of asan, msan or ubsan\\n\";\n}\n\n# If no target was given, try guessing.\nunless ($target) {\n    my %system_config = OpenSSL::config::get_platform(%guess_opts, %user);\n\n    # The $system_config{disable} is used to populate %disabled with\n    # entries that aren't already there.\n    foreach ( @{$system_config{disable} // []} ) {\n        $disabled{$_} = 'system' unless defined $disabled{$_};\n    }\n    delete $system_config{disable};\n\n    # Override config entries with stuff from the guesser.\n    # It's assumed that this really is nothing new.\n    %config = ( %config, %system_config );\n    $target = $system_config{target};\n}\n\nsub disable {\n    my $disable_type = shift;\n\n    for (@_) {\n        $disabled{$_} = $disable_type;\n    }\n\n    my @tocheckfor = (@_ ? @_ : keys %disabled);\n    while (@tocheckfor) {\n        my %new_tocheckfor = ();\n        my @cascade_copy = (@disable_cascades);\n        while (@cascade_copy) {\n            my ($test, $descendents) =\n                (shift @cascade_copy, shift @cascade_copy);\n            if (ref($test) eq \"CODE\" ? $test->() : defined($disabled{$test})) {\n                foreach (grep { !defined($disabled{$_}) } @$descendents) {\n                    $new_tocheckfor{$_} = 1; $disabled{$_} = \"cascade\";\n                }\n            }\n        }\n        @tocheckfor = (keys %new_tocheckfor);\n    }\n}\ndisable();                     # First cascade run\n\nour $die = sub { die @_; };\nif ($target eq \"TABLE\") {\n    local $die = sub { warn @_; };\n    foreach (sort keys %table) {\n        print_table_entry($_, \"TABLE\");\n    }\n    exit 0;\n}\n\nif ($target eq \"LIST\") {\n    foreach (sort keys %table) {\n        print $_,\"\\n\" unless $table{$_}->{template};\n    }\n    exit 0;\n}\n\nif ($target eq \"HASH\") {\n    local $die = sub { warn @_; };\n    print \"%table = (\\n\";\n    foreach (sort keys %table) {\n        print_table_entry($_, \"HASH\");\n    }\n    exit 0;\n}\n\nprint \"Configuring OpenSSL version $config{full_version} \";\nprint \"for target $target\\n\";\n\nif (scalar(@seed_sources) == 0) {\n    print \"Using os-specific seed configuration\\n\";\n    push @seed_sources, 'os';\n}\nif (scalar(grep { $_ eq 'egd' } @seed_sources) > 0) {\n    delete $disabled{'egd'};\n}\nif (scalar(grep { $_ eq 'none' } @seed_sources) > 0) {\n    die \"Cannot seed with none and anything else\" if scalar(@seed_sources) > 1;\n    warn <<_____ if scalar(@seed_sources) == 1;\n\n============================== WARNING ===============================\nYou have selected the --with-rand-seed=none option, which effectively\ndisables automatic reseeding of the OpenSSL SEED-SRC random generator.\nAll operations depending on the random generator such as creating keys\nwill not work unless the random generator is seeded manually by the\napplication.\n\nInstead of manually seeding, a different random generator can be set\nat runtime in openssl.cnf or configured at build time with\n-DOPENSSL_DEFAULT_SEED_SRC.\n\nPlease read the 'Note on random number generation' section in the\nINSTALL.md instructions and the RAND_DRBG(7) manual page for more\ndetails.\n============================== WARNING ===============================\n\n_____\n}\npush @{$config{openssl_feature_defines}},\n     map { (my $x = $_) =~ tr|[\\-a-z]|[_A-Z]|; \"OPENSSL_RAND_SEED_$x\" }\n        @seed_sources;\n\nmy $provider_string = $disabled{\"fips-post\"} ? \"non-compliant FIPS Provider\" : \"FIPS Provider\";\n\n$config{FIPS_VENDOR} =\n    (defined $version{FIPS_VENDOR} ? \"$version{FIPS_VENDOR} $provider_string for OpenSSL\" : \"OpenSSL $provider_string\");\n\n# Backward compatibility?\nif ($target =~ m/^CygWin32(-.*)$/) {\n    $target = \"Cygwin\".$1;\n}\n\n# Support for legacy targets having a name starting with 'debug-'\nmy ($d, $t) = $target =~ m/^(debug-)?(.*)$/;\nif ($d) {\n    $config{build_type} = \"debug\";\n\n    # If we do not find debug-foo in the table, the target is set to foo.\n    if (!$table{$target}) {\n        $target = $t;\n    }\n}\n\nif ($target) {\n    # It's possible that we have different config targets for specific\n    # toolchains, so we try to detect them, and go for the plain config\n    # target if not.\n    my $found;\n    foreach ( ( \"$target-$user{CC}\", \"$target\", undef ) ) {\n        $found=$_ if $table{$_} && !$table{$_}->{template};\n        last if $found;\n    }\n    $target = $found;\n} else {\n    # If we don't have a config target now, we try the C compiler as we\n    # fallback\n    my $cc = $user{CC} // 'cc';\n    $target = $cc if $table{$cc} && !$table{$cc}->{template};\n}\n\n&usage unless $target;\n\nexit 0 if $dryrun;              # From older 'config'\n\n$config{target} = $target;\nmy %target = resolve_config($target);\n\nforeach (keys %target_attr_translate) {\n    $target{$target_attr_translate{$_}} = $target{$_}\n        if $target{$_};\n    delete $target{$_};\n}\n\n%target = ( %{$table{DEFAULTS}}, %target );\n\nmy %conf_files = map { $_ => 1 } (@{$target{_conf_fname_int}});\n$config{conf_files} = [ sort keys %conf_files ];\n\n# Using sub disable within these loops may prove fragile, so we run\n# a cascade afterwards\nforeach my $feature (@{$target{disable}}) {\n    if (exists $deprecated_disablables{$feature}) {\n        warn \"***** config $target disables deprecated feature $feature\\n\";\n    } elsif (!grep { $feature eq $_ } @disablables) {\n        die \"***** config $target disables unknown feature $feature\\n\";\n    }\n    $disabled{$feature} = 'config';\n}\nforeach my $feature (@{$target{enable}}) {\n    if (\"default\" eq ($disabled{$feature} // \"\")) {\n        if (exists $deprecated_disablables{$feature}) {\n            warn \"***** config $target enables deprecated feature $feature\\n\";\n        } elsif (!grep { $feature eq $_ } @disablables) {\n            die \"***** config $target enables unknown feature $feature\\n\";\n        }\n        delete $disabled{$feature};\n    }\n}\n\n# If uplink_arch isn't defined, disable uplink\n$disabled{uplink} = 'no uplink_arch' unless (defined $target{uplink_arch});\n# If asm_arch isn't defined, disable asm\n$disabled{asm} = 'no asm_arch' unless (defined $target{asm_arch});\n\ndisable();                      # Run a cascade now\n\n$target{CXXFLAGS}//=$target{CFLAGS} if $target{CXX};\n$target{cxxflags}//=$target{cflags} if $target{CXX};\n$target{exe_extension}=\".exe\" if ($config{target} eq \"DJGPP\");\n$target{exe_extension}=\".pm\"  if ($config{target} =~ /vos/);\n\n# Fill %config with values from %user, and in case those are undefined or\n# empty, use values from %target (acting as a default).\nforeach (keys %user) {\n    my $ref_type = ref $user{$_};\n\n    # Temporary function.  Takes an intended ref type (empty string or \"ARRAY\")\n    # and a value that's to be coerced into that type.\n    my $mkvalue = sub {\n        my $type = shift;\n        my $value = shift;\n        my $undef_p = shift;\n\n        die \"Too many arguments for \\$mkvalue\" if @_;\n\n        while (ref $value eq 'CODE') {\n            $value = $value->();\n        }\n\n        if ($type eq 'ARRAY') {\n            return undef unless defined $value;\n            return undef if ref $value ne 'ARRAY' && !$value;\n            return undef if ref $value eq 'ARRAY' && !@$value;\n            return [ $value ] unless ref $value eq 'ARRAY';\n        }\n        return undef unless $value;\n        return $value;\n    };\n\n    $config{$_} =\n        $mkvalue->($ref_type, $user{$_})\n        || $mkvalue->($ref_type, $target{$_});\n    delete $config{$_} unless defined $config{$_};\n}\n\n# Finish up %config by appending things the user gave us on the command line\n# apart from \"make variables\"\nforeach (keys %useradd) {\n    # The must all be lists, so we assert that here\n    die \"internal error: \\$useradd{$_} isn't an ARRAY\\n\"\n        unless ref $useradd{$_} eq 'ARRAY';\n\n    if (defined $config{$_}) {\n        push @{$config{$_}}, @{$useradd{$_}};\n    } else {\n        $config{$_} = [ @{$useradd{$_}} ];\n    }\n}\n# At this point, we can forget everything about %user and %useradd,\n# because it's now all been merged into the corresponding $config entry\n\nif ($config{prefix} && !$config{CROSS_COMPILE}) {\n    die \"Directory given with --prefix MUST be absolute\\n\"\n        unless file_name_is_absolute($config{prefix});\n}\n\nif (grep { $_ =~ /(?:^|\\s)-static(?:\\s|$)/ } @{$config{LDFLAGS}}) {\n    disable('static', 'pic', 'threads');\n}\n\n# Allow overriding the build file name\n$config{build_file} = env('BUILDFILE') || $target{build_file} || \"Makefile\";\n\n# Make sure build_scheme is consistent.\n$target{build_scheme} = [ $target{build_scheme} ]\n    if ref($target{build_scheme}) ne \"ARRAY\";\n\nmy ($builder, $builder_platform, @builder_opts) =\n    @{$target{build_scheme}};\n\nforeach my $checker (($builder_platform.\"-\".$config{build_file}.\"-checker.pm\",\n                      $builder_platform.\"-checker.pm\")) {\n    my $checker_path = catfile($srcdir, \"Configurations\", $checker);\n    if (-f $checker_path) {\n        my $fn = $ENV{CONFIGURE_CHECKER_WARN}\n            ? sub { warn $@; } : sub { die $@; };\n        if (! do $checker_path) {\n            if ($@) {\n                $fn->($@);\n            } elsif ($!) {\n                $fn->($!);\n            } else {\n                $fn->(\"The detected tools didn't match the platform\\n\");\n            }\n        }\n        last;\n    }\n}\n\npush @{$config{defines}}, \"NDEBUG\"    if $config{build_type} eq \"release\";\n\nif ($target =~ /^mingw/ && `$config{CC} --target-help 2>&1` =~ m/-mno-cygwin/m)\n        {\n        push @{$config{cflags}}, \"-mno-cygwin\";\n        push @{$config{cxxflags}}, \"-mno-cygwin\" if $config{CXX};\n        push @{$config{shared_ldflag}}, \"-mno-cygwin\";\n        }\n\nif ($target =~ /linux.*-mips/ && !$disabled{asm}\n        && !grep { $_ =~ /-m(ips|arch=)/ } (@{$config{CFLAGS}})) {\n        # minimally required architecture flags for assembly modules\n        my $value;\n        $value = '-mips2' if ($target =~ /mips32/);\n        $value = '-mips3' if ($target =~ /mips64/);\n        unshift @{$config{cflags}}, $value;\n        unshift @{$config{cxxflags}}, $value if $config{CXX};\n}\n\n# If threads aren't disabled, check how possible they are\nunless ($disabled{threads}) {\n    if ($auto_threads) {\n        # Enabled by default, disable it forcibly if unavailable\n        if ($target{thread_scheme} eq \"(unknown)\") {\n            disable(\"unavailable\", 'threads');\n        }\n    } else {\n        # The user chose to enable threads explicitly, let's see\n        # if there's a chance that's possible\n        if ($target{thread_scheme} eq \"(unknown)\") {\n            # If the user asked for \"threads\" and we don't have internal\n            # knowledge how to do it, [s]he is expected to provide any\n            # system-dependent compiler options that are necessary.  We\n            # can't truly check that the given options are correct, but\n            # we expect the user to know what [s]He is doing.\n            if (!@{$config{CFLAGS}} && !@{$config{CPPDEFINES}}) {\n                die \"You asked for multi-threading support, but didn't\\n\"\n                    ,\"provide any system-specific compiler options\\n\";\n            }\n        }\n    }\n}\n\n# Find out if clang's sanitizers have been enabled with -fsanitize\n# flags and ensure that the corresponding %disabled elements area\n# removed to reflect that the sanitizers are indeed enabled.\nmy %detected_sanitizers = ();\nforeach (grep /^-fsanitize=/, @{$config{CFLAGS} || []}) {\n    (my $checks = $_) =~ s/^-fsanitize=//;\n    foreach (split /,/, $checks) {\n        my $d = { address       => 'asan',\n                  undefined     => 'ubsan',\n                  memory        => 'msan' } -> {$_};\n        next unless defined $d;\n\n        $detected_sanitizers{$d} = 1;\n        if (defined $disabled{$d}) {\n            die \"***** Conflict between disabling $d and enabling $_ sanitizer\"\n                if $disabled{$d} ne \"default\";\n            delete $disabled{$d};\n        }\n    }\n}\n\n# If threads still aren't disabled, add a C macro to ensure the source\n# code knows about it.  Any other flag is taken care of by the configs.\nunless($disabled{threads}) {\n    push @{$config{openssl_feature_defines}}, \"OPENSSL_THREADS\";\n}\n\nif ($disabled{\"unstable-qlog\"}) {\n    $disabled{\"qlog\"} = 1;\n}\n\nmy $no_shared_warn=0;\nif (($target{shared_target} // '') eq \"\")\n        {\n        $no_shared_warn = 1\n            if (!$disabled{shared} || !$disabled{\"dynamic-engine\"});\n        disable('no-shared-target', 'pic');\n        }\n\nif ($disabled{\"dynamic-engine\"}) {\n        $config{dynamic_engines} = 0;\n} else {\n        $config{dynamic_engines} = 1;\n}\n\nunless ($disabled{asan} || defined $detected_sanitizers{asan}) {\n    push @{$config{cflags}}, \"-fsanitize=address\";\n}\n\nunless ($disabled{ubsan} || defined $detected_sanitizers{ubsan}) {\n    push @{$config{cflags}}, \"-fsanitize=undefined\", \"-fno-sanitize-recover=all\", \"-DPEDANTIC\";\n}\n\nunless ($disabled{msan} || defined $detected_sanitizers{msan}) {\n  push @{$config{cflags}}, \"-fsanitize=memory\";\n}\n\nunless ($disabled{\"fuzz-libfuzzer\"} && $disabled{\"fuzz-afl\"}\n        && $disabled{asan} && $disabled{ubsan} && $disabled{msan}) {\n    push @{$config{cflags}}, \"-fno-omit-frame-pointer\", \"-g\";\n    push @{$config{cxxflags}}, \"-fno-omit-frame-pointer\", \"-g\" if $config{CXX};\n}\n#\n# Platform fix-ups\n#\n\n# This saves the build files from having to check\nif ($disabled{pic})\n        {\n        foreach (qw(shared_cflag shared_cxxflag shared_cppflag\n                    shared_defines shared_includes shared_ldflag\n                    module_cflags module_cxxflags module_cppflags\n                    module_defines module_includes module_lflags))\n                {\n                delete $config{$_};\n                $target{$_} = \"\";\n                }\n        }\nelse\n        {\n        push @{$config{lib_defines}}, \"OPENSSL_PIC\";\n        }\n\nif ($target{sys_id} ne \"\")\n        {\n        push @{$config{openssl_sys_defines}}, \"OPENSSL_SYS_$target{sys_id}\";\n        }\n\nmy %predefined_C = compiler_predefined($config{CROSS_COMPILE}.$config{CC});\nmy %predefined_CXX = $config{CXX}\n    ? compiler_predefined($config{CROSS_COMPILE}.$config{CXX})\n    : ();\n\nunless ($disabled{asm}) {\n    # big endian systems can use ELFv2 ABI\n    if ($target eq \"linux-ppc64\" || $target eq \"BSD-ppc64\") {\n        $target{perlasm_scheme} = \"linux64v2\" if ($predefined_C{_CALL_ELF} == 2);\n    }\n}\n\n# Check for makedepend capabilities.\nif (!$disabled{makedepend}) {\n    # If the attribute makedep_scheme is defined, then we assume that the\n    # config target and its associated build file are programmed to deal\n    # with it.\n    # If makedep_scheme is undefined, we go looking for GCC compatible\n    # dependency making, and if that's not available, we try to fall back\n    # on 'makedepend'.\n    if ($target{makedep_scheme}) {\n        $config{makedep_scheme} = $target{makedep_scheme};\n        # If the makedepcmd attribute is defined, copy it.  If not, the\n        # build files will have to fend for themselves.\n        $config{makedepcmd} = $target{makedepcmd} if $target{makedepcmd};\n    } elsif (($predefined_C{__GNUC__} // -1) >= 3\n             && !($predefined_C{__APPLE_CC__} && !$predefined_C{__clang__})) {\n        # We know that GNU C version 3 and up as well as all clang\n        # versions support dependency generation, but Xcode did not\n        # handle $cc -M before clang support (but claims __GNUC__ = 3)\n        $config{makedep_scheme} = 'gcc';\n    } else {\n        # In all other cases, we look for 'makedepend', and set the\n        # makedep_scheme value if we found it.\n        $config{makedepcmd} = which('makedepend');\n        $config{makedep_scheme} = 'makedepend' if $config{makedepcmd};\n    }\n\n    # If no depend scheme is set, we disable makedepend\n    disable('unavailable', 'makedepend') unless $config{makedep_scheme};\n}\n\nif (!$disabled{asm} && !$predefined_C{__MACH__} && $^O ne 'VMS' && !$predefined_C{_AIX}) {\n    # probe for -Wa,--noexecstack option...\n    if ($predefined_C{__clang__}) {\n        # clang has builtin assembler, which doesn't recognize --help,\n        # but it apparently recognizes the option in question on all\n        # supported platforms even when it's meaningless. In other words\n        # probe would fail, but probed option always accepted...\n        push @{$config{cflags}}, \"-Wa,--noexecstack\", \"-Qunused-arguments\";\n    } else {\n        my $cc = $config{CROSS_COMPILE}.$config{CC};\n        open(PIPE, \"$cc -Wa,--help -c -o null.$$.o -x assembler /dev/null 2>&1 |\");\n        while(<PIPE>) {\n            if (m/--noexecstack/) {\n                push @{$config{cflags}}, \"-Wa,--noexecstack\";\n                last;\n            }\n        }\n        close(PIPE);\n        unlink(\"null.$$.o\");\n    }\n}\n\n# Deal with bn_ops ###################################################\n\n$config{bn_ll}                  =0;\nmy $def_int=\"unsigned int\";\n$config{rc4_int}                =$def_int;\n($config{b64l},$config{b64},$config{b32})=(0,0,1);\n\nmy $count = 0;\nforeach (sort split(/\\s+/,$target{bn_ops})) {\n    $count++ if /SIXTY_FOUR_BIT|SIXTY_FOUR_BIT_LONG|THIRTY_TWO_BIT/;\n    $config{bn_ll}=1                            if $_ eq 'BN_LLONG';\n    $config{rc4_int}=\"unsigned char\"            if $_ eq 'RC4_CHAR';\n    ($config{b64l},$config{b64},$config{b32})\n        =(0,1,0)                                if $_ eq 'SIXTY_FOUR_BIT';\n    ($config{b64l},$config{b64},$config{b32})\n        =(1,0,0)                                if $_ eq 'SIXTY_FOUR_BIT_LONG';\n    ($config{b64l},$config{b64},$config{b32})\n        =(0,0,1)                                if $_ eq 'THIRTY_TWO_BIT';\n}\ndie \"Exactly one of SIXTY_FOUR_BIT|SIXTY_FOUR_BIT_LONG|THIRTY_TWO_BIT can be set in bn_ops\\n\"\n    if $count > 1;\n\n$config{api} = $config{major} * 10000 + $config{minor} * 100\n    unless $config{api};\nforeach (keys %$apitable) {\n    $disabled{\"deprecated-$_\"} = \"deprecation\"\n        if $disabled{deprecated} && $config{api} >= $apitable->{$_};\n}\n\ndisable();                      # Run a cascade now\n\n# Hack cflags for better warnings (dev option) #######################\n\n# \"Stringify\" the C and C++ flags string.  This permits it to be made part of\n# a string and works as well on command lines.\n$config{cflags} = [ map { (my $x = $_) =~ s/([\\\\\\\"])/\\\\$1/g; $x }\n                        @{$config{cflags}} ];\n$config{cxxflags} = [ map { (my $x = $_) =~ s/([\\\\\\\"])/\\\\$1/g; $x }\n                          @{$config{cxxflags}} ] if $config{CXX};\n\n$config{openssl_api_defines} = [\n    \"OPENSSL_CONFIGURED_API=\".$config{api},\n];\n\nmy @strict_warnings_collection=();\nif ($strict_warnings)\n        {\n        my $wopt;\n        my $gccver = $predefined_C{__GNUC__} // -1;\n\n        if ($gccver >= 4)\n                {\n                push @strict_warnings_collection, @gcc_devteam_warn;\n                push @strict_warnings_collection, @clang_devteam_warn\n                    if (defined($predefined_C{__clang__}));\n                }\n        elsif ($config{target} =~ /^VC-/)\n                {\n                push @strict_warnings_collection, @cl_devteam_warn;\n                }\n        else\n                {\n                warn \"WARNING --strict-warnings requires gcc[>=4] or gcc-alike, or MSVC\"\n                }\n        }\n\n$config{CFLAGS} = [ map { $_ eq '--ossl-strict-warnings'\n                              ? @strict_warnings_collection\n                              : ( $_ ) }\n                    @{$config{CFLAGS}} ];\n\nunless ($disabled{afalgeng}) {\n    $config{afalgeng}=\"\";\n    if (grep { $_ eq 'afalgeng' } @{$target{enable}}) {\n        push @{$config{engdirs}}, \"afalg\";\n    } else {\n        disable('not-linux', 'afalgeng');\n    }\n}\n\nunless ($disabled{devcryptoeng}) {\n    if ($target =~ m/^BSD/) {\n        my $maxver = 5*100 + 7;\n        my $sysstr = `uname -s`;\n        my $verstr = `uname -r`;\n        $sysstr =~ s|\\R$||;\n        $verstr =~ s|\\R$||;\n        my ($ma, $mi, @rest) = split m|\\.|, $verstr;\n        my $ver = $ma*100 + $mi;\n        if ($sysstr eq 'OpenBSD' && $ver >= $maxver) {\n            disable('too-new-kernel', 'devcryptoeng');\n        }\n    }\n}\n\nunless ($disabled{ktls}) {\n    $config{ktls}=\"\";\n    my $cc = $config{CROSS_COMPILE}.$config{CC};\n    if ($target =~ m/^linux/) {\n        system(\"printf '#include <sys/types.h>\\n#include <linux/tls.h>' | $cc -E - >/dev/null 2>&1\");\n        if ($? != 0) {\n            disable('too-old-kernel', 'ktls');\n        }\n    } elsif ($target =~ m/^BSD/) {\n        system(\"printf '#include <sys/types.h>\\n#include <sys/ktls.h>' | $cc -E - >/dev/null 2>&1\");\n        if ($? != 0) {\n            disable('too-old-freebsd', 'ktls');\n        }\n    } else {\n        disable('not-linux-or-freebsd', 'ktls');\n    }\n}\n\nunless ($disabled{winstore}) {\n    unless ($target =~ /^(?:Cygwin|mingw|VC-|BC-)/) {\n        disable('not-windows', 'winstore');\n    }\n}\n\npush @{$config{openssl_other_defines}}, \"OPENSSL_NO_KTLS\" if ($disabled{ktls});\n\n# Get the extra flags used when building shared libraries and modules.  We\n# do this late because some of them depend on %disabled.\n\n# Make the flags to build DSOs the same as for shared libraries unless they\n# are already defined\n$target{module_cflags} = $target{shared_cflag} unless defined $target{module_cflags};\n$target{module_cxxflags} = $target{shared_cxxflag} unless defined $target{module_cxxflags};\n$target{module_ldflags} = $target{shared_ldflag} unless defined $target{module_ldflags};\n{\n    my $shared_info_pl =\n        catfile(dirname($0), \"Configurations\", \"shared-info.pl\");\n    my %shared_info = read_eval_file($shared_info_pl);\n    push @{$target{_conf_fname_int}}, $shared_info_pl;\n    my $si = $target{shared_target};\n    while (ref $si ne \"HASH\") {\n        last if ! defined $si;\n        if (ref $si eq \"CODE\") {\n            $si = $si->();\n        } else {\n            $si = $shared_info{$si};\n        }\n    }\n\n    # Some of the 'shared_target' values don't have any entries in\n    # %shared_info.  That's perfectly fine, AS LONG AS the build file\n    # template knows how to handle this.  That is currently the case for\n    # Windows and VMS.\n    if (defined $si) {\n        # Just as above, copy certain shared_* attributes to the corresponding\n        # module_ attribute unless the latter is already defined\n        $si->{module_cflags} = $si->{shared_cflag} unless defined $si->{module_cflags};\n        $si->{module_cxxflags} = $si->{shared_cxxflag} unless defined $si->{module_cxxflags};\n        $si->{module_ldflags} = $si->{shared_ldflag} unless defined $si->{module_ldflags};\n        foreach (sort keys %$si) {\n            $target{$_} = defined $target{$_}\n                ? add($si->{$_})->($target{$_})\n                : $si->{$_};\n        }\n    }\n}\n\n# ALL MODIFICATIONS TO %disabled, %config and %target MUST BE DONE FROM HERE ON\n\n######################################################################\n# Build up information for skipping certain directories depending on disabled\n# features, as well as setting up macros for disabled features.\n\n# This is a tentative database of directories to skip.  Some entries may not\n# correspond to anything real, but that's ok, they will simply be ignored.\n# The actual processing of these entries is done in the build.info lookup\n# loop further down.\n#\n# The key is a Unix formatted path in the source tree, the value is an index\n# into %disabled_info, so any existing path gets added to a corresponding\n# 'skipped' entry in there with the list of skipped directories.\nmy %skipdir = ();\nmy %disabled_info = ();         # For configdata.pm\nforeach my $what (sort keys %disabled) {\n    # There are deprecated disablables that translate to themselves.\n    # They cause disabling cascades, but should otherwise not register.\n    next if $deprecated_disablables{$what};\n    # The generated $disabled{\"deprecated-x.y\"} entries are special\n    # and treated properly elsewhere\n    next if $what =~ m|^deprecated-|;\n\n    $config{options} .= \" no-$what\";\n\n    if (!grep { $what eq $_ } ( 'buildtest-c++', 'fips', 'threads', 'shared',\n                                'module', 'pic', 'dynamic-engine', 'makedepend',\n                                'sse2', 'legacy' )) {\n        (my $WHAT = uc $what) =~ s|-|_|g;\n        my $skipdir = $what;\n\n        # fix-up crypto/directory name(s)\n        $skipdir = \"ripemd\" if $what eq \"rmd160\";\n        $skipdir = \"whrlpool\" if $what eq \"whirlpool\";\n\n        my $macro = $disabled_info{$what}->{macro} = \"OPENSSL_NO_$WHAT\";\n        push @{$config{openssl_feature_defines}}, $macro;\n\n        $skipdir{engines} = $what if $what eq 'engine';\n        $skipdir{\"crypto/$skipdir\"} = $what\n            unless $what eq 'async' || $what eq 'err' || $what eq 'dso';\n    }\n}\n\nif ($disabled{\"dynamic-engine\"}) {\n    push @{$config{openssl_feature_defines}}, \"OPENSSL_NO_DYNAMIC_ENGINE\";\n} else {\n    push @{$config{openssl_feature_defines}}, \"OPENSSL_NO_STATIC_ENGINE\";\n}\n\n# If we use the unified build, collect information from build.info files\nmy %unified_info = ();\n\nmy $buildinfo_debug = defined($ENV{CONFIGURE_DEBUG_BUILDINFO});\nif ($builder eq \"unified\") {\n    use Text::Template 1.46;\n\n    sub cleandir {\n        my $base = shift;\n        my $dir = shift;\n        my $relativeto = shift || \".\";\n        my $no_mkpath = shift // 0;\n\n        $dir = catdir($base,$dir) unless isabsolute($dir);\n\n        # Make sure the directories we're building in exists\n        mkpath($dir) unless $no_mkpath;\n\n        my $res = abs2rel(absolutedir($dir), rel2abs($relativeto));\n        #print STDERR \"DEBUG[cleandir]: $dir , $base => $res\\n\";\n        return $res;\n    }\n\n    sub cleanfile {\n        my $base = shift;\n        my $file = shift;\n        my $relativeto = shift || \".\";\n        my $no_mkpath = shift // 0;\n\n        $file = catfile($base,$file) unless isabsolute($file);\n\n        my $d = dirname($file);\n        my $f = basename($file);\n\n        # Make sure the directories we're building in exists\n        mkpath($d) unless $no_mkpath;\n\n        my $res = abs2rel(catfile(absolutedir($d), $f), rel2abs($relativeto));\n        #print STDERR \"DEBUG[cleanfile]: $d , $f => $res\\n\";\n        return $res;\n    }\n\n    # Store the name of the template file we will build the build file from\n    # in %config.  This may be useful for the build file itself.\n    my @build_file_template_names =\n        ( $builder_platform.\"-\".$config{build_file}.\".tmpl\",\n          $config{build_file}.\".tmpl\" );\n    my @build_file_templates = ();\n\n    # First, look in the user provided directory, if given\n    if (defined env($local_config_envname)) {\n        @build_file_templates =\n            map {\n                if ($^O eq 'VMS') {\n                    # VMS environment variables are logical names,\n                    # which can be used as is\n                    $local_config_envname . ':' . $_;\n                } else {\n                    catfile(env($local_config_envname), $_);\n                }\n            }\n            @build_file_template_names;\n    }\n    # Then, look in our standard directory\n    push @build_file_templates,\n        ( map { cleanfile($srcdir, catfile(\"Configurations\", $_), $blddir, 1) }\n          @build_file_template_names );\n\n    my $build_file_template;\n    for $_ (@build_file_templates) {\n        $build_file_template = $_;\n        last if -f $build_file_template;\n\n        $build_file_template = undef;\n    }\n    if (!defined $build_file_template) {\n        die \"*** Couldn't find any of:\\n\", join(\"\\n\", @build_file_templates), \"\\n\";\n    }\n    $config{build_file_templates}\n      = [ cleanfile($srcdir, catfile(\"Configurations\", \"common0.tmpl\"),\n                    $blddir, 1),\n           $build_file_template ];\n\n    my @build_dirs = ( [ ] );   # current directory\n\n    $config{build_infos} = [ ];\n\n    # We want to detect configdata.pm in the source tree, so we\n    # don't use it if the build tree is different.\n    my $src_configdata = cleanfile($srcdir, \"configdata.pm\", $blddir, 1);\n\n    # Any source file that we recognise is placed in this hash table, with\n    # the list of its intended destinations as value.  When everything has\n    # been collected, there's a routine that checks that these source files\n    # exist, or if they are generated, that the generator exists.\n    my %check_exist = ();\n    my %check_generate = ();\n\n    my %ordinals = ();\n    while (@build_dirs) {\n        my @curd = @{shift @build_dirs};\n        my $sourced = catdir($srcdir, @curd);\n        my $buildd = catdir($blddir, @curd);\n\n        my $unixdir = join('/', @curd);\n        if (exists $skipdir{$unixdir}) {\n            my $what = $skipdir{$unixdir};\n            push @{$disabled_info{$what}->{skipped}}, catdir(@curd);\n            next;\n        }\n\n        mkpath($buildd);\n\n        my $f = 'build.info';\n        # The basic things we're trying to build\n        my @programs = ();\n        my @libraries = ();\n        my @modules = ();\n        my @scripts = ();\n\n        my %sources = ();\n        my %shared_sources = ();\n        my %includes = ();\n        my %defines = ();\n        my %depends = ();\n        my %generate = ();\n        my %imagedocs = ();\n        my %htmldocs = ();\n        my %mandocs = ();\n\n        # Support for $variablename in build.info files.\n        # Embedded perl code is the ultimate master, still.  If its output\n        # contains a dollar sign, it had better be escaped, or it will be\n        # taken for a variable name prefix.\n        my %variables = ();\n        # Variable name syntax\n        my $variable_name_re = qr/(?P<VARIABLE>[[:alpha:]][[:alnum:]_]*)/;\n        # Value modifier syntaxes\n        my $variable_subst_re = qr/\\/(?P<RE>(?:\\\\\\/|.)*?)\\/(?P<SUBST>.*?)/;\n        # Variable reference\n        my $variable_simple_re = qr/(?<!\\\\)\\$${variable_name_re}/;\n        my $variable_w_mod_re =\n            qr/(?<!\\\\)\\$\\{${variable_name_re}(?P<MOD>(?:\\\\\\/|.)*?)\\}/;\n        # Tie it all together\n        my $variable_re = qr/${variable_simple_re}|${variable_w_mod_re}/;\n\n        my $expand_variables = sub {\n            my $value = '';\n            my $value_rest = shift;\n\n            if ($ENV{CONFIGURE_DEBUG_VARIABLE_EXPAND}) {\n                print STDERR\n                    \"DEBUG[\\$expand_variables] Parsed '$value_rest' ...\\n\"\n            }\n\n            while ($value_rest =~ /${variable_re}/) {\n                # We must save important regexp values, because the next\n                # regexp clears them\n                my $mod = $+{MOD};\n                my $variable_value = $variables{$+{VARIABLE}};\n\n                $value_rest = $';\n                $value .= $`;\n\n                # Process modifier expressions, if present\n                if (defined $mod) {\n                    if ($mod =~ /^${variable_subst_re}$/) {\n                        my $re = $+{RE};\n                        my $subst = $+{SUBST};\n\n                        $variable_value =~ s/\\Q$re\\E/$subst/g;\n\n                        if ($ENV{CONFIGURE_DEBUG_VARIABLE_EXPAND}) {\n                            print STDERR\n                                \"DEBUG[\\$expand_variables] ... and substituted \",\n                                \"'$re' with '$subst'\\n\";\n                        }\n                    }\n                }\n\n                $value .= $variable_value;\n            }\n            if ($ENV{CONFIGURE_DEBUG_VARIABLE_EXPAND}) {\n                print STDERR\n                    \"DEBUG[\\$expand_variables] ... into: '$value$value_rest'\\n\";\n            }\n            return $value . $value_rest;\n        };\n\n        # Support for attributes in build.info files\n        my %attributes = ();\n        my $handle_attributes = sub {\n            my $attr_str = shift;\n            my $ref = shift;\n            my @goals = @_;\n\n            return unless defined $attr_str;\n\n            my @a = tokenize($attr_str, qr|\\s*,\\s*|);\n            foreach my $a (@a) {\n                my $ac = 1;\n                my $ak = $a;\n                my $av = 1;\n                if ($a =~ m|^(!)?(.*?)\\s* = \\s*(.*?)$|x) {\n                    $ac = ! $1;\n                    $ak = $2;\n                    $av = $3;\n                }\n                foreach my $g (@goals) {\n                    if ($ac) {\n                        $$ref->{$g}->{$ak} = $av;\n                    } else {\n                        delete $$ref->{$g}->{$ak};\n                    }\n                }\n            }\n        };\n\n        # Support for pushing values on multiple indexes of a given hash\n        # array.\n        my $push_to = sub {\n            my $valueref = shift;\n            my $index_str = shift; # May be undef or empty\n            my $attrref = shift;   # May be undef\n            my $attr_str = shift;\n            my @values = @_;\n\n            if (defined $index_str) {\n                my @indexes = ( '' );\n                if ($index_str !~ m|^\\s*$|) {\n                    @indexes = tokenize($index_str);\n                }\n                foreach (@indexes) {\n                    push @{$valueref->{$_}}, @values;\n                    if (defined $attrref) {\n                        $handle_attributes->($attr_str, \\$$attrref->{$_},\n                                             @values);\n                    }\n                }\n            } else {\n                push @$valueref, @values;\n                $handle_attributes->($attr_str, $attrref, @values)\n                    if defined $attrref;\n            }\n        };\n\n        if ($buildinfo_debug) {\n            print STDERR \"DEBUG: Reading \",catfile($sourced, $f),\"\\n\";\n        }\n        push @{$config{build_infos}}, catfile(abs2rel($sourced, $blddir), $f);\n        my $template =\n            Text::Template->new(TYPE => 'FILE',\n                                SOURCE => catfile($sourced, $f),\n                                PREPEND => qq{use lib \"$FindBin::Bin/util/perl\";});\n        die \"Something went wrong with $sourced/$f: $!\\n\" unless $template;\n        my @text =\n            split /^/m,\n            $template->fill_in(HASH => { config => \\%config,\n                                         target => \\%target,\n                                         disabled => \\%disabled,\n                                         withargs => \\%withargs,\n                                         builddir => abs2rel($buildd, $blddir),\n                                         sourcedir => abs2rel($sourced, $blddir),\n                                         buildtop => abs2rel($blddir, $blddir),\n                                         sourcetop => abs2rel($srcdir, $blddir) },\n                               DELIMITERS => [ \"{-\", \"-}\" ]);\n\n        # The top item of this stack has the following values\n        # -2 positive already run and we found ELSE (following ELSIF should fail)\n        # -1 positive already run (skip until ENDIF)\n        # 0 negatives so far (if we're at a condition, check it)\n        # 1 last was positive (don't skip lines until next ELSE, ELSIF or ENDIF)\n        # 2 positive ELSE (following ELSIF should fail)\n        my @skip = ();\n\n        # A few useful generic regexps\n        my $index_re = qr/\\[\\s*(?P<INDEX>(?:\\\\.|.)*?)\\s*\\]/;\n        my $cond_re = qr/\\[\\s*(?P<COND>(?:\\\\.|.)*?)\\s*\\]/;\n        my $attribs_re = qr/(?:\\{\\s*(?P<ATTRIBS>(?:\\\\.|.)*?)\\s*\\})?/;\n        my $value_re = qr/(?P<VALUE>.*?)/;\n        collect_information(\n            collect_from_array([ @text ],\n                               qr/\\\\$/ => sub { my $l1 = shift; my $l2 = shift;\n                                                $l1 =~ s/\\\\$//; $l1.$l2 }),\n            # Info we're looking for\n            qr/^\\s* IF ${cond_re} \\s*$/x\n            => sub {\n                if (! @skip || $skip[$#skip] > 0) {\n                    push @skip, !! $expand_variables->($+{COND});\n                } else {\n                    push @skip, -1;\n                }\n            },\n            qr/^\\s* ELSIF ${cond_re} \\s*$/x\n            => sub { die \"ELSIF out of scope\" if ! @skip;\n                     die \"ELSIF following ELSE\" if abs($skip[$#skip]) == 2;\n                     $skip[$#skip] = -1 if $skip[$#skip] != 0;\n                     $skip[$#skip] = !! $expand_variables->($+{COND})\n                         if $skip[$#skip] == 0; },\n            qr/^\\s* ELSE \\s*$/x\n            => sub { die \"ELSE out of scope\" if ! @skip;\n                     $skip[$#skip] = -2 if $skip[$#skip] != 0;\n                     $skip[$#skip] = 2 if $skip[$#skip] == 0; },\n            qr/^\\s* ENDIF \\s*$/x\n            => sub { die \"ENDIF out of scope\" if ! @skip;\n                     pop @skip; },\n            qr/^\\s* ${variable_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub {\n                if (!@skip || $skip[$#skip] > 0) {\n                    $variables{$+{VARIABLE}} = $expand_variables->($+{VALUE});\n                }\n            },\n            qr/^\\s* SUBDIRS \\s* = \\s* ${value_re} \\s* $/x\n            => sub {\n                if (!@skip || $skip[$#skip] > 0) {\n                    foreach (tokenize($expand_variables->($+{VALUE}))) {\n                        push @build_dirs, [ @curd, splitdir($_, 1) ];\n                    }\n                }\n            },\n            qr/^\\s* PROGRAMS ${attribs_re} \\s* =  \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\@programs, undef,\n                                \\$attributes{programs}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* LIBS ${attribs_re} \\s* =  \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\@libraries, undef,\n                                \\$attributes{libraries}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* MODULES ${attribs_re} \\s* =  \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\@modules, undef,\n                                \\$attributes{modules}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* SCRIPTS ${attribs_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\@scripts, undef,\n                                \\$attributes{scripts}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* IMAGEDOCS ${index_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%imagedocs, $expand_variables->($+{INDEX}),\n                                undef, undef,\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* HTMLDOCS ${index_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%htmldocs, $expand_variables->($+{INDEX}),\n                                undef, undef,\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* MANDOCS ${index_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%mandocs, $expand_variables->($+{INDEX}),\n                                undef, undef,\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* SOURCE ${index_re} ${attribs_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%sources, $expand_variables->($+{INDEX}),\n                                \\$attributes{sources}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* SHARED_SOURCE ${index_re} ${attribs_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%shared_sources, $expand_variables->($+{INDEX}),\n                                \\$attributes{sources}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* INCLUDE ${index_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%includes, $expand_variables->($+{INDEX}),\n                                undef, undef,\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* DEFINE ${index_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%defines, $expand_variables->($+{INDEX}),\n                                undef, undef,\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* DEPEND ${index_re} ${attribs_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%depends, $expand_variables->($+{INDEX}),\n                                \\$attributes{depends}, $+{ATTRIBS},\n                                tokenize($expand_variables->($+{VALUE})))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* GENERATE ${index_re} ${attribs_re} \\s* = \\s* ${value_re} \\s* $/x\n            => sub { $push_to->(\\%generate, $expand_variables->($+{INDEX}),\n                                \\$attributes{generate}, $+{ATTRIBS},\n                                $expand_variables->($+{VALUE}))\n                         if !@skip || $skip[$#skip] > 0; },\n            qr/^\\s* (?:\\#.*)? $/x => sub { },\n            \"OTHERWISE\" => sub { die \"Something wrong with this line:\\n$_\\nat $sourced/$f\" },\n            \"BEFORE\" => sub {\n                if ($buildinfo_debug) {\n                    print STDERR \"DEBUG: Parsing \",join(\" \", @_),\"\\n\";\n                    print STDERR \"DEBUG: ... before parsing, skip stack is \",join(\" \", map { int($_) } @skip),\"\\n\";\n                }\n            },\n            \"AFTER\" => sub {\n                if ($buildinfo_debug) {\n                    print STDERR \"DEBUG: .... after parsing, skip stack is \",join(\" \", map { int($_) } @skip),\"\\n\";\n                }\n            },\n            );\n        die \"runaway IF?\" if (@skip);\n\n        if (grep { defined $attributes{modules}->{$_}->{engine} } keys %attributes\n                and !$config{dynamic_engines}) {\n            die <<\"EOF\"\nENGINES can only be used if configured with 'dynamic-engine'.\nThis is usually a fault in a build.info file.\nEOF\n        }\n\n        {\n            my %infos = ( programs  => [ @programs  ],\n                          libraries => [ @libraries ],\n                          modules   => [ @modules   ],\n                          scripts   => [ @scripts   ] );\n            foreach my $k (keys %infos) {\n                foreach (@{$infos{$k}}) {\n                    my $item = cleanfile($buildd, $_, $blddir);\n                    $unified_info{$k}->{$item} = 1;\n\n                    # Fix up associated attributes\n                    $unified_info{attributes}->{$k}->{$item} =\n                        $attributes{$k}->{$_}\n                        if defined $attributes{$k}->{$_};\n                }\n            }\n        }\n\n        # Check that we haven't defined any library as both shared and\n        # explicitly static.  That is forbidden.\n        my @doubles = ();\n        foreach (grep /\\.a$/, keys %{$unified_info{libraries}}) {\n            (my $l = $_) =~ s/\\.a$//;\n            push @doubles, $l if defined $unified_info{libraries}->{$l};\n        }\n        die \"these libraries are both explicitly static and shared:\\n  \",\n            join(\" \", @doubles), \"\\n\"\n            if @doubles;\n\n        foreach (keys %sources) {\n            my $dest = $_;\n            my $ddest = cleanfile($buildd, $_, $blddir);\n            foreach (@{$sources{$dest}}) {\n                my $s = cleanfile($sourced, $_, $blddir, 1);\n\n                # If it's generated or we simply don't find it in the source\n                # tree, we assume it's in the build tree.\n                if ($s eq $src_configdata || $generate{$_} || ! -f $s) {\n                    $s = cleanfile($buildd, $_, $blddir);\n                }\n                my $o = $_;\n                # We recognise C++, C and asm files\n                if ($s =~ /\\.(cc|cpp|c|s|S)$/) {\n                    push @{$check_exist{$s}}, $ddest;\n                    $o =~ s/\\.[csS]$/.o/; # C and assembler\n                    $o =~ s/\\.(cc|cpp)$/_cc.o/; # C++\n                    $o = cleanfile($buildd, $o, $blddir);\n                    $unified_info{sources}->{$ddest}->{$o} = -1;\n                    $unified_info{sources}->{$o}->{$s} = -1;\n                } elsif ($s =~ /\\.rc$/) {\n                    # We also recognise resource files\n                    push @{$check_exist{$s}}, $ddest;\n                    $o =~ s/\\.rc$/.res/; # Resource configuration\n                    $o = cleanfile($buildd, $o, $blddir);\n                    $unified_info{sources}->{$ddest}->{$o} = -1;\n                    $unified_info{sources}->{$o}->{$s} = -1;\n                } else {\n                    push @{$check_exist{$s}}, $ddest;\n                    $unified_info{sources}->{$ddest}->{$s} = 1;\n                }\n                # Fix up associated attributes\n                if ($o ne $_) {\n                    $unified_info{attributes}->{sources}->{$ddest}->{$o} =\n                        $unified_info{attributes}->{sources}->{$o}->{$s} =\n                        $attributes{sources}->{$dest}->{$_}\n                        if defined $attributes{sources}->{$dest}->{$_};\n                } else {\n                    $unified_info{attributes}->{sources}->{$ddest}->{$s} =\n                        $attributes{sources}->{$dest}->{$_}\n                        if defined $attributes{sources}->{$dest}->{$_};\n                }\n            }\n        }\n\n        foreach (keys %shared_sources) {\n            my $dest = $_;\n            my $ddest = cleanfile($buildd, $_, $blddir);\n            foreach (@{$shared_sources{$dest}}) {\n                my $s = cleanfile($sourced, $_, $blddir, 1);\n\n                # If it's generated or we simply don't find it in the source\n                # tree, we assume it's in the build tree.\n                if ($s eq $src_configdata || $generate{$_} || ! -f $s) {\n                    $s = cleanfile($buildd, $_, $blddir);\n                }\n\n                my $o = $_;\n                if ($s =~ /\\.(cc|cpp|c|s|S)$/) {\n                    # We recognise C++, C and asm files\n                    push @{$check_exist{$s}}, $ddest;\n                    $o =~ s/\\.[csS]$/.o/; # C and assembler\n                    $o =~ s/\\.(cc|cpp)$/_cc.o/; # C++\n                    $o = cleanfile($buildd, $o, $blddir);\n                    $unified_info{shared_sources}->{$ddest}->{$o} = -1;\n                    $unified_info{sources}->{$o}->{$s} = -1;\n                } elsif ($s =~ /\\.rc$/) {\n                    # We also recognise resource files\n                    push @{$check_exist{$s}}, $ddest;\n                    $o =~ s/\\.rc$/.res/; # Resource configuration\n                    $o = cleanfile($buildd, $o, $blddir);\n                    $unified_info{shared_sources}->{$ddest}->{$o} = -1;\n                    $unified_info{sources}->{$o}->{$s} = -1;\n                } elsif ($s =~ /\\.ld$/) {\n                    # We also recognise linker scripts (or corresponding)\n                    # We know they are generated files\n                    push @{$check_exist{$s}}, $ddest;\n                    $o = cleanfile($buildd, $_, $blddir);\n                    $unified_info{shared_sources}->{$ddest}->{$o} = 1;\n                } else {\n                    die \"unrecognised source file type for shared library: $s\\n\";\n                }\n                # Fix up associated attributes\n                if ($o ne $_) {\n                    $unified_info{attributes}->{shared_sources}->{$ddest}->{$o} =\n                        $unified_info{attributes}->{sources}->{$o}->{$s} =\n                        $attributes{sources}->{$dest}->{$_}\n                        if defined $attributes{sources}->{$dest}->{$_};\n                } else {\n                    $unified_info{attributes}->{shared_sources}->{$ddest}->{$o} =\n                        $attributes{sources}->{$dest}->{$_}\n                        if defined $attributes{sources}->{$dest}->{$_};\n                }\n            }\n        }\n\n        foreach (keys %generate) {\n            my $dest = $_;\n            my $ddest = cleanfile($buildd, $_, $blddir);\n            die \"more than one generator for $dest: \"\n                ,join(\" \", @{$generate{$_}}),\"\\n\"\n                if scalar @{$generate{$_}} > 1;\n            my @generator = split /\\s+/, $generate{$dest}->[0];\n            my $gen = $generator[0];\n            $generator[0] = cleanfile($sourced, $gen, $blddir, 1);\n\n            # If the generator is itself generated, it's in the build tree\n            if ($generate{$gen} || ! -f $generator[0]) {\n                $generator[0] = cleanfile($buildd, $gen, $blddir);\n            }\n            $check_generate{$ddest}->{$generator[0]}++;\n\n            $unified_info{generate}->{$ddest} = [ @generator ];\n            # Fix up associated attributes\n            $unified_info{attributes}->{generate}->{$ddest} =\n                $attributes{generate}->{$dest}->{$gen}\n                if defined $attributes{generate}->{$dest}->{$gen};\n        }\n\n        foreach (keys %depends) {\n            my $dest = $_;\n            my $ddest = $dest;\n\n            if ($dest =~ /^\\|(.*)\\|$/) {\n                # Collect the raw target\n                $unified_info{targets}->{$1} = 1;\n                $ddest = $1;\n            } elsif ($dest eq '') {\n                $ddest = '';\n            } else {\n                $ddest = cleanfile($sourced, $dest, $blddir, 1);\n\n                # If the destination doesn't exist in source, it can only be\n                # a generated file in the build tree.\n                if ($ddest eq $src_configdata || ! -f $ddest) {\n                    $ddest = cleanfile($buildd, $dest, $blddir);\n                }\n            }\n            foreach my $f (@{$depends{$dest}}) {\n                # If the dependency destination is generated, dependencies\n                # may have an extra syntax to separate the intended inclusion\n                # directory from the module to be loaded: a | instead of a\n                # / as directory separator.\n                # Do note that this has to be handled in the build file\n                # template as well.\n                # $i = inclusion path in source directory\n                # $i2 = inclusion path in build directory\n                # $m = module path (within the inclusion path)\n                # $i = full module path in source directory\n                # $i2 = full module path in build directory\n                my $i; my $i2; my $m; my $d; my $d2;\n                if ($unified_info{generate}->{$ddest}\n                    && $f =~ m/^(.*?)\\|(.*)$/) {\n                    $i = $1;\n                    $m = $2;\n                    # We must be very careful to modify $i last\n                    $d = cleanfile($sourced, \"$i/$m\", $blddir, 1);\n                    $d2 = cleanfile($buildd, \"$i/$m\", $blddir);\n                    $i2 = cleandir($buildd, $i, $blddir);\n                    $i = cleandir($sourced, $i, $blddir, 1);\n                } else {\n                    $d = cleanfile($sourced, $f, $blddir, 1);\n                    $d2 = cleanfile($buildd, $f, $blddir);\n                }\n\n                # If we know it's generated, or assume it is because we can't\n                # find it in the source tree, we set file we depend on to be\n                # in the build tree rather than the source tree.\n                if ($d eq $src_configdata\n                    || (grep { $d2 eq $_ }\n                        keys %{$unified_info{generate}})\n                    || ! -f $d) {\n                    $d = $d2;\n                    $i = $i2;\n                }\n                if ($i) {\n                    # Put together the computed inclusion dir with the\n                    # original module name.  Do note that we conserve the\n                    # Unixly path syntax for the module path.\n                    $d = \"$i|$m\";\n                }\n                $unified_info{depends}->{$ddest}->{$d} = 1;\n\n                # Fix up associated attributes\n                $unified_info{attributes}->{depends}->{$ddest}->{$d} =\n                    $attributes{depends}->{$dest}->{$f}\n                    if defined $attributes{depends}->{$dest}->{$f};\n            }\n        }\n\n        foreach (keys %includes) {\n            my $dest = $_;\n            my $ddest = cleanfile($sourced, $_, $blddir, 1);\n\n            # If the destination doesn't exist in source, it can only be\n            # a generated file in the build tree.\n            if ($ddest eq $src_configdata || ! -f $ddest) {\n                $ddest = cleanfile($buildd, $_, $blddir);\n            }\n            foreach (@{$includes{$dest}}) {\n                my $is = cleandir($sourced, $_, $blddir, 1);\n                my $ib = cleandir($buildd, $_, $blddir);\n                push @{$unified_info{includes}->{$ddest}->{source}}, $is\n                    unless grep { $_ eq $is } @{$unified_info{includes}->{$ddest}->{source}};\n                push @{$unified_info{includes}->{$ddest}->{build}}, $ib\n                    unless grep { $_ eq $ib } @{$unified_info{includes}->{$ddest}->{build}};\n            }\n        }\n\n        foreach my $dest (keys %defines) {\n            my $ddest;\n\n            if ($dest ne \"\") {\n                $ddest = cleanfile($sourced, $dest, $blddir, 1);\n\n                # If the destination doesn't exist in source, it can only\n                # be a generated file in the build tree.\n                if (! -f $ddest) {\n                    $ddest = cleanfile($buildd, $dest, $blddir);\n                }\n            }\n            foreach my $v (@{$defines{$dest}}) {\n                $v =~ m|^([^=]*)(=.*)?$|;\n                die \"0 length macro name not permitted\\n\" if $1 eq \"\";\n                if ($dest ne \"\") {\n                    die \"$1 defined more than once\\n\"\n                        if defined $unified_info{defines}->{$ddest}->{$1};\n                    $unified_info{defines}->{$ddest}->{$1} = $2;\n                } else {\n                    die \"$1 defined more than once\\n\"\n                        if grep { $v eq $_ } @{$config{defines}};\n                    push @{$config{defines}}, $v;\n                }\n            }\n        }\n\n        foreach my $section (keys %imagedocs) {\n            foreach (@{$imagedocs{$section}}) {\n                my $imagedocs = cleanfile($buildd, $_, $blddir);\n                $unified_info{imagedocs}->{$section}->{$imagedocs} = 1;\n            }\n        }\n\n        foreach my $section (keys %htmldocs) {\n            foreach (@{$htmldocs{$section}}) {\n                my $htmldocs = cleanfile($buildd, $_, $blddir);\n                $unified_info{htmldocs}->{$section}->{$htmldocs} = 1;\n            }\n        }\n\n        foreach my $section (keys %mandocs) {\n            foreach (@{$mandocs{$section}}) {\n                my $mandocs = cleanfile($buildd, $_, $blddir);\n                $unified_info{mandocs}->{$section}->{$mandocs} = 1;\n            }\n        }\n    }\n\n    my $ordinals_text = join(', ', sort keys %ordinals);\n    warn <<\"EOF\" if $ordinals_text;\n\nWARNING: ORDINALS were specified for $ordinals_text\nThey are ignored and should be replaced with a combination of GENERATE,\nDEPEND and SHARED_SOURCE.\nEOF\n\n    # Check that each generated file is only generated once\n    my $ambiguous_generation = 0;\n    foreach (sort keys %check_generate) {\n        my @generators = sort keys %{$check_generate{$_}};\n        my $generators_txt = join(', ', @generators);\n        if (scalar @generators > 1) {\n            warn \"$_ is GENERATEd by more than one generator ($generators_txt)\\n\";\n            $ambiguous_generation++;\n        }\n        if ($check_generate{$_}->{$generators[0]} > 1) {\n            warn \"INFO: $_ has more than one GENERATE declaration (same generator)\\n\"\n        }\n    }\n    die \"There are ambiguous source file generations\\n\"\n        if $ambiguous_generation > 0;\n\n    # All given source files should exist, or if generated, their\n    # generator should exist.  This loop ensures this is true.\n    my $missing = 0;\n    foreach my $orig (sort keys %check_exist) {\n        foreach my $dest (@{$check_exist{$orig}}) {\n            if ($orig ne $src_configdata) {\n                if ($orig =~ /\\.a$/) {\n                    # Static library names may be used as sources, so we\n                    # need to detect those and give them special treatment.\n                    unless (grep { $_ eq $orig }\n                            keys %{$unified_info{libraries}}) {\n                        warn \"$orig is given as source for $dest, but no such library is built\\n\";\n                        $missing++;\n                    }\n                } else {\n                    # A source may be generated, and its generator may be\n                    # generated as well.  We therefore loop to dig out the\n                    # first generator.\n                    my $gen = $orig;\n\n                    while (my @next = keys %{$check_generate{$gen}}) {\n                        $gen = $next[0];\n                    }\n\n                    if (! -f $gen) {\n                        if ($gen ne $orig) {\n                            $missing++;\n                            warn \"$orig is given as source for $dest, but its generator (leading to $gen) is missing\\n\";\n                        } else {\n                            $missing++;\n                            warn \"$orig is given as source for $dest, but is missing\\n\";\n                        }\n                    }\n                }\n            }\n        }\n    }\n    die \"There are files missing\\n\" if $missing > 0;\n\n    # Go through the sources of all libraries and check that the same basename\n    # doesn't appear more than once.  Some static library archivers depend on\n    # them being unique.\n    {\n        my $err = 0;\n        foreach my $prod (keys %{$unified_info{libraries}}) {\n            my @prod_sources =\n                map { keys %{$unified_info{sources}->{$_}} }\n                keys %{$unified_info{sources}->{$prod}};\n            my %srccnt = ();\n\n            # Count how many times a given each source basename\n            # appears for each product.\n            foreach my $src (@prod_sources) {\n                $srccnt{basename $src}++;\n            }\n\n            foreach my $src (keys %srccnt) {\n                if ((my $cnt = $srccnt{$src}) > 1) {\n                    print STDERR \"$src appears $cnt times for the product $prod\\n\";\n                    $err++\n                }\n            }\n        }\n        die if $err > 0;\n    }\n\n    # Massage the result\n\n    # If we depend on a header file or a perl module, add an inclusion of\n    # its directory to allow smoothe inclusion\n    foreach my $dest (keys %{$unified_info{depends}}) {\n        next if $dest eq \"\";\n        foreach my $d (keys %{$unified_info{depends}->{$dest}}) {\n            next unless $d =~ /\\.(h|pm)$/;\n            # Take into account when a dependency uses the inclusion|module\n            # syntax\n            my $i = $d =~ m/\\|/ ? $` : dirname($d);\n            my $spot =\n                $d eq \"configdata.pm\" || defined($unified_info{generate}->{$d})\n                ? 'build' : 'source';\n            push @{$unified_info{includes}->{$dest}->{$spot}}, $i\n                unless grep { $_ eq $i } @{$unified_info{includes}->{$dest}->{$spot}};\n        }\n    }\n\n    # Go through all intermediary files and change their names to something that\n    # reflects what they will be built for.  Note that for some source files,\n    # this leads to duplicate object files because they are used multiple times.\n    # the goal is to rename all object files according to this scheme:\n    #    {productname}-{midfix}-{origobjname}.[o|res]\n    # the {midfix} is a keyword indicating the type of product, which is mostly\n    # valuable for libraries since they come in two forms.\n    #\n    # This also reorganises the {sources} and {shared_sources} so that the\n    # former only contains ALL object files that are supposed to end up in\n    # static libraries and programs, while the latter contains ALL object files\n    # that are supposed to end up in shared libraries and DSOs.\n    # The main reason for having two different source structures is to allow\n    # the same name to be used for the static and the shared variants of a\n    # library.\n    {\n        # Take copies so we don't get interference from added stuff\n        my %unified_copy = ();\n        foreach (('sources', 'shared_sources')) {\n            $unified_copy{$_} = { %{$unified_info{$_}} }\n                if defined($unified_info{$_});\n            delete $unified_info{$_};\n        }\n        foreach my $prodtype (('programs', 'libraries', 'modules', 'scripts')) {\n            # $intent serves multi purposes:\n            # - give a prefix for the new object files names\n            # - in the case of libraries, rearrange the object files so static\n            #   libraries use the 'sources' structure exclusively, while shared\n            #   libraries use the 'shared_sources' structure exclusively.\n            my $intent = {\n                programs  => { bin    => { src => [ 'sources' ],\n                                           dst => 'sources' } },\n                libraries => { lib    => { src => [ 'sources' ],\n                                           dst => 'sources' },\n                               shlib  => { prodselect =>\n                                               sub { grep !/\\.a$/, @_ },\n                                           src => [ 'sources',\n                                                    'shared_sources' ],\n                                           dst => 'shared_sources' } },\n                modules   => { dso    => { src => [ 'sources' ],\n                                           dst => 'sources' } },\n                scripts   => { script => { src => [ 'sources' ],\n                                           dst => 'sources' } }\n               } -> {$prodtype};\n            foreach my $kind (keys %$intent) {\n                next if ($intent->{$kind}->{dst} eq 'shared_sources'\n                             && $disabled{shared});\n\n                my @src = @{$intent->{$kind}->{src}};\n                my $dst = $intent->{$kind}->{dst};\n                my $prodselect = $intent->{$kind}->{prodselect} // sub { @_ };\n                foreach my $prod ($prodselect->(keys %{$unified_info{$prodtype}})) {\n                    # %prod_sources has all applicable objects as keys, and\n                    # their corresponding sources as values\n                    my %prod_sources =\n                        map { $_ => [ keys %{$unified_copy{sources}->{$_}} ] }\n                        map { keys %{$unified_copy{$_}->{$prod}} }\n                        @src;\n                    foreach (keys %prod_sources) {\n                        # Only affect object files and resource files,\n                        # the others simply get a new value\n                        # (+1 instead of -1)\n                        if ($_ =~ /\\.(o|res)$/) {\n                            (my $prodname = $prod) =~ s|\\.a$||;\n                            my $newobj =\n                                catfile(dirname($_),\n                                        basename($prodname)\n                                            . '-' . $kind\n                                            . '-' . basename($_));\n                            $unified_info{$dst}->{$prod}->{$newobj} = 1;\n                            foreach my $src (@{$prod_sources{$_}}) {\n                                $unified_info{sources}->{$newobj}->{$src} = 1;\n                                # Adjust source attributes\n                                my $attrs = $unified_info{attributes}->{sources};\n                                if (defined $attrs->{$prod}\n                                    && defined $attrs->{$prod}->{$_}) {\n                                    $attrs->{$prod}->{$newobj} =\n                                        $attrs->{$prod}->{$_};\n                                    delete $attrs->{$prod}->{$_};\n                                }\n                                foreach my $objsrc (keys %{$attrs->{$_} // {}}) {\n                                    $attrs->{$newobj}->{$objsrc} =\n                                        $attrs->{$_}->{$objsrc};\n                                    delete $attrs->{$_}->{$objsrc};\n                                }\n                            }\n                            # Adjust dependencies\n                            foreach my $deps (keys %{$unified_info{depends}->{$_}}) {\n                                $unified_info{depends}->{$_}->{$deps} = -1;\n                                $unified_info{depends}->{$newobj}->{$deps} = 1;\n                            }\n                            # Adjust includes\n                            foreach my $k (('source', 'build')) {\n                                next unless\n                                    defined($unified_info{includes}->{$_}->{$k});\n                                my @incs = @{$unified_info{includes}->{$_}->{$k}};\n                                $unified_info{includes}->{$newobj}->{$k} = [ @incs ];\n                            }\n                        } else {\n                            $unified_info{$dst}->{$prod}->{$_} = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    # At this point, we have a number of sources with the value -1.  They\n    # aren't part of the local build and are probably meant for a different\n    # platform, and can therefore be cleaned away.  That happens when making\n    # %unified_info more efficient below.\n\n    ### Make unified_info a bit more efficient\n    # One level structures\n    foreach ((\"programs\", \"libraries\", \"modules\", \"scripts\", \"targets\")) {\n        $unified_info{$_} = [ sort keys %{$unified_info{$_}} ];\n    }\n    # Two level structures\n    foreach my $l1 ((\"sources\", \"shared_sources\", \"ldadd\", \"depends\",\n                     \"imagedocs\", \"htmldocs\", \"mandocs\")) {\n        foreach my $l2 (sort keys %{$unified_info{$l1}}) {\n            my @items =\n                sort\n                grep { $unified_info{$l1}->{$l2}->{$_} > 0 }\n                keys %{$unified_info{$l1}->{$l2}};\n            if (@items) {\n                $unified_info{$l1}->{$l2} = [ @items ];\n            } else {\n                delete $unified_info{$l1}->{$l2};\n            }\n        }\n    }\n    # Defines\n    foreach my $dest (sort keys %{$unified_info{defines}}) {\n        $unified_info{defines}->{$dest}\n            = [ map { $_.$unified_info{defines}->{$dest}->{$_} }\n                sort keys %{$unified_info{defines}->{$dest}} ];\n    }\n    # Includes\n    foreach my $dest (sort keys %{$unified_info{includes}}) {\n        if (defined($unified_info{includes}->{$dest}->{build})) {\n            my @source_includes = ();\n            @source_includes = ( @{$unified_info{includes}->{$dest}->{source}} )\n                if defined($unified_info{includes}->{$dest}->{source});\n            $unified_info{includes}->{$dest} =\n                [ @{$unified_info{includes}->{$dest}->{build}} ];\n            foreach my $inc (@source_includes) {\n                push @{$unified_info{includes}->{$dest}}, $inc\n                    unless grep { $_ eq $inc } @{$unified_info{includes}->{$dest}};\n            }\n        } elsif (defined($unified_info{includes}->{$dest}->{source})) {\n            $unified_info{includes}->{$dest} =\n                [ @{$unified_info{includes}->{$dest}->{source}} ];\n        } else {\n            delete $unified_info{includes}->{$dest};\n        }\n    }\n\n    # For convenience collect information regarding directories where\n    # files are generated, those generated files and the end product\n    # they end up in where applicable.  Then, add build rules for those\n    # directories\n    my %loopinfo = ( \"lib\" => [ @{$unified_info{libraries}} ],\n                     \"dso\" => [ @{$unified_info{modules}} ],\n                     \"bin\" => [ @{$unified_info{programs}} ],\n                     \"script\" => [ @{$unified_info{scripts}} ],\n                     \"docs\" => [ (map { @{$unified_info{imagedocs}->{$_} // []} }\n                                  keys %{$unified_info{imagedocs} // {}}),\n                                 (map { @{$unified_info{htmldocs}->{$_} // []} }\n                                  keys %{$unified_info{htmldocs} // {}}),\n                                 (map { @{$unified_info{mandocs}->{$_} // []} }\n                                  keys %{$unified_info{mandocs} // {}}) ] );\n    foreach my $type (sort keys %loopinfo) {\n        foreach my $product (@{$loopinfo{$type}}) {\n            my %dirs = ();\n            my $pd = dirname($product);\n\n            foreach (@{$unified_info{sources}->{$product} // []},\n                     @{$unified_info{shared_sources}->{$product} // []}) {\n                my $d = dirname($_);\n\n                # We don't want to create targets for source directories\n                # when building out of source\n                next if ($config{sourcedir} ne $config{builddir}\n                             && $d =~ m|^\\Q$config{sourcedir}\\E|);\n                # We already have a \"test\" target, and the current directory\n                # is just silly to make a target for\n                next if $d eq \"test\" || $d eq \".\";\n\n                $dirs{$d} = 1;\n                push @{$unified_info{dirinfo}->{$d}->{deps}}, $_\n                    if $d ne $pd;\n            }\n            foreach (sort keys %dirs) {\n                push @{$unified_info{dirinfo}->{$_}->{products}->{$type}},\n                    $product;\n            }\n        }\n    }\n}\n\n# For the schemes that need it, we provide the old *_obj configs\n# from the *_asm_obj ones\nforeach (grep /_(asm|aux)_src$/, keys %target) {\n    my $src = $_;\n    (my $obj = $_) =~ s/_(asm|aux)_src$/_obj/;\n    $target{$obj} = $target{$src};\n    $target{$obj} =~ s/\\.[csS]\\b/.o/g; # C and assembler\n    $target{$obj} =~ s/\\.(cc|cpp)\\b/_cc.o/g; # C++\n}\n\n# Write down our configuration where it fits #########################\n\nmy %template_vars = (\n    config => \\%config,\n    target => \\%target,\n    disablables => \\@disablables,\n    disablables_int => \\@disablables_int,\n    disabled => \\%disabled,\n    withargs => \\%withargs,\n    unified_info => \\%unified_info,\n    tls => \\@tls,\n    dtls => \\@dtls,\n    makevars => [ sort keys %user ],\n    disabled_info => \\%disabled_info,\n    user_crossable => \\@user_crossable,\n);\nmy $configdata_outname = 'configdata.pm';\nopen CONFIGDATA, \">$configdata_outname.new\"\n    or die \"Trying to create $configdata_outname.new: $!\";\nmy $configdata_tmplname = cleanfile($srcdir, \"configdata.pm.in\", $blddir, 1);\nmy $configdata_tmpl =\n    OpenSSL::Template->new(TYPE => 'FILE', SOURCE => $configdata_tmplname);\n$configdata_tmpl->fill_in(\n    FILENAME => $configdata_tmplname,\n    OUTPUT => \\*CONFIGDATA,\n    HASH => { %template_vars,\n              autowarntext => [\n                  'WARNING: do not edit!',\n                  \"Generated by Configure from $configdata_tmplname\",\n              ] }\n) or die $Text::Template::ERROR;\nclose CONFIGDATA;\n\nrename \"$configdata_outname.new\", $configdata_outname;\nif ($builder_platform eq 'unix') {\n    my $mode = (0755 & ~umask);\n    chmod $mode, 'configdata.pm'\n        or warn sprintf(\"WARNING: Couldn't change mode for 'configdata.pm' to 0%03o: %s\\n\",$mode,$!);\n}\nprint \"Created $configdata_outname\\n\";\n\nprint \"Running $configdata_outname\\n\";\nmy $perlcmd = (quotify(\"maybeshell\", $config{PERL}))[0];\nmy $cmd = \"$perlcmd $configdata_outname\";\n#print STDERR \"DEBUG[run_dofile]: \\$cmd = $cmd\\n\";\nsystem($cmd);\nexit 1 if $? != 0;\n\n$SIG{__DIE__} = $orig_death_handler;\n\nprint <<\"EOF\" if ($disabled{threads} eq \"unavailable\");\n\nThe library could not be configured for supporting multi-threaded\napplications as the compiler options required on this system are not known.\nSee file INSTALL.md for details if you need multi-threading.\nEOF\n\nprint <<\"EOF\" if ($no_shared_warn);\n\nThe options 'shared', 'pic' and 'dynamic-engine' aren't supported on this\nplatform, so we will pretend you gave the option 'no-pic', which also disables\n'shared' and 'dynamic-engine'.  If you know how to implement shared libraries\nor position independent code, please let us know (but please first make sure\nyou have tried with a current version of OpenSSL).\nEOF\n\nprint $banner;\n\nexit(0);\n\n######################################################################\n#\n# Helpers and utility functions\n#\n\n# Death handler, to print a helpful message in case of failure #######\n#\nsub death_handler {\n    die @_ if $^S;              # To prevent the added message in eval blocks\n    my $build_file = $config{build_file} // \"build file\";\n    my @message = ( <<\"_____\", @_ );\n\nFailure!  $build_file wasn't produced.\nPlease read INSTALL.md and associated NOTES-* files.  You may also have to\nlook over your available compiler tool chain or change your configuration.\n\n_____\n\n    # Dying is terminal, so it's ok to reset the signal handler here.\n    $SIG{__DIE__} = $orig_death_handler;\n    die @message;\n}\n\n# Configuration file reading #########################################\n\n# Note: All of the helper functions are for lazy evaluation.  They all\n# return a CODE ref, which will return the intended value when evaluated.\n# Thus, whenever there's mention of a returned value, it's about that\n# intended value.\n\n# Helper function to implement conditional value variants, with a default\n# plus additional values based on the value of $config{build_type}.\n# Arguments are given in hash table form:\n#\n#       picker(default => \"Basic string: \",\n#              debug   => \"debug\",\n#              release => \"release\")\n#\n# When configuring with --debug, the resulting string will be\n# \"Basic string: debug\", and when not, it will be \"Basic string: release\"\n#\n# This can be used to create variants of sets of flags according to the\n# build type:\n#\n#       cflags => picker(default => \"-Wall\",\n#                        debug   => \"-g -O0\",\n#                        release => \"-O3\")\n#\nsub picker {\n    my %opts = @_;\n    return sub { add($opts{default} || (),\n                     $opts{$config{build_type}} || ())->(); }\n}\n\n# Helper function to combine several values of different types into one.\n# This is useful if you want to combine a string with the result of a\n# lazy function, such as:\n#\n#       cflags => combine(\"-Wall\", sub { $disabled{zlib} ? () : \"-DZLIB\" })\n#\nsub combine {\n    my @stuff = @_;\n    return sub { add(@stuff)->(); }\n}\n\n# Helper function to implement conditional values depending on the value\n# of $disabled{threads}.  Can be used as follows:\n#\n#       cflags => combine(\"-Wall\", threads(\"-pthread\"))\n#\nsub threads {\n    my @flags = @_;\n    return sub { add($disabled{threads} ? () : @flags)->(); }\n}\n\nsub shared {\n    my @flags = @_;\n    return sub { add($disabled{shared} ? () : @flags)->(); }\n}\n\nour $add_called = 0;\n# Helper function to implement adding values to already existing configuration\n# values.  It handles elements that are ARRAYs, CODEs and scalars\nsub _add {\n    my $separator = shift;\n\n    # If there's any ARRAY in the collection of values OR the separator\n    # is undef, we will return an ARRAY of combined values, otherwise a\n    # string of joined values with $separator as the separator.\n    my $found_array = !defined($separator);\n\n    my @values =\n        map {\n            my $res = $_;\n            while (ref($res) eq \"CODE\") {\n                $res = $res->();\n            }\n            if (defined($res)) {\n                if (ref($res) eq \"ARRAY\") {\n                    $found_array = 1;\n                    @$res;\n                } else {\n                    $res;\n                }\n            } else {\n                ();\n            }\n    } (@_);\n\n    $add_called = 1;\n\n    if ($found_array) {\n        [ @values ];\n    } else {\n        join($separator, grep { defined($_) && $_ ne \"\" } @values);\n    }\n}\nsub add_before {\n    my $separator = \" \";\n    if (ref($_[$#_]) eq \"HASH\") {\n        my $opts = pop;\n        $separator = $opts->{separator};\n    }\n    my @x = @_;\n    sub { _add($separator, @x, @_) };\n}\nsub add {\n    my $separator = \" \";\n    if (ref($_[$#_]) eq \"HASH\") {\n        my $opts = pop;\n        $separator = $opts->{separator};\n    }\n    my @x = @_;\n    sub { _add($separator, @_, @x) };\n}\n\nsub read_eval_file {\n    my $fname = shift;\n    my $content;\n    my @result;\n\n    open F, \"< $fname\" or die \"Can't open '$fname': $!\\n\";\n    {\n        undef local $/;\n        $content = <F>;\n    }\n    close F;\n    {\n        local $@;\n\n        @result = ( eval $content );\n        warn $@ if $@;\n    }\n    return wantarray ? @result : $result[0];\n}\n\n# configuration reader, evaluates the input file as a perl script and expects\n# it to fill %targets with target configurations.  Those are then added to\n# %table.\nsub read_config {\n    my $fname = shift;\n    my %targets;\n\n    {\n        # Protect certain tables from tampering\n        local %table = ();\n\n        %targets = read_eval_file($fname);\n    }\n    my %preexisting = ();\n    foreach (sort keys %targets) {\n        $preexisting{$_} = 1 if $table{$_};\n    }\n    die <<\"EOF\",\nThe following config targets from $fname\nshadow pre-existing config targets with the same name:\nEOF\n        map { \"  $_\\n\" } sort keys %preexisting\n        if %preexisting;\n\n\n    # For each target, check that it's configured with a hash table.\n    foreach (keys %targets) {\n        if (ref($targets{$_}) ne \"HASH\") {\n            if (ref($targets{$_}) eq \"\") {\n                warn \"Deprecated target configuration for $_, ignoring...\\n\";\n            } else {\n                warn \"Misconfigured target configuration for $_ (should be a hash table), ignoring...\\n\";\n            }\n            delete $targets{$_};\n        } else {\n            $targets{$_}->{_conf_fname_int} = add([ $fname ]);\n        }\n    }\n\n    %table = (%table, %targets);\n\n}\n\n# configuration resolver.  Will only resolve all the lazy evaluation\n# codeblocks for the chosen target and all those it inherits from,\n# recursively\nsub resolve_config {\n    my $target = shift;\n    my @breadcrumbs = @_;\n\n#    my $extra_checks = defined($ENV{CONFIGURE_EXTRA_CHECKS});\n\n    if (grep { $_ eq $target } @breadcrumbs) {\n        die \"inherit_from loop!  target backtrace:\\n  \"\n            ,$target,\"\\n  \",join(\"\\n  \", @breadcrumbs),\"\\n\";\n    }\n\n    if (!defined($table{$target})) {\n        warn \"Warning! target $target doesn't exist!\\n\";\n        return ();\n    }\n    # Recurse through all inheritances.  They will be resolved on the\n    # fly, so when this operation is done, they will all just be a\n    # bunch of attributes with string values.\n    # What we get here, though, are keys with references to lists of\n    # the combined values of them all.  We will deal with lists after\n    # this stage is done.\n    my %combined_inheritance = ();\n    if ($table{$target}->{inherit_from}) {\n        my @inherit_from =\n            map { ref($_) eq \"CODE\" ? $_->() : $_ } @{$table{$target}->{inherit_from}};\n        foreach (@inherit_from) {\n            my %inherited_config = resolve_config($_, $target, @breadcrumbs);\n\n            # 'template' is a marker that's considered private to\n            # the config that had it.\n            delete $inherited_config{template};\n\n            foreach (keys %inherited_config) {\n                if (!$combined_inheritance{$_}) {\n                    $combined_inheritance{$_} = [];\n                }\n                push @{$combined_inheritance{$_}}, $inherited_config{$_};\n            }\n        }\n    }\n\n    # We won't need inherit_from in this target any more, since we've\n    # resolved all the inheritances that lead to this\n    delete $table{$target}->{inherit_from};\n\n    # Now is the time to deal with those lists.  Here's the place to\n    # decide what shall be done with those lists, all based on the\n    # values of the target we're currently dealing with.\n    # - If a value is a coderef, it will be executed with the list of\n    #   inherited values as arguments.\n    # - If the corresponding key doesn't have a value at all or is the\n    #   empty string, the inherited value list will be run through the\n    #   default combiner (below), and the result becomes this target's\n    #   value.\n    # - Otherwise, this target's value is assumed to be a string that\n    #   will simply override the inherited list of values.\n    my $default_combiner = add();\n\n    my %all_keys =\n        map { $_ => 1 } (keys %combined_inheritance,\n                         keys %{$table{$target}});\n\n    sub process_values {\n        my $object    = shift;\n        my $inherited = shift;  # Always a [ list ]\n        my $target    = shift;\n        my $entry     = shift;\n\n        $add_called = 0;\n\n        while(ref($object) eq \"CODE\") {\n            $object = $object->(@$inherited);\n        }\n        if (!defined($object)) {\n            return ();\n        }\n        elsif (ref($object) eq \"ARRAY\") {\n            local $add_called;  # To make sure recursive calls don't affect it\n            return [ map { process_values($_, $inherited, $target, $entry) }\n                     @$object ];\n        } elsif (ref($object) eq \"\") {\n            return $object;\n        } else {\n            die \"cannot handle reference type \",ref($object)\n                ,\" found in target \",$target,\" -> \",$entry,\"\\n\";\n        }\n    }\n\n    foreach my $key (sort keys %all_keys) {\n        my $previous = $combined_inheritance{$key};\n\n        # Current target doesn't have a value for the current key?\n        # Assign it the default combiner, the rest of this loop body\n        # will handle it just like any other coderef.\n        if (!exists $table{$target}->{$key}) {\n            $table{$target}->{$key} = $default_combiner;\n        }\n\n        $table{$target}->{$key} = process_values($table{$target}->{$key},\n                                               $combined_inheritance{$key},\n                                               $target, $key);\n        unless(defined($table{$target}->{$key})) {\n            delete $table{$target}->{$key};\n        }\n#        if ($extra_checks &&\n#            $previous && !($add_called ||  $previous ~~ $table{$target}->{$key})) {\n#            warn \"$key got replaced in $target\\n\";\n#        }\n    }\n\n    # Finally done, return the result.\n    return %{$table{$target}};\n}\n\nsub usage\n        {\n        print STDERR $usage;\n        print STDERR \"\\npick os/compiler from:\\n\";\n        my $j=0;\n        my $i;\n        my $k=0;\n        foreach $i (sort keys %table)\n                {\n                next if $table{$i}->{template};\n                next if $i =~ /^debug/;\n                $k += length($i) + 1;\n                if ($k > 78)\n                        {\n                        print STDERR \"\\n\";\n                        $k=length($i);\n                        }\n                print STDERR $i . \" \";\n                }\n        foreach $i (sort keys %table)\n                {\n                next if $table{$i}->{template};\n                next if $i !~ /^debug/;\n                $k += length($i) + 1;\n                if ($k > 78)\n                        {\n                        print STDERR \"\\n\";\n                        $k=length($i);\n                        }\n                print STDERR $i . \" \";\n                }\n        exit(1);\n        }\n\nsub compiler_predefined {\n    state %predefined;\n    my $cc = shift;\n\n    return () if $^O eq 'VMS';\n\n    die 'compiler_predefined called without a compiler command'\n        unless $cc;\n\n    if (! $predefined{$cc}) {\n\n        $predefined{$cc} = {};\n\n        # collect compiler pre-defines from gcc or gcc-alike...\n        open(PIPE, \"$cc -dM -E -x c /dev/null 2>&1 |\");\n        while (my $l = <PIPE>) {\n            $l =~ m/^#define\\s+(\\w+(?:\\(\\w+\\))?)(?:\\s+(.+))?/ or last;\n            $predefined{$cc}->{$1} = $2 // '';\n        }\n        close(PIPE);\n    }\n\n    return %{$predefined{$cc}};\n}\n\nsub which\n{\n    my ($name)=@_;\n\n    if (eval { require IPC::Cmd; 1; }) {\n        IPC::Cmd->import();\n        return scalar IPC::Cmd::can_run($name);\n    } else {\n        # if there is $directories component in splitpath,\n        # then it's not something to test with $PATH...\n        return $name if (File::Spec->splitpath($name))[1];\n\n        foreach (File::Spec->path()) {\n            my $fullpath = catfile($_, \"$name$target{exe_extension}\");\n            if (-f $fullpath and -x $fullpath) {\n                return $fullpath;\n            }\n        }\n    }\n}\n\nsub env\n{\n    my $name = shift;\n    my %opts = @_;\n\n    unless ($opts{cacheonly}) {\n        # Note that if $ENV{$name} doesn't exist or is undefined,\n        # $config{perlenv}->{$name} will be created with the value\n        # undef.  This is intentional.\n\n        $config{perlenv}->{$name} = $ENV{$name}\n            if ! exists $config{perlenv}->{$name};\n    }\n    return $config{perlenv}->{$name};\n}\n\n# Configuration printer ##############################################\n\nsub print_table_entry\n{\n    local $now_printing = shift;\n    my %target = resolve_config($now_printing);\n    my $type = shift;\n\n    # Don't print the templates\n    return if $target{template};\n\n    my @sequence = (\n        \"sys_id\",\n        \"cpp\",\n        \"cppflags\",\n        \"defines\",\n        \"includes\",\n        \"cc\",\n        \"cflags\",\n        \"ld\",\n        \"lflags\",\n        \"loutflag\",\n        \"ex_libs\",\n        \"bn_ops\",\n        \"enable\",\n        \"disable\",\n        \"poly1035_asm_src\",\n        \"thread_scheme\",\n        \"perlasm_scheme\",\n        \"dso_scheme\",\n        \"shared_target\",\n        \"shared_cflag\",\n        \"shared_defines\",\n        \"shared_ldflag\",\n        \"shared_rcflag\",\n        \"shared_extension\",\n        \"dso_extension\",\n        \"obj_extension\",\n        \"exe_extension\",\n        \"ranlib\",\n        \"ar\",\n        \"arflags\",\n        \"aroutflag\",\n        \"rc\",\n        \"rcflags\",\n        \"rcoutflag\",\n        \"mt\",\n        \"mtflags\",\n        \"mtinflag\",\n        \"mtoutflag\",\n        \"multilib\",\n        \"build_scheme\",\n        );\n\n    if ($type eq \"TABLE\") {\n        print \"\\n\";\n        print \"*** $now_printing\\n\";\n        foreach (@sequence) {\n            if (ref($target{$_}) eq \"ARRAY\") {\n                printf \"\\$%-12s = %s\\n\", $_, join(\" \", @{$target{$_}});\n            } else {\n                printf \"\\$%-12s = %s\\n\", $_, $target{$_};\n            }\n        }\n    } elsif ($type eq \"HASH\") {\n        my $largest =\n            length((sort { length($a) <=> length($b) } @sequence)[-1]);\n        print \"    '$now_printing' => {\\n\";\n        foreach (@sequence) {\n            if ($target{$_}) {\n                if (ref($target{$_}) eq \"ARRAY\") {\n                    print \"      '\",$_,\"'\",\" \" x ($largest - length($_)),\" => [ \",join(\", \", map { \"'$_'\" } @{$target{$_}}),\" ],\\n\";\n                } else {\n                    print \"      '\",$_,\"'\",\" \" x ($largest - length($_)),\" => '\",$target{$_},\"',\\n\";\n                }\n            }\n        }\n        print \"    },\\n\";\n    }\n}\n\n# Utility routines ###################################################\n\n# On VMS, if the given file is a logical name, File::Spec::Functions\n# will consider it an absolute path.  There are cases when we want a\n# purely syntactic check without checking the environment.\nsub isabsolute {\n    my $file = shift;\n\n    # On non-platforms, we just use file_name_is_absolute().\n    return file_name_is_absolute($file) unless $^O eq \"VMS\";\n\n    # If the file spec includes a device or a directory spec,\n    # file_name_is_absolute() is perfectly safe.\n    return file_name_is_absolute($file) if $file =~ m|[:\\[]|;\n\n    # Here, we know the given file spec isn't absolute\n    return 0;\n}\n\n# Makes a directory absolute and cleans out /../ in paths like foo/../bar\n# On some platforms, this uses rel2abs(), while on others, realpath() is used.\n# realpath() requires that at least all path components except the last is an\n# existing directory.  On VMS, the last component of the directory spec must\n# exist.\nsub absolutedir {\n    my $dir = shift;\n\n    # realpath() is quite buggy on VMS.  It uses LIB$FID_TO_NAME, which\n    # will return the volume name for the device, no matter what.  Also,\n    # it will return an incorrect directory spec if the argument is a\n    # directory that doesn't exist.\n    if ($^O eq \"VMS\") {\n        return rel2abs($dir);\n    }\n\n    # realpath() on Windows seems to check if the directory actually exists,\n    # which isn't what is wanted here.  All we want to know is if a directory\n    # spec is absolute, not if it exists.\n    if ($^O eq \"MSWin32\") {\n        return rel2abs($dir);\n    }\n\n    # We use realpath() on Unix, since no other will properly clean out\n    # a directory spec.\n    use Cwd qw/realpath/;\n\n    return realpath($dir);\n}\n\n# Check if all paths are one and the same, using stat.  They must both exist\n# We need this for the cases when File::Spec doesn't detect case insensitivity\n# (File::Spec::Unix assumes case sensitivity)\nsub samedir {\n    die \"samedir expects two arguments\\n\" unless scalar @_ == 2;\n\n    my @stat0 = stat($_[0]);    # First argument\n    my @stat1 = stat($_[1]);    # Second argument\n\n    die \"Couldn't stat $_[0]\" unless @stat0;\n    die \"Couldn't stat $_[1]\" unless @stat1;\n\n    # Compare device number\n    return 0 unless ($stat0[0] == $stat1[0]);\n    # Compare \"inode\".  The perl manual recommends comparing as\n    # string rather than as number.\n    return 0 unless ($stat0[1] eq $stat1[1]);\n\n    return 1;                   # All the same\n}\n\nsub quotify {\n    my %processors = (\n        perl    => sub { my $x = shift;\n                         $x =~ s/([\\\\\\$\\@\"])/\\\\$1/g;\n                         return '\"'.$x.'\"'; },\n        maybeshell => sub { my $x = shift;\n                            (my $y = $x) =~ s/([\\\\\\\"])/\\\\$1/g;\n                            if ($x ne $y || $x =~ m|\\s|) {\n                                return '\"'.$y.'\"';\n                            } else {\n                                return $x;\n                            }\n                        },\n        );\n    my $for = shift;\n    my $processor =\n        defined($processors{$for}) ? $processors{$for} : sub { shift; };\n\n    return map { $processor->($_); } @_;\n}\n\n# collect_from_file($filename, $line_concat_cond_re, $line_concat)\n# $filename is a file name to read from\n# $line_concat_cond_re is a regexp detecting a line continuation ending\n# $line_concat is a CODEref that takes care of concatenating two lines\nsub collect_from_file {\n    my $filename = shift;\n    my $line_concat_cond_re = shift;\n    my $line_concat = shift;\n\n    open my $fh, $filename || die \"unable to read $filename: $!\\n\";\n    return sub {\n        my $saved_line = \"\";\n        $_ = \"\";\n        while (<$fh>) {\n            s|\\R$||;\n            if (defined $line_concat) {\n                $_ = $line_concat->($saved_line, $_);\n                $saved_line = \"\";\n            }\n            if (defined $line_concat_cond_re && /$line_concat_cond_re/) {\n                $saved_line = $_;\n                next;\n            }\n            return $_;\n        }\n        die \"$filename ending with continuation line\\n\" if $_;\n        close $fh;\n        return undef;\n    }\n}\n\n# collect_from_array($array, $line_concat_cond_re, $line_concat)\n# $array is an ARRAYref of lines\n# $line_concat_cond_re is a regexp detecting a line continuation ending\n# $line_concat is a CODEref that takes care of concatenating two lines\nsub collect_from_array {\n    my $array = shift;\n    my $line_concat_cond_re = shift;\n    my $line_concat = shift;\n    my @array = (@$array);\n\n    return sub {\n        my $saved_line = \"\";\n        $_ = \"\";\n        while (defined($_ = shift @array)) {\n            s|\\R$||;\n            if (defined $line_concat) {\n                $_ = $line_concat->($saved_line, $_);\n                $saved_line = \"\";\n            }\n            if (defined $line_concat_cond_re && /$line_concat_cond_re/) {\n                $saved_line = $_;\n                next;\n            }\n            return $_;\n        }\n        die \"input text ending with continuation line\\n\" if $_;\n        return undef;\n    }\n}\n\n# collect_information($lineiterator, $line_continue, $regexp => $CODEref, ...)\n# $lineiterator is a CODEref that delivers one line at a time.\n# All following arguments are regex/CODEref pairs, where the regexp detects a\n# line and the CODEref does something with the result of the regexp.\nsub collect_information {\n    my $lineiterator = shift;\n    my %collectors = @_;\n\n    while(defined($_ = $lineiterator->())) {\n        s|\\R$||;\n        my $found = 0;\n        if ($collectors{\"BEFORE\"}) {\n            $collectors{\"BEFORE\"}->($_);\n        }\n        foreach my $re (keys %collectors) {\n            if ($re !~ /^OTHERWISE|BEFORE|AFTER$/ && /$re/) {\n                $collectors{$re}->($lineiterator);\n                $found = 1;\n            };\n        }\n        if ($collectors{\"OTHERWISE\"}) {\n            $collectors{\"OTHERWISE\"}->($lineiterator, $_)\n                unless $found || !defined $collectors{\"OTHERWISE\"};\n        }\n        if ($collectors{\"AFTER\"}) {\n            $collectors{\"AFTER\"}->($_);\n        }\n    }\n}\n\n# tokenize($line)\n# tokenize($line,$separator)\n# $line is a line of text to split up into tokens\n# $separator [optional] is a regular expression that separates the tokens,\n# the default being spaces.  Do not use quotes of any kind as separators,\n# that will give undefined results.\n# Returns a list of tokens.\n#\n# Tokens are divided by separator (spaces by default).  If the tokens include\n# the separators, they have to be quoted with single or double quotes.\n# Double quotes inside a double quoted token must be escaped.  Escaping is done\n# with backslash.\n# Basically, the same quoting rules apply for \" and ' as in any\n# Unix shell.\nsub tokenize {\n    my $line = my $debug_line = shift;\n    my $separator = shift // qr|\\s+|;\n    my @result = ();\n\n    if ($ENV{CONFIGURE_DEBUG_TOKENIZE}) {\n        print STDERR \"DEBUG[tokenize]: \\$separator = $separator\\n\";\n    }\n\n    while ($line =~ s|^${separator}||, $line ne \"\") {\n        my $token = \"\";\n    again:\n        $line =~ m/^(.*?)(${separator}|\"|'|$)/;\n        $token .= $1;\n        $line = $2.$';\n\n        if ($line =~ m/^\"((?:[^\"\\\\]+|\\\\.)*)\"/) {\n            $token .= $1;\n            $line = $';\n            goto again;\n        } elsif ($line =~ m/^'([^']*)'/) {\n            $token .= $1;\n            $line = $';\n            goto again;\n        }\n        push @result, $token;\n    }\n\n    if ($ENV{CONFIGURE_DEBUG_TOKENIZE}) {\n        print STDERR \"DEBUG[tokenize]: Parsed '$debug_line' into:\\n\";\n        print STDERR \"DEBUG[tokenize]: ('\", join(\"', '\", @result), \"')\\n\";\n    }\n    return @result;\n}\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 1.2021484375,
          "content": "MODIFYING OPENSSL SOURCE\n========================\n\nThis document describes the way to add custom modifications to OpenSSL sources.\n\n If you are adding new public functions to the custom library build, you need to\n either add a prototype in one of the existing OpenSSL header files;\n or provide a new header file and edit\n [Configurations/unix-Makefile.tmpl](Configurations/unix-Makefile.tmpl)\n to pick up that file.\n\n After that, perform the following steps:\n\n    ./Configure -Werror --strict-warnings [your-options]\n    make update\n    make\n    make test\n\n `make update` ensures that your functions declarations are added to\n `util/libcrypto.num` or `util/libssl.num`.\n If you plan to submit the changes you made to OpenSSL\n (see [CONTRIBUTING.md](CONTRIBUTING.md)), it's worth running:\n\n    make doc-nits\n\n after running `make update` to ensure that documentation has correct format.\n\n `make update` also generates files related to OIDs (in the `crypto/objects/`\n folder) and errors.\n If a merge error occurs in one of these generated files, then the\n generated files need to be removed and regenerated using `make update`.\n To aid in this process, the generated files can be committed separately\n so they can be removed easily.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 68.708984375,
          "content": "Build and Install\n=================\n\nThis document describes installation on all supported operating\nsystems: the Unix/Linux family (including macOS), OpenVMS,\nand Windows.\n\nTable of Contents\n=================\n\n - [Prerequisites](#prerequisites)\n - [Notational Conventions](#notational-conventions)\n - [Quick Installation Guide](#quick-installation-guide)\n   - [Building OpenSSL](#building-openssl)\n   - [Installing OpenSSL](#installing-openssl)\n - [Configuration Options](#configuration-options)\n   - [API Level](#api-level)\n   - [Cross Compile Prefix](#cross-compile-prefix)\n   - [Build Type](#build-type)\n   - [Directories](#directories)\n   - [Compiler Warnings](#compiler-warnings)\n   - [Compression Algorithm Flags](#compression-algorithm-flags)\n   - [Seeding the Random Generator](#seeding-the-random-generator)\n   - [Setting the FIPS HMAC key](#setting-the-FIPS-HMAC-key)\n   - [Enable and Disable Features](#enable-and-disable-features)\n   - [Displaying configuration data](#displaying-configuration-data)\n - [Installation Steps in Detail](#installation-steps-in-detail)\n   - [Configure](#configure-openssl)\n   - [Build](#build-openssl)\n   - [Test](#test-openssl)\n   - [Install](#install-openssl)\n - [Advanced Build Options](#advanced-build-options)\n   - [Environment Variables](#environment-variables)\n   - [Makefile Targets](#makefile-targets)\n   - [Running Selected Tests](#running-selected-tests)\n - [Troubleshooting](#troubleshooting)\n   - [Configuration Problems](#configuration-problems)\n   - [Build Failures](#build-failures)\n   - [Test Failures](#test-failures)\n - [Notes](#notes)\n   - [Notes on multi-threading](#notes-on-multi-threading)\n   - [Notes on shared libraries](#notes-on-shared-libraries)\n   - [Notes on random number generation](#notes-on-random-number-generation)\n   - [Notes on assembler modules compilation](#notes-on-assembler-modules-compilation)\n\nPrerequisites\n=============\n\nTo install OpenSSL, you will need:\n\n * A \"make\" implementation\n * Perl 5 with core modules (please read [NOTES-PERL.md](NOTES-PERL.md))\n * The Perl module `Text::Template` (please read [NOTES-PERL.md](NOTES-PERL.md))\n * an ANSI C compiler\n * POSIX C library (at least POSIX.1-2008), or compatible types and\n   functionality.\n * a development environment in the form of development libraries and C\n   header files\n * a supported operating system\n\nFor additional platform specific requirements, solutions to specific\nissues and other details, please read one of these:\n\n * [Notes for UNIX-like platforms](NOTES-UNIX.md)\n * [Notes for Android platforms](NOTES-ANDROID.md)\n * [Notes for Windows platforms](NOTES-WINDOWS.md)\n * [Notes for the DOS platform with DJGPP](NOTES-DJGPP.md)\n * [Notes for the OpenVMS platform](NOTES-VMS.md)\n * [Notes for the HPE NonStop platform](NOTES-NONSTOP.md)\n * [Notes on POSIX](NOTES-POSIX.md)\n * [Notes on Perl](NOTES-PERL.md)\n * [Notes on Valgrind](NOTES-VALGRIND.md)\n\nNotational conventions\n======================\n\nThroughout this document, we use the following conventions.\n\nCommands\n--------\n\nAny line starting with a dollar sign is a command line.\n\n    $ command\n\nThe dollar sign indicates the shell prompt and is not to be entered as\npart of the command.\n\nChoices\n-------\n\nSeveral words in curly braces separated by pipe characters indicate a\n**mandatory choice**, to be replaced with one of the given words.\nFor example, the line\n\n    $ echo { WORD1 | WORD2 | WORD3 }\n\nrepresents one of the following three commands\n\n    $ echo WORD1\n    - or -\n    $ echo WORD2\n    - or -\n    $ echo WORD3\n\nOne or several words in square brackets separated by pipe characters\ndenote an **optional choice**.  It is similar to the mandatory choice,\nbut it can also be omitted entirely.\n\nSo the line\n\n    $ echo [ WORD1 | WORD2 | WORD3 ]\n\nrepresents one of the four commands\n\n    $ echo WORD1\n    - or -\n    $ echo WORD2\n    - or -\n    $ echo WORD3\n    - or -\n    $ echo\n\nArguments\n---------\n\n**Optional Arguments** are enclosed in square brackets.\n\n    [option...]\n\nA trailing ellipsis means that more than one could be specified.\n\nQuick Installation Guide\n========================\n\nIf you just want to get OpenSSL installed without bothering too much\nabout the details, here is the short version of how to build and install\nOpenSSL.  If any of the following steps fails, please consult the\n[Installation in Detail](#installation-steps-in-detail) section below.\n\nBuilding OpenSSL\n----------------\n\nUse the following commands to configure, build and test OpenSSL.\nThe testing is optional, but recommended if you intend to install\nOpenSSL for production use.\n\n### Unix / Linux / macOS / NonStop\n\n    $ ./Configure\n    $ make\n    $ make test\n\n### OpenVMS\n\nUse the following commands to build OpenSSL:\n\n    $ perl Configure\n    $ mms\n    $ mms test\n\n### Windows\n\nIf you are using Visual Studio, open a Developer Command Prompt and\nissue the following commands to build OpenSSL.\n\n    $ perl Configure\n    $ nmake\n    $ nmake test\n\nAs mentioned in the [Choices](#choices) section, you need to pick one\nof the four Configure targets in the first command.\n\nMost likely you will be using the `VC-WIN64A`/`VC-WIN64A-HYBRIDCRT` target for\n64bit Windows binaries (AMD64) or `VC-WIN32`/`VC-WIN32-HYBRIDCRT` for 32bit\nWindows binaries (X86).\nThe other two options are `VC-WIN64I` (Intel IA64, Itanium) and\n`VC-CE` (Windows CE) are rather uncommon nowadays.\n\nInstalling OpenSSL\n------------------\n\nThe following commands will install OpenSSL to a default system location.\n\n**Danger Zone:** even if you are impatient, please read the following two\nparagraphs carefully before you install OpenSSL.\n\nFor security reasons the default system location is by default not writable\nfor unprivileged users.  So for the final installation step administrative\nprivileges are required.  The default system location and the procedure to\nobtain administrative privileges depends on the operating system.\nIt is recommended to compile and test OpenSSL with normal user privileges\nand use administrative privileges only for the final installation step.\n\nOn some platforms OpenSSL is preinstalled as part of the Operating System.\nIn this case it is highly recommended not to overwrite the system versions,\nbecause other applications or libraries might depend on it.\nTo avoid breaking other applications, install your copy of OpenSSL to a\n[different location](#installing-to-a-different-location) which is not in\nthe global search path for system libraries.\n\nFinally, if you plan on using the FIPS module, you need to read the\n[Post-installation Notes](#post-installation-notes) further down.\n\n### Unix / Linux / macOS / NonStop\n\nDepending on your distribution, you need to run the following command as\nroot user or prepend `sudo` to the command:\n\n    $ make install\n\nBy default, OpenSSL will be installed to\n\n    /usr/local\n\nMore precisely, the files will be installed into the  subdirectories\n\n    /usr/local/bin\n    /usr/local/lib\n    /usr/local/include\n    ...\n\ndepending on the file type, as it is custom on Unix-like operating systems.\n\n### OpenVMS\n\nUse the following command to install OpenSSL.\n\n    $ mms install\n\nBy default, OpenSSL will be installed to\n\n    SYS$COMMON:[OPENSSL]\n\n### Windows\n\nIf you are using Visual Studio, open the Developer Command Prompt _elevated_\nand issue the following command.\n\n    $ nmake install\n\nThe easiest way to elevate the Command Prompt is to press and hold down both\nthe `<CTRL>` and `<SHIFT>` keys while clicking the menu item in the task menu.\n\nThe default installation location is\n\n    C:\\Program Files\\OpenSSL\n\nfor native binaries, or\n\n    C:\\Program Files (x86)\\OpenSSL\n\nfor 32bit binaries on 64bit Windows (WOW64).\n\n#### Installing to a different location\n\nTo install OpenSSL to a different location (for example into your home\ndirectory for testing purposes) run `Configure` as shown in the following\nexamples.\n\nThe options `--prefix` and `--openssldir` are explained in further detail in\n[Directories](#directories) below, and the values used here are mere examples.\n\nOn Unix:\n\n    $ ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl\n\nOn OpenVMS:\n\n    $ perl Configure --prefix=PROGRAM:[INSTALLS] --openssldir=SYS$MANAGER:[OPENSSL]\n\nNote: if you do add options to the configuration command, please make sure\nyou've read more than just this Quick Start, such as relevant `NOTES-*` files,\nthe options outline below, as configuration options may change the outcome\nin otherwise unexpected ways.\n\nConfiguration Options\n=====================\n\nThere are several options to `./Configure` to customize the build (note that\nfor Windows, the defaults for `--prefix` and `--openssldir` depend on what\nconfiguration is used and what Windows implementation OpenSSL is built on.\nFor more information, see the [Notes for Windows platforms](NOTES-WINDOWS.md).\n\nAPI Level\n---------\n\n    --api=x.y[.z]\n\nBuild the OpenSSL libraries to support the API for the specified version.\nIf [no-deprecated](#no-deprecated) is also given, don't build with support\nfor deprecated APIs in or below the specified version number.  For example,\nadding\n\n    --api=1.1.0 no-deprecated\n\nwill remove support for all APIs that were deprecated in OpenSSL version\n1.1.0 or below.  This is a rather specialized option for developers.\nIf you just intend to remove all deprecated APIs up to the current version\nentirely, just specify [no-deprecated](#no-deprecated).\nIf `--api` isn't given, it defaults to the current (minor) OpenSSL version.\n\nCross Compile Prefix\n--------------------\n\n    --cross-compile-prefix=<PREFIX>\n\nThe `<PREFIX>` to include in front of commands for your toolchain.\n\nIt is likely to have to end with dash, e.g. `a-b-c-` would invoke GNU compiler\nas `a-b-c-gcc`, etc.  Unfortunately cross-compiling is too case-specific to put\ntogether one-size-fits-all instructions.  You might have to pass more flags or\nset up environment variables to actually make it work.  Android and iOS cases\nare discussed in corresponding `Configurations/15-*.conf` files.  But there are\ncases when this option alone is sufficient.  For example to build the mingw64\ntarget on Linux `--cross-compile-prefix=x86_64-w64-mingw32-` works.  Naturally\nprovided that mingw packages are installed.  Today Debian and Ubuntu users\nhave option to install a number of prepackaged cross-compilers along with\ncorresponding run-time and development packages for \"alien\" hardware.  To give\nanother example `--cross-compile-prefix=mipsel-linux-gnu-` suffices in such\ncase.\n\nFor cross compilation, you must [configure manually](#manual-configuration).\nAlso, note that `--openssldir` refers to target's file system, not one you are\nbuilding on.\n\nBuild Type\n----------\n\n    --debug\n\nBuild OpenSSL with debugging symbols and zero optimization level.\n\n    --release\n\nBuild OpenSSL without debugging symbols.  This is the default.\n\nDirectories\n-----------\n\n### libdir\n\n    --libdir=DIR\n\nThe name of the directory under the top of the installation directory tree\n(see the `--prefix` option) where libraries will be installed.  By default\nthis is `lib`. Note that on Windows only static libraries (`*.lib`) will\nbe stored in this location. Shared libraries (`*.dll`) will always be\ninstalled to the `bin` directory.\n\nSome build targets have a multilib postfix set in the build configuration.\nFor these targets the default libdir is `lib<multilib-postfix>`. Please use\n`--libdir=lib` to override the libdir if adding the postfix is undesirable.\n\n### openssldir\n\n    --openssldir=DIR\n\nDirectory for OpenSSL configuration files, and also the default certificate\nand key store.  Defaults are:\n\n    Unix:           /usr/local/ssl\n    Windows:        C:\\Program Files\\Common Files\\SSL\n    OpenVMS:        SYS$COMMON:[OPENSSL-COMMON]\n\nFor 32bit Windows applications on Windows 64bit (WOW64), always replace\n`C:\\Program Files` by `C:\\Program Files (x86)`.\n\n### prefix\n\n    --prefix=DIR\n\nThe top of the installation directory tree.  Defaults are:\n\n    Unix:           /usr/local\n    Windows:        C:\\Program Files\\OpenSSL\n    OpenVMS:        SYS$COMMON:[OPENSSL]\n\nCompiler Warnings\n-----------------\n\n    --strict-warnings\n\nThis is a developer flag that switches on various compiler options recommended\nfor OpenSSL development.  It only works when using gcc or clang as the compiler.\nIf you are developing a patch for OpenSSL then it is recommended that you use\nthis option where possible.\n\nCompression Algorithm Flags\n---------------------------\n\n### with-brotli-include\n\n    --with-brotli-include=DIR\n\nThe directory for the location of the brotli include files (i.e. the location\nof the **brotli** include directory).  This option is only necessary if\n[enable-brotli](#enable-brotli) is used and the include files are not already\non the system include path.\n\n### with-brotli-lib\n\n    --with-brotli-lib=LIB\n\n**On Unix**: this is the directory containing the brotli libraries.\nIf not provided, the system library path will be used.\n\nThe names of the libraries are:\n\n* libbrotlicommon.a or libbrotlicommon.so\n* libbrotlidec.a or libbrotlidec.so\n* libbrotlienc.a or libbrotlienc.so\n\n**On Windows:** this is the directory containing the brotli libraries.\nIf not provided, the system library path will be used.\n\nThe names of the libraries are:\n\n* brotlicommon.lib\n* brotlidec.lib\n* brotlienc.lib\n\n### with-zlib-include\n\n    --with-zlib-include=DIR\n\nThe directory for the location of the zlib include file.  This option is only\nnecessary if [zlib](#zlib) is used and the include file is not\nalready on the system include path.\n\n### with-zlib-lib\n\n    --with-zlib-lib=LIB\n\n**On Unix**: this is the directory containing the zlib library.\nIf not provided the system library path will be used.\n\n**On Windows:** this is the filename of the zlib library (with or\nwithout a path).  This flag must be provided if the\n[zlib-dynamic](#zlib-dynamic) option is not also used. If `zlib-dynamic` is used\nthen this flag is optional and defaults to `ZLIB1` if not provided.\n\n**On VMS:** this is the filename of the zlib library (with or without a path).\nThis flag is optional and if not provided then `GNV$LIBZSHR`, `GNV$LIBZSHR32`\nor `GNV$LIBZSHR64` is used by default depending on the pointer size chosen.\n\n### with-zstd-include\n\n    --with-zstd-include=DIR\n\nThe directory for the location of the Zstd include file. This option is only\nnecessary if [enable-std](#enable-zstd) is used and the include file is not\nalready on the system include path.\n\nOpenSSL requires Zstd 1.4 or greater. The Linux kernel source contains a\n*zstd.h* file that is not compatible with the 1.4.x Zstd distribution, the\ncompilation will generate an error if the Linux *zstd.h* is included before\n(or instead of) the Zstd distribution header.\n\n### with-zstd-lib\n\n    --with-zstd-lib=LIB\n\n**On Unix**: this is the directory containing the Zstd library.\nIf not provided the system library path will be used.\n\n**On Windows:** this is the filename of the Zstd library (with or\nwithout a path).  This flag must be provided if the\n[enable-zstd-dynamic](#enable-zstd-dynamic) option is not also used.\nIf `zstd-dynamic` is used then this flag is optional and defaults\nto `LIBZSTD` if not provided.\n\nSeeding the Random Generator\n----------------------------\n\n    --with-rand-seed=seed1[,seed2,...]\n\nA comma separated list of seeding methods which will be tried by OpenSSL\nin order to obtain random input (a.k.a \"entropy\") for seeding its\ncryptographically secure random number generator (CSPRNG).\nThe current seeding methods are:\n\n### os\n\nUse a trusted operating system entropy source.\nThis is the default method if such an entropy source exists.\n\n### getrandom\n\nUse the [getrandom(2)][man-getrandom] or equivalent system call.\n\n[man-getrandom]: http://man7.org/linux/man-pages/man2/getrandom.2.html\n\n### devrandom\n\nUse the first device from the `DEVRANDOM` list which can be opened to read\nrandom bytes.  The `DEVRANDOM` preprocessor constant expands to\n\n    \"/dev/urandom\",\"/dev/random\",\"/dev/srandom\"\n\non most unix-ish operating systems.\n\n### egd\n\nCheck for an entropy generating daemon.\nThis source is ignored by the FIPS provider.\n\n### rdcpu\n\nUse the `RDSEED` or `RDRAND` command on x86 or `RNDRRS` command on aarch64\nif provided by the CPU.\n\n### none\n\nDisable automatic seeding.  This is the default on some operating systems where\nno suitable entropy source exists, or no support for it is implemented yet.\nThis option is ignored by the FIPS provider.\n\nFor more information, see the section [Notes on random number generation][rng]\nat the end of this document.\n\n[rng]: #notes-on-random-number-generation\n\n### jitter\n\nWhen configured with `enable-jitter`, a \"JITTER\" RNG is compiled that\ncan provide an alternative software seed source. It can be configured\nby setting `seed` option in `openssl.cnf`. A minimal `openssl.cnf` is\nshown below:\n\n    openssl_conf = openssl_init\n\n    [openssl_init]\n    random = random\n\n    [random]\n    seed=JITTER\n\nIt uses a statically linked [jitterentropy-library] as the seed source.\n\nAdditional configuration flags available:\n\n    --with-jitter-include=DIR\n\nThe directory for the location of the jitterentropy.h include file, if\nit is outside the system include path.\n\n    --with-jitter-lib=DIR\n\nThis is the directory containing the static libjitterentropy.a\nlibrary, if it is outside the system library path.\n\nSetting the FIPS HMAC key\n-------------------------\n\n    --fips-key=value\n\nAs part of its self-test validation, the FIPS module must verify itself\nby performing a SHA-256 HMAC computation on itself. The default key is\nthe SHA256 value of \"holy hand grenade of antioch\" and is sufficient\nfor meeting the FIPS requirements.\n\nTo change the key to a different value, use this flag. The value should\nbe a hex string no more than 64 characters.\n\nEnable and Disable Features\n---------------------------\n\nFeature options always come in pairs, an option to enable feature\n`xxxx`, and an option to disable it:\n\n    [ enable-xxxx | no-xxxx ]\n\nWhether a feature is enabled or disabled by default, depends on the feature.\nIn the following list, always the non-default variant is documented: if\nfeature `xxxx` is disabled by default then `enable-xxxx` is documented and\nif feature `xxxx` is enabled by default then `no-xxxx` is documented.\n\n### no-afalgeng\n\nDon't build the AFALG engine.\n\nThis option will be forced on a platform that does not support AFALG.\n\n### enable-ktls\n\nBuild with Kernel TLS support.\n\nThis option will enable the use of the Kernel TLS data-path, which can improve\nperformance and allow for the use of sendfile and splice system calls on\nTLS sockets.  The Kernel may use TLS accelerators if any are available on the\nsystem.  This option will be forced off on systems that do not support the\nKernel TLS data-path.\n\n### enable-asan\n\nBuild with the Address sanitiser.\n\nThis is a developer option only.  It may not work on all platforms and should\nnever be used in production environments.  It will only work when used with\ngcc or clang and should be used in conjunction with the [no-shared](#no-shared)\noption.\n\n### enable-acvp-tests\n\nBuild support for Automated Cryptographic Validation Protocol (ACVP)\ntests.\n\nThis is required for FIPS validation purposes. Certain ACVP tests require\naccess to algorithm internals that are not normally accessible.\nAdditional information related to ACVP can be found at\n<https://github.com/usnistgov/ACVP>.\n\n### no-apps\n\nDo not build apps, e.g. the openssl program. This is handy for minimization.\nThis option also disables tests.\n\n### no-asm\n\nDo not use assembler code.\n\nThis should be viewed as debugging/troubleshooting option rather than for\nproduction use.  On some platforms a small amount of assembler code may still\nbe used even with this option.\n\n### no-async\n\nDo not build support for async operations.\n\n### no-atexit\n\nDo not use `atexit()` in libcrypto builds.\n\n`atexit()` has varied semantics between platforms and can cause SIGSEGV in some\ncircumstances. This option disables the atexit registration of OPENSSL_cleanup.\nBy default, NonStop configurations use `no-atexit`.\n\n### no-autoalginit\n\nDon't automatically load all supported ciphers and digests.\n\nTypically OpenSSL will make available all of its supported ciphers and digests.\nFor a statically linked application this may be undesirable if small executable\nsize is an objective.  This only affects libcrypto.  Ciphers and digests will\nhave to be loaded manually using `EVP_add_cipher()` and `EVP_add_digest()`\nif this option is used.  This option will force a non-shared build.\n\n### no-autoerrinit\n\nDon't automatically load all libcrypto/libssl error strings.\n\nTypically OpenSSL will automatically load human readable error strings.  For a\nstatically linked application this may be undesirable if small executable size\nis an objective.\n\n### enable-brotli\n\nBuild with support for brotli compression/decompression.\n\n### enable-brotli-dynamic\n\nLike the enable-brotli option, but has OpenSSL load the brotli library dynamically\nwhen needed.\n\nThis is only supported on systems where loading of shared libraries is supported.\n\n### no-autoload-config\n\nDon't automatically load the default `openssl.cnf` file.\n\nTypically OpenSSL will automatically load a system config file which configures\ndefault SSL options.\n\n### enable-buildtest-c++\n\nWhile testing, generate C++ buildtest files that simply check that the public\nOpenSSL header files are usable standalone with C++.\n\nEnabling this option demands extra care.  For any compiler flag given directly\nas configuration option, you must ensure that it's valid for both the C and\nthe C++ compiler.  If not, the C++ build test will most likely break.  As an\nalternative, you can use the language specific variables, `CFLAGS` and `CXXFLAGS`.\n\n### --banner=text\n\nUse the specified text instead of the default banner at the end of\nconfiguration.\n\n### --w\n\nOn platforms where the choice of 32-bit or 64-bit architecture\nis not explicitly specified, `Configure` will print a warning\nmessage and wait for a few seconds to let you interrupt the\nconfiguration. Using this flag skips the wait.\n\n### no-bulk\n\nBuild only some minimal set of features.\nThis is a developer option used internally for CI build tests of the project.\n\n### no-cached-fetch\n\nNever cache algorithms when they are fetched from a provider.  Normally, a\nprovider indicates if the algorithms it supplies can be cached or not.  Using\nthis option will reduce run-time memory usage but it also introduces a\nsignificant performance penalty.  This option is primarily designed to help\nwith detecting incorrect reference counting.\n\n### no-capieng\n\nDon't build the CAPI engine.\n\nThis option will be forced if on a platform that does not support CAPI.\n\n### no-cmp\n\nDon't build support for Certificate Management Protocol (CMP)\nand Certificate Request Message Format (CRMF).\n\n### no-cms\n\nDon't build support for Cryptographic Message Syntax (CMS).\n\n### no-comp\n\nDon't build support for SSL/TLS compression.\n\nIf this option is enabled (the default), then compression will only work if\nthe zlib or `zlib-dynamic` options are also chosen.\n\n### enable-crypto-mdebug\n\nThis now only enables the `failed-malloc` feature.\n\n### enable-crypto-mdebug-backtrace\n\nThis is a no-op; the project uses the compiler's address/leak sanitizer instead.\n\n### no-ct\n\nDon't build support for Certificate Transparency (CT).\n\n### no-deprecated\n\nDon't build with support for deprecated APIs up until and including the version\ngiven with `--api` (or the current version, if `--api` wasn't specified).\n\n### no-dgram\n\nDon't build support for datagram based BIOs.\n\nSelecting this option will also force the disabling of DTLS.\n\n### no-docs\n\nDon't build and install documentation, i.e. manual pages in various forms.\n\n### no-dso\n\nDon't build support for loading Dynamic Shared Objects (DSO)\n\n### enable-devcryptoeng\n\nBuild the `/dev/crypto` engine.\n\nThis option is automatically selected on the BSD platform, in which case it can\nbe disabled with `no-devcryptoeng`.\n\n### no-dynamic-engine\n\nDon't build the dynamically loaded engines.\n\nThis only has an effect in a shared build.\n\n### no-ec\n\nDon't build support for Elliptic Curves.\n\n### no-ec2m\n\nDon't build support for binary Elliptic Curves\n\n### enable-ec_nistp_64_gcc_128\n\nEnable support for optimised implementations of some commonly used NIST\nelliptic curves.\n\nThis option is only supported on platforms:\n\n - with little-endian storage of non-byte types\n - that tolerate misaligned memory references\n - where the compiler:\n   - supports the non-standard type `__uint128_t`\n   - defines the built-in macro `__SIZEOF_INT128__`\n\n### enable-egd\n\nBuild support for gathering entropy from the Entropy Gathering Daemon (EGD).\n\n### no-engine\n\nDon't build support for loading engines.\n\n### no-err\n\nDon't compile in any error strings.\n\n### enable-external-tests\n\nEnable building of integration with external test suites.\n\nThis is a developer option and may not work on all platforms.  The following\nexternal test suites are currently supported:\n\n - GOST engine test suite\n - Python PYCA/Cryptography test suite\n - krb5 test suite\n\nSee the file [test/README-external.md](test/README-external.md)\nfor further details.\n\n### no-filenames\n\nDon't compile in filename and line number information (e.g.  for errors and\nmemory allocation).\n\n### enable-fips\n\nBuild (and install) the FIPS provider\n\n### no-fips-securitychecks\n\nDon't perform FIPS module run-time checks related to enforcement of security\nparameters such as minimum security strength of keys.\n\n### no-fips-post\n\nDon't perform FIPS module Power On Self Tests.\n\nThis option MUST be used for debugging only as it makes the FIPS provider\nnon-compliant. It is useful when setting breakpoints in FIPS algorithms.\n\n### enable-fips-jitter\n\nUse the CPU Jitter library as a FIPS validated entropy source.\n\nThis option will only produce a compliant FIPS provider if you have:\n\n1. independently performed the required [SP 800-90B] entropy assessments;\n2. meet the minimum required entropy as specified by [jitterentropy-library];\n3. obtain an [ESV] certificate for the [jitterentropy-library] and\n4. have had the resulting FIPS provider certified by the [CMVP].\n\nFailure to do all of these will produce a non-compliant FIPS provider.\n\n### enable-fuzz-libfuzzer, enable-fuzz-afl\n\nBuild with support for fuzzing using either libfuzzer or AFL.\n\nThese are developer options only.  They may not work on all  platforms and\nshould never be used in production environments.\n\nSee the file [fuzz/README.md](fuzz/README.md) for further details.\n\n### no-gost\n\nDon't build support for GOST based ciphersuites.\n\nNote that if this feature is enabled then GOST ciphersuites are only available\nif the GOST algorithms are also available through loading an externally supplied\nengine.\n\n### no-http\n\nDisable HTTP support.\n\n### no-legacy\n\nDon't build the legacy provider.\n\nDisabling this also disables the legacy algorithms: MD2 (already disabled by default).\n\n### no-makedepend\n\nDon't generate dependencies.\n\n### no-module\n\nDon't build any dynamically loadable engines.\n\nThis also implies `no-dynamic-engine`.\n\n### no-multiblock\n\nDon't build support for writing multiple records in one go in libssl\n\nNote: this is a different capability to the pipelining functionality.\n\n### no-nextprotoneg\n\nDon't build support for the Next Protocol Negotiation (NPN) TLS extension.\n\n### no-ocsp\n\nDon't build support for Online Certificate Status Protocol (OCSP).\n\n### no-padlockeng\n\nDon't build the padlock engine.\n\n### no-hw-padlock\n\nAs synonym for `no-padlockeng`.  Deprecated and should not be used.\n\n### no-pic\n\nDon't build with support for Position Independent Code.\n\n### enable-pie\n\nBuild with support for Position Independent Execution.\n\n### no-pinshared\n\nDon't pin the shared libraries.\n\nBy default OpenSSL will attempt to stay in memory until the process exits.\nThis is so that libcrypto and libssl can be properly cleaned up automatically\nvia an `atexit()` handler.  The handler is registered by libcrypto and cleans\nup both libraries.  On some platforms the `atexit()` handler will run on unload of\nlibcrypto (if it has been dynamically loaded) rather than at process exit.\n\nThis option can be used to stop OpenSSL from attempting to stay in memory until the\nprocess exits.  This could lead to crashes if either libcrypto or libssl have\nalready been unloaded at the point that the atexit handler is invoked, e.g.  on a\nplatform which calls `atexit()` on unload of the library, and libssl is unloaded\nbefore libcrypto then a crash is likely to happen.\n\nNote that shared library pinning is not automatically disabled for static builds,\ni.e., `no-shared` does not imply `no-pinshared`. This may come as a surprise when\nlinking libcrypto statically into a shared third-party library, because in this\ncase the shared library will be pinned. To prevent this behaviour, you need to\nconfigure the static build using `no-shared` and `no-pinshared` together.\n\nApplications can suppress running of the `atexit()` handler at run time by\nusing the `OPENSSL_INIT_NO_ATEXIT` option to `OPENSSL_init_crypto()`.\nSee the man page for it for further details.\n\n### no-posix-io\n\nDon't use POSIX IO capabilities.\n\n### no-psk\n\nDon't build support for Pre-Shared Key based ciphersuites.\n\n### no-rdrand\n\nDon't use hardware RDRAND capabilities.\n\n### no-rfc3779\n\nDon't build support for RFC3779, \"X.509 Extensions for IP Addresses and\nAS Identifiers\".\n\n### sctp\n\nBuild support for Stream Control Transmission Protocol (SCTP).\n\n### no-shared\n\nDo not create shared libraries, only static ones.\n\nSee [Notes on shared libraries](#notes-on-shared-libraries) below.\n\n### no-sm2-precomp\n\nDisable using the SM2 precomputed table on aarch64 to make the library smaller.\n\n### no-sock\n\nDon't build support for socket BIOs.\n\n### no-srp\n\nDon't build support for Secure Remote Password (SRP) protocol or\nSRP based ciphersuites.\n\n### no-srtp\n\nDon't build Secure Real-Time Transport Protocol (SRTP) support.\n\n### no-sse2\n\nExclude SSE2 code paths from 32-bit x86 assembly modules.\n\nNormally SSE2 extension is detected at run-time, but the decision whether or not\nthe machine code will be executed is taken solely on CPU capability vector.  This\nmeans that if you happen to run OS kernel which does not support SSE2 extension\non Intel P4 processor, then your application might be exposed to \"illegal\ninstruction\" exception.  There might be a way to enable support in kernel, e.g.\nFreeBSD kernel can be compiled with `CPU_ENABLE_SSE`, and there is a way to\ndisengage SSE2 code paths upon application start-up, but if you aim for wider\n\"audience\" running such kernel, consider `no-sse2`.  Both the `386` and `no-asm`\noptions imply `no-sse2`.\n\n### no-ssl-trace\n\nDon't build with SSL Trace capabilities.\n\nThis removes the `-trace` option from `s_client` and `s_server`, and omits the\n`SSL_trace()` function from libssl.\n\nDisabling `ssl-trace` may provide a small reduction in libssl binary size.\n\n### no-static-engine\n\nDon't build the statically linked engines.\n\nThis only has an impact when not built \"shared\".\n\n### no-stdio\n\nDon't use anything from the C header file `stdio.h` that makes use of the `FILE`\ntype.  Only libcrypto and libssl can be built in this way.  Using this option will\nsuppress building the command line applications.  Additionally, since the OpenSSL\ntests also use the command line applications, the tests will also be skipped.\n\n### no-tests\n\nDon't build test programs or run any tests.\n\n### enable-tfo\n\nBuild with support for TCP Fast Open (RFC7413). Supported on Linux, macOS and FreeBSD.\n\n### no-quic\n\nDon't build with QUIC support.\n\n### no-threads\n\nDon't build with support for multi-threaded applications.\n\n### threads\n\nBuild with support for multi-threaded applications.  Most platforms will enable\nthis by default.  However, if on a platform where this is not the case then this\nwill usually require additional system-dependent options!\n\nSee [Notes on multi-threading](#notes-on-multi-threading) below.\n\n### no-thread-pool\n\nDon't build with support for thread pool functionality.\n\n### thread-pool\n\nBuild with thread pool functionality. If enabled, OpenSSL algorithms may\nuse the thread pool to perform parallel computation. This option in itself\ndoes not enable OpenSSL to spawn new threads. Currently the only supported\nthread pool mechanism is the default thread pool.\n\n### no-default-thread-pool\n\nDon't build with support for default thread pool functionality.\n\n### default-thread-pool\n\nBuild with default thread pool functionality. If enabled, OpenSSL may create\nand manage threads up to a maximum number of threads authorized by the\napplication. Supported on POSIX compliant platforms and Windows.\n\n### enable-trace\n\nBuild with support for the integrated tracing api.\n\nSee manual pages OSSL_trace_set_channel(3) and OSSL_trace_enabled(3) for details.\n\n### enable-sslkeylog\n\nBuild with support for the SSLKEYLOGFILE environment variable\n\nWhen enabled, setting SSLKEYLOGFILE to a file path records the keys exchanged\nduring a TLS handshake for use in analysis tools like wireshark.  Note that the\nuse of this mechanism allows for decryption of application payloads found in\ncaptured packets using keys from the key log file and therefore has significant\nsecurity consequences.  See Section 3 of\n[the draft standard for SSLKEYLOGFILE](https://datatracker.ietf.org/doc/draft-ietf-tls-keylogfile/)\n\n### no-ts\n\nDon't build Time Stamping (TS) Authority support.\n\n### enable-ubsan\n\nBuild with the Undefined Behaviour sanitiser (UBSAN).\n\nThis is a developer option only.  It may not work on all platforms and should\nnever be used in production environments.  It will only work when used with\ngcc or clang and should be used in conjunction with the `-DPEDANTIC` option\n(or the `--strict-warnings` option).\n\n### no-ui-console\n\nDon't build with the User Interface (UI) console method\n\nThe User Interface console method enables text based console prompts.\n\n### enable-unit-test\n\nEnable additional unit test APIs.\n\nThis should not typically be used in production deployments.\n\n### no-uplink\n\nDon't build support for UPLINK interface.\n\n### enable-weak-ssl-ciphers\n\nBuild support for SSL/TLS ciphers that are considered \"weak\"\n\nEnabling this includes for example the RC4 based ciphersuites.\n\n### zlib\n\nBuild with support for zlib compression/decompression.\n\n### zlib-dynamic\n\nLike the zlib option, but has OpenSSL load the zlib library dynamically\nwhen needed.\n\nThis is only supported on systems where loading of shared libraries is supported.\n\n### enable-zstd\n\nBuild with support for Zstd compression/decompression.\n\n### enable-zstd-dynamic\n\nLike the enable-zstd option, but has OpenSSL load the Zstd library dynamically\nwhen needed.\n\nThis is only supported on systems where loading of shared libraries is supported.\n\n### enable-unstable-qlog\n\nEnables qlog output support for the QUIC protocol. This functionality is\nunstable and implements a draft version of the qlog specification. The qlog\noutput from OpenSSL will change in incompatible ways in future, and is not\nsubject to any format stability or compatibility guarantees at this time. See\nthe manpage openssl-qlog(7) for details.\n\n### 386\n\nIn 32-bit x86 builds, use the 80386 instruction set only in assembly modules\n\nThe default x86 code is more efficient, but requires at least an 486 processor.\nNote: This doesn't affect compiler generated code, so this option needs to be\naccompanied by a corresponding compiler-specific option.\n\n### no-{protocol}\n\n    no-{ssl|ssl3|tls|tls1|tls1_1|tls1_2|tls1_3|dtls|dtls1|dtls1_2}\n\nDon't build support for negotiating the specified SSL/TLS protocol.\n\nIf `no-tls` is selected then all of `tls1`, `tls1_1`, `tls1_2` and `tls1_3`\nare disabled.\nSimilarly `no-dtls` will disable `dtls1` and `dtls1_2`.  The `no-ssl` option is\nsynonymous with `no-ssl3`.  Note this only affects version negotiation.\nOpenSSL will still provide the methods for applications to explicitly select\nthe individual protocol versions.\n\n### no-integrity-only-ciphers\n\nDon't build support for integrity only ciphers in tls.\n\n### no-{protocol}-method\n\n    no-{ssl3|tls1|tls1_1|tls1_2|dtls1|dtls1_2}-method\n\nAnalogous to `no-{protocol}` but in addition do not build the methods for\napplications to explicitly select individual protocol versions.  Note that there\nis no `no-tls1_3-method` option because there is no application method for\nTLSv1.3.\n\nUsing individual protocol methods directly is deprecated.  Applications should\nuse `TLS_method()` instead.\n\n### enable-{algorithm}\n\n    enable-{md2|rc5}\n\nBuild with support for the specified algorithm.\n\n### no-{algorithm}\n\n    no-{aria|bf|blake2|camellia|cast|chacha|cmac|\n        des|dh|dsa|ecdh|ecdsa|idea|md4|mdc2|ocb|\n        poly1305|rc2|rc4|rmd160|scrypt|seed|\n        siphash|siv|sm2|sm3|sm4|whirlpool}\n\nBuild without support for the specified algorithm.\n\nThe `ripemd` algorithm is deprecated and if used is synonymous with `rmd160`.\n\n### Compiler-specific options\n\n    -Dxxx, -Ixxx, -Wp, -lxxx, -Lxxx, -Wl, -rpath, -R, -framework, -static\n\nThese system specific options will be recognised and passed through to the\ncompiler to allow you to define preprocessor symbols, specify additional\nlibraries, library directories or other compiler options.  It might be worth\nnoting that some compilers generate code specifically for processor the\ncompiler currently executes on.  This is not necessarily what you might have\nin mind, since it might be unsuitable for execution on other, typically older,\nprocessor.  Consult your compiler documentation.\n\nTake note of the [Environment Variables](#environment-variables) documentation\nbelow and how these flags interact with those variables.\n\n    -xxx, +xxx, /xxx\n\nAdditional options that are not otherwise recognised are passed through as\nthey are to the compiler as well.  Unix-style options beginning with a\n`-` or `+` and Windows-style options beginning with a `/` are recognised.\nAgain, consult your compiler documentation.\n\nIf the option contains arguments separated by spaces, then the URL-style\nnotation `%20` can be used for the space character in order to avoid having\nto quote the option.  For example, `-opt%20arg` gets expanded to `-opt arg`.\nIn fact, any ASCII character can be encoded as %xx using its hexadecimal\nencoding.\n\nTake note of the [Environment Variables](#environment-variables) documentation\nbelow and how these flags interact with those variables.\n\n### Environment Variables\n\n    VAR=value\n\nAssign the given value to the environment variable `VAR` for `Configure`.\n\nThese work just like normal environment variable assignments, but are supported\non all platforms and are confined to the configuration scripts only.\nThese assignments override the corresponding value in the inherited environment,\nif there is one.\n\nThe following variables are used as \"`make` variables\" and can be used as an\nalternative to giving preprocessor, compiler and linker options directly as\nconfiguration.  The following variables are supported:\n\n    AR              The static library archiver.\n    ARFLAGS         Flags for the static library archiver.\n    AS              The assembler compiler.\n    ASFLAGS         Flags for the assembler compiler.\n    CC              The C compiler.\n    CFLAGS          Flags for the C compiler.\n    CXX             The C++ compiler.\n    CXXFLAGS        Flags for the C++ compiler.\n    CPP             The C/C++ preprocessor.\n    CPPFLAGS        Flags for the C/C++ preprocessor.\n    CPPDEFINES      List of CPP macro definitions, separated\n                    by a platform specific character (':' or\n                    space for Unix, ';' for Windows, ',' for\n                    VMS).  This can be used instead of using\n                    -D (or what corresponds to that on your\n                    compiler) in CPPFLAGS.\n    CPPINCLUDES     List of CPP inclusion directories, separated\n                    the same way as for CPPDEFINES.  This can\n                    be used instead of -I (or what corresponds\n                    to that on your compiler) in CPPFLAGS.\n    HASHBANGPERL    Perl invocation to be inserted after '#!'\n                    in public perl scripts (only relevant on\n                    Unix).\n    LD              The program linker (not used on Unix, $(CC)\n                    is used there).\n    LDFLAGS         Flags for the shared library, DSO and\n                    program linker.\n    LDLIBS          Extra libraries to use when linking.\n                    Takes the form of a space separated list\n                    of library specifications on Unix and\n                    Windows, and as a comma separated list of\n                    libraries on VMS.\n    RANLIB          The library archive indexer.\n    RC              The Windows resource compiler.\n    RCFLAGS         Flags for the Windows resource compiler.\n    RM              The command to remove files and directories.\n\nThese cannot be mixed with compiling/linking flags given on the command line.\nIn other words, something like this isn't permitted.\n\n    $ ./Configure -DFOO CPPFLAGS=-DBAR -DCOOKIE\n\nBackward compatibility note:\n\nTo be compatible with older configuration scripts, the environment variables\nare ignored if compiling/linking flags are given on the command line, except\nfor the following:\n\n    AR, CC, CXX, CROSS_COMPILE, HASHBANGPERL, PERL, RANLIB, RC, and WINDRES\n\nFor example, the following command will not see `-DBAR`:\n\n    $ CPPFLAGS=-DBAR ./Configure -DCOOKIE\n\nHowever, the following will see both set variables:\n\n    $ CC=gcc CROSS_COMPILE=x86_64-w64-mingw32- ./Configure -DCOOKIE\n\nIf `CC` is set, it is advisable to also set `CXX` to ensure both the C and C++\ncompiler are in the same \"family\".  This becomes relevant with\n`enable-external-tests` and `enable-buildtest-c++`.\n\n### Reconfigure\n\n    reconf\n    reconfigure\n\nReconfigure from earlier data.\n\nThis fetches the previous command line options and environment from data\nsaved in `configdata.pm` and runs the configuration process again, using\nthese options and environment.  Note: NO other option is permitted together\nwith `reconf`.  Note: The original configuration saves away values for ALL\nenvironment variables that were used, and if they weren't defined, they are\nstill saved away with information that they weren't originally defined.\nThis information takes precedence over environment variables that are\ndefined when reconfiguring.\n\nDisplaying configuration data\n-----------------------------\n\nThe configuration script itself will say very little, and finishes by\ncreating `configdata.pm`.  This perl module can be loaded by other scripts\nto find all the configuration data, and it can also be used as a script to\ndisplay all sorts of configuration data in a human readable form.\n\nFor more information, please do:\n\n    $ ./configdata.pm --help                         # Unix\n\nor\n\n    $ perl configdata.pm --help                      # Windows and VMS\n\nInstallation Steps in Detail\n============================\n\nConfigure OpenSSL\n-----------------\n\n### Automatic Configuration\n\nIn previous version, the `config` script determined the platform type and\ncompiler and then called `Configure`. Starting with version 3.0, they are\nthe same.\n\n#### Unix / Linux / macOS\n\n    $ ./Configure [options...]\n\n#### OpenVMS\n\n    $ perl Configure [options...]\n\n#### Windows\n\n    $ perl Configure [options...]\n\n### Manual Configuration\n\nOpenSSL knows about a range of different operating system, hardware and\ncompiler combinations.  To see the ones it knows about, run\n\n    $ ./Configure LIST                               # Unix\n\nor\n\n    $ perl Configure LIST                            # All other platforms\n\nFor the remainder of this text, the Unix form will be used in all examples.\nPlease use the appropriate form for your platform.\n\nPick a suitable name from the list that matches your system.  For most\noperating systems there is a choice between using cc or gcc.\nWhen you have identified your system (and if necessary compiler) use this\nname as the argument to `Configure`.  For example, a `linux-elf` user would\nrun:\n\n    $ ./Configure linux-elf [options...]\n\n### Creating your own Configuration\n\nIf your system isn't listed, you will have to create a configuration\nfile named `Configurations/YOURFILENAME.conf` (replace `YOURFILENAME`\nwith a filename of your choosing) and add the correct\nconfiguration for your system.  See the available configs as examples\nand read [Configurations/README.md](Configurations/README.md) and\n[Configurations/README-design.md](Configurations/README-design.md)\nfor more information.\n\nThe generic configurations `cc` or `gcc` should usually work on 32 bit\nUnix-like systems.\n\n`Configure` creates a build file (`Makefile` on Unix, `makefile` on Windows\nand `descrip.mms` on OpenVMS) from a suitable template in `Configurations/`,\nand defines various macros in `include/openssl/configuration.h` (generated\nfrom `include/openssl/configuration.h.in`.\n\nIf none of the generated build files suit your purpose, it's possible to\nwrite your own build file template and give its name through the environment\nvariable `BUILDFILE`.  For example, Ninja build files could be supported by\nwriting `Configurations/build.ninja.tmpl` and then configure with `BUILDFILE`\nset like this (Unix syntax shown, you'll have to adapt for other platforms):\n\n    $ BUILDFILE=build.ninja perl Configure [options...]\n\n### Out of Tree Builds\n\nOpenSSL can be configured to build in a build directory separate from the\nsource code directory.  It's done by placing yourself in some other\ndirectory and invoking the configuration commands from there.\n\n#### Unix example\n\n    $ mkdir /var/tmp/openssl-build\n    $ cd /var/tmp/openssl-build\n    $ /PATH/TO/OPENSSL/SOURCE/Configure [options...]\n\n#### OpenVMS example\n\n    $ set default sys$login:\n    $ create/dir [.tmp.openssl-build]\n    $ set default [.tmp.openssl-build]\n    $ perl D:[PATH.TO.OPENSSL.SOURCE]Configure [options...]\n\n#### Windows example\n\n    $ C:\n    $ mkdir \\temp-openssl\n    $ cd \\temp-openssl\n    $ perl d:\\PATH\\TO\\OPENSSL\\SOURCE\\Configure [options...]\n\nPaths can be relative just as well as absolute.  `Configure` will do its best\nto translate them to relative paths whenever possible.\n\nBuild OpenSSL\n-------------\n\nBuild OpenSSL by running:\n\n    $ make                                           # Unix\n    $ mms                                            ! (or mmk) OpenVMS\n    $ nmake                                          # Windows\n\nThis will build the OpenSSL libraries (`libcrypto.a` and `libssl.a` on\nUnix, corresponding on other platforms) and the OpenSSL binary\n(`openssl`).  The libraries will be built in the top-level directory,\nand the binary will be in the `apps/` subdirectory.\n\nIf the build fails, take a look at the [Build Failures](#build-failures)\nsubsection of the [Troubleshooting](#troubleshooting) section.\n\nTest OpenSSL\n------------\n\nAfter a successful build, and before installing, the libraries should\nbe tested.  Run:\n\n    $ make test                                      # Unix\n    $ mms test                                       ! OpenVMS\n    $ nmake test                                     # Windows\n\n**Warning:** you MUST run the tests from an unprivileged account (or disable\nyour privileges temporarily if your platform allows it).\n\nSee [test/README.md](test/README.md) for further details how run tests.\n\nSee [test/README-dev.md](test/README-dev.md) for guidelines on adding tests.\n\nInstall OpenSSL\n---------------\n\nIf everything tests ok, install OpenSSL with\n\n    $ make install                                   # Unix\n    $ mms install                                    ! OpenVMS\n    $ nmake install                                  # Windows\n\nNote that in order to perform the install step above you need to have\nappropriate permissions to write to the installation directory.\n\nThe above commands will install all the software components in this\ndirectory tree under `<PREFIX>` (the directory given with `--prefix` or\nits default):\n\n### Unix / Linux / macOS\n\n    bin/           Contains the openssl binary and a few other\n                   utility scripts.\n    include/openssl\n                   Contains the header files needed if you want\n                   to build your own programs that use libcrypto\n                   or libssl.\n    lib            Contains the OpenSSL library files.\n    lib/engines    Contains the OpenSSL dynamically loadable engines.\n\n    share/man/man1 Contains the OpenSSL command line man-pages.\n    share/man/man3 Contains the OpenSSL library calls man-pages.\n    share/man/man5 Contains the OpenSSL configuration format man-pages.\n    share/man/man7 Contains the OpenSSL other misc man-pages.\n\n    share/doc/openssl/html/man1\n    share/doc/openssl/html/man3\n    share/doc/openssl/html/man5\n    share/doc/openssl/html/man7\n                   Contains the HTML rendition of the man-pages.\n\n### OpenVMS\n\n'arch' is replaced with the architecture name, `ALPHA` or `IA64`,\n'sover' is replaced with the shared library version (`0101` for 1.1), and\n'pz' is replaced with the pointer size OpenSSL was built with:\n\n    [.EXE.'arch']  Contains the openssl binary.\n    [.EXE]         Contains a few utility scripts.\n    [.include.openssl]\n                   Contains the header files needed if you want\n                   to build your own programs that use libcrypto\n                   or libssl.\n    [.LIB.'arch']  Contains the OpenSSL library files.\n    [.ENGINES'sover''pz'.'arch']\n                   Contains the OpenSSL dynamically loadable engines.\n    [.SYS$STARTUP] Contains startup, login and shutdown scripts.\n                   These define appropriate logical names and\n                   command symbols.\n    [.SYSTEST]     Contains the installation verification procedure.\n    [.HTML]        Contains the HTML rendition of the manual pages.\n\n### Additional Directories\n\nAdditionally, install will add the following directories under\nOPENSSLDIR (the directory given with `--openssldir` or its default)\nfor you convenience:\n\n    certs          Initially empty, this is the default location\n                   for certificate files.\n    private        Initially empty, this is the default location\n                   for private key files.\n    misc           Various scripts.\n\nThe installation directory should be appropriately protected to ensure\nunprivileged users cannot make changes to OpenSSL binaries or files, or\ninstall engines.  If you already have a pre-installed version of OpenSSL as\npart of your Operating System it is recommended that you do not overwrite\nthe system version and instead install to somewhere else.\n\nPackage builders who want to configure the library for standard locations,\nbut have the package installed somewhere else so that it can easily be\npackaged, can use\n\n    $ make DESTDIR=/tmp/package-root install         # Unix\n    $ mms/macro=\"DESTDIR=TMP:[PACKAGE-ROOT]\" install ! OpenVMS\n\nThe specified destination directory will be prepended to all installation\ntarget paths.\n\nCompatibility issues with previous OpenSSL versions\n---------------------------------------------------\n\n### COMPILING existing applications\n\nStarting with version 1.1.0, OpenSSL hides a number of structures that were\npreviously open.  This includes all internal libssl structures and a number\nof EVP types.  Accessor functions have been added to allow controlled access\nto the structures' data.\n\nThis means that some software needs to be rewritten to adapt to the new ways\nof doing things.  This often amounts to allocating an instance of a structure\nexplicitly where you could previously allocate them on the stack as automatic\nvariables, and using the provided accessor functions where you would previously\naccess a structure's field directly.\n\nSome APIs have changed as well.  However, older APIs have been preserved when\npossible.\n\nPost-installation Notes\n-----------------------\n\nWith the default OpenSSL installation comes a FIPS provider module, which\nneeds some post-installation attention, without which it will not be usable.\nThis involves using the following command:\n\n    $ openssl fipsinstall\n\nSee the openssl-fipsinstall(1) manual for details and examples.\n\nAdvanced Build Options\n======================\n\nEnvironment Variables\n---------------------\n\nA number of environment variables can be used to provide additional control\nover the build process.  Typically these should be defined prior to running\n`Configure`.  Not all environment variables are relevant to all platforms.\n\n    AR\n                   The name of the ar executable to use.\n\n    BUILDFILE\n                   Use a different build file name than the platform default\n                   (\"Makefile\" on Unix-like platforms, \"makefile\" on native Windows,\n                   \"descrip.mms\" on OpenVMS).  This requires that there is a\n                   corresponding build file template.\n                   See [Configurations/README.md](Configurations/README.md)\n                   for further information.\n\n    CC\n                   The compiler to use. Configure will attempt to pick a default\n                   compiler for your platform but this choice can be overridden\n                   using this variable. Set it to the compiler executable you wish\n                   to use, e.g. gcc or clang.\n\n    CROSS_COMPILE\n                   This environment variable has the same meaning as for the\n                   \"--cross-compile-prefix\" Configure flag described above. If both\n                   are set then the Configure flag takes precedence.\n\n    HASHBANGPERL\n                   The command string for the Perl executable to insert in the\n                   #! line of perl scripts that will be publicly installed.\n                   Default: /usr/bin/env perl\n                   Note: the value of this variable is added to the same scripts\n                   on all platforms, but it's only relevant on Unix-like platforms.\n\n    KERNEL_BITS\n                   This can be the value `32` or `64` to specify the architecture\n                   when it is not \"obvious\" to the configuration. It should generally\n                   not be necessary to specify this environment variable.\n\n    NM\n                   The name of the nm executable to use.\n\n    OPENSSL_LOCAL_CONFIG_DIR\n                   OpenSSL comes with a database of information about how it\n                   should be built on different platforms as well as build file\n                   templates for those platforms. The database is comprised of\n                   \".conf\" files in the Configurations directory.  The build\n                   file templates reside there as well as \".tmpl\" files. See the\n                   file [Configurations/README.md](Configurations/README.md)\n                   for further information about the format of \".conf\" files\n                   as well as information on the \".tmpl\" files.\n                   In addition to the standard \".conf\" and \".tmpl\" files, it is\n                   possible to create your own \".conf\" and \".tmpl\" files and\n                   store them locally, outside the OpenSSL source tree.\n                   This environment variable can be set to the directory where\n                   these files are held and will be considered by Configure\n                   before it looks in the standard directories.\n\n    PERL\n                   The name of the Perl executable to use when building OpenSSL.\n                   Only needed if building should use a different Perl executable\n                   than what is used to run the Configure script.\n\n    RANLIB\n                   The name of the ranlib executable to use.\n\n    RC\n                   The name of the rc executable to use. The default will be as\n                   defined for the target platform in the \".conf\" file. If not\n                   defined then \"windres\" will be used. The WINDRES environment\n                   variable is synonymous to this. If both are defined then RC\n                   takes precedence.\n\n    WINDRES\n                   See RC.\n\nMakefile Targets\n----------------\n\nThe `Configure` script generates a Makefile in a format relevant to the specific\nplatform.  The Makefiles provide a number of targets that can be used.  Not all\ntargets may be available on all platforms.  Only the most common targets are\ndescribed here.  Examine the Makefiles themselves for the full list.\n\n    all\n                   The target to build all the software components and\n                   documentation.\n\n    build_sw\n                   Build all the software components.\n                   THIS IS THE DEFAULT TARGET.\n\n    build_docs\n                   Build all documentation components.\n\n    debuginfo\n                    On unix platforms, this target can be used to create .debug\n                    libraries, which separate the DWARF information in the\n                    shared library ELF files into a separate file for use\n                    in post-mortem (core dump) debugging\n\n    clean\n                   Remove all build artefacts and return the directory to a \"clean\"\n                   state.\n\n    depend\n                   Rebuild the dependencies in the Makefiles. This is a legacy\n                   option that no longer needs to be used since OpenSSL 1.1.0.\n\n    install\n                   Install all OpenSSL components.\n\n    install_sw\n                   Only install the OpenSSL software components.\n\n    install_docs\n                   Only install the OpenSSL documentation components.\n\n    install_man_docs\n                   Only install the OpenSSL man pages (Unix only).\n\n    install_html_docs\n                   Only install the OpenSSL HTML documentation.\n\n    install_fips\n                   Install the FIPS provider module configuration file.\n\n    list-tests\n                   Prints a list of all the self test names.\n\n    test\n                   Build and run the OpenSSL self tests.\n\n    uninstall\n                   Uninstall all OpenSSL components.\n\n    reconfigure\n    reconf\n                   Re-run the configuration process, as exactly as the last time\n                   as possible.\n\n    update\n                   This is a developer option. If you are developing a patch for\n                   OpenSSL you may need to use this if you want to update\n                   automatically generated files; add new error codes or add new\n                   (or change the visibility of) public API functions. (Unix only).\n\nRunning Selected Tests\n----------------------\n\nYou can specify a set of tests to be performed\nusing the `make` variable `TESTS`.\n\nSee the section [Running Selected Tests of\ntest/README.md](test/README.md#running-selected-tests).\n\nTroubleshooting\n===============\n\nConfiguration Problems\n----------------------\n\n### Selecting the correct target\n\nThe `./Configure` script tries hard to guess your operating system, but in some\ncases it does not succeed. You will see a message like the following:\n\n    $ ./Configure\n    Operating system: x86-whatever-minix\n    This system (minix) is not supported. See file INSTALL.md for details.\n\nEven if the automatic target selection by the `./Configure` script fails,\nchances are that you still might find a suitable target in the `Configurations`\ndirectory, which you can supply to the `./Configure` command,\npossibly after some adjustment.\n\nThe `Configurations/` directory contains a lot of examples of such targets.\nThe main configuration file is [10-main.conf], which contains all targets that\nare officially supported by the OpenSSL team. Other configuration files contain\ntargets contributed by other OpenSSL users. The list of targets can be found in\na Perl list `my %targets = ( ... )`.\n\n    my %targets = (\n    ...\n    \"target-name\" => {\n        inherit_from     => [ \"base-target\" ],\n        CC               => \"...\",\n        cflags           => add(\"...\"),\n        asm_arch         => '...',\n        perlasm_scheme   => \"...\",\n    },\n    ...\n    )\n\nIf you call `./Configure` without arguments, it will give you a list of all\nknown targets. Using `grep`, you can lookup the target definition in the\n`Configurations/` directory. For example the `android-x86_64` can be found in\n[Configurations/15-android.conf](Configurations/15-android.conf).\n\nThe directory contains two README files, which explain the general syntax and\ndesign of the configuration files.\n\n - [Configurations/README.md](Configurations/README.md)\n - [Configurations/README-design.md](Configurations/README-design.md)\n\nIf you need further help, try to search the [openssl-users] mailing list\nor the [GitHub Issues] for existing solutions. If you don't find anything,\nyou can [raise an issue] to ask a question yourself.\n\nMore about our support resources can be found in the [SUPPORT] file.\n\n### Configuration Errors\n\nIf the `./config` or `./Configure` command fails with an error message,\nread the error message carefully and try to figure out whether you made\na mistake (e.g., by providing a wrong option), or whether the script is\nworking incorrectly. If you think you encountered a bug, please\n[raise an issue] on GitHub to file a bug report.\n\nAlong with a short description of the bug, please provide the complete\nconfigure command line and the relevant output including the error message.\n\nNote: To make the output readable, please add a 'code fence' (three backquotes\n` ``` ` on a separate line) before and after your output:\n\n     ```\n     ./Configure [your arguments...]\n\n     [output...]\n\n     ```\n\nBuild Failures\n--------------\n\nIf the build fails, look carefully at the output. Try to locate and understand\nthe error message. It might be that the compiler is already telling you\nexactly what you need to do to fix your problem.\n\nThere may be reasons for the failure that aren't problems in OpenSSL itself,\nfor example if the compiler reports missing standard or third party headers.\n\nIf the build succeeded previously, but fails after a source or configuration\nchange, it might be helpful to clean the build tree before attempting another\nbuild.  Use this command:\n\n    $ make clean                                     # Unix\n    $ mms clean                                      ! (or mmk) OpenVMS\n    $ nmake clean                                    # Windows\n\nAssembler error messages can sometimes be sidestepped by using the `no-asm`\nconfiguration option. See also [notes](#notes-on-assembler-modules-compilation).\n\nCompiling parts of OpenSSL with gcc and others with the system compiler will\nresult in unresolved symbols on some systems.\n\nIf you are still having problems, try to search the [openssl-users] mailing\nlist or the [GitHub Issues] for existing solutions. If you think you\nencountered an OpenSSL bug, please [raise an issue] to file a bug report.\nPlease take the time to review the existing issues first; maybe the bug was\nalready reported or has already been fixed.\n\nTest Failures\n-------------\n\nIf some tests fail, look at the output.  There may be reasons for the failure\nthat isn't a problem in OpenSSL itself (like an OS malfunction or a Perl issue).\n\nYou may want increased verbosity, that can be accomplished as described in\nsection [Test Failures of test/README.md](test/README.md#test-failures).\n\nYou may also want to selectively specify which test(s) to perform. This can be\ndone using the `make` variable `TESTS` as described in section [Running\nSelected Tests of test/README.md](test/README.md#running-selected-tests).\n\nIf you find a problem with OpenSSL itself, try removing any\ncompiler optimization flags from the `CFLAGS` line in the Makefile and\nrun `make clean; make` or corresponding.\n\nTo report a bug please open an issue on GitHub, at\n<https://github.com/openssl/openssl/issues>.\n\nNotes\n=====\n\nNotes on multi-threading\n------------------------\n\nFor some systems, the OpenSSL `Configure` script knows what compiler options\nare needed to generate a library that is suitable for multi-threaded\napplications.  On these systems, support for multi-threading is enabled\nby default; use the `no-threads` option to disable (this should never be\nnecessary).\n\nOn other systems, to enable support for multi-threading, you will have\nto specify at least two options: `threads`, and a system-dependent option.\n(The latter is `-D_REENTRANT` on various systems.)  The default in this\ncase, obviously, is not to include support for multi-threading (but\nyou can still use `no-threads` to suppress an annoying warning message\nfrom the `Configure` script.)\n\nOpenSSL provides built-in support for two threading models: pthreads (found on\nmost UNIX/Linux systems), and Windows threads.  No other threading models are\nsupported.  If your platform does not provide pthreads or Windows threads then\nyou should use `Configure` with the `no-threads` option.\n\nFor pthreads, all locks are non-recursive. In addition, in a debug build,\nthe mutex attribute `PTHREAD_MUTEX_ERRORCHECK` is used. If this is not\navailable on your platform, you might have to add\n`-DOPENSSL_NO_MUTEX_ERRORCHECK` to your `Configure` invocation.\n(On Linux `PTHREAD_MUTEX_ERRORCHECK` is an enum value, so a built-in\nifdef test cannot be used.)\n\nNotes on shared libraries\n-------------------------\n\nFor most systems the OpenSSL `Configure` script knows what is needed to\nbuild shared libraries for libcrypto and libssl.  On these systems\nthe shared libraries will be created by default.  This can be suppressed and\nonly static libraries created by using the `no-shared` option.  On systems\nwhere OpenSSL does not know how to build shared libraries the `no-shared`\noption will be forced and only static libraries will be created.\n\nShared libraries are named a little differently on different platforms.\nOne way or another, they all have the major OpenSSL version number as\npart of the file name, i.e.  for OpenSSL 1.1.x, `1.1` is somehow part of\nthe name.\n\nOn most POSIX platforms, shared libraries are named `libcrypto.so.1.1`\nand `libssl.so.1.1`.\n\non Cygwin, shared libraries are named `cygcrypto-1.1.dll` and `cygssl-1.1.dll`\nwith import libraries `libcrypto.dll.a` and `libssl.dll.a`.\n\nOn Windows build with MSVC or using MingW, shared libraries are named\n`libcrypto-1_1.dll` and `libssl-1_1.dll` for 32-bit Windows,\n`libcrypto-1_1-x64.dll` and `libssl-1_1-x64.dll` for 64-bit x86_64 Windows,\nand `libcrypto-1_1-ia64.dll` and `libssl-1_1-ia64.dll` for IA64 Windows.\nWith MSVC, the import libraries are named `libcrypto.lib` and `libssl.lib`,\nwhile with MingW, they are named `libcrypto.dll.a` and `libssl.dll.a`.\n\nOn VMS, shareable images (VMS speak for shared libraries) are named\n`ossl$libcrypto0101_shr.exe` and `ossl$libssl0101_shr.exe`.  However, when\nOpenSSL is specifically built for 32-bit pointers, the shareable images\nare named `ossl$libcrypto0101_shr32.exe` and `ossl$libssl0101_shr32.exe`\ninstead, and when built for 64-bit pointers, they are named\n`ossl$libcrypto0101_shr64.exe` and `ossl$libssl0101_shr64.exe`.\n\nNotes on random number generation\n---------------------------------\n\nAvailability of cryptographically secure random numbers is required for\nsecret key generation.  OpenSSL provides several options to seed the\ninternal CSPRNG.  If not properly seeded, the internal CSPRNG will refuse\nto deliver random bytes and a \"PRNG not seeded error\" will occur.\n\nThe seeding method can be configured using the `--with-rand-seed` option,\nwhich can be used to specify a comma separated list of seed methods.\nHowever, in most cases OpenSSL will choose a suitable default method,\nso it is not necessary to explicitly provide this option.  Note also\nthat not all methods are available on all platforms.  The FIPS provider will\nsilently ignore seed sources that were not validated.\n\nI) On operating systems which provide a suitable randomness source (in\nform  of a system call or system device), OpenSSL will use the optimal\navailable  method to seed the CSPRNG from the operating system's\nrandomness sources.  This corresponds to the option `--with-rand-seed=os`.\n\nII) On systems without such a suitable randomness source, automatic seeding\nand reseeding is disabled (`--with-rand-seed=none`) and it may be necessary\nto install additional support software to obtain a random seed and reseed\nthe CSPRNG manually.  Please check out the manual pages for `RAND_add()`,\n`RAND_bytes()`, `RAND_egd()`, and the FAQ for more information.\n\nNotes on assembler modules compilation\n--------------------------------------\n\nCompilation of some code paths in assembler modules might depend on whether the\ncurrent assembler version supports certain ISA extensions or not. Code paths\nthat use the AES-NI, PCLMULQDQ, SSSE3, and SHA extensions are always assembled.\nApart from that, the minimum requirements for the assembler versions are shown\nin the table below:\n\n| ISA extension | GNU as | nasm   | llvm    |\n|---------------|--------|--------|---------|\n| AVX           | 2.19   | 2.09   | 3.0     |\n| AVX2          | 2.22   | 2.10   | 3.1     |\n| ADCX/ADOX     | 2.23   | 2.10   | 3.3     |\n| AVX512        | 2.25   | 2.11.8 | 3.6 (*) |\n| AVX512IFMA    | 2.26   | 2.11.8 | 6.0 (*) |\n| VAES          | 2.30   | 2.13.3 | 6.0 (*) |\n\n---\n\n(*) Even though AVX512 support was implemented in llvm 3.6, prior to version 7.0\nan explicit -march flag was apparently required to compile assembly modules. But\nthen the compiler generates processor-specific code, which in turn contradicts\nthe idea of performing dispatch at run-time, which is facilitated by the special\nvariable `OPENSSL_ia32cap`. For versions older than 7.0, it is possible to work\naround the problem by forcing the build procedure to use the following script:\n\n    #!/bin/sh\n    exec clang -no-integrated-as \"$@\"\n\ninstead of the real clang. In which case it doesn't matter what clang version\nis used, as it is the version of the GNU assembler that will be checked.\n\n---\n\n<!-- Links  -->\n\n[openssl-users]:\n    <https://mta.openssl.org/mailman/listinfo/openssl-users>\n\n[SUPPORT]:\n    ./SUPPORT.md\n\n[GitHub Issues]:\n    <https://github.com/openssl/openssl/issues>\n\n[raise an issue]:\n    <https://github.com/openssl/openssl/issues/new/choose>\n\n[10-main.conf]:\n    Configurations/10-main.conf\n\n[CMVP]:\n    <https://csrc.nist.gov/projects/cryptographic-module-validation-program>\n\n[ESV]:\n    <https://csrc.nist.gov/Projects/cryptographic-module-validation-program/entropy-validations>\n\n[SP 800-90B]:\n    <https://csrc.nist.gov/pubs/sp/800/90/b/final>\n\n[jitterentropy-library]:\n    <https://github.com/smuellerDD/jitterentropy-library>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 9.9365234375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 87.853515625,
          "content": "NEWS\n====\n\nThis file gives a brief overview of the major changes between each OpenSSL\nrelease. For more details please read the CHANGES file.\n\nOpenSSL Releases\n----------------\n\n - [OpenSSL 3.5](#openssl-35)\n - [OpenSSL 3.4](#openssl-34)\n - [OpenSSL 3.3](#openssl-33)\n - [OpenSSL 3.2](#openssl-32)\n - [OpenSSL 3.1](#openssl-31)\n - [OpenSSL 3.0](#openssl-30)\n - [OpenSSL 1.1.1](#openssl-111)\n - [OpenSSL 1.1.0](#openssl-110)\n - [OpenSSL 1.0.2](#openssl-102)\n - [OpenSSL 1.0.1](#openssl-101)\n - [OpenSSL 1.0.0](#openssl-100)\n - [OpenSSL 0.9.x](#openssl-09x)\n\nOpenSSL 3.5\n-----------\n\n### Major changes between OpenSSL 3.4 and OpenSSL 3.5 [under development]\n\nOpenSSL 3.5.0 is a feature release adding significant new functionality to\nOpenSSL.\n\nThis release is in development.\n\nThis release incorporates the following potentially significant or incompatible\nchanges:\n\n  * Default encryption cipher for the `req`, `cms`, and `smime` applications\n    changed from `des-ede3-cbc` to `aes-256-cbc`.\n\nThis release adds the following new features:\n\n  * Allow the FIPS provider to optionally use the `JITTER` seed source.\n    Because this seed source is not part of the OpenSSL FIPS validations,\n    it should only be enabled after the [jitterentropy-library] has been\n    assessed for entropy quality.  Moreover, the FIPS provider including\n    this entropy source will need to obtain an [ESV] from the [CMVP] before\n    FIPS compliance can be claimed.  Enable this using the configuration\n    option `enable-fips-jitter`.\n\nOpenSSL 3.4\n-----------\n\n### Major changes between OpenSSL 3.3 and OpenSSL 3.4 [under development]\n\nOpenSSL 3.4.0 is a feature release adding significant new functionality to\nOpenSSL.\n\nThis release is in development.\n\nThis release incorporates the following potentially significant or incompatible\nchanges:\n\n  * Deprecation of TS_VERIFY_CTX_set_* functions and addition of replacement\n    TS_VERIFY_CTX_set0_* functions with improved semantics\n\n  * Redesigned use of OPENSSLDIR/ENGINESDIR/MODULESDIR on Windows such that\n    what were formerly build time locations can now be defined at run time\n    with registry keys\n\n  * The X25519 and X448 key exchange implementation in the FIPS provider\n    is unapproved and has `fips=no` property.\n\n  * SHAKE-128 and SHAKE-256 implementations have no default digest length\n    anymore. That means these algorithms cannot be used with\n    EVP_DigestFinal/_ex() unless the `xoflen` param is set before.\n\n  * Setting `config_diagnostics=1` in the config file will cause errors to\n    be returned from SSL_CTX_new() and SSL_CTX_new_ex() if there is an error\n    in the ssl module configuration.\n\n  * An empty renegotiate extension will be used in TLS client hellos instead\n    of the empty renegotiation SCSV, for all connections with a minimum TLS\n    version > 1.0.\n\n  * Deprecation of SSL_SESSION_get_time(), SSL_SESSION_set_time() and\n    SSL_CTX_flush_sessions() functions in favor of their respective `_ex`\n    functions which are Y2038-safe on platforms with Y2038-safe `time_t`\n\nThis release adds the following new features:\n\n  * Support for directly fetched composite signature algorithms such as\n    RSA-SHA2-256 including new API functions\n\n  * FIPS indicators support in the FIPS provider and various updates of the FIPS\n    provider required for future FIPS 140-3 validations\n\n  * Implementation of RFC 9579 (PBMAC1) in PKCS#12\n\n  * An optional additional random seed source RNG `JITTER` using a statically\n    linked jitterentropy library\n\n  * New options `-not_before` and `-not_after` for explicit setting start and\n    end dates of certificates created with the `req` and `x509` apps\n\n  * Support for integrity-only cipher suites TLS_SHA256_SHA256 and\n    TLS_SHA384_SHA384 in TLS 1.3, as defined in RFC 9150\n\n  * Support for requesting CRL in CMP\n\n  * Support for additional X.509v3 extensions related to Attribute Certificates\n\n  * Initial Attribute Certificate (RFC 5755) support\n\n  * Possibility to customize ECC groups initialization to use precomputed values\n    to save CPU time and use of this feature by the P-256 implementation\n\nOpenSSL 3.3\n-----------\n\n### Major changes between OpenSSL 3.3.2 and OpenSSL 3.3.3 [under development]\n\nOpenSSL 3.3.3 is a security patch release. The most severe CVE fixed in this\nrelease is Low.\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * Fixed possible OOB memory access with invalid low-level GF(2^m) elliptic\n    curve parameters.\n    ([CVE-2024-9143])\n\n### Major changes between OpenSSL 3.3.1 and OpenSSL 3.3.2 [3 Sep 2024]\n\nOpenSSL 3.3.2 is a security patch release. The most severe CVE fixed in this\nrelease is Moderate.\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * Fixed possible denial of service in X.509 name checks\n    ([CVE-2024-6119])\n\n  * Fixed possible buffer overread in SSL_select_next_proto()\n    ([CVE-2024-5535])\n\n### Major changes between OpenSSL 3.3.0 and OpenSSL 3.3.1 [4 Jun 2024]\n\nOpenSSL 3.3.1 is a security patch release. The most severe CVE fixed in this\nrelease is Low.\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * Fixed potential use after free after SSL_free_buffers() is called\n    ([CVE-2024-4741])\n\n  * Fixed an issue where checking excessively long DSA keys or parameters may\n    be very slow\n    ([CVE-2024-4603])\n\n### Major changes between OpenSSL 3.2 and OpenSSL 3.3.0 [9 Apr 2024]\n\nOpenSSL 3.3.0 is a feature release adding significant new functionality to\nOpenSSL.\n\nThis release adds the following new features:\n\n  * Support for qlog for tracing QUIC connections has been added\n\n  * Added APIs to allow configuring the negotiated idle timeout for QUIC\n    connections, and to allow determining the number of additional streams\n    that can currently be created for a QUIC connection.\n\n  * Added APIs to allow disabling implicit QUIC event processing for QUIC SSL\n    objects\n\n  * Added APIs to allow querying the size and utilisation of a QUIC stream's\n    write buffer\n\n  * New API `SSL_write_ex2`, which can be used to send an end-of-stream (FIN)\n    condition in an optimised way when using QUIC.\n\n  * Limited support for polling of QUIC connection and stream objects in a\n    non-blocking manner.\n\n  * Added a new EVP_DigestSqueeze() API. This allows SHAKE to squeeze multiple\n    times with different output sizes.\n\n  * Added exporter for CMake on Unix and Windows, alongside the pkg-config\n    exporter.\n\n  * The BLAKE2s hash algorithm matches BLAKE2b's support for configurable\n    output length.\n\n  * The EVP_PKEY_fromdata function has been augmented to allow for the\n    derivation of CRT (Chinese Remainder Theorem) parameters when requested\n\n  * Added API functions SSL_SESSION_get_time_ex(), SSL_SESSION_set_time_ex()\n    using time_t which is Y2038 safe on 32 bit systems when 64 bit time\n    is enabled\n\n  * Unknown entries in TLS SignatureAlgorithms, ClientSignatureAlgorithms\n    config options and the respective calls to SSL[_CTX]_set1_sigalgs() and\n    SSL[_CTX]_set1_client_sigalgs() that start with `?` character are\n    ignored and the configuration will still be used.\n\n  * Added `-set_issuer` and `-set_subject` options to `openssl x509` to\n    override the Issuer and Subject when creating a certificate. The `-subj`\n    option now is an alias for `-set_subject`.\n\n  * Added several new features of CMPv3 defined in RFC 9480 and RFC 9483\n\n  * New option `SSL_OP_PREFER_NO_DHE_KEX`, which allows configuring a TLS1.3\n    server to prefer session resumption using PSK-only key exchange over PSK\n    with DHE, if both are available.\n\n  * New atexit configuration switch, which controls whether the OPENSSL_cleanup\n    is registered when libcrypto is unloaded.\n\n  * Added X509_STORE_get1_objects to avoid issues with the existing\n    X509_STORE_get0_objects API in multi-threaded applications.\n\nThis release incorporates the following potentially significant or incompatible\nchanges:\n\n  * Applied AES-GCM unroll8 optimisation to Microsoft Azure Cobalt 100\n\n  * Optimized AES-CTR for ARM Neoverse V1 and V2\n\n  * Enable AES and SHA3 optimisations on Apple Silicon M3-based MacOS systems\n    similar to M1/M2.\n\n  * Various optimizations for cryptographic routines using RISC-V vector crypto\n    extensions\n\n  * Added assembly implementation for md5 on loongarch64\n\n  * Accept longer context for TLS 1.2 exporters\n\n  * The activate and soft_load configuration settings for providers in\n    openssl.cnf have been updated to require a value of [1|yes|true|on]\n    (in lower or UPPER case) to enable the setting. Conversely a value\n    of [0|no|false|off] will disable the setting.\n\n  * In `openssl speed`, changed the default hash function used with `hmac` from\n    `md5` to `sha256`.\n\n  * The `-verify` option to the `openssl crl` and `openssl req` will make the\n    program exit with 1 on failure.\n\n  * The d2i_ASN1_GENERALIZEDTIME(), d2i_ASN1_UTCTIME(), ASN1_TIME_check(), and\n    related functions have been augmented to check for a minimum length of\n    the input string, in accordance with ITU-T X.690 section 11.7 and 11.8.\n\n  * OPENSSL_sk_push() and sk_<TYPE>_push() functions now return 0 instead of -1\n    if called with a NULL stack argument.\n\n  * New limit on HTTP response headers is introduced to HTTP client. The\n    default limit is set to 256 header lines.\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * The BIO_get_new_index() function can only be called 127 times before it\n    reaches its upper bound of BIO_TYPE_MASK and will now return -1 once its\n    exhausted.\n\nA more detailed list of changes in this release can be found in the\n[CHANGES.md] file.\n\nUsers interested in using the new QUIC functionality are encouraged to read the\n[README file for QUIC][README-QUIC.md], which provides links to relevant\ndocumentation and example code.\n\nAs always, bug reports and issues relating to OpenSSL can be [filed on our issue\ntracker][issue tracker].\n\nOpenSSL 3.2\n-----------\n\n### Major changes between OpenSSL 3.2.1 and OpenSSL 3.2.2 [under development]\n\nOpenSSL 3.2.2 is a security patch release. The most severe CVE fixed in this\nrelease is Low.\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * Fixed unbounded memory growth with session handling in TLSv1.3\n    ([CVE-2024-2511])\n\n### Major changes between OpenSSL 3.2.0 and OpenSSL 3.2.1 [30 Jan 2024]\n\nOpenSSL 3.2.1 is a security patch release. The most severe CVE fixed in this\nrelease is Low.\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * Fixed PKCS12 Decoding crashes\n    ([CVE-2024-0727])\n\n  * Fixed excessive time spent checking invalid RSA public keys\n    ([CVE-2023-6237])\n\n  * Fixed POLY1305 MAC implementation corrupting vector registers on PowerPC\n    CPUs which support PowerISA 2.07\n    ([CVE-2023-6129])\n\n### Major changes between OpenSSL 3.1 and OpenSSL 3.2.0 [23 Nov 2023]\n\nOpenSSL 3.2.0 is a feature release adding significant new functionality to\nOpenSSL.\n\nThis release incorporates the following potentially significant or incompatible\nchanges:\n\n  * The default SSL/TLS security level has been changed from 1 to 2.\n\n  * The `x509`, `ca`, and `req` apps now always produce X.509v3 certificates.\n\n  * Subject or issuer names in X.509 objects are now displayed as UTF-8 strings\n    by default. Also spaces surrounding `=` in DN output are removed.\n\nThis release adds the following new features:\n\n  * Support for client side QUIC, including support for\n    multiple streams (RFC 9000)\n\n  * Support for Ed25519ctx, Ed25519ph and Ed448ph in addition\n    to existing support for Ed25519 and Ed448 (RFC 8032)\n\n  * Support for deterministic ECDSA signatures (RFC 6979)\n\n  * Support for AES-GCM-SIV, a nonce-misuse-resistant AEAD (RFC 8452)\n\n  * Support for the Argon2 KDF, along with supporting thread pool\n    functionality (RFC 9106)\n\n  * Support for Hybrid Public Key Encryption (HPKE) (RFC 9180)\n\n  * Support for SM4-XTS\n\n  * Support for Brainpool curves in TLS 1.3\n\n  * Support for TLS Raw Public Keys (RFC 7250)\n\n  * Support for TCP Fast Open on Linux, macOS and FreeBSD,\n    where enabled and supported (RFC 7413)\n\n  * Support for TLS certificate compression, including library\n    support for zlib, Brotli and zstd (RFC 8879)\n\n  * Support for provider-based pluggable signature algorithms\n    in TLS 1.3 with supporting CMS and X.509 functionality\n\n    With a suitable provider this enables the use of post-quantum/quantum-safe\n    cryptography.\n\n  * Support for using the Windows system certificate store as a source of\n    trusted root certificates\n\n    This is not yet enabled by default and must be activated using an\n    environment variable. This is likely to become enabled by default\n    in a future feature release.\n\n  * Support for using the IANA standard names in TLS ciphersuite configuration\n\n  * Multiple new features and improvements to CMP protocol support\n\nThe following known issues are present in this release and will be rectified\nin a future release:\n\n  * Provider-based signature algorithms cannot be configured using the\n    SignatureAlgorithms configuration file parameter (#22761)\n\nThis release incorporates the following documentation enhancements:\n\n  * Added multiple tutorials on the OpenSSL library and in particular\n    on writing various clients (using TLS and QUIC protocols) with libssl\n\n    See [OpenSSL Guide].\n\nThis release incorporates the following bug fixes and mitigations:\n\n  * Fixed excessive time spent in DH check / generation with large Q parameter\n    value\n    ([CVE-2023-5678])\n\nA more detailed list of changes in this release can be found in the\n[CHANGES.md] file.\n\nUsers interested in using the new QUIC functionality are encouraged to read the\n[README file for QUIC][README-QUIC.md], which provides links to relevant\ndocumentation and example code.\n\nAs always, bug reports and issues relating to OpenSSL can be [filed on our issue\ntracker][issue tracker].\n\nOpenSSL 3.1\n-----------\n\n### Major changes between OpenSSL 3.1.3 and OpenSSL 3.1.4 [24 Oct 2023]\n\n  * Mitigate incorrect resize handling for symmetric cipher keys and IVs.\n    ([CVE-2023-5363])\n\n### Major changes between OpenSSL 3.1.2 and OpenSSL 3.1.3 [19 Sep 2023]\n\n  * Fix POLY1305 MAC implementation corrupting XMM registers on Windows\n    ([CVE-2023-4807])\n\n### Major changes between OpenSSL 3.1.1 and OpenSSL 3.1.2 [1 Aug 2023]\n\n  * Fix excessive time spent checking DH q parameter value ([CVE-2023-3817])\n  * Fix DH_check() excessive time with over sized modulus ([CVE-2023-3446])\n  * Do not ignore empty associated data entries with AES-SIV ([CVE-2023-2975])\n  * When building with the `enable-fips` option and using the resulting\n    FIPS provider, TLS 1.2 will, by default, mandate the use of an\n    extended master secret and the Hash and HMAC DRBGs will not operate\n    with truncated digests.\n\n### Major changes between OpenSSL 3.1.0 and OpenSSL 3.1.1 [30 May 2023]\n\n  * Mitigate for very slow `OBJ_obj2txt()` performance with gigantic OBJECT\n    IDENTIFIER sub-identities.  ([CVE-2023-2650])\n  * Fixed buffer overread in AES-XTS decryption on ARM 64 bit platforms\n    ([CVE-2023-1255])\n  * Fixed documentation of X509_VERIFY_PARAM_add0_policy() ([CVE-2023-0466])\n  * Fixed handling of invalid certificate policies in leaf certificates\n    ([CVE-2023-0465])\n  * Limited the number of nodes created in a policy tree ([CVE-2023-0464])\n\n### Major changes between OpenSSL 3.0 and OpenSSL 3.1.0 [14 Mar 2023]\n\n  * SSL 3, TLS 1.0, TLS 1.1, and DTLS 1.0 only work at security level 0.\n  * Performance enhancements and new platform support including new\n    assembler code algorithm implementations.\n  * Deprecated LHASH statistics functions.\n  * FIPS 140-3 compliance changes.\n\nOpenSSL 3.0\n-----------\n\n### Major changes between OpenSSL 3.0.7 and OpenSSL 3.0.8 [7 Feb 2023]\n\n  * Fixed NULL dereference during PKCS7 data verification ([CVE-2023-0401])\n  * Fixed X.400 address type confusion in X.509 GeneralName ([CVE-2023-0286])\n  * Fixed NULL dereference validating DSA public key ([CVE-2023-0217])\n  * Fixed Invalid pointer dereference in d2i_PKCS7 functions ([CVE-2023-0216])\n  * Fixed Use-after-free following BIO_new_NDEF ([CVE-2023-0215])\n  * Fixed Double free after calling PEM_read_bio_ex ([CVE-2022-4450])\n  * Fixed Timing Oracle in RSA Decryption ([CVE-2022-4304])\n  * Fixed X.509 Name Constraints Read Buffer Overflow ([CVE-2022-4203])\n  * Fixed X.509 Policy Constraints Double Locking ([CVE-2022-3996])\n\n### Major changes between OpenSSL 3.0.6 and OpenSSL 3.0.7 [1 Nov 2022]\n\n  * Added RIPEMD160 to the default provider.\n  * Fixed regressions introduced in 3.0.6 version.\n  * Fixed two buffer overflows in punycode decoding functions.\n    ([CVE-2022-3786]) and ([CVE-2022-3602])\n\n### Major changes between OpenSSL 3.0.5 and OpenSSL 3.0.6 [11 Oct 2022]\n\n  * Fix for custom ciphers to prevent accidental use of NULL encryption\n    ([CVE-2022-3358])\n\n### Major changes between OpenSSL 3.0.4 and OpenSSL 3.0.5 [5 Jul 2022]\n\n  * Fixed heap memory corruption with RSA private key operation\n    ([CVE-2022-2274])\n  * Fixed AES OCB failure to encrypt some bytes on 32-bit x86 platforms\n    ([CVE-2022-2097])\n\n### Major changes between OpenSSL 3.0.3 and OpenSSL 3.0.4 [21 Jun 2022]\n\n  * Fixed additional bugs in the c_rehash script which was not properly\n    sanitising shell metacharacters to prevent command injection\n    ([CVE-2022-2068])\n\n### Major changes between OpenSSL 3.0.2 and OpenSSL 3.0.3 [3 May 2022]\n\n  * Fixed a bug in the c_rehash script which was not properly sanitising shell\n    metacharacters to prevent command injection ([CVE-2022-1292])\n  * Fixed a bug in the function `OCSP_basic_verify` that verifies the signer\n    certificate on an OCSP response ([CVE-2022-1343])\n  * Fixed a bug where the RC4-MD5 ciphersuite incorrectly used the\n    AAD data as the MAC key ([CVE-2022-1434])\n  * Fix a bug in the OPENSSL_LH_flush() function that breaks reuse of the memory\n    occupied by the removed hash table entries ([CVE-2022-1473])\n\n### Major changes between OpenSSL 3.0.1 and OpenSSL 3.0.2 [15 Mar 2022]\n\n  * Fixed a bug in the BN_mod_sqrt() function that can cause it to loop forever\n    for non-prime moduli ([CVE-2022-0778])\n\n### Major changes between OpenSSL 3.0.0 and OpenSSL 3.0.1 [14 Dec 2021]\n\n  * Fixed invalid handling of X509_verify_cert() internal errors in libssl\n    ([CVE-2021-4044])\n  * Allow fetching an operation from the provider that owns an unexportable key\n    as a fallback if that is still allowed by the property query.\n\n### Major changes between OpenSSL 1.1.1 and OpenSSL 3.0.0 [7 sep 2021]\n\n  * Enhanced 'openssl list' with many new options.\n  * Added migration guide to man7.\n  * Implemented support for fully \"pluggable\" TLSv1.3 groups.\n  * Added support for Kernel TLS (KTLS).\n  * Changed the license to the Apache License v2.0.\n  * Moved all variations of the EVP ciphers CAST5, BF, IDEA, SEED, RC2,\n    RC4, RC5, and DES to the legacy provider.\n  * Moved the EVP digests MD2, MD4, MDC2, WHIRLPOOL and RIPEMD-160 to the legacy\n    provider.\n  * Added convenience functions for generating asymmetric key pairs.\n  * Deprecated the `OCSP_REQ_CTX` type and functions.\n  * Deprecated the `EC_KEY` and `EC_KEY_METHOD` types and functions.\n  * Deprecated the `RSA` and `RSA_METHOD` types and functions.\n  * Deprecated the `DSA` and `DSA_METHOD` types and functions.\n  * Deprecated the `DH` and `DH_METHOD` types and functions.\n  * Deprecated the `ERR_load_` functions.\n  * Remove the `RAND_DRBG` API.\n  * Deprecated the `ENGINE` API.\n  * Added `OSSL_LIB_CTX`, a libcrypto library context.\n  * Added various `_ex` functions to the OpenSSL API that support using\n    a non-default `OSSL_LIB_CTX`.\n  * Interactive mode is removed from the 'openssl' program.\n  * The X25519, X448, Ed25519, Ed448, SHAKE128 and SHAKE256 algorithms are\n    included in the FIPS provider.\n  * X509 certificates signed using SHA1 are no longer allowed at security\n    level 1 or higher. The default security level for TLS is 1, so\n    certificates signed using SHA1 are by default no longer trusted to\n    authenticate servers or clients.\n  * enable-crypto-mdebug and enable-crypto-mdebug-backtrace were mostly\n    disabled; the project uses address sanitize/leak-detect instead.\n  * Added a Certificate Management Protocol (CMP, RFC 4210) implementation\n    also covering CRMF (RFC 4211) and HTTP transfer (RFC 6712).\n    It is part of the crypto lib and adds a 'cmp' app with a demo configuration.\n    All widely used CMP features are supported for both clients and servers.\n  * Added a proper HTTP client supporting GET with optional redirection, POST,\n    arbitrary request and response content types, TLS, persistent connections,\n    connections via HTTP(s) proxies, connections and exchange via user-defined\n    BIOs (allowing implicit connections), and timeout checks.\n  * Added util/check-format.pl for checking adherence to the coding guidelines.\n  * Added OSSL_ENCODER, a generic encoder API.\n  * Added OSSL_DECODER, a generic decoder API.\n  * Added OSSL_PARAM_BLD, an easier to use API to OSSL_PARAM.\n  * Added error raising macros, ERR_raise() and ERR_raise_data().\n  * Deprecated ERR_put_error(), ERR_get_error_line(), ERR_get_error_line_data(),\n    ERR_peek_error_line_data(), ERR_peek_last_error_line_data() and\n    ERR_func_error_string().\n  * Added OSSL_PROVIDER_available(), to check provider availability.\n  * Added 'openssl mac' that uses the EVP_MAC API.\n  * Added 'openssl kdf' that uses the EVP_KDF API.\n  * Add OPENSSL_info() and 'openssl info' to get built-in data.\n  * Add support for enabling instrumentation through trace and debug\n    output.\n  * Changed our version number scheme and set the next major release to\n    3.0.0\n  * Added EVP_MAC, an EVP layer MAC API, and a generic EVP_PKEY to EVP_MAC\n    bridge.  Supported MACs are: BLAKE2, CMAC, GMAC, HMAC, KMAC, POLY1305\n    and SIPHASH.\n  * Removed the heartbeat message in DTLS feature.\n  * Added EVP_KDF, an EVP layer KDF and PRF API, and a generic EVP_PKEY to\n    EVP_KDF bridge.  Supported KDFs are: HKDF, KBKDF, KRB5 KDF, PBKDF2,\n    PKCS12 KDF, SCRYPT, SSH KDF, SSKDF, TLS1 PRF, X9.42 KDF and X9.63 KDF.\n  * All of the low-level MD2, MD4, MD5, MDC2, RIPEMD160, SHA1, SHA224,\n    SHA256, SHA384, SHA512 and Whirlpool digest functions have been\n    deprecated.\n  * All of the low-level AES, Blowfish, Camellia, CAST, DES, IDEA, RC2,\n    RC4, RC5 and SEED cipher functions have been deprecated.\n  * All of the low-level DH, DSA, ECDH, ECDSA and RSA public key functions\n    have been deprecated.\n  * SSL 3, TLS 1.0, TLS 1.1, and DTLS 1.0 only work at security level 0,\n    except when RSA key exchange without SHA1 is used.\n  * Added providers, a new pluggability concept that will replace the\n    ENGINE API and ENGINE implementations.\n\nOpenSSL 1.1.1\n-------------\n\n### Major changes between OpenSSL 1.1.1k and OpenSSL 1.1.1l [24 Aug 2021]\n\n  * Fixed an SM2 Decryption Buffer Overflow ([CVE-2021-3711])\n  * Fixed various read buffer overruns processing ASN.1 strings ([CVE-2021-3712])\n\n### Major changes between OpenSSL 1.1.1j and OpenSSL 1.1.1k [25 Mar 2021]\n\n  * Fixed a problem with verifying a certificate chain when using the\n    X509_V_FLAG_X509_STRICT flag ([CVE-2021-3450])\n  * Fixed an issue where an OpenSSL TLS server may crash if sent a maliciously\n    crafted renegotiation ClientHello message from a client ([CVE-2021-3449])\n\n### Major changes between OpenSSL 1.1.1i and OpenSSL 1.1.1j [16 Feb 2021]\n\n  * Fixed a NULL pointer deref in the X509_issuer_and_serial_hash()\n    function ([CVE-2021-23841])\n  * Fixed the RSA_padding_check_SSLv23() function and the RSA_SSLV23_PADDING\n    padding mode to correctly check for rollback attacks\n  * Fixed an overflow in the EVP_CipherUpdate, EVP_EncryptUpdate and\n    EVP_DecryptUpdate functions ([CVE-2021-23840])\n  * Fixed SRP_Calc_client_key so that it runs in constant time\n\n### Major changes between OpenSSL 1.1.1h and OpenSSL 1.1.1i [8 Dec 2020]\n\n  * Fixed NULL pointer deref in GENERAL_NAME_cmp ([CVE-2020-1971])\n\n### Major changes between OpenSSL 1.1.1g and OpenSSL 1.1.1h [22 Sep 2020]\n\n  * Disallow explicit curve parameters in verifications chains when\n    X509_V_FLAG_X509_STRICT is used\n  * Enable 'MinProtocol' and 'MaxProtocol' to configure both TLS and DTLS\n    contexts\n  * Oracle Developer Studio will start reporting deprecation warnings\n\n### Major changes between OpenSSL 1.1.1f and OpenSSL 1.1.1g [21 Apr 2020]\n\n  * Fixed segmentation fault in SSL_check_chain() ([CVE-2020-1967])\n\n### Major changes between OpenSSL 1.1.1e and OpenSSL 1.1.1f [31 Mar 2020]\n\n  * Revert the unexpected EOF reporting via SSL_ERROR_SSL\n\n### Major changes between OpenSSL 1.1.1d and OpenSSL 1.1.1e [17 Mar 2020]\n\n  * Fixed an overflow bug in the x64_64 Montgomery squaring procedure\n    used in exponentiation with 512-bit moduli ([CVE-2019-1551])\n\n### Major changes between OpenSSL 1.1.1c and OpenSSL 1.1.1d [10 Sep 2019]\n\n  * Fixed a fork protection issue ([CVE-2019-1549])\n  * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey\n    ([CVE-2019-1563])\n  * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n    used even when parsing explicit parameters\n  * Compute ECC cofactors if not provided during EC_GROUP construction\n    ([CVE-2019-1547])\n  * Early start up entropy quality from the DEVRANDOM seed source has been\n    improved for older Linux systems\n  * Correct the extended master secret constant on EBCDIC systems\n  * Use Windows installation paths in the mingw builds ([CVE-2019-1552])\n  * Changed DH_check to accept parameters with order q and 2q subgroups\n  * Significantly reduce secure memory usage by the randomness pools\n  * Revert the DEVRANDOM_WAIT feature for Linux systems\n\n### Major changes between OpenSSL 1.1.1b and OpenSSL 1.1.1c [28 May 2019]\n\n  * Prevent over long nonces in ChaCha20-Poly1305 ([CVE-2019-1543])\n\n### Major changes between OpenSSL 1.1.1a and OpenSSL 1.1.1b [26 Feb 2019]\n\n  * Change the info callback signals for the start and end of a post-handshake\n    message exchange in TLSv1.3.\n  * Fix a bug in DTLS over SCTP. This breaks interoperability with older\n    versions of OpenSSL like OpenSSL 1.1.0 and OpenSSL 1.0.2.\n\n### Major changes between OpenSSL 1.1.1 and OpenSSL 1.1.1a [20 Nov 2018]\n\n  * Timing vulnerability in DSA signature generation ([CVE-2018-0734])\n  * Timing vulnerability in ECDSA signature generation ([CVE-2018-0735])\n\n### Major changes between OpenSSL 1.1.0i and OpenSSL 1.1.1 [11 Sep 2018]\n\n  * Support for TLSv1.3 added. The TLSv1.3 implementation includes:\n    * Fully compliant implementation of RFC8446 (TLSv1.3) on by default\n    * Early data (0-RTT)\n    * Post-handshake authentication and key update\n    * Middlebox Compatibility Mode\n    * TLSv1.3 PSKs\n    * Support for all five RFC8446 ciphersuites\n    * RSA-PSS signature algorithms (backported to TLSv1.2)\n    * Configurable session ticket support\n    * Stateless server support\n    * Rewrite of the packet construction code for \"safer\" packet handling\n    * Rewrite of the extension handling code\n    For further important information, see the [TLS1.3 page](\n    https://wiki.openssl.org/index.php/TLS1.3) in the OpenSSL Wiki.\n\n  * Complete rewrite of the OpenSSL random number generator to introduce the\n    following capabilities\n      * The default RAND method now utilizes an AES-CTR DRBG according to\n        NIST standard SP 800-90Ar1.\n      * Support for multiple DRBG instances with seed chaining.\n      * There is a public and private DRBG instance.\n      * The DRBG instances are fork-safe.\n      * Keep all global DRBG instances on the secure heap if it is enabled.\n      * The public and private DRBG instance are per thread for lock free\n      operation\n  * Support for various new cryptographic algorithms including:\n      * SHA3\n      * SHA512/224 and SHA512/256\n      * EdDSA (both Ed25519 and Ed448) including X509 and TLS support\n      * X448 (adding to the existing X25519 support in 1.1.0)\n      * Multi-prime RSA\n      * SM2\n      * SM3\n      * SM4\n      * SipHash\n      * ARIA (including TLS support)\n  * Significant Side-Channel attack security improvements\n  * Add a new ClientHello callback to provide the ability to adjust the SSL\n  object at an early stage.\n  * Add 'Maximum Fragment Length' TLS extension negotiation and support\n  * A new STORE module, which implements a uniform and URI based reader of\n   stores that can contain keys, certificates, CRLs and numerous other\n  objects.\n  * Move the display of configuration data to configdata.pm.\n  * Allow GNU style \"make variables\" to be used with Configure.\n  * Claim the namespaces OSSL and OPENSSL, represented as symbol prefixes\n  * Rewrite of devcrypto engine\n\nOpenSSL 1.1.0\n-------------\n\n### Major changes between OpenSSL 1.1.0k and OpenSSL 1.1.0l [10 Sep 2019]\n\n  * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey\n    ([CVE-2019-1563])\n  * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n    used even when parsing explicit parameters\n  * Compute ECC cofactors if not provided during EC_GROUP construction\n    ([CVE-2019-1547])\n  * Use Windows installation paths in the mingw builds ([CVE-2019-1552])\n\n### Major changes between OpenSSL 1.1.0j and OpenSSL 1.1.0k [28 May 2019]\n\n  * Prevent over long nonces in ChaCha20-Poly1305 ([CVE-2019-1543])\n\n### Major changes between OpenSSL 1.1.0i and OpenSSL 1.1.0j [20 Nov 2018]\n\n  * Timing vulnerability in DSA signature generation ([CVE-2018-0734])\n  * Timing vulnerability in ECDSA signature generation ([CVE-2018-0735])\n\n### Major changes between OpenSSL 1.1.0h and OpenSSL 1.1.0i [14 Aug 2018]\n\n  * Client DoS due to large DH parameter ([CVE-2018-0732])\n  * Cache timing vulnerability in RSA Key Generation ([CVE-2018-0737])\n\n### Major changes between OpenSSL 1.1.0g and OpenSSL 1.1.0h [27 Mar 2018]\n\n  * Constructed ASN.1 types with a recursive definition could exceed the\n    stack ([CVE-2018-0739])\n  * Incorrect CRYPTO_memcmp on HP-UX PA-RISC ([CVE-2018-0733])\n  * rsaz_1024_mul_avx2 overflow bug on x86_64 ([CVE-2017-3738])\n\n### Major changes between OpenSSL 1.1.0f and OpenSSL 1.1.0g [2 Nov 2017]\n\n  * bn_sqrx8x_internal carry bug on x86_64 ([CVE-2017-3736])\n  * Malformed X.509 IPAddressFamily could cause OOB read ([CVE-2017-3735])\n\n### Major changes between OpenSSL 1.1.0e and OpenSSL 1.1.0f [25 May 2017]\n\n  * config now recognises 64-bit mingw and chooses mingw64 instead of mingw\n\n### Major changes between OpenSSL 1.1.0d and OpenSSL 1.1.0e [16 Feb 2017]\n\n  * Encrypt-Then-Mac renegotiation crash ([CVE-2017-3733])\n\n### Major changes between OpenSSL 1.1.0c and OpenSSL 1.1.0d [26 Jan 2017]\n\n  * Truncated packet could crash via OOB read ([CVE-2017-3731])\n  * Bad (EC)DHE parameters cause a client crash ([CVE-2017-3730])\n  * BN_mod_exp may produce incorrect results on x86_64 ([CVE-2017-3732])\n\n### Major changes between OpenSSL 1.1.0b and OpenSSL 1.1.0c [10 Nov 2016]\n\n  * ChaCha20/Poly1305 heap-buffer-overflow ([CVE-2016-7054])\n  * CMS Null dereference ([CVE-2016-7053])\n  * Montgomery multiplication may produce incorrect results ([CVE-2016-7055])\n\n### Major changes between OpenSSL 1.1.0a and OpenSSL 1.1.0b [26 Sep 2016]\n\n  * Fix Use After Free for large message sizes ([CVE-2016-6309])\n\n### Major changes between OpenSSL 1.1.0 and OpenSSL 1.1.0a [22 Sep 2016]\n\n  * OCSP Status Request extension unbounded memory growth ([CVE-2016-6304])\n  * SSL_peek() hang on empty record ([CVE-2016-6305])\n  * Excessive allocation of memory in tls_get_message_header()\n    ([CVE-2016-6307])\n  * Excessive allocation of memory in dtls1_preprocess_fragment()\n    ([CVE-2016-6308])\n\n### Major changes between OpenSSL 1.0.2h and OpenSSL 1.1.0 [25 Aug 2016]\n\n  * Copyright text was shrunk to a boilerplate that points to the license\n  * \"shared\" builds are now the default when possible\n  * Added support for \"pipelining\"\n  * Added the AFALG engine\n  * New threading API implemented\n  * Support for ChaCha20 and Poly1305 added to libcrypto and libssl\n  * Support for extended master secret\n  * CCM ciphersuites\n  * Reworked test suite, now based on perl, Test::Harness and Test::More\n  * *Most* libcrypto and libssl public structures were made opaque,\n    including:\n    BIGNUM and associated types, EC_KEY and EC_KEY_METHOD,\n    DH and DH_METHOD, DSA and DSA_METHOD, RSA and RSA_METHOD,\n    BIO and BIO_METHOD, EVP_MD_CTX, EVP_MD, EVP_CIPHER_CTX,\n    EVP_CIPHER, EVP_PKEY and associated types, HMAC_CTX,\n    X509, X509_CRL, X509_OBJECT, X509_STORE_CTX, X509_STORE,\n    X509_LOOKUP, X509_LOOKUP_METHOD\n  * libssl internal structures made opaque\n  * SSLv2 support removed\n  * Kerberos ciphersuite support removed\n  * RC4 removed from DEFAULT ciphersuites in libssl\n  * 40 and 56 bit cipher support removed from libssl\n  * All public header files moved to include/openssl, no more symlinking\n  * SSL/TLS state machine, version negotiation and record layer rewritten\n  * EC revision: now operations use new EC_KEY_METHOD.\n  * Support for OCB mode added to libcrypto\n  * Support for asynchronous crypto operations added to libcrypto and libssl\n  * Deprecated interfaces can now be disabled at build time either\n    relative to the latest release via the \"no-deprecated\" Configure\n    argument, or via the \"--api=1.1.0|1.0.0|0.9.8\" option.\n  * Application software can be compiled with -DOPENSSL_API_COMPAT=version\n    to ensure that features deprecated in that version are not exposed.\n  * Support for RFC6698/RFC7671 DANE TLSA peer authentication\n  * Change of Configure to use --prefix as the main installation\n    directory location rather than --openssldir.  The latter becomes\n    the directory for certs, private key and openssl.cnf exclusively.\n  * Reworked BIO networking library, with full support for IPv6.\n  * New \"unified\" build system\n  * New security levels\n  * Support for scrypt algorithm\n  * Support for X25519\n  * Extended SSL_CONF support using configuration files\n  * KDF algorithm support. Implement TLS PRF as a KDF.\n  * Support for Certificate Transparency\n  * HKDF support.\n\nOpenSSL 1.0.2\n-------------\n\n### Major changes between OpenSSL 1.0.2s and OpenSSL 1.0.2t [10 Sep 2019]\n\n  * Fixed a padding oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey\n    ([CVE-2019-1563])\n  * For built-in EC curves, ensure an EC_GROUP built from the curve name is\n    used even when parsing explicit parameters\n  * Compute ECC cofactors if not provided during EC_GROUP construction\n    ([CVE-2019-1547])\n  * Document issue with installation paths in diverse Windows builds\n    ([CVE-2019-1552])\n\n### Major changes between OpenSSL 1.0.2r and OpenSSL 1.0.2s [28 May 2019]\n\n  * None\n\n### Major changes between OpenSSL 1.0.2q and OpenSSL 1.0.2r [26 Feb 2019]\n\n  * 0-byte record padding oracle ([CVE-2019-1559])\n\n### Major changes between OpenSSL 1.0.2p and OpenSSL 1.0.2q [20 Nov 2018]\n\n  * Microarchitecture timing vulnerability in ECC scalar multiplication ([CVE-2018-5407])\n  * Timing vulnerability in DSA signature generation ([CVE-2018-0734])\n\n### Major changes between OpenSSL 1.0.2o and OpenSSL 1.0.2p [14 Aug 2018]\n\n  * Client DoS due to large DH parameter ([CVE-2018-0732])\n  * Cache timing vulnerability in RSA Key Generation ([CVE-2018-0737])\n\n### Major changes between OpenSSL 1.0.2n and OpenSSL 1.0.2o [27 Mar 2018]\n\n  * Constructed ASN.1 types with a recursive definition could exceed the\n    stack ([CVE-2018-0739])\n\n### Major changes between OpenSSL 1.0.2m and OpenSSL 1.0.2n [7 Dec 2017]\n\n  * Read/write after SSL object in error state ([CVE-2017-3737])\n  * rsaz_1024_mul_avx2 overflow bug on x86_64 ([CVE-2017-3738])\n\n### Major changes between OpenSSL 1.0.2l and OpenSSL 1.0.2m [2 Nov 2017]\n\n  * bn_sqrx8x_internal carry bug on x86_64 ([CVE-2017-3736])\n  * Malformed X.509 IPAddressFamily could cause OOB read ([CVE-2017-3735])\n\n### Major changes between OpenSSL 1.0.2k and OpenSSL 1.0.2l [25 May 2017]\n\n  * config now recognises 64-bit mingw and chooses mingw64 instead of mingw\n\n### Major changes between OpenSSL 1.0.2j and OpenSSL 1.0.2k [26 Jan 2017]\n\n  * Truncated packet could crash via OOB read ([CVE-2017-3731])\n  * BN_mod_exp may produce incorrect results on x86_64 ([CVE-2017-3732])\n  * Montgomery multiplication may produce incorrect results ([CVE-2016-7055])\n\n### Major changes between OpenSSL 1.0.2i and OpenSSL 1.0.2j [26 Sep 2016]\n\n  * Missing CRL sanity check ([CVE-2016-7052])\n\n### Major changes between OpenSSL 1.0.2h and OpenSSL 1.0.2i [22 Sep 2016]\n\n  * OCSP Status Request extension unbounded memory growth ([CVE-2016-6304])\n  * SWEET32 Mitigation ([CVE-2016-2183])\n  * OOB write in MDC2_Update() ([CVE-2016-6303])\n  * Malformed SHA512 ticket DoS ([CVE-2016-6302])\n  * OOB write in BN_bn2dec() ([CVE-2016-2182])\n  * OOB read in TS_OBJ_print_bio() ([CVE-2016-2180])\n  * Pointer arithmetic undefined behaviour ([CVE-2016-2177])\n  * Constant time flag not preserved in DSA signing ([CVE-2016-2178])\n  * DTLS buffered message DoS ([CVE-2016-2179])\n  * DTLS replay protection DoS ([CVE-2016-2181])\n  * Certificate message OOB reads ([CVE-2016-6306])\n\n### Major changes between OpenSSL 1.0.2g and OpenSSL 1.0.2h [3 May 2016]\n\n  * Prevent padding oracle in AES-NI CBC MAC check ([CVE-2016-2107])\n  * Fix EVP_EncodeUpdate overflow ([CVE-2016-2105])\n  * Fix EVP_EncryptUpdate overflow ([CVE-2016-2106])\n  * Prevent ASN.1 BIO excessive memory allocation ([CVE-2016-2109])\n  * EBCDIC overread ([CVE-2016-2176])\n  * Modify behavior of ALPN to invoke callback after SNI/servername\n    callback, such that updates to the SSL_CTX affect ALPN.\n  * Remove LOW from the DEFAULT cipher list.  This removes singles DES from\n    the default.\n  * Only remove the SSLv2 methods with the no-ssl2-method option.\n\n### Major changes between OpenSSL 1.0.2f and OpenSSL 1.0.2g [1 Mar 2016]\n\n  * Disable weak ciphers in SSLv3 and up in default builds of OpenSSL.\n  * Disable SSLv2 default build, default negotiation and weak ciphers\n    ([CVE-2016-0800])\n  * Fix a double-free in DSA code ([CVE-2016-0705])\n  * Disable SRP fake user seed to address a server memory leak\n    ([CVE-2016-0798])\n  * Fix BN_hex2bn/BN_dec2bn NULL pointer deref/heap corruption\n    ([CVE-2016-0797])\n  * Fix memory issues in BIO_*printf functions ([CVE-2016-0799])\n  * Fix side channel attack on modular exponentiation ([CVE-2016-0702])\n\n### Major changes between OpenSSL 1.0.2e and OpenSSL 1.0.2f [28 Jan 2016]\n\n  * DH small subgroups ([CVE-2016-0701])\n  * SSLv2 doesn't block disabled ciphers ([CVE-2015-3197])\n\n### Major changes between OpenSSL 1.0.2d and OpenSSL 1.0.2e [3 Dec 2015]\n\n  * BN_mod_exp may produce incorrect results on x86_64 ([CVE-2015-3193])\n  * Certificate verify crash with missing PSS parameter ([CVE-2015-3194])\n  * X509_ATTRIBUTE memory leak ([CVE-2015-3195])\n  * Rewrite EVP_DecodeUpdate (base64 decoding) to fix several bugs\n  * In DSA_generate_parameters_ex, if the provided seed is too short,\n    return an error\n\n### Major changes between OpenSSL 1.0.2c and OpenSSL 1.0.2d [9 Jul 2015]\n\n  * Alternate chains certificate forgery ([CVE-2015-1793])\n  * Race condition handling PSK identify hint ([CVE-2015-3196])\n\n### Major changes between OpenSSL 1.0.2b and OpenSSL 1.0.2c [12 Jun 2015]\n\n  * Fix HMAC ABI incompatibility\n\n### Major changes between OpenSSL 1.0.2a and OpenSSL 1.0.2b [11 Jun 2015]\n\n  * Malformed ECParameters causes infinite loop ([CVE-2015-1788])\n  * Exploitable out-of-bounds read in X509_cmp_time ([CVE-2015-1789])\n  * PKCS7 crash with missing EnvelopedContent ([CVE-2015-1790])\n  * CMS verify infinite loop with unknown hash function ([CVE-2015-1792])\n  * Race condition handling NewSessionTicket ([CVE-2015-1791])\n\n### Major changes between OpenSSL 1.0.2 and OpenSSL 1.0.2a [19 Mar 2015]\n\n  * OpenSSL 1.0.2 ClientHello sigalgs DoS fix ([CVE-2015-0291])\n  * Multiblock corrupted pointer fix ([CVE-2015-0290])\n  * Segmentation fault in DTLSv1_listen fix ([CVE-2015-0207])\n  * Segmentation fault in ASN1_TYPE_cmp fix ([CVE-2015-0286])\n  * Segmentation fault for invalid PSS parameters fix ([CVE-2015-0208])\n  * ASN.1 structure reuse memory corruption fix ([CVE-2015-0287])\n  * PKCS7 NULL pointer dereferences fix ([CVE-2015-0289])\n  * DoS via reachable assert in SSLv2 servers fix ([CVE-2015-0293])\n  * Empty CKE with client auth and DHE fix ([CVE-2015-1787])\n  * Handshake with unseeded PRNG fix ([CVE-2015-0285])\n  * Use After Free following d2i_ECPrivatekey error fix ([CVE-2015-0209])\n  * X509_to_X509_REQ NULL pointer deref fix ([CVE-2015-0288])\n  * Removed the export ciphers from the DEFAULT ciphers\n\n### Major changes between OpenSSL 1.0.1l and OpenSSL 1.0.2 [22 Jan 2015]\n\n  * Suite B support for TLS 1.2 and DTLS 1.2\n  * Support for DTLS 1.2\n  * TLS automatic EC curve selection.\n  * API to set TLS supported signature algorithms and curves\n  * SSL_CONF configuration API.\n  * TLS Brainpool support.\n  * ALPN support.\n  * CMS support for RSA-PSS, RSA-OAEP, ECDH and X9.42 DH.\n\nOpenSSL 1.0.1\n-------------\n\n### Major changes between OpenSSL 1.0.1t and OpenSSL 1.0.1u [22 Sep 2016]\n\n  * OCSP Status Request extension unbounded memory growth ([CVE-2016-6304])\n  * SWEET32 Mitigation ([CVE-2016-2183])\n  * OOB write in MDC2_Update() ([CVE-2016-6303])\n  * Malformed SHA512 ticket DoS ([CVE-2016-6302])\n  * OOB write in BN_bn2dec() ([CVE-2016-2182])\n  * OOB read in TS_OBJ_print_bio() ([CVE-2016-2180])\n  * Pointer arithmetic undefined behaviour ([CVE-2016-2177])\n  * Constant time flag not preserved in DSA signing ([CVE-2016-2178])\n  * DTLS buffered message DoS ([CVE-2016-2179])\n  * DTLS replay protection DoS ([CVE-2016-2181])\n  * Certificate message OOB reads ([CVE-2016-6306])\n\n### Major changes between OpenSSL 1.0.1s and OpenSSL 1.0.1t [3 May 2016]\n\n  * Prevent padding oracle in AES-NI CBC MAC check ([CVE-2016-2107])\n  * Fix EVP_EncodeUpdate overflow ([CVE-2016-2105])\n  * Fix EVP_EncryptUpdate overflow ([CVE-2016-2106])\n  * Prevent ASN.1 BIO excessive memory allocation ([CVE-2016-2109])\n  * EBCDIC overread ([CVE-2016-2176])\n  * Modify behavior of ALPN to invoke callback after SNI/servername\n    callback, such that updates to the SSL_CTX affect ALPN.\n  * Remove LOW from the DEFAULT cipher list.  This removes singles DES from\n    the default.\n  * Only remove the SSLv2 methods with the no-ssl2-method option.\n\n### Major changes between OpenSSL 1.0.1r and OpenSSL 1.0.1s [1 Mar 2016]\n\n  * Disable weak ciphers in SSLv3 and up in default builds of OpenSSL.\n  * Disable SSLv2 default build, default negotiation and weak ciphers\n    ([CVE-2016-0800])\n  * Fix a double-free in DSA code ([CVE-2016-0705])\n  * Disable SRP fake user seed to address a server memory leak\n    ([CVE-2016-0798])\n  * Fix BN_hex2bn/BN_dec2bn NULL pointer deref/heap corruption\n    ([CVE-2016-0797])\n  * Fix memory issues in BIO_*printf functions ([CVE-2016-0799])\n  * Fix side channel attack on modular exponentiation ([CVE-2016-0702])\n\n### Major changes between OpenSSL 1.0.1q and OpenSSL 1.0.1r [28 Jan 2016]\n\n  * Protection for DH small subgroup attacks\n  * SSLv2 doesn't block disabled ciphers ([CVE-2015-3197])\n\n### Major changes between OpenSSL 1.0.1p and OpenSSL 1.0.1q [3 Dec 2015]\n\n  * Certificate verify crash with missing PSS parameter ([CVE-2015-3194])\n  * X509_ATTRIBUTE memory leak ([CVE-2015-3195])\n  * Rewrite EVP_DecodeUpdate (base64 decoding) to fix several bugs\n  * In DSA_generate_parameters_ex, if the provided seed is too short,\n    return an error\n\n### Major changes between OpenSSL 1.0.1o and OpenSSL 1.0.1p [9 Jul 2015]\n\n  * Alternate chains certificate forgery ([CVE-2015-1793])\n  * Race condition handling PSK identify hint ([CVE-2015-3196])\n\n### Major changes between OpenSSL 1.0.1n and OpenSSL 1.0.1o [12 Jun 2015]\n\n  * Fix HMAC ABI incompatibility\n\n### Major changes between OpenSSL 1.0.1m and OpenSSL 1.0.1n [11 Jun 2015]\n\n  * Malformed ECParameters causes infinite loop ([CVE-2015-1788])\n  * Exploitable out-of-bounds read in X509_cmp_time ([CVE-2015-1789])\n  * PKCS7 crash with missing EnvelopedContent ([CVE-2015-1790])\n  * CMS verify infinite loop with unknown hash function ([CVE-2015-1792])\n  * Race condition handling NewSessionTicket ([CVE-2015-1791])\n\n### Major changes between OpenSSL 1.0.1l and OpenSSL 1.0.1m [19 Mar 2015]\n\n  * Segmentation fault in ASN1_TYPE_cmp fix ([CVE-2015-0286])\n  * ASN.1 structure reuse memory corruption fix ([CVE-2015-0287])\n  * PKCS7 NULL pointer dereferences fix ([CVE-2015-0289])\n  * DoS via reachable assert in SSLv2 servers fix ([CVE-2015-0293])\n  * Use After Free following d2i_ECPrivatekey error fix ([CVE-2015-0209])\n  * X509_to_X509_REQ NULL pointer deref fix ([CVE-2015-0288])\n  * Removed the export ciphers from the DEFAULT ciphers\n\n### Major changes between OpenSSL 1.0.1k and OpenSSL 1.0.1l [15 Jan 2015]\n\n  * Build fixes for the Windows and OpenVMS platforms\n\n### Major changes between OpenSSL 1.0.1j and OpenSSL 1.0.1k [8 Jan 2015]\n\n  * Fix for [CVE-2014-3571]\n  * Fix for [CVE-2015-0206]\n  * Fix for [CVE-2014-3569]\n  * Fix for [CVE-2014-3572]\n  * Fix for [CVE-2015-0204]\n  * Fix for [CVE-2015-0205]\n  * Fix for [CVE-2014-8275]\n  * Fix for [CVE-2014-3570]\n\n### Major changes between OpenSSL 1.0.1i and OpenSSL 1.0.1j [15 Oct 2014]\n\n  * Fix for [CVE-2014-3513]\n  * Fix for [CVE-2014-3567]\n  * Mitigation for [CVE-2014-3566] (SSL protocol vulnerability)\n  * Fix for [CVE-2014-3568]\n\n### Major changes between OpenSSL 1.0.1h and OpenSSL 1.0.1i [6 Aug 2014]\n\n  * Fix for [CVE-2014-3512]\n  * Fix for [CVE-2014-3511]\n  * Fix for [CVE-2014-3510]\n  * Fix for [CVE-2014-3507]\n  * Fix for [CVE-2014-3506]\n  * Fix for [CVE-2014-3505]\n  * Fix for [CVE-2014-3509]\n  * Fix for [CVE-2014-5139]\n  * Fix for [CVE-2014-3508]\n\n### Major changes between OpenSSL 1.0.1g and OpenSSL 1.0.1h [5 Jun 2014]\n\n  * Fix for [CVE-2014-0224]\n  * Fix for [CVE-2014-0221]\n  * Fix for [CVE-2014-0198]\n  * Fix for [CVE-2014-0195]\n  * Fix for [CVE-2014-3470]\n  * Fix for [CVE-2010-5298]\n\n### Major changes between OpenSSL 1.0.1f and OpenSSL 1.0.1g [7 Apr 2014]\n\n  * Fix for [CVE-2014-0160]\n  * Add TLS padding extension workaround for broken servers.\n  * Fix for [CVE-2014-0076]\n\n### Major changes between OpenSSL 1.0.1e and OpenSSL 1.0.1f [6 Jan 2014]\n\n  * Don't include gmt_unix_time in TLS server and client random values\n  * Fix for TLS record tampering bug ([CVE-2013-4353])\n  * Fix for TLS version checking bug ([CVE-2013-6449])\n  * Fix for DTLS retransmission bug ([CVE-2013-6450])\n\n### Major changes between OpenSSL 1.0.1d and OpenSSL 1.0.1e [11 Feb 2013]\n\n  * Corrected fix for ([CVE-2013-0169])\n\n### Major changes between OpenSSL 1.0.1c and OpenSSL 1.0.1d [4 Feb 2013]\n\n  * Fix renegotiation in TLS 1.1, 1.2 by using the correct TLS version.\n  * Include the fips configuration module.\n  * Fix OCSP bad key DoS attack ([CVE-2013-0166])\n  * Fix for SSL/TLS/DTLS CBC plaintext recovery attack ([CVE-2013-0169])\n  * Fix for TLS AESNI record handling flaw ([CVE-2012-2686])\n\n### Major changes between OpenSSL 1.0.1b and OpenSSL 1.0.1c [10 May 2012]\n\n  * Fix TLS/DTLS record length checking bug ([CVE-2012-2333])\n  * Don't attempt to use non-FIPS composite ciphers in FIPS mode.\n\n### Major changes between OpenSSL 1.0.1a and OpenSSL 1.0.1b [26 Apr 2012]\n\n  * Fix compilation error on non-x86 platforms.\n  * Make FIPS capable OpenSSL ciphers work in non-FIPS mode.\n  * Fix SSL_OP_NO_TLSv1_1 clash with SSL_OP_ALL in OpenSSL 1.0.0\n\n### Major changes between OpenSSL 1.0.1 and OpenSSL 1.0.1a [19 Apr 2012]\n\n  * Fix for ASN1 overflow bug ([CVE-2012-2110])\n  * Workarounds for some servers that hang on long client hellos.\n  * Fix SEGV in AES code.\n\n### Major changes between OpenSSL 1.0.0h and OpenSSL 1.0.1 [14 Mar 2012]\n\n  * TLS/DTLS heartbeat support.\n  * SCTP support.\n  * RFC 5705 TLS key material exporter.\n  * RFC 5764 DTLS-SRTP negotiation.\n  * Next Protocol Negotiation.\n  * PSS signatures in certificates, requests and CRLs.\n  * Support for password based recipient info for CMS.\n  * Support TLS v1.2 and TLS v1.1.\n  * Preliminary FIPS capability for unvalidated 2.0 FIPS module.\n  * SRP support.\n\nOpenSSL 1.0.0\n-------------\n\n### Major changes between OpenSSL 1.0.0s and OpenSSL 1.0.0t [3 Dec 2015]\n\n  * X509_ATTRIBUTE memory leak (([CVE-2015-3195]))\n  * Race condition handling PSK identify hint ([CVE-2015-3196])\n\n### Major changes between OpenSSL 1.0.0r and OpenSSL 1.0.0s [11 Jun 2015]\n\n  * Malformed ECParameters causes infinite loop ([CVE-2015-1788])\n  * Exploitable out-of-bounds read in X509_cmp_time ([CVE-2015-1789])\n  * PKCS7 crash with missing EnvelopedContent ([CVE-2015-1790])\n  * CMS verify infinite loop with unknown hash function ([CVE-2015-1792])\n  * Race condition handling NewSessionTicket ([CVE-2015-1791])\n\n### Major changes between OpenSSL 1.0.0q and OpenSSL 1.0.0r [19 Mar 2015]\n\n  * Segmentation fault in ASN1_TYPE_cmp fix ([CVE-2015-0286])\n  * ASN.1 structure reuse memory corruption fix ([CVE-2015-0287])\n  * PKCS7 NULL pointer dereferences fix ([CVE-2015-0289])\n  * DoS via reachable assert in SSLv2 servers fix ([CVE-2015-0293])\n  * Use After Free following d2i_ECPrivatekey error fix ([CVE-2015-0209])\n  * X509_to_X509_REQ NULL pointer deref fix ([CVE-2015-0288])\n  * Removed the export ciphers from the DEFAULT ciphers\n\n### Major changes between OpenSSL 1.0.0p and OpenSSL 1.0.0q [15 Jan 2015]\n\n  * Build fixes for the Windows and OpenVMS platforms\n\n### Major changes between OpenSSL 1.0.0o and OpenSSL 1.0.0p [8 Jan 2015]\n\n  * Fix for [CVE-2014-3571]\n  * Fix for [CVE-2015-0206]\n  * Fix for [CVE-2014-3569]\n  * Fix for [CVE-2014-3572]\n  * Fix for [CVE-2015-0204]\n  * Fix for [CVE-2015-0205]\n  * Fix for [CVE-2014-8275]\n  * Fix for [CVE-2014-3570]\n\n### Major changes between OpenSSL 1.0.0n and OpenSSL 1.0.0o [15 Oct 2014]\n\n  * Fix for [CVE-2014-3513]\n  * Fix for [CVE-2014-3567]\n  * Mitigation for [CVE-2014-3566] (SSL protocol vulnerability)\n  * Fix for [CVE-2014-3568]\n\n### Major changes between OpenSSL 1.0.0m and OpenSSL 1.0.0n [6 Aug 2014]\n\n  * Fix for [CVE-2014-3510]\n  * Fix for [CVE-2014-3507]\n  * Fix for [CVE-2014-3506]\n  * Fix for [CVE-2014-3505]\n  * Fix for [CVE-2014-3509]\n  * Fix for [CVE-2014-3508]\n\n  Known issues in OpenSSL 1.0.0m:\n\n  * EAP-FAST and other applications using tls_session_secret_cb\n    won't resume sessions. Fixed in 1.0.0n-dev\n  * Compilation failure of s3_pkt.c on some platforms due to missing\n    `<limits.h>` include. Fixed in 1.0.0n-dev\n\n### Major changes between OpenSSL 1.0.0l and OpenSSL 1.0.0m [5 Jun 2014]\n\n  * Fix for [CVE-2014-0224]\n  * Fix for [CVE-2014-0221]\n  * Fix for [CVE-2014-0198]\n  * Fix for [CVE-2014-0195]\n  * Fix for [CVE-2014-3470]\n  * Fix for [CVE-2014-0076]\n  * Fix for [CVE-2010-5298]\n\n### Major changes between OpenSSL 1.0.0k and OpenSSL 1.0.0l [6 Jan 2014]\n\n  * Fix for DTLS retransmission bug ([CVE-2013-6450])\n\n### Major changes between OpenSSL 1.0.0j and OpenSSL 1.0.0k [5 Feb 2013]\n\n  * Fix for SSL/TLS/DTLS CBC plaintext recovery attack ([CVE-2013-0169])\n  * Fix OCSP bad key DoS attack ([CVE-2013-0166])\n\n### Major changes between OpenSSL 1.0.0i and OpenSSL 1.0.0j [10 May 2012]\n\n  * Fix DTLS record length checking bug ([CVE-2012-2333])\n\n### Major changes between OpenSSL 1.0.0h and OpenSSL 1.0.0i [19 Apr 2012]\n\n  * Fix for ASN1 overflow bug ([CVE-2012-2110])\n\n### Major changes between OpenSSL 1.0.0g and OpenSSL 1.0.0h [12 Mar 2012]\n\n  * Fix for CMS/PKCS#7 MMA ([CVE-2012-0884])\n  * Corrected fix for ([CVE-2011-4619])\n  * Various DTLS fixes.\n\n### Major changes between OpenSSL 1.0.0f and OpenSSL 1.0.0g [18 Jan 2012]\n\n  * Fix for DTLS DoS issue ([CVE-2012-0050])\n\n### Major changes between OpenSSL 1.0.0e and OpenSSL 1.0.0f [4 Jan 2012]\n\n  * Fix for DTLS plaintext recovery attack ([CVE-2011-4108])\n  * Clear block padding bytes of SSL 3.0 records ([CVE-2011-4576])\n  * Only allow one SGC handshake restart for SSL/TLS ([CVE-2011-4619])\n  * Check parameters are not NULL in GOST ENGINE ([CVE-2012-0027])\n  * Check for malformed RFC3779 data ([CVE-2011-4577])\n\n### Major changes between OpenSSL 1.0.0d and OpenSSL 1.0.0e [6 Sep 2011]\n\n  * Fix for CRL vulnerability issue ([CVE-2011-3207])\n  * Fix for ECDH crashes ([CVE-2011-3210])\n  * Protection against EC timing attacks.\n  * Support ECDH ciphersuites for certificates using SHA2 algorithms.\n  * Various DTLS fixes.\n\n### Major changes between OpenSSL 1.0.0c and OpenSSL 1.0.0d [8 Feb 2011]\n\n  * Fix for security issue ([CVE-2011-0014])\n\n### Major changes between OpenSSL 1.0.0b and OpenSSL 1.0.0c [2 Dec 2010]\n\n  * Fix for security issue ([CVE-2010-4180])\n  * Fix for ([CVE-2010-4252])\n  * Fix mishandling of absent EC point format extension.\n  * Fix various platform compilation issues.\n  * Corrected fix for security issue ([CVE-2010-3864]).\n\n### Major changes between OpenSSL 1.0.0a and OpenSSL 1.0.0b [16 Nov 2010]\n\n  * Fix for security issue ([CVE-2010-3864]).\n  * Fix for ([CVE-2010-2939])\n  * Fix WIN32 build system for GOST ENGINE.\n\n### Major changes between OpenSSL 1.0.0 and OpenSSL 1.0.0a [1 Jun 2010]\n\n  * Fix for security issue ([CVE-2010-1633]).\n  * GOST MAC and CFB fixes.\n\n### Major changes between OpenSSL 0.9.8n and OpenSSL 1.0.0 [29 Mar 2010]\n\n  * RFC3280 path validation: sufficient to process PKITS tests.\n  * Integrated support for PVK files and keyblobs.\n  * Change default private key format to PKCS#8.\n  * CMS support: able to process all examples in RFC4134\n  * Streaming ASN1 encode support for PKCS#7 and CMS.\n  * Multiple signer and signer add support for PKCS#7 and CMS.\n  * ASN1 printing support.\n  * Whirlpool hash algorithm added.\n  * RFC3161 time stamp support.\n  * New generalised public key API supporting ENGINE based algorithms.\n  * New generalised public key API utilities.\n  * New ENGINE supporting GOST algorithms.\n  * SSL/TLS GOST ciphersuite support.\n  * PKCS#7 and CMS GOST support.\n  * RFC4279 PSK ciphersuite support.\n  * Supported points format extension for ECC ciphersuites.\n  * ecdsa-with-SHA224/256/384/512 signature types.\n  * dsa-with-SHA224 and dsa-with-SHA256 signature types.\n  * Opaque PRF Input TLS extension support.\n  * Updated time routines to avoid OS limitations.\n\nOpenSSL 0.9.x\n-------------\n\n### Major changes between OpenSSL 0.9.8m and OpenSSL 0.9.8n [24 Mar 2010]\n\n  * CFB cipher definition fixes.\n  * Fix security issues [CVE-2010-0740] and [CVE-2010-0433].\n\n### Major changes between OpenSSL 0.9.8l and OpenSSL 0.9.8m [25 Feb 2010]\n\n  * Cipher definition fixes.\n  * Workaround for slow RAND_poll() on some WIN32 versions.\n  * Remove MD2 from algorithm tables.\n  * SPKAC handling fixes.\n  * Support for RFC5746 TLS renegotiation extension.\n  * Compression memory leak fixed.\n  * Compression session resumption fixed.\n  * Ticket and SNI coexistence fixes.\n  * Many fixes to DTLS handling.\n\n### Major changes between OpenSSL 0.9.8k and OpenSSL 0.9.8l [5 Nov 2009]\n\n  * Temporary work around for [CVE-2009-3555]: disable renegotiation.\n\n### Major changes between OpenSSL 0.9.8j and OpenSSL 0.9.8k [25 Mar 2009]\n\n  * Fix various build issues.\n  * Fix security issues [CVE-2009-0590], [CVE-2009-0591], [CVE-2009-0789]\n\n### Major changes between OpenSSL 0.9.8i and OpenSSL 0.9.8j [7 Jan 2009]\n\n  * Fix security issue ([CVE-2008-5077])\n  * Merge FIPS 140-2 branch code.\n\n### Major changes between OpenSSL 0.9.8g and OpenSSL 0.9.8h [28 May 2008]\n\n  * CryptoAPI ENGINE support.\n  * Various precautionary measures.\n  * Fix for bugs affecting certificate request creation.\n  * Support for local machine keyset attribute in PKCS#12 files.\n\n### Major changes between OpenSSL 0.9.8f and OpenSSL 0.9.8g [19 Oct 2007]\n\n  * Backport of CMS functionality to 0.9.8.\n  * Fixes for bugs introduced with 0.9.8f.\n\n### Major changes between OpenSSL 0.9.8e and OpenSSL 0.9.8f [11 Oct 2007]\n\n  * Add gcc 4.2 support.\n  * Add support for AES and SSE2 assembly language optimization\n    for VC++ build.\n  * Support for RFC4507bis and server name extensions if explicitly\n    selected at compile time.\n  * DTLS improvements.\n  * RFC4507bis support.\n  * TLS Extensions support.\n\n### Major changes between OpenSSL 0.9.8d and OpenSSL 0.9.8e [23 Feb 2007]\n\n  * Various ciphersuite selection fixes.\n  * RFC3779 support.\n\n### Major changes between OpenSSL 0.9.8c and OpenSSL 0.9.8d [28 Sep 2006]\n\n  * Introduce limits to prevent malicious key DoS  ([CVE-2006-2940])\n  * Fix security issues [CVE-2006-2937], [CVE-2006-3737], [CVE-2006-4343]\n  * Changes to ciphersuite selection algorithm\n\n### Major changes between OpenSSL 0.9.8b and OpenSSL 0.9.8c [5 Sep 2006]\n\n  * Fix Daniel Bleichenbacher forged signature attack, [CVE-2006-4339]\n  * New cipher Camellia\n\n### Major changes between OpenSSL 0.9.8a and OpenSSL 0.9.8b [4 May 2006]\n\n  * Cipher string fixes.\n  * Fixes for VC++ 2005.\n  * Updated ECC cipher suite support.\n  * New functions EVP_CIPHER_CTX_new() and EVP_CIPHER_CTX_free().\n  * Zlib compression usage fixes.\n  * Built in dynamic engine compilation support on Win32.\n  * Fixes auto dynamic engine loading in Win32.\n\n### Major changes between OpenSSL 0.9.8 and OpenSSL 0.9.8a [11 Oct 2005]\n\n  * Fix potential SSL 2.0 rollback ([CVE-2005-2969])\n  * Extended Windows CE support\n\n### Major changes between OpenSSL 0.9.7g and OpenSSL 0.9.8 [5 Jul 2005]\n\n  * Major work on the BIGNUM library for higher efficiency and to\n    make operations more streamlined and less contradictory.  This\n    is the result of a major audit of the BIGNUM library.\n  * Addition of BIGNUM functions for fields GF(2^m) and NIST\n    curves, to support the Elliptic Crypto functions.\n  * Major work on Elliptic Crypto; ECDH and ECDSA added, including\n    the use through EVP, X509 and ENGINE.\n  * New ASN.1 mini-compiler that's usable through the OpenSSL\n    configuration file.\n  * Added support for ASN.1 indefinite length constructed encoding.\n  * New PKCS#12 'medium level' API to manipulate PKCS#12 files.\n  * Complete rework of shared library construction and linking\n    programs with shared or static libraries, through a separate\n    Makefile.shared.\n  * Rework of the passing of parameters from one Makefile to another.\n  * Changed ENGINE framework to load dynamic engine modules\n    automatically from specifically given directories.\n  * New structure and ASN.1 functions for CertificatePair.\n  * Changed the ZLIB compression method to be stateful.\n  * Changed the key-generation and primality testing \"progress\"\n    mechanism to take a structure that contains the ticker\n    function and an argument.\n  * New engine module: GMP (performs private key exponentiation).\n  * New engine module: VIA PadLOck ACE extension in VIA C3\n    Nehemiah processors.\n  * Added support for IPv6 addresses in certificate extensions.\n    See RFC 1884, section 2.2.\n  * Added support for certificate policy mappings, policy\n    constraints and name constraints.\n  * Added support for multi-valued AVAs in the OpenSSL\n    configuration file.\n  * Added support for multiple certificates with the same subject\n    in the 'openssl ca' index file.\n  * Make it possible to create self-signed certificates using\n    'openssl ca -selfsign'.\n  * Make it possible to generate a serial number file with\n    'openssl ca -create_serial'.\n  * New binary search functions with extended functionality.\n  * New BUF functions.\n  * New STORE structure and library to provide an interface to all\n    sorts of data repositories.  Supports storage of public and\n    private keys, certificates, CRLs, numbers and arbitrary blobs.\n    This library is unfortunately unfinished and unused within\n    OpenSSL.\n  * New control functions for the error stack.\n  * Changed the PKCS#7 library to support one-pass S/MIME\n    processing.\n  * Added the possibility to compile without old deprecated\n    functionality with the OPENSSL_NO_DEPRECATED macro or the\n    'no-deprecated' argument to the config and Configure scripts.\n  * Constification of all ASN.1 conversion functions, and other\n    affected functions.\n  * Improved platform support for PowerPC.\n  * New FIPS 180-2 algorithms (SHA-224, -256, -384 and -512).\n  * New X509_VERIFY_PARAM structure to support parameterisation\n  of X.509 path validation.\n  * Major overhaul of RC4 performance on Intel P4, IA-64 and\n    AMD64.\n  * Changed the Configure script to have some algorithms disabled\n    by default.  Those can be explicitly enabled with the new\n    argument form 'enable-xxx'.\n  * Change the default digest in 'openssl' commands from MD5 to\n    SHA-1.\n  * Added support for DTLS.\n  * New BIGNUM blinding.\n  * Added support for the RSA-PSS encryption scheme\n  * Added support for the RSA X.931 padding.\n  * Added support for BSD sockets on NetWare.\n  * Added support for files larger than 2GB.\n  * Added initial support for Win64.\n  * Added alternate pkg-config files.\n\n### Major changes between OpenSSL 0.9.7l and OpenSSL 0.9.7m [23 Feb 2007]\n\n  * FIPS 1.1.1 module linking.\n  * Various ciphersuite selection fixes.\n\n### Major changes between OpenSSL 0.9.7k and OpenSSL 0.9.7l [28 Sep 2006]\n\n  * Introduce limits to prevent malicious key DoS  ([CVE-2006-2940])\n  * Fix security issues [CVE-2006-2937], [CVE-2006-3737], [CVE-2006-4343]\n\n### Major changes between OpenSSL 0.9.7j and OpenSSL 0.9.7k [5 Sep 2006]\n\n  * Fix Daniel Bleichenbacher forged signature attack, [CVE-2006-4339]\n\n### Major changes between OpenSSL 0.9.7i and OpenSSL 0.9.7j [4 May 2006]\n\n  * Visual C++ 2005 fixes.\n  * Update Windows build system for FIPS.\n\n### Major changes between OpenSSL 0.9.7h and OpenSSL 0.9.7i [14 Oct 2005]\n\n  * Give EVP_MAX_MD_SIZE its old value, except for a FIPS build.\n\n### Major changes between OpenSSL 0.9.7g and OpenSSL 0.9.7h [11 Oct 2005]\n\n  * Fix SSL 2.0 Rollback ([CVE-2005-2969])\n  * Allow use of fixed-length exponent on DSA signing\n  * Default fixed-window RSA, DSA, DH private-key operations\n\n### Major changes between OpenSSL 0.9.7f and OpenSSL 0.9.7g [11 Apr 2005]\n\n  * More compilation issues fixed.\n  * Adaptation to more modern Kerberos API.\n  * Enhanced or corrected configuration for Solaris64, Mingw and Cygwin.\n  * Enhanced x86_64 assembler BIGNUM module.\n  * More constification.\n  * Added processing of proxy certificates (RFC 3820).\n\n### Major changes between OpenSSL 0.9.7e and OpenSSL 0.9.7f [22 Mar 2005]\n\n  * Several compilation issues fixed.\n  * Many memory allocation failure checks added.\n  * Improved comparison of X509 Name type.\n  * Mandatory basic checks on certificates.\n  * Performance improvements.\n\n### Major changes between OpenSSL 0.9.7d and OpenSSL 0.9.7e [25 Oct 2004]\n\n  * Fix race condition in CRL checking code.\n  * Fixes to PKCS#7 (S/MIME) code.\n\n### Major changes between OpenSSL 0.9.7c and OpenSSL 0.9.7d [17 Mar 2004]\n\n  * Security: Fix Kerberos ciphersuite SSL/TLS handshaking bug\n  * Security: Fix null-pointer assignment in do_change_cipher_spec()\n  * Allow multiple active certificates with same subject in CA index\n  * Multiple X509 verification fixes\n  * Speed up HMAC and other operations\n\n### Major changes between OpenSSL 0.9.7b and OpenSSL 0.9.7c [30 Sep 2003]\n\n  * Security: fix various ASN1 parsing bugs.\n  * New -ignore_err option to OCSP utility.\n  * Various interop and bug fixes in S/MIME code.\n  * SSL/TLS protocol fix for unrequested client certificates.\n\n### Major changes between OpenSSL 0.9.7a and OpenSSL 0.9.7b [10 Apr 2003]\n\n  * Security: counter the Klima-Pokorny-Rosa extension of\n    Bleichbacher's attack\n  * Security: make RSA blinding default.\n  * Configuration: Irix fixes, AIX fixes, better mingw support.\n  * Support for new platforms: linux-ia64-ecc.\n  * Build: shared library support fixes.\n  * ASN.1: treat domainComponent correctly.\n  * Documentation: fixes and additions.\n\n### Major changes between OpenSSL 0.9.7 and OpenSSL 0.9.7a [19 Feb 2003]\n\n  * Security: Important security related bugfixes.\n  * Enhanced compatibility with MIT Kerberos.\n  * Can be built without the ENGINE framework.\n  * IA32 assembler enhancements.\n  * Support for new platforms: FreeBSD/IA64 and FreeBSD/Sparc64.\n  * Configuration: the no-err option now works properly.\n  * SSL/TLS: now handles manual certificate chain building.\n  * SSL/TLS: certain session ID malfunctions corrected.\n\n### Major changes between OpenSSL 0.9.6 and OpenSSL 0.9.7 [30 Dec 2002]\n\n  * New library section OCSP.\n  * Complete rewrite of ASN1 code.\n  * CRL checking in verify code and openssl utility.\n  * Extension copying in 'ca' utility.\n  * Flexible display options in 'ca' utility.\n  * Provisional support for international characters with UTF8.\n  * Support for external crypto devices ('engine') is no longer\n    a separate distribution.\n  * New elliptic curve library section.\n  * New AES (Rijndael) library section.\n  * Support for new platforms: Windows CE, Tandem OSS, A/UX, AIX 64-bit,\n    Linux x86_64, Linux 64-bit on Sparc v9\n  * Extended support for some platforms: VxWorks\n  * Enhanced support for shared libraries.\n  * Now only builds PIC code when shared library support is requested.\n  * Support for pkg-config.\n  * Lots of new manuals.\n  * Makes symbolic links to or copies of manuals to cover all described\n    functions.\n  * Change DES API to clean up the namespace (some applications link also\n    against libdes providing similar functions having the same name).\n    Provide macros for backward compatibility (will be removed in the\n    future).\n  * Unify handling of cryptographic algorithms (software and engine)\n    to be available via EVP routines for asymmetric and symmetric ciphers.\n  * NCONF: new configuration handling routines.\n  * Change API to use more 'const' modifiers to improve error checking\n    and help optimizers.\n  * Finally remove references to RSAref.\n  * Reworked parts of the BIGNUM code.\n  * Support for new engines: Broadcom ubsec, Accelerated Encryption\n    Processing, IBM 4758.\n  * A few new engines added in the demos area.\n  * Extended and corrected OID (object identifier) table.\n  * PRNG: query at more locations for a random device, automatic query for\n    EGD style random sources at several locations.\n  * SSL/TLS: allow optional cipher choice according to server's preference.\n  * SSL/TLS: allow server to explicitly set new session ids.\n  * SSL/TLS: support Kerberos cipher suites (RFC2712).\n    Only supports MIT Kerberos for now.\n  * SSL/TLS: allow more precise control of renegotiations and sessions.\n  * SSL/TLS: add callback to retrieve SSL/TLS messages.\n  * SSL/TLS: support AES cipher suites (RFC3268).\n\n### Major changes between OpenSSL 0.9.6j and OpenSSL 0.9.6k [30 Sep 2003]\n\n  * Security: fix various ASN1 parsing bugs.\n  * SSL/TLS protocol fix for unrequested client certificates.\n\n### Major changes between OpenSSL 0.9.6i and OpenSSL 0.9.6j [10 Apr 2003]\n\n  * Security: counter the Klima-Pokorny-Rosa extension of\n    Bleichbacher's attack\n  * Security: make RSA blinding default.\n  * Build: shared library support fixes.\n\n### Major changes between OpenSSL 0.9.6h and OpenSSL 0.9.6i [19 Feb 2003]\n\n  * Important security related bugfixes.\n\n### Major changes between OpenSSL 0.9.6g and OpenSSL 0.9.6h [5 Dec 2002]\n\n  * New configuration targets for Tandem OSS and A/UX.\n  * New OIDs for Microsoft attributes.\n  * Better handling of SSL session caching.\n  * Better comparison of distinguished names.\n  * Better handling of shared libraries in a mixed GNU/non-GNU environment.\n  * Support assembler code with Borland C.\n  * Fixes for length problems.\n  * Fixes for uninitialised variables.\n  * Fixes for memory leaks, some unusual crashes and some race conditions.\n  * Fixes for smaller building problems.\n  * Updates of manuals, FAQ and other instructive documents.\n\n### Major changes between OpenSSL 0.9.6f and OpenSSL 0.9.6g [9 Aug 2002]\n\n  * Important building fixes on Unix.\n\n### Major changes between OpenSSL 0.9.6e and OpenSSL 0.9.6f [8 Aug 2002]\n\n  * Various important bugfixes.\n\n### Major changes between OpenSSL 0.9.6d and OpenSSL 0.9.6e [30 Jul 2002]\n\n  * Important security related bugfixes.\n  * Various SSL/TLS library bugfixes.\n\n### Major changes between OpenSSL 0.9.6c and OpenSSL 0.9.6d [9 May 2002]\n\n  * Various SSL/TLS library bugfixes.\n  * Fix DH parameter generation for 'non-standard' generators.\n\n### Major changes between OpenSSL 0.9.6b and OpenSSL 0.9.6c [21 Dec 2001]\n\n  * Various SSL/TLS library bugfixes.\n  * BIGNUM library fixes.\n  * RSA OAEP and random number generation fixes.\n  * Object identifiers corrected and added.\n  * Add assembler BN routines for IA64.\n  * Add support for OS/390 Unix, UnixWare with gcc, OpenUNIX 8,\n    MIPS Linux; shared library support for Irix, HP-UX.\n  * Add crypto accelerator support for AEP, Baltimore SureWare,\n    Broadcom and Cryptographic Appliance's keyserver\n    [in 0.9.6c-engine release].\n\n### Major changes between OpenSSL 0.9.6a and OpenSSL 0.9.6b [9 Jul 2001]\n\n  * Security fix: PRNG improvements.\n  * Security fix: RSA OAEP check.\n  * Security fix: Reinsert and fix countermeasure to Bleichbacher's\n    attack.\n  * MIPS bug fix in BIGNUM.\n  * Bug fix in \"openssl enc\".\n  * Bug fix in X.509 printing routine.\n  * Bug fix in DSA verification routine and DSA S/MIME verification.\n  * Bug fix to make PRNG thread-safe.\n  * Bug fix in RAND_file_name().\n  * Bug fix in compatibility mode trust settings.\n  * Bug fix in blowfish EVP.\n  * Increase default size for BIO buffering filter.\n  * Compatibility fixes in some scripts.\n\n### Major changes between OpenSSL 0.9.6 and OpenSSL 0.9.6a [5 Apr 2001]\n\n  * Security fix: change behavior of OpenSSL to avoid using\n    environment variables when running as root.\n  * Security fix: check the result of RSA-CRT to reduce the\n    possibility of deducing the private key from an incorrectly\n    calculated signature.\n  * Security fix: prevent Bleichenbacher's DSA attack.\n  * Security fix: Zero the premaster secret after deriving the\n    master secret in DH ciphersuites.\n  * Reimplement SSL_peek(), which had various problems.\n  * Compatibility fix: the function des_encrypt() renamed to\n    des_encrypt1() to avoid clashes with some Unixen libc.\n  * Bug fixes for Win32, HP/UX and Irix.\n  * Bug fixes in BIGNUM, SSL, PKCS#7, PKCS#12, X.509, CONF and\n    memory checking routines.\n  * Bug fixes for RSA operations in threaded environments.\n  * Bug fixes in misc. openssl applications.\n  * Remove a few potential memory leaks.\n  * Add tighter checks of BIGNUM routines.\n  * Shared library support has been reworked for generality.\n  * More documentation.\n  * New function BN_rand_range().\n  * Add \"-rand\" option to openssl s_client and s_server.\n\n### Major changes between OpenSSL 0.9.5a and OpenSSL 0.9.6 [10 Oct 2000]\n\n  * Some documentation for BIO and SSL libraries.\n  * Enhanced chain verification using key identifiers.\n  * New sign and verify options to 'dgst' application.\n  * Support for DER and PEM encoded messages in 'smime' application.\n  * New 'rsautl' application, low-level RSA utility.\n  * MD4 now included.\n  * Bugfix for SSL rollback padding check.\n  * Support for external crypto devices [1].\n  * Enhanced EVP interface.\n\n  [1] The support for external crypto devices is currently a separate\n      distribution.  See the file README-Engine.md.\n\n### Major changes between OpenSSL 0.9.5 and OpenSSL 0.9.5a [1 Apr 2000]\n\n  * Bug fixes for Win32, SuSE Linux, NeXTSTEP and FreeBSD 2.2.8\n  * Shared library support for HPUX and Solaris-gcc\n  * Support of Linux/IA64\n  * Assembler support for Mingw32\n  * New 'rand' application\n  * New way to check for existence of algorithms from scripts\n\n### Major changes between OpenSSL 0.9.4 and OpenSSL 0.9.5 [25 May 2000]\n\n  * S/MIME support in new 'smime' command\n  * Documentation for the OpenSSL command line application\n  * Automation of 'req' application\n  * Fixes to make s_client, s_server work under Windows\n  * Support for multiple fieldnames in SPKACs\n  * New SPKAC command line utility and associated library functions\n  * Options to allow passwords to be obtained from various sources\n  * New public key PEM format and options to handle it\n  * Many other fixes and enhancements to command line utilities\n  * Usable certificate chain verification\n  * Certificate purpose checking\n  * Certificate trust settings\n  * Support of authority information access extension\n  * Extensions in certificate requests\n  * Simplified X509 name and attribute routines\n  * Initial (incomplete) support for international character sets\n  * New DH_METHOD, DSA_METHOD and enhanced RSA_METHOD\n  * Read only memory BIOs and simplified creation function\n  * TLS/SSL protocol bugfixes: Accept TLS 'client hello' in SSL 3.0\n    record; allow fragmentation and interleaving of handshake and other\n    data\n  * TLS/SSL code now \"tolerates\" MS SGC\n  * Work around for Netscape client certificate hang bug\n  * RSA_NULL option that removes RSA patent code but keeps other\n    RSA functionality\n  * Memory leak detection now allows applications to add extra information\n    via a per-thread stack\n  * PRNG robustness improved\n  * EGD support\n  * BIGNUM library bug fixes\n  * Faster DSA parameter generation\n  * Enhanced support for Alpha Linux\n  * Experimental macOS support\n\n### Major changes between OpenSSL 0.9.3 and OpenSSL 0.9.4 [9 Aug 1999]\n\n  * Transparent support for PKCS#8 format private keys: these are used\n    by several software packages and are more secure than the standard\n    form\n  * PKCS#5 v2.0 implementation\n  * Password callbacks have a new void * argument for application data\n  * Avoid various memory leaks\n  * New pipe-like BIO that allows using the SSL library when actual I/O\n    must be handled by the application (BIO pair)\n\n### Major changes between OpenSSL 0.9.2b and OpenSSL 0.9.3 [24 May 1999]\n\n  * Lots of enhancements and cleanups to the Configuration mechanism\n  * RSA OEAP related fixes\n  * Added \"openssl ca -revoke\" option for revoking a certificate\n  * Source cleanups: const correctness, type-safe stacks and ASN.1 SETs\n  * Source tree cleanups: removed lots of obsolete files\n  * Thawte SXNet, certificate policies and CRL distribution points\n    extension support\n  * Preliminary (experimental) S/MIME support\n  * Support for ASN.1 UTF8String and VisibleString\n  * Full integration of PKCS#12 code\n  * Sparc assembler bignum implementation, optimized hash functions\n  * Option to disable selected ciphers\n\n### Major changes between OpenSSL 0.9.1c and OpenSSL 0.9.2b [22 Mar 1999]\n\n  * Fixed a security hole related to session resumption\n  * Fixed RSA encryption routines for the p < q case\n  * \"ALL\" in cipher lists now means \"everything except NULL ciphers\"\n  * Support for Triple-DES CBCM cipher\n  * Support of Optimal Asymmetric Encryption Padding (OAEP) for RSA\n  * First support for new TLSv1 ciphers\n  * Added a few new BIOs (syslog BIO, reliable BIO)\n  * Extended support for DSA certificate/keys.\n  * Extended support for Certificate Signing Requests (CSR)\n  * Initial support for X.509v3 extensions\n  * Extended support for compression inside the SSL record layer\n  * Overhauled Win32 builds\n  * Cleanups and fixes to the Big Number (BN) library\n  * Support for ASN.1 GeneralizedTime\n  * Split ASN.1 SETs from SEQUENCEs\n  * ASN1 and PEM support for Netscape Certificate Sequences\n  * Overhauled Perl interface\n  * Lots of source tree cleanups.\n  * Lots of memory leak fixes.\n  * Lots of bug fixes.\n\n### Major changes between SSLeay 0.9.0b and OpenSSL 0.9.1c [23 Dec 1998]\n\n  * Integration of the popular NO_RSA/NO_DSA patches\n  * Initial support for compression inside the SSL record layer\n  * Added BIO proxy and filtering functionality\n  * Extended Big Number (BN) library\n  * Added RIPE MD160 message digest\n  * Added support for RC2/64bit cipher\n  * Extended ASN.1 parser routines\n  * Adjustments of the source tree for CVS\n  * Support for various new platforms\n\n<!-- Links -->\n\n[CVE-2024-9143]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-9143\n[CVE-2024-6119]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-6119\n[CVE-2024-5535]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-5535\n[CVE-2024-4741]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-4741\n[CVE-2024-4603]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-4603\n[CVE-2024-2511]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-2511\n[CVE-2024-0727]: https://www.openssl.org/news/vulnerabilities.html#CVE-2024-0727\n[CVE-2023-6237]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-6237\n[CVE-2023-6129]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-6129\n[CVE-2023-5678]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-5678\n[CVE-2023-5363]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-5363\n[CVE-2023-4807]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-4807\n[CVE-2023-3817]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-3817\n[CVE-2023-3446]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-3446\n[CVE-2023-2975]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-2975\n[CVE-2023-2650]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-2650\n[CVE-2023-1255]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-1255\n[CVE-2023-0466]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0466\n[CVE-2023-0465]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0465\n[CVE-2023-0464]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0464\n[CVE-2023-0401]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0401\n[CVE-2023-0286]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0286\n[CVE-2023-0217]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0217\n[CVE-2023-0216]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0216\n[CVE-2023-0215]: https://www.openssl.org/news/vulnerabilities.html#CVE-2023-0215\n[CVE-2022-4450]: https://www.openssl.org/news/vulnerabilities.html#CVE-2022-4450\n[CVE-2022-4304]: https://www.openssl.org/news/vulnerabilities.html#CVE-2022-4304\n[CVE-2022-4203]: https://www.openssl.org/news/vulnerabilities.html#CVE-2022-4203\n[CVE-2022-3996]: https://www.openssl.org/news/vulnerabilities.html#CVE-2022-3996\n[CVE-2022-2274]: https://www.openssl.org/news/vulnerabilities.html#CVE-2022-2274\n[CVE-2022-2097]: https://www.openssl.org/news/vulnerabilities.html#CVE-2022-2097\n[CVE-2020-1971]: https://www.openssl.org/news/vulnerabilities.html#CVE-2020-1971\n[CVE-2020-1967]: https://www.openssl.org/news/vulnerabilities.html#CVE-2020-1967\n[CVE-2019-1563]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1563\n[CVE-2019-1559]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1559\n[CVE-2019-1552]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1552\n[CVE-2019-1551]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1551\n[CVE-2019-1549]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1549\n[CVE-2019-1547]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1547\n[CVE-2019-1543]: https://www.openssl.org/news/vulnerabilities.html#CVE-2019-1543\n[CVE-2018-5407]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-5407\n[CVE-2018-0739]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-0739\n[CVE-2018-0737]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-0737\n[CVE-2018-0735]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-0735\n[CVE-2018-0734]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-0734\n[CVE-2018-0733]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-0733\n[CVE-2018-0732]: https://www.openssl.org/news/vulnerabilities.html#CVE-2018-0732\n[CVE-2017-3738]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3738\n[CVE-2017-3737]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3737\n[CVE-2017-3736]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3736\n[CVE-2017-3735]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3735\n[CVE-2017-3733]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3733\n[CVE-2017-3732]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3732\n[CVE-2017-3731]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3731\n[CVE-2017-3730]: https://www.openssl.org/news/vulnerabilities.html#CVE-2017-3730\n[CVE-2016-7055]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-7055\n[CVE-2016-7054]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-7054\n[CVE-2016-7053]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-7053\n[CVE-2016-7052]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-7052\n[CVE-2016-6309]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6309\n[CVE-2016-6308]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6308\n[CVE-2016-6307]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6307\n[CVE-2016-6306]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6306\n[CVE-2016-6305]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6305\n[CVE-2016-6304]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6304\n[CVE-2016-6303]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6303\n[CVE-2016-6302]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-6302\n[CVE-2016-2183]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2183\n[CVE-2016-2182]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2182\n[CVE-2016-2181]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2181\n[CVE-2016-2180]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2180\n[CVE-2016-2179]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2179\n[CVE-2016-2178]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2178\n[CVE-2016-2177]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2177\n[CVE-2016-2176]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2176\n[CVE-2016-2109]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2109\n[CVE-2016-2107]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2107\n[CVE-2016-2106]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2106\n[CVE-2016-2105]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-2105\n[CVE-2016-0800]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0800\n[CVE-2016-0799]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0799\n[CVE-2016-0798]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0798\n[CVE-2016-0797]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0797\n[CVE-2016-0705]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0705\n[CVE-2016-0702]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0702\n[CVE-2016-0701]: https://www.openssl.org/news/vulnerabilities.html#CVE-2016-0701\n[CVE-2015-3197]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-3197\n[CVE-2015-3196]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-3196\n[CVE-2015-3195]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-3195\n[CVE-2015-3194]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-3194\n[CVE-2015-3193]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-3193\n[CVE-2015-1793]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1793\n[CVE-2015-1792]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1792\n[CVE-2015-1791]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1791\n[CVE-2015-1790]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1790\n[CVE-2015-1789]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1789\n[CVE-2015-1788]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1788\n[CVE-2015-1787]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-1787\n[CVE-2015-0293]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0293\n[CVE-2015-0291]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0291\n[CVE-2015-0290]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0290\n[CVE-2015-0289]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0289\n[CVE-2015-0288]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0288\n[CVE-2015-0287]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0287\n[CVE-2015-0286]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0286\n[CVE-2015-0285]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0285\n[CVE-2015-0209]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0209\n[CVE-2015-0208]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0208\n[CVE-2015-0207]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0207\n[CVE-2015-0206]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0206\n[CVE-2015-0205]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0205\n[CVE-2015-0204]: https://www.openssl.org/news/vulnerabilities.html#CVE-2015-0204\n[CVE-2014-8275]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-8275\n[CVE-2014-5139]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-5139\n[CVE-2014-3572]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3572\n[CVE-2014-3571]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3571\n[CVE-2014-3570]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3570\n[CVE-2014-3569]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3569\n[CVE-2014-3568]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3568\n[CVE-2014-3567]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3567\n[CVE-2014-3566]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3566\n[CVE-2014-3513]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3513\n[CVE-2014-3512]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3512\n[CVE-2014-3511]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3511\n[CVE-2014-3510]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3510\n[CVE-2014-3509]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3509\n[CVE-2014-3508]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3508\n[CVE-2014-3507]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3507\n[CVE-2014-3506]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3506\n[CVE-2014-3505]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3505\n[CVE-2014-3470]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-3470\n[CVE-2014-0224]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-0224\n[CVE-2014-0221]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-0221\n[CVE-2014-0198]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-0198\n[CVE-2014-0195]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-0195\n[CVE-2014-0160]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-0160\n[CVE-2014-0076]: https://www.openssl.org/news/vulnerabilities.html#CVE-2014-0076\n[CVE-2013-6450]: https://www.openssl.org/news/vulnerabilities.html#CVE-2013-6450\n[CVE-2013-6449]: https://www.openssl.org/news/vulnerabilities.html#CVE-2013-6449\n[CVE-2013-4353]: https://www.openssl.org/news/vulnerabilities.html#CVE-2013-4353\n[CVE-2013-0169]: https://www.openssl.org/news/vulnerabilities.html#CVE-2013-0169\n[CVE-2013-0166]: https://www.openssl.org/news/vulnerabilities.html#CVE-2013-0166\n[CVE-2012-2686]: https://www.openssl.org/news/vulnerabilities.html#CVE-2012-2686\n[CVE-2012-2333]: https://www.openssl.org/news/vulnerabilities.html#CVE-2012-2333\n[CVE-2012-2110]: https://www.openssl.org/news/vulnerabilities.html#CVE-2012-2110\n[CVE-2012-0884]: https://www.openssl.org/news/vulnerabilities.html#CVE-2012-0884\n[CVE-2012-0050]: https://www.openssl.org/news/vulnerabilities.html#CVE-2012-0050\n[CVE-2012-0027]: https://www.openssl.org/news/vulnerabilities.html#CVE-2012-0027\n[CVE-2011-4619]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-4619\n[CVE-2011-4577]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-4577\n[CVE-2011-4576]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-4576\n[CVE-2011-4108]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-4108\n[CVE-2011-3210]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-3210\n[CVE-2011-3207]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-3207\n[CVE-2011-0014]: https://www.openssl.org/news/vulnerabilities.html#CVE-2011-0014\n[CVE-2010-5298]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-5298\n[CVE-2010-4252]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-4252\n[CVE-2010-4180]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-4180\n[CVE-2010-3864]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-3864\n[CVE-2010-2939]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-2939\n[CVE-2010-1633]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-1633\n[CVE-2010-0740]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-0740\n[CVE-2010-0433]: https://www.openssl.org/news/vulnerabilities.html#CVE-2010-0433\n[CVE-2009-3555]: https://www.openssl.org/news/vulnerabilities.html#CVE-2009-3555\n[CVE-2009-0789]: https://www.openssl.org/news/vulnerabilities.html#CVE-2009-0789\n[CVE-2009-0591]: https://www.openssl.org/news/vulnerabilities.html#CVE-2009-0591\n[CVE-2009-0590]: https://www.openssl.org/news/vulnerabilities.html#CVE-2009-0590\n[CVE-2008-5077]: https://www.openssl.org/news/vulnerabilities.html#CVE-2008-5077\n[CVE-2006-4343]: https://www.openssl.org/news/vulnerabilities.html#CVE-2006-4343\n[CVE-2006-4339]: https://www.openssl.org/news/vulnerabilities.html#CVE-2006-4339\n[CVE-2006-3737]: https://www.openssl.org/news/vulnerabilities.html#CVE-2006-3737\n[CVE-2006-2940]: https://www.openssl.org/news/vulnerabilities.html#CVE-2006-2940\n[CVE-2006-2937]: https://www.openssl.org/news/vulnerabilities.html#CVE-2006-2937\n[CVE-2005-2969]: https://www.openssl.org/news/vulnerabilities.html#CVE-2005-2969\n[OpenSSL Guide]: https://www.openssl.org/docs/manmaster/man7/ossl-guide-introduction.html\n[CHANGES.md]: ./CHANGES.md\n[README-QUIC.md]: ./README-QUIC.md\n[issue tracker]: https://github.com/openssl/openssl/issues\n[CMVP]: https://csrc.nist.gov/projects/cryptographic-module-validation-program\n[ESV]: https://csrc.nist.gov/Projects/cryptographic-module-validation-program/entropy-validations\n[jitterentropy-library]: https://github.com/smuellerDD/jitterentropy-library\n"
        },
        {
          "name": "NOTES-ANDROID.md",
          "type": "blob",
          "size": 4.5107421875,
          "content": "Notes for Android platforms\n===========================\n\n Requirement details\n -------------------\n\n Beside basic tools like perl and make, you'll need to download the Android\n NDK. It's available for Linux, macOS and Windows, but only Linux\n version was actually tested. There is no reason to believe that macOS\n wouldn't work. And as for Windows, it's unclear which \"shell\" would be\n suitable, MSYS2 might have best chances. NDK version should play lesser\n role, the goal is to support a range of most recent versions.\n\n Configuration\n -------------\n\n Android is a cross-compiled target and you can't rely on `./Configure`\n to find out the configuration target for you.  You have to name your\n target explicitly; there are `android-arm`, `android-arm64`, `android-mips`,\n `android-mip64`, `android-x86`, `android-x86_64` and `android-riscv64`\n (`*MIPS` targets are no longer supported with NDK R20+).\n\n Do not pass --cross-compile-prefix (as you might be tempted), as it\n will be \"calculated\" automatically based on chosen platform. However,\n you still need to know the prefix to extend your PATH, in order to\n invoke `$(CROSS_COMPILE)clang` [`*gcc` on NDK 19 and lower] and company.\n (`./Configure` will fail and give you a hint if you get it wrong.)\n\n Apart from `PATH` adjustment, you need to set `ANDROID_NDK_ROOT` environment\n to point at the `NDK` directory. If you're using a side-by-side NDK the path\n will look something like `/some/where/android-sdk/ndk/<ver>`, and for a\n standalone NDK the path will be something like `/some/where/android-ndk-<ver>`.\n Both variables are significant at both configuration and compilation times.\n The NDK customarily supports multiple Android API levels, e.g. `android-14`,\n `android-21`, etc. By default, latest API level is chosen. If you need to target\n an older platform pass the argument `-D__ANDROID_API__=N` to `Configure`,\n with `N` being the numerical value of the target platform version. For example,\n to compile for Android 10 arm64 with a side-by-side NDK r20.0.5594570\n\n    export ANDROID_NDK_ROOT=/home/whoever/Android/android-sdk/ndk/20.0.5594570\n    PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$ANDROID_NDK_ROOT/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin:$PATH\n    ./Configure android-arm64 -D__ANDROID_API__=29\n    make\n\n Older versions of the NDK have GCC under their common prebuilt tools\n directory, so the bin path will be slightly different. EG: to compile\n for ICS on ARM with NDK 10d:\n\n    export ANDROID_NDK_ROOT=/some/where/android-ndk-10d\n    PATH=$ANDROID_NDK_ROOT/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64/bin:$PATH\n    ./Configure android-arm -D__ANDROID_API__=14\n    make\n\n Caveat lector! Earlier OpenSSL versions relied on additional `CROSS_SYSROOT`\n variable set to `$ANDROID_NDK_ROOT/platforms/android-<api>/arch-<arch>` to\n appoint headers-n-libraries' location. It's still recognized in order\n to facilitate migration from older projects. However, since API level\n appears in `CROSS_SYSROOT` value, passing `-D__ANDROID_API__=N` can be in\n conflict, and mixing the two is therefore not supported. Migration to\n `CROSS_SYSROOT`-less setup is recommended.\n\n One can engage clang by adjusting PATH to cover the same NDK's clang. Just\n keep in mind that if you miss it, Configure will try to use gcc...\n Also, PATH would need even further adjustment to cover unprefixed, yet\n target-specific, ar and ranlib. It's possible that you don't need to\n bother, if binutils-multiarch is installed on your Linux system.\n\n Another option is to create so called \"standalone toolchain\" tailored\n for single specific platform including Android API level, and assign its\n location to `ANDROID_NDK_ROOT`. In such case, you have to pass matching\n target name to Configure and shouldn't use `-D__ANDROID_API__=N`. `PATH`\n adjustment becomes simpler, `$ANDROID_NDK_ROOT/bin:$PATH` suffices.\n\n Running tests (on Linux)\n ------------------------\n\n This is not actually supported. Notes are meant rather as inspiration.\n\n Even though build output targets alien system, it's possible to execute\n test suite on Linux system by employing qemu-user. The trick is static\n linking. Pass -static to Configure, then edit generated Makefile and\n remove occurrences of -ldl and -pie flags. You would also need to pick\n API version that comes with usable static libraries, 42/2=21 used to\n work. Once built, you should be able to\n\n    env EXE_SHELL=qemu-<arch> make test\n\n If you need to pass additional flag to qemu, quotes are your friend, e.g.\n\n    env EXE_SHELL=\"qemu-mips64el -cpu MIPS64R6-generic\" make test\n"
        },
        {
          "name": "NOTES-ANSI.md",
          "type": "blob",
          "size": 0.8154296875,
          "content": "Notes on ANSI C\n===============\n\nWhen building for pure ANSI C (C89/C90), you must configure with at least\nthe following configuration settings:\n\n-   `no-asm`\n\n    There are cases of `asm()` calls in our C source, which isn't supported\n    in pure ANSI C.\n\n-   `no-secure-memory`\n\n    The secure memory calls aren't supported with ANSI C.\n\n-   `-D_XOPEN_SOURCE=1`\n\n    This macro enables the use of the following types, functions and global\n    variables:\n\n    -   `timezone`\n\n-   `-D_POSIX_C_SOURCE=200809L`\n\n    This macro enables the use of the following types, functions and global\n    variables:\n\n    -   `ssize_t`\n    -   `strdup()`\n\nIt's arguable that with gcc and clang, all of these issues are removed when\ndefining the macro `_DEFAULT_SOURCE`.  However, that effectively sets the C\nlanguage level to C99, which isn't ANSI C.\n"
        },
        {
          "name": "NOTES-DJGPP.md",
          "type": "blob",
          "size": 2.0625,
          "content": "Notes for the DOS platform with DJGPP\n=====================================\n\n OpenSSL has been ported to DJGPP, a Unix look-alike 32-bit run-time\n environment for 16-bit DOS, but only with long filename support.\n If you wish to compile on native DOS with 8+3 filenames, you will\n have to tweak the installation yourself, including renaming files\n with illegal or duplicate names.\n\n You should have a full DJGPP environment installed, including the\n latest versions of DJGPP, GCC, BINUTILS, BASH, etc. This package\n requires that PERL and the PERL module `Text::Template` also be\n installed (see [NOTES-PERL.md](NOTES-PERL.md)).\n\n All of these can be obtained from the usual DJGPP mirror sites or\n directly at <http://www.delorie.com/pub/djgpp>. For help on which\n files to download, see the DJGPP \"ZIP PICKER\" page at\n <http://www.delorie.com/djgpp/zip-picker.html>. You also need to have\n the WATT-32 networking package installed before you try to compile\n OpenSSL. This can be obtained from <http://www.watt-32.net/>.\n The Makefile assumes that the WATT-32 code is in the directory\n specified by the environment variable WATT_ROOT. If you have watt-32\n in directory `watt32` under your main DJGPP directory, specify\n `WATT_ROOT=\"/dev/env/DJDIR/watt32\"`.\n\n To compile OpenSSL, start your BASH shell, then configure for DJGPP by\n running `./Configure` with appropriate arguments:\n\n    ./Configure no-threads --prefix=/dev/env/DJDIR DJGPP\n\n And finally fire up `make`. You may run out of DPMI selectors when\n running in a DOS box under Windows. If so, just close the BASH\n shell, go back to Windows, and restart BASH. Then run `make` again.\n\n RUN-TIME CAVEAT LECTOR\n --------------\n\n Quoting FAQ:\n\n  \"Cryptographic software needs a source of unpredictable data to work\n   correctly.  Many open source operating systems provide a \"randomness\n   device\" (`/dev/urandom` or `/dev/random`) that serves this purpose.\"\n\n As of version 0.9.7f DJGPP port checks upon `/dev/urandom$` for a 3rd\n party \"randomness\" DOS driver. One such driver, `NOISE.SYS`, can be\n obtained from <http://www.rahul.net/dkaufman/index.html>.\n"
        },
        {
          "name": "NOTES-NONSTOP.md",
          "type": "blob",
          "size": 10.19140625,
          "content": "NOTES FOR THE HPE NONSTOP PLATFORM\n==============================\n\nRequirement details\n-------------------\n\nIn addition to the requirements and instructions listed\nin [INSTALL.md](INSTALL.md), the following are required as well:\n\n * The TNS/X platform supports hardware randomization.\n   Specify the `--with-rand-seed=rdcpu` option to the `./Configure` script.\n   This is recommended but not required. `egd` is supported at 3.0 but cannot\n   be used if FIPS is selected.\n * The TNS/E platform does not support hardware randomization, so\n   specify the `--with-rand-seed=egd` option to the `./Configure` script.\n\nAbout c99 compiler\n------------------\n\nThe c99 compiler is required for building OpenSSL from source. While c11\nmay work, it has not been broadly tested. c99 is the only compiler\nprerequisite needed to build OpenSSL 3.0 on this platform.\n\nThreading Models\n----------------\n\nOpenSSL can be built either using the POSIX User Threads (PUT) threading model,\nor with threading support disabled. Select the following build configuration\nfor each on the TNS/X (L-Series) platform:\n\n * `nonstop-nsx` or default will select an unthreaded 32-bit build.\n * `nonstop-nsx_64` selects an unthreaded 64-bit memory and file length build.\n * `nonstop-nsx_64_klt` selects the 64-bit memory and file length KLT build.\n * `nonstop-nsx_put` selects the PUT build.\n * `nonstop-nsx_64_put` selects the 64-bit memory and file length PUT build.\n\nThe KLT threading model is a newly released model on NonStop. It implements\nkernel-level threading. KLT provides much closer threading to what OpenSSL\nuses for Linux-like threading models. KLT continues to use the pthread library\nAPI. There is no supported 32-bit or Guardian builds for KLT. Note: KLT is\nnot currently available but is planned for post-2024.\n\nThe SPT threading model is no longer supported as of OpenSSL 3.2.\n\nThe PUT model is incompatible with the QUIC capability. This capability should\nbe disabled when building with PUT.\n\n### TNS/E Considerations\n\nThe TNS/E platform is build using the same set of builds specifying `nse`\ninstead of `nsx` in the set above.\n\nYou cannot build for TNS/E for FIPS, so you must specify the `no-fips`\noption to `./Configure`.\n\nLinking and Loading Considerations\n----------------------------------\n\nBecause of how the NonStop Common Runtime Environment (CRE) works, there are\nrestrictions on how programs can link and load with OpenSSL libraries.\nOn current NonStop platforms, programs cannot both statically link OpenSSL\nlibraries and dynamically load OpenSSL shared libraries concurrently. If this\nis done, there is a high probability of encountering a SIGSEGV condition\nrelating to `atexit()` processing when a shared library is unloaded and when\nthe program terminates. This limitation applies to all OpenSSL shared library\ncomponents.\n\nA control has been added as of 3.3.x to disable calls to `atexit()` within the\n`libcrypto` builds (specifically in `crypto/init.c`). This switch can be\ncontrolled using `disable-atexit` or `enable-atexit`, and is disabled by default\nfor NonStop builds. If you need to have `atexit()` functionality, set\n`enabled-atexit` when configuring OpenSSL to enable the `atexit()` call to\nregister `OPENSSL_cleanup()` automatically. Preferably, you can explicitly call\n`OPENSSL_cleanup()` from your application.\n\nAbout Prefix and OpenSSLDir\n---------------------------\n\nBecause there are many potential builds that must co-exist on any given\nNonStop node, managing the location of your build distribution is crucial.\nKeep each destination separate and distinct. Mixing any mode described in\nthis document can cause application instability. The recommended approach\nis to specify the OpenSSL version and threading model in your configuration\noptions, and keeping your memory and float options consistent, for example:\n\n * For 1.1 `--prefix=/usr/local-ssl1.1 --openssldir=/usr/local-ssl1.1/ssl`\n * For 1.1 PUT `--prefix=/usr/local-ssl1.1_put --openssldir=/usr/local-ssl1.1_put/ssl`\n\nAs of 3.0, the NonStop configurations use the multilib attribute to distinguish\nbetween different models:\n\n * For 3.0 `--prefix=/usr/local-ssl3.0 --openssldir=/usr/local-ssl3.0/ssl`\n\nThe PUT model is placed in `${prefix}/lib-put` for 32-bit models and\n`${prefix}/lib64-put` for 64-bit models.\n\nUse the `_RLD_LIB_PATH` environment variable in OSS to select the appropriate\ndirectory containing `libcrypto.so` and `libssl.so`. In GUARDIAN, use the\n`=_RLD_LIB_PATH` search define to locate the GUARDIAN subvolume where OpenSSL\nis installed.\n\nFloat Considerations\n--------------------\n\nOpenSSL is built using IEEE Float mode by default. If you need a different\nIEEE mode, create a new configuration specifying `tfloat-x86-64` (for Tandem\nFloat) or `nfloat-x86-64` (for Neutral Float).\n\nMemory Models\n-------------\n\nThe current OpenSSL default memory model uses the default platform address\nmodel. If you need a different address model, you must specify the appropriate\nc99 options for compile (`CFLAGS`) and linkers (`LDFLAGS`).\n\nCross Compiling on Windows\n--------------------------\n\nTo configure and compile OpenSSL, you will need to set up a Cygwin environment.\nThe Cygwin tools should include bash, make, and any other normal tools required\nfor building programs.\n\nYour `PATH` must include the bin directory for the c99 cross-compiler, as in:\n\n    export PATH=/cygdrive/c/Program\\ Files\\ \\(x86\\)/HPE\\ NonStop/L16.05/usr/bin:$PATH\n\nThis should be set before Configure is run. For the c99 cross-compiler to work\ncorrectly, you also need the `COMP_ROOT` set, as in:\n\n    export COMP_ROOT=\"C:\\Program Files (x86)\\HPE NonStop\\L16.05\"\n\n`COMP_ROOT` needs to be in Windows form.\n\nAn example of a `Configure` command to be run from the OpenSSL directory is:\n\n    ./Configure nonstop-nsx_64 --with-rand-seed=rdcpu\n\nDo not forget to include any OpenSSL cross-compiling prefix and certificate\noptions when creating your libraries.\n\nThe OpenSSL test suite will not run on your workstation. In order to verify the\nbuild, you will need to perform the build and test steps in OSS in your NonStop\nserver. You can also build under gcc and run the test suite for Windows but that\nis not equivalent.\n\n**Note:** In the event that you are attempting a FIPS-compliant cross-compile,\nbe aware that signatures may not match between builds done under OSS and under\ncross-compiles as the compilers do not necessarily generate identical objects.\nAnything and everything to do with FIPS is outside the scope of this document.\nRefer to the FIPS security policy for more information.\n\nThe following build configurations have been successfully attempted at one\npoint or another. If you are successful in your cross-compile efforts, please\nupdate this list:\n\n- nonstop-nsx_64\n- nonstop-nsx_64_put\n\n**Note:** Cross-compile builds for TNS/E have not been attempted, but should\nfollow the same considerations as for TNS/X above.\n\nAlso see the NSDEE discussion below for more historical information.\n\nCross Compiling with NSDEE\n--------------------------\n\n**Note:** None of these builds have been tested by the platform maintainer and\nare supplied for historical value. Please submit a Pull Request to OpenSSL\nshould these need to be adjusted.\n\nIf you are attempting to build OpenSSL with NSDEE, you will need to specify\nthe following variables. The following set of compiler defines are required:\n\n    # COMP_ROOT must be a full path for the build system (e.g. windows)\n    COMP_ROOT=$(cygpath -w /path/to/comp_root)\n    # CC must be executable by your shell\n    CC=/path/to/c99\n\n### Optional Build Variables\n\n    DBGFLAG=\"--debug\"\n    CIPHENABLES=\"enable-ssl3 enable-ssl3-method enable-weak-ssl-ciphers enable-rc4\"\n\n### Internal Known TNS/X to TNS/E Cross Compile Variables\n\nThe following definition is required if you are building on TNS/X for TNS/E\nand have access to a TNS/E machine on your EXPAND network - with an example\nnode named `\\CS3`:\n\n    SYSTEMLIBS=\"-L/E/cs3/usr/local/lib\"\n\nVersion Procedure (VPROC) Considerations\n----------------------------------------\n\nIf you require a VPROC entry for platform version identification, use the\nfollowing variables:\n\n### For Itanium\n\n    OPENSSL_VPROC_PREFIX=T0085H06\n\n### For x86\n\n    OPENSSL_VPROC_PREFIX=T0085L01\n\n### Common Definition\n\n    export OPENSSL_VPROC=${OPENSSL_VPROC_PREFIX}_$(\n        . VERSION.dat\n        if [ -n \"$PRE_RELEASE_TAG\" ]; then\n            PRE_RELEASE_TAG=\"-$PRE_RELEASE_TAG\"\n        fi\n        if [ -n \"$BUILD_METADATA\" ]; then\n            BUILD_METADATA=\"+$BUILD_METADATA\"\n        fi\n        echo \"$MAJOR.$MINOR.$PATCH$PRE_RELEASE_TAG$BUILD_METADATA\" |\\\n            sed -e 's/[-.+]/_/g'\n        )\n\nExample Configure Targets\n-------------------------\n\nFor OSS targets, the main DLL names will be `libssl.so` and `libcrypto.so`.\nThe following assumes that your PWD is set according to your installation\nstandards.\n\n    ./Configure nonstop-nsx           --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl no-threads \\\n        --with-rand-seed=rdcpu ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nsx_put       --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl threads \"-D_REENTRANT\" \\\n        --with-rand-seed=rdcpu ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nsx_64        --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl no-threads \\\n        --with-rand-seed=rdcpu ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nsx_64_put    --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl threads \"-D_REENTRANT\" \\\n        --with-rand-seed=rdcpu ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n\n    ./Configure nonstop-nse           --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl no-threads \\\n        --with-rand-seed=egd ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nse_g         --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl no-threads \\\n        --with-rand-seed=egd ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nse_put       --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl threads \"-D_REENTRANT\" \\\n        --with-rand-seed=egd ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nse_64        --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl no-threads \\\n        --with-rand-seed=egd ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n    ./Configure nonstop-nse_64_put    --prefix=${PWD} \\\n        --openssldir=${PWD}/ssl threads \"-D_REENTRANT\"\n        --with-rand-seed=egd ${CIPHENABLES} ${DBGFLAG} ${SYSTEMLIBS}\n"
        },
        {
          "name": "NOTES-PERL.md",
          "type": "blob",
          "size": 4.8779296875,
          "content": "Notes on Perl\n=============\n\n - [General Notes](#general-notes)\n - [Perl on Windows](#perl-on-windows)\n - [Perl on VMS](#perl-on-vms)\n - [Perl on NonStop](#perl-on-nonstop)\n - [Required Perl modules](#required-perl-modules)\n - [Notes on installing a Perl module](#notes-on-installing-a-perl-module])\n\nGeneral Notes\n-------------\n\nFor our scripts, we rely quite a bit on Perl, and increasingly on\nsome core Perl modules.  These Perl modules are part of the Perl\nsource, so if you build Perl on your own, you should be set.\n\nHowever, if you install Perl as binary packages, the outcome might\ndiffer, and you may have to check that you do get the core modules\ninstalled properly.  We do not claim to know them all, but experience\nhas told us the following:\n\n - on Linux distributions based on Debian, the package `perl` will\n   install the core Perl modules as well, so you will be fine.\n - on Linux distributions based on RPMs, you will need to install\n   `perl-core` rather than just `perl`.\n\nYou MUST have at least Perl version 5.10.0 installed.  This minimum\nrequirement is due to our use of regexp backslash sequence \\R among\nother features that didn't exist in core Perl before that version.\n\nPerl on Windows\n---------------\n\nThere are a number of build targets that can be viewed as \"Windows\".\nIndeed, there are `VC-*` configs targeting Visual Studio C, as well as\nMinGW and Cygwin. The key recommendation is to use a Perl installation\nthat matches the build environment. For example, if you will build\non Cygwin be sure to use the Cygwin package manager to install Perl.\nFor MSYS builds use the MSYS provided Perl.\nFor VC-* builds, we recommend Strawberry Perl, from <http://strawberryperl.com>.\nAn alternative is ActiveState Perl, from <http://www.activestate.com/ActivePerl>\nfor which you may need to explicitly select the Perl module Win32/Console.pm\navailable via <https://platform.activestate.com/ActiveState>.\n\nPerl on VMS\n-----------\n\nYou will need to install Perl separately.  One way to do so is to\ndownload the source from <http://perl.org/>, unpacking it, reading\n`README-VMS.md` and follow the instructions.  Another way is to download a\n`.PCSI` file from <http://www.vmsperl.com/> and install it using the\nPOLYCENTER install tool.\n\nPerl on NonStop\n---------------\n\nPerl is installed on HPE NonStop platforms as part of the Scripting Languages\npackage T1203PAX file. The package is shipped as part of a NonStop RVU\n(Release Version Updates) package. Individual SPRs (Software Product Release)\nrepresenting fixes can be obtained from the Scout website at\n<https://h22204.www2.hpe.com/NEP>. Follow the appropriate set of installation\ninstructions for your operating system release as described in the\nScript Language User Guide available from the NonStop Technical Library.\n\nRequired Perl modules\n---------------------\n\nWe do our best to limit ourselves to core Perl modules to keep the\nrequirements down. There are just a few exceptions.\n\n * Text::Template this is required *for building*\n\n   To avoid unnecessary initial hurdles, we include a copy of this module\n   in the source. It will work as a fallback if the module isn't already\n   installed.\n\n * `Test::More` this is required *for testing*\n\n   We require the minimum version to be 0.96, which appeared in Perl 5.13.4,\n   because that version was the first to have all the features we're using.\n   This module is required for testing only!  If you don't plan on running\n   the tests, you don't need to bother with this one.\n\nNotes on installing a Perl module\n---------------------------------\n\nThere are a number of ways to install a perl module.  In all\ndescriptions below, `Text::Template` will serve as an example.\n\n1. for Linux users, the easiest is to install with the use of your\n   favorite package manager.  Usually, all you need to do is search\n   for the module name and to install the package that comes up.\n\n   On Debian based Linux distributions, it would go like this:\n\n       $ apt-cache search Text::Template\n       ...\n       libtext-template-perl - perl module to process text templates\n       $ sudo apt-get install libtext-template-perl\n\n   Perl modules in Debian based distributions use package names like\n   the name of the module in question, with \"lib\" prepended and\n   \"-perl\" appended.\n\n2. Install using CPAN.  This is very easy, but usually requires root\n   access:\n\n       $ cpan -i Text::Template\n\n   Note that this runs all the tests that the module to be installed\n   comes with.  This is usually a smooth operation, but there are\n   platforms where a failure is indicated even though the actual tests\n   were successful.  Should that happen, you can force an\n   installation regardless (that should be safe since you've already\n   seen the tests succeed!):\n\n       $ cpan -f -i Text::Template\n\n   Note: on VMS, you must quote any argument that contains uppercase\n   characters, so the lines above would be:\n\n       $ cpan -i \"Text::Template\"\n\n   and:\n\n       $ cpan -f -i \"Text::Template\"\n"
        },
        {
          "name": "NOTES-POSIX.md",
          "type": "blob",
          "size": 0.73046875,
          "content": "Notes on POSIX\n==============\n\nThere are few instances where OpenSSL requires a POSIX C library, at least\nversion 1-2008, or compatible enough functionality.\n\nThere are exceptions, though, for platforms that do not have a POSIX\nlibrary, or where there are quirks that need working around.  A notable\nplatform is Windows, where POSIX functionality may be available, but where\nthe function names are prefixed with an underscore, and where some POSIX\ntypes are not present (such as `ssize_t`).\n\nPlatforms that do have a POSIX library may still not have them accessible\nunless the following macros are defined:\n\n    _POSIX_C_SOURCE=200809L\n    _XOPEN_SOURCE=1\n\nThis is, for example, the case when building with gcc or clang and using the\nflag `-ansi`.\n"
        },
        {
          "name": "NOTES-UNIX.md",
          "type": "blob",
          "size": 5.5517578125,
          "content": "Notes for UNIX-like platforms\n=============================\n\n For Unix/POSIX runtime systems on Windows,\n please see the [Notes for Windows platforms](NOTES-WINDOWS.md).\n\n OpenSSL uses the compiler to link programs and shared libraries\n ---------------------------------------------------------------\n\n OpenSSL's generated Makefile uses the C compiler command line to\n link programs, shared libraries and dynamically loadable shared\n objects.  Because of this, any linking option that's given to the\n configuration scripts MUST be in a form that the compiler can accept.\n This varies between systems, where some have compilers that accept\n linker flags directly, while others take them in `-Wl,` form.  You need\n to read your compiler documentation to figure out what is acceptable,\n and `ld(1)` to figure out what linker options are available.\n\n Shared libraries and installation in non-default locations\n ----------------------------------------------------------\n\n Every Unix system has its own set of default locations for shared\n libraries, such as `/lib`, `/usr/lib` or possibly `/usr/local/lib`.  If\n libraries are installed in non-default locations, dynamically linked\n binaries will not find them and therefore fail to run, unless they get\n a bit of help from a defined runtime shared library search path.\n\n For OpenSSL's application (the `openssl` command), our configuration\n scripts do NOT generally set the runtime shared library search path for\n you.  It's therefore advisable to set it explicitly when configuring,\n unless the libraries are to be installed in directories that you know\n to be in the default list.\n\n Runtime shared library search paths are specified with different\n linking options depending on operating system and versions thereof, and\n are talked about differently in their respective documentation;\n variations of RPATH are the most usual (note: ELF systems have two such\n tags, more on that below).\n\n Possible options to set the runtime shared library search path include\n the following:\n\n    -Wl,-rpath,/whatever/path   # Linux, *BSD, etc.\n    -R /whatever/path           # Solaris\n    -Wl,-R,/whatever/path       # AIX (-bsvr4 is passed internally)\n    -Wl,+b,/whatever/path       # HP-UX\n    -rpath /whatever/path       # Tru64, IRIX\n\n OpenSSL's configuration scripts recognise all these options and pass\n them to the Makefile that they build. (In fact, all arguments starting\n with `-Wl,` are recognised as linker options.)\n Please note that 'l' in '-Wl' is lowercase L and not 1.\n\n Please do not use verbatim directories in your runtime shared library\n search path!  Some OpenSSL config targets add an extra directory level\n for multilib installations.  To help with that, the produced Makefile\n includes the variable LIBRPATH, which is a convenience variable to be\n used with the runtime shared library search path options, as shown in\n this example:\n\n    $ ./Configure --prefix=/usr/local/ssl --openssldir=/usr/local/ssl \\\n        '-Wl,-rpath,$(LIBRPATH)'\n\n On modern ELF based systems, there are two runtime search paths tags to\n consider, `DT_RPATH` and `DT_RUNPATH`.  Shared objects are searched for in\n this order:\n\n  1. Using directories specified in DT_RPATH, unless DT_RUNPATH is also set.\n  2. Using the environment variable LD_LIBRARY_PATH\n  3. Using directories specified in DT_RUNPATH.\n  4. Using system shared object caches and default directories.\n\n This means that the values in the environment variable `LD_LIBRARY_PATH`\n won't matter if the library is found in the paths given by `DT_RPATH`\n (and `DT_RUNPATH` isn't set).\n\n Exactly which of `DT_RPATH` or `DT_RUNPATH` is set by default appears to\n depend on the system.  For example, according to documentation,\n `DT_RPATH` appears to be deprecated on Solaris in favor of `DT_RUNPATH`,\n while on Debian GNU/Linux, either can be set, and `DT_RPATH` is the\n default at the time of writing.\n\n How to choose which runtime search path tag is to be set depends on\n your system, please refer to ld(1) for the exact information on your\n system.  As an example, the way to ensure the `DT_RUNPATH` is set on\n Debian GNU/Linux systems rather than DT_RPATH is to tell the linker to\n set new dtags, like this:\n\n    $ ./Configure --prefix=/usr/local/ssl --openssldir=/usr/local/ssl \\\n        '-Wl,--enable-new-dtags,-rpath,$(LIBRPATH)'\n\n It might be worth noting that some/most ELF systems implement support\n for runtime search path relative to the directory containing current\n executable, by interpreting `$ORIGIN` along with some other internal\n variables. Consult your system documentation.\n\n Linking your application\n ------------------------\n\n Third-party applications dynamically linked with OpenSSL (or any other)\n shared library face exactly the same problem with non-default locations.\n The OpenSSL config options mentioned above might or might not have bearing\n on linking of the target application. \"Might\" means that under some\n circumstances, it would be sufficient to link with OpenSSL shared library\n \"naturally\", i.e. with `-L/whatever/path -lssl -lcrypto`. But there are\n also cases when you'd have to explicitly specify runtime search path\n when linking your application. Consult your system documentation and use\n above section as inspiration...\n\n Shared OpenSSL builds also install static libraries. Linking with the\n latter is likely to require special care because linkers usually look\n for shared libraries first and tend to remain \"blind\" to static OpenSSL\n libraries. Referring to system documentation would suffice, if not for\n a corner case. On AIX static libraries (in shared build) are named\n differently, add `_a` suffix to link with them, e.g. `-lcrypto_a`.\n"
        },
        {
          "name": "NOTES-VALGRIND.md",
          "type": "blob",
          "size": 2.8037109375,
          "content": "Notes on Valgrind\n=================\n\n[Valgrind](https://valgrind.org/) is a test harness that includes many tools such as memcheck,\nwhich is commonly used to check for memory leaks, etc. The default tool\nrun by Valgrind is memcheck. There are [other tools available](https://valgrind.org/info/tools.html), but this\nwill focus on memcheck.\n\nValgrind runs programs in a virtual machine, this means OpenSSL unit\ntests run under Valgrind will take longer than normal.\n\nRequirements\n------------\n\n1. Platform supported by Valgrind\n   - See [Valgrind Supported Platforms](http://valgrind.org/info/platforms.html)\n2. Valgrind installed on the platform\n   - See [Valgrind Current Releases](http://valgrind.org/downloads/current.html)\n3. OpenSSL compiled\n   - See [INSTALL.md](INSTALL.md)\n\nRunning Tests\n-------------\n\nTest behavior can be modified by adjusting environment variables.\n\n`EXE_SHELL`\n\nThis variable is used to specify the shell used to execute OpenSSL test\nprograms. The default wrapper (`util/wrap.pl`) initializes the environment\nto allow programs to find shared libraries. The variable can be modified\nto specify a different executable environment.\n\n    EXE_SHELL=\\\n    \"$(/bin/pwd)/util/wrap.pl valgrind --error-exitcode=1 --leak-check=full -q\"\n\nThis will start up Valgrind with the default checker (`memcheck`).\nThe `--error-exitcode=1` option specifies that Valgrind should exit with an\nerror code of 1 when memory leaks occur.\nThe `--leak-check=full` option specifies extensive memory checking.\nThe `-q` option prints only error messages.\nAdditional Valgrind options may be added to the `EXE_SHELL` variable.\n\n`OPENSSL_ia32cap`\n\nThis variable controls the processor-specific code on Intel processors.\nBy default, OpenSSL will attempt to figure out the capabilities of a\nprocessor, and use it to its fullest capability. This variable can be\nused to control what capabilities OpenSSL uses.\n\nAs of valgrind-3.15.0 on Linux/x86_64, instructions up to AVX2 are\nsupported. Setting the following disables instructions beyond AVX2:\n\n`OPENSSL_ia32cap=\":0\"`\n\nThis variable may need to be set to something different based on the\nprocessor and Valgrind version you are running tests on. More information\nmay be found in [doc/man3/OPENSSL_ia32cap.pod](doc/man3/OPENSSL_ia32cap.pod).\n\nAdditional variables (such as `VERBOSE` and `TESTS`) are described in the\nfile [test/README.md](test/README.md).\n\nExample command line:\n\n    $ make test EXE_SHELL=\"$(/bin/pwd)/util/wrap.pl valgrind --error-exitcode=1 \\\n        --leak-check=full -q\" OPENSSL_ia32cap=\":0\"\n\nIf an error occurs, you can then run the specific test via the `TESTS` variable\nwith the `VERBOSE` or `VF` or `VFP` options to gather additional information.\n\n    $ make test VERBOSE=1 TESTS=test_test EXE_SHELL=\"$(/bin/pwd)/util/wrap.pl \\\n       valgrind --error-exitcode=1 --leak-check=full -q\" OPENSSL_ia32cap=\":0\"\n"
        },
        {
          "name": "NOTES-VMS.md",
          "type": "blob",
          "size": 4.71875,
          "content": "Notes for the OpenVMS platform\n==============================\n\n - [Requirement details](#requirement-details)\n - [About ANSI C compiler](#about-ansi-c-compiler)\n - [About ODS-5 directory names and Perl](#about-ods-5-directory-names-and-perl)\n - [About MMS and DCL](#about-mms-and-dcl)\n - [About debugging](#about-debugging)\n - [Checking the distribution](#checking-the-distribution)\n\nRequirement details\n-------------------\n\nIn addition to the requirements and instructions listed\nin [INSTALL.md](INSTALL.md), this are required as well:\n\n  * At least ODS-5 disk organization for source and build.\n    Installation can be done on any existing disk organization.\n\nAbout ANSI C compiler\n---------------------\n\nAn ANSI C compiled is needed among other things.  This means that\nVAX C is not and will not be supported.\n\nWe have only tested with DEC C (aka HP VMS C / VSI C) and require\nversion 7.1 or later.  Compiling with a different ANSI C compiler may\nrequire some work.\n\nPlease avoid using C RTL feature logical names `DECC$*` when building\nand testing OpenSSL.  Most of all, they can be disruptive when\nrunning the tests, as they affect the Perl interpreter.\n\nAbout ODS-5 directory names and Perl\n------------------------------------\n\nIt seems that the perl function canonpath() in the `File::Spec` module\ndoesn't treat file specifications where the last directory name\ncontains periods very well.  Unfortunately, some versions of VMS tar\nwill keep the periods in the OpenSSL source directory instead of\nconverting them to underscore, thereby leaving your source in\nsomething like `[.openssl-1^.1^.0]`.  This will lead to issues when\nconfiguring and building OpenSSL.\n\nWe have no replacement for Perl's canonpath(), so the best workaround\nfor now is to rename the OpenSSL source directory, as follows (please\nadjust for the actual source directory name you have):\n\n    $ rename openssl-1^.1^.0.DIR openssl-1_1_0.DIR\n\nAbout MMS and DCL\n-----------------\n\nMMS has certain limitations when it comes to line length, and DCL has\ncertain limitations when it comes to total command length.  We do\nwhat we can to mitigate, but there is the possibility that it's not\nenough.  Should you run into issues, a very simple solution is to set\nyourself up a few logical names for the directory trees you're going\nto use.\n\nAbout debugging\n---------------\n\nIf you build for debugging, the default on VMS is that image\nactivation starts the debugger automatically, giving you a debug\nprompt.  Unfortunately, this disrupts all other uses, such as running\ntest programs in the test framework.\n\nGenerally speaking, if you build for debugging, only use the programs\ndirectly for debugging.  Do not try to use them from a script, such\nas running the test suite.\n\n### The following is not available on Alpha\n\nAs a compromise, we're turning off the flag that makes the debugger\nstart automatically.  If there is a program that you need to debug,\nyou need to turn that flag back on first, for example:\n\n    $ set image /flag=call_debug [.test]evp_test.exe\n\nThen just run it and you will find yourself in a debugging session.\nWhen done, we recommend that you turn that flag back off:\n\n    $ set image /flag=nocall_debug [.test]evp_test.exe\n\nAbout assembler acceleration\n----------------------------\n\nOpenSSL has assembler acceleration for a number of BIGNUM and crypto\nroutines.  The VMS config targets tries to look for a selection of\nassemblers and will use what they find.  If none of the assemblers are\nfound, OpenSSL will be built as if `no-asm` was configured.\n\n### For Itanium / IA64 / I64\n\n-   There is only one assembler, a port of Intel's `ias`, found in the\n    HP Open Source Tools CD, available through [DECUSlib](http://www.decuslib.com).\n    It's assumed to be set up as per the instructions, where `disk` and\n    `dir` are expected to be adapted to local conditions:\n\n        $ ias :== $disk:[dir]iasi64.exe\n\nChecking the distribution\n-------------------------\n\nThere have been reports of places where the distribution didn't quite\nget through, for example if you've copied the tree from a NFS-mounted\nUnix mount point.\n\nThe easiest way to check if everything got through as it should is to\ncheck that this file exists:\n\n    [.include.openssl]configuration^.h.in\n\nThe best way to get a correct distribution is to download the gzipped\ntar file from ftp://ftp.openssl.org/source/, use `GZIP -d` to uncompress\nit and `VMSTAR` to unpack the resulting tar file.\n\nGzip and VMSTAR are available here:\n\n   <http://antinode.info/dec/index.html#Software>\n\nShould you need it, you can find UnZip for VMS here:\n\n   <http://www.info-zip.org/UnZip.html>\n\n How the value of 'arch' is determined\n -------------------------------------\n\n 'arch' is mentioned in INSTALL.  It's value is determined like this:\n\n    arch = f$edit( f$getsyi( \"arch_name\"), \"upcase\")\n"
        },
        {
          "name": "NOTES-WINDOWS.md",
          "type": "blob",
          "size": 10.447265625,
          "content": "Notes for Windows platforms\n===========================\n\n - [Native builds using Visual C++](#native-builds-using-visual-c)\n - [Native builds using Embarcadero C++Builder](\n   #native-builds-using-embarcadero-cbuilder)\n - [Native builds using MinGW](#native-builds-using-mingw)\n - [Linking native applications](#linking-native-applications)\n - [Hosted builds using Cygwin](#hosted-builds-using-cygwin)\n\nThere are various options to build and run OpenSSL on the Windows platforms.\n\n\"Native\" OpenSSL uses the Windows APIs directly at run time.\nTo build a native OpenSSL you can either use:\n\n    Microsoft Visual C++ (MSVC) C compiler on the command line\nor\n    Embarcadero C++Builder\nor\n    MinGW cross compiler\n    run on the GNU-like development environment MSYS2\n    or run on Linux or Cygwin\n\n\"Hosted\" OpenSSL relies on an external POSIX compatibility layer\nfor building (using GNU/Unix shell, compiler, and tools) and at run time.\nFor this option, you can use Cygwin.\n\nNative builds using Visual C++\n==============================\n\nThe native builds using Visual C++ have a `VC-*` prefix.\n\nRequirement details\n-------------------\n\nIn addition to the requirements and instructions listed in `INSTALL.md`,\nthese are required as well:\n\n### Perl\n\nWe recommend Strawberry Perl, available from <http://strawberryperl.com/>\nPlease read NOTES.PERL for more information, including the use of CPAN.\nAn alternative is ActiveState Perl, <https://www.activestate.com/ActivePerl>\nfor which you may need to explicitly build the Perl module Win32/Console.pm\nvia <https://platform.activestate.com/ActiveState> and then download it.\n\n### Microsoft Visual C compiler.\n\nSince these are proprietary and ever-changing we cannot test them all.\nOlder versions may not work. Use a recent version wherever possible.\n\n### Netwide Assembler (NASM)\n\nNASM is the only supported assembler. It is available from <https://www.nasm.us>.\n\nQuick start\n-----------\n\n 1. Install Perl\n\n 2. Install NASM\n\n 3. Make sure both Perl and NASM are on your %PATH%\n\n 4. Use Visual Studio Developer Command Prompt with administrative privileges,\n    choosing one of its variants depending on the intended architecture.\n    Or run `cmd` and execute `vcvarsall.bat` with one of the options `x86`,\n    `x86_amd64`, `x86_arm`, `x86_arm64`, `amd64`, `amd64_x86`, `amd64_arm`,\n    or `amd64_arm64`.\n    This sets up the environment variables needed for `nmake.exe`, `cl.exe`,\n    etc.\n    See also\n    <https://docs.microsoft.com/cpp/build/building-on-the-command-line>\n\n 5. From the root of the OpenSSL source directory enter\n    - `perl Configure VC-WIN32`     if you want 32-bit OpenSSL or\n    - `perl Configure VC-WIN64A`    if you want 64-bit OpenSSL or\n    - `perl Configure VC-WIN64-ARM` if you want Windows on Arm (win-arm64)\n       OpenSSL or\n    - `perl Configure VC-WIN64-CLANGASM-ARM` if you want Windows on Arm (win-arm64)\n       OpenSSL with assembly support using clang-cl as assembler or\n    - `perl Configure VC-CLANG-WIN64-CLANGASM-ARM` if you want Windows on Arm (win-arm64)\n       OpenSSL using clang-cl as both compiler and assembler or\n    - `perl Configure VC-WIN32-HYBRIDCRT` if you want 32-bit OpenSSL dependent\n       on the Universal CRT or\n    - `perl Configure VC-WIN64A-HYBRIDCRT` if you want 64-bit OpenSSL dependent\n       on the Universal CRT or\n    - `perl Configure`              to let Configure figure out the platform\n\n 6. `nmake`\n\n 7. `nmake test`\n\n 8. `nmake install`\n\nFor the full installation instructions, or if anything goes wrong at any stage,\ncheck the INSTALL.md file.\n\nInstallation directories\n------------------------\n\nOn most Unix platforms installation directories are determined at build time via\nconstant defines.  On Windows platforms however, installation directories are\ndetermined via registry keys, as it is common practice to build OpenSSL and\ninstall it to a variety of locations.\n\nThe following keys:\n\n    `\\\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\OpenSSL-<version>-<ctx>\\OPENSSLDIR`\n    `\\\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\OpenSSL-<version>-<ctx>\\ENGINESDIR`\n    `\\\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\OpenSSL-<version>-<ctx>\\MODULESDIR`\n\nCan be administratively set, and openssl will take the paths found there as the\nvalues for OPENSSLDIR, ENGINESDIR and MODULESDIR respectively.\n\nTo enable the reading of registry keys from windows builds, add\n`-DOPENSSL_WINCTX=<string>`to the Configure command line.  This define is used\nat build-time to construct library build specific registry key paths of the\nformat:\n`\\\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432node\\OpenSSL-<version>-<ctx>`\n\nWhere `<version>` is the major.minor version of the library being\nbuilt, and `<ctx>` is the value specified by `-DOPENSSL_WINCTX`.  This allows\nfor multiple openssl builds to be created and installed on a single system, in\nwhich each library can use its own set of registry keys.\n\nNote the installer available at <https://github.com/openssl/installer> will set\nthese keys when the installer is run.\n\nA summary table of behavior on Windows platforms\n\n|`OSSL_WINCTX`|Registry key|OpenSSL Behavior                          |\n|-------------|------------|------------------------------------------|\n|Defined      | Defined    |OpenSSL Reads Paths from Registry         |\n|Defined      | Undefined  |OpenSSL returns errors on module/conf load|\n|Undefined    | N/A        |OpenSSL uses build time defaults          |\n\nSpecial notes for Universal Windows Platform builds, aka `VC-*-UWP`\n-------------------------------------------------------------------\n\n - UWP targets only support building the static and dynamic libraries.\n\n - You should define the platform type to `uwp` and the target arch via\n   `vcvarsall.bat` before you compile. For example, if you want to build\n   `arm64` builds, you should run `vcvarsall.bat x86_arm64 uwp`.\n\nNative builds using Embarcadero C++Builder\n=========================================\n\nThis toolchain (a descendant of Turbo/Borland C++) is an alternative to MSVC.\nOpenSSL currently includes experimental 32-bit and 64-bit configurations targeting the\nClang-based compiler (`bcc32c.exe` and `bcc64.exe`) in v10.3.3 Community Edition.\n<https://www.embarcadero.com/products/cbuilder/starter>\n\n 1. Install Perl.\n\n 2. Open the RAD Studio Command Prompt.\n\n 3. Go to the root of the OpenSSL source directory and run:\n    `perl Configure BC-32 --prefix=%CD%`\n    for Win64 builds use:\n    `perl Configure BC-64 --prefix=%CD%`\n\n 4. `make -N`\n\n 5. `make -N test`\n\n 6. Build your program against this OpenSSL:\n    * Set your include search path to the \"include\" subdirectory of OpenSSL.\n    * Set your library search path to the OpenSSL source directory.\n\nNote that this is very experimental. Support for 64-bit and other Configure\noptions is still pending.\n\nNative builds using MinGW\n=========================\n\nMinGW offers an alternative way to build native OpenSSL, by cross compilation.\n\n * Usually the build is done on Windows in a GNU-like environment called MSYS2.\n\n   MSYS2 provides GNU tools, a Unix-like command prompt,\n   and a UNIX compatibility layer for applications.\n   However, in this context it is only used for building OpenSSL.\n   The resulting OpenSSL does not rely on MSYS2 to run and is fully native.\n\n   Requirement details\n\n   - MSYS2 shell, from <https://www.msys2.org/>\n\n   - Perl, at least version 5.10.0, which usually comes pre-installed with MSYS2\n\n   - make, installed using `pacman -S make` into the MSYS2 environment\n\n   - MinGW[64] compiler: `mingw-w64-i686-gcc` and/or `mingw-w64-x86_64-gcc`.\n     These compilers must be on your MSYS2 $PATH.\n     A common error is to not have these on your $PATH.\n     The MSYS2 version of gcc will not work correctly here.\n\n   In the MSYS2 shell do the configuration depending on the target architecture:\n\n       ./Configure mingw ...\n\n   or\n\n       ./Configure mingw64 ...\n\n   or\n\n       ./Configure ...\n\n   for the default architecture.\n\n   Apart from that, follow the Unix / Linux instructions in `INSTALL.md`.\n\n * It is also possible to build mingw[64] on Linux or Cygwin.\n\n   In this case configure with the corresponding `--cross-compile-prefix=`\n   option. For example\n\n       ./Configure mingw --cross-compile-prefix=i686-w64-mingw32- ...\n\n   or\n\n       ./Configure mingw64 --cross-compile-prefix=x86_64-w64-mingw32- ...\n\n   This requires that you've installed the necessary add-on packages for\n   mingw[64] cross compilation.\n\nLinking native applications\n===========================\n\nThis section applies to all native builds.\n\nIf you link with static OpenSSL libraries, then you're expected to\nadditionally link your application with `WS2_32.LIB`, `GDI32.LIB`,\n`ADVAPI32.LIB`, `CRYPT32.LIB` and `USER32.LIB`. Those developing\nnon-interactive service applications might feel concerned about\nlinking with `GDI32.LIB` and `USER32.LIB`, as they are justly associated\nwith interactive desktop, which is not available to service\nprocesses. The toolkit is designed to detect in which context it's\ncurrently executed, GUI, console app or service, and act accordingly,\nnamely whether to actually make GUI calls. Additionally, those\nwho wish to `/DELAYLOAD:GDI32.DLL` and `/DELAYLOAD:USER32.DLL` and\nactually keep them off service process should consider implementing\nand exporting from .exe image in question own `_OPENSSL_isservice` not\nrelying on `USER32.DLL`. E.g., on Windows Vista and later you could:\n\n       __declspec(dllexport) __cdecl BOOL _OPENSSL_isservice(void)\n       {\n           DWORD sess;\n\n           if (ProcessIdToSessionId(GetCurrentProcessId(), &sess))\n               return sess == 0;\n           return FALSE;\n       }\n\nIf you link with OpenSSL .DLLs, then you're expected to include into\nyour application code a small \"shim\" snippet, which provides\nthe glue between the OpenSSL BIO layer and your compiler run-time.\nSee also the OPENSSL_Applink manual page.\n\nHosted builds using Cygwin\n==========================\n\nCygwin implements a POSIX/Unix runtime system (`cygwin1.dll`) on top of the\nWindows subsystem and provides a Bash shell and GNU tools environment.\nConsequently, a build of OpenSSL with Cygwin is virtually identical to the\nUnix procedure.\n\nTo build OpenSSL using Cygwin, you need to:\n\n * Install Cygwin, see <https://cygwin.com/>\n\n * Install Cygwin Perl, at least version 5.10.0\n   and ensure it is in the $PATH\n\n * Run the Cygwin Bash shell\n\nApart from that, follow the Unix / Linux instructions in INSTALL.md.\n\nNOTE: `make test` and normal file operations may fail in directories\nmounted as text (i.e. `mount -t c:\\somewhere /home`) due to Cygwin\nstripping of carriage returns. To avoid this, ensure that a binary\nmount is used, e.g. `mount -b c:\\somewhere /home`.\n"
        },
        {
          "name": "README-ENGINES.md",
          "type": "blob",
          "size": 15.26953125,
          "content": "Engines\n=======\n\nDeprecation Note\n----------------\n\nThe ENGINE API was introduced in OpenSSL version 0.9.6 as a low level\ninterface for adding alternative implementations of cryptographic\nprimitives, most notably for integrating hardware crypto devices.\n\nThe ENGINE interface has its limitations and it has been superseded\nby the [PROVIDER API](README-PROVIDERS.md), it is deprecated in OpenSSL\nversion 3.0. The following documentation is retained as an aid for\nusers who need to maintain or support existing ENGINE implementations.\nSupport for new hardware devices or new algorithms should be added\nvia providers, and existing engines should be converted to providers\nas soon as possible.\n\nBuilt-in ENGINE implementations\n-------------------------------\n\nThere are currently built-in ENGINE implementations for the following\ncrypto devices:\n\n- Microsoft CryptoAPI\n- VIA Padlock\n- nCipher CHIL\n\nIn addition, dynamic binding to external ENGINE implementations is now\nprovided by a special ENGINE called \"dynamic\". See the \"DYNAMIC ENGINE\"\nsection below for details.\n\nAt this stage, a number of things are still needed and are being worked on:\n\n1. Integration of EVP support.\n2. Configuration support.\n3. Documentation!\n\nIntegration of EVP support\n--------------------------\n\nWith respect to EVP, this relates to support for ciphers and digests in\nthe ENGINE model so that alternative implementations of existing\nalgorithms/modes (or previously unimplemented ones) can be provided by\nENGINE implementations.\n\nConfiguration support\n---------------------\n\nConfiguration support currently exists in the ENGINE API itself, in the\nform of \"control commands\". These allow an application to expose to the\nuser/admin the set of commands and parameter types a given ENGINE\nimplementation supports, and for an application to directly feed string\nbased input to those ENGINEs, in the form of name-value pairs. This is an\nextensible way for ENGINEs to define their own \"configuration\" mechanisms\nthat are specific to a given ENGINE (eg. for a particular hardware\ndevice) but that should be consistent across *all* OpenSSL-based\napplications when they use that ENGINE. Work is in progress (or at least\nin planning) for supporting these control commands from the CONF (or\nNCONF) code so that applications using OpenSSL's existing configuration\nfile format can have ENGINE settings specified in much the same way.\nPresently however, applications must use the ENGINE API itself to provide\nsuch functionality. To see first hand the types of commands available\nwith the various compiled-in ENGINEs (see further down for dynamic\nENGINEs), use the \"engine\" openssl utility with full verbosity, i.e.:\n\n    openssl engine -vvvv\n\nDocumentation\n-------------\n\nDocumentation? Volunteers welcome! The source code is reasonably well\nself-documenting, but some summaries and usage instructions are needed -\nmoreover, they are needed in the same POD format the existing OpenSSL\ndocumentation is provided in. Any complete or incomplete contributions\nwould help make this happen.\n\nSTABILITY & BUG-REPORTS\n=======================\n\nWhat already exists is fairly stable as far as it has been tested, but\nthe test base has been a bit small most of the time. For the most part,\nthe vendors of the devices these ENGINEs support have contributed to the\ndevelopment and/or testing of the implementations, and *usually* (with no\nguarantees) have experience in using the ENGINE support to drive their\ndevices from common OpenSSL-based applications. Bugs and/or inexplicable\nbehaviour in using a specific ENGINE implementation should be sent to the\nauthor of that implementation (if it is mentioned in the corresponding C\nfile), and in the case of implementations for commercial hardware\ndevices, also through whatever vendor support channels are available. If\nnone of this is possible, or the problem seems to be something about the\nENGINE API itself (ie. not necessarily specific to a particular ENGINE\nimplementation) then you should mail complete details to the relevant\nOpenSSL mailing list. For a definition of \"complete details\", refer to\nthe OpenSSL \"README\" file. As for which list to send it to:\n\n- openssl-users: if you are *using* the ENGINE abstraction, either in an\n  pre-compiled application or in your own application code.\n\n- openssl-dev: if you are discussing problems with OpenSSL source code.\n\nUSAGE\n=====\n\nThe default \"openssl\" ENGINE is always chosen when performing crypto\noperations unless you specify otherwise. You must actively tell the\nopenssl utility commands to use anything else through a new command line\nswitch called \"-engine\". Also, if you want to use the ENGINE support in\nyour own code to do something similar, you must likewise explicitly\nselect the ENGINE implementation you want.\n\nDepending on the type of hardware, system, and configuration, \"settings\"\nmay need to be applied to an ENGINE for it to function as expected/hoped.\nThe recommended way of doing this is for the application to support\nENGINE \"control commands\" so that each ENGINE implementation can provide\nwhatever configuration primitives it might require and the application\ncan allow the user/admin (and thus the hardware vendor's support desk\nalso) to provide any such input directly to the ENGINE implementation.\nThis way, applications do not need to know anything specific to any\ndevice, they only need to provide the means to carry such user/admin\ninput through to the ENGINE in question. Ie. this connects *you* (and\nyour helpdesk) to the specific ENGINE implementation (and device), and\nallows application authors to not get buried in hassle supporting\narbitrary devices they know (and care) nothing about.\n\nA new \"openssl\" utility, \"openssl engine\", has been added in that allows\nfor testing and examination of ENGINE implementations. Basic usage\ninstructions are available by specifying the \"-?\" command line switch.\n\nDYNAMIC ENGINES\n===============\n\nThe new \"dynamic\" ENGINE provides a low-overhead way to support ENGINE\nimplementations that aren't pre-compiled and linked into OpenSSL-based\napplications. This could be because existing compiled-in implementations\nhave known problems and you wish to use a newer version with an existing\napplication. It could equally be because the application (or OpenSSL\nlibrary) you are using simply doesn't have support for the ENGINE you\nwish to use, and the ENGINE provider (eg. hardware vendor) is providing\nyou with a self-contained implementation in the form of a shared-library.\nThe other use-case for \"dynamic\" is with applications that wish to\nmaintain the smallest foot-print possible and so do not link in various\nENGINE implementations from OpenSSL, but instead leaves you to provide\nthem, if you want them, in the form of \"dynamic\"-loadable\nshared-libraries. It should be possible for hardware vendors to provide\ntheir own shared-libraries to support arbitrary hardware to work with\napplications based on OpenSSL 0.9.7 or later. If you're using an\napplication based on 0.9.7 (or later) and the support you desire is only\nannounced for versions later than the one you need, ask the vendor to\nbackport their ENGINE to the version you need.\n\nHow does \"dynamic\" work?\n------------------------\n\nThe dynamic ENGINE has a special flag in its implementation such that\nevery time application code asks for the 'dynamic' ENGINE, it in fact\ngets its own copy of it. As such, multi-threaded code (or code that\nmultiplexes multiple uses of 'dynamic' in a single application in any\nway at all) does not get confused by 'dynamic' being used to do many\nindependent things. Other ENGINEs typically don't do this so there is\nonly ever 1 ENGINE structure of its type (and reference counts are used\nto keep order). The dynamic ENGINE itself provides absolutely no\ncryptographic functionality, and any attempt to \"initialise\" the ENGINE\nautomatically fails. All it does provide are a few \"control commands\"\nthat can be used to control how it will load an external ENGINE\nimplementation from a shared-library. To see these control commands,\nuse the command-line;\n\n    openssl engine -vvvv dynamic\n\nThe \"SO_PATH\" control command should be used to identify the\nshared-library that contains the ENGINE implementation, and \"NO_VCHECK\"\nmight possibly be useful if there is a minor version conflict and you\n(or a vendor helpdesk) is convinced you can safely ignore it.\n\"ID\" is probably only needed if a shared-library implements\nmultiple ENGINEs, but if you know the engine id you expect to be using,\nit doesn't hurt to specify it (and this provides a sanity check if\nnothing else). \"LIST_ADD\" is only required if you actually wish the\nloaded ENGINE to be discoverable by application code later on using the\nENGINE's \"id\". For most applications, this isn't necessary - but some\napplication authors may have nifty reasons for using it. The \"LOAD\"\ncommand is the only one that takes no parameters and is the command\nthat uses the settings from any previous commands to actually *load*\nthe shared-library ENGINE implementation. If this command succeeds, the\n(copy of the) 'dynamic' ENGINE will magically morph into the ENGINE\nthat has been loaded from the shared-library. As such, any control\ncommands supported by the loaded ENGINE could then be executed as per\nnormal. For instance, if ENGINE \"foo\" is implemented in the shared-library\n\"libfoo.so\" and it supports some special control command \"CMD_FOO\", the\nfollowing code would load and use it (NB: obviously this code has no\nerror checking);\n\n    ENGINE *e = ENGINE_by_id(\"dynamic\");\n    ENGINE_ctrl_cmd_string(e, \"SO_PATH\", \"/lib/libfoo.so\", 0);\n    ENGINE_ctrl_cmd_string(e, \"ID\", \"foo\", 0);\n    ENGINE_ctrl_cmd_string(e, \"LOAD\", NULL, 0);\n    ENGINE_ctrl_cmd_string(e, \"CMD_FOO\", \"some input data\", 0);\n\nFor testing, the \"openssl engine\" utility can be useful for this sort\nof thing. For example the above code excerpt would achieve much the\nsame result as;\n\n    openssl engine dynamic \\\n              -pre SO_PATH:/lib/libfoo.so \\\n              -pre ID:foo \\\n              -pre LOAD \\\n              -pre \"CMD_FOO:some input data\"\n\nOr to simply see the list of commands supported by the \"foo\" ENGINE;\n\n    openssl engine -vvvv dynamic \\\n              -pre SO_PATH:/lib/libfoo.so \\\n              -pre ID:foo \\\n              -pre LOAD\n\nApplications that support the ENGINE API and more specifically, the\n\"control commands\" mechanism, will provide some way for you to pass\nsuch commands through to ENGINEs. As such, you would select \"dynamic\"\nas the ENGINE to use, and the parameters/commands you pass would\ncontrol the *actual* ENGINE used. Each command is actually a name-value\npair and the value can sometimes be omitted (eg. the \"LOAD\" command).\nWhilst the syntax demonstrated in \"openssl engine\" uses a colon to\nseparate the command name from the value, applications may provide\ntheir own syntax for making that separation (eg. a win32 registry\nkey-value pair may be used by some applications). The reason for the\n\"-pre\" syntax in the \"openssl engine\" utility is that some commands\nmight be issued to an ENGINE *after* it has been initialised for use.\nEg. if an ENGINE implementation requires a smart-card to be inserted\nduring initialisation (or a PIN to be typed, or whatever), there may be\na control command you can issue afterwards to \"forget\" the smart-card\nso that additional initialisation is no longer possible. In\napplications such as web-servers, where potentially volatile code may\nrun on the same host system, this may provide some arguable security\nvalue. In such a case, the command would be passed to the ENGINE after\nit has been initialised for use, and so the \"-post\" switch would be\nused instead. Applications may provide a different syntax for\nsupporting this distinction, and some may simply not provide it at all\n(\"-pre\" is almost always what you're after, in reality).\n\nHow do I build a \"dynamic\" ENGINE?\n----------------------------------\n\nThis question is trickier - currently OpenSSL bundles various ENGINE\nimplementations that are statically built in, and any application that\ncalls the \"ENGINE_load_builtin_engines()\" function will automatically\nhave all such ENGINEs available (and occupying memory). Applications\nthat don't call that function have no ENGINEs available like that and\nwould have to use \"dynamic\" to load any such ENGINE - but on the other\nhand such applications would only have the memory footprint of any\nENGINEs explicitly loaded using user/admin provided control commands.\nThe main advantage of not statically linking ENGINEs and only using\n\"dynamic\" for hardware support is that any installation using no\n\"external\" ENGINE suffers no unnecessary memory footprint from unused\nENGINEs. Likewise, installations that do require an ENGINE incur the\noverheads from only *that* ENGINE once it has been loaded.\n\nSounds good? Maybe, but currently building an ENGINE implementation as\na shared-library that can be loaded by \"dynamic\" isn't automated in\nOpenSSL's build process. It can be done manually quite easily however.\nSuch a shared-library can either be built with any OpenSSL code it\nneeds statically linked in, or it can link dynamically against OpenSSL\nif OpenSSL itself is built as a shared library. The instructions are\nthe same in each case, but in the former (statically linked any\ndependencies on OpenSSL) you must ensure OpenSSL is built with\nposition-independent code (\"PIC\"). The default OpenSSL compilation may\nalready specify the relevant flags to do this, but you should consult\nwith your compiler documentation if you are in any doubt.\n\nThis example will show building the \"atalla\" ENGINE in the\ncrypto/engine/ directory as a shared-library for use via the \"dynamic\"\nENGINE.\n\n1.  \"cd\" to the crypto/engine/ directory of a pre-compiled OpenSSL\n    source tree.\n\n2.  Recompile at least one source file so you can see all the compiler\n    flags (and syntax) being used to build normally. Eg;\n\n        touch hw_atalla.c ; make\n\n    will rebuild \"hw_atalla.o\" using all such flags.\n\n3.  Manually enter the same compilation line to compile the\n    \"hw_atalla.c\" file but with the following two changes;\n\n    - add \"-DENGINE_DYNAMIC_SUPPORT\" to the command line switches,\n    - change the output file from \"hw_atalla.o\" to something new,\n      eg. \"tmp_atalla.o\"\n\n4.  Link \"tmp_atalla.o\" into a shared-library using the top-level\n    OpenSSL libraries to resolve any dependencies. The syntax for doing\n    this depends heavily on your system/compiler and is a nightmare\n    known well to anyone who has worked with shared-library portability\n    before. 'gcc' on Linux, for example, would use the following syntax;\n\n        gcc -shared -o dyn_atalla.so tmp_atalla.o -L../.. -lcrypto\n\n5.  Test your shared library using \"openssl engine\" as explained in the\n    previous section. Eg. from the top-level directory, you might try\n\n        apps/openssl engine -vvvv dynamic \\\n              -pre SO_PATH:./crypto/engine/dyn_atalla.so -pre LOAD\n\nIf the shared-library loads successfully, you will see both \"-pre\"\ncommands marked as \"SUCCESS\" and the list of control commands\ndisplayed (because of \"-vvvv\") will be the control commands for the\n*atalla* ENGINE (ie. *not* the 'dynamic' ENGINE). You can also add\nthe \"-t\" switch to the utility if you want it to try and initialise\nthe atalla ENGINE for use to test any possible hardware/driver issues.\n\nPROBLEMS\n========\n\nIt seems like the ENGINE part doesn't work too well with CryptoSwift on Win32.\nA quick test done right before the release showed that trying \"openssl speed\n-engine cswift\" generated errors. If the DSO gets enabled, an attempt is made\nto write at memory address 0x00000002.\n"
        },
        {
          "name": "README-FIPS.md",
          "type": "blob",
          "size": 8.06640625,
          "content": "OpenSSL FIPS support\n====================\n\nThis release of OpenSSL includes a cryptographic module that can be\nFIPS validated. The module is implemented as an OpenSSL provider.\nA provider is essentially a dynamically loadable module which implements\ncryptographic algorithms, see the [README-PROVIDERS](README-PROVIDERS.md) file\nfor further details.\n\nA cryptographic module is only FIPS validated after it has gone through the complex\nFIPS 140 validation process. As this process takes a very long time, it is not\npossible to validate every minor release of OpenSSL.\nIf you need a FIPS validated module then you must ONLY generate a FIPS provider\nusing OpenSSL versions that have valid FIPS certificates. A FIPS certificate\ncontains a link to a Security Policy, and you MUST follow the instructions\nin the Security Policy in order to be FIPS compliant.\nSee <https://www.openssl.org/source/> for information related to OpenSSL\nFIPS certificates and Security Policies.\n\nNewer OpenSSL Releases that include security or bug fixes can be used to build\nall other components (such as the core API's, TLS and the default, base and\nlegacy providers) without any restrictions, but the FIPS provider must be built\nas specified in the Security Policy (normally with a different version of the\nsource code).\n\nThe OpenSSL FIPS provider is a shared library called `fips.so` (on Unix), or\nresp. `fips.dll` (on Windows). The FIPS provider does not get built and\ninstalled automatically. To enable it, you need to configure OpenSSL using\nthe `enable-fips` option.\n\nInstalling the FIPS provider\n============================\n\nIn order to be FIPS compliant you must only use FIPS validated source code.\nRefer to <https://www.openssl.org/source/> for information related to\nwhich versions are FIPS validated. The instructions given below build OpenSSL\njust using the FIPS validated source code.\n\nIf you want to use a validated FIPS provider, but also want to use the latest\nOpenSSL release to build everything else, then refer to the next section.\n\nThe following is only a guide.\nPlease read the Security Policy for up to date installation instructions.\n\nIf the FIPS provider is enabled, it gets installed automatically during the\nnormal installation process. Simply follow the normal procedure (configure,\nmake, make test, make install) as described in the [INSTALL](INSTALL.md) file.\n\nFor example, on Unix the final command\n\n    $ make install\n\neffectively executes the following install targets\n\n    $ make install_sw\n    $ make install_ssldirs\n    $ make install_docs\n    $ make install_fips     # for `enable-fips` only\n\nThe `install_fips` make target can also be invoked explicitly to install\nthe FIPS provider independently, without installing the rest of OpenSSL.\n\nThe Installation of the FIPS provider consists of two steps. In the first step,\nthe shared library is copied to its installed location, which by default is\n\n    /usr/local/lib/ossl-modules/fips.so                  on Unix, and\n    C:\\Program Files\\OpenSSL\\lib\\ossl-modules\\fips.dll   on Windows.\n\nIn the second step, the `openssl fipsinstall` command is executed, which completes\nthe installation by doing the following two things:\n\n- Runs the FIPS module self tests\n- Generates the so-called FIPS module configuration file containing information\n  about the module such as the module checksum (and for OpenSSL 3.0 the\n  self test status).\n\nThe FIPS module must have the self tests run, and the FIPS module config file\noutput generated on every machine that it is to be used on. For OpenSSL 3.0,\nyou must not copy the FIPS module config file output data from one machine to another.\n\nOn Unix, the `openssl fipsinstall` command will be invoked as follows by default:\n\n    $ openssl fipsinstall -out /usr/local/ssl/fipsmodule.cnf -module /usr/local/lib/ossl-modules/fips.so\n\nIf you configured OpenSSL to be installed to a different location, the paths will\nvary accordingly. In the rare case that you need to install the fipsmodule.cnf\nto a non-standard location, you can execute the `openssl fipsinstall` command manually.\n\nInstalling the FIPS provider and using it with the latest release\n=================================================================\n\nThis normally requires you to download 2 copies of the OpenSSL source code.\n\nDownload and build a validated FIPS provider\n--------------------------------------------\n\nRefer to <https://www.openssl.org/source/> for information related to\nwhich versions are FIPS validated. For this example we use OpenSSL 3.0.0.\n\n    $ wget https://www.openssl.org/source/openssl-3.0.0.tar.gz\n    $ tar -xf openssl-3.0.0.tar.gz\n    $ cd openssl-3.0.0\n    $ ./Configure enable-fips\n    $ make\n    $ cd ..\n\nDownload and build the latest release of OpenSSL\n------------------------------------------------\n\nWe use OpenSSL 3.1.0 here, (but you could also use the latest 3.0.X)\n\n    $ wget https://www.openssl.org/source/openssl-3.1.0.tar.gz\n    $ tar -xf openssl-3.1.0.tar.gz\n    $ cd openssl-3.1.0\n    $ ./Configure enable-fips\n    $ make\n\nUse the OpenSSL FIPS provider for testing\n-----------------------------------------\n\nWe do this by replacing the artifact for the OpenSSL 3.1.0 FIPS provider.\nNote that the OpenSSL 3.1.0 FIPS provider has not been validated\nso it must not be used for FIPS purposes.\n\n    $ cp ../openssl-3.0.0/providers/fips.so providers/.\n    $ cp ../openssl-3.0.0/providers/fipsmodule.cnf providers/.\n    // Note that for OpenSSL 3.0 that the `fipsmodule.cnf` file should not\n    // be copied across multiple machines if it contains an entry for\n    // `install-status`. (Otherwise the self tests would be skipped).\n\n    // Validate the output of the following to make sure we are using the\n    // OpenSSL 3.0.0 FIPS provider\n    $ ./util/wrap.pl -fips apps/openssl list -provider-path providers \\\n    -provider fips -providers\n\n    // Now run the current tests using the OpenSSL 3.0 FIPS provider.\n    $ make tests\n\nCopy the FIPS provider artifacts (`fips.so` & `fipsmodule.cnf`) to known locations\n-------------------------------------------------------------------------------------\n\n    $ cd ../openssl-3.0.0\n    $ sudo make install_fips\n\nCheck that the correct FIPS provider is being used\n--------------------------------------------------\n\n    $./util/wrap.pl -fips apps/openssl list -provider-path providers \\\n    -provider fips -providers\n\n    // This should produce the following output\n    Providers:\n      base\n        name: OpenSSL Base Provider\n        version: 3.1.0\n        status: active\n      fips\n        name: OpenSSL FIPS Provider\n        version: 3.0.0\n        status: active\n\nUsing the FIPS Module in applications\n=====================================\n\nDocumentation about using the FIPS module is available on the [fips_module(7)]\nmanual page.\n\n [fips_module(7)]: https://www.openssl.org/docs/manmaster/man7/fips_module.html\n\nEntropy Source\n==============\n\nThe FIPS provider typically relies on an external entropy source,\nspecified during OpenSSL build configuration (default: `os`).  However, by\nenabling the `enable-fips-jitter` option during configuration, an internal\njitter entropy source will be used instead.  Note that this will cause\nthe FIPS provider to operate in a non-compliant mode unless an entropy\nassessment [ESV] and validation through the [CMVP] are additionally conducted.\n\nNote that the `enable-fips-jitter` option is only available in OpenSSL\nversions 3.5 and later.\n\n [CMVP]: https://csrc.nist.gov/projects/cryptographic-module-validation-program\n [ESV]: https://csrc.nist.gov/Projects/cryptographic-module-validation-program/entropy-validations\n\n3rd-Party Vendor Builds\n=====================================\n\nSome Vendors choose to patch/modify/build their own FIPS provider,\ntest it with a Security Laboratory and submit it under their own CMVP\ncertificate, instead of using OpenSSL Project submissions. When doing\nso, FIPS provider should uniquely identify its own name and version\nnumber. The build infrastructure allows to customize FIPS provider\nbuild information via changes to strings in `VERSION.dat`.\n\nSetting \"PRE_RELEASE_TAG\" (dashed suffix), \"BUILD_METADATA\" (plus\nsuffix), and \"FIPS_VENDOR\" allow to control reported FIPS provider\nname and build version as required for CMVP submission.\n"
        },
        {
          "name": "README-PROVIDERS.md",
          "type": "blob",
          "size": 5.3544921875,
          "content": "Providers\n=========\n\n - [Standard Providers](#standard-providers)\n    - [The Default Provider](#the-default-provider)\n    - [The Legacy Provider](#the-legacy-provider)\n    - [The FIPS Provider](#the-fips-provider)\n    - [The Base Provider](#the-base-provider)\n    - [The Null Provider](#the-null-provider)\n - [Loading Providers](#loading-providers)\n\nStandard Providers\n==================\n\nProviders are containers for algorithm implementations. Whenever a cryptographic\nalgorithm is used via the high level APIs a provider is selected. It is that\nprovider implementation that actually does the required work. There are five\nproviders distributed with OpenSSL. In the future, we expect third parties to\ndistribute their own providers which can be added to OpenSSL dynamically.\nDocumentation about writing providers is available on the [provider(7)]\nmanual page.\n\n [provider(7)]: https://www.openssl.org/docs/manmaster/man7/provider.html\n\nThe Default Provider\n--------------------\n\nThe default provider collects together all of the standard built-in OpenSSL\nalgorithm implementations. If an application doesn't specify anything else\nexplicitly (e.g. in the application or via config), then this is the provider\nthat will be used. It is loaded automatically the first time that we try to\nget an algorithm from a provider if no other provider has been loaded yet.\nIf another provider has already been loaded then it won't be loaded\nautomatically. Therefore, if you want to use it in conjunction with other\nproviders, then you must load it explicitly.\n\nThis is a \"built-in\" provider, which means that it is compiled and linked\ninto the libcrypto library and does not exist as a separate standalone module.\n\nThe Legacy Provider\n-------------------\n\nThe legacy provider is a collection of legacy algorithms that are either no\nlonger in common use or considered insecure and strongly discouraged from use.\nHowever, some applications may need to use these algorithms for backwards\ncompatibility reasons. This provider is **not** loaded by default.\nThis may mean that some applications upgrading from earlier versions of OpenSSL\nmay find that some algorithms are no longer available unless they load the\nlegacy provider explicitly.\n\nAlgorithms in the legacy provider include MD2, MD4, MDC2, RMD160, CAST5,\nBF (Blowfish), IDEA, SEED, RC2, RC4, RC5 and DES (but not 3DES).\n\nThe FIPS Provider\n-----------------\n\nThe FIPS provider contains a sub-set of the algorithm implementations available\nfrom the default provider, consisting of algorithms conforming to FIPS standards.\nIt is intended that this provider will be FIPS140-2 validated.\n\nIn some cases, there may be minor behavioural differences between algorithm\nimplementations in this provider compared to the equivalent algorithm in the\ndefault provider. This is typically in order to conform to FIPS standards.\n\nThe Base Provider\n-----------------\n\nThe base provider contains a small sub-set of non-cryptographic algorithms\navailable in the default provider. For example, it contains algorithms to\nserialize and deserialize keys to files. If you do not load the default\nprovider then you should always load this one instead (in particular, if\nyou are using the FIPS provider).\n\nThe Null Provider\n-----------------\n\nThe null provider is \"built-in\" to libcrypto and contains no algorithm\nimplementations. In order to guarantee that the default provider is not\nautomatically loaded, the null provider can be loaded instead.\n\nThis can be useful if you are using non-default library contexts and want\nto ensure that the default library context is never used unintentionally.\n\nLoading Providers\n=================\n\nProviders to be loaded can be specified in the OpenSSL config file.\nSee the [config(5)] manual page for information about how to configure\nproviders via the config file, and how to automatically activate them.\n\n [config(5)]: https://www.openssl.org/docs/manmaster/man5/config.html\n\nThe following is a minimal config file example to load and activate both\nthe legacy and the default provider in the default library context.\n\n    openssl_conf = openssl_init\n\n    [openssl_init]\n    providers = provider_sect\n\n    [provider_sect]\n    default = default_sect\n    legacy = legacy_sect\n\n    [default_sect]\n    activate = 1\n\n    [legacy_sect]\n    activate = 1\n\nIt is also possible to load providers programmatically. For example you can\nload the legacy provider into the default library context as shown below.\nNote that once you have explicitly loaded a provider into the library context\nthe default provider will no longer be automatically loaded. Therefore you will\noften also want to explicitly load the default provider, as is done here:\n\n    #include <stdio.h>\n    #include <stdlib.h>\n\n    #include <openssl/provider.h>\n\n    int main(void)\n    {\n        OSSL_PROVIDER *legacy;\n        OSSL_PROVIDER *deflt;\n\n        /* Load Multiple providers into the default (NULL) library context */\n        legacy = OSSL_PROVIDER_load(NULL, \"legacy\");\n        if (legacy == NULL) {\n            printf(\"Failed to load Legacy provider\\n\");\n            exit(EXIT_FAILURE);\n        }\n        deflt = OSSL_PROVIDER_load(NULL, \"default\");\n        if (deflt == NULL) {\n            printf(\"Failed to load Default provider\\n\");\n            OSSL_PROVIDER_unload(legacy);\n            exit(EXIT_FAILURE);\n        }\n\n        /* Rest of application */\n\n        OSSL_PROVIDER_unload(legacy);\n        OSSL_PROVIDER_unload(deflt);\n        exit(EXIT_SUCCESS);\n    }\n"
        },
        {
          "name": "README-QUIC.md",
          "type": "blob",
          "size": 3.6669921875,
          "content": "Using OpenSSL with QUIC\n=======================\n\nFrom OpenSSL 3.2, OpenSSL features support for making QUIC connections as a\nclient.\n\nUsers interested in using the new QUIC functionality are encouraged to look at\nsome of the following resources:\n\n- The new [OpenSSL Guide], which provides introductory guides on the use of TLS,\n  QUIC, and other OpenSSL functionality.\n- The [OpenSSL Guide] incorporates various code samples. The complete source\n  for these can be [found in the source tree under `demos/guide`](./demos/guide/).\n- The [openssl-quic(7) manual page], which provides a basic reference overview\n  of QUIC functionality and how use of QUIC differs from use of TLS with regard\n  to our API.\n- The [Demo-Driven Design (DDD)][DDD] demos, which demonstrate the use of QUIC\n  using simple examples. These can be [found in the source tree under\n  `doc/designs/ddd`].\n- The [demo found in `demos/http3`], which provides an HTTP/3 client example\n  using the nghttp3 HTTP/3 library.\n\nFAQ\n---\n\n### Why would I want to use QUIC, and what functionality does QUIC offer relative to TLS or DTLS?\n\nQUIC is a state-of-the-art secure transport protocol carried over UDP. It can\nserve many of the use cases of SSL/TLS as well as those of DTLS.\n\nQUIC delivers a number of advantages such as support for multiple streams of\ncommunication; it is the basis for HTTP/3 [RFC 9114]; fast connection\ninitiation; and connection migration (enabling a connection to survive IP\naddress changes). For a more complete description of what QUIC is and its\nadvantages see the [QUIC Introduction] in the [OpenSSL Guide].\n\nFor a comprehensive overview of OpenSSL's QUIC implementation, see the\n[openssl-quic(7) manual page].\n\n### How can I use HTTP/3 with OpenSSL?\n\nThere are many HTTP/3 implementations in C available. The use of one such HTTP/3\nlibrary with OpenSSL QUIC is demonstrated via the [demo found in `demos/http3`].\n\n### How can I use OpenSSL QUIC in my own application for a different protocol?\n\nThe [OpenSSL Guide] provides introductory examples for how to make use of\nOpenSSL QUIC.\n\nThe [openssl-quic(7) manual page] and the [Demo-Driven Design (DDD)][DDD] demos\nmay also be helpful to illustrate the changes needed if you are trying to adapt\nan existing application.\n\n### How can I test QUIC using `openssl s_client`?\n\nThere is basic support for single-stream QUIC using `openssl s_client`:\n\n```shell\n$ openssl s_client -quic -alpn myalpn -connect host:port\n```\n\nIn the above example replace `host` with the hostname of the server (e.g.\n`www.example.com`) and `port` with the port for the server (e.g. `443`). Replace\n`myalpn` with the Application Layer Protocol to use (e.g.`h3` represents\nHTTP/3). IANA maintains a standard list of [ALPN ids] that can be used.\n\nThis example connects to a QUIC server and opens a single bidirectional stream.\nData can be passed via stdin/stdout as usual. This allows test usage of QUIC\nusing simple TCP/TLS-like usage. Note that OpenSSL has no direct support for\nHTTP/3 so connecting to an HTTP/3 server should be possible but sending an\nHTTP/3 request or receiving any response data is not.\n\n[openssl-quic(7) manual page]: https://www.openssl.org/docs/manmaster/man7/openssl-quic.html\n[OpenSSL Guide]: https://www.openssl.org/docs/manmaster/man7/ossl-guide-introduction.html\n[DDD]: https://github.com/openssl/openssl/tree/master/doc/designs/ddd\n[found in the source tree under `doc/designs/ddd`]: ./doc/designs/ddd/\n[demo found in `demos/http3`]: ./demos/http3/\n[QUIC Introduction]: https://www.openssl.org/docs/manmaster/man7/ossl-guide-quic-introduction.html\n[RFC 9114]: https://tools.ietf.org/html/rfc9114\n[ALPN ids]: https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.072265625,
          "content": "Welcome to the OpenSSL Project\n==============================\n\n[![openssl logo]][www.openssl.org]\n\n[![github actions ci badge]][github actions ci]\n![Nightly OS Zoo ci badge](https://github.com/openssl/openssl/actions/workflows/os-zoo.yml/badge.svg)\n![Provider Compatibility](https://github.com/openssl/openssl/actions/workflows/provider-compatibility.yml/badge.svg)\n![Quic Interop](https://github.com/openssl/openssl/actions/workflows/run_quic_interop.yml/badge.svg)\n![Daily checks](https://github.com/openssl/openssl/actions/workflows/run-checker-daily.yml/badge.svg)\n\nOpenSSL is a robust, commercial-grade, full-featured Open Source Toolkit\nfor the TLS (formerly SSL), DTLS and QUIC (currently client side only)\nprotocols.\n\nThe protocol implementations are based on a full-strength general purpose\ncryptographic library, which can also be used stand-alone. Also included is a\ncryptographic module validated to conform with FIPS standards.\n\nOpenSSL is descended from the SSLeay library developed by Eric A. Young\nand Tim J. Hudson.\n\nThe official Home Page of the OpenSSL Project is [www.openssl.org].\n\nTable of Contents\n=================\n\n - [Overview](#overview)\n - [Download](#download)\n - [Build and Install](#build-and-install)\n - [Documentation](#documentation)\n - [License](#license)\n - [Support](#support)\n - [Contributing](#contributing)\n - [Legalities](#legalities)\n\nOverview\n========\n\nThe OpenSSL toolkit includes:\n\n- **libssl**\n  an implementation of all TLS protocol versions up to TLSv1.3 ([RFC 8446]),\n  DTLS protocol versions up to DTLSv1.2 ([RFC 6347]) and\n  the QUIC (currently client side only) version 1 protocol ([RFC 9000]).\n\n- **libcrypto**\n  a full-strength general purpose cryptographic library. It constitutes the\n  basis of the TLS implementation, but can also be used independently.\n\n- **openssl**\n  the OpenSSL command line tool, a swiss army knife for cryptographic tasks,\n  testing and analyzing. It can be used for\n  - creation of key parameters\n  - creation of X.509 certificates, CSRs and CRLs\n  - calculation of message digests\n  - encryption and decryption\n  - SSL/TLS/DTLS and client and server tests\n  - QUIC client tests\n  - handling of S/MIME signed or encrypted mail\n  - and more...\n\nDownload\n========\n\nFor Production Use\n------------------\n\nSource code tarballs of the official releases can be downloaded from\n[openssl-library.org/source/](https://openssl-library.org/source/).\nThe OpenSSL project does not distribute the toolkit in binary form.\n\nHowever, for a large variety of operating systems precompiled versions\nof the OpenSSL toolkit are available. In particular, on Linux and other\nUnix operating systems, it is normally recommended to link against the\nprecompiled shared libraries provided by the distributor or vendor.\n\nWe also maintain a list of third parties that produce OpenSSL binaries for\nvarious Operating Systems (including Windows) on the [Binaries] page on our\nwiki.\n\nFor Testing and Development\n---------------------------\n\nAlthough testing and development could in theory also be done using\nthe source tarballs, having a local copy of the git repository with\nthe entire project history gives you much more insight into the\ncode base.\n\nThe main OpenSSL Git repository is private.\nThere is a public GitHub mirror of it at [github.com/openssl/openssl],\nwhich is updated automatically from the former on every commit.\n\nA local copy of the Git repository can be obtained by cloning it from\nthe GitHub mirror using\n\n    git clone https://github.com/openssl/openssl.git\n\nIf you intend to contribute to OpenSSL, either to fix bugs or contribute\nnew features, you need to fork the GitHub mirror and clone your public fork\ninstead.\n\n    git clone https://github.com/yourname/openssl.git\n\nThis is necessary because all development of OpenSSL nowadays is done via\nGitHub pull requests. For more details, see [Contributing](#contributing).\n\nBuild and Install\n=================\n\nAfter obtaining the Source, have a look at the [INSTALL](INSTALL.md) file for\ndetailed instructions about building and installing OpenSSL. For some\nplatforms, the installation instructions are amended by a platform specific\ndocument.\n\n * [Notes for UNIX-like platforms](NOTES-UNIX.md)\n * [Notes for Android platforms](NOTES-ANDROID.md)\n * [Notes for Windows platforms](NOTES-WINDOWS.md)\n * [Notes for the DOS platform with DJGPP](NOTES-DJGPP.md)\n * [Notes for the OpenVMS platform](NOTES-VMS.md)\n * [Notes on Perl](NOTES-PERL.md)\n * [Notes on Valgrind](NOTES-VALGRIND.md)\n\nSpecific notes on upgrading to OpenSSL 3.x from previous versions can be found\nin the [ossl-guide-migration(7ossl)] manual page.\n\nDocumentation\n=============\n\nREADME Files\n------------\n\nThere are some README.md files in the top level of the source distribution\ncontaining additional information on specific topics.\n\n * [Information about the OpenSSL QUIC protocol implementation](README-QUIC.md)\n * [Information about the OpenSSL Provider architecture](README-PROVIDERS.md)\n * [Information about using the OpenSSL FIPS validated module](README-FIPS.md)\n * [Information about the legacy OpenSSL Engine architecture](README-ENGINES.md)\n\nThe OpenSSL Guide\n-----------------\n\nThere are some tutorial and introductory pages on some important OpenSSL topics\nwithin the [OpenSSL Guide].\n\nManual Pages\n------------\n\nThe manual pages for the master branch and all current stable releases are\navailable online.\n\n- [OpenSSL master](https://www.openssl.org/docs/manmaster)\n- [OpenSSL 3.0](https://www.openssl.org/docs/man3.0)\n- [OpenSSL 3.1](https://www.openssl.org/docs/man3.1)\n- [OpenSSL 3.2](https://www.openssl.org/docs/man3.2)\n\nDemos\n-----\n\nThere are numerous source code demos for using various OpenSSL capabilities in the\n[demos subfolder](./demos).\n\nWiki\n----\n\nThere is a Wiki at [wiki.openssl.org] which is currently not very active.\nIt contains a lot of useful information, not all of which is up-to-date.\n\nLicense\n=======\n\nOpenSSL is licensed under the Apache License 2.0, which means that\nyou are free to get and use it for commercial and non-commercial\npurposes as long as you fulfill its conditions.\n\nSee the [LICENSE.txt](LICENSE.txt) file for more details.\n\nSupport\n=======\n\nThere are various ways to get in touch. The correct channel depends on\nyour requirement. See the [SUPPORT](SUPPORT.md) file for more details.\n\nContributing\n============\n\nIf you are interested and willing to contribute to the OpenSSL project,\nplease take a look at the [CONTRIBUTING](CONTRIBUTING.md) file.\n\nLegalities\n==========\n\nA number of nations restrict the use or export of cryptography. If you are\npotentially subject to such restrictions, you should seek legal advice before\nattempting to develop or distribute cryptographic code.\n\nCopyright\n=========\n\nCopyright (c) 1998-2024 The OpenSSL Project Authors\n\nCopyright (c) 1995-1998 Eric A. Young, Tim J. Hudson\n\nAll rights reserved.\n\n<!-- Links  -->\n\n[www.openssl.org]:\n    <https://www.openssl.org>\n    \"OpenSSL Homepage\"\n\n[github.com/openssl/openssl]:\n    <https://github.com/openssl/openssl>\n    \"OpenSSL GitHub Mirror\"\n\n[wiki.openssl.org]:\n    <https://wiki.openssl.org>\n    \"OpenSSL Wiki\"\n\n[ossl-guide-migration(7ossl)]:\n    <https://www.openssl.org/docs/manmaster/man7/ossl-guide-migration.html>\n    \"OpenSSL Migration Guide\"\n\n[RFC 8446]:\n     <https://tools.ietf.org/html/rfc8446>\n\n[RFC 6347]:\n     <https://tools.ietf.org/html/rfc6347>\n\n[RFC 9000]:\n     <https://tools.ietf.org/html/rfc9000>\n\n[Binaries]:\n    <https://wiki.openssl.org/index.php/Binaries>\n    \"List of third party OpenSSL binaries\"\n\n[OpenSSL Guide]:\n    <https://www.openssl.org/docs/manmaster/man7/ossl-guide-introduction.html>\n    \"An introduction to OpenSSL\"\n\n<!-- Logos and Badges -->\n\n[openssl logo]:\n    doc/images/openssl.svg\n    \"OpenSSL Logo\"\n\n[github actions ci badge]:\n    <https://github.com/openssl/openssl/workflows/GitHub%20CI/badge.svg>\n    \"GitHub Actions CI Status\"\n\n[github actions ci]:\n    <https://github.com/openssl/openssl/actions?query=workflow%3A%22GitHub+CI%22>\n    \"GitHub Actions CI\"\n\n[appveyor badge]:\n    <https://ci.appveyor.com/api/projects/status/8e10o7xfrg73v98f/branch/master?svg=true>\n    \"AppVeyor Build Status\"\n\n[appveyor jobs]:\n    <https://ci.appveyor.com/project/openssl/openssl/branch/master>\n    \"AppVeyor Jobs\"\n"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 3.8056640625,
          "content": "OpenSSL User Support resources\n==============================\n\nSee the <https://www.openssl.org/support/contracts.html> for details on how to\nobtain commercial technical support.\n\nIf you have general questions about using OpenSSL\n-------------------------------------------------\n\nIn this case the [openssl-users] mailing list is the right place for you.\nThe list is not only watched by the OpenSSL team members, but also by many\nother OpenSSL users. Here you will most likely get the answer to your questions.\nAn overview over the [mailing lists](#mailing-lists) can be found below.\n\nIf you think you found a Bug\n----------------------------\n\n*NOTE: this section assumes that you want to report it or figure it out and\nfix it.  What's written here is not to be taken as a recipe for how to get a\nworking production installation*\n\nIf you have any problems with OpenSSL then please take the following steps\nfirst:\n\n- Search the mailing lists and/or the GitHub issues to find out whether\n  the problem has already been reported.\n- Download the latest version from the repository to see if the problem\n  has already been addressed.\n- Configure without assembler support (`no-asm`) and check whether the\n  problem persists.\n- Remove compiler optimization flags.\n\nPlease keep in mind: Just because something doesn't work the way you expect\ndoes not mean it is necessarily a bug in OpenSSL. If you are not sure,\nconsider searching the mail archives and posting a question to the\n[openssl-users] mailing list first.\n\n### Open an Issue\n\nIf you wish to report a bug, please open an [issue][github-issues] on GitHub\nand include the following information:\n\n- OpenSSL version: output of `openssl version -a`\n- Configuration data: output of `perl configdata.pm --dump`\n- OS Name, Version, Hardware platform\n- Compiler Details (name, version)\n- Application Details (name, version)\n- Problem Description (steps that will reproduce the problem, if known)\n- Stack Traceback (if the application dumps core)\n\nNot only errors in the software, also errors in the documentation, in\nparticular the manual pages, can be reported as issues.\n\n### Submit a Pull Request\n\nThe fastest way to get a bug fixed is to fix it yourself ;-). If you are\nexperienced in programming and know how to fix the bug, you can open a\npull request. The details are covered in the [Contributing][contributing] section.\n\nDon't hesitate to open a pull request, even if it's only a small change\nlike a grammatical or typographical error in the documentation.\n\nMailing Lists\n=============\n\nThe OpenSSL maintains a number of [mailing lists] for various purposes.\nThe most important lists are:\n\n- [openssl-users]    for general questions about using the OpenSSL software\n                     and discussions between OpenSSL users.\n\n- [openssl-announce] for official announcements to the OpenSSL community.\n\n- [openssl-project]  for discussion about the development roadmap\n                     and governance.\n\nOnly subscribers can post to [openssl-users] or [openssl-project].  The\narchives are made public, however.  For more information, see the [mailing\nlists] page.\n\nThere was an [openssl-dev] list that has been discontinued since development\nis now taking place in the form of GitHub pull requests. Although not active\nanymore, the searchable archive may still contain useful information.\n\n<!-- Links -->\n\n[mailing lists]:     https://www.openssl.org/community/mailinglists.html\n[openssl-users]:     https://mta.openssl.org/mailman/listinfo/openssl-users\n[openssl-announce]:  https://mta.openssl.org/mailman/listinfo/openssl-announce\n[openssl-project]:   https://mta.openssl.org/mailman/listinfo/openssl-project\n[openssl-dev]:       https://mta.openssl.org/mailman/listinfo/openssl-dev\n[github-issues]:     https://github.com/openssl/openssl/issues/new/choose\n[contributing]:      https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md\n"
        },
        {
          "name": "VERSION.dat",
          "type": "blob",
          "size": 0.08984375,
          "content": "MAJOR=3\nMINOR=5\nPATCH=0\nPRE_RELEASE_TAG=dev\nBUILD_METADATA=\nRELEASE_DATE=\"\"\nSHLIB_VERSION=3\n"
        },
        {
          "name": "VMS",
          "type": "tree",
          "content": null
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.info",
          "type": "blob",
          "size": 5.7119140625,
          "content": "# Note that some of these directories are filtered in Configure.  Look for\n# %skipdir there for further explanations.\n\nSUBDIRS=crypto ssl apps util tools fuzz providers doc\nIF[{- !$disabled{tests} -}]\n  SUBDIRS=test\nENDIF\nIF[{- !$disabled{demos} -}]\n  SUBDIRS=demos\nENDIF\nIF[{- !$disabled{'deprecated-3.0'} -}]\n  SUBDIRS=engines\nENDIF\nSUBDIRS=exporters\n\nLIBS=libcrypto libssl\nINCLUDE[libcrypto]=. include\nINCLUDE[libssl]=. include\nDEPEND[libssl]=libcrypto\n\n# Empty DEPEND \"indices\" means the dependencies are expected to be built\n# unconditionally before anything else.\nDEPEND[]=include/openssl/asn1.h \\\n         include/openssl/asn1t.h \\\n         include/openssl/bio.h \\\n         include/openssl/cmp.h \\\n         include/openssl/cms.h \\\n         include/openssl/conf.h \\\n         include/openssl/comp.h \\\n         include/openssl/core_names.h \\\n         include/openssl/crmf.h \\\n         include/openssl/crypto.h \\\n         include/openssl/ct.h \\\n         include/openssl/err.h \\\n         include/openssl/ess.h \\\n         include/openssl/fipskey.h \\\n         include/openssl/lhash.h \\\n         include/openssl/opensslv.h \\\n         include/openssl/ocsp.h \\\n         include/openssl/pkcs12.h \\\n         include/openssl/pkcs7.h \\\n         include/openssl/safestack.h \\\n         include/openssl/srp.h \\\n         include/openssl/ssl.h \\\n         include/openssl/ui.h \\\n         include/openssl/x509.h \\\n         include/openssl/x509v3.h \\\n         include/openssl/x509_acert.h \\\n         include/openssl/x509_vfy.h \\\n         include/crypto/bn_conf.h include/crypto/dso_conf.h \\\n         include/internal/param_names.h crypto/params_idx.c\n\nGENERATE[include/openssl/asn1.h]=include/openssl/asn1.h.in\nGENERATE[include/openssl/asn1t.h]=include/openssl/asn1t.h.in\nGENERATE[include/openssl/bio.h]=include/openssl/bio.h.in\nGENERATE[include/openssl/cmp.h]=include/openssl/cmp.h.in\nGENERATE[include/openssl/cms.h]=include/openssl/cms.h.in\nGENERATE[include/openssl/conf.h]=include/openssl/conf.h.in\nGENERATE[include/openssl/comp.h]=include/openssl/comp.h.in\n# include/openssl/configuration.h is generated by configdata.pm\n# We still need this information for the FIPS module checksum, but the attribute\n# 'skip' ensures that nothing is actually done with it.\nGENERATE[include/openssl/configuration.h]{skip}=include/openssl/configuration.h.in\nGENERATE[include/openssl/crmf.h]=include/openssl/crmf.h.in\nGENERATE[include/openssl/crypto.h]=include/openssl/crypto.h.in\nGENERATE[include/openssl/ct.h]=include/openssl/ct.h.in\nGENERATE[include/openssl/err.h]=include/openssl/err.h.in\nGENERATE[include/openssl/ess.h]=include/openssl/ess.h.in\nGENERATE[include/openssl/fipskey.h]=include/openssl/fipskey.h.in\nGENERATE[include/openssl/lhash.h]=include/openssl/lhash.h.in\nGENERATE[include/openssl/ocsp.h]=include/openssl/ocsp.h.in\nGENERATE[include/openssl/opensslv.h]=include/openssl/opensslv.h.in\nGENERATE[include/openssl/pkcs12.h]=include/openssl/pkcs12.h.in\nGENERATE[include/openssl/pkcs7.h]=include/openssl/pkcs7.h.in\nGENERATE[include/openssl/safestack.h]=include/openssl/safestack.h.in\nGENERATE[include/openssl/srp.h]=include/openssl/srp.h.in\nGENERATE[include/openssl/ssl.h]=include/openssl/ssl.h.in\nGENERATE[include/openssl/ui.h]=include/openssl/ui.h.in\nGENERATE[include/openssl/x509.h]=include/openssl/x509.h.in\nGENERATE[include/openssl/x509v3.h]=include/openssl/x509v3.h.in\nGENERATE[include/openssl/x509_acert.h]=include/openssl/x509_acert.h.in\nGENERATE[include/openssl/x509_vfy.h]=include/openssl/x509_vfy.h.in\nGENERATE[include/crypto/bn_conf.h]=include/crypto/bn_conf.h.in\nGENERATE[include/crypto/dso_conf.h]=include/crypto/dso_conf.h.in\n\nDEPEND[crypto/params_idx.c \\\n       include/internal/param_names.h \\\n       include/openssl/core_names.h]=util/perl|OpenSSL/paramnames.pm\nGENERATE[crypto/params_idx.c]=crypto/params_idx.c.in\nGENERATE[include/internal/param_names.h]=include/internal/param_names.h.in\nGENERATE[include/openssl/core_names.h]=include/openssl/core_names.h.in\n\nIF[{- defined $target{shared_defflag} -}]\n  SHARED_SOURCE[libcrypto]=libcrypto.ld\n  SHARED_SOURCE[libssl]=libssl.ld\n\n  GENERATE[libcrypto.ld]=util/libcrypto.num libcrypto\n  GENERATE[libssl.ld]=util/libssl.num libssl\n  DEPEND[libcrypto.ld libssl.ld]=configdata.pm util/perl/OpenSSL/Ordinals.pm\nENDIF\n\nIF[{- $config{target} =~ /^(?:Cygwin|mingw|VC-|BC-)/ -}]\n  GENERATE[libcrypto.rc]=util/mkrc.pl libcrypto\n  GENERATE[libssl.rc]=util/mkrc.pl libssl\n  DEPEND[libcrypto.rc libssl.rc]=configdata.pm\n\n  SHARED_SOURCE[libcrypto]=libcrypto.rc\n  SHARED_SOURCE[libssl]=libssl.rc\nENDIF\n\n# This file sets the build directory up for CMake inclusion\n# Note: This generation of OpenSSLConfig[Version].cmake is used\n# for building openssl locally, and so the build variables are \n# taken from builddata.pm rather than installdata.pm.  For exportable\n# versions of these generated files, you'll find them in the exporters\n# directory\nGENERATE[OpenSSLConfig.cmake]=exporters/cmake/OpenSSLConfig.cmake.in\nDEPEND[OpenSSLConfig.cmake]=builddata.pm\nGENERATE[OpenSSLConfigVersion.cmake]=exporters/cmake/OpenSSLConfigVersion.cmake.in\nDEPEND[OpenSSLConfigVersion.cmake]=builddata.pm\nDEPEND[OpenSSLConfigVersion.cmake]=OpenSSLConfig.cmake\nDEPEND[\"\"]=OpenSSLConfigVersion.cmake\n\n# This file sets the build directory up for pkg-config\nGENERATE[libcrypto.pc]=exporters/pkg-config/libcrypto.pc.in\nDEPEND[libcrypto.pc]=builddata.pm\nGENERATE[libssl.pc]=exporters/pkg-config/libssl.pc.in\nDEPEND[libssl.pc]=builddata.pm\nGENERATE[openssl.pc]=exporters/pkg-config/openssl.pc.in\nDEPEND[openssl.pc]=builddata.pm\nDEPEND[openssl.pc]=libcrypto.pc libssl.pc\n\nGENERATE[builddata.pm]=util/mkinstallvars.pl \\\n    PREFIX=. BINDIR=apps APPLINKDIR=ms \\\n    LIBDIR= INCLUDEDIR=include \"INCLUDEDIR=$(SRCDIR)/include\" \\\n    ENGINESDIR=engines MODULESDIR=providers \\\n    \"VERSION=$(VERSION)\" \"LDLIBS=$(LIB_EX_LIBS)\"\n\nDEPEND[\"\"]=openssl.pc\n"
        },
        {
          "name": "cloudflare-quiche",
          "type": "commit",
          "content": null
        },
        {
          "name": "config",
          "type": "blob",
          "size": 0.369140625,
          "content": "#! /bin/sh\n# Copyright 2020 The OpenSSL Project Authors. All Rights Reserved.\n#\n# Licensed under the Apache License 2.0 (the \"License\").  You may not use\n# this file except in compliance with the License.  You can obtain a copy\n# in the file LICENSE in the source distribution or at\n# https://www.openssl.org/source/license.html\n\nTHERE=`dirname $0`\nexec \"$THERE/Configure\" \"$@\"\n"
        },
        {
          "name": "config.com",
          "type": "blob",
          "size": 2.45703125,
          "content": "$\t! OpenSSL config: determine the architecture and run Configure\n$\t! Copyright 2016-2020 The OpenSSL Project Authors. All Rights Reserved.\n$\t!\n$\t! Licensed under the Apache License 2.0 (the \"License\").  You may not use\n$\t! this file except in compliance with the License.  You can obtain a\n$\t! copy in the file LICENSE in the source distribution or at\n$\t! https://www.openssl.org/source/license.html\n$\t!\n$\t! Very simple for the moment, it will take the following arguments:\n$\t!\n$\t! -32 or 32\tsets /POINTER_SIZE=32\n$\t! -64 or 64\tsets /POINTER_SIZE=64\n$\t! -d\t\tsets debugging\n$\t! -h\t\tprints a usage and exits\n$\t! -t\t\ttest mode, doesn't run Configure\n$\n$\tarch = f$edit( f$getsyi( \"arch_name\"), \"lowercase\")\n$\tpointer_size = \"\"\n$\tdryrun = 0\n$\tverbose = 0\n$\there = F$PARSE(\"A.;\",F$ENVIRONMENT(\"PROCEDURE\"),,,\"SYNTAX_ONLY\") - \"A.;\"\n$\n$\tcollected_args = \"\"\n$\tP_index = 0\n$\tLOOP1:\n$\t    P_index = P_index + 1\n$\t    IF P_index .GT. 8 THEN GOTO ENDLOOP1\n$\t    P = F$EDIT(P1,\"TRIM,LOWERCASE\")\n$\t    IF P .EQS. \"-h\"\n$           THEN\n$               dryrun = 1\n$               P = \"\"\n$               TYPE SYS$INPUT\n$               DECK\nUsage: @config [options]\n\n  -32 or 32\tBuild with 32-bit pointer size.\n  -64 or 64\tBuild with 64-bit pointer size.\n  -d\t\tBuild with debugging.\n  -t            Test mode, do not run the Configure perl script.\n  -v            Verbose mode, show the exact Configure call that is being made.\n  -h\t\tThis help.\n\nAny other text will be passed to the Configure perl script.\nSee INSTALL.md for instructions.\n\n$               EOD\n$           ENDIF\n$\t    IF P .EQS. \"-t\"\n$\t    THEN\n$\t\tdryrun = 1\n$\t\tverbose = 1\n$\t\tP = \"\"\n$\t    ENDIF\n$\t    IF P .EQS. \"-v\"\n$\t    THEN\n$\t\tverbose = 1\n$\t\tP = \"\"\n$\t    ENDIF\n$\t    IF P .EQS. \"-32\" .OR. P .EQS. \"32\"\n$\t    THEN\n$\t\tpointer_size = \"-P32\"\n$\t\tP = \"\"\n$\t    ENDIF\n$\t    IF P .EQS. \"-64\" .OR. P .EQS. \"64\"\n$\t    THEN\n$\t\tpointer_size = \"-P64\"\n$\t\tP = \"\"\n$\t    ENDIF\n$\t    IF P .EQS. \"-d\"\n$\t    THEN\n$               collected_args = collected_args + \" --debug\"\n$\t\tP = \"\"\n$\t    ENDIF\n$\t    IF P .NES. \"\" THEN -\n\t       collected_args = collected_args + \" \"\"\" + P1 + \"\"\"\"\n$\t    P1 = P2\n$\t    P2 = P3\n$\t    P3 = P4\n$\t    P4 = P5\n$\t    P5 = P6\n$\t    P6 = P7\n$\t    P7 = P8\n$\t    P8 = \"\"\n$\t    GOTO LOOP1\n$\tENDLOOP1:\n$\n$\ttarget = \"vms-''arch'''pointer_size'\"\n$       IF verbose THEN -\n           WRITE SYS$OUTPUT \"PERL ''here'Configure \"\"''target'\"\"\",collected_args\n$       IF .not. dryrun THEN -\n           PERL 'here'Configure \"''target'\"'collected_args'\n$       EXIT $STATUS\n"
        },
        {
          "name": "configdata.pm.in",
          "type": "blob",
          "size": 16.353515625,
          "content": "#! {- $config{HASHBANGPERL} -}\n# -*- mode: perl -*-\n{-\n # We must make sourcedir() return an absolute path, because configdata.pm\n # may be loaded as a module from any script in any directory, making\n # relative paths untrustable.  Because the result is used with 'use lib',\n # we must ensure that it returns a Unix style path.  Mixing File::Spec\n # and File::Spec::Unix does just that.\n use File::Spec::Unix;\n use File::Spec;\n use Cwd qw(abs_path);\n sub _fixup_path {\n     my $path = shift;\n\n     # Make the path absolute at all times\n     $path = abs_path($path);\n\n     if ($^O eq 'VMS') {\n         # Convert any path of the VMS form VOLUME:[DIR1.DIR2]FILE to the\n         # Unix form /VOLUME/DIR1/DIR2/FILE, which is what VMS perl supports\n         # for 'use lib'.\n\n         # Start with splitting the native path\n         (my $vol, my $dirs, my $file) = File::Spec->splitpath($path);\n         my @dirs = File::Spec->splitdir($dirs);\n\n         # Reassemble it as a Unix path\n         $vol =~ s|:$||;\n         $dirs = File::Spec::Unix->catdir('', $vol, @dirs);\n         $path = File::Spec::Unix->catpath('', $dirs, $file);\n     }\n\n     return $path;\n }\n sub sourcedir {\n     return _fixup_path(File::Spec->catdir($config{sourcedir}, @_))\n }\n sub sourcefile {\n     return _fixup_path(File::Spec->catfile($config{sourcedir}, @_))\n }\n use lib sourcedir('util', 'perl');\n use OpenSSL::Util;\n-}\npackage configdata;\n\nuse strict;\nuse warnings;\n\nuse Exporter;\nour @ISA = qw(Exporter);\nour @EXPORT = qw(\n    %config %target %disabled %withargs %unified_info\n    @disablables @disablables_int\n);\n\nour %config = ({- dump_data(\\%config, indent => 0); -});\nour %target = ({- dump_data(\\%target, indent => 0); -});\nour @disablables = ({- dump_data(\\@disablables, indent => 0) -});\nour @disablables_int = ({- dump_data(\\@disablables_int, indent => 0) -});\nour %disabled = ({- dump_data(\\%disabled, indent => 0); -});\nour %withargs = ({- dump_data(\\%withargs, indent => 0); -});\nour %unified_info = ({- dump_data(\\%unified_info, indent => 0); -});\n\n# Unexported, only used by OpenSSL::Test::Utils::available_protocols()\nour %available_protocols = (\n    tls  => [{- dump_data(\\@tls, indent => 0) -}],\n    dtls => [{- dump_data(\\@dtls, indent => 0) -}],\n);\n\n# The following data is only used when this files is use as a script\nmy @makevars = ({- dump_data(\\@makevars, indent => 0); -});\nmy %disabled_info = ({- dump_data(\\%disabled_info, indent => 0); -});\nmy @user_crossable = qw( {- join (' ', @user_crossable) -} );\n\n# If run directly, we can give some answers, and even reconfigure\nunless (caller) {\n    use Getopt::Long;\n    use File::Spec::Functions;\n    use File::Basename;\n    use File::Compare qw(compare_text);\n    use File::Copy;\n    use Pod::Usage;\n\n    use lib '{- sourcedir('util', 'perl') -}';\n    use OpenSSL::fallback '{- sourcefile('external', 'perl', 'MODULES.txt') -}';\n\n    my $here = dirname($0);\n\n    if (scalar @ARGV == 0) {\n        # With no arguments, re-create the build file\n        # We do that in two steps, where the first step emits perl\n        # snippets.\n\n        my $buildfile = $config{build_file};\n        my $buildfile_template = \"$buildfile.in\";\n        my @autowarntext = (\n            'WARNING: do not edit!',\n            \"Generated by configdata.pm from \"\n            .join(\", \", @{$config{build_file_templates}}),\n            \"via $buildfile_template\"\n        );\n        my %gendata = (\n            config => \\%config,\n            target => \\%target,\n            disabled => \\%disabled,\n            withargs => \\%withargs,\n            unified_info => \\%unified_info,\n            autowarntext => \\@autowarntext,\n            );\n\n        use lib '.';\n        use lib '{- sourcedir('Configurations') -}';\n        use gentemplate;\n\n        open my $buildfile_template_fh, \">$buildfile_template\"\n            or die \"Trying to create $buildfile_template: $!\";\n        foreach (@{$config{build_file_templates}}) {\n            copy($_, $buildfile_template_fh)\n                or die \"Trying to copy $_ into $buildfile_template: $!\";\n        }\n        gentemplate(output => $buildfile_template_fh, %gendata);\n        close $buildfile_template_fh;\n        print 'Created ',$buildfile_template,\"\\n\";\n\n        use OpenSSL::Template;\n\n        my $prepend = <<'_____';\nuse File::Spec::Functions;\nuse lib '{- sourcedir('util', 'perl') -}';\nuse lib '{- sourcedir('Configurations') -}';\nuse lib '{- $config{builddir} -}';\nuse platform;\n_____\n\n        my $tmpl;\n        open BUILDFILE, \">$buildfile.new\"\n            or die \"Trying to create $buildfile.new: $!\";\n        $tmpl = OpenSSL::Template->new(TYPE => 'FILE',\n                                       SOURCE => $buildfile_template);\n        $tmpl->fill_in(FILENAME => $_,\n                       OUTPUT => \\*BUILDFILE,\n                       HASH => \\%gendata,\n                       PREPEND => $prepend,\n                       # To ensure that global variables and functions\n                       # defined in one template stick around for the\n                       # next, making them combinable\n                       PACKAGE => 'OpenSSL::safe')\n            or die $OpenSSL::Template::ERROR;\n        close BUILDFILE;\n        rename(\"$buildfile.new\", $buildfile)\n            or die \"Trying to rename $buildfile.new to $buildfile: $!\";\n        print 'Created ',$buildfile,\"\\n\";\n\n        my $configuration_h =\n            catfile('include', 'openssl', 'configuration.h');\n        my $configuration_h_in =\n            catfile($config{sourcedir}, 'include', 'openssl', 'configuration.h.in');\n        open CONFIGURATION_H, \">${configuration_h}.new\"\n            or die \"Trying to create ${configuration_h}.new: $!\";\n        $tmpl = OpenSSL::Template->new(TYPE => 'FILE',\n                                       SOURCE => $configuration_h_in);\n        $tmpl->fill_in(FILENAME => $_,\n                       OUTPUT => \\*CONFIGURATION_H,\n                       HASH => \\%gendata,\n                       PREPEND => $prepend,\n                       # To ensure that global variables and functions\n                       # defined in one template stick around for the\n                       # next, making them combinable\n                       PACKAGE => 'OpenSSL::safe')\n            or die $OpenSSL::Template::ERROR;\n        close CONFIGURATION_H;\n\n        # When using stat() on Windows, we can get it to perform better by\n        # avoid some data.  This doesn't affect the mtime field, so we're not\n        # losing anything...\n        ${^WIN32_SLOPPY_STAT} = 1;\n\n        my $update_configuration_h = 0;\n        if (-f $configuration_h) {\n            my $configuration_h_mtime = (stat($configuration_h))[9];\n            my $configuration_h_in_mtime = (stat($configuration_h_in))[9];\n\n            # If configuration.h.in was updated after the last configuration.h,\n            # or if configuration.h.new differs configuration.h, we update\n            # configuration.h\n            if ($configuration_h_mtime < $configuration_h_in_mtime\n                || compare_text(\"${configuration_h}.new\", $configuration_h) != 0) {\n                $update_configuration_h = 1;\n            } else {\n                # If nothing has changed, let's just drop the new one and\n                # pretend like nothing happened\n                unlink \"${configuration_h}.new\"\n            }\n        } else {\n            $update_configuration_h = 1;\n        }\n\n        if ($update_configuration_h) {\n            rename(\"${configuration_h}.new\", $configuration_h)\n                or die \"Trying to rename ${configuration_h}.new to $configuration_h: $!\";\n            print 'Created ',$configuration_h,\"\\n\";\n        }\n\n        exit(0);\n    }\n\n    my $dump = undef;\n    my $cmdline = undef;\n    my $options = undef;\n    my $target = undef;\n    my $envvars = undef;\n    my $makevars = undef;\n    my $buildparams = undef;\n    my $reconf = undef;\n    my $verbose = undef;\n    my $query = undef;\n    my $help = undef;\n    my $man = undef;\n    GetOptions('dump|d'                 => \\$dump,\n               'command-line|c'         => \\$cmdline,\n               'options|o'              => \\$options,\n               'target|t'               => \\$target,\n               'environment|e'          => \\$envvars,\n               'make-variables|m'       => \\$makevars,\n               'build-parameters|b'     => \\$buildparams,\n               'reconfigure|reconf|r'   => \\$reconf,\n               'verbose|v'              => \\$verbose,\n               'query|q=s'              => \\$query,\n               'help'                   => \\$help,\n               'man'                    => \\$man)\n        or die \"Errors in command line arguments\\n\";\n\n    # We allow extra arguments with --query.  That allows constructs like\n    # this:\n    # ./configdata.pm --query 'get_sources(@ARGV)' file1 file2 file3\n    if (!$query && scalar @ARGV > 0) {\n        print STDERR <<\"_____\";\nUnrecognised arguments.\nFor more information, do '$0 --help'\n_____\n        exit(2);\n    }\n\n    if ($help) {\n        pod2usage(-exitval => 0,\n                  -verbose => 1);\n    }\n    if ($man) {\n        pod2usage(-exitval => 0,\n                  -verbose => 2);\n    }\n    if ($dump || $cmdline) {\n        print \"\\nCommand line (with current working directory = $here):\\n\\n\";\n        print '    ',join(' ',\n                          $config{PERL},\n                          catfile($config{sourcedir}, 'Configure'),\n                          @{$config{perlargv}}), \"\\n\";\n        print \"\\nPerl information:\\n\\n\";\n        print '    ',$config{perl_cmd},\"\\n\";\n        print '    ',$config{perl_version},' for ',$config{perl_archname},\"\\n\";\n    }\n    if ($dump || $options) {\n        my $longest = 0;\n        my $longest2 = 0;\n        foreach my $what (@disablables) {\n            $longest = length($what) if $longest < length($what);\n            $longest2 = length($disabled{$what})\n                if $disabled{$what} && $longest2 < length($disabled{$what});\n        }\n        print \"\\nEnabled features:\\n\\n\";\n        foreach my $what (@disablables) {\n            print \"    $what\\n\" unless $disabled{$what};\n        }\n        print \"\\nDisabled features:\\n\\n\";\n        foreach my $what (@disablables) {\n            if ($disabled{$what}) {\n                print \"    $what\", ' ' x ($longest - length($what) + 1),\n                    \"[$disabled{$what}]\", ' ' x ($longest2 - length($disabled{$what}) + 1);\n                print $disabled_info{$what}->{macro}\n                    if $disabled_info{$what}->{macro};\n                print ' (skip ',\n                    join(', ', @{$disabled_info{$what}->{skipped}}),\n                    ')'\n                    if $disabled_info{$what}->{skipped};\n                print \"\\n\";\n            }\n        }\n    }\n    if ($dump || $target) {\n        print \"\\nConfig target attributes:\\n\\n\";\n        foreach (sort keys %target) {\n            next if $_ =~ m|^_| || $_ eq 'template';\n            my $quotify = sub {\n                map {\n                    if (defined $_) {\n                        (my $x = $_) =~ s|([\\\\\\$\\@\"])|\\\\$1|g; \"\\\"$x\\\"\"\n                    } else {\n                        \"undef\";\n                    }\n                } @_;\n            };\n            print '    ', $_, ' => ';\n            if (ref($target{$_}) eq \"ARRAY\") {\n                print '[ ', join(', ', $quotify->(@{$target{$_}})), \" ],\\n\";\n            } else {\n                print $quotify->($target{$_}), \",\\n\"\n            }\n        }\n    }\n    if ($dump || $envvars) {\n        print \"\\nRecorded environment:\\n\\n\";\n        foreach (sort keys %{$config{perlenv}}) {\n            print '    ',$_,' = ',($config{perlenv}->{$_} || ''),\"\\n\";\n        }\n    }\n    if ($dump || $makevars) {\n        print \"\\nMakevars:\\n\\n\";\n        foreach my $var (@makevars) {\n            my $prefix = '';\n            $prefix = $config{CROSS_COMPILE}\n                if grep { $var eq $_ } @user_crossable;\n            $prefix //= '';\n            print '    ',$var,' ' x (16 - length $var),'= ',\n                (ref $config{$var} eq 'ARRAY'\n                 ? join(' ', @{$config{$var}})\n                 : $prefix.$config{$var}),\n                \"\\n\"\n                if defined $config{$var};\n        }\n\n        my @buildfile = ($config{builddir}, $config{build_file});\n        unshift @buildfile, $here\n            unless file_name_is_absolute($config{builddir});\n        my $buildfile = canonpath(catdir(@buildfile));\n        print <<\"_____\";\n\nNOTE: These variables only represent the configuration view.  The build file\ntemplate may have processed these variables further, please have a look at the\nbuild file for more exact data:\n    $buildfile\n_____\n    }\n    if ($dump || $buildparams) {\n        my @buildfile = ($config{builddir}, $config{build_file});\n        unshift @buildfile, $here\n            unless file_name_is_absolute($config{builddir});\n        print \"\\nbuild file:\\n\\n\";\n        print \"    \", canonpath(catfile(@buildfile)),\"\\n\";\n\n        print \"\\nbuild file templates:\\n\\n\";\n        foreach (@{$config{build_file_templates}}) {\n            my @tmpl = ($_);\n            unshift @tmpl, $here\n                unless file_name_is_absolute($config{sourcedir});\n            print '    ',canonpath(catfile(@tmpl)),\"\\n\";\n        }\n    }\n    if ($reconf) {\n        if ($verbose) {\n            print 'Reconfiguring with: ', join(' ',@{$config{perlargv}}), \"\\n\";\n            foreach (sort keys %{$config{perlenv}}) {\n                print '    ',$_,' = ',($config{perlenv}->{$_} || \"\"),\"\\n\";\n            }\n        }\n\n        chdir $here;\n        exec $^X,catfile($config{sourcedir}, 'Configure'),'reconf';\n    }\n    if ($query) {\n        use OpenSSL::Config::Query;\n\n        my $confquery = OpenSSL::Config::Query->new(info => \\%unified_info,\n                                                    config => \\%config);\n        my $result = eval \"\\$confquery->$query\";\n\n        # We may need a result class with a printing function at some point.\n        # Until then, we assume that we get a scalar, or a list or a hash table\n        # with scalar values and simply print them in some orderly fashion.\n        if (ref $result eq 'ARRAY') {\n            print \"$_\\n\" foreach @$result;\n        } elsif (ref $result eq 'HASH') {\n            print \"$_ : \\\\\\n  \", join(\" \\\\\\n  \", @{$result->{$_}}), \"\\n\"\n                foreach sort keys %$result;\n        } elsif (ref $result eq 'SCALAR') {\n            print \"$$result\\n\";\n        }\n    }\n}\n\n1;\n\n__END__\n\n=head1 NAME\n\nconfigdata.pm - configuration data for OpenSSL builds\n\n=head1 SYNOPSIS\n\nInteractive:\n\n  perl configdata.pm [options]\n\nAs data bank module:\n\n  use configdata;\n\n=head1 DESCRIPTION\n\nThis module can be used in two modes, interactively and as a module containing\nall the data recorded by OpenSSL's Configure script.\n\nWhen used interactively, simply run it as any perl script.\nIf run with no arguments, it will rebuild the build file (Makefile or\ncorresponding).\nWith at least one option, it will instead get the information you ask for, or\nre-run the configuration process.\nSee L</OPTIONS> below for more information.\n\nWhen loaded as a module, you get a few databanks with useful information to\nperform build related tasks.  The databanks are:\n\n    %config             Configured things.\n    %target             The OpenSSL config target with all inheritances\n                        resolved.\n    %disabled           The features that are disabled.\n    @disablables        The list of features that can be disabled.\n    %withargs           All data given through --with-THING options.\n    %unified_info       All information that was computed from the build.info\n                        files.\n\n=head1 OPTIONS\n\n=over 4\n\n=item B<--help>\n\nPrint a brief help message and exit.\n\n=item B<--man>\n\nPrint the manual page and exit.\n\n=item B<--dump> | B<-d>\n\nPrint all relevant configuration data.  This is equivalent to B<--command-line>\nB<--options> B<--target> B<--environment> B<--make-variables>\nB<--build-parameters>.\n\n=item B<--command-line> | B<-c>\n\nPrint the current configuration command line.\n\n=item B<--options> | B<-o>\n\nPrint the features, both enabled and disabled, and display defined macro and\nskipped directories where applicable.\n\n=item B<--target> | B<-t>\n\nPrint the config attributes for this config target.\n\n=item B<--environment> | B<-e>\n\nPrint the environment variables and their values at the time of configuration.\n\n=item B<--make-variables> | B<-m>\n\nPrint the main make variables generated in the current configuration\n\n=item B<--build-parameters> | B<-b>\n\nPrint the build parameters, i.e. build file and build file templates.\n\n=item B<--reconfigure> | B<--reconf> | B<-r>\n\nRe-run the configuration process.\n\n=item B<--verbose> | B<-v>\n\nVerbose output.\n\n=back\n\n=cut\n\nEOF\n"
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "engines",
          "type": "tree",
          "content": null
        },
        {
          "name": "exporters",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "funding.json",
          "type": "blob",
          "size": 6.142578125,
          "content": "{\n    \"version\": \"v1.0.0\",\n    \"entity\": {\n        \"type\": \"organisation\",\n        \"role\": \"owner\",\n        \"name\": \"OpenSSL Software Foundation\",\n        \"email\": \"foundation@openssl.org\",\n        \"description\": \"The OpenSSL Software Foundation was established in 2014 and is one of two entities that supports the OpenSSL Library. The Foundation relies on donations to fund its software engineers, community manager, and other management staff, and its primary focus is non-commercial communities that use OpenSSL software. It is closely aligned with the OpenSSL Corporation, which focuses on commercial communities. Both organizations share the same mission: We believe everyone should have access to security and privacy tools, whoever they are, wherever they are or whatever their personal beliefs are, as a fundamental human right.\",\n        \"webpageUrl\": {\n            \"url\": \"https://openssl-foundation.org/\",\n            \"wellKnown\": \"https://openssl-foundation.org/.well-known/funding-manifest-urls\"\n        }\n    },\n    \"projects\": [{\n        \"guid\": \"openssllibrary\",\n        \"name\": \"OpenSSL Library\",\n        \"description\": \"The OpenSSL software library is a robust, commercial-grade, full-featured toolkit for general-purpose cryptography and secure communication. It is a fundamental open source component in the global digital infrastructure, widely used by both open source projects and commercial software. OpenSSL provides implementations of several highly important security protocols and standards, including TLS (formerly known as SSL), DTLS, CMS, and QUIC. OpenSSL implements a wide variety of different cryptographic algorithms (including encryption, hashes, key exchange/encapsulation, signatures, key derivation, message authentication codes, etc.) as well as other supporting functionality (such as digital certificates, key generation and key storage). OpenSSL is a mature, battle hardened product that has undergone multiple code audits and stood the test of time since its inception in the 1990s. It contains within it our FIPS provider, a cryptographic module that has undergone the rigorous and extensive FIPS 140-2 validation process. Our seasoned security team is well equipped to professionally and responsibly deal with emerging threats to keep our users safe. The features and capabilities described above represent critically important building blocks that other applications can use to ensure the confidentiality, integrity and authenticity of data they store, transmit and receive. Countless technologies are built with OpenSSL on the back end. It is invisible to end users but nonetheless vital to global digital infrastructure.\",\n        \"webpageUrl\": {\n            \"url\": \"https://openssl-library.org/\",\n            \"wellKnown\": \"https://openssl-library.org/.well-known/funding-manifest-urls\"\n        },\n        \"repositoryUrl\": {\n            \"url\": \"https://github.com/openssl/openssl\"\n        },\n        \"licenses\": [\"spdx:Apache-2.0\"],\n        \"tags\": [\"cryptography\", \"privacy\", \"security\", \"api\", \"networking\"]\n    }],\n    \"funding\": {\n        \"channels\": [\n            {\n                \"guid\": \"mybank\",\n                \"type\": \"bank\",\n                \"description\": \"Will accept direct bank transfers. Please email for details.\"\n            },\n            {\n                \"guid\": \"github\",\n                \"type\": \"payment-provider\",\n                \"address\": \"https://github.com/sponsors/openssl\",\n                \"description\": \"Payments up to $12,000 USD per month can be made via Github Sponsors.\"\n            }\n        ],\n        \"plans\": [\n            {\n                \"guid\": \"premiersponsorship\",\n                \"status\": \"active\",\n                \"name\": \"Premier Sponsorship\",\n                \"description\": \"Organizations that contribute $100,000 USD or more are recognized as Premier Sponsors for one year.\",\n                \"amount\": 100000,\n                \"currency\": \"USD\",\n                \"frequency\": \"yearly\",\n                \"channels\": [\"mybank\", \"github\"]\n            },\n            {\n                \"guid\": \"platinumsponsorship\",\n                \"status\": \"active\",\n                \"name\": \"Platinum Sponsorship\",\n                \"description\": \"Organizations that contribute $50,000 USD are recognized as Platinum Sponsors for one year.\",\n                \"amount\": 50000,\n                \"currency\": \"USD\",\n                \"frequency\": \"yearly\",\n                \"channels\": [\"mybank\", \"github\"]\n            },\n            {\n                \"guid\": \"goldsponsorship\",\n                \"status\": \"active\",\n                \"name\": \"Gold Sponsorship\",\n                \"description\": \"Organizations that contribute $25,000 USD or more are recognized as Gold Sponsors for one year.\",\n                \"amount\": 25000,\n                \"currency\": \"USD\",\n                \"frequency\": \"yearly\",\n                \"channels\": [\"mybank\", \"github\"]\n            },\n            {\n                \"guid\": \"silversponsorship\",\n                \"status\": \"active\",\n                \"name\": \"Silver Sponsorship\",\n                \"description\": \"Organizations that contribute $10,000 USD or more are recognized as Silver Sponsors for one year.\",\n                \"amount\": 10000,\n                \"currency\": \"USD\",\n                \"frequency\": \"yearly\",\n                \"channels\": [\"mybank\", \"github\"]\n            },\n            {\n                \"guid\": \"bronzesponsorship\",\n                \"status\": \"active\",\n                \"name\": \"Bronze Sponsorship\",\n                \"description\": \"Organizations that contribute $5,000 USD or more are recognized as Bronze Sponsors for one year.\",\n                \"amount\": 5000,\n                \"currency\": \"USD\",\n                \"frequency\": \"yearly\",\n                \"channels\": [\"mybank\", \"github\"]\n            },\n            {\n                \"guid\": \"coppersponsorship\",\n                \"status\": \"active\",\n                \"name\": \"Copper Sponsorship\",\n                \"description\": \"Organizations that contribute a gift of any amount under $5,000 USD are recognized as Copper Sponsors for one year.\",\n                \"amount\": 0,\n                \"currency\": \"USD\",\n                \"frequency\": \"yearly\",\n                \"channels\": [\"mybank\", \"github\"]\n            }\n        ]\n    }\n}\n"
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "gost-engine",
          "type": "commit",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "krb5",
          "type": "commit",
          "content": null
        },
        {
          "name": "ms",
          "type": "tree",
          "content": null
        },
        {
          "name": "oqs-provider",
          "type": "commit",
          "content": null
        },
        {
          "name": "os-dep",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkcs11-provider",
          "type": "commit",
          "content": null
        },
        {
          "name": "providers",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyca-cryptography",
          "type": "commit",
          "content": null
        },
        {
          "name": "python-ecdsa",
          "type": "commit",
          "content": null
        },
        {
          "name": "ssl",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tlsfuzzer",
          "type": "commit",
          "content": null
        },
        {
          "name": "tlslite-ng",
          "type": "commit",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "wycheproof",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}