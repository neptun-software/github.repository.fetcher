{
  "metadata": {
    "timestamp": 1736710482884,
    "page": 1,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjU=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "netdata/netdata",
      "stars": 72905,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.7158203125,
          "content": "# SPDX-License-Identifier: GPL-2.0\n#\n# clang-format configuration file. Intended for clang-format >= 4.\n#\n# For more information, see:\n#\n#   Documentation/process/clang-format.rst\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: AlwaysBreak\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\n#AlignEscapedNewlines: Left # Unknown to clang-format-4.0\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  #AfterExternBlock: false # Unknown to clang-format-5.0\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\n  #SplitEmptyFunction: true # Unknown to clang-format-4.0\n  #SplitEmptyRecord: true # Unknown to clang-format-4.0\n  #SplitEmptyNamespace: true # Unknown to clang-format-4.0\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\n#BreakBeforeInheritanceComma: false # Unknown to clang-format-4.0\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\n#BreakConstructorInitializers: BeforeComma # Unknown to clang-format-4.0\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit: 120\nCommentPragmas: '^ IWYU pragma:'\n#CompactNamespaces: false # Unknown to clang-format-4.0\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\n#FixNamespaceComments: false # Unknown to clang-format-4.0\n\n#IncludeBlocks: Preserve # Unknown to clang-format-5.0\nIncludeCategories:\n  - Regex: '.*'\n    Priority: 1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: true\n#IndentPPDirectives: None # Unknown to clang-format-5.0\nIndentWidth: 4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: Inner\n#ObjCBinPackProtocolList: Auto # Unknown to clang-format-5.0\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\n\n# Taken from git's rules\n#PenaltyBreakAssignment: 10 # Unknown to clang-format-4.0\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\n#SortUsingDeclarations: false # Unknown to clang-format-4.0\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\n#SpaceBeforeCtorInitializerColon: true # Unknown to clang-format-5.0\n#SpaceBeforeInheritanceColon: true # Unknown to clang-format-5.0\nSpaceBeforeParens: ControlStatements\n#SpaceBeforeRangeBasedForLoopColon: true # Unknown to clang-format-5.0\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\nTabWidth: 4\nUseTab: Never\n...\n"
        },
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.6083984375,
          "content": "---\nexclude_paths:\n  - src/collectors/python.d.plugin/python_modules/pyyaml3/**\n  - src/collectors/python.d.plugin/python_modules/urllib3/**\n  - src/collectors/python.d.plugin/python_modules/third_party/**\n  - packaging/makeself/**\n  - src/web/gui/css/**\n  - src/web/gui/lib/**\n  - src/web/gui/old/**\n  - src/web/gui/src/**\n  - src/web/gui/v1/**\n  - src/web/gui/v2/**\n  - src/web/gui/main.js\n  - tests/**\n  - aclk/tests/**\n  - src/libnetdata/libjudy/**\n  - src/database/sqlite/sqlite3.c\n  - src/ml/dlib/**\n  - src/web/server/h2o/libh2o/**\n  - build/**\n  - build_external/**\n  - packaging/**\n  - src/aclk/mqtt_websockets/**\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".gitignore"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0283203125,
          "content": "[flake8]\nmax-line-length=120\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.6083984375,
          "content": "# Secrets\ngcs-credentials.json\n\n.deps\n.libs\n.dirstamp\n.project\n.pydevproject\n\n# local dev outputs\ndist/\n\n*.o\n*.a\nconfig.h.in\nMakefile.in\n*~\n.*.swp\n*.old\n*.log\n!src/collectors/log2journal/tests.d/*.log\n!src/go/**/*.log\n*.pyc\n\nnetdata.spec\nsha256sums.txt\n\nupload/\nartifacts/\n\nebpf.plugin\nsrc/collectors/ebpf.plugin/reset_netdata_trace.sh\n!ebpf.plugin/\nsrc/libnetdata/ebpf/includes/\n\n# protoc generated files\n*.pb.cc\n*.pb.h\n\n# installation artifacts\npackaging/installer/.environment.sh\n*.tar.*\n*.run\n\n# netdata makeself downloads\npackaging/makeself/tmp/\n\n# coverity\ncov-int/\nnetdata-coverity-analysis.tgz\n.coverity-scan.conf\n\n.cproject/\n.idea/\n.vscode/*\n!.vscode/settings.default.json\n.project/\n.settings/\nREADME\nTODO.md\nTODO.txt\n\nsrc/web/gui/chart-info/\nsrc/web/gui/control.html\nsrc/web/gui/dashboard.js\nsrc/web/gui/datasource.css\nsrc/web/gui/gadget.xml\nsrc/web/gui/index_new.html\nsrc/web/gui/version.txt\n\n# related to karma/javascript/node\n/node_modules/\n/coverage/\n\nsystem/install-service.sh\nsystem/netdata.logrotate\nsystem/cron/netdata-updater-daily\nsystem/freebsd/rc.d/netdata\nsystem/initd/init.d/netdata\nsystem/launchd/netdata.plist\nsystem/lsb/init.d/netdata\nsystem/openrc/init.d/netdata\nsystem/runit/run\nsystem/systemd/netdata.service\nsystem/systemd/netdata.service.*\nsystem/systemd/netdata-updater.service\n!system/systemd/netdata.service.in\n!system/systemd/netdata.service.*.in\n\nsrc/health/notifications/alarm-notify.sh\nsrc/collectors/cgroups.plugin/cgroup-name.sh\nsrc/collectors/cgroups.plugin/cgroup-network-helper.sh\nsrc/collectors/tc.plugin/tc-qos-helper.sh\nsrc/collectors/charts.d.plugin/charts.d.plugin\nsrc/collectors/python.d.plugin/python.d.plugin\nsrc/collectors/ioping.plugin/ioping.plugin\nsrc/collectors/go.d.plugin\nsrc/web/netdata-switch-dashboard.sh\n\n# installer generated files\n/netdata-uninstaller.sh\n/netdata-updater.sh\n\n# cmake files\ncmake-build-debug/\ncmake-build-release/\nCMakeCache.txt\nCMakeFiles/\ncmake_install.cmake\n.cmake\ncompile_commands.json\n\n# jetbrains IDE\n.jetbrains*\n\n.DS_Store\nwebcopylocal*\n\n# converted diagrams\ndocs/diagrams/*.png\ndocs/diagrams/*.svg\ndocs/diagrams/*.atxt\ndocs/diagrams/plantuml.jar\n\n# python virtual environment\nvenv/\n.python-version\n\n# debugging / profiling\nmakeself/debug/\ntests/profile/benchmark-dictionary\ntests/profile/benchmark-registry\ntests/profile/test-eval\ntests/profile/benchmark-line-parsing\ntests/profile/benchmark-procfile-parser\ntests/profile/benchmark-value-pairs\ntests/profile/statsd-stress\ntests/health_mgmtapi/health-cmdapi-test.sh\noprofile_data/\nvgcore.*\ncallgrind.out.*\ngmon.out\ngmon.txt\nsitespeed-result/\ntests/acls/acl.sh\ntests/urls/request.sh\ntests/alarm_repetition/alarm.sh\ntests/template_dimension/template_dim.sh\ntests/ebpf/ebpf_thread_function.sh\naclk/legacy/tests/install-fake-charts.d.sh\n\n# tests and temp files\ntest-driver\n**/tests/*_testdriver\n**/tests/*_testdriver.trs\npython.d/python-modules-installer.sh\n\n# documentation generated files\ndocs/generator/src\ndocs/generator/build\ndocs/generator/doc\ndocs/generator/localization\ndocs/generator/mkdocs.yml\n\n.environment.sh\n\n#CLion files\nnetdata.cbp\n\n# External dependencies\nexternaldeps/\n\n# vim sessions\nSession.vim\nSession.*.vim\n\n# clangd cache\n.cache/\n\n# Special exceptions\n!packaging/repoconfig/Makefile\npackaging/windows/resources/*.manifest\n\n# Jupyter notebook checkpoints\n.ipynb_checkpoints\n\n# gorilla benchmark & fuzz binaries\nsrc/libnetdata/gorilla/gorilla_benchmark\nsrc/libnetdata/gorilla/gorilla_fuzzer\nsrc/libnetdata/gorilla/fuzz-*.log\n\n# ignore build/ directory (default dir for many IDEs/LSPs)\nbuild/\n\n# ignore rules for go plugin code\nsrc/go/plugin/go.d/bin/\nsrc/go/plugin/go.d/vendor\n\n# ignore files used with msi installer\npackaging/windows/*.msi\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.5322265625,
          "content": "[submodule \"aclk/aclk-schemas\"]\n\tpath = src/aclk/aclk-schemas\n\turl = https://github.com/netdata/aclk-schemas.git\n[submodule \"ml/kmeans/dlib\"]\n\tpath = src/ml/dlib\n\turl = https://github.com/davisking/dlib.git\n\tshallow = true\n\tignore = dirty\n[submodule \"src/web/server/h2o/libh2o\"]\n\tpath = src/web/server/h2o/libh2o\n\turl = https://github.com/h2o/h2o.git\n\tignore = untracked\n[submodule \"src/collectors/debugfs.plugin/libsensors/vendored\"]\n\tpath = src/collectors/debugfs.plugin/libsensors/vendored\n\turl = https://github.com/lm-sensors/lm-sensors.git\n"
        },
        {
          "name": ".shellcheckrc",
          "type": "blob",
          "size": 0.0517578125,
          "content": "#!/bin/sh\n# shellcheck disable=SC2034\ndisable=SC2317\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yamllint.yml",
          "type": "blob",
          "size": 0.734375,
          "content": "---\nyaml-files:\n  - '*.yaml'\n  - '*.yml'\n  - '.yamllint'\n  - 'src/collectors/python.d.plugin/*.conf'\n  - 'src/collectors/python.d.plugin/*/*.conf'\n\nignore: |\n  mqtt_websockets/\n  packaging/makeself/tmp/\n\nrules:\n  braces: enable\n  brackets: enable\n  colons: enable\n  commas: enable\n  comments: disable\n  comments-indentation: disable\n  document-end: disable\n  document-start: disable\n  empty-lines: enable\n  empty-values: enable\n  hyphens: enable\n  indentation: enable\n  line-length: disable\n  key-duplicates: enable\n  key-ordering: disable\n  new-line-at-end-of-file: enable\n  new-lines: enable\n  octal-values: enable\n  quoted-strings: disable\n  trailing-spaces: enable\n  truthy:\n    check-keys: false\n    allowed-values: [\"true\", \"false\", \"yes\", \"no\"]\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 76.7080078125,
          "content": "# Changelog\n\n## [**Next release**](https://github.com/netdata/netdata/tree/HEAD)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v2.1.1...HEAD)\n\n**Merged pull requests:**\n\n- Pulse extended memory statistics, now report glibc allocations [\\#19379](https://github.com/netdata/netdata/pull/19379) ([ktsaou](https://github.com/ktsaou))\n- build\\(deps\\): bump github.com/axiomhq/hyperloglog from 0.2.2 to 0.2.3 in /src/go [\\#19378](https://github.com/netdata/netdata/pull/19378) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump go.mongodb.org/mongo-driver from 1.17.1 to 1.17.2 in /src/go [\\#19377](https://github.com/netdata/netdata/pull/19377) ([dependabot[bot]](https://github.com/apps/dependabot))\n- disable libunwind on forked children [\\#19374](https://github.com/netdata/netdata/pull/19374) ([ktsaou](https://github.com/ktsaou))\n- Fix alert entry traversal when doing cleanup [\\#19373](https://github.com/netdata/netdata/pull/19373) ([stelfrag](https://github.com/stelfrag))\n- fix for PGC wanted\\_cache\\_size getting to zero [\\#19370](https://github.com/netdata/netdata/pull/19370) ([ktsaou](https://github.com/ktsaou))\n- metrics cardinality - more statistics and groupings [\\#19368](https://github.com/netdata/netdata/pull/19368) ([ktsaou](https://github.com/ktsaou))\n- stream-thread fix memory corruption [\\#19367](https://github.com/netdata/netdata/pull/19367) ([ktsaou](https://github.com/ktsaou))\n- metrics cardinality improvements [\\#19366](https://github.com/netdata/netdata/pull/19366) ([ktsaou](https://github.com/ktsaou))\n- prevent memory corruption in dbengine [\\#19365](https://github.com/netdata/netdata/pull/19365) ([ktsaou](https://github.com/ktsaou))\n- Revert \"prevent memory corruption in dbengine\" [\\#19364](https://github.com/netdata/netdata/pull/19364) ([ktsaou](https://github.com/ktsaou))\n- prevent memory corruption in dbengine [\\#19363](https://github.com/netdata/netdata/pull/19363) ([ktsaou](https://github.com/ktsaou))\n- metrics-cardinality function [\\#19362](https://github.com/netdata/netdata/pull/19362) ([ktsaou](https://github.com/ktsaou))\n- avoid checking replication status all the time [\\#19361](https://github.com/netdata/netdata/pull/19361) ([ktsaou](https://github.com/ktsaou))\n- respect flood protection configuration for daemon [\\#19360](https://github.com/netdata/netdata/pull/19360) ([ktsaou](https://github.com/ktsaou))\n- fix os\\_system\\_memory\\(\\) for concurrent use and call it from pulse [\\#19359](https://github.com/netdata/netdata/pull/19359) ([ktsaou](https://github.com/ktsaou))\n- fix flood protection [\\#19358](https://github.com/netdata/netdata/pull/19358) ([ktsaou](https://github.com/ktsaou))\n- allow compiling with FSANITIZE\\_ADDRESS [\\#19357](https://github.com/netdata/netdata/pull/19357) ([ktsaou](https://github.com/ktsaou))\n- Stream Compression Fix [\\#19355](https://github.com/netdata/netdata/pull/19355) ([ktsaou](https://github.com/ktsaou))\n- fix compilation on windows [\\#19354](https://github.com/netdata/netdata/pull/19354) ([ktsaou](https://github.com/ktsaou))\n- Minor fixes [\\#19353](https://github.com/netdata/netdata/pull/19353) ([ktsaou](https://github.com/ktsaou))\n- Stream receiver/sender compress BEGIN-SET-END performance [\\#19352](https://github.com/netdata/netdata/pull/19352) ([ktsaou](https://github.com/ktsaou))\n- RRDCONTEXTS: loading report [\\#19351](https://github.com/netdata/netdata/pull/19351) ([ktsaou](https://github.com/ktsaou))\n- lower compression level to lower cpu resources on parents [\\#19350](https://github.com/netdata/netdata/pull/19350) ([ktsaou](https://github.com/ktsaou))\n- PGC wanted size [\\#19349](https://github.com/netdata/netdata/pull/19349) ([ktsaou](https://github.com/ktsaou))\n- log a summary of metadata ignored contexts [\\#19348](https://github.com/netdata/netdata/pull/19348) ([ktsaou](https://github.com/ktsaou))\n- use sqlite3\\_status64\\(\\) [\\#19347](https://github.com/netdata/netdata/pull/19347) ([ktsaou](https://github.com/ktsaou))\n- Assorted systemd detection fixes [\\#19345](https://github.com/netdata/netdata/pull/19345) ([Ferroin](https://github.com/Ferroin))\n- Regenerate integrations docs [\\#19344](https://github.com/netdata/netdata/pull/19344) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/k8sstate\\): respect ignore annotation [\\#19342](https://github.com/netdata/netdata/pull/19342) ([ilyam8](https://github.com/ilyam8))\n- improvement\\(go.d/docker\\): respect ignore label [\\#19341](https://github.com/netdata/netdata/pull/19341) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19340](https://github.com/netdata/netdata/pull/19340) ([netdatabot](https://github.com/netdatabot))\n- docs\\(go.d/docker\\): fix syntax error in meta [\\#19339](https://github.com/netdata/netdata/pull/19339) ([ilyam8](https://github.com/ilyam8))\n- improvement\\(go.d/docker\\): add option to filter containers [\\#19337](https://github.com/netdata/netdata/pull/19337) ([ilyam8](https://github.com/ilyam8))\n- Contexts Loading [\\#19336](https://github.com/netdata/netdata/pull/19336) ([ktsaou](https://github.com/ktsaou))\n- Add alert version to aclk-state [\\#19335](https://github.com/netdata/netdata/pull/19335) ([stelfrag](https://github.com/stelfrag))\n- annotate logs with stack trace when libunwind is available [\\#19334](https://github.com/netdata/netdata/pull/19334) ([ktsaou](https://github.com/ktsaou))\n- convert invalid utf8 sequences to hex characters [\\#19333](https://github.com/netdata/netdata/pull/19333) ([ktsaou](https://github.com/ktsaou))\n- Abort on fatal and report system available bytes on allocation failures. [\\#19332](https://github.com/netdata/netdata/pull/19332) ([vkalintiris](https://github.com/vkalintiris))\n- Add instructions for Docker Compose [\\#19331](https://github.com/netdata/netdata/pull/19331) ([enoch85](https://github.com/enoch85))\n- build\\(deps\\): bump golang.org/x/net from 0.33.0 to 0.34.0 in /src/go [\\#19330](https://github.com/netdata/netdata/pull/19330) ([dependabot[bot]](https://github.com/apps/dependabot))\n- FD Leaks Fix [\\#19327](https://github.com/netdata/netdata/pull/19327) ([ktsaou](https://github.com/ktsaou))\n- fix\\(kickstart.sh\\): correct wrong function name in perpare\\_offline\\_install [\\#19323](https://github.com/netdata/netdata/pull/19323) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.46.3 to 0.47.0 in /src/go [\\#19322](https://github.com/netdata/netdata/pull/19322) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Improve context load time during startup [\\#19321](https://github.com/netdata/netdata/pull/19321) ([stelfrag](https://github.com/stelfrag))\n- fix\\(cgroup-rename\\): prevent leading comma in Docker LABELS when IMAGE empty [\\#19318](https://github.com/netdata/netdata/pull/19318) ([ilyam8](https://github.com/ilyam8))\n- Fix coverity issues [\\#19317](https://github.com/netdata/netdata/pull/19317) ([stelfrag](https://github.com/stelfrag))\n- CGROUP labels [\\#19316](https://github.com/netdata/netdata/pull/19316) ([ktsaou](https://github.com/ktsaou))\n- feat\\(cgroup-name.sh\\): Add support for `netdata.cloud/*` container labels [\\#19315](https://github.com/netdata/netdata/pull/19315) ([ilyam8](https://github.com/ilyam8))\n- Locks Improvements [\\#19314](https://github.com/netdata/netdata/pull/19314) ([ktsaou](https://github.com/ktsaou))\n- add yugabytedb docker manager [\\#19313](https://github.com/netdata/netdata/pull/19313) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d/sd\\): correctly adding tags in classify [\\#19312](https://github.com/netdata/netdata/pull/19312) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d/nats\\): add missing cid label to gw charts [\\#19311](https://github.com/netdata/netdata/pull/19311) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19310](https://github.com/netdata/netdata/pull/19310) ([netdatabot](https://github.com/netdatabot))\n- docs\\(go.d/nats\\): add missing labels to meta [\\#19309](https://github.com/netdata/netdata/pull/19309) ([ilyam8](https://github.com/ilyam8))\n- fix aral memory accounting [\\#19308](https://github.com/netdata/netdata/pull/19308) ([ktsaou](https://github.com/ktsaou))\n- Fix shutdown [\\#19306](https://github.com/netdata/netdata/pull/19306) ([ktsaou](https://github.com/ktsaou))\n- WAITQ: fixed mixed up ordering [\\#19305](https://github.com/netdata/netdata/pull/19305) ([ktsaou](https://github.com/ktsaou))\n- load rrdcontext dimensions in batches [\\#19304](https://github.com/netdata/netdata/pull/19304) ([ktsaou](https://github.com/ktsaou))\n- improvement\\(go.d/nats\\): add cluster\\_name label and jetstream status chart [\\#19303](https://github.com/netdata/netdata/pull/19303) ([ilyam8](https://github.com/ilyam8))\n- Waiting Queue [\\#19302](https://github.com/netdata/netdata/pull/19302) ([ktsaou](https://github.com/ktsaou))\n- revert waiting-queue optimization [\\#19301](https://github.com/netdata/netdata/pull/19301) ([ktsaou](https://github.com/ktsaou))\n- Improve stream sending thread error message [\\#19300](https://github.com/netdata/netdata/pull/19300) ([ilyam8](https://github.com/ilyam8))\n- Streaming improvements No 12 [\\#19299](https://github.com/netdata/netdata/pull/19299) ([ktsaou](https://github.com/ktsaou))\n- nd\\_poll\\(\\) fairness [\\#19298](https://github.com/netdata/netdata/pull/19298) ([ktsaou](https://github.com/ktsaou))\n- more descriptive alert transition logs [\\#19297](https://github.com/netdata/netdata/pull/19297) ([ktsaou](https://github.com/ktsaou))\n- fix\\(debugfs/sensors\\): correct driver label value [\\#19294](https://github.com/netdata/netdata/pull/19294) ([ilyam8](https://github.com/ilyam8))\n- fix\\(netdata-updater.sh\\): use explicit paths for temp dir creation [\\#19293](https://github.com/netdata/netdata/pull/19293) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): add bison and flex [\\#19292](https://github.com/netdata/netdata/pull/19292) ([ilyam8](https://github.com/ilyam8))\n- remove go.d/windows [\\#19290](https://github.com/netdata/netdata/pull/19290) ([ilyam8](https://github.com/ilyam8))\n- fix\\(netdata-updater.sh\\): ensure tmpdir-path argument is always passed [\\#19289](https://github.com/netdata/netdata/pull/19289) ([ilyam8](https://github.com/ilyam8))\n- fix\\(netdata-updater.sh\\): remove commit\\_check\\_file directory [\\#19288](https://github.com/netdata/netdata/pull/19288) ([ilyam8](https://github.com/ilyam8))\n- bump dag req jinja version [\\#19287](https://github.com/netdata/netdata/pull/19287) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19286](https://github.com/netdata/netdata/pull/19286) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/nats\\): add basic jetstream metrics [\\#19285](https://github.com/netdata/netdata/pull/19285) ([ilyam8](https://github.com/ilyam8))\n- fix go.d/nats tests [\\#19284](https://github.com/netdata/netdata/pull/19284) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19283](https://github.com/netdata/netdata/pull/19283) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/nats\\): add leafz metrics [\\#19282](https://github.com/netdata/netdata/pull/19282) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19281](https://github.com/netdata/netdata/pull/19281) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/nats\\): add server\\_id label [\\#19280](https://github.com/netdata/netdata/pull/19280) ([ilyam8](https://github.com/ilyam8))\n- docs: improve on-prem troubleshooting readability [\\#19279](https://github.com/netdata/netdata/pull/19279) ([ilyam8](https://github.com/ilyam8))\n- Fix metric retention check and cleanup [\\#19278](https://github.com/netdata/netdata/pull/19278) ([stelfrag](https://github.com/stelfrag))\n- fix\\(go.d/rabbitmq\\): handle insufficient perms when querying definitions [\\#19277](https://github.com/netdata/netdata/pull/19277) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19276](https://github.com/netdata/netdata/pull/19276) ([netdatabot](https://github.com/netdatabot))\n- Updates to onprem docs [\\#19275](https://github.com/netdata/netdata/pull/19275) ([M4itee](https://github.com/M4itee))\n- Skip label cleanup during metadata processing [\\#19274](https://github.com/netdata/netdata/pull/19274) ([stelfrag](https://github.com/stelfrag))\n- build\\(deps\\): update go toolchain to v1.23.4 [\\#19273](https://github.com/netdata/netdata/pull/19273) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/jackc/pgx/v5 from 5.7.1 to 5.7.2 in /src/go [\\#19271](https://github.com/netdata/netdata/pull/19271) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/axiomhq/hyperloglog from 0.2.0 to 0.2.2 in /src/go [\\#19270](https://github.com/netdata/netdata/pull/19270) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump golang.org/x/net from 0.32.0 to 0.33.0 in /src/go [\\#19269](https://github.com/netdata/netdata/pull/19269) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/docker/docker from 27.4.0+incompatible to 27.4.1+incompatible in /src/go [\\#19268](https://github.com/netdata/netdata/pull/19268) ([dependabot[bot]](https://github.com/apps/dependabot))\n- improvement\\(go.d/nats\\): add gatewayz metrics [\\#19266](https://github.com/netdata/netdata/pull/19266) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19265](https://github.com/netdata/netdata/pull/19265) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/nats\\): add routez metrics [\\#19264](https://github.com/netdata/netdata/pull/19264) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19263](https://github.com/netdata/netdata/pull/19263) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/nats\\): add accstatz metrics [\\#19262](https://github.com/netdata/netdata/pull/19262) ([ilyam8](https://github.com/ilyam8))\n- HELP and TYPE in prometheus fix [\\#19261](https://github.com/netdata/netdata/pull/19261) ([ktsaou](https://github.com/ktsaou))\n- Add an alert guide for reboot required [\\#19260](https://github.com/netdata/netdata/pull/19260) ([ralphm](https://github.com/ralphm))\n- fix crash when the DRM file does not contain the right information [\\#19258](https://github.com/netdata/netdata/pull/19258) ([ktsaou](https://github.com/ktsaou))\n- docs: change \"node-membership-rules\" filename/title [\\#19257](https://github.com/netdata/netdata/pull/19257) ([ilyam8](https://github.com/ilyam8))\n- Updated copyright notices [\\#19256](https://github.com/netdata/netdata/pull/19256) ([ktsaou](https://github.com/ktsaou))\n- Regenerate integrations docs [\\#19254](https://github.com/netdata/netdata/pull/19254) ([netdatabot](https://github.com/netdatabot))\n- docs: fix nats metadata suffix [\\#19253](https://github.com/netdata/netdata/pull/19253) ([ilyam8](https://github.com/ilyam8))\n- feat\\(go.d\\): add  NATS collector [\\#19252](https://github.com/netdata/netdata/pull/19252) ([ilyam8](https://github.com/ilyam8))\n- Monitor sensors using libsensors via debugfs.plugin [\\#19251](https://github.com/netdata/netdata/pull/19251) ([ktsaou](https://github.com/ktsaou))\n- Add option to updater to report status of auto-updates on the system. [\\#19248](https://github.com/netdata/netdata/pull/19248) ([Ferroin](https://github.com/Ferroin))\n- DBENGINE: pgc tuning, replication tuning [\\#19237](https://github.com/netdata/netdata/pull/19237) ([ktsaou](https://github.com/ktsaou))\n\n## [v2.1.1](https://github.com/netdata/netdata/tree/v2.1.1) (2025-01-07)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v2.1.0...v2.1.1)\n\n## [v2.1.0](https://github.com/netdata/netdata/tree/v2.1.0) (2024-12-19)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v2.0.3...v2.1.0)\n\n**Merged pull requests:**\n\n- use inactive memory when calculating cgroups total memory [\\#19249](https://github.com/netdata/netdata/pull/19249) ([ktsaou](https://github.com/ktsaou))\n- chore\\(aclk/mqtt\\): remove client\\_id len check [\\#19247](https://github.com/netdata/netdata/pull/19247) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d\\): simplify cli is help [\\#19246](https://github.com/netdata/netdata/pull/19246) ([ilyam8](https://github.com/ilyam8))\n- Health transition saving optimization [\\#19245](https://github.com/netdata/netdata/pull/19245) ([stelfrag](https://github.com/stelfrag))\n- Avoid blocking waiting for an event during shutdown [\\#19244](https://github.com/netdata/netdata/pull/19244) ([stelfrag](https://github.com/stelfrag))\n- Do not call finalize on shutdown [\\#19241](https://github.com/netdata/netdata/pull/19241) ([stelfrag](https://github.com/stelfrag))\n- fix the renamed function under windows [\\#19240](https://github.com/netdata/netdata/pull/19240) ([ktsaou](https://github.com/ktsaou))\n- update netdata internal metrics ctx [\\#19239](https://github.com/netdata/netdata/pull/19239) ([ilyam8](https://github.com/ilyam8))\n- feat\\(go.d.plugin\\): enable dyncfg vnodes [\\#19238](https://github.com/netdata/netdata/pull/19238) ([ilyam8](https://github.com/ilyam8))\n- docs: fix win deploy command for nightly [\\#19236](https://github.com/netdata/netdata/pull/19236) ([ilyam8](https://github.com/ilyam8))\n- RRDHOST system-info isolation [\\#19235](https://github.com/netdata/netdata/pull/19235) ([ktsaou](https://github.com/ktsaou))\n- Allow more threads to load contexts during startup [\\#19234](https://github.com/netdata/netdata/pull/19234) ([stelfrag](https://github.com/stelfrag))\n- Fix memory leak  [\\#19233](https://github.com/netdata/netdata/pull/19233) ([stelfrag](https://github.com/stelfrag))\n- fix\\(go.d/mongodb\\): add missing disconnect in initClient [\\#19232](https://github.com/netdata/netdata/pull/19232) ([ilyam8](https://github.com/ilyam8))\n- docs: update ui 3rd party link [\\#19231](https://github.com/netdata/netdata/pull/19231) ([ilyam8](https://github.com/ilyam8))\n- docs: split redistributed and add judy and dlib [\\#19230](https://github.com/netdata/netdata/pull/19230) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/lmittmann/tint from 1.0.5 to 1.0.6 in /src/go [\\#19229](https://github.com/netdata/netdata/pull/19229) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Fix: fix heap use after free in health [\\#19228](https://github.com/netdata/netdata/pull/19228) ([ktsaou](https://github.com/ktsaou))\n- ci: replace exit 1 with conditional skip in website update workflow [\\#19227](https://github.com/netdata/netdata/pull/19227) ([ilyam8](https://github.com/ilyam8))\n- fix\\(ml\\): remove logging for earch not acquired dimension [\\#19226](https://github.com/netdata/netdata/pull/19226) ([ilyam8](https://github.com/ilyam8))\n- Fix static builds to ensure usability on intended baseline hardware. [\\#19224](https://github.com/netdata/netdata/pull/19224) ([Ferroin](https://github.com/Ferroin))\n- add MegaCli64 to ndsudo [\\#19223](https://github.com/netdata/netdata/pull/19223) ([ilyam8](https://github.com/ilyam8))\n- removing IP address information. Bumping traefik version [\\#19222](https://github.com/netdata/netdata/pull/19222) ([M4itee](https://github.com/M4itee))\n- fix compiler warnings [\\#19221](https://github.com/netdata/netdata/pull/19221) ([ktsaou](https://github.com/ktsaou))\n- disable h20 [\\#19218](https://github.com/netdata/netdata/pull/19218) ([ilyam8](https://github.com/ilyam8))\n- add pcre2 dev to install-requires-packages.sh [\\#19217](https://github.com/netdata/netdata/pull/19217) ([ilyam8](https://github.com/ilyam8))\n- remove ENABLE\\_H2O=1 from installer [\\#19216](https://github.com/netdata/netdata/pull/19216) ([ilyam8](https://github.com/ilyam8))\n- fix: use setuid as a fallback for static builds when setcap fails for plugins [\\#19215](https://github.com/netdata/netdata/pull/19215) ([ilyam8](https://github.com/ilyam8))\n- add dyncfg vnode option to collectors [\\#19214](https://github.com/netdata/netdata/pull/19214) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.46.2 to 0.46.3 [\\#19213](https://github.com/netdata/netdata/pull/19213) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump k8s.io/client-go from 0.31.3 to 0.32.0 in /src/go [\\#19210](https://github.com/netdata/netdata/pull/19210) ([dependabot[bot]](https://github.com/apps/dependabot))\n- dyncfg vnodes improvements [\\#19207](https://github.com/netdata/netdata/pull/19207) ([ilyam8](https://github.com/ilyam8))\n- Streaming improvements No 8 [\\#19206](https://github.com/netdata/netdata/pull/19206) ([ktsaou](https://github.com/ktsaou))\n- feat\\(go.d.plugin\\): add dyncfg vnodes [\\#19205](https://github.com/netdata/netdata/pull/19205) ([ilyam8](https://github.com/ilyam8))\n- Streaming improvements No 7 [\\#19204](https://github.com/netdata/netdata/pull/19204) ([ktsaou](https://github.com/ktsaou))\n- Add dynamic rooms docs [\\#19199](https://github.com/netdata/netdata/pull/19199) ([kapantzak](https://github.com/kapantzak))\n- Streaming improvements No 6 [\\#19196](https://github.com/netdata/netdata/pull/19196) ([ktsaou](https://github.com/ktsaou))\n- Add cross-architecture build tests for Go code. [\\#19195](https://github.com/netdata/netdata/pull/19195) ([Ferroin](https://github.com/Ferroin))\n- Remove July arrays [\\#19194](https://github.com/netdata/netdata/pull/19194) ([stelfrag](https://github.com/stelfrag))\n- Streaming Improvements No 5 [\\#19193](https://github.com/netdata/netdata/pull/19193) ([ktsaou](https://github.com/ktsaou))\n- Regenerate integrations docs [\\#19192](https://github.com/netdata/netdata/pull/19192) ([netdatabot](https://github.com/netdatabot))\n- rw\\_spinlocks: allow recursive readers, even when writers are waiting [\\#19191](https://github.com/netdata/netdata/pull/19191) ([ktsaou](https://github.com/ktsaou))\n- docs: remove a duplicated row [\\#19190](https://github.com/netdata/netdata/pull/19190) ([orisano](https://github.com/orisano))\n- build\\(deps\\): bump golang.org/x/crypto from 0.30.0 to 0.31.0 in /src/go [\\#19189](https://github.com/netdata/netdata/pull/19189) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Network Metadata \\(Windows plugin\\) [\\#19188](https://github.com/netdata/netdata/pull/19188) ([thiagoftsm](https://github.com/thiagoftsm))\n- ci: fix update-website workflow [\\#19187](https://github.com/netdata/netdata/pull/19187) ([ilyam8](https://github.com/ilyam8))\n- Streaming improvements No 4 [\\#19186](https://github.com/netdata/netdata/pull/19186) ([ktsaou](https://github.com/ktsaou))\n- Move dependency handling for integrations to script. [\\#19185](https://github.com/netdata/netdata/pull/19185) ([Ferroin](https://github.com/Ferroin))\n- Regenerate integrations docs [\\#19184](https://github.com/netdata/netdata/pull/19184) ([netdatabot](https://github.com/netdatabot))\n- fix\\(kickstart\\): netdata\\_avail\\_check on Ubuntu [\\#19183](https://github.com/netdata/netdata/pull/19183) ([ilyam8](https://github.com/ilyam8))\n- Disks Metadata \\(Windows plugin\\) [\\#19182](https://github.com/netdata/netdata/pull/19182) ([thiagoftsm](https://github.com/thiagoftsm))\n- Bump repository config fetched by kickstart to latest version [\\#19181](https://github.com/netdata/netdata/pull/19181) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d\\): pass context to init/check/collect/cleanup [\\#19180](https://github.com/netdata/netdata/pull/19180) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19177](https://github.com/netdata/netdata/pull/19177) ([netdatabot](https://github.com/netdatabot))\n- docs: reorder silent mode and add full pipeline command example [\\#19176](https://github.com/netdata/netdata/pull/19176) ([Ancairon](https://github.com/Ancairon))\n- Add Objects metadata \\(Windows Plugin\\) [\\#19175](https://github.com/netdata/netdata/pull/19175) ([thiagoftsm](https://github.com/thiagoftsm))\n- Fixup URLs in package repo documentation to use index files. [\\#19174](https://github.com/netdata/netdata/pull/19174) ([Ferroin](https://github.com/Ferroin))\n- Regenerate integrations docs [\\#19173](https://github.com/netdata/netdata/pull/19173) ([netdatabot](https://github.com/netdatabot))\n- build\\(deps\\): bump github.com/docker/docker from 27.3.1+incompatible to 27.4.0+incompatible in /src/go [\\#19172](https://github.com/netdata/netdata/pull/19172) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Processor Metadata \\(Windows Plugin\\) [\\#19171](https://github.com/netdata/netdata/pull/19171) ([thiagoftsm](https://github.com/thiagoftsm))\n- Streaming improvements No 3 [\\#19168](https://github.com/netdata/netdata/pull/19168) ([ktsaou](https://github.com/ktsaou))\n- Streaming improvements No 2 [\\#19167](https://github.com/netdata/netdata/pull/19167) ([ktsaou](https://github.com/ktsaou))\n- send quit to plugins [\\#19166](https://github.com/netdata/netdata/pull/19166) ([ktsaou](https://github.com/ktsaou))\n- add units per context to /api/v3/contexts [\\#19165](https://github.com/netdata/netdata/pull/19165) ([ktsaou](https://github.com/ktsaou))\n- Regenerate integrations docs [\\#19164](https://github.com/netdata/netdata/pull/19164) ([netdatabot](https://github.com/netdatabot))\n- Update cloud virtual host name [\\#19163](https://github.com/netdata/netdata/pull/19163) ([stelfrag](https://github.com/stelfrag))\n- docs: leftover links + changes on api-tokens.md [\\#19162](https://github.com/netdata/netdata/pull/19162) ([Ancairon](https://github.com/Ancairon))\n- Regenerate integrations docs [\\#19161](https://github.com/netdata/netdata/pull/19161) ([netdatabot](https://github.com/netdatabot))\n- docs: edit Authentication and Authorization section [\\#19160](https://github.com/netdata/netdata/pull/19160) ([Ancairon](https://github.com/Ancairon))\n- Remove Option from Installer \\(Windows\\) [\\#19159](https://github.com/netdata/netdata/pull/19159) ([thiagoftsm](https://github.com/thiagoftsm))\n- NET Framework metadata \\(Windows.plugin Part 1\\) [\\#19158](https://github.com/netdata/netdata/pull/19158) ([thiagoftsm](https://github.com/thiagoftsm))\n- fix\\(build\\): fix building go.d on 32bit [\\#19156](https://github.com/netdata/netdata/pull/19156) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d\\): correct sd dir [\\#19155](https://github.com/netdata/netdata/pull/19155) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d\\): correct unlockall impl [\\#19154](https://github.com/netdata/netdata/pull/19154) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d\\): unlock job files on quit/restart [\\#19153](https://github.com/netdata/netdata/pull/19153) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19152](https://github.com/netdata/netdata/pull/19152) ([netdatabot](https://github.com/netdatabot))\n- build\\(deps\\): bump github.com/axiomhq/hyperloglog from 0.2.0 to 0.2.1 in /src/go [\\#19151](https://github.com/netdata/netdata/pull/19151) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump golang.org/x/net from 0.31.0 to 0.32.0 in /src/go [\\#19149](https://github.com/netdata/netdata/pull/19149) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/prometheus/common from 0.60.1 to 0.61.0 in /src/go [\\#19148](https://github.com/netdata/netdata/pull/19148) ([dependabot[bot]](https://github.com/apps/dependabot))\n- MSSQL Metadatas \\(windows.plugin\\) [\\#19147](https://github.com/netdata/netdata/pull/19147) ([thiagoftsm](https://github.com/thiagoftsm))\n- chore\\(go.d.plugin\\): simplify main [\\#19146](https://github.com/netdata/netdata/pull/19146) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d.plugin\\): simplify netdataapi pkg [\\#19145](https://github.com/netdata/netdata/pull/19145) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d.plugin\\): improve function parser [\\#19143](https://github.com/netdata/netdata/pull/19143) ([ilyam8](https://github.com/ilyam8))\n- docs: fix a typo in aclk readme [\\#19141](https://github.com/netdata/netdata/pull/19141) ([ilyam8](https://github.com/ilyam8))\n- docs: Plans and ACLK docs edits [\\#19140](https://github.com/netdata/netdata/pull/19140) ([Ancairon](https://github.com/Ancairon))\n- docs: Edits in the main Netdata Cloud readme [\\#19139](https://github.com/netdata/netdata/pull/19139) ([Ancairon](https://github.com/Ancairon))\n- ci: fix build/create release [\\#19138](https://github.com/netdata/netdata/pull/19138) ([ilyam8](https://github.com/ilyam8))\n- Streaming improvements No 1 [\\#19137](https://github.com/netdata/netdata/pull/19137) ([ktsaou](https://github.com/ktsaou))\n- fixed bug in streaming sender read [\\#19136](https://github.com/netdata/netdata/pull/19136) ([ktsaou](https://github.com/ktsaou))\n- minor beatification of log messages [\\#19135](https://github.com/netdata/netdata/pull/19135) ([ktsaou](https://github.com/ktsaou))\n- docs: restructure readme intro for better readability [\\#19134](https://github.com/netdata/netdata/pull/19134) ([ilyam8](https://github.com/ilyam8))\n- ci: fix build/Prepare Artifacts [\\#19133](https://github.com/netdata/netdata/pull/19133) ([ilyam8](https://github.com/ilyam8))\n- Modify Claim Screen \\(Windows Installer\\) [\\#19132](https://github.com/netdata/netdata/pull/19132) ([thiagoftsm](https://github.com/thiagoftsm))\n- Regenerate integrations docs [\\#19131](https://github.com/netdata/netdata/pull/19131) ([netdatabot](https://github.com/netdatabot))\n- chore\\(windows/hyperv\\): small Hyper-V fixes [\\#19130](https://github.com/netdata/netdata/pull/19130) ([ilyam8](https://github.com/ilyam8))\n- docs\\(windows/hyperv\\): add Hyper-V metadata [\\#19129](https://github.com/netdata/netdata/pull/19129) ([ilyam8](https://github.com/ilyam8))\n- fix\\(system-info\\): change id\\_like and name mac -\\> macOS [\\#19128](https://github.com/netdata/netdata/pull/19128) ([ilyam8](https://github.com/ilyam8))\n- fix\\(packaging\\): correct go linux 386 checksum [\\#19127](https://github.com/netdata/netdata/pull/19127) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations docs [\\#19126](https://github.com/netdata/netdata/pull/19126) ([netdatabot](https://github.com/netdatabot))\n- Integrations gha, remove .js and .json files after the process [\\#19125](https://github.com/netdata/netdata/pull/19125) ([Ancairon](https://github.com/Ancairon))\n- Avoid scanning charts for replication status [\\#19124](https://github.com/netdata/netdata/pull/19124) ([stelfrag](https://github.com/stelfrag))\n- Address installer minor issues \\(Windows\\) [\\#19122](https://github.com/netdata/netdata/pull/19122) ([thiagoftsm](https://github.com/thiagoftsm))\n- Move eBPF code from linetdata to src/collector [\\#19121](https://github.com/netdata/netdata/pull/19121) ([thiagoftsm](https://github.com/thiagoftsm))\n- change default nice level to 0 [\\#19120](https://github.com/netdata/netdata/pull/19120) ([ilyam8](https://github.com/ilyam8))\n- Disable mimalloc by default / enable explicitly if needed [\\#19118](https://github.com/netdata/netdata/pull/19118) ([stelfrag](https://github.com/stelfrag))\n- Reduce EBPF memory usage [\\#19117](https://github.com/netdata/netdata/pull/19117) ([stelfrag](https://github.com/stelfrag))\n- Fix undefined behaviour. [\\#19116](https://github.com/netdata/netdata/pull/19116) ([vkalintiris](https://github.com/vkalintiris))\n- disable python.d/example [\\#19114](https://github.com/netdata/netdata/pull/19114) ([ilyam8](https://github.com/ilyam8))\n- docs: format, typos, and some simplifications in `docs/` [\\#19112](https://github.com/netdata/netdata/pull/19112) ([ilyam8](https://github.com/ilyam8))\n- change dim order because of colours in reboot\\_required [\\#19111](https://github.com/netdata/netdata/pull/19111) ([ilyam8](https://github.com/ilyam8))\n- fix\\(proc/reboot\\_required\\): disable on non Debian-based systems [\\#19110](https://github.com/netdata/netdata/pull/19110) ([ilyam8](https://github.com/ilyam8))\n- feat\\(proc.plugin\\): add Reboot Required collector [\\#19109](https://github.com/netdata/netdata/pull/19109) ([ilyam8](https://github.com/ilyam8))\n- docs: update On-Prem System Requirements [\\#19107](https://github.com/netdata/netdata/pull/19107) ([ilyam8](https://github.com/ilyam8))\n- On-prem docs edits 2 [\\#19105](https://github.com/netdata/netdata/pull/19105) ([Ancairon](https://github.com/Ancairon))\n- Docs edits on Cloud versions and On Prem [\\#19104](https://github.com/netdata/netdata/pull/19104) ([Ancairon](https://github.com/Ancairon))\n- chore\\(go.d/pkg/socket\\): add err to callback return values [\\#19103](https://github.com/netdata/netdata/pull/19103) ([ilyam8](https://github.com/ilyam8))\n- docs: fix img tag [\\#19102](https://github.com/netdata/netdata/pull/19102) ([ilyam8](https://github.com/ilyam8))\n- Edit the organize doc [\\#19101](https://github.com/netdata/netdata/pull/19101) ([Ancairon](https://github.com/Ancairon))\n- Update connecting documentation [\\#19100](https://github.com/netdata/netdata/pull/19100) ([Ancairon](https://github.com/Ancairon))\n- Claiming proxy defaults and additonal log info [\\#19098](https://github.com/netdata/netdata/pull/19098) ([ktsaou](https://github.com/ktsaou))\n- Reset parameter when generating an alert snapshot [\\#19097](https://github.com/netdata/netdata/pull/19097) ([stelfrag](https://github.com/stelfrag))\n- Update Registry docs [\\#19095](https://github.com/netdata/netdata/pull/19095) ([Ancairon](https://github.com/Ancairon))\n- Collected and available metrics, instances and contexts [\\#19094](https://github.com/netdata/netdata/pull/19094) ([ktsaou](https://github.com/ktsaou))\n- docs\\(systemd-journal.plugin\\): correct full-text search [\\#19093](https://github.com/netdata/netdata/pull/19093) ([ilyam8](https://github.com/ilyam8))\n- Daemon docs edits [\\#19091](https://github.com/netdata/netdata/pull/19091) ([Ancairon](https://github.com/Ancairon))\n- chore\\(go.d.plugin\\): renames part 2  [\\#19090](https://github.com/netdata/netdata/pull/19090) ([ilyam8](https://github.com/ilyam8))\n- remove stale docs, and update links and optimization documentation [\\#19089](https://github.com/netdata/netdata/pull/19089) ([Ancairon](https://github.com/Ancairon))\n- Regenerate integrations.js [\\#19088](https://github.com/netdata/netdata/pull/19088) ([netdatabot](https://github.com/netdatabot))\n- docs: fix go.d modules rename leftovers [\\#19087](https://github.com/netdata/netdata/pull/19087) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19086](https://github.com/netdata/netdata/pull/19086) ([netdatabot](https://github.com/netdatabot))\n- update integrations gen script [\\#19085](https://github.com/netdata/netdata/pull/19085) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d/hpssa\\): handle HPE Smart Array line [\\#19084](https://github.com/netdata/netdata/pull/19084) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d.plugin\\): renames [\\#19081](https://github.com/netdata/netdata/pull/19081) ([ilyam8](https://github.com/ilyam8))\n- Use mimalloc [\\#19080](https://github.com/netdata/netdata/pull/19080) ([vkalintiris](https://github.com/vkalintiris))\n- Regenerate integrations.js [\\#19079](https://github.com/netdata/netdata/pull/19079) ([netdatabot](https://github.com/netdatabot))\n- Remove Go windows integration [\\#19078](https://github.com/netdata/netdata/pull/19078) ([Ancairon](https://github.com/Ancairon))\n- Split database overview and configuration reference [\\#19077](https://github.com/netdata/netdata/pull/19077) ([Ancairon](https://github.com/Ancairon))\n- Database docs edits [\\#19075](https://github.com/netdata/netdata/pull/19075) ([Ancairon](https://github.com/Ancairon))\n- RAM and CPU resource util pages [\\#19074](https://github.com/netdata/netdata/pull/19074) ([Ancairon](https://github.com/Ancairon))\n- Collector configuration page edits [\\#19072](https://github.com/netdata/netdata/pull/19072) ([Ancairon](https://github.com/Ancairon))\n- Create a terminology dictionary for Netdata [\\#19071](https://github.com/netdata/netdata/pull/19071) ([Ancairon](https://github.com/Ancairon))\n- build\\(deps\\): bump github.com/prometheus-community/pro-bing from 0.4.2-0.20241106090159-5a5f1d731cf5 to 0.5.0 in /src/go [\\#19070](https://github.com/netdata/netdata/pull/19070) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/stretchr/testify from 1.9.0 to 1.10.0 in /src/go [\\#19069](https://github.com/netdata/netdata/pull/19069) ([dependabot[bot]](https://github.com/apps/dependabot))\n- update gorilla comp internal charts family [\\#19068](https://github.com/netdata/netdata/pull/19068) ([ilyam8](https://github.com/ilyam8))\n- docs\\(systemd-journal.plugin\\): correct \"Full-text search\" [\\#19066](https://github.com/netdata/netdata/pull/19066) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19065](https://github.com/netdata/netdata/pull/19065) ([netdatabot](https://github.com/netdatabot))\n- Register service to delay start [\\#19063](https://github.com/netdata/netdata/pull/19063) ([stelfrag](https://github.com/stelfrag))\n- add links to mssql perflib object docs [\\#19062](https://github.com/netdata/netdata/pull/19062) ([ilyam8](https://github.com/ilyam8))\n- claim -\\> connect in docs [\\#19060](https://github.com/netdata/netdata/pull/19060) ([Ancairon](https://github.com/Ancairon))\n- build\\(deps\\): bump k8s.io/client-go from 0.31.2 to 0.31.3 in /src/go [\\#19059](https://github.com/netdata/netdata/pull/19059) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.46.1 to 0.46.2 in /src/go [\\#19058](https://github.com/netdata/netdata/pull/19058) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Windows doc updates [\\#19054](https://github.com/netdata/netdata/pull/19054) ([Ancairon](https://github.com/Ancairon))\n- Securing Agents section docs cleanup [\\#19053](https://github.com/netdata/netdata/pull/19053) ([Ancairon](https://github.com/Ancairon))\n- fix\\(go.d/pkg/web\\): correct close idle connections [\\#19052](https://github.com/netdata/netdata/pull/19052) ([ilyam8](https://github.com/ilyam8))\n- Update documentation about our native package repos. [\\#19049](https://github.com/netdata/netdata/pull/19049) ([Ferroin](https://github.com/Ferroin))\n- Regenerate integrations.js [\\#19048](https://github.com/netdata/netdata/pull/19048) ([netdatabot](https://github.com/netdatabot))\n- feat\\(go.d/pkg/web\\): add \"force\\_http2\" option [\\#19047](https://github.com/netdata/netdata/pull/19047) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19045](https://github.com/netdata/netdata/pull/19045) ([netdatabot](https://github.com/netdatabot))\n- Capitalize the word \"Agent\" [\\#19044](https://github.com/netdata/netdata/pull/19044) ([Ancairon](https://github.com/Ancairon))\n- Capitalize the word \"cloud\" [\\#19043](https://github.com/netdata/netdata/pull/19043) ([Ancairon](https://github.com/Ancairon))\n- Add a special version number to bypass alert snapshots [\\#19042](https://github.com/netdata/netdata/pull/19042) ([stelfrag](https://github.com/stelfrag))\n- Add Custom Actions \\(Installer\\) [\\#19041](https://github.com/netdata/netdata/pull/19041) ([thiagoftsm](https://github.com/thiagoftsm))\n- fix\\(go.d/nvidia\\_smi\\): disable loop mode on Win [\\#19040](https://github.com/netdata/netdata/pull/19040) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d/nvidia\\_smi\\): disable loop mode by default on Win [\\#19039](https://github.com/netdata/netdata/pull/19039) ([ilyam8](https://github.com/ilyam8))\n- improvement\\(go.d.plugin\\): terminate on QUIT command [\\#19038](https://github.com/netdata/netdata/pull/19038) ([ilyam8](https://github.com/ilyam8))\n- fix\\(windows/netframework\\): dont sanitize proc name for labels [\\#19036](https://github.com/netdata/netdata/pull/19036) ([ilyam8](https://github.com/ilyam8))\n- Fix MSSQL algorithm \\(Windows.plugin\\) [\\#19035](https://github.com/netdata/netdata/pull/19035) ([thiagoftsm](https://github.com/thiagoftsm))\n- --dev option to installer [\\#19034](https://github.com/netdata/netdata/pull/19034) ([ktsaou](https://github.com/ktsaou))\n- add `shutdown` keyword to ensure graceful service termination on FreeBSD [\\#19033](https://github.com/netdata/netdata/pull/19033) ([ilyam8](https://github.com/ilyam8))\n- fix: ensure correct startup order for Netdata service on FreeBSD [\\#19032](https://github.com/netdata/netdata/pull/19032) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/gorcon/rcon from 1.3.5 to 1.4.0 in /src/go [\\#19031](https://github.com/netdata/netdata/pull/19031) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.46.0 to 0.46.1 in /src/go [\\#19030](https://github.com/netdata/netdata/pull/19030) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Regenerate integrations.js [\\#19029](https://github.com/netdata/netdata/pull/19029) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(windows/iis\\): add requests by type chart [\\#19028](https://github.com/netdata/netdata/pull/19028) ([ilyam8](https://github.com/ilyam8))\n- fix\\(windows/iis\\): dont sanitize site name for labels [\\#19027](https://github.com/netdata/netdata/pull/19027) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d.plugin\\): set nooplogger for automaxprocs [\\#19026](https://github.com/netdata/netdata/pull/19026) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19025](https://github.com/netdata/netdata/pull/19025) ([netdatabot](https://github.com/netdatabot))\n- docs\\(go.d/windows\\): remove references to old MSI [\\#19024](https://github.com/netdata/netdata/pull/19024) ([ilyam8](https://github.com/ilyam8))\n- improvement\\(go.d.plugin\\): automatically set GOMAXPROCS [\\#19023](https://github.com/netdata/netdata/pull/19023) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19022](https://github.com/netdata/netdata/pull/19022) ([netdatabot](https://github.com/netdatabot))\n- docs: just iis [\\#19021](https://github.com/netdata/netdata/pull/19021) ([ilyam8](https://github.com/ilyam8))\n- chore\\(windows.plugin\\): format win collectors code [\\#19019](https://github.com/netdata/netdata/pull/19019) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19018](https://github.com/netdata/netdata/pull/19018) ([netdatabot](https://github.com/netdatabot))\n- fix\\(go.d/ping\\): fix \"interface\" option [\\#19016](https://github.com/netdata/netdata/pull/19016) ([ilyam8](https://github.com/ilyam8))\n- Remove MSI test [\\#19015](https://github.com/netdata/netdata/pull/19015) ([thiagoftsm](https://github.com/thiagoftsm))\n- fix has\\_receiver condition in rrdhost\\_status\\(\\) [\\#19014](https://github.com/netdata/netdata/pull/19014) ([ktsaou](https://github.com/ktsaou))\n- backport of fixes from balance-parents [\\#19012](https://github.com/netdata/netdata/pull/19012) ([ktsaou](https://github.com/ktsaou))\n- add missing spinlock unlocks on containers [\\#19011](https://github.com/netdata/netdata/pull/19011) ([ktsaou](https://github.com/ktsaou))\n- Regenerate integrations.js [\\#19010](https://github.com/netdata/netdata/pull/19010) ([netdatabot](https://github.com/netdatabot))\n- docs\\(go.d/windows\\): add deprecation notice [\\#19009](https://github.com/netdata/netdata/pull/19009) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d/dyncfg\\): remove additionalProperties [\\#19006](https://github.com/netdata/netdata/pull/19006) ([ilyam8](https://github.com/ilyam8))\n- Set expires header when serving files [\\#19005](https://github.com/netdata/netdata/pull/19005) ([stelfrag](https://github.com/stelfrag))\n- fix\\(go.d/x509check\\): correct check revocation code [\\#19004](https://github.com/netdata/netdata/pull/19004) ([ilyam8](https://github.com/ilyam8))\n- fix\\(go.d/dyncfg\\): remove additionalProperties check [\\#19003](https://github.com/netdata/netdata/pull/19003) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#19002](https://github.com/netdata/netdata/pull/19002) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/x509check\\): support checking full chain expiry time [\\#19001](https://github.com/netdata/netdata/pull/19001) ([ilyam8](https://github.com/ilyam8))\n- fix: exclude volumes w/o drive letter from disk\\_space\\_usage\\_alert [\\#19000](https://github.com/netdata/netdata/pull/19000) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18997](https://github.com/netdata/netdata/pull/18997) ([netdatabot](https://github.com/netdatabot))\n- docs: win deploy remove `./` [\\#18996](https://github.com/netdata/netdata/pull/18996) ([ilyam8](https://github.com/ilyam8))\n- docs: single line win deploy [\\#18994](https://github.com/netdata/netdata/pull/18994) ([ilyam8](https://github.com/ilyam8))\n- Add SQL Express Metrics [\\#18992](https://github.com/netdata/netdata/pull/18992) ([thiagoftsm](https://github.com/thiagoftsm))\n- Do not intentionally abort on non-0 exit code. [\\#18991](https://github.com/netdata/netdata/pull/18991) ([vkalintiris](https://github.com/vkalintiris))\n- update plugin\\_data\\_collection\\_status alert summary/info [\\#18990](https://github.com/netdata/netdata/pull/18990) ([ilyam8](https://github.com/ilyam8))\n- health: enable go.d data collection job status alert [\\#18989](https://github.com/netdata/netdata/pull/18989) ([ilyam8](https://github.com/ilyam8))\n- update GH bug report [\\#18988](https://github.com/netdata/netdata/pull/18988) ([ilyam8](https://github.com/ilyam8))\n- chore\\(go.d.plugin\\): fix duplicate boolToInt [\\#18987](https://github.com/netdata/netdata/pull/18987) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump golang.org/x/net from 0.30.0 to 0.31.0 in /src/go [\\#18986](https://github.com/netdata/netdata/pull/18986) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Improve Installer \\(Part II\\) [\\#18983](https://github.com/netdata/netdata/pull/18983) ([thiagoftsm](https://github.com/thiagoftsm))\n- improvement\\(go.d.plugin\\): add data collection status chart [\\#18981](https://github.com/netdata/netdata/pull/18981) ([ilyam8](https://github.com/ilyam8))\n- ci: fix win jobs [\\#18979](https://github.com/netdata/netdata/pull/18979) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18977](https://github.com/netdata/netdata/pull/18977) ([netdatabot](https://github.com/netdatabot))\n- improvement\\(go.d/rabbitmq\\): add queue status and net partitions [\\#18976](https://github.com/netdata/netdata/pull/18976) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18973](https://github.com/netdata/netdata/pull/18973) ([netdatabot](https://github.com/netdatabot))\n- add rabbitmq alerts [\\#18972](https://github.com/netdata/netdata/pull/18972) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18971](https://github.com/netdata/netdata/pull/18971) ([netdatabot](https://github.com/netdatabot))\n- fix\\(go.d/snmp\\): don't return error if no sysName [\\#18970](https://github.com/netdata/netdata/pull/18970) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump golang.org/x/text from 0.19.0 to 0.20.0 in /src/go [\\#18968](https://github.com/netdata/netdata/pull/18968) ([dependabot[bot]](https://github.com/apps/dependabot))\n- go mod tidy [\\#18967](https://github.com/netdata/netdata/pull/18967) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18966](https://github.com/netdata/netdata/pull/18966) ([netdatabot](https://github.com/netdatabot))\n- feat\\(go.d/rabbitmq\\): add cluster support [\\#18965](https://github.com/netdata/netdata/pull/18965) ([ilyam8](https://github.com/ilyam8))\n- Tidy up CI to improve overall run times. [\\#18957](https://github.com/netdata/netdata/pull/18957) ([Ferroin](https://github.com/Ferroin))\n- Balance streaming parents [\\#18945](https://github.com/netdata/netdata/pull/18945) ([ktsaou](https://github.com/ktsaou))\n- added /api/v3/stream\\_path [\\#18943](https://github.com/netdata/netdata/pull/18943) ([ktsaou](https://github.com/ktsaou))\n- Update Windows Documentation [\\#18928](https://github.com/netdata/netdata/pull/18928) ([thiagoftsm](https://github.com/thiagoftsm))\n\n## [v2.0.3](https://github.com/netdata/netdata/tree/v2.0.3) (2024-11-22)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v2.0.2...v2.0.3)\n\n## [v2.0.2](https://github.com/netdata/netdata/tree/v2.0.2) (2024-11-21)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v2.0.1...v2.0.2)\n\n## [v2.0.1](https://github.com/netdata/netdata/tree/v2.0.1) (2024-11-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v2.0.0...v2.0.1)\n\n## [v2.0.0](https://github.com/netdata/netdata/tree/v2.0.0) (2024-11-07)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.47.5...v2.0.0)\n\n**Merged pull requests:**\n\n- build\\(deps\\): update go toolchain to v1.23.3 [\\#18961](https://github.com/netdata/netdata/pull/18961) ([ilyam8](https://github.com/ilyam8))\n- Adjust max possible extent size [\\#18960](https://github.com/netdata/netdata/pull/18960) ([stelfrag](https://github.com/stelfrag))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.45.1 to 0.46.0 in /src/go [\\#18959](https://github.com/netdata/netdata/pull/18959) ([dependabot[bot]](https://github.com/apps/dependabot))\n- chore\\(go.d.plugin\\): remove duplicate logging in init/check [\\#18955](https://github.com/netdata/netdata/pull/18955) ([ilyam8](https://github.com/ilyam8))\n- Update README.md [\\#18954](https://github.com/netdata/netdata/pull/18954) ([Ancairon](https://github.com/Ancairon))\n- Fix br elements [\\#18952](https://github.com/netdata/netdata/pull/18952) ([Ancairon](https://github.com/Ancairon))\n- Precompile Python code on Windows. [\\#18951](https://github.com/netdata/netdata/pull/18951) ([Ferroin](https://github.com/Ferroin))\n- docs: simplify go.d.plugin readme [\\#18949](https://github.com/netdata/netdata/pull/18949) ([ilyam8](https://github.com/ilyam8))\n- fix memory leak when using libcurl [\\#18947](https://github.com/netdata/netdata/pull/18947) ([ktsaou](https://github.com/ktsaou))\n- docs: add \"Plugin Privileges\" section [\\#18946](https://github.com/netdata/netdata/pull/18946) ([ilyam8](https://github.com/ilyam8))\n- docs: fix Caddy docker compose example [\\#18944](https://github.com/netdata/netdata/pull/18944) ([ilyam8](https://github.com/ilyam8))\n- docs: grammar/format fixes to `docs/netdata-agent/` [\\#18942](https://github.com/netdata/netdata/pull/18942) ([ilyam8](https://github.com/ilyam8))\n- Streaming re-organization [\\#18941](https://github.com/netdata/netdata/pull/18941) ([ktsaou](https://github.com/ktsaou))\n- random numbers No 3 [\\#18940](https://github.com/netdata/netdata/pull/18940) ([ktsaou](https://github.com/ktsaou))\n- Random numbers improvements [\\#18939](https://github.com/netdata/netdata/pull/18939) ([ktsaou](https://github.com/ktsaou))\n- fix\\(go.d/prometheus\\): correct unsupported protocol scheme \"file\" error [\\#18938](https://github.com/netdata/netdata/pull/18938) ([ilyam8](https://github.com/ilyam8))\n- Improve ACLK sync CPU usage [\\#18935](https://github.com/netdata/netdata/pull/18935) ([stelfrag](https://github.com/stelfrag))\n- Hyper collector fixes [\\#18934](https://github.com/netdata/netdata/pull/18934) ([stelfrag](https://github.com/stelfrag))\n- Regenerate integrations.js [\\#18932](https://github.com/netdata/netdata/pull/18932) ([netdatabot](https://github.com/netdatabot))\n- better randomness for heartbeat [\\#18930](https://github.com/netdata/netdata/pull/18930) ([ktsaou](https://github.com/ktsaou))\n- add randomness per thread to heartbeat [\\#18929](https://github.com/netdata/netdata/pull/18929) ([ktsaou](https://github.com/ktsaou))\n- Improve the documentation on removing stale nodes [\\#18927](https://github.com/netdata/netdata/pull/18927) ([ralphm](https://github.com/ralphm))\n- Docs: Changes to title and CPU requirements [\\#18925](https://github.com/netdata/netdata/pull/18925) ([Ancairon](https://github.com/Ancairon))\n- chore\\(go.d/nvidia\\_smi\\): remove use\\_csv\\_format \\(deprecated\\) from config [\\#18924](https://github.com/netdata/netdata/pull/18924) ([ilyam8](https://github.com/ilyam8))\n- Docs: small fixes and pass on sizing Agents [\\#18923](https://github.com/netdata/netdata/pull/18923) ([Ancairon](https://github.com/Ancairon))\n- go.d/portcheck: separate tabs for tcp/upd ports [\\#18922](https://github.com/netdata/netdata/pull/18922) ([ilyam8](https://github.com/ilyam8))\n- Update Libbpf [\\#18921](https://github.com/netdata/netdata/pull/18921) ([thiagoftsm](https://github.com/thiagoftsm))\n- build\\(deps\\): bump github.com/fsnotify/fsnotify from 1.7.0 to 1.8.0 in /src/go [\\#18920](https://github.com/netdata/netdata/pull/18920) ([dependabot[bot]](https://github.com/apps/dependabot))\n- log2journal now uses libnetdata [\\#18919](https://github.com/netdata/netdata/pull/18919) ([ktsaou](https://github.com/ktsaou))\n- docs: fix ui license link [\\#18918](https://github.com/netdata/netdata/pull/18918) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18917](https://github.com/netdata/netdata/pull/18917) ([netdatabot](https://github.com/netdatabot))\n- Switch DEB/RPM repositories to new subdomain. [\\#18916](https://github.com/netdata/netdata/pull/18916) ([Ferroin](https://github.com/Ferroin))\n- docs: fix broken links in metadata [\\#18915](https://github.com/netdata/netdata/pull/18915) ([ilyam8](https://github.com/ilyam8))\n- Update CI to generate MSI installer for Windows using WiX. [\\#18914](https://github.com/netdata/netdata/pull/18914) ([Ferroin](https://github.com/Ferroin))\n- Fix potential wait forever in mqtt loop [\\#18913](https://github.com/netdata/netdata/pull/18913) ([stelfrag](https://github.com/stelfrag))\n- add `dagster` to apps\\_groups.conf [\\#18912](https://github.com/netdata/netdata/pull/18912) ([andrewm4894](https://github.com/andrewm4894))\n- Installation section simplification [\\#18911](https://github.com/netdata/netdata/pull/18911) ([Ancairon](https://github.com/Ancairon))\n- fix\\(debugfs/extfrag\\): add zone label [\\#18910](https://github.com/netdata/netdata/pull/18910) ([ilyam8](https://github.com/ilyam8))\n- proc.plugin: log as info if a dir not exists [\\#18909](https://github.com/netdata/netdata/pull/18909) ([ilyam8](https://github.com/ilyam8))\n- uninstall docs edits [\\#18908](https://github.com/netdata/netdata/pull/18908) ([Ancairon](https://github.com/Ancairon))\n- Update uninstallation docs and remove reinstallation page [\\#18907](https://github.com/netdata/netdata/pull/18907) ([Ancairon](https://github.com/Ancairon))\n- Adjust API version [\\#18906](https://github.com/netdata/netdata/pull/18906) ([stelfrag](https://github.com/stelfrag))\n- Fix a potential invalid double free memory [\\#18905](https://github.com/netdata/netdata/pull/18905) ([stelfrag](https://github.com/stelfrag))\n- MSI Improvements [\\#18903](https://github.com/netdata/netdata/pull/18903) ([thiagoftsm](https://github.com/thiagoftsm))\n- versioning for functions [\\#18902](https://github.com/netdata/netdata/pull/18902) ([ktsaou](https://github.com/ktsaou))\n- Regenerate integrations.js [\\#18901](https://github.com/netdata/netdata/pull/18901) ([netdatabot](https://github.com/netdatabot))\n- chore\\(go.d.plugin\\): add build tags to modules [\\#18900](https://github.com/netdata/netdata/pull/18900) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18899](https://github.com/netdata/netdata/pull/18899) ([netdatabot](https://github.com/netdatabot))\n- Updating Netdata docs [\\#18898](https://github.com/netdata/netdata/pull/18898) ([Ancairon](https://github.com/Ancairon))\n- remove python.d/zscores [\\#18897](https://github.com/netdata/netdata/pull/18897) ([ilyam8](https://github.com/ilyam8))\n- Coverity fixes [\\#18896](https://github.com/netdata/netdata/pull/18896) ([stelfrag](https://github.com/stelfrag))\n- docs edit [\\#18895](https://github.com/netdata/netdata/pull/18895) ([Ancairon](https://github.com/Ancairon))\n- Start-stop-restart for windows, plus move info to its own file [\\#18894](https://github.com/netdata/netdata/pull/18894) ([Ancairon](https://github.com/Ancairon))\n- log2journal: fix config parsing memory leaks [\\#18893](https://github.com/netdata/netdata/pull/18893) ([ktsaou](https://github.com/ktsaou))\n- Fix coverity issues [\\#18892](https://github.com/netdata/netdata/pull/18892) ([stelfrag](https://github.com/stelfrag))\n- Regenerate integrations.js [\\#18891](https://github.com/netdata/netdata/pull/18891) ([netdatabot](https://github.com/netdatabot))\n- feat\\(go.d.plugin\\): add spigotmc collector [\\#18890](https://github.com/netdata/netdata/pull/18890) ([ilyam8](https://github.com/ilyam8))\n- remove python.d/spigotmc [\\#18889](https://github.com/netdata/netdata/pull/18889) ([ilyam8](https://github.com/ilyam8))\n- improvement\\(go.d/k8sstate\\): collect pod status reason [\\#18887](https://github.com/netdata/netdata/pull/18887) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18886](https://github.com/netdata/netdata/pull/18886) ([netdatabot](https://github.com/netdatabot))\n- fix\\(go.d/k8sstate\\): use static list of warning/terminated reasons [\\#18885](https://github.com/netdata/netdata/pull/18885) ([ilyam8](https://github.com/ilyam8))\n- properly sanitize prometheus names and values [\\#18884](https://github.com/netdata/netdata/pull/18884) ([ktsaou](https://github.com/ktsaou))\n- Windows storage fixes [\\#18880](https://github.com/netdata/netdata/pull/18880) ([ktsaou](https://github.com/ktsaou))\n- include windows.h globally in libnetdata [\\#18878](https://github.com/netdata/netdata/pull/18878) ([ktsaou](https://github.com/ktsaou))\n- fix: correct go.d.plugin permission for source builds [\\#18876](https://github.com/netdata/netdata/pull/18876) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/prometheus/common from 0.60.0 to 0.60.1 in /src/go [\\#18874](https://github.com/netdata/netdata/pull/18874) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump k8s.io/client-go from 0.31.1 to 0.31.2 in /src/go [\\#18873](https://github.com/netdata/netdata/pull/18873) ([dependabot[bot]](https://github.com/apps/dependabot))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.45.0 to 0.45.1 in /src/go [\\#18872](https://github.com/netdata/netdata/pull/18872) ([dependabot[bot]](https://github.com/apps/dependabot))\n- fix: correct health schema typo preventing Action alert rendering. [\\#18871](https://github.com/netdata/netdata/pull/18871) ([ilyam8](https://github.com/ilyam8))\n- Adjust text\\_sanitizer to accept the default value [\\#18870](https://github.com/netdata/netdata/pull/18870) ([stelfrag](https://github.com/stelfrag))\n- Regenerate integrations.js [\\#18869](https://github.com/netdata/netdata/pull/18869) ([netdatabot](https://github.com/netdatabot))\n- docs\\(go.d/ping\\): clarify permissions [\\#18868](https://github.com/netdata/netdata/pull/18868) ([ilyam8](https://github.com/ilyam8))\n- Fix corruption in expression value replacement [\\#18865](https://github.com/netdata/netdata/pull/18865) ([stelfrag](https://github.com/stelfrag))\n- Prevent memory corruption during ACLK OTP decode [\\#18863](https://github.com/netdata/netdata/pull/18863) ([stelfrag](https://github.com/stelfrag))\n- Do not build H2O by default. [\\#18861](https://github.com/netdata/netdata/pull/18861) ([vkalintiris](https://github.com/vkalintiris))\n- Regenerate integrations.js [\\#18860](https://github.com/netdata/netdata/pull/18860) ([netdatabot](https://github.com/netdatabot))\n- feat\\(go.d.plugin\\): add MaxScale collector [\\#18859](https://github.com/netdata/netdata/pull/18859) ([ilyam8](https://github.com/ilyam8))\n- fix\\(apps.plugin\\): add tini to Linux managers [\\#18856](https://github.com/netdata/netdata/pull/18856) ([ilyam8](https://github.com/ilyam8))\n- feat\\(proc/numa\\): add numa node mem activity [\\#18855](https://github.com/netdata/netdata/pull/18855) ([ilyam8](https://github.com/ilyam8))\n- build\\(deps\\): bump github.com/vmware/govmomi from 0.44.1 to 0.45.0 in /src/go [\\#18854](https://github.com/netdata/netdata/pull/18854) ([dependabot[bot]](https://github.com/apps/dependabot))\n- chore\\(ci\\): print versions in check\\_successful\\_update [\\#18853](https://github.com/netdata/netdata/pull/18853) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18852](https://github.com/netdata/netdata/pull/18852) ([netdatabot](https://github.com/netdatabot))\n- Make integration links absolute [\\#18851](https://github.com/netdata/netdata/pull/18851) ([Ancairon](https://github.com/Ancairon))\n- fix\\(packaging\\): check for sys/capability.h only on Linux [\\#18849](https://github.com/netdata/netdata/pull/18849) ([ilyam8](https://github.com/ilyam8))\n- feat\\(go.d/sd/nl\\): make timeout and interval configurable [\\#18847](https://github.com/netdata/netdata/pull/18847) ([ilyam8](https://github.com/ilyam8))\n- fix\\(packaging\\): fix installing libcurl\\_dev on FreeBSD [\\#18845](https://github.com/netdata/netdata/pull/18845) ([ilyam8](https://github.com/ilyam8))\n- Silence up-to-date installation targets. [\\#18842](https://github.com/netdata/netdata/pull/18842) ([vkalintiris](https://github.com/vkalintiris))\n- docs\\(web/gui\\): remove legacy dashboard description [\\#18841](https://github.com/netdata/netdata/pull/18841) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18839](https://github.com/netdata/netdata/pull/18839) ([netdatabot](https://github.com/netdatabot))\n- feat\\(go.d/vernemq\\): add \"Queued PUBLISH Messages\" chart [\\#18838](https://github.com/netdata/netdata/pull/18838) ([ilyam8](https://github.com/ilyam8))\n- Remove RRDSET\\_FLAG\\_DETAIL. [\\#18837](https://github.com/netdata/netdata/pull/18837) ([vkalintiris](https://github.com/vkalintiris))\n- Update enterprise SSO docs [\\#18836](https://github.com/netdata/netdata/pull/18836) ([car12o](https://github.com/car12o))\n- chore\\(go.d/vernemq\\): remove unused file [\\#18835](https://github.com/netdata/netdata/pull/18835) ([ilyam8](https://github.com/ilyam8))\n- Regenerate integrations.js [\\#18834](https://github.com/netdata/netdata/pull/18834) ([netdatabot](https://github.com/netdatabot))\n- feat\\(go.d/nvidia\\_smi\\): add \"index\" label to GPU charts [\\#18833](https://github.com/netdata/netdata/pull/18833) ([ilyam8](https://github.com/ilyam8))\n- spawn-server-nofork: invalid magic [\\#18831](https://github.com/netdata/netdata/pull/18831) ([ktsaou](https://github.com/ktsaou))\n- remove old obsolete check for excess data in request [\\#18830](https://github.com/netdata/netdata/pull/18830) ([ktsaou](https://github.com/ktsaou))\n- Add the Windows event logs integration to the meta [\\#18829](https://github.com/netdata/netdata/pull/18829) ([Ancairon](https://github.com/Ancairon))\n- build\\(deps\\): bump github.com/redis/go-redis/v9 from 9.6.2 to 9.7.0 in /src/go [\\#18828](https://github.com/netdata/netdata/pull/18828) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Regenerate integrations.js [\\#18826](https://github.com/netdata/netdata/pull/18826) ([netdatabot](https://github.com/netdatabot))\n- Common O/S Caching Layer for users and groups [\\#18825](https://github.com/netdata/netdata/pull/18825) ([ktsaou](https://github.com/ktsaou))\n- More windows metrics [\\#18824](https://github.com/netdata/netdata/pull/18824) ([ktsaou](https://github.com/ktsaou))\n- fix compilation on windows [\\#18823](https://github.com/netdata/netdata/pull/18823) ([ktsaou](https://github.com/ktsaou))\n- numa basic meminfo [\\#18822](https://github.com/netdata/netdata/pull/18822) ([ktsaou](https://github.com/ktsaou))\n\n## [v1.47.5](https://github.com/netdata/netdata/tree/v1.47.5) (2024-10-24)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.47.4...v1.47.5)\n\n## [v1.47.4](https://github.com/netdata/netdata/tree/v1.47.4) (2024-10-09)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.47.3...v1.47.4)\n\n## [v1.47.3](https://github.com/netdata/netdata/tree/v1.47.3) (2024-10-02)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.47.2...v1.47.3)\n\n## [v1.47.2](https://github.com/netdata/netdata/tree/v1.47.2) (2024-09-24)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.47.1...v1.47.2)\n\n## [v1.47.1](https://github.com/netdata/netdata/tree/v1.47.1) (2024-09-10)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.99.0...v1.47.1)\n\n## [v1.99.0](https://github.com/netdata/netdata/tree/v1.99.0) (2024-08-23)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.47.0...v1.99.0)\n\n## [v1.47.0](https://github.com/netdata/netdata/tree/v1.47.0) (2024-08-22)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.46.3...v1.47.0)\n\n## [v1.46.3](https://github.com/netdata/netdata/tree/v1.46.3) (2024-07-23)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.46.2...v1.46.3)\n\n## [v1.46.2](https://github.com/netdata/netdata/tree/v1.46.2) (2024-07-10)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.46.1...v1.46.2)\n\n## [v1.46.1](https://github.com/netdata/netdata/tree/v1.46.1) (2024-06-21)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.46.0...v1.46.1)\n\n## [v1.46.0](https://github.com/netdata/netdata/tree/v1.46.0) (2024-06-19)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.6...v1.46.0)\n\n## [v1.45.6](https://github.com/netdata/netdata/tree/v1.45.6) (2024-06-05)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.5...v1.45.6)\n\n## [v1.45.5](https://github.com/netdata/netdata/tree/v1.45.5) (2024-05-21)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.4...v1.45.5)\n\n## [v1.45.4](https://github.com/netdata/netdata/tree/v1.45.4) (2024-05-08)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.3...v1.45.4)\n\n## [v1.45.3](https://github.com/netdata/netdata/tree/v1.45.3) (2024-04-12)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.2...v1.45.3)\n\n## [v1.45.2](https://github.com/netdata/netdata/tree/v1.45.2) (2024-04-01)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.1...v1.45.2)\n\n## [v1.45.1](https://github.com/netdata/netdata/tree/v1.45.1) (2024-03-27)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.45.0...v1.45.1)\n\n## [v1.45.0](https://github.com/netdata/netdata/tree/v1.45.0) (2024-03-21)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.44.3...v1.45.0)\n\n## [v1.44.3](https://github.com/netdata/netdata/tree/v1.44.3) (2024-02-12)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.44.2...v1.44.3)\n\n## [v1.44.2](https://github.com/netdata/netdata/tree/v1.44.2) (2024-02-06)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.44.1...v1.44.2)\n\n## [v1.44.1](https://github.com/netdata/netdata/tree/v1.44.1) (2023-12-12)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.44.0...v1.44.1)\n\n## [v1.44.0](https://github.com/netdata/netdata/tree/v1.44.0) (2023-12-06)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.43.2...v1.44.0)\n\n## [v1.43.2](https://github.com/netdata/netdata/tree/v1.43.2) (2023-10-30)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.43.1...v1.43.2)\n\n## [v1.43.1](https://github.com/netdata/netdata/tree/v1.43.1) (2023-10-26)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.43.0...v1.43.1)\n\n## [v1.43.0](https://github.com/netdata/netdata/tree/v1.43.0) (2023-10-16)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.42.4...v1.43.0)\n\n## [v1.42.4](https://github.com/netdata/netdata/tree/v1.42.4) (2023-09-18)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.42.3...v1.42.4)\n\n## [v1.42.3](https://github.com/netdata/netdata/tree/v1.42.3) (2023-09-11)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.42.2...v1.42.3)\n\n## [v1.42.2](https://github.com/netdata/netdata/tree/v1.42.2) (2023-08-28)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.42.1...v1.42.2)\n\n## [v1.42.1](https://github.com/netdata/netdata/tree/v1.42.1) (2023-08-16)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.42.0...v1.42.1)\n\n## [v1.42.0](https://github.com/netdata/netdata/tree/v1.42.0) (2023-08-09)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.41.0...v1.42.0)\n\n## [v1.41.0](https://github.com/netdata/netdata/tree/v1.41.0) (2023-07-19)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.40.1...v1.41.0)\n\n## [v1.40.1](https://github.com/netdata/netdata/tree/v1.40.1) (2023-06-27)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.40.0...v1.40.1)\n\n## [v1.40.0](https://github.com/netdata/netdata/tree/v1.40.0) (2023-06-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.39.1...v1.40.0)\n\n## [v1.39.1](https://github.com/netdata/netdata/tree/v1.39.1) (2023-05-18)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.39.0...v1.39.1)\n\n## [v1.39.0](https://github.com/netdata/netdata/tree/v1.39.0) (2023-05-08)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.38.1...v1.39.0)\n\n## [v1.38.1](https://github.com/netdata/netdata/tree/v1.38.1) (2023-02-13)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.38.0...v1.38.1)\n\n## [v1.38.0](https://github.com/netdata/netdata/tree/v1.38.0) (2023-02-06)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.37.1...v1.38.0)\n\n## [v1.37.1](https://github.com/netdata/netdata/tree/v1.37.1) (2022-12-05)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.37.0...v1.37.1)\n\n## [v1.37.0](https://github.com/netdata/netdata/tree/v1.37.0) (2022-11-30)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.36.1...v1.37.0)\n\n## [v1.36.1](https://github.com/netdata/netdata/tree/v1.36.1) (2022-08-15)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.36.0...v1.36.1)\n\n## [v1.36.0](https://github.com/netdata/netdata/tree/v1.36.0) (2022-08-10)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.35.1...v1.36.0)\n\n## [v1.35.1](https://github.com/netdata/netdata/tree/v1.35.1) (2022-06-10)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.35.0...v1.35.1)\n\n## [v1.35.0](https://github.com/netdata/netdata/tree/v1.35.0) (2022-06-08)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.34.1...v1.35.0)\n\n## [v1.34.1](https://github.com/netdata/netdata/tree/v1.34.1) (2022-04-15)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/1.34.0...v1.34.1)\n\n## [1.34.0](https://github.com/netdata/netdata/tree/1.34.0) (2022-04-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.34.0...1.34.0)\n\n## [v1.34.0](https://github.com/netdata/netdata/tree/v1.34.0) (2022-04-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.33.1...v1.34.0)\n\n## [v1.33.1](https://github.com/netdata/netdata/tree/v1.33.1) (2022-02-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.33.0...v1.33.1)\n\n## [v1.33.0](https://github.com/netdata/netdata/tree/v1.33.0) (2022-01-26)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/1.32.1...v1.33.0)\n\n## [1.32.1](https://github.com/netdata/netdata/tree/1.32.1) (2021-12-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.32.1...1.32.1)\n\n## [v1.32.1](https://github.com/netdata/netdata/tree/v1.32.1) (2021-12-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.32.0...v1.32.1)\n\n## [v1.32.0](https://github.com/netdata/netdata/tree/v1.32.0) (2021-11-30)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.31.0...v1.32.0)\n\n## [v1.31.0](https://github.com/netdata/netdata/tree/v1.31.0) (2021-05-19)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.30.1...v1.31.0)\n\n## [v1.30.1](https://github.com/netdata/netdata/tree/v1.30.1) (2021-04-12)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.30.0...v1.30.1)\n\n## [v1.30.0](https://github.com/netdata/netdata/tree/v1.30.0) (2021-03-31)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.29.3...v1.30.0)\n\n## [v1.29.3](https://github.com/netdata/netdata/tree/v1.29.3) (2021-02-23)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.29.2...v1.29.3)\n\n## [v1.29.2](https://github.com/netdata/netdata/tree/v1.29.2) (2021-02-18)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.29.1...v1.29.2)\n\n## [v1.29.1](https://github.com/netdata/netdata/tree/v1.29.1) (2021-02-09)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.29.0...v1.29.1)\n\n## [v1.29.0](https://github.com/netdata/netdata/tree/v1.29.0) (2021-02-03)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.27.0_0104103941...v1.29.0)\n\n## [v1.27.0_0104103941](https://github.com/netdata/netdata/tree/v1.27.0_0104103941) (2021-01-04)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.28.0...v1.27.0_0104103941)\n\n## [v1.28.0](https://github.com/netdata/netdata/tree/v1.28.0) (2020-12-18)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.27.0...v1.28.0)\n\n## [v1.27.0](https://github.com/netdata/netdata/tree/v1.27.0) (2020-12-17)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.26.0...v1.27.0)\n\n## [v1.26.0](https://github.com/netdata/netdata/tree/v1.26.0) (2020-10-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/before_rebase...v1.26.0)\n\n## [before_rebase](https://github.com/netdata/netdata/tree/before_rebase) (2020-09-24)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.25.0...before_rebase)\n\n## [v1.25.0](https://github.com/netdata/netdata/tree/v1.25.0) (2020-09-15)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/poc2...v1.25.0)\n\n## [poc2](https://github.com/netdata/netdata/tree/poc2) (2020-08-25)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.24.0...poc2)\n\n## [v1.24.0](https://github.com/netdata/netdata/tree/v1.24.0) (2020-08-10)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.23.2...v1.24.0)\n\n## [v1.23.2](https://github.com/netdata/netdata/tree/v1.23.2) (2020-07-16)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.23.1_infiniband...v1.23.2)\n\n## [v1.23.1_infiniband](https://github.com/netdata/netdata/tree/v1.23.1_infiniband) (2020-07-03)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.23.1...v1.23.1_infiniband)\n\n## [v1.23.1](https://github.com/netdata/netdata/tree/v1.23.1) (2020-07-01)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.23.0...v1.23.1)\n\n## [v1.23.0](https://github.com/netdata/netdata/tree/v1.23.0) (2020-06-25)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.22.1...v1.23.0)\n\n## [v1.22.1](https://github.com/netdata/netdata/tree/v1.22.1) (2020-05-12)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.22.0...v1.22.1)\n\n## [v1.22.0](https://github.com/netdata/netdata/tree/v1.22.0) (2020-05-11)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.21.1...v1.22.0)\n\n## [v1.21.1](https://github.com/netdata/netdata/tree/v1.21.1) (2020-04-13)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.21.0...v1.21.1)\n\n## [v1.21.0](https://github.com/netdata/netdata/tree/v1.21.0) (2020-04-06)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.20.0...v1.21.0)\n\n## [v1.20.0](https://github.com/netdata/netdata/tree/v1.20.0) (2020-02-21)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.19.0...v1.20.0)\n\n## [v1.19.0](https://github.com/netdata/netdata/tree/v1.19.0) (2019-11-27)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.18.1...v1.19.0)\n\n## [v1.18.1](https://github.com/netdata/netdata/tree/v1.18.1) (2019-10-18)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.18.0...v1.18.1)\n\n## [v1.18.0](https://github.com/netdata/netdata/tree/v1.18.0) (2019-10-10)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.17.1...v1.18.0)\n\n## [v1.17.1](https://github.com/netdata/netdata/tree/v1.17.1) (2019-09-12)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.17.0...v1.17.1)\n\n## [v1.17.0](https://github.com/netdata/netdata/tree/v1.17.0) (2019-09-03)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/issue_4934...v1.17.0)\n\n## [issue_4934](https://github.com/netdata/netdata/tree/issue_4934) (2019-08-03)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.16.1...issue_4934)\n\n## [v1.16.1](https://github.com/netdata/netdata/tree/v1.16.1) (2019-07-31)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.16.0...v1.16.1)\n\n## [v1.16.0](https://github.com/netdata/netdata/tree/v1.16.0) (2019-07-08)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.15.0...v1.16.0)\n\n## [v1.15.0](https://github.com/netdata/netdata/tree/v1.15.0) (2019-05-22)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.14.0...v1.15.0)\n\n## [v1.14.0](https://github.com/netdata/netdata/tree/v1.14.0) (2019-04-18)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.14.0-rc0...v1.14.0)\n\n## [v1.14.0-rc0](https://github.com/netdata/netdata/tree/v1.14.0-rc0) (2019-03-30)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.13.0...v1.14.0-rc0)\n\n## [v1.13.0](https://github.com/netdata/netdata/tree/v1.13.0) (2019-03-14)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.2...v1.13.0)\n\n## [v1.12.2](https://github.com/netdata/netdata/tree/v1.12.2) (2019-02-28)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.1...v1.12.2)\n\n## [v1.12.1](https://github.com/netdata/netdata/tree/v1.12.1) (2019-02-21)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.0...v1.12.1)\n\n## [v1.12.0](https://github.com/netdata/netdata/tree/v1.12.0) (2019-02-06)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.0-rc3...v1.12.0)\n\n## [v1.12.0-rc3](https://github.com/netdata/netdata/tree/v1.12.0-rc3) (2019-01-17)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.0-rc2...v1.12.0-rc3)\n\n## [v1.12.0-rc2](https://github.com/netdata/netdata/tree/v1.12.0-rc2) (2019-01-03)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.0-rc1...v1.12.0-rc2)\n\n## [v1.12.0-rc1](https://github.com/netdata/netdata/tree/v1.12.0-rc1) (2018-12-19)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.12.0-rc0...v1.12.0-rc1)\n\n## [v1.12.0-rc0](https://github.com/netdata/netdata/tree/v1.12.0-rc0) (2018-12-06)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.11.1...v1.12.0-rc0)\n\n## [v1.11.1](https://github.com/netdata/netdata/tree/v1.11.1) (2018-11-22)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.11.0...v1.11.1)\n\n## [v1.11.0](https://github.com/netdata/netdata/tree/v1.11.0) (2018-11-02)\n\n[Full Changelog](https://github.com/netdata/netdata/compare/v1.10.0...v1.11.0)\n\n\n\n\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 131.1494140625,
          "content": "# SPDX-License-Identifier: GPL-3.0-or-later\n\ncmake_minimum_required(VERSION 3.16.0...3.30)\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/packaging/cmake/Modules\")\n\ninclude(NetdataVersion)\nnetdata_version()\n\nproject(netdata\n        VERSION \"${NETDATA_VERSION_MAJOR}.${NETDATA_VERSION_MINOR}.${NETDATA_VERSION_PATCH}.${NETDATA_VERSION_TWEAK}\"\n        HOMEPAGE_URL \"https://www.netdata.cloud\"\n        LANGUAGES C CXX)\ninclude(CMakeDependentOption)\n\nif(DEFINED BUILD_SHARED_LIBS)\n    if(NOT BUILD_SHARED_LIBS)\n        set(STATIC_BUILD TRUE)\n    endif()\nendif()\n\nif(STATIC_BUILD)\n    set(CMAKE_FIND_LIBRARY_PREFIXES \"${CMAKE_STATIC_LIBRARY_PREFIX}\")\n    set(CMAKE_FIND_LIBRARY_SUFFIXES \"${CMAKE_STATIC_LIBRARY_SUFFIX}\")\nendif()\n\nfind_package(PkgConfig REQUIRED)\n\nif(STATIC_BUILD)\n    list(APPEND PKG_CONFIG_EXECUTABLE \"--static\")\nendif()\n\nset(CMAKE_INSTALL_MESSAGE LAZY)\n\nset(CMAKE_C_STANDARD 11)\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME \"netdata\")\n\noption(USE_CXX_11 \"Use C++11 instead of C++14 (should only be used on legacy systems that cannot support C++14, may disable some features)\" False)\nmark_as_advanced(USE_CXX_11)\n\nif(USE_CXX_11)\n    set(CMAKE_CXX_STANDARD 11)\nendif()\n\nset(CMAKE_C_STANDARD_REQUIRED On)\nset(CMAKE_CXX_STANDARD_REQUIRED On)\n\nset(SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P})\n\nif(NOT CMAKE_BUILD_TYPE)\n        set(CMAKE_BUILD_TYPE \"Release\")\nendif()\n\ninclude(NetdataCompilerFlags)\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS On)\n\n# Check for the mold linker and try to use it if available\noption(USE_MOLD \"If the MOLD linker is available on the system, use it instead of the default linker.\" TRUE)\n\nif(USE_MOLD)\n        message(CHECK_START \"Searching for MOLD linker\")\n        find_program(MOLD_LINKER NAMES ld.mold mold)\n\n        if(MOLD_LINKER)\n                execute_process(COMMAND ${MOLD_LINKER} --version\n                                RESULT_VARIABLE MOLD_VERSION_RESULT\n                                OUTPUT_VARIABLE MOLD_VERSION)\n\n                if(NOT MOLD_VERSION_RESULT)\n                        string(REPLACE \"\\n\" \"\" MOLD_VERSION \"${MOLD_VERSION}\")\n                        message(CHECK_PASS \"found (version: ${MOLD_VERSION})\")\n                        message(STATUS \"Using mold instead of the system default for linking.\")\n                        add_link_options(\"-fuse-ld=mold\")\n                else()\n                        message(CHECK_FAIL \"failed\")\n                endif()\n        else()\n                message(CHECK_FAIL \"failed\")\n        endif()\nendif()\n\nset(CONFIG_H_DIR ${CMAKE_BINARY_DIR})\nset(CONFIG_H ${CONFIG_H_DIR}/config.h)\n\n#\n# detect OS\n#\n\nset(OS_FREEBSD     False)\nset(OS_LINUX       False)\nset(OS_MACOS       False)\nset(OS_WINDOWS     False)\n\nset(NETDATA_RUNTIME_PREFIX \"${CMAKE_INSTALL_PREFIX}\")\nset(BINDIR usr/sbin)\n\nif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Darwin\")\n        set(OS_MACOS True)\n        find_library(IOKIT IOKit)\n        find_library(FOUNDATION Foundation)\n        message(STATUS \" Compiling for MacOS... \")\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"FreeBSD\")\n        set(OS_FREEBSD True)\n        message(STATUS \" Compiling for FreeBSD... \")\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Linux\")\n        set(OS_LINUX True)\n        add_definitions(-D_GNU_SOURCE)\n        message(STATUS \" Compiling for Linux... \")\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"CYGWIN\" OR \"${CMAKE_SYSTEM_NAME}\" STREQUAL \"MSYS\" OR \"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Windows\")\n        set(OS_WINDOWS True)\n\n        if(NOT \"${CMAKE_INSTALL_PREFIX}\" STREQUAL \"/opt/netdata\")\n                message(FATAL_ERROR \"CMAKE_INSTALL_PREFIX must be set to /opt/netdata, but it is set to ${CMAKE_INSTALL_PREFIX}\")\n        endif()\n\n        if(BUILD_FOR_PACKAGING)\n                set(NETDATA_RUNTIME_PREFIX \"/\")\n        endif()\n\n        set(BINDIR usr/bin)\n        set(CMAKE_RC_COMPILER_INIT windres)\n        ENABLE_LANGUAGE(RC)\n\n        SET(CMAKE_RC_COMPILE_OBJECT \"<CMAKE_RC_COMPILER> <FLAGS> -O coff <DEFINES> -i <SOURCE> -o <OBJECT>\")\n        add_definitions(-D_GNU_SOURCE)\n\n        if($ENV{CLION_IDE})\n                set(RUN_UNDER_CLION True)\n\n                # clion needs these to find the includes\n                if(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"MSYS\" OR \"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Windows\")\n                        if(\"$ENV{MSYSTEM}\" STREQUAL \"MSYS\")\n                                include_directories(c:/msys64/usr/include)\n                                include_directories(c:/msys64/usr/include/w32api)\n                        elseif(\"$ENV{MSYSTEM}\" STREQUAL \"MINGW64\")\n                                include_directories(c:/msys64/mingw64/include)\n                        elseif(\"$ENV{MSYSTEM}\" STREQUAL \"UCRT64\")\n                                include_directories(c:/msys64/ucrt64/include)\n                        endif()\n                endif()\n        endif()\n\n        message(STATUS \" Compiling for Windows (${CMAKE_SYSTEM_NAME}, MSYSTEM=$ENV{MSYSTEM})... \")\nelse()\n        message(FATAL_ERROR \"Unknown/unsupported platform: ${CMAKE_SYSTEM_NAME} (Supported platforms: FreeBSD, Linux, macOS, Windows)\")\nendif()\n\n# This is intended to make life easier for developers who are working on one\n# specific feature.\n#\n# NOTE: DO NOT USE THIS OPTION FOR PRODUCTION BUILDS.\noption(DEFAULT_FEATURE_STATE \"Specify the default state for most optional features\" True)\nmark_as_advanced(DEFAULT_FEATURE_STATE)\n\n# High-level features\noption(ENABLE_ML \"Enable machine learning features\" ${DEFAULT_FEATURE_STATE})\noption(ENABLE_DBENGINE \"Enable dbengine metrics storage\" True)\noption(ENABLE_DASHBOARD \"Enable local dashboard\" True)\nmark_as_advanced(ENABLE_DASHBOARD)\n\n# Data collection plugins\noption(ENABLE_PLUGIN_GO \"Enable metric collectors written in Go\" ${DEFAULT_FEATURE_STATE})\noption(ENABLE_PLUGIN_PYTHON \"Enable metric collectors written in Python\" ${DEFAULT_FEATURE_STATE})\n\ncmake_dependent_option(ENABLE_PLUGIN_APPS \"Enable per-process resource usage monitoring\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX OR OS_FREEBSD OR OS_MACOS OR OS_WINDOWS\" False)\ncmake_dependent_option(ENABLE_PLUGIN_CHARTS \"Enable metric collectors written in Bash\" ${DEFAULT_FEATURE_STATE} \"NOT OS_WINDOWS\" False)\ncmake_dependent_option(ENABLE_PLUGIN_CUPS \"Enable CUPS monitoring\" ${DEFAULT_FEATURE_STATE} \"NOT OS_WINDOWS\" False)\n\ncmake_dependent_option(ENABLE_PLUGIN_FREEIPMI \"Enable IPMI monitoring\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX OR OS_FREEBSD\" False)\n\ncmake_dependent_option(ENABLE_PLUGIN_CGROUP_NETWORK \"Enable Linux CGroup network usage monitoring\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_DEBUGFS \"Enable Linux DebugFS metric collection\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_EBPF \"Enable Linux eBPF metric collection\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_LEGACY_EBPF_PROGRAMS \"Enable eBPF programs for kernels without BTF support\" True \"ENABLE_PLUGIN_EBPF\" False)\nmark_as_advanced(ENABLE_LEGACY_EBPF_PROGRAMS)\ncmake_dependent_option(ENABLE_PLUGIN_LOCAL_LISTENERS \"Enable local listening socket tracking (including service auto-discovery support)\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_NETWORK_VIEWER \"Enable network viewer functionality\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_NFACCT \"Enable Linux NFACCT metric collection\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_PERF \"Enable Linux performance counter monitoring\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_SLABINFO \"Enable Linux kernel SLAB allocator monitoring\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_SYSTEMD_JOURNAL \"Enable systemd journal log collection\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\ncmake_dependent_option(ENABLE_PLUGIN_XENSTAT \"Enable Xen domain monitoring\" ${DEFAULT_FEATURE_STATE} \"OS_LINUX\" False)\n\n# Metrics exporters\noption(ENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE \"Enable exporting to Prometheus via remote write API\" ${DEFAULT_FEATURE_STATE})\noption(ENABLE_EXPORTER_MONGODB \"Enable exporting to MongoDB\" ${DEFAULT_FEATURE_STATE})\n\n# Vendoring\noption(ENABLE_BUNDLED_JSONC \"Force use of a vendored copy of JSON-C\" False)\noption(ENABLE_BUNDLED_YAML \"Force use of a vendored copy of libyaml\" False)\noption(ENABLE_BUNDLED_PROTOBUF \"Use a vendored copy of protobuf\" False)\n\n# Experimental features\noption(ENABLE_WEBRTC \"Enable WebRTC dashboard communications (experimental)\" False)\nmark_as_advanced(ENABLE_WEBRTC)\noption(ENABLE_H2O \"Enable H2O web server (experimental)\" False)\nmark_as_advanced(ENABLE_H2O)\n\n# Other optional functionality\noption(ENABLE_SENTRY \"Build with Sentry Native crash reporting\" False)\nmark_as_advanced(ENABLE_SENTRY)\n\noption(BUILD_FOR_PACKAGING \"Include component files for native packages\" False)\nmark_as_advanced(BUILD_FOR_PACKAGING)\n\ncmake_dependent_option(FORCE_LEGACY_LIBBPF \"Force usage of libbpf 0.0.9 instead of the latest version.\" False \"ENABLE_PLUGIN_EBPF\" False)\nmark_as_advanced(FORCE_LEGACY_LIBBPF)\n\noption(ENABLE_MIMALLOC \"Enable mimalloc allocator\" OFF)\n\nif(ENABLE_MIMALLOC)\n    if(CMAKE_MINOR_VERSION LESS 18)\n        message(WARNING \"Mimalloc disabled: Requires CMake version 3.18 or higher.\")\n        set(ENABLE_MIMALLOC OFF CACHE BOOL \"Enable mimalloc allocator\" FORCE)\n    elseif(CMAKE_SIZEOF_VOID_P LESS 8)\n        message(WARNING \"Mimalloc disabled: Only supported on 64-bit platforms.\")\n        set(ENABLE_MIMALLOC OFF CACHE BOOL \"Enable mimalloc allocator\" FORCE)\n    elseif(OS_FREEBSD OR OS_MACOS OR OS_WINDOWS)\n        message(WARNING \"Mimalloc disabled: Not supported on FreeBSD, macOS, or Windows.\")\n        set(ENABLE_MIMALLOC OFF CACHE BOOL \"Enable mimalloc allocator\" FORCE)\n    elseif(ENABLE_ADDRESS_SANITIZER)\n        message(WARNING \"Mimalloc disabled: Cannot be used with Address Sanitizer.\")\n        set(ENABLE_MIMALLOC OFF CACHE BOOL \"Enable mimalloc allocator\" FORCE)\n    else()\n        message(STATUS \"Mimalloc is enabled.\")\n    endif()\nelse()\n    message(STATUS \"Mimalloc is disabled.\")\nendif()\n\nif(ENABLE_MIMALLOC)\n        function(netdata_add_mimalloc)\n                set(MI_BUILD_STATIC ON CACHE INTERNAL \"\")\n                set(MI_BUILD_SHARED OFF CACHE INTERNAL \"\")\n                set(MI_BUILD_OBJECT OFF CACHE INTERNAL \"\")\n                set(MI_BUILD_TESTS OFF CACHE INTERNAL \"\")\n\n                include(FetchContent)\n                include(NetdataFetchContentExtra)\n\n                if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.28)\n                        FetchContent_Declare(mimalloc\n                                GIT_REPOSITORY https://github.com/microsoft/mimalloc.git\n                                GIT_TAG 8c532c32c3c96e5ba1f2283e032f69ead8add00f\n                                EXCLUDE_FROM_ALL\n                        )\n                else()\n                        FetchContent_Declare(mimalloc\n                                GIT_REPOSITORY https://github.com/microsoft/mimalloc.git\n                                GIT_TAG 8c532c32c3c96e5ba1f2283e032f69ead8add00f\n                        )\n                endif()\n\n                FetchContent_MakeAvailable_NoInstall(mimalloc)\n        endfunction()\n\n        netdata_add_mimalloc()\nendif()\n\nif(ENABLE_PLUGIN_GO)\n    include(NetdataGoTools)\n\n    find_min_go_version(\"${CMAKE_SOURCE_DIR}/src/go\")\n\n    find_package(Go \"${MIN_GO_VERSION}\" REQUIRED)\nendif()\n\nif(ENABLE_PLUGIN_GO)\n    set(NEED_NDSUDO TRUE)\nelse()\n    set(NEED_NDSUDO FALSE)\nendif()\n\nif(ENABLE_WEBRTC)\n        include(FetchContent)\n        include(NetdataFetchContentExtra)\n\n        # ignore debhelper\n        set(FETCHCONTENT_FULLY_DISCONNECTED Off)\n\n        set(PREFER_SYSTEM_LIB True)\n        set(NO_MEDIA True)\n        set(NO_WEBSOCKET True)\n\n        set(HAVE_LIBDATACHANNEL True)\n\n        FetchContent_Declare(libdatachannel\n            GIT_REPOSITORY https://github.com/paullouisageneau/libdatachannel.git\n            GIT_TAG v0.20.1\n            CMAKE_ARGS ${NETDATA_PROPAGATE_TOOLCHAIN_ARGS}\n        )\n        FetchContent_MakeAvailable(libdatachannel)\nendif()\n\ninclude(NetdataProtobuf)\n\nif(ENABLE_BUNDLED_PROTOBUF)\n        netdata_bundle_protobuf()\nendif()\n\nset(PKG_FILES_PATH \"${CMAKE_SOURCE_DIR}/packaging/cmake/pkg-files\")\n\nif(ENABLE_PLUGIN_EBPF)\n        include(NetdataLibBPF)\n        include(NetdataEBPFCORE)\n\n        if(NOT OS_LINUX)\n            message(FATAL_ERROR \"The eBPF plugin is not supported on non-Linux systems\")\n        endif()\n\n        netdata_bundle_libbpf()\n        netdata_fetch_ebpf_co_re()\nendif()\n\npkg_check_modules(CURL libcurl>=7.21 REQUIRED IMPORTED_TARGET)\nset(HAVE_LIBCURL TRUE)\n\n#\n# Libm\n#\n\n# checks link with cmake required libs\ncmake_policy(SET CMP0075 NEW)\n\ninclude(CheckFunctionExists)\n\ncheck_function_exists(log10 HAVE_LOG10)\nif(NOT HAVE_LOG10)\n        unset(HAVE_LOG10 CACHE)\n        list(APPEND CMAKE_REQUIRED_LIBRARIES m)\n        check_function_exists(log10 HAVE_LOG10)\n        if(HAVE_LOG10)\n                set(LINK_LIBM True)\n        else()\n                message(FATAL_ERROR \"Can not use log10 with/without libm.\")\n        endif()\nendif()\n\n#\n# Custom Modules\n#\n\ninclude(NetdataJSONC)\ninclude(NetdataYAML)\n\nif(ENABLE_LEGACY_EBPF_PROGRAMS)\n        include(NetdataEBPFLegacy)\nendif()\n\nif(ENABLE_SENTRY)\n        include(NetdataSentry)\nendif()\n\n#\n# Checks from custom modules\n#\n\nnetdata_detect_jsonc()\nnetdata_detect_libyaml()\n\nif(ENABLE_LEGACY_EBPF_PROGRAMS)\n        netdata_fetch_legacy_ebpf_code()\nendif()\n\nif(ENABLE_SENTRY)\n        netdata_bundle_sentry()\nendif()\n\n#\n# check include files\n#\n\ninclude(CheckIncludeFile)\n\ncheck_include_file(\"netinet/in.h\" HAVE_NETINET_IN_H)\ncheck_include_file(\"resolv.h\" HAVE_RESOLV_H)\ncheck_include_file(\"netdb.h\" HAVE_NETDB_H)\ncheck_include_file(\"sys/prctl.h\" HAVE_SYS_PRCTL_H)\ncheck_include_file(\"sys/stat.h\" HAVE_SYS_STAT_H)\ncheck_include_file(\"sys/vfs.h\" HAVE_SYS_VFS_H)\ncheck_include_file(\"sys/statfs.h\" HAVE_SYS_STATFS_H)\ncheck_include_file(\"linux/magic.h\" HAVE_LINUX_MAGIC_H)\ncheck_include_file(\"sys/mount.h\" HAVE_SYS_MOUNT_H)\ncheck_include_file(\"sys/statvfs.h\" HAVE_SYS_STATVFS_H)\ncheck_include_file(\"inttypes.h\" HAVE_INTTYPES_H)\ncheck_include_file(\"stdint.h\" HAVE_STDINT_H)\ncheck_include_file(\"arpa/inet.h\" HAVE_ARPA_INET_H)\ncheck_include_file(\"netinet/tcp.h\" HAVE_NETINET_TCP_H)\ncheck_include_file(\"sys/ioctl.h\" HAVE_SYS_IOCTL_H)\ncheck_include_file(\"grp.h\" HAVE_GRP_H)\ncheck_include_file(\"pwd.h\" HAVE_PWD_H)\ncheck_include_file(\"net/if.h\" HAVE_NET_IF_H)\ncheck_include_file(\"poll.h\" HAVE_POLL_H)\ncheck_include_file(\"syslog.h\" HAVE_SYSLOG_H)\ncheck_include_file(\"sys/mman.h\" HAVE_SYS_MMAN_H)\ncheck_include_file(\"sys/resource.h\" HAVE_SYS_RESOURCE_H)\ncheck_include_file(\"sys/socket.h\" HAVE_SYS_SOCKET_H)\ncheck_include_file(\"sys/wait.h\" HAVE_SYS_WAIT_H)\ncheck_include_file(\"sys/un.h\" HAVE_SYS_UN_H)\ncheck_include_file(\"spawn.h\" HAVE_SPAWN_H)\nif(OS_LINUX)\n    check_include_file(\"sys/capability.h\" HAVE_SYS_CAPABILITY_H)\nendif()\n\n#\n# check symbols\n#\n\ninclude(CheckSymbolExists)\ncheck_symbol_exists(major \"sys/sysmacros.h\" MAJOR_IN_SYSMACROS)\ncheck_symbol_exists(major \"sys/mkdev.h\" MAJOR_IN_MKDEV)\ncheck_symbol_exists(clock_gettime \"time.h\" HAVE_CLOCK_GETTIME)\ncheck_symbol_exists(strerror_r \"string.h\" HAVE_STRERROR_R)\ncheck_symbol_exists(finite \"math.h\" HAVE_FINITE)\ncheck_symbol_exists(isfinite \"math.h\" HAVE_ISFINITE)\ncheck_symbol_exists(dlsym \"dlfcn.h\" HAVE_DLSYM)\n\ncheck_function_exists(pthread_getthreadid_np HAVE_PTHREAD_GETTHREADID_NP)\ncheck_function_exists(pthread_threadid_np HAVE_PTHREAD_THREADID_NP)\ncheck_function_exists(gettid HAVE_GETTID)\ncheck_function_exists(waitid HAVE_WAITID)\ncheck_function_exists(nice HAVE_NICE)\ncheck_function_exists(recvmmsg HAVE_RECVMMSG)\ncheck_function_exists(getpriority HAVE_GETPRIORITY)\ncheck_function_exists(setenv HAVE_SETENV)\ncheck_function_exists(strndup HAVE_STRNDUP)\n\ncheck_function_exists(sched_getscheduler HAVE_SCHED_GETSCHEDULER)\ncheck_function_exists(sched_setscheduler HAVE_SCHED_SETSCHEDULER)\ncheck_function_exists(sched_get_priority_min HAVE_SCHED_GET_PRIORITY_MIN)\ncheck_function_exists(sched_get_priority_max HAVE_SCHED_GET_PRIORITY_MAX)\n\ncheck_function_exists(close_range HAVE_CLOSE_RANGE)\ncheck_function_exists(backtrace HAVE_BACKTRACE)\n\ncheck_function_exists(arc4random_buf HAVE_ARC4RANDOM_BUF)\ncheck_function_exists(arc4random_uniform HAVE_ARC4RANDOM_UNIFORM)\ncheck_function_exists(getrandom HAVE_GETRANDOM)\ncheck_function_exists(sysinfo HAVE_SYSINFO)\n\n#\n# check source compilation\n#\n\ninclude(CheckCSourceCompiles)\ninclude(CheckCXXSourceCompiles)\n\nset(CMAKE_REQUIRED_LIBRARIES pthread)\ncheck_c_source_compiles(\"\n#define _GNU_SOURCE\n#include <pthread.h>\nint main() {\n        char name[16];\n        pthread_t thread = pthread_self();\n        return pthread_getname_np(thread, name, sizeof(name));\n}\n\" HAVE_PTHREAD_GETNAME_NP)\n\ncheck_c_source_compiles(\"\n#include <stdio.h>\n#define mytype(X) _Generic((X), int: 'i', float: 'f', default: 'u')\nint main() {\n        char type = mytype(0);\n        return 0;\n}\n\" HAVE_C__GENERIC)\n\ncheck_c_source_compiles(\"\n#include <malloc.h>\nint main() {\n        mallopt(M_ARENA_MAX, 1);\n        mallopt(M_PERTURB, 0x5A);\n        return 0;\n}\n\" HAVE_C_MALLOPT)\n\ncheck_c_source_compiles(\"\n#include <malloc.h>\nint main() {\n        malloc_trim(0);\n        return 0;\n}\n\" HAVE_C_MALLOC_TRIM)\n\ncheck_c_source_compiles(\"\n#include <malloc.h>\nint main() {\n        malloc_info(0, stdout);\n        return 0;\n}\n\" HAVE_C_MALLOC_INFO)\n\ncheck_c_source_compiles(\"\n#include <malloc.h>\nint main() {\n        struct mallinfo2 m = mallinfo2();\n        return 0;\n}\n\" HAVE_C_MALLINFO2)\n\ncheck_c_source_compiles(\"\n#define _GNU_SOURCE\n#include <stdio.h>\n#include <sys/socket.h>\nint main() {\n        accept4(0, NULL, NULL, 0);\n        return 0;\n}\n\" HAVE_ACCEPT4)\n\ncheck_c_source_compiles(\"\n#define _GNU_SOURCE\n#include <string.h>\nint main() {\n        char x = *strerror_r(0, &x, sizeof(x)); return 0;\n}\n\" STRERROR_R_CHAR_P)\n\ncheck_c_source_compiles(\"\n#ifndef _GNU_SOURCE\n#define _GNU_SOURCE\n#endif\n#include <sched.h>\nint main() {\n        setns(0, 0); return 0;\n}\n\" HAVE_SETNS)\n\ncheck_cxx_source_compiles(\"\nint main() {\n        __atomic_load_8(nullptr, 0);\n        return 0;\n}\n\" HAVE_BUILTIN_ATOMICS)\n\ncheck_cxx_source_compiles(\"\n#include <stdint.h>\nint main(void) {\n        uint64_t a;\n        __sync_add_and_fetch(&a, 1);\n        return 0;\n}\n\" ARCH_SUPPORTS_64BIT_ATOMICS)\n\ncheck_c_source_compiles(\"\nvoid my_printf(char const *s, ...) __attribute__((format(gnu_printf, 1, 2)));\nint main() { return 0; }\n\" HAVE_FUNC_ATTRIBUTE_FORMAT_GNU_PRINTF FAIL_REGEX \"warning:\")\n\ncheck_c_source_compiles(\"\nvoid my_printf(char const *s, ...) __attribute__((format(printf, 1, 2)));\nint main() { return 0; }\n\" HAVE_FUNC_ATTRIBUTE_FORMAT_PRINTF FAIL_REGEX \"warning:\")\n\ncheck_c_source_compiles(\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\nvoid* my_alloc(size_t size) __attribute__((malloc));\nint main() {\n    void *x = my_alloc(1);\n    free(x);\n    return 0;\n}\nvoid* my_alloc(size_t size) {\n    void *ret = malloc(size);\n    if(!ret) exit(1);\n    return ret;\n}\n\" HAVE_FUNC_ATTRIBUTE_MALLOC)\n\ncheck_c_source_compiles(\"\nvoid my_function() __attribute__((noinline));\nint main() { my_function(); return 0; }\nvoid my_function() { ; }\n\" HAVE_FUNC_ATTRIBUTE_NOINLINE)\n\ncheck_c_source_compiles(\"\n#include <stdlib.h>\nvoid my_exit_function() __attribute__((noreturn));\nint main() {\n        my_exit_function(); // Call the noreturn function\n        return 0;\n}\nvoid my_exit_function() {\n        exit(1);\n}\n\" HAVE_FUNC_ATTRIBUTE_NORETURN)\n\ncheck_c_source_compiles(\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\nvoid* my_alloc(size_t size) __attribute__((returns_nonnull));\nint main() {\n        void* ptr = my_alloc(10);\n        free(ptr);\n        return 0;\n}\nvoid* my_alloc(size_t size) {\n        void *ret = malloc(size);\n        if(!ret) exit(1);\n        return ret;\n}\n\" HAVE_FUNC_ATTRIBUTE_RETURNS_NONNULL)\n\ncheck_c_source_compiles(\"\nint my_function() __attribute__((warn_unused_result));\nint main() {\n        return my_function();\n}\nint my_function() {\n        return 1;\n}\n\" HAVE_FUNC_ATTRIBUTE_WARN_UNUSED_RESULT)\n\n# Windows MSVCRT random number generator\n# used only when compiling natively (not MSYS/CYGWIN)\ncheck_c_source_compiles(\"\n    #define _CRT_RAND_S\n    #include <stdlib.h>\n    int main() {\n        unsigned int x;\n        return rand_s(&x);\n    }\n\" HAVE_RAND_S)\n\nif(OS_FREEBSD OR OS_MACOS)\n        set(HAVE_BUILTIN_ATOMICS True)\nendif()\n\n# openssl/crypto\npkg_check_modules(TLS IMPORTED_TARGET openssl)\n\nif(NOT TARGET PkgConfig::TLS)\n        if(OS_MACOS)\n                execute_process(COMMAND\n                                brew --prefix --installed openssl\n                                RESULT_VARIABLE BREW_OPENSSL\n                                OUTPUT_VARIABLE BREW_OPENSSL_PREFIX\n                                OUTPUT_STRIP_TRAILING_WHITESPACE)\n\n                if((BREW_OPENSSL NOT EQUAL 0) OR (NOT EXISTS \"${BREW_OPENSSL_PREFIX}\"))\n                        message(FATAL_ERROR \"OpenSSL (or LibreSSL) is required for building Netdata, but could not be found.\")\n                endif()\n\n                add_library(PkgConfig::CRYPTO IMPORTED)\n                set_target_properties(PkgConfig::CRYPTO\n                        IMPORTED_LOCATION ${BREW_OPENSSL_PREFIX}/lib/libcrypto.dylib\n                        INTERFACE_INCLUDE_DIRECTORIES ${BREW_OPENSSL_PREFIX}/include)\n\n                add_library(PkgConfig::TLS IMPORTED)\n                set_target_properties(PkgConfig::TLS\n                        IMPORTED_LOCATION ${BREW_OPENSSL_PREFIX}/lib/libssl.dylib\n                        INTERFACE_LINK_LIBRARIES PkgConfig::CRYPTO\n                        INTERFACE_INCLUDE_DIRECTORIES ${BREW_OPENSSL_PREFIX}/include)\n        else()\n            message(FATAL_ERROR \"OpenSSL (or LibreSSL) is required for building Netdata, but could not be found.\")\n        endif()\nelse()\n        pkg_check_modules(CRYPTO IMPORTED_TARGET REQUIRED libcrypto)\nendif()\n\nnetdata_detect_protobuf()\n\n#\n# source files\n#\n\nset(LIBJUDY_PREV_FILES\n        src/libnetdata/libjudy/vendored/JudyL/JudyLPrev.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLPrevEmpty.c\n)\n\nset(LIBJUDY_NEXT_FILES\n        src/libnetdata/libjudy/vendored/JudyL/JudyLNext.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLNextEmpty.c\n)\n\nset(LIBJUDY_SOURCES\n        src/libnetdata/libjudy/vendored/Judy.h\n        src/libnetdata/libjudy/vendored/JudyCommon/JudyMalloc.c\n        src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivate.h\n        src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivate1L.h\n        src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h\n        src/libnetdata/libjudy/vendored/JudyL/JudyL.h\n        src/libnetdata/libjudy/vendored/JudyL/JudyLByCount.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLCascade.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLCount.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLCreateBranch.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLDecascade.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLFirst.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLFreeArray.c\n        src/libnetdata/libjudy/vendored/JudyL/j__udyLGet.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLGet.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLInsArray.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLIns.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLInsertBranch.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLMallocIF.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLMemActive.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLMemUsed.c\n        src/libnetdata/libjudy/vendored/JudyL/JudyLTables.c\n        src/libnetdata/libjudy/vendored/JudyHS/JudyHS.c\n        ${LIBJUDY_PREV_FILES}\n        ${LIBJUDY_NEXT_FILES}\n)\n\nset(LIBNETDATA_FILES\n        ${CONFIG_H}\n        src/libnetdata/adaptive_resortable_list/adaptive_resortable_list.c\n        src/libnetdata/adaptive_resortable_list/adaptive_resortable_list.h\n        src/libnetdata/config/appconfig.c\n        src/libnetdata/config/appconfig.h\n        src/libnetdata/aral/aral.c\n        src/libnetdata/aral/aral.h\n        src/libnetdata/avl/avl.c\n        src/libnetdata/avl/avl.h\n        src/libnetdata/bitmap/bitmap64.h\n        src/libnetdata/buffer/buffer.c\n        src/libnetdata/buffer/buffer.h\n        src/libnetdata/ringbuffer/ringbuffer.c\n        src/libnetdata/ringbuffer/ringbuffer.h\n        src/libnetdata/circular_buffer/circular_buffer.c\n        src/libnetdata/circular_buffer/circular_buffer.h\n        src/libnetdata/clocks/clocks.c\n        src/libnetdata/clocks/clocks.h\n        src/libnetdata/completion/completion.c\n        src/libnetdata/completion/completion.h\n        src/libnetdata/datetime/iso8601.c\n        src/libnetdata/datetime/iso8601.h\n        src/libnetdata/datetime/rfc7231.c\n        src/libnetdata/datetime/rfc7231.h\n        src/libnetdata/datetime/rfc3339.c\n        src/libnetdata/datetime/rfc3339.h\n        src/libnetdata/dictionary/dictionary.c\n        src/libnetdata/dictionary/dictionary.h\n        src/libnetdata/eval/eval.c\n        src/libnetdata/eval/eval.h\n        src/libnetdata/facets/facets.c\n        src/libnetdata/facets/facets.h\n        src/libnetdata/functions_evloop/functions_evloop.c\n        src/libnetdata/functions_evloop/functions_evloop.h\n        src/libnetdata/gorilla/gorilla.cc\n        src/libnetdata/gorilla/gorilla.h\n        src/libnetdata/inlined.h\n        src/libnetdata/json/json.c\n        src/libnetdata/json/json.h\n        src/libnetdata/json/vendored/jsmn.c\n        src/libnetdata/json/vendored/jsmn.h\n        src/libnetdata/libnetdata.c\n        src/libnetdata/libnetdata.h\n        src/libnetdata/line_splitter/line_splitter.c\n        src/libnetdata/line_splitter/line_splitter.h\n        src/libnetdata/libnetdata.h\n        src/libnetdata/linked_lists/linked_lists.h\n        src/libnetdata/locks/locks.c\n        src/libnetdata/locks/locks.h\n        src/libnetdata/log/systemd-journal-helpers.c\n        src/libnetdata/log/systemd-journal-helpers.h\n        src/libnetdata/log/nd_log.c\n        src/libnetdata/log/nd_log.h\n        src/libnetdata/os/os.c\n        src/libnetdata/os/os.h\n        src/libnetdata/os/byteorder.h\n        src/libnetdata/onewayalloc/onewayalloc.c\n        src/libnetdata/onewayalloc/onewayalloc.h\n        src/libnetdata/procfile/procfile.c\n        src/libnetdata/procfile/procfile.h\n        src/libnetdata/query_progress/progress.c\n        src/libnetdata/query_progress/progress.h\n        src/libnetdata/required_dummies.h\n        src/libnetdata/socket/security.c\n        src/libnetdata/socket/security.h\n        src/libnetdata/simple_hashtable/simple_hashtable.h\n        src/libnetdata/simple_hashtable/simple_hashtable_undef.h\n        src/libnetdata/simple_pattern/simple_pattern.c\n        src/libnetdata/simple_pattern/simple_pattern.h\n        src/libnetdata/socket/socket.c\n        src/libnetdata/socket/socket.h\n        src/libnetdata/statistical/statistical.c\n        src/libnetdata/statistical/statistical.h\n        src/libnetdata/storage_number/storage_number.c\n        src/libnetdata/storage_number/storage_number.h\n        src/libnetdata/string/string.c\n        src/libnetdata/string/string.h\n        src/libnetdata/threads/threads.c\n        src/libnetdata/threads/threads.h\n        src/libnetdata/url/url.c\n        src/libnetdata/url/url.h\n        src/libnetdata/uuid/uuid.c\n        src/libnetdata/uuid/uuid.h\n        src/libnetdata/string/utf8.h\n        src/libnetdata/worker_utilization/worker_utilization.c\n        src/libnetdata/worker_utilization/worker_utilization.h\n        src/libnetdata/http/http_access.c\n        src/libnetdata/http/http_access.h\n        src/libnetdata/http/http_defs.c\n        src/libnetdata/http/http_defs.h\n        src/libnetdata/http/content_type.c\n        src/libnetdata/http/content_type.h\n        src/libnetdata/config/dyncfg.c\n        src/libnetdata/config/dyncfg.h\n        src/libnetdata/json/json-c-parser-inline.h\n        src/libnetdata/template-enum.h\n        src/libnetdata/dictionary/dictionary-internals.h\n        src/libnetdata/dictionary/dictionary-unittest.c\n        src/libnetdata/dictionary/thread-cache.c\n        src/libnetdata/dictionary/thread-cache.h\n        src/libnetdata/dictionary/dictionary-traversal.c\n        src/libnetdata/dictionary/dictionary-statistics.h\n        src/libnetdata/dictionary/dictionary-locks.h\n        src/libnetdata/dictionary/dictionary-refcount.h\n        src/libnetdata/dictionary/dictionary-hashtable.h\n        src/libnetdata/dictionary/dictionary-item.h\n        src/libnetdata/dictionary/dictionary-callbacks.h\n        src/libnetdata/storage-point.h\n        src/libnetdata/parsers/parsers.h\n        src/libnetdata/parsers/duration.c\n        src/libnetdata/os/gettid.c\n        src/libnetdata/os/gettid.h\n        src/libnetdata/os/adjtimex.c\n        src/libnetdata/os/adjtimex.h\n        src/libnetdata/os/setresuid.c\n        src/libnetdata/os/setresuid.h\n        src/libnetdata/os/setresgid.c\n        src/libnetdata/os/setresgid.h\n        src/libnetdata/os/getgrouplist.c\n        src/libnetdata/os/getgrouplist.h\n        src/libnetdata/os/get_pid_max.c\n        src/libnetdata/os/get_pid_max.h\n        src/libnetdata/os/os-freebsd-wrappers.c\n        src/libnetdata/os/os-freebsd-wrappers.h\n        src/libnetdata/os/os-macos-wrappers.c\n        src/libnetdata/os/os-macos-wrappers.h\n        src/libnetdata/os/os-windows-wrappers.c\n        src/libnetdata/os/os-windows-wrappers.h\n        src/libnetdata/os/get_system_cpus.c\n        src/libnetdata/os/get_system_cpus.h\n        src/libnetdata/os/sleep.c\n        src/libnetdata/os/sleep.h\n        src/libnetdata/os/uuid_generate.c\n        src/libnetdata/os/uuid_generate.h\n        src/libnetdata/os/setenv.c\n        src/libnetdata/os/setenv.h\n        src/libnetdata/os/strndup.c\n        src/libnetdata/os/strndup.h\n        src/libnetdata/os/windows-wmi/windows-wmi.c\n        src/libnetdata/os/windows-wmi/windows-wmi.h\n        src/libnetdata/os/windows-wmi/windows-wmi-GetDiskDriveInfo.c\n        src/libnetdata/os/windows-wmi/windows-wmi-GetDiskDriveInfo.h\n        src/libnetdata/os/windows-perflib/perflib.c\n        src/libnetdata/os/windows-perflib/perflib.h\n        src/libnetdata/os/windows-perflib/perflib-names.c\n        src/libnetdata/os/windows-perflib/perflib-dump.c\n        src/libnetdata/os/system-maps/cached-uid-username.c\n        src/libnetdata/os/system-maps/cached-uid-username.h\n        src/libnetdata/os/system-maps/cached-sid-username.c\n        src/libnetdata/os/system-maps/cached-sid-username.h\n        src/libnetdata/os/system-maps/cached-gid-groupname.c\n        src/libnetdata/os/system-maps/cached-gid-groupname.h\n        src/libnetdata/os/system-maps/cache-host-users-and-groups.c\n        src/libnetdata/os/system-maps/cache-host-users-and-groups.h\n        src/libnetdata/spawn_server/spawn_server_nofork.c\n        src/libnetdata/spawn_server/spawn_server.h\n        src/libnetdata/spawn_server/spawn_popen.c\n        src/libnetdata/spawn_server/spawn_popen.h\n        src/libnetdata/spawn_server/spawn_server_windows.c\n        src/libnetdata/spawn_server/spawn_server_internals.h\n        src/libnetdata/spawn_server/spawn_server_libuv.c\n        src/libnetdata/spawn_server/spawn_server_posix.c\n        src/libnetdata/spawn_server/spawn_library.c\n        src/libnetdata/spawn_server/spawn_library.h\n        src/libnetdata/os/close_range.c\n        src/libnetdata/os/close_range.h\n        src/libnetdata/os/setproctitle.c\n        src/libnetdata/os/setproctitle.h\n        src/libnetdata/paths/paths.c\n        src/libnetdata/paths/paths.h\n        src/libnetdata/json/json-c-parser-inline.c\n        src/libnetdata/parsers/duration.h\n        src/libnetdata/parsers/timeframe.c\n        src/libnetdata/parsers/timeframe.h\n        src/libnetdata/parsers/size.c\n        src/libnetdata/parsers/size.h\n        src/libnetdata/libjudy/judy-malloc.c\n        src/libnetdata/libjudy/judy-malloc.h\n        src/libnetdata/config/appconfig_internals.h\n        src/libnetdata/config/appconfig_exporters.c\n        src/libnetdata/config/appconfig_conf_file.c\n        src/libnetdata/config/appconfig_cleanup.c\n        src/libnetdata/config/appconfig_sections.c\n        src/libnetdata/config/appconfig_options.c\n        src/libnetdata/config/appconfig_migrate.c\n        src/libnetdata/config/appconfig_traversal.c\n        src/libnetdata/config/appconfig_api_sizes.c\n        src/libnetdata/config/appconfig_api_sizes.h\n        src/libnetdata/config/appconfig_api_durations.c\n        src/libnetdata/config/appconfig_api_durations.h\n        src/libnetdata/config/appconfig_api_numbers.c\n        src/libnetdata/config/appconfig_api_numbers.h\n        src/libnetdata/config/appconfig_api_text.c\n        src/libnetdata/config/appconfig_api_text.h\n        src/libnetdata/config/appconfig_api_boolean.c\n        src/libnetdata/config/appconfig_api_boolean.h\n        src/libnetdata/facets/logs_query_status.h\n        src/libnetdata/os/timestamps.c\n        src/libnetdata/os/timestamps.h\n        src/libnetdata/parsers/entries.c\n        src/libnetdata/parsers/entries.h\n        src/libnetdata/sanitizers/chart_id_and_name.c\n        src/libnetdata/sanitizers/chart_id_and_name.h\n        src/libnetdata/sanitizers/utf8-sanitizer.c\n        src/libnetdata/sanitizers/utf8-sanitizer.h\n        src/libnetdata/sanitizers/sanitizers.h\n        src/libnetdata/sanitizers/sanitizers-labels.c\n        src/libnetdata/sanitizers/sanitizers-labels.h\n        src/libnetdata/sanitizers/sanitizers-functions.c\n        src/libnetdata/sanitizers/sanitizers-functions.h\n        src/libnetdata/sanitizers/sanitizers-pluginsd.c\n        src/libnetdata/sanitizers/sanitizers-pluginsd.h\n        src/libnetdata/log/nd_log-internals.c\n        src/libnetdata/log/nd_log-internals.h\n        src/libnetdata/log/nd_log_limit.c\n        src/libnetdata/log/nd_log_limit.h\n        src/libnetdata/log/nd_log-config.c\n        src/libnetdata/log/nd_log-init.c\n        src/libnetdata/log/nd_log-to-syslog.c\n        src/libnetdata/log/nd_log-to-systemd-journal.c\n        src/libnetdata/log/nd_log-annotators.c\n        src/libnetdata/log/nd_log-field-formatters.c\n        src/libnetdata/log/nd_log-format-logfmt.c\n        src/libnetdata/log/nd_log-format-json.c\n        src/libnetdata/log/nd_log-to-file.c\n        src/libnetdata/log/nd_log-to-windows-events.c\n        src/libnetdata/string/utf8.c\n        src/libnetdata/spawn_server/log-forwarder.c\n        src/libnetdata/spawn_server/log-forwarder.h\n        src/libnetdata/log/nd_log-common.h\n        src/libnetdata/log/nd_log-to-windows-common.h\n        src/libnetdata/common.h\n        src/libnetdata/xxHash/xxhash.h\n        src/libnetdata/os/random.c\n        src/libnetdata/os/random.h\n        src/libnetdata/socket/nd-sock.c\n        src/libnetdata/socket/nd-sock.h\n        src/libnetdata/socket/listen-sockets.c\n        src/libnetdata/socket/listen-sockets.h\n        src/libnetdata/socket/poll-events.c\n        src/libnetdata/socket/poll-events.h\n        src/libnetdata/socket/connect-to.c\n        src/libnetdata/socket/connect-to.h\n        src/libnetdata/socket/socket-peers.c\n        src/libnetdata/socket/socket-peers.h\n        src/libnetdata/libjudy/judyl-typed.h\n        src/libnetdata/os/system_memory.c\n        src/libnetdata/os/system_memory.h\n        src/libnetdata/socket/nd-poll.c\n        src/libnetdata/socket/nd-poll.h\n        src/libnetdata/locks/spinlock.c\n        src/libnetdata/locks/spinlock.h\n        src/libnetdata/locks/rw-spinlock.c\n        src/libnetdata/locks/rw-spinlock.h\n        src/libnetdata/atomics/atomic_flags.h\n        src/libnetdata/atomics/atomics.h\n        src/libnetdata/locks/waitq.c\n        src/libnetdata/locks/waitq.h\n        src/libnetdata/object-state/object-state.c\n        src/libnetdata/object-state/object-state.h\n        src/libnetdata/locks/benchmark.c\n        src/libnetdata/locks/benchmark.h\n        src/libnetdata/locks/benchmark-rw.c\n        src/libnetdata/locks/benchmark-rw.h\n        src/libnetdata/log/nd_log-libunwind.c\n)\n\nset(LIBH2O_FILES\n        src/web/server/h2o/libh2o/deps/cloexec/cloexec.c\n        src/web/server/h2o/libh2o/deps/libgkc/gkc.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/close.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/connect.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/recv.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/send.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/send_text.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/socket.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/strerror.c\n        src/web/server/h2o/libh2o/deps/libyrmcds/text_mode.c\n        src/web/server/h2o/libh2o/deps/picohttpparser/picohttpparser.c\n        src/web/server/h2o/libh2o/lib/common/cache.c\n        src/web/server/h2o/libh2o/lib/common/file.c\n        src/web/server/h2o/libh2o/lib/common/filecache.c\n        src/web/server/h2o/libh2o/lib/common/hostinfo.c\n        src/web/server/h2o/libh2o/lib/common/http1client.c\n        src/web/server/h2o/libh2o/lib/common/memcached.c\n        src/web/server/h2o/libh2o/lib/common/memory.c\n        src/web/server/h2o/libh2o/lib/common/multithread.c\n        src/web/server/h2o/libh2o/lib/common/serverutil.c\n        src/web/server/h2o/libh2o/lib/common/socket.c\n        src/web/server/h2o/libh2o/lib/common/socketpool.c\n        src/web/server/h2o/libh2o/lib/common/string.c\n        src/web/server/h2o/libh2o/lib/common/time.c\n        src/web/server/h2o/libh2o/lib/common/timeout.c\n        src/web/server/h2o/libh2o/lib/common/url.c\n        src/web/server/h2o/libh2o/lib/core/config.c\n        src/web/server/h2o/libh2o/lib/core/configurator.c\n        src/web/server/h2o/libh2o/lib/core/context.c\n        src/web/server/h2o/libh2o/lib/core/headers.c\n        src/web/server/h2o/libh2o/lib/core/logconf.c\n        src/web/server/h2o/libh2o/lib/core/proxy.c\n        src/web/server/h2o/libh2o/lib/core/request.c\n        src/web/server/h2o/libh2o/lib/core/token.c\n        src/web/server/h2o/libh2o/lib/core/util.c\n        src/web/server/h2o/libh2o/lib/handler/access_log.c\n        src/web/server/h2o/libh2o/lib/handler/chunked.c\n        src/web/server/h2o/libh2o/lib/handler/compress.c\n        src/web/server/h2o/libh2o/lib/handler/compress/gzip.c\n        src/web/server/h2o/libh2o/lib/handler/errordoc.c\n        src/web/server/h2o/libh2o/lib/handler/expires.c\n        src/web/server/h2o/libh2o/lib/handler/fastcgi.c\n        src/web/server/h2o/libh2o/lib/handler/file.c\n        src/web/server/h2o/libh2o/lib/handler/headers.c\n        src/web/server/h2o/libh2o/lib/handler/mimemap.c\n        src/web/server/h2o/libh2o/lib/handler/proxy.c\n        src/web/server/h2o/libh2o/lib/handler/redirect.c\n        src/web/server/h2o/libh2o/lib/handler/reproxy.c\n        src/web/server/h2o/libh2o/lib/handler/throttle_resp.c\n        src/web/server/h2o/libh2o/lib/handler/status.c\n        src/web/server/h2o/libh2o/lib/handler/headers_util.c\n        src/web/server/h2o/libh2o/lib/handler/status/events.c\n        src/web/server/h2o/libh2o/lib/handler/status/requests.c\n        src/web/server/h2o/libh2o/lib/handler/http2_debug_state.c\n        src/web/server/h2o/libh2o/lib/handler/status/durations.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/access_log.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/compress.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/errordoc.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/expires.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/fastcgi.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/file.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/headers.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/proxy.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/redirect.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/reproxy.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/throttle_resp.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/status.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/http2_debug_state.c\n        src/web/server/h2o/libh2o/lib/handler/configurator/headers_util.c\n        src/web/server/h2o/libh2o/lib/http1.c\n        src/web/server/h2o/libh2o/lib/tunnel.c\n        src/web/server/h2o/libh2o/lib/http2/cache_digests.c\n        src/web/server/h2o/libh2o/lib/http2/casper.c\n        src/web/server/h2o/libh2o/lib/http2/connection.c\n        src/web/server/h2o/libh2o/lib/http2/frame.c\n        src/web/server/h2o/libh2o/lib/http2/hpack.c\n        src/web/server/h2o/libh2o/lib/http2/scheduler.c\n        src/web/server/h2o/libh2o/lib/http2/stream.c\n        src/web/server/h2o/libh2o/lib/http2/http2_debug_state.c\n)\n\nset(DAEMON_FILES\n        src/daemon/buildinfo.c\n        src/daemon/buildinfo.h\n        src/daemon/h2o-common.c\n        src/daemon/common.h\n        src/daemon/daemon.c\n        src/daemon/daemon.h\n        src/daemon/libuv_workers.c\n        src/daemon/libuv_workers.h\n        src/daemon/pulse/pulse.c\n        src/daemon/pulse/pulse.h\n        src/daemon/analytics.c\n        src/daemon/analytics.h\n        src/daemon/main.c\n        src/daemon/main.h\n        src/daemon/environment.c\n        src/daemon/win_system-info.c\n        src/daemon/win_system-info.h\n        src/daemon/signals.c\n        src/daemon/signals.h\n        src/daemon/service.c\n        src/daemon/daemon-shutdown-watcher.c\n        src/daemon/daemon-shutdown-watcher.h\n        src/daemon/static_threads.c\n        src/daemon/static_threads.h\n        src/daemon/commands.c\n        src/daemon/commands.h\n        src/daemon/pipename.c\n        src/daemon/pipename.h\n        src/daemon/unit_test.c\n        src/daemon/unit_test.h\n        src/daemon/dyncfg/dyncfg.c\n        src/daemon/dyncfg/dyncfg.h\n        src/daemon/dyncfg/dyncfg-files.c\n        src/daemon/dyncfg/dyncfg-unittest.c\n        src/daemon/dyncfg/dyncfg-inline.c\n        src/daemon/dyncfg/dyncfg-echo.c\n        src/daemon/dyncfg/dyncfg-internals.h\n        src/daemon/dyncfg/dyncfg-intercept.c\n        src/daemon/dyncfg/dyncfg-tree.c\n        src/daemon/pulse/pulse-http-api.c\n        src/daemon/pulse/pulse-http-api.h\n        src/daemon/pulse/pulse-queries.c\n        src/daemon/pulse/pulse-queries.h\n        src/daemon/pulse/pulse-ingestion.c\n        src/daemon/pulse/pulse-ingestion.h\n        src/daemon/pulse/pulse-ml.c\n        src/daemon/pulse/pulse-ml.h\n        src/daemon/pulse/pulse-gorilla.c\n        src/daemon/pulse/pulse-gorilla.h\n        src/daemon/pulse/pulse-daemon.c\n        src/daemon/pulse/pulse-daemon.h\n        src/daemon/pulse/pulse-daemon-memory.c\n        src/daemon/pulse/pulse-daemon-memory.h\n        src/daemon/pulse/pulse-sqlite3.c\n        src/daemon/pulse/pulse-sqlite3.h\n        src/daemon/pulse/pulse-db-dbengine.c\n        src/daemon/pulse/pulse-db-dbengine.h\n        src/daemon/pulse/pulse-string.c\n        src/daemon/pulse/pulse-string.h\n        src/daemon/pulse/pulse-heartbeat.c\n        src/daemon/pulse/pulse-heartbeat.h\n        src/daemon/pulse/pulse-dictionary.c\n        src/daemon/pulse/pulse-dictionary.h\n        src/daemon/pulse/pulse-workers.c\n        src/daemon/pulse/pulse-workers.h\n        src/daemon/pulse/pulse-trace-allocations.c\n        src/daemon/pulse/pulse-trace-allocations.h\n        src/daemon/pulse/pulse-aral.c\n        src/daemon/pulse/pulse-aral.h\n        src/daemon/config/netdata-conf-db.c\n        src/daemon/config/netdata-conf-db.h\n        src/daemon/config/netdata-conf.h\n        src/daemon/config/netdata-conf-backwards-compatibility.c\n        src/daemon/config/netdata-conf-backwards-compatibility.h\n        src/daemon/config/netdata-conf-web.c\n        src/daemon/config/netdata-conf-web.h\n        src/daemon/config/netdata-conf-directories.c\n        src/daemon/config/netdata-conf-directories.h\n        src/daemon/config/netdata-conf-logs.c\n        src/daemon/config/netdata-conf-logs.h\n        src/daemon/config/netdata-conf-global.c\n        src/daemon/config/netdata-conf-global.h\n        src/daemon/config/netdata-conf.c\n        src/daemon/daemon-shutdown.c\n        src/daemon/daemon-shutdown.h\n        src/daemon/daemon-service.c\n        src/daemon/daemon-service.h\n        src/daemon/pulse/pulse-db-rrd.c\n        src/daemon/pulse/pulse-db-rrd.h\n        src/daemon/config/netdata-conf-cloud.c\n        src/daemon/config/netdata-conf-cloud.h\n        src/daemon/config/netdata-conf-profile.c\n        src/daemon/config/netdata-conf-profile.h\n        src/daemon/pulse/pulse-daemon-memory-system.c\n)\n\nset(H2O_FILES\n        src/web/server/h2o/http_server.c\n        src/web/server/h2o/http_server.h\n        src/web/server/h2o/h2o_utils.c\n        src/web/server/h2o/h2o_utils.h\n        src/web/server/h2o/rrdpush.c\n        src/web/server/h2o/streaming.h\n        src/web/server/h2o/connlist.c\n        src/web/server/h2o/connlist.h\n)\n\nif(ENABLE_H2O)\n    list(APPEND DAEMON_FILES ${H2O_FILES})\nendif()\n\nset(API_PLUGIN_FILES\n        src/web/api/web_api.c\n        src/web/api/web_api.h\n        src/web/api/web_api_v1.c\n        src/web/api/web_api_v1.h\n        src/web/api/web_api_v2.c\n        src/web/api/web_api_v2.h\n        src/web/api/web_api_v3.c\n        src/web/api/web_api_v3.h\n        src/web/api/http_auth.c\n        src/web/api/http_auth.h\n        src/web/api/http_header.c\n        src/web/api/http_header.h\n        src/web/api/maps/rrdr_options.c\n        src/web/api/maps/rrdr_options.h\n        src/web/api/maps/contexts_options.c\n        src/web/api/maps/contexts_options.h\n        src/web/api/maps/datasource_formats.c\n        src/web/api/maps/datasource_formats.h\n        src/web/api/maps/maps.h\n        src/web/api/maps/contexts_alert_statuses.c\n        src/web/api/maps/contexts_alert_statuses.h\n        src/web/api/v1/api_v1_allmetrics.c\n        src/web/api/v1/api_v1_badge/web_buffer_svg.c\n        src/web/api/v1/api_v1_function.c\n        src/web/api/v1/api_v1_manage.c\n        src/web/api/v1/api_v1_calls.h\n        src/web/api/v1/api_v1_dbengine.c\n        src/web/api/v1/api_v1_config.c\n        src/web/api/v1/api_v1_functions.c\n        src/web/api/v1/api_v1_weights.c\n        src/web/api/v1/api_v1_info.c\n        src/web/api/v1/api_v1_registry.c\n        src/web/api/v1/api_v1_data.c\n        src/web/api/v1/api_v1_contexts.c\n        src/web/api/v1/api_v1_ml_info.c\n        src/web/api/v1/api_v1_aclk.c\n        src/web/api/v1/api_v1_context.c\n        src/web/api/v1/api_v1_alarms.c\n        src/web/api/v1/api_v1_charts.c\n        src/web/api/v2/api_v2_info.c\n        src/web/api/v2/api_v2_nodes.c\n        src/web/api/v2/api_v2_node_instances.c\n        src/web/api/v2/api_v2_q.c\n        src/web/api/v2/api_v2_versions.c\n        src/web/api/v2/api_v2_functions.c\n        src/web/api/v2/api_v2_alerts.c\n        src/web/api/v2/api_v2_alert_transitions.c\n        src/web/api/v2/api_v2_ilove/ilove.c\n        src/web/api/v2/api_v2_bearer.c\n        src/web/api/v2/api_v2_calls.h\n        src/web/api/v2/api_v2_data.c\n        src/web/api/v2/api_v2_progress.c\n        src/web/api/v2/api_v2_weights.c\n        src/web/api/v2/api_v2_alert_config.c\n        src/web/api/v2/api_v2_contexts.c\n        src/web/api/v2/api_v2_claim.c\n        src/web/api/v2/api_v2_webrtc.c\n        src/web/api/v3/api_v3_calls.h\n        src/web/api/v3/api_v3_settings.c\n        src/web/api/functions/functions.c\n        src/web/api/functions/functions.h\n        src/web/api/functions/function-progress.c\n        src/web/api/functions/function-progress.h\n        src/web/api/functions/function-streaming.c\n        src/web/api/functions/function-streaming.h\n        src/web/api/queries/rrdr.c\n        src/web/api/queries/rrdr.h\n        src/web/api/queries/query.c\n        src/web/api/queries/query.h\n        src/web/api/queries/average/average.c\n        src/web/api/queries/average/average.h\n        src/web/api/queries/countif/countif.c\n        src/web/api/queries/countif/countif.h\n        src/web/api/queries/incremental_sum/incremental_sum.c\n        src/web/api/queries/incremental_sum/incremental_sum.h\n        src/web/api/queries/max/max.c\n        src/web/api/queries/max/max.h\n        src/web/api/queries/min/min.c\n        src/web/api/queries/min/min.h\n        src/web/api/queries/sum/sum.c\n        src/web/api/queries/sum/sum.h\n        src/web/api/queries/median/median.c\n        src/web/api/queries/median/median.h\n        src/web/api/queries/percentile/percentile.c\n        src/web/api/queries/percentile/percentile.h\n        src/web/api/queries/stddev/stddev.c\n        src/web/api/queries/stddev/stddev.h\n        src/web/api/queries/ses/ses.c\n        src/web/api/queries/ses/ses.h\n        src/web/api/queries/des/des.c\n        src/web/api/queries/des/des.h\n        src/web/api/queries/trimmed_mean/trimmed_mean.c\n        src/web/api/queries/trimmed_mean/trimmed_mean.h\n        src/web/api/queries/weights.c\n        src/web/api/queries/weights.h\n        src/web/api/formatters/rrd2json.c\n        src/web/api/formatters/rrd2json.h\n        src/web/api/formatters/csv/csv.c\n        src/web/api/formatters/csv/csv.h\n        src/web/api/formatters/json/json.c\n        src/web/api/formatters/json/json.h\n        src/web/api/formatters/ssv/ssv.c\n        src/web/api/formatters/ssv/ssv.h\n        src/web/api/formatters/value/value.c\n        src/web/api/formatters/value/value.h\n        src/web/api/formatters/json_wrapper.c\n        src/web/api/formatters/json_wrapper.h\n        src/web/api/formatters/charts2json.c\n        src/web/api/formatters/charts2json.h\n        src/web/api/formatters/rrdset2json.c\n        src/web/api/formatters/rrdset2json.h\n        src/web/rtc/webrtc.c\n        src/web/rtc/webrtc.h\n        src/web/api/functions/function-bearer_get_token.c\n        src/web/api/functions/function-bearer_get_token.h\n        src/web/api/v3/api_v3_me.c\n)\n\nset(EXPORTING_ENGINE_FILES\n        src/exporting/exporting_engine.c\n        src/exporting/exporting_engine.h\n        src/exporting/graphite/graphite.c\n        src/exporting/graphite/graphite.h\n        src/exporting/json/json.c\n        src/exporting/json/json.h\n        src/exporting/opentsdb/opentsdb.c\n        src/exporting/opentsdb/opentsdb.h\n        src/exporting/prometheus/prometheus.c\n        src/exporting/prometheus/prometheus.h\n        src/exporting/read_config.c\n        src/exporting/clean_connectors.c\n        src/exporting/init_connectors.c\n        src/exporting/process_data.c\n        src/exporting/check_filters.c\n        src/exporting/send_data.c\n        src/exporting/send_internal_metrics.c\n)\n\nset(HEALTH_PLUGIN_FILES\n        src/health/health.c\n        src/health/health.h\n        src/health/health_config.c\n        src/health/health_json.c\n        src/health/health_log.c\n        src/health/health_prototypes.c\n        src/health/health_prototypes.h\n        src/health/health_silencers.c\n        src/health/health_silencers.h\n        src/health/health_internals.h\n        src/health/health_notifications.c\n        src/health/health_event_loop.c\n        src/health/health_dyncfg.c\n        src/health/health_variable.c\n        src/health/rrdcalc.c\n        src/health/rrdcalc.h\n        src/health/rrdvar.c\n        src/health/rrdvar.h\n        src/health/health-alert-entry.h\n        src/health/health-alert-log.h\n)\n\nset(IDLEJITTER_PLUGIN_FILES src/collectors/idlejitter.plugin/plugin_idlejitter.c)\n\nif(ENABLE_ML)\n        set(ML_FILES\n                src/ml/ad_charts.h\n                src/ml/ad_charts.cc\n                src/ml/dlib/dlib/all/source.cpp\n                src/ml/ml.cc\n                src/ml/ml_calculated_number.h\n                src/ml/ml_host.h\n                src/ml/ml_config.h\n                src/ml/ml_config.cc\n                src/ml/ml_dimension.h\n                src/ml/ml_enums.h\n                src/ml/ml_enums.cc\n                src/ml/ml_features.h\n                src/ml/ml_features.cc\n                src/ml/ml_kmeans.h\n                src/ml/ml_kmeans.cc\n                src/ml/ml_queue.h\n                src/ml/ml_worker.h\n                src/ml/ml_string_wrapper.h\n                src/ml/ml_queue.cc\n                src/ml/ml_private.h\n                src/ml/ml_public.h\n                src/ml/ml_public.cc\n        )\n\n        if(NOT ENABLE_MIMALLOC)\n                list(APPEND ML_FILES src/ml/ml_memory.cc)\n        endif()\nelse()\n        set(ML_FILES\n                src/ml/ml_public.h\n                src/ml/ml-dummy.c\n        )\nendif()\n\nset(INTERNAL_COLLECTORS_FILES\n        src/collectors/common-contexts/common-contexts.h\n        src/collectors/common-contexts/disk-await.h\n        src/collectors/common-contexts/disk-avgsz.h\n        src/collectors/common-contexts/disk-busy.h\n        src/collectors/common-contexts/disk-io.h\n        src/collectors/common-contexts/disk-iotime.h\n        src/collectors/common-contexts/disk-ops.h\n        src/collectors/common-contexts/disk-qops.h\n        src/collectors/common-contexts/disk-svctm.h\n        src/collectors/common-contexts/disk-util.h\n        src/collectors/common-contexts/system-io.h\n        src/collectors/common-contexts/system-interrupts.h\n        src/collectors/common-contexts/system-processes.h\n        src/collectors/common-contexts/system-ram.h\n        src/collectors/common-contexts/mem-swap.h\n        src/collectors/common-contexts/mem-pgfaults.h\n        src/collectors/common-contexts/mem-available.h\n)\n\nset(PLUGINSD_PLUGIN_FILES\n        src/plugins.d/plugins_d.c\n        src/plugins.d/plugins_d.h\n        src/plugins.d/pluginsd_dyncfg.c\n        src/plugins.d/pluginsd_dyncfg.h\n        src/plugins.d/pluginsd_functions.c\n        src/plugins.d/pluginsd_functions.h\n        src/plugins.d/pluginsd_internals.c\n        src/plugins.d/pluginsd_internals.h\n        src/plugins.d/pluginsd_parser.c\n        src/plugins.d/pluginsd_parser.h\n        src/plugins.d/pluginsd_replication.c\n        src/plugins.d/pluginsd_replication.h\n)\n\nset(RRD_PLUGIN_FILES\n        src/database/contexts/api_v1_contexts.c\n        src/database/contexts/api_v2_contexts.c\n        src/database/contexts/api_v2_contexts.h\n        src/database/contexts/api_v2_contexts_agents.c\n        src/database/contexts/api_v2_contexts_alerts.c\n        src/database/contexts/api_v2_contexts_alerts.h\n        src/database/contexts/api_v2_contexts_alert_transitions.c\n        src/database/contexts/api_v2_contexts_alert_config.c\n        src/database/contexts/context.c\n        src/database/contexts/instance.c\n        src/database/contexts/internal.h\n        src/database/contexts/metric.c\n        src/database/contexts/query_scope.c\n        src/database/contexts/query_target.c\n        src/database/contexts/rrdcontext.c\n        src/database/contexts/rrdcontext.h\n        src/database/contexts/worker.c\n        src/database/rrdcollector.c\n        src/database/rrdcollector.h\n        src/database/rrddim.c\n        src/database/rrdfunctions.c\n        src/database/rrdfunctions.h\n        src/database/rrdfunctions-inline.c\n        src/database/rrdfunctions-inline.h\n        src/database/rrdhost.c\n        src/database/rrdlabels.c\n        src/database/rrd.c\n        src/database/rrd.h\n        src/database/rrdset.c\n        src/database/storage_engine.c\n        src/database/storage_engine.h\n        src/database/ram/rrddim_mem.c\n        src/database/ram/rrddim_mem.h\n        src/database/sqlite/sqlite_metadata.c\n        src/database/sqlite/sqlite_metadata.h\n        src/database/sqlite/sqlite_functions.c\n        src/database/sqlite/sqlite_functions.h\n        src/database/sqlite/sqlite_context.c\n        src/database/sqlite/sqlite_context.h\n        src/database/sqlite/sqlite_db_migration.c\n        src/database/sqlite/sqlite_db_migration.h\n        src/database/sqlite/sqlite_aclk.c\n        src/database/sqlite/sqlite_aclk.h\n        src/database/sqlite/sqlite_health.c\n        src/database/sqlite/sqlite_health.h\n        src/database/sqlite/sqlite_aclk_node.c\n        src/database/sqlite/sqlite_aclk_node.h\n        src/database/sqlite/sqlite_aclk_alert.c\n        src/database/sqlite/sqlite_aclk_alert.h\n        src/database/sqlite/vendored/sqlite3.c\n        src/database/sqlite/vendored/sqlite3.h\n        src/database/sqlite/vendored/sqlite3recover.c\n        src/database/sqlite/vendored/sqlite3recover.h\n        src/database/sqlite/vendored/dbdata.c\n        src/database/KolmogorovSmirnovDist.c\n        src/database/KolmogorovSmirnovDist.h\n        src/database/rrdfunctions-inflight.c\n        src/database/rrdfunctions-inflight.h\n        src/database/rrdfunctions-exporters.c\n        src/database/rrdfunctions-exporters.h\n        src/database/rrdfunctions-internals.h\n        src/database/rrdcollector-internals.h\n        src/database/rrd-database-mode.h\n        src/database/rrd-database-mode.c\n        src/database/rrdhost-system-info.c\n        src/database/rrdhost-system-info.h\n        src/database/contexts/contexts-loading.c\n)\n\nif(ENABLE_DBENGINE)\n    list(APPEND RRD_PLUGIN_FILES\n            src/database/engine/rrdengine.c\n            src/database/engine/rrdengine.h\n            src/database/engine/rrddiskprotocol.h\n            src/database/engine/datafile.c\n            src/database/engine/datafile.h\n            src/database/engine/journalfile.c\n            src/database/engine/journalfile.h\n            src/database/engine/rrdenginelib.c\n            src/database/engine/rrdenginelib.h\n            src/database/engine/rrdengineapi.c\n            src/database/engine/rrdengineapi.h\n            src/database/engine/pagecache.c\n            src/database/engine/pagecache.h\n            src/database/engine/page_test.cc\n            src/database/engine/page.c\n            src/database/engine/page.h\n            src/database/engine/cache.c\n            src/database/engine/cache.h\n            src/database/engine/metric.c\n            src/database/engine/metric.h\n            src/database/engine/pdc.c\n            src/database/engine/pdc.h\n            src/database/engine/dbengine-unittest.c\n            src/database/engine/dbengine-stresstest.c\n            src/database/engine/dbengine-compression.c\n            src/database/engine/dbengine-compression.h\n    )\nendif()\n\nset(REGISTRY_PLUGIN_FILES\n        src/registry/registry.c\n        src/registry/registry.h\n        src/registry/registry_db.c\n        src/registry/registry_init.c\n        src/registry/registry_internals.c\n        src/registry/registry_internals.h\n        src/registry/registry_log.c\n        src/registry/registry_machine.c\n        src/registry/registry_machine.h\n        src/registry/registry_person.c\n        src/registry/registry_person.h\n)\n\nset(STATSD_PLUGIN_FILES\n        src/collectors/statsd.plugin/statsd.c\n)\n\nset(SYSTEMD_JOURNAL_PLUGIN_FILES\n        src/collectors/systemd-journal.plugin/systemd-journal.c\n        src/collectors/systemd-journal.plugin/systemd-internals.h\n        src/collectors/systemd-journal.plugin/systemd-main.c\n        src/collectors/systemd-journal.plugin/systemd-units.c\n        src/collectors/systemd-journal.plugin/systemd-journal.c\n        src/collectors/systemd-journal.plugin/systemd-journal-annotations.c\n        src/collectors/systemd-journal.plugin/systemd-journal-files.c\n        src/collectors/systemd-journal.plugin/systemd-journal-fstat.c\n        src/collectors/systemd-journal.plugin/systemd-journal-watcher.c\n        src/collectors/systemd-journal.plugin/systemd-journal-dyncfg.c\n        src/libnetdata/os/system-maps/system-services.h\n        src/collectors/systemd-journal.plugin/systemd-journal-sampling.h\n)\n\nset(STREAMING_PLUGIN_FILES\n        src/streaming/stream.h\n        src/streaming/stream-compression/compression.c\n        src/streaming/stream-compression/compression.h\n        src/streaming/stream-compression/brotli.c\n        src/streaming/stream-compression/brotli.h\n        src/streaming/stream-compression/gzip.c\n        src/streaming/stream-compression/gzip.h\n        src/streaming/stream-compression/lz4.c\n        src/streaming/stream-compression/lz4.h\n        src/streaming/stream-compression/zstd.c\n        src/streaming/stream-compression/zstd.h\n        src/streaming/stream-receiver.c\n        src/streaming/stream-sender.c\n        src/streaming/stream-replication-sender.c\n        src/streaming/stream-replication-sender.h\n        src/streaming/h2o-common.h\n        src/streaming/protocol/command-nodeid.c\n        src/streaming/protocol/commands.c\n        src/streaming/protocol/commands.h\n        src/streaming/protocol/command-claimed_id.c\n        src/streaming/stream-path.c\n        src/streaming/stream-path.h\n        src/streaming/stream-capabilities.c\n        src/streaming/stream-capabilities.h\n        src/streaming/stream-connector.c\n        src/streaming/stream-sender-internals.h\n        src/streaming/stream-sender-execute.c\n        src/streaming/stream-sender-commit.c\n        src/streaming/stream-parents.c\n        src/streaming/stream-handshake.c\n        src/streaming/protocol/command-function.c\n        src/streaming/protocol/command-host-labels.c\n        src/streaming/protocol/command-chart-definition.c\n        src/streaming/protocol/command-begin-set-end-v2.c\n        src/streaming/protocol/command-host-variables.c\n        src/streaming/stream-conf.c\n        src/streaming/stream-conf.h\n        src/streaming/stream-handshake.h\n        src/streaming/stream-parents.h\n        src/streaming/rrdhost-status.c\n        src/streaming/rrdhost-status.h\n        src/streaming/stream-sender-api.c\n        src/streaming/stream-receiver-internals.h\n        src/streaming/stream-receiver-api.c\n        src/streaming/stream-thread.c\n        src/streaming/stream-thread.h\n        src/streaming/stream-receiver-connection.c\n        src/streaming/stream-sender-commit.h\n        src/streaming/stream-traffic-types.h\n        src/streaming/stream-circular-buffer.c\n        src/streaming/stream-circular-buffer.h\n        src/streaming/stream-control.c\n        src/streaming/stream-control.h\n        src/streaming/stream-waiting-list.c\n        src/streaming/stream-waiting-list.h\n        src/streaming/stream-replication-receiver.c\n        src/streaming/stream-replication-receiver.h\n        src/streaming/stream-replication-tracking.c\n        src/streaming/stream-replication-tracking.h\n        src/streaming/protocol/command-begin-set-end-v1.c\n        src/streaming/protocol/command-begin-set-end-init.c\n)\n\nset(WEB_PLUGIN_FILES\n        src/web/server/web_client.c\n        src/web/server/web_client.h\n        src/web/server/web_server.c\n        src/web/server/web_server.h\n        src/web/server/static/static-threaded.c\n        src/web/server/static/static-threaded.h\n        src/web/server/web_client_cache.c\n        src/web/server/web_client_cache.h\n        src/web/api/v3/api_v3_stream_info.c\n        src/web/api/v3/api_v3_stream_path.c\n        src/web/api/queries/backfill.c\n        src/web/api/queries/backfill.h\n        src/web/api/functions/function-metrics-cardinality.c\n        src/web/api/functions/function-metrics-cardinality.h\n)\n\nset(CLAIM_PLUGIN_FILES\n        src/claim/claim.c\n        src/claim/claim.h\n        src/claim/claim_id.c\n        src/claim/claim_id.h\n        src/claim/cloud-conf.c\n        src/claim/claim-with-api.c\n        src/claim/cloud-status.c\n        src/claim/cloud-status.h\n)\n\nset(CLAIM_WINDOWS_FILES\n        src/claim/main.c\n        src/claim/main.h\n        src/claim/ui.c\n        src/claim/ui.h\n)\n\nset(ACLK_ALWAYS_BUILD\n        src/aclk/aclk_proxy.c\n        src/aclk/aclk_proxy.h\n        src/aclk/aclk.c\n        src/aclk/aclk.h\n        src/aclk/aclk_capas.c\n        src/aclk/aclk_capas.h\n        src/aclk/aclk_util.c\n        src/aclk/aclk_util.h\n        src/aclk/https_client.c\n        src/aclk/https_client.h\n        src/libnetdata/c_rhash/c_rhash.c\n        src/libnetdata/c_rhash/c_rhash.h\n        src/libnetdata/c_rhash/c_rhash_internal.h\n)\n\nset(TIMEX_PLUGIN_FILES\n        src/collectors/timex.plugin/plugin_timex.c\n)\n\nset(PROFILE_PLUGIN_FILES\n        src/collectors/profile.plugin/plugin_profile.cc\n)\n\nset(CGROUPS_PLUGIN_FILES\n        src/collectors/cgroups.plugin/sys_fs_cgroup.c\n        src/collectors/cgroups.plugin/sys_fs_cgroup.h\n        src/collectors/cgroups.plugin/cgroup-internals.h\n        src/collectors/cgroups.plugin/cgroup-discovery.c\n        src/collectors/cgroups.plugin/cgroup-charts.c\n        src/collectors/cgroups.plugin/cgroup-top.c\n)\n\nset(DISKSPACE_PLUGIN_FILES\n        src/collectors/diskspace.plugin/plugin_diskspace.c\n)\n\nset(MACOS_PLUGIN_FILES\n        src/collectors/macos.plugin/plugin_macos.c\n        src/collectors/macos.plugin/plugin_macos.h\n        src/collectors/macos.plugin/macos_sysctl.c\n        src/collectors/macos.plugin/macos_mach_smi.c\n        src/collectors/macos.plugin/macos_fw.c\n)\n\nset(FREEBSD_PLUGIN_FILES\n        src/collectors/freebsd.plugin/plugin_freebsd.c\n        src/collectors/freebsd.plugin/plugin_freebsd.h\n        src/collectors/freebsd.plugin/freebsd_sysctl.c\n        src/collectors/freebsd.plugin/freebsd_getmntinfo.c\n        src/collectors/freebsd.plugin/freebsd_getifaddrs.c\n        src/collectors/freebsd.plugin/freebsd_devstat.c\n        src/collectors/freebsd.plugin/freebsd_kstat_zfs.c\n        src/collectors/freebsd.plugin/freebsd_ipfw.c\n        src/collectors/proc.plugin/zfs_common.c\n        src/collectors/proc.plugin/zfs_common.h\n)\n\nset(WINDOWS_EVENTS_PLUGIN_FILES\n        src/collectors/windows-events.plugin/windows-events.c\n        src/collectors/windows-events.plugin/windows-events.h\n        src/collectors/windows-events.plugin/windows-events-query.h\n        src/collectors/windows-events.plugin/windows-events-query.c\n        src/collectors/windows-events.plugin/windows-events-sources.c\n        src/collectors/windows-events.plugin/windows-events-sources.h\n        src/collectors/windows-events.plugin/windows-events-unicode.c\n        src/collectors/windows-events.plugin/windows-events-unicode.h\n        src/collectors/windows-events.plugin/windows-events-xml.c\n        src/collectors/windows-events.plugin/windows-events-xml.h\n        src/collectors/windows-events.plugin/windows-events-providers.c\n        src/collectors/windows-events.plugin/windows-events-providers.h\n        src/collectors/windows-events.plugin/windows-events-fields-cache.c\n        src/collectors/windows-events.plugin/windows-events-fields-cache.h\n        src/collectors/windows-events.plugin/windows-events-query-builder.c\n        src/collectors/windows-events.plugin/windows-events-query-builder.h\n        src/collectors/windows-events.plugin/windows-events-query-evt-variant.c\n)\n\nset(WINDOWS_PLUGIN_FILES\n        src/collectors/windows.plugin/windows_plugin.c\n        src/collectors/windows.plugin/windows_plugin.h\n        src/collectors/windows.plugin/GetSystemUptime.c\n        src/collectors/windows.plugin/GetSystemRAM.c\n        src/collectors/windows.plugin/GetSystemCPU.c\n        src/collectors/windows.plugin/perflib-rrd.c\n        src/collectors/windows.plugin/perflib-rrd.h\n        src/collectors/windows.plugin/perflib-mssql.c\n        src/collectors/windows.plugin/perflib-storage.c\n        src/collectors/windows.plugin/perflib-processor.c\n        src/collectors/windows.plugin/perflib-thermalzone.c\n        src/collectors/windows.plugin/perflib-objects.c\n        src/collectors/windows.plugin/perflib-network.c\n        src/collectors/windows.plugin/perflib-netframework.c\n        src/collectors/windows.plugin/perflib-memory.c\n        src/collectors/windows.plugin/perflib-processes.c\n        src/collectors/windows.plugin/perflib-web-service.c\n        src/collectors/windows.plugin/perflib-hyperv.c\n)\n\nset(PROC_PLUGIN_FILES\n        src/collectors/proc.plugin/ipc.c\n        src/collectors/proc.plugin/plugin_proc.c\n        src/collectors/proc.plugin/plugin_proc.h\n        src/collectors/proc.plugin/proc_sys_fs_file_nr.c\n        src/collectors/proc.plugin/proc_diskstats.c\n        src/collectors/proc.plugin/proc_mdstat.c\n        src/collectors/proc.plugin/proc_interrupts.c\n        src/collectors/proc.plugin/proc_softirqs.c\n        src/collectors/proc.plugin/proc_loadavg.c\n        src/collectors/proc.plugin/proc_meminfo.c\n        src/collectors/proc.plugin/proc_pagetypeinfo.c\n        src/collectors/proc.plugin/proc_net_dev.c\n        src/collectors/proc.plugin/proc_net_dev_renames.c\n        src/collectors/proc.plugin/proc_net_dev_renames.h\n        src/collectors/proc.plugin/proc_net_wireless.c\n        src/collectors/proc.plugin/proc_net_ip_vs_stats.c\n        src/collectors/proc.plugin/proc_net_netstat.c\n        src/collectors/proc.plugin/proc_net_rpc_nfs.c\n        src/collectors/proc.plugin/proc_net_rpc_nfsd.c\n        src/collectors/proc.plugin/proc_net_sctp_snmp.c\n        src/collectors/proc.plugin/proc_net_sockstat.c\n        src/collectors/proc.plugin/proc_net_sockstat6.c\n        src/collectors/proc.plugin/proc_net_softnet_stat.c\n        src/collectors/proc.plugin/proc_net_stat_conntrack.c\n        src/collectors/proc.plugin/proc_net_stat_synproxy.c\n        src/collectors/proc.plugin/proc_self_mountinfo.c\n        src/collectors/proc.plugin/proc_self_mountinfo.h\n        src/collectors/proc.plugin/zfs_common.c\n        src/collectors/proc.plugin/zfs_common.h\n        src/collectors/proc.plugin/proc_spl_kstat_zfs.c\n        src/collectors/proc.plugin/proc_stat.c\n        src/collectors/proc.plugin/proc_sys_kernel_random_entropy_avail.c\n        src/collectors/proc.plugin/proc_vmstat.c\n        src/collectors/proc.plugin/proc_uptime.c\n        src/collectors/proc.plugin/run_reboot_required.c\n        src/collectors/proc.plugin/proc_pressure.c\n        src/collectors/proc.plugin/proc_pressure.h\n        src/collectors/proc.plugin/sys_kernel_mm_ksm.c\n        src/collectors/proc.plugin/sys_block_zram.c\n        src/collectors/proc.plugin/sys_devices_system_edac_mc.c\n        src/collectors/proc.plugin/sys_devices_system_node.c\n        src/collectors/proc.plugin/sys_class_infiniband.c\n        src/collectors/proc.plugin/sys_fs_btrfs.c\n        src/collectors/proc.plugin/sys_class_power_supply.c\n        src/collectors/proc.plugin/sys_devices_pci_aer.c\n        src/collectors/proc.plugin/sys_class_drm.c\n)\n\nset(TC_PLUGIN_FILES\n        src/collectors/tc.plugin/plugin_tc.c\n)\n\nset(NETDATA_FILES\n        src/collectors/all.h\n        ${DAEMON_FILES}\n        ${API_PLUGIN_FILES}\n        ${EXPORTING_ENGINE_FILES}\n        ${HEALTH_PLUGIN_FILES}\n        ${IDLEJITTER_PLUGIN_FILES}\n        ${ML_FILES}\n        ${PLUGINSD_PLUGIN_FILES}\n        ${RRD_PLUGIN_FILES}\n        ${REGISTRY_PLUGIN_FILES}\n        ${STATSD_PLUGIN_FILES}\n        ${STREAMING_PLUGIN_FILES}\n        ${WEB_PLUGIN_FILES}\n        ${CLAIM_PLUGIN_FILES}\n        ${ACLK_ALWAYS_BUILD}\n        ${PROFILE_PLUGIN_FILES}\n)\n\nif(OS_LINUX)\n        list(APPEND NETDATA_FILES\n                src/daemon/static_threads_linux.c\n                ${CGROUPS_PLUGIN_FILES}\n                ${DISKSPACE_PLUGIN_FILES}\n                ${PROC_PLUGIN_FILES}\n                ${TC_PLUGIN_FILES}\n                ${TIMEX_PLUGIN_FILES}\n                ${INTERNAL_COLLECTORS_FILES}\n        )\n\n        if(ENABLE_SENTRY)\n            list(APPEND NETDATA_FILES\n                    src/daemon/sentry-native/sentry-native.c\n                    src/daemon/sentry-native/sentry-native.h)\n        endif()\nelseif(OS_MACOS)\n        list(APPEND NETDATA_FILES\n                src/daemon/static_threads_macos.c\n                ${MACOS_PLUGIN_FILES}\n                ${TIMEX_PLUGIN_FILES}\n                ${INTERNAL_COLLECTORS_FILES}\n        )\nelseif(OS_FREEBSD)\n        list(APPEND NETDATA_FILES\n                src/daemon/static_threads_freebsd.c\n                ${FREEBSD_PLUGIN_FILES}\n                ${TIMEX_PLUGIN_FILES}\n                ${INTERNAL_COLLECTORS_FILES}\n        )\nelseif(OS_WINDOWS)\n        list(APPEND NETDATA_FILES\n                src/daemon/static_threads_windows.c\n                src/daemon/winsvc.cc\n                ${WINDOWS_PLUGIN_FILES}\n                ${INTERNAL_COLLECTORS_FILES}\n        )\nendif()\n\nset(MQTT_WEBSOCKETS_FILES\n        src/aclk/mqtt_websockets/mqtt_wss_client.c\n        src/aclk/mqtt_websockets/mqtt_wss_client.h\n        src/aclk/mqtt_websockets/ws_client.c\n        src/aclk/mqtt_websockets/ws_client.h\n        src/aclk/mqtt_websockets/mqtt_ng.c\n        src/aclk/mqtt_websockets/mqtt_ng.h\n        src/aclk/mqtt_websockets/common_public.c\n        src/aclk/mqtt_websockets/common_public.h\n        src/aclk/mqtt_websockets/common_internal.h\n)\n\nset(ACLK_PROTO_DEFS\n        src/aclk/aclk-schemas/proto/aclk/v1/lib.proto\n        src/aclk/aclk-schemas/proto/agent/v1/disconnect.proto\n        src/aclk/aclk-schemas/proto/agent/v1/connection.proto\n        src/aclk/aclk-schemas/proto/alarm/v1/config.proto\n        src/aclk/aclk-schemas/proto/alarm/v1/stream.proto\n        src/aclk/aclk-schemas/proto/nodeinstance/connection/v1/connection.proto\n        src/aclk/aclk-schemas/proto/nodeinstance/create/v1/creation.proto\n        src/aclk/aclk-schemas/proto/nodeinstance/info/v1/info.proto\n        src/aclk/aclk-schemas/proto/context/v1/context.proto\n        src/aclk/aclk-schemas/proto/context/v1/stream.proto\n        src/aclk/aclk-schemas/proto/agent/v1/cmds.proto\n)\n\nset(ACLK_FILES\n        src/aclk/aclk_query.c\n        src/aclk/aclk_query.h\n        src/aclk/aclk_query_queue.c\n        src/aclk/aclk_query_queue.h\n        src/aclk/aclk_otp.c\n        src/aclk/aclk_otp.h\n        src/aclk/aclk_tx_msgs.c\n        src/aclk/aclk_tx_msgs.h\n        src/aclk/aclk_rx_msgs.c\n        src/aclk/aclk_rx_msgs.h\n        src/aclk/aclk_alarm_api.c\n        src/aclk/aclk_alarm_api.h\n        src/aclk/aclk_contexts_api.c\n        src/aclk/aclk_contexts_api.h\n        src/aclk/schema-wrappers/connection.cc\n        src/aclk/schema-wrappers/connection.h\n        src/aclk/schema-wrappers/node_connection.cc\n        src/aclk/schema-wrappers/node_connection.h\n        src/aclk/schema-wrappers/node_creation.cc\n        src/aclk/schema-wrappers/node_creation.h\n        src/aclk/schema-wrappers/alarm_stream.cc\n        src/aclk/schema-wrappers/alarm_stream.h\n        src/aclk/schema-wrappers/alarm_config.cc\n        src/aclk/schema-wrappers/alarm_config.h\n        src/aclk/schema-wrappers/node_info.cc\n        src/aclk/schema-wrappers/node_info.h\n        src/aclk/schema-wrappers/capability.cc\n        src/aclk/schema-wrappers/capability.h\n        src/aclk/schema-wrappers/proto_2_json.cc\n        src/aclk/schema-wrappers/proto_2_json.h\n        src/aclk/schema-wrappers/context_stream.cc\n        src/aclk/schema-wrappers/context_stream.h\n        src/aclk/schema-wrappers/context.cc\n        src/aclk/schema-wrappers/context.h\n        src/aclk/schema-wrappers/schema_wrappers.h\n        src/aclk/schema-wrappers/schema_wrapper_utils.cc\n        src/aclk/schema-wrappers/schema_wrapper_utils.h\n        src/aclk/schema-wrappers/agent_cmds.cc\n        src/aclk/schema-wrappers/agent_cmds.h\n)\n\n\nset(MONGODB_EXPORTING_FILES\n        src/exporting/mongodb/mongodb.c\n        src/exporting/mongodb/mongodb.h\n)\n\nset(PROMETHEUS_REMOTE_WRITE_EXPORTING_FILES\n        src/exporting/prometheus/remote_write/remote_write.c\n        src/exporting/prometheus/remote_write/remote_write.h\n        src/exporting/prometheus/remote_write/remote_write_request.cc\n        src/exporting/prometheus/remote_write/remote_write_request.h\n)\n\n#\n# build h2o\n#\n\nif(ENABLE_H2O)\n        add_library(h2o STATIC ${LIBH2O_FILES})\n\n        target_include_directories(h2o BEFORE PUBLIC\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/include\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/cloexec\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/brotli/enc\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/golombset\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/libgkc\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/libyrmcds\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/klib\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/neverbleed\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/picohttpparser\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/picotest\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/yaml/include\"\n                \"${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/deps/yoml\"\n        )\n\n        target_compile_options(h2o PRIVATE\n                -Wno-all -Wno-extra\n                -Wno-shadow\n                -Wno-deprecated-declarations\n                -Wformat\n        )\n\n        target_compile_options(h2o PUBLIC -DH2O_USE_LIBUV=0)\n        target_link_libraries(h2o PRIVATE PkgConfig::TLS)\n        target_compile_definitions(h2o PRIVATE\n                \"$<$<NOT:$<BOOL:${ARCH_SUPPORTS_64BIT_ATOMICS}>>:H2O_NO_64BIT_ATOMICS>\")\nendif()\n\n#\n# build libjudy\n#\n\nadd_library(judy STATIC ${LIBJUDY_SOURCES})\n\ntarget_compile_options(judy PRIVATE\n        -Wno-all -Wno-extra\n        -Wno-shadow\n        -Wformat\n)\n\ntarget_compile_definitions(judy PRIVATE\n        JUDYL\n        $<$<EQUAL:${CMAKE_SIZEOF_VOID_P},8>:JU_64BIT>\n)\n\ntarget_include_directories(judy PUBLIC\n        src/libnetdata/libjudy/vendored\n        src/libnetdata/libjudy/vendored/JudyCommon\n)\n\nset_source_files_properties(${LIBJUDY_PREV_FILES} PROPERTIES COMPILE_OPTIONS \"-DJUDYPREV\")\nset_source_files_properties(${LIBJUDY_NEXT_FILES} PROPERTIES COMPILE_OPTIONS \"-DJUDYNEXT\")\nset_source_files_properties(src/libnetdata/libjudy/vendored/JudyL/j__udyLGet.c PROPERTIES COMPILE_OPTIONS \"-DJUDYGETINLINE\")\nset_source_files_properties(src/libnetdata/libjudy/vendored/JudyL/JudyLByCount.c PROPERTIES COMPILE_OPTIONS \"-DNOSMARTJBB -DNOSMARTJBU -DNOSMARTJLB\")\nset_source_files_properties(JudyLTables.c PROPERTIES COMPILE_OPTIONS \"-I${CMAKE_SOURCE_DIR}/src/libnetdata/libjudy/src/JudyL\")\n\n#\n# build libnetdata\n#\n\nif(OS_LINUX)\n        include(NetdataDetectSystemd)\n        detect_systemd()\nendif()\n\nadd_library(libnetdata STATIC ${LIBNETDATA_FILES})\n\ntarget_include_directories(libnetdata BEFORE PUBLIC ${CONFIG_H_DIR} ${CMAKE_SOURCE_DIR}/src)\n\n# pthread (FIXME: use find_package for this)\n\n# set(CMAKE_THREAD_PREFER_PTHREAD TRUE)\n# set(THREADS_PREFER_PTHREAD_FLAG TRUE)\n# find_package(Threads REQUIRED)\n\n# add_executable(test test.cpp)\n# target_link_libraries(test Threads::Threads)\n\ntarget_link_libraries(libnetdata PUBLIC\n        \"$<$<BOOL:${ENABLE_MIMALLOC}>:mimalloc-static>\"\n        \"$<$<NOT:$<BOOL:${HAVE_BUILTIN_ATOMICS}>>:atomic>\"\n        \"$<$<OR:$<BOOL:${OS_LINUX}>,$<BOOL:${OS_FREEBSD}>>:pthread;rt>\"\n        \"$<$<BOOL:${OS_WINDOWS}>:kernel32;advapi32;winmm;rpcrt4;wevtapi;ole32;oleaut32;wbemuuid>\"\n        \"$<$<BOOL:${LINK_LIBM}>:m>\"\n        \"${SYSTEMD_LDFLAGS}\")\n\nif(OS_WINDOWS)\n        set(HAVE_ETW True)\n        set(HAVE_WEL True)\n\n        # Output the results for debugging purposes\n        message(STATUS \"Have Event Tracing for Windows (ETW): ${HAVE_ETW}\")\n        message(STATUS \"Have Windows Event Log (WEL): ${HAVE_WEL}\")\n\n        if(HAVE_WEL OR HAVE_ETW)\n                # Define the source and generated file paths\n                set(WEVT_GEN_SRC_H_FILE \"${CMAKE_SOURCE_DIR}/src/libnetdata/log/nd_log-to-windows-common.h\")\n                set(WEVT_GEN_SRC_C_FILE \"${CMAKE_SOURCE_DIR}/src/libnetdata/log/wevt_netdata_mc_generate.c\")\n                set(WEVT_GEN_BIN_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata_mc_generate\")\n\n                set(WEVT_BUILD_SCRIPT \"${CMAKE_SOURCE_DIR}/src/libnetdata/log/wevt_netdata_compile.sh\")\n\n                set(WEVT_MC_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata.mc\")\n                set(WEVT_MAN_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata_manifest.xml\")\n                set(WEVT_RC_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata.rc\")\n                set(WEVT_MC_H_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata.h\")\n                set(WEVT_MAN_H_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata_manifest.h\")\n                set(WEVT_RES_OBJECT \"${CMAKE_BINARY_DIR}/wevt_netdata_res.o\")\n\n                set(WEVT_DLL_FILE \"${CMAKE_BINARY_DIR}/wevt_netdata.dll\")\n                set(WEVT_ETW_INSTALL_SCRIPT \"${CMAKE_SOURCE_DIR}/src/libnetdata/log/wevt_netdata_install.bat\")\n\n                # we compile ${WEVT_GEN_BIN_FILE}, which generates the manifest, the .mc,\n                # and the headers required for compiling libnetdata/logs\n\n                if(HAVE_ETW)\n                        # ETW method also supports WEL\n                        # but it requires Microsoft tools mc, rc, and link\n                        add_custom_command(\n                                OUTPUT \"${WEVT_MC_H_FILE}\" \"${WEVT_MAN_H_FILE}\" \"${WEVT_DLL_FILE}\"\n                                COMMAND \"${CMAKE_C_COMPILER}\" -o \"${WEVT_GEN_BIN_FILE}\" \"${WEVT_GEN_SRC_C_FILE}\"\n                                COMMAND \"${WEVT_GEN_BIN_FILE}\" >\"${WEVT_MC_FILE}\"\n                                COMMAND \"${WEVT_GEN_BIN_FILE}\" --manifest >\"${WEVT_MAN_FILE}\"\n                                COMMAND \"${WEVT_BUILD_SCRIPT}\" \"${CMAKE_SOURCE_DIR}/src/libnetdata/log\" \"${CMAKE_BINARY_DIR}\"\n                                DEPENDS \"${WEVT_GEN_SRC_C_FILE}\" \"${WEVT_GEN_SRC_H_FILE}\"\n                                COMMENT \"Compiling ${WEVT_MC_FILE} to generate ${WEVT_MC_H_FILE} and ${WEVT_DLL_FILE}\"\n                        )\n                else()\n                        # WEL method can be built with windmc, windres and the normal linker\n                        add_custom_command(\n                                OUTPUT \"${WEVT_MC_H_FILE}\" \"${WEVT_DLL_FILE}\"\n                                COMMAND \"${CMAKE_C_COMPILER}\" -o \"${WEVT_GEN_BIN_FILE}\" \"${WEVT_GEN_SRC_C_FILE}\"\n                                COMMAND \"${WEVT_GEN_BIN_FILE}\" >\"${WEVT_MC_FILE}\"\n                                COMMAND \"${WEVT_GEN_BIN_FILE}\" --manifest >\"${WEVT_MAN_FILE}\"\n                                COMMAND windmc -r \"${CMAKE_BINARY_DIR}\" -h \"${CMAKE_BINARY_DIR}\" ${WEVT_MC_FILE}\n                                COMMAND echo \"1 2004\" \"wevt_netdata_manifest.xml\" >> \"${WEVT_RC_FILE}\"\n                                COMMAND windres ${WEVT_RC_FILE} -o ${WEVT_RES_OBJECT}\n                                COMMAND ${CMAKE_LINKER} -dll --entry 0 -nostdlib -o ${WEVT_DLL_FILE} ${WEVT_RES_OBJECT}\n                                DEPENDS \"${WEVT_GEN_SRC_C_FILE}\" \"${WEVT_GEN_SRC_H_FILE}\"\n                                COMMENT \"Compiling ${WEVT_MC_FILE} to generate ${WEVT_MC_H_FILE} and ${WEVT_DLL_FILE}\"\n                        )\n                endif()\n\n                # Create a custom target for the DLL\n                add_custom_target(wevt_netdata ALL DEPENDS ${WEVT_DLL_FILE})\n\n                set_source_files_properties(src/libnetdata/log/nd_log-to-windows-events.c PROPERTIES\n                        OBJECT_DEPENDS \"${WEVT_MC_H_FILE}\")\n\n                if(HAVE_ETW)\n                        set_source_files_properties(src/libnetdata/log/nd_log-to-windows-events.c PROPERTIES\n                                OBJECT_DEPENDS \"${WEVT_MAN_H_FILE}\")\n\n                        install(FILES \"${WEVT_DLL_FILE}\" \"${WEVT_MAN_FILE}\" \"${WEVT_ETW_INSTALL_SCRIPT}\"\n                                COMPONENT wevt_netdata_dll\n                                DESTINATION \"${BINDIR}\")\n                else()\n                        # do not install the manifest in this case\n                        # the nsi installer will skip registering the ETW publisher\n                        install(FILES \"${WEVT_DLL_FILE}\"\n                                COMPONENT wevt_netdata_dll\n                                DESTINATION \"${BINDIR}\")\n                endif()\n        endif()\nendif()\n\n# ebpf\nif(ENABLE_PLUGIN_EBPF)\n        netdata_add_libbpf_to_target(libnetdata)\nendif()\n\n# judy\ntarget_link_libraries(libnetdata PUBLIC judy)\n\nnetdata_add_jsonc_to_target(libnetdata)\n\nnetdata_add_libyaml_to_target(libnetdata)\n\n# libunwind\npkg_check_modules(LIBUNWIND libunwind IMPORTED_TARGET)\nif(TARGET PkgConfig::LIBUNWIND)\n    set(HAVE_LIBUNWIND On)\n\n    if(CMAKE_SYSTEM_PROCESSOR MATCHES \"(x86_64)|(amd64)\")\n        target_link_libraries(libnetdata PUBLIC PkgConfig::LIBUNWIND -lunwind-x86_64)\n    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"arm64|aarch64\")\n        target_link_libraries(libnetdata PUBLIC PkgConfig::LIBUNWIND -lunwind-aarch64)\n    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"arm\")\n        target_link_libraries(libnetdata PUBLIC PkgConfig::LIBUNWIND -lunwind-arm)\n    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"powerpc|ppc\")\n        target_link_libraries(libnetdata PUBLIC PkgConfig::LIBUNWIND -lunwind-ppc64)\n    else()\n        message(WARNING \"Unknown architecture ${CMAKE_SYSTEM_PROCESSOR} for libunwind. Stack traces may not work.\")\n        target_link_libraries(libnetdata PUBLIC PkgConfig::LIBUNWIND)\n    endif()\nendif()\n\n# zlib\nif(OS_MACOS)\n        find_package(ZLIB REQUIRED)\n        target_include_directories(libnetdata BEFORE PUBLIC ${ZLIB_INCLUDE_DIRS})\n        target_link_libraries(libnetdata PUBLIC ZLIB::ZLIB)\nelse()\n        pkg_check_modules(ZLIB REQUIRED zlib)\n        target_include_directories(libnetdata BEFORE PUBLIC ${ZLIB_INCLUDE_DIRS})\n        target_compile_options(libnetdata PUBLIC ${ZLIB_CFLAGS_OTHER})\n        target_link_libraries(libnetdata PUBLIC ${ZLIB_LDFLAGS})\nendif()\n\n# lz4 - try to find a version that is compatible with streaming compression\n# otherwise pick whichever one we can find to support dbengine but don't set\n# ENABLE_LZ4.\npkg_check_modules(LIBLZ4 liblz4>=1.9.0)\nif(LIBLZ4_FOUND)\n        set(ENABLE_LZ4 On)\nelse()\n        pkg_check_modules(LIBLZ4 REQUIRED liblz4)\nendif()\n\ntarget_include_directories(libnetdata BEFORE PUBLIC ${LIBLZ4_INCLUDE_DIRS})\ntarget_compile_options(libnetdata PUBLIC ${LIBLZ4_CFLAGS_OTHER})\ntarget_link_libraries(libnetdata PUBLIC ${LIBLZ4_LDFLAGS})\n\n# zstd\npkg_check_modules(LIBZSTD libzstd)\nif(LIBZSTD_FOUND)\n        set(ENABLE_ZSTD On)\n        target_include_directories(libnetdata BEFORE PUBLIC ${LIBZSTD_INCLUDE_DIRS})\n        target_compile_options(libnetdata PUBLIC ${LIBZSTD_CFLAGS_OTHER})\n        target_link_libraries(libnetdata PUBLIC ${LIBZSTD_LDFLAGS})\nendif()\n\n# brotli\npkg_check_modules(LIBBROTLI libbrotlidec libbrotlienc libbrotlicommon)\nif(LIBBROTLI_FOUND)\n        set(ENABLE_BROTLI On)\n        target_include_directories(libnetdata PUBLIC ${LIBBROTLI_INCLUDE_DIRS})\n        target_compile_options(libnetdata PUBLIC ${LIBBROTLI_CFLAGS_OTHER})\n        target_link_libraries(libnetdata PUBLIC ${LIBBROTLI_LDFLAGS})\nendif()\n\n# uuid\nif(OS_MACOS OR OS_WINDOWS)\n        # UUID functionality is part of the system libraries here, so no extra\n        # stuff needed.\nelse()\n        pkg_check_modules(UUID REQUIRED uuid)\n        target_include_directories(libnetdata BEFORE PUBLIC ${UUID_INCLUDE_DIRS})\n        target_compile_options(libnetdata PUBLIC ${UUID_CFLAGS_OTHER})\n        target_link_libraries(libnetdata PUBLIC ${UUID_LDFLAGS})\nendif()\n\n# uv\npkg_check_modules(LIBUV REQUIRED libuv)\ntarget_include_directories(libnetdata BEFORE PUBLIC ${LIBUV_INCLUDE_DIRS})\ntarget_compile_options(libnetdata PUBLIC ${LIBUV_CFLAGS_OTHER})\ntarget_link_libraries(libnetdata PUBLIC ${LIBUV_LDFLAGS})\n\n# crypto\ntarget_link_libraries(libnetdata PUBLIC PkgConfig::CRYPTO)\n\n# openssl\ntarget_link_libraries(libnetdata PUBLIC PkgConfig::TLS)\n\n# mnl\nif(NOT OS_MACOS)\n    pkg_check_modules(MNL libmnl)\n    if(MNL_FOUND)\n        set(HAVE_LIBMNL True)\n    endif()\nendif()\n\n#\n# mqtt library\n#\nset(ENABLE_MQTTWEBSOCKETS True)\nif(ENABLE_MQTTWEBSOCKETS)\n        add_library(mqttwebsockets STATIC ${MQTT_WEBSOCKETS_FILES})\n\n        target_compile_options(mqttwebsockets PUBLIC -DMQTT_WSS_CUSTOM_ALLOC\n                                                     -DRBUF_CUSTOM_MALLOC\n                                                     -DMQTT_WSS_CPUSTATS)\n\n        target_include_directories(mqttwebsockets PUBLIC ${CMAKE_SOURCE_DIR}/aclk/helpers\n                                                         ${CMAKE_SOURCE_DIR}/src/web/server/h2o/libh2o/include)\n\n        target_link_libraries(mqttwebsockets PRIVATE libnetdata)\n\nendif()\n\n#\n# proto definitions\n#\nnetdata_protoc_generate_cpp(\"${CMAKE_SOURCE_DIR}/src/aclk/aclk-schemas\"\n                            \"${CMAKE_SOURCE_DIR}/src/aclk/aclk-schemas\"\n                            ACLK_PROTO_BUILT_SRCS\n                            ACLK_PROTO_BUILT_HDRS\n                            ${ACLK_PROTO_DEFS})\n\nlist(APPEND ACLK_FILES ${ACLK_PROTO_BUILT_SRCS}\n                       ${ACLK_PROTO_BUILT_HDRS})\n\n#\n# build plugins\n#\n\nif(ENABLE_PLUGIN_DEBUGFS)\n    # Check for libcap (optional)\n    pkg_check_modules(CAP QUIET libcap)\n\n    # Define debugfs.plugin source files\n    set(DEBUGFS_PLUGIN_FILES\n            src/collectors/debugfs.plugin/debugfs_plugin.c\n            src/collectors/debugfs.plugin/debugfs_plugin.h\n            src/collectors/debugfs.plugin/module-numa-extfrag.c\n            src/collectors/debugfs.plugin/module-zswap.c\n            src/collectors/debugfs.plugin/module-devices-powercap.c\n            src/collectors/debugfs.plugin/module-libsensors.c\n    )\n\n    # Add executable for debugfs.plugin\n    add_executable(debugfs.plugin ${DEBUGFS_PLUGIN_FILES})\n\n    # Add vendored libsensors library\n    add_subdirectory(src/collectors/debugfs.plugin/libsensors)\n\n    # Link debugfs.plugin with vendored libsensors\n    target_link_libraries(debugfs.plugin PRIVATE vendored_libsensors)\n\n    # Include vendored libsensors headers\n    target_include_directories(debugfs.plugin PRIVATE\n            src/collectors/debugfs.plugin/libsensors/vendored/lib\n            ${CMAKE_CURRENT_BINARY_DIR}/src/collectors/debugfs.plugin/libsensors # For generated headers\n    )\n\n    # Link against libnetdata and optionally libcap\n    target_link_libraries(debugfs.plugin PRIVATE libnetdata ${CAP_LIBRARIES})\n    target_include_directories(debugfs.plugin PRIVATE ${CAP_INCLUDE_DIRS})\n    target_compile_options(debugfs.plugin PRIVATE ${CAP_CFLAGS_OTHER})\n\n    # Install the debugfs.plugin binary\n    install(TARGETS debugfs.plugin\n            COMPONENT plugin-debugfs\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    install(FILES\n            src/collectors/debugfs.plugin/libsensors/vendored/etc/sensors.conf.default\n            COMPONENT plugin-debugfs\n            DESTINATION usr/lib/netdata/conf.d\n            RENAME sensors3.conf)\n\n    # Install additional packaging files if building for packaging\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-debugfs\n                DESTINATION usr/share/doc/netdata-plugin-debugfs)\n    endif()\nendif()\n\nadd_executable(spawn-tester src/libnetdata/spawn_server/spawn-tester.c)\ntarget_link_libraries(spawn-tester libnetdata)\n\nif(ENABLE_PLUGIN_APPS)\n    pkg_check_modules(CAP QUIET libcap)\n\n    set(APPS_PLUGIN_FILES\n            src/collectors/apps.plugin/apps_plugin.c\n            src/collectors/apps.plugin/apps_plugin.h\n            src/collectors/apps.plugin/apps_functions.c\n            src/collectors/apps.plugin/apps_targets.c\n            src/collectors/apps.plugin/apps_output.c\n            src/collectors/apps.plugin/apps_pid_files.c\n            src/collectors/apps.plugin/apps_pid.c\n            src/collectors/apps.plugin/apps_aggregations.c\n            src/collectors/apps.plugin/apps_os_linux.c\n            src/collectors/apps.plugin/apps_os_freebsd.c\n            src/collectors/apps.plugin/apps_os_macos.c\n            src/collectors/apps.plugin/apps_os_windows.c\n            src/collectors/apps.plugin/apps_incremental_collection.c\n            src/collectors/apps.plugin/apps_os_windows_nt.c\n            src/collectors/apps.plugin/apps_pid_match.c\n    )\n\n    add_executable(apps.plugin ${APPS_PLUGIN_FILES})\n\n    target_link_libraries(apps.plugin libnetdata ${CAP_LIBRARIES}\n            \"$<$<BOOL:${OS_WINDOWS}>:Version;ntdll>\")\n\n    target_include_directories(apps.plugin PRIVATE ${CAP_INCLUDE_DIRS})\n    target_compile_options(apps.plugin PRIVATE ${CAP_CFLAGS_OTHER})\n\n    install(TARGETS apps.plugin\n            COMPONENT plugin-apps\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    install(FILES src/collectors/apps.plugin/apps_groups.conf\n            COMPONENT plugin-apps\n            DESTINATION usr/lib/netdata/conf.d)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-apps\n                DESTINATION usr/share/doc/netdata-plugin-apps)\n    endif()\nendif()\n\nif(CAP_FOUND)\n    set(HAVE_CAPABILITY True)\nendif()\n\nif(ENABLE_PLUGIN_FREEIPMI)\n    pkg_check_modules(IPMI REQUIRED libipmimonitoring)\n\n    set(FREEIPMI_PLUGIN_FILES src/collectors/freeipmi.plugin/freeipmi_plugin.c)\n\n    add_executable(freeipmi.plugin ${FREEIPMI_PLUGIN_FILES})\n    target_link_libraries (freeipmi.plugin libnetdata ${IPMI_LIBRARIES})\n    target_include_directories(freeipmi.plugin PRIVATE ${IPMI_INCLUDE_DIRS})\n    target_compile_options(freeipmi.plugin PRIVATE ${IPMI_CFLAGS_OTHER})\n\n    install(TARGETS freeipmi.plugin\n            COMPONENT plugin-freeipmi\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-freeipmi\n                DESTINATION usr/share/doc/netdata-plugin-freeipmi)\n    endif()\nendif()\n\nif(ENABLE_PLUGIN_NFACCT)\n    if (NOT MNL_FOUND)\n        message(FATAL_ERROR \"Can not build nfacct.plugin because MNL library could not be found.\")\n    endif()\n\n    pkg_check_modules(NFACCT REQUIRED libnetfilter_acct)\n\n    set(NFACCT_PLUGIN_FILES src/collectors/nfacct.plugin/plugin_nfacct.c)\n\n    add_executable(nfacct.plugin ${NFACCT_PLUGIN_FILES})\n    target_link_libraries (nfacct.plugin libnetdata ${MNL_LIBRARIES} ${NFACCT_LIBRARIES})\n    target_include_directories(nfacct.plugin PRIVATE ${MNL_INCLUDE_DIRS} ${NFACCT_INCLUDE_DIRS})\n    target_compile_options(nfacct.plugin PRIVATE ${MNL_CFLAGS_OTHER} ${NFACCT_CFLAGS_OTHER})\n\n    install(TARGETS nfacct.plugin\n            COMPONENT plugin-nfacct\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-nfacct\n                DESTINATION usr/share/doc/netdata-plugin-nfacct)\n    endif()\nendif()\n\nif(ENABLE_PLUGIN_XENSTAT)\n    pkg_check_modules(XENSTAT REQUIRED xenstat)\n    pkg_check_modules(XENLIGHT REQUIRED xenlight)\n\n    set(XENSTAT_PLUGIN_FILES src/collectors/xenstat.plugin/xenstat_plugin.c)\n\n    add_executable(xenstat.plugin ${XENSTAT_PLUGIN_FILES})\n    target_link_libraries (xenstat.plugin libnetdata ${XENLIGHT_LIBRARIES} ${XENSTAT_LIBRARIES})\n    target_include_directories(xenstat.plugin PRIVATE ${XENLIGHT_INCLUDE_DIRS} ${XENSTAT_INCLUDE_DIRS})\n    target_compile_options(xenstat.plugin PRIVATE ${XENLIGHT_CFLAGS_OTHER} ${XENSTAT_CFLAGS_OTHER})\n\n    install(TARGETS xenstat.plugin\n            COMPONENT plugin-xenstat\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-xenstat\n                DESTINATION usr/share/doc/netdata-plugin-xenstat)\n    endif()\nendif()\n\nif(ENABLE_PLUGIN_PERF)\n    set(PERF_PLUGIN_FILES src/collectors/perf.plugin/perf_plugin.c)\n\n    add_executable(perf.plugin ${PERF_PLUGIN_FILES})\n    target_link_libraries(perf.plugin libnetdata)\n\n    install(TARGETS perf.plugin\n            COMPONENT plugin-perf\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    if(BUILD_FOR_PACKAGING)\n         install(FILES\n                 ${PKG_FILES_PATH}/copyright\n                 COMPONENT plugin-perf\n                 DESTINATION usr/share/doc/netdata-plugin-perf)\n    endif()\nendif()\n\nif(ENABLE_PLUGIN_SLABINFO)\n    set(SLABINFO_PLUGIN_FILES src/collectors/slabinfo.plugin/slabinfo.c)\n\n    add_executable(slabinfo.plugin ${SLABINFO_PLUGIN_FILES})\n    target_link_libraries(slabinfo.plugin libnetdata)\n\n    install(TARGETS slabinfo.plugin\n            COMPONENT plugin-slabinfo\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-slabinfo\n                DESTINATION usr/share/doc/netdata-plugin-slabinfo)\n    endif()\nendif()\n\n\nif(ENABLE_PLUGIN_CUPS)\n    pkg_check_modules(CUPS libcups)\n    if(NOT CUPS_FOUND)\n        pkg_check_modules(CUPS cups)\n        if(NOT CUPS_FOUND)\n                find_program(CUPS_CONFIG cups-config)\n                if(CUPS_CONFIG)\n                        execute_process(COMMAND ${CUPS_CONFIG} --api-version OUTPUT_VARIABLE CUPS_API_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)\n                        if(CUPS_API_VERSION VERSION_LESS \"1.7\")\n                                set(CUPS_FOUND False)\n                        else()\n                                execute_process(COMMAND ${CUPS_CONFIG} --cflags OUTPUT_VARIABLE CUPS_CFLAGS_OTHER OUTPUT_STRIP_TRAILING_WHITESPACE)\n                                execute_process(COMMAND ${CUPS_CONFIG} --libs OUTPUT_VARIABLE CUPS_LIBRARIES OUTPUT_STRIP_TRAILING_WHITESPACE)\n                                set(CUPS_FOUND True)\n                        endif()\n                endif()\n        endif()\n    endif()\n\n    if(NOT CUPS_FOUND)\n        message(WARNING \"Could not find cups cflags and libs.\")\n    else()\n        set(CUPS_PLUGIN_FILES src/collectors/cups.plugin/cups_plugin.c)\n        add_executable(cups.plugin ${CUPS_PLUGIN_FILES})\n        target_link_libraries (cups.plugin libnetdata ${CUPS_LIBRARIES})\n        target_compile_options(cups.plugin PRIVATE ${CUPS_CFLAGS_OTHER})\n\n        install(TARGETS cups.plugin\n                COMPONENT plugin-cups\n                DESTINATION usr/libexec/netdata/plugins.d)\n\n        if(BUILD_FOR_PACKAGING)\n                install(FILES\n                        ${PKG_FILES_PATH}/copyright\n                        COMPONENT plugin-cups\n                        DESTINATION usr/share/doc/netdata-plugin-cups)\n        endif()\n    endif()\nendif()\n\nif(NEED_NDSUDO)\n    set(NDSUDO_FILES src/collectors/utils/ndsudo.c)\n\n    add_executable(ndsudo ${NDSUDO_FILES})\n\n    install(TARGETS ndsudo\n            COMPONENT netdata\n            DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\nif(ENABLE_PLUGIN_CGROUP_NETWORK)\n    set(CGROUP_NETWORK_FILES src/collectors/cgroups.plugin/cgroup-network.c)\n\n    add_executable(cgroup-network ${CGROUP_NETWORK_FILES})\n    target_link_libraries(cgroup-network libnetdata)\n\n    install(TARGETS cgroup-network\n            COMPONENT netdata\n            DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\nif(ENABLE_PLUGIN_SYSTEMD_JOURNAL)\n        if(NOT SYSTEMD_FOUND)\n                message(FATAL_ERROR \"Systemd journal plugin requires systemd, but systemd was not found.\")\n        endif()\n\n        add_executable(systemd-journal.plugin ${SYSTEMD_JOURNAL_PLUGIN_FILES})\n        target_link_libraries(systemd-journal.plugin libnetdata)\n\n        install(TARGETS systemd-journal.plugin\n                COMPONENT plugin-systemd-journal\n                DESTINATION usr/libexec/netdata/plugins.d)\n\n        if(BUILD_FOR_PACKAGING)\n                install(FILES\n                        ${PKG_FILES_PATH}/copyright\n                        COMPONENT plugin-systemd-journal\n                        DESTINATION usr/share/doc/netdata-plugin-systemd-journal)\n        endif()\nendif()\n\nif(OS_WINDOWS)\n        add_executable(windows-events.plugin ${WINDOWS_EVENTS_PLUGIN_FILES})\n        target_link_libraries(windows-events.plugin libnetdata wevtapi)\n\n        install(TARGETS windows-events.plugin\n                COMPONENT plugin-windows-events\n                DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\nif(ENABLE_PLUGIN_EBPF)\n    set(EBPF_PLUGIN_FILES\n            src/collectors/ebpf.plugin/ebpf.c\n            src/collectors/ebpf.plugin/ebpf.h\n            src/collectors/ebpf.plugin/ebpf_cachestat.c\n            src/collectors/ebpf.plugin/ebpf_cachestat.h\n            src/collectors/ebpf.plugin/ebpf_dcstat.c\n            src/collectors/ebpf.plugin/ebpf_dcstat.h\n            src/collectors/ebpf.plugin/ebpf_disk.c\n            src/collectors/ebpf.plugin/ebpf_disk.h\n            src/collectors/ebpf.plugin/ebpf_fd.c\n            src/collectors/ebpf.plugin/ebpf_fd.h\n            src/collectors/ebpf.plugin/ebpf_hardirq.c\n            src/collectors/ebpf.plugin/ebpf_hardirq.h\n            src/collectors/ebpf.plugin/ebpf_mdflush.c\n            src/collectors/ebpf.plugin/ebpf_mdflush.h\n            src/collectors/ebpf.plugin/ebpf_mount.c\n            src/collectors/ebpf.plugin/ebpf_mount.h\n            src/collectors/ebpf.plugin/ebpf_filesystem.c\n            src/collectors/ebpf.plugin/ebpf_filesystem.h\n            src/collectors/ebpf.plugin/ebpf_oomkill.c\n            src/collectors/ebpf.plugin/ebpf_oomkill.h\n            src/collectors/ebpf.plugin/ebpf_process.c\n            src/collectors/ebpf.plugin/ebpf_process.h\n            src/collectors/ebpf.plugin/ebpf_shm.c\n            src/collectors/ebpf.plugin/ebpf_shm.h\n            src/collectors/ebpf.plugin/ebpf_socket.c\n            src/collectors/ebpf.plugin/ebpf_socket.h\n            src/collectors/ebpf.plugin/ebpf_softirq.c\n            src/collectors/ebpf.plugin/ebpf_softirq.h\n            src/collectors/ebpf.plugin/ebpf_sync.c\n            src/collectors/ebpf.plugin/ebpf_sync.h\n            src/collectors/ebpf.plugin/ebpf_swap.c\n            src/collectors/ebpf.plugin/ebpf_swap.h\n            src/collectors/ebpf.plugin/ebpf_vfs.c\n            src/collectors/ebpf.plugin/ebpf_vfs.h\n            src/collectors/ebpf.plugin/ebpf_apps.c\n            src/collectors/ebpf.plugin/ebpf_apps.h\n            src/collectors/ebpf.plugin/ebpf_cgroup.c\n            src/collectors/ebpf.plugin/ebpf_cgroup.h\n            src/collectors/ebpf.plugin/ebpf_unittest.c\n            src/collectors/ebpf.plugin/ebpf_unittest.h\n            src/collectors/ebpf.plugin/ebpf_functions.c\n            src/collectors/ebpf.plugin/ebpf_functions.h\n            src/collectors/ebpf.plugin/libbpf_api/ebpf.c\n            src/collectors/ebpf.plugin/libbpf_api/ebpf.h\n    )\n\n    add_executable(ebpf.plugin ${EBPF_PLUGIN_FILES})\n    target_link_libraries(ebpf.plugin libnetdata)\n\n    netdata_add_ebpf_co_re_to_target(ebpf.plugin)\n\n    install(TARGETS ebpf.plugin\n            COMPONENT plugin-ebpf\n            DESTINATION usr/libexec/netdata/plugins.d)\n\n    install(FILES\n            src/collectors/ebpf.plugin/ebpf.d.conf\n            COMPONENT plugin-ebpf\n            DESTINATION usr/lib/netdata/conf.d)\n\n    install(FILES\n            src/collectors/ebpf.plugin/ebpf.d/cachestat.conf\n            src/collectors/ebpf.plugin/ebpf.d/dcstat.conf\n            src/collectors/ebpf.plugin/ebpf.d/disk.conf\n            src/collectors/ebpf.plugin/ebpf.d/ebpf_kernel_reject_list.txt\n            src/collectors/ebpf.plugin/ebpf.d/fd.conf\n            src/collectors/ebpf.plugin/ebpf.d/filesystem.conf\n            src/collectors/ebpf.plugin/ebpf.d/hardirq.conf\n            src/collectors/ebpf.plugin/ebpf.d/mdflush.conf\n            src/collectors/ebpf.plugin/ebpf.d/mount.conf\n            src/collectors/ebpf.plugin/ebpf.d/network.conf\n            src/collectors/ebpf.plugin/ebpf.d/oomkill.conf\n            src/collectors/ebpf.plugin/ebpf.d/process.conf\n            src/collectors/ebpf.plugin/ebpf.d/shm.conf\n            src/collectors/ebpf.plugin/ebpf.d/softirq.conf\n            src/collectors/ebpf.plugin/ebpf.d/swap.conf\n            src/collectors/ebpf.plugin/ebpf.d/sync.conf\n            src/collectors/ebpf.plugin/ebpf.d/vfs.conf\n            COMPONENT plugin-ebpf\n            DESTINATION usr/lib/netdata/conf.d/ebpf.d)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-ebpf\n                DESTINATION usr/share/doc/netdata-plugin-ebpf)\n    endif()\n\n    if(ENABLE_LEGACY_EBPF_PROGRAMS)\n        netdata_install_legacy_ebpf_code()\n    endif()\nendif()\n\nif(ENABLE_PLUGIN_LOCAL_LISTENERS)\n        set(LOCAL_LISTENERS_FILES\n                src/collectors/utils/local_listeners.c\n                src/libnetdata/local-sockets/local-sockets.h\n        )\n\n        add_executable(local-listeners ${LOCAL_LISTENERS_FILES})\n\n        target_compile_options(local-listeners PRIVATE\n                               \"$<$<BOOL:${MNL_FOUND}>:${MNL_CFLAGS_OTHER}>\")\n        target_include_directories(local-listeners PRIVATE\n                                   \"$<$<BOOL:${MNL_FOUND}>:${MNL_INCLUDE_DIRS}>\")\n        target_link_libraries(local-listeners libnetdata\n                              \"$<$<BOOL:${MNL_FOUND}>:${MNL_LIBRARIES}>\")\n\n        install(TARGETS local-listeners\n                COMPONENT netdata\n                DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\nif(ENABLE_PLUGIN_NETWORK_VIEWER)\n        set(NETWORK_VIEWER_FILES\n                src/libnetdata/local-sockets/local-sockets.h\n                src/collectors/network-viewer.plugin/network-viewer.c\n        )\n\n        add_executable(network-viewer.plugin ${NETWORK_VIEWER_FILES})\n\n        target_compile_options(network-viewer.plugin PRIVATE\n                               \"$<$<BOOL:${MNL_FOUND}>:${MNL_CFLAGS_OTHER}>\")\n        target_include_directories(network-viewer.plugin PRIVATE\n                                   \"$<$<BOOL:${MNL_FOUND}>:${MNL_INCLUDE_DIRS}>\")\n        target_link_libraries(network-viewer.plugin libnetdata\n                              \"$<$<BOOL:${MNL_FOUND}>:${MNL_LIBRARIES}>\")\n\n        install(TARGETS network-viewer.plugin\n                COMPONENT plugin-network-viewer\n                DESTINATION usr/libexec/netdata/plugins.d)\n\n        if(BUILD_FOR_PACKAGING)\n                install(FILES\n                        ${PKG_FILES_PATH}/copyright\n                        COMPONENT plugin-network-viewer\n                        DESTINATION usr/share/doc/netdata-plugin-network-viewer)\n        endif()\nendif()\n\n#\n# exporters\n#\n\nif(ENABLE_EXPORTER_MONGODB)\n        pkg_check_modules(MONGOC libmongoc-1.0>=1.7)\n\n        if(MONGOC_FOUND)\n                SET(HAVE_MONGOC True)\n        else()\n                SET(ENABLE_EXPORTER_MONGODB False)\n        endif()\nendif()\n\nif(ENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE)\n        pkg_check_modules(SNAPPY snappy)\n        if (NOT SNAPPY_FOUND)\n                include(CheckLibraryExists)\n                check_library_exists(snappy snappy_compress \"\" HAVE_SNAPPY_LIB)\n\n                if(HAVE_SNAPPY_LIB)\n                        set(SNAPPY_INCLUDE_DIRS \"\")\n                        set(SNAPPY_CFLAGS_OTHER \"\")\n                        set(SNAPPY_LIBRARIES \"-lsnappy\")\n                else()\n                        message(FATAL_ERROR \"Could not find snappy libraries with pkg-config or internal cmake checks.\")\n                endif()\n        endif()\n\n        netdata_protoc_generate_cpp(\"${CMAKE_SOURCE_DIR}/src/exporting/prometheus/remote_write\"\n                                    \"${CMAKE_SOURCE_DIR}/src/exporting/prometheus/remote_write\"\n                                    PROMETHEUS_REMOTE_WRITE_BUILT_SRCS\n                                    PROMETHEUS_REMOTE_WRITE_BUILT_HDRS\n                                    \"src/exporting/prometheus/remote_write/remote_write.proto\")\n\n        list(APPEND PROMETHEUS_REMOTE_WRITE_EXPORTING_FILES\n                    ${PROMETHEUS_REMOTE_WRITE_BUILT_SRCS}\n                    ${PROMETHEUS_REMOTE_WRITE_BUILT_HDRS})\n\n        set(ENABLE_PROMETHEUS_REMOTE_WRITE True)\nendif()\n\n#\n# build netdata (only Linux ATM)\n#\n\nif(OS_WINDOWS)\n        set(NETDATA_CLAIM_RES_FILES \"packaging/windows/resources/netdata_claim.rc\")\n        configure_file(packaging/windows/resources/netdata_claim.manifest.in ${CMAKE_SOURCE_DIR}/packaging/windows/resources/netdata_claim.manifest @ONLY)\n\n        set(NETDATACLI_RES_FILES \"packaging/windows/resources/netdatacli.rc\")\n        configure_file(packaging/windows/resources/netdatacli.manifest.in ${CMAKE_SOURCE_DIR}/packaging/windows/resources/netdatacli.manifest @ONLY)\n\n        set(NETDATA_RES_FILES \"packaging/windows/resources/netdata.rc\")\n        configure_file(packaging/windows/resources/netdata.manifest.in ${CMAKE_SOURCE_DIR}/packaging/windows/resources/netdata.manifest @ONLY)\n\n        configure_file(packaging/windows/netdata.wxs.in netdata.wxs @ONLY)\n        configure_file(packaging/windows/NetdataWhite.ico NetdataWhite.ico COPYONLY)\n        configure_file(packaging/windows/gpl-3.0.rtf gpl-3.0.rtf COPYONLY)\n        configure_file(packaging/windows/ncul1.rtf ncul1.rtf COPYONLY)\n        configure_file(packaging/windows/Top.bmp Top.bmp COPYONLY)\n        configure_file(packaging/windows/BackGround.bmp BackGround.bmp COPYONLY)\nendif()\n\nadd_executable(netdata\n        ${NETDATA_FILES}\n        \"${ACLK_FILES}\"\n        \"$<$<BOOL:${ENABLE_H2O}>:${H2O_FILES}>\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_MONGODB}>:${MONGODB_EXPORTING_FILES}>\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE}>:${PROMETHEUS_REMOTE_WRITE_EXPORTING_FILES}>\"\n        \"$<$<BOOL:${OS_WINDOWS}>:${NETDATA_RES_FILES}>\"\n)\n\nif(OS_WINDOWS)\n        add_executable(NetdataClaim ${CLAIM_WINDOWS_FILES} ${NETDATA_CLAIM_RES_FILES})\n        target_link_libraries(NetdataClaim shell32 gdi32 msftedit)\n        target_compile_options(NetdataClaim PUBLIC -mwindows)\nendif()\n\ntarget_compile_definitions(netdata PRIVATE\n        \"$<$<BOOL:${ENABLE_ML}>:DLIB_NO_GUI_SUPPORT>\"\n)\n\ntarget_compile_options(netdata PRIVATE\n        \"$<$<BOOL:${ENABLE_EXPORTER_MONGODB}>:${MONGOC_CFLAGS_OTHER}>\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE}>:${SNAPPY_CFLAGS_OTHER}>\"\n)\n\ntarget_include_directories(netdata PRIVATE\n        \"${CMAKE_SOURCE_DIR}/src/aclk/aclk-schemas\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_MONGODB}>:${MONGOC_INCLUDE_DIRS}>\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE}>:${SNAPPY_INCLUDE_DIRS}>\"\n)\n\ntarget_link_libraries(netdata PRIVATE\n        m\n        libnetdata\n        \"$<$<BOOL:${OS_LINUX}>:rt>\"\n        \"$<$<BOOL:${ENABLE_MQTTWEBSOCKETS}>:mqttwebsockets>\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_MONGODB}>:${MONGOC_LIBRARIES}>\"\n        \"$<$<BOOL:${ENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE}>:${SNAPPY_LIBRARIES}>\"\n        \"$<$<BOOL:${OS_MACOS}>:${IOKIT};${FOUNDATION}>\"\n        \"$<$<BOOL:${ENABLE_SENTRY}>:sentry>\"\n        \"$<$<BOOL:${ENABLE_WEBRTC}>:LibDataChannel::LibDataChannelStatic>\"\n        \"$<$<BOOL:${ENABLE_H2O}>:h2o>\"\n        \"$<$<BOOL:${CURL_FOUND}>:PkgConfig::CURL>\"\n)\n\nnetdata_add_protobuf(netdata)\n\n#\n# build systemd-cat-native\n#\nset(SYSTEMD_CAT_NATIVE_FILES src/libnetdata/log/systemd-cat-native.c\n                             src/libnetdata/log/systemd-cat-native.h)\n\nadd_executable(systemd-cat-native ${SYSTEMD_CAT_NATIVE_FILES})\ntarget_link_libraries(systemd-cat-native\n        libnetdata\n        \"$<$<BOOL:${CURL_FOUND}>:PkgConfig::CURL>\"\n)\n\ninstall(TARGETS systemd-cat-native\n        COMPONENT netdata\n        DESTINATION \"${BINDIR}\")\n\n#\n# build log2journal\n#\n\npkg_check_modules(PCRE2 libpcre2-8)\n\nif(PCRE2_FOUND)\n        set(LOG2JOURNAL_FILES\n                ${CONFIG_H}\n                src/collectors/log2journal/log2journal.h\n                src/collectors/log2journal/log2journal.c\n                src/collectors/log2journal/log2journal-help.c\n                src/collectors/log2journal/log2journal-yaml.c\n                src/collectors/log2journal/log2journal-json.c\n                src/collectors/log2journal/log2journal-logfmt.c\n                src/collectors/log2journal/log2journal-pcre2.c\n                src/collectors/log2journal/log2journal-params.c\n                src/collectors/log2journal/log2journal-inject.c\n                src/collectors/log2journal/log2journal-pattern.c\n                src/collectors/log2journal/log2journal-replace.c\n                src/collectors/log2journal/log2journal-rename.c\n                src/collectors/log2journal/log2journal-rewrite.c\n                src/collectors/log2journal/log2journal-txt.h\n                src/collectors/log2journal/log2journal-hashed-key.h\n        )\n\n        add_executable(log2journal ${LOG2JOURNAL_FILES})\n        target_include_directories(log2journal BEFORE PUBLIC ${CONFIG_H_DIR} ${CMAKE_SOURCE_DIR}/src ${PCRE2_INCLUDE_DIRS})\n        target_compile_options(log2journal PUBLIC ${PCRE2_CFLAGS_OTHER})\n\n        target_link_libraries(log2journal PUBLIC libnetdata)\n        target_link_libraries(log2journal PUBLIC \"${PCRE2_LDFLAGS}\")\n        netdata_add_libyaml_to_target(log2journal)\n\n        install(TARGETS log2journal\n                COMPONENT netdata\n                DESTINATION \"${BINDIR}\")\n\n        install(DIRECTORY src/collectors/log2journal/log2journal.d\n                COMPONENT netdata\n                DESTINATION usr/lib/netdata/conf.d)\nendif()\n\n#\n# build netdatacli\n#\n\nset(NETDATACLI_FILES\n        src/daemon/commands.h\n        src/daemon/pipename.c\n        src/daemon/pipename.h\n        src/cli/cli.c\n)\n\nadd_executable(netdatacli ${NETDATACLI_FILES} \"$<$<BOOL:${OS_WINDOWS}>:${NETDATACLI_RES_FILES}>\")\ntarget_link_libraries(netdatacli libnetdata)\n\ninstall(TARGETS netdatacli\n        COMPONENT netdata\n        DESTINATION \"${BINDIR}\")\n\n#\n# Build go.d.plugin\n#\n\nif(ENABLE_PLUGIN_GO)\n    add_go_target(go-plugin go.d.plugin src/go cmd/godplugin)\n\n    install(PROGRAMS ${CMAKE_BINARY_DIR}/go.d.plugin\n            COMPONENT plugin-go\n            DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\n#\n# Generate config file\n#\nif(NOT NETDATA_RUNTIME_PREFIX STREQUAL \"\")\n  string(REGEX REPLACE \"/$\" \"\" NETDATA_RUNTIME_PREFIX \"${NETDATA_RUNTIME_PREFIX}\")\nendif()\n\nset(CACHE_DIR \"${NETDATA_RUNTIME_PREFIX}/var/cache/netdata\")\nset(CONFIG_DIR \"${NETDATA_RUNTIME_PREFIX}/etc/netdata\")\nset(LIBCONFIG_DIR \"${NETDATA_RUNTIME_PREFIX}/usr/lib/netdata/conf.d\")\nset(LOG_DIR \"${NETDATA_RUNTIME_PREFIX}/var/log/netdata\")\nset(PLUGINS_DIR \"${NETDATA_RUNTIME_PREFIX}/usr/libexec/netdata/plugins.d\")\nset(VARLIB_DIR \"${NETDATA_RUNTIME_PREFIX}/var/lib/netdata\")\n\n# A non-default value is only used when building Debian packages (/var/lib/netdata/www)\nif(NOT DEFINED WEB_DIR)\n  set(WEB_DIR \"usr/share/netdata/web\")\nelse()\n  string(REGEX REPLACE \"^/\" \"\" WEB_DIR \"${WEB_DIR}\")\nendif()\nset(WEB_DEST \"${WEB_DIR}\")\nset(WEB_DIR \"${NETDATA_RUNTIME_PREFIX}/${WEB_DEST}\")\n\n\nset(CONFIGURE_COMMAND \"dummy-configure-command\")\nif (NOT NETDATA_USER)\n        set(NETDATA_USER \"netdata\")\nendif()\n\nconfigure_file(packaging/cmake/config.cmake.h.in config.h)\n\n#\n# install\n#\n\ninstall(TARGETS netdata COMPONENT netdata DESTINATION \"${BINDIR}\")\n\ninstall(DIRECTORY COMPONENT netdata DESTINATION var/cache/netdata)\ninstall(DIRECTORY COMPONENT netdata DESTINATION var/log/netdata)\ninstall(DIRECTORY COMPONENT netdata DESTINATION var/lib/netdata/registry)\ninstall(DIRECTORY COMPONENT netdata DESTINATION var/lib/netdata/cloud.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION var/run/netdata)\ninstall(DIRECTORY COMPONENT netdata DESTINATION etc/netdata)\ninstall(DIRECTORY COMPONENT netdata DESTINATION etc/netdata/custom-plugins.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION etc/netdata/health.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION etc/netdata/ssl)\ninstall(DIRECTORY COMPONENT netdata DESTINATION etc/netdata/statsd.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION usr/lib/netdata/conf.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION usr/lib/netdata/conf.d/schema.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION usr/libexec/netdata/plugins.d)\ninstall(DIRECTORY COMPONENT netdata DESTINATION ${WEB_DEST})\n\nset(libsysdir_POST \"${NETDATA_RUNTIME_PREFIX}/usr/lib/netdata/system\")\nset(pkglibexecdir_POST \"${NETDATA_RUNTIME_PREFIX}/usr/libexec/netdata\")\nset(localstatedir_POST \"${NETDATA_RUNTIME_PREFIX}/var\")\nset(sbindir_POST \"${NETDATA_RUNTIME_PREFIX}/${BINDIR}\")\nset(configdir_POST \"${NETDATA_RUNTIME_PREFIX}/etc/netdata\")\nset(libconfigdir_POST \"${NETDATA_RUNTIME_PREFIX}/usr/lib/netdata/conf.d\")\nset(cachedir_POST \"${NETDATA_RUNTIME_PREFIX}/var/cache/netdata\")\nset(registrydir_POST \"${NETDATA_RUNTIME_PREFIX}/var/lib/netdata/registry\")\nset(varlibdir_POST \"${NETDATA_RUNTIME_PREFIX}/var/lib/netdata\")\nset(netdata_user_POST \"${NETDATA_USER}\")\nset(netdata_group_POST \"${NETDATA_USER}\")\n\nif(NOT OS_WINDOWS)\n        configure_file(src/claim/netdata-claim.sh.in src/claim/netdata-claim.sh @ONLY)\n        install(PROGRAMS\n                ${CMAKE_BINARY_DIR}/src/claim/netdata-claim.sh\n                COMPONENT netdata\n                DESTINATION \"${BINDIR}\")\nelse()\n        install(PROGRAMS\n                ${CMAKE_BINARY_DIR}/NetdataClaim.exe\n                COMPONENT netdata\n                DESTINATION \"${BINDIR}\")\nendif()\n\n#\n# We don't check ENABLE_PLUGIN_CGROUP_NETWORK because rpm builds assume\n# the files exists unconditionally.\n#\nconfigure_file(src/collectors/cgroups.plugin/cgroup-network-helper.sh.in\n               src/collectors/cgroups.plugin/cgroup-network-helper.sh @ONLY)\ninstall(PROGRAMS\n        ${CMAKE_BINARY_DIR}/src/collectors/cgroups.plugin/cgroup-network-helper.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\nconfigure_file(src/collectors/cgroups.plugin/cgroup-name.sh.in\n               src/collectors/cgroups.plugin/cgroup-name.sh @ONLY)\ninstall(PROGRAMS\n        ${CMAKE_BINARY_DIR}/src/collectors/cgroups.plugin/cgroup-name.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\n#\n# statsd\n#\ninstall(FILES\n        src/collectors/statsd.plugin/asterisk.conf\n        src/collectors/statsd.plugin/example.conf\n        src/collectors/statsd.plugin/k6.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d/statsd.d)\n\n#\n# exporting\n#\ninstall(FILES\n        src/exporting/exporting.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d)\n\n#\n# ioping.plugin\n#\ninstall(FILES\n        src/collectors/ioping.plugin/ioping.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d)\n\n#\n# streaming\n#\ninstall(FILES\n        src/streaming/stream.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d)\n\n#\n# swagger\n#\ninstall(FILES\n        src/web/api/netdata-swagger.json\n        src/web/api/netdata-swagger.yaml\n        COMPONENT netdata\n        DESTINATION ${WEB_DEST})\n\n#\n# service files\n#\n\nconfigure_file(system/install-service.sh.in system/install-service.sh @ONLY)\ninstall(PROGRAMS\n        ${CMAKE_BINARY_DIR}/system/install-service.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata)\n\nconfigure_file(system/launchd/netdata.plist.in system/launchd/netdata.plist @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/launchd/netdata.plist\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/launchd)\n\nconfigure_file(system/freebsd/rc.d/netdata.in system/freebsd/rc.d/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/freebsd/rc.d/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/freebsd/rc.d)\n\nconfigure_file(system/initd/init.d/netdata.in system/initd/init.d/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/initd/init.d/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/initd/init.d)\n\nconfigure_file(system/logrotate/netdata.in system/logrotate/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/logrotate/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/logrotate)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/logrotate/netdata\n        COMPONENT netdata\n        DESTINATION etc/logrotate.d)\n\nconfigure_file(system/lsb/init.d/netdata.in system/lsb/init.d/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/lsb/init.d/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/lsb/init.d)\n\nconfigure_file(system/openrc/conf.d/netdata.in system/openrc/conf.d/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/openrc/conf.d/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/openrc/conf.d)\n\nconfigure_file(system/openrc/init.d/netdata.in system/openrc/init.d/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/openrc/init.d/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/openrc/init.d)\n\nconfigure_file(system/runit/run.in system/runit/run @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/runit/run\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/runit)\n\nconfigure_file(system/dinit/netdata.in system/dinit/netdata @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/dinit/netdata\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/dinit)\n\nconfigure_file(system/systemd/netdata.service.in system/systemd/netdata.service @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/systemd/netdata.service\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/systemd)\n\ninstall(FILES\n        system/systemd/journald@netdata.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/systemd)\n\nconfigure_file(system/systemd/netdata.service.v235.in system/systemd/netdata.service.v235 @ONLY)\ninstall(FILES\n        ${CMAKE_BINARY_DIR}/system/systemd/netdata.service.v235\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/systemd)\n\n\nif(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${CMAKE_BINARY_DIR}/system/systemd/netdata.service\n                COMPONENT netdata\n                DESTINATION lib/systemd/system)\n        install(DIRECTORY\n                COMPONENT netdata\n                DESTINATION usr/lib/systemd/journald@netdata.conf.d)\n        install(FILES\n                system/systemd/journald@netdata.conf\n                COMPONENT netdata\n                DESTINATION usr/lib/systemd/journald@netdata.conf.d\n                RENAME netdata.conf)\nendif()\n\ninstall(FILES\n        system/systemd/50-netdata.preset\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/system/systemd)\n\ninstall(FILES\n        system/vnodes/vnodes.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d/vnodes)\n\ninstall(FILES\n        system/.install-type\n        COMPONENT netdata\n        DESTINATION etc/netdata)\n\ninstall(PROGRAMS\n        system/edit-config\n        COMPONENT netdata\n        DESTINATION etc/netdata)\n\nif(BUILD_FOR_PACKAGING)\n        set(NETDATA_CONF_DEST \"etc/netdata\")\nelse()\n        set(NETDATA_CONF_DEST \"usr/lib/netdata/conf.d\")\nendif()\n\n#\n# misc files\n#\nif(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/deb/netdata/etc/default/netdata\n                COMPONENT netdata\n                DESTINATION etc/default)\n\n        install(PROGRAMS\n                ${PKG_FILES_PATH}/deb/netdata/etc/init.d/netdata\n                COMPONENT netdata\n                DESTINATION etc/init.d)\nendif()\n\nif(NOT OS_WINDOWS)\n  install(PROGRAMS\n          packaging/installer/netdata-updater.sh\n          COMPONENT netdata\n          DESTINATION usr/libexec/netdata)\n\n  install(FILES\n          system/netdata.conf\n          system/netdata-updater.conf\n          COMPONENT netdata\n          DESTINATION ${NETDATA_CONF_DEST})\n\n  configure_file(system/cron/netdata-updater-daily.in\n                 system/cron/netdata-updater-daily\n                 @ONLY)\n  install(FILES\n          ${CMAKE_BINARY_DIR}/system/cron/netdata-updater-daily\n          COMPONENT netdata\n          DESTINATION usr/lib/netdata/system/cron)\n\n  configure_file(system/systemd/netdata-updater.service.in\n                 system/systemd/netdata-updater.service\n                 @ONLY)\n  install(FILES\n          ${CMAKE_BINARY_DIR}/system/systemd/netdata-updater.service\n          COMPONENT netdata\n          DESTINATION usr/lib/netdata/system/systemd)\n\n  install(FILES\n          system/systemd/netdata-updater.timer\n          COMPONENT netdata\n          DESTINATION usr/lib/netdata/system/systemd)\n\n  if(BUILD_FOR_PACKAGING)\n    install(FILES\n            ${CMAKE_BINARY_DIR}/system/systemd/netdata-updater.service\n            COMPONENT netdata\n            DESTINATION lib/systemd/system)\n    install(FILES\n            system/systemd/netdata-updater.timer\n            COMPONENT netdata\n            DESTINATION lib/systemd/system)\n  endif()\nendif()\n\n#\n# TODO: check the following files for correct substitutions\n#\nconfigure_file(src/daemon/anonymous-statistics.sh.in src/daemon/anonymous-statistics.sh @ONLY)\ninstall(PROGRAMS\n        ${CMAKE_BINARY_DIR}/src/daemon/anonymous-statistics.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\nconfigure_file(src/daemon/get-kubernetes-labels.sh.in src/daemon/get-kubernetes-labels.sh @ONLY)\ninstall(PROGRAMS\n        ${CMAKE_BINARY_DIR}/src/daemon/get-kubernetes-labels.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\ninstall(PROGRAMS\n        src/daemon/system-info.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\n#\n# health files\n#\n\nfile(GLOB_RECURSE HEALTH_CONF_FILES \"src/health/health.d/*.conf\")\ninstall(FILES\n        ${HEALTH_CONF_FILES}\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d/health.d)\n\nconfigure_file(src/health/notifications/alarm-notify.sh.in src/health/notifications/alarm-notify.sh @ONLY)\ninstall(PROGRAMS\n        ${CMAKE_BINARY_DIR}/src/health/notifications/alarm-notify.sh\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n        install(PROGRAMS\n                src/health/notifications/alarm-email.sh\n                src/health/notifications/alarm-test.sh\n                COMPONENT netdata\n                DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\ninstall(FILES\n        src/health/notifications/health_alarm_notify.conf\n        src/health/notifications/health_email_recipients.conf\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d)\n#\n# test/ files\n#\n\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n        configure_file(tests/health_mgmtapi/health-cmdapi-test.sh.in tests/health_mgmtapi/health-cmdapi-test.sh @ONLY)\n        configure_file(tests/acls/acl.sh.in tests/acls/acl.sh @ONLY)\n        configure_file(tests/urls/request.sh.in tests/urls/request.sh @ONLY)\n        configure_file(tests/alarm_repetition/alarm.sh.in tests/alarm_repetition/alarm.sh @ONLY)\n        configure_file(tests/template_dimension/template_dim.sh.in tests/template_dimension/template_dim.sh @ONLY)\n        configure_file(tests/ebpf/ebpf_thread_function.sh.in tests/ebpf/ebpf_thread_function.sh @ONLY)\n\n        install(FILES\n                ${CMAKE_BINARY_DIR}/tests/health_mgmtapi/health-cmdapi-test.sh\n                ${CMAKE_BINARY_DIR}/tests/acls/acl.sh\n                ${CMAKE_BINARY_DIR}/tests/urls/request.sh\n                ${CMAKE_BINARY_DIR}/tests/alarm_repetition/alarm.sh\n                ${CMAKE_BINARY_DIR}/tests/template_dimension/template_dim.sh\n                ${CMAKE_BINARY_DIR}/tests/ebpf/ebpf_thread_function.sh\n                DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n#\n# charts.d plugin\n#\n\nif(ENABLE_PLUGIN_CHARTS)\n  install(DIRECTORY COMPONENT plugin-chartsd DESTINATION etc/netdata/charts.d)\n\n  configure_file(src/collectors/charts.d.plugin/charts.d.plugin.in src/collectors/charts.d.plugin/charts.d.plugin @ONLY)\n  install(PROGRAMS\n          ${CMAKE_BINARY_DIR}/src/collectors/charts.d.plugin/charts.d.plugin\n          COMPONENT plugin-chartsd\n          DESTINATION usr/libexec/netdata/plugins.d)\n\n  install(PROGRAMS\n          src/collectors/charts.d.plugin/charts.d.dryrun-helper.sh\n          COMPONENT plugin-chartsd\n          DESTINATION usr/libexec/netdata/plugins.d)\n\n  install(FILES\n          src/collectors/charts.d.plugin/charts.d.conf\n          COMPONENT plugin-chartsd\n          DESTINATION usr/lib/netdata/conf.d)\n\n  install(PROGRAMS\n          src/collectors/charts.d.plugin/example/example.chart.sh\n          src/collectors/charts.d.plugin/libreswan/libreswan.chart.sh\n          src/collectors/charts.d.plugin/opensips/opensips.chart.sh\n          COMPONENT plugin-chartsd\n          DESTINATION usr/libexec/netdata/charts.d)\n\n  install(FILES\n          src/collectors/charts.d.plugin/example/example.conf\n          src/collectors/charts.d.plugin/libreswan/libreswan.conf\n          src/collectors/charts.d.plugin/opensips/opensips.conf\n          COMPONENT plugin-chartsd\n          DESTINATION usr/lib/netdata/conf.d/charts.d)\n\n  if(BUILD_FOR_PACKAGING)\n    install(FILES\n            ${PKG_FILES_PATH}/copyright\n            COMPONENT plugin-chartsd\n            DESTINATION usr/share/doc/netdata-plugin-chartsd)\n  endif()\nendif()\n\n# This is needed both by the TC plugin (which only gets built on Linux) and the charts plugin.\nif(OS_LINUX OR ENABLE_PLUGIN_CHARTS)\n  install(FILES\n          src/collectors/charts.d.plugin/loopsleepms.sh.inc\n          COMPONENT netdata\n          DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\n#\n# tc-qos-helper\n#\n\nif(OS_LINUX)\n  configure_file(src/collectors/tc.plugin/tc-qos-helper.sh.in src/collectors/tc.plugin/tc-qos-helper.sh @ONLY)\n  install(PROGRAMS\n          ${CMAKE_BINARY_DIR}/src/collectors/tc.plugin/tc-qos-helper.sh\n          COMPONENT netdata\n          DESTINATION usr/libexec/netdata/plugins.d)\nendif()\n\n# confs\ninstall(FILES\n        src/collectors/systemd-journal.plugin/schema.d/systemd-journal%3Amonitored-directories.json\n        src/health/schema.d/health%3Aalert%3Aprototype.json\n        COMPONENT netdata\n        DESTINATION usr/lib/netdata/conf.d/schema.d)\n\n#\n# python.d plugin\n#\n\nif(ENABLE_PLUGIN_PYTHON)\n  install(DIRECTORY COMPONENT plugin-pythond DESTINATION etc/netdata/python.d)\n\n  configure_file(src/collectors/python.d.plugin/python.d.plugin.in src/collectors/python.d.plugin/python.d.plugin @ONLY)\n  install(PROGRAMS ${CMAKE_BINARY_DIR}/src/collectors/python.d.plugin/python.d.plugin\n          COMPONENT plugin-pythond\n          DESTINATION usr/libexec/netdata/plugins.d)\n\n  install(DIRECTORY src/collectors/python.d.plugin/python_modules\n          COMPONENT plugin-pythond\n          DESTINATION usr/libexec/netdata/python.d)\n\n  if(OS_WINDOWS)\n    include(NetdataUtil)\n    precompile_python(usr/libexec/netdata/python.d plugin-pythond)\n  endif()\n\n  install(FILES src/collectors/python.d.plugin/python.d.conf\n          COMPONENT plugin-pythond\n          DESTINATION usr/lib/netdata/conf.d)\n\n  install(FILES\n          src/collectors/python.d.plugin/am2320/am2320.conf\n          src/collectors/python.d.plugin/go_expvar/go_expvar.conf\n          src/collectors/python.d.plugin/haproxy/haproxy.conf\n          src/collectors/python.d.plugin/pandas/pandas.conf\n          src/collectors/python.d.plugin/traefik/traefik.conf\n          COMPONENT plugin-pythond\n          DESTINATION usr/lib/netdata/conf.d/python.d)\n\n  install(FILES\n          src/collectors/python.d.plugin/am2320/am2320.chart.py\n          src/collectors/python.d.plugin/go_expvar/go_expvar.chart.py\n          src/collectors/python.d.plugin/haproxy/haproxy.chart.py\n          src/collectors/python.d.plugin/pandas/pandas.chart.py\n          src/collectors/python.d.plugin/traefik/traefik.chart.py\n          COMPONENT plugin-pythond\n          DESTINATION usr/libexec/netdata/python.d)\n\n  if(BUILD_FOR_PACKAGING)\n    install(FILES\n            ${PKG_FILES_PATH}/copyright\n            COMPONENT plugin-pythond\n            DESTINATION usr/share/doc/netdata-plugin-pythond)\n  endif()\nendif()\n\n#\n# ioping.plugin\n#\n\nconfigure_file(src/collectors/ioping.plugin/ioping.plugin.in src/collectors/ioping.plugin/ioping.plugin @ONLY)\ninstall(PROGRAMS ${CMAKE_BINARY_DIR}/src/collectors/ioping.plugin/ioping.plugin\n        COMPONENT netdata\n        DESTINATION usr/libexec/netdata/plugins.d)\n\n#\n# go.d.plugin\n#\nif(ENABLE_PLUGIN_GO)\n    install(DIRECTORY COMPONENT plugin-go DESTINATION etc/netdata/go.d)\n\n    install(FILES src/go/plugin/go.d/config/go.d.conf\n            COMPONENT plugin-go\n            DESTINATION usr/lib/netdata/conf.d)\n\n    install(DIRECTORY\n            COMPONENT plugin-go\n            DESTINATION usr/lib/netdata/conf.d/go.d)\n    file(GLOB GO_CONF_FILES src/go/plugin/go.d/config/go.d/*.conf)\n    install(FILES ${GO_CONF_FILES}\n            COMPONENT plugin-go\n            DESTINATION usr/lib/netdata/conf.d/go.d)\n\n    install(DIRECTORY\n            COMPONENT plugin-go\n            DESTINATION usr/lib/netdata/conf.d/go.d/sd)\n    file(GLOB GO_SD_CONF_FILES src/go/plugin/go.d/config/go.d/sd/*.conf)\n    install(FILES ${GO_SD_CONF_FILES}\n            COMPONENT plugin-go\n            DESTINATION usr/lib/netdata/conf.d/go.d/sd)\n\n    if(BUILD_FOR_PACKAGING)\n        install(FILES\n                ${PKG_FILES_PATH}/copyright\n                COMPONENT plugin-go\n                DESTINATION usr/share/doc/netdata-plugin-go)\n    endif()\nendif()\n\n#\n# dashboard\n#\n\nif(ENABLE_DASHBOARD)\n  include(NetdataDashboard)\n  bundle_dashboard()\n\n  include(src/web/gui/v1/dashboard_v1.cmake)\n  include(src/web/gui/gui.cmake)\n\n  function(cat IN_FILE OUT_FILE)\n    file(READ ${IN_FILE} CONTENTS)\n    file(APPEND ${OUT_FILE} \"${CONTENTS}\")\n  endfunction()\n\n  file(WRITE ${CMAKE_BINARY_DIR}/src/web/gui/dashboard.js.in \"\")\n\n  foreach(JS_FILE ${DASHBOARD_JS_FILES})\n    cat(${JS_FILE} ${CMAKE_BINARY_DIR}/dashboard.js.in)\n  endforeach()\n\n  configure_file(${CMAKE_BINARY_DIR}/dashboard.js.in\n                 ${CMAKE_BINARY_DIR}/dashboard.js COPYONLY)\n\n  install(FILES\n          ${CMAKE_BINARY_DIR}/dashboard.js\n          COMPONENT dashboard\n          DESTINATION ${WEB_DEST})\n\n  install(FILES\n          src/web/gui/dashboard_info_custom_example.js\n          src/web/gui/dashboard_info.js\n          src/web/gui/main.css\n          src/web/gui/main.js\n          src/web/gui/switch.html\n          src/web/gui/ilove.html\n          COMPONENT dashboard\n          DESTINATION ${WEB_DEST})\n\n  install(FILES\n          src/web/gui/old/index.html\n          COMPONENT dashboard\n          DESTINATION ${WEB_DEST}/old)\n\n  install(FILES\n          src/web/gui/static/img/netdata-logomark.svg\n          COMPONENT dashboard\n          DESTINATION ${WEB_DEST}/static/img)\n\n  install(FILES\n          src/web/gui/css/morris-0.5.1.css\n          src/web/gui/css/c3-0.4.18.min.css\n          COMPONENT dashboard\n          DESTINATION ${WEB_DEST}/css)\n\n  install(FILES\n          src/web/gui/.well-known/dnt/cookies\n          COMPONENT dashboard\n          DESTINATION ${WEB_DEST}/.well-known/dnt)\n\n  if(NOT OS_WINDOWS)\n    # v0 dashboard\n    install(FILES\n            src/web/gui/v0/index.html\n            COMPONENT dashboard\n            DESTINATION ${WEB_DEST}/v0)\n  endif()\nendif()\n\nif(OS_WINDOWS)\n        install(FILES /usr/bin/msys-protobuf-32.dll\n                      /usr/bin/msys-uv-1.dll\n                      DESTINATION \"${BINDIR}\")\n\n        # Make bash & netdata happy\n        install(DIRECTORY DESTINATION tmp)\n\n        # Make curl work with ssl\n        install(DIRECTORY /usr/ssl DESTINATION usr)\nendif()\n\ninclude(Packaging)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.0283203125,
          "content": "./packaging/docker/Dockerfile"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.6591796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n---------------------------------------------------------------------------\n\nNote:\nIndividual files contain the following tag instead of the full license text.\n\n\tSPDX-License-Identifier:\tGPL-3.0-or-later\n\nThis enables machine processing of license information based on the SPDX\nLicense Identifiers that are here available: http://spdx.org/licenses/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 66.0625,
          "content": "<p align=\"center\">\n<a href=\"https://www.netdata.cloud#gh-light-mode-only\">\n  <img src=\"https://www.netdata.cloud/img/readme-images/netdata_readme_logo_light.png\" alt=\"Netdata\" width=\"300\"/>\n</a>\n<a href=\"https://www.netdata.cloud#gh-dark-mode-only\">\n  <img src=\"https://www.netdata.cloud/img/readme-images/netdata_readme_logo_dark.png\" alt=\"Netdata\" width=\"300\"/>\n</a>\n</p>\n<h3 align=\"center\">Monitor your servers, containers, and applications<br/>in high-resolution and in real-time.</h3>\n\n<br />\n<p align=\"center\">\n  <a href=\"https://github.com/netdata/netdata/\"><img src=\"https://img.shields.io/github/stars/netdata/netdata?style=social\" alt=\"GitHub Stars\"></a>\n  <br />\n  <a href=\"https://app.netdata.cloud/spaces/netdata-demo?utm_campaign=github_readme_demo_badge\"><img src=\"https://img.shields.io/badge/Live%20Demo-green\" alt=\"Live Demo\"></a>\n  <a href=\"https://github.com/netdata/netdata/releases/latest\"><img src=\"https://img.shields.io/github/release/netdata/netdata.svg\" alt=\"Latest release\"></a>\n  <a href=\"https://github.com/netdata/netdata-nightlies/releases/latest\"><img src=\"https://img.shields.io/github/release/netdata/netdata-nightlies.svg\" alt=\"Latest nightly build\"></a>\n  <br/>\n  <a href=\"https://community.netdata.cloud\"><img alt=\"Discourse topics\" src=\"https://img.shields.io/discourse/topics?server=https%3A%2F%2Fcommunity.netdata.cloud%2F&logo=discourse&label=discourse%20forum\"></a>\n  <a href=\"https://github.com/netdata/netdata/discussions\"><img alt=\"GitHub Discussions\" src=\"https://img.shields.io/github/discussions/netdata/netdata?logo=github&label=github%20discussions\"></a>\n  <br/>\n  <a href=\"https://bestpractices.coreinfrastructure.org/projects/2231\"><img src=\"https://bestpractices.coreinfrastructure.org/projects/2231/badge\" alt=\"CII Best Practices\"></a>\n  <a href=\"https://scan.coverity.com/projects/netdata-netdata?tab=overview\"><img alt=\"Coverity Scan\" src=\"https://img.shields.io/coverity/scan/netdata\"></a>\n</p>\n\n<p align=\"center\"><b>Visit the <a href=\"https://www.netdata.cloud\">Project's Home Page</a></b></p>\n\n<hr class=\"solid\">\n\nMENU: **[GETTING STARTED](#getting-started)** | **[HOW IT WORKS](#how-it-works)** | **[FAQ](#faq)** | **[DOCS](#book-documentation)** | **[COMMUNITY](#tada-community)** | **[CONTRIBUTE](#pray-contribute)** | **[LICENSE](#license)**\n\n> **Important** :bulb:<br/>\n> People get addicted to Netdata. Once you use it on your systems, **there's no going back!**<br/>\n\n**Netdata: Real-time Observability, Simplified.**\n\n[![Platforms](https://img.shields.io/badge/Platforms-Linux%20%7C%20macOS%20%7C%20FreeBSD%20%7C%20Windows-blue)]()\n\nNetdata is a high-performance observability platform designed to simplify modern infrastructure monitoring. With its innovative distributed architecture, Netdata delivers real-time insights into your systems, containers, and applications at a granular level.\n\n**:sparkles: Key Features**:\n\n- **Real-Time**: Per-second data collection provides immediate visibility into your infrastructure's behavior.\n- **Zero-Configuration**: Start monitoring in minutes with automatic detection and instant insights.\n- **ML-Powered Insights**: Automatic anomaly detection and pattern recognition, helping you identify issues before they become critical.\n- **Enterprise-Ready**: Scale from a single node to thousands while maintaining performance and ease of use.\n- **Complete Visibility**: From infrastructure to applications, logs to metrics, all in one solution.\n- **Edge-Based**: Process and store metrics at the edge for superior performance and cost efficiency.\n- **Advanced Visualization**: Rich, interactive dashboard for deep system insights and rapid troubleshooting.\n\n---\n\n### The Netdata Ecosystem\n\n> **Note**: This repository contains the Netdata Agent, the open-source core of the Netdata ecosystem. For information about other components, see below.\n\nThis three-part architecture enables Netdata to scale seamlessly from single-node deployments to complex multi-cloud environments with thousands of nodes, supporting long-term data retention without compromising performance.\n\n| Component     | Description                                                                                                                                                                                                                                                                                                                            | License                                         |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------|\n| Netdata Agent | • The heart of Netdata's monitoring capabilities<br/>• Handles data collection, storage, querying, ML analysis, exports, and alerts<br/>• Runs on physical/virtual servers, cloud, Kubernetes, and IoT devices<br/>• Optimized for zero production impact<br/>• Core of all observability features                                     | [GPL v3+](https://www.gnu.org/licenses/gpl-3.0) |\n| Netdata Cloud | • Adds enterprise-grade features:<br/>  &emsp; - User management and RBAC<br/>  &emsp; - Horizontal scalability<br/>  &emsp; - Centralized alert management<br/> &emsp;  - Access your infrastructure from anywhere<br/>• Available as SaaS or on-premises<br/>• Includes free community tier<br/>• Does not centralize metric storage |                                                 |\n| Netdata UI    | • Powers all dashboards and visualizations<br/>• Free to use with both Agent and Cloud<br/>• Included in standard Netdata packages<br/>• Latest version available via CDN                                                                                                                                                              | [NCUL1](https://app.netdata.cloud/LICENSE.txt)  |\n\n### Key capabilities of the Netdata Agent\n\nWith these capabilities, Netdata Agent provides a powerful, automated monitoring solution that works right out-of-the-box while remaining highly customizable for specific needs.\n\n| Capability                    | Description                                                                                                                                                                                                                     |\n|-------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Comprehensive Data Collection | • 800+ integrations out of the box<br/>• Collects metrics from systems, containers, VMs, hardware sensors<br/>• Supports OpenMetrics exporters, StatsD, and logs<br/>• OpenTelemetry support coming soon                        |\n| Performance & Precision       | • Per-second data collection<br/>• Real-time visualization with 1-second latency<br/>• High-resolution metrics for precise monitoring                                                                                           |\n| Edge-Based ML                 | • Trains ML models directly at the edge<br/>• Automatic anomaly detection per metric<br/>• Pattern recognition based on historical behavior                                                                                     |\n| Advanced Log Management       | • Direct systemd-journald and Windows Event Log integrations<br/>• Tools for log conversion (log2journal, systemd-cat-native)<br/>• Process logs at the edge - no centralization needed<br/>• Rich log visualization dashboards |\n| Observability Pipeline        | • Build Parent-Child relationships between Agents<br/>• Create flexible centralization points<br/>• Control data replication and retention at multiple levels                                                                   |\n| Automated Visualization       | • NIDL (Nodes, Instances, Dimensions & Labels) data model<br/>• Auto-generated, correlated dashboards<br/>• Filter and analyze data without query language<br/>• Free to use, powered by Netdata UI                             |\n| Smart Alerting                | • Hundreds of pre-configured alerts<br/>• Detect common issues automatically<br/>• Multiple notification methods<br/>• Proactive problem detection                                                                              |\n| Low Maintenance               | • Auto-detection of metrics<br/>• Zero-touch machine learning<br/>• Easy scalability<br/>• CI/CD friendly deployment                                                                                                            |\n| Open & Extensible             | • Modular architecture<br/>• Easy to extend and customize<br/>• Integrates with existing monitoring tools<br/>• Active community ecosystem                                                                                      |\n\n### What can be monitored with the Netdata Agent\n\nNetdata monitors all the following:\n\n|                                                                                                   Component |              Linux               | FreeBSD | macOS |                                     Windows                                     |\n|------------------------------------------------------------------------------------------------------------:|:--------------------------------:|:-------:|:-----:|:-------------------------------------------------------------------------------:|\n|                             **System Resources**<small><br/>CPU, Memory and system shared resources</small> |               Full               |   Yes   |  Yes  |                                       Yes                                       |\n|                                **Storage**<small><br/>Disks, Mount points, Filesystems, RAID arrays</small> |               Full               |   Yes   |  Yes  |                                       Yes                                       |\n|                                 **Network**<small><br/>Network Interfaces, Protocols, Firewall, etc</small> |               Full               |   Yes   |  Yes  |                                       Yes                                       |\n|                        **Hardware & Sensors**<small><br/>Fans, Temperatures, Controllers, GPUs, etc</small> |               Full               |  Some   | Some  |                                      Some                                       |\n|                                       **O/S Services**<small><br/>Resources, Performance and Status</small> | Yes<small><br/>`systemd`</small> |    -    |   -   |                                        -                                        |\n|                                      **Processes**<small><br/>Resources, Performance, OOM, and more</small> |               Yes                |   Yes   |  Yes  |                                       Yes                                       |\n|                                                                             System and Application **Logs** | Yes<small><br/>`systemd`-journal |    -    |   -   | Yes<small><br/>`Windows Event Log`, and<br/>`Event Tracing for Windows`</small> |\n|                                 **Network Connections**<small><br/>Live TCP and UDP sockets per PID</small> |               Yes                |    -    |   -   |                                        -                                        |\n|                               **Containers**<small><br/>Docker/containerd, LXC/LXD, Kubernetes, etc</small> |               Yes                |    -    |   -   |                                        -                                        |\n|                                 **VMs** (from the host)<small><br/>KVM, qemu, libvirt, Proxmox, etc</small> | Yes<small><br/>`cgroups`</small> |    -    |   -   |                        Yes<small><br/>`Hyper-V`</small>                         |\n|                       **Synthetic Checks**<small><br/>Test APIs, TCP ports, Ping, Certificates, etc</small> |               Yes                |   Yes   |  Yes  |                                       Yes                                       |\n| **Packaged Applications**<small><br/>nginx, apache, postgres, redis, mongodb,<br/>and hundreds more</small> |               Yes                |   Yes   |  Yes  |                                       Yes                                       |\n|                              **Cloud Provider Infrastructure**<small><br/>AWS, GCP, Azure, and more</small> |               Yes                |   Yes   |  Yes  |                                       Yes                                       |\n|                       **Custom Applications**<small><br/>OpenMetrics, StatsD and soon OpenTelemetry</small> |               Yes                |   Yes   |  Yes  |                                       Yes                                       |\n\nWhen the Netdata Agent runs on Linux, it monitors every kernel feature available, providing full coverage of all kernel technologies and offers full **enterprise hardware** coverage, monitoring all components that provide hardware error reporting, like PCI AER, RAM EDAC, IPMI, S.M.A.R.T., NVMe, Fans, Power, Voltages, and more.\n\n---\n\n### :star: Netdata is the most energy-efficient monitoring tool :star:\n\n<p align=\"center\">\n<a href=\"https://www.ivanomalavolta.com/files/papers/ICSOC_2023.pdf#gh-dark-mode-only\">\n  <img src=\"https://github.com/netdata/netdata/assets/139226121/7118757a-38fb-48d7-b12a-53e709a8e8c0\" alt=\"Energy Efficiency\" width=\"1000\"/>\n</a>\n<a href=\"https://www.ivanomalavolta.com/files/papers/ICSOC_2023.pdf#gh-light-mode-only\">\n  <img src=\"https://github.com/netdata/netdata/assets/139226121/4f64cbb6-05e4-48e3-b7c0-d1b79e37e219\" alt=\"Energy efficiency\" width=\"1000\"/>\n</a>\n</p>\n\nDec 11, 2023: [University of Amsterdam published a study](https://twitter.com/IMalavolta/status/1734208439096676680) related to the impact of monitoring tools for Docker based systems, aiming to answer 2 questions:\n\n1. **The impact of monitoring on the energy efficiency of Docker-based systems**\n2. **The impact of monitoring on Docker-based systems?**\n\n- 🚀 Netdata excels in energy efficiency: **\"... Netdata is the most energy-efficient tool ...\"**, as the study says.\n- 🚀 Netdata excels in CPU Usage, RAM Usage and Execution Time, and has a similar impact on Network Traffic as Prometheus.\n\nThe study didn’t normalize the results based on the number of metrics collected. Given that Netdata usually collects significantly more metrics than the other tools, Netdata managed to outperform the other tools, while ingesting a much higher number of metrics. [Read the full study here](https://www.ivanomalavolta.com/files/papers/ICSOC_2023.pdf).\n\n---\n\n### Netdata vs Prometheus\n\n<p align=\"center\">\n<a href=\"https://blog.netdata.cloud/netdata-vs-prometheus-performance-analysis#gh-light-mode-only\">\n  <img src=\"https://github.com/netdata/netdata/assets/139226121/6c21ae39-8656-45c3-bc85-4b012679d2bb\" alt=\"Netdata\" width=\"1000\"/>\n</a>\n<a href=\"https://blog.netdata.cloud/netdata-vs-prometheus-performance-analysis#gh-dark-mode-only\">\n  <img src=\"https://github.com/netdata/netdata/assets/139226121/f2dbde46-d3dd-4807-bd34-966da4d0ec22\" alt=\"Netdata\" width=\"1000\"/>\n</a>\n</p>\n\nOn the same workload, Netdata uses **35% less CPU**, **49% less RAM**, **12% less bandwidth**, **98% less disk I/O**, and is **75% more disk space efficient** on high resolution metrics storage, while providing more than a year of overall retention on the same disk footprint Prometheus offers 7 days of retention. [Read the full analysis in our blog](https://blog.netdata.cloud/netdata-vs-prometheus-performance-analysis/).\n\n---\n\n&nbsp;<br/>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/white/cncf-white.svg#gh-dark-mode-only\" alt=\"CNCF\" width=\"300\">\n  <img src=\"https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/black/cncf-black.svg#gh-light-mode-only\" alt=\"CNCF\" width=\"300\">\n  <br />\n  Netdata actively supports and is a member of the Cloud Native Computing Foundation (CNCF)<br />\n  &nbsp;<br/>\n  ...and due to your love :heart:, it is one of the most :star:'d projects in the <a href=\"https://landscape.cncf.io/?item=observability-and-analysis--observability--netdata\">CNCF landscape</a>!\n</p>\n&nbsp;<br/>\n\n<hr class=\"solid\">\n\n<p align=\"center\">\n  <b>You can see Netdata live!</b><br/>\n\t<a href=\"https://frankfurt.netdata.rocks\"><b>FRANKFURT</b></a> |\n\t<a href=\"https://newyork.netdata.rocks\"><b>NEWYORK</b></a> |\n\t<a href=\"https://atlanta.netdata.rocks\"><b>ATLANTA</b></a> |\n\t<a href=\"https://sanfrancisco.netdata.rocks\"><b>SANFRANCISCO</b></a> |\n\t<a href=\"https://toronto.netdata.rocks\"><b>TORONTO</b></a> |\n\t<a href=\"https://singapore.netdata.rocks\"><b>SINGAPORE</b></a> |\n\t<a href=\"https://bangalore.netdata.rocks\"><b>BANGALORE</b></a>\n  <br/>\n  \t<i>We've set up multiple demo clusters around the world, each running with the default configuration and showing real monitoring data.</i>\n  <br/>\n    <i>Choose the instance closest to you for the best experience.</i>\n</p>\n\n<hr class=\"solid\">\n\n## Getting Started\n\n<p align=\"center\">\n  <a href=\"https://registry.my-netdata.io/#menu_netdata_submenu_registry\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_entries&dimensions=persons&label=user%20base&units=M&value_color=blue&precision=2&divide=1000000&options=unaligned&tier=1&v44\" alt=\"User base\"></a>\n  <a href=\"https://registry.my-netdata.io/#menu_netdata_submenu_registry\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_entries&dimensions=machines&label=servers%20monitored&units=M&divide=1000000&value_color=orange&precision=2&options=unaligned&tier=1&v44\" alt=\"Servers monitored\"></a>\n  <a href=\"https://registry.my-netdata.io/#menu_netdata_submenu_registry\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_sessions&label=sessions%20served&units=M&value_color=yellowgreen&precision=2&divide=1000000&options=unaligned&tier=1&v44\" alt=\"Sessions served\"></a>\n  <a href=\"https://hub.docker.com/r/netdata/netdata\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=dockerhub.pulls_sum&divide=1000000&precision=1&units=M&label=docker+hub+pulls&options=unaligned&tier=1&v44\" alt=\"Docker Hub pulls\"></a>\n  <br />\n  <a href=\"https://registry.my-netdata.io/#menu_netdata_submenu_registry\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_entries&dimensions=persons&after=-86400&options=unaligned&group=incremental-sum&label=new%20users%20today&units=null&value_color=blue&precision=0&options=unaligned&tier=1&v44\" alt=\"New users today\"></a>\n  <a href=\"https://registry.my-netdata.io/#menu_netdata_submenu_registry\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_entries&dimensions=machines&group=incremental-sum&after=-86400&options=unaligned&label=servers%20added%20today&units=null&value_color=orange&precision=0&tier=1&v44\" alt=\"New machines today\"></a>\n  <a href=\"https://registry.my-netdata.io/#menu_netdata_submenu_registry\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_sessions&after=-86400&group=incremental-sum&options=unaligned&label=sessions%20served%20today&units=null&value_color=yellowgreen&precision=0&tier=1&v44\" alt=\"Sessions today\"></a>\n  <a href=\"https://hub.docker.com/r/netdata/netdata\"><img src=\"https://registry.my-netdata.io/api/v3/badge.svg?chart=dockerhub.pulls_sum&divide=1000&precision=1&units=k&label=docker+hub+pulls&after=-86400&group=incremental-sum&label=docker%20hub%20pulls%20today&options=unaligned&tier=1&v44\" alt=\"Docker Hub pulls today\"></a>\n</p>\n\n### 1. **Install Netdata everywhere** :v:\n\nNetdata can be installed on all Linux, macOS, FreeBSD (and soon on Windows) systems. We provide binary packages for the most popular operating systems and package managers.\n\n- Install on [Ubuntu, Debian CentOS, Fedora, Suse, Red Hat, Arch, Alpine, Gentoo, even BusyBox](https://learn.netdata.cloud/docs/installing/one-line-installer-for-all-linux-systems).\n- Install with [Docker](/packaging/docker/README.md).<br/>\n  Netdata is a [Verified Publisher on DockerHub](https://hub.docker.com/r/netdata/netdata) and our users enjoy free unlimited DockerHub pulls :heart_eyes:.\n- Install on [macOS](https://learn.netdata.cloud/docs/installing/macos) :metal:.\n- Install on [FreeBSD](https://learn.netdata.cloud/docs/installing/freebsd) and [pfSense](https://learn.netdata.cloud/docs/installing/pfsense).\n- Install [from source](https://learn.netdata.cloud/docs/installing/build-the-netdata-agent-yourself/compile-from-source-code) ![github downloads](https://img.shields.io/github/downloads/netdata/netdata/total?color=success&logo=github)\n- For Kubernetes deployments [check here](https://learn.netdata.cloud/docs/installation/install-on-specific-environments/kubernetes/).\n\nCheck also the [Netdata Deployment Guides](https://learn.netdata.cloud/docs/deployment-guides/) to decide how to deploy it in your infrastructure.\n\nBy default, you will have immediately available a local dashboard. Netdata starts a web server for its dashboard at port `19999`. Open up your web browser of choice and\nnavigate to `http://NODE:19999`, replacing `NODE` with the IP address or hostname of your Agent. If installed on localhost, you can access it through `http://localhost:19999`.\n\n_Note: the binary packages we provide, install Netdata UI automatically. Netdata UI is closed-source, but free to use with Netdata Agents and Netdata Cloud._\n\n### 2. **Configure Collectors** :boom:\n\nNetdata auto-detects and auto-discovers most operating system data sources and applications. However, many data sources require some manual configuration, usually to allow Netdata to get access to the metrics.\n\n- For a detailed list of the 800+ collectors available, check [this guide](https://learn.netdata.cloud/docs/data-collection/).\n- To monitor Windows servers and applications, use [this guide](https://learn.netdata.cloud/docs/data-collection/monitor-anything/system-metrics/windows-machines).<br/><small>Note that Netdata on Windows is at its final release stage, so at the next Netdata release Netdata will natively support Windows.</small>\n- To monitor SNMP devices, check [this guide](https://learn.netdata.cloud/docs/data-collection/monitor-anything/networking/snmp).\n\n### 3. **Configure Alert Notifications** :bell:\n\nNetdata comes with hundreds of pre-configured alerts that automatically check your metrics immediately after they start getting collected.\n\nNetdata can dispatch alert notifications to multiple third party systems, including: `email`, `Alerta`, `AWS SNS`, `Discord`, `Dynatrace`, `flock`, `gotify`, `IRC`, `Matrix`, `MessageBird`, `Microsoft Teams`, `ntfy`, `OPSgenie`, `PagerDuty`, `Prowl`, `PushBullet`, `PushOver`, `RocketChat`, `Slack`, `SMS tools`, `Syslog`, `Telegram`, `Twilio`.\n\nBy default, Netdata will send e-mail notifications if there is a configured MTA on the system.\n\n### 4. **Configure Netdata Parents** :family:\n\nOptionally, configure one or more Netdata Parents. A Netdata Parent is a Netdata Agent that has been configured to accept [streaming connections](https://learn.netdata.cloud/docs/streaming/streaming-configuration-reference) from other Netdata Agents.\n\nNetdata Parents provide:\n\n- **Infrastructure level dashboards, at `http://parent.server.ip:19999/`.**<br/>\n\n  Each Netdata Agent has an API listening at the TCP port 19999 of each server.\n  When you hit that port with a web browser (e.g. `http://server.ip:19999/`), the Netdata Agent UI is presented.\n  When the Netdata Agent is also a Parent, the UI of the Parent includes data for all nodes that stream metrics to that Parent.\n\n- **Increased retention for all metrics of all your nodes.**<br/>\n\n  Each Netdata Agent maintains each own database of metrics. But Parents can be given additional resources to maintain a much longer database than\n  individual Netdata Agents.\n\n- **Central configuration of alerts and dispatch of notifications.**<br/>\n\n  Using Netdata Parents, all the alert notifications integrations can be configured only once at the Parent and they can be disabled at the Netdata Agents.\n\nYou can also use Netdata Parents to:\n\n- Offload your production systems (the parents run ML, alerts, queries, etc. for all their children)\n- Secure your production systems (the parents accept user connections for all their children)\n\n### 5. **Connect to Netdata Cloud** :cloud:\n\n[Sign-in](https://app.netdata.cloud/sign-in) to [Netdata Cloud](https://www.netdata.cloud/) and connect your Netdata Agents and Parents.\nIf you connect your Netdata Parents, there is no need to connect your Netdata Agents. They will be connected via the Parents.\n\nWhen your Netdata nodes are connected to Netdata Cloud, you can (on top of the above):\n\n- Access your Netdata Agents from anywhere\n- Access sensitive Netdata Agent features (like \"Netdata Functions\": processes, systemd-journal)\n- Organize your infra in spaces and Rooms\n- Create, manage, and share **custom dashboards**\n- Invite your team and assign roles to them (Role-Based Access Control)\n- Get infinite horizontal scalability (multiple independent Netdata Agents are viewed as one infra)\n- Configure alerts from the UI\n- Configure data collection from the UI\n- Netdata Mobile App notifications\n\n:love_you_gesture: Netdata Cloud doesn’t prevent you from using your Netdata Agents and Parents directly, and vice versa.<br/>\n\n:ok_hand: Your metrics are still stored in your network when you connect your Netdata Agents and Parents to Netdata Cloud.\n\n<hr class=\"solid\">\n\n## How it works\n\nNetdata is built around a **modular metrics processing pipeline**.\n\n<details><summary>Click to see more details about this pipeline...</summary>\n&nbsp;<br/>\n\nEach Netdata Agent can perform the following functions:\n\n1. **`COLLECT` metrics from their sources**<br/>\n   Uses [internal](https://github.com/netdata/netdata/tree/master/src/collectors) and [external](https://github.com/netdata/go.d.plugin/tree/master/modules) plugins to collect data from their sources.\n\n   Netdata auto-detects and collects almost everything from the operating system: including CPU, Interrupts, Memory, Disks, Mount Points, Filesystems, Network Stack, Network Interfaces, Containers, VMs, Processes, `systemd` units, Linux Performance Metrics, Linux eBPF, Hardware Sensors, IPMI, and more.\n\n   It collects application metrics from applications: PostgreSQL, MySQL/MariaDB, Redis, MongoDB, Nginx, Apache, and hundreds more.\n\n   Netdata also collects your custom application metrics by scraping OpenMetrics exporters, or via StatsD.\n\n   It can convert web server log files to metrics and apply ML and alerts to them in real-time.\n\n   And it also supports synthetic tests / white box tests, so you can ping servers, check API responses, or even check filesystem files and directories to generate metrics, train ML and run alerts and notifications on their status.\n\n2. **`STORE` metrics to a database**<br/>\n   Uses database engine plugins to store the collected data, either in memory and/or on disk. We have developed our own [`dbengine`](https://github.com/netdata/netdata/tree/master/src/database/engine#readme) for storing the data in a very efficient manner, allowing Netdata to have less than one byte per sample on disk and amazingly fast queries.\n\n3. **`LEARN` the behavior of metrics** (ML)<br/>\n   Trains multiple Machine-Learning (ML) models per metric to learn the behavior of each metric individually. Netdata uses the `kmeans` algorithm and creates by default a model per metric per hour, based on the values collected for that metric over the last 6 hours. The trained models are persisted to disk.\n\n4. **`DETECT` anomalies in metrics** (ML)<br/>\n   Uses the trained machine learning (ML) models to detect outliers and mark collected samples as **anomalies**. Netdata stores anomaly information together with each sample and also streams it to Netdata Parents so that the anomaly is also available at query time for the whole retention of each metric.\n\n5. **`CHECK` metrics and trigger alert notifications**<br/>\n   Uses its configured alerts (you can configure your own) to check the metrics for common issues and uses notification plugins to send alert notifications.\n\n6. **`STREAM` metrics to other Netdata Agents**<br/>\n   Push metrics in real-time to Netdata Parents.\n\n7. **`ARCHIVE` metrics to third party databases**<br/>\n   Export metrics to industry standard time-series databases, like `Prometheus`, `InfluxDB`, `OpenTSDB`, `Graphite`, etc.\n\n8. **`QUERY` metrics and present dashboards**<br/>\n   Provide an API to query the data and present interactive dashboards to users.\n\n9. **`SCORE` metrics to reveal similarities and patterns**<br/>\n   Score the metrics according to the given criteria, to find the needle in the haystack.\n\nWhen using Netdata Parents, all the functions of a Netdata Agent (except data collection) can be delegated to Parents to offload production systems.\n\nThe core of Netdata is developed in C. We have our own `libnetdata`, that provides:\n\n- **`DICTIONARY`**<br/>\n  A high-performance algorithm to maintain both indexed and ordered pools of structures Netdata needs. It uses JudyHS arrays for indexing, although it is modular: any hashtable or tree can be integrated into it. Despite being in C, dictionaries follow object-oriented programming principles, so there are constructors, destructors, automatic memory management, garbage collection, and more. For more, see [here](https://github.com/netdata/netdata/tree/master/src/libnetdata/dictionary).\n\n- **`ARAL`**<br/>\n  ARray ALlocator (ARAL) is used to minimize the system allocations made by Netdata. ARAL is optimized for maximum multithreaded performance. It also allows all structures that use it to be allocated in memory-mapped files (shared memory) instead of RAM. For more, see [here](https://github.com/netdata/netdata/tree/master/src/libnetdata/aral).\n\n- **`PROCFILE`**<br/>\n  A high-performance `/proc` (but also any) file parser and text tokenizer. It achieves its performance by keeping files open and adjusting its buffers to read the entire file in one call (which is also required by the Linux kernel). For more, see [here](https://github.com/netdata/netdata/tree/master/src/libnetdata/procfile).\n\n- **`STRING`**<br/>\n  A string internet mechanism, for string deduplication and indexing (using JudyHS arrays), optimized for multithreaded usage. For more, see [here](https://github.com/netdata/netdata/tree/master/src/libnetdata/string).\n\n- **`ARL`**<br/>\n  Adaptive Resortable List (ARL) is a very fast list iterator, that keeps the expected items on the list in the same order they are found in an input list. So, the first iteration is somewhat slower, but all the following iterations are perfectly aligned for the best performance. For more, see [here](https://github.com/netdata/netdata/tree/master/src/libnetdata/adaptive_resortable_list).\n\n- **`BUFFER`**<br/>\n  A flexible text buffer management system that allows Netdata to automatically handle dynamically sized text buffer allocations. The same mechanism is used for generating consistent JSON output by the Netdata APIs. For more, see [here](https://github.com/netdata/netdata/tree/master/src/libnetdata/buffer).\n\n- **`SPINLOCK`**<br/>\n  Like POSIX `MUTEX` and `RWLOCK` but a lot faster, based on atomic operations, with significantly smaller memory impact, while being portable.\n\n- **`PGC`**<br/>\n  A caching layer that can be used to cache any kind of time-related data, with automatic indexing (based on a tree of JudyL arrays), memory management, evictions, flushing, pressure management. This is extensively used in `dbengine`. For more, see [here](/src/database/engine/README.md).\n\nThe above, and many more, allow Netdata developers to work on the application fast and with confidence. Most of the business logic in Netdata is a work of mixing the above.\n\nNetdata data collection plugins can be developed in any language. Most of our application collectors though are developed in [Go](https://github.com/netdata/go.d.plugin).\n\n</details>\n\n## FAQ\n\n### :shield: Is Netdata secure?\n\nOf course, it is! We do our best to ensure it is!\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nWe understand that Netdata is a software piece installed on millions of production systems across the world. So, it is important for us, Netdata to be as secure as possible:\n\n- We follow the [Open Source Security Foundation](https://bestpractices.coreinfrastructure.org/en/projects/2231) best practices.\n- We have given great attention to detail when it comes to security design. Check out our [security design](/docs/security-and-privacy-design/README.md).\n- Netdata is a popular open-source project and is frequently tested by many security analysts.\n- Check also our [security policies and advisories published so far](https://github.com/netdata/netdata/security).\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :cyclone: Will Netdata consume significant resources on my servers?\n\nNo, it will not! We promise this will be fast!\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nAlthough each Netdata Agent is a complete monitoring solution packed into a single application, and despite the fact that Netdata collects **every metric every single second** and trains **multiple ML models** per metric, you will find that Netdata has amazing performance! In many cases, it outperforms other monitoring solutions that have significantly fewer features or far smaller data collection rates.\n\nThis is what you should expect:\n\n- For production systems, each Netdata Agent with default settings (everything enabled, ML, Health, DB) should consume about 5% CPU utilization of one core and about 150 MiB or RAM.\n\n  By using a Netdata parent and streaming all metrics to that parent, you can disable ML & health and use an ephemeral DB (like `alloc`) on the children, leading to utilization of about 1% CPU of a single core and 100 MiB of RAM. Of course, these depend on how many metrics are collected.\n\n- For Netdata Parents, for about 1 to 2 million metrics, all collected every second, we suggest a server with 16 cores and 32GB RAM. Less than half of it will be used for data collection and ML. The rest will be available for queries.\n\nNetdata has extensive internal instrumentation to help us reveal how the resources consumed are used. All these are available in the \"Netdata Monitoring\" section of the dashboard. Depending on your use case, there are many options to optimize resource consumption.\n\nEven if you need to run Netdata on extremely weak embedded or IoT systems, you will find that Netdata can be tuned to be very performant.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :scroll: How much retention can I have?\n\nAs much as you need!\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nNetdata supports **tiering**, to downsample past data and save disk space. With default settings, it has three tiers:\n\n1. `tier 0`, with high resolution, per-second, data.\n2. `tier 1`, mid-resolution, per minute, data.\n3. `tier 2`, low-resolution, per hour, data.\n\nAll tiers are updated in parallel during data collection. Increase the disk space you give to Netdata to get a longer history for your metrics. Tiers are automatically chosen at query time depending on the time frame and the resolution requested.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :rocket: Does it scale? I really have a lot of servers!\n\nNetdata is designed to scale and can handle large volumes of data.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\nNetdata is a distributed monitoring solution. You can scale it to infinity by spreading Netdata Agents across your infrastructure.\n\nWith the streaming feature of the Agent, we can support monitoring ephemeral servers but also allow the creation of \"monitoring islands\" where metrics are aggregated to a few servers (Netdata Parents) for increased retention, or for offloading production systems.\n\n- :airplane: Netdata Parents provide great vertical scalability, so you can have as big parents as the CPU, RAM and Disk resources you can dedicate to them. In our lab, we constantly stress test Netdata Parents with several million metrics collected per second, to ensure it is reliable, stable, and robust at scale.\n\n- :rocket: In addition, Netdata Cloud provides virtually unlimited horizontal scalability. It \"merges\" all the Netdata parents you have into one unified infrastructure at query time. Netdata Cloud itself is probably the biggest single installation monitoring platform ever created, currently monitoring about 100k online servers with about 10k servers changing state (added/removed) per day!\n\nExample: the following chart comes from a single Netdata Parent. As you can see on it, 244 nodes stream to it metrics of about 20k running containers. On this specific chart, there are three dimensions per container, so a total of about 60k time-series queries are executed to present it.\n\n![image](https://github.com/netdata/netdata/assets/2662304/33db4aed-86af-4018-a547-e70643308f25)\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :floppy_disk: My production servers are very sensitive in disk I/O. Can I use Netdata?\n\nYes, you can!\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nThe Netdata Agent has been designed to spread disk writes across time. Each metric is flushed to disk every 17 minutes (1000 seconds), but metrics are flushed evenly across time, at an almost constant rate. Also, metrics are packed into bigger blocks we call `extents` and are compressed with ZSTD before saving them, to minimize the number of I/O operations made.\n\nThe Netdata Agent also employs direct I/O for all its database operations. By managing its own caches, Netdata avoids overburdening system caches, facilitating a harmonious coexistence with other applications.\n\nSingle node Agents (not Parents), should have a constant write rate of about 50 KiB/s or less, with some spikes above that every minute (flushing of tier 1) and higher spikes every hour (flushing of tier 2).\n\nHealth Alerts and Machine-Learning run queries to evaluate their expressions and learn from the metrics' patterns. These are also spread over time, so there should be an almost constant read rate too.\n\nTo make Netdata not use the disks at all, we suggest the following:\n\n1. Use database mode `alloc` or `ram` to disable writing metric data to disk.\n2. Configure streaming to push in real-time all metrics to a Netdata Parent. The Netdata Parent will maintain metrics on disk for this node.\n3. Disable ML and health on this node. The Netdata Parent will do them for this node.\n4. Use the Netdata Parent to access the dashboard.\n\nUsing the above, the Netdata Agent on your production system will not use a disk.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :raised_eyebrow: How is Netdata different from a Prometheus and Grafana setup?\n\nNetdata is a \"ready to use\" monitoring solution. Prometheus and Grafana are tools to build your own monitoring solution.\n\nNetdata is also a lot faster, requires significantly fewer resources and puts almost no stress on the server it runs. For a performance comparison check [this blog](https://blog.netdata.cloud/netdata-vs-prometheus-performance-analysis/).\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nFirst, we have to say that Prometheus as a time-series database and Grafana as a visualizer are excellent tools for what they do.\n\nHowever, we believe that such a setup is missing a key element: A Prometheus and Grafana setup assumes that you know everything about the metrics you collect, and you understand deeply how they’re structured, they should be queried and visualized.\n\nIn reality, this setup has a lot of problems. The vast number of technologies, operating systems, and applications we use in our modern stacks makes it impossible for any single person to know and understand everything about anything. We get testimonials regularly from Netdata users across the biggest enterprises, that Netdata manages to reveal issues, anomalies and problems they weren’t aware of, and they didn't even have the means to find or troubleshoot.\n\nSo, the biggest difference of Netdata to Prometheus, and Grafana, is that we decided that the tool needs to have a much better understanding of the components, the applications, and the metrics it monitors.\n\n- When compared to Prometheus, Netdata needs for each metric much more than just a name, some labels, and a value over time. A metric in Netdata is a structured entity that correlates with other metrics in a certain way and has specific attributes that depict how it should be organized, treated, queried, and visualized. We call this the NIDL (Nodes, Instances, Dimensions, Labels) framework.\n\n  Maintaining such an index is a challenge: first, because the raw metrics collected do not provide this information, so we have to add it, and second because we need to maintain this index for the lifetime of each metric, which with our current database retention, it is usually more than a year.\n\n  At the same time, Netdata provides better retention than Prometheus due to database tiering, scales easier than Prometheus due to streaming, supports anomaly detection, and it has a metrics scoring engine to find the needle in the haystack when needed.\n\n- When compared to Grafana, Netdata is fully automated. Grafana has more customization capabilities than Netdata, but Netdata presents fully functional dashboards by itself, and most importantly, it gives you the means to understand, analyze, filter, slice and dice the data without the need for you to edit queries or be aware of any peculiarities the underlying metrics may have.\n\n  Furthermore, to help you when you need to find the needle in the haystack, Netdata has advanced troubleshooting tools provided by the Netdata metrics scoring engine, that allows it to score metrics based on their anomaly rate, their differences or similarities for any given time frame.\n\nStill, if you’re already familiar with Prometheus and Grafana, Netdata integrates nicely with them, and we have reports from users who use Netdata with Prometheus and Grafana in production.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :raised_eyebrow: How is Netdata different from DataDog, New Relic, Dynatrace, X SaaS Provider?\n\nWith Netdata your data are always on-prem and your metrics are always high-resolution.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nMost commercial monitoring providers face a significant challenge: they centralize all metrics to their infrastructure, and this is, inevitably, expensive. It leads them to one or more of the following:\n\n1. be unrealistically expensive\n2. limit the number of metrics they collect\n3. limit the resolution of the metrics they collect\n\nAs a result, they try to find a balance: collect the least possible data, but collect enough to have something useful out of it.\n\nWe, at Netdata, see monitoring in a completely different way: **monitoring systems should be built bottom-up and be rich in insights**, so we focus on each component individually to collect, store, check and visualize everything related to each of them, and we make sure that all components are monitored. Each metric is important.\n\nThis is why Netdata trains multiple machine-learning models per metric, based exclusively on their own past (no sampling of data, no sharing of trained models) to detect anomalies based on the specific use case and workload each component is used.\n\nThis is also why Netdata alerts are attached to components (instances) and are configured with dynamic thresholds and rolling windows, instead of static values.\n\nThe distributed nature of Netdata helps scale this approach: your data is spread inside your infrastructure, as close to the edge as possible. Netdata is not one data lane. Each Netdata Agent is a data lane, and all of them together build a massive distributed metrics processing pipeline that ensures all your infrastructure components and applications are monitored and operating as they should.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :raised_eyebrow: How is Netdata different from Nagios, Icinga, Zabbix, etc.?\n\nNetdata offers real-time, comprehensive monitoring and the ability to monitor everything without any custom configuration required.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nWhile Nagios, Icinga, Zabbix, and other similar tools are powerful and highly customizable, they can be complex to set up and manage. Their flexibility often comes at the cost of ease-of-use, especially for users who aren’t systems administrators or don’t have extensive experience with these tools. Additionally, these tools generally require you to know what you want to monitor in advance and configure it explicitly.\n\nNetdata, on the other hand, takes a different approach. It provides a \"ready to use\" monitoring solution with a focus on simplicity and comprehensiveness. It automatically detects and starts monitoring many different system metrics and applications out-of-the-box, without any need for custom configuration.\n\nIn comparison to these traditional monitoring tools, Netdata:\n\n- Provides real-time, high-resolution metrics, as opposed to the often minute-level granularity that tools like Nagios, Icinga, and Zabbix provide.\n\n- Automatically generates meaningful, organized, and interactive visualizations of the collected data. Unlike other tools, where you have to manually create and organize graphs and dashboards, Netdata takes care of this for you.\n\n- Applies machine learning to each individual metric to detect anomalies, providing more insightful and relevant alerts than static thresholds.\n\n- Designed to be distributed, so your data is spread inside your infrastructure, as close to the edge as possible. This approach is more scalable and avoids the potential bottleneck of a single centralized server.\n\n- Has a more modern and user-friendly interface, allowing anyone, not just experienced administrators, to easily assess the health and performance of their systems.\n\nEven if you're already using Nagios, Icinga, Zabbix, or similar tools, you can use Netdata alongside them to augment your existing monitoring capabilities with real-time insights and user-friendly dashboards.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :flushed: I feel overwhelmed by the amount of information in Netdata. What should I do?\n\nNetdata is designed to provide comprehensive insights, but we understand that the richness of information might sometimes feel overwhelming. Here are some tips on how to navigate and use Netdata effectively...\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nNetdata is indeed a very comprehensive monitoring tool. It's designed to provide you with as much information as possible about your system and applications, so that you can understand and address any issues that arise. However, we understand that the sheer amount of data can sometimes be overwhelming.\n\nHere are some suggestions on how to manage and navigate this wealth of information:\n\n1. **Start with the Metrics Dashboard**<br/>\n   Netdata's Metrics Dashboard provides a high-level summary of your system's status. We have added summary tiles on almost every section, you reveal the information that is more important. This is a great place to start, as it can help you identify any major issues or trends at a glance.\n\n2. **Use the Search Feature**<br/>\n   If you're looking for specific information, you can use the search feature to find the relevant metrics or charts. This can help you avoid scrolling through all the data.\n\n3. **Customize your Dashboards**<br/>\n   Netdata allows you to create custom dashboards, which can help you focus on the metrics that are most important to you. Sign-in to Netdata and there you can have your custom dashboards. (coming soon to the Agent dashboard too)\n\n4. **Leverage Netdata's Anomaly Detection**<br/>\n   Netdata uses machine learning to detect anomalies in your metrics. This can help you identify potential issues before they become major problems. We have added an `AR` button above the dashboard table of contents to reveal the anomaly rate per section so that you can spot what could need your attention.\n\n5. **Take Advantage of Netdata's Documentation and Blogs**<br/>\n   Netdata has extensive documentation that can help you understand the different metrics and how to interpret them. You can also find tutorials, guides, and best practices there.\n\nRemember, it's not necessary to understand every single metric or chart right away. Netdata is a powerful tool, and it can take some time to fully explore and understand all of its features. Start with the basics and gradually delve into more complex metrics as you become more comfortable with the tool.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :cloud: Do I have to subscribe to Netdata Cloud?\n\nNetdata Cloud delivers the full suite of features and functionality that Netdata offers, including a free community tier.\n\nWhile our default onboarding process encourages users to take advantage of Netdata Cloud, including a complimentary one-month trial of our full business product, it is not mandatory. Users can bypass this process entirely and still use the Netdata Agents along with the Netdata UI, without the need to sign up for Netdata Cloud.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nThe Netdata Agent dashboard and the Netdata Cloud dashboard are the same. Still, Netdata Cloud provides additional features that the Netdata Agent is not capable of. These include:\n\n1. Access your infrastructure from anywhere.\n2. Have SSO to protect sensitive features.\n3. Customizable (custom dashboards and other settings are persisted when you’re signed in to Netdata Cloud)\n4. Configuration of Alerts and Data Collection from the UI\n5. Security (Role-Based Access Control).\n6. Horizontal Scalability (\"blend\" multiple independent parents in one uniform infrastructure)\n7. Central Dispatch of Alert Notifications (even when multiple independent parents are involved)\n8. Mobile App for Alert Notifications\n\nWe encourage you to support Netdata by buying a Netdata Cloud subscription. A successful Netdata is a Netdata that evolves and gets improved to provide simpler, faster and easier monitoring for all of us.\n\nFor organizations that need a fully on-prem solution, we provide Netdata Cloud for on-prem installation. [Contact us for more information](mailto:info@netdata.cloud).\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :mag_right: What does the anonymous telemetry collected by Netdata entail?\n\nYour privacy is our utmost priority. As part of our commitment to improving Netdata, we rely on anonymous telemetry data from our users who choose to leave it enabled. This data greatly informs our decision-making processes and contributes to the future evolution of Netdata.\n\nShould you wish to disable telemetry, instructions for doing so are provided in our installation guides.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nNetdata is in a constant state of growth and evolution. The decisions that guide this development are ideally rooted in data. By analyzing anonymous telemetry data, we can answer questions such as \"What features are being used frequently?\", \"How do we prioritize between potential new features?\" and \"What elements of Netdata are most important to our users?\"\n\nBy leaving anonymous telemetry enabled, users indirectly contribute to shaping Netdata's roadmap, providing invaluable information that helps us prioritize our efforts for the project and the community.\n\nWe are aware that for privacy or regulatory reasons, not all environments can allow telemetry. To cater to this, we’ve simplified the process of disabling telemetry:\n\n- During installation, you can append `--disable-telemetry` to our `kickstart.sh` script, or\n- Create the file `/etc/netdata/.opt-out-from-anonymous-statistics` and then restart Netdata.\n\nThese steps will disable the anonymous telemetry for your Netdata installation.\n\nPlease note, even with telemetry disabled, Netdata still requires a [Netdata Registry](https://learn.netdata.cloud/docs/configuring/securing-netdata-agents/registry) for alert notifications' Call To Action (CTA) functionality. When you click an alert notification, it redirects you to the Netdata Registry, which then directs your web browser to the specific Netdata Agent that issued the alert for further troubleshooting. The Netdata Registry learns the URLs of your Agents when you visit their dashboards.\n\nAny Netdata Agent can act as a Netdata Registry. Designate one Netdata Agent as your Registry, read more [here](https://learn.netdata.cloud/docs/netdata-agent/configuration/registry).\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :smirk: Who uses Netdata?\n\nNetdata is a widely adopted project...\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nBrowse the [Netdata stargazers on GitHub](https://github.com/netdata/netdata/stargazers) to discover users from renowned companies and enterprises, such as ABN AMRO Bank, AMD, Amazon, Baidu, Booking.com, Cisco, Delta, Facebook, Google, IBM, Intel, Logitech, Netflix, Nokia, Qualcomm, Realtek Semiconductor Corp, Redhat, Riot Games, SAP, Samsung, Unity, Valve, and many others.\n\nNetdata also enjoys significant usage in academia, with notable institutions including New York University, Columbia University, New Jersey University, Seoul National University, University College London, among several others.\n\nAnd, Netdata is also used by many governmental organizations worldwide.\n\nIn a nutshell, Netdata proves invaluable for:\n\n- **Infrastructure intensive organizations**<br/>\n  Such as hosting/cloud providers and companies with hundreds or thousands of nodes, who require a high-resolution, real-time monitoring solution for a comprehensive view of all their components and applications.\n\n- **Technology operators**<br/>\n  Those in need of a standardized, comprehensive solution for round-the-clock operations. Netdata not only facilitates operational automation and provides controlled access for their operations engineers, but also enhances skill development over time.\n\n- **Technology startups**<br/>\n  Who seek a feature-rich monitoring solution from the get-go.\n\n- **Freelancers**<br/>\n  Who seek a simple, efficient and straightforward solution without sacrificing performance and outcomes.\n\n- **Professional SysAdmins and DevOps**<br/>\n  Who appreciate the fine details and understand the value of holistic monitoring from the ground up.\n\n- **Everyone else**<br/>\n  All of us, who are tired of the inefficiency in the monitoring industry and would love a refreshing change and a breath of fresh air. :slightly_smiling_face:\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :globe_with_meridians: Is Netdata open-source?\n\nThe **Netdata Agent** is open-source, but the **overall Netdata ecosystem** is a hybrid solution, combining open-source and closed-source components.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nOpen-source is about sharing intellectual property with the world, and at Netdata, we embrace this philosophy wholeheartedly.\n\nThe **Netdata Agent**, the core of our ecosystem and the engine behind all our observability features, is fully open-source. Licensed under GPLv3+, the Netdata Agent represents our commitment to open-sourcing innovation in a wide array of observability technologies, including data collection, database design, query engines, observability data modeling, machine learning and unsupervised anomaly detection, high-performance edge computing, real-time monitoring, and more.\n\n**The Netdata Agent is our gift to the world**, ensuring that the cutting-edge advancements we've developed are freely accessible to everyone.\n\nHowever, as a privately funded company, we also need to monetize our open-source software to demonstrate product-market fit and sustain our growth.\n\nTraditionally, open-source projects have often used the open-core model, where a basic version of the software is open-source, and additional features are reserved for a commercial, closed-source version. This approach can limit access to advanced innovations, as most of these remain closed-source.\n\nAt Netdata, we take a slightly different path. We don't create a separate enterprise version of our product. Instead, all users - both commercial and non-commercial - use the same Netdata Agent, ensuring that all of our observability innovations are always open source.\n\nTo experience the full capabilities of the Netdata ecosystem, users need to combine the open-source components with our closed-source offerings. The complete product still remains free to use.\n\nThe closed-source components include:\n\n- **Netdata UI**: This is closed-source but free to use with the Netdata Agents and Netdata Cloud. It’s also publicly available via a CDN.\n- **Netdata Cloud**: A commercial product available both as an on-premises installation and as a SaaS solution, with a free community tier.\n\nBy balancing open-source and closed-source components, we ensure that all users have access to our innovations while sustaining our ability to grow and innovate as a company.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n### :moneybag: What is your monetization strategy?\n\nNetdata generates revenue through subscriptions to advanced features of Netdata Cloud and sales of on-premise and private versions of Netdata Cloud.\n\n<details><summary>Click to see detailed answer ...</summary>\n&nbsp;<br/>&nbsp;<br/>\n\nNetdata generates revenue from these activities:\n\n1. **Netdata Cloud Subscriptions**<br/>\n   Direct funding for our project's vision comes from users subscribing to Netdata Cloud's advanced features.\n\n2. **Netdata Cloud On-Prem or Private**<br/>\n   Purchasing the on-premises or private versions of Netdata Cloud supports our financial growth.\n\nOur Open-Source Community and the free access to Netdata Cloud, contribute to Netdata in the following ways:\n\n- **Netdata Cloud Community Use**<br/>\n  The free usage of Netdata Cloud demonstrates its market relevance. While this doesn't generate revenue, it reinforces trust among new users and aids in securing appropriate project funding.\n\n- **User Feedback**<br/>\n  Feedback, especially issues and bug reports, is invaluable. It steers us towards a more resilient and efficient product. This, too, isn't a revenue source but is pivotal for our project's evolution.\n\n- **Anonymous Telemetry Insights**<br/>\n  Users who keep anonymous telemetry enabled, help us make data informed decisions on refining and enhancing Netdata. This isn't a revenue stream, but knowing which features are used and how, contributes in building a better product for everyone.\n\nWe don't monetize, directly or indirectly, users' or \"device heuristics\" data. Any data collected from community members is exclusively used for the purposes stated above.\n\nNetdata grows financially when technology intensive organizations and operators need - due to regulatory or business requirements - the entire Netdata suite on-prem or private, bundled with top-tier support. It is a win-win case for all parties involved: these companies get a battle tested, robust and reliable solution, while the broader community that helps us build this product enjoys it at no cost.\n\n&nbsp;<br/>&nbsp;<br/>\n</details>\n\n## :book: Documentation\n\nNetdata's documentation is available at [**Netdata Learn**](https://learn.netdata.cloud).\n\nThis site also hosts a number of [guides](https://learn.netdata.cloud/guides) to help newer users better understand how\nto collect metrics, troubleshoot via charts, export to external databases, and more.\n\n## :tada: Community\n\n<p align=\"center\">\n  <a href=\"https://discord.com/invite/2mEmfW735j\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/847502280503590932?logo=discord&logoColor=white&label=chat%20on%20discord\"></a>\n  <a href=\"https://community.netdata.cloud\"><img alt=\"Discourse topics\" src=\"https://img.shields.io/discourse/topics?server=https%3A%2F%2Fcommunity.netdata.cloud%2F&logo=discourse&label=discourse%20forum\"></a>\n  <a href=\"https://github.com/netdata/netdata/discussions\"><img alt=\"GitHub Discussions\" src=\"https://img.shields.io/github/discussions/netdata/netdata?logo=github&label=github%20discussions\"></a>\n</p>\n\nNetdata is an inclusive open-source project and community. Please read our [Code of Conduct](https://github.com/netdata/.github/blob/main/CODE_OF_CONDUCT.md).\n\nJoin the Netdata community:\n\n- Chat with us and other community members on [Discord](https://discord.com/invite/2mEmfW735j).\n- Start a discussion on [GitHub discussions](https://github.com/netdata/netdata/discussions).\n- Open a topic to our [community forums](https://community.netdata.cloud).\n\n> **Meet Up** :people_holding_hands::people_holding_hands::people_holding_hands:<br/>\n> The Netdata team and community members have regular online meetups.<br/>\n> **You are welcome to join us!**\n> [Click here for the schedule](https://www.meetup.com/netdata/events/).\n\nYou can also find Netdata on:<br/>\n[Twitter](https://twitter.com/netdatahq) | [YouTube](https://www.youtube.com/c/Netdata) | [Reddit](https://www.reddit.com/r/netdata/) | [LinkedIn](https://www.linkedin.com/company/netdata-cloud/) | [StackShare](https://stackshare.io/netdata) | [Product Hunt](https://www.producthunt.com/posts/netdata-monitoring-agent/) | [Repology](https://repology.org/metapackage/netdata/versions) | [Facebook](https://www.facebook.com/linuxnetdata/)\n\n## :pray: Contribute\n\n<p align=\"center\">\n  <a href=\"https://github.com/netdata/netdata/graphs/contributors\"><img alt=\"Open Source Contributors\" src=\"https://img.shields.io/github/contributors/netdata/netdata?label=open-source%20contributors\"></a>\n</p>\n\nContributions are essential to the success of open-source projects. In other words, we need your help to keep Netdata great!\n\nWhat is a contribution? All the following are highly valuable to Netdata:\n\n1. **Let us know of the best practices you believe should be standardized**<br/>\n   Netdata should out-of-the-box detect as many infrastructure issues as possible. By sharing your knowledge and experiences, you help us build a monitoring solution that has baked into it all the best-practices about infrastructure monitoring.\n\n2. **Let us know if Netdata is not perfect for your use case**<br/>\n   We aim to support as many use cases as possible and your feedback can be invaluable. Open a GitHub issue, or start a GitHub discussion about it, to discuss how you want to use Netdata and what you need.\n\n   Although we can't implement everything imaginable, we try to prioritize development on use-cases that are common to our community, are in the same direction we want Netdata to evolve and are aligned with our roadmap.\n\n3. **Support other community members**<br/>\n   Join our community on GitHub, Discord, and Reddit. Generally, Netdata is relatively easy to set up and configure, but still people may need a little push in the right direction to use it effectively. Supporting other members is a great contribution by itself!\n\n4. **Add or improve integrations you need**<br/>\n   Integrations tend to be easier and simpler to develop. If you would like to contribute your code to Netdata, we suggest that you start with the integrations you need, which Netdata doesn’t currently support.\n\nGeneral information about contributions:\n\n- Check our [Security Policy](https://github.com/netdata/netdata/security/policy).\n- Found a bug? Open a [GitHub issue](https://github.com/netdata/netdata/issues/new?assignees=&labels=bug%2Cneeds+triage&template=BUG_REPORT.yml&title=%5BBug%5D%3A+).\n- Read our [Contributing Guide](https://github.com/netdata/.github/blob/main/CONTRIBUTING.md), which contains all the information you need to contribute to Netdata, such as improving our documentation, engaging in the community, and developing new features. We've made it as frictionless as possible, but if you need help, just ping us on our community forums!\n\nPackage maintainers should read the guide on [building Netdata from source](/packaging/installer/methods/source.md) for\ninstructions on building each Netdata component from the source and preparing a package.\n\n## License\n\nThe Netdata ecosystem consists of three key parts:\n\n- **Netdata Agent**: The heart of the Netdata ecosystem, the Netdata Agent is an open-source tool that must be installed on all systems monitored by Netdata. It offers a wide range of essential features, including data collection via various plugins, an embedded high-performance time-series database (dbengine), unsupervised anomaly detection powered by edge-trained machine learning, alerting and notifications, as well as query and scoring engines with associated APIs. Additionally, it supports exporting data to third-party monitoring systems, among other capabilities.\n\n  The Netdata Agent is released under the [GPLv3+ license](https://github.com/netdata/netdata/blob/master/LICENSE) and redistributes several other open-source tools and libraries, which are listed in the [Netdata Agent third-party licenses](https://github.com/netdata/netdata/blob/master/REDISTRIBUTED.md).\n\n- **Netdata Cloud**: A commercial, closed-source component, Netdata Cloud enhances the capabilities of the open-source Netdata Agent by providing horizontal scalability, centralized alert notification dispatch (including a mobile app), user management, role-based access control, and other enterprise-grade features. It is available both as a SaaS solution and for on-premises deployment, with a free-to-use community tier also offered.\n\n- **Netdata UI**: The Netdata UI is closed-source, and handles all visualization and dashboard functionalities related to metrics, logs and other collected data, as well as the central configuration and management of the Netdata ecosystem. It serves both the Netdata Agent and Netdata Cloud. The Netdata UI is distributed in binary form with the Netdata Agent and is publicly accessible via a CDN, licensed under the [Netdata Cloud UI License 1 (NCUL1)](https://app.netdata.cloud/LICENSE.txt). It integrates third-party open-source components, detailed in the [Netdata UI third-party licenses](https://github.com/netdata/netdata/blob/master/src/web/gui/v2/3D_PARTY_LICENSES.txt).\n\nThe binary installation packages provided by Netdata include the Netdata Agent and the Netdata UI. Since the Netdata Agent is open-source, it is frequently packaged by third parties (e.g., Linux Distributions) excluding the closed-source components (Netdata UI is not included). While their packages can still be useful in providing the necessary back-ends and the APIs of a fully functional monitoring solution, we recommend using the installation packages we provide to experience the full feature set of Netdata.\n"
        },
        {
          "name": "REDISTRIBUTED.md",
          "type": "blob",
          "size": 13.7490234375,
          "content": "# Redistributed software\n\nNetdata copyright info:<br/>\nCopyright 2018-2025 Netdata Inc.<br/>\nReleased under [GPL v3 or later](https://raw.githubusercontent.com/netdata/netdata/master/LICENSE).\n\nNetdata uses SPDX license tags to identify the license for its files.\nIndividual licenses referenced in the tags are available on the [SPDX project site](http://spdx.org/licenses/).\n\nNetdata redistributes the Netdata Cloud UI, licensed under [Netdata Cloud UI License v1.0 (NCUL1)](https://app.netdata.cloud/LICENSE.txt). Netdata Cloud UI includes [third party open-source software](https://app.netdata.cloud/3D_PARTY_LICENSES.txt).\n\nNetdata redistributes the following third-party software.\nWe have decided to redistribute all these, instead of using them through a CDN, to allow Netdata to work in cases where Internet connectivity is not available.\n\n**Netdata Agent**:\n\n| Name                                                                    | Copyright                                                                          | License                                                                                  |\n|-------------------------------------------------------------------------|------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------|\n| [Kolmogorov-Smirnov distribution](http://simul.iro.umontreal.ca/ksdir/) | Copyright March 2010 by Université de Montréal, Richard Simard and Pierre L'Ecuyer | [GPL 3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)                                  |\n| [xxHash](https://github.com/Cyan4973/xxHash)                            | Copyright (c) 2012-2021 Yann Collet                                                | [BSD](https://github.com/Cyan4973/xxHash/blob/dev/LICENSE)                               |\n| [Judy Arrays](https://sourceforge.net/projects/judy/)                   | Copyright (C) 2000 - 2002 Hewlett-Packard Company                                  | [LGPLv2](https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html)                     |\n| [dlib](https://github.com/davisking/dlib/)                              | Copyright (C) 2019  Davis E. King (davis@dlib.net), Nils Labugt                    | [Boost Software License](https://github.com/davisking/dlib/blob/master/dlib/LICENSE.txt) |\n\n---\n\n**python.d.plugin**:\n\n| Name                                                                                                                                                                                     | Copyright                                             | License                                                          |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------|------------------------------------------------------------------|\n| [PyYAML](https://pypi.org/project/PyYAML/)                                                                                                                                               | Copyright 2006, Kirill Simonov                        | [MIT](https://github.com/yaml/pyyaml/blob/master/LICENSE)        |\n| [urllib3](https://github.com/shazow/urllib3)                                                                                                                                             | Copyright 2008-2016 Andrey Petrov and contributors    | [MIT](https://github.com/shazow/urllib3/blob/master/LICENSE.txt) |\n| [Utilities for writing code that runs on Python 2 and 3](https://raw.githubusercontent.com/netdata/netdata/master/src/collectors/python.d.plugin/python_modules/urllib3/packages/six.py) | Copyright (c) 2010-2015 Benjamin Peterson             | [MIT](https://github.com/benjaminp/six/blob/master/LICENSE)      |\n| [monotonic](https://github.com/atdt/monotonic)                                                                                                                                           | Copyright 2014, 2015, 2016 Ori Livneh                 | [Apache-2.0](http://www.apache.org/licenses/LICENSE-2.0)         |\n| [filelock](https://github.com/benediktschmitt/py-filelock)                                                                                                                               | Copyright 2015, Benedikt Schmitt                      | [Unlicense](https://unlicense.org/)                              |\n\n---\n\n**go.d.plugin**:\n\n| Name                                               | Copyright                   | License                                                             |\n|----------------------------------------------------|-----------------------------|---------------------------------------------------------------------|\n| [lmsensors](https://github.com/mdlayher/lmsensors) | Copyright 2016, Matt Layher | [MIT](https://github.com/mdlayher/lmsensors/blob/master/LICENSE.md) |\n\n---\n\n**Old User Interface (Dashboard v1)**:\n\n| Name                                                                            | Copyright                                                   | License                                                                                                                                                                                                           |\n|---------------------------------------------------------------------------------|-------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Dygraphs](http://dygraphs.com/)                                                | Copyright 2009, Dan Vanderkam                               | [MIT](http://dygraphs.com/legal.html)                                                                                                                                                                             |\n| [Easy Pie Chart](https://rendro.github.io/easy-pie-chart/)                      | Copyright 2013, Robert Fleischmann                          | [MIT](https://github.com/rendro/easy-pie-chart/blob/master/LICENSE)                                                                                                                                               |\n| [Gauge.js](http://bernii.github.io/gauge.js/)                                   | Copyright, Bernard Kobos                                    | [MIT](https://github.com/getgauge/gauge-js/blob/master/LICENSE)                                                                                                                                                   |\n| [d3pie](https://github.com/benkeen/d3pie)                                       | Copyright (c) 2014-2015 Benjamin Keen                       | [MIT](https://github.com/benkeen/d3pie/blob/master/LICENSE)                                                                                                                                                       |\n| [jQuery Sparklines](http://omnipotent.net/jquery.sparkline/)                    | Copyright 2009-2012, Splunk Inc.                            | [New BSD](http://opensource.org/licenses/BSD-3-Clause)                                                                                                                                                            |\n| [Peity](http://benpickles.github.io/peity/)                                     | Copyright 2009-2015, Ben Pickles                            | [MIT](https://github.com/benpickles/peity/blob/master/LICENCE)                                                                                                                                                    |\n| [morris.js](http://morrisjs.github.io/morris.js/)                               | Copyright 2013, Olly Smith                                  | [Simplified BSD](http://morrisjs.github.io/morris.js/)                                                                                                                                                            |\n| [Raphaël](http://dmitrybaranovskiy.github.io/raphael/)                          | Copyright 2008, Dmitry Baranovskiy                          | [MIT](http://dmitrybaranovskiy.github.io/raphael/license.html)                                                                                                                                                    |\n| [C3](http://c3js.org/)                                                          | Copyright 2013, Masayuki Tanaka                             | [MIT](https://github.com/masayuki0812/c3/blob/master/LICENSE)                                                                                                                                                     |\n| [D3](http://d3js.org/)                                                          | Copyright 2015, Mike Bostock                                | [BSD](http://opensource.org/licenses/BSD-3-Clause)                                                                                                                                                                |\n| [jQuery](https://jquery.org/)                                                   | Copyright 2015, jQuery Foundation                           | [MIT](https://jquery.org/license/)                                                                                                                                                                                |\n| [Bootstrap](http://getbootstrap.com/getting-started/)                           | Copyright 2015, Twitter                                     | [MIT](https://github.com/twbs/bootstrap/blob/v4-dev/LICENSE)                                                                                                                                                      |\n| [Bootstrap Toggle](http://www.bootstraptoggle.com/)                             | Copyright (c) 2011-2014 Min Hur, The New York Times Company | [MIT](https://github.com/minhur/bootstrap-toggle/blob/master/LICENSE)                                                                                                                                             |\n| [Bootstrap-slider](http://seiyria.com/bootstrap-slider/)                        | Copyright 2017 Kyle Kemp, Rohit Kalkur, and contributors    | [MIT](https://github.com/seiyria/bootstrap-slider/blob/master/LICENSE.md)                                                                                                                                         |\n| [bootstrap-table](http://bootstrap-table.wenzhixin.net.cn/)                     | Copyright (c) 2012-2016 Zhixin Wen                          | [MIT](https://github.com/wenzhixin/bootstrap-table/blob/master/LICENSE)                                                                                                                                           |\n| [tableExport.jquery.plugin](https://github.com/hhurz/tableExport.jquery.plugin) | Copyright (c) 2015,2016 hhurz                               | [MIT](https://github.com/hhurz/tableExport.jquery.plugin/blob/master/LICENSE)                                                                                                                                     |\n| [perfect-scrollbar](https://jamesflorentino.github.io/nanoScrollerJS/)          | Copyright 2016, Hyunje Alex Jun and other contributors      | [MIT](https://github.com/noraesae/perfect-scrollbar/blob/master/LICENSE)                                                                                                                                          |\n| [FontAwesome](https://github.com/FortAwesome/Font-Awesome)                      | Created by Dave Gandy                                       | Font: [SIL OFL 1.1](http://scripts.sil.org/OFL), Icon: [Creative Commons Attribution 4.0 (CC-BY 4.0)](https://creativecommons.org/licenses/by/4.0/), Code: [MIT](http://opensource.org/licenses/mit-license.html) |\n| [node-extend](https://github.com/justmoon/node-extend)                          | Copyright 2014, Stefan Thomas                               | [MIT](https://github.com/justmoon/node-extend/blob/master/LICENSE)                                                                                                                                                |\n| [pixl-xml](https://github.com/jhuckaby/pixl-xml)                                | Copyright 2015, Joseph Huckaby                              | [MIT](https://github.com/jhuckaby/pixl-xml#license)                                                                                                                                                               |\n| [pako](http://nodeca.github.io/pako/)                                           | Copyright 2014-2017 Vitaly Puzrin and Andrei Tuputcyn       | [MIT](https://github.com/nodeca/pako/blob/master/LICENSE)                                                                                                                                                         |\n| [lz-string](http://pieroxy.net/blog/pages/lz-string/index.html)                 | Copyright 2013 Pieroxy                                      | [WTFPL](http://pieroxy.net/blog/pages/lz-string/index.html#inline_menu_10)                                                                                                                                        |\n| [clipboard-polyfill](https://github.com/lgarron/clipboard-polyfill)             | Copyright (c) 2014 Lucas Garron                             | [MIT](https://github.com/lgarron/clipboard-polyfill/blob/master/LICENSE.md)                                                                                                                                       |\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "integrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "netdata-installer.sh",
          "type": "blob",
          "size": 43.556640625,
          "content": "#!/bin/sh\n\n# SPDX-License-Identifier: GPL-3.0-or-later\n\n# Next unused error code: I0012\n\nexport PATH=\"${PATH}:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\"\nuniquepath() {\n  path=\"\"\n  tmp=\"$(mktemp)\"\n  (echo  \"${PATH}\" | tr \":\" \"\\n\") > \"$tmp\"\n  while read -r REPLY;\n  do\n    if echo \"${path}\" | grep -v \"(^|:)${REPLY}(:|$)\"; then\n      [ -n \"${path}\" ] && path=\"${path}:\"\n      path=\"${path}${REPLY}\"\n    fi\n  done < \"$tmp\"\nrm \"$tmp\"\n  [ -n \"${path}\" ]\nexport PATH=\"${path%:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin}\"\n} > /dev/null\nuniquepath\n\nPROGRAM=\"$0\"\nNETDATA_SOURCE_DIR=\"$(pwd)\"\nINSTALLER_DIR=\"$(dirname \"${PROGRAM}\")\"\n\nif [ \"${NETDATA_SOURCE_DIR}\" != \"${INSTALLER_DIR}\" ] && [ \"${INSTALLER_DIR}\" != \".\" ]; then\n  echo >&2 \"Warning: you are currently in '${NETDATA_SOURCE_DIR}' but the installer is in '${INSTALLER_DIR}'.\"\nfi\n\n# -----------------------------------------------------------------------------\n# reload the user profile\n\n# shellcheck source=/dev/null\n[ -f /etc/profile ] && . /etc/profile\n\n# make sure /etc/profile does not change our current directory\ncd \"${NETDATA_SOURCE_DIR}\" || exit 1\n\n# -----------------------------------------------------------------------------\n# load the required functions\n\nif [ -f \"${INSTALLER_DIR}/packaging/installer/functions.sh\" ]; then\n  # shellcheck source=packaging/installer/functions.sh\n  . \"${INSTALLER_DIR}/packaging/installer/functions.sh\" || exit 1\nelse\n  # shellcheck source=packaging/installer/functions.sh\n  . \"${NETDATA_SOURCE_DIR}/packaging/installer/functions.sh\" || exit 1\nfi\n\n# Used to enable saved warnings support in functions.sh\n# shellcheck disable=SC2034\nNETDATA_SAVE_WARNINGS=1\n\n# -----------------------------------------------------------------------------\n# figure out an appropriate temporary directory\n_cannot_use_tmpdir() {\n  testfile=\"$(TMPDIR=\"${1}\" mktemp -q -t netdata-test.XXXXXXXXXX)\"\n  ret=0\n\n  if [ -z \"${testfile}\" ]; then\n    return \"${ret}\"\n  fi\n\n  if printf '#!/bin/sh\\necho SUCCESS\\n' > \"${testfile}\"; then\n    if chmod +x \"${testfile}\"; then\n      if [ \"$(\"${testfile}\")\" = \"SUCCESS\" ]; then\n        ret=1\n      fi\n    fi\n  fi\n\n  rm -f \"${testfile}\"\n  return \"${ret}\"\n}\n\nif [ -z \"${TMPDIR}\" ] || _cannot_use_tmpdir \"${TMPDIR}\"; then\n  if _cannot_use_tmpdir /tmp; then\n    if _cannot_use_tmpdir \"${PWD}\"; then\n      fatal \"Unable to find a usable temporary directory. Please set \\$TMPDIR to a path that is both writable and allows execution of files and try again.\" I0000\n    else\n      TMPDIR=\"${PWD}\"\n    fi\n  else\n    TMPDIR=\"/tmp\"\n  fi\nfi\n\n# -----------------------------------------------------------------------------\n# set up handling for deferred error messages\n#\n# This leverages the saved warnings functionality shared with some functions from functions.sh\n\nprint_deferred_errors() {\n  if [ -n \"${SAVED_WARNINGS}\" ]; then\n    printf >&2 \"\\n\"\n    printf >&2 \"%b\\n\" \"The following warnings and non-fatal errors were encountered during the installation process:\"\n    printf >&2 \"%b\\n\" \"${SAVED_WARNINGS}\"\n    printf >&2 \"\\n\"\n  fi\n}\n\n# make sure we save all commands we run\n# Variable is used by code in the packaging/installer/functions.sh\n# shellcheck disable=SC2034\nrun_logfile=\"netdata-installer.log\"\n\n\n# -----------------------------------------------------------------------------\n# fix PKG_CHECK_MODULES error\n\nif [ -d /usr/share/aclocal ]; then\n  ACLOCAL_PATH=${ACLOCAL_PATH-/usr/share/aclocal}\n  export ACLOCAL_PATH\nfi\n\nexport LC_ALL=C\numask 002\n\n# Be nice on production environments\nrenice 19 $$ > /dev/null 2> /dev/null\n\n# you can set CFLAGS before running installer\n# shellcheck disable=SC2269\nLDFLAGS=\"${LDFLAGS}\"\nCFLAGS=\"${CFLAGS-\"-O2 -pipe\"}\"\n[ \"z${CFLAGS}\" = \"z-O3\" ] && CFLAGS=\"-O2\"\n# shellcheck disable=SC2269\nACLK=\"${ACLK}\"\n\n# keep a log of this command\n{\n  printf \"\\n# \"\n  date\n  printf 'CFLAGS=\"%s\" ' \"${CFLAGS}\"\n  printf 'LDFLAGS=\"%s\" ' \"${LDFLAGS}\"\n  printf \"%s\" \"${PROGRAM}\" \"${@}\"\n  printf \"\\n\"\n} >> netdata-installer.log\n\nREINSTALL_OPTIONS=\"$(\n  printf \"%s\" \"${*}\"\n  printf \"\\n\"\n)\"\n# remove options that shown not be inherited by netdata-updater.sh\nREINSTALL_OPTIONS=\"$(echo \"${REINSTALL_OPTIONS}\" | sed 's/--dont-wait//g' | sed 's/--dont-start-it//g')\"\n\nbanner_nonroot_install() {\n  cat << NONROOTNOPREFIX\n\n  ${TPUT_RED}${TPUT_BOLD}Sorry! This will fail!${TPUT_RESET}\n\n  You are attempting to install netdata as a non-root user, but you plan\n  to install it in system paths.\n\n  Please set an installation prefix, like this:\n\n      $PROGRAM ${@} --install-prefix /tmp\n\n  or, run the installer as root:\n\n      sudo $PROGRAM ${@}\n\n  We suggest to install it as root, or certain data collectors will\n  not be able to work. Netdata drops root privileges when running.\n  So, if you plan to keep it, install it as root to get the full\n  functionality.\n\nNONROOTNOPREFIX\n}\n\nbanner_root_notify() {\n  cat << NONROOT\n\n  ${TPUT_RED}${TPUT_BOLD}IMPORTANT${TPUT_RESET}:\n  You are about to install netdata as a non-root user.\n  Netdata will work, but a few data collection modules that\n  require root access will fail.\n\n  If you are installing netdata permanently on your system, run\n  the installer like this:\n\n     ${TPUT_YELLOW}${TPUT_BOLD}sudo $PROGRAM ${@}${TPUT_RESET}\n\nNONROOT\n}\n\nusage() {\n  netdata_banner\n  progress \"installer command line options\"\n  cat << HEREDOC\nUSAGE: ${PROGRAM} [options]\n       where options include:\n\n  --install-prefix <path>    Install netdata in <path>. Ex. --install-prefix /opt will put netdata in /opt/netdata.\n  --dont-start-it            Do not (re)start netdata after installation.\n  --dont-wait                Run installation in non-interactive mode.\n  --stable-channel           Use packages from GitHub release pages instead of nightly updates.\n                             This results in less frequent updates.\n  --nightly-channel          Use most recent nightly updates instead of GitHub releases.\n                             This results in more frequent updates.\n  --disable-ebpf             Disable eBPF Kernel plugin. Default: enabled.\n  --force-legacy-cxx         Force usage of an older C++ standard to allow building on older systems. This will usually be autodetected.\n  --enable-plugin-freeipmi   Enable the FreeIPMI plugin. Default: enable it when libipmimonitoring is available.\n  --disable-plugin-freeipmi  Explicitly disable the FreeIPMI plugin.\n  --disable-dbengine         Explicitly disable DB engine support.\n  --enable-plugin-go         Enable the Go plugin. Default: Enabled when possible.\n  --disable-plugin-go        Disable the Go plugin.\n  --disable-go               Disable all Go components.\n  --enable-plugin-nfacct     Enable nfacct plugin. Default: enable it when libmnl and libnetfilter_acct are available.\n  --disable-plugin-nfacct    Explicitly disable the nfacct plugin.\n  --enable-plugin-xenstat    Enable the xenstat plugin. Default: enable it when libxenstat and libyajl are available.\n  --disable-plugin-xenstat   Explicitly disable the xenstat plugin.\n  --enable-plugin-systemd-journal Enable the systemd journal plugin. Default: enable it when libsystemd is available.\n  --disable-plugin-systemd-journal Explicitly disable the systemd journal plugin.\n  --enable-exporting-kinesis Enable AWS Kinesis exporting connector. Default: enable it when libaws_cpp_sdk_kinesis\n                             and its dependencies are available.\n  --disable-exporting-kinesis Explicitly disable AWS Kinesis exporting connector.\n  --enable-exporting-prometheus-remote-write Enable Prometheus remote write exporting connector. Default: enable it\n                             when libprotobuf and libsnappy are available.\n  --disable-exporting-prometheus-remote-write Explicitly disable Prometheus remote write exporting connector.\n  --enable-exporting-mongodb Enable MongoDB exporting connector. Default: enable it when libmongoc is available.\n  --disable-exporting-mongodb Explicitly disable MongoDB exporting connector.\n  --enable-exporting-pubsub  Enable Google Cloud PubSub exporting connector. Default: enable it when\n                             libgoogle_cloud_cpp_pubsub_protos and its dependencies are available.\n  --disable-exporting-pubsub Explicitly disable Google Cloud PubSub exporting connector.\n  --enable-lto               Enable link-time optimization. Default: disabled.\n  --disable-lto              Explicitly disable link-time optimization.\n  --enable-ml                Enable anomaly detection with machine learning. Default: autodetect.\n  --disable-ml               Explicitly disable anomaly detection with machine learning.\n  --disable-x86-sse          Disable SSE instructions & optimizations. Default: enabled.\n  --use-system-protobuf      Use a system copy of libprotobuf instead of bundled copy. Default: bundled.\n  --zlib-is-really-here\n  --libs-are-really-here     If you see errors about missing zlib or libuuid but you know it is available, you might\n                             have a broken pkg-config. Use this option to proceed without checking pkg-config.\n  --disable-telemetry        Opt-out from our anonymous telemetry program. (DISABLE_TELEMETRY=1)\n  --skip-available-ram-check Skip checking the amount of RAM the system has and pretend it has enough to build safely.\n  --dev                      Do not remove the build directory - speeds up rebuilds\nHEREDOC\n}\n\nif [ \"$(uname -s)\" = \"Linux\" ]; then\n  case \"$(uname -m)\" in\n    x86_64|i?86) ENABLE_EBPF=1 ;;\n  esac\nfi\n\nDONOTSTART=0\nDONOTWAIT=0\nNETDATA_PREFIX=\nLIBS_ARE_HERE=0\nNETDATA_ENABLE_ML=\"\"\nENABLE_DBENGINE=1\nENABLE_GO=1\nENABLE_PYTHON=1\nENABLE_CHARTS=1\nFORCE_LEGACY_CXX=0\nNETDATA_CMAKE_OPTIONS=\"${NETDATA_CMAKE_OPTIONS-}\"\nREMOVE_BUILD=1\n\nRELEASE_CHANNEL=\"nightly\" # valid values are 'nightly' and 'stable'\nIS_NETDATA_STATIC_BINARY=\"${IS_NETDATA_STATIC_BINARY:-\"no\"}\"\nwhile [ -n \"${1}\" ]; do\n  case \"${1}\" in\n    \"--zlib-is-really-here\") LIBS_ARE_HERE=1 ;;\n    \"--libs-are-really-here\") LIBS_ARE_HERE=1 ;;\n    \"--use-system-protobuf\") USE_SYSTEM_PROTOBUF=1 ;;\n    \"--dont-scrub-cflags-even-though-it-may-break-things\") DONT_SCRUB_CFLAGS_EVEN_THOUGH_IT_MAY_BREAK_THINGS=1 ;;\n    \"--dont-start-it\") DONOTSTART=1 ;;\n    \"--dont-wait\") DONOTWAIT=1 ;;\n    \"--auto-update\" | \"-u\") ;;\n    \"--auto-update-type\") ;;\n    \"--stable-channel\") RELEASE_CHANNEL=\"stable\" ;;\n    \"--nightly-channel\") RELEASE_CHANNEL=\"nightly\" ;;\n    \"--force-legacy-cxx\") FORCE_LEGACY_CXX=1 ;;\n    \"--enable-plugin-freeipmi\") ENABLE_FREEIPMI=1 ;;\n    \"--disable-plugin-freeipmi\") ENABLE_FREEIPMI=0 ;;\n    \"--disable-https\")\n      warning \"HTTPS cannot be disabled.\"\n      ;;\n    \"--disable-dbengine\") ENABLE_DBENGINE=0 ;;\n    \"--enable-plugin-go\") ENABLE_GO=1 ;;\n    \"--disable-plugin-go\") ENABLE_GO=0 ;;\n    \"--disable-go\") ENABLE_GO=0 ;;\n    \"--enable-plugin-python\") ENABLE_PYTHON=1 ;;\n    \"--disable-plugin-python\") ENABLE_PYTHON=0 ;;\n    \"--enable-plugin-charts\") ENABLE_CHARTS=1 ;;\n    \"--disable-plugin-charts\") ENABLE_CHARTS=0 ;;\n    \"--enable-plugin-nfacct\") ENABLE_NFACCT=1 ;;\n    \"--disable-plugin-nfacct\") ENABLE_NFACCT=0 ;;\n    \"--enable-plugin-xenstat\") ENABLE_XENSTAT=1 ;;\n    \"--disable-plugin-xenstat\") ENABLE_XENSTAT=0 ;;\n    \"--enable-plugin-systemd-journal\") ENABLE_SYSTEMD_JOURNAL=1 ;;\n    \"--disable-plugin-systemd-journal\") ENABLE_SYSTEMD_JOURNAL=0 ;;\n    \"--enable-exporting-kinesis\" | \"--enable-backend-kinesis\")\n      # TODO: Needs CMake Support\n      ;;\n    \"--disable-exporting-kinesis\" | \"--disable-backend-kinesis\")\n      # TODO: Needs CMake Support\n      ;;\n    \"--enable-exporting-prometheus-remote-write\" | \"--enable-backend-prometheus-remote-write\") EXPORTER_PROMETHEUS=1 ;;\n    \"--disable-exporting-prometheus-remote-write\" | \"--disable-backend-prometheus-remote-write\") EXPORTER_PROMETHEUS=0 ;;\n    \"--enable-exporting-mongodb\" | \"--enable-backend-mongodb\") EXPORTER_MONGODB=1 ;;\n    \"--disable-exporting-mongodb\" | \"--disable-backend-mongodb\") EXPORTER_MONGODB=0 ;;\n    \"--enable-exporting-pubsub\")\n      # TODO: Needs CMake support\n      ;;\n    \"--disable-exporting-pubsub\")\n      # TODO: Needs CMake support\n      ;;\n    \"--enable-ml\") NETDATA_ENABLE_ML=1 ;;\n    \"--disable-ml\") NETDATA_ENABLE_ML=0 ;;\n    \"--enable-lto\")\n      # TODO: Needs CMake support\n      ;;\n    \"--disable-lto\")\n      # TODO: Needs CMake support\n      ;;\n    \"--disable-x86-sse\")\n      # XXX: No longer supported.\n      ;;\n    \"--disable-telemetry\") NETDATA_DISABLE_TELEMETRY=1 ;;\n    \"--enable-ebpf\") ENABLE_EBPF=1 ;;\n    \"--disable-ebpf\") ENABLE_EBPF=0 ;;\n    \"--skip-available-ram-check\") SKIP_RAM_CHECK=1 ;;\n    \"--one-time-build\")\n      # XXX: No longer supported\n      ;;\n    \"--disable-cloud\")\n      warning \"Cloud cannot be disabled.\"\n      ;;\n    \"--require-cloud\") ;;\n    \"--build-json-c\")\n      NETDATA_BUILD_JSON_C=1\n      ;;\n    \"--install-prefix\")\n      NETDATA_PREFIX=\"${2}/netdata\"\n      shift 1\n      ;;\n    \"--install-no-prefix\")\n      NETDATA_PREFIX=\"${2}\"\n      shift 1\n      ;;\n    \"--prepare-only\")\n      NETDATA_DISABLE_TELEMETRY=1\n      NETDATA_PREPARE_ONLY=1\n      DONOTWAIT=1\n      ;;\n    \"--dev\")\n      REMOVE_BUILD=0\n      ;;\n    \"--help\" | \"-h\")\n      usage\n      exit 1\n      ;;\n    *)\n      echo >&2 \"Unrecognized option '${1}'.\"\n      exit_reason \"Unrecognized option '${1}'.\" I000E\n      usage\n      exit 1\n      ;;\n  esac\n  shift 1\ndone\n\nif [ ! \"${DISABLE_TELEMETRY:-0}\" -eq 0 ] ||\n  [ -n \"$DISABLE_TELEMETRY\" ] ||\n  [ ! \"${DO_NOT_TRACK:-0}\" -eq 0 ] ||\n  [ -n \"$DO_NOT_TRACK\" ]; then\n  NETDATA_DISABLE_TELEMETRY=1\nfi\n\nif [ -n \"${MAKEOPTS}\" ]; then\n  JOBS=\"$(echo \"${MAKEOPTS}\" | grep -oE '\\-j *[[:digit:]]+' | tr -d '\\-j ')\"\nelse\n  JOBS=\"$(find_processors)\"\nfi\n\nif [ \"$(uname -s)\" = \"Linux\" ] && [ -f /proc/meminfo ]; then\n  mega=\"$((1024 * 1024))\"\n  base=1024\n  scale=256\n\n  target_ram=\"$((base * mega + (scale * mega * (JOBS - 1))))\"\n  total_ram=\"$(grep MemTotal /proc/meminfo | cut -d ':' -f 2 | tr -d ' kB')\"\n  total_ram=\"$((total_ram * 1024))\"\n\n  if [ \"${total_ram}\" -le \"$((base * mega))\" ] && [ -z \"${NETDATA_ENABLE_ML}\" ]; then\n    NETDATA_ENABLE_ML=0\n  fi\n\n  if [ -z \"${MAKEOPTS}\" ]; then\n    MAKEOPTS=\"-j${JOBS}\"\n\n    while [ \"${target_ram}\" -gt \"${total_ram}\" ] && [ \"${JOBS}\" -gt 1 ]; do\n      JOBS=\"$((JOBS - 1))\"\n      target_ram=\"$((base * mega + (scale * mega * (JOBS - 1))))\"\n      MAKEOPTS=\"-j${JOBS}\"\n    done\n  else\n    if [ \"${target_ram}\" -gt \"${total_ram}\" ] && [ \"${JOBS}\" -gt 1 ] && [ -z \"${SKIP_RAM_CHECK}\" ]; then\n      target_ram=\"$(echo \"${target_ram}\" | awk '{$1/=1024*1024*1024;printf \"%.2fGiB\\n\",$1}')\"\n      total_ram=\"$(echo \"${total_ram}\" | awk '{$1/=1024*1024*1024;printf \"%.2fGiB\\n\",$1}')\"\n      run_failed \"Netdata needs ${target_ram} of RAM to safely install, but this system only has ${total_ram}. Try reducing the number of processes used for the install using the \\$MAKEOPTS variable.\"\n      exit_reason \"Insufficient RAM to safely install.\" I000F\n      exit 2\n    fi\n  fi\nfi\n\n# set default make options\nif [ -z \"${MAKEOPTS}\" ]; then\n  MAKEOPTS=\"-j$(find_processors)\"\nelif echo \"${MAKEOPTS}\" | grep -vqF -e \"-j\"; then\n  MAKEOPTS=\"${MAKEOPTS} -j$(find_processors)\"\nfi\n\nif [ \"$(id -u)\" -ne 0 ] && [ -z \"${NETDATA_PREPARE_ONLY}\" ]; then\n  if [ -z \"${NETDATA_PREFIX}\" ]; then\n    netdata_banner\n    banner_nonroot_install \"${@}\"\n    exit_reason \"Attempted install as non-root user to /.\" I0010\n    exit 1\n  else\n    banner_root_notify \"${@}\"\n  fi\nfi\n\nnetdata_banner\nprogress \"monitoring and troubleshooting, transformed!\"\ncat << BANNER1\n\n  You are about to build and install netdata to your system.\n\n  The build process will use ${TPUT_CYAN}${TMPDIR}${TPUT_RESET} for\n  any temporary files. You can override this by setting \\$TMPDIR to a\n  writable directory where you can execute files.\n\n  It will be installed at these locations:\n\n   - the daemon     at ${TPUT_CYAN}${NETDATA_PREFIX}/usr/sbin/netdata${TPUT_RESET}\n   - config files   in ${TPUT_CYAN}${NETDATA_PREFIX}/etc/netdata${TPUT_RESET}\n   - web files      in ${TPUT_CYAN}${NETDATA_PREFIX}/usr/share/netdata${TPUT_RESET}\n   - plugins        in ${TPUT_CYAN}${NETDATA_PREFIX}/usr/libexec/netdata${TPUT_RESET}\n   - cache files    in ${TPUT_CYAN}${NETDATA_PREFIX}/var/cache/netdata${TPUT_RESET}\n   - db files       in ${TPUT_CYAN}${NETDATA_PREFIX}/var/lib/netdata${TPUT_RESET}\n   - log files      in ${TPUT_CYAN}${NETDATA_PREFIX}/var/log/netdata${TPUT_RESET}\nBANNER1\n\n[ \"$(id -u)\" -eq 0 ] && cat << BANNER2\n   - pid file       at ${TPUT_CYAN}${NETDATA_PREFIX}/var/run/netdata.pid${TPUT_RESET}\n   - logrotate file at ${TPUT_CYAN}/etc/logrotate.d/netdata${TPUT_RESET}\nBANNER2\n\ncat << BANNER3\n\n  This installer allows you to change the installation path.\n  Press Control-C and run the same command with --help for help.\n\nBANNER3\n\nif [ -z \"$NETDATA_DISABLE_TELEMETRY\" ]; then\n  cat << BANNER4\n\n  ${TPUT_YELLOW}${TPUT_BOLD}NOTE${TPUT_RESET}:\n  Anonymous usage stats will be collected and sent to Netdata.\n  To opt-out, pass --disable-telemetry option to the installer or export\n  the environment variable DISABLE_TELEMETRY to a non-zero or non-empty value\n  (e.g: export DISABLE_TELEMETRY=1).\n\nBANNER4\nfi\n\nif ! command -v cmake >/dev/null 2>&1; then\n    fatal \"Could not find CMake, which is required to build Netdata.\" I0012\nelse\n    cmake=\"$(command -v cmake)\"\n    progress \"Found CMake at ${cmake}. CMake version: $(${cmake} --version | head -n 1)\"\nfi\n\nif ! command -v \"ninja\" >/dev/null 2>&1; then\n    progress \"Could not find Ninja, will use Make instead.\"\nelse\n    ninja=\"$(command -v ninja)\"\n    progress \"Found Ninja at ${ninja}. Ninja version: $(${ninja} --version)\"\n    progress \"Will use Ninja for this build instead of Make when possible.\"\nfi\n\nmake=\"$(command -v make 2>/dev/null)\"\n\nif [ -z \"${make}\" ] && [ -z \"${ninja}\" ]; then\n    fatal \"Could not find a usable underlying build system (we support make and ninja).\" I0014\nfi\n\nCMAKE_OPTS=\"${ninja:+-G Ninja}\"\nBUILD_OPTS=\"VERBOSE=1\"\n[ -n \"${ninja}\" ] && BUILD_OPTS=\"-k 1\"\n\nif [ ${DONOTWAIT} -eq 0 ]; then\n  if [ -n \"${NETDATA_PREFIX}\" ]; then\n    printf '%s' \"${TPUT_BOLD}${TPUT_GREEN}Press ENTER to build and install netdata to '${TPUT_CYAN}${NETDATA_PREFIX}${TPUT_YELLOW}'${TPUT_RESET} > \"\n  else\n    printf '%s' \"${TPUT_BOLD}${TPUT_GREEN}Press ENTER to build and install netdata to your system${TPUT_RESET} > \"\n  fi\n  read -r REPLY\n  if [ \"$REPLY\" != '' ]; then\n    exit_reason \"User did not accept install attempt.\" I0011\n    exit 1\n  fi\n\nfi\n\ncmake_install() {\n    # run cmake --install ${1}\n    # The above command should be used to replace the logic below once we no longer support\n    # versions of CMake less than 3.15.\n    if [ -n \"${ninja}\" ]; then\n        run ${ninja} -C \"${1}\" install\n    else\n        run ${make} -C \"${1}\" install\n    fi\n}\n\nbuild_error() {\n  netdata_banner\n  trap - EXIT\n  fatal \"Netdata failed to build for an unknown reason.\" I0002\n}\n\nif [ ${LIBS_ARE_HERE} -eq 1 ]; then\n  shift\n  echo >&2 \"ok, assuming libs are really installed.\"\n  export ZLIB_CFLAGS=\" \"\n  export ZLIB_LIBS=\"-lz\"\n  export UUID_CFLAGS=\" \"\n  export UUID_LIBS=\"-luuid\"\nfi\n\ntrap build_error EXIT\n\n# -----------------------------------------------------------------------------\n# If we’re installing the Go plugin, ensure a working Go toolchain is installed.\nif [ \"${ENABLE_GO}\" -eq 1 ]; then\n  progress \"Checking for a usable Go toolchain and attempting to install one to /usr/local/go if needed.\"\n  . \"${NETDATA_SOURCE_DIR}/packaging/check-for-go-toolchain.sh\"\n\n  if ! ensure_go_toolchain; then\n    warning \"Go ${GOLANG_MIN_VERSION} needed to build Go plugin, but could not find or install a usable toolchain: ${GOLANG_FAILURE_REASON}\"\n    ENABLE_GO=0\n  fi\nfi\n\n# -----------------------------------------------------------------------------\n# If we have the dashboard switching logic, make sure we're on the classic\n# dashboard during the install (updates don't work correctly otherwise).\nif [ -x \"${NETDATA_PREFIX}/usr/libexec/netdata-switch-dashboard.sh\" ]; then\n  \"${NETDATA_PREFIX}/usr/libexec/netdata-switch-dashboard.sh\" classic\nfi\n\n# -----------------------------------------------------------------------------\n# By default, `git` does not update local tags based on remotes. Because\n# we use the most recent tag as part of our version determination in\n# our build, this can lead to strange versions that look ancient but are\n# actually really recent. To avoid this, try and fetch tags if we're\n# working in a git checkout.\nif [ -d ./.git ] ; then\n  echo >&2\n  progress \"Updating tags in git to ensure a consistent version number\"\n  run git fetch -t || true\nfi\n\n# -----------------------------------------------------------------------------\n\necho >&2\n\n[ -n \"${GITHUB_ACTIONS}\" ] && echo \"::group::Configuring Netdata.\"\nNETDATA_BUILD_DIR=\"${NETDATA_BUILD_DIR:-./build/}\"\n[ ${REMOVE_BUILD} -eq 1 ] && rm -rf \"${NETDATA_BUILD_DIR}\"\n\n# function to extract values from the config file\nconfig_option() {\n  section=\"${1}\"\n  key=\"${2}\"\n  value=\"${3}\"\n\n  if [ -x \"${NETDATA_PREFIX}/usr/sbin/netdata\" ] && [ -r \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\" ]; then\n    \"${NETDATA_PREFIX}/usr/sbin/netdata\" \\\n      -c \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\" \\\n      -W get \"${section}\" \"${key}\" \"${value}\" ||\n      echo \"${value}\"\n  else\n    echo \"${value}\"\n  fi\n}\n\n# the user netdata will run as\nif [ \"$(id -u)\" = \"0\" ]; then\n  NETDATA_USER=\"$(config_option \"global\" \"run as user\" \"netdata\")\"\n  ROOT_USER=\"root\"\nelse\n  NETDATA_USER=\"${USER}\"\n  ROOT_USER=\"${USER}\"\nfi\nNETDATA_GROUP=\"$(id -g -n \"${NETDATA_USER}\" 2> /dev/null)\"\n[ -z \"${NETDATA_GROUP}\" ] && NETDATA_GROUP=\"${NETDATA_USER}\"\necho >&2 \"Netdata user and group set to: ${NETDATA_USER}/${NETDATA_GROUP}\"\n\nprepare_cmake_options\n\nif [ -n \"${NETDATA_PREPARE_ONLY}\" ]; then\n    progress \"Exiting before building Netdata as requested.\"\n    printf \"Would have used the following CMake command line for configuration: %s\\n\" \"${cmake} ${NETDATA_CMAKE_OPTIONS}\"\n    trap - EXIT\n    exit 0\nfi\n\n# Let cmake know we don't want to link shared libs\nif [ \"${IS_NETDATA_STATIC_BINARY}\" = \"yes\" ]; then\n    NETDATA_CMAKE_OPTIONS=\"${NETDATA_CMAKE_OPTIONS} -DBUILD_SHARED_LIBS=Off\"\nfi\n\n# shellcheck disable=SC2086\nif ! run ${cmake} ${NETDATA_CMAKE_OPTIONS}; then\n  fatal \"Failed to configure Netdata sources.\" I000A\nfi\n\n[ -n \"${GITHUB_ACTIONS}\" ] && echo \"::endgroup::\"\n\n# remove the build_error hook\ntrap - EXIT\n\n# -----------------------------------------------------------------------------\n[ -n \"${GITHUB_ACTIONS}\" ] && echo \"::group::Building Netdata.\"\n\n# -----------------------------------------------------------------------------\nprogress \"Compile netdata\"\n\n# shellcheck disable=SC2086\nif ! run ${cmake} --build \"${NETDATA_BUILD_DIR}\" --parallel ${JOBS} -- ${BUILD_OPTS}; then\n  fatal \"Failed to build Netdata.\" I000B\nfi\n\n[ -n \"${GITHUB_ACTIONS}\" ] && echo \"::endgroup::\"\n\n# -----------------------------------------------------------------------------\n[ -n \"${GITHUB_ACTIONS}\" ] && echo \"::group::Installing Netdata.\"\n\n# -----------------------------------------------------------------------------\nprogress \"Install netdata\"\n\nif ! cmake_install \"${NETDATA_BUILD_DIR}\"; then\n  fatal \"Failed to install Netdata.\" I000C\nfi\n\n# -----------------------------------------------------------------------------\nprogress \"Creating standard user and groups for netdata\"\n\nNETDATA_WANTED_GROUPS=\"docker nginx varnish haproxy adm nsd proxy squid ceph nobody\"\nNETDATA_ADDED_TO_GROUPS=\"\"\nif [ \"$(id -u)\" -eq 0 ]; then\n  progress \"Adding group 'netdata'\"\n  portable_add_group netdata || :\n\n  progress \"Adding user 'netdata'\"\n  portable_add_user netdata \"${NETDATA_PREFIX}/var/lib/netdata\" || :\n\n  progress \"Assign user 'netdata' to required groups\"\n  for g in ${NETDATA_WANTED_GROUPS}; do\n    # shellcheck disable=SC2086\n    portable_add_user_to_group ${g} netdata && NETDATA_ADDED_TO_GROUPS=\"${NETDATA_ADDED_TO_GROUPS} ${g}\"\n  done\n  # Netdata must be able to read /etc/pve/qemu-server/* and /etc/pve/lxc/*\n  # for reading VMs/containers names, CPU and memory limits on Proxmox.\n  if [ -d \"/etc/pve\" ]; then\n    portable_add_user_to_group \"www-data\" netdata && NETDATA_ADDED_TO_GROUPS=\"${NETDATA_ADDED_TO_GROUPS} www-data\"\n  fi\nelse\n  run_failed \"The installer does not run as root. Nothing to do for user and groups\"\nfi\n\n# -----------------------------------------------------------------------------\nprogress \"Install logrotate configuration for netdata\"\n\ninstall_netdata_logrotate\n\nprogress \"Install journald configuration for netdata\"\n\ninstall_netdata_journald_conf\n\n# -----------------------------------------------------------------------------\nprogress \"Read installation options from netdata.conf\"\n\n# create an empty config if it does not exist\n[ ! -f \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\" ] &&\n  touch \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\"\n\n# port\ndefport=19999\nNETDATA_PORT=\"$(config_option \"web\" \"default port\" ${defport})\"\n\n# directories\nNETDATA_LIB_DIR=\"$(config_option \"global\" \"lib directory\" \"${NETDATA_PREFIX}/var/lib/netdata\")\"\nNETDATA_CACHE_DIR=\"$(config_option \"global\" \"cache directory\" \"${NETDATA_PREFIX}/var/cache/netdata\")\"\nNETDATA_WEB_DIR=\"$(config_option \"global\" \"web files directory\" \"${NETDATA_PREFIX}/usr/share/netdata/web\")\"\nNETDATA_LOG_DIR=\"$(config_option \"global\" \"log directory\" \"${NETDATA_PREFIX}/var/log/netdata\")\"\nNETDATA_USER_CONFIG_DIR=\"$(config_option \"global\" \"config directory\" \"${NETDATA_PREFIX}/etc/netdata\")\"\nNETDATA_STOCK_CONFIG_DIR=\"$(config_option \"global\" \"stock config directory\" \"${NETDATA_PREFIX}/usr/lib/netdata/conf.d\")\"\nNETDATA_RUN_DIR=\"${NETDATA_PREFIX}/var/run\"\nNETDATA_CLAIMING_DIR=\"${NETDATA_LIB_DIR}/cloud.d\"\n\ncat << OPTIONSEOF\n\n    Permissions\n    - netdata user             : ${NETDATA_USER}\n    - netdata group            : ${NETDATA_GROUP}\n    - root user                : ${ROOT_USER}\n\n    Directories\n    - netdata user config dir  : ${NETDATA_USER_CONFIG_DIR}\n    - netdata stock config dir : ${NETDATA_STOCK_CONFIG_DIR}\n    - netdata log dir          : ${NETDATA_LOG_DIR}\n    - netdata run dir          : ${NETDATA_RUN_DIR}\n    - netdata lib dir          : ${NETDATA_LIB_DIR}\n    - netdata web dir          : ${NETDATA_WEB_DIR}\n    - netdata cache dir        : ${NETDATA_CACHE_DIR}\n\n    Other\n    - netdata port             : ${NETDATA_PORT}\n\nOPTIONSEOF\n\n# -----------------------------------------------------------------------------\nprogress \"Fix permissions of netdata directories (using user '${NETDATA_USER}')\"\n\nif [ ! -d \"${NETDATA_RUN_DIR}\" ]; then\n  # this is needed if NETDATA_PREFIX is not empty\n  if ! run mkdir -p \"${NETDATA_RUN_DIR}\"; then\n    warning \"Failed to create ${NETDATA_RUN_DIR}, it must becreated by hand or the Netdata Agent will not be able to be started.\"\n  fi\nfi\n\n# --- stock conf dir ----\n\n[ ! -d \"${NETDATA_STOCK_CONFIG_DIR}\" ] && mkdir -p \"${NETDATA_STOCK_CONFIG_DIR}\"\n[ -L \"${NETDATA_USER_CONFIG_DIR}/orig\" ] && run rm -f \"${NETDATA_USER_CONFIG_DIR}/orig\"\nrun ln -s \"${NETDATA_STOCK_CONFIG_DIR}\" \"${NETDATA_USER_CONFIG_DIR}/orig\"\n\n# --- web dir ----\n\nif [ ! -d \"${NETDATA_WEB_DIR}\" ]; then\n  echo >&2 \"Creating directory '${NETDATA_WEB_DIR}'\"\n  run mkdir -p \"${NETDATA_WEB_DIR}\" || exit 1\nfi\nrun find \"${NETDATA_WEB_DIR}\" -type f -exec chmod 0664 {} \\;\nrun find \"${NETDATA_WEB_DIR}\" -type d -exec chmod 0775 {} \\;\n\n# --- data dirs ----\n\nfor x in \"${NETDATA_LIB_DIR}\" \"${NETDATA_CACHE_DIR}\" \"${NETDATA_LOG_DIR}\"; do\n  if [ ! -d \"${x}\" ]; then\n    echo >&2 \"Creating directory '${x}'\"\n    if ! run mkdir -p \"${x}\"; then\n      warning \"Failed to create ${x}, it must be created by hand or the Netdata Agent will not be able to be started.\"\n    fi\n  fi\n\n  run chown -R \"${NETDATA_USER}:${NETDATA_GROUP}\" \"${x}\"\n  #run find \"${x}\" -type f -exec chmod 0660 {} \\;\n  #run find \"${x}\" -type d -exec chmod 0770 {} \\;\ndone\n\nrun chmod 755 \"${NETDATA_LOG_DIR}\"\n\n# --- claiming dir ----\n\nif [ ! -d \"${NETDATA_CLAIMING_DIR}\" ]; then\n  echo >&2 \"Creating directory '${NETDATA_CLAIMING_DIR}'\"\n  if ! run mkdir -p \"${NETDATA_CLAIMING_DIR}\"; then\n    warning \"failed to create ${NETDATA_CLAIMING_DIR}, it will need to be created manually.\"\n  fi\nfi\nrun chown -R \"${NETDATA_USER}:${NETDATA_GROUP}\" \"${NETDATA_CLAIMING_DIR}\"\nrun chmod 770 \"${NETDATA_CLAIMING_DIR}\"\n\n# --- plugins ----\n\nif [ \"$(id -u)\" -eq 0 ]; then\n  # find the admin group\n  admin_group=\n  test -z \"${admin_group}\" && get_group root > /dev/null 2>&1 && admin_group=\"root\"\n  test -z \"${admin_group}\" && get_group daemon > /dev/null 2>&1 && admin_group=\"daemon\"\n  test -z \"${admin_group}\" && admin_group=\"${NETDATA_GROUP}\"\n\n  run chown \"${NETDATA_USER}:${admin_group}\" \"${NETDATA_LOG_DIR}\"\n  run chown -R \"root:${admin_group}\" \"${NETDATA_PREFIX}/usr/libexec/netdata\"\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type d -exec chmod 0755 {} \\;\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type f -exec chmod 0644 {} \\;\n  # shellcheck disable=SC2086\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type f -a -name \\*.plugin -exec chown :${NETDATA_GROUP} {} \\;\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type f -a -name \\*.plugin -exec chmod 0750 {} \\;\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type f -a -name \\*.sh -exec chmod 0755 {} \\;\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"\n    capabilities=0\n    if ! iscontainer && command -v setcap 1> /dev/null 2>&1; then\n      run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"\n      if run setcap cap_dac_read_search,cap_sys_ptrace+ep \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"; then\n        # if we managed to setcap, but we fail to execute apps.plugin setuid to root\n        \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\" -t > /dev/null 2>&1 && capabilities=1 || capabilities=0\n      fi\n    fi\n\n    if [ $capabilities -eq 0 ]; then\n      # fix apps.plugin to be setuid to root\n      run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"\n    fi\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/debugfs.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/debugfs.plugin\"\n    capabilities=0\n    if ! iscontainer && command -v setcap 1> /dev/null 2>&1; then\n      run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/debugfs.plugin\"\n      if run setcap cap_dac_read_search+ep \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/debugfs.plugin\"; then\n        # if we managed to setcap, but we fail to execute debugfs.plugin setuid to root\n        \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/debugfs.plugin\" -t > /dev/null 2>&1 && capabilities=1 || capabilities=0\n      fi\n    fi\n\n    if [ $capabilities -eq 0 ]; then\n      # fix debugfs.plugin to be setuid to root\n      run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/debugfs.plugin\"\n    fi\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/systemd-journal.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/systemd-journal.plugin\"\n    capabilities=0\n    if ! iscontainer && command -v setcap 1> /dev/null 2>&1; then\n      run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/systemd-journal.plugin\"\n      if run setcap cap_dac_read_search+ep \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/systemd-journal.plugin\"; then\n        capabilities=1\n      fi\n    fi\n\n    if [ $capabilities -eq 0 ]; then\n      run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/systemd-journal.plugin\"\n    fi\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/perf.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/perf.plugin\"\n    capabilities=0\n    if ! iscontainer && command -v setcap 1>/dev/null 2>&1; then\n      run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/perf.plugin\"\n      if run sh -c \"setcap cap_perfmon+ep \\\"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/perf.plugin\\\" || setcap cap_sys_admin+ep \\\"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/perf.plugin\\\"\"; then\n        capabilities=1\n      fi\n    fi\n\n    if [ $capabilities -eq 0 ]; then\n      run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/perf.plugin\"\n    fi\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/slabinfo.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/slabinfo.plugin\"\n    capabilities=0\n    if ! iscontainer && command -v setcap 1>/dev/null 2>&1; then\n      run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/slabinfo.plugin\"\n      if run setcap cap_dac_read_search+ep \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/slabinfo.plugin\"; then\n        capabilities=1\n      fi\n    fi\n\n    if [ $capabilities -eq 0 ]; then\n      run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/slabinfo.plugin\"\n    fi\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/freeipmi.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/freeipmi.plugin\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/freeipmi.plugin\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/nfacct.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/nfacct.plugin\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/nfacct.plugin\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/xenstat.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/xenstat.plugin\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/xenstat.plugin\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ioping\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ioping\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ioping\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ebpf.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ebpf.plugin\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ebpf.plugin\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/cgroup-network\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/cgroup-network\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/cgroup-network\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/cgroup-network-helper.sh\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/cgroup-network-helper.sh\"\n    run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/cgroup-network-helper.sh\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/local-listeners\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/local-listeners\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/local-listeners\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/network-viewer.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/network-viewer.plugin\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/network-viewer.plugin\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ndsudo\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ndsudo\"\n    run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/ndsudo\"\n  fi\n\n  if [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/go.d.plugin\" ]; then\n    run chown \"root:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/go.d.plugin\"\n    capabilities=0\n    if ! iscontainer && command -v setcap 1> /dev/null 2>&1; then\n      run chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/go.d.plugin\"\n      if run setcap \"cap_dac_read_search+epi cap_net_admin+epi cap_net_raw=eip\" \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/go.d.plugin\"; then\n        capabilities=1\n      fi\n    fi\n\n    if [ $capabilities -eq 0 ]; then\n      # fix go.d.plugin to be setuid to root\n      run chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/go.d.plugin\"\n    fi\n  fi\n\nelse\n  # non-privileged user installation\n  run chown \"${NETDATA_USER}:${NETDATA_GROUP}\" \"${NETDATA_LOG_DIR}\"\n  run chown -R \"${NETDATA_USER}:${NETDATA_GROUP}\" \"${NETDATA_PREFIX}/usr/libexec/netdata\"\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type f -exec chmod 0755 {} \\;\n  run find \"${NETDATA_PREFIX}/usr/libexec/netdata\" -type d -exec chmod 0755 {} \\;\nfi\n\n[ -n \"${GITHUB_ACTIONS}\" ] && echo \"::endgroup::\"\n\n# -----------------------------------------------------------------------------\nprogress \"Telemetry configuration\"\n\n# Opt-out from telemetry program\nif [ -n \"${NETDATA_DISABLE_TELEMETRY+x}\" ]; then\n  run touch \"${NETDATA_USER_CONFIG_DIR}/.opt-out-from-anonymous-statistics\"\nelse\n  printf \"You can opt out from anonymous statistics via the --disable-telemetry option, or by creating an empty file %s \\n\\n\" \"${NETDATA_USER_CONFIG_DIR}/.opt-out-from-anonymous-statistics\"\nfi\n\n# -----------------------------------------------------------------------------\nprogress \"Install netdata at system init\"\n\n# By default we assume the shutdown/startup of the Netdata Agent are effectively\n# without any system supervisor/init like SystemD or SysV. So we assume the most\n# basic startup/shutdown commands...\nNETDATA_STOP_CMD=\"${NETDATA_PREFIX}/usr/sbin/netdatacli shutdown-agent\"\nNETDATA_START_CMD=\"${NETDATA_PREFIX}/usr/sbin/netdata\"\n\nif grep -q docker /proc/1/cgroup > /dev/null 2>&1; then\n  # If docker runs systemd for some weird reason, let the install proceed\n  is_systemd_running=\"NO\"\n  if command -v pidof > /dev/null 2>&1; then\n    is_systemd_running=\"$(pidof /usr/sbin/init || pidof systemd || echo \"NO\")\"\n  else\n    is_systemd_running=\"$( (pgrep -q -f systemd && echo \"1\") || echo \"NO\")\"\n  fi\n\n  if [ \"${is_systemd_running}\" = \"1\" ]; then\n    echo >&2 \"Found systemd within the docker container, running install_netdata_service() method\"\n    install_netdata_service || run_failed \"Cannot install netdata init service.\"\n  else\n    echo >&2 \"We are running within a docker container, will not be installing netdata service\"\n  fi\n  echo >&2\nelse\n  install_netdata_service || run_failed \"Cannot install netdata init service.\"\nfi\n\n# -----------------------------------------------------------------------------\n# check if we can re-start netdata\n\n# TODO: Creation of configuration file should be handled by a build system. Additionally we shouldn't touch configuration files in /etc/netdata/...\nstarted=0\nif [ ${DONOTSTART} -eq 1 ]; then\n  create_netdata_conf \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\"\nelse\n  if ! restart_netdata \"${NETDATA_PREFIX}/usr/sbin/netdata\" \"${@}\"; then\n    fatal \"Cannot start netdata!\" I000D\n  fi\n\n  started=1\n  run_ok \"netdata started!\"\n  create_netdata_conf \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\" \"http://localhost:${NETDATA_PORT}/netdata.conf\"\nfi\nrun chmod 0644 \"${NETDATA_PREFIX}/etc/netdata/netdata.conf\"\n\nif [ \"$(uname)\" = \"Linux\" ]; then\n  # -------------------------------------------------------------------------\n  progress \"Check KSM (kernel memory deduper)\"\n\n  ksm_is_available_but_disabled() {\n    cat << KSM1\n\n${TPUT_BOLD}Memory de-duplication instructions${TPUT_RESET}\n\nYou have kernel memory de-duper (called Kernel Same-page Merging,\nor KSM) available, but it is not currently enabled.\n\nTo enable it run:\n\n    ${TPUT_YELLOW}${TPUT_BOLD}echo 1 >/sys/kernel/mm/ksm/run${TPUT_RESET}\n    ${TPUT_YELLOW}${TPUT_BOLD}echo 1000 >/sys/kernel/mm/ksm/sleep_millisecs${TPUT_RESET}\n\nIf you enable it, you will save 40-60% of netdata memory.\n\nKSM1\n  }\n\n  ksm_is_not_available() {\n    cat << KSM2\n\n${TPUT_BOLD}Memory de-duplication not present in your kernel${TPUT_RESET}\n\nIt seems you do not have kernel memory de-duper (called Kernel Same-page\nMerging, or KSM) available.\n\nTo enable it, you need a kernel built with CONFIG_KSM=y\n\nIf you can have it, you will save 40-60% of netdata memory.\n\nKSM2\n  }\n\n  if [ -f \"/sys/kernel/mm/ksm/run\" ]; then\n    if [ \"$(cat \"/sys/kernel/mm/ksm/run\")\" != \"1\" ]; then\n      ksm_is_available_but_disabled\n    fi\n  else\n    ksm_is_not_available\n  fi\nfi\n\nif [ -f \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\" ]; then\n  # -----------------------------------------------------------------------------\n  progress \"Check apps.plugin\"\n\n  if [ \"$(id -u)\" -ne 0 ]; then\n    cat << SETUID_WARNING\n\n${TPUT_BOLD}apps.plugin needs privileges${TPUT_RESET}\n\nSince you have installed netdata as a normal user, to have apps.plugin collect\nall the needed data, you have to give it the access rights it needs, by running\neither of the following sets of commands:\n\nTo run apps.plugin with escalated capabilities:\n\n    ${TPUT_YELLOW}${TPUT_BOLD}sudo chown root:${NETDATA_GROUP} \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"${TPUT_RESET}\n    ${TPUT_YELLOW}${TPUT_BOLD}sudo chmod 0750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"${TPUT_RESET}\n    ${TPUT_YELLOW}${TPUT_BOLD}sudo setcap cap_dac_read_search,cap_sys_ptrace+ep \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"${TPUT_RESET}\n\nor, to run apps.plugin as root:\n\n    ${TPUT_YELLOW}${TPUT_BOLD}sudo chown root:${NETDATA_GROUP} \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"${TPUT_RESET}\n    ${TPUT_YELLOW}${TPUT_BOLD}sudo chmod 4750 \"${NETDATA_PREFIX}/usr/libexec/netdata/plugins.d/apps.plugin\"${TPUT_RESET}\n\napps.plugin is performing a hard-coded function of data collection for all\nrunning processes. It cannot be instructed from the netdata daemon to perform\nany task, so it is pretty safe to do this.\n\nSETUID_WARNING\n  fi\nfi\n\n# -----------------------------------------------------------------------------\nprogress \"Copy uninstaller\"\nif [ -f \"${NETDATA_PREFIX}\"/usr/libexec/netdata-uninstaller.sh ]; then\n  echo >&2 \"Removing uninstaller from old location\"\n  rm -f \"${NETDATA_PREFIX}\"/usr/libexec/netdata-uninstaller.sh\nfi\n\nsed \"s|ENVIRONMENT_FILE=\\\"/etc/netdata/.environment\\\"|ENVIRONMENT_FILE=\\\"${NETDATA_PREFIX}/etc/netdata/.environment\\\"|\" packaging/installer/netdata-uninstaller.sh > \"${NETDATA_PREFIX}/usr/libexec/netdata/netdata-uninstaller.sh\"\nchmod 750 \"${NETDATA_PREFIX}/usr/libexec/netdata/netdata-uninstaller.sh\"\n\n# -----------------------------------------------------------------------------\nprogress \"Basic netdata instructions\"\n\ncat << END\n\nnetdata by default listens on all IPs on port ${NETDATA_PORT},\nso you can access it with:\n\n  ${TPUT_CYAN}${TPUT_BOLD}http://this.machine.ip:${NETDATA_PORT}/${TPUT_RESET}\n\nTo stop netdata run:\n\n  ${TPUT_YELLOW}${TPUT_BOLD}${NETDATA_STOP_CMD}${TPUT_RESET}\n\nTo start netdata run:\n\n  ${TPUT_YELLOW}${TPUT_BOLD}${NETDATA_START_CMD}${TPUT_RESET}\n\nEND\necho >&2 \"Uninstall script copied to: ${TPUT_RED}${TPUT_BOLD}${NETDATA_PREFIX}/usr/libexec/netdata/netdata-uninstaller.sh${TPUT_RESET}\"\necho >&2\n\n# -----------------------------------------------------------------------------\nprogress \"Installing (but not enabling) the netdata updater tool\"\ninstall_netdata_updater || run_failed \"Cannot install netdata updater tool.\"\n\n# -----------------------------------------------------------------------------\nprogress \"Wrap up environment set up\"\n\n# Save environment variables\necho >&2 \"Preparing .environment file\"\ncat << EOF > \"${NETDATA_USER_CONFIG_DIR}/.environment\"\n# Created by installer\nPATH=\"${PATH}\"\nCFLAGS=\"${CFLAGS}\"\nLDFLAGS=\"${LDFLAGS}\"\nMAKEOPTS=\"${MAKEOPTS}\"\nNETDATA_TMPDIR=\"${TMPDIR}\"\nNETDATA_PREFIX=\"${NETDATA_PREFIX}\"\nNETDATA_CMAKE_OPTIONS=\"${NETDATA_CMAKE_OPTIONS}\"\nNETDATA_ADDED_TO_GROUPS=\"${NETDATA_ADDED_TO_GROUPS}\"\nINSTALL_UID=\"$(id -u)\"\nNETDATA_GROUP=\"${NETDATA_GROUP}\"\nREINSTALL_OPTIONS=\"${REINSTALL_OPTIONS}\"\nRELEASE_CHANNEL=\"${RELEASE_CHANNEL}\"\nIS_NETDATA_STATIC_BINARY=\"${IS_NETDATA_STATIC_BINARY}\"\nNETDATA_LIB_DIR=\"${NETDATA_LIB_DIR}\"\nEOF\nrun chmod 0644 \"${NETDATA_USER_CONFIG_DIR}/.environment\"\n\necho >&2 \"Setting netdata.tarball.checksum to 'new_installation'\"\ncat << EOF > \"${NETDATA_LIB_DIR}/netdata.tarball.checksum\"\nnew_installation\nEOF\n\nprint_deferred_errors\n\n# -----------------------------------------------------------------------------\necho >&2\nprogress \"We are done!\"\n\nif [ ${started} -eq 1 ]; then\n  netdata_banner\n  progress \"is installed and running now!\"\nelse\n  netdata_banner\n  progress \"is installed now!\"\nfi\n\necho >&2 \"  enjoy real-time performance and health monitoring...\"\necho >&2\nexit 0\n"
        },
        {
          "name": "netdata.spec.in",
          "type": "blob",
          "size": 34.0615234375,
          "content": "# SPDX-License-Identifier: GPL-3.0-or-later\n%global contentdir %{_datadir}/netdata\n%global version @PACKAGE_VERSION@\n\n# XXX: We are using automatic `Requires:` generation for libraries\n# whenever possible, DO NOT LIST LIBRARY DEPENDENCIES UNLESS THE RESULTANT\n# PACKAGE IS BROKEN WITHOUT THEM.\nAutoReqProv: yes\n\n# This is temporary and should eventually be resolved. This bypasses\n# the default rhel __os_install_post which throws a python compile\n# error.\n%global __os_install_post %{nil}\n\n# This is needed to support proper handling of Go code without requiring\n# external linking or GCCGO, because even recent versions of rpmbuild do\n# not properly support the build IDs generated by the upstream Go toolchain.\n%global _missing_build_ids_terminate_build 0\n\n# Use our custom CMake version from our package builders if we can’t find cmake.\n%if 0%{?centos_ver} == 7\n%global __cmake /cmake/bin/cmake\n%global __cmake_builddir .\n%global cmake %{__cmake}\n%global cmake_build %{__cmake} --build %{__cmake_builddir} --verbose --parallel $(nproc)\n%global cmake_install DESTDIR=\"%{buildroot}\" %{__cmake} --install %{__cmake_builddir}\n%endif\n%if 0%{?amazon_linux} == 2\n%global __cmake /cmake/bin/cmake\n%global __cmake_builddir .\n%global cmake %{__cmake}\n%global cmake_build %{__cmake} --build %{__cmake_builddir} --verbose --parallel $(nproc)\n%global cmake_install DESTDIR=\"%{buildroot}\" %{__cmake} --install %{__cmake_builddir}\n%endif\n\n# openSUSE requires us to explicity ask for ninja for builds.\n# We also need to specify the build directory since they do not.\n%if 0%{?suse_version}\n%global __builder ninja\n%global __cmake_builddir %{__builddir}\n%endif\n\n# Disable eBPF for architectures other than x86\n%ifarch x86_64 i386\n%global _have_ebpf 1\n%else\n%global _have_ebpf 0\n%endif\n\n# Mitigate the cross-distro mayhem by strictly defining the libexec destination\n%define _prefix /usr\n%define _sysconfdir /etc\n%define _localstatedir /var\n%define _libexecdir /usr/libexec\n%define _libdir /usr/lib\n\n%{!?_systemd_util_dir:%global _systemd_util_dir /usr/lib/systemd}\n\n# Fedora doesn’t define this, but other distros do\n%{!?_presetdir:%global _presetdir %{_libdir}/systemd/system-preset}\n\n# Redefine centos_ver to standardize on a single macro\n%{?rhel:%global centos_ver %rhel}\n\n# Disable FreeIPMI on Amazon Linux 2023 and newer\n%if 0%{?amzn} >= 2023\n%global _have_freeipmi 0\n%else\n%global _have_freeipmi 1\n%endif\n\n# Disable CUPS on old RHEL systems.\n%if 0%{?centos_ver} != 6 && 0%{?centos_ver} != 7 && 0%{?amazon_linux} != 2\n%global _have_cups 1\n%else\n%global _have_cups 0\n%endif\n\n# Disable NFACCT for RHEL equivalents and Amazon Linux\n%if 0%{?centos_ver} || 0%{?amzn}\n%global _have_nfacct 0\n%else\n%global _have_nfacct 1\n%endif\n\n# Disable xenstat if we’re not on Fedora or openSUSE\n%if 0%{?suse_version} || 0%{?fedora}\n%if 0%{!?amzm:1}\n%global _have_xenstat 0\n%else\n%global _have_xenstat 1\n%endif\n%else\n%global _have_xenstat 0\n%endif\n\n# Skip MongoDB exporter on known problem platforms\n%if 0%{?oraclelinux} || 0%{?suse_version} || 0%{?amzn}\n%global _have_mongo_exporter 0\n%else\n%global _have_mongo_exporter 1\n%endif\n\n# log2journal can’t build on some systems\n%if 0%{?sle_version}\n%if %{sle_version} < 150600\n%global _have_log2journal 0\n%else\n%global _have_log2journal 1\n%endif\n%else\n%global _have_log2journal 1\n%endif\n\n# If ML hasn’t been explicitly disabled or enabled yet, enable it now.\n%if 0%{!?_have_ml:1}\n%global _have_ml 1\n%endif\n\n# Filter known bogus deps that would be caught by AutoReqProv.\n%global __requires_exclude_from ^%{_libdir}/%{name}/system/.*$\n\nSummary:\tNetdata - Monitoring and troubleshooting, transformed!\nName:\t\tnetdata\nVersion:\t%{version}\nRelease:\t1%{?dist}\nLicense:\tGPLv3+\nGroup:\t\tApplications/System\nSource0:\thttps://github.com/%{name}/%{name}/releases/download/%{version}/%{name}-%{version}.tar.gz\nURL:\t\thttp://my-%{name}.io\n\n# Remove conflicting EPEL packages\nObsoletes: %{name}-conf\nObsoletes: %{name}-data\n\n# #####################################################################\n# Core build/install/runtime dependencies\n# #####################################################################\n\n# Build dependencies\n#\nBuildRequires: gcc\nBuildRequires: gcc-c++\nBuildRequires: make\nBuildRequires: git-core\nBuildRequires: cmake\n%if 0%{!?suse_version:1}\nBuildRequires: ninja-build\n%else\nBuildRequires: ninja\n%endif\nBuildRequires: pkgconfig\nBuildRequires: curl\nBuildRequires: findutils\nBuildRequires: pkgconfig(zlib)\nBuildRequires: pkgconfig(uuid)\nBuildRequires: pkgconfig(libuv)\nBuildRequires: pkgconfig(openssl)\nBuildRequires: pkgconfig(libcurl)\nBuildRequires: pkgconfig(liblz4)\nBuildRequires: pkgconfig(yaml-0.1)\nBuildRequires: pkgconfig(json-c)\n%if %{_have_log2journal}\nBuildRequires: pkgconfig(libpcre2-8)\n%endif\n%if 0%{?suse_version}\nBuildRequires: protobuf-devel\nBuildRequires: libprotobuf-c-devel\n%else\n%if 0%{?fedora}\nBuildRequires: protobuf-devel\nBuildRequires: protobuf-c-devel\n%else\n%if 0%{?centos_ver} >= 8\nBuildRequires: protobuf-devel\nBuildRequires: protobuf-c-devel\n%endif\n%endif\n%endif\n\n# Core build requirements for service install\n%if 0%{?suse_version}\nBuildRequires: systemd-rpm-macros\n%else\nBuildRequires: systemd\n%endif\n\n# Core requirements for the install to succeed\nRequires(pre): /usr/sbin/groupadd\nRequires(pre): /usr/sbin/useradd\n\n# #####################################################################\n# External plugin package dependencies\n# #####################################################################\n# CentOS prior to CentOS 8 does not have a new enough version of RPM\n# to support weak dependencies. Explicitly requiring our default plugins\n# makes it impossible to properly test the packages prior to upload,\n# so we just skip depending on them on CentOS 7.\nRequires: %{name}-dashboard\n%if 0%{?_have_ebpf}\nRequires: %{name}-plugin-ebpf = %{version}\n%endif\nRequires: %{name}-plugin-apps = %{version}\nRequires: %{name}-plugin-pythond = %{version}\nRequires: %{name}-plugin-go = %{version}\nRequires: %{name}-plugin-debugfs = %{version}\nRequires: %{name}-plugin-chartsd = %{version}\nRequires: %{name}-plugin-slabinfo = %{version}\nRequires: %{name}-plugin-perf = %{version}\n%if %{_have_nfacct}\nRequires: %{name}-plugin-nfacct = %{version}\n%endif\n%if %{_have_xenstat}\nSuggests: %{name}-plugin-xenstat = %{version}\n%endif\n%if %{_have_freeipmi} && 0%{?centos_ver} != 6 && 0%{?centos_ver} != 7 && 0%{?amazon_linux} != 2\nSuggests: %{name}-plugin-freeipmi = %{version}\n%endif\n%if 0%{?centos_ver} != 7 && 0%{?amazon_linux} != 2\n%if %{_have_cups}\nSuggests: %{name}-plugin-cups = %{version}\n%endif\nRecommends: %{name}-plugin-systemd-journal = %{version}\nRecommends: %{name}-plugin-network-viewer = %{version}\nRecommends: %{name}-plugin-logs-management = %{version}\n%else\nRequires: %{name}-plugin-systemd-journal = %{version}\nRequires: %{name}-plugin-network-viewer = %{version}\n%endif\n\nObsoletes: %{name}-plugin-logs-management\n\n# #####################################################################\n# Functionality-dependent package dependencies\n# #####################################################################\n# Note: Some or all of the Packages may be found in the EPEL repo,\n# rather than the standard ones\n\n# epbf plugin dependencies\n%if %{_have_ebpf}\nBuildRequires: pkgconfig(libelf)\n%endif\n# end ebpf plugin dependencies\n\n# nfacct plugin dependencies\n%if %{_have_nfacct}\nBuildRequires: pkgconfig(libmnl)\nBuildRequires: pkgconfig(libnetfilter_acct)\n%endif\n# end nfacct plugin dependencies\n\n# freeipmi plugin dependencies\n%if %{_have_freeipmi}\nBuildRequires: pkgconfig(libipmimonitoring)\n%endif\n# end - freeipmi plugin dependencies\n\n# CUPS plugin dependencies\n%if %{_have_cups}\nBuildRequires: cups-devel\n%endif\n# end - cups plugin dependencies\n\n# go.d.plugin dependencies\n#\n# The conditional here is checking for a macro we define in our package\n# builders. If it’s defined, then we’ve injected an upstream copy of\n# the Go toolchain, so we don’t need the package installed (which\n# is needed because Go’s development model is at odds with enterprise\n# distro handling of versioning).\n%if %{?_upstream_go_toolchain:0}%{!?_upstream_go_toolchain:1}\n%if 0%{?suse_version}\nBuildRequires: go >= 1.23\n%else\nBuildRequires: golang >= 1.23\n%endif\n%endif\n# end - go.d.plugin plugin dependencies\n\n# systemd-journal dependencies\nBuildRequires: pkgconfig(libsystemd)\n# end - systemd-journal dependencies\n\n# Prometheus remote write dependencies\n%if 0%{?suse_version}\nBuildRequires: snappy-devel\n%else\n%if 0%{?centos_ver} != 7\nBuildRequires: pkgconfig(snappy)\n%else\nBuildRequires: snappy-devel\n%endif\n%endif\n# end - prometheus remote write dependencies\n\n# Xenstat dependencies\n%if %{_have_xenstat}\nBuildRequires: pkgconfig(xenstat)\nBuildRequires: pkgconfig(xenlight)\n%endif\n# end - xenstat dependencies\n\n# MongoDB exporter dependencies\n%if %{_have_mongo_exporter}\nBuildRequires: pkgconfig(libmongoc-1.0)\n%endif\n# end - mongodb expoerter dependencies\n\n# logs-management dependencies\nBuildRequires: bison\nBuildRequires: flex\n# end - logs-management dependencies\n\n# #####################################################################\n# End of dependency management configuration\n# #####################################################################\n\n%description\n  netdata is the fastest way to visualize metrics. It is a resource\nefficient, highly optimized system for collecting and visualizing any\ntype of realtime timeseries data, from CPU usage, disk activity, SQL\nqueries, API calls, web site visitors, etc.\n  netdata tries to visualize the truth of now, in its greatest detail,\nso that you can get insights of what is happening now and what just\nhappened, on your systems and applications.\n\n%prep\n%setup -q -n \"%{name}-%{version}\"\n\n%build\n# Conf step\n%cmake -G Ninja \\\n\t-DCMAKE_INSTALL_PREFIX=/ \\\n\t%if 0%{?centos_ver:1}\n\t%if %{centos_ver} < 8\n\t-DUSE_CXX_11=On \\\n\t%endif\n\t%endif\n\t%if %{_have_cups}\n\t-DENABLE_PLUGIN_CUPS=On \\\n\t%else\n\t-DENABLE_PLUGIN_CUPS=Off \\\n\t%endif\n\t%if %{_have_ebpf}\n\t-DENABLE_PLUGIN_EBPF=On \\\n\t%if 0%{?centos_ver:1}\n\t%if 0%{?centos_ver} < 8\n\t-DFORCE_LEGACY_LIBBPF=On \\\n\t%endif\n\t%endif\n\t%else\n\t-DENABLE_PLUGIN_EBPF=Off \\\n\t%endif\n\t%if %{_have_freeipmi}\n\t-DENABLE_PLUGIN_FREEIPMI=On \\\n\t%else\n\t-DENABLE_PLUGIN_FREEIPMI=Off \\\n\t%endif\n\t%if %{_have_nfacct}\n\t-DENABLE_PLUGIN_NFACCT=On \\\n\t%else\n\t-DENABLE_PLUGIN_NFACCT=Off \\\n\t%endif\n\t%if %{_have_xenstat}\n\t-DENABLE_PLUGIN_XENSTAT=On \\\n\t%else\n\t-DENABLE_PLUGIN_XENSTAT=Off \\\n\t%endif\n\t%if 0%{?centos_ver:1}\n\t%if %{centos_ver} < 8\n\t-DENABLE_BUNDLED_PROTOBUF=On \\\n\t%else\n\t-DENABLE_BUNDLED_PROTOBUF=Off \\\n\t%endif\n\t%else\n\t%if 0%{?suse_version:1}\n\t-DENABLE_BUNDLED_PROTOBUF=On \\\n\t%else\n\t-DENABLE_BUNDLED_PROTOBUF=Off \\\n\t%endif\n\t%endif\n\t%if %{_have_ml}\n\t-DENABLE_ML=On \\\n\t%else\n\t-DENABLE_ML=Off \\\n\t%endif\n\t%if %{_have_mongo_exporter}\n\t-DENABLE_EXPORTER_MONGODB=On \\\n\t%else\n\t-DENABLE_EXPORTER_MONGODB=Off \\\n\t%endif\n\t-DENABLE_DBENGINE=On \\\n\t-DENABLE_H2O=On \\\n\t-DENABLE_PLUGIN_APPS=On \\\n\t-DENABLE_PLUGIN_CGROUP_NETWORK=On \\\n\t-DENABLE_PLUGIN_DEBUGFS=On \\\n\t-DENABLE_PLUGIN_GO=On \\\n\t-DENABLE_PLUGIN_PYTHON=On \\\n\t-DENABLE_PLUGIN_CHARTS=On \\\n\t-DENABLE_PLUGIN_LOCAL_LISTENERS=On \\\n\t-DENABLE_PLUGIN_PERF=On \\\n\t-DENABLE_PLUGIN_SLABINFO=On \\\n\t-DENABLE_PLUGIN_SYSTEMD_JOURNAL=On \\\n\t-DENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE=On \\\n\t-DENABLE_BUNDLED_JSONC=Off \\\n\t-DENABLE_BUNDLED_YAML=Off\n\n# Build step\n%{cmake_build}\n\n%install\n\n# ###########################################################\n# Clear the directory, if already exists and install\nrm -rf \"${RPM_BUILD_ROOT}\"\n%{cmake_install}\n\ninstall -m 644 -p \"${RPM_BUILD_ROOT}%{_libdir}/%{name}/conf.d/%{name}.conf\" \"${RPM_BUILD_ROOT}%{_sysconfdir}/%{name}\"\ninstall -m 644 -p \"${RPM_BUILD_ROOT}%{_libdir}/%{name}/conf.d/%{name}-updater.conf\" \"${RPM_BUILD_ROOT}%{_sysconfdir}/%{name}\"\n\n# ###########################################################\n# Install updater script\ninstall -m 755 -p packaging/installer/%{name}-updater.sh \"${RPM_BUILD_ROOT}%{_libexecdir}/%{name}/%{name}-updater.sh\"\n\n# ###########################################################\n# logrotate settings\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_sysconfdir}/logrotate.d\"\ninstall -m 644 -p \"%{__cmake_builddir}/system/logrotate/%{name}\" \"${RPM_BUILD_ROOT}%{_sysconfdir}/logrotate.d/%{name}\"\n\n# ###########################################################\n# Install cache and log directories\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_localstatedir}/cache/%{name}\"\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_localstatedir}/log/%{name}\"\n\n# ###########################################################\n# Install registry directory\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_localstatedir}/lib/%{name}/registry\"\n\n# ###########################################################\n# Install uninstaller script\ninstall -m 750 -p packaging/installer/%{name}-uninstaller.sh \\\n\"${RPM_BUILD_ROOT}%{_libexecdir}/%{name}/%{name}-uninstaller.sh\"\n\n# ###########################################################\n# Install netdata service\n\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_unitdir}\"\n%if 0%{?centos_ver} != 7 && 0%{?amazon_linux} != 2\ninstall -m 644 -p \"%{__cmake_builddir}/system/systemd/%{name}.service\" \"${RPM_BUILD_ROOT}%{_unitdir}/%{name}.service\"\n%else\ninstall -m 644 -p \"%{__cmake_builddir}/system/systemd/%{name}.service.v235\" \"${RPM_BUILD_ROOT}%{_unitdir}/%{name}.service\"\n%endif\ninstall -m 644 -p \"system/systemd/netdata-updater.timer\" \"${RPM_BUILD_ROOT}%{_unitdir}/%{name}-updater.timer\"\ninstall -m 644 -p \"%{__cmake_builddir}/system/systemd/%{name}-updater.service\" \"${RPM_BUILD_ROOT}%{_unitdir}/%{name}-updater.service\"\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_presetdir}\"\ninstall -m 644 -p \"system/systemd/50-%{name}.preset\" \"${RPM_BUILD_ROOT}%{_presetdir}/50-%{name}.preset\"\ninstall -m 755 -d \"${RPM_BUILD_ROOT}%{_systemd_util_dir}/journald@%{name}.conf.d\"\ninstall -m 644 -p \"system/systemd/journald@%{name}.conf\" \"${RPM_BUILD_ROOT}%{_systemd_util_dir}/journald@%{name}.conf.d/%{name}.conf\"\n\n%pre\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\nif ! getent passwd %{name} > /dev/null; then\n  useradd --system -g %{name} --home %{contentdir} --no-create-home -s /sbin/nologin -c \"Netdata pseudo user\" %{name}\nfi\n\n# I am not sure that the corresponding group names are exactly the same as in Debian, but we should start somewhere, shouldn't we?\nfor item in docker nginx varnish haproxy adm nsd proxy squid ceph nobody I2C; do\n  if getent group $item > /dev/null 2>&1; then\n    usermod -a -G ${item} %{name}\n  fi\ndone\n\n%post\n%if 0%{?suse_version}\n%service_add_post %{name}.service\n%else\n%systemd_post %{name}.service\n%endif\n\n%preun\n%if 0%{?suse_version}\n%service_del_preun %{name}.service\n%else\n%systemd_preun %{name}.service\n%endif\n\n%postun\n%if 0%{?suse_version}\n%service_del_postun %{name}.service\n%else\n%systemd_postun_with_restart %{name}.service\n%endif\n\n%clean\nrm -rf \"${RPM_BUILD_ROOT}\"\n\n%files\n%doc README.md\n%config(noreplace) %{_sysconfdir}/%{name}/%{name}.conf\n%config(noreplace) %{_sysconfdir}/%{name}/%{name}-updater.conf\n%attr(0755,root,netdata) %{_sysconfdir}/%{name}/edit-config\n%attr(0644,root,netdata) %{_sysconfdir}/%{name}/.install-type\n%dir %{_sysconfdir}/%{name}/health.d\n%dir %{_sysconfdir}/%{name}/statsd.d\n%config(noreplace) %{_sysconfdir}/logrotate.d/%{name}\n%{_libdir}/%{name}\n%{_sbindir}/%{name}\n%{_sbindir}/netdatacli\n%if %{_have_log2journal}\n%{_sbindir}/log2journal\n%endif\n%{_sbindir}/systemd-cat-native\n%{_sbindir}/%{name}-claim.sh\n\n%{_unitdir}/%{name}.service\n%{_unitdir}/%{name}-updater.timer\n%{_unitdir}/%{name}-updater.service\n%{_presetdir}/50-%{name}.preset\n%{_systemd_util_dir}/journald@%{name}.conf.d/%{name}.conf\n\n%dir %{_libexecdir}/%{name}\n%dir %{_libexecdir}/%{name}/plugins.d\n%defattr(0750,root,netdata,0750)\n%{_libexecdir}/%{name}/install-service.sh\n%{_libexecdir}/%{name}/%{name}-updater.sh\n%{_libexecdir}/%{name}/%{name}-uninstaller.sh\n%{_libexecdir}/%{name}/plugins.d/alarm-notify.sh\n%{_libexecdir}/%{name}/plugins.d/anonymous-statistics.sh\n%{_libexecdir}/%{name}/plugins.d/cgroup-name.sh\n%{_libexecdir}/%{name}/plugins.d/get-kubernetes-labels.sh\n%{_libexecdir}/%{name}/plugins.d/ioping.plugin\n%{_libexecdir}/%{name}/plugins.d/loopsleepms.sh.inc\n%{_libexecdir}/%{name}/plugins.d/system-info.sh\n%{_libexecdir}/%{name}/plugins.d/tc-qos-helper.sh\n\n# cgroup-network detects the network interfaces of CGROUPs\n# it must be able to use setns() and run cgroup-network-helper.sh as root\n# the helper script reads /proc/PID/fdinfo/* files, runs virsh, etc.\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/cgroup-network\n%attr(0750,root,netdata) %{_libexecdir}/%{name}/plugins.d/cgroup-network-helper.sh\n\n# local-listeners detects the local processes that are listening for connections\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/local-listeners\n\n# network-viewer.plugin, detects all system sockets and classifies them\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/network-viewer.plugin\n\n# ndsudo a helper to run privileged commands\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/ndsudo\n\n# Enforce 0660 for files and 0770 for directories\n# for the netdata lib, cache and log dirs\n%defattr(0660,root,netdata,0770)\n%attr(0770,netdata,netdata) %dir %{_localstatedir}/cache/%{name}\n%attr(0755,netdata,root) %dir %{_localstatedir}/log/%{name}\n%attr(0770,netdata,netdata) %dir %{_localstatedir}/lib/%{name}\n%attr(0770,netdata,netdata) %dir %{_localstatedir}/lib/%{name}/registry\n%attr(0770,netdata,netdata) %dir %{_localstatedir}/lib/%{name}/cloud.d\n\n# Dashboard belongs to a different sub-package\n%exclude %{_datadir}/%{name}/web\n\n# Free IPMI belongs to a different sub-package\n%if %{_have_freeipmi}\n%exclude %{_libexecdir}/%{name}/plugins.d/freeipmi.plugin\n%endif\n\n# NFACCT belongs to a different sub-package\n%if %{_have_nfacct}\n%exclude %{_libexecdir}/%{name}/plugins.d/nfacct.plugin\n%endif\n\n# Charts.d belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/charts.d.plugin\n%exclude %{_libexecdir}/%{name}/plugins.d/charts.d.dryrun-helper.sh\n%exclude %{_libexecdir}/%{name}/charts.d/\n%exclude %{_libdir}/%{name}/conf.d/charts.d.conf\n%exclude %{_libdir}/%{name}/conf.d/charts.d/\n\n# eBPF belongs to a different sub-package\n%if %{_have_ebpf}\n%exclude %{_libexecdir}/%{name}/plugins.d/ebpf.plugin\n%exclude %{_libdir}/%{name}/conf.d/ebpf.d.conf\n%exclude %{_libdir}/%{name}/conf.d/ebpf.d\n%exclude %{_libexecdir}/%{name}/plugins.d/ebpf.d\n%endif\n\n# Python.d belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/python.d.plugin\n%exclude %{_libexecdir}/%{name}/python.d\n%exclude %{_libdir}/%{name}/conf.d/python.d.conf\n%exclude %{_libdir}/%{name}/conf.d/python.d\n\n# Go.d belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/go.d.plugin\n%exclude %{_libdir}/%{name}/conf.d/go.d.conf\n%exclude %{_libdir}/%{name}/conf.d/go.d\n\n# apps belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/apps.plugin\n%exclude %{_libdir}/%{name}/conf.d/apps_groups.conf\n\n# slabinfo belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/slabinfo.plugin\n\n# perf belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/perf.plugin\n\n# systemd-journal belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/systemd-journal.plugin\n\n# xenstat belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/xenstat.plugin\n\n# Network viewer belongs to a different sub-package\n%exclude %{_libexecdir}/%{name}/plugins.d/network-viewer.plugin\n\n# CUPS belongs to a different sub package\n%if %{_have_cups}\n%exclude %{_libexecdir}/%{name}/plugins.d/cups.plugin\n\n%package plugin-cups\nSummary: The CUPS metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\n\n%description plugin-cups\n This plugin allows the Netdata Agent to collect metrics from the Common UNIX Printing System.\n\n%pre plugin-cups\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-cups\n%attr(0750,root,netdata) %{_libexecdir}/%{name}/plugins.d/cups.plugin\n%endif\n\n%if 0%{?_have_freeipmi}\n%package plugin-freeipmi\nSummary: The FreeIPMI metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: freeipmi\nRequires: %{name} = %{version}\n\n%description plugin-freeipmi\n This plugin allows the Netdata Agent to collect metrics from hardware using FreeIPMI.\n\n%pre plugin-freeipmi\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-freeipmi\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/freeipmi.plugin\n%endif\n\n%if %{_have_nfacct}\n%package plugin-nfacct\nSummary: The NFACCT metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-nfacct\n This plugin allows the Netdata Agent to collect metrics from the firewall using NFACCT objects.\n\n%pre plugin-nfacct\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-nfacct\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/nfacct.plugin\n%endif\n\n%package plugin-chartsd\nSummary: The charts.d metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: bash\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n%if 0%{?centos_ver} != 7\nSuggests: apcupsd\nSuggests: iw\nSuggests: sudo\n%endif\n\n%description plugin-chartsd\n This plugin adds a selection of additional collectors written in shell script to the Netdata Agent.\nIt includes collectors for APCUPSD, LibreSWAN, OpenSIPS, and Wireless access point statistics.\n\n%pre plugin-chartsd\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-chartsd\n%defattr(0750,root,netdata,0750)\n%{_libexecdir}/%{name}/plugins.d/charts.d.plugin\n%{_libexecdir}/%{name}/plugins.d/charts.d.dryrun-helper.sh\n%{_libexecdir}/%{name}/charts.d/\n%defattr(0644,root,netdata,0755)\n%{_libdir}/%{name}/conf.d/charts.d.conf\n%{_libdir}/%{name}/conf.d/charts.d/\n\n%if 0%{?_have_ebpf}\n%package plugin-ebpf\nSummary: The eBPF metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n%if 0%{?centos_ver} != 7\nRecommends: %{name}-plugin-apps = %{version}\nRecommends: %{name}-ebpf-legacy-code >= %{version}\n%else\nRequires: %{name}-plugin-apps = %{version}\nRequires: %{name}-ebpf-legacy-code >= %{version}\n%endif\n\n%description plugin-ebpf\n This plugin allows the Netdata Agent to use eBPF code to collect more detailed kernel-level metrics for the system.\n\n%pre plugin-ebpf\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-ebpf\n%defattr(4750,root,netdata,4750)\n%{_libexecdir}/%{name}/plugins.d/ebpf.plugin\n%defattr(0644,root,netdata,0755)\n%{_libdir}/%{name}/conf.d/ebpf.d.conf\n%{_libdir}/%{name}/conf.d/ebpf.d\n\n%package ebpf-legacy-code\nSummary: Compiled eBPF legacy code for the Netdata eBPF plugin\nGroup: Applications/System\nRequires: %{name}-plugin-ebpf = %{version}\nConflicts: %{name} < %{version}\n\n%description ebpf-legacy-code\n This package provides the pre-compiled eBPF legacy code for use by the Netdata eBPF plugin.\n This code is only needed when using the eBPF plugin with kernel versions before 5.10.\n\n%pre ebpf-legacy-code\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files ebpf-legacy-code\n%defattr(0640,root,netdata,0640)\n%{_libexecdir}/%{name}/plugins.d/ebpf.d/*.o\n\n%endif\n\n%package plugin-pythond\nSummary: The python.d metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n%if 0%{?centos_ver} == 7 || 0%{?centos_ver} == 6\nRequires: python\n%else\nRequires: python3\n%endif\n%if 0%{?centos_ver} != 7\nSuggests: sudo\n%endif\n\n%description plugin-pythond\n This plugin adds a selection of additional collectors written in Python to the Netdata Agent.\nMany of the collectors provided by this package are also available in netdata-plugin-go. In msot cases, you probably\nwant to use those versions instead of the Python versions.\n\n%pre plugin-pythond\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-pythond\n%defattr(0750,root,netdata,0750)\n%{_libexecdir}/%{name}/plugins.d/python.d.plugin\n%{_libexecdir}/%{name}/python.d\n%defattr(0644,root,netdata,0755)\n%{_libdir}/%{name}/conf.d/python.d.conf\n%{_libdir}/%{name}/conf.d/python.d\n\n%package plugin-go\nSummary: The go.d metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n%if 0%{?centos_ver} != 7\nSuggests: nvme-cli\nSuggests: sudo\n%endif\n%if 0%{?centos_ver} != 7 && 0%{?amazon_linux} != 2\nRecommends: lm_sensors\n%endif\n\n%description plugin-go\n This plugin adds a selection of additional collectors written in Go to the Netdata Agent\nA significant percentage of the application specific collectors provided by Netdata are part of this plugin,\nso most users will want it installed.\n\n%pre plugin-go\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-go\n%defattr(0750,root,netdata,0750)\n# CAP_NET_ADMIN needed for WireGuard collector\n# CAP_NET_RAW needed for ping collector\n%caps(cap_dac_read_search,cap_net_admin,cap_net_raw=eip) %{_libexecdir}/%{name}/plugins.d/go.d.plugin\n%defattr(0644,root,netdata,0755)\n%{_libdir}/%{name}/conf.d/go.d.conf\n%{_libdir}/%{name}/conf.d/go.d\n\n%package plugin-apps\nSummary: The per-application metrics collection plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-apps\n This plugin allows the Netdata Agent to collect per-application and per-user metrics without using cgroups.\n\n%pre plugin-apps\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-apps\n%defattr(0750,root,netdata,0750)\n# CAP_DAC_READ_SEARCH and CAP_SYS_PTRACE needed for data collection by the plugin.\n%caps(cap_dac_read_search,cap_sys_ptrace=ep) %{_libexecdir}/%{name}/plugins.d/apps.plugin\n%defattr(0644,root,netdata,0755)\n%{_libdir}/%{name}/conf.d/apps_groups.conf\n\n%package plugin-slabinfo\nSummary: The slabinfo metrics collector for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-slabinfo\n This plugin allows the Netdata Agent to collect perfromance and utilization metrics for the Linux kernel’s SLAB allocator.\n\n%pre plugin-slabinfo\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-slabinfo\n%defattr(0750,root,netdata,0750)\n# CAP_DAC_READ_SEARCH needed to access the files the plugin reads to collect data.\n%caps(cap_dac_read_search=ep) %{_libexecdir}/%{name}/plugins.d/slabinfo.plugin\n\n%package plugin-perf\nSummary: The perf metrics collector for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-perf\n This plugin allows the Netdata to collect metrics from the Linux perf subsystem.\n\n%pre plugin-perf\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-perf\n%defattr(0750,root,netdata,0750)\n# Either CAP_SYS_ADMIN or CAP_PERFMON needed for data collection\n# PERFMON is newer, so only try to use it on platforms which support it.\n%if 0%{?centos_ver} >= 9 || 0%{?fedora} >= 36\n%caps(cap_perfmon=ep) %{_libexecdir}/%{name}/plugins.d/perf.plugin\n%else\n%caps(cap_sys_admin=ep) %{_libexecdir}/%{name}/plugins.d/perf.plugin\n%endif\n\n%package plugin-debugfs\nSummary: The debugfs metrics collector for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-debugfs\n This plugin allows the Netdata Agent to collect Linux kernel metrics exposed through debugfs.\n\n%pre plugin-debugfs\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-debugfs\n%defattr(0750,root,netdata,0750)\n# CAP_DAC_READ_SEARCH required for data collection.\n%caps(cap_dac_read_search=ep) %attr(0750,root,netdata) %{_libexecdir}/%{name}/plugins.d/debugfs.plugin\n\n%package plugin-systemd-journal\nSummary: The systemd-journal plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-systemd-journal\n This plugin allows the Netdata Agent to present entries from the systemd\n journal on Netdata Cloud or the local Agent Dashboard.\n\n%pre plugin-systemd-journal\n\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-systemd-journal\n%defattr(0750,root,netdata,0750)\n# CAP_DAC_READ_SEARCH required for data collection.\n%caps(cap_dac_read_search=ep) %attr(0750,root,netdata) %{_libexecdir}/%{name}/plugins.d/systemd-journal.plugin\n\n%if %{_have_xenstat}\n%package plugin-xenstat\nSummary: The xenstat plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n\n%description plugin-xenstat\n This plugin allows Netdata to collect metrics from the Xen Hypervisor.\n\n%pre plugin-xenstat\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-xenstat\n%defattr(0750,root,netdata,0750)\n# SUID needed for data collection\n%attr(4750,root,netdata) %{_libexecdir}/%{name}/plugins.d/xenstat.plugin\n%endif\n\n%package plugin-network-viewer\nSummary: The network viewer plugin for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} = %{version}\nConflicts: %{name} < %{version}\n%if 0%{?_have_ebpf}\n%if 0%{?centos_ver} != 7\nRecommends: %{name}-plugin-ebpf = %{version}\n%else\nRequires: %{name}-plugin-ebpf = %{version}\n%endif\n%endif\n\n%description plugin-network-viewer\n This plugin allows the Netdata Agent to provide network connection\n mapping functionality for use in netdata Cloud.\n\n%pre plugin-network-viewer\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files plugin-network-viewer\n%defattr(0750,root,netdata,0750)\n# CAP_SYS_ADMIN, CAP_SYS_PTRACE and CAP_DAC_READ_SEARCH needed for data collection.\n%caps(cap_sys_admin,cap_sys_ptrace,cap_dac_read_search=ep) %attr(0750,root,netdata) %{_libexecdir}/%{name}/plugins.d/network-viewer.plugin\n\n%package dashboard\nSummary: The local dashboard for the Netdata Agent\nGroup: Applications/System\nRequires: %{name} >= %{version}\nConflicts: %{name} < %{version}\n\n%description dashboard\n This allows access to the dashboard on the local node without internet access.\n\n%pre dashboard\nif ! getent group %{name} > /dev/null; then\n  groupadd --system %{name}\nfi\n\n%files dashboard\n%defattr(0644,root,root,0755)\n%{_datadir}/%{name}/web\n\n%changelog\n* Thu Aug 29 2024 Austin Hemmelgarn <austin@netdata.cloud>\n- Split dashboard to it’s own package\n* Fri Jul 19 2024 Austin Hemmelgarn <austin@netdata.cloud>\n- Fix dependency issues with old logs-management plugin\n* Tue Jul 16 2024 Austin Hemmelgarn <austin@netdata.cloud>\n- Removed logs-management plugin\n* Wed Jul 03 2024 Konstantin Shalygin <k0ste@k0ste.ru> 0.0.0-26\n- Added lm_sensors as weak dependency for plugin-go package\n* Tue Feb 06 2024 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-25\n- Add package for network-viewer plugin\n* Thu Oct 26 2023 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-24\n- Add package for logs-management plugin\n* Tue Sep 19 2023 Austin hemmelgarn <austin@netdata.cloud> 0.0.0-24\n- Switch to using cmake for builds.\n* Mon Aug 28 2023 Konstantin Shalygin <k0ste@k0ste.ru> 0.0.0-23\n- Build go.d.plugin natively for CentOS Stream distro\n* Mon Aug 21 2023 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-22\n- Explicitly depend on version-matched plugins in native packages\n* Thu Aug 03 2023 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-21\n- Added systemd-journal plugin handling\n* Wed Jun 14 2023 Konstantin Shalygin <k0ste@k0ste.ru> 0.0.0-20\n- Added eBPF build dependency (again)\n* Fri Apr 07 2023 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-19\n- Split additional plugins out in their own packages.\n* Tue Mar 21 2023 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-18\n- Fix systemd handling to follow BCP.\n- Drop pre-systemd init support.\n* Thu Feb 16 2023 Konstantin Shalygin <k0ste@k0ste.ru> 0.0.0-17\n- Added eBPF build dependency\n* Thu Feb 03 2022 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-16\n- Bundle updater script in native packages.\n* Mon Oct 11 2021 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-15\n- Remove support code for legacy ACLK implementation.\n* Wed Sep 16 2020 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-14\n- Convert to using 'AutoReq: yes' for library dependencies.\n* Thu Feb 13 2020 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-13\n- Add handling for custom libmosquitto fork\n* Wed Jan 01 2020 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-12\n- Add explicit installation of log and cache directories\n- Clean up build dependencies.\n* Thu Dec 19 2019 Austin Hemmelgarn <austin@netdata.cloud> 0.0.0-11\n- Fix remaining ownership and permissions issues.\n* Mon Nov 04 2019 Konstantinos Natsakis <konstantinos.natsakis@gmail.com> 0.0.0-10\n- Fix /etc/netdata permissions\n* Mon Sep 23 2019 Konstantinos Natsakis <konstantinos.natsakis@gmail.com> 0.0.0-9\n- Do not build CUPS plugin subpackage on CentOS 6 and CentOS 7\n* Tue Aug 20 2019 Pavlos Emm. Katsoulakis <paul@netdata.cloud> - 0.0.0-8\n- Split CUPS functionality on separate package\n* Fri Jun 28 2019 Pavlos Emm. Katsoulakis <paul@netdata.cloud> - 0.0.0-7\n- Raise the path overrides to the spec file level, not just the configure.\n- Adjust tighter permissions on some folders, based on what we did on our installer\n- Introduce go.d plugin download and install, to include it on the package (Temporarily, to become separate package on next iteration)\n* Tue Jun 25 2019 Pavlos Emm. Katsoulakis <paul@netdata.cloud> - 0.0.0-6\n- Adjust dependency list: Some packages are missing on some distros, adopt to build successfully\n* Mon Jun 24 2019 Pavlos Emm. Katsoulakis <paul@netdata.cloud> - 0.0.0-5\nAnother pass on cleaning up pre/post installation steps\n- Sync permission and ownership on files and directories\n* Sun Jun 16 2019 Pavlos Emm. Katsoulakis <paul@netdata.cloud> - 0.0.0-4\nFirst draft refactor on package dependencies section\n- Remove freeipmi/nfacct plugin flags. We auto-detect all plugins by decision\n- Start refactor of package dependencies\n- Add missing dependencies, with respect to distro peculiarities\n- Adjust existing dependencies, so that distro-specific package names is applied\n* Wed Jan 02 2019 Pawel Krupa <pkrupa@redhat.com> - 0.0.0-3\n- Temporary set version statically\n- Fix changelog ordering\n- Comment-out node.d configuration directory\n* Wed Jan 02 2019 Pawel Krupa <pkrupa@redhat.com> - 0.0.0-2\n- Fix permissions for log files\n* Sun Nov 15 2015 Alon Bar-Lev <alonbl@redhat.com> - 0.0.0-1\n- Initial add.\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "system",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}