{
  "metadata": {
    "timestamp": 1736709670629,
    "page": 29,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dunst-project/dunst",
      "stars": 4724,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.19921875,
          "content": "*.swp\n*.o\n*.d\n*.gcda\n*.gcno\n*.gcov\n/lcov.info\n\ncore\nvgcore.*\n\n/docs/*.1\n/docs/*.5\n/docs/internal/coverage\n/docs/internal/html\n/dunst\n/dunstify\n/dunst.systemd.service\n/org.knopwob.dunst.service\n/test/test\n"
        },
        {
          "name": ".valgrind.suppressions",
          "type": "blob",
          "size": 4.33984375,
          "content": "# Ignore musls' weird error\n{\n   musl_alpine_libc\n   Memcheck:Free\n   fun:free\n   obj:/lib/ld-musl-x86_64.so.1\n}\n\n# Ignore another musls' weird error\n{\n   musl_alpine_libc\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   fun:realloc\n   fun:getdelim\n   obj:*\n   fun:vgMemCheck_new_block\n   obj:*\n}\n\n# Ignore yet another musls' weird error\n{\n   musl_alpine_libc\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:realloc\n   fun:getdelim\n   ...\n}\n\n# rsvg_error_handle_close got fixed in\n# - GNOME/librsvg@7bf1014\n# (2018-11-12, first tags: v2.45.0, v2.44.9)\n# but the release has to seep into the distros\n{\n   rsvg_error_handle_close\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   fun:g_malloc\n   fun:g_slice_alloc\n   fun:g_error_new_valist\n   fun:g_set_error\n   obj:*/librsvg-2.so*\n   fun:rsvg_handle_close\n   obj:*/loaders/libpixbufloader-svg.so\n   fun:gdk_pixbuf_loader_close\n   fun:gdk_pixbuf_get_file_info\n   fun:get_pixbuf_from_file\n   ...\n}\n\n# same as above, but as occurs in CI environment\n{\n   rsvg_error_handle_close2\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   fun:g_malloc\n   fun:g_slice_alloc\n   fun:g_error_new_valist\n   fun:g_set_error\n   obj:*/librsvg-2.so*\n   obj:*/librsvg-2.so*\n   obj:*/loaders/libpixbufloader-svg.so\n   obj:*/libgdk_pixbuf-2.0.so*\n   fun:gdk_pixbuf_loader_close\n   fun:gdk_pixbuf_get_file_info\n   fun:get_pixbuf_from_file\n   ...\n}\n\n# Some new in ArchLinux\n{\n   rsvg_rust_handle_close\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   ...\n   fun:rsvg_rust_handle_close\n   obj:*/loaders/libpixbufloader-svg.so\n   ...\n   fun:gdk_pixbuf_new_from_file\n   ...\n}\n\n# rsvg_error_writehandler got fixed in\n# - GNOME/librsvg@7b4cc9b\n# (2018-11-12, first tags: v2.45.0, v2.44.9)\n# but the release has to seep into the distros\n{\n   rsvg_error_writehandler\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   fun:g_malloc\n   fun:g_slice_alloc\n   fun:g_error_new_valist\n   fun:g_set_error\n   obj:*/librsvg-2.so*\n   fun:rsvg_handle_write\n   obj:*/loaders/libpixbufloader-svg.so\n   obj:*/libgdk_pixbuf-2.0.so*\n   fun:gdk_pixbuf_loader_close\n   fun:gdk_pixbuf_get_file_info\n   fun:get_pixbuf_from_file\n   ...\n}\n\n# a librsvg memoryleak that shows up in arch, but not in the CI environment\n{\n   <librsvg-arch>\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   obj:/usr/lib/librsvg-2.so.2.48.0\n   ...\n   fun:rsvg_handle_close\n   obj:/usr/lib/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-svg.so\n   obj:/usr/lib/libgdk_pixbuf-2.0.so.0.4200.6\n   fun:gdk_pixbuf_new_from_file\n   ...\n}\n\n# fontconfig memory leaks that occur when using certain pango library\n# functions, such as pango_layout_get_pixel_size\n{\n   fontconfig_pango_leaks\n   Memcheck:Leak\n   fun:*alloc\n   ...\n   obj:*fontconfig*\n   ...\n   obj:*pango*\n   ...\n}\n\n{\n   rsvg_conditional_jump\n   Memcheck:Cond\n   obj:/usr/lib*/librsvg-2.so.2.48.0\n   ...\n   fun:rsvg_handle_get_pixbuf\n   obj:/usr/lib*/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-svg.so\n   obj:/usr/lib*/libgdk_pixbuf-2.0.so.0.4200.10\n   fun:gdk_pixbuf_new_from_file\n   fun:notification_setup_raw_image\n   fun:notification_load_icon_with_scaling\n   ...\n}\n\n{\n   # Basically the same as above, but just for Debian\n   rsvg_conditional_jump-debian\n   Memcheck:Cond\n   obj:/usr/lib/*/librsvg-2.so.2.48.0\n   ...\n   fun:rsvg_handle_get_pixbuf\n   obj:/usr/lib/*/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-svg.so\n   obj:/usr/lib/*/libgdk_pixbuf-2.0.so.0.4200.8\n   fun:gdk_pixbuf_new_from_file\n   fun:notification_setup_raw_image\n   fun:notification_load_icon_with_scaling\n   ...\n}\n\n{\n   # Basically the same as above, but just for Ubuntu Focal\n   rsvg_conditional_jump-ubuntu_focal\n   Memcheck:Cond\n   obj:/usr/lib/*/librsvg-2.so.2.47.0\n   ...\n   fun:rsvg_rust_handle_close\n   obj:/usr/lib/*/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-svg.so\n   obj:/usr/lib/*/libgdk_pixbuf-2.0.so.0.4000.0\n   fun:gdk_pixbuf_new_from_file\n   fun:notification_setup_raw_image\n   fun:notification_load_icon_with_scaling\n   ...\n}\n\n{\n   # Something new on Ubuntu Noble Numbat\n   rsvg_conditional_jump-ubuntu_focal\n   Memcheck:Cond\n   obj:/usr/lib/*/librsvg-2.so.2.50.0\n   ...\n   fun:rsvg_handle_new\n   obj:/usr/lib/*/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-svg.so\n   obj:/usr/lib/*/libgdk_pixbuf-2.0.so.0.4200.10\n   fun:gdk_pixbuf_new_from_file\n   fun:notification_setup_raw_image\n   fun:notification_load_icon_with_scaling\n   ...\n}\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.123046875,
          "content": "Sascha Kruse (http://github.com/knopwob)\n\ncontributors:\nSee `git shortlog` for a list of contributors and their contributions\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 24.4775390625,
          "content": "# Dunst changelog\n\n## 1.12.1 -- 2024-12-17\n\n### Changed\n- Improve man pages and add `dunstify(1)`\n- Accept old `height` syntax again (with notice) (#1412)\n- Add `history-clear` and `history-rm` zsh completions (#1418)\n\n### Fixed\n- Memory corruption when reloading (#1413)\n- Fix height calculation regression (#1411)\n- Handle correctly file uri icons (#1409)\n- Fix typos in docs (#1415)\n\n## 1.12.0 -- 2024-11-30\n\n### Added\n- Export rules via dbus with `dunstctl rules [--json]` (#1212)\n- Added checks and messages for missing DBUS\\_SESSION\\_BUS\\_ADDRESS (#1389)\n- Add `-e/--exit` flag to `dunstctl is-paused` to exit with 1 when paused (#1378)\n- Add color gradients for the progress bar (by providing a list of colors instead of one) (#1370)\n- Use TESTDIR env var as the base for the test program (#1376)\n- Add `dunstctl reload` to hot reload the configuration (#1350)\n- Add an optional id to `dunstctl close` (#1351)\n- Print compile-time options in `dunst --version` (#1336)\n\n### Changed\n- BREAKING: Implement dynamic height (changes the the `height` setting, see manual) (#1342)\n- Change the preferred syntax of `offset` from `NxN` to `(N,N)` (#1330)\n- Install the systemd service file in the session.slice (#1397)\n- Open url with `dunstctl action` if no action is present (#1345,#1395)\n- Remove default icons (now no icons are hard-coded) (#1365,#1358)\n- Various updates to documentation and test suite\n\n### Fixed\n- Order of context menu was reversed (#1394,#1375)\n- Resolve ~ and $HOME in `icon_path` (#1383,#1371)\n- Fix broken link to freedesktop's notification specs in man page (#1381)\n- Remove the message about shortcuts deprecation (#1353)\n- Fix vertical padding behaviour (#1342)\n- Fix bash completion (#1347)\n- Fix file suffix for fish completions during installation (#1339)\n\n## 1.11.0 -- 2024-04-15\n\n### Added\n- Add `corners`, `progress_bar_corners` and `icon_corners` options to control which corners to round (#1268)\n- Support GTK/CSS cursor names on Wayland (#1276)\n- Make dunst more portable (#1288)\n- Print detected monitors names (X11) (#1332)\n\n### Changed\n- Make X11 optional in build (this allows wayland-only dunst) (#1290)\n- Shell completions are now official and can be installed from the Makefile (#1262, #1263)\n- Don't search for icon path if icons are disabled (#1301)\n- Eagerly parse and cache colors (#1306)\n- Update dunstctl manpage (#1298)\n- Update documentation (#1315, #1334)\n\n### Fixed\n- Fix settings initialization (this prevented --print and --startup\\_notification from working) (#1299)\n- Rework timer logic and fix error about Glib source ID for good (#1308, #1196)\n- Prevent memory corruption in XrmSetDatabase (#1256, #1291)\n- Don't try to print NULL strings (#1323)\n- Do not resolve icon paths twice (#1307, #1314)\n- Don't crash the test suite if librsvg is not present (#1329)\n- Fix memory leak in DBus RuleEnable (#1328)\n- Fix dunstctl rule (#1281)\n- Remove newlines from icon logging (#1296)\n- Prevent make from failing if git tags are not found (#1287)\n- Fix some typos (#1324, #1325, #1279)\n\n## 1.10.0 -- 2024-02-19\n\n### Added\n- Unofficial fish and bash completions (#1205, 1209)\n- Multiple pause levels to allow selective pausing of notifications (#1193)\n- `--startup_notification` option as an alternative to `-startup_notification` (#1208)\n- Expand variables, like `$HOME` in path in your dunstrc. See `man 3 wordexp` for the details (#1215)\n- Support for stable output names for the `monitor` (eDP-1, HDMI-1, etc). This is more relyable than the order of monitors. (#1250)\n- Wayland multiseat and touchscreen support (#1250)\n\n### Changed\n- The cursor is now being drawn by the compositor, making sure the right cursor theme and scaling is being used (#1250)\n\n### Fixed\n- Various documentation issues\n- Icon path not being interpreted as a path (#1210)\n- Handling of some commandline options (#1208)\n- Improved handling of fallback fonts (#1222)\n- Progress bar not rendering correctly for big corner radiusses compared to width (#1227)\n- Whitespace and brackets in dunstctl usage output (#1230, #1233)\n- Errors about Glib source ID spamming the log (#1257)\n- Idle idle_threshold not working anymore in Wayland due to Wayland protocol changes (#1250)\n\n## 1.9.2 -- 2023-04-20\n\n### Fixed\n- Various documentation issues (#1151, #1154, #1162)\n- High cpu usage when `show_age_treshold = -1` (#1164)\n- High cpu usage in some situation. This is often correlated with being idle. (#1158)\n\n## 1.9.1 -- 2023-03-08\n\n### Added\n- zsh completion for dunst and dunstctl (#1107 and #1108)\n- dunstctl `history-clear` command to delete all notifications from history (#1131)\n- dunstctl `history-rm command` to remove a single notification from history (#1128)\n- `progress_bar_corner_radius` option for adding rounded corners to the progress bar (off by default) (#1119)\n- `icon_corner_radius` option for adding rounded corners to notification icons (#1139)\n\n### Changed\n- Make libnotify and dunstify optional in build (#1129)\n\n### Fixed\n- Man page typo's and readability (#1088 and #1121)\n- Length changes not being emitted over D-Bus (#1127)\n- Crash when locking screen with swaylock on Sway (#1148)\n- Dunst using 100% in some configurations with `idle_threshold` turned on (#1140)\n\n## 1.9.0 -- 2022-06-27\n\n### Added\n- `override_dbus_timeout` setting to override the notification timeout set via\n  dbus. (#1035)\n- Support notification gaps via the `gap_size` setting. Note that since the\n  notifications are not separate windows, you cannot click in between the\n  notifications. (#1053)\n- Make `min_icon_size` and `max_icon_size` a rule for even more flexibility\n  (#1069)\n\n### Changed\n- The window offset is now scaled according to `scale` as well. This way\n  notification stay visually in the same place on higher DPI screens. (#1039)\n- For the recursive icon lookup, revert to using `min_icon_size` and\n  `max_icon_size` instead of `icon_size`. `min_icon_size` is used as the size to\n  look for in icon themes. This way of defining icon size is more flexible and\n  compatible with the old icon lookup. The new icon lookup should now be\n  superior for all use cases. (#1069)\n- Recursive icon lookup is no longer experimental.\n- Recursive icon lookup is enabled in the default dunstrc. This does not change\n  your settings when you have a custom dunstrc.\n\n### Fixed\n- Added back the `action_name` setting that was accidentally dropped. (#1051)\n- Broken `dunstctl history`. (#1060)\n- Merged a few wayland fixes from mako (https://github.com/emersion/mako)\n  (#1067)\n- `follow=keyboard`: Fix regression where we don't fall back to mouse (#1062)\n- Raw icons not being scaled according to icon size (#1043)\n- Notifications not disappearing. For some people notifications would sometimes\n  stay on screen until a new notification appeared. This should not happen\n  anymore (#1073).\n\n## 1.8.1 -- 2022-03-02\n\n### Fixed\n- Dunst sometimes not using the right config file, sometimes falling back to the\n  internal defaults.\n\n## 1.8.0 -- 2022-02-24\n\n### Added\n- Implemented `progress_bar_min_width`. Before it was an unused setting. (#1006)\n- `progress_bar_horizontal_alignment` for changing the alignment of the progress\n  bar. (#1021)\n- Support for config drop-ins. You can add as many configuration files as you\n  want in `dunstrc.d`. See the man page dunst(1) for more information. This was\n  done with help from @WhitePeter. (#997)\n- Thanks to @m-barlett you can place your icons at the center of your\n  notifications with `icon_position = top`.\n- `icon_position` is now a rule (also by @m-barlett).\n- `hide_text` for hiding all text of a notification. This also removes all\n  padding that would be present for a notification without text. (also by\n  @m-barlett) (#985)\n- The previously removed keyboard shortcuts have been added again, but now they\n  are in the `[global]` section of the config. Not everything that was possible\n  with the keyboard shortcuts was possible with dunstctl on X11. Mainly\n  activating a keyboard shortcut only when notifications are on screen. Thanks\n  to @wgmayer0 for testing. (#1033).\n\n### Changed\n- Improved the man page regarding transitioning from the old geometry.\n- The default alignment of the progress bar is now center instead of left.\n- Better regex matching for rules. When you set `enable_posix_regex`. Take a\n  look at\n  https://en.m.wikibooks.org/wiki/Regular_Expressions/POSIX-Extended_Regular_Expressions\n  for how the new regex syntax works. Note that you cannot do inverse matching\n  yet, I'm working on that in #1040. (#1017)\n- Thanks to @kurogetsusai you can once again use negative offsets to put a\n  notification window slightly off-screen if you so like. (#1027)\n- As mentioned above, the keyboard shortcuts have been moved to the `[global]`\n  section. Please move your settings there.\n\n\n### Fixed\n- Crash when `open_url` was used without URL's. (#1000)\n- Icons sometimes being incorrectly sized with the new icon lookup. (#1003)\n- Incorrect defaults mentioned in the documentation. (#1004, #1029 and more)\n- Crash when icon could not be read by glib. (#1023)\n- Not being able to override anymore raw icons with `new_icon` (#1009)\n- High cpu usage when selecting an action in dmenu or similar. This was caused\n  by dunst not going to sleep when waiting for a response. (#898)\n- Updated default values documentation (with help from @profpatch) (#1004 and more)\n\n## 1.7.3 -- 2021-12-08\n\n### Changed\n- `follow` is now `none` again by default. This was the case before v1.7.0 as well. (#990).\n\n### Fixed\n- `dunstctl action` is now working again.\n- Segfault in experimental icon lookup when an inherited theme doesn't exist.\n- `icon_position = off` not being respected (#996).\n\n## 1.7.2 -- 2021-11-30\n\n### Added\n- Experimental recursive icon lookup. This is not enabled by default and can be\n  enabled by setting `enable_recursive_icon_lookup=true`. Setting icon sizes\n  still doesn't work entirely as it's supposed to and will be improved in future\n  releases. (#965)\n- You can now enable or disable rules on the fly with `dunstctl rule $name$\n  enable/disable`. (#981)\n- `dunstctl history` lists your notification history in JSON format for\n  processing by scripts. (#970)\n- You can now pop specific notifications from history by passing a notification\n  ID to `dunstctl history-pop`. (#970)\n- `default_icon` setting for setting the icon when no icons are given (#984)\n- Implemented display size detection in Wayland. (#973)\n\n### Fixed\n- Text being cut off on X11 when using fractional scaling. (#975)\n- Incorrect hitbox for notification on X11 with scaling. (#980)\n- Improved warning messages for deprecated sections. (#974)\n- `icon` being interpreted as a filter and not being allowed in the special\n  urgency sections. This is a compatibility fix, but it's recommended to replace\n  all usages of `icon` in these sections with `default_icon` to prevent\n  confusion with the `icon` rule in other sections. (#984)\n- `new_icon` being used in the default dunstrc where `default_icon` is the\n  intended settings. This was commented by default, so it doesn't affect any\n  default behaviour. (#984)\n- Notifications bleeding to other screens when the width was big enough. Now the\n  notification's width is lowered when it would otherwise leave the display.\n\n\n## 1.7.1 -- 2021-11-01\n\n### Added\n- Script environment variable `DUNST_DESKTOP_ENTRY`. (#874)\n- Rule `set_category` for change a notifications category with rules. (1b72b2a)\n\n### Fixed\n- Dunst not building with WAYLAND=0. (#938)\n- Wrong icon being shown in chromium-based browsers. (#939)\n- `set_stack_tag` not working anymore. (#942)\n- Outdated documentation. (#943, #944 and more)\n- Empty strings not being allowed in settings. (#946)\n- Dunst crashing when compositor doesn't support `zwlr_foreign_toplevel_v1`. (#948)\n- Xmore notifications showing a progress bar and icon. (#915)\n- Markup is now a rule again. Before this was undocumented behaviour. (#955)\n- Double free when setting `XDG_CONFIG_DIR`. (#957)\n- Dunst crashing on some compositors. (#948)\n- Dunst not exiting when wayland compositor quits. (#961)\n- Now the separators are not responsive to mouse clicks anymore. (#960)\n- Mouse action stopping the rest of the actions. (bf58928)\n\n## 1.7.0 -- 2021-10-19:\n\n### Added\n- `context` and `context_all` mouse actions for opening the context menu (#848)\n- `open_url` mouse action for opening url's in a notification (#848)\n- `action_name` rule for setting a default action to perform when using\n  `do_action` (#848)\n- HiDPI support for both Wayland and X11. On wayland the scale can be set from\n  your compositor's settings and is automatically picked up by dunst. On X11\n  dunst will guess the scale based on the DPI of the screen. If that isn't good,\n  you can set the `scale` variable in the settings. (#854 and #890)\n- `highlight` can now also be set through dbus hints with the key `hlcolor`\n  (#862)\n- Your dunstrc is now being checked by dunst. Dunst will print a warning when\n  coming across an non-existing/invalid setting. (#803)\n- Wayland fullscreen detection (#814)\n- Wayland touch support (#814)\n- Cursor is now being changed to `left_ptr` when hovering over dunst (Wayland)\n  (#903)\n\n### Changed\n- `startup_notification` and `verbosity` are now only available as a command\n  line arguments. (#803)\n- Rule settings can now also be used in the `[global]` section. They will then\n  apply to all the notifications. (#803)\n- `fullscreen`, `ellpsize` and `word_wrap` are now rules. They can still be used\n  in the `[global]` section as well (see above). (#937 and #803)\n- The appid's now also need to match when stacking notifications. (#886)\n- `xdg-open` is now being used by default for opening URL's. (#889)\n- `geometry` and `notification_height` have been replaced by `origin`, `width`,\n  `height`, `offset` and `notification_limit`. This allows for more flexible\n  geometry settings. (#855)\n- There were a bunch of changes in the installation and default locations. See\n  the release notes for more information.\n- Upon seeing invalid markup, dunst is a bit smarter in stripping the markup.\n\n### Fixed\n- Lots of debug messages when `idle_timeout=0` (#814)\n- `follow=none` not working on Wayland (#814)\n- Incorrect sorting when `sort` is false\n- NULL pointer dereference on Wayland\n- Dunst not redrawing after `close_all` action.\n- Dunst not announcing icon-static capability over dbus (#867)\n- Dunst not falling back to X11 output when it can't initialize the Wayland\n  output. (#834)\n- Improve stability on Wayland. (#930 and more)\n\n### Removed\n- The `[shortcuts]` section with all it's settings. Use your WM/DE's shortcut\n  manager and `dunstctl` to replace it. (#803)\n- Setting settings via command line arguments. (#803)\n- Setting settings via `config.h`. (#803)\n\n## 1.6.1 -- 2021-02-21:\n\n### Fixed\n- Incorrect version in Makefile\n\n## 1.6.0 -- 2021-02-21:\n\n### Added\n- Wayland support. Dunst now runs natively on wayland. This fixes several bugs\n  with dunst on wayland and allows idle detection. (#781)\n- A progress bar, useful for showing volume or brightness in notifications (#775)\n- A script in contrib for using the progress bar (#791)\n- `dunstctl count` for showing the number of notifications (#793)\n- Expose environment variables info about the notification to scripts (#802)\n- `text_icon_padding` for adding padding between the notification icon and text\n  (#810)\n\n### Changed\n- Dunst now installs a system-wide config in `/etc/dunst/dunstrc` (#798)\n- Move part of the man page to dunst(5) (#799)\n\n### Fixed\n- `history_ignore` flag broken when using multiple rules (#747)\n- Divide by zero in radius calculation (#750)\n- Monitor setting overriding `follow_mode` (#755)\n- Incorrect monitor usage when using multiple X11 screens (#762)\n- Emit signal when `paused` property changes (#766)\n- `dunstify` can pass empty appname to libnotify (#768)\n- Incorrect handling of 'do_action, close' mouse action (#778)\n\n### Removed\n\n- `DUNST_COMMAND_{PAUSE,RESUME,TOGGLE}` (#830)\n\n## 1.5.0 -- 2020-07-23\n\n### Added\n- `min_icon_size` option to automatically scale up icons to a desired value (#674)\n- `vertical_alignment` option to control the text/icon alignment within the notification (#684)\n- Ability to configure multiple actions for each mouse event (#705)\n- `dunstctl` command line control client (#651)\n- RGBA support for all color strings (#717)\n- Ability to run multiple scripts for each notification\n- `ignore_dbusclose` setting (#732)\n\n### Changed\n- `dunstify` notification client is now installed by default (#701)\n- Keyboard follow mode falls back to the monitor with the mouse if no window has keyboard focus (#708)\n\n### Fixed\n- Overflow when setting a >=40 minute timeout (#646)\n- Unset configuration options not falling back to default values (#649)\n- Crash when `$HOME` environment variable is unset (#693)\n- Lack of antialiasing with round corners enabled (#713)\n\n## 1.4.1 -- 2019-07-03\n\n### Fixed\n\n- `max_icon_size` not working with dynamic width (#614)\n- Failure to parse color strings with trailing comments in the config (#626)\n- Negative width in geometry being ignored (#628)\n- Incorrect handling of the argument terminator `--` in dunstify\n- Crash when changing DPI while no notifications are displayed (#630)\n- Fullscreen status change not being detected in some cases (#613)\n\n## 1.4.0 -- 2019-03-30\n\n### Added\n\n- Add support to override `frame_color` via rules (#498)\n- Support for round corners (#420)\n- Ability to reference `$HOME` in icon paths with `~/` (#520)\n- Support to customize the mouse bindings (#530)\n- Command to toggle pause status (#535)\n- Ability to automatically replace similar notifications (like volume changes)\n  via `stack_tag` (#552)\n- Comparison of raw icons for duplicate notifications (#571)\n- Introduce new desktop-entry filter (#470)\n- `fullscreen` rule to hide notifications when a fullscreen window is active (#472)\n- Added `skip_display` rule option to skip initial notification display, and\n  include the notification in the history. (#590)\n\n### Fixed\n\n- Notification age not counting the time while the computer was suspended (#492)\n- Dunst losing always-on-top status on a window manager restart (#160)\n- Xpm icons not being recognized\n- When new notifications arrive, but display is full, important notifications don't\n  have to wait for a timeout in a displayed notification (#541)\n- Dunst hanging while the context menu is open (#456)\n- Having & inside a notification breaking markup (#546)\n- `<I> more` notifications don't occupy space anymore, if there is only a single\n  notification waiting to get displayed. The notification gets displayed directly (#467)\n- Segfault when comparing icon name with a notification with a raw icon (#536)\n- Icon size can no longer be larger than the notification when a fixed width is specified (#540)\n\n### Changed\n\n- Transient notifications no longer skip history by default (#508)\n- The notification summary no longer accepts markup (#497)\n\n### Removed\n\n- Dependency on libxdg-basedir (#550)\n\n## 1.3.2 -- 2018-05-06\n\n### Fixed\n\n- Crash when trying to load an invalid or corrupt icon (#512)\n\n## 1.3.1 -- 2018-01-30\n\n### Fixed\n\n- Race condition resulting in the service files being empty (#488)\n\n## 1.3.0 -- 2018-01-05\n\n### Added\n- `ellipsize` option to control how long lines should be ellipsized when `word_wrap` is set to `false` (#374)\n- A beginning tilde of a path is now expanded to the home of the current user (#351)\n- The image-path hint is now respected, as GApplications send their icon only via this link (#447)\n- The (legacy) image\\_data hint is now respected (#353)\n- If dunst can't acquire the DBus name, dunst prints the PID of the process holding the name (#458 #460)\n- Increased accuracy of timeouts by using microseconds internally (#379 #291)\n- Support for specifying timeout values in milliseconds, minutes, hours, or days. (#379)\n- Support for HTML img tags (via context menu) (#428)\n\n### Fixed\n- `new_icon` rule being ignored on notifications that had a raw icon (#423)\n- Format strings being replaced recursively in some cases (#322 #365)\n- DBus related memory leaks (#397)\n- Crash on X11 servers with RandR support less than 1.5. (#413 #364)\n- Silently reading the default config file, if `-conf` did not specify a valid file (#452)\n- Notification window flickering when a notification is replaced (#320 #415)\n- Inaccurate timeout in some cases (#291 #379)\n\n### Changed\n- Transient hints are now handled (#343 #310)\n  An additional rule option (`match_transient` and `set_transient`) is added\n  to optionally reset the transient setting\n- HTML links are now referred to by their text in the context menu rather than numbers (#428)\n- `icon_folders` setting renamed to `icon_path` (#170)\n- `config.def.h` and `config.h` got merged (#371)\n- The dependency on GTK3+ has been removed. Instead of GTK3+, dunst now\n  requires gdk-pixbuf which had been a transient dependency before. (#334\n  #376)\n- The `_GNU_SOURCE` macros had been removed to make dunst portable to nonGNU systems (#403)\n- Internal refactorings of the notification queue handling. (#411)\n- Dunst does now install the systemd and dbus service files into their proper location given\n  by pkg-config. Use `SERVICEDIR_(DBUS|SYSTEMD)` params to overwrite them. (#463)\n\n## 1.2.0 -- 2017-07-12\n\n### Added\n- `always_run_script` option to run script even if a notification is suppressed\n- Support for more icon file types\n- Support for raw icons\n- `hide_duplicate_count` option to hide the number of duplicate notifications\n- Support for per-urgency frame colours\n- `markup` setting for more fine-grained control over how markup is handled\n- `history_ignore` rule action to exclude a notification from being added to the history\n- Support for setting the dpi value dunst will use for font rendering via the `Xft.dpi` X resource\n- Experimental support for per-monitor dpi calculation\n- `max_icon_size` option to scale down icons if they exceed a certain size\n- Middle click on notifications can be used to trigger actions\n- Systemd service file, installed by default\n- `%n` format flag for getting progress value without any extra characters\n\n### Changed\n- Text and icons are now centred vertically\n- Notifications aren't considered duplicate if urgency or icons differ\n- The maximum length of a notification is limited to 5000 characters\n- The frame width and color settings were moved to the global section as `frame_width` and `frame_color` respectively\n- Dropped Xinerama in favour of RandR, Xinerama can be enabled with the `-force_xinerama` option if needed\n\n### Deprecated\n- `allow_markup` is deprecated with `markup` as its replacement\n- The urgency specific command line flags have been deprecated with no replacement, respond to issue #328 on the bug tracker if you depend on them\n\n### Fixed\n- Infinite loop if there are 2 configuration file sections with the same name\n- URLs with dashes and underscores in them are now parsed properly\n- Many memory leaks\n- Category based rules were applied without actually matching\n- dmenu command not parsing quoted arguments correctly\n- Icon alignment with dynamic width\n- Issue when loading configuration files with very long lines\n- '\\n' is no longer expanded to a newline inside notification text\n- Notification window wasn't redrawn if obscured on systems without a compositor\n- `ignore_newline` now works regardless of the markup setting\n- dmenu process being left as a zombie if no option was selected\n- Crash when opening urls parsed from `<a href=\"\">` tags\n\n## 1.1.0 -- 2014-07-29\n- fix nasty memory leak\n- icon support (still work in progress)\n- fix issue where keybindings aren't working when numlock is activated\n\n## 1.0.0 -- 2013-04-15\n- use pango/cairo as drawing backend\n- make use of pangos ability to parse markup\n- support for actions via context menu\n- indicator for actions/urls found\n- use blocking I/O. No more waking up the CPU multiple times per second to check for new dbus messages\n\n## 0.5.0 -- 2013-01-26\n- new default dunstrc\n- frames for window\n- trigger scripts on matching notifications\n- context menu for urls (using dmenu)\n- pause and resume function\n- use own code for ini parsing (this removes inih)\n- progress hints\n\n## 0.4.0 -- 2012-09-27\n- separator between notifications\n- word wrap long lines\n- real transparance\n- bouncing text (alternative to word_wrap)\n- new option for line height\n- better multihead support\n- don't die when keybindings can't be grabbed\n- bugfix: forgetting geometry\n- (optional) static configuration\n\n## 0.3.1 -- 2012-08-02\n- fix -mon option\n\n## 0.3.0 -- 2012-07-30\n- full support for Desktop Notification Specification (mandatory parts)\n- option to select monitor on which notifications are shown\n- follow focus\n- oneline mode\n- text alignment\n- show age of notifications\n- sticky history\n- filter duplicate messages\n- keybinding to close all notifications\n- new way to specify keybindings\n- cleanup / bugfixes etc.\n- added dunst.service\n\n## 0.2.0 -- 2012-06-26\n- introduction of dunstrc\n- removed static configuration via config.h\n- don't timeout when user is idle\n- xft-support\n- history (a.k.a. redisplay old notifications)\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 4.72265625,
          "content": "# Important notes on the code\n\n**You can generate an internal overview with doxygen. For this, use `make doc-doxygen` and you'll find an internal overview of all functions and symbols in `docs/internal/html`. You will also need `graphviz` for this.**\n\n\nFor people wanting to develop new features or fix bugs for dunst, here are the\nsteps you should take.\n\n# Running dunst\n\nFor building dunst, you should take a look at the README. After dunst is built,\nyou can run it with:\n\n        ./dunst\n\nThis might not work, however, since dunst will abort when another instance of\ndunst or another notification daemon is running. You will see a message like:\n\n        CRITICAL: [dbus_cb_name_lost:1044] Cannot acquire 'org.freedesktop.Notifications': Name is acquired by 'dunst' with PID '20937'.\n\nSo it's best to kill any running instance of dunst before trying to run the\nversion you just built. You can do that by making a shell function as follows\nand put it in your bashrc/zshrc/config.fish:\n\n```sh\nrun_dunst() {\n        if make -j dunst; then\n                pkill dunst\n        else\n                return 1\n        fi\n        ./dunst $@\n}\n```\n\nIf you run this function is the root directory of the repository, it will build\ndunst, kill any running instances and run your freshly built version of dunst.\n\n# Testing dunst\n\nTo test dunst, it's good to know the following commands. This way you can test\ndunst on your local system and you don't have to wait for CI to finish.\n\n## Run test suite\n\nThis will build dunst if there were any changes and run the test suite. You will\nneed `awk` for this to work (to color the output of the tests).\n\n        make test\n\n## Run memory leak tests\n\nThis will build dunst if there were any changes and run the test suite with\nvalgrind to make sure there aren't any memory leaks. You will have to build your\ntests so that they free all allocated memory after you are done, otherwise this\ntest will fail. You will need to have `valgrind` installed for this.\n\n        make test-valgrind\n\n\n## Build the doxygen documentation\n\nThe internal documentation can be built with (`doxygen` and `graphviz` required):\n\n        make doc-doxygen\n\nTo open them in your browser you can run something like:\n\n        firefox docs/internal/html/index.html\n\n\n# Running the tests with docker\n\nDunst has a few docker images for running tests on different distributions. The\ndocumentation for this can be found at https://github.com/dunst-project/docker-images\n\n# Comments\n\n- Comment system is held similar to JavaDoc\n    - Use `@param` to describe all input parameters\n    - Use `@return` to describe the output value\n    - Use `@retval` to describe special return values (like `NULL`)\n    - Documentation comments should start with a double star (`/**`)\n    - Append `()` to function names and prepend variables with `#` to properly reference them in the docs\n- Add comments to all functions and methods\n- Markdown inside the comments is allowed and also desired\n- Add the comments to the prototype. Doxygen will merge the protoype and implementation documentation anyways.\n  Except for **static** methods, add the documentation header to the implementation and *not to the prototype*.\n- Member documentation should happen with `/**<` and should span to the right side of the member\n- Test files that have the same name as a file in src/\\* can include the\n  associated .c file. This is because they are being compiled INSTEAD of the src\n  file.\n\n\n## Log messages\n\n### Messages\n\n- Keep your message in common format: `<problem>: <problematic value/description>`\n- If you have to write text, single quote values in your sentence.\n\n### Levels\n\nFor logging, there are printf-like macros `LOG_(E|C|W|M|I|D)`.\n\n- `LOG_E` (ERROR):\n    - All messages, which lead to immediate abort and are caused by a programming error. The program needs patching and the error is not user recoverable.\n    - e.g.: Switching over an enum, `LOG_E` would go into the default case.\n- `LOG_C` (CRITICAL):\n    - The program cannot continue to work. It is used in the wrong manner or some outer conditions are not met.\n    - e.g.: `-config` parameter value is unreadable file\n- `DIE` (CRITICAL):\n    - A shorthand for `LOG_C` and terminating the program after. This does not dump the core (unlike `LOG_E`).\n- `LOG_W` (WARNING):\n    - Something is not in shape, but it's recoverable.\n    - e.g.: A value is not parsable in the config file, which will default.\n- `LOG_M` (MESSAGE):\n    - Important info, which informs about the state.\n    - e.g.: An empty notification does get removed immediately.\n- `LOG_I` (INFO):\n    - Mostly unneccessary info, but important to debug (as the user) some use cases.\n    - e.g.: print the notification contents after arriving\n- `LOG_D` (DEBUG):\n    - Only important during development or tracing some bugs (as the developer).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.513671875,
          "content": "Copyright © 2013, Sascha Kruse and contributors\nAll rights reserved.\n\nAll files (unless otherwise noted) are licensed under the BSD license:\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the name of Sascha Kruse nor the\n      names of contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY Sascha Kruse ''AS IS'' AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL Sascha Kruse BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.3193359375,
          "content": "# dunst - Notification-daemon\n# See LICENSE file for copyright and license details.\n\ninclude config.mk\n\nVERSION := \"1.12.1-non-git\"\nifneq ($(wildcard ./.git/),)\nVERSION := $(shell ${GIT} describe --tags 2>/dev/null || echo ${VERSION})\nendif\n\nSYSTEMD ?= $(shell $(PKG_CONFIG) --silence-errors ${SYSTEMDAEMON} || echo 0)\n\nifneq (0,${WAYLAND})\nDATA_DIR_WAYLAND_PROTOCOLS ?= $(shell $(PKG_CONFIG) wayland-protocols --variable=pkgdatadir)\nDATA_DIR_WAYLAND_PROTOCOLS := ${DATA_DIR_WAYLAND_PROTOCOLS}\nifeq (,${DATA_DIR_WAYLAND_PROTOCOLS})\n$(warning \"Failed to query $(PKG_CONFIG) for package 'wayland-protocols'!\")\nendif\nendif\n\nLIBS := $(shell $(PKG_CONFIG) --libs   ${pkg_config_packs})\nINCS := $(shell $(PKG_CONFIG) --cflags ${pkg_config_packs})\n\nifneq (clean, $(MAKECMDGOALS))\nifeq ($(and $(INCS),$(LIBS)),)\n$(error \"$(PKG_CONFIG) failed!\")\nendif\nendif\n\nSYSCONF_FORCE_NEW ?= $(shell [ -f ${DESTDIR}${SYSCONFFILE} ] || echo 1)\n\nifneq (0,${DUNSTIFY})\nDUNSTIFY_CFLAGS  := ${DEFAULT_CFLAGS} ${CFLAGS} ${CPPFLAGS} $(shell $(PKG_CONFIG) --cflags libnotify)\nDUNSTIFY_LDFLAGS := ${DEFAULT_LDFLAGS} ${LDFLAGS} $(shell $(PKG_CONFIG) --libs libnotify)\nendif\n\nCPPFLAGS := ${DEFAULT_CPPFLAGS} ${CPPFLAGS}\nCFLAGS   := ${DEFAULT_CFLAGS} ${CFLAGS} ${INCS} -MMD -MP\nLDFLAGS  := ${DEFAULT_LDFLAGS} ${LDFLAGS} ${LIBS}\n\nSRC := $(sort $(shell ${FIND} src/ ! \\( -path src/wayland -prune -o -path src/x11 -prune \\) -name '*.c'))\n\nifneq (0,${WAYLAND})\n# with Wayland support\nCPPFLAGS += -DHAVE_WL_CURSOR_SHAPE -DHAVE_WL_EXT_IDLE_NOTIFY\nSRC += $(sort $(shell ${FIND} src/wayland -name '*.c'))\nendif\n\nifneq (0,${X11})\nSRC += $(sort $(shell ${FIND} src/x11 -name '*.c'))\nendif\n\nifeq (0,${X11})\nifeq (0,${WAYLAND})\n$(error You have to compile at least one output (X11, Wayland))\nendif\nendif\n\nOBJ := ${SRC:.c=.o}\nTEST_SRC := $(sort $(shell ${FIND} test/ -name '*.c'))\nTEST_OBJ := $(TEST_SRC:.c=.o)\nDEPS := ${SRC:.c=.d} ${TEST_SRC:.c=.d}\n\n\n.PHONY: all debug\nall: doc dunst service\n\ndebug: CPPFLAGS += ${CPPFLAGS_DEBUG}\ndebug: CFLAGS   += ${CFLAGS_DEBUG}\ndebug: LDFLAGS  += ${LDFLAGS_DEBUG}\ndebug: all\n\n-include $(DEPS)\n\n${OBJ} ${TEST_OBJ}: Makefile config.mk\n\nsrc/dunst.o: src/dunst.c\n\t${CC} -o $@ -c $< ${CPPFLAGS} ${CFLAGS} \\\n\t\t-D_CCDATE=\"$(shell date '+%Y-%m-%d')\" -D_CFLAGS=\"$(filter-out $(filter -I%,${INCS}),${CFLAGS})\" -D_LDFLAGS=\"${LDFLAGS}\"\n\n%.o: %.c\n\t${CC} -o $@ -c $< ${CPPFLAGS} ${CFLAGS}\n\ndunst: ${OBJ} main.o\n\t${CC} -o ${@} ${OBJ} main.o ${CFLAGS} ${LDFLAGS}\n\nifneq (0,${DUNSTIFY})\nall: dunstify\ndunstify: dunstify.o\n\t${CC} -o ${@} dunstify.o ${DUNSTIFY_CFLAGS} ${DUNSTIFY_LDFLAGS}\nendif\n\n.PHONY: test test-valgrind test-coverage functional-tests\ntest: test/test clean-coverage-run\n\t# Make sure an error code is returned when the test fails\n\t/usr/bin/env bash -c 'set -euo pipefail;\\\n\tTESTDIR=./test ./test/test -v | ./test/greenest.awk '\n\ntest-valgrind: test/test\n\tTESTDIR=./test ${VALGRIND} \\\n\t\t--suppressions=.valgrind.suppressions \\\n\t\t--leak-check=full \\\n\t\t--show-leak-kinds=definite \\\n\t\t--errors-for-leak-kinds=definite \\\n\t\t--num-callers=40 \\\n\t\t--error-exitcode=123 \\\n\t\t./test/test -v\n\ntest-coverage: CFLAGS += -fprofile-arcs -ftest-coverage -O0\ntest-coverage: test\n\ntest-coverage-report: test-coverage\n\tmkdir -p docs/internal/coverage\n\t${GCOVR} \\\n\t\t-r . \\\n\t\t--exclude=test \\\n\t\t--html \\\n\t\t--html-details \\\n\t\t-o docs/internal/coverage/index.html\n\ntest/%.o: test/%.c src/%.c\n\t${CC} -o $@ -c $< ${CFLAGS} ${CPPFLAGS}\n\ntest/test: ${OBJ} ${TEST_OBJ}\n\t${CC} -o ${@} ${TEST_OBJ} $(filter-out ${TEST_OBJ:test/%=src/%},${OBJ}) ${CFLAGS} ${LDFLAGS}\n\nfunctional-tests: dunst dunstify\n\tPREFIX=. ./test/functional-tests/test.sh\n\n.PHONY: doc doc-doxygen\ndoc: docs/dunst.1 docs/dunst.5 docs/dunstctl.1 docs/dunstify.1\n\n# Can't dedup this as we need to explicitly provide the name and title text to\n# pod2man :(\ndocs/dunst.1: docs/dunst.1.pod\n\t${SED} \"s|##SYSCONFDIR##|${SYSCONFDIR}|\" $< | ${POD2MAN} --name=dunst -c \"Dunst Reference\" --section=1 --release=${VERSION} > $@\ndocs/dunst.5: docs/dunst.5.pod\n\t${POD2MAN} --name=dunst -c \"Dunst Reference\" --section=5 --release=${VERSION} $< > $@\ndocs/dunstctl.1: docs/dunstctl.pod\n\t${POD2MAN} --name=dunstctl -c \"dunstctl reference\" --section=1 --release=${VERSION} $< > $@\ndocs/dunstify.1: docs/dunstify.pod\n\t${POD2MAN} --name=dunstify -c \"dunstify reference\" --section=1 --release=${VERSION} $< > $@\n\ndoc-doxygen:\n\t${DOXYGEN} docs/internal/Doxyfile\n\n.PHONY: service service-dbus service-systemd wayland-protocols\nservice: service-dbus\nservice-dbus:\n\t@${SED} \"s|##PREFIX##|$(PREFIX)|\" org.knopwob.dunst.service.in > org.knopwob.dunst.service\nifneq (0,${SYSTEMD})\nservice: service-systemd\nservice-systemd:\n\t@${SED} \"s|##PREFIX##|$(PREFIX)|\" dunst.systemd.service.in > dunst.systemd.service\nendif\n\nifneq (0,${WAYLAND})\nwayland-protocols: src/wayland/protocols/wlr-layer-shell-unstable-v1.xml src/wayland/protocols/wlr-foreign-toplevel-management-unstable-v1.xml\n\t# TODO: write this shorter\n\tmkdir -p src/wayland/protocols\n\twayland-scanner private-code ${DATA_DIR_WAYLAND_PROTOCOLS}/stable/xdg-shell/xdg-shell.xml src/wayland/protocols/xdg-shell.h\n\twayland-scanner client-header ${DATA_DIR_WAYLAND_PROTOCOLS}/stable/xdg-shell/xdg-shell.xml src/wayland/protocols/xdg-shell-client-header.h\n\twayland-scanner client-header src/wayland/protocols/wlr-layer-shell-unstable-v1.xml src/wayland/protocols/wlr-layer-shell-unstable-v1-client-header.h\n\twayland-scanner private-code src/wayland/protocols/wlr-layer-shell-unstable-v1.xml src/wayland/protocols/wlr-layer-shell-unstable-v1.h\n\twayland-scanner client-header src/wayland/protocols/idle.xml src/wayland/protocols/idle-client-header.h\n\twayland-scanner private-code src/wayland/protocols/idle.xml src/wayland/protocols/idle.h\n\twayland-scanner client-header src/wayland/protocols/wlr-foreign-toplevel-management-unstable-v1.xml src/wayland/protocols/wlr-foreign-toplevel-management-unstable-v1-client-header.h\n\twayland-scanner private-code src/wayland/protocols/wlr-foreign-toplevel-management-unstable-v1.xml src/wayland/protocols/wlr-foreign-toplevel-management-unstable-v1.h\n\t# wayland-protocols >= 1.27\nifneq (,$(wildcard ${DATA_DIR_WAYLAND_PROTOCOLS}/staging/ext-idle-notify/ext-idle-notify-v1.xml))\n\twayland-scanner client-header ${DATA_DIR_WAYLAND_PROTOCOLS}/staging/ext-idle-notify/ext-idle-notify-v1.xml src/wayland/protocols/ext-idle-notify-v1-client-header.h\n\twayland-scanner private-code ${DATA_DIR_WAYLAND_PROTOCOLS}/staging/ext-idle-notify/ext-idle-notify-v1.xml src/wayland/protocols/ext-idle-notify-v1.h\nendif\n\t# wayland-protocols >= 1.32\nifneq (,$(wildcard ${DATA_DIR_WAYLAND_PROTOCOLS}/staging/cursor-shape/cursor-shape-v1.xml))\n\twayland-scanner client-header ${DATA_DIR_WAYLAND_PROTOCOLS}/staging/cursor-shape/cursor-shape-v1.xml src/wayland/protocols/cursor-shape-v1-client-header.h\n\twayland-scanner private-code ${DATA_DIR_WAYLAND_PROTOCOLS}/staging/cursor-shape/cursor-shape-v1.xml src/wayland/protocols/cursor-shape-v1.h\n\twayland-scanner client-header ${DATA_DIR_WAYLAND_PROTOCOLS}/unstable/tablet/tablet-unstable-v2.xml src/wayland/protocols/tablet-unstable-v2-client-header.h\n\twayland-scanner private-code ${DATA_DIR_WAYLAND_PROTOCOLS}/unstable/tablet/tablet-unstable-v2.xml src/wayland/protocols/tablet-unstable-v2.h\nendif\nendif\n\n.PHONY: clean clean-dunst clean-dunstify clean-doc clean-tests clean-coverage clean-coverage-run clean-wayland-protocols\nclean: clean-dunst clean-dunstify clean-doc clean-tests clean-coverage clean-coverage-run\n\nclean-dunst:\n\trm -f dunst ${OBJ} main.o main.d ${DEPS}\n\trm -f org.knopwob.dunst.service\n\trm -f dunst.systemd.service\n\nclean-dunstify:\n\trm -f dunstify.o\n\trm -f dunstify.d\n\trm -f dunstify\n\nclean-doc:\n\trm -f docs/dunst.1\n\trm -f docs/dunst.5\n\trm -f docs/dunstctl.1\n\trm -f docs/dunstify.1\n\trm -fr docs/internal/html\n\trm -fr docs/internal/coverage\n\nclean-tests:\n\trm -f test/test test/*.o test/*.d\n\nclean-coverage: clean-coverage-run\n\t${FIND} . -type f -name '*.gcno' -delete\n\t${FIND} . -type f -name '*.gcna' -delete\n# Cleans the coverage data before every run to not double count any lines\nclean-coverage-run:\n\t${FIND} . -type f -name '*.gcov' -delete\n\t${FIND} . -type f -name '*.gcda' -delete\n\nclean-wayland-protocols:\n\trm -f src/wayland/protocols/*.h\n\n.PHONY: install install-dunst install-dunstctl install-dunstrc \\\n        install-service install-service-dbus install-service-systemd \\\n        uninstall uninstall-dunstctl uninstall-dunstrc \\\n        uninstall-service uninstall-service-dbus uninstall-service-systemd \\\n        uninstall-keepconf uninstall-purge\ninstall: install-dunst install-dunstctl install-dunstrc install-service\n\ninstall-dunst: dunst doc\n\tinstall -Dm755 dunst ${DESTDIR}${BINDIR}/dunst\n\tinstall -Dm644 docs/dunst.1 ${DESTDIR}${MANPREFIX}/man1/dunst.1\n\tinstall -Dm644 docs/dunst.5 ${DESTDIR}${MANPREFIX}/man5/dunst.5\n\tinstall -Dm644 docs/dunstctl.1 ${DESTDIR}${MANPREFIX}/man1/dunstctl.1\n\tinstall -Dm644 docs/dunstify.1 ${DESTDIR}${MANPREFIX}/man1/dunstify.1\n\ninstall-dunstctl: dunstctl\n\tinstall -Dm755 dunstctl ${DESTDIR}${BINDIR}/dunstctl\n\nifeq (1,${SYSCONF_FORCE_NEW})\ninstall-dunstrc:\n\tinstall -Dm644 dunstrc ${DESTDIR}${SYSCONFFILE}\nendif\n\ninstall-service: install-service-dbus\ninstall-service-dbus: service-dbus\n\tinstall -Dm644 org.knopwob.dunst.service ${DESTDIR}${SERVICEDIR_DBUS}/org.knopwob.dunst.service\nifneq (0,${SYSTEMD})\ninstall-service: install-service-systemd\ninstall-service-systemd: service-systemd\n\tinstall -Dm644 dunst.systemd.service ${DESTDIR}${SERVICEDIR_SYSTEMD}/dunst.service\nendif\n\nifneq (0,${DUNSTIFY})\ninstall: install-dunstify\ninstall-dunstify: dunstify\n\tinstall -Dm755 dunstify ${DESTDIR}${BINDIR}/dunstify\nendif\n\nifneq (0,${COMPLETIONS})\ninstall: install-completions\ninstall-completions:\n\tinstall -Dm644 completions/dunst.bashcomp ${DESTDIR}${BASHCOMPLETIONDIR}/dunst\n\tinstall -Dm644 completions/dunstctl.bashcomp ${DESTDIR}${BASHCOMPLETIONDIR}/dunstctl\n\tinstall -Dm644 completions/_dunst.zshcomp ${DESTDIR}${ZSHCOMPLETIONDIR}/_dunst\n\tinstall -Dm644 completions/_dunstctl.zshcomp ${DESTDIR}${ZSHCOMPLETIONDIR}/_dunstctl\n\tinstall -Dm644 completions/dunst.fishcomp ${DESTDIR}${FISHCOMPLETIONDIR}/dunst.fish\n\tinstall -Dm644 completions/dunstctl.fishcomp ${DESTDIR}${FISHCOMPLETIONDIR}/dunstctl.fish\n\nifneq (0,${DUNSTIFY})\ninstall: install-completions-dunstify\ninstall-completions-dunstify:\n\tinstall -Dm644 completions/dunstify.fishcomp ${DESTDIR}${FISHCOMPLETIONDIR}/dunstify.fish\nendif\nendif\n\nuninstall: uninstall-keepconf\nuninstall-purge: uninstall-keepconf uninstall-dunstrc\nuninstall-keepconf: uninstall-service uninstall-dunstctl uninstall-completions\n\trm -f ${DESTDIR}${BINDIR}/dunst\n\trm -f ${DESTDIR}${BINDIR}/dunstify\n\trm -f ${DESTDIR}${MANPREFIX}/man1/dunst.1\n\trm -f ${DESTDIR}${MANPREFIX}/man5/dunst.5\n\trm -f ${DESTDIR}${MANPREFIX}/man1/dunstctl.1\n\trm -f ${DESTDIR}${MANPREFIX}/man1/dunstify.1\n\nuninstall-dunstrc:\n\trm -f ${DESTDIR}${SYSCONFFILE}\n\trmdir --ignore-fail-on-non-empty ${DESTDIR}${SYSCONFDIR}/dunst\n\nuninstall-dunstctl:\n\trm -f ${DESTDIR}${BINDIR}/dunstctl\n\nuninstall-service: uninstall-service-dbus\nuninstall-service-dbus:\n\trm -f ${DESTDIR}${SERVICEDIR_DBUS}/org.knopwob.dunst.service\n\nifneq (0,${SYSTEMD})\nuninstall-service: uninstall-service-systemd\nuninstall-service-systemd:\n\trm -f ${DESTDIR}${SERVICEDIR_SYSTEMD}/dunst.service\nendif\n\nuninstall-completions:\n\trm -f ${DESTDIR}${BASHCOMPLETIONDIR}/dunst\n\trm -f ${DESTDIR}${BASHCOMPLETIONDIR}/dunstctl\n\trm -f ${DESTDIR}${ZSHCOMPLETIONDIR}/_dunst\n\trm -f ${DESTDIR}${ZSHCOMPLETIONDIR}/_dunstctl\n\trm -f ${DESTDIR}${FISHCOMPLETIONDIR}/dunst.fish\n\trm -f ${DESTDIR}${FISHCOMPLETIONDIR}/dunstctl.fish\n\trm -f ${DESTDIR}${FISHCOMPLETIONDIR}/dunstify.fish\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.85546875,
          "content": "[![main](https://github.com/dunst-project/dunst/workflows/main/badge.svg)](https://github.com/dunst-project/dunst/actions?query=workflow%3Amain) [![codecov](https://codecov.io/gh/dunst-project/dunst/branch/master/graph/badge.svg)](https://codecov.io/gh/dunst-project/dunst)\n\n# Dunst\n\n<i>A highly configurable and lightweight notification daemon.</i>\n\n![music](contrib/screenshots/music.png)\n\n## Table of Contents\n\n- [Features](#features)\n- [Building](#building)\n- [Contributing](#contributing)\n- [Documentation](#documentation)\n- [Troubleshooting](#troubleshooting)\n- [Copyright](#copyright)\n\n# Features\n\n## ⚙️ Highly customizable\n\nCustomize fonts, icons, timeouts, and more. Are you unhappy with the default\nshortcuts and colors? No worries, you can change these all with a simple\nconfiguration file tweak.\n\n_click the images to see the dunstrc_\n\n<a href=\"https://gist.github.com/NNBnh/5f6e601a6a82a6ed43b1959698758141\">\n<img alt=\"screenshot1\" src=\"contrib/screenshots/screenshot1_cut.png\">\n</a>\n\n<a href=\"https://gist.github.com/fwSmit/9127d988b07bcec9d869f2c927d0f616\">\n<img alt=\"screenshot2\" src=\"contrib/screenshots/screenshot2_cut.png\">\n</a>\n\n## 📜 Scripting\n\n<a href=\"https://gitlab.manjaro.org/profiles-and-settings/manjaro-theme-settings/-/blob/master/skel/.config/dunst/dunstrc\">\n<img alt=\"screenshot_urgency\" src=\"contrib/screenshots/screenshot_urgency.png\">\n</a>\n\nRun custom scripts on notifications matching a specified pattern. Have espeak\nread out your notifications, or play a song when your significant other signs on\nin pidgin!\n\n## 📋 Rules\n\nChange the look or behavior of notifications matching a specified pattern. You\ncould use this to change the color of message notifications from your favorite\njabber buddies, or to prevent important work email notifications from\ndisappearing until you manually dismiss them.\n\n## ⏸️ Pause\n\nIf you want to take a break and not receive any notifications for a while, just\npause dunst. All notifications will be saved for you to catch up\nlater.\n\nAdditionally, you can set a numeric pause level, which allows you to pause dunst\nselectively for some notifications, where more urgent notifications get through,\nbut less urgent stay paused.\n\n## 🕘 History\n\nCatch an unread notification disappearing from the corner of your eye? Just tap\na keyboard shortcut to replay the last notification, or continue tapping to see\nyour notification history.\n\n# Documentation\n\nMost documentation can be found in dunst's man pages. In\n[**dunst(1)**](docs/dunst.1.pod) contains some general instructions on how\nto run dunst and in\n[**dunst(5)**](docs/dunst.5.pod) all of dunst's configuration options are\nexplained.\n\nOn the dunst [wiki][wiki] you can find guides and installation instructions and\non the dunst [website][website] there is a [FAQ][FAQ] with common issues.\n\n## Installation\n\nDunst is available in many package repositories. If it's not available in your\ndistro's repositories, don't worry, it's not hard to build it yourself.\n\n### Dependencies\n\n- dbus (runtime)\n- libxinerama\n- libxrandr\n- libxss\n- glib\n- pango/cairo\n- gdk-pixbuf\n- libnotify (can build without, for dunstify, see [make parameters](#make-parameters))\n- wayland-client (can build without, see [make parameters](#make-parameters))\n- wayland-protocols (optional, for recompiling protocols)\n- xdg-utils (optional, xdg-open is the default 'browser' for opening URLs)\n- jq (optional, for installed completions and tools in contrib)\n- busctl (optional, for dunstctl rules and dunstctl history)\n\nThe names will be different depending on your [distribution](https://github.com/dunst-project/dunst/wiki/Dependencies).\n\n### Building\n\n```\ngit clone https://github.com/dunst-project/dunst.git\ncd dunst\nmake\nsudo make install\n```\n\n### Make parameters\n\n- `DESTDIR=<PATH>`: Set the destination directory of the installation. (Default: `/`)\n- `PREFIX=<PATH>`: Set the prefix of the installation. (Default: `/usr/local`)\n- `BINDIR=<PATH>`: Set the `dunst` executable's path (Default: `${PREFIX}/bin`)\n- `DATADIR=<PATH>`: Set the path for shared files. (Default: `${PREFIX}/share`)\n- `BASHCOMPLETIONDIR=<PATH>`: Set the path for installation of bash completion files. (Default: `${DATADIR}/bash-completion/completions`)\n- `FISHCOMPLETIONDIR=<PATH>`: Set the path for installation of fish completion files. (Default: `${DATADIR}/fish/vendor_completions.d`)\n- `ZSHCOMPLETIONDIR=<PATH>`: Set the path for installation of zsh completion files. (Default: `${DATADIR}/zsh/site-functions`)\n- `SYSCONFDIR=<PATH>`: Set the base directory for system config files. (Default: `${PREFIX}/etc/xdg`)\n- `SYSCONFFILE=<PATH>`: Set the absolute path to which the default dunstrc shall be installed. (Default: `${SYSCONFDIR}/dunst/dunstrc`)\n- `SYSCONF_FORCE_NEW=(0|1)`: Overwrite existing `${SYSCONFFILE}`. (Default: 0 (don't overwrite))\n- `MANDIR=<PATH>`: Set the prefix of the manpage. (Default: `${DATADIR}/man`)\n- `SYSTEMD=(0|1)`: Disable/Enable the systemd unit. (Default: autodetect systemd)\n- `WAYLAND=(0|1)`: Disable/Enable wayland support. (Default: 1 (enabled))\n- `X11=(0|1)`: Disable/Enable X11 support. (Default: 1 (enabled))\n- `DUNSTIFY=(0|1)`: Disable/Enable the libnotify dunstctl utility. (Default: 1 (enabled))\n- `COMPLETIONS=(0|1)`: Disable/Enable installation of shell completions. (Default: 1 (enabled))\n- `SERVICEDIR_SYSTEMD=<PATH>`: The path to put the systemd user service file. Unused, if `SYSTEMD=0`. (Default: `${PREFIX}/lib/systemd/user`)\n- `SERVICEDIR_DBUS=<PATH>`: The path to put the dbus service file. (Default: `${DATADIR}/dbus-1/services`)\n- `EXTRA_CFLAGS=<FLAGS>`: Additional flags for the compiler.\n\n**Make sure to run all make calls with the same parameter set. So when building with `make PREFIX=/usr`, you have to install it with `make PREFIX=/usr install`, too.**\n\n**Either X11 or WAYLAND should be set, otherwise dunst will not compile.**\n\n**Notes on default of XDG_CONFIG_DIRS**\n\nDunst uses a different default (`${SYSCONFDIR}`) for XDG_CONFIG_DIRS at runtime.\nThis is a slight digression from the recommended value in the XDG Base Directory\nSpecification (/etc/xdg), because the default config file gets installed to\n`${SYSCONFDIR}/dunst/dunstrc` to avoid conflicts with /etc/xdg/dunst/dunstrc which\nmight have been installed from a distribution repository. If you do want dunst\nto use the spec's recommended default, set XDG_CONFIG_DIR=/etc/xdg at runtime or\nSYSCONFDIR=/etc/xdg at compile time.\n\n**Notes on SYSCONFFILE**\n\nChanging SYSCONFFILE does not affect the search for config files, meaning it\nwill not take effect if you choose to install dunstrc to a location that cannot\nbe found by the algorithm outlined in the FILES section of dunst(1).\n\n`make install` will not overwrite an already existing ${SYSCONFFILE} (i.e.\n/usr/local/etc/xdg/dunst/dunstrc), see SYSCONF_FORCE_NEW above. This is so you\ndo not lose local changes to said file on upgrade. However, it is recommended\nto leave that file untouched and use a more important config location to\noverride settings, see the FILES section in dunst(1) for more details.\n\n`make uninstall` will not remove ${SYSCONFFILE}, use `make uninstall-purge` if\nyou do want it removed as well.\n\n## Contributing\n\nContributions are very welcome. Before contributing, make sure to look at the\ncontribution documentation in [HACKING.md](./HACKING.md).\n\nMake sure you test your code and where possible add automated tests. These\ntests are also checked on memory leaks (with `make test-valgrind`).\n\n## Troubleshooting\n\n### Cannot set settings via command line\n\nThis functionality was removed during the refactor. It might be re-added later\nin some form. See [#940](https://github.com/dunst-project/dunst/issues/940) for\ndetails.\n\n## Bug reports\n\nPlease use the [issue tracker][issue-tracker] provided by GitHub to send us bug reports or feature requests.\n\n## Screenshots\n\n<a href=\"https://gist.github.com/MCotocel/2b34486ae59ccda4319fcb93454d212c\">\n<img alt=\"screenshot3\" src=\"contrib/screenshots/screenshot3_cut.png\">\n</a>\n\n<a href=\"https://gitlab.manjaro.org/profiles-and-settings/manjaro-theme-settings/-/blob/master/skel/.config/dunst/dunstrc\">\n<img alt=\"progress\" src=\"https://user-images.githubusercontent.com/23078054/102542111-98b01e00-40b1-11eb-967e-bc952430bd06.png\">\n</a>\n\n## Maintainers\n\n- [Friso Smit](https://github.com/fwsmit) <fw.smit01@gmail.com>\n- [Bjoern Hiller](https://github.com/zappolowski) <bjoern.hiller@gmail.com>\n- [Federico Angelilli](https://github.com/bynect) <fedeangemail@gmail.com>\n\nPlease only refer to active maintainers for issues and bugs.\n\n## Ex-Maintainers\n\n- [Nikos Tsipinakis](https://github.com/tsipinakis) <nikos@tsipinakis.com>\n- [Benedikt Heine](https://github.com/bebehei) <bebe@bebehei.de>\n\n## Author\n\nWritten by Sascha Kruse <dunst@knopwob.de>\n\n## Copyright\n\nCopyright 2013 Sascha Kruse and contributors (see [`LICENSE`](./LICENSE) for licensing information)\n\n[issue-tracker]: https://github.com/dunst-project/dunst/issues\n[wiki]: https://github.com/dunst-project/dunst/wiki\n[website]: https://dunst-project.org\n[FAQ]: https://dunst-project.org/faq\n"
        },
        {
          "name": "RELEASE_NOTES",
          "type": "blob",
          "size": 19.306640625,
          "content": "===================================================================================\nRelease Notes For v1.12.0\n===================================================================================\n\nThere have been many important contributions in the last few months.\nSome notable changes are: adding hot-reload for the configuration, exporting\nrules via dunstctl, adding color gradients, removing default hard-coded icons.\nFor detailed information consult the changelog.\n\nImportant notice for all users:\n\nThe behaviour of the setting `height` has been changed in a breaking way.\nBefore you could specify a single value that would be used as the max height\nof a notification. In this release the dynamic height was implemented to make\nthis settings behave more similarly to `width`.\nNow the values accepted are either a single number (for a *fixed height*) or\na tuple of numbers (for a min/max range).\n\nThe way of specifying a maximum height before was:\n    height = 300\n\nThe equivalent way now is:\n    height = (0, 300)\n\nFurthermore the preferred syntax for the `offset` settings has been changed\nfrom NxN to (N,N). The old syntax is supported nevertheless.\n\nIf you are a maintainer it would be helpful to include the message above when\nan user updates from an older version of dunst.\n\nTake a look at the changelog for all the bug fixes and improvements.\n\n===================================================================================\nRelease Notes For v1.11.0\n===================================================================================\n\nThis release hopefully marks the start of a new period of active development and\ncontributions and a shift away from the previous lower maintenance mode.\n\nFor users:\n\nThis is the perfect time to engage with the project and other dunst users.\nSome of the features and changes to include in the v2 release are starting to\nbe proposed or implemented. Everyone's opinion is important, so feel free\nto participate in the issues proposing new features (or redesigns of the old ones).\n\nThis version mainly contains bug fixes and QoL improvements, and can be considered\na preparatory release for the various things that will come in the future\n(overhaul of the rule syntax, multiple windows support, aesthetic and customization\noptions, refactor of the drawing system, etc).\n\nFor maintainers:\n\nX11 support is now optional and can be disabled in build by setting the `X11` make\nflag to 0. This means that you can offer Wayland-only builds.\n\nShell completions are now considered official and can be installed/uninstalled from\nthe Makefile. By default they are installed and can be disabled by setting the\n`COMPLETIONS` flag to 0.\n\nTake a look at the changelog for all the bug fixes and improvements.\n\n===================================================================================\nRelease Notes For v1.10.0\n===================================================================================\n\nIt's been a while since the last release. That does not mean that the\ndevelopment has been stagnant. There are some long requested features have been\nimplemented, like a do not disturb mode in the form of multiple pause levels.\nYou can specify the priority of notification and selectively pause them. The\nprogress bar rendering for low progress values has been fixed, with preparation\nwork being done for more progress bar customization.\n\nSince dunst gained Wayland support, Wayland received a lot of development.\nDunst needed to do some catchup for that. A new Wayland idle protocol is\nimplemented and support for Wayland touch screens and multi-seat has been\nadded. It's now also possible to specify displays by their port name, instead\nof number.\n\nTake a look at the changelog for all the bug fixes and improvements.\n\n===================================================================================\nRelease Notes For v1.9.2\n===================================================================================\n\nThis release fixes two issues with high cpu usage one of which was introduced\nwhen trying to fix another cpu usage issue. So if you have experienced dunst\nmaking your fans spin harder than usual that should be fixed with this release.\n\n===================================================================================\nRelease Notes For v1.9.1\n===================================================================================\n\nFor users:\n\nIf you like rounded corners, this release is for you. You can now add rounded\ncorners to your progress bar and notification icons. Dunstctl added more\noptions for changing the notification history, so I'm excited for what you can\nbuild with that. Dunst also is even more stable now with a crash being fixed\nand not using 100% of your cpu anymore in some situations.\n\nFor maintainers:\n\nLibnotify and dunst are now optional to build by setting the `DUNSTIFY` make\nflag to 0. (enabled by default)\n\nTake a look at the changelog for a more detailed change description.\n\n===================================================================================\nRelease Notes For v1.9.0\n===================================================================================\n\nThis release marks the point for a few big features to be useable. The\nrecursive icon lookup is marked stable and is used by default for new users. It\nis now also possible to add gaps between notifications, although it is not done\nwith separate windows, so clicks in between notification will not register to\nthe below window. You'll also need a compositor for the transparancy to take\neffect.\n\nTake a look at the changelog for a more detailed change description.\n\n===================================================================================\nRelease Notes For v1.8.0\n===================================================================================\n\nLots of exciting and useful features are being added to dunst, all while making\ndunst even more configurable and reliable.\n\nFor users:\n\nThis release re-adds the keyboard shortcuts for those who have been missing\nthem. Also, support for drop-in files has been implemented. Files placed in\ndunstrc.d/*.conf will be read after the main dunstrc. This may be useful for\ntheming (with pywal or otherwise). In the future we will add example drop-in\nfiles for different default themes and special configuration.\n\nFor maintainers:\n\nNot much has been changed for maintainers. Maybe you'll find the drop-in files\nuseful for distro-specific fixes. Note that only the files in the directory of\nthe used dunstrc will be read (see dunst(1) for documentation).\n\n\n===================================================================================\nRelease Notes For v1.7.0\n===================================================================================\n\nThis release was long overdue. There have been a lot of changes in the mean\ntime. For a full list of changes, see the changelog.\n\nFor users:\n\nThe wayland support of v1.6.0 was already pretty good, but this release added\nfullscreen detection and improved the stability.\n\nThis release added a few improvements to the wayland support. Dunst now\nautomatically falls back to X11 when the wayland compositor doesn't support the\nneccesary protocols.\n\nFor maintainers:\n\nPreviously the readme said dunst depended on GTK3, which hasn't been the case\nfor a while. Make sure that GTK3 is not included as a dependency.\n\nThe default program for opening URL's in notifications has been changed from\nfirefox to xdg-open.\n\nThe Makefile and dunstrc searching has been significantly changed to be more\ncompliant with the XDG spec. The default config directory, `SYSCONFDIR`, has\nbeen changed from \"/etc\" to \"${PREFIX}/etc/xdg/\". To change back to the old\nbehaviour, run make with: `make SYSCONFDIR=\"/etc\"` (make sure to pass the same\nvariables to make in subsequent calls). Take a look at the \"Make parameters\"\nsection of the readme and the FILES section of the man page for more details.\n\n===================================================================================\nRelease Notes For v1.6.0\n===================================================================================\n\nFor users:\n\nAt long last, dunst has native wayland support. On startup dunst will now\nautodetect the display environment it's run on and use the appropriate backend\n(X11 or wayland).\nAdditionally, support for progress bars has been added when the 'value' hint is\nused. Try it out with `notify-send -h int:value:70 'Progress bars!'`\n\nLast but most importantly, support for the\n`DUNST_COMMAND_{PAUSE,RESUME,TOGGLE}` has been removed as they could\npotentially be used to DoS dunst. `dunstctl` has been available as a direct\nreplacement for the use-case they served since last release. See\nhttps://github.com/dunst-project/dunst/pull/830 for details\n\nFor maintainers:\n\nDunst now depends on the wayland libraries and (optionally) on the\nwayland-protocols package. A global configuration file is now installed by\ndefault in `/etc/dunst/dunstrc`\n\n\n===================================================================================\nRelease Notes For v1.5.0\n===================================================================================\n\nFor users:\n\nThe most important update from the previous version is the addition of the\ndunstctl command and dunstify utility, a drop-in notify-send replacement (which\nexisted for a while, but wasn't installed by default).\nThe internal keyboard shortcut support in dunst is now considered deprecated\nand should be replaced by dunstctl calls. You can use the configuration of your\nWM or DE to bind these to shortcuts of your choice.\n\nAdditionally, another long requested feature implemented is RGBA/transparency\nsupport. Given an active compositor you can now add an optional transparency\ncomponent to all colors in #RRGGBBAA format.\n\nFor maintainers:\n\nAs mentioned above, two new binaries are now installed by default, dunstctl and dunstify.\nlibnotify has been added as a dependency as it's used internally by dunstify.\n\n===================================================================================\nRelease Notes For v1.4.0\n===================================================================================\n\nThere has been significant internal refactoring since the last release which\nmight have introduced some new bugs. Be sure to report anything you find.\nHowever, as usual, there has been a lot of bug-fixing and a lot of new features\nhave been added as well. Look at the full changelog for a breakdown.\nSome important points to note:\n\nFor users:\n\n* Behavioural changes\n\n  In the previous release we introduced support for clients to mark\n  notifications as 'transient'. Transient notifications used to 1) bypass\n  idle_threshold and 2) not be saved in history.\n  The latter behaviour has been disabled by default and can be re-created using\n  rules if necessary. Transient notifications will now only bypass\n  idle_threshold.\n\n  Additionally, to be compliant with the notification spec, the notification\n  summary no longer accepts markup.\n\nFor maintainers:\n\n* Dependency on libxdg-basedir has been removed\n\n===================================================================================\nRelease Notes For v1.3.0\n===================================================================================\n\nVersion 1.3 is supposed to be fully backwards compatible with 1.2.\n\nFor users:\n\n* Behavioural changes\n\n  Dunst respects the timeout with millisecond accuracy now. Notifications with\n  a one second timeout are not shown up to three seconds.\n  Additionally you can specify timeout values in milliseconds, seconds, minutes,\n  hours or days using the ms, s, h, or d suffix in the config value\n  respectively.\n\n  Transient notifications time out ignoring the `idle_threshold` setting and are not\n  saved in history. This can be overridden with a rule containing `set_transient = no`.\n  In the same vein there is the `match_transient` condition to match transient\n  notifications via rules.\n\n  A prefixed tilde (`~/`) in path settings (browser, dmenu, script) is interpreted as the\n  home folder of the user.\n\n* Configuration Options\n\n  `icon_folders` got deprecated and renamed to `icon_path`. `icon_folders` is still\n  supported, but will get removed in future.\n\n  The option `ellipsize` got introduced. It controls where to ellipsize the text of\n  an overlong notification if `word_wrap = no`.\n\nFor maintainers:\n\n* Dependencies\n\n  The GTK3+ dependency got removed. Instead of this gdk-pixbuf is required\n  explicitly. This had been a transient dependency before.\n\n  In the Makefile, libxrandr is now specified to require version 1.5 or newer.\n  The dependency on libxrandr >= 1.5 is not new, Dunst 1.2.0 required it too\n  but there was no active check for it.\n\n* Installation process\n\n  The internals of dunst's make installation process have slightly changed. The\n  install routine won't install the service files for DBus and systemd in a hardcoded\n  subdirectory of $PREFIX. It'll now query the `dbus-1` and `systemd` pkg-config\n  packages for those paths and will put it there.\n\n  To overwrite the pkg-config values, you can manually specify another path.\n  Use `SERVICEDIR_(DBUS|SYSTEMD)` vars as parameters to your make calls.\n\n  For all introduced variables, see [the README.md].\n\n* Portability\n\n  GNU-specific functions have been disabled to make dunst portable to nongnu libc's.\n\nFor a full list of changes see [CHANGELOG.md].\n\n===================================================================================\nRelease Notes For v1.2.0\n===================================================================================\n\nAfter about 3 years of inactivity, dunst is back under active development.\n\nVersion 1.2 is supposed to be fully backwards compatible with 1.1 but due to\nthe number of changes and the time since the last release there may be some\noverlooked breakages. If one is found it should be reported to the bug tracker.\n\nFor users:\n\n* Markup\n    The `allow_markup` setting has been deprecated in favour of `markup` which\n    is a multi-value setting that can be used to control much more accurately\n    how markup in notifications should be handled. Currently it only supports\n    `no`, `strip` and `full` as values but it is planned to be expanded soon.\n\n    To preserve backwards compatibility, `allow_markup` is still supported but\n    users are encouraged to update their configuration files since it will be\n    removed after a few major releases.\n\n* DPI handling\n    The DPI value used is now retrieved from the `Xft.dpi` X resource if\n    available. If not, the default value 96 will be used.\n\n    Additionally, as an experiment a per-monitor dpi setting, which tries to\n    calculate an acceptable dpi values for each monitor, has been added to the\n    experimental section of the configuration file.\n\n* RandR and Xinerama\n    Dunst switched from using the Xinerama extension to provide multi-monitor\n    support to using the more modern RandR extension. While this change won't\n    affect the majority of users, some legacy drivers do not support RandR. In\n    that case, the `force_xinerama` option was added as a way to fall back to\n    the old method.\n\n    The downside of forcing Xinerama to be used is that dunst won't be able to\n    detect when a monitor is added or removed meaning that follow mode might\n    break if the screen layout changes.\n\n* Frame settings\n    All the settings in the frame section of the configuration file have been\n    deprecated and have been moved into the global section. The `color` and `size`\n    settings became `frame_color` and `frame_size` respectively. As with\n    `allow_markup`, the old format still works but it'll be removed in one of the\n    next major releases.\n\n* Deprecation of urgency-specific command line flags\n    The urgency specific command line flags (`-li, -ni, -ci, -lf, -nf, -cf, -lb,\n    -nb, -cb, -lfr, -nfr, -cfr, -lto, -nto, -cto`) have been deprecated with no\n    plan for a replacement. If you rely on them please respond to issue #328 on\n    the bug tracker with your use case.\n\nFor maintainers:\n\n* The project homepage has been changed to https://dunst-project.org\n* The main repository has been changed to https://github.com/dunst-project/dunst\n\n* Dependency changes:\n - Dependency on libraries that were unused in the code but were mentioned as\n   dependencies has been dropped. Dunst no longer depends on: libfreetype,\n   libxft and libxext.\n - Added dependency on libxradnr and libgtk2.0.\n\nFor a full list of changes see CHANGELOG.md.\n\n===================================================================================\nRelease Notes For v1.0.0\n===================================================================================\n\nPACKAGE MAINTAINERS:\n    There are new dependencies introduced with this version:\n        *glib\n        *pango/cairo\n\n* The drawing backend was moved from Xlib to Cairo/Pango.\n    This change requires some user intervention since Pango\n    uses different font strings. For example \"Monospace-12\"\n    becomes \"Monospace 12\". Font sizes might also get interpreted\n    differently.\n\n* Markup\n    Markup within the notification can be interpreted by pango.\n    Examples are <i>italic</i> and <b>bold</b>. If the Markup\n    can't be parsed by pango, the tags are stripped from the\n    notification and the text is displayed as plain text. An error\n    message gets printed to stdout describing why the markup could\n    not be parsed.\n\n    To make use of markup the option allow_markup must be set in dunstrc.\n    If this option is not set, dunst falls back to the old behaviour\n    (stripping all tags from the text and display plain text).\n\n* Actions are now supported.\n    If a client adds an action to a notification this gets indicated\n    by an (A) infront of the notification. In this case the\n    context menu shortcut can be used to invoke this action.\n\n* Indicator for URLs.\n    If dunst detects an URL within the notification this gets indicated\n    by an (U) infront of the notification. As with actions the URL can\n    be opened with the context menu shortcut. (This requires the browser\n    option to be set in the dunstrc).\n\n* dunstify ( a drop-in replacement for notify-send)\n    Since notify-send lacks some features I need to for testing, I've\n    written dunstify. It supports the same option as notify-send + The\n    abillity to print the id of the notification to stdout and to replace\n    or close existing notifications.\n\n    example:\n    id=$(dunstify -p \"Replace\" \"this should get replaced after the sleep\")\n    sleep 5\n    dunstify -r $id \"replacement\"\n\n    see dunstify --help for additional info.\n\n    Since dunstify depends on non-public parts of libnotify it may break\n    on every other libnotify version than that version that I use.\n    Because of this it does not get build and installed by default.\n    It can be build with \"make dunstify\". An installation target does\n    not exist.\n\n    Please don't open bug reports when dunstify doesn't work with your\n    version of libnotify\n\n===================================================================================\nRelease Notes For v0.4.0\n===================================================================================\n\nSince dunst has lost its ability to show notifications independend of\ndbus/libnotify a long time ago I think it is time that the describtion reflects\nthat. Even though this breaks the acronym. So if you're a packager please update\nthe package description to read something like:\n\nshort:\n\"Dunst - a dmenu-ish notification-daemon\"\n\nlong:\n\"Dunst is a highly configurable and lightweight notification-daemon\"\n\nRelease Tarballs are now available at:\nhttp://www.knopwob.org/public/dunst-release/\n\nFor more information have a look at the CHANGELOG and the new options in dunstrc.\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.mk",
          "type": "blob",
          "size": 2.1455078125,
          "content": "# paths\nPREFIX ?= /usr/local\nBINDIR ?= ${PREFIX}/bin\nSYSCONFDIR ?= ${PREFIX}/etc/xdg\nSYSCONFFILE ?= ${SYSCONFDIR}/dunst/dunstrc\nDATADIR ?= ${PREFIX}/share\nBASHCOMPLETIONDIR ?= ${DATADIR}/bash-completion/completions\nFISHCOMPLETIONDIR ?= ${DATADIR}/fish/vendor_completions.d\nZSHCOMPLETIONDIR ?= ${DATADIR}/zsh/site-functions\n# around for backwards compatibility\nMANPREFIX ?= ${DATADIR}/man\nMANDIR ?= ${MANPREFIX}\nSERVICEDIR_DBUS ?= ${DATADIR}/dbus-1/services\nSERVICEDIR_SYSTEMD ?= ${PREFIX}/lib/systemd/user\nEXTRA_CFLAGS ?=\n\nDOXYGEN ?= doxygen\nFIND ?= find\nGCOVR ?= gcovr\nGIT ?= git\nPKG_CONFIG ?= pkg-config\nPOD2MAN ?= pod2man\nSED ?= sed\nSYSTEMDAEMON ?= systemd\nVALGRIND ?= valgrind\n\n# Disable systemd service file installation,\n# if you don't want to use systemd albeit installed\n#SYSTEMD ?= 0\n\n# Disable dependency on wayland. This will force dunst to use\n# xwayland on wayland compositors\n# You can also use \"make WAYLAND=0\" to build without wayland\n# WAYLAND ?= 0\n\n# Disable dependency on libnotify. this will remove the ability\n# to easily send notifications using dunstify or notify-send via D-Bus.\n# Do this if you have your own utility to send notifications.\n# Other applications will continue to work, as they use direct D-Bus.\n# DUNSTIFY ?=0\n\n# Disable installation of completions.\n# COMPLETIONS ?= 0\n\nifneq (0, ${WAYLAND})\nENABLE_WAYLAND= -DENABLE_WAYLAND\nendif\n\nifneq (0, ${X11})\nENABLE_X11= -DENABLE_X11\nendif\n\n# flags\nDEFAULT_CPPFLAGS = -Wno-gnu-zero-variadic-macro-arguments -D_DEFAULT_SOURCE -DVERSION=\\\"${VERSION}\\\" -DSYSCONFDIR=\\\"${SYSCONFDIR}\\\" ${ENABLE_WAYLAND} ${ENABLE_X11}\nDEFAULT_CFLAGS   = -g -std=gnu11 -pedantic -Wall -Wno-overlength-strings -Os ${EXTRA_CFLAGS}\nDEFAULT_LDFLAGS  = -lm -lrt\n\nCPPFLAGS_DEBUG := -DDEBUG_BUILD\nCFLAGS_DEBUG   := -O0\nLDFLAGS_DEBUG  :=\n\npkg_config_packs := gio-2.0 \\\n                    gdk-pixbuf-2.0 \\\n                    \"glib-2.0 >= 2.44\" \\\n                    pangocairo \\\n\nifneq (0,${WAYLAND})\npkg_config_packs += wayland-client\npkg_config_packs += wayland-cursor\nendif\n\nifneq (0,${X11})\npkg_config_packs += x11\npkg_config_packs += xinerama\npkg_config_packs += xext\npkg_config_packs += \"xrandr >= 1.5\"\npkg_config_packs += xscrnsaver\nendif\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dunst.systemd.service.in",
          "type": "blob",
          "size": 0.208984375,
          "content": "[Unit]\nDescription=Dunst notification daemon\nDocumentation=man:dunst(1)\nPartOf=graphical-session.target\n\n[Service]\nType=dbus\nBusName=org.freedesktop.Notifications\nExecStart=##PREFIX##/bin/dunst\nSlice=session.slice\n"
        },
        {
          "name": "dunstctl",
          "type": "blob",
          "size": 8.4794921875,
          "content": "#!/bin/sh\n\nset -eu\n\nDBUS_NAME=\"org.freedesktop.Notifications\"\nDBUS_PATH=\"/org/freedesktop/Notifications\"\nDBUS_IFAC_DUNST=\"org.dunstproject.cmd0\"\nDBUS_IFAC_PROP=\"org.freedesktop.DBus.Properties\"\nDBUS_IFAC_FDN=\"org.freedesktop.Notifications\"\n\ndie() {\n\tprintf \"%s\\n\" \"${1}\" >&2\n\tif [ -z \"$DBUS_SESSION_BUS_ADDRESS\" ]; then\n\t\techo \"DBUS_SESSION_BUS_ADDRESS is blank. Is the D-Bus session configured correctly?\" >&2\n\tfi\n\texit 1\n}\n\nshow_help() {\n\t# Below, each line starts with a tab character\n\tcat <<-EOH\n\tUsage: dunstctl <command> [parameters]\n\tCommands:\n\t  action                            Perform the default action, or open the\n\t                                    context menu of the notification at the\n\t                                    given position\n\t  close [ID]                        Close the last notification or the\n\t                                    notification with given ID\n\t  close-all                         Close all the notifications\n\t  context                           Open context menu\n\t  count [displayed|history|waiting] Show the number of notifications\n\t  history                           Display notification history (in JSON)\n\t  history-clear                     Delete all notifications from history\n\t  history-pop [ID]                  Pop the latest notification from\n\t                                    history or optionally the\n\t                                    notification with given ID\n\t  history-rm ID                     Remove the notification from\n\t                                    history with given ID.\n\t  is-paused [-e|--exit-code]        Check if pause level is greater than 0, optionally with exit code instead of text output\n\t  set-paused true|false|toggle      Set the pause status\n\t  get-pause-level                   Get the current pause level\n\t  set-pause-level level             Set the pause level\n\t  rule name enable|disable|toggle   Enable or disable a rule by its name\n\t  rules [--json]                    Displays configured rules (optionally\n\t                                    in JSON)\n\t  reload [dunstrc ...]              Reload the settings of the running\n\t                                    instance, optionally with specific\n\t                                    config files (space/comma-separated)\n\t  debug                             Print debugging information\n\t  help                              Show help\n\tEOH\n}\n\nbusctl_checked() {\n\tcommand -v busctl >/dev/null 2>/dev/null || die \"Command busctl not found\"\n\tbusctl --user --json=pretty --no-pager call \"${DBUS_NAME}\" \"${DBUS_PATH}\" \"${DBUS_IFAC_DUNST}\" \"$@\"\n}\n\ndbus_send_checked() {\n\tdbus-send \"$@\" \\\n\t\t|| die \"Failed to communicate with dunst, is it running? Or maybe the version is outdated. You can try 'dunstctl debug' as a next debugging step.\"\n}\n\nmethod_call() {\n\tdbus_send_checked --print-reply=literal --dest=\"${DBUS_NAME}\" \"${DBUS_PATH}\" \"$@\"\n}\n\nproperty_get() {\n\tdbus_send_checked --print-reply=literal --dest=\"${DBUS_NAME}\" \"${DBUS_PATH}\" \"${DBUS_IFAC_PROP}.Get\" \"string:${DBUS_IFAC_DUNST}\" \"string:${1}\"\n}\n\nproperty_set() {\n\tdbus_send_checked --print-reply=literal --dest=\"${DBUS_NAME}\" \"${DBUS_PATH}\" \"${DBUS_IFAC_PROP}.Set\" \"string:${DBUS_IFAC_DUNST}\" \"string:${1}\" \"${2}\"\n}\n\ncommand -v dbus-send >/dev/null 2>/dev/null || die \"Command dbus-send not found\"\n\ncase \"${1:-}\" in\n\t\"action\")\n\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationAction\" \"uint32:${2:-0}\" >/dev/null\n\t\t;;\n\t\"close\")\n\t\tif [ $# -eq 1 ]; then\n\t\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationCloseLast\" >/dev/null\n\t\telif [ $# -eq 2 ]; then\n\t\t\tmethod_call \"${DBUS_IFAC_FDN}.CloseNotification\" \"uint32:$2\" >/dev/null\n\t\telse\n\t\t\tdie \"Please pass the right number of arguments. Close takes 0 or 1 arguments\"\n\t\tfi\n\t\t;;\n\t\"close-all\")\n\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationCloseAll\" >/dev/null\n\t\t;;\n\t\"context\")\n\t\tmethod_call \"${DBUS_IFAC_DUNST}.ContextMenuCall\" >/dev/null\n\t\t;;\n\t\"count\")\n\t\t[ $# -eq 1 ] || [ \"${2}\" = \"displayed\" ] || [ \"${2}\" = \"history\" ] || [ \"${2}\" = \"waiting\" ] \\\n\t\t\t|| die \"Please give either 'displayed', 'history', 'waiting' or none as count parameter.\"\n\t\tif [ $# -eq 1 ]; then\n\t\t\tproperty_get waitingLength   | ( read -r _ _ waiting;   printf \"              Waiting: %s\\n\" \"${waiting}\" )\n\t\t\tproperty_get displayedLength | ( read -r _ _ displayed; printf \"  Currently displayed: %s\\n\" \"${displayed}\" )\n\t\t\tproperty_get historyLength   | ( read -r _ _ history;   printf \"              History: %s\\n\" \"${history}\")\n\t\telse\n\t\t\tproperty_get ${2}Length | ( read -r _ _ notifications; printf \"%s\\n\" \"${notifications}\"; )\n\t\tfi\n\t\t;;\n\t\"history-clear\")\n\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationClearHistory\" >/dev/null\n\t\t;;\n\t\"history-pop\")\n\t\tif [ \"$#\" -eq 1 ]\n\t\tthen\n\t\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationShow\" >/dev/null\n\t\telif [ \"$#\" -eq 2 ]\n\t\tthen\n\t\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationPopHistory\" \"uint32:${2:-0}\" >/dev/null\n\t\telse\n\t\t\tdie \"Please pass the right number of arguments. History-pop takes 0 or 1 arguments\"\n\t\tfi\n\t\t;;\n\t\"history-rm\")\n\t\tif [ $# -eq 2 ]; then\n\t\t\tmethod_call \"${DBUS_IFAC_DUNST}.NotificationRemoveFromHistory\" \"uint32:${2}\" >/dev/null\n\t\telse\n\t\t\tdie \"Please pass the right number of arguments. History-rm takes 1 arguments\"\n\t\tfi\n\t\t;;\n\t\"is-paused\")\n\t\texit=false\n\t\tcase \"${2:-}\" in\n\t\t\t-e | --exit-code)\n\t\t\t\t\texit=true\n\t\t\t\t;;\n\t\tesac\n\t\tproperty_get paused | {\n\t\t\tread -r _ _ paused\n\t\t\tif [ \"$exit\" = \"false\" ]; then\n\t\t\t\tprintf \"%s\\n\" \"${paused}\"\n\t\t\telif [ \"${paused}\" = \"false\" ]; then\n\t\t\t\texit 1\n\t\t\tfi\n\t\t}\n\t\t;;\n\t\"set-paused\")\n\t\t[ \"${2:-}\" ] \\\n\t\t\t|| die \"No status parameter specified. Please give either 'true', 'false' or 'toggle' as paused parameter.\"\n\t\t[ \"${2}\" = \"true\" ] || [ \"${2}\" = \"false\" ] || [ \"${2}\" = \"toggle\" ] \\\n\t\t\t|| die \"Please give either 'true', 'false' or 'toggle' as paused parameter.\"\n\t\tif [ \"${2}\" = \"toggle\" ]; then\n\t\t\tpaused=$(property_get paused | ( read -r _ _ paused; printf \"%s\\n\" \"${paused}\"; ))\n\t\t\tif [ \"${paused}\" = \"true\" ]; then\n\t\t\t\tproperty_set paused variant:boolean:false\n\t\t\telse\n\t\t\t\tproperty_set paused variant:boolean:true\n\t\t\tfi\n\t\telse\n\t\t\tproperty_set paused variant:boolean:\"$2\"\n\t\tfi\n\t\t;;\n\t\"rules\")\n\t\tcase \"${2:-}\" in\n\t\t\t\"\" | --json)\n\t\t\t\tbusctl_checked RuleList \\\n\t\t\t\t| {\n\t\t\t\t\tif [ \"${2:-}\" = '--json' ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcat\n\t\t\t\t\telse\n\t\t\t\t\t\tcommand -v jq >/dev/null 2>/dev/null || die \"Command jq not found\"\n\t\t\t\t\t\tjq --raw-output '.data[][] | [\"[\\(.name.data)]\"], [to_entries[] | select(.key != \"name\") | \"    \\(.key) = \\(.value.data)\"] | join(\"\\n\")'\n\t\t\t\t\tfi\n\t\t\t\t} \\\n\t\t\t\t\t|| die \"Dunst is unreachable or the version is too old.\"\n\t\t\t;;\n\t\t\t*)\n\t\t\t\tdie \"Unknown format \\\"${2}\\\". Please use either \\\"--json\\\" or no option at all.\"\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t\"rule\")\n\t\t[ \"${2:-}\" ] \\\n\t\t\t|| die \"No rule name parameter specified. Please give the rule name\"\n\t\tcase \"${3:-}\" in\n\t\t\t\"disable\")\n\t\t\t\tstate=0\n\t\t\t\t;;\n\t\t\t\"enable\")\n\t\t\t\tstate=1\n\t\t\t\t;;\n\t\t\t\"toggle\")\n\t\t\t\tstate=2\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tdie \"No valid rule state parameter specified. Please give either 'enable', 'disable' or 'toggle'\"\n\t\t\t\t;;\n\t\tesac\n\t\tmethod_call \"${DBUS_IFAC_DUNST}.RuleEnable\" \"string:${2:-1}\" \"int32:${state}\" >/dev/null\n\t\t;;\n\t\"get-pause-level\")\n\t\tproperty_get pauseLevel | ( read -r _ _ paused; printf \"%s\\n\" \"${paused}\"; )\n\t\t;;\n\t\"set-pause-level\")\n\t\t[ \"${2:-}\" ] \\\n\t\t\t|| die \"No status parameter specified. Please give a number as paused parameter.\"\n\t\tcase \"$2\" in\n\t\t\t(*[!0123456789]*)\n\t\t\t\tdie \"Please give a number as paused level parameter.\" ;;\n\t\t\t('')\n\t\t\t\tdie \"Please give a number as paused level parameter.\" ;;\n\t\tesac\n\t\tproperty_set pauseLevel variant:uint32:\"$2\"\n\t\t;;\n\t\"help\"|\"--help\"|\"-h\")\n\t\tshow_help\n\t\t;;\n\t\"debug\")\n\t\tdbus-send --print-reply=literal --dest=\"${DBUS_NAME}\" \"${DBUS_PATH}\" \"${DBUS_IFAC_FDN}.GetServerInformation\" >/dev/null 2>/dev/null \\\n\t\t\t|| die \"No notification manager is running.\"\n\n\t\tdbus-send --print-reply=literal --dest=\"${DBUS_NAME}\" \"${DBUS_PATH}\" \"${DBUS_IFAC_FDN}.GetServerInformation\" \\\n\t\t\t| (\n\t\t\t\t\tread -r name _ version _\n\t\t\t\t\t[ \"${name}\" = \"dunst\" ]\n\t\t\t\t\tprintf \"dunst version: %s\\n\" \"${version}\"\n\t\t\t\t) \\\n\t\t\t|| die \"Another notification manager is running. It's not dunst\"\n\n\t\tdbus-send --print-reply=literal --dest=\"${DBUS_NAME}\" \"${DBUS_PATH}\" \"${DBUS_IFAC_DUNST}.Ping\" >/dev/null 2>/dev/null \\\n\t\t\t|| die \"Dunst controlling interface not available. Is the version too old?\"\n\t\t;;\n\t\"history\")\n\t\tbusctl_checked NotificationListHistory \\\n\t\t\t|| die \"Dunst is not running or unreachable.\"\n\t\t;;\n\t\"reload\")\n\t\tshift\n\t\tmethod_call \"${DBUS_IFAC_DUNST}.ConfigReload\" \"array:string:$(IFS=','; echo \"$*\")\" >/dev/null\n\t\t;;\n\t\"\")\n\t\tdie \"dunstctl: No command specified. Use dunstctl help\"\n\t\t;;\n\t*)\n\t\tdie \"dunstctl: unrecognized command '${1:-}'. Please consult the usage.\"\n\t\t;;\nesac\n# vim: noexpandtab\n"
        },
        {
          "name": "dunstify.c",
          "type": "blob",
          "size": 10.5703125,
          "content": "#include <glib.h>\n#include <libnotify/notify.h>\n#include <locale.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <string.h>\n#include <gdk-pixbuf/gdk-pixbuf.h>\n\nstatic gchar *appname = \"dunstify\";\nstatic gchar *summary = NULL;\nstatic gchar *body = NULL;\nstatic NotifyUrgency urgency = NOTIFY_URGENCY_NORMAL;\nstatic gchar *urgency_str = NULL;\nstatic gchar *category = NULL;\nstatic gchar **hint_strs = NULL;\nstatic gchar **action_strs = NULL;\nstatic gint timeout = NOTIFY_EXPIRES_DEFAULT;\nstatic gchar *icon = NULL;\nstatic gchar *raw_icon_path = NULL;\nstatic gboolean capabilities = false;\nstatic gboolean serverinfo = false;\nstatic gboolean printid = false;\nstatic guint32 replace_id = 0;\nstatic guint32 close_id = 0;\nstatic gboolean block = false;\n\nstatic GOptionEntry entries[] =\n{\n    { \"appname\",      'a', 0, G_OPTION_ARG_STRING,       &appname,        \"Name of your application\", \"NAME\" },\n    { \"urgency\",      'u', 0, G_OPTION_ARG_STRING,       &urgency_str,    \"The urgency of this notification\", \"URG\" },\n    { \"hints\",        'h', 0, G_OPTION_ARG_STRING_ARRAY, &hint_strs,      \"User specified hints\", \"HINT\" },\n    { \"action\",       'A', 0, G_OPTION_ARG_STRING_ARRAY, &action_strs,    \"Actions the user can invoke\", \"ACTION\" },\n    { \"timeout\",      't', 0, G_OPTION_ARG_INT,          &timeout,        \"The time in milliseconds until the notification expires\", \"TIMEOUT\" },\n    { \"icon\",         'i', 0, G_OPTION_ARG_STRING,       &icon,           \"An icon that should be displayed with the notification\", \"ICON\" },\n    { \"raw_icon\",     'I', 0, G_OPTION_ARG_STRING,       &raw_icon_path,  \"Path to the icon to be sent as raw image data\", \"RAW_ICON\"},\n    { \"category\",     'c', 0, G_OPTION_ARG_STRING,       &category,       \"The category of this notification\", \"TYPE\" },\n    { \"capabilities\", 0,   0, G_OPTION_ARG_NONE,         &capabilities,   \"Print the server capabilities and exit\", NULL},\n    { \"serverinfo\",   's', 0, G_OPTION_ARG_NONE,         &serverinfo,     \"Print server information and exit\", NULL},\n    { \"printid\",      'p', 0, G_OPTION_ARG_NONE,         &printid,        \"Print id, which can be used to update/replace this notification\", NULL},\n    { \"replace\",      'r', 0, G_OPTION_ARG_INT,          &replace_id,     \"Set id of this notification.\", \"ID\"},\n    { \"close\",        'C', 0, G_OPTION_ARG_INT,          &close_id,       \"Close the notification with the specified ID\", \"ID\"},\n    { \"block\",        'b', 0, G_OPTION_ARG_NONE,         &block,          \"Block until notification is closed and print close reason\", NULL},\n    { NULL }\n};\n\nvoid die(int exit_value)\n{\n    if (notify_is_initted())\n        notify_uninit();\n    exit(exit_value);\n}\n\nvoid print_capabilities(void)\n{\n    GList *caps = notify_get_server_caps();\n    for (GList *iter = caps; iter; iter = iter->next) {\n        if (strlen(iter->data) > 0) {\n            g_print(\"%s\\n\", (char *)iter->data);\n        }\n    }\n}\n\nvoid print_serverinfo(void)\n{\n    char *name;\n    char *vendor;\n    char *version;\n    char *spec_version;\n\n    if (!notify_get_server_info(&name, &vendor, &version, &spec_version)) {\n        g_printerr(\"Unable to get server information\");\n        exit(1);\n    }\n\n    g_print(\"name:%s\\nvendor:%s\\nversion:%s\\nspec_version:%s\\n\", name,\n                                                                 vendor,\n                                                                 version,\n                                                                 spec_version);\n}\n\n/*\n * Glib leaves the option terminator \"--\" in the argv after parsing in some\n * cases. This function gets the specified argv element ignoring the first\n * terminator.\n *\n * See https://docs.gtk.org/glib/method.OptionContext.parse.html for details\n */\nchar *get_argv(char *argv[], int index)\n{\n    for (int i = 0; i <= index; i++) {\n        if (strcmp(argv[i], \"--\") == 0) {\n            return argv[index + 1];\n        }\n    }\n    return argv[index];\n}\n\n/* Count the number of arguments in argv excluding the terminator \"--\" */\nint count_args(char *argv[], int argc) {\n    for (int i = 0; i < argc; i++) {\n        if (strcmp(argv[i], \"--\") == 0)\n            return argc - 1;\n    }\n\n    return argc;\n}\n\nvoid parse_commandline(int argc, char *argv[])\n{\n    GError *error = NULL;\n    GOptionContext *context;\n\n    context = g_option_context_new(\"SUMMARY [BODY]\");\n    g_option_context_add_main_entries(context, entries, NULL);\n    if (!g_option_context_parse(context, &argc, &argv, &error)){\n        g_printerr(\"Invalid commandline: %s\\n\", error->message);\n        exit(1);\n    }\n\n    g_option_context_free(context);\n\n    if (capabilities) {\n        print_capabilities();\n        die(0);\n    }\n\n    if (serverinfo) {\n        print_serverinfo();\n        die(0);\n    }\n\n    if (*appname == '\\0') {\n        g_printerr(\"Provided appname was empty\\n\");\n        die(1);\n    }\n\n    int n_args = count_args(argv, argc);\n    if (n_args < 2 && close_id < 1) {\n        g_printerr(\"I need at least a summary\\n\");\n        die(1);\n    } else if (n_args < 2) {\n        summary = g_strdup(\"These are not the summaries you are looking for\");\n    } else {\n        summary = g_strdup(get_argv(argv, 1));\n    }\n\n    if (n_args > 2) {\n        body = g_strcompress(get_argv(argv, 2));\n    }\n\n    if (urgency_str) {\n        switch (urgency_str[0]) {\n            case 'l':\n            case 'L':\n            case '0':\n                urgency = NOTIFY_URGENCY_LOW;\n                break;\n            case 'n':\n            case 'N':\n            case '1':\n                urgency = NOTIFY_URGENCY_NORMAL;\n                break;\n            case 'c':\n            case 'C':\n            case '2':\n                urgency = NOTIFY_URGENCY_CRITICAL;\n                break;\n            default:\n                g_printerr(\"Unknown urgency: %s\\n\", urgency_str);\n                g_printerr(\"Assuming normal urgency\\n\");\n                break;\n        }\n    }\n}\n\ntypedef struct _NotifyNotificationPrivate\n{\n        guint32         id;\n        char           *app_name;\n        char           *summary;\n        char           *body;\n\n        /* NULL to use icon data. Anything else to have server lookup icon */\n        char           *icon_name;\n\n        /*\n         * -1   = use server default\n         *  0   = never timeout\n         *  > 0 = Number of milliseconds before we timeout\n         */\n        gint            timeout;\n\n        GSList         *actions;\n        GHashTable     *action_map;\n        GHashTable     *hints;\n\n        gboolean        has_nondefault_actions;\n        gboolean        updates_pending;\n\n        gulong          proxy_signal_handler;\n\n        gint            closed_reason;\n} knickers;\n\nint get_id(NotifyNotification *n)\n{\n    knickers *kn = n->priv;\n\n    /* I'm sorry for taking a peek */\n    return kn->id;\n}\n\nvoid put_id(NotifyNotification *n, guint32 id)\n{\n    knickers *kn = n->priv;\n\n    /* And now I'm putting stuff into\n     * your knickers. I'm sorry.\n     * I'm so sorry.\n     * */\n\n    kn->id = id;\n}\n\nvoid actioned(NotifyNotification *n, char *a, gpointer foo)\n{\n    notify_notification_close(n, NULL);\n    g_print(\"%s\\n\", a);\n    die(0);\n}\n\nvoid closed(NotifyNotification *n, gpointer foo)\n{\n    g_print(\"%d\\n\", notify_notification_get_closed_reason(n));\n    die(0);\n}\n\nvoid add_action(NotifyNotification *n, char *str)\n{\n    char *action = str;\n    char *label = strchr(str, ',');\n\n    if (!label || *(label+1) == '\\0') {\n        g_printerr(\"Malformed action. Expected \\\"action,label\\\", got \\\"%s\\\"\", str);\n        return;\n    }\n\n    *label = '\\0';\n    label++;\n\n    notify_notification_add_action(n, action, label, actioned, NULL, NULL);\n}\n\nvoid add_hint(NotifyNotification *n, char *str)\n{\n    char *type = str;\n    char *name = strchr(str, ':');\n    if (!name || *(name+1) == '\\0') {\n        g_printerr(\"Malformed hint. Expected \\\"type:name:value\\\", got \\\"%s\\\"\", str);\n        return;\n    }\n    *name = '\\0';\n    name++;\n    char *value = strchr(name, ':');\n    if (!value || *(value+1) == '\\0') {\n        g_printerr(\"Malformed hint. Expected \\\"type:name:value\\\", got \\\"%s\\\"\", str);\n        return;\n    }\n    *value = '\\0';\n    value++;\n\n    if (strcmp(type, \"int\") == 0)\n        notify_notification_set_hint_int32(n, name, atoi(value));\n    else if (strcmp(type, \"double\") == 0)\n        notify_notification_set_hint_double(n, name, atof(value));\n    else if (strcmp(type, \"string\") == 0)\n        notify_notification_set_hint_string(n, name, value);\n    else if (strcmp(type, \"byte\") == 0) {\n        gint h_byte = g_ascii_strtoull(value, NULL, 10);\n        if (h_byte < 0 || h_byte > 0xFF)\n            g_printerr(\"Not a byte: \\\"%s\\\"\", value);\n        else\n            notify_notification_set_hint_byte(n, name, (guchar) h_byte);\n    } else\n        g_printerr(\"Malformed hint. Expected a type of int, double, string or byte, got %s\\n\", type);\n\n}\n\nint main(int argc, char *argv[])\n{\n    setlocale(LC_ALL, \"\");\n    #if !GLIB_CHECK_VERSION(2,35,0)\n        g_type_init();\n    #endif\n    parse_commandline(argc, argv);\n\n    if (!notify_init(appname)) {\n        g_printerr(\"Unable to initialize libnotify\\n\");\n        die(1);\n    }\n\n    NotifyNotification *n;\n    n = notify_notification_new(summary, body, icon);\n    notify_notification_set_timeout(n, timeout);\n    notify_notification_set_urgency(n, urgency);\n\n    if (category != NULL)\n        notify_notification_set_category(n, category);\n\n    GError *err = NULL;\n\n    if (raw_icon_path) {\n            GdkPixbuf *raw_icon = gdk_pixbuf_new_from_file(raw_icon_path, &err);\n\n            if(err) {\n                g_printerr(\"Unable to get raw icon: %s\\n\", err->message);\n                die(1);\n            }\n\n            notify_notification_set_image_from_pixbuf(n, raw_icon);\n    }\n\n    if (close_id > 0) {\n        put_id(n, close_id);\n        notify_notification_close(n, &err);\n        if (err) {\n            g_printerr(\"Unable to close notification: %s\\n\", err->message);\n            die(1);\n        }\n        die(0);\n    }\n\n    if (replace_id > 0) {\n        put_id(n, replace_id);\n    }\n\n    GMainLoop *l = NULL;\n\n    if (block || action_strs) {\n        l = g_main_loop_new(NULL, false);\n        g_signal_connect(n, \"closed\", G_CALLBACK(closed), NULL);\n    }\n\n    if (action_strs)\n        for (int i = 0; action_strs[i]; i++) {\n            add_action(n, action_strs[i]);\n        }\n\n    if (hint_strs)\n        for (int i = 0; hint_strs[i]; i++) {\n            add_hint(n, hint_strs[i]);\n        }\n\n\n    notify_notification_show(n, &err);\n    if (err) {\n        g_printerr(\"Unable to send notification: %s\\n\", err->message);\n        die(1);\n    }\n\n    if (printid)\n        g_print(\"%d\\n\", get_id(n));\n\n    if (block || action_strs)\n        g_main_loop_run(l);\n\n    g_object_unref(G_OBJECT (n));\n\n    die(0);\n}\n\n/* vim: set ft=c tabstop=8 shiftwidth=8 expandtab textwidth=0: */\n"
        },
        {
          "name": "dunstrc",
          "type": "blob",
          "size": 15.7802734375,
          "content": "# See dunst(5) for all configuration options\n\n[global]\n    ### Display ###\n\n    # Which monitor should the notifications be displayed on.\n    monitor = 0\n\n    # Display notification on focused monitor.  Possible modes are:\n    #   mouse: follow mouse pointer\n    #   keyboard: follow window with keyboard focus\n    #   none: don't follow anything\n    #\n    # \"keyboard\" needs a window manager that exports the\n    # _NET_ACTIVE_WINDOW property.\n    # This should be the case for almost all modern window managers.\n    #\n    # If this option is set to mouse or keyboard, the monitor option\n    # will be ignored.\n    follow = none\n\n    ### Geometry ###\n\n    # The width of the window, excluding the frame.\n    # dynamic width from 0 to 300\n    # width = (0, 300)\n    # constant width of 300\n    width = 300\n\n    # The height of a single notification, excluding the frame.\n    # dynamic height from 0 to 300\n    height = (0, 300)\n    # constant height of 300\n    # height = 300\n    # NOTE: Dunst from version 1.11 and older don't support dynamic height\n    #       and the given value is treated as the maximum height\n\n    # Position the notification in the top right corner\n    origin = top-right\n\n    # Offset from the origin\n    # NOTE: Dunst from version 1.11 and older use this alternative notation\n    # offset = 10x50\n    offset = (10, 50)\n\n    # Scale factor. It is auto-detected if value is 0.\n    scale = 0\n\n    # Maximum number of notification (0 means no limit)\n    notification_limit = 20\n\n    ### Progress bar ###\n\n    # Turn on the progress bar. It appears when a progress hint is passed with\n    # for example dunstify -h int:value:12\n    progress_bar = true\n\n    # Set the progress bar height. This includes the frame, so make sure\n    # it's at least twice as big as the frame width.\n    progress_bar_height = 10\n\n    # Set the frame width of the progress bar\n    progress_bar_frame_width = 1\n\n    # Set the minimum width for the progress bar\n    progress_bar_min_width = 150\n\n    # Set the maximum width for the progress bar\n    progress_bar_max_width = 300\n\n    # Corner radius for the progress bar. 0 disables rounded corners.\n    progress_bar_corner_radius = 0\n\n    # Define which corners to round when drawing the progress bar. If progress_bar_corner_radius\n    # is set to 0 this option will be ignored.\n    progress_bar_corners = all\n\n    # Corner radius for the icon image.\n    icon_corner_radius = 0\n\n    # Define which corners to round when drawing the icon image. If icon_corner_radius\n    # is set to 0 this option will be ignored.\n    icon_corners = all\n\n    # Show how many messages are currently hidden (because of\n    # notification_limit).\n    indicate_hidden = yes\n\n    # The transparency of the window.  Range: [0; 100].\n    # This option will only work if a compositing window manager is\n    # present (e.g. xcompmgr, compiz, etc.). (X11 only)\n    transparency = 0\n\n    # Draw a line of \"separator_height\" pixel height between two\n    # notifications.\n    # Set to 0 to disable.\n    # If gap_size is greater than 0, this setting will be ignored.\n    separator_height = 2\n\n    # Padding between text and separator.\n    padding = 8\n\n    # Horizontal padding.\n    horizontal_padding = 8\n\n    # Padding between text and icon.\n    text_icon_padding = 0\n\n    # Defines width in pixels of frame around the notification window.\n    # Set to 0 to disable.\n    frame_width = 3\n\n    # Defines color of the frame around the notification window.\n    frame_color = \"#aaaaaa\"\n\n    # Size of gap to display between notifications - requires a compositor.\n    # If value is greater than 0, separator_height will be ignored and a border\n    # of size frame_width will be drawn around each notification instead.\n    # Click events on gaps do not currently propagate to applications below.\n    gap_size = 0\n\n    # Define a color for the separator.\n    # possible values are:\n    #  * auto: dunst tries to find a color fitting to the background;\n    #  * foreground: use the same color as the foreground;\n    #  * frame: use the same color as the frame;\n    #  * anything else will be interpreted as a X color.\n    separator_color = frame\n\n    # Sort type.\n    # possible values are:\n    #  * id: sort by id\n    #  * urgency_ascending: sort by urgency (low then normal then critical)\n    #  * urgency_descending: sort by urgency (critical then normal then low)\n    #  * update: sort by update (most recent always at the top)\n    sort = yes\n\n    # Don't remove messages, if the user is idle (no mouse or keyboard input)\n    # for longer than idle_threshold seconds.\n    # Set to 0 to disable.\n    # A client can set the 'transient' hint to bypass this. See the rules\n    # section for how to disable this if necessary\n    # idle_threshold = 120\n\n    ### Text ###\n\n    font = Monospace 8\n\n    # The spacing between lines.  If the height is smaller than the\n    # font height, it will get raised to the font height.\n    line_height = 0\n\n    # Possible values are:\n    # full: Allow a small subset of html markup in notifications:\n    #        <b>bold</b>\n    #        <i>italic</i>\n    #        <s>strikethrough</s>\n    #        <u>underline</u>\n    #\n    #        For a complete reference see\n    #        <https://docs.gtk.org/Pango/pango_markup.html>.\n    #\n    # strip: This setting is provided for compatibility with some broken\n    #        clients that send markup even though it's not enabled on the\n    #        server. Dunst will try to strip the markup but the parsing is\n    #        simplistic so using this option outside of matching rules for\n    #        specific applications *IS GREATLY DISCOURAGED*.\n    #\n    # no:    Disable markup parsing, incoming notifications will be treated as\n    #        plain text. Dunst will not advertise that it has the body-markup\n    #        capability if this is set as a global setting.\n    #\n    # It's important to note that markup inside the format option will be parsed\n    # regardless of what this is set to.\n    markup = full\n\n    # The format of the message.  Possible variables are:\n    #   %a  appname\n    #   %s  summary\n    #   %b  body\n    #   %i  iconname (including its path)\n    #   %I  iconname (without its path)\n    #   %p  progress value if set ([  0%] to [100%]) or nothing\n    #   %n  progress value if set without any extra characters\n    #   %%  Literal %\n    # Markup is allowed\n    format = \"<b>%s</b>\\n%b\"\n\n    # Alignment of message text.\n    # Possible values are \"left\", \"center\" and \"right\".\n    alignment = left\n\n    # Vertical alignment of message text and icon.\n    # Possible values are \"top\", \"center\" and \"bottom\".\n    vertical_alignment = center\n\n    # Show age of message if message is older than show_age_threshold\n    # seconds.\n    # Set to -1 to disable.\n    show_age_threshold = 60\n\n    # Specify where to make an ellipsis in long lines.\n    # Possible values are \"start\", \"middle\" and \"end\".\n    ellipsize = middle\n\n    # Ignore newlines '\\n' in notifications.\n    ignore_newline = no\n\n    # Stack together notifications with the same content\n    stack_duplicates = true\n\n    # Hide the count of stacked notifications with the same content\n    hide_duplicate_count = false\n\n    # Display indicators for URLs (U) and actions (A).\n    show_indicators = yes\n\n    ### Icons ###\n\n    # Recursive icon lookup. You can set a single theme, instead of having to\n    # define all lookup paths.\n    enable_recursive_icon_lookup = true\n\n    # Set icon theme (only used for recursive icon lookup)\n    icon_theme = Adwaita\n    # You can also set multiple icon themes, with the leftmost one being used first.\n    # icon_theme = \"Adwaita, breeze\"\n\n    # Align icons left/right/top/off\n    icon_position = left\n\n    # Scale small icons up to this size, set to 0 to disable. Helpful\n    # for e.g. small files or high-dpi screens. In case of conflict,\n    # max_icon_size takes precedence over this.\n    min_icon_size = 32\n\n    # Scale larger icons down to this size, set to 0 to disable\n    max_icon_size = 128\n\n    # Paths to default icons (only necessary when not using recursive icon lookup)\n    icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/\n\n    ### History ###\n\n    # Should a notification popped up from history be sticky or timeout\n    # as if it would normally do.\n    sticky_history = yes\n\n    # Maximum amount of notifications kept in history\n    history_length = 20\n\n    ### Misc/Advanced ###\n\n    # dmenu path.\n    dmenu = /usr/bin/dmenu -p dunst:\n\n    # Browser for opening urls in context menu.\n    browser = /usr/bin/xdg-open\n\n    # Always run rule-defined scripts, even if the notification is suppressed\n    always_run_script = true\n\n    # Define the title of the windows spawned by dunst (X11 only)\n    title = Dunst\n\n    # Define the class of the windows spawned by dunst (X11 only)\n    class = Dunst\n\n    # Define the corner radius of the notification window\n    # in pixel size. If the radius is 0, you have no rounded\n    # corners.\n    # The radius will be automatically lowered if it exceeds half of the\n    # notification height to avoid clipping text and/or icons.\n    corner_radius = 0\n\n    # Define which corners to round when drawing the window. If the corner radius\n    # is set to 0 this option will be ignored.\n    #\n    # Comma-separated list of the corners. The accepted corner values are bottom-right,\n    # bottom-left, top-right, top-left, top, bottom, left, right or all.\n    corners = all\n\n    # Ignore the dbus closeNotification message.\n    # Useful to enforce the timeout set by dunst configuration. Without this\n    # parameter, an application may close the notification sent before the\n    # user defined timeout.\n    ignore_dbusclose = false\n\n    ### Wayland ###\n    # These settings are Wayland-specific. They have no effect when using X11\n\n    # Uncomment this if you want to let notifications appear under fullscreen\n    # applications (default: overlay)\n    # layer = top\n\n    # Set this to true to use X11 output on Wayland.\n    force_xwayland = false\n\n    ### Legacy\n\n    # Use the Xinerama extension instead of RandR for multi-monitor support.\n    # This setting is provided for compatibility with older nVidia drivers that\n    # do not support RandR and using it on systems that support RandR is highly\n    # discouraged.\n    #\n    # By enabling this setting dunst will not be able to detect when a monitor\n    # is connected or disconnected which might break follow mode if the screen\n    # layout changes.\n    force_xinerama = false\n\n    ### mouse\n\n    # Defines list of actions for each mouse event\n    # Possible values are:\n    # * none: Don't do anything.\n    # * do_action: Invoke the action determined by the action_name rule. If there is no\n    #              such action, open the context menu.\n    # * open_url: If the notification has exactly one url, open it. If there are multiple\n    #             ones, open the context menu.\n    # * close_current: Close current notification.\n    # * close_all: Close all notifications.\n    # * context: Open context menu for the notification.\n    # * context_all: Open context menu for all notifications.\n    # These values can be strung together for each mouse event, and\n    # will be executed in sequence.\n    mouse_left_click = close_current\n    mouse_middle_click = do_action, close_current\n    mouse_right_click = close_all\n\n# Experimental features that may or may not work correctly. Do not expect them\n# to have a consistent behaviour across releases.\n[experimental]\n    # Calculate the dpi to use on a per-monitor basis.\n    # If this setting is enabled the Xft.dpi value will be ignored and instead\n    # dunst will attempt to calculate an appropriate dpi value for each monitor\n    # using the resolution and physical size. This might be useful in setups\n    # where there are multiple screens with very different dpi values.\n    per_monitor_dpi = false\n\n\n[urgency_low]\n    # IMPORTANT: colors have to be defined in quotation marks.\n    # Otherwise the \"#\" and following would be interpreted as a comment.\n    background = \"#222222\"\n    foreground = \"#888888\"\n    timeout = 10\n    # Icon for notifications with low urgency\n    default_icon = dialog-information\n\n[urgency_normal]\n    background = \"#285577\"\n    foreground = \"#ffffff\"\n    timeout = 10\n    override_pause_level = 30\n    # Icon for notifications with normal urgency\n    default_icon = dialog-information\n\n[urgency_critical]\n    background = \"#900000\"\n    foreground = \"#ffffff\"\n    frame_color = \"#ff0000\"\n    timeout = 0\n    override_pause_level = 60\n    # Icon for notifications with critical urgency\n    default_icon = dialog-warning\n\n# Every section that isn't one of the above is interpreted as a rules to\n# override settings for certain messages.\n#\n# Messages can be matched by\n#    appname (discouraged, see desktop_entry)\n#    body\n#    category\n#    desktop_entry\n#    icon\n#    match_transient\n#    msg_urgency\n#    stack_tag\n#    summary\n#\n# and you can override the\n#    background\n#    foreground\n#    format\n#    frame_color\n#    fullscreen\n#    new_icon\n#    set_stack_tag\n#    set_transient\n#    set_category\n#    timeout\n#    urgency\n#    icon_position\n#    skip_display\n#    history_ignore\n#    action_name\n#    word_wrap\n#    ellipsize\n#    alignment\n#    hide_text\n#    override_pause_level\n#\n# Shell-like globbing will get expanded.\n#\n# Instead of the appname filter, it's recommended to use the desktop_entry filter.\n# GLib based applications export their desktop-entry name. In comparison to the appname,\n# the desktop-entry won't get localized.\n#\n# You can also allow a notification to appear even when paused. Notification will appear whenever notification's override_pause_level >= dunst's paused level.\n# This can be used to set partial pause modes, where more urgent notifications get through, but less urgent stay paused. To do that, you can override the following in the rules:\n# override_pause_level = X\n\n# SCRIPTING\n# You can specify a script that gets run when the rule matches by\n# setting the \"script\" option.\n# The script will be called as follows:\n#   script appname summary body icon urgency\n# where urgency can be \"LOW\", \"NORMAL\" or \"CRITICAL\".\n#\n# NOTE: It might be helpful to run dunst -print in a terminal in order\n# to find fitting options for rules.\n\n# Disable the transient hint so that idle_threshold cannot be bypassed from the\n# client\n#[transient_disable]\n#    match_transient = yes\n#    set_transient = no\n#\n# Make the handling of transient notifications more strict by making them not\n# be placed in history.\n#[transient_history_ignore]\n#    match_transient = yes\n#    history_ignore = yes\n\n# fullscreen values\n# show: show the notifications, regardless if there is a fullscreen window opened\n# delay: displays the new notification, if there is no fullscreen window active\n#        If the notification is already drawn, it won't get undrawn.\n# pushback: same as delay, but when switching into fullscreen, the notification will get\n#           withdrawn from screen again and will get delayed like a new notification\n#[fullscreen_delay_everything]\n#    fullscreen = delay\n#[fullscreen_show_critical]\n#    msg_urgency = critical\n#    fullscreen = show\n\n#[espeak]\n#    summary = \"*\"\n#    script = dunst_espeak.sh\n\n#[script-test]\n#    summary = \"*script*\"\n#    script = dunst_test.sh\n\n#[ignore]\n#    # This notification will not be displayed\n#    summary = \"foobar\"\n#    skip_display = true\n\n#[history-ignore]\n#    # This notification will not be saved in history\n#    summary = \"foobar\"\n#    history_ignore = yes\n\n#[skip-display]\n#    # This notification will not be displayed, but will be included in the history\n#    summary = \"foobar\"\n#    skip_display = yes\n\n#[signed_on]\n#    appname = Pidgin\n#    summary = \"*signed on*\"\n#    urgency = low\n#\n#[signed_off]\n#    appname = Pidgin\n#    summary = *signed off*\n#    urgency = low\n#\n#[says]\n#    appname = Pidgin\n#    summary = *says*\n#    urgency = critical\n#\n#[twitter]\n#    appname = Pidgin\n#    summary = *twitter.com*\n#    urgency = normal\n#\n#[stack-volumes]\n#    appname = \"some_volume_notifiers\"\n#    set_stack_tag = \"volume\"\n#\n# vim: ft=cfg\n"
        },
        {
          "name": "main.c",
          "type": "blob",
          "size": 0.162109375,
          "content": "#include \"src/dunst.h\"\n\nint main(int argc, char *argv[])\n{\n        return dunst_main(argc, argv);\n}\n/* vim: set ft=c tabstop=8 shiftwidth=8 expandtab textwidth=0: */\n"
        },
        {
          "name": "org.knopwob.dunst.service.in",
          "type": "blob",
          "size": 0.103515625,
          "content": "[D-BUS Service]\nName=org.freedesktop.Notifications\nExec=##PREFIX##/bin/dunst\nSystemdService=dunst.service\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}