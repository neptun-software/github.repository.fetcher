{
  "metadata": {
    "timestamp": 1736710162833,
    "page": 837,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yangchaojiang/yjPlay",
      "stars": 1726,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.9033203125,
          "content": "/.idea/\n/.github/\n/.gradle/\n.gradle/\n.idea/libraries/Gradle____local_aars___E__demo_WEB_yjPlay_cronet_libs_android_70_0_3516_0_Release_cronet_cronet_api_jar_unspecified_jar.xml\n.idea/libraries/Gradle____local_aars___E__demo_WEB_yjPlay_cronet_libs_android_70_0_3516_0_Release_cronet_cronet_impl_common_java_jar_unspecified_jar.xml\n.idea/libraries/Gradle____local_aars___E__demo_WEB_yjPlay_cronet_libs_android_70_0_3516_0_Release_cronet_cronet_impl_native_java_jar_unspecified_jar.xml\nVideoPlayModule-Lite/VideoPlayModule-Lite.iml\nVideoPlayModule/VideoPlayModule.iml\napp/app.iml\nffmpeg/ffmpeg.iml\nima/ima.iml\nlocal.properties\nyjPlay.iml\n/VideoPlayModule/build/\n/VideoPlayModule-Lite/build/\n/VideoUi/build/\nVideoPlayModule-Lite/build/\nVideoPlayModule/build/\n/tv/build/\n.idea/encodings.xml\n.idea/gradle.xml\n.idea/inspectionProfiles/\n.idea/libraries/Gradle__com_anbetter_MLog_1_1_0.xml\n.idea/libraries/Gradle__com_android_support_exifinterface_26_1_0.xml\n.idea/libraries/Gradle__com_android_support_multidex_1_0_2.xml\n.idea/libraries/Gradle__com_android_support_multidex_instrumentation_1_0_2.xml\n.idea/libraries/Gradle__com_android_support_test_espresso_espresso_core_2_2_2.xml\n.idea/libraries/Gradle__com_android_support_test_espresso_espresso_idling_resource_2_2_2.xml\n.idea/libraries/Gradle__com_android_support_test_exposed_instrumentation_api_publish_0_5.xml\n.idea/libraries/Gradle__com_android_support_test_rules_0_5.xml\n.idea/libraries/Gradle__com_android_support_test_runner_0_5.xml\n.idea/libraries/Gradle__com_davemorrissey_labs_subsampling_scale_image_view_3_9_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_animated_base_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_animated_drawable_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_animated_gif_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_animated_webp_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_drawee_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_fbcore_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_fresco_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_helper_fresco_helper_2_0_3.xml\n.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_base_1_5_0.xml\n.idea/libraries/Gradle__com_facebook_fresco_webpsupport_1_5_0.xml\n.idea/libraries/Gradle__com_github_CymChad_BaseRecyclerViewAdapterHelper_2_9_34.xml\n.idea/libraries/Gradle__com_github_bumptech_glide_glide_3_7_0_jar.xml\n.idea/libraries/Gradle__com_github_ctiao_DanmakuFlameMaster_0_9_25.xml\n.idea/libraries/Gradle__com_google_code_findbugs_jsr305_2_0_1_jar.xml\n.idea/libraries/Gradle__com_google_code_gson_gson_2_8_0_jar.xml\n.idea/libraries/Gradle__com_parse_bolts_bolts_tasks_1_4_0_jar.xml\n.idea/libraries/Gradle__com_squareup_javawriter_2_1_1_jar.xml\n.idea/libraries/Gradle__com_squareup_okio_okio_1_14_0_jar.xml\n.idea/libraries/Gradle__com_wang_avi_library_2_1_3.xml\n.idea/libraries/Gradle__com_ycjiang_VideoPlayModule_2_3_10.xml\n.idea/libraries/Gradle__com_ycjiang_VideoPlayModule_Lite_2_3_10.xml\n.idea/libraries/Gradle__javax_annotation_javax_annotation_api_1_2_jar.xml\n.idea/libraries/Gradle__javax_inject_javax_inject_1_jar.xml\n.idea/libraries/Gradle__junit_junit_4_12_jar.xml\n.idea/libraries/Gradle__net_butterflytv_utils_rtmp_client_3_0_1.xml\n.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3_jar.xml\n.idea/libraries/Gradle__org_hamcrest_hamcrest_integration_1_3_jar.xml\n.idea/libraries/Gradle__org_hamcrest_hamcrest_library_1_3_jar.xml\n.idea/markdown-exported-files.xml\n.idea/markdown-navigator.xml\n.idea/markdown-navigator/\n.idea/misc.xml\n.idea/modules.xml\n.idea/runConfigurations.xml\n.idea/vcs.xml\napp/src/main/res/values/ids_2.xml\nffmpeg/buildout/\nffmpeg/extension-ffmpeg.iml\nVideoPlayModule-Lite/libs/\nVideoPlayModule-Lite/src/main/assets/\nVideoPlayModule/libs/\nffmpeg/build/generated/assets/\nffmpeg/build/generated/res/\nffmpeg/build/generated/source/aidl/\nffmpeg/build/generated/source/apt/\nffmpeg/build/generated/source/rs/\nffmpeg/build/intermediates/check-manifest/\nffmpeg/build/intermediates/incremental/debug-mergeJniLibs/zip-cache/\nffmpeg/build/intermediates/incremental/packageDebugResources/aapt-temp/\nffmpeg/build/intermediates/incremental/packageDebugResources/merged.dir/\nffmpeg/build/intermediates/incremental/packageDebugResources/stripped.dir/\nffmpeg/build/intermediates/incremental/packageReleaseResources/aapt-temp/\nffmpeg/build/intermediates/incremental/packageReleaseResources/merged.dir/\nffmpeg/build/intermediates/incremental/packageReleaseResources/stripped.dir/\nffmpeg/build/intermediates/incremental/release-mergeJniLibs/zip-cache/\nffmpeg/build/intermediates/intermediate-jars/debug/jni/\nffmpeg/build/intermediates/intermediate-jars/release/jni/\nffmpeg/build/intermediates/jniLibs/\nffmpeg/build/intermediates/packaged-aidl/\nffmpeg/build/intermediates/packagedAssets/\nffmpeg/build/intermediates/packaged_res/\nffmpeg/build/intermediates/public_res/\nffmpeg/build/intermediates/rs/\nffmpeg/build/intermediates/shaders/\nffmpeg/build/tmp/\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.0830078125,
          "content": "使用版本：例如(1.9.93) \n\n描述：最好是错误log日志或者发生环境.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.658203125,
          "content": "# yjPlay\n\n[![Download](https://api.bintray.com/packages/ycjiang/ycjiang/VideoPlayModule/images/download.svg) ](https://bintray.com/ycjiang/ycjiang/VideoPlayModule/_latestVersion)\n\n\n  ### gif 显示有点卡，帧数低，实际很流畅\n  #### [下载预览apk](https://raw.githubusercontent.com/yangchaojiang/yjPlay/master/app-release.apk)\n\n ![](https://github.com/yangchaojiang/ResProject/blob/master/gif/test.gif)  ![](https://github.com/yangchaojiang/ResProject/blob/master/gif/test2.gif)\n \n ![](https://github.com/yangchaojiang/ResProject/blob/master/gif/test3.gif)\n ![](https://github.com/yangchaojiang/ResProject/blob/master/gif/test4.gif)\n\n  ![](https://github.com/yangchaojiang/ResProject/blob/master/gif/testtv.gif)\n ### 基于exoPlayer 自定义播放器 JPlayer支持功能：\n   *  ExoUserPlayer 基本播放（默认关闭手势  亮度，音量，快进，等手势，支持自定义布局）\n   *  自动适配适配TV。\n   *  支持横屏和竖屏两种模式全屏。\n   *  适配音频控制布局。\n   *  支持广告视频预览(轻松实现，完美切换，<font color=\"red\">可自定义</font>)。\n   *  支持多种分辨率视频切换（已支持自定义布局样式）。\n   *  [缓存下载加密视频功能（边播变缓存轻松实现](README_EN_VIDEO.md)<font color=\"red\">不是使用AndroidVideoCache</font>。\n   *  支持列表集合 播放视频（<font color=\"red\">列表到详情播放完美过度</font>）\n   *  支持网络类型 提示是否播放(可自定义屏蔽)。\n   *  支持视频加载布局, 错误布局,重播布局，提示布局自定义，更灵活实现自己布局样式。\n   *  支持视频加速慢速播放（已支持自定义布局样式）参考demo自定义。\n   *  支持多种视频封面图（两种模式封面图）。\n   *  支持支持自定义[MediaSource]()。\n   *  支持精简版和完整版，选择使用更丰富。\n   *  [增加离线下载辅助类ExoWholeDownLoadManger,ExoWholeDownloadTracker,ExoDownLoadManger,DownloadService()-->戳我](README_EN_VIDEO.md))\n   *  支持播放锁屏功能和控制布局显示显示动画效果.\n   *  支持返回按钮和全屏按钮图标自定义。\n   *  支持自定义视频封面布局.(视频封面图布局样式完美多样化)。\n   *  支持视频实时进度（头条底部进度）。\n   *  支持流式API方式调用。\n   *  支持多种文件类型，MP4，M4A，WebM，Matroska,Ogg,WAV，MP3，MPEG-TS，MPEG-PS，FLV，ADTS (AAC)，Flac，M3U8,mkv 等。\n   *  支持自定义多种 http,Rtmp,Https,Cronet等协议。\n <!--more-->\n\n ### [更新日志2.3.51→》戳我查看](RELEASENOTES.md)\n\n\n ### 一.引用类库\n  ````\n   repositories {\n          jcenter()\n          mavenCentral();\n      }\n\n  dependencies {\n     //完整版\n      compile 'com.ycjiang:VideoPlayModule:2.3.61'\n     //精简版（没有smoothstreaming,dash,hls,只有常规点播功能）\n      compile 'com.ycjiang:VideoPlayModule-Lite:2.3.61'\n\n  }\n  ````\n  >>> 提示：无法正常引用请在 repositories{ }添加已下代码\n  >>> mavenCentral(url: \"https://dl.bintray.com/ycjiang/ycjiang\")\n\n ### 二.控件属性\n   >>>> 基本使用如下\n   ````\n         <chuangyuan.ycj.videolibrary.widget.VideoPlayerView\n                 android:id=\"@+id/exo_play_context_id\"\n                 android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\"\n                 android:background=\"@android:color/transparent\"\n                 />\n ````\n >>  #### 1.控件属性\n ````\n   <chuangyuan.ycj.videolibrary.widget.VideoPlayerView\n         android:id=\"@+id/exo_play_context_id\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"match_parent\"\n         app:controller_layout_id=\"@layout/simple_exo_playback_control_view\"\n         app:player_layout_id=\"@layout/simple_exo_view\"\n         app:player_replay_layout_id=\"@layout/custom_play_replay\"\n         app:player_error_layout_id=\"@layout/custom_play_error\"\n         app:player_hint_layout_id=\"@layout/custom_play_btn_hint\"\n         app:player_load_layout_id=\"@layout/custom_exo_play_load\"\n         app:player_gesture_audio_layout_id=\"@layout/custom_gesture_audio\"\n         app:player_gesture_bright_layout_id=\"@layout/custom_gesture_brightness\"\n         app:player_gesture_progress_layout_id=\"@layout/custom_gesture_pro\"\n         app:player_preview_layout_id=\"@layout/exo_default_preview_layout\"\n         app:resize_mode=\"fit\"\n         app:show_timeout=\"3000\"\n         app:surface_type=\"texture_view\"\n         app:fastforward_increment=\"0\"\n         app:rewind_increment=\"0\"\n         app:user_watermark=\"@mipmap/watermark_big\"\n         app:player_list=\"true\"\n         app:use_controller=\"true\"\n         app:player_fullscreen_image_selector=\"@drawable/custom_full_selector\"\n         app:player_back_image=\"@drawable/ic_back_custom\"\n          />\n   ````\n   \n >> #### 2.属性说明 自定义视图的可用属性：\n  \n  | name                              | type      | info                                                                        |\n  |-----------------------------------|-----------|---------------------------------------------------------------------------- |\n  | surface_type                      | enum      | 视频渲染类型 texture_view 和surface_view 枚举类型 默认surface_view          |  \n  | resize_mode                       | enum      | 视频缩放渲染显示方式一共5种                                                 |\n  |                                   | reference | 1.fit          正常模式                                                     | \n  |                                   | reference | 2.fixed_16_9  保持的是视频的比例16:9                                        | \n  |                                   | reference | 3.fixed_4_3   保持的是视频比例4:3                                           |         \n  |                                   | reference | 4.fill           全屏模式，拉伸视频宽高                                     |        \n  |                                   | reference | 4.match          矩阵模式                                                 |      0\n  | player_layout_id                  | reference | (播放器布局):目前默认布局  simple_exo_view.xml                              |\n  | controller_layout_id              | reference | 控制器布局  默认有四种布局                                                  |\n  |                                   | reference | 1.simple_exo_playback_control_view.xml  视频封面控制布局下面,（默认）       | \n  |                                   | reference | 2.simple_exo_playback_list_view.xml.xml 在列表播放使用控制布局              | \n  |                                   | reference | 3.simple_exo_playback_top_view.xml.xml  视频封面控制布局上面                |\n  |                                   | reference | 4.exo_playback_control_view.xml         exo 提供默认风格                    | \n  | player_replay_layout_id           | reference | 设置 自定义重播布局文件                                                     |\n  | player_error_layout_id            | reference | 设置 自定义错误布局文件                                                     |\n  | player_hint_layout_id             | reference | 设置 自定义非wifi提示布局文件                                               |\n  | player_load_layout_id             | reference | 设置 自定义视频加载布局文件                                                 |\n  | player_gesture_audio_layout_id    | reference | 设置 自定义手势音频调节布局                                                 |\n  | player_gesture_bright_layout_id   | reference | 设置 自定义手势亮度调节布局                                                 |\n  | player_gesture_progress_layout_id | reference | 设置 自定义手势进度调节布局                                                 |\n  | player_preview_layout_id          | reference | 设置 自定义封面图布局(默认 exo_default_preview_layout.xml)                  |\n  | player_list                       | boolean   | 设置 是否指定列表播放    默认 false  true 列表播放                          |\n  | player_fullscreen_image_selector  | reference | 设置 自定义全屏按钮selector                                                 |\n  | player_back_image                 | reference | 设置 自定义返回按钮图标                                                     |\n  | default_artwork                   | reference | 设置 封面占位图                                                             |\n  | show_timeout                      | integer   | 设置 控制布局隐藏时间  默认值为3秒                                          |\n  | fastforward_increment             | integer   | 设置 按钮设置快进增量,以毫秒为单位（exo控制布局使用）                       |\n  | rewind_increment                  | integer   | 设置 按钮设置快退增量,以毫秒为单位（exo控制布局使用）                       |\n  | user_watermark                    | reference | 设置 水印图片 默认在右上角                                                  |\n\n   * **注意：**\n     >>    1.列表播放只能选择texture_view 不能选择surface_view，详情页面播放推荐surface_view\n     >>\n     >>    2.自定义全屏按钮selector\n           \n           <selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n                <item android:drawable=\"@drawable/ic_custom_full\" android:state_checked=\"true\" />\n                <item android:drawable=\"@drawable/ic_custom_full_in\" android:state_checked=\"false\" />\n           </selector>\n    \n     >>       \n     >>        \n     >>   3.自定义封面图布局中,也包含封\n  >> #### 3.快速自定义视频进度控件颜色\n   >> [如何自定义视频进度控件--->戳我](https://github.com/yangchaojiang/yjPlay/blob/dev/READMELAYUOT.md#%E4%BA%94%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E8%BF%9B%E5%BA%A6%E6%8E%A7%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89)\n  >> 在app的module的values 文件下-> colors.xml 文件里\n   ```\n     <!--视频加载缓存进度的面图控件。所以自定义封面图布局后，就不要再的控制布局使用封面图控件\n                   颜色-->\n     <color name=\"timeBar_buffered_color\">@color/light_green</color>\n     <!--已经播放过视频的颜色-->\n     <color name=\"timeBar_played_color\">#c63020</color>\n     <!--没有加载过进度的颜色-->\n     <color name=\"timeBar_unplayed_color\">@color/live_yellow</color>\n     <!--视频进度圆点的颜色-->\n     <color name=\"timeBar_scrubber_color\">@color/colorAccent</color>\n     \n   ```\n >> #### 4.修改网络对话框提示文字内容\n      app.strings.xml\n      <string name=\"exo_play_reminder\">您当前网络不是wifi，是否继续观看视频</string>\n      <string name=\"exo_play_wifi_hint_no\">提示</string>\n >> #### 5.开启竖屏全屏模式。\n     ```\n     VideoPlayerView.setVerticalFullScreen(true)\n     ```\n     或者\n     ````\n       exoPlayerManager = new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_GESTURE, videoPlayerView)\n                     .setVerticalFullScreen(true)\n     ````\n\n >> #### 6.在功能清单声明 AndroidManifest.xml\n    在activity节点 加上“android:configChanges=\"orientation|keyboardHidden|screenSize\"”\n     如下实例：\n            <activity android:name=\"chuangyuan.ycj.yjplay.MainListActivity\"\n             android:configChanges=\"orientation|keyboardHidden|screenSize\"\n             android:screenOrientation=\"portrait\">\n\n\n      \n\n ### 3.JAVA 代码\n\n > #### 1 播放控制类\n    1.ExoUserPlayer\n\n > #### 2 VideoPlayerView 控件 可用方法\n  | name                                           | type      | info                                                                        |\n|------------------------------------------------|-----------|---------------------------------------------------------------------------- |\n| setTitle(\"标题\")                               | void      | 设置视频标题                                                               | | |\n| setExoPlayWatermarkImg(R.mipmap.watermark_big) | void      | 设置添加水印图片                                                               | | |\n| setPreviewImage(Bitmap）                       | void      | 设置封面图                                                             | | |\n| setPreviewImage(R.res.image)                   | void      | 设置封面图                                                                | | |\n| setPreviewImage(R.res.image)                   | void      | 设置封面图                                                                | | |\n| getPreviewImage()                              | ImageView | 设置封面图控件                                                               | | |\n| setPreviewImage(R.res.image)                   | void      | 设置封面图                                                                | | |\n| setVerticalFullScreen(true)                    | void      | 开启竖屏全屏                                                           |\n  >>更多方法参考demo用法。\n  \n > #### 3 播放代码 \n                  //实例化\n         ExoUserPlayer exoPlayerManager = new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_MANUAL, videoPlayerView)\n                          .setDataSource(new DataSource(this))\n                          //加载rtmp 协议视频\n                          .setPlayUri(\"rtmp://live.hkstv.hk.lxdns.com/live/hks\")\n                          //加载m3u8\n                          .setPlayUri(\"http://dlhls.cdn.zhanqi.tv/zqlive/35180_KUDhx.m3u8\")\n                          //加载ts.文件\n                          .setPlayUri(\"http://185.73.239.15:25461/live/1/1/924.ts\")\n                          //播放本地视频\n                          .setPlayUri(\"/storage/emulated/0/DCIM/Camera/VID_20170717_011150.mp4\")\n                          //播放列表视频\n                          .setPlayUri(listss);\n                          //设置开始播放进度\n                          .setPosition(1000)\n                          //示例本地路径 或者 /storage/emulated/0/DCIM/Camera/VID_20180215_131926.mp4\n                          .setPlayUri(Environment.getExternalStorageDirectory().getAbsolutePath()+\"/VID_20170925_154925.mp4\")\n                          //开启线路设置\n                          .setShowVideoSwitch(true)\n                          .setPlaySwitchUri(0,test,name)\n                          .setPlaySwitchUri(0, 0, getString(R.string.uri_test_11), Arrays.asList(test), Arrays.asList(name))\n                          //设置播放视频倍数  快进播放和慢放播放\n                          .setPlaybackParameters(0.5f, 0.5f)\n                          //是否屏蔽进度控件拖拽快进视频（例如广告视频，（不允许用户））\n                          .setSeekBarSeek(false)\n                          //设置视循环播放\n                          .setLooping(10)\n                          //视频进度回调\n                           .addOnWindowListener(new VideoWindowListener() {\n                                             @Override\n                                             public void onCurrentIndex(int currentIndex, int windowCount) {\n                                                 Toast.makeText(getApplication(), currentIndex + \"windowCount:\" + windowCount,                                                    Toast.LENGTH_SHORT).show();\n                                             }\n                                         })\n                          .addOnWindowListener(new VideoWindowListener() {\n                              @Override\n                              public void onCurrentIndex(int currentIndex, int windowCount) {\n                                  Toast.makeText(getApplication(), currentIndex + \"windowCount:\" + windowCount, Toast.LENGTH_SHORT)                                             .show();\n                              }\n                          })\n                          .addVideoInfoListener(new VideoInfoListener() {\n                              ·····\n                          })\n                          //创建\n                           .create()\n                             //播放视频\n                          .startPlayer();\n\n   1.实例化播放控制类\n          //播放控制器创建\n           ExoUserPlayer exoPlayerManager = new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_USER, videoPlayerView).create();\n\n   2.自定义你的数据源，后面详细介绍如何自定义数据源类\n\n         ExoUserPlayer exoPlayerManager = new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_MANUAL, videoPlayerView)\n                                                        .setDataSource(new DataSource(this))\n                                                        .create();\n         ExoUserPlayer exoPlayerManager =  new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_MANUAL, videoPlayerView)\n                                                          .setDataSource(mediaSourceBuilder)\n                                                          .create();\n         定义多媒体\n         MediaSourceBuilder   mediaSourceBuilder=new MediaSourceBuilder(this,new DataSource(getApplication()));\n        集成smoothstreaming,dash,hls\n         WholeMediaSource   mediaSourceBuilder=new MediaSourceBuilder(this,new DataSource(getApplication()));  \n         ManualPlayer   exoPlayerManager =new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_MANUAL, videoPlayerView)\n                                                            .setDataSource(mediaSourceBuilder)\n                                                            .create();\n\n > #### 4 VideoPlayerManager.Builder 播放管理类可用方法\n  | name                                 | type | info                                                                        |\n  |--------------------------------------|------|---------------------------------------------------------------------------- |\n  | setPosition(1000)                    | void |  设置开始播放进度                                                               |  \n  | setPosition(windowIndex,1000)        | void |  设置设置当前窗口位置,开始播放进度                                                               |  \n  | setPlayUri(\"http:...m3u8\");          | void |  设置视频路径                                                             |  \n  | setPlayUri(Uri.parse(\"uri\"))         | void |  设置开始播放进度                                                               |  \n  | setShowVideoSwitch(true)             | void |  设置开启多线路设置，默认关闭                                                             |  \n  | setLoadModel(LoadModelType.PERCENR)  | void |  设置视频加载提示显示模式（默认LoadModelType.SPEED (网速模式)）                                                            |  \n  | setPlaybackParameters(2f,1f)         | void |  设置播放视频倍数  快放和慢放播放 小于1 慢放 大于1 快放  \n  | startPlayer()                        | void |  开始播放视频                                                               |  \n   \n   >>更多方法参考demo用法。\n   \n >**注意**\n  >> 1.exoPlayerManager.setPlayUri(Environment.getExternalStorageDirectory().getAbsolutePath()+\"/test.h264\"); 本地视频\n  >> 2.设置多线路播放\n ````     \n            开启多线路设置，默认关闭\n            exoPlayerManager.setShowVideoSwitch(true);\n            支持List列表\n            String [] test={\"http://120.25.246.21/vrMobile/travelVideo/zhejiang_xuanchuanpian.mp4\",\n            \"http://120.25.246.21/vrMobile/travelVideo/zhejiang_xuanchuanpian.mp4\",\n            http://120.25.246.21/vrMobile/travelVideo/zhejiang_xuanchuanpian.mp4\"};\n            String[] name={\"超清\",\"高清\",\"标清\"};\n            exoPlayerManager.setPlaySwitchUri(0,test,name);\n            多分辨路和广告视频设置\n            exoPlayerManager.setPlaySwitchUri(0, 0, getString(R.string.uri_test_11), Arrays.asList(test), Arrays.asList(name));\n        \n ````\n  >>  3.广告视频预览(轻松实现)\n        \n          /**需要添加参数就行**/\n            第一个参数代表是广告视频位置索引\n            exoPlayerManager.setPlayUri(0, \"http://mp4.vjshi.com/2013-07-25/2013072519392517096.mp4\", \"http://mp4.vjshi.com/2013-11-11/1384169050648_274.mp4\");       \n             如果自己在播放视频时特出处理。实现该接口回调\n            视频切换回调处理，进行布局处理，控制布局显示\n            exoPlayerManager.setOnWindowListener(new VideoWindowListener() {\n            @Override\n            public void onCurrentIndex(int currentIndex, int windowCount) {\n                         if (currentIndex == 0) {\n                             //屏蔽控制布局\n                             exoPlayerManager.hideControllerView();\n                             //如果屏蔽控制布局 但是需要显示全屏按钮。手动显示，播放正常时自动还原。无需里出\n                             videoPlayerView.getExoFullscreen().setVisibility(View.VISIBLE);\n                         } else {\n                             //恢复控制布局\n                             exoPlayerManager.showControllerView();\n                         }\n                     }\n             });\n           //跳过广告视频操作\n           exoPlayerManager.next();\n  >> 4.设置点击播放按钮需要处理业务\n    \n      exoPlayerManager.setOnPlayClickListener(new View.OnClickListener() {\n                              @Override\n                              public void onClick(View v) {\n                                  Toast.makeText(MainCustomActivity.this,\"定义点击播放事件\",Toast.LENGTH_LONG).show();\n                                   //处理业务操作 完成后 \n                                  exoPlayerManager.startPlayer();//开始播放\n                    }\n         });\n    \n  >> 5.设置监听回调VideoInfoListener\n   \n         exoPlayerManager.addVideoInfoListener(new VideoInfoListener() {\n                       @Override\n                       public void onPlayStart() {\n                             //开始播放\n                       }\n\n                       @Override\n                       public void onLoadingChanged() {\n                                 //加载变化\n                       }\n\n                       @Override\n                       public void onPlayerError(ExoPlaybackException e) {\n                                 //加载错误\n                      }\n\n                       @Override\n                       public void onPlayEnd() {\n                              //播放结束\n                       }\n                       @Override\n                       public void onRepeatModeChanged(int repeatMode) {\n                           //模式变化\n                       }\n                   });\n   \n   >> 6.覆写Activity和Fragment周期方法\n\n                Override\n                public void onResume() {\n                    super.onResume();\n                    exoPlayerManager.onResume();\n                }\n\n                @Override\n                public void onPause() {\n                    super.onPause();\n                    exoPlayerManager.onPause();\n                }\n\n\n                @Override\n                protected void onDestroy() {\n                    exoPlayerManager.onDestroy();\n                    super.onDestroy();\n                }\n\n                @Override\n                public void onConfigurationChanged(Configuration newConfig) {\n                    exoPlayerManager.onConfigurationChanged(newConfig);//横竖屏切换\n                    super.onConfigurationChanged(newConfig);\n                }\n                \n                @Override\n                public void onBackPressed() {\n                //使用播放返回键监听\n                 if(exoPlayerManager.onBackPressed()){\n                     finish();\n                 }\n                }\n\n\n### 三.[列表使用说明-->戳我](RELEASEVIDEO_LIST.md)\n\n### 四.数据源工厂类\n ####  1.默认数据源\n          缓存 : CacheDataSourceFactory\n          http : DefaultDataSourceFactory,DefaultHttpDataSourceFactory\n          Priority : PriorityDataSourceFactory\n #### 2 ExoPlayer自定义数据源引用(根据自己需求选用)\n      compile 'com.google.android.exoplayer:extension-okhttp:2.9.5'\n      compile 'com.google.android.exoplayer:extension-rtmp:2.9.5'\n      compile 'com.google.android.exoplayer:extension-gvr:2.9.5'\n      compile 'com.google.android.exoplayer:extension-cast:2.9.5'\n      compile 'com.google.android.exoplayer:extension-mediasession:2.9.5'\n      compile 'com.google.android.exoplayer:extension-ima:2.9.5'\n      compile 'com.google.android.exoplayer:extension-leanback:2.9.5'\n\n### 五.[自定义数据源用法-戳我](RELEASESOURCE.md)\n### 六.[自定义布局用法-戳我](READMELAYUOT.md)\n### 七.[自定义MediaSource用法-戳我](RELEASEVIDEO.md) \n### 八.[缓存,加密,视频处理用法-戳我](README_EN_VIDEO.md) \n\n ### 混淆声明\n   -dontwarn chuangyuan.ycj.**\n   \n   -keep class chuangyuan.ycj.** { *;}\n \n \n## [License](https://github.com/yangchaojiang/yjPlay/blob/master/LICENSE)\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n"
        },
        {
          "name": "READMELAYUOT.md",
          "type": "blob",
          "size": 10.17578125,
          "content": " ## 自定义布局\n\n ### 一.布局使用说明\n  1. 布局内容由使用者 任意定义布局\n  2. 布局内必须有一个view的id 必须指定\n  3. 布局内必须有一个view的id 必须指定\n  4. 布局内必须有一个view的id 必须指定\n #### view指定id 说明\n  1. 重播布局→ **<font color=\"red\">android:id=\"@id/exo_player_replay_btn_id\"</font>**\n  2. 错误布局→ **<font color=\"red\">android:id=\"@id/exo_player_error_btn_id\"</font>**\n  3. 非wifi播放提示布局→ **<font color=\"red\">android:id=\"@id/exo_player_btn_hint_btn_id\"</font>**\n  4. 加载布局→ **<font color=\"red\">android:id=\"@id/exo_loading_show_text\"</font>**\n  5. 封面图布局——播放按钮指定ID→ **<font color=\"red\"> android:id=\"@id/exo_preview_play\"<font>**\n  6. 封面图布局——封面图imageView ID→ **<font color=\"red\"> android:id=\"@id/exo_preview_image\"<font>**  \n\n >>注意：\n >>\n >>**1.如果指定不指定id 系统不执行相应事件处理<br/>\n          _2.注意加载布局的显示加载速度的控件”exo_loading_show_text“，控件只能是TextView<br/>\n          _3.如果你需要不显示加载网络提示，不指定控件id**\n\n ### 二.示例如下\n\n  1.-重播布局\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#80000000\"\n    android:clickable=\"true\"\n    android:gravity=\"center\"\n    android:orientation=\"horizontal\"\n    >\n<!-- 示例该控件指定id>exo_player_replay_btn_id -->\n    <ImageView\n        android:id=\"@id/exo_player_replay_btn_id\"\n        android:layout_width=\"30dp\"\n        android:layout_height=\"30dp\"\n        app:srcCompat=\"@drawable/ic_replay_\"\n        android:textColor=\"@android:color/white\"\n        android:layout_marginRight=\"10dp\"\n          />\n\n    <ImageView\n        android:layout_marginLeft=\"10dp\"\n        android:layout_width=\"30dp\"\n        android:layout_height=\"30dp\"\n        app:srcCompat=\"@drawable/ic_share\"\n        android:id=\"@+id/replay_btn_imageView\"\n          />\n</LinearLayout>\n```\n  3.-错误布局\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@drawable/exo_error_bg\"\n    android:clickable=\"true\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\">\n<!-- 示例该控件指定id>exo_player_error_btn_id -->\n    <TextView\n        android:id=\"@id/exo_player_error_btn_id\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:clickable=\"false\"\n        android:drawableBottom=\"@drawable/ic_sentiment_very_dissatisfied_white_48px\"\n        android:drawablePadding=\"5dp\"\n        android:gravity=\"center\"\n        android:shadowColor=\"@color/simple_exo_style_Accent\"\n        android:text=\"自定义错误页\"\n        android:textColor=\"@android:color/white\" />\n</LinearLayout>\n```\n  3.-非wifi播放提示布局\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    android:clickable=\"true\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\">\n\n<!-- 示例该控件指定id>exo_player_btn_hint_btn_id -->\n    <TextView\n        android:id=\"@id/exo_player_btn_hint_btn_id\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"40dp\"\n        android:background=\"@drawable/btn_continue_drawable\"\n        android:drawablePadding=\"5dp\"\n        android:gravity=\"center\"\n        android:padding=\"10dp\"\n        android:shadowColor=\"@color/simple_exo_style_Accent\"\n        android:text=\"自定义流量提示布局\"\n        android:textColor=\"@android:color/white\" />\n</LinearLayout>\n```\n  4.-加载布局   [动画控件→戳我](https://github.com/81813780/AVLoadingIndicatorView)\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:my=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\"\n     >\n    <chuangyuan.ycj.videolibrary.widget.ExoVideoAnim\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        my:circleRadius=\"10dp\"\n        my:cycle=\"600\" />\n\n    <!--下载速度-->\n    <TextView\n        android:id=\"@id/exo_loading_show_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"16sp\" />\n\n</LinearLayout>\n```\n ### 三.手势布局自定义布局（布局不需要指定控件id）\n  1.布局引用\n  ````\n <chuangyuan.ycj.videolibrary.widget.VideoPlayerView\n        android:id=\"@+id/exo_play_context_id\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"200dp\"\n        app:player_gesture_audio_layout_id=\"@layout/custom_gesture_audio\"\n        app:player_gesture_bright_layout_id=\"@layout/custom_gesture_brightness\"\n        app:player_gesture_progress_layout_id=\"@layout/custom_gesture_pro\"\n        ....\n          />\n  ````\n 2.代码使用\n  ````\n  //实现你手势信息回调接口\n    exoPlayerManager.setOnGestureBrightnessListener();//亮度\n    exoPlayerManager.setOnGestureProgressListener(); //进度 \n    exoPlayerManager.setOnGestureVolumeListener(); //音频\n  //以下示例代码  \n  //亮度 \n   exoPlayerManager.setOnGestureBrightnessListener(new OnGestureBrightnessListener() {\n            @Override\n            public void setBrightnessPosition(int mMax, int currIndex) {\n                //显示你的布局\n                videoPlayerView.getGestureBrightnessLayout().setVisibility(View.VISIBLE);\n                //为你布局显示内容自定义内容\n                videoBrightnessPro.setMax(mMax);\n                videoBrightnessImg.setImageResource(chuangyuan.ycj.videolibrary.R.drawable.ic_brightness_6_white_48px);\n                videoBrightnessPro.setProgress(currIndex);\n            }\n        });\n        //进度 \n        exoPlayerManager.setOnGestureProgressListener(new OnGestureProgressListener() {\n            @Override\n            public void showProgressDialog(long seekTimePosition, long duration, String seekTime, String totalTime) {\n                //显示你的布局\n                videoPlayerView.getGestureProgressLayout().setVisibility(View.VISIBLE);\n                exo_video_dialog_pro_text.setTextColor(Color.RED);\n                exo_video_dialog_pro_text.setText(seekTime + \"/\" + totalTime);\n            }\n            //进度完毕设置\n             @Override\n              public void endGestureProgress(long position) {\n                 exoPlayerManager.seekTo(position);\n          }\n        });\n         //音频\n        exoPlayerManager.setOnGestureVolumeListener(new OnGestureVolumeListener() {\n            @Override\n            public void setVolumePosition(int mMax, int currIndex) {\n                //显示你的布局\n                videoPlayerView.getGestureAudioLayout().setVisibility(View.VISIBLE);\n                //为你布局显示内容自定义内容\n                videoAudioPro.setMax(mMax);\n                videoAudioPro.setProgress(currIndex);\n                videoAudioImg.setImageResource(currIndex == 0 ? R.drawable.ic_volume_off_white_48px : R.drawable.ic_volume_up_white_48px);\n            }\n        });\n  ````\n\n ### 四. 封面图布局自定义布局(配合使用使用自定义控制布局)\n  1.布局引用\n  ````\n   <chuangyuan.ycj.videolibrary.widget.VideoPlayerView\n          android:id=\"@+id/exo_play_context_id\"\n          android:layout_width=\"match_parent\"\n          android:layout_height=\"200dp\"\n          app:player_preview_layout_id=\"@layout/exo_default_preview_layout\"\n          ....\n            />\n  ````\n  >>注意:\n  \n  1.播放按钮指定ID→ **<font color=\"red\"> android:id=\"@id/exo_preview_play\"<font>**\n  2.封面图imageView ID→ **<font color=\"red\"> android:id=\"@id/exo_preview_image\"<font>**\n \n\n  3.注意事项：\n  * 1.你不需要关心手势操作后，布局隐藏问题。自动隐藏布局，专注你需要显示内容就可以了。\n  * 2.手势布局可以自定义其中一个或者两个布局。有使用者自己决定需要自定义布局。\n  \n ### 五.视频播放进度控件自定义\n  可以添加属性来自定义视图。可用属性：\n \n | name                      | type      | info                                                      |\n |------------------------   |-----------|---------------------------------------------------------- |\n | scrubber_drawable         | reference | 设置视频当前播放圆点的自定义资源可以图片                  |\n | scrubber_color            | color     | 设置视频进度圆点的颜色                                    |\n | buffered_color            | color     | 设置视频加载缓存进度的颜色                                |\n | unplayed_color            | color     | 设置没有加载过进度的颜色                                  |\n | played_color              | color     | 设置已经播放过视频的颜色                                  |\n | ad_marker_color           | color     | 使用google广告sdk标记的颜色                               |\n | played_ad_marker_color    | color     | 使用google广告sdk播放后标记的颜色                         |\n | bar_height                | dimension | 设置视频进度显示高度                                      |\n | touch_target_height       | dimension | 设置 触摸进度条显示的高度（不可用）                       |\n | ad_marker_width           | dimension | 使用google广告sdk 标记段宽度                              |\n | scrubber_enabled_size     | dimension | 设置 视频进度条显示右边距大小                             |\n | scrubber_dragged_size     | dimension | 设置视频进度条显示左边距大小                              |"
        },
        {
          "name": "README_EN_VIDEO.md",
          "type": "blob",
          "size": 6.1533203125,
          "content": " ## 加密视频\n ### 一.使用自带缓存加密\n  1. 实现DataSourceListener 接口  如下:\n  \n   >>默认:   new DefaultCacheDataSourceFactory(context,100000000,\"1234567887654321\".getBytes(),eventListener);\n   \n   >>自定义:  new CacheDataSourceFactory(simpleCache, new JDefaultDataSourceFactory(context),0,4 * 1024 * 1024);\n ````\npublic class OfficeDataSource implements DataSourceListener {\n    public static final String TAG = \"OfficeDataSource\";\n    private CacheDataSource.EventListener eventListener;\n    private Context context;\n    public OfficeDataSource(Context context, CacheDataSource.EventListener eventListener) {\n        this.context = context;\n        this.eventListener = eventListener;\n    }\n    @Override\n    public DataSource.Factory getDataSourceFactory() {\n          //采用默认\n          return new DefaultCacheDataSourceFactory(context,100000000,\"1234567887654321\".getBytes(),eventListener);\n        //自定义配置\n        LeastRecentlyUsedCacheEvictor evictor = new LeastRecentlyUsedCacheEvictor(1024*1024*1024 * 1024);\n        SimpleCache simpleCache = new SimpleCache\n                //设置你缓存目录\n                (new File(context.getExternalCacheDir(), \"media\"),\n                 //缓存驱逐器\n                  evictor,\n                  // 缓存文件加密,那么在使用AES / CBC的文件系统中缓存密钥将被加密  密钥必须是16字节长\n                  //可以为空\n                  \"1234567887654321\".getBytes());\n        //使用缓存数据源工厂类\n        return new CacheDataSourceFactory(simpleCache,\n                //设置下载数据加载工厂类\n                new JDefaultDataSourceFactory(context),\n                //设置缓存标记\n                0,\n                //最大缓存文件大小,不填写 默认2m \n                 4 * 1024 * 1024);\n    }\n }\n ````\n\n \n ### 二.使用离线下载帮助类 AES加密视频\n  1.实例化离线下载帮助类 有关类:如下\n >>    1.全文件下载使用ExoWholeDownLoadManger,ExoWholeDownloadTracker\n >>\n >>    2.常规视频质直链的文件使用,ExoDownLoadManger,DownloadTracker\n >>\n >>    ExoWholeDownLoadManger和ExoDownLoadManger使用方法一样。 ExoWholeDownLoadManger支持流媒体下载\n >>    ExoWholeDownLoadManger,内部已经集成(HlsDownloadHelper,DashDownloadHelper,SsDownloadHelper,ProgressiveDownloadHelper)。    \n >>    ExoDownLoadManger只有（ProgressiveDownloadHelper）\n \n  示例代码如下:\n```\n   //实例化下载管理类\n   ExoDownLoadManger.getSingle().initDownloadManager(this,DemoDownloadService.class);\n\n```\n 2.实现下载乃文件Service服务\n```\n/** 下载媒体的服务. */\npublic class DemoDownloadService extends DownloadService {\n  //前台通知的通知ID。, 一定不\n  private static final int FOREGROUND_NOTIFICATION_ID = 1;//\n\n //用于创建低优先级通知通道的ID，或者如果应用将根据需要创建通知通道，则为{null}。, 如果指定，则每个包必须是*唯一的，如果该值太长，则该值可能会被截断\n  private static final String CHANNEL_ID = \"download_channel\";//通知栏\n  //前台通知更新之间的最大间隔，以毫秒为单位。\n  public static final long DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL = 1000;\n  private static final int JOB_ID = 1;\n  //则该通道的用户可见名称的字符串资源标识符。, 建议的最大长度是40个字符;, 值*可能会被截断，如果它太长\n private  static  final  int hannel_name  =R.string.exo_download_notification_channel_name;\n  public DemoDownloadService() {\n    super(\n        FOREGROUND_NOTIFICATION_ID,\n        DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL,\n        CHANNEL_ID,\n            hannel_name);\n  }\n\n  @Override\n  protected DownloadManager getDownloadManager() {\n   // return ((App) getApplication()).getDownloadManager();\n    return ExoDownLoadManger.getSingle().getDownloadManager();\n  }\n\n  //得到调度器\n  @Override\n  protected PlatformScheduler getScheduler() {\n    return Util.SDK_INT >= 21 ? new PlatformScheduler(this, JOB_ID) : null;\n  }\n\n  //获得前台通知\n  @Override\n  protected Notification getForegroundNotification(TaskState[] taskStates) {\n    return DownloadNotificationUtil.buildProgressNotification(\n        /* context= */ this,\n        R.drawable.exo_controls_play,\n        CHANNEL_ID,\n        /* contentIntent= */ null,\n        /* message= */ null,\n        taskStates);\n  }\n\n  /***\n   * 更新进度\n   * ***/\n  @Override\n  protected void onTaskStateChanged(TaskState taskState) {\n    if (taskState.action.isRemoveAction) {\n      return;\n    }\n    Notification notification = null;\n    if (taskState.state == TaskState.STATE_COMPLETED) {\n      notification =\n          DownloadNotificationUtil.buildDownloadCompletedNotification(\n              /* context= */ this,\n              R.drawable.exo_controls_play,\n              CHANNEL_ID,\n              /* contentIntent= */ null,\n              Util.fromUtf8Bytes(taskState.action.data));\n    } else if (taskState.state == TaskState.STATE_FAILED) {\n      notification =\n          DownloadNotificationUtil.buildDownloadFailedNotification(\n              /* context= */ this,\n              R.drawable.exo_controls_play,\n              CHANNEL_ID,\n              /* contentIntent= */ null,\n              Util.fromUtf8Bytes(taskState.action.data));\n    }\n    int notificationId = FOREGROUND_NOTIFICATION_ID + 1 + taskState.taskId;\n    NotificationUtil.setNotification(this, notificationId, notification);\n  }\n}\n\n```\n  4.开始下载文件\n  \n````\n //得到下载跟踪器\n  DownloadTracker  downloadTracker = ExoDownLoadManger.getSingle().getDownloadTracker();\n //下载文件\n downloadTracker.toggleDownload(this, getPackageName(), Uri.parse(getString(R.string.uri_test_8)), \"mp4\");\n //是否已经下载\n  downloadTracker.isDownloaded(Uri.parse(getString(R.string.uri_test_8))\n````  \n 2.使用,自动缓存你服务器视频资源。视频还是原来传入网络视频链接,自动识别该视频有缓存文件。\n ````\n  //实例化播放器控制类,传入您自定义数据实例\n  exoPlayerManager = new GestureVideoPlayer(this, videoPlayerView,new OfficeDataSource(this,null));\n ````\n \n ### 三.使用自定义下载加密查看demo[OfficeDetailedActivity实例]()\n\n\n\n \n \n \n  \n "
        },
        {
          "name": "RELEASENOTES.md",
          "type": "blob",
          "size": 14.2373046875,
          "content": " ## 更新日志\n   #### 2.3.61\n    * ExoPlayer升级内核版本[#2.11.7](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n  #### 2.3.51\n   * ExoPlayer升级内核版本[#2.10.5](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES) \n  #### 2.3.50\n   * ExoPlayer升级内核版本[#2.10.4](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n   *  [#2.10.4](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n  #### 2.3.40\n   * ExoPlayer升级内核版本[#2.10.1](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n  #### 2.3.32\n   * ExoPlayer升级内核版本[#2.9.6](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n  #### 2.3.30\n   * ExoPlayer升级内核版本[#2.9.5](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n  #### 2.3.15\n #### 2.3.17\n   * 修复手势动无效。\n #### 2.3.15\n   * ExoPlayer升级内核版本[#2.9.2](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n   * 升级ffmpeg的版本与exoplayer版本对其。重新生成so.文件。\n   * 修改Demo部分代码。\n #### 2.3.13\n   * 修复列表播放后进入详情页播放失败[213](https://github.com/yangchaojiang/yjPlay/issues/213)。\n #### 2.3.12\n   * [Error when orientation change ](https://github.com/yangchaojiang/yjPlay/issues/207)。\n   * 修复列表详情页面返回可能Ui错误。\n #### 2.3.11\n   * 增加竖屏全屏播放适配[200](https://github.com/yangchaojiang/yjPlay/issues/200)。\n   * 增加电视盒子播放适配[187](https://github.com/yangchaojiang/yjPlay/issues/187)。\n   * 增加音频播放适配。\n   * 其他细节优化。\n   * 删除 ManualPlayer和GestureVideoPlayer两个控制播放器类。\n   * 删除 VideoUI module。\n   * 播放器控制类和Ui再度解耦。\n   * 修复修复 build apk  资源文件没有对齐[202](https://github.com/yangchaojiang/yjPlay/issues/202)。\n   * ExoPlayer升级内核版本[#2.9.1](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES\n #### 2.3.0\n   * 修改（6.0以下）横屏切换延迟\n   * 弃用GestureVideoPlayer和ManualPlayer,改用ExoUserPlayer.统一管理\n   * 其他细节优化。\n   * ExoPlayer升级内核版本[#2.9.0](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES)\n #### 2.2.19\n   * 修复（texture_view模式）切换后台返回播放画面不更新问题。\n   * 增加当时视频宽度小于高度时，视频旋转适配高度（（texture_view模式））设置有效。\n   * 其他细节优化。\n #### 2.2.17\n   * 修复手势默认不开启手势。\n   * 优化加载布局UI体验。 \n   * 其他细节优化。\n   * ExoPlayer升级内核版本[#2.8.4](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES \n #### 2.2.13\n   * 增加关于缓存 签名url的方法[160](https://github.com/yangchaojiang/yjPlay/issues/160)。 \n   * 增加默认缓存和下载自定义key\n   * 修复android.view.ContextThemeWrapper 转换问题[159](https://github.com/yangchaojiang/yjPlay/issues/159)。\n   * 修复视频模式为（surface_view）视频大小显示不正确。\n   * 其他优化细节。  \n #### 2.2.11\n   * 1.解决6.0安卓且画切换横竖屏，卡顿延迟。  \n   * 2.ExoPlayer升级内核版本[#2.8.3](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#283) \n   * 3.其他优化细节。 \n   #### 2.1.91\n   * 1.增加裂流式API方式调用。  \n   * 2.优化内部监听事件回调。\n   * 3.增加控制隐藏返回按钮[148](https://github.com/yangchaojiang/yjPlay/issues/148)。   \n   * 4.增加视频进度回调[138](https://github.com/yangchaojiang/yjPlay/issues/138)。   \n   * 5.增加背景，自定义[64](https://github.com/yangchaojiang/yjPlay/issues/64)。    \n   * 6.修复NullPointerException[149](https://github.com/yangchaojiang/yjPlay/issues/149)。 \n   * 7.修复activity会导致内存泄漏,没有释放[147](https://github.com/yangchaojiang/yjPlay/issues/147)。\n   #### 2.1.85\n   * 1.优化内部监听事件回调。\n   * 2.修复bug[137](https://github.com/yangchaojiang/yjPlay/issues/137)。 \n   #### 2.1.83\n   * 1.ExoPlayer升级内核版本[#2.8.2](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#282) \n   * 2.修复bug[132](https://github.com/yangchaojiang/yjPlay/issues/132)。 \n   #### 2.1.80\n   * 1.ExoPlayer升级内核版本[#2.8.1](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#28) \n   * 2.其他优化细节。 \n   * 3.支持流媒体文件下载缓存[119,107](https://github.com/yangchaojiang/yjPlay/issues/119)。 \n   * 4.支持流媒体文件下载缓存[107](https://github.com/yangchaojiang/yjPlay/issues/107)。    \n   #### 2.1.74\n   * 1.修复bug[113](https://github.com/yangchaojiang/yjPlay/issues/113)。 \n   * 1.优化锁屏按钮。   \n   #### 2.1.70\n   * 1.修复bug[104](https://github.com/yangchaojiang/yjPlay/issues/104)。 \n   #### 2.1.70\n   * 1.增加能否播放在底部加一个实时进度[103](https://github.com/yangchaojiang/yjPlay/issues/104)。 \n   * 2.优化api使用说明。\n   * 3.增加进度控件自定义控件说明[--》戳我](https://github.com/yangchaojiang/yjPlay/blob/dev/READMELAYUOT.md#%E4%BA%94%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E8%BF%9B%E5%BA%A6%E6%8E%A7%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89)  \n   * 4.升级内核版本[#2.7.3](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#273)\n   * 5.其他优化。\n   #### 2.1.58\n   * 1.修复bug[103](https://github.com/yangchaojiang/yjPlay/issues/103)。 \n   * 2.修复bug[101](https://github.com/yangchaojiang/yjPlay/issues/101)。 \n   #### 2.1.51\n  * 1.修复[之前版本]单多分辨率线路设置点击没有效果。\n  #### 2.1.50\n   * 1.升级内核版本[#2.7.2](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#272)\n   * 2.优化自定义封面布局让播放封面随心配置。\n   * 3.拆分VideoPlayerView和BaseView减少代码量，更容易管理。\n   * 4.修复[2.1.41版本]自定义全屏按钮没有效果。\n   * 5.增加弹幕布局拓展。\n   * 5.优化列表保存视频进度问题.\n   * 6.其他优化。 \n  #### 2.1.41\n   * 1.升级内核版本[#2.7.1](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#271)\n   * 2.优化自定义封面布局让播放封面随心配置。\n   * 3.增加点击播放时控制是否显示封面图还是隐藏。\n   * 4.控制布局上下布局显示隐藏动画完善。\n   * 5.其他优化。\n  #### 2.1.37\n  * 1.修复[setPlaybackParameters（f，f） 没有效果#82](https://github.com/yangchaojiang/yjPlay/issues/82)  \n  #### 2.1.35\n   * 1.移除简单加密和aes加密处理。改用离线加载类统一处理。\n   * 2.完善离线下载类，移除内部多余类。\n   * 3.修复手势滑动左右问题[#78](https://github.com/yangchaojiang/yjPlay/issues/78)。\n   * 4.修复手势滑动进度还原问题[#76](https://github.com/yangchaojiang/yjPlay/issues/76)。\n   * 4.修复手势滑动进度还原问题[#76](https://github.com/yangchaojiang/yjPlay/issues/76)。\n   * 5.修复d第一次加载不出现加载效果[#79](https://github.com/yangchaojiang/yjPlay/issues/76)。\n  #### 2.1.3\n   * 1.升级内核版本[#2.7.0](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#270)\n   * 2.增加视频快进快退控制处理。\n   * 3.依赖v7 [25.3.1]版本升级到[26.1.0]版本。\n   * 4.其他优化。\n  ### 1.9.96\n   * 1.列表点击按钮无法播放bug[#74](https://github.com/yangchaojiang/yjPlay/issues/74)。\n  ### 1.9.94\n   * 1.完善切换横屏和竖屏，还原状态。\n   * 2.增加列表播放没有完成记录进度保存和复用问题。\n   * 3.其他优化。\n ### 1.9.93\n   * 1.修复播放源为DASH类型返回错误[#62](https://github.com/yangchaojiang/yjPlay/issues/62)。\n  \n ### 1.9.91\n   * 1.增加列表到详情播放完美过滤。无需二次加载[#58](https://github.com/yangchaojiang/yjPlay/issues/58)。\n   * 2.多线路选择增加高亮显示[#61](https://github.com/yangchaojiang/yjPlay/issues/61)。\n   * 3.优化屏全屏处理。\n   * 4.升级内核版本[#2.6.1](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#261)\n   * 5.修复bug[#31](https://github.com/yangchaojiang/yjPlay/issues/31)\n   * 6.改进mediaSource实例化方式。\n ### 1.9.83\n   * 1.新增加广告和多分辨率同时支持[#35](https://github.com/yangchaojiang/yjPlay/issues/35)。\n   * 2.增加自定义预览布局设置，更容易实现自定义视频封面图UI样式。\n   * 3.修改对视频链接类型判断bug[#42](https://github.com/yangchaojiang/yjPlay/issues/42)。\n   * 4.优化广告可能出现没有切换视频下拖拽进度条快进，出现多次回调处理。\n   * 5.修复播放完成后，可能按钮没有显示问题。\n   * 6.优化视频图封面图代码控制，更简介处理。\n   * 7.其他代码修复。 \n   * 8.demo增加英语语言。\n ### 1.9.8\n   * 1.增加离线下载助手(支持加密处理)。\n   * 2.增加锁屏功能和控住布局显示和隐藏动画效果。\n   * 3.升级内核版本[2.6.0](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#260)\n   * 4.增加全屏和返回按钮图标自定义。\n   * 5.修复缓存问题实现真正实现离线缓存播放。\n   * 6.修复bug[#31](https://github.com/yangchaojiang/yjPlay/issues/31)\n   * 7.其他逻辑优化和代码分离。\n   * 8.优化使用说明。\n ### 1.9.5\n   * 1.分离核心处理非为精简版和完整版\n   * 2.增加两种本地加密视频处理处理。\n   * 3.[修复demo中全屏播放，左右滑动会导致app崩溃](https://github.com/yangchaojiang/yjPlay/issues/29) \n   * 4.全屏按钮显示不对.\n ### 1.7.0\n   * 1.开放自定义MediaSource。\n   * 2.开放手势布局自定义样式。\n   * 3.优化播放管理类结构。 \n   * 4.升级内核版本[r.2.5.4](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#r254)\n ### 1.5.92\n   * 1.优化多线路UI显示\n   * 2.修复多线路可能会选择奔溃\n   * 3.布局结构优化，布局层次少一级。\n ### 1.5.9\n   * 1.增加广告视频处理和UI控制。\n   * 2.增加视频倍数播放api。\n   * 3.优化全屏按钮ui控制。\n   * 4.增加手势操作设置api。\n   * 5.点击开始播放视频占位图处理（提示了非wifi 提示不隐藏占位图）\n   * 6.修复bug[ManualPlayer.reset();的时候提示错误](https://github.com/yangchaojiang/yjPlay/issues/23)\n   * 7.修复其他已知问题.\n  ### 1.5.7.2\n   * 1.修复bug#20(https://github.com/yangchaojiang/yjPlay/issues/20)\n   * 2.修复bug#19(https://github.com/yangchaojiang/yjPlay/issues/19)\n   * 3.规范代码注释doc,增加的注解检查\n  ### 1.5.7\n   * 1.增加加载模式类型（下载网速模式和百分比模式）。\n   * 2.删除无用string资源（减小100k左右）。\n   * 3.优化 基类（ExoUserPlayer 与view）之间耦合度。\n   * 4.优化视频播放时和暂停播放，手机屏幕常亮问题。\n  ### 1.5.6\n   * 1.增加新api方法（循环播放， 集合和数组，视频组合播放，播放状态，控制布局操作，等）。\n   * 2.增加点击开始按钮自定义事件，（需求开始自己业务处理后，开始播放视频）。\n   * 3.修复列表点击再次播放视频控制布局展示错误**bug**。\n   * 4.优化默认数据源支持本地视频的资源。\n   * 5.优化控制类和播放View的之间代码解耦,更简洁[ManualPlayer](https://github.com/yangchaojiang/yjPlay/blob/master/VideoPlayModule/src/main/java/chuangyuan/ycj/videolibrary/video/ManualPlayer.java)\n   * 6.支持选择广告出现视频位置（不限于开头，也可以视频末尾）。\n   * 7.修复其他已知问题(重播布局返回按钮不显示**bug**)，提高稳定性。\n   ### 1.5.5\n   * 1.升级内核版本[r.2.5.3](https://github.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#r253)\n   * 2.优化全屏切换代码处理，切回竖屏虚拟导航键不现实按钮问题。\n   * 3.增加错误布局,重播布局，提示布局自定义，更灵活实现自己布局样式。\n   * 4.优化GestureVideoPlayer 业务和view 解耦处理，更简洁，业务更清晰.。\n   * 5.优化视频封面图问题，支持封面图 在控制布局下面和上面，自己选择合适.。\n   * 6.增加默认封面图在控制布局上面。\n   ### 1.5.4\n   * 1.优化不播放的息屏\n   * 2.调整返回返回键处理 exoPlayerManager.onBackPressed()和VideoPlayerManager.getInstance().onBackPressed()  返回为true 退出界面\n   * 3.删除返回事件回调处理 改用 onBackPressed() 返回处理， true 正常出退出界面 false 切换到竖屏\n   * 4 修复 1.5.2 和 1.5.1 无法引用问题\n   ### 1.5.1\n   * 1.修复列表播放缓慢滑动销毁，造成黑屏和控制布局错误等问题\n   * 2.暴露获取进度条控件方法getTimeBar()\n   * 3.修复其他问题等\n   ### 1.4.9\n   * 1.升级内核为[r.2.5.2](https://githhub.com/google/ExoPlayer/blob/release-v2/RELEASENOTES.md#r252)\n   * 2.对齐android 依赖库版本对齐，移除\"25.4.0\"对齐\"25.3.1\"版本， \"25.4.0\"导致部分用户无法引用\n   ### 1.4.8\n   * 1 修改自定义加载源类，不再用单利模式,采用控件实使用进行调用\n   ### 1.4.7\n   * 1 修复1.4.6切换bug\n   ### 1.4.6\n   * 1 增加视频列表播放支持\n   * 2 增加VideoPlayerManager 列表播放管理类\n   * 3 增加自定义进度条控件\n   * 4 修复bug\n   ### 1.4.5\n   * 1 增加视频缓存功能\n   * 2 去掉ExoUserPlayer 构造方法设置uri\n   * 3 修复已知问题\n   * 4 增加自定义数据源工厂类，实现自己文件数据源类型\n   * 5 升级内核版本\n   ### 1.4.4\n   * 1  修复线路切换文字不改变稳定\n   * 2  增加线路提供方法。集合和数组\n   * 3  提供布局设置水印,修复水印方法，去掉默认水印\n   ### 1.4.3\n   * 1  修改重新播放页面\n   * 2  增加进度默认设置\n   * 3  增加占位图设置\n   * 4  修复全屏事问题\n   ###  1.4.1\n   * 1 修复其他问题,\n   * 2 还原 自定义属性\n   ### 1.4.0\n   * 1 增加视频清晰度切换，在横屏\n   * 2 修改手势类，之间业务剥离出来\n   * 3 修复其他问题,\n   * 4 升级内核版本，布局和业务分离处理\n   * 5 重新整理项目结构，不兼容1.4.0 版本之前\n\n   ### 1.3.0\n   * 1.增加播放数据流量提醒框，增加网络变化监听\n   * 2.toobar状态的隐藏和显示,  增加v7依赖\n   * 3.直播隐藏进度条\n   * 4.两个视频切换，广告视频，进度处理\n   * 5.修复已知bug.简化处理\n"
        },
        {
          "name": "RELEASESOURCE.md",
          "type": "blob",
          "size": 2.8857421875,
          "content": " ### 数据源工厂类\n ####  1.默认数据源\n  >>        缓存 : CacheDataSinkFactory,CacheDataSourceFactory\n  >>         http : DefaultDataSourceFactory,DefaultHttpDataSourceFactory\n  >>         Priority : PriorityDataSourceFactory\n#### 2 自定义数据源引用\n\n  >>      compile 'com.google.android.exoplayer:extension-okhttp:2.8.4'\n  >>       compile 'com.google.android.exoplayer:extension-rtmp:2.8.4'\n\n>>#### 3.自定义数据源工厂类:\n   * 实现接口 DataSourceListener  然后在getDataSourceFactory方法里 自定义 数据源\n   * 在你使用播放控件时中实例化类\n\n   >>       exoPlayerManager = new VideoPlayerManager.Builder(VideoPlayerManager.TYPE_PLAY_MANUAL, videoPlayerView)\n   >>                                                                                     .setDataSource(mediaSourceBuilder)\n   >>                                                                                     .create();\n\n   * demo代码:\n   ``````\n        public class DataSource implements DataSourceListener {\n             public static final String TAG = \"DataSource\";\n              private Context context;\n              public   DataSource (Context context){\n                  this.context=context;\n               }\n              @Override\n              public com.google.android.exoplayer2.upstream.DataSource.Factory getDataSourceFactory() {\n                   OkHttpClient  okHttpClient = new OkHttpClient();\n                  OkHttpDataSourceFactory OkHttpDataSourceFactory=    new OkHttpDataSourceFactory(okHttpClient, Util.getUserAgent(context, context.getApplicationContext().getPackageName()),new DefaultBandwidthMeter() );\n                      //使用OkHttpClient 数据源工厂\n                    //return  OkHttpDataSourceFactory; ;\n                    //默认数据源工厂\n                    // return new JDefaultDataSourceFactory(context);\n                    // Rtmp数据源工厂 对 Rtmp 协议支持\n                    // return  new RtmpDataSourceFactory();\n                   //缓存使用和组合使用\n                    LeastRecentlyUsedCacheEvictor evictor = new LeastRecentlyUsedCacheEvictor(1000000000);\n                   SimpleCache   simpleCache = new SimpleCache(new File(context.getCacheDir(), \"media\"), evictor);\n                   //缓存数据源使用，内部使用DefaultDataSourceFactory数据源工厂类\n                   // return  new CacheDataSinkFactory(simpleCache,10000);\n                   // 配合okHttp数据源工厂类\n                   return  new CacheDataSourceFactory(simpleCache, OkHttpDataSourceFactory);\n                   //使用配合默认数据源红工厂类\n                  // return  new CacheDataSourceFactory(simpleCache, new JDefaultDataSourceFactory(context));\n                   //使用提供缓存数据源工厂类\n                  // return new CacheDataSourceFactory(context,1000,1000);\n                 }\n       }\n   ``````\n   \n   \n"
        },
        {
          "name": "RELEASEVIDEO.md",
          "type": "blob",
          "size": 3.294921875,
          "content": " ## 开放自定义MediaSource\n ### 1.实例化\n ```\n //实例化\n  MediaSourceBuilder  mediaSourceBuilder=new MediaSourceBuilder(this,new DataSource(getApplication()));\n  exoPlayerManager = new ExoUserPlayer(this,mediaSourceBuilder, videoPlayerView);\n ```\n ### 2.使用自定义MediaSource 代码如下\n * 1加载字幕文件 \n ```\n //构建视频媒体资源.\n MediaSource videoSource = new ExtractorMediaSource(videoUri, ...);\n //构建子标题媒体源\n Format subtitleFormat = Format.createTextSampleFormat(\n     null, // 跟踪的标识符。可能是null。\n     MimeTypes.APPLICATION_SUBRIP, // mime类型。必须正确设置\n     selectionFlags, // 跑道的选择标志。\n     language); // 字幕语言。可能是null。\n     \n MediaSource subtitleSource = new SingleSampleMediaSource(subtitleUri, dataSourceFactory, subtitleFormat, C.TIME_UNSET);\n // 播放带有副标题的视频\n MergingMediaSource mergedSource = new MergingMediaSource(videoSource, subtitleSource);\n  \n      //设置\n       mediaSourceBuilder.setMediaSource(mergedSource);\n     \n ```\n * 2 播放的视频序列\n   ```\n   MediaSource firstSource = new ExtractorMediaSource(firstVideoUri, ...);\n   MediaSource secondSource = new ExtractorMediaSource(secondVideoUri, ...);\n   //播放第一个视频，然后是第二个视频.\n   ConcatenatingMediaSource concatenatedSource =\n       new ConcatenatingMediaSource(firstSource, secondSource);\n   \n    mediaSourceBuilder.setMediaSource(mergedSource);\n   ```\n * 3.高级构成互相嵌套\n   可以进一步组合使用的复合mediasources更不寻常的案件。给定两个视频A和B，下面的示例演示如何loopingmediasourceconcatenatingmediasource和可一起使用来播放所述序列(a，a，b)。\n ```\n MediaSource firstSource = new ExtractorMediaSource(firstVideoUri, ...);\n MediaSource secondSource = new ExtractorMediaSource(secondVideoUri, ...);\n // Plays the first video twice.\n LoopingMediaSource firstSourceTwice = new LoopingMediaSource(firstSource, 2);\n // Plays the first video twice, then the second video.\n ConcatenatingMediaSource concatenatedSource =\n     new ConcatenatingMediaSource(firstSourceTwice, secondSource)\n ```\n 或者 \n 以下示例是等效的，表明可以存在一种以上的方式实现相同的结果。\n ````\n MediaSource firstSource = new ExtractorMediaSource(firstVideoUri, ...);\n MediaSource secondSource = new ExtractorMediaSource(secondVideoUri, ...);\n // Plays the first video twice, then the second video.\n ConcatenatingMediaSource concatenatedSource =\n     new ConcatenatingMediaSource(firstSource, firstSource, secondSource);\n ````\n### 3.[更多MediaSource使用→戳我查看](https://google.github.io/ExoPlayer/guide.html)\n\n### 4.使用自定义MediaSource注意实现：\n * 1.调用方法 mediaSourceBuilder.setMeiDiaUri()方法，就不要使用 exoPlayerManager.setPlayerUri()方法，二者选其一就可以。\n * 2.使用自定义MediaSourceBuilder是不会自动播放视频，必须说动调用 exoPlayerManager.startPlayer()。开始播放视频。\n * 2.使用自定义MediaSourceBuilder是不会自动播放视频，必须说动调用 exoPlayerManager.startPlayer()。开始播放视频。\n * 2.使用自定义MediaSourceBuilder是不会自动播放视频，必须说动调用 exoPlayerManager.startPlayer()。开始播放视频。\n * 3.重要的事说三遍。\n \n \n \n  \n "
        },
        {
          "name": "RELEASEVIDEO_LIST.md",
          "type": "blob",
          "size": 4.25390625,
          "content": " ### 三.列表\n \n   1.列表播放\n   *  1.在列表控件使用属性 ”app:controller_layout_id=\"@layout/simple_exo_playback＿list_view\"“  //提供默列表控制布局\n  \n   *  2.player_list=\"true\" 设置为true 开启列表模式\n  \n   *  3.设置列表item 没有播放完成当前视频播放进度,不然不会保存播放进度---> userPlayer.setTag(getAdapterPosition());\n   \n   *  3.设置列表item 没有播放完成当前视频播放进度,不然不会保存播放进度---> userPlayer.setTag(getAdapterPosition());\n  \n   *  3.设置列表item 没有播放完成当前视频播放进度,不然不会保存播放进度---> userPlayer.setTag(getAdapterPosition());\n  \n   *  4.demo:\n       \n       \n              public class VideoAdapter extends RecyclerView.Adapter<VideoAdapter.VideoViewHolder> {\n              .......\n              @Override\n              public VideoViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n                  View itemView = LayoutInflater.from(mContext).inflate(R.layout.item_video1, parent, false);\n                  return new VideoViewHolder(itemView);\n              }\n              @Override\n              public void onBindViewHolder(VideoViewHolder holder, int position) {\n                  String video = mVideoList.get(position);\n                  holder.bindData(video);\n              }\n\n              public class VideoViewHolder extends RecyclerView.ViewHolder {\n                  ExoUserPlayer userPlayer;\n                  VideoPlayerView playerView;\n                  public VideoViewHolder(View itemView) {\n                      super(itemView);\n                      //初始化控件\n                      playerView = (VideoPlayerView) itemView.findViewById(R.id.item_exo_player_view);\n                      userPlayer = new ManualPlayer((Activity) mContext, playerView);\n                  }\n                 /***绑定数据源***/\n                  public void bindData(String videoBean) {\n                      userPlayer.setTitles(\"\" + getAdapterPosition());\n                      userPlayer.setPlayUri(videoBean);\n                      //设置列表item播放当前视频播放进度.不然不会保存视频播放进度\n                      userPlayer.setTag(helper.getAdapterPosition());\n                      Glide.with(mContext) .load(\"....\") .into(playerView.getPreviewImage());\n                  }\n              }\n              \n              \n   >>注意 [更多adapter 实例请参考demo程序](https://github.com/yangchaojiang/yjPlay/tree/master/app/src/main/java/chuangyuan/ycj/yjplay/adapter)\n              \n  2.列表播放周期方法 列表在Activity或者Fragment  实现相应周期方法\n  >> 在viewPager使用，不要在实现 Fragment onDestroy（）方法周期， onPause()也会释放资源。\n  >> onDestroy 用户页面销毁处理,不是释放资源.\n  >> onDestroy 用户页面销毁处理,不是释放资源.\n  >> onDestroy 用户页面销毁处理,不是释放资源.\n  \n                      @Override\n                      protected void onPause() {\n                          super.onPause();\n                          VideoPlayerManager.getInstance().onPause();\n                      }\n                      @Override\n                       protected void onResume() {\n                          super.onResume();\n                          VideoPlayerManager.getInstance().onResume();\n                      }\n                      @Override\n                       public void onConfigurationChanged(Configuration newConfig) {\n                          //横竖屏切换\n                           VideoPlayerManager.getInstance().onConfigurationChanged(newConfig);\n                           super.onConfigurationChanged(newConfig);\n                       }    \n                                  \n                      @Override\n                      protected void onDestroy() {\n                          super.onDestroy();\n                          VideoPlayerManager.getInstance().onDestroy();\n                      }\n                      @Override\n                      public void onBackPressed() {\n                          //返回监听类\n                          if (VideoPlayerManager.getInstance().onBackPressed()){\n                              finish();\n                          }\n                      }\n\n  \n \n \n \n  \n "
        },
        {
          "name": "SSUE_TEMPLATE",
          "type": "blob",
          "size": 0.08203125,
          "content": "使用版本：例如(1.9.93)\n\n描述：最好是错误log日志或者发生环境.\n"
        },
        {
          "name": "VideoPlayModule-Lite",
          "type": "tree",
          "content": null
        },
        {
          "name": "VideoPlayModule",
          "type": "tree",
          "content": null
        },
        {
          "name": "adb",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "app-release.apk",
          "type": "blob",
          "size": 13862.03125,
          "content": ""
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.0595703125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.novoda:bintray-release:0.9.1'\n        classpath 'com.android.tools.build:gradle:3.5.0'\n    }\n\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        mavenCentral()\n        google()\n        maven { url \"https://jitpack.io\" }\n        maven { url 'https://maven.google.com' }\n        maven {\n            url 'https://dl.bintray.com/hpdx/maven/'\n        }\n    }\n\n\n    project.ext {\n        libversion=\"26.1.0\"\n        compileSdkVersion=26\n        targetSdkVersion=26\n        buildToolsVersion='26.0.3'\n        minSdkVersion=17\n        versionCode = 16\n        versionName = \"3.0\"\n        publish_version='2.3.61'\n    }\n    tasks.withType(Javadoc) {\n        options{\n            encoding \"UTF-8\"\n            charSet 'UTF-8'\n            links \"http://docs.oracle.com/javase/7/docs/api\"\n        }\n    }\n\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "ffmpeg",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7119140625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx2536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 0.04296875,
          "content": "问题现象：xxxxx\n错误日志：xxxxxx\n\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.076171875,
          "content": "include ':app', ':VideoPlayModule-Lite', ':VideoPlayModule', ':ffmpeg', ':tv'\n"
        },
        {
          "name": "test.gif",
          "type": "blob",
          "size": 7438.7216796875,
          "content": ""
        },
        {
          "name": "tv",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}