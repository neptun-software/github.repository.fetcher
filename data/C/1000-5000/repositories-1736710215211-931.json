{
  "metadata": {
    "timestamp": 1736710215211,
    "page": 931,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vlfeat/vlfeat",
      "stars": 1609,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0576171875,
          "content": "*.manifest -crlf -diff -merge\n*.vcproj binary\n*.sln binary\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.68359375,
          "content": "# Mac OS X Finder\n.DS_Store\n\n# MEX files\n*.mexglx\n*.mexmac\n*.mexmaci\n*.mexmaci64\n*.mexa64\n*.mex\n\n# Python\n*.pyc\n\n# Other generated files and directories\nVERSION\ndocsrc/version.html\nbin\nresults\ndoc\nbuild\ntoolbox/mexw32\ntoolbox/mexmaci\ntoolbox/mexmaci64\ntoolbox/mexmac\ntoolbox/mexglx\ntoolbox/mexa64\ntoolbox/mexw64\ntoolbox/mex\ntoolbox/noprefix\n\n# Xcode\nvlfeat.xcodeproj/*.mode1\nvlfeat.xcodeproj/*.mode1v3\nvlfeat.xcodeproj/*.mode2v3\nvlfeat.xcodeproj/*.pbxuser\nvlfeat.xcodeproj/*.perspective*\nvlfeat.xcodeproj/*.xcworkspace\nvlfeat.xcodeproj/xcuserdata\n\n# Visual C++\nvlfeat.suo\nvlfeat.ncb\nvlfeat.vcproj.*.user\nvc/*\n\n# Emacs backups\n*~\n\n# Vim swap files\n.*.swp\n\n# Opt directory\nopt/*\n\n# iDraw files\n*.idraw\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.3330078125,
          "content": "Copyright (C) 2007-11, Andrea Vedaldi and Brian Fulkerson\nCopyright (C) 2012-13, The VLFeat Team\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the\n   distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.470703125,
          "content": "# file: Makefile\n# description: Build everything\n# author: Andrea Vedaldi\n\n# Copyright (C) 2014,18 Andrea Vedaldi.\n# Copyright (C) 2007-12 Andrea Vedaldi and Brian Fulkerson.\n# All rights reserved.\n#\n# This file is part of the VLFeat library and is made available under\n# the terms of the BSD license (see the COPYING file).\n\n# VLFEAT BUILDING INSTRUCTIONS\n#\n# This makefile builds VLFeat on standard Unix installations with the\n# GNU toolchain. Mac OS X and GNU-Linux are explicitly\n# supported. Usually, compiling VLFeat reduces to typing\n#\n# > cd PATH_TO_VLFEAT_SOURCE_TREE\n# > make\n#\n# The makefile attempts to automatically determine the host\n# architecture. If this fails, or if the architecture is ambiguous,\n# the architecture can be set by specifying the ARCH variable. For\n# instance:\n#\n# > make ARCH=maci64\n#\n# builds VLFeat for Mac OS X Intel 64 bit. Pease\n# see http://www.vlfeat.org/compiling.html\n# for troubleshooting and details.\n#\n# Other useful variables are listed below (their default value is in\n# square brackets).\n#\n#   ARCH [not defined] - Active architecture. The supported\n#       architectures are maci, maci64, glnx86, or glnxa64 (these are\n#       the same architecture identifiers used by MATLAB:\n#       http://www.mathworks.com/help/techdoc/ref/computer.html). If\n#       undefined, the makefile attempts to automatically detect the\n#       architecture.\n#\n#   DEBUG [not defined] - If defined, turns on debugging symbols and\n#       turns off optimizations\n#\n#   PROFILE [not defined] - If defined, turns on debugging symbols but\n#       does NOT turn off optimizations.\n#\n#   VERB [not defined] - If defined, display in full the command\n#       executed and their output.\n#\n#   MEX [mex]- Path to MATLAB MEX compiler. If undefined, MATLAB support\n#       is disabled.\n#\n#   MKOCTFILE [not defined] - Path to Octave MKOCTFILE compiler. If undefined,\n#       Octave support is disabled.\n#\n# If defined to anything other than \"no\", the following falgs disable\n# specific features in the library. By defaults, all the features are\n# enabled.  If the makefile finds that the environment is unable to\n# support some of them, it may decide to disable them automatically\n# (in this case it will print a message).  This behaviour can be\n# overriden by defining the flag to be \"no\".\n#\n#   DISABLE_SSE2 - SSE2 vector instructions support.\n#   DISABLE_AVX - AVX vector instructions support.\n#   DISABLE_THREADS - Supprot for multithreded library client.\n#   DISABLE_OPENMP - OpenMP-based multithreaded computations.\n#\n# To completely remove all build products use\n#\n# > make distclean\n#\n# Other useful targets include:\n#\n#   clean - Removes intermediate build products for the active architecture.\n#   archclean - Removes all build products for the active architecture.\n#   distclean - Removes all build products.\n#   info - Display a list of the variables defined by the Makefile.\n#   help - Print this message.\n#\n# VLFeat is compsed of different parts (DLL, command line utilities,\n# MATLAB interface, Octave interface) so the makefile is divided in\n# components, located in make/*.mak. Please check out the\n# corresponding files in order to adjust parameters.\n\n# Copyright (C) 2014,18 Andrea Vedaldi.\n# Copyright (C) 2007-13 Andrea Vedaldi and Brian Fulkerson.\n# All rights reserved.\n#\n# This file is part of the VLFeat library and is made available under\n# the terms of the BSD license (see the COPYING file).\n\nSHELL = /bin/bash\n\n.PHONY : all\nall:\n\n# Select which features to disable\n# DISABLE_SSE2=yes\n# DISABLE_AVX=yes\n# DISABLE_THREADS=yes\n# DISABLE_OPENMP=yes\n\n# --------------------------------------------------------------------\n#                                                       Error Messages\n# --------------------------------------------------------------------\n\nerr_no_arch  =\nerr_no_arch +=$(shell echo \"** Unknown host architecture '$(UNAME)'. This identifier\"   1>&2)\nerr_no_arch +=$(shell echo \"** was obtained by running 'uname -sm'. Edit the Makefile \" 1>&2)\nerr_no_arch +=$(shell echo \"** to add the appropriate configuration.\"                   1>&2)\nerr_no_arch +=config\n\nerr_internal  =$(shell echo Internal error)\nerr_internal +=internal\n\nerr_spaces  = $(shell echo \"** VLFeat root dir VLDIR='$(VLDIR)' contains spaces.\"  1>&2)\nerr_spaces += $(shell echo \"** This is not supported due to GNU Make limitations.\" 1>&2)\nerr_spaces +=spaces\n\n# --------------------------------------------------------------------\n#                                             Auto-detect architecture\n# --------------------------------------------------------------------\n\nDarwin_PPC_ARCH := mac\nDarwin_Power_Macintosh_ARCH := mac\nDarwin_i386_ARCH := maci64\nDarwin_x86_64_ARCH := maci64\nLinux_i386_ARCH := glnx86\nLinux_i686_ARCH := glnx86\nLinux_unknown_ARCH := glnx86\nLinux_x86_64_ARCH := glnxa64\n\nUNAME := $(shell uname -sm)\nARCH ?= $($(shell echo \"$(UNAME)\" | tr \\  _)_ARCH)\n\n# sanity check\nifeq ($(ARCH),)\ndie:=$(error $(err_no_arch))\nendif\n\nifneq ($(VLDIR),$(shell echo \"$(VLDIR)\" | sed 's/ //g'))\ndie:=$(error $(err_spaces))\nendif\n\n# --------------------------------------------------------------------\n#                                                        Configuration\n# --------------------------------------------------------------------\n\nVLDIR ?= .\nLIBTOOL ?= libtool\n\nSTD_CLFAGS = $(CFLAGS)\nSTD_CFLAGS += -std=c99\nSTD_CFLAGS += -Wall -Wextra\nSTD_CFLAGS += -Wno-unused-function -Wno-long-long -Wno-variadic-macros\nSTD_CFLAGS += $(if $(DEBUG), -DDEBUG -O0 -g, -DNDEBUG -O3)\nSTD_CFLAGS += $(if $(PROFILE), -g)\n\nSTD_LDFLAGS = $(LDFLAGS)\n\n# Architecture specific ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# Detect compiler\nCOMPILER_VER_STRING:=$(shell $(CC) --version) $(shell $(CC) -v 2>&1)\nCOMPILER:=other\n\nifneq ($(shell echo \"$(COMPILER_VER_STRING)\" | grep \"gcc\"),)\nCOMPILER:=gcc\nCOMPILER_VER:=$(shell \\\n$(CC) -dumpversion | \\\nsed -e 's/\\.\\([0-9][0-9]\\)/\\1/g' \\\n    -e 's/\\.\\([0-9]\\)/0\\1/g' \\\n    -e 's/^[0-9]\\{3,4\\}$$/&00/' )\nendif\n\nifeq \"$(findstring clang,$(COMPILER_VER_STRING))\" \"clang\"\nCOMPILER:=clang\nCOMPILER_VER:=$(shell \\\necho \"$(COMPILER_VER_STRING)\" | \\\nsed -n -e 's/.*version *\\([0-9.][0-9.]*\\).*/\\1/p;' | \\\nsed -e 's/\\.\\([0-9][0-9]\\)/\\1/g' \\\n    -e 's/\\.\\([0-9]\\)/0\\1/g' \\\n    -e 's/^[0-9]\\{3,4\\}$$/&00/' )\nendif\n\n$(info Detected compiler: $(COMPILER) $(COMPILER_VER))\nifeq \"$(COMPILER_VER)\" \"other\"\n$(warning Unsupported compiler detected, use at your own risk!)\nendif\n\nifeq \"$(COMPILER)\" \"gcc\"\nifeq \"$(shell expr $(COMPILER_VER) \\<= 40600)\" \"1\"\nifneq \"$(DISABLE_AVX)\" \"no\"\n$(info GCC <= 4.6.0 detected, disabling AVX.)\nDISABLE_AVX:=yes\nendif\nendif\nendif\n\nifeq \"$(COMPILER)\" \"clang\"\nifneq \"$(DISABLE_OPENMP)\" \"no\"\n$(info Apple Clang does not support OpenMP yet, disabling.)\n$(info Alternatively, use brew llvm clang and specify DISABLE_OPENMP=no.)\nDISABLE_OPENMP:=yes\nendif\nendif\n\n# Mac OS X Intel\nifeq \"$(ARCH)\" \"$(filter $(ARCH),maci maci64)\"\nifeq \"$(ARCH)\" \"maci\"\nmarch=32\nelse\nmarch=64\nendif\nSDKROOT ?= $(shell xcrun -sdk macosx --show-sdk-path)\nMACOSX_DEPLOYMENT_TARGET ?= 10.4\nSTD_CFLAGS += -m$(march) -isysroot $(SDKROOT) -mmacosx-version-min=$(MACOSX_DEPLOYMENT_TARGET)\nSTD_LDFLAGS += -Wl,-syslibroot,$(SDKROOT) -mmacosx-version-min=$(MACOSX_DEPLOYMENT_TARGET)\nendif\n\n# Linux\nifeq \"$(ARCH)\" \"$(filter $(ARCH),glnx86 glnxa64)\"\nifeq \"$(ARCH)\" \"glnx86\"\nmarch=32\nelse\nmarch=64\nendif\n# Target compatibility with GLIBC 2.3.4\n# 1) _GNU_SOURCE avoids using isoc99_fscanf, limiting binary portability to recent GLIBC.\n# 2) -fno-stack-protector avoids using a feature requiring GLBIC 2.4\nSTD_CFLAGS += -m$(march) -D_GNU_SOURCE -fno-stack-protector\nSTD_LDFLAGS += -m$(march) -Wl,--rpath,\\$$ORIGIN/ -Wl,--as-needed\nendif\n\n# Convert back DISALBE_*=\"no\" flags to be empty\nifeq \"$(DISABLE_SSE2)\" \"no\"\noverride DISABLE_SSE2:=\nendif\nifeq \"$(DISABLE_AVX)\" \"no\"\noverride DISABLE_AVX:=\nendif\nifeq \"$(DISABLE_THREADS)\" \"no\"\noverride DISABLE_THREADS:=\nendif\nifeq \"$(DISABLE_OPENMP)\" \"no\"\noverride DISABLE_OPENMP:=\nendif\n\n# --------------------------------------------------------------------\n#                                                            Functions\n# --------------------------------------------------------------------\n\n# $(call if-like,FILTER,WHY,WHAT)\ndefine if-like\n$(if $(filter $(1),$(2)),$(3))\nendef\n\n# $(call dump-var,VAR) pretty-prints the content of a variable VAR on\n# multiple columns\nifdef VERB\ndefine dump-var\n@echo \"$(1) =\"\n@echo \"$($(1))\" | sed 's/\\([^ ][^ ]* [^ ][^ ]*\\) */\\1#/g' | \\\ntr '#' '\\n' | column -t | sed 's/\\(.*\\)/  \\1/g'\nendef\nelse\ndefine dump-var\n@printf \"%15s = %s\\n\" \"$(1)\" \\\n\"$$(echo '$($(1))' | sed -e 's/[^ ][^ ]* /\\.\\.\\./3' -e 's/\\.\\.\\..*$$/\\.\\.\\./g')\"\nendef\nendif\n\n# $(call echo-var,VAR) pretty-prints the content of a variable VAR on\n# one line\ndefine echo-var\n@printf \"%15s = %s\\n\" '$(1)' '$($(1))'\nendef\n\n# $(call echo-title,TITLE) pretty-prints TITLE as a title\ndefine echo-title\n@printf \"** %s\\n\" '$(1)'\nendef\n\n# $(call C, CMD) runs $(CMD) silently\ndefine C\n@printf \"%15s %s\\n\" '$(1)' '$(@)'\n$(Q)\"$($(1))\"\nendef\n\n# If verbose print everything\nifdef VERB\nQ=\nelse\nQ=@\nendif\n\n# Greater or equal: returns the empty string if $1 >= $2, otherwise returns 'false',\n# where the arguments are integer numbers\ngt = $(shell if [ \"$(1)\" -lt \"$(2)\" ] ; then echo false ; fi)\n\n# rule to create a directory\n.PRECIOUS: %/.dirstamp\n%/.dirstamp :\n\t@printf \"%15s %s\\n\" MK \"$(dir $@)\"\n\t@mkdir -p $(dir $@)\n\t@echo \"Directory generated by make.\" > $@\n\n# $(call gendir, TARGET, DIR1 DIR2 ...) creates a target TARGET-dir that\n# triggers the creation of the directories DIR1, DIR2\ndefine gendir\n$(1)-dir=$(foreach x,$(2),$(x)/.dirstamp)\nendef\n\n# --------------------------------------------------------------------\n#                                                                Build\n# --------------------------------------------------------------------\n\n# Each Makefile submodule appends appropriate dependencies to the all,\n# clean, archclean, distclean, and info targets. In addition, it\n# appends to the deps and bins variables the list of .d files (to be\n# inclued by make as auto-dependencies) and the list of files to be\n# added to the binary distribution.\n\n.PHONY: clean, archclean, distclean, info, help\nno_dep_targets := clean archclean distclean help\n\ninclude make/dll.mak\ninclude make/bin.mak\ninclude make/matlab.mak\ninclude make/octave.mak\ninclude make/doc.mak\ninclude make/dist.mak\n\nclean:\n\trm -f  `find . -name '*~'`\n\trm -f  `find . -name '.DS_Store'`\n\trm -f  `find . -name '.gdb_history'`\n\trm -f  `find . -name '._*'`\n\trm -rf ./results\n\narchclean: clean\n\ndistclean:\n\ninfo:\n\t$(call echo-title,General settings)\n\t$(call dump-var,deps)\n\t$(call echo-var,PROFILE)\n\t$(call echo-var,DEBUG)\n\t$(call echo-var,VER)\n\t$(call echo-var,ARCH)\n\t$(call echo-var,CC)\n\t$(call echo-var,COMPILER)\n\t$(call echo-var,COMPILER_VER)\n\t$(call echo-var,STD_CFLAGS)\n\t$(call echo-var,STD_LDFLAGS)\n\t$(call echo-var,DISABLE_SSE2)\n\t$(call echo-var,DISABLE_AVX)\n\t$(call echo-var,DISABLE_THREADS)\n\t$(call echo-var,DISABLE_OPENMP)\n\t@printf \"\\nThere are %s lines of code.\\n\" \\\n\t`cat $(m_src) $(mex_src) $(dll_src) $(dll_hdr) $(bin_src) | wc -l`\n\n# Holw help works: cat this file,\n# skip the first block until an empty line is found (twice)\n# print the first block until an empty line,\n# remove the `# ' prefix from each remaining line\n\nhelp:\n\t@cat Makefile | \\\n\tsed -n '1,/^$$/!p' | \\\n\tsed -n '1,/^$$/!p' | \\\n\tsed -n '1,/^$$/p' | \\\n\tsed 's/^# \\{0,1\\}\\(.*\\)$$/\\1/'\n\n# --------------------------------------------------------------------\n#                                                 Include dependencies\n# --------------------------------------------------------------------\n\n.PRECIOUS: $(deps)\n\nifneq ($(filter-out $(no_dep_targets), $(MAKECMDGOALS)),)\n-include $(deps)\nendif\n"
        },
        {
          "name": "Makefile.mak",
          "type": "blob",
          "size": 17.5576171875,
          "content": "# file: Makefile.mak\n# descrption: Microsoft NMake makefile\n# authors: Andrea Vedaldi, Brian Fulkerson, Mircea Cimpoi\n\n# Copyright (C) 2007-12 Andrea Vedaldi and Brian Fulkerson.\n# All rights reserved.\n#\n# This file is part of the VLFeat library and is made available under\n# the terms of the BSD license (see the COPYING file).\n\n# --------------------------------------------------------------------\n#                                                        Customization\n# --------------------------------------------------------------------\n# To modify this script to run on your platform it is usually\n# sufficient to modify the following variables:\n#\n# ARCH: Either win32 or win64 [win64]\n# DEBUG: Set to yes to ativate debugging [no]\n# MATLABROOT: Path to MATLAB\n# MATLABVER: MATLAB version (e.g. 90200 for 9.2.0 - 2017a)\n# MSVSVER: Visual Studio version (e.g. 80, 90, 100) [90 for VS 9.0]\n# MSVCROOT: Visual C++ location [$(VCInstallDir)].\n# WINSDKROOT: Windows SDK location [$(WindowsSdkDir)]\n#\n# Note that some of these variables depend on the architecture\n# (either win32 or win64).\n\nVER = 0.9.21\nARCH = win64\nDEBUG = no\nBRANCH = v$(VER)-$(ARCH)\nMSVSVER =\nMSVCROOT = $(VCINSTALLDIR)\nWINSDKROOT = $(WINDOWSSDKDIR)\nGIT = git\n\n!if \"$(MSVCROOT)\" == \"\"\nMSVCROOT = C:\\Program Files\\Microsoft Visual Studio 10.0\\VC\n!endif\n\n!if \"$(WINSDKROOT)\" == \"\"\nWINSDKROOT = C:\\Program Files\\Microsoft SDKs\\Windows\\v7.0A\n!endif\n\n!include make/nmake_helper.mak\n\nMATLABROOT = C:\\Program Files\\MATLAB\\R2017a\nMATLABVER = 90200\nMEX = \"$(MATLABROOT)\\bin\\mex.bat\"\n\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 32-bit\n!if \"$(ARCH)\" == \"win32\"\n!message === COMPILING FOR 32-BIT\n!if $(MATLABVER) <= 80500\nMEXOPT = \"$(MATLABROOT)\\bin\\win32\\mexopts\\msvc$(MSVSVER)opts.bat\"\n!else\nMEXOPT = \"$(MATLABROOT)\\bin\\win32\\mexopts\\msvc$(MSVSYEAR).xml\"\n!endif\nMEXEXT = mexw32\nMEX_FLAGS =\n\nCC = \"$(MSVCROOT)\\bin\\cl.exe\"\nLINK = \"$(MSVCROOT)\\bin\\link.exe\"\nMSVCR_PATH = $(MSVCROOT)\\redist\\x86\\Microsoft.VC$(MSVSVER).CRT\n\nLFLAGS = /MACHINE:X86 \\\n         /LIBPATH:\"$(MSVCROOT)\\lib\" \\\n         /LIBPATH:\"$(WINSDKROOT)\\lib\"\n\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 64-bit\n!elseif \"$(ARCH)\" == \"win64\"\n!message === COMPILING FOR 64-BIT\nMEX = \"$(MATLABROOT)\\bin\\mex.bat\"\n!if $(MATLABVER) <= 80500\nMEXOPT = \"$(MATLABROOT)\\bin\\win64\\mexopts\\msvc$(MSVSVER)opts.bat\"\n!else\nMEXOPT = \"$(MATLABROOT)\\bin\\win64\\mexopts\\msvc$(MSVSYEAR).xml\"\n!endif\nMEXEXT = mexw64\nMEX_FLAGS = -largeArrayDims\n\nCC = \"$(MSVCROOT)\\bin\\amd64\\cl.exe\"\nLINK = \"$(MSVCROOT)\\bin\\amd64\\link.exe\"\n!if $(MSVSVER) >= 100\nMSVCR_PATH = $(MSVCROOT)\\redist\\x64\\Microsoft.VC$(MSVSVER).CRT\n!else\nMSVCR_PATH = $(MSVCROOT)\\redist\\amd64\\Microsoft.VC$(MSVSVER).CRT\n!endif\n\nLFLAGS = /MACHINE:X64 \\\n         /LIBPATH:\"$(MSVCROOT)\\lib\\amd64\" \\\n         /LIBPATH:\"$(WINSDKROOT)\\lib\\x64\"\n!else\n!error ARCH = $(ARCH) is an unknown architecture.\n!endif\n\n# --------------------------------------------------------------------\n#                                                                Flags\n# --------------------------------------------------------------------\n# Debug info is embedded in .obj and .lib files (CodeView /Z7 option)\n# but in .pdb files for .exe and .dll (since the linker does not\n# produce CodeView output anymore).\n#\n# CFLAGS\n#   /nologo            : CL does not display splash\n#   _CRT_NO_DEPRECATE  : Do not deprecate `insecure' fscanf, snprintf, ...\n#   __LITTLE_ENDIAN__  : Signal little endian architecture\n#   /I.                : Add VLROOT to include search path\n#   /MD                : Multi-thread run-time library dynamically linked\n#   /TC                : Source code is C (not C++)\n#   /W3                : Usa all warnings\n#   /Zp8               : Align structures to 8 bytes\n#   /Ox                : Turn on optimizations\n#   /D\"DEBUG\"          : [DEBUG] Turn on debugging in VLFeat\n#   /Z7                : [DEBUG] Embedded CodeView debug info in .obj\n#   /D\"NDEBUG\"         : [NO DEBUG] Switches off asserts\n#\n# LFLAGS\n#   /NOLOGO            : LINK does not display splash\n#   /INCREMENTAL:NO    : No incremental linking\n#   /MANIFEST          : See DLL HELL below\n#   /DEBUG             : [DEBUG] Generate debug info (.pdb files)\n#\n# MEX_FLAGS\n#   -I                 : Include VLFeat\n#   -L                 : Add a library search path\n#   -l                 : Link a dll\n#\n# ======================= ABOUT THE DLL HELL =========================\n#\n# This makefile compiles VLFeat to make use of the side-by-side\n# deployment model, redestribtin the appropraite Visual C runtime\n# library with the library and executables. In Visual Studio < 10.0\n# this meant including a manifest file, while in version >= 10.0 this\n# requirement has been relaxed.\n#\n# References:\n#   http://www.codeguru.com/forum/showthread.php?t=408061\n#   http://mariusbancila.ro/blog/2010/03/24/visual-studio-2010-changes-for-vc-part-5\n#   http://social.msdn.microsoft.com/Forums/is/vcgeneral/thread/ca9177b2-2d02-42d8-8892-c6a25e6cfadb\n#\n\nbindir = bin\\$(ARCH)\nmexdir = toolbox\\mex\\$(MEXEXT)\nobjdir = $(bindir)\\objs\n\nCFLAGS = /nologo /TC /MD \\\n         /D\"_CRT_SECURE_NO_DEPRECATE\" \\\n         /D\"__LITTLE_ENDIAN__\" \\\n         /D\"VL_DISABLE_AVX\" \\\n         /I. \\\n         /W1 /Zp8 /openmp\n\nLFLAGS = $(LFLAGS) /NOLOGO \\\n         /INCREMENTAL:NO \\\n         /MANIFEST\n\n!if \"$(DEBUG)\" != \"no\"\n!message === DEBUGGING ON\nCFLAGS = $(CFLAGS) /Z7 /D\"DEBUG\"\nLFLAGS = $(LFLAGS) /DEBUG\nMEX_FLAGS = $(MEX_FLAGS) -g\n!else\n!message === DEBUGGING OFF\nCFLAGS = $(CFLAGS) /D\"NDEBUG\" /Ox\n!endif\n\nDLL_CFLAGS = /D\"VL_BUILD_DLL\"\nEXE_LFLAGS = $(LFLAGS) /LIBPATH:\"$(bindir)\" vl.lib\nMEX_FLAGS = $(MEX_FLAGS) -f $(MEXOPT) -I. -Itoolbox -L\"$(bindir)\" -lvl\n\nlibsrc = \\\n  vl\\aib.c \\\n  vl\\array.c \\\n  vl\\covdet.c \\\n  vl\\dsift.c \\\n  vl\\fisher.c \\\n  vl\\generic.c \\\n  vl\\getopt_long.c \\\n  vl\\gmm.c \\\n  vl\\hikmeans.c \\\n  vl\\hog.c \\\n  vl\\homkermap.c \\\n  vl\\host.c \\\n  vl\\ikmeans.c \\\n  vl\\imopv.c \\\n  vl\\imopv_sse2.c \\\n  vl\\kdtree.c \\\n  vl\\kmeans.c \\\n  vl\\lbp.c \\\n  vl\\liop.c \\\n  vl\\mathop.c \\\n  vl\\mathop_avx.c \\\n  vl\\mathop_sse2.c \\\n  vl\\mser.c \\\n  vl\\pgm.c \\\n  vl\\quickshift.c \\\n  vl\\random.c \\\n  vl\\rodrigues.c \\\n  vl\\scalespace.c \\\n  vl\\sift.c \\\n  vl\\slic.c \\\n  vl\\stringop.c \\\n  vl\\svm.c \\\n  vl\\svmdataset.c \\\n  vl\\vlad.c\n\ncmdsrc = \\\n  src\\aib.c \\\n  src\\mser.c \\\n  src\\sift.c \\\n  src\\test_gauss_elimination.c \\\n  src\\test_getopt_long.c \\\n  src\\test_gmm.c \\\n  src\\test_heap-def.c \\\n  src\\test_host.c \\\n  src\\test_imopv.c \\\n  src\\test_kmeans.c \\\n  src\\test_liop.c \\\n  src\\test_mathop.c \\\n  src\\test_mathop_abs.c \\\n  src\\test_nan.c \\\n  src\\test_qsort-def.c \\\n  src\\test_rand.c \\\n  src\\test_sqrti.c \\\n  src\\test_stringop.c \\\n  src\\test_svd2.c \\\n  src\\test_threads.c \\\n  src\\test_vec_comp.c\n\ncmdsrc = \\\n  src\\aib.c \\\n  src\\mser.c \\\n  src\\sift.c \\\n  src\\test_gauss_elimination.c \\\n  src\\test_getopt_long.c \\\n  src\\test_gmm.c \\\n  src\\test_heap-def.c \\\n  src\\test_host.c \\\n  src\\test_imopv.c \\\n  src\\test_kmeans.c \\\n  src\\test_liop.c \\\n  src\\test_mathop.c \\\n  src\\test_mathop_abs.c \\\n  src\\test_nan.c \\\n  src\\test_qsort-def.c \\\n  src\\test_rand.c \\\n  src\\test_sqrti.c \\\n  src\\test_stringop.c \\\n  src\\test_svd2.c \\\n  src\\test_threads.c \\\n  src\\test_vec_comp.c\n\nmexsrc = \\\n  toolbox\\aib\\vl_aib.c \\\n  toolbox\\aib\\vl_aibhist.c \\\n  toolbox\\fisher\\vl_fisher.c \\\n  toolbox\\geometry\\vl_irodr.c \\\n  toolbox\\geometry\\vl_rodr.c \\\n  toolbox\\gmm\\vl_gmm.c \\\n  toolbox\\imop\\vl_imdisttf.c \\\n  toolbox\\imop\\vl_imintegral.c \\\n  toolbox\\imop\\vl_imsmooth.c \\\n  toolbox\\imop\\vl_imwbackwardmx.c \\\n  toolbox\\imop\\vl_tpsumx.c \\\n  toolbox\\kmeans\\vl_hikmeans.c \\\n  toolbox\\kmeans\\vl_hikmeanspush.c \\\n  toolbox\\kmeans\\vl_ikmeans.c \\\n  toolbox\\kmeans\\vl_ikmeanspush.c \\\n  toolbox\\kmeans\\vl_kmeans.c \\\n  toolbox\\misc\\vl_alldist.c \\\n  toolbox\\misc\\vl_alldist2.c \\\n  toolbox\\misc\\vl_binsearch.c \\\n  toolbox\\misc\\vl_binsum.c \\\n  toolbox\\misc\\vl_cummax.c \\\n  toolbox\\misc\\vl_getpid.c \\\n  toolbox\\misc\\vl_hog.c \\\n  toolbox\\misc\\vl_homkermap.c \\\n  toolbox\\misc\\vl_ihashfind.c \\\n  toolbox\\misc\\vl_ihashsum.c \\\n  toolbox\\misc\\vl_inthist.c \\\n  toolbox\\misc\\vl_kdtreebuild.c \\\n  toolbox\\misc\\vl_kdtreequery.c \\\n  toolbox\\misc\\vl_lbp.c \\\n  toolbox\\misc\\vl_localmax.c \\\n  toolbox\\misc\\vl_sampleinthist.c \\\n  toolbox\\misc\\vl_simdctrl.c \\\n  toolbox\\misc\\vl_svmtrain.c \\\n  toolbox\\misc\\vl_threads.c \\\n  toolbox\\misc\\vl_twister.c \\\n  toolbox\\misc\\vl_version.c \\\n  toolbox\\mser\\vl_erfill.c \\\n  toolbox\\mser\\vl_mser.c \\\n  toolbox\\quickshift\\vl_quickshift.c \\\n  toolbox\\sift\\vl_covdet.c \\\n  toolbox\\sift\\vl_dsift.c \\\n  toolbox\\sift\\vl_liop.c \\\n  toolbox\\sift\\vl_sift.c \\\n  toolbox\\sift\\vl_siftdescriptor.c \\\n  toolbox\\sift\\vl_ubcmatch.c \\\n  toolbox\\slic\\vl_slic.c \\\n  toolbox\\vlad\\vl_vlad.c\n\n!if \"$(ARCH)\" == \"win32\"\nlibobj = $(libsrc:vl\\=bin\\win32\\objs\\)\ncmdexe = $(cmdsrc:src\\=bin\\win32\\)\nmexdll = $(mexsrc:.c=.mexw32)\nmexdll = $(mexdll:toolbox\\fisher=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\sift=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\mser=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\imop=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\geometry=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\gmm=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\kmeans=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\misc=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\aib=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\quickshift=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\slic=toolbox\\mex\\mexw32)\nmexdll = $(mexdll:toolbox\\vlad=toolbox\\mex\\mexw32)\nmexpdb = $(mexdll:.dll=.pdb)\n\n!elseif \"$(ARCH)\" == \"win64\"\nlibobj = $(libsrc:vl\\=bin\\win64\\objs\\)\ncmdexe = $(cmdsrc:src\\=bin\\win64\\)\nmexdll = $(mexsrc:.c=.mexw64)\nmexdll = $(mexdll:toolbox\\fisher=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\sift=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\mser=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\imop=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\geometry=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\gmm=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\kmeans=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\misc=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\aib=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\quickshift=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\slic=toolbox\\mex\\mexw64)\nmexdll = $(mexdll:toolbox\\vlad=toolbox\\mex\\mexw64)\nmexpdb = $(mexdll:.mexw64=.pdb)\n!endif\n\nlibobj = $(libobj:.c=.obj)\ncmdexe = $(cmdexe:.c=.exe)\ncmdpdb = $(cmdexe:.exe=.pdb)\n\n# Visual Studio redistributable files\nMSVCR = Microsoft.VC$(MSVSVER).CRT\n!if $(MSVSVER) <= 90\n# VS <= 2008 needs a manifest too\nbincrt = $(bindir)\\msvcr$(MSVSVER).dll $(bindir)\\$(MSVCR).manifest\nmexcrt = $(mexdir)\\msvcr$(MSVSVER).dll $(mexdir)\\$(MSVCR).manifest\n!else if $(MSVSVER) <= 120\nbincrt = $(bindir)\\msvcr$(MSVSVER).dll\nmexcrt = $(mexdir)\\msvcr$(MSVSVER).dll\n!else\n# With Visual Studio 2015 the universal run time does not need to be redistributed?\n# https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/\nbincrt =\nmexcrt =\n!endif\n\n!ifdef MATLABROOT\nall: $(bindir) $(objdir) $(mexdir) \\\n     $(bincrt) $(bindir)\\vl.lib $(bindir)\\vl.dll \\\n     $(cmdexe) \\\n     $(mexcrt) $(mexdir)\\vl.dll $(mexdll)\n!else\nall: $(bindir) $(objdir) \\\n     $(bincrt) $(bindir)\\vl.lib $(bindir)\\vl.dll \\\n     $(cmdexe)\n!endif\n\nBUILD_MEX=@echo .... CC [MEX] $(@) && \\\n\t$(MEX) $(MEX_FLAGS) \"$(<)\" -output $(@)\n\n# --------------------------------------------------------------------\n#                                                    Maintenance rules\n# --------------------------------------------------------------------\n\nclean:\n\tdel /f /Q $(libobj)\n\tdel /f /Q $(objdir)\n\tdel /f /Q $(cmdpdb)\n\tdel /f /Q $(mexpdb)\n\narchclean:\n\tif exist bin\\$(ARCH) rmdir /S /Q bin\\$(ARCH)\n\tif exist $(mexdir) rmdir /S /Q $(mexdir)\n\ndistclean:\n\tif exist bin rmdir /S /Q bin\n\tif exist toolbox\\mex rmdir /S /Q toolbox\\mex\n\ninfo:\n\t@echo $(mexx)\n\t@echo ** bindir      = $(bindir)\n\t@echo ** mexdir      = $(mexdir)\n\t@echo ** objdir      = $(objdir)\n\t@echo ** libsrc      = $(libsrc)\n\t@echo ** libobj      = $(libobj)\n\t@echo ** cmdsrc      = $(cmdsrc)\n\t@echo ** cmdexe      = $(cmdexe)\n\t@echo ** mexsrc      = $(mexsrc)\n\t@echo ** mexdll      = $(mexdll)\n\t@echo ** CC          = $(CC)\n\t@echo ** CFLAGS      = $(CFLAGS)\n\t@echo ** DLL_CFLAGS  = $(DLL_CFLAGS)\n\t@echo ** MEX_FLAGS   = $(MEX_FLAGS)\n\t@echo ** BUILD_MEX   = \"$(BUILD_MEX)\"\n\t@echo ** MATLABROOT  = $(MATLABROOT)\n\t@echo ** MEX         = $(MEX)\n\t@echo ** MEXEXT      = $(MEXEXT)\n\t@echo ** MEXOPT      = $(MEXOPT)\n\t@echo ** MSVSVER     = $(MSVSVER)\n\t@echo ** MSVCROOT    = $(MSVCROOT)\n\t@echo ** MSVCR       = $(MSVCR)\n\t@echo ** MSVCR_PATH  = $(MSVCR_PATH)\n\t@echo ** bincrt      = $(bincrt)\n\t@echo ** mexcrt      = $(mexcrt)\n\t@echo ** WINSDKROOT  = $(WINSDKROOT)\n\t@echo ** DEBUG       = $(DEBUG)\n\n# --------------------------------------------------------------------\n#                                                          Build rules\n# --------------------------------------------------------------------\n\n# create directory if missing\n$(bindir) :\n\tmkdir $(bindir)\n\n$(objdir) :\n\tmkdir $(objdir)\n\n$(mexdir) :\n\tmkdir $(mexdir)\n\n# --------------------------------------------------------------------\n#                                      Rules to compile the VLFeat DLL\n# --------------------------------------------------------------------\n\n# special sources with SSE2 support\n$(objdir)\\mathop_sse2.obj : vl\\mathop_sse2.c\n\t@echo .... CC [+SSE2] $(@)\n\t@$(CC) $(CFLAGS) $(DLL_CFLAGS) /arch:SSE2 /D\"__SSE2__\" /c /Fo\"$(@)\" \"vl\\$(@B).c\"\n\n$(objdir)\\imopv_sse2.obj : vl\\imopv_sse2.c\n\t@echo .... CC [+SSE2] $(@)\n\t@$(CC) $(CFLAGS) $(DLL_CFLAGS) /arch:SSE2 /D\"__SSE2__\" /c /Fo\"$(@)\" \"vl\\$(@B).c\"\n\n# vl\\*.c -> $objdir\\*.obj\n{vl}.c{$(objdir)}.obj:\n\t@echo .... CC $(@)\n\t@$(CC) $(CFLAGS) $(DLL_CFLAGS) /c /Fo\"$(@)\" \"$(<)\"\n\n# Link VLFeat DLL\n$(bindir)\\vl.dll : $(libobj)\n\t@echo .. LINK [DLL] $(@R).dll\n\t$(LINK) /DLL  $(LFLAGS) $(**) /OUT:\"$(@)\"\n\t@mt /nologo /outputresource:\"$(@);#2\" /manifest \"$(@R).dll.manifest\"\n\t@-del \"$(@R).dll.manifest\"\n\n# *.obj -> *.lib\n$(bindir)\\vl.lib : $(libobj)\n\t@echo ... LIB $(@R).lib\n\t@lib $(**) /OUT:\"$(@)\" /NOLOGO\n\n# redistributable: msvcr__.dll => bin/win{32,64}/msvcr__.dll\n$(bindir)\\$(MSVCR).manifest : \"$(MSVCR_PATH)\\$(MSVCR).manifest\"\n        copy $(**) \"$(@)\"\n\n$(bindir)\\msvcr$(MSVSVER).dll: \"$(MSVCR_PATH)\\msvcr$(MSVSVER).dll\"\n        copy $(**) \"$(@)\"\n\n# --------------------------------------------------------------------\n#                                Rules to compile the VLFeat EXE files\n# --------------------------------------------------------------------\n\n# src\\*.c -> $bindir\\*.exe\n{src}.c{$(bindir)}.exe:\n\t@echo .... CC [EXE] $(@)\n\t@$(CC) $(CFLAGS) /Fe\"$(@)\" /Fo\"$(@R).obj\" \"$(<)\" /link $(EXE_LFLAGS)\n\t@MT /nologo /outputresource:\"$(@);#1\" /manifest \"$(@).manifest\"\n\t@-del \"$(@).manifest\"\n\t@-del \"$(@R).obj\"\n\n# --------------------------------------------------------------------\n#                                Rules to compile the VLFeat MEX files\n# --------------------------------------------------------------------\n\nstartmatlab:\n\t\"$(MATLABROOT)/bin/matlab.exe\" -nodesktop\n\n# toolbox\\*.c -> toolbox\\*.dll\n{toolbox\\sift}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\mser}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\imop}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\gmm}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\geometry}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\kmeans}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\aib}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\quickshift}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\misc}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\slic}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\vlad}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n{toolbox\\fisher}.c{$(mexdir)}.$(MEXEXT):\n\t$(BUILD_MEX)\n\n# vl.dll => mexw{32,64}\\vl.dll\n$(mexdir)\\vl.dll : $(bindir)\\vl.dll\n\tcopy \"$(**)\" \"$(@)\"\n\n# Ideally, the DLL should be linked to Intel compatibility library libiomp5md.dll that\n# ships with MATLAB. However, there does not seem to be a clean way to do so without\n# the .lib file. This is suboptimal as it casues two OMP libraries to be used (vcomp and iomp5).\n# Possible work arounds that did not work yet: generate the .lib file from the .dll file,\n# redirect somehow vcomp to iomp5.\n\n#$(LINK) /LIBPATH:\"$(MATLABROOT)\\extern\\lib\\win64\\microsoft\" /DLL $(LFLAGS) $(**) libmwblas.lib /nodefaultlib:vcomp /OUT:\"$(@)\"\n#$(mexdir)\\vl.dll : $(libobj)\n#\t@echo .. LINK [DLL] $(@R).dll\n#  $(LINK) /DLL $(LFLAGS) $(**) /OUT:\"$(@)\"\n#\t@-del \"$(@R).dll.manifest\"\n\n# redistributable: msvcr__.dll => bin/win{32,64}/msvcr__.dll\n$(mexdir)\\$(MSVCR).manifest : \"$(MSVCR_PATH)\\$(MSVCR).manifest\"\n        copy $(**) \"$(@)\"\n\n$(mexdir)\\msvcr$(MSVSVER).dll: \"$(MSVCR_PATH)\\msvcr$(MSVSVER).dll\"\n        copy $(**) \"$(@)\"\n\n# --------------------------------------------------------------------\n#                                       Rules to post the binary files\n# --------------------------------------------------------------------\n\nbin-release:\n\techo Fetching remote tags && \\\n\t$(GIT) fetch --tags && \\\n\techo Checking out v$(VER) && \\\n\t$(GIT) checkout v$(VER)\n\techo Rebuilding binaries for release\n\tif exist \"bin\\$(ARCH)\" del /f /Q \"bin\\$(ARCH)\"\n\tif exist \"bin\\mex\\$(ARCH)\" del /f /Q \"toolbox\\mex$(ARCH)\"\n\tnmake /f Makefile.mak ARCH=$(ARCH)\n\nbin-commit: bin-release\n\t@echo Fetching remote tags && \\\n\t$(GIT) fetch --tags\n\t@echo Crearing/resetting and checking out branch $(BRANCH) to v$(VER) && \\\n\t$(GIT) branch -f $(BRANCH) v$(VER) && \\\n\t$(GIT) checkout $(BRANCH)\n\t@echo Adding binaries && \\\n\t$(GIT) add -f $(bincrt) && \\\n\t$(GIT) add -f \"$(bindir)\\vl.lib\" && \\\n\t$(GIT) add -f \"$(bindir)\\vl.dll\" && \\\n\t$(GIT) add -f $(cmdexe) && \\\n\t@echo Adding MEX files && \\\n\t$(GIT) add -f $(mexcrt) && \\\n\t$(GIT) add -f \"$(mexdir)\\vl.dll\" && \\\n\t$(GIT) add -f $(mexdll) && \\\n\t@echo Commiting changes && \\\n\t$(GIT) commit -m \"$(ARCH) binaries for version $(VER)\"\n\t@echo Commiting and pushing to server the binaries && \\\n\t$(GIT) push -v --force bin $(BRANCH):refs/heads/$(BRANCH) && \\\n\t$(GIT) checkout v$(VER) && \\\n\t$(GIT) branch -D $(BRANCH)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6630859375,
          "content": "# VLFeat -- Vision Lab Features Library\n\n> Version 0.9.21\n\nThe VLFeat open source library implements popular computer vision\nalgorithms specialising in image understanding and local featurexs\nextraction and matching.  Algorithms incldue Fisher Vector, VLAD,\nSIFT, MSER, k-means, hierarchical k-means, agglomerative information\nbottleneck, SLIC superpixes, quick shift superpixels, large scale SVM\ntraining, and many others. It is written in C for efficiency and\ncompatibility, with interfaces in MATLAB for ease of use, and detailed\ndocumentation throughout. It supports Windows, Mac OS X, and Linux.\n\nVLFeat is distributed under the BSD license (see the `COPYING` file).\n\nThe documentation is\n[available online](http://www.vlfeat.org/index.html) and shipped with\nthe library as `doc/index.html`. See also:\n\n* [Using with MATLAB](http://www.vlfeat.org/install-matlab.html)\n* [Using the command line utilities](http://www.vlfeat.org/install-shell.html)\n* [Using the C API](http://www.vlfeat.org/install-c.html)\n* [Compiling from source](http://www.vlfeat.org/compiling.html)\n\n## Quick start with MATLAB\n\nTo start using VLFeat as a MATLAB toolbox, download the latest VLFeat\n[binary package](http://www.vlfeat.org/download/). Note that the\npre-compiled binaries require MATLAB 2009B and later. Unpack it, for\nexample by using WinZIP (Windows), by double clicking on the archive\n(Mac), or by using the command line (Linux and Mac):\n\n    > tar xzf vlfeat-X.Y.Z-bin.tar.gz\n\nHere X.Y.Z denotes the latest version. Start MATLAB and run the\nVLFeat setup command:\n\n    > run <VLFEATROOT>/toolbox/vl_setup\n\nHere `<VLFEATROOT>` should be replaced with the path to the VLFeat\ndirectory created by unpacking the archive. All VLFeat demos can now\nbe run in a row by the command:\n\n    > vl_demo\n\nCheck out the individual demos by editing this file: `edit vl_demo`.\n\n## Octave support\n\nThe toolbox should be laregly compatible with GNU Octave, an open\nsource MATLAB equivalent. However, the binary distribution does not\nship with pre-built GNU Octave MEX files. To compile them use\n\n    > cd <vlfeat directory>\n    > make MKOCTFILE=<path to the mkoctfile program>\n\n# Changes\n\n- **0.9.21** Maintenance release. Bugfixes.\n- **0.9.20** Maintenance release. Bugfixes.\n- **0.9.19** Maintenance release. Minor bugfixes and fixes compilation\n  with MATLAB 2014a.\n- **0.9.18** Several bugfixes. Improved documentation, particularly of\n  the covariant detectors. Minor enhancements of the Fisher vectors.\n- **0.9.17** Rewritten SVM implementation, adding support for SGD and\n  SDCA optimisers and various loss functions (hinge, squared hinge,\n  logistic, etc.) and improving the interface. Added infrastructure to\n  support multi-core computations using OpenMP (MATLAB 2009B or later\n  required). Added OpenMP support to KD-trees and KMeans. Added new\n  Gaussian Mixture Models, VLAD encoding, and Fisher Vector encodings\n  (also with OpenMP support). Added LIOP feature descriptors. Added\n  new object category recognition example code, supporting several\n  standard benchmarks off-the-shelf.\n- **0.9.16** Added `VL_COVDET`. This function implements the following\n  detectors: DoG, Hessian, Harris Laplace, Hessian Laplace, Multiscale\n  Hessian, Multiscale Harris. It also implements affine adaptation,\n  estiamtion of feature orientation, computation of descriptors on the\n  affine patches (including raw patches), and sourcing of custom\n  feature frame.\n- **0.9.15** Added `VL_HOG` (HOG features). Added `VL_SVMPEGASOS` and\n  a vastly improved SVM implementation. Added `VL_IHASHSUM` (hashed\n  counting). Improved INTHIST (integral histogram). Added\n  `VL_CUMMAX`. Improved the implementation of `VL_ROC` and\n  VL_PR(). Added VL_DET() (Detection Error Trade-off (DET)\n  curves). Improved the verbosity control to AIB. Added support for\n  Xcode 4.3, improved support for past and future Xcode\n  versions. Completed the migration of the old test code in\n  `toolbox/test`, moving the functionality to the new unit tests\n  `toolbox/xtest`.\n- **0.9.14** Added SLIC superpixels. Added VL_ALPHANUM(). Improved\n  Windows binary package and added support for Visual\n  Studio 2010. Improved the documentation layout and added a proper\n  bibliography. Bugfixes and other minor improvements. Moved from the\n  GPL to the less restrictive BSD license.\n- **0.9.13** Fixed Windows binary package.\n- **0.9.12** Fixes `vl_compile` and the architecture string on Linux 32 bit.\n- **0.9.11** Fixes a compatibility problem on older Mac OS X versions.\n  A few bugfixes are included too.\n- **0.9.10** Improves the homogeneous kernel map. Plenty of small\n  tweaks and improvements. Make maci64 the default architecture on the\n  Mac.\n- **0.9.9** Added: sift matching example. Extended Caltech-101\n  classification example to use kd-trees.\n- **0.9.8** Added: image distance transform, PEGASOS, floating point\n  K-means, homogeneous kernel maps, a Caltech-101 classification\n  example. Improved documentation.\n- **0.9.7** Changed the Mac OS X binary distribution to require a less\n  recent version of Mac OS X (10.5).\n- **0.9.6** Changed the GNU/Linux binary distribution to require a\n  less recent version of the C library.\n- **0.9.5** Added kd-tree and new SSE-accelerated vector/histogram\n  comparison code.  Improved dense SIFT (dsift) implementation.  Added\n  Snow Leopard and MATLAB R2009b support.\n- **0.9.4** Added quick shift. Renamed dhog to dsift and improved\n  implementation and documentation. Improved tutorials.  Added 64 bit\n  Windows binaries. Many other small changes.\n- **0.9.3** Namespace change (everything begins with a vl_ prefix\n  now). Many other changes to provide compilation support on Windows\n  with MATLAB 7.\n- **beta-3** Completes to the ikmeans code.\n- **beta-2** Many additions.\n- **beta-1** Initial public release.\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docsrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "make",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolbox",
          "type": "tree",
          "content": null
        },
        {
          "name": "vl",
          "type": "tree",
          "content": null
        },
        {
          "name": "vlfeat.sln",
          "type": "blob",
          "size": 0.857421875,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 11.00\r\n# Visual Studio 2010\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"vlfeat\", \"vlfeat.vcxproj\", \"{07367665-DCDA-4044-94CE-ABC01CC4119D}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Win32 = Debug|Win32\r\n\t\tRelease|Win32 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{07367665-DCDA-4044-94CE-ABC01CC4119D}.Debug|Win32.ActiveCfg = Debug|Win32\r\n\t\t{07367665-DCDA-4044-94CE-ABC01CC4119D}.Debug|Win32.Build.0 = Debug|Win32\r\n\t\t{07367665-DCDA-4044-94CE-ABC01CC4119D}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{07367665-DCDA-4044-94CE-ABC01CC4119D}.Release|Win32.Build.0 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "vlfeat.vcproj",
          "type": "blob",
          "size": 12.07421875,
          "content": "<?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n<VisualStudioProject\r\n\tProjectType=\"Visual C++\"\r\n\tVersion=\"9.00\"\r\n\tName=\"vlfeat\"\r\n\tProjectGUID=\"{07367665-DCDA-4044-94CE-ABC01CC4119D}\"\r\n\tRootNamespace=\"vlfeat\"\r\n\tKeyword=\"MakeFileProj\"\r\n\tTargetFrameworkVersion=\"196613\"\r\n\t>\r\n\t<Platforms>\r\n\t\t<Platform\r\n\t\t\tName=\"Win32\"\r\n\t\t/>\r\n\t</Platforms>\r\n\t<ToolFiles>\r\n\t</ToolFiles>\r\n\t<Configurations>\r\n\t\t<Configuration\r\n\t\t\tName=\"Debug|Win32\"\r\n\t\t\tOutputDirectory=\"vc\\$(ConfigurationName)\"\r\n\t\t\tIntermediateDirectory=\"vc\\$(ConfigurationName)\"\r\n\t\t\tConfigurationType=\"0\"\r\n\t\t\tBuildLogFile=\"vc\\BuildLog.htm\"\r\n\t\t\t>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCNMakeTool\"\r\n\t\t\t\tBuildCommandLine=\"set VCInstallDir=$(VCInstallDir)&#x0D;&#x0A;set WindowsSdkDir=$(WindowsSdkDir)&#x0D;&#x0A;nmake /f Makefile.mak DEBUG=yes&#x0D;&#x0A;\"\r\n\t\t\t\tReBuildCommandLine=\"set VCInstallDir=$(VCInstallDir)&#x0D;&#x0A;set WindowsSdkDir=$(WindowsSdkDir)&#x0D;&#x0A;nmake /f Makefile.mak distclean all DEBUG=yesl\"\r\n\t\t\t\tCleanCommandLine=\"set VCInstallDir=$(VCInstallDir)&#x0D;&#x0A;set WindowsSdkDir=$(WindowsSdkDir)&#x0D;&#x0A;nmake /f Makefile.mak  clean\"\r\n\t\t\t\tOutput=\"\"\r\n\t\t\t\tPreprocessorDefinitions=\"WIN32;_DEBUG\"\r\n\t\t\t\tIncludeSearchPath=\"\"\r\n\t\t\t\tForcedIncludes=\"\"\r\n\t\t\t\tAssemblySearchPath=\"\"\r\n\t\t\t\tForcedUsingAssemblies=\"\"\r\n\t\t\t\tCompileAsManaged=\"\"\r\n\t\t\t/>\r\n\t\t</Configuration>\r\n\t\t<Configuration\r\n\t\t\tName=\"Release|Win32\"\r\n\t\t\tOutputDirectory=\"$(ConfigurationName)\"\r\n\t\t\tIntermediateDirectory=\"$(ConfigurationName)\"\r\n\t\t\tConfigurationType=\"0\"\r\n\t\t\t>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCNMakeTool\"\r\n\t\t\t\tBuildCommandLine=\"nmake /f Makefile.mak\"\r\n\t\t\t\tReBuildCommandLine=\"nmake /f Makefile.mak clean all\"\r\n\t\t\t\tCleanCommandLine=\"nmake /f Makefile.mak clean\"\r\n\t\t\t\tOutput=\"\"\r\n\t\t\t\tPreprocessorDefinitions=\"WIN32;NDEBUG\"\r\n\t\t\t\tIncludeSearchPath=\"\"\r\n\t\t\t\tForcedIncludes=\"\"\r\n\t\t\t\tAssemblySearchPath=\"\"\r\n\t\t\t\tForcedUsingAssemblies=\"\"\r\n\t\t\t\tCompileAsManaged=\"\"\r\n\t\t\t/>\r\n\t\t</Configuration>\r\n\t</Configurations>\r\n\t<References>\r\n\t</References>\r\n\t<Files>\r\n\t\t<Filter\r\n\t\t\tName=\"src\"\r\n\t\t\tFilter=\"cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx\"\r\n\t\t\tUniqueIdentifier=\"{4FC737F1-C7A5-4376-A066-2A32D752A2FF}\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\aib.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\generic-driver.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\mser.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\sift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_getopt_long.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_heap-t.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_heap.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_host.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_imopv.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_mathop.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_mathop_abs.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_nan.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_rand.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_stringop.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_threads.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\src\\test_vec_comp.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"vl\"\r\n\t\t\tFilter=\"h;hpp;hxx;hm;inl;inc;xsd\"\r\n\t\t\tUniqueIdentifier=\"{93995380-89BD-4b04-88EB-625FBE52EBFB}\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\aib.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\aib.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\array.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\array.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\covdet.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\covdet.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\dsift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\dsift.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\float.th\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\generic.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\generic.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\getopt_long.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\getopt_long.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\gmm.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\gmm.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\heap-def.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\hikmeans.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\hikmeans.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\hog.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\hog.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\homkermap.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\homkermap.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\host.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\host.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\ikmeans.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\ikmeans.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\ikmeans_elkan.tc\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\ikmeans_init.tc\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\ikmeans_lloyd.tc\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\imopv.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\imopv.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\imopv_sse2.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\imopv_sse2.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\kdtree.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\kdtree.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\kmeans.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\kmeans.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\lbp.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\lbp.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\liop.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\liop.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mathop.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mathop.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mathop_avx.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mathop_avx.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mathop_sse2.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mathop_sse2.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mser.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\mser.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\pegasos.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\pegasos.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\pgm.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\pgm.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\qsort-def.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\quickshift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\quickshift.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\random.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\random.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\rodrigues.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\rodrigues.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\scalespace.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\scalespace.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\shuffle-def.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\sift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\sift.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\slic.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\slic.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\stringop.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\stringop.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\svmdataset.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\vl\\svmdataset.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"toolbox\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\kdtree.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\mexutils.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\aib\\vl_aib.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\aib\\vl_aibhist.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_alldist.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_alldist2.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_binsearch.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_binsum.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_cummax.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\sift\\vl_dsift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\mser\\vl_erfill.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_getpid.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\gmm\\vl_gmm.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\kmeans\\vl_hikmeans.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\kmeans\\vl_hikmeanspush.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_hog.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_homkermap.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_ihashfind.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_ihashsum.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\kmeans\\vl_ikmeans.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\kmeans\\vl_ikmeanspush.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\imop\\vl_imdisttf.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\imop\\vl_imintegral.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\imop\\vl_imsmooth.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\imop\\vl_imwbackwardmx.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_inthist.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\geometry\\vl_irodr.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_kdtreebuild.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_kdtreequery.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\kmeans\\vl_kmeans.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_lbp.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_localmax.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_maketrainingset.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\mser\\vl_mser.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_pegasos.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\quickshift\\vl_quickshift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\geometry\\vl_rodr.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_sampleinthist.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_samplinthist.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\sift\\vl_sift.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\sift\\vl_siftdescriptor.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_simdctrl.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\slic\\vl_slic.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_svmpegasos.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\imop\\vl_tpsumx.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_twister.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\sift\\vl_ubcmatch.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_version.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\toolbox\\misc\\vl_whistc.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"make\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\bin.mak\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\dist.mak\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\dll.mak\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\doc.mak\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\matlab.mak\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\octave.mak\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\".\\make\\update-mak.sh\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t</Filter>\r\n\t\t<File\r\n\t\t\tRelativePath=\".\\Makefile.mak\"\r\n\t\t\t>\r\n\t\t</File>\r\n\t</Files>\r\n\t<Globals>\r\n\t</Globals>\r\n</VisualStudioProject>\r\n"
        },
        {
          "name": "vlfeat.xcodeproj",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}