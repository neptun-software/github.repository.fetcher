{
  "metadata": {
    "timestamp": 1736709985956,
    "page": 559,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pwmt/zathura",
      "stars": 2204,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.3486328125,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: LLVM\nAlignConsecutiveAssignments: true\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nAlwaysBreakTemplateDeclarations: true\nBreakBeforeBraces: Attach\nConstructorInitializerIndentWidth: 2\nNamespaceIndentation: All\nPointerAlignment: Left\nTabWidth: 2\nColumnLimit: 120\nSortIncludes: false\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.34375,
          "content": "# build files\n*.o\n*.do\n*.gcda\n*.gcno\n*.info\n*.pc\n*.sw[a-z]\n*.pyc\ntags\n\n# generated files\nresources.*\nzathura.1\nzathurarc.5\n\n# dist files\nzathura-*.tar.gz\n\n# patch files\n*.diff\n*.patch\n\n# build dirs\n.tx\nbuild/\ngcov/\nsubprojects/girara\n\n# development files\n.clang_complete\n.lvimrc\n.ropeproject\n.frama-c\ncompile_commands.json\n*.log\n.ycm_extra_conf.py\n_*/\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.994140625,
          "content": "zathura is written by:\n\nMoritz Lipp <mlq@pwmt.org>\nSebastian Ramacher <sebastian+dev@ramacher.at>\n\nOther contributors are (in no particular order):\n\nAepelzen <abietz@gmx.de>\nPavel Borzenkov <pavel.borzenkov@gmail.com>\nGéraud Le Falher <daureg@gmail.com>\nGlen Winters <lamouche@gmail.com>\nIvan Sichmann Freitas <ivansichfreitas@gmail.com>\nFelix Herrmann <felix@herrmann-koenigsberg.de>\nint3 <jezreel@gmail.com>\nkarottenreibe <k@rottenrei.be>\nJohannes Meng <j@jmeng.de>\nJ. Commelin <jcommeli@math.leidenuniv.nl>\nJulian Orth <ju.orth@googlemail.com>\nRoland Schatz <roland.schatz@students.jku.at>\nAbdó Roig-Maranges <abdo.roig@gmail.com>\nBenoît Knecht <benoit.knecht@gmail.com>\nRob Cornish <jrmcornish@gmail.com>\nMarwan Tanager <marwan.tngr@gmail.com>\nDiego Joss <djego.joss@gmail.com>\nIgnas Anikevicius <anikevicius@gmail.com>\nKamil Smardzewski <roderyk197@gmail.com>\noblique\nMaxime Chéramy <maxime.cheramy@gmail.com>\nAlexander Shabalin <shabalyn.a@gmail.com>\nLingzhu Xiang <lingzhu@lingzhuxiang.com>\nJeremie Knuesel\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.845703125,
          "content": "Copyright (c) 2009-2020 pwmt.org\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n   1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n   2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n   3. This notice may not be removed or altered from any source\n   distribution.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.880859375,
          "content": "zathura - a document viewer\n===========================\n\nzathura is a highly customizable and functional document viewer based on the\ngirara user interface library and several document libraries.\n\nRequirements\n------------\n\nThe following dependencies are required:\n\n* `gtk3` (>= 3.24)\n* `glib` (>= 2.72)\n* `girara` (>= 0.4.3)\n* `libmagic` from file(1): for mime-type detection\n* `json-glib`\n* `sqlite3` (>= 3.6.23): sqlite3 database backend\n\nThe following dependencies are optional:\n* `libsynctex` from TeXLive (>= 1.19): SyncTeX support\n* `libseccomp`: sandbox support\n\nFor building zathura, the following dependencies are also required:\n\n* `meson` (>= 0.61)\n* `gettext`\n* `pkgconf`\n\nThe following dependencies are optional build-time only dependencies:\n\n* `librvsg-bin`: PNG icons\n* `Sphinx`: manpages and HTML documentation\n* `doxygen`: HTML documentation\n* `breathe`: for HTML documentation\n* `sphinx_rtd_theme`: for HTML documentation\n\nNote that `Sphinx` is needed to build the manpages. If it is not installed, the\nman pages won't be built. For building the HTML documentation, `doxygen`,\n`breathe` and `sphinx_rtd_theme` are needed in addition to `Sphinx`.\n\nThe use of `libseccomp` and/or `landlock` to create a sandboxed environment is\noptional and can be disabled by configure the build system with\n`-Dseccomp=disabled` and `-Dlandlock=disabled`. The sandboxed version of zathura\nwill be built into a separate binary named `zathura-sandbox`.  Strict sandbox\nmode will reduce the available functionality of zathura and provide a read only\ndocument viewer.\n\nInstallation\n------------\n\nTo build and install zathura using meson's ninja backend:\n\n    meson build\n    cd build\n    ninja\n    ninja install\n\nNote that the default backend for meson might vary based on the platform. Please\nrefer to the meson documentation for platform specific dependencies.\n\nBugs\n----\n\nPlease report bugs at https://github.com/pwmt/zathura.\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 6.576171875,
          "content": "project('zathura', 'c',\n  version: '0.5.11',\n  meson_version: '>=0.61',\n  default_options: ['c_std=c17', 'warning_level=3'],\n)\n\nversion = meson.project_version()\nversion_array = version.split('.')\n\n# Rules for plugin API and ABI (non-exhaustive):\n# * zathura_plugin_function_t: If functions are addedd or removed or their\n#   signature changes, bump both ABI and API.\n# * zathura_plugin_definition_t: If the struct changes in an ABI-incompatible\n#   way, bump the ABI.\nplugin_api_version = '6'\nplugin_abi_version = '7'\n\nconf_data = configuration_data()\nconf_data.set('ZVMAJOR', version_array[0])\nconf_data.set('ZVMINOR', version_array[1])\nconf_data.set('ZVREV', version_array[2])\nconf_data.set('ZVAPI', plugin_api_version)\nconf_data.set('ZVABI', plugin_abi_version)\nconf_data.set('version', version)\n\ncc = meson.get_compiler('c')\n\nprefix = get_option('prefix')\nlocaledir = get_option('localedir')\ndatadir = get_option('datadir')\nmetainfodir = join_paths(datadir, 'metainfo')\ndesktopdir = join_paths(datadir, 'applications')\ndbusinterfacesdir = join_paths(datadir, 'dbus-1', 'interfaces')\nplugindir = join_paths(get_option('libdir'), 'zathura')\nsysconfdir = get_option('sysconfdir')\nif not sysconfdir.startswith('/')\n  sysconfdir = join_paths(prefix, sysconfdir)\nendif\n\n# required dependencies\nlibm = cc.find_library('m', required: false)\ngirara = dependency('girara-gtk3', version: '>=0.4.5', fallback: ['girara', 'girara_dependency'])\nglib = dependency('glib-2.0', version: '>=2.72')\ngio = dependency('gio-unix-2.0', required: host_machine.system() != 'windows')\ngthread = dependency('gthread-2.0', version: '>=2.72')\ngmodule = dependency('gmodule-no-export-2.0', version: '>=2.72')\ngtk3 = dependency('gtk+-3.0', version: '>=3.24')\njson_glib = dependency('json-glib-1.0')\ncairo = dependency('cairo')\nmagic = dependency('libmagic')\nsqlite = dependency('sqlite3', version: '>=3.6.23')\n\nbuild_dependencies = [libm, girara, glib, gio, gthread, gmodule, gtk3, cairo, magic, json_glib, sqlite]\n\nif host_machine.system() == 'darwin'\n  gtk_mac_integration = dependency('gtk-mac-integration-gtk3')\n  build_dependencies += gtk_mac_integration\nendif\n\n\n# defines\ndefines = [\n  '-DGETTEXT_PACKAGE=\"zathura\"',\n  '-DLOCALEDIR=\"@0@\"'.format(join_paths(prefix, localedir)),\n  '-DZATHURA_PLUGINDIR=\"@0@\"'.format(join_paths(prefix, plugindir)),\n  '-DSYSCONFDIR=\"@0@\"'.format(sysconfdir),\n  '-D_DEFAULT_SOURCE',\n]\n\nif host_machine.system() == 'darwin'\n  defines += '-DGTKOSXAPPLICATION'\nendif\n\n# compile flags\nflags = [\n  '-Werror=implicit-function-declaration',\n  '-Werror=vla',\n  '-fvisibility=hidden',\n  '-Werror=int-conversion'\n]\nflags = cc.get_supported_arguments(flags)\n\n# optional dependencies\nsynctex = dependency('synctex', version: '>=1.19', required: get_option('synctex'))\nseccomp = dependency('libseccomp', required: get_option('seccomp'))\nlandlock = cc.check_header('linux/landlock.h', required: get_option('landlock'))\n\nif synctex.found()\n  build_dependencies += synctex\n  defines += '-DWITH_SYNCTEX'\n  if synctex.version() < '2.0.0' and synctex.version() >= '1.19.0'\n    warning('You are using a synctex version pre-SONAME bump, but post-ABI-break. Please make sure to always run zathura using the correct synctex version.')\n  endif\nendif\n\n# generate version header file\nversion_header = configure_file(\n  input: 'zathura/version.h.in',\n  output: 'zathura-version.h',\n  configuration: conf_data\n)\n\ninclude_directories = [\n  include_directories('.')\n]\n\nsubdir('data')\nsubdir('po')\n\n# source files\nsources = files(\n  'zathura/adjustment.c',\n  'zathura/bookmarks.c',\n  'zathura/callbacks.c',\n  'zathura/checked-integer-arithmetic.c',\n  'zathura/commands.c',\n  'zathura/completion.c',\n  'zathura/config.c',\n  'zathura/content-type.c',\n  'zathura/database.c',\n  'zathura/database-sqlite.c',\n  'zathura/dbus-interface.c',\n  'zathura/document.c',\n  'zathura/file-monitor.c',\n  'zathura/file-monitor-glib.c',\n  'zathura/file-monitor-noop.c',\n  'zathura/file-monitor-signal.c',\n  'zathura/jumplist.c',\n  'zathura/links.c',\n  'zathura/marks.c',\n  'zathura/page.c',\n  'zathura/page-widget.c',\n  'zathura/plugin.c',\n  'zathura/print.c',\n  'zathura/render.c',\n  'zathura/shortcuts.c',\n  'zathura/synctex.c',\n  'zathura/types.c',\n  'zathura/utils.c',\n  'zathura/zathura.c',\n)\nsources += zathura_resources\n\n# header files to install\nheaders = files(\n  'zathura/document.h',\n  'zathura/links.h',\n  'zathura/macros.h',\n  'zathura/page.h',\n  'zathura/plugin-api.h',\n  'zathura/types.h',\n)\nheaders += version_header\n\n# zathura helper library\nlibzathura = static_library('zathura',\n  sources,\n  dependencies: build_dependencies,\n  include_directories: include_directories,\n  c_args: defines + flags\n)\nlibzathura_dep = declare_dependency(link_with: libzathura)\n\n# zathura-sandbox executable\nif seccomp.found() or landlock\n  sandbox_sources = files()\n  sandbox_defines = ['-DWITH_SANDBOX']\n  sandbox_dependencies = []\n  if seccomp.found()\n    sandbox_defines += '-DWITH_SECCOMP'\n    sandbox_dependencies += seccomp\n    sandbox_sources += files('zathura/seccomp-filters.c')\n  endif\n  if landlock\n    sandbox_defines += '-DWITH_LANDLOCK'\n    sandbox_sources += files('zathura/landlock.c')\n  endif\n\n  # zathura helper library\n  libzathura_sandbox = static_library('zathura-sandbox',\n    sources + sandbox_sources,\n    dependencies: build_dependencies + sandbox_dependencies,\n    include_directories: include_directories,\n    c_args: defines + flags + sandbox_defines\n  )\n  libzathura_sandbox_dep = declare_dependency(link_with: libzathura_sandbox)\n\n  zathura_sandbox = executable(\n    'zathura-sandbox',\n    files('zathura/main-sandbox.c') + sandbox_sources,\n    dependencies: build_dependencies + [libzathura_sandbox_dep] + sandbox_dependencies,\n    install: true,\n    include_directories: include_directories,\n    c_args: defines + sandbox_defines + flags,\n    export_dynamic: true,\n    win_subsystem: 'windows'\n  )\nendif\n\n# zathura executable\nzathura = executable(\n  'zathura',\n  files('zathura/main.c'),\n  dependencies: build_dependencies + [libzathura_dep],\n  install: true,\n  include_directories: include_directories,\n  c_args: defines + flags,\n  export_dynamic: true,\n  win_subsystem: 'windows'\n)\ninstall_headers(headers, subdir: 'zathura')\n\n# pkg-config file\npkg = import('pkgconfig')\npkg.generate(\n  name: 'zathura',\n  description: 'document viewer - plugin API',\n  url: 'https://pwmt.org/projects/zathura',\n  version: version,\n  requires: ['girara-gtk3', 'cairo'],\n  variables: [\n    'apiversion=@0@'.format(plugin_api_version),\n    'abiversion=@0@'.format(plugin_abi_version),\n    'plugindir=${libdir}/zathura'\n  ]\n)\n\nzathura_dependency = declare_dependency(link_with: zathura, include_directories: include_directories)\n\nsubdir('doc')\nsubdir('tests')\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 0.5380859375,
          "content": "option('synctex',\n  type: 'feature',\n  value: 'auto',\n  description: 'SyncTeX integration'\n)\noption('seccomp',\n  type: 'feature',\n  value: 'auto',\n  description: 'seccomp-based sandbox'\n)\noption('landlock',\n  type: 'feature',\n  value: 'auto',\n  description: 'landlock-based sandbox'\n)\noption('manpages',\n  type: 'feature',\n  value: 'auto',\n  description: 'manual pages'\n)\noption('tests',\n  type: 'feature',\n  value: 'auto',\n  description: 'run tests'\n)\noption('convert-icon',\n  type: 'feature',\n  value: 'auto',\n  description: 'convert icon to PNG'\n)\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "zathura",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}