{
  "metadata": {
    "timestamp": 1736709728133,
    "page": 126,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nalgeon/sqlean",
      "stars": 3857,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.052734375,
          "content": "BasedOnStyle: Chromium\nIndentWidth: 4\nColumnLimit: 100"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.00390625,
          "content": "dist"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.08203125,
          "content": "MIT License\n\nCopyright (c) 2021+ Anton Zhiyanov <https://github.com/nalgeon/sqlean>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 16.5947265625,
          "content": "# Copyright (c) 2021 Anton Zhiyanov, MIT License\n# https://github.com/nalgeon/sqlean\n\n.PHONY: test\n\nSQLITE_RELEASE_YEAR := 2021\nSQLITE_VERSION := 3360000\nSQLITE_BRANCH := 3.36\n\nSQLEAN_VERSION := '\"$(or $(shell git tag --points-at HEAD),main)\"'\n\nCC ?= gcc\nCFLAGS ?=\nCOMMON_CFLAGS := -Isrc -DSQLEAN_VERSION=$(SQLEAN_VERSION)\n\nLINIX_FLAGS := $(CFLAGS) -z now -z relro -Wall -Wsign-compare -Wno-unknown-pragmas -fPIC -shared $(COMMON_CFLAGS)\nWINDO_FLAGS := $(CFLAGS) -shared $(COMMON_CFLAGS)\nWIN32_FLAGS := $(CFLAGS) $(WINDO_FLAGS) -DSQLEAN_OMIT_UUID7\nMACOS_FLAGS := $(CFLAGS) -Wall -Wsign-compare -fPIC -dynamiclib $(COMMON_CFLAGS)\nCTEST_FLAGS := $(CFLAGS) -Wall -Wsign-compare -Wno-unknown-pragmas -Isrc\n\nprepare-dist:\n\tmkdir -p dist\n\trm -rf dist/*\n\ndownload-sqlite:\n\tcurl -L http://sqlite.org/$(SQLITE_RELEASE_YEAR)/sqlite-amalgamation-$(SQLITE_VERSION).zip --output src.zip\n\tunzip src.zip\n\tmv sqlite-amalgamation-$(SQLITE_VERSION)/* src\n\ndownload-external:\n\tcurl -L https://github.com/mackyle/sqlite/raw/branch-$(SQLITE_BRANCH)/src/test_windirent.h --output src/test_windirent.h\n\ncompile-linux:\n\t$(CC) -O1 $(LINIX_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/crypto.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/define.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/fileio.so\n\t$(CC) -O1 $(LINIX_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/fuzzy.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/ipaddr.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/math.so -lm\n\t$(CC) -O3 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/regexp.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/stats.so -lm\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/text.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/time.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/unicode.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/uuid.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/vsv.so -lm\n\t$(CC) -O1 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/sqlean.so -lm\n\ncompile-linux-x86:\n\tmkdir -p dist/x86\n\t$(CC) -O1 $(LINIX_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/x86/crypto.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/x86/define.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/x86/fileio.so\n\t$(CC) -O1 $(LINIX_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/x86/fuzzy.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/x86/ipaddr.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/x86/math.so -lm\n\t$(CC) -O3 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/x86/regexp.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/x86/stats.so -lm\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/x86/text.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/x86/time.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/x86/unicode.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/x86/uuid.so\n\t$(CC) -O3 $(LINIX_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/x86/vsv.so -lm\n\t$(CC) -O1 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/x86/sqlean.so -lm\n\ncompile-linux-musl:\n\tmkdir -p dist/musl\n\tmusl-gcc -O1 $(LINIX_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/musl/crypto.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/musl/define.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/musl/fileio.so\n\tmusl-gcc -O1 $(LINIX_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/musl/fuzzy.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/musl/ipaddr.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/musl/math.so -lm\n\tmusl-gcc -O3 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/musl/regexp.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/musl/stats.so -lm\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/musl/text.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/musl/time.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/musl/unicode.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/musl/uuid.so\n\tmusl-gcc -O3 $(LINIX_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/musl/vsv.so -lm\n\tmusl-gcc -O1 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/musl/sqlean.so -lm\n\ncompile-linux-arm64:\n\tmkdir -p dist/arm64\n\taarch64-linux-gnu-gcc -O1 $(LINIX_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/arm64/crypto.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/arm64/define.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/arm64/fileio.so\n\taarch64-linux-gnu-gcc -O1 $(LINIX_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/arm64/fuzzy.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/arm64/ipaddr.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/arm64/math.so -lm\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/arm64/regexp.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/arm64/stats.so -lm\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/arm64/text.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/arm64/time.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/arm64/unicode.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/arm64/uuid.so\n\taarch64-linux-gnu-gcc -O3 $(LINIX_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/arm64/vsv.so -lm\n\taarch64-linux-gnu-gcc -O1 $(LINIX_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/arm64/sqlean.so -lm\n\npack-linux:\n\tzip -j dist/sqlean-linux-x86.zip dist/x86/*.so\n\tzip -j dist/sqlean-linux-arm64.zip dist/arm64/*.so\n\ncompile-windows:\n\tgcc -O1 $(WINDO_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/crypto.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/define.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/fileio.dll\n\tgcc -O1 $(WINDO_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/fuzzy.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/math.dll -lm\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-regexp.c -include src/regexp/constants.h src/regexp/*.c src/regexp/pcre2/*.c -o dist/regexp.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/stats.dll -lm\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/text.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/time.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/unicode.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/uuid.dll\n\tgcc -O3 $(WINDO_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/vsv.dll -lm\n\tgcc -O1 $(WINDO_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/sqlean.dll -lm\n\ncompile-windows-x86:\n\tmkdir -p dist/x86\n\tgcc -O1 $(WIN32_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/x86/crypto.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/x86/define.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/x86/fileio.dll\n\tgcc -O1 $(WIN32_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/x86/fuzzy.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/x86/math.dll -lm\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-regexp.c -include src/regexp/constants.h src/regexp/*.c src/regexp/pcre2/*.c -o dist/x86/regexp.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/x86/stats.dll -lm\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/x86/text.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/x86/unicode.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/x86/uuid.dll\n\tgcc -O3 $(WIN32_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/x86/vsv.dll -lm\n\tgcc -O1 $(WIN32_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/x86/sqlean.dll -lm\n\npack-windows:\n\t7z a -tzip dist/sqlean-win-x86.zip ./dist/x86/*.dll\n\t7z a -tzip dist/sqlean-win-x64.zip ./dist/*.dll\n\ncompile-macos:\n\t$(CC) -O1 $(MACOS_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/crypto.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/define.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/fileio.dylib\n\t$(CC) -O1 $(MACOS_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/fuzzy.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/ipaddr.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/math.dylib -lm\n\t$(CC) -O3 $(MACOS_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/regexp.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/stats.dylib -lm\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/text.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/time.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/unicode.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/uuid.dylib\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/vsv.dylib -lm\n\t$(CC) -O1 $(MACOS_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/sqlean.dylib -lm\n\ncompile-macos-x86:\n\tmkdir -p dist/x86\n\t$(CC) -O1 $(MACOS_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/x86/crypto.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/x86/define.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/x86/fileio.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O1 $(MACOS_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/x86/fuzzy.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/x86/ipaddr.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/x86/math.dylib -target x86_64-apple-macos10.12 -lm\n\t$(CC) -O3 $(MACOS_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/x86/regexp.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/x86/stats.dylib -target x86_64-apple-macos10.12 -lm\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/x86/text.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/x86/time.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/x86/unicode.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/x86/uuid.dylib -target x86_64-apple-macos10.12\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/x86/vsv.dylib -target x86_64-apple-macos10.12 -lm\n\t$(CC) -O1 $(MACOS_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/x86/sqlean.dylib -target x86_64-apple-macos10.12 -lm\n\ncompile-macos-arm64:\n\tmkdir -p dist/arm64\n\t$(CC) -O1 $(MACOS_FLAGS) src/sqlite3-crypto.c src/crypto/*.c -o dist/arm64/crypto.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-define.c src/define/*.c -o dist/arm64/define.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-fileio.c src/fileio/*.c -o dist/arm64/fileio.dylib -target arm64-apple-macos11\n\t$(CC) -O1 $(MACOS_FLAGS) src/sqlite3-fuzzy.c src/fuzzy/*.c -o dist/arm64/fuzzy.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-ipaddr.c src/ipaddr/*.c -o dist/arm64/ipaddr.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-math.c src/math/*.c -o dist/arm64/math.dylib -target arm64-apple-macos11 -lm\n\t$(CC) -O3 $(MACOS_FLAGS) -include src/regexp/constants.h src/sqlite3-regexp.c src/regexp/*.c src/regexp/pcre2/*.c -o dist/arm64/regexp.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-stats.c src/stats/*.c -o dist/arm64/stats.dylib -target arm64-apple-macos11 -lm\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-text.c src/text/*.c src/text/*/*.c -o dist/arm64/text.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-time.c src/time/*.c -o dist/arm64/time.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-unicode.c src/unicode/*.c -o dist/arm64/unicode.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-uuid.c src/uuid/*.c -o dist/arm64/uuid.dylib -target arm64-apple-macos11\n\t$(CC) -O3 $(MACOS_FLAGS) src/sqlite3-vsv.c src/vsv/*.c -o dist/arm64/vsv.dylib -target arm64-apple-macos11 -lm\n\t$(CC) -O1 $(MACOS_FLAGS) -include src/regexp/constants.h src/sqlite3-sqlean.c src/crypto/*.c src/define/*.c src/fileio/*.c src/fuzzy/*.c src/ipaddr/*.c src/math/*.c src/regexp/*.c src/regexp/pcre2/*.c src/stats/*.c src/text/*.c src/text/*/*.c src/time/*.c src/unicode/*.c src/uuid/*.c src/vsv/*.c -o dist/arm64/sqlean.dylib -target arm64-apple-macos11 -lm\n\npack-macos:\n\tzip -j dist/sqlean-macos-x86.zip dist/x86/*.dylib\n\tzip -j dist/sqlean-macos-arm64.zip dist/arm64/*.dylib\n\ntest-all:\n\tmake test suite=crypto\n\tmake test suite=define\n\tmake test suite=fileio\n\tmake test suite=fuzzy\n\tmake test suite=ipaddr\n\tmake test suite=math\n\tmake test suite=regexp\n\tmake test suite=stats\n\tmake test suite=time\n\tmake test suite=text\n\tmake test suite=unicode\n\tmake test suite=uuid\n\tmake test suite=vsv\n\tmake test suite=sqlean\n\n# fails if grep does find a failed test case\n# https://stackoverflow.com/questions/15367674/bash-one-liner-to-exit-with-the-opposite-status-of-a-grep-command/21788642\ntest:\n\t@sqlite3 < test/$(suite).sql > test.log\n\t@cat test.log | (! grep -Ex \"[0-9_]+.[^1]\")\n\nctest-all:\n\t$(CC) $(CTEST_FLAGS) test/text/bstring.test.c src/text/*.c src/text/*/*.c -o text.bstring\n\tmake ctest package=text module=bstring\n\t$(CC) $(CTEST_FLAGS) test/text/rstring.test.c src/text/*.c src/text/*/*.c -o text.rstring\n\tmake ctest package=text module=rstring\n\t$(CC) $(CTEST_FLAGS) test/text/utf8.test.c src/text/utf8/*.c -o text.utf8\n\tmake ctest package=text module=utf8\n\t$(CC) $(CTEST_FLAGS) test/time/time.test.c src/time/*.c -o time.time\n\tmake ctest package=time module=time\n\t$(CC) $(CTEST_FLAGS) test/time/duration.test.c src/time/*.c -o time.duration -lm\n\tmake ctest package=time module=duration\n\nctest:\n\t@chmod +x $(package).$(module)\n\t@./$(package).$(module)\n\t@rm -f $(package).$(module)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.2431640625,
          "content": "# All the missing SQLite functions\n\nSQLite has few functions compared to other database management systems. SQLite authors see this as a feature rather than a problem, because SQLite has an extension mechanism in place.\n\nThere are a lot of SQLite extensions out there, but they are incomplete, inconsistent and scattered across the internet. Sqlean brings them together, neatly packaged into domain modules, documented, tested, and built for Linux, Windows and macOS.\n\nWe do not try to gather all the existing extensions into one giant pile — that would not be very useful. The goal is to create a well-thought set of domain modules with a convenient API. A kind of standard library for SQLite.\n\nTo achieve it, we split extensions that are too broad, merge the ones that are too narrow, refactor, add missing features, test, document, and do a ton of other small things.\n\n[Main set](#main-set) •\n[Other extensions](#other-extensions) •\n[Downloading](#downloading) •\n[Installation](#installation-and-usage) •\n[Sister projects](#sister-projects) •\n[Funding](#funding)\n\n## Main set\n\nThese are the most popular functions. They are tested, documented and organized into the domain modules with clear API.\n\nThink of them as the extended standard library for SQLite:\n\n-   [crypto](docs/crypto.md): hashing, encoding and decoding data\n-   [define](docs/define.md): user-defined functions and dynamic sql\n-   [fileio](docs/fileio.md): read and write files\n-   [fuzzy](docs/fuzzy.md): fuzzy string matching and phonetics\n-   [ipaddr](docs/ipaddr.md): IP address manipulation\n-   [math](docs/math.md): math functions\n-   [regexp](docs/regexp.md): regular expressions\n-   [stats](docs/stats.md): math statistics\n-   [text](docs/text.md): string functions and Unicode\n-   [time](docs/time.md): high-precision date/time\n-   [uuid](docs/uuid.md): Universally Unique IDentifiers\n-   [vsv](docs/vsv.md): CSV files as virtual tables\n\nThe single-file `sqlean` bundle contains all extensions from the main set.\n\n## Other extensions\n\nThe scope of this project is limited to extensions without external dependencies (other than the C standard library and SQLite itself).\n\nThere are a lot of useful extensions that do not quite fit the scope for various reasons. To learn more about them, visit the [SQLite extension hub](https://sqlpkg.org/).\n\n## Downloading\n\nThere are [precompiled binaries](https://github.com/nalgeon/sqlean/releases/latest) for every OS:\n\n-   `sqlean-win-x64.zip` - for Windows\n-   `sqlean-linux-x86.zip` - for Linux (x86 CPU)\n-   `sqlean-linux-arm64.zip` - for Linux (ARM CPU)\n-   `sqlean-macos-x86.zip` - for Intel-based macOS\n-   `sqlean-macos-arm64.zip` - for Apple silicon (ARM-based) macOS\n\nBinaries are 64-bit and require a 64-bit SQLite version. If you are using SQLite shell on Windows (`sqlite.exe`), its 64-bit version is available at https://github.com/nalgeon/sqlite.\n\nOther extensions are available for download from [sqlpkg.org](https://sqlpkg.org/).\n\n## Installation and usage\n\nThe easiest way to try out Sqlean extensions is to use the [pre-bundled shell](docs/shell.md). But you can also load them individually.\n\nFor example, using the SQLite command-line interface:\n\n```\nsqlite> .load ./sqlean\nsqlite> select median(value) from generate_series(1, 99);\n```\n\nSee [How to install an extension](docs/install.md) for usage with IDE, Python, JavaScript, etc.\n\n## Building from source\n\nDownload the dependencies:\n\n```\nmake prepare-dist\nmake download-sqlite\nmake download-external\n```\n\nThen build for your OS (choose one of the following):\n\n```\nmake compile-linux\nmake compile-windows\nmake compile-macos\n```\n\nYou'll find the compiled extensions in the `dist` folder.\n\n## Contributing\n\nThis project only accepts bug fixes and minor improvements. If you'd like to contribute a new extension, please submit it to the [extension hub repo](https://github.com/nalgeon/sqlpkg/).\n\n## Sister projects\n\nProjects related to Sqlean:\n\n-   [sqlpkg.org](https://sqlpkg.org/): a catalog of all SQLite extensions, with search and manual downloads.\n-   [sqlime.org](https://sqlime.org/): an online SQLite playground for debugging and sharing SQL snippets.\n-   [sqlpkg](https://github.com/nalgeon/sqlpkg-cli): an automated packager manager for SQLite (like `npm` for JS or `pip` for Python).\n-   [sqlean.py](https://github.com/nalgeon/sqlean.py): a drop-in replacement for the default `sqlite3` module.\n-   [sqlean.js](https://github.com/nalgeon/sqlean.js): browser-based SQLite with extensions.\n-   [shell](https://github.com/nalgeon/sqlite): custom builds for SQLite and Sqlean shells.\n\n## License\n\nCopyright 2021-2024 [Anton Zhiyanov](https://antonz.org/), [Contributors](https://github.com/nalgeon/sqlean/graphs/contributors) and [Third-party Authors](docs/third-party.md).\n\nSqlean was kindly sponsored by [Paul Harrington](https://github.com/phrrngtn). Thank you, Paul!\n\nThe software is available under the MIT License.\n\n## Support\n\nSqlean is mostly a [one-man](https://antonz.org/) project, not backed by a VC fund or anything.\n\nIf you find Sqlean useful, please star it on GitHub and spread the word among your peers. It really helps to move the project forward.\n\nIf you use Sqlean for commercial purposes, consider [purchasing support](https://antonz.gumroad.com/l/sqlean-plus).\n\n★ [Subscribe](https://antonz.org/subscribe/) to stay on top of new features.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "sqlpkg.json",
          "type": "blob",
          "size": 0.625,
          "content": "{\n    \"owner\": \"nalgeon\",\n    \"name\": \"sqlean\",\n    \"version\": \"0.27.1\",\n    \"homepage\": \"https://github.com/nalgeon/sqlean\",\n    \"repository\": \"https://github.com/nalgeon/sqlean\",\n    \"authors\": [\"Anton Zhiyanov\"],\n    \"license\": \"MIT\",\n    \"description\": \"The ultimate set of SQLite extensions.\",\n    \"keywords\": [\"sqlean\"],\n    \"assets\": {\n        \"files\": {\n            \"darwin-amd64\": \"sqlean-macos-x86.zip\",\n            \"darwin-arm64\": \"sqlean-macos-arm64.zip\",\n            \"linux-amd64\": \"sqlean-linux-x86.zip\",\n            \"linux-arm64\": \"sqlean-linux-arm64.zip\",\n            \"windows-amd64\": \"sqlean-win-x64.zip\"\n        }\n    }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}