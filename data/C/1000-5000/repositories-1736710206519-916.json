{
  "metadata": {
    "timestamp": 1736710206519,
    "page": 916,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wb2osz/direwolf",
      "stars": 1625,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6318359375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n\n# My rules to remove any doubt\n\n*.c \t\ttext\n*.cpp\t\ttext\n*.h\t\ttext\n*.pl\t\ttext\n*.py\t\ttext\n*.sh\t\ttext\n*.txt\t\ttext\n*.desktop\ttext\n*.conf\t\ttext\n*.rc\t\ttext\n*.spec\t\ttext\n*.bat\t\ttext\n*.1\t\ttext\n*.md\t\ttext\nCOPYING\t\ttext\nMakefile*\ttext\nREADME*\t\ttext\n\n*.ico\t\tbinary\n*.png\t\tbinary\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0986328125,
          "content": "# Custom\n*.docx\nz*\n*.log\n*bak*\n*~\n*.xlsx\n*.stackdump\n*.wav\n\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Binaries, other build results\n\naclients\natest\ndecode_aprs\ndirewolf\ngen_fff\ngen_packets\nll2utm\nlog2gpx\ntext2tt\ntt2text\nttcalc\nutm2ll\n\ndirewolf.conf\nfsk_fast_filter.h\ndirewolf.desktop\n\n\n# =========================\n# Operating System Files\n# =========================\n\n# OSX\n# =========================\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Windows\n# =========================\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n/use_this_sdk\n*.dSYM\n\n# cmake\nbuild/\ntmp/"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 21.4111328125,
          "content": "\n# Revision History #\n\n\n## Version 1.7  --  October 2023 ##\n\n\n### New Documentation: ###\n\nAdditional documentation location to slow down growth of main repository.  [https://github.com/wb2osz/direwolf-doc](https://github.com/wb2osz/direwolf-doc) .   These are more oriented toward achieving a goal and understanding, as opposed to the User Guide which describes the functionality.\n\n- ***APRS Digipeaters***\n\n- ***Internal Packet Routing***\n\n- ***Radio Interface Guide***\n\n- ***Successful IGate Operation***\n\n- ***Understanding APRS Packets***\n\n\n### New Features: ###\n\n\n\n- New ICHANNEL configuration option to map a KISS client application channel to APRS-IS. Packets from APRS-IS will be presented to client applications as the specified channel. Packets sent, by client applications, to that channel will go to APRS-IS rather than a radio channel.  Details in ***Internal-Packet-Routing.pdf***.\n\n- New variable speed option for gen_packets. For example,  \"-v 5,0.1\" would generate packets from 5% too slow to 5% too fast with increments of 0.1.  Some implementations might have imprecise timing.  Use this to test how well TNCs tolerate sloppy timing.\n\n- Improved Layer 2 Protocol [(IL2P)](https://en.wikipedia.org/wiki/FX.25_Forward_Error_Correction).    Compatible with Nino TNC for 1200 and 9600 bps.  Use \"-I 1\" on command line to enable transmit for first channel.  For more general case, add to config file (simplified version, see User Guide for more details):\n\n    > After:   \"CHANNEL 1\"   (or other channel)\n    >\n    > Add:     \"IL2PTX 1\"\n\n- Limited support for CM108/CM119 GPIO PTT on Windows.\n\n- Dire Wolf now advertises itself using DNS Service Discovery.  This allows suitable APRS / Packet Radio applications to find a network KISS TNC without knowing the IP address or TCP port.    Thanks to Hessu for providing this.  Currently available only for Linux and Mac OSX.  [Read all about it here.](https://github.com/hessu/aprs-specs/blob/master/TCP-KISS-DNS-SD.md)\n\n- The transmit calibration tone (-x) command line option now accepts a radio channel number and/or a single letter mode:  a = alternate tones, m = mark tone, s = space tone, p = PTT only no sound.\n\n- The BEACON configuration now recognizes the SOURCE= option.  This replaces the AX.25 source address rather than using the MYCALL value for the channel.  This is useful for sending more than 5 analog telemetry channels.  Use two, or more, source addresses with up to 5 analog channels each.\n\n- For more flexibility, the FX.25 transmit property can now be set individually by channel, rather than having a global setting for all channels.  The -X on the command line applies only to channel 0.  For other channels you need to add a new line to the configuration file.  You can specify a specific number of parity bytes (16, 32, 64) or 1 to choose automatically based on packet size.\n\n    > After:   \"CHANNEL 1\"   (or other channel)\n    >\n    > Add:     \"FX25TX 1\" (or 16 or 32 or 64)\n\n\n\n### Bugs Fixed: ###\n\n- The t/m packet filter incorrectly included bulletins.  It now allows only \"messages\" to specific stations.  Use of t/m is discouraged.  i/180 is the preferred filter for messages to users recently heard locally.\n\n- Packet filtering now skips over any third party header before classifying packet types.\n\n- Fixed build for Alpine Linux.\n\n### Notes: ###\n\nThe Windows binary distribution now uses gcc (MinGW) version 11.3.0.\nThe Windows version is built for both 32 and 64 bit operating systems.\nUse the 64 bit version if possible; it runs considerably faster.\n\n## Version 1.6  --  October 2020 ##\n\n### New Build Procedure: ###\n\n\n- Rather than trying to keep a bunch of different platform specific Makefiles in sync, \"cmake\" is now used for greater portability and easier maintenance.  This was contributed by Davide Gerhard.\n\n- README.md has a quick summary of the process.  More details in the ***User Guide***.\n\n\n### New Features: ###\n\n\n- \"-X\" option enables FX.25 transmission.  FX.25 reception is always enabled so you don't need to do anything special.  \"What is FX.25?\" you might ask.  It is forward error correction (FEC) added in a way that is completely compatible with an ordinary AX.25 frame.  See new document ***AX25\\_plus\\_FEC\\_equals\\_FX25.pdf*** for details.\n\n- Receive AIS location data from ships.  Enable by using \"-B AIS\" command line option or \"MODEM AIS\" in the configuration file.  AIS NMEA sentences are encapsulated in APRS user-defined data with a \"{DA\" prefix.  This uses 9600 bps so you need to use wide band audio, not what comes out of the speaker.  There is also a \"-A\" option to generate APRS Object Reports.\n\n- Receive Emergency Alert System (EAS) Specific Area Message Encoding (SAME).  Enable by using \"-B EAS\" command line option or \"MODEM EAS\" in the configuration file.  EAS SAME messages are encapsulated in APRS user-defined data with a \"{DE\" prefix.  This uses low speed AFSK so speaker output is fine.\n\n- \"-t\" option now accepts more values to accommodate inconsistent handling of text color control codes by different terminal emulators.  The default, 1, should work with most modern terminal types.  If the colors are not right, try \"-t 9\" to see the result of the different choices and pick the best one.  If none of them look right, file a bug report and specify: operating system version (e.g. Raspbian Buster), terminal emulator type and version (e.g.  LXTerminal 0.3.2).   Include a screen capture.\n\n\n- \"-g\" option to force G3RUH mode for lower speeds where a different modem type may be the default.\n\n- 2400 bps compatibility with MFJ-2400.  See ***2400-4800-PSK-for-APRS-Packet-Radio.pdf*** for details\n\n- \"atest -h\" will display the frame in hexadecimal for closer inspection.\n\n- Add support for Multi-GNSS NMEA sentences.\n\n\n\n### Bugs Fixed: ###\n\n- Proper counting of frames in transmit queue for AGW protocol 'Y' command.\n\n\n\n### New Documentation: ###\n\n- ***AX.25 + FEC = FX.25***\n\n- ***AIS Reception***\n\n- ***AX.25 Throughput: Why is 9600 bps Packet Radio only twice as fast as 1200?***\n\n- [***Ham Radio of Things (HRoT) - IoT over Ham Radio***](https://github.com/wb2osz/hrot)\n\n- [***EAS SAME to APRS Message Converter***](https://github.com/wb2osz/eas2aprs)\n\n- [***Dire Wolf PowerPoint Slide Show***](https://github.com/wb2osz/direwolf-presentation)\n\n### Notes: ###\n\nThe Windows binary distribution now uses gcc (MinGW) version 7.4.0.\nThe Windows version is built for both 32 and 64 bit operating systems.\nUse the 64 bit version if possible; it runs considerably faster.\n\n\n\n## Version 1.5  --  September 2018 ##\n\n\n### New Features: ###\n\n- PTT using GPIO pin of CM108/CM119 (e.g. DMK URI, RB-USB RIM), Linux only.\n\n- More efficient error recovery for AX.25 connected mode.  Better generation and processing of REJ and SREJ to reduce unnecessary duplicate \"**I**\" frames.\n\n- New configuration option, \"**V20**\", for listing stations known to not understand AX.25 v2.2.  This will speed up connection by going right to SABM and not trying SABME first and failing.\n\n- New \"**NOXID**\" configuration file option to avoid sending XID command to listed station(s).  If other end is a partial v2.2 implementation, which recognizes SABME, but not XID, we would waste a lot of time resending XID many times before giving up.   This is less drastic than the \"**V20**\" option which doesn't even attempt to use v2.2 with listed station(s).\n\n- New application \"**kissutil**\" for troubleshooting a KISS TNC or interfacing to an application via files.\n\n- KISS \"Set Hardware\" command to report transmit queue length.\n\n- TCP KISS can now handle multiple concurrent applications.\n\n- Linux can use serial port for KISS in addition to a pseudo terminal.\n\n- decode_aprs utility can now accept KISS frames and AX.25 frames as series of two digit hexadecimal numbers.\n\n- Full Duplex operation.  (Put \"FULLDUP ON\" in channel section of configuration file.)\n\n- Time slots for beaconing.\n\n- Allow single log file with fixed name rather than starting a new one each day.\n\n\n\n### Bugs Fixed: ###\n\n- Possible crash when CDIGIPEAT did not include the optional alias.\n\n- PACLEN configuration item no longer restricts length of received frames.\n\n- Strange failures when trying to use multiple KISS client applications over TCP.  Only Linux was affected.  \n\n- Under certain conditions, outgoing connected mode data would get stuck in a queue and not be transmitted.  This could happen if client application sends a burst of data larger than the \"window\" size (MAXFRAME or EMAXFRAME option).\n\n\n- Little typographical / spelling errors in messages.\n\n\n### Documentation: ###\n\n\n- New document ***Bluetooth-KISS-TNC.pdf*** explaining how to use KISS over Bluetooth.\n\n- Updates describing cheap SDR frequency inaccuracy and how to compensate for it.\n\n### Notes: ###\n\nWindows binary distribution now uses gcc (MinGW) version 6.3.0.\n\n----------\n\n## Version 1.4  -- April 2017 ##\n\n\n### New Features: ###\n\n- AX.25 v2.2 connected mode.  See chapter 10 of User Guide for details.\n\n- New client side packet filter to select \"messages\" only to stations that have been heard nearby recently.  This is now the default if no IS to RF filter is specified.\n\n- New beacon type, IBEACON, for sending IGate statistics.\n\n- Expanded debug options so you can understand what is going on with packet filtering.\n\n- Added new document ***Successful-APRS-IGate-Operation.pdf*** with IGate background, configuration, and troubleshooting tips.\n- 2400 & 4800 bps PSK modems.  See ***2400-4800-PSK-for-APRS-Packet-Radio.pdf*** in the doc directory for discussion.\n\n- The top speed of 9600 bps has been increased to 38400.  You will need a sound card capable of 96k or 192k samples per second for the higher rates.  Radios must also have adequate bandwidth.  See ***Going-beyond-9600-baud.pdf*** in the doc directory for more details.\n\n- Better decoder performance for 9600 and higher especially for low audio sample rate to baud ratios.\n\n- Generate waypoint sentences for use by AvMap G5 / G6 or other mapping devices or applications.   Formats include\n - $GPWPL\t- NMEA generic with only location and name.\n - $PGRMW\t- Garmin, adds altitude, symbol, and comment to previously named waypoint.\n - $PMGNWPL\t- Magellan, more complete for stationary objects.\n - $PKWDWPL\t- Kenwood with APRS style symbol but missing comment.\n\n\n- DTMF tones can be sent by putting \"DTMF\" in the destination address,  similar to the way that Morse Code is sent.\n\n- Take advantage of new 'gpio' group and new /sys/class/gpio ownership in Raspbian Jessie.\n\n- Handle more complicated gpio naming for CubieBoard, etc.\n\n- More flexible dw-start.sh start up script for both GUI and CLI environments.\n\n\n \n### Bugs Fixed: ###\n\n- The transmitter (PTT control) was being turned off too soon when sending Morse Code.\n\n- The -qd (quiet decode) command line option now suppresses errors about improperly formed Telemetry packets.\n\n- Longer tocall.txt files can now be handled.  \n\n- Sometimes kissattach would have an issue with the Dire Wolf pseudo terminal.  This showed up most often on Raspbian but sometimes occurred with other versions of Linux.\n\n\t*kissattach: Error setting line discipline: TIOCSETD: Device or resource busy\n\tAre you sure you have enabled MKISS support in the kernel\n\tor, if you made it a module, that the module is loaded?*\n\t\n\n- Sometimes writes to a pseudo terminal would block causing the received\nframe processing thread to hang.   The first thing you will notice is that\nreceived frames are not being printed.  After a while this message will appear:\n\n  \t*Received frame queue is out of control. Length=... Reader thread is probably \n  \tfrozen.  This can be caused by using a pseudo terminal (direwolf -p) where \n  \tanother application is not reading the frames from the other side.*\n\n- -p command line option caused segmentation fault with glibc >= 2.24.\n\n\n- The Windows version 1.3 would crash when starting to transmit on Windows XP. There have also been some other reports of erratic behavior on Windows. The crashing problem was fixed in in the 1.3.1 patch release.   Linux version was not affected.\n\n- IGate did not retain nul characters in the information part of a packet.  This should never happen with a valid APRS packet but there are a couple cases where it has.  If we encounter these malformed packets, pass them along as-is, rather than truncating.\n\n- Don't digipeat packets when the source is my call.\n\n\n\n----------\n\n## Version 1.3  -- May 2016 ##\n\n### New Features: ###\n\n- Support for Mac OS X. \n\n- Many APRStt enhancements including: Morse code and speech responses to to APRStt tone sequences, new 5 digit callsign suffix abbreviation, \nposition ambiguity for latitude and longitude in object reports\n\n- APRS Telemetry Toolkit.\n \n- GPS Tracker beacons are now available for the Windows version.  Previously this was only in the Linux version.\n\n- SATgate mode for IGate.  Packets heard directly are delayed before being sent\nto the Internet Server.   This favors digipeated packets because the original\narrives later and gets dropped if there are duplicates.\n\n- Added support for hamlib. This provides more flexible options for PTT control.\n\n- Implemented AGW network protocol 'M' message for sending UNPROTO information without digipeater path.\n\n\n- A list of all symbols available can be obtained with the -S\ncommand line option.\n\n- Command line option \"-a n\" to print audio device statistics each n seconds.  Previously this was always each 100 seconds on Linux and not available on Windows.\n\n### Bugs Fixed: ###\n\n\n\n- Fixed several cases where crashes were caused by unexpected packet contents:\n\n - When receiving packet with unexpected form of GPS NMEA sentence.\n\n - When receiving packet with comment of a few hundred characters.\n \n - Address in path, from Internet server, more than 9 characters.\n\n- \"INTERNAL ERROR: dlq_append NULL packet pointer.\" when using PASSALL.\n\n- In Mac OSX version:  Assertion failed: (adev[a].inbuf_size_in_bytes >= 100 &&   adev[a].inbuf_size_in_bytes <= 32768), function audio_get, file audio_portaudio.c, line 917.\n\n- Tracker beacons were not always updating the location properly.\n\n- AGW network protocol now works properly for big-endian processors\nsuch as PowerPC or MIPS.\n\n- Packet filtering treated telemetry metadata as messages rather than telemetry.\n\n----------\n\n## Version 1.2  -- June 2015 ##\n\n### New Features ###\n\n- Improved decoder performance.  \nOver 1000 error-free frames decoded from WA8LMF TNC Test CD.  \nSee ***A-Better-APRS-Packet-Demodulator-Part-1-1200-baud.pdf*** for details.\n\n- Up to 3 soundcards and 6 radio channels can be handled at the same time.\n\n- New framework for applications which listen for Touch Tone commands\nand respond with voice.  A sample calculator application is included\nas a starting point for building more interesting applications.  \nFor example, if it hears the DTMF sequence \"2*3*4#\" it will respond \nwith the spoken words \"Twenty Four.\"  \n\n- Reduced latency for transfers to/from soundcards.\n\n- More accurate transmit PTT timing.\n\n- Packet filtering for digipeater and IGate.\n\n- New command line -q (quiet) option to suppress some types of output.\n\n- Attempted fixing of corrupted bits now works for 9600 baud.\n\n- Implemented AGW network protocol 'y' message so applications can\nthrottle generation of packets when sending a large file.\n\n- When using serial port RTS/DTR to activate transmitter, the two\ncontrol lines can now be driven with opposite polarity as required\nby some interfaces.\n\n- Data Carrier Detect (DCD) can be sent to an output line (just \nlike PTT) to activate a carrier detect light.\n\n- Linux \"man\" pages for on-line documentation.\n\n- AGWPORT and KISSPORT can be set to 0 to disable the interfaces.\n\n- APRStt gateway enhancements:  MGRS/USNG coordinates, new APRStt3\nformat call, satellite grid squares.\n\n\n### Bugs fixed ###\n\n- Fixed \"gen_packets\" so it now handles user-specified messages correctly.\n\n- Under some circumstances PTT would be held on long after the transmit\naudio was finished.\n\n\n\n### Known problems ###\n\n- Sometimes writes to a pseudo terminal will block causing the received\nframe processing thread to hang.   The first thing you will notice is that\nreceived frames are not being printed.  After a while this message will appear:\n\n  Received frame queue is out of control. Length=... Reader thread is probably \n  frozen.  This can be caused by using a pseudo terminal (direwolf -p) where \n  another application is not reading the frames from the other side.\n\n-----------\n\n## Version 1.1  -- December 2014 ##\n\n### New Features ###\n\n- Logging of received packets and utility to convert log file\ninto GPX format.\n\n- AGW network port formerly allowed only one connection at a \ntime.  It can now accept 3 client applications at the same time.  \n(Same has not yet been done for network KISS port.)\n\n- Frequency / offset / tone standard formats are now recognized.\nNon-standard attempts, in the comment, are often detected and\na message suggests the correct format.\n\n- Telemetry is now recognized.  Messages are printed for\nusage that does not adhere to the published standard.\n\n- Tracker function transmits location from GPS position.\nNew configuration file options: TBEACON and SMARTBEACONING.\n(For Linux only.   Warning - has not been well tested.)\n\n- Experimental packet regeneration feature for HF use.\nWill be documented later if proves to be useful...\n\n- Several enhancements for trying to fix incorrect CRC: \nAdditional types of attempts to fix a bad CRC.\nOptimized code to reduce execution time.\nImproved detection of duplicate packets from different fixup attempts.\nSet limit on number of packets in fix up later queue.\n\n- Beacon positions can be specified in either latitude / longitude\nor UTM coordinates.\n\n- It is still highly recommended, but no longer mandatory, that\nbeaconing be enabled for digipeating to work.\n\n* Bugs fixed:\n\n- For Windows version, maximum serial port was COM9.\nIt is now possible to use COM10 and higher.\n\n- Fixed issue with KISS protocol decoder state that showed up\nonly with \"binary\" data in packets (e.g.  RMS Express).\n\n- An extra 00 byte was being appended to packets from AGW\nnetwork protocol 'K' messages.\n\n- Invalid data from an AGW client application could cause an\napplication crash.\n\n- OSS (audio interface for non-Linux versions of Unix) should \nbe better now.\n\n### Known problems ###\n\n- Sometimes kissattach fails to connect with \"direwolf -p\".\nThe User Guide and Raspberry Pi APRS document have a couple work-arounds.\n\n-----------\n\n## Version 1.0a\t-- May 2014 ##\n\n### Bug fixed ###\n\n- Beacons sent directly to IGate server had incorrect source address.\n\n-----------\n\n## Version 1.0 -- May 2014 ##\n\n### New Features ###\n\n- Received audio can be obtained with a UDP socket or stdin.\nThis can be used to take audio from software defined radios\nsuch as rtl_fm or gqrx.\n\n- 9600 baud data rate.\n\n- New PBEACON and OBEACON configuration options. Previously\nit was necessary to handcraft beacons. \n\n- Less CPU power required for 300 baud.  This is important\nif you want to run a bunch of decoders at the same time\nto tolerate off-frequency HF SSB signals.\n\n- Improved support for UTF-8 character set.\n\n- Improved troubleshooting display for APRStt macros.\n\n- In earlier versions, the DTMF decoder was always active because it \ntook a negligible amount of CPU time.  Unfortunately this sometimes \nresulted in too many false positives from some other types of digital \ntransmissions heard on HF. Starting in version 1.0, the DTMF decoder \nis enabled only when the APRStt gateway is configured.\n\n\n-----------\n\n## Version 0.9 --November 2013 ##\n\n### New Features ###\n\n- Selection of non-default audio device for Linux ALSA.\n\n- Simplified audio device set up for Raspberry Pi.\n\n- GPIO lines can be used for PTT on suitable Linux systems.\n\n- Improved 1200 baud decoder.\n\n- Multiple decoders per channel to tolerate HF SSB signals off frequency.\n\n- Command line option \"-t 0\" to disable text colors.\n\n- APRStt macros which allow short numeric only touch tone\nsequences to be processed as much longer predefined sequences.\n\n\n### Bugs Fixed ###\n\n- Now works on 64 bit target.\n\n### New Restriction for Windows version ###\n\n- Minimum processor is now Pentium 3 or equivalent or later.\nIt's possible to run on something older but you will need\nto rebuild it from source.\n\n\n-----------\n\n## Version 0.8\t-- August 2013 ##\n\n### New Features ###\n\n- Internet Gateway (IGate) including IPv6 support.\n\n- Compatibility with YAAC.\n\n- Preemptive digipeating option.\n\n- KISS TNC should now work with connected AX.25 protocols\n(e.g. AX25 for Linux), not just APRS.\n\n\n----------\n\n## Version 0.7\t-- March 2013 ##\n\n### New Features: ###\n\n- Added APRStt gateway capability.  For details, see  ***APRStt-Implementation-Notes.pdf***\n\n\n-----------\n\n## Version 0.6 --\tFebruary 2013 ##\n\n### New Features ###\n\n- Improved performance of AFSK demodulator.\nNow decodes 965 frames from Track 2 of WA8LMF's TNC Test CD.\n\n- KISS protocol now available thru a TCP socket.\nDefault port is 8001.\nChange it with KISSPORT option in configuration file.\n\n- Ability to salvage frames with bad FCS.\nSee section mentioning \"bad apple\" in the user guide.\nDefault of fixing 1 bit works well.  \nFixing more bits not recommended because there is a high\nprobability of occasional corrupted data getting thru.\n\n- Added AGW \"monitor\" format messages.\nNow compatible with APRS-TW for telemetry.\n\n\n### Known Problem ###\n\n- The Linux (but not Cygwin) version eventually hangs if nothing is\nreading from the KISS pseudo terminal.  Some operating system\nqueue fills up, the application write blocks, and decoding stops.\n\n\n### Workaround ###\n\n- If another application is not using the serial KISS interface,\nrun this in another window:\n\n\ttail -f /tmp/kisstnc\n\n-----------\n\n## Version 0.5 -- March 2012 ##\n\n- More error checking and messages for invalid APRS data.\n\n-----------\n\n## Version 0.4 -- September 2011 ##\n\n- First general availability.\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 14.373046875,
          "content": "cmake_minimum_required(VERSION 3.5.0)\n\nproject(direwolf)\n\n# configure version\nset(direwolf_VERSION_MAJOR \"1\")\nset(direwolf_VERSION_MINOR \"7\")\nset(direwolf_VERSION_PATCH \"0\")\nset(direwolf_VERSION_SUFFIX \"Development\")\n\n# options\n# See Issue 297.\noption(FORCE_SSE \"Compile with SSE instruction only\" ON)\noption(FORCE_SSSE3 \"Compile with SSSE3 instruction only\" OFF)\noption(FORCE_SSE41 \"Compile with SSE4.1 instruction only\" OFF)\noption(OPTIONAL_TEST \"Compile optional test (might be broken)\" OFF)\n# UNITTEST option must be after CMAKE_BUILT_TYPE\n\n# where cmake find custom modules\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n\n# fix c standard used on the project\nset(CMAKE_C_STANDARD 99)\n\n# Set additional project information\nset(COMPANY \"wb2osz\")\nadd_definitions(\"-DCOMPANY=\\\"${COMPANY}\\\"\")\nset(APPLICATION_NAME \"Dire Wolf\")\nadd_definitions(\"-DAPPLICATION_NAME=\\\"${APPLICATION_NAME}\\\"\")\nset(APPLICATION_MAINTAINER=\"John Langner, WB2OSZ\")\nset(COPYRIGHT \"Copyright (c) 2019 John Langner, WB2OSZ. All rights reserved.\")\nadd_definitions(\"-DCOPYRIGHT=\\\"${COPYRIGHT}\\\"\")\nset(IDENTIFIER \"com.${COMPANY}.${APPLICATION_NAME}\")\nadd_definitions(\"-DIDENTIFIER=\\\"${IDENTIFIER}\\\"\")\n# raspberry as only lxterminal not xterm\nif(NOT (WIN32 OR CYGWIN))\n  find_program(BINARY_TERMINAL_BIN lxterminal)\n  if(BINARY_TERMINAL_BIN)\n    set(APPLICATION_DESKTOP_EXEC \"${BINARY_TERMINAL_BIN} -e ${CMAKE_PROJECT_NAME}\")\n  else()\n    set(APPLICATION_DESKTOP_EXEC \"xterm -e ${CMAKE_PROJECT_NAME}\")\n  endif()\nendif()\n\nfind_package(Git)\nif(GIT_FOUND AND EXISTS \"${CMAKE_SOURCE_DIR}/.git/\")\n  # we can also use `git describe --tags`\n  execute_process(COMMAND \"${GIT_EXECUTABLE}\" rev-parse --short HEAD\n    WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n    RESULT_VARIABLE res\n    OUTPUT_VARIABLE out\n    ERROR_QUIET\n    OUTPUT_STRIP_TRAILING_WHITESPACE)\n  if(NOT res)\n    string(REGEX REPLACE \"^v([0-9]+)\\.([0-9]+)\\.([0-9]+)-\" \"\" git_commit ${out})\n    set(direwolf_VERSION_SUFFIX \"-${git_commit}\")\n    set(direwolf_VERSION_COMMIT \"${git_commit}\")\n  endif()\nendif()\n\n# set variables\nset(direwolf_VERSION \"${direwolf_VERSION_MAJOR}.${direwolf_VERSION_MINOR}.${direwolf_VERSION_PATCH}${direwolf_VERSION_SUFFIX}\")\nmessage(STATUS \"${APPLICATION_NAME} Version: ${direwolf_VERSION}\")\nadd_definitions(\"-DIREWOLF_VERSION=\\\"${direwolf_VERSION}\\\"\")\nadd_definitions(\"-DMAJOR_VERSION=${direwolf_VERSION_MAJOR}\")\nadd_definitions(\"-DMINOR_VERSION=${direwolf_VERSION_MINOR}\")\nif(direwolf_VERSION_COMMIT)\n  add_definitions(\"-DEXTRA_VERSION=${direwolf_VERSION_COMMIT}\")\nendif()\n\nset(CUSTOM_SRC_DIR \"${CMAKE_SOURCE_DIR}/src\")\nset(CUSTOM_EXTERNAL_DIR \"${CMAKE_SOURCE_DIR}/external\")\nset(CUSTOM_MISC_DIR \"${CUSTOM_EXTERNAL_DIR}/misc\")\nset(CUSTOM_REGEX_DIR \"${CUSTOM_EXTERNAL_DIR}/regex\")\nset(CUSTOM_HIDAPI_DIR \"${CUSTOM_EXTERNAL_DIR}/hidapi\")\nset(CUSTOM_GEOTRANZ_DIR \"${CUSTOM_EXTERNAL_DIR}/geotranz\")\nset(CUSTOM_DATA_DIR \"${CMAKE_SOURCE_DIR}/data\")\nset(CUSTOM_SCRIPTS_DIR \"${CMAKE_SOURCE_DIR}/scripts\")\nset(CUSTOM_TELEMETRY_DIR \"${CUSTOM_SCRIPTS_DIR}/telemetry-toolkit\")\nset(CUSTOM_CONF_DIR \"${CMAKE_SOURCE_DIR}/conf\")\nset(CUSTOM_DOC_DIR \"${CMAKE_SOURCE_DIR}/doc\")\nset(CUSTOM_MAN_DIR \"${CMAKE_SOURCE_DIR}/man\")\nset(CUSTOM_TEST_DIR \"${CMAKE_SOURCE_DIR}/test\")\nset(CUSTOM_TEST_SCRIPTS_DIR \"${CUSTOM_TEST_DIR}/scripts\")\nset(CUSTOM_SHELL_SHABANG \"#!/bin/sh -e\")\n\n# cpack variables\nset(CPACK_GENERATOR \"ZIP\")\nset(CPACK_STRIP_FILES true)\nset(CPACK_PACKAGE_NAME \"${CMAKE_PROJECT_NAME}\")\n# This has architecture of the build machine, not the target platform.\n# e.g. Comes out as x86_64 when building for i686 target platform.\n#set(CPACK_PACKAGE_FILE_NAME \"${CMAKE_PROJECT_NAME}-${direwolf_VERSION}_${CMAKE_SYSTEM_PROCESSOR}\")\n# We don't know the target yet so this is set after FindCPUflags.\nset(CPACK_PACKAGE_CONTACT \"https://github.com/wb2osz/direwolf\")\nSET(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"Dire Wolf is an AX.25 soundcard TNC, digipeater, APRS IGate, GPS tracker, and APRStt gateway\")\nset(CPACK_PACKAGE_DESCRIPTION_FILE \"${CMAKE_SOURCE_DIR}/README.md\")\nset(CPACK_RESOURCE_FILE_README \"${CMAKE_SOURCE_DIR}/README.md\")\nset(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_SOURCE_DIR}/LICENSE\")\nset(CPACK_SOURCE_IGNORE_FILES \"${PROJECT_BINARY_DIR};/.git/;.gitignore;menu.yml;.travis.yml;.appveyor.yml;default.nix;.envrc;TODOs.org;/.scripts/\")\nSET(CPACK_PACKAGE_VERSION \"${direwolf_VERSION}\")\nSET(CPACK_PACKAGE_VERSION_MAJOR \"${direwolf_VERSION_MAJOR}\")\nSET(CPACK_PACKAGE_VERSION_MINOR \"${direwolf_VERSION_MINOR}\")\nSET(CPACK_PACKAGE_VERSION_PATCH \"${direwolf_VERSION_PATCH}\")\nSET(CPACK_DEBIAN_PACKAGE_DEPENDS \"libasound2,libgps23\")\n\n# if we don't set build_type\nif(NOT DEFINED CMAKE_BUILD_TYPE OR \"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\n  set(CMAKE_BUILD_TYPE Release CACHE STRING \"Build type\" FORCE)\nendif()\nmessage(STATUS \"Build type set to: ${CMAKE_BUILD_TYPE}\")\nmessage(\"CMake system: ${CMAKE_SYSTEM_NAME}\")\n\n# Unittest should be on for dev builds and off for releases.\nif(CMAKE_BUILD_TYPE MATCHES \"Release\")\n  option(UNITTEST \"Build unittest binaries.\" OFF)\nelse()\n  option(UNITTEST \"Build unittest binaries.\" ON)\nendif()\n\n# set compiler\ninclude(FindCompiler)\n\n# find cpu flags (and set compiler)\ninclude(FindCPUflags)\n\nif(${ARCHITECTURE} MATCHES \"x86\")\n  set(CPACK_PACKAGE_FILE_NAME \"${CMAKE_PROJECT_NAME}-${direwolf_VERSION}_i686\")\nelse()\n  set(CPACK_PACKAGE_FILE_NAME \"${CMAKE_PROJECT_NAME}-${direwolf_VERSION}_${ARCHITECTURE}\")\nendif()\n\n# auto include current directory\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\n# set OS dependent variables\nif(${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\n  set(LINUX TRUE)\n\n  configure_file(\"${CMAKE_SOURCE_DIR}/cmake/cpack/${CMAKE_PROJECT_NAME}.desktop.in\"\n    \"${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}.desktop\" @ONLY)\n\nelseif(${CMAKE_SYSTEM_NAME} STREQUAL \"FreeBSD\")\n  set(FREEBSD TRUE)\n  configure_file(\"${CMAKE_SOURCE_DIR}/cmake/cpack/${CMAKE_PROJECT_NAME}.desktop.in\"\n    \"${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}.desktop\" @ONLY)\n\nelseif(${CMAKE_SYSTEM_NAME} STREQUAL \"OpenBSD\")\n  set(OPENBSD TRUE)\n  set(HAVE_SNDIO TRUE)\n\nelseif(APPLE)\n  if(\"${CMAKE_OSX_DEPLOYMENT_TARGET}\" STREQUAL \"\")\n    message(STATUS \"Build for macOS target: local version\")\n  else()\n    message(STATUS \"Build for macOS target: ${CMAKE_OSX_DEPLOYMENT_TARGET}\")\n  endif()\n\n  # prepend path to find_*()\n  set(CMAKE_FIND_ROOT_PATH \"/opt/local\")\n\n  set(CMAKE_MACOSX_RPATH ON)\n  message(STATUS \"RPATH support: ${CMAKE_MACOSX_RPATH}\")\n\n  # just blindly enable dns-sd\n  set(USE_MACOS_DNSSD ON)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_MACOS_DNSSD\")\n\nelseif (WIN32)\n  if(C_MSVC)\n    if (NOT VS2015 AND NOT VS2017 AND NOT VS2019)\n      message(FATAL_ERROR \"You must use Microsoft Visual Studio 2015, 2017 or 2019 as compiler\")\n    else()\n      # compile with full multicore\n      set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /MP\")\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MP\")\n      set(CUSTOM_SHELL_BIN \"\")\n    endif()\n  endif()\nendif()\n\nif (C_CLANG OR C_GCC)\n  # _BSD_SOURCE is deprecated we need to use _DEFAULT_SOURCE.\n  #\n  # That works find for more modern compilers but we have issues with:\n  #\tCentos 7, gcc 4.8.5, glibc 2.17\n  #\tCentos 6, gcc 4.4.7, glibc 2.12\n  #\n  # CentOS 6 & 7:  Without -D_BSD_SOURCE, we get Warning: Implicit declaration of\n  # functions alloca, cfmakeraw, scandir, setlinebuf, strcasecmp, strncasecmp, and strsep.\n  # When a function (like strsep) returns a pointer, the compiler instead assumes a 32 bit\n  # int and sign extends it out to be a 64 bit pointer.  Use the pointer and Kaboom!\n  #\n  # CentOS 6: We have additional problem.  Without -D_POSIX_C_SOURCE=199309L, we get\n  # implicit declaration of function clock_gettime and the linker can't find it.\n  #\n  # It turns out that -D_GNU_SOURCE can be used instead of both of those.  For more information, \n  # see https://www.gnu.org/software/libc/manual/html_node/Feature-Test-Macros.html\n  #\n  # Why was this not an issue before?  If gcc is used without the -std=c99 option, \n  # it is perfectly happy with clock_gettime, strsep, etc. but with the c99 option, it no longer\n  # recognizes a bunch of commonly used functions.  Using _GNU_SOURCE, rather than _DEFAULT_SOURCE\n  # solves the problem for CentOS 6 & 7.  This also makes -D_XOPEN_SOURCE= unnecessary.\n  # I hope it doesn't break with newer versions of glibc.\n  #\n  # I also took out -Wextra because it spews out so much noise a serious problem was not noticed.\n  # It might go back in someday when I have more patience to clean up all the warnings.\n  #\n\n  # TODO:\n  # Try error checking -fsanitize=bounds-strict -fsanitize=leak\n  # Requires libubsan and liblsan, respectively.\n\n  ###set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wextra -Wvla -ffast-math -ftree-vectorize -D_XOPEN_SOURCE=600 -D_DEFAULT_SOURCE ${EXTRA_FLAGS}\")\n  if(FREEBSD)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wextra -Wvla -ffast-math -ftree-vectorize -D_DEFAULT_SOURCE ${EXTRA_FLAGS}\")\n  else()\n    #set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wvla -ffast-math -ftree-vectorize -D_GNU_SOURCE -fsanitize=bounds-strict ${EXTRA_FLAGS}\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wvla -ffast-math -ftree-vectorize -D_GNU_SOURCE ${EXTRA_FLAGS}\")\n  endif()\n  #\n  #\n  # -lm is needed for functions in math.h\n  if (LINUX)\n    # We have another problem with CentOS 6.  clock_gettime() is in librt so we need -lrt.\n    # The clock_* functions were moved into gnu libc for version 2.17.\n    #   https://sourceware.org/ml/libc-announce/2012/msg00001.html\n    # If using gnu libc 2.17, or later, the -lrt is no longer needed but doesn't hurt.\n    # I'm making this conditional on LINUX because it is not needed for BSD and MacOSX.\n    link_libraries(\"-lrt -lm\")\n  else()\n    link_libraries(\"-lm\")\n  endif()\nelseif (C_MSVC)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -W3 -MP ${EXTRA_FLAGS}\")\nendif()\n\nif (C_CLANG)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ferror-limit=1\")\nelseif (C_GCC)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fmax-errors=1\")\nendif()\n\n# set installation directories\nif (WIN32 OR CYGWIN)\n  set(INSTALL_BIN_DIR \".\")\n  set(INSTALL_DOC_DIR \"doc\")\n  set(INSTALL_CONF_DIR \".\")\n  set(INSTALL_SCRIPTS_DIR \"scripts\")\n  set(INSTALL_MAN_DIR \"man\")\n  set(INSTALL_DATA_DIR \"data\")\nelse()\n  set(INSTALL_BIN_DIR \"bin\")\n  set(INSTALL_DOC_DIR \"share/doc/${CMAKE_PROJECT_NAME}\")\n  set(INSTALL_CONF_DIR \"${INSTALL_DOC_DIR}/conf\")\n  set(INSTALL_SCRIPTS_DIR \"${INSTALL_DOC_DIR}/scripts\")\n  if(FREEBSD)\n    set(INSTALL_MAN_DIR \"man/man1\")\n  else()\n    set(INSTALL_MAN_DIR \"share/man/man1\")\n  endif()\n  set(INSTALL_DATA_DIR \"share/${PROJECT_NAME}\")\nendif(WIN32 OR CYGWIN)\n\n# requirements\n\ninclude(CheckSymbolExists)\n\n# Some platforms provide their own strlcpy & strlcat. (BSD, MacOSX)\n# Others don't so we provide our own. (Windows, most, but not all Linux)\n# Here we detect whether these are provided by the OS and set a symbol\n# so that:\n#  (1) libgps does not supply its own version.\n#  (2) we know whether we need to supply our own copy.\n#\n# This was all working fine until these were added to the gnu c library 2.38.\n# References:\n#  - https://www.gnu.org/software/libc/sources.html\n#  - https://sourceware.org/git/?p=glibc.git;a=blob_plain;f=NEWS;hb=HEAD\n#\n# This test is not detecting them for glibc 2.38 resulting in a conflict.\n# Why?  Are they declared in a different file or in some strange way?\n#\n# This is how they are declared in include/string.h:\n#\n#\textern __typeof (strlcpy) __strlcpy;\n#\tlibc_hidden_proto (__strlcpy)\n#\textern __typeof (strlcat) __strlcat;\n#\tlibc_hidden_proto (__strlcat)\n#\n# Apparently cmake does not recognize this style.\n# Keep this here for BSD type systems where it behaves as expected.\n# We will need to add a hack in direwolf.h to define these if glibc version >= 2.38.\n\ncheck_symbol_exists(strlcpy string.h HAVE_STRLCPY)\nif(HAVE_STRLCPY)\n    add_compile_options(-DHAVE_STRLCPY)\nendif()\ncheck_symbol_exists(strlcat string.h HAVE_STRLCAT)\nif(HAVE_STRLCAT)\n    add_compile_options(-DHAVE_STRLCAT)\nendif()\n\nset(THREADS_PREFER_PTHREAD_FLAG ON)\nfind_package(Threads REQUIRED)\n\nfind_package(GPSD)\nif(GPSD_FOUND)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DENABLE_GPSD\")\nelse()\n  set(GPSD_INCLUDE_DIRS \"\")\n  set(GPSD_LIBRARIES \"\")\nendif()\n\nfind_package(hamlib)\nif(HAMLIB_FOUND)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_HAMLIB\")\nelse()\n  set(HAMLIB_INCLUDE_DIRS \"\")\n  set(HAMLIB_LIBRARIES \"\")\nendif()\n\nif(LINUX)\n  find_package(ALSA REQUIRED)\n  if(ALSA_FOUND)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_ALSA\")\n  endif()\n\n  find_package(udev)\n  if(UDEV_FOUND)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_CM108\")\n  endif()\n\n  find_package(Avahi)\n  if(AVAHI_CLIENT_FOUND)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_AVAHI_CLIENT\")\n  endif()\n\nelseif (HAVE_SNDIO)\n  find_package(sndio REQUIRED)\n  if(SNDIO_FOUND)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_SNDIO\")\n  endif()\n\nelseif (NOT WIN32 AND NOT CYGWIN)\n  find_package(Portaudio REQUIRED)\n  if(PORTAUDIO_FOUND)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_PORTAUDIO\")\n  endif()\n\nelse()\n  set(ALSA_INCLUDE_DIRS \"\")\n  set(ALSA_LIBRARIES \"\")\n  set(UDEV_INCLUDE_DIRS \"\")\n  set(UDEV_LIBRARIES \"\")\n  # Version 1.7 supports CM108/CM119 GPIO PTT for Windows.\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_CM108\")\n  set(PORTAUDIO_INCLUDE_DIRS \"\")\n  set(PORTAUDIO_LIBRARIES \"\")\n  set(SNDIO_INCLUDE_DIRS \"\")\n  set(SNDIO_LIBRARIES \"\")\nendif()\n\n# manage and fetch new data\nadd_subdirectory(data)\n\n# external libraries\nadd_subdirectory(${CUSTOM_GEOTRANZ_DIR})\nadd_subdirectory(${CUSTOM_REGEX_DIR})\nadd_subdirectory(${CUSTOM_HIDAPI_DIR})\nadd_subdirectory(${CUSTOM_MISC_DIR})\n\n# direwolf source code and utilities\nadd_subdirectory(src)\n\n# ctest\nif(UNITTEST)\n  message(STATUS \"Build unit test binaries\")\n  include(CTest)\n  enable_testing()\n  add_subdirectory(test)\nendif(UNITTEST)\n\n# manage scripts\nadd_subdirectory(scripts)\n\n# manage config\nadd_subdirectory(conf)\n\n# install basic docs\ninstall(FILES ${CMAKE_SOURCE_DIR}/CHANGES.md DESTINATION ${INSTALL_DOC_DIR})\ninstall(FILES ${CMAKE_SOURCE_DIR}/LICENSE DESTINATION ${INSTALL_DOC_DIR})\ninstall(FILES ${CMAKE_SOURCE_DIR}/external/LICENSE DESTINATION ${INSTALL_DOC_DIR}/external)\nadd_subdirectory(doc)\nadd_subdirectory(man)\n\n# install desktop link\nif (LINUX OR FREEBSD)\n  install(FILES ${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}.desktop DESTINATION share/applications)\n  install(FILES ${CMAKE_SOURCE_DIR}/cmake/cpack/${CMAKE_PROJECT_NAME}_icon.png DESTINATION share/pixmaps)\nendif()\n\n############ uninstall target ################\nconfigure_file(\n  \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/include/uninstall.cmake.in\"\n  \"${CMAKE_CURRENT_BINARY_DIR}/uninstall.cmake\"\n  IMMEDIATE @ONLY)\n\nadd_custom_target(uninstall\n  COMMAND ${CMAKE_COMMAND} -P\n  ${CMAKE_CURRENT_BINARY_DIR}/uninstall.cmake)\n\n############ packaging ################\nadd_subdirectory(cmake/cpack)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.8642578125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.05078125,
          "content": "\nall:\n\t@echo \"The build procedure has changed in version 1.6.\"\n\t@echo \"In general, it now looks like this:\"\n\t@echo \" \"\n\t@echo \"Download the source code:\"\n\t@echo \" \"\n\t@echo \"\tcd ~\"\n\t@echo \"\tgit clone https://www.github.com/wb2osz/direwolf\"\n\t@echo \"\tcd direwolf\"\n\t@echo \" \"\n\t@echo \"Optional - Do this to get the latest development version\"\n\t@echo \"rather than the latest stable release.\"\n\t@echo \" \"\n\t@echo \"\tgit checkout dev\"\n\t@echo \" \"\n\t@echo \"Build it.  There are two new steps not used for earlier releases.\"\n\t@echo \" \"\n\t@echo \"\tmkdir build && cd build\"\n\t@echo \"\tcmake ..\"\n\t@echo \"\tmake -j4\"\n\t@echo \" \"\n\t@echo \"Install:\"\n\t@echo \" \"\n\t@echo \"\tsudo make install\"\n\t@echo \"\tmake install-conf\"\n\t@echo \" \"\n\t@echo \"You will probably need to install additional applications and\"\n\t@echo \"libraries depending on your operating system.\"\n\t@echo \"More details are in the README.md file.\"\n\t@echo \" \"\n\t@echo \"Questions?\"\n\t@echo \" \"\n\t@echo \" - Extensive documentation can be found in the 'doc' directory.\"\n\t@echo \" - Join the discussion forum here:   https://groups.io/g/direwolf\"\n\t@echo \" \"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.7744140625,
          "content": "\n# Dire Wolf #\n\n### Decoded Information from Radio Emissions for Windows Or Linux Fans ###\n\nIn the early days of Amateur Packet Radio, it was necessary to use an expensive \"Terminal Node Controller\" (TNC) with specialized hardware.  Those days are gone.  You can now get better results at lower cost by connecting your radio to the \"soundcard\" interface of a computer and using software to decode the signals.\n\nWhy waste $200 and settle for mediocre receive performance from a 1980's technology  TNC using an old modem chip?   Dire Wolf decodes over 1000 error-free frames from Track 2 of the [WA8LMF TNC Test CD](https://github.com/wb2osz/direwolf/tree/dev/doc/WA8LMF-TNC-Test-CD-Results.pdf), leaving all the hardware TNCs, and first generation \"soundcard\" modems, behind in the dust.\n\n![](tnc-test-cd-results.png)\n\nDire Wolf includes [FX.25](https://en.wikipedia.org/wiki/FX.25_Forward_Error_Correction) which adds Forward Error Correction (FEC) in a way that is completely compatible with existing systems.  If both ends are capable of FX.25, your information will continue to get through under conditions where regular AX.25 is completely useless. This was originally developed for satellites and is now seeing widespread use on HF.\n\n![](fx25.png)\n\nVersion 1.7 adds [IL2P](https://en.wikipedia.org/wiki/Improved_Layer_2_Protocol), a different method of FEC with less overhead but it is not compatible with AX.25.\n\n\n\n### Dire Wolf is a modern software replacement for the old 1980's style TNC built with special hardware. ###\n\nWithout any additional software, it can perform as:\n\n - APRS GPS Tracker\n - Digipeater\n - Internet Gateway (IGate)\n- [APRStt](http://www.aprs.org/aprstt.html) gateway\n\n\nIt can also be used as a virtual TNC for other applications such as [APRSIS32](http://aprsisce.wikidot.com/), [Xastir](http://xastir.org/index.php/Main_Page), [APRS-TW](http://aprstw.blandranch.net/), [YAAC](http://www.ka2ddo.org/ka2ddo/YAAC.html), [PinPoint APRS](http://www.pinpointaprs.com/), [UI-View32](http://www.ui-view.net/),[UISS](http://users.belgacom.net/hamradio/uiss.htm), [Linux AX25](http://www.linux-ax25.org/wiki/Main_Page), [SARTrack](http://www.sartrack.co.nz/index.html), [Winlink Express (formerly known as RMS Express, formerly known as Winlink 2000 or WL2K)](http://www.winlink.org/RMSExpress), [BPQ32](http://www.cantab.net/users/john.wiseman/Documents/BPQ32.html), [Outpost PM](http://www.outpostpm.org/), [Ham Radio of Things](https://github.com/wb2osz/hrot), [Packet Compressed Sensing Imaging (PCSI)](https://maqifrnswa.github.io/PCSI/), and many others.\n \n \n## Features & Benefits ##\n\n![](direwolf-block-diagram.png)\n\n### Dire Wolf includes: ###\n\n\n\n- **Beaconing, Tracker, Telemetry Toolkit.**\n\n     Send periodic beacons to provide information to others.  For tracking the location is provided by a GPS receiver.\n     Build your own telemetry applications with the toolkit.\n\n\n- **APRStt Gateway.**\n\n     Very few hams have portable equipment for APRS but nearly everyone has a handheld radio that can send DTMF tones.  APRStt allows a user, equipped with only DTMF (commonly known as Touch Tone) generation capability, to enter information into the global APRS data network.  Responses can be sent by Morse Code or synthesized speech.\n\n- **Digipeaters for APRS and traditional Packet Radio.**\n\n    Extend the range of other stations by re-transmitting their signals. Unmatched flexibility for cross band repeating and filtering to limit what is retransmitted.\n\n- **Internet Gateway (IGate).**\n\n    IGate stations allow communication between disjoint radio networks by allowing some content to flow between them over the Internet.\n\n- **Ham Radio of Things (HRoT).**\n\n    There have been occasional mentions of merging Ham Radio with the Internet of Things but only ad hoc incompatible narrowly focused applications. Here is a proposal for a standardized more flexible method so different systems can communicate with each other.\n\n    [Ham Radio of Things - IoT over Ham Radio](https://github.com/wb2osz/hrot)\n\n- **AX.25 v2.2 Link Layer.**\n\n    Traditional connected mode packet radio where the TNC automatically retries transmissions and delivers data in the right order.\n\n- **KISS Interface (TCP/IP, serial port, Bluetooth) & AGW network Interface (TCP/IP).**\n\n    Dire Wolf can be used as a virtual TNC for applications such as [APRSIS32](http://aprsisce.wikidot.com/), [Xastir](http://xastir.org/index.php/Main_Page), [APRS-TW](http://aprstw.blandranch.net/), [YAAC](http://www.ka2ddo.org/ka2ddo/YAAC.html), [PinPoint APRS](http://www.pinpointaprs.com/), [UI-View32](http://www.ui-view.net/),[UISS](http://users.belgacom.net/hamradio/uiss.htm), [Linux AX25](http://www.linux-ax25.org/wiki/Main_Page), [SARTrack](http://www.sartrack.co.nz/index.html), [Winlink Express (formerly known as RMS Express, formerly known as Winlink 2000 or WL2K)](http://www.winlink.org/RMSExpress), [BPQ32](http://www.cantab.net/users/john.wiseman/Documents/BPQ32.html), [Outpost PM](http://www.outpostpm.org/), [Ham Radio of Things](https://github.com/wb2osz/hrot), [Packet Compressed Sensing Imaging (PCSI)](https://maqifrnswa.github.io/PCSI/), and many others.\n\n### Radio Interfaces:   ###\n\n- **Uses computer's \"soundcard\" and digital signal processing.**\n\n    Lower cost and better performance than specialized hardware. \n\n    Compatible interfaces include [DRAWS](http://nwdigitalradio.com/draws/), [UDRC](https://nw-digital-radio.groups.io/g/udrc/wiki/UDRC%E2%84%A2-and-Direwolf-Packet-Modem), [SignaLink USB](http://www.tigertronics.com/slusbmain.htm), [DMK URI](http://www.dmkeng.com/URI_Order_Page.htm), [RB-USB RIM](http://www.repeater-builder.com/products/usb-rim-lite.html), [RA-35](http://www.masterscommunications.com/products/radio-adapter/ra35.html), [DINAH](https://hamprojects.info/dinah/), [SHARI](https://hamprojects.info/shari/), and many others.\n\n\n\n- **Modems:**\n\n    300 bps AFSK for HF\n\n    1200 bps AFSK most common for VHF/UHF\n\n    2400 & 4800 bps PSK\n\n    9600 bps GMSK/G3RUH\n\n    AIS reception\n\n    EAS SAME reception\n\n\n\n- **DTMF (\"Touch Tone\") Decoding and Encoding.**\n \n- **Speech Synthesizer interface & Morse code generator.**\n\n    Transmit human understandable messages.\n\n- **Compatible with Software Defined Radios such as gqrx, rtl_fm, and SDR#.**\n\n- **Concurrent operation with up to 3 soundcards and 6 radios.**\n\n### Portable & Open Source:   ###\n\n- **Runs on Windows, Linux (PC/laptop, Raspberry Pi, etc.), Mac OSX.**\n\n\n\n## Documentation ##\n\n\n[Stable Version](https://github.com/wb2osz/direwolf/tree/master/doc)\n\n[Latest Development Version (\"dev\" branch)](https://github.com/wb2osz/direwolf/tree/dev/doc)\n\n[Additional Topics](https://github.com/wb2osz/direwolf-doc)\n\n[Power Point presentations](https://github.com/wb2osz/direwolf-presentation)  -- Why not give a talk at a local club meeting?\n\nYoutube has many interesting and helpful videos.  Searching for [direwolf tnc](https://www.youtube.com/results?search_query=direwolf+tnc) or [direwolf aprs](https://www.youtube.com/results?search_query=direwolf+aprs)  will produce the most relevant results. \n\n## Installation ##\n\n### Windows ###\n\nGo to the [**releases** page](https://github.com/wb2osz/direwolf/releases).   Download a zip file with \"win\" in its name, unzip it, and run direwolf.exe from a command window.\n\nYou can also build it yourself from source.  For more details see the **User Guide** in the [**doc** directory](https://github.com/wb2osz/direwolf/tree/master/doc).\n\n\n\n\n### Linux - Using git clone (recommended) ###\n\n***Note that this has changed for version 1.6.  There are now a couple extra steps.***\n\n\nFirst you will need to install some software development packages using different commands depending on your flavor of Linux.\nIn most cases, the first few  will already be there and the package installer will tell you that installation is not necessary.\n\nOn Debian / Ubuntu / Raspbian / Raspberry Pi OS:\n\n    sudo apt-get install git\n    sudo apt-get install gcc\n    sudo apt-get install g++\n    sudo apt-get install make\n    sudo apt-get install cmake\n    sudo apt-get install libasound2-dev\n    sudo apt-get install libudev-dev\n    sudo apt-get install libavahi-client-dev\n\nOr on Red Hat / Fedora / CentOS:\n\n    sudo yum install git\n    sudo yum install gcc\n    sudo yum install gcc-c++\n    sudo yum install make\n    sudo yum install alsa-lib-devel\n    sudo yum install libudev-devel\n    sudo yum install avahi-devel\n\nCentOS 6 & 7 currently have cmake 2.8 but we need 3.1 or later.\nFirst you need to enable the EPEL repository.  Add a symlink if you don't already have the older version and want to type cmake rather than cmake3.\n\n    sudo yum install epel-release\n\tsudo rpm -e cmake\n\tsudo yum install cmake3\n\tsudo ln -s /usr/bin/cmake3 /usr/bin/cmake\n\nThen on any flavor of Linux:\n\n\tcd ~\n\tgit clone https://www.github.com/wb2osz/direwolf\n\tcd direwolf\n    git checkout dev\n\tmkdir build && cd build\n\tcmake ..\n\tmake -j4\n\tsudo make install\n\tmake install-conf\n\nThis gives you the latest development version.  Leave out the \"git checkout dev\" to get the most recent stable release.\n\nFor more details see the **User Guide** in the [**doc** directory](https://github.com/wb2osz/direwolf/tree/master/doc).  Special considerations for the Raspberry Pi are found in **Raspberry-Pi-APRS.pdf**\n\n\n### Linux - Using apt-get (Debian flavor operating systems) ###\n\nResults will vary depending on your hardware platform and operating system version because it depends on various volunteers who perform the packaging. Expect the version to lag significantly behind development.\n\n\tsudo apt-get update\n\tapt-cache showpkg direwolf\n\tsudo apt-get install direwolf\n\n\n### Linux - Using yum (Red Hat flavor operating systems) ###\n\nResults will vary depending on your hardware platform and operating system version because it depends on various volunteers who perform the packaging.  Expect the version to lag significantly behind development.\n\n\tsudo yum check-update\n\tsudo yum list direwolf\n\tsudo yum install direwolf\n\n\n### Macintosh OS X ###\n\nRead the **User Guide** in the [**doc** directory](https://github.com/wb2osz/direwolf/tree/master/doc).   It is more complicated than Linux.\n\nIf you have problems,  post them to the [Dire Wolf packet TNC](https://groups.io/g/direwolf) discussion group.\n\nYou can also install a pre-built version from Mac Ports.  Keeping this up to date depends on volunteers who perform the packaging. This version could lag behind development.\n\n\tsudo port install direwolf\n\n\n## Join the conversation  ##\n \nHere are some good places to ask questions and share your experience:\n\n- [Dire Wolf Software TNC](https://groups.io/g/direwolf) \n\n- [Raspberry Pi 4 Ham Radio](https://groups.io/g/RaspberryPi-4-HamRadio)\n\n- [linuxham](https://groups.io/g/linuxham)\n\n- [TAPR aprssig](http://www.tapr.org/pipermail/aprssig/)\n \n\nThe github \"issues\" section is for reporting software defects and enhancement requests.  It is NOT a place to ask questions or have general discussions.  Please use one of the locations above.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "direwolf-block-diagram.png",
          "type": "blob",
          "size": 31.11328125,
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "fx25.png",
          "type": "blob",
          "size": 23.0166015625,
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tnc-test-cd-results.png",
          "type": "blob",
          "size": 9.66015625,
          "content": null
        }
      ]
    }
  ]
}