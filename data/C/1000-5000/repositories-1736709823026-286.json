{
  "metadata": {
    "timestamp": 1736709823026,
    "page": 286,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fwupd/fwupd",
      "stars": 3049,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.38671875,
          "content": "---\nAlignAfterOpenBracket: 'Align'\nAlignConsecutiveAssignments: 'false'\nAlignConsecutiveDeclarations: 'false'\nAlignConsecutiveMacros: 'true'\nAlignOperands: 'true'\nAlignTrailingComments: 'true'\nAllowAllArgumentsOnNextLine: 'false'\nAllowAllParametersOfDeclarationOnNextLine: 'false'\nAllowShortBlocksOnASingleLine: 'false'\nAllowShortCaseLabelsOnASingleLine: 'false'\nAllowShortFunctionsOnASingleLine: 'Inline'\nAllowShortIfStatementsOnASingleLine: 'false'\nAlwaysBreakAfterReturnType: 'All'\nBinPackParameters: 'false'\nBinPackArguments: 'false'\nBreakBeforeBraces: 'Linux'\nColumnLimit: '100'\nDerivePointerAlignment: 'false'\nIndentCaseLabels: 'false'\nIndentWidth: '8'\nIncludeBlocks: 'Regroup'\nKeepEmptyLinesAtTheStartOfBlocks: 'false'\nMaxEmptyLinesToKeep: '1'\nPointerAlignment: 'Right'\nSortIncludes: 'true'\nSpaceAfterCStyleCast: 'false'\nSpaceBeforeAssignmentOperators : 'true'\nSpaceBeforeParens: 'ControlStatements'\nSpaceInEmptyParentheses: 'false'\nSpacesInSquareBrackets: 'false'\nTabWidth: '8'\nUseTab: 'Always'\nPenaltyBreakAssignment: '3'\nPenaltyBreakBeforeFirstCallParameter: '15'\n---\nLanguage: 'Proto'\n---\nLanguage: 'Cpp'\nIncludeCategories:\n  - Regex:           '^\"config.h\"$'\n    Priority:        '0'\n  - Regex:           '<fwupdplugin.h>'\n    Priority:        '1'\n  - Regex:           '^<'\n    Priority:        '2'\n  - Regex:           'fwupd'\n    Priority:        '3'\n  - Regex:           '.*'\n    Priority:        '4'\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.232421875,
          "content": "---\nChecks: \"-*,\\\nbugprone-*,\\\n-bugprone-assignment-in-if-condition,\\\n-bugprone-easily-swappable-parameters,\\\n-bugprone-implicit-widening-of-multiplication-result,\\\n-bugprone-macro-parentheses,\\\n-bugprone-misplaced-widening-cast,\\\n-bugprone-narrowing-conversions,\\\n-bugprone-reserved-identifier,\\\n-bugprone-too-small-loop-variable,\\\n-bugprone-unchecked-optional-access,\\\nmisc-*,\\\n-misc-confusable-identifiers,\\\n-misc-const-correctness,\\\n-misc-non-private-member-variables-in-classes,\\\n-misc-no-recursion,\\\n-misc-static-assert,\\\n-misc-unused-parameters,\\\nmodernize-*,\\\n-modernize-macro-to-enum,\\\n-modernize-use-trailing-return-type,\\\n-modernize-use-transparent-functors,\\\nperformance-*,\\\n-performance-inefficient-vector-operation,\\\n-performance-no-int-to-ptr,\\\nreadability-*,\\\n-readability-avoid-const-params-in-decls,\\\n-readability-braces-around-statements,\\\n-readability-function-cognitive-complexity,\\\n-readability-identifier-length,\\\n-readability-identifier-naming,\\\n-readability-implicit-bool-conversion,\\\n-readability-isolate-declaration,\\\n-readability-magic-numbers,\\\n-readability-non-const-parameter,\\\n-readability-qualified-auto,\\\n-readability-redundant-declaration,\\\n-readability-suspicious-call-argument,\\\n-readability-uppercase-literal-suffix,\\\n\"\n...\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.2451171875,
          "content": "comment: off\n\ncoverage:\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 1%\n        informational: true\n    patch:\n      default:\n        target: auto\n        threshold: 1%\n        informational: true\nignore:\n  - \"**/*.h\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.369140625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 8\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 100\ntab_width = 8\ntrim_trailing_whitespace = true\n\n[.git/**]\nmax_line_length = 72\n\n[*.md]\nmax_line_length = 80\n\n[*.{yml,yaml}]\nindent_size = 2\n\n[*.py]\nindent_size = 4\n\n[*.sh]\nindent_size = 4\n\n[*.rs]\nindent_size = 4\n\n[*.{c,h}]\nindent_style = tab\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.2666015625,
          "content": "# trivial: reformat the whole tree to match new format\n55de39c077ca8d793178054b5d3ba7cbdf8a82a2\n\n# dell-dock: Fix a trivial clang-format issue\n61fe427d41347de3f98d9c5bed200d6fbfaac0b0\n\n# trivial: reformat codebase with clang-format\n87dcdf5412c4c9da65e4530255b1636fc0d167dd\n"
        },
        {
          "name": ".gitconfig",
          "type": "blob",
          "size": 0.0478515625,
          "content": "[blame]\n\tignoreRevsFile = .git-blame-ignore-revs\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.44140625,
          "content": "/build\n/build-win32\n/dist\n/.vscode\n.vscode-ctags\n/build-dir\n/.flatpak-builder\n/repo\n*.flatpak\n*.snap\n/fwupd_source.tar.bz2\n/parts\n/prime\n/stage\n/snap/.snapcraft\n/libxmlb\n/*.deb\n/*.ddeb\n/*.changes\n/*.buildinfo\n/fwupd*.build\n/*.dsc\n/*.xz\n/*.gz\n/venv\n__pycache__\nplugins/acpi-dmar/tests/\nplugins/acpi-facp/tests/\nplugins/nvme/tests/\nplugins/synaptics-prometheus/tests/\nplugins/tpm-eventlog/tests/\nplugins/uefi-dbx/tests/\n.buildconfig\n.ossfuzz\n*.rej\n/snap\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.107421875,
          "content": "[submodule \"contrib/flatpak\"]\n\tpath = contrib/flatpak\n\turl = https://github.com/flathub/org.freedesktop.fwupd\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.1357421875,
          "content": "{\n  \"default\": true,\n  \"MD033\": false,\n  \"MD041\": false,\n  \"MD036\": false,\n  \"MD013\": {\n    \"tables\": false,\n    \"line_length\": 1000\n  }\n}\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.7177734375,
          "content": "default_stages: [commit]\nrepos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.5.0\n    hooks:\n    -   id: no-commit-to-branch\n        args: [--branch, main, --pattern, 1_.*_X]\n    -   id: check-added-large-files\n    -   id: check-byte-order-marker\n    -   id: check-executables-have-shebangs\n    -   id: forbid-new-submodules\n    -   id: check-yaml\n        exclude: '.clang-format'\n    -   id: check-json\n    -   id: pretty-format-json\n        args: ['--no-sort-keys', '--autofix']\n    -   id: check-symlinks\n    -   id: check-xml\n    -   id: end-of-file-fixer\n        types_or: [c, shell, python, proto]\n    -   id: trailing-whitespace\n        types_or: [c, shell, python, xml]\n    -   id: check-docstring-first\n    -   id: check-merge-conflict\n    -   id: mixed-line-ending\n        args: [--fix=lf]\n-   repo: https://github.com/codespell-project/codespell\n    rev: v2.2.2\n    hooks:\n    -   id: codespell\n        args: ['--config', './contrib/codespell.cfg', --write-changes]\n-   repo: https://github.com/ambv/black\n    rev: 23.12.1\n    hooks:\n    - id: black\n-   repo: local\n    hooks:\n    - id: check-null-false-returns\n      name: check for null / false return mismatch\n      language: script\n      entry: ./contrib/ci/check-null-false-returns.py\n    - id: check-potfiles\n      name: check for missing translated files from potfiles\n      language: script\n      entry: ./contrib/ci/check-potfiles.py\n    - id: check-finalizers\n      name: check for missing GObject parent finalize\n      language: script\n      entry: ./contrib/ci/check-finalizers.py\n    - id: check-headers\n      name: check for superfluous includes\n      language: script\n      entry: ./contrib/ci/check-headers.py\n    - id: check-source\n      name: check source code for common issues\n      language: script\n      entry: ./contrib/ci/check-source.py\n    - id: check-quirks\n      name: check quirk style\n      language: script\n      entry: ./contrib/ci/check-quirks.py\n    - id: shellcheck\n      name: check shellscript style\n      language: system\n      entry: shellcheck --severity=warning -e SC2068\n      types: [shell]\n    - id: run-tests\n      name: run tests before pushing\n      language: system\n      entry: \"test-fwupd\"\n      stages: [push]\n    - id: clang-format\n      name: clang-format\n      language: script\n      entry: ./contrib/reformat-code.py\n      types: [c]\n    - id: check-license\n      name: Check license header\n      types_or: [shell, c, python]\n      language: script\n      entry: ./contrib/ci/check-license.py\n-   repo: https://github.com/igorshubovych/markdownlint-cli\n    rev: v0.38.0\n    hooks:\n    - id: markdownlint\n      args: ['--fix', '--ignore', '.github']\n-   repo: https://github.com/gitleaks/gitleaks\n    rev: v8.16.3\n    hooks:\n    -   id: gitleaks\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1455078125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at <fwupd@googlegroups.com>. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "COMMITMENT",
          "type": "blob",
          "size": 1.998046875,
          "content": "Common Cure Rights Commitment, version 1.0\n\nBefore filing or continuing to prosecute any legal proceeding or claim\n(other than a Defensive Action) arising from termination of a Covered\nLicense, we commit to extend to the person or entity ('you') accused\nof violating the Covered License the following provisions regarding\ncure and reinstatement, taken from GPL version 3. As used here, the\nterm 'this License' refers to the specific Covered License being\nenforced.\n\n    However, if you cease all violation of this License, then your\n    license from a particular copyright holder is reinstated (a)\n    provisionally, unless and until the copyright holder explicitly\n    and finally terminates your license, and (b) permanently, if the\n    copyright holder fails to notify you of the violation by some\n    reasonable means prior to 60 days after the cessation.\n\n    Moreover, your license from a particular copyright holder is\n    reinstated permanently if the copyright holder notifies you of the\n    violation by some reasonable means, this is the first time you\n    have received notice of violation of this License (for any work)\n    from that copyright holder, and you cure the violation prior to 30\n    days after your receipt of the notice.\n\nWe intend this Commitment to be irrevocable, and binding and\nenforceable against us and assignees of or successors to our\ncopyrights.\n\nDefinitions\n\n'Covered License' means the GNU General Public License, version 2\n(GPLv2), the GNU Lesser General Public License, version 2.1\n(LGPLv2.1), or the GNU Library General Public License, version 2\n(LGPLv2), all as published by the Free Software Foundation.\n\n'Defensive Action' means a legal proceeding or claim that We bring\nagainst you in response to a prior proceeding or claim initiated by\nyou or your affiliate.\n\n'We' means each contributor to this repository as of the date of\ninclusion of this file, including subsidiaries of a corporate\ncontributor.\n\nThis work is available under a Creative Commons Attribution-ShareAlike\n4.0 International license.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.908203125,
          "content": "# Contributor Guidelines\n\n## Getting started\n\nTo set up your local fwupd development environment, from the top level of\nthe checkout run:\n\n```shell\n./contrib/setup\n```\n\nThis will create pre-commit hooks to fixup many code style issues before your\ncode is submitted.\n\nOn some Linux distributions this will install all build dependencies needed\nto compile fwupd as well.\n\nA [virtualenv](https://virtualenv.pypa.io/en/latest/user_guide.html) will be created in `venv/` in the checkout that is used for\nbuilding and running fwupd without affecting the local system installation.\n\nTo enter this virtualenv run:\n\n```shell\nsource venv/bin/activate\n```\n\nTo build fwupd in the venv run:\n\n```shell\nbuild-fwupd\n```\n\nWrappers are configured while in the venv to run `fwupdtool`, `fwupd`, and\n`fwupdmgr` using the virtualenv directory structure.  To leave the virtualenv\nrun:\n\n```shell\ndeactivate\n```\n\n## Coding Style\n\nThe coding style to respect in this project is very similar to most\nGLib projects. In particular, the following rules are largely adapted\nfrom the PackageKit Coding Style.\n\n* 8-space tabs for indentation\n\n* Prefer lines of less than <= 100 columns\n\n* No spaces between function name and braces (both calls and macro\n   declarations)\n\n* If function signature/call fits in a single line, do not break it\n   into multiple lines\n\n* Prefer descriptive names over abbreviations (unless well-known)\n   and shortening of names. e.g `device` not `dev`\n\n* Single statements inside if/else should not be enclosed by '{}'\n\n* Use comments to explain why something is being done, but also avoid\n   over-documenting the obvious. Here is an example of useless comment:\n\n   // Fetch the document\n   fetch_the_document();\n\n* Comments should not start with a capital letter or end with a full stop and\n   should be C-style, not C++-style, e.g. `/* this */` not `// this`\n\n* Each object should go in a separate .c file and be named according\n   to the class\n\n* Use g_autoptr() and g_autofree whenever possible, and avoid `goto out`\n   error handling\n\n* Failing methods should return FALSE with a suitable `GError` set\n\n* Trailing whitespace is forbidden\n\n* Pointers should be checked for NULL explicitly, e.g. `foo != NULL` not `!foo`\n\n* Use the correct debug level:\n\n  * `g_debug()` -- low level plugin and daemon development, typically only useful to programmers\n  * `g_info()` -- generally useful messages, typically shown when using `--verbose`\n  * `g_message()` -- important messages, typically shown in service output\n  * `g_warning()` -- warning messages, typically shown in service output\n  * `g_critical()` -- critical messages, typically shown before the daemon aborts\n\n**NOTE:** Do not use `g_error()` -- it's not appropriate to abort the daemon on error.\n\n`./contrib/reformat-code.py` can be used in order to get automated\nformatting. Calling the script without arguments formats the current\npatch while passing commits will do formatting on everything changed since that\ncommit.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.0732421875,
          "content": "Richard Hughes <richard@hughsie.com>\nMario Limonciello <superm1@gmail.com>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.142578125,
          "content": "# fwupd\n\n[![Build Status](https://github.com/fwupd/fwupd/actions/workflows/ci.yml/badge.svg)](https://github.com/fwupd/fwupd/actions/workflows/ci.yml)\n[![CodeQL](https://github.com/fwupd/fwupd/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/fwupd/fwupd/actions/workflows/codeql-analysis.yml)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/10744/badge.svg)](https://scan.coverity.com/projects/10744)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/fwupd.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:fwupd)\n[![Codecov Coverage Status](https://codecov.io/gh/fwupd/fwupd/graph/badge.svg?token=vykt2ROfu9)](https://codecov.io/gh/fwupd/fwupd)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/fwupd/fwupd/badge)](https://securityscorecards.dev/viewer/?uri=github.com/fwupd/fwupd)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8751/badge)](https://www.bestpractices.dev/projects/8751)\n\nThis project aims to make updating firmware on Linux automatic, safe, and reliable.\n\nAdditional information is available [at the website](https://fwupd.org/).\n\n## Where to get help?\n\n- GitHub issues & discussions in [this repository](https://github.com/fwupd/fwupd)\n- Libera IRC channel `#fwupd`.\n  You can join through Libera's [IRC](https://libera.chat/)\n  or via the IRC bridge on [Matrix](https://matrix.to/#/#fwupd:libera.chat).\n\n## Compiling\n\nSee [Building and Debugging](docs/building.md) for how to build the fwupd development environment.\n\n**NOTE:** In most cases, end users should not compile fwupd from scratch; it's a\ncomplicated project with dozens of dependencies (and as many configuration options)\nand there's just too many things that can go wrong.\n\nUsers should just have fwupd installed and updated by their distro, managed and\ntested by the package maintainer.\nThe distribution will have also done some testing with how fwupd interacts with\nother software on your system, for instance using GNOME Software.\n\nInstalling fwupd using [Snap](https://github.com/fwupd/fwupd/wiki/fwupd-snap)\nor using [Flatpak](https://github.com/fwupd/fwupd/wiki/fwupd-flatpak) might be\nuseful to update a specific device on the command line that needs a bleeding\nedge fwupd version, but it should not be considered as a replacement to the\ndistro-provided system version.\n\n### Using Tartan\n\n[Tartan](https://gitlab.freedesktop.org/tartan/tartan/-/wikis/home) is a LLVM static\nanalysis plugin built to analyze GLib code. It can be installed and then run using:\n\n    mkdir build-tartan\n    CC=clang-17 meson ../\n    SCANBUILD=../contrib/tartan.sh ninja scan-build\n\n## LVFS\n\nThis project is configured by default to download firmware from the [Linux Vendor\nFirmware Service (LVFS)](https://fwupd.org/).\n\nThis service is available to all OEMs and firmware creators who would like to make\ntheir firmware available to Linux users.\n\nYou can find more information about the technical details of creating a firmware\ncapsule in the hardware vendors section of the [fwupd website](https://fwupd.org).\n\n## Basic usage flow (command line)\n\nIf you have a device with firmware supported by fwupd, this is how you can check\nfor updates and apply them using fwupd's command line tools.\n\n`# fwupdmgr get-devices`\n\nThis will display all devices detected by fwupd.\n\n`# fwupdmgr refresh`\n\nThis will download the latest metadata from LVFS.\n\n`# fwupdmgr get-updates`\n\nIf updates are available for any devices on the system, they'll be displayed.\n\n`# fwupdmgr update`\n\nThis will download and apply all updates for your system.\n\n- Updates that can be applied live will be done immediately.\n- Updates that run at bootup will be staged for the next reboot.\n\nYou can find more information about the update workflow in the end\nusers section of the [fwupd website](https://fwupd.org).\n\n## Passim\n\nIf the [Passim](https://github.com/hughsie/passim/blob/main/README.md) project is also installed\nand enabled, fwupd will re-publish the downloaded metadata file to be served on `0.0.0.0:27500`\nby default.\n\nOther clients on the same network can make use of this via mDNS/LLMNR to reduce network bandwidth\nto configured remotes.\n\nTo disable this functionality either set `P2pPolicy=none` in `/etc/fwupd/daemon.conf`, uninstall\nthe passim package or use `systemctl mask passim.service` on the terminal.\n\n## Reporting status\n\nfwupd will encourage users to report both successful and failed updates back\nto LVFS.  This is an optional feature, but encouraged as it provides valuable\nfeedback to LVFS administrators and OEM developers regarding firmware update\nprocess efficacy.\n\nThe privacy policy regarding this data can be viewed on the [lvfs readthedocs site](https://lvfs.readthedocs.io/en/latest/privacy.html).\n\nTo report the status of an update, run:\n\n`# fwupdmgr report-history`\n\nOnly updates that were distributed from the LVFS will be reported to the LVFS.\n\n## Enterprise use\n\nThe flow of updates can be controlled in the enterprise using the\n\"approved updates\" feature. This allows the domain administrator to filter\nthe possible updates from a central server (e.g. the LVFS, or a mirror)\nto only firmware that have been tested specifically in your organization.\n\nThe list of approved updates can be enabled by adding `ApprovalRequired=true`\nto the remote configuration file, e.g. `lvfs.conf`. Once enabled, the\nlist of approved updates can be set in `fwupd.conf` using a comma-delimited list.\n\nFor example:\n\n    ApprovedFirmware=foo,bar\n\nWhere `foo,bar` refers to the container checksums that would correspond\nto two updates in the metadata file.\n\nAdditionally, the list of approved firmware can be supplemented using\n`fwupdmgr set-approved-firmware baz` or using the D-Bus interface.\n\n## Other frontends\n\nfwupdmgr is a command line client, but various additional graphical frontends are enumerated in the [fwupdmgr man page](https://fwupd.github.io/libfwupdplugin/fwupdmgr.html#description).\n\n## SAST Tools\n\n- [Coverity](https://scan.coverity.com/) - static analyzer for Java, C/C++, C#, JavaScript, Ruby, and Python code.\n- [PVS-Studio](https://pvs-studio.com/en/pvs-studio/?utm_source=website&utm_medium=github&utm_campaign=open_source) - static analyzer for C, C++, C#, and Java code.\n"
        },
        {
          "name": "RELEASE",
          "type": "blob",
          "size": 1.537109375,
          "content": "fwupd Release Notes\n\nForking stable branch:\n\nWhen forking main into a stable 2_1_X, be sure to disable the following CI jobs:\n * publish-docs (`.circleci/config.yml`)\n * deploy-store (`snap.yaml`)\n\nAlso update `SECURITY.md`, removing the oldest branch and add the new branch at the top.\nTo make sure it's done right, you can reference commit 433e809318c68c9ab6d4ae50ee9c4312503185d8\n\nCheck IFD parsing (if the files are available):\n\n    ../../contrib/check-ifd-firmware.py ../../fwupd-test-roms/\n\nWrite release entries:\n\n * ../../contrib/generate-release.py\n * copy into ../../data/org.freedesktop.fwupd.metainfo.xml\n * appstream-util appdata-to-news ../../data/org.freedesktop.fwupd.metainfo.xml > NEWS\n\nUpdate translations:\n\nninja-build fwupd-pot\ncd ../..\ntx push --source\ntx pull --all --force --minimum-perc=5\ncd venv/build\nninja-build fix-translations\ngit add ../../po/*.po\n\n2. Commit changes to git:\n\n# MAKE SURE THIS IS CORRECT\nexport release_ver=\"2.0.4\"\n\ngit commit -a -m \"Release fwupd ${release_ver}\" --no-verify\ngit tag -s -f -m \"Release fwupd ${release_ver}\" \"${release_ver}\"\n<wait>\ngit push --tags\ngit push\n\n3. Generate the tarball:\n\nninja dist\n\n3a. Generate the additional verification metadata\n\ngpg -b -a meson-dist/fwupd-${release_ver}.tar.xz\n\n4. Create release and upload tarball to https://github.com/fwupd/fwupd/tags\n\n5. Do post release version bump in meson.build\n\n6. Commit changes:\n\ngit commit -a -m \"trivial: post release version bump\" --no-verify\ngit push\n\n7. Update flatpak package for new release:\n\nhttps://github.com/flathub/org.freedesktop.fwupd\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 7.4892578125,
          "content": "# Security Policy\n\nDue to the nature of what we are doing, fwupd takes security very seriously.\nIf you have any concerns please [let us know](https://github.com/fwupd/fwupd/security/advisories/new).\n\n## Supported Versions\n\nThe `main`, and `1.9.x`, branches are fully supported by the upstream authors.\nAdditionally, the `1.8.x` branch is supported just for security fixes.\n\n| Version | Supported          | EOL        |\n| ------- | ------------------ | ---------- |\n| 2.0.x   | :heavy_check_mark: | 2028-01-01 |\n| 1.9.x   | :heavy_check_mark: | 2027-01-01 |\n| 1.8.x   | :white_check_mark: | 2025-01-01 |\n| 1.7.x   | :x:                | 2024-06-01 |\n| 1.6.x   | :x:                | 2024-01-01 |\n| 1.5.x   | :x:                | 2022-01-01 |\n| 1.4.x   | :x:                | 2021-05-01 |\n| 1.3.x   | :x:                | 2020-07-01 |\n| 1.2.x   | :x:                | 2019-12-01 |\n| 1.1.x   | :x:                | 2018-11-01 |\n| 1.0.x   | :x:                | 2018-10-01 |\n| 0.9.x   | :x:                | 2018-02-01 |\n\nOlder releases than this are unsupported by upstream but may be supported by\nyour distributor or distribution. If you open an issue with one of these older\nreleases the very first question from us is going to be asking if it's fixed on\na supported branch. You can use the flatpak or snap packages if your distributor\nis unwilling to update to a supported version.\n\n## Reporting a Vulnerability\n\nIf you find a vulnerability in fwupd you should let us know using a\n[private vulnerability disclosure](https://github.com/fwupd/fwupd/security/advisories/new) on GitHub,\nwith a description of the issue, the steps you took to create the issue, affected\nversions, and, if known, mitigations for the issue.\n\nFailing that, please report the issue against the `fwupd` component in Red Hat\nbugzilla, with the security checkbox set. You should get a response within 3\ndays. We have no bug bounty program, but we're happy to credit you in updates\nif this is what you would like us to do.\n\n## Threat Modeling\n\n### Who We Trust\n\nIn this diagram, the arrow shows the flow of *information* from one entity to another.\n\nImportant things to note:\n\n* OEMs and ODMs have to apply for a LVFS account and the website and email domain is verified\n* OEMs and ODMs can only upload for devices that match their device-supplied vendor-id\n* The relationship between the OEM/ODM and affiliate ISV/IBV is implemented using per-task ACLs\n* The LVFS is assumed to be managed by a vendor-neutral trusted team\n* Signing of the metadata and firmware is implemented using PKCS#7 and GPG\n* End users only trust the LVFS signing signatures by default\n* Metadata contains SHA-1 and SHA-256 hashes of the firmware archive\n* Access to the embargo remotes requires knowing the secret vendor hash, but not a token\n* The firmware archive internal metadata and firmware payload are both signed\n* Reports have to be signed by the user machine key to be attributable to an OEM or QA team\n* Signed reports are uploaded using a username and access token\n* SBOM metadata is extracted from the payload by the LVFS and formatted into HTML/SWID formats\n* Security researchers can only run FwHunt/Yara scans on public firmware\n\n```mermaid\n  flowchart TD\n      LVFS((LVFS Webservice)) -- \"SBOM.html\" --> User(End User)\n      LVFS -- \"md.[xml|jcat] 🔒\" --> CDN(Fastly CDN)\n      CDN -- \"md.[xml|jcat] 🔒\" --> User\n      LVFS -- \"embargo.[xml|jcat] 🔒\" --> User\n      LVFS -- \"fw.cab 🔒\" --> User\n      User -. \"report.json\" .-> LVFS\n      User -. \"hsi.json\" .-> LVFS\n      QA(QA Teams) -- \"report.json 🔒\" --> LVFS\n      OEM(Device Vendor) -- \"fw.cab\" --> LVFS\n      ODM(Device Manufacturer) -- \"fw.[bin|cab]\" --> OEM\n      OEM -. \"report.json 🔒\" .-> LVFS\n      ODM -. \"fw.cab\" .-> LVFS\n      IBV(BIOS Vendor) -- \"fw.bin\" --> ODM\n      ISV(Silicon Vendor) -- \"fw.bin\" --> ODM\n      User -. \"md.xml 🔒\" .-> User2(Other LAN Users)\n      User -. \"fw.cab 🔒\" .-> User2\n      LVFS -- \"FwHunt|Yara\" --> SecAlert(Security Researchers)\n```\n\n### What We Trust\n\nIn this diagram, the arrow shows the flow of *data* between different processes or machines.\n\nImportant things to note:\n\n* User-facing clients like `fwupdmgr` and `gnome-software` should not be run as the root user\n* The fwupd daemon should be run as a privileged user and have no access to the network\n* Privilege escalation is performed using PolicyKit based on fine-grained ACLs, if available\n* Passwords may be in plaintext in `remotes.d` or config files, and should be readable only by root\n* The fwupd daemon will only install firmware archives signed by the LVFS unless modified\n* The fwupd daemon scans and verifies the mtime of various files at startup to build caches\n* If SecureBoot is turned on then `fwupd-efi` has to be signed by a trusted key\n* Files are passed between the user client and fwupd using an open file-descriptor, not a filename\n* There is no public interface to either the PostgreSQL or EFS data stores\n* The fwupd daemon may need to mount the EFI system partition to copy in capsule payloads\n* The `fwupdtool` debug tool requires root access to perform updates on devices\n\n```mermaid\n  flowchart TD\n      subgraph Vendor\n        OEM(OEM/ODM/ISV Firmware)\n      end\n      subgraph User\n        fwupdmgr((fwupdmgr\\ngnome-software))\n      end\n      subgraph Local Network User\n        fwupdmgr2((fwupdmgr\\ngnome-software))\n      end\n      subgraph Privileged\n        fwupd((fwupd\\ndaemon))\n        passim((passimd))\n        fwupdengine(FuEngine)\n        fwupdtool(fwupdtool\\ndebug\\ntool)\n        fwupd-efi(fwupd capsule loader)\n        Pending[(history.db)]\n        Kernel((OS Kernel))\n        ESP[(EFI\\nSystem\\nPartition)]\n        SPI[(System SPI)]\n        UsbDevice(USB Device)\n        UsbDeviceEEPROM[(USB Device\\nEEPROM)]\n        State[(/var/lib/fwupd)]\n        NVRAM[(Non-volatile\\nRAM)]\n      end\n      subgraph Internet\n        LVFS((LVFS\\nInstance))\n        CDN(Fastly\\nCDN)\n        EFS[(Amazon\\nEFS)]\n        Postgres[(Amazon\\nRDS)]\n        Worker(Async Workers)\n      end\n      LVFS -- \"fw.cab\" --> Worker\n      Worker -- \"md.xml 🔒\" --> EFS\n      EFS <-- \"fw.cab 🔒\" --> Worker\n      OEM -- \"firmware.cab\" --> LVFS\n      LVFS -. \"report.html\" .-> OEM\n      EFS <--> LVFS\n      Postgres <--> Worker\n      Postgres <--> LVFS\n      fwupd <--> fwupdengine\n      fwupdengine <-- \"sqlite\" --> Pending\n      UsbDevice <-- \"i²c\" --> UsbDeviceEEPROM\n      fwupdengine <-- \"libusb\" --> UsbDevice\n      fwupdtool <---> fwupdengine\n      fwupdengine <-- \"ioctl()\\nread()\\nwrite()\" --> Kernel\n      fwupdengine -. \"fwupdx64.efi\" .-> ESP\n      fwupdengine -- \"fw.bin\" --> ESP\n      fwupdengine -- \"fw.bin\" --> Kernel\n      fwupdengine -- \"efivar\" ---> Kernel\n      Kernel -. \"HSI attrs\" .-> fwupdengine\n      Kernel <-- \"efivars\" --> NVRAM\n      fwupd-efi -- \"fw.cap 🔏\" ---> SPI\n      fwupd-efi <-- \"efivars\" --> NVRAM\n      ESP --> fwupd-efi\n      fwupdmgr -- \"md.[xml|jcat] 🔒🚏\" --> fwupd\n      fwupd -- \"Devices\\nHSI attrs\\nReleases 🚏\" --> fwupdmgr\n      fwupdmgr -- \"fw.cab 🔒🚏\" --> fwupd\n      CDN -- \"md.[xml|jcat] 🔒\" --> fwupdmgr\n      LVFS -- \"md.[xml|jcat] 🔒\" --> CDN\n      LVFS -- \"fw.cab 🔒\" --> fwupdmgr\n      LVFS -- \"embargo.[xml|jcat] 🔒\" --> fwupdmgr\n      fwupdmgr -. \"report.json\" .-> LVFS\n      fwupdmgr -. \"report.json 🔒\" .-> LVFS\n      State <-- \"fw.cab 🔒\" --> fwupd\n      passim -. \"md.md|fw.cab 🔒\\nmDNS with TLS\" .-> fwupdmgr2\n      fwupd -. \"md.md|fw.cab 🔒🚏\" .-> passim\n      User ~~~~ Privileged\n      Internet ~~~~~ User\n      Vendor ~~~~~ Internet\n```\n\n### Key\n\n* 🚏: D-Bus\n* 🔒: Signed using JCat file\n* 🔏: Signed using Platform Key\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate-build",
          "type": "tree",
          "content": null
        },
        {
          "name": "libfwupd",
          "type": "tree",
          "content": null
        },
        {
          "name": "libfwupdplugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 23.4375,
          "content": "project('fwupd', 'c',\n  version: '2.0.4',\n  license: 'LGPL-2.1-or-later',\n  meson_version: '>=1.3.0',\n  default_options: ['warning_level=2', 'c_std=c11'],\n)\n\nfwupd_version = meson.project_version()\nvarr = fwupd_version.split('.')\nfwupd_major_version = varr[0]\nfwupd_minor_version = varr[1]\nfwupd_micro_version = varr[2]\n\nconf = configuration_data()\nconf.set('MAJOR_VERSION', fwupd_major_version)\nconf.set('MINOR_VERSION', fwupd_minor_version)\nconf.set('MICRO_VERSION', fwupd_micro_version)\nconf.set_quoted('PACKAGE_VERSION', fwupd_version)\n\n# get source version, falling back to package version\nsource_version = fwupd_version\ngit = find_program('git', required: false)\ntag = false\nif git.found()\n  source_version = run_command([git, 'describe'], check: false).stdout().strip()\n  if source_version == ''\n    source_version = fwupd_version\n  endif\n  tag = run_command([git, 'describe', '--exact-match'], check: false).returncode() == 0\nendif\nconf.set_quoted('SOURCE_VERSION', source_version)\n\n# libtool versioning - this applies to libfwupd\n#\n# See http://sources.redhat.com/autobook/autobook/autobook_91.html#SEC91 for details\n#\n# - If interfaces have been changed or added, but binary compatibility\n#   has been preserved, change:\n#      CURRENT += 1\n#      REVISION = 0\n#      AGE += 1\n# - If binary compatibility has been broken (eg removed or changed\n#   interfaces), change:\n#      CURRENT += 1\n#      REVISION = 0\n#      AGE = 0\n# - If the interface is the same as the previous version, but bugs are\n#   fixed, change:\n#      REVISION += 1\nlibfwupd_lt_current = '3'\nlibfwupd_lt_revision = '0'\nlibfwupd_lt_age = '0'\nlibfwupd_lt_version = '@0@.@1@.@2@'.format(libfwupd_lt_current, libfwupd_lt_age, libfwupd_lt_revision)\n\n# get supported warning flags\nwarning_flags = [\n  '-Wfatal-errors',\n  '-Waggregate-return',\n  '-Wunused',\n  '-Warray-bounds',\n  '-Wcast-align',\n  '-Wclobbered',\n  '-Wdeclaration-after-statement',\n  '-Wdiscarded-qualifiers',\n  '-Wduplicated-branches',\n  '-Wduplicated-cond',\n  '-Wempty-body',\n  '-Wfloat-equal',\n  '-Wformat=2',\n  '-Wformat-nonliteral',\n  '-Wformat-security',\n  '-Wformat-signedness',\n  '-Wignored-qualifiers',\n  '-Wimplicit-function-declaration',\n  '-Wimplicit-int',\n  '-Wincompatible-pointer-types',\n  '-Winit-self',\n  '-Wint-conversion',\n  '-Wlogical-op',\n  '-Wmaybe-uninitialized',\n  '-Wmissing-declarations',\n  '-Wmissing-format-attribute',\n  '-Wmissing-include-dirs',\n  '-Wmissing-noreturn',\n  '-Wmissing-parameter-type',\n  '-Wmissing-prototypes',\n  '-Wnested-externs',\n  '-Wno-cast-function-type',\n  '-Wno-address-of-packed-member',  # incompatible with g_autoptr()\n  '-Wno-unknown-pragmas',\n  '-Wno-missing-field-initializers',\n  '-Wno-strict-aliasing',\n  '-Wno-suggest-attribute=format',\n  '-Wno-typedef-redefinition',\n  '-Wno-unknown-warning-option',\n  '-Wno-unused-parameter',\n  '-Wno-nonnull-compare',\n  '-Wno-analyzer-use-of-uninitialized-value', # incompatible with g_autoptr()\n  '-Wno-analyzer-fd-double-close',\n  '-Wold-style-definition',\n  '-Woverride-init',\n  '-Wpointer-arith',\n  '-Wredundant-decls',\n  '-Wreturn-type',\n  '-Wshadow',\n  '-Wsign-compare',\n  '-Wstrict-aliasing',\n  '-Wstrict-prototypes',\n  '-Wswitch-default',\n  '-Wtype-limits',\n  '-Wundef',\n  '-Wuninitialized',\n  '-Wunused-but-set-variable',\n  '-Wunused-variable',\n  '-Wvla',\n  '-Wwrite-strings'\n]\nstatic_analysis = get_option('static_analysis') and host_machine.system() != 'windows'\nif static_analysis\n  warning_flags += ['-fanalyzer', '-Wno-analyzer-null-dereference']\nendif\ncc = meson.get_compiler('c')\nadd_project_arguments(cc.get_supported_arguments(warning_flags), language: 'c')\n\nif not meson.is_cross_build()\n  add_project_arguments('-fstack-protector-strong', language: 'c')\nendif\n\nif cc.get_id() == 'msvc'\n  error('MSVC is not supported as it does not support __attribute__((cleanup))')\nendif\n\n# enable full RELRO where possible\n# FIXME: until https://github.com/mesonbuild/meson/issues/1140 is fixed\nglobal_link_args = []\ntest_link_args = [\n  '-Wl,-z,relro',\n  '-Wl,-z,defs',\n  '-Wl,-z,now',\n  '-Wl,-z,ibt,-z,shstk',\n]\nforeach arg: test_link_args\n  if cc.has_link_argument(arg)\n    global_link_args += arg\n  endif\nendforeach\nadd_project_link_arguments(\n  global_link_args,\n  language: 'c'\n)\n\nadd_project_arguments('-DFWUPD_COMPILATION', language: 'c')\n\n# Needed for realpath(), syscall(), cfmakeraw(), etc.\nadd_project_arguments('-D_DEFAULT_SOURCE', language: 'c')\n\n# needed for symlink() and BYTE_ORDER\nadd_project_arguments('-D_BSD_SOURCE', language: 'c')\nadd_project_arguments('-D__BSD_VISIBLE', language: 'c')\nadd_project_arguments('-D_XOPEN_SOURCE=700', language: 'c')\n\n# needed for memfd_create()\nadd_project_arguments('-D_GNU_SOURCE', language: 'c')\n\n# needed for memmem()\nadd_project_arguments('-D_DARWIN_C_SOURCE=900000', language: 'c')\n\n# sanity check\nif get_option('build') == 'all'\n  build_standalone = true\n  build_daemon = true\nelif get_option('build') == 'standalone'\n  build_standalone = true\n  build_daemon = false\nelif get_option('build') == 'library'\n  build_standalone = false\n  build_daemon = false\nendif\n\nprefix = get_option('prefix')\n\nbindir = join_paths(prefix, get_option('bindir'))\nlibdir = join_paths(prefix, get_option('libdir'))\nlibexecdir = join_paths(prefix, get_option('libexecdir'))\n#this ends up in compiled code, ignore prefix\nif host_machine.system() == 'windows'\n  sysconfdir = get_option('sysconfdir')\n  localstatedir = get_option('localstatedir')\n  datadir = get_option('datadir')\n  installed_test_bindir = get_option('libexecdir')\n  installed_test_datadir = get_option('datadir')\n  daemon_dir = get_option('libexecdir')\nelse\n  datadir = join_paths(prefix, get_option('datadir'))\n  sysconfdir = join_paths(prefix, get_option('sysconfdir'))\n  localstatedir = join_paths(prefix, get_option('localstatedir'))\n  installed_test_bindir = join_paths(libexecdir, 'installed-tests', meson.project_name())\n  installed_test_datadir = join_paths(datadir, 'installed-tests', meson.project_name())\n  daemon_dir = join_paths(libexecdir, 'fwupd')\nendif\nmandir = join_paths(prefix, get_option('mandir'))\nlocaledir = join_paths(prefix, get_option('localedir'))\n\ndiffcmd = find_program('diff')\ngio = dependency('gio-2.0', version: '>= 2.72.0')\ngiounix = dependency('gio-unix-2.0', version: '>= 2.72.0', required: false)\nif giounix.found()\n  conf.set('HAVE_GIO_UNIX', '1')\nendif\ngmodule = dependency('gmodule-2.0')\nenable_udev = get_option('udev').disable_auto_if(host_machine.system() != 'linux').allowed()\nif enable_udev\n  conf.set('HAVE_UDEV', '1')\nendif\nif build_standalone\nbluez = get_option('bluez').disable_auto_if(host_machine.system() != 'linux')\nif bluez.allowed()\n  conf.set('HAVE_BLUEZ', '1')\nendif\nhost_cpu = host_machine.cpu_family()\nhsi = get_option('hsi').disable_auto_if(host_machine.system() != 'linux').disable_auto_if(host_cpu != 'x86' and host_cpu != 'x86_64').allowed()\nif hsi\n  conf.set('HAVE_HSI', '1')\nendif\nlibxmlb = dependency('xmlb', version: '>= 0.3.19', fallback: ['libxmlb', 'libxmlb_dep'])\nif libxmlb.get_variable('zstd') == 'true'\n  lvfs_metadata_format = 'zst'\nelif libxmlb.get_variable('lzma') == 'true'\n  lvfs_metadata_format = 'xz'\nelse\n  lvfs_metadata_format = 'gz'\nendif\nconf.set_quoted('FU_LVFS_METADATA_FORMAT', lvfs_metadata_format)\n\n# FreeBSD is missing some libusb symbols\nlibusb = dependency('libusb-1.0', version : '>= 0.1.12')\nconf.set_quoted('LIBUSB_VERSION', libusb.version())\nif cc.has_header_symbol('libusb.h', 'libusb_set_option', dependencies: libusb)\n  conf.set('HAVE_LIBUSB_SET_OPTION', '1')\nendif\nif cc.has_header_symbol('libusb.h', 'libusb_init_context', dependencies: libusb)\n  conf.set('HAVE_LIBUSB_INIT_CONTEXT', '1')\nendif\nif cc.has_header_symbol('libusb.h', 'libusb_get_parent', dependencies: libusb)\n  conf.set('HAVE_LIBUSB_GET_PARENT', '1')\nendif\n\nsqlite = dependency('sqlite3', required: get_option('sqlite'))\nif sqlite.found()\n  conf.set('HAVE_SQLITE', '1')\nendif\npassim = dependency('passim', version: '>= 0.1.6', required: get_option('passim'), fallback: ['passim', 'passim_dep'])\nif passim.found()\n  conf.set('HAVE_PASSIM', '1')\nendif\nlibarchive = dependency('libarchive', required: get_option('libarchive'))\nif libarchive.found()\n  conf.set('HAVE_LIBARCHIVE', '1')\n  if cc.has_header_symbol('archive.h', 'archive_write_add_filter_zstd')\n    conf.set('HAVE_LIBARCHIVE_WRITE_ADD_FILTER_ZSTD', '1')\n  endif\nendif\nendif\nlibjcat = dependency('jcat', version: '>= 0.2.0', fallback: ['libjcat', 'libjcat_dep'])\nlibjsonglib = dependency('json-glib-1.0', version: '>= 1.6.0', fallback: ['libjsonglib', 'libjsonglib_dep'])\nlibblkid = dependency('blkid', required: get_option('blkid'))\nif libblkid.found()\n  conf.set('HAVE_BLKID', '1')\nendif\nvalgrind = dependency('valgrind', required: get_option('valgrind'))\nlibcurl = dependency('libcurl', version: '>= 7.62.0', required: get_option('curl'))\nif libcurl.found()\n  conf.set('HAVE_LIBCURL', '1')\nendif\nlibdrm = dependency('libdrm', required: get_option('libdrm'))\nif libdrm.found()\n  conf.set('HAVE_LIBDRM' , '1')\nendif\npolkit = dependency('polkit-gobject-1', version: '>= 0.114',\n         required: get_option('polkit').disable_auto_if(host_machine.system() != 'linux'))\nif polkit.found()\n  conf.set('HAVE_POLKIT', '1')\n  conf.set_quoted ('POLKIT_ACTIONDIR', polkit.get_variable(pkgconfig: 'actiondir'))\nendif\nif build_daemon\n  if not polkit.found()\n    warning('Polkit is disabled, the daemon will allow ALL client actions')\n  endif\nendif\nlibm = cc.find_library('m', required: false)\nzlib = dependency('zlib')\n\nfs = import('fs')\n\n# look for usb.ids in both of the Debian and Fedora locations,\n# and fall back to the system datadir in case we're building in a venv or prefix\nvendor_ids_dir = get_option('vendor_ids_dir')\nif vendor_ids_dir == ''\n  vendor_ids_dir = join_paths(datadir, 'misc')\n  if not fs.is_file(join_paths(vendor_ids_dir, 'usb.ids'))\n    vendor_ids_dir = join_paths(datadir, 'hwdata')\n  endif\n  if not fs.is_file(join_paths(vendor_ids_dir, 'usb.ids'))\n    vendor_ids_dir = '/usr/share/hwdata'\n  endif\n  if not fs.is_file(join_paths(vendor_ids_dir, 'usb.ids'))\n    vendor_ids_dir = '/usr/share/misc'\n  endif\n  if not fs.is_file(join_paths(vendor_ids_dir, 'usb.ids'))\n    vendor_ids_dir = '/usr/local/var/homebrew/linked/usb.ids/share/misc'\n  endif\n  if not fs.is_file(join_paths(vendor_ids_dir, 'usb.ids'))\n    error('could not auto-detect -Dvendor_ids_dir=')\n  endif\nendif\nconf.set_quoted ('FWUPD_DATADIR_VENDOR_IDS', vendor_ids_dir)\n\nbashcomp = dependency('bash-completion', required: false)\npython3path = get_option('python')\nif python3path == ''\n  python3 = import('python').find_installation('python3')\nelse\n  python3 = find_program(python3path)\nendif\n\ngnutls = dependency('gnutls', version: '>= 3.6.0', required: get_option('gnutls'))\nif gnutls.found()\n  conf.set('HAVE_GNUTLS', '1')\nendif\n\nlzma = dependency('liblzma', required: get_option('lzma'))\nif lzma.found()\n  conf.set('HAVE_LZMA', '1')\nendif\n\ncbor = dependency('libcbor', version: '>= 0.7.0', required: get_option('cbor'))\nif cbor.found()\n  conf.set('HAVE_CBOR', '1')\n  if cc.has_header_symbol('cbor.h', 'cbor_set_allocs')\n    conf.set('HAVE_CBOR_SET_ALLOCS', '1')\n  endif\nendif\n\nplatform_deps = []\nif get_option('default_library') != 'static'\n  if host_machine.system() == 'windows'\n    platform_deps += cc.find_library('shlwapi')\n  endif\n  if host_machine.system() == 'freebsd'\n    platform_deps += dependency('efivar')\n  endif\nendif\n\nif valgrind.found()\n  conf.set('HAVE_VALGRIND', '1')\nendif\n\nlibsystemd = dependency('libsystemd',\n                        required: get_option('systemd').disable_auto_if(host_machine.system() != 'linux'))\n\nif cc.has_header('sys/utsname.h')\n  conf.set('HAVE_UTSNAME_H', '1')\nendif\nif cc.has_header('sys/inotify.h')\n  conf.set('HAVE_INOTIFY_H', '1')\nendif\nif cc.has_header('sys/ioctl.h')\n  conf.set('HAVE_IOCTL_H', '1')\nendif\nif cc.has_header('termios.h')\n  conf.set('HAVE_TERMIOS_H', '1')\nendif\nif cc.has_header('errno.h')\n  conf.set('HAVE_ERRNO_H', '1')\nendif\nif cc.has_header('sys/socket.h')\n  conf.set('HAVE_SOCKET_H', '1')\nendif\nif cc.has_header('scsi/sg.h')\n  conf.set('HAVE_SCSI_SG_H', '1')\nendif\nif cc.has_header('sys/select.h')\n  conf.set('HAVE_SELECT_H', '1')\nendif\nif cc.has_header('sys/io.h') and cc.has_function('outb', prefix: '#include <sys/io.h>')\n  conf.set('HAVE_IO_H', '1')\nendif\nif cc.has_header('linux/ethtool.h')\n  conf.set('HAVE_ETHTOOL_H', '1')\nendif\nif cc.has_header('linux/i2c-dev.h')\n  conf.set('HAVE_I2C_DEV_H', '1')\nendif\nif cc.has_header('linux/mei.h')\n  conf.set('HAVE_MEI_H', '1')\nendif\nif cc.has_header('linux/videodev2.h')\n  conf.set('HAVE_VIDEODEV2_H', '1')\nendif\nif cc.has_header('mtd/mtd-user.h')\n  conf.set('HAVE_MTD_USER_H', '1')\nendif\nif cc.has_header('linux/hidraw.h')\n  conf.set('HAVE_HIDRAW_H', '1')\nendif\nif cc.has_header('sys/mman.h')\n  conf.set('HAVE_MMAN_H', '1')\nendif\nif cc.has_header('poll.h')\n  conf.set('HAVE_POLL_H', '1')\nendif\nif cc.has_header('kenv.h')\n  conf.set('HAVE_KENV_H', '1')\nendif\nif cc.has_header('malloc.h')\n  conf.set('HAVE_MALLOC_H', '1')\n  if cc.has_function('malloc_trim', prefix: '#include <malloc.h>')\n\t conf.set('HAVE_MALLOC_TRIM', '1')\n  endif\nendif\nhas_cpuid = cc.has_header_symbol('cpuid.h', '__get_cpuid_count', required: get_option('plugin_msr'))\nif has_cpuid\n  conf.set('HAVE_CPUID_H', '1')\nendif\nif cc.has_function('getuid')\n  conf.set('HAVE_GETUID', '1')\nendif\nif cc.has_function('realpath')\n  conf.set('HAVE_REALPATH', '1')\nendif\nif cc.has_function('memmem')\n  conf.set('HAVE_MEMMEM', '1')\nendif\nif cc.has_function('sigaction')\n  conf.set('HAVE_SIGACTION', '1')\nendif\nif cc.has_function('memfd_create')\n  conf.set('HAVE_MEMFD_CREATE', '1')\nendif\nif cc.has_header_symbol('locale.h', 'LC_MESSAGES')\n  conf.set('HAVE_LC_MESSAGES', '1')\nendif\nif cc.has_header('linux/ipmi.h')\n  have_linux_ipmi = true\n  conf.set('HAVE_LINUX_IPMI_H', '1')\nelse\n  have_linux_ipmi = false\nendif\nif cc.has_header_symbol('fcntl.h', 'F_WRLCK')\n  conf.set('HAVE_WRLCK', '1')\nendif\nif cc.has_header_symbol('fcntl.h', 'F_OFD_SETLK')\n  conf.set('HAVE_OFD', '1')\nendif\nif cc.has_function('pwrite', args: '-D_XOPEN_SOURCE')\n  conf.set('HAVE_PWRITE', '1')\nendif\nif cc.has_header_symbol('sys/mount.h', 'BLKSSZGET')\n  conf.set('HAVE_BLKSSZGET', '1')\nendif\n\nif host_machine.system() == 'freebsd'\n  if cc.has_type('struct efi_esrt_entry_v1', prefix: '#include <sys/types.h>\\n#include <sys/efiio.h>')\n    conf.set('HAVE_FREEBSD_ESRT', '1')\n  endif\nendif\n\nlaunchctl = find_program('launchctl',\n  required: get_option('launchd').disable_auto_if(host_machine.system() != 'darwin').allowed(),\n)\n\n# this is way less hassle than including TargetConditionals.h and looking for TARGET_OS_MAC=1\nif host_machine.system() == 'darwin'\n  conf.set('HOST_MACHINE_SYSTEM_DARWIN', '1')\n  summary({\n    'launchd': launchctl,\n    'launchd_agent_dir': get_option('launchd_agent_dir'),\n  }, section: 'Darwin options')\nendif\n\n# EFI\nif build_standalone\n  efi_app_location = join_paths(libexecdir, 'fwupd', 'efi')\n  conf.set_quoted('EFI_APP_LOCATION', efi_app_location)\n  if host_cpu == 'x86'\n    EFI_MACHINE_TYPE_NAME = 'ia32'\n  elif host_cpu == 'x86_64'\n    EFI_MACHINE_TYPE_NAME = 'x64'\n  elif host_cpu == 'arm'\n    EFI_MACHINE_TYPE_NAME = 'arm'\n  elif host_cpu == 'aarch64'\n    EFI_MACHINE_TYPE_NAME = 'aa64'\n  elif host_cpu == 'loongarch64'\n    EFI_MACHINE_TYPE_NAME = 'loongarch64'\n  elif host_cpu == 'riscv64'\n    EFI_MACHINE_TYPE_NAME = 'riscv64'\n  else\n    EFI_MACHINE_TYPE_NAME = ''\n  endif\n  conf.set_quoted('EFI_MACHINE_TYPE_NAME', EFI_MACHINE_TYPE_NAME)\nendif\n\nflashrom = get_option('plugin_flashrom').disable_auto_if(host_machine.system() != 'linux')\nallow_flashrom = flashrom.allowed()\nif build_standalone\n  libflashrom = dependency('flashrom',\n                            fallback: ['flashrom', 'flashrom_dep'],\n                            required: flashrom)\nendif\n\nif libsystemd.found()\n  systemd = dependency('systemd', version: '>= 249', required: get_option('systemd'))\n  conf.set('HAVE_SYSTEMD' , '1')\n  conf.set('HAVE_LOGIND' , '1')\n  systemd_root_prefix = get_option('systemd_root_prefix')\n  if systemd_root_prefix == ''\n    systemdunitdir = systemd.get_variable(pkgconfig: 'systemdsystemunitdir')\n    systemd_shutdown_dir = systemd.get_variable(pkgconfig: 'systemdshutdowndir')\n    systemd_modules_load_dir = systemd.get_variable(pkgconfig: 'modulesloaddir')\n    systemd_sysusers_dir = systemd.get_variable(pkgconfig: 'sysusersdir')\n  else\n    systemdunitdir = systemd.get_variable(pkgconfig: 'systemdsystemunitdir', pkgconfig_define: ['rootprefix', systemd_root_prefix])\n    systemd_shutdown_dir = systemd.get_variable(pkgconfig: 'systemdshutdowndir', pkgconfig_define: ['root_prefix', systemd_root_prefix])\n    systemd_modules_load_dir = systemd.get_variable(pkgconfig: 'modulesloaddir', pkgconfig_define: ['root_prefix', systemd_root_prefix])\n    systemd_sysusers_dir = systemd.get_variable(pkgconfig: 'sysusersdir', pkgconfig_define: ['root_prefix', systemd_root_prefix])\n  endif\nendif\n\nelogind = dependency('systemd', 'libelogind', required: get_option('elogind'))\nif elogind.found()\n  conf.set('HAVE_LOGIND' , '1')\nendif\n\nconsolekit = get_option('consolekit').disable_auto_if(host_machine.system() != 'linux').allowed()\nif consolekit\n  conf.set('HAVE_CONSOLEKIT' , '1')\nendif\n\nsupported_build = get_option('supported_build').disable_auto_if(not tag).allowed()\nif supported_build\n    conf.set('SUPPORTED_BUILD', '1')\nendif\n\ngnome = import('gnome')\ni18n = import('i18n')\n\nconf.set_quoted('FWUPD_PREFIX', prefix)\nconf.set_quoted('FWUPD_BINDIR', bindir)\nconf.set_quoted('FWUPD_LIBDIR', libdir)\nconf.set_quoted('FWUPD_LIBEXECDIR', libexecdir)\nconf.set_quoted('FWUPD_DATADIR', datadir)\nconf.set_quoted('FWUPD_LOCALSTATEDIR', localstatedir)\nconf.set_quoted('FWUPD_SYSCONFDIR', sysconfdir)\nconf.set_quoted('FWUPD_LOCALEDIR', localedir)\n\nif build_standalone\nif host_machine.system() == 'windows'\n  libdir_pkg = bindir\nelse\n  libdir_pkg = join_paths(libdir, 'fwupd-@0@'.format(fwupd_version))\nendif\nconf.set_quoted('FWUPD_LIBDIR_PKG', libdir_pkg)\nendif\n\nconf.set_quoted('GETTEXT_PACKAGE', meson.project_name())\nconf.set_quoted('PACKAGE_NAME', meson.project_name())\nconf.set_quoted('VERSION', meson.project_version())\n\nif get_option('dbus_socket_address') != ''\n  conf.set_quoted('FWUPD_DBUS_SOCKET_ADDRESS', get_option('dbus_socket_address'))\nendif\n\nmotd_file = '85-fwupd'\nmotd_dir = 'motd.d'\nconf.set_quoted('MOTD_FILE', motd_file)\nconf.set_quoted('MOTD_DIR', motd_dir)\n\nconf.set_quoted('FU_DEFAULT_P2P_POLICY', get_option('p2p_policy'))\n\nconfigure_file(\n  output: 'config.h',\n  configuration: conf\n)\n\nlibdrm_amdgpu = dependency('libdrm_amdgpu',\n                           version: '>= 2.4.113',\n                           required: get_option('plugin_amdgpu'))\nprotobufc = dependency('libprotobuf-c', required: get_option('plugin_logitech_bulkcontroller'))\nprotoc = find_program('protoc', 'protoc-c', required: get_option('plugin_logitech_bulkcontroller'))\n\nroot_incdir = include_directories('.')\n\nfwupd_gir = []\ngir_dep = dependency('gobject-introspection-1.0', required: get_option('introspection'))\nintrospection = get_option('introspection').disable_auto_if(host_machine.system() != 'linux').disable_auto_if(not gir_dep.found())\n\ngidocgen_dep = dependency('gi-docgen',\n  version: '>= 2021.1',\n  native: true,\n  fallback: ['gi-docgen', 'dummy_dep'],\n  required: get_option('docs'),\n)\ngidocgen_app = find_program('gi-docgen', required: gidocgen_dep.found())\nbuild_docs = gidocgen_dep.found() and gidocgen_app.found() and introspection.allowed()\n\nif build_docs and gidocgen_dep.version().version_compare('< 2022.2')\n  markdown_version = run_command(\n    [python3, '-c', 'import markdown; print(markdown.__version__)'],\n    check: true,\n  ).stdout().strip()\n  build_docs = get_option('docs').require(\n    markdown_version.version_compare('>=3.2'),\n    error_message: 'docs=enabled requires at least markdown >= 3.2'\n  ).allowed()\nendif\n\njinja2 = run_command(\n  [python3, '-c', 'import jinja2; print(jinja2.__version__)'],\n  check: true,\n)\nif jinja2.stderr().strip() != ''\n  error('Python module jinja2 not found')\nendif\n\n# using \"meson configure -Db_sanitize=address,undefined\" is super useful in finding corruption,\n# but it does not work with our GMainContext-abuse tests...\nif get_option('b_sanitize') in ['address,undefined', 'address', 'undefined', 'leak']\n  run_sanitize_unsafe_tests = false\nelse\n  run_sanitize_unsafe_tests = true\nendif\n\n# take foo.rs and generate foo-struct.c and foo-struct.h files like protobuf_c\nrustgen = generator(python3,\n  output  : ['@BASENAME@-struct.c', '@BASENAME@-struct.h'],\n  arguments : [\n    join_paths(meson.project_source_root(), 'libfwupdplugin', 'rustgen.py'),\n    '@INPUT@',\n    '@OUTPUT0@',\n    '@OUTPUT1@',\n  ],\n)\n\ndbusmock = run_command(\n  [python3, '-c', 'import dbusmock; print(dbusmock.__version__)'],\n  check: false,\n)\n\numockdev_integration_tests = get_option('umockdev_tests')                     \\\n                              .disable_auto_if(not get_option('tests'))       \\\n                              .disable_auto_if(not introspection.allowed())   \\\n                              .disable_auto_if(not run_sanitize_unsafe_tests) \\\n                              .disable_auto_if(dbusmock.returncode() != 0)\numockdev = dependency('umockdev-1.0', required: get_option('umockdev_tests'))\n\nif dbusmock.returncode() != 0 and get_option('umockdev_tests').allowed()\n  warning('python dbusmock not found, umockdev tests will be disabled')\nendif\n\nallow_uefi_capsule = get_option('plugin_uefi_capsule').disable_auto_if(host_machine.system() not in ['linux', 'freebsd']).allowed()\n\nsubdir('generate-build')\nsubdir('libfwupd')\nif polkit.found()\n  subdir('policy')\nendif\nif build_standalone\n  man_md = []\n  md_targets = []\n  plugin_quirks = []\n  subdir('libfwupdplugin')\n  subdir('po')\n  subdir('contrib')\n\n  # common to all plugins\n  plugin_builtins = []\n  plugin_incdirs = [\n    root_incdir,\n    fwupd_incdir,\n    fwupdplugin_incdir,\n  ]\n  plugin_libs = [\n    fwupd,\n    fwupdplugin,\n  ]\n  subdir('plugins')\n  subdir('src')\n  subdir('docs')\n  subdir('data')\n\n  # append all the quirks into one big file and gzip it\n  custom_target('builtin-quirk-gz',\n    input: plugin_quirks,\n    output: 'builtin.quirk.gz',\n    command: [\n      generate_quirk_builtin,\n      '@OUTPUT@',\n      '@INPUT@',\n    ],\n    install: true,\n    install_dir: join_paths(datadir, 'fwupd', 'quirks.d'),\n  )\nendif\n\nif libsystemd.found()\n  summary({\n    'systemd_unit_user': get_option('systemd_unit_user'),\n    'systemd unit dir': systemdunitdir,\n    'systemd shutdown dir': systemd_shutdown_dir,\n    'systemd modules dir': systemd_modules_load_dir,\n    'systemd sysusers dir': systemd_sysusers_dir,\n  }, section: 'systemd options')\nendif\n\nsummary({\n  'fwupdtool': build_standalone,\n  'fwupd (daemon)': build_daemon\n}, section: 'build targets')\n\nsummary({\n  'cbor': cbor,\n  'consolekit': consolekit,\n  'dbus_socket_address': get_option('dbus_socket_address'),\n  'vendor_ids_dir': vendor_ids_dir,\n  'docs': build_docs,\n  'elogind': elogind,\n  'gnutls': gnutls,\n  'introspection': introspection.allowed(),\n  'libblkid': libblkid,\n  'libcurl': libcurl,\n  'libdrm': libdrm,\n  'valgrind': valgrind,\n  'lzma': lzma,\n  'polkit': polkit,\n  'python3': python3,\n  'supported_build': supported_build,\n  'static_analysis': static_analysis,\n  'tests': get_option('tests'),\n  'umockdev_tests': umockdev_integration_tests.allowed(),\n}, section: 'project features')\n\nif build_daemon\n  summary({\n    'bluez': bluez.allowed(),\n    'libusb': libusb,\n    'udev': enable_udev,\n    'hsi': hsi,\n    'lvfs_metadata_format': lvfs_metadata_format,\n    'libarchive': libarchive.found(),\n    'passim': passim,\n    'sqlite': sqlite,\n    'GPG support': supported_gpg,\n    'PKCS7 support': supported_pkcs7,\n  }, section: 'daemon features')\n  en=[]\n  dis=[]\n  foreach plugin: plugins.keys()\n    if plugins[plugin]\n      en += plugin\n    else\n      dis += plugin\n    endif\n  endforeach\n  summary({\n    'enabled': ', '.join(en),\n    'disabled': ', '.join(dis),\n  }, section: 'plugins')\nendif\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 7.400390625,
          "content": "option('bash_completion',\n  type: 'boolean',\n  value: true,\n  description: 'enable bash completion',\n)\noption('bluez',\n  type: 'feature',\n  description: 'BlueZ support',\n)\noption('build',\n  type: 'combo',\n  choices: [\n    'all',\n    'standalone',\n    'library',\n  ],\n  value: 'all',\n  description: 'build type',\n)\noption('cbor',\n  type: 'feature',\n  description: 'CBOR support for coSWID and uSWID',\n)\noption('consolekit',\n  type: 'feature',\n  description: 'ConsoleKit support',\n)\noption('curl',\n  type: 'feature',\n  description: 'libcurl support',\n)\noption('dbus_socket_address',\n  type: 'string',\n  value: '',\n  description: 'D-Bus socket address to use for p2p mode',\n)\noption('docs',\n  type: 'feature',\n  description: 'Build developer documentation',\n)\noption('efi_binary',\n  type: 'boolean',\n  value: false,\n  description: 'generate uefi binary if missing',\n)\noption('efi_os_dir',\n  type: 'string',\n  description: 'the hardcoded name of OS directory in ESP, e.g. fedora',\n)\noption('elogind',\n  type: 'feature',\n  description: 'elogind support',\n)\noption('firmware-packager',\n  type: 'boolean',\n  value: true,\n  description: 'enable firmware-packager installation',\n)\noption('fish_completion',\n  type: 'boolean',\n  value: true,\n  description: 'enable fish completion',\n)\noption('gnutls',\n  type: 'feature',\n  description: 'GnuTLS support',\n)\noption('udev',\n  type: 'feature',\n  description: 'Linux UDev support',\n)\noption('hsi',\n  type: 'feature',\n  description: ' Host Security Information',\n)\noption('introspection',\n  type: 'feature',\n  description: 'generate GObject Introspection data',\n)\noption('launchd',\n  type: 'feature',\n  value: 'auto',\n  description: 'Launchd auto-launch support (MacOS only)',\n)\noption('launchd_agent_dir',\n  type: 'string',\n  value: '/Library/LaunchAgents',\n  description: 'Directory to put the launchd agent',\n)\noption('libarchive',\n  type: 'feature',\n  description: 'libarchive support',\n)\noption('libdrm',\n  type: 'feature',\n  description: 'libdrm support',\n)\noption('valgrind',\n  type: 'feature',\n  description: 'valgrind support',\n)\noption('blkid',\n  type: 'feature',\n  description: 'libblkid support',\n)\noption('lvfs',\n  type: 'combo',\n  choices: [\n    'true',\n    'false',\n    'disabled',\n  ],\n  value: 'true',\n  description: 'install LVFS remotes',\n)\noption('lzma',\n  type: 'feature',\n  description: 'LZMA support',\n)\noption('man',\n  type: 'boolean',\n  value: true,\n  description: 'enable man pages',\n)\noption('metainfo',\n  type: 'boolean',\n  value: true,\n  description: 'install the project metainfo.xml information',\n)\noption('passim',\n  type: 'feature',\n  description: 'Passim support',\n)\noption('p2p_policy',\n  type: 'combo',\n  choices: [\n    'none',\n    'metadata',\n    'firmware',\n    'metadata,firmware',\n  ],\n  value: 'metadata',\n  description: 'Default P2P sharing policy',\n)\noption('plugin_acpi_phat',\n  type: 'feature',\n  description: 'ACPI PHAT support',\n)\noption('plugin_amdgpu',\n  type: 'feature',\n  description: 'AMDGPU support',\n)\noption('plugin_android_boot',\n  type: 'feature',\n  description: 'Android Boot support',\n)\noption('plugin_bcm57xx',\n  type: 'feature',\n  description: 'BCM57xx support',\n)\noption('plugin_cfu',\n  type: 'feature',\n  description: 'CFU support',\n)\noption('plugin_cpu',\n  type: 'feature',\n  description: 'CPU support',\n)\noption('plugin_emmc',\n  type: 'feature',\n  description: 'eMMC support',\n)\noption('plugin_ep963x',\n  type: 'feature',\n  description: 'EP963x support',\n)\noption('plugin_fastboot',\n  type: 'feature',\n  description: 'Fastboot support',\n)\noption('plugin_flashrom',\n  type: 'feature',\n  description: 'flashrom support',\n)\noption('plugin_gpio',\n  type: 'feature',\n  description: 'Linux GPIO support',\n)\noption('plugin_igsc',\n  type: 'feature',\n  description: 'Intel Graphics System Controller support',\n)\noption('plugin_intel_me',\n  type: 'feature',\n  description: 'enable Intel ME support',\n)\noption('plugin_kinetic_dp',\n  type: 'feature',\n  description: 'Kinetic SST/MST DisplayPort converter support',\n)\noption('plugin_logitech_bulkcontroller',\n  type: 'feature',\n  description: 'Logitech bulk controller support',\n)\noption('plugin_logitech_scribe',\n  type: 'feature',\n  description: 'Logitech Scribe support',\n)\noption('plugin_logitech_tap',\n  type: 'feature',\n  description: 'Logitech Tap support',\n)\noption('plugin_mediatek_scaler',\n  type: 'feature',\n  description: 'Mediatek scaler support',\n)\noption('plugin_modem_manager',\n  type: 'feature',\n  description: 'ModemManager support',\n)\noption('plugin_msr',\n  type: 'feature',\n  description: 'MSR support',\n)\noption('plugin_mtd',\n  type: 'feature',\n  description: 'MTD support',\n)\noption('plugin_nitrokey',\n  type: 'feature',\n  description: 'Nitrokey support',\n)\noption('plugin_nvme',\n  type: 'feature',\n  description: 'NVMe support',\n)\noption('plugin_parade_lspcon',\n  type: 'feature',\n  description: 'Parade LSPCON support',\n)\noption('plugin_pixart_rf',\n  type: 'feature',\n  description: 'PixartRF support',\n)\noption('plugin_powerd',\n  type: 'feature',\n  description: 'support for powerd',\n)\noption('plugin_realtek_mst',\n  type: 'feature',\n  description: 'Realtek MST hub support',\n)\noption('plugin_redfish',\n  type: 'feature',\n  description: 'Redfish support',\n)\noption('plugin_scsi',\n  type: 'feature',\n  description: 'SCSI support',\n)\noption('plugin_synaptics_mst',\n  type: 'feature',\n  description: 'Synaptics MST hub support',\n)\noption('plugin_synaptics_rmi',\n  type: 'feature',\n  description: 'Synaptics RMI support',\n)\noption('plugin_tpm',\n  type: 'feature',\n  description: 'TPM support',\n)\noption('plugin_uefi_capsule',\n  type: 'feature',\n  description: 'UEFI capsule support',\n)\noption('plugin_uefi_capsule_splash',\n  type: 'boolean',\n  value: true,\n  description: 'enable UEFI capsule splash support',\n)\noption('plugin_uefi_pk',\n  type: 'feature',\n  description: 'UEFI PK support',\n)\noption('plugin_uf2',\n  type: 'feature',\n  description: 'support for UF2',\n)\noption('plugin_upower',\n  type: 'feature',\n  description: 'support for UPower',\n)\noption('plugin_vendor_example',\n  type: 'boolean',\n  value: false,\n  description: 'enable vendor example support',\n)\noption('polkit',\n  type: 'feature',\n  description: 'PolKit support in daemon',\n)\noption('python',\n  type: 'string',\n  description: 'the absolute path of the python3 binary',\n)\noption('qubes',\n  type: 'boolean',\n  value: false,\n  description: 'build packages for Qubes OS',\n)\noption('sqlite',\n  type: 'feature',\n  description: 'sqlite support',\n)\noption('static_analysis',\n  type: 'boolean',\n  value: false,\n  description: 'enable GCC static analysis support',\n)\noption('supported_build',\n  type: 'feature',\n  description: 'distribution package with upstream support',\n)\noption('systemd',\n  type: 'feature',\n  description: 'systemd support',\n)\noption('systemd_root_prefix',\n  type: 'string',\n  value: '',\n  description: 'Directory to base systemd’s installation directories on',\n)\noption('systemd_unit_user',\n  type: 'string',\n  value: 'fwupd-refresh',\n  description: 'User account to use for fwupd-refresh.service (empty for DynamicUser)',\n)\noption('systemd_syscall_filter',\n  type: 'boolean',\n  value: 'true',\n  description: 'Enable systemd syscall filter',\n)\noption('tests',\n  type: 'boolean',\n  value: true,\n  description: 'enable tests',\n)\noption('umockdev_tests',\n  type: 'feature',\n  description: 'umockdev tests',\n)\noption('vendor_ids_dir',\n  type: 'string',\n  value: '',\n  description: 'Directory for usb.ids, pci.ids etc.',\n)\noption('vendor_metadata',\n  type: 'boolean',\n  value: false,\n  description: 'install OS vendor provided metadata',\n)\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "policy",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}