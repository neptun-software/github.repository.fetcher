{
  "metadata": {
    "timestamp": 1736709975275,
    "page": 536,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coreboot/coreboot",
      "stars": 2261,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".checkpatch.conf",
          "type": "blob",
          "size": 1.1171875,
          "content": "# Override checkpatch's default max line length 100\n--max-line-length=96\n\n# Not Linux, so don't expect a Linux tree.\n--no-tree\n\n# Ignore aspects we don't follow here.\n--ignore C99_COMMENTS\n--ignore GLOBAL_INITIALISERS\n--ignore COMPARISON_TO_NULL\n--ignore INITIALISED_STATIC\n--ignore LINE_SPACING\n--ignore NEW_TYPEDEFS\n--ignore SPLIT_STRING\n--ignore BLOCK_COMMENT_STYLE\n--ignore AVOID_EXTERNS\n--ignore VOLATILE\n--ignore CONFIG_DESCRIPTION\n--ignore MISSING_SPACE\n--ignore CORRUPTED_PATCH\n--ignore SPDX_LICENSE_TAG\n--ignore UNDOCUMENTED_DT_STRING\n--ignore PRINTK_WITHOUT_KERN_LEVEL\n--ignore ASSIGN_IN_IF\n--ignore UNNECESSARY_ELSE\n--ignore GERRIT_CHANGE_ID\n\n# FILE_PATH_CHANGES seems to not be working correctly. It will\n# choke on added / deleted files even if the MAINTAINERS file\n# is touched.\n--ignore FILE_PATH_CHANGES\n\n# This one has a linux path hard coded, so it would choke on\n# some commits unnecessarily.\n--ignore EXECUTE_PERMISSIONS\n\n# Exclude vendorcode directories that don't follow coreboot's coding style.\n--exclude src/vendorcode/amd\n--exclude src/vendorcode/cavium\n--exclude src/vendorcode/intel\n--exclude src/vendorcode/mediatek\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 6.546875,
          "content": "# SPDX-License-Identifier: GPL-2.0-only\n#\n# clang-format configuration file. Intended for clang-format >= 16.\n#\n# For more information, see:\n#\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#   https://clang-format-configurator.site/\n#\n\n---\nLanguage:        Cpp\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: Left\nAlignConsecutiveAssignments:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  true\n  AlignCompound:   false\n  PadOperators:    true\nAlignConsecutiveBitFields:\n  Enabled:         true\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    true\nAlignConsecutiveDeclarations:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    true\nAlignConsecutiveMacros:\n  Enabled:         true\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    true\nAlignEscapedNewlines: Left\nAlignOperands:   Align\nAlignTrailingComments:\n  Kind:            Always\n  OverEmptyLines:  0\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortEnumsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\n\n# git grep '^#define [^[:space:]]*__.*[^[:space:]]*__attribute__' | grep -v \"vendorcode\\|payloads\\|util\" | sed \"s|.*:||;s|^#define \\([^[:space:]]*__[^([:space:]]*\\).*$|  - '\\1'|\" | LC_ALL=C sort -u\nAttributeMacros:\n  - '__aligned'\n  - '__always_inline'\n  - '__always_unused'\n  - '__cpu_driver'\n  - '__fallthrough'\n  - '__maybe_unused'\n  - '__must_check'\n  - '__noreturn'\n  - '__packed'\n  - '__pci_driver'\n  - '__printf'\n  - '__weak'\nBinPackArguments: true\nBinPackParameters: true\nBitFieldColonSpacing: Both\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: Never\n  AfterEnum:       false\n  AfterExternBlock: false\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakAfterAttributes: Never\nBreakAfterJavaFieldAnnotations: false\nBreakArrays:     false\nBreakBeforeBinaryOperators: None\nBreakBeforeConceptDeclarations: Always\nBreakBeforeBraces: Custom\nBreakBeforeInlineASMColon: OnlyMultiline\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializers: AfterColon\nBreakInheritanceList: AfterColon\nBreakStringLiterals: false\nColumnLimit:     96\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\n\n# git grep '^#define [^[:space:]]*for_each[^[:space:]]*(' | grep -v \"vendorcode\\|payloads\\|util\" | sed \"s|.*:||;s|^#define \\([^[:space:]]*for_each[^[:space:]]*\\)(.*$|  - '\\1'|\" | LC_ALL=C sort -u\nForEachMacros:\n  - 'list_for_each'\n\n# git grep -i '^#define \\+if[^[:space:]]*(' | grep -v \"vendorcode\\|payloads\\|util\" | sed \"s|.*:||;s|^#define \\([^[:space:]]*if[^[:space:]]*\\)(.*$|  - '\\1'|I\" | grep -v IFIX | LC_ALL=C sort -u\nIfMacros:\n  - 'IF_CHANNEL_POPULATED'\n  - 'IF_DIMM_POPULATED'\n  - 'IF_RANK_POPULATED'\n  - 'IfBit0'\nIncludeBlocks:   Preserve\nIncludeIsMainSourceRegex: ''\nIndentAccessModifiers: false\nIndentCaseBlocks: false\nIndentCaseLabels: false\nIndentExternBlock: AfterExternBlock\nIndentGotoLabels: false\nIndentPPDirectives: None\nIndentRequiresClause: true\nIndentWidth:     8\nIndentWrappedFunctionNames: false\nInsertBraces:    false\nInsertNewlineAtEOF: true\nInsertTrailingCommas: None\nIntegerLiteralSeparator:\n  Binary:          0\n  BinaryMinDigits: 0\n  Decimal:         0\n  DecimalMinDigits: 0\n  Hex:             0\n  HexMinDigits:    0\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nLambdaBodyIndentation: Signature\nLineEnding:      LF\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 8\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPackConstructorInitializers: BinPack\nPenaltyBreakAssignment: 10\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakString: 10\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 100\nPenaltyIndentedWhitespace: 0\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nPPIndentWidth:   -1\nQualifierAlignment: Left\nReferenceAlignment: Pointer\nReflowComments:  false\nRemoveBracesLLVM: false\nRemoveSemicolon: false\nRequiresClausePosition: OwnLine\nRequiresExpressionIndentation: OuterScope\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSortIncludes:    Never\nSortJavaStaticImport: Before\nSortUsingDeclarations: Never\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatementsExceptControlMacros\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: false\n  AfterFunctionDefinitionName: false\n  AfterFunctionDeclarationName: false\n  AfterIfMacros:   false\n  AfterOverloadedOperator: false\n  AfterRequiresInClause: false\n  AfterRequiresInExpression: false\n  BeforeNonEmptyParentheses: false\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  Never\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInLineCommentPrefix:\n  Minimum:         1\n  Maximum:         1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        c++17\nTabWidth:        8\nUseTab:          ForContinuationAndIndentation\n...\n\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.224609375,
          "content": "# EditorConfig: https://EditorConfig.org\n\nroot = true\n\n[*]\nindent_style = tab\ntab_width = 8\ncharset = utf-8\ninsert_final_newline = true\nend_of_line = lf\ntrim_trailing_whitespace = true\n\n[*.sh]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4619140625,
          "content": "junit.xml\nabuild*.xml\n.config\n.config.old\ndefconfig\n.coreboot-version\n.xcompile\n.ccwrap\nbuild/\ncoreboot-builds/\ncoreboot-builds*/\ngenerated/\n\nsite-local\n\n*.\\#\n*.a\n*.bin\n*.debug\n!Kconfig.debug\n*.elf\n*.fd\n*.o\n*.o.d\n*.out\n*.pyc\n*.sw[po]\n/*.rom\n.test\n.dependencies\n\n# Development friendly files\ntags\n.clang_complete\n.cache\ncompile_commands.json\n.vscode/\n\n# Cross-compile toolkits\nxgcc/\ntarballs/\n\n# editor backup files, temporary files, IDE project files\n*~\n*.kate-swp\n*.kdev4\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.18359375,
          "content": "[submodule \"3rdparty/blobs\"]\n\tpath = 3rdparty/blobs\n\turl = https://review.coreboot.org/blobs.git\n\tupdate = none\n\tignore = dirty\n[submodule \"util/nvidia-cbootimage\"]\n\tpath = util/nvidia/cbootimage\n\turl = https://review.coreboot.org/nvidia-cbootimage.git\n[submodule \"vboot\"]\n\tpath = 3rdparty/vboot\n\turl = https://review.coreboot.org/vboot.git\n\tbranch = main\n[submodule \"arm-trusted-firmware\"]\n\tpath = 3rdparty/arm-trusted-firmware\n\turl = https://review.coreboot.org/arm-trusted-firmware.git\n[submodule \"libhwbase\"]\n\tpath = 3rdparty/libhwbase\n\turl = https://review.coreboot.org/libhwbase.git\n[submodule \"libgfxinit\"]\n\tpath = 3rdparty/libgfxinit\n\turl = https://review.coreboot.org/libgfxinit.git\n[submodule \"3rdparty/fsp\"]\n\tpath = 3rdparty/fsp\n\turl = https://review.coreboot.org/fsp.git\n\tupdate = none\n\tignore = dirty\n[submodule \"opensbi\"]\n\tpath = 3rdparty/opensbi\n\turl = https://review.coreboot.org/opensbi.git\n[submodule \"intel-microcode\"]\n\tpath = 3rdparty/intel-microcode\n\turl = https://review.coreboot.org/intel-microcode.git\n\tupdate = none\n\tignore = dirty\n\tbranch = main\n[submodule \"3rdparty/ffs\"]\n\tpath = 3rdparty/ffs\n\turl = https://review.coreboot.org/ffs.git\n[submodule \"3rdparty/amd_blobs\"]\n\tpath = 3rdparty/amd_blobs\n\turl = https://review.coreboot.org/amd_blobs\n\tupdate = none\n\tignore = dirty\n[submodule \"3rdparty/cmocka\"]\n\tpath = 3rdparty/cmocka\n\turl = https://review.coreboot.org/cmocka.git\n\tupdate = none\n\tbranch = stable-1.1\n[submodule \"3rdparty/qc_blobs\"]\n\tpath = 3rdparty/qc_blobs\n\turl = https://review.coreboot.org/qc_blobs.git\n\tupdate = none\n\tignore = dirty\n[submodule \"3rdparty/intel-sec-tools\"]\n\tpath = 3rdparty/intel-sec-tools\n\turl = https://review.coreboot.org/9esec-security-tooling.git\n[submodule \"3rdparty/stm\"]\n\tpath = 3rdparty/stm\n\turl = https://review.coreboot.org/STM\n\tbranch = stmpe\n[submodule \"util/goswid\"]\n\tpath = util/goswid\n\turl = https://review.coreboot.org/goswid\n\tbranch = trunk\n[submodule \"src/vendorcode/amd/opensil/genoa_poc/opensil\"]\n\tpath = src/vendorcode/amd/opensil/genoa_poc/opensil\n\turl = https://review.coreboot.org/opensil_genoa_poc.git\n[submodule \"3rdparty/open-power-signing-utils\"]\n\tpath = 3rdparty/open-power-signing-utils\n\turl = https://review.coreboot.org/open-power-signing-utils.git\n"
        },
        {
          "name": ".gitreview",
          "type": "blob",
          "size": 0.0791015625,
          "content": "[gerrit]\nhost=review.coreboot.org\nport=29418\nproject=coreboot\ndefaultbranch=main\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 25.4814453125,
          "content": "# Map author and committer names and email addresses to canonical real names and\n# email addresses. https://git-scm.com/docs/gitmailmap\n#\n# Note that this is only needed in the case where someone has contributed\n# with multiple different email addresses or Names.\n#\n# Forms: Proper Name <commit@email.xx>\n#        Proper Name <proper@email.xx> <commit@email.xx>\n#        Proper Name <proper@email.xx> Commit Name <commit@email.xx>\n\n\nAamir Bohra <aamirbohra@gmail.com> <aamir.bohra@intel.com>\nAaron Durbin <adurbin@chromium.org>\nAaron Durbin <adurbin@chromium.org> <adurbin@adurbin.bld.corp.google.com>\nAaron Durbin <adurbin@chromium.org> <adurbin@google.com>\nAbhay Kumar <abhay.kumar@intel.com>\nAbhinav Hardikar <realdevmaster64@gmail.com> devmaster64 <devmaster64@gmail.com>\nAlex Levin <levinale@google.com> <levinale@chromium.org>\nAlex Miao <alex.miao@mediatek.corp-partner.google.com>\nAlexandru Gagniuc <mr.nuke.me@gmail.com> <alexandrux.gagniuc@intel.com>\nAlexandru Gagniuc <mr.nuke.me@gmail.com> mrnuke <mrnuke@nukelap.gtech>\nAmanda Huang <amanda_hwang@compal.corp-partner.google.com>\nAmol N Sukerkar <amol.n.sukerkar@intel.com>\nAndrea Barberio <barberio@fb.com> <insomniac@slackware.it>\nAndrey Petrov <anpetrov@fb.com> <andrey.petrov@intel.com>\nAndrey Pronin <apronin@chromium.org> <apronin@google.com>\nAndriy Gapon <avg@FreeBSD.org> <avg@icyb.net.ua>\nAnil Kumar <anil.kumar.k@intel.com> <anil.kumar.k@intel.corp-partner.google.com>\nAnish K. Patel <anishp@win-ent.com>\nAnton Kochkov <anton.kochkov@gmail.com> <a.kochkov@securitycode.ru>\nAntonello Dettori <dev@dettori.io> <dettori.an@gmail.com>\nAriel Fang <ariel_fang@wistron.corp-partner.google.com>\nArne Georg Gleditsch <arne.gleditsch@numascale.com> <arne.gleditsch@numscale.com>\nAsami Doi <d0iasm.pub@gmail.com> <doiasami1219@gmail.com>\nAshwin Kumar <ashk@codeaurora.org>\nAxel Holewa <mono@posteo.de> Mono <mono-for-coreboot@donderklumpen.de>\nAxel Holewa <mono@posteo.de> Mono <mono@posteo.de>\nBao Zheng <fishbaozi@gmail.com>\nBao Zheng <fishbaozi@gmail.com> <Zheng Bao zheng.bao@amd.com>\nBao Zheng <fishbaozi@gmail.com> <zheng.bao@amd.com>\nBayi Cheng <bayi.cheng@mediatek.com>\nBen Zhang <benzh@google.com> <benzh@chromium.org>\nBernhard M. Wiedermann <corebootbmw@lsmod.de>\nBill Xie <persmule@hardenedlinux.org> <persmule@gmail.com>\nBill Xie <persmule@hardenedlinux.org> Bill XIE <persmule@hardenedlinux.org>\nBingxun Shi <bingxunshi@gmail.com>\nBingxun Shi <bingxunshi@gmail.com> <bxshi@msik.com.cn>\nBrandon Breitenstein <brandon.breitenstein@intel.com> <brandon.breitenstein@intel.corp-partner.google.com>\nBruce Griffith <bruce.griffith@se-eng.com> <Bruce.Griffith@se-eng.com>\nBryant Ou <Bryant.Ou.Q@gmail.com>\nCarl-Daniel Hailfinger <c-d.hailfinger.devel.2006@gmx.net> <Carl-Daniel Hailfinger>\nCasper Chang<casper_chang@wistron.corp-partner.google.com> <casper.chang@bitland.corp-partner.google.com>\nCaveh Jalali <caveh@chromium.org> <caveh@google.com>\nCaveh Jalali <caveh@chromium.org> caveh jalali <caveh@chromium.org>\nCharles Marslett <charles@scarlettechnologies.com> <charles.marslett@silverbackltd.com>\nChee Soon Lew <chee.soon.lew@intel.com>\nCheng-Yi Chiang <cychiang@chromium.org> <cychiang@google.com>\nChris Ching <chris@ching.codes> <chingcodes@chromium.org>\nChris Ching <chris@ching.codes> <chingcodes@google.com>\nChris Wang <chris.wang@amd-corp-partner.google.com> <chriswang@ami.corp-partner.google.com>\nChris Wang <chris.wang@amd-corp-partner.google.com> Chris Wang <chris.wang@amd-corp-partner.google.com>\nChris Wang <chris.wang@amd-corp-partner.google.com> chris wang <chris.wang@amd.corp-partner.google.com>\nChris Wang <chris.wang@amd-corp-partner.google.com> Chris.Wang <chris.wang@amd.corp-partner.google.com>\nChris Zhou <chris_zhou@compal.corp-partner.google.com>\nChristian Ruppert <idl0r@qasl.de> <idl0r@gentoo.org>\nChun-Jie Chen <chun-jie.chen@mediatek.corp-partner.google.com>\nClay Daniels Jr <clay.daniels.jr@gmail.com>\nCole Nelson<colex.nelson@intel.com>\nCorey Osgood <corey.osgod@gmail.com> <corey_osgood@verizon.net>\nCorey Osgood <corey.osgod@gmail.com> <corey.osgood@gmail.com>\nCristian Măgherușan-Stanciu <cristi.magherusan@gmail.com>\nCristian Măgherușan-Stanciu <cristi.magherusan@gmail.com> Cristi Magherusan <cristi.magherusan@net.utcluj.ro>\nDa Lao <dalao@tutanota.com> dalao <dalao@tutanota.com>\nDaisuke Nojiri <dnojiri@chromium.org> dnojiri <dnojiri@chromium.org>\nDan Elkouby <streetwalkermc@gmail.com> <streetwalrus@codewalr.us>\nDaphne Jansen <dcjansen@chromium.org> Justin TerAvest <teravest@chromium.org>\nDaphne Jansen <dcjansen@chromium.org> Justin TerAvest <teravest@google.com>\nDave Parker <dparker@chromium.org>\nDavid Hendricks <davidhendricks@gmail.com> <david.hendricks@gmail.com>\nDavid Hendricks <davidhendricks@gmail.com> <dhendricks@fb.com>\nDavid Hendricks <davidhendricks@gmail.com> <dhendrix@chromium.org>\nDavid Hendricks <davidhendricks@gmail.com> <dhendrix@fb.com>\nDavid Hendricks <davidhendricks@gmail.com> <dhendrix@google.com>\nDavid Hendricks <davidhendricks@gmail.com> David W. Hendricks <dwh@lanl.gov>\nDavid Wu <david_wu@quantatw.com> <david_wu@quanta.corp-partner.google.com>\nDavid Wu <david_wu@quantatw.com> david <david_wu@quantatw.com>\nDawei Chien <dawei.chien@mediatek.com>\nDenis 'GNUtoo' Carikli <GNUtoo@cyberdimension.org> <GNUtoo@no-log.org>\nDerek Huang <derek.huang@intel.com> <derek.huang@intel.corp-partner.google.com>\nDmitry Ponamorev <dponamorev@gmail.com>\nDouglas Anderson <dianders@chromium.org>\nDuncan Laurie <dlaurie@chromium.org> <dlaurie@google.com>\nEd Swierk <eswierk@aristanetworks.com> <eswierk@arastra.com>\nEdward O'Callaghan <quasisec@google.com> <edward.ocallaghan@koparo.com>\nEdward O'Callaghan <quasisec@google.com> <eocallaghan@alterapraxis.com>\nEdward O'Callaghan <quasisec@google.com> <funfunctor@folklore1984.net>\nEdward O'Callaghan <quasisec@google.com> <quasisec@chromium.org>\nEric Biederman <ebiederm@xmission.com> <ebiederman@lnxi.com>\nEric Biederman <ebiederm@xmission.com> Eric W. Biederman <ebiederm@xmission.com>\nEugene Myers <edmyers@tycho.nsa.gov> <cedarhouse@comcast.net>\nEvgeny Zinoviev <me@ch1p.io> <me@ch1p.com>\nFelix Durairaj <felixx.durairaj@intel.com>\nFelix Held <felix-coreboot@felixheld.de> <felix-github@felixheld.de>\nFelix Held <felix-coreboot@felixheld.de> <felix.held@amd.corp-partner.google.com>\nFelix Singer <felixsinger@posteo.net> <felix.singer@9elements.com>\nFelix Singer <felixsinger@posteo.net> <felix.singer@secunet.com>\nFelix Singer <felixsinger@posteo.net> <migy@darmstadt.ccc.de>\nFrancois Toguo Fotso <francois.toguo.fotso@intel.com> Francois Toguo <francois.toguo.fotso@intel.com>\nFrank Chu <frank_chu@pegatron.corp-partner.google.com>\nFrank Chu <frank_chu@pegatron.corp-partner.google.com> Frank Chu <Frank_Chu@pegatron.corp-partner.google.com>\nFrank Chu <frank_chu@pegatron.corp-partner.google.com> FrankChu <Frank_Chu@pegatron.corp-partner.google.com>\nFrank Vibrans <efdesign98@gmail.com> efdesign98 <efdesign98@gmail.com>\nFrank Vibrans <efdesign98@gmail.com> Frank Vibrans <frank.vibrans@amd.com>\nFrank Vibrans <efdesign98@gmail.com> frank vibrans <frank.vibrans@scarletltd.com>\nFrank Vibrans <efdesign98@gmail.com> Frank Vibrans <frank.vibrans@se-eng.com>\nFrank Vibrans <efdesign98@gmail.com> Frank.Vibrans <frank.vibrans@amd.com>\nFurquan Shaikh <furquan@chromium.org> <furquan@google.com>\nG. Pangao <gtk_pangao@mediatek.com> <gtk_pangao@mediatek.corp-partner.google.com>\nGabe Black <gabeblack@chromium.org> <gabeblack@chromium.com>\nGabe Black <gabeblack@chromium.org> <gabeblack@google.com>\nGaggery Tsai <gaggery.tsai@intel.com>\nGeorg Wicherski <gwicherski@gmail.com> <gw@oxff.net>\nGomathi Kumar <gomathi.kumar@intel.com>\nGreg V <greg@unrelenting.technology>\nGreg Watson <gwatson@lanl.gov> <jarrah@users.sourceforge.net>\nHannah Williams <hannah.williams@dell.com> <hannah.williams@intel.com>\nHao Chou <hao_chou@pegatron.corp-partner.google.com>\nHaridhar Kalvala <haridhar.kalvala@intel.com> haridhar <haridhar.kalvala@intel.com>\nHarsha Priya <harshapriya.n@intel.com>\nHarsha Priya <harshapriya.n@intel.com> <harhapriya.n@intel.com>\nHarshit Sharma <harshitsharmajs@gmail.com> harshit <harshitsharmajs@gmail.com>\nHenry C Chen <henryc.chen@mediatek.com> henryc.chen <henryc.chen@mediatek.com>\nHimanshu Sahdev <sahdev.himan@gmail.com> <himanshusah@hcl.com>\nHimanshu Sahdev <sahdev.himan@gmail.com> Himanshu Sahdev aka CunningLearner <sahdev.himan@gmail.com>\nHsuan Ting Chen <roccochen@chromium.org> Hsuan-ting Chen <roccochen@google.com>\nHuang Lin <hl@rock-chips.com>\nHuayang Duan <huayang.duan@mediatek.com>\nHuki Huang <huki.huang@intel.com>\nIdwer Vollering <vidwer@gmail.com> <idwer_v@hotmail.com>\nIgor Bagnucki <bagnucki02@gmail.com> <igor.bagnucki@3mdeb.com>\nIndrek Kruusa <indrek.kruusa@artecdesign.ee>  <Indrek Kruusa>\nIvy Jian <ivy_jian@compal.com> <ivy_jian@compal.corp-partner.google.com>\nJacob Laska <jlaska91@gmail.com> <jlaska@xes-inc.com>\nJakub Czapiga <jacz@semihalf.com>\nJason Wang <Qingpei.Wang@amd.com> Jason WangQingpei.wang <Jason WangQingpei.wang@amd.com>\nJasonX Z Chen <jasonx.z.chen@intel.com>\nJens Kühnel <coreboot@jens.kuehnel.org> Jens Kuehnel <coreboot@jens.kuehnel.org>\nJens Rottmann <JRottmann@LiPPERTembedded.de> <JRottmann@LiPPERTEmbedded.de>\nJeremy Compostella  <jeremy.compostella@intel.com> <jeremy.compostella@gmail.com>\nJeremy Soller <jackpot51@gmail.com> <jeremy@system76.com>\nJiaxin Yu <jiaxin.yu@mediatek.com>\nJiazi Yang <Tomato_Yang@asus.com>\nJim Lai <jim.lai@intel.com>\nJingle Hsu <jingle_hsu@wiwynn.com>\nJinkun Hong <jinkun.hong@rock-chips.com>\nJoe Moore <awokd@danwin1210.me>\nJoe Pillow <joseph.a.pillow@gmail.com>\nJohanna Schander <coreboot@mimoja.de>\nJohn Zhao <john.zhao@intel.com>\nJonathan Kollasch <jakllsch@kollasch.net>\nJordan Crouse <jordan@cosmicpenguin.net>  <Jordan Crouse>\nJordan Crouse <jordan@cosmicpenguin.net> <jordan.crouse@amd.com>\nJosef Kellermann <Joseph.Kellermann@heitec.de> <seppk@arcor.de>\nJosef Kellermann <Joseph.Kellermann@heitec.de> Josef Kellermannseppk <Josef Kellermannseppk@arcor.de>\nJoseph Smith <joe@settoplinux.org> <joe@settoplinux.org Acked-by: Joseph Smith joe@settoplinux.org>\nJoseph Smith <joe@settoplinux.org> <joe@smittys.pointclark.net>\nJuergen Beisert <juergen@kreuzholzen.de> <juergen127@kreuzholzen.de>\nJulian Schroeder <julianmarcusschroeder@gmail.com> <julian.schroeder@amd.com>\nJulien Viard de Galbert <julien@vdg.name> <jviarddegalbert@online.net>\nJustin Wu <amersel@runbox.me>\nKaiyen Chang <kaiyen.chang@intel.com> <kaiyen.chang@intel.corp-partner.google.com>\nKane Chen <kane.chen@intel.com> <kane_chen@pegatron.corp-partner.google.com>\nKane Chen <kane.chen@intel.com> <kane.chen@intel.corp-partner.google.com>\nKane Chen <kane.chen@intel.com> Kane Chenffd <kane_chen@pegatron.corp-partner.google.com>\nKane Chen <kane.chen@intel.com> kane_chen <kane_chen@pegatron.corp-partner.google.com>\nKane Chen <kane.chen@intel.com> YanRu Chen <kane_chen@pegatron.corp-partner.google.com>\nKane Chen <kane.chen@intel.com> YenLu Chen <kane_chen@pegatron.corp-partner.google.com>\nKarthikeyan Ramasubramanian <kramasub@google.com> <kramasub@chromium.org>\nKatie Roberts-Hoffman <katierh@chromium.org>  <katierh@google.com>\nKerry She <kerry.she@amd.com> <Kerry.she@amd.com>\nKerry Sheh <shekairui@gmail.com>\nKevin Chang <kevin.chang@lcfc.corp-partner.google.com>\nKevin Chiu <kevin.chiu.17802@gmail.com> <kevin.chiu@quanta.corp-partner.google.com>\nKevin Chiu <kevin.chiu.17802@gmail.com> <kevin.chiu@quantatw.com>\nKevin Chiu <kevin.chiu.17802@gmail.com> <Kevin.Chiu@quantatw.com>\nKevin Paul Herbert <kph@platinasystems.com> <kevin@trippers.org>\nKevin Paul Herbert <kph@platinasystems.com> <kph@meraki.net>\nKirk Wang <kirk_wang@pegatron.corp-partner.google.com> kirk_wang <kirk_wang@pegatron.corp-partner.google.com>\nKonstantin Aladyshev <aladyshev22@gmail.com> <aladyshev@nicevt.ru>\nKyösti Mälkki <kyosti.malkki@gmail.com>\nKyösti Mälkki <kyosti.malkki@gmail.com> <kyosti.malkki@3mdeb.com>\nLean Sheng Tan <sheng.tan@9elements.com> <lean.sheng.tan@intel.com>\nLee Leahy <lpleahyjr@gmail.com> <leroy.p.leahy@intel.com>\nLi Cheng Sooi <li.cheng.sooi@intel.com>\nLijian Zhao <lijian.zhao@intel.com>\nLin Huang <hl@rock-chips.com>\nMaciej Matuszczyk <maccraft123mc@gmail.com>\nMaggie Li <maggie.li@amd.com> <Maggie.li@amd.com>\nManideep Kurumella <mkurumel@qualcomm.corp-partner.google.com> <mkurumel@codeaurora.org>\nMarc Jones <marc@marcjonesconsulting.com> <marc.jones@amd.com>\nMarc Jones <marc@marcjonesconsulting.com> <marc.jones@gmail.com>\nMarc Jones <marc@marcjonesconsulting.com> <marc.jones@scarletltd.com>\nMarc Jones <marc@marcjonesconsulting.com> <marc.jones@se-eng.com>\nMarc Jones <marc@marcjonesconsulting.com> <marcj.jones@amd.com>\nMarc Jones <marc@marcjonesconsulting.com> <marcj303@gmail.com>\nMarc Jones <marc@marcjonesconsulting.com> <marcj303@yahoo.com>\nMarc Jones <marc@marcjonesconsulting.com> <marcjones@sysproconsulting.com>\nMarc Jones <marc@marcjonesconsulting.com> Marc Jones (marc.jones <Marc Jones (marc.jones@amd.com)>\nMarc Jones <marc@marcjonesconsulting.com> Marc Jones(marc.jones <Marc Jones(marc.jones@amd.com)>\nMarcello Sylvester Bauer <sylv@sylv.io>\nMarcello Sylvester Bauer <sylv@sylv.io> <info@marcellobauer.com>\nMarcello Sylvester Bauer <sylv@sylv.io> <sylvblck@sylv.io>\nMarco Chen <marcochen@google.com> <marcochen@chromium.org>\nMariusz Szafrański <mariuszx.szafranski@intel.com> Mariusz Szafranski <mariuszx.szafranski@intel.com>\nMarshall Dawson <marshalldawson3rd@gmail.com> <marshall.dawson@amd.corp-partner.google.com>\nMarshall Dawson <marshalldawson3rd@gmail.com> <marshall.dawson@scarletltd.com>\nMart Raudsepp <leio@gentoo.org> <mart.raudsepp@artecdesign.ee>\nMartin Kepplinger <martink@posteo.de> <martin.kepplinger@puri.sm>\nMartin Roth <gaumless@gmail.com> <martin.roth@se-eng.com>\nMartin Roth <gaumless@gmail.com> <martin@coreboot.org>\nMartin Roth <gaumless@gmail.com> <martinr@coreboot.org>\nMartin Roth <gaumless@gmail.com> <martinroth@chromium.org>\nMartin Roth <gaumless@gmail.com> <martinroth@google.com>\nMartin Roth <gaumless@gmail.com> Martin Roth <martin@se-eng.com>\nMarx Wang <marx.wang@intel.com>\nMathias Krause <minipli@googlemail.com> <mathias.krause@secunet.com>\nMathias Krause <minipli@googlemail.com> <Mathias.Krause@secunet.com>\nMats Erik Andersson <mats.andersson@gisladisker.org> <mats.andersson@gisladisker.se>\nMatt DeVillier <matt.devillier@gmail.com> <matt.devillier@puri.sm>\nMatt Papageorge <matthewpapa07@gmail.com> <matt.papageorge@amd.corp-partner.google.com>\nMatt Ziegelbaum <ziegs@google.com> <ziegs@chromium.org>\nMaulik V Vaghela <maulik.v.vaghela@intel.com>\nMaulik V Vaghela <maulik.v.vaghela@intel.com> <maulik.v.vaghela@intel.corp-partner.google.com>\nMax Blau <tripleshiftone@gmail.com> Bluemax <1403092+BlueMax@users.noreply.github.com>\nMaxim Polyakov <max.senia.poliak@gmail.com> <m.poliakov@yahoo.com>\nMengqi Zhang <Mengqi.Zhang@mediatek.com> mengqi.zhang <mengqi.zhang@mediatek.com>\nMichael Niewöhner <foss@mniewoehner.de> <michael.niewoehner@8com.de>\nMichael Xie <Michael.Xie@amd.com> <Michael Xie Michael.Xie@amd.com>\nMichele Guerini Rocco <rnhmjoj@inventati.org>\nMike Banon <mikebdp2@gmail.com> <mike.banon@3mdeb.com>\nMike Hsieh <Mike_Hsieh@wistron.com> <mike_hsieh@wistron.corp-partner.google.com>\nMike Loptien <loptienm@gmail.com> <mike.loptien@se-eng.com>\nMondrian Nuessle <nuessle@uni-hd.de>\nMondrian Nuessle <nuessle@uni-hd.de> <nuessle@uni-mannheim.de>\nMotiejus Jakštys <desired.mta@gmail.com>\nMyles Watson <mylesgw@gmail.com>  <myles@pel.cs.byu.edu>\nNancy Lin <nancy.lin@mediatek.com>\nNaresh Solanki <naresh.solanki@intel.com>\nNaresh Solanki <naresh.solanki@intel.com> <Naresh.Solanki@intel.com>\nNaveen Manohar <naveen.m@intel.com>\nNaveen Manohar <naveen.m@intel.com>\nNeil Chen <neilc@nvidia.com> <neilc%nvidia.com@gtempaccount.com>\nNick Chen <nick_xr_chen@wistron.corp-partner.google.com>\nNick Vaccaro <nvaccaro@google.com> <nvaccaro@chromium.org>\nNicky Sielicki <nlsielicki@wisc.edu>\nNico Huber <nico.h@gmx.de> <nico.huber@secunet.com>\nNicolas Boichat <drinkcat@chromium.org> <drinkcat@google.com>\nNicolas Reinecke <nr@das-labor.org>\nNils Jacobs <njacobs8@adsltotaal.nl> <njacobs8@hetnet.nl>\nNina Wu <nina-cm.wu@mediatek.com> <nina-cm.wu@mediatek.corp-partner.google.com>\nOskar Enoksson <enok@lysator.liu.se>\nOskar Enoksson <enok@lysator.liu.se> <oskeno@foi.se>\nPablo Moyano <42.pablo.ms@gmail.com> p4block <p4block@users.noreply.github.com>\nPatrick Georgi <patrick@coreboot.org> <Patrick Georgi patrick.georgi@coresystems.de>\nPatrick Georgi <patrick@coreboot.org> <Patrick Georgi patrick@georgi-clan.de>\nPatrick Georgi <patrick@coreboot.org> <patrick.georgi@coresystems.de>\nPatrick Georgi <patrick@coreboot.org> <patrick.georgi@secunet.com>\nPatrick Georgi <patrick@coreboot.org> <Patrick.Georgi@secunet.com>\nPatrick Georgi <patrick@coreboot.org> <patrick@georgi-clan.de>\nPatrick Georgi <patrick@coreboot.org> <patrick@georgi.software>\nPatrick Georgi <patrick@coreboot.org> Patrick Georgi <pgeorgi@chromium.org>\nPatrick Georgi <patrick@coreboot.org> Patrick Georgi <pgeorgi@google.com>\nPatrick Rudolph  <siro@das-labor.org> <patrick.rudolph@9elements.com>\nPaul Fagerburg <pfagerburg@chromium.org> <pfagerburg@google.com>\nPaul Kocialkowski <contact@paulk.fr>\nPaul Ma <magf@bitland.com.cn> <magf@bitland.corp-partner.google.com>\nPaul Ma <magf@bitland.com.cn> Magf - <magf@bitland.corp-partner.google.com>\nPaul Menzel <pmenzel@molgen.mpg.de> <paulepanter@mailbox.org>\nPaul Menzel <pmenzel@molgen.mpg.de> <paulepanter@users.sourceforge.net>\nPeichao Wang <peichao.wang@bitland.corp-partner.google.com>\nPeichao Wang <peichao.wang@bitland.corp-partner.google.com>\nPhilip Chen <philipchen@google.com>\nPhilip Chen <philipchen@google.com> <philipchen@chromium.org>\nPhilipp Deppenwiese <zaolin.daisuki@gmail.com>\nPhilipp Deppenwiese <zaolin.daisuki@gmail.com> <philipp.deppenwiese@9elements.com>\nPhilipp Deppenwiese <zaolin.daisuki@gmail.com> <zaolin@das-labor.org>\nPing-chung Chen <ping-chung.chen@intel.com>\nPing-chung Chen <ping-chung.chen@intel.com>\nPiotr Kleinschmidt <piotr.kleinschmidt@3mdeb.com> <piotr.kleins@gmail.com>\nPiotr Szymaniak <szarpaj@grubelek.pl>\nPo Xu <jg_poxu@mediatek.com>\nPo Xu <jg_poxu@mediatek.com> <jg_poxu@mediatek.corp-partner.google.com>\nPraveen Hodagatta Pranesh <praveenx.hodagatta.pranesh@intel.com>\nPreetham Chandrian <preetham.chandrian@intel.com>\nPuthikorn Voravootivat <puthik@chromium.org> <puthik@google.com>\nQingPei Wang <wangqingpei@gmail.com>\nQuan Tran <qeed.quan@gmail.com>\nRasheed Hsueh <rasheed.hsueh@lcfc.corp-partner.google.com>\nRaul Rangel <rrangel@chromium.org>\nRavi Kumar Bokka <rbokka@codeaurora.org>\nRavindra <ravindra@intel.com>\nRavindra <ravindra@intel.com> Ravindra N <ravindra@intel.corp-partner.google.com>\nRavishankar Sarawadi <ravishankar.sarawadi@intel.com>\nRaymond Chung <raymondchung@ami.corp-partner.google.com>\nRaymond Danks <raymonddanks@gmail.com> <ray.danks@se-eng.com>\nReka Norman <rekanorman@google.com> <rekanorman@chromium.org>\nRen Kuo <ren.kuo@quantatw.com>\nRen Kuo <ren.kuo@quantatw.com> <ren.kuo@quanta.corp-partner.google.com>\nRex-BC Chen <rex-bc.chen@mediatek.com> <rex-bc.chen@mediatek.corp-partner.google.com>\nRicardo Ribalda <ribalda@chromium.org> <ricardo.ribalda@gmail.com>\nRichard Spiegel <richard.spiegel@silverbackltd.com> <richard.spiegel@amd.corp-partner.google.com>\nRishavnath Satapathy <rishavnath.satapathy@intel.com>\nRitul Guru <ritul.bits@gmail.com>\nRizwan Qureshi <rizwan.qureshi@intel.com> <rizwan.qureshi@intel.corp-partner.google.com>\nRobbie Zhang <robbie.zhang@intel.com>\nRobert Chen <robert.chen@quanta.corp-partner.google.com>\nRobert Chen <robert.chen@quanta.corp-partner.google.com> = <robert.chen@quanta.corp-partner.google.com>\nRoger Pau Monne <roger.pau@citrix.com>\nRoman Kononov <kononov@dls.net> <kononov195-lbl@yahoo.com>\nRon Minnich <rminnich@gmail.com>\nRon Minnich <rminnich@gmail.com> <Ron Minnich>\nRon Minnich <rminnich@gmail.com> <Ronald G. Minnich rminnich@gmail.com>\nRon Minnich <rminnich@gmail.com> Ronald G. Minnich <minnich@google.com>\nRon Minnich <rminnich@gmail.com> Ronald G. Minnich <rminnich@chromium.org>\nRon Minnich <rminnich@gmail.com> Ronald G. Minnich <rminnich@google.com>\nRon Minnich <rminnich@gmail.com> Ronald G. Minnich <rminnich@lanl.gov>\nRon Minnich <rminnich@gmail.com> ronald g. minnich <ronald g. minnich>\nRon Minnich <rminnich@gmail.com> Ronald G. Minnich <Ronald G. Minnich>\nRonak Kanabar <ronak.kanabar@intel.com>\nRudolf Marek <r.marek@assembler.cz> <r.marek@asssembler.cz>\nRyan Chuang <ryan.chuang@mediatek.com> <ryan.chuang@mediatek.corp-partner.google.com>\nSanthosh Janardhana Hassan <sahassan@google.com>\nScott Chao <scott_chao@wistron.corp-partner.google.com> <scott.chao@bitland.corp-partner.google.com>\nScott Duplichan <scott@notabs.org> <sc...@notabs.org>\nScott Tsai <AT>\nSebastian \"Swift Geek\" Grzywna <swiftgeek@gmail.com>\nSelma Bensaid <selma.bensaid@intel.com>\nSeunghwan Kim <sh_.kim@samsung.com>\nSeunghwan Kim <sh_.kim@samsung.com> <sh_.kim@samsung.corp-partner.google.com>\nSeunghwan Kim <sh_.kim@samsung.com> sh.kim <sh_.kim@samsung.corp-partner.google.com>\nShawn Chang <citypw@gmail.com>\nShawn Nematbakhsh <shawnn@google.com> <shawnn@chromium.org>\nShelley Chen <shchen@google.com> <shchen@chromium.org>\nSheng-Liang Pan <Sheng-Liang.Pan@quantatw.com> <sheng-liang.pan@quanta.corp-partner.google.com>\nShreesh Chhabbi <shreesh.chhabbi@intel.com> <shreesh.chhabbi@intel.corp-partner.google.com>\nShunqian Zheng <zhengsq@rock-chips.com>\nSiyuan Wang <wangsiyuanbuaa@gmail.com>\nSowmya <v.sowmya@intel.com>\nSridhar Siricilla <sridhar.siricilla@intel.com>\nSridhar Siricilla <sridhar.siricilla@intel.com> <sridhar.siricilla@intel.corp-partner.google.com>\nSrinidhi Kaushik <srinidhi.n.kaushik@intel.com>\nStanley Wu <stanley1.wu@lcfc.corp-partner.google.com>\nStefan Ott <stefan@ott.net> <coreboot@desire.ch>\nStefan Reinauer <stepan@coreboot.org> <reinauer@chromium.org>\nStefan Reinauer <stepan@coreboot.org> <reinauer@google.com>\nStefan Reinauer <stepan@coreboot.org> <Stefan Reinauerstepan@coresystems.de>\nStefan Reinauer <stepan@coreboot.org> <stefan.reinauer@coreboot.org>\nStefan Reinauer <stepan@coreboot.org> <stepan@coresystems.de>\nStefan Reinauer <stepan@coreboot.org> <stepan@openbios.org>\nStephan Guilloux <stephan.guilloux@free.fr> <mailto:stephan.guilloux@free.fr>\nSubrata Banik <subratabanik@google.com> <subi.banik@gmail.com>\nSubrata Banik <subratabanik@google.com> <subrata.banik@intel.com>\nSubrata Banik <subratabanik@google.com> <subrata.banik@intel.com>\nSudheer Kumar Amrabadi <samrab@codeaurora.org>\nSumeet Pawnikar <sumeet.r.pawnikar@intel.com>\nSunwei Li <lisunwei@huaqin.corp-partner.google.com>\nSusendra Selvaraj <susendra.selvaraj@intel.com>\nSylvain \"ythier\" Hitier <sylvain.hitier@gmail.com>\nT Michael Turney <mturney@codeaurora.org> mturney mturney <quic_mturney@quicinc.com>\nT Michael Turney <mturney@codeaurora.org> T Michael Turney <quic_mturney@quicinc.com>\nT.H. Lin <T.H_Lin@quantatw.com> <t.h_lin@quanta.corp-partner.google.com>\nT.H. Lin <T.H_Lin@quantatw.com> T.H.Lin <T.H_Lin@quantatw.com>\nTaniya Das <quic_tdas@quicinc.com> <tdas@codeaurora.org>\nTao Xia <xiatao5@huaqin.corp-partner.google.com>\nThejaswani Putta  <thejaswani.putta@intel.com> <thejaswani.putta@intel.corp-partner.google.com>\nThejaswani Putta <thejaswani.putta@intel.com>\nThejaswani Putta <thejaswani.putta@intel.com> Thejaswani Puta thejaswani.putta@intel.com <thejaswani.putta@intel.com>\nThomas Heijligen <thomas.heijligen@secunet.com> <src@posteo.de>\nTim Chen <Tim-Chen@quantatw.com> <tim-chen@quanta.corp-partner.google.com>\nTim Chu <Tim.Chu@quantatw.com>\nTim Wawrzynczak <twawrzynczak@chromium.org> <twawrzynczak@google.com>\nTimothy Pearson <tpearson@raptorengineering.com> <tpearson@raptorengineeringinc.com>\nTinghan Shen <tinghan.shen@mediatek.com>\nTobias Diedrich <ranma+coreboot@tdiedrich.de> <ranma+openocd@tdiedrich.de>\nTracy Wu <tracy.wu@intel.com> <tracy.wu@intel.corp-partner.google.com>\nTristan Corrick <tristan@corrick.kiwi> <tristancorrick86@gmail.com>\nTyler Wang <tyler.wang@quanta.corp-partner.google.com> <Tyler.Wang@quanta.corp-partner.google.com>\nUsha P <usha.p@intel.com> <usha.p@intel.corp-partner.google.com>\nV Sujith Kumar Reddy <vsujithk@codeaurora.org>\nVadim Bendebury <vbendeb@chromium.org> <vbendeb@google.com>\nVaibhav Shankar <vaibhav.shankar@intel.com>\nVan Chen <van_chen@compal.corp-partner.google.com>\nVarshit Pandya <varshit.b.pandya@intel.com>\nVarshit Pandya <varshit.b.pandya@intel.com> Varshit B Pandya <varshit.b.pandya@intel.com>\nVarun Joshi <varun.joshi@intel.com> <varun.joshi@intel.corp-partner.google.com>\nVincent Lim <vincent.lim@amd.com>  <Vincent Lim vincent.lim@amd.com>\nVladimir Serbinenko <phcoder@gmail.com>\nWayne3 Wang <wayne3_wang@pegatron.corp-partner.google.com> <Wayne3_Wang@pegatron.corp-partner.google.com>\nWilliam Wu <wulf@rock-chips.com>\nWim Vervoorn <wvervoorn@eltan.com>\nWisley Chen <wisley.chen@quantatw.com>\nWisley Chen <wisley.chen@quantatw.com> <wisley.chen@quanta.corp-partner.google.com>\nXi Chen <xixi.chen@mediatek.com> <xixi.chen@mediatek.corp-partner.google.com>\nXiang Wang <merle@hardenedlinux.org> <wxjstz@126.com>\nXingyu Wu <wuxy@bitland.corp-partner.google.com>\nXuxin Xiong <xuxinxiong@huaqin.corp-partner.google.com>\nYang A Fang <yang.a.fang@intel.com>\nYinghai Lu <yinghailu@gmail.com> <yinghai.lu at amd.com>\nYinghai Lu <yinghailu@gmail.com> <yinghai.lu@amd.com>\nYinghai Lu <yinghailu@gmail.com> <yinghai@kernel.org>\nYongkun Yu <yuyongkun@huaqin.corp-partner.google.com>\nYongqiang Niu <yongqiang.niu@mediatek.com>\nYouness Alaoui <snifikino@gmail.com> <kakaroto@kakaroto.homelinux.net>\nYouness Alaoui <snifikino@gmail.com> <youness.alaoui@puri.sm>\nYu-Hsuan Hsu <yuhsuan@google.com>\nYu-Hsuan Hsu <yuhsuan@google.com> <yuhsuan@chromium.org>\nYu-Ping Wu <yupingso@google.com> <yupingso@chromium.org>\nYuanlidingm <yuanliding@huaqin.corp-partner.google.com>\nYuchen Huang <yuchen.huang@mediatek.com> <yuchen.huang@mediatek.corp-partner.google.com>\nYuji Sasaki <sasakiy@chromium.org> <sasakiy@google.com>\nZanxi Chen <chenzanxi@huaqin.corp-partner.google.com>\nZhi Li <lizhi7@huaqin.corp-partner.google.com>\nZhongze Hu <frankhu@chromium.org> <frankhu@google.com>\nZhuo-Hao Lee <zhuo-hao.lee@intel.com>\nZhuohao Lee <zhuohao@chromium.org> <zhuohao@google.com>\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 11.7626953125,
          "content": "# This is the list of coreboot authors for copyright purposes.\n#\n# This does not necessarily list everyone who has contributed code, since in\n# some cases, their employer may be the copyright holder.  To see the full list\n# of contributors, and their email addresses, see the revision history in source\n# control.\n# Run the below commands in the coreboot repo for additional information.\n# To see a list of contributors: git log --pretty=format:%an | sort | uniq\n# For patches adding or removing a name: git log -i -S \"NAME\" --source --all\n\n3mdeb Embedded Systems Consulting\n9elements Agency GmbH\nAamir Bohra\nAaron Durbin\nAbe Levkoy\nAbel Briggs\nAbhinav Hardikar\nAdaCore\nAdam Liu\nAdam Mills\nAdvanced Computing Lab, LANL\nAdvanced Micro Devices, Inc.\nAG Electronics Ltd.\nAhamed Husni\nAkshu Agrawal\nAl Hirani\nAlan Huang\nAlanKY Lee\nAlec Wang\nAlex James\nAlex Levin\nAlex Miao\nAlex Thiessen\nAlex Züpke\nAlex1 Kao\nAlexander Couzens\nAlexander Goncharov\nAlexandru Gagniuc\nAlexey Buyanov\nAlexey Vazhnov\nAlice Sell\nAlicja Michalska\nAllen-KH Cheng\nAlper Nebi Yasak\nAmanda Hwang\nAmerican Megatrends International, LLC\nAmersel\nAmit Caleechurn\nAnalog Devices Inc.\nAnalogix Semiconductor\nAnand Mistry\nAnand Vaikar\nAndre Heider\nAndrew McRae\nAndrew SH Cheng\nAndrey Pronin\nAndriy Gapon\nAndy Fleming\nAndy Pont\nAndy-ld Lu\nAngel Pons\nAnil Kumar K\nAnna Karaś\nAnnie Chen\nAnton Kochkov\nAo Zhong\nAppukuttan V K\nArashk Mahshidfar\nArec Kao\nAriel Fang\nARM Limited and Contributors\nArthur Heymans\nAsami Doi\nAseda Aboagye\nAshish Kumar Mishra\nAshqti\nASPEED Technology Inc.\nAtheros Corporation\nAtmel Corporation\nBalaji Manigandan\nBalázs Vinarz\nBAP - Bruhnspace Advanced Projects\nBaruch Siach\nBen Chuang\nBen Kao\nBen McMillen\nBen Zhang\nBenjamin Doron\nBernardo Perez Priego\nBhanu Prakash Maiya\nBill Xie\nBin Meng\nBitland Tech Inc.\nBob Moragues\nBora Guvendik\nBoris Barbulovski\nBoris Mittelberg\nBrandon Breitenstein\nBrandon Weeks\nBrian Norris\nBryant Ou\nCarl-Daniel Hailfinger\nCasper Chang\nCaveh Jalali\nCavium Inc.\nChao Gui\nChen-Tsung Hsieh\nChen. Gang C\nChia-Ling Hou\nChien-Chih Tseng\nChris Wang\nChristian Gmeiner\nChristian Walter\nChristoph Grenz\nChristopher Meis\nChuangwei Technology Co., Ltd\nChun-Jie Chen\nCirrus Logic, Inc.\nCK HU\nClay Daniels\nCliff Huang\nCode Aurora Forum\nCompal Electronics, Inc.\nCong Yang\nCoolStar\ncoresystems GmbH\nCorey Osgood\nCurt Brune\nCurtis Chen\nCustom Ideas\nCyberus Technology GmbH\nDa Lao\nDaisuke Nojiri\nDamien Zammit\nDan Callaghan\nDan Campbell\nDaniel Campello\nDaniel Gröber\nDaniel Kang\nDaniel Maslowski\nDaniel Peng\nDaniel Rosa Franzini\nDave Airlie\nDavid Brownell\nDavid Greenman\nDavid Hendricks\nDavid Lin\nDavid Milosevic\nDavid Mosberger-Tang\nDavid Mueller\nDavid S. Peterson\nDavid Wu\nDawei Chien\nDeepika Punyamurtula\nDeepti Deshatty\nDenis 'GNUtoo' Carikli\nDenis Dowling\nDENX Software Engineering\nDeomid 'rojer' Ryabkov\nDerek Basehore\nDerek Huang\nDerek Waldner\nDigital Design Corporation\nDinesh Gehlot\nDivya S Sasidharan\nDmitry Ponamorev\nDmitry Torokhov\nDMP Electronics Inc.\nDominik Behr\nDonghwa Lee\nDrew Eckhardt\nDtrain Hsu\nDuan Huayang\nDun Tan\nDuncan Laurie\nDynon Avionics\nEd Sharma\nEddy Lu\nEdward Hill\nEdward O'Callaghan\nEdward-JW Yang\nEgbert Eich\nElias Souza\nEloy Degen\nELSOFT AG\nEltan B.V\nEltan B.V.\nElyes Haouas\nEran Mitrani\nEren Peng\nEric Biederman\nEric Lai\nEric Peers\nEricKY Cheng\nEricR Lai\nErik van den Bogaert\nEswar Nallusamy\nEthan Tsao\nEugene Myers\nEvan Green\nEvgeny Zinoviev\nFabian Groffen\nFabian Kunkel\nFabian Meyer\nFabio Aiuto\nFabrice Bellard\nFacebook, Inc.\nFei Yan\nFelix Friedlander\nFelix Held\nFelix Singer\nFengquan Chen\nFilip Lewiński\nFlora Fu\nFlorian Laufenböck\nFrancois Toguo Fotso\nFrank Chu\nFrank Wu\nFranklin Lin\nFrans Hendriks\nFred Reitberger\nFrederic Potter\nFree Software Foundation, Inc.\nFreescale Semiconductor, Inc.\nFurquan Shaikh\nGaggery Tsai\nGang C Chen\nGarmin Chang\nGary Jennejohn\nGeorge Trudeau\nGerald Van Baren\nGerd Hoffmann\nGergely Kiss\nGoogle LLC\nGreg Watson\nGrzegorz Bernacki\nGuennadi Liakhovetski\nGuodong Liu\nGwendal Grignou\nHal Martin\nHao Chou\nHao Wang\nHardenedLinux\nHarsha B R\nHarshit Sharma\nHenry C Chen\nHerbert Wu\nHewlett Packard Enterprise Development LP\nHewlett-Packard Development Company, L.P.\nHimanshu Sahdev\nHousong Zhang\nHsiao Chien Sung\nHsin-hsiung wang\nHsin-Te Yuan\nHsuan Ting Chen\nHuaqin Technology Co., Ltd\nHuaqin Telecom Inc.\nHui Liu\nHuijuan Xie\nHung-Te Lin\nIan Douglas Scott\nIan Feng\nIBM Corporation\nIdwer Vollering\nIgor Bagnucki\nIgor Pavlov\nIkjoon Jang\nImagination Technologies\nInfineon Technologies\nInKi Dae\nINSPUR Co., Ltd\nIntel Corporation\nInventec Corp\nIru Cai\nIsaac Lee\nIsaku Yamahata\nIvan Chen\nIvan Vatlin\nIvy Jian\nJack Rosenthal\nJacob Garber\nJairaj Arava\nJakub Czapiga\nJames Chao\nJames Lo\nJames Ye\nJamie Chen\nJamie Ryu\nJan Dabros\nJan Samek\nJan Tatje\nJason Glenesk\nJason Nein\nJason V Le\nJason Z Chen\nJason Zhao\njason-ch chen\nJason-jh Lin\nJay Patel\nJean Lucas\nJeff Chase\nJeff Daly\nJeff Li\nJérémy Compostella\nJeremy Soller\nJes Klinke\nJesper Lin\nJessy Jiang\nJett Rink\nJg Daolongzhu\nJian Tong\nJianeng Ceng\nJianjun Wang\nJim Lai\nJimmy Su\nJincheng Li\nJingle Hsu\nJitao Shi\nJoe Pillow\nJoe Tessler\nJoel Kitching\nJoel Linn\nJoey Peng\nJohanna Schander\nJohn Su\nJohn Zhao\nJohnny Li\nJohnny Lin\njohnson wang\nJon Murphy\nJonas 'Sortie' Termansen\nJonas Loeffelholz\nJonathan A. Kollasch\nJonathan Neuschäfer\nJonathan Zhang\nJonathon Hall\nJordan Crouse\nJörg Mische\nJoseph Smith\nJosie Nordrum\nJuan José García-Castro Crespo\nJulia Tsai\nJulian Schroeder\nJulian Stecklina\nJulien Viard de Galbert\nJulius Werner\nKacper Stojek\nKaiyen Chang\nKane Chen\nKangheui Won\nKapil Porwal\nKarol Zmyslowski\nKarthik Ramasubramanian\nKei Hiroyoshi\nKeith Hui\nKeith Packard\nKenneth Chan\nKevin Chang\nKevin Cheng\nKevin Chiu\nKevin Chowski\nKevin Cody-Little\nKevin Keijzer\nKevin O'Connor\nKevin3 Yang\nkewei xu\nKilari Raasi\nKirk Wang\nKonrad Adamczyk\nKontron Europe GmbH\nKornel Dulęba\nKrishna P Bhat D\nKrystian Hebel\nKshitij\nKshitiz Godara\nKulkarni. Srinivas\nKun Liu\nKyle Lin\nKyösti Mälkki\nLance Zhao\nLawrence Chang\nLeah Rowe\nLean Sheng Tan\nLei Wen\nLennart Eichhorn\nLenovo Group Ltd\nLeo Chou\nLi-Ta Lo\nLi1 Feng\nLiam Flaherty\nLibra Li\nLibretrend LDA\nLijian Zhao\nLiju-Clr Chen\nLinaro Limited\nlinear\nLinus Torvalds\nLinux Networx, Inc.\nLiPPERT ADLINK Technology GmbH\nLiya Li\nLubomir Rintel\nLuc Verhaegen\nLucas Chen\nMac Chiang\nMaciej Matuszczyk\nMaciej Pijanowski\nMacpaul Lin\nMadhusudanarao Amara\nMagf\nMalik Hsu\nMandy Liu\nManoj Gupta\nMarc Bertens\nMarc Jones\nMarco Chen\nMarek Kasiewicz\nMarek Maślanka\nMarek Vasut\nMario Scheithauer\nMarius Gröger\nMariusz Szafranski\nMariusz Szafrański\nMark Hasemeyer\nMark Hsieh\nMars Chen\nMarshall Dawson\nMartin Mares\nMartin Renters\nMartin Roth\nMarvell International Ltd.\nMarvell Semiconductor Inc.\nMarx Wang\nMasanori Ogino\nMáté Kukri\nMatei Dibu\nMathew King\nMatt Chen\nMatt Delco\nMatt DeVillier\nMatt Papageorge\nMatthew Blecker\nMatthew Ziegelbaum\nMattias Nissler\nMaulik V Vaghela\nMAULIK V VAGHELA\nMaulik Vaghela\nMax Fritz\nMaxim Polyakov\nMaximilian Brune\nMediatek Inc.\nMediaTek Inc.\nMeera Ravindranath\nMeng-Huan Yu\nMeta Platforms, Inc\nmgabryelski1\nMice Lin\nMichael Brunner\nMichael Büchler\nMichael Niewöhner\nMichael Schroeder\nMichael Strosche\nMichael Walle\nMichał Kopeć\nMichal Suchanek\nMichał Żygowski\nMicro-Star INT'L CO., LTD.\nMika Westerberg\nMike Banon\nMike Shih\nMiriam Polzer\nmkurumel\nMoises Garcia\nMondrian Nuessle\nMonikaanan\nMontaVista Software, Inc.\nMorgan Jang\nMoritz Fischer\nMorris Hsu\nmtk15698\nmturney mturney\nMusse Abdullahi\nMyles Watson\nNancy.Lin\nNaresh Solanki\nNathan Lu\nNaveen R. Iyer\nNeill Corlett\nNetwork Appliance Inc.\nNicholas Chin\nNicholas Sielicki\nNicholas Sudsgaard\nNick Barker\nNick Chen\nNick Vaccaro\nNico Huber\nNico Rikken\nNicola Corna\nNicolas Boichat\nNicole Faerber\nNikolai Vyssotski\nNils Jacobs\nNina Wu\nNir Tzachar\nNokia Corporation\nNuvoton Technology Corporation\nNVIDIA Corporation\nOlivier Langlois\nOllie Lo\nOmar Pakker\nOnline SAS\nOpal Voravootivat\nOrion Technologies, LLC\nPablo Ceballos\nPablo Stebler\nPan Gao\nPatrick Georgi\nPatrick Huang\nPatrick Rudolph\nPatrik Tesarik\nPattrick Hueper\nPaul Fagerburg\nPaul Menzel\nPaul2 Huang\nPaulo Alcantara\nPavan Holla\nPavel Sayekat\nPaz Zcharya\nPC Engines GmbH\nPegatron Corp\nPeichao Li\nPer Odlund\nPeter Korsgaard\nPeter Lemenkov\nPeter Marheine\nPeter Stuge\nPetr Cvek\nPhilip Chen\nPhilipp Bartsch\nPhilipp Degler\nPhilipp Deppenwiese\nPhilipp Hug\nPiotr Kleinschmidt\nPo Xu\nPoornima Tom\nPrasad Malisetty\nPrashant Malani\nPratik Vishwakarma\nPratikkumar Prajapati\nPratikkumar V Prajapati\nProtectli\nPurism SPC\nPurism, SPC\nQii Wang\nQinghong Zeng\nQualcomm Technologies, Inc.\nQuanta Computer INC\nRaihow Shi\nRajat Jain\nRajesh Patil\nRaptor Engineering, LLC\nRasheed Hsueh\nRaul Rangel\nRavi Kumar\nRavi Mistry\nRavindra\nRavishankar Sarawadi\nRay Han Lim Ng\nRaymond Chung\nRed Hat, Inc\nReddestDream\nRehan Ghori\nReinhard Meyer\nReka Norman\nRen Kuo\nRenze Nicolai\nReto Buerki\nRex Chou\nRex-BC Chen\nRicardo Quesada\nRicardo Ribalda\nRichard Spiegel\nRichard Woodruff\nRick Lee\nRicky Chang\nRiku Viitanen\nRitul Guru\nRizwan Qureshi\nRnhmjoj\nRob Barnes\nRob Landley\nRobert Chen\nRobert Reeves\nRobert Zieba\nRobinson P. Tryon\nRockchip, Inc.\nRocky Phagura\nRoger Lu\nRoger Wang\nRoja Rani Yarubandi\nRomain Lievin\nRoman Zippel\nRon Lee\nRon Minnich\nRonak Kanabar\nRonald G. Minnich\nRory Liu\nRudolf Marek\nRui Zhou\nRuihai Zhou\nRunyang Chen\nRussell King\nRuud Schramp\nRuwen Liu\nRyan Chuang\nRyan Lin\nSage Electronic Engineering, LLC\nSajida Bhanu\nSam Lewis\nSam McNally\nSam Ravnborg\nSamsung Electronics\nSamuel Holland\nSandeep Maheswaram\nSathya Prakash M R\nSatya Priya Kakitapalli\nSaurabh Mishra\nSciTech Software, Inc.\nScott Chao\nSDC Systems Ltd\nSean Rhodes\nSebastian 'Swift Geek' Grzywna\nsecunet Security Networks AG\nSelma Bensaid\nSemihalf\nSen Chu\nSencore Inc\nSergej Ivanov\nSergii Dmytruk\nSerin Yeh\nSeven Lee\nSH Kim\nShahina Shaik\nShaocheng Wang\nShaoming Chen\nShaunak Saha\nShelley Chen\nShelly Chang\nSheng-Liang Pan\nShiyu Sun\nShon Wang\nShou-Chieh Hsu\nShreesh Chhabbi\nShuo Liu\nSiemens AG\nSiFive, Inc\nSilicom Ltd.\nSilicon Integrated System Corporation\nSilverback Ltd.\nSimon Glass\nSimon Yang\nSimon Zhou\nSindhoor Tilak\nSolomon Alan-Dei\nSong Fan\nSridhar Siricilla\nSrinidhi N Kaushik\nSrinivasa Rao Mandadapu\nST Microelectronics\nStanley Wu\nStar Labs Online Ltd\nStefan Binding\nStefan Ott\nStefan Reinauer\nStefan Tauner\nStephen Edworthy\nSteve Magnani\nSteve Shenton\nSubrata Banik\nSudheer Amrabadi\nSugnan Prabhu S\nSukumar Ghorai\nSumeet R Pawnikar\nSunwei Li\nSUSE LINUX AG\nSven Schnelle\nSyed Mohammed Khasim\nSystem76, Inc.\nszarpaj\nT Michael Turney\nTangYiwei\nTaniya Das\nTao Xia\nTarun Tuli\nTeddy Shih\nTerry Chen\nTexas Instruments\nThe Android Open Source Project\nThe ChromiumOS Authors\nThe Linux Foundation\nThe Regents of the University of California\nThejaswani Putta\nThomas Heijligen\nThomas Winischhofer\nTim Chen\nTim Chu\nTim Crawford\nTim Van Patten\nTim Wawrzynczak\nTimofey Komarov\nTimothy Pearson\ntinghan shen\nTobias Diedrich\nTom Hiller\nTommie Lin\nTony Huang\nTracy Wu\nTrevor Wu\nTristan Corrick\nTungsten Graphics, Inc.\nTyan Computer Corp.\nTyler Wang\nTzung-Bi Shih\nU.S. National Security Agency\nucRobotics Inc.\nUday Bhat\nUniversity of Heidelberg\nUsha P\nUwe Hermann\nUwe Poeche\nV Sowmya\nVáclav Straka\nVadim Bendebury\nVan Chen\nVarshit B Pandya\nVeerabhadrarao Badiganti\nVenkat Thogaru\nVenkata Krishna Nimmagadda\nVIA Technologies, Inc\nVictor Ding\nVidya Gopalakrishnan\nVikram Narayanan\nVikrant L Jadeja\nVinod Polimera\nVipin Kumar\nVitaly Rodionov\nVladimir Serbinenko\nVlado Cibic\nVsujithk\nWang Qing Pei\nWanghao11\nWard Vandewege\nWayne Wang\nWeimin Wu\nWeiyi Lu\nWenbin Mei\nWentao Qin\nWerner Zeh\nWilbert Duijvenvoorde\nWilliam Wei\nWilson Chou\nWim Vervoorn\nWin Enterprises\nWisley Chen\nWistron Corp\nWiwynn Corp.\nWiwynn Corporation\nWizard Shen\nWojciech Macek\nWolfgang Denk\nWon Chung\nWonkyu Kim\nWuxy\nXiang W\nXin Ji\nXixi Chen\nXuxin Xiong\nYADRO\nYan Liu\nYang Wu\nYann Collet\nYaroslav Kurlaev\nYH Lin\nYidi Lin\nYilin Yang\nYinghai Lu\nYolk Shih\nYong Zhi\nYongkun Yu\nYongqiang Niu\nYu-hsuan Hsu\nYu-Ping Wu\nYuanliding\nYuchen He\nYuchen Huang\nYunlong Jia\nYuval Peress\nZachary Yedidia\nZanxi Chen\nZhanyong Wang\nZheng Bao\nZhenguo Li\nZhi7 Li\nZhiqiang Ma\nZhixing Ma\nZhiyong Tao\nZhongtian Wu\nZhuohao Lee\nZiang Wang\nZoey Wu\nZoltan Baldaszti\n小田喜陽彦\n忧郁沙茶\n陳建宏"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5654296875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 29.6904296875,
          "content": "\n\n\t\t    List of upstream coreboot maintainers\n\t\t     and how to submit coreboot changes\n\nThis represents the list of maintainers that work on the upstream coreboot\ncode base (on coreboot.org).  Maintainers are assigned to topics and when\napplicable to subtrees of the source tree. You'll find some subtrees that\ndon't have a maintainer. If you are looking for reviewers for such a sub-\ntree, it's often a good choice to look at the git history to see who worked\non it last.\n\nPlease try to follow the guidelines below.  This will make things\neasier on the maintainers.  Not all of these guidelines matter for every\ntrivial patch so apply some common sense.\n\n\n1.\tMake sure your changes compile correctly in multiple configurations. In\n\tparticular check that changes work for various boards in the tree that\n\tit affects:\n\n\tTest with: `util/abuild/abuild -c $(nproc) -t vendor/boardname`\n\n2.\tWhen you are happy with a change make it generally available for\n\ttesting in gerrit and await feedback.\n\n3.\tBe prepared to get your changes sent back with seemingly\n\tsilly requests about formatting and variable names.  These aren't\n\tas silly as they seem. One job the maintainers do is to keep\n\tthings looking the same.  Sometimes this means that the clever\n\thack in your mainboard or chipset to get around a problem actually\n\tneeds to become a generalized coreboot feature ready for next time.\n\n\tPLEASE check your patch with the automated style checker\n\t(util/lint/checkpatch.pl) to catch trival style violations.\n\tSee https://www.coreboot.org/Coding_Style for guidance here.\n\n\tPLEASE document known bugs. If it doesn't work for everything\n\tor does something very odd once a month document it.\n\n\tALWAYS remember that submissions are made under the terms\n\tof the OSDL certificate of contribution and should include a\n\tSigned-off-by: line.  The current version of this \"Developer's\n\tCertificate of Origin\" (DCO) is listed at\n\thttps://www.coreboot.org/Development_Guidelines#Sign-off_Procedure.\n\n4.\tMake sure you have the right to send any changes you make. If you\n\tdo changes at work you may find your employer owns the patch\n\tnot you.\n\n5.\tHappy hacking.\n\nDescriptions of section entries:\n\n\tM: Maintainer: FullName <address@domain>\n\t   Must be registered to Gerrit (https://review.coreboot.org/).\n\t   Should have experience with upstream coreboot development and\n\t   +2 rights.\n\tR: Designated reviewer: FullName <address@domain>\n\t   These reviewers should be CCed on patches.\n\tL: Mailing list that is relevant to this area\n\tW: Web-page with status/info\n\tQ: Patchwork web based patch tracking system site\n\tT: SCM tree type and location.\n\t   Type is one of: git, hg, quilt, stgit, topgit\n\tS: Status, one of the following:\n\t   Supported:\tSomeone is continuously paid to look after this and\n\t\t\ta reaction to review requests can be expected\n\t\t\twithin a few days, a month at most.\n\t   Maintained:\tSomeone actually looks after it and a reaction to\n\t\t\treview requests can usually be expected within a\n\t\t\tfew weeks.\n\t   Odd Fixes:\tIt has a maintainer but they don't have time to do\n\t\t\tmuch other than throw the odd patch in. See below..\n\t   Orphan:\tNo current maintainer [but maybe you could take the\n\t\t\trole as you write your new code].\n\t   Obsolete:\tOld code. Something tagged obsolete generally means\n\t\t\tit has been replaced by a better system and you\n\t\t\tshould be using that.\n\tF: Files and directories with wildcard patterns.\n\t   A trailing slash includes all files and subdirectory files.\n\t   F:\tdrivers/net/\tall files in and below drivers/net\n\t   F:\tdrivers/net/*\tall files in drivers/net, but not below\n\t   F:\t*/net/*\t\tall files in \"any top level directory\"/net\n\t   One pattern per line.  Multiple F: lines acceptable.\n\tN: Files and directories with regex patterns.\n\t   N:\t[^a-z]tegra\tall files whose path contains the word tegra\n\t   One pattern per line.  Multiple N: lines acceptable.\n\t   scripts/get_maintainer.pl has different behavior for files that\n\t   match F: pattern and matches of N: patterns.  By default,\n\t   get_maintainer will not look at git log history when an F: pattern\n\t   match occurs.  When an N: match occurs, git log history is used\n\t   to also notify the people that have git commit signatures.\n\tX: Files and directories that are NOT maintained, same rules as F:\n\t   Files exclusions are tested before file matches.\n\t   Can be useful for excluding a specific subdirectory, for instance:\n\t   F:\tnet/\n\t   X:\tnet/ipv6/\n\t   matches all files in and below net excluding net/ipv6/\n\tK: Keyword perl extended regex pattern to match content in a\n\t   patch or file.  For instance:\n\t   K: of_get_profile\n\t      matches patches or files that contain \"of_get_profile\"\n\t   K: \\b(printk|pr_(info|err))\\b\n\t      matches patches or files that contain one or more of the words\n\t      printk, pr_info or pr_err\n\t   One regex pattern per line.  Multiple K: lines acceptable.\n\nNote: For the hard of thinking, this list is meant to remain in alphabetical\norder. If you could add yourselves to it in alphabetical order that would be\nso much easier [Ed]\n\nMaintainers List (try to look for most precise areas first)\n\n\t\t-----------------------------------\n\n################################################################################\n# Mainboards\n################################################################################\n\n51NB MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/51nb/\n\n\n\nACER G43T-AM3\nR:\tJulia Kittlinger <julia.kittlinger@pm.me>\nS:\tOrphan\nF:\tsrc/mainboard/acer/g43t-am3/\n\nACER MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/acer/\n\n\n\nAMD non-server family 17h and 19h reference boards\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tFred Reitberger <reitbergerfred@gmail.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tMaintained\nF:\tsrc/mainboard/amd/bilby/\nF:\tsrc/mainboard/amd/birman/\nF:\tsrc/mainboard/amd/chausie/\nF:\tsrc/mainboard/amd/majolica/\nF:\tsrc/mainboard/amd/mandolin/\nF:\tsrc/mainboard/amd/mayan/\n\nAMD server family 19h reference boards\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tMartin Roth <gaumless@gmail.com>\nM:\tVarshit Pandya <pandyavarshit@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/amd/onyx_poc/\n\nAMD reference boards outside of family 17h and 19h\nS:\tOdd Fixes\nL:\tamd_coreboot_org_changes@googlegroups.com\nF:\tsrc/mainboard/amd/gardenia/\nF:\tsrc/mainboard/amd/pademelon/\n\n\n\nAOPEN MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/aopen/\n\n\n\nAPPLE MAINBOARDS\nM:\tEvgeny Zinoviev <me@ch1p.io>\nS:\tMaintained\nF:\tsrc/mainboard/apple/\n\n\n\nASROCK B75M-ITX MAINBOARD\nM:\tKevin Keijzer <kevin@quietlife.nl>\nS:\tMaintained\nF:\tsrc/mainboard/asrock/b75m-itx/\n\nASROCK B85M PRO4 MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asrock/b85m_pro4/\n\nASROCK G41C-GS MAINBOARD & VARIANTS\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asrock/g41c-gs/\n\nASROCK IMB-1222 MAINBOARD\nM:\tMaxim Polyakov <max.senia.poliak@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asrock/imb-1222/\n\nASROCK Z97 EXTREME6 MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asrock/z97_extreme6/\n\n\n\nASUS A88XM-E MAINBOARD\nM:\tMike Banon <mikebdp2@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asus/a88xm-e/\n\nASUS AM1I-A MAINBOARD\nM:\tMike Banon <mikebdp2@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asus/am1i-a/\n\nASUS H61 SERIES MAINBOARDS\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asus/h61-series/\n\nASUS P5QC PRO MAINBOARD & VARIANTS\nM:\tAngel Pons <th3fanbus@gmail.com>\nR:\tStefan Ott <coreboot@desire.ch>\nS:\tMaintained\nF:\tsrc/mainboard/asus/p5qc/\n\nASUS P5QPL-AM MAINBOARD & VARIANTS\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asus/p5qpl-am/\n\nASUS P8Z77 SERIES MAINBOARDS\nM:\tAngel Pons <th3fanbus@gmail.com>\nM:\tVlado Cibic <vladocb@protonmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/asus/p8z77-series/\n\n\n\nBIOSTAR MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/biostar/\n\n\n\nBOSTENTECH MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/bostentech/\n\n\n\nCAVIUM MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/cavium/\n\n\n\nCLEVO MAINBOARDS\nM:\tFelix Singer <felixsinger@posteo.net>\nM:\tMichael Niewöhner <foss@mniewoehner.de>\nS:\tSupported\nF:\tsrc/mainboard/clevo/\n\n\n\nCOMPULAB MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/compulab/\n\n\n\nDELL MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/dell/\n\nDELL LATITUDE MAINBOARDS\nM:\tNicholas Chin <nic.c3.14@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/dell/e6400/\nF:\tsrc/mainboard/dell/snb_ivb_latitude/\nF:\tsrc/mainboard/dell/e7240/\n\n\nEMULATION MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/emulation/\n\n\n\nEXAMPLE MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/example/\n\n\n\nFACEBOOK FBG1701 MAINBOARD\nM:\tFrans Hendriks <fhendriks@eltan.com>\nM:\tErik van den Bogaert <ebogaert@eltan.com>\nS:\tMaintained\nF:\tsrc/mainboard/facebook/fbg1701/\n\nFACEBOOK MONOLITH MAINBOARD\nM:\tFrans Hendriks <fhendriks@eltan.com>\nM:\tErik van den Bogaert <ebogaert@eltan.com>\nS:\tMaintained\nF:\tsrc/mainboard/facebook/monolith/\n\n\n\nFOXCONN MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/foxconn/\n\n\n\nGETAC MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/getac/\n\n\n\nGIGABYTE GA-D510UD MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/gigabyte/ga-d510ud/\n\nGIGABYTE GA-H61M SERIES MAINBOARDS\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/gigabyte/ga-h61m-series/\n\n\n\nGOOGLE REX MAINBOARDS\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tTarun Tuli <tstuli@gmail.com>\nM:\tKapil Porwal <kapilporwal@google.com>\nM:\tJakub Czapiga <czapiga@google.com>\nM:\tEran Mitrani <mitrani@google.com>\nM:\tDinesh Gehlot <digehlot@google.com>\nS:\tMaintained\nF:\tsrc/mainboard/google/rex/\n\nGOOGLE BRYA MAINBOARDS\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tNick Vaccaro <nvaccaro@chromium.org>\nM:\tEric Lai <ericllai@google.com>\nM:\tKapil Porwal <kapilporwal@google.com>\nM:\tDinesh Gehlot <digehlot@google.com>\nM:\tJayvik Desai <jayvik@google.com>\nS:\tMaintained\nF:\tsrc/mainboard/google/brya/\n\nGOOGLE FATCAT MAINBOARDS\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tPranava Y N <pranavayn@google.com>\nF:\tsrc/mainboard/google/fatcat/\n\nGOOGLE HATCH MAINBOARDS\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tNick Vaccaro <nvaccaro@chromium.org>\nS:\tMaintained\nF:\tsrc/mainboard/google/hatch/\n\nGOOGLE VOLTEER MAINBOARDS\nM:\tNick Vaccaro <nvaccaro@chromium.org>\nS:\tMaintained\nF:\tsrc/mainboard/google/volteer/\n\nGOOGLE MAINBOARDS (Intel-based, legacy/inactive)\nM:\tMatt DeVillier <MrChromebox@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/google/auron/\nF:\tsrc/mainboard/google/beltino/\nF:\tsrc/mainboard/google/butterfly/\nF:\tsrc/mainboard/google/cyan/\nF:\tsrc/mainboard/google/glados/\nF:\tsrc/mainboard/google/jecht/\nF:\tsrc/mainboard/google/link/\nF:\tsrc/mainboard/google/parrot/\nF:\tsrc/mainboard/google/slippy/\nF:\tsrc/mainboard/google/stout/\n\nGOOGLE AMD-BASED MAINBOARDS\nM:\tMartin Roth <martin.roth@amd.corp-partner.google.com>\nM:\tJason Nien <jason.nien@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tSupported\nF:\tsrc/mainboard/google/kahlee/\nF:\tsrc/mainboard/google/zork/\nF:\tsrc/mainboard/google/guybrush/\nF:\tsrc/mainboard/google/skyrim/\n\nGOOGLE MEDIATEK-BASED MAINBOARDS\nM:\tHung-Te Lin <hungte@chromium.org>\nM:\tYu-Ping Wu <yupingso@google.com>\nM:\tYidi Lin <yidilin@google.com>\nS:\tSupported\nF:\tsrc/mainboard/google/asurada/\nF:\tsrc/mainboard/google/cherry/\nF:\tsrc/mainboard/google/corsola/\nF:\tsrc/mainboard/google/geralt/\nF:\tsrc/mainboard/google/kukui/\nF:\tsrc/mainboard/google/oak/\nF:\tsrc/mainboard/google/rauru/\n\n\n\nHP 280 G2 MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/hp/280_g2/\n\n\n\nIBASE MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/ibase/\n\n\nINTEL FROST_CREEK_CRB MAINBOARD\nM:\tYuchi Chen <yuchi.chen@intel.com>\nS:\tSupported\nF:\tsrc/mainboard/intel/frost_creek/\n\nINTEL HARCUVAR_CRB MAINBOARD\nM:\tJeff Daly <jeffd@silicom-usa.com>\nM:\tVanessa Eusebio <vanessa.f.eusebio@intel.com>\nS:\tMaintained\nF:\tsrc/mainboard/intel/harcuvar/\n\n\n\nINVENTEC MAINBOARDS\nM:\tAnnie Chen <Chen.AnnieET@inventec.com>\nS:\tMaintained\nF:\tsrc/mainboard/inventec/\n\n\n\nKONTRON BSL6 MAINBOARD\nM:\tFelix Singer <felixsinger@posteo.net>\nM:\tNico Huber <nico.h@gmx.de>\nS:\tSupported\nF:\tsrc/mainboard/kontron/bsl6/\n\nKONTRON MAL10 MAINBOARD\nM:\tMaxim Polyakov <max.senia.poliak@gmail.com>\nM:\tNico Huber <nico.h@gmx.de>\nM:\tFelix Singer <felixsinger@posteo.net>\nS:\tSupported\nF:\tsrc/mainboard/kontron/mal10/\n\n\n\nLENOVO MAINBOARDS\nM:\tAlexander Couzens <lynxis@fe80.eu>\nS:\tMaintained\nF:\tsrc/mainboard/lenovo/\n\nLENOVO G505S MAINBOARD\nM:\tMike Banon <mikebdp2@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/lenovo/g505s/\n\nLENOVO X200 MAINBOARD\nR:\tStefan Ott <coreboot@desire.ch>\nS:\tMaintained\nF:\tsrc/mainboard/lenovo/x200/\n\nLENOVO X201 MAINBOARD\nR:\tStefan Ott <coreboot@desire.ch>\nS:\tMaintained\nF:\tsrc/mainboard/lenovo/x201/\n\n\n\nLIBRETREND LT1000 MAINBOARD\nM:\tPiotr Król <piotr.krol@3mdeb.com>\nM:\tMichał Żygowski <michal.zygowski@3mdeb.com>\nS:\tMaintained\nF:\tsrc/mainboard/libretrend/lt1000/\n\n\n\nMSI H81M-P33 MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/msi/h81m-p33/\n\nMSI MS-7D25 MAINBOARDS\nM:\tMichał Żygowski <michal.zygowski@3mdeb.com>\nM:\tMichał Kopeć <michal.kopec@3mdeb.com>\nS:\tMaintained\nF:\tsrc/mainboard/msi/ms7d25/\n\n\n\nOCP DELTALAKE MAINBOARD\nM:\tArthur Heymans <arthur@aheymans.xyz>\nM:\tChristian Walter <christian.walter@9elements.com>\nM:\tJohnny Lin <Johnny_Lin@wiwynn.com>\nM:\tJonathan Zhang <jonzhang@fb.com>\nM:\tTim Chu <Tim.Chu@quantatw.com>\nS:\tSupported\nF:\tsrc/mainboard/ocp/deltalake/\n\nOCP TIOGAPASS MAINBOARD\nM:\tJonathan Zhang <jonzhang@fb.com>\nM:\tJohnny Lin <Johnny_Lin@wiwynn.com>\nM:\tMorgan Jang <Morgan_Jang@wiwynn.com>\nM:\tRyback Hung <<Ryback.Hung@quantatw.com>\nM:\tBryant Ou <Bryant.Ou@quantatw.com>\nS:\tMaintained\nF:\tsrc/mainboard/ocp/tiogapass/\n\n\n\nOPENCELLULAR MAINBOARDS\nM:\tChristian Walter <christian.walter@9elements.com>\nM:\tPatrick Rudolph <patrick.rudolph@9elements.com>\nS:\tSupported\nF:\tsrc/mainboard/opencellular/elgon/\n\n\n\nPC ENGINES ALL MAINBOARDS\nM:\tPiotr Król <piotr.krol@3mdeb.com>\nM:\tMichał Żygowski <michal.zygowski@3mdeb.com>\nS:\tSupported\nF:\tsrc/mainboard/pcengines/\n\n\n\nPINE64 MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/pine64/\n\n\n\nPORTWELL PQ-M107 MAINBOARD\nM:\tFrans Hendriks <fhendriks@eltan.com>\nM:\tErik van den Bogaert <ebogaert@eltan.com>\nS:\tMaintained\nF:\tsrc/mainboard/portwell/m107/\n\n\n\nPROTECTLI ALL MAINBOARDS\nM:\tPiotr Król <piotr.krol@3mdeb.com>\nM:\tMichał Żygowski <michal.zygowski@3mdeb.com>\nS:\tMaintained\nF:\tsrc/mainboard/protectli/\n\n\n\nPRODRIVE ATLAS MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nM:\tChristian Walter <christian.walter@9elements.com>\nM:\tLean Sheng Tan <sheng.tan@9elements.com>\nS:\tSupported\nF:\tsrc/mainboard/prodrive/atlas/\n\nPRODRIVE HERMES MAINBOARD\nM:\tAngel Pons <th3fanbus@gmail.com>\nM:\tChristian Walter <christian.walter@9elements.com>\nM:\tPatrick Rudolph <patrick.rudolph@9elements.com>\nS:\tSupported\nF:\tsrc/mainboard/prodrive/hermes/\n\n\n\nPURISM MAINBOARDS\nM:\tJonathon Hall <jonathon.hall@puri.sm>\nS:\tSupported\nF:\tsrc/mainboard/purism/\n\n\n\nRAZER MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/razer/\n\n\n\nRODA MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/roda/\n\n\n\nSAMSUNG CHROMEOS MAINBOARDS\nM:\tMatt DeVillier <MrChromebox@gmail.com>\nS:\tMaintained\nF:\tsrc/mainboard/samsung/lumpy/\nF:\tsrc/mainboard/samsung/stumpy/\n\n\n\nSAPPHIRE MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/sapphire/\n\n\n\nSIEMENS CHILI MAINBAORD\nM:\tFelix Singer <felixsinger@posteo.net>\nM:\tNico Huber <nico.h@gmx.de>\nS:\tSupported\nF:\tsrc/mainboard/siemens/chili/\n\nSIEMENS MC_xxxx MAINBOARDS\nM:\tWerner Zeh <werner.zeh@siemens.com>\nS:\tMaintained\nF:\tsrc/mainboard/siemens/mc_apl1/\nF:\tsrc/mainboard/siemens/mc_ehl/\n\n\n\nSIFIVE MAINBOARDS\nM:\tMaximilian Brune <maximilian.brune@9elements.com>\nS:\tMaintained\nF:\tsrc/mainboard/sifive/\n\n\n\nSTAR LABS MAINBOARDS\nM:\tSean Rhodes <sean@starlabs.systems>\nS:\tMaintained\nF:\tsrc/mainboard/starlabs/\n\n\n\nSUPERMICRO X11-LGA1151-SERIES\nM:\tMichael Niewöhner <foss@mniewoehner.de>\nS:\tMaintained\nF:\tsrc/mainboard/supermicro/x11-lga1151-series/\n\n\n\nSYSTEM76 MAINBOARDS\nM:\tJeremy Soller <jeremy@system76.com>\nM:\tTim Crawford <tcrawford@system76.com>\nS:\tMaintained\nF:\tsrc/mainboard/system76/\n\n\n\nTI MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/ti/\n\n\n\nUP MAINBOARDS\nS:\tOrphan\nF:\tsrc/mainboard/up/\n\n################################################################################\n# Architectures\n################################################################################\n\nARM ARCHITECTURE\nM:\tJulius Werner <jwerner@chromium.org>\nS:\tSupported\nF:\tsrc/arch/arm/\nF:\tsrc/arch/arm64/\nF:\tsrc/soc/nvidia/\nF:\tsrc/soc/rockchip/\nF:\tutil/nvidia/\nF:\tutil/rockchip/\n\nPPC64 ARCHITECTURE\nM:\tRonald Minnich <rminnich@gmail.com>\nM:\tTimothy Pearson <tpearson@raptorengineeringinc.com>\nS:\tMaintained\nF:\tsrc/arch/ppc64/\nF:\tsrc/cpu/qemu-power8/\nF:\tsrc/mainboard/emulation/qemu-power8/\n\nRISC-V ARCHITECTURE\nM:\tRonald Minnich <rminnich@gmail.com>\nM:\tMaximilian Brune <maximilian.brune@9elements.com>\nR:\tPhilipp Hug <philipp@hug.cx>\nS:\tMaintained\nF:\tsrc/arch/riscv/\nF:\tsrc/soc/sifive/\nF:\tsrc/soc/ucb/\nF:\tsrc/mainboard/emulation/*-riscv/\nF:\tsrc/mainboard/sifive/\nF:\tutil/riscv/\n\nX86 ARCHITECTURE\nM:\tJérémy Compostella <jeremy.compostella@intel.com>\nS:\tMAINTAINED\nF:\tsrc/arch/x86/\nF:\tsrc/cpu/x86/\nF:\tsrc/drivers/pc80/\nF:\tsrc/include/pc80/\nF:\tsrc/include/cpu/x86/\n\n################################################################################\n# Embedded Controllers\n################################################################################\n\nCHROME EC\nM:\tBoris Mittelberg <bmbm@google.com>\nM:\tCaveh Jalali <caveh@chromium.org>\nS:\tMaintained\nF:\tsrc/ec/google/\n\nDELL SMSC MEC5035 EC\nM:\tNicholas Chin <nic.c3.14@gmail.com>\nW:\thttps://github.com/nic3-14159/E6400-EC-research\nS:\tMaintained\nF:\tsrc/ec/dell/mec5035/\n\nLENOVO EC\nM:\tAlexander Couzens <lynxis@fe80.eu>\nS:\tMaintained\nF:\tsrc/ec/lenovo/\n\nSTARLABS EC\nM:\tSean Rhodes <sean@starlabs.systems>\nS:\tMaintained\nF:\tsrc/ec/starlabs/\n\nSYSTEM76 EC\nM:\tJeremy Soller <jeremy@system76.com>\nM:\tTim Crawford <tcrawford@system76.com>\nS:\tMaintained\nF:\tsrc/ec/system76/\n\nORPHANED ECS\nS:\tOrphan\nF:\tsrc/ec/51nb/\nF:\tsrc/ec/acpi/\nF:\tsrc/ec/apple/\nF:\tsrc/ec/compal/\nF:\tsrc/ec/hp/\nF:\tsrc/ec/kontron/\nF:\tsrc/ec/purism/\nF:\tsrc/ec/quanta/\nF:\tsrc/ec/roda/\nF:\tsrc/ec/smsc/\n\n################################################################################\n# Northbridges\n################################################################################\n\nINTEL HASWELL NORTHBRIDGE\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/northbridge/intel/haswell/\n\nINTEL PINEVIEW CHIPSET\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tOdd Fixes\nF:\tsrc/northbridge/intel/pineview/\n\nINTEL SANDYBRIDGE NORTHBRIDGE\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tMaintained\nF:\tsrc/northbridge/intel/sandybridge/\n\nINTEL X4X CHIPSET\nM:\tAngel Pons <th3fanbus@gmail.com>\nS:\tOdd Fixes\nF:\tsrc/northbridge/intel/x4x/\n\n################################################################################\n# Platforms\n################################################################################\n\nAMD SUPPORT\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tOdd Fixes\nF:\tsrc/vendorcode/amd/\nF:\tsrc/cpu/amd/\nF:\tsrc/northbridge/amd/\nF:\tsrc/southbridge/amd/\nF:\tsrc/include/cpu/amd/\n\nINTEL SUPPORT\nR:\tIntel_Coreboot_Reviewers <intel_coreboot_reviewers@intel.com>\nS:\tMaintained\nF:\tsrc/vendorcode/intel/\nF:\tsrc/cpu/intel/\nF:\tsrc/northbridge/intel/\nF:\tsrc/southbridge/intel/\nF:\tsrc/soc/intel/\nF:\tsrc/drivers/intel/\nF:\tsrc/include/cpu/intel/\n\nINTEL FSP 1.1\nM:\tHuang Jin <huang.jin@intel.com>\nS:\tSupported\nF:\tsrc/drivers/intel/fsp1_1/\n\nINTEL FSP 2.0\nM:\tAndrey Petrov <andrey.petrov@gmail.com>\nM:\tRonak Kanabar <ronak.kanabar@intel.com>\nS:\tMaintained\nF:\tsrc/drivers/intel/fsp2_0/\n\nINTEL DPTF\nM:\tSumeet Pawnikar <sumeet.r.pawnikar@intel.com>\nS:\tMaintained\nF:\tsrc/drivers/intel/dptf/\n\n################################################################################\n# Systems on a Chip\n################################################################################\n\nAMD Cezanne\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tFred Reitberger <reitbergerfred@gmail.com>\nM:\tMatt DeVillier <matt.devillier@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tMaintained\nF:\tsrc/soc/amd/cezanne/\nF:\tsrc/vendorcode/amd/fsp/cezanne/\n\nAMD common SoC code\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tFred Reitberger <reitbergerfred@gmail.com>\nM:\tMatt DeVillier <matt.devillier@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tMaintained\nF:\tsrc/soc/amd/common/\n\nAMD Genoa Proof of Concept\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tMartin Roth <gaumless@gmail.com>\nM:\tVarshit Pandya <pandyavarshit@gmail.com>\nS:\tMaintained\nF:\tsrc/soc/amd/genoa_poc/\n\nAMD Mendocino\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tFred Reitberger <reitbergerfred@gmail.com>\nM:\tMatt DeVillier <matt.devillier@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tSupported\nF:\tsrc/soc/amd/mendocino/\nF:\tsrc/vendorcode/amd/fsp/mendocino/\n\nAMD Picasso\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tFred Reitberger <reitbergerfred@gmail.com>\nM:\tMatt DeVillier <matt.devillier@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tMaintained\nF:\tsrc/soc/amd/picasso/\nF:\tsrc/vendorcode/amd/fsp/picasso/\n\nAMD Phoenix\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tFred Reitberger <reitbergerfred@gmail.com>\nM:\tMatt DeVillier <matt.devillier@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tSupported\nF:\tsrc/soc/amd/phoenix/\nF:\tsrc/vendorcode/amd/fsp/phoenix/\n\nAMD Stoneyridge\nM:\tFelix Held <felix-coreboot@felixheld.de>\nM:\tMatt DeVillier <matt.devillier@amd.corp-partner.google.com>\nL:\tamd_coreboot_org_changes@googlegroups.com\nS:\tOdd Fixes\nF:\tsrc/soc/amd/stoneyridge/\n\nINTEL ALDERLAKE SOC\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tNick Vaccaro <nvaccaro@chromium.org>\nM:\tKapil Porwal <kapilporwal@google.com>\nM:\tDinesh Gehlot <digehlot@google.com>\nM:\tJayvik Desai <jayvik@google.com>\nS:\tMaintained\nF:\tsrc/soc/intel/alderlake/\n\nINTEL APOLLOLAKE_SOC\nM:\tSean Rhodes <sean@starlabs.systems>\nS:\tOdd Fixes\nF:\tsrc/soc/intel/apollolake/\n\nINTEL BRASWELL SOC\nM:\tPiotr Król <piotr.krol@3mdeb.com>\nM:\tMichał Żygowski <michal.zygowski@3mdeb.com>\nM:\tFrans Hendriks <fhendriks@eltan.com>\nS:\tMaintained\nF:\t/src/soc/intel/braswell/\nF:\t/src/vendorcode/intel/fsp/fsp1_1/braswell/\n\nINTEL CANNONLAKE SOC\nS:\tOrphan\nF:\tsrc/soc/intel/cannonlake/\n\nINTEL DENVERTON-NS SOC\nM:\tJeff Daly <jeffd@silicom-usa.com>\nM:\tVanessa Eusebio <vanessa.f.eusebio@intel.com>\nS:\tMaintained\nF:\tsrc/soc/intel/denverton_ns/\n\nINTEL ELKHARTLAKE SOC\nM:\tLean Sheng Tan <sheng.tan@9elements.com>\nM:\tWerner Zeh <werner.zeh@siemens.com>\nS:\tMaintained\nF:\tsrc/soc/intel/elkhartlake/\n\nINTEL METEORLAKE SOC\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tTarun Tuli <tstuli@gmail.com>\nM:\tKapil Porwal <kapilporwal@google.com>\nM:\tJakub Czapiga <czapiga@google.com>\nM:\tEran Mitrani <mitrani@google.com>\nM:\tDinesh Gehlot <digehlot@google.com>\nS:\tMaintained\nF:\tsrc/soc/intel/meteorlake/\n\nINTEL PANTHERLAKE SOC\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tKapil Porwal <kapilporwal@google.com>\nM:\tPranava Y N <pranavayn@google.com>\nS:\tMaintained\nF:\tsrc/soc/intel/pantherlake/\n\nINTEL TIGERLAKE SOC\nM:\tSubrata Banik <subratabanik@google.com>\nM:\tNick Vaccaro <nvaccaro@chromium.org>\nS:\tMaintained\nF:\tsrc/soc/intel/tigerlake/\n\nINTEL Atom Snow Ridge SoC\nM:\tYuchi Chen <yuchi.chen@intel.com>\nM:\tVasiliy Khoruzhick <vasilykh@arista.com>\nS:\tMaintained\nF:\tsrc/soc/intel/common/block/imc/\nF:\tsrc/soc/intel/common/block/systemagent-server/\nF:\tsrc/soc/intel/snowridge/\nF:\tsrc/vendorcode/intel/fsp/fsp2_0/snowridge/\n\nINTEL Xeon Scalable Processor Family\nM:\tJonathan Zhang <jon.zhixiong.zhang@gmail.com>\nM:\tJohnny Lin <Johnny_Lin@wiwynn.com>\nM:\tTim Chu <Tim.Chu@quantatw.com>\nM:\tChristian Walter <christian.walter@9elements.com>\nM:\tShuo Liu <shuo.liu@intel.com>\nM:\tPatrick Rudolph <patrick.rudolph@9elements.com>\nM:\tLean Sheng Tan <sheng.tan@9elements.com>\nS:\tSupported\nF:\tsrc/soc/intel/xeon_sp/\nF:\tsrc/vendorcode/intel/fsp/fsp2_0/skylake_sp/\nF:\tsrc/vendorcode/intel/fsp/fsp2_0/copperlake_sp/\nF:\tsrc/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/\nF:\tsrc/vendorcode/intel/fsp/fsp2_0/graniterapids/\n\nMEDIATEK SOCS\nM:\tHung-Te Lin <hungte@chromium.org>\nM:\tYu-Ping Wu <yupingso@google.com>\nM:\tYidi Lin <yidilin@google.com>\nS:\tSupported\nF:\tsrc/soc/mediatek/\n\nMEDIATEK MT8192\nM:\tXi Chen <xixi.chen@mediatek.com>\nS:\tMaintained\nF:\tsrc/soc/mediatek/mt8192/\nF:\tsrc/vendorcode/mediatek/mt8192/\n\nORPHANED ARM SOCS\nS:\tOrphan\nF:\tsrc/cpu/armltd/\nF:\tsrc/soc/ti/\nF:\tsrc/soc/qualcomm/\nF:\tsrc/soc/samsung/\nF:\tutil/exynos/\nF:\tutil/ipqheader/\n\n################################################################################\n# Payloads\n################################################################################\n\nNVRAM\nF:\tutil/nvramtool/\nF:\tpayloads/nvramcui/\n\nLIBPAYLOAD\nF:\tpayloads/libpayload/\n\nCOREINFO PAYLOAD\nF:\tpayloads/coreinfo/\n\nEXTERNAL PAYLOADS INTEGRATION\nM:\tMartin Roth <gaumless@gmail.com>\nF:\tpayloads/external/\n\nCOREDOOM PAYLOAD INTEGRATION\nM:\tNicholas Chin <nic.c3.14@gmail.com>\nW:\thttps://github.com/nic3-14159/coreDOOM\nS:\tMaintained\nF:\tpayloads/external/coreDOOM/\n\nLINUXBOOT PAYLOAD INTEGRATION\nM:\tChristian Walter <christian.walter@9elements.com>\nM:\tMarcello Sylvester Bauer <info@marcellobauer.com>\nS:\tSupported\nF:\tpayloads/external/LinuxBoot/\n\nEDK2 PAYLOAD INTEGRATION\nM:\tBenjamin Doron <benjamin.doron00@gmail.com>\nM:\tMatt DeVillier <matt.devillier@gmail.com>\nM:\tSean Rhodes <sean@starlabs.systems>\nM:\tLean Sheng Tan <sheng.tan@9elements.com>\nS:\tSupported\nF:\tpayloads/external/edk2/\n\n################################################################################\n# Utilities\n################################################################################\n\nABUILD\nM:\tMartin Roth <gaumless@gmail.com>\nS:\tSupported\nF:\tutil/abuild/\n\nBOARD STATUS\nF:\tutil/board_status/\n\nBUILD SYSTEM\nM:\tMartin Roth <gaumless@gmail.com>\nS:\tSupported\nF:\tMakefile\nF:\t*.inc\nF:\tsrc/include/kconfig.h\nF:\tutil/kconfig/\nF:\tutil/sconfig/\nF:\tutil/xcompile/\nF:\tutil/genbuild_h/\n\nTOOLCHAIN\nM:\tMartin Roth <gaumless@gmail.com>\nM:\tFelix Singer <felixsinger@posteo.net>\nS:\tSupported\nF:\tutil/crossgcc/\n\nDOCKER\nM:\tMartin Roth <gaumless@gmail.com>\nM:\tFelix Singer <felixsinger@posteo.net>\nS:\tSupported\nF:\tutil/docker/\n\nGIT\nF:\t.git*\nF:\t/util/gitconfig\n\nHDA DECODER\nM:\tNicholas Sudsgaard <devel+coreboot@nsudsgaard.com>\nS:\tMaintained\nF:\tutil/hda-decoder/\n\nLINT SCRIPTS\nM:\tMartin Roth <gaumless@gmail.com>\nS:\tSupported\nF:\tutil/lint/\n\nIFDTOOL\nF:\tutil/ifdtool/\n\nINTELTOOL\nM:\tPratik Prajapati <pratikkumar.v.prajapati@intel.com>\nF:\tutil/inteltool/\n\nINTELMETOOL\nM:\tChristian Walter <christian.walter@9elements.com>\nF:\tutil/intelmetool/\n\nINTELP2M\nM:\tMaxim Polyakov <max.senia.poliak@gmail.com>\nS:\tMaintained\nF:\tutil/intelp2m/\n\nME_CLEANER\nM:\tNicola Corna <nicola@corna.info>\nW:\thttps://github.com/corna/me_cleaner\nS:\tMaintained\nF:\tutil/me_cleaner/\n\nLIVEISO\nM:\tFelix Singer <felixsinger@posteo.net>\nS:\tSupported\nF:\tutil/liveiso/\n\n################################################################################\n# Miscellaneous\n################################################################################\n\nASPEED AST2050 DRIVER & COMMON CODE\nM:\tTimothy Pearson <tpearson@raptorengineeringinc.com>\nS:\tSupported\nF:\tsrc/drivers/aspeed/common/\nF:\tsrc/drivers/aspeed/ast2050/\n\nACPI\nR:\tCliff Huang <cliff.huang@intel.com>\nM:\tLance Zhao <lance.zhao@gmail.com>\nM:\tTim Wawrzynczak <inforichland@gmail.com>\nS:\tSupported\nF:\tsrc/acpi/\nF:\tsrc/arch/x86/acpi/\nF:\tutil/acpi/\n\nLZ4 COMPRESSION\nM:\tJulius Werner <jwerner@chromium.org>\nS:\tSupported\nF:\tsrc/commonlib/lz4*\nF:\tpayloads/libpayload/liblz4/\nF:\tutil/cbfstool/lz4/\n\nBINARY OBJECTS\nF:\t3rdparty/blobs/\n\nVERIFIED BOOT\nM:\tJulius Werner <jwerner@chromium.org>\nM:\tYu-Ping Wu <yupingso@google.com>\nS:\tSupported\nF:\t3rdparty/vboot/\nF:\tsrc/security/vboot/\nF:\tsrc/include/tpm.h\nF:\tsrc/include/tpm_lite/\n\nRESOURCE ALLOCATOR\nF:\tsrc/device/*\nF:\tsrc/include/device/\nF:\tsrc/include/cpu/cpu.h\n\nOPTION ROM EXECUTION & X86EMU\nF:\tsrc/device/oprom/\n\nCBFS\nM:\tJulius Werner <jwerner@chromium.org>\nF:\tsrc/include/cbfs*\nF:\tsrc/commonlib/bsd/include/commonlib/bsd/cbfs*\nF:\tsrc/commonlib/bsd/cbfs*\nF:\tsrc/lib/cbfs.c\n\nCBFSTOOL\nF:\tutil/cbfstool/\n\nCBMEM\nF:\tsrc/include/cbmem.h\nF:\tsrc/include/cbmem_id.h\nF:\tutil/cbmem/\n\nCONSOLE\nF:\tsrc/console/\nF:\tsrc/include/console/\nF:\tsrc/drivers/uart/\n\nTPM SUPPORT\nM:\tChristian Walter <christian.walter@9elements.com>\nS:\tSupported\nF:\tsrc/drivers/*/tpm/\nF:\tsrc/security/tpm/\n\nSUPERIOS & SUPERIOTOOL\nS:\tOrphan\nF:\tsrc/superio/\nF:\tutil/superiotool/\n\nSPD UTILITIES\nM:\tReka Norman <rekanorman@chromium.org>\nS:\tMaintained\nF:\tutil/spd_tools/\nF:\tutil/spdtool/\n\nMEMLAYOUT\nM:\tJulius Werner <jwerner@chromium.org>\nS:\tSupported\nF:\t*/memlayout.h\nF:\t*.ld\n\nELTAN VENDORCODE\nM:\tFrans Hendriks <fhendriks@eltan.com>\nM:\tErik van den Bogaert <ebogaert@eltan.com>\nS:\tMaintained\nF:\tsrc/vendorcode/eltan/\n\nTAS5825M DRIVER\nM:\tJeremy Soller <jeremy@system76.com>\nM:\tTim Crawford <tcrawford@system76.com>\nS:\tMaintained\nF:\tsrc/drivers/i2c/tas5825m/\n\nTESTS\nM:\tJakub Czapiga <czapiga@google.com>\nS:\tMaintained\nF:\ttests/\nF:\tpayloads/libpayload/tests/\n\nCOREBOOT RELEASES\nM:\tFelix Singer <felixsinger@posteo.net>\nM:\tJason Glenesk <jason.glenesk@gmail.com>\nM:\tAngel Pons <th3fanbus@gmail.com>\nM:\tMartin Roth <gaumless@gmail.com>\nM:\tMatt DeVillier <MrChromebox@gmail.com>\nS:\tMaintained\nF:\tDocumentation/releases/\nF:\tutil/release/\n\nMISSING: TIMERS / DELAYS\n\nMISSING: TIMESTAMPS\n\nMISSING: FMAP\n\nMISSING: GPIO\n\nMISSING: SMP\n\nMISSING: DMP / QEMU-X86\n\nMISSING: ELOG\n\nMISSING: SPI\n\n# *** Infrastructure Owners ***\n# This is intended to let people know who they should contact for issues with various infrastructure pieces.\n# Hardware\n#\tOwners: Patrick\n#\tBackups:\n\n# Web Server\n#\tOwners: Patrick\n#\tBackups:\n\n# Website\n#\tOwners: Martin\n#\tBackups: Patrick\n\n# Documentation Website\n#\tOwners: Patrick\n#\tBackups:\n\nCODE OF CONDUCT\nM:\tRonald Minnich <rminnich@gmail.com>\nM:\tMartin Roth <martin@coreboot.org>\nS:\tMaintained\nF:\tDocumentation/community/code_of_conduct.md\n\n# Wiki\n#\tOwners: Patrick\n#\tBackups:\n\n# Gerrit\n#\tOwners: Patrick\n#\tBackups: Martin\n\n# Jenkins\n#\tOwners: Patrick, Martin\n#\tBackups:\n\n# Bug Tracker\n#\tOwners: Lynxis,\n#\tBackups: Martin,\n\n# Mailing List\n#\tOwners: Patrick\n#\tBackups: Martin\n\n# Software Freedom Conservancy\n#\tMain contact: Martin\n#\t“Official” contact: David, Matt, Werner\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 20.1083984375,
          "content": "## SPDX-License-Identifier: BSD-3-Clause\n\nifneq ($(words $(CURDIR)),1)\n    $(error Error: Path to the main directory cannot contain spaces)\nendif\ntop := $(CURDIR)\nsrc := src\nsrck := $(top)/util/kconfig\nobj ?= build\noverride obj := $(subst $(top)/,,$(abspath $(obj)))\nxcompile ?= $(obj)/xcompile\nobjutil ?= $(obj)/util\nobjk := $(objutil)/kconfig\nabsobj := $(abspath $(obj))\n\nadditional-dirs :=\n\nVBOOT_HOST_BUILD ?= $(abspath $(objutil)/vboot_lib)\n\nCOREBOOT_EXPORTS := COREBOOT_EXPORTS\nCOREBOOT_EXPORTS += top src srck obj objutil objk\n\nDOTCONFIG ?= $(top)/.config\nKCONFIG_CONFIG = $(DOTCONFIG)\nKCONFIG_AUTOADS := $(obj)/cb-config.ads\nKCONFIG_RUSTCCFG := $(obj)/cb-config.rustcfg\nKCONFIG_AUTOHEADER := $(obj)/config.h\nKCONFIG_AUTOCONFIG := $(obj)/auto.conf\nKCONFIG_DEPENDENCIES := $(obj)/auto.conf.cmd\nKCONFIG_SPLITCONFIG := $(obj)/config/\nKCONFIG_TRISTATE := $(obj)/tristate.conf\nKCONFIG_NEGATIVES := 1\nKCONFIG_WERROR := 1\nKCONFIG_WARN_UNKNOWN_SYMBOLS := 1\nKCONFIG_PACKAGE := CB.Config\nKCONFIG_MAKEFILE_REAL ?= $(objk)/Makefile.real\n\nCOREBOOT_EXPORTS += KCONFIG_CONFIG KCONFIG_AUTOHEADER KCONFIG_AUTOCONFIG\nCOREBOOT_EXPORTS += KCONFIG_DEPENDENCIES KCONFIG_SPLITCONFIG KCONFIG_TRISTATE\nCOREBOOT_EXPORTS += KCONFIG_NEGATIVES\nifeq ($(filter %config,$(MAKECMDGOALS)),)\nCOREBOOT_EXPORTS += KCONFIG_WERROR\nendif\nCOREBOOT_EXPORTS += KCONFIG_WARN_UNKNOWN_SYMBOLS\nCOREBOOT_EXPORTS += KCONFIG_AUTOADS KCONFIG_PACKAGE\nCOREBOOT_EXPORTS += KCONFIG_RUSTCCFG\n\n# Make does not offer a recursive wildcard function, so here's one:\nrwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))\nSYMLINK_LIST = $(call rwildcard,site-local/,symlink.txt)\n\n\n# Directory containing the toplevel Makefile.mk\nTOPLEVEL := .\n\nCONFIG_SHELL := sh\nKBUILD_DEFCONFIG := configs/defconfig\nUNAME_RELEASE := $(shell uname -r)\nHAVE_DOTCONFIG := $(wildcard $(DOTCONFIG))\nHAVE_KCONFIG_MAKEFILE_REAL := $(wildcard $(KCONFIG_MAKEFILE_REAL))\nMAKEFLAGS += -rR --no-print-directory\n\n# Make is silent per default, but 'make V=1' will show all compiler calls.\nQ:=@\nifneq ($(V),1)\nifneq ($(Q),)\n.SILENT:\nMAKEFLAGS += -s\nquiet_errors := 2>/dev/null\nendif\nendif\n\n# Disable implicit/built-in rules to make Makefile errors fail fast.\n.SUFFIXES:\n\nHOSTCFLAGS := -g\nHOSTCXXFLAGS := -g\n\nHOSTPKG_CONFIG ?= pkg-config\nCOREBOOT_EXPORTS += HOSTPKG_CONFIG\n\nPREPROCESS_ONLY := -E -P -x assembler-with-cpp -undef -I .\n\nexport $(COREBOOT_EXPORTS)\n\nall: real-all\n\nhelp_coreboot help::\n\t@echo  '*** coreboot platform targets ***'\n\t@echo  '  Use \"make [target] V=1\" for extra build debug information'\n\t@echo  '  all                     - Build coreboot'\n\t@echo  '  clean                   - Remove coreboot build artifacts'\n\t@echo  '  distclean               - Remove build artifacts and config files'\n\t@echo  '  sphinx                  - Build sphinx documentation for coreboot'\n\t@echo  '  sphinx-lint             - Build sphinx documentation for coreboot with warnings as errors'\n\t@echo  '  filelist                - Show files used in current build'\n\t@echo  '  printall                - Print makefile info for debugging'\n\t@echo  '  gitconfig               - Set up git to submit patches to coreboot'\n\t@echo  '  ctags / ctags-project   - Make ctags file for all of coreboot or current board'\n\t@echo  '  cscope / cscope-project - Make cscope.out file for coreboot or current board'\n\t@echo\n\t@echo  '*** site-local related targets ***'\n\t@echo  '  symlink                 - Create symbolic links from site-local into coreboot tree'\n\t@echo  '  clean-symlink           - Remove symbolic links created by \"make symlink\"'\n\t@echo  '  cleanall-symlink        - Remove all symbolic links in the coreboot tree'\n\t@echo\n\n# This include must come _before_ the pattern rules below!\n# Order _does_ matter for pattern rules.\ninclude $(srck)/Makefile.mk\n\n# The cases where we don't need fully populated $(obj) lists:\n# 1. when no .config exists\n# 2. When no $(obj)/util/kconfig/Makefile.real exists and we're building tools\n# 3. when make config (in any flavour) is run\n# 4. when make distclean is run\n# Don't waste time on reading all Makefile.incs in these cases\nifeq ($(strip $(HAVE_DOTCONFIG)),)\nNOCOMPILE:=1\nendif\nifeq ($(strip $(HAVE_KCONFIG_MAKEFILE_REAL)),)\nifneq ($(MAKECMDGOALS),tools)\nNOCOMPILE:=1\nendif\nendif\nifneq ($(MAKECMDGOALS),)\nifneq ($(filter %config %clean cross% clang iasl lint% help% what-jenkins-does,$(MAKECMDGOALS)),)\nNOCOMPILE:=1\nendif\nifneq ($(filter %clean lint% help% what-jenkins-does,$(MAKECMDGOALS)),)\nNOMKDIR:=1\nUNIT_TEST:=1\nendif\nendif\n\nifneq ($(filter help%, $(MAKECMDGOALS)), )\nNOCOMPILE:=1\nUNIT_TEST:=1\nelse\nifneq ($(filter %-test %-tests %coverage-report, $(MAKECMDGOALS)),)\nifneq ($(filter-out %-test %-tests %coverage-report, $(MAKECMDGOALS)),)\n$(error Cannot mix unit-tests targets with other targets)\nendif\nUNIT_TEST:=1\nNOCOMPILE:=\nendif\nendif\n\n# When building the \"tools\" target, the BUILD_ALL_TOOLS variable needs\n# to be set before reading the tools' Makefiles\nifneq ($(filter tools, $(MAKECMDGOALS)), )\nBUILD_ALL_TOOLS:=1\nendif\n\n$(xcompile): util/xcompile/xcompile\n\trm -f $@\n\t$< $(XGCCPATH) > $@.tmp\n\t\\mv -f $@.tmp $@ 2> /dev/null\n\trm -f $@.tmp\n\nifeq ($(NOCOMPILE),1)\n# We also don't use .xcompile in the no-compile situations, so\n# provide some reasonable defaults.\nHOSTCC ?= $(if $(shell type gcc 2>/dev/null),gcc,cc)\nHOSTCXX ?= g++\n\ninclude $(TOPLEVEL)/Makefile.mk\ninclude $(TOPLEVEL)/payloads/Makefile.mk\ninclude $(TOPLEVEL)/util/testing/Makefile.mk\n-include $(TOPLEVEL)/site-local/Makefile.mk\n-include $(TOPLEVEL)/site-local/Makefile.inc\ninclude $(TOPLEVEL)/tests/Makefile.mk\nprintall real-all:\n\t@echo \"Error: Trying to build, but NOCOMPILE is set.\" >&2\n\t@echo \"  Please file a bug with the following information:\"\n\t@echo \"- MAKECMDGOALS: $(MAKECMDGOALS)\" >&2\n\t@echo \"- HAVE_DOTCONFIG: $(HAVE_DOTCONFIG)\" >&2\n\t@echo \"- HAVE_KCONFIG_MAKEFILE_REAL: $(HAVE_KCONFIG_MAKEFILE_REAL)\" >&2\n\t@exit 1\n\nelse\n\nifneq ($(UNIT_TEST),1)\ninclude $(DOTCONFIG)\nendif\n\n# The toolchain requires xcompile to determine the ARCH_SUPPORTED, so we can't\n# wait for make to generate the file.\n$(if $(wildcard $(xcompile)),, $(shell \\\n\tmkdir -p $(dir $(xcompile)) && \\\n\tutil/xcompile/xcompile $(XGCCPATH) > $(xcompile) || rm -f $(xcompile)))\n\ninclude $(xcompile)\n\nifneq ($(XCOMPILE_COMPLETE),1)\n$(shell rm -f $(xcompile))\n$(error $(xcompile) deleted because it's invalid. \\\n\tRestarting the build should fix that, or explain the problem)\nendif\n\n# reproducible builds\nLANG:=C\nLC_ALL:=C\nTZ:=UTC0\nifneq ($(NOCOMPILE),1)\nSOURCE_DATE_EPOCH := $(shell $(top)/util/genbuild_h/genbuild_h.sh . | sed -n 's/^.define COREBOOT_BUILD_EPOCH\\>.*\"\\(.*\\)\".*/\\1/p')\nendif\n# don't use COREBOOT_EXPORTS to ensure build steps outside the coreboot build system\n# are reproducible\nexport LANG LC_ALL TZ SOURCE_DATE_EPOCH\n\nifneq ($(UNIT_TEST),1)\ninclude toolchain.mk\nendif\n\nstrip_quotes = $(strip $(subst \",,$(subst \\\",,$(1))))\n# fix makefile syntax highlighting after strip macro \\\" \"))\n\nifneq ($(NOCOMPILE),1)\n$(shell rm -f $(CCACHE_STATSLOG))\nendif\n\n# The primary target needs to be here before we include the\n# other files\nreal-all: site-local-target real-target\n\n# must come rather early\n.SECONDARY:\n.SECONDEXPANSION:\n.DELETE_ON_ERROR:\n\n# conf is treated as an intermediate target and may be built after config.h\n# during a clean build due to the way GNU Make handles intermediates when the\n# .SECONDARY target is present, forcing config.h and thus every object out of\n# date on a subsequent no-op build. Mark it as not intermediate to prevent this\n.NOTINTERMEDIATE: $(objutil)/kconfig/conf\n\n$(KCONFIG_AUTOHEADER): $(KCONFIG_CONFIG) $(objutil)/kconfig/conf\n\t$(MAKE) olddefconfig\n\t$(MAKE) syncconfig\n\n$(KCONFIG_AUTOCONFIG): $(KCONFIG_AUTOHEADER)\n\ttrue\n\n$(KCONFIG_AUTOADS): $(KCONFIG_CONFIG) $(KCONFIG_AUTOHEADER) $(objutil)/kconfig/toada\n\t$(objutil)/kconfig/toada CB.Config <$< >$@\n\n$(obj)/%/$(notdir $(KCONFIG_AUTOADS)): $(KCONFIG_AUTOADS)\n\tcp $< $@\n\n# Add a new class of source/object files to the build system\nadd-class= \\\n\t$(eval $(1)-srcs:=) \\\n\t$(eval $(1)-objs:=) \\\n\t$(eval classes+=$(1))\n\n# Special classes are managed types with special behaviour\n# On parse time, for each entry in variable $(1)-y\n# a handler $(1)-handler is executed with the arguments:\n# * $(1): directory the parser is in\n# * $(2): current entry\nadd-special-class= \\\n\t$(eval $(1):=) \\\n\t$(eval special-classes+=$(1))\n\n# Converts one or more source file paths to their corresponding build/ paths.\n# Only .ads, adb, .c and .S get converted to .o, other files (like .ld) keep\n# their name.\n# $1 stage name\n# $2 file path (list)\nsrc-to-obj=\\\n\t$(patsubst $(obj)/%,$(obj)/$(1)/%,\\\n\t$(patsubst $(obj)/$(1)/%,$(obj)/%,\\\n\t$(patsubst 3rdparty/%,$(obj)/%,\\\n\t$(patsubst src/%,$(obj)/%,\\\n\t$(patsubst %.ads,%.o,\\\n\t$(patsubst %.adb,%.o,\\\n\t$(patsubst %.c,%.o,\\\n\t$(patsubst %.S,%.o,\\\n\t$(subst .$(1),,$(2))))))))))\n\n# Converts one or more source file paths to the corresponding build/ paths\n# of their Ada library information (.ali) files.\n# $1 stage name\n# $2 file path (list)\nsrc-to-ali=\\\n\t$(patsubst $(obj)/%,$(obj)/$(1)/%,\\\n\t$(patsubst $(obj)/$(1)/%,$(obj)/%,\\\n\t$(patsubst 3rdparty/%,$(obj)/%,\\\n\t$(patsubst src/%,$(obj)/%,\\\n\t$(patsubst %.ads,%.ali,\\\n\t$(patsubst %.adb,%.ali,\\\n\t$(subst .$(1),,\\\n\t$(filter %.ads %.adb,$(2)))))))))\n\n# Clean -y variables, include Makefile.mk & Makefile.inc\n# Add paths to files in X-y to X-srcs\n# Add subdirs-y to subdirs\nincludemakefiles= \\\n\t$(if $(wildcard $(1)), \\\n\t\t$(foreach class,classes subdirs $(classes) $(special-classes), $(eval $(class)-y:=)) \\\n\t\t$(eval -include $(1)) \\\n\t\t$(foreach class,$(classes-y), $(call add-class,$(class))) \\\n\t\t$(foreach special,$(special-classes), \\\n\t\t\t$(foreach item,$($(special)-y), $(call $(special)-handler,$(dir $(1)),$(item)))) \\\n\t\t$(foreach class,$(classes), \\\n\t\t\t$(eval $(class)-srcs+= \\\n\t\t\t\t$$(subst $(absobj)/,$(obj)/, \\\n\t\t\t\t$$(subst $(top)/,, \\\n\t\t\t\t$$(abspath $$(subst $(dir $(1))/,/,$$(addprefix $(dir $(1)),$$($(class)-y)))))))) \\\n\t\t$(eval subdirs+=$$(subst $(CURDIR)/,,$$(wildcard $$(abspath $$(addprefix $(dir $(1)),$$(subdirs-y)))))))\n\n# For each path in $(subdirs) call includemakefiles\n# Repeat until subdirs is empty\n# TODO: Remove Makefile.inc support\nevaluate_subdirs= \\\n\t$(eval cursubdirs:=$(subdirs)) \\\n\t$(eval subdirs:=) \\\n\t$(foreach dir,$(cursubdirs), \\\n\t\t$(eval $(call includemakefiles,$(dir)/Makefile.mk))) \\\n\t$(foreach dir,$(cursubdirs), \\\n\t\t$(eval $(call includemakefiles,$(dir)/Makefile.inc))) \\\n\t$(if $(subdirs),$(eval $(call evaluate_subdirs)))\n\n# collect all object files eligible for building\nsubdirs:=$(TOPLEVEL)\npostinclude-hooks :=\n\n# Don't iterate through Makefiles under src/ when building tests\nifneq ($(UNIT_TEST),1)\n$(eval $(call evaluate_subdirs))\nelse\ninclude $(TOPLEVEL)/tests/Makefile.mk\nendif\n\nifeq ($(FAILBUILD),1)\n$(error cannot continue build)\nendif\n\n# Run hooks registered by subdirectories that need to be evaluated after all files have been parsed\n$(eval $(postinclude-hooks))\n\n# Eliminate duplicate mentions of source files in a class\n$(foreach class,$(classes),$(eval $(class)-srcs:=$(sort $($(class)-srcs))))\n\nifeq ($(CONFIG_IWYU),y)\nMAKEFLAGS += -k\nSAVE_IWYU_OUTPUT := 2>&1 | grep \"should\\|\\#include\\|---\\|include-list\\|^[[:blank:]]\\?\\'\" | tee -a $$(obj)/iwyu.txt\nendif\n\n# Build Kconfig .ads if necessary\nifeq ($(CONFIG_ROMSTAGE_ADA),y)\nromstage-srcs += $(obj)/romstage/$(notdir $(KCONFIG_AUTOADS))\nendif\nifeq ($(CONFIG_RAMSTAGE_ADA),y)\nramstage-srcs += $(obj)/ramstage/$(notdir $(KCONFIG_AUTOADS))\nendif\n\n# To track dependencies, we need all Ada specification (.ads) files in\n# *-srcs. Extract / filter all specification files that have a matching\n# body (.adb) file here (specifications without a body are valid sources\n# in Ada).\n$(foreach class,$(classes),$(eval $(class)-extra-specs := \\\n\t$(filter \\\n\t\t$(addprefix %/,$(patsubst %.adb,%.ads,$(notdir $(filter %.adb,$($(class)-srcs))))), \\\n\t\t$(filter %.ads,$($(class)-srcs)))))\n$(foreach class,$(classes),$(eval $(class)-srcs := \\\n\t$(filter-out $($(class)-extra-specs),$($(class)-srcs))))\n\n$(foreach class,$(classes),$(eval $(class)-objs:=$(call src-to-obj,$(class),$($(class)-srcs))))\n$(foreach class,$(classes),$(eval $(class)-alis:=$(call src-to-ali,$(class),$($(class)-srcs))))\n\n# For Ada includes\n$(foreach class,$(classes),$(eval $(class)-ada-dirs:=$(sort $(dir $(filter %.ads %.adb,$($(class)-srcs)) $($(class)-extra-specs)))))\n\n# Call post-processors if they're defined\n$(foreach class,$(classes),\\\n\t$(if $(value $(class)-postprocess),$(eval $(call $(class)-postprocess,$($(class)-objs)))))\n\nallsrcs:=$(foreach var, $(addsuffix -srcs,$(classes)), $($(var)))\nallobjs:=$(foreach var, $(addsuffix -objs,$(classes)), $($(var)))\nalldirs:=$(sort $(abspath $(dir $(allobjs))))\n\n# Reads dependencies from an Ada library information (.ali) file\n# Only basenames (with suffix) are preserved so we have to look the\n# paths up in $($(stage)-srcs).\n# $1 stage name\n# $2 ali file\ncreate_ada_deps=$$(if $(2),\\\n\tgnat.adc \\\n\t$$(filter \\\n\t\t$$(addprefix %/,$$(shell sed -ne's/^D \\([^\\t]\\+\\).*$$$$/\\1/p' $(2) 2>/dev/null)), \\\n\t\t$$($(1)-srcs) $$($(1)-extra-specs)))\n\n# macro to define template macros that are used by use_template macro\ndefine create_cc_template\n# $1 obj class\n# $2 source suffix (c, S, ld, ...)\n# $3 additional compiler flags\n# $4 additional dependencies\n# $5 generated header dependencies\nifn$(EMPTY)def $(1)-objs_$(2)_template\nde$(EMPTY)fine $(1)-objs_$(2)_template\nifn$(EMPTY)eq ($(filter ads adb,$(2)),)\n$$(call src-to-obj,$1,$$(1).$2): $$(1).$2 $$(call create_ada_deps,$1,$$(call src-to-ali,$1,$$(1).$2)) $(4) | $(5)\n\t@printf \"    GCC        $$$$(subst $$$$(obj)/,,$$$$(@))\\n\"\n\t$(GCC_$(1)) \\\n\t\t$$$$(ADAFLAGS_$(1)) $$$$(addprefix -I,$$$$($(1)-ada-dirs)) \\\n\t\t$(3) -c -o $$$$@ $$$$<\nel$(EMPTY)se\n$$(call src-to-obj,$1,$$(1).$2): $$(1).$2 $(KCONFIG_AUTOHEADER) $(4) | $(5)\n\t@printf \"    CC         $$$$(subst $$$$(obj)/,,$$$$(@))\\n\"\n\t$(CC_$(1)) \\\n\t\t-MMD $$$$(CPPFLAGS_$(1)) $$$$(CFLAGS_$(1)) -MT $$$$(@) \\\n\t\t$(3) -c -o $$$$@ $$$$< $(SAVE_IWYU_OUTPUT)\nend$(EMPTY)if\nen$(EMPTY)def\nend$(EMPTY)if\nendef\n\nfiletypes-of-class=$(subst .,,$(sort $(suffix $($(1)-srcs))))\n$(foreach class,$(classes), \\\n\t$(foreach type,$(call filetypes-of-class,$(class)), \\\n\t\t$(eval $(class)-$(type)-ccopts += $(generic-$(type)-ccopts) $($(class)-generic-ccopts)) \\\n\t\t$(if $(generic-objs_$(type)_template_gen),$(eval $(call generic-objs_$(type)_template_gen,$(class))),\\\n\t\t$(eval $(call create_cc_template,$(class),$(type),$($(class)-$(type)-ccopts),$($(class)-$(type)-deps),$($(class)-$(type)-gen-deps))))))\n\nforeach-src=$(foreach file,$($(1)-srcs),$(eval $(call $(1)-objs_$(subst .,,$(suffix $(file)))_template,$(basename $(file)))))\n$(eval $(foreach class,$(classes),$(call foreach-src,$(class))))\n\n# To supported complex package initializations, we need to call the\n# emitted code explicitly. gnatbind gathers all the calls for us\n# and exports them as a procedure $(stage)_adainit(). Every stage that\n# uses Ada code has to call it!\ndefine gnatbind_template\n# $1 class\n$$(obj)/$(1)/b__$(1).adb: $$$$(filter-out $$(obj)/$(1)/b__$(1).ali,$$$$($(1)-alis))\n\t@printf \"    BIND       $$(subst $$(obj)/,,$$@)\\n\"\n\t# We have to give gnatbind a simple filename (without leading\n\t# path components) so just cd there.\n\tcd $$(dir $$@) && \\\n\t\t$$(GNATBIND_$(1)) -a -n \\\n\t\t\t--RTS=$$(absobj)/libgnat-$$(ARCH-$(1)-y)/ \\\n\t\t\t-L$(1)_ada -o $$(notdir $$@) \\\n\t\t\t$$(subst $$(dir $$@),,$$^)\n$$(obj)/$(1)/b__$(1).o: $$(obj)/$(1)/b__$(1).adb\n\t@printf \"    GCC        $$(subst $$(obj)/,,$$@)\\n\"\n\t$(GCC_$(1)) $$(ADAFLAGS_$(1)) -c -o $$@ $$<\n$(1)-objs += $$(obj)/$(1)/b__$(1).o\n$($(1)-alis): %.ali: %.o ;\nendef\n\n$(eval $(foreach class,$(filter-out libgnat-%,$(classes)), \\\n\t$(if $($(class)-alis),$(call gnatbind_template,$(class)))))\n\nDEPENDENCIES += $(addsuffix .d,$(basename $(allobjs)))\n-include $(DEPENDENCIES)\n\nprintall:\n\t@$(foreach class,$(classes), echo $(class)-objs: $($(class)-objs) | tr ' ' '\\n'; echo; )\n\t@echo alldirs: $(alldirs) | tr ' ' '\\n'; echo\n\t@echo allsrcs: $(allsrcs) | tr ' ' '\\n'; echo\n\t@echo DEPENDENCIES: $(DEPENDENCIES) | tr ' ' '\\n'; echo\n\t@$(foreach class,$(special-classes),echo $(class):'$($(class))' | tr ' ' '\\n'; echo; )\nendif\n\nifndef NOMKDIR\n$(shell mkdir -p $(KCONFIG_SPLITCONFIG) $(objk)/lxdialog $(additional-dirs) $(alldirs))\nendif\n\n$(obj)/project_filelist.txt:\n\tif [ -z \"$(wildcard $(obj)/coreboot.rom)\" ]; then \\\n\t\techo \"*** Error: Project must be built before generating file list ***\"; \\\n\t\texit 1; \\\n\tfi\n\tfind $(obj) -path \"$(obj)/util\" -prune -o -path \"$(obj)/external\" -prune -o -name \"*.d\" -exec cat {} \\; | \\\n\t  sed \"s|$(top)/||\" | sed 's/[:\\\\]/ /g' | sed 's/ /\\n/g' | sort | uniq | \\\n\t  grep -v '\\.o$$' > $(obj)/project_filelist.txt\n\nfilelist: $(obj)/project_filelist.txt\n\tprintf \"\\nFiles used in build:\\n\"\n\tcat $(obj)/project_filelist.txt\n\n#works with either exuberant ctags or ctags.emacs\nctags-project: clean-ctags $(obj)/project_filelist.txt\n\tcat $(obj)/project_filelist.txt | \\\n\t  xargs ctags -o tags\n\ncscope-project: clean-cscope $(obj)/project_filelist.txt\n\tcat $(obj)/project_filelist.txt | xargs cscope -b\n\ncscope:\n\tcscope -bR\n\nsphinx:\n\t$(MAKE) -C Documentation sphinx\n\nsphinx-lint:\n\t$(MAKE) SPHINXOPTS=-W -C Documentation sphinx\n\n# Look at all of the files in the SYMLINK_LIST and create the symbolic links\n# into the coreboot tree. Each symlink.txt file in site-local should be in the\n# directory linked from and have a single line with the path to the location to\n# link to. The path must be relative to the top of the coreboot directory.\nsymlink:\n\tif [ -z \"$(SYMLINK_LIST)\" ]; then \\\n\t\techo \"No site-local symbolic links to create.\"; \\\n\t\texit 0; \\\n\tfi; \\\n\techo \"Creating symbolic links..\"; \\\n\tfor link in $(SYMLINK_LIST); do \\\n\t\tLINKTO=\"$(top)/$$(head -n 1 \"$${link}\")\"; \\\n\t\tLINKFROM=$$(dirname \"$$(realpath \"$${link}\")\"); \\\n\t\tif [ -L \"$${LINKTO}\" ]; then \\\n\t\t\techo \"  $${LINKTO} exists - skipping\"; \\\n\t\t\tcontinue; \\\n\t\tfi; \\\n\t\tLINKTO=\"$$(realpath -m \"$${LINKTO}\")\" 2>/dev/null; \\\n\t\tif [ \"$${LINKTO}\" = \"$$(echo \"$${LINKTO}\" | sed \"s|^$(top)||\" )\" ]; then \\\n\t\t\techo \"  FAILED: $${LINKTO} is outside of current directory.\" >&2; \\\n\t\t\tcontinue; \\\n\t\tfi; \\\n\t\tif [ ! -e \"$${LINKTO}\" ]; then \\\n\t\t\techo \"  LINK $${LINKTO} -> $${LINKFROM}\"; \\\n\t\t\tln -s \"$${LINKFROM}\" \"$${LINKTO}\" || \\\n\t\t\t\techo \"FAILED: Could not create link.\" >&2; \\\n\t\telse \\\n\t\t\techo  \"  FAILED: $${LINKTO} exists as a file or directory.\" >&2; \\\n\t\tfi; \\\n\tdone\n\nclean-symlink:\n\tif [ -z \"$(SYMLINK_LIST)\" ]; then \\\n\t\techo \"No site-local symbolic links to clean.\"; \\\n\t\texit 0; \\\n\tfi; \\\n\techo \"Removing site-local symbolic links from tree..\"; \\\n\tfor link in $(SYMLINK_LIST); do \\\n\t\tSYMLINK=\"$(top)/$$(head -n 1 \"$${link}\")\"; \\\n\t\tif [ \"$${SYMLINK}\" = \"$$(echo \"$${SYMLINK}\" | sed \"s|^$(top)||\")\" ]; then \\\n\t\t\techo \"  FAILED: $${SYMLINK} is outside of current directory.\" >&2; \\\n\t\t\tcontinue; \\\n\t\telif [ ! -L \"$${SYMLINK}\" ]; then \\\n\t\t\techo \"  $${SYMLINK} does not exist - skipping\"; \\\n\t\t\tcontinue; \\\n\t\tfi; \\\n\t\tif [ -L \"$${SYMLINK}\" ]; then \\\n\t\t\tREALDIR=\"$$(realpath \"$${link}\")\"; \\\n\t\t\techo \"  UNLINK $${link} (linked from $${REALDIR})\"; \\\n\t\t\trm \"$${SYMLINK}\"; \\\n\t\tfi; \\\n\tdone; \\\n\tEXISTING_SYMLINKS=\"$$(find $(top) -type l | grep -v \"3rdparty\\|crossgcc\" )\"; \\\n\tif [ -z \"$${EXISTING_SYMLINKS}\" ]; then \\\n\t\techo \"  No remaining symbolic links found in tree.\"; \\\n\telse \\\n\t\techo \"  Remaining symbolic links found:\"; \\\n\t\tfor link in $${EXISTING_SYMLINKS}; do \\\n\t\t\techo \"    $${link}\"; \\\n\t\tdone; \\\n\tfi\n\ncleanall-symlink:\n\techo \"Deleting all symbolic links in the coreboot tree (excluding 3rdparty & crossgcc)\"; \\\n\tEXISTING_SYMLINKS=\"$$(find $(top) -type l | grep -v \"3rdparty\\|crossgcc\" )\"; \\\n\tfor link in $${EXISTING_SYMLINKS}; do \\\n\t\tif [ -L \"$${link}\" ]; then \\\n\t\t\tREALDIR=\"$$(realpath \"$${link}\")\"; \\\n\t\t\techo \"  UNLINK $${link} (linked from $${REALDIR})\"; \\\n\t\t\trm \"$${link}\"; \\\n\t\tfi; \\\n\tdone\n\nclean-for-update:\n\trm -rf $(obj) .xcompile\n\nclean: clean-for-update clean-utils clean-payloads\n\trm -f .ccwrap\n\nclean-cscope:\n\trm -f cscope.out\n\nclean-ctags:\n\trm -f tags\n\nclean-utils:\n\t$(foreach tool, $(TOOLLIST), \\\n\t\t$(MAKE) -C util/$(tool) clean MFLAGS= MAKEFLAGS= ;)\n\ndistclean-utils:\n\t$(foreach tool, $(TOOLLIST), \\\n\t\t$(MAKE) -C util/$(tool) distclean MFLAGS= MAKEFLAGS= ; \\\n\t\trm -f /util/$(tool)/junit.xml;)\n\ndistclean: clean clean-ctags clean-cscope distclean-payloads distclean-utils\n\trm -f .config .config.old ..config.tmp* .kconfig.d .tmpconfig* .ccwrap .xcompile\n\trm -rf coreboot-builds coreboot-builds-chromeos\n\trm -f abuild*.xml junit.xml* util/lint/junit.xml\n\n.PHONY: $(PHONY) clean clean-for-update clean-cscope cscope distclean sphinx sphinx-lint\n.PHONY: ctags-project cscope-project clean-ctags\n.PHONY: symlink clean-symlink cleanall-symlink\n"
        },
        {
          "name": "Makefile.mk",
          "type": "blob",
          "size": 56.7275390625,
          "content": "# SPDX-License-Identifier: GPL-2.0-only\n\nifneq ($(NOCOMPILE),1)\nGIT:=$(shell git -C \"$(top)\" rev-parse --git-dir 1>/dev/null 2>&1 \\\n\t&& command -v git)\nelse\nGIT:=\nendif\n\n#######################################################################\n# normalize Kconfig variables in a central place\nCONFIG_CBFS_PREFIX:=$(call strip_quotes,$(CONFIG_CBFS_PREFIX))\nCONFIG_FMDFILE:=$(call strip_quotes,$(CONFIG_FMDFILE))\nCONFIG_DEVICETREE:=$(call strip_quotes, $(CONFIG_DEVICETREE))\nCONFIG_OVERRIDE_DEVICETREE:=$(call strip_quotes, $(CONFIG_OVERRIDE_DEVICETREE))\nCONFIG_CHIPSET_DEVICETREE:=$(call strip_quotes, $(CONFIG_CHIPSET_DEVICETREE))\nCONFIG_MEMLAYOUT_LD_FILE:=$(call strip_quotes, $(CONFIG_MEMLAYOUT_LD_FILE))\n\n#######################################################################\n# misleadingly named, this is the coreboot version\nifeq ($(KERNELVERSION),)\nifeq ($(BUILD_TIMELESS),1)\nKERNELVERSION := -TIMELESS--LESSTIME-\nelse\nKERNELVERSION := $(strip $(if $(GIT),\\\n\t$(shell git describe --abbrev=12 --dirty --always || git describe),\\\n\t$(if $(wildcard $(top)/.coreboot-version),\\\n\t\t$(shell cat $(top)/.coreboot-version),\\\n\t\tcoreboot-unknown$(KERNELREVISION))))\nendif\nendif\nCOREBOOT_EXPORTS += KERNELVERSION\n\n#######################################################################\n# Basic component discovery\nMAINBOARDDIR=$(call strip_quotes,$(CONFIG_MAINBOARD_DIR))\nVARIANT_DIR:=$(call strip_quotes,$(CONFIG_VARIANT_DIR))\nCARRIER_DIR:=$(call strip_quotes,$(CONFIG_CARRIER_DIR))\nCOREBOOT_EXPORTS += MAINBOARDDIR VARIANT_DIR CARRIER_DIR\n\n## Final build results, which CBFSTOOL uses to create the final\n## rom image file, are placed under $(objcbfs).\n## These typically have suffixes .debug .elf .bin and .map\nobjcbfs := $(obj)/cbfs/$(CONFIG_CBFS_PREFIX)\nadditional-dirs += $(objcbfs)\nCOREBOOT_EXPORTS += objcbfs\n\n## Based on the active configuration, Makefile conditionally collects\n## the required assembly includes and saves them in a file.\n## Such files that do not have a clear one-to-one relation to a source\n## file under src/ are placed and built under $(objgenerated)\nobjgenerated := $(obj)/generated\nadditional-dirs += $(objgenerated)\nCOREBOOT_EXPORTS += objgenerated\n\n## CCACHE_EXTRAFILES can be set by individual rules to help CCACHE\n## discover dependencies it might not notice on its own (e.g. asm (\".incbin\")).\nCOREBOOT_EXPORTS += CCACHE_EXTRAFILES\n\n#######################################################################\n# root rule to resolve if in build mode (ie. configuration exists)\nreal-target: $(obj)/config.h coreboot files_added show_coreboot show_notices\ncoreboot: $(obj)/coreboot.rom $(obj)/cbfstool $(obj)/rmodtool $(obj)/ifwitool $(obj)/cse_fpt $(obj)/cse_serger\n\n# This target can be used to run scripts or additional targets\n# after the build completes by creating a target named 'build_complete::'\n.PHONY: build_complete\nbuild_complete:: | coreboot\n\n# This target can be used to run rules after all files were added to CBFS,\n# for example to process FMAP regions or the entire image.\n.PHONY: files_added\nfiles_added:: | build_complete\n\n# This target should come just before the show_notices target.  If there\n# are no notices, the build should finish with the text of what was just\n# built.\n.PHONY: show_coreboot\nshow_coreboot: | files_added\n\t$(CBFSTOOL) $(obj)/coreboot.rom print -r $(subst $(spc),$(comma),$(all-regions))\n\tprintf \"\\nBuilt %s (%s)\\n\" $(MAINBOARDDIR) $(CONFIG_MAINBOARD_PART_NUMBER)\n\tif [ -f \"$(CCACHE_STATSLOG)\" ]; then \\\n\t\tprintf \"\\nccache statistics\\n\"; \\\n\t\t$(CCACHE) --show-log-stats -v; \\\n\tfi\n\n# This is intended to run at the *very end* of the build to show warnings\n# notices and the like.  If another target needs to be added, add it\n# BEFORE this target.\n.PHONY: show_notices\nshow_notices:: | show_coreboot\n\n# This rule allows the site-local makefile to run before starting the actual\n# coreboot build. It should not be used in the regular coreboot makefiles.\n# Note: This gets run after the immediate makefile code like updating the\n# submodules, but before any other targets.\n.PHONY: site-local-target\nsite-local-target::\n\n#######################################################################\n# our phony targets\nPHONY+= clean-abuild coreboot check-style build_complete\n\n#######################################################################\n# root source directories of coreboot\n# site-local Makefile.mk must go first to override default locations (for binaries etc.)\nsubdirs-y := site-local\n\nsubdirs-y += src/lib src/commonlib/ src/console src/device src/acpi src/superio/common\nsubdirs-$(CONFIG_EC_ACPI) += src/ec/intel\nsubdirs-y += src/ec/acpi $(wildcard src/ec/*/*) $(wildcard src/southbridge/*/*)\nsubdirs-y += $(wildcard src/soc/*) $(wildcard src/soc/*/common) $(filter-out $(wildcard src/soc/*/common),$(wildcard src/soc/*/*))\nsubdirs-y += $(wildcard src/northbridge/*/*)\nsubdirs-y += $(filter-out src/superio/common,$(wildcard src/superio/*)) $(wildcard src/superio/*/*)\nsubdirs-y += $(wildcard src/drivers/*) $(wildcard src/drivers/*/*) $(wildcard src/drivers/*/*/*)\nsubdirs-y += src/cpu src/vendorcode\nsubdirs-y += util/cbfstool util/sconfig util/nvramtool util/pgtblgen util/amdfwtool\nsubdirs-y += util/futility util/marvell util/bincfg util/supermicro util/qemu\nsubdirs-y += util/ifdtool\nsubdirs-y += $(wildcard src/arch/*)\nsubdirs-y += src/mainboard/$(MAINBOARDDIR)\nsubdirs-y += src/security\nsubdirs-y += payloads payloads/external\nsubdirs-$(CONFIG_SBOM) += src/sbom\nsubdirs-y += util/checklist util/testing\n\n#######################################################################\n# Add source classes and their build options\nclasses-y := ramstage romstage bootblock decompressor postcar smm smmstub cpu_microcode verstage\n\n# Add a special 'all' class to add sources to all stages\n$(call add-special-class,all)\nall-handler = $(foreach class,bootblock verstage romstage postcar ramstage,$(eval $(class)-y += $(2)))\n\n$(call add-special-class,all_x86)\nall_x86-handler = $(foreach class,bootblock verstage_x86 romstage postcar ramstage,$(eval $(class)-y += $(2)))\n\n$(call add-special-class,verstage_x86)\nifeq ($(CONFIG_ARCH_VERSTAGE_X86_32)$(CONFIG_ARCH_VERSTAGE_X86_64),y)\nverstage_x86-handler = $(eval verstage-y += $(2))\nelse\nverstage_x86-handler =\nendif\n\n# Add dynamic classes for rmodules\n$(foreach supported_arch,$(ARCH_SUPPORTED), \\\n\t    $(eval $(call define_class,rmodules_$(supported_arch),$(supported_arch))))\n# Provide a macro to determine environment for free standing rmodules.\n$(foreach supported_arch,$(ARCH_SUPPORTED), \\\n\t$(eval rmodules_$(supported_arch)-generic-ccopts += -D__RMODULE__))\n\n#######################################################################\n# Helper functions for math, strings, and various file placement matters.\n# macros work on all formats understood by printf(1)\n# values are space separated if using more than one value\n#\n# int-add:        adds an arbitrary length list of integers\n# int-subtract:   subtracts the second of two integers from the first\n# int-multiply:   multiplies an arbitrary length list of integers\n# int-divide:     divides the first integer by the second\n# int-remainder:  arithmetic remainder of the first number divided by the second\n# int-shift-left: Shift $1 left by $2 bits\n# int-lt:         1 if the first value is less than the second.  0 otherwise\n# int-gt:         1 if the first values is greater than the second.  0 otherwise\n# int-eq:         1 if the two values are equal.  0 otherwise\n# int-align:      align $1 to $2 units\n# file-size:      returns the filesize of the given file\n# tolower:        returns the value in all lowercase\n# toupper:        returns the value in all uppercase\n# ws_to_under:    returns the value with any whitespace changed to underscores\n# get_fmap_value  returns the value of a given FMAP field from fmap_config.h\n_toint=$(shell printf \"%d\" $1)\n_tohex=$(shell printf 0x\"%x\" $1)\n_int-add2=$(shell expr $(call _toint,$1) + $(call _toint,$2))\nint-add=$(if $(filter 1,$(words $1)),$(strip $1),$(call int-add,$(call _int-add2,$(word 1,$1),$(word 2,$1)) $(wordlist 3,$(words $1),$1)))\nint-subtract=$(if $(filter 1,$(words $1)),$(strip $1),$(shell expr $(call _toint,$(word 1,$1)) - $(call _toint,$(word 2,$1))))\n_int-multiply2=$(shell expr $(call _toint,$1) \\* $(call _toint,$2))\nint-multiply=$(if $(filter 1,$(words $1)),$(strip $1),$(call int-multiply,$(call _int-multiply2,$(word 1,$1),$(word 2,$1)) $(wordlist 3,$(words $1),$1)))\nint-divide=$(if $(filter 1,$(words $1)),$(strip $1),$(shell expr $(call _toint,$(word 1,$1)) / $(call _toint,$(word 2,$1))))\nint-remainder=$(if $(filter 1,$(words $1)),$(strip $1),$(shell expr $(call _toint,$(word 1,$1)) % $(call _toint,$(word 2,$1))))\nint-shift-left=$(shell echo -n $$(($(call _toint,$(word 1, $1)) << $(call _toint,$(word 2, $1)))))\nint-lt=$(if $(filter 1,$(words $1)),$(strip $1),$(shell expr $(call _toint,$(word 1,$1)) \\< $(call _toint,$(word 2,$1))))\nint-gt=$(if $(filter 1,$(words $1)),$(strip $1),$(shell expr $(call _toint,$(word 1,$1)) \\> $(call _toint,$(word 2,$1))))\nint-eq=$(if $(filter 1,$(words $1)),$(strip $1),$(shell expr $(call _toint,$(word 1,$1)) = $(call _toint,$(word 2,$1))))\nint-align=$(shell A=$(call _toint,$1) B=$(call _toint,$2); expr $$A + \\( \\( $$B - \\( $$A % $$B \\) \\) % $$B \\) )\nint-align-down=$(shell A=$(call _toint,$1) B=$(call _toint,$2); expr $$A - \\( $$A % $$B \\) )\nfile-size=$(strip $(shell wc -c \"$1\" | cut -f 1 -d ' '))\ntolower=$(shell echo '$1' | tr '[:upper:]' '[:lower:]')\ntoupper=$(shell echo '$1' | tr '[:lower:]' '[:upper:]')\nws_to_under=$(shell echo '$1' | tr ' \\t' '_')\nget_fmap_value=$(shell awk '$$2 == \"$1\" {print $$3}' $(obj)/fmap_config.h)\n\n#######################################################################\n# Helper functions for ramstage postprocess\nspc :=\nspc := $(spc) $(spc)\ncomma := ,\n\n# Returns all files and dirs below `dir` (recursively).\n# files-below-dir,dir,files\nfiles-below-dir=$(filter $(1)%,$(2))\n\n# Returns all dirs below `dir` (recursively).\n# dirs-below-dir,dir,files\ndirs-below-dir=$(filter-out $(1),$(sort $(dir $(call files-below-dir,$(1),$(2)))))\n\n# Returns all files directly in `dir` (non-recursively).\n# files-in-dir,dir,files\nfiles-in-dir=$(filter-out $(addsuffix %,$(call dirs-below-dir,$(1),$(2))),$(call files-below-dir,$(1),$(2)))\n\n#######################################################################\n# reduce command line length by linking the objects of each\n# directory into an intermediate file\nramstage-postprocess=$$(eval DEPENDENCIES+=$$(addsuffix .d,$$(basename $(1)))) \\\n\t$(foreach d,$(sort $(dir $(filter-out %.ld,$(1)))), \\\n\t$(eval $(d)ramstage.a: $(call files-in-dir,$(d),$(filter-out %.ld,$(1))); rm -f $$@ && $(AR_ramstage) rcsT $$@ $$^ ) \\\n\t$(eval ramstage-objs:=$(d)ramstage.a $(filter-out $(filter-out %.ld, $(call files-in-dir,$(d),$(1))),$(ramstage-objs))))\n\ndecompressor-generic-ccopts += -D__DECOMPRESSOR__\nbootblock-generic-ccopts += -D__BOOTBLOCK__\nromstage-generic-ccopts += -D__ROMSTAGE__\nramstage-generic-ccopts += -D__RAMSTAGE__\nifeq ($(CONFIG_COVERAGE),y)\nramstage-c-ccopts += -fprofile-arcs -ftest-coverage\nendif\nifneq ($(GIT),)\nifneq ($(UPDATED_SUBMODULES),1)\n$(info Updating git submodules.)\n# try to fetch non-optional submodules if the source is under git\nforgetthis:=$(shell git submodule update --init $(quiet_errors))\n# Checkout Cmocka repository\nforgetthis:=$(shell git submodule update --init --checkout 3rdparty/cmocka $(quiet_errors))\nifeq ($(CONFIG_USE_BLOBS),y)\n# These items are necessary because each has update=none in .gitmodules.  They are ignored\n# until expressly requested and enabled with --checkout\nforgetthis:=$(shell git submodule update --init --checkout 3rdparty/blobs $(quiet_errors))\nforgetthis:=$(shell git submodule update --init --checkout 3rdparty/intel-microcode $(quiet_errors))\nifeq ($(CONFIG_FSP_USE_REPO),y)\nforgetthis:=$(shell git submodule update --init --checkout 3rdparty/fsp $(quiet_errors))\nendif\nifeq ($(CONFIG_USE_AMD_BLOBS),y)\nforgetthis:=$(shell git submodule update --init --checkout 3rdparty/amd_blobs $(quiet_errors))\nendif\nifeq ($(CONFIG_USE_QC_BLOBS),y)\nforgetthis:=$(shell git submodule update --init --checkout 3rdparty/qc_blobs $(quiet_errors))\nendif\nendif\nUPDATED_SUBMODULES:=1\nCOREBOOT_EXPORTS += UPDATED_SUBMODULES\n\nendif\nendif # GIT != \"\"\n\npostcar-c-deps:=$$(OPTION_TABLE_H)\nramstage-c-deps:=$$(OPTION_TABLE_H)\nromstage-c-deps:=$$(OPTION_TABLE_H)\nverstage-c-deps:=$$(OPTION_TABLE_H)\nbootblock-c-deps:=$$(OPTION_TABLE_H)\n$(foreach type,ads adb, \\\n  $(foreach stage,$(COREBOOT_STANDARD_STAGES), \\\n    $(eval $(stage)-$(type)-deps := \\\n\t$(obj)/$(stage)/$(notdir $(KCONFIG_AUTOADS)) \\\n\t$(obj)/libgnat-$(ARCH-$(stage)-y)/libgnat.a)))\n\n# Add handler to copy linker scripts\ndefine generic-objs_ld_template_gen\nde$(EMPTY)fine $(1)-objs_ld_template\n$$(call src-to-obj,$1,$$(1).ld): $$(1).ld $(obj)/config.h $(obj)/fmap_config.h\n\t@printf \"    CP         $$$$(subst $$$$(obj)/,,$$$$(@))\\n\"\n\t$$(CC_$(1)) -MMD $$(CPPFLAGS_$(1)) $$($(1)-ld-ccopts) $(PREPROCESS_ONLY) -include $(obj)/config.h -MT $$$$@ -o $$$$@ $$$$<\nen$(EMPTY)def\nendef\n\n# Add handler to deal with archives\ndefine generic-objs_a_template_gen\nde$(EMPTY)fine $(1)-objs_a_template\n$$(call src-to-obj,$1,$$(1).a): $$(1).a\n\t@printf \"    AR         $$$$(subst $$$$(obj)/,,$$$$(@))\\n\"\n\t$$$$(AR_$(1)) rcsT $$$$@.tmp $$$$<\n\tmv $$$$@.tmp $$$$@\nen$(EMPTY)def\nendef\n\n# Add handler to add no rules for manual files\ndefine generic-objs_manual_template_gen\n# do nothing\nendef\n\n#######################################################################\n# Add handler to compile ACPI's ASL\n# arg1: base file name\n# arg2: y or n for including in cbfs. defaults to y\n\n# Empty resource templates were marked as a warning in IASL with the comment\n# \"This would appear to be worthless in real-world ASL code.\", which is\n# possibly true in many cases.  In other cases it seems that an empty\n# ResourceTemplate is the correct code.\n# As it's valid ASL, disable the warning.\nEMPTY_RESOURCE_TEMPLATE_WARNING = 3150\n\nIASL_WARNINGS_LIST = $(EMPTY_RESOURCE_TEMPLATE_WARNING)\n\nIGNORED_IASL_WARNINGS = $(addprefix -vw , $(IASL_WARNINGS_LIST))\n\ndefine asl_template\n$(CONFIG_CBFS_PREFIX)/$(1).aml-file = $(obj)/$(1).aml\n$(CONFIG_CBFS_PREFIX)/$(1).aml-type = raw\n$(CONFIG_CBFS_PREFIX)/$(1).aml-compression = none\nifeq ($(CONFIG_SOC_AMD_COMMON_BLOCK_LPC_SPI_DMA),y)\n$(CONFIG_CBFS_PREFIX)/$(1).aml-align = 64\nendif\ncbfs-files-$(if $(2),$(2),y) += $(CONFIG_CBFS_PREFIX)/$(1).aml\n$(eval DEPENDENCIES += $(obj)/$(1).d)\n$(obj)/$(1).aml: $(src)/mainboard/$(MAINBOARDDIR)/$(1).asl $(obj)/config.h\n\t@printf \"    IASL       $$(subst $(top)/,,$$(@))\\n\"\n\t$(CC_ramstage) -x assembler-with-cpp -E -MMD -MT $$(@) $$(CPPFLAGS_ramstage) -D__ACPI__ -P -include $(src)/include/kconfig.h -I$(obj) -I$(src) -I$(src)/include -I$(src)/arch/$(ARCHDIR-$(ARCH-ramstage-y))/include -I$(src)/mainboard/$(MAINBOARDDIR) $$< -o $(obj)/$(1).asl\n\tcd $$(dir $$@); $(IASL) $(IGNORED_IASL_WARNINGS) -we -p $$(notdir $$@) $(1).asl\n\techo \"    IASL       \"$(IASL_WARNINGS_LIST)\" warning types were ignored!\"\n\tif ! $(IASL) -d $$@ 2>&1 | grep -Eq 'ACPI (Warning|Error)'; then\t\\\n\t\techo \"    IASL       $$@ disassembled correctly.\";\t\t\\\n\t\ttrue;\t\t\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\t\\\n\t\techo \"Error: Could not correctly disassemble $$@\";\t\t\\\n\t\t$(IASL) -d $$@;\t\t\t\t\t\t\t\\\n\t\tfalse;\t\t\t\t\t\t\t\t\\\n\tfi\nendef\n\n#######################################################################\n# Parse plaintext CMOS defaults into binary format\n# arg1: source file\n# arg2: binary file name\ncbfs-files-processor-nvramtool= \\\n\t$(eval $(2): $(1) $(top)/$(call strip_quotes,$(CONFIG_CMOS_LAYOUT_FILE)) | $(objutil)/nvramtool/nvramtool ; \\\n\t\tprintf \"    CREATE     $(2) (from $(1))\\n\"; \\\n\t\t$(objutil)/nvramtool/nvramtool -y $(top)/$(call strip_quotes,$(CONFIG_CMOS_LAYOUT_FILE)) -D $(2).tmp -p $(1) && \\\n\t\tmv $(2).tmp $(2))\n\n#######################################################################\n# Reduce a .config file by removing lines about default unset booleans\n# arg1: input\n# arg2: output\ndefine cbfs-files-processor-config\n\t$(eval $(2): $(1) $(obj)/build.h $(objutil)/kconfig/conf; \\\n\t\t+printf \"    CREATE     $(2) (from $(1))\\n\"; \\\n\t\tprintf \"# This image was built using coreboot \" > $(2).tmp && \\\n\t\tgrep \"\\<COREBOOT_VERSION\\>\" $(obj)/build.h |cut -d\\\" -f2 >> $(2).tmp && \\\n\t\t$(MAKE) DOTCONFIG=$(1) DEFCONFIG=$(2).tmp2 savedefconfig && \\\n\t\tcat $(2).tmp2 >> $(2).tmp && \\\n\t\tprintf \"# End of defconfig. Derivable values start here.\\n\" >> $(2).tmp && \\\n\t\tgrep \"^CONFIG\" $(1) | grep -F -v -f $(2).tmp2 >> $(2).tmp && \\\n\t\trm -f $(2).tmp2 && \\\n\t\tmv -f $(2).tmp $(2))\nendef\n\n#######################################################################\n# Add a file to CBFS with just type and compression values\n# arg1: name in CBFS\n# arg2: filename and path\n# arg3: type in CBFS\n# arg4: compression type\ndefine add-cbfs-file-simple\n\t$(eval cbfs-files-y += $(1))\n\t$(eval $(1)-file := $(2))\n\t$(eval $(1)-type := $(3))\n\t$(eval $(1)-compression := $(4))\nendef\n\n#######################################################################\n# Compile a C file with a bare struct definition into binary\n# arg1: C source file\n# arg2: binary file\ncbfs-files-processor-struct= \\\n\t$(eval $(2): $(1) $(obj)/build.h $(obj)/fmap_config.h $(KCONFIG_AUTOHEADER); \\\n\t\tprintf \"    CC+STRIP   $(1)\\n\"; \\\n\t\t$(CC_ramstage) -MMD $(CPPFLAGS_ramstage) $(CFLAGS_ramstage) -fno-lto --param asan-globals=0 $$(ramstage-c-ccopts) -include $(KCONFIG_AUTOHEADER) -MT $(2) -o $(2).tmp -c $(1) && \\\n\t\t$(OBJCOPY_ramstage) -O binary --only-section='.*data*' --only-section='.*bss*' \\\n\t\t--set-section-flags .*bss*=alloc,contents,load $(2).tmp $(2); \\\n\t\trm -f $(2).tmp) \\\n\t$(eval DEPENDENCIES += $(2).d)\n\n#######################################################################\n# Convert image to YCC 4:2:0 JPEG\n#\n# In two steps:\n# 1. Convert to RGB colors, optionally resize and store as BMP.\n# 2. Round final size to multiples of 16, optionally swap colors,\n#    convert (back) to sRGB and store as JPEG.\n# The split is necessary because we don't know the exact, scaled\n# size due to aspect-ratio. Note: IM v7 would allow us to do the\n# calculations in one command using %[fx:...] syntax.\n#\n# arg1: image input file\n# arg2: output jpg\ncbfs-files-processor-jpg420= \\\n\t$(eval $(2): $(1) $(KCONFIG_AUTOCONFIG);\t\t\t\t\\\n\t\tprintf \"    CONVERT    $$<\\n\";\t\t\t\t\t\\\n\t\tres=$(CONFIG_BOOTSPLASH_CONVERT_RESOLUTION);\t\t\t\\\n\t\tres=$$$$(convert $$<\t\t\t\t\t\t\\\n\t\t\t-colorspace RGB\t\t\t\t\t\t\\\n\t\t\t$$(BOOTSPLASH_RESIZE-y)\t\t\t\t\t\\\n\t\t\t-format '%wx%h' -write info:\t\t\t\t\\\n\t\t\tbmp:$$@);\t\t\t\t\t\t\\\n\t\tconvert $$@\t\t\t\t\t\t\t\\\n\t\t\t$$(BOOTSPLASH_ROUND16)\t\t\t\t\t\\\n\t\t\t$$(BOOTSPLASH_COLORSWAP-y)\t\t\t\t\\\n\t\t\t-colorspace sRGB\t\t\t\t\t\\\n\t\t\t-quality $$(CONFIG_BOOTSPLASH_CONVERT_QUALITY)%\t\t\\\n\t\t\t-interlace none -colorspace YCC -sampling-factor 4:2:0\t\\\n\t\t\tjpg:$$@)\nBOOTSPLASH_FLOOR = $$(($${res%%x*} & ~15))x$$(($${res\\#\\#*x} & ~15))\nBOOTSPLASH_RESIZE-$(CONFIG_BOOTSPLASH_CONVERT_RESIZE) = -resize $(BOOTSPLASH_FLOOR)\nBOOTSPLASH_CEIL = $$((($${res%%x*} + 15) & ~15))x$$((($${res\\#\\#*x} + 15) & ~15))\nBOOTSPLASH_ROUND16 = -background black -gravity center -extent $(BOOTSPLASH_CEIL)\nBOOTSPLASH_COLORSWAP-$(CONFIG_BOOTSPLASH_CONVERT_COLORSWAP) := -channel-fx 'red<=>blue'\n\n#######################################################################\n# Add handler for arbitrary files in CBFS\n$(call add-special-class,cbfs-files)\ncbfs-files-handler= \\\n\t\t$(eval tmp-cbfs-method:=$(word 2, $(subst :, ,$($(2)-file)))) \\\n\t\t$(eval $(2)-file:=$(call strip_quotes,$(word 1, $(subst :, ,$($(2)-file))))) \\\n\t\t$(eval tmp-cbfs-file:= ) \\\n\t\t$(if $($(2)-file), \\\n\t\t\t$(if $(wildcard $(1)$($(2)-file)), \\\n\t\t\t\t$(eval tmp-cbfs-file:= $(wildcard $(1)$($(2)-file))), \\\n\t\t\t\t$(eval tmp-cbfs-file:= $($(2)-file)))) \\\n\t\t$(if $(strip $($(2)-required)), \\\n\t\t\t$(if $(wildcard $(tmp-cbfs-file)),, \\\n\t\t\t\t$(info This build configuration requires $($(2)-required)) \\\n\t\t\t\t$(eval FAILBUILD:=1) \\\n\t\t\t)) \\\n\t\t$(if $(strip $($(2)-align)), \\\n\t\t\t$(if $(strip $($(2)-position)), \\\n\t\t\t\t$(info ERROR: It is not allowed to specify both alignment and position for $($(2)-file)) \\\n\t\t\t\t$(eval FAILBUILD:=1) \\\n\t\t\t)) \\\n\t\t$(if $(tmp-cbfs-method), \\\n\t\t\t$(eval tmp-old-cbfs-file:=$(tmp-cbfs-file)) \\\n\t\t\t$(eval tmp-cbfs-file:=$(shell mkdir -p $(obj)/mainboard/$(MAINBOARDDIR); mktemp $(obj)/mainboard/$(MAINBOARDDIR)/cbfs-file.XXXXXX).out) \\\n\t\t\t$(call cbfs-files-processor-$(tmp-cbfs-method),$(tmp-old-cbfs-file),$(tmp-cbfs-file))) \\\n\t\t$(if $(tmp-cbfs-file), \\\n\t\t\t$(eval cbfs-files += $(subst $(spc),*,$(tmp-cbfs-file)|$(2)|$($(2)-type)|$($(2)-compression)|$(strip $($(2)-position))|$($(2)-align)|$($(2)-options)))) \\\n\t\t$(eval $(2)-name:=) \\\n\t\t$(eval $(2)-type:=) \\\n\t\t$(eval $(2)-compression:=) \\\n\t\t$(eval $(2)-position:=) \\\n\t\t$(eval $(2)-required:=) \\\n\t\t$(eval $(2)-options:=) \\\n\t\t$(eval $(2)-align:=)\n\n#######################################################################\n# a variety of flags for our build\nCBFS_COMPRESS_FLAG:=none\nifeq ($(CONFIG_COMPRESS_RAMSTAGE_LZMA),y)\nCBFS_COMPRESS_FLAG:=LZMA\nendif\nifeq ($(CONFIG_COMPRESS_RAMSTAGE_LZ4),y)\nCBFS_COMPRESS_FLAG:=LZ4\nendif\n\nCBFS_PAYLOAD_COMPRESS_FLAG:=none\nifeq ($(CONFIG_COMPRESSED_PAYLOAD_LZMA),y)\nCBFS_PAYLOAD_COMPRESS_FLAG:=LZMA\nendif\nifeq ($(CONFIG_COMPRESSED_PAYLOAD_LZ4),y)\nCBFS_PAYLOAD_COMPRESS_FLAG:=LZ4\nendif\n\nCBFS_SECONDARY_PAYLOAD_COMPRESS_FLAG:=none\nifeq ($(CONFIG_COMPRESS_SECONDARY_PAYLOAD),y)\nCBFS_SECONDARY_PAYLOAD_COMPRESS_FLAG:=LZMA\nendif\n\nCBFS_PRERAM_COMPRESS_FLAG:=none\nifeq ($(CONFIG_COMPRESS_PRERAM_STAGES),y)\nCBFS_PRERAM_COMPRESS_FLAG:=LZ4\nendif\n\nifneq ($(CONFIG_LOCALVERSION),\"\")\nCOREBOOT_EXTRA_VERSION := -$(call strip_quotes,$(CONFIG_LOCALVERSION))\nCOREBOOT_EXPORTS += COREBOOT_EXTRA_VERSION\nendif\n\nCPPFLAGS_common := -Isrc\nCPPFLAGS_common += -Isrc/include\nCPPFLAGS_common += -Isrc/commonlib/include\nCPPFLAGS_common += -Isrc/commonlib/bsd/include\nCPPFLAGS_common += -I$(obj)\nVBOOT_SOURCE ?= 3rdparty/vboot\nCPPFLAGS_common += -I$(VBOOT_SOURCE)/firmware/include\nCPPFLAGS_common += -include $(src)/include/kconfig.h\nCPPFLAGS_common += -include $(src)/include/rules.h\nCPPFLAGS_common += -include $(src)/commonlib/bsd/include/commonlib/bsd/compiler.h\nCPPFLAGS_common += -I3rdparty\nCPPFLAGS_common += -D__BUILD_DIR__=\\\"$(obj)\\\"\nCPPFLAGS_common += -D__COREBOOT__\n\nifeq ($(BUILD_TIMELESS),1)\nCPPFLAGS_common += -D__TIMELESS__\nendif\n\nifeq ($(CONFIG_PCI_OPTION_ROM_RUN_YABEL)$(CONFIG_PCI_OPTION_ROM_RUN_REALMODE),y)\nCPPFLAGS_ramstage += -Isrc/device/oprom/include\nendif\n\nCFLAGS_common += -pipe\nCFLAGS_common += -g\nCFLAGS_common += -nostdinc\nCFLAGS_common += -std=gnu11\nCFLAGS_common += -nostdlib\nCFLAGS_common += -Wall\nCFLAGS_common += -Wundef\nCFLAGS_common += -Wstrict-prototypes\nCFLAGS_common += -Wmissing-prototypes\nCFLAGS_common += -Wwrite-strings\nCFLAGS_common += -Wredundant-decls\nCFLAGS_common += -Wimplicit-fallthrough\nCFLAGS_common += -Wshadow\nCFLAGS_common += -Wdate-time\nCFLAGS_common += -Wtype-limits\nCFLAGS_common += -Wvla\nCFLAGS_common += -Wold-style-definition\nCFLAGS_common += -Wdangling-else\nCFLAGS_common += -Wmissing-include-dirs\nCFLAGS_common += -fno-common\nCFLAGS_common += -ffreestanding\nCFLAGS_common += -fno-builtin\nCFLAGS_common += -fomit-frame-pointer\nCFLAGS_common += -fstrict-aliasing\nCFLAGS_common += -ffunction-sections\nCFLAGS_common += -fdata-sections\nCFLAGS_common += -fno-pie\nCFLAGS_common += -Wstring-compare\nifeq ($(CONFIG_COMPILER_GCC),y)\nCFLAGS_common += -Wold-style-declaration\nCFLAGS_common += -Wcast-function-type\n# Don't add these GCC specific flags when running scan-build\nifeq ($(CCC_ANALYZER_OUTPUT_FORMAT),)\nCFLAGS_common += -Wno-packed-not-aligned\nCFLAGS_common += -fconserve-stack\nCFLAGS_common += -Wnull-dereference\nCFLAGS_common += -Wlogical-op\nCFLAGS_common += -Wduplicated-cond\nCFLAGS_common += -Wno-array-compare\nendif\nendif\n\nifeq ($(CONFIG_LTO),y)\nCFLAGS_common += -flto\n# Clang can not deal with GCC lto objects\nifeq ($(CONFIG_COMPILER_GCC),y)\nADAFLAGS_common += -flto\nendif\nendif\n\nADAFLAGS_common += -gnatp\nADAFLAGS_common += -Wuninitialized\nADAFLAGS_common += -Wall\nADAFLAGS_common += -Werror\nADAFLAGS_common += -pipe\nADAFLAGS_common += -g\nADAFLAGS_common += -nostdinc\nADAFLAGS_common += -Wstrict-aliasing\nADAFLAGS_common += -Wshadow\nADAFLAGS_common += -fno-common\nADAFLAGS_common += -fomit-frame-pointer\nADAFLAGS_common += -ffunction-sections\nADAFLAGS_common += -fdata-sections\nADAFLAGS_common += -fno-pie\n# Ada warning options:\n#\n#  a   Activate most optional warnings.\n# .e   Activate every optional warnings.\n#  e   Treat warnings and style checks as errors.\n#\n#  D   Suppress warnings on implicit dereferences:\n#      As SPARK does not accept access types we have to map the\n#      dynamically chosen register locations to a static SPARK\n#      variable.\n#\n# .H   Suppress warnings on holes/gaps in records:\n#      We are modelling hardware here!\n#\n#  H   Suppress warnings on hiding:\n#      It's too annoying, you run out of ideas for identifiers fast.\n#\n#  T   Suppress warnings for tracking of deleted conditional code:\n#      We use static options to select code paths at compile time.\n#\n#  U   Suppress warnings on unused entities:\n#      Would have lots of warnings for unused register definitions,\n#      `withs` for debugging etc.\n#\n# .U   Deactivate warnings on unordered enumeration types:\n#      As SPARK doesn't support `pragma Ordered` by now, we don't\n#      use that, yet.\n#\n# .W   Suppress warnings on unnecessary Warnings Off pragmas:\n#      Things get really messy when you use different compiler\n#      versions, otherwise.\n# .Y   Disable information messages for why package spec needs body:\n#      Those messages are annoying. But don't forget to enable those,\n#      if you need the information.\nADAFLAGS_common += -gnatwa.eeD.HHTU.U.W.Y\n# Disable style checks for now\nADAFLAGS_common += -gnatyN\n\nLDFLAGS_common := --gc-sections\nLDFLAGS_common += -nostdlib\nLDFLAGS_common += --nmagic\nLDFLAGS_common += -static\nLDFLAGS_common += -z noexecstack\n\n# Workaround for RISC-V linker bug, merge back into above line when fixed.\n# https://sourceware.org/bugzilla/show_bug.cgi?id=27180\nifneq ($(CONFIG_ARCH_RISCV),y)\nLDFLAGS_common += --emit-relocs\nendif\n\nifeq ($(CONFIG_WARNINGS_ARE_ERRORS),y)\nCFLAGS_common += -Werror\nendif\nifneq ($(GDB_DEBUG),)\nCFLAGS_common += -Og\nADAFLAGS_common += -Og\nelse\nCFLAGS_common += -Os\nADAFLAGS_common += -Os\nendif\n\nifeq ($(CONFIG_DEBUG_ADA_CODE),y)\nADAFLAGS_common += -gnata\nendif\n\nadditional-dirs += $(objutil)/cbfstool $(objutil)/ifdtool \\\n\t\t   $(objutil)/options $(objutil)/amdfwtool \\\n\t\t   $(objutil)/cbootimage $(objutil)/ffs\n\nexport $(COREBOOT_EXPORTS)\n\n#######################################################################\n# generate build support files\n\nbuild_h := $(obj)/build.h\n\n# We have to manually export variables that `genbuild_h.sh` uses\n# when we call it through the `$(shell)` function. This is fragile\n# but as variables newly added to `genbuild_h.sh` would just not\n# work, we'd notice that instantly at least.\nbuild_h_exports := BUILD_TIMELESS KERNELVERSION COREBOOT_EXTRA_VERSION\n\n# Report new `build.ht` as dependency if `build.h` differs.\nbuild_h_check := \\\n\texport $(foreach exp,$(build_h_exports),$(exp)=\"$($(exp))\"); \\\n\tutil/genbuild_h/genbuild_h.sh $(xcompile) \\\n\t\t>$(build_h)t 2>/dev/null; \\\n\tcmp -s $(build_h)t $(build_h) >/dev/null 2>&1 || echo $(build_h)t\n\n$(build_h): $$(shell $$(build_h_check))\n\t@printf \"    GEN        build.h\\n\"\n\tmv $< $@\n\n$(obj)/build_info:\n\t@echo 'COREBOOT_VERSION: $(call strip_quotes,$(KERNELVERSION))' > $@.tmp\n\t@echo 'MAINBOARD_VENDOR: $(call strip_quotes,$(CONFIG_MAINBOARD_VENDOR))' >> $@.tmp\n\t@echo 'MAINBOARD_PART_NUMBER: $(call strip_quotes,$(CONFIG_MAINBOARD_PART_NUMBER))' >> $@.tmp\n\tmv $@.tmp $@\n\n#######################################################################\n# Build the tools\nCBFSTOOL:=$(objutil)/cbfstool/cbfstool\nFMAPTOOL:=$(objutil)/cbfstool/fmaptool\nRMODTOOL:=$(objutil)/cbfstool/rmodtool\nIFWITOOL:=$(objutil)/cbfstool/ifwitool\nIFITTOOL:=$(objutil)/cbfstool/ifittool\nAMDCOMPRESS:=$(objutil)/cbfstool/amdcompress\nCSE_FPT:=$(objutil)/cbfstool/cse_fpt\nCSE_SERGER:=$(objutil)/cbfstool/cse_serger\nECCTOOL:=$(objutil)/ffs/ecc/ecc\nCREATE_CONTAINER:=$(objutil)/open-power-signing-utils/create-container\n\n$(obj)/cbfstool: $(CBFSTOOL)\n\tcp $< $@\n\n$(obj)/fmaptool: $(FMAPTOOL)\n\tcp $< $@\n\n$(obj)/rmodtool: $(RMODTOOL)\n\tcp $< $@\n\n$(obj)/ifwitool: $(IFWITOOL)\n\tcp $< $@\n\n$(obj)/ifittool: $(IFITTOOL)\n\tcp $< $@\n\n$(obj)/amdcompress: $(AMDCOMPRESS)\n\tcp $< $@\n\n$(obj)/cse_fpt: $(CSE_FPT)\n\tcp $< $@\n\n$(obj)/cse_serger: $(CSE_SERGER)\n\tcp $< $@\n\n_WINCHECK=$(shell uname -o 2> /dev/null)\nSTACK=\nifeq ($(_WINCHECK),Msys)\n\tSTACK=-Wl,--stack,16384000\nendif\nifeq ($(_WINCHECK),Cygwin)\n\tSTACK=-Wl,--stack,16384000\nendif\n\nBINCFG:=$(objutil)/bincfg/bincfg\n\nIFDTOOL:=$(objutil)/ifdtool/ifdtool\n\nAMDFWTOOL:=$(objutil)/amdfwtool/amdfwtool\nAMDFWREAD:=$(objutil)/amdfwtool/amdfwread\n\n$(ECCTOOL):\n\t@printf \"    Compile ECCTOOL\\n\"\n\tcp -r $(top)/3rdparty/ffs $(objutil)\n\tcd $(objutil)/ffs && autoreconf -i && ./configure\n\t$(MAKE) -C $(objutil)/ffs\n\n$(CREATE_CONTAINER):\n\t@printf \"    Compile Open-Power SecureBoot Signing Utils\\n\"\n\tcp -r $(top)/3rdparty/open-power-signing-utils $(objutil)\n\tcd $(objutil)/open-power-signing-utils && autoreconf -i -Wno-unsupported && ./configure\n\t$(MAKE) -C $(objutil)/open-power-signing-utils\n\nAPCB_EDIT_TOOL:=$(top)/util/apcb/apcb_edit.py\n\nAPCB_V3_EDIT_TOOL:=$(top)/util/apcb/apcb_v3_edit.py\n\nAPCB_V3A_EDIT_TOOL:=$(top)/util/apcb/apcb_v3a_edit.py\n\nCBOOTIMAGE:=$(objutil)/cbootimage/cbootimage\n\nFUTILITY?=$(objutil)/futility/futility\n\nsubdirs-y += util/nvidia\n\n$(obj)/config.h: $(objutil)/kconfig/conf\n\n#######################################################################\n# needed objects that every mainboard uses\n# Creation of these is architecture and mainboard independent\nDEVICETREE_FILE := $(src)/mainboard/$(MAINBOARDDIR)/$(CONFIG_DEVICETREE)\n\nSCONFIG_OPTIONS := --mainboard_devtree=$(DEVICETREE_FILE)\n\nifneq ($(CONFIG_OVERRIDE_DEVICETREE),)\nOVERRIDE_DEVICETREE_FILE := $(src)/mainboard/$(MAINBOARDDIR)/$(CONFIG_OVERRIDE_DEVICETREE)\nSCONFIG_OPTIONS += --override_devtree=$(OVERRIDE_DEVICETREE_FILE)\nendif\n\nifneq ($(CONFIG_CHIPSET_DEVICETREE),)\nCHIPSET_DEVICETREE_FILE := $(src)/$(CONFIG_CHIPSET_DEVICETREE)\nSCONFIG_OPTIONS += --chipset_devtree=$(CHIPSET_DEVICETREE_FILE)\nendif\n\nDEVICETREE_STATIC_C := $(obj)/mainboard/$(MAINBOARDDIR)/static.c\nSCONFIG_OPTIONS += --output_c=$(DEVICETREE_STATIC_C)\n\nDEVICETREE_STATIC_H := $(obj)/static.h\nSCONFIG_OPTIONS += --output_h=$(DEVICETREE_STATIC_H)\n\nDEVICETREE_DEVICENAMES_H := $(obj)/static_devices.h\nSCONFIG_OPTIONS += --output_d=$(DEVICETREE_DEVICENAMES_H)\n\nDEVICETREE_FWCONFIG_H := $(obj)/static_fw_config.h\nSCONFIG_OPTIONS += --output_f=$(DEVICETREE_FWCONFIG_H)\n\n# Generated at the same time as static.c\n$(DEVICETREE_STATIC_H): $(DEVICETREE_STATIC_C)\n\ttrue\n\n$(DEVICETREE_STATIC_C): $(DEVICETREE_FILE) $(OVERRIDE_DEVICETREE_FILE) $(CHIPSET_DEVICETREE_FILE) $(objutil)/sconfig/sconfig\n\t@printf \"    SCONFIG    $(subst $(src)/,,$(<))\\n\"\n\tmkdir -p $(dir $(DEVICETREE_STATIC_C))\n\t$(objutil)/sconfig/sconfig $(SCONFIG_OPTIONS)\n\nramstage-y+=$(DEVICETREE_STATIC_C)\nromstage-y+=$(DEVICETREE_STATIC_C)\nverstage-y+=$(DEVICETREE_STATIC_C)\nbootblock-y+=$(DEVICETREE_STATIC_C)\npostcar-y+=$(DEVICETREE_STATIC_C)\nsmm-y+=$(DEVICETREE_STATIC_C)\n\n# Ensure static.h is generated before any objects are compiled\nramstage-c-gen-deps+=$(DEVICETREE_STATIC_H)\nromstage-c-gen-deps+=$(DEVICETREE_STATIC_H)\nverstage-c-gen-deps+=$(DEVICETREE_STATIC_H)\nbootblock-c-gen-deps+=$(DEVICETREE_STATIC_H)\npostcar-c-gen-deps+=$(DEVICETREE_STATIC_H)\nsmm-c-gen-deps+=$(DEVICETREE_STATIC_H)\n\n# Ensure fmap_config.h are created before any objects are compiled\nramstage-c-deps+=$(obj)/fmap_config.h\nromstage-c-deps+=$(obj)/fmap_config.h\nverstage-c-deps+=$(obj)/fmap_config.h\nbootblock-c-deps+=$(obj)/fmap_config.h\npostcar-c-deps+=$(obj)/fmap_config.h\nsmm-c-deps+=$(obj)/fmap_config.h\n\n.PHONY: devicetree\ndevicetree: $(DEVICETREE_STATIC_C)\n\nramstage-y += $(CONFIG_MEMLAYOUT_LD_FILE)\nromstage-y += $(CONFIG_MEMLAYOUT_LD_FILE)\nbootblock-y += $(CONFIG_MEMLAYOUT_LD_FILE)\nverstage-y += $(CONFIG_MEMLAYOUT_LD_FILE)\npostcar-y += $(CONFIG_MEMLAYOUT_LD_FILE)\ndecompressor-y += $(CONFIG_MEMLAYOUT_LD_FILE)\n\n#######################################################################\n# Clean up rules\nclean-abuild:\n\trm -rf coreboot-builds\n\n#######################################################################\n# Development utilities\nprintcrt0s:\n\t@echo crt0s=$(crt0s)\n\t@echo ldscripts=$(ldscripts)\n\nupdate:\n\tdongle.py -c /dev/term/1 $(obj)/coreboot.rom EOF\n\ncheck-style:\n\tgrep \"^# DESCR:\" util/lint/check-style | sed \"s,.*DESCR: *,,\"\n\techo \"========\"\n\tutil/lint/check-style\n\techo \"========\"\n\ngitconfig:\n\tutil/gitconfig/gitconfig.sh \"$(MAKE)\"\n\ninstall-git-commit-clangfmt:\n\tcp util/scripts/prepare-commit-msg.clang-format .git/hooks/prepare-commit-msg\n\ninclude util/crossgcc/Makefile.mk\n\n.PHONY: tools\ntools: $(objutil)/kconfig/conf $(objutil)/kconfig/toada $(CBFSTOOL) $(objutil)/cbfstool/cbfs-compression-tool $(FMAPTOOL) $(RMODTOOL) $(IFWITOOL) $(objutil)/nvramtool/nvramtool $(objutil)/sconfig/sconfig $(IFDTOOL) $(CBOOTIMAGE) $(AMDFWTOOL) $(AMDCOMPRESS) $(FUTILITY) $(BINCFG) $(IFITTOOL) $(objutil)/supermicro/smcbiosinfo $(CSE_FPT) $(CSE_SERGER) $(AMDFWREAD) $(ECCTOOL) $(CREATE_CONTAINER)\n\n###########################################################################\n# Common recipes for all stages\n###########################################################################\n\n# loadaddr can determine the load address of a stage, which may be needed for\n# platform-specific image headers (only works *after* the stage has been built)\nloadaddr = $(shell $(OBJDUMP_$(1)) -p $(objcbfs)/$(1).debug | \\\n\t     sed -ne '/LOAD/s/^.*vaddr 0x\\([0-9a-fA-F]\\{8\\}\\).*$$/0x\\1/p')\n\n# find-substr is required for stages like romstage_null and romstage_xip to\n# eliminate the _* part of the string\nfind-substr = $(word 1,$(subst _, ,$(1)))\n\n# find-class is used to identify the class from the name of the stage\n# The input to this macro can be something like romstage.x or romstage.x.y\n# find-class recursively strips off the suffixes to extract the exact class name\n# e.g.: if romstage.x is provided to find-class, it will remove .x and return romstage\n# if romstage.x.y is provided, it will first remove .y, call find-class with romstage.x\n# and remove .x the next time and finally return romstage\nfind-class = $(if $(filter $(1),$(basename $(1))),$(if $(CC_$(1)), $(1), $(call find-substr,$(1))),$(call find-class,$(basename $(1))))\n\n# Bootblocks are not CBFS stages. coreboot is currently expecting the bss to\n# be cleared by the loader of the stage. For ARM SoCs that means one needs to\n# include the bss section in the binary so the BootROM clears the bss on\n# loading of the bootblock stage. Achieve this by marking the bss section\n# loadable,allocatable, and data. Do the same for the .data section in case\n# the linker marked it NOBITS automatically because there are only zeroes in it.\npreserve-bss-flags := --set-section-flags .bss=load,alloc,data --set-section-flags .data=load,alloc,data\n\n# For Intel TXT files in the CBFS needs to be marked as 'Initial Boot Block'.\n# As CBFS attributes aren't cheap, only mark them if TXT is enabled.\nifeq ($(CONFIG_INTEL_TXT),y)\n\nTXTIBB := --ibb\n\nelse\n\nTXTIBB :=\n\nendif\n\nifeq ($(CONFIG_COMPRESS_BOOTBLOCK),y)\n\n$(objcbfs)/bootblock.lz4: $(objcbfs)/bootblock.elf $(objutil)/cbfstool/cbfs-compression-tool\n\t@printf \"    LZ4        $(subst $(obj)/,,$(@))\\n\"\n\t$(OBJCOPY_bootblock) $(preserve-bss-flags) $< $@.tmp\n\t$(OBJCOPY_bootblock) -O binary $@.tmp\n\t$(objutil)/cbfstool/cbfs-compression-tool rawcompress $@.tmp $@.tmp2 lz4\n\trm -f $@.tmp\n\tmv $@.tmp2 $@\n\n# Put assembled decompressor+bootblock into bootblock.raw.elf so that SoC\n# Makefiles wrapping the bootblock in a header can always key off the same file.\n$(objcbfs)/bootblock.raw.elf: $(objcbfs)/decompressor.elf\n\t@printf \"    OBJCOPY    $(notdir $(@))\\n\"\n\t$(OBJCOPY_bootblock) $(preserve-bss-flags) $< $@\n\nelse\t# CONFIG_COMPRESS_BOOTBLOCK\n\n$(objcbfs)/bootblock.raw.elf: $(objcbfs)/bootblock.elf\n\t@printf \"    OBJCOPY    $(notdir $(@))\\n\"\n\t$(OBJCOPY_bootblock) $(preserve-bss-flags) $< $@\n\nendif\t# CONFIG_COMPRESS_BOOTBLOCK\n\n$(objcbfs)/bootblock.raw.bin: $(objcbfs)/bootblock.raw.elf\n\t@printf \"    OBJCOPY    $(notdir $(@))\\n\"\n\t$(OBJCOPY_bootblock) -O binary $< $@\n\nifneq ($(CONFIG_HAVE_BOOTBLOCK),y)\n$(objcbfs)/bootblock.bin:\n\tdd if=/dev/zero of=$@ bs=64 count=1\nendif\n\n$(objcbfs)/%.bin: $(objcbfs)/%.raw.bin\n\tcp $< $@\n\n$(objcbfs)/%.map: $(objcbfs)/%.debug\n\t$(eval class := $(call find-class,$(@F)))\n\t$(NM_$(class)) -n $< | sort > $(basename $@).map\n\n$(objcbfs)/%.elf: $(objcbfs)/%.debug $(objcbfs)/%.map\n\t$(eval class := $(call find-class,$(@F)))\n\t@printf \"    OBJCOPY    $(subst $(obj)/,,$(@))\\n\"\n\tcp $< $@.tmp\n\t$(OBJCOPY_$(class)) --strip-debug $@.tmp\n\t$(OBJCOPY_$(class)) --add-gnu-debuglink=$< $@.tmp\n\tmv $@.tmp $@\n\n\n###########################################################################\n# Build the final rom image\n###########################################################################\n\n# extract_nth - Return a subsection of the $file string\n#\n# the input string looks like this:\n# ./build/cbfs/fallback/romstage.elf|fallback/romstage|stage|none||64|--xip*-S*.car.data*-P*0x10000\n#\n# Sections:\n# 1 - Path and name of file [FILENAME: Added to cbfs-files-y list variable]\n# 2 - Name of file in cbfs  [$(FILENAME)-file]\n# 3 - File type:            [$(FILENAME)-type]\n#                bootblock, cbfs header, stage, payload, optionrom, bootsplash, raw, vsa,\n#                mbi, microcode, fsp, mrc, cmos_default, cmos_layout, spd, mrc_cache,\n#                mma, efi, deleted, null\n# 4 - Compression type      [$(FILENAME)-compression]\n#                      none, LZMA\n# 5 - Base address          [$(FILENAME)-position]\n# 6 - Alignment             [$(FILENAME)-align]\n# 7 - cbfstool flags        [$(FILENAME)-options]\n#\n# Input:\n#  $(1) = Section to extract\n#  $(2) = Input string\n#\n# Steps:\n# 1) replace all '|' characters with the sequence '- -' within the full string, prepended and appended with the character '-'\n# 2) extract the specified section from the string - this gets us the section surrounded by '-' characters\n# 3) remove the leading and trailing '-' characters\n# 4) replace all '*' characters with spaces\nextract_nth=$(subst *,$(spc),$(patsubst -%-,%,$(word $(1), $(subst |,- -,-$(2)-))))\n\n# regions-for-file - Returns a cbfstool regions parameter\n# $(call regions-for-file,$(filename))\n# returns \"REGION1,REGION2,...\"\n#\n# This is the default implementation. When using a boot strategy employing\n# multiple CBFSes in fmap regions, override it.\nregions-for-file ?= $(if $(value regions-for-file-$(1)), $(regions-for-file-$(1)), COREBOOT)\n\nifeq ($(CONFIG_CBFS_AUTOGEN_ATTRIBUTES),y)\n\tcbfs-autogen-attributes=-g\nendif\n\n# cbfs-add-cmd-for-region\n# $(call cbfs-add-cmd-for-region,file in extract_nth format,region name)\n#\n# CBFSTOOL_ADD_CMD_OPTIONS can be used by arch/SoC/mainboard to supply\n# add commands with any additional arguments for cbfstool.\ndefine cbfs-add-cmd-for-region\n\t$(CBFSTOOL) $@.tmp \\\n\tadd$(if $(filter stage,$(call extract_nth,3,$(1))),-stage)$(if \\\n\t\t$(filter payload,$(call extract_nth,3,$(1))),-payload)$(if \\\n\t\t$(filter flat-binary,$(call extract_nth,3,$(1))),-flat-binary) \\\n\t-f $(call extract_nth,1,$(1)) \\\n\t-n $(call extract_nth,2,$(1)) \\\n\t$(if $(filter-out flat-binary payload stage,$(call \\\n\t\textract_nth,3,$(1))),-t $(call extract_nth,3,$(1))) \\\n\t$(if $(call extract_nth,4,$(1)),-c $(call extract_nth,4,$(1))) \\\n\t$(cbfs-autogen-attributes) \\\n\t-r $(2) \\\n\t$(if $(call extract_nth,6,$(1)),-a $(call extract_nth,6,$(file)), \\\n\t\t$(if $(call extract_nth,5,$(file)),-b $(call extract_nth,5,$(file)))) \\\n\t\t$(call extract_nth,7,$(1)) \\\n\t$(CBFSTOOL_ADD_CMD_OPTIONS)\n\nendef\n# Empty line before endef is necessary so cbfs-add-cmd-for-region ends in a\n# newline\n\n# cbfs-add-cmd\n# $(call cbfs-add-cmd,\n#          file in extract_nth format,\n#          region name,\n#          non-empty if file removal requested)\ndefine cbfs-add-cmd\n\tprintf \"    CBFS       $(call extract_nth,2,$(1))\\n\"\n\t$(if $(3),-$(CBFSTOOL) $@.tmp remove -n $(call extract_nth,2,$(file)) 2>/dev/null)\n\t$(call cbfs-add-cmd-for-region,$(1),$(2))\nendef\n\n# list of files to add (using their file system names, not CBFS names),\n# for dependencies etc.\nprebuilt-files = $(foreach file,$(cbfs-files), $(call extract_nth,1,$(file)))\n\n# $(all-regions)\n# returns full list of fmap regions that we add files to\nall-regions = $(sort $(subst $(comma),$(spc), \\\n\t$(foreach file,$(cbfs-files), \\\n\t\t$(call regions-for-file,$(call extract_nth,2,$(file))))))\n\n# $(call all-files-in-region,region name)\n# returns elements in $(cbfs-files) that end up in that region, in the order\n# they appear in $(cbfs-files)\nall-files-in-region = $(foreach file,$(cbfs-files), \\\n\t$(if $(filter $(1), \\\n\t\t$(subst $(comma),$(spc),$(call regions-for-file,$(call extract_nth,2,$(file))))), \\\n\t\t$(file)))\n\n# $(call update-file-for-region,file string from $(cbfs-files),region name)\n# Update position and alignment according to overrides for region\n# Doesn't check for invalid configurations (eg. resetting neither or both\n# position and align)\n# Returns the updated file string\nupdate-file-for-region = \\\n\t$(subst $(spc),*,$(call extract_nth,1,$(1))|$(call extract_nth,2,$(1))|$(call extract_nth,3,$(1))|$(call extract_nth,4,$(1))|$($(call extract_nth,2,$(1))-$(2)-position)|$($(call extract_nth,2,$(1))-$(2)-align)|$(call extract_nth,7,$(1)))\n\n# $(call placed-files-in-region,region name)\n# like all-files-in-region, but updates the files to contain region overrides\n# to position or alignment.\nplaced-files-in-region = $(foreach file,$(call all-files-in-region,$(1)), \\\n\t$(if $($(call extract_nth,2,$(file))-$(1)-position), \\\n\t\t$(if $($(call extract_nth,2,$(file))-$(1)-align), \\\n\t\t\t$(error It is not allowed to specify both alignment and position for $(call extract_nth,2,$(file))-$(1))) \\\n\t\t$(call update-file-for-region,$(file),$(1)), \\\n\t\t$(if $($(call extract_nth,2,$(file))-$(1)-align), \\\n\t\t\t$(call update-file-for-region,$(file),$(1)), \\\n\t\t\t$(file))))\n\n# $(call sort-files,subset of $(cbfs-files))\n# reorders the files in the given set to list files at fixed positions first,\n# followed by aligned files and finally those with no constraints.\nsort-files = \\\n\t$(eval _tmp_fixed:=) \\\n\t$(eval _tmp_aligned:=) \\\n\t$(eval _tmp_regular:=) \\\n\t$(foreach file,$(1), \\\n\t\t$(if $(call extract_nth,5,$(file)),\\\n\t\t\t$(eval _tmp_fixed += $(file)), \\\n\t\t$(if $(call extract_nth,6,$(file)), \\\n\t\t\t$(eval _tmp_aligned += $(file)), \\\n\t\t\t$(eval _tmp_regular += $(file))))) \\\n\t$(_tmp_fixed) $(_tmp_aligned) $(_tmp_regular)\n\n# command list to add files to CBFS\nprebuild-files = $(foreach region,$(all-regions), \\\n\t$(foreach file, \\\n\t\t$(call sort-files,$(call placed-files-in-region,$(region))), \\\n\t\t$(call cbfs-add-cmd,$(file),$(region),$(CONFIG_UPDATE_IMAGE))))\n\n# If no FMD file (Flashmap) is supplied by mainboard, fall back to a default\nifeq ($(CONFIG_FMDFILE),)\n\nifeq ($(CONFIG_ARCH_X86),y)\n\nDEFAULT_FLASHMAP:=$(top)/util/cbfstool/default-x86.fmd\n# check if IFD_CHIPSET is set and if yes generate a FMAP template from IFD descriptor\nifneq ($(CONFIG_IFD_CHIPSET),)\nifeq ($(CONFIG_HAVE_IFD_BIN),y)\nDEFAULT_FLASHMAP:=$(obj)/fmap-template.fmd\n$(DEFAULT_FLASHMAP): $(call strip_quotes,$(CONFIG_IFD_BIN_PATH)) $(IFDTOOL)\n\techo \"    IFDTOOL    -p $(CONFIG_IFD_CHIPSET) -F $@ $<\"\n\t$(IFDTOOL) -p $(CONFIG_IFD_CHIPSET) -F $@ $<\nendif # ifeq($(CONFIG_HAVE_IFD_BIN),y)\nendif # ifneq($(CONFIG_IFD_CHIPSET),)\n\n# entire flash\nFMAP_ROM_ADDR := $(call int-subtract, 0x100000000 $(CONFIG_ROM_SIZE))\nFMAP_ROM_SIZE := $(CONFIG_ROM_SIZE)\n# entire \"BIOS\" region (everything directly of concern to the host system)\n# relative to ROM_BASE\nFMAP_BIOS_BASE := $(call int-align, $(call int-subtract, $(CONFIG_ROM_SIZE) $(CONFIG_CBFS_SIZE)), 0x10000)\nFMAP_BIOS_SIZE := $(call int-align-down, $(shell echo $(CONFIG_CBFS_SIZE) | tr A-F a-f), 0x10000)\n# position and size of flashmap, relative to BIOS_BASE\n\n#\n# X86 CONSOLE FMAP region\n#\n# position, size and entry line of CONSOLE relative to BIOS_BASE, if enabled\n\nFMAP_CURRENT_BASE := 0\n\nifeq ($(CONFIG_CONSOLE_SPI_FLASH),y)\nFMAP_CONSOLE_BASE := $(FMAP_CURRENT_BASE)\nFMAP_CONSOLE_SIZE := $(CONFIG_CONSOLE_SPI_FLASH_BUFFER_SIZE)\nFMAP_CONSOLE_ENTRY := CONSOLE@$(FMAP_CONSOLE_BASE) $(FMAP_CONSOLE_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_CONSOLE_BASE) $(FMAP_CONSOLE_SIZE))\nelse\nFMAP_CONSOLE_ENTRY :=\nendif\n\nifeq ($(CONFIG_CACHE_MRC_SETTINGS),y)\nFMAP_MRC_CACHE_BASE := $(call int-align, $(FMAP_CURRENT_BASE), 0x10000)\nFMAP_MRC_CACHE_SIZE := $(CONFIG_MRC_SETTINGS_CACHE_SIZE)\nFMAP_MRC_CACHE_ENTRY := RW_MRC_CACHE@$(FMAP_MRC_CACHE_BASE) $(FMAP_MRC_CACHE_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_MRC_CACHE_BASE) $(FMAP_MRC_CACHE_SIZE))\nelse\nFMAP_MRC_CACHE_ENTRY :=\nendif\n\nifeq ($(CONFIG_SMMSTORE),y)\nFMAP_SMMSTORE_BASE := $(call int-align, $(FMAP_CURRENT_BASE), 0x10000)\nFMAP_SMMSTORE_SIZE := $(CONFIG_SMMSTORE_SIZE)\nFMAP_SMMSTORE_ENTRY := SMMSTORE@$(FMAP_SMMSTORE_BASE) $(FMAP_SMMSTORE_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_SMMSTORE_BASE) $(FMAP_SMMSTORE_SIZE))\nelse\nFMAP_SMMSTORE_ENTRY :=\nendif\n\nifeq ($(CONFIG_SPD_CACHE_IN_FMAP),y)\nFMAP_SPD_CACHE_BASE := $(call int-align, $(FMAP_CURRENT_BASE), 0x4000)\nFMAP_SPD_CACHE_SIZE := $(call int-multiply, $(CONFIG_DIMM_MAX) $(CONFIG_DIMM_SPD_SIZE))\nFMAP_SPD_CACHE_SIZE := $(call int-align, $(FMAP_SPD_CACHE_SIZE), 0x1000)\nFMAP_SPD_CACHE_ENTRY := $(CONFIG_SPD_CACHE_FMAP_NAME)@$(FMAP_SPD_CACHE_BASE) $(FMAP_SPD_CACHE_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_SPD_CACHE_BASE) $(FMAP_SPD_CACHE_SIZE))\nelse\nFMAP_SPD_CACHE_ENTRY :=\nendif\n\nifeq ($(CONFIG_VPD),y)\nFMAP_VPD_BASE := $(call int-align, $(FMAP_CURRENT_BASE), 0x4000)\nFMAP_VPD_SIZE := $(CONFIG_VPD_FMAP_SIZE)\nFMAP_VPD_ENTRY := $(CONFIG_VPD_FMAP_NAME)@$(FMAP_VPD_BASE) $(FMAP_VPD_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_VPD_BASE) $(FMAP_VPD_SIZE))\nelse\nFMAP_VPD_ENTRY :=\nendif\n\nifeq ($(CONFIG_INCLUDE_HSPHY_IN_FMAP),y)\nFMAP_HSPHY_FW_BASE := $(call int-align, $(FMAP_CURRENT_BASE), 0x1000)\nFMAP_HSPHY_FW_SIZE := $(CONFIG_HSPHY_FW_MAX_SIZE)\nFMAP_HSPHY_FW_ENTRY := HSPHY_FW@$(FMAP_HSPHY_FW_BASE) $(FMAP_HSPHY_FW_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_HSPHY_FW_BASE) $(FMAP_HSPHY_FW_SIZE))\nelse\nFMAP_HSPHY_FW_ENTRY :=\nendif\n\n#\n# X86 FMAP region\n#\n#\n# position, size\nFMAP_FMAP_BASE := $(FMAP_CURRENT_BASE)\nFMAP_FMAP_SIZE := 0x200\n\n#\n# X86 COREBOOT default cbfs FMAP region\n#\n# position and size of CBFS, relative to BIOS_BASE\nFMAP_CBFS_BASE := $(call int-add, $(FMAP_FMAP_BASE) $(FMAP_FMAP_SIZE))\nFMAP_CBFS_SIZE := $(call int-subtract, $(FMAP_BIOS_SIZE) $(FMAP_CBFS_BASE))\n\nelse # ifeq ($(CONFIG_ARCH_X86),y)\n\nDEFAULT_FLASHMAP:=$(top)/util/cbfstool/default.fmd\n# entire flash\nFMAP_ROM_ADDR := 0\nFMAP_ROM_SIZE := $(CONFIG_ROM_SIZE)\n# entire \"BIOS\" region (everything directly of concern to the host system)\n# relative to ROM_BASE\nFMAP_BIOS_BASE := 0\nFMAP_BIOS_SIZE := $(CONFIG_CBFS_SIZE)\n# position and size of flashmap, relative to BIOS_BASE\nFMAP_FMAP_BASE := 0x20000\nFMAP_FMAP_SIZE := 0x200\n\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_FMAP_BASE) $(FMAP_FMAP_SIZE))\n\n#\n# NON-X86 CONSOLE FMAP region\n#\n# position, size and entry line of CONSOLE relative to BIOS_BASE, if enabled\nifeq ($(CONFIG_CONSOLE_SPI_FLASH),y)\nFMAP_CONSOLE_BASE := $(FMAP_CURRENT_BASE)\nFMAP_CONSOLE_SIZE := $(CONFIG_CONSOLE_SPI_FLASH_BUFFER_SIZE)\nFMAP_CONSOLE_ENTRY := CONSOLE@$(FMAP_CONSOLE_BASE) $(FMAP_CONSOLE_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_CONSOLE_BASE) $(FMAP_CONSOLE_SIZE))\nelse\nFMAP_CONSOLE_ENTRY :=\nendif\n\n#\n# NON-X86 RW_MRC_CACHE FMAP region\n#\n# position, size and entry line of MRC_CACHE relative to BIOS_BASE, if enabled\nifeq ($(CONFIG_CACHE_MRC_SETTINGS),y)\nFMAP_MRC_CACHE_BASE := $(call int-align, $(FMAP_CURRENT_BASE), 0x10000)\nFMAP_MRC_CACHE_SIZE := $(CONFIG_MRC_SETTINGS_CACHE_SIZE)\nFMAP_MRC_CACHE_ENTRY := RW_MRC_CACHE@$(FMAP_MRC_CACHE_BASE) $(FMAP_MRC_CACHE_SIZE)\nFMAP_CURRENT_BASE := $(call int-add, $(FMAP_MRC_CACHE_BASE) $(FMAP_MRC_CACHE_SIZE))\nelse\nFMAP_MRC_CACHE_ENTRY :=\nendif\n\n#\n# NON-X86 COREBOOT default cbfs FMAP region\n#\n# position and size of CBFS, relative to BIOS_BASE\nFMAP_CBFS_BASE := $(FMAP_CURRENT_BASE)\nFMAP_CBFS_SIZE := $(call int-subtract,$(FMAP_BIOS_SIZE) $(FMAP_CBFS_BASE))\n\nendif # ifeq ($(CONFIG_ARCH_X86),y)\n\n$(obj)/fmap.fmd: $(top)/Makefile.mk $(DEFAULT_FLASHMAP) $(obj)/config.h\n\tsed -e \"s,##ROM_BASE##,$(FMAP_ROM_ADDR),\" \\\n\t    -e \"s,##ROM_SIZE##,$(FMAP_ROM_SIZE),\" \\\n\t    -e \"s,##BIOS_BASE##,$(FMAP_BIOS_BASE),\" \\\n\t    -e \"s,##BIOS_SIZE##,$(FMAP_BIOS_SIZE),\" \\\n\t    -e \"s,##FMAP_BASE##,$(FMAP_FMAP_BASE),\" \\\n\t    -e \"s,##FMAP_SIZE##,$(FMAP_FMAP_SIZE),\" \\\n\t    -e \"s,##CONSOLE_ENTRY##,$(FMAP_CONSOLE_ENTRY),\" \\\n\t    -e \"s,##MRC_CACHE_ENTRY##,$(FMAP_MRC_CACHE_ENTRY),\" \\\n\t    -e \"s,##SMMSTORE_ENTRY##,$(FMAP_SMMSTORE_ENTRY),\" \\\n\t    -e \"s,##SPD_CACHE_ENTRY##,$(FMAP_SPD_CACHE_ENTRY),\" \\\n\t    -e \"s,##VPD_ENTRY##,$(FMAP_VPD_ENTRY),\" \\\n\t    -e \"s,##HSPHY_FW_ENTRY##,$(FMAP_HSPHY_FW_ENTRY),\" \\\n\t    -e \"s,##CBFS_BASE##,$(FMAP_CBFS_BASE),\" \\\n\t    -e \"s,##CBFS_SIZE##,$(FMAP_CBFS_SIZE),\" \\\n\t\t$(DEFAULT_FLASHMAP) > $@.tmp\n\tmv $@.tmp $@\nelse # ifeq ($(CONFIG_FMDFILE),)\n$(obj)/fmap.fmd: $(CONFIG_FMDFILE) $(obj)/config.h\n\t$(HOSTCC) $(PREPROCESS_ONLY) -include $(obj)/config.h $< -o $@.pre\n\tmv $@.pre $@\nendif # ifeq ($(CONFIG_FMDFILE),)\n\n# generated at the same time as fmap.fmap\n$(obj)/fmap_config.h: $(obj)/fmap.fmap\n\ttrue\n$(obj)/fmap.desc: $(obj)/fmap.fmap\n\ttrue\n\n$(obj)/fmap.fmap: $(obj)/fmap.fmd $(FMAPTOOL)\n\techo \"    FMAP       $(FMAPTOOL) -h $(obj)/fmap_config.h $< $@\"\n\t$(FMAPTOOL) -h $(obj)/fmap_config.h -R $(obj)/fmap.desc $< $@\n\nifeq ($(CONFIG_INTEL_ADD_TOP_SWAP_BOOTBLOCK),y)\nTS_OPTIONS := -j $(CONFIG_INTEL_TOP_SWAP_BOOTBLOCK_SIZE)\nendif\n\nifneq ($(CONFIG_ARCH_X86),y)\nadd_bootblock = $(CBFSTOOL) $(1) write -u -r BOOTBLOCK -f $(2)\nendif\n\n# coreboot.pre doesn't follow the standard Make conventions. It gets modified\n# by multiple rules, and thus we can't compute the dependencies correctly.\n$(shell rm -f $(obj)/coreboot.pre)\n\nifneq ($(CONFIG_UPDATE_IMAGE),y)\n$(obj)/coreboot.pre: $$(prebuilt-files) $(CBFSTOOL) $(obj)/fmap.fmap $(obj)/fmap.desc $(objcbfs)/bootblock.bin\n\t$(CBFSTOOL) $@.tmp create -M $(obj)/fmap.fmap -r $(shell cat $(obj)/fmap.desc)\n\tprintf \"    BOOTBLOCK\\n\"\n\t$(call add_bootblock,$@.tmp,$(objcbfs)/bootblock.bin)\n\t$(prebuild-files) true\n\tmv $@.tmp $@\nelse # ifneq ($(CONFIG_UPDATE_IMAGE),y)\n.PHONY: $(obj)/coreboot.pre\n$(obj)/coreboot.pre: $$(prebuilt-files) $(CBFSTOOL)\n\tmv $(obj)/coreboot.rom $@.tmp || \\\n\t(echo \"Error: You have UPDATE_IMAGE set in Kconfig, but have no existing image to update.\" && \\\n\techo \"Exiting.\" && \\\n\tfalse)\n\t$(prebuild-files) true\n\tmv $@.tmp $@\nendif # ifneq ($(CONFIG_UPDATE_IMAGE),y)\n\nifeq ($(CONFIG_HAVE_REFCODE_BLOB),y)\nREFCODE_BLOB=$(obj)/refcode.rmod\n$(REFCODE_BLOB): $(RMODTOOL)\n\t$(RMODTOOL) -i $(CONFIG_REFCODE_BLOB_FILE) -o $@\nendif\n\nifeq ($(CONFIG_HAVE_RAMSTAGE),y)\nRAMSTAGE=$(objcbfs)/ramstage.elf\nelse\nRAMSTAGE=\nendif\n\nadd_intermediate = \\\n\t$(1): $(obj)/coreboot.pre $(2) | $(INTERMEDIATE) \\\n\t$(eval INTERMEDIATE+=$(1)) $(eval PHONY+=$(1))\n\n$(obj)/coreboot.rom: $(obj)/coreboot.pre $(CBFSTOOL) $(IFITTOOL) $$(INTERMEDIATE)\n\t@printf \"    CBFS       $(subst $(obj)/,,$(@))\\n\"\n# The full ROM may be larger than the CBFS part, so create an empty\n# file (filled with \\377 = 0xff) and copy the CBFS image over it.\n\tdd if=/dev/zero bs=$(call _toint,$(CONFIG_ROM_SIZE)) count=1 2> /dev/null | tr '\\000' '\\377' > $@.tmp\n\tdd if=$(obj)/coreboot.pre of=$@.tmp bs=8192 conv=notrunc 2> /dev/null\nifeq ($(CONFIG_CPU_INTEL_FIRMWARE_INTERFACE_TABLE),y)\n# Print final FIT table\n\t$(IFITTOOL) -f $@.tmp -D -r COREBOOT\n# Print final TS BOOTBLOCK FIT table\nifeq ($(CONFIG_INTEL_ADD_TOP_SWAP_BOOTBLOCK),y)\n\t@printf \"    TOP SWAP FIT table\\n\"\n\t$(IFITTOOL) -f $@.tmp -D $(TS_OPTIONS) -r COREBOOT\nendif # CONFIG_INTEL_ADD_TOP_SWAP_BOOTBLOCK\nendif # CONFIG_CPU_INTEL_FIRMWARE_INTERFACE_TABLE\n\tmv $@.tmp $@\n\t@printf \"    CBFSLAYOUT  $(subst $(obj)/,,$(@))\\n\\n\"\n\t$(CBFSTOOL) $@ layout\n\t@printf \"    CBFSPRINT  $(subst $(obj)/,,$(@))\\n\\n\"\nifeq ($(CONFIG_CBFS_VERIFICATION),y)\n\tline=$$($(CBFSTOOL) $@ print -kv 2>/dev/null | grep -F '[CBFS VERIFICATION (COREBOOT)]') ;\\\n\tif ! printf \"$$line\" | grep -q 'fully valid'; then \\\n\t\techo \"CBFS verification error: $$line\" ;\\\n\t\texit 1 ;\\\n\tfi\nendif # CONFIG_CBFS_VERIFICATION\n\nLTO_LINK_CFLAGS := -Wno-stack-usage\n\ndefine link_stage\n# $1 stage name\nifeq ($(CONFIG_LTO),y)\n$$(objcbfs)/$(1).debug: $$$$($(1)-libs) $$$$($(1)-objs)\n\t@printf \"    LINK       $$(subst $$(obj)/,,$$(@))\\n\"\n\t$$(CC_$(1)) $$(CPPFLAGS_$(1)) $$(CFLAGS_$(1)) $$(LDFLAGS_$(1):%=-Wl,%) $(LTO_LINK_CFLAGS) -o $$@ -L$$(obj) $$(COMPILER_RT_FLAGS_$(1):%=-Wl,%) -Wl,--whole-archive -Wl,--start-group $$(filter-out %.ld,$$($(1)-objs)) $$($(1)-libs) -Wl,--no-whole-archive $$(COMPILER_RT_$(1)) -Wl,--end-group -T $(call src-to-obj,$(1),$(CONFIG_MEMLAYOUT_LD_FILE))\nelse\n$$(objcbfs)/$(1).debug: $$$$($(1)-libs) $$$$($(1)-objs)\n\t@printf \"    LINK       $$(subst $$(obj)/,,$$(@))\\n\"\n\t$$(LD_$(1)) $$(LDFLAGS_$(1)) -o $$@ -L$$(obj) $$(COMPILER_RT_FLAGS_$(1)) --whole-archive --start-group $$(filter-out %.ld,$$($(1)-objs)) $$($(1)-libs) --no-whole-archive $$(COMPILER_RT_$(1)) --end-group -T $(call src-to-obj,$(1),$(CONFIG_MEMLAYOUT_LD_FILE))\nendif\nendef\n\nifeq ($(CONFIG_SEPARATE_ROMSTAGE),y)\ncbfs-files-y += $(CONFIG_CBFS_PREFIX)/romstage\n$(CONFIG_CBFS_PREFIX)/romstage-file := $(objcbfs)/romstage.elf\n$(CONFIG_CBFS_PREFIX)/romstage-type := stage\n$(CONFIG_CBFS_PREFIX)/romstage-compression := $(CBFS_PRERAM_COMPRESS_FLAG)\nifeq ($(CONFIG_ARCH_ROMSTAGE_ARM),y)\n$(CONFIG_CBFS_PREFIX)/romstage-options := -b 0\nendif\nifeq ($(CONFIG_ARCH_ROMSTAGE_X86_32)$(CONFIG_ARCH_ROMSTAGE_X86_64),y)\nifeq ($(CONFIG_NO_XIP_EARLY_STAGES),y)\n$(CONFIG_CBFS_PREFIX)/romstage-options := -S \".car.data\"\nelse\n$(CONFIG_CBFS_PREFIX)/romstage-options := -S \".car.data,.data\"\nendif\n\n# If CAR does not support execution of code, romstage on x86 is expected to be\n# xip.\nifneq ($(CONFIG_NO_XIP_EARLY_STAGES),y)\n$(CONFIG_CBFS_PREFIX)/romstage-options += --xip\n\n# For efficient MTRR utilisation use natural alignment for romstage.\nifeq ($(CONFIG_SETUP_XIP_CACHE),y)\n$(CONFIG_CBFS_PREFIX)/romstage-options += --pow2page\nendif    # CONFIG_SETUP_XIP_CACHE\n\nendif   # CONFIG_NO_XIP_EARLY_STAGES\nendif   # CONFIG_ARCH_ROMSTAGE_X86_32 / CONFIG_ARCH_ROMSTAGE_X86_64\nifeq ($(CONFIG_VBOOT_STARTS_IN_ROMSTAGE),y)\n$(CONFIG_CBFS_PREFIX)/romstage-options += $(TXTIBB)\nendif\nelse # CONFIG_SEPARATE_ROMSTAGE\npostinclude-hooks += $$(eval bootblock-srcs += $$(romstage-srcs))\npostinclude-hooks += $$(eval bootblock-libs += $$(romstage-libs))\nendif\n\ncbfs-files-$(CONFIG_HAVE_RAMSTAGE) += $(CONFIG_CBFS_PREFIX)/ramstage\n$(CONFIG_CBFS_PREFIX)/ramstage-file := $(RAMSTAGE)\n$(CONFIG_CBFS_PREFIX)/ramstage-type := stage\n$(CONFIG_CBFS_PREFIX)/ramstage-compression := $(CBFS_COMPRESS_FLAG)\n# The AMD LPC SPI DMA controller requires source files to be 64 byte aligned.\nifeq ($(CONFIG_SOC_AMD_COMMON_BLOCK_LPC_SPI_DMA),y)\n$(CONFIG_CBFS_PREFIX)/ramstage-align := 64\nendif\n\ncbfs-files-$(CONFIG_HAVE_REFCODE_BLOB) += $(CONFIG_CBFS_PREFIX)/refcode\n$(CONFIG_CBFS_PREFIX)/refcode-file := $(REFCODE_BLOB)\n$(CONFIG_CBFS_PREFIX)/refcode-type := stage\n$(CONFIG_CBFS_PREFIX)/refcode-compression := $(CBFS_COMPRESS_FLAG)\n\ncbfs-files-$(CONFIG_SEABIOS_VGA_COREBOOT) += vgaroms/seavgabios.bin\nvgaroms/seavgabios.bin-file := $(CONFIG_PAYLOAD_VGABIOS_FILE)\nvgaroms/seavgabios.bin-type := raw\n\ncbfs-files-$(CONFIG_INCLUDE_CONFIG_FILE) += config\nconfig-file := $(DOTCONFIG):config\nconfig-type := raw\nconfig-compression := LZMA\n\ncbfs-files-$(CONFIG_INCLUDE_CONFIG_FILE) += revision\nrevision-file := $(obj)/build.h\nrevision-type := raw\n\ncbfs-files-y += build_info\nbuild_info-file := $(obj)/build_info\nbuild_info-type := raw\n\nifeq ($(CONFIG_BOOTSPLASH_CONVERT),y)\nifeq ($(shell command -v convert),)\n$(error CONFIG_BOOTSPLASH_CONVERT requires the convert program (part of ImageMagick))\nendif\ncbfs-files-$(CONFIG_BOOTSPLASH_IMAGE) += bootsplash.jpg\nbootsplash.jpg-file := $(call strip_quotes,$(CONFIG_BOOTSPLASH_FILE)):jpg420\nbootsplash.jpg-type := bootsplash\nelse\nBOOTSPLASH_SUFFIX=$(suffix $(call strip_quotes,$(CONFIG_BOOTSPLASH_FILE)))\ncbfs-files-$(CONFIG_BOOTSPLASH_IMAGE) += bootsplash$(BOOTSPLASH_SUFFIX)\nbootsplash$(BOOTSPLASH_SUFFIX)-file := $(call strip_quotes,$(CONFIG_BOOTSPLASH_FILE))\nbootsplash$(BOOTSPLASH_SUFFIX)-type := bootsplash\nendif\n\n# Ensure that no payload segment overlaps with memory regions used by ramstage\n# (not for x86 since it can relocate itself in that case)\nifneq ($(CONFIG_ARCH_X86),y)\ncheck-ramstage-overlap-regions := ramstage\ncheck-ramstage-overlap-files :=\nifneq ($(CONFIG_PAYLOAD_NONE),y)\ncheck-ramstage-overlap-files += $(CONFIG_CBFS_PREFIX)/payload\nendif\n\n# will output one or more lines of \"<load address in hex> <memlen in decimal>\"\ncbfs-get-segments-cmd = $(CBFSTOOL) $(obj)/coreboot.pre print -v | sed -n \\\n\t'\\%$(1)%,\\%^[^ ]\\{4\\}%s%    .*load: \\(0x[0-9a-fA-F]*\\),.*length: [0-9]*/\\([0-9]*\\).*%\\1 \\2%p'\n\nramstage-symbol-addr-cmd = $(OBJDUMP_ramstage) -t $(objcbfs)/ramstage.elf | \\\n\tsed -n '/ $(1)$$/s/^\\([0-9a-fA-F]*\\) .*/0x\\1/p' | \\\n\tuniq\n\n$(call add_intermediate, check-ramstage-overlaps)\n\tprograms=$$($(foreach file,$(check-ramstage-overlap-files), \\\n\t\t$(call cbfs-get-segments-cmd,$(file)) ; )) ; \\\n\tregions=$$($(foreach region,$(check-ramstage-overlap-regions), \\\n\t\techo $(region) ; \\\n\t\t$(call ramstage-symbol-addr-cmd,_$(region)) ; \\\n\t\t$(call ramstage-symbol-addr-cmd,_e$(region)) ; )) ; \\\n\tpstart= ; pend= ; \\\n\tfor x in $$programs; do \\\n\t    if [ -z $$pstart ]; then pstart=$$(($$x)) ; continue ; fi ; \\\n\t    pend=$$(($$pstart + $$x)) ; \\\n\t    rname= ; rstart= ; rend= ; \\\n\t    for y in $$regions ; do \\\n\t        if [ -z $$rname ]; then rname=$$y ; continue ; fi ; \\\n\t        if [ -z $$rstart ]; then rstart=$$(($$y)) ; continue ; fi ; \\\n\t        rend=$$(($$y)) ; \\\n\t        if [ $$pstart -lt $$rend -a $$rstart -lt $$pend ]; then \\\n\t            echo \"ERROR: Ramstage region _$$rname@($$rstart,$$rend) overlapped by($$pstart,$$pend):\" \\\n\t                 $(check-ramstage-overlap-files) ; \\\n\t            exit 1 ; \\\n\t        fi ; \\\n\t        rname= ; rstart= ; rend= ; \\\n\t    done ; \\\n\t    pstart= ; pend= ; \\\n\tdone\n\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5361328125,
          "content": "coreboot README\n===============\n\ncoreboot is a Free Software project aimed at replacing the proprietary\nfirmware (BIOS/UEFI) found in most computers. coreboot performs the\nrequired hardware initialization to configure the system, then passes\ncontrol to a different executable, referred to in coreboot as the\npayload. Most often, the primary function of the payload is to boot the\noperating system (OS).\n\nWith the separation of hardware initialization and later boot logic,\ncoreboot is perfect for a wide variety of situations. It can be used\nfor specialized applications that run directly in the firmware, running\noperating systems from flash, loading custom bootloaders, or\nimplementing firmware standards, like PC BIOS services or UEFI. This\nflexibility allows coreboot systems to include only the features\nnecessary in the target application, reducing the amount of code and\nflash space required.\n\n\nSource code\n-----------\n\nAll source code for coreboot is stored in git. It is downloaded with\nthe command:\n\n`git clone https://review.coreboot.org/coreboot.git`.\n\nCode reviews are done in [the project's Gerrit\ninstance](https://review.coreboot.org/).\n\nThe code may be browsed via [coreboot's Gitiles\ninstance](https://review.coreboot.org/plugins/gitiles/coreboot/+/HEAD).\n\nThe coreboot project also maintains a\n[mirror](https://github.com/coreboot/coreboot) of the project on github.\nThis is read-only, as coreboot does not accept github pull requests,\nbut allows browsing and downloading the coreboot source.\n\nPayloads\n--------\n\nAfter the basic initialization of the hardware has been performed, any\ndesired \"payload\" can be started by coreboot.\n\nSee <https://doc.coreboot.org/payloads.html> for a list of some of\ncoreboot's supported payloads.\n\n\nSupported Hardware\n------------------\n\nThe coreboot project supports a wide range of architectures, chipsets,\ndevices, and mainboards. While not all of these are documented, you can\nfind some information in the [Architecture-specific\ndocumentation](https://doc.coreboot.org/arch/index.html) or the\n[SOC-specific documentation](https://doc.coreboot.org/soc/index.html).\n\nFor details about the specific mainboard devices that coreboot supports,\nplease consult the [Mainboard-specific\ndocumentation](https://doc.coreboot.org/mainboard/index.html) or the\n[Board Status](https://coreboot.org/status/board-status.html) pages.\n\n\nReleases\n--------\n\nReleases are currently done by coreboot every quarter. The\nrelease archives contain the entire coreboot codebase from the time of\nthe release, along with any external submodules. The submodules\ncontaining binaries are separated from the general release archives. All\nof the packages required to build the coreboot toolchains are also kept\nat coreboot.org in case the websites change, or those specific packages\nbecome unavailable in the future.\n\nAll releases are available on the [coreboot\ndownload](https://coreboot.org/downloads.html) page.\n\nPlease note that the coreboot releases are best considered as snapshots\nof the codebase, and do not currently guarantee any sort of extra\nstability.\n\nBuild Requirements and building coreboot\n----------------------------------------\n\nThe coreboot build, associated utilities and payloads require many\nadditional tools and packages to build. The actual coreboot binary is\ntypically built using a coreboot-controlled toolchain to provide\nreproducibility across various platforms. It is also possible, though\nnot recommended, to make it directly with your system toolchain.\nOperating systems and distributions come with an unknown variety of\nsystem tools and utilities installed. Because of this, it isn't\nreasonable to list all the required packages to do a build, but the\ndocumentation lists the requirements for a few different Linux\ndistributions.\n\nTo see the list of tools and libraries, along with a list of\ninstructions to get started building coreboot, go to the [Starting from\nscratch](https://doc.coreboot.org/tutorial/part1.html) tutorial page.\n\nThat same page goes through how to use QEMU to boot the build and see\nthe output.\n\n\nWebsite and Mailing List\n------------------------\n\nFurther details on the project, as well as links to documentation and\nmore can be found on the coreboot website:\n\n  <https://www.coreboot.org>\n\nYou can contact us directly on the coreboot mailing list:\n\n  <https://doc.coreboot.org/community/forums.html>\n\n\n\nCopyrights and Licenses\n---------------------\n\n\n### Uncopyrightable files\n\nThere are many files in the coreboot tree that we feel are not\ncopyrightable due to a lack of creative content.\n\n\"In order to qualify for copyright protection in the United States, a\nwork must satisfy the originality requirement, which has two parts. The\nwork must have “at least a modicum” of creativity, and it must be the\nindependent creation of its author.\"\n\n  <https://guides.lib.umich.edu/copyrightbasics/copyrightability>\n\nSimilar terms apply to other locations.\n\nThese uncopyrightable files include:\n\n- Empty files or files with only a comment explaining their existence.\n  These may be required to exist as part of the build process but are\n  not needed for the particular project.\n- Configuration files either in binary or text form. Examples would be\n  files such as .vbt files describing graphics configuration, .apcb\n  files containing configuration parameters for AMD firmware binaries,\n  and spd files as binary .spd or text \\*spd\\*.hex representing memory\n  chip configuration.\n- Machine-generated files containing version numbers, dates, hash\n  values or other \"non-creative\" content.\n\nAs non-creative content, these files are in the public domain by\ndefault.  As such, the coreboot project excludes them from the project's\ngeneral license even though they may be included in a final binary.\n\nIf there are questions or concerns about this policy, please get in\ntouch with the coreboot project via the mailing list.\n\n\n### Copyrights\n\nThe copyright on coreboot is owned by quite a large number of individual\ndevelopers and companies. A list of companies and individuals with known\ncopyright claims is present at the top level of the coreboot source tree\nin the 'AUTHORS' file. Please check the git history of each of the\nsource files for details.\n\n\n### Licenses\n\nBecause of the way coreboot began, using a significant amount of source\ncode from the Linux kernel, it's licensed the same way as the Linux\nKernel, with GNU General Public License (GPL) Version 2. Individual\nfiles are licensed under various licenses, though all are compatible\nwith GPLv2. The resulting coreboot image is licensed under the GPL,\nversion 2. All source files should have an SPDX license identifier at\nthe top for clarification.\n\nFiles under coreboot/Documentation/ are licensed under CC-BY 4.0 terms.\nAs an exception, files under Documentation/ with a history older than\n2017-05-24 might be under different licenses.\n\nFiles in the coreboot/src/commonlib/bsd directory are all licensed with\nthe BSD-3-clause license.  Many are also dual-licensed GPL-2.0-only or\nGPL-2.0-or-later.  These files are intended to be shared with libpayload\nor other BSD licensed projects.\n\nThe libpayload project contained in coreboot/payloads/libpayload may be\nlicensed as BSD or GPL, depending on the code pulled in during the build\nprocess. All GPL source code should be excluded unless the Kconfig\noption to include it is set.\n\n\nThe Software Freedom Conservancy\n--------------------------------\n\nSince 2017, coreboot has been a member of [The Software Freedom\nConservancy](https://sfconservancy.org/), a nonprofit organization\ndevoted to ethical technology and driving initiatives to make technology\nmore inclusive. The conservancy acts as coreboot's fiscal sponsor and\nlegal advisor.\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gnat.adc",
          "type": "blob",
          "size": 1.291015625,
          "content": "-- SPDX-License-Identifier: GPL-2.0-only\n\npragma Restrictions (No_Access_Subprograms);\npragma Restrictions (No_Allocators);\npragma Restrictions (No_Calendar);\npragma Restrictions (No_Dispatch);\npragma Restrictions (No_Exception_Handlers);\npragma Restrictions (No_Fixed_Point);\npragma Restrictions (No_Floating_Point);\npragma Restrictions (No_Implicit_Dynamic_Code);\npragma Restrictions (No_Implicit_Heap_Allocations);\npragma Restrictions (No_Implicit_Loops);\npragma Restrictions (No_Initialize_Scalars);\npragma Restrictions (No_IO);\npragma Restrictions (No_Local_Allocators);\npragma Restrictions (No_Recursion);\npragma Restrictions (No_Secondary_Stack);\npragma Restrictions (No_Streams);\npragma Restrictions (No_Tasking);\npragma Restrictions (No_Unchecked_Access);\npragma Restrictions (No_Unchecked_Deallocation);\npragma Restrictions (No_Wide_Characters);\npragma Restrictions (Static_Storage_Size);\npragma Assertion_Policy\n  (Statement_Assertions => Disable,\n   Pre                  => Disable,\n   Post                 => Disable,\n   Refined_Post         => Disable);\npragma Overflow_Mode (General => Strict, Assertions => Eliminated);\npragma SPARK_Mode (On);\n\npragma Warnings\n  (GNAT, Off, \"\"\"Side_Effects\"\" is not a valid aspect identifier\",\n   Reason => \"\"\"Side_Effects\"\" is new and needed for toolchain transition.\");\n"
        },
        {
          "name": "payloads",
          "type": "tree",
          "content": null
        },
        {
          "name": "spd",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolchain.mk",
          "type": "blob",
          "size": 10.6494140625,
          "content": "# SPDX-License-Identifier: GPL-2.0-only\n\n# ccache integration\nifeq ($(CONFIG_CCACHE),y)\n\nCCACHE:=$(word 1,$(wildcard $(addsuffix /ccache,$(subst :, ,$(PATH)))))\nifeq ($(CCACHE),)\n$(error ccache selected, but not found in PATH)\nendif\n\nexport CCACHE_COMPILERCHECK=mtime\nexport CCACHE_BASEDIR=$(top)\nexport CCACHE_STATSLOG=$(obj)/ccache.stats\n\n$(foreach arch,$(ARCH_SUPPORTED), \\\n\t$(eval CC_$(arch):=$(CCACHE) $(CC_$(arch))))\n\nHOSTCC:=$(CCACHE) $(HOSTCC)\nHOSTCXX:=$(CCACHE) $(HOSTCXX)\nendif\n\n# scan-build integration\nifneq ($(CCC_ANALYZER_OUTPUT_FORMAT),)\n\nifeq ($(CCC_ANALYZER_ANALYSIS),)\nexport CCC_ANALYZER_ANALYSIS := -analyzer-opt-analyze-headers\nendif\n\n$(foreach arch,$(ARCH_SUPPORTED), \\\n\t$(eval CC_$(arch):=CCC_CC=\"$(CC_$(arch))\" $(CC) ))\n\nHOSTCC:=CCC_CC=\"$(HOSTCC)\" $(CC)\nHOSTCXX:=CCC_CXX=\"$(HOSTCXX)\" $(CXX)\nendif\n\n# include-what-you-use integration\nifeq ($(CONFIG_IWYU),y)\n\nIWYU:=$(word 1,$(wildcard $(addsuffix /iwyu,$(subst :, ,$(PATH)))))\nifeq ($(IWYU),)\n$(error include-what-you-use selected, but not found in PATH)\nendif\n\n$(foreach arch,$(ARCH_SUPPORTED), \\\n\t$(eval CC_$(arch):=$(IWYU) ))\n\nCFLAGS_common := -Xiwyu --prefix_header_includes=remove  -Xiwyu --no_comments  -Xiwyu --no_fwd_decls $(CFLAGS_common)\nNOCOMPILE := 1\nendif\n\nCOREBOOT_STANDARD_STAGES := decompressor bootblock verstage romstage ramstage\nMAP-decompressor := bootblock\n\nARCHDIR-i386\t:= x86\nARCHDIR-x86_32\t:= x86\nARCHDIR-x86_64\t:= x86\nARCHDIR-arm\t:= arm\nARCHDIR-arm64\t:= arm64\nARCHDIR-riscv\t:= riscv\nARCHDIR-ppc64\t:= ppc64\n\nCFLAGS_arm\t+=\nCFLAGS_arm64\t+=\nCFLAGS_riscv\t+=\nCFLAGS_x86_32\t+=\nCFLAGS_x86_64\t+= -mcmodel=large -mno-red-zone\nCFLAGS_ppc64\t+=\n\nGCC_ADAFLAGS_arm\t+=\nGCC_ADAFLAGS_arm64\t+= -mgeneral-regs-only\nGCC_ADAFLAGS_riscv\t+=\nGCC_ADAFLAGS_x86_32\t+=\nGCC_ADAFLAGS_x86_64\t+= -mcmodel=large -mno-red-zone\nGCC_ADAFLAGS_ppc64\t+=\n\n# Some boards only provide 2K stacks, so storing lots of data there leads to\n# problems. Since C rules don't allow us to statically determine the maximum\n# stack use, we use 1.5K as heuristic, assuming that we typically have lots\n# of tiny stack frames and the odd large one.\n#\n# Store larger buffers in BSS, use static to share data in cache-as-ram\n# on x86.\n# Since GCCs detection of dynamic array bounds unfortunately seems to be\n# very basic, you'll sometimes have to use a static upper bound for the\n# size and an assert() to make sure it's honored (see gpio_base3_value()\n# for an example).\n# (If you absolutely need a larger stack frame and are 100% sure it cannot\n# cause problems, you can whitelist it with #pragma diagnostic.)\nifeq ($(CONFIG_COMPILER_GCC),y)\nCFLAGS_arm\t+= -Wstack-usage=1536\nCFLAGS_arm64\t+= -Wstack-usage=1536\nCFLAGS_riscv\t+= -Wstack-usage=1536\nCFLAGS_ppc64\t+= -Wstack-usage=1536\nendif\n\ntoolchain_to_dir = \\\n\t$(foreach arch,$(ARCH_SUPPORTED),\\\n\t$(eval CPPFLAGS_$(arch) += \\\n\t-Isrc/arch/$(ARCHDIR-$(arch))/include))\n\n# set_stage_toolchain: Decides the toolchain to be used by every stage\n# E.g.: If bootblock is x86_32, it sets ARCH-BOOTBLOCK-y = x86_32, whereas\n# ARCH-BOOTBLOCK-n = armv7. Then, ARCH-BOOTBLOCK-y can be used anywhere to\n# decide the compiler toolchain for bootblock stage\n# This step is essential for initializing the toolchain for coreboot standard\n# stages i.e. bootblock, romstage and ramstage, since it acts as the second\n# parameter to create_class_compiler below in init_standard_toolchain\nmap_stage = $(strip $(if $(MAP-$(1)),$(MAP-$(1)),$(1)))\nset_stage_toolchain= \\\n\t$(foreach arch,$(ARCH_SUPPORTED), \\\n\t$(eval ARCH-$(1)-$($(shell \\\n\t\techo CONFIG_ARCH_$(call map_stage,$(1))_$(arch) | \\\n\t\ttr '[:lower:]' '[:upper:]')) := $(arch)))\n\n# standard-archs: Tell which architectures are used by the standard stages.\nstandard-archs = $(sort $(foreach stagearch, \\\n\t\t\t  $(patsubst %,ARCH-%-y,$(COREBOOT_STANDARD_STAGES)), \\\n\t\t\t  $($(stagearch))))\n\n# create_class_compiler: Used to create compiler tool set for\n# special classes\n# @1: special class\n# @2: compiler set to be used\n# e.g.: smm special class uses i386 as compiler set\ndefine create_class_compiler\n$(if $(2),,$(warning *** The toolchain architecture for $(1) is unknown.) \\\n\t$(warning CONFIG_ARCH_$(1)_* settings in $(DOTCONFIG):) \\\n\t$(error $(shell grep CONFIG_ARCH_$(1)_ $(DOTCONFIG))))\nCC_$(1) := $(CC_$(2))\nGCC_$(1) := $(GCC_CC_$(2))\nLD_$(1) := $(LD_$(2))\nNM_$(1) := $(NM_$(2))\nAR_$(1) := $(AR_$(2))\nGNATBIND_$(1) := $(GNATBIND_$(2))\nOBJCOPY_$(1) := $(OBJCOPY_$(2))\nOBJDUMP_$(1) := $(OBJDUMP_$(2))\nSTRIP_$(1) := $(STRIP_$(2))\nREADELF_$(1) := $(READELF_$(2))\nCFLAGS_$(1) = $$(CFLAGS_common) $$(CFLAGS_$(2))\nADAFLAGS_$(1) = --RTS=$$(obj)/libgnat-$(2)/ $$(ADAFLAGS_common) $$(GCC_ADAFLAGS_$(2))\nCPPFLAGS_$(1) = $$(CPPFLAGS_common) $$(CPPFLAGS_$(2)) -D__ARCH_$(2)__\nCOMPILER_RT_$(1) := $$(COMPILER_RT_$(2))\nCOMPILER_RT_FLAGS_$(1) := $$(COMPILER_RT_FLAGS_$(2))\nLDFLAGS_$(1) = $$(LDFLAGS_common) $$(LDFLAGS_$(2))\nendef\n\n# define_class: Allows defining any program as dynamic class and compiler tool\n# set for the same based on the architecture for which the program is to be\n# compiled\n# @1: program (class name)\n# @2: architecture for which the program needs to be compiled\n# IMP: Ensure that define_class is called before any .c or .S files are added to\n# the class of the program. Check subdirs-y for order of subdirectory inclusions\ndefine define_class\nclasses-y += $(1)\n$(eval $(call create_class_compiler,$(1),$(2)))\nendef\n\n# initialize standard toolchain (CC,AS and others) for give stage\n# @1 : stage for which the toolchain is to be initialized\ninit_standard_toolchain = \\\n\t$(eval $(call set_stage_toolchain,$(1))) \\\n\t$(eval $(call create_class_compiler,$(1),$(ARCH-$(1)-y)))\n\ninit_stages = \\\n\t$(foreach stage,$(COREBOOT_STANDARD_STAGES), \\\n\t$(eval $(call init_standard_toolchain,$(stage))))\n\n$(eval $(call toolchain_to_dir))\n\n$(call init_stages)\n\n# Test for coreboot toolchain (except when explicitly not requested)\nifneq ($(NOCOMPILE),1)\n# Only run if we're doing a build (not for tests, kconfig, ...)\n# rationale: gcc versions by Linux distributions tend to be quite messed up\n# llvm/clang also needs patches supplied by the coreboot build\nCOMPILERFAIL:=0\nIASLFAIL:=0\n\nifneq ($(CONFIG_ANY_TOOLCHAIN),y)\n# Verify that the coreboot toolchain is being used.\n$(foreach arch,$(sort $(foreach stage,\\\n\t$(COREBOOT_STANDARD_STAGES),$(ARCH-$(stage)-y))), \\\n\t$(if $(shell if [ -n \"$(CC_$(arch))\" ]; then \\\n\t\t$(CC_$(arch)) -v 2>&1 | grep -q \"coreboot toolchain\" || \\\n\t\techo not-coreboot; else echo not-coreboot; fi), \\\n\t\t$(eval COMPILERFAIL:=1)\\\n\t\t$(warning The coreboot toolchain for '$(arch)'\\\n\t\t\tarchitecture was not found.)))\n# If iasl doesn't match the current coreboot version, fail the test\n# TODO: Figure out if iasl is even needed for the build.\n$(if $(shell if [ -n \"$(IASL)\" ]; then \\\n\t$(IASL) -v 2>&1 | grep -q \"coreboot toolchain\" || \\\n\techo not-coreboot; else echo not-coreboot; fi), \\\n\t$(eval COMPILERFAIL:=1)$(eval IASLFAIL:=1)\\\n\t$(warning The coreboot toolchain version of iasl \\\n\t\t'$(shell util/crossgcc/buildgcc -s iasl)' was not found))\nelse #$(CONFIG_ANY_TOOLCHAIN)\n# If the coreboot toolchain isn't being used, verify that there is A toolchain\n$(foreach arch,$(sort \\\n\t$(foreach stage,$(COREBOOT_STANDARD_STAGES),$(ARCH-$(stage)-y))), \\\n\t$(if $(CC_$(arch)),, $(eval COMPILERFAIL:=1) \\\n\t$(warning No compiler found for '$(arch)' architecture. \\\n\t\tInstall one or use the coreboot toolchain?)) )\n# If iasl isn't present, fail\n# TODO: Figure out if iasl is even needed for the build.\n$(if $(IASL),, $(eval COMPILERFAIL:=1)$(eval IASLFAIL:=1) \\\n\t$(warning iasl not found. \\\n\t\tPlease install it or use the coreboot toolchain.))\nendif\n\n# If the compiler check failed, print out warnings\nifeq ($(COMPILERFAIL),1)\nifneq ($(XGCCPATH),)\n$(warning )\n$(warning Path to your toolchain is currently set to '$(XGCCPATH)')\nendif\n$(warning )\n$(warning To build the entire coreboot toolchain: run 'make crossgcc')\nifeq ($(IASLFAIL),1)\n$(warning To build just IASL: run 'make iasl')\nendif #($(IASLFAIL),1)\n$(warning For more toolchain build targets: run 'make help_toolchain')\n$(warning )\nifneq ($(CONFIG_ANY_TOOLCHAIN),y)\n$(warning To try to use any toolchain in your path, \\\n\trun 'make menuconfig', then select)\n$(warning the config option: 'General setup', \\\n\tand 'Allow building with any toolchain')\n$(warning Note that this is NOT supported.  \\\n\tUsing it means you're on your own.)\n$(warning )\nendif #($(CONFIG_ANY_TOOLCHAIN),y)\n$(error Halting the build)\nendif #($(COMPILERFAIL),1)\n\nendif #($(NOCOMPILE),1)\n\n# Run the toolchain version checks if the requested target is 'test-toolchain'\n# Checks the versions of GCC, binutils, clang, and IASL\nifneq ($(MAKECMDGOALS),)\nifneq ($(filter test-toolchain,$(MAKECMDGOALS)),)\n$(foreach arch, $(ARCH_SUPPORTED), \\\n\t$(if $(shell if [ -n \"$(GCC_CC_$(arch))\" ]; then \\\n\t\t$(GCC_CC_$(arch)) --version 2>&1 | head -n1 | rev | \\\n\t\tcut -d ' ' -f 1 | rev | \\\n\t\tgrep -q \"$$(util/crossgcc/buildgcc -s gcc)\" || \\\n\t\techo not-current; fi), \\\n\t\t$(eval COMPILER_OUT_OF_DATE:=1) \\\n\t\t$(warning The coreboot toolchain version of gcc for '$(arch)' \\\n\t\t\tarchitecture is not the current version.) \\\n\t\t$(warning $(arch) gcc version from buildgcc: \\\n\t\t\t$(shell util/crossgcc/buildgcc -s gcc)) \\\n\t\t$(warning $(arch) version of gcc executable: \\\n\t\t\t$(shell $(GCC_CC_$(arch)) --version | head -n1 | \\\n\t\t\trev | cut -d ' ' -f 1 | rev))) \\\n\t$(if $(shell if [ -n \"$(CLANG_CC_$(arch))\" ]; then \\\n\t\t$(CLANG_CC_$(arch)) --version  2>&1 | \\\n\t\t\tsed 's/.*clang version/clang version/' | \\\n\t\t\thead -n1 | cut -d ' ' -f 3 | \\\n\t\tgrep -q \"$(shell util/crossgcc/buildgcc -s clang)\" || \\\n\t\techo not-current; fi), \\\n\t\t$(eval COMPILER_OUT_OF_DATE:=1) \\\n\t\t$(warning The coreboot toolchain version of clang for \\\n\t\t\t'$(arch)' architecture is not the current version.) \\\n\t\t$(warning $(arch) clang version from buildgcc: \\\n\t\t\t$(shell util/crossgcc/buildgcc -s clang)) \\\n\t\t$(warning $(arch) version of clang executable: \\\n\t\t\t$(shell $(CLANG_CC_$(arch)) --version 2>&1 | \\\n\t\t\tsed 's/.*clang version/clang version/' | \\\n\t\t\thead -n1 | cut -d ' ' -f 3))) \\\n\t$(if $(shell if [ \"$(OBJDUMP_$(arch))\" != \"invalidobjdump\" ]; then \\\n\t\t$(OBJDUMP_$(arch)) -v 2>&1 | \\\n\t\tgrep -q \"$(shell util/crossgcc/buildgcc -s binutils)\" || \\\n\t\techo not-current; fi), \\\n\t\t$(eval COMPILER_OUT_OF_DATE:=1)\\\n\t\t$(warning The coreboot toolchain version of binutils for \\\n\t\t\t'$(arch)' architecture is not the current version.)) \\\n)\n$(if $(shell if [ -n \"$(IASL)\" ]; then $(IASL) -v 2>&1 | \\\n\tgrep -q \"$(shell util/crossgcc/buildgcc -s iasl)\" || \\\n\techo not-coreboot; fi), \\\n\t$(eval COMPILER_OUT_OF_DATE:=1)\\\n\t$(warning The coreboot toolchain version of iasl \\\n\t\tis not the current version) \\\n\t\t$(warning $(arch) iasl version from buildgcc: \\\n\t\t\t$(shell util/crossgcc/buildgcc -s iasl)) \\\n\t\t$(warning $(arch) version of iasl executable: \\\n\t\t\t$(shell $(IASL) -v 2>&1 | \\\n\t\t\tgrep ASL+ | rev | cut -f 1 -d ' ' | rev)))\n$(eval UPDATED_SUBMODULES:=1)\nendif #($(filter crossgcc_check%,$(MAKECMDGOALS)),)\nendif #($(MAKECMDGOALS),)\n"
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}