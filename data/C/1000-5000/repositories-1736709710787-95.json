{
  "metadata": {
    "timestamp": 1736709710787,
    "page": 95,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/msquic",
      "stars": 4118,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".CodeQL.yml",
          "type": "blob",
          "size": 0.5107421875,
          "content": "# This file configures CodeQL runs and TSA bug autofiling. For more information, see:\n# https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/codeql/troubleshooting/bugs/generated-library-code\n# (Access restricted to Microsoft employees only.)\n\n# The following paths are explicitly classified which indicates they should not\n# be analyzed by CodeQL and generate alerts.\npath_classifiers:\n  docs:\n    - docs\n  generated:\n    - build\n    - src/cs\n    - src/generated\n  submodules:\n    - submodules\n"
        },
        {
          "name": ".azure",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.185546875,
          "content": "*\n!CMakeLists.txt\n!scripts\n!src\n!cmake\n!submodules/clog\n!submodules/openssl\n!submodules/CMakeLists.txt\nsubmodules/openssl/pyca-cryptography\nsubmodules/openssl/boringssl\n**/*.o\n**/*.a\n**/*.d\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1748046875,
          "content": "# Standardize line endings for all text files.\n* text eol=auto\n\n# Ensure text files stay text\n*.xml text\n\n# Ensure binary files stay binary\n*.pgd binary\n*.png binary\n*.jpg binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.3662109375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n.clang-format\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n# \"bin\" is used by this project\n#[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n[Bb]uild/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n# This project uses .pgd for PGO build support.\n#*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*[.json, .xml, .info]\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code settings folder\n.vscode/\n\n# PGO Local Test Copy\nartifacts_server/\n\n# Rust build output folder\ntarget/\n\n# Cargo (Rust) lock file\nCargo.lock\n\n# IntelliJ project files\n.idea/\n\n# docfx cache folder\n_site\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.62109375,
          "content": "[submodule \"submodules/googletest\"]\n\tpath = submodules/googletest\n\turl = https://github.com/google/googletest\n[submodule \"submodules/openssl\"]\n\tpath = submodules/openssl\n\turl = https://github.com/quictls/openssl.git\n\tbranch = OpenSSL_1_1_1w+quic\n[submodule \"submodules/openssl3\"]\n\tpath = submodules/openssl3\n\turl = https://github.com/quictls/openssl.git\n\tbranch = openssl-3.1.4+quic\n[submodule \"submodules/clog\"]\n\tpath = submodules/clog\n\turl = https://github.com/microsoft/CLOG.git\n[submodule \"submodules/xdp-for-windows\"]\n\tpath = submodules/xdp-for-windows\n\turl = https://github.com/microsoft/xdp-for-windows.git\n\tbranch = release/1.0\n"
        },
        {
          "name": ".sscignore",
          "type": "blob",
          "size": 0.037109375,
          "content": "{\n    \"cfs\": [\"CFS0011\", \"CFS0041\"]\n}\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 34.212890625,
          "content": "# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nif (\"${CMAKE_HOST_SYSTEM_NAME}\" STREQUAL \"Windows\")\n    cmake_minimum_required(VERSION 3.20)\nelse()\n    cmake_minimum_required(VERSION 3.16)\nendif()\n\n# Disable in-source builds to prevent source tree corruption.\nif(\"${CMAKE_CURRENT_SOURCE_DIR}\" STREQUAL \"${CMAKE_BINARY_DIR}\")\n  message(FATAL_ERROR \"\nFATAL: In-source builds are not allowed.\n       You should create a separate directory for build files.\n\")\nendif()\n\nmessage(STATUS \"CMAKE Version: ${CMAKE_VERSION}\")\n\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\nmessage(STATUS \"Source Dir: ${CMAKE_CURRENT_SOURCE_DIR}\")\nmessage(STATUS \"Host System name: ${CMAKE_HOST_SYSTEM_NAME}\")\nif (\"${CMAKE_HOST_SYSTEM_NAME}\" STREQUAL \"Windows\")\n    if (NOT DEFINED CMAKE_SYSTEM_VERSION)\n        set(CMAKE_SYSTEM_VERSION 10.0.22621.0 CACHE STRING INTERNAL FORCE)\n    endif()\nendif()\n\nif(POLICY CMP0091)\n    cmake_policy(SET CMP0091 NEW)\n    message(STATUS \"Setting policy 0091\")\nelse()\n    message(WARNING \"CMake version too old to support Policy 0091; CRT static linking won't work\")\nendif()\n\nif (POLICY CMP0111)\n    cmake_policy(SET CMP0111 NEW)\nendif()\n\nproject(msquic)\n\n# Set a default build type if none was specified\nset(default_build_type \"Release\")\n\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE\n        STRING \"Choose the type of build.\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS\n                 \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\nendif()\n\nmessage(STATUS \"System name: ${CMAKE_SYSTEM_NAME}\")\nmessage(STATUS \"System version: ${CMAKE_SYSTEM_VERSION}\")\nmessage(STATUS \"Platform version: ${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}\")\nmessage(STATUS \"Build type: ${CMAKE_BUILD_TYPE}\")\n\nset(QUIC_MAJOR_VERSION 2)\nset(QUIC_FULL_VERSION 2.5.0)\n\nif (WIN32)\n    set(CX_PLATFORM \"windows\")\nelseif (APPLE)\n    set(CX_PLATFORM \"darwin\")\nelseif (UNIX)\n    set(CX_PLATFORM \"linux\")\nendif()\nmessage(STATUS \"QUIC Platform: ${CX_PLATFORM}\")\n\nenable_testing()\n\n# Set the default TLS method for each platform.\nif (WIN32)\n    set(QUIC_TLS \"schannel\" CACHE STRING \"TLS Library to use\")\nelse()\n    set(QUIC_TLS \"openssl\" CACHE STRING \"TLS Library to use\")\nendif()\n\noption(QUIC_BUILD_TOOLS \"Builds the tools code\" OFF)\noption(QUIC_BUILD_TEST \"Builds the test code\" OFF)\noption(QUIC_BUILD_PERF \"Builds the perf code\" OFF)\noption(QUIC_BUILD_SHARED \"Builds msquic as a dynamic library\" ON)\noption(QUIC_ENABLE_LOGGING \"Enables logging\" OFF)\noption(QUIC_ENABLE_SANITIZERS \"Enables sanitizers\" OFF)\noption(QUIC_ENABLE_POOL_ALLOC \"Enables pool allocations\" ON)\noption(QUIC_STATIC_LINK_CRT \"Statically links the C runtime\" ON)\noption(QUIC_STATIC_LINK_PARTIAL_CRT \"Statically links the compiler-specific portion of the C runtime\" ON)\noption(QUIC_UWP_BUILD \"Build for UWP\" OFF)\noption(QUIC_GAMECORE_BUILD \"Build for GameCore\" OFF)\noption(QUIC_EXTERNAL_TOOLCHAIN \"Enable if system libs and include paths are configured by CMake toolchain\" OFF)\noption(QUIC_PGO \"Enables profile guided optimizations\" OFF)\noption(QUIC_LINUX_XDP_ENABLED \"Enables XDP support\" OFF)\noption(QUIC_SOURCE_LINK \"Enables source linking on MSVC\" ON)\noption(QUIC_EMBED_GIT_HASH \"Embed git commit hash in the binary\" ON)\noption(QUIC_PDBALTPATH \"Enable PDBALTPATH setting on MSVC\" ON)\noption(QUIC_CODE_CHECK \"Run static code checkers\" OFF)\noption(QUIC_OPTIMIZE_LOCAL \"Optimize code for local machine architecture\" OFF)\noption(QUIC_CI \"CI Specific build\" OFF)\noption(QUIC_SKIP_CI_CHECKS \"Disable CI specific build checks\" OFF)\noption(QUIC_TELEMETRY_ASSERTS \"Enable telemetry asserts in release builds\" OFF)\noption(QUIC_USE_SYSTEM_LIBCRYPTO \"Use system libcrypto if openssl TLS\" OFF)\noption(QUIC_HIGH_RES_TIMERS \"Configure the system to use high resolution timers\" OFF)\noption(QUIC_OFFICIAL_RELEASE \"Configured the build for an official release\" OFF)\nset(QUIC_FOLDER_PREFIX \"\" CACHE STRING \"Optional prefix for source group folders when using an IDE generator\")\nset(QUIC_LIBRARY_NAME \"msquic\" CACHE STRING \"Override the output library name\")\nset(QUIC_LOGGING_TYPE \"\" CACHE STRING \"Explicitly choose logging backend (\\\"etw\\\", \\\"lttng\\\" or \\\"stdout\\\")\")\nstring(TOLOWER \"${QUIC_LOGGING_TYPE}\" QUIC_LOGGING_TYPE)\nif(NOT \"${QUIC_LOGGING_TYPE}\" MATCHES \"^(etw|lttng|stdout|)$\")\n    message(FATAL_ERROR \"QUIC_LOGGING_TYPE must be \\\"etw\\\", \\\"lttng\\\" or \\\"stdout\\\", not \\\"${QUIC_LOGGING_TYPE}\\\"\")\nendif()\n\nif (QUIC_GAMECORE_BUILD)\n    if(${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION} VERSION_LESS \"10.0.20348.0\")\n        message(FATAL_ERROR \"gamecore builds require Windows 10 SDK version 20348 or later.\")\n    endif()\nendif()\n\nif (QUIC_UWP_BUILD OR QUIC_GAMECORE_BUILD)\n    message(STATUS \"UWP And GameCore builds disable all executables, and force shared CRT\")\n    set(QUIC_BUILD_TOOLS OFF)\n    set(QUIC_BUILD_TEST OFF)\n    set(QUIC_BUILD_PERF OFF)\n    set(QUIC_STATIC_LINK_CRT OFF)\n    set(QUIC_STATIC_LINK_PARTIAL_CRT OFF)\nendif()\n\nif (QUIC_STATIC_LINK_PARTIAL_CRT)\n    set(QUIC_STATIC_LINK_CRT ON)\nendif()\n\nif (NOT QUIC_BUILD_SHARED)\n    cmake_minimum_required(VERSION 3.20)\nendif()\n\nset(BUILD_SHARED_LIBS ${QUIC_BUILD_SHARED})\n\nif (QUIC_PDBALTPATH AND MSVC)\n#    Disabled in all cases because generation is broken.\n#    file(READ ${CMAKE_CURRENT_LIST_DIR}/cmake/PdbAltPath.txt PDBALTPATH)\n#    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${PDBALTPATH}\")\n#    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${PDBALTPATH}\")\n#    message(STATUS ${CMAKE_EXE_LINKER_FLAGS})\nendif()\n\ninclude(${PROJECT_SOURCE_DIR}/cmake/GitCommands.cmake)\nget_git_current_hash(${PROJECT_SOURCE_DIR} GIT_CURRENT_HASH)\n\nif(NOT GIT_CURRENT_HASH)\n    message(\"Failed to get git hash. Binary will not contain git hash\")\n    set(QUIC_SOURCE_LINK OFF)\n    set(QUIC_EMBED_GIT_HASH OFF)\nendif()\n\nif (QUIC_SOURCE_LINK AND MSVC)\n    if (\"${CMAKE_C_COMPILER_VERSION}\" VERSION_GREATER_EQUAL \"19.20\")\n        include(${PROJECT_SOURCE_DIR}/cmake/SourceLink.cmake)\n        file(TO_NATIVE_PATH \"${PROJECT_BINARY_DIR}/source_link.json\" SOURCE_LINK_JSON)\n        file(TO_NATIVE_PATH \"${PROJECT_SOURCE_DIR}/cmake/source_link.json.in\" SOURCE_LINK_JSON_INPUT)\n        source_link(${PROJECT_SOURCE_DIR} ${SOURCE_LINK_JSON} ${SOURCE_LINK_JSON_INPUT})\n        set(CMAKE_EXE_LINKER_FLAGS_DEBUG \"${CMAKE_EXE_LINKER_FLAGS_DEBUG} /INCREMENTAL:NO\")\n        set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} /INCREMENTAL:NO\")\n        set(CMAKE_SHARED_LINKER_FLAGS_DEBUG \"${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /INCREMENTAL:NO\")\n        set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO} /INCREMENTAL:NO\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /FORCE:PGOREPRO /SOURCELINK:\\\"${SOURCE_LINK_JSON}\\\"\")\n        set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /FORCE:PGOREPRO /SOURCELINK:\\\"${SOURCE_LINK_JSON}\\\"\")\n    else()\n        message(WARNING \"Disabling SourceLink due to old version of MSVC. Please update to VS2019 or greater!\")\n    endif()\nendif()\n\nset(QUIC_BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR})\nset(QUIC_OUTPUT_DIR ${QUIC_BUILD_DIR}/bin/$<IF:$<CONFIG:Debug>,Debug,Release> CACHE STRING \"Output directory for build artifacts\")\n\nstring(GENEX_STRIP ${QUIC_OUTPUT_DIR} QUIC_OUTPUT_DIR_STRIPPED)\n\nstring(COMPARE EQUAL ${QUIC_OUTPUT_DIR} ${QUIC_OUTPUT_DIR_STRIPPED} QUIC_HAS_GENERATOR_OUTPUT_DIR)\n\nif (QUIC_HAS_GENERATOR_OUTPUT_DIR)\n    set(QUIC_PGO_DIR ${QUIC_OUTPUT_DIR})\nelse ()\n    set(QUIC_PGO_DIR ${QUIC_BUILD_DIR}/PGO)\nendif ()\n\nset(QUIC_VER_BUILD_ID \"0\" CACHE STRING \"The version build ID\")\nset(QUIC_VER_SUFFIX \"-private\" CACHE STRING \"The version suffix\")\n\nmessage(STATUS \"Version Build ID: ${QUIC_VER_BUILD_ID}\")\nmessage(STATUS \"Version Suffix: ${QUIC_VER_SUFFIX}\")\n\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${QUIC_BUILD_DIR}/obj/$<IF:$<CONFIG:Debug>,Debug,Release>)\n\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${QUIC_OUTPUT_DIR})\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${QUIC_OUTPUT_DIR})\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${QUIC_OUTPUT_DIR})\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${QUIC_OUTPUT_DIR})\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${QUIC_OUTPUT_DIR})\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${QUIC_OUTPUT_DIR})\n\nset(QUIC_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src/inc)\n\ninclude(GNUInstallDirs)\n\nif (WIN32)\n    set(QUIC_WARNING_FLAGS /WX /W4 /sdl /wd4206 CACHE INTERNAL \"\")\n    set(QUIC_COMMON_FLAGS \"\")\n\n    include(CheckCCompilerFlag)\n\n    if(NOT QUIC_ENABLE_SANITIZERS)\n        check_c_compiler_flag(/Qspectre HAS_SPECTRE)\n    endif()\n    if(HAS_SPECTRE)\n        list(APPEND QUIC_COMMON_FLAGS /Qspectre)\n    endif()\n\n    check_c_compiler_flag(/guard:cf HAS_GUARDCF)\n    if(HAS_GUARDCF)\n        list(APPEND QUIC_COMMON_FLAGS /guard:cf)\n    endif()\n\n    # Require /Qspectre and /guard:cf in CI builds\n    if(QUIC_CI AND NOT QUIC_SKIP_CI_CHECKS)\n        if(NOT HAS_GUARDCF)\n            message(FATAL_ERROR \"/guard:cf must exist for CI builds\")\n        endif()\n        if(NOT HAS_SPECTRE AND NOT QUIC_ENABLE_SANITIZERS AND NOT QUIC_UWP_BUILD)\n            message(FATAL_ERROR \"/Qspectre must exist for CI builds\")\n        endif()\n    endif()\n\n    if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"MSVC\")\n        list(APPEND QUIC_COMMON_FLAGS /MP)\n    endif()\n    set(QUIC_COMMON_DEFINES WIN32_LEAN_AND_MEAN SECURITY_WIN32)\n\n    if(QUIC_ENABLE_LOGGING AND QUIC_LOGGING_TYPE STREQUAL \"\")\n        set(QUIC_LOGGING_TYPE \"etw\")\n        message(STATUS \"Choosing etw as default logging type for platform\")\n    endif()\nelse()\n\n    include(CheckSymbolExists)\n    include(CheckFunctionExists)\n    include(CheckIncludeFile)\n    check_symbol_exists(_SC_PHYS_PAGES unistd.h HAS__SC_PHYS_PAGES)\n    check_function_exists(sysconf HAS_SYSCONF)\n\n    if (CX_PLATFORM STREQUAL \"linux\")\n        include(CheckCCompilerFlag)\n\n        check_symbol_exists(UDP_SEGMENT netinet/udp.h HAS_UDP_SEGMENT)\n        if (NOT HAS_UDP_SEGMENT)\n            message(STATUS \"UDP_SEGMENT is missing. Send performance will be reduced\")\n        endif()\n\n        check_symbol_exists(SO_ATTACH_REUSEPORT_CBPF sys/socket.h HAS_SO_ATTACH_REUSEPORT_CBPF)\n        if(NOT HAS_SO_ATTACH_REUSEPORT_CBPF)\n            message(STATUS \"SO_ATTACH_REUSEPORT_CBPF is missing. Server receive performance will be reduced\")\n        endif()\n\n        check_function_exists(sendmmsg HAS_SENDMMSG)\n        if(NOT HAS_SENDMMSG)\n            message(STATUS \"sendmmsg is missing. Send performance will be reduced\")\n        endif()\n\n        # Error if flags are missing in CI\n        if(QUIC_CI AND NOT QUIC_SKIP_CI_CHECKS)\n            if (NOT HAS_UDP_SEGMENT)\n                message(FATAL_ERROR \"UDP_SEGMENT must exist for CI builds\")\n            endif()\n\n            if(NOT HAS_SO_ATTACH_REUSEPORT_CBPF)\n                message(FATAL_ERROR \"SO_ATTACH_REUSEPORT_CBPF must exist for CI builds\")\n            endif()\n        endif()\n\n        if(QUIC_ENABLE_LOGGING AND QUIC_LOGGING_TYPE STREQUAL \"\")\n            set(QUIC_LOGGING_TYPE \"lttng\")\n            message(STATUS \"Choosing lttng as default logging type for platform\")\n        endif()\n\n    elseif(CX_PLATFORM STREQUAL \"darwin\")\n        check_function_exists(sysctl HAS_SYSCTL)\n        if(QUIC_ENABLE_LOGGING)\n            if(QUIC_LOGGING_TYPE STREQUAL \"stdout\")\n                message(STATUS \"Choosing stdout as logging type for platform\")\n            elseif(QUIC_LOGGING_TYPE STREQUAL \"\")\n                message(WARNING \"Must explicitly set QUIC_LOGGING_TYPE to \\\"stdout\\\" to enable due to performance overhead; disabling logging\")\n                set(QUIC_ENABLE_LOGGING OFF)\n            endif()\n        endif()\n    endif()\n\n    set(QUIC_COMMON_FLAGS \"\")\n    set(QUIC_COMMON_DEFINES _GNU_SOURCE)\n    if (HAS_SENDMMSG)\n        list(APPEND QUIC_COMMON_DEFINES HAS_SENDMMSG)\n    endif()\n    if (HAS__SC_PHYS_PAGES)\n         list(APPEND QUIC_COMMON_DEFINES HAS__SC_PHYS_PAGES)\n    endif()\n    if (HAS_SYSCONF)\n         list(APPEND QUIC_COMMON_DEFINES HAS_SYSCONF)\n    endif()\n    if (HAS_SYSCTL)\n         list(APPEND QUIC_COMMON_DEFINES HAS_SYSCTL)\n    endif()\n    set(QUIC_WARNING_FLAGS -Werror -Wall -Wextra -Wformat=2 -Wno-type-limits\n        -Wno-unknown-pragmas -Wno-multichar -Wno-missing-field-initializers\n        CACHE INTERNAL \"\")\n    if (CMAKE_COMPILER_IS_GNUCC AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0)\n        list(APPEND QUIC_WARNING_FLAGS -Wno-strict-aliasing)\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n        list(APPEND QUIC_WARNING_FLAGS -Wno-missing-braces -Wno-microsoft-anon-tag)\n        if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 18)\n            list(APPEND QUIC_WARNING_FLAGS -Wno-invalid-unevaluated-string)\n        endif()\n    endif()\nendif()\n\nlist(APPEND QUIC_COMMON_DEFINES VER_BUILD_ID=${QUIC_VER_BUILD_ID})\nlist(APPEND QUIC_COMMON_DEFINES VER_SUFFIX=${QUIC_VER_SUFFIX})\n\nif (QUIC_EMBED_GIT_HASH)\n    list(APPEND QUIC_COMMON_DEFINES VER_GIT_HASH=${GIT_CURRENT_HASH})\nendif()\n\nif(QUIC_TELEMETRY_ASSERTS)\n    list(APPEND QUIC_COMMON_DEFINES QUIC_TELEMETRY_ASSERTS=1)\nendif()\n\nif(QUIC_HIGH_RES_TIMERS)\n    list(APPEND QUIC_COMMON_DEFINES QUIC_HIGH_RES_TIMERS=1)\nendif()\n\nif (QUIC_ENABLE_SANITIZERS OR NOT QUIC_ENABLE_POOL_ALLOC)\n    list(APPEND QUIC_COMMON_DEFINES DISABLE_CXPLAT_POOL=1)\nendif()\n\nif(QUIC_OFFICIAL_RELEASE)\n    list(APPEND QUIC_COMMON_DEFINES QUIC_OFFICIAL_RELEASE=1)\n    message(STATUS \"Configured for official release build\")\nendif()\n\nif(QUIC_TLS STREQUAL \"schannel\")\n    message(STATUS \"Enabling Schannel configuration tests\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_TEST_SCHANNEL_FLAGS=1)\n\n    message(STATUS \"Disabling PFX tests\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_DISABLE_PFX_TESTS)\n    message(STATUS \"Disabling 0-RTT support\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_DISABLE_0RTT_TESTS)\n    message(STATUS \"Disabling ChaCha20 support\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_DISABLE_CHACHA20_TESTS)\n    message(STATUS \"Enabling anonymous client auth tests\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_ENABLE_ANON_CLIENT_AUTH_TESTS)\nendif()\n\nif(QUIC_TLS STREQUAL \"openssl\" OR  QUIC_TLS STREQUAL \"openssl3\")\n    message(STATUS \"Enabling OpenSsl configuration tests\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_TEST_OPENSSL_FLAGS=1)\n    if (NOT WIN32)\n       message(STATUS \"Enabling CA file tests\")\n       list(APPEND QUIC_COMMON_DEFINES QUIC_ENABLE_CA_CERTIFICATE_FILE_TESTS)\n    endif()\nendif()\n\nif(QUIC_ENABLE_LOGGING)\n    if (QUIC_LOGGING_TYPE STREQUAL \"etw\")\n        if (WIN32)\n            message(STATUS \"Configuring for manifested ETW logging\")\n            list(APPEND QUIC_COMMON_DEFINES QUIC_EVENTS_MANIFEST_ETW QUIC_LOGS_MANIFEST_ETW)\n        else()\n            message(WARNING \"ETW logging is only available on WIN32. Disabling logging\")\n            set(QUIC_ENABLE_LOGGING OFF)\n        endif()\n\n    elseif (QUIC_LOGGING_TYPE STREQUAL \"lttng\")\n        if (QUIC_ENABLE_SANITIZERS)\n            message(WARNING \"LTTng logging is incompatible with sanitizers. Skipping logging\")\n            set(QUIC_ENABLE_LOGGING OFF)\n        else()\n            # FindLTTngUST does not exist before CMake 3.6, so disable logging for older cmake versions\n            if (${CMAKE_VERSION} VERSION_LESS \"3.6.0\")\n                message(WARNING \"Logging unsupported on this version of CMake. Please upgrade to 3.6 or later.\")\n                set(QUIC_ENABLE_LOGGING OFF)\n            else()\n                check_include_file(lttng/ust-config.h HAS_LTTNG)\n                if (NOT HAS_LTTNG)\n                    message(WARNING \"LTTng logging not found. Disabling logging\")\n                    set(QUIC_ENABLE_LOGGING OFF)\n                else()\n                    check_symbol_exists(LTTNG_UST_HAVE_SDT_INTEGRATION lttng/ust-config.h HAS_LTTNG_SDT)\n                    if(HAS_LTTNG_SDT)\n                        message(WARNING \"LTTng with SDT integration does not work. Disabling logging\")\n                        set(QUIC_ENABLE_LOGGING OFF)\n                    else()\n                        message(STATUS \"Configuring for LTTng logging\")\n                        list(APPEND QUIC_COMMON_DEFINES QUIC_CLOG)\n                        include(FindLTTngUST)\n                    endif()\n                endif()\n            endif()\n        endif()\n\n    elseif (QUIC_LOGGING_TYPE STREQUAL \"stdout\")\n        message(STATUS \"Configuring for stdout logging\")\n        list(APPEND QUIC_COMMON_DEFINES QUIC_EVENTS_STDOUT QUIC_LOGS_STDOUT)\n    endif()\n\nelse()\n    message(STATUS \"QUIC_ENABLE_LOGGING is false. Disabling logging\")\nendif()\n\nif (NOT QUIC_ENABLE_LOGGING)\n    list(APPEND QUIC_COMMON_DEFINES QUIC_EVENTS_STUB QUIC_LOGS_STUB)\nendif()\n\nif (NOT MSVC AND NOT APPLE AND NOT ANDROID)\n    find_library(ATOMIC NAMES atomic libatomic.so.1)\n    if (ATOMIC)\n        message(STATUS \"Found libatomic: ${ATOMIC}\")\n    else()\n        message(STATUS \"libatomic not found. If build fails, install libatomic\")\n    endif()\n\n    find_library(NUMA NAMES NUMA libnuma.so.1)\n    if (NUMA)\n        message(STATUS \"Found libnuma: ${NUMA}\")\n        find_file(NUMA-HEADER NAMES \"numa.h\")\n        if (NUMA-HEADER)\n            message(STATUS \"Found numa.h: ${NUMA-HEADER}\")\n            list(APPEND QUIC_COMMON_DEFINES CXPLAT_NUMA_AWARE)\n        else()\n            message(STATUS \"numa.h not found. If build fails, install libnuma-dev\")\n        endif()\n    else()\n        message(STATUS \"libnuma not found. If build fails, install libnuma\")\n    endif()\nendif()\n\nif (CMAKE_GENERATOR_PLATFORM STREQUAL \"\")\nstring(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} SYSTEM_PROCESSOR)\nelse()\nstring(TOLOWER ${CMAKE_GENERATOR_PLATFORM} SYSTEM_PROCESSOR)\nendif()\n\nif(WIN32)\n    # Generate the MsQuicEtw header file.\n    file(MAKE_DIRECTORY ${QUIC_BUILD_DIR}/inc)\n\n    if(NOT DEFINED CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH OR CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH)\n        find_program(MC_EXE NAMES mc.exe)\n        if(MC_EXE MATCHES \"NOTFOUND\")\n            # If not found, then VS project generator will set %PATH% env var to WinSDK bin directory\n            set(MC_EXE \"mc.exe\" CACHE STRING \"mc.exe from %PATH%\" FORCE)\n        endif()\n    else()\n        find_program(MC_EXE NAMES mc.exe REQUIRED)\n    endif()\n\n    add_custom_command(\n        OUTPUT ${QUIC_BUILD_DIR}/inc/MsQuicEtw.h\n        OUTPUT ${QUIC_BUILD_DIR}/inc/MsQuicEtw.rc\n        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/src/manifest/MsQuicEtw.man\n        COMMAND \"${MC_EXE}\" -um -h ${QUIC_BUILD_DIR}/inc -r ${QUIC_BUILD_DIR}/inc ${CMAKE_CURRENT_SOURCE_DIR}/src/manifest/MsQuicEtw.man)\n    add_custom_target(MsQuicEtw_HeaderBuild\n        DEPENDS ${QUIC_BUILD_DIR}/inc/MsQuicEtw.h)\n\n    set_property(TARGET MsQuicEtw_HeaderBuild PROPERTY FOLDER \"${QUIC_FOLDER_PREFIX}helpers\")\n\n    add_library(MsQuicEtw_Header INTERFACE)\n    target_include_directories(MsQuicEtw_Header INTERFACE\n        $<BUILD_INTERFACE:${QUIC_BUILD_DIR}/inc>\n        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)\n    add_dependencies(MsQuicEtw_Header MsQuicEtw_HeaderBuild)\n\n    add_library(MsQuicEtw_Resource OBJECT ${QUIC_BUILD_DIR}/inc/MsQuicEtw.rc)\n    set_property(TARGET MsQuicEtw_Resource PROPERTY FOLDER \"${QUIC_FOLDER_PREFIX}helpers\")\n\n    message(STATUS \"Disabling (client) shared port support\")\n    list(APPEND QUIC_COMMON_DEFINES QUIC_DISABLE_SHARED_PORT_TESTS)\n\n    if (QUIC_UWP_BUILD)\n        list(APPEND QUIC_COMMON_DEFINES QUIC_UWP_BUILD QUIC_RESTRICTED_BUILD)\n        set(CMAKE_CXX_STANDARD_LIBRARIES \"\")\n        set(CMAKE_CXX_STANDARD_LIBRARIES_INIT \"\")\n        set(CMAKE_C_STANDARD_LIBRARIES \"\")\n        set(CMAKE_C_STANDARD_LIBRARIES_INIT \"\")\n    endif()\n\n    if (QUIC_GAMECORE_BUILD)\n        list(APPEND QUIC_COMMON_DEFINES QUIC_GAMECORE_BUILD QUIC_RESTRICTED_BUILD)\n    endif()\n\n    if (QUIC_GAMECORE_BUILD AND NOT QUIC_EXTERNAL_TOOLCHAIN)\n        list(APPEND QUIC_COMMON_DEFINES WINAPI_FAMILY=WINAPI_FAMILY_GAMES)\n        set(CMAKE_CXX_STANDARD_LIBRARIES \"\")\n        set(CMAKE_CXX_STANDARD_LIBRARIES_INIT \"\")\n        set(CMAKE_C_STANDARD_LIBRARIES \"\")\n        set(CMAKE_C_STANDARD_LIBRARIES_INIT \"\")\n\n        set(UnsupportedLibs advapi32.lib comctl32.lib comsupp.lib dbghelp.lib gdi32.lib gdiplus.lib guardcfw.lib kernel32.lib mmc.lib msimg32.lib msvcole.lib msvcoled.lib mswsock.lib ntstrsafe.lib ole2.lib ole2autd.lib ole2auto.lib ole2d.lib ole2ui.lib ole2uid.lib ole32.lib oleacc.lib oleaut32.lib oledlg.lib oledlgd.lib oldnames.lib runtimeobject.lib shell32.lib shlwapi.lib strsafe.lib urlmon.lib user32.lib userenv.lib wlmole.lib wlmoled.lib onecore.lib)\n        set(Console_LinkOptions /DYNAMICBASE /NXCOMPAT)\n        foreach(arg ${UnsupportedLibs})\n            list(APPEND Console_LinkOptions \"/NODEFAULTLIB:${arg}\")\n        endforeach()\n\n        set(Console_ArchOptions /favor:AMD64)\n\n        list(APPEND Console_ArchOptions /arch:AVX)\n\n        # Locate Software Development Kits\n        get_filename_component(Console_SdkRoot \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\GDK;InstallPath]\" ABSOLUTE CACHE)\n\n        if(NOT EXISTS ${Console_SdkRoot})\n            if (EXISTS \"C:\\\\Program Files (x86)\\\\Microsoft GDK\")\n                set(Console_SdkRoot \"C:\\\\Program Files (x86)\\\\Microsoft GDK\")\n            else()\n                message(FATAL_ERROR \"Could not find GDK install\")\n            endif()\n        endif()\n\n        file(GLOB GdkFolders ${Console_SdkRoot}/*)\n\n        set(XdkEditionTarget 5000000000)\n\n        foreach(GdkFolder ${GdkFolders})\n            if (IS_DIRECTORY ${GdkFolder})\n                file(GLOB SubDirs ${GdkFolder}/*)\n                foreach(SubDir ${SubDirs})\n                    if (SubDir MATCHES \"GXDK$\")\n                        # Make sure library exists\n                        set(GxdkLibDirectory \"${SubDir}/gameKit/Lib/amd64\")\n                        set(GxdkRuntimeLib \"${GxdkLibDirectory}/xgameplatform.lib\")\n                        if (EXISTS ${GxdkRuntimeLib})\n                            get_filename_component(PotentialXdkEditionTarget ${GdkFolder} NAME)\n                            # Always select lowest version equal or higher than 211000\n                            if (PotentialXdkEditionTarget LESS XdkEditionTarget AND\n                                PotentialXdkEditionTarget GREATER_EQUAL 211000)\n                                set(XdkEditionTarget ${PotentialXdkEditionTarget})\n                                set(Console_EndpointLibRoot \"${GxdkLibDirectory}\")\n                            endif()\n                        endif()\n                    endif()\n                endforeach()\n            endif()\n        endforeach()\n\n        if (XdkEditionTarget EQUAL 5000000000)\n            message(FATAL_ERROR \"Gxdk Target Not Found\")\n        endif()\n\n        message(STATUS \"Chosing ${XdkEditionTarget} with root ${Console_EndpointLibRoot}\")\n\n    endif()\n\n    if(QUIC_ENABLE_SANITIZERS)\n        # This fails when linking statically, so for today require dynamic linkage\n        if (QUIC_STATIC_LINK_CRT)\n            message(FATAL_ERROR \"Static linkage unsupported with Address Sanitizer in Windows\")\n        endif()\n        message(STATUS \"Configuring sanitizers\")\n        list(APPEND QUIC_COMMON_FLAGS /fsanitize=address)\n        list(APPEND QUIC_COMMON_DEFINES _DISABLE_VECTOR_ANNOTATION) # For std:vector usage in tests\n    endif()\n\n    set(QUIC_C_FLAGS ${QUIC_COMMON_FLAGS})\n    set(QUIC_CXX_FLAGS ${QUIC_COMMON_FLAGS} /EHsc /permissive-)\n\n    # These cannot be updated until CMake 3.13\n    set(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} /GL /Zi\")\n    set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /GL /Zi\")\n    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /LTCG /IGNORE:4075 /DEBUG /OPT:REF /OPT:ICF\")\n    set(CMAKE_EXE_LINKER_FLAGS_RELEASE \"${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG /IGNORE:4075 /DEBUG /OPT:REF /OPT:ICF\")\n\n    # Find the right PGO file.\n    if(NOT EXISTS \"${QUIC_PGO_FILE}\")\n        set(QUIC_PGO_NAME \"msquic.${QUIC_TLS}.pgd\")\n        set(QUIC_PGO_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/src/bin/winuser/pgo_${SYSTEM_PROCESSOR}/${QUIC_PGO_NAME}\")\n    endif()\n    if(NOT EXISTS \"${QUIC_PGO_FILE}\")\n        set(QUIC_PGO_NAME \"msquic.pgd\")\n        set(QUIC_PGO_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/src/bin/winuser/pgo_${SYSTEM_PROCESSOR}/${QUIC_PGO_NAME}\")\n    endif()\n    message(STATUS \"Using PGO file ${QUIC_PGO_NAME}\")\n\n    # Configure PGO linker flags.\n    if(QUIC_PGO)\n        # Configured for training mode. Use the previous PGD file if present.\n        if(EXISTS \"${QUIC_PGO_FILE}\")\n            message(STATUS \"/GENPROFILE:PDG\")\n            configure_file(\"${QUIC_PGO_FILE}\" \"${QUIC_PGO_DIR}/msquic.pgd\" COPYONLY)\n            set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /GENPROFILE:\\\"PGD=${QUIC_PGO_DIR}/msquic.pgd\\\"\")\n        else()\n            message(STATUS \"/GENPROFILE\")\n            set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /GENPROFILE\")\n        endif()\n        set(CMAKE_VS_SDK_LIBRARY_DIRECTORIES \"$(LibraryPath);$(VC_LibraryPath_VC_${SYSTEM_PROCESSOR}_Desktop)\")\n    else()\n        # Just doing a normal build. Use the PGD file if present.\n        if(EXISTS \"${QUIC_PGO_FILE}\")\n            message(STATUS \"Using profile-guided optimization\")\n            file(MAKE_DIRECTORY ${QUIC_PGO_DIR})\n            configure_file(\"${QUIC_PGO_FILE}\" \"${QUIC_PGO_DIR}/msquic.pgd\" COPYONLY)\n            set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /USEPROFILE:\\\"PGD=${QUIC_PGO_DIR}/msquic.pgd\\\"\")\n        endif()\n    endif()\n\n    if(QUIC_STATIC_LINK_CRT)\n        message(STATUS \"Configuring for statically-linked CRT\")\n        set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n    endif()\n\n    if(QUIC_STATIC_LINK_PARTIAL_CRT)\n        message(STATUS \"Configuring for partially statically-linked CRT\")\n        set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:libucrt.lib /DEFAULTLIB:ucrt.lib\")\n    endif()\n\n    if (NOT QUIC_STATIC_LINK_CRT AND NOT QUIC_STATIC_LINK_PARTIAL_CRT)\n        # We are using dynamic linking. Ensure that only the release version of CRT is used.\n        message(STATUS \"Configuring for release version of dynamically linked CRT\")\n        set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreadedDLL\")\n    endif()\n\nelse() #!WIN32\n    # Custom build flags.\n\n    if (QUIC_OPTIMIZE_LOCAL AND NOT CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n        set(MARCH -march=native)\n    endif()\n\n    set(CMAKE_C_FLAGS_DEBUG \"-Og -fno-omit-frame-pointer\")\n    set(CMAKE_C_FLAGS_MINSIZEREL \"-Os -DNDEBUG\")\n    set(CMAKE_C_FLAGS_RELWITHDEBINFO \"-O3 -fno-omit-frame-pointer ${MARCH} -DNDEBUG\")\n    set(CMAKE_C_FLAGS_RELEASE \"-O3 ${MARCH} -DNDEBUG\")\n    if (CX_PLATFORM STREQUAL \"darwin\")\n        set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -gdwarf\")\n        set(CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -gdwarf\")\n    else()\n        set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -ggdb3\")\n        set(CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -ggdb3\")\n    endif()\n    set(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})\n    set(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_C_FLAGS_MINSIZEREL})\n    set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO})\n    set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n\n    list(APPEND QUIC_COMMON_FLAGS -fms-extensions -fPIC)\n    if (CX_PLATFORM STREQUAL \"darwin\")\n        list(APPEND QUIC_COMMON_DEFINES CX_PLATFORM_DARWIN)\n        list(APPEND QUIC_COMMON_FLAGS -Wno-microsoft-anon-tag -Wno-tautological-constant-out-of-range-compare -Wmissing-field-initializers)\n        message(STATUS \"Disabling (client) shared port support\")\n        list(APPEND QUIC_COMMON_DEFINES QUIC_DISABLE_SHARED_PORT_TESTS)\n    else()\n        list(APPEND QUIC_COMMON_DEFINES CX_PLATFORM_LINUX)\n        message(STATUS \"Enabling shared ephemeral port work around\")\n        list(APPEND QUIC_COMMON_DEFINES QUIC_SHARED_EPHEMERAL_WORKAROUND)\n    endif()\n\n    if(QUIC_ENABLE_SANITIZERS)\n        message(STATUS \"Configuring sanitizers\")\n        list(APPEND QUIC_COMMON_FLAGS -fsanitize=address,leak,undefined,alignment -fsanitize-address-use-after-scope -Og -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-var-tracking-assignments)\n        if (CX_PLATFORM STREQUAL \"darwin\")\n            list(APPEND QUIC_COMMON_FLAGS -gdwarf)\n        else()\n            list(APPEND QUIC_COMMON_FLAGS -ggdb3)\n        endif()\n        if (CMAKE_C_COMPILER_ID MATCHES \"Clang\")\n            list(APPEND QUIC_COMMON_FLAGS -fsanitize=unsigned-integer-overflow -fsanitize=local-bounds -fsanitize=integer -fsanitize=nullability)\n        endif()\n    endif()\n\n    set(QUIC_C_FLAGS ${QUIC_COMMON_FLAGS})\n    set(QUIC_CXX_FLAGS ${QUIC_COMMON_FLAGS})\nendif()\n\nif(QUIC_TLS STREQUAL \"openssl\" OR  QUIC_TLS STREQUAL \"openssl3\")\n    add_library(OpenSSL INTERFACE)\n\n    include(FetchContent)\n\n    FetchContent_Declare(\n        OpenSSLQuic\n        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/submodules\n        CMAKE_ARGS \"-DQUIC_USE_SYSTEM_LIBCRYPTO=${QUIC_USE_SYSTEM_LIBCRYPTO}\"\n    )\n    FetchContent_MakeAvailable(OpenSSLQuic)\n\n    target_link_libraries(OpenSSL\n        INTERFACE\n        OpenSSLQuic::OpenSSLQuic\n    )\nendif()\n\nif (QUIC_USE_SYSTEM_LIBCRYPTO)\n    list(APPEND QUIC_COMMON_DEFINES CXPLAT_SYSTEM_CRYPTO)\nendif()\n\nif(QUIC_CODE_CHECK)\n    find_program(CLANGTIDY NAMES clang-tidy)\n    if(CLANGTIDY)\n        message(STATUS \"Found clang-tidy: ${CLANGTIDY}\")\n        set(CLANG_TIDY_CHECKS *\n            # add checks to ignore here:\n            -altera-*\n            -android-cloexec-fopen\n            -android-cloexec-socket\n            -bugprone-assignment-in-if-condition\n            -bugprone-casting-through-void\n            -bugprone-easily-swappable-parameters\n            -bugprone-implicit-widening-of-multiplication-result\n            -bugprone-macro-parentheses\n            -bugprone-multi-level-implicit-pointer-conversion\n            -bugprone-narrowing-conversions\n            -bugprone-reserved-identifier\n            -bugprone-sizeof-expression\n            -bugprone-switch-missing-default-case\n            -cert-dcl37-c\n            -cert-dcl51-cpp\n            -cert-err33-c\n            -clang-analyzer-optin.core.EnumCastOutOfRange\n            -clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling\n            -clang-diagnostic-invalid-unevaluated-string\n            -clang-diagnostic-microsoft-anon-tag\n            -concurrency-mt-unsafe\n            -cppcoreguidelines-avoid-magic-numbers\n            -cppcoreguidelines-avoid-non-const-global-variables\n            -cppcoreguidelines-init-variables\n            -cppcoreguidelines-macro-to-enum\n            -cppcoreguidelines-narrowing-conversions\n            -google-readability-casting\n            -google-readability-function-size\n            -google-readability-todo\n            -hicpp-function-size\n            -hicpp-no-assembler\n            -hicpp-signed-bitwise\n            -llvmlibc-restrict-system-libc-headers\n            -misc-include-cleaner\n            -misc-no-recursion # do you really need recursion?\n            -misc-header-include-cycle\n            -modernize-macro-to-enum\n            -readability-avoid-const-params-in-decls\n            -readability-avoid-nested-conditional-operator\n            -readability-duplicate-include\n            -readability-function-cognitive-complexity\n            -readability-function-size\n            -readability-identifier-length\n            -readability-identifier-naming\n            -readability-isolate-declaration\n            -readability-magic-numbers\n            -readability-non-const-parameter\n            -readability-redundant-casting\n        )\n        string(REPLACE \";\" \",\" CLANG_TIDY_CHECKS \"${CLANG_TIDY_CHECKS}\")\n        set(CMAKE_C_CLANG_TIDY_AVAILABLE ${CLANGTIDY} -checks=${CLANG_TIDY_CHECKS}\n            -system-headers --warnings-as-errors=*)\n    else()\n        message(STATUS \"clang-tidy not found\")\n    endif()\n\n    find_program(CPPCHECK NAMES cppcheck)\n    if(CPPCHECK)\n        message(STATUS \"Found cppcheck: ${CPPCHECK}\")\n        set(CMAKE_C_CPPCHECK_AVAILABLE ${CPPCHECK} -q --inline-suppr\n            --suppress=duplicateValueTernary --suppress=objectIndex\n            --suppress=varFuncNullUB --suppress=constParameter\n            # these are finding potential logic issues, may want to suppress when focusing on nits:\n            --suppress=nullPointer --suppress=nullPointerRedundantCheck\n            --suppress=knownConditionTrueFalse --suppress=invalidscanf\n            --enable=warning,style,performance,portability -D__linux__)\n    else()\n        message(STATUS \"cppcheck not found\")\n    endif()\nendif()\n\nadd_subdirectory(src/inc)\nadd_subdirectory(src/generated)\n\n# Product code\nadd_subdirectory(src/core)\nadd_subdirectory(src/platform)\nadd_subdirectory(src/bin)\n\n# Tool code\nif(QUIC_BUILD_TOOLS)\n    add_subdirectory(src/tools)\nendif()\n\n# Performance code\nif(QUIC_BUILD_PERF)\n    add_subdirectory(src/perf/lib)\n    add_subdirectory(src/perf/bin)\nendif()\n\n# Test code\nif(QUIC_BUILD_TEST)\n    include(FetchContent)\n\n    enable_testing()\n\n    # Build the googletest framework.\n\n    # Enforce static builds for test artifacts\n    set(PREV_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS} CACHE INTERNAL \"\")\n    set(BUILD_SHARED_LIBS OFF CACHE INTERNAL \"\")\n    set(BUILD_GMOCK OFF CACHE BOOL \"Builds the googlemock subproject\")\n    set(INSTALL_GTEST OFF CACHE BOOL \"Enable installation of googletest. (Projects embedding googletest may want to turn this OFF.)\")\n    if(WIN32 AND QUIC_STATIC_LINK_CRT)\n        option(gtest_force_shared_crt \"Use shared (DLL) run-time lib even when Google Test is built as static lib.\" ON)\n    endif()\n    FetchContent_Declare(\n        googletest\n        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/submodules/googletest\n    )\n    FetchContent_MakeAvailable(googletest)\n    set(BUILD_SHARED_LIBS ${PREV_BUILD_SHARED_LIBS} CACHE INTERNAL \"\")\n\n    set_property(TARGET gtest PROPERTY CXX_STANDARD 17)\n    set_property(TARGET gtest PROPERTY FOLDER \"${QUIC_FOLDER_PREFIX}tests\")\n\n    set_property(TARGET gtest_main PROPERTY CXX_STANDARD 17)\n    set_property(TARGET gtest_main PROPERTY FOLDER \"${QUIC_FOLDER_PREFIX}tests\")\n    set_property(TARGET gtest_main PROPERTY EXCLUDE_FROM_ALL ON)\n    set_property(TARGET gtest_main PROPERTY EXCLUDE_FROM_DEFAULT_BUILD ON)\n\n    if (HAS_SPECTRE)\n        target_compile_options(gtest PRIVATE /Qspectre)\n        target_compile_options(gtest_main PRIVATE /Qspectre)\n    endif()\n\n    if (HAS_GUARDCF)\n        target_compile_options(gtest PRIVATE /guard:cf)\n        target_compile_options(gtest_main PRIVATE /guard:cf)\n    endif()\n\n    if(WIN32 AND QUIC_ENABLE_SANITIZERS)\n        target_compile_options(gtest PRIVATE /fsanitize=address)\n        target_compile_options(gtest_main PRIVATE /fsanitize=address)\n        target_compile_definitions(gtest PRIVATE _DISABLE_VECTOR_ANNOTATION)\n        target_compile_definitions(gtest_main PRIVATE _DISABLE_VECTOR_ANNOTATION)\n    endif()\n\n    add_subdirectory(src/core/unittest)\n    add_subdirectory(src/platform/unittest)\n    add_subdirectory(src/test/lib)\n    add_subdirectory(src/test/bin)\nendif()\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 3.1669921875,
          "content": "{\n    \"version\": 3,\n    \"cmakeMinimumRequired\": {\n        \"major\": 3,\n        \"minor\": 21,\n        \"patch\": 0\n    },\n    \"configurePresets\": [\n        {\n            \"name\": \"win-base\",\n            \"description\": \"Base settings for all windows builds\",\n            \"hidden\": true,\n            \"generator\": \"Ninja\",\n            \"binaryDir\": \"${sourceDir}/build/windows\",\n            \"cacheVariables\": {\n                \"QUIC_ENABLE_LOGGING\": \"on\",\n                \"QUIC_BUILD_TOOLS\": \"on\",\n                \"QUIC_BUILD_TEST\": \"on\",\n                \"QUIC_BUILD_PERF\": \"on\",\n                \"QUIC_LIBRARY_NAME\": \"msquic\",\n                \"CMAKE_C_COMPILER\": \"cl.exe\",\n                \"CMAKE_CXX_COMPILER\": \"cl.exe\"\n            },\n            \"condition\": {\n                \"type\": \"equals\",\n                \"lhs\": \"${hostSystemName}\",\n                \"rhs\": \"Windows\"\n            }\n        },\n        {\n            \"name\": \"lin-base\",\n            \"description\": \"Base settings for all Linux builds\",\n            \"hidden\": true,\n            \"generator\": \"Ninja\",\n            \"binaryDir\": \"${sourceDir}/build/linux\",\n            \"cacheVariables\": {\n                \"QUIC_LINUX_LOG_ENCODER\": \"lttng\",\n                \"QUIC_ENABLE_LOGGING\": \"on\",\n                \"QUIC_BUILD_TOOLS\": \"on\",\n                \"QUIC_BUILD_TEST\": \"on\",\n                \"QUIC_BUILD_PERF\": \"on\",\n                \"QUIC_LIBRARY_NAME\": \"msquic\"\n            },\n            \"condition\": {\n                \"type\": \"equals\",\n                \"lhs\": \"${hostSystemName}\",\n                \"rhs\": \"Linux\"\n            }\n        },\n        {\n            \"name\": \"windows-schannel-debug\",\n            \"displayName\": \"Windows Schannel Debug\",\n            \"inherits\": \"win-base\",\n            \"binaryDir\": \"${sourceDir}/build/windows/x64_schannel\",\n            \"architecture\": {\n                \"value\": \"x64\",\n                \"strategy\": \"external\"\n            },\n            \"cacheVariables\": {\n                \"QUIC_OUTPUT_DIR\": \"${sourceDir}/artifacts/bin/windows/x64_Debug_schannel\",\n                \"CMAKE_BUILD_TYPE\": \"Debug\",\n                \"QUIC_TLS\": \"schannel\"\n            }\n        },\n        {\n            \"name\": \"linux-openssl-debug\",\n            \"displayName\": \"Linux OpenSSL Debug\",\n            \"inherits\": \"lin-base\",\n            \"binaryDir\": \"${sourceDir}/build/linux/x64_openssl\",\n            \"architecture\": {\n                \"value\": \"x64\",\n                \"strategy\": \"external\"\n            },\n            \"cacheVariables\": {\n                \"QUIC_OUTPUT_DIR\": \"${sourceDir}/artifacts/bin/linux/x64_Debug_openssl\",\n                \"CMAKE_BUILD_TYPE\": \"Debug\",\n                \"QUIC_TLS\": \"openssl\"\n            }\n        }\n    ],\n    \"buildPresets\" : [\n        {\n            \"name\": \"windows-debug\",\n            \"displayName\": \"Windows Debug\",\n            \"configurePreset\": \"windows-schannel-debug\"\n        },\n        {\n            \"name\": \"windows-debug-clean\",\n            \"displayName\": \"Windows Debug (clean)\",\n            \"cleanFirst\": true,\n            \"configurePreset\": \"windows-schannel-debug\"\n        },\n        {\n            \"name\": \"linux-debug\",\n            \"displayName\": \"Linux Debug\",\n            \"configurePreset\": \"linux-openssl-debug\"\n        }\n    ]\n}"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.6005859375,
          "content": "[package]\nname = \"msquic\"\nversion = \"2.5.0-beta\"\nedition = \"2018\"\nauthors = [\"Microsoft\"]\ndescription = \"Microsoft implementation of the IETF QUIC protocol\"\nreadme = \"README.md\"\nrepository = \"https://github.com/microsoft/msquic/\"\nlicense = \"MIT\"\ncategories = [\"network-programming\", \"asynchronous\"]\nkeywords = [\"quic\", \"network\", \"secure\"]\nbuild = \"scripts/build.rs\"\ninclude = [\n    \"*/*.md\",\n    \"/*.toml\",\n    \"/cmake\",\n    \"/CMakeLists.txt\",\n    \"/LICENSE\",\n    \"/submodules/CMakeLists.txt\",\n    \"/submodules/openssl/*.*\",\n    \"/submodules/openssl/apps\",\n    \"/submodules/openssl/CHANGES\",\n    \"/submodules/openssl/config\",\n    \"/submodules/openssl/Configure\",\n    \"/submodules/openssl/Configurations\",\n    \"/submodules/openssl/crypto\",\n    \"/submodules/openssl/engines\",\n    \"/submodules/openssl/external\",\n    \"/submodules/openssl/include\",\n    \"/submodules/openssl/ms\",\n    \"/submodules/openssl/os-dep\",\n    \"/submodules/openssl/ssl\",\n    \"/submodules/openssl/util\",\n    \"/submodules/openssl/VMS\",\n    \"/submodules/xdp-for-windows/published/external\",\n    \"/scripts/build.rs\",\n    \"/src/**/*.rs\",\n    \"/src/bin\",\n    \"/src/core\",\n    \"/src/inc\",\n    \"/src/generated\",\n    \"/src/manifest\",\n    \"/src/platform\",\n    \"/THIRD-PARTY-NOTICES\",\n]\n\n[features]\ndefault = []\nschannel = []\nstatic = []\npreview-api = []\n# Overwrite generated binding by reruning the bindgen\noverwrite = [ \"dep:bindgen\" ]\n\n[build-dependencies]\ncmake = \"0.1\"\nbindgen = { version = \"0.71\", optional = true }\n\n[dependencies]\nbitfield = \"0.17.0\"\nlibc = \"0.2.0\"\nc-types = \"4.0.0\"\nserde = { version = \"1.0.117\", features = [\"derive\"] }\nctor = \"0.2.9\"\nsocket2 = \"0.5.8\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "Copyright (c) Microsoft Corporation.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.97265625,
          "content": "<h1 align=\"center\"><img src=\"docs/images/readme_logo.png\" width=\"500\" alt=\"MsQuic logo\"/></h1>\n\n[![Documentation](https://img.shields.io/static/v1?label=Documentation&message=Dashboard&color=blue)](https://microsoft.github.io/msquic/msquicdocs/docs/API.html)\n[![Perf Dashboard](https://img.shields.io/static/v1?label=Performance&message=Dashboard&color=blue)](https://microsoft.github.io/msquic/)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/microsoft/msquic/build.yml?query=branch%3Amain&label=Build)](https://github.com/microsoft/msquic/actions/workflows/build.yml?query=branch%3Amain)\n[![Test Status](https://img.shields.io/github/actions/workflow/status/microsoft/msquic/test.yml?query=branch%3Amain&label=Test)](https://github.com/microsoft/msquic/actions/workflows/test.yml?query=branch%3Amain)\n[![Stress Status](https://img.shields.io/github/actions/workflow/status/microsoft/msquic/stress.yml?query=branch%3Amain&label=Stress)](https://github.com/microsoft/msquic/actions/workflows/stress.yml?query=branch%3Amain)\n[![codecov](https://codecov.io/github/microsoft/msquic/branch/main/graph/badge.svg?token=xAjIMDn7wy)](https://codecov.io/github/microsoft/msquic)\n![CodeQL](https://github.com/microsoft/msquic/workflows/CodeQL/badge.svg?branch=main)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/4846/badge)](https://bestpractices.coreinfrastructure.org/projects/4846)\n[![Discord](https://img.shields.io/discord/827744285595271168?label=Discord&logo=discord&logoColor=white&color=7289DA)](https://discord.gg/YGAtCwTSsc)\n[![crates.io](https://img.shields.io/crates/v/msquic)](https://crates.io/crates/msquic)\n[![nuget](https://img.shields.io/nuget/vpre/Microsoft.Native.Quic.MsQuic.Schannel?style=plastic)](https://www.nuget.org/profiles/msquic)\n\nMsQuic is a Microsoft implementation of the [IETF QUIC](https://datatracker.ietf.org/wg/quic/about/)\nprotocol. It is cross-platform, written in C and designed to be a general purpose QUIC library. MsQuic also has C++ API wrapper classes and exposes interop layers for both Rust and C#.\n\n## Protocol Features\n\n[![](https://img.shields.io/static/v1?label=RFC&message=9000&color=brightgreen)](https://tools.ietf.org/html/rfc9000)\n[![](https://img.shields.io/static/v1?label=RFC&message=9001&color=brightgreen)](https://tools.ietf.org/html/rfc9001)\n[![](https://img.shields.io/static/v1?label=RFC&message=9002&color=brightgreen)](https://tools.ietf.org/html/rfc9002)\n[![](https://img.shields.io/static/v1?label=RFC&message=9221&color=brightgreen)](https://tools.ietf.org/html/rfc9221)\n[![](https://img.shields.io/static/v1?label=RFC&message=9287&color=brightgreen)](https://tools.ietf.org/html/rfc9287)\n[![](https://img.shields.io/static/v1?label=RFC&message=9368&color=brightgreen)](https://tools.ietf.org/html/rfc9368)\n[![](https://img.shields.io/static/v1?label=RFC&message=9369&color=brightgreen)](https://tools.ietf.org/html/rfc9369)\n[![](https://img.shields.io/static/v1?label=Draft&message=Load%20Balancers&color=blue)](https://tools.ietf.org/html/draft-ietf-quic-load-balancers)\n[![](https://img.shields.io/static/v1?label=Draft&message=ACK%20Frequency&color=blue)](https://tools.ietf.org/html/draft-ietf-quic-ack-frequency)\n[![](https://img.shields.io/static/v1?label=Draft&message=Disable%20Encryption&color=blueviolet)](https://tools.ietf.org/html/draft-banks-quic-disable-encryption)\n[![](https://img.shields.io/static/v1?label=Draft&message=Performance&color=blueviolet)](https://tools.ietf.org/html/draft-banks-quic-performance)\n[![](https://img.shields.io/static/v1?label=Draft&message=CIBIR&color=blueviolet)](https://tools.ietf.org/html/draft-banks-quic-cibir)\n[![](https://img.shields.io/static/v1?label=Draft&message=Timestamps&color=blueviolet)](https://tools.ietf.org/html/draft-huitema-quic-ts)\n[![](https://img.shields.io/static/v1?label=Draft&message=ReliableReset&color=blueviolet)](https://datatracker.ietf.org/doc/draft-ietf-quic-reliable-stream-reset/)\n\nQUIC has many benefits when compared to existing \"TLS over TCP\" scenarios:\n\n  * All packets are encrypted and handshake is authenticated with TLS 1.3.\n  * Parallel streams of (reliable and unreliable) application data.\n  * Exchange application data in the first round trip (0-RTT).\n  * Improved congestion control and loss recovery.\n  * Survives a change in the clients IP address or port.\n  * Stateless load balancing.\n  * Easily extendable for new features and extensions.\n\n## Library Features\n\nMsQuic has several features that differentiates it from other QUIC implementations:\n\n  * Optimized for client and server.\n  * Optimized for maximal throughput and minimal latency.\n  * Asynchronous IO.\n  * Receive side scaling ([RSS](https://docs.microsoft.com/en-us/windows-hardware/drivers/network/introduction-to-receive-side-scaling)) support.\n  * UDP send and receive coalescing support.\n\n# Documentation\n\n  * For platform support details, see the [Platforms docs](./docs/Platforms.md).\n  * For release details, see the [Release docs](./docs/Release.md).\n  * For performance data, see the [Performance dashboard](https://aka.ms/msquicperformance).\n  * For building the library, see the [Build docs](./docs/BUILD.md).\n  * For testing the library, see the [Testing docs](./docs/TEST.md).\n  * For using the API, see the [API docs](./docs/API.md) or the [Sample](./src/tools/sample/sample.c).\n  * For running a sample server and client app, see the [Quick Start Guide](./docs/Sample.md).\n  * For deploying QUIC, see the [Deployment docs](./docs/Deployment.md).\n  * For diagnosing issues, see the [Diagnostics docs](./docs/Diagnostics.md) and the [Trouble Shooting Guide](./docs/TSG.md).\n  * For other frequently asked questions, see the [FAQs](./docs/FAQ.md).\n\n# Contributing\n\nFor information on contributing, please see our [contribution guidelines](./.github/CONTRIBUTING.md). Feel free to take a look at our [Good First Issues](https://github.com/microsoft/msquic/labels/good%20first%20issue) list if you're looking for somewhere to start. If you'd just like to talk, come chat with us [on Discord](https://discord.gg/YGAtCwTSsc).\n"
        },
        {
          "name": "THIRD-PARTY-NOTICES",
          "type": "blob",
          "size": 10.3427734375,
          "content": "In some configuration, MsQuic uses third-party libraries or other resources\nthat may be distributed under licenses different than the MsQuic software.\n\nIn the event that we accidentally failed to list a required notice, please\nbring it to our attention by posting a GitHub issue or Discussion item.\n\nThe attached notices are provided for information only.\n\nLicense notice for OpenSSL\n-------------------------------\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.13671875,
          "content": "coverage:\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 2%\n    patch:\n      target: 80%\n      threshold: 2%\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "msquic.kernel.sln",
          "type": "blob",
          "size": 12.42578125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.29728.190\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"platform.kernel\", \"src\\platform\\platform.kernel.vcxproj\", \"{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"core.kernel\", \"src\\core\\core.kernel.vcxproj\", \"{E862BE76-298B-4021-8105-A3E115FA2900}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testlib.kernel\", \"src\\test\\lib\\testlib.kernel.vcxproj\", \"{A295E4D7-A50A-4771-8383-608258C23442}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9} = {5F99F713-BF5F-44EB-90FE-FEA03906BBA9}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"msquic.kernel\", \"src\\bin\\winkernel\\msquic.kernel.vcxproj\", \"{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"msquictest.kernel\", \"src\\test\\bin\\winkernel\\msquictest.kernel.vcxproj\", \"{49E98DF4-7BC5-4E0B-8F13-295380652F94}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"manifest.kernel\", \"src\\manifest\\manifest.kernel.vcxproj\", \"{C1ADB76F-7005-4516-BADB-2A60797EF912}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"perflib.kernel\", \"src\\perf\\lib\\perflib.kernel.vcxproj\", \"{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"secnetperfdriverpriv.kernel\", \"src\\perf\\bin\\secnetperfdriverpriv.kernel.vcxproj\", \"{2BE64DBF-60E6-4FE8-96B0-5F2526405096}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"msquicpriv.kernel\", \"src\\bin\\winkernel\\msquicpriv.kernel.vcxproj\", \"{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"msquictestpriv.kernel\", \"src\\test\\bin\\winkernel\\msquictestpriv.kernel.vcxproj\", \"{C8491270-B0BE-440C-B88D-7B441A8CB67E}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"secnetperfdriver.kernel\", \"src\\perf\\bin\\secnetperfdriver.kernel.vcxproj\", \"{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|ARM64 = Debug|ARM64\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|ARM64 = Release|ARM64\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Debug|x64.Build.0 = Debug|x64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Release|x64.ActiveCfg = Release|x64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Release|x64.Build.0 = Release|x64\n\t\t{5F99F713-BF5F-44EB-90FE-FEA03906BBA9}.Release|x64.Deploy.0 = Release|x64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Debug|x64.Build.0 = Debug|x64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Release|x64.ActiveCfg = Release|x64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Release|x64.Build.0 = Release|x64\n\t\t{E862BE76-298B-4021-8105-A3E115FA2900}.Release|x64.Deploy.0 = Release|x64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Debug|x64.Build.0 = Debug|x64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Release|x64.ActiveCfg = Release|x64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Release|x64.Build.0 = Release|x64\n\t\t{A295E4D7-A50A-4771-8383-608258C23442}.Release|x64.Deploy.0 = Release|x64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Debug|x64.Build.0 = Debug|x64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Release|x64.ActiveCfg = Release|x64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Release|x64.Build.0 = Release|x64\n\t\t{C31B028C-E91C-4CF7-A8E7-F385B2AF5F85}.Release|x64.Deploy.0 = Release|x64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Debug|x64.Build.0 = Debug|x64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Release|x64.ActiveCfg = Release|x64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Release|x64.Build.0 = Release|x64\n\t\t{49E98DF4-7BC5-4E0B-8F13-295380652F94}.Release|x64.Deploy.0 = Release|x64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Debug|x64.Build.0 = Debug|x64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Release|x64.ActiveCfg = Release|x64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Release|x64.Build.0 = Release|x64\n\t\t{C1ADB76F-7005-4516-BADB-2A60797EF912}.Release|x64.Deploy.0 = Release|x64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Debug|x64.Build.0 = Debug|x64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Release|x64.ActiveCfg = Release|x64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Release|x64.Build.0 = Release|x64\n\t\t{11633785-79CC-4C7D-AB6A-AECDF29A1FA7}.Release|x64.Deploy.0 = Release|x64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Debug|x64.Build.0 = Debug|x64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Release|x64.ActiveCfg = Release|x64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Release|x64.Build.0 = Release|x64\n\t\t{2BE64DBF-60E6-4FE8-96B0-5F2526405096}.Release|x64.Deploy.0 = Release|x64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Debug|x64.Build.0 = Debug|x64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Release|x64.ActiveCfg = Release|x64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Release|x64.Build.0 = Release|x64\n\t\t{E2DDB0A8-594D-424D-9ADD-4EF211F7FC3F}.Release|x64.Deploy.0 = Release|x64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Debug|x64.Build.0 = Debug|x64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Release|x64.ActiveCfg = Release|x64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Release|x64.Build.0 = Release|x64\n\t\t{C8491270-B0BE-440C-B88D-7B441A8CB67E}.Release|x64.Deploy.0 = Release|x64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Debug|ARM64.Deploy.0 = Debug|ARM64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Debug|x64.Build.0 = Debug|x64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Release|ARM64.Deploy.0 = Release|ARM64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Release|x64.ActiveCfg = Release|x64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Release|x64.Build.0 = Release|x64\n\t\t{1862CCD7-31D7-4869-A409-5B9B5EDF19BB}.Release|x64.Deploy.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {73EF00B9-A990-4E4D-9759-84F4E2094268}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "submodules",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.json",
          "type": "blob",
          "size": 0.0380859375,
          "content": "{ \"major\": 2, \"minor\": 5, \"patch\": 0 }\n"
        }
      ]
    }
  ]
}