{
  "metadata": {
    "timestamp": 1736710157231,
    "page": 828,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kosua20/herebedragons",
      "stars": 1732,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5048828125,
          "content": "/gba/*.sav\nvulkan/*.dylib\nbuild/\n.DS_Store\ntools/\nDebug/\nRelease/\nx64/\n.vs/\n*.VC.db\n*.user\n*.xcuserstate\n*.blend1\n### Unity ###\n/unity/[Ll]ibrary/\n/unity/[Tt]emp/\n/unity/[Oo]bj/\n/unity/[Bb]uild/\n/unity/[Bb]uilds/\n/unity/Assets/AssetStoreTools*\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n# Unity3D Generated File On Crash Reports\nsysinfo.txt\n# Builds\n*.apk\n*.unitypackage\n*.o\npico8/ext/\nwebgpu/build/"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0947265625,
          "content": "[submodule \"ptah/renderer\"]\n\tpath = ptah/renderer\n\turl = https://github.com/kosua20/PtahRenderer\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.783203125,
          "content": "# Contributing\n\nFirst of all, thank you for your interest in this project! It started as an educational exercise for myself, to get a feel of various existing rendering APIs and engines; but can also be useful to other people (I hope :-))\n\n## New versions\n\nIf you want to add a new version, I would suggest first opening an issue with the **'additional version'** tag: somebody might already be working on it. \nPlease keep in mind that each new version should implement the same scene using either: \n\n- a high-level rendering engine (*Unreal Engine*, *CryEngine*, ...)\n- a lower-level toolset (for instance *Godot*, *ThreeJS*, ...) \n- or an even-lower-level API (*OpenGLES*, *DirectX*, ...). \n\nHomebrew versions and support for old/weird platforms or APIs are more than welcomed!\n\nIf you would rather want to rewrite one of the existing versions in another programming language (Go + OpenGL or Objective-C + Metal, for instance), I would rather suggest that you create a new fork, but feel free to add a link to it in the main `README.md`.\n\n## Submitting\n\nWhen everything is ready, submit a pull request with your new version placed in a directory at the root of the repository (the same way as the existing versions). Please add a `README.md` file with some details on the toolchain used, a few images of the result, any precisions you think are necessary, and feel free to credit yourself :) Also add a link in the root `README.md`.\n\n## Models\n\nFeel free to use the models and textures, their highest quality version is in the [ressources directory]((https://github.com/kosua20/GL_Template/tree/3de4e116cdd24df300fda42326a7a4e431f7f861/ressources)) of the OpenGL version. The 3D models of Suzanne and the Stanford dragon remain under their original licenses, same for the Miramar cubemap (credit of Jockum Skoglund/Hipshot)."
        },
        {
          "name": "GALLERY.md",
          "type": "blob",
          "size": 1.2724609375,
          "content": "# Gallery\n\n## OpenGL\n![](opengl/images/opengl1.png)\n![](opengl/images/opengl2.png)\n\n## WebGL\n![](webgl/images/webgl1.png)\n![](webgl/images/webgl3.png)\n\n## Vulkan\n![](vulkan/images/vulkan1.png)\n![](vulkan/images/vulkan2.png)\n\n## WebGPU\n![](webgpu/images/webgpu1.png)\n![](webgpu/images/webgpu3.png)\n\n## Metal\n![](metal/images/metal1.png)\n![](metal/images/metal2.png)\n\n## SceneKit\n![](scenekit/images/scenekit1.png)\n\n## Godot\n![](godot/images/godot-1.png)\n![](godot/images/godot-2.png)\n\n## Unity\n![](unity/images/unity1.png)\n![](unity/images/unity3.png)\n\n## Unreal\n![](unreal/images/unreal1.png)\n![](unreal/images/unreal3.png)\n\n## Blender Cycles\n![](cycles/images/cycles1.png)\n![](cycles/images/cycles3.png)\n\n## GLSL (Shader only)\n![](glsl/images/glsl-0.png)\n![](glsl/images/glsl-1.png)\n\n## Ptah (custom rasterizer)\n![](ptah/images/ptah1.png)\n![](ptah/images/ptah2.png)\n\n## Nintendo DS\n![](nds/images/nds1.png)\n![](nds/images/nds3.png)\n\n## Nintendo Game Boy Advance\n![](gba/images/gba1.png)\n![](gba/images/gba2.png)\n\n## PlayStation 2\n![](ps2/images/ps2-1.png)\n![](ps2/images/ps2-3.png)\n\n## Glide\n![](glide/images/glide-1.png)\n![](glide/images/glide-2.png)\n\n## PICO-8\n![](pico8/images/pico8-1.png)\n![](pico8/images/pico8-3.png)\n\n## Vectrex\n![](vectrex/images/vectrex-1.png)\n![](vectrex/images/vectrex-2.png)"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2017 Simon Rodriguez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.5439453125,
          "content": "# Here be dragons\n\n> Hic sunt dracones.\n\nThis repository contains multiple implementations of the same 3D scene, using different APIs and frameworks on various platforms. The goal is to provide a comparison between multiple rendering methods. This is inherently biased due to the variety of algorithms used and available CPU/GPU configurations, but can hopefully still provide interesting insights on 3D rendering. You can check a video of most versions runnning [here (Youtube)](https://www.youtube.com/watch?v=Bbpu34S2bSI)\n\n![](image.png)\n\nThe following versions are currently available:\n\n- [OpenGL](https://github.com/kosua20/herebedragons/tree/master/opengl)\n- [WebGL](https://github.com/kosua20/herebedragons/tree/master/webgl) \n- [Vulkan](https://github.com/kosua20/herebedragons/tree/master/vulkan) \n- [WebGPU](https://github.com/kosua20/herebedragons/tree/master/webgpu)\n- [Metal](https://github.com/kosua20/herebedragons/tree/master/metal)\n- [SceneKit](https://github.com/kosua20/herebedragons/tree/master/scenekit)\n- [Godot](https://github.com/kosua20/herebedragons/tree/master/godot)\n- [Unity](https://github.com/kosua20/herebedragons/tree/master/unity)\n- [Unreal](https://github.com/kosua20/herebedragons/tree/master/unreal)\n- [Blender Cycles](https://github.com/kosua20/herebedragons/tree/master/cycles)\n- [Ptah](https://github.com/kosua20/herebedragons/tree/master/ptah) (a custom real-time renderer, see [the Github page](https://github.com/kosua20/PtahRenderer/))\n- [Nintendo DS](https://github.com/kosua20/herebedragons/tree/master/nds)\n- [Nintendo Game Boy Advance](https://github.com/kosua20/herebedragons/tree/master/gba)\n- [PlayStation 2](https://github.com/kosua20/herebedragons/tree/master/ps2)  \n- [PICO-8](https://github.com/kosua20/herebedragons/tree/master/pico8) \n- [Vectrex](https://github.com/kosua20/herebedragons/tree/master/vectrex) \n- [Glide](https://github.com/kosua20/herebedragons/tree/master/glide)\n- [DX9](https://github.com/kosua20/herebedragons/tree/master/dx9)\n- [DX11](https://github.com/kosua20/herebedragons/tree/master/dx11)\n- [DX12](https://github.com/kosua20/herebedragons/tree/master/dx12)\n\nThe following versions are (tentatively) planned:\n\n- OpenGL ES\n- other console hardwares\n- other engines\n- another raytracing approach\n\nIn the directory of each version, you can find the source code, the corresponding resources (as each method has its own format/quality constraints), along with a readme describing the method and a few examples. \n\n## Resources\nThe scene is composed of four main elements:\n\n- a plane representing the ground, with a pavement texture.\n- a dragon (the Stanford dragon).\n- a monkey head ('Suzanne') rotating around its vertical axis.\n- a skybox surrounding the scene, textured with a cloudy sky.\n\nAdditionally, the sun is simulated by using a directional light, and the camera should be able to rotate around the scene. Note that some versions might provide additional effects, such as soft shadow maps, parallax mapping or screen space ambient occlusion.\nThe initial 3D models and textures are contained in the `opengl/resources` [directory](https://github.com/kosua20/herebedragons/tree/master/opengl/resources).\n\n\n## Other implementations\nHere you can find implementations using some of the above APIs combined with other programming languages, submitted by awesome people!\n\n- An OpenGL + Python version, by cprogrammer1994: [herebedragons-python](https://github.com/cprogrammer1994/herebedragons-python). (see [#11](https://github.com/kosua20/herebedragons/issues/11))\n- A Vulkan version, by vazgriz: [vk_dragons](https://github.com/vazgriz/vk_dragons).\n"
        },
        {
          "name": "cycles",
          "type": "tree",
          "content": null
        },
        {
          "name": "dx11",
          "type": "tree",
          "content": null
        },
        {
          "name": "dx12",
          "type": "tree",
          "content": null
        },
        {
          "name": "dx9",
          "type": "tree",
          "content": null
        },
        {
          "name": "gba",
          "type": "tree",
          "content": null
        },
        {
          "name": "glide",
          "type": "tree",
          "content": null
        },
        {
          "name": "glsl",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot",
          "type": "tree",
          "content": null
        },
        {
          "name": "image.png",
          "type": "blob",
          "size": 885.3564453125,
          "content": null
        },
        {
          "name": "metal",
          "type": "tree",
          "content": null
        },
        {
          "name": "nds",
          "type": "tree",
          "content": null
        },
        {
          "name": "opengl",
          "type": "tree",
          "content": null
        },
        {
          "name": "pico8",
          "type": "tree",
          "content": null
        },
        {
          "name": "ps2",
          "type": "tree",
          "content": null
        },
        {
          "name": "ptah",
          "type": "tree",
          "content": null
        },
        {
          "name": "scenekit",
          "type": "tree",
          "content": null
        },
        {
          "name": "unity",
          "type": "tree",
          "content": null
        },
        {
          "name": "unreal",
          "type": "tree",
          "content": null
        },
        {
          "name": "vectrex",
          "type": "tree",
          "content": null
        },
        {
          "name": "vulkan",
          "type": "tree",
          "content": null
        },
        {
          "name": "webgl",
          "type": "tree",
          "content": null
        },
        {
          "name": "webgpu",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}