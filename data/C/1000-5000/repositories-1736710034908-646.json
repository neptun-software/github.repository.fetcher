{
  "metadata": {
    "timestamp": 1736710034908,
    "page": 646,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RedisGraph/RedisGraph",
      "stars": 2012,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0673828125,
          "content": "/bin/\n/cov/\n.venv/\n__pycache__/\nlogs/\n*.o\n*.d\n*.so*\n*.a\n*.pyc\n*.gcno\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.60546875,
          "content": "# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Folders\nCMakeFiles/\nlogs/\n/bin/\n\n# Files\nCMakeCache.txt\nDartConfiguration.tcl\nlemon\ndeps/GraphBLAS/Config/GraphBLAS.h.tmp\n\n# Project\n.cproject\n.project\n\n# Debug files\n*.dSYM/\n*.su\n\n# Additional suffixes\n*.pyc\n*.xml\n*.iml\n*.d\n\n# test result files\n/tests/flow/logs/\n/tests/tck/logs/\n\n# local/remote benchmark result files\n/tests/benchmarks/*.json\n\n# gcov\n*.gcda\n*.gcno\n/cov/\n/venv/\n/.vscode/\n/1/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.689453125,
          "content": "[submodule \"deps/libcypher-parser\"]\n\tpath = deps/libcypher-parser\n\turl = https://github.com/RedisGraph/libcypher-parser.git\n[submodule \"deps/rax\"]\n\tpath = deps/rax\n\turl = https://github.com/antirez/rax.git\n[submodule \"deps/xxHash\"]\n\tpath = deps/xxHash\n\turl = https://github.com/Cyan4973/xxHash.git\n[submodule \"deps/RediSearch\"]\n\tpath = deps/RediSearch\n\turl = https://github.com/RediSearch/RediSearch.git\n[submodule \"deps/readies\"]\n\tpath = deps/readies\n\turl = https://github.com/RedisLabsModules/readies.git\n[submodule \"deps/utf8proc\"]\n\tpath = deps/utf8proc\n\turl = https://github.com/JuliaStrings/utf8proc.git\n[submodule \"deps/oniguruma\"]\n\tpath = deps/oniguruma\n\turl = https://github.com/kkos/oniguruma.git\n"
        },
        {
          "name": ".spellcheck.yml",
          "type": "blob",
          "size": 0.083984375,
          "content": "files:\n  - docs/**/*.md\nno-suggestions: true\ndictionaries:\n  - wordlist  \nquiet: true\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.5771484375,
          "content": "cmake_minimum_required(VERSION 3.13)\n\nget_filename_component(root ${CMAKE_CURRENT_LIST_DIR} ABSOLUTE)\ninclude(${root}/deps/readies/cmake/main)\n\nSET(CMAKE_EXPORT_COMPILE_COMMANDS on)\n\nif (NOT DEFINED UNIT_TESTS)\n\tset(UNIT_TESTS OFF)\nendif()\n\nproject(redisgraph)\n\nsetup_cc_options()\n\nfile(GLOB_RECURSE SOURCES \"src/*.c\")\n\nadd_library(redisgraph SHARED ${SOURCES})\n\ninclude_directories(\n\t${root}/src\n\t${root}\n\t${root}/deps\n\t${root}/deps/rax\n\t${root}/deps/xxHash\n\t${root}/deps/utf8proc\n\t${root}/deps/oniguruma\n\t${root}/deps/RediSearch/src\n\t${root}/deps/GraphBLAS/Include\n\t${root}/deps/libcypher-parser/lib/src\n\t$ENV{LIBCYPHER_PARSER_BINDIR}/lib/src)\n\nadd_compile_definitions(\n\t_GNU_SOURCE\n\tREDIS_MODULE_TARGET\n\tREDISMODULE_EXPERIMENTAL_API\n\tXXH_STATIC_LINKING_ONLY)\n\nif (DEBUG)\n\tadd_compile_definitions(RG_DEBUG)\nendif()\n\nif (MEMCHECK)\n\tadd_compile_definitions(MEMCHECK)\nendif()\n\nsetup_shared_object_target(redisgraph \"\")\n\nset_target_properties(redisgraph PROPERTIES LINKER_LANGUAGE CXX)\n\nset(REDISGRAPH_OBJECTS $<TARGET_OBJECTS:redisgraph>)\n\nlists_from_env(GRAPHBLAS LIBXXHASH RAX LIBCYPHER_PARSER REDISEARCH_LIBS UTF8PROC ONIGURUMA)\nset(REDISGRAPH_LIBS ${GRAPHBLAS} ${LIBXXHASH} ${RAX} ${LIBCYPHER_PARSER} ${REDISEARCH_LIBS} ${UTF8PROC} ${ONIGURUMA})\n\ntarget_link_options(redisgraph PRIVATE ${CMAKE_LD_FLAGS_LIST} ${CMAKE_SO_LD_FLAGS_LIST})\ntarget_link_libraries(redisgraph PRIVATE ${REDISGRAPH_LIBS} ${CMAKE_LD_LIBS})\n\nextract_debug_symbols(redisgraph)\n\nif (APPLE)\n\tadd_library(redisgraph_static STATIC $<TARGET_OBJECTS:redisgraph>)\nendif()\n\nif (UNIT_TESTS)\n\tadd_subdirectory(${root}/tests/unit tests/unit)\nendif()\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.2509765625,
          "content": "Except as otherwise specified in the source code headers for specific files, the source code in this repository is made available to you under your choice of \n(i) Redis Source Available License 2.0 (RSALv2) or (ii) the Server Side Public License v1 (SSPLv1)"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.4345703125,
          "content": "\nifeq ($(VG),docker)\noverride VG:=1\nVG_DOCKER=1\nendif\n\nifeq ($(VG),1)\nexport MEMCHECK=1\nendif\n\nifneq ($(SAN),)\nexport MEMCHECK=1\nendif\n\n#----------------------------------------------------------------------------------------------\n\n.NOTPARALLEL:\n\nROOT=.\n\nMK.cmake=1\nSRCDIR=.\n\ninclude $(ROOT)/deps/readies/mk/main\n\nMK_ALL_TARGETS=bindirs deps build\n\nMK_CUSTOM_CLEAN=1\n\nBINDIR=$(BINROOT)/src\nexport TARGET=$(BINROOT)/src/redisgraph.so\n\n#----------------------------------------------------------------------------------------------\n\ndefine HELPTEXT\nmake all            # Build everything\n  DEBUG=1             # Build for debugging\n  SLOW=1              # Disable parallel build\n  STATIC_OMP=1        # Link OpenMP statically\n  VARIANT=name        # Add `name` to build products directory\n  GCC=1               # Build with GCC toolchain (default nor Linux)\n  CLANG=1             # Build with CLang toolchain (default for macOS)\n  COV=1               # Build for coverage analysis (implies DEBUG=1)\n  VG=1|docker         # build for Valgrind\n  SAN=type            # build with LLVM sanitizer (type=address|memory|leak|thread)\nmake clean          # Clean build products\n  ALL=1               # Completely remove build products\n  DEPS=1              # Also clean dependant modules\n  AUTOGEN=1           # Remove autogen-generated files\nmake pack|package   # Build RAMP packages\nmake run            # Run redis-server with RedisGraph\n  GDB=1               # Run with debugger\n\nmake test         # Run tests\n  HELP=1            # Show testing options\n  LIST=1            # List all tests, do not execute\n  UNIT=1            # Run unit tests\n  FLOW=1            # Run flow tests (Python)\n  TCK=1             # Run TCK framework tests\n  COV=1             # Perform coverage analysis\n  SLOW=1            # Do not run in parallel\n  PARALLEL=n        # Set testing parallelism\n  GDB=1             # RLTest interactive debugging\n  TEST=test         # Run specific test\n  TESTFILE=file     # Run tests listed in file\n  FAILFILE=file     # Write failed tests to file\n\nmake unit-tests   # Run unit tests\nmake flow-tests   # Run flow tests\nmake tck-tests    # Run TCK tests\nmake fuzz-tests   # Run fuzz tester\n  TIMEOUT=secs      # Timeout in `secs`\n\nmake benchmark    # Run benchmarks\n  REMOTE=1          # Run remotely\n\nmake coverage     # Perform coverage analysis (build & test)\nmake cov-upload   # Upload coverage data to codecov.io\n\nmake upload-artifacts   # copy snapshot packages to S3\n  OSNICK=nick             # copy snapshots for specific OSNICK\nmake upload-release     # copy release packages to S3\n\ncommon options for upload operations:\n  STAGING=1   # copy to staging lab area (for validation)\n  FORCE=1     # allow operation outside CI environment\n  VERBOSE=1   # show more details\n  NOP=1       # do not copy, just print commands\n\nmake docker     # build for specified platform\n  OSNICK=nick     # platform to build for (default: host platform)\n  TEST=1          # run tests after build\n  PACK=1          # create package\n  ARTIFACTS=1     # copy artifacts to host\n\nendef\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(MEMCHECK),1)\nDEPS_BINDIR=$(ROOT)/bin/$(FULL_VARIANT)\nDEPS_DEBUG=1\nCMAKE_DEFS += MEMCHECK=ON\nelse\nexport DEPS_BINDIR:=$(ROOT)/bin/$(FULL_VARIANT.release)\nDEPS_DEBUG=\nendif\n\n#----------------------------------------------------------------------------------------------\n\nRAX_DIR = $(ROOT)/deps/rax\nexport RAX_BINDIR=$(DEPS_BINDIR)/rax\ninclude $(ROOT)/build/rax/Makefile.defs\n\nLIBXXHASH_DIR = $(ROOT)/deps/xxHash\nexport LIBXXHASH_BINDIR=$(DEPS_BINDIR)/xxHash\ninclude $(ROOT)/build/xxHash/Makefile.defs\n\nLIBCYPHER_PARSER_DIR = $(ROOT)/deps/libcypher-parser\nLIBCYPHER_PARSER_SRCDIR = $(LIBCYPHER_PARSER_DIR)/lib/src\nexport LIBCYPHER_PARSER_BINDIR=$(DEPS_BINDIR)/libcypher-parser\ninclude $(ROOT)/build/libcypher-parser/Makefile.defs\n\nGRAPHBLAS_DIR = $(ROOT)/deps/GraphBLAS\nexport GRAPHBLAS_BINDIR=$(DEPS_BINDIR)/GraphBLAS\ninclude $(ROOT)/build/GraphBLAS/Makefile.defs\n\nUTF8PROC_DIR = $(ROOT)/deps/utf8proc\nexport UTF8PROC_BINDIR=$(DEPS_BINDIR)/utf8proc\ninclude $(ROOT)/build/utf8proc/Makefile.defs\n\nONIGURUMA_DIR = $(ROOT)/deps/oniguruma\nexport ONIGURUMA_BINDIR=$(DEPS_BINDIR)/oniguruma\ninclude $(ROOT)/build/oniguruma/Makefile.defs\n\nREDISEARCH_DIR = $(ROOT)/deps/RediSearch\nexport REDISEARCH_BINROOT=$(BINROOT)\ninclude $(ROOT)/build/RediSearch/Makefile.defs\n\nBIN_DIRS += $(REDISEARCH_BINROOT)/search-static\n\nLIBS=$(RAX) $(LIBXXHASH) $(GRAPHBLAS) $(REDISEARCH_LIBS) $(LIBCYPHER_PARSER) $(UTF8PROC) $(ONIGURUMA)\n\n#----------------------------------------------------------------------------------------------\n\nCC_COMMON_H=$(SRCDIR)/src/common.h\n\nCC_C_STD=gnu11\nCC_OPENMP=1\n\ninclude $(MK)/defs\n\n$(info # Building into $(BINDIR))\n$(info # Using CC=$(CC))\n\nifeq ($(UNIT_TESTS),1)\nCMAKE_DEFS += UNIT_TESTS:BOOL=on\nendif\n\n#----------------------------------------------------------------------------------------------\n\nMISSING_DEPS:=\n\nifeq ($(wildcard $(RAX)),)\nMISSING_DEPS += $(RAX)\nendif\n\nifeq ($(wildcard $(LIBXXHASH)),)\nMISSING_DEPS += $(LIBXXHASH)\nendif\n\nifeq ($(wildcard $(GRAPHBLAS)),)\nMISSING_DEPS += $(GRAPHBLAS)\nendif\n\nifeq ($(wildcard $(LIBCYPHER_PARSER)),)\nMISSING_DEPS += $(LIBCYPHER_PARSER)\nendif\n\nifeq ($(wildcard $(UTF8PROC)),)\nMISSING_DEPS += $(UTF8PROC)\nendif\n\nifeq ($(wildcard $(ONIGURUMA)),)\nMISSING_DEPS += $(ONIGURUMA)\nendif\n\nifneq ($(call files_missing,$(REDISEARCH_LIBS)),)\nMISSING_DEPS += $(REDISEARCH_LIBS)\nendif\n\nifneq ($(MISSING_DEPS),)\nDEPS=1\nendif\n\nDEPENDENCIES=libcypher-parser graphblas redisearch rax libxxhash utf8proc oniguruma\n\nifneq ($(filter all deps $(DEPENDENCIES) pack,$(MAKECMDGOALS)),)\nDEPS=1\nendif\n\n.PHONY: deps $(DEPENDENCIES)\n\n#----------------------------------------------------------------------------------------------\n\nRUN_CMD=redis-server --loadmodule $(abspath $(TARGET))\n\n#----------------------------------------------------------------------------------------------\n\nMK_ALL_TARGETS=bindirs deps build\n\n.PHONY: all deps clean lint format pack run tests unit_tests flow_tests docker bindirs\n\nall: bindirs $(TARGET)\n\ninclude $(MK)/rules\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(DEPS),1)\n\ndeps: $(LIBCYPHER_PARSER) $(GRAPHBLAS) $(LIBXXHASH) $(RAX) $(REDISEARCH_LIBS) $(UTF8PROC) $(ONIGURUMA)\n\nlibxxhash: $(LIBXXHASH)\n\n$(LIBXXHASH):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/xxHash DEBUG=$(DEPS_DEBUG)\n\nrax: $(RAX)\n\n$(RAX):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/rax DEBUG=$(DEPS_DEBUG)\n\ngraphblas: $(GRAPHBLAS)\n\nGRAPHBLAS_MAKE_FLAGS.xenial-x64=CC=gcc-5 CXX=gxx-5\n\n$(GRAPHBLAS):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/GraphBLAS DEBUG=$(DEPS_DEBUG) $(GRAPHBLAS_MAKE_FLAGS.$(OSNICK)-$(ARCH))\n\nlibcypher-parser: $(LIBCYPHER_PARSER)\n\n$(LIBCYPHER_PARSER):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/libcypher-parser DEBUG=$(DEPS_DEBUG)\n\nutf8proc: $(UTF8PROC)\n\n$(UTF8PROC):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/utf8proc DEBUG=$(DEPS_DEBUG)\n\noniguruma: $(ONIGURUMA)\n\n$(ONIGURUMA):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/oniguruma DEBUG=$(DEPS_DEBUG)\n\nredisearch: $(REDISEARCH_LIBS)\n\n$(REDISEARCH_LIBS):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) -C $(REDISEARCH_DIR) STATIC=1 BINROOT=$(REDISEARCH_BINROOT) CC=$(CC) CXX=$(CXX)\n\n.PHONY: libcypher-parser graphblas redisearch libxxhash rax utf8proc oniguruma\n\n#----------------------------------------------------------------------------------------------\n\nelse\n\ndeps: ;\n\nendif # DEPS\n\n.PHONY: deps\n\n#----------------------------------------------------------------------------------------------\n\n$(LIBCYPHER_PARSER_BINDIR)/lib/src/cypher-parser.h : $(LIBCYPHER_PARSER)\n\n#----------------------------------------------------------------------------------------------\n\nclean:\nifeq ($(ALL),1)\n\t$(SHOW)-rm -rf $(BINROOT) $(DEPS_BINDIR)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/libcypher-parser clean ALL=1\nelse\n\t$(SHOW)$(MAKE) -C $(BINDIR) clean\n\t$(SHOW)-rm -fr $(TARGET).debug $(BINDIR)/CMakeCache.txt $(BINDIR)/tests\nifeq ($(DEPS),1)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/rax clean DEBUG=$(DEPS_DEBUG)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/xxHash clean DEBUG=$(DEPS_DEBUG)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/utf8proc clean DEBUG=$(DEPS_DEBUG)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/oniguruma clean DEBUG=$(DEPS_DEBUG)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/GraphBLAS clean DEBUG=$(DEPS_DEBUG)\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/libcypher-parser clean DEBUG=$(DEPS_DEBUG)\n\t$(SHOW)$(MAKE) -C $(REDISEARCH_DIR) clean ALL=1 BINROOT=$(REDISEARCH_BINROOT)\nendif\nendif\n\nclean-libcypher-parser:\n\t$(SHOW)$(MAKE) -C $(ROOT)/build/libcypher-parser clean ALL=1 AUTOGEN=1\n\nclean-search:\nifeq ($(ALL),1)\n\t$(SHOW)rm -rf $(REDISEARCH_BINROOT)/search-static\nelse\n\t$(SHOW)$(MAKE) -C $(REDISEARCH_DIR) clean BINROOT=$(REDISEARCH_BINROOT)\nendif\n\n.PHONY: clean clean-libcypher-parser clean-search\n\n#----------------------------------------------------------------------------------------------\n\npack package: #$(TARGET)\n\t@MODULE=$(realpath $(TARGET)) $(ROOT)/sbin/pack.sh\n\nupload-release:\n\t$(SHOW)RELEASE=1 ./sbin/upload-artifacts\n\nupload-artifacts:\n\t$(SHOW)SNAPSHOT=1 ./sbin/upload-artifacts\n\n.PHONY: pack package upload-artifacts upload-release\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(SLOW),1)\n_RLTEST_PARALLEL=0\nelse ifneq ($(PARALLEL),)\n_RLTEST_PARALLEL=$(PARALLEL)\nelse\n_RLTEST_PARALLEL=1\nendif\n\nifneq ($(BUILD),0)\nTEST_DEPS=$(TARGET)\nendif\n\ntest: unit-tests flow-tests tck-tests\n\nunit-tests:\nifneq ($(BUILD),0)\n\t$(SHOW)$(MAKE) build FORCE=1 UNIT_TESTS=1\nendif\n\t$(SHOW)BINROOT=$(BINROOT) ./tests/unit/tests.sh\n\nflow-tests: $(TEST_DEPS)\n\t$(SHOW)MODULE=$(TARGET) BINROOT=$(BINROOT) PARALLEL=$(_RLTEST_PARALLEL) GEN=$(GEN) AOF=$(AOF) TCK=0 ./tests/flow/tests.sh\n\ntck-tests: $(TEST_DEPS)\n\t$(SHOW)MODULE=$(TARGET) BINROOT=$(BINROOT) PARALLEL=$(_RLTEST_PARALLEL) GEN=0 AOF=0 TCK=1 ./tests/flow/tests.sh\n\n.PHONY: test unit-tests flow-tests tck-tests\n\n#----------------------------------------------------------------------------------------------\n\nifneq ($(TIMEOUT),)\nFUZZ_ARGS=-t $(TIMEOUT)\nendif\n\nfuzz fuzz-tests: $(TARGET)\n\t$(SHOW)cd tests/fuzz && ./process.py -m $(TARGET) $(FUZZ_ARGS)\n\n.PHONY: fuzz fuzz-tests\n\n#----------------------------------------------------------------------------------------------\n\nifneq ($(REMOTE),)\nBENCHMARK_ARGS=run-remote\nelse\nBENCHMARK_ARGS=run-local\nendif\n\nBENCHMARK_ARGS += --module_path $(TARGET) --required-module graph\nifneq ($(BENCHMARK),)\nBENCHMARK_ARGS += --test $(BENCHMARK)\nendif\n\nbenchmark: $(TARGET)\n\t$(SHOW)cd tests/benchmarks && redisbench-admin $(BENCHMARK_ARGS)\n\n.PHONY: benchmark\n\n#----------------------------------------------------------------------------------------------\n\nCOV_EXCLUDE_DIRS += \\\n\tdeps \\\n\tsrc/util/sds \\\n\ttests\n\nCOV_EXCLUDE+=$(foreach D,$(COV_EXCLUDE_DIRS),'$(realpath $(ROOT))/$(D)/*')\n\ncoverage:\n\t$(SHOW)$(MAKE) build COV=1\n\t$(SHOW)$(COVERAGE_RESET)\n\t-$(SHOW)$(MAKE) unit-tests COV=1\n\t-$(SHOW)$(MAKE) flow-tests COV=1\n\t-$(SHOW)$(MAKE) tck-tests COV=1\n\t$(SHOW)$(COVERAGE_COLLECT_REPORT)\n\n.PHONY: coverage\n\n#----------------------------------------------------------------------------------------------\n\ndocker:\n\t$(SHOW)$(MAKE) -C build/docker\n\nifneq ($(wildcard /w/*),)\nSANBOX_ARGS += -v /w:/w\nendif\n\nsanbox:\n\t@docker run -it -v $(PWD):/build -w /build --cap-add=SYS_PTRACE --security-opt seccomp=unconfined $(SANBOX_ARGS) redisfab/clang:16-$(ARCH)-bullseye bash\n\n.PHONY: box sanbox\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.6630859375,
          "content": "# RedisGraph\n## A graph database module for Redis\n\n---\n### RedisGraph is now in maintenance mode.\n\n### As of July 5th, 2023 RedisGraph is no longer under active development. We do not plan to release new features (2.12 is the last feature-bearing release), but we will continue to release patches until January 31, 2025.\n\n### We are grateful to the RedisGraph community for their interest and support.\n\n### You can read more about the end of life of RedisGraph [here](https://redis.com/blog/redisgraph-eol/).\n---\n\n## License\n\nLicensed under your choice of the Redis Source Available License 2.0 (RSALv2) or the Server Side Public License v1 (SSPLv1). See [LICENSE](LICENSE.txt).\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands.json",
          "type": "blob",
          "size": 2.6572265625,
          "content": "{\n\t\"GRAPH.QUERY\": {\n\t\t\"summary\": \"Executes the given query against a specified graph\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"graph\",\n\t\t\t\t\"type\": \"key\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"query\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"dsl\": \"cypher\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"timeout\",\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"token\":\"TIMEOUT\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"1.0.0\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.RO_QUERY\": {\n\t\t\"summary\": \"Executes a given read only query against a specified graph\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"graph\",\n\t\t\t\t\"type\": \"key\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"query\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"dsl\": \"cypher\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"timeout\",\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"token\":\"TIMEOUT\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"2.2.8\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.DELETE\": {\n\t\t\"summary\": \"Completely removes the graph and all of its entities\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"graph\",\n\t\t\t\t\"type\": \"key\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"1.0.0\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.EXPLAIN\": {\n\t\t\"summary\": \"Returns a query execution plan without running the query\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"graph\",\n\t\t\t\t\"type\": \"key\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"query\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"dsl\": \"cypher\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"2.0.0\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.PROFILE\": {\n\t\t\"summary\": \"Executes a query and returns an execution plan augmented with metrics for each operation's execution\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"graph\",\n\t\t\t\t\"type\": \"key\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"query\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"dsl\": \"cypher\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"timeout\",\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"token\":\"TIMEOUT\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"2.0.0\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.SLOWLOG\": {\n\t\t\"summary\": \"Returns a list containing up to 10 of the slowest queries issued against the given graph\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"graph\",\n\t\t\t\t\"type\": \"key\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"2.0.12\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.CONFIG GET\": {\n\t\t\"summary\": \"Retrieves a RedisGraph configuration\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"2.2.11\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.CONFIG SET\": {\n\t\t\"summary\": \"Updates a RedisGraph configuration\",\n\t\t\"arguments\": [\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"since\": \"2.2.11\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.LIST\": {\n\t\t\"summary\": \"Lists all graph keys in the keyspace\",\n\t\t\"since\": \"2.4.3\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.CONSTRAINT DROP\": {\n\t\t\"summary\": \"Deletes a constraint from specified graph\",\n\t\t\"since\": \"2.12.0\",\n\t\t\"group\": \"graph\"\n\t},\n\t\"GRAPH.CONSTRAINT CREATE\": {\n\t\t\"summary\": \"Creates a constraint on specified graph\",\n\t\t\"since\": \"2.12.0\",\n\t\t\"group\": \"graph\"\n\t}\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "ramp.yml",
          "type": "blob",
          "size": 0.6416015625,
          "content": "display_name: RedisGraph\nauthor: Redis\nemail: roi@redis.com\ndescription: A graph database module for Redis\nhomepage: http://redisgraph.io\nlicense: Redis Source Available License 2.0 (RSALv2) or the Server Side Public License v1 (SSPLv1)\ncommand_line_args: \"\"\nmin_redis_version: \"6.2\"\nmin_redis_pack_version: \"6.2.8\"\nconfig_command: \"GRAPH.CONFIG SET\"\ncapabilities:\n    - types\n    - failover_migrate\n    - persistence_rdb\n    - persistence_aof\n    - clustering\n    - replica_of\n    - backup_restore\n    - eviction_expiry\n    - no_multi_key\n    - intershard_tls\n    - intershard_tls_pass\n    - ipv6    \nexclude_commands:\n    - graph.CONFIG\n    - graph.DEBUG\n"
        },
        {
          "name": "sbin",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}