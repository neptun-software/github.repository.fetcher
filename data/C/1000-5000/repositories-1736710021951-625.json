{
  "metadata": {
    "timestamp": 1736710021951,
    "page": 625,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "drh/lcc",
      "stars": 2053,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CPYRIGHT",
          "type": "blob",
          "size": 2.8037109375,
          "content": "The authors of this software are Christopher W. Fraser and\nDavid R. Hanson.\n\nCopyright (c) 1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002\nby AT&T, Christopher W. Fraser, and David R. Hanson. All Rights Reserved.\n\nPermission to use, copy, modify, and distribute this software for any\npurpose, subject to the provisions described below, without fee is\nhereby granted, provided that this entire notice is included in all\ncopies of any software that is or includes a copy or modification of\nthis software and in all copies of the supporting documentation for\nsuch software.\n\nTHIS SOFTWARE IS BEING PROVIDED \"AS IS\", WITHOUT ANY EXPRESS OR IMPLIED\nWARRANTY. IN PARTICULAR, NEITHER THE AUTHORS NOR AT&T MAKE ANY\nREPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY\nOF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.\n\nlcc is not public-domain software, shareware, and it is not protected\nby a `copyleft' agreement, like the code from the Free Software\nFoundation.\n\nlcc is available free for your personal research and instructional use\nunder the `fair use' provisions of the copyright law. You may, however,\nredistribute lcc in whole or in part provided you acknowledge its\nsource and include this CPYRIGHT file. You may, for example, include\nthe distribution in a CDROM of free software, provided you charge only\nfor the media, or mirror the distribution files at your site.\n\nYou may not sell lcc or any product derived from it in which it is a\nsignificant part of the value of the product. Using the lcc front end\nto build a C syntax checker is an example of this kind of product.\n\nYou may use parts of lcc in products as long as you charge for only\nthose components that are entirely your own and you acknowledge the use\nof lcc clearly in all product documentation and distribution media. You\nmust state clearly that your product uses or is based on parts of lcc\nand that lcc is available free of charge. You must also request that\nbug reports on your product be reported to you. Using the lcc front\nend to build a C compiler for the Motorola 88000 chip and charging for\nand distributing only the 88000 code generator is an example of this\nkind of product.\n\nUsing parts of lcc in other products is more problematic. For example,\nusing parts of lcc in a C++ compiler could save substantial time and\neffort and therefore contribute significantly to the profitability of\nthe product. This kind of use, or any use where others stand to make a\nprofit from what is primarily our work, requires a license agreement\nwith Addison-Wesley.  Per-copy and unlimited use licenses are\navailable; for more information, contact\n\n   Kim Boedigheimer\n   Addison Wesley\n   75 Arlington St., Suite 300\n   Boston, MA 02116\n   617/848-6559 kim.boedigheimer@pearsoned.com\n-----\nChris Fraser / cwf@aya.yale.edu\nDavid Hanson / drh@drhanson.net\n$Revision$ $Date$\n"
        },
        {
          "name": "LOG",
          "type": "blob",
          "size": 9.6552734375,
          "content": "From lcc 4.1 to 4.2:\n\nBelow is a summary of the source-control log entries for those files\nchanged for lcc 4.2.\n$Id$\n\nsrc/alloc.c:\nFixed subtle alignment bug on p. 28.\n\nsrc/dag.c:\nRenamed kill to killnodes to avoid possible clash with kill in <signal.ch>.\n\nMade address interface function optional.\n\nEnsured that generated locals, even if not temps, are\nadded to the code list.\n\nAvoided calls to undag when errcnt>0.\n\nChanged listnodes so that array types decay to pointers; bug\ntickled by -n option.\n\nsrc/decl.c:\nMoved call to retcode that injects a return at the end of a function\ninto compound so that temps created by retcode will be\nscoped properly.\n\nFixed bug in which functions that return const struct S {...} issued\nan incorrect diagnostic.\n\nEnsure addressed is set for local arrays.\n\nsrc/enode.c:\nCorrected type conversions in addtree for ADD+P nodes;\nstripped qualifiers from pointer types in eqtree and cmptree.\n\nsrc/event.c:\nRevise functions called at events so all have the same signature,\nmodulo pointer types.\n\nsrc/expr.c:\nWith -b, avoid instrumenting  constant ?: expressions.\n\nFixed bug in wide-character literals.\n\nFix allocation error for identifiers injected to quell\nundeclared identifier errors;\nCorrect int type added to addresses in field offsets.\n\nsrc/gen.c:\nMade emitasm extern.\n\nsrc/input.c:\nFixed bug in resynch that caused infinite loop.\n\nAdded #ident recognition, which simply ignores it.\n\nsrc/symbolic.c:\nRevised symbolic back end to emit -0.0 correctly.\n\nEmit flags in symbolic output.\n\nsrc/bytecode.c:\nFixed double output botch in defconst in bytecode backend.\n\nsrc/dagcheck.c:\nAdded mssing cases in dagcheck's reduce for types signedptr\nand unsignedptr. Without these, reduce can fail.\n\nsrc/lex.c:\nPermit \\ to escape newline in string literals.\n\nFixed scon() so that it accepts and concatenates adjacent wide-character literals.\n\nsrc/main.c:\nFixed long-standing bug in which -n, -b, -C, and -a options caused\ninterface functions to be called before progbeg.\n\nsrc/mips.md:\nFixed FP comparisons to handle NaNs correctly.\n\nRound up framesize to a multiple of 16 for Irix 6.x;\nadded casts in defconst to discard unused bits.\n\nsrc/prof.c:\nRevise functions called at events so all have the same signature,\nmodulo pointer types.\n\nChange ftype to build arbitrary prototypes.\n\nFixed long-standing bug in which -n, -b, -C, and -a options caused\ninterface functions to be called before progbeg.\nAlso, added missing call to space.\n\nRelaxed assertion in loop that searches for\nembedded CALL nodes.\n\nEmit correct padding in generated -b strutures.\n\nRevised call hook to find CALL nodes embedded\nat any depth.\n\nEdited bbincr so that it doesn't inject increments in constant expressions.\n\nsrc/profio.c:\nChange compare's prototype to conform to ANSI standard;\nchange calls to qsort accordingly.\n\nFixed implicit assumption that execution point i in file f always\nrefers to the same x,y. This isn't true for noweb files.\n\nsrc/simp.c:\nMade address interface function optional.\n\nTighten test that avoids folding addressing expressions\nfor switch tables when the offset exceeds 16 bits. Without\nthis addition, lcc can emit erroneous \"initializer must be\nconstant\" diagnostics.\n\nRevised simplify() so that if doesn't call address to\nfold (ADDGRP a n) when n exceeds 16 bits.\n\nReordered tests in MOD+I case so expressions like 6%1 fold correctly.\n\nsrc/sparc.md:\nFixed FP comparisons to handle NaNs correctly.\n\nAdded casts in defconst() to emit constants with proper sizes.\n\nReplaced pseudo-instructions st2/ld2 with pairs of st/ld instructions.\n\nsrc/stmt.c:\nFixed botch in 2.16 revision.\n\nFixed return statement so that \"return;\" in a function that returns\na value returns 0. Similar code is already in decl.nw.\n\nResynch to distributable version.\n\nUsed dynamic variables for loop and switch handles.\n\nFixed bug in which functions that return const struct S {...} issued\nan incorrect diagnostic.\n\nAppended a missing \\n to a warning.\n\nsrc/sym.c:\nRevised 2.19's code for comparing -0.0 and 0.0 so that it works\ncorrectly when long double's occupy more bytes than the actual\nvalues, as on the x86 under gcc.\nFix constant() so that it treats -0.0 and +0.0 as different constants.\n\nAdded newtable() to allocate empty symbol tables.\n\nsrc/trace.c:\nRevise functions called at events so all have the same signature,\nmodulo pointer types.\n\nChange ftype to build arbitrary prototypes.\n\nFixed long-standing bug in which -n, -b, -C, and -a options caused\ninterface functions to be called before progbeg.\n\nsrc/tree.c:\nCorrect revision 2.9's implementation of check to avoid\nsuperfluous diagnostics on widening conversions.\n\nAvoid diagnostics for superfluous widening conversions.\n\nsrc/types.c:\nRevise fieldmask definition so it works\nfor all values of fieldsize.\n\nChange ftype to build arbitrary prototypes.\n\nsrc/x86.md:\nFixed FP comparisons to handle NaNs correctly.\n\nChanged ARGB instruction sequence to decrement\nesp by the size of the structure rounded up to 4.\nChanged struct allignment to 1; this required changing local to\ninsure that on-stack structs are aligned to at least 4 bytes.\n\nAdded cast in defconst to eliminate extraneous bits.\n\nFixed float-to-int conversions so they truncate properly;\nfixed assembler syntax errors on x86/linux.\n\nFixed frame size adjustment for frames >= 4096; now calls _chkstk\nto allocate large frames.\n\nFixed overly specific opcode for loading constants.\n\nChanged add/sub to addl/subl in potentially ambiguous\ninstructions in the x86/linux back end.\n\ncpp/cpp.c:\nAdded line to fix Nelson Beebe's bug using #defined x X.\n\ncpp/cpp.h:\nRevised to use stdio for output.\n\nConverted to use stdio for input.\n\ncpp/eval.c:\nAdded evaluation stack overflow checks.\n\nIncluded stdio.h.\n\ncpp/getopt.c:\nInclude <string.h>; cut decl. for strchr.\n\ncpp/hideset.c:\nFixed potential sizeof botches.\n\ncpp/include.c:\nRevised to use stdio for output.\n\nRemoved unused wd[].\n\nFixed incorrect check of fopen return value.\n\nConverted to use stdio for input.\n\ncpp/lex.c:\nFixed incorrect test of fd value; fixed comments.\n\nConverted to use stdio for input.\n\ncpp/macro.c:\nFixed obscure bug that occurs when string literals are stored\nin read-only memory. -DX attempts to append a null byte to \"1\".\nFound by Nelson Beebe.\n\nConverted to use stdio for input.\n\ncpp/nlist.c:\nRemoved unused wd[].\n\nAdded #ident; ignored as for #pragma.\n\ncpp/tokens.c:\nRevised to use stdio for output.\n\nFixed erroneous initialization and check of FILE * value.\n\ncpp/unix.c:\nRevised to use stdio for output.\n\nFixed erroneous initialization and check of FILE * value.\n\nConverted to use stdio for input.\n\netc/irix.c:\nAdded -D_LONGLONG, because some SGI assume this.\nReported by Nelson Beebe.\n\nAdded -32 option to insure O32 object files and libraries are used.\n\netc/lcc.c:\nFixed -l file so that file doesn't have to exist.\n\nChanged \\ to / at the end of Win32 include paths.\n\nAdded casts and prototypes to make _spawnvp compatible\nwith Win32 version.\n\nPermit -dynamic -static on all systems, using option to check\nfor validity.\nEdited help messages.\n\nLook for -Wf-unsigned_char=1 and added\n-D__CHAR_IUNSIGNED__ and -U_CHAR_IS_SIGNED to the cpp\ncommand line. These options interact with changes to the\nstandard header limits.h to set CHAR_MIN and CHAR_MAX correctly.\nLook for -Wf-wchar_t=... and define _WCHAR_T_SIZE appropriately,\nwhich interacts with stddef.h and stdlib.h to typedef wchar_t correctly.\n\nFixed botch in initinputs that cleared LCCINPUTS.\n\netc/win32.c:\nAdded oldnames.lib to link command.\n\nCut useless -align directive in ld command.\n\ninclude/*/*/limits.h:\nCorrected name: __CHAR_IS_UNSIGNED__ should be __CHAR_UNSIGNED__.\n\nDefine CHAR_MIN/CHAR_MAX depending on defintion of __CHAR_IS_UNSIGNED__.\n\ninclude/*/*/locale.h:\nChange NULL to ((void*)0).\n\nProtected definition of NULL;\ndefined NULL as 0L on osf systems.\n\ninclude/*/*/stdarg.h:\nFixed typedef for __va_list so it's protected by #ifdef.\n\nFixed missing #endif;\nprotected definition of va_list by _VA_LIST_DEFINED.\n\nChanged the type of va_list.\n\nInsured only va_list was conditionally defined.\n\nInsured _VA_LIST is defined.\n\nRevised __va_arg macro to handle va_arg(float) correctly;\nthis addition required a static double temporary, which is\nless than elegant and subject to order-of-evaluation bugs.\n\ninclude/*/*/stddef.h:\nChange NULL to ((void*)0).\n\nAdded _x_T_DEFINED flag macros for Windows compatibility.\n\nAdded code to typedef wchar_t to unsigned char, short, or int\ndepending on the value of _WCHAR_T_SIZE.\n\nProtected definition of NULL;\ndefined NULL as 0L on osf systems.\n\ninclude/*/*/stdio.h:\nChange NULL to ((void*)0).\n\nAdded _x_T_DEFINED flag macros for Windows compatibility.\n\nChanged the type of va_list.\n\nProtected definition of size_t by _SIZE_T_DEFINED;\nadded definition for va_list protected by _VA_LIST.\n\nProtected definition of NULL;\ndefined NULL as 0L on osf systems.\n\ninclude/*/*/stdlib.h:\nChange NULL to ((void*)0).\n\nAdded _x_T_DEFINED flag macros for Windows compatibility.\n\nAdded code to typedef wchar_t to unsigned char, short, or int\ndepending on the value of _WCHAR_T_SIZE.\n\nProtected definition of NULL;\ndefined NULL as 0L on osf systems.\n\ninclude/*/*/string.h:\nChange NULL to ((void*)0).\n\nAdded _x_T_DEFINED flag macros for Windows compatibility.\n\nProtected definition of NULL;\ndefined NULL as 0L on osf systems.\n\ninclude/*/*/time.h:\nChange NULL to ((void*)0).\n\nAdded _x_T_DEFINED flag macros for Windows compatibility.\n\nProtected definition of NULL;\ndefined NULL as 0L on osf systems.\n\nlburg/lburg.c:\nSimplified use of va_arg to accommodate gcc bug.\n\nAdded ()s to avoid bogus compilation error on Linux.\n\nlib/assert.c:\nAdded EXPORT and default definition.\n\nlib/bbexit.c:\nAccess _caller via indirection; add _setcallerp.\n\nAdded EXPORT and default definition.\n\nChanged profiling counters to ints.\n\nlib/yynull.c:\nAdded EXPORT and default definition.\n\ntst/cq.c:\nAdded prototypes to function pointer initializations.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.87890625,
          "content": "This hierarchy is the distribution for lcc version 4.2.\n\nlcc version 3.x is described in the book \"A Retargetable C Compiler:\nDesign and Implementation\" (Addison-Wesley, 1995, ISBN 0-8053-1670-1).\nThere are significant differences between 3.x and 4.x, most notably in\nthe intermediate code. For details, see\nhttps://drh.github.io/lcc/documents/interface4.pdf.\n\nVERSION 4.2 IS INCOMPATIBLE WITH EARLIER VERSIONS OF LCC. DO NOT\nUNLOAD THIS DISTRIBUTION ON TOP OF A 3.X DISTRIBUTION.\n\nLCC is a C89 (\"ANSI C\") compiler designed to be highly retargetable.\n\nLOG describes the changes since the last release.\n\nCPYRIGHT describes the conditions under you can use, copy, modify, and\ndistribute lcc or works derived from lcc.\n\ndoc/install.html is an HTML file that gives a complete description of\nthe distribution and installation instructions.\n\nChris Fraser / cwf@aya.yale.edu\nDavid Hanson / drh@drhanson.net\n"
        },
        {
          "name": "alpha",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "custom.mk",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lburg",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 9.41796875,
          "content": "# $Id$\nA=.a\nO=.o\nE=\nCC=cc\nCFLAGS=-g\nLDFLAGS=-g\nLD=$(CC)\nAR=ar ruv\nRANLIB=ranlib\nDIFF=diff\nRM=rm -f\nTSTDIR=$(BUILDDIR)/$(TARGET)/tst\nCUSTOM=custom.mk\ninclude $(CUSTOM)\nB=$(BUILDDIR)/\nT=$(TSTDIR)/\n\nwhat:\n\t-@echo make all rcc lburg cpp lcc bprint liblcc triple clean clobber\n\nall::\trcc lburg cpp lcc bprint liblcc\n\nrcc:\t$Brcc$E\nlburg:\t$Blburg$E\ncpp:\t$Bcpp$E\nlcc:\t$Blcc$E\nbprint:\t$Bbprint$E\nliblcc:\t$Bliblcc$A\n\nRCCOBJS=$Balloc$O \\\n\t$Bbind$O \\\n\t$Bdag$O \\\n\t$Bdagcheck$O \\\n\t$Bdecl$O \\\n\t$Benode$O \\\n\t$Berror$O \\\n\t$Bexpr$O \\\n\t$Bevent$O \\\n\t$Binit$O \\\n\t$Binits$O \\\n\t$Binput$O \\\n\t$Blex$O \\\n\t$Blist$O \\\n\t$Bmain$O \\\n\t$Boutput$O \\\n\t$Bprof$O \\\n\t$Bprofio$O \\\n\t$Bsimp$O \\\n\t$Bstmt$O \\\n\t$Bstring$O \\\n\t$Bsym$O \\\n\t$Btrace$O \\\n\t$Btree$O \\\n\t$Btypes$O \\\n\t$Bnull$O \\\n\t$Bsymbolic$O \\\n\t$Bgen$O \\\n\t$Bbytecode$O \\\n\t$Balpha$O \\\n\t$Bmips$O \\\n\t$Bsparc$O \\\n\t$Bstab$O \\\n\t$Bx86$O \\\n\t$Bx86linux$O\n\n$Brcc$E::\t$Bmain$O $Blibrcc$A $(EXTRAOBJS)\n\t\t$(LD) $(LDFLAGS) -o $@ $Bmain$O $(EXTRAOBJS) $Blibrcc$A $(EXTRALIBS)\n\n$Blibrcc$A:\t$(RCCOBJS)\n\t\t$(AR) $@ $(RCCOBJS); $(RANLIB) $@ || true\n\n$(RCCOBJS):\tsrc/c.h src/ops.h src/token.h src/config.h\n\n$Balloc$O:\tsrc/alloc.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/alloc.c\n$Bbind$O:\tsrc/bind.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/bind.c\n$Bdag$O:\tsrc/dag.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/dag.c\n$Bdecl$O:\tsrc/decl.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/decl.c\n$Benode$O:\tsrc/enode.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/enode.c\n$Berror$O:\tsrc/error.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/error.c\n$Bevent$O:\tsrc/event.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/event.c\n$Bexpr$O:\tsrc/expr.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/expr.c\n$Bgen$O:\tsrc/gen.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/gen.c\n$Binit$O:\tsrc/init.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/init.c\n$Binits$O:\tsrc/inits.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/inits.c\n$Binput$O:\tsrc/input.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/input.c\n$Blex$O:\tsrc/lex.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/lex.c\n$Blist$O:\tsrc/list.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/list.c\n$Bmain$O:\tsrc/main.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/main.c\n$Bnull$O:\tsrc/null.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/null.c\n$Boutput$O:\tsrc/output.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/output.c\n$Bprof$O:\tsrc/prof.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/prof.c\n$Bprofio$O:\tsrc/profio.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/profio.c\n$Bsimp$O:\tsrc/simp.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/simp.c\n$Bstmt$O:\tsrc/stmt.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/stmt.c\n$Bstring$O:\tsrc/string.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/string.c\n$Bsym$O:\tsrc/sym.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/sym.c\n$Bsymbolic$O:\tsrc/symbolic.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/symbolic.c\n$Bbytecode$O:\tsrc/bytecode.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/bytecode.c\n$Btrace$O:\tsrc/trace.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/trace.c\n$Btree$O:\tsrc/tree.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/tree.c\n$Btypes$O:\tsrc/types.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/types.c\n$Bstab$O:\tsrc/stab.c src/stab.h;\t$(CC) $(CFLAGS) -c -Isrc -o $@ src/stab.c\n\n$Bdagcheck$O:\t$Bdagcheck.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ $Bdagcheck.c\n$Balpha$O:\t$Balpha.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ $Balpha.c\n$Bmips$O:\t$Bmips.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ $Bmips.c\n$Bsparc$O:\t$Bsparc.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ $Bsparc.c\n$Bx86$O:\t$Bx86.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ $Bx86.c\n$Bx86linux$O:\t$Bx86linux.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ $Bx86linux.c\n\n$Bdagcheck.c:\t$Blburg$E src/dagcheck.md; $Blburg src/dagcheck.md $@\n$Balpha.c:\t$Blburg$E src/alpha.md;    $Blburg src/alpha.md    $@\n$Bmips.c:\t$Blburg$E src/mips.md;     $Blburg src/mips.md     $@\n$Bsparc.c:\t$Blburg$E src/sparc.md;    $Blburg src/sparc.md    $@\n$Bx86.c:\t$Blburg$E src/x86.md;      $Blburg src/x86.md      $@\n$Bx86linux.c:\t$Blburg$E src/x86linux.md; $Blburg src/x86linux.md $@\n\n$Bbprint$E:\t$Bbprint$O;\t\t$(LD) $(LDFLAGS) -o $@ $Bbprint$O \n$Bops$E:\t$Bops$O;\t\t$(LD) $(LDFLAGS) -o $@ $Bops$O \n\n$Bbprint$O:\tetc/bprint.c src/profio.c;\t$(CC) $(CFLAGS) -c -Isrc -o $@ etc/bprint.c\n$Bops$O:\tetc/ops.c src/ops.h;\t\t$(CC) $(CFLAGS) -c -Isrc -o $@ etc/ops.c\n\n$Blcc$E:\t$Blcc$O $Bhost$O;\t$(LD) $(LDFLAGS) -o $@ $Blcc$O $Bhost$O \n\n$Blcc$O:\tetc/lcc.c;\t\t$(CC) $(CFLAGS) -c -o $@ etc/lcc.c\n$Bhost$O:\t$(HOSTFILE);\t$(CC) $(CFLAGS) -c -o $@ $(HOSTFILE)\n\nLIBOBJS=$Bassert$O $Bbbexit$O $Byynull$O\n\n$Bliblcc$A:\t$(LIBOBJS);\t$(AR) $@ $Bassert$O $Bbbexit$O $Byynull$O; $(RANLIB) $@ || true\n\n$Bassert$O:\tlib/assert.c;\t$(CC) $(CFLAGS) -c -o $@ lib/assert.c\n$Byynull$O:\tlib/yynull.c;\t$(CC) $(CFLAGS) -c -o $@ lib/yynull.c\n$Bbbexit$O:\tlib/bbexit.c;\t$(CC) $(CFLAGS) -c -o $@ lib/bbexit.c\n\n$Blburg$E:\t$Blburg$O $Bgram$O;\t$(LD) $(LDFLAGS) -o $@ $Blburg$O $Bgram$O \n\n$Blburg$O $Bgram$O:\tlburg/lburg.h\n\n$Blburg$O:\tlburg/lburg.c;\t$(CC) $(CFLAGS) -c -Ilburg -o $@ lburg/lburg.c\n$Bgram$O:\tlburg/gram.c;\t$(CC) $(CFLAGS) -c -Ilburg -o $@ lburg/gram.c\n\nCPPOBJS=$Bcpp$O $Blexer$O $Bnlist$O $Btokens$O $Bmacro$O $Beval$O \\\n\t$Binclude$O $Bhideset$O $Bgetopt$O $Bunix$O\n\n$Bcpp$E:\t$(CPPOBJS)\n\t\t$(LD) $(LDFLAGS) -o $@ $(CPPOBJS) \n\n$(CPPOBJS):\tcpp/cpp.h\n\n$Bcpp$O:\tcpp/cpp.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/cpp.c\n$Blexer$O:\tcpp/lex.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/lex.c\n$Bnlist$O:\tcpp/nlist.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/nlist.c\n$Btokens$O:\tcpp/tokens.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/tokens.c\n$Bmacro$O:\tcpp/macro.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/macro.c\n$Beval$O:\tcpp/eval.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/eval.c\n$Binclude$O:\tcpp/include.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/include.c\n$Bhideset$O:\tcpp/hideset.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/hideset.c\n$Bgetopt$O:\tcpp/getopt.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/getopt.c\n$Bunix$O:\tcpp/unix.c;\t$(CC) $(CFLAGS) -c -Icpp -o $@ cpp/unix.c\n\ntest:\t$T8q.s \\\n\t$Tarray.s \\\n\t$Tcf.s \\\n\t$Tcq.s \\\n\t$Tcvt.s \\\n\t$Tfields.s \\\n\t$Tfront.s \\\n\t$Tincr.s \\\n\t$Tinit.s \\\n\t$Tlimits.s \\\n\t$Tparanoia.s \\\n\t$Tsort.s \\\n\t$Tspill.s \\\n\t$Tstdarg.s \\\n\t$Tstruct.s \\\n\t$Tswitch.s \\\n\t$Twf1.s \\\n\t$Tyacc.s\n\n$T8q.s:\ttst/8q.c tst/8q.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tarray.s:\ttst/array.c tst/array.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tcf.s:\ttst/cf.c tst/cf.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tcq.s:\ttst/cq.c tst/cq.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tcvt.s:\ttst/cvt.c tst/cvt.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tfields.s:\ttst/fields.c tst/fields.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tfront.s:\ttst/front.c tst/front.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tincr.s:\ttst/incr.c tst/incr.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tinit.s:\ttst/init.c tst/init.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tlimits.s:\ttst/limits.c tst/limits.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tparanoia.s:\ttst/paranoia.c tst/paranoia.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tsort.s:\ttst/sort.c tst/sort.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tspill.s:\ttst/spill.c tst/spill.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tstdarg.s:\ttst/stdarg.c tst/stdarg.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tstruct.s:\ttst/struct.c tst/struct.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tswitch.s:\ttst/switch.c tst/switch.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Twf1.s:\ttst/wf1.c tst/wf1.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n$Tyacc.s:\ttst/yacc.c tst/yacc.0 all;\t@env BUILDDIR=$(BUILDDIR) TSTDIR=$(TSTDIR) src/run.sh $@\n\ntestclean:\n\t$(RM) $T8q$E $T8q.s $T8q.2 $T8q.1\n\t$(RM) $Tarray$E $Tarray.s $Tarray.2 $Tarray.1\n\t$(RM) $Tcf$E $Tcf.s $Tcf.2 $Tcf.1\n\t$(RM) $Tcq$E $Tcq.s $Tcq.2 $Tcq.1\n\t$(RM) $Tcvt$E $Tcvt.s $Tcvt.2 $Tcvt.1\n\t$(RM) $Tfields$E $Tfields.s $Tfields.2 $Tfields.1\n\t$(RM) $Tfront$E $Tfront.s $Tfront.2 $Tfront.1\n\t$(RM) $Tincr$E $Tincr.s $Tincr.2 $Tincr.1\n\t$(RM) $Tinit$E $Tinit.s $Tinit.2 $Tinit.1\n\t$(RM) $Tlimits$E $Tlimits.s $Tlimits.2 $Tlimits.1\n\t$(RM) $Tparanoia$E $Tparanoia.s $Tparanoia.2 $Tparanoia.1\n\t$(RM) $Tsort$E $Tsort.s $Tsort.2 $Tsort.1\n\t$(RM) $Tspill$E $Tspill.s $Tspill.2 $Tspill.1\n\t$(RM) $Tstdarg$E $Tstdarg.s $Tstdarg.2 $Tstdarg.1\n\t$(RM) $Tstruct$E $Tstruct.s $Tstruct.2 $Tstruct.1\n\t$(RM) $Tswitch$E $Tswitch.s $Tswitch.2 $Tswitch.1\n\t$(RM) $Twf1$E $Twf1.s $Twf1.2 $Twf1.1\n\t$(RM) $Tyacc$E $Tyacc.s $Tyacc.2 $Tyacc.1\n\nclean::\t\ttestclean\n\t\t$(RM) $B*$O\n\t\t$(RM) $Bdagcheck.c $Balpha.c $Bmips.c $Bx86.c $Bsparc.c $Bx86linux.c\n\t\t$(RM) $Brcc1$E $Brcc1$E $B1rcc$E $B2rcc$E\n\t\t$(RM) $B*.ilk\n\nclobber::\tclean\n\t\t$(RM) $Brcc$E $Blburg$E $Bcpp$E $Blcc$E $Bcp$E $Bbprint$E $B*$A\n\t\t$(RM) $B*.pdb $B*.pch\n\nRCCSRCS=src/alloc.c \\\n\tsrc/bind.c \\\n\tsrc/dag.c \\\n\tsrc/decl.c \\\n\tsrc/enode.c \\\n\tsrc/error.c \\\n\tsrc/expr.c \\\n\tsrc/event.c \\\n\tsrc/init.c \\\n\tsrc/inits.c \\\n\tsrc/input.c \\\n\tsrc/lex.c \\\n\tsrc/list.c \\\n\tsrc/main.c \\\n\tsrc/output.c \\\n\tsrc/prof.c \\\n\tsrc/profio.c \\\n\tsrc/simp.c \\\n\tsrc/stmt.c \\\n\tsrc/string.c \\\n\tsrc/sym.c \\\n\tsrc/trace.c \\\n\tsrc/tree.c \\\n\tsrc/types.c \\\n\tsrc/null.c \\\n\tsrc/symbolic.c \\\n\tsrc/bytecode.c \\\n\tsrc/gen.c \\\n\tsrc/stab.c \\\n\t$Bdagcheck.c \\\n\t$Balpha.c \\\n\t$Bmips.c \\\n\t$Bsparc.c \\\n\t$Bx86linux.c \\\n\t$Bx86.c\n\nC=$Blcc -A -d0.6 -Wo-lccdir=$(BUILDDIR) -Isrc -I$(BUILDDIR)\ntriple:\t$B2rcc$E\n\tstrip $B1rcc$E $B2rcc$E\n\tdd if=$B1rcc$E of=$Brcc1$E bs=512 skip=1\n\tdd if=$B2rcc$E of=$Brcc2$E bs=512 skip=1\n\tif cmp $Brcc1$E $Brcc2$E; then \\\n\t\tmv $B2rcc$E $Brcc$E; \\\n\t\t$(RM) $B1rcc$E $Brcc[12]$E; fi\n\n$B1rcc$E:\t$Brcc$E $Blcc$E $Bcpp$E\n\t\t$C -o $@ -B$B $(RCCSRCS)\n$B2rcc$E:\t$B1rcc$E\n\t\t$C -o $@ -B$B1 $(RCCSRCS)\n"
        },
        {
          "name": "makefile.nt",
          "type": "blob",
          "size": 12.24609375,
          "content": "# $Id$\nHOSTFILE=etc/win32.c\nTARGET=x86\\win32\nTEMPDIR=\\\\temp\nA=.lib\nO=.obj\nE=.exe\nCC=cl -nologo\nCFLAGS=-DWIN32 -Zi -MLd -Fd$(BUILDDIR)^\\\nLD=cl -nologo\nLDFLAGS=-Zi -MLd -Fd$(BUILDDIR)^\\\nTSTDIR=$(BUILDDIR)\\$(TARGET)\\tst\nB=$(BUILDDIR)^\\\nT=$(TSTDIR)^\\\nC=$Blcc -Wo-lccdir=$(BUILDDIR) -Wf-target=$(TARGET) -Iinclude\\$(TARGET)\n\nwhat:\n\t-@echo make all rcc lburg cpp lcc bprint liblcc triple clean clobber\n\nall::\trcc lburg cpp lcc bprint liblcc\n\nrcc:\t$Brcc$E\nlburg:\t$Blburg$E\ncpp:\t$Bcpp$E\nlcc:\t$Blcc$E\nbprint:\t$Bbprint$E\nliblcc:\t$Bliblcc$A\n\nRCCOBJS=$Balloc$O \\\n\t$Bbind$O \\\n\t$Bdag$O \\\n\t$Bdagcheck$O \\\n\t$Bdecl$O \\\n\t$Benode$O \\\n\t$Berror$O \\\n\t$Bexpr$O \\\n\t$Bevent$O \\\n\t$Binit$O \\\n\t$Binits$O \\\n\t$Binput$O \\\n\t$Blex$O \\\n\t$Blist$O \\\n\t$Bmain$O \\\n\t$Boutput$O \\\n\t$Bprof$O \\\n\t$Bprofio$O \\\n\t$Bsimp$O \\\n\t$Bstmt$O \\\n\t$Bstring$O \\\n\t$Bsym$O \\\n\t$Btrace$O \\\n\t$Btree$O \\\n\t$Btypes$O \\\n\t$Bnull$O \\\n\t$Bsymbolic$O \\\n\t$Bgen$O \\\n\t$Bbytecode$O \\\n\t$Balpha$O \\\n\t$Bmips$O \\\n\t$Bsparc$O \\\n\t$Bstab$O \\\n\t$Bx86$O \\\n\t$Bx86linux$O\n\n$Brcc$E::\t$Bmain$O $Blibrcc$A $(EXTRAOBJS)\n\t\t$(LD) $(LDFLAGS) -Fe$@ $Bmain$O $(EXTRAOBJS) $Blibrcc$A $(EXTRALIBS)\n\n$Blibrcc$A:\t$(RCCOBJS)\n\t\tlib -out:$@ $(RCCOBJS)\n\n$(RCCOBJS):\tsrc/c.h src/ops.h src/token.h src/config.h\n\n$Balloc$O:\tsrc/alloc.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/alloc.c\n$Bbind$O:\tsrc/bind.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/bind.c\n$Bdag$O:\tsrc/dag.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/dag.c\n$Bdecl$O:\tsrc/decl.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/decl.c\n$Benode$O:\tsrc/enode.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/enode.c\n$Berror$O:\tsrc/error.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/error.c\n$Bevent$O:\tsrc/event.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/event.c\n$Bexpr$O:\tsrc/expr.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/expr.c\n$Bgen$O:\tsrc/gen.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/gen.c\n$Binit$O:\tsrc/init.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/init.c\n$Binits$O:\tsrc/inits.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/inits.c\n$Binput$O:\tsrc/input.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/input.c\n$Blex$O:\tsrc/lex.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/lex.c\n$Blist$O:\tsrc/list.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/list.c\n$Bmain$O:\tsrc/main.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/main.c\n$Bnull$O:\tsrc/null.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/null.c\n$Boutput$O:\tsrc/output.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/output.c\n$Bprof$O:\tsrc/prof.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/prof.c\n$Bprofio$O:\tsrc/profio.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/profio.c\n$Bsimp$O:\tsrc/simp.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/simp.c\n$Bstmt$O:\tsrc/stmt.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/stmt.c\n$Bstring$O:\tsrc/string.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/string.c\n$Bsym$O:\tsrc/sym.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/sym.c\n$Bsymbolic$O:\tsrc/symbolic.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/symbolic.c\n$Bbytecode$O:\tsrc/bytecode.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/bytecode.c\n$Btrace$O:\tsrc/trace.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/trace.c\n$Btree$O:\tsrc/tree.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/tree.c\n$Btypes$O:\tsrc/types.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/types.c\n$Bstab$O:\tsrc/stab.c src/stab.h;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ src/stab.c\n\n$Bdagcheck$O:\t$Bdagcheck.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ $Bdagcheck.c\n$Balpha$O:\t$Balpha.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ $Balpha.c\n$Bmips$O:\t$Bmips.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ $Bmips.c\n$Bsparc$O:\t$Bsparc.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ $Bsparc.c\n$Bx86$O:\t$Bx86.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ $Bx86.c\n$Bx86linux$O:\t$Bx86linux.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ $Bx86linux.c\n\n$Bdagcheck.c:\t$Blburg$E src/dagcheck.md; $Blburg src/dagcheck.md $@\n$Balpha.c:\t$Blburg$E src/alpha.md;    $Blburg src/alpha.md    $@\n$Bmips.c:\t$Blburg$E src/mips.md;     $Blburg src/mips.md     $@\n$Bsparc.c:\t$Blburg$E src/sparc.md;    $Blburg src/sparc.md    $@\n$Bx86.c:\t$Blburg$E src/x86.md;      $Blburg src/x86.md      $@\n$Bx86linux.c:\t$Blburg$E src/x86linux.md; $Blburg src/x86linux.md $@\n\n$Bbprint$E:\t$Bbprint$O;\t$(LD) $(LDFLAGS) -Fe$@ $Bbprint$O \n$Bops$E:\t$Bops$O;\t$(LD) $(LDFLAGS) -Fe$@ $Bops$O\n\n$Bbprint$O:\tetc/bprint.c src/profio.c;\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ etc/bprint.c\n$Bops$O:\tetc/ops.c src/ops.h;\t\t$(CC) $(CFLAGS) -c -Isrc -Fo$@ etc/ops.c\n\n$Blcc$E:\t$Blcc$O $Bhost$O;\t$(LD) $(LDFLAGS) -Fe$@ $Blcc$O $Bhost$O \n\n$Blcc$O:\tetc/lcc.c;\t$(CC) $(CFLAGS) -c -DTEMPDIR=\\\"$(TEMPDIR)\\\" -Fo$@ etc/lcc.c\n$Bhost$O:\t$(HOSTFILE);\t$(CC) $(CFLAGS) -c -Fo$@ $(HOSTFILE)\n\n$Bcp$E:\t\tetc/cp.c;\t$(CC) $(CFLAGS) -Fo$@ etc/cp.c\n\nLIBOBJS=$Bassert$O $Bbbexit$O $Byynull$O\n\n$Bliblcc$A:\t$(LIBOBJS);\tlib -out:$@ $Bassert$O $Bbbexit$O $Byynull$O\n\n$Bassert$O:\tlib/assert.c;\t$(CC) -c -Fo$@ lib/assert.c\n$Byynull$O:\tlib/yynull.c;\t$(CC) -c -Fo$@ lib/yynull.c\n$Bbbexit$O:\tlib/bbexit.c;\t$(CC) -c -Fo$@ lib/bbexit.c\n\n$Blburg$E:\t$Blburg$O $Bgram$O;\t$(LD) $(LDFLAGS) -Fe$@ $Blburg$O $Bgram$O \n\n$Blburg$O $Bgram$O:\tlburg/lburg.h\n\n$Blburg$O:\tlburg/lburg.c;\t$(CC) $(CFLAGS) -c -Ilburg -Fo$@ lburg/lburg.c\n$Bgram$O:\tlburg/gram.c;\t$(CC) $(CFLAGS) -c -Ilburg -Fo$@ lburg/gram.c\n\nCPPOBJS=$Bcpp$O $Blexer$O $Bnlist$O $Btokens$O $Bmacro$O $Beval$O \\\n\t$Binclude$O $Bhideset$O $Bgetopt$O $Bunix$O\n\n$Bcpp$E:\t$(CPPOBJS)\n\t\t$(LD) $(LDFLAGS) -Fe$@ $(CPPOBJS) \n\n$(CPPOBJS):\tcpp/cpp.h\n\n$Bcpp$O:\tcpp/cpp.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/cpp.c\n$Blexer$O:\tcpp/lex.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/lex.c\n$Bnlist$O:\tcpp/nlist.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/nlist.c\n$Btokens$O:\tcpp/tokens.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/tokens.c\n$Bmacro$O:\tcpp/macro.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/macro.c\n$Beval$O:\tcpp/eval.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/eval.c\n$Binclude$O:\tcpp/include.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/include.c\n$Bhideset$O:\tcpp/hideset.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/hideset.c\n$Bgetopt$O:\tcpp/getopt.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/getopt.c\n$Bunix$O:\tcpp/unix.c;\t$(CC) $(CFLAGS) -c -Icpp -Fo$@ cpp/unix.c\n\ntest:\t$T8q.s \\\n\t$Tarray.s \\\n\t$Tcf.s \\\n\t$Tcq.s \\\n\t$Tcvt.s \\\n\t$Tfields.s \\\n\t$Tfront.s \\\n\t$Tincr.s \\\n\t$Tinit.s \\\n\t$Tlimits.s \\\n\t$Tparanoia.s \\\n\t$Tsort.s \\\n\t$Tspill.s \\\n\t$Tstdarg.s \\\n\t$Tstruct.s \\\n\t$Tswitch.s \\\n\t$Twf1.s \\\n\t$Tyacc.s\n\n$T8q.s:\ttst\\8q.c tst\\8q.0 all\n\t-$C -S -Wf-errout=$T8q.2 -o $T8q.s tst/8q.c\n\tfc $(TARGET)\\tst\\8q.sbk $T8q.s\n\tfc $(TARGET)\\tst\\8q.2bk $T8q.2\n\t$C -o $T8q$E $T8q.s\n\t-$T8q$E <tst/8q.0 >$T8q.1\n\tfc $(TARGET)\\tst\\8q.1bk $T8q.1\n$Tarray.s:\ttst\\array.c tst\\array.0 all\n\t-$C -S -Wf-errout=$Tarray.2 -o $Tarray.s tst/array.c\n\tfc $(TARGET)\\tst\\array.sbk $Tarray.s\n\tfc $(TARGET)\\tst\\array.2bk $Tarray.2\n\t$C -o $Tarray$E $Tarray.s\n\t-$Tarray$E <tst/array.0 >$Tarray.1\n\tfc $(TARGET)\\tst\\array.1bk $Tarray.1\n$Tcf.s:\ttst\\cf.c tst\\cf.0 all\n\t-$C -S -Wf-errout=$Tcf.2 -o $Tcf.s tst/cf.c\n\tfc $(TARGET)\\tst\\cf.sbk $Tcf.s\n\tfc $(TARGET)\\tst\\cf.2bk $Tcf.2\n\t$C -o $Tcf$E $Tcf.s\n\t-$Tcf$E <tst/cf.0 >$Tcf.1\n\tfc $(TARGET)\\tst\\cf.1bk $Tcf.1\n$Tcq.s:\ttst\\cq.c tst\\cq.0 all\n\t-$C -S -Wf-errout=$Tcq.2 -o $Tcq.s tst/cq.c\n\tfc $(TARGET)\\tst\\cq.sbk $Tcq.s\n\tfc $(TARGET)\\tst\\cq.2bk $Tcq.2\n\t$C -o $Tcq$E $Tcq.s\n\t-$Tcq$E <tst/cq.0 >$Tcq.1\n\tfc $(TARGET)\\tst\\cq.1bk $Tcq.1\n$Tcvt.s:\ttst\\cvt.c tst\\cvt.0 all\n\t-$C -S -Wf-errout=$Tcvt.2 -o $Tcvt.s tst/cvt.c\n\tfc $(TARGET)\\tst\\cvt.sbk $Tcvt.s\n\tfc $(TARGET)\\tst\\cvt.2bk $Tcvt.2\n\t$C -o $Tcvt$E $Tcvt.s\n\t-$Tcvt$E <tst/cvt.0 >$Tcvt.1\n\tfc $(TARGET)\\tst\\cvt.1bk $Tcvt.1\n$Tfields.s:\ttst\\fields.c tst\\fields.0 all\n\t-$C -S -Wf-errout=$Tfields.2 -o $Tfields.s tst/fields.c\n\tfc $(TARGET)\\tst\\fields.sbk $Tfields.s\n\tfc $(TARGET)\\tst\\fields.2bk $Tfields.2\n\t$C -o $Tfields$E $Tfields.s\n\t-$Tfields$E <tst/fields.0 >$Tfields.1\n\tfc $(TARGET)\\tst\\fields.1bk $Tfields.1\n$Tfront.s:\ttst\\front.c tst\\front.0 all\n\t-$C -S -Wf-errout=$Tfront.2 -o $Tfront.s tst/front.c\n\tfc $(TARGET)\\tst\\front.sbk $Tfront.s\n\tfc $(TARGET)\\tst\\front.2bk $Tfront.2\n$Tincr.s:\ttst\\incr.c tst\\incr.0 all\n\t-$C -S -Wf-errout=$Tincr.2 -o $Tincr.s tst/incr.c\n\tfc $(TARGET)\\tst\\incr.sbk $Tincr.s\n\tfc $(TARGET)\\tst\\incr.2bk $Tincr.2\n\t$C -o $Tincr$E $Tincr.s\n\t-$Tincr$E <tst/incr.0 >$Tincr.1\n\tfc $(TARGET)\\tst\\incr.1bk $Tincr.1\n$Tinit.s:\ttst\\init.c tst\\init.0 all\n\t-$C -S -Wf-errout=$Tinit.2 -o $Tinit.s tst/init.c\n\tfc $(TARGET)\\tst\\init.sbk $Tinit.s\n\tfc $(TARGET)\\tst\\init.2bk $Tinit.2\n\t$C -o $Tinit$E $Tinit.s\n\t-$Tinit$E <tst/init.0 >$Tinit.1\n\tfc $(TARGET)\\tst\\init.1bk $Tinit.1\n$Tlimits.s:\ttst\\limits.c tst\\limits.0 all\n\t-$C -S -Wf-errout=$Tlimits.2 -o $Tlimits.s tst/limits.c\n\tfc $(TARGET)\\tst\\limits.sbk $Tlimits.s\n\tfc $(TARGET)\\tst\\limits.2bk $Tlimits.2\n\t$C -o $Tlimits$E $Tlimits.s\n\t-$Tlimits$E <tst/limits.0 >$Tlimits.1\n\tfc $(TARGET)\\tst\\limits.1bk $Tlimits.1\n$Tparanoia.s:\ttst\\paranoia.c tst\\paranoia.0 all\n\t-$C -S -Wf-errout=$Tparanoia.2 -o $Tparanoia.s tst/paranoia.c\n\tfc $(TARGET)\\tst\\paranoia.sbk $Tparanoia.s\n\tfc $(TARGET)\\tst\\paranoia.2bk $Tparanoia.2\n\t$C -o $Tparanoia$E $Tparanoia.s\n\t-$Tparanoia$E <tst/paranoia.0 >$Tparanoia.1\n\tfc $(TARGET)\\tst\\paranoia.1bk $Tparanoia.1\n$Tsort.s:\ttst\\sort.c tst\\sort.0 all\n\t-$C -S -Wf-errout=$Tsort.2 -o $Tsort.s tst/sort.c\n\tfc $(TARGET)\\tst\\sort.sbk $Tsort.s\n\tfc $(TARGET)\\tst\\sort.2bk $Tsort.2\n\t$C -o $Tsort$E $Tsort.s\n\t-$Tsort$E <tst/sort.0 >$Tsort.1\n\tfc $(TARGET)\\tst\\sort.1bk $Tsort.1\n$Tspill.s:\ttst\\spill.c tst\\spill.0 all\n\t-$C -S -Wf-errout=$Tspill.2 -o $Tspill.s tst/spill.c\n\tfc $(TARGET)\\tst\\spill.sbk $Tspill.s\n\tfc $(TARGET)\\tst\\spill.2bk $Tspill.2\n\t$C -o $Tspill$E $Tspill.s\n\t-$Tspill$E <tst/spill.0 >$Tspill.1\n\tfc $(TARGET)\\tst\\spill.1bk $Tspill.1\n$Tstdarg.s:\ttst\\stdarg.c tst\\stdarg.0 all\n\t-$C -S -Wf-errout=$Tstdarg.2 -o $Tstdarg.s tst/stdarg.c\n\tfc $(TARGET)\\tst\\stdarg.sbk $Tstdarg.s\n\tfc $(TARGET)\\tst\\stdarg.2bk $Tstdarg.2\n\t$C -o $Tstdarg$E $Tstdarg.s\n\t-$Tstdarg$E <tst/stdarg.0 >$Tstdarg.1\n\tfc $(TARGET)\\tst\\stdarg.1bk $Tstdarg.1\n$Tstruct.s:\ttst\\struct.c tst\\struct.0 all\n\t-$C -S -Wf-errout=$Tstruct.2 -o $Tstruct.s tst/struct.c\n\tfc $(TARGET)\\tst\\struct.sbk $Tstruct.s\n\tfc $(TARGET)\\tst\\struct.2bk $Tstruct.2\n\t$C -o $Tstruct$E $Tstruct.s\n\t-$Tstruct$E <tst/struct.0 >$Tstruct.1\n\tfc $(TARGET)\\tst\\struct.1bk $Tstruct.1\n$Tswitch.s:\ttst\\switch.c tst\\switch.0 all\n\t-$C -S -Wf-errout=$Tswitch.2 -o $Tswitch.s tst/switch.c\n\tfc $(TARGET)\\tst\\switch.sbk $Tswitch.s\n\tfc $(TARGET)\\tst\\switch.2bk $Tswitch.2\n\t$C -o $Tswitch$E $Tswitch.s\n\t-$Tswitch$E <tst/switch.0 >$Tswitch.1\n\tfc $(TARGET)\\tst\\switch.1bk $Tswitch.1\n$Twf1.s:\ttst\\wf1.c tst\\wf1.0 all\n\t-$C -S -Wf-errout=$Twf1.2 -o $Twf1.s tst/wf1.c\n\tfc $(TARGET)\\tst\\wf1.sbk $Twf1.s\n\tfc $(TARGET)\\tst\\wf1.2bk $Twf1.2\n\t$C -o $Twf1$E $Twf1.s\n\t-$Twf1$E <tst/wf1.0 >$Twf1.1\n\tfc $(TARGET)\\tst\\wf1.1bk $Twf1.1\n$Tyacc.s:\ttst\\yacc.c tst\\yacc.0 all\n\t-$C -S -Wf-errout=$Tyacc.2 -o $Tyacc.s tst/yacc.c\n\tfc $(TARGET)\\tst\\yacc.sbk $Tyacc.s\n\tfc $(TARGET)\\tst\\yacc.2bk $Tyacc.2\n\t$C -o $Tyacc$E $Tyacc.s\n\t-$Tyacc$E <tst/yacc.0 >$Tyacc.1\n\tfc $(TARGET)\\tst\\yacc.1bk $Tyacc.1\n\ntestclean:\n\t-del /q $T8q$E $T8q.s $T8q.2 $T8q.1\n\t-del /q $Tarray$E $Tarray.s $Tarray.2 $Tarray.1\n\t-del /q $Tcf$E $Tcf.s $Tcf.2 $Tcf.1\n\t-del /q $Tcq$E $Tcq.s $Tcq.2 $Tcq.1\n\t-del /q $Tcvt$E $Tcvt.s $Tcvt.2 $Tcvt.1\n\t-del /q $Tfields$E $Tfields.s $Tfields.2 $Tfields.1\n\t-del /q $Tfront$E $Tfront.s $Tfront.2 $Tfront.1\n\t-del /q $Tincr$E $Tincr.s $Tincr.2 $Tincr.1\n\t-del /q $Tinit$E $Tinit.s $Tinit.2 $Tinit.1\n\t-del /q $Tlimits$E $Tlimits.s $Tlimits.2 $Tlimits.1\n\t-del /q $Tparanoia$E $Tparanoia.s $Tparanoia.2 $Tparanoia.1\n\t-del /q $Tsort$E $Tsort.s $Tsort.2 $Tsort.1\n\t-del /q $Tspill$E $Tspill.s $Tspill.2 $Tspill.1\n\t-del /q $Tstdarg$E $Tstdarg.s $Tstdarg.2 $Tstdarg.1\n\t-del /q $Tstruct$E $Tstruct.s $Tstruct.2 $Tstruct.1\n\t-del /q $Tswitch$E $Tswitch.s $Tswitch.2 $Tswitch.1\n\t-del /q $Twf1$E $Twf1.s $Twf1.2 $Twf1.1\n\t-del /q $Tyacc$E $Tyacc.s $Tyacc.2 $Tyacc.1\n\nclean::\t\ttestclean\n\t\t-del /q $B*$O\n\t\t-del /q $Bdagcheck.c $Balpha.c $Bmips.c $Bx86.c $Bsparc.c $Bx86linux.c\n\t\t-del /q $Brcc1$E $Brcc1$E $B1rcc$E $B2rcc$E\n\t\t-del /q $B*.ilk\n\nclobber::\tclean\n\t\t-del /q $Brcc$E $Blburg$E $Bcpp$E $Blcc$E $Bcp$E $Bbprint$E $Bops$E $B*$A\n\t\t-del /q $B*.pdb $B*.pch\n\nRCCSRCS=src/alloc.c \\\n\tsrc/bind.c \\\n\tsrc/dag.c \\\n\tsrc/decl.c \\\n\tsrc/enode.c \\\n\tsrc/error.c \\\n\tsrc/expr.c \\\n\tsrc/event.c \\\n\tsrc/init.c \\\n\tsrc/inits.c \\\n\tsrc/input.c \\\n\tsrc/lex.c \\\n\tsrc/list.c \\\n\tsrc/main.c \\\n\tsrc/output.c \\\n\tsrc/prof.c \\\n\tsrc/profio.c \\\n\tsrc/simp.c \\\n\tsrc/stmt.c \\\n\tsrc/string.c \\\n\tsrc/sym.c \\\n\tsrc/trace.c \\\n\tsrc/tree.c \\\n\tsrc/types.c \\\n\tsrc/null.c \\\n\tsrc/symbolic.c \\\n\tsrc/bytecode.c \\\n\tsrc/gen.c \\\n\tsrc/stab.c \\\n\t$Bdagcheck.c \\\n\t$Balpha.c \\\n\t$Bmips.c \\\n\t$Bsparc.c \\\n\t$Bx86linux.c \\\n\t$Bx86.c\n\nC=$Blcc -A -d0.6 -Wo-lccdir=$(BUILDDIR) -Isrc -I$(BUILDDIR)\ntriple:\t$B2rcc$E\n\t-fc /b $B1rcc$E $B2rcc$E\n\n$B1rcc$E:\t$Brcc$E $Blcc$E $Bcpp$E\n\t\t$C -o $@ -B$B $(RCCSRCS)\n$B2rcc$E:\t$B1rcc$E\n\t\t$C -o $@ -B$B1 $(RCCSRCS)\n"
        },
        {
          "name": "mips",
          "type": "tree",
          "content": null
        },
        {
          "name": "sparc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tst",
          "type": "tree",
          "content": null
        },
        {
          "name": "x86",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}