{
  "metadata": {
    "timestamp": 1736709716503,
    "page": 100,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/ProcMon-for-Linux",
      "stars": 4079,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5107421875,
          "content": "# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Logs\n*.log\n*.db\n\n# CMake\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n\n# build artifacts\nbin/\nbuild/\nobj/\npkgbuild/\n\n# dev env\n.vscode/\n"
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 2.3544921875,
          "content": "# Build\nPlease see the history of this file for instructions for older, unsupported versions.\n\n## Prerequisites\n- SysinternalsEBPF being installed:\nlibrary `libsysinternalsEBPF.so`, header `libsysinternalsEBPF.h`, plus\nresource files in `/opt/sysinternalsEBPF`. These can be installed from\nthe\n[SysinternalsEBPF](https://github.com/Sysinternals/SysinternalsEBPF)\nproject or via the `sysinternalsebpf` DEB package from the\n_packages.microsoft.com_ repository (see [INSTALL.md](INSTALL.md)).\nIf you installed SysinternalsEBPF via make install, you may need to add /usr/local/lib to the loader library path (LD_LIBRARY_PATH).\n\n- clang/llvm v10+\n\n### Ubuntu 20.04+\n```\nsudo apt update\nsudo apt -y install build-essential gcc g++ make cmake libelf-dev llvm clang libxml2 libxml2-dev libzstd1 git libgtest-dev apt-transport-https dirmngr libjson-glib-dev libc6-dev-i386 libssl-dev\n```\n\n### Rocky 9\n```\nsudo dnf install dnf-plugins-core\nsudo dnf config-manager --set-enabled crb\nsudo dnf install epel-release\n\nsudo dnf update\nsudo yum install gcc gcc-c++ make cmake llvm clang elfutils-libelf-devel rpm-build json-glib-devel python3 libxml2-devel glibc-devel.i686 openssl-devel ncurses-devel\n```\n\n### Rocky 8\n```\nsudo dnf install dnf-plugins-core\nsudo dnf install epel-release\nsudo dnf config-manager --set-enabled powertools\n\nsudo dnf update\nsudo yum install gcc gcc-c++ make cmake llvm clang elfutils-libelf-devel rpm-build json-glib-devel python3 libxml2-devel glibc-devel.i686 openssl-devel ncurses-devel\n```\n\n### Debian 11\n```\nwget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\nrm packages-microsoft-prod.deb\nsudo apt update\nsudo apt -y install build-essential gcc g++ make cmake libelf-dev llvm clang libzstd1 git libjson-glib-dev libxml2 libxml2-dev libc6-dev-i386 libssl-dev\n```\n\n## Build\n```\ncd\ngit clone https://github.com/Sysinternals/ProcMon-for-Linux.git\ncd ProcMon-for-Linux\nmkdir build\ncd build\ncmake ..\nmake\n```\n\n## Run\n```\nsudo ./procmon\n```\n\n## Make Packages\nPackages can be generated with:\n```\nmake deb\n```\nor\n```\nmake rpm\n```\n\nThe directories build/deb and build/rpm will be populated with the required\nfiles. If dpkg-deb is available, the build/deb directory will be used to create\na deb package. Similarly if rpmbuild is available, the build/rpm directory will\nbe used to create an rpm package."
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 12.40625,
          "content": "#\n#\n#    Procmon-for-Linux\n#\n#    Copyright (c) Microsoft Corporation\n#\n#    All rights reserved.\n#\n#    MIT License\n#\n#    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"\"Software\"\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n#\n#    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n#\n#    THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\n#\n\n#################################################################################\n#\n# CMakeLists.txt\n#\n# Build script\n#\n#################################################################################\n\n#################################################################################\n# NOTE:                                                                         #\n# Please compile in a build directory rather than the source directory.         #\n# From Procmon/linux:                                                            #\n#                                                                               #\n#    $ mkdir build; cd build                                                    #\n#    $ cmake ..                                                                 #\n#    $ make                                                                     #\n#                                                                               #\n# If you later change this CMakeLists.txt file, remake the build directory.     #\n#                                                                               #\n#    $ cd ..                                                                    #\n#    $ rm -rf build                                                             #\n#    $ mkdir build; cd build                                                    #\n#    $ cmake ..                                                                 #\n#    $ make                                                                     #\n#                                                                               #\n#################################################################################\ncmake_minimum_required (VERSION 3.14)\n\n#\n# Set the project version number.\n#\nif (DEFINED ENV{VERSION})\n  project (procmon VERSION $ENV{VERSION})\nelse()\n  project (procmon VERSION 0.0.0)\nendif()\n\nset(PROJECT_VERSION_TWEAK 0)\nfile(READ \"dist/changelog\" CHANGE_LOG)\n\n#\n# make ncurses a requirement\n#\nfind_package(Curses REQUIRED)\n\nset(LD \"/usr/bin/ld\")\n\n\n#\n# enable Debug while pre-release; re-enable it post-release to add symbols to binary\n#\n#set(CMAKE_BUILD_TYPE Debug)\n#option(DEBUG_K \"Enter debug mode\" On)\n\n#\n# package name\n#\nset(PACKAGE_NAME \"procmon\")\n\n#\n# MAN page\n#\nset(PROCMON_COMPRESS_MAN \"procmon.1.gz\")\n\nadd_custom_target(procmonManPageCompress ALL\n                  DEPENDS ${PROJECT_BINARY_DIR}/${PROCMON_COMPRESS_MAN}\n                  )\n\nadd_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/${PROCMON_COMPRESS_MAN}\n                   COMMAND gzip -9n -f -c \"${CMAKE_SOURCE_DIR}/procmon.1\" > ${PROJECT_BINARY_DIR}/${PROCMON_COMPRESS_MAN}\n                   COMMENT \"Compressing Procmon man page\"\n                   DEPENDS \"${CMAKE_SOURCE_DIR}/procmon.1\"\n                  )\n\n#\n# Change log\n#\nset(PROCMON_COMPRESS_CHANGELOG \"changelog.gz\")\n\nadd_custom_target(procmonChangelogCompress ALL\n                  DEPENDS ${PROJECT_BINARY_DIR}/${PROCMON_COMPRESS_CHANGELOG}\n                  )\n\nadd_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/${PROCMON_COMPRESS_CHANGELOG}\n                   COMMAND cp \"${CMAKE_SOURCE_DIR}/dist/changelog\" ${PROJECT_BINARY_DIR} && gzip -f -c \"${CMAKE_SOURCE_DIR}/dist/changelog\" > ${PROJECT_BINARY_DIR}/${PROCMON_COMPRESS_CHANGELOG}\n                   COMMENT \"Compressing changelog\"\n                   DEPENDS \"${CMAKE_SOURCE_DIR}/dist/changelog\"\n                  )\n\n\n\n#\n# Configure files\n#\nconfigure_file (\"${PROJECT_SOURCE_DIR}/src/version.h.in\"\n                \"${PROJECT_BINARY_DIR}/src/version.h\"\n               )\n\nconfigure_file(dist/DEBIAN.in/control.in DEBIANcontrol)\nconfigure_file(dist/SPECS.in/spec.in SPECS.spec)\n\ninclude(FetchContent)\n\n#\n# Include Sqlite3 amalgamation.\n#\nadd_library(sqlite3-static STATIC\n            \"${CMAKE_SOURCE_DIR}/vendor/sqlite3/sqlite3.c\"\n           )\n\nset_target_properties(sqlite3-static\n                      PROPERTIES\n                      INTERFACE_LINK_LIBRARIES \"dl;pthread\"\n                     )\n\n#\n# Fetch Catch2 testing framework.\n#\nFetchContent_Declare(Catch2\n                     GIT_REPOSITORY https://github.com/catchorg/Catch2.git\n                     GIT_TAG        v2.7.2\n                    )\nFetchContent_MakeAvailable(Catch2)\n\n#\n# Set compiler flags.\n#\nset (CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} -g -fno-omit-frame-pointer -DELPP_THREAD_SAFE\")\nset (CMAKE_CXX_STANDARD 17)\nset (CMAKE_CXX_STANDARD_REQUIRED True)\n\n#\n# set paths\n#\nset (PROCMON_TRACER_SRC \"${CMAKE_SOURCE_DIR}/src/tracer/ebpf\")\nset (PROCMON_LOGGING_SRC \"${CMAKE_SOURCE_DIR}/src/logging\")\nset (PROCMON_COMMON_SRC \"${CMAKE_SOURCE_DIR}/src/common\")\nset (PROCMON_STORAGE_SRC \"${CMAKE_SOURCE_DIR}/src/storage\")\nset (PROCMON_CONFIG_SRC \"${CMAKE_SOURCE_DIR}/src/configuration\")\nset (PROCMON_DISPLAY_SRC \"${CMAKE_SOURCE_DIR}/src/display\")\nset (PROCMON_EBPF_SRC \"${CMAKE_SOURCE_DIR}/src/tracer/ebpf/kern\")\nset (PROCMON_SYM_SRC \"${CMAKE_SOURCE_DIR}/src/sym\")\n\nadd_executable(procmon\n               src/procmon.cpp\n               src/installer.cpp\n              \"${PROCMON_TRACER_SRC}/ebpf_tracer_engine.cpp\"\n              \"${PROCMON_TRACER_SRC}/syscall_schema.cpp\"\n              \"${PROCMON_LOGGING_SRC}/easylogging++.cc\"\n              \"${PROCMON_COMMON_SRC}/cli_utils.cpp\"\n              \"${PROCMON_COMMON_SRC}/printable.cpp\"\n              \"${PROCMON_STORAGE_SRC}/sqlite3_storage_engine.cpp\"\n              \"${PROCMON_STORAGE_SRC}/storage_proxy.cpp\"\n              \"${PROCMON_STORAGE_SRC}/mock_storage_engine.cpp\"\n              \"${PROCMON_CONFIG_SRC}/procmon_configuration.cpp\"\n              \"${PROCMON_DISPLAY_SRC}/column.cpp\"\n              \"${PROCMON_DISPLAY_SRC}/event_formatter.cpp\"\n              \"${PROCMON_DISPLAY_SRC}/headless.cpp\"\n              \"${PROCMON_DISPLAY_SRC}/kill_event_formatter.cpp\"\n              \"${PROCMON_DISPLAY_SRC}/screen.cpp\"\n              \"${PROCMON_SYM_SRC}/bcc_proc.cpp\"\n              \"${PROCMON_SYM_SRC}/bcc_syms.cc\"\n              \"${PROCMON_SYM_SRC}/bcc_elf.cpp\"\n              \"${PROCMON_SYM_SRC}/bcc_perf_map.cpp\"\n              \"${PROCMON_SYM_SRC}/bcc_zip.cpp\"\n              procmonEBPFkern4.17-5.1.o.o\n              procmonEBPFkern5.2.o.o\n              procmonEBPFkern5.3-5.5.o.o\n              procmonEBPFkern5.6-.o.o\n              procmonEBPFkern4.17-5.1_core.o.o\n              procmonEBPFkern5.2_core.o.o\n              procmonEBPFkern5.3-5.5_core.o.o\n              procmonEBPFkern5.6-_core.o.o\n             )\n\ntarget_include_directories(procmon PUBLIC\n                           /opt/sysinternalsEBPF/libbpf\n                           #\"/usr/include/bpf\"\n                           \"${PROJECT_BINARY_DIR}/src/\"\n                           \"${CMAKE_SOURCE_DIR}/vendor/sqlite3\"\n                           \"/opt/sysinternalsEBPF/ebpfKern\"\n                           \"${PROCMON_SYM_SRC}\"\n                           ${CURSES_INCLUDE_DIR}\n                          )\n\ntarget_link_libraries(procmon\n                      sysinternalsEBPF\n                      sqlite3-static\n                      ${CURSES_LIBRARIES}\n                      -lpanel\n                      elf\n                      stdc++fs\n                     )\n\nset(PACKED_BINARY_FILES\n    procmonEBPFkern4.17-5.1.o\n    procmonEBPFkern5.2.o\n    procmonEBPFkern5.3-5.5.o\n    procmonEBPFkern5.6-.o\n    procmonEBPFkern4.17-5.1_core.o\n    procmonEBPFkern5.2_core.o\n    procmonEBPFkern5.3-5.5_core.o\n    procmonEBPFkern5.6-_core.o\n   )\n\nforeach(BIN_FILE IN LISTS PACKED_BINARY_FILES)\n  add_custom_command(OUTPUT \"${BIN_FILE}.o\"\n                    COMMAND \"${LD}\" -r -b binary -o \"${BIN_FILE}.o\" \"${BIN_FILE}\"\n                    COMMENT \"Packing ${BIN_FILE} into ${BIN_FILE}.o\"\n                    DEPENDS ${PROJECT_BINARY_DIR}/${BIN_FILE}\n                    )\nendforeach(BIN_FILE)\n\n#\n# Make package(s)\n#\nadd_custom_target(deb\n    COMMAND \"${CMAKE_SOURCE_DIR}/makePackages.sh\" \"${CMAKE_SOURCE_DIR}\" \"${PROJECT_BINARY_DIR}\" \"${PACKAGE_NAME}\" \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}\" \"0\" \"deb\"\n    DEPENDS \"${CMAKE_SOURCE_DIR}/dist\" \"${PROJECT_BINARY_DIR}/procmon\"\n)\n\nadd_custom_target(rpm\n    COMMAND \"${CMAKE_SOURCE_DIR}/makePackages.sh\" \"${CMAKE_SOURCE_DIR}\" \"${PROJECT_BINARY_DIR}\" \"${PACKAGE_NAME}\" \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}\" \"0\" \"rpm\"\n    DEPENDS \"${CMAKE_SOURCE_DIR}/dist\" \"${PROJECT_BINARY_DIR}/procmon\"\n)\n\n#\n# EBPF\n#\n# This section makes the EBPF programs\n#\n\nset(EBPF_DEPENDS\n    \"${PROCMON_EBPF_SRC}/procmonGenericEntry_rawtp.c\"\n    \"${PROCMON_EBPF_SRC}/procmonGenericExit_rawtp.c\"\n   )\n\nset(EBPF_PROGS\n   procmonEBPFkern4.17-5.1\n   procmonEBPFkern5.2\n   procmonEBPFkern5.3-5.5\n   procmonEBPFkern5.6-\n   )\n\n\n#\n# set binaries and options for clang and llc\n#\nset(CLANG \"clang\")\nset(LLC \"llc\")\nset(CLANG_OPTIONS -Wno-unused-value\n                  -Wno-pointer-sign\n                  -Wno-compare-distinct-pointer-types\n                  -Wno-gnu-variable-sized-type-not-at-end\n                  -Wno-address-of-packed-member\n                  -Wno-tautological-compare\n                  -Wno-unknown-warning-option\n                  -g\n                  )\nset(CLANG_DEFINES -D __KERNEL__\n                  -D __BPF_TRACING__\n                  -D __TARGET_ARCH_x86\n                  -D __linux__\n                  )\nif (DEBUG_K)\n    message(\"Using DEBUG_K Option...\")\n    list(APPEND CLANG_DEFINES -DDEBUG_K)\nendif()\n\nset(CLANG_INCLUDES\n                   -I \"/usr/include\"\n                   -I \"/usr/include/x86_64-linux-gnu\"\n                   -I \"${CMAKE_SOURCE_DIR}\"\n                   -I \"/opt/sysinternalsEBPF/ebpfKern\"\n                   -I \"/opt/sysinternalsEBPF/libbpf\"\n                   -I \"${CMAKE_BINARY_DIR}\"\n                   )\n\nset(EBPF_CORE_PROG_SUFFIX \"_core\")\n\n#\n# function to make ebpf programs\n#\nfunction(build_ebpf ebpfsrc suffix)\n    add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/${ebpfsrc}${suffix}.o\n                       COMMAND \"${CLANG}\" -nostdinc -isystem `gcc -print-file-name=include` ${CLANG_INCLUDES} ${CLANG_DEFINES} -O2 ${CLANG_OPTIONS} -target bpf -fno-stack-protector -c \"${PROCMON_EBPF_SRC}/${ebpfsrc}.c\" -o \"${PROJECT_BINARY_DIR}/${ebpfsrc}${suffix}.o\"\n                       COMMENT \"Building EBPF object ${ebpfsrc}${suffix}.o\"\n                       DEPENDS ${PROCMON_EBPF_SRC}/${ebpfsrc}.c ${EBPF_DEPENDS}\n                       )\nendfunction()\n\n#\n# Loop for all ebpf programs\n#\nforeach(EBPF_PROG IN LISTS EBPF_PROGS)\n\n    #\n    # add custom target to build all ebpf programs with 'all'\n    #\n    add_custom_target(${EBPF_PROG} ALL\n                      DEPENDS \"${PROCMON_EBPF_SRC}/${EBPF_PROG}.c\"\n                      COMMENT \"Building EBPF program ${EBPF_PROG}.c\"\n                     )\n\n    #\n    # first build NON CORE program\n    #\n    list(REMOVE_ITEM CLANG_DEFINES -DEBPF_CO_RE)\n    build_ebpf(${EBPF_PROG} \"\")\n    set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES ${EBPF_PROG}.o)\n\n    #\n    # next build CORE program\n    #\n    list(APPEND CLANG_DEFINES -DEBPF_CO_RE)\n    build_ebpf(${EBPF_PROG} ${EBPF_CORE_PROG_SUFFIX})\n    set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES ${EBPF_PROG}${EBPF_CORE_PROG_SUFFIX}.o)\n\nendforeach(EBPF_PROG)\n\n# Define the parse_syscalls target\nadd_executable(getsyscalls getsyscalls/getsyscalls.cpp)\n\n# Add a custom target to run parse_syscalls\nadd_custom_target(run_getsyscalls\n    COMMAND ${CMAKE_SOURCE_DIR}/getsyscalls/getsyscalls.sh 6.7\n    DEPENDS getsyscalls\n    COMMENT \"Running getsyscalls\"\n)\n\n# Add dependencies to ensure parse_syscalls runs before other targets\nadd_dependencies(procmon run_getsyscalls)"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2177734375,
          "content": "# Contributing\n\nBefore we can accept a pull request from you, you'll need to sign a [Contributor License Agreement (CLA)](https://cla.microsoft.com). It is an automated process and you only need to do it once.\nTo enable us to quickly review and accept your pull requests, always create one pull request per issue and link the issue in the pull request. Never merge multiple requests in one unless they have the same root cause. Be sure to follow our Coding Guidelines and keep code changes as small as possible. Avoid pure formatting changes to code that has not been modified otherwise. Pull requests should contain tests whenever possible.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n# Branching\nThe main branch contains current development.  While CI should ensure that main always builds, it is still considered pre-release code.  Release checkpoints will be put into stable branches for maintenance.\n\nTo contribute, fork the repository and create a branch in your fork for your work.  Please keep branch names short and descriptive.  Please direct PRs into the upstream main branch.\n\n## Build and run from source\n### Environment\n* `Linux` OS (dev team is using Ubuntu 18.04)\n  * Development can be done on Windows Subsystem for Linux, but Procmon cannot be executed in that environment\n* `git`\n* `cmake` >= 3.14\n* `libsqlite3-dev` >= 3.22\n\n```bash\nsudo apt-get -y install bison build-essential flex git libedit-dev \\\n  libllvm6.0 llvm-6.0-dev libclang-6.0-dev python zlib1g-dev libelf-dev\n```\n\n##### 1. Build BCC\n```bash\ngit clone --branch tag_v0.10.0 https://github.com/iovisor/bcc.git\nmkdir bcc/build\ncd bcc/build\ncmake .. -DCMAKE_INSTALL_PREFIX=/usr\nmake\nsudo make install\n```\n\n##### 2. Build Procmon\n```bash\ngit clone https://github.com/microsoft/Procmon-for-Linux\ncd procmon-for-linux\nmkdir build\ncd build\ncmake ..\nmake\n```\n\n## Pull Requests\n* Always tag a work item or issue with a pull request.\n* Limit pull requests to as few issues as possible, preferably 1 per PR\n\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 3.3154296875,
          "content": "# Install Procmon\n\n## Ubuntu 20.04, 22.04, 24.04\n#### 1. Register Microsoft key and feed\n```sh\nwget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n```\n\n#### 2. Install Procmon\n```sh\nsudo apt-get update\nsudo apt-get install procmon\n```\n\n## Debian 11\n#### 1. Register Microsoft key and feed\n```sh\nwget -q https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n```\n\n#### 2. Install Procmon\n```sh\nsudo apt-get update\nsudo apt-get install apt-transport-https\nsudo apt-get update\nsudo apt-get install procmon\n```\n\n## Debian 12\n#### 1. Register Microsoft key and feed\n```sh\nwget -q https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n```\n\n#### 2. Install Procmon\n```sh\nsudo apt-get update\nsudo apt-get install apt-transport-https\nsudo apt-get update\nsudo apt-get install procmon\n```\n\n## Fedora 38\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/fedora/38/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo dnf install procmon\n```\n\n## Fedora 39\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/fedora/39/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo dnf install procmon\n```\n\n## Fedora 40\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/fedora/40/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo dnf install procmon\n```\n\n## RHEL 7\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo yum install procmon\n```\n\n## RHEL 8\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/rhel/8/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo yum install procmon\n```\n\n## RHEL 9\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/rhel/9/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo yum install procmon\n```\n\n## CentOS 7\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo yum install procmon\n```\n\n## openSUSE 15\n#### 1. Register Microsoft key and feed\n```sh\nsudo zypper install libicu\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\nwget -q https://packages.microsoft.com/config/opensuse/15/prod.repo\nsudo mv prod.repo /etc/zypp/repos.d/microsoft-prod.repo\nsudo chown root:root /etc/zypp/repos.d/microsoft-prod.repo\n```\n\n#### 2. Install Procmon\n```sh\nsudo zypper install procmon\n```\n\n## SLES 12\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/sles/12/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo zypper install procmon\n```\n\n## SLES 15\n#### 1. Register Microsoft key and feed\n```sh\nsudo rpm -Uvh https://packages.microsoft.com/config/sles/15/packages-microsoft-prod.rpm\n```\n\n#### 2. Install Procmon\n```sh\nsudo zypper install procmon\n```"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1142578125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 16.4140625,
          "content": "NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis software incorporates material from third parties. Microsoft makes certain\nopen source code available at https://3rdpartysource.microsoft.com, or you may\nsend a check or money order for US $5.00, including the product name, the open\nsource component name, and version number, to:\n\nSource Code Compliance Team\nMicrosoft Corporation\nOne Microsoft Way\nRedmond, WA 98052\nUSA\n\nNotwithstanding any other terms, you may reverse engineer this software to the\nextent required to debug changes to any libraries licensed under the GNU Lesser\nGeneral Public License.\n\nLicense Notice for iovisor/bcc\n------------------------------\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\nSome BPF helpers in the kernel are licensed under GPL - https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md.\n\n\nLicense Notice for SQLite\n-------------------------\nSQLite Is Public Domain\n\nSQLite is in the\nPublic Domain\nAll of the code and documentation in SQLite has been dedicated to the public domain by the authors. All code authors, and representatives of the companies they work for, have signed affidavits dedicating their contributions to the public domain and originals of those signed affidavits are stored in a firesafe at the main offices of Hwaci. Anyone is free to copy, modify, publish, use, compile, sell, or distribute the original SQLite code, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.\n\nThe previous paragraph applies to the deliverable code and documentation in SQLite - those parts of the SQLite library that you actually bundle and ship with a larger application. Some scripts used as part of the build process (for example the \"configure\" scripts generated by autoconf) might fall under other open-source licenses. Nothing from these build scripts ever reaches the final deliverable SQLite library, however, and so the licenses associated with those scripts should not be a factor in assessing your rights to copy and use the SQLite library.\n\nAll of the deliverable code in SQLite has been written from scratch. No code has been taken from other projects or from the open internet. Every line of code can be traced back to its original author, and all of those authors have public domain dedications on file. So the SQLite code base is clean and is uncontaminated with licensed code from other projects.\n\nOpen-Source, not Open-Contribution\nSQLite is open-source, meaning that you can make as many copies of it as you want and do whatever you want with those copies, without limitation. But SQLite is not open-contribution. In order to keep SQLite in the public domain and ensure that the code does not become contaminated with proprietary or licensed content, the project does not accept patches from unknown persons.\n\nAll of the code in SQLite is original, having been written specifically for use by SQLite. No code has been copied from unknown sources on the internet.\n\nWarranty of Title\nSQLite is in the public domain and does not require a license. Even so, some organizations want legal proof of their right to use SQLite. Circumstances where this occurs include the following:\n\nYour company desires indemnity against claims of copyright infringement.\nYou are using SQLite in a jurisdiction that does not recognize the public domain.\nYou are using SQLite in a jurisdiction that does not recognize the right of an author to dedicate their work to the public domain.\nYou want to hold a tangible legal document as evidence that you have the legal right to use and distribute SQLite.\nYour legal department tells you that you have to purchase a license.\nIf any of the above circumstances apply to you, Hwaci, the company that employs all the developers of SQLite, will sell you a Warranty of Title for SQLite. A Warranty of Title is a legal document that asserts that the claimed authors of SQLite are the true authors, and that the authors have the legal right to dedicate the SQLite to the public domain, and that Hwaci will vigorously defend against challenges to those claims. All proceeds from the sale of SQLite Warranties of Title are used to fund continuing improvement and support of SQLite.\n\nLicense Notice for Easylogging++\n--------------------------------\nThe MIT License (MIT)\n\nCopyright (c) 2012-2018 Amrayn Web Services\nCopyright (c) 2012-2018 @abumusamq\n\nhttps://github.com/amrayn/\nhttps://amrayn.com\nhttps://muflihun.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.59375,
          "content": "# Process Monitor for Linux (Preview) [![Build Status](https://dev.azure.com/sysinternals/Tools/_apis/build/status/Sysinternals.ProcMon-for-Linux?repoName=Sysinternals%2FProcMon-for-Linux&branchName=main)](https://dev.azure.com/sysinternals/Tools/_build/latest?definitionId=342&repoName=Sysinternals%2FProcMon-for-Linux&branchName=main)\nProcess Monitor (Procmon) is a Linux reimagining of the classic Procmon tool from the Sysinternals suite of tools for Windows.  Procmon provides a convenient and efficient way for Linux developers to trace the syscall activity on the system.\n\n![Procmon in use](procmon.gif \"Procmon in use\")\n\n# Installation & Usage\n\n## Requirements\n\n* OS: Ubuntu 18.04 lts\n* `cmake` >= 3.14 (build-time only)\n* `libsqlite3-dev` >= 3.22 (build-time only)\n\n## Install Procmon\n\nPlease see installation instructions [here](INSTALL.md).\n\n## Build Procmon\nPlease see build instructions [here](BUILD.md).\n\n## Usage\n```txt\nUsage: procmon [OPTIONS]\n   OPTIONS\n      -h/--help                Prints this help screen\n      -p/--pids                Comma separated list of process IDs to monitor\n      -e/--events              Comma separated list of system calls to monitor\n      -c/--collect [FILEPATH]  Option to start Procmon in a headless mode\n      -f/--file FILEPATH       Open a Procmon trace file\n      -l/--log FILEPATH        Log debug traces to file\n```\n\n### Examples\n\nThe following traces all processes and syscalls on the system:\n\n```sh\nsudo procmon\n```\n\nThe following traces processes with process id 10 and 20:\n\n```sh\nsudo procmon -p 10,20\n```\n\nThe following traces process 20 only syscalls read, write and open at:\n\n```sh\nsudo procmon -p 20 -e read,write,openat\n```\n\nThe following traces process 35 and opens Procmon in headless mode to output all captured events to file `procmon.db`:\n\n```sh\nsudo procmon -p 35 -c procmon.db\n```\n\nThe following opens a Procmon `tracefile`, `procmon.db`, within the Procmon TUI:\n\n```sh\nsudo procmon -f procmon.db\n```\n\n# Feedback\n\n* Ask a question on Stack Overflow (tag with ProcmonForLinux)\n* Request a new feature on GitHub\n* Vote for popular feature requests\n* File a bug in GitHub Issues\n\n# Contributing\n\nIf you are interested in fixing issues and contributing directly to the code base, please see the [document How to Contribute](CONTRIBUTING.md), which covers the following:\n\n* How to build and run from the source\n* The development workflow, including debugging and running tests\n* Coding Guidelines\n* Submitting pull requests\n\nPlease see also our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n# License\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the MIT License.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.71484375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->"
        },
        {
          "name": "azure-pipelines.yaml",
          "type": "blob",
          "size": 1.5947265625,
          "content": "# Azure build pipelines for Procmon-for-Linux\nresources:\n  repositories:\n  - repository: ProcMon\n    type: github\n    endpoint: sysinternals\n    name: microsoft/ProcMon-for-Linux\n\n  - repository: SysinternalsEBPF\n    type: github\n    endpoint: sysinternals\n    name: microsoft/SysinternalsEBPF\n\ntrigger:\n    branches:\n      include:\n        - release/*\n        - main\n      exclude:\n        - dev/*\n        - test/*\n\npr:\n- main\n\nstages:\n - stage: \"Build\"\n   jobs:\n    - job: \"Build_Procmon\"\n      pool:\n        vmImage: \"ubuntu-20.04\"\n      timeoutInMinutes: 240\n      steps:\n      - checkout: self\n      - checkout: SysinternalsEBPF\n      - script: |\n          clang --version\n          clang++ --version\n          gcc --version\n        displayName: 'List compiler versions'\n\n      - script: |\n          export LLVM_LIBRARY_DIRS=/usr/lib/llvm-6.0/lib\n          ls\n          chmod +x ProcMon-for-Linux/.devcontainer/install-ubuntu-dependencies.sh\n          ProcMon-for-Linux/.devcontainer/install-ubuntu-dependencies.sh\n        displayName: \"Install pre-reqs for Ubuntu\"\n\n      - template: templates/build.yaml@SysinternalsEBPF\n        parameters:\n          srcPath: 'SysinternalsEBPF'\n          runStaticAnalysis: false\n          builddir: 'sysinternalsEBPF_build'\n\n      - script: |\n          cd $(Build.SourcesDirectory)/SysinternalsEBPF/sysinternalsEBPF_build\n          sudo make install\n          sudo ldconfig\n        displayName: \"Install SysinternalsEBPF\"\n\n      - template: templates/build.yaml\n        parameters:\n          srcPath: 'ProcMon-for-Linux'\n          runStaticAnalysis: true\n          builddir: 'procmon_build'\n"
        },
        {
          "name": "cgmanifest.json",
          "type": "blob",
          "size": 1.04296875,
          "content": "{\n    \"Registrations\":[\n        {\n            \"Component\": {\n                \"Type\": \"git\",\n                \"git\": {\n                    \"RepositoryUrl\": \"https://github.com/iovisor/bcc.git\",\n                    \"CommitHash\": \"ebf0e4b2fd7190e747638f68a4421a8b653bc0a2\"\n                }\n            },\n            \"DevelopmentDependency\" : true\n        },\n\n        {\n            \"Component\": {\n                \"Type\": \"git\",\n                \"git\": {\n                    \"RepositoryUrl\": \"https://github.com/amrayn/easyloggingpp\",\n                    \"CommitHash\": \"163a8e538e4f9878f86d1b4c8887f5135d119d30\"\n                }\n            },\n            \"DevelopmentDependency\" : true\n        },\n\n        {\n            \"Component\": {\n                \"Type\": \"other\",\n                \"Other\": {\n                    \"Name\": \"sqlite\",\n                    \"Version\": \"3.27.2\",\n                    \"DownloadUrl\": \"https://www.sqlite.org/2019/sqlite-autoconf-3270200.tar.gz\"\n                }\n            },\n            \"DevelopmentDependency\" : true\n        }        \n    ]\n}"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "getsyscalls",
          "type": "tree",
          "content": null
        },
        {
          "name": "makePackages.sh",
          "type": "blob",
          "size": 4.048828125,
          "content": "#!/bin/sh\n#\n#    Procmon for Linux\n#\n#    Copyright (c) Microsoft Corporation\n#\n#    All rights reserved.\n#\n#    MIT License\n#\n#    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"\"Software\"\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n#\n#    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n#\n#    THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\n\n#################################################################################\n#\n# makePackages.sh\n#\n# Builds the directory trees for DEB and RPM packages and, if suitable tools are\n# available, builds the actual packages too.\n#\n#################################################################################\n\nif [ \"$5\" = \"\" ]; then\n    echo \"Usage: $0 <SourceDir> <BinaryDir> <package name> <package version> <package release> <PackageType>\"\n    exit 1\nfi\n\n# copy cmake vars\nCMAKE_SOURCE_DIR=$1\nPROJECT_BINARY_DIR=$2\nPACKAGE_NAME=$3\nPACKAGE_VER=$4\nPACKAGE_REL=$5\nPACKAGE_TYPE=$6\n\nDEB_PACKAGE_NAME=\"${PACKAGE_NAME}_${PACKAGE_VER}_amd64\"\nRPM_PACKAGE_NAME=\"${PACKAGE_NAME}-${PACKAGE_VER}-${PACKAGE_REL}\"\n\nif [ \"$PACKAGE_TYPE\" = \"deb\" ]; then\n    DPKGDEB=`which dpkg-deb`\n\n    if [ -d \"${PROJECT_BINARY_DIR}/deb\" ]; then\n        rm -rf \"${PROJECT_BINARY_DIR}/deb\"\n    fi\n\n    # copy deb files\n    mkdir -p \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}\"\n    #cp -a \"${CMAKE_SOURCE_DIR}/dist/DEBIAN\" \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/\"\n    mkdir -p \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/DEBIAN\"\n    cp \"${PROJECT_BINARY_DIR}/DEBIANcontrol\" \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/DEBIAN/control\"\n    mkdir -p \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/usr/share/doc/procmon\"\n    cp \"${PROJECT_BINARY_DIR}/changelog.gz\" \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/usr/share/doc/procmon\"\n    mkdir -p \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/usr/share/man/man1\"\n    cp -a \"${PROJECT_BINARY_DIR}/procmon.1.gz\" \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/usr/share/man/man1\"\n    mkdir -p \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/usr/bin\"\n    cp \"${PROJECT_BINARY_DIR}/procmon\" \"${PROJECT_BINARY_DIR}/deb/${DEB_PACKAGE_NAME}/usr/bin/\"\n\n    # make the deb\n    if [ \"$DPKGDEB\" != \"\" ]; then\n        cd \"${PROJECT_BINARY_DIR}/deb\"\n        \"$DPKGDEB\" -Zxz --build --root-owner-group \"${DEB_PACKAGE_NAME}\"\n        RET=$?\n    else\n        echo \"No dpkg-deb found\"\n        RET=1\n    fi\n\n    exit 0\nfi\n\nif [ \"$PACKAGE_TYPE\" = \"rpm\" ]; then\n    RPMBUILD=`which rpmbuild`\n\n    if [ -d \"${PROJECT_BINARY_DIR}/rpm\" ]; then\n        rm -rf \"${PROJECT_BINARY_DIR}/rpm\"\n    fi\n\n    # copy rpm files\n    mkdir -p \"${PROJECT_BINARY_DIR}/rpm/${RPM_PACKAGE_NAME}/SPECS\"\n    cp -a \"${PROJECT_BINARY_DIR}/SPECS.spec\" \"${PROJECT_BINARY_DIR}/rpm/${RPM_PACKAGE_NAME}/SPECS/${RPM_PACKAGE_NAME}.spec\"\n    mkdir \"${PROJECT_BINARY_DIR}/rpm/${RPM_PACKAGE_NAME}/BUILD/\"\n    cp \"${PROJECT_BINARY_DIR}/procmon.1.gz\" \"${PROJECT_BINARY_DIR}/changelog\" \"${PROJECT_BINARY_DIR}/procmon\" \"${PROJECT_BINARY_DIR}/rpm/${RPM_PACKAGE_NAME}/BUILD/\"\n\n    # make the rpm\n    if [ \"$RPMBUILD\" != \"\" ]; then\n        cd \"${PROJECT_BINARY_DIR}/rpm/${RPM_PACKAGE_NAME}\"\n        \"$RPMBUILD\" --define \"_topdir `pwd`\" -v -bb \"SPECS/${RPM_PACKAGE_NAME}.spec\"\n        RET=$?\n        cp RPMS/x86_64/*.rpm ..\n    else\n        echo \"No rpmbuild found\"\n        RET=1\n    fi\nfi\n\nexit $RET\n"
        },
        {
          "name": "procmon.1",
          "type": "blob",
          "size": 0.77734375,
          "content": ".\\\" Manpage for procmon.\n.TH man 8 \"07/23/2024\" \"2.0\" \"procmon manpage\"\n.SH NAME\nprocmon \\- syscall tracing diagnostics tool\n.SH SYNOPSIS\nprocmon [OPTIONS...]\n      -h                       Prints this help screen\n      -p/--pids                Comma separated list of process ids to monitor\n      -e/--events              Comma separated list of system calls to monitor\n      -c/--collect [FILEPATH]  Option to start Procmon in a headless mode\n      -f/--file FILEPATH       Open a Procmon trace file\n      -l/--log FILEPATH        Log debug traces to file\n.SH DESCRIPTION\nProcmon is a Linux reimagining of the classic Procmon tool from the Sysinternals suite of tools for Windows. Procmon provides a convenient and efficient way for Linux developers to trace the syscall activity on the system."
        },
        {
          "name": "procmon.gif",
          "type": "blob",
          "size": 210.43359375,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}