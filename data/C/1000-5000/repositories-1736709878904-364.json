{
  "metadata": {
    "timestamp": 1736709878904,
    "page": 364,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vifm/vifm",
      "stars": 2781,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.560546875,
          "content": "# local automatically generated files\n/data/vim/doc/app/tags\n/data/vim/doc/plugin/tags\n/data/vifm-help.txt\n/src/compile_info.c\n/src/runtests\n/src/test-suite.log\n\n# created during build/test process\n/tests/bin/\n/tests/sandbox/\n\n# autotools generated files\n/autom4te.cache/\n/build-aux/config.h\n/build-aux/config.h.in~\n/build-aux/stamp-h1\n/src/Makefile\n/src/runtests.log\n/src/runtests.trs\n/Makefile\n/config.log\n/config.status\n.deps/\n.dirstamp\n\n# *nix executables\n/src/vifm\n\n# compiler output\n*.o\n*.d\n*.gch\n\n# code coverage\n*.gcda\n*.gcno\n\n# windows specific\nsrc/*.exe\nsrc/*.res\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 5.5224609375,
          "content": "All suggestions or complaints should be sent to xaizek@posteo.net.\n\nCurrent author is xaizek <xaizek@posteo.net> (since 2011).\nOriginal author is Ken Steen <ksteen@users.sourceforge.net> (2001 - 2011).\n\nThe pauseme script (removed in 0.6.3) was from the tkdesk program.\n\nSome of the code is from emelfm by Michael Clark.\n\nThe screen-open-region-with-program and screen-ren-program-in-region were\nwritten by Miciah Dashiel Butler Masters.\n\nThe file sorting function is from the git program by Tudor Hulubei\nand Andrei Pitis.\n\nA patch for filetypes detection was written by Stefan Walter.\n\nFreeBSD and NetBSD  ports by Stefan Walter.\n\nDebian package by Edelhard Becker.\n\nTerry Brown wrote part of the keybinding code.\n\nGentoo package by Peter Johanson.\n\nRalf Arens added the configurable color code and rewrote the bookmarks\ncode.\n\nDmitry Suzdalev fixed the :!<Enter> bug.\n\nMacOSX Fink package by Damien Ferrand\n\nKarsten Schoelzel - submitted a patch to fix the handling of files with\na % in the name.\n\nAli Gholami Rudi - submitted patch fixing buffer overflow in\ncolorschemes.\n\nOndrej Martinak - Patch to fix handling of directories with spaces.\n                  Patch for file sizes larger than 4 Gb and to correct typos.\n\npld-linux group patch for malloc in colorschemes\n\nWoody Kiang - command completion and wide character support in\n:commands.\n\nMinozake - start vifm --help fix\n\nDan Price - wrote the human friendly file size and the ascending and\ndescending sort.\n\nfrom fork of wsdookadr (Petrea Stefan Corneliu):\n- %b\n- unmount all FUSE mounts on exit\n- functional keys in user mappings\n- idea of temporary blocking inotify events from very active files\n\nseatest is written by Keith Nicholas\n\nPatches for Vim plugin and handling of errors from external applications\nwithout temporary files by Colin Cartade.\n\nPatch that fixes using of invalid (or at least strange) item names in the\nstat structure by Kaspars Bankovskis.\n\nChris Yuen provided a patch to fix compilation on Mac OS X.\n\nChris Skalenda wrote a patch to allow setting the trash directory location.\n\nMiles (pkordy) provided a patch to fix opening of tagged (selected) symbolic\nlinks to a directory.\n\nGentoo ebuild by Oleg Gordienko (gordio).\n\nSeth VanHeulen (a.k.a. svanheulen) added integration with tmux.\n\nMadMaverick9 provided patches for various fixes.\n\nlyuts fixed trash emptying in csh-like shells.\n\nPatches for Vim plugin by Jonathan Da Silva.\n\nMore human-friendly (xterm-like) names for 256 colors by Michael\nVetter (a.k.a. jubalh).\n\nSome build system fixes/updates/best practices by Hendrik Jaeger (a.k.a.\nhenk).\n\nShell completions and patches for Vim plugin, vifm-screen-split, documentation\nand code by filterfalse.\n\nChristian Fillion (a.k.a. cfillion) fixed crash on navigation to end of line\nin command-line mode.\n\n%FOREGROUND FUSE mount flag by Johannes (a.k.a. johannesmeng).\n\nBrian Callahan (a.k.a. ibara) fixed build on OpenBSD.\n\nCosmin Popescu (a.k.a. cosminadrianpopescu) added \"*\" to 'slowfs', match numbers\nto search messages, :shell!, extension sorting fix, fileext sorting key, dynamic\nview column alignment.\n\nMichel Normand fixed compilation for PowerPC where PAGE_SIZE isn't defined.\n\nDennis Hamester fixed interaction with emacsclient due to reopening terminal as\n/dev/tty.\n\nSvyatoslav Mishyn (a.k.a. juef) aligned options in conflict resolution dialog.\n\noo- added shortcuts to dialogs.\n\nDmitry Frank (a.k.a. dimonomid) provided multiple patches.\n\nJohn Shea (a.k.a. coachshea) provided fix for the plugin related to neovim.\n\nDaniel Mueller fixed CWD of the process not matching current view after vifm\npicked up change in file system and on startup.\n\nMa_Sys.ma implemented 'syncregs' option which defines group of instances that\nshare registers.\n\nKonst Mayer (a.k.a. cdlscpmv) dropped leading space from value of 'timefmt'.\n\nrbong authored a number of changes that extend functionality of the Vim plugin\noriginally as a separate plugin for neovim, later merged into the main one.\n\nzsugabubus provided multiple patches.\n\nVon Welch submitted vifm-media-osx script.\n\nRichard Benson provided icon for the project (since October 2013).\n\nRoman Plášil (a.k.a. Quiark) authored script for converting Vim's color scheme\ninto a Vifm's one.\n\nBas Bossink (a.k.a. basbossink) fixed issues with non-tiny 'shellcmdflag' on\nWindows.\n\nStephen Horst (a.k.a. sjhorst) fixed adding files with spaces in their names\nas e-mail attachments in the plugin.\n\nHans Bieshaar added HardLink highlight group.\n\nAlborz Jafari added rate and progress bar to progress dialog.\n\npkgs/AppImage/* provided by michaellee8.\n\nM Kelly fixed inability to map escape sequences due to extended keys in\nterminfo database and added notation for some shifted keys.\n\nPhil Runninger helped to provide target information for drives in :volumes\nmenu.\n\nqsmodo contributed multiple patches.\n\nHescalalu provided icon for the project (since July 2021).\n\nCompletion for fish shell by Hoang Nguyen (a.k.a. FollieHiyuki).\n\nAlexandr Keyp (a.k.a. IAmKapuze) contributed improvements for :compare.\n\n高浩亮 (a.k.a. haolian9) enabled mouse handling, fixed displaying and\ncompletion of foreign :commands in `:[del]command` and allowed mapping to\nCtrl-Z.\n\nZhipeng Xue fixed a couple of potential NULL dereferences.\n\nRostislav Tolushkin (a.k.a. nullptr-deref) implemented :regedit command.\n\nMarcin Kurczewski (a.k.a. rr-) fixed limited size of IPC buffer.\n\nvoh9eepah fixed available file-system space size on FreeBSD.\n\nVadim Curcă added middle ellipsis to view columns and fixed search match\nhighlighting when the match is cut off due lack of space.\n\nIvan Shapovalov fixed running external commands which start with a dash.\n"
        },
        {
          "name": "BUGS",
          "type": "blob",
          "size": 1.3359375,
          "content": "* Better to check for existence of $HOME.\n* Duplicate detection lags in custom views on :substitute.\n* filextype is useless on OS X.\n* :clone! is useless.\n* Hard copies of files are counted multiple times for ga/gA.\n* Paths beyond MAX_PATH limit are not processed with 'syscalls'.\n* :change->Name renames only one file even when several are selected.\n* There is no sshfs like FUSE for servers that provide only scp.\n* inotify fails to recognize change of replaced directory.\n* Trailing \"\\ \" in :map commands prevents cutting of the space.\n* noremap shows wrong keys?\n* \"*\" at the beginning of a glob doesn't match empty string.\n* :filetype checks don't expand ~ and environment variables.\n* 'chaselinks' resolves mount points on Windows, should it?\n* :apropos command doesn't escape its arguments.\n* gid/uid are displayed as -1 on some file systems.\n* Command-line doesn't work well with file names in encoding that doesn't match\n  locale when they fail to convert to wide encoding.\n* On systems with BSD-like chmod, setting executable bit for directories only\n  doesn't work.\n* Access time of directories might not be preserved on OpenBSD on copying when\n  'syscalls' is on, this is some subtle issue, because the code looks fine.\n* Commands starting with a dash don't work in fish shell and maybe some other\n  non-POSIX shells which have `-c` option accept a value.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.3party",
          "type": "blob",
          "size": 13.88671875,
          "content": "Sections bellow separated with `======` list files affected by some copyright\nwith that copyright following.\n\n\n================================================================================\nsrc/compat/getopt_int.h\n--------------------------------------------------------------------------------\nsrc/compat/getopt.h\n--------------------------------------------------------------------------------\nsrc/compat/getopt.c\n--------------------------------------------------------------------------------\nsrc/compat/getopt1.c\n--------------------------------------------------------------------------------\n\nCopyright (C) 1987-2015 Free Software Foundation, Inc.\nThis file is part of the GNU C Library.\n\nThe GNU C Library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThe GNU C Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with the GNU C Library; if not, see\n<http://www.gnu.org/licenses/>.\n\n\n================================================================================\nsrc/compat/mntent.c\n--------------------------------------------------------------------------------\n\nCopyright (c) 1980, 1989, 1993, 1994\n     The Regents of the University of California.  All rights reserved.\nCopyright (c) 2001\n     David Rufino <daverufino@btinternet.com>\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n     This product includes software developed by the University of\n     California, Berkeley and its contributors.\n4. Neither the name of the University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n\n================================================================================\nsrc/compat/mntent.h\n--------------------------------------------------------------------------------\n\nCopyright (c) 2001 David Rufino <daverufino@btinternet.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n\n================================================================================\nsrc/compat/reallocarray.c\n--------------------------------------------------------------------------------\n\nCopyright (c) 2008 Otto Moerbeek <otto@drijf.net>\n\nPermission to use, copy, modify, and distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\n================================================================================\nsrc/compat/wcwidth.c\n--------------------------------------------------------------------------------\nsrc/utils/utils.c (unichar_bisearch() function)\n--------------------------------------------------------------------------------\n\nCopyright (C) Markus Kuhn -- 2007-05-26 (Unicode 5.0)\n\nPermission to use, copy, modify, and distribute this software\nfor any purpose and without fee is hereby granted. The author\ndisclaims all warranties with regard to this software.\n\nLatest version: http://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c\n\n\n================================================================================\nsrc/lua/lua/*\n--------------------------------------------------------------------------------\n\nCopyright (C) 1994-2020 Lua.org, PUC-Rio.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n================================================================================\nsrc/utils/xxhash.c\n--------------------------------------------------------------------------------\nsrc/utils/xxhash.h\n--------------------------------------------------------------------------------\n\nxxHash - Extremely Fast Hash algorithm\nCopyright (C) 2012-2020 Yann Collet\n\nBSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\n     copyright notice, this list of conditions and the following disclaimer\n     in the documentation and/or other materials provided with the\n     distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nYou can contact the author at:\n  - xxHash homepage: https://www.xxhash.com\n  - xxHash source repository: https://github.com/Cyan4973/xxHash\n\n================================================================================\nsrc/utils/parson.c\n--------------------------------------------------------------------------------\nsrc/utils/parson.h\n--------------------------------------------------------------------------------\n\nSPDX-License-Identifier: MIT\n\nParson 1.0.2 ( http://kgabis.github.com/parson/ )\nCopyright (c) 2012 - 2019 Krzysztof Gabis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n================================================================================\nsrc/helpztags\n--------------------------------------------------------------------------------\n\nAuthor: Jakub Turski <yacoob@chruptak.plukwa.net>\n        Artur R. Czechowski <arturcz@hell.pl>\n\n================================================================================\ndata/plugins/zsh-complete/capture.zsh\n--------------------------------------------------------------------------------\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Vincent Breitmoser\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n================================================================================\nsrc/utils/utf8proc.c\nsrc/utils/utf8proc.h\nsrc/utils/utf8proc_data.inc\n--------------------------------------------------------------------------------\n\n/*\n *  Copyright (c) 2014-2021 Steven G. Johnson, Jiahao Chen, Peter Colberg,\n *                          Tony Kelman, Scott P. Jones, and other contributors.\n *  Copyright (c) 2009 Public Software Group e. V., Berlin, Germany\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a\n *  copy of this software and associated documentation files (the \"Software\"),\n *  to deal in the Software without restriction, including without limitation\n *  the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *  and/or sell copies of the Software, and to permit persons to whom the\n *  Software is furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *  DEALINGS IN THE SOFTWARE.\n */\n\n/*\n *  This library contains derived data from a modified version of the\n *  Unicode data files.\n *\n *  The original data files are available at\n *  https://www.unicode.org/Public/UNIDATA/\n */\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 235.525390625,
          "content": "0.13 to current\n\n\tChanged --with-gtk flag to --with-glib (old name is still available).  GTK\n\twas pulled in by mistake, only GIO/GLib was ever used...\n\n\tChanged %N macro to not be mutually exclusive with most of other\n\tmacros (the limitation wasn't documented and didn't make much sense).\n\tThanks to James Dietrich.\n\n\tChanged handling of Ctrl-Z to not suspend the application if a\n\tcorresponding user mapping exists.  Patch 高浩亮 (a.k.a. haolian9).\n\n\tChanged behaviour on failure to evaluate an expression of :if or :elseif.\n\tPreviously this resulted in trying to execute any commands until and\n\tincluding :endif (all branches taken).  Now everything up to :endif will\n\tnot be executed (no branches taken).  Thanks to Ed Pavlov.\n\n\tChanged default value of 'findprg' to avoid the use of syntax specific to\n\tGNU find.  The only difference is that now one can see \"Permission denied\"\n\terrors which weren't displayed before.  Sample vifmrc files contain\n\tdetection of GNU find on startup.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tChanged initialization to not create a copy of rendered man page at\n\t$VIFM/vifm-help.txt, :help now opens the original file.  Thanks to\n\tintelfx.\n\n\tChanged filetype() to accept path in its first parameter.  This means that\n\tpassing it something like \"15abc\" will no longer be interpreted as 15.\n\tThanks to MikeLemon.\n\n\tAdded command-line history to menu mode.\n\n\tAdded \"mchistory\" value to 'vifminfo' and 'sessionoptions' option.  It\n\tmanages storing of command-line history of menus.\n\n\tAdded \":history mcmd\" menu for displaying command-line history of menus.\n\n\tAdded :col[der] and :cnew[er] commands to menu mode to traverse history of\n\tnavigation menus.\n\n\tAdded :chi[story] command that opens a menu of saved menus.\n\n\tAdded :chi[story] command to menu mode.\n\n\tAdded 'hloptions' option to configure which view colums get affected by\n\tfile highlighting.  Thanks to qsmodo.\n\n\tAdded \"column:{name}\" form of argument to :highlight command to specify\n\tstyle of a separate column.  Thanks to Anton Gepting.\n\n\tAdded \"millersep:\" value to 'fillchars' that allows customizing the border\n\tbetween miller columns.  Thanks to Shuo (a.k.a. shenqshuoh).\n\n\tAdded :gr[ep] command to menu mode.  Allows (re)running grep command\n\ton the same set of files without leaving the mode.\n\n\tAdded :fin[d] command to menu mode.  Allows (re)running find command\n\ton the same set of files without leaving the mode.\n\n\tAdded middle view column alignment (specified by \"^\" in 'viewcolumns'\n\toption).  Part of the text is replaced with ellipsis to keep both start\n\tand end visible.  Patch by Vadim Curcă.\n\n\tAdded escape() builtin function to escape specific characters in strings.\n\tThanks to The Cyberduck.\n\n\tAdded :wingo command to navigate to a view by substring matching against\n\tits title or path.  Thanks to iSeeU816 and Alexandre Viau.\n\n\tAdded :cal[l] command to run a function discarding its return value.\n\tThanks to anyone asking about simply running a function.\n\n\tAdded :o[pen] command to open current file, selection or range as if Enter\n\twas pressed.  Thanks to Safal Piya (a.k.a. mrsafalpiya).\n\n\tAdded 'wildinc' option that defines which :commands should be completed as\n\tthey are edited.\n\n\tAdded WildBox highlight group.  It can be used to set background of\n\tcompletion window.\n\n\tAdded a statusbar message and a dialog to warn about an upcoming fix for\n\tstrings in conditional expressions (e.g., `if $VAR` checks for `$VAR`\n\tbeing non empty instead of converting it to an integer).  Thanks to\n\tjustpretending2.\n\n\tAdded handling of Enter/Escape keys to prompts and error dialogs.  Thanks\n\tto laur89, Alexandre Viau and multiple other users who asked about this.\n\n\tAdded global variables (with \"g:\" prefix) to avoid using environment\n\tvariables in their place as a workaround.\n\n\tAdded inode number to File Info dialog.\n\n\tAdded selected() builtin function which returns number of currently\n\tselected files.\n\n\tAdded [S and ]S shortcuts as wrapping versions of [s and ]s.  Thanks to\n\taksr.\n\n\tAdded v:version builtin variable that exposes version as an integer which\n\tcan be meaningfully compared.  Thanks to an anonymous at Vifm Q2A site.\n\n\tAdded a way to insert \"}\" inside of %{expr} macro of 'statusline'.  Thanks\n\tto vuenn.\n\n\tDon't draw right padding on a truncated rightmost column of a transposed\n\tls-like view.\n\n\tMade register's content being listed in normal rather then reversed order\n\tin :registers/:display menu.\n\n\tDon't attempt clearing graphics when menu-like mode is active.  The\n\tgraphics should have been hidden on entering the mode.\n\n\tAllowed wild menu popup to take up up to 40% of the screen.\n\n\tMade documentation of 'vifminfo' more readable.\n\n\tRewrote \"Menus and dialogs\" part of the documentation.\n\n\tIncrease line length limit used during formatting output of :highlight\n\tcommand to allow longer strings.\n\n\tDisplay number of color pairs in use in :version/:vifm menu.\n\n\tDon't show a message at the end of 'incsearch' if the cursor was moved not\n\tby the search.  Patch by filterfalse.\n\n\tClarified documentation on column literals and escaping.  Thanks to\n\tchelovechishko.\n\n\tAllow and skip !/!! prefix of custom external :commands for more\n\tmacros (%S, %q, %i, %m, %M, %s, %v, %u, %U, %Iu, %IU).\n\n\tSlightly expanded documentation on %N macro.  Thanks to James Dietrich.\n\n\tMade Tab and Shift-Tab in interactive search prompts (including when\n\tnavigating) move cursor to next/previous search match.  Thanks to\n\tDavid Sierra DiazGranados (a.k.a. davidsierradz).\n\n\tSomewhat improved documentation on functional keys.\n\n\tUpdated autotools scripts to their newer versions.  Thanks to phanium\n\t(a.k.a. phanen).\n\n\tPerform sorting of completion items after doing Unicode normalization.\n\n\tPerform sorting of file names after doing Unicode normalization.  Thanks\n\tto hacksenwerk.\n\n\tMade :compare treat non-regular files (pipes, sockets, etc.) as empty.\n\n\tSlightly improved performance of comparing files by content.\n\n\tConfigure 'vifminfo' in sample vifmrcs to store most of the things in\n\tvifminfo by default (add missing histories and tabs).  Thanks to Christoph\n\tSchmidpeter.\n\n\tAdjusted heuristic for determining previewer type to allow use of %px and\n\t%py with %pd without any implications.  Thanks to iambumblehead.\n\n\tDocument how the use of different preview macros affects classification of\n\ta previewer.  Thanks to iambumblehead.\n\n\tWhen processing multiple files in background, show current position in the\n\tlist on the job bar.\n\n\tShorten home directory in paths shown on the job bar.\n\n\tCommented out one of MC-like shortcuts in sample vifmrc files, Ctrl-U, to\n\tavoid confusing Vim users with default configuration.  Thanks to midrare.\n\n\tMade vifm-media not offer partitioned drives as they aren't mountable as a\n\twhole.\n\n\tExtended vifm-media script to support MTP devices if simple-mtpfs tool is\n\tinstalled.  Thanks to FlyCat (a.k.a. yanwh0311) and Alexandre Viau.\n\n\tAllowed moving files via :rename (requires an interactive confirmation).\n\tThanks to aleksejrs.\n\n\tMade completion of an option with its current value work not only on\n\t`opt=<tab>`, but also on `opt='<tab>` and `opt=\"<tab>`.  Thanks to\n\taleksejrs.\n\n\tProvide numerical value of a color as a description of a completion item\n\tfor it.\n\n\tMade :goto preserve custom and tree views.  Thanks to\n\tSvetlozar Iliev (a.k.a. asmodeus812).\n\n\tImproved error message on trying to :unlet a builtin variable.\n\n\tExtended logging on spawning a command via a shell.  Thanks to Henrik\n\tHolst (a.k.a. hholst80).\n\n\tExpand environment variables in the arguments of :mark command.  Thanks to\n\tan anonymous at Vifm Q2A site.\n\n\tImproved detection and reporting of invalid marks by :mark command.\n\n\tUpdated ncurses in AppImage to 6.5.\n\n\tDon't overwrite $TERMINFO in AppImage, set/append to $TERMINFO_DIRS\n\tinstead.  Thanks to anonymous at Vifm Q2A site.\n\n\tUpgraded to PDCurses 3.9 (was 3.8) for Windows.  Combined with some other\n\tchanges this improves the situation with handling of CJK characters.\n\tThanks to zzx41375004, vodbyte, Jeremy Yuan and others.\n\n\tConstrained background error dialogs to appear only in normal mode when\n\tnot much is going on.\n\n\tFixed line number column not including padding to the left of it.\n\n\tFixed local options not being loaded on Ctrl-W x.\n\n\tFixed graphics of view mode not being hidden on activating menu, more or\n\tfile info modes.\n\n\tFixed descriptions of exit :commands in menus (visible during popup\n\tcompletion).\n\n\tFixed statusbar output not being preserved on running commands from\n\t:history menus.\n\n\tFixed not being able to pick a symbolic link to a directory via\n\t--choose-files or --on-choose by selecting and opening it.\n\n\tFixed 'slowfs' option not being applied to targets of symbolic links on\n\toperations related to directory sizes.  Thanks to rok (a.k.a. aca).\n\n\tFixed running long shell commands when fish is used.  Caused by its\n\tinability to understand that \"${var}\" is the same as \"$var\".  Thanks to\n\taleksejrs.\n\n\tFixed a historical omission of Ctrl-G not being available in some prompts:\n\tfile rename on conflict; owner, group and symbolic link target change.\n\tThanks to Branislav Gerazov.\n\n\tFixed display issues or a crash when using a terminal with more than 32768\n\tcolor pairs.  Thanks to iboggs and itshog.\n\n\tFixed performance degradation after preview consumes lots of color pairs.\n\n\tFixed running tests with musl libc.  Thanks to Henrik Holst (a.k.a.\n\thholst80).\n\n\tFixed IPC payloads larger than 8155 bytes.  Patch by Marcin\n\tKurczewski (a.k.a. rr-).\n\n\tFixed abort on instance sending something over IPC to itself.  Thanks to\n\tMarcin Kurczewski (a.k.a. rr-).\n\n\tFixed \"N files selected\" message appearing in menus on waiting for\n\tmultikey input (regression in 0.12-beta).\n\n\tFixed %a 'statusline' macro on FreeBSD producing wrong values.  Patch by\n\tvoh9eepah.\n\n\tFixed %a 'statusline' macro producing wrong values on non-Linux Unix-like\n\tsystems.  Thanks to voh9eepah.\n\n\tFixed graphics not being cleared on switching to single-pane view.  Thanks\n\tto ret2src.\n\n\tFixed merging directories on copying not asking for overwrite\n\tconfirmations.  Thanks to aleksejrs.\n\n\tFixed skipping of file move during merging aborting the whole operation.\n\tThanks to aleksejrs.\n\n\tFixed expansion of abbrevs that leave command-line mode.  Patch by\n\tfilterfalse.\n\n\tFixed completion of :cabbrev not using bracket notation in expansion.\n\n\tFixed `<` not being turned to `<lt>` on displaying right-hand sides.\n\n\tFixed description of empty abbreviations being empty instead of `<nop>`.\n\n\tFixed tiny memory leak on trying to list abbreviations when there are\n\tnone.\n\n\tFixed `:[un]select !<text/html>` treating \"<text/html>\" as an external\n\tcommand.\n\n\tFixed !! not affecting commands that include %s or %v macro.  Thanks to\n\tJames Dietrich.\n\n\tFixed parsing of comma-separated lists hanging on empty last element and\n\tskipping leading commas.\n\n\tFixed output formatting of :autocmd (pattern negation broke column\n\talignment and wrapping).\n\n\tFixed environment variables not being expanded on checking that a\n\t:file[x]type or :fileviewer command exists.  Thanks to Ben Elan.\n\n\tFixed search match highlighting when the match is cut off due lack of\n\tspace.  Patch by Vadim Curcă.\n\n\tFixed running tests with locales that use comma for decimal point.  Thanks\n\tto PRESFIL.\n\n\tFixed foreign commands missing from `:command {prefix}` output.  Patch by\n\t高浩亮 (a.k.a. haolian9).\n\n\tFixed foreign commands missing from completion of `:[del]command\n\t{prefix}`.  Patch by 高浩亮 (a.k.a. haolian9).\n\n\tFixed documentation on yy, Y, dd and DD not mentioning how \"s\" flag of\n\t'cpoptions' affects their behaviour.  Thanks to James Dietrich.\n\n\tFixed FUSE mounter error message dialog missing newlines (regression in\n\t0.13-beta).\n\n\tFixed \"Querying... (??%)\" message on :compare having an extra space in\n\tparenthesis.\n\n\tFixed potential integer overflows on sorting.\n\n\tFixed weird sorting of filenames with non-Latin characters when\n\t'sortnumbers' option is set and strverscmp() is not provided by the\n\tsystem (like on Windows).\n\n\tFixed \"Querying... (??%)\" message on :compare having an extra space in\n\tparenthesis.\n\n\tFixed :compare hanging on trying to compare non-regular files like pipes\n\tby contents.\n\n\tFixed :compare reporting identical files as changed when there were\n\tmore than a couple of files with identical size and 4096-byte prefix.\n\tA regression in 0.13-beta.  Thanks to Alexandr Keyp (a.k.a. IAmKapuze).\n\n\tFixed stream redirection issues with background jobs on Windows (those\n\tcreated via `:!cmd &` or in Lua) if the application was closing one of\n\tstandard streams.\n\n\tFixed colors sometimes (rarely) changing in seemingly random ways.\n\n\tFixed :jobs showing some already dead jobs as running.\n\n\tFixed running external commands which start with a dash.  Patch by Ivan\n\tShapovalov.\n\n\tFixed absolute paths not being completed when 'autocd' option is enabled.\n\tMind that it can't work on Windows due to ambiguity between a command and\n\ta full path there.  Thanks to Taras Halturin (a.k.a. halturin).\n\n\tFixed individual error messages when 'syscalls' is on lacking system error\n\tstring which is present when errors are aggregated at the end of an\n\toperation.  Thanks to an anonymous at Vifm Q2A site.\n\n\tFixed `data/vifmrc` next to vifm.exe being used as global vifmrc file on\n\tWindows.  Thanks to midrare.\n\n\tFixed vifm-media script not listing external drives with udevil and\n\tudisks.\n\n\tFixed vifm-media script not listing removable drives with udisks marked as\n\tnon-removable by udisks.\n\n\tFixed incorrectly determining whether a directory is writable on\n\tWindows (primarily C:\\ could be reported as non-writable).  Thanks to\n\ttheorlangur and bitraid.\n\n\tFixed :substitute, :tr, gu* and gU* detecting a non-existent target name\n\tconflict when rename in a custom view would produce an identically named\n\tfiles in different directories.  Thanks to aleksejrs.\n\n\tFixed lack of a redraw after running :substitute, :tr, gu* or gU* in a\n\tcustom view.\n\n\tFixed a leak of error message string when using `:rename new-names...`.\n\n\tFixed :rename not recognizing identical paths in source and destination\n\tlists if they were edited (e.g., to contain extra slashes, \"./\" or \"../\").\n\n\tFixed weird character appearing on Ctrl+Space combination in command-line\n\tmode.\n\n\tFixed :restart leaving histories disabled unless 'history' is set to a\n\tnon-default value in vifmrc.  Thanks to James Dietrich.\n\n\tFixed processing of file names and paths that undergo escaping in the UI,\n\tlike inability to externally rename them (regression in 0.12.1 beta).\n\tThanks to jc-SpaceXp.\n\n\tFixed rules for handling of selection by :file[x]type not taking\n\t%\"c/%\"C/%\"f/%\"F macros into account (relevant mostly to Windows).  Thanks\n\tto smoothdad.\n\n\tFixed unreliable internal checks for %pd, %px, %py, %pc and %r macros.\n\tPreviously they could be found in something like \"%%pd\", which should not\n\tbe interpreted as %pd.\n\n\tFixed registers' content of multiple instances not being synchronized on\n\tuse of %\"r macro.\n\n\tFixed a crash after a memory corruption when running an external command\n\tvia expansion of an environment variable when 'fastrun' is set (e.g.,\n\t`!$EDITOR`).  Thanks to Quaddroo.\n\n\tFixed :elseif evaluating its expression even if an earlier conditional\n\tbranch was already taken.\n\n\tFixed loading a session with global tabs when 'tabscope' is \"pane\"\n\tresulting in global tabs being invisible.\n\n\tFixed statusline having invalid colors when 'wildstyle' is \"bar\" and\n\tcompletion is initiated by Shift-Tab.\n\n\tFixed CTRL-A and CTRL-E in command-line mode not stopping completion or\n\thistory search unlike other similar keys.\n\n\tFixed directories not being accounted for in estimates.  Thanks to\n\tjustpretending2.\n\n\tFixed global version of 'viewcolumns' not validating its value.  Thanks to\n\tVadim Curcă.\n\n\tFixed `&&` operator which was acting as binary `&` (in terms of\n\tevaluation, the result was properly boolean).  Thanks to justpretending2.\n\n\tFixed use of environment variables in :if in sample vifmrc file.  Checking\n\tfor an empty string should be done explicitly with `==` or `!=`.  Thanks\n\tto justpretending2.\n\n\tFixed Escape being handled as Ctrl+C in prompts which suppresses future\n\terrors.\n\n\tFixed outdated documentation on the behaviour of n/N when 'hlsearch' is\n\tenabled since the introduction of highlighting of search matches.  Thanks\n\tto James Dietrich.\n\n\tFixed /usr/share/terminfo not being consulted when running from an\n\tAppImage.  Thanks to anonymous at Vifm Q2A site.\n\n\tFixed system() and term() not taking 'shell'/'shellcmdflag' into account\n\ton Windows.  Thanks to spence91.\n\n\tFixed a race condition on displaying errors of a job in :jobs menu.\n\n0.13-beta to 0.13 (2023-04-04)\n\n\tMade \"withicase\" and \"withrcase\" affect how files are sorted before\n\tcomparison, otherwise they might not produce the intended effect.\n\n\tReduced cursor flickering during incremental search in visual mode.  Patch\n\tby filterfalse.\n\n\tFixed segfault on trying to expand \"~username\" path prefix with a huge\n\tlength of the user name.\n\n\tFixed user mappings replacing a mapping from Lua in an incomplete way\n\twhich could lead to assertion or some unpredictable behaviour.\n\n\tFixed map menus not listing mappings that accept a selector.\n\n\tFixed handling mouse events in normal and view modes in single pane mode.\n\n\tFixed :hideui not hiding anything on Windows.  Thanks to Ed Pavlov.\n\n\tFixed segfaults on changing sibling directory or previewing directories in\n\tmiller view while global sorting by groups is active.  Patch by filterfalse.\n\n\tFixed cl processing selection it was used previously on instead of file\n\tunder cursor when you run it twice in succession.\n\n\tFixed graphics from miller view preview remaining visible when displaying\n\tdialogs, entering menus, switching tabs, activating more or file info\n\tmodes.\n\n\tFixed \"rpreview:\" of 'milleroptions' not being copied to new tabs.\n\n\tFixed selection not being stashed by do and dp.\n\n\tFixed memory issues inside ncurses when dialog is displayed in menu mode\n\tafter resizing the terminal.\n\n0.12.1 to 0.13-beta (2023-03-17)\n\n\tChanged implementation of `:compare grouppaths` to juxtapose only files\n\twith identical relative paths.  Patch by Alexandr Keyp (a.k.a. IAmKapuze).\n\n\tChanged use of `$(filter-out)` in src/Makefile.am to `$(var:from=to)`\n\tsubstitution to get rid of a warning on configuration.\n\n\tChanged how pthread support is detected by configure script to handle more\n\tcases.  Thanks to Markus Elfring (a.k.a. elfring).\n\n\tChanged configure script to fail if neither perl nor vim is available\n\tinstead of failing to generate tags for Vim-style documentation.  Thanks\n\tto Sergei Trofimovich (a.k.a. trofi).\n\n\tChanged %N macro to also not start a process group for a command.  Thanks\n\tto Oskar Grunning (a.k.a. sQVe).\n\n\tChanged error reporting for some of the :commands such that now their\n\tfailures cause a dialog to appear on sourcing, previously those errors\n\twere printed only to status bar.\n\n\tAdded \"withicase\" and \"withrcase\" to :compare that force ignoring and\n\trespecting case respectively on comparing file names and paths.  Thanks to\n\tJose Riha (a.k.a. jose1711).\n\n\tAdded printing stats while in :compare mode.  Patch by Alexandr\n\tKeyp (a.k.a. IAmKapuze).\n\n\tAdded \"columncount:\" value to 'lsoptions' to always display fixed number of\n\tcolumns.  Thanks to Aleksandr Vysotskiy (a.k.a. loki1368).\n\n\tAdded show* arguments to :compare command to control/switch which sets of\n\tfiles are displayed (toggling is done by :compare!).  Patch by Alexandr\n\tKeyp (a.k.a. IAmKapuze).\n\n\tAdded builtin handling of mouse events.  Patch by 高浩亮 (a.k.a.\n\thaolian9).  Thanks to ranousse, Sergei Shilovsky and user451421541757324.\n\n\tAdded 'mouse' option to control when mouse input is handled (not handled by\n\tdefault).\n\n\tAdded input() builtin function to prompt user for input.  Thanks to Artur\n\tF. (a.k.a. arturfabriciohahaedgy).\n\n\tAdded ETA to detailed progress dialog.  Thanks to Jose Riha (a.k.a.\n\tjose1711).\n\n\tAdded `--plugins-dir` command-line option which allows specifying\n\tadditional places to look for plugins.  Thanks to 高浩亮 (a.k.a.\n\thaolian9).\n\n\tAdded Ctrl-Y key to command-line mode.  It activates fast navigation that\n\tallows entering deep paths by a series of searches for individual path\n\tcomponents.  Thanks to Henrik Holst (a.k.a. hholst80) and dmocek.\n\n\tAdded Ctrl-J key to command-line navigation.  It leaves the mode without\n\topening a file/directory.  Thanks to filterfalse.\n\n\tAdded Ctrl-O key to command-line navigation that goes to parent directory.\n\n\tAdded Ctrl-N/P keys to command-line navigation to move view cursor up/down.\n\tThanks to Henrik Holst (a.k.a. hholst80) and dmocek.\n\n\tAdded Arrows/Home/End/Page Up/Page Down keys to command-line navigation to\n\tmove view cursor.  Thanks to Henrik Holst (a.k.a. hholst80) and dmocek.\n\n\tAdded :amap, :anoremap and :aunmap commands to configure mappings in\n\tnavigation mode.  Thanks to Henrik Holst (a.k.a. hholst80) and dmocek.\n\n\tAdded 'navoptions' option to allow tweaking navigation mode a bit.  Thanks\n\tto filterfalse.\n\n\tAdded \"rpreview:files\" to 'milleroptions'.  Thanks to aksr.\n\n\tAdded r key to :jobs menu, which reloads the list of jobs.  Thanks to\n\tSylwia Ptasinska (a.k.a. SylEleuth).\n\n\tAdded :regedit command for external editing of register contents.  Thanks\n\tto Daniel J. Perry (BioBox).  Patch by Rostislav Tolushkin (a.k.a.\n\tnullptr-deref).\n\n\tAdded additional User10..User20 highlight groups and corresponding\n\t%10*-%20* macros.  Thanks to Sylwia Ptasinska (a.k.a. SylEleuth).\n\n\tAdded 'tabline' option to specify format of the tab line.\n\n\tAdded filereadable() builtin function mainly as a way to check file's\n\tpresence.\n\n\tReduced amount of memory consumed by `:compare groupids`.\n\n\tMade `:compare bycontents` not bother reading content of files which have\n\tunique size.\n\n\tProvide basic instructions in the documentation on how mappings work.\n\tThanks to dmocek.\n\n\tExtended do and dp keys to process selection.  Thanks to Mark S. (a.k.a.\n\tMarkuzcha).\n\n\tApply file highlighting to \"ext\" and \"fileext\" view columns.  Thanks to\n\taleksejrs.\n\n\tMade instances running inside AppImage consider contents of `/etc/vifm`.\n\tThanks to aleksejrs.\n\n\tMade Ctrl-E/Ctrl-Y scroll transposed ls-like view horizontally by one\n\tcolumn.\n\n\tInstall icons also to ${prefix}/share/icons.  It's not clear that using\n\t${prefix}/share/pixmaps will always be handled properly.  Thanks to\n\tSzilárd Andai.\n\n\tMade feedback after pressing dd in :jobs more prominent.  Thanks to Sylwia\n\tPtasinska (a.k.a. SylEleuth).\n\n\tMerged file conflict comparison dialog into the main conflict dialog.\n\tThanks to aleksejrs.\n\n\tMade file conflict more concise.  Thanks to aleksejrs.\n\n\tUpdate Default-256 to differentiate between more file types.  Thanks to\n\taleksejrs.\n\n\tDon't move cursor on search failure during search with a count.  Patch by\n\tfilterfalse.\n\n\tSpecified a few more cases when to show a search message with search\n\thighlighting turned on: if found a match, if wrapping is turned on, and in\n\tvisual mode.  Patch by filterfalse.\n\n\tA regular search logic showing messages is applied to n/N.  Patch by\n\tfilterfalse.\n\n\tMade aborting deletion abort the operation on the rest of files when\n\tdeleting multiple files.\n\n\tFixed segfault on trying to use pipe from Lua after its parent VifmJob\n\tobject was garbage-collected.  Thanks to PRESFIL.\n\n\tFixed check for broken symlinks in :edit command.\n\n\tFixed positioning hardware cursor in transposed ls-like view.\n\n\tFixed width of file names that don't fit into ls-like column being larger\n\tthan the width of other files.\n\n\tFixed ellipses being lost in side columns of miller view.\n\n\tFixed 'previewprg' not being respected on switching to view mode (regression\n\tin 0.12-beta).  Thanks to Sitaram Chamarty.\n\n\tFixed $VIFM_APPDIR_ROOT being ignored by :help command, which made it not\n\twork properly from AppImage.  Thanks to infinitewhileloop.\n\n\tFixed escaping of file paths when using 'vicmd' or 'vixcmd' to open a\n\tfile on Windows.  Thanks to Phil Runninger.\n\n\tFixed :locate never escaping its arguments (should be done unless the\n\tfirst one starts with a dash).  This is a regression in 0.7.6.\n\n\tFixed trash directory being created at default location on :restart.\n\n\tFixed abort due to assertion failure on using zx normal mode key after\n\tleaving tree in some cases.  Thanks to Mark S. (a.k.a. Markuzcha).\n\n\tFixed asynchronous previewing of symbolic links, which required manual\n\tredraw.  Thanks to Alexandre Viau.\n\n\tFixed fish completion not completing paths for `--choose-files` and\n\t`--choose-dir` options.\n\n\tFixed a \"benign\" data race on ga/gA.\n\n\tFixed error of :cunabbrev not being visible to the user.\n\n\tFixed segfault on passing invalid tag to :delbmarks.\n\n\tFixed :echo printing previous message when invoked without arguments.\n\n\tFixed Ctrl-E in visual mode not doing anything when view is scrolled to\n\tits top.\n\n\tFixed 'milleroptions' not recovering value of \"rpreview:\" on error.\n\n\tFixed FUSE mounting assuming `2>` redirection is supported by the shell,\n\twhich isn't true at least for csh and tcsh.  Thanks to Evgeniy (a.k.a.\n\tiron-udjin).\n\n\tFixed :media not redrawing on reloading (\"r\" key) and also wasn't\n\trepositioning cursor properly when menu length shrinks as a result of a\n\treload.\n\n\tFixed stashing visual mode selection on transition from visual amend mode\n\tto regular visual mode (av -> v).  Patch by filterfalse.\n\n\tFixed dropping normal selection on incremental search in visual amend\n\tmode.  Patch by filterfalse.\n\n\tFixed input bar not being updated in visual mode if any status bar message\n\thas been shown.  Patch by filterfalse.\n\n\tFixed error/prompt dialogs not reaching maximum allowed height.\n\n\tFixed \"<<N more lines not shown>>\" message in dialogs reporting wrong\n\tnumber of lines and sometimes hiding a single line.\n\n\tFixed dialogs not handling non-latin characters well.\n\n\tFixed :source producing too many errors when specified path doesn't exist.\n\n\tFixed n/N not moving the cursor without prior search in visual mode.  Patch\n\tby filterfalse.\n\n\tFixed showing wrong match number instead of error message on search in\n\tvisual mode.  Patch by filterfalse.\n\n\tFixed resetting 'hlsearch' during incremental search in visual mode.  Patch\n\tby filterfalse.\n\n\tFixed dropping selected files on empty input during incremental search in\n\tvisual mode.  Patch by filterfalse.\n\n\tFixed resetting count to 1 during incremental search in normal mode.  Patch\n\tby filterfalse.\n\n\tFixed description of %i macro in the documentation to mention that it runs\n\tcommand in background.\n\n\tFixed the last search direction not being saved on search performed from\n\tnon-normal mode.  Patch by filterfalse.\n\n0.12.1-beta to 0.12.1 (2022-09-21)\n\n\tAdded shell completion for fish shell.  Patch by Hoang Nguyen (a.k.a.\n\tFollieHiyuki).\n\n\tPermit directories with trailing slashes supplied by external commands in\n\t`:[un]select !cmd`.  Patch by filterfalse.\n\n\tFixed prefix mappings being left after removing a key (e.g., \"a\" remaining\n\tafter mapping and unmapping \"ab\").  Patch by filterfalse.\n\n\tFixed infinite loop on restoring visual selection after changing the order\n\tof files to the opposite (`:invert o`).  Patch by filterfalse.\n\n\tFixed 'sort' and 'sortorder' string representations not being updated\n\tafter `:invert o`.  Patch by filterfalse.\n\n\tFixed memory leak on using 'cdpath'.\n\n\tFixed NULL pointer dereference on parsing desktop files, if no MIME\n\ttype recognizers are available.  Patch by filterfalse.\n\n\tFixed \"load\" subcommand of :plugin not being completed.\n\n\tFixed <silent> not being highlighted after :cnoremap and :cmap.\n\n\tFixed parts of graphics being left on entering menu mode.\n\n\tFixed %i without \" &\" preventing some applications from running by closing\n\ttheir standard output and error.  Thanks to Daniel J. Perry (a.k.a.\n\tBioBox).\n\n0.12 to 0.12.1-beta (2022-09-05)\n\n\tChanged conflict dialog to offer \"Merge all\" option even for files if\n\tthere are some directories left to process.  Thanks to dalvand.\n\n\tChanged how location of trash directory is determined.  Now starting `vifm\n\t--no-configs` won't mess anything up if you're using `~/.vifm`.  Can\n\tpotentially cause some trouble for existing configurations, but shouldn't.\n\n\tChanged [c and ]c to also traverse added/missing entries.  Thanks to qsmodo.\n\n\tAdded 'autocd' option.  Makes invalid :commands be interpreted as an\n\timplicit :cd command.  Thanks to Taras Halturin (a.k.a. halturin).\n\n\tAdded %N macro that prevents detaching viewers from current session.\n\tThanks to emorozov.\n\n\tAdded cl key visual mode (similar to its function in normal mode).\n\n\tAdded handling of \"-\" in :session for switching to a previous session.\n\n\tAdded %pu macro that disables caching of viewer's output.  Thanks to\n\tb0x4it.\n\n\tAdded comparison action to conflict resolution dialog.  Thanks to\n\tanonymous at Vifm Q2A site and dalvand.\n\n\tAdded :keepsel command.  Changes default behaviour after running a\n\t:command to not reset selection of a view.  Thanks to dalvand and\n\tsharklasers996.\n\n\tAdded -skip parameter to :copy/:move/:alink/:rlink.  Makes the commands\n\tautomatically skip files that exist at destination instead of refusing to\n\tproceed.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tAdded \"datasync\" value to 'iooptions' option to configure whether writes\n\ton file copying when 'syscalls' is on are synchronized periodically.\n\tThanks to Andrew Savchenko and Afz.\n\n\tAdded angle-bracket notation for alpha keys with Alt and Shift\n\tmodifiers (<[am]-s-[a-z]>, <s-[am]-[a-z]>). Thanks to Reece Petersen.\n\n\tAdded angle-bracket notation for numeric keys with Alt\n\tmodifier (<[am]-[0-9]>). Thanks to anonymous at Vifm Q2A site.\n\n\tAdded expression pseudo-register (Ctrl-R =) for command-line mode.  Thanks\n\tto Marcos Cruz and Jiji from Vifm Q2A site.\n\n\tAdded \"ehistory\" value to 'vifminfo' and 'sessionoptions' option.  It\n\tmanages storing of expression register history.\n\n\tAdded \":history exprreg\" menu for displaying history of expression\n\tregister values.\n\n\tAdded optional border for horizontal split layout controlled by newly\n\tadded \"hborder\" in 'fillchars'.  Patch by qsmodo.\n\n\tAdded \"maxtreedepth\" value to 'previewoptions' option, which allows\n\tlimiting depths of the displayed tree.  Thanks to Afz.\n\n\tAdded %o macro to 'statusline', which expands to Unix permissions in octal\n\tform (and to nothing on Windows).  Thanks to iSeeU816.\n\n\tAdded initial support for Yori shell on Windows (not everything might work\n\twell at this point).  Thanks to LinArcX.\n\n\tAdded angle-bracket notation for some shifted grey keys: <s-home>,\n\t<s-end>, <s-left>, <s-right>, <s-up>, <s-down>, <s-pageup>, <s-pagedown>,\n\t<s-delete>, <s-insert>.  Patch by M Kelly.\n\n\tAdded %l/%\"l and %L/%\"L macros for the list of selected files.  %f is not\n\tempty if there is no selection, which is not always desirable.  Thanks to\n\tratnamhof.\n\n\tAdded parsing of \\c and \\C sequences in regular expressions to force case\n\tignoring or matching respectively.  Thanks to filterfalse and Safal\n\tPiya (a.k.a. mrsafalpiya).\n\n\tAdded :PeditVifm command (and corresponding :PeditVim) to the plugin.\n\tThanks to Mukund Mauji (a.k.a. maujim).\n\n\tAdded CmpUnmatched and CmpBlank highlight groups.  Thanks to qsmodo.\n\n\tExtended optimizations for globs to cover `something*` and `some*thing`\n\tcases.\n\n\tUpdated xxHash to 0.8.0 and switched to XXH3 variant.\n\n\tExtended has() builtin function to check for Lua handlers.\n\n\tExtended cl normal mode key to handle selection of multiple files.  Thanks\n\tto aleksejrs.\n\n\tHide graphics when displaying dialogs or entering menus, more or file info\n\tmodes.  Thanks to heelsleeh and PRESFIL.\n\n\tMore consistent spelling of \"status bar\" and \"status line\" in\n\tdocumentation.  Thanks to tcftbl.\n\n\tDocument that <del> key might correspond to <bs>.  Thanks to dalvand.\n\n\tDon't expand() macros in environment variables.  Patch by filterfalse.\n\n\tTry several editors and then $EDITOR for 'vim' option in sample vifmrc\n\tfiles.  Thanks to Janek (a.k.a. xeruf) and Muhammed Zakir.\n\n\tInclude unprintable Unicode code points in the set of characters escaped\n\tin file names and start escaping them in file view.  Patch by\n\tMadMaverick9.\n\n\tEscape unreadable characters in menus, command-line mode, dialogs and\n\tstatusbar messages.  Thanks to MadMaverick9.\n\n\tSet `title` option by default if $TERM is foot* as its terminfo entry\n\tmight lack tsl and fsl attributes.  Thanks to nobodyatandnothing.\n\n\tDisplay permissions in octal form in File Info dialog and group them with\n\towner/group info.  Thanks to iSeeU816.\n\n\tMade gs normal mode key remember selection for up to 10 last entered\n\tdirectories.  Thanks to ratnamhof and Matthias Braun (a.k.a. mb720).\n\n\tReformat File Info dialog to be more compact.  Thanks to chelovechishko.\n\n\tDo not reset selection on :view command.  Thanks to Alexandre Viau.\n\n\tFixed cursor appearing at random places on entering command-line mode.\n\n\tFixed flicker and loosing parts of input on incremental search in menus.\n\n\tFixed ruler flickering on typing during incremental search in menus.\n\n\tFixed severe performance degradation after measuring size of large\n\tdirectory trees.\n\n\tFixed building when fdatasync() call isn't available.  Thanks to Schrijvers\n\tLuc (a.k.a. Begasus).\n\n\tFixed flicker of status line on editing in command-line mode.\n\n\tFixed resolving symlinks to symlinks on checks for regular file.  Thanks\n\tto Olmo Kramer.\n\n\tFixed :goto command not positioning cursor correctly if provided on\n\tcommand-line.  Thanks to Toan Nguyen (a.k.a. toan2406).\n\n\tFixed --remote and --remote-expr failing if $TERM isn't valid (regression\n\tin 0.11-beta).  Thanks to b0x4it.\n\n\tFixed `:compare listunique` yielding different results depending on which\n\tview is active due to not processing bottom files in the current view in\n\tsome situations.\n\n\tFixed information about implicit file selection (count or ranges) being\n\tlost due to the use of expand() builtin function in 'statusline'.  It was\n\tfixed previously, but the fix got undone prior to the release.  Thanks\n\tto dalvand.\n\n\tFixed expand() requiring backslashes to be escaped twice (once for\n\tenvironment variable expansion and once for macro expansion), which isn't\n\tconvenient nor intuitive.\n\n\tFixed truncation of the dollar sign during expansion of non-existent\n\tenvironment variables.  Patch by filterfalse.\n\n\tFixed assertion failure on processing mappings with RHS of the form\n\t\"{mapping with selector}{something else}\".  Thanks to dalvand.\n\n\tFixed search and local filter values set from :history menu being split at\n\tbar (|) and each piece applied in turn.\n\n\tFixed losing visual mode selection after executing two command-line\n\tcommands where the first one enters visual mode and the second one\n\timplicitly resets selection.  Thanks to dalvand.\n\n\tFixed background :copy/:move handling broken symlinks as non-existent\n\tfiles during the operation (which wasn't happening if such file was there\n\tinitially).\n\n\tFixed write to a pipe of a closed process in Lua causing SIGPIPE and\n\ttermination of the application.\n\n\tFixed :. incorrectly checking for one path being parent of another and\n\tproducing weird results (\"/pa\" was considered parent of \"/path\", with \"th\"\n\tbeing the result).  Thanks to Dennis Preiser (a.k.a. 0xDP).\n\n\tFixed displaying empty matches at the start/end of menu items.\n\n\tFixed displaced search highlighting when horizontal scrolling hid multi\n\tbyte text.\n\n\tFixed completion of broken filenames (those for which encoding to wide\n\tcharacter fails) causing memory corruption.\n\n\tFixed running :set from autocommands triggered during processing of vifmrc\n\tchanging options for all views.  Thanks to Alexandre Viau.\n\n\tFixed handling errors on :mkdir with 'syscalls' set.  They weren't\n\tdisplayed and retry/ignore/abort prompt wasn't presented.\n\n\tFixed segfault on ignoring an error from :touch with 'syscalls' set.\n\n\tFixed operations ignored via retry/ignore/abort prompt still being added\n\tto undo history.\n\n\tFixed graphics not being cleared properly on switching between viewers in\n\tview mode.\n\n\tFixed externally edited prompt not being saved to history.\n\n\tFixed completion of command-line prompts breaking input at pipe\n\tsymbol (|).\n\n\tFixed resetting 'fillchars' option and separate values.  Again, this one\n\tis cursed.\n\n\tFixed borders not being filled after loading an empty color scheme.\n\n\tFixed directory preview resetting after detaching from it.  Thanks to Luka\n\tMarkušić (a.k.a. mark2185).\n\n\tFixed conflict dialog offering merging on rl and al normal mode commands.\n\n\tFixed :restart creating trash directory in incorrect location on Windows\n\tin some cases.\n\n\tFixed argument escaping issues for foreground programs on Windows.  Thanks\n\tto fohrums.\n\n\tFixed slashes being doubled in macros like %\"c on Windows with cmd.exe as\n\ta shell.  Thanks to Toby Hawkins (a.k.a. HawkinsT).\n\n\tFixed auto-detection of GUI programs on Windows, which prevents Vifm from\n\twaiting on them to finish.  Thanks to Azin Sharaf.\n\n\tFixed 'trashdir' expanding ~ only of the first entry.\n\n\tFixed `start` in file[x]type commands on Windows not being considered as\n\tpresent.\n\n\tFixed selection created prior to running av in normal mode showing up\n\tafter switching to a regular visual mode via v key and moving cursor over\n\tit.\n\n\tFixed processing of extended keys on OpenBSD.\n\n\tFixed memory error in :media menu on an unlikely error path.  Thanks to\n\tdcb314.\n\n\tFixed memory leak from bar in progress dialog.\n\n\tFixed checking version of GNU coreutils at build time.\n\n0.12-beta to 0.12 (2021-09-29)\n\n\tMade :VifmCs of the plugin handle 24-bit colors.\n\n\tCollect desktop files also from ~/.local/share/applications.  Thanks to\n\tJose Riha (a.k.a. jose1711).\n\n\tAlign output of :highlight better.\n\n\tFixed maximum number of arguments for :highlight command.  Thanks to\n\tYuriy Artemyev (a.k.a. anuvyklack).\n\n\tFixed binary data messing up TUI.\n\n\tFixed new \"combine\" highlight attribute not being completed or displayed\n\tby :highlight command.\n\n\tFixed garbage being printed sometimes after doing search in a menu.\n\n\tFixed miller preview blinking too much.  Thanks to filterfalse.\n\n0.11 to 0.12-beta (2021-09-15)\n\n\tChanged semantics of light* color groups to add bold attribute only for\n\tterminals with less than 16 colors.  Aligns the behaviour with Vim.\n\tAffects you only if you relied on that implicit bold attribute.  Thanks to\n\tJose Riha (a.k.a. jose1711).\n\n\tAdded experimental Lua plugins support.\n\n\tAdded :plugins command that opens plugins menu.\n\n\tAdded %P macro to 'rulerformat' (and thus to 'statusline'), which expands\n\tto All, Top, xx% or Bot to indicate position within the view.  Thanks to\n\tiSeeU816.\n\n\tAdded progress indication to the ruler of the view mode (corresponds to new\n\t%P macro of 'rulerformat').  Thanks to iSeeU816.\n\n\tAdded i view mode key that toggles raw mode (ignoring of defined viewers).\n\tThanks to j-xella.\n\n\tAdded a and A view mode keys that switch to next and previous viewer of\n\tcurrent file correspondingly.  Thanks to j-xella.\n\n\tAdded 'previewoptions' option to allow tweaking graphics preview a bit.\n\tThanks to Joshua Jensch (a.k.a. patroclos) and flux242.\n\n\tAdded \"toptreestats\" value to 'previewoptions' option, which makes stats\n\tappear before the tree.  Patch by qsmodo.\n\n\tAdded :plugin command that manages plugins.\n\n\tAdded network mount and `subst` targets to :volumes menu.  Patch by Phil\n\tRunninger.\n\n\tAdded \"combine\" pseudo-attribute to \"cterm\" parameter of :highlight\n\tcommand.  It changes behaviour from overwriting attributes of a parent\n\thighlight group (within their hierarchy) to appending to it.  Thanks to\n\tAndrew Savchenko.\n\n\tAdded literal values to 'viewcolumns' option.  Thanks to Jose Riha (a.k.a.\n\tjose1711), chelovechishko, DieSpinne and rwtallant13.\n\n\tAdded shortcuts for toggling flags in permissions dialog on *nix.  Patch by\n\tqsmodo.\n\n\tAdded %v macro for vertical splitting in terminal multiplexers.  Patch by\n\tqsmodo.\n\n\tAdded %Pl and %Pz macros for redirecting list of files to standard input\n\tof commands.  Thanks to PRESFIL.\n\n\tAdded %N macro to 'statusline' option, which adds a line break and\n\tincreases height of the status line.  Thanks to Jose Riha (a.k.a.\n\tjose1711), qsmodo and jcarreja.\n\n\tAdded interactive re-editing of file names in external editor.  Format now\n\tsupports comments for displaying last error and original file names.\n\tThanks to Jose Riha (a.k.a. jose1711) and Diogo Lemos (a.k.a. dmlemos).\n\n\tAdded \"l\" and \"r\" flags to the 'tuioptions' option.  It controls\n\ttruncation of view titles.  Patch by qsmodo.\n\n\tAdded periodic forced flushing of data on copying data when 'syscalls' is\n\tset.  Thanks to Matthias Braun (a.k.a. mb720).\n\n\tAdded :st[op] command that behaves like Ctrl-Z.  It's to be used in\n\tmappings.  Thanks to GummyGun.\n\n\tAdded zx normal mode key to fold/unfold directories in tree views.  The\n\timplementation is not optimal at this moment though.  Thanks to\n\tfilterfalse, Ben Lu (a.k.a. ayroblu), RR0925 and Alexandre Viau.\n\n\tAdded \"depth=N\" parameter to the :tree command.  Thanks to filterfalse.\n\n\tAdded support for direct/\"true\"/24-bit colors for ncurses 6.0 or later.\n\tThanks to Anton Kochkov (a.k.a. XVilka) and IvanBarsukov.\n\n\tAdded \"gui\", \"guifg\" and \"guibg\" parameters to :highlight command.\n\n\tAdded some additional information about instance to the :version/:vifm menu.\n\n\tAdded %c 'statusline' macro that displays size of current file-system.\n\tThanks to Jose Riha (a.k.a. jose1711).\n\n\tMade :VifmCs of the plugin fail when 'termguicolors' produces a 24-bit color\n\tvalue.  Thanks to AtomToast.\n\n\tDon't list inaccessible instances on --server-list.\n\n\tMade contents of map menus easier to comprehend by adding captions.\n\n\tInclude shortcut prefix in title of map menus.\n\n\tDocument how %i macro affects background jobs.\n\n\tMade it possible to build AppImage for Vifm.  Patch by michaellee8.\n\n\tStarted using quickview's cache in view mode.\n\n\tExtended cache of viewer's output to contain multiple entries (initial\n\tversion of the cache was added to skip redrawing graphics).\n\n\tImplemented asynchronous previewing for textual and pass-through (think\n\tsixel) viewers.  Thanks to StillSteal, laur89, Joshua\n\tJensch (a.k.a. patroclos) and p-kolacz.\n\n\tRun background programs detached from a terminal.  Thanks to Miguel Madrid\n\tMencía (a.k.a. mimame).\n\n\tAllow exploring empty files or output of viewers.  Thanks to Andrew\n\tSavchenko.\n\n\tAllow user-defined commands to include numbers in their names.  Thanks to\n\tanonymous at Vifm Q2A site.\n\n\tMake :compare obey file name filters.  Patch by qsmodo.\n\n\tAlways display UID/GID in numeric form in File Info dialog (in parenthesis\n\tif the id was resolved to a string).\n\n\tUpdated logo of the project.  Thanks to Hescalalu for making it.\n\n\tDetect broken links on preview and report them as such.\n\n\tFixed pointing 'trashdir' to a symbolic link to a directory causing\n\tissues.  Thanks to ChongChong He.\n\n\tFixed lack of error message when overwriting of file fails with\n\t'syscalls' turned off.  Thanks to anonymous on SourceForge discussion\n\tforum.\n\n\tFixed an issue with packaging on one system (Linux in this case) and\n\tbuilding on the other (OS X).  Thanks to chenrui333.\n\n\tFixed information about implicit file selection (count or ranges) being\n\tlost due to the use of expand() builtin function in 'statusline'.  Thanks\n\tto DieSpinne.\n\n\tFixed presence of %q macro causing second round of macro expansion.\n\n\tFixed quickview not being redrawn after leaving File Info dialog or more\n\tmode.\n\n\tFixed pane tabs being created after the last one instead of after current\n\ttab.  Thanks to anonymous and n.e. at Vifm Q2A site.\n\n\tFixed hang on using previewer that takes over control over the\n\tterminal (like 7z does to read password).  Thanks to PRESFIL.\n\n\tFixed inability to map escape sequences due to extended keys in terminfo\n\tdatabase.  Patch by M Kelly.\n\n\tFixed not being able to view really long file names in full in File Info\n\tdialog.  Thanks to 702b.\n\n\tFixed compilation on AIX.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tFixed mounting and directory replacement not being detected as directory\n\tchange when inotify is used.  Thanks to Jakob Helmecke and PRESFIL.\n\n\tFixed :empty leaving empty directories on Windows.  Thanks to Grueslayer.\n\n\tFixed losing files as a result of executing \":copy! &\" or \":move! &\" when\n\tboth panes show the same directory.  Thanks to Hans Bieshaar.\n\n\tFixed a memory leak possible on formatting tab titles and status line.\n\n\tFixed possible crash after changing 'classify' and then switching to\n\tinactive tab.\n\n\tFixed attempts to complete nonsensical arguments to :set removing those\n\targuments.\n\n\tFixed some scrolling keys in view mode when there is only one visible\n\tline.\n\n\tFixed backward search of view mode not reporting failure if there was a\n\tmatch at the very first line.\n\n\tFixed running tests as root user.  Thanks to Michka Popoff (a.k.a.\n\tiMichka).\n\n\tFixed graphical preview of files in the right column of miller view not\n\tbeing properly cleared on directory change.  Thanks to CosmosAtlas.\n\n\tFixed vifm-convert-dircolors dropping copies of entries that differ only by\n\tcase.  Thanks to flux242.\n\n\tFixed permission dialog on *nix systems not showing all information\n\tcorrectly after a redraw.\n\n\tFixed incorrect colors on redrawing wild menu popup on terminal resize.\n\n\tFixed order of checks on :copy?/:move?/:alink?/:rlink?.  Now custom view\n\tis checked for duplicates before prompting for list of files.\n\n\tFixed refusing to :copy/move/alink/rlink identically-named files from\n\tcustom views even if list of new names is supplied.\n\n\tFixed cw key of visual mode not being documented.\n\n\tFixed copying of executable files not working on FreeBSD.  Thanks to\n\tmakijato.\n\n\tFixed :chmod lacking a reload, which is needed because attribute change\n\tmight not be detected.\n\n\tFixed :goto not working with backslashes on Windows.  Thanks to\n\tGrueslayer.\n\n\tFixed full path patterns ({{globs}} and //regexp//) not working in tree\n\tviews.\n\n\tFixed number of filtered files not being updated in tree views on pressing\n\tzf key.\n\n\tFixed \"Building tree...\" message not restoring contents of status bar in\n\tcommand-line mode.  Thanks to filterfalse.\n\n\tFixed issues with displaying composite characters.  Thanks to Dennis\n\tPreiser (a.k.a. 0xDP).\n\n\tFixed some file operations not being blocked in custom trees even though\n\tthey can't handle them (custom views in general can't).  Thanks to\n\tfilterfalse.\n\n\tFixed graphical preview of files in the right column of miller view not\n\tbeing properly cleared on switching to a directory preview.  Thanks to\n\tTheMystifyingCharacter.\n\n\tFixed sample :zip command to work with multiple files.  Thanks to\n\tBranislav Gerazov.\n\n\tFixed handling of broken links that exist at destination on putting files.\n\tThanks to aleksejrs.\n\n\tFixed zj not working before the last entry if it's an empty directory.\n\tThanks to filterfalse.\n\n\tFixed processing of keypad keys on Windows.  Thanks to Roland.\n\n0.11-beta to 0.11 (2020-09-24)\n\n\tRecommend against setting 'shellcmdflag' to \"-ic\" value.\n\n\tMade it possible to escape commas in patterns (as usual, by doubling).\n\tThanks to filterfalse.\n\n\tDon't display number of hard links in File Info dialog on Windows.  It's\n\talways zero there.\n\n\tFollow targets of .lnk-files on Windows on gF.\n\n\tFixed ga and gA on symlinks to directories on their own (regression in\n\t0.11-beta) and as part of selection.  Thanks to filterfalse.\n\n\tFixed an issue with undesired cache invalidation for symbolic link to\n\tdirectories, which caused performance issue (regression in 0.11-beta).\n\n\tFixed `:sync! all` not synchronizing local filter of a tree with\n\t`set cvoptions=localfilter`.  Thanks to filterfalse.\n\n\tFixed documentation in Vim format linking section about globs instead of\n\tsection on patterns in the description of :filetype, :filextype and\n\t:fileviewer commands.\n\n\tFixed zd adding \"..\" directory even with 'dotdirs' not containing\n\t\"treeleafsparent\".\n\n\tFixed tab labels of pane tabs being messed up (regression in 0.11-beta).\n\n\tFixed highlighting of search matches in preview (regression in 0.11-beta).\n\n0.10.1 to 0.11-beta (2020-09-10)\n\n\tAdded :VifmCs command to the plugin for \"converting\" Vim's color scheme\n\tinto a Vifm's one.  Patch by Roman Plášil (a.k.a. Quiark).\n\n\tAdded references to \"Menus and dialogs\" section of documentation from\n\t:commands and keys which open menus and dialogs detailed there.\n\n\tAdded \"tabs\" value to 'vifminfo' option.  It enables persistent tabs.\n\tThanks to Cosmin Popescu (a.k.a. cosminadrianpopescu), filterfalse and\n\tNeil Griffin (a.k.a. ngriffin7a).\n\n\tAdded :tabo[nly] command that closes all tabs but the current one.\n\n\tAdded \"v\" flag to the 'tuioptions' option.  It controls whether width of\n\tmiddle border is adjusted to equalize view sizes.  Thanks to Matthias\n\tBraun (a.k.a. mb720).\n\n\tAdded 'tablabel' option that specifies format of a single tab's label when\n\tnon-empty.  Thanks to aleksejrs.\n\n\tAdded three MC-like shortcuts to sample vifmrc files (Alt-I, Alt-O and\n\tCtrl-U).  Thanks to Hans Bieshaar.\n\n\tAdded HardLink highlight group for regular files with more than one hard\n\tlink.  Patch by Hans Bieshaar.\n\n\tAdded 'sessionoptions' option, which is an alternative to 'vifminfo' for\n\tsession files.\n\n\tAdded :session and :delsession commands to manage sessions.  Thanks to\n\tMarcos Cruz.\n\n\tAdded v:session builtin variable that provides name of current session or\n\tis set to an empty string.\n\n\tAdded global Default-256 color scheme to be used in terminals that support\n\t256-color palette (automatically in sample vifmrc).  Thanks to Shakil\n\tAkhtar.\n\n\tAdded rate and progress bar to progress dialog.  Patch by Alborz Jafari.\n\n\tAdded \"treeleafsparent\" value to 'dotdirs' option.  Thanks to filterfalse\n\tand Melandel.\n\n\tAdded LineNr highlight group for highlighting line number column of views.\n\tThanks to Anton Gepting.\n\n\tAdded OddLine highlight group for highlighting every second entry line of a\n\tpane.  Thanks to iSeeU816.\n\n\tAdded v:jobcount builtin variable that provides number of active\n\tjobs (number of lines in :jobs menu).  Thanks to iSeeU816.\n\n\tAdded basic support for using PowerShell on Windows (pausing doesn't work).\n\tThanks to Fang (a.k.a. peromage).\n\n\tAdded 'tabprefix' and 'tabsuffix' options that allow customizing\n\ttabline separators.  Thanks to CoreCube.\n\n\tAdded real (fully resolved) path to the File Info dialog.  Thanks to\n\tAlexandre Viau.\n\n\tAdded number of hard links to the File Info dialog.\n\n\tAdded gF normal mode key which acts like gf, but goes all the way to the\n\tultimate target of the chain of symbolic links.  Thanks to Alexandre Viau.\n\n\tAdded optional \"full\" parameter for the :restart command, which makes it\n\tdiscard essentially all context.  This is useful with persistent tabs.\n\tThanks to Yusuf Aktepe.\n\n\tMade documentation of :command more comprehensible.\n\n\tExplicitly documented that macros are expanded in user defined commands.\n\tThanks to gcmt.\n\n\tClean up tests directory on \"make clean\" in the top of the tree.\n\n\tAvoid interposing system's reallocarray(), when it's present.\n\tThanks to Ben Boeckel (a.k.a. mathstuf).\n\n\tInstall only one version of sample config and media script, the one which\n\tcorresponds to operating system being used.  Thanks to Michael\n\tVetter (a.k.a. jubalh) and Ondrej Novy (a.k.a. onovy).\n\n\tDon't force view reload after every :command that resets selection when\n\tthere was non-empty selection.  This might make metadata of files less\n\tup-to-date, but should increase overall performance.  Thanks to Jose\n\tRiha (a.k.a. jose1711).\n\n\tAvoid reloading source file list after copy or move operation when\n\tpossible.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tDocument that user must disable netrw plugin on his own when enabling\n\tg:vifm_replace_netrw.  Vifm's plugin can't do it, because it's loaded\n\tafter plugins shipped with Vim.\n\n\tSignificantly improved performance of adding files to registers that\n\tcontain thousands of files.  As a result contents of registers is sorted\n\tnow.  Thanks to Typo.\n\n\tSignificantly improved performance of adding files to trash that contains\n\tthousands of files.  As a result contents of trash is sorted now.  Thanks\n\tto Typo.\n\n\tDocumented how selection is handled on launching files (like on l or Enter\n\tkeys).\n\n\tDon't reset histories of views in inactive tabs on :restart.\n\n\tInvalidate textual quickview cache if it contains fewer lines than window\n\theight and is incomplete.\n\n\tDo not require \"dhistory\" to be present in 'vifminfo' for \"savedirs\" to\n\twork.\n\n\tAbort menu, more or file information modes before processing remote\n\tcommands.  Thanks to kangshugang.\n\n\tImprove navigation on gf key.  Do fewer refreshes and disable filters to\n\tmake target visible.\n\n\tFollow targets of .lnk-files on Windows.  Thanks to Alexandre Viau.\n\n\tDisplay targets of .lnk-files in file information dialog on Windows.\n\n\tLimit length of custom file list title to 80 character positions.  Thanks\n\tto filterfalse.\n\n\tMake displaying of spaces in mappings more intelligent by using <space> at\n\tthe start or end of lhs or rhs.\n\n\tPrevent internally selected files (e.g., via a range of a :command) from\n\tappearing selected in user interface.  Thanks to filterfalse.\n\n\tMake 'title' option work in all terminals which contain \"tsl\" and \"fsl\"\n\tcapabilities.  Thanks to m-kru.\n\n\tUse global color scheme for preview on the other pane ignoring its\n\tdirectory-specific color scheme.\n\n\tImprove documentation on \"bycontents\" of :compare.  Thanks to maxigaz.\n\n\tMake comparing files by contents (`:compare bycontents`) somewhat faster.\n\tThanks to maxigaz.\n\n\tUse the same label for :grep and :find custom lists as the one used for\n\t:grep and :find menus.  Thanks to filterfalse.\n\n\tUse unexpanded command for title of custom file lists produced using %u or\n\t%U macros.  Thanks to filterfalse.\n\n\tUse unexpanded command for title of a menus produced using %m or %M macros.\n\n\tUpdate terminal title when in menus.  Thanks to filterfalse.\n\n\tEscape some characters as ^X in view and tab titles, custom menu titles,\n\ton status line and in terminal title.  Thanks to filterfalse.\n\n\tUse name of user-defined command in titles of custom views and menus.\n\tThanks to filterfalse.\n\n\tPreserve more information in the title on turning custom view into tree\n\tusing :tree.  Thanks to filterfalse.\n\n\tDecrease number of UI updates on file operation to prevent cursor\n\tflickering.\n\n\tImprove cursor positioning after file operations.\n\n\tMore sensible merging of histories from multiple instances in vifminfo\n\tfile.\n\n\tImproved handling of long or unknown escape sequences in previews.  Thanks\n\tto bratekarate.\n\n\tSignificantly improved speed of sourcing files (includes processing\n\tconfiguration on startup and :restart).\n\n\tSignificantly improved speed of handling typical globs (and therefore\n\tmime-type matchers) and reduced amount of memory they take up.  Thanks to\n\tyanzhang0219.\n\n\tImplemented capturing output of background applications on Windows.  Thanks\n\tto Gene Zharov.\n\n\tDetect being run under Wayland (relevant for :filextype commands).  Thanks\n\tto mhdzli.\n\n\tSomewhat improved documentation on 'ignorecase' and 'smartcase' options.\n\tThanks to filterfalse.\n\n\tInvalidate cached directory information (size or number of files) on inode\n\tchange.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tInvalidate cached directory size when using it to compute size of some\n\tparent directory.\n\n\tReduce width of top line when side borders are hidden (`set\n\ttuioptions-=s`).  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tCreate $VIFM/colors directory with default color scheme only on the first\n\trun.  Thanks to ranousse.\n\n\tImprove differentiation between association and list forms of :colorscheme\n\tcommand on startup.  This is important if list contains name of color\n\tscheme that doesn't exist.\n\n\tTry harder to preserve position of the splitter.  Avoid its drift on\n\tterminal resizes and preserve ratio of windows on startup and tab\n\tswitches.  Thanks to Shakil Akhtar.\n\n\tImprove performance of mime-type detection by caching the results.\n\n\tDeduplicate elements of the :file menu.\n\n\tUse mime-types in associations in sample vifmrc.  Thanks to Shakil\n\tAkhtar.\n\n\tFixed symbolic link as FUSE mount point not being removed on systems\n\twith FreeBSD kernel.  Thanks to Ondrej Novy (a.k.a. onovy).\n\n\tFixed confirmation dialog not working on systems with unsigned char.\n\tThanks to nandox.\n\n\tFixed crash on trying to do descending sorting by groups.  Thanks to\n\trafasc.\n\n\tFixed descending sorting by groups not being implemented.  Thanks to\n\trafasc.\n\n\tFixed `:move subdir &` renaming file in the process and doing weird stuff\n\tto multiple files.  Thanks to 45jqlakjrf87ayte7hy34ter4nguijauzl4eitk.\n\n\tFixed gf key on relative symbolic links when current path has symbolic\n\tlinks in it.  Thanks to emarsk.\n\n\tFixed gf key on symbolic links that point to broken symbolic links.\n\n\tFixed incorrect displaying of size of files larger than 4 GiB on Windows.\n\tGot broken in 0.8.1.  Thanks to Allison McNulty (a.k.a. allora).\n\n\tFixed positioning of hardware cursor after startup and switching panes.\n\tGot broken in 0.10.1.  Thanks to Daniel Mueller (a.k.a. d-e-s-o).\n\n\tFixed test for very long file name hitting dynamic file-system limit on\n\tfile name length.  Thanks to ovk.\n\n\tFixed UI glitches on top left and right when top line got hidden by status\n\tbar or status line on status line taking up all or all but one lines of the\n\tscreen.\n\n\tFixed Alt key combinations being broken on Windows since v0.9.\n\n\tFixed running non-cmd shells on Windows broken by adding 'shellcmdflag' in\n\t0.10.1.\n\n\tFixed issues with non-tiny 'shellcmdflag' on Windows.  Patch by Bas\n\tBossink (a.k.a. basbossink).\n\n\tFixed adding files with spaces in their names as e-mail attachments in the\n\tplugin.  Thanks to Stephen Horst (a.k.a. sjhorst).\n\n\tFixed trash \"forgetting\" about deleted file when there it already contains\n\ta file deleted at the same path.\n\n\tFixed printing \"Terminal is too small message.\" on startup, when TUI was\n\talready initialized and wasn't disabled for printing.\n\n\tFixed generation of :highlight command for OtherWin on writing\n\t$VIFM/colors/Default.vifm.  The bug caused white background of inactive\n\tpane.  Thanks to Stas Malavin.\n\n\tFixed confusing printing of attributes of OtherLine, OtherWin, AuxWin and\n\tUser1..User9 highlight groups by :highlight command.\n\n\tFixed documentation on external background commands.  Thanks to Gene Zharov.\n\n\tFixed possible crash after changing 'history' when there are inactive tabs\n\tand then populating history of those tabs.\n\n\tFixed local options being copied on creating tabs even when target path is\n\tdifferent.\n\n\tFixed DirEnter autocommand not being called on creating tabs.\n\n\tFixed pane tabs of inactive pane reappearing after changing 'tabscope' to\n\t\"global\" and then back to \"pane\".\n\n\tFixed it being possible to activate view mode while in a single pane mode.\n\tThanks to filterfalse.\n\n\tFixed 'title' messing up the TUI on very long title by limiting its\n\tmaximum length.  Thanks to filterfalse.\n\n\tFixed command-line commands not being saved in history when command-line\n\tmode was entered and left by two different mappings (as opposed to a\n\tsingle mapping in which case this behaviour is expected).  Thanks to\n\tfilterfalse.\n\n\tFixed detection of non-regular files in quickview, when previewing\n\tsymbolic links.  Thanks to m-kru.\n\n\tFixed directory-specific color scheme not being applied to newly created\n\ttabs.\n\n\tFixed selection being lost or incorrectly preserved on changes of local\n\tfilter in custom views.  Thanks to filterfalse.\n\n\tFixed status bar message not being cleared sometimes.  Thanks to\n\tfilterfalse.\n\n\tFixed graphics preview not being cleared on switching tabs or starting\n\texternal applications (including on :shell).\n\n\tFixed number of selected files not being updated after filtering files out\n\tusing zd normal mode key.\n\n\tFixed omission in details about keys in documentation on 'runexec' option.\n\tThanks to m-kru.\n\n\tFixed invalid background in more mode after opening a menu.  Thanks to\n\tfilterfalse.\n\n\tFixed mapped keys being reinterpreted as builtin keys if RHS of the\n\tmapping failed at some point (e.g., contained an unmapped key).  Thanks to\n\tSeok Won Lee (a.k.a. ijleesw).\n\n\tFixed issues with the plugin when Vim has no :drop command.  Thanks to\n\tNormen Hansen (a.k.a. normen).\n\n\tFixed use of :catch in Vim plugin.  Thanks to Normen\n\tHansen (a.k.a. normen).\n\n\tFixed %a 'statusline' macro on OS X producing wrong values.  Thanks to\n\tyanzhang0219.\n\n\tFixed 'z mark being treated as a special pane-specific mark (like '< and\n\t'>).  Thanks to Marcos Cruz.\n\n\tFixed '< and '> marks being shared by views in different tabs.\n\n\tFixed exploring files on pseudo file systems which reported\n\t\"Nothing to explore\" despite quickview showed file contents fine.\n\n\tFixed local filter not obeying updated values of 'ignorecase' and\n\t'smartcase' options when 'incsearch' is off.  Thanks to filterfalse.\n\n\tFixed dialogs not being visible when UI updates are silenced via <silent>\n\tmappings.\n\n\tFixed Default color scheme not being available on processing sample vifmrc\n\ton first run of the application.\n\n\tFixed `:highlight {new-pattern}` not being immediately applied due to\n\tcaching.\n\n\tFixed detecting presence of :file[x]type commands on Windows when\n\tbackslashes are present in path.  Thanks to anonymous and n.e. at Vifm Q2A\n\tsite.\n\n\tFixed running tests on OS X, which were broken due to `/home/` being a\n\tsymbolic link.  Thanks to Jason Dreisbach (a.k.a. jtdreisb).\n\n\tFixed opening non-top-level \"..\" in a :tree incorrectly behaving as\n\t`:cd ..`.\n\n\tFixed user mappings not being resolved for suggestions.  Thanks to\n\tTornaxO7.\n\n\tFixed selectors not being suggested if there are matches among commands.\n\tThanks to iSeeU816.\n\n\tFixed commented line following `fileviewer *.ext` not being highlighted\n\tappropriately.\n\n\tFixed panic on some redraw operations mixing with file operations during\n\tterminal resizing.  Thanks to aca.\n\n\tFixed highlighting of `fileviewer .*/,*/` as if it contains a pattern.\n\n\tFixed highlighting of status line being shifted due to unmatched `%[`.\n\n\tFixed weird tabline layout on very large number of tabs.\n\n\tFixed highlighting of regex patterns.  They could consume too much and\n\twould stop at `\\/`.\n\n\tFixed highlighting of multiline matchers for :filetype, :filextype and\n\t:fileviewer commands.\n\n\tFixed only one level of symbolic links being resolved for mime-type\n\tdetection.\n\n\tFixed :wincmd being affected by mappings (e.g., of Ctrl-W key).  Thanks to\n\tPhilipp at Vifm Q2A site.\n\n\tFixed columns in a :file menu being misaligned for mix of entries with and\n\twithout description.\n\n\tFixed creating symbolic links on Windows with 'syscalls' being turned on.\n\n\tFixed creating symbolic links on Windows with spaces in source or target\n\tpaths.\n\n\tFixed 'chaselinks' on Windows (symbolic links weren't resolved).\n\n\tFixed highlighting of comments after some commands.\n\n\tFixed %p macro of 'findprg' missing from Vim version of the documentation.\n\n0.10.1-beta to 0.10.1 (2019-07-29)\n\n\tAdded \"space\" and \"nospace\" values to 'sizefmt' option.  Patch by\n\tzsugabubus.\n\n\tAdded autodetection of *.vifm files as files with \"vifm\" filetype to the\n\tplugin.  Patch by Anton Kochkov (a.k.a. XVilka).\n\n\tMade udisks2 part of vifm-media script compatible with python3.  Patch by\n\tzsugabubus.\n\n\tAssume that any $TERM value that starts with \"xterm-\", \"rxvt-\" or\n\t\"screen-\" supports terminal title.  Thanks to Matthias\n\tBraun (a.k.a. mb720).\n\n\tDocumented $TERM values for which 'title' option works.  Thanks to Matthias\n\tBraun (a.k.a. mb720).\n\n\tFixed assertion failure on resetting 'classify' option when 'millerview'\n\tis on (reproducing it is harder than that, but that's the idea).  Patch by\n\tzsugabubus.\n\n\tFixed info= not having higher priority than label= in 'mediaprg'.\n\n\tFixed item not being redrawn on the screen after pressing t key to toggle\n\tits selection.\n\n\tFixed missing screen update after some startup commands.  Thanks to\n\tzsugabubus.\n\n0.10 to 0.10.1-beta (2019-07-15)\n\n\tAdded example of using xsel to sample vifmrc file.  Thanks to\n\tchelovechishko.\n\n\tAdded \"fileroot\" view column, which displays full name of directories and\n\tsymbolic links to directories and only root of name for everything else.\n\tThanks to chelovechishko.\n\n\tAdded :cds command that navigates to path obtained by substitution in the\n\tcurrent path.  Thanks to j-xella.\n\n\tAdded one more invocation format of :colorscheme command, which picks the\n\tfirst available color scheme that is supported by the terminal.  Thanks to\n\tJose Riha (a.k.a. jose1711).\n\n\tAdded :hideui command that hides interface to show previous commands'\n\toutput.  Thanks to dikiy.\n\n\tAdded 'shellcmdflag' option that allows customizing how shell is invoked.\n\tEnables running it in interactive mode, which can make shell aliases and\n\tfunctions work.  Thanks to Ink (a.k.a. inknoir), John Shea (a.k.a.\n\tcoachshea) and randomizedthinking.\n\n\tAdded \"L\" flag to 'shortmess' option to display only last directory in tab\n\tline instead of full path.  Thanks to chelovechishko.\n\n\tAdded caching to quickview for a single file to avoid fileviewer being\n\tcalled more often than needed.  Thanks to agguser.\n\n\tAdded \"rpreview:\" key to 'milleroptions' option that allows enabling\n\tpreview of files.  Thanks to Svadkos and Tom Jansen.\n\n\tAdded ^= operation for string list options.  Thanks to SearyBlue.\n\n\tAdded ^= operation for options of set kind.\n\n\tAdded %pd macro that makes preview output directly affect terminal\n\tcircumventing curses, which could be used to display sixel images.  Thanks\n\tto Tom Jansen.\n\n\tAdded :Vifm command to the plugin as an alias for :EditVifm.  Patch by\n\trbong.\n\n\tAdded optional splitting of the embedded terminal in the\n\tplugin (g:vifm_embed_split).  Has support for Vim's <mods> and <count>.\n\tPatch by rbong.\n\n\tAdded option to the plugin to synchronize working directory of the\n\tembedded instance of vifm with the Vim host (g:vifm_embed_cwd).  Patch by\n\trbong.\n\n\tAdded ability to the plugin to replace netrw with\n\tvifm (g:vifm_replace_netrw and g:vifm_replace_netrw_cmd).  Patch by rbong.\n\n\tAdded OtherWin highlight group for highlighting inactive pane.  Thanks to\n\tJohn Fred Fadrigalan (a.k.a. cevhyruz).\n\n\tAdded indication of entry's availability to :file, :file[x]type and\n\t:fileviewer menus.\n\n\tAdded udisks2 backend to vifm-media script (bundled script for managing\n\tmedia).  Requires python and dbus module for it to be installed (because\n\tudisks2 and dbus are too shitty to be used on command-line).  Thanks to\n\tTykin.\n\n\tAdded FUSE_MOUNT3 filetype format, which is equivalent to FUSE_MOUNT, but\n\tdoesn't perform unmounting.  Helpful to use with something like avfs.\n\tThanks to Jose Riha (a.k.a. jose1711).\n\n\tAdded \"info=\" field to parser of 'mediaprg' output.  It provides custom\n\tmessage for the media.  Patch by zsugabubus.\n\n\tAdded [ and ] bindings to :media menu that provide navigation between\n\tdevices.  Patch by zsugabubus.\n\n\tAdded decorations to :media menu.  Patch by zsugabubus.\n\n\tAdded extcached() builtin function, which can be used to improve\n\tperformance of file queries by caching results of external commands.\n\tThanks to Matthias Braun (a.k.a. mb720).\n\n\tAdded %p macro to 'findprg' option.  It works as a mix between %a and %A\n\tmacros: usually contains arguments passed to :find command, but unlike %a\n\tdoesn't include any predicates.  Thanks to Sitaram Chamarty and Tuan\n\tBui (a.k.a. tuanbass).\n\n\tAdded vifm-media-osx script that is configured to be used (via 'mediaprg')\n\ton OS X.  Patch by Von Welch.\n\n\tResolve symbolic links for mime-type matchers.  Thanks to Vigi.\n\n\tTry to preserve symbolic links in current path when starting vifm by\n\tchecking value of $PWD.  Thanks to Vigi.\n\n\tBetter documentation for TabLine and TabLineSel highlighting groups.\n\tThanks to mwgkgk.\n\n\tAlways preserve tabs on :restart.  Thanks to mwgkgk.\n\n\tClearer documentation/description for :*unmap commands and\n\t'vicmd'/'vixcmd' options.  Thanks to chelovechishko.\n\n\tPreserve extended attributes on copying files.  Thanks to hutou.\n\n\tImproved <silent> to do not forcefully update screen after the mapping if\n\tno screen updates were skipped.\n\n\tTry to avoid superfluous screen updates related to cursor position.\n\n\tImprove documentation of patterns and globs.  Thanks to afsheenb.\n\n\tDon't throw away errors that were ignored by the user, display them at the\n\tend of operation.\n\n\tComplete user name in paths after initial tilde (e.g., `:cd ~r<tab>` =>\n\t`:cd ~root`).\n\n\tConsume input during foreground file operations.  Otherwise it remains\n\tbuffered and is processed after the operation is over, which might not be\n\tthe intent of the user.\n\n\tDrop leading space implicitly added to time columns in views.  Thanks\n\tto laggardkernel.\n\n\tTry to determine widths of printed character more accurately.\n\n\tReduce number of options available on file conflict when source and\n\tdestination are the same to avoid confusion (options that overwrite do\n\tnothing in this case).  Thanks to aleksejrs.\n\n\tRefuse to compare directory against itself via :compare command.  Thanks\n\tto Jose Riha (a.k.a. jose1711)\n\n\tGenerate faster regular expressions by vifm-convert-dircolors.  Thanks to\n\tGomme Bidule.\n\n\tRemember when file doesn't match any file-specific highlighting groups for\n\tbetter performance.  Thanks to Gomme Bidule.\n\n\tRenamed filename filter to \"permanent filter\" consisting of\n\t\"explicit\" (ex-manual) and \"implicit\" (ex-automatic) parts.  Thanks to\n\tSitaram Chamarty.\n\n\tImproved documentation on filters.  Thanks to Sitaram Chamarty.\n\n\tDo not add leading comma to string list options on `set opt+=item`.\n\n\tClear preview before displaying suggestions.  Thanks to ks1c.\n\n\tDo not check for view changes while suggestions are visible.  It can mess\n\tup TUI, especially in combination with preview.  Thanks to ks1c.\n\n\tDo not complain about empty output of a graphics previewer for view mode.\n\n\tUpgraded to PDCurses 3.8 (was 3.4) for Windows.  This allows using 256\n\tcolors inside ConEmu.  Note that ConEmu has issues processing 256 colors\n\ton the last line of the screen, so avoid using them for status line.\n\tThanks to dancread.\n\n\tEnable 'vimhelp' in sample vifmrc file by default.\n\n\tChanged file rename prompt to indicate whether full name or only its\n\troot is being changed.\n\n\tRemoved empty line from :file and similar menus for case when vifm was\n\tconfigured with --disable-desktop-files flag (second time).\n\n\tDocument more details about expansion of FUSE macros.\n\n\tProperly remove FUSE mount points if they are symbolic links.\n\n\tDon't create trash directory on startup if 'trash' is off.  Patch by\n\tzsugabubus.\n\n\tDon't error on trash creation failure due to read-only file system.  Patch\n\tby zsugabubus.\n\n\tError stream from 'mediaprg' isn't considered anymore when deciding if\n\tmounting/unmounting was successful.  While technically an incompatible\n\tchange, it's unlikely to cause any issues.\n\n\tSpawn 'mediaprg' in foreground to allow interactions with the user, like\n\tproviding a password.  Patch by zsugabubus.\n\n\tReact to Enter in :media menu on device lines, mount on \"not mounted\" line\n\tand do nothing otherwise.  Patch by zsugabubus.\n\n\tShow empty lines in :media only if there is enough vertical space.  Patch\n\tby zsugabubus.\n\n\tMake documentation of 'findprg' more readable.\n\n\tFixed `:tabnew ..` not working due to use of uninitialized data.\n\n\tFixed access to uninitialized memory on clearing view after graphical\n\tpreview.\n\n\tFixed possible crashes after certain patterns of using view mode and\n\tclosing tabs.\n\n\tFixed some resources (like output pipe for --choose-files and\n\t--choose-dir) being inherited by child processes.  Thanks to Vigi.\n\n\tFixed CWD of the process not always matching current view right after\n\tstartup.  Patch by Daniel Mueller.\n\n\tFixed global substitution with patterns beginning with a caret again.\n\n\tFixed cursors not being synchronized in compare view when scrolling one of\n\tthem with Ctrl-U or Ctrl-D.\n\n\tFixed command-line completion with non-latin characters.  Thanks to dikiy.\n\n\tFixed crashes when starting vifm with an empty environment (no environment\n\tvariables set).\n\n\tFixed directory-specific color scheme being turn into primary color\n\tscheme on copying from pane with directory-specific cs.\n\n\tFixed directory-specific color scheme being lost on switching location\n\tof views.\n\n\tFixed incorrect cursor positioning on reloading view with\n\tdirectory-specific color scheme.\n\n\tFixed :siblnext/:siblprev not updating quickview.\n\n\tFixed file move confirmation being shown twice in some cases.\n\n\tFixed vifm not making use of large number of color pairs when they are\n\tavailable.  Thanks to Jose Riha (a.k.a. jose1711) and Hans Petter\n\tJansson (a.k.a. hpjansson).\n\n\tFixed completion of :tabnew listing files instead of only directories.\n\n\tFixed postponed view redrawing or reloading being skipped sometimes on\n\tmultiple simultaneous requests.\n\n\tFixed DirEnter autocommand not being called on entering a custom view\n\teven with 'cvoptions' containing \"autocmds\".\n\n\tFixed textual output of graphical previewers not being displayed in view\n\tmode.  Thanks to agguser.\n\n\tFixed graphics leftovers after leaving explore mode.\n\n\tFixed DirEnter autocommand being called with view being in a mixed state\n\tof old and new location.  Thanks to Kendrick Taylor (a.k.a. sixcircuit).\n\n\tFixed issues (could lead to crash) on resizing on Windows.  Thanks to Tim\n\tSchaeffer (a.k.a. Numeromancer).\n\n\tFixed wrapped lines in quickview/view mode sometimes losing their\n\tcolorization.\n\n\tFixed occasional test failures due to use of uninitialized curses.  Thanks\n\tto Diogo Lemos (a.k.a. dmlemos).\n\n\tFixed losing files on failed move operation.  Source files were deleted\n\tassuming they were copied successfully, even when errors regarding some of\n\tthem were ignored by the user.  Thanks to zsugabubus.\n\n\tFixed building incorrect relative paths on symlinking, when path being\n\toperated on contain symlinks.  Resolve to real paths before computing\n\trelative path.  Thanks to zsugabubus.\n\n\tFixed highlighting of the first file entry being used to fill empty part\n\tof miller columns.  Thanks to Konst Mayer (a.k.a. cdlscpmv).\n\n\tFixed reading file list from standard input (`dir /b /s | vifm -`) on\n\tWindows 10.  Thanks to dancread.\n\n\tFixed crash on startup on trying to show a menu in vifmrc (didn't show up\n\tin most setups).  Thanks to Christian Fillion (a.k.a. cfillion).\n\n\tFixed documentation incorrectly stating that background operations can't\n\tbe cancelled.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tFixed color pairs being exhausted on Windows when \"default\" color ends up\n\tbeing used often, this caused highlighting to go awry.  Thanks to\n\tdancread.\n\n\tFixed assertion failure on removing items from file-specific highlighting\n\twith some tabs that use it being hidden.\n\n\tFixed :finish inside :if statements causing a warning on sourcing files.\n\n\tFixed last character of borders in vertical layout not being drawn when\n\tglobal tab line is visible.\n\n\tFixed retrying file overwrite on :copy! not overwriting a file after reason\n\twhy it can't be deleted is gone.\n\n\tFixed outdated comment about 'vimhelp' in sample vifmrc file.  Thanks to\n\tTiago.\n\n\tFixed status bar clearing messages when inside directories with\n\tdirectory-specific color scheme.\n\n\tFixed reading data past initialized region on printing control message of\n\tdialogs.  Patch by zsugabubus.\n\n\tFixed syntax highlighting of angle-bracket notation inside right-hand side\n\tof mappings that contain some :commands (they were highlighted, but for\n\tfewer number of commands).\n\n\tFixed missing syntax highlighting of :let command in right-hand side of\n\tmappings.\n\n0.10-beta to 0.10 (2018-11-11)\n\n\tDisplay list of files in removal confirmation dialog.  Thanks to ovk.\n\n\tSupport embedded terminal in the plugin for newer Vim.\n\n\tReturn \"broken\" from filetype({fnum}, 1) for inaccessible link target.\n\tThanks to filterfalse.\n\n\tAvoid unnecessary reloading file list after pressing \"=\" to enter local\n\tfilter.\n\n\tFixed crash on pasting elements of paths that contain broken UTF-8\n\tsequences into command-line using Ctrl-X + key.  Thanks to Jose\n\tRiha (a.k.a. jose1711).\n\n\tFixed extra unlisted buffer beeing kept around in neovim on :*Vifm\n\tcommands.  Thanks to randomizedthinking.\n\n\tFixed invalid treatment of numerical arguments of filetype().  Thanks to\n\tfilterfalse.\n\n\tFixed crash on previewing contents of directory without execute right in\n\tmiller view.  Thanks to filterfalse.\n\n\tFixed status line highlighting being broken by wide characters.\n\n0.9.1 to 0.10-beta (2018-10-28)\n\n\tAdded support for arbitrary expressions in 'statusline': '%{...}',\n\te.g. '%{&sort}' evaluates to the value of the sort option.  Patch by Dmitry\n\tFrank (a.k.a. dimonomid).\n\n\tAdded TabLine highlight group for highlighting tab line.\n\n\tAdded 'tabscope' option that controls style of tabs.  Thanks to Cosmin\n\tPopescu (a.k.a. cosminadrianpopescu).\n\n\tAdded :tabnew command that creates a new tab.  Thanks to Cosmin\n\tPopescu (a.k.a. cosminadrianpopescu).\n\n\tAdded :tabname command that updates name of the current tab.\n\n\tAdded :tabc[lose] command that closes current tab unless it's the last one.\n\n\tAdded :qa[ll], :wqa[ll] and :xa[ll] commands that always try to exit vifm no\n\tmatter how many tabs are open.\n\n\tAdded gt and gT normal mode shortcuts that switch between tabs in both\n\tdirections.\n\n\tAdded 'showtabline' option that controls visibility of tab line.\n\n\tAdded TabLineSel highlight group for highlighting tip of the selected tab\n\ton the tab line.\n\n\tAdded :goto command that navigates to specified file/directory.  Thanks to\n\tmateusz28 and Dmitry Frank (a.k.a. dimonomid).\n\n\tAdded addition and subtraction operations to the parser.\n\n\tAdded tabpagenr() function that retrieves number of current or last tab\n\tpage.  Thanks to filterfalse.\n\n\tAdded :tabm[ove] command that moves tabs.  Thanks to filterfalse.\n\n\tAdded \"M\" flag to 'shortmess' option to control shortening of titles in\n\twindows of terminal multiplexers created by vifm down to file name instead\n\tof using full path.  Thanks to mateusz28.\n\n\tAdded 'histcursor' option that gives partial control over when cursor is\n\tpositioned in accordance with record of directory history.  Thanks to\n\tfilterfalse and Dmitry Frank (a.k.a. dimonomid).\n\n\tAdded 'quickview' option that controls visibility of quick view (:view).\n\tThanks to Jochen Schweizer (a.k.a. durcheinandr).\n\n\tAdded fnameescape() builtin function, which can be used to escape paths on\n\tconstruction of :commands.  Thanks to filterfalse.\n\n\tAdded 'syncregs' option which defines group of instances that share\n\tregisters.  Patch by Ma_Sys.ma.\n\n\tAdded <insert> angle bracket notation.  Thanks to j-xella.\n\n\tAdded r key to :undolist menu, which resets position in the undo list to\n\tgroup under the cursor.  Thanks to mini-turtle.\n\n\tAdded grouping via parentheses to expressions.  Thanks to Konst\n\tMayer (a.k.a. cdlscpmv).\n\n\tAdded User1..User9 highlight groups and corresponding %[0-9]* 'statusline'\n\tmacro, which makes it possible to colorize parts of status line\n\tdifferently.  Thanks to GeorgeHJ.\n\n\tAdded <silent> :*map argument that postpones UI updates until RHS is\n\tcompletely processed.  Probably not all updates are postponed, to be\n\timproved as unhandled cases are discovered.\n\n\tAdded <c-@> angle bracket notation making it possible to map Ctrl-Space\n\tkey.  Thanks to anonymous at Vifm Q2A site.\n\n\tAdded second optional parameter to filetype() builtin function that is\n\ttreated as a boolean and specifies whether symbolic links should be\n\tresolved.\n\n\tAdded <wait> :*map argument, which resolves prefix conflicts of\n\tuser-defined mappings and builtin keys in favour of user-defined mappings.\n\tThanks to Paweł Smolak (a.k.a. psmolak).\n\n\tAdded :regular command that leaves custom view.  Thanks to gammaray.\n\n\tAdded :media menu that can list and perform basic operations on removable\n\tmedia (requires helper to be available, see 'mediaprg').  Only for *nix\n\tsystems.  Thanks to Bruce Hunsaker (a.k.a. hunsakerbn) and others.\n\n\tAdded 'mediaprg' option that can be used to specify helper for managing\n\tremovable media.  One such helper with support of udevil and udisks is\n\tprovided.  Only for *nix systems.\n\n\tAdded :tabn[ext] and :tabp[revious] commands, which work as gt and gT\n\tnormal mode shortcuts correspondingly.  Thanks to Cosmin Popescu (a.k.a.\n\tcosminadrianpopescu).\n\n\t:quit, :wq, :exit, :xit, ZZ and ZQ now try to close current tab before\n\tclosing the application.\n\n\tMore explicit documentation about leaving custom views.  Thanks to\n\ttagwint.\n\n\tUse historical cursor position upon startup by default when 'autochpos' is\n\ton, this is now independent from \"savedirs\" in 'vifminfo' option.  Thanks\n\tto filterfalse.\n\n\tUse historical cursor position on navigating to a mark that doesn't specify\n\ta file by default when 'autochpos' is on.  Thanks to filterfalse.\n\n\tSort entries of :bmarks menu.  Thanks to anonymous at Vifm Q2A site.\n\n\tDrop unfinished if-else statements on leaving command-line mode.  Thanks\n\tto Marcin Kurczewski (a.k.a. rr-).\n\n\tMove cursor after p and P to one of files that were moved or to a cause of\n\tlast conflict.  Thanks to filterfalse and ranousse.\n\n\tLess strict parsing of output of external command by :[un]select commands.\n\tSimilar to %u/%U and menus allow <file>[:[<line>:[<col>:]] <description>]\n\tformat.  Thanks to j-xella.\n\n\tSupport italics in quickview/view mode and in :highlight when curses\n\timplementation provides corresponding extension.  PDCurses doesn't implement\n\tit on Windows.  Fallback is to use \"reversed\" attribute.  Thanks to\n\tGeorgeHJ.\n\n\tEscape \"=\" at the beginning of paths (has special meaning in zsh).  Thanks\n\tto agguser.\n\n\tMore accurate error message on handling non directories passed to :cd.\n\n\tSlightly better formatting in :undolist menu.\n\n\tReport missing closing quote for \"\"-strings in expressions.\n\n\tMake :echo and :execute report parsing errors in more detail than just\n\t\"invalid expression\".\n\n\tUpdate status line when cursor is moved on typing local filter when\n\t'incsearch' is on.\n\n\tEmpty input stream before asking user for return on :!! or when :!command\n\tends with an error.\n\n\tCorrect terminal state before asking user to press return after execution\n\tof an external command.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tDo not reset selection before executing a :command from :commands menu.\n\tThanks to Jose Riha (a.k.a. jose1711).\n\n\tAllow passing numerical positions to filetype() function.\n\n\tTry to preserve file owner/group on copying.  Thanks to willemw12.\n\n\tDisallow registering user-defined commands with \"!\" or \"?\" suffix that\n\twon't be called, due to existence of a builtin that accepts custom\n\tseparators (they have higher priority than user-defined commands).\n\n\tIssue a warning if file system lists several files with identical names in\n\tthe same directory.  It used to be assumed that it can't happen.  Thanks to\n\tJose Riha (a.k.a. jose1711).\n\n\tMake :cabbrev and :cnoreabbrev always treat bar (`|`) as part of their\n\targuments, just like :*map commands do.  Thanks to filterfalse.\n\n\tMake :tree! toggle view in and out of tree mode.  Thanks to gammaray.\n\n\tFixed preview command not being run with correct working directory on\n\tstartup (e.g., when preview was on in vifminfo).\n\n\tFixed completion for commands that follow \"|\" when they are preceded by\n\tcommands with complicated syntax like :substitute.\n\n\tFixed \"|\" not preceded with space being ignored as command separator for\n\tsome commands.\n\n\tFixed memory leak on `:highlight clear {file-specific-group}`.\n\n\tFixed file-specific highlighting being added even when :highlight command\n\tcontains syntax error.\n\n\tFixed highlight group being partially updated by :highlight command with\n\tincorrect syntax.\n\n\tFixed parsing of :highlight command when tabulation is used to separate\n\targuments.  Thanks to Robert Pergl (a.k.a. perglr).\n\n\tFixed number of elements in a directory (\"nitems\") not being updated.\n\tThanks to filterfalse.\n\n\tFixed local filter not being applied to the view after q=.  Thanks to\n\tfilterfalse.\n\n\tFixed hang of a remote instance after receiving at least two consecutive\n\tpackages that cause an error message to be displayed.  Thanks to\n\tfilterfalse.\n\n\tFixed absence of error on doing `--remote` to a server that doesn't exist.\n\n\tFixed flickering on Windows.  Thanks to Alexandre Viau and\n\trandomizedthinking.\n\n\tFixed other view sometimes not being updated on scrolling via Ctrl-F/B keys\n\tin cases like compare view or when quickview is on.  Thanks to Alexandre\n\tViau.\n\n\tFixed other view not being updated in visual mode in cases like compare view\n\tor when quickview is on.\n\n\tFixed search highlight in menu not being reset after clearing the pattern.\n\n\tFixed doubling of \"%\" on expanding environment variables in arguments of\n\t:commands.  Thanks to filterfalse.\n\n\tFixed canonicalization of paths that include entries that end with\n\tmultiple dots.  `/dir../..` was not turned into `/` since 0.8.2.  Thanks\n\tto aleksejrs.\n\n\tFixed part of dialog messages being still visible in quickview after dialog\n\twas closed.  Thanks to Alexandre Viau.\n\n\tFixed ruler not being displayed when cursor is on a fake entry in :compare\n\tview.\n\n\tFixed crash due to linking to wrong version of libtinfo.  Thanks to Ruslan\n\tOsmanov (a.k.a. rosmanov) and Chema Alonso Josa (a.k.a. nimiux).\n\n\tFixed stdin stream not being closed for commands run for obtaining their\n\toutput since previous release (e.g. `!read i%q` would wait for input).\n\tAlso close it the same way on Windows too.\n\n\tFixed graphical applications on Windows not being detected as such, which\n\tcaused vifm to wait until they finish running.  Was broken since 0.9.\n\tThanks to r0ck.\n\n\tFixed cursor marker in inactive window not being highlighted according to\n\tCmpMismatch highlight group in :compare mode.\n\n\tFixed missing quote in an expression error message not displaying the\n\tbroken string.\n\n\tFixed syntax highlighting of strings in double quotes and comments in :let\n\tstatements.\n\n\tFixed status line showing information about previously selected file after\n\tclearing search pattern when 'incsearch' is on.\n\n\tFixed status bar mode message not being changed from \"-- VISUAL --\" to\n\t\"-- VISUAL (append) --\" on pressing av in visual mode.  Thanks to Paweł\n\tSmolak (a.k.a. psmolak).\n\n\tFixed memory corruption on clearing user defined :commands from a user\n\tdefined command.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tFixed selection issues in some terminals when in command-line mode.  Thanks\n\tto Jose Riha (a.k.a. jose1711).\n\n\tFixed slowed down directory traversal due to listing contents of\n\tdirectories internally.  Thanks to Coco 17dec.\n\n\tFixed assertion failure on parsing lists of expressions with broken\n\tsyntax.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tFixed parsing state not being properly reinitialized, which could cause\n\tunstable parsing outcome for lists of expressions.  Thanks to Jose\n\tRiha (a.k.a. jose1711).\n\n\tFixed error messages from put operation being postponed until the next put\n\toperation.  Got broken in 0.9.\n\n\tFixed memory leak on d/D normal mode keys if deletion wasn't confirmed.\n\n\tFixed confirmation not being requested on :delete.  Thanks to anonymous at\n\tVifm Q2A site.\n\n\tFixed 'relativenumber' being effectively ignored in inactive pane on\n\tUI redraw from active pane.  Thanks to filterfalse.\n\n\tFixed bar (`|`) being treated as command separator in /pattern/ passed to\n\t:[un]select.  Thanks to filterfalse.\n\n\tFixed abbreviations of :commands with `!` or `?` as custom separator (e.g.\n\t`:s!a!b!`) being resolved incorrectly.\n\n\tFixed bar (`|`) being treated as command separator in /pattern/ passed to\n\t:commands using custom separators (e.g., in `:s!//|//!`).\n\n\tFixed bar (`|`) not being treated as command separator in commands which\n\tcan take /pattern/ arguments.\n\n\tFixed crash on feeding multi-byte string to :commands that fail to convert\n\tit to wide representation.  Thanks to Jose Riha (a.k.a. jose1711).\n\n\tFixed non-empty read-only directories not being deleted by :empty command.\n\n0.9.1-beta to 0.9.1 (2018-02-05)\n\n\tFixed :clone and :copy refusing to copy broken symbolic links, even though C\n\tand p keys copy them.\n\n\tFixed C key not checking readability of a single unselected file, like\n\t:clone does.\n\n\tFixed possible crash on `:highlight clear {pattern}` and highlights not\n\tbeing updated.\n\n\tFixed reported free space on *nix. (make it consistent with what 'df'\n\treports).  Patch by Dmitry Frank (a.k.a. dimonomid).\n\n0.9 to 0.9.1-beta (2018-01-22)\n\n\tAdded \"inode\" sorting key, which sorts entries by inode number.  Thanks to\n\teco0414.\n\n\tAdded retry/ignore/abort prompt for file copying and directory/file/symlink\n\tcreation when 'syscalls' is on.  Thanks to einhander.\n\n\tAdded AuxWin highlight group for highlighting auxiliary parts of windows.\n\n\tAdded 'millerview' option that enables cascading columns interface for the\n\tview.  Thanks to sudo-nice.\n\n\tAdded 'milleroptions' option that configures miller view.\n\n\tAdded [r/]r/[R/]R normal mode shortcuts that map to :siblprev and :siblnext\n\twith and without wrapping correspondingly.  Thanks to filterfalse.\n\n\tAdded 'lsoptions' option that allows to get transposed grid in ls-like\n\tview.  Thanks to Dmitry Frank (a.k.a. dimonomid).\n\n\tAdded ability to remove filename-specific highlighting rules with\n\t`:highlight clear {pattern}`.  Thanks to aleksejrs.\n\n\tAdded completion of filename-specific highlight groups for :highlight\n\tcommand.\n\n\tAdded term() builtin function, which differs from system() only by its\n\tability to run interactive applications without confusing vifm's\n\tinteractions with the terminal.  Thanks to Dmitry Frank (a.k.a. dimonomid).\n\n\tAdded 'previewprg' option, which can be used to override :fileviewer\n\tcommands either temporarily or permanently.  Thanks to svenn71.\n\n\tAdded v:count and v:count1 builtin variables.  They are assigned to count\n\tpassed to : command.\n\n\tAdded %x macro to 'rulerformat' (and thus to 'statusline') as new name for\n\t%-, which conflicts with alignment specification and requires explicit\n\twidth specifier (%0-).  Thanks to Marcos Cruz.\n\n\tAdded :histnext/:histprev commands, which are analogous to Ctrl-I/Ctrl-O.\n\tPatch by Dmitry Frank (a.k.a. dimonomid).\n\n\tAdded {root} key to 'viewcolumns' option (complements {ext}).  Thanks to\n\tOleg Gordienko (a.k.a. gordio).\n\n\tAdded \"u\" flag to the 'tuioptions' option.  It enables use of Unicode\n\tcharacters in the TUI (Unicode ellipsis instead of \"...\").  Thanks to Oleg\n\tGordienko (a.k.a. gordio).\n\n\tAdded \"foldsubkeys\" value to the 'suggestoptions' option.  It folds\n\tmultiple suggestions with common prefix into one entry.  Thanks to\n\tAndreaHasani.\n\n\tAdded `--remote-expr` command-line option, which gives ability to query\n\tstate of an instance.  Thanks to Marcin Kurczewski (a.k.a. rr-).\n\n\tChanged :filter command to accept pattern (//, ////, {} or {{}}).  Thanks\n\tto rbong.\n\n\tImproved parsing of optional numbers in vifminfo.  Thanks to Aris\n\tFergadis (a.k.a. afergadis).\n\n\tIndicate preview created with %q with \"Command: cmd\".\n\n\tBetter detection of write errors on file copying.  The error was reported,\n\tbut it wasn't treated as a hard error in a specific case related to caching.\n\n\tMade :siblnext and :siblprev commands respect dot and name filters.\n\n\tDisabled spell checking of vifm files in Vim except for comments.\n\n\tH/M/L keys in ls-like view now account for columns.\n\n\tMade :siblnext and :siblprev accept [count] range.  Thanks to filterfalse.\n\n\tMade :tree pick up list of files from custom view.  Thanks to filterfalse.\n\n\tDo not go to start of line on Ctrl-U/Ctrl-D/Ctrl-F/Ctrl-B/G in ls-like view.\n\n\tDocumented more details about 'vicmd' and 'vixcmd' options.  Thanks to\n\tSebastian Cyprych.\n\n\tMade :highlight update file-specific group on exact match of the pattern\n\tinstead of appending new rule.  Thanks to aleksejrs.\n\n\tExtend width of the cursor in ls-like view to the width of the cell.\n\tThanks to Dmitry Frank (a.k.a. dimonomid).\n\n\tDon't trigger DirEnter event with previous directory on startup when list\n\tof files is specified on stdin.  Thanks to filterfalse.\n\n\tImproved performance of mime-type detection when using libmagic (now might\n\tbe about seven times faster by avoiding reinitialization of the library).\n\n\tDon't force file list reload after `:!` and rely on change detection.\n\tThis should result in somewhat better performance.  Thanks to opennota.\n\n\tDuplicate status bar error in dialog that reports sourcing error.  Will\n\tneed to get rid of errors on status bar later.\n\n\tInstead of invalidating directory size previously calculated via ga/gA on\n\tdetecting changes in the directory recalculate its size and propagate\n\tupdate through its parents.  Thanks to filterfalse.\n\n\tRemove empty directories which are specified in 'trashdir' with %r and/or\n\t%u automatically on :empty.  Thanks to Marcin Kurczewski (a.k.a. rr-).\n\n\tFixed positioning cursor in directory :history when inside custom view.\n\tThanks to filterfalse.\n\n\tFixed compilation of modes/view.c when build is configured with\n\t`--disable-extended-keys`.  Thanks to Bearcat M. Şándor (a.k.a.\n\tbearcatsandor).\n\n\tFixed crashes discovered via fuzzing, most of which require rather\n\tunusual kind of input.\n\n\tFixed running commands with arguments on Windows when 'shell' isn't\n\tcmd.exe.\n\n\tFixed \"..\" not being preserved in path loaded into custom view.  Thanks to\n\tfilterfalse.\n\n\tFixed directory size in status line.  Patch by Dmitry Frank (a.k.a.\n\tdimonomid).\n\n\tFixed extra width of inactive cursor in ls-like view when 'classify'\n\tcontains Unicode characters.\n\n\tFixed stopping of put operation after copying symbolic link that's broken\n\ton destination.  Thanks to filterfalse.\n\n\tFixed formatting of root directory in custom view, it displayed too many\n\tslashes.  Thanks to filterfalse.\n\n\tFixed not recording last visited directory on leaving custom view.  Thanks\n\tto filterfalse.\n\n\tFixed displaying of wild menu popup when status bar is more than single\n\tline in height.\n\n\tFixed weird view scrolling after zO (hard to notice) and Ctrl-A/X.\n\n\tFixed assertion failure on renaming files with Ctrl-A/Ctrl-X when cursor\n\tis positioned on certain file from the range.\n\n\tFixed a \"race\" with file system when we could load outdated file list and\n\tthus miss some file system updates.\n\n\tFixed hardware cursor blinking in view for interactive queries.\n\n\tFixed handling Tab and Shift-Tab on search prompt as if they are command\n\tprompts.\n\n\tFixed horrible flickering of multiline status bar for interactive queries.\n\n\tFixed :normal command resetting selection.  Thanks to filterfalse.\n\n\tFixed consuming 100% of CPU on certain pattern of running background\n\tprocesses.  Thanks to petRUShka.\n\n\tFixed losing error message from a short-lived background processes when\n\tlong-lived one is present.\n\n\tFixed centering title of attributes change dialog (cp normal mode command)\n\tfor non-ascii file names.\n\n\tFixed turning quickview into explore view when preview command doesn't\n\tcontain macros.  Was broken since 0.8.\n\n\tFixed the plugin in neovim.  Patch by John Shea (a.k.a. coachshea).\n\n\tFixed CWD of the process not matching current view after vifm picked up\n\tchange in file system.  Patch by Daniel Mueller (a.k.a. d-e-s-o).\n\n\tFixed cloning of files like `.name` to produce `.name(1)` instead of\n\t`(1).name`.  Thanks to filterfalse.\n\n0.9-beta to 0.9  (2017-06-18)\n\n\tEscape $ and ` in %\" macros on *nix systems.  Thanks to filterfalse.\n\n\tDon't use :filextype in sample vifmrc for OS X, we can't tell whether\n\tgraphical system is running.  Thanks to piotryordanov.\n\n\tDo not add extra slash to path on picking files in the root.  Thanks to\n\tfilterfalse.\n\n\tProperly escape newline when passing things into shell.  Thanks to\n\tfilterfalse.\n\n\tView current directory on \"..\" for quickview/view mode only if no viewer\n\tmatches such entry.\n\n\tExpand macros in :[un]select !{command}.  Thanks to Michael Corvin.\n\n\tUpdate the other view after file deletion (that file might be visible\n\tthere too).\n\n\tExecute startup commands in directory of current pane.\n\n\tFixed ruler being updated when it shouldn't even be visible.  Thanks to\n\tfilterfalse.\n\n\tFixed incorrect existence check for files that end with forward slash on\n\t*nix.  Thanks to filterfalse.\n\n\tFixed treating `--select -` as `-` on command-line.  Thanks to\n\tfilterfalse.\n\n\tFixed ignoring `-` when `--no-configs` is specified.  Thanks to\n\tfilterfalse.\n\n\tFixed choosing files in custom views with --on-choose.\n\n\tFixed redrawing view after loading custom list in case when cursor is\n\tpositioned on \"..\" entry.  Thanks to filterfalse.\n\n\tFixed restoring of excluded items from custom view if local filter isn't\n\tempty.  Thanks to filterfalse.\n\n\tFixed incorrect cursor positioning on removing elements from custom view\n\twith local filter.\n\n0.8.2 to 0.9-beta (2017-06-04)\n\n\tRemoved -Werror in tests from non-developer builds.\n\n\tAdded tree view.  Thanks to filterfalse and Kornel.\n\n\tAdded :tree command that converts current view into a tree.\n\n\tAdded :dmap, :dnoremap and :dunmap commands to configure mappings in\n\tdialogs.  Thanks to Sassan Haradji (a.k.a. sassanh).\n\n\tAdded \"tree\" parameter to :sync! that enables synchronization of tree\n\tview.  Thanks to filterfalse.\n\n\tAdded :compare command to perform comparison in one or two directory\n\ttrees.  Thanks to anonymous on SourceForge discussion forum and aleksejrs.\n\n\tAdded CmpMismatch highlight group for highlighting mismatched files on\n\tside-by-side comparison.\n\n\tAdded %Iu and %IU macros, which are %u and %U equivalents, but work better\n\tif external command is interactive and changes terminal state.\n\n\tAdded v:servername variable, which provides access to server name of the\n\trunning instance used by --remote feature.  Thanks to Marcin\n\tKurczewski (a.k.a. rr-).\n\n\tAdded dd key to :jobs menu, which requests cancellation of background\n\toperation.  Background :put, :copy, :move, :delete, size calculation with\n\tga and gA as well as applications started in background can be cancelled\n\tthis way.  Thanks to blurm.\n\n\tAdded 'dotfiles' (local) option, which exposes dot files filter as an\n\toption.  Thanks to filterfalse.\n\n\tAdded %q macro that redirects command output into quick view.  Thanks to\n\tsvenn71.\n\n\tAdded shell completion for bash and zsh.  Patches by filterfalse.\n\n\tAdded e key to :jobs menu that displays list of errors issues by that\n\tjobs, if any.  h key goes back to :jobs menu.\n\n\tAdded :copen command to restore last menu that supports navigation.\n\tThanks to Sassan Haradji (a.k.a. sassanh).\n\n\tAdded % key to menu mode, which navigates to [count]-th percent of the\n\tlist.\n\n\tAdded 'caseoptions' option that enables more fine-grained control over\n\tcase sensitivity.  Thanks to Alexandru Geana (a.k.a. alegen).\n\n\tAdded [d and ]d shortcuts to navigate to previous/next directory entry.\n\tThanks to filterfalse.\n\n\tAdded [s and ]s shortcuts to navigate to previous/next selected entry.\n\tThanks to filterfalse.\n\n\tAdded [z and ]z shortcuts to navigate to first/last sibling in a tree.\n\tThanks to filterfalse.\n\n\tAdded zj and zk shortcuts to navigate to next/previous directory sibling\n\tin a tree.  Thanks to filterfalse.\n\n\tAdded [c and ]c shortcuts to navigate to previous/next mismatch in\n\tdirectory comparison view.  Thanks to filterfalse.\n\n\tAdded :screen! form that enables terminal multiplexers support (instead of\n\ttoggling it as :screen does).  Thanks to Marcos Cruz.\n\n\tAdded do and dp keys to compare views for applying changes in files.\n\tThanks to filterfalse.\n\n\tAdded %f 'statusline' macro that inserts relative path of the entry, which\n\tmight be useful for non-regular views.  Thanks to filterfalse.\n\n\tAdded meaning to [count] of cp shortcut, which is now processed as\n\tnumerical argument for non-recursive `chmod` command.  Thanks to sudo-nice.\n\n\tAdded 'sizefmt' option that configures formatting of human-friendly size.\n\tThanks to sudo-nice.\n\n\tAdded :siblnext and :siblprev commands.  They change directory to next or\n\tprevious sibling directories of current path (in global sorting order of\n\tcurrent pane).  Thanks to sudo-nice.\n\n\tAdded %D 'statusline' macro that displays path of the other pane in\n\tsingle-pane layout.  Thanks to sudo-nice.\n\n\tAdded %T 'statusline' macro that displays symbolic link target.  Thanks to\n\tsudo-nice.\n\n\tAdded %a 'statusline' macro that displays amount of free space available at\n\tcurrent partition.  Thanks to sudo-nice.\n\n\tChanged size formatting to round from zero (matches behaviour of e.g.\n\t`ls`).\n\n\tEnable restoring files from trash from custom views.\n\n\tView current directory on \"..\" for quickview/view mode.  Thanks to\n\tfilterfalse.\n\n\tMake :put, :touch and :mkdir accept [line] range, which can be used to\n\tspecify target position in tree-view.  Thanks to filterfalse.\n\n\tEnable cancellation of tree preview construction.  Thanks to filterfalse.\n\n\tPartially return progress report for menus.  Was disabled by introduction\n\tof null byte heuristic.\n\n\tAccept paths in :touch, not just file names.  Thanks to filterfalse.\n\n\tConsider trailing slash for directories or symbolic links that point to\n\tdirectories in 'classify' patterns by file name (e.g., this works now:\n\t`[::*/::]`).\n\n\tDo not resolve symbolic links in directory preview.  Thanks to\n\tfilterfalse.\n\n\tgetpanetype() got new value (\"tree\") to indicate tree-view.  Thanks to\n\tfilterfalse.\n\n\tDisallow applying :chmod on \"..\" entry.\n\n\tDisallow moving/copying/linking files into custom view (put is forbidden,\n\tso makes sense to forbid these too).\n\n\tDisallow selecting \"..\" entry with :select command.\n\n\tDisplay path to the conflicting file in conflict resolution dialog.\n\n\tProvide better messages on i/o errors with 'syscalls'.  Thanks to Behrooz.\n\n\tRemove background commands from the :jobs list when corresponding\n\tprocesses get terminated by a signal.\n\n\tUse <exe file location>/data/colors as global storage of color schemes on\n\tWindows.  Thanks to r44083.\n\n\tDon't disable preview on `--remote --select` if it doesn't hide updated\n\tpane.  Thanks to Marcin Kurczewski (a.k.a. rr-).\n\n\tHandle terminal resize on Windows 10.  Thanks to randomizedthinking.\n\n\tEscape first tilde in paths that go to the shell.  Thanks to Marius\n\tSchmidl.\n\n\tMake +{num} and similar options work (actually affect cursor of the view).\n\tThanks to filterfalse.\n\n\tTreat \"+\" option the same way as Vim (like :$).  Thanks to filterfalse.\n\n\tRead error output of background commands independently of main\n\tthread (prevents blocking of tools which produce huge amount of output).\n\tThanks to Stas Malavin.\n\n\tLimited maximum height of message popup, just print how many lines we're\n\tskipping.\n\n\tNo vifminfo merging if file change isn't detected.  Might result in faster\n\tquitting in some cases.  Not accounting for some changes is still possible\n\twhen multiple instances quit simultaneously, but same could happen without\n\tthis change.\n\n\tImprove performance of startup and exit by omitting file existence checks.\n\tThe cost is possibly old files staying in the state, but it should be for\n\tlong time.  Thanks to Marcin Kurczewski (a.k.a. rr-).\n\n\tResolve symbolic link for listing associated programs from desktop-files.\n\tThanks to filterfalse.\n\n\tDon't move cursor off \"../\" before start of local filtering.  Thanks to\n\tfilterfalse.\n\n\tPut hardware cursor according to current mode and cursor within it.\n\tThanks to Tyler Spivey.\n\n\tMade search consider trailing slash for directories and symbolic links that\n\tpoint to directories.  Thanks to filterfalse.\n\n\tMade IPC unit more fault-tolerant regarding inability to create files.\n\tThanks to filterfalse.\n\n\tMake temporary rename files accessible only by the user.  Thanks to\n\taleksejrs.\n\n\tBetter handling of setting 'fillchars' to incorrect or excessive value.\n\n\tPrevent clearing filters on zM if there were no zO preceding it.  Thanks\n\tto sudo-nice.\n\n\tWork around :drop command being disabled in the plugin.  Thanks to Phil\n\tRunninger.\n\n\tTry harder to move files by not giving up on getting permission error,\n\twhich isn't always a reliable indication of actual permission error.  Only\n\twhen 'syscalls' is on.  Thanks to Marcin Kurczewski (a.k.a. rr-).\n\n\tImproved sorting performance in the presence of huge amount of symbolic\n\tlinks.  Thanks to Marcin Kurczewski (a.k.a. rr-).\n\n\tProperly recover from invalid/strange UNC root on Windows.  Don't end up\n\twith empty filelist.\n\n\tFixed redirecting stdout of background commands to /dev/null, which could\n\tbe unwritable descriptor.  Thanks to c02y.\n\n\tFixed inconsistent file name demangling on moving files from trash in\n\tcustom view.\n\n\tFixed decreasing number of selected files after zd operation.\n\n\tFixed wrong whole value completion of string list options if entered value\n\tcontains a comma (,).\n\n\tFixed displaying of previous status bar message on 'hlsearch' 'noincsearch'\n\twhen match occurs.  Thanks to filterfalse.\n\n\tFixed incorrect completion of non-first option name of the :set command.\n\n\tFixed assertion failure on file rename of specific pattern (renaming files\n\t1, 2 via `:rename 2 3` is the shortest example).  Thanks to aleksejrs.\n\n\tFixed rejecting to clone files in custom view, when name is specified\n\texplicitly (form without arguments was properly disabled before).\n\n\tFixed changing attributes of files in custom views on Windows.\n\n\tFixed counting selected files after `:invert s` if there is \"..\" entry.\n\n\tFixed :pushd and :dirs in custom views.\n\n\tFixed ruler update on `--remote --select`.  Thanks to Marcin\n\tKurczewski (a.k.a. rr-).\n\n\tFixed small leak after aborting on name conflict.\n\n\tFixed possible data loss on moving/copying files over their own parent or\n\tchild directories via p, P, :move, :copy, :alink and :rlink.  Thanks to\n\tMarius Schmidl.\n\n\tFixed concatenation of error lists without separator (newline).  Thanks to\n\tBehrooz.\n\n\tFixed possible memory leak on querying file mime-type (when it wasn't\n\tobtained).\n\n\tFixed buffer overflow on obtaining file mime-type.  Thanks to Abdó\n\tRoig-Maranges (a.k.a. aroig).\n\n\tFixed previewing symbolic links, which not always were resolved to their\n\ttarget (even reachable one).  Thanks to Abdó Roig-Maranges (a.k.a. aroig).\n\n\tFixed bogus \"fuse mount was cancelled\" message on %FOREGROUND mount\n\tfailing.\n\n\tFixed determining location of distributed files on Windows (help file and\n\tsample vifmrc weren't installed).  Thanks to r44083.\n\n\tFixed drawing file list in single-pane layout when 'scrollbind'\n\tset (parts of the other view were visible when 'relativenumber' is set).\n\tThanks to filterfalse.\n\n\tFixed resetting custom view title to \"(null)\" when loading another custom\n\tview in the same pane failed.\n\n\tFixed restoring custom list on removing or changing local filter when\n\t'incsearch' is off.\n\n\tFixed losing original custom list of files after failed load of new custom\n\tlist if local filter isn't empty.\n\n\tFixed some blinking on redrawing screen when middle border isn't visible.\n\n\tFixed cloning of broken links.\n\n\tFixed assertion renaming of file into name of broken link.  Thanks to\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tFixed F, f, ; and , keys in visual mode.\n\n\tFixed detection of too-small-terminal state.\n\n\tFixed memory leak of forgotten history entries after going back in\n\thistory.\n\n\tFixed updating progress when performing operations on empty files.\n\n\tFixed selection of current file on cancelled go or gp.  Thanks to\n\tfilterfalse.\n\n\tFixed treating characters like š and ć (with low Unicode values, just\n\tabove 0x100) as functional keys on input.  Thanks to granderil.\n\n\tFixed recursive permanent removal of directories on Windows when\n\t'syscalls' isn't set, which could fail for no reason.\n\n\tFixed inconsistency of using environment variables from different\n\tsources (internal state versus runtime).  Thanks to Jochen\n\tSchweizer (a.k.a. durcheinandr).\n\n\tFixed n/N not restarting search in custom views.\n\n\tFixed full path patterns ({{globs}} and //regexp//) not working with file\n\thighlighting in :highlight.  Thanks to granderil.\n\n\tFixed view columns when column with dynamic alignment is not the first\n\tone.\n\n\tFixed :pwd in custom views to make it display main directory (didn't\n\tdisplay anything).  Thanks to filterfalse.\n\n\tFixed :noremap, which didn't accept ! and didn't reject less than two\n\targuments.\n\n\tFixed backslash in arguments for :*[un]map commands (required \\ to be\n\twritten as \\\\).  Thanks to filterfalse.\n\n\tFixed use of uninitialized memory on parsing commands that end with\n\tbackslash.\n\n\tFixed 'wordchars' parsing to process range end as inclusive.  Thanks to\n\tfilterfalse.\n\n\tFixed 'wordchars' parsing to handle non-ascii input without memory\n\tviolation.\n\n\tFixed incorrect 'sort' state after :restart.  Thanks to sudo-nice.\n\n\tFixed possible skewing of relative files positions in history by :restart.\n\n\tFixed off-by-one error on reducing history size, which could led to\n\tloosing last directory history element.\n\n\tFixed parsing of 'classify' when it includes an entry with empty prefix.\n\tThanks to filterfalse.\n\n\tFixed navigation from menus on Windows.\n\n\tFixed tilde expansion and expansion of environment variables when\n\tchecking command existence.  Thanks to sudo-nice.\n\n\tFixed displaying separator in `:*map prefix` menus.  Thanks to nicodebo.\n\n\tFixed truncation of file names of length NAME_MAX in some cases.  Thanks\n\tto aleksejrs.\n\n\tFixed crash due to assertion on answering y/n/Enter/Ctrl-C in prompt\n\tdialog that doesn't provide such options.  Thanks to aleksejrs.\n\n\tFixed inconsistent behaviour of :EditVifm in plugin with regard to\n\t\"[No Name]\" buffer.  Thanks to Phil Runninger.\n\n\tFixed operations which involve changing current working directory on\n\tWindows when path includes non-latin characters.  Thanks to\n\tkhaoos-abominable.\n\n\tFixed processing of non-latin characters provided in command-line options\n\ton Windows.\n\n\tFixed processing of environment variables containing non-latin characters\n\ton Windows.\n\n\tFixed printing ^L character for --choose-dir on Windows.  Thanks to Phil\n\tRunninger.\n\n\tFixed updating CWD on switching views.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tFixed plugin in versions of Vim where :argadd without argument doesn't\n\twork.  Thanks to eco0414.\n\n0.8.2-beta to 0.8.2 (2016-07-16)\n\n\tAdded support for matchit to filetype plugin.  Patch by filterfalse.\n\n\tFixed processing of root directory (completion, :cd).  Thanks to\n\tfilterfalse.\n\n\tFixed completion of commands after :!.  Thanks to filterfalse.\n\n\tFixed formatting/wording/outdated notes in documentation.  Patches by\n\tfilterfalse.\n\n0.8.1a to 0.8.2-beta (2016-07-02)\n\n\tAdded highlighting of search matches in menus.\n\n\tAdded :noh[lsearch] command to menu mode.\n\n\tAdded quick shortcuts to dialogs.  Patch by oo-.\n\n\tAdded 'wildstyle' option to control the way wild menu is displayed.\n\tEnables displaying it as a menu with one item per line.  Thanks to\n\tsanthoshr and octos.\n\n\tAdded 'suggestoptions' option to control displaying of suggestions.\n\n\tAdded description of builtin keys to :map menus.\n\n\tAdded SuggestBox highlight group for key suggestion box.\n\n\tAdded :write command to menus, that writes all menu lines into specified\n\tfile.  Thanks to gtors.\n\n\tAdded support of patterns to 'classify' option, so that files can now be\n\tdecorated based on their names.  Thanks to elricbk.\n\n\tAdded \"filelist\" parameter to :sync! that enables synchronization of\n\tcustom view.  Thanks to filterfalse.\n\n\tAdded 'cvoptions' option to control when entering/leaving custom views is\n\tconsidered to be equal to entering/leaving directories.  Thanks to\n\tfilterfalse.\n\n\tAdded \"target\" sorting key, which sorts files by symbolic link targets.\n\tThanks to Marcos Cruz.\n\n\tAdded negation to patterns with explicitly specified type (surrounded by\n\t{} or //).  Put exclamation mark to invert pattern match.  Thanks to Marcos\n\tCruz.\n\n\tAdded :select and :unselect commands.  Thanks to filterfalse, Russell\n\tUrquhart and Marcos Cruz.\n\n\tAdded chooseopt() builtin function that retrieves various parameters of\n\tfile choosing.  Thanks to Von Welch.\n\n\tAdded mime type patterns ([!]<list-of-globs>).  Thanks to Ross\n\tHadden (a.k.a. rosshadden).\n\n\tAdded %z 'statusline' macro that inserts text of a short tip picked at\n\trandom.  Thanks to qinghao (a.k.a. haobug).\n\n\tAdded pattern ANDing.  Just list decorated patterns one after another and\n\tsuch composite pattern will much when each of them matches.  Thanks to\n\tfilterfalse.\n\n\tAdded pattern ORing for :file[x]type and :fileviewer commands implemented\n\tas a comma-separated list.  Thanks to filterfalse.\n\n\tAdded heuristic that uses null byte as separator for file lists if there\n\tis at least one such byte, otherwise normal line separators are used.\n\tThis affects :[un]select, `vifm -`, %u, %U, %m and %M.  Thanks to\n\tfilterfalse.\n\n\tAdded cancellation (handling of Ctrl-C) for quick view and view mode\n\tloading.  Thanks to kalterfive.\n\n\tAdded completion of :wincmd argument.\n\n\tAdded indication of wrong pattern and absence of matches to command-prompt\n\tfor interactive search/filtering.\n\n\tChanged order of initialization to perform autocommands before startup\n\tcommands on launch.\n\n\tChanged type of 'confirm' option.  Now it's a set that picks which\n\toperations should be confirmed.  Thanks to Losiara and mvucBmM0.\n\n\tChanged ga/gA effect on \"..\" entry to calculate size of current directory.\n\tThanks to aleksejrs.\n\n\tDo not reset completion on terminal resize.\n\n\tExpand environment variables for :edit.  Thanks to filterfalse.\n\n\tDon't print just table header on `:cabbr something`, print message that no\n\tmatches found instead.\n\n\tDisplay <c-h> as <bs> only at the beginning of key sequence.\n\n\tBetter terminal buffer title for plugin in neovim.  Thanks to\n\trandomizedthinking.\n\n\tEnabled wildmenu for menus.\n\n\tSkip UTF-8 BOM for file preview.\n\n\tAllow suffixes and prefixes in 'classify' to be of up to eight characters\n\tin length.  Thanks to elricbk.\n\n\tUse original (before custom view) cursor position on :sync! in custom\n\tviews.  Thanks to filterfalse.\n\n\tNever add parent entry (..) to very custom view (%U).  Thanks to\n\tfilterfalse.\n\n\tRemoved caret escaping on Windows...  Thanks to Reva Revadigar.\n\n\tSilently ignore tries to remove parent entry (..).  Thanks to aleksejrs.\n\n\tA bit better delete confirmation messages with number of files to be\n\tdeleted.\n\n\tImproved syntax highlighting of patterns.\n\n\tAutomatically update custom view entries on rename of their parent\n\tdirectory in the same custom view.\n\n\tSome corrections of when completion happens for :find and :grep.\n\n\tAvoid displaying useless search messages about incorrect pattern during\n\tinteractive search in menus (those that user can't see, but that are shown\n\tin :messages).\n\n\tFixed kind of a duplicate of first history element on =.\n\n\tFixed displaying size for symbolic links to directories on changing views\n\tand determining whether they point to a directory in custom views.\n\n\tFixed backward search in menus, which was performed in the opposite\n\tdirection.\n\n\tFixed hanging on sudden terminal loss.  Thanks to aleksejrs.\n\n\tFixed crash on using extremely long function name.\n\n\tFixed overwriting files after editing destination file name.  Thanks to\n\trbong.\n\n\tFixed querying file information on 64-bit Windows.  Thanks to santhoshr.\n\n\tFixed crash on very long option value on :set.  Thanks to aleksejrs.\n\n\tFixed displaying non-latin characters in LHS of mapping in map menus.\n\tThanks to filterfalse.\n\n\tFixed updating view columns after local options synchronization via\n\t:sync!.  Thanks to filterfalse.\n\n\tFixed possible crash on Windows on displaying job bar (e.g. after :empty).\n\tThanks to Reva Revadigar.\n\n\tFixed escaping on Windows when opening files via :edit.\n\n\tFixed UTF8 <-> UTF16 conversion on Windows, which didn't always work (on\n\tsurrogate characters it seems).  Thanks to Reva Revadigar.\n\n\tFixed possible unexpectedly long timeouts when waiting for a key on\n\tWindows (due to limitation of pdcurses).\n\n\tFixed displaying of wide (CJK) characters in pdcurses on Windows.  Thanks\n\tto Reva Revadigar.\n\n\tFixed functioning on architectures on which `char` is unsigned by default.\n\tThanks to Ondrej Novy (a.k.a. onovy).\n\n\tFixed unconditional resetting of executable permission when using cp\n\tdialog.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed updating view columns on leaving very custom view (%U) which set\n\tsort option.  Thanks to filterfalse.\n\n\tFixed remote feature on cygwin.  Thanks to Cosmin Popescu (a.k.a.\n\tcosminadrianpopescu).\n\n\tFixed search match highlighting of non-ascii characters in right aligned\n\tfile names.\n\n\tFixed capturing output of external applications on Windows when 'shell' is\n\t\"cmd\".  Was broken since v0.8 in an attempt to make cmd work better with\n\tUnicode (but its /U flag affects only input and output streams).\n\n\tFixed completion of command-line of this format: `:!~/...`.\n\n\tFixed epic bug in processing selectors followed by other commands in a\n\tmapping.  Command which accepted selector was called after tail of\n\tsequence is processed.\n\n\tFixed possible issues with escaping on retrieving file type/mime-type\n\tusing `file` utility.  Thanks to filterfalse.\n\n\tFixed cutting off path prefix from :!~/path/exec when 'fastrun' is on.\n\n\tFixed putting unmatched %[ into status line at wrong position.\n\n\tFixed incorrect work with symbolic links in paths to custom view entries,\n\ton completion of paths, changing directory via :cd or :sync, processing\n\targuments of :mkdir, :bmarks, :delbmarks, :colorscheme, :clone.\n\n\tFixed weird completion effects for :colorscheme, :sync!, :delbmark,\n\t:bmark!.\n\n\tFixed changing owner/group in custom views.\n\n\tFixed small memory leak on using %u/%U with :grep, :find or :locate.\n\n\tFixed possible off cursor after cmdline insertions of text with wide\n\tcharacters via Ctrl-X combinations or dot completion.\n\n\tFixed quite strange behaviour if command-line is too fill the whole\n\tscreen (it's less strange now, resized to maximum).\n\n0.8.1 to 0.8.1a (2016-02-10)\n\n\tAdded c key to menus that inserts parts of menu line into command-line.\n\tThanks to filterfalse.\n\n\tAdded { and } keys to normal and visual modes.  They act similar to ( and\n\t), but always consider whether entry is a file or directory.  Thanks to\n\toctos.\n\n\tApply local filter on picking element of `:history filter` menu.\n\n\tAdded --disable-build-timestamp option to configure script to perform\n\treproducible build.  Thanks to Hendrik Jaeger (a.k.a. henk).\n\n\tDisplay more meaningful message on failure to extract option name (unknown\n\toption: string).\n\n\tHandle register specified for gs normal mode command.  Select files listed\n\tin that register.  Thanks to filterfalse.\n\n\tMore accurate parsing of bar not surrounded with whitespace.\n\n\tBe consistent with regard to when local state is changed and do not reset\n\tneither local options nor local filter on entering/leaving custom view.\n\tThanks to filterfalse.\n\n\tDisallow adding duplicated filetype/fileviewer entries (just ignore them\n\tas they wouldn't be used due to order priority anyway).\n\n\tExpand tilde in first argument of :bmark! command.  Thanks to Marcos Cruz.\n\n\tTruncate menu titles that don't feet the screen.  Thanks to aleksejrs.\n\n\tFixed redrawing message dialog when 'relativenumber' option is on.  Thanks\n\tto aleksejrs.\n\n\tFixed resetting status bar contents on displaying message dialog.\n\n\tFixed parsing background mark after quote (as in `:put \" &`).\n\n\tFixed using plugin in neovim, which has broken `system()` and :! commands.\n\tThanks to Artur Shaik (a.k.a. artur-shaik).\n\n\tFixed polluting screen of server with messages about invalid arguments.\n\n\tFixed duplicated filetype entries in vifminfo.  Thanks to aleksejrs.\n\n\tFixed switching views via :wincmd.  Thanks to fogine.\n\n\tFixed executing commands on new view after switching it (related to\n\tsequences of commands separated via bar symbol).\n\n\tFixed --with-dyn-x11 configuration option, which failed to enable dynamic\n\tuse of the library.  Thanks to Badalisc and Hendrik Jaeger (a.k.a. henk).\n\n\tFixed handling of doubled commas on reading/writing filetypes from/to\n\tvifminfo.\n\n\tFixed displaying of extra file line in quick view when 'tuioptions'\n\tdoesn't contain \"p\" flag.  Thanks to aleksejrs.\n\n\tFixed description of 'sort' to reflect rename of \"type\" into \"dir\".\n\tThanks to Marcos Cruz.\n\n\tFixed tab completion for single-executable Windows build, which didn't\n\twork in the last release and could cause crash.  Thanks to Reva Revadigar.\n\n\tFixed memory leak on resolving symlinked path on Windows.  Thanks to Hendrik\n\tJaeger (a.k.a. henk).\n\n\tFixed TUI glitches in the form of borders after shrinking terminal to\n\tsmallest possible height and restoring it back.\n\n\tFixed processing of path regexps for filetypes when operating on\n\tselection.  Thanks to aleksejrs.\n\n\tFixed running multiple files in custom view.\n\n0.8.1-beta to 0.8.1 (2016-01-17)\n\n\tAdded summary to builtin tree implementation.  Thanks to aleksejrs.\n\n\tAdded more filetype definitions into sample vifmrc.  Thanks to aleksejrs.\n\n\tAdded 'title' option to control whether title of terminal should be set.\n\tEnabled by default if old title can be restored.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tCase insensitive completion of autocommand name for :autocmd command.\n\n\tAllow /**/ in :autocmd pattern to match end of the path.  Thanks to\n\taleksejrs.\n\n\tDon't trigger DirEnter on exiting custom-view (when we technically stay in\n\tthe same directory).  Thanks to aleksejrs.\n\n\tSomewhat align options in conflict resolution dialog.  Patch by Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tCopy timestamps and permissions on merging directories.  Thanks to\n\twillemw12.\n\n\tLess blinking on resorting.  Annoying if directory is resorted from\n\tautocommand.\n\n\tFixed reopening controlling terminal across users.  Thanks to aleksejrs.\n\n\tFixed :autocmd being not whole line command (was terminated by |).  Thanks\n\tto aleksejrs.\n\n\tFixed possible crash on writing vifminfo file on exiting.\n\n\tFixed memory corruption on handling empty matches of searches in view\n\tmode.  Thanks to filterfalse.\n\n\tFixed secondary column of very custom view (%U).  Thanks to filterfalse.\n\n\tFixed reopening terminal for output, read-only mode somehow caused hangs.\n\tThanks to aleksejrs.\n\n\tFixed possible (effectively) hang on reading directory change events.\n\n\tFixed parsing of commands which names are not followed by spaces with\n\tregard to pipe symbols (|).  Thanks to aleksejrs.\n\n\tFixed extending second :tr argument, which could cause failure in build\n\twith assertions.  Thanks to octos.\n\n0.8 to 0.8.1-beta (2016-01-02)\n\n\tTurned remote commands back on by default after their rewrite using\n\tnamed pipes instead of insecure UDP sockets.\n\n\tRemoved vifmrc-converter.  It's been around for four years and not needed\n\tany more.  Thanks to filterfalse.\n\n\tRemoved contents of autoconf.sh, autoreconf covers what was there (there\n\tis a notice in that script now about it just in case).  Thanks to Hendrik\n\tJaeger (a.k.a. henk).\n\n\tChanged 'fusehome' default from temporary directory to data directory (that\n\tis $XDG_DATA_HOME/.local/share/fuse/ or $VIFM/fuse/ depending on which\n\tparent directory exists, the second one exists by definition, but first\n\tmight not).  Thanks to aleksejrs and to Hendrik Jaeger (a.k.a. henk).\n\n\tAdded :winc[md] command-line command.  Thanks to fogine.\n\n\tAdded layoutis() builtin function that answers queries about current\n\tinterface configuration.  Thanks to fogine.\n\n\tAdded paneisat() builtin function that answers queries about current pane\n\tposition.  Thanks to fogine.\n\n\tAdded %pc macro that splits preview command in two pices: preview command\n\tand clear command.  Thanks to Tomek K. (a.k.a. TomiCode).\n\n\tAdded set of :*Vim commands to vifm run from Vim plugin, which overrule\n\tinitial :*Vifm command behaviour.  Thanks to Ross Hadden (a.k.a.\n\trosshadden).\n\n\tAdded special treatment for \"*\" as value of 'slowfs', which might be\n\tuseful in case of very slow handling of requests to mounts enumeration.\n\tPatch by Cosmin Popescu (a.k.a. cosminadrianpopescu).\n\n\tAdded handling of \"-\" command-line argument specified in place of\n\tdirectory path as instruction to read list of files from stdin.\n\n\tAdded B key to menus, which acts like b, but creates unsorted (very\n\tcustom) view.  Thanks to filterfalse.\n\n\tAdded match numbers to search messages on status bar.  Patch by Cosmin\n\tPopescu (a.k.a. cosminadrianpopescu).\n\n\tAdded exclamation mark to :shell to suppress spawning new teminal\n\tmultiplexer pane.  Patch by Cosmin Popescu (a.k.a. cosminadrianpopescu).\n\n\tAdded fileext sorting key, which sorts files by extensions and directories\n\tby name.  Patch by Cosmin Popescu (a.k.a. cosminadrianpopescu).\n\n\tAdded :setl[ocal] and :setg[lobal] commands to manage values of local\n\toptions that are specific to current directory and are reset on directory\n\tchange, similar to local options of Vim.\n\n\tAdded zr normal mode key to reset local filter.  Thanks to filterfalse.\n\n\tAdded named bookmarks (paths are associated with tags).  This adds :bmark,\n\t:bmarks, :bmgo and :delbmarks command-line commands.  Also there is new\n\t\"bmarks\" value for 'vifminfo'.  Thanks to Schmalzhaf Stefan.\n\n\tAdded handling of dd in :trashes, :trashes? and :lstrashes, which either\n\tdeletes an item in trash or empties trash.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tAdded dynamic view column alignment (specified by \"*\", just like \"-\" for\n\tleft alignment).  Patch by Cosmin Popescu (a.k.a. cosminadrianpopescu).\n\n\tAdded --server-list and --server-name command-line options that enumerates\n\tnames of currently running vifm servers and sets name of target/this\n\tinstance respectively.\n\n\tAdded optional %u and %U macros to 'findprg', 'grepprg', and 'locateprg'\n\tthat allow immediate redirection of command output into custom view\n\twithout opening a menu.  Thanks to filterfalse.\n\n\tAdded builtin directory preview.  Thanks to Damian Ariel Perticone and\n\tAlexandre Viau.\n\n\tAdded :pu[t] command that inserts files into current directory.  Thanks to\n\tmvucBmM0.\n\n\tAdded --with-sanitize=basic|thread|leak option to configure script.\n\n\tAdded \"more\" mode that is used to handle status bar content that doesn't\n\tfit on the screen.  Thanks to Bruce Hunsaker (a.k.a. hunsakerbn) and\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tAdded 'dirsize' option to control how size of directories is displayed in\n\tfile views.  This enables one to see number of files in a directory rather\n\tthan its size.  Thanks to Martin Fischer.\n\n\tAdded missing script that's necessary for %s macro in GNU screen.  Was\n\tlost for a long time.\n\n\tAdded retry/ignore/abort prompt for file/directory removal when 'syscalls'\n\tis on.  Thanks to Robert Sarkozi.\n\n\tAdded \"nitems\" sorting, which sorts by number of items in a directory.\n\tThanks to filterfalse.\n\n\tAdded getpanetype() builtin function that retrieves type of current pane.\n\tThanks to filterfalse.\n\n\tAdded 'iooptions' option to configure file system operations.  Contains\n\tonly \"fastfilecloning\" for btrfs so far.  Thanks to aleksejrs.\n\n\tAdded \"v\" key to menu mode that loads current contents into quickfix list\n\tof editor (Vim compatible one is assumed).  Thanks to filterfalse.\n\n\tAdded && and || operators to expression parser.  Thanks to filterfalse.\n\n\tAdded autocommands (DirEnter event and :au[tocmd] command).  Thanks to\n\tfilterfalse.\n\n\tAdded 'sortgroups' option and \"groups\" sorting key, which allow sorting by\n\tparts of file names.  Thanks to aleksejrs.\n\n\tAdded \"nlinks\" sorting key to display number of hard links to a file on\n\t*nix systems.  Thanks to filterfalse.\n\n\tAdded 'deleteprg' option, which specifies program to run on files that are\n\tpermanently removed.\n\n\tAdded inline comments to allow less verbose commenting in configuration.\n\n\tAdded :elseif command.  Thanks to filterfalse.\n\n\tAdded :set foo+=bar syntax for string options (append value).\n\n\tAdded &option syntax for :let command.\n\n\tAdded optional argument for --logging parameter that specifies path to\n\tstartup log.  Thanks to Cosmin Popescu (a.k.a. cosminadrianpopescu).\n\n\tAdded handling of \"%u\" in trash specification on *nix, which is replaced\n\twith real user ID.  Thanks to Regis.\n\n\tChanged default value of 'trashdir' on *nix again, this time to\n\t\"%r/.vifm-Trash-%u,$VIFM/Trash,%r/.vifm-Trash\".  This way it's safer for\n\tprivacy, although using %r is not very safe in general.  Thanks to Regis.\n\n\tDo not finish argument parsing after finding --help or --version,\n\tcontinue and validate the rest of command-line.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tWarn about --remote command being disabled at build-time.  Thanks to\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tMake --select option more prominent in documentation.  Thanks to\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tAccept [count] for \"h\" and \"gh\".\n\n\tNormalize surrounding spaces in menu and dialog titles.\n\n\tWork around compilation on systems where MAX_ARG_STRLEN is defined, but\n\tunusable.  Thanks to Marcin Juszkiewicz (a.k.a. hrw), Michel Normand and\n\tMichael Vetter (a.k.a. jubalh).\n\n\tDocument %= for 'statusline' and 'rulerformat'.\n\n\tProper recovery from loading of color scheme unsupported by the terminal\n\tat startup.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tAutomatically create ~/.vifm/scripts containing small README file if the\n\tdirectory doesn't exist on startup.  Thanks to fogine.\n\n\tConsider control message when deciding width for a dialog, also don't let\n\tit disappear on narrow terminals.\n\n\tProvide conflict resolution options in a dialog rather than on the\n\tcommand-line, which is hard to read with so many options.\n\n\tChoose \"middle\" of the list of even length closer to the top (M key).\n\tThanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tUpdate cursor position on file disappearing in more predictable way.\n\tUse the closes file to the previously active one that still exists.\n\tThanks to ranousse.\n\n\tMake :set, :filter and :normal zo (and alike) in vifmrc affect all views,\n\tthus obsoleting use of :winrun or :windo for this purpose (they still\n\twork, the new way is a simpler and more obvious one).  This is related to\n\tcommands executed during vifmrc processing (not those in the right-hand\n\tside of mappings, commands, etc.).\n\n\tDisplay lower bound on item count in status bar progress messages (e.g. on\n\t:grep).\n\n\tDo not shrink progress dialog (only make it wider), this is more\n\tpredictable and easier to follow.  Thanks to Robert Sarkozi.\n\n\tMore hints for Debian-based systems on installation.  Thanks to Bernhard\n\tGrotz.\n\n\tExpand \"~\" in menus on navigation.\n\n\tUse `-f` on calling editor instead of `--nofork` (should be more\n\tuniversal).  Thanks to kazufukurou.\n\n\tChanged default colorscheme to invert colors of the current line.\n\n\tDisplay directory size on Windows more correctly.\n\n\tLower minimum supported terminal width and height from 30x10 to 20x5.\n\n\tPreserve file timestamps on copying files with 'syscalls' on.  Thanks to\n\tmvucBmM0.\n\n\tEmploy inotify on GNU/Linux for more precise watching directories for\n\tchanges.\n\n\tDisplay incomplete file name on rename instead of failing with error on\n\tUnicode conversion issues.\n\n\tAssume UTF-8 sequences can be broken.  Thanks to Svyatoslav Mishyn (a.k.a.\n\tjuef).\n\n\tCheck file system sensitivity on OS X.  Thanks to loongw.\n\n\tAllow 'shell' to specify a shell argument on *nix.  Thanks to loongw.\n\n\tMake \"p\" in 'tuioptions' affect padding in quick view and view mode.\n\n\tDocumented difference between paths in menu with and without trailing\n\tslash.  Thanks to filterfalse.\n\n\tSave location before loading custom view into view directory history.\n\tThanks to filterfalse.\n\n\tInvalidate directory size (calculated via ga/gA) if noticed that directory\n\twas changed.  This affects all parent directories as well, way easier to\n\tsee what needs recalculation after file moving/removal.\n\n\tCtrl-W | and Ctrl-W _ now can set window size to given count.  Thanks to\n\tfilterfalse.\n\n\tMake sure confirmation dialog doesn't appear for background operations.\n\n\tDisplay confirmation on \":delete! &\" before initiating the operation.\n\n\tSomewhat more informative error titles on issues during file operations.\n\n\tMade setting title inside terminal multiplexers (when terminal type is\n\t\"screen*\") work.\n\n\tMake use of file cloning feature of btrfs when possible and enabled in\n\t'iooptions'.  Thanks to aleksejrs.\n\n\tChanged plugin to do not depend on location of vifm.  g:vifm_home is\n\tignored from now on.  Thanks to aleksejrs.\n\n\tRewrote expression parser to prevent side-effects from occurring until\n\tsyntax is checked.\n\n\tPut right-hand side of user-defined commands into separate scope of\n\tif-else-endif expressions.  This prevents affecting of regular input by\n\tmalformed user-defined command.\n\n\tFixed resetting \"vborder\" of 'fillchars' after it has been set to\n\tsomething (as in `:set fillchars=vborder:\\* fillchars&`).\n\n\tFixed crash after color scheme load failure possible in scenarios where\n\tfile name specific highlights are used.\n\n\tFixed use of uninitialized value which could affect whether pattern is\n\tmatches whole path or only its name part.\n\n\tFixed tests failures when run with root privileges.  Thanks to Ondrej\n\tNovy (a.k.a. onovy).\n\n\tFixed running backgrounded commands with non-latin characters on\n\tWindows (that end with \" &\", should be OK to just drop it on Windows\n\tand get correct behaviour on 0.8).  Thanks to Stas Malavin.\n\n\tFixed running of executables with spaces in paths on Windows with cmd.\n\tThanks to Stas Malavin.\n\n\tFixed choosing user vs. default shell on Windows (was reversed), related\n\tto %S, %i and alike macros.\n\n\tFixed losing view sorting on failed attempt to load custom view.  Thanks\n\tto filterfalse.\n\n\tFixed not restoring 'sort' value on leaving unsorted custom view.\n\n\tFixed possible crash on startup when 'vifminfo' includes \"options\".\n\tThanks to Aurelio Sanabria (a.k.a. Sufrostico).\n\n\tFixed checking for symbolic link target on target change commands in\n\tcustom view.\n\n\tFixed slashes type on Windows on loading custom view with relative paths.\n\n\tFixed unstable extension sorting for dot files.  Patch by Cosmin\n\tPopescu (a.k.a. cosminadrianpopescu).\n\n\tFixed check for availability of FUSE mount point.  Thanks to fogine.\n\n\tFixed small memory leak and possible corruption after :sync! localopts.\n\n\tFixed checking for changes in charset options on :set (without arguments),\n\tused to print unchanged options as if they were changed.\n\n\tFixed estimation text in dialog (was almost single line).\n\n\tFixed recovery after a try to assign ill-formed value to 'viewcolumns'\n\toption.\n\n\tFixed unintentional filters resetting on menu navigation to paths that\n\thave trailing slash.\n\n\tFixed losing name of controlling terminal on reopening it.  Thanks to\n\tDennis Hamester.\n\n\tFixed one command in sample vifmrc, which is not supported in Windows\n\tversion.  Thanks to Alexandre Viau.\n\n\tFixed possible vifminfo shrinking (some data were removed from it) if an\n\terror occurs during initialization.\n\n\tFixed highlight not being updated after file rename.\n\n\tFixed possible hang during startup on Windows after removal of last\n\tvisited directory.\n\n\tFixed running background commands on Windows that require shell\n\texpansions.\n\n\tFixed swapped absolute/relative link creation on :alink/:rlink commands.\n\tPatch by MadMaverick9.\n\n\tFixed dialog box redraw in menu after terminal resize.\n\n\tFixed leaving background threads in zombie state.\n\n\tFixed check for broken link existence in custom views (were dereferenced).\n\n\tFixed missing check for duplicated source file names in custom views on\n\tfile operations.  Thanks to filterfalse.\n\n\tFixed navigation to broken link from a menu.\n\n\tFixed group completion for :chown command.\n\n\tFixed cursor positioning in custom view with identically named files on\n\tlocal filter updates.\n\n\tFixed restoring selection in custom view in presence of identically named\n\tfiles.  Thanks to filterfalse.\n\n\tFixed navigation to file in custom view in presence of identically named\n\tfiles there.  Thanks to filterfalse.\n\n\tFixed remapping of builtin keys that are followed by selectors (e.g.\n\t`:nnoremap d y`).  Thanks to mvucBmM0.\n\n\tFixed 'chaselinks' causing invalid path resolution on going directory\n\tup (\"..\").  Thanks to filterfalse.\n\n\tFixed :mkdir! on absolute paths, used to create relative paths anyway.\n\tThanks to filterfalse.\n\n\tFixed `:cd one two` to use current directory as base for both relative\n\tpaths.  Thanks to filterfalse.\n\n\tFixed ranges for :yank.  Thanks to Marius Schmidl.\n\n\tFixed enabling sorting on loading regular custom view after very custom\n\tview.\n\n\tFixed turning of very custom view into sorted one after :restart.\n\n\tFixed memory leak related to :colorscheme command.\n\n\tFixed redraw of invisible pane on :sync! on single-pane mode.  Thanks to\n\tfilterfalse.\n\n\tFixed Ctrl-W _ in top panel, which hid the bottom panel completely.\n\tThanks to filterfalse.\n\n\tFixed crash on copy-like operations that move several files into\n\tsubdirectory of another view.  Thanks to Marius Schmidl.\n\n\tFixed running external commands when custom view is active and vifm is\n\trunning inside GNU screen.\n\n\tFixed running vifm on Windows 10.  Thanks to th1rdey3.\n\n\tFixed leaking memory on collecting error messages on file operations via\n\tsystem calls.\n\n\tFixed navigation back in history from custom view.\n\n\tFixed tokens mangling inside strings ('!=' turned into '=').\n\n\tFixed creation of intermediate directories on merging directories.\n\tThanks to willemw12.\n\n\tFixed inconsistency in processing | escapes for whole line commands (e.g.\n\tfor :!).\n\n\tFixed incorrect treating of files with colons in their names for menus and\n\tcustom views.  Thanks to aleksejrs.\n\n\tFixed not squashing double commas in description of :file[x]type commands.\n\n\tFixed \"..\" item of a custom view having empty directory (can be seen via\n\tFile Info dialog).  Thanks to filterfalse.\n\n\tFixed small leak on :write (on exit too, but leaks before exit don't\n\tmatter).\n\n\tFixed processing if-statements with multiple else branches.\n\n\tFixed accepting non-alpha first character for environment variable name in\n\t:let command.\n\n\tFixed completion of &-terms, which didn't always list all found matches.\n\n\tFixed silent (effectively) ignoring of incomplete regexp argument (as in\n\t:filter/something, this is different from :s/a).\n\n\tFixed forgetting of broken symbolic links that went into trash.\n\n\tFixed silent ignoring of unmatched quote among :set arguments.\n\n\tFixed picking wrong partition for deletion under symlinked paths.  Thanks\n\tto aleksejrs.\n\n0.8-beta to 0.8 (2015-07-09)\n\n\tAdded handling of Ctrl-L to sort dialog.  Thanks to filterfalse.\n\n\tAdded device id (major and minor numbers) to file info dialog.\n\n\tAdded script to update timestamps, so that build system won't be\n\tregenerated without real reason.  One might want to run it when building\n\tfrom git checkout, which doesn't preserve correct timestamps.\n\n\tAppend unused space in view columns to the last one with percent sizing\n\ttype if any.  Thanks to fogine.\n\n\tDrastically increased performance of custom view composing.\n\n\tBe more accurate when deciding whether view displays graphics,\n\tparticularly rely on %px and %py, because %pw and %ph might be useful for\n\ttext viewers as well.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tLess flicker on preview window update.\n\n\tClean occasional graphics leftovers after disabling preview.\n\n\tIgnore file decorations ('classify') on sorting custom views.  Thanks to\n\tfilterfalse.\n\n\tDo not invoke vifmrc-converter to update color scheme names if no color\n\tschemes were found.\n\n\tDisplay 2822 date without time zone in file info.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tDisallow creating user-defined command with \"?\" or \"!\" suffix if this\n\twould hide builtin command.  Redefining commands without suffixes is not\n\tallowed, thus this shouldn't be allowed too.\n\n\tBetter \"all\" pseudo-option parsing and support of resetting it.\n\n\tDo not display same path twice in detailed progress information (after\n\tboth \"file\" and \"from\").\n\n\tShorten paths in \"file\" and \"from\" in progress dialog.\n\n\tSync approximate and accurate forms of progress dialogs.\n\n\tFixed pane titles update on switching panes.\n\n\tFixed build on OpenBSD.  Patch by Brian Callahan (a.k.a. ibara).\n\n\tFixed redrawing of dialogs requested via startup commands.  Thanks to\n\tfilterfalse.\n\n\tFixed removal of original directories during merging with 'syscalls' on.\n\tThanks to willemw12.\n\n\tFixed directory merging when 'syscalls' is off.  Thanks to willemw12.\n\n\tFixed option completion to do not provide completion for \"noall\" or\n\t\"invall\", which isn't valid.\n\n\tFixed dialog message centering which could be off by one.\n\n\tFixed work on OpenBSD (at least to some degree that curses implementation\n\tthere allows).  There are still some troubles with non-ascii characters.\n\tThanks to hofheinz.\n\n\tFixed possible constant view reload when built on some systems.  Thanks to\n\thofheinz.\n\n\tFixed error reporting on builtin function argument parsing in rhs of :let\n\texpression.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed truncating viewed file on 'wrap', 'tabstop' > 2 and line wrapping\n\tcaused by tabulation.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed copying of fifo, socket and device files with 'syscalls' enabled.\n\tThanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed compilation with musl.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed build on FreeBSD.  Thanks to bsdmp.\n\n\tFixed not drawing local colorscheme once after setting global one.\n\n\tFixed priority of abbreviations for user-defined commands with trailing\n\t\"!\" or \"?\", which shouldn't be preferred over corresponding builtin\n\tabbreviation.\n\n\tFixed \"(n + 1) of n\" in detailed progress dialog.\n\n\tFixed infinite loop or crash on empty match on search in view mode (e.g.\n\ton /$).\n\n\tFixed crash/leak on processing of background jobs.  Thanks to Christian\n\tFillion (a.k.a. cfillion).\n\n\tFixed several memory access errors and leaks.\n\n0.7.8 to 0.8-beta (2015-06-19)\n\n\tRemoved per-view last search pattern.  Don't worry, you probably won't\n\teven notice it: this doesn't affect regular use case, rather more exotic\n\tone, which is hard to notice.\n\n\tMap <c-h> and <bs> to different key codes.  Thanks to fogine.\n\n\tAdded <lt> angle bracket notation (less-than character, '<').  Thanks to\n\tfilterfalse.\n\n\tAdded K mapping to Vim plugin (quick navigation to documentation, e.g.\n\tfrom vifmrc).  Patch by filterfalse.\n\n\tAligned columns in :jobs menu.\n\n\tAdded 'chaselinks' option to automatically expand all symbolic links in\n\tpath of a view (might not work on Windows).  Thanks to filterfalse.\n\n\tAdded %FOREGROUND FUSE mounting option, which supersedes %CLEAR and\n\tfixes issue with passing input to FUSE mounter.  Thanks to Johannes (a.k.a.\n\tjohannesmeng).\n\n\tAdded %[ and %] macros for status line/ruler.  Thanks to ranousse.\n\n\tAdded single-argument form of :file[x]type and :fileviewer commands that\n\tlists (in menu mode) currently registered patterns that match specified\n\tfile name.\n\n\tAdded filename specific highlight.  Thanks to Ink (a.k.a. inknoir),\n\tfilterfalse and Michael Maddern (a.k.a. madders).\n\n\tAdded dircolors -> vifm conversion script.  Thanks to Ink (a.k.a. inknoir),\n\tHendrik Jaeger (a.k.a. henk) and Michael Maddern (a.k.a. madders).\n\n\tAdded F key to less-like (file view) mode, which acts similar to `tail -F`\n\tor F key in less.  Thanks to Daniel Dettlaff (a.k.a. dmilith).\n\n\tAdded 'mintimeout' option.  It enables controlling responsiveness on\n\texternal events by Vifm.  Thanks to hofheinz.\n\n\tAdded Ctrl-X / (slash) key to command-line mode that inserts last search\n\tpattern into current cursor position.  Thanks to filterfalse.\n\n\tAdded custom views, which contrary to regular views can contain files that\n\tdo not belong to the same directory.\n\n\tAdded b key to menu mode that creates custom view filled with menu items\n\tfiltering out those that are not paths.\n\n\tAdded zd normal and visual modes key to exclude items from custom views.\n\n\tAdded %u and %U macros to redirect command output directly into custom\n\tview.  The second one allows for more customization of file list, which is\n\tabsence of sorting for now.  Thanks to filterfalse.\n\n\tAdded --delimiter command-line option.  Configures delimiter string on\n\twriting out list of paths (like on `-f` switch).  Thanks to Jeet\n\tSukumaran (a.k.a. jeetsukumaran).\n\n\tAdded --choose-files and --choose-dir command-line switches to specify\n\toutput location for names of selected files or last visited directory\n\trespectively.  Thanks to Jeet Sukumaran (a.k.a. jeetsukumaran).\n\n\tAdded :cq[uit] command to exit with non-zero exit code and also abort\n\tdirectory choosing.  Thanks to Jeet Sukumaran (a.k.a. jeetsukumaran).\n\n\tAdded --on-choose command-line switch to execute a command on selection\n\trather than opening it.  Thanks to Ross Hadden (a.k.a. rosshadden).\n\n\tAdded system() builtin function that executes command via shell and returns\n\tits output.\n\n\tAdded Ctrl-] command-line key to trigger abbreviation expansion.\n\n\tAdded 'wordchars' option to specify which characters in command-line mode\n\tshould be considered as part of a word.  Thanks to filterfalse.\n\n\tAdded command-line mode abbreviations and :cabbrev, :cnoreabbrev and\n\t:cunabbrev commands to manage them.  Thanks to filterfalse.\n\n\tAdded per-file overwrite confirmation on directory merging.  Thanks to\n\twillemw12.\n\n\tAdded optional per-file progress in dialog mode activated by hitting \"i\"\n\twhile operation is being performed.\n\n\tAdded OS X version of sample vifmrc file.  Now this one will be used on\n\tfirst run on OS X.  Thanks to Larry Hynes (a.k.a. larryhynes).\n\n\tAdded --enable-coverage option to configure script.\n\n\tAdded ^= operation for charset options.\n\n\tAdded job bar that displays backgrounded file operations if any.  Thanks to\n\tgeo909.\n\n\tAdded JobLine highlight group for the job bar.\n\n\tAdded :redr[aw] command to force immediate redraw.  Thanks to filterfalse.\n\n\tAdded search match highlight for file names.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef) and willemw12.\n\n\tAdded fallback to use \"XDG Base Directory Specification\" when failed to\n\tfind configuration in other places.  Thanks to Miodrag Tokić (a.k.a.\n\tloonies).\n\n\tAdded %px, %py, %pw and %ph macros that describe location and dimensions\n\tof preview area to use in external commands.  Thanks to Stephano (a.k.a.\n\tcao).\n\n\tAdded lookup for mandoc on *nix to perform manual page to plain text\n\ttransformation.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tAdded :trashes? to display sizes of each non-empty trash directories.\n\tThanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tAdded global configuration {prefix}/etc/vifm/vifmrc and color schemes\n\t{prefix}/etc/vifm/colors/*.  Thanks to astrell and Michael Vetter (a.k.a.\n\tjubalh).\n\n\tAdded one more light color scheme to assets (in two variations\n\tastrell-root and astrell-user).  Thanks to astrell.\n\n\tAdded regexp patterns to :file[x]type and :fileviewer commands.  Thanks to\n\tfilterfalse.\n\n\tAdded full path patterns ({{globs}} and //regexp//).  Thanks to astrell.\n\n\tAdded detailed list of errors when 'syscalls' is used.  Thanks to willemw12.\n\n\tAdded .vifm extension to color schemes (initial rename is performed\n\tautomatically).  Thanks Michael Vetter (a.k.a. jubalh).\n\n\tAllowed having multiple file viewers with same rules for choosing them at\n\trun-time as for file associations.  Thanks to filterfalse.\n\n\tAdded \"p\" to 'shortmess' option to control tilde shortening of paths in\n\tview titles.  Thanks to Martin Fischer.\n\n\tChanged default value of 'trashdir' from \"$VIFM/Trash\" to\n\t\"%r/.vifm-Trash,$VIFM/Trash\".  Thanks to Joseph LP (a.k.a. ootput).\n\n\tMade calculation of directory size visible in :jobs menu.\n\n\tMade tests less dependent on environment.  Thanks to Hendrik Jaeger (a.k.a.\n\thenk).\n\n\tRemoved unnecessary command existence checks from vifm.vim.  Thanks to\n\tfilterfalse.\n\n\tAuto-resize position field on the status bar to fit the text.  Thanks to\n\tranousse.\n\n\tSwitch to utf-8 internal representation of paths on Windows.  This fixes\n\tissues when file name encoding doesn't match system encoding.  Thanks to\n\tStas Panteleev.\n\n\tMade leaving wrong (unexpectedly removed) directory more robust.  Thanks\n\tto willemw12.\n\n\tSignificantly reduced amount of work performed by Vifm in idle state.\n\tThanks to hofheinz.\n\n\tMade message dialogs interact better with everything else on the screen.\n\tE.g. redraw properly after terminal resize.\n\n\tUnited last pattern of :substitute command with search history.  Thanks to\n\tfilterfalse.\n\n\tMade configure script lookup curs_set in libtinfo.\n\n\tRedirect both standard output and error streams from viewers (already was\n\tthe case for Windows).\n\n\tDon't lose previously saved filter on repeated resetting (pressing zO twice\n\tin a row caused previous filter values to be lost).\n\n\tExtended :sync command to support selective synchronization (user can\n\tchoose among location, cursor position, local options and filters).\n\tThanks to filterfalse.\n\n\tAutomatically install sample vifmrc and help file on first start on\n\tWindows.\n\n\tRedraw UI on resize during file operation when 'syscalls' is set.\n\n\tQuit fast on --help/--version.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tParse paths that start with plus sign as command-line arguments more\n\tcarefully (don't treat them as startup commands).\n\n\tMoved checks for build-time tools existence from Makefile to configure\n\tscript.\n\n\tReport signal that killed Vifm when that happens.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tReport error on wrong expression in :if statement and misplaced\n\t:else/:endif on file sourcing.\n\n\tDefine $VIFM_FUSE_FILE environment variable for external commands to\n\tcommunicate path to file used to initiate FUSE mounting of directory we're\n\tin.  Thanks to astrell.\n\n\tAllow non-printable characters to be arguments of :commands.  Thanks to\n\tfilterfalse.\n\n\tPrevent inserting odd characters on terminal resize while in command-line\n\tmode.\n\n\tThrow away dead directories in directory histories on merging vifminfo\n\tfiles.  Otherwise clearing such directories on :history is almost useless.\n\n\tDisplay calculated size of directory for symbolic links that point to it.\n\n\tHandle commands that are too long to be passed directly to the shell by\n\tbreaking them into list of arguments if possible.  Thanks to filterfalse.\n\n\tInstall AUTHORS, COPYING, ChangeLog, INSTALL, NEWS, README and TODO to\n\t{prefix}/share/doc/vifm.  Install color schemes to\n\t{prefix}/share/vifm/colors.  Otherwise these are not available after\n\tinstallation.\n\n\tBreak ties on case insensitive sort deterministically.\n\n\tDynamic dialog dimensions (minimum %30 percent of the screen rather than\n\tscreen-wide all the time).  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tTry harder to start in valid directory (go upwards if last visited one\n\tdoesn't have search permission) or leave the one that's not available\n\tanymore.\n\n\tDo not depend on UTF-8 locale on making plain text version of\n\tdocumentation.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tNormalized sorting keys/view column names: \"type\" -> \"dir\", display real\n\tmode in octal for \"mode\", make \"type\" actually display file type (as\n\t\"mode\" did before).  Thanks to Michal Belica (a.k.a. beli-sk).\n\n\tComplete `clear` subcommand of :highlight.\n\n\tParse output of mandoc version of apropos in :apropos.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tError on wrong combinations of macros and background mark in commands.\n\n\tNo more unjustified inconsistency in processing macros in :! and\n\t:file[x]type commands.  Thanks to Miodrag Tokić (a.k.a. loonies).\n\n\tManual page fixes/improvements.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tWrapped option names with single quotes in the man page to make it easier\n\tto search for options by their names.\n\n\tDisplay error on failed conversion to Unicode (say if file name includes\n\tbroken UTF-8 sequence).  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tDo not move cursor on trying to go one directory up in root of the file\n\tsystem.  Thanks to Martin Fischer.\n\n\tFixed search messages in menus (nth time...).\n\n\tFixed automatic finishing in some situation when no terminal is available.\n\tThanks to tYGjQCsvVI.\n\n\tFixed crash on navigation to end of line in command-line mode.  Thanks to\n\tChristian Fillion (a.k.a. cfillion).\n\n\tFixed quite rare UI glitch right after updating 'classify'.\n\n\tFixed UI glitch related to considering 'classify' option for \"..\" entry in\n\tdirectories without files.\n\n\tFixed 'lsview' layout calculation for non-ascii names, which used too much\n\tspace.\n\n\tFixed 'lsview' entry highlight minor glitch related to symbolic links to\n\tdirectories.\n\n\tFixed `:help` (no arguments) when 'vimhelp' is on and automatically\n\tinstalled Vim documentation is used.  Thanks to ranousse.\n\n\tFixed occasional file skipping on moving files from trash directory.\n\n\tFixed gf normal mode key on following symbolic links that target files by\n\tpath that has symbolic links to directories.  Thanks to filterfalse.\n\n\tFixed failing with error on changing case (gu*/gU*) when target file\n\texists.\n\n\tFixed undesired file removal on overwriting them with themselves (data\n\tloss after confirmation of overwriting files when destination matches\n\tsource).  Thanks to Сергей Соловьёв (Sergej Soloviov).\n\n\tFixed parsing of %E without field width in 'statusline'.  Thanks to\n\twillemw12.\n\n\tFixed 'syscalls' documentation, which inverted its meaning.  Thanks to\n\twillemw12.\n\n\tFixed current file number in progress message on moving files across file\n\tsystems when 'syscalls' is on.  Thanks to filterfalse.\n\n\tFixed memory leak related to list of filetypes.\n\n\tFixed unexpected path resolution on Windows under path containing symbolic\n\tlinks.\n\n\tFixed case change renames on Windows when 'syscalls' is set.\n\n\tFixed file name case change undoing/redoing on Windows.\n\n\tFixed view background update on \":highlight Win ...\".  Thanks to hofheinz.\n\n\tFixed nesting of if-else statements with file sourcing.  Thanks to\n\tfilterfalse.\n\n\tFixed segmentation faults on displaying binary files in menu mode.\n\n\tFixed counting number of filtered out files.  Local filter reset number of\n\tfiles filtered out by other filters.  Thanks to filterfalse.\n\n\tFixed exponential percent sign escaping on command line completion.\n\tThanks to filterfalse.\n\n\tFixed percent sign escaping on completion with no input (e.g. :cd <tab>).\n\n\tFixed absence of \"Z\" drive in :volumes menu on Windows.  Thanks to\n\tobtroston.\n\n\tFixed invalid FUSE mounter exit code on OS X and added lookup for\n\t`fusermount` command availability (should use `umount` on OS X).  Thanks to\n\tMichael Maddern, a.k.a. madders.\n\n\tFixed compilation on systems where __USE_BSD is defined and WEXITSTATUS()\n\tuses compound literals.  Thanks to Jeet Sukumaran (a.k.a. jeetsukumaran).\n\n\tFixed missing \"r\" characters on generating vifm-help.txt file on some\n\tsystems.  Thanks to Jeet Sukumaran (a.k.a. jeetsukumaran).\n\n\tFixed current line highlight glitch on scrolling in ls-like view.\n\n\tFixed completion of file names which start with a space.\n\n\tFixed command execution in network share on Windows.  cmd.exe fails for\n\tUNC paths, trick it by running command in temporary directory.  Thanks to\n\tRobert Sarkozi.\n\n\tFixed UI glitch when one could notice cursor blinking in the view while\n\ttyping search pattern on the command-line with 'incsearch' being set.\n\n\tFixed crash on :sync! when filters of two panels differ and resulting\n\tnumber of files is not the same.  Thanks to filterfalse.\n\n\tFixed navigation to the bottom of the screen with non-zero 'scrolloff',\n\twhich lifted cursor when it shouldn't.\n\n\tFixed inconsistency in running :!commands where %i, %m, %M or %S caused\n\tcommand to be executed with default system shell (/bin/sh) rather than\n\twith 'shell'.  Thanks to filterfalse.\n\n\tFixed completion of executables by full paths after :!.  Thanks to\n\tfilterfalse.\n\n\tFixed menu drawing after commands like \":win something !cmd%m\".  Thanks to\n\tfilterfalse.\n\n\tFixed \"[a]ppend\" shortcut for name conflict resolution, which was still\n\tusing \"p\" from older \"a[p]pend\".\n\n\tFixed sorting change in ls-like view with empty 'viewcolumns'.  Thanks to\n\tfilterfalse.\n\n\tFixed estimation calculation on file putting after cancellation.  Thanks to\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tFixed wrong single character drawing in ls-like view.  Thanks to Svyatoslav\n\tMishyn (a.k.a. juef).\n\n\tFixed displaying ls-like view as list of dots after :restart.  Thanks to\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tFixed title UI glitch with disappearing last character on disabled side\n\tborders.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed small view title glitch in CJK directories.\n\n\tFixed some command-line cursor positioning issues related to non-printable\n\tcharacters.\n\n\tFixed crash on starting command-line completion with Shift-Tab after\n\tstopping on completion item with lower number during previous completion.\n\n\tFixed last space trimming in user defined commands (quite unusual use\n\tcase).  Thanks to filterfalse.\n\n\tFixed *nix 'shell' default, was \"sh\", but as kernel doesn't perform search\n\tis $PATH, it would never work.  Luckily $SHELL is defined everywhere, so\n\tthis probably didn't cause any trouble.\n\n\tFixed background mark truncation for :commands in user-defined commands.\n\n\tFixed \":vs ..\" which used to use wrong base directory.\n\n\tFixed gU, gu and ignore case name sort on filenames with non-latin\n\tcharacters.\n\n\tFixed missing error messages related to command parsing on sourcing\n\tfiles.  Thanks to Damian Ariel Perticone.\n\n\tFixed placing right aligned ellipsis for CJK characters in one case.\n\n\tFixed assertion on including \"type\" in 'viewcolumns' value.  Thanks to\n\tMichal Belica (a.k.a. beli-sk).\n\n\tFixed writing current color scheme as the default one, should use builtin\n\tcolors instead.  Thanks to Karol M. Langner (a.k.a. langner).\n\n\tFixed running filetype commands with background mark and no macros.\n\tThanks to Martin Fischer.\n\n\tFixed displaying <c-j> in :map menu (it's new line, which was treated in a\n\tspecial way).  Thanks to fogine.\n\n0.7.8-beta to 0.7.8 (2014-10-25)\n\n\tAdded ga and gA keys to visual mode.  Thanks to geo909.\n\n\tAdded \"[S]kip all\" conflict resolution option.  Thanks to Miodrag\n\tTokić (a.k.a. loonies).\n\n\tHighlight \"highlight clear\".\n\n\tReturned accidentally lost \"Merge all\" (from message only) conflict\n\tresolution message.\n\n\tMade \"make clean\" remove \"tags\" files for Vim documentation generated\n\tduring build.  Thanks to Hendrik Jaeger (a.k.a. henk).\n\n\tTaught ga/gA commands to handle selection.  Thanks to geo909.\n\n\tMore accurate scheduling of view updates.\n\n\tUpdated how tags are generated on build.  Thanks to Hendrik\n\tJaeger (a.k.a. henk).\n\n\tUpdated sample vifmrc file.\n\n\tFixed extension extraction for column view (wasn't consistent with\n\tfilename modifiers).  Thanks to ranousse.\n\n\tFixed navigation to filtered-out files (e.g. from menus).  Cursor wasn't\n\tmoved to the file.\n\n\tFixed parsing of \":cmd &|cmd\" pattern on the command-line.\n\n\tFixed error handling regarding vifmrc-converter.  Thanks to Hendrik\n\tJaeger (a.k.a. henk).\n\n\tFixed dumping Default colorscheme with regard to OtherLine highlight\n\tgroup.\n\n\tFixed ignoring just installed sample vifmrc on first run.\n\n\tFixed cursor update in inactive view (say, after ga/gA finished).\n\n0.7.7 to 0.7.8-beta (2014-10-11)\n\n\tRemoved ltmain.sh script, which is part of libtool, which is not used\n\tanymore.  Thanks to Hendrik Jaeger (a.k.a. henk).\n\n\tAdded executable() builtin function that checks whether executable exists\n\tat given path or in one of directories listed in $PATH.\n\n\tAdded one more :if command example to documentation.  Thanks to John\n\tMagolske.\n\n\tAdded more human-friendly (xterm-like) names for 256 colors.  Thanks to\n\tMichael Vetter (a.k.a. jubalh).\n\n\tAdded i and I flags to :filter command to control filter case sensitivity.\n\tThanks to filterfalse.\n\n\tAdded filter flags to output of :filter? command and formatted output as a\n\ttable.\n\n\tAdded cancellation (handling of Ctrl-C) for FUSE mounting (but not\n\tunmounting).\n\n\tAdded multiblock \"selection\" (in quotes because it's also block\n\tdeselection and inversion of selection for completeness).  Thanks to\n\tranousse, Michelle Bonk (a.k.a. unixtechie).\n\n\tAdded av normal mode shortcut that activates selection amending mode.\n\n\tAdded/updated av/v/V visual mode keys to switch type of current visual mode.\n\n\tAdded Ctrl-G key to visual selection amending mode, which switches kind of\n\tamending (append/remove/invert).\n\n\tAdded \":highlight clear\" to reset to builtin colors.  This balances\n\tchange in resetting color scheme to default one.  Useful for building color\n\tschemes that are partially based on the builtin one.\n\n\tAdded full command names to the manual page to ease searching them.\n\tThanks to y2kbugger.\n\n\tAdded 'syscalls' boolean option.  It makes Vifm prefer to perform\n\tfile-system operations with external applications on rather then with\n\tsystem calls.  {EXPERIMENTAL}, {WORK-IN-PROGRESS}.  The option will be\n\teventually removed.  Mostly *nix-like systems are affected.\n\n\tAdded implementation for directory and file removal, copying, moving, file,\n\tdirectory and symbolic link creation with system calls.  Advanced stuff\n\tlike ACL is not supported at least not at the moment.  Available only if\n\t'syscalls' option is set.\n\n\tAdded 'cdpath' option.  Thanks to Bruce Hunsaker (a.k.a. hunsakerbn).\n\n\tAdded progress for file system operations.  Available only if 'syscalls'\n\toption is set.\n\n\tAdded =pattern special form of user-defined command that sets local filter\n\tto the given value (alike \"/pattern\" and \"filter value\").  Thanks to\n\tfilterfalse.\n\n\tAdded \"[a]ppend the end\" conflict resolution option (appends the rest of\n\tfile, e.g. if previous operation was terminated).  Available only if\n\t'syscalls' option is set. Thanks to Sergei Shilovsky.\n\n\tAdded OtherLine highlight group for cursor of inactive pane.  Thanks to\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tAdded 'tuioptions' option.  Controls padding of file lists in panels and\n\tvisibility of side borders.  Thanks to Bruce Hunsaker (a.k.a. hunsakerbn)\n\tand Svyatoslav Mishyn (a.k.a. juef).\n\n\tAdded 'fillchars' option.  Configures fill character for vertical borders.\n\tThanks Svyatoslav Mishyn (a.k.a. juef).\n\n\tAdded Vim plugin directory to share/vifm/vim on `make install`.  Thanks\n\tSvyatoslav Mishyn (a.k.a. juef).\n\n\tAdded has() builtin function that checks whether particular property is\n\tenabled (two properties for now: \"unix\" and \"win\").  Thanks to filterfalse.\n\n\tAdded logical NOT unary operator (\"!\").\n\n\tAdded function name completion on command-line.\n\n\tAdded file renaming filetype plugin for Vim.  It displays list of original\n\tfile names in a vertical split.  Thanks to Factorial Prime.\n\n\tAdded file additional mail filetype plugin for Vim.  It allows one to pick\n\tattachments via Vifm on <localleader>a shortcut.  Thanks to Pavneet Arora.\n\n\tAdded merge all option for name conflict resolution.  Same as \"merge\", but\n\tremember the choice for future conflicts of directories.  Thanks to\n\twillemw12.\n\n\tHighlight environment variables in :source command.\n\n\tDo not highlight option names in the right-hand side of assignments of\n\t:set command.\n\n\tHighlight numbers and all operators (most were missing) in expressions.\n\n\tHighlight wrapped :! commands properly.\n\n\tVarious syntax highlight improvements related to handling of command\n\targuments.\n\n\tMake Vim plugin use cmd.exe as default shell on Windows.  Thanks to\n\tJonathan Da Silva.\n\n\tProvided additional repository for Vim plugin (see the README for URL).\n\n\tDocumented how to use 256 colors in :highlight command.  Thanks to Michael\n\tVetter (a.k.a. jubalh).\n\n\tRewrote trash content removal with system calls in background thread to\n\tomit unportable invocation of shells.  It's also visible in :jobs menu.\n\tThanks to lyuts and ckester.\n\n\tIgnore trailing whitespace after background mark (\" &\") in command-line\n\tmode.\n\n\tMade :filter command consider trailing slash for symbolic links that point\n\tto directories.  Thanks to filterfalse.\n\n\tDo not reset selection on navigating to a mark in current directory.\n\tThanks to filterfalse.\n\n\tDisplay error on encountering unknown values assigned to 'sort' option.\n\n\tAllowed use of :filter syntax in user-defined filter commands (e.g.\n\t\"command conf filter/.*\\.cfg$/\").\n\n\tDo not reset color scheme to default one on :restart if another existing\n\tone is stored in vifminfo file.\n\n\tAllowed tabulation to be used as arguments separators in command-line\n\tcommands.  Thanks to y2kbugger.\n\n\tRenamed \"default color scheme\" to \"primary color scheme\" in documentation\n\tto avoid confusion.\n\n\tSeparate visual selection marks ('<' and '>'), which allows to restore it\n\tvia \"gv\" in both panes.  Thanks to filterfalse.\n\n\tReset search results on toggling 'hlsearch' to apply new option value on\n\tthe next search query (/, ?, n, N).\n\n\tInclude regular expression in search error message that says that it's\n\twrong.\n\n\tAvoid displaying useless search messages (those that user can't see, but\n\tthat are shown in :messages).\n\n\tImplement \"(\" and \")\" keys for \"perms\" and \"type\" sorting keys.  Thanks to\n\tfilterfalse.\n\n\tSmart paths completion that allows completion of quoted arguments (both '\n\tand \" types of quotes) and considers argument type context by performing\n\tescaping when needed.\n\n\tDocumented environment variables used by vifm separately as usually done\n\tin documentation for other applications.\n\n\tMade +/- operands after semicolon in command-line range adjust base range\n\tend position rather than base cursor position as Vim does.  Thanks to\n\tfilterfalse.\n\n\tDocumented connection between local filter and 'incsearch'.  Thanks to\n\tfilterfalse.\n\n\tRepeat search with last used search pattern on empty pattern of the search\n\tmode.\n\n\tAutomatically remove non-existent directories from directory history on\n\t:history command to speed up future operations (this clean up is very cheap\n\ton composing menu).\n\n\tOptimized speed of checking existence of a directory (important on\n\tdisplaying directory history).\n\n\tSkip nonexistent directories on Ctrl-O/Ctrl-I.\n\n\tExtended 'slowfs' option format to allow path prefixes (in particular,\n\tit's useful for autofs).  Thanks to Евгений Жаров (a.k.a. ezharov).\n\n\tRenamed configure.in to configure.ac.  Thanks to Hendrik Jaeger (a.k.a.\n\thenk).\n\n\tMade it possible to hide Vifm's documentation from Vim when it's not run by\n\tVifm's :help command.  Thanks to ranousse.\n\n\tSeparated Vifm's vimdoc from plugin documentation.\n\n\tDo not store temporary messages of command-line in history (progress\n\tmessages).\n\n\tHidden misleading error message from git during successful build.\n\n\tMade expand() builtin function expand environment variables.  Thanks to\n\tfilterfalse.\n\n\tDo not show dead entries in :lstrash menu.\n\n\tHide files from previously used trash directories in :lstrash.  Thanks to\n\tfilterfalse.\n\n\tChanged \"overwrite all\" key from \"a\" to \"O\" for consistency.  Thanks to\n\twillemw12.\n\n\tFixed odd creation of ~/.vifm/Trash directory even when it's redefined in\n\tvifmrc using 'trashdir' option.\n\n\tFixed segmentation fault on running vifm with single argument if restored\n\tcursor is in the right pane.  Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\n\tFixed visual glitch for long wide character (CJK) file names with disabled\n\tcropping.  Thanks to anonymous from linux.org.ru.\n\n\tFixed trash emptying when csh-like shell is in use.  Thanks to lyuts.\n\n\tFixed \"$APPDATA/Vifm\" directory existence check for Vim plugin on Windows.\n\tThanks to Jonathan Da Silva.\n\n\tFixed running external commands with long titles inside terminal\n\tmultiplexers.  Invoked shell in current directory.\n\n\tFixed processing of marks command followed by anything in right-hand side of\n\ta mapping.  Thanks to filterfalse.\n\n\tFixed a minor UI glitch with drawing rightmost character position of the\n\tstat window after startup.\n\n\tFixed segmentation fault during startup in a small terminal on OS X.\n\tThanks to Daniel Dettlaff (a.k.a. dmilith).\n\n\tFixed right aligned cropping for CJK (e.g. viewcolumns={name}..,{} could\n\tprint one more character position or fail due to assertion).\n\n\tFixed unexpectedly broken compilation on FreeBSD.  Thanks to Daniel\n\tDettlaff (a.k.a. dmilith).\n\n\tFixed view update after :restart in some cases.  Thanks to filterfalse.\n\n\tFixed UI glitches and most of flickering of the TUI on :restart.\n\n\tFixed check for wrong color number in :highlight.  Thanks to y2kbugger.\n\n\tFixed :highlight command recovery.  Thanks to y2kbugger.\n\n\tFixed :!! command, seems to be not working for a while.\n\n\tFixed segmentation fault on no view history and \":set autochpos\" in\n\tvifmrc.  Thanks to ranousse.\n\n\tFixed small visual multiline status bar update issue.  Thanks to ranousse.\n\n\tFixed non-updated single character of status line for multiline status\n\tbar.\n\n\tFixed processing file names with sharp sign for some shells.  Thanks to\n\tFlaviu Tamas (a.k.a. flaviut).\n\n\tFixed message about wrong search pattern regular expression.\n\n\tFixed Ctrl-C detection, false positives occurred on resizing\n\tterminal (both come as signals into program).\n\n\tFixed some small issues and UI glitches related to 'lsview' and\n\t'viewcolumns' options.\n\n\tFixed operations with directories that have very long names.\n\n\tFixed stripping special sequences from vifm-help.txt on OS X.  Thanks to\n\tStephen L. Holtz (a.k.a. stephenholtz).\n\n\tFixed ga and gA commands for files bigger than 4 GiB on 32-bit operating\n\tsystems.  Thanks to filterfalse.\n\n\tFixed some buffer overrun bugs discovered on OS X and made tests more\n\tBSD-utils friendly.\n\n\tFixed segmentation fault on Alt-. command in command-line mode (since\n\t0.7.7).\n\n\tFixed wrong single file selection after applying local filter (also wrong\n\tnumber of selected files on status bar).  Thanks to filterfalse.\n\n\tFixed tracking of files in trash on Windows.  Thanks to filterfalse.\n\n0.7.7-beta to 0.7.7 (2014-05-16)\n\n\tImproved documentation on :file[x]type commands and time sorting keys.\n\tThanks to Stas Malavin.\n\n\tUpdated zenburn color scheme (by Svyatoslav Mishyn, a.k.a. juef).\n\n\tFixed drawing \"*\" mark for cursor in inactive pane.  Thanks to Svyatoslav\n\tMishyn, a.k.a. juef.\n\n\tFixed selecting file on navigation from menus with filelists.\n\n\tFixed processing of backward slashes in menus with filelists on Windows.\n\n\tFixed navigation to menu items with full paths on Windows.  Thanks to\n\tRobert Sarkozi.\n\n\tFixed following overwrite all option on file operation conflict\n\tresolution.  Thanks to Stas Malavin.\n\n0.7.6 to 0.7.7-beta (2014-04-30)\n\n\tAdded Ctrl-W z key to normal and view modes, which closes preview pane or\n\tview modes.  Thanks to filterfalse.\n\n\tAdded %A macro to 'findprg' and 'grepprg' options, which is expanded to\n\tunmodified list of arguments.  Thanks to Robert Sarkozi.\n\n\tAdded handling of paths with backward slashes for :find/:locate/:grep/%M\n\tmenus on Windows.  Thanks to Robert Sarkozi.\n\n\tAdded sample light color scheme.  Patch by Daniel R. (a.k.a. reicheltd).\n\n\tAdded :lstrash command-line command, which displays list of files in trash.\n\tThanks to Sergei Shilovsky.\n\n\tAdded :trashes command-line command, which lists all non-empty trash\n\tdirectories.  Thanks to Sergei Shilovsky.\n\n\tAdded cancellation handling for file system operations and invocations of\n\texternal applications (works best on *nix systems).  Thanks to Milan\n\tSvoboda, a.k.a. tex.\n\n\tAdded \"type\" key to the 'sort' option to allow controlling grouping of\n\tdirectories.  Thanks to Daniel R. (a.k.a. reicheltd).\n\n\tAdded &option syntax for expressions (returns value of an option).\n\n\tAdded <nop> angle bracket notation.  Thanks to filterfalse.\n\n\tAdded 'number', 'relativenumber' and 'numberwidth' options to control\n\tdisplaying of file numbers.  Thanks to filterfalse and greye.\n\n\tAdded \"gf\" (go to file) and \"e\" (open in editor) keys to :grep, :find,\n\t:locate and user menu with navigation (%M macro).\n\n\tAdded --enable-remote-cmd switch to configure script disabled by default,\n\tas current implementation of the feature is insecure.  Thanks to astrell.\n\n\tAdded Ctrl-X a/c/d/e/m/r/t/= keys to command-line mode that insert parts of\n\tfile names and values of filters (see related documentation).  Thanks to\n\tranousse and filterfalse.\n\n\tAdded %n macro which suppresses using of terminal multiplexer in a\n\tcommand (user-defined :command, :!command or :file[x]type action).\n\n\tAdded sample dark solarized color scheme (provided by Stéphane, a.k.a.\n\tistib).\n\n\tAdded zenburn color scheme (provided by Svyatoslav Mishyn, a.k.a. juef).\n\n\tExtended 'trashdir' to handle list of path, some of which can specify\n\tlocation of trash directories local to each mount point.  Thanks to\n\tsmpolymen and Sergei Shilovsky.\n\n\tExtended parser to support integer number constants and unary minus and\n\tplus operators.\n\n\tExtended parser to support <, <=, >= and > comparison operators for strings\n\tand integers.\n\n\tTreat semicolon (\";\") as a valid range separator for command-line\n\tcommands.\n\n\tAllow empty ranges for command without name (as in :4).\n\n\tDon't reset view selection on :if and :else commands.\n\n\tOptimized file name comparison on sorting.\n\n\tImproved documentation on bookmarks (documented special bookmarks).\n\n\tDon't select parent directory automatically for local filter.  Thanks to\n\tfilterfalse and jtbm37.\n\n\tDisplay error message when :delmarks! is followed by arguments.\n\n\tMade bookmarks merging smarter by storing timestamps.  Removing bookmarks\n\tnow works as expected.  Bookmarks overwriting by another instance\n\tshouldn't happen anymore.  Thanks to Michael Maddern, a.k.a. madders.\n\n\tDisabled command-line commands auto-completion in local filter prompt.\n\n\tAllowed disabling quickview while its pane is hidden.\n\n\tDisplay value of local filter in the output of :filter? command.\n\n\tHandle backspace in preview window as a terminal.  Thanks to Svenn Are\n\tBjerkem, a.k.a. svenn.\n\n\tDo not use terminal multiplexer for internal edit operations (editing of\n\tfile names or command-line).\n\n\tSkip empty and whitespace only error messages, they are of no use.\n\n\tHighlight environment variables in :unlet command.  Thanks to filterfalse.\n\n\tFixed file descriptor leak on finishing background tasks.  Thanks to\n\tanonymous from linux.org.ru.\n\n\tFixed displaying of search messages in menus.\n\n\tFixed check for whether temporary files with list of file names is\n\tchanged during bulk rename operation.  Thanks to Daniel R (a.k.a.\n\treicheltd).\n\n\tFixed reset of charset options (like 'cpoptions'), which could result in\n\tsegmentation faults.\n\n\tFixed memory leaks on :restart command.\n\n\tFixed format arguments parsing on displaying \"Invalid expression\" error\n\tmessage for :echo and :execute commands.\n\n\tFixed overwrite of previously visited directory on view update (made\n\t`:cd -` and '' useless after, for instance, switching panes).\n\n\tFixed error message on navigating to a wrong bookmark.\n\n\tFixed possible removing files at destination on restoring files from trash\n\tmanually.\n\n\tFixed ignoring command-line commands that entered by a mapping: ignore\n\tonly commands entirely entered by a mapping, not finished by one.  Thanks\n\tto Евгений Жаров (a.k.a. ezharov).\n\n\tFixed segmentation failure when invalid bookmark name is used with quote\n\tcommand as a motion.\n\n\tFixed processing of some forms of nested :if statements.\n\n\tFixed segmentation fault for operating systems that have gigantic maximum\n\tlength of argument list.  Thanks to Jiri Wiesner.\n\n\tFixed situation when oldest elements of histories were not available even\n\tthough they were present in vifminfo file.\n\n\tFixed number of selected files after \":invert s\" command.  Thanks to\n\tfilterfalse.\n\n\tFixed q= which displayed history of search by mistake.  Thanks to\n\tfilterfalse.\n\n\tFixed merging directories on delete then paste.\n\n\tFixed wrong file name cropping on moving/copying files from trash.  Thanks\n\tto kazufukurou.\n\n\tFixed extra escaping on prompt filename completion on Windows.\n\n\tFixed drawing of hidden view in explore mode over active one.  Thanks to\n\tfilterfalse.\n\n\tFixed missing title of quickview pane after entering view mode (e.g. with\n\tCtrl-W W).\n\n\tFixed titles update when one of panes is in view mode (active and inactive\n\thighlighting wasn't always right).\n\n\tFixed segmentation fault caused by uninitialized type field of filelist\n\tentry (shared directory in virtual machine in this case).  Thanks to Milan\n\tSvoboda, a.k.a. tex.\n\n\tFixed navigation to non-readable directories from a menu.\n\n\tFixed selection borders UI glitch.  Thanks to Svyatoslav Mishyn, a.k.a.\n\tjuef.\n\n\tFixed issues discovered by cppcheck, Clang static analyzer and Coverity\n\tscan tools.\n\n\tFixed updating terminal title for some environments.  Thanks to\n\tfilterfalse.\n\n\tFixed extending filetypes that are missing macro on Windows when cmd.exe\n\tshell is used.  Thanks to Daniel Polanco, a.k.a. dlpolanco.\n\n\tFixed work with filenames contining special symbols on Windows with cmd.exe\n\tshell.  Thanks to Daniel Polanco, a.k.a. dlpolanco.\n\n\tFixed testing whether application uses GUI on Windows when path contains\n\tspaces.\n\n\tFixed crash on a sequence of :let/:unlet statements.  Thanks to\n\tfilterfalse.\n\n0.7.6-beta2 to 0.7.6 (2013-10-31)\n\n\tRemoved check for stdscr from the configure.  Thanks to jtbm37.\n\n\tMade command name column of the :command menu automatically expand for\n\tlong names.  Thanks to MadMaverick9.\n\n\tProvided better error messages on entering view mode.\n\n\tMade local filter work when 'incsearch' is not set.\n\n\tFixed partial displaying of binary data in view mode.\n\n\tFixed displaying of non-printable characters in preview and view mode.\n\n\tFixed redrawing ruler on terminal resize while being in explore mode.\n\n\tFixed small drawing issue with menu lines containing Control+x characters.\n\n\tFixed search result highlighting of view mode on line edges.\n\n\tFixed backward search in view mode for the first line.\n\n\tFixed view mode highlighting for multi-byte characters.  Thanks to\n\tfilterfalse.\n\n\tFixed segmentation fault on exploring same file in both views.  Thanks to\n\tfilterfalse.\n\n\tFixed unexpected view redraw on :sync command with view mode active in the\n\tother pane.  Thanks to filterfalse.\n\n0.7.6-beta to 0.7.6-beta2 (2013-10-24)\n\n\tMade building for Windows64 platform possible.\n\n\tConsider initial filter inversion value in user defined filter command.\n\tThanks to filterfalse.\n\n\tSeveral minor fixes/updates in documentation and sample vifmrc.  Thanks to\n\tfilterfalse.\n\n\tDisplay error after sourcing file with unmatched :if/:endif statements.\n\tThanks to filterfalse.\n\n\tFixed displaying of barely visible false error messages on the status bar\n\ton some rename operations.\n\n\tFixed running executables without specifying their extension on Windows.\n\tThanks to filterfalse.\n\n\tFixed viewing of files with custom viewers on Windows.  Thanks to\n\tfilterfalse.\n\n\tFixed issues with reading files on Windows.  Thanks to Robert Sarkozi.\n\n0.7.5 to 0.7.6-beta (2013-10-17)\n\n\tAdded \"f\" flag to 'cpoptions' option.  It controls initial state of\n\tfilename filter inversion for :filter[!] {regex} command (in other words,\n\tit inverts meaning of exclamation mark).  Thanks to filterfalse.\n\n\tAdded helptags for 'cpoptions' flags in documentation in Vim format.\n\n\tAdded --with-curses-name=NAME option to the configure script to allow\n\tspecifying name of the curses library to link against.  Thanks to\n\tRussell Urquhart.\n\n\tAdded \"Globs\" section to the documentation.\n\n\tAdded 'aproposprg', 'findprg', 'grepprg' and 'locateprg' options to specify\n\texternal commands format.\n\n\tAdded optional argument for :invert command.  Thanks to filterfalse.\n\n\tAdded editing command-line using Vim (like command window in Vim).  Thanks\n\tto filterfalse.\n\n\tAdded Ctrl-G command-line key to start editing command-line in external\n\teditor (for editing command, search pattern and new file names).\n\n\tAdded q:, q/, q? and q= normal and visual modes keys (except q=, which is\n\tdefined for normal mode only) to prompt for command-line in external\n\teditor.\n\n\tAdded local to directory temporary file name filter.  Thanks to Alexandre\n\tViau and filterfalse.\n\n\tAdded \"=\" normal mode key, which activates file name filtering.\n\n\tAdded \"fhistory\" to 'vifminfo', which controls storing of local filter\n\thistory.\n\n\tAdded \"=\" and \"filter\" values for :history command, to show history of\n\tlocal filter.\n\n\tAdded integration with tmux.  Thanks to Seth VanHeulen (a.k.a. svanheulen).\n\n\tAdded merge option for name conflict resolution, which allows merging two\n\tdirectories overwriting files with matching names.\n\n\tAdded desktop entry file.  Thanks to Richard Benson.\n\n\tUpdated application icon.  Thanks to Richard Benson for making it.\n\n\tUpdated config.guess and config.sub files to their latest versions.  Thanks\n\tto Hendrik Jaeger (a.k.a. henk).\n\n\tRemoved deprecated acconfig.h file.  Thanks to Hendrik Jaeger (a.k.a.\n\thenk).\n\n\tReplace compile symbolic link with actual file.\n\n\tDistinguish files and directories in filename filter by appending a slash\n\tto names of directories.\n\n\tUse last search pattern as filename filter when :filter command gets an\n\tempty argument (:filter//, :filter\"\", :filter'').  Thanks to filterfalse.\n\n\tDon't complete commands like :filter, :tr, :substitute, etc.\n\n\tMatch only filename against global in :fileviewer instead of full path.\n\n\tRemoved check for WINDOW type in curses.h from configure script (didn't\n\twork for OS X and cygwin).  Thanks to filterfalse.\n\n\tUpdated syntax file to ignore non-sense characters in front of some\n\tcommands (e.g. :set, :let, :highlight).  Thanks to filterfalse.\n\n\tUpdated syntax file to highlight arguments of the :execute command as\n\texpressions.\n\n\tUpdated syntax file to highlight arguments of all map and for :command\n\tcommands smarter than before.\n\n\tFilter in case insensitive way on Windows.\n\n\tUpdated syntax file to highlight <home>.  Thanks to filterfalse.\n\n\tUpdated syntax file to highlight <home> and environment variables in\n\targument list of the :cd command.  Thanks to filterfalse.\n\n\tUpdated syntax file to highlight :normal when it's not first in the line\n\tand treat its arguments as command-line if it starts with a colon.\n\tThanks to filterfalse.\n\n\tUpdated syntax file to do not highlight anything inside quoted strings\n\texcept when they are part of an expression.\n\n\tRemove escape-codes from generated plain-text documentation on cygwin.\n\tThanks to filterfalse.\n\n\tDo not reset selection on search when 'hlsearch' is reset.  Thanks to\n\tfilterfalse.\n\n\tPreserve current cursor position on view resort.\n\n\tDon't let completion of the :history command eat all available memory.\n\n\tMade all Ctrl-W x keys available in view mode.  Thanks to filterfalse.\n\n\tExpand environment variables in values of the 'fusehome' and 'trashdir'\n\toptions.  Thanks to filterfalse.\n\n\tProvided more adequate reaction on setting 'trashdir' variable to wrong\n\tvalue.\n\n\tFrom now on not absolute paths for the 'fusehome' options are rejected.\n\n\tSeparated file name filter into manual and automatic mainly for\n\tconvenience.\n\n\tUse AC_GNU_SOURCE macro in configure.in, which is the correct way to\n\trequest for GNU extensions across various operating systems.\n\n\tCheck whether current directory is writable on :mkdir command.\n\n\tCheck destination path existence before changing directory to it on :sync\n\tcommand.\n\n\tConsider 'classify' option on displaying file name in the status bar.\n\n\tDon't overwrite directory stack stored in vifminfo on exit unless it was\n\tchanged in current session.\n\n\tBetter error messages on application run failure on Windows.\n\n\tDon't wait finishing of GUI applications on Windows.  Thanks to Robert\n\tSarkozi.\n\n\tStore cancelled prompt input in prompt history.\n\n\tBetter order of command-line command checks.\n\n\tShow better error message on unmatched quotes in command arguments.\n\n\tForce split-view when two paths are specified on command-line.  Thanks to\n\tfilterfalse.\n\n\tCorrected view switching when vifm gets only one argument on\n\tcommand-line (didn't switch if pane was already at specified path).\n\n\tProcess [count] passed to gUU, gU<selector>, gUgU, gu<selector>, guu and\n\tgugu commands.\n\n\tChanged meaning of the R key in view mode from redrawing view to\n\treloading it preserving scroll position.  Thanks to Robert Sarkozi.\n\n\tDocumented how | is treated on command line by some commands.  Thanks to\n\tRoger Bongers.\n\n\tIncreased performance of (re)loading content for view mode.  Thanks to\n\tRobert Sarkozi.\n\n\tFixed configuration when set_escdelay() function is not available.\n\tThanks to Russell Urquhart.\n\n\tFixed building when wcscasecmp() and wcsncasecmp() functions are not\n\tavailable (just don't use those functions).  Thanks to Russell Urquhart.\n\n\tFixed reserving of about 1 GiB piece of memory on 256-color terminals.\n\n\tFixed hanging on previewing files with long lines and code highlighting.\n\n\tFixed running of executable with symbols that require escaping in their\n\tname (*nix only).\n\n\tFixed terminal hang after executing several external commands in a row.\n\tThanks to filterfalse.\n\n\tFixed \"No matches...\" message for :apropos command, which accessed\n\tfreed memory.\n\n\tFixed displaying of search results message for different combinations of\n\t'wrapscan' and 'hlsearch' options states.\n\n\tFixed real/potential issues discovered using Coverity scanner.\n\n\tFixed search of the first element in file list when displaying of parent\n\tdirectory is disabled.\n\n\tFixed small memory leak in expression parser.\n\n\tFixed local options after startup (could be loaded for wrong pane).\n\tThanks to filterfalse.\n\n\tFixed fails on using absolute path to executables when 'fastrun' option\n\tis on.  Thanks to MadMaverick9.\n\n\tFixed running external commands with 'fastrun' option set, in case when\n\tthere are more than one executable with given name.\n\n\tFixed cursor position of the other view after switching quick view off\n\tright after startup.\n\n\tFixed storing directories passed as command-line parameters in\n\tdirectory history.  Thanks to filterfalse.\n\n\tFixed compilation for systems, where coreutils doesn't support -n flag.\n\n0.7.5-beta to 0.7.5 (2013-05-10)\n\n\tBetter Makefile for tests.  Thanks to Hendrik Jaeger (a.k.a. henk).\n\n\tMake running tests of color manager depend less on type of terminal.\n\tThanks to Hendrik Jaeger (a.k.a. henk).\n\n\tDon't link against libdl when it's not used.  Thanks to Hendrik\n\tJaeger (a.k.a. henk).\n\n\tCommit src/Makefile.in file as it is (do not remove odd trailing\n\twhitespace characters), it could cause issues with automated building.\n\tThanks to Hendrik Jaeger (a.k.a. henk).\n\n\tSet locale for tests that rely on it explicitly.  Thanks to Hendrik\n\tJaeger (a.k.a. henk).\n\n\tDon't accept arguments to the :help command when 'vimhelp' option is off.\n\n\tPause on Windows on failed execution of a help command.  Thanks to\n\tfilterfalse.\n\n\tPause on Windows, when executing of shell command fails.\n\n\tResize terminal window back to its original size after :help on Windows.\n\tThanks to filterfalse.\n\n\tFixed generation of vifm-help.txt file on Windows (all occurrences of the\n\t\"[m\" sequence were removed).  Thanks to Sebastian Cyprych.\n\n\tFixed cd'ing to a directory after showing \"Directory Access Error\"\n\tmessage.\n\n\tFixed mapping of <c-h> and <bs> on Windows.  Thanks to filterfalse.\n\n\tFixed Tab key description in documentation, the part related to\n\t'cpoptions' flag.  Thanks to filterfalse.\n\n\tFixed potential issues pointed out by clang static analyzer.\n\n\tFixed calling Vim on :help command without arguments on Windows.  Thanks\n\tto filterfalse.\n\n\tFixed calling Vim on :help command with 'vimhelp' option turned off and a\n\tpath with spaces in vifm's configuration directory.  Thanks to\n\tfilterfalse.\n\n\tFixed resetting of 'lines' and 'columns' options to their default values.\n\tThanks to filterfalse.\n\n0.7.4b to 0.7.5-beta (2013-04-22)\n\n\tAdded Gentoo ebuild.  Thanks to Oleg Gordienko (a.k.a. gordio).\n\n\tAdded parsing of escape codes in the preview pane.\n\n\tAdded parsing of escape codes in explore (less-like) mode.\n\n\tAdded \"perms\" sorting key on *nix (proposed by Daniel Dettlaff, a.k.a.\n\tdmilith).\n\n\tAdded sample color schemes (proposed by Daniel Dettlaff, a.k.a. dmilith).\n\n\tAdded expand() builtin function to expand macros (thanks to Sebastian\n\tCyprych for the use case).\n\n\tAllowed exclamation mark for the :sync command (to force synchronization\n\tof cursor position when used without arguments).\n\n\tAdded macros that are expanded to register's content (thanks to Florian\n\tBaumann, a.k.a. derflob).\n\n\tAdded 'shortmess' option and its first flag: \"T\" to shorten long\n\tstatus bar messages.\n\n\tAdded --without/[with]-dyn-X11 flag to the configure script to control\n\tstatic/dynamic linking against libX11 library.  Thanks to Hendrik\n\tJaeger (a.k.a. henk) for the idea.\n\n\tDon't use libtool in build process on *nix platforms (thanks to Merovius).\n\n\tLess-like mode now highlights multiple matches in a line.\n\n\tLess-like mode is now updated immediately when one changes 'wrap' option.\n\n\tDon't redraw file list for explore window on resize.\n\n\tLess updates for window in explore mode on resize.\n\n\tDon't fallback to default colors on try to switch to a colorscheme, which\n\tis not supported by terminal.\n\n\tMade 'slowfs' option actually work on OS X (thanks to Daniel Dettlaff,\n\ta.k.a. dmilith).\n\n\tMade :execute process its arguments just like :echo command (thanks to\n\tDaniel Dettlaff, a.k.a. dmilith, which made me discover old behaviour).\n\n\tSave dot files filter state in vifminfo (thanks to Daniel Dettlaff,\n\ta.k.a. dmilith).\n\n\tSlightly updated plugin related documentation.\n\n\tDon't store last command-line command for the dot normal mode command\n\tbetween sessions.  Also it doesn't depend on command-line history anymore\n\tand can be used with completely disabled history.\n\n\tChanged the way title of the permissions dialog is composed.\n\n\tFixed configuration on OS X and FreeBSD because of unavailable mntent.h\n\theader and strverscmp() function.  Thanks to Daniel R. (a.k.a. r1chelt)\n\tand Daniel Dettlaff (a.k.a. dmilith).\n\n\tFixed configuration when libmagic is not available, but selected (tried\n\tto check its symbols).\n\n\tFixed configuration on OS X when libncursesw is installed as libncurses.\n\tNow configure script checks for libncurses if libncursesw is not found.\n\tThanks to Daniel R. (a.k.a. r1chelt).\n\n\tFixed vifminfo file update on Windows (wasn't updated at all).\n\n\tFixed \"Press return...\" message appearing always on OSX (yes, again; hope\n\tthis is final fix).  Thanks to Daniel R. (aka r1chelt).\n\n\tFixed buffer overflow on composing very long list of sorting keys.\n\tThanks to Christoph (a.k.a. informationen).\n\n\tFixed reading very long lines from vifminfo file.\n\tThanks to Christoph (a.k.a. informationen).\n\n\tFixed displaying of very long lines correctly in explore mode when 'wrap'\n\tis off.\n\n\tFixed displaying of very long lines correctly in menu mode.\n\n\tFixed using of extra memory for menu items that are read from other\n\tprogram's output.\n\n\tFixed segmentation fault on adding new elements to history after decreasing\n\t'history' option.  Thanks to Oleg Gordienko (a.k.a. gordio).\n\n\tFixed determining of executable files on Windows (particularly parsing\n\tthe last item of $PATHEXT environment variable).\n\n\tFixed message displayed on invalid search pattern in explore mode.\n\n\tFixed highlighting of search results that cross virtual line boundary in\n\texplorer mode when wrapping is on.\n\n\tFixed file preview pane update on Ctrl-W X.\n\n\tFixed segmentation fault on < or g keys in explore mode when file is fully\n\tvisible.\n\n\tFixed displaying of last lines in explore mode with wrapping turned on for\n\ttexts that contain characters taking more than one character position.\n\n\tFixed displaying of pane title for paths that contain characters taking\n\tmore than one character position.\n\n\tFixed displaying of bookmark menu for paths that contain characters taking\n\tmore than one character position.\n\n\tFixed displaying of status line for file names that contain characters\n\ttaking more than one character position.\n\n\tFixed displaying of menus for lines that contain characters taking more\n\tthan one character position.\n\n\tFixed screen update after v in explore mode.\n\n\tFixed Ctrl-W H/J/K/L keys in less-like mode activated by <s-tab>.\n\n\tFixed Ctrl-W H/J/K/L/X keys in normal mode when explore mode is active in\n\tthe other pane.\n\n\tFixed initial cursor position in the :colorscheme menu.\n\n\tFixed mappings of sequences containing non-ascii characters (thanks to\n\tksandr1v).\n\n\tFixed strange behaviour of Ctrl-U on top of file list in visual and normal\n\tmodes.\n\n\tFixed a bug with loading multiline commands containing bars ('|') from a\n\tvifmrc file (thanks to Sebastian Cyprych).\n\n\tFixed a bug with trailing characters on loading multiline commands\n\tcontaining bars ('|') from a vifmrc file.\n\n\tFixed a very small issue with positioning of cursor mark in the other\n\tpane, which happened after starting vifm with another size of the\n\tterminal.\n\n\tFixed a macro expansion in command-line on Windows when 'shell' is set to\n\t\"cmd\" (thanks to Sebastian Cyprych).\n\n\tFixed a typo in configure.in file, which didn't allow to specify custom\n\tlocation of curses library.\n\n\tFixed setting of value of $CPPFLAGS in configure.in, which didn't allow\n\tto specify custom location of curses library.\n\n\tFixed cursor position right after entering fuse mount point when old\n\tcursor position is recalled from history and view has too few rows.\n\n\tFixed occasional reset of cursor color to default after pane switching\n\toperations.\n\n\tFixed displaying of search results message when 'incsearch' option is on.\n\n\tFixed destination file name existence on rename operation.\n\n\tFixed very rare crash on :chmod (thanks to Marton Balazs, a.k.a. balmar).\n\n\tFixed chmod on files with long names (they were truncated and appended by\n\tellipsis).\n\n\tFixed processing of incomplete escape sequences in command-line (used to\n\tcrash vifm).  Thanks to Denis Protivenskiy.\n\n0.7.4a to 0.7.4b (2013-01-21)\n\n\tRemoved screen title forcing for shell commands.\n\n\tFixed 'z' (thus 'Z') register, which was unavailable (apparently since\n\t0.6.3).\n\n\tFixed using of register name argument in :yank command (was ignored).\n\n\tFixed error message on command errors in user defined command-line\n\tcommands (e.g. on `:foo` after `:command foo :bar`).\n\n\tFixed displaying of title of the other pane in one view mode.\n\n\tFixed displaying of file names in Chinese and other languages that can\n\thave characters taking more than one position on the screen.\n\n\tFixed command-line cursor positioning for Chinese and other languages that\n\tcan have characters taking more than one position on the screen.\n\n\tFixed segmentation fault on :colorscheme command with no color schemes\n\tinstalled.\n\n\tFixed enumeration of colorschemes for some file systems.\n\n\tFixed handling of doubled single quote in single quoted command argument.\n\n\tFixed small bug with sorting numbers with and without leading zeroes.\n\n\tFixed applying of 'classify' option to symbolic links to directories.\n\n\tFixed running of external commands using screen on l or Enter key in the\n\tnormal mode.\n\n\tFixed Meta-. on Windows (didn't work because of pdcurses).\n\n\tFixed `:cd ........` command on Windows (looks more like a Windows issue).\n\n\tFixed silent ignoring issues on running executables on Windows.\n\n\tFixed races on writing vifminfo file.\n\n0.7.4 to 0.7.4a (2012-10-22)\n\n\tDon't redraw statbar until end of :restart command.\n\n\tDon't ignore wrong number of arguments in function calls, show an error.\n\n\tDon't build sources separately for tests.\n\n\tBetter processing of count given to \"!!\" normal mode command.\n\n\tHandle integer overflow of huge count correctly.\n\n\tMake commands like d2d, y2y and D2D work as in Vim.\n\n\tUse linux native console specific settings if $TERM ends with \"linux\" (not\n\tonly equals it).\n\n\tCheck TMPDIR, TEMP, TEMPDIR and TMP environment variables to determine\n\tlocation of directory for temporary files.\n\n\tMade processing of value of 'fusehome' option more error prone.\n\n\tFixed autotools configuration files.\n\n\tFixed terminal size resetting after :restart.\n\n\tFixed 'dotdirs' option on Windows.\n\n\tFixed repetition of `bar` in `foo | bar` on \".\" command.\n\n\tFixed segmentation faults on passing to big count to DD, dd or yy normal\n\tmode commands.\n\n\tFixed displaying of filenames with non-latin characters in the view on\n\tWindows.\n\n0.7.3a to 0.7.4 (2012-10-18)\n\n\tRemoved compile-time compatibility mode (the compatibility-mode switch),\n\tnow \"f\" flag in 'cpoptions' does the same.\n\n\tReplaced gl normal mode mapping for Windows with gr because of conflict.\n\n\tAdded Ctrl-W H/J/K/L normal mode keys.\n\n\tAdded status bar messages for :apropos, :find and :locate commands.\n\n\tAdded 'viewcolumns' local option to control view columns.\n\n\tAdded completion for :set option=<tab> even for options without variants.\n\n\tAdded Ctrl-T handling in command line to swap characters.\n\n\tAdded Meta-. handling in command line to paste last parts of previous\n\tcommands.\n\n\tAdded --without/[with]-X11 configure script option.\n\n\tAdded 'lsview' option to control ls-like view look.\n\n\tAdded gh, gj, gk and gl keys for normal and visual modes.\n\n\tAdded 0, ^ and $ keys for normal and visual modes, which also work as\n\tselectors in normal mode.\n\n\tAdded %E 'statusline' option macro, which means size of all selected files\n\tor current file, if no files are selected.\n\n\tAdded light versions of color names.\n\n\tAdded mapping commands for view and menu modes.\n\n\tAdded :echo command.\n\n\tAdded support for builtin functions and filetype() as the first one.\n\n\tAdded support for `==` and `!=` operators.\n\n\tAdded :if, :else and :endif commands.\n\n\tAdded man pages for vifm-pause script and vifmrc-converter.\n\n\tAdded :normal command.\n\n\tAdded 'dotdirs' option to control displaying of \"../\" directory.\n\n\tAdded \"t\" flag to 'cpoptions' option.\n\n\tAdded 'classify' option to set prefixes and suffixes for different file\n\ttypes.\n\n\tTry the rest of the programs for an association when the default isn't\n\tfound.\n\n\tAllow paths in :file[x]type command that contain spaces to be doublequoted\n\ton Windows.\n\n\tEscape pipe character during :file completion.\n\n\tExpand macros for user defined commands.\n\n\tChanged relative path base for :split and :vsplit commands.\n\n\tComplete only directory names for :split and :vsplit commands.\n\n\tCheck current view of other pane on leaving FUSE mount directory an don't\n\tunmount if that file system is still in use.\n\n\tComplete :set for short and full option names like Vim does (e.g. 'so'\n\tshould be expanded to 'sort', not only 'scrolloff').\n\n\tReduce delay between terminal resize and TUI redrawing.\n\n\tCheck for used curses symbols in ./configure script.\n\n\tCheck for libpthread presence in ./configure script.\n\n\tCheck for pthread.h header and all its required elements in ./configure\n\tscript.\n\n\tCheck for magic.h header and required libmagic functions in ./configure\n\tscript.\n\n\tCheck for regex.h header and all functions, macro and types connected with\n\tit in ./configure script.\n\n\tCheck for GTK headers and all related in ./configure script.\n\n\tCheck for socket related headers and function in ./configure script.\n\n\tCheck for a bunch of system headers, types and functions in ./configure\n\tscript.\n\n\tFlicker less on :restart command.\n\n\tDon't show Ctrl-C part in information message boxes where it doesn't make\n\tsense.\n\n\tRemove automatically generated files on `make clean`.\n\n\tDon't pause on '0' after Ctrl-W (count cannot start with zero).\n\n\tMultiply counts in front and in the middle of commands with Ctrl-W (as Vim\n\tdoes).\n\n\tMultiply counts in front of command and its selector (as Vim does).\n\n\tReduced memory consumption of view histories.\n\n\tFixed background bold (light) colors in linux native console.\n\n\tFixed segmentation fault on running vifm with one path in the argument\n\tlist.\n\n\tFixed directory content update on chain execution of several commands in\n\tmappings.\n\n\tFixed partial drawing of file list over status line after expanding one\n\tline status bar to multiple lines.\n\n\tFixed artifacts with bottom of the TUI after shrinking multiline status\n\tbar to one line.\n\n\tFixed file overwriting issue.\n\n\tFixed appearance of an empty filename in the :marks menu.\n\n\tFixed filter resetting on following bookmarks.\n\n\tFixed mapping of <c-h>.\n\n\tFixed \"Press return...\" message appearing always on OSX.\n\n\tFixed segmentation fault on :move command with path containing slash.\n\n\tFixed segmentatino fault on :restart during prompt history load.\n\n\tFixed eternal looping on \"(\" or \")\" in normal or visual mode and iname\n\tsort.\n\n\tFixed segfault on `:set all=` completion try.\n\n\tFixed displaying of 'columns' and 'lines' option values.\n\n\tFixed ga and gA over sshfs.\n\n\tFixed small issues with other pane position and mark update on startup and\n\tterminal resizing.\n\n\tFixed extra slash in :registers menu for files in root directory.\n\n\tFixed file viewer matching when symbolic link target is a directory.\n\n\tFixed checks for required headers in ./configure script.\n\n\tFixed checks for required functions in ./configure script.\n\n\tFixed check for git command presence in src/Makefile.am.\n\n\tFixed cursor position in menus, when 'scrolloff' is set.\n\n\tFixed utf-8 issue in :marks menu.\n\n\tFixed dd in :commands menu.\n\n\tFixed invoking of menus from command-line (with -c or + argument).\n\n\tFixed Ctrl-F and Ctrl-B in menus again (they probably didn't work\n\tcorrectly ever until now).\n\n\tFixed unexpected file list drawing on switching between panes in one pane\n\tmode with view active.\n\n\tFixed small issue with sorting files with numbers in names on *nix.\n\n\tFixed parsing of double single quote in single quoted strings.\n\n\tFixed description of installation to $HOME in the INSTALL file.\n\n\tFixed assignment of empty value to a option of set type.\n\n\tFixed small memory leak on restoring files from trash and putting files.\n\n\tFixed small memory leak related to :messages command.\n\n\tFixed small memory leak related to implicit single file selection.\n\n0.7.3 to 0.7.3a (2012-06-23)\n\n\tAdded a section about color schemes to the documentation.\n\n\tAdded checks for correct value of 'tabstop' option.\n\n\tAdded checks for correct value of 'timeoutlen' option.\n\n\tExpand tilde in the second argument of :colorscheme command.\n\n\tBetter completion for :colorscheme command.\n\n\tForbid relative paths in :colorscheme command until vifm is completely\n\tloaded.\n\n\tDocumented that %m, %M, %s, %S and %i have bigger priority than &.\n\n\tDocumented that %m, %M, %s, %S and %i are mutually exclusive.\n\n\tAllowed whitespace after option name in :set command.\n\n\tDocumented treating of whitespace around option names in :set command.\n\n\tReset value of 'columns' option to real number of columns.\n\n\tReset value of 'lines' option to real number of lines.\n\n\tReset value of 'scrolloff' option to zero on attempt to assign a negative\n\tvalue to it.\n\n\tFaster Ctrl-W x, Ctrl-W o, Ctrl-W s, Ctrl-W v, Ctrl-W =, Ctrl-W <,\n\tCtrl-W >, Ctrl-W -, Ctrl-W +, Ctrl-W |, Ctrl-W _.\n\n\tFaster redraw on terminal resizing.\n\n\tFaster execution of `:set sort=foo sortorder sortnumbers` in vifmrc.\n\n\tMade file filtering using regular expressions work faster (matters when\n\tdirectory contains several thousands files).\n\n\tDraw quickview on startup only once.\n\n\tFaster redrawing of status bar with \"-- VISUAL --\" message after \"Press\n\tEnter message\".\n\n\tShow correct number of selected files in visual mode after n and N keys.\n\n\tPass range given to alias to an aliased command.\n\n\tFixed unexpected resetting of dot filter on following mark to root\n\tdirectory.\n\n\tFixed loading file associations from vifminfo.\n\n\tFixed small memory leak on displaying :file menu.\n\n\tFixed saving of x file associations to vifminfo.\n\n\tFixed segmentation fault on :file command on files without associations\n\tand vifm built with --enable-desktop-files.\n\n\tFixed going to top of selection after Ctrl-A/X, C, i and zf in visual\n\tmode if visual mode was activated at least once before that.\n\n\tFixed compilation with ncurses prior to 5.7 version.\n\n\tFixed compilation warnings about unused result of fscanf.\n\n\tFixed merging of directory history in vifminfo file (loosed relative\n\tpositions of directories absent in history of running instance).\n\n\tFixed history size issue, when real histories size diverged with the\n\tvalue of 'history' option.\n\n\tFixed displaying of non-latin characters when panel width is only\n\tone character.\n\n\tFixed selection of ../ directory on gv key.\n\n\tFixed visual selection of the first file in the root directory.\n\n\tFixed memory leak on `:[ncv]map foo`.\n\n\tFixed restoring of file name filters.\n\n\tFixed restoring of cursor position in the other view if quick view was\n\topened too.\n\n\tFixed selection of files on search in visual mode with 'incsearch' option\n\tturned off or n and N keys regardless of 'incsearch' state.\n\n\tFixed search repeat in visual mode.\n\n\tFixed search update with 'incsearch' on Ctrl-<x> keys in search prompt.\n\n0.7.2 to 0.7.3 (2012-06-03)\n\n\tRemoved possibility of moving items in :file menu.\n\n\tRemoved empty line from :file menu for case when vifm was configured with\n\t--disable-desktop-files flag.\n\n\tAdded description for :filetype, :filextype and :fileviewer commands.\n\n\tAdded --enable-desktop-files (enabled by default) configure option.\n\n\tAdded completion for :touch command.\n\n\tAdded macros expanding for :mkdir command.\n\n\tAdded macros expanding for :touch command.\n\n\tAdded completion for :clone command.\n\n\tAdded completion for :copy, :move, :alink and :rlink commands.\n\n\tAdded completion for :mkdir command.\n\n\tAdded completion for :split and :vsplit commands.\n\n\tAdded completion for :rename command.\n\n\tAdded size of file in bytes in file info mode (Ctrl-G).\n\n\tAdded \"Y\" key to visual mode as an alias for \"yy\".\n\n\tAdded :finish command to use in sourced scripts.\n\n\tAdded %i macro to completely ignore output of external commands.\n\n\tAdded notes about automatic FUSE mounts to the documentation.\n\n\tAdded Ctrl-L handling in file info (Ctrl-G) mode.\n\n\tAdded vifm version and last modification date to vim documentation file.\n\n\tAdded q key to close menus.\n\n\tLeave leading zeros on Ctrl-A/X commands.\n\n\tCheck coreutils version on configuring to omit using of -n option with\n\tcoreutils of versions prior to 7.1.\n\n\tAllow bookmarking of host names on Windows (e.g. //ZX-SPECTRUM).\n\n\tShow host's root in history menu (e.g. //ZX_SPECTRUM).\n\n\tMade :fileviewer command work on Windows.\n\n\tOpen selected directories with l or Enter keys.\n\n\tChanged the way 'fastrun' works.\n\n\tReplace home directory with the tilde in terminal title.\n\n\tImproved :let command (allowed using of expressions at the right side of\n\tthe statement).\n\n\tProperly handle when user alters PATH environment variable using :let\n\tcommand.\n\n\tNow vifm removes scripts ($VIFM/scripts/**) from PATH for :shell command.\n\n\tLess blinking of the screen in various scenarios.\n\n\tCorrected status bar messages about failed search.\n\n\tUse common search history for normal, visual and menu modes.\n\n\tSave last typed but not executed command in command-line mode (this also\n\tincludes searches).\n\n\tBetter handling of multiline messages in status bar.\n\n\tIncreased directory modification stamp precision on *nix.\n\n\tDocumented ./configure script options in the INSTALL file.\n\n\tFixed bug with running Ctrl-A/Ctrl-X commands on directories.\n\n\tFixed undoing of previous operation on error in current one.\n\n\tFixed updating of views when they are in view mode.\n\n\tFixed bug with failed assertion on not complete macro.\n\n\tFixed error reporting on Ctrl-A/Ctrl-X commands on selection.\n\n\tFixed work of Ctrl-A and Ctrl-X commands on selection.\n\n\tFixed small issue with tabs in quick view and 'nowrap'.\n\n\tFixed displaying of wrong drive paths in history menu (\"d:\" or \"c:\").\n\n\tFixed bug with plugin and parenthesis.\n\n\tFixed getting list of associated programs using .desktop files when the\n\tfile utility is used to obtain mime-type of a file.\n\n\tFixed result of applying :p filename modifier in root of file system.\n\n\tFixed opening of tagged (selected) symbolic links to a directory.\n\n\tFixed problem with leaving socket alive on crash.\n\n\tFixed compilation using cygwin.\n\n\tFixed memory errors connected with Ctrl-A and Ctrl-X commands.\n\n\tFixed using of uninitialized memory on :substitute.\n\n\tFixed global substitution of patterns beginning with a caret.\n\n\tFixed :cd (so and :pushd) with absolute path as second argument.\n\n\tFixed case insensitive renames using :rename command on Windows.\n\n\tFixed message about failed rename operation.\n\n\tFixed renaming of files on Windows (sometimes files could be moved).\n\n\tFixed infinite loop of filter inverting.\n\n\tFixed adding of ellipsis into view title when it's actually don't needed.\n\n\tFixed handling of equal sign after variable names in :unlet command.\n\n\tFixed automatic refresh of view on Windows.\n\n\tFixed displaying of cached directory size.\n\n\tFixed trash elements duplication in vifminfo file.\n\n\tFixed memory corruption if :restart command is called from key mapping.\n\n\tFixed deadlock issue that caused vifm to freeze after running external\n\tcommands in certain cases.\n\n\tFixed wrong resizing of file info mode.\n\n\tFixed saving of partially typed search pattern with 'incsearch' on.\n\n\tFixed searching in visual mode with 'incsearch' on.\n\n\tFixed artifacts at the bottom of screen on FUSE mountings.\n\n\tFixed check for file existence on file running.\n\n\tFixed running 'vicmd' on :rename and similar commands with ending \\s+&.\n\n\tFixed appearing of cursor in stat line on resize with active wildmenu.\n\n\tFixed unexpected appearing of wildmenu on terminal resizing.\n\n\tFixed running when /etc/mtab file doesn't exist.\n\n\tFixed compiling with file tool (libmagic) of version 4.21 or older.\n\n\tFixed work of ga/gA commands with huge files on Windows.\n\n\tFixed terminal freezing on Ctrl-Z in vim launched from vifm.\n\n\tFixed blinking of file list in the menu mode while working with command\n\tline with 'hlsearch' and 'incsearch' set.\n\n\tFixed clearing of selection on search cancel in menus with 'hlsearch' and\n\t'incsearch' set.\n\n\tFixed selection of created directory on `:mkdir! dir1/dir2`.\n\n\tFixed case of letters of Ctrl-W combinations in the documentation.\n\n\tFixed copying of vifm-help.txt and sample vifmrc to ~/.vifm directory.\n\n0.7.1 to 0.7.2 (2012-02-19)\n\n\tAdded --select command line argument.\n\n\tAdded g:vifm_exec_args variable for the plugin.\n\n\tAdded write permissions to current directory on :touch.\n\n\tAdded 'rulerformat' option.\n\n\tAdded 'statusline' option.\n\n\tAdded optional argument for the :sync command.\n\n\tAdded support for character classes in globals.\n\n\tAdded <esc>.\n\n\tAdded support for running :cmap, :nmap and :vmap with one argument.\n\n\tAdded :u filename modifier for UNC computer name (Windows only).\n\n\tAdded --remote command line argument.\n\n\tAdded recursive mode for :rename command.\n\n\tAdded 'columns' and 'lines' options.\n\n\tAdded :let and :unlet commands to work with environment variables.\n\n\tAdded $VIFM and $MYVIFMRC environment variables.\n\n\tAdded embedded icon on Windows.\n\n\tAdded file properties dialog on Windows.\n\n\tAdded file attributes in status bar and file info view.\n\n\tAdded ctrl-w p, ctrl-w b and ctrl-w t normal mode keys.\n\n\tAdded :windo and :winrun commands.\n\n\tAdded 'trashdir' option.\n\n\tRestore terminal title on exit.\n\n\tReset dot and filename filters if they hide bookmarked file.\n\n\tShow \"Sorting directory...\" message only for big directories on Windows.\n\n\tNow vifm will add all subdirectories of ~/.vifm/scripts to PATH.\n\n\tMade vifm react faster on external changes.\n\n\tChange console title on Windows.\n\n\tMade determining of home directory on Windows more intelligent.\n\n\tBetter check for old-style color schemes file.\n\n\tMention cterm :highlight command argument in generated color scheme files.\n\n\tChanged square brackets in yes/no of confirmation dialog.\n\n\tMade 'sortnumbers' work on Windows.\n\n\tAvoid unnecessary directory view updates on Windows (like after C key).\n\n\tAllow using of backward slashes in :rename command on Windows.\n\n\tLet :s and :gs filename modifiers change slash type on Windows.\n\n\tNever change active view on :restart command.\n\n\tProperly quit vifm on console closing on Windows.\n\n\tRemoved odd sorting keys on Windows.\n\n\tAllowed using of macros with :clone command.\n\n\tSet left panel as active with one path passed as an argument.\n\n\tFixed bug with fixed-length buffer for :grep command (when many files are\n\tselected).\n\n\tFixed completion of \":set sort\" (didn't complete 'sortnumbers' and\n\t'sortorder').\n\n\tFixed several memory overflows and leaks.\n\n\tFixed \"Change\" time, which is \"Creation\" time on Windows.\n\n\tFixed creation of Trash dir if it doesn't exist in ~/.vifm/.\n\n\tFixed status bar message after Ctrl-A/Ctrl-X on Windows.\n\n\tFixed bug with drawing extra character after file list redraw (e.g. on\n\tza).\n\n\tFixed bug with segfault on running background operation (e.g. :copy &).\n\n\tFixed compilation on Mac OS X.\n\n\tFixed running gvim on commands like :rename.\n\n\tFixed renaming on Windows when only letter case is changed.\n\n\tFixed terminal title blinking on startup.\n\n\tFixed status bar attributes for searching.\n\n\tFixed view update when 'incsearch' is on and user removes and types again\n\tone character.\n\n\tFixed blinking of number of selected files on Escape key in search mode\n\twith 'hlsearch' turned on.\n\n\tFixed redrawing of other view on 'sortnumbers' option toggle.\n\n\tFixed misleading message about pattern not found on first search using n\n\tor N keys.\n\n\tFixed bug with going to upper bound of visual selection.\n\n\tFixed bug with :rename and 'vicmd' (or 'vixcmd') option with backgrounding.\n\n\tFixed bug with :rename and screen support turned on.\n\n\tFixed picking view on which ctrl_w+* keys operate in view mode.\n\n\tFixed Ctrl-U/D/F/B keys in visual and menu modes one again.\n\n\tFixed a typo in status bar message after :mkdir.\n\n\tFixed sorting with ignoring case.\n\n\tFixed read-only file removal on Windows.\n\n\tFixed adding of \"(1)\" to name passed to :clone.\n\n\tFixed messages about background operations in :jobs menu.\n\n\tFixed %S macro and no command output.\n\n\tFixed filtering of selected files with special symbols in their name.\n\n\tFixed title in permission change dialog and files with long names.\n\n\tFixed leaving inexistent directory on Windows.\n\n\tFixed :empty command on Windows.\n\n\tFixed delay after pressing Escape on *nix and ncurses.\n\n\tFixed viewing of file with end-of-lines different from standard on running\n\tsystem.\n\n\tFixed navigation to file (e.g. after :touch) when 'scrolloff' isn't 0.\n\n\tFixed segfault on small window on Windows.\n\n\tFixed bug with unfinished :s or :gs filename modifier.\n\n\tFixed dumb black screen on :shell command after :screen when vifm is not\n\trunning inside screen.\n\n0.7.0 to 0.7.1 (2011-11-15)\n\n\tAdded 'scrollbind' option.\n\n\tAdded 'wrapscan' option.\n\n\tAdded 'incsearch' option.\n\n\tAdded support for more angle bracket notations in mappings (<bs>, <tab>,\n\t<s-tab>, <home>, <end>, <left>, <right>, <up>, <down>, <pageup>,\n\t<pagedown>, <del>, <delete>, <m-a>, <m-b>, ..., <m-z>).\n\n\tAdded :split! to toggle between only and split view.\n\n\tAdded :file <command beginning> to quick run one of associated commands.\n\n\tAdded '(' and ')' keys for normal and visual modes.\n\n\tAdded g:vifm_exec variable for the plugin.\n\n\tAdded backgrounding of :copy, :move and :delete commands.\n\n\tAdded Ctrl-n (j) and Ctrl-p (k) keys.\n\n\tAdded 'cpoptions' option.\n\n\tAdded 'laststatus' option.\n\n\tAdded year in the file info dialog (on Ctrl-G).\n\n\tAdded :delete!.\n\n\tAdded <s-f1>, ..., <s-f12>, <a-f1>, ..., <a-f12>, <c-f1>, ..., <c-f12>,\n\tonly for Windows.\n\n\tAdded kind of portable mode on Windows.\n\n\tAdded support for :substitute command without arguments.\n\n\tAdded horizontal splitting of views (changed :split command, added :vsplit\n\tcommand, changed Ctrl-w s mapping).\n\n\tAdded Ctrl-w j and Ctrl-w k keys.\n\n\tAdded Ctrl-w <, Ctrl-w >, Ctrl-w + and Ctrl-w - keys.\n\n\tAdded Ctrl-w | and Ctrl-w _ keys.\n\n\tAdded completion of environment variables (:cd, :pushd, :! and :!!).\n\n\tAdded support for using environment variables as :cd or :pushd arguments.\n\n\tAdded Ctrl-A and Ctrl-X keys (normal and visual modes).\n\n\tAdded <a-X> as synonyms for <m-X> (where X is a key).\n\n\tAdded notation to run internal vifm commands from user defined commands.\n\n\tAdded angle bracket notation <c-s-X> and <s-c-X> as synonyms for <c-X>.\n\n\tAdded Ctrl + Alt + letter combinations, only for *nix.\n\n\tAdded view mode (see documentation).\n\n\tAdded e key for normal mode.\n\n\tAdded -c <command> and +<command> command line arguments.\n\n\tAdded :source command.\n\n\tAdded zh, zl, zH and zL keys for the menus (horizontal scrolling).\n\n\tAdded ftdetect plugin for vim (now there is no need for modelines or\n\tchanging .vimrc).\n\n\tAdded more tags to the documentation in vim-help format.\n\n\tAdded ZQ and ZZ keys to close menus and dialogs.\n\n\tAdded 'tabstop' option.\n\n\tAdded support of [count] for / and ?.\n\n\tAdded :execute command.\n\n\tMake macros expand to paths with forward slashes on Windows.\n\n\tClean selection after i key in normal mode.\n\n\tDon't clear terminal title on exit.\n\n\tWarn about symbolic links are not available.\n\n\tMake 'ignorecase' and 'smartcase' affect f and F.\n\n\tDon't show current file as selected after executing a :command and\n\tresizing terminal while it works.\n\n\tShow progress message (e.g. on :copy) after terminal is resized.\n\n\tDon't use position in the view on ' key, when 'autochpos' is off.\n\n\tBetter check if directory was changed on Windows.\n\n\tMade ga and gA work in background.\n\n\tDon't change file extension on cloning.\n\n\tBetter cW command.\n\n\tShow all shares on Windows (including private ones).\n\n\tMove cursor to clone of current file after file cloning.\n\n\tSmarter file name generation on cloning.\n\n\tMade i key work in visual mode.\n\n\tAllowed question mark for :mark command (to prevent bookmark overwriting).\n\n\tMade C command accept count.\n\n\tMade some messages about operations more correct.\n\n\tAllowed arguments for plugin's commands.\n\n\tAllowed exclamation mark for :view command (to prevent view closing).\n\n\tFixed bug with stat window in the menu mode (for example after n of N keys).\n\n\tFixed bug with disappearing of number of selected files in visual mode.\n\n\tFixed leaving visual mode on cp key.\n\n\tFixed clearing selection after :file menu.\n\n\tFixed asterisk as first character in a global.\n\n\tFixed running of user defined commands in the background.\n\n\tFixed running external commands on Windows when 'shell' is 'cmd.exe'.\n\n\tFixed bug with displaying bookmarks in the :marks menu on Windows.\n\n\tFixed bug with saving bookmarks to vifminfo file.\n\n\tFixed directory copying on Windows XP.\n\n\tFixed permission check on copying files from a network on Windows.\n\n\tFixed copying files from a network on Windows.\n\n\tFixed removing of directories on Windows (at least on XP).\n\n\tFixed plugin on Windows.\n\n\tFixed a/c/m file time on Windows.\n\n\tFixed displaying of local chars in C-G dialog on Windows.\n\n\tFixed command-line shortcuts with Alt key and pdcurses library.\n\n\tFixed redrawing in the :only mode.\n\n\tFixed algorithm of finding vifm configuration directory on Windows.\n\n\tFixed setting of numeric bookmarks (0-9).\n\n\tFixed displaying of local chars in other window's title on Windows.\n\n\tFixed check of directory write permissions on Windows.\n\n\tFixed pausing on :!! on Windows.\n\n\tFixed completion after // on Windows.\n\n\tFixed quick view of files (printed \"Cannot open file\" sometimes).\n\n\tFixed bug with processing keys (functional on Windows XP in particular).\n\n\tFixed bug with showing quick view after :only command.\n\n\tFixed <m-X> with pdcurses.\n\n\tFixed some bugs with UNC paths on Windows.\n\n\tFixed displaying of local chars in the wild menu on Windows.\n\n\tFixed parsing path arguments on Windows.\n\n\tFixed small issue with sorting directory names.\n\n\tFixed some issues with shell escaping.\n\n\tFixed bug with showing name conflict message 2nd time.\n\n\tFixed viewing files with UNC paths on Windows.\n\n\tFixed bug with applying :s or :gs filename modifiers several times.\n\n\tFixed loading long histories (search, prompt or command) from vifminfo\n\tfile.\n\n\tFixed gf command on Windows.\n\n\tFixed some issues with zt/zb and 'scrolloff' in menus.\n\n\tFixed copying of hidden and system files on Windows.\n\n\tFixed Ctrl-C handling on Windows.\n\n0.6.3 to 0.7.0 (2011-09-29)\n\n\tRemoved :cmdhistory command.  Use :history cmd or :history :.\n\n\tRemoved 'savelocation' option.  Use set vifminfo+=dhistory.\n\n\tRemoved support of startup file, all commands will be moved to vifmrc.\n\n\tRemoved '<,'> range from command line in visual mode (all work without this\n\trange, because files are selected).\n\n\tRemoved CURR color from color schemes (was unused).\n\n\tReturned Change dialog.\n\n\tAdded 'wildmenu' option.\n\n\tAdded 'ignorecase' option.\n\n\tAdded 'smartcase' option.\n\n\tAdded support for multi line commands in startup file.\n\n\tAdded 'hlsearch' option.\n\n\tAdded abbreviations for :set options.\n\n\tAdded check for broken links of selection on :edit.\n\n\tAdded gf command (find link destination).\n\n\tAdded :mark command.\n\n\tAdded :delmarks command.\n\n\tAdded :comclear command.\n\n\tAdded :unmap, :cunmap, :nunmap and :vunmap commands.\n\n\tAdded :noremap, :cnoremap, :nnoremap and :vnoremap commands.\n\n\tAdded :filetype and :fileviewer commands.\n\n\tAdded 'vifminfo' option.\n\n\tAdded :filextype command.\n\n\tAdded 'shell' option.\n\n\tAdded 'vixcmd' option.\n\n\tAdded :find command.\n\n\tAdded broken link color to color schemes.\n\n\tAdded top line and status line colors to color schemes.\n\n\tAdded al command for symbolic links with absolute paths.\n\n\tAdded rl command for symbolic links with relative paths.\n\n\tAdded g:vifm_term variable for the plugin.\n\n\tAdded :substitute command (for quick file rename operations).\n\n\tAdded filename modifiers (:p, :~, :., :h, :t, :r, :e, :s and :gs).\n\n\tAdded gs command to work with t selection like gv with visual mode\n\tselection.\n\n\tAdded cl command to modify symbolic link target.\n\n\tAdded :restart command.\n\n\tAdded %M macro.\n\n\tAdded prompt (cw, co, cg, name conflicts) history.\n\n\tAdded :grep command.\n\n\tAdded vifmrc syntax and filetype files for Vim.\n\n\tAdded 'd' state for execute flags in permission dialog.\n\n\tAdded search and prompt history to :history command.\n\n\tAdded argument completion for :history command.\n\n\tAdded 'autochpos' option.\n\n\tAdded --no-configs argument.\n\n\tAdded :tr command.\n\n\tAdded q key to permissions, sort and fileinfo dialogs.\n\n\tAdded 'timeoutlen' option.\n\n\tAdded gu and gU commands (and their variations).\n\n\tAdded :clone command.\n\n\tAdded :copy command.\n\n\tAdded :move command.\n\n\tAdded :alink and :rlink commands.\n\n\tAdded 'scrolloff' option.\n\n\tAdded support for using ':' instead of '=' in :set command.\n\n\tAdded Ctrl-_ command-line key to reject completion.\n\n\tAdded :volumes command (only for MS-Windows).\n\n\tAdded :version command as another name for :vifm.\n\n\tAdded FIFO color to color scheme.\n\n\tAdded color scheme color for error messages in status bar.\n\n\tAdded :mkdir command.\n\n\tAdded :touch command.\n\n\tAdded support of question mark for :colorscheme command.\n\n\tAdded :highlight command.\n\n\tAdded 'gdefault' option.\n\n\tAdded black hole register (\"_).\n\n\tAdded UNC names support (MS-Windows).\n\n\tAdded TopLineSel highlight group.\n\n\tAdded :chmod command.\n\n\tAdded :chown command.\n\n\tAdded macros that are expanded to paths enclosed in double quotes (%\"c, %\"C,\n\t%\"f, %\"F, %\"b, %\"d and %\"D)\n\n\tAdded completion for co and cg commands.\n\n\tAdded %S macro.\n\n\tAdded completion for cw and cW commands.\n\n\tAdded 'slowfs' option.\n\n\tAdded :messages command.\n\n\tAdded gl normal mode key (only for MS-Windows).\n\n\tAdded support for :set all.\n\n\tAdded support for :set command without arguments.\n\n\tNow spaces between option name and '?' or '!' are allowed in :set command.\n\n\tHandle multi line output of :set command (for example,\n\t\":set confirm? fastrun?\").\n\n\tCorrected size units to be like in *nix utilities (KB = 1000, K = 1024...)\n\n\tUpdate more items on ga and gA.\n\n\tChanged file size format.\n\n\tSort completion items.\n\n\tShift-Tab command line key to perform completion in reversed order.\n\n\tNow vifm also accepts paths to files as the startup arguments.\n\n\tLet user go through directories with execute access, but no read access.\n\n\tNow users can place scripts for vifm to ~/.vifm/scripts, vifm modifies\n\tit's PATH environment variable to let user run scripts without specifying\n\tfull path.\n\n\tChanged format of :delete and :yank (:cmd reg count).\n\n\t:filter?, :invert? and :screen? to display state.\n\n\tMade :display and :registers accept argument (like in Vim).\n\n\tNow vifm understands user name after tilde in paths.\n\n\tMade filetype understand star as in globals.\n\n\tChanged format of ~/.vifm/vifmrc and ~/.vifm/vifminfo files.\n\n\tRemoved duplicates from command and directory history.\n\n\tMade C handle selection, check read permission and work in visual mode.\n\n\tMade /, ?, n and N work in visual mode.\n\n\tMoved file name from quick view window to view title.\n\n\tMade directory history persistent (when 'vifminfo' contains dhistory).\n\n\tMade command line history persistent (when 'vifminfo' contains chistory).\n\n\tMade search history persistent (when 'vifminfo' contains shistory).\n\n\tMade :locate and :find without arguments repeat last search.\n\n\tChanged the way l key handles selection.\n\n\tMade dirstack persistent (when 'vifminfo' contains dirstack).\n\n\tMade :! accept ranges.\n\n\tMade l key work in visual mode.\n\n\tMade registers persistent (when 'vifminfo' contains registers).\n\n\tDocumented which commands accept ranges.\n\n\tMade :cd and :pushd accept two arguments or an exclamation mark.\n\n\tMade :set command understand &.\n\n\tShow search matches in the menus.\n\n\tMade :split accept path.\n\n\tMade Ctrl-W in command line mode work like in Vim.\n\n\tMade 'vicmd' and 'vixcmd' understand & at the end.\n\n\tDon't quit when terminal is too small (print message and ignore input).\n\n\tBetter ranges (added support for '+' and '-').\n\n\tHandle %m, %M and %s in the :! command.\n\n\tModified pushd to accept empty argument list.\n\n\tMade :dirs menu interactive.\n\n\tNow <c-?> keys can be used in mappings.\n\n\tNow case of color names in the colorscheme file is ignored.\n\n\tDocumented command line keys.\n\n\tHandle color schemes with too many colors for terminal right.\n\n\tMade :apropos command accept empty argument list.\n\n\tMade :rename accept a list of new file names.\n\n\tOwnership is not preserved on copy operations anymore.\n\n\tMade F, f, ;, comma, n and N commands accept count.\n\n\tBetter 'sort' option (support of multiple sort keys, added iname key).\n\n\tLet user use short forms of user-defined commands with \"!\".\n\n\tMade ':set option' equivalent to ':set option?' for all types of options\n\texcept boolean.\n\n\tMade 'history' option control search, command line and prompt histories.\n\n\tModify terminal emulator title.\n\n\tFixed bug with name conflict of files and directories in the Trash.\n\n\tFixed bug with broken symbolic links in the Trash.\n\n\tFixed bug with stat_win in the menus.\n\n\tFixed D<selector> when 'confirm' enabled.\n\n\tFixed '< and '> after Enter key in visual mode.\n\n\tFixed ga and gA bug with root directory size.\n\n\tFixed bug with \":1 command\".\n\n\tFixed bug with gv in visual mode when '< and '> are undefined.\n\n\tFixed bug with 'sortnumbers'.\n\n\tFixed bug with f, F, comma and ;.\n\n\tFixed bug with invalid value of %f for :udf.\n\n\tFixed bug with shrinking of status bar.\n\n\tFixed bug with displaying \"1024 K\".\n\n\tFixed command line resizing in the menu mode.\n\n\tFixed bug with :view and infinite loop.\n\n\tFixed zR.\n\n\tFixed color schemes problems.\n\n\tFixed vifm freezing.\n\n\tFixed bug with bookmarks.\n\n\tFixed bug with undolist.\n\n\tFixed :rename.\n\n\tFixed cursor position after leaving directory mounted with FUSE_MOUNT2.\n\n\tFixed Ctrl-D, Ctrl-U, Ctrl-F and Ctrl-B (made them work like in vim).\n\n\tFixed utf8 characters treating on Ctrl-W and similar.\n\n0.6.2 to 0.6.3 (2011-07-20)\n\n\tAdded another format for filetype (FUSE_MOUNT2).\n\n\tAdded %CLEAR FUSE mount parameter (see vifmrc for details).\n\n\tAdded %c and %C macros (current file of current and other directories, not\n\tselected file or files).\n\n\tAdded :rename command.\n\n\tAdded undo list (u, Ctrl-R and :undolist commands; 'undolevels' option).\n\n\tAdded small FAQ.\n\n\tAdded gA command (like ga, but forces update).\n\n\tAdded support for whole line comments (that start with double quote symbol).\n\n\tAdded 'sortnumbers' option (natural sort of (version) numbers in\n\tfilenames).\n\n\tAdded :dirs command (shows directory stack).\n\n\tAdded 'savelocation' option (start vifm in the last visited directory)\n\twhich is off be default thus returning old behaviour when vifm is started\n\twith no argument.\n\n\tAdded 'followlinks' option.\n\n\tAdded 'fusehome' option.\n\n\tAdded 'history' option.\n\n\tAdded dialog to ask user about backwards range in command.\n\n\tAdded primitive logging.\n\n\tAdded :TabVifm command in Vim plugin.\n\n\tAdded 'confirm' option.\n\n\tAdded gv command for visual mode.\n\n\tAdded :restore command.\n\n\tAdded !! and !<selector> normal mode commands.\n\n\tEnter key in visual mode will leave it saving selection.\n\n\tVisual mode now remembers direction of the last selection.\n\n\tLet builtin keys be remapped.\n\n\tDon't cancel file renaming if user presses backspace and line is empty.\n\n\tDon't change directory on unsuccessful FUSE mount.\n\n\tDon't change cursor position of other directory after disabling quick view.\n\n\tHide file group and owner names when they collide with message about\n\tfiltered files.\n\n\tDon't show error message when trying to delete something from Trash\n\tdirectory.\n\n\tDon't replace escape sequences for :! and :!! commands.\n\n\tUse only executables for :!./ completion.\n\n\tComplete :pushd like :cd.\n\n\tNow location of panes is saved in ~/.vifm/vifminfo instead of ~/.vifm/vifmrc\n\n\tDon't filter anything when filter is set to an empty string.\n\n\tShow message when :delcommand is called with no arguments.\n\n\tHandle broken links.\n\n\t:edit command can accept arguments now.\n\n\t:map don't affect command line mode, but :map! does.\n\n\tLet ranges modify %f macro for user defined commands.\n\n\tSkip spaces between numbers in range and a command.\n\n\tSkip colons and spaces at the begging of cmdline command.\n\n\tFilter string is empty by default now.\n\n\tMade f and F work with wide characters.\n\n\t| after ! means pipe, not command separator.\n\n\t| after com means pipe, not command separator.\n\n\tMade option parser handle quotes.\n\n\tMapped Ctrl-W, S to :split.\n\n\tMade :cd - work like in shell.\n\n\tNow filter regular expression can be enclosed in slashes.\n\n\tDon't add additional spaces before %f, %F, %c and %C macros.\n\n\tDon't try to :cd into directory if we cannot.\n\n\tLeave visual mode when leaving cmdline mode started from visual mode.\n\n\t<up>, <down> keys to move through history like in Vim.\n\n\tNo more cycling in history.\n\n\tDon't loose input when going through history.\n\n\tRename files in Trash (to avoid name conflicts).\n\n\tDon't terminate background processes on vifm exit.\n\n\tRemove files that are in the Trash on :empty command from all registers.\n\n\tDon't ignore Ctrl-Z.\n\n\tDon't clear screen on shellout.\n\n\tHandle Ctrl-U, Ctrl-D, Ctrl-E, Ctrl-Y, H, L, M, zz, zt, zb, <num>g and\n\t<num>G in the menus.\n\n\tLet %, f, F, ;, comma and ' be used as selectors in normal mode.\n\n\t<num>%, zb, zt, zz, <num>gg, <num>G, Ctrl+e, Ctrl+y, Ctrl+d, /Ctrl+u, f, F,\n\t;, comma and ' in visual mode.\n\n\tReplaced pauseme script with vifm-pause.\n\n\tReplace /home/login by ~ in the view title.\n\n\tHandle multiple files in Vim plugin.\n\n\tImproved user mappings (mapping on k in k<letter> and k<selector>).\n\n\tMade : in normal mode accept count.\n\n\tUpdate \" register on each yank/delete operation.\n\n\tFixed %F, accidentally broken in v0.6.2.\n\n\tFixed segmentation fault on %f or %F expanding.\n\n\tFixed bug with Ctrl+W, X and quick view.\n\n\tFixed bug with yanking the \"..\" directory (it shouldn't be possible).\n\n\tFixed %b macro (added space between file names).\n\n\tFixed directory leaving after FUSE error (go to mounted file, not just up).\n\n\tFixed bug with selection and segmentation fault.\n\n\tFixed reaction on Ctrl+C for error messages from background processes.\n\n\tFixed ga command (skip symbolic links).\n\n\tFixed processing of files with percent sign in their name.\n\n\tFixed memory leak in directory stack module.\n\n\tFixed bug when options from startup file were not applied after startup.\n\n\tFixed bugs with color schemes.\n\n\tFixed problem when vifm hanged without terminal.\n\n\tFixed bug about truncation of the last character with selection and :e %f.\n\n\tFixed some bugs with files with single and double quotes in their names.\n\tYes, again.\n\n\tFixed bug with sorting symbolic links by name.\n\n\tFixed bug with losing selection before running command from visual mode.\n\n\tFixed bugs with registers and segmentation fault.\n\n\tFixed :d command, it is an abbreviation to :delete now.\n\n\tFixed bug with :n\n\n\tFixed bug with selecting last file in the view in visual mode.\n\n\tFixed but with :delcommand.\n\n\tFixed redraw of fileinfo dialog.\n\n\tFixed some bugs with filters.\n\n\tFixed :cmap.\n\n\tFixed expanding of %d and %D macros in commands (quotes, again).\n\n\tFixed refreshing after some commands.\n\n\tFixed commands like :'<'>!echo %f\n\n\tFixed one number ranges for command line commands (:2d, :4y).\n\n\tFixed bug with too small inner buffer for shell commands.\n\n\tFixed skipped range number (it should mean current position).\n\n\tFixed p (it should move files from trash, not copy them).\n\n\tFixed bug with user commands and exclamation mark.\n\n\tFixed running of commands from :cmdhistory menu.\n\n\tFixed execution of FUSE mount commands from :file menu.\n\n\tFixed zb in normal mode (when pos < number on lines in a view).\n\n\tFixed map menus (added user commands).\n\n\tFixed recursion in user mappings.\n\n\tFixed opening files containing spaces in their names using Vim plugin.\n\n\tFixed command line size when initial message doesn't fit in one line.\n\n0.6.1 to 0.6.2 (2011-06-19)\n\n\tAdded map menus (run :cmap, :vmap, :nmap commands without arguments).\n\n\tAdded :cmdhistory command.\n\n\tAdded 'fastrun' option.\n\n\tAdded o and O keys for Visual mode (go to other end of selection).\n\n\tAdded gv normal mode command.\n\n\tAdded support for spaces and functional keys in mappings (<space> and\n\t<f0> - <f63>).\n\n\tAdded mimetype to fileinfo dialog.\n\n\tAdded %b command macro.\n\n\tMade filetype menu editable.\n\n\tRestore SIGINT (Ctrl+C) default behaviour on shellout.\n\n\tReplace escape sequences in quick view output with ^foo.\n\n\tGive options if a file already exists in destination directory.\n\n\tImplemented :colorscheme command.\n\n\tUnmount all FUSE mounts on exit.\n\n\tImplemented :vifm command.\n\n\tMore verbose --version (and -v) output.\n\n\tAdded Ctrl+C key handling to error message dialog.\n\n\tImplemented :yank command.\n\n\tMade command completion work with marks.\n\n\tUse file command when GTK+ and libmagic are disabled.\n\n\tMade :cd %D work.\n\n\tBetter error messages.\n\n\tUse ga command results to sort by size.\n\n\tFixed '< and '> marks handling.\n\n\tFixed :!./ completion.\n\n\tFixed paths in config.c to work with non standard install prefix.\n\n\tFixed a bug with ':!!echo foo'.\n\n\tFixed some title related small bugs.\n\n\tFixed terminal resize when error message visible.\n\n\tFixed yy when compatibility mode is off.\n\n\tFixed some bugs with files with quotes in their names.\n\n\tFixed segmentation fault on FUSE mount.\n\n\tFixed missed status bar messages.\n\n0.6 to 0.6.1 (2011-06-11)\n\n\tAdded :set command.\n\n\tAdded caching for results of ga command.\n\n\tDon't reload pane on ctrl-c or escape, just clean selection.\n\n\tStore commands separated by | as one history item.\n\n\tDon't add duplicates into command history.\n\n\tDon't add commands from startup file and mappings to command history.\n\n\tUse ! with :quit or :x to discard configuration changes.\n\n\tUse checksum to determine if configuration file has been modified.\n\n\t:write! will write config even if no setting was changed.\n\n\tAlways save pane locations on exit except on :q!, :quit! and ZQ.\n\n\tDon't switch active pane on Ctrl+W X.\n\n\tFixed bug with sorting (using sort type of invalid pane).\n\n\tBug Fix. Don't change selected items on terminal resize.\n\n\tFixed a couple of segmentation faults on unsuccessful FUSE mount.\n\n\tFixed n and N commands (used to repeat wrong search pattern).\n\n\tFixed a bug with relative paths in arguments.\n\n0.5 to 0.6 (2011-06-10)\n\n\tAdded :wq command.\n\n\tAdded ZZ and ZQ commands.\n\n\tAdded Ctrl+D and Ctrl+U commands.\n\n\tAdded zb, zt and zz commands.\n\n\tAdded Ctrl+E and Ctrl+Y commands.\n\n\tAdded Ctrl+W W, Ctrl+W O, Ctrl+W V and Ctrl+W X commands.\n\n\tAdded i command to force file opening even for executables.\n\n\tAdded IEC abbreviations.\n\n\tAdded Ctrl+U, Ctrl+N, Ctrl+P, Ctrl+K, Ctrl+W, Meta+F and Meta+B in\n\tcommand line mode.\n\n\tAdded Home and End keys support in command line mode.\n\n\tAdded backward search (?).\n\n\tAdded :map, :nmap, :cmap, :vmap commands.\n\n\tAdded co (change owner), cg (change group) and cp (change permissions)\n\tcommands.\n\n\tAdded utf8 support.\n\n\tAdded support for motions with d and y commands.\n\n\tAdded startup file.\n\n\tAdded f, F, ; and <comma> normal mode commands.\n\n\tAdded group to stat line.\n\n\tAdded custom viewers for files.\n\n\tAdded D normal mode command (deletes files omitting trash directory).\n\n\tAdded P normal mode command (moves yanked files).\n\n\tAdded :write command (write config file) with alias :w.\n\n\tAdded progress messages for putting and deleting.\n\n\tAdded users command completion for :delcommand and :command.\n\n\tAdded a, s and S file selectors.\n\n\tAdded --enable-extended-keys and --enable-compatibility-mode configure\n\toptions.\n\n\tAdded Ctrl+o and Ctrl+i normal mode commands to traverse through history.\n\n\tAdded ! and !! completion.\n\n\tAdded support for multiple commands per line (with | as delimiter).\n\n\tAdded ga command (calculate directory size).\n\n\tAdded cW command (change only name of file and leave old extension).\n\n\tAdded :pushd and :popd commands.\n\n\tAdded detection of file handlers with GTK+ or libmagic and .desktop files\n\t(it works only for :file command).\n\n\tAdded C command (clone file).\n\n\tChanged keys input handling.\n\n\tChanged force dot files appear at the beginning of file list.\n\n\tChanged command line length limit.\n\n\tChanged history of visited directories.\n\n\tChanged ascending/descending sort for all types of criteria.\n\n\tChanged behavior of filename cell in stat line (automatic expands now).\n\n\tChanged :cd completion to use only directories.\n\n\tChanged permissions dialog to work with selected files.\n\n\tFixed segmentation fault caused by newwin.\n\n\tFixed segmentation fault caused by bookmarks menu.\n\n\tFixed now view is updated after several commands.\n\n\tFixed bug with empty command line.\n\n\tFixed file renaming.\n\n\tFixed ranges handling.\n\n\tFixed behavior of n and N commands for different search directions.\n\n\tFixed filename completion.\n\n\tFixed user commands completion.\n\n\tFixed memory allocation for history.\n\n\tFixed work with registers.\n\n\tFixed bug with disappearing pane cursor (for example after shellout).\n\n\tFixed bug when trailing slash wasn't cut from directory name on macro\n\texpanding.\n\n\tFixed running executables with spaces in their names.\n\n0.4 to 0.5 (2009-08-07)\n\n\tChanged the file size to a human friendly notation.\n\n\tAdded ascending and descending sort types.\n\n\tChanged the way symbolic directories are handled.\n\n\tFixed possible buffer overflow in colorschemes.\n\n\tFixed transparency in colorschemes.\n\n\tChanged writing to vifmrc file to query user if\n\tthey would like to overwrite a file that has been modified.\n\n\tAdded filetype settings for mounting files with fuse-zip.\n\n\tPauseme script was changed to report errors.\n\n\tCommand line input now accepts wide characters and tab completion\n\tnow cycles through all possible matches.\n\n\tncursesw is now required to build vifm.\n\n0.3a to 0.4 (2008-06-16)\n\n\tColor schemes added - required a change to the vifmrc file.\n\n\tUTF-8 support\n\n\tQuick view of current file with :view command.\n\n\tHopefully fixed bug when starting vifm with a directory on the command\n\tline.\n\n\tChanged executable file to check for filetypes.  If you have vifm set to\n\tnot run executable files, it will now first check for a filetype setting\n\tand if present will use the program you set to open the file.  If no\n\tfiletype is set it will open the file in vi.\n\n\tFixed delete command when dd in :com window.\n\n0.3 to 0.3a (2005-08-17)\n\n\tFiles with % in the name should work now.\n\n\tThe symlinks in the tarball were replaced with the actual scripts.\n\n0.2 to 0.3 (2005-07-18)\n\n\tAdded error message for shell commands that are too long.\n\n\tAdded :split, :only  for one window view.\n\n\tAdded :ls command for screen and %s macro.\n\n\tAdded . to repeat last command.  This currently only works with :commands.\n\n\tWhen deleting or putting files the process is backgrounded but it now\n\twaits for the process to return so that the changes show up quicker\n\tin the file lists.\n\n\tRemoved the code to change the xterm title.\n\n\tUser commands and the builtin commands now work with <Tab> expansion.\n\n\t:! and :!! now work with tab expansion.\n\n\tChanged waitpid to a loop.\n\n\tRemoved the timing thread.\n\n\tRedirected error messages of processes run in the background.\n\n\t:jobs command shows menu of backgrounded processes.\n\n\t:!! segfault fixed by Dmitry Suzdalev.\n\n\tReadline like expansion of files now escapes the filename.\n\n\tFixed menu scrolling bug when the menu list was the same size as window rows.\n\n0.1 to 0.2 (2003-05-06)\n\n\tFile names are now escaped before going to the shell.\n\n\tThe menus are now searchable with / or ? and basic commands :45 or :quit.\n\n\tThe current position was changed to a solid bar instead of an arrow.\n\n\tBasic readline file completion.\n\n\tCommand and pattern history.\n\n\tColors are now configurable.\n\n\tcw can be used to rename files.\n\n\tAdded a keys pressed window in the status bar to show the first d of dd,\n\tnumbers for 12G or 33j movement commands, and first y of yy.\n\n\tUser commands are now sorted in alphabetical order so that they may be\n\tused in the shortest form that does not match another command.\n\n\tThe :command parsing was rewritten.\n\n\tThe default action on an executable file was changed to a configurable\n\toption.  The default is now to view the file instead of executing it.\n\n\tNew :commands\n\t\t:locate command uses locate.\n\t\t:apropos command - shows list of man pages in menu window.\n\t\t:sync command - changes the other panel to the same directory as the\n\t\t\tcurrent panel.\n\n\tNew Key bindings\n\t\tNormal mode:\n\t\tM - move to the middle of the window.\n\t\tL - move to the bottom of the window.\n\t\tH - move to the top of the window.\n\t\tV - switch to visual mode.\n\t\tY - yank the currently selected files.\n\n\t\tVisual mode:\n\t\tM - select from the current position to the middle of the list.\n\t\tL - select from the current position to the bottom of the list.\n\t\tH - select from the current position to the top of the list.\n\n\t\tThe bookmarks code was rewritten.\n\n\t\tThe automatic updating of the file lists was rewritten.\n"
        },
        {
          "name": "ChangeLog.LuaAPI",
          "type": "blob",
          "size": 10.255859375,
          "content": "The API is experimental and having a change log is useful to have for\nadjusting plugins as the implementation changes.  During development of the\nAPI things should stay fairly stable to not cause breakage too often, but\nwhile stabilizing for v1.0 a bunch of breaking changes can happen at once.  API\nsections marked {deprecated} will be removed.  After that all changes will be\ndocumented in the regular ChangeLog.\n\n0.13 to current\n\n\tBumped API version to v0.2.0.\n\n\tUpgraded Lua from 5.4.4 to 5.4.7.\n\n\tDeprecated VifmView.currententry field in favour of VifmView.cursor.pos.\n\tPatch by filterfalse.\n\n\tDeprecated vifm.makepath() field in favour of vifm.fs.mkdir().\n\n\tAdded VifmView.cursor.pos that provides an index of an entry under the\n\tcursor.  Patch by filterfalse.\n\n\tAdded VifmView.cursor:entry() that provides VifmEntry under the cursor.\n\tThis is a shortcut to VifmView:entry(VifmView.cursor.pos).  Patch by\n\tfilterfalse.\n\n\tAdded ability to move the cursor within a view by assigning an integer to\n\tVifmView.cursor.pos.  Patch by filterfalse.\n\n\tAdded cursorpos field to selectors that moves the cursor within a view.\n\tPatch by filterfalse.\n\n\tAdded vifm.abbrevs.add() that registers command-line abbreviations.  Patch\n\tby filterfalse.\n\n\tAdded vifm.stdout() to return stream to which Vifm's output was\n\tredirected (if it was redirected, i.e. original output wasn't connected to\n\ta TTY or character device on Windows).  Thanks to gruvw.\n\n\tAdded VifmJob:pid() to retrieve process ID of a job.  Thanks to The\n\tCyberduck and PRESFIL.\n\n\tAdded VifmJob:terminate() to forcefully finish a job.  Thanks to The\n\tCyberduck.\n\n\tAdded \"pwd\" parameter to vifm.startjob() that specifies initial directory\n\tof the process.  Thanks to PRESFIL.\n\n\tAdded vifm.cmds.add({ withrange }) flag which allows :commands implemented\n\tin Lua to handle ranges.  Thanks to Moin Khan.\n\n\tAdded vifm.fs table with file-system related operations: vifm.fs.cp(),\n\tvifm.fs.ln(), vifm.fs.mkdir(), vifm.fs.mkfile(), vifm.fs.mv(),\n\tvifm.fs.rm(), vifm.fs.rmdir().\n\n\tAdded VifmView:selected() that returns an iterator over selected entries.\n\n\tAdded VifmView:entries() that returns an iterator over all entries.\n\n\tAdded VifmView:focus() that makes the view the current one.\n\n\tAdded VifmView:gotopath() that navigates to a file (like :goto or\n\t--select).\n\n\tAdded VifmView:loadcustom() that sets list of paths as a custom view.\n\n\tAdded index of Lua API to the documentation for easier overview/lookup.\n\n\tAdded vifm.menus.loadcustom() that makes a menu out of a list of strings.\n\n\tMade VifmJob:errors() wait for receiving errors if the job has finished.\n\n\tFixed jobs created via vifm.startjob() being displayed with \"UNKNOWN\" for\n\tdescription on the job bar.\n\n0.13-beta to 0.13 (2023-04-04)\n\n\tAdded VifmView:select() and VifmView:unselect() that select and unselect\n\tentries by indexes.\n\n0.12.1 to 0.13-beta (2023-03-17)\n\n\tBumped API version to v0.1.0 due to bug fixes and various additions.\n\n\tAdditions to enabled standard libraries:\n\t * os.getenv()\n\n\tNew things Lua can be used for:\n\t * write a 'tabline' generator\n\t * running code before exit and when a file operation is done\n\t * starting background jobs to do something when they're over\n\n\tChanged description of VifmTab:getview() without arguments to return\n\tactive pane of a global tab, which is what it was actually doing.\n\n\tAdded vifm.executable() that check for an executable file or command in\n\t$PATH.\n\n\tAdded \"onexit\" callback for VifmJob.\n\n\tAdded vifm.input() that prompts user for input via command-line prompt.\n\n\tAdded events.listen() that registers a handler for an event.\n\n\tAdded \"app.exit\" event that occurs before Vifm exits normally.\n\n\tAdded \"app.fsop\" event that occurs after a successful execution of a\n\tfile-system operation.\n\n\tAdded VifmEntry.isdir field which is true if an entry is either a\n\tdirectory or a symbolic link to a directory.\n\n\tAdded VifmView.custom table with information about custom file list.\n\n\tClose Lua job streams when job is done.\n\n\tClosed _G loophole a plugin could use to mess environment for other\n\tplugins.\n\n\tProtected against metatable manipulations in Lua.\n\n\tFixed incorrect path in Lua's editor handler on Windows.\n\n\tFixed VifmTab:getview() mistreating \"pane\" input field.\n\n\tFixed modules loaded via vifm.plugin.require() not having `vifm` defined.\n\n0.12 to 0.12.1 (2022-09-21)\n\n\tUpgraded Lua from 5.4.3 to 5.4.4.\n\n\tAdditions to enabled standard libraries:\n\t * os.tmpname()\n\n\tNew things Lua can be used for:\n\t * fully integrate an arbitrary editor by using a handler in 'vicmd' or\n\t   'vixcmd'\n\t * defining custom keys and selectors\n\n\tAdded vifm.escape() that escapes input to make it suitable for use in an\n\texternal command for current value of the 'shell' option.\n\n\tAdded vifm.run() that runs an external command similar to :!.\n\n\tAdded vifm.keys.add() that registers a user-defined key or selector.\n\n\tAdded vifm.sessions.current() that retrieves name of the current session.\n\n\tAdded vifm.tabs.get() that retrieves a tab.\n\n\tAdded vifm.tabs.getcount() that retrieves number of open tabs.\n\n\tAdded vifm.tabs.getcurrent() that retrieves index of current tab.\n\n\tAdded VifmEntry:mimetype() that gets a MIME type.\n\n\tAdded VifmTab:getlayout() that retrieves layout of a global tab or shared\n\tTUI state for a pane tab.\n\n\tAdded VifmTab:getname() that retrieves name of the tab if it was set.\n\n\tAdded VifmTab:getview() that returns view managed by the tab.\n\n\tCompletors of a Lua-defined :command can now provide descriptions of\n\tcompletion items.\n\n0.11 to 0.12 (2021-09-29)\n\n\tThe following standard libraries are enabled:\n\t * basic (core global functions)\n\t * table manipulation (`tbl` table)\n\t * package library (`require` global and `package` table)\n\t * string manipulation (`string` table)\n\t * input and output (`io` table)\n\t * mathematical functions (`math` table)\n\t * time subset of OS facilities (`clock`, `date`, `difftime` and `time`\n\t   elements of `os` table)\n\n\t This is what one can do by using Lua at the moment:\n\t  * commands with completion\n\t  * save and reset options (e.g., some kind of presets)\n\t  * custom columns\n\t  * filetype/filextype/fileviewer/%q handlers\n\t  * 'statusline' generator\n\t  * starting background jobs that appear on a job bar\n\n\tAdded vifm.addcolumntype() that registers a new view column type to be\n\tused in 'viewcolumns' option.\n\n\tAdded vifm.addhandler() that registers a new handler that will be\n\taccessible in viewers.\n\n\tAdded vifm.currview() that retrieves a reference to current view.\n\n\tAdded vifm.otherview() that retrieves a reference to other view.\n\n\tAdded vifm.errordialog() that displays error dialog.\n\n\tAdded vifm.expand() that expands environment variables and macros in a\n\tstring.\n\n\tAdded vifm.fnamemodify() that changes path according to modifiers.\n\n\tAdded vifm.exists() that checks existence of a path without resolving\n\tsymbolic links.\n\n\tAdded vifm.makepath() that creates target path and missing intermediate\n\tdirectories.\n\n\tAdded vifm.startjob() that launches an external command.\n\n\tAdded vifm.cmds.add() that registers a new :command of a kind that's\n\tequivalent to builtin commands.\n\n\tAdded vifm.cmds.command() that registers a new :command that works exactly\n\tas those registered using :command builtin command.\n\n\tAdded vifm.cmds.delcommand() that removes :command added by\n\tvifm.cmds.command(), basically being an equivalent of :delcommand builtin\n\tcommand.\n\n\tAdded vifm.opts.global table that provides access to global options.\n\n\tAdded vifm.plugin.name field that provides name of the plugin.\n\n\tAdded vifm.plugin.path field that provides full path to plugin's root\n\tdirectory.\n\n\tAdded vifm.plugin.require() that serves as plugin-specific `require`,\n\twhich loads Lua modules relative to plugin's root.\n\n\tAdded vifm.plugins.all table that contains all plugins indexed by their\n\tnames.\n\n\tAdded vifm.sb.info() that displays a regular message on statusbar.\n\n\tAdded vifm.sb.error() that displays an error message on statusbar.\n\n\tAdded vifm.sb.quick() that displays a quick message on statusbar.\n\n\tAdded vifm.version.app.str field that provides version of Vifm as a\n\tstring.\n\n\tAdded vifm.version.api.major field that provides major version of Lua API.\n\n\tAdded vifm.version.api.minor field that provides minor version of Lua API.\n\n\tAdded vifm.version.api.patch field that provides patch version of Lua API.\n\n\tAdded vifm.version.api.has() that will check presence of features some\n\tday.\n\n\tAdded vifm.version.api.atleast() that checks version of Lua API.\n\n\tAdded VifmEntry.classify table that describes name decorations.\n\n\tAdded VifmEntry.name field that provides name of the file.\n\n\tAdded VifmEntry.location field that provides location of the file.\n\n\tAdded VifmEntry.size field that provides size of the file in bytes.\n\n\tAdded VifmEntry.atime field that provides file access time (e.g., read,\n\texecuted).\n\n\tAdded VifmEntry.ctime field that provides file change time (changes in\n\tmetadata, like mode).\n\n\tAdded VifmEntry.mtime field that provides file modification time (when\n\tfile contents is changed).\n\n\tAdded VifmEntry.type field that provides type of the entry.\n\n\tAdded VifmEntry.folded field that shows whether this entry is folded.\n\n\tAdded VifmEntry.selected field that shows whether this entry is selected.\n\n\tAdded VifmEntry.match field that shows whether this entry is a search\n\tmatch.\n\n\tAdded VifmEntry.matchstart field that provides start position of a\n\tsubstring found in file's name.\n\n\tAdded VifmEntry.matchend field that provides end position of a substring\n\tfound in file's name.\n\n\tAdded VifmEntry:gettarget() that gets target of a symbolic link (not to be\n\tconfused with real path resolution).\n\n\tAdded VifmJob:wait() that waits for the job to finish.\n\n\tAdded VifmJob:exitcode() that retrieves exit code of the job.\n\n\tAdded VifmJob:stdin() that retrieves stream associated with standard input\n\tof the job.\n\n\tAdded VifmJob:stdout() that retrieves stream associated with standard\n\toutput of the job.\n\n\tAdded VifmJob:errors() that retrieves data collected from error stream of\n\tthe job.\n\n\tAdded VifmView.locopts table of location-specific values of view-specific\n\toptions.\n\n\tAdded VifmView.viewopts table of \"global\" values of view-specific options.\n\n\tAdded VifmView.currententry field that provides index of the current\n\tentry.\n\n\tAdded VifmView.cwd field that provides location of the current view.\n\n\tAdded VifmView.entrycount field that provides number of entries in the\n\tview.\n\n\tAdded VifmView:cd() that changes location of the view.\n\n\tAdded VifmView:entry() that retrieves an entry by index.\n"
        },
        {
          "name": "FAQ",
          "type": "blob",
          "size": 5.4287109375,
          "content": "Q: Vifm fails to display some files which present on file system, is it a bug?\n\nA: Most likely reason for missing files are name filters.  Use `:filter?`\n   command to see their state or try pressing zR shortcut to disable all\n   filters (undo that with zM).\n\n   You got there probably by pressing zf on a file by accident at some point.\n   In this case the file will be missing only in one of the panes.\n   If you don't have :filter in your vifmrc and 'vifminfo' includes \"state\"\n   value, such accidental filtering will persist across restarts of Vifm until\n   you use :filter command or press a key like zO that resets permanent filter.\n\n--------------------------------------------------------------------------------\nQ: Vifm doesn't run executables, what's wrong with it?\n\nA: Nothing.  Just set 'runexec' option on.  It's off by default.\n\n--------------------------------------------------------------------------------\nQ: How can I use SSH with Vifm?\n\nA: Follow this steps:\n   1) Download and install sshfs\n   2) Register an extension that will be used for connections over SSH.\n      The format is:\n      :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables\n\n      A sample line might look like this:\n      :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR\n\n      %PARAM and %DESTINATION_DIR are filled in by Vifm at runtime.\n      %PARAM value is filled from the first line of file (whole line).\n\n      You can also add %CLEAR if you want to clear screen before running FUSE\n      program.\n   3) Create a file with ssh extension that contains connection parameters in the\n      first line.  A sample first line could be:\n      root@127.0.0.1:/\n\n--------------------------------------------------------------------------------\n\nQ: How to browse FTP in Vifm?\n\nA: Use CurlFTPFS FUSE filesystem on *nix, which you can find here:\n     http://curlftpfs.sourceforge.net/\n   And on Windows you need to use FTPDrive, which will mount an FTP remote as\n   a drive for you.  Get it here:\n     http://www.killprog.com/fdrve.html\n\n--------------------------------------------------------------------------------\n\nQ: How can I customize Vifm?\n\nA: There are several ways to do that:\n\n  - using vifmrc file (run `:goto $MYVIFMRC` to find it)\n    This file can contain any of Vifm commands.  You probably would like to set\n    mappings and options here.  Vifm will never change this file (it's similar\n    to ~/.vimrc).\n\n  - changing color scheme (run `:cd $VIFM/colors` to find color schemes)\n    You can change colors of different TUI elements in existing color schemes or\n    add a new one.\n\n--------------------------------------------------------------------------------\n\nQ: What operations can be undone/redone?\n\nA: List of currently supported operations:\n  - rename\n  - move\n  - copy\n  - non-permanent removal (i.e., deletion to trash)\n  - change of permissions (chmod)\n  - owner change\n  - group change\n  - creation of symbolic links with absolute or relative paths\n  - creation of directories\n\n--------------------------------------------------------------------------------\n\nQ: How to execute Vifm commands after using :! ?\n\nA: The only way to do this is using :execute command.  Example:\n  :execute ':!shell command' | some-other-command-here\n\n--------------------------------------------------------------------------------\n\nQ: Is there a way to copy/paste without sending to trash first?\n\nA: Yes, to do that, one should yank (copy) files as usual, but use \"P\" key (not\n   \"p\") to put (paste) them into current directory.\n\n--------------------------------------------------------------------------------\n\nQ: Vifm expands macros in a wrong way in user defined commands with Vifm's\n   commands (like in `:command com :mkdir ~/tmp/%c:e | cd ~/tmp/%c:e`).  How to\n   fix it?\n\nA: Just double percent sign (%%).  Why?  Because user commands containing\n   Vifm's command-line commands are parsed twice.  First time to replace %a\n   macro, and second time during command execution.  So doubled percent sign\n   will be parsed with single % during first parse and a %x macro will be\n   expanded during second parse.\n\n--------------------------------------------------------------------------------\n\nQ: Vifm expands range in a wrong way in user defined commands (like in\n   `:command com :%yank`) and shows \"Invalid command name\" message.  How to fix\n   it?\n\nA: See answer to the previous question.\n\n--------------------------------------------------------------------------------\n\nQ: How to make shell aliases and functions work in Vifm when running them like\n   \":!foo\"?\n\nA: Here is a solution for bash, other shells should allow to do something\n   similar.\n\n   1. Add the following lines to ~/.bashrc\n\n       shopt -s expand_aliases\n       unset BASH_ENV\n\n   2. Add the following line to ~/.vifm/vifmrc\n\n       let $BASH_ENV = '~/.bashrc'\n\n   After following the steps above aliases and functions should work the same\n   way as if they were typed in interactive shell by user.  However, they won't\n   be completed by <tab> completion.\n\n--------------------------------------------------------------------------------\n\nQ: How can I help Vifm?\n\nA: Just use it and report any problems, bugs or suggestions to its developers by\n   email or in bug trackers.  You can also send your configuration and\n   colorscheme files to developers.  They can be collected and published on\n   Vifm's web-site.  Examples of configuration files can also show how Vifm is\n   typically used and suggest improvements of common use cases.\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 16.9140625,
          "content": "## Contributing ##\n\nIt's a good idea to describe what it is you would like to implement before\nstarting it.  The are multiple reasons for this:\n\n - new feature might interact with other features in unexpected ways;\n - not all ways of implementing a feature are equal, some might be preferred\n   just for the sake of keeping things consistent;\n - the code base is quite large and stuff that's already there might save you\n   some time.\n\nChanges can be sent as a pull request on [github] or as a patch via [email].\n\nSome information on development is available on the [wiki].\n\n[github]: https://github.com/vifm/vifm/pulls\n[email]: mailto:xaizek@posteo.net\n[wiki]: https://wiki.vifm.info/index.php?title=Development#Code_repositories\n\n## Setup for development ##\n\nTo avoid possible issues with `autoconf` caused by skewed timestamps after\n`git clone` or `git checkout` execute `scripts/fix-timestamps`.\n\nConfigure the project with `--enable-developer` flag to compile in debug mode\nand with `-Werror` (there is also `--enable-werror` that doesn't enable debug\nmode).  Undo this if it breaks the build from `master` because of unexpected\nwarnings.\n\nAfter making changes, don't forget to run tests (see below) to make sure they\npass.  It might be a good idea to start by running tests as well to see that\nthey succeed without any changes.\n\n## Tests ##\n\nTests can be run with `make check` in the root, `src/` or `tests/` directory.\n\nWhen inside `tests/` directory, there are multiple ways to run specific tests\nin several different modes, see top comment of the `Makefile` file there for\ninstructions.\n\nTo use the same modes from `src/` directory (including when building out of\ntree, which is especially useful), auto-generated `./runtests` script can be\nused instead.\n\n## ChangeLog format ##\n\nReleases are listed in newest to oldest order.  Beta versions are considered to\nbe separate releases, otherwise one would have to edit entries rather than add\nnew ones on recording changes done since beta.\n\nWithin each release entries are organized in groups of 4 kinds in this order:\n 1. Changed ...\n 2. Added ...\n 3. Everything else\n 4. Fixed ...\n\nA new entry is added at the end of a group, resulting in a chronological order\nof changes of each kind.\n\n## Package contents ##\n\n    .\n    |\n    |-- build-aux/ - part of autotools' machinery\n    |\n    |-- data/ - documentation, sample vifmrc, icons, etc.\n    |  |\n    |  |-- colors/ - sample color schemes\n    |  |-- graphics/ - icons and screenshots\n    |  |-- man/ - manual pages\n    |  |-- shell-completion/ - scripts implementing shell completion\n    |  `-- vim/ - plugin for Vim\n    |\n    |-- patches/ - patches for software vifm depends on\n    |\n    |-- pkgs/ - package build-scripts\n    |\n    |-- scripts/ - utility scripts for development\n    |\n    |-- src/ - the source code of vifm\n    |  |\n    |  |-- cfg/ - code related to configuration\n    |  |  |\n    |  |  |-- config.c - reads scripts and manages configuration\n    |  |  |-- hist.c - convenient history list abstraction\n    |  |  `-- info.c - read and write vifminfo\n    |  |\n    |  |-- compat/ - implementation of features that are missing on some OSes\n    |  |  |\n    |  |  |-- curses.c - emulation of some wide functions for OpenBSD\n    |  |  |-- dentry.c - emulation of d_entry field of struct direntry\n    |  |  |-- getopt.c - part of glibc to have getopt_long() everywhere\n    |  |  |-- getopt1.c - getopt.c public interface implementation\n    |  |  |-- mntent.c - compatibility file for FreeBSD-like systems\n    |  |  |-- os.c - very thin abstraction layer over basic OS facilities\n    |  |  |-- pthread.c - spinlock shim for OS X\n    |  |  |-- reallocarray.c - more convenient and safe realloc() for arrays\n    |  |  `-- wcwidth.c - wcwidth() implementation for Windows\n    |  |\n    |  |-- engine/ - the core of vi[m]-like functionality\n    |  |  |\n    |  |  |-- abbrevs.c - implementation of abbreviations\n    |  |  |-- autocmds.c - implementation of autocommands\n    |  |  |-- cmds.c - command line parsing core\n    |  |  |-- completion.c - provides means to fill and get completion list\n    |  |  |-- functions.c - provides support for builtin functions\n    |  |  |-- keys.c - analyzes users input\n    |  |  |-- mode.c - generic mode related routines\n    |  |  |-- options.c - :set command\n    |  |  |-- parsing.c - parses expressions\n    |  |  |-- var.c - all needed to work with variables\n    |  |  `-- variables.c - handles :let and :unlet commands\n    |  |\n    |  |-- int/ - integration with environment/external tools\n    |  |  |\n    |  |  |-- desktop.c - code that parses *.desktop files on *nix systems\n    |  |  |-- ext_edit.c - managing of state related to external renaming\n    |  |  |-- file_magic.c - determines programs associated with file using its\n    |  |  |                  mime-type\n    |  |  |-- fuse.c - provides support of FUSE filesystems\n    |  |  |-- path_env.c - parses and modifies PATH environment variables\n    |  |  |-- term_title.c - terminal title updates\n    |  |  `-- vim.c - contains Vim integration functionality\n    |  |\n    |  |-- io/ - file system operations implementation\n    |  |  |\n    |  |  |-- private/ - internal part of i/o\n    |  |  |  |\n    |  |  |  |-- ioc.c - implementation of common i/o routines\n    |  |  |  |-- ioeta.c - internal part of i/o estimations\n    |  |  |  |-- ionotif.c - internal part of i/o notifications\n    |  |  |  `-- traverser.c - file system traversing routine\n    |  |  |\n    |  |  |-- ioeta.c - i/o estimations management\n    |  |  |-- iop.c - implementation of i/o primitive\n    |  |  `-- ior.c - implementation of recursive i/o operations\n    |  |\n    |  |-- lua/ - Lua interface\n    |  |  |\n    |  |  |-- lua/ - Lua 5.4.6 sources\n    |  |  |-- common.c - common code for Lua API implementation\n    |  |  |-- vifm.c - implementation of `vifm`\n    |  |  |-- vifm_abbrevs.c - implementation of `vifm.abbrevs`\n    |  |  |-- vifm_cmds.c - implementation of `vifm.cmds`\n    |  |  |-- vifm_events.c - implementation of `vifm.events`\n    |  |  |-- vifm_handlers.c - implementation of `vifm.addhandler`\n    |  |  |-- vifm_tabs.c - implementation of `vifm.tabs`\n    |  |  |-- vifm_viewcolumns.c - implementation of `vifm.addcolumntype`\n    |  |  |-- vifmentry.c - implementation of VifmEntry\n    |  |  |-- vifmjob.c - implementation of VifmJob\n    |  |  |-- vifmtab.c - implementation of VifmTab\n    |  |  |-- vifmview.c - implementation of VifmView\n    |  |  |-- vlua.c - main Lua interface unit\n    |  |  |-- vlua_cbacks.c - manager of callback functions\n    |  |  `-- vlua_state.c - management of state of vlua.c unit\n    |  |\n    |  |-- menus/ - implementation of all menus\n    |  |  |\n    |  |  |-- apropos_menu.c - handles :apropos menu\n    |  |  |-- bmarks_menu.c - handles :bmarks menu\n    |  |  |-- cabbrevs_menu.c - handles :cabbrev and :cnoreabbrev menus\n    |  |  |-- chistory_menu.c - handles :chistory menu\n    |  |  |-- colorscheme_menu.c - handles :colorscheme menu\n    |  |  |-- commands_menu.c - handles :command menu\n    |  |  |-- dirhistory_menu.c - handles :history menu\n    |  |  |-- dirstack_menu.c - handles :dirs menu\n    |  |  |-- filetypes_menu.c - handles :file menu\n    |  |  |-- find_menu.c - handles :file menu\n    |  |  |-- grep_menu.c - hanldes :grep menu\n    |  |  |-- history_menu.c - handles :history command menus except directory\n    |  |  |                    history\n    |  |  |-- jobs_menu.c - handles :jobs menu\n    |  |  |-- locate_menu.c - handles :locale menu\n    |  |  |-- trash_menu.c - handles :lstrash menu\n    |  |  |-- trashes_menu.c - handles :trashes menu\n    |  |  |-- map_menu.c - handles :map menu\n    |  |  |-- marks_menu.c - handles :marks menu\n    |  |  |-- media.c - handles :media menu\n    |  |  |-- menus.c - handles all kinds of menus\n    |  |  |-- plugins_menu.c - handles :plugins menu\n    |  |  |-- registers_menu.c - handles :registers menu\n    |  |  |-- undolist_menu.c - handles :undolist menu\n    |  |  |-- users_menu.c - handles menus created by %m or %M macros\n    |  |  |-- vifm_menu.c - handles :vifm (or :version) menu\n    |  |  `-- volumes_menu.c - handles :volumes menu on MS Windows systems\n    |  |\n    |  |-- modes/ - implementation of all modes\n    |  |  |\n    |  |  |-- dialogs/ - dialog modes\n    |  |  |  |\n    |  |  |  |-- attr_dialog_nix.c - file permissions dialog for *nix systems\n    |  |  |  |-- attr_dialog_win.c - file properties dialog for MS Windows\n    |  |  |  |                       systems\n    |  |  |  |-- change_dialog.c - change dialog\n    |  |  |  |-- msg_dialog.c - information/error/prompt messages\n    |  |  |  `-- sort_dialog.c - dialog to choose sort type\n    |  |  |\n    |  |  |-- cmdline.c - command line mode\n    |  |  |-- file_info.c - Control+G\n    |  |  |-- menu.c - handles commands in menus\n    |  |  |-- modes.c - general code (e.g. before and after key pressed) for\n    |  |  |             modes\n    |  |  |-- more.c - more mode that views too much output on status bar\n    |  |  |-- normal.c - normal mode commands\n    |  |  |-- view.c - view mode commands\n    |  |  `-- visual.c - implementation of visual mode commands\n    |  |\n    |  |-- ui/ - most of ui related code\n    |  |  |\n    |  |  |-- private/ - internal headers of ui\n    |  |  |-- cancellation.c - managing operation cancellation\n    |  |  |-- color_manager.c - manager of curses color pairs\n    |  |  |-- color_scheme.c - color schemes\n    |  |  |-- colored_line.c - text with %x* highlighting\n    |  |  |-- column_view.c - column formatting unit\n    |  |  |-- escape.c - escape sequences related stuff\n    |  |  |-- fileview.c - display/redraw/manage file view\n    |  |  |-- quickview.c - implementation of quick view\n    |  |  |-- statusbar.c - managing status bar\n    |  |  |-- statusline.c - status line formatting\n    |  |  |-- tabs.c - implementation of tabs\n    |  |  `-- ui.c - ui initialization and other ui related functions\n    |  |\n    |  |-- utils/ - miscellaneous utility functions and data types\n    |  |  |\n    |  |  |-- private/ - internal headers of utilities\n    |  |  |-- cancellation.c - kind of cancellation token\n    |  |  |-- darray.c - macros for managin dynamic arrays\n    |  |  |-- dynarray.c - array reallocation with fewer memory copies\n    |  |  |-- env.c - environment variables related functions\n    |  |  |-- event_nix.c - pipe() wrapper to interrupt selector\n    |  |  |-- event_win.c - event object of manual reset kind to interrupt\n    |  |  |                 selector\n    |  |  |-- fs.c - functions to deal with file system objects\n    |  |  |-- fsdata.c - maps arbitrary data onto file system tree\n    |  |  |-- fsddata.c - fsdata wrapper that takes care of dynamic memory\n    |  |  |-- fswatch_nix.c - watches path in file system for changes on *nix\n    |  |  |-- fswatch_win.c - watches path in file system for changes on Windows\n    |  |  |-- file_streams.c - file stream reading related functions\n    |  |  |-- filemon.c - file monitoring \"object\"\n    |  |  |-- filter.c - small abstraction over filter driven by a regexp\n    |  |  |-- globs.c - provides support of glob patterns\n    |  |  |-- gmux_nix.c - implementation of named mutex on *nix\n    |  |  |-- gmux_win.c - implementation of named mutex on Windows\n    |  |  |-- int_stack.c - int stack \"object\"\n    |  |  |-- log.c - primitive logging\n    |  |  |-- matcher.c - file path/name matcher (glob/regexp/mime-type)\n    |  |  |-- matchers.c - list of matchers (which are ANDed together)\n    |  |  |-- mem.c - simple memory/array manipulation utilities\n    |  |  |-- path.c - various functions to work with paths\n    |  |  |-- regexp.c - regexp related\n    |  |  |-- selector_nix.c - waiting for file descriptors to become readable\n    |  |  |-- selector_win.c - waiting for file handles to become readable\n    |  |  |-- shmem_nix.c - implementation of named shared memory on *nix\n    |  |  |-- shmem_win.c - implementation of named shared memory on Windows\n    |  |  |-- str.c - various string functions\n    |  |  |-- string_array.c - functions to work with arrays of strings\n    |  |  |-- trie.c - 3-way trie implementation\n    |  |  |-- utf8.c - functions to handle utf8 strings\n    |  |  |-- utf8proc.c - third-party implementation of UTF-8 Unicode handling\n    |  |  |-- utils.c - various utilities\n    |  |  |-- utils_nix.c - various utilities for *nix systems\n    |  |  |-- utils_win.c - various utilities for MS Windows\n    |  |  `-- xxhash.c - fast hashing algorithm\n    |  |\n    |  |-- args.c - command-line arguments parsing and processing\n    |  |-- background.c - runs commands in background\n    |  |-- bmarks.c - management of (named) bookmarks\n    |  |-- bracket_notation.c - list of bracket notation entries\n    |  |-- cmd_actions.c - reusable parts of action-like functionality\n    |  |-- cmd_completion.c - handles command line completion\n    |  |-- cmd_core.c - command line parsing\n    |  |-- cmd_handlers.c - handlers for command line commands\n    |  |-- compare.c - implementation of directory comparison\n    |  |-- dir_stack.c - for :pushd and :popd commands\n    |  |-- event_loop.c - event dispatching loop\n    |  |-- filelist.c - fill/update list of files\n    |  |-- filename_modifiers.c - expands filename modifiers\n    |  |-- filetype.c - stores filetype information from vifmrc\n    |  |-- filtering.c - managing file filters\n    |  |-- flist_hist.c - file list history related code\n    |  |-- flist_pos.c - most of file list scrolling/cursor positioning code\n    |  |-- flist_sel.c - most of file list selection handling code\n    |  |-- fops_common.c - shared functionality of high-level file operations\n    |  |-- fops_cpmv.c - copying/moving/linking of files\n    |  |-- fops_misc.c - most of high-level operations on files\n    |  |-- fops_put.c - putting of files\n    |  |-- fops_rename.c - renaming files in various ways\n    |  |-- instance.c - manages generic state of the instance\n    |  |-- ipc.c - handles communication across instances of vifm\n    |  |-- macros.c - code of macros expansion\n    |  |-- marks.c - stores information about marked directories\n    |  |-- ops.c - most of operations performed on file system\n    |  |-- opt_handlers.c - initialization of options and option change handlers\n    |  |-- plugins.c - plugin management\n    |  |-- registers.c - implementation of registers\n    |  |-- running.c - code of handing file and commands running\n    |  |-- search.c - code for / and ? commands of normal mode\n    |  |-- signals.c - handlers for different signals\n    |  |-- sort.c - sort function\n    |  |-- status.c - definition of global status structure\n    |  |-- tags.c - tags for :h completion\n    |  |-- trash.c - code that handles list of files in trash\n    |  |-- types.c - internal file type detection and conversions\n    |  |-- undo.c - stores and handles the undo list\n    |  |-- vcache.c - cache of viewers' output\n    |  |-- version.c - git hash and other version information\n    |  |-- viewcolumns_parser.c - contains code for parsing 'viewcolumns' option\n    |  |-- vifm.c - contains main initialization/termination code\n    |  `-- win_helper.c - needed for temporary rights elevation on Windows\n    |\n    |-- tests/ - testing infrastructure and test suites\n    |  |-- abbrevs/ - tests of src/engine/abbrevs.c\n    |  |-- autocmds/ - tests of src/engine/autocmds.c\n    |  |-- bmarks/ - tests of src/bmarks.c\n    |  |-- cmds/ - tests of src/engine/cmds.c\n    |  |-- colmgr/ - tests of src/ui/color_manager.c\n    |  |-- column_view/ - tests of src/ui/column_view.c\n    |  |-- commands/ - tests of src/cmd_*.c\n    |  |-- completion/ - tests of src/engine/completion.c\n    |  |-- escape/ - tests of src/ui/escape.c\n    |  |-- fileops/ - tests of src/fops_*.c\n    |  |-- filetype/ - tests of src/filetype.c\n    |  |-- filter/ - tests of src/utils/filter.c\n    |  |-- fuzz/ - fuzzy tests, built but not run (need a test driver)\n    |  |-- ioeta/ - tests of src/io/ioeta.c\n    |  |-- ionotif/ - tests of src/io/ionotif.h\n    |  |-- iop/ - tests of src/io/iop.c\n    |  |-- ior/ - tests of src/io/ior.c\n    |  |-- keys/ - tests of src/engine/keys.c\n    |  |-- lua/ - tests of src/lua/*.c\n    |  |-- menus/ - tests of src/menus/*.c\n    |  |-- misc/ - tests of things without a dedicated test suite\n    |  |-- options/ - tests of src/engine/options.c\n    |  |-- parsing/ - tests of src/engine/parsing.c\n    |  |-- regs_shmem_app/ - a helper for tests/misc/registers_shared_memory.c\n    |  |-- test-data/ - files used by tests in run-time\n    |  |-- test-support/ - test framework (stic) and common test functions\n    |  |-- text_buffer/ - tests of src/engine/text_buffer.c\n    |  |-- undo/ - tests of src/undo.c\n    |  |-- utils/ - tests of src/utils/*.c\n    |  |-- variables/ - tests of src/engine/variables.c\n    |  `-- viewcolumns_parser/ - tests of src/viewcolumns_parser.c\n    |\n    |-- AUTHORS - list of code contributors\n    |-- BUGS - some of known issues\n    |-- ChangeLog - list of changes\n    |-- FAQ - some common questions\n    |-- HACKING.md - this file\n    |-- INSTALL - building instructions\n    |-- NEWS - like the ChangeLog, but in more human-readable format\n    |-- README - readme used for distribution\n    |-- README.md - readme to be displayed by code hosting services\n    |-- THANKS - thanks to people that help to improve vifm\n    `-- TODO - what still needs to be implemented\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 8.0419921875,
          "content": "Installation\n~~~~~~~~~~~~\n\nOn *nix you need:\n\n    A working version of ncursesw-compatible library.\n\n    Hints for building on Debian-based systems (Debian/Ubuntu/Linux Mint):\n     * ncurses package you need to build vifm is called \"libncursesw5-dev\"\n     * also install either perl interpreter or vim to generate tags (done\n       during build)\n     * additional (optional) tools used in sample vifmrc:\n       - sudo aptitude install sshfs curlftpfs fuse fuse-zip fusefat fuseiso\n       - for a support of .rar-archive files see:\n         https://gist.github.com/enberg/84710b619bdb0b10e945\n\n*nix Installation (Cygwin emulates *nix environment, so follow these steps\nwhen building with Cygwin):\n\n    If you checkout sources from git, run scripts/fix-timestamps script first\n    to suppress any spurious build files regeneration.\n\n    ./configure\n    make\n    (\"su\" if you don't have access to /usr/local/bin)\n    make install\n\n    ./configure has the following options (the value in square brackets is\n    the default one):\n\n      --disable/[enable]-extended-keys - controls whether to build vifm with\n          support of extended keys (like arrows, home, end, etc.).\n          If it's disabled, there absence of a delay after pressing escape is\n          guaranteed for all curses implementations.\n\n      --disable/[enable]-desktop-files - controls whether vifm will parse\n          *.desktop files found on your system to get a list of programs\n          associated with mimetype of a file.\n\n      --disable/[enable]-remote-cmds - enable remote command sending.\n\n      --[disable]/enable-developer - enables features of interest to\n          developers:\n           - debug information\n           - debug-friendly optimizations\n           - treating compilation warnings as errors\n\n      --[disable]/enable-werror - pass -Werror flag to compiler.\n\n      --[disable]/enable-coverage - enables code coverage generation.\n\n      --disable/[enable]-build-timestamp - disables embedding compilation date\n          into executable.\n\n      --with-sanitize=basic|thread|leak - enables address and undefined, thread\n          or leaks sanitizers respecitively.\n\n      --without/[with]-glib - use GLib2/GIO to determine mimetypes if available.\n\n      --without/[with]-gtk - old (incorrect) name of --without/[with]-glib.\n\n      --without/[with]-libmagic - use libmagic to determine mimetypes if\n          available.\n\n      --without/[with]-X11 - use libX11 to get terminal window title before\n          changing it to restore it on exit.\n\n      --without/[with]-dyn-X11 - load libX11 dynamically\n\n      --with-curses=[/usr] - path to installation root of curses library\n\n      --with-curses-name=[ncursesw] - name of the curses library\n\n    You can install vifm in your ~/ directory if you prefer.  To do this\n    manually copy the vifm and vifm-pause executables from the src/ directory\n    to where you want to run them.  Another possibility is to pass --prefix\n    argument to the ./configure script, with path under the home directory,\n    e.g. --prefix=$HOME/local.  The first approach might cause vifm to find some\n    files which are normally installed under /usr/ directory, but the\n    application will be operational.\n\n    After you start vifm for the first time, you can edit the configuration\n    file.  It will be at ~/.config/vifm/vifmrc unless ~/.vifm/ exists.  See\n    help for description of other files in configuration directory.\n\nOn OS X you need:\n\n    Some compatible curses implementation usually comes with the system.  If\n    not, get and install libscursesw or libncursesw.\n\n    Proceed like in *nix Installation section.\n\n    You might also want to pass --with-glib=no argument to ./configure script\n    to omit unwanted error message when vifm starts.\n\nOn Windows you need:\n\n    Mingw\n\n    The following libraries installed from dev-packages for Mingw (they\n    should include DLL's):\n     - Pdcurses for Mingw (with applied patches under patches/pdcurses*/)\n     - Regex for Mingw\n     - pthreads for Windows\n\nCross-compiling for Windows using MXE (http://mxe.cc/):\n\n    Required MXE packages:\n     - gcc\n     - pdcurses (put patches from patches/pdcurses*/ to src/ directory of MXE)\n     - libgnurx\n     - pthreads\n\n    To build vifm using i686-pc-mingw32 toolchain:\n     - add usr/bin/ directory of MXE to the PATH environment variable, e.g.\n         PATH=\"$MXE_ROOT/usr/bin/:$PATH\"\n     - cd src/\n     - make -f Makefile.win CROSS=i686-pc-mingw32-\n\nWindows Installation (using Windows native API, not Cygwin):\n\n    cd src\n    (uncomment some lines in Makefile.win below 'config:' if you want)\n    make -f Makefile.win\n\n    Copy vifm.exe and win_helper.exe to where you want to run them (but they\n    all should be in the same directory).  You will also need to copy vifm help\n    files and vifmrc file to %HOME%/.vifm/ or APPDATA%/Vifm/.\n\n    In case you want to be able to create symbolic links, you should set a\n    \"Run as Administrator\" attribute for the win_helper.exe.\n    Note: symbolic links are supported on Windows starting from Windows Vista.\n\n    If you use *nix shells copy vifm-pause to some directory that is\n    included in the %PATH%.  The better solution is to put it into\n    %HOME%/.vifm/scripts or %APPDATA%/Vifm/scripts.\n\n    On Windows you can also use vifm in a portable way (e.g. keep it on a\n    removable device).  To do that just put your vifmrc file where vifm.exe\n    is and all configuration files will be stored there.\n\nVim Specific Options:\n\n    vim/ directory referred to below is:\n     - {install_prefix}/share/vifm/vim/ on *nix-like systems;\n     - data/vim/ on Windows.\n\n    Recommended way of installing Vifm-Vim integration is to point Vim's\n    'runtimepath' option to the vim/ directory, like this\n\n        set runtimepath+=/usr/share/vifm/vim/\n\n    in your .vimrc file.  Such setup has an additional benefit of Vifm help\n    being not visible unless Vim is started via :help command from Vifm.\n    If it's not what you desire, just add vim-doc/ directory in a similar\n    manner:\n\n        set runtimepath+=/usr/share/vifm/vim-doc/\n\n    Alternatively, you can install whole vim/ directory into Vim or only some\n    parts of it as described below.\n\n    vim/doc/vifm.txt file should go to your ~/.vim/doc directory or the system\n    vim/doc directory.  Then launch Vim and give the command\n\n        :helptags ~/.vim/doc\n\n    or\n\n        :helptags path/to/system/vim/doc\n\n    depending on where you installed the vifm.txt file.  Note that you have to\n    have write permission to corresponding directory.\n\n    You will also need to set 'vimhelp' option in ~/.vifm/vifmrc as the default\n    setting is to use the plain text file.\n\n    If you want to use syntax highlighting and file type plugin for\n    vifmrc file and on editing command line command externally, copy\n    vim/syntax/vifm.vim, vim/ftdetect/vifm.vim and all files in vim/ftplugin/\n    appropriately to either system wide or user syntax/ and ftplugin/\n    directories of Vim.  One can also add to .vimrc file commands like, but\n    using ftdetect/ directory is a cleaner way to achieve the same:\n\n        autocmd BufNewFile,BufRead vifmrc :set filetype=vifm\n        autocmd BufNewFile,BufRead ~/.vifm/colors/* :set filetype=vifm\n\n    or when parsing of mode lines is enabled in Vim, add the following as the\n    first or last line to configuration file and color schemes:\n\n        \" vim: set filetype=vifm :\n\n    To use vifm.vim plugin install vim/plugin/vifm.vim script to Vim in the same\n    way as described above.  The script allows you to use Vifm from Vim to\n    select files and open them in different ways (e.g. in splits, tabs).\n    Note: you need at least Vim 7.3 to use it.\n\nBuilding with broken wide curses:\n\n    OpenBSD used to have perverted ncursesw library, which had stubs with\n    infinite loops instead of real wide functions.  Vifm had a workaround for\n    it.  The situation on OpenBSD has improved since then and the workaround is\n    now disabled by default.  If you still need it to build on older OpenBSD or\n    for some other system, run ./configure with \"CFLAGS=-DBROKEN_WIDE_CURSES\"\n    argument.  Mind that this is a workaround and it probably best works with\n    Latin characters.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.564453125,
          "content": "## Process this file with automake to produce Makefile.in\n\nSUBDIRS = src\n\nEXTRA_DIST = COPYING.3party ChangeLog.LuaAPI FAQ BUGS patches pkgs tests\ndist-hook:\n\tmake -C \"$(distdir)/tests\" clean\n\trm -f \"$(distdir)/tests/.in.vim\"\n\n# enable generating tags files in particular directories\ndistcheck-hook:\n\tmkdir -p $(distdir)/data/vim/doc/app/ $(distdir)/data/vim/doc/plugin/\n\tchmod u+w $(distdir)/data/vim/doc/app/ $(distdir)/data/vim/doc/plugin/\n\nmostlyclean-local:\n\t+make -C \"$(abs_top_srcdir)/tests\" \"B=$(abs_builddir)/tests/\" clean\n\ncoverage: force\n\t$(MAKE) -C src $@\n\nforce: ;\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 26.224609375,
          "content": "# Makefile.in generated by automake 1.17 from Makefile.am.\n# @configure_input@\n\n# Copyright (C) 1994-2024 Free Software Foundation, Inc.\n\n# This Makefile.in is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\n@SET_MAKE@\nVPATH = @srcdir@\nam__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\nam__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n              \"target option '$${target_option-}' specified\" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n      -*I?*) strip_trailopt 'I';; \\\n        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n      -*O?*) strip_trailopt 'O';; \\\n        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n      -*l?*) strip_trailopt 'l';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\nam__make_dryrun = (target_option=n; $(am__make_running_with_option))\nam__make_keepgoing = (target_option=k; $(am__make_running_with_option))\nam__rm_f = rm -f $(am__rm_f_notfound)\nam__rm_rf = rm -rf $(am__rm_f_notfound)\npkgdatadir = $(datadir)/@PACKAGE@\npkgincludedir = $(includedir)/@PACKAGE@\npkglibdir = $(libdir)/@PACKAGE@\npkglibexecdir = $(libexecdir)/@PACKAGE@\nam__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\ninstall_sh_DATA = $(install_sh) -c -m 644\ninstall_sh_PROGRAM = $(install_sh) -c\ninstall_sh_SCRIPT = $(install_sh) -c\nINSTALL_HEADER = $(INSTALL_DATA)\ntransform = $(program_transform_name)\nNORMAL_INSTALL = :\nPRE_INSTALL = :\nPOST_INSTALL = :\nNORMAL_UNINSTALL = :\nPRE_UNINSTALL = :\nPOST_UNINSTALL = :\nbuild_triplet = @build@\nhost_triplet = @host@\nsubdir = .\nACLOCAL_M4 = $(top_srcdir)/aclocal.m4\nam__aclocal_m4_deps =  \\\n\t$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \\\n\t$(top_srcdir)/build-aux/m4/ax_pthread.m4 \\\n\t$(top_srcdir)/configure.ac\nam__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n\t$(ACLOCAL_M4)\nDIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \\\n\t$(am__configure_deps) $(am__DIST_COMMON)\nam__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n configure.lineno config.status.lineno\nmkinstalldirs = $(install_sh) -d\nCONFIG_HEADER = $(top_builddir)/build-aux/config.h\nCONFIG_CLEAN_FILES =\nCONFIG_CLEAN_VPATH_FILES =\nAM_V_P = $(am__v_P_@AM_V@)\nam__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\nam__v_P_0 = false\nam__v_P_1 = :\nAM_V_GEN = $(am__v_GEN_@AM_V@)\nam__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\nam__v_GEN_0 = @echo \"  GEN     \" $@;\nam__v_GEN_1 = \nAM_V_at = $(am__v_at_@AM_V@)\nam__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\nam__v_at_0 = @\nam__v_at_1 = \nSOURCES =\nDIST_SOURCES =\nRECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\\n\tctags-recursive dvi-recursive html-recursive info-recursive \\\n\tinstall-data-recursive install-dvi-recursive \\\n\tinstall-exec-recursive install-html-recursive \\\n\tinstall-info-recursive install-pdf-recursive \\\n\tinstall-ps-recursive install-recursive installcheck-recursive \\\n\tinstalldirs-recursive pdf-recursive ps-recursive \\\n\ttags-recursive uninstall-recursive\nam__can_run_installinfo = \\\n  case $$AM_UPDATE_INFO_DIR in \\\n    n|no|NO) false;; \\\n    *) (install-info --version) >/dev/null 2>&1;; \\\n  esac\nRECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n  distclean-recursive maintainer-clean-recursive\nam__recursive_targets = \\\n  $(RECURSIVE_TARGETS) \\\n  $(RECURSIVE_CLEAN_TARGETS) \\\n  $(am__extra_recursive_targets)\nAM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\\n\tcscope distdir distdir-am dist dist-all distcheck\nam__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n# Read a list of newline-separated strings from the standard input,\n# and print each of them once, without duplicates.  Input order is\n# *not* preserved.\nam__uniquify_input = $(AWK) '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n# Make sure the list of sources is unique.  This is necessary because,\n# e.g., the same source file might be shared among _SOURCES variables\n# for different programs/libraries.\nam__define_uniq_tagged_files = \\\n  list='$(am__tagged_files)'; \\\n  unique=`for i in $$list; do \\\n    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\nDIST_SUBDIRS = $(SUBDIRS)\nam__DIST_COMMON = $(srcdir)/Makefile.in \\\n\t$(top_srcdir)/build-aux/compile \\\n\t$(top_srcdir)/build-aux/config.guess \\\n\t$(top_srcdir)/build-aux/config.h.in \\\n\t$(top_srcdir)/build-aux/config.sub \\\n\t$(top_srcdir)/build-aux/install-sh \\\n\t$(top_srcdir)/build-aux/missing AUTHORS COPYING ChangeLog \\\n\tINSTALL NEWS README THANKS TODO build-aux/compile \\\n\tbuild-aux/config.guess build-aux/config.sub build-aux/depcomp \\\n\tbuild-aux/install-sh build-aux/missing\nDISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\ndistdir = $(PACKAGE)-$(VERSION)\ntop_distdir = $(distdir)\nam__remove_distdir = \\\n  if test -d \"$(distdir)\"; then \\\n    find \"$(distdir)\" -type d ! -perm -700 -exec chmod u+rwx {} ';' \\\n      ; rm -rf \"$(distdir)\" \\\n      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n  else :; fi\nam__post_remove_distdir = $(am__remove_distdir)\nam__relativize = \\\n  dir0=`pwd`; \\\n  sed_first='s,^\\([^/]*\\)/.*$$,\\1,'; \\\n  sed_rest='s,^[^/]*/*,,'; \\\n  sed_last='s,^.*/\\([^/]*\\)$$,\\1,'; \\\n  sed_butlast='s,/*[^/]*$$,,'; \\\n  while test -n \"$$dir1\"; do \\\n    first=`echo \"$$dir1\" | sed -e \"$$sed_first\"`; \\\n    if test \"$$first\" != \".\"; then \\\n      if test \"$$first\" = \"..\"; then \\\n        dir2=`echo \"$$dir0\" | sed -e \"$$sed_last\"`/\"$$dir2\"; \\\n        dir0=`echo \"$$dir0\" | sed -e \"$$sed_butlast\"`; \\\n      else \\\n        first2=`echo \"$$dir2\" | sed -e \"$$sed_first\"`; \\\n        if test \"$$first2\" = \"$$first\"; then \\\n          dir2=`echo \"$$dir2\" | sed -e \"$$sed_rest\"`; \\\n        else \\\n          dir2=\"../$$dir2\"; \\\n        fi; \\\n        dir0=\"$$dir0\"/\"$$first\"; \\\n      fi; \\\n    fi; \\\n    dir1=`echo \"$$dir1\" | sed -e \"$$sed_rest\"`; \\\n  done; \\\n  reldir=\"$$dir2\"\nGZIP_ENV = -9\nDIST_ARCHIVES = $(distdir).tar.bz2\nDIST_TARGETS = dist-bzip2\n# Exists only to be overridden by the user if desired.\nAM_DISTCHECK_DVI_TARGET = dvi\ndistuninstallcheck_listfiles = find . -type f -print\nam__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\ndistcleancheck_listfiles = \\\n  find . \\( -type f -a \\! \\\n            \\( -name .nfs* -o -name .smb* -o -name .__afs* \\) \\) -print\nACLOCAL = @ACLOCAL@\nAMTAR = @AMTAR@\nAM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\nAUTOCONF = @AUTOCONF@\nAUTOHEADER = @AUTOHEADER@\nAUTOMAKE = @AUTOMAKE@\nAWK = @AWK@\nAWK_PROG = @AWK_PROG@\nCC = @CC@\nCCDEPMODE = @CCDEPMODE@\nCFLAGS = @CFLAGS@\nCOL_PROG = @COL_PROG@\nCPP = @CPP@\nCPPFLAGS = @CPPFLAGS@\nCSCOPE = @CSCOPE@\nCTAGS = @CTAGS@\nCYGPATH_W = @CYGPATH_W@\nDATA_SUFFIX = @DATA_SUFFIX@\nDEFS = @DEFS@\nDEPDIR = @DEPDIR@\nECHO_C = @ECHO_C@\nECHO_N = @ECHO_N@\nECHO_T = @ECHO_T@\nETAGS = @ETAGS@\nEXEEXT = @EXEEXT@\nGIT_PROG = @GIT_PROG@\nHAVE_FILE_PROG = @HAVE_FILE_PROG@\nINSTALL = @INSTALL@\nINSTALL_DATA = @INSTALL_DATA@\nINSTALL_PROGRAM = @INSTALL_PROGRAM@\nINSTALL_SCRIPT = @INSTALL_SCRIPT@\nINSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\nIN_GIT_REPO = @IN_GIT_REPO@\nLDFLAGS = @LDFLAGS@\nLIBOBJS = @LIBOBJS@\nLIBS = @LIBS@\nLTLIBOBJS = @LTLIBOBJS@\nMAKEINFO = @MAKEINFO@\nMANGEN_PROG = @MANGEN_PROG@\nMKDIR_P = @MKDIR_P@\nOBJEXT = @OBJEXT@\nPACKAGE = @PACKAGE@\nPACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\nPACKAGE_NAME = @PACKAGE_NAME@\nPACKAGE_STRING = @PACKAGE_STRING@\nPACKAGE_TARNAME = @PACKAGE_TARNAME@\nPACKAGE_URL = @PACKAGE_URL@\nPACKAGE_VERSION = @PACKAGE_VERSION@\nPATH_SEPARATOR = @PATH_SEPARATOR@\nPERL_PROG = @PERL_PROG@\nPTHREAD_CC = @PTHREAD_CC@\nPTHREAD_CFLAGS = @PTHREAD_CFLAGS@\nPTHREAD_CXX = @PTHREAD_CXX@\nPTHREAD_LIBS = @PTHREAD_LIBS@\nSANITIZERS_CFLAGS = @SANITIZERS_CFLAGS@\nSED = @SED@\nSED_PROG = @SED_PROG@\nSET_MAKE = @SET_MAKE@\nSHELL = @SHELL@\nSTRIP = @STRIP@\nTESTS_CFLAGS = @TESTS_CFLAGS@\nVERSION = @VERSION@\nVIM_PROG = @VIM_PROG@\nabs_builddir = @abs_builddir@\nabs_srcdir = @abs_srcdir@\nabs_top_builddir = @abs_top_builddir@\nabs_top_srcdir = @abs_top_srcdir@\nac_ct_CC = @ac_ct_CC@\nam__include = @am__include@\nam__leading_dot = @am__leading_dot@\nam__quote = @am__quote@\nam__rm_f_notfound = @am__rm_f_notfound@\nam__tar = @am__tar@\nam__untar = @am__untar@\nam__xargs_n = @am__xargs_n@\nax_pthread_config = @ax_pthread_config@\nbindir = @bindir@\nbuild = @build@\nbuild_alias = @build_alias@\nbuild_cpu = @build_cpu@\nbuild_os = @build_os@\nbuild_vendor = @build_vendor@\nbuilddir = @builddir@\ndatadir = @datadir@\ndatarootdir = @datarootdir@\ndocdir = @docdir@\ndvidir = @dvidir@\nexec_prefix = @exec_prefix@\nhost = @host@\nhost_alias = @host_alias@\nhost_cpu = @host_cpu@\nhost_os = @host_os@\nhost_vendor = @host_vendor@\nhtmldir = @htmldir@\nincludedir = @includedir@\ninfodir = @infodir@\ninstall_sh = @install_sh@\nlibdir = @libdir@\nlibexecdir = @libexecdir@\nlocaledir = @localedir@\nlocalstatedir = @localstatedir@\nmandir = @mandir@\nmkdir_p = @mkdir_p@\noldincludedir = @oldincludedir@\npdfdir = @pdfdir@\nprefix = @prefix@\nprogram_transform_name = @program_transform_name@\npsdir = @psdir@\nrunstatedir = @runstatedir@\nsbindir = @sbindir@\nsharedstatedir = @sharedstatedir@\nsrcdir = @srcdir@\nsysconfdir = @sysconfdir@\ntarget_alias = @target_alias@\ntop_build_prefix = @top_build_prefix@\ntop_builddir = @top_builddir@\ntop_srcdir = @top_srcdir@\nSUBDIRS = src\nEXTRA_DIST = COPYING.3party ChangeLog.LuaAPI FAQ BUGS patches pkgs tests\nall: all-recursive\n\n.SUFFIXES:\nam--refresh: Makefile\n\t@:\n$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)\n\t@for dep in $?; do \\\n\t  case '$(am__configure_deps)' in \\\n\t    *$$dep*) \\\n\t      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \\\n\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \\\n\t\t&& exit 0; \\\n\t      exit 1;; \\\n\t  esac; \\\n\tdone; \\\n\techo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \\\n\t$(am__cd) $(top_srcdir) && \\\n\t  $(AUTOMAKE) --gnu Makefile\nMakefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n\t@case '$?' in \\\n\t  *config.status*) \\\n\t    echo ' $(SHELL) ./config.status'; \\\n\t    $(SHELL) ./config.status;; \\\n\t  *) \\\n\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \\\n\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \\\n\tesac;\n\n$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n\t$(SHELL) ./config.status --recheck\n\n$(top_srcdir)/configure:  $(am__configure_deps)\n\t$(am__cd) $(srcdir) && $(AUTOCONF)\n$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n$(am__aclocal_m4_deps):\n\nbuild-aux/config.h: build-aux/stamp-h1\n\t@test -f $@ || rm -f build-aux/stamp-h1\n\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) build-aux/stamp-h1\n\nbuild-aux/stamp-h1: $(top_srcdir)/build-aux/config.h.in $(top_builddir)/config.status\n\t$(AM_V_at)rm -f build-aux/stamp-h1\n\t$(AM_V_GEN)cd $(top_builddir) && $(SHELL) ./config.status build-aux/config.h\n$(top_srcdir)/build-aux/config.h.in:  $(am__configure_deps) \n\t$(AM_V_GEN)($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n\t$(AM_V_at)rm -f build-aux/stamp-h1\n\t$(AM_V_at)touch $@\n\ndistclean-hdr:\n\t-rm -f build-aux/config.h build-aux/stamp-h1\n\n# This directory's subdirectories are mostly independent; you can cd\n# into them and run 'make' without going through this Makefile.\n# To change the values of 'make' variables: instead of editing Makefiles,\n# (1) if the variable is set in 'config.status', edit 'config.status'\n#     (which will cause the Makefiles to be regenerated when you run 'make');\n# (2) otherwise, pass the desired values on the 'make' command line.\n$(am__recursive_targets):\n\t@fail=; \\\n\tif $(am__make_keepgoing); then \\\n\t  failcom='fail=yes'; \\\n\telse \\\n\t  failcom='exit 1'; \\\n\tfi; \\\n\tdot_seen=no; \\\n\ttarget=`echo $@ | sed s/-recursive//`; \\\n\tcase \"$@\" in \\\n\t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n\t  *) list='$(SUBDIRS)' ;; \\\n\tesac; \\\n\tfor subdir in $$list; do \\\n\t  echo \"Making $$target in $$subdir\"; \\\n\t  if test \"$$subdir\" = \".\"; then \\\n\t    dot_seen=yes; \\\n\t    local_target=\"$$target-am\"; \\\n\t  else \\\n\t    local_target=\"$$target\"; \\\n\t  fi; \\\n\t  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n\t  || eval $$failcom; \\\n\tdone; \\\n\tif test \"$$dot_seen\" = \"no\"; then \\\n\t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n\tfi; test -z \"$$fail\"\n\nID: $(am__tagged_files)\n\t$(am__define_uniq_tagged_files); mkid -fID $$unique\ntags: tags-recursive\nTAGS: tags\n\ntags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n\tset x; \\\n\there=`pwd`; \\\n\tif ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \\\n\t  include_option=--etags-include; \\\n\t  empty_fix=.; \\\n\telse \\\n\t  include_option=--include; \\\n\t  empty_fix=; \\\n\tfi; \\\n\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n\t  if test \"$$subdir\" = .; then :; else \\\n\t    test ! -f $$subdir/TAGS || \\\n\t      set \"$$@\" \"$$include_option=$$here/$$subdir/TAGS\"; \\\n\t  fi; \\\n\tdone; \\\n\t$(am__define_uniq_tagged_files); \\\n\tshift; \\\n\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n\t  if test $$# -gt 0; then \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      \"$$@\" $$unique; \\\n\t  else \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      $$unique; \\\n\t  fi; \\\n\tfi\nctags: ctags-recursive\n\nCTAGS: ctags\nctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n\t$(am__define_uniq_tagged_files); \\\n\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n\t     $$unique\n\nGTAGS:\n\there=`$(am__cd) $(top_builddir) && pwd` \\\n\t  && $(am__cd) $(top_srcdir) \\\n\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\ncscope: cscope.files\n\ttest ! -s cscope.files \\\n\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\nclean-cscope:\n\t-rm -f cscope.files\ncscope.files: clean-cscope cscopelist\ncscopelist: cscopelist-recursive\n\ncscopelist-am: $(am__tagged_files)\n\tlist='$(am__tagged_files)'; \\\n\tcase \"$(srcdir)\" in \\\n\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n\tesac; \\\n\tfor i in $$list; do \\\n\t  if test -f \"$$i\"; then \\\n\t    echo \"$(subdir)/$$i\"; \\\n\t  else \\\n\t    echo \"$$sdir/$$i\"; \\\n\t  fi; \\\n\tdone >> $(top_builddir)/cscope.files\n\ndistclean-tags:\n\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\ndistdir: $(BUILT_SOURCES)\n\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n\ndistdir-am: $(DISTFILES)\n\t$(am__remove_distdir)\n\t$(AM_V_at)$(MKDIR_P) \"$(distdir)\"\n\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n\tlist='$(DISTFILES)'; \\\n\t  dist_files=`for file in $$list; do echo $$file; done | \\\n\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n\tcase $$dist_files in \\\n\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n\t\t\t   sort -u` ;; \\\n\tesac; \\\n\tfor file in $$dist_files; do \\\n\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n\t  if test -d $$d/$$file; then \\\n\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n\t    if test -d \"$(distdir)/$$file\"; then \\\n\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n\t    fi; \\\n\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n\t    fi; \\\n\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n\t  else \\\n\t    test -f \"$(distdir)/$$file\" \\\n\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n\t    || exit 1; \\\n\t  fi; \\\n\tdone\n\t@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\\n\t  if test \"$$subdir\" = .; then :; else \\\n\t    $(am__make_dryrun) \\\n\t      || test -d \"$(distdir)/$$subdir\" \\\n\t      || $(MKDIR_P) \"$(distdir)/$$subdir\" \\\n\t      || exit 1; \\\n\t    dir1=$$subdir; dir2=\"$(distdir)/$$subdir\"; \\\n\t    $(am__relativize); \\\n\t    new_distdir=$$reldir; \\\n\t    dir1=$$subdir; dir2=\"$(top_distdir)\"; \\\n\t    $(am__relativize); \\\n\t    new_top_distdir=$$reldir; \\\n\t    echo \" (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=\"$$new_top_distdir\" distdir=\"$$new_distdir\" \\\\\"; \\\n\t    echo \"     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)\"; \\\n\t    ($(am__cd) $$subdir && \\\n\t      $(MAKE) $(AM_MAKEFLAGS) \\\n\t        top_distdir=\"$$new_top_distdir\" \\\n\t        distdir=\"$$new_distdir\" \\\n\t\tam__remove_distdir=: \\\n\t\tam__skip_length_check=: \\\n\t\tam__skip_mode_fix=: \\\n\t        distdir) \\\n\t      || exit 1; \\\n\t  fi; \\\n\tdone\n\t$(MAKE) $(AM_MAKEFLAGS) \\\n\t  top_distdir=\"$(top_distdir)\" distdir=\"$(distdir)\" \\\n\t  dist-hook\n\t-test -n \"$(am__skip_mode_fix)\" \\\n\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n\t|| chmod -R a+r \"$(distdir)\"\ndist-gzip: distdir\n\ttardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz\n\t$(am__post_remove_distdir)\ndist-bzip2: distdir\n\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n\t$(am__post_remove_distdir)\n\ndist-lzip: distdir\n\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n\t$(am__post_remove_distdir)\n\ndist-xz: distdir\n\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n\t$(am__post_remove_distdir)\n\ndist-zstd: distdir\n\ttardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst\n\t$(am__post_remove_distdir)\n\ndist-tarZ: distdir\n\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n\t\t       \"legacy program 'compress' is deprecated.\" >&2\n\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n\t$(am__post_remove_distdir)\n\ndist-shar: distdir\n\t@echo WARNING: \"Support for shar distribution archives is\" \\\n\t               \"deprecated.\" >&2\n\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n\tshar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz\n\t$(am__post_remove_distdir)\n\ndist-zip: distdir\n\t-rm -f $(distdir).zip\n\tzip -rq $(distdir).zip $(distdir)\n\t$(am__post_remove_distdir)\n\ndist dist-all:\n\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n\t$(am__post_remove_distdir)\n\n# This target untars the dist file and tries a VPATH configuration.  Then\n# it guarantees that the distribution is self-contained by making another\n# tarfile.\ndistcheck: dist\n\tcase '$(DIST_ARCHIVES)' in \\\n\t*.tar.gz*) \\\n\t  eval GZIP= gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n\t*.tar.bz2*) \\\n\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n\t*.tar.lz*) \\\n\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n\t*.tar.xz*) \\\n\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n\t*.tar.Z*) \\\n\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n\t*.shar.gz*) \\\n\t  eval GZIP= gzip -dc $(distdir).shar.gz | unshar ;;\\\n\t*.zip*) \\\n\t  unzip $(distdir).zip ;;\\\n\t*.tar.zst*) \\\n\t  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\\\n\tesac\n\tchmod -R a-w $(distdir)\n\tchmod u+w $(distdir)\n\tmkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst\n\tchmod a-w $(distdir)\n\ttest -d $(distdir)/_build || exit 0; \\\n\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) distcheck-hook \\\n\t  && am__cwd=`pwd` \\\n\t  && $(am__cd) $(distdir)/_build/sub \\\n\t  && ../../configure \\\n\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n\t    --srcdir=../.. --prefix=\"$$dc_install_base\" \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n\t        distuninstallcheck \\\n\t  && chmod -R a-w \"$$dc_install_base\" \\\n\t  && ({ \\\n\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n\t  && rm -rf \"$$dc_destdir\" \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n\t  && rm -rf $(DIST_ARCHIVES) \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n\t  && cd \"$$am__cwd\" \\\n\t  || exit 1\n\t$(am__post_remove_distdir)\n\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\ndistuninstallcheck:\n\t@test -n '$(distuninstallcheck_dir)' || { \\\n\t  echo 'ERROR: trying to run $@ with an empty' \\\n\t       '$$(distuninstallcheck_dir)' >&2; \\\n\t  exit 1; \\\n\t}; \\\n\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n\t  exit 1; \\\n\t}; \\\n\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n\t        if test -n \"$(DESTDIR)\"; then \\\n\t          echo \"  (check DESTDIR support)\"; \\\n\t        fi ; \\\n\t        $(distuninstallcheck_listfiles) ; \\\n\t        exit 1; } >&2\ndistcleancheck: distclean\n\t@if test '$(srcdir)' = . ; then \\\n\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n\t  exit 1 ; \\\n\tfi\n\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n\t       $(distcleancheck_listfiles) ; \\\n\t       exit 1; } >&2\ncheck-am: all-am\ncheck: check-recursive\nall-am: Makefile\ninstalldirs: installdirs-recursive\ninstalldirs-am:\ninstall: install-recursive\ninstall-exec: install-exec-recursive\ninstall-data: install-data-recursive\nuninstall: uninstall-recursive\n\ninstall-am: all-am\n\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n\ninstallcheck: installcheck-recursive\ninstall-strip:\n\tif test -z '$(STRIP)'; then \\\n\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n\t      install; \\\n\telse \\\n\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n\tfi\nmostlyclean-generic:\n\nclean-generic:\n\ndistclean-generic:\n\t-$(am__rm_f) $(CONFIG_CLEAN_FILES)\n\t-test . = \"$(srcdir)\" || $(am__rm_f) $(CONFIG_CLEAN_VPATH_FILES)\n\nmaintainer-clean-generic:\n\t@echo \"This command is intended for maintainers to use\"\n\t@echo \"it deletes files that may require special tools to rebuild.\"\nclean: clean-recursive\n\nclean-am: clean-generic mostlyclean-am\n\ndistclean: distclean-recursive\n\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n\t-rm -f Makefile\ndistclean-am: clean-am distclean-generic distclean-hdr distclean-tags\n\ndvi: dvi-recursive\n\ndvi-am:\n\nhtml: html-recursive\n\nhtml-am:\n\ninfo: info-recursive\n\ninfo-am:\n\ninstall-data-am:\n\ninstall-dvi: install-dvi-recursive\n\ninstall-dvi-am:\n\ninstall-exec-am:\n\ninstall-html: install-html-recursive\n\ninstall-html-am:\n\ninstall-info: install-info-recursive\n\ninstall-info-am:\n\ninstall-man:\n\ninstall-pdf: install-pdf-recursive\n\ninstall-pdf-am:\n\ninstall-ps: install-ps-recursive\n\ninstall-ps-am:\n\ninstallcheck-am:\n\nmaintainer-clean: maintainer-clean-recursive\n\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n\t-rm -rf $(top_srcdir)/autom4te.cache\n\t-rm -f Makefile\nmaintainer-clean-am: distclean-am maintainer-clean-generic\n\nmostlyclean: mostlyclean-recursive\n\nmostlyclean-am: mostlyclean-generic mostlyclean-local\n\npdf: pdf-recursive\n\npdf-am:\n\nps: ps-recursive\n\nps-am:\n\nuninstall-am:\n\n.MAKE: $(am__recursive_targets) install-am install-strip\n\n.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \\\n\tam--refresh check check-am clean clean-cscope clean-generic \\\n\tcscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \\\n\tdist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \\\n\tdist-zip dist-zstd distcheck distclean distclean-generic \\\n\tdistclean-hdr distclean-tags distcleancheck distdir \\\n\tdistuninstallcheck dvi dvi-am html html-am info info-am \\\n\tinstall install-am install-data install-data-am install-dvi \\\n\tinstall-dvi-am install-exec install-exec-am install-html \\\n\tinstall-html-am install-info install-info-am install-man \\\n\tinstall-pdf install-pdf-am install-ps install-ps-am \\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tinstalldirs-am maintainer-clean maintainer-clean-generic \\\n\tmostlyclean mostlyclean-generic mostlyclean-local pdf pdf-am \\\n\tps ps-am tags tags-am uninstall uninstall-am\n\n.PRECIOUS: Makefile\n\ndist-hook:\n\tmake -C \"$(distdir)/tests\" clean\n\trm -f \"$(distdir)/tests/.in.vim\"\n\n# enable generating tags files in particular directories\ndistcheck-hook:\n\tmkdir -p $(distdir)/data/vim/doc/app/ $(distdir)/data/vim/doc/plugin/\n\tchmod u+w $(distdir)/data/vim/doc/app/ $(distdir)/data/vim/doc/plugin/\n\nmostlyclean-local:\n\t+make -C \"$(abs_top_srcdir)/tests\" \"B=$(abs_builddir)/tests/\" clean\n\ncoverage: force\n\t$(MAKE) -C src $@\n\nforce: ;\n\n# Tell versions [3.59,3.63) of GNU make to not export all variables.\n# Otherwise a system limit (for SysV at least) may be exceeded.\n.NOEXPORT:\n\n# Tell GNU make to disable its built-in pattern rules.\n%:: %,v\n%:: RCS/%,v\n%:: RCS/%\n%:: s.%\n%:: SCCS/s.%\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 276.87890625,
          "content": "04 April 2023\n=============\n\nVifm v0.13\n----------\n\nThanks to everyone who tried out the beta.\n\nHighlights:\n\n - Faster file-system navigation with a new searching/filtering submode.\n\n   Hitting `<c-y>` after `/` or `=` allows finding and opening consecutive path\n   components without leaving command-line mode.  In this mode keys like\n   `<c-o>`/`<c-n>`/`<c-p>`/`<left>`/`<home>`/etc. help to refine cursor\n   position or go to parent directory if necessary.\n\n - More interactive :compare.\n\n   You can now see stats about file comparison on the status bar and have an\n   option to easily re-run the comparison while toggling visibility of some of\n   the groups.\n\n   Also, default file alignment is more natural now.  `do` and `dp` handle\n   selection.  You can force ignoring or respecting case in paths.  Performance\n   and memory consumption have been improved in various cases.\n\n - Mouse support and TUI improvements.\n\n   Once mouse support is enabled, you should be able to perform simple browsing\n   with just your mouse for those cases when it's more convenient.\n\n   Conflict dialog now always presents basic file metadata for comparison.\n   Detailed progress dialog has ETA.  Ls-like view can now have a fixed number\n   of columns.\n\n - Other.\n\n   Formatting of tabs and entry selection in Lua.  Changing register's content\n   via an editor.  Explicitly prompting user for input via input() function.\n\n - Fixes.\n\n   v0.12.1 was supposed to improve escaping on Windows, but it simultaneously\n   made one old bug more prominent, effectively making things much worse in\n   some cases.  This release remedies that.\n\n   %N macro has been adjusted to fix integration with image preview of Kitty\n   v0.27+.\n\n   Lots of fixes related to search and various combinations of 'hlsearch',\n   'incsearch' in different modes.\n\nNormal and visual modes:\n - made Ctrl-E/Ctrl-Y scroll transposed ls-like view horizontally by one column;\n - extended do and dp keys to process selection (thanks to Mark S., a.k.a.\n   Markuzcha).\n\n:set command and options:\n - added 'mouse' option to control when mouse input is handled (not handled by\n   default);\n - added 'navoptions' option to allow tweaking navigation mode a bit (thanks to\n   filterfalse);\n - added 'tabline' option to specify format of the tab line;\n - added \"columncount:\" value to 'lsoptions' to always display fixed number of\n   columns (thanks to Aleksandr Vysotskiy, a.k.a. loki1368);\n - added \"rpreview:files\" to 'milleroptions' (thanks to aksr).\n\nCommand-line mode:\n - changed error reporting for some of the :commands such that now their\n   failures cause a dialog to appear on sourcing, previously those errors were\n   printed only to status bar;\n - changed implementation of `:compare grouppaths` to juxtapose only files with\n   identical relative paths (patch by Alexandr Keyp, a.k.a. IAmKapuze);\n - added \"withicase\" and \"withrcase\" to :compare that force ignoring and\n   respecting case respectively on comparing file names and paths (thanks to\n   Jose Riha, a.k.a. jose1711);\n - added show* arguments to :compare command to control/switch which sets of\n   files are displayed (toggling is done by :compare!) (patch by Alexandr Keyp,\n   a.k.a. IAmKapuze);\n - added :amap, :anoremap and :aunmap commands to configure mappings in\n   navigation mode (thanks to Henrik Holst, a.k.a. hholst80, and dmocek);\n - added :regedit command for external editing of register contents (thanks to\n   Daniel J. Perry, a.k.a. BioBox; patch by Rostislav Tolushkin, a.k.a.\n   nullptr-deref);\n - added Ctrl-Y key to command-line mode.  It activates fast navigation that\n   allows entering deep paths by a series of searches for individual path\n   components (thanks to Henrik Holst, a.k.a. hholst80, and dmocek);\n - added Ctrl-J key to command-line navigation.  It leaves the mode without\n   opening a file/directory (thanks to filterfalse);\n - added Ctrl-O key to command-line navigation that goes to parent directory;\n - added Ctrl-N/P keys to command-line navigation to move view cursor up/down\n   (thanks to Henrik Holst, a.k.a. hholst80, and dmocek);\n - added Arrows/Home/End/Page Up/Page Down keys to command-line navigation to\n   move view cursor (thanks to Henrik Holst, a.k.a. hholst80, and dmocek).\n\nCore:\n - added printing stats while in :compare mode (patch by Alexandr Keyp, a.k.a.\n   IAmKapuze);\n - don't move cursor on search failure during search with a count (patch by\n   filterfalse);\n - specified a few more cases when to show a search message with search\n   highlighting turned on: if found a match, if wrapping is turned on, and in\n   visual mode (patch by filterfalse);\n - a regular search logic showing messages is applied to n/N (patch by\n   filterfalse).\n\nFile operations:\n - made aborting deletion abort the operation on the rest of files when\n   deleting multiple files.\n\nMacros:\n - changed %N macro to also not start a process group for a command (thanks to\n   Oskar Grunning, a.k.a. sQVe).\n\nScripting:\n - added input() builtin function to prompt user for input (thanks to Artur F.,\n   a.k.a. arturfabriciohahaedgy);\n - added filereadable() builtin function mainly as a way to check file's\n   presence.\n\nMenus and dialogs:\n - added r key to :jobs menu, which reloads the list of jobs (thanks to Sylwia\n   Ptasinska, a.k.a. SylEleuth);\n - made feedback after pressing dd in :jobs more prominent (thanks to Sylwia\n   Ptasinska, a.k.a. SylEleuth).\n\nTUI (Text User Interface):\n - added builtin handling of mouse events (thanks to ranousse, Sergei Shilovsky\n   and user451421541757324; patch by 高浩亮, a.k.a. haolian9);\n - added ETA to detailed progress dialog (thanks to Jose Riha, a.k.a.\n   jose1711);\n - apply file highlighting to \"ext\" and \"fileext\" view columns (thanks to\n   aleksejrs);\n - merged file conflict comparison dialog into the main conflict dialog (thanks\n   to aleksejrs);\n - made file conflict more concise (thanks to aleksejrs).\n\nColor schemes:\n - added additional User10..User20 highlight groups and corresponding %10*-%20*\n   macros (thanks to Sylwia Ptasinska, a.k.a. SylEleuth);\n - update Default-256 to differentiate between more file types (thanks to\n   aleksejrs).\n\nInvocation:\n - added `--plugins-dir` command-line option which allows specifying additional\n   places to look for plugins (thanks to 高浩亮, a.k.a. haolian9).\n\nPerformance:\n - reduced amount of memory consumed by `:compare groupids`;\n - made `:compare bycontents` not bother reading content of files which have\n   unique size.\n\nDocumentation:\n - provide basic instructions in the documentation on how mappings work (thanks\n   to dmocek);\n - fixed description of %i macro in the documentation to mention that it runs\n   command in background.\n\nPackaging:\n - changed use of `$(filter-out)` in src/Makefile.am to `$(var:from=to)`\n   substitution to get rid of a warning on configuration;\n - changed how pthread support is detected by configure script to handle more\n   cases (thanks to Markus Elfring, a.k.a. elfring);\n - changed configure script to fail if neither perl nor vim is available\n   instead of failing to generate tags for Vim-style documentation (thanks to\n   Sergei Trofimovich, a.k.a. trofi);\n - install icons also to ${prefix}/share/icons.  It's not clear that using\n   ${prefix}/share/pixmaps will always be handled properly (thanks to Szilárd\n   Andai).\n\nIntegration:\n - made instances running inside AppImage consider contents of `/etc/vifm`\n   (thanks to aleksejrs);\n - fixed $VIFM_APPDIR_ROOT being ignored by :help command, which made it not\n   work properly from AppImage (thanks to infinitewhileloop).\n\nOnly on Windows:\n - fixed escaping of file paths when using 'vicmd' or 'vixcmd' to open a file\n   on Windows (thanks to Phil Runninger).\n\nNoteworthy fixes:\n - fixed abort due to assertion failure on using zx normal mode key after\n   leaving tree in some cases (thanks to Mark S., a.k.a. Markuzcha);\n - fixed asynchronous previewing of symbolic links, which required manual\n   redraw (thanks to Alexandre Viau);\n - fixed FUSE mounting assuming `2>` redirection is supported by the shell,\n   which isn't true at least for csh and tcsh (thanks to Evgeniy, a.k.a.\n   iron-udjin);\n - fixed dialogs not handling non-latin characters well;\n - fixed :locate never escaping its arguments (should be done unless the first\n   one starts with a dash).  This is a regression in 0.7.6;\n - fixed n/N not moving the cursor without prior search (patch by filterfalse);\n - fixed resetting 'hlsearch' during incremental search in visual mode (patch\n   by filterfalse);\n - fixed dropping selected files on empty input during incremental search in\n   visual mode when 'hlsearch' is set (patch by filterfalse);\n - fixed segfault on trying to use a pipe from Lua after its parent VifmJob\n   object was garbage-collected (thanks to PRESFIL);\n - fixed 'previewprg' not being respected on switching to view mode (regression\n   in 0.12-beta) (thanks to Sitaram Chamarty).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n17 March 2023\n=============\n\nVifm v0.13 beta\n---------------\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nHighlights:\n\n - Faster file-system navigation with a new searching/filtering submode.\n\n   Hitting `<c-y>` after `/` or `=` allows finding and opening consecutive path\n   components without leaving command-line mode.  In this mode keys like\n   `<c-o>`/`<c-n>`/`<c-p>`/`<left>`/`<home>`/etc. help to refine cursor\n   position or go to parent directory if necessary.\n\n - More interactive :compare.\n\n   You can now see stats about file comparison on the status bar and have an\n   option to easily re-run the comparison while toggling visibility of some of\n   the groups.\n\n   Also, default file alignment is more natural now.  `do` and `dp` handle\n   selection.  You can force ignoring or respecting case in paths.  Performance\n   and memory consumption have been improved in various cases.\n\n - Mouse support and TUI improvements.\n\n   Once mouse support is enabled, you should be able to perform simple browsing\n   with just your mouse for those cases when it's more convenient.\n\n   Conflict dialog now always presents basic file metadata for comparison.\n   Detailed progress dialog has ETA.  Ls-like view can now have a fixed number\n   of columns.\n\n - Other.\n\n   Formatting of tabs in Lua.  Changing register's content via an editor.\n   Explicitly prompting user for input via input() function.\n\n - Fixes.\n\n   v0.12.1 was supposed to improve escaping on Windows, but it simultaneously\n   made one old bug more prominent, effectively making things much worse in\n   some cases.  This release remedies that.\n\n   %N macro has been adjusted to fix integration with image preview of Kitty\n   v0.27+.\n\n   Lots of fixes related to search and various combinations of 'hlsearch',\n   'incsearch' in different modes.\n\nNormal and visual modes:\n - made Ctrl-E/Ctrl-Y scroll transposed ls-like view horizontally by one column;\n - extended do and dp keys to process selection (thanks to Mark S., a.k.a.\n   Markuzcha).\n\n:set command and options:\n - added 'mouse' option to control when mouse input is handled (not handled by\n   default);\n - added 'navoptions' option to allow tweaking navigation mode a bit (thanks to\n   filterfalse);\n - added 'tabline' option to specify format of the tab line;\n - added \"columncount:\" value to 'lsoptions' to always display fixed number of\n   columns (thanks to Aleksandr Vysotskiy, a.k.a. loki1368);\n - added \"rpreview:files\" to 'milleroptions' (thanks to aksr).\n\nCommand-line mode:\n - changed error reporting for some of the :commands such that now their\n   failures cause a dialog to appear on sourcing, previously those errors were\n   printed only to status bar;\n - changed implementation of `:compare grouppaths` to juxtapose only files with\n   identical relative paths (patch by Alexandr Keyp, a.k.a. IAmKapuze);\n - added \"withicase\" and \"withrcase\" to :compare that force ignoring and\n   respecting case respectively on comparing file names and paths (thanks to\n   Jose Riha, a.k.a. jose1711);\n - added show* arguments to :compare command to control/switch which sets of\n   files are displayed (toggling is done by :compare!) (patch by Alexandr Keyp,\n   a.k.a. IAmKapuze);\n - added :amap, :anoremap and :aunmap commands to configure mappings in\n   navigation mode (thanks to Henrik Holst, a.k.a. hholst80, and dmocek);\n - added :regedit command for external editing of register contents (thanks to\n   Daniel J. Perry, a.k.a. BioBox; patch by Rostislav Tolushkin, a.k.a.\n   nullptr-deref);\n - added Ctrl-Y key to command-line mode.  It activates fast navigation that\n   allows entering deep paths by a series of searches for individual path\n   components (thanks to Henrik Holst, a.k.a. hholst80, and dmocek);\n - added Ctrl-J key to command-line navigation.  It leaves the mode without\n   opening a file/directory (thanks to filterfalse);\n - added Ctrl-O key to command-line navigation that goes to parent directory;\n - added Ctrl-N/P keys to command-line navigation to move view cursor up/down\n   (thanks to Henrik Holst, a.k.a. hholst80, and dmocek);\n - added Arrows/Home/End/Page Up/Page Down keys to command-line navigation to\n   move view cursor (thanks to Henrik Holst, a.k.a. hholst80, and dmocek).\n\nCore:\n - added printing stats while in :compare mode (patch by Alexandr Keyp, a.k.a.\n   IAmKapuze);\n - don't move cursor on search failure during search with a count (patch by\n   filterfalse);\n - specified a few more cases when to show a search message with search\n   highlighting turned on: if found a match, if wrapping is turned on, and in\n   visual mode (patch by filterfalse);\n - a regular search logic showing messages is applied to n/N (patch by\n   filterfalse).\n\nFile operations:\n - made aborting deletion abort the operation on the rest of files when\n   deleting multiple files.\n\nMacros:\n - changed %N macro to also not start a process group for a command (thanks to\n   Oskar Grunning, a.k.a. sQVe).\n\nScripting:\n - added input() builtin function to prompt user for input (thanks to Artur F.,\n   a.k.a. arturfabriciohahaedgy);\n - added filereadable() builtin function mainly as a way to check file's\n   presence.\n\nMenus and dialogs:\n - added r key to :jobs menu, which reloads the list of jobs (thanks to Sylwia\n   Ptasinska, a.k.a. SylEleuth);\n - made feedback after pressing dd in :jobs more prominent (thanks to Sylwia\n   Ptasinska, a.k.a. SylEleuth).\n\nTUI (Text User Interface):\n - added builtin handling of mouse events (thanks to ranousse, Sergei Shilovsky\n   and user451421541757324; patch by 高浩亮, a.k.a. haolian9);\n - added ETA to detailed progress dialog (thanks to Jose Riha, a.k.a.\n   jose1711);\n - apply file highlighting to \"ext\" and \"fileext\" view columns (thanks to\n   aleksejrs);\n - merged file conflict comparison dialog into the main conflict dialog (thanks\n   to aleksejrs);\n - made file conflict more concise (thanks to aleksejrs).\n\nColor schemes:\n - added additional User10..User20 highlight groups and corresponding %10*-%20*\n   macros (thanks to Sylwia Ptasinska, a.k.a. SylEleuth);\n - update Default-256 to differentiate between more file types (thanks to\n   aleksejrs).\n\nInvocation:\n - added `--plugins-dir` command-line option which allows specifying additional\n   places to look for plugins (thanks to 高浩亮, a.k.a. haolian9).\n\nPerformance:\n - reduced amount of memory consumed by `:compare groupids`;\n - made `:compare bycontents` not bother reading content of files which have\n   unique size.\n\nDocumentation:\n - provide basic instructions in the documentation on how mappings work (thanks\n   to dmocek);\n - fixed description of %i macro in the documentation to mention that it runs\n   command in background.\n\nPackaging:\n - changed use of `$(filter-out)` in src/Makefile.am to `$(var:from=to)`\n   substitution to get rid of a warning on configuration;\n - changed how pthread support is detected by configure script to handle more\n   cases (thanks to Markus Elfring, a.k.a. elfring);\n - changed configure script to fail if neither perl nor vim is available\n   instead of failing to generate tags for Vim-style documentation (thanks to\n   Sergei Trofimovich, a.k.a. trofi);\n - install icons also to ${prefix}/share/icons.  It's not clear that using\n   ${prefix}/share/pixmaps will always be handled properly (thanks to Szilárd\n   Andai).\n\nIntegration:\n - made instances running inside AppImage consider contents of `/etc/vifm`\n   (thanks to aleksejrs);\n - fixed $VIFM_APPDIR_ROOT being ignored by :help command, which made it not\n   work properly from AppImage (thanks to infinitewhileloop).\n\nOnly on Windows:\n - fixed escaping of file paths when using 'vicmd' or 'vixcmd' to open a file\n   on Windows (thanks to Phil Runninger).\n\nNoteworthy fixes:\n - fixed abort due to assertion failure on using zx normal mode key after\n   leaving tree in some cases (thanks to Mark S., a.k.a. Markuzcha);\n - fixed asynchronous previewing of symbolic links, which required manual\n   redraw (thanks to Alexandre Viau);\n - fixed FUSE mounting assuming `2>` redirection is supported by the shell,\n   which isn't true at least for csh and tcsh (thanks to Evgeniy, a.k.a.\n   iron-udjin);\n - fixed dialogs not handling non-latin characters well;\n - fixed :locate never escaping its arguments (should be done unless the first\n   one starts with a dash).  This is a regression in 0.7.6;\n - fixed n/N not moving the cursor without prior search (patch by filterfalse);\n - fixed resetting 'hlsearch' during incremental search in visual mode (patch\n   by filterfalse);\n - fixed dropping selected files on empty input during incremental search in\n   visual mode when 'hlsearch' is set (patch by filterfalse);\n - fixed segfault on trying to use a pipe from Lua after its parent VifmJob\n   object was garbage-collected (thanks to PRESFIL);\n - fixed 'previewprg' not being respected on switching to view mode (regression\n   in 0.12-beta) (thanks to Sitaram Chamarty).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n21 September 2022\n=================\n\nVifm v0.12.1\n------------\n\nThanks to everyone who tried out the beta.\n\nChanges overview:\n\n - Expression register for command-line prompts (Ctrl-R =).\n\n   If you ever wanted to insert result of evaluating an expression into\n   command-line, now you can.  One of the most useful applications of this is\n   pasting clipboard's contents without the risk of it being processed as user\n   input (e.g., `:<c-r>=system('xsel')`).\n\n - Selection handling improvements.\n\n   New :keepsel command-prefix is meant to suppress clearing of selection done\n   automatically after most of command-line commands thus avoiding the need for\n   using `gs` command to restore it.  As a common case, the behaviour for :view\n   command has been changed to not drop selection.\n\n   Restoring selection in a newly entered directory can now be done not just\n   from a register populated ahead via yanking selection (`\"rgs`), but just by\n   executing `gs` to restore selection the directory had before it was left\n   last time.  Vifm remembers last 10 locations with non-empty selection.\n\n - An arbitrary editor can now be fully integrated via Lua.\n\n   'vicmd' and 'vixcmd' were always there, but commands specified in these\n   options could receive Vim-specific arguments they don't expect.  Writing a\n   shell wrapper was an option, but it had to do guesswork while\n   post-processing arguments meant for Vim, which is error prone.  A Lua\n   handler can now be used instead.  It receives full context about editor\n   invocation and can perfectly forward the request to an arbitrary editor.\n\n - TUI improvements.\n\n   Escaping of unprintable characters, less of annoying flickering, slightly\n   better File Info dialog.\n\n   Conflict resolution dialog now provides a sub-dialog for comparing\n   conflicting files and is also smarter at picking which actions to offer.\n\n - Lua API additions (still experimental).\n\n   The API now gives some access to layout, tabs and keys.\n\n   Unlike :*map commands, keys API allows defining custom selectors (like \"2j\"\n   in \"d2j\"), keys that accept an argument (like \"a\" in \"ma\") and keys that\n   accept selectors (custom or builtin).\n\n - Other.\n\n   Bulk retargetting of links, optional implicit `:cd` on command line, macros\n   that expand to non-empty selection, supporting more `<keys>`, completion\n   for `fish` shell.\n\n - Fixes.\n\n   Escaping of arguments and slashes in paths will now hopefully work better on\n   Windows, which is generally an issue there.  Yori shell is now also handled\n   on Windows.\n\n   New %N macro can be used to fix image preview in Kitty terminal.\n\nCore:\n - added expression pseudo-register (Ctrl-R =) for command-line mode (thanks to\n   Marcos Cruz and Jiji from Vifm Q2A site);\n - added parsing of \\c and \\C sequences in regular expressions to force case\n   ignoring or matching respectively (thanks to filterfalse and Safal Piya,\n   a.k.a. mrsafalpiya).\n\nConfiguration:\n - changed how location of trash directory is determined.  Now starting\n   `vifm --no-configs` won't mess anything up if you're using `~/.vifm`.  Can\n   potentially cause some trouble for existing configurations, but shouldn't.\n\nCommand-line mode:\n - added :keepsel command.  Changes default behaviour after running a :command\n   to not reset selection of a view (thanks to dalvand and sharklasers996);\n - added -skip parameter to :copy/:move/:alink/:rlink.  Makes the commands\n   automatically skip files that exist at destination instead of refusing to\n   proceed (thanks to Jose Riha, a.k.a. jose1711);\n - added handling of \"-\" in :session for switching to a previous session;\n - added \":history exprreg\" menu for displaying history of expression register\n   values;\n - do not reset selection on :view command (thanks to Alexandre Viau);\n - permit directories with trailing slashes supplied by external commands in\n   `:[un]select !cmd` (patch by filterfalse).\n\nNormal and visual modes:\n - changed [c and ]c to also traverse added/missing entries (thanks to qsmodo);\n - added cl key visual mode (similar to its function in normal mode);\n - extended cl normal mode key to handle selection of multiple files (thanks to\n   aleksejrs);\n - made gs normal mode key remember selection for up to 10 last entered\n   directories (thanks to ratnamhof and Matthias Braun, a.k.a. mb720).\n\n:set command and options:\n - added 'autocd' option.  Makes invalid :commands be interpreted as an implicit\n   :cd command (thanks to Taras Halturin, a.k.a. halturin);\n - added %o macro to 'statusline', which expands to Unix permissions in octal\n   form (and to nothing on Windows) (thanks to iSeeU816);\n - added \"datasync\" value to 'iooptions' option to configure whether writes on\n   file copying when 'syscalls' is on are synchronized periodically (thanks to\n   Andrew Savchenko and Afz);\n - added \"ehistory\" value to 'vifminfo' and 'sessionoptions' option.  It manages\n   storing of expression register history;\n - added optional border for horizontal split layout controlled by newly added\n   \"hborder\" in 'fillchars' (patch by qsmodo);\n - added \"maxtreedepth\" value to 'previewoptions' option, which allows limiting\n   depths of the displayed tree (thanks to Afz);\n - set 'title' option by default if $TERM is foot* as its terminfo entry might\n   lack tsl and fsl attributes (thanks to nobodyatandnothing).\n\nMacros:\n - added %N macro that prevents detaching viewers from current session (thanks\n   to emorozov);\n - added %pu macro that disables caching of viewer's output (thanks to b0x4it);\n - added %l/%\"l and %L/%\"L macros for the list of selected files.  %f is not\n   empty if there is no selection, which is not always desirable (thanks to\n   ratnamhof).\n\nAngle bracket notation:\n - added angle-bracket notation for alpha keys with Alt and Shift modifiers\n   (<[am]-s-[a-z]>, <s-[am]-[a-z]>) (thanks to Reece Petersen);\n - added angle-bracket notation for numeric keys with Alt modifier\n   (<[am]-[0-9]>) (thanks to anonymous at Vifm Q2A site);\n - added angle-bracket notation for some shifted grey keys: <s-home>, <s-end>,\n   <s-left>, <s-right>, <s-up>, <s-down>, <s-pageup>, <s-pagedown>, <s-delete>,\n   <s-insert> (patch by M Kelly).\n\nScripting:\n - extended has() builtin function to check for Lua handlers;\n - don't expand() macros in environment variables (patch by filterfalse).\n\nLua:\n - upgraded Lua from 5.4.3 to 5.4.4;\n - added sample plugin for using mpc;\n - added sample plugin for customizing editor;\n - added vifm.escape() function;\n - added vifm.run() function (similar to `:!`);\n - added vifm.sessions.current() function;\n - added vifm.keys.add() for adding mappings (can accept selectors or an\n   argument like in `'a`) and selectors;\n - enable os.tmpname();\n - exposed minimal API for tabs (includes layout).\n\nTUI (Text User Interface):\n - escape unreadable characters in menus, command-line mode, dialogs and\n   statusbar messages (thanks to MadMaverick9);\n - hide graphics when displaying dialogs or entering menus, more or file info\n   modes (thanks to heelsleeh and PRESFIL);\n - fixed multiple cases of cursor/UI flickering.\n\nColor schemes:\n - added CmpUnmatched and CmpBlank highlight groups (thanks to qsmodo).\n\nMenus and dialogs:\n - changed conflict dialog to offer \"Merge all\" option even for files if there\n   are some directories left to process (thanks to dalvand);\n - added comparison action to conflict resolution dialog (thanks to anonymous at\n   Vifm Q2A site and dalvand);\n - display permissions in octal form in File Info dialog and group them with\n   owner/group info (thanks to iSeeU816);\n - reformat File Info dialog to be more compact (thanks to chelovechishko).\n\nPerformance:\n - extended optimizations for globs to cover `something*` and `some*thing`\n   cases.\n\nVim-plugin:\n - added :PeditVifm command (and corresponding :PeditVim) to the plugin (thanks\n   to Mukund Mauji, a.k.a. maujim).\n\nOnly on Windows:\n - added initial support for Yori shell on Windows (not everything might work\n   well at this point) (thanks to LinArcX);\n - fixed argument escaping issues for foreground programs on Windows (thanks to\n   fohrums);\n - fixed auto-detection of GUI programs on Windows, which prevents Vifm from\n   waiting on them to finish (thanks to Azin Sharaf);\n - fixed `start` in :file[x]type commands on Windows not being considered as\n   present;\n - fixed slashes being doubled in macros like %\"c on Windows with cmd.exe as a\n   shell (thanks to Toby Hawkins, a.k.a. HawkinsT).\n\nDocumentation:\n - documented that <del> key might correspond to <bs> (thanks to dalvand).\n\nNoteworthy fixes:\n - fixed building when fdatasync() call isn't available (thanks to Schrijvers\n   Luc, a.k.a. Begasus);\n - fixed severe performance degradation after measuring size of large directory\n   trees;\n - fixed `:compare listunique` yielding different results depending on which\n   view is active due to not processing bottom files in the current view in some\n   situations;\n - fixed graphics not being cleared properly on switching between viewers in\n   view mode;\n - fixed processing of extended keys on OpenBSD;\n - fixed :. file modifier incorrectly checking for one path being parent of\n   another and producing weird results (\"/pa\" was considered parent of \"/path\",\n   with \"th\" being the result) (thanks to Dennis Preiser, a.k.a. 0xDP);\n - fixed --remote and --remote-expr failing if $TERM isn't valid (regression in\n   0.11-beta) (thanks to b0x4it);\n - fixed directory preview resetting after detaching from it (thanks to Luka\n   Markušić, a.k.a. mark2185).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\nSeptember 05, 2022\n==================\n\nVifm v0.12.1 beta\n-----------------\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nChanges overview:\n\n - Expression register for command-line prompts (Ctrl-R =).\n\n   If you ever wanted to insert result of evaluating an expression into\n   command-line, now you can.  One of the most useful applications of this is\n   pasting clipboard's contents without the risk of it being processed as user\n   input (e.g., `:<c-r>=system('xsel')`).\n\n - Selection handling improvements.\n\n   New :keepsel command-prefix is meant to suppress clearing of selection done\n   automatically after most of command-line commands thus avoiding the need for\n   using `gs` command to restore it.  As a common case, the behaviour for :view\n   command has been changed to not drop selection.\n\n   Restoring selection in a newly entered directory can now be done not just\n   from a register populated ahead via yanking selection (`\"rgs`), but just by\n   executing `gs` to restore selection the directory had before it was left\n   last time.  Vifm remembers last 10 locations with non-empty selection.\n\n - An arbitrary editor can now be fully integrated via Lua.\n\n   'vicmd' and 'vixcmd' were always there, but commands specified in these\n   options could receive Vim-specific arguments they don't expect.  Writing a\n   shell wrapper was an option, but it had to do guesswork while\n   post-processing arguments meant for Vim, which is error prone.  A Lua\n   handler can now be used instead.  It receives full context about editor\n   invocation and can perfectly forward the request to an arbitrary editor.\n\n - TUI improvements.\n\n   Escaping of unprintable characters, less of annoying flickering, slightly\n   better File Info dialog.\n\n   Conflict resolution dialog now provides a sub-dialog for comparing\n   conflicting files and is also smarter at picking which actions to offer.\n\n - Lua API additions (still experimental).\n\n   The API now gives some access to layout, tabs and keys.\n\n   Unlike :*map commands, keys API allows defining custom selectors (like \"2j\"\n   in \"d2j\"), keys that accept an argument (like \"a\" in \"ma\") and keys that\n   accept selectors (custom or builtin).\n\n - Other.\n\n   Bulk retargetting of links, optional implicit `:cd` on command line, macros\n   that expand to non-empty selection, supporting more `<keys>`.\n\n - Fixes.\n\n   Escaping of arguments and slashes in paths will now hopefully work better on\n   Windows, which is generally an issue there.  Yori shell is now also handled\n   on Windows.\n\n   New %N macro can be used to fix image preview in Kitty terminal.\n\nCore:\n - added expression pseudo-register (Ctrl-R =) for command-line mode (thanks to\n   Marcos Cruz and Jiji from Vifm Q2A site);\n - added parsing of \\c and \\C sequences in regular expressions to force case\n   ignoring or matching respectively (thanks to filterfalse and Safal Piya,\n   a.k.a. mrsafalpiya).\n\nConfiguration:\n - changed how location of trash directory is determined.  Now starting\n   `vifm --no-configs` won't mess anything up if you're using `~/.vifm`.  Can\n   potentially cause some trouble for existing configurations, but shouldn't.\n\nCommand-line mode:\n - added :keepsel command.  Changes default behaviour after running a :command\n   to not reset selection of a view (thanks to dalvand and sharklasers996);\n - added -skip parameter to :copy/:move/:alink/:rlink.  Makes the commands\n   automatically skip files that exist at destination instead of refusing to\n   proceed (thanks to Jose Riha, a.k.a. jose1711);\n - added handling of \"-\" in :session for switching to a previous session;\n - added \":history exprreg\" menu for displaying history of expression register\n   values;\n - do not reset selection on :view command (thanks to Alexandre Viau).\n\nNormal and visual modes:\n - changed [c and ]c to also traverse added/missing entries (thanks to qsmodo);\n - added cl key visual mode (similar to its function in normal mode);\n - extended cl normal mode key to handle selection of multiple files (thanks to\n   aleksejrs);\n - made gs normal mode key remember selection for up to 10 last entered\n   directories (thanks to ratnamhof and Matthias Braun, a.k.a. mb720).\n\n:set command and options:\n - added 'autocd' option.  Makes invalid :commands be interpreted as an implicit\n   :cd command (thanks to Taras Halturin, a.k.a. halturin);\n - added %o macro to 'statusline', which expands to Unix permissions in octal\n   form (and to nothing on Windows) (thanks to iSeeU816);\n - added \"datasync\" value to 'iooptions' option to configure whether writes on\n   file copying when 'syscalls' is on are synchronized periodically (thanks to\n   Andrew Savchenko and Afz);\n - added \"ehistory\" value to 'vifminfo' and 'sessionoptions' option.  It manages\n   storing of expression register history;\n - added optional border for horizontal split layout controlled by newly added\n   \"hborder\" in 'fillchars' (patch by qsmodo);\n - added \"maxtreedepth\" value to 'previewoptions' option, which allows limiting\n   depths of the displayed tree (thanks to Afz);\n - set 'title' option by default if $TERM is foot* as its terminfo entry might\n   lack tsl and fsl attributes (thanks to nobodyatandnothing).\n\nMacros:\n - added %N macro that prevents detaching viewers from current session (thanks\n   to emorozov);\n - added %pu macro that disables caching of viewer's output (thanks to b0x4it);\n - added %l/%\"l and %L/%\"L macros for the list of selected files.  %f is not\n   empty if there is no selection, which is not always desirable (thanks to\n   ratnamhof).\n\nAngle bracket notation:\n - added angle-bracket notation for alpha keys with Alt and Shift modifiers\n   (<[am]-s-[a-z]>, <s-[am]-[a-z]>) (thanks to Reece Petersen);\n - added angle-bracket notation for numeric keys with Alt modifier\n   (<[am]-[0-9]>) (thanks to anonymous at Vifm Q2A site);\n - added angle-bracket notation for some shifted grey keys: <s-home>, <s-end>,\n   <s-left>, <s-right>, <s-up>, <s-down>, <s-pageup>, <s-pagedown>, <s-delete>,\n   <s-insert> (patch by M Kelly).\n\nScripting:\n - extended has() builtin function to check for Lua handlers;\n - don't expand() macros in environment variables (patch by filterfalse).\n\nLua:\n - upgraded Lua from 5.4.3 to 5.4.4;\n - added sample plugin for using mpc;\n - added sample plugin for customizing editor;\n - added vifm.escape() function;\n - added vifm.run() function (similar to `:!`);\n - added vifm.sessions.current() function;\n - added vifm.keys.add() for adding mappings (can accept selectors or an\n   argument like in `'a`) and selectors;\n - enable os.tmpname();\n - exposed minimal API for tabs (includes layout).\n\nTUI (Text User Interface):\n - escape unreadable characters in menus, command-line mode, dialogs and\n   statusbar messages (thanks to MadMaverick9);\n - hide graphics when displaying dialogs or entering menus, more or file info\n   modes (thanks to heelsleeh and PRESFIL);\n - fixed multiple cases of cursor/UI flickering.\n\nColor schemes:\n - added CmpUnmatched and CmpBlank highlight groups (thanks to qsmodo).\n\nMenus and dialogs:\n - changed conflict dialog to offer \"Merge all\" option even for files if there\n   are some directories left to process (thanks to dalvand);\n - added comparison action to conflict resolution dialog (thanks to anonymous at\n   Vifm Q2A site and dalvand);\n - display permissions in octal form in File Info dialog and group them with\n   owner/group info (thanks to iSeeU816);\n - reformat File Info dialog to be more compact (thanks to chelovechishko).\n\nPerformance:\n - extended optimizations for globs to cover `something*` and `some*thing`\n   cases.\n\nVim-plugin:\n - added :PeditVifm command (and corresponding :PeditVim) to the plugin (thanks\n   to Mukund Mauji, a.k.a. maujim).\n\nOnly on Windows:\n - added initial support for Yori shell on Windows (not everything might work\n   well at this point) (thanks to LinArcX);\n - fixed argument escaping issues for foreground programs on Windows (thanks to\n   fohrums);\n - fixed auto-detection of GUI programs on Windows, which prevents Vifm from\n   waiting on them to finish (thanks to Azin Sharaf);\n - fixed `start` in :file[x]type commands on Windows not being considered as\n   present;\n - fixed slashes being doubled in macros like %\"c on Windows with cmd.exe as a\n   shell (thanks to Toby Hawkins, a.k.a. HawkinsT).\n\nDocumentation:\n - documented that <del> key might correspond to <bs> (thanks to dalvand).\n\nNoteworthy fixes:\n - fixed building when fdatasync() call isn't available (thanks to Schrijvers\n   Luc, a.k.a. Begasus);\n - fixed severe performance degradation after measuring size of large directory\n   trees;\n - fixed `:compare listunique` yielding different results depending on which\n   view is active due to not processing bottom files in the current view in some\n   situations;\n - fixed graphics not being cleared properly on switching between viewers in\n   view mode;\n - fixed processing of extended keys on OpenBSD;\n - fixed :. file modifier incorrectly checking for one path being parent of\n   another and producing weird results (\"/pa\" was considered parent of \"/path\",\n   with \"th\" being the result) (thanks to Dennis Preiser, a.k.a. 0xDP);\n - fixed --remote and --remote-expr failing if $TERM isn't valid (regression in\n   0.11-beta) (thanks to b0x4it);\n - fixed directory preview resetting after detaching from it (thanks to Luka\n   Markušić, a.k.a. mark2185).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\nSeptember 29, 2021\n==================\n\nVifm v0.12\n----------\n\nNew version makes textual preview asynchronous, provides support for 24-bit\ncolors, improves tree-view and introduces experimental Lua plugins support.\n\nThanks to everyone who tried out the beta.\n\nMain changes:\n - color schemes and preview now support 24-bit colors;\n - depth of tree-view can now be limited and directories in it can be folded;\n - textual preview of files is now done asynchronously;\n - list of files can now be directly piped to programs via new macros;\n - external editing now asks for a re-edit after a failure;\n - status line can now take up several lines;\n - new keys for controlling viewer while in view mode;\n - view column separators;\n - Vifm has received a more advanced, but currently experimental, extension\n   interface in a form of Lua plugins;\n - new logo.\n\nMore detailed list of changes.\n\nCore:\n - added experimental Lua plugins support;\n - added interactive re-editing of file names in external editor.  Format now\n   supports comments for displaying last error and original file names (thanks\n   to Jose Riha, a.k.a. jose1711 and Diogo Lemos (a.k.a. dmlemos));\n - started using quickview's cache in view mode;\n - extended cache of viewer's output to contain multiple entries (initial\n   version of the cache was added to skip redrawing graphics);\n - run background programs detached from a terminal (thanks to Miguel Madrid\n   Mencía, a.k.a. mimame).\n\nFile operations:\n - added periodic forced flushing of data on copying data when 'syscalls' is set\n   (thanks to Matthias Braun, a.k.a. mb720).\n\nInvocation:\n - don't list inaccessible instances on --server-list.\n\nImportant fixes:\n - fixed losing files as a result of executing \":copy! &\" or \":move! &\" when\n   both panes show the same directory (thanks to Hans Bieshaar);\n - fixed copying of executable files not working on FreeBSD (thanks to\n   makijato);\n - fixed inability to map escape sequences due to extended keys in terminfo\n   database (patch by M Kelly);\n - fixed hang on using previewer that takes over control over the terminal (like\n   7z does to read password) (thanks to PRESFIL);\n - fixed vifm-convert-dircolors dropping copies of entries that differ only by\n   case (thanks to flux242).\n\nNormal and visual modes:\n - added zx normal mode key to fold/unfold directories in tree views.  The\n   implementation is not optimal at this moment though (thanks to filterfalse,\n   Ben Lu, a.k.a. ayroblu, RR0925 and Alexandre Viau).\n\nKey bindings:\n - added a and A view mode keys that switch to next and previous viewer of\n   current file correspondingly (thanks to j-xella);\n - added i view mode key that toggles raw mode (ignoring of defined viewers)\n   (thanks to j-xella).\n\nCommand-line mode:\n - added :plugins command that opens plugins menu;\n - added :plugin command that manages plugins;\n - added :st[op] command what behaves like Ctrl-Z.  It's to be used in mappings\n   (thanks to GummyGun);\n - added \"depth=N\" parameter to the :tree command (thanks to filterfalse);\n - added \"combine\" pseudo-attribute to \"cterm\" parameter of :highlight command.\n   It changes behaviour from overwriting attributes of a parent highlight group\n   (within their hierarchy) to appending to it (thanks to Andrew Savchenko);\n - added \"gui\", \"guifg\" and \"guibg\" parameters to :highlight command;\n - added network mount and `subst` targets to :volumes menu (patch by Phil\n   Runninger);\n - made :compare obey file name filters (patch by qsmodo);\n - allow user-defined commands to include numbers in their names (thanks to\n   anonymous at Vifm Q2A site).\n\n:set command and options:\n - added %P macro to 'rulerformat' (and thus to 'statusline'), which expands to\n   All, Top, xx% or Bot to indicate position within the view (thanks to\n   iSeeU816);\n - added 'previewoptions' option to allow tweaking graphics preview a bit\n   (thanks to Joshua Jensch, a.k.a., patroclos and flux242);\n - added \"toptreestats\" value to 'previewoptions' option, which makes stats\n   appear before the tree (patch by qsmodo);\n - added literal values to 'viewcolumns' option (thanks to Jose Riha, a.k.a.\n   jose1711, chelovechishko, DieSpinne and rwtallant13);\n - added %N macro to 'statusline' option, which adds a line break and increases\n   height of the status line (thanks to Jose Riha, a.k.a. jose1711, qsmodo and\n   jcarreja);\n - added \"l\" and \"r\" flags to the 'tuioptions' option.  It controls truncation\n   of view titles (patch by qsmodo);\n - added %c 'statusline' macro that displays size of current file-system (thanks\n   to Jose Riha, a.k.a. jose1711).\n\nMacros:\n - added %Pl and %Pz macros for redirecting list of files to standard input of\n   commands (thanks to PRESFIL);\n - added %v macro for vertical splitting in terminal multiplexers (patch by\n   qsmodo).\n\nFile preview:\n - allow exploring empty files or output of viewers (thanks to Andrew\n   Savchenko);\n - implemented asynchronous previewing for textual and pass-through (think\n   sixel) viewers (thanks to StillSteal, laur89, Joshua Jensch, a.k.a. patroclos\n   and p-kolacz);\n - detect broken links on preview and report them as such.\n\nColor schemes:\n - changed semantics of light* color groups to add bold attribute only for\n   terminals with less than 16 colors.  Aligns the behaviour with Vim.  Affects\n   you only if you relied on that implicit bold attribute (thanks to Jose Riha,\n   a.k.a. jose1711).\n\nMenus and dialogs:\n - added shortcuts for toggling flags in permissions dialog on *nix (patch by\n   qsmodo);\n - added some additional information about instance to the :version/:vifm menu;\n - made contents of map menus easier to comprehend by adding captions;\n - include shortcut prefix in title of map menus;\n - always display UID/GID in numeric form in File Info dialog (in parenthesis if\n   the id was resolved to a string).\n\nTUI (Text User Interface):\n - added support for direct/\"true\"/24-bit colors for ncurses 6.0 or later\n   (thanks to Anton Kochkov, a.k.a. XVilka and IvanBarsukov);\n - added progress indication to the ruler of the view mode (corresponds to new\n   %P macro of 'rulerformat') (thanks to iSeeU816).\n\nDocumentation:\n - document how %i macro affects background jobs.\n\nOnly on Windows:\n - fixed :goto not working with backslashes (thanks to Grueslayer);\n - fixed processing of keypad keys (thanks to Roland);\n - fixed :empty leaving empty directories (thanks to Grueslayer).\n\nPackaging:\n - made it possible to build AppImage for Vifm (patch by michaellee8);\n - fixed running tests as root user (thanks to Michka Popoff, a.k.a. iMichka);\n - fixed an issue with packaging on one system (Linux in this case) and\n   building on the other (OS X) (thanks to chenrui333).\n\nVim-plugin:\n - made :VifmCs of the plugin handle 24-bit colors.\n\nOther changes:\n - updated logo of the project (thanks to Hescalalu for making it).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSeptember 15, 2021\n==================\n\nVifm v0.12 beta\n---------------\n\nNew version makes textual preview asynchronous, provides support for 24-bit\ncolors, improves tree-view and introduces experimental Lua plugins support.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - color schemes and preview now support 24-bit colors;\n - depth of tree-view can now be limited and directories in it can be folded;\n - textual preview of files is now done asynchronously;\n - list of files can now be directly piped to programs via new macros;\n - external editing now asks for a re-edit after a failure;\n - status line can now take up several lines;\n - Vifm has received a more advanced, but currently experimental, extension\n   interface in a form of Lua plugins.\n\nMore detailed list of changes.\n\nCore:\n - added experimental Lua plugins support;\n - added interactive re-editing of file names in external editor.  Format now\n   supports comments for displaying last error and original file names (thanks\n   to Jose Riha, a.k.a. jose1711 and Diogo Lemos (a.k.a. dmlemos));\n - started using quickview's cache in view mode;\n - extended cache of viewer's output to contain multiple entries (initial\n   version of the cache was added to skip redrawing graphics);\n - run background programs detached from a terminal (thanks to Miguel Madrid\n   Mencía, a.k.a. mimame).\n\nFile operations:\n - added periodic forced flushing of data on copying data when 'syscalls' is set\n   (thanks to Matthias Braun, a.k.a. mb720).\n\nInvocation:\n - don't list inaccessible instances on --server-list.\n\nImportant fixes:\n - fixed losing files as a result of executing \":copy! &\" or \":move! &\" when\n   both panes show the same directory (thanks to Hans Bieshaar);\n - fixed copying of executable files not working on FreeBSD (thanks to\n   makijato);\n - fixed inability to map escape sequences due to extended keys in terminfo\n   database (patch by M Kelly);\n - fixed hang on using previewer that takes over control over the terminal (like\n   7z does to read password) (thanks to PRESFIL);\n - fixed vifm-convert-dircolors dropping copies of entries that differ only by\n   case (thanks to flux242).\n\nNormal and visual modes:\n - added zx normal mode key to fold/unfold directories in tree views.  The\n   implementation is not optimal at this moment though (thanks to filterfalse,\n   Ben Lu, a.k.a. ayroblu, RR0925 and Alexandre Viau).\n\nKey bindings:\n - added a and A view mode keys that switch to next and previous viewer of\n   current file correspondingly (thanks to j-xella);\n - added i view mode key that toggles raw mode (ignoring of defined viewers)\n   (thanks to j-xella).\n\nCommand-line mode:\n - added :plugins command that opens plugins menu;\n - added :plugin command that manages plugins;\n - added :st[op] command what behaves like Ctrl-Z.  It's to be used in mappings\n   (thanks to GummyGun);\n - added \"depth=N\" parameter to the :tree command (thanks to filterfalse);\n - added \"combine\" pseudo-attribute to \"cterm\" parameter of :highlight command.\n   It changes behaviour from overwriting attributes of a parent highlight group\n   (within their hierarchy) to appending to it (thanks to Andrew Savchenko);\n - added \"gui\", \"guifg\" and \"guibg\" parameters to :highlight command;\n - added network mount and `subst` targets to :volumes menu (patch by Phil\n   Runninger);\n - made :compare obey file name filters (patch by qsmodo);\n - allow user-defined commands to include numbers in their names (thanks to\n   anonymous at Vifm Q2A site).\n\n:set command and options:\n - added %P macro to 'rulerformat' (and thus to 'statusline'), which expands to\n   All, Top, xx% or Bot to indicate position within the view (thanks to\n   iSeeU816);\n - added 'previewoptions' option to allow tweaking graphics preview a bit\n   (thanks to Joshua Jensch, a.k.a., patroclos and flux242);\n - added \"toptreestats\" value to 'previewoptions' option, which makes stats\n   appear before the tree (patch by qsmodo);\n - added literal values to 'viewcolumns' option (thanks to Jose Riha, a.k.a.\n   jose1711, chelovechishko, DieSpinne and rwtallant13);\n - added %N macro to 'statusline' option, which adds a line break and increases\n   height of the status line (thanks to Jose Riha, a.k.a. jose1711, qsmodo and\n   jcarreja);\n - added \"l\" and \"r\" flags to the 'tuioptions' option.  It controls truncation\n   of view titles (patch by qsmodo);\n - added %c 'statusline' macro that displays size of current file-system (thanks\n   to Jose Riha, a.k.a. jose1711).\n\nMacros:\n - added %Pl and %Pz macros for redirecting list of files to standard input of\n   commands (thanks to PRESFIL);\n - added %v macro for vertical splitting in terminal multiplexers (patch by\n   qsmodo).\n\nFile preview:\n - allow exploring empty files or output of viewers (thanks to Andrew\n   Savchenko);\n - implemented asynchronous previewing for textual and pass-through (think\n   sixel) viewers (thanks to StillSteal, laur89, Joshua Jensch, a.k.a. patroclos\n   and p-kolacz);\n - detect broken links on preview and report them as such.\n\nColor schemes:\n - changed semantics of light* color groups to add bold attribute only for\n   terminals with less than 16 colors.  Aligns the behaviour with Vim.  Affects\n   you only if you relied on that implicit bold attribute (thanks to Jose Riha,\n   a.k.a. jose1711).\n\nMenus and dialogs:\n - added shortcuts for toggling flags in permissions dialog on *nix (patch by\n   qsmodo);\n - added some additional information about instance to the :version/:vifm menu;\n - made contents of map menus easier to comprehend by adding captions;\n - include shortcut prefix in title of map menus;\n - always display UID/GID in numeric form in File Info dialog (in parenthesis if\n   the id was resolved to a string).\n\nTUI (Text User Interface):\n - added support for direct/\"true\"/24-bit colors for ncurses 6.0 or later\n   (thanks to Anton Kochkov, a.k.a. XVilka and IvanBarsukov);\n - added progress indication to the ruler of the view mode (corresponds to new\n   %P macro of 'rulerformat') (thanks to iSeeU816).\n\nDocumentation:\n - document how %i macro affects background jobs.\n\nOnly on Windows:\n - fixed :goto not working with backslashes (thanks to Grueslayer);\n - fixed processing of keypad keys (thanks to Roland);\n - fixed :empty leaving empty directories (thanks to Grueslayer).\n\nPackaging:\n - made it possible to build AppImage for Vifm (patch by michaellee8);\n - fixed running tests as root user (thanks to Michka Popoff, a.k.a. iMichka);\n - fixed an issue with packaging on one system (Linux in this case) and\n   building on the other (OS X) (thanks to chenrui333).\n\nVim-plugin:\n - made :VifmCs of the plugin fail when 'termguicolors' produces a 24-bit color\n   value (thanks to AtomToast).\n\nOther changes:\n - updated logo of the project (thanks to Hescalalu for making it).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSeptember 24, 2020\n==================\n\nVifm v0.11\n----------\n\nNew version finally updates format of vifminfo file unblocking changes like\npersistent tabs, sessions and timestamp-based merging of histories.  In\naddition to that there were a number of improvements in user interface and\nmultiple performance-related improvements.\n\nThanks to everyone who tried out the beta.\n\nMain changes:\n - added persistent tabs;\n - added sessions;\n - new format of vifminfo file (old version is imported on first run);\n - smarter merging of histories between runs that avoids dropping of new\n   entries;\n - version of default color scheme for 256-color terminals;\n - make tab labels customizable;\n - try to keep ratio of pane sizes constant on resizes, restarts and tab\n   switching;\n - various performance improvements.\n\nMore detailed list of changes.\n\nNormal and visual modes:\n - added gF normal mode key which acts like gf, but goes all the way to the\n   ultimate target of the chain of symbolic links (thanks to Alexandre Viau);\n - improve navigation on gf key.  Do fewer refreshes and disable filters to\n   make target visible.\n\nCore:\n - more sensible merging of histories from multiple instances in vifminfo file\n   (avoids dropping of new entries);\n - invalidate cached directory information (size or number of files) on inode\n   change (thanks to Jose Riha, a.k.a. jose1711);\n - invalidate cached directory size when using it to compute size of some\n   parent directory;\n - improve cursor positioning after file operations;\n - made it possible to escape commas in patterns (as usual, by doubling)\n   (thanks to filterfalse).\n\nCommand-line mode:\n - added :tabo[nly] command that closes all tabs but the current one;\n - added :session and :delsession commands to manage sessions (thanks to Marcos\n   Cruz);\n - added optional \"full\" parameter for the :restart command, which makes it\n   discard essentially all context.  This is useful with persistent tabs\n   (thanks to Yusuf Aktepe);\n - don't reset histories of views in inactive tabs on :restart;\n - improve differentiation between association and list forms of :colorscheme\n   command on startup.  This is important if list contains name of color scheme\n   that doesn't exist.\n\n:set command and options:\n - added \"tabs\" value to 'vifminfo' option.  It enables persistent tabs (thanks\n   to Cosmin Popescu, a.k.a. cosminadrianpopescu, filterfalse and Neil Griffin,\n   a.k.a. ngriffin7a);\n - added \"v\" flag to the 'tuioptions' option.  It controls whether width of\n   middle border is adjusted to equalize view sizes (thanks to Matthias Braun,\n   a.k.a. mb720);\n - added 'sessionoptions' option, which is an alternative to 'vifminfo' for\n   session files;\n - added 'tablabel' option that specifies format of a single tab's label when\n   non-empty (thanks to aleksejrs);\n - added 'tabprefix' and 'tabsuffix' options that allow customizing tabline\n   separators (thanks to CoreCube);\n - added \"treeleafsparent\" value to 'dotdirs' option (thanks to filterfalse and\n   Melandel);\n - do not require \"dhistory\" to be present in 'vifminfo' for \"savedirs\" to\n   work.\n\nMenus and dialogs:\n - added rate and progress bar to progress dialog (patch by Alborz Jafari);\n - added real (fully resolved) path to the File Info dialog (thanks to\n   Alexandre Viau);\n - added number of hard links to the File Info dialog;\n - abort menu, more or file information modes before processing remote commands\n   (thanks to kangshugang);\n - deduplicate elements of the :file menu;\n - make displaying of spaces in mappings more intelligent by using <space> at\n   the start or end of lhs or rhs.\n\nFile preview:\n - improve handling of long or unknown escape sequences in previews (thanks to\n   bratekarate);\n - use global color scheme for preview on the other pane ignoring its\n   directory-specific color scheme;\n - invalidate textual quickview cache if it contains fewer lines than window\n   height and is incomplete.\n\nTUI (Text User Interface):\n - try harder to preserve position of the splitter.  Avoid its drift on\n   terminal resizes and preserve ratio of windows on startup and tab switches\n   (thanks to Shakil Akhtar);\n - prevent internally selected files (e.g., via a range of a :command) from\n   appearing selected in user interface (thanks to filterfalse);\n - reduce width of top line when side borders are hidden (`set tuioptions-=s`)\n   (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - escape some characters as ^X in view and tab titles, custom menu titles, on\n   status line and in terminal title (thanks to filterfalse);\n - use the same label for :grep and :find custom lists as the one used for\n   :grep and :find menus (thanks to filterfalse);\n - use unexpanded command for title of custom file lists produced using %u or\n   %U macros and menus produced using %m or %M macros (thanks to filterfalse);\n - use name of user-defined command in titles of custom views and menus (thanks\n   to filterfalse);\n - preserve more information in the title on turning custom view into tree\n   using :tree (thanks to filterfalse);\n - limit length of custom file list title to 80 character positions (thanks to\n   filterfalse).\n\nIntegration:\n - detect being run under Wayland (relevant for :filextype commands) (thanks to\n   mhdzli);\n - make 'title' option work in all terminals which contain \"tsl\" and \"fsl\"\n   capabilities (thanks to m-kru);\n - update terminal title when in menus (thanks to filterfalse).\n\nColor schemes:\n - added HardLink highlight group for regular files with more than one hard\n   link (patch by Hans Bieshaar);\n - added LineNr highlight group for highlighting line number column of views\n   (thanks to Anton Gepting);\n - added OddLine highlight group for highlighting every second entry line of a\n   pane (thanks to iSeeU816).\n\nScripting:\n - added v:jobcount builtin variable that provides number of active jobs\n   (number of lines in :jobs menu) (thanks to iSeeU816);\n - added v:session builtin variable that provides name of current session or is\n   set to an empty string.\n\nConfiguration:\n - added three MC-like shortcuts to sample vifmrc files (Alt-I, Alt-O and\n   Ctrl-U) (thanks to Hans Bieshaar);\n - added global Default-256 color scheme to be used in terminals that support\n   256-color palette (automatically in sample vifmrc) (thanks to Shakil\n   Akhtar);\n - create $VIFM/colors directory with default color scheme only on the first\n   run (thanks to ranousse);\n - use mime-types in associations in sample vifmrc (thanks to Shakil Akhtar).\n\nPerformance:\n - significantly improved performance of adding files to registers that contain\n   thousands of files.  As a result contents of registers is sorted now (thanks\n   to Typo);\n - significantly improved performance of adding files to trash that contains\n   thousands of files.  As a result contents of trash is sorted now (thanks to\n   Typo);\n - significantly improved speed of sourcing files (includes processing\n   configuration on startup and :restart);\n - significantly improved speed of handling typical globs (and therefore\n   mime-type matchers) and reduced amount of memory they take up (thanks to\n   yanzhang0219);\n - improve performance of mime-type detection by caching the results;\n - make comparing files by contents (`:compare bycontents`) somewhat faster\n   (thanks to maxigaz);\n - don't force view reload after every :command that resets selection when\n   there was non-empty selection.  This might make metadata of files less\n   up-to-date, but should increase overall performance (thanks to Jose Riha,\n   a.k.a. jose1711);\n - avoid reloading source file list after copy or move operation when possible\n   (thanks to Jose Riha, a.k.a. jose1711).\n\nVim-plugin:\n - added :VifmCs command to the plugin for \"converting\" Vim's color scheme into\n   a Vifm's one (patch by Roman Plášil, a.k.a. Quiark);\n - multiple improvements of syntax highlighting.\n\nDocumentation:\n - added references to \"Menus and dialogs\" section of documentation from\n   :commands and keys which open menus and dialogs detailed there;\n - explicitly documented that macros are expanded in user defined commands\n   (thanks to gcmt);\n - made documentation of :command more comprehensible;\n - document that user must disable netrw plugin on his own when enabling\n   g:vifm_replace_netrw.  Vifm's plugin can't do it, because it's loaded after\n   plugins shipped with Vim;\n - documented how selection is handled on launching files (like on l or Enter\n   keys);\n - improve documentation on \"bycontents\" of :compare (thanks to maxigaz);\n - somewhat improved documentation on 'ignorecase' and 'smartcase' options\n   (thanks to filterfalse);\n - fixed Vim version of the documentation lacking description of %p macro of\n   'findprg'.\n\nOnly on Windows:\n - added basic support for using PowerShell (pausing doesn't work) (thanks to\n   Fang, a.k.a. peromage);\n - display targets of .lnk-files in file information dialog;\n - implemented capturing output of background applications (thanks to Gene\n   Zharov);\n - follow targets of .lnk-files (thanks to Alexandre Viau);\n - fixed 'chaselinks' (symbolic links weren't resolved);\n - fixed creating symbolic links with 'syscalls' being turned on;\n - fixed creating symbolic links with spaces in source or target paths;\n - fixed Alt key combinations being broken since v0.9;\n - fixed running non-cmd shells being broken by adding 'shellcmdflag' in\n   0.10.1;\n - fixed issues with non-tiny 'shellcmdflag' (patch by Bas Bossink, a.k.a.\n   basbossink);\n - fixed detecting presence of :file[x]type commands on Windows when\n   backslashes are present in path (thanks to anonymous and n.e. at Vifm Q2A\n   site).\n\nPackaging:\n - avoid interposing system's reallocarray(), when it's present (thanks to Ben\n   Boeckel, a.k.a. mathstuf);\n - install only one version of sample config and media script, the one which\n   corresponds to operating system being used (thanks to Michael Vetter, a.k.a.\n   jubalh and Ondrej Novy, a.k.a. onovy);\n - clean up tests directory on \"make clean\" in the top of the tree.\n\nImportant fixes:\n - fixed generation of :highlight command for OtherWin on writing\n   $VIFM/colors/Default.vifm.  The bug caused white background of inactive pane\n   (thanks to Stas Malavin);\n - fixed `:move subdir &` renaming file in the process and doing weird stuff to\n   multiple files (thanks to 45jqlakjrf87ayte7hy34ter4nguijauzl4eitk);\n - fixed graphics preview not being cleared on switching tabs or starting\n   external applications (including on :shell);\n - fixed mapped keys being reinterpreted as builtin keys if RHS of the mapping\n   failed at some point (e.g., contained an unmapped key) (thanks to Seok Won\n   Lee, a.k.a. ijleesw);\n - fixed dialogs not being visible when UI updates are silenced via <silent>\n   mappings;\n - fixed panic on some redraw operations mixing with file operations during\n   terminal resizing (thanks to aca).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSeptember 10, 2020\n==================\n\nVifm v0.11 beta\n---------------\n\nNew version finally updates format of vifminfo file unblocking changes like\npersistent tabs, sessions and timestamp-based merging of histories.  In\naddition to that there were a number of improvements in user interface and\nmultiple performance-related improvements.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added persistent tabs;\n - added sessions;\n - new format of vifminfo file (old version is imported on first run);\n - smarter merging of histories between runs that avoids dropping of new\n   entries;\n - version of default color scheme for 256-color terminals;\n - make tab labels customizable;\n - try to keep ratio of pane sizes constant on resizes, restarts and tab\n   switching;\n - various performance improvements.\n\nMore detailed list of changes.\n\nNormal and visual modes:\n - added gF normal mode key which acts like gf, but goes all the way to the\n   ultimate target of the chain of symbolic links (thanks to Alexandre Viau);\n - improve navigation on gf key.  Do fewer refreshes and disable filters to\n   make target visible.\n\nCore:\n - more sensible merging of histories from multiple instances in vifminfo file\n   (avoids dropping of new entries);\n - invalidate cached directory information (size or number of files) on inode\n   change (thanks to Jose Riha, a.k.a. jose1711);\n - invalidate cached directory size when using it to compute size of some\n   parent directory;\n - improve cursor positioning after file operations.\n\nCommand-line mode:\n - added :tabo[nly] command that closes all tabs but the current one;\n - added :session and :delsession commands to manage sessions (thanks to Marcos\n   Cruz);\n - added optional \"full\" parameter for the :restart command, which makes it\n   discard essentially all context.  This is useful with persistent tabs\n   (thanks to Yusuf Aktepe);\n - don't reset histories of views in inactive tabs on :restart;\n - improve differentiation between association and list forms of :colorscheme\n   command on startup.  This is important if list contains name of color scheme\n   that doesn't exist.\n\n:set command and options:\n - added \"tabs\" value to 'vifminfo' option.  It enables persistent tabs (thanks\n   to Cosmin Popescu, a.k.a. cosminadrianpopescu, filterfalse and Neil Griffin,\n   a.k.a. ngriffin7a);\n - added \"v\" flag to the 'tuioptions' option.  It controls whether width of\n   middle border is adjusted to equalize view sizes (thanks to Matthias Braun,\n   a.k.a. mb720);\n - added 'sessionoptions' option, which is an alternative to 'vifminfo' for\n   session files;\n - added 'tablabel' option that specifies format of a single tab's label when\n   non-empty (thanks to aleksejrs);\n - added 'tabprefix' and 'tabsuffix' options that allow customizing tabline\n   separators (thanks to CoreCube);\n - added \"treeleafsparent\" value to 'dotdirs' option (thanks to filterfalse and\n   Melandel);\n - do not require \"dhistory\" to be present in 'vifminfo' for \"savedirs\" to\n   work.\n\nMenus and dialogs:\n - added rate and progress bar to progress dialog (patch by Alborz Jafari);\n - added real (fully resolved) path to the File Info dialog (thanks to\n   Alexandre Viau);\n - added number of hard links to the File Info dialog;\n - abort menu, more or file information modes before processing remote commands\n   (thanks to kangshugang);\n - deduplicate elements of the :file menu;\n - make displaying of spaces in mappings more intelligent by using <space> at\n   the start or end of lhs or rhs.\n\nFile preview:\n - improve handling of long or unknown escape sequences in previews (thanks to\n   bratekarate);\n - use global color scheme for preview on the other pane ignoring its\n   directory-specific color scheme;\n - invalidate textual quickview cache if it contains fewer lines than window\n   height and is incomplete.\n\nTUI (Text User Interface):\n - try harder to preserve position of the splitter.  Avoid its drift on\n   terminal resizes and preserve ratio of windows on startup and tab switches\n   (thanks to Shakil Akhtar);\n - prevent internally selected files (e.g., via a range of a :command) from\n   appearing selected in user interface (thanks to filterfalse);\n - reduce width of top line when side borders are hidden (`set tuioptions-=s`)\n   (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - escape some characters as ^X in view and tab titles, custom menu titles, on\n   status line and in terminal title (thanks to filterfalse);\n - use the same label for :grep and :find custom lists as the one used for\n   :grep and :find menus (thanks to filterfalse);\n - use unexpanded command for title of custom file lists produced using %u or\n   %U macros and menus produced using %m or %M macros (thanks to filterfalse);\n - use name of user-defined command in titles of custom views and menus (thanks\n   to filterfalse);\n - preserve more information in the title on turning custom view into tree\n   using :tree (thanks to filterfalse);\n - limit length of custom file list title to 80 character positions (thanks to\n   filterfalse).\n\nIntegration:\n - detect being run under Wayland (relevant for :filextype commands) (thanks to\n   mhdzli);\n - make 'title' option work in all terminals which contain \"tsl\" and \"fsl\"\n   capabilities (thanks to m-kru);\n - update terminal title when in menus (thanks to filterfalse).\n\nColor schemes:\n - added HardLink highlight group for regular files with more than one hard\n   link (patch by Hans Bieshaar);\n - added LineNr highlight group for highlighting line number column of views\n   (thanks to Anton Gepting);\n - added OddLine highlight group for highlighting every second entry line of a\n   pane (thanks to iSeeU816).\n\nScripting:\n - added v:jobcount builtin variable that provides number of active jobs\n   (number of lines in :jobs menu) (thanks to iSeeU816);\n - added v:session builtin variable that provides name of current session or is\n   set to an empty string.\n\nConfiguration:\n - added three MC-like shortcuts to sample vifmrc files (Alt-I, Alt-O and\n   Ctrl-U) (thanks to Hans Bieshaar);\n - added global Default-256 color scheme to be used in terminals that support\n   256-color palette (automatically in sample vifmrc) (thanks to Shakil\n   Akhtar);\n - create $VIFM/colors directory with default color scheme only on the first\n   run (thanks to ranousse);\n - use mime-types in associations in sample vifmrc (thanks to Shakil Akhtar).\n\nPerformance:\n - significantly improved performance of adding files to registers that contain\n   thousands of files.  As a result contents of registers is sorted now (thanks\n   to Typo);\n - significantly improved performance of adding files to trash that contains\n   thousands of files.  As a result contents of trash is sorted now (thanks to\n   Typo);\n - significantly improved speed of sourcing files (includes processing\n   configuration on startup and :restart);\n - significantly improved speed of handling typical globs (and therefore\n   mime-type matchers) and reduced amount of memory they take up (thanks to\n   yanzhang0219);\n - improve performance of mime-type detection by caching the results;\n - make comparing files by contents (`:compare bycontents`) somewhat faster\n   (thanks to maxigaz);\n - don't force view reload after every :command that resets selection when\n   there was non-empty selection.  This might make metadata of files less\n   up-to-date, but should increase overall performance (thanks to Jose Riha,\n   a.k.a. jose1711);\n - avoid reloading source file list after copy or move operation when possible\n   (thanks to Jose Riha, a.k.a. jose1711).\n\nVim-plugin:\n - added :VifmCs command to the plugin for \"converting\" Vim's color scheme into\n   a Vifm's one (patch by Roman Plášil, a.k.a. Quiark);\n - multiple improvements of syntax highlighting.\n\nDocumentation:\n - added references to \"Menus and dialogs\" section of documentation from\n   :commands and keys which open menus and dialogs detailed there;\n - explicitly documented that macros are expanded in user defined commands\n   (thanks to gcmt);\n - made documentation of :command more comprehensible;\n - document that user must disable netrw plugin on his own when enabling\n   g:vifm_replace_netrw.  Vifm's plugin can't do it, because it's loaded after\n   plugins shipped with Vim;\n - documented how selection is handled on launching files (like on l or Enter\n   keys);\n - improve documentation on \"bycontents\" of :compare (thanks to maxigaz);\n - somewhat improved documentation on 'ignorecase' and 'smartcase' options\n   (thanks to filterfalse);\n - fixed Vim version of the documentation lacking description of %p macro of\n   'findprg'.\n\nOnly on Windows:\n - added basic support for using PowerShell (pausing doesn't work) (thanks to\n   Fang, a.k.a. peromage);\n - display targets of .lnk-files in file information dialog;\n - implemented capturing output of background applications (thanks to Gene\n   Zharov);\n - follow targets of .lnk-files (thanks to Alexandre Viau);\n - fixed 'chaselinks' (symbolic links weren't resolved);\n - fixed creating symbolic links with 'syscalls' being turned on;\n - fixed creating symbolic links with spaces in source or target paths;\n - fixed Alt key combinations being broken since v0.9;\n - fixed running non-cmd shells being broken by adding 'shellcmdflag' in\n   0.10.1;\n - fixed issues with non-tiny 'shellcmdflag' (patch by Bas Bossink, a.k.a.\n   basbossink);\n - fixed detecting presence of :file[x]type commands on Windows when\n   backslashes are present in path (thanks to anonymous and n.e. at Vifm Q2A\n   site).\n\nPackaging:\n - avoid interposing system's reallocarray(), when it's present (thanks to Ben\n   Boeckel, a.k.a. mathstuf);\n - install only one version of sample config and media script, the one which\n   corresponds to operating system being used (thanks to Michael Vetter, a.k.a.\n   jubalh and Ondrej Novy, a.k.a. onovy);\n - clean up tests directory on \"make clean\" in the top of the tree.\n\nImportant fixes:\n - fixed generation of :highlight command for OtherWin on writing\n   $VIFM/colors/Default.vifm.  The bug caused white background of inactive pane\n   (thanks to Stas Malavin);\n - fixed `:move subdir &` renaming file in the process and doing weird stuff to\n   multiple files (thanks to 45jqlakjrf87ayte7hy34ter4nguijauzl4eitk);\n - fixed graphics preview not being cleared on switching tabs or starting\n   external applications (including on :shell);\n - fixed mapped keys being reinterpreted as builtin keys if RHS of the mapping\n   failed at some point (e.g., contained an unmapped key) (thanks to Seok Won\n   Lee, a.k.a. ijleesw);\n - fixed dialogs not being visible when UI updates are silenced via <silent>\n   mappings;\n - fixed panic on some redraw operations mixing with file operations during\n   terminal resizing (thanks to aca).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJuly 29, 2019\n=============\n\nvifm v0.10.1\n------------\n\nThis version provides additions and improvements for media management feature,\nseveral enhancements related to text user interface, extra features to Vim\nplugin thanks to merging in neovim-vifm plugin and various small changes.\n\nThanks to everyone who tried out the beta.\n\nMain changes:\n - added file preview to miller mode;\n - added preview macro to directly output to terminal, which enables use of\n   Sixel graphics for previewing;\n - added udisks2 backend to vifm-media script (bundled script for managing\n   media) and version of the script for OS X;\n - updated code to make use of large amount of color pairs when available;\n - functionality of previously separate neovim-vifm plugin got merged into the\n   main plugin;\n - multiple improvements to :media menu;\n - improved performance in several use cases (quickview, lots of unhighlighted\n   files, unnecessary cursor updates and redraws).\n\nMore detailed list of changes.\n\nCommand-line mode:\n - added :cds command that navigates to path obtained by substitution in the\n   current path (thanks to j-xella);\n - added :hideui command that hides interface to show previous commands'\n   output (thanks to dikiy);\n - added one more invocation format of :colorscheme command, which picks the\n   first available color scheme that is supported by the terminal (thanks to\n   Jose Riha, a.k.a. jose1711);\n - always preserve tabs on :restart (thanks to mwgkgk);\n - refuse to compare directory against itself via :compare command (thanks to\n   Jose Riha, a.k.a. jose1711).\n\n:set command and options:\n - added fileroot view column, which displays full name of directories and\n   symbolic links to directories and only root of name for everything\n   else (thanks to chelovechishko);\n - added 'shellcmdflag' option that allows customizing how shell is invoked.\n   Enables running it in interactive mode, which can make shell aliases and\n   functions work (thanks to Ink (a.k.a. inknoir), John Shea (a.k.a. coachshea)\n   and randomizedthinking);\n - added L flag to 'shortmess' option to display only last directory in tab\n   line instead of full path (thanks to chelovechishko);\n - added ^= operation for string list options (thanks to SearyBlue);\n - added ^= operation for options of set kind;\n - added rpreview: key to 'milleroptions' option that allows enabling preview\n   of files (thanks to Svadkos and Tom Jansen);\n - added %p macro to 'findprg' option.  It works as a mix between %a and %A\n   macros: usually contains arguments passed to :find command, but unlike %a\n   doesn't include any predicates (thanks to Sitaram Chamarty and Tuan Bui,\n   a.k.a. tuanbass);\n - added \"space\" and \"nospace\" values to 'sizefmt' option (patch by\n   zsugabubus);\n - do not add leading comma to string list options on set opt+=item;\n - don't create trash directory on startup if 'trash' is off (patch by\n   zsugabubus).\n\nKey bindings:\n - improved <silent> to do not forcefully update screen after the mapping if no\n   screen updates were skipped.\n\nCompletion:\n - complete user name in paths after initial tilde (e.g., :cd ~r<tab> =>\n   :cd ~root).\n\nMacros:\n - added %pd macro that makes preview output directly affect terminal\n   circumventing curses interface, which could be used to display sixel\n   images (thanks to Tom Jansen).\n\nColor schemes:\n - added OtherWin highlight group for highlighting inactive pane (thanks to\n   John Fred Fadrigalan, a.k.a. cevhyruz).\n\nMenus and dialogs:\n - added indication of entry's availability to :file, :file[x]type and\n   :fileviewer menus;\n - added [ and ] bindings to :media menu that provide navigation between\n   devices (patch by zsugabubus);\n - added decorations to :media menu (patch by zsugabubus);\n - react to Enter in :media menu on device lines, mount on \"not mounted\" line\n   and do nothing otherwise (patch by zsugabubus);\n - show empty lines in :media only if there is enough vertical space (patch by\n   zsugabubus);\n - removed empty line from :file and similar menus for case when vifm was\n   configured with --disable-desktop-files flag (second time).\n\nScripting:\n - added extcached() builtin function, which can be used to improve performance\n   of file queries by caching results of external commands (thanks to Matthias\n   Braun, a.k.a. mb720).\n\nInvocation:\n - try to preserve symbolic links in current path when starting vifm by\n   checking value of $PWD (thanks to Vigi).\n\nCore:\n - resolve symbolic links for mime-type matchers (thanks to Vigi);\n - do not check for view changes while suggestions are visible.  It can mess up\n   TUI, especially in combination with preview (thanks to ks1c).\n\nFile operations:\n - preserve extended attributes on copying files (thanks to hutou);\n - don't throw away errors that were ignored by the user, display them at the\n   end of operation;\n - consume input during foreground file operations.  Otherwise it remains\n   buffered and is processed after the operation is over, which might not be\n   the intent of the user;\n - reduce number of options available on file conflict when source and\n   destination are the same to avoid confusion (options that overwrite do\n   nothing in this case) (thanks to aleksejrs).\n\nFile preview:\n - do not complain about empty output of a graphics previewer for view mode;\n - clear preview before displaying suggestions (thanks to ks1c).\n\nTUI (Text User Interface):\n - renamed filename filter to \"permanent filter\" consisting of\n   \"explicit\" (ex-manual) and \"implicit\" (ex-automatic) parts (thanks to\n   Sitaram Chamarty);\n - changed file rename prompt to indicate whether full name or only its root is\n   being changed;\n - try to determine widths of printed character more accurately;\n - drop leading space implicitly added to time columns in views (thanks to\n   laggardkernel).\n\nIntegration:\n - added info= field to parser of 'mediaprg' output.  It provides custom\n   message for the media (patch by zsugabubus);\n - added udisks2 backend to vifm-media script (bundled script for managing\n   media).  Requires python and dbus module for it to be installed (because\n   udisks2 and dbus are too shitty to be used on command-line) (thanks to\n   Tykin);\n - added FUSE_MOUNT3 filetype format, which is equivalent to FUSE_MOUNT, but\n   doesn't perform unmounting.  Helpful to use something like avfs (thanks to\n   Jose Riha, a.k.a. jose1711);\n - added vifm-media-osx script that is configured to be used (via 'mediaprg')\n   on OS X (patch by Von Welch);\n - error stream from 'mediaprg' isn't considered anymore when deciding if\n   mounting/unmounting was successful.  While technically an incompatible\n   change, it's unlikely to cause any issues;\n - spawn 'mediaprg' in foreground to allow interactions with the user, like\n   providing a password (patch by zsugabubus);\n - properly remove FUSE mount points if they are symbolic links;\n - assume that any $TERM value that starts with \"xterm-\", \"rxvt-\" or \"screen-\"\n   supports terminal title (thanks to Matthias Braun, a.k.a. mb720).\n\nDocumentation:\n - better documentation for TabLine and TabLineSel highlighting groups (thanks\n   to mwgkgk);\n - clearer documentation/description for :*unmap commands and 'vicmd'/'vixcmd'\n   options (thanks to chelovechishko);\n - improve documentation of patterns and globs (thanks to afsheenb);\n - improved documentation on filters (thanks to Sitaram Chamarty);\n - document more details about expansion of FUSE macros;\n - make documentation of 'findprg' more readable.\n\nVim-plugin:\n - added :Vifm command as an alias for :EditVifm (patch by rbong);\n - added optional splitting of the embedded terminal (g:vifm_embed_split).  Has\n   support for Vim's <mods> and <count> (patch by rbong);\n - added option to synchronize working directory of the embedded instance of\n   vifm with the Vim host (g:vifm_embed_cwd) (patch by rbong);\n - added ability to replace netrw with vifm (g:vifm_replace_netrw and\n   g:vifm_replace_netrw_cmd) (patch by rbong);\n - added autodetection of *.vifm files as files with \"vifm\" filetype to the\n   plugin (patch by Anton Kochkov, a.k.a. XVilka).\n\nConfiguration:\n - added example of using xsel to sample vifmrc file (thanks to chelovechishko);\n - enabled 'vimhelp' in sample vifmrc file by default.\n\nPerformance:\n - added caching to quickview for a single file to avoid fileviewer being called\n   more often than needed (thanks to agguser);\n - try to avoid superfluous screen updates related to cursor position;\n - remember when file doesn't match any file-specific highlighting groups for\n   better performance (thanks to Gomme Bidule);\n - generate faster regular expressions by vifm-convert-dircolors (thanks to\n   Gomme Bidule).\n\nOnly on Windows:\n - upgraded to PDCurses 3.8 (was 3.4) for Windows.  This allows using 256 colors\n   inside ConEmu.  Note that ConEmu has issues processing 256 colors on the last\n   line of the screen, so avoid using them for status line (thanks to dancread).\n\nOther changes:\n - don't error on trash creation failure due to read-only file system (patch by\n   zsugabubus).\n\nImportant fixes:\n - fixed losing files on failed move operation.  Source files were deleted\n   assuming they were copied successfully, even when errors regarding some of\n   them were ignored by the user (thanks to zsugabubus);\n - fixed vifm not making use of large number of color pairs when they are\n   available (thanks to Jose Riha (a.k.a. jose1711) and Hans Petter\n   Jansson (a.k.a. hpjansson));\n - fixed color pairs being exhausted on Windows when default color ends up being\n   used often, this caused highlighting to go awry (thanks to dancread);\n - fixed textual output of graphical previewers not being displayed in view\n   mode (thanks to agguser);\n - fixed DirEnter autocommand being called with view being in a mixed state of\n   old and new location (thanks to Kendrick Taylor, a.k.a. sixcircuit).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJuly 15, 2019\n=============\n\nvifm v0.10.1 beta\n-----------------\n\nThis version provides additions and improvements for media management feature,\nseveral enhancements related to text user interface, extra features to Vim\nplugin thanks to merging in neovim-vifm plugin and various small changes.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added file preview to miller mode\n - added preview macro to directly output to terminal, which enables use of\n   Sixel graphics for previewing;\n - added udisks2 backend to vifm-media script (bundled script for managing\n   media) and version of the script for OS X;\n - updated code to make use of large amount of color pairs when available;\n - functionality of previously separate neovim-vifm plugin got merged into the\n   main plugin;\n - multiple improvements to :media menu;\n - improved performance in several use cases (quickview, lots of unhighlighted\n   files, unnecessary cursor updates and redraws).\n\nMore detailed list of changes.\n\nCommand-line mode:\n - added :cds command that navigates to path obtained by substitution in the\n   current path (thanks to j-xella);\n - added :hideui command that hides interface to show previous commands'\n   output (thanks to dikiy);\n - added one more invocation format of :colorscheme command, which picks the\n   first available color scheme that is supported by the terminal (thanks to\n   Jose Riha, a.k.a. jose1711);\n - always preserve tabs on :restart (thanks to mwgkgk);\n - refuse to compare directory against itself via :compare command (thanks to\n   Jose Riha, a.k.a. jose1711).\n\n:set command and options:\n - added fileroot view column, which displays full name of directories and\n   symbolic links to directories and only root of name for everything\n   else (thanks to chelovechishko);\n - added 'shellcmdflag' option that allows customizing how shell is invoked.\n   Enables running it in interactive mode, which can make shell aliases and\n   functions work (thanks to Ink (a.k.a. inknoir), John Shea (a.k.a. coachshea)\n   and randomizedthinking);\n - added L flag to 'shortmess' option to display only last directory in tab\n   line instead of full path (thanks to chelovechishko);\n - added ^= operation for string list options (thanks to SearyBlue);\n - added ^= operation for options of set kind;\n - added rpreview: key to 'milleroptions' option that allows enabling preview\n   of files (thanks to Svadkos and Tom Jansen);\n - added %p macro to 'findprg' option.  It works as a mix between %a and %A\n   macros: usually contains arguments passed to :find command, but unlike %a\n   doesn't include any predicates (thanks to Sitaram Chamarty and Tuan Bui,\n   a.k.a. tuanbass);\n - do not add leading comma to string list options on set opt+=item;\n - don't create trash directory on startup if 'trash' is off (patch by\n   zsugabubus).\n\nKey bindings:\n - improved <silent> to do not forcefully update screen after the mapping if no\n   screen updates were skipped.\n\nCompletion:\n - complete user name in paths after initial tilde (e.g., :cd ~r<tab> =>\n   :cd ~root).\n\nMacros:\n - added %pd macro that makes preview output directly affect terminal\n   circumventing curses interface, which could be used to display sixel\n   images (thanks to Tom Jansen).\n\nColor schemes:\n - added OtherWin highlight group for highlighting inactive pane (thanks to\n   John Fred Fadrigalan, a.k.a. cevhyruz).\n\nMenus and dialogs:\n - added indication of entry's availability to :file, :file[x]type and\n   :fileviewer menus;\n - added [ and ] bindings to :media menu that provide navigation between\n   devices (patch by zsugabubus);\n - added decorations to :media menu (patch by zsugabubus);\n - react to Enter in :media menu on device lines, mount on \"not mounted\" line\n   and do nothing otherwise (patch by zsugabubus);\n - show empty lines in :media only if there is enough vertical space (patch by\n   zsugabubus);\n - removed empty line from :file and similar menus for case when vifm was\n   configured with --disable-desktop-files flag (second time).\n\nScripting:\n - added extcached() builtin function, which can be used to improve performance\n   of file queries by caching results of external commands (thanks to Matthias\n   Braun, a.k.a. mb720).\n\nInvocation:\n - try to preserve symbolic links in current path when starting vifm by\n   checking value of $PWD (thanks to Vigi).\n\nCore:\n - resolve symbolic links for mime-type matchers (thanks to Vigi);\n - do not check for view changes while suggestions are visible.  It can mess up\n   TUI, especially in combination with preview (thanks to ks1c).\n\nFile operations:\n - preserve extended attributes on copying files (thanks to hutou);\n - don't throw away errors that were ignored by the user, display them at the\n   end of operation;\n - consume input during foreground file operations.  Otherwise it remains\n   buffered and is processed after the operation is over, which might not be\n   the intent of the user;\n - reduce number of options available on file conflict when source and\n   destination are the same to avoid confusion (options that overwrite do\n   nothing in this case) (thanks to aleksejrs).\n\nFile preview:\n - do not complain about empty output of a graphics previewer for view mode;\n - clear preview before displaying suggestions (thanks to ks1c).\n\nTUI (Text User Interface):\n - renamed filename filter to \"permanent filter\" consisting of\n   \"explicit\" (ex-manual) and \"implicit\" (ex-automatic) parts (thanks to\n   Sitaram Chamarty);\n - changed file rename prompt to indicate whether full name or only its root is\n   being changed;\n - try to determine widths of printed character more accurately;\n - drop leading space implicitly added to time columns in views (thanks to\n   laggardkernel).\n\nIntegration:\n - added info= field to parser of 'mediaprg' output.  It provides custom\n   message for the media (patch by zsugabubus);\n - added udisks2 backend to vifm-media script (bundled script for managing\n   media).  Requires python and dbus module for it to be installed (because\n   udisks2 and dbus are too shitty to be used on command-line) (thanks to\n   Tykin);\n - added FUSE_MOUNT3 filetype format, which is equivalent to FUSE_MOUNT, but\n   doesn't perform unmounting.  Helpful to use something like avfs (thanks to\n   Jose Riha, a.k.a. jose1711);\n - added vifm-media-osx script that is configured to be used (via 'mediaprg')\n   on OS X (patch by Von Welch);\n - error stream from 'mediaprg' isn't considered anymore when deciding if\n   mounting/unmounting was successful.  While technically an incompatible\n   change, it's unlikely to cause any issues;\n - spawn 'mediaprg' in foreground to allow interactions with the user, like\n   providing a password (patch by zsugabubus);\n - properly remove FUSE mount points if they are symbolic links.\n\nDocumentation:\n - better documentation for TabLine and TabLineSel highlighting groups (thanks\n   to mwgkgk);\n - clearer documentation/description for :*unmap commands and 'vicmd'/'vixcmd'\n   options (thanks to chelovechishko);\n - improve documentation of patterns and globs (thanks to afsheenb);\n - improved documentation on filters (thanks to Sitaram Chamarty);\n - document more details about expansion of FUSE macros;\n - make documentation of 'findprg' more readable.\n\nVim-plugin:\n - added :Vifm command as an alias for :EditVifm (patch by rbong);\n - added optional splitting of the embedded terminal (g:vifm_embed_split).  Has\n   support for Vim's <mods> and <count> (patch by rbong);\n - added option to synchronize working directory of the embedded instance of\n   vifm with the Vim host (g:vifm_embed_cwd) (patch by rbong);\n - added ability to replace netrw with vifm (g:vifm_replace_netrw and\n   g:vifm_replace_netrw_cmd) (patch by rbong).\n\nConfiguration:\n - added example of using xsel to sample vifmrc file (thanks to chelovechishko);\n - enabled 'vimhelp' in sample vifmrc file by default.\n\nPerformance:\n - added caching to quickview for a single file to avoid fileviewer being called\n   more often than needed (thanks to agguser);\n - try to avoid superfluous screen updates related to cursor position;\n - remember when file doesn't match any file-specific highlighting groups for\n   better performance (thanks to Gomme Bidule);\n - generate faster regular expressions by vifm-convert-dircolors (thanks to\n   Gomme Bidule).\n\nOnly on Windows:\n - upgraded to PDCurses 3.8 (was 3.4) for Windows.  This allows using 256 colors\n   inside ConEmu.  Note that ConEmu has issues processing 256 colors on the last\n   line of the screen, so avoid using them for status line (thanks to dancread).\n\nOther changes:\n - don't error on trash creation failure due to read-only file system (patch by\n   zsugabubus).\n\nImportant fixes:\n - fixed losing files on failed move operation.  Source files were deleted\n   assuming they were copied successfully, even when errors regarding some of\n   them were ignored by the user (thanks to zsugabubus);\n - fixed vifm not making use of large number of color pairs when they are\n   available (thanks to Jose Riha (a.k.a. jose1711) and Hans Petter\n   Jansson (a.k.a. hpjansson));\n - fixed color pairs being exhausted on Windows when default color ends up being\n   used often, this caused highlighting to go awry (thanks to dancread);\n - fixed textual output of graphical previewers not being displayed in view\n   mode (thanks to agguser);\n - fixed DirEnter autocommand being called with view being in a mixed state of\n   old and new location (thanks to Kendrick Taylor, a.k.a. sixcircuit).\n\nSee change log for the full list of changes and by whom they were suggested or\nimplemented.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNovember 11, 2018\n=================\n\nvifm v0.10\n----------\n\nNew version includes long awaited tabs and support for managing media.\nThe first one comes in two flavours: tabs either include layout or don't.\nThe latter relies on a helper script, whose job is to adapt existing tools to\nmake them usable by vifm.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added tabs which either operate on the level of layout or level of\n   individual panes;\n - added ability to synchronize contents of registers among multiple\n   instances;\n - added menu for managing media (relies on helper that does the managing);\n - improved cursor positioning and control over it;\n - ability to colorize status line.\n\nMore detailed list of changes.\n\nCommand-line mode:\n - added :tabc[lose] command that closes current tab unless it's the last one;\n - added :tabm[ove] command that moves tabs (thanks to filterfalse);\n - added :tabname command that updates name of the current tab;\n - added :tabnew command that creates a new tab (thanks to Cosmin Popescu,\n   a.k.a. cosminadrianpopescu);\n - added :tabn[ext] and :tabp[revious] commands, which work as gt and gT normal\n   mode shortcuts correspondingly (thanks to Cosmin Popescu, a.k.a.\n   cosminadrianpopescu);\n - added :qa[ll], :wqa[ll] and :xa[ll] commands that always try to exit vifm no\n   matter how many tabs are open;\n - added :goto command that navigates to specified file/directory (thanks to\n   mateusz28 and Dmitry Frank, a.k.a. dimonomid);\n - added :regular command that leaves custom view (thanks to gammaray);\n - :quit, :wq, :exit, :xit, ZZ and ZQ now try to close current tab before\n   closing the application;\n - make :echo and :execute report parsing errors in more detail than just\n   \"invalid expression\";\n - make :cabbrev and :cnoreabbrev always treat bar (`|`) as part of their\n   arguments, just like :*map commands do (thanks to filterfalse);\n - make :tree! toggle view in and out of tree mode (thanks to gammaray);\n - more accurate error message on handling non directories passed to :cd.\n\n:set command and options:\n - added 'tabscope' option that controls style of tabs (thanks to Cosmin\n   Popescu, a.k.a. cosminadrianpopescu);\n - added 'showtabline' option that controls visibility of tab line;\n - added 'histcursor' option that gives partial control over when cursor is\n   positioned in accordance with record of directory history (thanks to\n   filterfalse and Dmitry Frank, a.k.a. dimonomid);\n - added 'quickview' option that controls visibility of quick view (:view)\n   (thanks to Jochen Schweizer, a.k.a. durcheinandr);\n - added 'syncregs' option which defines group of instances that share registers\n   (patch by Ma_Sys.ma);\n - added 'mediaprg' option that can be used to specify helper for managing\n   removable media.  One such helper with support of udevil and udisks is\n   provided.  Only for *nix systems;\n - added support for arbitrary expressions in 'statusline': '%{...}', e.g.\n   '%{&sort}' evaluates to the value of the sort option (patch by Dmitry Frank,\n   a.k.a. dimonomid);\n - added \"M\" flag to 'shortmess' option to control shortening of titles in\n   windows of terminal multiplexers created by vifm down to file name instead of\n   using full path (thanks to mateusz28).\n\nFile operations:\n - try to preserve file owner/group on copying (thanks to willemw12).\n\nNormal and visual modes:\n - added gt and gT normal mode shortcuts that switch between tabs in both\n   directions.\n\nKey bindings:\n - added <silent> :*map argument that postpones UI updates until RHS is\n   completely processed.  Probably not all updates are postponed, to be improved\n   as unhandled cases are discovered;\n - added <wait> :*map argument, which resolves prefix conflicts of user-defined\n   mappings and builtin keys in favour of user-defined mappings (thanks to Paweł\n   Smolak, a.k.a. psmolak).\n\nAngle bracket notation:\n - added <insert> angle bracket notation (thanks to j-xella);\n - added <c-@> angle bracket notation making it possible to map Ctrl-Space key\n   (thanks to anonymous at Vifm Q2A site).\n\nFile list:\n - use historical cursor position upon startup by default when 'autochpos' is\n   on, this is now independent from \"savedirs\" in 'vifminfo' option (thanks to\n   filterfalse);\n - use historical cursor position on navigating to a mark that doesn't specify a\n   file by default when 'autochpos' is on (thanks to filterfalse);\n - move cursor after p and P to one of files that were moved or to a cause of\n   last conflict (thanks to filterfalse and ranousse);\n - issue a warning if file system lists several files with identical names in\n   the same directory.  It used to be assumed that it can't happen (thanks to\n   Jose Riha, a.k.a. jose1711).\n\nFile preview:\n - support italics in quickview/view mode and in :highlight when curses\n   implementation provides corresponding extension.  PDCurses doesn't implement\n   it on Windows.  Fallback is to use \"reversed\" attribute (thanks to GeorgeHJ).\n\nIntegration:\n - escape \"=\" at the beginning of paths (has special meaning in zsh) (thanks to\n   agguser).\n\nMenus and dialogs:\n - added :media menu that can list and perform basic operations on removable\n   media (requires helper to be available, see 'mediaprg').  Only for *nix\n   systems (thanks to Bruce Hunsaker, a.k.a. hunsakerbn and others);\n - added r key to :undolist menu, which resets position in the undo list to\n   group under the cursor (thanks to mini-turtle);\n - sort entries of :bmarks menu (thanks to anonymous at Vifm Q2A site);\n - slightly better formatting in :undolist menu;\n - do not reset selection before executing a :command from :commands menu\n   (thanks to Jose Riha, a.k.a. jose1711);\n - less strict parsing of output of external command by :[un]select commands.\n   Similar to %u/%U and menus allow <file>[:[<line>:[<col>:]] <description>]\n   format (thanks to j-xella).\n\nColor schemes:\n - added TabLine highlight group for highlighting tab line;\n - added TabLineSel highlight group for highlighting tip of the selected tab on\n   the tab line;\n - added User1..User9 highlight groups and corresponding %[0-9]* 'statusline'\n   macro, which makes it possible to colorize parts of status line differently\n   (thanks to GeorgeHJ).\n\nTUI (Text User Interface):\n - display list of files in removal confirmation dialog (thanks to ovk).\n\nScripting:\n - added tabpagenr() function that retrieves number of current or last tab page\n   (thanks to filterfalse);\n - added fnameescape() builtin function, which can be used to escape paths on\n   construction of :commands (thanks to filterfalse);\n - added second optional parameter to filetype() builtin function that is\n   treated as a boolean and specifies whether symbolic links should be resolved;\n - added addition and subtraction operations to the parser;\n - added grouping via parentheses to expressions (thanks to Konst Mayer, a.k.a.\n   cdlscpmv);\n - allow passing numerical positions to filetype() function.\n\nDocumentation:\n - more explicit documentation about leaving custom views (thanks to tagwint).\n\nVim-plugin:\n - support embedded terminal in the plugin for newer Vim.\n\nOnly on Windows:\n - fixed flickering on Windows (thanks to Alexandre Viau and\n   randomizedthinking);\n - fixed graphical applications on Windows not being detected as such, which\n   caused vifm to wait until they finish running.  Was broken since 0.9 (thanks\n   to r0ck).\n\nImportant fixes:\n - fixed error messages from put operation being postponed until the next put\n   operation.  Got broken in 0.9;\n - fixed confirmation not being requested on :delete (thanks to anonymous at\n   Vifm Q2A site).\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 28, 2018\n================\n\nvifm v0.10 beta\n---------------\n\nNew version includes long awaited tabs and support for managing media.\nThe first one comes in two flavours: tabs either include layout or don't.\nThe latter relies on a helper script, whose job is to adapt existing tools to\nmake them usable by vifm.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added tabs which either operate on the level of layout or level of\n   individual panes;\n - added ability to synchronize contents of registers among multiple\n   instances;\n - added menu for managing media (relies on helper that does the managing);\n - improved cursor positioning and control over it;\n - ability to colorize status line.\n\nMore detailed list of changes.\n\nCommand-line mode:\n - added :tabc[lose] command that closes current tab unless it's the last one;\n - added :tabm[ove] command that moves tabs (thanks to filterfalse);\n - added :tabname command that updates name of the current tab;\n - added :tabnew command that creates a new tab (thanks to Cosmin Popescu,\n   a.k.a. cosminadrianpopescu);\n - added :tabn[ext] and :tabp[revious] commands, which work as gt and gT normal\n   mode shortcuts correspondingly (thanks to Cosmin Popescu, a.k.a.\n   cosminadrianpopescu);\n - added :qa[ll], :wqa[ll] and :xa[ll] commands that always try to exit vifm no\n   matter how many tabs are open;\n - added :goto command that navigates to specified file/directory (thanks to\n   mateusz28 and Dmitry Frank, a.k.a. dimonomid);\n - added :regular command that leaves custom view (thanks to gammaray);\n - :quit, :wq, :exit, :xit, ZZ and ZQ now try to close current tab before\n   closing the application;\n - make :echo and :execute report parsing errors in more detail than just\n   \"invalid expression\";\n - make :cabbrev and :cnoreabbrev always treat bar (`|`) as part of their\n   arguments, just like :*map commands do (thanks to filterfalse);\n - make :tree! toggle view in and out of tree mode (thanks to gammaray);\n - more accurate error message on handling non directories passed to :cd.\n\n:set command and options:\n - added 'tabscope' option that controls style of tabs (thanks to Cosmin\n   Popescu, a.k.a. cosminadrianpopescu);\n - added 'showtabline' option that controls visibility of tab line;\n - added 'histcursor' option that gives partial control over when cursor is\n   positioned in accordance with record of directory history (thanks to\n   filterfalse and Dmitry Frank, a.k.a. dimonomid);\n - added 'quickview' option that controls visibility of quick view (:view)\n   (thanks to Jochen Schweizer, a.k.a. durcheinandr);\n - added 'syncregs' option which defines group of instances that share registers\n   (patch by Ma_Sys.ma);\n - added 'mediaprg' option that can be used to specify helper for managing\n   removable media.  One such helper with support of udevil and udisks is\n   provided.  Only for *nix systems;\n - added support for arbitrary expressions in 'statusline': '%{...}', e.g.\n   '%{&sort}' evaluates to the value of the sort option (patch by Dmitry Frank,\n   a.k.a. dimonomid);\n - added \"M\" flag to 'shortmess' option to control shortening of titles in\n   windows of terminal multiplexers created by vifm down to file name instead of\n   using full path (thanks to mateusz28).\n\nFile operations:\n - try to preserve file owner/group on copying (thanks to willemw12).\n\nNormal and visual modes:\n - added gt and gT normal mode shortcuts that switch between tabs in both\n   directions.\n\nKey bindings:\n - added <silent> :*map argument that postpones UI updates until RHS is\n   completely processed.  Probably not all updates are postponed, to be improved\n   as unhandled cases are discovered;\n - added <wait> :*map argument, which resolves prefix conflicts of user-defined\n   mappings and builtin keys in favour of user-defined mappings (thanks to Paweł\n   Smolak, a.k.a. psmolak).\n\nAngle bracket notation:\n - added <insert> angle bracket notation (thanks to j-xella);\n - added <c-@> angle bracket notation making it possible to map Ctrl-Space key\n   (thanks to anonymous at Vifm Q2A site).\n\nFile list:\n - use historical cursor position upon startup by default when 'autochpos' is\n   on, this is now independent from \"savedirs\" in 'vifminfo' option (thanks to\n   filterfalse);\n - use historical cursor position on navigating to a mark that doesn't specify a\n   file by default when 'autochpos' is on (thanks to filterfalse);\n - move cursor after p and P to one of files that were moved or to a cause of\n   last conflict (thanks to filterfalse and ranousse);\n - issue a warning if file system lists several files with identical names in\n   the same directory.  It used to be assumed that it can't happen (thanks to\n   Jose Riha, a.k.a. jose1711).\n\nFile preview:\n - support italics in quickview/view mode and in :highlight when curses\n   implementation provides corresponding extension.  PDCurses doesn't implement\n   it on Windows.  Fallback is to use \"reversed\" attribute (thanks to GeorgeHJ).\n\nIntegration:\n - escape \"=\" at the beginning of paths (has special meaning in zsh) (thanks to\n   agguser).\n\nMenus and dialogs:\n - added :media menu that can list and perform basic operations on removable\n   media (requires helper to be available, see 'mediaprg').  Only for *nix\n   systems (thanks to Bruce Hunsaker, a.k.a. hunsakerbn and others);\n - added r key to :undolist menu, which resets position in the undo list to\n   group under the cursor (thanks to mini-turtle);\n - sort entries of :bmarks menu (thanks to anonymous at Vifm Q2A site);\n - slightly better formatting in :undolist menu;\n - do not reset selection before executing a :command from :commands menu\n   (thanks to Jose Riha, a.k.a. jose1711);\n - less strict parsing of output of external command by :[un]select commands.\n   Similar to %u/%U and menus allow <file>[:[<line>:[<col>:]] <description>]\n   format (thanks to j-xella).\n\nColor schemes:\n - added TabLine highlight group for highlighting tab line;\n - added TabLineSel highlight group for highlighting tip of the selected tab on\n   the tab line;\n - added User1..User9 highlight groups and corresponding %[0-9]* 'statusline'\n   macro, which makes it possible to colorize parts of status line differently\n   (thanks to GeorgeHJ).\n\nScripting:\n - added tabpagenr() function that retrieves number of current or last tab page\n   (thanks to filterfalse);\n - added fnameescape() builtin function, which can be used to escape paths on\n   construction of :commands (thanks to filterfalse);\n - added second optional parameter to filetype() builtin function that is\n   treated as a boolean and specifies whether symbolic links should be resolved;\n - added addition and subtraction operations to the parser;\n - added grouping via parentheses to expressions (thanks to Konst Mayer, a.k.a.\n   cdlscpmv);\n - allow passing numerical positions to filetype() function.\n\nDocumentation:\n - more explicit documentation about leaving custom views (thanks to tagwint).\n\nOnly on Windows:\n - fixed flickering on Windows (thanks to Alexandre Viau and\n   randomizedthinking);\n - fixed graphical applications on Windows not being detected as such, which\n   caused vifm to wait until they finish running.  Was broken since 0.9 (thanks\n   to r0ck).\n\nImportant fixes:\n - fixed error messages from put operation being postponed until the next put\n   operation.  Got broken in 0.9;\n - fixed confirmation not being requested on :delete (thanks to anonymous at\n   Vifm Q2A site).\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFebruary 05, 2018\n=================\n\nvifm v0.9.1\n-----------\n\nThis version adds to the list of ways for viewing files by introducing\nmiller columns view and transposed ls-like view (table view).  Other\ndevelopments are related to integration between builtin features as well as\nwith external applications.\n\nThanks to everyone who tried out the beta.\n\nMain changes:\n - introduced file view mode known as miller columns or cascading lists;\n - added ability to transpose ls-like view to make it fill by columns;\n - more natural behaviour of movement keys in ls-like view;\n - new `--remote-expr` command-line option can be used to query state of\n   running instances;\n - extended retry/ignore/abort query to all file operations;\n - more control over highlight groups via `:highlight` suitable for\n   interactive changes;\n - mostly eliminated the need for repeating ga/gA commands through automatic\n   size recalculation.\n\nMore detailed list of changes.\n\nFile operations:\n - added retry/ignore/abort prompt for file copying and directory/file/symlink\n   creation when 'syscalls' is on (thanks to einhander);\n - better detection of write errors on file copying.  The error was reported,\n   but it wasn't treated as a hard error in a specific case related to caching.\n\nCommand-line mode:\n - added :histnext/:histprev commands, which are analogous to Ctrl-I/Ctrl-O\n   (patch by Dmitry Frank, a.k.a. dimonomid);\n - added ability to remove filename-specific highlighting rules with\n   `:highlight clear {pattern}` (thanks to aleksejrs);\n - changed :filter command to accept pattern (//, ////, {} or {{}}) (thanks to\n   rbong);\n - made :siblnext and :siblprev commands respect dot and name filters;\n - made :siblnext and :siblprev accept [count] range (thanks to filterfalse);\n - made :tree pick up list of files from custom view (thanks to filterfalse);\n - made :highlight update file-specific group on exact match of the pattern\n   instead of appending new rule (thanks to aleksejrs);\n - remove empty directories which are specified in 'trashdir' with %r and/or %u\n   automatically on :empty (thanks to Marcin Kurczewski, a.k.a. rr-).\n\n:set command and options:\n - added \"inode\" sorting key, which sorts entries by inode number (thanks to\n   eco0414);\n - added 'millerview' option that enables cascading columns interface for the\n   view (thanks to sudo-nice);\n - added 'milleroptions' option that configures miller view;\n - added 'lsoptions' option that allows to get transposed grid in ls-like view\n   (thanks to Dmitry Frank, a.k.a. dimonomid);\n - added 'previewprg' option, which can be used to override :fileviewer commands\n   either temporarily or permanently (thanks to svenn71);\n - added {root} key to 'viewcolumns' option (complements {ext}) (thanks to Oleg\n   Gordienko, a.k.a. gordio);\n - added \"u\" flag to the 'tuioptions' option.  It enables use of Unicode\n   characters in the TUI (Unicode ellipsis instead of \"...\") (thanks to Oleg\n   Gordienko, a.k.a. gordio);\n - added \"foldsubkeys\" value to the 'suggestoptions' option.  It folds multiple\n   suggestions with common prefix into one entry (thanks to AndreaHasani).\n\nNormal and visual modes:\n - added [r/]r/[R/]R normal mode shortcuts that map to :siblprev and :siblnext\n   with and without wrapping correspondingly (thanks to filterfalse);\n - do not go to start of line on Ctrl-U/Ctrl-D/Ctrl-F/Ctrl-B/G in ls-like view;\n - H/M/L keys in ls-like view now account for columns;\n - instead of invalidating directory size previously calculated via ga/gA on\n   detecting changes in the directory recalculate its size and propagate update\n   through its parents (thanks to filterfalse).\n\nMacros:\n - added %x macro to 'rulerformat' (and thus to 'statusline') as a new name for\n   %-, which conflicts with alignment specification and requires explicit width\n   specifier (%0-) (thanks to Marcos Cruz).\n\nScripting:\n - added term() builtin function, which differs from system() only by its\n   ability to run interactive applications without confusing vifm's interactions\n   with the terminal (thanks to Dmitry Frank, a.k.a. dimonomid);\n - added v:count and v:count1 builtin variables.  They are assigned to count\n   passed to : command;\n - don't trigger DirEnter event with previous directory on startup when list of\n   files is specified on stdin (thanks to filterfalse).\n\nInvocation:\n - added `--remote-expr` command-line option, which gives ability to query state\n   of an instance (thanks to Marcin Kurczewski, a.k.a. rr-).\n\nCompletion:\n - added completion of filename-specific highlight groups for :highlight\n   command.\n\nColor schemes:\n - added AuxWin highlight group for highlighting auxiliary parts of windows.\n\nTUI (Text User Interface):\n - extend width of the cursor in ls-like view to the width of the cell (thanks\n   to Dmitry Frank, a.k.a. dimonomid);\n - indicate preview created with %q with \"Command: cmd\";\n - duplicate status bar error in dialog that reports sourcing error.  Will need\n   to get rid of errors on status bar later.\n\nPerformance:\n - improved performance of mime-type detection when using libmagic (now might be\n   about seven times faster by avoiding reinitialization of the library);\n - don't force file list reload after `:!` and rely on change detection.  This\n   should result in somewhat better performance (thanks to opennota).\n\nDocumentation:\n - documented more details about 'vicmd' and 'vixcmd' options (thanks to\n   Sebastian Cyprych).\n\nVim-plugin:\n - disabled spell checking of vifm files in Vim except for comments.\n\nOnly on Windows:\n - fixed running commands with arguments on Windows when 'shell' isn't cmd.exe.\n\nImportant fixes:\n - fixed consuming 100% of CPU on certain pattern of running background\n   processes (thanks to petRUShka);\n - fixed turning quickview into explore view when preview command doesn't\n   contain macros.  Was broken since 0.8;\n - fixed the plugin in neovim (patch by John Shea, a.k.a. coachshea);\n - fixed cloning of files like `.name` to produce `.name(1)` instead of\n   `(1).name` (thanks to filterfalse);\n - fixed directory size in status line (patch by Dmitry Frank, a.k.a. dimonomid);\n - fixed CWD of the process not matching current view after vifm picked up\n   change in file system (patch by Daniel Mueller);\n - fixed :normal command resetting selection (thanks to filterfalse);\n - fixed stopping of put operation after copying symbolic link that's broken on\n   destination (thanks to filterfalse);\n - fixed a \"race\" with file system when we could load outdated file list and\n   thus miss some file system updates.\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJanuary 22, 2018\n================\n\nvifm v0.9.1 beta\n----------------\n\nThis version adds to the list of ways for viewing files by introducing\nmiller columns view and transposed ls-like view (table view).  Other\ndevelopments are related to integration between builtin features as well as\nwith external applications.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - introduced file view mode known as miller columns or cascading lists;\n - added ability to transpose ls-like view to make it fill by columns;\n - more natural behaviour of movement keys in ls-like view;\n - new `--remote-expr` command-line option can be used to query state of\n   running instances;\n - extended retry/ignore/abort query to all file operations;\n - more control over highlight groups via `:highlight` suitable for\n   interactive changes;\n - mostly eliminated the need for repeating ga/gA commands through automatic\n   size recalculation.\n\nMore detailed list of changes.\n\nFile operations:\n - added retry/ignore/abort prompt for file copying and directory/file/symlink\n   creation when 'syscalls' is on (thanks to einhander);\n - better detection of write errors on file copying.  The error was reported,\n   but it wasn't treated as a hard error in a specific case related to caching.\n\nCommand-line mode:\n - added :histnext/:histprev commands, which are analogous to Ctrl-I/Ctrl-O\n   (patch by Dmitry Frank, a.k.a. dimonomid);\n - added ability to remove filename-specific highlighting rules with\n   `:highlight clear {pattern}` (thanks to aleksejrs);\n - changed :filter command to accept pattern (//, ////, {} or {{}}) (thanks to\n   rbong);\n - made :siblnext and :siblprev commands respect dot and name filters;\n - made :siblnext and :siblprev accept [count] range (thanks to filterfalse);\n - made :tree pick up list of files from custom view (thanks to filterfalse);\n - made :highlight update file-specific group on exact match of the pattern\n   instead of appending new rule (thanks to aleksejrs);\n - remove empty directories which are specified in 'trashdir' with %r and/or %u\n   automatically on :empty (thanks to Marcin Kurczewski, a.k.a. rr-).\n\n:set command and options:\n - added \"inode\" sorting key, which sorts entries by inode number (thanks to\n   eco0414);\n - added 'millerview' option that enables cascading columns interface for the\n   view (thanks to sudo-nice);\n - added 'milleroptions' option that configures miller view;\n - added 'lsoptions' option that allows to get transposed grid in ls-like view\n   (thanks to Dmitry Frank, a.k.a. dimonomid);\n - added 'previewprg' option, which can be used to override :fileviewer commands\n   either temporarily or permanently (thanks to svenn71);\n - added {root} key to 'viewcolumns' option (complements {ext}) (thanks to Oleg\n   Gordienko, a.k.a. gordio);\n - added \"u\" flag to the 'tuioptions' option.  It enables use of Unicode\n   characters in the TUI (Unicode ellipsis instead of \"...\") (thanks to Oleg\n   Gordienko, a.k.a. gordio);\n - added \"foldsubkeys\" value to the 'suggestoptions' option.  It folds multiple\n   suggestions with common prefix into one entry (thanks to AndreaHasani).\n\nNormal and visual modes:\n - added [r/]r/[R/]R normal mode shortcuts that map to :siblprev and :siblnext\n   with and without wrapping correspondingly (thanks to filterfalse);\n - do not go to start of line on Ctrl-U/Ctrl-D/Ctrl-F/Ctrl-B/G in ls-like view;\n - H/M/L keys in ls-like view now account for columns;\n - instead of invalidating directory size previously calculated via ga/gA on\n   detecting changes in the directory recalculate its size and propagate update\n   through its parents (thanks to filterfalse).\n\nMacros:\n - added %x macro to 'rulerformat' (and thus to 'statusline') as a new name for\n   %-, which conflicts with alignment specification and requires explicit width\n   specifier (%0-) (thanks to Marcos Cruz).\n\nScripting:\n - added term() builtin function, which differs from system() only by its\n   ability to run interactive applications without confusing vifm's interactions\n   with the terminal (thanks to Dmitry Frank, a.k.a. dimonomid);\n - added v:count and v:count1 builtin variables.  They are assigned to count\n   passed to : command;\n - don't trigger DirEnter event with previous directory on startup when list of\n   files is specified on stdin (thanks to filterfalse).\n\nInvocation:\n - added `--remote-expr` command-line option, which gives ability to query state\n   of an instance (thanks to Marcin Kurczewski, a.k.a. rr-).\n\nCompletion:\n - added completion of filename-specific highlight groups for :highlight\n   command.\n\nColor schemes:\n - added AuxWin highlight group for highlighting auxiliary parts of windows.\n\nTUI (Text User Interface):\n - extend width of the cursor in ls-like view to the width of the cell (thanks\n   to Dmitry Frank, a.k.a. dimonomid);\n - indicate preview created with %q with \"Command: cmd\";\n - duplicate status bar error in dialog that reports sourcing error.  Will need\n   to get rid of errors on status bar later.\n\nPerformance:\n - improved performance of mime-type detection when using libmagic (now might be\n   about seven times faster by avoiding reinitialization of the library);\n - don't force file list reload after `:!` and rely on change detection.  This\n   should result in somewhat better performance (thanks to opennota).\n\nDocumentation:\n - documented more details about 'vicmd' and 'vixcmd' options (thanks to\n   Sebastian Cyprych).\n\nVim-plugin:\n - disabled spell checking of vifm files in Vim except for comments.\n\nOnly on Windows:\n - fixed running commands with arguments on Windows when 'shell' isn't cmd.exe.\n\nImportant fixes:\n - fixed consuming 100% of CPU on certain pattern of running background\n   processes (thanks to petRUShka);\n - fixed turning quickview into explore view when preview command doesn't\n   contain macros.  Was broken since 0.8;\n - fixed the plugin in neovim (patch by John Shea, a.k.a. coachshea);\n - fixed cloning of files like `.name` to produce `.name(1)` instead of\n   `(1).name` (thanks to filterfalse);\n - fixed directory size in status line (patch by Dmitry Frank, a.k.a. dimonomid);\n - fixed CWD of the process not matching current view after vifm picked up\n   change in file system (patch by Daniel Mueller);\n - fixed :normal command resetting selection (thanks to filterfalse);\n - fixed stopping of put operation after copying symbolic link that's broken on\n   destination (thanks to filterfalse);\n - fixed a \"race\" with file system when we could load outdated file list and\n   thus miss some file system updates.\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 18, 2017\n=============\n\nvifm v0.9\n---------\n\nNew version brings two new ways of viewing and processing file lists, namely\ntree-view and directory-comparison.  As usual, previously existing facilities\nwere extended and improved to become more useful.\n\nThanks to everyone who tried out the beta, especially filterfalse.\n\nMain changes:\n - introduced tree-like representation of files;\n - added directory comparison facilities;\n - added ability to restore last navigation menu;\n - background operations and programs can now be cancelled;\n - dismissed error output of external programs can now be queried;\n - added shell completion for bash and zsh;\n - now it's possible to configure mappings in dialogs.\n\nMore detailed list of changes.\n\nPackaging:\n - Removed -Werror in tests from non-developer builds.\n\nCommand-line mode:\n - added :tree command that converts current view into a tree (thanks to\n   filterfalse and Kornel);\n - added :dmap, :dnoremap and :dunmap commands to configure mappings in dialogs\n   (thanks to Sassan Haradji, a.k.a. sassanh);\n - added \"tree\" parameter to :sync! that enables synchronization of tree view\n   (thanks to filterfalse);\n - added :compare command to perform comparison in one or two directory trees\n   (thanks to anonymous on SourceForge discussion forum and aleksejrs);\n - added :copen command to restore last menu that supports navigation (thanks to\n   Sassan Haradji, a.k.a. sassanh);\n - added :screen! form that enables terminal multiplexers support (instead of\n   toggling it as :screen does) (thanks to Marcos Cruz);\n - added :siblnext and :siblprev commands.  They change directory to next or\n   previous sibling directories of current path (in global sorting order of\n   current pane) (thanks to sudo-nice);\n - made :put, :touch and :mkdir accept [line] range, which can be used to\n   specify target position in tree-view (thanks to filterfalse);\n - accept paths in :touch, not just file names (thanks to filterfalse);\n - disallow applying :chmod on \"..\" entry;\n - disallow selecting \"..\" entry with :select command;\n - expand macros in `:[un]select !{command}` (thanks to Michael Corvin).\n\n\nMacros:\n - added %Iu and %IU macros, which are %u and %U equivalents, but work better if\n   external command is interactive and changes terminal state;\n - added %q macro that redirects command output into quick view (thanks to\n   svenn71).\n\n:set command and options:\n - added 'dotfiles' (local) option, which exposes dot files filter as an option\n   (thanks to filterfalse);\n - added 'caseoptions' option that enables more fine-grained control over case\n   sensitivity (thanks to Alexandru Geana, a.k.a. alegen);\n - added 'sizefmt' option that configures formatting of human-friendly size\n   (thanks to sudo-nice);\n - added %f 'statusline' macro that inserts relative path of the entry, which\n   might be useful for non-regular views (thanks to filterfalse);\n - added %D 'statusline' macro that displays path of the other pane in\n   single-pane layout (thanks to sudo-nice);\n - added %T 'statusline' macro that displays symbolic link target (thanks to\n   sudo-nice);\n - added %a 'statusline' macro that displays amount of free space available at\n   current partition (thanks to sudo-nice);\n - consider trailing slash for directories or symbolic links that point to\n   directories in 'classify' patterns by file name (e.g., this works now:\n   `[::*/::]`);\n - better handling of setting 'fillchars' to incorrect or excessive value.\n\nNormal and visual modes:\n - added [d and ]d shortcuts to navigate to previous/next directory entry\n   (thanks to filterfalse);\n - added [s and ]s shortcuts to navigate to previous/next selected entry\n   (thanks to filterfalse);\n - added [z and ]z shortcuts to navigate to first/last sibling in a tree\n   (thanks to filterfalse);\n - added zj and zk shortcuts to navigate to next/previous directory sibling in a\n   tree (thanks to filterfalse);\n - added [c and ]c shortcuts to navigate to previous/next mismatch in directory\n   comparison view (thanks to filterfalse);\n - added do and dp keys to compare views for applying changes in files (thanks\n   to filterfalse).\n\nMenus and dialogs:\n - added dd key to :jobs menu, which requests cancellation of background\n   operation.  Background :put, :copy, :move, :delete, size calculation with ga\n   and gA as well as applications started in background can be cancelled this\n   way (thanks to blurm);\n - added e key to :jobs menu that displays list of errors issues by that jobs,\n   if any.  h key goes back to :jobs menu;\n - added % key to menu mode, which navigates to [count]-th percent of the list;\n - added meaning to [count] of cp shortcut, which is now processed as numerical\n   argument for non-recursive `chmod` command (thanks to sudo-nice);\n - partially return progress report for menus.  Was disabled by introduction of\n   null byte heuristic.\n\nFile operations:\n - enable restoring files from trash from custom views;\n - disallow moving/copying/linking files into custom view (put is forbidden, so\n   makes sense to forbid these too);\n - try harder to move files by not giving up on getting permission error, which\n   isn't always a reliable indication of actual permission error.  Only when\n   'syscalls' is on (thanks to Marcin Kurczewski, a.k.a. rr-).\n\nFile preview:\n - view current directory on \"..\" for quickview/view mode if no viewer matches\n   such entry (thanks to filterfalse);\n - enable cancellation of tree preview construction (thanks to filterfalse);\n - do not resolve symbolic links in directory preview (thanks to filterfalse).\n\nSecurity:\n - make temporary rename files accessible only by the user (thanks to\n   aleksejrs).\n\nPerformance:\n - improve performance of startup and exit by omitting file existence checks.\n   The cost is possibly old files staying in the state, but it should be for\n   long time (thanks to Marcin Kurczewski, a.k.a. rr-);\n - improved sorting performance in the presence of huge amount of symbolic links\n   (thanks to Marcin Kurczewski, a.k.a. rr-).\n\nInvocation:\n - don't disable preview on `--remote --select` if it doesn't hide updated pane\n   (thanks to Marcin Kurczewski, a.k.a. rr-);\n - make +{num} and similar options work (actually affect cursor of the view)\n   (thanks to filterfalse);\n - treat \"+\" option the same way as Vim (like :$) (thanks to filterfalse).\n\nScripting:\n - added v:servername variable, which provides access to server name of the\n   running instance used by --remote feature (thanks to Marcin Kurczewski,\n   a.k.a. rr-);\n - getpanetype() got new value (\"tree\") to indicate tree-view (thanks to\n   filterfalse).\n\nTUI (Text User Interface):\n - limited maximum height of message popup, just print how many lines we're\n   skipping;\n - put hardware cursor according to current mode and cursor within it (thanks to\n   Tyler Spivey);\n - display path to the conflicting file in conflict resolution dialog;\n - provide better messages on i/o errors with 'syscalls' (thanks to Behrooz).\n\nFile filtering:\n - don't move cursor off \"../\" before start of local filtering (thanks to\n   filterfalse);\n - prevent clearing filters on zM if there were no zO preceding it (thanks to\n   sudo-nice).\n\nColor schemes:\n - added CmpMismatch highlight group for highlighting mismatched files on\n   side-by-side comparison.\n\nIntegration:\n - added completion scripts for bash and zsh (patches by filterfalse);\n - escape first tilde in paths that go to the shell (thanks to Marius Schmidl);\n - resolve symbolic link for listing associated programs from desktop-files\n   (thanks to filterfalse).\n\nVim-plugin:\n - work around :drop command being disabled in the plugin (thanks to Phil\n   Runninger);\n - fixed inconsistent behaviour of :EditVifm in plugin with regard to\n   \"[No Name]\" buffer (thanks to Phil Runninger);\n - fixed plugin in versions of Vim where :argadd without argument doesn't work\n   (thanks to eco0414).\n\nOnly on Windows:\n - use <exe file location>/data/colors as global storage of color schemes on\n   Windows (thanks to r44083);\n - handle terminal resize on Windows 10 (thanks to randomizedthinking);\n - properly recover from invalid/strange UNC root on Windows.  Don't end up with\n   empty filelist;\n - fixed use of non-latin characters in environment variables and command-line\n   options (thanks to khaoos-abominable).\n\nImportant fixes:\n - fixed redirecting stdout of background commands to /dev/null, which could be\n   unwritable descriptor (thanks to c02y);\n - fixed possible data loss on moving/copying files over their own parent or\n   child directories via p, P, :move, :copy, :alink and :rlink (thanks to Marius\n   Schmidl);\n - fixed detection of too-small-terminal state;\n - fixed treating characters like š and ć (with low Unicode values, just above\n   0x100) as functional keys on input (thanks to granderil).\n\nOther changes:\n - changed size formatting to round from zero (matches behaviour of e.g. `ls`);\n - read error output of background commands independently of main thread\n   (prevents blocking of tools which produce huge amount of output) (thanks to\n   Stas Malavin);\n - no vifminfo merging if file change isn't detected.  Might result in faster\n   quitting in some cases.  Not accounting for some changes is still possible\n   when multiple instances quit simultaneously, but same could happen without\n   this change;\n - made search consider trailing slash for directories and symbolic links that\n   point to directories (thanks to filterfalse);\n - don't use :filextype in sample vifmrc for OS X, we can't tell whether\n   graphical system is running (thanks to piotryordanov).\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 04, 2017\n=============\n\nvifm v0.9 beta\n--------------\n\nNew version brings two new ways of viewing and processing file lists, namely\ntree-view and directory-comparison.  As usual, previously existing facilities\nwere extended and improved to become more useful.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - introduced tree-like representation of files;\n - added directory comparison facilities;\n - added ability to restore last navigation menu;\n - background operations and programs can now be cancelled;\n - dismissed error output of external programs can now be queried;\n - added shell completion for bash and zsh;\n - now it's possible to configure mappings in dialogs.\n\nMore detailed list of changes.\n\nPackaging:\n - Removed -Werror in tests from non-developer builds.\n\nCommand-line mode:\n - added :tree command that converts current view into a tree (thanks to\n   filterfalse and Kornel);\n - added :dmap, :dnoremap and :dunmap commands to configure mappings in dialogs\n   (thanks to Sassan Haradji, a.k.a. sassanh);\n - added \"tree\" parameter to :sync! that enables synchronization of tree view\n   (thanks to filterfalse);\n - added :compare command to perform comparison in one or two directory trees\n   (thanks to anonymous on SourceForge discussion forum and aleksejrs);\n - added :copen command to restore last menu that supports navigation (thanks to\n   Sassan Haradji, a.k.a. sassanh);\n - added :screen! form that enables terminal multiplexers support (instead of\n   toggling it as :screen does) (thanks to Marcos Cruz);\n - added :siblnext and :siblprev commands.  They change directory to next or\n   previous sibling directories of current path (in global sorting order of\n   current pane) (thanks to sudo-nice);\n - made :put, :touch and :mkdir accept [line] range, which can be used to\n   specify target position in tree-view (thanks to filterfalse);\n - accept paths in :touch, not just file names (thanks to filterfalse);\n - disallow applying :chmod on \"..\" entry;\n - disallow selecting \"..\" entry with :select command.\n\nMacros:\n - added %Iu and %IU macros, which are %u and %U equivalents, but work better if\n   external command is interactive and changes terminal state;\n - added %q macro that redirects command output into quick view (thanks to\n   svenn71).\n\n:set command and options:\n - added 'dotfiles' (local) option, which exposes dot files filter as an option\n   (thanks to filterfalse);\n - added 'caseoptions' option that enables more fine-grained control over case\n   sensitivity (thanks to Alexandru Geana, a.k.a. alegen);\n - added 'sizefmt' option that configures formatting of human-friendly size\n   (thanks to sudo-nice);\n - added %f 'statusline' macro that inserts relative path of the entry, which\n   might be useful for non-regular views (thanks to filterfalse);\n - added %D 'statusline' macro that displays path of the other pane in\n   single-pane layout (thanks to sudo-nice);\n - added %T 'statusline' macro that displays symbolic link target (thanks to\n   sudo-nice);\n - added %a 'statusline' macro that displays amount of free space available at\n   current partition (thanks to sudo-nice);\n - consider trailing slash for directories or symbolic links that point to\n   directories in 'classify' patterns by file name (e.g., this works now:\n   `[::*/::]`);\n - better handling of setting 'fillchars' to incorrect or excessive value.\n\nNormal and visual modes:\n - added [d and ]d shortcuts to navigate to previous/next directory entry\n   (thanks to filterfalse);\n - added [s and ]s shortcuts to navigate to previous/next selected entry\n   (thanks to filterfalse);\n - added [z and ]z shortcuts to navigate to first/last sibling in a tree\n   (thanks to filterfalse);\n - added zj and zk shortcuts to navigate to next/previous directory sibling in a\n   tree (thanks to filterfalse);\n - added [c and ]c shortcuts to navigate to previous/next mismatch in directory\n   comparison view (thanks to filterfalse);\n - added do and dp keys to compare views for applying changes in files (thanks\n   to filterfalse).\n\nMenus and dialogs:\n - added dd key to :jobs menu, which requests cancellation of background\n   operation.  Background :put, :copy, :move, :delete, size calculation with ga\n   and gA as well as applications started in background can be cancelled this\n   way (thanks to blurm);\n - added e key to :jobs menu that displays list of errors issues by that jobs,\n   if any.  h key goes back to :jobs menu;\n - added % key to menu mode, which navigates to [count]-th percent of the list;\n - added meaning to [count] of cp shortcut, which is now processed as numerical\n   argument for non-recursive `chmod` command (thanks to sudo-nice);\n - partially return progress report for menus.  Was disabled by introduction of\n   null byte heuristic.\n\nFile operations:\n - enable restoring files from trash from custom views;\n - disallow moving/copying/linking files into custom view (put is forbidden, so\n   makes sense to forbid these too);\n - try harder to move files by not giving up on getting permission error, which\n   isn't always a reliable indication of actual permission error.  Only when\n   'syscalls' is on (thanks to Marcin Kurczewski, a.k.a. rr-).\n\nFile preview:\n - view current directory on \"..\" for quickview/view mode (thanks to\n   filterfalse);\n - enable cancellation of tree preview construction (thanks to filterfalse);\n - do not resolve symbolic links in directory preview (thanks to filterfalse).\n\nSecurity:\n - make temporary rename files accessible only by the user (thanks to\n   aleksejrs).\n\nPerformance:\n - improve performance of startup and exit by omitting file existence checks.\n   The cost is possibly old files staying in the state, but it should be for\n   long time (thanks to Marcin Kurczewski, a.k.a. rr-);\n - improved sorting performance in the presence of huge amount of symbolic links\n   (thanks to Marcin Kurczewski, a.k.a. rr-).\n\nInvocation:\n - don't disable preview on `--remote --select` if it doesn't hide updated pane\n   (thanks to Marcin Kurczewski, a.k.a. rr-);\n - make +{num} and similar options work (actually affect cursor of the view)\n   (thanks to filterfalse);\n - treat \"+\" option the same way as Vim (like :$) (thanks to filterfalse).\n\nScripting:\n - added v:servername variable, which provides access to server name of the\n   running instance used by --remote feature (thanks to Marcin Kurczewski,\n   a.k.a. rr-);\n - getpanetype() got new value (\"tree\") to indicate tree-view (thanks to\n   filterfalse).\n\nTUI (Text User Interface):\n - limited maximum height of message popup, just print how many lines we're\n   skipping;\n - put hardware cursor according to current mode and cursor within it (thanks to\n   Tyler Spivey);\n - display path to the conflicting file in conflict resolution dialog;\n - provide better messages on i/o errors with 'syscalls' (thanks to Behrooz).\n\nFile filtering:\n - don't move cursor off \"../\" before start of local filtering (thanks to\n   filterfalse);\n - prevent clearing filters on zM if there were no zO preceding it (thanks to\n   sudo-nice).\n\nColor schemes:\n - added CmpMismatch highlight group for highlighting mismatched files on\n   side-by-side comparison.\n\nIntegration:\n - added completion scripts for bash and zsh (patches by filterfalse);\n - escape first tilde in paths that go to the shell (thanks to Marius Schmidl);\n - resolve symbolic link for listing associated programs from desktop-files\n   (thanks to filterfalse).\n\nVim-plugin:\n - work around :drop command being disabled in the plugin (thanks to Phil\n   Runninger);\n - fixed inconsistent behaviour of :EditVifm in plugin with regard to\n   \"[No Name]\" buffer (thanks to Phil Runninger);\n - fixed plugin in versions of Vim where :argadd without argument doesn't work\n   (thanks to eco0414).\n\nOnly on Windows:\n - use <exe file location>/data/colors as global storage of color schemes on\n   Windows (thanks to r44083);\n - handle terminal resize on Windows 10 (thanks to randomizedthinking);\n - properly recover from invalid/strange UNC root on Windows.  Don't end up with\n   empty filelist;\n - fixed use of non-latin characters in environment variables and command-line\n   options (thanks to khaoos-abominable).\n\nImportant fixes:\n - fixed redirecting stdout of background commands to /dev/null, which could be\n   unwritable descriptor (thanks to c02y);\n - fixed possible data loss on moving/copying files over their own parent or\n   child directories via p, P, :move, :copy, :alink and :rlink (thanks to Marius\n   Schmidl);\n - fixed detection of too-small-terminal state;\n - fixed treating characters like š and ć (with low Unicode values, just above\n   0x100) as functional keys on input (thanks to granderil).\n\nOther changes:\n - changed size formatting to round from zero (matches behaviour of e.g. `ls`);\n - read error output of background commands independently of main thread\n   (prevents blocking of tools which produce huge amount of output) (thanks to\n   Stas Malavin);\n - no vifminfo merging if file change isn't detected.  Might result in faster\n   quitting in some cases.  Not accounting for some changes is still possible\n   when multiple instances quit simultaneously, but same could happen without\n   this change;\n - made search consider trailing slash for directories and symbolic links that\n   point to directories (thanks to filterfalse).\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJuly 16, 2016\n=============\n\nvifm v0.8.2\n-----------\n\nThis release brings a bit of user-friendliness in form of key suggestions and\nvarious descriptions provided in the interface.  Matching of files has been\nextended in many ways and become significantly more powerful than before.\nMenu mode also got several enhancements.\n\nThanks to everyone who found time to try the beta.\n\nMain changes:\n - key suggestions in the interface on ambiguous input (e.g. \"g\");\n - helpful shortcuts for dialogs (for sort dialog in particular);\n - key descriptions in :map menus and %z macro for 'statusline' to display some\n   tips;\n - description of all :commands, 'options' and their values for new multiline\n   version of wildmenu;\n - ANDing, ORing and negating patterns for matching files and new mime-type\n   matcher;\n - file prefixes and suffixes can now be multi-byte, which with extended\n   'classify' option allows specifying \"icons\" via custom fonts;\n - search result highlighting, enabled completion and a way to export the list\n   for menus;\n - an indication of pattern correctness and match state for interactive prompts.\n - :select and :unselect commands to perform automatic file selection (possibly\n   by using output of external application);\n - cancellation (handling of Ctrl-C) for quick view and view mode loading.\n\nNot sure if it was noticed, but HTTPS protocol is up for related sites since\nLet's Encrypt started their beta.  Everything works fine, so all the links were\nupdated to https protocol.\n\nIf you ever wondered which keys are builtin for the command (normal) mode of\nVifm, this cheatsheet will show you: https://next.vifm.info/cheatsheets.shtml\n\nIn case you're into using neovim, you might be interesting into checking out\nalternative Vifm plugin for it: https://github.com/vifm/neovim-vifm\n\nMore detailed list of changes.\n\nCore:\n - added heuristic that uses null byte as separator for file lists if there is\n   at least one such byte, otherwise normal line separators are used.  This\n   affects :[un]select, `vifm -`, %u, %U, %m and %M (thanks to filterfalse);\n - changed order of initialization to perform autocommands before startup\n   commands on launch.\n\nNormal and visual modes:\n - changed ga/gA effect on parent entry (..) to calculate size of current\n   directory (thanks to aleksejrs).\n\n:set command and options:\n - added 'wildstyle' option to control the way wild menu is displayed.  Enables\n   displaying it as a menu with one item per line (thanks to santhoshr and\n   octos);\n - added 'suggestoptions' option to control displaying of suggestions;\n - added support of patterns to 'classify' option, so that files can now be\n   decorated based on their names (thanks to elricbk);\n - added 'cvoptions' option to control when entering/leaving custom views is\n   considered to be equal to entering/leaving directories (thanks to\n   filterfalse);\n - added \"target\" sorting key, which sorts files by symbolic link targets\n   (thanks to Marcos Cruz);\n - added %z 'statusline' macro that inserts text of a short tip picked at random\n   (thanks to qinghao, a.k.a. haobug);\n - changed type of 'confirm' option.  Now it's a set that picks which operations\n   should be confirmed (thanks to Losiara and mvucBmM0);\n - allow suffixes and prefixes in 'classify' to be of up to eight characters in\n   length (thanks to elricbk).\n\nCommand-line mode:\n - added \"filelist\" parameter to :sync! that enables synchronization of custom\n   view (thanks to filterfalse);\n - added :select and :unselect commands (thanks to filterfalse, Russell Urquhart\n   and Marcos Cruz);\n - added negation to patterns with explicitly specified type (surrounded by {}\n   or //).  Put exclamation mark to invert pattern match (thanks to Marcos\n   Cruz);\n - added mime type patterns ([!]<list-of-globs>) (thanks to Ross Hadden, a.k.a.\n   rosshadden);\n - added pattern ANDing.  Just list decorated patterns one after another and\n   such composite pattern will much when each of them matches (thanks to\n   filterfalse);\n - added pattern ORing for :file[x]type and :fileviewer commands implemented as\n   a comma-separated list (thanks to filterfalse);\n - expand environment variables for :edit (thanks to filterfalse);\n - don't print just table header on `:cabbr something`, print message that no\n   matches found instead;\n - use original (before custom view) cursor position on :sync! in custom views\n   (thanks to filterfalse).\n\nFile preview:\n - added cancellation (handling of Ctrl-C) for quick view and view mode loading\n   (thanks to kalterfive);\n - skip UTF-8 BOM for file preview.\n\nFile list:\n - never add parent entry (..) to very custom view (%U) (thanks to filterfalse);\n - silently ignore tries to remove parent entry (..) (thanks to aleksejrs);\n - automatically update custom view entries on rename of their parent directory\n   in the same custom view.\n\nCompletion:\n - added completion of :wincmd argument;\n - do not reset completion on terminal resize;\n - some corrections of when completion happens for :find and :grep.\n\nScripting:\n - added chooseopt() builtin function that retrieves various parameters of file\n   choosing (thanks to Von Welch).\n\nMenus and dialogs:\n - added highlighting of search matches in menus;\n - added :noh[lsearch] command to menu mode;\n - added quick shortcuts to dialogs (patch by oo-);\n - added description of builtin keys to :map menus;\n - added :write command to menus, that writes all menu lines into specified file\n   (thanks to gtors);\n - a bit better delete confirmation messages with number of files to be deleted;\n - avoid displaying useless search messages about incorrect pattern during\n   interactive search in menus (those that user can't see, but that are shown in\n   :messages);\n - enabled wildmenu for menus.\n\nTUI (Text User Interface):\n - added indication of wrong pattern and absence of matches to command-prompt\n   for interactive search/filtering.\n\nAngle bracket notation:\n - display <c-h> as <bs> only at the beginning of key sequence.\n\nColor schemes:\n - added SuggestBox highlight group for key suggestion box.\n\nVim-plugin:\n - added support for matchit to filetype plugin (patch by filterfalse);\n - better terminal buffer title for plugin in neovim (thanks to\n   randomizedthinking);\n - improved syntax highlighting of patterns.\n\nOnly on Windows:\n - fixed escaping for cmd.exe again, for :edit and external command invocations\n   (thanks to Reva Revadigar);\n - fixed querying file information on 64-bit Windows (thanks to santhoshr);\n - fixed possible crash on displaying job bar (e.g. after :empty) (thanks to\n   Reva Revadigar);\n - fixed UTF8 <-> UTF16 conversion, which didn't always work (on surrogate\n   characters it seems) (thanks to Reva Revadigar);\n - fixed possible unexpectedly long timeouts when waiting for a key (due to\n   limitation of pdcurses);\n - fixed displaying of wide (CJK) characters in pdcurses (thanks to Reva\n   Revadigar);\n - fixed capturing output of external applications when 'shell' is \"cmd\".  Was\n   broken since v0.8 in an attempt to make cmd work better with Unicode (but its\n   /U flag affects only input and output streams).\n\nPackaging:\n - fixed functioning on architectures on which `char` is unsigned by default\n   (thanks to Ondrej Novy, a.k.a. onovy).\n\nImportant fixes:\n - fixed hanging on sudden terminal loss (regression) (thanks to aleksejrs);\n - fixed using original file names after a prompt for new destination name\n   (thanks to rbong);\n - fixed unconditional resetting of executable permission when using cp dialog\n   (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - fixed remote feature on cygwin (thanks to Cosmin Popescu, a.k.a.\n   cosminadrianpopescu);\n - fixed epic bug in processing selectors followed by other commands in a\n   mapping.  Command which accepted selector was called after tail of sequence\n   is processed.  Such case isn't very likely, so it probably didn't affect\n   anyone.\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJuly 02, 2016\n=============\n\nvifm v0.8.2 beta testing has started\n------------------------------------\n\nThis release brings a bit of user-friendliness in form of key suggestions and\nvarious descriptions provided in the interface.  Matching of files has been\nextended in many ways and become significantly more powerful than before.\nMenu mode also got several enhancements.\n\nMain changes:\n - key suggestions in the interface on ambiguous input (e.g. \"g\");\n - helpful shortcuts for dialogs (for sort dialog in particular);\n - key descriptions in :map menus and %z macro for 'statusline' to display some\n   tips;\n - description of all :commands, 'options' and their values for new multiline\n   version of wildmenu;\n - ANDing, ORing and negating patterns for matching files and new mime-type\n   matcher;\n - file prefixes and suffixes can now be multi-byte, which with extended\n   'classify' option allows specifying \"icons\" via custom fonts;\n - search result highlighting, enabled completion and a way to export the list\n   for menus;\n - an indication of pattern correctness and match state for interactive prompts.\n - :select and :unselect commands to perform automatic file selection (possibly\n   by using output of external application);\n - cancellation (handling of Ctrl-C) for quick view and view mode loading.\n\nNot sure if it was noticed, but HTTPS protocol is up for related sites since\nLet's Encrypt started their beta.  Everything works fine, so all the links were\nupdated to https protocol.\n\nIf you ever wondered which keys are builtin for the command (normal) mode of\nVifm, this cheatsheet will show you: https://next.vifm.info/cheatsheets.shtml\n\nIn case you're into using neovim, you might be interesting into checking out\nalternative Vifm plugin for it: https://github.com/vifm/neovim-vifm\n\nMore detailed list of changes.\n\nCore:\n - added heuristic that uses null byte as separator for file lists if there is\n   at least one such byte, otherwise normal line separators are used.  This\n   affects :[un]select, `vifm -`, %u, %U, %m and %M (thanks to filterfalse);\n - changed order of initialization to perform autocommands before startup\n   commands on launch.\n\nNormal and visual modes:\n - changed ga/gA effect on parent entry (..) to calculate size of current\n   directory (thanks to aleksejrs).\n\n:set command and options:\n - added 'wildstyle' option to control the way wild menu is displayed.  Enables\n   displaying it as a menu with one item per line (thanks to santhoshr and\n   octos);\n - added 'suggestoptions' option to control displaying of suggestions;\n - added support of patterns to 'classify' option, so that files can now be\n   decorated based on their names (thanks to elricbk);\n - added 'cvoptions' option to control when entering/leaving custom views is\n   considered to be equal to entering/leaving directories (thanks to\n   filterfalse);\n - added \"target\" sorting key, which sorts files by symbolic link targets\n   (thanks to Marcos Cruz);\n - added %z 'statusline' macro that inserts text of a short tip picked at random\n   (thanks to qinghao, a.k.a. haobug);\n - changed type of 'confirm' option.  Now it's a set that picks which operations\n   should be confirmed (thanks to Losiara and mvucBmM0);\n - allow suffixes and prefixes in 'classify' to be of up to eight characters in\n   length (thanks to elricbk).\n\nCommand-line mode:\n - added \"filelist\" parameter to :sync! that enables synchronization of custom\n   view (thanks to filterfalse);\n - added :select and :unselect commands (thanks to filterfalse, Russell Urquhart\n   and Marcos Cruz);\n - added negation to patterns with explicitly specified type (surrounded by {}\n   or //).  Put exclamation mark to invert pattern match (thanks to Marcos\n   Cruz);\n - added mime type patterns ([!]<list-of-globs>) (thanks to Ross Hadden, a.k.a.\n   rosshadden);\n - added pattern ANDing.  Just list decorated patterns one after another and\n   such composite pattern will much when each of them matches (thanks to\n   filterfalse);\n - added pattern ORing for :file[x]type and :fileviewer commands implemented as\n   a comma-separated list (thanks to filterfalse);\n - expand environment variables for :edit (thanks to filterfalse);\n - don't print just table header on `:cabbr something`, print message that no\n   matches found instead;\n - use original (before custom view) cursor position on :sync! in custom views\n   (thanks to filterfalse).\n\nFile preview:\n - added cancellation (handling of Ctrl-C) for quick view and view mode loading\n   (thanks to kalterfive);\n - skip UTF-8 BOM for file preview.\n\nFile list:\n - never add parent entry (..) to very custom view (%U) (thanks to filterfalse);\n - silently ignore tries to remove parent entry (..) (thanks to aleksejrs);\n - automatically update custom view entries on rename of their parent directory\n   in the same custom view.\n\nCompletion:\n - added completion of :wincmd argument;\n - do not reset completion on terminal resize;\n - some corrections of when completion happens for :find and :grep.\n\nScripting:\n - added chooseopt() builtin function that retrieves various parameters of file\n   choosing (thanks to Von Welch).\n\nMenus and dialogs:\n - added highlighting of search matches in menus;\n - added :noh[lsearch] command to menu mode;\n - added quick shortcuts to dialogs (patch by oo-);\n - added description of builtin keys to :map menus;\n - added :write command to menus, that writes all menu lines into specified file\n   (thanks to gtors);\n - a bit better delete confirmation messages with number of files to be deleted;\n - avoid displaying useless search messages about incorrect pattern during\n   interactive search in menus (those that user can't see, but that are shown in\n   :messages);\n - enabled wildmenu for menus.\n\nTUI (Text User Interface):\n - added indication of wrong pattern and absence of matches to command-prompt\n   for interactive search/filtering.\n\nAngle bracket notation:\n - display <c-h> as <bs> only at the beginning of key sequence.\n\nColor schemes:\n - added SuggestBox highlight group for key suggestion box.\n\nVim-plugin:\n - better terminal buffer title for plugin in neovim (thanks to\n   randomizedthinking);\n - improved syntax highlighting of patterns.\n\nOnly on Windows:\n - fixed escaping for cmd.exe again, for :edit and external command invocations\n   (thanks to Reva Revadigar);\n - fixed querying file information on 64-bit Windows (thanks to santhoshr);\n - fixed possible crash on displaying job bar (e.g. after :empty) (thanks to\n   Reva Revadigar);\n - fixed UTF8 <-> UTF16 conversion, which didn't always work (on surrogate\n   characters it seems) (thanks to Reva Revadigar);\n - fixed possible unexpectedly long timeouts when waiting for a key (due to\n   limitation of pdcurses);\n - fixed displaying of wide (CJK) characters in pdcurses (thanks to Reva\n   Revadigar);\n - fixed capturing output of external applications when 'shell' is \"cmd\".  Was\n   broken since v0.8 in an attempt to make cmd work better with Unicode (but its\n   /U flag affects only input and output streams).\n\nPackaging:\n - fixed functioning on architectures on which `char` is unsigned by default\n   (thanks to Ondrej Novy, a.k.a. onovy).\n\nImportant fixes:\n - fixed hanging on sudden terminal loss (regression) (thanks to aleksejrs);\n - fixed using original file names after a prompt for new destination name\n   (thanks to rbong);\n - fixed unconditional resetting of executable permission when using cp dialog\n   (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - fixed remote feature on cygwin (thanks to Cosmin Popescu, a.k.a.\n   cosminadrianpopescu);\n - fixed epic bug in processing selectors followed by other commands in a\n   mapping.  Command which accepted selector was called after tail of sequence\n   is processed.  Such case isn't very likely, so it probably didn't affect\n   anyone.\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFebruary 10, 2016\n=================\n\nvifm v0.8.1a\n------------\n\nThis is a bugfix release to primarily address messed up single-executable\nbuilds for Windows.  Tab completion doesn't work there and can cause crashes.\nAlso 64-bit build somehow contains 32-bit executables.  Thanks to Reva Revadigar\nfor reporting the issue.\n\nOn the bright side, this gives a chance for fixing bugs discovered after the\nrelease.\n\nThere was also time to add some functional changes, which also made it into this\nrelease:\n - added c key to menus that inserts parts of menu line into command-line\n   (thanks to filterfalse);\n - added { and } keys to normal and visual modes.  They act similar to ( and),\n   but always consider whether entry is a file or directory (thanks to octos);\n - added --disable-build-timestamp option to configure script to perform\n   reproducible build (thanks to Hendrik Jaeger, a.k.a. henk);\n - apply local filter on picking element of `:history filter` menu;\n - handle register specified for gs normal mode command.  Select files listed\n   in that register (thanks to filterfalse);\n - be consistent with regard to when local state is changed and do not reset\n   neither local options nor local filter on entering/leaving custom view\n   (thanks to filterfalse);\n - disallow adding duplicated filetype/fileviewer entries (just ignore them\n   as they wouldn't be used due to order priority anyway).\n\nOther notable fixes:\n - fixed storing filetypes in vifminfo, which could create duplicates (thanks to\n   aleksejrs);\n - fixed --with-dyn-x11 configuration option, which failed to enable dynamic\n   use of the library (thanks to Badalisc and Hendrik Jaeger, a.k.a. henk);\n - fixed using plugin in neovim, which has broken `system()` and :! commands\n   (thanks to Artur Shaik, a.k.a. artur-shaik).\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJanuary 17, 2016\n================\n\nvifm v0.8.1\n-----------\n\nNew minor version delivers primarily various small improvements of different\nkinds.  There is also improvement of navigation via named bookmarks (or tags),\nwhich can ease keeping track of what is where, and an ability to apply\nsettings to specific directories or sub-trees (via combination of autocommands\nand local options).\n\nThanks to everyone who was reporting issues during beta period.\n\nMain changes:\n - added local options, which work until directory change;\n - added named bookmarks (paths are associated with tags);\n - added autocommands (with DirEnter event);\n - added ability to sort by regexp-extracted part of file name;\n - added builtin directory preview (similar to `tree`);\n - added a way to communicate menu contents to Vim quickfix;\n - added \"more\" mode that is used to handle status bar content that doesn't fit\n   on the screen;\n - IPC got new (safe) implementation with listing/targeting of active instances,\n   it's enabled by default again;\n - updating local view settings from vifmrc now affects both panes (:windo is\n   not necessary);\n - more predictive cursor updates on directory reload;\n - improvements related to expression and command parsing.\n\nMore detailed list of changes.\n\nCommand-line mode:\n - added :setl[ocal] and :setg[lobal] commands to manage values of local options\n   that are specific to current directory and are reset on directory change,\n   similar to local options of Vim;\n - added :pu[t] command that inserts files into current directory (thanks to\n   mvucBmM0);\n - added :winc[md] command-line command (thanks to fogine);\n - added exclamation mark to :shell to suppress spawning new teminal multiplexer\n   pane (patch by Cosmin Popescu, a.k.a. cosminadrianpopescu).\n\n:set command and options:\n - added :set foo+=bar syntax for string options (append value);\n - added 'deleteprg' option, which specifies program to run on files that are\n   permanently removed;\n - added 'dirsize' option to control how size of directories is displayed in\n   file views.  This enables one to see number of files in a directory rather\n   than its size (thanks to Martin Fischer);\n - added optional %u and %U macros to 'findprg', 'grepprg', and 'locateprg' that\n   allow immediate redirection of command output into custom view without\n   opening a menu (thanks to filterfalse);\n - added 'iooptions' option to configure file system operations.  Contains only\n   \"fastfilecloning\" for btrfs so far (thanks to aleksejrs);\n - added special treatment for \"*\" as value of 'slowfs', which might be useful\n   in case of very slow handling of requests to mounts enumeration (patch by\n   Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - added handling of \"%u\" in trash specification on *nix, which is replaced with\n   real user ID (thanks to Regis);\n - allow 'shell' to specify a shell argument on *nix (thanks to loongw);\n - added 'sortgroups' option and \"groups\" sorting key, which allow sorting by\n   parts of file names (thanks to aleksejrs);\n - added 'title' option to control whether title of terminal should be set.\n   Enabled by default if old title can be restored (thanks to Svyatoslav Mishyn,\n   a.k.a. juef);\n - make \"p\" in 'tuioptions' affect padding in quick view and view mode;\n - changed 'fusehome' default from temporary directory to data directory (that\n   is $XDG_DATA_HOME/.local/share/fuse/ or $VIFM/fuse/ depending on which parent\n   directory exists, the second one exists by definition, but first might not)\n   (thanks to aleksejrs and to Hendrik Jaeger, a.k.a. henk);\n - changed default value of 'trashdir' on *nix again, this time to\n   \"%r/.vifm-Trash-%u,$VIFM/Trash,%r/.vifm-Trash\".  This way it's safer for\n   privacy, although using %r is not very safe in general (thanks to Regis).\n\nConfiguration:\n - make :set, :filter and :normal zo (and alike) in vifmrc affect all views,\n   thus obsoleting use of :winrun or :windo for this purpose (they still work,\n   the new way is a simpler and more obvious one).  This is related to commands\n   executed during vifmrc processing (not those in the right-hand side of\n   mappings, commands, etc.);\n - automatically create ~/.vifm/scripts containing small README file if the\n   directory doesn't exist on startup (thanks to fogine).\n\nCore:\n - added autocommands (DirEnter event and :au[tocmd] command) (thanks to\n   filterfalse).\n\nFile operations:\n - added retry/ignore/abort prompt for file/directory removal when 'syscalls'\n   is on (thanks to Robert Sarkozi);\n - make use of file cloning feature of btrfs when possible and enabled in\n   'iooptions' (thanks to aleksejrs);\n - preserve file timestamps on copying files with 'syscalls' on (thanks to\n   mvucBmM0);\n - employ inotify on GNU/Linux for more precise watching directories for\n   changes;\n - copy timestamps and permissions on merging directories (thanks to willemw12).\n\nNavigation:\n - added named bookmarks (paths are associated with tags).  This adds :bmark,\n   :bmarks, :bmgo and :delbmarks command-line commands.  Also there is new\n   \"bmarks\" value for 'vifminfo' (thanks to Schmalzhaf Stefan).\n\nNormal and visual modes:\n - accept [count] for \"h\" and \"gh\";\n - added zr normal mode key to reset local filter (thanks to filterfalse);\n - ctrl-W | and Ctrl-W _ now can set window size to given count (thanks to\n   filterfalse).\n\nKey bindings:\n - remapping of builtin keys that are followed by selectors (e.g.\n   `:nnoremap d y`) (thanks to mvucBmM0).\n\nColor schemes:\n - changed default colorscheme to invert colors of the current line.\n\nDocumentation:\n - documented %= for 'statusline' and 'rulerformat';\n - make --select option more prominent in documentation (thanks to Svyatoslav\n   Mishyn, a.k.a. juef);\n - documented difference between paths in menu with and without trailing slash\n   (thanks to filterfalse).\n\nMacros:\n - added %pc macro that splits preview command in two pices: preview command and\n   clear command (thanks to Tomek K., a.k.a. TomiCode).\n\nMenus and dialogs:\n - added B key to menus, which acts like b, but creates unsorted (very custom)\n   view (thanks to filterfalse);\n - added \"v\" key to menu mode that loads current contents into quickfix list of\n   editor (Vim compatible one is assumed) (thanks to filterfalse);\n - added handling of dd in :trashes, :trashes? and :lstrashes, which either\n   deletes an item in trash or empties trash (thanks to Svyatoslav Mishyn,\n   a.k.a. juef);\n - somewhat more informative error titles on issues during file operations;\n - provide conflict resolution options in a dialog rather than on the\n   command-line, which is hard to read with so many options;\n - expand \"~\" in menus on navigation.\n\nPackaging:\n - removed vifmrc-converter.  It's been around for four years and not needed any\n   more (thanks to filterfalse);\n - removed contents of autoconf.sh, autoreconf covers what was there (there is a\n   notice in that script now about it just in case) (thanks to Hendrik Jaeger,\n   a.k.a. henk);\n - added --with-sanitize=basic|thread|leak option to configure script;\n - added missing script that's necessary for %s macro in GNU screen.  Was lost\n   for a long time;\n - work around compilation on systems where MAX_ARG_STRLEN is defined, but\n   unusable (thanks to Marcin Juszkiewicz, a.k.a. hrw, Michel Normand and\n   Michael Vetter, a.k.a. jubalh);\n - put right-hand side of user-defined commands into separate scope of\n   if-else-endif expressions.  This prevents affecting of regular input by\n   malformed user-defined command.\n\nScripting:\n - added :elseif command (thanks to filterfalse);\n - added &option syntax for :let command;\n - added && and || operators to expression parser (thanks to filterfalse);\n - added getpanetype() builtin function that retrieves type of current pane\n   (thanks to filterfalse);\n - added layoutis() builtin function that answers queries about current\n   interface configuration (thanks to fogine);\n - added paneisat() builtin function that answers queries about current pane\n   position (thanks to fogine);\n - added inline comments to allow less verbose commenting in configuration;\n - rewrote expression parser to prevent side-effects from occurring until syntax\n   is checked.\n\nTUI (Text User Interface):\n - added match numbers to search messages on status bar (patch by Cosmin\n   Popescu, a.k.a. cosminadrianpopescu);\n - added dynamic view column alignment (specified by \"*\", just like \"-\" for left\n   alignment) (patch by Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - added \"more\" mode that is used to handle status bar content that doesn't fit\n   on the screen (thanks to Bruce Hunsaker, a.k.a. hunsakerbn, and Svyatoslav\n   Mishyn, a.k.a. juef);\n - added builtin directory preview (thanks to Damian Ariel Perticone and\n   Alexandre Viau);\n - added \"fileext\" sorting key, which sorts files by extensions and directories\n   by name (patch by Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - added \"nitems\" sorting, which sorts by number of items in a directory (thanks\n   to filterfalse);\n - added \"nlinks\" sorting key to display number of hard links to a file on *nix\n   systems (thanks to filterfalse);\n - normalize surrounding spaces in menu and dialog titles;\n - lower minimum supported terminal width and height from 30x10 to 20x5;\n - update cursor position on file disappearing in more predictable way.  Use the\n   closes file to the previously active one that still exists (thanks to\n   ranousse);\n - display lower bound on item count in status bar progress messages (e.g. on\n   :grep).\n\nImportant fixes:\n - assume UTF-8 sequences can be broken (thanks to Svyatoslav Mishyn, a.k.a.\n   juef);\n - made setting title inside terminal multiplexers (when terminal type is\n   \"screen*\") work;\n - check file system sensitivity on OS X (thanks to loongw);\n - fixed startup on Windows 10 (thanks to th1rdey3 and Robert Sarkozi);\n - fixed swapped absolute/relative link creation on :alink/:rlink commands\n   (patch by MadMaverick9);\n - multiple fixes for custom views (thanks to filterfalse);\n - more careful treating of files with colons in their names for menus and\n   custom views (thanks to aleksejrs);\n - fixed ranges for :yank, 0.8 regression (thanks to Marius Schmidl);\n - fixed crash on copy-like operations that move several files into subdirectory\n   of another view (thanks to Marius Schmidl);\n - fixed creation of intermediate directories on merging directories (thanks to\n   willemw12).\n\nVim-plugin:\n - added set of :*Vim commands to vifm run from Vim plugin, which overrule\n   initial :*Vifm command behaviour (thanks to Ross Hadden, a.k.a. rosshadden);\n - changed plugin to do not depend on location of vifm.  g:vifm_home is ignored\n   from now on (thanks to aleksejrs).\n\nOnly on Windows:\n - display directory size on Windows more correctly;\n - improvements in running commands with special characters and/or spaces\n   (thanks to Stas Malavin).\n\nOther changes:\n - added handling of \"-\" command-line argument specified in place of directory\n   path as instruction to read list of files from stdin;\n - added --server-list and --server-name command-line options that enumerates\n   names of currently running vifm servers and sets name of target/this instance\n   respectively;\n - added optional argument for --logging parameter that specifies path to\n   startup log (thanks to Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - invalidate directory size (calculated via ga/gA) if noticed that directory\n   was changed.  This affects all parent directories as well, way easier to see\n   what needs recalculation after file moving/removal;\n - warn about --remote command being disabled at build-time (thanks to\n   Svyatoslav Mishyn, a.k.a. juef);\n - do not finish argument parsing after finding --help or --version, continue\n   and validate the rest of command-line (thanks to Svyatoslav Mishyn, a.k.a.\n   juef);\n - display incomplete file name on rename instead of failing with error on\n   Unicode conversion issues.\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJanuary 02, 2016\n================\n\nvifm v0.8.1 beta testing has started\n------------------------------------\n\nNew minor version delivers primarily various small improvements of different\nkinds.  There is also improvement of navigation via named bookmarks (or tags),\nwhich can ease keeping track of what is where, and an ability to apply\nsettings to specific directories or sub-trees (via combination of autocommands\nand local options).\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added local options, which work until directory change;\n - added named bookmarks (paths are associated with tags);\n - added autocommands (with DirEnter event);\n - added ability to sort by regexp-extracted part of file name;\n - added builtin directory preview (similar to `tree`);\n - added a way to communicate menu contents to Vim quickfix;\n - IPC got new (safe) implementation with listing/targeting of active instances,\n   it's enabled by default again;\n - updating local view settings from vifmrc now affects both panes (:windo is\n   not necessary);\n - more predictive cursor updates on directory reload;\n - improvements related to expression and command parsing.\n\nMore detailed list of changes.\n\nCommand-line mode:\n - added :setl[ocal] and :setg[lobal] commands to manage values of local options\n   that are specific to current directory and are reset on directory change,\n   similar to local options of Vim;\n - added :pu[t] command that inserts files into current directory (thanks to\n   mvucBmM0);\n - added :winc[md] command-line command (thanks to fogine);\n - added exclamation mark to :shell to suppress spawning new teminal multiplexer\n   pane (patch by Cosmin Popescu, a.k.a. cosminadrianpopescu).\n\n:set command and options:\n - added :set foo+=bar syntax for string options (append value);\n - added 'deleteprg' option, which specifies program to run on files that are\n   permanently removed;\n - added 'dirsize' option to control how size of directories is displayed in\n   file views.  This enables one to see number of files in a directory rather\n   than its size (thanks to Martin Fischer);\n - added optional %u and %U macros to 'findprg', 'grepprg', and 'locateprg' that\n   allow immediate redirection of command output into custom view without\n   opening a menu (thanks to filterfalse);\n - added 'iooptions' option to configure file system operations.  Contains only\n   \"fastfilecloning\" for btrfs so far (thanks to aleksejrs);\n - added special treatment for \"*\" as value of 'slowfs', which might be useful\n   in case of very slow handling of requests to mounts enumeration (patch by\n   Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - added handling of \"%u\" in trash specification on *nix, which is replaced with\n   real user ID (thanks to Regis);\n - allow 'shell' to specify a shell argument on *nix (thanks to loongw);\n - added 'sortgroups' option and \"groups\" sorting key, which allow sorting by\n   parts of file names (thanks to aleksejrs);\n - make \"p\" in 'tuioptions' affect padding in quick view and view mode;\n - changed 'fusehome' default from temporary directory to data directory (that\n   is $XDG_DATA_HOME/.local/share/fuse/ or $VIFM/fuse/ depending on which parent\n   directory exists, the second one exists by definition, but first might not)\n   (thanks to aleksejrs and to Hendrik Jaeger, a.k.a. henk);\n - changed default value of 'trashdir' on *nix again, this time to\n   \"%r/.vifm-Trash-%u,$VIFM/Trash,%r/.vifm-Trash\".  This way it's safer for\n   privacy, although using %r is not very safe in general (thanks to Regis).\n\nConfiguration:\n - make :set, :filter and :normal zo (and alike) in vifmrc affect all views,\n   thus obsoleting use of :winrun or :windo for this purpose (they still work,\n   the new way is a simpler and more obvious one).  This is related to commands\n   executed during vifmrc processing (not those in the right-hand side of\n   mappings, commands, etc.);\n - automatically create ~/.vifm/scripts containing small README file if the\n   directory doesn't exist on startup (thanks to fogine).\n\nCore:\n - added autocommands (DirEnter event and :au[tocmd] command) (thanks to\n   filterfalse).\n\nFile operations:\n - added retry/ignore/abort prompt for file/directory removal when 'syscalls'\n   is on (thanks to Robert Sarkozi);\n - make use of file cloning feature of btrfs when possible and enabled in\n   'iooptions' (thanks to aleksejrs);\n - preserve file timestamps on copying files with 'syscalls' on (thanks to\n   mvucBmM0);\n - employ inotify on GNU/Linux for more precise watching directories for\n   changes.\n\nNavigation:\n - added named bookmarks (paths are associated with tags).  This adds :bmark,\n   :bmarks, :bmgo and :delbmarks command-line commands.  Also there is new\n   \"bmarks\" value for 'vifminfo' (thanks to Schmalzhaf Stefan).\n\nNormal and visual modes:\n - accept [count] for \"h\" and \"gh\";\n - added zr normal mode key to reset local filter (thanks to filterfalse);\n - ctrl-W | and Ctrl-W _ now can set window size to given count (thanks to\n   filterfalse).\n\nKey bindings:\n - remapping of builtin keys that are followed by selectors (e.g.\n   `:nnoremap d y`) (thanks to mvucBmM0).\n\nColor schemes:\n - changed default colorscheme to invert colors of the current line.\n\nDocumentation:\n - documented %= for 'statusline' and 'rulerformat';\n - make --select option more prominent in documentation (thanks to Svyatoslav\n   Mishyn, a.k.a. juef);\n - documented difference between paths in menu with and without trailing slash\n   (thanks to filterfalse).\n\nMacros:\n - added %pc macro that splits preview command in two pices: preview command and\n   clear command (thanks to Tomek K., a.k.a. TomiCode).\n\nMenus and dialogs:\n - added B key to menus, which acts like b, but creates unsorted (very custom)\n   view (thanks to filterfalse);\n - added \"v\" key to menu mode that loads current contents into quickfix list of\n   editor (Vim compatible one is assumed) (thanks to filterfalse);\n - added handling of dd in :trashes, :trashes? and :lstrashes, which either\n   deletes an item in trash or empties trash (thanks to Svyatoslav Mishyn,\n   a.k.a. juef);\n - somewhat more informative error titles on issues during file operations;\n - provide conflict resolution options in a dialog rather than on the\n   command-line, which is hard to read with so many options;\n - expand \"~\" in menus on navigation.\n\nPackaging:\n - removed vifmrc-converter.  It's been around for four years and not needed any\n   more (thanks to filterfalse);\n - removed contents of autoconf.sh, autoreconf covers what was there (there is a\n   notice in that script now about it just in case) (thanks to Hendrik Jaeger,\n   a.k.a. henk);\n - added --with-sanitize=basic|thread|leak option to configure script;\n - added missing script that's necessary for %s macro in GNU screen.  Was lost\n   for a long time;\n - work around compilation on systems where MAX_ARG_STRLEN is defined, but\n   unusable (thanks to Marcin Juszkiewicz, a.k.a. hrw, Michel Normand and\n   Michael Vetter, a.k.a. jubalh);\n - put right-hand side of user-defined commands into separate scope of\n   if-else-endif expressions.  This prevents affecting of regular input by\n   malformed user-defined command.\n\nScripting:\n - added :elseif command (thanks to filterfalse);\n - added &option syntax for :let command;\n - added && and || operators to expression parser (thanks to filterfalse);\n - added getpanetype() builtin function that retrieves type of current pane\n   (thanks to filterfalse);\n - added layoutis() builtin function that answers queries about current\n   interface configuration (thanks to fogine);\n - added paneisat() builtin function that answers queries about current pane\n   position (thanks to fogine);\n - added inline comments to allow less verbose commenting in configuration;\n - rewrote expression parser to prevent side-effects from occurring until syntax\n   is checked.\n\nTUI (Text User Interface):\n - added match numbers to search messages on status bar (patch by Cosmin\n   Popescu, a.k.a. cosminadrianpopescu);\n - added dynamic view column alignment (specified by \"*\", just like \"-\" for left\n   alignment) (patch by Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - added \"more\" mode that is used to handle status bar content that doesn't fit\n   on the screen (thanks to Bruce Hunsaker, a.k.a. hunsakerbn, and Svyatoslav\n   Mishyn, a.k.a. juef);\n - added builtin directory preview (thanks to Damian Ariel Perticone and\n   Alexandre Viau);\n - added \"fileext\" sorting key, which sorts files by extensions and directories\n   by name (patch by Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - added \"nitems\" sorting, which sorts by number of items in a directory (thanks\n   to filterfalse);\n - added \"nlinks\" sorting key to display number of hard links to a file on *nix\n   systems (thanks to filterfalse);\n - normalize surrounding spaces in menu and dialog titles;\n - lower minimum supported terminal width and height from 30x10 to 20x5;\n - update cursor position on file disappearing in more predictable way.  Use the\n   closes file to the previously active one that still exists (thanks to\n   ranousse);\n - display lower bound on item count in status bar progress messages (e.g. on\n   :grep).\n\nImportant fixes:\n - assume UTF-8 sequences can be broken (thanks to Svyatoslav Mishyn, a.k.a.\n   juef);\n - made setting title inside terminal multiplexers (when terminal type is\n   \"screen*\") work;\n - check file system sensitivity on OS X (thanks to loongw);\n - fixed startup on Windows 10 (thanks to th1rdey3 and Robert Sarkozi);\n - fixed swapped absolute/relative link creation on :alink/:rlink commands\n   (patch by MadMaverick9);\n - multiple fixes for custom views (thanks to filterfalse);\n - more careful treating of files with colons in their names for menus and\n   custom views (thanks to aleksejrs);\n - fixed ranges for :yank, 0.8 regression (thanks to Marius Schmidl);\n - fixed crash on copy-like operations that move several files into subdirectory\n   of another view (thanks to Marius Schmidl);\n - fixed creation of intermediate directories on merging directories (thanks to\n   willemw12).\n\nVim-plugin:\n - added set of :*Vim commands to vifm run from Vim plugin, which overrule\n   initial :*Vifm command behaviour (thanks to Ross Hadden, a.k.a. rosshadden);\n - changed plugin to do not depend on location of vifm.  g:vifm_home is ignored\n   from now on (thanks to aleksejrs).\n\nOnly on Windows:\n - display directory size on Windows more correctly;\n - improvements in running commands with special characters and/or spaces\n   (thanks to Stas Malavin).\n\nOther changes:\n - added handling of \"-\" command-line argument specified in place of directory\n   path as instruction to read list of files from stdin;\n - added --server-list and --server-name command-line options that enumerates\n   names of currently running vifm servers and sets name of target/this instance\n   respectively;\n - added optional argument for --logging parameter that specifies path to\n   startup log (thanks to Cosmin Popescu, a.k.a. cosminadrianpopescu);\n - invalidate directory size (calculated via ga/gA) if noticed that directory\n   was changed.  This affects all parent directories as well, way easier to see\n   what needs recalculation after file moving/removal;\n - warn about --remote command being disabled at build-time (thanks to\n   Svyatoslav Mishyn, a.k.a. juef);\n - do not finish argument parsing after finding --help or --version, continue\n   and validate the rest of command-line (thanks to Svyatoslav Mishyn, a.k.a.\n   juef);\n - display incomplete file name on rename instead of failing with error on\n   Unicode conversion issues.\n\nSee change log for the full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJuly 09, 2015\n=============\n\nvifm v0.8\n---------\n\nNew version brings several useful improvements of different kinds.  The most\nsubstantial addition is custom views that allow one to combine files from\nseveral directories in one view, which in turn enables processing of\nsearch/grep/etc. results similar to handling contents of a regular directory.\n\nThanks to everyone who was reporting issues during beta period.\n\nAlso reminding about #vifm@Freenode IRC channel, color schemes preview at\nhttp://vifm.info/colorschemes.shtml and introducing http://q2a.vifm.info Q&A\nsite for general usage questions.\n\nMain changes:\n - added filename specific highlight (with a script to convert ls options);\n - added custom views, which contrary to regular views can contain files that do\n   not belong to the same directory;\n - added job bar to display active backgrounded file operations;\n - added command-line mode abbreviations;\n - added global configuration and color schemes directory;\n - added live search match highlighting;\n - added optional per-file progress for file operations;\n - added full path patterns ({{globs}} and //regexp//);\n - added command-line options to control file/directory selection and selection\n   processing to make it easier to use vifm as a file picker;\n - color schemes got \".vifm\" extension, but the old-style names will still work\n   for now;\n - XDG specification support;\n - ability to use terminal applications to preview graphics (e.g.\n   w3mimgdisplay).\n\nFile operations:\n - added per-file overwrite confirmation on directory merging (thanks to\n   willemw12);\n - added detailed list of errors when 'syscalls' is used (thanks to willemw12).\n\nKey bindings:\n - added F key to less-like (file view) mode, which acts similar to `tail -F` or\n   F key in less (thanks to Daniel Dettlaff, a.k.a. dmilith);\n - added b key to menu mode that creates custom view filled with menu items\n   filtering out those that are not paths;\n - added zd normal and visual modes key to exclude items from custom views;\n - optional per-file progress in dialog mode activated by hitting \"i\" while\n   operation is being performed.\n\n:set command and options:\n - added 'chaselinks' option to automatically expand all symbolic links in path\n   of a view (might not work on Windows) (thanks to filterfalse);\n - added 'mintimeout' option.  It enables controlling responsiveness on external\n   events by Vifm (thanks to hofheinz);\n - added 'wordchars' option to specify which characters in command-line mode\n   should be considered as part of a word (thanks to filterfalse);\n - added ^= operation for charset options;\n - added %[ and %] macros for 'statusline'/'ruler' (thanks to ranousse);\n - added \"p\" to 'shortmess' option to control tilde shortening of path in view\n   titles (thanks to Martin Fischer);\n - changed default value of 'trashdir' from \"$VIFM/Trash\" to\n   \"%r/.vifm-Trash,$VIFM/Trash\" (thanks to Joseph LP, a.k.a. ootput);\n - normalized sorting keys/view column names: \"type\" -> \"dir\", display real mode\n   in octal for \"mode\", make \"type\" actually display file type (as \"mode\" did\n   before) (thanks to Michal Belica, a.k.a. beli-sk);\n - united last pattern of :substitute command with search history (thanks to\n   filterfalse).\n\nCommand-line mode:\n - added :highlight {pattern} for filename specific highlight (thanks to Ink,\n   a.k.a. inknoir, filterfalse and Michael Maddern, a.k.a. madders);\n - added :cabbrev, :cnoreabbrev and :cunabbrev commands to manage command-line\n   mode abbreviations (thanks to filterfalse);\n - added Ctrl-X / (slash) key to that inserts last search pattern into current\n   cursor position (thanks to filterfalse);\n - added Ctrl-] key to trigger abbreviation expansion;\n - added single-argument form of :file[x]type and :fileviewer commands that\n   lists (in menu mode) currently registered patterns that match specified file\n   name;\n - added :cq[uit] command to exit with non-zero exit code and also abort\n   directory choosing (thanks to Jeet Sukumaran, a.k.a. jeetsukumaran);\n - added :trashes? to display sizes of each non-empty trash directories (thanks\n   to Svyatoslav Mishyn, a.k.a. juef);\n - added regexp patterns to :file[x]type and :fileviewer commands (thanks to\n   filterfalse);\n - added :redr[aw] command to force immediate redraw (thanks to filterfalse);\n - allow non-printable characters to be arguments of :commands (thanks to\n   filterfalse);\n - extended :sync command to support selective synchronization (user can choose\n   among location, cursor position, local options and filters) (thanks to\n   filterfalse).\n\nCompletion:\n - complete `clear` subcommand of :highlight.\n\nAngle bracket notation:\n - added <lt> angle bracket notation (less-than character, '<') (thanks to\n   filterfalse);\n - map <c-h> and <bs> to different key codes (thanks to fogine).  This is caused\n   by inconsistency among terminals, map to both keys and it should work\n   everywhere.\n\nMacros:\n - added %px, %py, %pw and %ph macros that describe location and dimensions of\n   preview area to use in external commands (thanks to Stephano, a.k.a. cao);\n - added %u and %U macros to redirect command output directly into custom view.\n   The second one allows for more customization of file list, which is absence\n   of sorting for now (thanks to filterfalse);\n - no more unjustified inconsistency in processing macros in :! and :file[x]type\n   commands (thanks to Miodrag Tokić, a.k.a. loonies).\n\nScripting:\n - added system() builtin function that executes command via shell and returns\n   its output;\n - added full path patterns ({{globs}} and //regexp//) (thanks to astrell);\n - report error on wrong expression in :if statement and misplaced :else/:endif\n   on file sourcing.\n\nColor scheme:\n - added JobLine highlight group for the job bar.\n\nConfiguration:\n - added fallback to use \"XDG Base Directory Specification\" when failed to find\n   configuration in other places (thanks to Miodrag Tokić, a.k.a. loonies);\n - added global configuration {prefix}/etc/vifm/vifmrc and color schemes\n   {prefix}/etc/vifm/colors/* (thanks to astrell and Michael Vetter, a.k.a.\n   jubalh).\n\nPerformance:\n - significantly reduced amount of work performed by Vifm in idle state (thanks\n   to hofheinz);\n - quit fast on --help/--version (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - throw away dead directories in directory histories on merging vifminfo files.\n   Otherwise clearing such directories on :history is almost useless.\n\nMenus and dialogs:\n - added handling of Ctrl-L to sort dialog (thanks to filterfalse);\n - added device id (major and minor numbers) to file info dialog;\n - made calculation of directory size visible in :jobs menu;\n - parse output of mandoc version of apropos in :apropos (thanks to Svyatoslav\n   Mishyn, a.k.a. juef);\n - display RFC 2822 date without time zon in file info (thanks to Svyatoslav\n   Mishyn, a.k.a. juef).\n\nTUI (Text User Interface):\n - added search match highlighting for file names (thanks to Svyatoslav Mishyn,\n   a.k.a. juef, and willemw12);\n - added job bar that displays backgrounded file operations if any (thanks to\n   geo909);\n - redraw UI on resize during file operation when 'syscalls' is set;\n - redraw UI on resize when dialog is active;\n - dynamic dialog dimensions (minimum %30 percent of the screen rather than\n   screen-wide all the time) (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - auto-resize position field on the status bar to fit the text (thanks to\n   ranousse);\n - append unused space in view columns to the last one with percent sizing type\n   if any (thanks to fogine).\n\nDocumentation:\n - manual page fixes/improvements (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - wrapped option names with single quotes in the man page to make it easier to\n   search for options by their names.\n\nPackaging:\n - added one more light color scheme to assets (in two variations astrell-root\n   and astrell-user) (thanks to astrell);\n - added lookup for mandoc on *nix to perform manual page to plain text\n   transformation (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - added OS X version of sample vifmrc file.  Now this one will be used on first\n   run on OS X (thanks to Larry Hynes, a.k.a. larryhynes);\n - added dircolors -> vifm conversion script (thanks to Ink, a.k.a. inknoir,\n   Hendrik Jaeger, a.k.a. henk, and Michael Maddern, a.k.a. madders);\n - added .vifm extension to color schemes (initial rename is performed\n   automatically) (thanks Michael Vetter, a.k.a. jubalh);\n - added script to update timestamps, so that build system won't be regenerated\n   without real reason.  One might want to run it when building from git\n   checkout, which doesn't preserve correct timestamps;\n - install AUTHORS, COPYING, ChangeLog, INSTALL, NEWS, README and TODO to\n   {prefix}/share/doc/vifm.  Install color schemes to\n   {prefix}/share/vifm/colors.  Otherwise these are not available after\n   installation;\n - made configure script lookup curs_set in libtinfo;\n - moved checks for build-time tools existence from Makefile to configure\n   script;\n - made tests less dependent on environment (thanks to Hendrik Jaeger, a.k.a.\n   henk).\n\nOnly on Windows:\n - automatically install sample vifmrc and help file on first start;\n - switch to utf-8 internal representation of paths.  This fixes issues when\n   file name encoding doesn't match system encoding (thanks to Stas Panteleev).\n\nImportant fixes:\n - fixed undesired file removal on overwriting them with themselves (data loss\n   after confirmation of overwriting files when destination matches source)\n   (thanks to Сергей Соловьёв (Sergej Soloviov));\n - fixed crash on navigation to end of line in command-line mode (thanks to\n   Christian Fillion, a.k.a. cfillion);\n - fixed `:help` (no arguments) when 'vimhelp' is on and automatically installed\n   Vim documentation is used (thanks to ranousse);\n - better handling of case related operations;\n - fixed \":vs ..\" which used to use wrong base directory;\n - fixed assertion on including \"type\" in 'viewcolumns' value (thanks to Michal\n   Belica, a.k.a. beli-sk);\n - better FUSE handling on OS X (thanks to Michael Maddern, a.k.a. madders);\n - fixed (deep) directory merging (thanks to willemw12);\n - fixed build and work on OpenBSD (at least to some degree that curses\n   implementation there allows).  There might be some troubles with non-ascii\n   characters (thanks to hofheinz and Brian Callahan, a.k.a. ibara);\n - fixed copying of fifo, socket and device files with 'syscalls' enabled.\n   Thanks to Svyatoslav Mishyn (a.k.a. juef).\n\nVim-plugin:\n - added K mapping to Vim plugin (quick navigation to documentation, e.g. from\n   vifmrc).  Patch by filterfalse.\n\nOther changes:\n - added --delimiter command-line option.  Configures delimiter string on\n   writing out list of paths (like on `-f` switch) (thanks to Jeet Sukumaran,\n   a.k.a. jeetsukumaran);\n - added --choose-files and --choose-dir command-line switches to specify output\n   location for names of selected files or last visited directory\n   respectively (thanks to Jeet Sukumaran, a.k.a. jeetsukumaran);\n - added --on-choose command-line switch to execute a command on selection\n   rather than opening it (thanks to Ross Hadden, a.k.a. rosshadden);\n - added %FOREGROUND FUSE mounting option, which supersedes %CLEAR and fixes\n   issue with passing input to FUSE mounter (thanks to Johannes, a.k.a. johannesmeng);\n - removed per-view last search pattern.  Don't worry, you probably won't even\n   notice it: this doesn't affect regular use case, rather more exotic one,\n   which is hard to notice;\n - better handling or unexpectedly unavailable directories on startup and while\n   running (thanks to willemw12);\n - define $VIFM_FUSE_FILE environment variable for external commands to\n   communicate path to file used to initiate FUSE mounting of directory we're\n   in (thanks to astrell);\n - allowed having multiple file viewers with same rules for choosing them at\n   run-time as for file associations (thanks to filterfalse);\n - redirect both standard output and error streams from viewers (already was the\n   case for Windows);\n - handle commands that are too long to be passed directly to the shell by\n   breaking them into list of arguments if possible (thanks to filterfalse).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 19, 2015\n=============\n\nvifm v0.8 beta testing has started\n----------------------------------\n\nNew version brings several useful improvements of different kinds.  The most\nsubstantial addition is custom views that allow one to combine files from\nseveral directories in one view, which in turn enables processing of\nsearch/grep/etc. results similar to handling contents of a regular directory.\n\nThat change alone affected internal structure quite seriously which combined\nwith operations on system calls from the previous release distant new version\nfar enough from 0.7 to name it 0.8.\n\nVersion change also gives one a moral right to introduce incompatible changes.\nSo if anyone remembers me postponing changing defaults or something like that\nand is still waiting on it, please send a reminder (unfortunately I was\ncareless enough to didn't make detailed list of such things).  As of now the\nfollowing items are under evaluation:\n - removing \"options\", \"filetypes\", \"commands\" from 'vifminfo' option (not a\n   big deal, but it's not really useful as well, and maybe potentially\n   harmful);\n - removing 'trash' option as it effectively affects quite a lot things and is\n   better to be enabled;\n - have 'hlsearch' off by default as normally search doesn't select anything\n   and user can accidentally run some operation on too many files with default\n   setup.\n\nPlease see the README file in packages for links where feedback can be\nprovided.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added filename specific highlight;\n - added custom views, which contrary to regular views can contain files that do\n   not belong to the same directory;\n - added job bar to display active backgrounded file operations;\n - added command-line mode abbreviations;\n - added global configuration and color schemes directory;\n - added live search match highlighting;\n - added optional per-file progress for file operations;\n - added full path patterns ({{globs}} and //regexp//);\n - added command-line options to control file/directory selection and selection\n   processing to make it easier to use vifm as a file picker;\n - color schemes got \".vifm\" extension, but the old-style names will still work\n   for now;\n - XDG specification support.\n\nFile operations:\n - added per-file overwrite confirmation on directory merging (thanks to\n   willemw12);\n - added detailed list of errors when 'syscalls' is used (thanks to willemw12).\n\nKey bindings:\n - added F key to less-like (file view) mode, which acts similar to `tail -F` or\n   F key in less (thanks to Daniel Dettlaff, a.k.a. dmilith);\n - added b key to menu mode that creates custom view filled with menu items\n   filtering out those that are not paths;\n - added zd normal and visual modes key to exclude items from custom views;\n - optional per-file progress in dialog mode activated by hitting \"i\" while\n   operation is being performed.\n\n:set command and options:\n - added 'chaselinks' option to automatically expand all symbolic links in path\n   of a view (might not work on Windows) (thanks to filterfalse);\n - added 'mintimeout' option.  It enables controlling responsiveness on external\n   events by Vifm (thanks to hofheinz);\n - added 'wordchars' option to specify which characters in command-line mode\n   should be considered as part of a word (thanks to filterfalse);\n - added ^= operation for charset options;\n - added %[ and %] macros for 'statusline'/'ruler' (thanks to ranousse);\n - added \"p\" to 'shortmess' option to control tilde shortening of path in view\n   titles (thanks to Martin Fischer);\n - changed default value of 'trashdir' from \"$VIFM/Trash\" to\n   \"%r/.vifm-Trash,$VIFM/Trash\" (thanks to Joseph LP, a.k.a. ootput);\n - normalized sorting keys/view column names: \"type\" -> \"dir\", display real mode\n   in octal for \"mode\", make \"type\" actually display file type (as \"mode\" did\n   before) (thanks to Michal Belica, a.k.a. beli-sk);\n - united last pattern of :substitute command with search history (thanks to\n   filterfalse).\n\nCommand-line mode:\n - added :highlight {pattern} for filename specific highlight (thanks to Ink,\n   a.k.a. inknoir, filterfalse and Michael Maddern, a.k.a. madders);\n - added :cabbrev, :cnoreabbrev and :cunabbrev commands to manage command-line\n   mode abbreviations (thanks to filterfalse);\n - added Ctrl-X / (slash) key to that inserts last search pattern into current\n   cursor position (thanks to filterfalse);\n - added Ctrl-] key to trigger abbreviation expansion;\n - added single-argument form of :file[x]type and :fileviewer commands that\n   lists (in menu mode) currently registered patterns that match specified file\n   name;\n - added :cq[uit] command to exit with non-zero exit code and also abort\n   directory choosing (thanks to Jeet Sukumaran, a.k.a. jeetsukumaran);\n - added :trashes? to display sizes of each non-empty trash directories (thanks\n   to Svyatoslav Mishyn, a.k.a. juef);\n - added regexp patterns to :file[x]type and :fileviewer commands (thanks to\n   filterfalse);\n - added :redr[aw] command to force immediate redraw (thanks to filterfalse);\n - allow non-printable characters to be arguments of :commands (thanks to\n   filterfalse);\n - extended :sync command to support selective synchronization (user can choose\n   among location, cursor position, local options and filters) (thanks to\n   filterfalse).\n\nCompletion:\n - complete `clear` subcommand of :highlight.\n\nAngle bracket notation:\n - added <lt> angle bracket notation (less-than character, '<') (thanks to\n   filterfalse);\n - map <c-h> and <bs> to different key codes (thanks to fogine).  This is caused\n   by inconsistency among terminals, map to both keys and it should work\n   everywhere.\n\nMacros:\n - added %px, %py, %pw and %ph macros that describe location and dimensions of\n   preview area to use in external commands (thanks to Stephano, a.k.a. cao);\n - added %u and %U macros to redirect command output directly into custom view.\n   The second one allows for more customization of file list, which is absence\n   of sorting for now (thanks to filterfalse);\n - no more unjustified inconsistency in processing macros in :! and :file[x]type\n   commands (thanks to Miodrag Tokić, a.k.a. loonies).\n\nScripting:\n - added system() builtin function that executes command via shell and returns\n   its output;\n - added full path patterns ({{globs}} and //regexp//) (thanks to astrell);\n - report error on wrong expression in :if statement and misplaced :else/:endif\n   on file sourcing.\n\nColor scheme:\n - added JobLine highlight group for the job bar.\n\nConfiguration:\n - added fallback to use \"XDG Base Directory Specification\" when failed to find\n   configuration in other places (thanks to Miodrag Tokić, a.k.a. loonies);\n - added global configuration {prefix}/etc/vifm/vifmrc and color schemes\n   {prefix}/etc/vifm/colors/* (thanks to astrell and Michael Vetter, a.k.a.\n   jubalh).\n\nPerformance:\n - significantly reduced amount of work performed by Vifm in idle state (thanks\n   to hofheinz);\n - quit fast on --help/--version (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - throw away dead directories in directory histories on merging vifminfo files.\n   Otherwise clearing such directories on :history is almost useless.\n\nMenus and dialogs:\n - made calculation of directory size visible in :jobs menu;\n - parse output of mandoc version of apropos in :apropos (thanks to Svyatoslav\n   Mishyn, a.k.a. juef).\n\nTUI (Text User Interface):\n - added search match highlighting for file names (thanks to Svyatoslav Mishyn,\n   a.k.a. juef, and willemw12);\n - added job bar that displays backgrounded file operations if any (thanks to\n   geo909);\n - redraw UI on resize during file operation when 'syscalls' is set;\n - redraw UI on resize when dialog is active;\n - dynamic dialog dimensions (minimum %30 percent of the screen rather than\n   screen-wide all the time) (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - auto-resize position field on the status bar to fit the text (thanks to\n   ranousse).\n\nDocumentation:\n - manual page fixes/improvements (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - wrapped option names with single quotes in the man page to make it easier to\n   search for options by their names.\n\nPackaging:\n - added one more light color scheme to assets (in two variations astrell-root\n   and astrell-user) (thanks to astrell);\n - added lookup for mandoc on *nix to perform manual page to plain text\n   transformation (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - added OS X version of sample vifmrc file.  Now this one will be used on first\n   run on OS X (thanks to Larry Hynes, a.k.a. larryhynes);\n - added dircolors -> vifm conversion script (thanks to Ink, a.k.a. inknoir,\n   Hendrik Jaeger, a.k.a. henk, and Michael Maddern, a.k.a. madders);\n - added .vifm extension to color schemes (initial rename is performed\n   automatically) (thanks Michael Vetter, a.k.a. jubalh);\n - install AUTHORS, COPYING, ChangeLog, INSTALL, NEWS, README and TODO to\n   {prefix}/share/doc/vifm.  Install color schemes to\n   {prefix}/share/vifm/colors.  Otherwise these are not available after\n   installation;\n - made configure script lookup curs_set in libtinfo;\n - moved checks for build-time tools existence from Makefile to configure script;\n - made tests less dependent on environment (thanks to Hendrik Jaeger, a.k.a.\n   henk).\n\nOnly on Windows:\n - automatically install sample vifmrc and help file on first start;\n - switch to utf-8 internal representation of paths.  This fixes issues when\n   file name encoding doesn't match system encoding (thanks to Stas Panteleev).\n\nMajor fixes:\n - fixed undesired file removal on overwriting them with themselves (data loss\n   after confirmation of overwriting files when destination matches source)\n   (thanks to Сергей Соловьёв (Sergej Soloviov));\n - fixed crash on navigation to end of line in command-line mode (thanks to\n   Christian Fillion, a.k.a. cfillion);\n - fixed `:help` (no arguments) when 'vimhelp' is on and automatically installed\n   Vim documentation is used (thanks to ranousse);\n - better handling of case related operations;\n - fixed \":vs ..\" which used to use wrong base directory;\n - fixed assertion on including \"type\" in 'viewcolumns' value (thanks to Michal\n   Belica, a.k.a. beli-sk);\n - better FUSE handling on OS X (thanks to Michael Maddern, a.k.a. madders).\n\nVim-plugin:\n - added K mapping to Vim plugin (quick navigation to documentation, e.g. from\n   vifmrc).  Patch by filterfalse.\n\nOther changes:\n - added --delimiter command-line option.  Configures delimiter string on\n   writing out list of paths (like on `-f` switch) (thanks to Jeet Sukumaran,\n   a.k.a. jeetsukumaran);\n - added --choose-files and --choose-dir command-line switches to specify output\n   location for names of selected files or last visited directory\n   respectively (thanks to Jeet Sukumaran, a.k.a. jeetsukumaran);\n - added --on-choose command-line switch to execute a command on selection\n   rather than opening it (thanks to Ross Hadden, a.k.a. rosshadden);\n - added %FOREGROUND FUSE mounting option, which supersedes %CLEAR and fixes\n   issue with passing input to FUSE mounter (thanks to Johannes, a.k.a.\n   johannesmeng);\n - removed per-view last search pattern.  Don't worry, you probably won't even\n   notice it: this doesn't affect regular use case, rather more exotic one,\n   which is hard to notice;\n - better handling or unexpectedly unavailable directories on startup and while\n   running (thanks to willemw12);\n - define $VIFM_FUSE_FILE environment variable for external commands to\n   communicate path to file used to initiate FUSE mounting of directory we're\n   in (thanks to astrell);\n - allowed having multiple file viewers with same rules for choosing them at\n   run-time as for file associations (thanks to filterfalse);\n - redirect both standard output and error streams from viewers (already was the\n   case for Windows);\n - handle commands that are too long to be passed directly to the shell by\n   breaking them into list of arguments if possible (thanks to filterfalse).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 25, 2014\n================\n\nVifm v0.7.8 release\n-------------------\n\nNew version adds a couple of major features, allows for some more customizations\nand makes usual operations more convenient.  Finally, file system operations got\nprogress (it's disabled by default, new implementation needs to be tested in\ndifferent environments to become the primary one). Another frequently asked\nfeature is multiblock selection (\"extended visual mode\" if you wish). Vifm also\nbecame friendlier to authors of colorschemes and those who'd like to customize\nUI a bit more.\n\nMain changes:\n - added multiblock \"selection\" (in quotes because it's also block deselection\n   and inversion of selection for completeness);\n - added progress bar for file operations.  Available only if 'syscalls' option\n   is set  (please be careful with that, check basic operations on temp files\n   before using this with important data);\n - added names for 256 colors, highlight group for inactive cursor,\n   \":highlight clear\" command;\n - some improvements for cancelling operations;\n - better implementation of emptying trash directories;\n - new types of conflict resolution;\n - several extensions for filtering with user-defined commands;\n - more customizable UI (borders, padding);\n - smarter path completion;\n - separated Vifm and Vim plugin documentation;\n - a couple of extensions for Vim plugin (for mail and bulk file renaming).\n\nCore:\n - added cancellation (handling of Ctrl-C) for FUSE mounting (but not\n   unmounting);\n - added progress for long-running file system operations.  Available only if\n   'syscalls' option is set;\n - added \"[a]ppend the end\" conflict resolution option (appends the rest of\n   file, e.g. if previous operation was terminated) (thanks to Sergei\n   Shilovsky).  Available only if 'syscalls' option is set;\n - added merge all option for name conflict resolution.  Same as \"merge\", but\n   remembers the choice for future conflicts of directories (thanks to\n   willemw12);\n - added skip all option for name conflict resolution (thanks to Miodrag\n   Tokić (a.k.a. loonies));\n - changed \"overwrite all\" key from \"a\" to \"O\" for consistency (thanks to\n   willemw12);\n - implemented creation, removal, copying, moving of files with system calls.\n   Available only if 'syscalls' option is set;\n - rewrote trash content removal with system calls in background thread (thanks\n   to lyuts and ckester).  It's also now visible in :jobs menu;\n - several improvements for :lstrash menu (thanks to filterfalse);\n - more reliable Ctrl-C detection.\n\nNormal and visual modes:\n - added av normal mode shortcut that activates selection amending mode (thanks\n   to ranousse, Michelle Bonk (a.k.a. unixtechie));\n - added/updated av/v/V visual mode keys to switch type of current visual mode;\n - added Ctrl-G key to visual selection amending mode, which switches kind of\n   amending (append/remove/invert);\n - added ga and gA keys to visual mode (thanks to geo909);\n - separate visual selection marks ('< and '>), which allows to restore it via\n   gv in both panes (thanks to filterfalse);\n - implement \"(\" and \")\" keys for \"perms\" and \"type\" sorting keys (thanks to\n   filterfalse);\n - skip nonexistent directories on Ctrl-O/Ctrl-I;\n - repeat search with last used search pattern on empty pattern of the search\n   mode;\n - taught ga/gA commands to handle selection (thanks to geo909).\n\nCommand-line mode:\n - added i and I flags to :filter command to control filter case\n   sensitivity (thanks to filterfalse);\n - added filter flags to output of :filter? command and formatted output as a\n   table;\n - added \":highlight clear\" to reset to builtin colors;\n - added =pattern special form of user-defined command that sets local filter to\n   the given value (alike \"/pattern\" and \"filter value\") (thanks to\n   filterfalse);\n - made :filter command consider trailing slash for symbolic links that point to\n   directories (thanks to filterfalse);\n - allowed use of :filter syntax in user-defined filter commands (e.g.\n   \"command conf filter/.*\\.cfg$/\");\n - made +/- operands after semicolon in command-line range adjust base range end\n   position rather than base cursor position as Vim does (thanks to\n   filterfalse).\n\n:set command and options:\n - added 'syscalls' boolean option.  Chooses external tools/system calls\n   implementation.  {EXPERIMENTAL}, {WORK-IN-PROGRESS}, although no data loss so\n   far.  The option will be eventually removed.  Mostly *nix-like systems are\n   affected;\n - added 'cdpath' option (thanks to Bruce Hunsaker (a.k.a. hunsakerbn));\n - added 'tuioptions' option.  Controls padding of file lists in panels and\n   visibility of side borders (thanks to Bruce Hunsaker (a.k.a. hunsakerbn) and\n   Svyatoslav Mishyn (a.k.a. juef));\n - added 'fillchars' option.  Configures fill character for vertical\n   borders (thanks to Svyatoslav Mishyn (a.k.a. juef));\n - extended 'slowfs' option format to allow path prefixes (in particular, it's\n   useful for autofs) (thanks to Евгений Жаров (a.k.a. ezharov)).\n\nScripting:\n - added logical NOT unary operator (\"!\");\n - added executable() builtin function that checks whether executable exists at\n   given path or in one of directories listed in $PATH;\n - added has() builtin function that checks whether particular property is\n   enabled (two properties for now: \"unix\" and \"win\") (thanks to filterfalse);\n - made expand() builtin function expand environment variables (thanks to\n   filterfalse).\n\nPerformance:\n - optimized speed of checking existence of a directory (important on displaying\n   directory history);\n - automatically remove non-existent directories from directory history on\n   :history command to speed up future operations (this clean up is very cheap\n   on composing menu).\n\nCompletion:\n - added function name completion on command-line;\n - smart completion for paths.  Allows completion of quoted arguments (both\n   ' and \" types of quotes) and considers argument type context by performing\n   escaping when needed.\n\nDocumentation:\n - added full command names to the manual page to ease searching them (thanks to\n   y2kbugger);\n - documented how to use 256 colors in :highlight command (thanks to Michael\n   Vetter (a.k.a. jubalh));\n - made it possible to hide Vifm's documentation from Vim when it's not run by\n   Vifm's :help command (thanks to ranousse);\n - separated Vifm's vimdoc from plugin documentation.\n\nTUI (Text User Interface):\n - added more human-friendly (xterm-like) names for 256 colors (thanks to\n   Michael Vetter (a.k.a. jubalh));\n - added OtherLine highlight group for cursor of inactive pane (thanks to\n   Svyatoslav Mishyn (a.k.a. juef));\n - more accurate scheduling of view updates.\n\nVim:\n - added file additional mail filetype plugin for Vim (thanks to Pavneet Arora).\n   It allows one to pick attachments via Vifm on <localleader>a shortcut;\n - added file renaming filetype plugin for Vim (thanks to Factorial Prime).  It\n   displays list of original file names in a vertical split;\n - provided additional repository for Vim\n   plugin (https://github.com/vifm/vifm.vim);\n - make Vim plugin use cmd.exe as default shell on Windows (thanks to Jonathan\n   Da Silva);\n - various minor syntax highlight improvements (wrapped lines, numbers,\n   options).\n\nPackaging:\n - added Vim plugin directory to share/vifm/vim on `make install` (thanks\n   Svyatoslav Mishyn (a.k.a. juef));\n - removed ltmain.sh script, which is part of libtool that's not used\n   anymore (thanks to Hendrik Jaeger (a.k.a. henk));\n - renamed configure.in to configure.ac (thanks to Hendrik Jaeger (a.k.a.\n   henk));\n - \"make clean\" now removes \"tags\" files for Vim documentation generated\n   during build (thanks to Hendrik Jaeger (a.k.a. henk)).\n\nMajor fixes:\n - fixed segmentation fault on running vifm with single argument if restored\n   cursor is in the right pane (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - fixed segmentation fault during startup in a small terminal on OS X (thanks\n   to Daniel Dettlaff (a.k.a. dmilith));\n - fixed segmentation fault on no view history and \":set autochpos\" in\n   vifmrc (thanks to ranousse);\n - fixed unexpectedly broken compilation on FreeBSD (thanks to Daniel\n   Dettlaff (a.k.a. dmilith));\n - fixed :!! command, seems to be not working for a while;\n - fixed segmentation fault on Alt-. command in command-line mode (since 0.7.7).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 11, 2014\n================\n\nvifm v0.7.8 beta testing has started\n------------------------------------\n\nNew version adds a couple of major features, allows for some more customizations\nand makes usual operations more convenient.  Finally, file system operations got\nprogress (it's disabled by default, new implementation needs to be tested in\ndifferent environments to become the primary one). Another frequently asked\nfeature is multiblock selection (\"extended visual mode\" if you wish). Vifm also\nbecame friendlier to authors of colorschemes and those who'd like to customize\nUI a bit more.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added multiblock \"selection\" (in quotes because it's also block deselection\n   and inversion of selection for completeness);\n - added progress bar for file operations.  Available only if 'syscalls' option\n   is set  (please be careful with that, check basic operations on temp files\n   before using this with important data);\n - added names for 256 colors, highlight group for inactive cursor,\n   \":highlight clear\" command;\n - some improvements for cancelling operations;\n - better implementation of emptying trash directories;\n - new types of conflict resolution;\n - several extensions for filtering with user-defined commands;\n - more customizable UI (borders, padding);\n - smarter path completion;\n - separated Vifm and Vim plugin documentation;\n - a couple of extensions for Vim plugin (for mail and bulk file renaming).\n\nCore:\n - added cancellation (handling of Ctrl-C) for FUSE mounting (but not\n   unmounting);\n - added progress for long-running file system operations.  Available only if\n   'syscalls' option is set;\n - added \"[a]ppend the end\" conflict resolution option (appends the rest of\n   file, e.g. if previous operation was terminated) (thanks to Sergei\n   Shilovsky).  Available only if 'syscalls' option is set;\n - added merge all option for name conflict resolution.  Same as \"merge\", but\n   remembers the choice for future conflicts of directories (thanks to\n   willemw12);\n - changed \"overwrite all\" key from \"a\" to \"O\" for consistency (thanks to\n   willemw12);\n - implemented creation, removal, copying, moving of files with system calls.\n   Available only if 'syscalls' option is set;\n - rewrote trash content removal with system calls in background thread (thanks\n   to lyuts and ckester).  It's also now visible in :jobs menu;\n - several improvements for :lstrash menu (thanks to filterfalse);\n - more reliable Ctrl-C detection.\n\nNormal and visual modes:\n - added av normal mode shortcut that activates selection amending mode (thanks\n   to ranousse, Michelle Bonk (a.k.a. unixtechie));\n - added/updated av/v/V visual mode keys to switch type of current visual mode;\n - added Ctrl-G key to visual selection amending mode, which switches kind of\n   amending (append/remove/invert);\n - separate visual selection marks ('< and '>), which allows to restore it via\n   gv in both panes (thanks to filterfalse);\n - implement \"(\" and \")\" keys for \"perms\" and \"type\" sorting keys (thanks to\n   filterfalse);\n - skip nonexistent directories on Ctrl-O/Ctrl-I;\n - repeat search with last used search pattern on empty pattern of the search\n   mode.\n\nCommand-line mode:\n - added i and I flags to :filter command to control filter case\n   sensitivity (thanks to filterfalse);\n - added filter flags to output of :filter? command and formatted output as a\n   table;\n - added \":highlight clear\" to reset to builtin colors;\n - added =pattern special form of user-defined command that sets local filter to\n   the given value (alike \"/pattern\" and \"filter value\") (thanks to\n   filterfalse);\n - made :filter command consider trailing slash for symbolic links that point to\n   directories (thanks to filterfalse);\n - allowed use of :filter syntax in user-defined filter commands (e.g.\n   \"command conf filter/.*\\.cfg$/\");\n - made +/- operands after semicolon in command-line range adjust base range end\n   position rather than base cursor position as Vim does (thanks to\n   filterfalse).\n\n:set command and options:\n - added 'syscalls' boolean option.  Chooses external tools/system calls\n   implementation.  {EXPERIMENTAL}, {WORK-IN-PROGRESS}, although no data loss so\n   far.  The option will be eventually removed.  Mostly *nix-like systems are\n   affected;\n - added 'cdpath' option (thanks to Bruce Hunsaker (a.k.a. hunsakerbn));\n - added 'tuioptions' option.  Controls padding of file lists in panels and\n   visibility of side borders (thanks to Bruce Hunsaker (a.k.a. hunsakerbn) and\n   Svyatoslav Mishyn (a.k.a. juef));\n - added 'fillchars' option.  Configures fill character for vertical\n   borders (thanks to Svyatoslav Mishyn (a.k.a. juef));\n - extended 'slowfs' option format to allow path prefixes (in particular, it's\n   useful for autofs) (thanks to Евгений Жаров (a.k.a. ezharov)).\n\nScripting:\n - added logical NOT unary operator (\"!\");\n - added executable() builtin function that checks whether executable exists at\n   given path or in one of directories listed in $PATH;\n - added has() builtin function that checks whether particular property is\n   enabled (two properties for now: \"unix\" and \"win\") (thanks to filterfalse);\n - made expand() builtin function expand environment variables (thanks to\n   filterfalse).\n\nPerformance:\n - optimized speed of checking existence of a directory (important on displaying\n   directory history);\n - automatically remove non-existent directories from directory history on\n   :history command to speed up future operations (this clean up is very cheap\n   on composing menu).\n\nCompletion:\n - added function name completion on command-line;\n - smart completion for paths.  Allows completion of quoted arguments (both\n   ' and \" types of quotes) and considers argument type context by performing\n   escaping when needed.\n\nDocumentation:\n - added full command names to the manual page to ease searching them (thanks to\n   y2kbugger);\n - documented how to use 256 colors in :highlight command (thanks to Michael\n   Vetter (a.k.a. jubalh));\n - made it possible to hide Vifm's documentation from Vim when it's not run by\n   Vifm's :help command (thanks to ranousse);\n - separated Vifm's vimdoc from plugin documentation.\n\nTUI (Text User Interface):\n - added more human-friendly (xterm-like) names for 256 colors (thanks to\n   Michael Vetter (a.k.a. jubalh));\n - added OtherLine highlight group for cursor of inactive pane (thanks to\n   Svyatoslav Mishyn (a.k.a. juef)).\n\nVim:\n - added file additional mail filetype plugin for Vim (thanks to Pavneet Arora).\n   It allows one to pick attachments via Vifm on <localleader>a shortcut;\n - added file renaming filetype plugin for Vim (thanks to Factorial Prime).  It\n   displays list of original file names in a vertical split;\n - provided additional repository for Vim\n   plugin (https://github.com/vifm/vifm.vim);\n - make Vim plugin use cmd.exe as default shell on Windows (thanks to Jonathan\n   Da Silva);\n - various minor syntax highlight improvements (wrapped lines, numbers,\n   options).\n\nPackaging:\n - added Vim plugin directory to share/vifm/vim on `make install` (thanks\n   Svyatoslav Mishyn (a.k.a. juef));\n - removed ltmain.sh script, which is part of libtool that's not used\n   anymore (thanks to Hendrik Jaeger (a.k.a. henk));\n - renamed configure.in to configure.ac (thanks to Hendrik Jaeger (a.k.a.\n   henk)).\n\nMajor fixes:\n - fixed segmentation fault on running vifm with single argument if restored\n   cursor is in the right pane (thanks to Svyatoslav Mishyn, a.k.a. juef);\n - fixed segmentation fault during startup in a small terminal on OS X (thanks\n   to Daniel Dettlaff (a.k.a. dmilith));\n - fixed segmentation fault on no view history and \":set autochpos\" in\n   vifmrc (thanks to ranousse);\n - fixed unexpectedly broken compilation on FreeBSD (thanks to Daniel\n   Dettlaff (a.k.a. dmilith));\n - fixed :!! command, seems to be not working for a while;\n - fixed segmentation fault on Alt-. command in command-line mode (since 0.7.7).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMay 16, 2014\n============\n\nvifm v0.7.7 release\n-------------------\n\nNew version provides more customizations for several existing features\nand more convenient interaction with them.\n\nThanks to all contributors and especially those who tried beta version.\n\nMain changes:\n - vifm has had support for navigation by file number for years, finally it\n   can display those numbers;\n - support of trash directories got better with ability to have trash per\n   mount point and new trash menus;\n - command-line mode now has Ctrl-X prefixed keys that insert parts of\n   filenames and filters (kind of Ctrl-R in Vim);\n - bookmarks are now timestamped for more predictable management (mainly\n   deletion and overwriting);\n - for security reasons remote commands are now disabled at configuration\n   stage by default;\n - most of long-running operations (:find, :copy, etc.) now can be cancelled\n   by pressing Ctrl-C;\n - menus with list of files got unified \"gf\" (for navigation) and \"e\" (for\n   editing) shortcuts;\n - several fixes and %n macro for better integration with terminal\n   multiplexers;\n - ability to sort list view with disabled grouping of directories;\n - expression parser was extended in a couple of ways;\n - added three more sample color schemes.\n\nConfiguration:\n - added --enable-remote-cmd switch to configure script disabled by default, as\n   current implementation of the feature is insecure.\n\nMenus and dialogs:\n - added \"gf\" (go to file) and \"e\" (open in editor) keys to :grep, :find,\n   :locate and user menu with navigation (%M macro).\n\nMacros:\n - added %A macro to 'findprg' and 'grepprg' options, which is expanded to\n   unmodified list of arguments (thanks to Robert Sarkozi);\n - added %n macro which suppresses using of terminal multiplexer in a command\n   (user-defined :command, :!command or :file[x]type action).\n\nKey bindings:\n - added Ctrl-W z key to normal and view modes, which closes preview pane or\n   view modes (thanks to filterfalse).\n\n:set command and options:\n - added \"type\" key to the 'sort' option to allow controlling grouping of\n   directories (thanks to Daniel R., a.k.a. reicheltd);\n - added 'number', 'relativenumber' and 'numberwidth' options to control\n   displaying of file numbers (thanks to filterfalse and greye);\n - extended 'trashdir' to handle list of path, some of which can specify\n   location of trash directories local to each mount point (thanks to\n   smpolymen and Sergei Shilovsky).\n\nCommand-line mode related changes:\n - added Ctrl-X a/c/d/e/m/r/t/= keys to command-line mode that insert parts\n   of file names and values of filters (see related documentation) (thanks to\n   ranousse and filterfalse);\n - added :lstrash command-line command, which displays list of files in trash\n   (thanks to Sergei Shilovsky);\n - added :trashes command-line command, which lists all non-empty trash\n   directories (thanks to Sergei Shilovsky);\n - treat semicolon (\";\") as a valid range separator for command-line commands;\n - allow empty ranges for command without name (as in :4).\n\nAngle bracket notation:\n - added <nop> angle bracket notation (thanks to filterfalse).\n\nScripting:\n - added &option syntax for expressions (returns value of an option);\n - extended parser to support integer number constants and unary minus and\n   plus operators;\n - extended parser to support <, <=, >= and > comparison operators for strings\n   and integers.\n\nPerformance:\n - optimized file name comparison on sorting.\n\nDocumentation:\n - documented special bookmarks;\n - more verbose documentation on :filextype and its usage.\n\nColor scheme related changes:\n - added sample light color scheme (provided by Daniel R., a.k.a. reicheltd);\n - added sample dark solarized color scheme (provided by Stéphane, a.k.a.\n   istib);\n - added zenburn color scheme (provided by Svyatoslav Mishyn, a.k.a. juef).\n\nTUI (Text User Interface):\n - handle backspace in preview window as terminal emulators do (thanks to Svenn\n   Are Bjerkem, a.k.a. svenn).\n\nOnly on Windows:\n - added handling of paths with backward slashes for :find/:locate/:grep/%M\n   menus on Windows (thanks to Robert Sarkozi);\n - fixed extending filetypes that are missing macro on Windows when cmd.exe\n   shell is used (thanks to Daniel Polanco, a.k.a. dlpolanco);\n - fixed work with filenames contining special symbols on Windows with cmd.exe\n   shell (thanks to Daniel Polanco, a.k.a. dlpolanco);\n - fixed testing whether application uses GUI on Windows when path contains\n   spaces;\n - fixed extra escaping on prompt filename completion on Windows.\n\nOther changes:\n - added cancellation handling for file system operations and invocations of\n   external applications (works best on *nix systems) (thanks to Milan Svoboda,\n   a.k.a. tex);\n - made bookmarks merging smarter by storing timestamps.  Removing bookmarks\n   now works as expected.  Bookmarks overwriting by another instance shouldn't\n   happen anymore.  (Thanks to Michael Maddern, a.k.a. madders.)\n\nMajor fixes:\n - fixed file descriptor leak on finishing background tasks (thanks to\n   anonymous from linux.org.ru);\n - fixed several bugs that led to segmentation fault;\n - fixed copying/moving files after picking \"Overwrite all\" conflict resolution\n   option (thanks to Stas Malavin).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nApril 30, 2014\n==============\n\nvifm v0.7.7 beta testing has started\n------------------------------------\n\nNew version provides more customizations for several existing features\nand more convenient interaction with them.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - vifm has had support for navigation by file number for years, finally it\n   can display those numbers;\n - support of trash directories got better with ability to have trash per\n   mount point and new trash menus;\n - command-line mode now has Ctrl-X prefixed keys that insert parts of\n   filenames and filters (kind of Ctrl-R in Vim);\n - bookmarks are now timestamped for more predictable management (mainly\n   deletion and overwriting);\n - for security reasons remote commands are now disabled at configuration\n   stage by default;\n - most of long-running operations (:find, :copy, etc.) now can be cancelled\n   by pressing Ctrl-C;\n - menus with list of files got unified \"gf\" (for navigation) and \"e\" (for\n   editing) shortcuts;\n - several fixes and %n macro for better integration with terminal\n   multiplexers;\n - ability to sort list view with disabled grouping of directories;\n - expression parser was extended in a couple of ways;\n - added three more sample color schemes.\n\nConfiguration:\n - added --enable-remote-cmd switch to configure script disabled by default, as\n   current implementation of the feature is insecure.\n\nMenus and dialogs:\n - added \"gf\" (go to file) and \"e\" (open in editor) keys to :grep, :find,\n   :locate and user menu with navigation (%M macro).\n\nMacros:\n - added %A macro to 'findprg' and 'grepprg' options, which is expanded to\n   unmodified list of arguments (thanks to Robert Sarkozi);\n - added %n macro which suppresses using of terminal multiplexer in a command\n   (user-defined :command, :!command or :file[x]type action).\n\nKey bindings:\n - added Ctrl-W z key to normal and view modes, which closes preview pane or\n   view modes (thanks to filterfalse).\n\n:set command and options:\n - added \"type\" key to the 'sort' option to allow controlling grouping of\n   directories (thanks to Daniel R., a.k.a. reicheltd);\n - added 'number', 'relativenumber' and 'numberwidth' options to control\n   displaying of file numbers (thanks to filterfalse and greye);\n - extended 'trashdir' to handle list of path, some of which can specify\n   location of trash directories local to each mount point (thanks to\n   smpolymen and Sergei Shilovsky).\n\nCommand-line mode related changes:\n - added Ctrl-X a/c/d/e/m/r/t/= keys to command-line mode that insert parts\n   of file names and values of filters (see related documentation) (thanks to\n   ranousse and filterfalse);\n - added :lstrash command-line command, which displays list of files in trash\n   (thanks to Sergei Shilovsky);\n - added :trashes command-line command, which lists all non-empty trash\n   directories (thanks to Sergei Shilovsky);\n - treat semicolon (\";\") as a valid range separator for command-line commands;\n - allow empty ranges for command without name (as in :4).\n\nAngle bracket notation:\n - added <nop> angle bracket notation (thanks to filterfalse).\n\nScripting:\n - added &option syntax for expressions (returns value of an option);\n - extended parser to support integer number constants and unary minus and\n   plus operators;\n - extended parser to support <, <=, >= and > comparison operators for strings\n   and integers.\n\nPerformance:\n - optimized file name comparison on sorting.\n\nDocumentation:\n - documented special bookmarks.\n\nColor scheme related changes:\n - added sample light color scheme (provided by Daniel R., a.k.a. reicheltd);\n - added sample dark solarized color scheme (provided by Stéphane, a.k.a.\n   istib);\n - added zenburn color scheme (provided by Svyatoslav Mishyn, a.k.a. juef).\n\nTUI (Text User Interface):\n - handle backspace in preview window as terminal emulators do (thanks to Svenn\n   Are Bjerkem, a.k.a. svenn).\n\nOnly on Windows:\n - added handling of paths with backward slashes for :find/:locate/:grep/%M\n   menus on Windows (thanks to Robert Sarkozi);\n - fixed extending filetypes that are missing macro on Windows when cmd.exe\n   shell is used (thanks to Daniel Polanco, a.k.a. dlpolanco);\n - fixed work with filenames contining special symbols on Windows with cmd.exe\n   shell (thanks to Daniel Polanco, a.k.a. dlpolanco);\n - fixed testing whether application uses GUI on Windows when path contains\n   spaces;\n - fixed extra escaping on prompt filename completion on Windows.\n\nOther changes:\n - added cancellation handling for file system operations and invocations of\n   external applications (works best on *nix systems) (thanks to Milan Svoboda,\n   a.k.a. tex);\n - made bookmarks merging smarter by storing timestamps.  Removing bookmarks\n   now works as expected.  Bookmarks overwriting by another instance shouldn't\n   happen anymore.  (Thanks to Michael Maddern, a.k.a. madders.)\n\nMajor fixes:\n - fixed file descriptor leak on finishing background tasks (thanks to\n   anonymous from linux.org.ru);\n - fixed several bugs that led to segmentation fault.\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 31, 2013\n================\n\nvifm v0.7.6 release\n-------------------\n\nNew minor version brings better integration with environment and external tools\nas well as enhances file filtering capabilities in several ways.  Apart from\nthat, old features were tweaked and some build issues and bugs were resolved.\nNew Win32 and Win64 single-executable (no DLLs) packages appear first time with\nthis release.\n\nThis time beta stage was quite fruitful.  Thanks to all who installed and tried\nbeta versions, and special thanks to filterfalse.\n\nMain changes:\n - added interactive local filter;\n - added external editing of command-line content with 'vicmd';\n - added integration with tmux;\n - added options to configure external commands for :apropos, :find, :grep\n   and :locate commands;\n - added desktop entry file (\\*nix only) and updated application icon;\n - fixed build for some combinations of OS/environments (OS X, 32/64-bit\n   cygwin, Windows).\n\nNotice: if you mapped q key to something, new q:, q/, q? and q= keys won't be\navailable; suggested solution is to change the mapping to qq.\n\nMore detailed list of changes.\n\nPerformance:\n - increased performance of (re)loading content for view mode (thanks to Robert\n   Sarkozi).\n\nKey bindings:\n - process [count] passed to gUU, gU<selector>, gUgU, gu<selector>, guu and gugu\n   commands;\n - made all Ctrl-W x keys available in view mode (thanks to filterfalse);\n - changed meaning of the R key in view mode from redrawing view to reloading it\n   preserving scroll position (thanks to Robert Sarkozi).\n\nNormal and visual modes related changes:\n - added q:, q/, q? and q= keys (q= is defined for normal mode only) to prompt\n   for command-line in external editor;\n - added \"=\" normal mode key, which activates file name filtering.\n\nCommand-line mode related changes:\n - added \"=\" and \"filter\" values for :history command, to show history of local\n   filter;\n - added Ctrl-G key to start editing in external editor (for editing command,\n   search pattern and file renames);\n - added optional argument for :invert command to control more kinds of\n   inversion (thanks to filterfalse);\n - better order of command validity checks;\n - show better error message on unmatched quotes in command arguments;\n - store cancelled prompt input in prompt history;\n - check destination path existence before changing directory to it on :sync\n   command;\n - use last search pattern as filename filter when :filter command gets an empty\n   argument (:filter//, :filter\"\", :filter'') (thanks to filterfalse);\n - match only filename against pattern in :fileviewer instead of full path.\n\n:set command and options:\n - added 'aproposprg', 'findprg', 'grepprg' and 'locateprg' options to specify\n   external commands format;\n - added \"fhistory\" to 'vifminfo', which controls storing of local filter\n   history;\n - added \"f\" flag to 'cpoptions' option.  It controls initial state of filename\n   filter inversion for :filter[!] {regex} command (thanks to filterfalse);\n - from now on not absolute paths for the 'fusehome' options are rejected;\n - expand environment variables in values of the 'fusehome' and 'trashdir'\n   options (thanks to filterfalse);\n - more adequate reaction on setting 'trashdir' option to wrong value;\n - do not reset selection on search when 'hlsearch' is reset (thanks to\n   filterfalse).\n\nFile filtering:\n - distinguish files and directories in filename filter by appending a slash to\n   names of directories;\n - separated file name filter into manual and automatic, mainly for convenience.\n\nTUI (Text User Interface):\n - preserve current cursor position on view resorting;\n - force split-view when two paths are specified on command-line (thanks to\n   filterfalse);\n - consider 'classify' option on displaying file name in the status bar (thanks\n   to Thomas Nemeth).\n\nFor Vim:\n - added syntax and filetype plugins for command-line editing buffers (thanks to\n   filterfalse);\n - updated syntax file to highlight more elements (thanks to filterfalse).\n\nOnly on Windows:\n - filter files in case insensitive way on Windows;\n - don't wait finishing of GUI applications on Windows (thanks to Robert\n   Sarkozi).\n\nOther changes:\n - added integration with tmux (thanks to Seth VanHeulen, a.k.a. svanheulen);\n - added desktop entry file (thanks to Richard Benson);\n - added merge option for name conflict resolution, which allows for merging two\n   directories overwriting files with matching names;\n - updated application icon (thanks to Richard Benson for making it);\n - don't overwrite directory stack stored in vifminfo on exit unless it was\n   changed in current session;\n - improved documentation on several subjects;\n - display error after sourcing file with unmatched :if/:endif\n   statements (thanks to filterfalse).\n\nMajor fixes:\n - fixed configuration when wcscasecmp(), wcsncasecmp() or set\\_escdelay()\n   functions is not available (thanks to Russell Urquhart);\n - fixed reserving of about 1 GiB piece of memory on 256-color terminals (sorry\n   about that);\n - fixed running of executable with symbols that require escaping in their\n   name (\\*nix only).  Strangely enough, it wasn't noticed before;\n - fixed terminal hang after executing several external commands in a\n   row (thanks to filterfalse);\n - fixed search of the first element in file list when displaying of parent\n   directory is disabled;\n - fixed fails on running executables when 'fastrun' option is on (thanks to\n   MadMaverick9).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 24, 2013\n================\n\nvifm v0.7.6 beta testing continued\n----------------------------------\n\nFirst beta version revealed some issues with new functionality and\ndegradation of previously existing features.  That's why second beta\nversion is released.  Included fixes primary target Windows platform,\nbut some of them are related to \\*nix systems as well.\n\nThanks to filterfalse and Robert Sarkozi for their help in finding and\nsolving those issues.\n\nAdditionally, Win64 build is available now.\n\nSee change log for quite short list of fixes and updates.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 17, 2013\n================\n\nvifm v0.7.6 beta testing has started\n------------------------------------\n\nNew minor version brings better integration with environment and external tools\nas well as enhances file filtering capabilities in several ways.  Apart from\nthat, old features were tweaked and some build issues and bugs were resolved.\nNew Win32 single-executable (no DLLs) package appears first time with this\nrelease, Win64 package might also be available a bit later.\n\nThe beta stage will last about two weeks.  In case any serious bugs are found\nduring this period, another beta version might be released.\n\nMain changes:\n - added interactive local filter;\n - added external editing of command-line content with 'vicmd';\n - added integration with tmux;\n - added options to configure external commands for :apropos, :find, :grep\n   and :locate commands;\n - added desktop entry file (\\*nix only) and updated application icon;\n - fixed build on some versions of OS X.\n\nNotice: if you mapped q key to something, new q:, q/, q? and q= keys won't be\navailable; suggested solution is to change the mapping to qq.\n\nMore detailed list of changes.\n\nPerformance:\n - increased performance of (re)loading content for view mode (thanks to Robert\n   Sarkozi).\n\nKey bindings:\n - process [count] passed to gUU, gU<selector>, gUgU, gu<selector>, guu and gugu\n   commands;\n - made all Ctrl-W x keys available in view mode (thanks to filterfalse);\n - changed meaning of the R key in view mode from redrawing view to reloading it\n   preserving scroll position (thanks to Robert Sarkozi).\n\nNormal and visual modes related changes:\n - added q:, q/, q? and q= keys (q= is defined for normal mode only) to prompt\n   for command-line in external editor;\n - added \"=\" normal mode key, which activates file name filtering.\n\nCommand-line mode related changes:\n - added \"=\" and \"filter\" values for :history command, to show history of local\n   filter;\n - added Ctrl-G key to start editing in external editor (for editing command,\n   search pattern and file renames);\n - added optional argument for :invert command to control more kinds of\n   inversion (thanks to filterfalse);\n - better order of command validity checks;\n - show better error message on unmatched quotes in command arguments;\n - store cancelled prompt input in prompt history;\n - check destination path existence before changing directory to it on :sync\n   command;\n - use last search pattern as filename filter when :filter command gets an empty\n   argument (:filter//, :filter\"\", :filter'') (thanks to filterfalse);\n - match only filename against pattern in :fileviewer instead of full path.\n\n:set command and options:\n - added 'aproposprg', 'findprg', 'grepprg' and 'locateprg' options to specify\n   external commands format;\n - added \"fhistory\" to 'vifminfo', which controls storing of local filter\n   history;\n - added \"f\" flag to 'cpoptions' option.  It controls initial state of filename\n   filter inversion for :filter[!] {regex} command (thanks to filterfalse);\n - from now on not absolute paths for the 'fusehome' options are rejected;\n - expand environment variables in values of the 'fusehome' and 'trashdir'\n   options (thanks to filterfalse);\n - more adequate reaction on setting 'trashdir' option to wrong value;\n - do not reset selection on search when 'hlsearch' is reset (thanks to\n   filterfalse).\n\nFile filtering:\n - distinguish files and directories in filename filter by appending a slash to\n   names of directories;\n - separated file name filter into manual and automatic, mainly for convenience.\n\nTUI (Text User Interface):\n - preserve current cursor position on view resorting;\n - force split-view when two paths are specified on command-line (thanks to\n   filterfalse);\n - consider 'classify' option on displaying file name in the status bar (thanks\n   to Thomas Nemeth).\n\nFor Vim:\n - added syntax and filetype plugins for command-line editing buffers (thanks to\n   filterfalse);\n - updated syntax file to highlight more elements (thanks to filterfalse).\n\nOnly on Windows:\n - filter files in case insensitive way on Windows;\n - don't wait finishing of GUI applications on Windows (thanks to Robert\n   Sarkozi).\n\nOther changes:\n - added integration with tmux (thanks to Seth VanHeulen, a.k.a. svanheulen);\n - added desktop entry file (thanks to Richard Benson);\n - added merge option for name conflict resolution, which allows for merging two\n   directories overwriting files with matching names;\n - updated application icon (thanks to Richard Benson for making it);\n - don't overwrite directory stack stored in vifminfo on exit unless it was\n   changed in current session;\n - improved documentation on several subjects.\n\nMajor fixes:\n - fixed configuration when wcscasecmp(), wcsncasecmp() or set\\_escdelay()\n   functions is not available (thanks to Russell Urquhart);\n - fixed reserving of about 1 GiB piece of memory on 256-color terminals (sorry\n   about that);\n - fixed running of executable with symbols that require escaping in their\n   name (\\*nix only).  Strangely enough, it wasn't noticed before;\n - fixed terminal hang after executing several external commands in a\n   row (thanks to filterfalse);\n - fixed search of the first element in file list when displaying of parent\n   directory is disabled;\n - fixed fails on running executables when 'fastrun' option is on (thanks to\n   MadMaverick9).\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMay 10, 2013\n============\n\nvifm v0.7.5 release\n-------------------\n\nNew version adds one major feature (parsing of escape codes), set of\nimprovements for existing ones and fixes for bugs.  There are also some changes\nin build system and new extra files bundled with vifm.\n\nMain changes:\n - removed using of libtool in build process on *nix-like systems;\n - added parsing of escape codes for the preview pane and less-like view;\n - added expand() builtin function;\n - added Gentoo ebuild and sample color schemes;\n - added macros that are expanded to register's content;\n - added dynamic loading of xlib;\n - added 'shortmess' option;\n - added pausing of shell on external commands fails on Windows;\n - fixed build issues on FreeBSD and OS X systems;\n - fixed for redrawing and searching in less-like mode;\n - fixed issues with :help command on Windows.\n\nMore detailed list of changes.\n\nConfiguration:\n - added --without/[with]-dyn-X11 flag to the configure script to control\n   static/dynamic linking against libX11 library.  Thanks to Hendrik Jaeger\n   (a.k.a. henk) for the idea;\n - don't use libtool in build process on *nix platforms (thanks to Merovius).\n\nDocumentation:\n - slightly updated plugin related documentation.\n\nMacros:\n - added macros that are expanded to register's content (thanks to Florian\n   Baumann, a.k.a. derflob).\n\n:set command and options:\n - added 'shortmess' option and its first flag: \"T\" to shorten long status bar\n   messages (thanks to ranousse);\n - added \"perms\" sorting key on *nix (proposed by Daniel Dettlaff, a.k.a.\n   dmilith);\n - added new type of option (charset) and used it for 'cpoptions' and\n   'shortmess' options;\n - made 'slowfs' option actually work on OS X (thanks to Daniel Dettlaff,\n   a.k.a. dmilith).\n\nColor scheme related changes:\n - added sample color schemes (proposed by Daniel Dettlaff, a.k.a. dmilith);\n - don't fallback to default colors on try to switch to a colorscheme, which is\n   not supported by terminal.\n\nTUI (Text User Interface):\n - added parsing of escape codes in the preview pane;\n - added parsing of escape codes in explore (less-like) mode;\n - don't redraw file list for explore window on resize;\n - less updates for window in explore mode on resize.\n\nMenus and dialogs:\n - changed the way title of the permissions dialog is composed.\n\nCommand-line mode related changes:\n - allowed exclamation mark for the :sync command (to force synchronization of\n   cursor position when used without arguments);\n - don't store last command-line command for the dot normal mode command\n   between sessions.  Also it doesn't depend on command-line history anymore\n   and can be used with completely disabled history;\n - made :execute process its arguments just like :echo command (thanks to\n   Daniel Dettlaff, a.k.a. dmilith, which made me discover old behaviour);\n - don't accept arguments to the :help command when 'vimhelp' option is off.\n\nOnly on Windows:\n - pause on failed execution of a help command.  Thanks to filterfalse;\n - pause when execution of shell command fails (e.g. on\n   `:!foobar-does-not-exist`).\n\nOther changes:\n - added Gentoo ebuild.  Thanks to Oleg Gordienko (a.k.a. gordio);\n - added expand() builtin function to expand macros (thanks to Sebastian\n   Cyprych for the use case);\n - less-like mode now highlights multiple matches in a line;\n - less-like mode is now updated immediately when one changes 'wrap' option;\n - save dot files filter state in vifminfo (thanks to Daniel Dettlaff, a.k.a.\n   dmilith).\n\nMajor fixes:\n - building on FreeBSD and OS X (thanks to Daniel R., a.k.a. r1chelt, and\n   Daniel Dettlaff, a.k.a. dmilith);\n - various changes in configuration using autotools;\n - removed using of libtool in build process on *nix-like systems;\n - vifminfo file update on Windows (broken in 0.7.4b);\n - various issues with displaying wide characters (e.g. Chinese);\n - ctrl-W H/J/K/L shortcuts and less-like view;\n - issues with calling Vim on :help command.  Thanks to filterfalse.\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nApril 22, 2013\n==============\n\nvifm v0.7.5 beta testing has started\n------------------------------------\n\nNew version adds one major feature (parsing of escape codes), set of\nimprovements for existing ones and fixes for bugs.  There are also some\nchanges in build system and new extra files bundled with vifm.\n\nThe beta stage will last about two weeks.  In case any bugs are found\nduring this period, another beta version will be released.\n\nMain changes:\n - removed using of libtool in build process on *nix-like systems;\n - added parsing of escape codes for the preview pane and less-like view;\n - added expand() builtin function;\n - added Gentoo ebuild and sample color schemes;\n - added macros that are expanded to register's content;\n - added dynamic loading of xlib;\n - added 'shortmess' option;\n - fixed build issues on FreeBSD and OS X systems;\n - fixes for redrawing and searching in less-like mode.\n\nMore detailed list of changes.\n\nConfiguration:\n - added --without/[with]-dyn-X11 flag to the configure script to control\n   static/dynamic linking against libX11 library.  Thanks to Hendrik Jaeger\n   (a.k.a. henk) for the idea;\n - don't use libtool in build process on *nix platforms (thanks to Merovius).\n\nDocumentation:\n - slightly updated plugin related documentation.\n\nMacros:\n - added macros that are expanded to register's content (thanks to Florian\n   Baumann, a.k.a. derflob).\n\n:set command and options:\n - added 'shortmess' option and its first flag: \"T\" to shorten long status bar\n   messages (thanks to ranousse);\n - added \"perms\" sorting key on *nix (proposed by Daniel Dettlaff, a.k.a.\n   dmilith);\n - added new type of option (charset) and used it for 'cpoptions' and\n   'shortmess' options;\n - made 'slowfs' option actually work on OS X (thanks to Daniel Dettlaff,\n   a.k.a. dmilith).\n\nColor scheme related changes:\n - added sample color schemes (proposed by Daniel Dettlaff, a.k.a. dmilith);\n - don't fallback to default colors on try to switch to a colorscheme, which\n   is not supported by terminal.\n\nTUI (Text User Interface):\n - added parsing of escape codes in the preview pane;\n - added parsing of escape codes in explore (less-like) mode;\n - don't redraw file list for explore window on resize;\n - less updates for window in explore mode on resize.\n\nMenus and dialogs:\n - changed the way title of the permissions dialog is composed.\n\nCommand-line mode related changes:\n - allowed exclamation mark for the :sync command (to force synchronization\n   of cursor position when used without arguments);\n - don't store last command-line command for the dot normal mode command\n   between sessions.  Also it doesn't depend on command-line history anymore\n   and can be used with completely disabled history;\n - made :execute process its arguments just like :echo command (thanks to\n   Daniel Dettlaff, a.k.a. dmilith, which made me discover old behaviour).\n\nOther changes:\n - added Gentoo ebuild.  Thanks to Oleg Gordienko (a.k.a. gordio);\n - added expand() builtin function to expand macros (thanks to Sebastian\n   Cyprych for the use case);\n - less-like mode now highlights multiple matches in a line;\n - less-like mode is now updated immediately when one changes 'wrap' option;\n - save dot files filter state in vifminfo (thanks to Daniel Dettlaff, a.k.a.\n   dmilith).\n\nMajor fixes:\n - building on FreeBSD and OS X (thanks to Daniel R., a.k.a. r1chelt, and\n   Daniel Dettlaff, a.k.a. dmilith);\n - various changes in configuration using autotools;\n - removed using of libtool in build process on *nix-like systems;\n - vifminfo file update on Windows (broken in 0.7.4b);\n - various issues with displaying wide characters (e.g. Chinese);\n - ctrl-W H/J/K/L shortcuts and less-like view.\n\nSee change log for full list of changes and by whom they were suggested.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJanuary 21, 2013\n================\n\nvifm v0.7.4b release\n--------------------\n\nThis version is a minor bugfix release.  It doesn't contain any new\nfeatures.  The release fixes more than 17 bugs found since version\n0.7.4a.\n\nTwo weeks since beta version was published have passed.  Since no bugs\nwere reported, the beta version is now released as 0.7.4b without\nany changes except version number.\n\nFixes in this version are related to the following subjects:\n - interaction with the screen tool (thanks to Jing Liu);\n - working with registers (old, but unreported bugs);\n - rights elevation and dot directories on Windows;\n - processing of vifminfo file (thanks to Christoph, a.k.a informationen);\n - handling of colorscheme files (thanks to Charles Kauffman);\n - displaying of CJK characters (thanks to lcj);\n - 'classify' option (thanks to Thomas Nemeth).\n\nSee change log for full list of fixes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJanuary 7, 2013\n===============\n\nvifm v0.7.4b beta testing has started\n-------------------------------------\n\nThis version is a minor bugfix release.  It doesn't contain any new\nfeatures.  The release fixes more than 17 bugs found since version\n0.7.4a.\n\nBecause of promise not to release anything without beta-testing,\neven this bugfix release has a beta stage, which should last about\ntwo weeks. In case some bugs will be found, a second beta will be\nreleased in a week.\n\nFixes are related to the following subjects:\n - interaction with the screen tool (thanks to Jing Liu);\n - working with registers (old, but unreported bugs);\n - rights elevation and dot directories on Windows;\n - processing of vifminfo file (thanks to Christoph, a.k.a informationen);\n - handling of colorscheme files (thanks to Charles Kauffman);\n - displaying of CJK characters (thanks to lcj);\n - 'classify' option (thanks to Thomas Nemeth).\n\nSee change log for full list of fixes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 22, 2012\n================\n\nvifm v0.7.4a\n------------\n\n0.7.4 package contains configuration files of autotools of different\nversions.  As a result it's not always possible to build vifm 0.7.4 by\nrunning `./configure && make`.  The author is sorry about wasted time\nof users spent on building vifm with partially broken build system.\n\nAnyway this mistake has also a good point.  0.7.4a fixes several bugs,\nsome of which are related to new features.\n\nSee change log for full list of fixes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOctober 18, 2012\n================\n\nvifm v0.7.4\n-----------\n\n0.7.4 is a minor release, which improves existing features as well as adds\nsome new ones.\n\nThere are two main directions in which improvements were made.  One of them\nis TUI, which now has support of multiple columns and ls-like view as well as\ncustomizable file name decoration (prefix and suffix).  The second one is\nconnected with command interpreter, which now supports builtin functions,\nconditional operators and conditional execution of commands\n(using if-else-endif statements).  Additionally, vifm's memory footprint was\nmade smaller and running of programs associated with files made smarter\n(won't stop until existing program is found).\n\nMain changes:\n - new multicolumn view;\n - new ls-like view (see 'lsview' option) and related keys for it;\n - prefixes and suffixes of files of different types are configurable now;\n - smarter handling of file associations (now vifm will try to find existing\n   program);\n - some basic means to do scripting (if-else-endif statements, builtin\n   functions, comparison operators);\n - reduced history memory consumption;\n - better configure script, which now checks more stuff (and does it in a\n   more accurate way) needed to build vifm.\n\nMore detailed list of changes.\n\nConfiguration:\n - removed compile-time compatibility mode (the compatibility-mode switch),\n   now \"f\" flag in 'cpoptions' does the same;\n - added --without/[with]-X11 configure script option;\n - configure script now checks much more then before;\n - better make files (thanks to Hendrik Jaeger).\n\nOnly on Windows:\n - replaced gl normal mode mapping for Windows with gr because of conflict\n   (with 'lsview');\n - allow paths in :file[x]type command that contain spaces to be doublequoted\n   on Windows.\n\nNormal and visual modes related changes:\n - added Ctrl-W H/J/K/L normal mode keys;\n - added gh, gj, gk and gl keys for normal and visual modes;\n - added 0, ^ and $ keys for normal and visual modes, which also work as\n   selectors in normal mode.\n\nCommand-line mode related changes:\n - added Ctrl-T handling in command line to swap characters;\n - added Meta-. handling in command line to paste last parts of previous\n   commands;\n - added :echo command;\n - added :if, :else and :endif commands;\n - added support for `==` and `!=` operators;\n - added :normal command;\n - added mapping commands for view and menu modes;\n - changed relative path base for :split and :vsplit commands;\n - expand macros for user defined commands.\n\n:set command and options:\n - added 'viewcolumns' local option to control view columns;\n - added 'lsview' option to control ls-like view look;\n - added 'dotdirs' option to control visibility of \"../\" directory;\n - added 'classify' option to set prefixes and suffixes for different file\n   types;\n - added %E 'statusline' option macro, which means size of all selected files\n   or current file, if no files are selected;\n - added \"t\" flag to 'cpoptions' option (replaces compile-time compatibility\n   mode).\n\nCompletion:\n - added completion for :set option= even for options without variants;\n - complete only directory names for :split and :vsplit commands;\n - escape pipe character during :file completion;\n - complete :set for short and full option names like Vim does (e.g. 'so'\n   should be expanded to 'sort', not only 'scrolloff').\n\nTUI (Terminal User Interface):\n - added status bar messages for :apropos, :find and :locate commands;\n - flicker less on :restart command;\n - don't show Ctrl-C part in information message boxes where it doesn't make\n   sense;\n - reduce delay between terminal resize and TUI redrawing;\n - fixed background bold (light) colors in linux native console.\n\nColor scheme related changes:\n - added light versions of color names.\n\nKey bindings:\n - don't pause on '0' after Ctrl-W (count cannot start with zero);\n - multiply counts in front and in the middle of commands with Ctrl-W (as Vim\n   does);\n - multiply counts in front of command and its selector (as Vim does).\n\nOther changes:\n - added support for builtin functions and filetype() as the first one;\n - check current view of other pane on leaving FUSE mount directory an don't\n   unmount if that file system is still in use;\n - try the rest of the programs for an association when the default one isn't\n   found;\n - reduced memory consumption of view histories.\n\nAnd fixes of bugs and memory leaks.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 23, 2012\n=============\n\nvifm v0.7.3a\n------------\n\nIt happens some bugs are discovered just after making a new release.  And it\nhappened with vifm 0.7.3, which was tested, but apparently not enough.  So\n0.7.3a is a bugfix release, which contains fixes for one serious bug and\nseveral small ones as well as adds some more information to the documentation\nand very small enhancements.\n\nIf you would like to be notified about future releases of vifm or some\nimportant news related to vifm by email, consider subscribing to recently\ncreated vifm-announce@lists.sourceforge.net read-only mailing list.  You can\ndo this by following this link.\n\nThough this is a bugfix release it has some changes since v0.7.3 that should\nbe mentioned:\n\nCompletion:\n - better completion for :colorscheme command.\n\nDocumentation:\n - added a section about color schemes to the documentation;\n - documented that %m, %M, %s, %S and %i have bigger priority than &;\n - documented that %m, %M, %s, %S and %i are mutually exclusive;\n - documented treating of whitespace around option names in :set command.\n\n:set command and options:\n - allowed whitespace after option name in :set command;\n - added checks for correct value of 'tabstop' and 'timeoutlen' options;\n - reset 'columns' and 'lines' options to real number of columns;\n - reset value of 'scrolloff' option to zero on attempt to assign a negative\n   value to it;\n - faster execution of `:set sort=foo sortorder sortnumbers` in vifmrc.\n\nTUI (Terminal User Interface):\n - faster redrawing of status bar with \"-- VISUAL --\" message after \"Press\n   Enter\" message.\n\nCommand-line mode related changes:\n - expand tilde in the second argument of :colorscheme command;\n - forbid relative paths in :colorscheme command until vifm is completely\n   loaded;\n - pass range given to alias to an aliased command.\n\nPerformance:\n - faster Ctrl-W x, Ctrl-W o, Ctrl-W s, Ctrl-W v, Ctrl-W =, Ctrl-W <,\n   Ctrl-W >, Ctrl-W -, Ctrl-W +, Ctrl-W |, Ctrl-W _;\n - faster redraw on terminal resizing;\n - made file filtering using regular expressions work faster (matters when\n   directory contains several thousands files);\n - draw quickview on startup only once.\n\nNormal and visual modes related changes:\n - show correct number of selected files in visual mode after n and N keys.\n\nAnd bug fixes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 3, 2012\n============\n\nvifm v0.7.3 release\n-------------------\n\nIf you would like to be notified about future releases of vifm or some\nimportant news related to vifm by email, consider subscribing to recently\ncreated vifm-announce@lists.sourceforge.net read-only mailing list.  You can\ndo this by following this link.\n\nChanges since v0.7.2 in general:\n - removed support of moving items in the :file menu;\n - added description of :file programs;\n - improved messages in the TUI as well as it's redrawing in various\n   scenarios;\n - changed behaviour of Enter key on a selected directories;\n - better work with PATH environment variable.\n\nChanges since v0.7.2 in details:\n\nCompletion:\n - added completion for :copy, :clone, :move, :alink, :rlink and :rename\n   commands;\n - added completion for :touch and :mkdir commands;\n - added completion for :split and :vsplit commands.\n\nTUI (Terminal User Interface):\n - added Ctrl-L handling in file info (Ctrl-G) mode;\n - less blinking of the screen in various scenarios;\n - replace home directory with the tilde in terminal title;\n - corrected status bar messages about failed search;\n - better handling of multiline messages in status bar.\n\nNormal and visual modes related changes:\n - leave leading zeros on Ctrl-A/X commands;\n - added \"Y\" key to visual mode as an alias for \"yy\";\n - open selected directories with l or Enter keys.\n\nConfiguration:\n - added --enable-desktop-files (enabled by default) configure option.\n\nOnly on Windows:\n - allow bookmarking of host names on Windows (e.g. //ZX-SPECTRUM);\n - show host's root in history menu (e.g. //ZX_SPECTRUM);\n - made :fileviewer command work.\n\nMacros:\n - added macros expansion for :touch and :mkdir commands;\n - added %i macro to completely ignore output of external commands.\n\nCommand-line mode related changes:\n - added :finish command to use in sourced scripts;\n - improved :let command (allowed using of expressions at the right side of\n   the statement);\n - properly handle when user alters PATH environment variable using :let\n   command;\n - added description for :filetype, :filextype and :fileviewer commands;\n - save last typed but not executed command in command-line mode (this also\n   includes searches).\n\nMenus and dialogs:\n - removed possibility of moving items in :file menu;\n - added size of file in bytes in file info mode (Ctrl-G);\n - added q key to close menus.\n\nOther changes:\n - added notes about automatic FUSE mounts to the documentation;\n - now vifm removes scripts (`$VIFM/scripts/**`) from PATH for :shell command;\n - use common search history for normal, visual and menu modes;\n - increased directory modification stamp precision on Unix.\n\nPlus bug fixes of course.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFebruary 19, 2012\n=================\n\nvifm v0.7.2\n-----------\n\nChanges since v0.7.1 :set command and options:\n - added 'rulerformat' option;\n - added 'statusline' option;\n - added 'columns' and 'lines' options;\n - added 'trashdir' option (by Chris Skalenda).\n\nCommand-line mode related changes:\n - added optional argument for the :sync command;\n - added support for running :cmap, :nmap and :vmap with one argument;\n - added recursive mode for :rename command;\n - added :let and :unlet commands to work with environment variables;\n - added :windo and :winrun commands;\n - never change active view on :restart command;\n - allowed using of macros with :clone command.\n\nAngle bracket notation:\n - added <esc>.\n\nOnly on Windows:\n - added embedded icon;\n - added file properties dialog;\n - show \"Sorting directory...\" message only for big directories;\n - change console title;\n - made determining of home directory more intelligent;\n - made 'sortnumbers' work;\n - avoid unnecessary directory view updates (like after C key);\n - allow using of backward slashes in :rename command;\n - let :s and :gs filename modifiers change slash type;\n - properly quit vifm on console closing;\n - added :u filename modifier for UNC computer name;\n - added file attributes in status bar and file info view.\n\nNormal and visual modes related changes:\n - added ctrl-w p, ctrl-w b and ctrl-w t normal mode keys.\n\nConfiguration:\n - added $VIFM and $MYVIFMRC environment variables;\n - now vifm will add all subdirectories of ~/.vifm/scripts to PATH;\n - better check for old-style color schemes file.\n\nFor Vim:\n - added g:vifm_exec_args variable for the plugin.\n\nOther changes:\n - added --select command line argument;\n - added --remote command line argument;\n - added support for character classes in globals;\n - restore terminal title on exit;\n - reset dot and filename filters if they hide bookmarked file;\n - made vifm react faster on external changes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNovember 15, 2011\n=================\n\nvifm v0.7.1\n-----------\n\nMajor changes since v0.7.0:\n - changed meaning of :split command (so replace it with :vsplit in your\n   vifmrc);\n - added backgrounding of :copy, :move, :delete, ga and gA commands;\n - added horizontal splitting and keys to control size of the panes;\n - added less-like view mode;\n - made some changes to the Vim plugin;\n - windows version was made much more usable.\n\nChanges in details\n\n:set command and options:\n - added 'scrollbind', 'wrapscan', 'incsearch', 'cpoptions', 'laststatus' and\n   'tabstop' options;\n - make 'ignorecase' and 'smartcase' affect f and F;\n - don't use position in the view on ' key, when 'autochpos' is off.\n\nAngle bracket notation:\n - added support for more angle bracket notations in mappings (<bs>, <tab>,\n   <s-tab>, <home>, <end>, <left>, <right>, <up>, <down>, <pageup>,\n   <pagedown>, <del>, <delete>, <m-a>, <m-b>, ..., <m-z>);\n - added <s-f1>, ..., <s-f12>, <a-f1>, ..., <a-f12>, <c-f1>, ..., <c-f12>,\n   only for Windows;\n - added <a-X> as synonyms for <m-X> (where X is a key);\n - added angle bracket notation <c-s-X> and <s-c-X> as synonyms for <c-X>;\n - added Ctrl + Alt + letter combinations, only for Unix.\n\nCommand-line mode related changes:\n - added :split! to toggle between only and split view;\n - added :file to quick run one of associated commands;\n - added backgrounding of :copy, :move and :delete commands;\n - added :delete!;\n - added :execute, :source commands;\n - added support for using environment variables as :cd or :pushd arguments;\n - added support for :substitute command without arguments;\n - added notation to run internal vifm commands from user defined commands;\n - allowed exclamation mark for :view command (to prevent view closing);\n - allowed question mark for :mark command (to prevent bookmark overwriting).\n\nCompletion:\n - added completion of environment variables (:cd, :pushd, :! and :!!).\n\nNormal and visual modes related changes:\n - added '(' and ')' keys for normal and visual modes;\n - added Ctrl-A and Ctrl-X keys (normal and visual modes);\n - added e key for normal mode;\n - made i key work in visual mode;\n - made ga and gA work in background;\n - better cW command;\n - clean selection after i key in normal mode.\n\nMenus and dialogs:\n - added year in the file info dialog (on Ctrl-G);\n - added zh, zl, zH and zL keys for the menus (horizontal scrolling);\n - added ZQ and ZZ keys to close menus and dialogs.\n\nTUI (Terminal User Interface):\n - added horizontal splitting of views (changed :split command, added :vsplit\n   command, changed Ctrl-w s mapping);\n - added Ctrl-w j and Ctrl-w k keys;\n - added Ctrl-w <, Ctrl-w >, Ctrl-w + and Ctrl-w - keys;\n - added Ctrl-w | and Ctrl-w _ keys.\n\nFile cloning:\n - don't change file extension on cloning;\n - move cursor to clone of current file after file cloning;\n - smarter file name generation on cloning;\n - made C command accept count.\n\nOnly on Windows:\n - added kind of portable mode on Windows;\n - make macros expand to paths with forward slashes on Windows;\n - better check if directory was changed on Windows;\n - show all shares on Windows (including private ones);\n - fixed a lot of bugs on Windows.\n\nFor Vim:\n - added g:vifm_exec variable for the plugin;\n - added ftdetect plugin for vim (now there is no need for modelines or\n   changing .vimrc);\n - allowed arguments for plugin's commands;\n - added more tags to the documentation in vim-help format.\n\nOther changes:\n - added Ctrl-n (j) and Ctrl-p (k) keys;\n - added view mode (see documentation);\n - added -c and + command line arguments;\n - added support of [count] for / and ?;\n - don't clear terminal title on exit;\n - warn about symbolic links are not available;\n - don't show current file as selected after executing a :command and resizing\n   terminal while it works;\n - show progress message (e.g. on :copy) after terminal is resized;\n - made some messages about operations more correct.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSeptember 29, 2011\n==================\n\nvifm v0.7.0 is out!\n-------------------\n\nAnd as it was promised vifm is back on Windows!\n\nThis release breaks compatibility a little, which was done intentionally to\nmake vifm more vi-like.  I hope that won't make too much discomfort for users,\nat least I tried to reduce discomfort as much as I can.  In particular, an\nutility program named vifmrc-converter is shipped with vifm now.  It's main\npurpose is to automatically convert configuration files (vifmrc, vifminfo,\nstartup and colorschemes files) to new format.  You don't have to run it by\nyourself, vifm will do this for you after asking some questions at first\nstartup.\n\nHere are the main changes by categories.\n\nConfiguration:\n - changed format of ~/.vifm/vifmrc and ~/.vifm/vifminfo files;\n - removed support of startup file, all commands will be automatically moved\n   to the vifmrc file;\n - added support for multi line commands in the vifmrc (ex-startup) file;\n - now users can place scripts for vifm to ~/.vifm/scripts, vifm modifies its\n   PATH environment variable to let user run scripts without specifying full\n   path;\n - now vifm also accepts paths to files as the startup arguments and\n   --no-configs option.\n\nNormal and visual modes related changes:\n - added gf, al, rl and cl commands for dealing with symbolic links;\n - added gu and gU commands (and their variations);\n - added gs command to work with t selection like gv with visual mode\n   selection;\n - made C handle selection, check read permission and work in visual mode;\n - changed the way l key handles selection and made it work in visual mode.\n\nCommand-line mode related changes:\n - removed :cmdhistory command, use :history cmd or \":history :\" instead;\n - added :noremap, :cnoremap, :nnoremap, :vnoremap, :unmap, :cunmap, :nunmap\n   and :vunmap commands;\n - added :filetype, :filextype and :fileviewer commands;\n - added :find and :grep commands;\n - added :substitute and :tr commands;\n - added :clone, :copy, :move, :alink and :rlink commands;\n - added :chmod, :chown, :mkdir and :touch commands;\n - added :mark, :delmarks, :comclear, :highlight, :restart and :messages\n   command;\n - documented command line keys and marked which :commands accept ranges;\n - now vifm understands user name after tilde in paths;\n - let user use short forms of user-defined commands with \"!\".\n\nCompletion:\n - added completion for co, cg, cw and cW commands;\n - sort completion items;\n - shift-Tab command line key to perform completion in reversed order;\n - added Ctrl-_ command-line key to reject completion.\n\nMacros:\n - added filename modifiers (:p, :~, :., :h, :t, :r, :e, :s and :gs);\n - added %S and %M macros;\n - added macros that are expanded to paths enclosed in double quotes (%\"c,\n   %\"C, %\"f, %\"F, %\"b, %\"d and %\"D);\n - handle %m, %M, %s and %S in the :! command.\n\n:set command and options:\n - removed 'savelocation' option. Use :set vifminfo+=dhistory;\n - added 'wildmenu', 'ignorecase', 'smartcase', 'hlsearch', 'vifminfo',\n   'shell', 'vixcmd', 'scrolloff', 'timeoutlen', 'autochpos','gdefault',\n   'slowfs' options;\n - added abbreviations for options;\n - added support for using ':' instead of '=';\n - support for ':set' and ':set all' commands;\n - made ':set option' equivalent to ':set option?' for all types of options\n   except boolean;\n - made 'history' option control search, command line and prompt histories;\n - better 'sort' option (support by multiple sort keys, added iname key);\n - made 'vicmd' and 'vixcmd' understand & at the end;\n - :set command now understands & (reset option to its default value).\n\nColor scheme related changes:\n - all color schemes are stored under the ~/.vifm/colors/ directory, each\n   color scheme in its own file;\n - color scheme file is a list of commands. All command-line commands are\n   handled, but only :highlight commands are really useful here;\n - added colors for current top line, other top line, status line, error\n   messages in the status bar, broken links and FIFO files;\n - now maximum number of color schemes is unlimited even on 8-color terminals\n   (there was a limit of 5 color schemes for such terminals before).\n\nOnly on Windows:\n - gl normal mode key;\n - UNC names support;\n - :volumes command.\n\nFor Vim:\n - added g:vifm_term variable for the plugin;\n - added vifmrc syntax and filetype files for Vim;\n - tags for some items in the help file for Vim.\n\nOther changes:\n - let user go through directories with execute access, but no read access;\n - made filetype understand star as in globals;\n - removed duplicates from command and directory history;\n - made directory, command line and search histories as well as dirstack and\n   registers persistent (when 'vifminfo' option contains appropriate value);\n - show search matches in the menus;\n - now keys can be used in mappings and mapping of keys like y, d or m works\n   right;\n - modify terminal emulator title;\n - don't quit when terminal is too small (print message and ignore input);\n - fixed bugs.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJuly 20, 2011\n=============\n\nvifm-0.6.3\n----------\n\nMain changes in vifm-0.6.3:\n - added another format for filetype (FUSE_MOUNT2);\n - added %CLEAR FUSE mount parameter.  See vifmrc for details;\n - added %c and %C macros (current file of current and other directories, not\n   selected file or files);\n - added :rename command (opens vi to let you edit names for selected file or\n   files);\n - added undo list (u, Ctrl-R and :undolist commands; 'undolevels' option);\n - added small FAQ;\n - added gA command (like ga, but forces update);\n - added whole line comments (can be useful in startup file);\n - added :dirs command (shows directory stack);\n - added 'sortnumbers', 'followlinks', 'fusehome', 'confirm' and 'history'\n   options;\n - added dialog to ask user about backwards range in command;\n - added some vi like keys for menus, dialogs and visual mode;\n - added 'savelocation' option (start vifm in the last visited directory)\n   which is off be default thus returning old behaviour when vifm is started\n   with no argument;\n - added gv command for visual mode;\n - enter key in visual mode will leave it saving selection;\n - now location of panes is saved in ~/.vifm/vifminfo instead of\n   ~/.vifm/vifmr;\n - now builtin keys can be remapped;\n - don't replace escape sequences for :! and :!! commands;\n - more vi like completion and history in command line and search;\n - some improvements for :filter command;\n - some improvements for command ranges;\n - now ranges modify %f macro for user defined commands;\n - made f and F work with wide characters;\n - made option parser handle quotes;\n - rename files in Trash (to avoid name conflicts);\n - don't terminate background processes on vifm exit;\n - remove files that are in the Trash on :empty command from all registers;\n - don't ignore Ctrl-Z;\n - don't clear screen on shellout;\n - updated Vim plugin;\n - fixed a lot of bugs;\n\nSee ChangeLog for details.  Also see THANKS file that was added in this\nrelease.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 19, 2011\n=============\n\nvifm-0.6.2\n-----------\n\nThis release fixes some bugs and adds several commands for different modes.\n\nMain changes:\n - added map menus (run :cmap, :vmap, :nmap commands without arguments);\n - added :cmdhistory command;\n - added 'fastrun' option;\n - added o and O keys for Visual mode (go to other end of selection);\n - added gv Normal mode command;\n - added support for spaces and functional keys in mappings (<space> and\n   <f0> - <f63>);\n - added mimetype to fileinfo dialog;\n - added %b command macro;\n - implemented :yank and :colorscheme commands;\n - made filetype menu editable;\n - restore SIGINT (Ctrl+C) default behaviour on shellout;\n - replace escape sequences in quick view output with ^foo;\n - give options if a file already exists in destination directory;\n - unmount all FUSE mounts on exit;\n - more verbose version information;\n - added Ctrl-C key handling to error message dialog;\n - use file command when GTK+ and libmagic are disabled;\n - better error messages;\n - use ga command results to sort by size;\n - fixed paths in config.c to work with non standard install prefix;\n - fixed several bugs with command completion and terminal resizing.\n\nSee ChangeLog for details and AUTHORS for information about authors.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJune 11, 2011\n=============\n\nVifm-0.6.1 is available.\n------------------------\n\nWindows version remains unchanged for now.  I'm planning to use one code base\nfor both Unix and Windows platforms and it would take some time to do that.\n\nMajor changes since 0.5:\n - added support for user mappings;\n - added file selectors (like motions and text-objects);\n - improved sort dialog;\n - added filetype detection using GTK+ or libmagic (:file);\n - added directory stack (:pushd, :popd);\n - added completion for :! and :!! commands;\n - added custom file viewers (:view);\n - added startup file;\n - better utf8 support;\n - added :set command and options.\n\nSee ChangeLog for details.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAugust 7, 2009\n==============\n\nVifm-0.5 is available.\n----------------------\n\nThis release is mainly user contributed patches and a new port for Windows.\nA filetype setting was added to allow the mounting of files with fuse-zip and\nother filesystems based on fuse.  The :com input was changed to accept wide\ncharacters.  The Windows port is missing some of the features of the Unix\nversion but it is useful and stable enough for an initial release.  The\nfollowing commands were added in the Windows port:\n - :copy;\n - :move;\n - :volume - list mounted volumes.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 1.9833984375,
          "content": "Vifm - Vim-like file manager\n2001 - 2023\n\nVersion: 0.13\n\nThis file last updated: 04 April 2023\n\nBrief Description\n\n    Vifm is a Vim-like file manager with curses interface extended with some\n    useful ideas from mutt.  If you use Vim, Vifm gives you complete keyboard\n    control over your files without having to learn a new set of commands.  It\n    goes not just about Vim-like keybindings, but also about modes, options,\n    registers, commands and other things you might already like in Vim.\n\n    Just like Vim, Vifm tries to adhere to the Unix philosophy.  So instead of\n    working solutions which are set in stone user is provided with a set of\n    means for customization of Vifm to one's likings.  Though builtin\n    functionality should be enough for most of use cases.\n\nContacts\n\n    Website: https://vifm.info/\n    Wiki:    https://wiki.vifm.info/\n    Q&A:     https://q2a.vifm.info/\n\n    Bugs and feature requests can be reported at:\n    * https://github.com/vifm/vifm/issues\n    * https://sourceforge.net/p/vifm/_list/tickets\n\n    The preferred way of posting usage questions is Q&A site:\n    * https://q2a.vifm.info/\n\n    Bugs, suggestions and comments can also be communicated via email:\n    * xaizek@posteo.net\n\n    Read-only and very low traffic news mailing list is at:\n    * vifm-announce@lists.sourceforge.net\n    Subscription form for it is here:\n    * https://lists.sourceforge.net/lists/listinfo/vifm-announce\n\n    Repositories:\n    * https://sourceforge.net/projects/vifm/\n    * https://github.com/vifm/vifm\n\n    Vim plugin:\n    * https://github.com/vifm/vifm.vim\n\n    Collection of color schemes is available at:\n    * https://github.com/vifm/vifm-colors\n    Their previews can be found at:\n    * https://vifm.info/colorschemes.shtml\n\n    Configurations for iconic fonts:\n    * https://github.com/cirala/vifm_devicons\n    * https://github.com/yanzhang0219/dotfiles/tree/master/.config/vifm\n\n    Preview scripts:\n    * https://github.com/cirala/vifmimg\n    * https://github.com/eylles/vifm-sixel-preview\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2578125,
          "content": "# Vifm – Vim-like file manager\n\n![Vifm logo](data/graphics/vifm-96px.png)\n\n[![][AA]][A]  [![][FF]][F]  [![][UU]][U]  [![][SS]][S]\n\n_Latest release is 0.13.  This file last updated on 04 April 2023._\n\n## Brief Description ##\n\n**Vifm** is a curses based Vim-like file manager extended with some useful\nideas from mutt.  If you use Vim, Vifm gives you complete keyboard control\nover your files without having to learn a new set of commands.  It goes not\njust about Vim-like keybindings, but also about modes, options, registers,\ncommands and other things you might already like in Vim.\n\nJust like Vim, Vifm tries to adhere to the Unix philosophy.  So instead of\nworking solutions which are set in stone user is provided with a set of\nmeans for customization of Vifm to one's likings.  Though builtin\nfunctionality should be enough for most of use cases.\n\n## Resources and Contacts ##\n\n| Usage     | Link                     |\n| :-------: | :----:                   |\n| Website   | https://vifm.info/       |\n| Wiki      | https://wiki.vifm.info/  |\n| Q & A     | https://q2a.vifm.info/   |\n\n### Communication ###\n\n| Reason                                           | Channel                                                         |\n| :-------:                                        | :------:                                                        |\n| Bugs & Feature Requests                          | [GitHub][bugs-gh], [SourceForge][bugs-sf] or via [email][email] |\n| Preferred place for asking usage questions       | Posting on the [Q&A][q2a] site                                  |\n| Read-only and very low traffic news mailing list | [vifm-announce][list]                                           |\n\n### Other resources ###\n\n| Usage                     | Where to find                                                           |\n| :---:                     | :---:                                                                   |\n| Repositories              | [GitHub][repo-gh] and [SourceForge][repo-sf]                            |\n| Vim Plugin                | [Repository][vim-plugin]                                                |\n| Colorschemes (maintained) | [Repository][colors] and [colorscheme-previews][colorscheme-preview]    |\n| Devicons/favicons         | [[1]][devicons-1], [[2]][devicons-2]                                    |\n| vifmimg (image preview)   | [Repository][vifmimg] (using [überzug][ueberzug] to display the images) |\n| sixel image preview       | [Repository][sixel-preview] (for [Sixel][wiki-sixel]-capable terminals) |\n\n## Screenshots ##\n\n![Screenshot](data/graphics/screenshot.png)\n![Screenshot](data/graphics/screenshot2.png)\n\n## Getting Started ##\n\nA good idea for quick start might be skimming over [cheatsheet][cheatsheet] for\nthe main mode (that is Normal mode), reading some sections on basic usage on\n[the wiki][wiki-manual] and looking at sample configuration file (run\n`:edit $MYVIFMRC`).\n\n## License ##\n\nGNU General Public License, version 2 or later.\n\n[q2a]: https://q2a.vifm.info/\n[email]: mailto:xaizek@posteo.net\n[list]: https://lists.sourceforge.net/lists/listinfo/vifm-announce\n[vim-plugin]: https://github.com/vifm/vifm.vim\n[colors]: https://github.com/vifm/vifm-colors\n[colorscheme-preview]: https://vifm.info/colorschemes.shtml\n[devicons-1]: https://github.com/cirala/vifm_devicons\n[devicons-2]: https://github.com/yanzhang0219/dotfiles/tree/master/.config/vifm\n[vifmimg]: https://github.com/cirala/vifmimg\n[sixel-preview]: https://github.com/eylles/vifm-sixel-preview\n[ueberzug]: https://github.com/seebye/ueberzug\n[bugs-gh]: https://github.com/vifm/vifm/issues\n[bugs-sf]: https://sourceforge.net/p/vifm/_list/tickets\n[repo-gh]: https://github.com/vifm/vifm\n[repo-sf]: https://sourceforge.net/projects/vifm/\n[cheatsheet]: https://vifm.info/cheatsheets.shtml\n[wiki-manual]: https://wiki.vifm.info/index.php?title=Manual\n[wiki-sixel]: https://en.wikipedia.org/wiki/Sixel\n\n[AA]: https://ci.appveyor.com/api/projects/status/ywfhdev1l3so1f5e/branch/master?svg=true\n[A]: https://ci.appveyor.com/project/xaizek/vifm/branch/master\n[FF]: http://ci.vifm.info/badges/svg/master\n[F]: http://ci.vifm.info/\n[UU]: http://cov.vifm.info/badges/svg/master\n[U]: http://cov.vifm.info/branches/master\n[SS]: https://scan.coverity.com/projects/699/badge.svg\n[S]: https://scan.coverity.com/projects/vifm-vifm\n"
        },
        {
          "name": "THANKS",
          "type": "blob",
          "size": 5.7841796875,
          "content": "People named in this file helped make Vifm better, less buggy and more portable\nby providing their ideas, suggestions, bug reports and time for testing.\nNames (or nick names) are in alphabetical order.\n\nSpecial thanks go to these individuals who actively participated in development\nand testing of large number of features:\n * Alexandre Viau\n * Colin Cartade\n * filterfalse\n * Svyatoslav Mishyn (juef)\n\n45jqlakjrf87ayte7hy34ter4nguijauzl4eitk\n702b\nAbdó Roig-Maranges (aroig)\nAERDU\nafsheenb\nAfz\nagguser\naksr\nAlborz Jafari\nAlejandro Pulver (alepulver)\nAleksandr Vysotskiy (loki1368)\naleksejrs\nAlexandr Keyp (IAmKapuze)\nAlexandru Geana (alegen)\nAllan Neal (akneal)\nAllison McNulty (allora)\nAndreaHasani\nAndrew Lannan\nAndrew Savchenko\nAnton Gepting\nAnton Kochkov (XVilka)\nArtur F. (arturfabriciohahaedgy)\nArtur Shaik (artur-shaik)\nastrell\nAtomToast\nAurelio Sanabria (Sufrostico)\nAzin Sharaf\nb0x4it\nBadalisc\nBas Bossink (basbossink)\nBearcat M. Şándor (bearcatsandor)\nBehrooz\nBen Boeckel (mathstuf)\nBen Elan\nBen Lu (ayroblu)\nBernhard Grotz\nbitraid\nblurm\nBranislav Gerazov\nbratekarate\nBrian Callahan (ibara)\nBruce Hunsaker (hunsakerbn)\nbsdmp\nc02y\nCanute (canute24)\nCarl Mueller (carlmuller)\nCarlos Pita\nCharles Kauffman\nchelovechishko\nChema Alonso Josa (nimiux)\nchenrui333\nChongChong He\nChristian Fillion (cfillion)\nChristian Herdtweck\nChristoph (informationen)\nChristoph Schmidpeter\nckester\nCoco 17dec\nCoreCube\nCosmin Popescu (cosminadrianpopescu)\nCosmosAtlas\ndalvand\nDamian Ariel Perticone\ndancread\nDaniel Dettlaff (dmilith)\nDaniel J. Perry (BioBox)\nDaniel Mueller (d-e-s-o)\nDaniel Polanco (dlpolanco)\nDaniel R. (reicheltd)\nDavid Sierra DiazGranados (davidsierradz)\ndcb314\nDenis Protivenskiy\nDennis Hamester\nDennis Preiser (0xDP)\nDieSpinne\ndikiy\nDiogo Lemos (dmlemos)\nDmitry Frank (dimonomid)\ndmocek\neco0414\nEd Pavlov\nEgor Gumenyuk (boo1ean)\neinhander\nelricbk\nemarsk\nemorozov\nEvgeniy (iron-udjin)\nFactorial Prime\nFang (peromage)\nFlaviu Tamas (flaviut)\nFlorian Baumann (derflob)\nflux242\nFlyCat (yanwh0311)\nfogine\nfohrums\ngammaray\ngcmt\nGene Zharov\ngeo909\nGeorgeHJ\nggbari\nGomme Bidule\ngranderil\ngreye\nGrueslayer\ngruvw\ngtors\nGummyGun\nhacksenwerk\nHans Bieshaar\nHans Kristian Otnes Berge\nHans Petter Jansson (hpjansson)\nheelsleeh\nHendrik Jaeger (henk)\nHenrik Holst (hholst80)\nhofheinz\nhutou\niambumblehead\niboggs\ninfinitewhileloop\nInk (inknoir)\nintelfx\niSeeU816\nitshog\nIvanBarsukov\nj-xella\nJ. Reis\nJakob Helmecke\nJames Dietrich\nJanek (xeruf)\nJason Dreisbach (jtdreisb)\nJason W. Ryan\njc-SpaceXp\njcarreja\nJeet Sukumaran (jeetsukumaran)\nJeffrey C. Albro (jalbro)\nJeremy Yuan\nJiji\nJing Liu\nJiri Wiesner (jiriwiesner)\nJochen Schweizer (durcheinandr)\nJohannes (johannesmeng)\nJohn Fred Fadrigalan (cevhyruz)\nJohn Magolske\nJohn Shea (coachshea)\nJose Riha (jose1711)\nJoseph LP (ootput)\nJosh Wainwright (joshaw)\nJoshua Jensch (patroclos)\njsmith51 (metal.lunchbox)\njustpretending2\nkalterfive\nkangshugang\nKarol M. Langner (langner)\nkazufukurou\nKen Allen (cardboard42)\nKendrick Taylor (sixcircuit)\nkhaoos-abominable\nKonst Mayer (cdlscpmv)\nKornel\nks1c\nksandr1v\nlaggardkernel\nlandhar\nLarry Hynes (larryhynes)\nlaur89\nlcj\nLinArcX\nLomov Vladimir (lomov_vl)\nloongw\nLosiara\nLuka Markušić (mark2185)\nlyuts\nM Kelly\nm-fonseca\nm-kru\nMa_Sys.ma\nMadMaverick9\nmakijato\nMarcin Juszkiewicz (hrw)\nMarcin Kurczewski (rr-)\nMarcos Cruz\nMarius Schmidl\nMark S. (Markuzcha)\nMarkus Elfring (elfring)\nMartin Fischer\nMarton Balazs (balmar)\nmateusz28\nMatt Alexander (mattalexx)\nMatthias Braun (mb720)\nmaxigaz\nMelandel\nMerovius\nmhdzli\nMichael Corvin\nMichael Kopp\nMichael Maddern (madders)\nMichael Vetter (jubalh)\nmichaellee8\nMichal Belica (beli-sk)\nMichel Normand\nMichelle Bonk (unixtechie)\nMichka Popoff (iMichka)\nmidrare\nMiguel Madrid Mencía (mimame)\nMikeLemon\nMilan Svoboda (tex)\nMiles (pkordy)\nmini-turtle\nMiodrag Tokić (loonies)\nmrajner\nMuhammed Zakir\nMukund Mauji (maujim)\nmvucBmM0\nmwgkgk\nnandox\nnicodebo\nnobodyatandnothing\nNormen Hansen (normen)\nobtroston\noctos\nOleg Gordienko (gordio)\nOlmo Kramer\nOndrej Novy (onovy)\noo-\nopennota\nOskar Grunning (sQVe)\novk\np-kolacz\nPavel (neoascetic)\nPavel Platto (hinidu)\nPavneet Arora\nPaweł Smolak (psmolak)\nPeter Barnes\npetRUShka\nphanium (a.k.a. phanen)\nphijor\nPhil Runninger\nPhilipp\nPhilipp Glira (pglira)\nPierre Dorbais (chdorb)\nPierric82\npiotryordanov\nPRESFIL\nqadzek\nqinghao (haobug)\nqsmodo\nQuaddroo\nr0ck\nr44083\nrafasc\nRainer Suhm\nrandomizedthinking\nratnamhof\nrbong\nReece Petersen\nRegis\nret2src\nRetekBacsi\nReva Revadigar\nRichard Benson\nRobert Pergl (perglr)\nRobert Sarkozi\nRoger Bongers\nrok (aca)\nRoland\nRoman Plášil (Quiark)\nRoss Hadden (rosshadden)\nRR0925\nRuslan Osmanov (rosmanov)\nRussell Urquhart\nrwtallant13\nSafal Piya (mrsafalpiya)\nSanLe\nsanthoshr\nSassan Haradji (sassanh)\nSchmalzhaf Stefan\nSchrijvers Luc (Begasus)\nSearyBlue\nSebastian Cyprych\nSeok Won Lee (ijleesw)\nSergei Shilovsky\nSergei Trofimovich (trofi)\nSeth VanHeulen (svanheulen)\nShakil Akhtar\nsharklasers996\nShawn Young (drphys)\nShuo (shenqshuoh)\nsirex (sirexas)\nSitaram Chamarty\nsmoothdad\nsmpolymen\nspence91\nStas Malavin\nStas Panteleev\nStephano (cao)\nStephen Horst (sjhorst)\nStephen L. Holtz (stephenholtz)\nStillSteal\nStéphane (istib)\nsudo-nice\nSvadkos\nSvenn Are Bjerkem (svenn)\nsvenn71\nSvetlozar Iliev (asmodeus812)\nSylwia Ptasinska (SylEleuth)\nSzilárd Andai\ntagwint\nTaras Halturin (halturin)\ntcftbl\nth1rdey3\nThe Cyberduck\nTheMystifyingCharacter\ntheorlangur\nThomas Nemeth\nTiago\nTim Schaeffer (Numeromancer)\nToan Nguyen (toan2406)\nTobiSGD\nToby Hawkins (HawkinsT)\nTom Jansen\nTomek K. (TomiCode)\nTornaxO7\nTuan Bui (tuanbass)\ntYGjQCsvVI\nTykin\nTyler Spivey\nTypo\nuser451421541757324\nVadim Curcă\nValery Ushakov (nbuwe)\nverdult\nVigi\nVlad Glagolev (Stealth)\nvodbyte\nVon Welch\nvzel\nwillemw12\nXirui Zhao (xiruizhao)\ny2kbugger\nYang Zou\nyanzhang0219\nYuriy Artemyev (anuvyklack)\nYusuf Aktepe\nZeng (Bekaboo)\nzpxue\nZsolt Udvari (uzsolt)\nzsugabubus\nzzx41375004\nЕвгений Жаров (ezharov)\nСергей Соловьёв (Sergej Soloviov)\n高浩亮 (haolian9)\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 7.720703125,
          "content": "Basic things:\n  * Middle ellipsis breaks search highlighting.\n  * Improve ga and gA commands. (partially done)\n  * Queueing of file operations.\n  * Backgrounding of commands with job control (pause/resume/kill). (partially\n    done)\n  * Display parsing errors in dialog that indicate the error, don't rely on\n    status bar. (partially done)\n  * Remove trash option, since we have two commands for deletion.\n  * Filtering in menus.\n  * Process shell pause request for running in %s.\n  * Responsive TUI during blocking operations.\n  * Better failed operation messages. (partially done)\n  * Make status bar able to display error and info messages at the same time.\n  * Command to create multiple copies of selected file.\n\nDocumentation:\n  * State the need of *nix tools on Windows more explicitly.\n  * Document single and double quotes treating in the command-line mode.\n  * Divide docs into several files (as it's quite big now).\n  * Document name conflict resolution options.\n  * Add separate section on bookmarks.\n\nVi(m) specific features:\n  * Add support for directory completion for some of :set options.\n  * 'wildignore' ('wig') option\n  * Think about dot normal mode command.\n  * Completion based on global (when one enters pattern<tab>, e.g. *.c<tab>).\n  * Add support of n flag for :substitute command.\n  * :let mapleader and <leader> support.\n  * Ctrl-W F key.\n  * Add support of [count] for Ctrl-E/Ctrl-Y/H/M/L.\n  * nrformats option as in Vim.\n  * Better ranges (add support for search patterns).\n  * :map without arguments.\n  * Consider adding support for sequences like \\<cr>.\n  * Completion of first argument for :map commands.\n  * Make gU2U and similar commands work as in Vim.\n  * Change file list filters to use fold levels.\n  * /, ?, n, N as selectors.\n  * Fix '' to go back to all jumps G gg links (in one directory?).\n  * Maybe make zf and zd more Vim-like.\n  * Kinda macros like in Vim (qa ... q).\n  * Add =~ and !~ operators to expressions.\n  * Add titleold option.\n  * Support hex and octal numbers in :set.\n  * Maybe add %p macro to rulerformat option.\n\nWindows:\n  * Make properties dialog change file attributes recursively.\n  * Setup automatic Windows builds for master branch. (partially done)\n  * Make :chmod accept arguments.\n  * Add command to create .lnk files.\n  * Sort completion items ignoring their case on Windows.\n  * Handle numpad keys better, just like corresponding non-numpad keys.\n  * Make 'fastrun' understand file extensions on Windows (to ignore them).\n  * Make 'slowfs' option available on Windows\n  * Support more of pdcurses specific keys (e.g. <a-bs>, <s-bs>).\n  * Read first bytes of files and treat '#!' files as executable.\n\nPossible things to add:\n  * Add macros for marks.\n  * Make package for Cygwin.\n  * Position macros for user defined commands (%1, %2, ..., %9).\n  * Improve sorting (iext; choosing multiple sorting keys in dialog).\n    (partially done)\n  * Merged directory history for both panes.\n  * Wrapping of lines in the menus.\n  * Something like :g/.../com and :v/.../com in Vim.\n  * Don't reread config files on :restart for --no-configs session.\n  * Better renaming keys.\n  * Quad/multiple-views\n  * Add a general file preview script.\n  * A more convenient shortcut for the :filter command (at least :filt).\n  * Multiselect for items (menu and/or file list).\n  * inotify support on Linux. (partially done)\n  * :filter !filter-tool\n  * Use system wide mimetypes file. /etc/mailcap?\n  * Add \"|\" command to menu to process list with external tool.\n  * \"Blow directory\" command to replace directory with its content.\n  * Emacs like Dired or Helm incremental search and complete\n  * $_ env var and Alt-T combination as in bash shell.\n  * Templates for :touch.\n  * Reverse searching\n  * Add g/ and g? commands (search, but don't select files).\n  * Parse escape sequences in menus as in preview.\n  * Virtual File System - currently vifm can use FUSE to mount most file\n    systems.\n  * Something to control behaviour of menu picks.\n  * Like gv but to select just pasted files (gp?).\n  * g~<selector> and g?.\n  * Add trashes bang to list empty trashes or all of them.\n  * 'wildmode' option.\n  * Try to make it work in monochrome terminal.\n  * Support of command line arguments like ~/some.ssh/server/path (for FUSE).\n  * Treat `:filter pattern` as `:filter \\<pattern\\>`.\n  * Add search history for less-like mode.\n  * \"Rename existing file\" option on name conflicts.\n  * Make use of new job information in :jobs menu.\n  * Update visible symlinks in the other pane on updating current pane.\n  * Mouse support. (partially done)\n  * Possibility to make colorful background per column.\n  * Add a key to menu mode to repeat command and update menu.\n  * Consider preserving more on file copy (ACL, sparse files).\n  * File access history.\n  * Make :alink, :copy, ... accept globs (e.g. :co *.c).\n  * Highlight first line of command-editing buffer in different color.\n  * Output numbers on :hi if it were numbers in color scheme.\n\nQuestionable things:\n  * Full client-server operation of vifm (separate core from TUI).\n  * Maybe re-position cursor after :!ls%u.\n  * Remove items from :history command menu?\n  * Maybe use @path syntax to load custom views.\n  * Add + and - commands to undo by commands, not command groups.\n  * Modify marks on rename operations.\n  * Remove delay on file overwrite.\n  * Make :undolist more interactive.\n  * Add GUI interface one day.\n  * Use custom title for fuse mounts\n  * Option to trigger completion on slash in command-line.\n  * :edit - select the file after exiting editor?\n  * Ability to enter a mount with multiple vifm instances without\n    reunpacking/reconnecting.\n  * Consider conflict resolution for :move and alike.\n  * Make directory stack menu interactive?\n  * Tree-like view with support of foldings (for each directory). (partially\n    done)\n  * Consider adding \"da\" to remove all elements in :bmarks menu.\n  * Command like :run[ &].\n  * Add :set to menu mode command-line.\n  * Consider asking more often before performing file operations.\n  * Termcap or terminfo support for keybindings\n  * Shorten home path to ~ in item origins?\n  * Add :increment and :decrement commands.\n  * Consider changing \"dd\" to \"d\" in menus.\n  * Consider caching directory sizes in vifminfo.\n  * Shell alias execution (and completion) (partially done)\n  * Decide whether redefining command shortcuts like :fil should be allowed.\n  * Add a flag to 'grepprg' to enable parsing of `ag -H ...` output.\n  * Ability to hide command line when not active.\n  * Add tags to angle bracket maps in vimdoc.\n  * :alias\n  * Live preview of color schemes.\n  * A way to scroll suggestion results.\n  * More customizable trash.\n  * Add :toupper and :tolower functions.\n  * More trash-like trash.\n  * Accept regexps as second argument of :colo command.\n\nCode improvements:\n  * Write more tests. (partially done)\n  * Consider mentioning libncursesw5-dev in configuration error for\n    Debian-based systems.\n  * Reduce number of magic numbers. (partially done)\n  * Create separate utilities for engine/ part to make them self-contained.\n  * Fix code duplication related to composing of undo messages.\n  * Allow limiting input length for command-line prompt submode.\n  * Get rid of repeatable `menu->win_rows - 3` in menu.c.\n  * Separate filelist data from view data (extract into separate structure).\n  * Improve logging (print back trace in some cases, increase verbosity).\n  * Try reimplementing cmd_core.c:line_pos by calling dispatch_line.\n  * Write syscalls implementation of chgrp, chmod and chown.\n  * Sane asynchronous signals handling.\n  * Move startup and init code out of config.c and vifm.c to separate file.\n  * Consider using curses panes, not just windows.\n  * Show \"An error occurred\" message on fail to build menus.\n  * Consider not using {} initializer.\n  * Use timeout command to set time limit for tests on CI.\n  * Logging levels.\n"
        },
        {
          "name": "aclocal.m4",
          "type": "blob",
          "size": 47.595703125,
          "content": "# generated automatically by aclocal 1.17 -*- Autoconf -*-\n\n# Copyright (C) 1996-2024 Free Software Foundation, Inc.\n\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\nm4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])\nm4_ifndef([AC_AUTOCONF_VERSION],\n  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\nm4_if(m4_defn([AC_AUTOCONF_VERSION]), [2.72],,\n[m4_warning([this file was generated for autoconf 2.72.\nYou have another version of autoconf.  It may work, but is not guaranteed to.\nIf you have problems, you may need to regenerate the build system entirely.\nTo do so, use the procedure documented by the package, typically 'autoreconf'.])])\n\n# Copyright (C) 2002-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_AUTOMAKE_VERSION(VERSION)\n# ----------------------------\n# Automake X.Y traces this macro to ensure aclocal.m4 has been\n# generated from the m4 files accompanying Automake X.Y.\n# (This private macro should not be called outside this file.)\nAC_DEFUN([AM_AUTOMAKE_VERSION],\n[am__api_version='1.17'\ndnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to\ndnl require some minimum version.  Point them to the right macro.\nm4_if([$1], [1.17], [],\n      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl\n])\n\n# _AM_AUTOCONF_VERSION(VERSION)\n# -----------------------------\n# aclocal traces this macro to find the Autoconf version.\n# This is a private macro too.  Using m4_define simplifies\n# the logic in aclocal, which can simply ignore this definition.\nm4_define([_AM_AUTOCONF_VERSION], [])\n\n# AM_SET_CURRENT_AUTOMAKE_VERSION\n# -------------------------------\n# Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.\n# This function is AC_REQUIREd by AM_INIT_AUTOMAKE.\nAC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n[AM_AUTOMAKE_VERSION([1.17])dnl\nm4_ifndef([AC_AUTOCONF_VERSION],\n  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])\n\n# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n\n# Copyright (C) 2001-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n# $ac_aux_dir to '$srcdir/foo'.  In other projects, it is set to\n# '$srcdir', '$srcdir/..', or '$srcdir/../..'.\n#\n# Of course, Automake must honor this variable whenever it calls a\n# tool from the auxiliary directory.  The problem is that $srcdir (and\n# therefore $ac_aux_dir as well) can be either absolute or relative,\n# depending on how configure is run.  This is pretty annoying, since\n# it makes $ac_aux_dir quite unusable in subdirectories: in the top\n# source directory, any form will work fine, but in subdirectories a\n# relative path needs to be adjusted first.\n#\n# $ac_aux_dir/missing\n#    fails when called from a subdirectory if $ac_aux_dir is relative\n# $top_srcdir/$ac_aux_dir/missing\n#    fails if $ac_aux_dir is absolute,\n#    fails when called from a subdirectory in a VPATH build with\n#          a relative $ac_aux_dir\n#\n# The reason of the latter failure is that $top_srcdir and $ac_aux_dir\n# are both prefixed by $srcdir.  In an in-source build this is usually\n# harmless because $srcdir is '.', but things will broke when you\n# start a VPATH build or use an absolute $srcdir.\n#\n# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,\n# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:\n#   am_aux_dir='\\$(top_srcdir)/'`expr \"$ac_aux_dir\" : \"$srcdir//*\\(.*\\)\"`\n# and then we would define $MISSING as\n#   MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n# This will work as long as MISSING is not called from configure, because\n# unfortunately $(top_srcdir) has no meaning in configure.\n# However there are other variables, like CC, which are often used in\n# configure, and could therefore not use this \"fixed\" $ac_aux_dir.\n#\n# Another solution, used here, is to always expand $ac_aux_dir to an\n# absolute PATH.  The drawback is that using absolute paths prevent a\n# configured tree to be moved without reconfiguration.\n\nAC_DEFUN([AM_AUX_DIR_EXPAND],\n[AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\n# Expand $ac_aux_dir to an absolute path.\nam_aux_dir=`cd \"$ac_aux_dir\" && pwd`\n])\n\n# AM_CONDITIONAL                                            -*- Autoconf -*-\n\n# Copyright (C) 1997-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_CONDITIONAL(NAME, SHELL-CONDITION)\n# -------------------------------------\n# Define a conditional.\nAC_DEFUN([AM_CONDITIONAL],\n[AC_PREREQ([2.52])dnl\n m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],\n       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl\nAC_SUBST([$1_TRUE])dnl\nAC_SUBST([$1_FALSE])dnl\n_AM_SUBST_NOTMAKE([$1_TRUE])dnl\n_AM_SUBST_NOTMAKE([$1_FALSE])dnl\nm4_define([_AM_COND_VALUE_$1], [$2])dnl\nif $2; then\n  $1_TRUE=\n  $1_FALSE='#'\nelse\n  $1_TRUE='#'\n  $1_FALSE=\nfi\nAC_CONFIG_COMMANDS_PRE(\n[if test -z \"${$1_TRUE}\" && test -z \"${$1_FALSE}\"; then\n  AC_MSG_ERROR([[conditional \"$1\" was never defined.\nUsually this means the macro was only invoked conditionally.]])\nfi])])\n\n# Copyright (C) 1999-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n\n# There are a few dirty hacks below to avoid letting 'AC_PROG_CC' be\n# written in clear, in which case automake, when reading aclocal.m4,\n# will think it sees a *use*, and therefore will trigger all it's\n# C support machinery.  Also note that it means that autoscan, seeing\n# CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n\n\n# _AM_DEPENDENCIES(NAME)\n# ----------------------\n# See how the compiler implements dependency checking.\n# NAME is \"CC\", \"CXX\", \"OBJC\", \"OBJCXX\", \"UPC\", or \"GJC\".\n# We try a few techniques and use that to set a single cache variable.\n#\n# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was\n# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular\n# dependency, and given that the user is not expected to run this macro,\n# just rely on AC_PROG_CC.\nAC_DEFUN([_AM_DEPENDENCIES],\n[AC_REQUIRE([AM_SET_DEPDIR])dnl\nAC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl\nAC_REQUIRE([AM_MAKE_INCLUDE])dnl\nAC_REQUIRE([AM_DEP_TRACK])dnl\n\nm4_if([$1], [CC],   [depcc=\"$CC\"   am_compiler_list=],\n      [$1], [CXX],  [depcc=\"$CXX\"  am_compiler_list=],\n      [$1], [OBJC], [depcc=\"$OBJC\" am_compiler_list='gcc3 gcc'],\n      [$1], [OBJCXX], [depcc=\"$OBJCXX\" am_compiler_list='gcc3 gcc'],\n      [$1], [UPC],  [depcc=\"$UPC\"  am_compiler_list=],\n      [$1], [GCJ],  [depcc=\"$GCJ\"  am_compiler_list='gcc3 gcc'],\n                    [depcc=\"$$1\"   am_compiler_list=])\n\nAC_CACHE_CHECK([dependency style of $depcc],\n               [am_cv_$1_dependencies_compiler_type],\n[if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_$1_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n ['s/^#*\\([a-zA-Z0-9]*\\))$/\\1/p'] < ./depcomp`\n  fi\n  am__universal=false\n  m4_case([$1], [CC],\n    [case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac],\n    [CXX],\n    [case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac])\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thus:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_$1_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_$1_dependencies_compiler_type=none\nfi\n])\nAC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])\nAM_CONDITIONAL([am__fastdep$1], [\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_$1_dependencies_compiler_type\" = gcc3])\n])\n\n\n# AM_SET_DEPDIR\n# -------------\n# Choose a directory name for dependency files.\n# This macro is AC_REQUIREd in _AM_DEPENDENCIES.\nAC_DEFUN([AM_SET_DEPDIR],\n[AC_REQUIRE([AM_SET_LEADING_DOT])dnl\nAC_SUBST([DEPDIR], [\"${am__leading_dot}deps\"])dnl\n])\n\n\n# AM_DEP_TRACK\n# ------------\nAC_DEFUN([AM_DEP_TRACK],\n[AC_ARG_ENABLE([dependency-tracking], [dnl\nAS_HELP_STRING(\n  [--enable-dependency-tracking],\n  [do not reject slow dependency extractors])\nAS_HELP_STRING(\n  [--disable-dependency-tracking],\n  [speeds up one-time build])])\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\n  am__nodep='_no'\nfi\nAM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\nAC_SUBST([AMDEPBACKSLASH])dnl\n_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl\nAC_SUBST([am__nodep])dnl\n_AM_SUBST_NOTMAKE([am__nodep])dnl\n])\n\n# Generate code to set up dependency tracking.              -*- Autoconf -*-\n\n# Copyright (C) 1999-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_OUTPUT_DEPENDENCY_COMMANDS\n# ------------------------------\nAC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],\n[{\n  # Older Autoconf quotes --file arguments for eval, but not when files\n  # are listed without --file.  Let's play safe and only enable the eval\n  # if we detect the quoting.\n  # TODO: see whether this extra hack can be removed once we start\n  # requiring Autoconf 2.70 or later.\n  AS_CASE([$CONFIG_FILES],\n          [*\\'*], [eval set x \"$CONFIG_FILES\"],\n          [*], [set x $CONFIG_FILES])\n  shift\n  # Used to flag and report bootstrapping failures.\n  am_rc=0\n  for am_mf\n  do\n    # Strip MF so we end up with the name of the file.\n    am_mf=`AS_ECHO([\"$am_mf\"]) | sed -e 's/:.*$//'`\n    # Check whether this is an Automake generated Makefile which includes\n    # dependency-tracking related rules and includes.\n    # Grep'ing the whole file directly is not great: AIX grep has a line\n    # limit of 2048, but all sed's we know have understand at least 4000.\n    sed -n 's,^am--depfiles:.*,X,p' \"$am_mf\" | grep X >/dev/null 2>&1 \\\n      || continue\n    am_dirpart=`AS_DIRNAME([\"$am_mf\"])`\n    am_filepart=`AS_BASENAME([\"$am_mf\"])`\n    AM_RUN_LOG([cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles]) || am_rc=$?\n  done\n  if test $am_rc -ne 0; then\n    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments\n    for automatic dependency tracking.  If GNU make was not used, consider\n    re-running the configure script with MAKE=\"gmake\" (or whatever is\n    necessary).  You can also try re-running configure with the\n    '--disable-dependency-tracking' option to at least be able to build\n    the package (albeit without support for automatic dependency tracking).])\n  fi\n  AS_UNSET([am_dirpart])\n  AS_UNSET([am_filepart])\n  AS_UNSET([am_mf])\n  AS_UNSET([am_rc])\n  rm -f conftest-deps.mk\n}\n])# _AM_OUTPUT_DEPENDENCY_COMMANDS\n\n\n# AM_OUTPUT_DEPENDENCY_COMMANDS\n# -----------------------------\n# This macro should only be invoked once -- use via AC_REQUIRE.\n#\n# This code is only required when automatic dependency tracking is enabled.\n# This creates each '.Po' and '.Plo' makefile fragment that we'll need in\n# order to bootstrap the dependency handling code.\nAC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n[AC_CONFIG_COMMANDS([depfiles],\n     [test x\"$AMDEP_TRUE\" != x\"\" || _AM_OUTPUT_DEPENDENCY_COMMANDS],\n     [AMDEP_TRUE=\"$AMDEP_TRUE\" MAKE=\"${MAKE-make}\"])])\n\n# Do all the work for Automake.                             -*- Autoconf -*-\n\n# Copyright (C) 1996-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This macro actually does too much.  Some checks are only needed if\n# your package does certain things.  But this isn't really a big deal.\n\ndnl Redefine AC_PROG_CC to automatically invoke _AM_PROG_CC_C_O.\nm4_define([AC_PROG_CC],\nm4_defn([AC_PROG_CC])\n[_AM_PROG_CC_C_O\n])\n\n# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n# AM_INIT_AUTOMAKE([OPTIONS])\n# -----------------------------------------------\n# The call with PACKAGE and VERSION arguments is the old style\n# call (pre autoconf-2.50), which is being phased out.  PACKAGE\n# and VERSION should now be passed to AC_INIT and removed from\n# the call to AM_INIT_AUTOMAKE.\n# We support both call styles for the transition.  After\n# the next Automake release, Autoconf can make the AC_INIT\n# arguments mandatory, and then we can depend on a new Autoconf\n# release and drop the old call support.\nAC_DEFUN([AM_INIT_AUTOMAKE],\n[AC_PREREQ([2.65])dnl\nm4_ifdef([_$0_ALREADY_INIT],\n  [m4_fatal([$0 expanded multiple times\n]m4_defn([_$0_ALREADY_INIT]))],\n  [m4_define([_$0_ALREADY_INIT], m4_expansion_stack)])dnl\ndnl Autoconf wants to disallow AM_ names.  We explicitly allow\ndnl the ones we care about.\nm4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl\nAC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl\nAC_REQUIRE([AC_PROG_INSTALL])dnl\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n  # is not polluted with repeated \"-I.\"\n  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl\n  # test to see if srcdir already configured\n  if test -f $srcdir/config.status; then\n    AC_MSG_ERROR([source directory already configured; run \"make distclean\" there first])\n  fi\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\nAC_SUBST([CYGPATH_W])\n\n# Define the identity of the package.\ndnl Distinguish between old-style and new-style calls.\nm4_ifval([$2],\n[AC_DIAGNOSE([obsolete],\n             [$0: two- and three-arguments forms are deprecated.])\nm4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl\n AC_SUBST([PACKAGE], [$1])dnl\n AC_SUBST([VERSION], [$2])],\n[_AM_SET_OPTIONS([$1])dnl\ndnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.\nm4_if(\n  m4_ifset([AC_PACKAGE_NAME], [ok]):m4_ifset([AC_PACKAGE_VERSION], [ok]),\n  [ok:ok],,\n  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl\n AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl\n AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl\n\n_AM_IF_OPTION([no-define],,\n[AC_DEFINE_UNQUOTED([PACKAGE], [\"$PACKAGE\"], [Name of package])\n AC_DEFINE_UNQUOTED([VERSION], [\"$VERSION\"], [Version number of package])])dnl\n\n# Some tools Automake needs.\nAC_REQUIRE([AM_SANITY_CHECK])dnl\nAC_REQUIRE([AC_ARG_PROGRAM])dnl\nAM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])\nAM_MISSING_PROG([AUTOCONF], [autoconf])\nAM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])\nAM_MISSING_PROG([AUTOHEADER], [autoheader])\nAM_MISSING_PROG([MAKEINFO], [makeinfo])\nAC_REQUIRE([AM_PROG_INSTALL_SH])dnl\nAC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl\nAC_REQUIRE([AC_PROG_MKDIR_P])dnl\n# For better backward compatibility.  To be removed once Automake 1.9.x\n# dies out for good.  For more background, see:\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>\nAC_SUBST([mkdir_p], ['$(MKDIR_P)'])\n# We need awk for the \"check\" target (and possibly the TAP driver).  The\n# system \"awk\" is bad on some platforms.\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([AC_PROG_MAKE_SET])dnl\nAC_REQUIRE([AM_SET_LEADING_DOT])dnl\n_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],\n\t      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],\n\t\t\t     [_AM_PROG_TAR([v7])])])\n_AM_IF_OPTION([no-dependencies],,\n[AC_PROVIDE_IFELSE([AC_PROG_CC],\n\t\t  [_AM_DEPENDENCIES([CC])],\n\t\t  [m4_define([AC_PROG_CC],\n\t\t\t     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_CXX],\n\t\t  [_AM_DEPENDENCIES([CXX])],\n\t\t  [m4_define([AC_PROG_CXX],\n\t\t\t     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_OBJC],\n\t\t  [_AM_DEPENDENCIES([OBJC])],\n\t\t  [m4_define([AC_PROG_OBJC],\n\t\t\t     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_OBJCXX],\n\t\t  [_AM_DEPENDENCIES([OBJCXX])],\n\t\t  [m4_define([AC_PROG_OBJCXX],\n\t\t\t     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl\n])\n# Variables for tags utilities; see am/tags.am\nif test -z \"$CTAGS\"; then\n  CTAGS=ctags\nfi\nAC_SUBST([CTAGS])\nif test -z \"$ETAGS\"; then\n  ETAGS=etags\nfi\nAC_SUBST([ETAGS])\nif test -z \"$CSCOPE\"; then\n  CSCOPE=cscope\nfi\nAC_SUBST([CSCOPE])\n\nAC_REQUIRE([_AM_SILENT_RULES])dnl\ndnl The testsuite driver may need to know about EXEEXT, so add the\ndnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This\ndnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.\nAC_CONFIG_COMMANDS_PRE(dnl\n[m4_provide_if([_AM_COMPILER_EXEEXT],\n  [AM_CONDITIONAL([am__EXEEXT], [test -n \"$EXEEXT\"])])])dnl\n\nAC_REQUIRE([_AM_PROG_RM_F])\nAC_REQUIRE([_AM_PROG_XARGS_N])\n\ndnl The trailing newline in this macro's definition is deliberate, for\ndnl backward compatibility and to allow trailing 'dnl'-style comments\ndnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.\n])\n\ndnl Hook into '_AC_COMPILER_EXEEXT' early to learn its expansion.  Do not\ndnl add the conditional right here, as _AC_COMPILER_EXEEXT may be further\ndnl mangled by Autoconf and run in a shell conditional statement.\nm4_define([_AC_COMPILER_EXEEXT],\nm4_defn([_AC_COMPILER_EXEEXT])[m4_provide([_AM_COMPILER_EXEEXT])])\n\n# When config.status generates a header, we must update the stamp-h file.\n# This file resides in the same directory as the config header\n# that is generated.  The stamp files are numbered to have different names.\n\n# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the\n# loop where config.status creates the headers, so we can generate\n# our stamp files there.\nAC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],\n[# Compute $1's index in $config_headers.\n_am_arg=$1\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $_am_arg | $_am_arg:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $_am_arg\" >`AS_DIRNAME([\"$_am_arg\"])`/stamp-h[]$_am_stamp_count])\n\n# Copyright (C) 2001-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_SH\n# ------------------\n# Define $install_sh.\nAC_DEFUN([AM_PROG_INSTALL_SH],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nif test x\"${install_sh+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n  *)\n    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n  esac\nfi\nAC_SUBST([install_sh])])\n\n# Copyright (C) 2003-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# Check whether the underlying file-system supports filenames\n# with a leading dot.  For instance MS-DOS doesn't.\nAC_DEFUN([AM_SET_LEADING_DOT],\n[rm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\nAC_SUBST([am__leading_dot])])\n\n# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n\n# Copyright (C) 2001-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MAKE_INCLUDE()\n# -----------------\n# Check whether make has an 'include' directive that can support all\n# the idioms we need for our automatic dependency tracking code.\nAC_DEFUN([AM_MAKE_INCLUDE],\n[AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])\ncat > confinc.mk << 'END'\nam__doit:\n\t@echo this is the am__doit target >confinc.out\n.PHONY: am__doit\nEND\nam__include=\"#\"\nam__quote=\n# BSD make does it like this.\necho '.include \"confinc.mk\" # ignored' > confmf.BSD\n# Other make implementations (GNU, Solaris 10, AIX) do it like this.\necho 'include confinc.mk # ignored' > confmf.GNU\n_am_result=no\nfor s in GNU BSD; do\n  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])\n  AS_CASE([$?:`cat confinc.out 2>/dev/null`],\n      ['0:this is the am__doit target'],\n      [AS_CASE([$s],\n          [BSD], [am__include='.include' am__quote='\"'],\n          [am__include='include' am__quote=''])])\n  if test \"$am__include\" != \"#\"; then\n    _am_result=\"yes ($s style)\"\n    break\n  fi\ndone\nrm -f confinc.* confmf.*\nAC_MSG_RESULT([${_am_result}])\nAC_SUBST([am__include])])\nAC_SUBST([am__quote])])\n\n# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n\n# Copyright (C) 1997-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MISSING_PROG(NAME, PROGRAM)\n# ------------------------------\nAC_DEFUN([AM_MISSING_PROG],\n[AC_REQUIRE([AM_MISSING_HAS_RUN])\n$1=${$1-\"${am_missing_run}$2\"}\nAC_SUBST($1)])\n\n# AM_MISSING_HAS_RUN\n# ------------------\n# Define MISSING if not defined so far and test if it is modern enough.\n# If it is, set am_missing_run to use it, otherwise, to nothing.\nAC_DEFUN([AM_MISSING_HAS_RUN],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nAC_REQUIRE_AUX_FILE([missing])dnl\nif test x\"${MISSING+set}\" != xset; then\n  MISSING=\"\\${SHELL} '$am_aux_dir/missing'\"\nfi\n# Use eval to expand $SHELL\nif eval \"$MISSING --is-lightweight\"; then\n  am_missing_run=\"$MISSING \"\nelse\n  am_missing_run=\n  AC_MSG_WARN(['missing' script is too old or missing])\nfi\n])\n\n# Helper functions for option handling.                     -*- Autoconf -*-\n\n# Copyright (C) 2001-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_MANGLE_OPTION(NAME)\n# -----------------------\nAC_DEFUN([_AM_MANGLE_OPTION],\n[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n\n# _AM_SET_OPTION(NAME)\n# --------------------\n# Set option NAME.  Presently that only means defining a flag for this option.\nAC_DEFUN([_AM_SET_OPTION],\n[m4_define(_AM_MANGLE_OPTION([$1]), [1])])\n\n# _AM_SET_OPTIONS(OPTIONS)\n# ------------------------\n# OPTIONS is a space-separated list of Automake options.\nAC_DEFUN([_AM_SET_OPTIONS],\n[m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n\n# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])\n# -------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nAC_DEFUN([_AM_IF_OPTION],\n[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n\n# Copyright (C) 1999-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_CC_C_O\n# ---------------\n# Like AC_PROG_CC_C_O, but changed for automake.  We rewrite AC_PROG_CC\n# to automatically call this.\nAC_DEFUN([_AM_PROG_CC_C_O],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nAC_REQUIRE_AUX_FILE([compile])dnl\nAC_LANG_PUSH([C])dnl\nAC_CACHE_CHECK(\n  [whether $CC understands -c and -o together],\n  [am_cv_prog_cc_c_o],\n  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i])\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nAC_LANG_POP([C])])\n\n# For backward compatibility.\nAC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])\n\n# Copyright (C) 2022-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_RM_F\n# ---------------\n# Check whether 'rm -f' without any arguments works.\n# https://bugs.gnu.org/10828\nAC_DEFUN([_AM_PROG_RM_F],\n[am__rm_f_notfound=\nAS_IF([(rm -f && rm -fr && rm -rf) 2>/dev/null], [], [am__rm_f_notfound='\"\"'])\nAC_SUBST(am__rm_f_notfound)\n])\n\n# Copyright (C) 2001-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_RUN_LOG(COMMAND)\n# -------------------\n# Run COMMAND, save the exit status in ac_status, and log it.\n# (This has been adapted from Autoconf's _AC_RUN_LOG macro.)\nAC_DEFUN([AM_RUN_LOG],\n[{ echo \"$as_me:$LINENO: $1\" >&AS_MESSAGE_LOG_FD\n   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   (exit $ac_status); }])\n\n# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n\n# Copyright (C) 1996-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_SLEEP_FRACTIONAL_SECONDS\n# ----------------------------\nAC_DEFUN([_AM_SLEEP_FRACTIONAL_SECONDS], [dnl\nAC_CACHE_CHECK([whether sleep supports fractional seconds],\n               am_cv_sleep_fractional_seconds, [dnl\nAS_IF([sleep 0.001 2>/dev/null], [am_cv_sleep_fractional_seconds=yes],\n                                 [am_cv_sleep_fractional_seconds=no])\n])])\n\n# _AM_FILESYSTEM_TIMESTAMP_RESOLUTION\n# -----------------------------------\n# Determine the filesystem's resolution for file modification\n# timestamps.  The coarsest we know of is FAT, with a resolution\n# of only two seconds, even with the most recent \"exFAT\" extensions.\n# The finest (e.g. ext4 with large inodes, XFS, ZFS) is one\n# nanosecond, matching clock_gettime.  However, it is probably not\n# possible to delay execution of a shell script for less than one\n# millisecond, due to process creation overhead and scheduling\n# granularity, so we don't check for anything finer than that. (See below.)\nAC_DEFUN([_AM_FILESYSTEM_TIMESTAMP_RESOLUTION], [dnl\nAC_REQUIRE([_AM_SLEEP_FRACTIONAL_SECONDS])\nAC_CACHE_CHECK([filesystem timestamp resolution],\n               am_cv_filesystem_timestamp_resolution, [dnl\n# Default to the worst case.\nam_cv_filesystem_timestamp_resolution=2\n\n# Only try to go finer than 1 sec if sleep can do it.\n# Don't try 1 sec, because if 0.01 sec and 0.1 sec don't work,\n# - 1 sec is not much of a win compared to 2 sec, and\n# - it takes 2 seconds to perform the test whether 1 sec works.\n# \n# Instead, just use the default 2s on platforms that have 1s resolution,\n# accept the extra 1s delay when using $sleep in the Automake tests, in\n# exchange for not incurring the 2s delay for running the test for all\n# packages.\n#\nam_try_resolutions=\nif test \"$am_cv_sleep_fractional_seconds\" = yes; then\n  # Even a millisecond often causes a bunch of false positives,\n  # so just try a hundredth of a second. The time saved between .001 and\n  # .01 is not terribly consequential.\n  am_try_resolutions=\"0.01 0.1 $am_try_resolutions\"\nfi\n\n# In order to catch current-generation FAT out, we must *modify* files\n# that already exist; the *creation* timestamp is finer.  Use names\n# that make ls -t sort them differently when they have equal\n# timestamps than when they have distinct timestamps, keeping\n# in mind that ls -t prints the *newest* file first.\nrm -f conftest.ts?\n: > conftest.ts1\n: > conftest.ts2\n: > conftest.ts3\n\n# Make sure ls -t actually works.  Do 'set' in a subshell so we don't\n# clobber the current shell's arguments. (Outer-level square brackets\n# are removed by m4; they're present so that m4 does not expand\n# <dollar><star>; be careful, easy to get confused.)\nif (\n     set X `[ls -t conftest.ts[12]]` &&\n     {\n       test \"$[]*\" != \"X conftest.ts1 conftest.ts2\" ||\n       test \"$[]*\" != \"X conftest.ts2 conftest.ts1\";\n     }\n); then :; else\n  # If neither matched, then we have a broken ls.  This can happen\n  # if, for instance, CONFIG_SHELL is bash and it inherits a\n  # broken ls alias from the environment.  This has actually\n  # happened.  Such a system could not be considered \"sane\".\n  _AS_ECHO_UNQUOTED(\n    [\"Bad output from ls -t: \\\"`[ls -t conftest.ts[12]]`\\\"\"],\n    [AS_MESSAGE_LOG_FD])\n  AC_MSG_FAILURE([ls -t produces unexpected output.\nMake sure there is not a broken ls alias in your environment.])\nfi\n\nfor am_try_res in $am_try_resolutions; do\n  # Any one fine-grained sleep might happen to cross the boundary\n  # between two values of a coarser actual resolution, but if we do\n  # two fine-grained sleeps in a row, at least one of them will fall\n  # entirely within a coarse interval.\n  echo alpha > conftest.ts1\n  sleep $am_try_res\n  echo beta > conftest.ts2\n  sleep $am_try_res\n  echo gamma > conftest.ts3\n\n  # We assume that 'ls -t' will make use of high-resolution\n  # timestamps if the operating system supports them at all.\n  if (set X `ls -t conftest.ts?` &&\n      test \"$[]2\" = conftest.ts3 &&\n      test \"$[]3\" = conftest.ts2 &&\n      test \"$[]4\" = conftest.ts1); then\n    #\n    # Ok, ls -t worked. If we're at a resolution of 1 second, we're done,\n    # because we don't need to test make.\n    make_ok=true\n    if test $am_try_res != 1; then\n      # But if we've succeeded so far with a subsecond resolution, we\n      # have one more thing to check: make. It can happen that\n      # everything else supports the subsecond mtimes, but make doesn't;\n      # notably on macOS, which ships make 3.81 from 2006 (the last one\n      # released under GPLv2). https://bugs.gnu.org/68808\n      # \n      # We test $MAKE if it is defined in the environment, else \"make\".\n      # It might get overridden later, but our hope is that in practice\n      # it does not matter: it is the system \"make\" which is (by far)\n      # the most likely to be broken, whereas if the user overrides it,\n      # probably they did so with a better, or at least not worse, make.\n      # https://lists.gnu.org/archive/html/automake/2024-06/msg00051.html\n      #\n      # Create a Makefile (real tab character here):\n      rm -f conftest.mk\n      echo 'conftest.ts1: conftest.ts2' >conftest.mk\n      echo '\ttouch conftest.ts2' >>conftest.mk\n      #\n      # Now, running\n      #   touch conftest.ts1; touch conftest.ts2; make\n      # should touch ts1 because ts2 is newer. This could happen by luck,\n      # but most often, it will fail if make's support is insufficient. So\n      # test for several consecutive successes.\n      #\n      # (We reuse conftest.ts[12] because we still want to modify existing\n      # files, not create new ones, per above.)\n      n=0\n      make=${MAKE-make}\n      until test $n -eq 3; do\n        echo one > conftest.ts1\n        sleep $am_try_res\n        echo two > conftest.ts2 # ts2 should now be newer than ts1\n        if $make -f conftest.mk | grep 'up to date' >/dev/null; then\n          make_ok=false\n          break # out of $n loop\n        fi\n        n=`expr $n + 1`\n      done\n    fi\n    #\n    if $make_ok; then\n      # Everything we know to check worked out, so call this resolution good.\n      am_cv_filesystem_timestamp_resolution=$am_try_res\n      break # out of $am_try_res loop\n    fi\n    # Otherwise, we'll go on to check the next resolution.\n  fi\ndone\nrm -f conftest.ts?\n# (end _am_filesystem_timestamp_resolution)\n])])\n\n# AM_SANITY_CHECK\n# ---------------\nAC_DEFUN([AM_SANITY_CHECK],\n[AC_REQUIRE([_AM_FILESYSTEM_TIMESTAMP_RESOLUTION])\n# This check should not be cached, as it may vary across builds of\n# different projects.\nAC_MSG_CHECKING([whether build environment is sane])\n# Reject unsafe characters in $srcdir or the absolute working directory\n# name.  Accept space and tab only in the latter.\nam_lf='\n'\ncase `pwd` in\n  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]]*)\n    AC_MSG_ERROR([unsafe absolute working directory name]);;\nesac\ncase $srcdir in\n  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]]*)\n    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;\nesac\n\n# Do 'set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nam_build_env_is_sane=no\nam_has_slept=no\nrm -f conftest.file\nfor am_try in 1 2; do\n  echo \"timestamp, slept: $am_has_slept\" > conftest.file\n  if (\n    set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n    if test \"$[]*\" = \"X\"; then\n      # -L didn't work.\n      set X `ls -t \"$srcdir/configure\" conftest.file`\n    fi\n    test \"$[]2\" = conftest.file\n  ); then\n    am_build_env_is_sane=yes\n    break\n  fi\n  # Just in case.\n  sleep \"$am_cv_filesystem_timestamp_resolution\"\n  am_has_slept=yes\ndone\n\nAC_MSG_RESULT([$am_build_env_is_sane])\nif test \"$am_build_env_is_sane\" = no; then\n  AC_MSG_ERROR([newly created file is older than distributed files!\nCheck your system clock])\nfi\n\n# If we didn't sleep, we still need to ensure time stamps of config.status and\n# generated files are strictly newer.\nam_sleep_pid=\nAS_IF([test -e conftest.file || grep 'slept: no' conftest.file >/dev/null 2>&1],, [dnl\n  ( sleep \"$am_cv_filesystem_timestamp_resolution\" ) &\n  am_sleep_pid=$!\n])\nAC_CONFIG_COMMANDS_PRE(\n  [AC_MSG_CHECKING([that generated files are newer than configure])\n   if test -n \"$am_sleep_pid\"; then\n     # Hide warnings about reused PIDs.\n     wait $am_sleep_pid 2>/dev/null\n   fi\n   AC_MSG_RESULT([done])])\nrm -f conftest.file\n])\n\n# Copyright (C) 2009-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_SILENT_RULES\n# ----------------\n# Enable less verbose build rules support.\nAC_DEFUN([_AM_SILENT_RULES],\n[AM_DEFAULT_VERBOSITY=1\nAC_ARG_ENABLE([silent-rules], [dnl\nAS_HELP_STRING(\n  [--enable-silent-rules],\n  [less verbose build output (undo: \"make V=1\")])\nAS_HELP_STRING(\n  [--disable-silent-rules],\n  [verbose build output (undo: \"make V=0\")])dnl\n])\ndnl\ndnl A few 'make' implementations (e.g., NonStop OS and NextStep)\ndnl do not support nested variable expansions.\ndnl See automake bug#9928 and bug#10237.\nam_make=${MAKE-make}\nAC_CACHE_CHECK([whether $am_make supports nested variables],\n   [am_cv_make_support_nested_variables],\n   [if AS_ECHO([['TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi])\nAC_SUBST([AM_V])dnl\nAM_SUBST_NOTMAKE([AM_V])dnl\nAC_SUBST([AM_DEFAULT_V])dnl\nAM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl\nAC_SUBST([AM_DEFAULT_VERBOSITY])dnl\nAM_BACKSLASH='\\'\nAC_SUBST([AM_BACKSLASH])dnl\n_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl\ndnl Delay evaluation of AM_DEFAULT_VERBOSITY to the end to allow multiple calls\ndnl to AM_SILENT_RULES to change the default value.\nAC_CONFIG_COMMANDS_PRE([dnl\ncase $enable_silent_rules in @%:@ (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\nesac\nif test $am_cv_make_support_nested_variables = yes; then\n  dnl Using '$V' instead of '$(V)' breaks IRIX make.\n  AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\n])dnl\n])\n\n# AM_SILENT_RULES([DEFAULT])\n# --------------------------\n# Set the default verbosity level to DEFAULT (\"yes\" being less verbose, \"no\" or\n# empty being verbose).\nAC_DEFUN([AM_SILENT_RULES],\n[AC_REQUIRE([_AM_SILENT_RULES])\nAM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1])])\n\n# Copyright (C) 2001-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_STRIP\n# ---------------------\n# One issue with vendor 'install' (even GNU) is that you can't\n# specify the program used to strip binaries.  This is especially\n# annoying in cross-compiling environments, where the build's strip\n# is unlikely to handle the host's binaries.\n# Fortunately install-sh will honor a STRIPPROG variable, so we\n# always use install-sh in \"make install-strip\", and initialize\n# STRIPPROG with the value of the STRIP variable (set by the user).\nAC_DEFUN([AM_PROG_INSTALL_STRIP],\n[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl\n# Installed binaries are usually stripped using 'strip' when the user\n# run \"make install-strip\".  However 'strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the 'STRIP' environment variable to overrule this program.\ndnl Don't test for $cross_compiling = yes, because it might be 'maybe'.\nif test \"$cross_compiling\" != no; then\n  AC_CHECK_TOOL([STRIP], [strip], :)\nfi\nINSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\nAC_SUBST([INSTALL_STRIP_PROGRAM])])\n\n# Copyright (C) 2006-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_SUBST_NOTMAKE(VARIABLE)\n# ---------------------------\n# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.\n# This macro is traced by Automake.\nAC_DEFUN([_AM_SUBST_NOTMAKE])\n\n# AM_SUBST_NOTMAKE(VARIABLE)\n# --------------------------\n# Public sister of _AM_SUBST_NOTMAKE.\nAC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n\n# Check how to create a tarball.                            -*- Autoconf -*-\n\n# Copyright (C) 2004-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_TAR(FORMAT)\n# --------------------\n# Check how to create a tarball in format FORMAT.\n# FORMAT should be one of 'v7', 'ustar', or 'pax'.\n#\n# Substitute a variable $(am__tar) that is a command\n# writing to stdout a FORMAT-tarball containing the directory\n# $tardir.\n#     tardir=directory && $(am__tar) > result.tar\n#\n# Substitute a variable $(am__untar) that extract such\n# a tarball read from stdin.\n#     $(am__untar) < result.tar\n#\nAC_DEFUN([_AM_PROG_TAR],\n[# Always define AMTAR for backward compatibility.  Yes, it's still used\n# in the wild :-(  We should find a proper way to deprecate it ...\nAC_SUBST([AMTAR], ['$${TAR-tar}'])\n\n# We'll loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'\n\nm4_if([$1], [v7],\n  [am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'],\n\n  [m4_case([$1],\n    [ustar],\n     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.\n      # There is notably a 21 bits limit for the UID and the GID.  In fact,\n      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343\n      # and bug#13588).\n      am_max_uid=2097151 # 2^21 - 1\n      am_max_gid=$am_max_uid\n      # The $UID and $GID variables are not portable, so we need to resort\n      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls\n      # below are definitely unexpected, so allow the users to see them\n      # (that is, avoid stderr redirection).\n      am_uid=`id -u || echo unknown`\n      am_gid=`id -g || echo unknown`\n      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])\n      if test x$am_uid = xunknown; then\n        AC_MSG_WARN([ancient id detected; assuming current UID is ok, but dist-ustar might not work])\n      elif test $am_uid -le $am_max_uid; then\n        AC_MSG_RESULT([yes])\n      else\n        AC_MSG_RESULT([no])\n        _am_tools=none\n      fi\n      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])\n      if test x$gm_gid = xunknown; then\n        AC_MSG_WARN([ancient id detected; assuming current GID is ok, but dist-ustar might not work])\n      elif test $am_gid -le $am_max_gid; then\n        AC_MSG_RESULT([yes])\n      else\n        AC_MSG_RESULT([no])\n        _am_tools=none\n      fi],\n\n  [pax],\n    [],\n\n  [m4_fatal([Unknown tar format])])\n\n  AC_MSG_CHECKING([how to create a $1 tar archive])\n\n  # Go ahead even if we have the value already cached.  We do so because we\n  # need to set the values for the 'am__tar' and 'am__untar' variables.\n  _am_tools=${am_cv_prog_tar_$1-$_am_tools}\n\n  for _am_tool in $_am_tools; do\n    case $_am_tool in\n    gnutar)\n      for _am_tar in tar gnutar gtar; do\n        AM_RUN_LOG([$_am_tar --version]) && break\n      done\n      am__tar=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$$tardir\"'\n      am__tar_=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$tardir\"'\n      am__untar=\"$_am_tar -xf -\"\n      ;;\n    plaintar)\n      # Must skip GNU tar: if it does not support --format= it doesn't create\n      # ustar tarball either.\n      (tar --version) >/dev/null 2>&1 && continue\n      am__tar='tar chf - \"$$tardir\"'\n      am__tar_='tar chf - \"$tardir\"'\n      am__untar='tar xf -'\n      ;;\n    pax)\n      am__tar='pax -L -x $1 -w \"$$tardir\"'\n      am__tar_='pax -L -x $1 -w \"$tardir\"'\n      am__untar='pax -r'\n      ;;\n    cpio)\n      am__tar='find \"$$tardir\" -print | cpio -o -H $1 -L'\n      am__tar_='find \"$tardir\" -print | cpio -o -H $1 -L'\n      am__untar='cpio -i -H $1 -d'\n      ;;\n    none)\n      am__tar=false\n      am__tar_=false\n      am__untar=false\n      ;;\n    esac\n\n    # If the value was cached, stop now.  We just wanted to have am__tar\n    # and am__untar set.\n    test -n \"${am_cv_prog_tar_$1}\" && break\n\n    # tar/untar a dummy directory, and stop if the command works.\n    rm -rf conftest.dir\n    mkdir conftest.dir\n    echo GrepMe > conftest.dir/file\n    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])\n    rm -rf conftest.dir\n    if test -s conftest.tar; then\n      AM_RUN_LOG([$am__untar <conftest.tar])\n      AM_RUN_LOG([cat conftest.dir/file])\n      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break\n    fi\n  done\n  rm -rf conftest.dir\n\n  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])\n  AC_MSG_RESULT([$am_cv_prog_tar_$1])])\n\nAC_SUBST([am__tar])\nAC_SUBST([am__untar])\n]) # _AM_PROG_TAR\n\n# Copyright (C) 2022-2024 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_XARGS_N\n# ----------------\n# Check whether 'xargs -n' works.  It should work everywhere, so the fallback\n# is not optimized at all as we never expect to use it.\nAC_DEFUN([_AM_PROG_XARGS_N],\n[AC_CACHE_CHECK([xargs -n works], am_cv_xargs_n_works, [dnl\nAS_IF([test \"`echo 1 2 3 | xargs -n2 echo`\" = \"1 2\n3\"], [am_cv_xargs_n_works=yes], [am_cv_xargs_n_works=no])])\nAS_IF([test \"$am_cv_xargs_n_works\" = yes], [am__xargs_n='xargs -n'], [dnl\n  am__xargs_n='am__xargs_n () { shift; sed \"s/ /\\\\n/g\" | while read am__xargs_n_arg; do \"$@\" \"$am__xargs_n_arg\"; done; }'\n])dnl\nAC_SUBST(am__xargs_n)\n])\n\nm4_include([build-aux/m4/ax_check_compile_flag.m4])\nm4_include([build-aux/m4/ax_pthread.m4])\n"
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 351.0087890625,
          "content": "#! /bin/sh\n# Guess values for system-dependent variables and create Makefiles.\n# Generated by GNU Autoconf 2.72 for vifm 0.13.\n#\n# Report bugs to <xaizek@posteo.net>.\n#\n#\n# Copyright (C) 1992-1996, 1998-2017, 2020-2023 Free Software Foundation,\n# Inc.\n#\n#\n# This configure script is free software; the Free Software Foundation\n# gives unlimited permission to copy, distribute and modify it.\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1\nthen :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse case e in #(\n  e) case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac ;;\nesac\nfi\n\n\n\n# Reset variables that may have inherited troublesome values from\n# the environment.\n\n# IFS needs to be set, to space, tab, and newline, in precisely that order.\n# (If _AS_PATH_WALK were called with IFS unset, it would have the\n# side effect of setting IFS to empty, thus disabling word splitting.)\n# Quoting is to prevent editors from complaining about space-tab.\nas_nl='\n'\nexport as_nl\nIFS=\" \"\"\t$as_nl\"\n\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# Ensure predictable behavior from utilities with locale-dependent output.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# We cannot yet rely on \"unset\" to work, but we need these variables\n# to be unset--not just set to an empty or harmless value--now, to\n# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct\n# also avoids known problems related to \"unset\" and subshell syntax\n# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).\nfor as_var in BASH_ENV ENV MAIL MAILPATH CDPATH\ndo eval test \\${$as_var+y} \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\n\n# Ensure that fds 0, 1, and 2 are open.\nif (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi\nif (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi\nif (exec 3>&2)            ; then :; else exec 2>/dev/null; fi\n\n# The user is always right.\nif ${PATH_SEPARATOR+false} :; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    test -r \"$as_dir$0\" && as_myself=$as_dir$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as 'sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  printf \"%s\\n\" \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n\n# Use a proper internal environment variable to ensure we don't fall\n  # into an infinite loop, continuously re-executing ourselves.\n  if test x\"${_as_can_reexec}\" != xno && test \"x$CONFIG_SHELL\" != x; then\n    _as_can_reexec=no; export _as_can_reexec;\n    # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed 'exec'.\nprintf \"%s\\n\" \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\n  fi\n  # We don't want this to propagate to other subprocesses.\n          { _as_can_reexec=; unset _as_can_reexec;}\nif test \"x$CONFIG_SHELL\" = x; then\n  as_bourne_compatible=\"if test \\${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1\nthen :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse case e in #(\n  e) case \\`(set -o) 2>/dev/null\\` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac ;;\nesac\nfi\n\"\n  as_required=\"as_fn_return () { (exit \\$1); }\nas_fn_success () { as_fn_return 0; }\nas_fn_failure () { as_fn_return 1; }\nas_fn_ret_success () { return 0; }\nas_fn_ret_failure () { return 1; }\n\nexitcode=0\nas_fn_success || { exitcode=1; echo as_fn_success failed.; }\nas_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }\nas_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }\nas_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }\nif ( set x; as_fn_ret_success y && test x = \\\"\\$1\\\" )\nthen :\n\nelse case e in #(\n  e) exitcode=1; echo positional parameters were not saved. ;;\nesac\nfi\ntest x\\$exitcode = x0 || exit 1\nblah=\\$(echo \\$(echo blah))\ntest x\\\"\\$blah\\\" = xblah || exit 1\ntest -x / || exit 1\"\n  as_suggested=\"  as_lineno_1=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_1a=\\$LINENO\n  as_lineno_2=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_2a=\\$LINENO\n  eval 'test \\\"x\\$as_lineno_1'\\$as_run'\\\" != \\\"x\\$as_lineno_2'\\$as_run'\\\" &&\n  test \\\"x\\`expr \\$as_lineno_1'\\$as_run' + 1\\`\\\" = \\\"x\\$as_lineno_2'\\$as_run'\\\"' || exit 1\ntest \\$(( 1 + 1 )) = 2 || exit 1\"\n  if (eval \"$as_required\") 2>/dev/null\nthen :\n  as_have_required=yes\nelse case e in #(\n  e) as_have_required=no ;;\nesac\nfi\n  if test x$as_have_required = xyes && (eval \"$as_suggested\") 2>/dev/null\nthen :\n\nelse case e in #(\n  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n  as_found=:\n  case $as_dir in #(\n\t /*)\n\t   for as_base in sh bash ksh sh5; do\n\t     # Try only shells that exist, to save several forks.\n\t     as_shell=$as_dir$as_base\n\t     if { test -f \"$as_shell\" || test -f \"$as_shell.exe\"; } &&\n\t\t    as_run=a \"$as_shell\" -c \"$as_bourne_compatible\"\"$as_required\" 2>/dev/null\nthen :\n  CONFIG_SHELL=$as_shell as_have_required=yes\n\t\t   if as_run=a \"$as_shell\" -c \"$as_bourne_compatible\"\"$as_suggested\" 2>/dev/null\nthen :\n  break 2\nfi\nfi\n\t   done;;\n       esac\n  as_found=false\ndone\nIFS=$as_save_IFS\nif $as_found\nthen :\n\nelse case e in #(\n  e) if { test -f \"$SHELL\" || test -f \"$SHELL.exe\"; } &&\n\t      as_run=a \"$SHELL\" -c \"$as_bourne_compatible\"\"$as_required\" 2>/dev/null\nthen :\n  CONFIG_SHELL=$SHELL as_have_required=yes\nfi ;;\nesac\nfi\n\n\n      if test \"x$CONFIG_SHELL\" != x\nthen :\n  export CONFIG_SHELL\n             # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed 'exec'.\nprintf \"%s\\n\" \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\nfi\n\n    if test x$as_have_required = xno\nthen :\n  printf \"%s\\n\" \"$0: This script requires a shell more modern than all\"\n  printf \"%s\\n\" \"$0: the shells that I found on your system.\"\n  if test ${ZSH_VERSION+y} ; then\n    printf \"%s\\n\" \"$0: In particular, zsh $ZSH_VERSION has bugs and should\"\n    printf \"%s\\n\" \"$0: be upgraded to zsh 4.3.4 or later.\"\n  else\n    printf \"%s\\n\" \"$0: Please tell bug-autoconf@gnu.org and xaizek@posteo.net\n$0: about your system, including any error possibly output\n$0: before this message. Then install a modern shell, or\n$0: manually run the script under such a shell if you do\n$0: have one.\"\n  fi\n  exit 1\nfi ;;\nesac\nfi\nfi\nSHELL=${CONFIG_SHELL-/bin/sh}\nexport SHELL\n# Unset more variables known to interfere with behavior of common tools.\nCLICOLOR_FORCE= GREP_OPTIONS=\nunset CLICOLOR_FORCE GREP_OPTIONS\n\n## --------------------- ##\n## M4sh Shell Functions. ##\n## --------------------- ##\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`printf \"%s\\n\" \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null\nthen :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse case e in #(\n  e) as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  } ;;\nesac\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null\nthen :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse case e in #(\n  e) as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  } ;;\nesac\nfi # as_fn_arith\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  printf \"%s\\n\" \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n  as_lineno_1=$LINENO as_lineno_1a=$LINENO\n  as_lineno_2=$LINENO as_lineno_2a=$LINENO\n  eval 'test \"x$as_lineno_1'$as_run'\" != \"x$as_lineno_2'$as_run'\" &&\n  test \"x`expr $as_lineno_1'$as_run' + 1`\" = \"x$as_lineno_2'$as_run'\"' || {\n  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)\n  sed -n '\n    p\n    /[$]LINENO/=\n  ' <$as_myself |\n    sed '\n      t clear\n      :clear\n      s/[$]LINENO.*/&-/\n      t lineno\n      b\n      :lineno\n      N\n      :loop\n      s/[$]LINENO\\([^'$as_cr_alnum'_].*\\n\\)\\(.*\\)/\\2\\1\\2/\n      t loop\n      s/-\\n.*//\n    ' >$as_me.lineno &&\n  chmod +x \"$as_me.lineno\" ||\n    { printf \"%s\\n\" \"$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell\" >&2; as_fn_exit 1; }\n\n  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have\n  # already done that, so ensure we don't try to do so again and fall\n  # in an infinite loop.  This has already happened in practice.\n  _as_can_reexec=no; export _as_can_reexec\n  # Don't try to exec as it changes $[0], causing all sort of problems\n  # (the dirname of $[0] is not the place where we might find the\n  # original and so on.  Autoconf is especially sensitive to this).\n  . \"./$as_me.lineno\"\n  # Exit status is that of the last command.\n  exit\n}\n\n\n# Determine whether it's possible to make 'echo' print without a newline.\n# These variables are no longer used directly by Autoconf, but are AC_SUBSTed\n# for compatibility with existing Makefiles.\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\n# For backward compatibility with old third-party macros, we provide\n# the shell variables $as_echo and $as_echo_n.  New code should use\n# AS_ECHO([\"message\"]) and AS_ECHO_N([\"message\"]), respectively.\nas_echo='printf %s\\n'\nas_echo_n='printf %s'\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both 'ln -s file dir' and 'ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; 'ln -s' creates a wrapper executable.\n    # In both cases, we have to default to 'cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_sed_cpp=\"y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g\"\nas_tr_cpp=\"eval sed '$as_sed_cpp'\" # deprecated\n\n# Sed expression to map a string onto a valid variable name.\nas_sed_sh=\"y%*+%pp%;s%[^_$as_cr_alnum]%_%g\"\nas_tr_sh=\"eval sed '$as_sed_sh'\" # deprecated\n\n\ntest -n \"$DJDIR\" || exec 7<&0 </dev/null\nexec 6>&1\n\n# Name of the host.\n# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,\n# so uname gets run too.\nac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`\n\n#\n# Initializations.\n#\nac_default_prefix=/usr/local\nac_clean_files=\nac_config_libobj_dir=.\nLIBOBJS=\ncross_compiling=no\nsubdirs=\nMFLAGS=\nMAKEFLAGS=\n\n# Identity of this package.\nPACKAGE_NAME='vifm'\nPACKAGE_TARNAME='vifm'\nPACKAGE_VERSION='0.13'\nPACKAGE_STRING='vifm 0.13'\nPACKAGE_BUGREPORT='xaizek@posteo.net'\nPACKAGE_URL='https://vifm.info'\n\nac_unique_file=\"src/vifm.c\"\n# Factoring default headers for most tests.\nac_includes_default=\"\\\n#include <stddef.h>\n#ifdef HAVE_STDIO_H\n# include <stdio.h>\n#endif\n#ifdef HAVE_STDLIB_H\n# include <stdlib.h>\n#endif\n#ifdef HAVE_STRING_H\n# include <string.h>\n#endif\n#ifdef HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n#ifdef HAVE_STDINT_H\n# include <stdint.h>\n#endif\n#ifdef HAVE_STRINGS_H\n# include <strings.h>\n#endif\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\"\n\nac_header_c_list=\nenable_year2038=no\nac_subst_vars='am__EXEEXT_FALSE\nam__EXEEXT_TRUE\nLTLIBOBJS\nLIBOBJS\nSANITIZERS_CFLAGS\nPTHREAD_CFLAGS\nPTHREAD_LIBS\nPTHREAD_CXX\nPTHREAD_CC\nax_pthread_config\nCPP\nSED\nDATA_SUFFIX\nIN_GIT_REPO\nGIT_PROG\nVIM_PROG\nPERL_PROG\nSED_PROG\nAWK_PROG\nCOL_PROG\nMANGEN_PROG\nHAVE_FILE_PROG\nTESTS_CFLAGS\nhost_os\nhost_vendor\nhost_cpu\nhost\nbuild_os\nbuild_vendor\nbuild_cpu\nbuild\nam__fastdepCC_FALSE\nam__fastdepCC_TRUE\nCCDEPMODE\nam__nodep\nAMDEPBACKSLASH\nAMDEP_FALSE\nAMDEP_TRUE\nam__include\nDEPDIR\nOBJEXT\nEXEEXT\nac_ct_CC\nCPPFLAGS\nLDFLAGS\nCFLAGS\nCC\nam__xargs_n\nam__rm_f_notfound\nAM_BACKSLASH\nAM_DEFAULT_VERBOSITY\nAM_DEFAULT_V\nAM_V\nCSCOPE\nETAGS\nCTAGS\nam__untar\nam__tar\nAMTAR\nam__leading_dot\nSET_MAKE\nAWK\nmkdir_p\nMKDIR_P\nINSTALL_STRIP_PROGRAM\nSTRIP\ninstall_sh\nMAKEINFO\nAUTOHEADER\nAUTOMAKE\nAUTOCONF\nACLOCAL\nVERSION\nPACKAGE\nCYGPATH_W\nam__isrc\nINSTALL_DATA\nINSTALL_SCRIPT\nINSTALL_PROGRAM\ntarget_alias\nhost_alias\nbuild_alias\nLIBS\nECHO_T\nECHO_N\nECHO_C\nDEFS\nmandir\nlocaledir\nlibdir\npsdir\npdfdir\ndvidir\nhtmldir\ninfodir\ndocdir\noldincludedir\nincludedir\nrunstatedir\nlocalstatedir\nsharedstatedir\nsysconfdir\ndatadir\ndatarootdir\nlibexecdir\nsbindir\nbindir\nprogram_transform_name\nprefix\nexec_prefix\nPACKAGE_URL\nPACKAGE_BUGREPORT\nPACKAGE_STRING\nPACKAGE_VERSION\nPACKAGE_TARNAME\nPACKAGE_NAME\nPATH_SEPARATOR\nSHELL\nam__quote'\nac_subst_files=''\nac_user_opts='\nenable_option_checking\nenable_silent_rules\nenable_dependency_tracking\nenable_largefile\nwith_curses_name\nwith_curses\nwith_glib\nwith_gtk\nwith_libmagic\nwith_X11\nwith_dyn_X11\nenable_extended_keys\nenable_desktop_files\nenable_remote_cmds\nenable_developer\nenable_werror\nenable_coverage\nenable_build_timestamp\nwith_sanitize\nenable_year2038\n'\n      ac_precious_vars='build_alias\nhost_alias\ntarget_alias\nCC\nCFLAGS\nLDFLAGS\nLIBS\nCPPFLAGS\nCPP'\n\n\n# Initialize some variables set by options.\nac_init_help=\nac_init_version=false\nac_unrecognized_opts=\nac_unrecognized_sep=\n# The variables have the same names as the options, with\n# dashes changed to underlines.\ncache_file=/dev/null\nexec_prefix=NONE\nno_create=\nno_recursion=\nprefix=NONE\nprogram_prefix=NONE\nprogram_suffix=NONE\nprogram_transform_name=s,x,x,\nsilent=\nsite=\nsrcdir=\nverbose=\nx_includes=NONE\nx_libraries=NONE\n\n# Installation directory options.\n# These are left unexpanded so users can \"make install exec_prefix=/foo\"\n# and all the variables that are supposed to be based on exec_prefix\n# by default will actually change.\n# Use braces instead of parens because sh, perl, etc. also accept them.\n# (The list follows the same order as the GNU Coding Standards.)\nbindir='${exec_prefix}/bin'\nsbindir='${exec_prefix}/sbin'\nlibexecdir='${exec_prefix}/libexec'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}'\nsysconfdir='${prefix}/etc'\nsharedstatedir='${prefix}/com'\nlocalstatedir='${prefix}/var'\nrunstatedir='${localstatedir}/run'\nincludedir='${prefix}/include'\noldincludedir='/usr/include'\ndocdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\ninfodir='${datarootdir}/info'\nhtmldir='${docdir}'\ndvidir='${docdir}'\npdfdir='${docdir}'\npsdir='${docdir}'\nlibdir='${exec_prefix}/lib'\nlocaledir='${datarootdir}/locale'\nmandir='${datarootdir}/man'\n\nac_prev=\nac_dashdash=\nfor ac_option\ndo\n  # If the previous option needs an argument, assign it.\n  if test -n \"$ac_prev\"; then\n    eval $ac_prev=\\$ac_option\n    ac_prev=\n    continue\n  fi\n\n  case $ac_option in\n  *=?*) ac_optarg=`expr \"X$ac_option\" : '[^=]*=\\(.*\\)'` ;;\n  *=)   ac_optarg= ;;\n  *)    ac_optarg=yes ;;\n  esac\n\n  case $ac_dashdash$ac_option in\n  --)\n    ac_dashdash=yes ;;\n\n  -bindir | --bindir | --bindi | --bind | --bin | --bi)\n    ac_prev=bindir ;;\n  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)\n    bindir=$ac_optarg ;;\n\n  -build | --build | --buil | --bui | --bu)\n    ac_prev=build_alias ;;\n  -build=* | --build=* | --buil=* | --bui=* | --bu=*)\n    build_alias=$ac_optarg ;;\n\n  -cache-file | --cache-file | --cache-fil | --cache-fi \\\n  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n    ac_prev=cache_file ;;\n  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)\n    cache_file=$ac_optarg ;;\n\n  --config-cache | -C)\n    cache_file=config.cache ;;\n\n  -datadir | --datadir | --datadi | --datad)\n    ac_prev=datadir ;;\n  -datadir=* | --datadir=* | --datadi=* | --datad=*)\n    datadir=$ac_optarg ;;\n\n  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \\\n  | --dataroo | --dataro | --datar)\n    ac_prev=datarootdir ;;\n  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \\\n  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)\n    datarootdir=$ac_optarg ;;\n\n  -disable-* | --disable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*disable-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=no ;;\n\n  -docdir | --docdir | --docdi | --doc | --do)\n    ac_prev=docdir ;;\n  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)\n    docdir=$ac_optarg ;;\n\n  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)\n    ac_prev=dvidir ;;\n  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)\n    dvidir=$ac_optarg ;;\n\n  -enable-* | --enable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*enable-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=\\$ac_optarg ;;\n\n  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \\\n  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \\\n  | --exec | --exe | --ex)\n    ac_prev=exec_prefix ;;\n  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \\\n  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \\\n  | --exec=* | --exe=* | --ex=*)\n    exec_prefix=$ac_optarg ;;\n\n  -gas | --gas | --ga | --g)\n    # Obsolete; use --with-gas.\n    with_gas=yes ;;\n\n  -help | --help | --hel | --he | -h)\n    ac_init_help=long ;;\n  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)\n    ac_init_help=recursive ;;\n  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)\n    ac_init_help=short ;;\n\n  -host | --host | --hos | --ho)\n    ac_prev=host_alias ;;\n  -host=* | --host=* | --hos=* | --ho=*)\n    host_alias=$ac_optarg ;;\n\n  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)\n    ac_prev=htmldir ;;\n  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \\\n  | --ht=*)\n    htmldir=$ac_optarg ;;\n\n  -includedir | --includedir | --includedi | --included | --include \\\n  | --includ | --inclu | --incl | --inc)\n    ac_prev=includedir ;;\n  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \\\n  | --includ=* | --inclu=* | --incl=* | --inc=*)\n    includedir=$ac_optarg ;;\n\n  -infodir | --infodir | --infodi | --infod | --info | --inf)\n    ac_prev=infodir ;;\n  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)\n    infodir=$ac_optarg ;;\n\n  -libdir | --libdir | --libdi | --libd)\n    ac_prev=libdir ;;\n  -libdir=* | --libdir=* | --libdi=* | --libd=*)\n    libdir=$ac_optarg ;;\n\n  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \\\n  | --libexe | --libex | --libe)\n    ac_prev=libexecdir ;;\n  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \\\n  | --libexe=* | --libex=* | --libe=*)\n    libexecdir=$ac_optarg ;;\n\n  -localedir | --localedir | --localedi | --localed | --locale)\n    ac_prev=localedir ;;\n  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)\n    localedir=$ac_optarg ;;\n\n  -localstatedir | --localstatedir | --localstatedi | --localstated \\\n  | --localstate | --localstat | --localsta | --localst | --locals)\n    ac_prev=localstatedir ;;\n  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \\\n  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)\n    localstatedir=$ac_optarg ;;\n\n  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)\n    ac_prev=mandir ;;\n  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)\n    mandir=$ac_optarg ;;\n\n  -nfp | --nfp | --nf)\n    # Obsolete; use --without-fp.\n    with_fp=no ;;\n\n  -no-create | --no-create | --no-creat | --no-crea | --no-cre \\\n  | --no-cr | --no-c | -n)\n    no_create=yes ;;\n\n  -no-recursion | --no-recursion | --no-recursio | --no-recursi \\\n  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)\n    no_recursion=yes ;;\n\n  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \\\n  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \\\n  | --oldin | --oldi | --old | --ol | --o)\n    ac_prev=oldincludedir ;;\n  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \\\n  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \\\n  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)\n    oldincludedir=$ac_optarg ;;\n\n  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n    ac_prev=prefix ;;\n  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n    prefix=$ac_optarg ;;\n\n  -program-prefix | --program-prefix | --program-prefi | --program-pref \\\n  | --program-pre | --program-pr | --program-p)\n    ac_prev=program_prefix ;;\n  -program-prefix=* | --program-prefix=* | --program-prefi=* \\\n  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)\n    program_prefix=$ac_optarg ;;\n\n  -program-suffix | --program-suffix | --program-suffi | --program-suff \\\n  | --program-suf | --program-su | --program-s)\n    ac_prev=program_suffix ;;\n  -program-suffix=* | --program-suffix=* | --program-suffi=* \\\n  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)\n    program_suffix=$ac_optarg ;;\n\n  -program-transform-name | --program-transform-name \\\n  | --program-transform-nam | --program-transform-na \\\n  | --program-transform-n | --program-transform- \\\n  | --program-transform | --program-transfor \\\n  | --program-transfo | --program-transf \\\n  | --program-trans | --program-tran \\\n  | --progr-tra | --program-tr | --program-t)\n    ac_prev=program_transform_name ;;\n  -program-transform-name=* | --program-transform-name=* \\\n  | --program-transform-nam=* | --program-transform-na=* \\\n  | --program-transform-n=* | --program-transform-=* \\\n  | --program-transform=* | --program-transfor=* \\\n  | --program-transfo=* | --program-transf=* \\\n  | --program-trans=* | --program-tran=* \\\n  | --progr-tra=* | --program-tr=* | --program-t=*)\n    program_transform_name=$ac_optarg ;;\n\n  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)\n    ac_prev=pdfdir ;;\n  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)\n    pdfdir=$ac_optarg ;;\n\n  -psdir | --psdir | --psdi | --psd | --ps)\n    ac_prev=psdir ;;\n  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)\n    psdir=$ac_optarg ;;\n\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil)\n    silent=yes ;;\n\n  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n  | --runstate | --runstat | --runsta | --runst | --runs \\\n  | --run | --ru | --r)\n    ac_prev=runstatedir ;;\n  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n  | --run=* | --ru=* | --r=*)\n    runstatedir=$ac_optarg ;;\n\n  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n    ac_prev=sbindir ;;\n  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n  | --sbi=* | --sb=*)\n    sbindir=$ac_optarg ;;\n\n  -sharedstatedir | --sharedstatedir | --sharedstatedi \\\n  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \\\n  | --sharedst | --shareds | --shared | --share | --shar \\\n  | --sha | --sh)\n    ac_prev=sharedstatedir ;;\n  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \\\n  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \\\n  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \\\n  | --sha=* | --sh=*)\n    sharedstatedir=$ac_optarg ;;\n\n  -site | --site | --sit)\n    ac_prev=site ;;\n  -site=* | --site=* | --sit=*)\n    site=$ac_optarg ;;\n\n  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n    ac_prev=srcdir ;;\n  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n    srcdir=$ac_optarg ;;\n\n  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \\\n  | --syscon | --sysco | --sysc | --sys | --sy)\n    ac_prev=sysconfdir ;;\n  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \\\n  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)\n    sysconfdir=$ac_optarg ;;\n\n  -target | --target | --targe | --targ | --tar | --ta | --t)\n    ac_prev=target_alias ;;\n  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)\n    target_alias=$ac_optarg ;;\n\n  -v | -verbose | --verbose | --verbos | --verbo | --verb)\n    verbose=yes ;;\n\n  -version | --version | --versio | --versi | --vers | -V)\n    ac_init_version=: ;;\n\n  -with-* | --with-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*with-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=\\$ac_optarg ;;\n\n  -without-* | --without-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*without-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=no ;;\n\n  --x)\n    # Obsolete; use --with-x.\n    with_x=yes ;;\n\n  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \\\n  | --x-incl | --x-inc | --x-in | --x-i)\n    ac_prev=x_includes ;;\n  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \\\n  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)\n    x_includes=$ac_optarg ;;\n\n  -x-libraries | --x-libraries | --x-librarie | --x-librari \\\n  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)\n    ac_prev=x_libraries ;;\n  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \\\n  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)\n    x_libraries=$ac_optarg ;;\n\n  -*) as_fn_error $? \"unrecognized option: '$ac_option'\nTry '$0 --help' for more information\"\n    ;;\n\n  *=*)\n    ac_envvar=`expr \"x$ac_option\" : 'x\\([^=]*\\)='`\n    # Reject names that are not valid shell variable names.\n    case $ac_envvar in #(\n      '' | [0-9]* | *[!_$as_cr_alnum]* )\n      as_fn_error $? \"invalid variable name: '$ac_envvar'\" ;;\n    esac\n    eval $ac_envvar=\\$ac_optarg\n    export $ac_envvar ;;\n\n  *)\n    # FIXME: should be removed in autoconf 3.0.\n    printf \"%s\\n\" \"$as_me: WARNING: you should use --build, --host, --target\" >&2\n    expr \"x$ac_option\" : \".*[^-._$as_cr_alnum]\" >/dev/null &&\n      printf \"%s\\n\" \"$as_me: WARNING: invalid host type: $ac_option\" >&2\n    : \"${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}\"\n    ;;\n\n  esac\ndone\n\nif test -n \"$ac_prev\"; then\n  ac_option=--`echo $ac_prev | sed 's/_/-/g'`\n  as_fn_error $? \"missing argument to $ac_option\"\nfi\n\nif test -n \"$ac_unrecognized_opts\"; then\n  case $enable_option_checking in\n    no) ;;\n    fatal) as_fn_error $? \"unrecognized options: $ac_unrecognized_opts\" ;;\n    *)     printf \"%s\\n\" \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2 ;;\n  esac\nfi\n\n# Check all directory arguments for consistency.\nfor ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n\t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n\t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n\t\tlibdir localedir mandir runstatedir\ndo\n  eval ac_val=\\$$ac_var\n  # Remove trailing slashes.\n  case $ac_val in\n    */ )\n      ac_val=`expr \"X$ac_val\" : 'X\\(.*[^/]\\)' \\| \"X$ac_val\" : 'X\\(.*\\)'`\n      eval $ac_var=\\$ac_val;;\n  esac\n  # Be sure to have absolute directory names.\n  case $ac_val in\n    [\\\\/$]* | ?:[\\\\/]* )  continue;;\n    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;\n  esac\n  as_fn_error $? \"expected an absolute directory name for --$ac_var: $ac_val\"\ndone\n\n# There might be people who depend on the old broken behavior: '$host'\n# used to hold the argument of --host etc.\n# FIXME: To remove some day.\nbuild=$build_alias\nhost=$host_alias\ntarget=$target_alias\n\n# FIXME: To remove some day.\nif test \"x$host_alias\" != x; then\n  if test \"x$build_alias\" = x; then\n    cross_compiling=maybe\n  elif test \"x$build_alias\" != \"x$host_alias\"; then\n    cross_compiling=yes\n  fi\nfi\n\nac_tool_prefix=\ntest -n \"$host_alias\" && ac_tool_prefix=$host_alias-\n\ntest \"$silent\" = yes && exec 6>/dev/null\n\n\nac_pwd=`pwd` && test -n \"$ac_pwd\" &&\nac_ls_di=`ls -di .` &&\nac_pwd_ls_di=`cd \"$ac_pwd\" && ls -di .` ||\n  as_fn_error $? \"working directory cannot be determined\"\ntest \"X$ac_ls_di\" = \"X$ac_pwd_ls_di\" ||\n  as_fn_error $? \"pwd does not report name of working directory\"\n\n\n# Find the source files, if location was not specified.\nif test -z \"$srcdir\"; then\n  ac_srcdir_defaulted=yes\n  # Try the directory containing this script, then the parent directory.\n  ac_confdir=`$as_dirname -- \"$as_myself\" ||\n$as_expr X\"$as_myself\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_myself\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$as_myself\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  srcdir=$ac_confdir\n  if test ! -r \"$srcdir/$ac_unique_file\"; then\n    srcdir=..\n  fi\nelse\n  ac_srcdir_defaulted=no\nfi\nif test ! -r \"$srcdir/$ac_unique_file\"; then\n  test \"$ac_srcdir_defaulted\" = yes && srcdir=\"$ac_confdir or ..\"\n  as_fn_error $? \"cannot find sources ($ac_unique_file) in $srcdir\"\nfi\nac_msg=\"sources are in $srcdir, but 'cd $srcdir' does not work\"\nac_abs_confdir=`(\n\tcd \"$srcdir\" && test -r \"./$ac_unique_file\" || as_fn_error $? \"$ac_msg\"\n\tpwd)`\n# When building in place, set srcdir=.\nif test \"$ac_abs_confdir\" = \"$ac_pwd\"; then\n  srcdir=.\nfi\n# Remove unnecessary trailing slashes from srcdir.\n# Double slashes in file names in object file debugging info\n# mess up M-x gdb in Emacs.\ncase $srcdir in\n*/) srcdir=`expr \"X$srcdir\" : 'X\\(.*[^/]\\)' \\| \"X$srcdir\" : 'X\\(.*\\)'`;;\nesac\nfor ac_var in $ac_precious_vars; do\n  eval ac_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_env_${ac_var}_value=\\$${ac_var}\n  eval ac_cv_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_cv_env_${ac_var}_value=\\$${ac_var}\ndone\n\n#\n# Report the --help message.\n#\nif test \"$ac_init_help\" = \"long\"; then\n  # Omit some internal or obsolete options to make the list less imposing.\n  # This message is too long to be a string in the A/UX 3.1 sh.\n  cat <<_ACEOF\n'configure' configures vifm 0.13 to adapt to many kinds of systems.\n\nUsage: $0 [OPTION]... [VAR=VALUE]...\n\nTo assign environment variables (e.g., CC, CFLAGS...), specify them as\nVAR=VALUE.  See below for descriptions of some of the useful variables.\n\nDefaults for the options are specified in brackets.\n\nConfiguration:\n  -h, --help              display this help and exit\n      --help=short        display options specific to this package\n      --help=recursive    display the short help of all the included packages\n  -V, --version           display version information and exit\n  -q, --quiet, --silent   do not print 'checking ...' messages\n      --cache-file=FILE   cache test results in FILE [disabled]\n  -C, --config-cache      alias for '--cache-file=config.cache'\n  -n, --no-create         do not create output files\n      --srcdir=DIR        find the sources in DIR [configure dir or '..']\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$ac_default_prefix]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, 'make install' will install all the files in\n'$ac_default_prefix/bin', '$ac_default_prefix/lib' etc.  You can specify\nan installation prefix other than '$ac_default_prefix' using '--prefix',\nfor instance '--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --sbindir=DIR           system admin executables [EPREFIX/sbin]\n  --libexecdir=DIR        program executables [EPREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/vifm]\n  --htmldir=DIR           html documentation [DOCDIR]\n  --dvidir=DIR            dvi documentation [DOCDIR]\n  --pdfdir=DIR            pdf documentation [DOCDIR]\n  --psdir=DIR             ps documentation [DOCDIR]\n_ACEOF\n\n  cat <<\\_ACEOF\n\nProgram names:\n  --program-prefix=PREFIX            prepend PREFIX to installed program names\n  --program-suffix=SUFFIX            append SUFFIX to installed program names\n  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names\n\nSystem types:\n  --build=BUILD     configure for building on BUILD [guessed]\n  --host=HOST       cross-compile to build programs to run on HOST [BUILD]\n_ACEOF\nfi\n\nif test -n \"$ac_init_help\"; then\n  case $ac_init_help in\n     short | recursive ) echo \"Configuration of vifm 0.13:\";;\n   esac\n  cat <<\\_ACEOF\n\nOptional Features:\n  --disable-option-checking  ignore unrecognized --enable/--with options\n  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n  --enable-silent-rules   less verbose build output (undo: \"make V=1\")\n  --disable-silent-rules  verbose build output (undo: \"make V=0\")\n  --enable-dependency-tracking\n                          do not reject slow dependency extractors\n  --disable-dependency-tracking\n                          speeds up one-time build\n  --disable-largefile     omit support for large files\n  --disable-extended-keys disable extended keys (like arrows, home etc.).\n                          Without it will be no delay after pressing escape\n                          [default=enabled]\n  --disable-desktop-files disable parsing of *.desktop files found on your\n                          system to get a list of programs associated with\n                          filetypes [default=enabled]\n  --enable-remote-cmds    enable remote command sending. [default=enabled]\n  --enable-developer      enables features of interest to developers\n                          [default=disabled]\n  --enable-werror         pass -Werror flag to compiler [default=disabled]\n  --enable-coverage       enables coverage information generation\n                          [default=disabled]\n  --disable-build-timestamp\n                          disables embedding build-timestamp information into\n                          executable [default=enabled]\n  --enable-year2038       support timestamps after 2038\n\nOptional Packages:\n  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n  --with-curses-name=NAME name of curses library file [default=ncursesw]\n  --with-curses=DIR       where ncurses is installed\n  --with-glib             use GLib2 to determine mimetypes if available\n                          [default=yes]\n  --with-gtk              (obsolete name of --with-glib) use GLib2 to\n                          determine mimetypes if available [default=yes]\n  --with-libmagic         use libmagic to determine mimetypes if available\n                          [default=yes]\n  --with-X11              use libX11 to determine terminal emulator title\n                          [default=yes]\n  --with-dyn-X11          load libX11 dynamically [default=yes]\n  --with-sanitize=basic|thread|leak\n                          enables sanitizers, \"basic\" means address and\n                          undefined sanitizers [default=]\n\nSome influential environment variables:\n  CC          C compiler command\n  CFLAGS      C compiler flags\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\n              nonstandard directory <lib dir>\n  LIBS        libraries to pass to the linker, e.g. -l<library>\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\n              you have headers in a nonstandard directory <include dir>\n  CPP         C preprocessor\n\nUse these variables to override the choices made by 'configure' or to help\nit to find libraries and programs with nonstandard names/locations.\n\nReport bugs to <xaizek@posteo.net>.\nvifm home page: <https://vifm.info>.\n_ACEOF\nac_status=$?\nfi\n\nif test \"$ac_init_help\" = \"recursive\"; then\n  # If there are subdirs, report their specific --help.\n  for ac_dir in : $ac_subdirs_all; do test \"x$ac_dir\" = x: && continue\n    test -d \"$ac_dir\" ||\n      { cd \"$srcdir\" && ac_pwd=`pwd` && srcdir=. && test -d \"$ac_dir\"; } ||\n      continue\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`printf \"%s\\n\" \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`printf \"%s\\n\" \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n    cd \"$ac_dir\" || { ac_status=$?; continue; }\n    # Check for configure.gnu first; this name is used for a wrapper for\n    # Metaconfig's \"Configure\" on case-insensitive file systems.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure.gnu\" --help=recursive\n    elif test -f \"$ac_srcdir/configure\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure\" --help=recursive\n    else\n      printf \"%s\\n\" \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n    fi || ac_status=$?\n    cd \"$ac_pwd\" || { ac_status=$?; break; }\n  done\nfi\n\ntest -n \"$ac_init_help\" && exit $ac_status\nif $ac_init_version; then\n  cat <<\\_ACEOF\nvifm configure 0.13\ngenerated by GNU Autoconf 2.72\n\nCopyright (C) 2023 Free Software Foundation, Inc.\nThis configure script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\n_ACEOF\n  exit\nfi\n\n## ------------------------ ##\n## Autoconf initialization. ##\n## ------------------------ ##\n\n# ac_fn_c_try_compile LINENO\n# --------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest.beam\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1 ;;\nesac\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_compile\n\n# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists and can be compiled using the include files in\n# INCLUDES, setting the cache variable VAR accordingly.\nac_fn_c_check_header_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\nprintf %s \"checking for $2... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$3=yes\"\nelse case e in #(\n  e) eval \"$3=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_compile\n\n# ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n# -------------------------------------------\n# Tests whether TYPE exists after having included INCLUDES, setting cache\n# variable VAR accordingly.\nac_fn_c_check_type ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\nprintf %s \"checking for $2... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) eval \"$3=no\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nif (sizeof ($2))\n\t return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nif (sizeof (($2)))\n\t    return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) eval \"$3=yes\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_type\n\n# ac_fn_c_try_link LINENO\n# -----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest.beam conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1 ;;\nesac\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_link\n\n# ac_fn_c_check_func LINENO FUNC VAR\n# ----------------------------------\n# Tests whether FUNC exists, setting the cache variable VAR accordingly\nac_fn_c_check_func ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\nprintf %s \"checking for $2... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n/* Define $2 to an innocuous variant, in case <limits.h> declares $2.\n   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n#define $2 innocuous_$2\n\n/* System header to define __stub macros and hopefully few prototypes,\n   which can conflict with char $2 (void); below.  */\n\n#include <limits.h>\n#undef $2\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar $2 (void);\n/* The GNU C library defines this for functions which it implements\n    to always fail with ENOSYS.  Some functions are actually named\n    something starting with __ and the normal name is an alias.  */\n#if defined __stub_$2 || defined __stub___$2\nchoke me\n#endif\n\nint\nmain (void)\n{\nreturn $2 ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  eval \"$3=yes\"\nelse case e in #(\n  e) eval \"$3=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_func\n\n# ac_fn_check_decl LINENO SYMBOL VAR INCLUDES EXTRA-OPTIONS FLAG-VAR\n# ------------------------------------------------------------------\n# Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n# accordingly. Pass EXTRA-OPTIONS to the compiler, using FLAG-VAR.\nac_fn_check_decl ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  as_decl_name=`echo $2|sed 's/ *(.*//'`\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\nprintf %s \"checking whether $as_decl_name is declared... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n  eval ac_save_FLAGS=\\$$6\n  as_fn_append $6 \" $5\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\n#ifndef $as_decl_name\n#ifdef __cplusplus\n  (void) $as_decl_use;\n#else\n  (void) $as_decl_name;\n#endif\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$3=yes\"\nelse case e in #(\n  e) eval \"$3=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n  eval $6=\\$ac_save_FLAGS\n ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_check_decl\n\n# ac_fn_c_check_member LINENO AGGR MEMBER VAR INCLUDES\n# ----------------------------------------------------\n# Tries to find if the field MEMBER exists in type AGGR, after including\n# INCLUDES, setting cache variable VAR accordingly.\nac_fn_c_check_member ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2.$3\" >&5\nprintf %s \"checking for $2.$3... \" >&6; }\nif eval test \\${$4+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$5\nint\nmain (void)\n{\nstatic $2 ac_aggr;\nif (ac_aggr.$3)\nreturn 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$4=yes\"\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$5\nint\nmain (void)\n{\nstatic $2 ac_aggr;\nif (sizeof ac_aggr.$3)\nreturn 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$4=yes\"\nelse case e in #(\n  e) eval \"$4=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$4\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_member\n\n# ac_fn_c_try_cpp LINENO\n# ----------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_c_preproc_warn_flag$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       }\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1 ;;\nesac\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_cpp\nac_configure_args_raw=\nfor ac_arg\ndo\n  case $ac_arg in\n  *\\'*)\n    ac_arg=`printf \"%s\\n\" \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n  esac\n  as_fn_append ac_configure_args_raw \" '$ac_arg'\"\ndone\n\ncase $ac_configure_args_raw in\n  *$as_nl*)\n    ac_safe_unquote= ;;\n  *)\n    ac_unsafe_z='|&;<>()$`\\\\\"*?[ ''\t' # This string ends in space, tab.\n    ac_unsafe_a=\"$ac_unsafe_z#~\"\n    ac_safe_unquote=\"s/ '\\\\([^$ac_unsafe_a][^$ac_unsafe_z]*\\\\)'/ \\\\1/g\"\n    ac_configure_args_raw=`      printf \"%s\\n\" \"$ac_configure_args_raw\" | sed \"$ac_safe_unquote\"`;;\nesac\n\ncat >config.log <<_ACEOF\nThis file contains any messages produced by compilers while\nrunning configure, to aid debugging if configure makes a mistake.\n\nIt was created by vifm $as_me 0.13, which was\ngenerated by GNU Autoconf 2.72.  Invocation command line was\n\n  $ $0$ac_configure_args_raw\n\n_ACEOF\nexec 5>>config.log\n{\ncat <<_ASUNAME\n## --------- ##\n## Platform. ##\n## --------- ##\n\nhostname = `(hostname || uname -n) 2>/dev/null | sed 1q`\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`\n\n/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`\n/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`\n/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`\n/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`\n\n_ASUNAME\n\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    printf \"%s\\n\" \"PATH: $as_dir\"\n  done\nIFS=$as_save_IFS\n\n} >&5\n\ncat >&5 <<_ACEOF\n\n\n## ----------- ##\n## Core tests. ##\n## ----------- ##\n\n_ACEOF\n\n\n# Keep a trace of the command line.\n# Strip out --no-create and --no-recursion so they do not pile up.\n# Strip out --silent because we don't want to record it for future runs.\n# Also quote any args containing shell meta-characters.\n# Make two passes to allow for proper duplicate-argument suppression.\nac_configure_args=\nac_configure_args0=\nac_configure_args1=\nac_must_keep_next=false\nfor ac_pass in 1 2\ndo\n  for ac_arg\n  do\n    case $ac_arg in\n    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;\n    -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n    | -silent | --silent | --silen | --sile | --sil)\n      continue ;;\n    *\\'*)\n      ac_arg=`printf \"%s\\n\" \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    case $ac_pass in\n    1) as_fn_append ac_configure_args0 \" '$ac_arg'\" ;;\n    2)\n      as_fn_append ac_configure_args1 \" '$ac_arg'\"\n      if test $ac_must_keep_next = true; then\n\tac_must_keep_next=false # Got value, back to normal.\n      else\n\tcase $ac_arg in\n\t  *=* | --config-cache | -C | -disable-* | --disable-* \\\n\t  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \\\n\t  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \\\n\t  | -with-* | --with-* | -without-* | --without-* | --x)\n\t    case \"$ac_configure_args0 \" in\n\t      \"$ac_configure_args1\"*\" '$ac_arg' \"* ) continue ;;\n\t    esac\n\t    ;;\n\t  -* ) ac_must_keep_next=true ;;\n\tesac\n      fi\n      as_fn_append ac_configure_args \" '$ac_arg'\"\n      ;;\n    esac\n  done\ndone\n{ ac_configure_args0=; unset ac_configure_args0;}\n{ ac_configure_args1=; unset ac_configure_args1;}\n\n# When interrupted or exit'd, cleanup temporary files, and complete\n# config.log.  We remove comments because anyway the quotes in there\n# would cause problems or look ugly.\n# WARNING: Use '\\'' to represent an apostrophe within the trap.\n# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.\ntrap 'exit_status=$?\n  # Sanitize IFS.\n  IFS=\" \"\"\t$as_nl\"\n  # Save into config.log some information that might help in debugging.\n  {\n    echo\n\n    printf \"%s\\n\" \"## ---------------- ##\n## Cache variables. ##\n## ---------------- ##\"\n    echo\n    # The following way of writing the cache mishandles newlines in values,\n(\n  for ac_var in `(set) 2>&1 | sed -n '\\''s/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'\\''`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n  (set) 2>&1 |\n    case $as_nl`(ac_space='\\'' '\\''; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      sed -n \\\n\t\"s/'\\''/'\\''\\\\\\\\'\\'''\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\''\\\\2'\\''/p\"\n      ;; #(\n    *)\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n)\n    echo\n\n    printf \"%s\\n\" \"## ----------------- ##\n## Output variables. ##\n## ----------------- ##\"\n    echo\n    for ac_var in $ac_subst_vars\n    do\n      eval ac_val=\\$$ac_var\n      case $ac_val in\n      *\\'\\''*) ac_val=`printf \"%s\\n\" \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n      esac\n      printf \"%s\\n\" \"$ac_var='\\''$ac_val'\\''\"\n    done | sort\n    echo\n\n    if test -n \"$ac_subst_files\"; then\n      printf \"%s\\n\" \"## ------------------- ##\n## File substitutions. ##\n## ------------------- ##\"\n      echo\n      for ac_var in $ac_subst_files\n      do\n\teval ac_val=\\$$ac_var\n\tcase $ac_val in\n\t*\\'\\''*) ac_val=`printf \"%s\\n\" \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n\tesac\n\tprintf \"%s\\n\" \"$ac_var='\\''$ac_val'\\''\"\n      done | sort\n      echo\n    fi\n\n    if test -s confdefs.h; then\n      printf \"%s\\n\" \"## ----------- ##\n## confdefs.h. ##\n## ----------- ##\"\n      echo\n      cat confdefs.h\n      echo\n    fi\n    test \"$ac_signal\" != 0 &&\n      printf \"%s\\n\" \"$as_me: caught signal $ac_signal\"\n    printf \"%s\\n\" \"$as_me: exit $exit_status\"\n  } >&5\n  rm -f core *.core core.conftest.* &&\n    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&\n    exit $exit_status\n' 0\nfor ac_signal in 1 2 13 15; do\n  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal\ndone\nac_signal=0\n\n# confdefs.h avoids OS command line length limits that DEFS can exceed.\nrm -f -r conftest* confdefs.h\n\nprintf \"%s\\n\" \"/* confdefs.h */\" > confdefs.h\n\n# Predefined preprocessor variables.\n\nprintf \"%s\\n\" \"#define PACKAGE_NAME \\\"$PACKAGE_NAME\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_TARNAME \\\"$PACKAGE_TARNAME\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_VERSION \\\"$PACKAGE_VERSION\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_STRING \\\"$PACKAGE_STRING\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_BUGREPORT \\\"$PACKAGE_BUGREPORT\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_URL \\\"$PACKAGE_URL\\\"\" >>confdefs.h\n\n\n# Let the site file select an alternate cache file if it wants to.\n# Prefer an explicitly selected file to automatically selected ones.\nif test -n \"$CONFIG_SITE\"; then\n  ac_site_files=\"$CONFIG_SITE\"\nelif test \"x$prefix\" != xNONE; then\n  ac_site_files=\"$prefix/share/config.site $prefix/etc/config.site\"\nelse\n  ac_site_files=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\nfi\n\nfor ac_site_file in $ac_site_files\ndo\n  case $ac_site_file in #(\n  */*) :\n     ;; #(\n  *) :\n    ac_site_file=./$ac_site_file ;;\nesac\n  if test -f \"$ac_site_file\" && test -r \"$ac_site_file\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file\" >&5\nprintf \"%s\\n\" \"$as_me: loading site script $ac_site_file\" >&6;}\n    sed 's/^/| /' \"$ac_site_file\" >&5\n    . \"$ac_site_file\" \\\n      || { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"failed to load site script $ac_site_file\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n  fi\ndone\n\nif test -r \"$cache_file\"; then\n  # Some versions of bash will fail to source /dev/null (special files\n  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.\n  if test /dev/null != \"$cache_file\" && test -f \"$cache_file\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: loading cache $cache_file\" >&5\nprintf \"%s\\n\" \"$as_me: loading cache $cache_file\" >&6;}\n    case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) . \"$cache_file\";;\n      *)                      . \"./$cache_file\";;\n    esac\n  fi\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: creating cache $cache_file\" >&5\nprintf \"%s\\n\" \"$as_me: creating cache $cache_file\" >&6;}\n  >$cache_file\nfi\n\nas_fn_append ac_header_c_list \" stdio.h stdio_h HAVE_STDIO_H\"\n# Test code for whether the C compiler supports C89 (global declarations)\nac_c_conftest_c89_globals='\n/* Does the compiler advertise C89 conformance?\n   Do not test the value of __STDC__, because some compilers set it to 0\n   while being otherwise adequately conformant. */\n#if !defined __STDC__\n# error \"Compiler does not advertise C89 conformance\"\n#endif\n\n#include <stddef.h>\n#include <stdarg.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */\nstruct buf { int x; };\nstruct buf * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (char **p, int i)\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* C89 style stringification. */\n#define noexpand_stringify(a) #a\nconst char *stringified = noexpand_stringify(arbitrary+token=sequence);\n\n/* C89 style token pasting.  Exercises some of the corner cases that\n   e.g. old MSVC gets wrong, but not very hard. */\n#define noexpand_concat(a,b) a##b\n#define expand_concat(a,b) noexpand_concat(a,b)\nextern int vA;\nextern int vbee;\n#define aye A\n#define bee B\nint *pvA = &expand_concat(v,aye);\nint *pvbee = &noexpand_concat(v,bee);\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not \\xHH hex character constants.\n   These do not provoke an error unfortunately, instead are silently treated\n   as an \"x\".  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously \\x00 != x always comes out true, for an\n   array size at least.  It is necessary to write \\x00 == 0 to get something\n   that is true only with -std.  */\nint osf4_cc_array ['\\''\\x00'\\'' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) '\\''x'\\''\nint xlc6_cc_array[FOO(a) == '\\''x'\\'' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),\n               int, int);'\n\n# Test code for whether the C compiler supports C89 (body of main).\nac_c_conftest_c89_main='\nok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);\n'\n\n# Test code for whether the C compiler supports C99 (global declarations)\nac_c_conftest_c99_globals='\n/* Does the compiler advertise C99 conformance? */\n#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L\n# error \"Compiler does not advertise C99 conformance\"\n#endif\n\n// See if C++-style comments work.\n\n#include <stdbool.h>\nextern int puts (const char *);\nextern int printf (const char *, ...);\nextern int dprintf (int, const char *, ...);\nextern void *malloc (size_t);\nextern void free (void *);\n\n// Check varargs macros.  These examples are taken from C99 6.10.3.5.\n// dprintf is used instead of fprintf to avoid needing to declare\n// FILE and stderr.\n#define debug(...) dprintf (2, __VA_ARGS__)\n#define showlist(...) puts (#__VA_ARGS__)\n#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))\nstatic void\ntest_varargs_macros (void)\n{\n  int x = 1234;\n  int y = 5678;\n  debug (\"Flag\");\n  debug (\"X = %d\\n\", x);\n  showlist (The first, second, and third items.);\n  report (x>y, \"x is %d but y is %d\", x, y);\n}\n\n// Check long long types.\n#define BIG64 18446744073709551615ull\n#define BIG32 4294967295ul\n#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)\n#if !BIG_OK\n  #error \"your preprocessor is broken\"\n#endif\n#if BIG_OK\n#else\n  #error \"your preprocessor is broken\"\n#endif\nstatic long long int bignum = -9223372036854775807LL;\nstatic unsigned long long int ubignum = BIG64;\n\nstruct incomplete_array\n{\n  int datasize;\n  double data[];\n};\n\nstruct named_init {\n  int number;\n  const wchar_t *name;\n  double average;\n};\n\ntypedef const char *ccp;\n\nstatic inline int\ntest_restrict (ccp restrict text)\n{\n  // Iterate through items via the restricted pointer.\n  // Also check for declarations in for loops.\n  for (unsigned int i = 0; *(text+i) != '\\''\\0'\\''; ++i)\n    continue;\n  return 0;\n}\n\n// Check varargs and va_copy.\nstatic bool\ntest_varargs (const char *format, ...)\n{\n  va_list args;\n  va_start (args, format);\n  va_list args_copy;\n  va_copy (args_copy, args);\n\n  const char *str = \"\";\n  int number = 0;\n  float fnumber = 0;\n\n  while (*format)\n    {\n      switch (*format++)\n\t{\n\tcase '\\''s'\\'': // string\n\t  str = va_arg (args_copy, const char *);\n\t  break;\n\tcase '\\''d'\\'': // int\n\t  number = va_arg (args_copy, int);\n\t  break;\n\tcase '\\''f'\\'': // float\n\t  fnumber = va_arg (args_copy, double);\n\t  break;\n\tdefault:\n\t  break;\n\t}\n    }\n  va_end (args_copy);\n  va_end (args);\n\n  return *str && number && fnumber;\n}\n'\n\n# Test code for whether the C compiler supports C99 (body of main).\nac_c_conftest_c99_main='\n  // Check bool.\n  _Bool success = false;\n  success |= (argc != 0);\n\n  // Check restrict.\n  if (test_restrict (\"String literal\") == 0)\n    success = true;\n  char *restrict newvar = \"Another string\";\n\n  // Check varargs.\n  success &= test_varargs (\"s, d'\\'' f .\", \"string\", 65, 34.234);\n  test_varargs_macros ();\n\n  // Check flexible array members.\n  struct incomplete_array *ia =\n    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));\n  ia->datasize = 10;\n  for (int i = 0; i < ia->datasize; ++i)\n    ia->data[i] = i * 1.234;\n  // Work around memory leak warnings.\n  free (ia);\n\n  // Check named initializers.\n  struct named_init ni = {\n    .number = 34,\n    .name = L\"Test wide string\",\n    .average = 543.34343,\n  };\n\n  ni.number = 58;\n\n  int dynamic_array[ni.number];\n  dynamic_array[0] = argv[0][0];\n  dynamic_array[ni.number - 1] = 543;\n\n  // work around unused variable warnings\n  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == '\\''x'\\''\n\t || dynamic_array[ni.number - 1] != 543);\n'\n\n# Test code for whether the C compiler supports C11 (global declarations)\nac_c_conftest_c11_globals='\n/* Does the compiler advertise C11 conformance? */\n#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n# error \"Compiler does not advertise C11 conformance\"\n#endif\n\n// Check _Alignas.\nchar _Alignas (double) aligned_as_double;\nchar _Alignas (0) no_special_alignment;\nextern char aligned_as_int;\nchar _Alignas (0) _Alignas (int) aligned_as_int;\n\n// Check _Alignof.\nenum\n{\n  int_alignment = _Alignof (int),\n  int_array_alignment = _Alignof (int[100]),\n  char_alignment = _Alignof (char)\n};\n_Static_assert (0 < -_Alignof (int), \"_Alignof is signed\");\n\n// Check _Noreturn.\nint _Noreturn does_not_return (void) { for (;;) continue; }\n\n// Check _Static_assert.\nstruct test_static_assert\n{\n  int x;\n  _Static_assert (sizeof (int) <= sizeof (long int),\n                  \"_Static_assert does not work in struct\");\n  long int y;\n};\n\n// Check UTF-8 literals.\n#define u8 syntax error!\nchar const utf8_literal[] = u8\"happens to be ASCII\" \"another string\";\n\n// Check duplicate typedefs.\ntypedef long *long_ptr;\ntypedef long int *long_ptr;\ntypedef long_ptr long_ptr;\n\n// Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.\nstruct anonymous\n{\n  union {\n    struct { int i; int j; };\n    struct { int k; long int l; } w;\n  };\n  int m;\n} v1;\n'\n\n# Test code for whether the C compiler supports C11 (body of main).\nac_c_conftest_c11_main='\n  _Static_assert ((offsetof (struct anonymous, i)\n\t\t   == offsetof (struct anonymous, w.k)),\n\t\t  \"Anonymous union alignment botch\");\n  v1.i = 2;\n  v1.w.k = 5;\n  ok |= v1.i != 5;\n'\n\n# Test code for whether the C compiler supports C11 (complete).\nac_c_conftest_c11_program=\"${ac_c_conftest_c89_globals}\n${ac_c_conftest_c99_globals}\n${ac_c_conftest_c11_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_c_conftest_c89_main}\n  ${ac_c_conftest_c99_main}\n  ${ac_c_conftest_c11_main}\n  return ok;\n}\n\"\n\n# Test code for whether the C compiler supports C99 (complete).\nac_c_conftest_c99_program=\"${ac_c_conftest_c89_globals}\n${ac_c_conftest_c99_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_c_conftest_c89_main}\n  ${ac_c_conftest_c99_main}\n  return ok;\n}\n\"\n\n# Test code for whether the C compiler supports C89 (complete).\nac_c_conftest_c89_program=\"${ac_c_conftest_c89_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_c_conftest_c89_main}\n  return ok;\n}\n\"\n\nas_fn_append ac_header_c_list \" stdlib.h stdlib_h HAVE_STDLIB_H\"\nas_fn_append ac_header_c_list \" string.h string_h HAVE_STRING_H\"\nas_fn_append ac_header_c_list \" inttypes.h inttypes_h HAVE_INTTYPES_H\"\nas_fn_append ac_header_c_list \" stdint.h stdint_h HAVE_STDINT_H\"\nas_fn_append ac_header_c_list \" strings.h strings_h HAVE_STRINGS_H\"\nas_fn_append ac_header_c_list \" sys/stat.h sys_stat_h HAVE_SYS_STAT_H\"\nas_fn_append ac_header_c_list \" sys/types.h sys_types_h HAVE_SYS_TYPES_H\"\nas_fn_append ac_header_c_list \" unistd.h unistd_h HAVE_UNISTD_H\"\nas_fn_append ac_header_c_list \" wchar.h wchar_h HAVE_WCHAR_H\"\nas_fn_append ac_header_c_list \" minix/config.h minix_config_h HAVE_MINIX_CONFIG_H\"\n\n# Auxiliary files required by this configure script.\nac_aux_files=\"config.guess config.sub compile missing install-sh\"\n\n# Locations in which to look for auxiliary files.\nac_aux_dir_candidates=\"${srcdir}/build-aux\"\n\n# Search for a directory containing all of the required auxiliary files,\n# $ac_aux_files, from the $PATH-style list $ac_aux_dir_candidates.\n# If we don't find one directory that contains all the files we need,\n# we report the set of missing files from the *first* directory in\n# $ac_aux_dir_candidates and give up.\nac_missing_aux_files=\"\"\nac_first_candidate=:\nprintf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: looking for aux files: $ac_aux_files\" >&5\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in $ac_aux_dir_candidates\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n  as_found=:\n\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:  trying $as_dir\" >&5\n  ac_aux_dir_found=yes\n  ac_install_sh=\n  for ac_aux in $ac_aux_files\n  do\n    # As a special case, if \"install-sh\" is required, that requirement\n    # can be satisfied by any of \"install-sh\", \"install.sh\", or \"shtool\",\n    # and $ac_install_sh is set appropriately for whichever one is found.\n    if test x\"$ac_aux\" = x\"install-sh\"\n    then\n      if test -f \"${as_dir}install-sh\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}install-sh found\" >&5\n        ac_install_sh=\"${as_dir}install-sh -c\"\n      elif test -f \"${as_dir}install.sh\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}install.sh found\" >&5\n        ac_install_sh=\"${as_dir}install.sh -c\"\n      elif test -f \"${as_dir}shtool\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}shtool found\" >&5\n        ac_install_sh=\"${as_dir}shtool install -c\"\n      else\n        ac_aux_dir_found=no\n        if $ac_first_candidate; then\n          ac_missing_aux_files=\"${ac_missing_aux_files} install-sh\"\n        else\n          break\n        fi\n      fi\n    else\n      if test -f \"${as_dir}${ac_aux}\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}${ac_aux} found\" >&5\n      else\n        ac_aux_dir_found=no\n        if $ac_first_candidate; then\n          ac_missing_aux_files=\"${ac_missing_aux_files} ${ac_aux}\"\n        else\n          break\n        fi\n      fi\n    fi\n  done\n  if test \"$ac_aux_dir_found\" = yes; then\n    ac_aux_dir=\"$as_dir\"\n    break\n  fi\n  ac_first_candidate=false\n\n  as_found=false\ndone\nIFS=$as_save_IFS\nif $as_found\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"cannot find required auxiliary files:$ac_missing_aux_files\" \"$LINENO\" 5 ;;\nesac\nfi\n\n\n# These three variables are undocumented and unsupported,\n# and are intended to be withdrawn in a future Autoconf release.\n# They can cause serious problems if a builder's source tree is in a directory\n# whose full name contains unusual characters.\nif test -f \"${ac_aux_dir}config.guess\"; then\n  ac_config_guess=\"$SHELL ${ac_aux_dir}config.guess\"\nfi\nif test -f \"${ac_aux_dir}config.sub\"; then\n  ac_config_sub=\"$SHELL ${ac_aux_dir}config.sub\"\nfi\nif test -f \"$ac_aux_dir/configure\"; then\n  ac_configure=\"$SHELL ${ac_aux_dir}configure\"\nfi\n\n# Check that the precious variables saved in the cache have kept the same\n# value.\nac_cache_corrupted=false\nfor ac_var in $ac_precious_vars; do\n  eval ac_old_set=\\$ac_cv_env_${ac_var}_set\n  eval ac_new_set=\\$ac_env_${ac_var}_set\n  eval ac_old_val=\\$ac_cv_env_${ac_var}_value\n  eval ac_new_val=\\$ac_env_${ac_var}_value\n  case $ac_old_set,$ac_new_set in\n    set,)\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: '$ac_var' was set to '$ac_old_val' in the previous run\" >&5\nprintf \"%s\\n\" \"$as_me: error: '$ac_var' was set to '$ac_old_val' in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,set)\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: '$ac_var' was not set in the previous run\" >&5\nprintf \"%s\\n\" \"$as_me: error: '$ac_var' was not set in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,);;\n    *)\n      if test \"x$ac_old_val\" != \"x$ac_new_val\"; then\n\t# differences in whitespace do not lead to failure.\n\tac_old_val_w=`echo x $ac_old_val`\n\tac_new_val_w=`echo x $ac_new_val`\n\tif test \"$ac_old_val_w\" != \"$ac_new_val_w\"; then\n\t  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: '$ac_var' has changed since the previous run:\" >&5\nprintf \"%s\\n\" \"$as_me: error: '$ac_var' has changed since the previous run:\" >&2;}\n\t  ac_cache_corrupted=:\n\telse\n\t  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in '$ac_var' since the previous run:\" >&5\nprintf \"%s\\n\" \"$as_me: warning: ignoring whitespace changes in '$ac_var' since the previous run:\" >&2;}\n\t  eval $ac_var=\\$ac_old_val\n\tfi\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   former value:  '$ac_old_val'\" >&5\nprintf \"%s\\n\" \"$as_me:   former value:  '$ac_old_val'\" >&2;}\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   current value: '$ac_new_val'\" >&5\nprintf \"%s\\n\" \"$as_me:   current value: '$ac_new_val'\" >&2;}\n      fi;;\n  esac\n  # Pass precious variables to config.status.\n  if test \"$ac_new_set\" = set; then\n    case $ac_new_val in\n    *\\'*) ac_arg=$ac_var=`printf \"%s\\n\" \"$ac_new_val\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    *) ac_arg=$ac_var=$ac_new_val ;;\n    esac\n    case \" $ac_configure_args \" in\n      *\" '$ac_arg' \"*) ;; # Avoid dups.  Use of quotes ensures accuracy.\n      *) as_fn_append ac_configure_args \" '$ac_arg'\" ;;\n    esac\n  fi\ndone\nif $ac_cache_corrupted; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build\" >&5\nprintf \"%s\\n\" \"$as_me: error: changes in the environment can compromise the build\" >&2;}\n  as_fn_error $? \"run '${MAKE-make} distclean' and/or 'rm $cache_file'\n\t    and start over\" \"$LINENO\" 5\nfi\n## -------------------- ##\n## Main body of script. ##\n## -------------------- ##\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\n\n\nam__api_version='1.17'\n\n\n\n  # Find a good install program.  We prefer a C program (faster),\n# so one script is as good as another.  But avoid the broken or\n# incompatible versions:\n# SysV /etc/install, /usr/sbin/install\n# SunOS /usr/etc/install\n# IRIX /sbin/install\n# AIX /bin/install\n# AmigaOS /C/install, which installs bootblocks on floppy discs\n# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag\n# AFS /usr/afsws/bin/install, which mishandles nonexistent args\n# SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n# OS/2's system install, which has a completely different semantic\n# ./install, which can be erroneously created by make from ./install.sh.\n# Reject install programs that cannot install multiple files.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install\" >&5\nprintf %s \"checking for a BSD-compatible install... \" >&6; }\nif test -z \"$INSTALL\"; then\nif test ${ac_cv_path_install+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    # Account for fact that we put trailing slashes in our PATH walk.\ncase $as_dir in #((\n  ./ | /[cC]/* | \\\n  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \\\n  ?:[\\\\/]os2[\\\\/]install[\\\\/]* | ?:[\\\\/]OS2[\\\\/]INSTALL[\\\\/]* | \\\n  /usr/ucb/* ) ;;\n  *)\n    # OSF1 and SCO ODT 3.0 have their own names for install.\n    # Don't use installbsd from OSF since it installs stuff as root\n    # by default.\n    for ac_prog in ginstall scoinst install; do\n      for ac_exec_ext in '' $ac_executable_extensions; do\n\tif as_fn_executable_p \"$as_dir$ac_prog$ac_exec_ext\"; then\n\t  if test $ac_prog = install &&\n\t    grep dspmsg \"$as_dir$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # AIX install.  It has an incompatible calling convention.\n\t    :\n\t  elif test $ac_prog = install &&\n\t    grep pwplus \"$as_dir$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # program-specific install script used by HP pwplus--don't use.\n\t    :\n\t  else\n\t    rm -rf conftest.one conftest.two conftest.dir\n\t    echo one > conftest.one\n\t    echo two > conftest.two\n\t    mkdir conftest.dir\n\t    if \"$as_dir$ac_prog$ac_exec_ext\" -c conftest.one conftest.two \"`pwd`/conftest.dir/\" &&\n\t      test -s conftest.one && test -s conftest.two &&\n\t      test -s conftest.dir/conftest.one &&\n\t      test -s conftest.dir/conftest.two\n\t    then\n\t      ac_cv_path_install=\"$as_dir$ac_prog$ac_exec_ext -c\"\n\t      break 3\n\t    fi\n\t  fi\n\tfi\n      done\n    done\n    ;;\nesac\n\n  done\nIFS=$as_save_IFS\n\nrm -rf conftest.one conftest.two conftest.dir\n ;;\nesac\nfi\n  if test ${ac_cv_path_install+y}; then\n    INSTALL=$ac_cv_path_install\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for INSTALL within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    INSTALL=$ac_install_sh\n  fi\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $INSTALL\" >&5\nprintf \"%s\\n\" \"$INSTALL\" >&6; }\n\n# Use test -z because SunOS4 sh mishandles braces in ${var-val}.\n# It thinks the first close brace ends the variable substitution.\ntest -z \"$INSTALL_PROGRAM\" && INSTALL_PROGRAM='${INSTALL}'\n\ntest -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n\ntest -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether sleep supports fractional seconds\" >&5\nprintf %s \"checking whether sleep supports fractional seconds... \" >&6; }\nif test ${am_cv_sleep_fractional_seconds+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if sleep 0.001 2>/dev/null\nthen :\n  am_cv_sleep_fractional_seconds=yes\nelse case e in #(\n  e) am_cv_sleep_fractional_seconds=no ;;\nesac\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_sleep_fractional_seconds\" >&5\nprintf \"%s\\n\" \"$am_cv_sleep_fractional_seconds\" >&6; }\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking filesystem timestamp resolution\" >&5\nprintf %s \"checking filesystem timestamp resolution... \" >&6; }\nif test ${am_cv_filesystem_timestamp_resolution+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) # Default to the worst case.\nam_cv_filesystem_timestamp_resolution=2\n\n# Only try to go finer than 1 sec if sleep can do it.\n# Don't try 1 sec, because if 0.01 sec and 0.1 sec don't work,\n# - 1 sec is not much of a win compared to 2 sec, and\n# - it takes 2 seconds to perform the test whether 1 sec works.\n#\n# Instead, just use the default 2s on platforms that have 1s resolution,\n# accept the extra 1s delay when using $sleep in the Automake tests, in\n# exchange for not incurring the 2s delay for running the test for all\n# packages.\n#\nam_try_resolutions=\nif test \"$am_cv_sleep_fractional_seconds\" = yes; then\n  # Even a millisecond often causes a bunch of false positives,\n  # so just try a hundredth of a second. The time saved between .001 and\n  # .01 is not terribly consequential.\n  am_try_resolutions=\"0.01 0.1 $am_try_resolutions\"\nfi\n\n# In order to catch current-generation FAT out, we must *modify* files\n# that already exist; the *creation* timestamp is finer.  Use names\n# that make ls -t sort them differently when they have equal\n# timestamps than when they have distinct timestamps, keeping\n# in mind that ls -t prints the *newest* file first.\nrm -f conftest.ts?\n: > conftest.ts1\n: > conftest.ts2\n: > conftest.ts3\n\n# Make sure ls -t actually works.  Do 'set' in a subshell so we don't\n# clobber the current shell's arguments. (Outer-level square brackets\n# are removed by m4; they're present so that m4 does not expand\n# <dollar><star>; be careful, easy to get confused.)\nif (\n     set X `ls -t conftest.ts[12]` &&\n     {\n       test \"$*\" != \"X conftest.ts1 conftest.ts2\" ||\n       test \"$*\" != \"X conftest.ts2 conftest.ts1\";\n     }\n); then :; else\n  # If neither matched, then we have a broken ls.  This can happen\n  # if, for instance, CONFIG_SHELL is bash and it inherits a\n  # broken ls alias from the environment.  This has actually\n  # happened.  Such a system could not be considered \"sane\".\n  printf \"%s\\n\" \"\"Bad output from ls -t: \\\"`ls -t conftest.ts[12]`\\\"\"\" >&5\n  { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"ls -t produces unexpected output.\nMake sure there is not a broken ls alias in your environment.\nSee 'config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nfor am_try_res in $am_try_resolutions; do\n  # Any one fine-grained sleep might happen to cross the boundary\n  # between two values of a coarser actual resolution, but if we do\n  # two fine-grained sleeps in a row, at least one of them will fall\n  # entirely within a coarse interval.\n  echo alpha > conftest.ts1\n  sleep $am_try_res\n  echo beta > conftest.ts2\n  sleep $am_try_res\n  echo gamma > conftest.ts3\n\n  # We assume that 'ls -t' will make use of high-resolution\n  # timestamps if the operating system supports them at all.\n  if (set X `ls -t conftest.ts?` &&\n      test \"$2\" = conftest.ts3 &&\n      test \"$3\" = conftest.ts2 &&\n      test \"$4\" = conftest.ts1); then\n    #\n    # Ok, ls -t worked. If we're at a resolution of 1 second, we're done,\n    # because we don't need to test make.\n    make_ok=true\n    if test $am_try_res != 1; then\n      # But if we've succeeded so far with a subsecond resolution, we\n      # have one more thing to check: make. It can happen that\n      # everything else supports the subsecond mtimes, but make doesn't;\n      # notably on macOS, which ships make 3.81 from 2006 (the last one\n      # released under GPLv2). https://bugs.gnu.org/68808\n      #\n      # We test $MAKE if it is defined in the environment, else \"make\".\n      # It might get overridden later, but our hope is that in practice\n      # it does not matter: it is the system \"make\" which is (by far)\n      # the most likely to be broken, whereas if the user overrides it,\n      # probably they did so with a better, or at least not worse, make.\n      # https://lists.gnu.org/archive/html/automake/2024-06/msg00051.html\n      #\n      # Create a Makefile (real tab character here):\n      rm -f conftest.mk\n      echo 'conftest.ts1: conftest.ts2' >conftest.mk\n      echo '\ttouch conftest.ts2' >>conftest.mk\n      #\n      # Now, running\n      #   touch conftest.ts1; touch conftest.ts2; make\n      # should touch ts1 because ts2 is newer. This could happen by luck,\n      # but most often, it will fail if make's support is insufficient. So\n      # test for several consecutive successes.\n      #\n      # (We reuse conftest.ts[12] because we still want to modify existing\n      # files, not create new ones, per above.)\n      n=0\n      make=${MAKE-make}\n      until test $n -eq 3; do\n        echo one > conftest.ts1\n        sleep $am_try_res\n        echo two > conftest.ts2 # ts2 should now be newer than ts1\n        if $make -f conftest.mk | grep 'up to date' >/dev/null; then\n          make_ok=false\n          break # out of $n loop\n        fi\n        n=`expr $n + 1`\n      done\n    fi\n    #\n    if $make_ok; then\n      # Everything we know to check worked out, so call this resolution good.\n      am_cv_filesystem_timestamp_resolution=$am_try_res\n      break # out of $am_try_res loop\n    fi\n    # Otherwise, we'll go on to check the next resolution.\n  fi\ndone\nrm -f conftest.ts?\n# (end _am_filesystem_timestamp_resolution)\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_filesystem_timestamp_resolution\" >&5\nprintf \"%s\\n\" \"$am_cv_filesystem_timestamp_resolution\" >&6; }\n\n# This check should not be cached, as it may vary across builds of\n# different projects.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether build environment is sane\" >&5\nprintf %s \"checking whether build environment is sane... \" >&6; }\n# Reject unsafe characters in $srcdir or the absolute working directory\n# name.  Accept space and tab only in the latter.\nam_lf='\n'\ncase `pwd` in\n  *[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]*)\n    as_fn_error $? \"unsafe absolute working directory name\" \"$LINENO\" 5;;\nesac\ncase $srcdir in\n  *[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]*)\n    as_fn_error $? \"unsafe srcdir value: '$srcdir'\" \"$LINENO\" 5;;\nesac\n\n# Do 'set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nam_build_env_is_sane=no\nam_has_slept=no\nrm -f conftest.file\nfor am_try in 1 2; do\n  echo \"timestamp, slept: $am_has_slept\" > conftest.file\n  if (\n    set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n    if test \"$*\" = \"X\"; then\n      # -L didn't work.\n      set X `ls -t \"$srcdir/configure\" conftest.file`\n    fi\n    test \"$2\" = conftest.file\n  ); then\n    am_build_env_is_sane=yes\n    break\n  fi\n  # Just in case.\n  sleep \"$am_cv_filesystem_timestamp_resolution\"\n  am_has_slept=yes\ndone\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_build_env_is_sane\" >&5\nprintf \"%s\\n\" \"$am_build_env_is_sane\" >&6; }\nif test \"$am_build_env_is_sane\" = no; then\n  as_fn_error $? \"newly created file is older than distributed files!\nCheck your system clock\" \"$LINENO\" 5\nfi\n\n# If we didn't sleep, we still need to ensure time stamps of config.status and\n# generated files are strictly newer.\nam_sleep_pid=\nif test -e conftest.file || grep 'slept: no' conftest.file >/dev/null 2>&1\nthen :\n\nelse case e in #(\n  e)   ( sleep \"$am_cv_filesystem_timestamp_resolution\" ) &\n  am_sleep_pid=$!\n ;;\nesac\nfi\n\nrm -f conftest.file\n\ntest \"$program_prefix\" != NONE &&\n  program_transform_name=\"s&^&$program_prefix&;$program_transform_name\"\n# Use a double $ so make ignores it.\ntest \"$program_suffix\" != NONE &&\n  program_transform_name=\"s&\\$&$program_suffix&;$program_transform_name\"\n# Double any \\ or $.\n# By default was 's,x,x', remove it if useless.\nac_script='s/[\\\\$]/&&/g;s/;s,x,x,$//'\nprogram_transform_name=`printf \"%s\\n\" \"$program_transform_name\" | sed \"$ac_script\"`\n\n\n# Expand $ac_aux_dir to an absolute path.\nam_aux_dir=`cd \"$ac_aux_dir\" && pwd`\n\n\n  if test x\"${MISSING+set}\" != xset; then\n  MISSING=\"\\${SHELL} '$am_aux_dir/missing'\"\nfi\n# Use eval to expand $SHELL\nif eval \"$MISSING --is-lightweight\"; then\n  am_missing_run=\"$MISSING \"\nelse\n  am_missing_run=\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: 'missing' script is too old or missing\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: 'missing' script is too old or missing\" >&2;}\nfi\n\nif test x\"${install_sh+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n  *)\n    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n  esac\nfi\n\n# Installed binaries are usually stripped using 'strip' when the user\n# run \"make install-strip\".  However 'strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the 'STRIP' environment variable to overrule this program.\nif test \"$cross_compiling\" != no; then\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}strip\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}strip; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_STRIP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$STRIP\"; then\n  ac_cv_prog_STRIP=\"$STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_STRIP=\"${ac_tool_prefix}strip\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nSTRIP=$ac_cv_prog_STRIP\nif test -n \"$STRIP\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $STRIP\" >&5\nprintf \"%s\\n\" \"$STRIP\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_STRIP\"; then\n  ac_ct_STRIP=$STRIP\n  # Extract the first word of \"strip\", so it can be a program name with args.\nset dummy strip; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_STRIP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_STRIP\"; then\n  ac_cv_prog_ac_ct_STRIP=\"$ac_ct_STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_STRIP=\"strip\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP\nif test -n \"$ac_ct_STRIP\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP\" >&5\nprintf \"%s\\n\" \"$ac_ct_STRIP\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_STRIP\" = x; then\n    STRIP=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    STRIP=$ac_ct_STRIP\n  fi\nelse\n  STRIP=\"$ac_cv_prog_STRIP\"\nfi\n\nfi\nINSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\n\n\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for a race-free mkdir -p\" >&5\nprintf %s \"checking for a race-free mkdir -p... \" >&6; }\nif test -z \"$MKDIR_P\"; then\n  if test ${ac_cv_path_mkdir+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in mkdir gmkdir; do\n\t for ac_exec_ext in '' $ac_executable_extensions; do\n\t   as_fn_executable_p \"$as_dir$ac_prog$ac_exec_ext\" || continue\n\t   case `\"$as_dir$ac_prog$ac_exec_ext\" --version 2>&1` in #(\n\t     'mkdir ('*'coreutils) '* | \\\n\t     *'BusyBox '* | \\\n\t     'mkdir (fileutils) '4.1*)\n\t       ac_cv_path_mkdir=$as_dir$ac_prog$ac_exec_ext\n\t       break 3;;\n\t   esac\n\t done\n       done\n  done\nIFS=$as_save_IFS\n ;;\nesac\nfi\n\n  test -d ./--version && rmdir ./--version\n  if test ${ac_cv_path_mkdir+y}; then\n    MKDIR_P=\"$ac_cv_path_mkdir -p\"\n  else\n    # As a last resort, use plain mkdir -p,\n    # in the hope it doesn't have the bugs of ancient mkdir.\n    MKDIR_P='mkdir -p'\n  fi\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $MKDIR_P\" >&5\nprintf \"%s\\n\" \"$MKDIR_P\" >&6; }\n\nfor ac_prog in gawk mawk nawk awk\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_AWK+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$AWK\"; then\n  ac_cv_prog_AWK=\"$AWK\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AWK=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nAWK=$ac_cv_prog_AWK\nif test -n \"$AWK\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $AWK\" >&5\nprintf \"%s\\n\" \"$AWK\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$AWK\" && break\ndone\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \\$(MAKE)\" >&5\nprintf %s \"checking whether ${MAKE-make} sets \\$(MAKE)... \" >&6; }\nset x ${MAKE-make}\nac_make=`printf \"%s\\n\" \"$2\" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`\nif eval test \\${ac_cv_prog_make_${ac_make}_set+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat >conftest.make <<\\_ACEOF\nSHELL = /bin/sh\nall:\n\t@echo '@@@%%%=$(MAKE)=@@@%%%'\n_ACEOF\n# GNU make sometimes prints \"make[1]: Entering ...\", which would confuse us.\ncase `${MAKE-make} -f conftest.make 2>/dev/null` in\n  *@@@%%%=?*=@@@%%%*)\n    eval ac_cv_prog_make_${ac_make}_set=yes;;\n  *)\n    eval ac_cv_prog_make_${ac_make}_set=no;;\nesac\nrm -f conftest.make ;;\nesac\nfi\nif eval test \\$ac_cv_prog_make_${ac_make}_set = yes; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n  SET_MAKE=\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n  SET_MAKE=\"MAKE=${MAKE-make}\"\nfi\n\nrm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\n\nAM_DEFAULT_VERBOSITY=1\n# Check whether --enable-silent-rules was given.\nif test ${enable_silent_rules+y}\nthen :\n  enableval=$enable_silent_rules;\nfi\n\nam_make=${MAKE-make}\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables\" >&5\nprintf %s \"checking whether $am_make supports nested variables... \" >&6; }\nif test ${am_cv_make_support_nested_variables+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if printf \"%s\\n\" 'TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables\" >&5\nprintf \"%s\\n\" \"$am_cv_make_support_nested_variables\" >&6; }\nAM_BACKSLASH='\\'\n\nam__rm_f_notfound=\nif (rm -f && rm -fr && rm -rf) 2>/dev/null\nthen :\n\nelse case e in #(\n  e) am__rm_f_notfound='\"\"' ;;\nesac\nfi\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking xargs -n works\" >&5\nprintf %s \"checking xargs -n works... \" >&6; }\nif test ${am_cv_xargs_n_works+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test \"`echo 1 2 3 | xargs -n2 echo`\" = \"1 2\n3\"\nthen :\n  am_cv_xargs_n_works=yes\nelse case e in #(\n  e) am_cv_xargs_n_works=no ;;\nesac\nfi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_xargs_n_works\" >&5\nprintf \"%s\\n\" \"$am_cv_xargs_n_works\" >&6; }\nif test \"$am_cv_xargs_n_works\" = yes\nthen :\n  am__xargs_n='xargs -n'\nelse case e in #(\n  e)   am__xargs_n='am__xargs_n () { shift; sed \"s/ /\\\\n/g\" | while read am__xargs_n_arg; do \"\" \"$am__xargs_n_arg\"; done; }'\n ;;\nesac\nfi\n\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n  # is not polluted with repeated \"-I.\"\n  am__isrc=' -I$(srcdir)'\n  # test to see if srcdir already configured\n  if test -f $srcdir/config.status; then\n    as_fn_error $? \"source directory already configured; run \\\"make distclean\\\" there first\" \"$LINENO\" 5\n  fi\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\n\n\n# Define the identity of the package.\n PACKAGE='vifm'\n VERSION='0.13'\n\n\nprintf \"%s\\n\" \"#define PACKAGE \\\"$PACKAGE\\\"\" >>confdefs.h\n\n\nprintf \"%s\\n\" \"#define VERSION \\\"$VERSION\\\"\" >>confdefs.h\n\n# Some tools Automake needs.\n\nACLOCAL=${ACLOCAL-\"${am_missing_run}aclocal-${am__api_version}\"}\n\n\nAUTOCONF=${AUTOCONF-\"${am_missing_run}autoconf\"}\n\n\nAUTOMAKE=${AUTOMAKE-\"${am_missing_run}automake-${am__api_version}\"}\n\n\nAUTOHEADER=${AUTOHEADER-\"${am_missing_run}autoheader\"}\n\n\nMAKEINFO=${MAKEINFO-\"${am_missing_run}makeinfo\"}\n\n# For better backward compatibility.  To be removed once Automake 1.9.x\n# dies out for good.  For more background, see:\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>\nmkdir_p='$(MKDIR_P)'\n\n# We need awk for the \"check\" target (and possibly the TAP driver).  The\n# system \"awk\" is bad on some platforms.\n# Always define AMTAR for backward compatibility.  Yes, it's still used\n# in the wild :-(  We should find a proper way to deprecate it ...\nAMTAR='$${TAR-tar}'\n\n\n# We'll loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar  pax cpio none'\n\nam__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'\n\n\n\n\n\n# Variables for tags utilities; see am/tags.am\nif test -z \"$CTAGS\"; then\n  CTAGS=ctags\nfi\n\nif test -z \"$ETAGS\"; then\n  ETAGS=etags\nfi\n\nif test -z \"$CSCOPE\"; then\n  CSCOPE=cscope\nfi\n\n\n\n\n\n\n\nac_config_headers=\"$ac_config_headers build-aux/config.h\"\n\n\n\nprintf \"%s\\n\" \"#define VERSION_NUM 1300\" >>confdefs.h\n\n\n\nprintf \"%s\\n\" \"#define PACKAGE_SYSCONF_DIR /**/\" >>confdefs.h\n\n\nprintf \"%s\\n\" \"#define PACKAGE_DATA_DIR /**/\" >>confdefs.h\n\n\nprintf \"%s\\n\" \"#define PACKAGE_SOURCE_DIR /**/\" >>confdefs.h\n\n\n\n\n\n\n\n\n\n\n\nDEPDIR=\"${am__leading_dot}deps\"\n\nac_config_commands=\"$ac_config_commands depfiles\"\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} supports the include directive\" >&5\nprintf %s \"checking whether ${MAKE-make} supports the include directive... \" >&6; }\ncat > confinc.mk << 'END'\nam__doit:\n\t@echo this is the am__doit target >confinc.out\n.PHONY: am__doit\nEND\nam__include=\"#\"\nam__quote=\n# BSD make does it like this.\necho '.include \"confinc.mk\" # ignored' > confmf.BSD\n# Other make implementations (GNU, Solaris 10, AIX) do it like this.\necho 'include confinc.mk # ignored' > confmf.GNU\n_am_result=no\nfor s in GNU BSD; do\n  { echo \"$as_me:$LINENO: ${MAKE-make} -f confmf.$s && cat confinc.out\" >&5\n   (${MAKE-make} -f confmf.$s && cat confinc.out) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }\n  case $?:`cat confinc.out 2>/dev/null` in #(\n  '0:this is the am__doit target') :\n    case $s in #(\n  BSD) :\n    am__include='.include' am__quote='\"' ;; #(\n  *) :\n    am__include='include' am__quote='' ;;\nesac ;; #(\n  *) :\n     ;;\nesac\n  if test \"$am__include\" != \"#\"; then\n    _am_result=\"yes ($s style)\"\n    break\n  fi\ndone\nrm -f confinc.* confmf.*\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: ${_am_result}\" >&5\nprintf \"%s\\n\" \"${_am_result}\" >&6; }\n\n# Check whether --enable-dependency-tracking was given.\nif test ${enable_dependency_tracking+y}\nthen :\n  enableval=$enable_dependency_tracking;\nfi\n\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\n  am__nodep='_no'\nfi\n if test \"x$enable_dependency_tracking\" != xno; then\n  AMDEP_TRUE=\n  AMDEP_FALSE='#'\nelse\n  AMDEP_TRUE='#'\n  AMDEP_FALSE=\nfi\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir$ac_word${1+' '}$@\"\n  fi\nfi\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}clang\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}clang; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}clang\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"clang\", so it can be a program name with args.\nset dummy clang; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"clang\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\nprintf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion -version; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files a.out a.out.dSYM a.exe b.out\"\n# Try to create an executable without -o first, disregard a.out.\n# It will help us diagnose broken compilers, and finding out an intuition\n# of exeext.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler works\" >&5\nprintf %s \"checking whether the C compiler works... \" >&6; }\nac_link_default=`printf \"%s\\n\" \"$ac_link\" | sed 's/ -o *conftest[^ ]*//'`\n\n# The possible output files:\nac_files=\"a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*\"\n\nac_rmfiles=\nfor ac_file in $ac_files\ndo\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    * ) ac_rmfiles=\"$ac_rmfiles $ac_file\";;\n  esac\ndone\nrm -f $ac_rmfiles\n\nif { { ac_try=\"$ac_link_default\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link_default\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\nthen :\n  # Autoconf-2.13 could set the ac_cv_exeext variable to 'no'.\n# So ignore a value of 'no', otherwise this would lead to 'EXEEXT = no'\n# in a Makefile.  We should not override ac_cv_exeext if it was cached,\n# so that the user can short-circuit this test for compilers unknown to\n# Autoconf.\nfor ac_file in $ac_files ''\ndo\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )\n\t;;\n    [ab].out )\n\t# We found the default executable, but exeext='' is most\n\t# certainly right.\n\tbreak;;\n    *.* )\n\tif test ${ac_cv_exeext+y} && test \"$ac_cv_exeext\" != no;\n\tthen :; else\n\t   ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\tfi\n\t# We set ac_cv_exeext here because the later test for it is not\n\t# safe: cross compilers may not add the suffix if given an '-o'\n\t# argument, so we may need to know it at that point already.\n\t# Even if this section looks crufty: it has the advantage of\n\t# actually working.\n\tbreak;;\n    * )\n\tbreak;;\n  esac\ndone\ntest \"$ac_cv_exeext\" = no && ac_cv_exeext=\n\nelse case e in #(\n  e) ac_file='' ;;\nesac\nfi\nif test -z \"$ac_file\"\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nprintf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error 77 \"C compiler cannot create executables\nSee 'config.log' for more details\" \"$LINENO\" 5; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; } ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name\" >&5\nprintf %s \"checking for C compiler default output file name... \" >&6; }\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_file\" >&5\nprintf \"%s\\n\" \"$ac_file\" >&6; }\nac_exeext=$ac_cv_exeext\n\nrm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out\nac_clean_files=$ac_clean_files_save\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for suffix of executables\" >&5\nprintf %s \"checking for suffix of executables... \" >&6; }\nif { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\nthen :\n  # If both 'conftest.exe' and 'conftest' are 'present' (well, observable)\n# catch 'conftest.exe'.  For instance with Cygwin, 'ls conftest' will\n# work properly (i.e., refer to 'conftest.exe'), while it won't with\n# 'rm'.\nfor ac_file in conftest.exe conftest conftest.*; do\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    *.* ) ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\t  break;;\n    * ) break;;\n  esac\ndone\nelse case e in #(\n  e) { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of executables: cannot compile and link\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\nrm -f conftest conftest$ac_cv_exeext\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext\" >&5\nprintf \"%s\\n\" \"$ac_cv_exeext\" >&6; }\n\nrm -f conftest.$ac_ext\nEXEEXT=$ac_cv_exeext\nac_exeext=$EXEEXT\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdio.h>\nint\nmain (void)\n{\nFILE *f = fopen (\"conftest.out\", \"w\");\n if (!f)\n  return 1;\n return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files=\"$ac_clean_files conftest.out\"\n# Check that the compiler produces executables we can run.  If not, either\n# the compiler is broken, or we cross compile.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling\" >&5\nprintf %s \"checking whether we are cross compiling... \" >&6; }\nif test \"$cross_compiling\" != yes; then\n  { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n  if { ac_try='./conftest$ac_cv_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n    cross_compiling=no\n  else\n    if test \"$cross_compiling\" = maybe; then\n\tcross_compiling=yes\n    else\n\t{ { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error 77 \"cannot run C compiled programs.\nIf you meant to cross compile, use '--host'.\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n    fi\n  fi\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $cross_compiling\" >&5\nprintf \"%s\\n\" \"$cross_compiling\" >&6; }\n\nrm -f conftest.$ac_ext conftest$ac_cv_exeext \\\n  conftest.o conftest.obj conftest.out\nac_clean_files=$ac_clean_files_save\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for suffix of object files\" >&5\nprintf %s \"checking for suffix of object files... \" >&6; }\nif test ${ac_cv_objext+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nrm -f conftest.o conftest.obj\nif { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\nthen :\n  for ac_file in conftest.o conftest.obj conftest.*; do\n  test -f \"$ac_file\" || continue;\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;\n    *) ac_cv_objext=`expr \"$ac_file\" : '.*\\.\\(.*\\)'`\n       break;;\n  esac\ndone\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of object files: cannot compile\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\nrm -f conftest.$ac_cv_objext conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext\" >&5\nprintf \"%s\\n\" \"$ac_cv_objext\" >&6; }\nOBJEXT=$ac_cv_objext\nac_objext=$OBJEXT\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C\" >&5\nprintf %s \"checking whether the compiler supports GNU C... \" >&6; }\nif test ${ac_cv_c_compiler_gnu+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_compiler_gnu=yes\nelse case e in #(\n  e) ac_compiler_gnu=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\nprintf \"%s\\n\" \"$ac_cv_c_compiler_gnu\" >&6; }\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+y}\nac_save_CFLAGS=$CFLAGS\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\nprintf %s \"checking whether $CC accepts -g... \" >&6; }\nif test ${ac_cv_prog_cc_g+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_g=yes\nelse case e in #(\n  e) CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_g\" >&6; }\nif test $ac_test_CFLAGS; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\nac_prog_cc_stdc=no\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C11 features\" >&5\nprintf %s \"checking for $CC option to enable C11 features... \" >&6; }\nif test ${ac_cv_prog_cc_c11+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c11=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c11_program\n_ACEOF\nfor ac_arg in '' -std=gnu11\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c11=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c11\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c11\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c11\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c11\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c11\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c11\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c11\n  ac_prog_cc_stdc=c11 ;;\nesac\nfi\nfi\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C99 features\" >&5\nprintf %s \"checking for $CC option to enable C99 features... \" >&6; }\nif test ${ac_cv_prog_cc_c99+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c99=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c99_program\n_ACEOF\nfor ac_arg in '' -std=gnu99 -std=c99 -c99 -qlanglvl=extc1x -qlanglvl=extc99 -AC99 -D_STDC_C99=\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c99=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c99\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c99\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c99\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c99\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c99\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99\n  ac_prog_cc_stdc=c99 ;;\nesac\nfi\nfi\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C89 features\" >&5\nprintf %s \"checking for $CC option to enable C89 features... \" >&6; }\nif test ${ac_cv_prog_cc_c89+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c89_program\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std -Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c89\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c89\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c89\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c89\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89\n  ac_prog_cc_stdc=c89 ;;\nesac\nfi\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together\" >&5\nprintf %s \"checking whether $CC understands -c and -o together... \" >&6; }\nif test ${am_cv_prog_cc_c_o+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if { echo \"$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext\" >&5\n   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o\" >&5\nprintf \"%s\\n\" \"$am_cv_prog_cc_c_o\" >&6; }\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\ndepcc=\"$CC\"   am_compiler_list=\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\nprintf %s \"checking dependency style of $depcc... \" >&6; }\nif test ${am_cv_CC_dependencies_compiler_type+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_CC_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n 's/^#*\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n  fi\n  am__universal=false\n  case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thus:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_CC_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_CC_dependencies_compiler_type=none\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type\" >&5\nprintf \"%s\\n\" \"$am_cv_CC_dependencies_compiler_type\" >&6; }\nCCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n\n if\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_CC_dependencies_compiler_type\" = gcc3; then\n  am__fastdepCC_TRUE=\n  am__fastdepCC_FALSE='#'\nelse\n  am__fastdepCC_TRUE='#'\n  am__fastdepCC_FALSE=\nfi\n\n\n\nac_header= ac_cache=\nfor ac_item in $ac_header_c_list\ndo\n  if test $ac_cache; then\n    ac_fn_c_check_header_compile \"$LINENO\" $ac_header ac_cv_header_$ac_cache \"$ac_includes_default\"\n    if eval test \\\"x\\$ac_cv_header_$ac_cache\\\" = xyes; then\n      printf \"%s\\n\" \"#define $ac_item 1\" >> confdefs.h\n    fi\n    ac_header= ac_cache=\n  elif test $ac_header; then\n    ac_cache=$ac_item\n  else\n    ac_header=$ac_item\n  fi\ndone\n\n\n\n\n\n\n\n\nif test $ac_cv_header_stdlib_h = yes && test $ac_cv_header_string_h = yes\nthen :\n\nprintf \"%s\\n\" \"#define STDC_HEADERS 1\" >>confdefs.h\n\nfi\n\n\n\n\n\n\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__\" >&5\nprintf %s \"checking whether it is safe to define __EXTENSIONS__... \" >&6; }\nif test ${ac_cv_safe_to_define___extensions__+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#         define __EXTENSIONS__ 1\n          $ac_includes_default\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_safe_to_define___extensions__=yes\nelse case e in #(\n  e) ac_cv_safe_to_define___extensions__=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__\" >&5\nprintf \"%s\\n\" \"$ac_cv_safe_to_define___extensions__\" >&6; }\n\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether _XOPEN_SOURCE should be defined\" >&5\nprintf %s \"checking whether _XOPEN_SOURCE should be defined... \" >&6; }\nif test ${ac_cv_should_define__xopen_source+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_should_define__xopen_source=no\n    if test $ac_cv_header_wchar_h = yes\nthen :\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n          #include <wchar.h>\n          mbstate_t x;\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n            #define _XOPEN_SOURCE 500\n            #include <wchar.h>\n            mbstate_t x;\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_should_define__xopen_source=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_should_define__xopen_source\" >&5\nprintf \"%s\\n\" \"$ac_cv_should_define__xopen_source\" >&6; }\n\n  printf \"%s\\n\" \"#define _ALL_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _DARWIN_C_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _GNU_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _HPUX_ALT_XOPEN_SOCKET_API 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _NETBSD_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _OPENBSD_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _POSIX_PTHREAD_SEMANTICS 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_ATTRIBS_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_BFP_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_DFP_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_FUNCS_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_TYPES_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_LIB_EXT2__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_MATH_SPEC_FUNCS__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _TANDEM_SOURCE 1\" >>confdefs.h\n\n  if test $ac_cv_header_minix_config_h = yes\nthen :\n  MINIX=yes\n    printf \"%s\\n\" \"#define _MINIX 1\" >>confdefs.h\n\n    printf \"%s\\n\" \"#define _POSIX_SOURCE 1\" >>confdefs.h\n\n    printf \"%s\\n\" \"#define _POSIX_1_SOURCE 2\" >>confdefs.h\n\nelse case e in #(\n  e) MINIX= ;;\nesac\nfi\n  if test $ac_cv_safe_to_define___extensions__ = yes\nthen :\n  printf \"%s\\n\" \"#define __EXTENSIONS__ 1\" >>confdefs.h\n\nfi\n  if test $ac_cv_should_define__xopen_source = yes\nthen :\n  printf \"%s\\n\" \"#define _XOPEN_SOURCE 500\" >>confdefs.h\n\nfi\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir$ac_word${1+' '}$@\"\n  fi\nfi\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}clang\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}clang; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}clang\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"clang\", so it can be a program name with args.\nset dummy clang; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"clang\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\nprintf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion -version; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C\" >&5\nprintf %s \"checking whether the compiler supports GNU C... \" >&6; }\nif test ${ac_cv_c_compiler_gnu+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_compiler_gnu=yes\nelse case e in #(\n  e) ac_compiler_gnu=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\nprintf \"%s\\n\" \"$ac_cv_c_compiler_gnu\" >&6; }\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+y}\nac_save_CFLAGS=$CFLAGS\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\nprintf %s \"checking whether $CC accepts -g... \" >&6; }\nif test ${ac_cv_prog_cc_g+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_g=yes\nelse case e in #(\n  e) CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_g\" >&6; }\nif test $ac_test_CFLAGS; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\nac_prog_cc_stdc=no\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C11 features\" >&5\nprintf %s \"checking for $CC option to enable C11 features... \" >&6; }\nif test ${ac_cv_prog_cc_c11+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c11=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c11_program\n_ACEOF\nfor ac_arg in '' -std=gnu11\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c11=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c11\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c11\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c11\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c11\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c11\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c11\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c11\n  ac_prog_cc_stdc=c11 ;;\nesac\nfi\nfi\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C99 features\" >&5\nprintf %s \"checking for $CC option to enable C99 features... \" >&6; }\nif test ${ac_cv_prog_cc_c99+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c99=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c99_program\n_ACEOF\nfor ac_arg in '' -std=gnu99 -std=c99 -c99 -qlanglvl=extc1x -qlanglvl=extc99 -AC99 -D_STDC_C99=\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c99=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c99\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c99\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c99\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c99\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c99\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99\n  ac_prog_cc_stdc=c99 ;;\nesac\nfi\nfi\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C89 features\" >&5\nprintf %s \"checking for $CC option to enable C89 features... \" >&6; }\nif test ${ac_cv_prog_cc_c89+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c89_program\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std -Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c89\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c89\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c89\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c89\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89\n  ac_prog_cc_stdc=c89 ;;\nesac\nfi\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together\" >&5\nprintf %s \"checking whether $CC understands -c and -o together... \" >&6; }\nif test ${am_cv_prog_cc_c_o+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if { echo \"$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext\" >&5\n   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o\" >&5\nprintf \"%s\\n\" \"$am_cv_prog_cc_c_o\" >&6; }\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\ndepcc=\"$CC\"   am_compiler_list=\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\nprintf %s \"checking dependency style of $depcc... \" >&6; }\nif test ${am_cv_CC_dependencies_compiler_type+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_CC_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n 's/^#*\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n  fi\n  am__universal=false\n  case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thus:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_CC_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_CC_dependencies_compiler_type=none\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type\" >&5\nprintf \"%s\\n\" \"$am_cv_CC_dependencies_compiler_type\" >&6; }\nCCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n\n if\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_CC_dependencies_compiler_type\" = gcc3; then\n  am__fastdepCC_TRUE=\n  am__fastdepCC_FALSE='#'\nelse\n  am__fastdepCC_TRUE='#'\n  am__fastdepCC_FALSE=\nfi\n\n\n\n\nAM_DEFAULT_VERBOSITY=0\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\n\n  # Make sure we can run config.sub.\n$SHELL \"${ac_aux_dir}config.sub\" sun4 >/dev/null 2>&1 ||\n  as_fn_error $? \"cannot run $SHELL ${ac_aux_dir}config.sub\" \"$LINENO\" 5\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking build system type\" >&5\nprintf %s \"checking build system type... \" >&6; }\nif test ${ac_cv_build+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_build_alias=$build_alias\ntest \"x$ac_build_alias\" = x &&\n  ac_build_alias=`$SHELL \"${ac_aux_dir}config.guess\"`\ntest \"x$ac_build_alias\" = x &&\n  as_fn_error $? \"cannot guess build type; you must specify one\" \"$LINENO\" 5\nac_cv_build=`$SHELL \"${ac_aux_dir}config.sub\" $ac_build_alias` ||\n  as_fn_error $? \"$SHELL ${ac_aux_dir}config.sub $ac_build_alias failed\" \"$LINENO\" 5\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_build\" >&5\nprintf \"%s\\n\" \"$ac_cv_build\" >&6; }\ncase $ac_cv_build in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical build\" \"$LINENO\" 5;;\nesac\nbuild=$ac_cv_build\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_build\nshift\nbuild_cpu=$1\nbuild_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nbuild_os=$*\nIFS=$ac_save_IFS\ncase $build_os in *\\ *) build_os=`echo \"$build_os\" | sed 's/ /-/g'`;; esac\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking host system type\" >&5\nprintf %s \"checking host system type... \" >&6; }\nif test ${ac_cv_host+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test \"x$host_alias\" = x; then\n  ac_cv_host=$ac_cv_build\nelse\n  ac_cv_host=`$SHELL \"${ac_aux_dir}config.sub\" $host_alias` ||\n    as_fn_error $? \"$SHELL ${ac_aux_dir}config.sub $host_alias failed\" \"$LINENO\" 5\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_host\" >&5\nprintf \"%s\\n\" \"$ac_cv_host\" >&6; }\ncase $ac_cv_host in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical host\" \"$LINENO\" 5;;\nesac\nhost=$ac_cv_host\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_host\nshift\nhost_cpu=$1\nhost_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nhost_os=$*\nIFS=$ac_save_IFS\ncase $host_os in *\\ *) host_os=`echo \"$host_os\" | sed 's/ /-/g'`;; esac\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking host\" >&5\nprintf %s \"checking host... \" >&6; }\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $host\" >&5\nprintf \"%s\\n\" \"$host\" >&6; }\ncase \"$host_os\" in\n    macos* | darwin*)\n        OSX_HOST=1\n        ;;\n    *)\n        OSX_HOST=\n        ;;\nesac\n\nTESTS_CFLAGS=\"$CFLAGS\"\n\n\n\nprintf \"%s\\n\" \"#define _XOPEN_SOURCE_EXTENDED 1\" >>confdefs.h\n\n\n\nprintf \"%s\\n\" \"#define UTF8PROC_STATIC 1\" >>confdefs.h\n\n\n       for ac_header in alloca.h\ndo :\n  ac_fn_c_check_header_compile \"$LINENO\" \"alloca.h\" \"ac_cv_header_alloca_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_alloca_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_ALLOCA_H 1\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define HAVE_ALLOCA_H 1\" >>confdefs.h\n\nfi\n\ndone\n       for ac_header in malloc.h\ndo :\n  ac_fn_c_check_header_compile \"$LINENO\" \"malloc.h\" \"ac_cv_header_malloc_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_malloc_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_MALLOC_H 1\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define HAVE_MALLOC_H 1\" >>confdefs.h\n\nfi\n\ndone\nac_fn_c_check_header_compile \"$LINENO\" \"assert.h\" \"ac_cv_header_assert_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_assert_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"assert.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"ctype.h\" \"ac_cv_header_ctype_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_ctype_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"ctype.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"dirent.h\" \"ac_cv_header_dirent_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_dirent_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"dirent.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"errno.h\" \"ac_cv_header_errno_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_errno_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"errno.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"fcntl.h\" \"ac_cv_header_fcntl_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_fcntl_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fcntl.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"grp.h\" \"ac_cv_header_grp_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_grp_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"grp.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"inttypes.h\" \"ac_cv_header_inttypes_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_inttypes_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"inttypes.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"limits.h\" \"ac_cv_header_limits_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_limits_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"limits.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"locale.h\" \"ac_cv_header_locale_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_locale_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"locale.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"math.h\" \"ac_cv_header_math_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_math_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"math.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n       for ac_header in mntent.h\ndo :\n  ac_fn_c_check_header_compile \"$LINENO\" \"mntent.h\" \"ac_cv_header_mntent_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_mntent_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_MNTENT_H 1\" >>confdefs.h\n HAVE_MNTENT_H=1\nfi\n\ndone\nac_fn_c_check_header_compile \"$LINENO\" \"pwd.h\" \"ac_cv_header_pwd_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_pwd_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pwd.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"signal.h\" \"ac_cv_header_signal_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_signal_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"signal.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"stdarg.h\" \"ac_cv_header_stdarg_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_stdarg_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"stdarg.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"stddef.h\" \"ac_cv_header_stddef_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_stddef_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"stddef.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"stdint.h\" \"ac_cv_header_stdint_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_stdint_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"stdint.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"stdio.h\" \"ac_cv_header_stdio_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_stdio_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"stdio.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"stdlib.h\" \"ac_cv_header_stdlib_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_stdlib_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"stdlib.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"string.h\" \"ac_cv_header_string_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_string_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"string.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/ioctl.h\" \"ac_cv_header_sys_ioctl_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_ioctl_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sys/ioctl.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/stat.h\" \"ac_cv_header_sys_stat_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_stat_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sys/stat.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/time.h\" \"ac_cv_header_sys_time_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_time_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sys/time.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/types.h\" \"ac_cv_header_sys_types_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_types_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sys/types.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/wait.h\" \"ac_cv_header_sys_wait_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_wait_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sys/wait.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"termios.h\" \"ac_cv_header_termios_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_termios_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"termios.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"time.h\" \"ac_cv_header_time_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_time_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"time.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"unistd.h\" \"ac_cv_header_unistd_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_unistd_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"unistd.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"wchar.h\" \"ac_cv_header_wchar_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_wchar_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wchar.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"wctype.h\" \"ac_cv_header_wctype_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_wctype_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wctype.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/sysmacros.h\" \"ac_cv_header_sys_sysmacros_h\" \"#if HAVE_SYS_PARAM_H\n                   # include <sys/param.h>\n                   #endif\n\n\"\nif test \"x$ac_cv_header_sys_sysmacros_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_SYS_SYSMACROS_H 1\" >>confdefs.h\n\nfi\nac_fn_c_check_header_compile \"$LINENO\" \"sys/param.h\" \"ac_cv_header_sys_param_h\" \"#if HAVE_SYS_PARAM_H\n                   # include <sys/param.h>\n                   #endif\n\n\"\nif test \"x$ac_cv_header_sys_param_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_SYS_PARAM_H 1\" >>confdefs.h\n\nfi\nac_fn_c_check_header_compile \"$LINENO\" \"sys/user.h\" \"ac_cv_header_sys_user_h\" \"#if HAVE_SYS_PARAM_H\n                   # include <sys/param.h>\n                   #endif\n\n\"\nif test \"x$ac_cv_header_sys_user_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_SYS_USER_H 1\" >>confdefs.h\n\nfi\nac_fn_c_check_header_compile \"$LINENO\" \"linux/binfmts.h\" \"ac_cv_header_linux_binfmts_h\" \"#if HAVE_SYS_PARAM_H\n                   # include <sys/param.h>\n                   #endif\n\n\"\nif test \"x$ac_cv_header_linux_binfmts_h\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_LINUX_BINFMTS_H 1\" >>confdefs.h\n\nfi\n\nif test \"$ac_cv_header_sys_user_h\" = yes -a \"$ac_cv_header_linux_binfmts_h\" = yes; then\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <linux/binfmts.h>\n                        #include <sys/user.h>\n                        #include <unistd.h>\n                        #ifndef PAGE_SIZE\n                        #define PAGE_SIZE sysconf(_SC_PAGESIZE)\n                        #endif\n                        int main() { (void)MAX_ARG_STRLEN; return 0; }\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_MAX_ARG_STRLEN 1\" >>confdefs.h\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\nac_fn_c_check_type \"$LINENO\" \"uid_t\" \"ac_cv_type_uid_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_uid_t\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"gid_t\" \"ac_cv_type_gid_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_gid_t\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"mode_t\" \"ac_cv_type_mode_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_mode_t\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"off_t\" \"ac_cv_type_off_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_off_t\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"time_t\" \"ac_cv_type_time_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_time_t\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_uint64_t\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"direntry_t\" \"ac_cv_type_direntry_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_direntry_t\" = xyes\nthen :\n\nfi\n\nif test -n \"$HAVE_MNTENT_H\" ; then\n    ac_fn_c_check_type \"$LINENO\" \"mntent\" \"ac_cv_type_mntent\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_mntent\" = xyes\nthen :\n\nfi\n\nelse\n    ac_fn_c_check_type \"$LINENO\" \"getmntinfo\" \"ac_cv_type_getmntinfo\" \"\n                     #include <sys/param.h>\n                     #include <sys/ucred.h>\n                     #include <sys/mount.h>\n\n\"\nif test \"x$ac_cv_type_getmntinfo\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_GETMNTINFO 1\" >>confdefs.h\n\n\nfi\n\nfi\nac_fn_c_check_type \"$LINENO\" \"stat\" \"ac_cv_type_stat\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_stat\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"FILE\" \"ac_cv_type_FILE\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_FILE\" = xyes\nthen :\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"wchar_t\" \"ac_cv_type_wchar_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_wchar_t\" = xyes\nthen :\n\nfi\n\n\nac_fn_c_check_func \"$LINENO\" \"access\" \"ac_cv_func_access\"\nif test \"x$ac_cv_func_access\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"access() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"atof\" \"ac_cv_func_atof\"\nif test \"x$ac_cv_func_atof\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"atof() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"atoi\" \"ac_cv_func_atoi\"\nif test \"x$ac_cv_func_atoi\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"atoi() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"calloc\" \"ac_cv_func_calloc\"\nif test \"x$ac_cv_func_calloc\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"calloc() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"chdir\" \"ac_cv_func_chdir\"\nif test \"x$ac_cv_func_chdir\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"chdir() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"close\" \"ac_cv_func_close\"\nif test \"x$ac_cv_func_close\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"close() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"closedir\" \"ac_cv_func_closedir\"\nif test \"x$ac_cv_func_closedir\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"closedir() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"dup\" \"ac_cv_func_dup\"\nif test \"x$ac_cv_func_dup\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"dup() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"dup2\" \"ac_cv_func_dup2\"\nif test \"x$ac_cv_func_dup2\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"dup2() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"execve\" \"ac_cv_func_execve\"\nif test \"x$ac_cv_func_execve\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"execve() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"execvp\" \"ac_cv_func_execvp\"\nif test \"x$ac_cv_func_execvp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"execvp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"exit\" \"ac_cv_func_exit\"\nif test \"x$ac_cv_func_exit\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"exit() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fdatasync\" \"ac_cv_func_fdatasync\"\nif test \"x$ac_cv_func_fdatasync\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_FDATASYNC 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fclose\" \"ac_cv_func_fclose\"\nif test \"x$ac_cv_func_fclose\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fclose() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fdopen\" \"ac_cv_func_fdopen\"\nif test \"x$ac_cv_func_fdopen\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fdopen() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"feof\" \"ac_cv_func_feof\"\nif test \"x$ac_cv_func_feof\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"feof() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fgetc\" \"ac_cv_func_fgetc\"\nif test \"x$ac_cv_func_fgetc\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fgetc() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fgets\" \"ac_cv_func_fgets\"\nif test \"x$ac_cv_func_fgets\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fgets() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fork\" \"ac_cv_func_fork\"\nif test \"x$ac_cv_func_fork\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fork() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fprintf\" \"ac_cv_func_fprintf\"\nif test \"x$ac_cv_func_fprintf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fprintf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fputc\" \"ac_cv_func_fputc\"\nif test \"x$ac_cv_func_fputc\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fputc() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fputs\" \"ac_cv_func_fputs\"\nif test \"x$ac_cv_func_fputs\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fputs() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"free\" \"ac_cv_func_free\"\nif test \"x$ac_cv_func_free\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"free() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"fwrite\" \"ac_cv_func_fwrite\"\nif test \"x$ac_cv_func_fwrite\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"fwrite() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getcwd\" \"ac_cv_func_getcwd\"\nif test \"x$ac_cv_func_getcwd\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getcwd() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getenv\" \"ac_cv_func_getenv\"\nif test \"x$ac_cv_func_getenv\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getenv() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"geteuid\" \"ac_cv_func_geteuid\"\nif test \"x$ac_cv_func_geteuid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"geteuid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getgrent\" \"ac_cv_func_getgrent\"\nif test \"x$ac_cv_func_getgrent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getgrent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getgrgid\" \"ac_cv_func_getgrgid\"\nif test \"x$ac_cv_func_getgrgid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getgrgid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getgrgid_r\" \"ac_cv_func_getgrgid_r\"\nif test \"x$ac_cv_func_getgrgid_r\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getgrgid_r() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getgrnam\" \"ac_cv_func_getgrnam\"\nif test \"x$ac_cv_func_getgrnam\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getgrnam() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getpid\" \"ac_cv_func_getpid\"\nif test \"x$ac_cv_func_getpid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getpid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getppid\" \"ac_cv_func_getppid\"\nif test \"x$ac_cv_func_getppid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getppid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getpwent\" \"ac_cv_func_getpwent\"\nif test \"x$ac_cv_func_getpwent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getpwent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getpwnam\" \"ac_cv_func_getpwnam\"\nif test \"x$ac_cv_func_getpwnam\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getpwnam() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getpwuid\" \"ac_cv_func_getpwuid\"\nif test \"x$ac_cv_func_getpwuid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getpwuid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getpwuid_r\" \"ac_cv_func_getpwuid_r\"\nif test \"x$ac_cv_func_getpwuid_r\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getpwuid_r() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"ioctl\" \"ac_cv_func_ioctl\"\nif test \"x$ac_cv_func_ioctl\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"ioctl() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"iswalnum\" \"ac_cv_func_iswalnum\"\nif test \"x$ac_cv_func_iswalnum\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"iswalnum() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"iswdigit\" \"ac_cv_func_iswdigit\"\nif test \"x$ac_cv_func_iswdigit\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"iswdigit() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"iswprint\" \"ac_cv_func_iswprint\"\nif test \"x$ac_cv_func_iswprint\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"iswprint() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"iswspace\" \"ac_cv_func_iswspace\"\nif test \"x$ac_cv_func_iswspace\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"iswspace() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"iswupper\" \"ac_cv_func_iswupper\"\nif test \"x$ac_cv_func_iswupper\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"iswupper() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"kill\" \"ac_cv_func_kill\"\nif test \"x$ac_cv_func_kill\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"kill() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"localtime\" \"ac_cv_func_localtime\"\nif test \"x$ac_cv_func_localtime\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"localtime() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"malloc\" \"ac_cv_func_malloc\"\nif test \"x$ac_cv_func_malloc\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"malloc() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"mbstowcs\" \"ac_cv_func_mbstowcs\"\nif test \"x$ac_cv_func_mbstowcs\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"mbstowcs() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"memcmp\" \"ac_cv_func_memcmp\"\nif test \"x$ac_cv_func_memcmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"memcmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"memcpy\" \"ac_cv_func_memcpy\"\nif test \"x$ac_cv_func_memcpy\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"memcpy() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"memccpy\" \"ac_cv_func_memccpy\"\nif test \"x$ac_cv_func_memccpy\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"memccpy() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"memmove\" \"ac_cv_func_memmove\"\nif test \"x$ac_cv_func_memmove\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"memmove() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"memset\" \"ac_cv_func_memset\"\nif test \"x$ac_cv_func_memset\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"memset() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"mkdir\" \"ac_cv_func_mkdir\"\nif test \"x$ac_cv_func_mkdir\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"mkdir() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"mkstemp\" \"ac_cv_func_mkstemp\"\nif test \"x$ac_cv_func_mkstemp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"mkstemp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"opendir\" \"ac_cv_func_opendir\"\nif test \"x$ac_cv_func_opendir\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"opendir() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pathconf\" \"ac_cv_func_pathconf\"\nif test \"x$ac_cv_func_pathconf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pathconf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pause\" \"ac_cv_func_pause\"\nif test \"x$ac_cv_func_pause\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pause() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pclose\" \"ac_cv_func_pclose\"\nif test \"x$ac_cv_func_pclose\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pclose() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"perror\" \"ac_cv_func_perror\"\nif test \"x$ac_cv_func_perror\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"perror() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pipe\" \"ac_cv_func_pipe\"\nif test \"x$ac_cv_func_pipe\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pipe() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"popen\" \"ac_cv_func_popen\"\nif test \"x$ac_cv_func_popen\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"popen() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"printf\" \"ac_cv_func_printf\"\nif test \"x$ac_cv_func_printf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"printf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"puts\" \"ac_cv_func_puts\"\nif test \"x$ac_cv_func_puts\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"puts() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"qsort\" \"ac_cv_func_qsort\"\nif test \"x$ac_cv_func_qsort\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"qsort() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"rand\" \"ac_cv_func_rand\"\nif test \"x$ac_cv_func_rand\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"rand() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"read\" \"ac_cv_func_read\"\nif test \"x$ac_cv_func_read\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"read() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"readlink\" \"ac_cv_func_readlink\"\nif test \"x$ac_cv_func_readlink\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"readlink() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"realloc\" \"ac_cv_func_realloc\"\nif test \"x$ac_cv_func_realloc\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"realloc() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"realpath\" \"ac_cv_func_realpath\"\nif test \"x$ac_cv_func_realpath\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"realpath() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"rename\" \"ac_cv_func_rename\"\nif test \"x$ac_cv_func_rename\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"rename() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"rmdir\" \"ac_cv_func_rmdir\"\nif test \"x$ac_cv_func_rmdir\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"rmdir() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"select\" \"ac_cv_func_select\"\nif test \"x$ac_cv_func_select\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"select() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setenv\" \"ac_cv_func_setenv\"\nif test \"x$ac_cv_func_setenv\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setenv() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setgrent\" \"ac_cv_func_setgrent\"\nif test \"x$ac_cv_func_setgrent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setgrent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setlocale\" \"ac_cv_func_setlocale\"\nif test \"x$ac_cv_func_setlocale\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setlocale() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setpgid\" \"ac_cv_func_setpgid\"\nif test \"x$ac_cv_func_setpgid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setpgid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setpwent\" \"ac_cv_func_setpwent\"\nif test \"x$ac_cv_func_setpwent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setpwent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setsid\" \"ac_cv_func_setsid\"\nif test \"x$ac_cv_func_setsid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setsid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setvbuf\" \"ac_cv_func_setvbuf\"\nif test \"x$ac_cv_func_setvbuf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setvbuf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"sigaction\" \"ac_cv_func_sigaction\"\nif test \"x$ac_cv_func_sigaction\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sigaction() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"sigaddset\" \"ac_cv_func_sigaddset\"\nif test \"x$ac_cv_func_sigaddset\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sigaddset() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"sigemptyset\" \"ac_cv_func_sigemptyset\"\nif test \"x$ac_cv_func_sigemptyset\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sigemptyset() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"signal\" \"ac_cv_func_signal\"\nif test \"x$ac_cv_func_signal\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"signal() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"snprintf\" \"ac_cv_func_snprintf\"\nif test \"x$ac_cv_func_snprintf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"snprintf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"sprintf\" \"ac_cv_func_sprintf\"\nif test \"x$ac_cv_func_sprintf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sprintf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"srand\" \"ac_cv_func_srand\"\nif test \"x$ac_cv_func_srand\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"srand() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strcasecmp\" \"ac_cv_func_strcasecmp\"\nif test \"x$ac_cv_func_strcasecmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strcasecmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strcasestr\" \"ac_cv_func_strcasestr\"\nif test \"x$ac_cv_func_strcasestr\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_STRCASESTR 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strcat\" \"ac_cv_func_strcat\"\nif test \"x$ac_cv_func_strcat\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strcat() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strchr\" \"ac_cv_func_strchr\"\nif test \"x$ac_cv_func_strchr\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strchr() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strcmp\" \"ac_cv_func_strcmp\"\nif test \"x$ac_cv_func_strcmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strcmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strcpy\" \"ac_cv_func_strcpy\"\nif test \"x$ac_cv_func_strcpy\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strcpy() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strdup\" \"ac_cv_func_strdup\"\nif test \"x$ac_cv_func_strdup\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strdup() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strerror\" \"ac_cv_func_strerror\"\nif test \"x$ac_cv_func_strerror\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strerror() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strftime\" \"ac_cv_func_strftime\"\nif test \"x$ac_cv_func_strftime\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strftime() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strlen\" \"ac_cv_func_strlen\"\nif test \"x$ac_cv_func_strlen\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strlen() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strncasecmp\" \"ac_cv_func_strncasecmp\"\nif test \"x$ac_cv_func_strncasecmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strncasecmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strncat\" \"ac_cv_func_strncat\"\nif test \"x$ac_cv_func_strncat\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strncat() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strncmp\" \"ac_cv_func_strncmp\"\nif test \"x$ac_cv_func_strncmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strncmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strncpy\" \"ac_cv_func_strncpy\"\nif test \"x$ac_cv_func_strncpy\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strncpy() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strpbrk\" \"ac_cv_func_strpbrk\"\nif test \"x$ac_cv_func_strpbrk\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strpbrk() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strrchr\" \"ac_cv_func_strrchr\"\nif test \"x$ac_cv_func_strrchr\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strrchr() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strspn\" \"ac_cv_func_strspn\"\nif test \"x$ac_cv_func_strspn\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strspn() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strstr\" \"ac_cv_func_strstr\"\nif test \"x$ac_cv_func_strstr\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strstr() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strtok_r\" \"ac_cv_func_strtok_r\"\nif test \"x$ac_cv_func_strtok_r\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strtok_r() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strtol\" \"ac_cv_func_strtol\"\nif test \"x$ac_cv_func_strtol\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strtol() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strtoll\" \"ac_cv_func_strtoll\"\nif test \"x$ac_cv_func_strtoll\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"strtoll() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"strverscmp\" \"ac_cv_func_strverscmp\"\nif test \"x$ac_cv_func_strverscmp\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_STRVERSCMP_FUNC 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_func \"$LINENO\" \"sysconf\" \"ac_cv_func_sysconf\"\nif test \"x$ac_cv_func_sysconf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"sysconf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"time\" \"ac_cv_func_time\"\nif test \"x$ac_cv_func_time\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"time() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"tolower\" \"ac_cv_func_tolower\"\nif test \"x$ac_cv_func_tolower\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"tolower() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"toupper\" \"ac_cv_func_toupper\"\nif test \"x$ac_cv_func_toupper\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"toupper() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"towupper\" \"ac_cv_func_towupper\"\nif test \"x$ac_cv_func_towupper\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"towupper() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"ungetc\" \"ac_cv_func_ungetc\"\nif test \"x$ac_cv_func_ungetc\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"ungetc() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"unlink\" \"ac_cv_func_unlink\"\nif test \"x$ac_cv_func_unlink\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"unlink() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"unsetenv\" \"ac_cv_func_unsetenv\"\nif test \"x$ac_cv_func_unsetenv\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"unsetenv() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"utimes\" \"ac_cv_func_utimes\"\nif test \"x$ac_cv_func_utimes\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"utimes() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"vfprintf\" \"ac_cv_func_vfprintf\"\nif test \"x$ac_cv_func_vfprintf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"vfprintf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"vsnprintf\" \"ac_cv_func_vsnprintf\"\nif test \"x$ac_cv_func_vsnprintf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"vsnprintf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"vswprintf\" \"ac_cv_func_vswprintf\"\nif test \"x$ac_cv_func_vswprintf\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"vswprintf() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"waitpid\" \"ac_cv_func_waitpid\"\nif test \"x$ac_cv_func_waitpid\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"waitpid() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcscat\" \"ac_cv_func_wcscat\"\nif test \"x$ac_cv_func_wcscat\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcscat() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcscmp\" \"ac_cv_func_wcscmp\"\nif test \"x$ac_cv_func_wcscmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcscmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcscpy\" \"ac_cv_func_wcscpy\"\nif test \"x$ac_cv_func_wcscpy\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcscpy() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcslen\" \"ac_cv_func_wcslen\"\nif test \"x$ac_cv_func_wcslen\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcslen() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcsncmp\" \"ac_cv_func_wcsncmp\"\nif test \"x$ac_cv_func_wcsncmp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcsncmp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcsncpy\" \"ac_cv_func_wcsncpy\"\nif test \"x$ac_cv_func_wcsncpy\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcsncpy() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcstof\" \"ac_cv_func_wcstof\"\nif test \"x$ac_cv_func_wcstof\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcstof() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcstol\" \"ac_cv_func_wcstol\"\nif test \"x$ac_cv_func_wcstol\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcstol() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcstombs\" \"ac_cv_func_wcstombs\"\nif test \"x$ac_cv_func_wcstombs\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcstombs() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcswidth\" \"ac_cv_func_wcswidth\"\nif test \"x$ac_cv_func_wcswidth\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcswidth() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wcwidth\" \"ac_cv_func_wcwidth\"\nif test \"x$ac_cv_func_wcwidth\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wcwidth() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n\nac_fn_c_check_func \"$LINENO\" \"futimens\" \"ac_cv_func_futimens\"\nif test \"x$ac_cv_func_futimens\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_FUTIMENS 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_func \"$LINENO\" \"random\" \"ac_cv_func_random\"\nif test \"x$ac_cv_func_random\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_RANDOM 1\" >>confdefs.h\n\nfi\nac_fn_c_check_func \"$LINENO\" \"srandom\" \"ac_cv_func_srandom\"\nif test \"x$ac_cv_func_srandom\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_SRANDOM 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_func \"$LINENO\" \"reallocarray\" \"ac_cv_func_reallocarray\"\nif test \"x$ac_cv_func_reallocarray\" = xyes\nthen :\n  printf \"%s\\n\" \"#define HAVE_REALLOCARRAY 1\" >>confdefs.h\n\nfi\n\n\nif test -n \"$HAVE_MNTENT_H\" ; then\n    ac_fn_c_check_func \"$LINENO\" \"endmntent\" \"ac_cv_func_endmntent\"\nif test \"x$ac_cv_func_endmntent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"endmntent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"getmntent\" \"ac_cv_func_getmntent\"\nif test \"x$ac_cv_func_getmntent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getmntent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"setmntent\" \"ac_cv_func_setmntent\"\nif test \"x$ac_cv_func_setmntent\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setmntent() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nfi\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC options needed to detect all undeclared functions\" >&5\nprintf %s \"checking for $CC options needed to detect all undeclared functions... \" >&6; }\nif test ${ac_cv_c_undeclared_builtin_options+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CFLAGS=$CFLAGS\n   ac_cv_c_undeclared_builtin_options='cannot detect'\n   for ac_arg in '' -fno-builtin; do\n     CFLAGS=\"$ac_save_CFLAGS $ac_arg\"\n     # This test program should *not* compile successfully.\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n(void) strchr;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # This test program should compile successfully.\n        # No library function is consistently available on\n        # freestanding implementations, so test against a dummy\n        # declaration.  Include always-available headers on the\n        # off chance that they somehow elicit warnings.\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <float.h>\n#include <limits.h>\n#include <stdarg.h>\n#include <stddef.h>\nextern void ac_decl (int, char *);\n\nint\nmain (void)\n{\n(void) ac_decl (0, (char *) 0);\n  (void) ac_decl;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  if test x\"$ac_arg\" = x\nthen :\n  ac_cv_c_undeclared_builtin_options='none needed'\nelse case e in #(\n  e) ac_cv_c_undeclared_builtin_options=$ac_arg ;;\nesac\nfi\n          break\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n    done\n    CFLAGS=$ac_save_CFLAGS\n   ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_undeclared_builtin_options\" >&5\nprintf \"%s\\n\" \"$ac_cv_c_undeclared_builtin_options\" >&6; }\n  case $ac_cv_c_undeclared_builtin_options in #(\n  'cannot detect') :\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot make $CC report undeclared builtins\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;; #(\n  'none needed') :\n    ac_c_undeclared_builtin_options='' ;; #(\n  *) :\n    ac_c_undeclared_builtin_options=$ac_cv_c_undeclared_builtin_options ;;\nesac\n\nac_fn_check_decl \"$LINENO\" \"_PC_CASE_SENSITIVE\" \"ac_cv_have_decl__PC_CASE_SENSITIVE\" \"#include <unistd.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl__PC_CASE_SENSITIVE\" = xyes\nthen :\n  ac_have_decl=1\nelse case e in #(\n  e) ac_have_decl=0 ;;\nesac\nfi\nprintf \"%s\\n\" \"#define HAVE_DECL__PC_CASE_SENSITIVE $ac_have_decl\" >>confdefs.h\n\n\nac_fn_c_check_header_compile \"$LINENO\" \"regex.h\" \"ac_cv_header_regex_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_regex_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"regex.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"regcomp\" \"ac_cv_func_regcomp\"\nif test \"x$ac_cv_func_regcomp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"regcomp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"regerror\" \"ac_cv_func_regerror\"\nif test \"x$ac_cv_func_regerror\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"regerror() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"regexec\" \"ac_cv_func_regexec\"\nif test \"x$ac_cv_func_regexec\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"regexec() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"regfree\" \"ac_cv_func_regfree\"\nif test \"x$ac_cv_func_regfree\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"regfree() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_type \"$LINENO\" \"regex_t\" \"ac_cv_type_regex_t\" \"#include <regex.h>\n\"\nif test \"x$ac_cv_type_regex_t\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"regex_t type not found in regex.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_check_decl \"$LINENO\" \"REG_EXTENDED\" \"ac_cv_have_decl_REG_EXTENDED\" \"#include <regex.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_REG_EXTENDED\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"REG_EXTENDED not found in regex.h\" \"$LINENO\" 5 ;;\nesac\nfi\nac_fn_check_decl \"$LINENO\" \"REG_ICASE\" \"ac_cv_have_decl_REG_ICASE\" \"#include <regex.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_REG_ICASE\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"REG_ICASE not found in regex.h\" \"$LINENO\" 5 ;;\nesac\nfi\nac_fn_check_decl \"$LINENO\" \"REG_NOMATCH\" \"ac_cv_have_decl_REG_NOMATCH\" \"#include <regex.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_REG_NOMATCH\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"REG_NOMATCH not found in regex.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_mtim\" \"ac_cv_member_struct_stat_st_mtim\" \"\n                  #include <sys/types.h>\n                  #include <sys/stat.h>\n                  #include <unistd.h>\n\n\"\nif test \"x$ac_cv_member_struct_stat_st_mtim\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_STRUCT_STAT_ST_MTIM 1\" >>confdefs.h\n\n\nfi\n\nac_fn_c_check_member \"$LINENO\" \"struct dirent\" \"d_type\" \"ac_cv_member_struct_dirent_d_type\" \"\n                  #include <dirent.h>\n\n\"\nif test \"x$ac_cv_member_struct_dirent_d_type\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_STRUCT_DIRENT_D_TYPE 1\" >>confdefs.h\n\n\nfi\n\n# Check whether --enable-largefile was given.\nif test ${enable_largefile+y}\nthen :\n  enableval=$enable_largefile;\nfi\nif test \"$enable_largefile,$enable_year2038\" != no,no\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable large file support\" >&5\nprintf %s \"checking for $CC option to enable large file support... \" >&6; }\nif test ${ac_cv_sys_largefile_opts+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CC=\"$CC\"\n  ac_opt_found=no\n  for ac_opt in \"none needed\" \"-D_FILE_OFFSET_BITS=64\" \"-D_LARGE_FILES=1\" \"-n32\"; do\n    if test x\"$ac_opt\" != x\"none needed\"\nthen :\n  CC=\"$ac_save_CC $ac_opt\"\nfi\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <sys/types.h>\n#ifndef FTYPE\n# define FTYPE off_t\n#endif\n /* Check that FTYPE can represent 2**63 - 1 correctly.\n    We can't simply define LARGE_FTYPE to be 9223372036854775807,\n    since some C++ compilers masquerading as C compilers\n    incorrectly reject 9223372036854775807.  */\n#define LARGE_FTYPE (((FTYPE) 1 << 31 << 31) - 1 + ((FTYPE) 1 << 31 << 31))\n  int FTYPE_is_large[(LARGE_FTYPE % 2147483629 == 721\n\t\t       && LARGE_FTYPE % 2147483647 == 1)\n\t\t      ? 1 : -1];\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  if test x\"$ac_opt\" = x\"none needed\"\nthen :\n  # GNU/Linux s390x and alpha need _FILE_OFFSET_BITS=64 for wide ino_t.\n\t CC=\"$CC -DFTYPE=ino_t\"\n\t if ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) CC=\"$CC -D_FILE_OFFSET_BITS=64\"\n\t    if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_opt='-D_FILE_OFFSET_BITS=64'\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\nfi\n      ac_cv_sys_largefile_opts=$ac_opt\n      ac_opt_found=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n    test $ac_opt_found = no || break\n  done\n  CC=\"$ac_save_CC\"\n\n  test $ac_opt_found = yes || ac_cv_sys_largefile_opts=\"support not detected\" ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_opts\" >&5\nprintf \"%s\\n\" \"$ac_cv_sys_largefile_opts\" >&6; }\n\nac_have_largefile=yes\ncase $ac_cv_sys_largefile_opts in #(\n  \"none needed\") :\n     ;; #(\n  \"supported through gnulib\") :\n     ;; #(\n  \"support not detected\") :\n    ac_have_largefile=no ;; #(\n  \"-D_FILE_OFFSET_BITS=64\") :\n\nprintf \"%s\\n\" \"#define _FILE_OFFSET_BITS 64\" >>confdefs.h\n ;; #(\n  \"-D_LARGE_FILES=1\") :\n\nprintf \"%s\\n\" \"#define _LARGE_FILES 1\" >>confdefs.h\n ;; #(\n  \"-n32\") :\n    CC=\"$CC -n32\" ;; #(\n  *) :\n    as_fn_error $? \"internal error: bad value for \\$ac_cv_sys_largefile_opts\" \"$LINENO\" 5 ;;\nesac\n\nif test \"$enable_year2038\" != no\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option for timestamps after 2038\" >&5\nprintf %s \"checking for $CC option for timestamps after 2038... \" >&6; }\nif test ${ac_cv_sys_year2038_opts+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CPPFLAGS=\"$CPPFLAGS\"\n  ac_opt_found=no\n  for ac_opt in \"none needed\" \"-D_TIME_BITS=64\" \"-D__MINGW_USE_VC2005_COMPAT\" \"-U_USE_32_BIT_TIME_T -D__MINGW_USE_VC2005_COMPAT\"; do\n    if test x\"$ac_opt\" != x\"none needed\"\nthen :\n  CPPFLAGS=\"$ac_save_CPPFLAGS $ac_opt\"\nfi\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n  #include <time.h>\n  /* Check that time_t can represent 2**32 - 1 correctly.  */\n  #define LARGE_TIME_T \\\\\n    ((time_t) (((time_t) 1 << 30) - 1 + 3 * ((time_t) 1 << 30)))\n  int verify_time_t_range[(LARGE_TIME_T / 65537 == 65535\n                           && LARGE_TIME_T % 65537 == 0)\n                          ? 1 : -1];\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_sys_year2038_opts=\"$ac_opt\"\n      ac_opt_found=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n    test $ac_opt_found = no || break\n  done\n  CPPFLAGS=\"$ac_save_CPPFLAGS\"\n  test $ac_opt_found = yes || ac_cv_sys_year2038_opts=\"support not detected\" ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_year2038_opts\" >&5\nprintf \"%s\\n\" \"$ac_cv_sys_year2038_opts\" >&6; }\n\nac_have_year2038=yes\ncase $ac_cv_sys_year2038_opts in #(\n  \"none needed\") :\n     ;; #(\n  \"support not detected\") :\n    ac_have_year2038=no ;; #(\n  \"-D_TIME_BITS=64\") :\n\nprintf \"%s\\n\" \"#define _TIME_BITS 64\" >>confdefs.h\n ;; #(\n  \"-D__MINGW_USE_VC2005_COMPAT\") :\n\nprintf \"%s\\n\" \"#define __MINGW_USE_VC2005_COMPAT 1\" >>confdefs.h\n ;; #(\n  \"-U_USE_32_BIT_TIME_T\"*) :\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"the 'time_t' type is currently forced to be 32-bit. It\nwill stop working after mid-January 2038. Remove\n_USE_32BIT_TIME_T from the compiler flags.\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;; #(\n  *) :\n    as_fn_error $? \"internal error: bad value for \\$ac_cv_sys_year2038_opts\" \"$LINENO\" 5 ;;\nesac\n\nfi\n\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for declarations of fseeko and ftello\" >&5\nprintf %s \"checking for declarations of fseeko and ftello... \" >&6; }\nif test ${ac_cv_func_fseeko_ftello+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#if defined __hpux && !defined _LARGEFILE_SOURCE\n# include <limits.h>\n# if LONG_MAX >> 31 == 0\n#  error \"32-bit HP-UX 11/ia64 needs _LARGEFILE_SOURCE for fseeko in C++\"\n# endif\n#endif\n#include <sys/types.h> /* for off_t */\n#include <stdio.h>\n\nint\nmain (void)\n{\n\n  int (*fp1) (FILE *, off_t, int) = fseeko;\n  off_t (*fp2) (FILE *) = ftello;\n  return fseeko (stdin, 0, 0)\n      && fp1 (stdin, 0, 0)\n      && ftello (stdin) >= 0\n      && fp2 (stdin) >= 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_func_fseeko_ftello=yes\nelse case e in #(\n  e) ac_save_CPPFLAGS=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS -D_LARGEFILE_SOURCE=1\"\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#if defined __hpux && !defined _LARGEFILE_SOURCE\n# include <limits.h>\n# if LONG_MAX >> 31 == 0\n#  error \"32-bit HP-UX 11/ia64 needs _LARGEFILE_SOURCE for fseeko in C++\"\n# endif\n#endif\n#include <sys/types.h> /* for off_t */\n#include <stdio.h>\n\nint\nmain (void)\n{\n\n  int (*fp1) (FILE *, off_t, int) = fseeko;\n  off_t (*fp2) (FILE *) = ftello;\n  return fseeko (stdin, 0, 0)\n      && fp1 (stdin, 0, 0)\n      && ftello (stdin) >= 0\n      && fp2 (stdin) >= 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_func_fseeko_ftello=\"need _LARGEFILE_SOURCE\"\nelse case e in #(\n  e) ac_cv_func_fseeko_ftello=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_fseeko_ftello\" >&5\nprintf \"%s\\n\" \"$ac_cv_func_fseeko_ftello\" >&6; }\nif test \"$ac_cv_func_fseeko_ftello\" != no\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_FSEEKO 1\" >>confdefs.h\n\nfi\nif test \"$ac_cv_func_fseeko_ftello\" = \"need _LARGEFILE_SOURCE\"\nthen :\n\nprintf \"%s\\n\" \"#define _LARGEFILE_SOURCE 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_type \"$LINENO\" \"off_t\" \"ac_cv_type_off_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_off_t\" = xyes\nthen :\n\nelse case e in #(\n  e)\nprintf \"%s\\n\" \"#define off_t long int\" >>confdefs.h\n ;;\nesac\nfi\n\n\nif test \"$ac_cv_member_struct_stat_st_mtim\" = yes; then\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <sys/types.h>\n                        #include <sys/stat.h>\n                        #include <unistd.h>\n                        int main() {\n                            struct stat st;\n                            struct timespec ts[2] = { st.st_atim, st.st_mtim };\n                            return 0;\n                        }\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_CONSISTENT_TIMESPEC 1\" >>confdefs.h\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\n\n# Extract the first word of \"file\", so it can be a program name with args.\nset dummy file; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_HAVE_FILE_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$HAVE_FILE_PROG\"; then\n  ac_cv_prog_HAVE_FILE_PROG=\"$HAVE_FILE_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_HAVE_FILE_PROG=\"1\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nHAVE_FILE_PROG=$ac_cv_prog_HAVE_FILE_PROG\nif test -n \"$HAVE_FILE_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $HAVE_FILE_PROG\" >&5\nprintf \"%s\\n\" \"$HAVE_FILE_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nif test \"x${HAVE_FILE_PROG}\" = 'x1' ; then\n\nprintf \"%s\\n\" \"#define HAVE_FILE_PROG 1\" >>confdefs.h\n\nfi\n\nfor ac_prog in groff mandoc\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_MANGEN_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$MANGEN_PROG\"; then\n  ac_cv_prog_MANGEN_PROG=\"$MANGEN_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_MANGEN_PROG=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nMANGEN_PROG=$ac_cv_prog_MANGEN_PROG\nif test -n \"$MANGEN_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $MANGEN_PROG\" >&5\nprintf \"%s\\n\" \"$MANGEN_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$MANGEN_PROG\" && break\ndone\n\n\n# Extract the first word of \"col\", so it can be a program name with args.\nset dummy col; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_COL_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$COL_PROG\"; then\n  ac_cv_prog_COL_PROG=\"$COL_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_COL_PROG=\"col\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCOL_PROG=$ac_cv_prog_COL_PROG\nif test -n \"$COL_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $COL_PROG\" >&5\nprintf \"%s\\n\" \"$COL_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\n# Extract the first word of \"awk\", so it can be a program name with args.\nset dummy awk; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_AWK_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$AWK_PROG\"; then\n  ac_cv_prog_AWK_PROG=\"$AWK_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AWK_PROG=\"awk\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nAWK_PROG=$ac_cv_prog_AWK_PROG\nif test -n \"$AWK_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $AWK_PROG\" >&5\nprintf \"%s\\n\" \"$AWK_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\n# Extract the first word of \"sed\", so it can be a program name with args.\nset dummy sed; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_SED_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$SED_PROG\"; then\n  ac_cv_prog_SED_PROG=\"$SED_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_SED_PROG=\"sed\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nSED_PROG=$ac_cv_prog_SED_PROG\nif test -n \"$SED_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $SED_PROG\" >&5\nprintf \"%s\\n\" \"$SED_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\n# Extract the first word of \"perl\", so it can be a program name with args.\nset dummy perl; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_PERL_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$PERL_PROG\"; then\n  ac_cv_prog_PERL_PROG=\"$PERL_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_PERL_PROG=\"perl\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nPERL_PROG=$ac_cv_prog_PERL_PROG\nif test -n \"$PERL_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PERL_PROG\" >&5\nprintf \"%s\\n\" \"$PERL_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\n# Extract the first word of \"vim\", so it can be a program name with args.\nset dummy vim; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_VIM_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$VIM_PROG\"; then\n  ac_cv_prog_VIM_PROG=\"$VIM_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_VIM_PROG=\"vim\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nVIM_PROG=$ac_cv_prog_VIM_PROG\nif test -n \"$VIM_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $VIM_PROG\" >&5\nprintf \"%s\\n\" \"$VIM_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\nif test \"x${PERL_PROG}${VIM_PROG}\" == 'x'; then\n    as_fn_error $? \"Either perl or Vim is necessary to generate tags for documentation in Vim's format.\" \"$LINENO\" 5\nfi\n\n# Extract the first word of \"git\", so it can be a program name with args.\nset dummy git; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_GIT_PROG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$GIT_PROG\"; then\n  ac_cv_prog_GIT_PROG=\"$GIT_PROG\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_GIT_PROG=\"git\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nGIT_PROG=$ac_cv_prog_GIT_PROG\nif test -n \"$GIT_PROG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $GIT_PROG\" >&5\nprintf \"%s\\n\" \"$GIT_PROG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nif test \"x${GIT_PROG}\" != 'x' -a -d .git/; then\n    IN_GIT_REPO=1\nfi\n\n\n\nif test \"x${sysconfdir}\" = 'x${prefix}/etc'; then\n  if test \"x${prefix}\" = \"xNONE\"; then\n    printf \"%s\\n\" \"#define PACKAGE_SYSCONF_DIR \\\"${ac_default_prefix}/etc/${PACKAGE}\\\"\" >>confdefs.h\n\n  else\n    printf \"%s\\n\" \"#define PACKAGE_SYSCONF_DIR \\\"${prefix}/etc/${PACKAGE}\\\"\" >>confdefs.h\n\n  fi\nelse\n  printf \"%s\\n\" \"#define PACKAGE_SYSCONF_DIR \\\"${sysconfdir}/${PACKAGE}\\\"\" >>confdefs.h\n\nfi\n\nif test \"x${datadir}\" = 'x${prefix}/share'; then\n  if test \"x${prefix}\" = \"xNONE\"; then\n    printf \"%s\\n\" \"#define PACKAGE_DATA_DIR \\\"${ac_default_prefix}/share/${PACKAGE}\\\"\" >>confdefs.h\n\n  else\n    printf \"%s\\n\" \"#define PACKAGE_DATA_DIR \\\"${prefix}/share/${PACKAGE}\\\"\" >>confdefs.h\n\n  fi\nelse\n  if test \"x${datadir}\" = 'x${datarootdir}'; then\n    if test \"x${datarootdir}\" = 'x${prefix}/share'; then\n      if test \"x${prefix}\" = \"xNONE\"; then\n        printf \"%s\\n\" \"#define PACKAGE_DATA_DIR \\\"${ac_default_prefix}/share/${PACKAGE}\\\"\" >>confdefs.h\n\n      else\n        printf \"%s\\n\" \"#define PACKAGE_DATA_DIR \\\"${prefix}/share/${PACKAGE}\\\"\" >>confdefs.h\n\n      fi\n    fi\n  else\n    printf \"%s\\n\" \"#define PACKAGE_DATA_DIR \\\"${datadir}/${PACKAGE}\\\"\" >>confdefs.h\n\n  fi\nfi\n\nif test -n \"$OSX_HOST\" ; then\n    DATA_SUFFIX=-osx\nfi\n\n\npackagesrcdir=`cd $srcdir && pwd`\nprintf \"%s\\n\" \"#define PACKAGE_SOURCE_DIR \\\"${packagesrcdir}\\\"\" >>confdefs.h\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -Wall\" >&5\nprintf %s \"checking whether C compiler accepts -Wall... \" >&6; }\nif test ${ax_cv_check_cflags___Wall+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)\n  ax_check_save_flags=$CFLAGS\n  CFLAGS=\"$CFLAGS  -Wall\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ax_cv_check_cflags___Wall=yes\nelse case e in #(\n  e) ax_cv_check_cflags___Wall=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n  CFLAGS=$ax_check_save_flags ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___Wall\" >&5\nprintf \"%s\\n\" \"$ax_cv_check_cflags___Wall\" >&6; }\nif test \"x$ax_cv_check_cflags___Wall\" = xyes\nthen :\n\n    case \" $CFLAGS \" in\n      *\\ \\\t-Wall\\ \\\t*) ;;\n      *) CFLAGS=\"$CFLAGS -Wall\" ;;\n    esac\n\nelse case e in #(\n  e) : ;;\nesac\nfi\n\n\nif test -n \"$OSX_HOST\" ; then\n\nprintf \"%s\\n\" \"#define _DARWIN_C_SOURCE 1\" >>confdefs.h\n\nfi\n\n\nprintf \"%s\\n\" \"#define _FILE_OFFSET_BITS 64\" >>confdefs.h\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for pow in -lm\" >&5\nprintf %s \"checking for pow in -lm... \" >&6; }\nif test ${ac_cv_lib_m_pow+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lm  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar pow (void);\nint\nmain (void)\n{\nreturn pow ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_m_pow=yes\nelse case e in #(\n  e) ac_cv_lib_m_pow=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_pow\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_m_pow\" >&6; }\nif test \"x$ac_cv_lib_m_pow\" = xyes\nthen :\n  LIBS=\"$LIBS -lm\"\nfi\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for shm_open in -lrt\" >&5\nprintf %s \"checking for shm_open in -lrt... \" >&6; }\nif test ${ac_cv_lib_rt_shm_open+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lrt  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar shm_open (void);\nint\nmain (void)\n{\nreturn shm_open ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_rt_shm_open=yes\nelse case e in #(\n  e) ac_cv_lib_rt_shm_open=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_shm_open\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_rt_shm_open\" >&6; }\nif test \"x$ac_cv_lib_rt_shm_open\" = xyes\nthen :\n  LIBS=\"$LIBS -lrt\"\nfi\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\nprintf %s \"checking for a sed that does not truncate output... \" >&6; }\nif test ${ac_cv_path_SED+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)           ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n     for ac_i in 1 2 3 4 5 6 7; do\n       ac_script=\"$ac_script$as_nl$ac_script\"\n     done\n     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n     { ac_script=; unset ac_script;}\n     if test -z \"$SED\"; then\n  ac_path_SED_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in sed gsed\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_SED=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_SED\" || continue\n# Check for GNU ac_path_SED and select it if it is found.\n  # Check for GNU $ac_path_SED\ncase `\"$ac_path_SED\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" '' >> \"conftest.nl\"\n    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_SED_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_SED=\"$ac_path_SED\"\n      ac_path_SED_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_SED_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_SED\"; then\n    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_SED=$SED\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_SED\" >&6; }\n SED=\"$ac_cv_path_SED\"\n  rm -f conftest.sed\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor\" >&5\nprintf %s \"checking how to run the C preprocessor... \" >&6; }\n# On Suns, sometimes $CPP names a directory.\nif test -n \"$CPP\" && test -d \"$CPP\"; then\n  CPP=\nfi\nif test -z \"$CPP\"; then\n  if test ${ac_cv_prog_CPP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)     # Double quotes because $CC needs to be expanded\n    for CPP in \"$CC -E\" \"$CC -E -traditional-cpp\" cpp /lib/cpp\n    do\n      ac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # Broken: fails on valid input.\ncontinue ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n  # Broken: success on invalid input.\ncontinue\nelse case e in #(\n  e) # Passes both tests.\nac_preproc_ok=:\nbreak ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of 'break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok\nthen :\n  break\nfi\n\n    done\n    ac_cv_prog_CPP=$CPP\n   ;;\nesac\nfi\n  CPP=$ac_cv_prog_CPP\nelse\n  ac_cv_prog_CPP=$CPP\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CPP\" >&5\nprintf \"%s\\n\" \"$CPP\" >&6; }\nac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # Broken: fails on valid input.\ncontinue ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n  # Broken: success on invalid input.\ncontinue\nelse case e in #(\n  e) # Passes both tests.\nac_preproc_ok=:\nbreak ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of 'break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok\nthen :\n\nelse case e in #(\n  e) { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"C preprocessor \\\"$CPP\\\" fails sanity check\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for egrep -e\" >&5\nprintf %s \"checking for egrep -e... \" >&6; }\nif test ${ac_cv_path_EGREP_TRADITIONAL+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -z \"$EGREP_TRADITIONAL\"; then\n  ac_path_EGREP_TRADITIONAL_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in grep ggrep\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP_TRADITIONAL=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP_TRADITIONAL\" || continue\n# Check for GNU ac_path_EGREP_TRADITIONAL and select it if it is found.\n  # Check for GNU $ac_path_EGREP_TRADITIONAL\ncase `\"$ac_path_EGREP_TRADITIONAL\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\" ac_path_EGREP_TRADITIONAL_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" 'EGREP_TRADITIONAL' >> \"conftest.nl\"\n    \"$ac_path_EGREP_TRADITIONAL\" -E 'EGR(EP|AC)_TRADITIONAL$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_TRADITIONAL_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\"\n      ac_path_EGREP_TRADITIONAL_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_TRADITIONAL_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP_TRADITIONAL\"; then\n    :\n  fi\nelse\n  ac_cv_path_EGREP_TRADITIONAL=$EGREP_TRADITIONAL\nfi\n\n    if test \"$ac_cv_path_EGREP_TRADITIONAL\"\nthen :\n  ac_cv_path_EGREP_TRADITIONAL=\"$ac_cv_path_EGREP_TRADITIONAL -E\"\nelse case e in #(\n  e) if test -z \"$EGREP_TRADITIONAL\"; then\n  ac_path_EGREP_TRADITIONAL_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in egrep\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP_TRADITIONAL=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP_TRADITIONAL\" || continue\n# Check for GNU ac_path_EGREP_TRADITIONAL and select it if it is found.\n  # Check for GNU $ac_path_EGREP_TRADITIONAL\ncase `\"$ac_path_EGREP_TRADITIONAL\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\" ac_path_EGREP_TRADITIONAL_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" 'EGREP_TRADITIONAL' >> \"conftest.nl\"\n    \"$ac_path_EGREP_TRADITIONAL\" 'EGR(EP|AC)_TRADITIONAL$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_TRADITIONAL_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\"\n      ac_path_EGREP_TRADITIONAL_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_TRADITIONAL_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP_TRADITIONAL\"; then\n    as_fn_error $? \"no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_EGREP_TRADITIONAL=$EGREP_TRADITIONAL\nfi\n ;;\nesac\nfi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP_TRADITIONAL\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_EGREP_TRADITIONAL\" >&6; }\n EGREP_TRADITIONAL=$ac_cv_path_EGREP_TRADITIONAL\n\n\n\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nax_pthread_ok=no\n\n# We used to check for pthread.h first, but this fails if pthread.h\n# requires special compiler flags (e.g. on Tru64 or Sequent).\n# It gets checked for in the link test anyway.\n\n# First of all, check if the user has set any of the PTHREAD_LIBS,\n# etcetera environment variables, and if threads linking works using\n# them:\nif test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n        ax_pthread_save_CC=\"$CC\"\n        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n        ax_pthread_save_LIBS=\"$LIBS\"\n        if test \"x$PTHREAD_CC\" != \"x\"\nthen :\n  CC=\"$PTHREAD_CC\"\nfi\n        if test \"x$PTHREAD_CXX\" != \"x\"\nthen :\n  CXX=\"$PTHREAD_CXX\"\nfi\n        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n        LIBS=\"$PTHREAD_LIBS $LIBS\"\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS\" >&5\nprintf %s \"checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS... \" >&6; }\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar pthread_join (void);\nint\nmain (void)\n{\nreturn pthread_join ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_pthread_ok=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\nprintf \"%s\\n\" \"$ax_pthread_ok\" >&6; }\n        if test \"x$ax_pthread_ok\" = \"xno\"; then\n                PTHREAD_LIBS=\"\"\n                PTHREAD_CFLAGS=\"\"\n        fi\n        CC=\"$ax_pthread_save_CC\"\n        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n        LIBS=\"$ax_pthread_save_LIBS\"\nfi\n\n# We must check for the threads library under a number of different\n# names; the ordering is very important because some systems\n# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n# libraries is broken (non-POSIX).\n\n# Create a list of thread flags to try. Items with a \",\" contain both\n# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n\n# The ordering *is* (sometimes) important.  Some notes on the\n# individual items follow:\n\n# pthreads: AIX (must check this before -lpthread)\n# none: in case threads are in libc; should be tried before -Kthread and\n#       other compiler flags to prevent continual compiler warnings\n# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n#           (Note: HP C rejects this with \"bad form for `-t' option\")\n# -pthreads: Solaris/gcc (Note: HP C also rejects)\n# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n#      doesn't hurt to check since this sometimes defines pthreads and\n#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n#      is present but should not be used directly; and before -mthreads,\n#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n# -mthreads: Mingw32/gcc, Lynx/gcc\n# pthread: Linux, etcetera\n# --thread-safe: KAI C++\n# pthread-config: use pthread-config program (for GNU Pth library)\n\ncase $host_os in\n\n        freebsd*)\n\n        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n\n        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n        ;;\n\n        hpux*)\n\n        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n        # multi-threading and also sets -lpthread.\"\n\n        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n        ;;\n\n        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n             AX_PTHREAD_ZOS_MISSING\n#            endif\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP_TRADITIONAL \"AX_PTHREAD_ZOS_MISSING\" >/dev/null 2>&1\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&2;}\nfi\nrm -rf conftest*\n\n        ;;\n\n        solaris*)\n\n        # On Solaris (at least, for some versions), libc contains stubbed\n        # (non-functional) versions of the pthreads routines, so link-based\n        # tests will erroneously succeed. (N.B.: The stubs are missing\n        # pthread_cleanup_push, or rather a function called by this macro,\n        # so we could check for that, but who knows whether they'll stub\n        # that too in a future libc.)  So we'll check first for the\n        # standard Solaris way of linking pthreads (-mt -lpthread).\n\n        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n        ;;\nesac\n\n# Are we compiling with Clang?\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC is Clang\" >&5\nprintf %s \"checking whether $CC is Clang... \" >&6; }\nif test ${ax_cv_PTHREAD_CLANG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_CLANG=no\n     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n     if test \"x$GCC\" = \"xyes\"; then\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n#            if defined(__clang__) && defined(__llvm__)\n             AX_PTHREAD_CC_IS_CLANG\n#            endif\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP_TRADITIONAL \"AX_PTHREAD_CC_IS_CLANG\" >/dev/null 2>&1\nthen :\n  ax_cv_PTHREAD_CLANG=yes\nfi\nrm -rf conftest*\n\n     fi\n     ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_CLANG\" >&6; }\nax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n\n\n# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n\n# Note that for GCC and Clang -pthread generally implies -lpthread,\n# except when -nostdlib is passed.\n# This is problematic using libtool to build C++ shared libraries with pthread:\n# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n# To solve this, first try -pthread together with -lpthread for GCC\n\nif test \"x$GCC\" = \"xyes\"\nthen :\n  ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"\nfi\n\n# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n\nif test \"x$ax_pthread_clang\" = \"xyes\"\nthen :\n  ax_pthread_flags=\"-pthread,-lpthread -pthread\"\nfi\n\n\n# The presence of a feature test macro requesting re-entrant function\n# definitions is, on some systems, a strong hint that pthreads support is\n# correctly enabled\n\ncase $host_os in\n        darwin* | hpux* | linux* | osf* | solaris*)\n        ax_pthread_check_macro=\"_REENTRANT\"\n        ;;\n\n        aix*)\n        ax_pthread_check_macro=\"_THREAD_SAFE\"\n        ;;\n\n        *)\n        ax_pthread_check_macro=\"--\"\n        ;;\nesac\nif test \"x$ax_pthread_check_macro\" = \"x--\"\nthen :\n  ax_pthread_check_cond=0\nelse case e in #(\n  e) ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\" ;;\nesac\nfi\n\n\nif test \"x$ax_pthread_ok\" = \"xno\"; then\nfor ax_pthread_try_flag in $ax_pthread_flags; do\n\n        case $ax_pthread_try_flag in\n                none)\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work without any flags\" >&5\nprintf %s \"checking whether pthreads work without any flags... \" >&6; }\n                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with \\\"$PTHREAD_CFLAGS\\\" and \\\"$PTHREAD_LIBS\\\"\" >&5\nprintf %s \"checking whether pthreads work with \\\"$PTHREAD_CFLAGS\\\" and \\\"$PTHREAD_LIBS\\\"... \" >&6; }\n                ;;\n\n                -*)\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with $ax_pthread_try_flag\" >&5\nprintf %s \"checking whether pthreads work with $ax_pthread_try_flag... \" >&6; }\n                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n                ;;\n\n                pthread-config)\n                # Extract the first word of \"pthread-config\", so it can be a program name with args.\nset dummy pthread-config; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ax_pthread_config+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ax_pthread_config\"; then\n  ac_cv_prog_ax_pthread_config=\"$ax_pthread_config\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ax_pthread_config=\"yes\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_prog_ax_pthread_config\" && ac_cv_prog_ax_pthread_config=\"no\"\nfi ;;\nesac\nfi\nax_pthread_config=$ac_cv_prog_ax_pthread_config\nif test -n \"$ax_pthread_config\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_config\" >&5\nprintf \"%s\\n\" \"$ax_pthread_config\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n                if test \"x$ax_pthread_config\" = \"xno\"\nthen :\n  continue\nfi\n                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n                ;;\n\n                *)\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for the pthreads library -l$ax_pthread_try_flag\" >&5\nprintf %s \"checking for the pthreads library -l$ax_pthread_try_flag... \" >&6; }\n                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n                ;;\n        esac\n\n        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n        ax_pthread_save_LIBS=\"$LIBS\"\n        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n        LIBS=\"$PTHREAD_LIBS $LIBS\"\n\n        # Check for various functions.  We must include pthread.h,\n        # since some functions may be macros.  (On the Sequent, we\n        # need a special flag -Kthread to make this header compile.)\n        # We check for pthread_join because it is in -lpthread on IRIX\n        # while pthread_create is in libc.  We check for pthread_attr_init\n        # due to DEC craziness with -lpthreads.  We check for\n        # pthread_cleanup_push because it is one of the few pthread\n        # functions on Solaris that doesn't have a non-functional libc stub.\n        # We try pthread_create on general principles.\n\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <pthread.h>\n#                       if $ax_pthread_check_cond\n#                        error \"$ax_pthread_check_macro must be defined\"\n#                       endif\n                        static void *some_global = NULL;\n                        static void routine(void *a)\n                          {\n                             /* To avoid any unused-parameter or\n                                unused-but-set-parameter warning.  */\n                             some_global = a;\n                          }\n                        static void *start_routine(void *a) { return a; }\nint\nmain (void)\n{\npthread_t th; pthread_attr_t attr;\n                        pthread_create(&th, 0, start_routine, 0);\n                        pthread_join(th, 0);\n                        pthread_attr_init(&attr);\n                        pthread_cleanup_push(routine, 0);\n                        pthread_cleanup_pop(0) /* ; */\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_pthread_ok=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n\n        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n        LIBS=\"$ax_pthread_save_LIBS\"\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\nprintf \"%s\\n\" \"$ax_pthread_ok\" >&6; }\n        if test \"x$ax_pthread_ok\" = \"xyes\"\nthen :\n  break\nfi\n\n        PTHREAD_LIBS=\"\"\n        PTHREAD_CFLAGS=\"\"\ndone\nfi\n\n\n# Clang needs special handling, because older versions handle the -pthread\n# option in a rather... idiosyncratic way\n\nif test \"x$ax_pthread_clang\" = \"xyes\"; then\n\n        # Clang takes -pthread; it has never supported any other flag\n\n        # (Note 1: This will need to be revisited if a system that Clang\n        # supports has POSIX threads in a separate library.  This tends not\n        # to be the way of modern systems, but it's conceivable.)\n\n        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n        # to get POSIX threads support; the API is always present and\n        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n        # -pthread does define _REENTRANT, and while the Darwin headers\n        # ignore this macro, third-party headers might not.)\n\n        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n        # support, and in fact it is often not straightforward to specify a\n        # flag that is used only in the compilation phase and not in\n        # linking.  Such a scenario is extremely rare in practice.\n        #\n        # Even though use of the -pthread flag in linking would only print\n        # a warning, this can be a nuisance for well-run software projects\n        # that build with -Werror.  So if the active version of Clang has\n        # this misfeature, we search for an option to squash it.\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread\" >&5\nprintf %s \"checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread... \" >&6; }\nif test ${ax_cv_PTHREAD_CLANG_NO_WARN_FLAG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n             # Create an alternate version of $ac_link that compiles and\n             # links in two steps (.c -> .o, .o -> exe) instead of one\n             # (.c -> exe), because the warning occurs only in the second\n             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`printf \"%s\\n\" \"$ac_link\" | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n                if test \"x$ax_pthread_try\" = \"xunknown\"\nthen :\n  break\nfi\n                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n                ac_link=\"$ax_pthread_save_ac_link\"\n                cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint main(void){return 0;}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_link=\"$ax_pthread_2step_ac_link\"\n                     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint main(void){return 0;}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  break\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n             done\n             ac_link=\"$ax_pthread_save_ac_link\"\n             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n             if test \"x$ax_pthread_try\" = \"x\"\nthen :\n  ax_pthread_try=no\nfi\n             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&6; }\n\n        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n                no | unknown) ;;\n                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n        esac\n\nfi # $ax_pthread_clang = yes\n\n\n\n# Various other checks:\nif test \"x$ax_pthread_ok\" = \"xyes\"; then\n        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n        ax_pthread_save_LIBS=\"$LIBS\"\n        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n        LIBS=\"$PTHREAD_LIBS $LIBS\"\n\n        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for joinable pthread attribute\" >&5\nprintf %s \"checking for joinable pthread attribute... \" >&6; }\nif test ${ax_cv_PTHREAD_JOINABLE_ATTR+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n                 cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <pthread.h>\nint\nmain (void)\n{\nint attr = $ax_pthread_attr; return attr /* ; */\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n             done\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_JOINABLE_ATTR\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_JOINABLE_ATTR\" >&6; }\n        if test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"\nthen :\n\nprintf \"%s\\n\" \"#define PTHREAD_CREATE_JOINABLE $ax_cv_PTHREAD_JOINABLE_ATTR\" >>confdefs.h\n\n               ax_pthread_joinable_attr_defined=yes\n\nfi\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether more special flags are required for pthreads\" >&5\nprintf %s \"checking whether more special flags are required for pthreads... \" >&6; }\nif test ${ax_cv_PTHREAD_SPECIAL_FLAGS+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_SPECIAL_FLAGS=no\n             case $host_os in\n             solaris*)\n             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n             ;;\n             esac\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_SPECIAL_FLAGS\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_SPECIAL_FLAGS\" >&6; }\n        if test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n               test \"x$ax_pthread_special_flags_added\" != \"xyes\"\nthen :\n  PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n               ax_pthread_special_flags_added=yes\nfi\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for PTHREAD_PRIO_INHERIT\" >&5\nprintf %s \"checking for PTHREAD_PRIO_INHERIT... \" >&6; }\nif test ${ax_cv_PTHREAD_PRIO_INHERIT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <pthread.h>\nint\nmain (void)\n{\nint i = PTHREAD_PRIO_INHERIT;\n                                               return i;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_cv_PTHREAD_PRIO_INHERIT=yes\nelse case e in #(\n  e) ax_cv_PTHREAD_PRIO_INHERIT=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_PRIO_INHERIT\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_PRIO_INHERIT\" >&6; }\n        if test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_PTHREAD_PRIO_INHERIT 1\" >>confdefs.h\n\n               ax_pthread_prio_inherit_defined=yes\n\nfi\n\n        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n        LIBS=\"$ax_pthread_save_LIBS\"\n\n        # More AIX lossage: compile with *_r variant\n        if test \"x$GCC\" != \"xyes\"; then\n            case $host_os in\n                aix*)\n                case \"x/$CC\" in #(\n  x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6) :\n    #handle absolute path differently from PATH based program lookup\n                     case \"x$CC\" in #(\n  x/*) :\n\n\t\t\t   if as_fn_executable_p ${CC}_r\nthen :\n  PTHREAD_CC=\"${CC}_r\"\nfi\n\t\t\t   if test \"x${CXX}\" != \"x\"\nthen :\n  if as_fn_executable_p ${CXX}_r\nthen :\n  PTHREAD_CXX=\"${CXX}_r\"\nfi\nfi\n\t\t\t  ;; #(\n  *) :\n\n\t\t\t   for ac_prog in ${CC}_r\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_PTHREAD_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$PTHREAD_CC\"; then\n  ac_cv_prog_PTHREAD_CC=\"$PTHREAD_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_PTHREAD_CC=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nPTHREAD_CC=$ac_cv_prog_PTHREAD_CC\nif test -n \"$PTHREAD_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CC\" >&5\nprintf \"%s\\n\" \"$PTHREAD_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$PTHREAD_CC\" && break\ndone\ntest -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n\n\t\t\t   if test \"x${CXX}\" != \"x\"\nthen :\n  for ac_prog in ${CXX}_r\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_PTHREAD_CXX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$PTHREAD_CXX\"; then\n  ac_cv_prog_PTHREAD_CXX=\"$PTHREAD_CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_PTHREAD_CXX=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nPTHREAD_CXX=$ac_cv_prog_PTHREAD_CXX\nif test -n \"$PTHREAD_CXX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CXX\" >&5\nprintf \"%s\\n\" \"$PTHREAD_CXX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$PTHREAD_CXX\" && break\ndone\ntest -n \"$PTHREAD_CXX\" || PTHREAD_CXX=\"$CXX\"\n\nfi\n\n                      ;;\nesac\n                     ;; #(\n  *) :\n     ;;\nesac\n                ;;\n            esac\n        fi\nfi\n\ntest -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\ntest -n \"$PTHREAD_CXX\" || PTHREAD_CXX=\"$CXX\"\n\n\n\n\n\n\n# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\nif test \"x$ax_pthread_ok\" = \"xyes\"; then\n\n             LIBS=\"$PTHREAD_LIBS $LIBS\"\n             CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n             TESTS_CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n             CC=\"$PTHREAD_CC\"\n\n        :\nelse\n        ax_pthread_ok=no\n\n             as_fn_error $? \"pthread not found\" \"$LINENO\" 5\n\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nac_fn_c_check_func \"$LINENO\" \"pthread_create\" \"ac_cv_func_pthread_create\"\nif test \"x$ac_cv_func_pthread_create\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_create() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_getspecific\" \"ac_cv_func_pthread_getspecific\"\nif test \"x$ac_cv_func_pthread_getspecific\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_getspecific() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_key_create\" \"ac_cv_func_pthread_key_create\"\nif test \"x$ac_cv_func_pthread_key_create\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_key_create() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_mutex_lock\" \"ac_cv_func_pthread_mutex_lock\"\nif test \"x$ac_cv_func_pthread_mutex_lock\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_mutex_lock() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_mutex_unlock\" \"ac_cv_func_pthread_mutex_unlock\"\nif test \"x$ac_cv_func_pthread_mutex_unlock\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_mutex_unlock() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_setspecific\" \"ac_cv_func_pthread_setspecific\"\nif test \"x$ac_cv_func_pthread_setspecific\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_setspecific() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_detach\" \"ac_cv_func_pthread_detach\"\nif test \"x$ac_cv_func_pthread_detach\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_detach() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pthread_self\" \"ac_cv_func_pthread_self\"\nif test \"x$ac_cv_func_pthread_self\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_self() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_type \"$LINENO\" \"pthread_t\" \"ac_cv_type_pthread_t\" \"#include <pthread.h>\n\"\nif test \"x$ac_cv_type_pthread_t\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_t type not found in pthread.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_type \"$LINENO\" \"pthread_key_t\" \"ac_cv_type_pthread_key_t\" \"#include <pthread.h>\n\"\nif test \"x$ac_cv_type_pthread_key_t\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_key_t type not found in pthread.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_type \"$LINENO\" \"pthread_mutex_t\" \"ac_cv_type_pthread_mutex_t\" \"#include <pthread.h>\n\"\nif test \"x$ac_cv_type_pthread_mutex_t\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_mutex_t type not found in pthread.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_type \"$LINENO\" \"pthread_cond_t\" \"ac_cv_type_pthread_cond_t\" \"#include <pthread.h>\n\"\nif test \"x$ac_cv_type_pthread_cond_t\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"pthread_cond_t type not found in pthread.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_check_decl \"$LINENO\" \"PTHREAD_MUTEX_INITIALIZER\" \"ac_cv_have_decl_PTHREAD_MUTEX_INITIALIZER\" \"#include <pthread.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_PTHREAD_MUTEX_INITIALIZER\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"PTHREAD_MUTEX_INITIALIZER not found in pthread.h\" \"$LINENO\" 5 ;;\nesac\nfi\nac_fn_check_decl \"$LINENO\" \"PTHREAD_COND_INITIALIZER\" \"ac_cv_have_decl_PTHREAD_COND_INITIALIZER\" \"#include <pthread.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_PTHREAD_COND_INITIALIZER\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"PTHREAD_COND_INITIALIZER not found in pthread.h\" \"$LINENO\" 5 ;;\nesac\nfi\n\ncurses_lib_name=ncursesw\n\n# Check whether --with-curses-name was given.\nif test ${with_curses_name+y}\nthen :\n  withval=$with_curses_name; curses_lib_name=$withval\nfi\n\n\nvifm_cv_curses=/usr\n\n# Check whether --with-curses was given.\nif test ${with_curses+y}\nthen :\n  withval=$with_curses; if test $withval != yes; then\n        vifm_cv_curses=$withval\n    fi\n    if test x$vifm_cv_curses != x/usr; then\n        LDFLAGS=\"-L${vifm_cv_curses}/lib $LDFLAGS\"\n        CPPFLAGS=\"$CPPFLAGS -I${vifm_cv_curses}/include -I${vifm_cv_curses}/include/${curses_lib_name}\"\n    fi\nfi\n\n\nncurses_found=no\nas_ac_Lib=`printf \"%s\\n\" \"ac_cv_lib_${curses_lib_name}\"\"_initscr\" | sed \"$as_sed_sh\"`\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for initscr in -l${curses_lib_name}\" >&5\nprintf %s \"checking for initscr in -l${curses_lib_name}... \" >&6; }\nif eval test \\${$as_ac_Lib+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-l${curses_lib_name}  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar initscr (void);\nint\nmain (void)\n{\nreturn initscr ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  eval \"$as_ac_Lib=yes\"\nelse case e in #(\n  e) eval \"$as_ac_Lib=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\neval ac_res=\\$$as_ac_Lib\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\nif eval test \\\"x\\$\"$as_ac_Lib\"\\\" = x\"yes\"\nthen :\n  LIBS=\"$LIBS -l${curses_lib_name}\"\n    if test x$vifm_cv_curses = x/usr -a -d /usr/include/${curses_lib_name}; then\n        CPPFLAGS=\"$CPPFLAGS -I/usr/include/${curses_lib_name}\"\n    fi\n    ncurses_found=yes\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for library containing curs_set\" >&5\nprintf %s \"checking for library containing curs_set... \" >&6; }\nif test ${ac_cv_search_curs_set+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar curs_set (void);\nint\nmain (void)\n{\nreturn curs_set ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' tinfow\ndo\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_search_curs_set=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext\n  if test ${ac_cv_search_curs_set+y}\nthen :\n  break\nfi\ndone\nif test ${ac_cv_search_curs_set+y}\nthen :\n\nelse case e in #(\n  e) ac_cv_search_curs_set=no ;;\nesac\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_curs_set\" >&5\nprintf \"%s\\n\" \"$ac_cv_search_curs_set\" >&6; }\nac_res=$ac_cv_search_curs_set\nif test \"$ac_res\" != no\nthen :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n\nelse case e in #(\n  e) as_fn_error $? \"could not find a library providing curs_set\" \"$LINENO\" 5 ;;\nesac\nfi\n\nfi\n\nif test -n \"$OSX_HOST\" -a \"x$ncurses_found\" != \"xyes\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for initscr in -lncurses\" >&5\nprintf %s \"checking for initscr in -lncurses... \" >&6; }\nif test ${ac_cv_lib_ncurses_initscr+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lncurses  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar initscr (void);\nint\nmain (void)\n{\nreturn initscr ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_ncurses_initscr=yes\nelse case e in #(\n  e) ac_cv_lib_ncurses_initscr=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_ncurses_initscr\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_ncurses_initscr\" >&6; }\nif test \"x$ac_cv_lib_ncurses_initscr\" = xyes\nthen :\n  LIBS=\"$LIBS -lncurses\"\n        if test x$vifm_cv_curses = x/usr -a -d /usr/include/ncurses; then\n            CPPFLAGS=\"$CPPFLAGS -I/usr/include/ncurses\"\n        fi\n        ncurses_found=yes\nfi\n\nfi\nif test \"x$ncurses_found\" != \"xyes\"; then\n    if test -z \"$OSX_HOST\"; then\n        as_fn_error $? \"libncursesw not found\" \"$LINENO\" 5\n    else\n        as_fn_error $? \"libncursesw and libncurses not found\" \"$LINENO\" 5\n    fi\nfi\nLIBS=$LIBS $GUI_LINK_OPTS_TERM\n\nac_fn_c_check_header_compile \"$LINENO\" \"curses.h\" \"ac_cv_header_curses_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_curses_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"curses.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_check_decl \"$LINENO\" \"A_ITALIC\" \"ac_cv_have_decl_A_ITALIC\" \"#include <curses.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_A_ITALIC\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_A_ITALIC_DECL 1\" >>confdefs.h\n\nfi\nac_fn_check_decl \"$LINENO\" \"COLORS\" \"ac_cv_have_decl_COLORS\" \"#include <curses.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_COLORS\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"COLORS not found in curses.h\" \"$LINENO\" 5 ;;\nesac\nfi\nac_fn_check_decl \"$LINENO\" \"TABSIZE\" \"ac_cv_have_decl_TABSIZE\" \"#include <curses.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_TABSIZE\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"TABSIZE not found in curses.h\" \"$LINENO\" 5 ;;\nesac\nfi\nac_fn_c_check_func \"$LINENO\" \"curs_set\" \"ac_cv_func_curs_set\"\nif test \"x$ac_cv_func_curs_set\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"curs_set() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"def_prog_mode\" \"ac_cv_func_def_prog_mode\"\nif test \"x$ac_cv_func_def_prog_mode\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"def_prog_mode() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"doupdate\" \"ac_cv_func_doupdate\"\nif test \"x$ac_cv_func_doupdate\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"doupdate() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"endwin\" \"ac_cv_func_endwin\"\nif test \"x$ac_cv_func_endwin\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"endwin() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"flushinp\" \"ac_cv_func_flushinp\"\nif test \"x$ac_cv_func_flushinp\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"flushinp() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"getcchar\" \"ac_cv_func_getcchar\"\nif test \"x$ac_cv_func_getcchar\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"getcchar() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"has_colors\" \"ac_cv_func_has_colors\"\nif test \"x$ac_cv_func_has_colors\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"has_colors() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"init_pair\" \"ac_cv_func_init_pair\"\nif test \"x$ac_cv_func_init_pair\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"init_pair() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"initscr\" \"ac_cv_func_initscr\"\nif test \"x$ac_cv_func_initscr\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"initscr() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"isendwin\" \"ac_cv_func_isendwin\"\nif test \"x$ac_cv_func_isendwin\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"isendwin() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"keypad\" \"ac_cv_func_keypad\"\nif test \"x$ac_cv_func_keypad\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"keypad() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"mvwin\" \"ac_cv_func_mvwin\"\nif test \"x$ac_cv_func_mvwin\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"mvwin() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"mvwprintw\" \"ac_cv_func_mvwprintw\"\nif test \"x$ac_cv_func_mvwprintw\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"mvwprintw() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"newwin\" \"ac_cv_func_newwin\"\nif test \"x$ac_cv_func_newwin\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"newwin() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"noecho\" \"ac_cv_func_noecho\"\nif test \"x$ac_cv_func_noecho\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"noecho() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"nonl\" \"ac_cv_func_nonl\"\nif test \"x$ac_cv_func_nonl\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"nonl() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"raw\" \"ac_cv_func_raw\"\nif test \"x$ac_cv_func_raw\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"raw() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"reset_prog_mode\" \"ac_cv_func_reset_prog_mode\"\nif test \"x$ac_cv_func_reset_prog_mode\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"reset_prog_mode() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"resize_term\" \"ac_cv_func_resize_term\"\nif test \"x$ac_cv_func_resize_term\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"resize_term() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"resizeterm\" \"ac_cv_func_resizeterm\"\nif test \"x$ac_cv_func_resizeterm\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"resizeterm() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"scrollok\" \"ac_cv_func_scrollok\"\nif test \"x$ac_cv_func_scrollok\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"scrollok() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"set_escdelay\" \"ac_cv_func_set_escdelay\"\nif test \"x$ac_cv_func_set_escdelay\" = xyes\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_SET_ESCDELAY_FUNC 1\" >>confdefs.h\n\nfi\n\nac_fn_c_check_func \"$LINENO\" \"setcchar\" \"ac_cv_func_setcchar\"\nif test \"x$ac_cv_func_setcchar\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"setcchar() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"start_color\" \"ac_cv_func_start_color\"\nif test \"x$ac_cv_func_start_color\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"start_color() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"use_default_colors\" \"ac_cv_func_use_default_colors\"\nif test \"x$ac_cv_func_use_default_colors\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"use_default_colors() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"waddch\" \"ac_cv_func_waddch\"\nif test \"x$ac_cv_func_waddch\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"waddch() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"waddnstr\" \"ac_cv_func_waddnstr\"\nif test \"x$ac_cv_func_waddnstr\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"waddnstr() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"waddnwstr\" \"ac_cv_func_waddnwstr\"\nif test \"x$ac_cv_func_waddnwstr\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"waddnwstr() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wattr_set\" \"ac_cv_func_wattr_set\"\nif test \"x$ac_cv_func_wattr_set\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wattr_set() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wbkgrndset\" \"ac_cv_func_wbkgrndset\"\nif test \"x$ac_cv_func_wbkgrndset\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wbkgrndset() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wborder\" \"ac_cv_func_wborder\"\nif test \"x$ac_cv_func_wborder\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wborder() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wclrtoeol\" \"ac_cv_func_wclrtoeol\"\nif test \"x$ac_cv_func_wclrtoeol\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wclrtoeol() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"werase\" \"ac_cv_func_werase\"\nif test \"x$ac_cv_func_werase\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"werase() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wget_wch\" \"ac_cv_func_wget_wch\"\nif test \"x$ac_cv_func_wget_wch\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wget_wch() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wgetch\" \"ac_cv_func_wgetch\"\nif test \"x$ac_cv_func_wgetch\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wgetch() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wmove\" \"ac_cv_func_wmove\"\nif test \"x$ac_cv_func_wmove\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wmove() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wnoutrefresh\" \"ac_cv_func_wnoutrefresh\"\nif test \"x$ac_cv_func_wnoutrefresh\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wnoutrefresh() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wprintw\" \"ac_cv_func_wprintw\"\nif test \"x$ac_cv_func_wprintw\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wprintw() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wredrawln\" \"ac_cv_func_wredrawln\"\nif test \"x$ac_cv_func_wredrawln\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wredrawln() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wrefresh\" \"ac_cv_func_wrefresh\"\nif test \"x$ac_cv_func_wrefresh\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wrefresh() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wresize\" \"ac_cv_func_wresize\"\nif test \"x$ac_cv_func_wresize\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wresize() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wtimeout\" \"ac_cv_func_wtimeout\"\nif test \"x$ac_cv_func_wtimeout\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wtimeout() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"wtouchln\" \"ac_cv_func_wtouchln\"\nif test \"x$ac_cv_func_wtouchln\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"wtouchln() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n\n\nuse_extended_colors=yes\n\nac_fn_c_check_func \"$LINENO\" \"extended_pair_content\" \"ac_cv_func_extended_pair_content\"\nif test \"x$ac_cv_func_extended_pair_content\" = xyes\nthen :\n\nelse case e in #(\n  e) use_extended_colors=no ;;\nesac\nfi\n\nac_fn_c_check_func \"$LINENO\" \"pair_content\" \"ac_cv_func_pair_content\"\nif test \"x$ac_cv_func_pair_content\" = xyes\nthen :\n\nelse case e in #(\n  e) use_extended_colors=no ;;\nesac\nfi\n\n\nif test \"$use_extended_colors\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define HAVE_EXTENDED_COLORS 1\" >>confdefs.h\n\nfi\n\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/inotify.h\" \"ac_cv_header_sys_inotify_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_inotify_h\" = xyes\nthen :\n  use_inotify=yes\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n\n\nif test \"$use_inotify\" = \"yes\"; then\n    ac_fn_check_decl \"$LINENO\" \"IN_NONBLOCK\" \"ac_cv_have_decl_IN_NONBLOCK\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_NONBLOCK\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_CLOEXEC\" \"ac_cv_have_decl_IN_CLOEXEC\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_CLOEXEC\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_ATTRIB\" \"ac_cv_have_decl_IN_ATTRIB\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_ATTRIB\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_MODIFY\" \"ac_cv_have_decl_IN_MODIFY\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_MODIFY\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_CREATE\" \"ac_cv_have_decl_IN_CREATE\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_CREATE\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_DELETE\" \"ac_cv_have_decl_IN_DELETE\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_DELETE\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_MOVED_FROM\" \"ac_cv_have_decl_IN_MOVED_FROM\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_MOVED_FROM\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_MOVED_TO\" \"ac_cv_have_decl_IN_MOVED_TO\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_MOVED_TO\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_EXCL_UNLINK\" \"ac_cv_have_decl_IN_EXCL_UNLINK\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_EXCL_UNLINK\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_CLOSE_WRITE\" \"ac_cv_have_decl_IN_CLOSE_WRITE\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_CLOSE_WRITE\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_check_decl \"$LINENO\" \"IN_Q_OVERFLOW\" \"ac_cv_have_decl_IN_Q_OVERFLOW\" \"#include <sys/inotify.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_IN_Q_OVERFLOW\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n    ac_fn_c_check_func \"$LINENO\" \"inotify_init1\" \"ac_cv_func_inotify_init1\"\nif test \"x$ac_cv_func_inotify_init1\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"inotify_add_watch\" \"ac_cv_func_inotify_add_watch\"\nif test \"x$ac_cv_func_inotify_add_watch\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n\n    ac_fn_c_check_type \"$LINENO\" \"struct inotify_event\" \"ac_cv_type_struct_inotify_event\" \"#include <sys/inotify.h>\n\"\nif test \"x$ac_cv_type_struct_inotify_event\" = xyes\nthen :\n\nelse case e in #(\n  e) use_inotify=no ;;\nesac\nfi\n\n\n    if test \"$use_inotify\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define HAVE_INOTIFY 1\" >>confdefs.h\n\n    fi\nfi\n\n\nac_fn_c_check_header_compile \"$LINENO\" \"sys/xattr.h\" \"ac_cv_header_sys_xattr_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sys_xattr_h\" = xyes\nthen :\n  use_xattrs=yes\nelse case e in #(\n  e) use_xattrs=no ;;\nesac\nfi\n\n\nif test \"$use_xattrs\" = \"yes\"; then\n    ac_fn_c_check_func \"$LINENO\" \"lgetxattr\" \"ac_cv_func_lgetxattr\"\nif test \"x$ac_cv_func_lgetxattr\" = xyes\nthen :\n\nelse case e in #(\n  e) use_xattrs=no ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"llistxattr\" \"ac_cv_func_llistxattr\"\nif test \"x$ac_cv_func_llistxattr\" = xyes\nthen :\n\nelse case e in #(\n  e) use_xattrs=no ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"lsetxattr\" \"ac_cv_func_lsetxattr\"\nif test \"x$ac_cv_func_lsetxattr\" = xyes\nthen :\n\nelse case e in #(\n  e) use_xattrs=no ;;\nesac\nfi\n\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n    #include <sys/types.h>\n    #include <sys/xattr.h>\n    int main() {\n        return XATTR_CREATE;\n    }\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) use_xattrs=\"no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n\n    if test \"$use_xattrs\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define HAVE_XATTRS 1\" >>confdefs.h\n\n    fi\nfi\n\n\nversion=\"$(mv --version 2> /dev/null | sed -ne 's/^.*(GNU coreutils) //p')\"\n\nmajor=\"${version%.*}\"\nminor=\"${version#*.}\"\n\nif test \"x$major\" != \"x\" -a \"x$minor\" != \"x\" ; then\n    if test $major -eq 7 -a $minor -ge 1 -o $major -gt 7; then\n\nprintf \"%s\\n\" \"#define SUPPORT_NO_CLOBBER 1\" >>confdefs.h\n\n    fi\n    if test $major -eq 7 -a $minor -ge 6 -o $major -gt 7; then\n\nprintf \"%s\\n\" \"#define SUPPORT_REFLINK_AUTO 1\" >>confdefs.h\n\n    fi\nfi\n\n\n\n# Check whether --with-glib was given.\nif test ${with_glib+y}\nthen :\n  withval=$with_glib; use_glib=$withval\nelse case e in #(\n  e) use_glib=yes ;;\nesac\nfi\n\n\n# Check whether --with-gtk was given.\nif test ${with_gtk+y}\nthen :\n  withval=$with_gtk; use_gtk=$withval\nelse case e in #(\n  e) use_gtk=use_glib ;;\nesac\nfi\n\nif test \"x$use_gtk\" != \"xuse_glib\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: \\\"--with(out)-gtk flag is obsolete, please use --with(out)-glib instead\\\"\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: \\\"--with(out)-gtk flag is obsolete, please use --with(out)-glib instead\\\"\" >&2;}\n    use_glib=$use_gtk\nfi\n\n\n# Check whether --with-libmagic was given.\nif test ${with_libmagic+y}\nthen :\n  withval=$with_libmagic; use_libmagic=$withval\nelse case e in #(\n  e) use_libmagic=yes ;;\nesac\nfi\n\n\n\n# Check whether --with-X11 was given.\nif test ${with_X11+y}\nthen :\n  withval=$with_X11; use_libX11=$withval\nelse case e in #(\n  e) use_libX11=yes ;;\nesac\nfi\n\n\n\n# Check whether --with-dyn-X11 was given.\nif test ${with_dyn_X11+y}\nthen :\n  withval=$with_dyn_X11; use_dyn_libX11=$withval\nelse case e in #(\n  e) use_dyn_libX11=yes ;;\nesac\nfi\n\n\n\nif test \"$use_glib\" = \"yes\"; then\n    if test \"x$(which pkg-config)\" != \"x\"; then\n        if pkg-config --exists glib-2.0 gio-2.0; then\n            CFLAGS=\"$CFLAGS $(pkg-config --cflags glib-2.0 gio-2.0)\"\n            LIBS=\"$LIBS $(pkg-config --libs glib-2.0 gio-2.0)\"\n            ac_fn_c_check_header_compile \"$LINENO\" \"gio/gio.h\" \"ac_cv_header_gio_gio_h\" \"#include <gio/gio.h>\n\"\nif test \"x$ac_cv_header_gio_gio_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"gio/gio.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n            ac_fn_c_check_header_compile \"$LINENO\" \"glib.h\" \"ac_cv_header_glib_h\" \"#include <glib.h>\n\"\nif test \"x$ac_cv_header_glib_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"glib.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n            ac_fn_c_check_func \"$LINENO\" \"g_file_info_get_content_type\" \"ac_cv_func_g_file_info_get_content_type\"\nif test \"x$ac_cv_func_g_file_info_get_content_type\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"g_file_info_get_content_type() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n            ac_fn_c_check_func \"$LINENO\" \"g_file_new_for_path\" \"ac_cv_func_g_file_new_for_path\"\nif test \"x$ac_cv_func_g_file_new_for_path\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"g_file_new_for_path() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n            ac_fn_c_check_func \"$LINENO\" \"g_file_query_info\" \"ac_cv_func_g_file_query_info\"\nif test \"x$ac_cv_func_g_file_query_info\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"g_file_query_info() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n            ac_fn_c_check_func \"$LINENO\" \"g_object_unref\" \"ac_cv_func_g_object_unref\"\nif test \"x$ac_cv_func_g_object_unref\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"g_object_unref() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n\nprintf \"%s\\n\" \"#define HAVE_GLIB 1\" >>confdefs.h\n\n        else\n            { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: \\\"Could not find glib-2.0/gio-2.0 via pkg-config.  No GLib support.\\\"\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: \\\"Could not find glib-2.0/gio-2.0 via pkg-config.  No GLib support.\\\"\" >&2;}\n        fi\n    else\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: \\\"Could not find pkg-config.  No GLib support.\\\"\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: \\\"Could not find pkg-config.  No GLib support.\\\"\" >&2;}\n    fi\nfi\n\nif test \"$use_libmagic\" = \"yes\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for magic_open in -lmagic\" >&5\nprintf %s \"checking for magic_open in -lmagic... \" >&6; }\nif test ${ac_cv_lib_magic_magic_open+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lmagic  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar magic_open (void);\nint\nmain (void)\n{\nreturn magic_open ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_magic_magic_open=yes\nelse case e in #(\n  e) ac_cv_lib_magic_magic_open=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_magic_magic_open\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_magic_magic_open\" >&6; }\nif test \"x$ac_cv_lib_magic_magic_open\" = xyes\nthen :\n  LIBS=\"$LIBS -lmagic\"\n         ac_fn_c_check_func \"$LINENO\" \"magic_close\" \"ac_cv_func_magic_close\"\nif test \"x$ac_cv_func_magic_close\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"magic_close() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n         ac_fn_c_check_func \"$LINENO\" \"magic_file\" \"ac_cv_func_magic_file\"\nif test \"x$ac_cv_func_magic_file\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"magic_file() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n         ac_fn_c_check_func \"$LINENO\" \"magic_load\" \"ac_cv_func_magic_load\"\nif test \"x$ac_cv_func_magic_load\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"magic_load() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n         ac_fn_c_check_func \"$LINENO\" \"magic_open\" \"ac_cv_func_magic_open\"\nif test \"x$ac_cv_func_magic_open\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"magic_open() function not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n         ac_fn_c_check_header_compile \"$LINENO\" \"magic.h\" \"ac_cv_header_magic_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_magic_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"magic.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n         ac_fn_check_decl \"$LINENO\" \"MAGIC_MIME_TYPE\" \"ac_cv_have_decl_MAGIC_MIME_TYPE\" \"#include <magic.h>\n\" \"$ac_c_undeclared_builtin_options\" \"CFLAGS\"\nif test \"x$ac_cv_have_decl_MAGIC_MIME_TYPE\" = xyes\nthen :\n  ac_have_decl=1\nelse case e in #(\n  e) ac_have_decl=0 ;;\nesac\nfi\nprintf \"%s\\n\" \"#define HAVE_DECL_MAGIC_MIME_TYPE $ac_have_decl\" >>confdefs.h\n\n\nprintf \"%s\\n\" \"#define HAVE_LIBMAGIC 1\" >>confdefs.h\n\nfi\n\nfi\n\n\n# Check whether --enable-extended_keys was given.\nif test ${enable_extended_keys+y}\nthen :\n  enableval=$enable_extended_keys; extended_keys=$enableval\nelse case e in #(\n  e) extended_keys=yes ;;\nesac\nfi\n\n\n# Check whether --enable-desktop_files was given.\nif test ${enable_desktop_files+y}\nthen :\n  enableval=$enable_desktop_files; desktop_files=$enableval\nelse case e in #(\n  e) desktop_files=yes ;;\nesac\nfi\n\n\n# Check whether --enable-remote_cmds was given.\nif test ${enable_remote_cmds+y}\nthen :\n  enableval=$enable_remote_cmds; remote_cmds=$enableval\nelse case e in #(\n  e) remote_cmds=yes ;;\nesac\nfi\n\n\n# Check whether --enable-developer was given.\nif test ${enable_developer+y}\nthen :\n  enableval=$enable_developer; developer=$enableval\nelse case e in #(\n  e) developer=no ;;\nesac\nfi\n\n\n# Check whether --enable-werror was given.\nif test ${enable_werror+y}\nthen :\n  enableval=$enable_werror; werror=$enableval\nelse case e in #(\n  e) werror=no ;;\nesac\nfi\n\n\n# Check whether --enable-coverage was given.\nif test ${enable_coverage+y}\nthen :\n  enableval=$enable_coverage; coverage=$enableval\nelse case e in #(\n  e) coverage=no ;;\nesac\nfi\n\n\n# Check whether --enable-build-timestamp was given.\nif test ${enable_build_timestamp+y}\nthen :\n  enableval=$enable_build_timestamp; build_timestamp=$enableval\nelse case e in #(\n  e) build_timestamp=yes ;;\nesac\nfi\n\n\n\n# Check whether --with-sanitize was given.\nif test ${with_sanitize+y}\nthen :\n  withval=$with_sanitize; sanitize=$withval\nfi\n\n\nif test \"$extended_keys\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define ENABLE_EXTENDED_KEYS 1\" >>confdefs.h\n\nfi\n\nif test \"$desktop_files\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define ENABLE_DESKTOP_FILES 1\" >>confdefs.h\n\nfi\n\nif test \"$remote_cmds\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define ENABLE_REMOTE_CMDS 1\" >>confdefs.h\n\nfi\n\nif test \"$use_dyn_libX11\" = \"yes\"; then\n    ORIG_LIBS=\"$LIBS\"\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\nprintf %s \"checking for dlopen in -ldl... \" >&6; }\nif test ${ac_cv_lib_dl_dlopen+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldl  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen (void);\nint\nmain (void)\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_dl_dlopen=yes\nelse case e in #(\n  e) ac_cv_lib_dl_dlopen=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_dl_dlopen\" >&6; }\nif test \"x$ac_cv_lib_dl_dlopen\" = xyes\nthen :\n\n                 use_dyn_libX11=yes\n                 LIBS=\"$LIBS -ldl\"\n\nelse case e in #(\n  e) use_dyn_libX11=no ;;\nesac\nfi\n\n\n    ac_fn_c_check_header_compile \"$LINENO\" \"dlfcn.h\" \"ac_cv_header_dlfcn_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_dlfcn_h\" = xyes\nthen :\n\nelse case e in #(\n  e) use_dyn_libX11=no ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"dlsym\" \"ac_cv_func_dlsym\"\nif test \"x$ac_cv_func_dlsym\" = xyes\nthen :\n\nelse case e in #(\n  e) use_dyn_libX11=no ;;\nesac\nfi\n\n    ac_fn_c_check_func \"$LINENO\" \"dlclose\" \"ac_cv_func_dlclose\"\nif test \"x$ac_cv_func_dlclose\" = xyes\nthen :\n\nelse case e in #(\n  e) use_dyn_libX11=no ;;\nesac\nfi\n\n\n    if test \"$use_dyn_libX11\" != \"yes\"; then\n        LIBS=\"$ORIG_LIBS\"\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: \\\"libdl seems to don't work as expected.  No dynamic X11.\\\"\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: \\\"libdl seems to don't work as expected.  No dynamic X11.\\\"\" >&2;}\n    fi\nfi\n\nif test \"$use_libX11\" = \"yes\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for XOpenDisplay in -lX11\" >&5\nprintf %s \"checking for XOpenDisplay in -lX11... \" >&6; }\nif test ${ac_cv_lib_X11_XOpenDisplay+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lX11  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar XOpenDisplay (void);\nint\nmain (void)\n{\nreturn XOpenDisplay ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_X11_XOpenDisplay=yes\nelse case e in #(\n  e) ac_cv_lib_X11_XOpenDisplay=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_X11_XOpenDisplay\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_X11_XOpenDisplay\" >&6; }\nif test \"x$ac_cv_lib_X11_XOpenDisplay\" = xyes\nthen :\n\n        ac_fn_c_check_header_compile \"$LINENO\" \"X11/Xlib.h\" \"ac_cv_header_X11_Xlib_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_X11_Xlib_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"X11/Xlib.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n        ac_fn_c_check_header_compile \"$LINENO\" \"X11/Xutil.h\" \"ac_cv_header_X11_Xutil_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_X11_Xutil_h\" = xyes\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"X11/Xutil.h header not found.\" \"$LINENO\" 5 ;;\nesac\nfi\n\n\nprintf \"%s\\n\" \"#define HAVE_X11 1\" >>confdefs.h\n\n        if test \"$use_dyn_libX11\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define DYN_X11 1\" >>confdefs.h\n\n        else\n            LIBS=\"$LIBS -lX11\"\n        fi\n\nfi\n\nfi\n\nWERROR_TUNING=\"-Wno-error=deprecated-declarations -Werror=sign-compare -Wno-unused-parameter\"\n\nif test \"$developer\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -g -O0 -Werror $WERROR_TUNING\"\n    TESTS_CFLAGS=\"$TESTS_CFLAGS -Werror $WERROR_TUNING\"\nfi\n\nif test \"$werror\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -Werror $WERROR_TUNING\"\n    TESTS_CFLAGS=\"$TESTS_CFLAGS -Werror $WERROR_TUNING\"\nfi\n\nif test \"$coverage\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -O0 --coverage\"\n    LDFLAGS=\"$LDFLAGS --coverage\"\nfi\n\nif test \"$build_timestamp\" = \"yes\"; then\n\nprintf \"%s\\n\" \"#define WITH_BUILD_TIMESTAMP 1\" >>confdefs.h\n\nfi\n\nif test -n \"$sanitize\" -a \"$sanitize\" != \"basic\" -a \"$sanitize\" != \"thread\" -a \\\n    \"$sanitize\" != \"leak\"; then\n    as_fn_error $? \"Unknown type of sanitizing: $sanitize\" \"$LINENO\" 5\nfi\nif test \"$sanitize\" = \"basic\"; then\n    SANITIZERS_CFLAGS=\"-fsanitize=address -fsanitize=undefined\"\nfi\nif test \"$sanitize\" = \"thread\"; then\n    SANITIZERS_CFLAGS=\"-fsanitize=thread -fPIC\"\n    LDFLAGS=\"$LDFLAGS -pie\"\nfi\nif test \"$sanitize\" = \"leak\"; then\n    LDFLAGS=\"$LDFLAGS -fsanitize=leak\"\nfi\n\nCFLAGS=\"$CFLAGS $SANITIZERS_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $SANITIZERS_CFLAGS\"\n\nCFLAGS=\"$CFLAGS -include ../build-aux/config.h\"\n\nac_config_files=\"$ac_config_files Makefile src/Makefile\"\n\ncat >confcache <<\\_ACEOF\n# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs, see configure's option --config-cache.\n# It is not useful on other systems.  If it contains results you don't\n# want to keep, you may remove or edit it.\n#\n# config.status only pays attention to the cache file if you give it\n# the --recheck option to rerun configure.\n#\n# 'ac_cv_env_foo' variables (set or unset) will be overridden when\n# loading this file, other *unset* 'ac_cv_foo' will be assigned the\n# following values.\n\n_ACEOF\n\n# The following way of writing the cache mishandles newlines in values,\n# but we know of no workaround that is simple, portable, and efficient.\n# So, we kill variables containing newlines.\n# Ultrix sh set writes to stderr and can't be redirected directly,\n# and sets the high bit in the cache file unless we assign to the vars.\n(\n  for ac_var in `(set) 2>&1 | sed -n 's/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n\n  (set) 2>&1 |\n    case $as_nl`(ac_space=' '; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      # 'set' does not quote correctly, so add quotes: double-quote\n      # substitution turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\.\n      sed -n \\\n\t\"s/'/'\\\\\\\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\\\2'/p\"\n      ;; #(\n    *)\n      # 'set' quotes correctly as required by POSIX, so do not add quotes.\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n) |\n  sed '\n     /^ac_cv_env_/b end\n     t clear\n     :clear\n     s/^\\([^=]*\\)=\\(.*[{}].*\\)$/test ${\\1+y} || &/\n     t end\n     s/^\\([^=]*\\)=\\(.*\\)$/\\1=${\\1=\\2}/\n     :end' >>confcache\nif diff \"$cache_file\" confcache >/dev/null 2>&1; then :; else\n  if test -w \"$cache_file\"; then\n    if test \"x$cache_file\" != \"x/dev/null\"; then\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: updating cache $cache_file\" >&5\nprintf \"%s\\n\" \"$as_me: updating cache $cache_file\" >&6;}\n      if test ! -f \"$cache_file\" || test -h \"$cache_file\"; then\n\tcat confcache >\"$cache_file\"\n      else\n        case $cache_file in #(\n        */* | ?:*)\n\t  mv -f confcache \"$cache_file\"$$ &&\n\t  mv -f \"$cache_file\"$$ \"$cache_file\" ;; #(\n        *)\n\t  mv -f confcache \"$cache_file\" ;;\n\tesac\n      fi\n    fi\n  else\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file\" >&5\nprintf \"%s\\n\" \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n  fi\nfi\nrm -f confcache\n\ntest \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n# Let make expand exec_prefix.\ntest \"x$exec_prefix\" = xNONE && exec_prefix='${prefix}'\n\nDEFS=-DHAVE_CONFIG_H\n\nac_libobjs=\nac_ltlibobjs=\nU=\nfor ac_i in : $LIBOBJS; do test \"x$ac_i\" = x: && continue\n  # 1. Remove the extension, and $U if already installed.\n  ac_script='s/\\$U\\././;s/\\.o$//;s/\\.obj$//'\n  ac_i=`printf \"%s\\n\" \"$ac_i\" | sed \"$ac_script\"`\n  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR\n  #    will be set to the directory where LIBOBJS objects are built.\n  as_fn_append ac_libobjs \" \\${LIBOBJDIR}$ac_i\\$U.$ac_objext\"\n  as_fn_append ac_ltlibobjs \" \\${LIBOBJDIR}$ac_i\"'$U.lo'\ndone\nLIBOBJS=$ac_libobjs\n\nLTLIBOBJS=$ac_ltlibobjs\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking that generated files are newer than configure\" >&5\nprintf %s \"checking that generated files are newer than configure... \" >&6; }\n   if test -n \"$am_sleep_pid\"; then\n     # Hide warnings about reused PIDs.\n     wait $am_sleep_pid 2>/dev/null\n   fi\n   { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: done\" >&5\nprintf \"%s\\n\" \"done\" >&6; }\ncase $enable_silent_rules in # (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\nesac\nif test $am_cv_make_support_nested_variables = yes; then\n    AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\n\n if test -n \"$EXEEXT\"; then\n  am__EXEEXT_TRUE=\n  am__EXEEXT_FALSE='#'\nelse\n  am__EXEEXT_TRUE='#'\n  am__EXEEXT_FALSE=\nfi\n\nif test -z \"${AMDEP_TRUE}\" && test -z \"${AMDEP_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"AMDEP\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${am__fastdepCC_TRUE}\" && test -z \"${am__fastdepCC_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"am__fastdepCC\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${am__fastdepCC_TRUE}\" && test -z \"${am__fastdepCC_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"am__fastdepCC\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n# Check whether --enable-year2038 was given.\nif test ${enable_year2038+y}\nthen :\n  enableval=$enable_year2038;\nfi\n\n\n: \"${CONFIG_STATUS=./config.status}\"\nac_write_fail=0\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files $CONFIG_STATUS\"\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS\" >&5\nprintf \"%s\\n\" \"$as_me: creating $CONFIG_STATUS\" >&6;}\nas_write_fail=0\ncat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n# Run this file to recreate the current configuration.\n# Compiler output produced by configure, useful for debugging\n# configure, is in config.log if it exists.\n\ndebug=false\nac_cs_recheck=false\nac_cs_silent=false\n\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$CONFIG_STATUS <<\\_ASEOF || as_write_fail=1\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1\nthen :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse case e in #(\n  e) case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac ;;\nesac\nfi\n\n\n\n# Reset variables that may have inherited troublesome values from\n# the environment.\n\n# IFS needs to be set, to space, tab, and newline, in precisely that order.\n# (If _AS_PATH_WALK were called with IFS unset, it would have the\n# side effect of setting IFS to empty, thus disabling word splitting.)\n# Quoting is to prevent editors from complaining about space-tab.\nas_nl='\n'\nexport as_nl\nIFS=\" \"\"\t$as_nl\"\n\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# Ensure predictable behavior from utilities with locale-dependent output.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# We cannot yet rely on \"unset\" to work, but we need these variables\n# to be unset--not just set to an empty or harmless value--now, to\n# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct\n# also avoids known problems related to \"unset\" and subshell syntax\n# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).\nfor as_var in BASH_ENV ENV MAIL MAILPATH CDPATH\ndo eval test \\${$as_var+y} \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\n\n# Ensure that fds 0, 1, and 2 are open.\nif (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi\nif (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi\nif (exec 3>&2)            ; then :; else exec 2>/dev/null; fi\n\n# The user is always right.\nif ${PATH_SEPARATOR+false} :; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    test -r \"$as_dir$0\" && as_myself=$as_dir$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as 'sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  printf \"%s\\n\" \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  printf \"%s\\n\" \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null\nthen :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse case e in #(\n  e) as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  } ;;\nesac\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null\nthen :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse case e in #(\n  e) as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  } ;;\nesac\nfi # as_fn_arith\n\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n# Determine whether it's possible to make 'echo' print without a newline.\n# These variables are no longer used directly by Autoconf, but are AC_SUBSTed\n# for compatibility with existing Makefiles.\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\n# For backward compatibility with old third-party macros, we provide\n# the shell variables $as_echo and $as_echo_n.  New code should use\n# AS_ECHO([\"message\"]) and AS_ECHO_N([\"message\"]), respectively.\nas_echo='printf %s\\n'\nas_echo_n='printf %s'\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both 'ln -s file dir' and 'ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; 'ln -s' creates a wrapper executable.\n    # In both cases, we have to default to 'cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`printf \"%s\\n\" \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_sed_cpp=\"y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g\"\nas_tr_cpp=\"eval sed '$as_sed_cpp'\" # deprecated\n\n# Sed expression to map a string onto a valid variable name.\nas_sed_sh=\"y%*+%pp%;s%[^_$as_cr_alnum]%_%g\"\nas_tr_sh=\"eval sed '$as_sed_sh'\" # deprecated\n\n\nexec 6>&1\n## ----------------------------------- ##\n## Main body of $CONFIG_STATUS script. ##\n## ----------------------------------- ##\n_ASEOF\ntest $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# Save the log message, to keep $0 and so on meaningful, and to\n# report actual input values of CONFIG_FILES etc. instead of their\n# values after options handling.\nac_log=\"\nThis file was extended by vifm $as_me 0.13, which was\ngenerated by GNU Autoconf 2.72.  Invocation command line was\n\n  CONFIG_FILES    = $CONFIG_FILES\n  CONFIG_HEADERS  = $CONFIG_HEADERS\n  CONFIG_LINKS    = $CONFIG_LINKS\n  CONFIG_COMMANDS = $CONFIG_COMMANDS\n  $ $0 $@\n\non `(hostname || uname -n) 2>/dev/null | sed 1q`\n\"\n\n_ACEOF\n\ncase $ac_config_files in *\"\n\"*) set x $ac_config_files; shift; ac_config_files=$*;;\nesac\n\ncase $ac_config_headers in *\"\n\"*) set x $ac_config_headers; shift; ac_config_headers=$*;;\nesac\n\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n# Files that config.status was made for.\nconfig_files=\"$ac_config_files\"\nconfig_headers=\"$ac_config_headers\"\nconfig_commands=\"$ac_config_commands\"\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nac_cs_usage=\"\\\n'$as_me' instantiates files and other configuration actions\nfrom templates according to the current configuration.  Unless the files\nand actions are specified as TAGs, all are instantiated by default.\n\nUsage: $0 [OPTION]... [TAG]...\n\n  -h, --help       print this help, then exit\n  -V, --version    print version number and configuration settings, then exit\n      --config     print configuration, then exit\n  -q, --quiet, --silent\n                   do not print progress messages\n  -d, --debug      don't remove temporary files\n      --recheck    update $as_me by reconfiguring in the same conditions\n      --file=FILE[:TEMPLATE]\n                   instantiate the configuration file FILE\n      --header=FILE[:TEMPLATE]\n                   instantiate the configuration header FILE\n\nConfiguration files:\n$config_files\n\nConfiguration headers:\n$config_headers\n\nConfiguration commands:\n$config_commands\n\nReport bugs to <xaizek@posteo.net>.\nvifm home page: <https://vifm.info>.\"\n\n_ACEOF\nac_cs_config=`printf \"%s\\n\" \"$ac_configure_args\" | sed \"$ac_safe_unquote\"`\nac_cs_config_escaped=`printf \"%s\\n\" \"$ac_cs_config\" | sed \"s/^ //; s/'/'\\\\\\\\\\\\\\\\''/g\"`\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_cs_config='$ac_cs_config_escaped'\nac_cs_version=\"\\\\\nvifm config.status 0.13\nconfigured by $0, generated by GNU Autoconf 2.72,\n  with options \\\\\"\\$ac_cs_config\\\\\"\n\nCopyright (C) 2023 Free Software Foundation, Inc.\nThis config.status script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\"\n\nac_pwd='$ac_pwd'\nsrcdir='$srcdir'\nINSTALL='$INSTALL'\nMKDIR_P='$MKDIR_P'\nAWK='$AWK'\ntest -n \"\\$AWK\" || AWK=awk\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# The default lists apply if the user does not specify any file.\nac_need_defaults=:\nwhile test $# != 0\ndo\n  case $1 in\n  --*=?*)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=`expr \"X$1\" : 'X[^=]*=\\(.*\\)'`\n    ac_shift=:\n    ;;\n  --*=)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=\n    ac_shift=:\n    ;;\n  *)\n    ac_option=$1\n    ac_optarg=$2\n    ac_shift=shift\n    ;;\n  esac\n\n  case $ac_option in\n  # Handling of the options.\n  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)\n    ac_cs_recheck=: ;;\n  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )\n    printf \"%s\\n\" \"$ac_cs_version\"; exit ;;\n  --config | --confi | --conf | --con | --co | --c )\n    printf \"%s\\n\" \"$ac_cs_config\"; exit ;;\n  --debug | --debu | --deb | --de | --d | -d )\n    debug=: ;;\n  --file | --fil | --fi | --f )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`printf \"%s\\n\" \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    '') as_fn_error $? \"missing file argument\" ;;\n    esac\n    as_fn_append CONFIG_FILES \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --header | --heade | --head | --hea )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`printf \"%s\\n\" \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    as_fn_append CONFIG_HEADERS \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --he | --h)\n    # Conflict between --help and --header\n    as_fn_error $? \"ambiguous option: '$1'\nTry '$0 --help' for more information.\";;\n  --help | --hel | -h )\n    printf \"%s\\n\" \"$ac_cs_usage\"; exit ;;\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil | --si | --s)\n    ac_cs_silent=: ;;\n\n  # This is an error.\n  -*) as_fn_error $? \"unrecognized option: '$1'\nTry '$0 --help' for more information.\" ;;\n\n  *) as_fn_append ac_config_targets \" $1\"\n     ac_need_defaults=false ;;\n\n  esac\n  shift\ndone\n\nac_configure_extra_args=\n\nif $ac_cs_silent; then\n  exec 6>/dev/null\n  ac_configure_extra_args=\"$ac_configure_extra_args --silent\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nif \\$ac_cs_recheck; then\n  set X $SHELL '$0' $ac_configure_args \\$ac_configure_extra_args --no-create --no-recursion\n  shift\n  \\printf \"%s\\n\" \"running CONFIG_SHELL=$SHELL \\$*\" >&6\n  CONFIG_SHELL='$SHELL'\n  export CONFIG_SHELL\n  exec \"\\$@\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nexec 5>>config.log\n{\n  echo\n  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX\n## Running $as_me. ##\n_ASBOX\n  printf \"%s\\n\" \"$ac_log\"\n} >&5\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n#\n# INIT-COMMANDS\n#\nAMDEP_TRUE=\"$AMDEP_TRUE\" MAKE=\"${MAKE-make}\"\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n\n# Handling of arguments.\nfor ac_config_target in $ac_config_targets\ndo\n  case $ac_config_target in\n    \"build-aux/config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS build-aux/config.h\" ;;\n    \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n    \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n    \"src/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/Makefile\" ;;\n\n  *) as_fn_error $? \"invalid argument: '$ac_config_target'\" \"$LINENO\" 5;;\n  esac\ndone\n\n\n# If the user did not use the arguments to specify the items to instantiate,\n# then the envvar interface is used.  Set only those that are not.\n# We use the long form for the default assignment because of an extremely\n# bizarre bug on SunOS 4.1.3.\nif $ac_need_defaults; then\n  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files\n  test ${CONFIG_HEADERS+y} || CONFIG_HEADERS=$config_headers\n  test ${CONFIG_COMMANDS+y} || CONFIG_COMMANDS=$config_commands\nfi\n\n# Have a temporary directory for convenience.  Make it in the build tree\n# simply because there is no reason against having it here, and in addition,\n# creating and moving files from /tmp can sometimes cause problems.\n# Hook for its removal unless debugging.\n# Note that there is a small window in which the directory will not be cleaned:\n# after its creation but before its name has been assigned to '$tmp'.\n$debug ||\n{\n  tmp= ac_tmp=\n  trap 'exit_status=$?\n  : \"${ac_tmp:=$tmp}\"\n  { test ! -d \"$ac_tmp\" || rm -fr \"$ac_tmp\"; } && exit $exit_status\n' 0\n  trap 'as_fn_exit 1' 1 2 13 15\n}\n# Create a (secure) tmp directory for tmp files.\n\n{\n  tmp=`(umask 077 && mktemp -d \"./confXXXXXX\") 2>/dev/null` &&\n  test -d \"$tmp\"\n}  ||\n{\n  tmp=./conf$$-$RANDOM\n  (umask 077 && mkdir \"$tmp\")\n} || as_fn_error $? \"cannot create a temporary directory in .\" \"$LINENO\" 5\nac_tmp=$tmp\n\n# Set up the scripts for CONFIG_FILES section.\n# No need to generate them if there are no CONFIG_FILES.\n# This happens for instance with './config.status config.h'.\nif test -n \"$CONFIG_FILES\"; then\n\n\nac_cr=`echo X | tr X '\\015'`\n# On cygwin, bash can eat \\r inside `` if the user requested igncr.\n# But we know of no other shell where ac_cr would be empty at this\n# point, so we can use a bashism as a fallback.\nif test \"x$ac_cr\" = x; then\n  eval ac_cr=\\$\\'\\\\r\\'\nfi\nac_cs_awk_cr=`$AWK 'BEGIN { print \"a\\rb\" }' </dev/null 2>/dev/null`\nif test \"$ac_cs_awk_cr\" = \"a${ac_cr}b\"; then\n  ac_cs_awk_cr='\\\\r'\nelse\n  ac_cs_awk_cr=$ac_cr\nfi\n\necho 'BEGIN {' >\"$ac_tmp/subs1.awk\" &&\n_ACEOF\n\n\n{\n  echo \"cat >conf$$subs.awk <<_ACEOF\" &&\n  echo \"$ac_subst_vars\" | sed 's/.*/&!$&$ac_delim/' &&\n  echo \"_ACEOF\"\n} >conf$$subs.sh ||\n  as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\nac_delim_num=`echo \"$ac_subst_vars\" | grep -c '^'`\nac_delim='%!_!# '\nfor ac_last_try in false false false false false :; do\n  . ./conf$$subs.sh ||\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n\n  ac_delim_n=`sed -n \"s/.*$ac_delim\\$/X/p\" conf$$subs.awk | grep -c X`\n  if test $ac_delim_n = $ac_delim_num; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\nrm -f conf$$subs.sh\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\ncat >>\"\\$ac_tmp/subs1.awk\" <<\\\\_ACAWK &&\n_ACEOF\nsed -n '\nh\ns/^/S[\"/; s/!.*/\"]=/\np\ng\ns/^[^!]*!//\n:repl\nt repl\ns/'\"$ac_delim\"'$//\nt delim\n:nl\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\n\"\\\\/\np\nn\nb repl\n:more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt nl\n:delim\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/\np\nb\n:more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt delim\n' <conf$$subs.awk | sed '\n/^[^\"\"]/{\n  N\n  s/\\n//\n}\n' >>$CONFIG_STATUS || ac_write_fail=1\nrm -f conf$$subs.awk\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACAWK\ncat >>\"\\$ac_tmp/subs1.awk\" <<_ACAWK &&\n  for (key in S) S_is_set[key] = 1\n  FS = \"\u0007\"\n\n}\n{\n  line = $ 0\n  nfields = split(line, field, \"@\")\n  substed = 0\n  len = length(field[1])\n  for (i = 2; i < nfields; i++) {\n    key = field[i]\n    keylen = length(key)\n    if (S_is_set[key]) {\n      value = S[key]\n      line = substr(line, 1, len) \"\" value \"\" substr(line, len + keylen + 3)\n      len += length(value) + length(field[++i])\n      substed = 1\n    } else\n      len += 1 + keylen\n  }\n\n  print line\n}\n\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nif sed \"s/$ac_cr//\" < /dev/null > /dev/null 2>&1; then\n  sed \"s/$ac_cr\\$//; s/$ac_cr/$ac_cs_awk_cr/g\"\nelse\n  cat\nfi < \"$ac_tmp/subs1.awk\" > \"$ac_tmp/subs.awk\" \\\n  || as_fn_error $? \"could not setup config files machinery\" \"$LINENO\" 5\n_ACEOF\n\n# VPATH may cause trouble with some makes, so we remove sole $(srcdir),\n# ${srcdir} and @srcdir@ entries from VPATH if srcdir is \".\", strip leading and\n# trailing colons and then remove the whole line if VPATH becomes empty\n# (actually we leave an empty line to preserve line numbers).\nif test \"x$srcdir\" = x.; then\n  ac_vpsub='/^[\t ]*VPATH[\t ]*=[\t ]*/{\nh\ns///\ns/^/:/\ns/[\t ]*$/:/\ns/:\\$(srcdir):/:/g\ns/:\\${srcdir}:/:/g\ns/:@srcdir@:/:/g\ns/^:*//\ns/:*$//\nx\ns/\\(=[\t ]*\\).*/\\1/\nG\ns/\\n//\ns/^[^=]*=[\t ]*$//\n}'\nfi\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nfi # test -n \"$CONFIG_FILES\"\n\n# Set up the scripts for CONFIG_HEADERS section.\n# No need to generate them if there are no CONFIG_HEADERS.\n# This happens for instance with './config.status Makefile'.\nif test -n \"$CONFIG_HEADERS\"; then\ncat >\"$ac_tmp/defines.awk\" <<\\_ACAWK ||\nBEGIN {\n_ACEOF\n\n# Transform confdefs.h into an awk script 'defines.awk', embedded as\n# here-document in config.status, that substitutes the proper values into\n# config.h.in to produce config.h.\n\n# Create a delimiter string that does not exist in confdefs.h, to ease\n# handling of long lines.\nac_delim='%!_!# '\nfor ac_last_try in false false :; do\n  ac_tt=`sed -n \"/$ac_delim/p\" confdefs.h`\n  if test -z \"$ac_tt\"; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_HEADERS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\n\n# For the awk script, D is an array of macro values keyed by name,\n# likewise P contains macro parameters if any.  Preserve backslash\n# newline sequences.\n\nac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*\nsed -n '\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt rset\n:rset\ns/^[\t ]*#[\t ]*define[\t ][\t ]*/ /\nt def\nd\n:def\ns/\\\\$//\nt bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\"/p\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\"/p\nd\n:bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\\\\\\\\\\\\n\"\\\\/p\nt cont\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\\\\\\\\\\\\n\"\\\\/p\nt cont\nd\n:cont\nn\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt clear\n:clear\ns/\\\\$//\nt bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/p\nd\n:bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\\\\\\\\\n\"\\\\/p\nb cont\n' <confdefs.h | sed '\ns/'\"$ac_delim\"'/\"\\\\\\\n\"/g' >>$CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  for (key in D) D_is_set[key] = 1\n  FS = \"\u0007\"\n}\n/^[\\t ]*#[\\t ]*(define|undef)[\\t ]+$ac_word_re([\\t (]|\\$)/ {\n  line = \\$ 0\n  split(line, arg, \" \")\n  if (arg[1] == \"#\") {\n    defundef = arg[2]\n    mac1 = arg[3]\n  } else {\n    defundef = substr(arg[1], 2)\n    mac1 = arg[2]\n  }\n  split(mac1, mac2, \"(\") #)\n  macro = mac2[1]\n  prefix = substr(line, 1, index(line, defundef) - 1)\n  if (D_is_set[macro]) {\n    # Preserve the white space surrounding the \"#\".\n    print prefix \"define\", macro P[macro] D[macro]\n    next\n  } else {\n    # Replace #undef with comments.  This is necessary, for example,\n    # in the case of _POSIX_SOURCE, which is predefined and required\n    # on some systems where configure will not decide to define it.\n    if (defundef == \"undef\") {\n      print \"/*\", prefix defundef, macro, \"*/\"\n      next\n    }\n  }\n}\n{ print }\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n  as_fn_error $? \"could not setup config headers machinery\" \"$LINENO\" 5\nfi # test -n \"$CONFIG_HEADERS\"\n\n\neval set X \"  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS\"\nshift\nfor ac_tag\ndo\n  case $ac_tag in\n  :[FHLC]) ac_mode=$ac_tag; continue;;\n  esac\n  case $ac_mode$ac_tag in\n  :[FHL]*:*);;\n  :L* | :C*:*) as_fn_error $? \"invalid tag '$ac_tag'\" \"$LINENO\" 5;;\n  :[FH]-) ac_tag=-:-;;\n  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;\n  esac\n  ac_save_IFS=$IFS\n  IFS=:\n  set x $ac_tag\n  IFS=$ac_save_IFS\n  shift\n  ac_file=$1\n  shift\n\n  case $ac_mode in\n  :L) ac_source=$1;;\n  :[FH])\n    ac_file_inputs=\n    for ac_f\n    do\n      case $ac_f in\n      -) ac_f=\"$ac_tmp/stdin\";;\n      *) # Look for the file first in the build tree, then in the source tree\n\t # (if the path is not absolute).  The absolute path cannot be DOS-style,\n\t # because $ac_f cannot contain ':'.\n\t test -f \"$ac_f\" ||\n\t   case $ac_f in\n\t   [\\\\/$]*) false;;\n\t   *) test -f \"$srcdir/$ac_f\" && ac_f=\"$srcdir/$ac_f\";;\n\t   esac ||\n\t   as_fn_error 1 \"cannot find input file: '$ac_f'\" \"$LINENO\" 5;;\n      esac\n      case $ac_f in *\\'*) ac_f=`printf \"%s\\n\" \"$ac_f\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; esac\n      as_fn_append ac_file_inputs \" '$ac_f'\"\n    done\n\n    # Let's still pretend it is 'configure' which instantiates (i.e., don't\n    # use $as_me), people would be surprised to read:\n    #    /* config.h.  Generated by config.status.  */\n    configure_input='Generated from '`\n\t  printf \"%s\\n\" \"$*\" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'\n\t`' by configure.'\n    if test x\"$ac_file\" != x-; then\n      configure_input=\"$ac_file.  $configure_input\"\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: creating $ac_file\" >&5\nprintf \"%s\\n\" \"$as_me: creating $ac_file\" >&6;}\n    fi\n    # Neutralize special characters interpreted by sed in replacement strings.\n    case $configure_input in #(\n    *\\&* | *\\|* | *\\\\* )\n       ac_sed_conf_input=`printf \"%s\\n\" \"$configure_input\" |\n       sed 's/[\\\\\\\\&|]/\\\\\\\\&/g'`;; #(\n    *) ac_sed_conf_input=$configure_input;;\n    esac\n\n    case $ac_tag in\n    *:-:* | *:-) cat >\"$ac_tmp/stdin\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5 ;;\n    esac\n    ;;\n  esac\n\n  ac_dir=`$as_dirname -- \"$ac_file\" ||\n$as_expr X\"$ac_file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)$' \\| \\\n\t X\"$ac_file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$ac_file\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  as_dir=\"$ac_dir\"; as_fn_mkdir_p\n  ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`printf \"%s\\n\" \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`printf \"%s\\n\" \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n\n  case $ac_mode in\n  :F)\n  #\n  # CONFIG_FILE\n  #\n\n  case $INSTALL in\n  [\\\\/$]* | ?:[\\\\/]* ) ac_INSTALL=$INSTALL ;;\n  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;\n  esac\n  ac_MKDIR_P=$MKDIR_P\n  case $MKDIR_P in\n  [\\\\/$]* | ?:[\\\\/]* ) ;;\n  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;\n  esac\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# If the template does not know about datarootdir, expand it.\n# FIXME: This hack should be removed a few years after 2.60.\nac_datarootdir_hack=; ac_datarootdir_seen=\nac_sed_dataroot='\n/datarootdir/ {\n  p\n  q\n}\n/@datadir@/p\n/@docdir@/p\n/@infodir@/p\n/@localedir@/p\n/@mandir@/p'\ncase `eval \"sed -n \\\"\\$ac_sed_dataroot\\\" $ac_file_inputs\"` in\n*datarootdir*) ac_datarootdir_seen=yes;;\n*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&2;}\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  ac_datarootdir_hack='\n  s&@datadir@&$datadir&g\n  s&@docdir@&$docdir&g\n  s&@infodir@&$infodir&g\n  s&@localedir@&$localedir&g\n  s&@mandir@&$mandir&g\n  s&\\\\\\${datarootdir}&$datarootdir&g' ;;\nesac\n_ACEOF\n\n# Neutralize VPATH when '$srcdir' = '.'.\n# Shell code in configure.ac might set extrasub.\n# FIXME: do we really want to maintain this feature?\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_sed_extra=\"$ac_vpsub\n$extrasub\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n:t\n/@[a-zA-Z_][a-zA-Z_0-9]*@/!b\ns|@configure_input@|$ac_sed_conf_input|;t t\ns&@top_builddir@&$ac_top_builddir_sub&;t t\ns&@top_build_prefix@&$ac_top_build_prefix&;t t\ns&@srcdir@&$ac_srcdir&;t t\ns&@abs_srcdir@&$ac_abs_srcdir&;t t\ns&@top_srcdir@&$ac_top_srcdir&;t t\ns&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t\ns&@builddir@&$ac_builddir&;t t\ns&@abs_builddir@&$ac_abs_builddir&;t t\ns&@abs_top_builddir@&$ac_abs_top_builddir&;t t\ns&@INSTALL@&$ac_INSTALL&;t t\ns&@MKDIR_P@&$ac_MKDIR_P&;t t\n$ac_datarootdir_hack\n\"\neval sed \\\"\\$ac_sed_extra\\\" \"$ac_file_inputs\" | $AWK -f \"$ac_tmp/subs.awk\" \\\n  >$ac_tmp/out || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n\ntest -z \"$ac_datarootdir_hack$ac_datarootdir_seen\" &&\n  { ac_out=`sed -n '/\\${datarootdir}/p' \"$ac_tmp/out\"`; test -n \"$ac_out\"; } &&\n  { ac_out=`sed -n '/^[\t ]*datarootdir[\t ]*:*=/p' \\\n      \"$ac_tmp/out\"`; test -z \"$ac_out\"; } &&\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable 'datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: $ac_file contains a reference to the variable 'datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&2;}\n\n  rm -f \"$ac_tmp/stdin\"\n  case $ac_file in\n  -) cat \"$ac_tmp/out\" && rm -f \"$ac_tmp/out\";;\n  *) rm -f \"$ac_file\" && mv \"$ac_tmp/out\" \"$ac_file\";;\n  esac \\\n  || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n ;;\n  :H)\n  #\n  # CONFIG_HEADER\n  #\n  if test x\"$ac_file\" != x-; then\n    {\n      printf \"%s\\n\" \"/* $configure_input  */\" >&1 \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\"\n    } >\"$ac_tmp/config.h\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    if diff \"$ac_file\" \"$ac_tmp/config.h\" >/dev/null 2>&1; then\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: $ac_file is unchanged\" >&5\nprintf \"%s\\n\" \"$as_me: $ac_file is unchanged\" >&6;}\n    else\n      rm -f \"$ac_file\"\n      mv \"$ac_tmp/config.h\" \"$ac_file\" \\\n\t|| as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    fi\n  else\n    printf \"%s\\n\" \"/* $configure_input  */\" >&1 \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\" \\\n      || as_fn_error $? \"could not create -\" \"$LINENO\" 5\n  fi\n# Compute \"$ac_file\"'s index in $config_headers.\n_am_arg=\"$ac_file\"\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $_am_arg | $_am_arg:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $_am_arg\" >`$as_dirname -- \"$_am_arg\" ||\n$as_expr X\"$_am_arg\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$_am_arg\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$_am_arg\" : 'X\\(//\\)$' \\| \\\n\t X\"$_am_arg\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$_am_arg\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`/stamp-h$_am_stamp_count\n ;;\n\n  :C)  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: executing $ac_file commands\" >&5\nprintf \"%s\\n\" \"$as_me: executing $ac_file commands\" >&6;}\n ;;\n  esac\n\n\n  case $ac_file$ac_mode in\n    \"depfiles\":C) test x\"$AMDEP_TRUE\" != x\"\" || {\n  # Older Autoconf quotes --file arguments for eval, but not when files\n  # are listed without --file.  Let's play safe and only enable the eval\n  # if we detect the quoting.\n  # TODO: see whether this extra hack can be removed once we start\n  # requiring Autoconf 2.70 or later.\n  case $CONFIG_FILES in #(\n  *\\'*) :\n    eval set x \"$CONFIG_FILES\" ;; #(\n  *) :\n    set x $CONFIG_FILES ;; #(\n  *) :\n     ;;\nesac\n  shift\n  # Used to flag and report bootstrapping failures.\n  am_rc=0\n  for am_mf\n  do\n    # Strip MF so we end up with the name of the file.\n    am_mf=`printf \"%s\\n\" \"$am_mf\" | sed -e 's/:.*$//'`\n    # Check whether this is an Automake generated Makefile which includes\n    # dependency-tracking related rules and includes.\n    # Grep'ing the whole file directly is not great: AIX grep has a line\n    # limit of 2048, but all sed's we know have understand at least 4000.\n    sed -n 's,^am--depfiles:.*,X,p' \"$am_mf\" | grep X >/dev/null 2>&1 \\\n      || continue\n    am_dirpart=`$as_dirname -- \"$am_mf\" ||\n$as_expr X\"$am_mf\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)$' \\| \\\n\t X\"$am_mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$am_mf\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n    am_filepart=`$as_basename -- \"$am_mf\" ||\n$as_expr X/\"$am_mf\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)$' \\| \\\n\t X\"$am_mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X/\"$am_mf\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n    { echo \"$as_me:$LINENO: cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles\" >&5\n   (cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } || am_rc=$?\n  done\n  if test $am_rc -ne 0; then\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"Something went wrong bootstrapping makefile fragments\n    for automatic dependency tracking.  If GNU make was not used, consider\n    re-running the configure script with MAKE=\\\"gmake\\\" (or whatever is\n    necessary).  You can also try re-running configure with the\n    '--disable-dependency-tracking' option to at least be able to build\n    the package (albeit without support for automatic dependency tracking).\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n  fi\n  { am_dirpart=; unset am_dirpart;}\n  { am_filepart=; unset am_filepart;}\n  { am_mf=; unset am_mf;}\n  { am_rc=; unset am_rc;}\n  rm -f conftest-deps.mk\n}\n ;;\n\n  esac\ndone # for ac_tag\n\n\nas_fn_exit 0\n_ACEOF\nac_clean_files=$ac_clean_files_save\n\ntest $ac_write_fail = 0 ||\n  as_fn_error $? \"write failure creating $CONFIG_STATUS\" \"$LINENO\" 5\n\n\n# configure is writing to config.log, and then calls config.status.\n# config.status does its own redirection, appending to config.log.\n# Unfortunately, on DOS this fails, as config.log is still kept open\n# by configure, so config.status won't be able to write to it; its\n# output is simply discarded.  So we exec the FD to /dev/null,\n# effectively closing config.log, so it can be properly (re)opened and\n# appended to by config.status.  When coming back to configure, we\n# need to make the FD available again.\nif test \"$no_create\" != yes; then\n  ac_cs_success=:\n  ac_config_status_args=\n  test \"$silent\" = yes &&\n    ac_config_status_args=\"$ac_config_status_args --quiet\"\n  exec 5>/dev/null\n  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false\n  exec 5>>config.log\n  # Use ||, not &&, to avoid exiting from the if with $? = 1, which\n  # would make configure fail if this is the last instruction.\n  $ac_cs_success || as_fn_exit 1\nfi\nif test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\nfi\n\n\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 40.701171875,
          "content": "dnl Process this file with autoconf to produce a configure script.\n\nAC_INIT([vifm],[0.13],[xaizek@posteo.net],[vifm],[https://vifm.info])\nAC_CONFIG_SRCDIR(src/vifm.c)\nAC_CONFIG_AUX_DIR(build-aux)\nAC_CONFIG_MACRO_DIR(build-aux/m4)\nAM_INIT_AUTOMAKE([no-dist-gzip dist-bzip2])\nAC_CONFIG_HEADERS(build-aux/config.h)\n\nAC_DEFINE([VERSION_NUM], [1300], [Program version as a comparable integer.])\n\nAC_DEFINE([PACKAGE_SYSCONF_DIR], [], [Configuration directory of the package.])\nAC_DEFINE([PACKAGE_DATA_DIR], [], [Data directory of the package.])\nAC_DEFINE([PACKAGE_SOURCE_DIR], [], [Source directory of the package.])\n\ndnl Request some additional extensions.  The macro makes it possible to use\ndnl features of Posix that are extensions to C, as well as platform extensions\ndnl not defined by Posix.\nAC_USE_SYSTEM_EXTENSIONS\n\nAC_PROG_CC\nAM_PROG_CC_C_O\nAM_SILENT_RULES([yes])\n\nAC_LANG(C)\n\ndnl Determine host machine type.\nAC_CANONICAL_HOST\ndnl Require $host variable presence.\nAC_MSG_CHECKING([host])\nAC_MSG_RESULT([$host])\ndnl Define $OSX_HOST variable for OS X\ncase \"$host_os\" in\n    macos* | darwin*)\n        OSX_HOST=1\n        ;;\n    *)\n        OSX_HOST=\n        ;;\nesac\n\ndnl pass some CFLAGS to tests (TESTS_CFLAGS is also extended below)\nTESTS_CFLAGS=\"$CFLAGS\"\nAC_SUBST([TESTS_CFLAGS])\n\nAC_DEFINE([_XOPEN_SOURCE_EXTENDED], [1],\n          [Define to 1 to enable wide functions of ncurses in some environments.])\n\nAC_DEFINE([UTF8PROC_STATIC], [1],\n          [Make it so that utf8proc does not think it is a library.])\n\ndnl Check for system headers.\nAC_CHECK_HEADERS([alloca.h], [AC_DEFINE([HAVE_ALLOCA_H], [1], [alloca.h header is available.])])\nAC_CHECK_HEADERS([malloc.h], [AC_DEFINE([HAVE_MALLOC_H], [1], [malloc.h header is available.])])\nAC_CHECK_HEADER([assert.h], [], [AC_MSG_ERROR([assert.h header not found.])])\nAC_CHECK_HEADER([ctype.h], [], [AC_MSG_ERROR([ctype.h header not found.])])\nAC_CHECK_HEADER([dirent.h], [], [AC_MSG_ERROR([dirent.h header not found.])])\nAC_CHECK_HEADER([errno.h], [], [AC_MSG_ERROR([errno.h header not found.])])\nAC_CHECK_HEADER([fcntl.h], [], [AC_MSG_ERROR([fcntl.h header not found.])])\nAC_CHECK_HEADER([grp.h], [], [AC_MSG_ERROR([grp.h header not found.])])\nAC_CHECK_HEADER([inttypes.h], [], [AC_MSG_ERROR([inttypes.h header not found.])])\nAC_CHECK_HEADER([limits.h], [], [AC_MSG_ERROR([limits.h header not found.])])\nAC_CHECK_HEADER([locale.h], [], [AC_MSG_ERROR([locale.h header not found.])])\nAC_CHECK_HEADER([math.h], [], [AC_MSG_ERROR([math.h header not found.])])\nAC_CHECK_HEADERS([mntent.h], [HAVE_MNTENT_H=1])\nAC_CHECK_HEADER([pwd.h], [], [AC_MSG_ERROR([pwd.h header not found.])])\nAC_CHECK_HEADER([signal.h], [], [AC_MSG_ERROR([signal.h header not found.])])\nAC_CHECK_HEADER([stdarg.h], [], [AC_MSG_ERROR([stdarg.h header not found.])])\nAC_CHECK_HEADER([stddef.h], [], [AC_MSG_ERROR([stddef.h header not found.])])\nAC_CHECK_HEADER([stdint.h], [], [AC_MSG_ERROR([stdint.h header not found.])])\nAC_CHECK_HEADER([stdio.h], [], [AC_MSG_ERROR([stdio.h header not found.])])\nAC_CHECK_HEADER([stdlib.h], [], [AC_MSG_ERROR([stdlib.h header not found.])])\nAC_CHECK_HEADER([string.h], [], [AC_MSG_ERROR([string.h header not found.])])\nAC_CHECK_HEADER([sys/ioctl.h], [], [AC_MSG_ERROR([sys/ioctl.h header not found.])])\nAC_CHECK_HEADER([sys/stat.h], [], [AC_MSG_ERROR([sys/stat.h header not found.])])\nAC_CHECK_HEADER([sys/time.h], [], [AC_MSG_ERROR([sys/time.h header not found.])])\nAC_CHECK_HEADER([sys/types.h], [], [AC_MSG_ERROR([sys/types.h header not found.])])\nAC_CHECK_HEADER([sys/wait.h], [], [AC_MSG_ERROR([sys/wait.h header not found.])])\nAC_CHECK_HEADER([termios.h], [], [AC_MSG_ERROR([termios.h header not found.])])\nAC_CHECK_HEADER([time.h], [], [AC_MSG_ERROR([time.h header not found.])])\nAC_CHECK_HEADER([unistd.h], [], [AC_MSG_ERROR([unistd.h header not found.])])\nAC_CHECK_HEADER([wchar.h], [], [AC_MSG_ERROR([wchar.h header not found.])])\nAC_CHECK_HEADER([wctype.h], [], [AC_MSG_ERROR([wctype.h header not found.])])\ndnl Headers required for breaking too long command-lines.\nAC_CHECK_HEADERS([sys/sysmacros.h sys/param.h sys/user.h linux/binfmts.h], [],\n                 [],\n                 [[#if HAVE_SYS_PARAM_H\n                   # include <sys/param.h>\n                   #endif\n                 ]])\nif test \"$ac_cv_header_sys_user_h\" = yes -a \"$ac_cv_header_linux_binfmts_h\" = yes; then\n    AC_COMPILE_IFELSE([AC_LANG_SOURCE(\n                      [[#include <linux/binfmts.h>\n                        #include <sys/user.h>\n                        #include <unistd.h>\n                        #ifndef PAGE_SIZE\n                        #define PAGE_SIZE sysconf(_SC_PAGESIZE)\n                        #endif\n                        int main() { (void)MAX_ARG_STRLEN; return 0; }\n                      ]])],\n                      [AC_DEFINE([HAVE_MAX_ARG_STRLEN], [1], [MAX_ARG_STRLEN is available.])])\nfi\n\ndnl Check for various system types.\nAC_CHECK_TYPE([uid_t])\nAC_CHECK_TYPE([gid_t])\nAC_CHECK_TYPE([mode_t])\nAC_CHECK_TYPE([off_t])\nAC_CHECK_TYPE([time_t])\nAC_CHECK_TYPE([uint64_t])\nAC_CHECK_TYPE([direntry_t])\nif test -n \"$HAVE_MNTENT_H\" ; then\n    AC_CHECK_TYPE([mntent])\nelse\n    AC_CHECK_TYPES([getmntinfo], [], [], [[\n                     #include <sys/param.h>\n                     #include <sys/ucred.h>\n                     #include <sys/mount.h>\n                   ]])\nfi\nAC_CHECK_TYPE([stat])\nAC_CHECK_TYPE([FILE])\nAC_CHECK_TYPE([wchar_t])\n\ndnl Check for various system functions.\nAC_CHECK_FUNC([access], [], [AC_MSG_ERROR([access() function not found.])])\nAC_CHECK_FUNC([atof], [], [AC_MSG_ERROR([atof() function not found.])])\nAC_CHECK_FUNC([atoi], [], [AC_MSG_ERROR([atoi() function not found.])])\nAC_CHECK_FUNC([calloc], [], [AC_MSG_ERROR([calloc() function not found.])])\nAC_CHECK_FUNC([chdir], [], [AC_MSG_ERROR([chdir() function not found.])])\nAC_CHECK_FUNC([close], [], [AC_MSG_ERROR([close() function not found.])])\nAC_CHECK_FUNC([closedir], [], [AC_MSG_ERROR([closedir() function not found.])])\nAC_CHECK_FUNC([dup], [], [AC_MSG_ERROR([dup() function not found.])])\nAC_CHECK_FUNC([dup2], [], [AC_MSG_ERROR([dup2() function not found.])])\nAC_CHECK_FUNC([execve], [], [AC_MSG_ERROR([execve() function not found.])])\nAC_CHECK_FUNC([execvp], [], [AC_MSG_ERROR([execvp() function not found.])])\nAC_CHECK_FUNC([exit], [], [AC_MSG_ERROR([exit() function not found.])])\nAC_CHECK_FUNC([fdatasync], [AC_DEFINE([HAVE_FDATASYNC], [1], [fdatasync() is available.])], [])\nAC_CHECK_FUNC([fclose], [], [AC_MSG_ERROR([fclose() function not found.])])\nAC_CHECK_FUNC([fdopen], [], [AC_MSG_ERROR([fdopen() function not found.])])\nAC_CHECK_FUNC([feof], [], [AC_MSG_ERROR([feof() function not found.])])\nAC_CHECK_FUNC([fgetc], [], [AC_MSG_ERROR([fgetc() function not found.])])\nAC_CHECK_FUNC([fgets], [], [AC_MSG_ERROR([fgets() function not found.])])\nAC_CHECK_FUNC([fork], [], [AC_MSG_ERROR([fork() function not found.])])\nAC_CHECK_FUNC([fprintf], [], [AC_MSG_ERROR([fprintf() function not found.])])\nAC_CHECK_FUNC([fputc], [], [AC_MSG_ERROR([fputc() function not found.])])\nAC_CHECK_FUNC([fputs], [], [AC_MSG_ERROR([fputs() function not found.])])\nAC_CHECK_FUNC([free], [], [AC_MSG_ERROR([free() function not found.])])\nAC_CHECK_FUNC([fwrite], [], [AC_MSG_ERROR([fwrite() function not found.])])\nAC_CHECK_FUNC([getcwd], [], [AC_MSG_ERROR([getcwd() function not found.])])\nAC_CHECK_FUNC([getenv], [], [AC_MSG_ERROR([getenv() function not found.])])\nAC_CHECK_FUNC([geteuid], [], [AC_MSG_ERROR([geteuid() function not found.])])\nAC_CHECK_FUNC([getgrent], [], [AC_MSG_ERROR([getgrent() function not found.])])\nAC_CHECK_FUNC([getgrgid], [], [AC_MSG_ERROR([getgrgid() function not found.])])\nAC_CHECK_FUNC([getgrgid_r], [], [AC_MSG_ERROR([getgrgid_r() function not found.])])\nAC_CHECK_FUNC([getgrnam], [], [AC_MSG_ERROR([getgrnam() function not found.])])\nAC_CHECK_FUNC([getpid], [], [AC_MSG_ERROR([getpid() function not found.])])\nAC_CHECK_FUNC([getppid], [], [AC_MSG_ERROR([getppid() function not found.])])\nAC_CHECK_FUNC([getpwent], [], [AC_MSG_ERROR([getpwent() function not found.])])\nAC_CHECK_FUNC([getpwnam], [], [AC_MSG_ERROR([getpwnam() function not found.])])\nAC_CHECK_FUNC([getpwuid], [], [AC_MSG_ERROR([getpwuid() function not found.])])\nAC_CHECK_FUNC([getpwuid_r], [], [AC_MSG_ERROR([getpwuid_r() function not found.])])\nAC_CHECK_FUNC([ioctl], [], [AC_MSG_ERROR([ioctl() function not found.])])\nAC_CHECK_FUNC([iswalnum], [], [AC_MSG_ERROR([iswalnum() function not found.])])\nAC_CHECK_FUNC([iswdigit], [], [AC_MSG_ERROR([iswdigit() function not found.])])\nAC_CHECK_FUNC([iswprint], [], [AC_MSG_ERROR([iswprint() function not found.])])\nAC_CHECK_FUNC([iswspace], [], [AC_MSG_ERROR([iswspace() function not found.])])\nAC_CHECK_FUNC([iswupper], [], [AC_MSG_ERROR([iswupper() function not found.])])\nAC_CHECK_FUNC([kill], [], [AC_MSG_ERROR([kill() function not found.])])\nAC_CHECK_FUNC([localtime], [], [AC_MSG_ERROR([localtime() function not found.])])\nAC_CHECK_FUNC([malloc], [], [AC_MSG_ERROR([malloc() function not found.])])\nAC_CHECK_FUNC([mbstowcs], [], [AC_MSG_ERROR([mbstowcs() function not found.])])\nAC_CHECK_FUNC([memcmp], [], [AC_MSG_ERROR([memcmp() function not found.])])\nAC_CHECK_FUNC([memcpy], [], [AC_MSG_ERROR([memcpy() function not found.])])\nAC_CHECK_FUNC([memccpy], [], [AC_MSG_ERROR([memccpy() function not found.])])\nAC_CHECK_FUNC([memmove], [], [AC_MSG_ERROR([memmove() function not found.])])\nAC_CHECK_FUNC([memset], [], [AC_MSG_ERROR([memset() function not found.])])\nAC_CHECK_FUNC([mkdir], [], [AC_MSG_ERROR([mkdir() function not found.])])\nAC_CHECK_FUNC([mkstemp], [], [AC_MSG_ERROR([mkstemp() function not found.])])\nAC_CHECK_FUNC([opendir], [], [AC_MSG_ERROR([opendir() function not found.])])\nAC_CHECK_FUNC([pathconf], [], [AC_MSG_ERROR([pathconf() function not found.])])\nAC_CHECK_FUNC([pause], [], [AC_MSG_ERROR([pause() function not found.])])\nAC_CHECK_FUNC([pclose], [], [AC_MSG_ERROR([pclose() function not found.])])\nAC_CHECK_FUNC([perror], [], [AC_MSG_ERROR([perror() function not found.])])\nAC_CHECK_FUNC([pipe], [], [AC_MSG_ERROR([pipe() function not found.])])\nAC_CHECK_FUNC([popen], [], [AC_MSG_ERROR([popen() function not found.])])\nAC_CHECK_FUNC([printf], [], [AC_MSG_ERROR([printf() function not found.])])\nAC_CHECK_FUNC([puts], [], [AC_MSG_ERROR([puts() function not found.])])\nAC_CHECK_FUNC([qsort], [], [AC_MSG_ERROR([qsort() function not found.])])\nAC_CHECK_FUNC([rand], [], [AC_MSG_ERROR([rand() function not found.])])\nAC_CHECK_FUNC([read], [], [AC_MSG_ERROR([read() function not found.])])\nAC_CHECK_FUNC([readlink], [], [AC_MSG_ERROR([readlink() function not found.])])\nAC_CHECK_FUNC([realloc], [], [AC_MSG_ERROR([realloc() function not found.])])\nAC_CHECK_FUNC([realpath], [], [AC_MSG_ERROR([realpath() function not found.])])\nAC_CHECK_FUNC([rename], [], [AC_MSG_ERROR([rename() function not found.])])\nAC_CHECK_FUNC([rmdir], [], [AC_MSG_ERROR([rmdir() function not found.])])\nAC_CHECK_FUNC([select], [], [AC_MSG_ERROR([select() function not found.])])\nAC_CHECK_FUNC([setenv], [], [AC_MSG_ERROR([setenv() function not found.])])\nAC_CHECK_FUNC([setgrent], [], [AC_MSG_ERROR([setgrent() function not found.])])\nAC_CHECK_FUNC([setlocale], [], [AC_MSG_ERROR([setlocale() function not found.])])\nAC_CHECK_FUNC([setpgid], [], [AC_MSG_ERROR([setpgid() function not found.])])\nAC_CHECK_FUNC([setpwent], [], [AC_MSG_ERROR([setpwent() function not found.])])\nAC_CHECK_FUNC([setsid], [], [AC_MSG_ERROR([setsid() function not found.])])\nAC_CHECK_FUNC([setvbuf], [], [AC_MSG_ERROR([setvbuf() function not found.])])\nAC_CHECK_FUNC([sigaction], [], [AC_MSG_ERROR([sigaction() function not found.])])\nAC_CHECK_FUNC([sigaddset], [], [AC_MSG_ERROR([sigaddset() function not found.])])\nAC_CHECK_FUNC([sigemptyset], [], [AC_MSG_ERROR([sigemptyset() function not found.])])\nAC_CHECK_FUNC([signal], [], [AC_MSG_ERROR([signal() function not found.])])\nAC_CHECK_FUNC([snprintf], [], [AC_MSG_ERROR([snprintf() function not found.])])\nAC_CHECK_FUNC([sprintf], [], [AC_MSG_ERROR([sprintf() function not found.])])\nAC_CHECK_FUNC([srand], [], [AC_MSG_ERROR([srand() function not found.])])\nAC_CHECK_FUNC([strcasecmp], [], [AC_MSG_ERROR([strcasecmp() function not found.])])\nAC_CHECK_FUNC([strcasestr], [AC_DEFINE([HAVE_STRCASESTR], [1], [strcasestr() is available.])], [])\nAC_CHECK_FUNC([strcat], [], [AC_MSG_ERROR([strcat() function not found.])])\nAC_CHECK_FUNC([strchr], [], [AC_MSG_ERROR([strchr() function not found.])])\nAC_CHECK_FUNC([strcmp], [], [AC_MSG_ERROR([strcmp() function not found.])])\nAC_CHECK_FUNC([strcpy], [], [AC_MSG_ERROR([strcpy() function not found.])])\nAC_CHECK_FUNC([strdup], [], [AC_MSG_ERROR([strdup() function not found.])])\nAC_CHECK_FUNC([strerror], [], [AC_MSG_ERROR([strerror() function not found.])])\nAC_CHECK_FUNC([strftime], [], [AC_MSG_ERROR([strftime() function not found.])])\nAC_CHECK_FUNC([strlen], [], [AC_MSG_ERROR([strlen() function not found.])])\nAC_CHECK_FUNC([strncasecmp], [], [AC_MSG_ERROR([strncasecmp() function not found.])])\nAC_CHECK_FUNC([strncat], [], [AC_MSG_ERROR([strncat() function not found.])])\nAC_CHECK_FUNC([strncmp], [], [AC_MSG_ERROR([strncmp() function not found.])])\nAC_CHECK_FUNC([strncpy], [], [AC_MSG_ERROR([strncpy() function not found.])])\nAC_CHECK_FUNC([strpbrk], [], [AC_MSG_ERROR([strpbrk() function not found.])])\nAC_CHECK_FUNC([strrchr], [], [AC_MSG_ERROR([strrchr() function not found.])])\nAC_CHECK_FUNC([strspn], [], [AC_MSG_ERROR([strspn() function not found.])])\nAC_CHECK_FUNC([strstr], [], [AC_MSG_ERROR([strstr() function not found.])])\nAC_CHECK_FUNC([strtok_r], [], [AC_MSG_ERROR([strtok_r() function not found.])])\nAC_CHECK_FUNC([strtol], [], [AC_MSG_ERROR([strtol() function not found.])])\nAC_CHECK_FUNC([strtoll], [], [AC_MSG_ERROR([strtoll() function not found.])])\nAC_CHECK_FUNC([strverscmp], [AC_DEFINE([HAVE_STRVERSCMP_FUNC], [1], [strverscmp() function is available.])])\nAC_CHECK_FUNC([sysconf], [], [AC_MSG_ERROR([sysconf() function not found.])])\nAC_CHECK_FUNC([time], [], [AC_MSG_ERROR([time() function not found.])])\nAC_CHECK_FUNC([tolower], [], [AC_MSG_ERROR([tolower() function not found.])])\nAC_CHECK_FUNC([toupper], [], [AC_MSG_ERROR([toupper() function not found.])])\nAC_CHECK_FUNC([towupper], [], [AC_MSG_ERROR([towupper() function not found.])])\nAC_CHECK_FUNC([ungetc], [], [AC_MSG_ERROR([ungetc() function not found.])])\nAC_CHECK_FUNC([unlink], [], [AC_MSG_ERROR([unlink() function not found.])])\nAC_CHECK_FUNC([unsetenv], [], [AC_MSG_ERROR([unsetenv() function not found.])])\nAC_CHECK_FUNC([utimes], [], [AC_MSG_ERROR([utimes() function not found.])])\nAC_CHECK_FUNC([vfprintf], [], [AC_MSG_ERROR([vfprintf() function not found.])])\nAC_CHECK_FUNC([vsnprintf], [], [AC_MSG_ERROR([vsnprintf() function not found.])])\nAC_CHECK_FUNC([vswprintf], [], [AC_MSG_ERROR([vswprintf() function not found.])])\nAC_CHECK_FUNC([waitpid], [], [AC_MSG_ERROR([waitpid() function not found.])])\nAC_CHECK_FUNC([wcscat], [], [AC_MSG_ERROR([wcscat() function not found.])])\nAC_CHECK_FUNC([wcscmp], [], [AC_MSG_ERROR([wcscmp() function not found.])])\nAC_CHECK_FUNC([wcscpy], [], [AC_MSG_ERROR([wcscpy() function not found.])])\nAC_CHECK_FUNC([wcslen], [], [AC_MSG_ERROR([wcslen() function not found.])])\nAC_CHECK_FUNC([wcsncmp], [], [AC_MSG_ERROR([wcsncmp() function not found.])])\nAC_CHECK_FUNC([wcsncpy], [], [AC_MSG_ERROR([wcsncpy() function not found.])])\nAC_CHECK_FUNC([wcstof], [], [AC_MSG_ERROR([wcstof() function not found.])])\nAC_CHECK_FUNC([wcstol], [], [AC_MSG_ERROR([wcstol() function not found.])])\nAC_CHECK_FUNC([wcstombs], [], [AC_MSG_ERROR([wcstombs() function not found.])])\nAC_CHECK_FUNC([wcswidth], [], [AC_MSG_ERROR([wcswidth() function not found.])])\nAC_CHECK_FUNC([wcwidth], [], [AC_MSG_ERROR([wcwidth() function not found.])])\n\nAC_CHECK_FUNCS([futimens])\nAC_CHECK_FUNCS([random srandom])\nAC_CHECK_FUNCS([reallocarray])\n\nif test -n \"$HAVE_MNTENT_H\" ; then\n    AC_CHECK_FUNC([endmntent], [], [AC_MSG_ERROR([endmntent() function not found.])])\n    AC_CHECK_FUNC([getmntent], [], [AC_MSG_ERROR([getmntent() function not found.])])\n    AC_CHECK_FUNC([setmntent], [], [AC_MSG_ERROR([setmntent() function not found.])])\nfi\n\nAC_CHECK_DECLS([_PC_CASE_SENSITIVE], [], [], [[#include <unistd.h>]])\n\ndnl Check for regex.h header, its functions, types and macros.\nAC_CHECK_HEADER([regex.h], [], [AC_MSG_ERROR([regex.h header not found.])])\nAC_CHECK_FUNC([regcomp], [], [AC_MSG_ERROR([regcomp() function not found.])])\nAC_CHECK_FUNC([regerror], [], [AC_MSG_ERROR([regerror() function not found.])])\nAC_CHECK_FUNC([regexec], [], [AC_MSG_ERROR([regexec() function not found.])])\nAC_CHECK_FUNC([regfree], [], [AC_MSG_ERROR([regfree() function not found.])])\nAC_CHECK_TYPE([regex_t], [], [AC_MSG_ERROR([regex_t type not found in regex.h])], [[#include <regex.h>]])\nAC_CHECK_DECL([REG_EXTENDED], [], [AC_MSG_ERROR([REG_EXTENDED not found in regex.h])], [[#include <regex.h>]])\nAC_CHECK_DECL([REG_ICASE], [], [AC_MSG_ERROR([REG_ICASE not found in regex.h])], [[#include <regex.h>]])\nAC_CHECK_DECL([REG_NOMATCH], [], [AC_MSG_ERROR([REG_NOMATCH not found in regex.h])], [[#include <regex.h>]])\n\nAC_CHECK_MEMBERS([struct stat.st_mtim], [], [], [[\n                  #include <sys/types.h>\n                  #include <sys/stat.h>\n                  #include <unistd.h>\n                ]])\nAC_CHECK_MEMBERS([struct dirent.d_type], [], [], [[\n                  #include <dirent.h>\n                ]])\nAC_SYS_LARGEFILE\nAC_FUNC_FSEEKO\nAC_TYPE_OFF_T\n\ndnl At least on AIX `st_atim` and `st_mtim` might not match `struct timespec`.\nif test \"$ac_cv_member_struct_stat_st_mtim\" = yes; then\n    AC_COMPILE_IFELSE([AC_LANG_SOURCE(\n                      [[#include <sys/types.h>\n                        #include <sys/stat.h>\n                        #include <unistd.h>\n                        int main() {\n                            struct stat st;\n                            struct timespec ts[2] = { st.st_atim, st.st_mtim };\n                            return 0;\n                        }\n                      ]])],\n                      [AC_DEFINE([HAVE_CONSISTENT_TIMESPEC], [1], [timespec is good.])])\nfi\n\ndnl ----------------------------------------------------------------------------\ndnl check for available tools/applications\ndnl ----------------------------------------------------------------------------\n\nAC_CHECK_PROG(HAVE_FILE_PROG, file, 1)\nif test \"x${HAVE_FILE_PROG}\" = 'x1' ; then\n    AC_DEFINE_UNQUOTED(HAVE_FILE_PROG, 1, [Define if file program present])\nfi\n\ndnl Use either groff or mandoc for generating plain text help from manual page.\nAC_CHECK_PROGS(MANGEN_PROG, [groff mandoc], [])\n\ndnl col might be used for filtering out terminal escape sequences\nAC_CHECK_PROG(COL_PROG, col, col)\n\ndnl awk is used to generate source with list of documentation tags\nAC_CHECK_PROG(AWK_PROG, awk, awk)\n\ndnl sed is used to make plain text documentation\nAC_CHECK_PROG(SED_PROG, sed, sed)\n\ndnl perl is used to generate tags from documentation\nAC_CHECK_PROG(PERL_PROG, perl, perl)\n\ndnl vim is a fallback for generating documentation tags when perl isn't there\nAC_CHECK_PROG(VIM_PROG, vim, vim)\n\nif test \"x${PERL_PROG}${VIM_PROG}\" == 'x'; then\n    AC_MSG_ERROR([Either perl or Vim is necessary to generate tags for documentation in Vim's format.])\nfi\n\ndnl check if we're building inside git repository\nAC_CHECK_PROG(GIT_PROG, git, git)\nif test \"x${GIT_PROG}\" != 'x' -a -d .git/; then\n    IN_GIT_REPO=1\nfi\nAC_SUBST([IN_GIT_REPO])\n\ndnl ----------------------------------------------------------------------------\ndnl setup various package/compilation settings\ndnl ----------------------------------------------------------------------------\n\ndnl Set PACKAGE_SYSCONF_DIR in config.h.\nif test \"x${sysconfdir}\" = 'x${prefix}/etc'; then\n  if test \"x${prefix}\" = \"xNONE\"; then\n    AC_DEFINE_UNQUOTED(PACKAGE_SYSCONF_DIR, \"${ac_default_prefix}/etc/${PACKAGE}\")\n  else\n    AC_DEFINE_UNQUOTED(PACKAGE_SYSCONF_DIR, \"${prefix}/etc/${PACKAGE}\")\n  fi\nelse\n  AC_DEFINE_UNQUOTED(PACKAGE_SYSCONF_DIR, \"${sysconfdir}/${PACKAGE}\")\nfi\n\ndnl Set PACKAGE_DATA_DIR in config.h.\nif test \"x${datadir}\" = 'x${prefix}/share'; then\n  if test \"x${prefix}\" = \"xNONE\"; then\n    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, \"${ac_default_prefix}/share/${PACKAGE}\")\n  else\n    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, \"${prefix}/share/${PACKAGE}\")\n  fi\nelse\n  if test \"x${datadir}\" = 'x${datarootdir}'; then\n    if test \"x${datarootdir}\" = 'x${prefix}/share'; then\n      if test \"x${prefix}\" = \"xNONE\"; then\n        AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, \"${ac_default_prefix}/share/${PACKAGE}\")\n      else\n        AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, \"${prefix}/share/${PACKAGE}\")\n      fi\n    fi\n  else\n    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, \"${datadir}/${PACKAGE}\")\n  fi\nfi\n\ndnl Setup suffix for data files.\nif test -n \"$OSX_HOST\" ; then\n    DATA_SUFFIX=-osx\nfi\nAC_SUBST([DATA_SUFFIX])\n\ndnl Set PACKAGE_SOURCE_DIR in config.h.\npackagesrcdir=`cd $srcdir && pwd`\nAC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, \"${packagesrcdir}\")\n\ndnl Use -Wall if available.\nAX_CHECK_COMPILE_FLAG([-Wall], [\n    case \" $CFLAGS \" in\n      *[\\ \\\t]-Wall[\\ \\\t]*) ;;\n      *) CFLAGS=\"$CFLAGS -Wall\" ;;\n    esac\n  ])\n\ndnl Define _DARWIN_C_SOURCE macro while compiling on OS X.\nif test -n \"$OSX_HOST\" ; then\n  AC_DEFINE([_DARWIN_C_SOURCE], [1],\n            [Enable extensions in header files on OS X.])\nfi\n\ndnl Use 64-bit off_t type\nAC_DEFINE([_FILE_OFFSET_BITS], [64],\n          [Enable large file processing on 32-bit systems.])\n\ndnl Use math library if present (standard doesn't require it to be separated\ndnl from libc)\nAC_CHECK_LIB(m, pow, [LIBS=\"$LIBS -lm\"])\n\ndnl Enable POSIX shared memory\nAC_CHECK_LIB(rt, shm_open, [LIBS=\"$LIBS -lrt\"])\n\ndnl Use pthread library\nAX_PTHREAD([\n             LIBS=\"$PTHREAD_LIBS $LIBS\"\n             CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n             TESTS_CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n             CC=\"$PTHREAD_CC\"\n           ], [\n             AC_MSG_ERROR([pthread not found])\n           ])\n\ndnl Check for all required elements in pthread.h.\nAC_CHECK_FUNC([pthread_create], [], [AC_MSG_ERROR([pthread_create() function not found.])])\nAC_CHECK_FUNC([pthread_getspecific], [], [AC_MSG_ERROR([pthread_getspecific() function not found.])])\nAC_CHECK_FUNC([pthread_key_create], [], [AC_MSG_ERROR([pthread_key_create() function not found.])])\nAC_CHECK_FUNC([pthread_mutex_lock], [], [AC_MSG_ERROR([pthread_mutex_lock() function not found.])])\nAC_CHECK_FUNC([pthread_mutex_unlock], [], [AC_MSG_ERROR([pthread_mutex_unlock() function not found.])])\nAC_CHECK_FUNC([pthread_setspecific], [], [AC_MSG_ERROR([pthread_setspecific() function not found.])])\nAC_CHECK_FUNC([pthread_detach], [], [AC_MSG_ERROR([pthread_detach() function not found.])])\nAC_CHECK_FUNC([pthread_self], [], [AC_MSG_ERROR([pthread_self() function not found.])])\nAC_CHECK_TYPE([pthread_t], [], [AC_MSG_ERROR([pthread_t type not found in pthread.h])], [[#include <pthread.h>]])\nAC_CHECK_TYPE([pthread_key_t], [], [AC_MSG_ERROR([pthread_key_t type not found in pthread.h])], [[#include <pthread.h>]])\nAC_CHECK_TYPE([pthread_mutex_t], [], [AC_MSG_ERROR([pthread_mutex_t type not found in pthread.h])], [[#include <pthread.h>]])\nAC_CHECK_TYPE([pthread_cond_t], [], [AC_MSG_ERROR([pthread_cond_t type not found in pthread.h])], [[#include <pthread.h>]])\nAC_CHECK_DECL([PTHREAD_MUTEX_INITIALIZER], [], [AC_MSG_ERROR([PTHREAD_MUTEX_INITIALIZER not found in pthread.h])], [[#include <pthread.h>]])\nAC_CHECK_DECL([PTHREAD_COND_INITIALIZER], [], [AC_MSG_ERROR([PTHREAD_COND_INITIALIZER not found in pthread.h])], [[#include <pthread.h>]])\n\ndnl Name of curses library file.\ncurses_lib_name=ncursesw\nAC_ARG_WITH(curses-name,\n    [  --with-curses-name=NAME name of curses library file @<:@default=ncursesw@:>@],\n    [curses_lib_name=$withval])\n\ndnl AC_CHECK_LIB(XCurses, initscr)\nvifm_cv_curses=/usr\nAC_ARG_WITH(curses, [  --with-curses=DIR       where ncurses is installed ],\n    [if test $withval != yes; then\n        vifm_cv_curses=$withval\n    fi\n    if test x$vifm_cv_curses != x/usr; then\n        LDFLAGS=\"-L${vifm_cv_curses}/lib $LDFLAGS\"\n        CPPFLAGS=\"$CPPFLAGS -I${vifm_cv_curses}/include -I${vifm_cv_curses}/include/${curses_lib_name}\"\n    fi])\n\ndnl Try to find ncurses library.\nncurses_found=no\ndnl Firstly check for lib${curses_lib_name}.\nAC_CHECK_LIB(${curses_lib_name}, initscr,\n    [LIBS=\"$LIBS -l${curses_lib_name}\"\n    if test x$vifm_cv_curses = x/usr -a -d /usr/include/${curses_lib_name}; then\n        CPPFLAGS=\"$CPPFLAGS -I/usr/include/${curses_lib_name}\"\n    fi\n    ncurses_found=yes]\n    AC_SEARCH_LIBS([curs_set], [tinfow],,\n        AC_MSG_ERROR(could not find a library providing curs_set)))\ndnl If libncursesw is not found on OS X, check for libncurses.  On OS X it has\ndnl support of wide characters.\nif test -n \"$OSX_HOST\" -a \"x$ncurses_found\" != \"xyes\"; then\n    AC_CHECK_LIB(ncurses, initscr,\n        [LIBS=\"$LIBS -lncurses\"\n        if test x$vifm_cv_curses = x/usr -a -d /usr/include/ncurses; then\n            CPPFLAGS=\"$CPPFLAGS -I/usr/include/ncurses\"\n        fi\n        ncurses_found=yes])\nfi\ndnl Quit with appropriate error message if ncurses library wasn't found.\nif test \"x$ncurses_found\" != \"xyes\"; then\n    if test -z \"$OSX_HOST\"; then\n        AC_MSG_ERROR([libncursesw not found])\n    else\n        AC_MSG_ERROR([libncursesw and libncurses not found])\n    fi\nfi\nLIBS=$LIBS $GUI_LINK_OPTS_TERM\n\ndnl Check for curses.h header and all its required elements.\nAC_CHECK_HEADER([curses.h], [], [AC_MSG_ERROR([curses.h header not found.])])\nAC_CHECK_DECL([A_ITALIC], [AC_DEFINE([HAVE_A_ITALIC_DECL], [1], [A_ITALIC attribute is available.])], [], [[#include <curses.h>]])\nAC_CHECK_DECL([COLORS], [], [AC_MSG_ERROR([COLORS not found in curses.h])], [[#include <curses.h>]])\nAC_CHECK_DECL([TABSIZE], [], [AC_MSG_ERROR([TABSIZE not found in curses.h])], [[#include <curses.h>]])\nAC_CHECK_FUNC([curs_set], [], [AC_MSG_ERROR([curs_set() function not found.])])\nAC_CHECK_FUNC([def_prog_mode], [], [AC_MSG_ERROR([def_prog_mode() function not found.])])\nAC_CHECK_FUNC([doupdate], [], [AC_MSG_ERROR([doupdate() function not found.])])\nAC_CHECK_FUNC([endwin], [], [AC_MSG_ERROR([endwin() function not found.])])\nAC_CHECK_FUNC([flushinp], [], [AC_MSG_ERROR([flushinp() function not found.])])\nAC_CHECK_FUNC([getcchar], [], [AC_MSG_ERROR([getcchar() function not found.])])\nAC_CHECK_FUNC([has_colors], [], [AC_MSG_ERROR([has_colors() function not found.])])\nAC_CHECK_FUNC([init_pair], [], [AC_MSG_ERROR([init_pair() function not found.])])\nAC_CHECK_FUNC([initscr], [], [AC_MSG_ERROR([initscr() function not found.])])\nAC_CHECK_FUNC([isendwin], [], [AC_MSG_ERROR([isendwin() function not found.])])\nAC_CHECK_FUNC([keypad], [], [AC_MSG_ERROR([keypad() function not found.])])\nAC_CHECK_FUNC([mvwin], [], [AC_MSG_ERROR([mvwin() function not found.])])\nAC_CHECK_FUNC([mvwprintw], [], [AC_MSG_ERROR([mvwprintw() function not found.])])\nAC_CHECK_FUNC([newwin], [], [AC_MSG_ERROR([newwin() function not found.])])\nAC_CHECK_FUNC([noecho], [], [AC_MSG_ERROR([noecho() function not found.])])\nAC_CHECK_FUNC([nonl], [], [AC_MSG_ERROR([nonl() function not found.])])\nAC_CHECK_FUNC([raw], [], [AC_MSG_ERROR([raw() function not found.])])\nAC_CHECK_FUNC([reset_prog_mode], [], [AC_MSG_ERROR([reset_prog_mode() function not found.])])\nAC_CHECK_FUNC([resize_term], [], [AC_MSG_ERROR([resize_term() function not found.])])\nAC_CHECK_FUNC([resizeterm], [], [AC_MSG_ERROR([resizeterm() function not found.])])\nAC_CHECK_FUNC([scrollok], [], [AC_MSG_ERROR([scrollok() function not found.])])\nAC_CHECK_FUNC([set_escdelay], [AC_DEFINE([HAVE_SET_ESCDELAY_FUNC], [1], [set_escdelay() function is available.])])\nAC_CHECK_FUNC([setcchar], [], [AC_MSG_ERROR([setcchar() function not found.])])\nAC_CHECK_FUNC([start_color], [], [AC_MSG_ERROR([start_color() function not found.])])\nAC_CHECK_FUNC([use_default_colors], [], [AC_MSG_ERROR([use_default_colors() function not found.])])\nAC_CHECK_FUNC([waddch], [], [AC_MSG_ERROR([waddch() function not found.])])\nAC_CHECK_FUNC([waddnstr], [], [AC_MSG_ERROR([waddnstr() function not found.])])\nAC_CHECK_FUNC([waddnwstr], [], [AC_MSG_ERROR([waddnwstr() function not found.])])\nAC_CHECK_FUNC([wattr_set], [], [AC_MSG_ERROR([wattr_set() function not found.])])\nAC_CHECK_FUNC([wbkgrndset], [], [AC_MSG_ERROR([wbkgrndset() function not found.])])\nAC_CHECK_FUNC([wborder], [], [AC_MSG_ERROR([wborder() function not found.])])\nAC_CHECK_FUNC([wclrtoeol], [], [AC_MSG_ERROR([wclrtoeol() function not found.])])\nAC_CHECK_FUNC([werase], [], [AC_MSG_ERROR([werase() function not found.])])\nAC_CHECK_FUNC([wget_wch], [], [AC_MSG_ERROR([wget_wch() function not found.])])\nAC_CHECK_FUNC([wgetch], [], [AC_MSG_ERROR([wgetch() function not found.])])\nAC_CHECK_FUNC([wmove], [], [AC_MSG_ERROR([wmove() function not found.])])\nAC_CHECK_FUNC([wnoutrefresh], [], [AC_MSG_ERROR([wnoutrefresh() function not found.])])\nAC_CHECK_FUNC([wprintw], [], [AC_MSG_ERROR([wprintw() function not found.])])\nAC_CHECK_FUNC([wredrawln], [], [AC_MSG_ERROR([wredrawln() function not found.])])\nAC_CHECK_FUNC([wrefresh], [], [AC_MSG_ERROR([wrefresh() function not found.])])\nAC_CHECK_FUNC([wresize], [], [AC_MSG_ERROR([wresize() function not found.])])\nAC_CHECK_FUNC([wtimeout], [], [AC_MSG_ERROR([wtimeout() function not found.])])\nAC_CHECK_FUNC([wtouchln], [], [AC_MSG_ERROR([wtouchln() function not found.])])\n\ndnl ----------------------------------------------------------------------------\ndnl check for extended colors/pairs\ndnl ----------------------------------------------------------------------------\n\nuse_extended_colors=yes\n\nAC_CHECK_FUNC([extended_pair_content], [], [use_extended_colors=no], [[#include <curses.h>]])\nAC_CHECK_FUNC([pair_content], [], [use_extended_colors=no], [[#include <curses.h>]])\n\nif test \"$use_extended_colors\" = \"yes\"; then\n    AC_DEFINE([HAVE_EXTENDED_COLORS], [1], [extended curses colors are present])\nfi\n\ndnl ----------------------------------------------------------------------------\ndnl check for inotify\ndnl ----------------------------------------------------------------------------\n\nAC_CHECK_HEADER([sys/inotify.h], [use_inotify=yes], [use_inotify=no])\n\nif test \"$use_inotify\" = \"yes\"; then\n    AC_CHECK_DECL([IN_NONBLOCK], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_CLOEXEC], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_ATTRIB], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_MODIFY], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_CREATE], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_DELETE], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_MOVED_FROM], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_MOVED_TO], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_EXCL_UNLINK], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_CLOSE_WRITE], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_DECL([IN_Q_OVERFLOW], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n    AC_CHECK_FUNC([inotify_init1], [], [use_inotify=no])\n    AC_CHECK_FUNC([inotify_add_watch], [], [use_inotify=no])\n    AC_CHECK_TYPE([struct inotify_event], [], [use_inotify=no], [[#include <sys/inotify.h>]])\n\n    if test \"$use_inotify\" = \"yes\"; then\n        AC_DEFINE([HAVE_INOTIFY], [1], [inotify is available])\n    fi\nfi\n\ndnl ----------------------------------------------------------------------------\ndnl check for extended file attributes\ndnl ----------------------------------------------------------------------------\n\nAC_CHECK_HEADER([sys/xattr.h], [use_xattrs=yes], [use_xattrs=no])\n\nif test \"$use_xattrs\" = \"yes\"; then\n    AC_CHECK_FUNC([lgetxattr], [], [use_xattrs=no], [[\n                    #include <sys/types.h>\n                    #include <sys/xattr.h>\n                  ]])\n    AC_CHECK_FUNC([llistxattr], [], [use_xattrs=no], [[\n                    #include <sys/types.h>\n                    #include <sys/xattr.h>\n                  ]])\n    AC_CHECK_FUNC([lsetxattr], [], [use_xattrs=no], [[\n                    #include <sys/types.h>\n                    #include <sys/xattr.h>\n                  ]])\n    AC_COMPILE_IFELSE([AC_LANG_SOURCE([[\n    #include <sys/types.h>\n    #include <sys/xattr.h>\n    int main() {\n        return XATTR_CREATE;\n    }\n    ]])], [], [use_xattrs=\"no\"])\n\n    if test \"$use_xattrs\" = \"yes\"; then\n        AC_DEFINE([HAVE_XATTRS], [1], [extended file attributes are available])\n    fi\nfi\n\ndnl ----------------------------------------------------------------------------\ndnl check for gnu coreutils version\ndnl ----------------------------------------------------------------------------\n\nversion=\"$(mv --version 2> /dev/null | sed -ne 's/^.*(GNU coreutils) //p')\"\n\nmajor=\"${version%.*}\"\nminor=\"${version#*.}\"\n\nif test \"x$major\" != \"x\" -a \"x$minor\" != \"x\" ; then\n    if test $major -eq 7 -a $minor -ge 1 -o $major -gt 7; then\n        AC_DEFINE([SUPPORT_NO_CLOBBER], [1], [-n option is available for cp and mv])\n    fi\n    if test $major -eq 7 -a $minor -ge 6 -o $major -gt 7; then\n        AC_DEFINE([SUPPORT_REFLINK_AUTO], [1], [--reflink=auto option is available for cp])\n    fi\nfi\n\ndnl ----------------------------------------------------------------------------\ndnl checks for external libraries\ndnl ----------------------------------------------------------------------------\n\nAC_ARG_WITH(glib,\n    AS_HELP_STRING([--with-glib],\n        [use GLib2 to determine mimetypes if available @<:@default=yes@:>@]),\n    [use_glib=$withval],\n    [use_glib=yes])\ndnl for backward compatibility\nAC_ARG_WITH(gtk,\n    AS_HELP_STRING([--with-gtk],\n        [(obsolete name of --with-glib) use GLib2 to determine mimetypes if available @<:@default=yes@:>@]),\n    [use_gtk=$withval],\n    [use_gtk=use_glib])\nif test \"x$use_gtk\" != \"xuse_glib\"; then\n    AC_MSG_WARN([\"--with(out)-gtk flag is obsolete, please use --with(out)-glib instead\"])\n    use_glib=$use_gtk\nfi\n\nAC_ARG_WITH(libmagic,\n    AS_HELP_STRING([--with-libmagic],\n        [use libmagic to determine mimetypes if available @<:@default=yes@:>@]),\n    [use_libmagic=$withval],\n    [use_libmagic=yes])\n\nAC_ARG_WITH(X11,\n    AS_HELP_STRING([--with-X11],\n        [use libX11 to determine terminal emulator title  @<:@default=yes@:>@]),\n    [use_libX11=$withval],\n    [use_libX11=yes])\n\nAC_ARG_WITH(dyn-X11,\n    AS_HELP_STRING([--with-dyn-X11],\n        [load libX11 dynamically @<:@default=yes@:>@]),\n    [use_dyn_libX11=$withval],\n    [use_dyn_libX11=yes])\n\ndnl ----------------------------------------------------------------------------\ndnl checks for mimetype detection\ndnl ----------------------------------------------------------------------------\n\nif test \"$use_glib\" = \"yes\"; then\n    if test \"x$(which pkg-config)\" != \"x\"; then\n        if pkg-config --exists glib-2.0 gio-2.0; then\n            CFLAGS=\"$CFLAGS $(pkg-config --cflags glib-2.0 gio-2.0)\"\n            LIBS=\"$LIBS $(pkg-config --libs glib-2.0 gio-2.0)\"\n            AC_CHECK_HEADER([gio/gio.h], [], [AC_MSG_ERROR([gio/gio.h header not found.])], [[#include <gio/gio.h>]])\n            AC_CHECK_HEADER([glib.h], [], [AC_MSG_ERROR([glib.h header not found.])], [[#include <glib.h>]])\n            AC_CHECK_FUNC([g_file_info_get_content_type], [], [AC_MSG_ERROR([g_file_info_get_content_type() function not found.])])\n            AC_CHECK_FUNC([g_file_new_for_path], [], [AC_MSG_ERROR([g_file_new_for_path() function not found.])])\n            AC_CHECK_FUNC([g_file_query_info], [], [AC_MSG_ERROR([g_file_query_info() function not found.])])\n            AC_CHECK_FUNC([g_object_unref], [], [AC_MSG_ERROR([g_object_unref() function not found.])])\n            AC_DEFINE([HAVE_GLIB], [1], [use glib2 to determine mime type])\n        else\n            AC_MSG_WARN([\"Could not find glib-2.0/gio-2.0 via pkg-config.  No GLib support.\"])\n        fi\n    else\n        AC_MSG_WARN([\"Could not find pkg-config.  No GLib support.\"])\n    fi\nfi\n\nif test \"$use_libmagic\" = \"yes\"; then\n    AC_CHECK_LIB(magic, magic_open,\n        [LIBS=\"$LIBS -lmagic\"\n         AC_CHECK_FUNC([magic_close], [], [AC_MSG_ERROR([magic_close() function not found.])])\n         AC_CHECK_FUNC([magic_file], [], [AC_MSG_ERROR([magic_file() function not found.])])\n         AC_CHECK_FUNC([magic_load], [], [AC_MSG_ERROR([magic_load() function not found.])])\n         AC_CHECK_FUNC([magic_open], [], [AC_MSG_ERROR([magic_open() function not found.])])\n         AC_CHECK_HEADER([magic.h], [], [AC_MSG_ERROR([magic.h header not found.])])\n         AC_CHECK_DECLS([MAGIC_MIME_TYPE], [], [], [[#include <magic.h>]])\n         AC_DEFINE([HAVE_LIBMAGIC], [1], [Define to 1 if you have the `magic' library (-lmagic).])])\nfi\n\ndnl ----------------------------------------------------------------------------\ndnl handle options\ndnl ----------------------------------------------------------------------------\n\nAC_ARG_ENABLE(extended_keys,\n    AS_HELP_STRING(\n        [--disable-extended-keys],\n        [disable extended keys (like arrows, home etc.). Without it will be no\n         delay after pressing escape @<:@default=enabled@:>@     ]),\n    [extended_keys=$enableval],\n    [extended_keys=yes])\n\nAC_ARG_ENABLE(desktop_files,\n    AS_HELP_STRING(\n        [--disable-desktop-files],\n        [disable parsing of *.desktop files found on your system to get a list\n         of programs associated with filetypes @<:@default=enabled@:>@     ]),\n    [desktop_files=$enableval],\n    [desktop_files=yes])\n\nAC_ARG_ENABLE(remote_cmds,\n    AS_HELP_STRING(\n        [--enable-remote-cmds],\n        [enable remote command sending.\n         @<:@default=enabled@:>@     ]),\n    [remote_cmds=$enableval],\n    [remote_cmds=yes])\n\nAC_ARG_ENABLE(developer,\n    AS_HELP_STRING(\n        [--enable-developer],\n        [enables features of interest to developers\n         @<:@default=disabled@:>@     ]),\n    [developer=$enableval],\n    [developer=no])\n\nAC_ARG_ENABLE(werror,\n    AS_HELP_STRING(\n        [--enable-werror],\n        [pass -Werror flag to compiler\n         @<:@default=disabled@:>@     ]),\n    [werror=$enableval],\n    [werror=no])\n\nAC_ARG_ENABLE(coverage,\n    AS_HELP_STRING(\n        [--enable-coverage],\n        [enables coverage information generation\n         @<:@default=disabled@:>@     ]),\n    [coverage=$enableval],\n    [coverage=no])\n\nAC_ARG_ENABLE(build-timestamp,\n    AS_HELP_STRING(\n        [--disable-build-timestamp],\n        [disables embedding build-timestamp information into executable\n         @<:@default=enabled@:>@     ]),\n    [build_timestamp=$enableval],\n    [build_timestamp=yes])\n\nAC_ARG_WITH(sanitize,\n    AS_HELP_STRING(\n            [--with-sanitize=basic|thread|leak],\n            [enables sanitizers, \"basic\" means address and undefined sanitizers\n             @<:@default=@:>@     ]),\n    [sanitize=$withval])\n\nif test \"$extended_keys\" = \"yes\"; then\n    AC_DEFINE([ENABLE_EXTENDED_KEYS], [1], [enables extended keys (arrows etc.)])\nfi\n\nif test \"$desktop_files\" = \"yes\"; then\n    AC_DEFINE([ENABLE_DESKTOP_FILES], [1], [parsing of .desktop files])\nfi\n\nif test \"$remote_cmds\" = \"yes\"; then\n    AC_DEFINE([ENABLE_REMOTE_CMDS], [1], [executing commands remotely])\nfi\n\nif test \"$use_dyn_libX11\" = \"yes\"; then\n    ORIG_LIBS=\"$LIBS\"\n    AC_CHECK_LIB(dl, dlopen,\n                 [\n                 use_dyn_libX11=yes\n                 LIBS=\"$LIBS -ldl\"\n                 ], [use_dyn_libX11=no])\n\n    AC_CHECK_HEADER([dlfcn.h], [], [use_dyn_libX11=no])\n    AC_CHECK_FUNC([dlsym], [], [use_dyn_libX11=no])\n    AC_CHECK_FUNC([dlclose], [], [use_dyn_libX11=no])\n\n    if test \"$use_dyn_libX11\" != \"yes\"; then\n        LIBS=\"$ORIG_LIBS\"\n        AC_MSG_WARN([\"libdl seems to don't work as expected.  No dynamic X11.\"])\n    fi\nfi\n\nif test \"$use_libX11\" = \"yes\"; then\n    AC_CHECK_LIB(X11, XOpenDisplay,\n        [\n        AC_CHECK_HEADER([X11/Xlib.h], [], [AC_MSG_ERROR([X11/Xlib.h header not found.])])\n        AC_CHECK_HEADER([X11/Xutil.h], [], [AC_MSG_ERROR([X11/Xutil.h header not found.])])\n        AC_DEFINE([HAVE_X11], [1], [use X11 to determine terminal emulator title])\n        if test \"$use_dyn_libX11\" = \"yes\"; then\n            AC_DEFINE([DYN_X11], [1], [load libX11 dynamically])\n        else\n            LIBS=\"$LIBS -lX11\"\n        fi\n        ])\nfi\n\nWERROR_TUNING=\"-Wno-error=deprecated-declarations -Werror=sign-compare -Wno-unused-parameter\"\n\nif test \"$developer\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -g -O0 -Werror $WERROR_TUNING\"\n    TESTS_CFLAGS=\"$TESTS_CFLAGS -Werror $WERROR_TUNING\"\nfi\n\nif test \"$werror\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -Werror $WERROR_TUNING\"\n    TESTS_CFLAGS=\"$TESTS_CFLAGS -Werror $WERROR_TUNING\"\nfi\n\nif test \"$coverage\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -O0 --coverage\"\n    LDFLAGS=\"$LDFLAGS --coverage\"\nfi\n\nif test \"$build_timestamp\" = \"yes\"; then\n    AC_DEFINE([WITH_BUILD_TIMESTAMP], [1],\n              [Define to 1 to embed compilation date into executable.])\nfi\n\ndnl Handle sanitizers options\nif test -n \"$sanitize\" -a \"$sanitize\" != \"basic\" -a \"$sanitize\" != \"thread\" -a \\\n    \"$sanitize\" != \"leak\"; then\n    AC_MSG_ERROR([Unknown type of sanitizing: $sanitize])\nfi\nif test \"$sanitize\" = \"basic\"; then\n    SANITIZERS_CFLAGS=\"-fsanitize=address -fsanitize=undefined\"\nfi\nif test \"$sanitize\" = \"thread\"; then\n    SANITIZERS_CFLAGS=\"-fsanitize=thread -fPIC\"\n    LDFLAGS=\"$LDFLAGS -pie\"\nfi\nif test \"$sanitize\" = \"leak\"; then\n    LDFLAGS=\"$LDFLAGS -fsanitize=leak\"\nfi\ndnl The flags should be available separately for fetching on building tests.\nAC_SUBST([SANITIZERS_CFLAGS])\nCFLAGS=\"$CFLAGS $SANITIZERS_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $SANITIZERS_CFLAGS\"\n\ndnl Include config.h in all translation units implicitly\nCFLAGS=\"$CFLAGS -include ../build-aux/config.h\"\n\nAC_CONFIG_FILES([\nMakefile\nsrc/Makefile\n])\nAC_OUTPUT\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}